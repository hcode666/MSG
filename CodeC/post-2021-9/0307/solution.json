["t = int(input())\nfor i in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    dic = {}\n    for i in L:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    (count, temp, total) = (0, 0, 0)\n    for values in dic.values():\n        count = values % 2\n        temp += count\n        total += values + count\n    total = total % 4\n    print(total + temp)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a.copy()\n    b = list(set(b))\n    dic = []\n    for x in b:\n        dic.append(a.count(x) % 4)\n    ones = dic.count(1)\n    twos = dic.count(2) % 2\n    threes = dic.count(3)\n    if twos == 0:\n        print(threes + ones // 2 * 2 + ones % 2 * 3)\n    elif ones % 2 == 0:\n        print(threes + ones // 2 * 2 + 2)\n    else:\n        print(threes + ones // 2 * 2 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a.copy()\n    b = list(set(b))\n    dic = []\n    for x in b:\n        dic.append(a.count(x) % 4)\n    ones = dic.count(1)\n    twos = dic.count(2) % 2\n    threes = dic.count(3)\n    if twos == 0:\n        print(threes + ones // 2 * 2 + ones % 2 * 3)\n    elif ones % 2 == 0:\n        print(threes + ones // 2 * 2 + 2)\n    else:\n        print(threes + ones // 2 * 2 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = len(l)\n    l.sort()\n    if len(l) == 1:\n        print(3)\n    elif len(l) == 2:\n        print(2)\n    else:\n        for i in l:\n            if l.count(i) % 2 == 1:\n                l.append(i)\n        if len(l) % 4 == 0:\n            print(len(l) - a)\n        else:\n            print(len(l) + 2 - a)", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    Li = list(map(int, input().split()))\n    l = []\n    Li.sort()\n    for i in Li:\n        if Li.count(i) % 2 != 0:\n            Li.append(i)\n    if len(Li) % 4 == 0:\n        print(len(Li) - N)\n    else:\n        print(len(Li) - N + 2)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = len(l)\n    (p, k) = (0, 0)\n    if len(l) == 1:\n        print(3)\n    elif len(l) == 2:\n        print(2)\n    else:\n        l.sort()\n        for i in l:\n            if l.count(i) % 2 == 1:\n                l.append(i)\n        if len(l) % 4 == 0:\n            print(len(l) - m)\n        else:\n            print(len(l) + 2 - m)", "from collections import defaultdict\np = int(input())\na = 1\nwhile p:\n    e = defaultdict(lambda : 0)\n    f = int(input())\n    d = 0\n    g = list(map(int, input().split()))\n    for b in g:\n        e[b] += a\n    for b in e.keys():\n        if e[b] % (2 * a) != 0:\n            d += a\n    c = len(g) + d\n    while c % (4 * a) != 0:\n        c += a\n        d += a\n    print(d)\n    p -= 1", "from collections import defaultdict\np = int(input())\na = 1\nwhile p:\n    e = defaultdict(lambda : 0)\n    f = int(input())\n    d = 0\n    g = list(map(int, input().split()))\n    for b in g:\n        e[b] += a\n    for b in e.keys():\n        if e[b] % (2 * a) != 0:\n            d += a\n    c = len(g) + d\n    while c % (4 * a) != 0:\n        c += a\n        d += a\n    print(d)\n    p -= 1", "from collections import defaultdict\np = int(input())\na = 1\nwhile p:\n    e = defaultdict(lambda : 0)\n    f = int(input())\n    d = 0\n    g = list(map(int, input().split()))\n    for b in g:\n        e[b] += a\n    for b in e.keys():\n        if e[b] % (2 * a) != 0:\n            d += a\n    c = len(g) + d\n    while c % (4 * a) != 0:\n        c += a\n        d += a\n    print(d)\n    p -= 1", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    length_arr = [0] * 101\n    for j in arr:\n        length_arr[j] += 1\n        length_arr[j] %= 4\n    one_count_lengths = 0\n    two_count_lengths = 0\n    ans = 0\n    for j in range(101):\n        if length_arr[j] == 1:\n            one_count_lengths += 1\n        elif length_arr[j] == 2:\n            two_count_lengths += 1\n        elif length_arr[j] == 3:\n            ans += 1\n    ans += one_count_lengths // 2 * 2\n    one_count_lengths %= 2\n    if two_count_lengths & 1:\n        if one_count_lengths:\n            ans += 1\n            one_count_lengths -= 1\n        else:\n            ans += 2\n    if one_count_lengths:\n        ans += 3\n    print(ans)", "from collections import defaultdict\np = int(input())\na = 1\nwhile p:\n    e = defaultdict(lambda : 0)\n    f = int(input())\n    d = 0\n    g = list(map(int, input().split()))\n    for b in g:\n        e[b] += a\n    for b in e.keys():\n        if e[b] % (2 * a) != 0:\n            d += a\n    c = len(g) + d\n    while c % (4 * a) != 0:\n        c += a\n        d += a\n    print(d)\n    p -= 1", "from collections import defaultdict\np = int(input())\na = 1\nwhile p:\n    e = defaultdict(lambda : 0)\n    f = int(input())\n    d = 0\n    g = list(map(int, input().split()))\n    for b in g:\n        e[b] += a\n    for b in e.keys():\n        if e[b] % (2 * a) != 0:\n            d += a\n    c = len(g) + d\n    while c % (4 * a) != 0:\n        c += a\n        d += a\n    print(d)\n    p -= 1", "from collections import defaultdict\np = int(input())\na = 1\nwhile p:\n    e = defaultdict(lambda : 0)\n    f = int(input())\n    d = 0\n    g = list(map(int, input().split()))\n    for b in g:\n        e[b] += a\n    for b in e.keys():\n        if e[b] % (2 * a) != 0:\n            d += a\n    c = len(g) + d\n    while c % (4 * a) != 0:\n        c += a\n        d += a\n    print(d)\n    p -= 1", "from collections import defaultdict\np = int(input())\na = 1\nwhile p:\n    e = defaultdict(lambda : 0)\n    f = int(input())\n    d = 0\n    g = list(map(int, input().split()))\n    for b in g:\n        e[b] += a\n    for b in e.keys():\n        if e[b] % (2 * a) != 0:\n            d += a\n    c = len(g) + d\n    while c % (4 * a) != 0:\n        c += a\n        d += a\n    print(d)\n    p -= 1", "for _ in range(int(input())):\n    n = int(input())\n    Li = list(map(int, input().split()))\n    Mi = set(Li)\n    count = 0\n    for i in Mi:\n        if Li.count(i) & 1:\n            count += 1\n    count += (len(Li) + count) % 4\n    print(count)", "import math\nfrom bisect import bisect_left\nfrom code import interact\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nfrom pydoc import plain\nfrom re import X\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor t1 in range(ii()):\n    count = 0\n    n = ii()\n    my_list = il()\n    freq = {}\n    for items in my_list:\n        freq[items] = my_list.count(items)\n    for i in set(my_list):\n        if freq[i] % 2 != 0:\n            count += 1\n    print(count + (len(my_list) + count) % 4)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set(a)\n    (c, s) = (0, 0)\n    for j in b:\n        x = a.count(j)\n        if x % 2 == 1:\n            if x == 1:\n                c += 1\n                s += 1\n            else:\n                c += x // 2 + 1\n                s += 1\n        else:\n            c += x // 2\n    if c % 2 == 1:\n        s += 2\n    print(s)", "from math import ceil\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set(a)\n    (count1, total) = (0, 0)\n    for i in b:\n        c = a.count(i)\n        if c % 2 == 1:\n            count1 += ceil(c / 2)\n            total += 1\n        else:\n            count1 += c // 2\n    if count1 % 2 == 1:\n        total += 2\n    print(total)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set(a)\n    (count1, total) = (0, 0)\n    for i in b:\n        c = a.count(i)\n        if c % 2 == 1:\n            if c == 1:\n                count1 += 1\n                total += 1\n            else:\n                count1 += c // 2 + 1\n                total += 1\n        else:\n            count1 += c // 2\n    if count1 % 2 == 1:\n        total += 2\n    print(total)", "from collections import defaultdict\np = int(input())\na = 1\nwhile p:\n    e = defaultdict(lambda : 0)\n    f = int(input())\n    d = 0\n    g = list(map(int, input().split()))\n    for b in g:\n        e[b] += a\n    for b in e.keys():\n        if e[b] % (2 * a) != 0:\n            d += a\n    c = len(g) + d\n    while c % (4 * a) != 0:\n        c += a\n        d += a\n    print(d)\n    p -= 1", "from collections import defaultdict\np = int(input())\na = 1\nwhile p:\n    e = defaultdict(lambda : 0)\n    f = int(input())\n    d = 0\n    g = list(map(int, input().split()))\n    for b in g:\n        e[b] += a\n    for b in e.keys():\n        if e[b] % (2 * a) != 0:\n            d += a\n    c = len(g) + d\n    while c % (4 * a) != 0:\n        c += a\n        d += a\n    print(d)\n    p -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    f = [0] * 101\n    for i in l:\n        x = (f[i] + 1) % 4\n        f[i] = x\n    c2 = 0\n    c1 = 0\n    for i in range(101):\n        if f[i] == 3:\n            c2 += 2\n            c1 += 1\n        elif f[i] == 2:\n            c2 += 2\n        elif f[i] == 1:\n            c1 += 1\n    ans = 0\n    if c2 % 4 == 2:\n        (c1, ans) = (c1 - 1, ans + 1) if c1 > 0 else (0, ans + 2)\n    if c1 > 0:\n        ans += c1 - 1 + 3 if c1 % 2 else c1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    f = [0] * 101\n    for i in l:\n        x = (f[i] + 1) % 4\n        f[i] = x\n    c2 = 0\n    c1 = 0\n    for i in range(101):\n        if f[i] == 3:\n            c2 += 2\n            c1 += 1\n        elif f[i] == 2:\n            c2 += 2\n        elif f[i] == 1:\n            c1 += 1\n    ans = 0\n    if c2 % 4 == 2:\n        (c1, ans) = (c1 - 1, ans + 1) if c1 > 0 else (0, ans + 2)\n    if c1 > 0:\n        ans += c1 - 1 + 3 if c1 % 2 else c1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    f = [0] * 101\n    for i in l:\n        x = (f[i] + 1) % 4\n        f[i] = x\n    c2 = 0\n    c1 = 0\n    for i in range(101):\n        if f[i] == 3:\n            c2 += 2\n            c1 += 1\n        elif f[i] == 2:\n            c2 += 2\n        elif f[i] == 1:\n            c1 += 1\n    ans = 0\n    if c2 % 4 == 2:\n        if c1 > 0:\n            c1 -= 1\n            ans += 1\n        else:\n            ans += 2\n    if c1 > 0:\n        ans += c1 - 1 + 3 if c1 % 2 else c1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    f = [0] * 101\n    for i in l:\n        x = (f[i] + 1) % 4\n        f[i] = x\n    c2 = 0\n    c1 = 0\n    for i in range(101):\n        if f[i] == 3:\n            c2 += 2\n            c1 += 1\n        elif f[i] == 2:\n            c2 += 2\n        elif f[i] == 1:\n            c1 += 1\n    ans = 0\n    if c2 % 4 == 2:\n        if c1 > 0:\n            c1 -= 1\n            ans += 1\n            if c1 % 2:\n                ans = ans + (c1 - 1 + 3)\n            else:\n                ans = ans + c1\n        else:\n            ans += 2\n    elif c1 > 0:\n        if c1 % 2:\n            ans = ans + (c1 - 1 + 3)\n        else:\n            ans = ans + c1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    f = [0] * 101\n    for i in l:\n        x = (f[i] + 1) % 4\n        f[i] = x\n    c2 = 0\n    c1 = 0\n    for i in range(101):\n        if f[i] == 3:\n            c2 += 2\n            c1 += 1\n        elif f[i] == 2:\n            c2 += 2\n        elif f[i] == 1:\n            c1 += 1\n    ans = 0\n    if c2 % 4 == 2:\n        if c1 > 0:\n            c1 -= 1\n            ans += 1\n        else:\n            ans += 2\n    if c1 > 0:\n        if c1 % 2:\n            ans = ans + (c1 - 1 + 3)\n        else:\n            ans = ans + c1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    f = [0] * 101\n    for i in l:\n        x = (f[i] + 1) % 4\n        f[i] = x\n    c2 = 0\n    c1 = 0\n    for i in range(101):\n        if f[i] == 3:\n            c2 += 2\n            c1 += 1\n        elif f[i] == 2:\n            c2 += 2\n        elif f[i] == 1:\n            c1 += 1\n    ans = 0\n    if c2 % 4 == 2:\n        if c1 > 0:\n            c1 -= 1\n            ans += 1\n            if c1 % 2:\n                ans = ans + (c1 - 1 + 3)\n            else:\n                ans = ans + c1\n        else:\n            ans += 2\n    elif c1 > 0:\n        if c1 % 2:\n            ans = ans + (c1 - 1 + 3)\n        else:\n            ans = ans + c1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    f = [0] * 101\n    for i in l:\n        x = (f[i] + 1) % 4\n        f[i] = x\n    c2 = 0\n    c1 = 0\n    for i in range(101):\n        if f[i] == 3:\n            c2 += 2\n            c1 += 1\n        elif f[i] == 2:\n            c2 += 2\n        elif f[i] == 1:\n            c1 += 1\n    ans = 0\n    if c2 % 4 == 2:\n        if c1 > 0:\n            c1 -= 1\n            ans += 1\n            if c1 % 2:\n                ans = ans + (c1 - 1 + 3)\n            else:\n                ans = ans + c1\n        else:\n            ans += 2\n    elif c1 > 0:\n        if c1 % 2:\n            ans = ans + (c1 - 1 + 3)\n        else:\n            ans = ans + c1\n    print(ans)", "T = int(input())\nfor t in range(T):\n    num = int(input())\n    L = [int(i) for i in input().split()]\n    d = dict()\n    for i in L:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    count = 0\n    for i in d:\n        if d[i] % 2 != 0:\n            count += 1\n    if (num + count) % 4 != 0:\n        count += 2\n    print(count)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for y in l:\n        if d.get(y):\n            d[y] += 1\n        else:\n            d[y] = 1\n    count = 0\n    for m in d:\n        if d[m] % 2 == 1:\n            count += 1\n    if (count + n) % 4 == 0:\n        print(count)\n    else:\n        print(count + 2)", "for _ in range(int(input())):\n    n = int(input())\n    li = [0] * 100\n    for i in input().split():\n        li[int(i) - 1] += 1\n    c = 0\n    cont = 0\n    for i in range(100):\n        if li[i] != 0:\n            if li[i] % 2 == 1:\n                li[i] += 1\n                cont += 1\n            c += li[i] // 2\n    if c % 2 == 0:\n        print(cont)\n    else:\n        print(cont + 2)", "for i in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    d = {}\n    x = len(arr)\n    for i in arr:\n        d[i] = d.get(i, 0) + 1\n    cnt = 0\n    for i in d:\n        if d[i] % 2 != 0:\n            cnt += 1\n    x += cnt\n    if x % 4 == 0:\n        print(cnt)\n    else:\n        rem = 4 - x % 4\n        print(rem + cnt)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    o = {x: 0 for x in l}\n    for item in l:\n        o[item] += 1\n    for (key, value) in o.items():\n        if value % 2 == 1:\n            o[key] += 1\n    total = sum(o.values())\n    if total % 4 != 0:\n        print(total - n + 2)\n    else:\n        print(total - n)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    count_1 = 0\n    count = 0\n    count_2 = 0\n    count_3 = 0\n    for i in arr:\n        if d.get(i) == None:\n            d[i] = 1\n        else:\n            d[i] += 1\n    for i in d:\n        if d[i] % 4 == 0:\n            continue\n        elif d[i] % 4 == 1:\n            count_1 += 1\n        elif d[i] % 4 == 2:\n            count_2 += 1\n        else:\n            count_3 += 1\n    if count_2 % 2 != 0:\n        count_2 = 1\n    else:\n        count_2 = 0\n    if count_1 > 0:\n        if count_1 % 2 == 0:\n            count += count_1 // 2 * 2\n        else:\n            count += count_1 // 2 * 2 + abs(2 * count_2 - 3)\n            if count_2 == 1:\n                count_2 = 0\n    count += count_3\n    count += count_2 * 2\n    print(count)\n    t -= 1", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    count = []\n    for i in set(L):\n        count.append(L.count(i))\n    res = 0\n    for i in count:\n        res += i % 2\n    temp = res + len(L)\n    res += temp % 4\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = map(int, input().split())\n    d = [0] * 101\n    if n <= 2:\n        print(4 - n)\n    else:\n        res = 0\n        count = 0\n        for c in a:\n            d[c] += 1\n        for i in d:\n            res += i % 2\n            count += i\n        count += res\n        if count % 4 != 0:\n            res += 4 - count % 4\n        print(res)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    L = [int(x) for x in input().split()]\n    if N == 1:\n        print(3)\n    elif N == 2:\n        print(2)\n    else:\n        my_dict = dict(((x, L.count(x)) for x in set(L) if L.count(x) & 1))\n        if (N + len(my_dict.keys())) % 4 == 0:\n            print(len(my_dict.keys()))\n        else:\n            print(len(my_dict.keys()) + 2)", "from collections import Counter\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    val = list(Counter(a).values())\n    ct = 0\n    for i in val:\n        if i % 2 != 0:\n            ct += 1\n    if (n + ct) % 4 != 0:\n        ct = ct + (n + ct) % 4\n    print(ct)", "from collections import defaultdict\nyyyyyyyyy = 1\ny = int(input())\nfor yy in range(y):\n    yyy = defaultdict(lambda : 0)\n    (yyyy, yyyyy) = (int(input()), yyyyyyyyy - yyyyyyyyy)\n    yyyyyy = list(map(int, input().split()))\n    for yyyyyyy in yyyyyy:\n        yyy[yyyyyyy] += yyyyyyyyy\n    for yyyyyyy in yyy.keys():\n        if yyy[yyyyyyy] % (yyyyyyyyy + yyyyyyyyy) != yyyyyyyyy - yyyyyyyyy:\n            yyyyy += yyyyyyyyy\n    yyyyyyyy = len(yyyyyy) + yyyyy\n    while yyyyyyyy % (yyyyyyyyy + yyyyyyyyy + yyyyyyyyy + yyyyyyyyy) != yyyyyyyyy - yyyyyyyyy:\n        yyyyyyyy += yyyyyyyyy\n        yyyyy += yyyyyyyyy\n    print(yyyyy)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    nli = list(map(int, input().split()))\n    sln = len(set(nli))\n    counts = Counter(nli)\n    no_of_odds = 0\n    for (key, value) in counts.items():\n        if value % 2 == 1:\n            no_of_odds += 1\n    sticks_to_be_added = no_of_odds\n    if (n + sticks_to_be_added) % 4 != 0:\n        sticks_to_be_added += 2\n    print(sticks_to_be_added)", "for i in range(int(input())):\n    x = int(input())\n    arr = [int(i) for i in input().split()]\n    cnt = 0\n    ans = 0\n    while len(arr) > 0:\n        t = arr.pop()\n        if t in arr:\n            arr.remove(t)\n            cnt += 2\n        else:\n            ans += 1\n            cnt += 2\n        if cnt == 4:\n            cnt = 0\n    if cnt != 4 and cnt != 0:\n        ans += 2\n    print(ans)", "from collections import Counter\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    dic = {}\n    dic = Counter(l)\n    sum = 0\n    count = 0\n    for i in dic.values():\n        sum = sum + i\n        if i % 2 != 0:\n            sum = sum + 1\n            count = count + 1\n    if sum % 4 != 0:\n        count = count + 2\n    print(count)\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = 0\n    l = list(map(int, input().strip().split(' ')))\n    p = sorted(set(l))\n    for j in p:\n        b = l.count(j)\n        if b % 2 != 0:\n            s = s + 1\n    if (n + s) % 4 == 0:\n        print(s)\n    else:\n        print(s + 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = 0\n    l = list(map(int, input().strip().split(' ')))\n    p = sorted(set(l))\n    for j in p:\n        b = l.count(j)\n        if b % 2 != 0:\n            s = s + 1\n    if (n + s) % 4 == 0:\n        print(s)\n    else:\n        print(s + 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    s = sorted(set(ls))\n    a = 0\n    for x in s:\n        c = ls.count(x)\n        if c % 2 != 0:\n            a += 1\n    if (n + a) % 4 == 0:\n        print(a)\n    else:\n        print(a + 2)", "from collections import Counter\nfor x in range(int(input())):\n    N = int(input())\n    L = list(map(int, input().split()))\n    sticks_pairs = Counter(L)\n    sticks_needed = 0\n    for (stick, count) in sticks_pairs.items():\n        if count % 2 != 0:\n            sticks_needed = sticks_needed + 1\n    print((len(L) + sticks_needed) % 4 + sticks_needed)", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    dict = {}\n    for i in range(len(li)):\n        if li[i] in dict:\n            dict[li[i]] += 1\n        else:\n            dict[li[i]] = 1\n    count = 0\n    for i in dict.values():\n        if i % 2 != 0:\n            count += 1\n    ans = n + count\n    if ans % 4 == 0:\n        print(ans - n)\n    else:\n        ans += 4 - ans % 4\n        print(ans - n)", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    dict = {}\n    for i in range(len(li)):\n        if li[i] in dict:\n            dict[li[i]] += 1\n        else:\n            dict[li[i]] = 1\n    count = 0\n    for i in dict.values():\n        if i % 2 != 0:\n            count += 1\n    ans = n + count\n    if ans % 4 == 0:\n        print(ans - n)\n    else:\n        ans += 4 - ans % 4\n        print(ans - n)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = set(b)\n    d = 0\n    if a < 3:\n        print(4 - a)\n    else:\n        for i in c:\n            if b.count(i) % 2 != 0:\n                d += 1\n        if (d + a) % 4 == 0:\n            print(d)\n        else:\n            print(d + 2)", "from collections import defaultdict\nc = 1\nflag = 0\nfor _ in range(int(input())):\n    dic = defaultdict(lambda : 0)\n    (x, sticks_needed) = (int(input()), c - c)\n    arr = list(map(int, input().split()))\n    for i in arr:\n        dic[i] += c\n        flag += 1\n    for i in dic.keys():\n        if dic[i] % (c + c) != c - c:\n            sticks_needed += c\n    a = len(arr) + sticks_needed\n    while a % (c + c + c + c) != c - c:\n        a += c\n        sticks_needed += c\n    print(sticks_needed)", "for _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    s1 = set(list1)\n    ans = 0\n    if n < 3:\n        print(abs(n - 4))\n    else:\n        for i in s1:\n            if list1.count(i) % 2 != 0:\n                ans += 1\n        if (ans + n) % 4 == 0:\n            print(ans)\n        else:\n            print(ans + 2)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    ans = 0\n    lis1 = set(lis)\n    if n < 3:\n        print(4 - n)\n    else:\n        for i in lis1:\n            if lis.count(i) % 2 != 0:\n                ans += 1\n        if (ans + n) % 4 == 0:\n            print(ans)\n        else:\n            print(ans + 2)", "from collections import defaultdict\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    a = list(map(int, input().split()))\n    dic = defaultdict(lambda : 0)\n    for l in a:\n        dic[l] += 1\n    answer = 0\n    for cnt in dic.values():\n        if cnt % 2 == 1:\n            answer += 1\n    while (N + answer) % 4 != 0:\n        answer += 1\n    print(answer)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    length = list(map(int, input().split()))\n    df = defaultdict(int)\n    count = n\n    for i in range(n):\n        df[length[i]] += 1\n    for j in df:\n        if df[j] % 2:\n            count += 1\n    if count / 2 % 2:\n        count += 2\n    print(count - n)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    ans = 0\n    lis1 = set(lis)\n    if n < 3:\n        print(4 - n)\n    else:\n        for i in lis1:\n            if lis.count(i) % 2 != 0:\n                ans += 1\n        if (ans + n) % 4 == 0:\n            print(ans)\n        else:\n            print(ans + 2)", "from collections import Counter\n\ndef solve(arr):\n    n = len(arr)\n    counts = Counter(arr)\n    no_of_odds = 0\n    for (key, value) in counts.items():\n        if value % 2 == 1:\n            no_of_odds += 1\n    sticks_to_be_added = no_of_odds\n    if (n + sticks_to_be_added) % 4 != 0:\n        sticks_to_be_added += 2\n    return sticks_to_be_added\n\ndef print_output():\n    for input_case in all_input_cases:\n        output = solve(input_case)\n        print(output)\n\ndef get_input():\n    for i in range(t):\n        tmp = input()\n        all_input_cases.append(list(map(int, input().split())))\nt = int(input().strip())\nall_input_cases = []\nget_input()\nprint_output()", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    length = list(map(int, input().split()))\n    df = defaultdict(int)\n    count = n\n    for i in range(n):\n        df[length[i]] += 1\n    for j in df:\n        if df[j] % 2:\n            count += 1\n    if count / 2 % 2:\n        count += 2\n    print(count - n)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    ans = 0\n    c = Counter(l)\n    for x in c:\n        if c[x] % 2 == 1:\n            n += 1\n            ans += 1\n    if n % 4 != 0:\n        ans += 2\n    print(ans)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    L = Counter([int(i) for i in input().split()])\n    freq_mod_2 = [[x // 2, x % 2] for x in list(L.values())]\n    pair_sum = 0\n    rem_sum = 0\n    ans = 0\n    for a in freq_mod_2:\n        if a[0] % 2 != 0:\n            a[0] += 1\n            a[1] -= 1\n            ans += 1\n        pair_sum += a[0]\n        rem_sum += a[1]\n    if pair_sum % 2 != 0:\n        ans += 2\n    if rem_sum % 2 == 0:\n        ans += rem_sum\n    else:\n        ans += rem_sum + 2\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    count = 0\n    temp = Counter(L)\n    for t in temp:\n        if temp[t] % 2 != 0:\n            n += 1\n            count += 1\n    if n % 4 != 0:\n        count = count + 2\n    print(count)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    ans = 0\n    c = Counter(l)\n    for x in c:\n        if c[x] % 2 == 1:\n            n += 1\n            ans += 1\n    if n % 4 != 0:\n        ans += 2\n    print(ans)", "from sys import stdin, stdout\nfrom collections import defaultdict\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pairs = 0\n    ans = 0\n    count = defaultdict(lambda : 0)\n    for j in a:\n        count[j] += 1\n    for j in count.keys():\n        val = count[j]\n        pairs += val // 2\n        val = val % 2\n        if val == 1:\n            ans += 1\n            pairs += 1\n    if pairs % 2 != 0:\n        ans += 2\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    ans = 0\n    c = Counter(l)\n    for x in c:\n        if c[x] % 2 == 1:\n            c[x] += 1\n            n += 1\n            ans += 1\n    if n % 4 != 0:\n        ans += 2\n    print(ans)", "from collections import defaultdict\n\ndef sticks_rec(arr):\n    d = defaultdict(int)\n    for x in arr:\n        d[x] += 1\n    double = False\n    for x in d:\n        d[x] = d[x] % 4\n        if d[x] >= 2:\n            if double:\n                d[x] -= 2\n                double = not double\n            else:\n                d[x] -= 2\n                double = not double\n    ones = 0\n    for x in d:\n        if d[x] == 1:\n            ones += 1\n    if ones == 0:\n        if not double:\n            return 0\n        else:\n            return 2\n    elif ones == 1:\n        if not double:\n            return 3\n        else:\n            return 1\n    elif ones % 2 == 0:\n        if not double:\n            return ones\n        else:\n            return 2 + ones\n    elif not double:\n        return ones - 1 + 3\n    else:\n        return ones\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(sticks_rec(arr))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    ans = 0\n    c = Counter(l)\n    for x in c:\n        if c[x] % 2 == 1:\n            c[x] += 1\n            n += 1\n            ans += 1\n    if n % 4 != 0:\n        ans += 2\n    print(ans)", "import collections\nfrom collections import *\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    ans = 0\n    c = Counter(l)\n    for x in c:\n        if c[x] % 2 == 1:\n            c[x] += 1\n            n += 1\n            ans += 1\n    if n % 4 != 0:\n        ans += 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    pairs = []\n    singles = []\n    for i in l:\n        if l.count(i) % 4 == 2 and i not in pairs:\n            pairs.append(i)\n        elif l.count(i) % 4 == 1 and i not in singles:\n            singles.append(i)\n        elif l.count(i) % 4 == 3 and i not in pairs:\n            pairs.append(i)\n            singles.append(i)\n    if len(pairs) % 2 and len(singles) % 2:\n        print(len(singles))\n    elif len(singles) % 2:\n        print(len(singles) + 2)\n    elif len(pairs) % 2:\n        print(len(singles) + 2)\n    else:\n        print(len(singles))\n    del n\n    del singles\n    del pairs\n    del l", "n = int(input())\nfor i in range(n):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    s = list(set(l))\n    s1 = []\n    for j in range(len(s)):\n        s1.append(0)\n    d = dict(zip(s, s1))\n    for j in l:\n        d[j] += 1\n    c = 0\n    t = 0\n    for j in s:\n        if d[j] % 2 != 0:\n            c += 1\n            t += d[j] // 2 + 1\n        else:\n            t += d[j] // 2\n    if t % 2 != 0:\n        c += 2\n    print(c)", "for _ in range(int(input())):\n    N = int(input())\n    single = set()\n    for x in input().split():\n        if x in single:\n            single.remove(x)\n        else:\n            single.add(x)\n    l = len(single)\n    print(l + 4 - (l + N) % 4 if (l + N) % 4 else l)", "import math\n\ndef sol(n, x):\n    pass\n\ndef dictionary(arr):\n    d = {}\n    for x in arr:\n        if x in d:\n            d[x] += 1\n        else:\n            d[x] = 1\n    return d\nfor _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    d = dictionary(lst)\n    c = 0\n    ans = 0\n    l = len(lst)\n    for x in d:\n        if True:\n            if d[x] % 2 == 0:\n                c += d[x] // 2\n            else:\n                c += (d[x] + 1) // 2\n                ans += 1\n    if c % 2 != 0:\n        ans += 2\n    print(ans)", "def solutions():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        li = [int(i) for i in input().split()]\n        count = {}\n        add = 0\n        for i in li:\n            if i not in count:\n                count[i] = 0\n            count[i] += 1\n        for key in count.keys():\n            if count[key] % 2 != 0:\n                add += 1\n        if (n + add) % 4 != 0:\n            print(add + 2)\n        else:\n            print(add)\nsolutions()", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    mp = defaultdict(int)\n    for i in a:\n        mp[i] += 1\n    total = n\n    for i in mp:\n        if mp[i] & 1:\n            total += 1\n    total += total % 4\n    print(total - n)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    (cnt, ttl) = ([0] * 101, n)\n    for i in l:\n        cnt[i] += 1\n    for i in cnt:\n        if i % 2 != 0:\n            ttl += 1\n    if ttl // 2 % 2 == 0:\n        print(ttl - n)\n    else:\n        print(ttl + 2 - n)", "for _ in range(int(input())):\n    n = int(input())\n    li = input().split()\n    m = 0\n    while len(li) > 0:\n        element = li[0]\n        cnt_of_element = 0\n        for i in range(len(li) - 1, -1, -1):\n            if li[i] == element:\n                cnt_of_element += 1\n                li.pop(i)\n        m += cnt_of_element % 2\n    if (n + m) % 4 != 0:\n        m = m + (4 - (n + m) % 4)\n    print(m)", "for _ in range(int(input())):\n    N = int(input())\n    single = set()\n    for x in input().split():\n        if x in single:\n            single.remove(x)\n        else:\n            single.add(x)\n    l = len(single)\n    print(l + 4 - (l + N) % 4 if (l + N) % 4 else l)", "for _ in range(int(input())):\n    N = int(input())\n    single = set()\n    for x in input().split():\n        if x in single:\n            single.remove(x)\n        else:\n            single.add(x)\n    l = len(single)\n    if (l + N) % 4:\n        print(l + 4 - (l + N) % 4)\n    else:\n        print(l)", "def countsticks(N, L):\n    Li = [0] * 101\n    tot = 0\n    for i in range(N):\n        Li[L[i]] += 1\n    for i in range(101):\n        if Li[i] % 2:\n            tot += 1\n    if (tot + N) / 2 % 2:\n        tot += 2\n    return tot\nt = int(input())\nwhile t > 0:\n    N = int(input())\n    L = [int(x) for x in input().split(' ')]\n    sticks = countsticks(N, L)\n    print(sticks)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    count = 0\n    s = set(lst)\n    for i in s:\n        if lst.count(i) % 2 != 0:\n            count += 1\n    res = (count + n) % 4\n    ans = count\n    if res > 0:\n        ans = res + count\n    print(ans)", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = collections.Counter(a)\n    ans = 0\n    for i in c:\n        if c[i] % 2 != 0:\n            ans += 1\n    ans += (n + ans) % 4\n    print(ans)", "T = int(input())\ncheck = 0\narr = []\nwhile T:\n    ans = 0\n    N = int(input())\n    arr = list(map(int, input().split()))\n    var = len(arr)\n    pair = 0\n    single = 0\n    i = 1\n    while 0 < var:\n        while i < len(arr):\n            if arr[0] == arr[i]:\n                rem = arr[i]\n                check += 1\n                break\n            i += 1\n        if check == 1:\n            arr.remove(rem)\n            arr.remove(rem)\n            check = 0\n            var -= 2\n        else:\n            arr.remove(arr[0])\n            var -= 1\n            single += 1\n        i = 1\n    if (single + N) % 4 == 0:\n        print(single)\n    else:\n        print(single + 4 - (single + N) % 4)\n    T = T - 1", "from collections import defaultdict\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    c = 0\n    d = defaultdict(int)\n    for i in l:\n        d[i] += 1\n    for i in d:\n        if d[i] & 1:\n            c += 1\n    if (c + n) % 4 != 0:\n        print(c + 4 - (c + n) % 4)\n    else:\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mp = {}\n    for i in arr:\n        if i in mp:\n            mp[i] += 1\n        else:\n            mp[i] = 1\n    count = 0\n    for i in mp:\n        if mp[i] % 2 != 0:\n            count += 1\n    if (n + count) % 4 == 0:\n        print(count)\n    else:\n        print(count + (4 - (n + count) % 4))", "from calendar import c\nfrom math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    coun = dict()\n    for i in l:\n        if i in coun:\n            coun[i] += 1\n        else:\n            coun[i] = 1\n    two_c = 0\n    one_c = 0\n    for i in coun:\n        two_c += coun[i] // 2\n        one_c += coun[i] % 2\n    two_c = two_c % 2\n    ans = 0\n    ans += one_c // 2 * 2\n    one_c = one_c % 2\n    if two_c == 1 and one_c == 1:\n        ans += 1\n    elif two_c == 0 and one_c == 1:\n        ans += 3\n    elif two_c == 1 and one_c == 0:\n        ans += 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mp = {}\n    for i in arr:\n        if i in mp:\n            mp[i] += 1\n        else:\n            mp[i] = 1\n    count = 0\n    for i in mp:\n        if mp[i] % 2 != 0:\n            count += 1\n    if (n + count) % 4 == 0:\n        print(count)\n    else:\n        print(count + (4 - (n + count) % 4))", "Cases = int(input())\nTest = 1\nwhile Test <= Cases:\n    Test += 1\n    n = int(input())\n    A = input().split()\n    for i in A:\n        A.append(int(A[0]))\n        A.remove(A[0])\n    B = 0\n    ans = 0\n    b = []\n    A.sort()\n    while len(A) != 0:\n        if len(A) > 1:\n            if A[0] == A[1]:\n                b.append(A[0])\n                A.remove(A[0])\n                A.remove(A[0])\n            else:\n                B += 1\n                A.remove(A[0])\n        else:\n            B += 1\n            A.remove(A[0])\n    if len(b) % 2 != 0 and len(b) != 0:\n        if B == 0:\n            ans += 2\n        else:\n            B -= 1\n            ans += 1\n    if B != 0:\n        if B % 2 == 0:\n            ans += abs(B)\n        else:\n            ans += abs(B - 1)\n            ans += 3\n    print(int(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    n = len(A)\n    ans = 0\n    pair = 0\n    countfre = [0] * (max(A) + 1)\n    for j in A:\n        countfre[j] += 1\n    for k in countfre:\n        if k % 2 != 0:\n            ans += 1\n        pair += (k + 1) // 2\n    if pair % 2 != 0:\n        ans += 2\n    print(ans)", "for _ in range(int(input())):\n    size = int(input())\n    inputList = list(map(int, input().split()))\n    inputList.sort()\n    pairCount = 0\n    nonPairCount = 0\n    totalCount = 0\n    i = 0\n    while i < len(inputList) - 1:\n        if inputList[i] == inputList[i + 1]:\n            pairCount += 1\n            i += 2\n        else:\n            nonPairCount += 1\n            i += 1\n    if pairCount * 2 + nonPairCount < size:\n        nonPairCount += 1\n    oddpairCount = pairCount % 2\n    if oddpairCount == 1:\n        if nonPairCount >= 1:\n            totalCount += 1\n            nonPairCount -= 1\n        else:\n            totalCount += 2\n    totalCount += nonPairCount // 2 * 2\n    if nonPairCount % 2 != 0:\n        totalCount += 3\n    print(totalCount)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    dic = defaultdict(int)\n    for i in l:\n        dic[i] += 1\n    if len(l) == 1:\n        print(3)\n    elif len(l) == 2:\n        print(2)\n    else:\n        count = 0\n        odd_count = 0\n        for i in dic:\n            if dic[i] % 2 == 1:\n                odd_count += 1\n            count += dic[i]\n        if (count + odd_count) % 4 != 0:\n            odd_count += 2\n        print(odd_count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    dic = {}\n    a = input().split()\n    for y in a:\n        x = int(y)\n        if x in dic:\n            dic[x] = dic[x] + 1\n        else:\n            dic[x] = 1\n    c = 0\n    for x in dic:\n        if dic[x] % 2 == 1:\n            c = c + 1\n            n = n + 1\n    if n % 4 == 0:\n        print(c)\n    else:\n        print(c + 2)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    arr = [int(_) for _ in input().split()]\n    freq = {}\n    pairs = 0\n    for i in arr:\n        if i not in freq:\n            freq[i] = 1\n        else:\n            freq[i] += 1\n    for i in freq.values():\n        pairs += i // 2\n    temp = sum(freq.values()) - 2 * pairs\n    if (pairs + temp) % 2 == 0:\n        ans = temp\n    else:\n        ans = temp + 2\n    print(ans)", "for _ in range(int(input())):\n    val = {}\n    N = int(input())\n    l = list(map(int, input().split()))\n    for i in l:\n        if i not in val:\n            val[i] = 1\n        else:\n            val[i] += 1\n    v = list(val.values())\n    ans = 0\n    for i in range(len(v)):\n        if v[i] % 2 == 1:\n            v[i] += 1\n            ans += 1\n    if sum(v) // 2 % 2 == 1:\n        ans += 2\n    print(ans)", "from collections import Counter\n\ndef solve(arr):\n    d = Counter(arr)\n    singles = 0\n    doubles = 0\n    for i in list(d.values()):\n        singles += i % 2\n        doubles += i // 2\n    ans = 0\n    if doubles % 2:\n        ans += 1\n        singles -= 1\n    b = singles % 2\n    ans += singles + 2 * b\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(arr))", "from collections import defaultdict as df\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = df(int)\n    for i in a:\n        d[i] += 1\n    ans = 0\n    for i in d:\n        if d[i] % 2 == 1:\n            d[i] += 1\n            ans += 1\n    pairs = 0\n    for i in d:\n        pairs += d[i] // 2\n    if pairs % 2:\n        ans += 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    total = 0\n    for i in l:\n        if l.count(i) % 2 == 0:\n            pass\n        else:\n            total += 1\n            l.append(i)\n    if len(l) % 4 == 0:\n        print(total)\n    else:\n        print(total + 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    total = 0\n    for i in l:\n        if l.count(i) % 2 == 0:\n            pass\n        else:\n            total += 1\n            l.append(i)\n    if len(l) % 4 == 0:\n        print(total)\n    else:\n        print(total + 2)", "def cal(s, b):\n    a = b[0] - 1\n    y = 0\n    d = 0\n    for x in b:\n        if x > a:\n            c = b.count(x) % 2\n            y = y + c\n            d = b.count(x) + c + d\n            a = x\n    y = y + d % 4\n    return y\ni = int(input())\nc = []\nfor x in range(0, i):\n    s = int(input())\n    b = [int(b) for b in input().split()]\n    b.sort()\n    d = cal(s, b)\n    print(d)"]