["for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        p = 1\n    elif n % 4 == 0:\n        p = n // 2 + 1\n    elif n % 2 == 0:\n        p = n // 2 + 2\n    else:\n        p = n // 2 + 1\n    q = n - p\n    print(p * q - 1)", "import numpy as np\nt = int(input())\nwhile t:\n    n = int(input())\n    if n // 2 == 1 or n % 2 != 0:\n        print(np.lcm(n // 2, n - n // 2) - np.gcd(n // 2, n - n // 2))\n    elif n // 2 % 2 == 0:\n        print(np.lcm(n // 2 - 1, n // 2 + 1) - np.gcd(n // 2 - 1, n // 2 + 1))\n    else:\n        print(np.lcm(n // 2 - 2, n // 2 + 2) - np.gcd(n // 2 - 2, n // 2 + 2))\n    t -= 1", "import numpy as np\nt = int(input())\nwhile t:\n    n = int(input())\n    if n // 2 == 1 or n % 2 != 0:\n        print(np.lcm(n // 2, n - n // 2) - np.gcd(n // 2, n - n // 2))\n    elif n // 2 % 2 == 0:\n        print(np.lcm(n // 2 - 1, n // 2 + 1) - np.gcd(n // 2 - 1, n // 2 + 1))\n    else:\n        print(np.lcm(n // 2 - 2, n // 2 + 2) - np.gcd(n // 2 - 2, n // 2 + 2))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        p = 1\n    elif n % 4 == 0:\n        p = n // 2 + 1\n    elif n % 2 == 0:\n        p = n // 2 + 2\n    else:\n        p = n // 2 + 1\n    q = n - p\n    print(p * q - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        p = 1\n    elif n % 4 == 0:\n        p = n // 2 + 1\n    elif n % 2 == 0:\n        p = n // 2 + 2\n    else:\n        p = n // 2 + 1\n    q = n - p\n    print(p * q - 1)", "import math\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    lower = n // 2\n    upper = math.ceil(n / 2)\n    gcd = math.gcd(upper, lower)\n    ans = upper * lower // gcd - gcd\n    while lower > 0 and math.gcd(upper, lower) != 1:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n        lower -= 1\n        upper += 1\n    if lower != 0:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    lower = n // 2\n    upper = math.ceil(n / 2)\n    gcd = math.gcd(upper, lower)\n    ans = upper * lower // gcd - gcd\n    while lower > 0 and math.gcd(upper, lower) != 1:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n        lower -= 1\n        upper += 1\n    if lower != 0:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    lower = n // 2\n    upper = math.ceil(n / 2)\n    gcd = math.gcd(upper, lower)\n    ans = upper * lower // gcd - gcd\n    while lower > 0 and math.gcd(upper, lower) != 1:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n        lower -= 1\n        upper += 1\n    if lower != 0:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    lower = n // 2\n    upper = math.ceil(n / 2)\n    gcd = math.gcd(upper, lower)\n    ans = upper * lower // gcd - gcd\n    while lower > 0 and math.gcd(upper, lower) != 1:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n        lower -= 1\n        upper += 1\n    if lower != 0:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    lower = n // 2\n    upper = math.ceil(n / 2)\n    gcd = math.gcd(upper, lower)\n    ans = upper * lower // gcd - gcd\n    while lower > 0 and math.gcd(upper, lower) != 1:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n        lower -= 1\n        upper += 1\n    if lower != 0:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    lower = n // 2\n    upper = math.ceil(n / 2)\n    gcd = math.gcd(upper, lower)\n    ans = upper * lower // gcd - gcd\n    while lower > 0 and math.gcd(upper, lower) != 1:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n        lower -= 1\n        upper += 1\n    if lower != 0:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    lower = n // 2\n    upper = math.ceil(n / 2)\n    gcd = math.gcd(upper, lower)\n    ans = upper * lower // gcd - gcd\n    while lower > 0 and math.gcd(upper, lower) != 1:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n        lower -= 1\n        upper += 1\n    if lower != 0:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    lower = n // 2\n    upper = math.ceil(n / 2)\n    gcd = math.gcd(upper, lower)\n    ans = upper * lower // gcd - gcd\n    while lower > 0 and math.gcd(upper, lower) != 1:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n        lower -= 1\n        upper += 1\n    if lower != 0:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    lower = n // 2\n    upper = math.ceil(n / 2)\n    gcd = math.gcd(upper, lower)\n    ans = upper * lower // gcd - gcd\n    while lower > 0 and math.gcd(upper, lower) != 1:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n        lower -= 1\n        upper += 1\n    if lower != 0:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n    print(ans)", "import math\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    lower = n // 2\n    upper = math.ceil(n / 2)\n    gcd = math.gcd(upper, lower)\n    ans = upper * lower // gcd - gcd\n    while lower > 0 and math.gcd(upper, lower) != 1:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n        lower -= 1\n        upper += 1\n    if lower != 0:\n        gcd = math.gcd(upper, lower)\n        ans = max(ans, upper * lower // gcd - gcd)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        x = n // 2\n    elif n % 4 == 0:\n        x = n // 2 - 1\n    elif n == 2:\n        x = 1\n    else:\n        x = n // 2 - 2\n    y = n - x\n    print(x * y - 1)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        x = n // 2\n    elif n % 4 == 0:\n        x = n // 2 - 1\n    elif n == 2:\n        x = 1\n    else:\n        x = n // 2 - 2\n    y = n - x\n    print(x * y - 1)", "for _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    if n & 1:\n        ans = (n // 2 + 1) * (n // 2) - 1\n    else:\n        if n == 2:\n            print(0)\n            continue\n        if n // 2 & 1:\n            m = n // 2\n            ans = (m - 2) * (m + 2) - 1\n        else:\n            m = n // 2\n            ans = (m - 1) * (m + 1) - 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    if n & 1:\n        ans = (n // 2 + 1) * (n // 2) - 1\n    else:\n        if n == 2:\n            print(0)\n            continue\n        if n // 2 & 1:\n            m = n // 2\n            ans = (m - 2) * (m + 2) - 1\n        else:\n            m = n // 2\n            ans = (m - 1) * (m + 1) - 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 == 0:\n        a = n // 2 - 1\n        b = a + 2\n        if a % 2 != 0 and b % 2 != 0:\n            print(a * b - 1)\n        else:\n            a -= 1\n            b += 1\n            print(a * b - 1)\n    else:\n        a = n // 2\n        b = a + 1\n        print(a * b - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print('0')\n    elif n % 2 != 0:\n        k = n // 2\n        p = k + 1\n        print(k * p - 1)\n    else:\n        k = n // 2 - 1\n        p = k + 2\n        if k % 2 != 0 and p % 2 != 0:\n            print(k * p - 1)\n        else:\n            k = k - 1\n            p = p + 1\n            print(k * p - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print('0')\n    elif n % 2 != 0:\n        k = n // 2\n        p = k + 1\n        print(k * p - 1)\n    else:\n        k = n // 2 - 1\n        p = k + 2\n        if k % 2 != 0 and p % 2 != 0:\n            print(k * p - 1)\n        else:\n            k = k - 1\n            p = p + 1\n            print(k * p - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 == 1:\n        print((n - 1) // 2 * (n + 1) // 2 - 1)\n    elif n % 2 == 0:\n        if (n // 2 - 1) % 2 == 1:\n            print((n // 2 - 1) * (n // 2 + 1) - 1)\n        else:\n            print((n // 2 - 2) * (n // 2 + 2) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 == 1:\n        print((n - 1) // 2 * (n + 1) // 2 - 1)\n    elif n % 2 == 0:\n        if (n // 2 - 1) % 2 == 1:\n            print((n // 2 - 1) * (n // 2 + 1) - 1)\n        else:\n            print((n // 2 - 2) * (n // 2 + 2) - 1)", "import math\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    x = n // 2\n    if n % 2 == 1:\n        print(x * (x + 1) - 1)\n    elif x > 1:\n        if x % 2 == 1:\n            print((x - 2) * (x + 2) - 1)\n        else:\n            print((x - 1) * (x + 1) - 1)\n    else:\n        print(0)", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    i = 1\n    f = 0\n    a = n // 2\n    b = (n + 1) // 2\n    if n % 2 == 0:\n        a = a - 1\n        b = b + 1\n    if a % 2 == 0 and b % 2 == 0:\n        a -= 1\n        b += 1\n    if a < 0:\n        a = b = 1\n    f = a * b - 1\n    print(f)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 == 1:\n        print(n // 2 * (n // 2 + 1) - 1)\n    else:\n        a = n // 2 - 1\n        b = n // 2 + 1\n        if a % 2 == 1:\n            print(a * b - 1)\n        else:\n            print((a - 1) * (b + 1) - 1)", "def gcd(a, b):\n    while b:\n        (a, b) = (b, a % b)\n    return a\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        (a, b) = ((n + 1) // 2, (n + 1) // 2 - 1)\n    elif n == 2:\n        (a, b) = (1, 1)\n    elif n // 2 % 2 == 0:\n        (a, b) = (n // 2 + 1, n // 2 - 1)\n    else:\n        (a, b) = (n // 2 + 2, n // 2 - 2)\n    g = gcd(a, b)\n    l = int(a * b / g)\n    print(a * b - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2:\n        x = n // 2\n        print(x * (x + 1) - 1)\n    else:\n        x = n // 2\n        if x % 2 == 0:\n            print((x - 1) * (x + 1) - 1)\n        else:\n            print((x - 2) * (x + 2) - 1)", "t = int(input())\nk = []\nfor x in range(t):\n    N = int(input())\n    k = [N - 2]\n    if N % 2 == 0:\n        if N == 2:\n            print(k[0])\n        elif int(N / 2) % 2 == 0:\n            print((int(N / 2) - 1) * (int(N / 2) + 1) - 1)\n        else:\n            print((int(N / 2) - 2) * (int(N / 2) + 2) - 1)\n    else:\n        print(int(N / 2) * (int(N / 2) + 1) - 1)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    x = n // 2\n    if n == 2:\n        print(0)\n    elif n % 2 == 0:\n        if x % 2 == 0:\n            print((x - 1) * (x + 1) - 1)\n        else:\n            print((x - 2) * (x + 2) - 1)\n    else:\n        print(x * (x + 1) - 1)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    if n & 1:\n        a = int(n / 2)\n        b = int((n + 1) / 2)\n        print(a * b - 1)\n    elif n == 2:\n        print(0)\n    elif n == 4:\n        print(2)\n    elif n == 6:\n        print(4)\n    else:\n        k = int(n / 2)\n        if k & 1:\n            a = k - 1\n            b = k + 1\n        else:\n            a = k - 2\n            b = k + 2\n        x2 = 0\n        x1 = (a - 1) * (b + 1) - 1\n        if a + 1 != b - 1:\n            x2 = (a + 1) * (b - 1) - 1\n        print(max(x1, x2))", "import math\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    if n == 2:\n        print(0)\n    else:\n        if n % 4 == 0:\n            k = (n // 2 - 1) * (n // 2 + 1)\n            print(k - 1)\n        if n % 4 == 2:\n            k = (n // 2 - 2) * (n // 2 + 2)\n            print(k - 1)\n        if n % 2 == 1:\n            print(int(math.floor(n / 2) * math.ceil(n / 2) - 1))\n    t -= 1", "t = int(input())\nfor x in range(t):\n    N = int(input())\n    k = 0\n    if N == 2:\n        print(0)\n    elif N % 2 == 1:\n        k = (N - 1) // 2 * (N + 1) // 2\n        print(k - 1)\n    elif N % 4 == 0:\n        k = (N // 2 - 1) * (N // 2 + 1)\n        print(k - 1)\n    else:\n        k = (N // 2 - 2) * (N // 2 + 2)\n        print(k - 1)", "t = int(input())\nfor x in range(t):\n    N = int(input())\n    k = 0\n    if N == 2:\n        print(0)\n    elif N % 2 == 1:\n        k = (N - 1) // 2 * (N + 1) // 2\n        print(k - 1)\n    elif (N // 2 - 1) % 2 == 1:\n        k = (N // 2 - 1) * (N // 2 + 1)\n        print(k - 1)\n    else:\n        k = (N // 2 - 2) * (N // 2 + 2)\n        print(k - 1)", "def gcd(a, b):\n    while b:\n        (a, b) = (b, a % b)\n    return abs(a)\nt = int(input())\nfor x in range(t):\n    N = int(input())\n    k = 0\n    for i in reversed(range(1, N // 2 + 1)):\n        if gcd(i, N - i) == 1:\n            k = i\n            break\n    print(k * (N - k) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 == 1:\n        print((n - 1) // 2 * (n + 1) // 2 - 1)\n    elif (n // 2 - 1) % 2 == 1:\n        print((n // 2 - 1) * (n // 2 + 1) - 1)\n    else:\n        print((n // 2 - 2) * (n // 2 + 2) - 1)", "from math import ceil, floor\n\ndef solve(n):\n    if n == 2:\n        return 0\n    if n & 1 == 1:\n        return ceil(n / 2) * floor(n / 2) - 1\n    if n % 4 == 0:\n        return (n // 2 - 1) * (n // 2 + 1) - 1\n    return (n // 2 + 2) * (n // 2 - 2) - 1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(solve(n))", "def g(a, b):\n    if b == 0:\n        return a\n    if a < b:\n        return g(b, a)\n    return g(b, a % b)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    if n % 2 == 0:\n        m = n // 2\n        if m % 2 != 0:\n            a = n // 2 - 2\n            b = n // 2 + 2\n            gc = g(a, b)\n            lc = a * b // gc\n            ans = lc - gc + 1\n        else:\n            a = n // 2 - 1\n            b = n // 2 + 1\n            gc = g(a, b)\n            lc = a * b // gc\n            ans = lc - gc + 1\n    else:\n        ans = n // 2\n        ans *= n // 2 + 1\n    if n == 2:\n        ans = 1\n    print(ans - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 2:\n        print(0)\n        continue\n    if n % 2 == 1:\n        print(int((n - 1) // 2 * (n + 1) // 2 - 1))\n    elif (n / 2 - 1) % 2 == 1:\n        print(int((n // 2 - 1) * (n // 2 + 1) - 1))\n    else:\n        print(int((n // 2 - 2) * (n // 2 + 2) - 1))", "def greatestCommonDivisor(x, y):\n    if y == 0:\n        return x\n    return greatestCommonDivisor(y, x % y)\n\ndef solutionFunc(x, y):\n    gross = greatestCommonDivisor(x, y)\n    part = x * y\n    return part // gross - gross\nresult = ''\nfor _ in range(int(input())):\n    number = int(input())\n    if number % 2 == 1:\n        result += str(solutionFunc((number - 1) // 2, (number + 1) // 2)) + '\\n'\n    elif number == 2:\n        result += '0\\n'\n    elif (number // 2 - 1) % 2 == 1:\n        result += str(solutionFunc(number // 2 - 1, number // 2 + 1)) + '\\n'\n    else:\n        result += str(solutionFunc(number // 2 - 2, number // 2 + 2)) + '\\n'\nprint(result)", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef func(a, b):\n    g = gcd(a, b)\n    p = a * b\n    return p // g - g\nans = ''\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        ans += str(func((n - 1) // 2, (n + 1) // 2)) + '\\n'\n    elif n == 2:\n        ans += '0\\n'\n    elif (n // 2 - 1) % 2 == 1:\n        ans += str(func(n // 2 - 1, n // 2 + 1)) + '\\n'\n    else:\n        ans += str(func(n // 2 - 2, n // 2 + 2)) + '\\n'\nprint(ans)", "for i in range(int(input())):\n    N = int(input())\n    if N == 2:\n        print(0)\n    elif N % 2 != 0:\n        print(N // 2 * (N - N // 2) - 1)\n    elif N / 2 % 2 == 0:\n        print((N // 2 - 1) * (N // 2 + 1) - 1)\n    else:\n        print((N // 2 - 2) * (N // 2 + 2) - 1)", "for i in range(int(input())):\n    N = int(input())\n    if N == 2:\n        print(0)\n    elif N % 2 != 0:\n        print(N // 2 * (N - N // 2) - 1)\n    elif N / 2 % 2 == 0:\n        print((N // 2 - 1) * (N // 2 + 1) - 1)\n    else:\n        print((N // 2 - 2) * (N // 2 + 2) - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = 0\n    b = 0\n    if n == 2:\n        print('0')\n        continue\n    if n % 2 == 0:\n        if n // 2 % 2 == 1:\n            a = n // 2 - 2\n            b = n // 2 + 2\n        else:\n            a = n // 2 - 1\n            b = n // 2 + 1\n    else:\n        a = n // 2\n        b = n // 2 + 1\n    print(a * b - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print('0')\n    elif n % 2 == 1:\n        print((n - 1) // 2 * (n + 1) // 2 - 1)\n    elif n % 4 == 0:\n        print((n // 2 - 1) * (n // 2 + 1) - 1)\n    else:\n        print((n // 2 - 2) * (n // 2 + 2) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n        continue\n    if n % 2 == 1:\n        print((n - 1) // 2 * (n + 1) // 2 - 1)\n    elif (n // 2 - 1) % 2:\n        print((n // 2 - 1) * (n // 2 + 1) - 1)\n    else:\n        print((n // 2 - 2) * (n // 2 + 2) - 1)", "def solve():\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 == 1:\n        print((n - 1) // 2 * ((n + 1) // 2) - 1)\n    elif n % 2 == 0:\n        if (n / 2 - 1) % 2 == 1:\n            print((n // 2 - 1) * (n // 2 + 1) - 1)\n        else:\n            print((n // 2 - 2) * (n // 2 + 2) - 1)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 2:\n        print(0)\n        continue\n    if n % 2 == 1:\n        print((n - 1) // 2 * (n + 1) // 2 - 1)\n    elif (n // 2 - 1) % 2:\n        print((n // 2 - 1) * (n // 2 + 1) - 1)\n    else:\n        print((n // 2 - 2) * (n // 2 + 2) - 1)", "import math\n\ndef is_coprime(a, b):\n    if math.gcd(a, b) == 1:\n        return True\n    else:\n        return False\n\ndef max_lcm_hcf(no):\n    for i in reversed(range(1, no // 2 + 1)):\n        a = i\n        b = no - i\n        (l, h) = (a * b // math.gcd(a, b), math.gcd(a, b))\n        if is_coprime(a, b):\n            return l - h\nfor _ in range(int(input())):\n    no = int(input())\n    print(max_lcm_hcf(no))", "for _ in range(int(input())):\n    n = int(input())\n    if n < 3:\n        print(0)\n    else:\n        if n % 2 == 1:\n            ret = (n + 1) // 2 * ((n - 1) // 2) - 1\n        elif n // 2 % 2 == 0:\n            ret = (n + 2) // 2 * ((n - 2) // 2) - 1\n        else:\n            ret = (n + 4) // 2 * ((n - 4) // 2) - 1\n        print(ret)", "import sys\nimport math\nfrom itertools import *\nfrom queue import LifoQueue\nfrom bisect import bisect\nfrom collections import deque, Counter, defaultdict\nmod = 10 ** 9 + 7\n\ndef ri():\n    return int(input())\n\ndef rl():\n    return list(map(int, input().split()))\n\ndef rls():\n    return list(map(str, input().split()))\n\ndef rm():\n    return map(int, input().split())\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\n\ndef freq(a):\n    return Counter(a)\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef compare(x, y):\n    return (x > y) - (x < y)\n\ndef d2b(n):\n    s = bin(n).replace('0b', '')\n    return (34 - len(s)) * '0' + s\n\ndef BS(a, x):\n    i = bisect.bisect_left(a, x)\n    if i != len(a) and a[i] == x:\n        return i\n    else:\n        return -1\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef isPrime(n):\n    if n <= 3:\n        return n > 1\n    if n & 1 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(n ** 0.5) + 2, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\nfor _ in range(ri()):\n    n = ri()\n    if n == 2:\n        print(0)\n        continue\n    if n % 2 == 1:\n        n //= 2\n        ans = n * (n + 1) - 1\n    else:\n        n //= 2\n        if (n - 1) % 2 == 1:\n            ans = (n - 1) * (n + 1) - 1\n        else:\n            ans = (n + 2) * (n - 2) - 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    val = n // 2\n    if n == 2:\n        print(0)\n    elif n % 2 == 0:\n        if n / 2 % 2 == 0:\n            print((val + 1) * (val - 1) - 1)\n        else:\n            print((val + 2) * (val - 2) - 1)\n    else:\n        print(val * (val + 1) - 1)", "for i in range(int(input())):\n    x = int(input())\n    d = x // 2\n    if x == 2:\n        print(0)\n    elif x % 2 == 0:\n        if x / 2 % 2 == 0:\n            print((d + 1) * (d - 1) - 1)\n        else:\n            print((d + 2) * (d - 2) - 1)\n    else:\n        print(d * (d + 1) - 1)", "for t in range(int(input())):\n    n = int(input())\n    a = n - 2\n    if n % 2 != 0:\n        b = n // 2 * (n // 2 + 1) - 1\n    elif n // 2 % 2 == 0:\n        b = (n // 2 - 1) * (n // 2 + 1) - 1\n    else:\n        b = (n // 2 + 2) * (n // 2 - 2) - 1\n    print(max(a, b))", "from sys import stdin\nfrom math import gcd\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n        continue\n    if n % 2 == 1:\n        print(n // 2 * (n - n // 2) - 1)\n    elif n // 2 % 2 == 0:\n        n = n // 2\n        print((n - 1) * (n + 1) - 1)\n    else:\n        n = n // 2\n        print(max((n - 1) * (n + 1) // gcd(n - 1, n + 1) - 1, (n - 2) * (n + 2) - 1))", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 == 1:\n        print((n + 1) // 2 * (n - 1) // 2 - 1)\n    elif n % 2 == 0:\n        if (n / 2 - 1) % 2 == 1:\n            print((n // 2 + 1) * (n // 2 - 1) - 1)\n        else:\n            print((n // 2 + 2) * (n // 2 - 2) - 1)", "try:\n    for i in range(int(input())):\n        n = int(input())\n        if n == 2:\n            print(0)\n        elif n % 2 != 0:\n            print(n // 2 * (n // 2 + 1) - 1)\n        elif n / 2 % 2 == 0:\n            print((n // 2 - 1) * (n // 2 + 1) - 1)\n        else:\n            print((n // 2 - 2) * (n // 2 + 2) - 1)\nexcept:\n    pass", "from math import *\nimport numpy as np\n\ndef lcm(x, y):\n    l = x * y // gcd(x, y)\n    return l\n\ndef solve(n):\n    if n & 1:\n        return n // 2 * (n // 2 + 1) - 1\n    ans = 0\n    for i in range(n // 2, 0, -1):\n        temp = lcm(i, n - i) - gcd(i, n - i)\n        ans = max(ans, temp)\n        if gcd(i, n - i) == 1:\n            break\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    print(solve(n))", "try:\n    for i in range(int(input())):\n        n = int(input())\n        if n == 2:\n            print(0)\n        elif n % 2 != 0:\n            print(n // 2 * (n // 2 + 1) - 1)\n        elif n / 2 % 2 == 0:\n            print((n // 2 - 1) * (n // 2 + 1) - 1)\n        else:\n            print((n // 2 - 2) * (n // 2 + 2) - 1)\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    print(0) if n == 2 else print(n // 2 * (n // 2 + 1) - 1) if n % 2 == 1 else print((n // 2 - 1) * (n // 2 + 1) - 1) if n % 4 == 0 else print((n // 2 - 2) * (n // 2 + 2) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    print(0) if n == 2 else print(n // 2 * (n // 2 + 1) - 1) if n % 2 == 1 else print((n // 2 - 1) * (n // 2 + 1) - 1) if n % 4 == 0 else print((n // 2 - 2) * (n // 2 + 2) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n    else:\n        print(n // 2 * (n // 2 + 1) - 1) if n % 2 == 1 else print((n // 2 - 1) * (n // 2 + 1) - 1) if n % 4 == 0 else print((n // 2 - 2) * (n // 2 + 2) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n    else:\n        print(n // 2 * (n // 2 + 1) - 1) if n % 2 == 1 else print((n // 2 - 1) * (n // 2 + 1) - 1) if n % 4 == 0 else print((n // 2 - 2) * (n // 2 + 2) - 1)", "try:\n    for i in range(int(input())):\n        n = int(input())\n        if n == 2:\n            print(0)\n        elif n % 2 != 0:\n            print(n // 2 * (n // 2 + 1) - 1)\n        elif n / 2 % 2 == 0:\n            print((n // 2 - 1) * (n // 2 + 1) - 1)\n        else:\n            print((n // 2 - 2) * (n // 2 + 2) - 1)\nexcept:\n    pass", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    if n % 2 == 1:\n        print((n - 1) // 2 * ((n + 1) // 2) - 1)\n    elif n == 2:\n        print(0)\n    elif (n // 2 - 1) % 2 == 1:\n        print((n // 2 - 1) * (n // 2 + 1) - 1)\n    else:\n        print((n // 2 - 2) * (n // 2 + 2) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 != 0:\n        print(n // 2 * (n // 2 + 1) - 1)\n    elif n % 4 == 0:\n        k = n // 2 - 1\n        k2 = n - k\n        print(k * k2 - 1)\n    elif n == 2:\n        print(0)\n    else:\n        kk = n // 2 - 2\n        kk2 = n - kk\n        print(kk2 * kk - 1)", "for i in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 != 0:\n        print((n - 1) // 2 * ((n + 1) // 2) - 1)\n    elif n % 2 == 0 and n // 2 % 2 == 0:\n        print((n // 2 - 1) * (n // 2 + 1) - 1)\n    elif n % 2 == 0 and n // 2 % 2 != 0:\n        print((n // 2 - 2) * (n // 2 + 2) - 1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    if n == 2:\n        print('0')\n    elif n % 2:\n        print(n // 2 * (n // 2 + 1) - 1)\n    elif n // 2 % 2:\n        print((n // 2 + 2) * (n // 2 - 2) - 1)\n    else:\n        print((n // 2 + 1) * (n // 2 - 1) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n & 1:\n        print((n - 1) // 2 * (n + 1) // 2 - 1)\n    else:\n        t = n // 2\n        if (t - 1) % 2 != 0 and (t + 1) % 2 != 0:\n            print((t - 1) * (t + 1) - 1)\n        else:\n            print((t - 2) * (t + 2) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n & 1:\n        print((n - 1) // 2 * (n + 1) // 2 - 1)\n    else:\n        t = n // 2\n        if (t - 1) % 2 != 0 and (t + 1) % 2 != 0:\n            print((t - 1) * (t + 1) - 1)\n        else:\n            print((t - 2) * (t + 2) - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2:\n        val = n // 2\n        print(val * (val + 1) - 1)\n    elif n == 2:\n        print(0)\n    else:\n        (mid, k) = (n // 2, 0)\n        if mid % 2 == 0:\n            k = 1\n        else:\n            k = 2\n        print((mid - k) * (mid + k) - 1)", "t = int(input())\nfor T in range(t):\n    N = int(input())\n    if N % 2 == 1:\n        a = (N - 1) // 2\n        b = (N + 1) // 2\n    elif N == 2:\n        a = 1\n        b = 1\n    elif N % 4 == 0:\n        a = N // 2 - 1\n        b = N // 2 + 1\n    else:\n        a = N // 2 - 2\n        b = N // 2 + 2\n    print(a * b - 1)", "ans = []\nfor _ in range(int(input())):\n    N = int(input())\n    N2 = N // 2\n    if N == 2:\n        an = 0\n    elif not N % 2:\n        if not N2 % 2:\n            an = N2 ** 2 - 2\n        else:\n            an = N2 ** 2 - 5\n    else:\n        an = (N - N2) * N2 - 1\n    ans.append(an)\nprint(*ans, sep='\\n')", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return a / gcd(a, b) * b\nfor _ in range(int(input())):\n    n = int(input())\n    l = []\n    if n == 2:\n        print(0)\n    elif n % 2 == 1:\n        n = n + 1\n        n = int(n / 2)\n        l.append(n - 1)\n        l.append(n)\n        print(n * (n - 1) - 1)\n    else:\n        n1 = int(n / 2)\n        if n1 % 2 == 0:\n            l.append(n1 - 1)\n            l.append(n1 + 1)\n            print((n1 - 1) * (n1 + 1) - 1)\n        else:\n            n1 = int(n / 2)\n            l.append(n1 - 2)\n            l.append(n1 + 2)\n            print((n1 - 2) * (n1 + 2) - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 != 0:\n        print((n - 1) // 2 * ((n + 1) // 2) - 1)\n    elif (n / 2 - 1) % 2 != 0 and (n / 2 + 1) % 2 != 0:\n        print((n // 2 - 1) * (n // 2 + 1) - 1)\n    else:\n        print((n // 2 - 2) * (n // 2 + 2) - 1)", "import math\ntc = int(input())\nwhile tc:\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 != 0:\n        k = n // 2\n        g = math.gcd(k, k + 1)\n        l = k * (k + 1) // g\n        print(l - g)\n    else:\n        v1 = n // 2 - 2\n        v2 = n // 2 + 2\n        g1 = math.gcd(v1, v2)\n        l1 = v1 * v2 // g1\n        k1 = l1 - g1\n        v3 = n // 2 - 1\n        v4 = n // 2 + 1\n        g2 = math.gcd(v3, v4)\n        l2 = v3 * v4 // g2\n        k2 = l2 - g2\n        print(max(k1, k2))\n    tc -= 1", "import math\ntc = int(input())\nwhile tc:\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 != 0:\n        k = n // 2\n        g = math.gcd(k, k + 1)\n        l = k * (k + 1) // g\n        print(l - g)\n    else:\n        v1 = n // 2 - 2\n        v2 = n // 2 + 2\n        g1 = math.gcd(v1, v2)\n        l1 = v1 * v2 // g1\n        k1 = l1 - g1\n        v3 = n // 2 - 1\n        v4 = n // 2 + 1\n        g2 = math.gcd(v3, v4)\n        l2 = v3 * v4 // g2\n        k2 = l2 - g2\n        print(max(k1, k2))\n    tc -= 1", "t = int(input())\nfor T in range(t):\n    N = int(input())\n    if N % 2 == 1:\n        a = (N - 1) // 2\n        b = (N + 1) // 2\n    elif N == 2:\n        a = 1\n        b = 1\n    elif N % 4 == 0:\n        a = N // 2 - 1\n        b = N // 2 + 1\n    else:\n        a = N // 2 - 2\n        b = N // 2 + 2\n    print(a * b - 1)", "def gcd(m, n):\n    if n == 0:\n        return m\n    else:\n        return gcd(n, m % n)\nt = int(input())\nwhile t:\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 == 0:\n        if n // 2 % 2 == 0:\n            x = gcd(n // 2 - 1, n // 2 + 1)\n            l = (n // 2 - 1) * (n // 2 + 1) // x\n            print(l - x)\n        else:\n            x = gcd(n // 2 - 2, n // 2 + 2)\n            l = (n // 2 - 2) * (n // 2 + 2) // x\n            print(l - x)\n    else:\n        print(n // 2 * (n // 2 + 1) - 1)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 != 0:\n        print((n - 1) // 2 * ((n + 1) // 2) - 1)\n    elif (n / 2 - 1) % 2 != 0 and (n / 2 + 1) % 2 != 0:\n        print((n // 2 - 1) * (n // 2 + 1) - 1)\n    else:\n        print((n // 2 - 2) * (n // 2 + 2) - 1)", "for sk in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 == 1:\n        print((n - 1) // 2 * ((n + 1) // 2) - 1)\n    elif (n // 2 - 1) % 2 != 0:\n        print((n // 2 - 1) * (n // 2 + 1) - 1)\n    else:\n        print((n // 2 - 2) * (n // 2 + 2) - 1)", "for t in range(int(input())):\n    N = int(input())\n    if N % 2 != 0:\n        print((N ** 2 - 1) // 4 - 1)\n    elif N == 2:\n        print(0)\n    elif (N // 2 - 1) % 2 != 0:\n        print((N // 2 - 1) * (N // 2 + 1) - 1)\n    else:\n        print((N // 2 - 2) * (N // 2 + 2) - 1)", "from math import gcd\nfor i in range(int(input())):\n    N = int(input())\n    if N == 2:\n        print(0)\n    else:\n        if N % 2 != 0:\n            (a, b) = ((N + 1) // 2, (N - 1) // 2)\n        elif (N // 2 - 1) % 2 != 0 and (N // 2 + 1) % 2 != 0:\n            (a, b) = (N // 2 - 1, N // 2 + 1)\n        else:\n            (a, b) = (N // 2 - 2, N // 2 + 2)\n        an2 = gcd(a, b)\n        an1 = a * b // an2\n        print(an1 - an2)", "for i in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 == 0:\n        if (n // 2 - 1) % 2 == 0 and (n // 2 + 1) % 2 == 0:\n            print((n // 2 - 2) * (n // 2 + 2) - 1)\n        else:\n            print((n // 2 + 1) * (n // 2 - 1) - 1)\n    else:\n        print((n + 1) // 2 * ((n - 1) // 2) - 1)", "def printArr(a):\n    s = ''\n    for i in a:\n        s += str(i) + ' '\n    print(s[0:-1])\nimport math\nt = int(input())\nlcm = lambda a, b, x: a * b // x\nfor _ in range(t):\n    n = int(input())\n    if n == 2:\n        print(0)\n        continue\n    t = n // 2\n    if n & 1 == 0:\n        if t & 1 == 1:\n            t += 2\n        else:\n            t += 1\n    x = math.gcd(t, n - t)\n    print(lcm(t, n - t, x) - x)", "for i in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(n - 2)\n    elif n % 2 == 0 and n / 2 % 2 == 1:\n        a = n // 2 + 2\n        b = n // 2 - 2\n        print(a * b - 1)\n    elif n % 2 == 0 and n / 2 % 2 == 0:\n        a = n // 2 + 1\n        b = n // 2 - 1\n        print(a * b - 1)\n    elif n % 2 == 1:\n        a = n // 2\n        b = n // 2 + 1\n        print(a * b - 1)", "try:\n    t = 1\n    t = int(input())\n    while t > 0:\n        n = int(input())\n        if n == 2:\n            print(0)\n        elif n % 2 == 1:\n            print((n - 1) // 2 * ((n + 1) // 2) - 1)\n        elif n % 2 == 0:\n            if (n // 2 - 1) % 2 == 1:\n                print((n // 2 - 1) * (n // 2 + 1) - 1)\n            else:\n                print((n // 2 - 2) * (n // 2 + 2) - 1)\nexcept:\n    pass", "t = int(input())\n\ndef solve(x):\n    if x == 2:\n        return 0\n    t = x // 2\n    if x & 1 == 1:\n        return t * (t + 1) - 1\n    elif t % 2 == 0:\n        return (t - 1) * (t + 1) - 1\n    else:\n        return (t - 2) * (t + 2) - 1\nfor _ in range(t):\n    n = int(input())\n    print(solve(n))", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1 == 1:\n        print((n >> 1) * (n + 1 >> 1) - 1)\n    elif n == 2:\n        print(0)\n    elif n >> 1 & 1 == 0:\n        print(((n >> 1) - 1) * ((n >> 1) + 1) - 1)\n    else:\n        print(((n >> 1) - 2) * ((n >> 1) + 2) - 1)", "import math\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    if n == 2:\n        print(0)\n        continue\n    if n % 2 == 0:\n        c = int(n / 2)\n        if c % 2 == 0:\n            res = (c - 1) * (n - c + 1) - 1\n            print(int(res))\n        else:\n            res = (c - 2) * (n - c + 2) - 1\n            print(int(res))\n    else:\n        res = n // 2 * (n - n // 2) - 1\n        print(int(res))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 2:\n        print(0)\n    elif n % 2 == 1:\n        print((n - 1) // 2 * ((n + 1) // 2) - 1)\n    elif (n // 2 - 1) % 2 == 1:\n        print((n // 2 - 1) * (n // 2 + 1) - 1)\n    else:\n        print((n // 2 - 2) * (n // 2 + 2) - 1)", "def gcd(a, b):\n    while a != b:\n        if a > b:\n            a = a - b\n        else:\n            b = b - a\n    return a\nfor i in range(int(input())):\n    n = int(input())\n    ans = 0\n    x = 0\n    if n == 2:\n        ans = 0\n    elif n == 4:\n        ans = 2\n    elif n % 2 == 0:\n        (x, y) = (n // 2 - 1, n // 2 + 1)\n        (c, d) = (n // 2 - 2, n // 2 + 2)\n        if x % 2 != 0 and y % 2 != 0:\n            ans = x * y - 1\n        elif c % 2 != 0 and d % 2 != 0:\n            ans = c * d - 1\n        elif x % 2 != 0 or y % 2 != 0:\n            a1 = gcd(x, y)\n            if a1 == 1:\n                ans = y * x - 1\n        elif c % 2 != 0 or d % 2 != 0:\n            a2 = gcd(c, d)\n            if a2 == 1:\n                ans = c * d - 1\n    else:\n        ans = (n // 2 + 1) * (n // 2) - 1\n    print(ans)"]