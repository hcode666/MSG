["for _ in range(int(input())):\n    n = int(input())\n    ali = list(map(int, input().split()))\n    bli = list(map(int, input().split()))\n    ali.sort()\n    bli.sort()\n    k = n // 2\n    ali = ali[k:]\n    bli = bli[k:]\n    lst = list()\n    ln = len(ali)\n    for i in range(ln):\n        a = ali[i] + bli[ln - i - 1]\n        lst.append(a)\n    lst.sort()\n    print(lst[0])", "for _ in range(int(input())):\n    n = int(input())\n    ali = list(map(int, input().split()))\n    bli = list(map(int, input().split()))\n    ali.sort()\n    bli.sort()\n    k = n // 2\n    ali = ali[k:]\n    bli = bli[k:]\n    lst = list()\n    ln = len(ali)\n    for i in range(ln):\n        a = ali[i] + bli[ln - i - 1]\n        lst.append(a)\n    lst.sort()\n    print(lst[0])", "for _ in range(int(input())):\n    n = int(input())\n    ali = list(map(int, input().split()))\n    bli = list(map(int, input().split()))\n    ali.sort()\n    bli.sort()\n    k = n // 2\n    ali = ali[k:]\n    bli = bli[k:]\n    lst = list()\n    ln = len(ali)\n    for i in range(ln):\n        a = ali[i] + bli[ln - i - 1]\n        lst.append(a)\n    lst.sort()\n    print(lst[0])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    boys = list(map(int, input().split()))\n    girls = list(map(int, input().split()))\n    boys.sort()\n    girls.sort()\n    b = []\n    g = []\n    ans = []\n    for i in range(n // 2, n):\n        b.append(boys[i])\n        g.append(girls[i])\n    g.reverse()\n    for i in range(len(g)):\n        ans.append(b[i] + g[i])\n    print(min(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    boys = list(map(int, input().split()))\n    girls = list(map(int, input().split()))\n    boys.sort()\n    girls.sort()\n    b = []\n    g = []\n    ans = []\n    for i in range(n // 2, n):\n        b.append(boys[i])\n        g.append(girls[i])\n    g.reverse()\n    for i in range(len(g)):\n        ans.append(b[i] + g[i])\n    print(min(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    boys = list(map(int, input().split()))\n    girls = list(map(int, input().split()))\n    boys.sort()\n    girls.sort()\n    b = []\n    g = []\n    ans = []\n    for i in range(n // 2, n):\n        b.append(boys[i])\n        g.append(girls[i])\n    g.reverse()\n    for i in range(len(g)):\n        ans.append(b[i] + g[i])\n    print(min(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    brr = []\n    arr = []\n    br = []\n    a.sort()\n    b.sort()\n    for i in range(n // 2, n):\n        arr.append(a[i])\n        brr.append(b[i])\n    for i in range(len(arr)):\n        arr[i] += brr[len(brr) - 1 - i]\n    print(min(arr))", "for i in range(int(input())):\n    n = int(input())\n    A = sorted(list(map(int, input().split())))\n    B = sorted(list(map(int, input().split())))\n    C = []\n    for i in range(n // 2, n):\n        j = n - (i - n // 2) - 1\n        C.append(A[i] + B[j])\n    C = sorted(C)\n    print(C[0])", "for i in range(int(input())):\n    n = int(input())\n    A = sorted(list(map(int, input().split())))\n    B = sorted(list(map(int, input().split())))\n    C = []\n    for i in range(n // 2, n):\n        j = n - (i - n // 2) - 1\n        C.append(A[i] + B[j])\n    C = sorted(C)\n    print(C[0])", "import sys\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort()\n    a = (N - 1) // 2\n    b = N - 1\n    med = sys.maxsize\n    for i in range(a, N):\n        med = min(med, A[i] + B[b])\n        b -= 1\n    print(med)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort()\n    a = (N - 1) // 2\n    b = N - 1\n    med = 1e+18\n    for i in range(a, N):\n        med = min(med, A[i] + B[b])\n        b -= 1\n    print(med)", "import math\n\ndef test():\n    N = int(input())\n    As = list(map(int, input().split()))\n    Bs = list(map(int, input().split()))\n    As.sort()\n    Bs.sort()\n    C = []\n    for i in range(0, math.ceil(N / 2)):\n        C.append(As[N - i - 1] + Bs[i + N // 2])\n    print(min(C))\ntests = int(input())\nfor i in range(tests):\n    test()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = sorted(list(map(int, input().split())))\n    g = sorted(list(map(int, input().split())))\n    i = n // 2\n    b = b[i:]\n    g = g[i:]\n    g.reverse()\n    med = [k + j for (k, j) in zip(b, g)]\n    print(min(med))", "def solution():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort()\n    start = (N - 1) // 2\n    end = N - 1\n    median = 1e+18\n    for i in range(start, N):\n        median = min(median, A[i] + B[end])\n        end -= 1\n    print(median)\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    solution()", "for testcase in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if n == 1:\n        print(a[0] + b[0])\n        continue\n    a.sort()\n    b.sort()\n    arra = []\n    arrb = []\n    for i in range(n):\n        if i < n // 2:\n            arra.append(a[i] + b[i])\n            arrb.append(a[i] + b[i])\n        else:\n            arra.append(a[i] + b[n - 1 - i + n // 2])\n            arrb.append(b[i] + a[n - 1 - i + n // 2])\n    arra.sort()\n    arrb.sort()\n    print(max(arra[n // 2], arrb[n // 2]))", "def solution():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort()\n    median = 1e+18\n    start = (N - 1) // 2\n    end = N - 1\n    for i in range(start, N):\n        median = min(median, A[i] + B[end])\n        end -= 1\n    print(median)\nT = int(input())\nwhile T > 0:\n    T = T - 1\n    solution()", "def solve():\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    if N == 1:\n        print(A[0] + B[0])\n        return\n    M = (N + 1) // 2\n    A.sort()\n    B.sort()\n    ans = 10 ** 10\n    i = M - 1\n    j = N - 1\n    while i < N:\n        ans = min(ans, A[i] + B[j])\n        i += 1\n        j -= 1\n    print(ans)\n\ndef main():\n    T = int(input())\n    while T > 0:\n        solve()\n        T = T - 1\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    a.sort()\n    b.sort()\n    a = a[n // 2:]\n    b = b[n // 2:]\n    ans = 10 ** 18\n    for i in range(len(a)):\n        ans = min(ans, b[i] + a[len(a) - 1 - i])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort(reverse=1)\n    z = []\n    for k in range(n // 2 + 1, n // 2 + 2):\n        y = []\n        for i in range(n):\n            y.append(A[i] + B[(i + k) % n])\n        y.sort()\n        print(y[n // 2])", "for T in range(int(input())):\n    N = int(input())\n    A = sorted(map(int, input().split()), reverse=True)[:N // 2 + 1]\n    B = sorted(map(int, input().split()), reverse=True)[:N // 2 + 1]\n    print(min((A[i] + B[N // 2 - i] for i in range(N // 2 + 1))))", "t = int(input())\nwhile t:\n    n = int(input())\n    med = n // 2\n    a = sorted(map(int, input().split()))\n    b = sorted(map(int, input().split()))\n    new_b = b[0:med] + sorted(b[med:], reverse=True)\n    c = []\n    for i in range(n):\n        c.append(a[i] + new_b[i])\n    c = sorted(c)\n    print(c[med])\n    t -= 1", "for test in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort()\n    m = 1999999999\n    mid = N // 2\n    for i in range(mid, N):\n        j = N - 1 - (i - mid)\n        m = min(m, A[i] + B[j])\n    print(m)", "cnt = int(input())\nfor i in range(cnt):\n    N = int(input())\n    Ais = list(map(int, input().split()))\n    Bis = list(map(int, input().split()))\n    Ais.sort()\n    Bis.sort()\n    Ais = Ais[int((N - 1) / 2):]\n    Bis = Bis[int((N - 1) / 2):]\n    Bis.sort(reverse=True)\n    median = 2000000001\n    for j in range(len(Ais)):\n        if median > Ais[j] + Bis[j]:\n            median = Ais[j] + Bis[j]\n    print(median)", "cnt = int(input())\nfor i in range(cnt):\n    N = int(input())\n    Ais = list(map(int, input().split()))\n    Bis = list(map(int, input().split()))\n    Ais.sort()\n    Bis.sort()\n    Ais = Ais[int((N - 1) / 2):]\n    Bis = Bis[int((N - 1) / 2):]\n    Bis.sort(reverse=True)\n    median = 10000000000\n    for j in range(len(Ais)):\n        if median > Ais[j] + Bis[j]:\n            median = Ais[j] + Bis[j]\n    print(median)", "import heapq\nfrom math import gcd, sqrt, ceil\n\ndef ti():\n    return tuple(map(int, input().split()))\n\ndef li():\n    return list(map(int, input().split()))\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    n = ii()\n    a = li()\n    b = li()\n    a.sort()\n    b.sort()\n    for i in range(n // 2):\n        a[i] += b[i]\n    for i in range(n // 2, n):\n        a[i] += b[n + (n // 2 - i) - 1]\n    a.sort()\n    print(a[n // 2])", "import heapq\nfrom math import gcd, sqrt, ceil\n\ndef ti():\n    return tuple(map(int, input().split()))\n\ndef li():\n    return list(map(int, input().split()))\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    n = ii()\n    a = li()\n    b = li()\n    a.sort()\n    b.sort()\n    for i in range(n // 2):\n        a[i] += b[i]\n    for i in range(n // 2, n):\n        a[i] += b[n + (n // 2 - i) - 1]\n    a.sort()\n    print(a[n // 2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort(reverse=True)\n    half = b[n // 2 + 1:]\n    half1 = half[::-1]\n    b1 = half1 + b[0:n // 2 + 1]\n    l = []\n    for i in range(0, len(a)):\n        s = a[i] + b1[i]\n        l.append(s)\n    l.sort()\n    print(l[len(l) // 2])", "for _ in range(int(input())):\n    numberOfBoys = int(input())\n    listOfBoys = list(map(int, input().split()))\n    listOfGirls = list(map(int, input().split()))\n    listOfBoys.sort()\n    listOfGirls.sort()\n    listOfHappiness = []\n    medianPos = int(numberOfBoys / 2)\n    for i in range(0, medianPos):\n        listOfHappiness.append(listOfGirls[i] + listOfBoys[i])\n    start = medianPos\n    end = numberOfBoys - 1\n    while True:\n        listOfHappiness.append(listOfGirls[start] + listOfBoys[end])\n        start += 1\n        end -= 1\n        if start >= numberOfBoys:\n            break\n    listOfHappiness.sort()\n    print(listOfHappiness[medianPos])", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b.sort()\n    g.sort()\n    for i in range(n // 2):\n        b[i] += g[i]\n    for i in range(n // 2, n):\n        b[i] += g[n + n // 2 - 1 - i]\n    b.sort()\n    print(b[n // 2])", "import sys\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    a.sort()\n    b.sort()\n    e = n - 1\n    ans = sys.maxsize\n    for i in range(n // 2, n, 1):\n        ans = min(ans, a[i] + b[e])\n        e -= 1\n    print(ans)", "for iii in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if n % 2 == 0:\n        n2 = int(n / 2) - 1\n    else:\n        n2 = int(n / 2)\n    a.sort()\n    b.sort()\n    a = a[:n2] + sorted(a[n2:], reverse=True)\n    for i in range(n):\n        a[i] += b[i]\n    a.sort()\n    print(a[n2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(sorted(map(int, input().split())))\n    b = list(sorted(map(int, input().split())))\n    c = []\n    s = 0\n    for j in range(n // 2):\n        c.append(a[s] + b[j])\n        s += 1\n    for k in range(n - 1, n // 2 - 1, -1):\n        c.append(a[s] + b[k])\n        s += 1\n    c.sort()\n    print(c[n // 2])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(sorted(map(int, input().split())))\n    b = list(sorted(map(int, input().split())))\n    c = []\n    ai = 0\n    for i in range(n // 2):\n        c.append(a[ai] + b[i])\n        ai += 1\n    for j in range(n - 1, n // 2 - 1, -1):\n        c.append(a[ai] + b[j])\n        ai += 1\n    c.sort()\n    print(c[n // 2])", "for _ in range(int(input())):\n    n = int(input())\n    boiz = list(map(int, input().split()))\n    grils = list(map(int, input().split()))\n    boiz.sort()\n    grils.sort()\n    boiz = boiz[len(boiz) // 2:]\n    grils = grils[len(grils) // 2:]\n    ans = []\n    for i in range(len(boiz)):\n        ans.append(boiz[i] + grils[len(grils) - 1 - i])\n    print(min(ans))", "def mxmed(n, a, b):\n    a.sort()\n    b.sort()\n    s = (n - 1) // 2\n    e = n - 1\n    med = 1e+18\n    for i in range(s, n):\n        med = min(med, a[i] + b[e])\n        e = e - 1\n    print(med)\n    return\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mxmed(n, a, b)", "def mxmed(n, a, b):\n    a.sort()\n    b.sort()\n    s = (n - 1) // 2\n    e = n - 1\n    med = 1e+18\n    for i in range(s, n):\n        med = min(med, a[i] + b[e])\n        e = e - 1\n    print(med)\n    return\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mxmed(n, a, b)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort(reverse=True)\n    L = []\n    for i in range(N // 2, N):\n        L.append(A[i] + B[i - N // 2])\n    print(min(L))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = list(map(int, input().strip().split()))\n    list2 = list(map(int, input().strip().split()))\n    list1.sort()\n    list2.sort()\n    mid = n // 2\n    list1 = list1[mid:]\n    list2 = list2[mid:]\n    list1.sort(reverse=True)\n    list3 = [list1[i] + list2[i] for i in range(len(list1))]\n    list3.sort()\n    print(list3[0])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = list(map(int, input().strip().split()))\n    list2 = list(map(int, input().strip().split()))\n    list1.sort()\n    list2.sort()\n    mid = n // 2\n    list1 = list1[mid:]\n    list2 = list2[mid:]\n    list2.sort(reverse=True)\n    list3 = [list1[i] + list2[i] for i in range(len(list1))]\n    list3.sort()\n    print(list3[0])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = list(map(int, input().strip().split()))\n    list2 = list(map(int, input().strip().split()))\n    list1.sort()\n    list2.sort()\n    mid = n // 2\n    list1 = list1[mid:]\n    list2 = list2[mid:]\n    if list2[-1] > list1[-1]:\n        list2.sort(reverse=True)\n    else:\n        list1.sort(reverse=True)\n    list3 = [list1[i] + list2[i] for i in range(len(list1))]\n    list3.sort()\n    print(list3[0])", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    arr1 = sorted(list((int(i) for i in input().strip().split())))\n    arr2 = sorted(list((int(i) for i in input().strip().split())))\n    temp = arr2[:n // 2]\n    arr2 = temp + arr2[n // 2:][::-1]\n    new_arr = []\n    for i in range(n):\n        new_arr.append(arr1[i] + arr2[i])\n    new_arr.sort()\n    print(new_arr[n // 2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l1.sort()\n    l2.sort()\n    l11 = l2[0:n // 2]\n    l2 = l2[n // 2:]\n    l2.reverse()\n    l3 = []\n    l2 = l11 + l2\n    i = 0\n    while i < n:\n        l3.append(l1[i] + l2[i])\n        i += 1\n    l3.sort()\n    print(l3[n // 2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l1.sort()\n    l2.sort()\n    l11 = l2[0:n // 2]\n    l2 = l2[n // 2:]\n    l11.reverse()\n    l2.reverse()\n    l3 = []\n    l2 = l11 + l2\n    i = 0\n    while i < n:\n        l3.append(l1[i] + l2[i])\n        i += 1\n    l3.sort()\n    print(l3[n // 2])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    m = (n - 1) // 2\n    ans = a[m] + b[n - 1]\n    k = n - 1\n    for i in range(m, n):\n        ans = min(ans, a[i] + b[k])\n        k -= 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    start = (n - 1) // 2\n    end = n - 1\n    median = 1e+18\n    for i in range(start, n):\n        median = min(median, a[i] + b[end])\n        end -= 1\n    print(median)\n    t -= 1", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    start = n // 2\n    end = n - 1\n    maxmed = float('inf')\n    for i in range(start, n):\n        maxmed = min(maxmed, a[i] + b[end])\n        end -= 1\n    print(maxmed)\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = sorted(a)\n    b = sorted(b)\n    b = b[::-1]\n    temp = []\n    for i in range(n // 2, n):\n        temp.append(a[i])\n    for i in range(0, n // 2):\n        temp.append(a[i])\n    for i in range(n):\n        b[i] = b[i] + temp[i]\n    b.sort()\n    print(b[n // 2])", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    if n == 1:\n        print(arr[0] + brr[0])\n    else:\n        arr.sort()\n        brr.sort()\n        arr = arr[n // 2:]\n        brr = brr[n // 2:][::-1]\n        ans = float('inf')\n        for (a, b) in zip(arr, brr):\n            ans = min(ans, a + b)\n        print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A = sorted(A)[int(N / 2):]\n    B = sorted(B)[int(N / 2):]\n    B = sorted(B, reverse=True)\n    C = [x + y for (x, y) in zip(A, B)]\n    sorted(C)\n    print(min(C))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().rstrip().split()))\n    b = list(map(int, input().rstrip().split()))\n    a.sort()\n    b.sort()\n    ans = 2000000000\n    k = n - 1\n    for i in range(n - (n // 2 + 1), n):\n        ans = min(ans, a[i] + b[k])\n        i += 1\n        k -= 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l1.sort()\n    l2.sort()\n    k = n // 2 + 1\n    median = l1[n - 1] + l2[n - 1]\n    for i in range(k):\n        m = l1[k + i - 1] + l2[n - 1 - i]\n        if m < median:\n            median = m\n    print(median)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    median = a[n - 1] + b[n - 1]\n    for i in range(n // 2 + 1):\n        if a[n // 2 + i] + b[n - i - 1] < median:\n            median = a[n // 2 + i] + b[n - i - 1]\n    print(median)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    median = a[n - 1] + b[n - 1]\n    for i in range(n // 2 + 1):\n        if a[n // 2 + i] + b[n - i - 1] < median:\n            median = a[n // 2 + i] + b[n - i - 1]\n    print(median)", "def solve(N, A, B):\n    if N == 1:\n        return A[0] + B[0]\n    A.sort()\n    B.sort()\n    start = N // 2\n    end = N - 1\n    res = float('inf')\n    while start < N:\n        res = min(res, A[start] + B[end])\n        start += 1\n        end -= 1\n    return res\nfor i in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print(solve(N, A, B))", "for i in range(int(input())):\n    n = int(input())\n    inp1 = list(map(int, input().split()))\n    inp1.sort()\n    inp2 = list(map(int, input().split()))\n    inp2.sort()\n    if n == 1:\n        print(inp1[0] + inp2[0])\n    else:\n        r = inp1[n // 2] + inp2[n - 1]\n        for i in range(1, n // 2 + 1):\n            if inp1[n // 2 + i] + inp2[n - i - 1] < r:\n                r = inp1[n // 2 + i] + inp2[n - i - 1]\n        print(r)", "from bisect import bisect_left\nfrom re import sub\nimport re\nfrom typing import DefaultDict\nimport math\nfrom collections import defaultdict\nfrom math import sqrt\nimport collections\nfrom sys import maxsize\nfrom itertools import combinations_with_replacement\nimport sys\nimport copy\n\ndef sieve_erasthones(n):\n    cnt = 0\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p ** 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\n    return prime\n\ndef calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\n\ndef count_factors(n):\n    i = 1\n    c = 0\n    ans = []\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n // i == i:\n                c += 1\n                ans.append(n // i)\n            else:\n                c += 2\n                ans.append(i)\n                ans.append(n // i)\n        i += 1\n    return ans\n    return c\n\ndef ncr_modulo(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = num * (n - i) % p\n        den = den * (i + 1) % p\n    return num * pow(den, p - 2, p) % p\n\ndef isprime(n):\n    prime_flag = 0\n    if n > 1:\n        for i in range(2, int(sqrt(n)) + 1):\n            if n % i == 0:\n                prime_flag = 1\n                break\n        if prime_flag == 0:\n            return True\n        else:\n            return False\n    else:\n        return True\n\ndef smallestDivisor(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\n\ndef dict_ele_count(l):\n    d = DefaultDict(lambda : 0)\n    for ele in l:\n        d[ele] += 1\n    return d\n\ndef max_in_dict(d):\n    maxi = 0\n    for ele in d:\n        if d[ele] > maxi:\n            maxi = d[ele]\n    return maxi\n\ndef element_count(s):\n    l = []\n    k = s[0]\n    c = 0\n    for ele in s:\n        if ele == k:\n            c += 1\n        else:\n            l.append([k, c])\n            k = ele\n            c = 1\n    l.append([k, c])\n    return l\n\ndef modular_exponentiation(x, y, p):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 != 0:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\n\ndef number_of_primefactor(n):\n    l = []\n    while n % 2 == 0:\n        l.append(2)\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            l.append(i)\n            n = n / i\n    if n > 2:\n        l.append(n)\n    return list(set(l))\n\ndef twosum(a, n, x):\n    rem = []\n    for i in range(x):\n        rem.append(0)\n    for i in range(n):\n        if a[i] < x:\n            rem[a[i] % x] += 1\n    for i in range(1, x // 2):\n        if rem[i] > 0 and rem[x - i] > 0:\n            return True\n    if i >= x // 2:\n        if x % 2 == 0:\n            if rem[x // 2] > 1:\n                return True\n            else:\n                return False\n        elif rem[x // 2] > 0 and rem[x - x // 2] > 0:\n            return True\n        else:\n            return False\n\ndef divSum(num):\n    result = 0\n    i = 2\n    while i <= math.sqrt(num):\n        if num % i == 0:\n            if i == num / i:\n                result = result + i\n            else:\n                result = result + (i + num / i)\n        i = i + 1\n    return result + 1 + num\n\ndef subsequence(str1, str2):\n    m = len(str1)\n    n = len(str2)\n    j = 0\n    i = 0\n    while j < m and i < n:\n        if str1[j] == str2[i]:\n            j = j + 1\n        i = i + 1\n    return j == m\n\ndef primeFactors(n):\n    d = defaultdict(lambda : 0)\n    while n % 2 == 0:\n        d[2] += 1\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            d[int(i)] += 1\n            n = n / i\n    if n > 2:\n        d[int(n)] += 1\n    return d\n\ndef modInverse(b, m):\n    g = math.gcd(b, m)\n    if g != 1:\n        return -1\n    else:\n        return pow(b, m - 2, m)\n\ndef modDivide(a, b, m):\n    a = a % m\n    inv = modInverse(b, m)\n    return inv * a % m\n\ndef count(n):\n    ans = 0\n    while n:\n        ans += n % 10\n        n //= 10\n    return ans\n\ndef lcm(a, b):\n    return a * b // math.gcd(a, b)\n\ndef check(n):\n    c = 0\n    while n % 2 == 0:\n        n //= 2\n        c += 1\n    return c\n\ndef solve():\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l1.sort()\n    l2.sort(reverse=True)\n    ans = []\n    for i in range(n // 2, n):\n        ans.append(l1[i] + l2[i - n // 2])\n    return min(ans)\nfor _ in range(int(input())):\n    print(solve())", "n = int(input())\nfor i in range(n):\n    t = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    b = b[:t // 2] + sorted(b[t // 2:], reverse=True)\n    l = [a[i] + b[i] for i in range(t)]\n    l.sort()\n    print(l[t // 2])", "import math\nt = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    start = (n - 1) // 2\n    end = n - 1\n    median = float('inf')\n    for i in range(start, n):\n        median = min(median, a[i] + b[end])\n        end -= 1\n    print(median)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    boy = list(map(int, input().split()))\n    girl = list(map(int, input().split()))\n    boy.sort()\n    girl.sort(reverse=True)\n    mid = (n - 1) // 2\n    k = 0\n    median = float('inf')\n    for i in range(mid, n):\n        median = min(boy[i] + girl[k], median)\n        k += 1\n    print(median)", "for _ in range(int(input())):\n    n = int(input())\n    boy = list(map(int, input().split()))\n    girl = list(map(int, input().split()))\n    boy.sort()\n    girl.sort(reverse=True)\n    mid = (n - 1) // 2\n    j = 0\n    median = float('inf')\n    for i in range(mid, n):\n        median = min(boy[i] + girl[j], median)\n        j += 1\n    print(median)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    a = a[n // 2:]\n    b = b[n // 2:]\n    c = [a[x] + b[-1 - x] for x in range(len(a))]\n    print(min(c))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = sorted(a)\n    b = sorted(b)\n    start = n // 2\n    end = n\n    d = 0\n    c = []\n    for i in range(start, end):\n        d = 0\n        d = a[i] + b[end - 1]\n        c.append(d)\n        end -= 1\n    print(min(c))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a1 = [int(x) for x in input().split()]\n    a2 = [int(x) for x in input().split()]\n    a1.sort()\n    a2.sort()\n    a1 = a1[(n - 1) // 2:]\n    a2 = a2[(n - 1) // 2:]\n    a1 = a1[::-1]\n    a = []\n    for i in range(len(a1)):\n        sum = a1[i] + a2[i]\n        a.append(sum)\n    a.sort()\n    print(a[0])", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    b.sort()\n    g.sort()\n    i = (n - 1) // 2\n    j = n - 1\n    mn = float('inf')\n    while i < n:\n        mn = min(mn, b[i] + g[j])\n        i += 1\n        j -= 1\n    print(mn)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = sorted(a)\n    b = sorted(b)\n    start = n // 2\n    end = n\n    temp = 0\n    c = []\n    for i in range(start, end):\n        temp = 0\n        temp = a[i] + b[end - 1]\n        c.append(temp)\n        end -= 1\n    print(min(c))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    b = [int(i) for i in input().split()]\n    b.sort(reverse=True)\n    mid = n // 2\n    a = a[mid:]\n    b = b[:mid + 1]\n    l = []\n    for i in range(mid + 1):\n        l.append(a[i] + b[i])\n    l.sort()\n    print(l[0])", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    a = a[n // 2:]\n    b = b[n // 2:]\n    b = b[::-1]\n    x = 9999999999\n    for i in range(n - n // 2):\n        x = min(x, a[i] + b[i])\n    print(x)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    mid = len(a) // 2\n    i = mid\n    j = n - 1\n    ans = math.inf\n    for _ in range(mid + 1):\n        ans = min(ans, a[i] + b[j])\n        i += 1\n        j -= 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    c = n // 2\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if n == 1:\n        print(a[0] + b[0])\n        continue\n    b = sorted(b, reverse=True)\n    a = sorted(a)\n    s = []\n    ans = []\n    for i in range(c, n, 1):\n        ans.append(a[i] + b[i - c])\n    ans.sort()\n    print(ans[0])", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))[n // 2:]\n    b = sorted(list(map(int, input().split())))[n // 2:]\n    b.sort(reverse=True)\n    c = sorted([x + y for (x, y) in zip(a, b)])\n    print(c[0])", "for i in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    k.sort()\n    m.sort()\n    median = 1e+18\n    start = (n - 1) // 2\n    end = n - 1\n    for i in range(start, n):\n        median = min(median, k[i] + m[end])\n        end -= 1\n    print(median)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().strip().split()))[:N]\n    B = list(map(int, input().strip().split()))[:N]\n    A.sort()\n    B.sort()\n    start = (N - 1) / 2\n    end = N - 1\n    med = 1000000000000000000000000\n    for i in range((N - 1) // 2, N):\n        res = A[i] + B[end]\n        med = min(res, med)\n        end -= 1\n    print(med)", "def T(A, B):\n    C = []\n    for i in range(len(A)):\n        C.append(A[i] + B[i])\n    return C\na = int(input())\nfor i in range(a):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    if N == 1:\n        print(A[0] + B[0])\n    else:\n        A.sort()\n        B.sort()\n        b = int((N + 1) / 2) - 1\n        C = []\n        C += T(A[:b], B[:b])\n        C += T(A[b:N], B[N - 1:b - 1:-1])\n        C.sort()\n        c = C[int((N + 1) / 2) - 1]\n        print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    start = (n - 1) // 2\n    end = n - 1\n    median = 1e+18\n    for i in range(start, n):\n        median = min(median, a[i] + b[end])\n        end -= 1\n    print(median)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    res = float('inf')\n    for i in range((n - 1) // 2, n):\n        res = min(res, a[i] + b[n - 1])\n        n -= 1\n    print(res)", "import numpy as np\nt = int(input())\nfor tests in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    c = []\n    x = n - 1\n    for i in range(len(a) // 2, len(a)):\n        c.append(a[i] + b[x])\n        x -= 1\n    print(min(c))", "import numpy as np\nt = int(input())\nfor tests in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    c = []\n    x = n - 1\n    for i in range(len(a) // 2, len(a)):\n        c.append(a[i] + b[x])\n        x -= 1\n    print(min(c))", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l1.sort()\n    l2.sort()\n    num = []\n    st = n - 1\n    for i in range(n // 2, n):\n        num.append(l1[i] + l2[st])\n        st -= 1\n    num.sort()\n    print(num[0])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    x = int(n / 2)\n    c = []\n    for i in range(x):\n        c.append(a[i] + b[i])\n    for i in range(x + 1):\n        c.append(a[i + x] + b[n - i - 1])\n    c.sort()\n    print(c[x])", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    low = 3 * pow(10, 9)\n    mid = (n - 1) // 2\n    arr1.sort()\n    arr2.sort()\n    for i in range(mid, n):\n        num = arr1[i] + arr2[n - (i - mid) - 1]\n        low = min(low, num)\n    print(low)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    k = n // 2\n    l = []\n    for i in range(k, n):\n        l.append(a[i] + b[n + k - i - 1])\n    l.sort()\n    print(l[0])", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ra = n // 2\n    a.sort()\n    b.sort()\n    a = a[ra:]\n    b = b[ra:]\n    c = []\n    m = len(a)\n    for i in range(0, m):\n        c.append(a[i] + b[m - 1 - i])\n    c.sort()\n    print(c[0])", "for i in range(int(input())):\n    n = int(input())\n    l1 = sorted(list(map(int, input().split())))\n    l2 = sorted(list(map(int, input().split())))\n    m = n // 2\n    a1 = l1[m:]\n    a2 = l2[::-1]\n    a = []\n    for i in range(len(a1)):\n        a.append(a1[i] + a2[i])\n    print(min(a))", "t = int(input())\nfor x in range(t):\n    p = []\n    f = 0\n    N = int(input())\n    k = input().split()\n    o = input().split()\n    k = [int(y) for y in k]\n    o = [int(y) for y in o]\n    k.sort()\n    o.sort()\n    for y in range(int(N / 2), N):\n        p.append(k[y] + o[len(k) - 1 - f])\n        f += 1\n    print(min(p))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    a = sorted(a)\n    b = sorted(b)\n    a1 = a[n // 2:]\n    b1 = b[n // 2:]\n    b1 = sorted(b1, reverse=True)\n    temp = []\n    for i in range(len(a1)):\n        x = a1[i] + b1[i]\n        temp.append(x)\n    a2 = a[:n // 2]\n    b2 = b[:n // 2]\n    b2 = sorted(b2, reverse=True)\n    for i in range(len(a2)):\n        y = a2[i] + b2[i]\n        temp.append(y)\n    temp = sorted(temp)\n    print(temp[n // 2])", "for i in range(int(input())):\n    num = int(input())\n    arr1 = list(map(int, input().split(' ')))\n    arr2 = list(map(int, input().split(' ')))\n    arr1.sort()\n    arr2.sort()\n    medium = num // 2\n    arr = arr2[medium:]\n    lis1 = arr1[medium:]\n    lis2 = arr[::-1]\n    ans = []\n    for i in range(len(lis1)):\n        sm = lis1[i] + lis2[i]\n        ans.append(sm)\n    ans.sort()\n    print(ans[0])", "import math\nno_test = int(input())\nsol = []\n\ndef fun(n):\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    a.sort()\n    b.sort()\n    c = []\n    a = a[n // 2:]\n    b = b[n // 2:]\n    for i in range(n // 2 + 1):\n        c.append(a.pop() + b.pop(0))\n    c.sort()\n    return c[0]\nfor _ in range(0, no_test):\n    a = int(input())\n    sol.append(fun(a))\nfor k in sol:\n    print(k)", "import math\nfrom collections import Counter\nints = lambda : list(map(int, input().split()))\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nmx = 10 ** 5\ninp = lambda : int(input())\n\ndef easy():\n    n = inp()\n    s = input()\n    v = ['a', 'e', 'i', 'o', 'u']\n    consecutive = 0\n    for x in s:\n        if x not in v:\n            consecutive += 1\n        else:\n            consecutive = 0\n        if consecutive == 4:\n            return 'no'\n    return 'yes'\n\ndef make_pal():\n    n = inp()\n    s = input()\n    ev_s = od_s = ''\n    for i in range(n):\n        if i % 2:\n            ev_s += s[i]\n        else:\n            od_s += s[i]\n    ct1 = Counter(ev_s)\n    ct2 = Counter(od_s)\n    if ct1 == ct2:\n        return 'yes'\n    else:\n        return 'no'\n\ndef max_matching():\n    n = inp()\n    a = ints()\n    b = ints()\n    if n != 1:\n        b.sort()\n        a.sort(reverse=True)\n        med = 10 ** 10\n        half = b[n // 2:]\n        for i in range(len(half)):\n            med = min(med, a[i] + half[i])\n        return med\n    else:\n        return a[0] + b[0]\n\ndef largest():\n    n = inp()\n    arr = ints()\n    arr.sort()\n    cts = 0\n    parents = 0\n    while cts != n:\n        if parents + arr[cts] <= n - 1:\n            parents += arr[cts]\n            cts += 1\n        else:\n            break\n    return cts\n\ndef cons_xor():\n    n = inp()\n    a = input()\n    b = input()\n    if a.count('1') == 0 and b.count('1'):\n        print('no')\n    else:\n        prev_i = None\n        temp_a = temp_b = ''\n        for i in range(n):\n            if a[i] != b[i]:\n                temp_a += a[i]\n                temp_b += b[i]\n            else:\n                ...\n            prev_i = i\nfor _ in range(inp()):\n    print(max_matching())", "from operator import add\nimport math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort(reverse=True)\n    mid = math.floor(n / 2)\n    c = list(map(add, a[mid:n], b[:mid + 1]))\n    print(min(c))", "for t in range(int(input())):\n    n = int(input())\n    boys = [int(s) for s in input().split()]\n    girls = [int(s) for s in input().split()]\n    boys = sorted(boys)\n    girls = sorted(girls)\n    if n == 1:\n        print(boys[0] + girls[0])\n        continue\n    mid = (n - 1) // 2\n    ans = 1e+19\n    end = n - 1\n    for i in range(mid, n):\n        ans = min(ans, boys[i] + girls[end])\n        end -= 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    a = a[n // 2:]\n    b = b[n // 2:]\n    b.reverse()\n    c = [a[i] + b[i] for i in range(len(a))]\n    c.sort()\n    print(c[0])", "for _ in range(int(input())):\n    l = int(input())\n    lis1 = list(map(int, input().split()))\n    lis2 = list(map(int, input().split()))\n    lis3 = []\n    if len(lis1) == 1 and len(lis2) == 1:\n        print(lis1[0] + lis2[0])\n    else:\n        lis1.sort()\n        lis2.sort()\n        lis1 = lis1[l // 2:]\n        lis2 = lis2[l // 2:]\n        for i in range(len(lis1)):\n            lis3.append(lis1[i] + lis2[len(lis1) - i - 1])\n        lis3.sort()\n        print(lis3[0])", "from math import ceil\nt = int(input())\nwhile t:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    m = int(ceil(n / 2))\n    a.sort()\n    b.sort()\n    c = []\n    i = m - 1\n    j = n - 1\n    while i < n and j >= m - 1:\n        c.append(a[i] + b[j])\n        i += 1\n        j -= 1\n    print(min(c))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l1 = sorted(map(int, input().split()))[n // 2:]\n    l2 = sorted(map(int, input().split()))[n // 2:]\n    r3 = min((sum(i) for i in zip(l1, l2[::-1])))\n    print(r3)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    b[n // 2:] = b[n // 2:][::-1]\n    c = []\n    for i in range(n):\n        c.append(a[i] + b[i])\n    c.sort()\n    print(c[n // 2])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort(reverse=True)\n    c = []\n    for i in range(n // 2, n):\n        c.append(a[i] + b[i - n // 2])\n    print(min(c))", "for _ in range(int(input())):\n    n = int(input())\n    boy = list(map(int, input().split(' ')))\n    girl = list(map(int, input().split(' ')))\n    boy.sort()\n    girl.sort()\n    x = n // 2\n    a = girl[:x]\n    b = girl[x:]\n    b.sort(reverse=True)\n    girl = a + b\n    c = []\n    for i in range(n):\n        z = boy[i] + girl[i]\n        c.append(z)\n    c.sort()\n    print(c[x])", "import sys\ninput = sys.stdin.readline\nM = int(1000000000.0) + 7\n\ndef solve():\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    b = sorted(list(map(int, input().split())))\n    ans = float('inf')\n    for i in range(n // 2, n):\n        ans = min(ans, a[i] + b[n - i - 1 + n // 2])\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "from numpy import inf\nfor _ in range(int(input())):\n    n = int(input())\n    brr = list(map(int, input().split()))\n    grr = list(map(int, input().split()))\n    if n == 1:\n        print(brr[0] + grr[0])\n        continue\n    brr.sort()\n    grr.sort()\n    res = inf\n    back = n - 1\n    for i in range(n // 2, n):\n        res = min(res, brr[i] + grr[back])\n        back -= 1\n    print(res)"]