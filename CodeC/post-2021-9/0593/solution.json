["import sys\nfrom math import sqrt, gcd, factorial, ceil, floor, pi\nfrom collections import deque, Counter, OrderedDict\nfrom heapq import heapify, heappush, heappop\ninput = lambda : sys.stdin.readline()\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    n = I()\n    p = L()\n    s = L()\n    ans = 'YES' if p[-1] == s[0] else 'NO'\n    for i in range(n):\n        if i == 0 and p[i] != 1 or (i > 0 and p[i] not in [p[i - 1], p[i - 1] + 1]):\n            ans = 'NO'\n            break\n    for i in range(n)[::-1]:\n        if i == n - 1 and s[i] != 1 or (i < n - 1 and s[i] not in [s[i + 1], s[i + 1] + 1]):\n            ans = 'NO'\n            break\n    if ans == 'NO':\n        print(ans)\n        continue\n    st = []\n    for i in range(n):\n        (a, b) = (p[i] - (p[i - 1] if i - 1 >= 0 else 0), s[i] - (s[i + 1] if i + 1 < n else 0))\n        if a and (not b):\n            st.append('(')\n        elif b and (not a):\n            if st:\n                st.pop()\n            else:\n                ans = 'NO'\n                break\n        elif not b and (not a):\n            if not st:\n                ans = 'NO'\n                break\n    print(ans)", "import sys\nfrom math import sqrt, gcd, factorial, ceil, floor, pi\nfrom collections import deque, Counter, OrderedDict\nfrom heapq import heapify, heappush, heappop\ninput = lambda : sys.stdin.readline()\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    n = I()\n    p = L()\n    s = L()\n    ans = 'YES' if p[-1] == s[0] else 'NO'\n    for i in range(n):\n        if i == 0 and p[i] != 1 or (i > 0 and p[i] not in [p[i - 1], p[i - 1] + 1]):\n            ans = 'NO'\n            break\n    for i in range(n)[::-1]:\n        if i == n - 1 and s[i] != 1 or (i < n - 1 and s[i] not in [s[i + 1], s[i + 1] + 1]):\n            ans = 'NO'\n            break\n    if ans == 'NO':\n        print(ans)\n        continue\n    st = []\n    for i in range(n):\n        (a, b) = (p[i] - (p[i - 1] if i - 1 >= 0 else 0), s[i] - (s[i + 1] if i + 1 < n else 0))\n        if a and (not b):\n            st.append('(')\n        elif b and (not a):\n            if st:\n                st.pop()\n            else:\n                ans = 'NO'\n                break\n        elif not b and (not a):\n            if not st:\n                ans = 'NO'\n                break\n    print(ans)"]