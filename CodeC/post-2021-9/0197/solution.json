["import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    count = 0\n    d = abs(a - b)\n    r = math.sqrt(d)\n    for i in range(1, int(r + 1)):\n        if d % i == 0:\n            count = count + 1\n            if d // i != i:\n                count = count + 1\n    print(count)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    diff = abs(b - a)\n    all = 0\n    for i in range(1, int(diff ** (1 / 2)) + 1):\n        if diff % i == 0:\n            all += 1\n            if i != diff ** (1 / 2):\n                all += 1\n    print(all)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    diff = abs(b - a)\n    all = 0\n    for i in range(1, int(diff ** (1 / 2)) + 1):\n        if diff % i == 0:\n            all += 1\n            if i != diff ** (1 / 2):\n                all += 1\n    print(all)", "t = int(input())\nfor i in range(t):\n    (a, b) = list(map(int, input().split()))\n    x = abs(a - b)\n    count = 0\n    j = 1\n    while j * j <= x:\n        if x % j == 0:\n            count = count + 1\n            if x / j != j:\n                count = count + 1\n        j = j + 1\n    print(count)", "t = int(input())\nfor ni in range(t):\n    (a, b) = map(int, input().split())\n    x = abs(a - b)\n    count = 0\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            count = count + 1\n            if x / i != i:\n                count = count + 1\n        i = i + 1\n    print(count)", "for tc in range(int(input())):\n    (a, b) = map(int, input().split())\n    d = abs(a - b)\n    ans = 0\n    i = 1\n    while i * i <= d:\n        if d % i == 0:\n            ans += 1\n            if d / i != i:\n                ans += 1\n        i += 1\n    print(ans)", "def factors(n):\n    fact = 1\n    fact_sq = 1\n    sum1 = 0\n    while fact_sq <= n:\n        if n % fact == 0:\n            if fact_sq == n:\n                sum1 += 1\n            else:\n                sum1 += 2\n        fact += 1\n        fact_sq = fact * fact\n    return sum1\nfor _ in range(int(input())):\n    (A, B) = map(int, input().split())\n    print(factors(abs(A - B)))", "def factors(n):\n    fact = 1\n    fact_sq = 1\n    sum1 = 0\n    while fact_sq <= n:\n        if n % fact == 0:\n            if fact_sq == n:\n                sum1 += 1\n            else:\n                sum1 += 2\n        fact += 1\n        fact_sq = fact * fact\n    return sum1\nfor _ in range(int(input())):\n    (A, B) = map(int, input().split())\n    print(factors(abs(A - B)))", "from collections import Counter\nimport math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    n = abs(a - b)\n    l = []\n    while n % 2 == 0:\n        l.append(2)\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            l.append(i)\n            n = n / i\n    if n > 2:\n        l.append(n)\n    a = Counter(l)\n    count = 1\n    for i in a:\n        count = count * (a[i] + 1)\n    print(count)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = abs(a - b)\n    d = 0\n    i = 1\n    while i * i <= c:\n        if c % i == 0:\n            d += 1\n            if c / i != i:\n                d += 1\n        i += 1\n    print(d)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    d = 0\n    c = abs(a - b)\n    i = 1\n    while i * i <= c:\n        if c % i == 0:\n            d += 1\n            if c / i != i:\n                d += 1\n        i += 1\n    print(d)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    d = 0\n    c = abs(a - b)\n    i = 1\n    while i * i <= c:\n        if c % i == 0:\n            d += 1\n            if c / i != i:\n                d += 1\n        i += 1\n    print(d)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    d = 0\n    c = abs(a - b)\n    i = 1\n    while i * i <= c:\n        if c % i == 0:\n            d += 1\n            if c / i != i:\n                d += 1\n        i += 1\n    print(d)", "t = int(input())\nfor i in range(0, t):\n    (a, b) = map(int, input().split())\n    z = abs(a - b)\n    k = 0\n    for i in range(1, int(z ** 0.5) + 1):\n        if z % i == 0:\n            k = k + 1\n            if i != z ** 0.5:\n                k = k + 1\n    print(k)", "import math\ntest = int(input())\nfor i in range(test):\n    (din, sas) = list(map(int, input().split()))\n    pan = 0\n    jeevi = abs(sas - din)\n    sinba = math.sqrt(jeevi)\n    sinba = int(sinba)\n    for i in range(1, sinba + 1):\n        if jeevi % i == 0:\n            if jeevi // i == i:\n                pan = pan + 1\n            else:\n                pan = pan + 2\n    print(pan)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    res = abs(a - b)\n    cnt = 0\n    i = 1\n    while i * i <= res:\n        if res % i == 0:\n            cnt += 1\n            if res / i != i:\n                cnt += 1\n        i += 1\n    print(cnt)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    res = abs(a - b)\n    cnt = 0\n    i = 1\n    while i * i <= res:\n        if res % i == 0:\n            cnt += 1\n            if res / i != i:\n                cnt += 1\n        i += 1\n    print(cnt)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    res = abs(a - b)\n    cnt = 0\n    i = 1\n    while i * i <= res:\n        if res % i == 0:\n            cnt += 1\n            if res / i != i:\n                cnt += 1\n        i += 1\n    print(cnt)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    res = abs(a - b)\n    cnt = 0\n    i = 1\n    while i * i <= res:\n        if res % i == 0:\n            cnt += 1\n            if res / i != i:\n                cnt += 1\n        i += 1\n    print(cnt)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    diff = abs(b - a)\n    all = 0\n    for i in range(1, int(diff ** (1 / 2)) + 1):\n        if diff % i == 0:\n            all += 1\n            if i != diff ** (1 / 2):\n                all += 1\n    print(all)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    diff = abs(b - a)\n    all = 0\n    for i in range(1, int(diff ** (1 / 2)) + 1):\n        if diff % i == 0:\n            all += 1\n            if i != diff ** (1 / 2):\n                all += 1\n    print(all)", "t = int(input())\nwhile t:\n    (a, b) = [int(i) for i in input().split()]\n    num = abs(a - b)\n    ans = 0\n    for i in range(1, int(pow(num, 0.5)) + 1):\n        if num % i == 0:\n            ans += 1\n            if i != num // i:\n                ans += 1\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    (a, b) = [int(i) for i in input().split()]\n    num = abs(a - b)\n    ans = 0\n    for i in range(1, int(pow(num, 0.5)) + 1):\n        if num % i == 0:\n            ans += 1\n            if i != num // i:\n                ans += 1\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    (a, b) = [int(i) for i in input().split()]\n    num = abs(a - b)\n    ans = 0\n    for i in range(1, int(pow(num, 0.5)) + 1):\n        if num % i == 0:\n            ans += 1\n            if i != num // i:\n                ans += 1\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    (a, b) = [int(i) for i in input().split()]\n    num = abs(a - b)\n    ans = 0\n    for i in range(1, int(pow(num, 0.5)) + 1):\n        if num % i == 0:\n            ans += 1\n            if i != num // i:\n                ans += 1\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    n = abs(a - b)\n    s = 0\n    for i in range(1, int(pow(n, 0.5)) + 1):\n        if n % i == 0:\n            s += 1\n            if i != n // i:\n                s += 1\n    print(s)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    n = abs(a - b)\n    s = 0\n    for i in range(1, int(pow(n, 0.5)) + 1):\n        if n % i == 0:\n            s += 1\n            if i != n // i:\n                s += 1\n    print(s)", "import math\n\ndef factor(n):\n    sq = int(math.sqrt(n))\n    fact = 1\n    sum1 = 0\n    while fact <= sq:\n        if n % fact == 0:\n            if fact == math.sqrt(n):\n                sum1 += 1\n            else:\n                sum1 += 2\n        fact += 1\n    return sum1\na = int(input())\nfor i in range(a):\n    (x, y) = map(int, input().split())\n    print(factor(abs(x - y)))", "for _ in range(int(input())):\n    (A, B) = map(int, input().split())\n    m = abs(B - A)\n    cnt = 0\n    for i in range(1, int(pow(m, 0.5)) + 1):\n        if m % i == 0:\n            cnt += 1\n            if i != m // i:\n                cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (A, B) = map(int, input().split())\n    m = abs(B - A)\n    cnt = 0\n    for i in range(1, int(pow(m, 0.5)) + 1):\n        if m % i == 0:\n            cnt += 1\n            if i != m // i:\n                cnt += 1\n    print(cnt)", "import math\nt = int(input())\nfor i in range(t):\n    [A, B] = [int(i) for i in input().split()]\n    c = 0\n    for j in range(1, math.floor(math.sqrt(abs(B - A))) + 1):\n        if abs(B - A) % j == 0:\n            if abs(B - A) // j != j:\n                c += 2\n            else:\n                c += 1\n    print(c)", "import math\n\ndef pf(num):\n    f = [i for i in range(1, int(math.sqrt(num)) + 1) if num % i == 0]\n    f2 = [num / i for i in f]\n    f3 = list(set(f + f2))\n    return len(f3)\nt = int(input())\nwhile t:\n    t = t - 1\n    (a, b) = map(int, input().split())\n    diff = abs(b - a)\n    print(pf(diff))", "import math\nt = int(input())\nfor tc in range(t):\n    (a, b) = map(int, input().split())\n    c = 0\n    for i in range(1, int(math.sqrt(abs(a - b))) + 1):\n        if abs(a - b) % i == 0:\n            c += 1\n            if i != math.sqrt(abs(a - b)):\n                c += 1\n    print(c)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    z = abs(x - y)\n    count = 0\n    for i in range(1, int(z ** 0.5) + 1):\n        if z % i == 0:\n            count += 1\n            if i != z ** 0.5:\n                count += 1\n    print(count)", "def find_factors(n):\n    i = 1\n    total_factors = 0\n    while i * i <= n:\n        if n % i == 0:\n            if n // i == i:\n                total_factors += 1\n            else:\n                total_factors += 2\n        i += 1\n    return total_factors\nT = int(input())\nfor i in range(T):\n    (x, y) = map(int, input().split())\n    z = abs(x - y)\n    print(find_factors(z))", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    z = abs(x - y)\n    count = 0\n    for i in range(1, int(z ** 0.5) + 1):\n        if z % i == 0:\n            count += 1\n            if i != z ** 0.5:\n                count += 1\n    print(count)", "def find_factors(n):\n    i = 1\n    total_factors = 0\n    while i * i <= n:\n        if n % i == 0:\n            if n // i == i:\n                total_factors += 1\n            else:\n                total_factors += 2\n        i += 1\n    return total_factors\nT = int(input())\nfor i in range(T):\n    (x, y) = map(int, input().split())\n    z = abs(x - y)\n    print(find_factors(z))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    num = abs(a - b)\n    ans = 0\n    for i in range(1, int(num ** 0.5 + 1)):\n        if num % i == 0:\n            ans += 1\n            if i != num // i:\n                ans += 1\n    print(ans)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    absolute_val = int(abs(a - b))\n    answer = 0\n    sqrtt = math.sqrt(absolute_val)\n    sqrtt += 1\n    sqrtt = int(sqrtt)\n    for i in range(1, sqrtt):\n        if absolute_val % i == 0:\n            answer += 1\n            if i != absolute_val // i:\n                answer += 1\n    print(answer)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (a, b) = map(int, input().split())\n    n = abs(a - b)\n    count = 0\n    for i in range(1, int(pow(n, 0.5)) + 1):\n        if n % i == 0:\n            count += 1\n            if i != n // i:\n                count += 1\n    print(count)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    count = 0\n    n = abs(a - b)\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            count += 1\n            if i != n // i:\n                count += 1\n    print(count)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    count = 0\n    n = abs(a - b)\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            count += 1\n            if i != n // i:\n                count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n1, n2) = map(int, input().split())\n    num = abs(n1 - n2)\n    ans = 0\n    for i in range(1, int(pow(num, 0.5)) + 1):\n        if num % i == 0:\n            ans += 1\n            if i != num // i:\n                ans += 1\n    print(ans)", "from collections import defaultdict\nfrom collections import Counter\nimport math\nimport bisect\n\nclass dsu:\n\n    def __init__(self):\n        self.parent = defaultdict(int)\n        self.size = [0] * (n + 1)\n\n    def start(self):\n        for i in range(1, n + 1):\n            self.parent[i] = i\n\n    def find(self, x):\n        if x != self.parent[x]:\n            self.parent[x] = self.find(self.parent[x])\n        return self.parent[x]\n\n    def union(self, u, v):\n        (u, v) = (self.find(u), self.find(v))\n        if u != v:\n            self.parent[v] = u\n\n    def treeinput(self, m):\n        for i in range(m):\n            (u, v) = map(int, input().split())\n            self.union(u, v)\n\n    def printt(self):\n        print(self.parent)\n\ndef setbit(arr):\n    mask = 1\n    bit = [0] * 32\n    for i in range(32):\n        for k in arr:\n            if k & mask:\n                bit[i] += 1\n        mask <<= 1\n    return bit\n\ndef prefix_sum(nums):\n    prefix = [0]\n    for i in range(len(nums)):\n        prefix.append(prefix[-1] + nums[i])\n    return prefix\n\ndef mx_lensubarray(nums):\n    res = 0\n    j = 0\n    mp = defaultdict(int)\n    prefix = prefixsum(nums)\n    mxSum = 0\n    for i in range(len(nums)):\n        if nums[i] in mp:\n            temp = mp[nums[i]]\n        else:\n            temp = 0\n        j = max(temp, j)\n        mp[nums[i]] = i + 1\n        res = max(res, i - j + 1)\n        mxSum = max(mxSum, prefix[i + 1] - prefix[j])\n    return res\n\ndef lenOfLongSubarr(self, A, N, k):\n    mp = {}\n    sm = 0\n    mxlen = 0\n    for i in range(N):\n        sm += A[i]\n        if sm == k:\n            mxlen = i + 1\n        if sm - k in mp:\n            mxlen = max(mxlen, i - mp[sm - k])\n        if sm not in mp:\n            mp[sm] = i\n    return mxlen\n\ndef no_of_factor(s):\n    cnt = 0\n    x = int(s ** 0.5)\n    for i in range(1, x + 1):\n        if not s % i:\n            cnt = cnt + 1 if s / i == i else cnt + 2\n        i += 1\n    return cnt\n\ndef primes(n):\n    arr = []\n    i = 2\n    while i * i <= n:\n        if not n % i:\n            cnt = 0\n            while not n % i:\n                cnt += 1\n                n //= i\n            arr.append([i, cnt])\n        i += 1\n    if n > 1:\n        arr.append([n, 1])\n    return arr\n\ndef sieve(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    res = []\n    for i in range(2, n + 1):\n        if prime[i]:\n            res.append(i)\n    return res\n\ndef treeinput():\n    adj = [[] for i in range(n + 1)]\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        adj[u].append(v)\n        adj[v].append(u)\n\ndef dfs_size(node, parent):\n    sum_size[node] = 1\n    for child in adj[node]:\n        if child != parent:\n            dfs_size(child, node)\n            sum_size[node] += sum_size[child]\n\ndef anda(arr):\n    res = arr[0]\n    for i in arr:\n        res &= i\n    return res\n\ndef ora(arr):\n    res = arr[0]\n    for i in arr:\n        res |= i\n    return res\n\ndef xora(arr):\n    res = 0\n    for i in arr:\n        res ^= i\n    return res\n\ndef ispowerof2(n):\n    return (n != 0) & (n & n - 1 == 0)\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(no_of_factor(abs(b - a)))", "from collections import defaultdict\nfrom collections import Counter\nimport math\nimport bisect\n\nclass dsu:\n\n    def __init__(self):\n        self.parent = defaultdict(int)\n        self.size = [0] * (n + 1)\n\n    def start(self):\n        for i in range(1, n + 1):\n            self.parent[i] = i\n\n    def find(self, x):\n        if x != self.parent[x]:\n            self.parent[x] = self.find(self.parent[x])\n        return self.parent[x]\n\n    def union(self, u, v):\n        (u, v) = (self.find(u), self.find(v))\n        if u != v:\n            self.parent[v] = u\n\n    def treeinput(self, m):\n        for i in range(m):\n            (u, v) = map(int, input().split())\n            self.union(u, v)\n\n    def printt(self):\n        print(self.parent)\n\ndef setbit(arr):\n    mask = 1\n    bit = [0] * 32\n    for i in range(32):\n        for k in arr:\n            if k & mask:\n                bit[i] += 1\n        mask <<= 1\n    return bit\n\ndef prefix_sum(nums):\n    prefix = [0]\n    for i in range(len(nums)):\n        prefix.append(prefix[-1] + nums[i])\n    return prefix\n\ndef mx_lensubarray(nums):\n    res = 0\n    j = 0\n    mp = defaultdict(int)\n    prefix = prefixsum(nums)\n    mxSum = 0\n    for i in range(len(nums)):\n        if nums[i] in mp:\n            temp = mp[nums[i]]\n        else:\n            temp = 0\n        j = max(temp, j)\n        mp[nums[i]] = i + 1\n        res = max(res, i - j + 1)\n        mxSum = max(mxSum, prefix[i + 1] - prefix[j])\n    return res\n\ndef lenOfLongSubarr(self, A, N, k):\n    mp = {}\n    sm = 0\n    mxlen = 0\n    for i in range(N):\n        sm += A[i]\n        if sm == k:\n            mxlen = i + 1\n        if sm - k in mp:\n            mxlen = max(mxlen, i - mp[sm - k])\n        if sm not in mp:\n            mp[sm] = i\n    return mxlen\n\ndef no_of_factor(s):\n    cnt = 0\n    for i in range(1, int(s ** 0.5) + 1):\n        if not s % i:\n            cnt = cnt + 1 if s / i == i else cnt + 2\n        i += 1\n    return cnt\n\ndef primes(n):\n    arr = []\n    i = 2\n    while i * i <= n:\n        if not n % i:\n            cnt = 0\n            while not n % i:\n                cnt += 1\n                n //= i\n            arr.append([i, cnt])\n        i += 1\n    if n > 1:\n        arr.append([n, 1])\n    return arr\n\ndef sieve(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    res = []\n    for i in range(2, n + 1):\n        if prime[i]:\n            res.append(i)\n    return res\n\ndef treeinput():\n    adj = [[] for i in range(n + 1)]\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        adj[u].append(v)\n        adj[v].append(u)\n\ndef dfs_size(node, parent):\n    sum_size[node] = 1\n    for child in adj[node]:\n        if child != parent:\n            dfs_size(child, node)\n            sum_size[node] += sum_size[child]\n\ndef anda(arr):\n    res = arr[0]\n    for i in arr:\n        res &= i\n    return res\n\ndef ora(arr):\n    res = arr[0]\n    for i in arr:\n        res |= i\n    return res\n\ndef xora(arr):\n    res = 0\n    for i in arr:\n        res ^= i\n    return res\n\ndef ispowerof2(n):\n    return (n != 0) & (n & n - 1 == 0)\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(no_of_factor(abs(b - a)))", "def fct(l):\n    cou = 0\n    for i in range(1, int(l ** 0.5) + 1):\n        if l % i == 0:\n            cou += 1\n            if i != l ** 0.5:\n                cou += 1\n    return cou\nfor j in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = abs(a - b)\n    print(fct(c))", "t = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    p = abs(a - b)\n    if p == 1 or p == 0:\n        print(1)\n    else:\n        count = 0\n        for i in range(1, p // 2 + 1):\n            if p / i < i:\n                break\n            if p % i == 0:\n                if p // i == i:\n                    count += 1\n                else:\n                    count += 2\n        print(count)\n    t -= 1", "t = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    p = abs(a - b)\n    if p == 1 or p == 0:\n        print(1)\n    else:\n        count = 0\n        for i in range(1, p // 2 + 1):\n            if p / i < i:\n                break\n            if p % i == 0:\n                if p // i == i:\n                    count += 1\n                else:\n                    count += 2\n        print(count)\n    t -= 1", "for w in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = []\n    d = abs(a - b)\n    cnt = 0\n    for x in range(1, int(d ** 0.5) + 1):\n        if d % x == 0:\n            if d // x == x:\n                cnt += 1\n            else:\n                cnt += 2\n    print(cnt)", "def factors(l):\n    cou = 0\n    for i in range(1, int(l ** 0.5) + 1):\n        if l % i == 0:\n            cou += 1\n            if i != l ** 0.5:\n                cou += 1\n    return cou\nq = int(input())\nfor i in range(q):\n    np = list((int(j) for j in input().split()))\n    cnt = abs(np[0] - np[1])\n    print(factors(cnt))", "def factors(l):\n    cou = 0\n    for i in range(1, int(l ** 0.5) + 1):\n        if l % i == 0:\n            cou += 1\n            if i != l ** 0.5:\n                cou += 1\n    return cou\nq = int(input())\nfor i in range(q):\n    (a, b) = map(int, input().split())\n    cnt = abs(a - b)\n    print(factors(cnt))", "def factors(l):\n    cou = 0\n    for i in range(1, int(l ** 0.5) + 1):\n        if l % i == 0:\n            cou += 1\n            if i != l ** 0.5:\n                cou += 1\n    return cou\nq = int(input())\nfor i in range(q):\n    np = list((int(j) for j in input().split()))\n    cnt = abs(np[0] - np[1])\n    print(factors(cnt))", "import math\nwhile True:\n    try:\n        t = int(input())\n        for i in range(t):\n            (a, b) = map(int, input().strip().split())\n            count = 0\n            temp = abs(a - b)\n            for i in range(1, int(temp ** 0.5 + 1)):\n                if temp % i == 0:\n                    count += 1\n                    if i != temp ** 0.5:\n                        count += 1\n            print(count)\n    except EOFError:\n        break", "def factors(n):\n    count = 0\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            count += 1\n            if i != n ** 0.5:\n                count += 1\n    return count\nT = int(input())\nfor i in range(T):\n    inp = list((int(j) for j in input().split()))\n    c = abs(inp[0] - inp[1])\n    print(factors(c))", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = abs(b - a)\n    c = 0\n    for i in range(1, int(math.sqrt(x)) + 1):\n        if x % i == 0:\n            if i == x // i:\n                c += 1\n            else:\n                c += 2\n    print(c)", "import math\nfor i in range(int(input())):\n    (p, q) = [int(s) for s in input().split()]\n    t = 0\n    k = abs(p - q)\n    for x in range(1, int(math.sqrt(abs(p - q))) + 1):\n        if k % x == 0:\n            t += 1\n            if k // x != x:\n                t += 1\n    print(t)", "import math\nfor i in range(int(input())):\n    (p, q) = [int(s) for s in input().split()]\n    t = 0\n    k = abs(p - q)\n    for x in range(1, int(math.sqrt(abs(p - q))) + 1):\n        if k % x == 0:\n            t += 1\n            if k // x != x:\n                t += 1\n    print(t)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split(' '))\n    ans = 0\n    k = abs(a - b)\n    for j in range(1, int(math.sqrt(abs(a - b))) + 1):\n        if k % j == 0:\n            ans += 1\n            if k // j != j:\n                ans += 1\n    print(ans)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split(' '))\n    ans = 0\n    k = abs(a - b)\n    for j in range(1, int(math.sqrt(abs(a - b))) + 1):\n        if k % j == 0:\n            ans += 1\n            if k // j != j:\n                ans += 1\n    print(ans)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split(' '))\n    ans = 0\n    ks = abs(a - b)\n    for j in range(1, int(math.sqrt(abs(a - b))) + 1):\n        if ks % j == 0:\n            ans += 1\n            if ks // j != j:\n                ans += 1\n    print(ans)", "def prime_factors(n):\n    q = {2: 0}\n    while n % 2 == 0:\n        q[2] += 1\n        n = n // 2\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        while n % i == 0:\n            if i in q:\n                q[i] += 1\n            else:\n                q[i] = 1\n            n = n // i\n    if n > 2:\n        if n in q:\n            q[n] += 1\n        else:\n            q[n] = 1\n    return q\nans = []\nfor _ in range(int(input())):\n    (A, B) = [int(x) for x in input().split()]\n    ps = prime_factors(abs(A - B))\n    an = 1\n    for p in ps:\n        an *= 1 + ps[p]\n    ans.append(an)\nprint(*ans, sep='\\n')", "n = int(input())\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    num = abs(a - b)\n    a = 0\n    for i in range(1, int(pow(num, 0.5)) + 1):\n        if num % i == 0:\n            a += 1\n            if i != num // i:\n                a += 1\n    print(a)", "import math\n\ndef countDivisors(n):\n    cnt = 0\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            if n / i == i:\n                cnt = cnt + 1\n            else:\n                cnt = cnt + 2\n    return cnt\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = max(a, b)\n    c = c - min(a, b)\n    ans = countDivisors(c)\n    print(ans)", "import math\nt = int(input())\nfor i in range(0, t):\n    (a, b) = [int(x) for x in input().split()]\n    j = abs(a - b)\n    c = 0\n    for x in range(1, int(pow(j, 0.5)) + 1):\n        if j % x == 0:\n            c += 1\n            if x != j / x:\n                c += 1\n    print(c)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split(' '))\n    c = abs(a - b)\n    answer = 0\n    for j in range(1, int(c ** 0.5) + 1):\n        if c % j == 0:\n            answer += 2\n    if int(c ** 0.5) == c ** 0.5:\n        answer -= 1\n    print(answer)", "from math import gcd\nT = int(input())\nfor i in range(T):\n    (A, B) = map(int, input().split(' '))\n    C = abs(A - B)\n    ans = 0\n    for i in range(1, int(C ** 0.5) + 1):\n        if C % i == 0:\n            ans += 2\n    if int(C ** 0.5) == C ** 0.5:\n        ans -= 1\n    print(ans)", "def factors(n):\n    q = set()\n    for i in range(1, int(n ** 0.5) + 1):\n        if not n % i:\n            q.add(i)\n            q.add(n // i)\n    return len(q)\nans = []\nfor _ in range(int(input())):\n    (A, B) = [int(x) for x in input().split()]\n    ans.append(factors(abs(A - B)))\nprint(*ans, sep='\\n')", "for _ in range(int(input())):\n    (A, B) = map(int, input().split())\n    c = abs(A - B)\n    ans = 0\n    for i in range(1, int(pow(c, 0.5)) + 1):\n        if c % i == 0:\n            ans += 1\n            if i != c // i:\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    num = abs(a - b)\n    ans = 0\n    rootnum = int(num ** 0.5)\n    for i in range(1, rootnum + 1):\n        if num % i == 0:\n            ans += 1\n            if i != num // i:\n                ans += 1\n    print(ans)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    ans = 0\n    dif = abs(a - b)\n    for j in range(1, int(pow(dif, 0.5)) + 1):\n        if dif % j == 0:\n            ans += 1\n            if j != dif // j:\n                ans += 1\n    print(ans)", "import math\nfor t in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = 0\n    d = abs(a - b)\n    for i in range(1, int(math.sqrt(d)) + 1):\n        if d % i == 0:\n            if d // i == i:\n                c += 1\n            else:\n                c += 2\n    print(c)", "import math\nt = int(input())\nfor ti in range(1, t + 1):\n    (a, b) = map(int, input().split())\n    count = 0\n    diff = abs(a - b)\n    for i in range(1, int(math.sqrt(diff)) + 1):\n        if diff % i == 0:\n            if diff // i == i:\n                count += 1\n            else:\n                count += 2\n    print(count)", "for _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    ans = 0\n    diff = abs(b - a)\n    for i in range(1, int(diff ** 0.5) + 1):\n        if diff % i == 0:\n            ans += 2\n        if i * i == diff:\n            ans -= 1\n    print(ans)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = list(map(int, list(input().split())))\n    n = abs(b - a)\n    c = 0\n    d = math.sqrt(n)\n    for i in range(1, int(d) + 1):\n        if n % i == 0:\n            if i * i == n:\n                c = c + 1\n            else:\n                c = c + 2\n    print(c)", "for t in range(int(input())):\n    (a, b) = map(int, input().split())\n    num = abs(a - b)\n    factors = 0\n    for i in range(1, int(pow(num, 0.5)) + 1):\n        if num % i == 0:\n            factors += 1\n            if num // i != i:\n                factors += 1\n    print(factors)", "from math import sqrt, ceil, floor, gcd, log2\nimport sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import combinations, groupby\nfrom time import time\nfrom heapq import heappop, heappush, heapify\n\ndef div(n):\n    a = 0\n    for i in range(1, int(sqrt(n)) + 1):\n        if n % i == 0:\n            if n // i == i:\n                a += 1\n            else:\n                a += 2\n    return a\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    print(div(abs(a - b)))", "import math\nt = int(input())\nfor x in range(t):\n    (A, B) = map(int, input().split())\n    n = abs(A - B)\n    i = 1\n    k = 0\n    a = int(math.sqrt(n))\n    while i <= a:\n        if n % i == 0:\n            if n // i == i:\n                k += 1\n            else:\n                k += 2\n        i = i + 1\n    print(k)", "import math\nt = int(input())\nfor x in range(t):\n    (A, B) = map(int, input().split())\n    n = abs(A - B)\n    i = 1\n    k = 0\n    a = int(math.sqrt(n))\n    while i <= a:\n        if n % i == 0:\n            k += 2\n        i = i + 1\n    if a * a == n:\n        k = k - 1\n    print(k)", "t = int(input())\nfor x in range(t):\n    (A, B) = map(int, input().split())\n    n = abs(A - B)\n    i = 1\n    k = 0\n    a = int(n ** 0.5)\n    while i <= a:\n        if n % i == 0:\n            k = k + 1\n        i = i + 1\n    if a * a == n:\n        k = k * 2 - 1\n    else:\n        k = k * 2\n    print(k)", "T = int(input())\nfor x in range(T):\n    (a, b) = map(int, input().split())\n    c = abs(a - b)\n    d = int(c ** 0.5)\n    e = 0\n    for y in range(1, d + 1):\n        if c % y == 0:\n            e = e + 1\n    if d * d == c:\n        print(e * 2 - 1)\n    else:\n        print(e * 2)", "T = int(input())\nfor x in range(T):\n    (a, b) = map(int, input().split())\n    c = abs(a - b)\n    d = int(c ** 0.5)\n    e = 0\n    for y in range(1, d + 1):\n        if c % y == 0:\n            e = e + 1\n    if d * d == c:\n        print(e * 2 - 1)\n    else:\n        print(e * 2)", "T = int(input())\nfor x in range(T):\n    (a, b) = map(int, input().split())\n    c = abs(a - b)\n    d = int(c ** 0.5)\n    e = 0\n    for y in range(1, d + 1):\n        if c % y == 0:\n            e = e + 1\n    if d * d == c:\n        print(e * 2 - 1)\n    else:\n        print(e * 2)", "import math\n\ndef divisors(n):\n    i = 1\n    lm = math.sqrt(n)\n    cnt = 0\n    while i < lm:\n        if n % i == 0:\n            cnt += 2\n        i += 1\n    if n % lm == 0:\n        cnt += 1\n    return cnt\nt = int(input())\nwhile t > 0:\n    t -= 1\n    ip = input().split()\n    (a, b) = [int(x) for x in ip]\n    print(divisors(abs(a - b)))", "import math\nfor _ in range(int(input())):\n    n = input()\n    (a, b) = map(int, n.split(' '))\n    count = 0\n    div = abs(b - a)\n    for x in range(1, int(math.sqrt(div)) + 1):\n        if div % x == 0:\n            if div // x == x:\n                count += 1\n            else:\n                count += 2\n    print(count)", "import math\n\ndef isprime(n):\n    flag = 0\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            flag = 1\n            break\n    if flag == 0:\n        return 'true'\n    else:\n        return 'false'\nt = int(input())\nfor x in range(t):\n    (A, B) = map(int, input().split())\n    n = abs(A - B)\n    i = 1\n    k = 0\n    a = math.sqrt(n)\n    if n == 1:\n        k = 1\n        print(k)\n    elif n > 1 and isprime(n) == 'true':\n        k = 2\n        print(k)\n    else:\n        while i <= a:\n            if n % i == 0:\n                if n // i == i:\n                    k += 1\n                else:\n                    k += 2\n            i = i + 1\n        print(k)", "def prime_factors(n):\n    p = 2\n    ret = dict()\n    while p ** 2 <= n:\n        if n % p == 0:\n            ret[p] = 0\n            while n % p == 0:\n                n //= p\n                ret[p] += 1\n        p += 1\n    if n > 1:\n        ret[n] = 1\n    return ret\n\ndef num_divisors(n):\n    ret = 1\n    mult = prime_factors(n)\n    for p in mult:\n        ret *= 1 + mult[p]\n    return ret\nfor _ in range(int(input())):\n    (A, B) = map(int, input().split())\n    print(num_divisors(abs(A - B)))", "import math\ntest_case = int(input())\nfor case in range(test_case):\n    (a, b) = map(int, input().split())\n    sub = abs(a - b)\n    ans = 0\n    for i in range(1, int(math.sqrt(sub)) + 1):\n        if sub % i == 0:\n            if sub // i == i:\n                ans += 1\n            else:\n                ans += 2\n    print(ans)", "import math\ntest_case = int(input())\nfor case in range(test_case):\n    (a, b) = map(int, input().split())\n    sub = abs(a - b)\n    ans = 0\n    limit = int(math.sqrt(sub))\n    for i in range(1, limit + 1):\n        if sub % i == 0:\n            if sub // i == i:\n                ans += 1\n            else:\n                ans += 2\n    print(ans)", "test_case = int(input())\nfor case in range(test_case):\n    (a, b) = map(int, input().split())\n    sub = abs(a - b)\n    ans = 0\n    limit = int(sub ** 0.5)\n    for i in range(1, limit + 1):\n        if sub % i == 0:\n            if sub // i == i:\n                ans += 1\n            else:\n                ans += 2\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    dif = abs(a - b)\n    ans = 0\n    i = 1\n    for i in range(1, int(math.sqrt(dif)) + 1):\n        if dif % i == 0:\n            ans += 1\n            if dif // i != i:\n                ans += 1\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (A, B) = map(int, input().split())\n    num = abs(A - B)\n    ans = 0\n    for i in range(1, int(pow(num, 0.5)) + 1):\n        if num % i == 0:\n            ans += 1\n            if i != num // i:\n                ans += 1\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (A, B) = map(int, input().split())\n    num = abs(A - B)\n    ans = 0\n    for i in range(1, int(pow(num, 0.5)) + 1):\n        if num % i == 0:\n            ans += 1\n            if i != num // i:\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    count = 0\n    j = input().split()\n    m = int(j[0])\n    n = int(j[1])\n    req = abs(m - n)\n    for i in range(1, int(req ** 0.5) + 1):\n        if req % i == 0:\n            count += 1\n            if i != req // i:\n                count += 1\n    print(count)", "def prime_factors(n):\n    p = 2\n    ret = dict()\n    while p ** 2 <= n:\n        if n % p == 0:\n            ret[p] = 0\n            while n % p == 0:\n                n //= p\n                ret[p] += 1\n        p += 1\n    if n > 1:\n        ret[n] = 1\n    return ret\n\ndef num_divisors(n):\n    ret = 1\n    mult = prime_factors(n)\n    for p in mult:\n        ret *= 1 + mult[p]\n    return ret\nfor _ in range(int(input())):\n    (A, B) = map(int, input().split())\n    print(num_divisors(abs(A - B)))"]