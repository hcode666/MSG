["from collections import Counter\nfrom math import ceil, floor, gcd\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(Counter([int(x) for x in input().strip().split()]).values())\n    if len(a) == 1:\n        print(ceil(a[0] / 2))\n    else:\n        a.sort()\n        print(max(ceil(a[-1] / 2), a[-2]))", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    fre = Counter(l)\n    sfre = sorted(fre.values())\n    if len(sfre) > 1:\n        print(max(sfre[-2], math.ceil(sfre[-1] / 2)))\n    else:\n        print(math.ceil(sfre[-1] / 2))", "for tc in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    kmap = {}\n    for ele in arr:\n        if ele not in kmap:\n            kmap[ele] = 1\n        else:\n            kmap[ele] += 1\n    maxfre = 0\n    maxkey = 0\n    for key in kmap:\n        if kmap[key] > maxfre:\n            maxkey = key\n            maxfre = kmap[key]\n    if maxfre % 2 == 0:\n        kmap[maxkey] = maxfre // 2\n    else:\n        kmap[maxkey] = maxfre // 2 + 1\n    maxfre = 0\n    maxkey = 0\n    for key in kmap:\n        if kmap[key] > maxfre:\n            maxkey = key\n            maxfre = kmap[key]\n    print(maxfre)", "t = int(input())\nfor t in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    d = {}\n    for a in arr:\n        if a in d:\n            d[a] += 1\n        else:\n            d[a] = 1\n    freq = sorted(d.values())\n    if freq[-1] % 2 == 0:\n        freq[-1] = freq[-1] // 2\n    else:\n        freq[-1] = (freq[-1] + 1) // 2\n    freq.sort()\n    print(freq[-1])", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = map(int, input().split())\n    d = {}\n    for i in arr:\n        d.setdefault(i, 0)\n        d[i] += 1\n    mx = 0\n    minmx = 0\n    for i in d.values():\n        if mx < i:\n            minmx = mx\n            mx = i\n        else:\n            minmx = max(i, minmx)\n    ans = (mx + 1) // 2\n    if ans > minmx:\n        print(ans)\n    else:\n        print(minmx)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = map(int, input().split())\n    d = {}\n    for i in arr:\n        d.setdefault(i, 0)\n        d[i] += 1\n    mx = 0\n    minmx = 0\n    for i in d.values():\n        if mx < i:\n            minmx = mx\n            mx = i\n        else:\n            minmx = max(i, minmx)\n    ans = (mx + 1) // 2\n    if ans > minmx:\n        print(ans)\n    else:\n        print(minmx)\n    t -= 1", "from collections import Counter\nT = int(input())\nfor k in range(T):\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    count = Counter(A)\n    a = list(count.values())\n    a.sort()\n    p1 = 0\n    if a[-1] % 2 == 0:\n        a[-1] = a[-1] // 2\n    else:\n        a[-1] = (a[-1] + 1) // 2\n    a.sort()\n    print(a[-1])", "import math\nimport statistics\nfrom collections import Counter\n\ndef count_of_mode(arr):\n    return arr.count(statistics.mode(arr))\n\ndef bp():\n    return int(input())\n\ndef ip():\n    return map(int, input().split())\n\ndef ls():\n    return list(map(int, input().split()))\nt = int(input())\nfor i in range(t):\n    n = bp()\n    l = ls()\n    fre = Counter(l)\n    sfre = sorted(fre.values())\n    if len(sfre) > 1:\n        print(max(sfre[-2], math.ceil(sfre[-1] / 2)))\n    else:\n        print(math.ceil(sfre[-1] / 2))", "from collections import defaultdict\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    freq = defaultdict(lambda : 0)\n    mx = 0\n    mv = 0\n    smx = 0\n    smv = 0\n    for i in range(N):\n        freq[A[i]] += 1\n        z = freq[A[i]]\n        if z > mx:\n            mx = z\n            mv = A[i]\n        elif z > smx and mv != A[i]:\n            smx = z\n    z = mx // 2 + mx % 2\n    print(max(z, smx))", "from collections import Counter\n\ndef solve():\n    n = int(input())\n    A = Counter([int(i) for i in input().split()])\n    if len(A) == 1:\n        return (n + 1) // 2\n    A = sorted(list(A.values()))\n    return max(A[-2], (A[-1] + 1) // 2)\nt = int(input())\nwhile t:\n    print(solve())\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = map(int, input().split())\n    d = {}\n    for i in arr:\n        d.setdefault(i, 0)\n        d[i] += 1\n    mx = 0\n    minmx = 0\n    for i in d.values():\n        if mx < i:\n            minmx = mx\n            mx = i\n        else:\n            minmx = max(i, minmx)\n    ans = (mx + 1) // 2\n    if ans > minmx:\n        print(ans)\n    else:\n        print(minmx)\n    t -= 1", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst1 = Counter(lst)\n    ans = list(lst1.values())\n    ans.sort()\n    if ans[-1] % 2 == 0:\n        ans[-1] = ans[-1] // 2\n    else:\n        ans[-1] = (ans[-1] + 1) // 2\n    ans.sort()\n    print(ans[-1])", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    fre = Counter(l)\n    sfre = sorted(fre.values())\n    if len(sfre) > 1:\n        print(max(sfre[-2], math.ceil(sfre[-1] / 2)))\n    else:\n        print(math.ceil(sfre[-1] / 2))", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst1 = Counter(lst)\n    ans = list(lst1.values())\n    ans.sort()\n    if ans[-1] % 2 == 0:\n        ans[-1] = ans[-1] // 2\n    else:\n        ans[-1] = (ans[-1] + 1) // 2\n    ans.sort()\n    print(ans[-1])", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    if len(d) == 1:\n        print((max(d.values()) + 1) // 2)\n        continue\n    x = sorted(d.values())\n    (fmax, fmin) = (x[-1], x[-2])\n    ans = (fmax + 1) // 2\n    if ans > fmin:\n        print(ans)\n    else:\n        print(fmin)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    if len(d) == 1:\n        print((max(d.values()) + 1) // 2)\n        continue\n    x = sorted(d.values())\n    (fmax, fmin) = (x[-1], x[-2])\n    ans = (fmax + 1) // 2\n    if ans > fmin:\n        print(ans)\n    else:\n        print(fmin)", "import math\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    freq = {}\n    for num in arr:\n        freq.setdefault(num, 0)\n        freq[num] += 1\n    (max_1, max_2) = (0, 0)\n    for num in freq.values():\n        if max_1 < num:\n            max_2 = max_1\n            max_1 = num\n        else:\n            max_2 = max(num, max_2)\n    ans = (max_1 + 1) // 2\n    if ans > max_2:\n        print(ans)\n    else:\n        print(max_2)", "from collections import Counter\nt = int(input())\nflag = False\nnum = 7\nif num > 1:\n    for i in range(2, num):\n        if num % i == 0:\n            flag = True\n            break\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    c = Counter(a)\n    val = list(c.values())\n    val.sort()\n    year = 2000\n    if year % 400 == 0 and year % 100 == 0:\n        year = 2001\n    elif year % 4 == 0 and year % 100 != 0:\n        year = 2005\n    else:\n        year = 2020\n    if val[-1] % 2 == 1:\n        val[-1] = (val[-1] + 1) // 2\n    else:\n        val[-1] = val[-1] // 2\n    if year % 400 == 0 and year % 100 == 0:\n        year = 2001\n    elif year % 4 == 0 and year % 100 != 0:\n        year = 2005\n    else:\n        year = 2020\n    val.sort()\n    print(val[-1])", "from collections import Counter\nt = int(input())\nflag = False\nnum = 7\nif num > 1:\n    for i in range(2, num):\n        if num % i == 0:\n            flag = True\n            break\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    c = Counter(a)\n    val = list(c.values())\n    val.sort()\n    year = 2000\n    if year % 400 == 0 and year % 100 == 0:\n        year = 2001\n    elif year % 4 == 0 and year % 100 != 0:\n        year = 2005\n    else:\n        year = 2020\n    if val[-1] % 2 == 1:\n        val[-1] = (val[-1] + 1) // 2\n    else:\n        val[-1] = val[-1] // 2\n    if year % 400 == 0 and year % 100 == 0:\n        year = 2001\n    elif year % 4 == 0 and year % 100 != 0:\n        year = 2005\n    else:\n        year = 2020\n    val.sort()\n    print(val[-1])", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = map(int, input().split())\n    d = {}\n    for i in arr:\n        d.setdefault(i, 0)\n        d[i] += 1\n    mx = 0\n    minmx = 0\n    for i in d.values():\n        if mx < i:\n            minmx = mx\n            mx = i\n        else:\n            minmx = max(i, minmx)\n    ans = (mx + 1) // 2\n    if ans > minmx:\n        print(ans)\n    else:\n        print(minmx)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    dict1 = {}\n    for x in list1:\n        if x not in dict1.keys():\n            dict1[x] = 1\n        else:\n            dict1[x] += 1\n    list2 = list(dict1.values())\n    max1 = max(list2)\n    if max1 % 2 == 0:\n        list2.remove(max1)\n        list2.append(max1 // 2)\n        print(max(list2))\n    else:\n        list2.remove(max1)\n        list2.append(max1 // 2)\n        list2.append(max1 - max1 // 2)\n        print(max(list2))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = map(int, input().split())\n    d = {}\n    for i in arr:\n        d.setdefault(i, 0)\n        d[i] += 1\n    mx = 0\n    minmx = 0\n    for i in d.values():\n        if mx < i:\n            minmx = mx\n            mx = i\n        else:\n            minmx = max(i, minmx)\n    ans = (mx + 1) // 2\n    if ans > minmx:\n        print(ans)\n    else:\n        print(minmx)\n    t -= 1", "t = input()\nfor c in range(0, int(t)):\n    n = int(input())\n    arr = map(int, input().split())\n    d = {}\n    for i in arr:\n        d.setdefault(i, 0)\n        d[i] += 1\n    mx = 0\n    minmx = 0\n    for i in d.values():\n        if mx < i:\n            minmx = mx\n            mx = i\n        else:\n            minmx = max(i, minmx)\n    ans = (mx + 1) // 2\n    if ans > minmx:\n        print(ans)\n    else:\n        print(minmx)", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    xx = []\n    xxx = Counter(x)\n    xx = list(xxx.values())\n    xx.sort()\n    if len(xx) >= 2:\n        print(max(math.ceil(xx[-1] / 2), xx[-2]))\n    else:\n        print(math.ceil(xx[-1] / 2))", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    xx = []\n    xxx = Counter(x)\n    xx = list(xxx.values())\n    xx.sort()\n    if len(xx) >= 2:\n        print(max(math.ceil(xx[-1] / 2), xx[-2]))\n    else:\n        print(math.ceil(xx[-1] / 2))", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    xx = []\n    xxx = Counter(x)\n    xx = list(xxx.values())\n    xx.sort()\n    if len(xx) >= 2:\n        print(max(math.ceil(xx[-1] / 2), xx[-2]))\n    else:\n        print(math.ceil(xx[-1] / 2))", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    mc = c.most_common(2)\n    if len(mc) == 1:\n        print((mc[0][1] + 1) // 2)\n        continue\n    print(max(mc[1][1], (mc[0][1] + 1) // 2))", "from collections import Counter\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    c = Counter(a)\n    val = list(c.values())\n    val.sort()\n    if val[-1] % 2 == 0:\n        val[-1] = val[-1] // 2\n    else:\n        val[-1] = (val[-1] + 1) // 2\n    val.sort()\n    print(val[-1])", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = 1\n        else:\n            d[a[i]] += 1\n    b = []\n    for i in d.values():\n        b.append(i)\n    b.sort()\n    o = len(b)\n    if o == 1:\n        print(math.ceil(b[0] / 2))\n    else:\n        c = b[-1] / 2\n        if c <= max(b[0:o - 1]):\n            b[-1] = b[-1] // 2\n            print(max(b))\n        else:\n            print(math.ceil(c))", "for i in range(int(input())):\n    no = int(input())\n    li = list(map(int, input().split()))\n    dict = {}\n    for i in li:\n        if i in dict:\n            dict[i] += 1\n        else:\n            dict[i] = 1\n    lc = list(dict.values())\n    if len(lc) == 1:\n        print(len(li) // 2 + len(li) % 2)\n    else:\n        m1 = max(lc)\n        lc.remove(m1)\n        m2 = max(lc)\n        print(max(m2, m1 // 2 + m1 % 2))", "for i in range(int(input())):\n    no = int(input())\n    li = list(map(int, input().split()))\n    dict = {}\n    for i in li:\n        if i in dict:\n            dict[i] += 1\n        else:\n            dict[i] = 1\n    lc = list(dict.values())\n    if len(lc) == 1:\n        print(len(li) // 2 + len(li) % 2)\n    else:\n        m1 = max(lc)\n        lc.remove(m1)\n        m2 = max(lc)\n        print(max(m2, m1 // 2 + m1 % 2))", "from collections import Counter\nt = int(input())\nwhile t != 0:\n    n = int(input())\n    l = list(map(int, input().strip().split()))[:n]\n    dt = Counter(l)\n    lt = list(dt.values())\n    if len(lt) == 1:\n        print(len(l) // 2 + len(l) % 2)\n    else:\n        m1 = max(lt)\n        lt.remove(m1)\n        m2 = max(lt)\n        print(max(m2, m1 // 2 + m1 % 2))\n    t -= 1", "for i in range(int(input())):\n    no = int(input())\n    li = list(map(int, input().split()))\n    dict = {}\n    for i in li:\n        if i in dict:\n            dict[i] += 1\n        else:\n            dict[i] = 1\n    lc = list(dict.values())\n    if len(lc) == 1:\n        print(len(li) // 2 + len(li) % 2)\n    else:\n        m1 = max(lc)\n        lc.remove(m1)\n        m2 = max(lc)\n        print(max(m2, m1 // 2 + m1 % 2))", "def solve(arr, n):\n    mp = {}\n    for i in range(n):\n        if arr[i] in mp:\n            mp[arr[i]] += 1\n        else:\n            mp[arr[i]] = 1\n    freq = sorted(mp.values(), reverse=True)\n    if len(freq) == 1:\n        return int((freq[0] + 1) / 2)\n    fir = freq[0]\n    sec = freq[1]\n    return max(int((fir + 1) / 2), sec)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    print(solve(arr, n))", "from collections import Counter\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    c = Counter(a)\n    val = list(c.values())\n    val.sort()\n    if val[-1] % 2 == 0:\n        val[-1] = val[-1] // 2\n    else:\n        val[-1] = (val[-1] + 1) // 2\n    val.sort()\n    print(val[-1])", "for _ in range(int(input())):\n    n = int(input())\n    x = [int(x) for x in input().split()]\n    d = {}\n    for i in x:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    z = [d[i] for i in d if d[i] > 1]\n    z.sort(reverse=True)\n    if len(z) == 1:\n        if z[0] % 2:\n            print(z[0] // 2 + 1)\n        else:\n            print(z[0] // 2)\n    elif len(z) == 0:\n        print(1)\n    else:\n        if z[0] % 2:\n            a = z[0] // 2 + 1\n        else:\n            a = z[0] // 2\n        print(max(a, z[1]))", "from math import ceil\nlistInput = lambda : list(map(int, input().split(' ')))\nmapInput = lambda : map(int, input().split(' '))\nfor _ in range(int(input())):\n    N = int(input())\n    A = listInput()\n    mydict = {}\n    for each in A:\n        if each in mydict:\n            mydict[each] += 1\n        else:\n            mydict[each] = 1\n    L = list(mydict.values())\n    L.sort()\n    if len(L) == 1:\n        print(ceil(L[-1] / 2))\n    else:\n        print(max(L[-2], ceil(L[-1] / 2)))", "from math import ceil\nlistInput = lambda : list(map(int, input().split(' ')))\nmapInput = lambda : map(int, input().split(' '))\nfor _ in range(int(input())):\n    N = int(input())\n    A = listInput()\n    mydict = {}\n    for each in A:\n        if each in mydict:\n            mydict[each] += 1\n        else:\n            mydict[each] = 1\n    L = list(mydict.values())\n    L.sort()\n    if len(L) == 1:\n        print(ceil(L[-1] / 2))\n    else:\n        print(max(L[-2], ceil(L[-1] / 2)))", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    k = a[0]\n    b = []\n    count = 1\n    for j in range(1, n):\n        if a[j] != k:\n            b.append(count)\n            count = 1\n            k = a[j]\n        else:\n            count += 1\n    b.append(count)\n    b.sort(reverse=True)\n    l = b[0]\n    l = int(math.ceil(b[0] / 2))\n    if len(b) == 1:\n        print(l)\n    else:\n        m = b[1]\n        ans = max(l, m)\n        print(ans)", "from collections import Counter\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    c = Counter(a)\n    val = list(c.values())\n    val.sort()\n    if val[-1] % 2 == 0:\n        val[-1] = val[-1] // 2\n    else:\n        val[-1] = (val[-1] + 1) // 2\n    val.sort()\n    print(val[-1])", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    dup = set(li)\n    if len(dup) == 1:\n        print(-(n // -2))\n        continue\n    cnt = []\n    for (i, c) in collections.Counter(li).items():\n        cnt.append(c)\n    cnt.sort()\n    print(max(-(cnt[-1] // -2), cnt[-2]))", "from collections import Counter\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    c = Counter(a)\n    val = list(c.values())\n    val.sort()\n    if val[-1] % 2 == 0:\n        val[-1] = val[-1] // 2\n    else:\n        val[-1] = (val[-1] + 1) // 2\n    val.sort()\n    print(val[-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    l1 = list(d.values())\n    l1.sort()\n    a = l1[-1]\n    b = a // 2\n    c = a - b\n    l1[-1] = b\n    l1.append(c)\n    print(max(l1))", "import math\ntests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    hashmap = {}\n    for j in arr:\n        if j in hashmap:\n            hashmap[j] += 1\n        else:\n            hashmap[j] = 1\n    values = list(hashmap.values())\n    maximum = 0\n    maximum1 = 0\n    for j in values:\n        if j >= maximum:\n            maximum1 = maximum\n            maximum = j\n        elif j > maximum1:\n            maximum1 = j\n    print(max(maximum1, math.ceil(maximum / 2)))", "from collections import Counter\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    c = Counter(a)\n    val = list(c.values())\n    val.sort()\n    if val[-1] % 2 == 0:\n        val[-1] = val[-1] // 2\n    else:\n        val[-1] = (val[-1] + 1) // 2\n    val.sort()\n    print(val[-1])", "from collections import Counter\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    c = Counter(a)\n    val = list(c.values())\n    val.sort()\n    if val[-1] % 2 == 0:\n        val[-1] = val[-1] // 2\n    else:\n        val[-1] = (val[-1] + 1) // 2\n    val.sort()\n    print(val[-1])", "import math\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    li = list(d.values())\n    li.sort(reverse=True)\n    li[0] = math.ceil(li[0] / 2)\n    li.sort(reverse=True)\n    print(li[0])", "from collections import Counter\nimport math\n\ndef find(count):\n    max1 = count.most_common()[0][1]\n    try:\n        max2 = count.most_common()[1][1]\n    except:\n        return math.floor((max1 + 1) / 2)\n    return max(max2, math.floor((max1 + 1) / 2))\nn = int(input())\nfor _ in range(0, n):\n    m = int(input())\n    array = list(map(int, input().split()))\n    print(find(Counter(array)))", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = Counter(arr)\n    values = list(a.values())\n    values.sort()\n    if values[-1] % 2 == 0:\n        values[-1] = values[-1] // 2\n    else:\n        values[-1] = (values[-1] + 1) // 2\n    values.sort()\n    print(values[-1])", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    mp = list(map(int, input().split(' ')))\n    cn = Counter(mp)\n    flag = list(cn.values())\n    flag.sort()\n    if flag[-1] % 2 == 0:\n        flag[-1] = flag[-1] // 2\n    else:\n        flag[-1] = (flag[-1] + 1) // 2\n    flag.sort()\n    print(flag[-1])", "from collections import Counter\ntt = int(input())\nfor k in range(tt):\n    n = int(input())\n    mp = list(map(int, input().split(' ')))\n    cn = Counter(mp)\n    flag = list(cn.values())\n    flag.sort()\n    if flag[-1] % 2 == 0:\n        flag[-1] = flag[-1] // 2\n    else:\n        flag[-1] = (flag[-1] + 1) // 2\n    flag.sort()\n    print(flag[-1])", "import math\ntests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    hashmap = {}\n    for j in arr:\n        if j in hashmap:\n            hashmap[j] += 1\n        else:\n            hashmap[j] = 1\n    values = list(hashmap.values())\n    maximum = 0\n    maximum1 = 0\n    for j in values:\n        if j >= maximum:\n            maximum1 = maximum\n            maximum = j\n        elif j > maximum1:\n            maximum1 = j\n    print(max(maximum1, math.ceil(maximum / 2)))", "import math\ntests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    hashmap = {}\n    for j in arr:\n        if j in hashmap:\n            hashmap[j] += 1\n        else:\n            hashmap[j] = 1\n    values = list(hashmap.values())\n    values.sort()\n    if len(values) == 1:\n        print(math.ceil(values[0] / 2))\n    else:\n        print(max(values[-2], math.ceil(values[-1] / 2)))", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    dup = set(li)\n    if len(dup) == 1:\n        print(-(n // -2))\n        continue\n    cnt = []\n    for (i, c) in collections.Counter(li).items():\n        cnt.append(c)\n    cnt.sort()\n    print(max(-(cnt[-1] // -2), cnt[-2]))", "for _ in range(int(input())):\n    x = int(input())\n    a = list(map(int, input().split()))\n    f = {}\n    for i in a:\n        if i in f:\n            f[i] += 1\n        else:\n            f[i] = 1\n    b = []\n    for i in f:\n        b.append(f[i])\n    b.sort()\n    if len(b) == 1:\n        print((b[-1] + 1) // 2)\n    elif len(b) > 1:\n        if b[-1] == b[-2]:\n            print(b[-1])\n        elif b[-2] < (b[-1] + 1) // 2:\n            print((b[-1] + 1) // 2)\n        else:\n            print(b[-2])", "for k in range(int(input())):\n    lenth = int(input())\n    lst = input().split()\n    d = {}\n    for i in lst:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    l = sorted(d.values(), reverse=True)\n    max_ = l[0]\n    try:\n        max_1 = l[1]\n    except:\n        max_1 = 0\n    if max_ == lenth:\n        ans = lenth // 2 if lenth % 2 == 0 else lenth // 2 + 1\n    elif max_ > 2 * max_1:\n        ans = max_ // 2 if max_ % 2 == 0 else max_ // 2 + 1\n    else:\n        ans = max_1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    d1 = {}\n    for i in arr:\n        if i in d1:\n            d1[i] += 1\n        else:\n            d1[i] = 1\n    temp = sorted(d1.values(), reverse=True)\n    if len(d1) == 1:\n        print((temp[0] + 1) // 2)\n    elif temp[1] > (temp[0] + 1) // 2:\n        print(temp[1])\n    else:\n        print((temp[0] + 1) // 2)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = {}\n    for i in range(n):\n        if a[i] in s:\n            s[a[i]] += 1\n        else:\n            s[a[i]] = 1\n    if len(s) == 1:\n        if s[a[0]] % 2 == 0:\n            res = s[a[0]] // 2\n        else:\n            res = s[a[0]] // 2 + 1\n    else:\n        k = list(s.values())\n        k.sort()\n        (a1, b1) = (k[-1], k[-2])\n        k1 = a1 // 2\n        k2 = a1 - k1\n        res = max(max(k1, k2), b1)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    d = {}\n    f = sf = 0\n    for i in arr:\n        d[i] = d.get(i, 0) + 1\n        if d[i] > f:\n            s = f\n            f = d[i]\n        elif d[i] > sf:\n            sf = d[i]\n    ans = max(sf, f // 2 + (1 if f % 2 != 0 else 0))\n    print(ans)", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    p = list(d.values())\n    q = list(p)\n    if len(p) == 1:\n        print(math.ceil(n / 2))\n        continue\n    p.remove(max(p))\n    if math.ceil(max(q) / 2) >= max(p):\n        print(math.ceil(max(q) / 2))\n    else:\n        print(max(p))", "from collections import Counter\nf = int(input())\nfor p in range(f):\n    z = int(input())\n    b = list(map(int, input().split(' ')))\n    c = Counter(b)\n    val = list(c.values())\n    val.sort()\n    if val[-1] % 2 == 0:\n        val[-1] = val[-1] // 2\n    else:\n        val[-1] = (val[-1] + 1) // 2\n    val.sort()\n    print(val[-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    mx = -1\n    for i in d:\n        mx = max(mx, d[i])\n    l1 = []\n    for i in d:\n        l1.append(d[i])\n    t = len(l1)\n    l1.sort()\n    if t == 1:\n        if l1[0] % 2:\n            print(l1[0] // 2 + 1)\n        else:\n            print(l1[0] // 2)\n    if t > 1:\n        if l1[t - 1] % 2:\n            p = l1[-1] // 2 + 1\n            if l1[t - 2] > p:\n                print(l1[t - 2])\n            else:\n                print(p)\n        else:\n            p = l1[t - 1] // 2\n            if l1[t - 2] > p:\n                print(l1[t - 2])\n            else:\n                print(p)", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    p = list(d.values())\n    q = list(p)\n    if len(p) == 1:\n        print(math.ceil(n / 2))\n        continue\n    p.remove(max(p))\n    if math.ceil(max(q) / 2) >= max(p):\n        print(math.ceil(max(q) / 2))\n    else:\n        print(max(p))", "from math import ceil\ntry:\n    n = int(input())\n    for j in range(n):\n        a = int(input())\n        l = list(map(int, input().split()))\n        dit = {}\n        for i in l:\n            if i not in dit.keys():\n                dit[i] = 1\n            else:\n                dit[i] += 1\n        temp = []\n        for i in dit.values():\n            temp.append(i)\n        indi = temp.index(max(temp))\n        temp[indi] = ceil(temp[indi] / 2)\n        print(max(temp))\nexcept:\n    pass", "from math import ceil\ntry:\n    n = int(input())\n    for j in range(n):\n        a = int(input())\n        l = list(map(int, input().split()))\n        dit = {}\n        for i in l:\n            if i not in dit.keys():\n                dit[i] = 1\n            else:\n                dit[i] += 1\n        temp = []\n        for i in dit.values():\n            temp.append(i)\n        indi = temp.index(max(temp))\n        temp[indi] = ceil(temp[indi] / 2)\n        print(max(temp))\nexcept:\n    pass", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    l = list(d.values())\n    n1 = ceil(max(l) / 2)\n    l.remove(max(l))\n    l = list(filter(lambda x: x >= n1, l))\n    if l != []:\n        print(max(l))\n    else:\n        print(n1)", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    p = list(d.values())\n    q = list(p)\n    if len(p) == 1:\n        print(math.ceil(n / 2))\n        continue\n    p.remove(max(p))\n    if math.ceil(max(q) / 2) >= max(p):\n        print(math.ceil(max(q) / 2))\n    else:\n        print(max(p))", "from math import ceil\ntry:\n    n = int(input())\n    for j in range(n):\n        a = int(input())\n        l = list(map(int, input().split()))\n        dit = {}\n        for i in l:\n            if i not in dit.keys():\n                dit[i] = 1\n            else:\n                dit[i] += 1\n        temp = []\n        for i in dit.values():\n            temp.append(i)\n        indi = temp.index(max(temp))\n        temp[indi] = ceil(temp[indi] / 2)\n        print(max(temp))\nexcept:\n    pass", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    hashmap = {}\n    for i in arr:\n        if hashmap.get(i) != None:\n            hashmap[i] += 1\n        else:\n            hashmap[i] = 1\n    high = list(hashmap.values())\n    high.sort(reverse=True)\n    top = high[0]\n    if len(high) > 1:\n        print(max(high[1], (top + 1) // 2))\n    else:\n        print((top + 1) // 2)\n    t -= 1", "from collections import Counter\nimport math\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    freq = dict(Counter(arr))\n    freq_arr = []\n    for key in freq:\n        freq_arr.append(freq[key])\n    freq_arr.sort()\n    n = len(freq_arr)\n    if n == 1:\n        print(math.ceil(freq_arr[n - 1] / 2))\n        continue\n    if math.ceil(freq_arr[n - 1] / 2) > freq_arr[n - 2]:\n        print(math.ceil(freq_arr[n - 1] / 2))\n    else:\n        print(freq_arr[n - 2])", "from collections import Counter\nz = int(input())\nfor i in range(z):\n    t = int(input())\n    arrr = list(map(int, input().split(' ')))\n    cc = Counter(arrr)\n    vaaa = list(cc.values())\n    vaaa.sort()\n    if vaaa[-1] % 2 == 0:\n        vaaa[-1] = vaaa[-1] // 2\n    else:\n        vaaa[-1] = (vaaa[-1] + 1) // 2\n    vaaa.sort()\n    print(vaaa[-1])", "T = int(input())\nfor x in range(T):\n    N = int(input())\n    freq_dict = {}\n    lst = list(map(int, input().split(' ')))\n    for i in lst:\n        if i in freq_dict:\n            freq_dict[i] += 1\n        else:\n            freq_dict[i] = 1\n    freq_lst = []\n    sz = 0\n    for (key, value) in freq_dict.items():\n        freq_lst.append(value)\n        sz += 1\n    freq_lst.sort()\n    max_val = freq_lst[sz - 1]\n    if max_val & 1:\n        max_val += 1\n    max_val /= 2\n    if sz == 1:\n        print(int(max_val))\n    else:\n        print(int(max(max_val, freq_lst[sz - 2])))", "from collections import Counter\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    cnt = Counter(arr)\n    value = list(cnt.values())\n    value.sort()\n    if value[-1] % 2 == 0:\n        value[-1] = value[-1] // 2\n    else:\n        value[-1] = (value[-1] + 1) // 2\n    value.sort()\n    print(value[-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = [int(x) for x in input().split()]\n    d = {}\n    max1 = 0\n    max2 = 0\n    for i in x:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] = d[i] + 1\n        if max1 < d[i]:\n            max1 = d[i]\n            it = i\n    for i in d:\n        if i != it:\n            max2 = max(max2, d[i])\n    if max1 % 2 == 0:\n        max1 = max1 // 2\n    else:\n        max1 = max1 // 2 + 1\n    te = max(max1, max2)\n    print(te)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    from collections import Counter\n    c = Counter(a)\n    d = [(i, c[i]) for i in c]\n    e = [c[i] for i in c]\n    d = sorted(d, key=lambda x: x[1], reverse=True)\n    e = sorted(e, reverse=True)\n    ans = None\n    if len(d) == 1:\n        ans = (len(a) + 1) // 2\n    if ans == None:\n        ans = max((e[0] + 1) // 2, e[1])\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dict = {}\n    for i in arr:\n        if i in dict.keys():\n            dict[i] += 1\n        else:\n            dict[i] = 1\n    res = list(dict.values())\n    res.sort()\n    if len(res) > 1:\n        print(math.ceil(max(res[-1] / 2, res[-2])))\n    else:\n        print(math.ceil(res[-1] / 2))", "import math\nT = int(input())\nfor x in range(T):\n    n = int(input())\n    dict = {}\n    nums = input()\n    nums = nums.split(' ')\n    for i in nums:\n        if i in dict.keys():\n            dict[i] += 1\n        else:\n            dict[i] = 1\n    arr = []\n    for i in dict.keys():\n        arr.append(dict[i])\n    arr.sort()\n    if len(arr) == 1:\n        print(int(math.ceil(arr[-1] / 2)))\n    elif 2 * arr[-2] >= arr[-1]:\n        print(arr[-2])\n    else:\n        print(int(math.ceil(arr[-1] / 2)))", "import math\nT = int(input())\nfor x in range(T):\n    n = int(input())\n    dict = {}\n    nums = input()\n    nums = nums.split(' ')\n    for i in nums:\n        if i in dict.keys():\n            dict[i] += 1\n        else:\n            dict[i] = 1\n    dictinv = {}\n    arr = []\n    for i in dict.keys():\n        dictinv[dict[i]] = i\n        arr.append(dict[i])\n    arr.sort()\n    if len(arr) == 1:\n        print(int(math.ceil(arr[-1] / 2)))\n    elif 2 * arr[-2] >= arr[-1]:\n        print(arr[-2])\n    else:\n        print(int(math.ceil(arr[-1] / 2)))", "t = int(input())\n\ndef mean(l):\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    t = []\n    k = max(list(d.values()))\n    for i in d:\n        if d[i] == k:\n            t.append(i)\n    return (k, t)\nans = []\nfor i in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    t = mean(l)\n    rv = max(l) + 1\n    if len(t[1]) == 1:\n        if t[0] % 2:\n            m = t[0] // 2 + 1\n        else:\n            m = t[0] // 2\n        ltracker = 0\n        index = 0\n        temp = []\n        while ltracker < m:\n            if l[index] == t[1][0]:\n                temp.append(rv)\n                ltracker += 1\n            else:\n                temp.append(l[index])\n            index += 1\n        for j in range(index, n):\n            temp.append(l[j])\n        ans.append(mean(temp)[0])\n    else:\n        ans.append(t[0])\nfor i in ans:\n    print(i)", "from collections import Counter\nfor _ in range(int(input())):\n    input()\n    ml = list(Counter([int(s) for s in input().split()]).values())\n    k = ml.index(max(ml))\n    ml.append(ml[k] // 2 + ml[k] % 2)\n    ml[k] //= 2\n    print(max(ml))", "from collections import *\ntc = int(input())\nfor _ in range(1, 1 + tc):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    freq_dict = Counter(arr)\n    freq = sorted(freq_dict.items(), key=lambda x: x[1], reverse=True)\n    if len(freq) == 1:\n        print(n // 2 + n % 2)\n        continue\n    (maxx1, maxx2) = (freq[0][1], freq[1][1])\n    diff = maxx1 - maxx2\n    if diff == 0:\n        print(maxx1)\n        continue\n    if diff <= maxx2:\n        print(maxx2)\n    else:\n        print(max(maxx1 // 2 + maxx1 % 2, maxx2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    mx = -1\n    for i in d:\n        mx = max(mx, d[i])\n    l1 = []\n    for i in d:\n        l1.append(d[i])\n    t = len(l1)\n    l1.sort()\n    if t == 1:\n        if l1[0] % 2:\n            print(l1[0] // 2 + 1)\n        else:\n            print(l1[0] // 2)\n    if t > 1:\n        if l1[t - 1] % 2:\n            p = l1[-1] // 2 + 1\n            if l1[t - 2] > p:\n                print(l1[t - 2])\n            else:\n                print(p)\n        else:\n            p = l1[t - 1] // 2\n            if l1[t - 2] > p:\n                print(l1[t - 2])\n            else:\n                print(p)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    mx = -1\n    for i in d:\n        mx = max(mx, d[i])\n    l1 = []\n    for i in d:\n        l1.append(d[i])\n    t = len(l1)\n    l1.sort()\n    if t == 1:\n        if l1[0] % 2:\n            print(l1[0] // 2 + 1)\n        else:\n            print(l1[0] // 2)\n    if t > 1:\n        if l1[t - 1] % 2:\n            p = l1[-1] // 2 + 1\n            if l1[t - 2] > p:\n                print(l1[t - 2])\n            else:\n                print(p)\n        else:\n            p = l1[t - 1] // 2\n            if l1[t - 2] > p:\n                print(l1[t - 2])\n            else:\n                print(p)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    mx = -1\n    for i in d:\n        mx = max(mx, d[i])\n    l1 = []\n    for i in d:\n        l1.append(d[i])\n    t = len(l1)\n    l1.sort()\n    if t == 1:\n        if l1[0] % 2:\n            print(l1[0] // 2 + 1)\n        else:\n            print(l1[0] // 2)\n    if t > 1:\n        if l1[t - 1] % 2:\n            p = l1[-1] // 2 + 1\n            if l1[t - 2] > p:\n                print(l1[t - 2])\n            else:\n                print(p)\n        else:\n            p = l1[t - 1] // 2\n            if l1[t - 2] > p:\n                print(l1[t - 2])\n            else:\n                print(p)", "from math import *\nfor i in range(int(input())):\n    n = int(input())\n    numbers = list(map(int, input().split(' ')))\n    check = {}\n    for i in numbers:\n        if i not in check:\n            check[i] = 1\n        else:\n            check[i] += 1\n    check2 = list(check.values())\n    max1 = max(check2)\n    check2.remove(max1)\n    check2 += [floor(max1 / 2), ceil(max1 / 2)]\n    print(max(check2))", "from collections import Counter\nfor tc in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    c = Counter(b)\n    v = sorted(list(c.values()))\n    if v[-1] % 2 == 0:\n        v[-1] = v[-1] // 2\n    else:\n        v[-1] = (v[-1] + 1) // 2\n    v.sort()\n    print(v[-1])", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    c = Counter(b)\n    v = list(c.values())\n    v = sorted(v)\n    if v[-1] % 2 == 0:\n        v[-1] = v[-1] // 2\n    else:\n        v[-1] = (v[-1] + 1) // 2\n    v.sort()\n    print(v[-1])", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    x = 0\n    y = 0\n    a = list(map(int, input().split()))\n    s = dict(Counter(a))\n    for i in list(s):\n        if s[i] > x:\n            y = x\n            x = s[i]\n        elif s[i] > y:\n            y = s[i]\n    if x == y:\n        print(x)\n    elif x % 2 != 0 and x // 2 + 1 > y:\n        print(x // 2 + 1)\n    elif x % 2 == 0 and x // 2 > y:\n        print(x // 2)\n    else:\n        print(y)", "from collections import Counter\nfor _ in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))\n    y = Counter(a)\n    max_val = [val for val in y.values()]\n    max_val.sort()\n    f = max_val[-1]\n    if f == N:\n        print((f + 1) // 2)\n        continue\n    g = max_val[-2]\n    print(max((f + 1) // 2, g))", "for _ in range(int(input())):\n    x = int(input())\n    a = list(map(int, input().split()))\n    freq = {}\n    for i in a:\n        freq[i] = freq.get(i, 0) + 1\n    maxVal = [val for val in freq.values()]\n    maxVal.sort()\n    Firsthigh = maxVal[-1]\n    if Firsthigh == x:\n        print((Firsthigh + 1) // 2)\n        continue\n    secondHigh = maxVal[-2]\n    print(max((Firsthigh + 1) // 2, secondHigh))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    l = []\n    for i in d.values():\n        l.append(i)\n    l.sort()\n    if len(l) == 1:\n        print((l[-1] + 1) // 2)\n    else:\n        print(max((l[-1] + 1) // 2, l[-2]))", "n = int(input())\nwhile n > 0:\n    x = int(input())\n    a = input()\n    A = a.split(' ')\n    B = []\n    v = 0\n    u = 0\n    Dict = {}\n    for i in range(0, x):\n        found = 0\n        if Dict.get(A[i]) == None:\n            Dict[A[i]] = 1\n        else:\n            Dict[A[i]] = Dict[A[i]] + 1\n    for item in Dict.values():\n        if v <= item:\n            u = v\n            v = item\n        elif u < item:\n            u = item\n    if int((v + 1) / 2) >= u:\n        print(int((v + 1) / 2))\n    else:\n        print(u)\n    n = n - 1", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    dic = {}\n    for i in a:\n        if dic.get(i) == None:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    arr = list(dic.values())\n    arr.sort()\n    arr = [0] + arr\n    l = arr[-1]\n    l1 = arr[-2]\n    if l % 2 == 0:\n        print(max(l1, l // 2))\n    else:\n        print(max(l1, l // 2 + 1))", "def frequency(arr: list):\n    arr.sort()\n    _ = 1\n    maxF = 0\n    prevMax = 0\n    counter = 0\n    for i in range(len(arr) - 1):\n        if arr[i] == arr[i + 1]:\n            _ += 1\n        else:\n            if _ == maxF:\n                prevMax = maxF\n                counter += 1\n            elif _ > maxF:\n                prevMax = maxF\n                maxF = _\n                counter = 1\n            elif _ > prevMax:\n                prevMax = _\n            _ = 1\n    if _ == maxF:\n        prevMax = maxF\n        counter += 1\n    elif _ > maxF:\n        prevMax = maxF\n        maxF = _\n        counter = 1\n    elif _ > prevMax:\n        prevMax = _\n    return [maxF, counter, prevMax]\nt = int(input())\nfor i in range(t):\n    n = input()\n    arr = list(map(int, input().split(' ')))\n    (f, n, prevF) = frequency(arr)\n    print(f) if n > 1 else print(max(prevF, f - f // 2))", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    dic = {}\n    for i in a:\n        if dic.get(i) == None:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    arr = list(dic.values())\n    arr.sort()\n    arr = [0] + arr\n    l = arr[-1]\n    l1 = arr[-2]\n    if l % 2 == 0:\n        print(max(l1, l // 2))\n    else:\n        print(max(l1, l // 2 + 1))", "tc = int(input())\na = 0\nwhile a < tc:\n    n = int(input())\n    d = dict()\n    l = input()\n    k = list(l.split())\n    list1 = []\n    count = 0\n    for i in k:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] = d[i] + 1\n    vals = list(d.values())\n    vals.sort()\n    x = len(vals)\n    if x == 1:\n        if vals[-1] % 2 != 0:\n            print(vals[-1] // 2 + 1)\n        else:\n            print(vals[-1] // 2)\n    elif vals[-1] == vals[-2]:\n        print(vals[-1])\n    elif vals[-1] // vals[-2] < 2:\n        print(vals[-2])\n    elif vals[-1] // vals[-2] >= 2:\n        if vals[-1] % 2 == 0:\n            print(int(vals[-1] / 2))\n        else:\n            print(int(vals[-1] // 2 + 1))\n    a = a + 1"]