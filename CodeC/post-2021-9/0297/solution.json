["t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    res = 0\n    c = 0\n    for i in a:\n        res += i\n        if res < n:\n            c += 1\n        else:\n            break\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    pre = [a[0]]\n    for i in range(1, n):\n        pre.append(pre[-1] + a[i])\n    (l, r) = (0, n - 1)\n    ans = 0\n    while l <= r:\n        m = (l + r) // 2\n        if pre[m] <= n - 1:\n            ans = m + 1\n            l = m + 1\n        else:\n            r = m - 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    l = 0\n    count = 0\n    for i in a:\n        l += i\n        if l < n:\n            count += 1\n        else:\n            break\n    print(count)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    c = 0\n    v = n - 1\n    for x in a:\n        if x <= v:\n            c = c + 1\n            v = v - x\n    print(c)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    count = 0\n    total = 0\n    for i in l:\n        total += i\n        if total < n:\n            count += 1\n        else:\n            break\n    print(count)", "t = int(input())\nfor i in range(t):\n    num = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    val = num - 1\n    t = 0\n    for i in range(num):\n        if a[i] <= val:\n            t += 1\n            val = val - a[i]\n    print(t)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    (count, total) = (0, n - 1)\n    for i in range(n):\n        if arr[i] <= total:\n            count += 1\n            total -= arr[i]\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    (count, total) = (0, n - 1)\n    for i in range(n):\n        if arr[i] <= total:\n            count += 1\n            total -= arr[i]\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = list(map(int, input().split()))\n    p = [int(ele) for ele in input().strip().split()]\n    p.sort()\n    s = 0\n    c = 0\n    for i in range(n[0]):\n        s += p[i]\n        if s < n[0]:\n            c += 1\n        else:\n            break\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    children = 0\n    answer = 0\n    a.sort()\n    for i in a:\n        children = i + children\n        if children > n - 1:\n            break\n        answer = answer + 1\n    print(answer)", "for _ in range(int(input())):\n    truth = 0\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    ttl = 0\n    for per in A:\n        ttl += per\n        if ttl < N:\n            truth += 1\n        else:\n            break\n    print(truth)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    total = 0\n    for ai in a:\n        if ai < n:\n            total += 1\n            n -= ai\n    print(total)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    i = 0\n    sum = a[0]\n    k = n\n    while sum <= k - 1:\n        k = k - a[i]\n        i += 1\n        if i == n:\n            break\n        sum = a[i]\n    print(i)", "import heapq\ntestCases = int(input())\nfor i in range(testCases):\n    N = int(input())\n    arr = []\n    for j in input().split(' '):\n        heapq.heappush(arr, int(j))\n    lenn = len(arr)\n    maxTruths = 0\n    counter = 0\n    while counter + 1 < N and len(arr) > 0:\n        popedElement = heapq.heappop(arr)\n        counter += popedElement\n        maxTruths += 1\n    if counter == 0:\n        print(lenn)\n    elif counter >= N:\n        print(maxTruths - 1)\n    else:\n        print(maxTruths)", "import heapq\ntestCases = int(input())\nfor i in range(testCases):\n    N = int(input())\n    arr = []\n    for j in input().split(' '):\n        heapq.heappush(arr, int(j))\n    lenn = len(arr)\n    maxTruths = 0\n    counter = 0\n    while counter + 1 < N and len(arr) > 0:\n        popedElement = heapq.heappop(arr)\n        counter += popedElement\n        maxTruths += 1\n    if counter == 0:\n        print(lenn)\n    elif counter >= N:\n        print(maxTruths - 1)\n    else:\n        print(maxTruths)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    t = 0\n    ans = 0\n    for x in a:\n        t += x\n        if t > n - 1:\n            break\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input().split()\n    arr = [int(x) for x in s]\n    arr.sort()\n    count = 0\n    total = 0\n    for el in arr:\n        total += el\n        if total < n:\n            count += 1\n        else:\n            break\n    print(count)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input().split()\n    arr = [int(x) for x in s]\n    arr.sort()\n    count = 0\n    total = 0\n    for el in arr:\n        total += el\n        if total < n:\n            count += 1\n        else:\n            break\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    array.sort()\n    c1 = 0\n    c2 = 0\n    for k in range(2):\n        o = 0\n    for i in array:\n        c1 += i\n        if c1 < n:\n            c2 += 1\n        else:\n            break\n    print(c2)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    tot = 0\n    c = 0\n    for i in arr:\n        tot += i\n        if tot < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    fam = 0\n    c = 0\n    for i in arr:\n        fam += i\n        if fam < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    fam = 0\n    c = 0\n    for i in arr:\n        fam += i\n        if fam < n:\n            c += 1\n        else:\n            break\n    print(c)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    tru = 0\n    ar.sort()\n    for i in range(n):\n        if ar[i] <= n - 1:\n            tru = tru + 1\n            n = n - ar[i]\n    print(tru)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    m = 0\n    for i in l:\n        c += i\n        m += 1\n        if c > n - 1:\n            m -= 1\n    print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    m = 0\n    for i in l:\n        c += i\n        m += 1\n        if c > n - 1:\n            m -= 1\n    print(m)", "tc = int(input())\nwhile tc:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    c1 = 0\n    c2 = 0\n    for i in arr:\n        c1 += i\n        if c1 < n:\n            c2 += 1\n        else:\n            break\n    print(c2)\n    tc -= 1", "tc = int(input())\nwhile tc:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    c1 = 0\n    c2 = 0\n    for i in arr:\n        c1 += i\n        if c1 < n:\n            c2 += 1\n        else:\n            break\n    print(c2)\n    tc -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    array.sort()\n    c1 = 0\n    c2 = 0\n    for k in range(2):\n        o = 0\n    for i in array:\n        c1 += i\n        if c1 < n:\n            c2 += 1\n        else:\n            break\n    print(c2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    array.sort()\n    c1 = 0\n    c2 = 0\n    for k in range(2):\n        o = 0\n    for i in array:\n        c1 += i\n        if c1 < n:\n            c2 += 1\n        else:\n            break\n    print(c2)", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    a = 0\n    for i in range(n):\n        if c + l[i] < n:\n            c = c + l[i]\n            a = a + 1\n        else:\n            break\n    print(a)", "T = int(input())\nfor tc in range(T):\n    N = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    checker = 0\n    truth = 0\n    for i in range(N):\n        checker += lst[i]\n        if checker >= N:\n            break\n        truth += 1\n    print(truth)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    included = 0\n    i = 0\n    while i < n and included + a[i] < n:\n        included += a[i]\n        ans += 1\n        i += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    tot = 0\n    ans = 0\n    for i in a:\n        tot += i\n        if tot >= n:\n            break\n        ans += 1\n    print(ans)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    s = 0\n    truth = 0\n    for i in l:\n        s = s + i\n        if s >= n:\n            break\n        truth += 1\n    print(truth)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    s = 0\n    truth = 0\n    for i in l:\n        s = s + i\n        if s >= n:\n            break\n        truth += 1\n    print(truth)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    sum = 0\n    t = 0\n    try:\n        for i in range(n):\n            if sum + a[i] < n:\n                sum += a[i]\n                t += 1\n            else:\n                break\n    except:\n        pass\n    print(t)", "import math\nfor _ in range(int(input())):\n    n1 = int(input())\n    a = list(map(int, input().strip().split()))\n    a.sort()\n    s = 0\n    si = 0\n    for i in range(n1):\n        if s + a[i] > n1 - 1:\n            break\n        si += 1\n        s += a[i]\n    print(si)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    a.sort()\n    s = 0\n    si = 0\n    for i in range(n):\n        if s + a[i] > n - 1:\n            break\n        si += 1\n        s += a[i]\n    print(si)", "for i in range(int(input())):\n    n = int(input())\n    N = list(map(int, input().split()))\n    child_i = 0\n    truth_tellers = 0\n    N.sort()\n    for i in N:\n        if child_i + i <= len(N) - 1:\n            child_i += i\n            truth_tellers += 1\n    print(truth_tellers)", "T = int(input(''))\nfor i in range(T):\n    n = int(input(''))\n    a = list(map(int, input('').strip().split()))\n    a.sort()\n    count = 0\n    indeg0 = n - 1\n    for x in a:\n        if indeg0 >= x:\n            indeg0 -= x\n            count += 1\n        else:\n            break\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (t, c) = (0, 0)\n    for i in a:\n        if t + i < n:\n            c += 1\n            t += i\n        else:\n            break\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    arr.sort()\n    temp = count = 0\n    for i in arr:\n        if temp + i < n:\n            temp += i\n            count += 1\n        else:\n            break\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    track = 0\n    count = 0\n    for i in arr:\n        if track + i <= n - 1:\n            track += i\n            count += 1\n        else:\n            break\n    print(count)", "t = int(input())\nfor i in range(t):\n    j = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    total = 0\n    count = 0\n    for el in arr:\n        if total + el <= j - 1:\n            total += el\n            count += 1\n        else:\n            break\n    print(count)", "def check(A, n):\n    s = 0\n    for (index, descendents) in enumerate(A):\n        s += descendents\n        if s > n - 1:\n            return index\n    if A[0] == 0:\n        return n\n    else:\n        return n - 1\nfor i in range(int(input())):\n    n = int(input())\n    A = sorted(list(map(int, input().split())))\n    print(check(A, n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    array.sort()\n    c1 = 0\n    c2 = 0\n    for k in range(2):\n        o = 0\n    for i in array:\n        c1 += i\n        if c1 < n:\n            c2 += 1\n        else:\n            break\n    print(c2)", "from math import gcd, sqrt, ceil, floor, log10, log2\nfrom heapq import heapify, heappop, heappush, nsmallest, nlargest\nfrom collections import Counter, deque, OrderedDict, defaultdict\nfrom itertools import combinations, permutations, zip_longest\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache, reduce\nimport sys\nimport time\nimport string\nimport operator\nRECURSION_LIMIT = int(10000000.0)\nINT_MAX = float('inf')\nINT_MIN = float('-inf')\nMOD = int(10000000.0) + 9\nNEWLINE = '\\n'\nSPACE = ' '\nsys.setrecursionlimit(RECURSION_LIMIT)\ninp = lambda fn: fn(input())\ninp_vars = lambda fn, delim, convert_to=list: convert_to(map(fn, input().split(delim)))\nenum = lambda itr, start: enumerate(itr, start)\n\ndef toposort(graph, n):\n    degree = [0] * n\n    for node in graph:\n        for adj in graph[node]:\n            degree[adj] += 1\n    bfs_queue = [node for node in range(n) if not degree[node]]\n    for node in bfs_queue:\n        for adj in graph[node]:\n            degree[adj] -= 1\n            if not degree[adj]:\n                bfs_queue.append(adj)\n    return (bfs_queue, degree)\n\ndef dfs(graph, node, visited):\n    visited.add(node)\n    for adj in graph[node]:\n        if adj in visited:\n            continue\n        dfs(graph, adj, visited)\n\ndef seive(n):\n    is_prime = [True] * (n + 1)\n    is_prime[0] = is_prime[1] = False\n    for i in range(2, int(n ** 0.5) + 1):\n        if is_prime[i]:\n            for j in range(i * i, n + 1, i):\n                is_prime[j] = False\n    return is_prime[n]\n\ndef solve(*args, **kwargs):\n    (n, arr) = args\n    arr.sort()\n    (res, flag) = (0, False)\n    for ele in arr:\n        if not flag:\n            if ele + 1 <= n:\n                res += 1\n                n = n - ele - 1\n            else:\n                break\n            flag = True\n        elif ele <= n:\n            n -= ele\n            res += 1\n        else:\n            break\n    return res\n\ndef main(*args, **kwargs):\n    for _ in range(int(input())):\n        arg1 = inp(int)\n        arg3 = inp_vars(int, SPACE)\n        res = solve(*(arg1, arg3))\n        if type(res) in {list, tuple, set}:\n            print(*res, sep='\\n')\n        else:\n            print(res)\nmain()", "a = int(input())\nfor i in range(a):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    y = 0\n    x = 0\n    for j in range(len(A)):\n        y += A[j]\n        if y >= N:\n            x = j\n            break\n    if x == 0:\n        if sum(A) >= N:\n            print(N - 1)\n        else:\n            print(N)\n    elif sum(A[:x + 1]) >= N:\n        print(x)\n    else:\n        print(x + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 1\n    s = 0\n    for j in l:\n        if c + j <= n:\n            c += j\n            s += 1\n    print(s)", "for i in range(int(input())):\n    N = int(input())\n    A = map(int, input().split())\n    l1 = sorted(A)\n    sum = 0\n    c = 0\n    for j in range(len(l1)):\n        sum = sum + l1[j]\n        c += 1\n        if sum > N - 1:\n            c = c - 1\n            break\n    print(c)", "tn = int(input())\nfor _ in range(tn):\n    n = int(input())\n    sm = 0\n    arr = list(map(int, input().split()))\n    arr.sort()\n    sm = sum(arr)\n    nv = n\n    while sm >= n:\n        sm -= arr[nv - 1]\n        nv -= 1\n    print(nv)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 1\n    s = 0\n    for j in l:\n        if c + j <= n:\n            c += j\n            s += 1\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 1\n    s = 0\n    for j in l:\n        if c + j <= n:\n            c += j\n            s += 1\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    i = 1\n    tt = 0\n    for le in l:\n        if i + le <= n:\n            i += le\n            tt += 1\n    print(tt)", "import collections as clts\nimport math\nimport heapq\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\n\ndef lcm(x, y):\n    return int(x / gcd(x, y) * y)\n\ndef take_input(type='list-int'):\n    if type == 'list-int':\n        return list(map(int, input().split()))\n    elif type == 'list-float':\n        return list(map(float, input().split()))\n    else:\n        return None\nfor _ in range(int(input())):\n    N = int(input())\n    A = take_input()\n    A = sorted(A)\n    for i in range(N):\n        N -= A[i]\n        if N <= 0:\n            i -= 1\n            break\n    print(i + 1)", "def test():\n    num_p = int(input())\n    childrens_lst = list(map(int, input().split()))\n    childrens_lst.sort()\n    counter = 0\n    Sum = 0\n    for i in range(num_p):\n        if Sum + childrens_lst[i] < num_p:\n            counter += 1\n            Sum += childrens_lst[i]\n        else:\n            break\n    print(counter)\ntests = int(input())\nfor i in range(tests):\n    test()", "def getMaxTruthTellers(case: list):\n    nonConnectedNodes = len(case) - 1\n    case.sort()\n    truthTellers = 0\n    for value in case:\n        if value > nonConnectedNodes:\n            break\n        truthTellers += 1\n        nonConnectedNodes -= value\n    return truthTellers\n\ndef parseInput():\n    T = int(input())\n    testCases = []\n    for i in range(T):\n        N = int(input())\n        testCases.append(list((int(x) for x in input().split())))\n    return testCases\n\ndef main():\n    testCases = parseInput()\n    for case in testCases:\n        print(getMaxTruthTellers(case))\nmain()", "def getMaxTruthTellers(case: list):\n    nonConnectedNodes = len(case) - 1\n    case.sort()\n    truthTellers = 0\n    for value in case:\n        if value > nonConnectedNodes:\n            break\n        truthTellers += 1\n        nonConnectedNodes -= value\n    return truthTellers\n\ndef parseInput():\n    T = int(input())\n    testCases = []\n    for i in range(T):\n        N = int(input())\n        testCases.append(list((int(x) for x in input().split())))\n    return testCases\n\ndef main():\n    testCases = parseInput()\n    for case in testCases:\n        print(getMaxTruthTellers(case))\nmain()", "for testcase in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    count = 0\n    sum = 0\n    for i in arr:\n        sum += i\n        if sum < n:\n            count += 1\n        else:\n            break\n    print(count)", "def function(A, N):\n    A.sort()\n    N = N - 1\n    total = 0\n    i = 0\n    while i < len(A):\n        total += A[i]\n        if total > N:\n            break\n        i += 1\n    return i\n\ndef main():\n    T = int(input())\n    for _ in range(T):\n        N = int(input())\n        A = list(map(int, input().split(' ')))\n        val = function(A, N)\n        print(val)\nmain()", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list1.sort()\n    sum = 0\n    i = 0\n    for i in range(n):\n        sum += list1[i]\n        if sum >= n:\n            print(i)\n            break\n        if i == n - 1:\n            print(n)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list1.sort()\n    i = 0\n    sons = 0\n    while i < n and sons + list1[i] < n:\n        sons = list1[i] + sons\n        i = i + 1\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    l.sort()\n    ans = n\n    while s >= n:\n        ans -= 1\n        s -= l[-1]\n        l.pop(-1)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    claims = list(map(int, input().split()))\n    claims.sort()\n    included = 0\n    sons_included = 0\n    i = 0\n    while i < n and sons_included + claims[i] < n:\n        sons_included += claims[i]\n        i += 1\n        included += 1\n    print(included)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    (sum, i) = (0, 0)\n    while sum < n and i < len(a):\n        sum += a[i]\n        i += 1\n    if sum >= n:\n        print(i - 1)\n    else:\n        print(i)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    (sum, i) = (0, 0)\n    while sum < n and i < len(a):\n        sum += a[i]\n        i += 1\n    if sum >= n:\n        print(i - 1)\n    else:\n        print(i)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    sum = 0\n    count = 0\n    for i in a:\n        if sum + i > n - 1:\n            break\n        sum += i\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    sum = 0\n    count = 0\n    for i in a:\n        if sum + i > n - 1:\n            break\n        sum += i\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    sum = 0\n    count = 0\n    for i in a:\n        if sum + i > n - 1:\n            break\n        sum += i\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    sum = 0\n    count = 0\n    for i in a:\n        if sum + i > n - 1:\n            break\n        sum += i\n        count += 1\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (i, ct, inc) = (0, 0, 0)\n    while i < n and inc + a[i] < n:\n        inc += a[i]\n        i += 1\n        ct += 1\n    print(ct)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    count = 0\n    ans = n\n    l = list(map(int, input().split()))\n    l.sort()\n    for i in l:\n        if ans - i > 0:\n            ans -= i\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    (i, cnt, inc) = (0, 0, 0)\n    while i < n and inc + arr[i] < n:\n        inc += arr[i]\n        i += 1\n        cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    (i, cnt, inc) = (0, 0, 0)\n    while i < n and inc + arr[i] < n:\n        inc += arr[i]\n        i += 1\n        cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    s = c = 0\n    for i in a:\n        if s + i > n - 1:\n            break\n        s += i\n        c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    s = c = 0\n    for i in a:\n        if s + i > n - 1:\n            break\n        s += i\n        c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    s = 0\n    ans = 0\n    for i in range(n):\n        if s + arr[i] < n:\n            s += arr[i]\n            ans += 1\n        else:\n            break\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    res = 0\n    s = 0\n    for i in range(n):\n        s += a[i]\n        if s < n:\n            res += 1\n        else:\n            break\n    print(res)\n    t -= 1", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    rem = n - 1\n    arr.sort()\n    ans = 0\n    for i in range(n):\n        if arr[i] <= rem:\n            ans += 1\n            rem -= arr[i]\n        else:\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input()) - 1\n    arr = [int(x) for x in input().split(' ')]\n    arr.sort()\n    count = 0\n    for i in arr:\n        if i <= n:\n            count += 1\n            n -= i\n        else:\n            break\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    b = n - 1\n    for i in a:\n        if b - i >= 0:\n            b -= i\n            count += 1\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    b = n - 1\n    for i in a:\n        if b - i >= 0:\n            b -= i\n            count += 1\n    print(count)"]