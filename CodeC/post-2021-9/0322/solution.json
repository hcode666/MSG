["from itertools import permutations\nfor _ in range(int(input())):\n    l = [int(x) for x in input().split()]\n    flag = True\n    for i in permutations(list(l)):\n        (A, B, C, D) = (i[0], i[1], i[2], i[3])\n        a = (A + B) // 2\n        b = (A - B) // 2\n        if 1 <= a <= 10000 and 1 <= b <= 10000:\n            if a + b == A and a - b == B and (a * b == C) and (b != 0) and (a // b == D):\n                print(a, b)\n                flag = False\n                break\n    if flag:\n        print('-1 -1')", "def ans(l):\n    l.sort()\n    (s, d, p, a) = l\n    A = (a + s) // 2\n    B = (a - s) // 2\n    if 1 <= A <= 10000 and 1 <= B <= 10000 and (A + B == a) and (A - B == s) and (A * B == p) and (A // B == d):\n        return (A, B)\n    (s, d, a, p) = l\n    A = (a + s) // 2\n    B = (a - s) // 2\n    if 1 <= A <= 10000 and 1 <= B <= 10000 and (A + B == a) and (A - B == s) and (A * B == p) and (A // B == d):\n        return (A, B)\n    (d, s, p, a) = l\n    A = (a + s) // 2\n    B = (a - s) // 2\n    if 1 <= A <= 10000 and 1 <= B <= 10000 and (A + B == a) and (A - B == s) and (A * B == p) and (A // B == d):\n        return (A, B)\n    (d, s, a, p) = l\n    A = (a + s) // 2\n    B = (a - s) // 2\n    if 1 <= A <= 10000 and 1 <= B <= 10000 and (A + B == a) and (A - B == s) and (A * B == p) and (A // B == d):\n        return (A, B)\n    return (-1, -1)\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    (a, b) = ans(l)\n    print(a, b)", "from math import floor\nt = int(input())\nfor it in range(t):\n    flag = True\n    t = tuple(map(int, input().split()))\n    idx = [0, 1, 2, 3]\n    for i in range(4):\n        for j in range(i + 1, 4):\n            if flag:\n                idx = [0, 1, 2, 3]\n                l = list(t)\n                a = (t[i] + t[j]) / 2\n                b = abs(t[i] - t[j]) / 2\n                if a % 1 != 0 or b % 1 != 0:\n                    continue\n                if a < 1 or b < 1 or a > 10000 or (b > 10000):\n                    continue\n                idx.remove(i)\n                idx.remove(j)\n                if a * b == t[idx[0]] and floor(a / b) == t[idx[1]] or (a * b == t[idx[1]] and floor(a / b) == t[idx[0]]):\n                    print(int(a), int(b))\n                    flag = False\n    if flag:\n        print('-1 -1')", "from math import floor\nt = int(input())\nfor it in range(t):\n    flag = True\n    t = tuple(map(int, input().split()))\n    idx = [0, 1, 2, 3]\n    for i in range(4):\n        for j in range(i + 1, 4):\n            if flag:\n                idx = [0, 1, 2, 3]\n                l = list(t)\n                a = (t[i] + t[j]) / 2\n                b = abs(t[i] - t[j]) / 2\n                if a % 1 != 0 or b % 1 != 0:\n                    continue\n                if a < 1 or b < 1 or a > 10000 or (b > 10000):\n                    continue\n                idx.remove(i)\n                idx.remove(j)\n                if a * b == t[idx[0]] and floor(a / b) == t[idx[1]] or (a * b == t[idx[1]] and floor(a / b) == t[idx[0]]):\n                    print(int(a), int(b))\n                    flag = False\n    if flag:\n        print('-1 -1')", "from math import floor\nt = int(input())\nfor it in range(t):\n    flag = True\n    t = tuple(map(int, input().split()))\n    idx = [0, 1, 2, 3]\n    for i in range(4):\n        for j in range(i + 1, 4):\n            if flag:\n                idx = [0, 1, 2, 3]\n                l = list(t)\n                a = (t[i] + t[j]) / 2\n                b = abs(t[i] - t[j]) / 2\n                if a % 1 != 0 or b % 1 != 0:\n                    continue\n                if a < 1 or b < 1 or a > 10000 or (b > 10000):\n                    continue\n                idx.remove(i)\n                idx.remove(j)\n                if a * b == t[idx[0]] and floor(a / b) == t[idx[1]] or (a * b == t[idx[1]] and floor(a / b) == t[idx[0]]):\n                    print(int(a), int(b))\n                    flag = False\n    if flag:\n        print('-1 -1')", "t = int(input())\nfor i in range(0, t):\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a1 = (arr[2] + arr[0]) / 2\n    b1 = (arr[2] - arr[0]) / 2\n    a2 = (arr[2] + arr[1]) / 2\n    b2 = (arr[2] - arr[1]) / 2\n    a3 = (arr[3] + arr[0]) / 2\n    b3 = (arr[3] - arr[0]) / 2\n    a4 = (arr[3] + arr[1]) / 2\n    b4 = (arr[3] - arr[1]) / 2\n    if a1 != 0 and b1 != 0:\n        if a1 // b1 == arr[1] and a1 * b1 == arr[3] and (a1 >= 1) and (b1 >= 1) and (a1 <= 10000) and (b1 <= 10000):\n            print(int(a1), int(b1))\n            continue\n    if a2 != 0 and b2 != 0:\n        if a2 // b2 == arr[0] and a2 * b2 == arr[3] and (a2 >= 1) and (b2 >= 1) and (a2 <= 10000) and (b2 <= 10000):\n            print(int(a2), int(b2))\n            continue\n    if a3 != 0 and b3 != 0:\n        if a3 // b3 == arr[1] and a3 * b3 == arr[2] and (a3 >= 1) and (b3 >= 1) and (a3 <= 10000) and (b3 <= 10000):\n            print(int(a3), int(b3))\n            continue\n    if a4 != 0 and b4 != 0:\n        if a4 // b4 == arr[0] and a4 * b4 == arr[2] and (a4 >= 1) and (b4 >= 1) and (a4 <= 10000) and (b4 <= 10000):\n            print(int(a4), int(b4))\n            continue\n    print('-1 -1')", "from itertools import permutations\nt = int(input())\nfor _ in range(t):\n    l = [int(x) for x in input().split()]\n    flag = True\n    for i in permutations(list(l)):\n        (A, B, C, D) = (i[0], i[1], i[2], i[3])\n        a = (A + B) // 2\n        b = (A - B) // 2\n        if 1 <= a <= 10000 and 1 <= b <= 10000:\n            if a + b == A and a - b == B and (a * b == C) and (b != 0) and (a // b == D):\n                print(a, b)\n                flag = False\n                break\n    if flag:\n        print('-1 -1')", "t = int(input())\nfor i in range(0, t):\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a1 = (arr[2] + arr[0]) / 2\n    b1 = (arr[2] - arr[0]) / 2\n    a2 = (arr[2] + arr[1]) / 2\n    b2 = (arr[2] - arr[1]) / 2\n    a3 = (arr[3] + arr[0]) / 2\n    b3 = (arr[3] - arr[0]) / 2\n    a4 = (arr[3] + arr[1]) / 2\n    b4 = (arr[3] - arr[1]) / 2\n    if a1 != 0 and b1 != 0:\n        if a1 // b1 == arr[1] and a1 * b1 == arr[3] and (a1 >= 1) and (b1 >= 1) and (a1 <= 10000) and (b1 <= 10000):\n            print(int(a1), int(b1))\n            continue\n    if a2 != 0 and b2 != 0:\n        if a2 // b2 == arr[0] and a2 * b2 == arr[3] and (a2 >= 1) and (b2 >= 1) and (a2 <= 10000) and (b2 <= 10000):\n            print(int(a2), int(b2))\n            continue\n    if a3 != 0 and b3 != 0:\n        if a3 // b3 == arr[1] and a3 * b3 == arr[2] and (a3 >= 1) and (b3 >= 1) and (a3 <= 10000) and (b3 <= 10000):\n            print(int(a3), int(b3))\n            continue\n    if a4 != 0 and b4 != 0:\n        if a4 // b4 == arr[0] and a4 * b4 == arr[2] and (a4 >= 1) and (b4 >= 1) and (a4 <= 10000) and (b4 <= 10000):\n            print(int(a4), int(b4))\n            continue\n    print('-1 -1')", "from itertools import permutations\nt = int(input())\nfor _ in range(t):\n    l = [int(x) for x in input().split()]\n    flag = True\n    for i in permutations(list(l)):\n        (A, B, C, D) = (i[0], i[1], i[2], i[3])\n        a = (A + B) // 2\n        b = (A - B) // 2\n        if 1 <= a <= 10000 and 1 <= b <= 10000:\n            if a + b == A and a - b == B and (a * b == C) and (b != 0) and (a // b == D):\n                print(a, b)\n                flag = False\n                break\n    if flag:\n        print('-1 -1')", "from itertools import permutations\n\ndef solve():\n    arr = list(map(int, input().split()))\n    for i in permutations(arr):\n        (A, B, C, D) = (i[0], i[1], i[2], i[3])\n        a = (A + B) // 2\n        b = (A - B) // 2\n        if a * b == C and b != 0 and (a // b == D) and (a in range(1, 10 ** 4 + 1)) and (b in range(1, 10 ** 4 + 1)):\n            return str(a) + ' ' + str(b)\n    return '-1 -1'\nfor _ in range(int(input())):\n    print(solve())", "from itertools import permutations as p\nt = int(input())\nfor i in range(t):\n    L = input()\n    l = L.split()\n    l = [int(a) for a in l]\n    per = p(l)\n    for j in list(per):\n        (a, b, c, d) = j\n        A = (a + b) // 2\n        B = (a - b) // 2\n        if A != 0 and B != 0 and (A < 10001) and (B < 10001) and (c == A * B) and (d == A // B):\n            print(A, '', B)\n            flag = 0\n            break\n        else:\n            flag = 1\n    if flag == 1:\n        print(-1, '', -1)", "from itertools import permutations\nfor _ in range(int(input())):\n    L = list(map(int, input().split()))\n    for i in permutations(L):\n        (w, x, y, z) = (i[0], i[1], i[2], i[3])\n        a = (w + x) // 2\n        b = (w - x) // 2\n        flag = True\n        if 1 <= a <= 10000 and 1 <= b <= 10000:\n            if a + b == w and a - b == x and (a * b == y) and (a // b == z):\n                print(a, b)\n                flag = False\n                break\n    if flag:\n        print(-1, -1)", "from itertools import permutations\nfor _ in range(int(input())):\n    L = list(map(int, input().split()))\n    for i in permutations(L):\n        (w, x, y, z) = (i[0], i[1], i[2], i[3])\n        a = (w + x) // 2\n        b = (w - x) // 2\n        flag = True\n        if 1 <= a <= 10000 and 1 <= b <= 10000:\n            if a + b == w and a - b == x and (a * b == y) and (a // b == z):\n                print(a, b)\n                flag = False\n                break\n    if flag:\n        print(-1, -1)", "from itertools import permutations\nt = int(input())\nfor _ in range(t):\n    l = [int(x) for x in input().split()]\n    flag = True\n    for i in permutations(list(l)):\n        (A, B, C, D) = (i[0], i[1], i[2], i[3])\n        a = (A + B) // 2\n        b = (A - B) // 2\n        if 1 <= a <= 10000 and 1 <= b <= 10000:\n            if a + b == A and a - b == B and (a * b == C) and (b != 0) and (a // b == D):\n                print(a, b)\n                flag = False\n                break\n    if flag:\n        print('-1 -1')", "from itertools import permutations as p\nt = int(input())\nfor i in range(t):\n    L = input()\n    l = L.split()\n    l = [int(a) for a in l]\n    per = p(l)\n    for j in list(per):\n        (a, b, c, d) = j\n        A = (a + b) // 2\n        B = (a - b) // 2\n        if A != 0 and B != 0 and (A < 10001) and (B < 10001) and (c == A * B) and (d == A // B):\n            print(A, '', B)\n            flag = 0\n            break\n        else:\n            flag = 1\n    if flag == 1:\n        print(-1, '', -1)", "from itertools import permutations\nnumTest = int(input())\nfor _ in range(numTest):\n    m = [int(i) for i in input().split()]\n    for lis in permutations(m):\n        (a, b, c, d) = tuple(lis)\n        A = (a + b) // 2\n        B = (a - b) // 2\n        if 0 < A <= 10 ** 4 and 0 < B <= 10 ** 4 and (A * B == c) and (B != 0) and (A // B == d):\n            print(A, B)\n            break\n    else:\n        print(-1, -1)", "T = int(input())\nfor i in range(T):\n    L = list(map(int, input().split()))\n    p = max(L)\n    L.remove(p)\n    s = max(L)\n    L.remove(s)\n    L1 = L\n    if sum(L) + s + p == 3 + s or sum(L) + s + p == 2 + s:\n        a = 1\n        b = p - a\n        if a < 1 or b < 1 or a > 10 ** 4 or (b > 10 ** 4):\n            print(-1, -1)\n            continue\n        if a * b == s and min(L1) == a - b:\n            L1.remove(min(L1))\n            if a // b in L1:\n                print(a, b)\n                continue\n    elif sum(L) + s + p == 4 * s:\n        a = 1\n        b = p - a\n        if a < 1 or b < 1 or a > 10 ** 4 or (b > 10 ** 4):\n            print(-1, -1)\n            continue\n        if a * b == s and min(L1) == b - a:\n            L1.remove(min(L1))\n            if b // a in L1:\n                print(b, a)\n                continue\n    d = (s ** 2 - 4 * p) ** 0.5\n    if d in L:\n        pass\n    elif d * -1 in L:\n        d *= -1\n    else:\n        print(-1, -1)\n        continue\n    L.remove(d)\n    a = (s + d) * 0.5\n    b = (s - d) * 0.5\n    if a < 1 or b < 1 or a > 10 ** 4 or (b > 10 ** 4):\n        print(-1, -1)\n        continue\n    if a // b in L:\n        print(int(a), int(b))\n    else:\n        print(-1, -1)", "T = int(input())\nfor i in range(T):\n    L = list(map(int, input().split()))\n    p = max(L)\n    L.remove(p)\n    s = max(L)\n    L.remove(s)\n    L1 = L\n    if sum(L) + s + p == 3 + s or sum(L) + s + p == 2 + s:\n        a = 1\n        b = p - a\n        if a < 1 or b < 1 or a > 10 ** 4 or (b > 10 ** 4):\n            print(-1, -1)\n            continue\n        if a * b == s and min(L1) == a - b:\n            L1.remove(min(L1))\n            if a // b in L1:\n                print(a, b)\n                continue\n    elif sum(L) + s + p == 4 * s:\n        a = 1\n        b = p - a\n        if a < 1 or b < 1 or a > 10 ** 4 or (b > 10 ** 4):\n            print(-1, -1)\n            continue\n        if a * b == s and min(L1) == b - a:\n            L1.remove(min(L1))\n            if b // a in L1:\n                print(b, a)\n                continue\n    d = (s ** 2 - 4 * p) ** 0.5\n    if d in L:\n        pass\n    elif d * -1 in L:\n        d *= -1\n    else:\n        print(-1, -1)\n        continue\n    L.remove(d)\n    a = (s + d) * 0.5\n    b = (s - d) * 0.5\n    if a < 1 or b < 1 or a > 10 ** 4 or (b > 10 ** 4):\n        print(-1, -1)\n        continue\n    if a // b in L:\n        print(int(a), int(b))\n    else:\n        print(-1, -1)", "from itertools import permutations\nt = int(input())\nfor _ in range(t):\n    l = [int(x) for x in input().split()]\n    flag = True\n    for i in permutations(list(l)):\n        (A, B, C, D) = (i[0], i[1], i[2], i[3])\n        a = (A + B) // 2\n        b = (A - B) // 2\n        if 1 <= a <= 10000 and 1 <= b <= 10000:\n            if a + b == A and a - b == B and (a * b == C) and (b != 0) and (a // b == D):\n                print(a, b)\n                flag = False\n                break\n    if flag:\n        print('-1 -1')", "from itertools import permutations\n\ndef solve():\n    arr = list(map(int, input().split()))\n    for perm in permutations(arr):\n        (A, B, C, D) = (perm[0], perm[1], perm[2], perm[3])\n        a = (A + B) // 2\n        b = (A - B) // 2\n        if a * b == C and b != 0 and (a // b == D) and (a in range(1, 10 ** 4 + 1)) and (b in range(1, 10 ** 4 + 1)):\n            return str(a) + ' ' + str(b)\n    return '-1 -1'\nfor _ in range(int(input())):\n    print(solve())", "from itertools import permutations\nt = int(input())\nfor _ in range(t):\n    l = [int(x) for x in input().split()]\n    flag = True\n    for i in permutations(list(l)):\n        (A, B, C, D) = (i[0], i[1], i[2], i[3])\n        a = (A + B) // 2\n        b = (A - B) // 2\n        if 1 <= a <= 10000 and 1 <= b <= 10000:\n            if a + b == A and a - b == B and (a * b == C) and (b != 0) and (a // b == D):\n                print(a, b)\n                flag = False\n                break\n    if flag:\n        print('-1 -1')", "from itertools import permutations\nt = int(input())\nfor _ in range(t):\n    l = [int(x) for x in input().split()]\n    flag = True\n    for i in permutations(list(l)):\n        (A, B, C, D) = (i[0], i[1], i[2], i[3])\n        a = (A + B) // 2\n        b = (A - B) // 2\n        if 1 <= a <= 10000 and 1 <= b <= 10000:\n            if a + b == A and a - b == B and (a * b == C) and (b != 0) and (a // b == D):\n                print(a, b)\n                flag = False\n                break\n    if flag:\n        print('-1 -1')", "from itertools import permutations\nt = int(input())\nfor _ in range(t):\n    l = [int(x) for x in input().split()]\n    flag = True\n    for i in permutations(list(l)):\n        (A, B, C, D) = (i[0], i[1], i[2], i[3])\n        a = (A + B) // 2\n        b = (A - B) // 2\n        if 1 <= a <= 10000 and 1 <= b <= 10000:\n            if a + b == A and a - b == B and (a * b == C) and (b != 0) and (a // b == D):\n                print(a, b)\n                flag = False\n                break\n    if flag:\n        print('-1 -1')", "from itertools import permutations\nt = int(input())\nfor _ in range(t):\n    l = [int(x) for x in input().split()]\n    flag = True\n    for i in permutations(list(l)):\n        (A, B, C, D) = (i[0], i[1], i[2], i[3])\n        a = (A + B) // 2\n        b = (A - B) // 2\n        if 1 <= a <= 10000 and 1 <= b <= 10000:\n            if a + b == A and a - b == B and (a * b == C) and (b != 0) and (a // b == D):\n                print(a, b)\n                flag = False\n                break\n    if flag:\n        print('-1 -1')", "def num1(w, x, y, z):\n    (a, b) = ((w + x) // 2, (w - x) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == y) & (a // b == z) or (a * b == z) & (a // b == y):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((w + y) // 2, (w - y) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == x) & (a // b == z) or (a * b == z) & (a // b == x):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((w + z) // 2, (w - z) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == y) & (a // b == x) or (a * b == x) & (a // b == y):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((x + y) // 2, (x - y) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == w) & (a // b == z) or (a * b == z) & (a // b == w):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((x + z) // 2, (x - z) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == y) & (a // b == w) or (a * b == w) & (a // b == y):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((y + z) // 2, (y - z) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == w) & (a // b == x) or (a * b == x) & (a // b == w):\n            return str(a) + ' ' + str(b)\n    return str(-1) + ' ' + str(-1)\nfor i in range(int(input())):\n    n = list(map(int, input().split()))\n    n1 = n.copy()\n    n1.sort()\n    m = [0, 1, 1, 2]\n    if n1 == m:\n        print(1, 1)\n    else:\n        n.sort(reverse=True)\n        print(num1(n[0], n[1], n[2], n[3]))", "from itertools import permutations\nfor _ in range(int(input())):\n    li = list(map(int, input().split()))\n    li.sort()\n    pe = permutations([li[0], li[1], li[2], li[3]])\n    f = 0\n    for i in pe:\n        if (i[3] + i[0]) % 2 == 0 and (i[3] - i[0]) % 2 == 0:\n            a = int((i[3] + i[0]) / 2)\n            b = int((i[3] - i[0]) / 2)\n            if (a <= 10000 and a >= 1) and (b <= 10000 and b >= 1) and (a * b == i[1] and int(a / b) == i[2]):\n                print(int(a), int(b))\n                f = 1\n                break\n    if f == 0:\n        print(-1, -1)", "from itertools import permutations\nt = int(input())\nfor i in range(t):\n    nums = input().split()\n    nums = map(int, nums)\n    perms = permutations(nums)\n    found = False\n    for num_list in perms:\n        (a, y) = divmod(num_list[0] + num_list[1], 2)\n        (b, z) = divmod(num_list[0] - num_list[1], 2)\n        if y != 0 or z != 0 or (a < 1 or a > 10000) or (b < 1 or b > 10000):\n            continue\n        if a // b == num_list[3] and a * b == num_list[2]:\n            found = True\n            print(a, b)\n            break\n    if not found:\n        print('-1 -1')", "from itertools import permutations\nfor _ in range(int(input())):\n    li = list(map(int, input().split()))\n    li.sort()\n    pe = permutations([li[0], li[1], li[2], li[3]])\n    f = 0\n    for i in pe:\n        if (i[3] + i[0]) % 2 == 0 and (i[3] - i[0]) % 2 == 0:\n            a = int((i[3] + i[0]) / 2)\n            b = int((i[3] - i[0]) / 2)\n            if (a <= 10000 and a >= 1) and (b <= 10000 and b >= 1) and (a * b == i[1] and int(a / b) == i[2]):\n                print(int(a), int(b))\n                f = 1\n                break\n    if f == 0:\n        print(-1, -1)", "def solve(A, B):\n    (C, D) = (0, 0)\n    ans = 0\n    for i in range(4):\n        for j in range(4):\n            F = []\n            if i != j:\n                C = (A[i] + A[j]) // 2\n                D = (A[i] - A[j]) // 2\n                if D != 0:\n                    F.append(C - D)\n                    F.append(C + D)\n                    F.append(C * D)\n                    F.append(C // D)\n            F.sort()\n            if C <= 0 or C > 10000.0 or D <= 0 or (D > 10000.0):\n                continue\n            if B == F:\n                return (C, D)\n    return (-1, -1)\nT = int(input())\nfor _ in range(T):\n    A = list(map(int, input().split()))\n    B = A[::1]\n    B.sort()\n    print(*solve(A, B))", "import math\nfor t in range(int(input())):\n    (A, B, C, D) = map(int, input().split())\n    l = [A, B, C, D]\n    l.sort()\n\n    def check(diff, sum, prod, div):\n        a = (sum + diff) / 2\n        b = sum - a\n        if a % 1 == 0 and b % 1 == 0 and (a > 0 and a <= 10000) and (b > 0 and b <= 10000):\n            if a * b == prod and a // b == div:\n                return True\n            else:\n                return False\n        else:\n            return False\n    if check(l[0], l[2], l[3], l[1]):\n        k1 = (l[0] + l[2]) // 2\n        k2 = l[2] - k1\n        print(k1, k2)\n    elif check(l[0], l[3], l[2], l[1]):\n        k1 = (l[0] + l[3]) // 2\n        k2 = l[3] - k1\n        print(k1, k2)\n    elif check(l[1], l[2], l[3], l[0]):\n        k1 = (l[1] + l[2]) // 2\n        k2 = l[2] - k1\n        print(k1, k2)\n    elif check(l[1], l[3], l[2], l[0]):\n        k1 = (l[1] + l[3]) // 2\n        k2 = l[3] - k1\n        print(k1, k2)\n    else:\n        k1 = -1\n        k2 = -1\n        print(k1, k2)", "import math\nfor t in range(int(input())):\n    (A, B, C, D) = map(int, input().split())\n    l = [A, B, C, D]\n    l.sort()\n\n    def check(diff, sum, prod, div):\n        a = (sum + diff) / 2\n        b = sum - a\n        if a % 1 == 0 and b % 1 == 0 and (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n            if a * b == prod and a // b == div:\n                return True\n            else:\n                return False\n        else:\n            return False\n    if check(l[0], l[2], l[3], l[1]):\n        k1 = (l[0] + l[2]) // 2\n        k2 = l[2] - k1\n        print(k1, k2)\n    elif check(l[0], l[3], l[2], l[1]):\n        k1 = (l[0] + l[3]) // 2\n        k2 = l[3] - k1\n        print(k1, k2)\n    elif check(l[1], l[2], l[3], l[0]):\n        k1 = (l[1] + l[2]) // 2\n        k2 = l[2] - k1\n        print(k1, k2)\n    elif check(l[1], l[3], l[2], l[0]):\n        k1 = (l[1] + l[3]) // 2\n        k2 = l[3] - k1\n        print(k1, k2)\n    else:\n        k1 = -1\n        k2 = -1\n        print(k1, k2)", "import itertools\nimport math\nimport copy\nt = int(input())\nfor tc in range(t):\n    v = [int(x) for x in input().split()]\n    s = sorted(v)\n    w = []\n    i = v.count(0)\n    j = v.count(1)\n    if i == 1 and j == 2 and (s[3] == 2):\n        (a, b) = (1, 1)\n    else:\n        p = itertools.permutations(v, 3)\n        for x in set(p):\n            if math.fabs(x[0] ** 2 - x[1] ** 2) == 4 * x[2]:\n                a = (x[0] + x[1]) / 2\n                b = math.fabs((x[0] - x[1]) / 2)\n                w = copy.copy(v)\n                for e in x:\n                    w.remove(e)\n                if b != 0 and a // b == w[0]:\n                    if (a >= 1 and a <= 10000.0) and (b >= 1 and b <= 10000.0) and (a == int(a) and int(b) == b):\n                        break\n                else:\n                    continue\n        else:\n            (a, b) = (-1, -1)\n    print(int(a), int(b))", "import itertools\nimport math\nimport copy\nt = int(input())\nfor tc in range(t):\n    v = [int(x) for x in input().split()]\n    s = sorted(v)\n    w = []\n    i = v.count(0)\n    j = v.count(1)\n    if i == 1 and j == 2 and (s[3] == 2):\n        (a, b) = (1, 1)\n    else:\n        p = itertools.permutations(v, 3)\n        for x in set(p):\n            if math.fabs(x[0] ** 2 - x[1] ** 2) == 4 * x[2]:\n                a = (x[0] + x[1]) / 2\n                b = math.fabs((x[0] - x[1]) / 2)\n                w = copy.copy(v)\n                for e in x:\n                    w.remove(e)\n                if b != 0 and a // b == w[0]:\n                    if (a >= 1 and a <= 10000.0) and (b >= 1 and b <= 10000.0) and (a == int(a) and int(b) == b):\n                        break\n                else:\n                    continue\n        else:\n            (a, b) = (-1, -1)\n    print(int(a), int(b))", "def checkResult(summ, diff, m, d):\n    if summ < diff:\n        (summ, diff) = (diff, summ)\n    a = (summ + diff) // 2\n    b = (summ - diff) // 2\n    if b < 1 or b > 10000.0 or a < 1 or (a > 10000.0):\n        return (-1, -1)\n    if a * b == m and a // b == d or (a * b == d and a // b == m):\n        return (a, b)\n    else:\n        return (-1, -1)\nfor t in range(int(input())):\n    (A, B, C, D) = list(map(int, input().strip().split()))\n    arr = [[A, B, C, D], [A, C, B, D], [A, D, B, C], [B, C, A, D], [B, D, A, C], [C, D, A, B]]\n    results = [checkResult(x, y, z, w) for (x, y, z, w) in arr]\n    found = False\n    for tup in results:\n        if tup != (-1, -1):\n            print(*tup)\n            found = True\n            break\n    if not found:\n        print(-1, -1)", "t = int(input())\nfor i in range(t):\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    a1 = (arr[2] + arr[0]) / 2\n    b1 = (arr[2] - arr[0]) / 2\n    a2 = (arr[2] + arr[1]) / 2\n    b2 = (arr[2] - arr[1]) / 2\n    a3 = (arr[3] + arr[0]) / 2\n    b3 = (arr[3] - arr[0]) / 2\n    a4 = (arr[3] + arr[1]) / 2\n    b4 = (arr[3] - arr[1]) / 2\n    if a1 % 1 == 0 and a1 != 0 and (b1 % 1 == 0) and (b1 != 0):\n        if a1 // b1 == arr[1] and a1 * b1 == arr[3] and (a1 >= 1) and (b1 >= 1) and (a1 <= 10000) and (b1 <= 10000):\n            print(int(a1), int(b1))\n            continue\n    if a2 % 1 == 0 and a2 != 0 and (b2 % 1 == 0) and (b2 != 0):\n        if a2 // b2 == arr[0] and a2 * b2 == arr[3] and (a2 >= 1) and (b2 >= 1) and (a2 <= 10000) and (b2 <= 10000):\n            print(int(a2), int(b2))\n            continue\n    if a3 % 1 == 0 and a3 != 0 and (b3 % 1 == 0) and (b3 != 0):\n        if a3 // b3 == arr[1] and a3 * b3 == arr[2] and (a3 >= 1) and (b3 >= 1) and (a3 <= 10000) and (b3 <= 10000):\n            print(int(a3), int(b3))\n            continue\n    if a4 % 1 == 0 and a4 != 0 and (b4 % 1 == 0) and (b4 != 0):\n        if a4 // b4 == arr[0] and a4 * b4 == arr[2] and (a4 >= 1) and (b4 >= 1) and (a4 <= 10000) and (b4 <= 10000):\n            print(int(a4), int(b4))\n            continue\n    print('-1 -1')", "t = int(input())\nfor i in range(t):\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    a1 = (arr[2] + arr[0]) / 2\n    b1 = (arr[2] - arr[0]) / 2\n    a2 = (arr[2] + arr[1]) / 2\n    b2 = (arr[2] - arr[1]) / 2\n    a3 = (arr[3] + arr[0]) / 2\n    b3 = (arr[3] - arr[0]) / 2\n    a4 = (arr[3] + arr[1]) / 2\n    b4 = (arr[3] - arr[1]) / 2\n    if a1 % 1 == 0 and a1 != 0 and (b1 % 1 == 0) and (b1 != 0):\n        if a1 // b1 == arr[1] and a1 * b1 == arr[3] and (a1 >= 1) and (b1 >= 1) and (a1 <= 10000) and (b1 <= 10000):\n            print(int(a1), int(b1))\n            continue\n    if a2 % 1 == 0 and a2 != 0 and (b2 % 1 == 0) and (b2 != 0):\n        if a2 // b2 == arr[0] and a2 * b2 == arr[3] and (a2 >= 1) and (b2 >= 1) and (a2 <= 10000) and (b2 <= 10000):\n            print(int(a2), int(b2))\n            continue\n    if a3 % 1 == 0 and a3 != 0 and (b3 % 1 == 0) and (b3 != 0):\n        if a3 // b3 == arr[1] and a3 * b3 == arr[2] and (a3 >= 1) and (b3 >= 1) and (a3 <= 10000) and (b3 <= 10000):\n            print(int(a3), int(b3))\n            continue\n    if a4 % 1 == 0 and a4 != 0 and (b4 % 1 == 0) and (b4 != 0):\n        if a4 // b4 == arr[0] and a4 * b4 == arr[2] and (a4 >= 1) and (b4 >= 1) and (a4 <= 10000) and (b4 <= 10000):\n            print(int(a4), int(b4))\n            continue\n    print('-1 -1')", "t = int(input())\nfor i in range(t):\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    a1 = (arr[2] + arr[0]) / 2\n    b1 = (arr[2] - arr[0]) / 2\n    a2 = (arr[2] + arr[1]) / 2\n    b2 = (arr[2] - arr[1]) / 2\n    a3 = (arr[3] + arr[0]) / 2\n    b3 = (arr[3] - arr[0]) / 2\n    a4 = (arr[3] + arr[1]) / 2\n    b4 = (arr[3] - arr[1]) / 2\n    if a1 % 1 == 0 and a1 != 0 and (b1 % 1 == 0) and (b1 != 0):\n        if a1 // b1 == arr[1] and a1 * b1 == arr[3] and (a1 >= 1) and (b1 >= 1) and (a1 <= 10000) and (b1 <= 10000):\n            print(int(a1), int(b1))\n            continue\n    if a2 % 1 == 0 and a2 != 0 and (b2 % 1 == 0) and (b2 != 0):\n        if a2 // b2 == arr[0] and a2 * b2 == arr[3] and (a2 >= 1) and (b2 >= 1) and (a2 <= 10000) and (b2 <= 10000):\n            print(int(a2), int(b2))\n            continue\n    if a3 % 1 == 0 and a3 != 0 and (b3 % 1 == 0) and (b3 != 0):\n        if a3 // b3 == arr[1] and a3 * b3 == arr[2] and (a3 >= 1) and (b3 >= 1) and (a3 <= 10000) and (b3 <= 10000):\n            print(int(a3), int(b3))\n            continue\n    if a4 % 1 == 0 and a4 != 0 and (b4 % 1 == 0) and (b4 != 0):\n        if a4 // b4 == arr[0] and a4 * b4 == arr[2] and (a4 >= 1) and (b4 >= 1) and (a4 <= 10000) and (b4 <= 10000):\n            print(int(a4), int(b4))\n            continue\n    print('-1 -1')", "from itertools import permutations\nimport math\ntotal_test_case = int(input())\ntest_case_list = []\nwhile total_test_case != 0:\n    test_case_list.append(list(map(int, input().split())))\n    total_test_case = total_test_case - 1\n\ndef is_valid_combination(add, sub, mul, div):\n    a = (add + sub) / 2\n    b = (add - sub) / 2\n    if not a.is_integer() or not b.is_integer():\n        return False\n    if a <= 0 or a > 10000 or b <= 0 or (b > 10000):\n        return False\n    if a * b == mul and math.floor(a / b) == div or (a * b == div and math.floor(a / b) == mul):\n        return True\n    else:\n        return False\nfor test_case in test_case_list:\n    perm = list(permutations(test_case))\n    answer = [-1, -1]\n    for i in perm:\n        if is_valid_combination(i[0], i[1], i[2], i[3]):\n            a = (i[0] + i[1]) / 2\n            b = (i[0] - i[1]) / 2\n            answer = [a, b]\n            break\n    print(int(answer[0]), int(answer[1]))", "def find(arr):\n    o = [(2, 3), (1, 3), (1, 2), (0, 3), (0, 2), (0, 1)]\n    k = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            a = (arr[i] + arr[j]) // 2\n            b = abs((arr[i] - arr[j]) // 2)\n            if a <= 0 or b <= 0 or a > 10000.0 or (b > 10000.0):\n                k += 1\n                continue\n            (m, n) = o[k]\n            if a * b == arr[m] and a // b == arr[n] or (a * b == arr[n] and a // b == arr[m]):\n                print(a, b)\n                return\n            else:\n                k += 1\n    else:\n        print(-1, -1)\nfor i in range(int(input())):\n    k = list(map(int, input().split()))\n    find(k)", "def find(arr):\n    (x, y, w, z) = arr\n    c = ([x, y, w, z], [x, w, y, z], [x, z, y, w], [y, w, x, z], [y, z, x, w], [w, z, x, y])\n    for i in c:\n        a = (i[0] + i[1]) // 2\n        b = abs(i[0] - i[1]) // 2\n        if a <= 0 or b <= 0 or a > 10000.0 or (b > 10000.0):\n            continue\n        if a * b == i[2] and a // b == i[3] or (a * b == i[3] and a // b == i[2]):\n            print(a, b)\n            return\n    print(-1, -1)\nfor i in range(int(input())):\n    k = list(map(int, input().split()))\n    find(k)", "def solve(A, S, M, D):\n    a = (A + S) // 2\n    b = abs(A - S) // 2\n    if a <= 0 or b <= 0 or a > 10000.0 or (b > 10000.0):\n        return [-1, -1]\n    if a * b == M and a // b == D or (a * b == D and a // b == M):\n        return [a, b]\n    return [-1, -1]\n\ndef main():\n    T = int(input())\n    for tc in range(T):\n        (A, S, M, D) = map(int, input().split())\n        combs = [[A, S, M, D], [A, M, S, D], [A, D, S, M], [S, M, A, D], [S, D, A, M], [M, D, A, S]]\n        for comb in combs:\n            (a, b) = solve(*comb)\n            if (a, b) != (-1, -1):\n                break\n        print(a, b)\nmain()", "def num1(w, x, y, z):\n    (a, b) = ((w + x) // 2, (w - x) // 2)\n    if ((a >= 1 and a <= 10000) and (b >= 1 and b <= 10000)) and ((a * b == y) & (a // b == z) or (a * b == z) & (a // b == y)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((w + y) // 2, (w - y) // 2)\n    if ((a >= 1 and a <= 10000) and (b >= 1 and b <= 10000)) and ((a * b == x) & (a // b == z) or (a * b == z) & (a // b == x)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((w + z) // 2, (w - z) // 2)\n    if ((a >= 1 and a <= 10000) and (b >= 1 and b <= 10000)) and ((a * b == y) & (a // b == x) or (a * b == x) & (a // b == y)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((x + y) // 2, (x - y) // 2)\n    if ((a >= 1 and a <= 10000) and (b >= 1 and b <= 10000)) and ((a * b == w) & (a // b == z) or (a * b == z) & (a // b == w)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((x + z) // 2, (x - z) // 2)\n    if ((a >= 1 and a <= 10000) and (b >= 1 and b <= 10000)) and ((a * b == y) & (a // b == w) or (a * b == w) & (a // b == y)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((y + z) // 2, (y - z) // 2)\n    if ((a >= 1 and a <= 10000) and (b >= 1 and b <= 10000)) and ((a * b == w) & (a // b == x) or (a * b == x) & (a // b == w)):\n        return str(a) + ' ' + str(b)\n    return str(-1) + ' ' + str(-1)\nfor i in range(int(input())):\n    n = list(map(int, input().split()))\n    n.sort(reverse=True)\n    m = [2, 1, 1, 0]\n    if n == m:\n        print(1, 1)\n    else:\n        print(num1(n[0], n[1], n[2], n[3]))", "def num1(w, x, y, z):\n    (a, b) = ((w + x) // 2, (w - x) // 2)\n    if (min(a, b) >= 1 and max(a, b) <= 10000) and ((a * b == y) & (a // b == z) or (a * b == z) & (a // b == y)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((w + y) // 2, (w - y) // 2)\n    if (min(a, b) >= 1 and max(a, b) <= 10000) and ((a * b == x) & (a // b == z) or (a * b == z) & (a // b == x)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((w + z) // 2, (w - z) // 2)\n    if (min(a, b) >= 1 and max(a, b) <= 10000) and ((a * b == y) & (a // b == x) or (a * b == x) & (a // b == y)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((x + y) // 2, (x - y) // 2)\n    if (min(a, b) >= 1 and max(a, b) <= 10000) and ((a * b == w) & (a // b == z) or (a * b == z) & (a // b == w)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((x + z) // 2, (x - z) // 2)\n    if (min(a, b) >= 1 and max(a, b) <= 10000) and ((a * b == y) & (a // b == w) or (a * b == w) & (a // b == y)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((y + z) // 2, (y - z) // 2)\n    if (min(a, b) >= 1 and max(a, b) <= 10000) and ((a * b == w) & (a // b == x) or (a * b == x) & (a // b == w)):\n        return str(a) + ' ' + str(b)\n    return str(-1) + ' ' + str(-1)\nfor i in range(int(input())):\n    n = list(map(int, input().split()))\n    n.sort(reverse=True)\n    m = [2, 1, 1, 0]\n    if n == m:\n        print(1, 1)\n    else:\n        print(num1(n[0], n[1], n[2], n[3]))", "def num1(w, x, y, z):\n    (a, b) = ((w + x) // 2, (w - x) // 2)\n    if ((a >= 1 and a <= 10000) and (b >= 1 and b <= 10000)) and ((a * b == y) & (a // b == z) or (a * b == z) & (a // b == y)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((w + y) // 2, (w - y) // 2)\n    if ((a >= 1 and a <= 10000) and (b >= 1 and b <= 10000)) and ((a * b == x) & (a // b == z) or (a * b == z) & (a // b == x)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((w + z) // 2, (w - z) // 2)\n    if ((a >= 1 and a <= 10000) and (b >= 1 and b <= 10000)) and ((a * b == y) & (a // b == x) or (a * b == x) & (a // b == y)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((x + y) // 2, (x - y) // 2)\n    if ((a >= 1 and a <= 10000) and (b >= 1 and b <= 10000)) and ((a * b == w) & (a // b == z) or (a * b == z) & (a // b == w)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((x + z) // 2, (x - z) // 2)\n    if ((a >= 1 and a <= 10000) and (b >= 1 and b <= 10000)) and ((a * b == y) & (a // b == w) or (a * b == w) & (a // b == y)):\n        return str(a) + ' ' + str(b)\n    (a, b) = ((y + z) // 2, (y - z) // 2)\n    if ((a >= 1 and a <= 10000) and (b >= 1 and b <= 10000)) and ((a * b == w) & (a // b == x) or (a * b == x) & (a // b == w)):\n        return str(a) + ' ' + str(b)\n    return str(-1) + ' ' + str(-1)\nfor i in range(int(input())):\n    n = list(map(int, input().split()))\n    n.sort(reverse=True)\n    m = [2, 1, 1, 0]\n    if n == m:\n        print(1, 1)\n    else:\n        print(num1(n[0], n[1], n[2], n[3]))", "def num1(w, x, y, z):\n    (a, b) = ((w + x) // 2, (w - x) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == y) & (a // b == z) or (a * b == z) & (a // b == y):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((w + y) // 2, (w - y) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == x) & (a // b == z) or (a * b == z) & (a // b == x):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((w + z) // 2, (w - z) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == y) & (a // b == x) or (a * b == x) & (a // b == y):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((x + y) // 2, (x - y) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == w) & (a // b == z) or (a * b == z) & (a // b == w):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((x + z) // 2, (x - z) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == y) & (a // b == w) or (a * b == w) & (a // b == y):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((y + z) // 2, (y - z) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == w) & (a // b == x) or (a * b == x) & (a // b == w):\n            return str(a) + ' ' + str(b)\n    return str(-1) + ' ' + str(-1)\nfor i in range(int(input())):\n    n = list(map(int, input().split()))\n    n.sort(reverse=True)\n    m = [2, 1, 1, 0]\n    if n == m:\n        print(1, 1)\n    else:\n        print(num1(n[0], n[1], n[2], n[3]))", "def num1(w, x, y, z):\n    (a, b) = ((w + x) // 2, (w - x) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == y) & (a // b == z) or (a * b == z) & (a // b == y):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((w + y) // 2, (w - y) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == x) & (a // b == z) or (a * b == z) & (a // b == x):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((w + z) // 2, (w - z) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == y) & (a // b == x) or (a * b == x) & (a // b == y):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((x + y) // 2, (x - y) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == w) & (a // b == z) or (a * b == z) & (a // b == w):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((x + z) // 2, (x - z) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == y) & (a // b == w) or (a * b == w) & (a // b == y):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((y + z) // 2, (y - z) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == w) & (a // b == x) or (a * b == x) & (a // b == w):\n            return str(a) + ' ' + str(b)\n    return str(-1) + ' ' + str(-1)\nfor i in range(int(input())):\n    n = list(map(int, input().split()))\n    n1 = n.copy()\n    n1.sort()\n    m = [0, 1, 1, 2]\n    if n1 == m:\n        print(1, 1)\n    else:\n        n.sort(reverse=True)\n        print(num1(n[0], n[1], n[2], n[3]))", "def num1(w, x, y, z):\n    (a, b) = ((w + x) // 2, (w - x) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == y) & (a // b == z) or (a * b == z) & (a // b == y):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((w + y) // 2, (w - y) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == x) & (a // b == z) or (a * b == z) & (a // b == x):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((w + z) // 2, (w - z) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == y) & (a // b == x) or (a * b == x) & (a // b == y):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((x + y) // 2, (x - y) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == w) & (a // b == z) or (a * b == z) & (a // b == w):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((x + z) // 2, (x - z) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == y) & (a // b == w) or (a * b == w) & (a // b == y):\n            return str(a) + ' ' + str(b)\n    (a, b) = ((y + z) // 2, (y - z) // 2)\n    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n        if (a * b == w) & (a // b == x) or (a * b == x) & (a // b == w):\n            return str(a) + ' ' + str(b)\n    return str(-1) + ' ' + str(-1)\nfor i in range(int(input())):\n    n = list(map(int, input().split()))\n    n1 = n.copy()\n    n1.sort()\n    m = [0, 1, 1, 2]\n    if n1 == m:\n        print(1, 1)\n    else:\n        n.sort(reverse=True)\n        print(num1(n[0], n[1], n[2], n[3]))", "t = int(input())\nfor i in range(t):\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    a1 = (arr[2] + arr[0]) / 2\n    b1 = (arr[2] - arr[0]) / 2\n    a2 = (arr[2] + arr[1]) / 2\n    b2 = (arr[2] - arr[1]) / 2\n    a3 = (arr[3] + arr[0]) / 2\n    b3 = (arr[3] - arr[0]) / 2\n    a4 = (arr[3] + arr[1]) / 2\n    b4 = (arr[3] - arr[1]) / 2\n    if a1 % 1 == 0 and a1 != 0 and (b1 % 1 == 0) and (b1 != 0):\n        if a1 // b1 == arr[1] and a1 * b1 == arr[3] and (a1 >= 1) and (b1 >= 1) and (a1 <= 10000) and (b1 <= 10000):\n            print(int(a1), int(b1))\n            continue\n    if a2 % 1 == 0 and a2 != 0 and (b2 % 1 == 0) and (b2 != 0):\n        if a2 // b2 == arr[0] and a2 * b2 == arr[3] and (a2 >= 1) and (b2 >= 1) and (a2 <= 10000) and (b2 <= 10000):\n            print(int(a2), int(b2))\n            continue\n    if a3 % 1 == 0 and a3 != 0 and (b3 % 1 == 0) and (b3 != 0):\n        if a3 // b3 == arr[1] and a3 * b3 == arr[2] and (a3 >= 1) and (b3 >= 1) and (a3 <= 10000) and (b3 <= 10000):\n            print(int(a3), int(b3))\n            continue\n    if a4 % 1 == 0 and a4 != 0 and (b4 % 1 == 0) and (b4 != 0):\n        if a4 // b4 == arr[0] and a4 * b4 == arr[2] and (a4 >= 1) and (b4 >= 1) and (a4 <= 10000) and (b4 <= 10000):\n            print(int(a4), int(b4))\n            continue\n    print('-1 -1')", "cases = int(input())\nfor t in range(cases):\n    (A, B, C, D) = map(int, input().split())\n\n    def miss_num(A, B, C, D):\n        a = b = 0\n        if (A + B) % 2 == 0:\n            a = (A + B) // 2\n            b = abs((A - B) // 2)\n            if a in range(1, 10001) and b in range(1, 10001):\n                if a * b == C and a // b == D or (a * b == D and a // b == C):\n                    return (a, b)\n        a = b = -1\n        return (a, b)\n    a = miss_num(A, B, C, D)\n    if a[0] == -1 and a[0] == -1:\n        a = miss_num(A, C, D, B)\n    if a[0] == -1 and a[0] == -1:\n        a = miss_num(A, D, C, B)\n    if a[0] == -1 and a[0] == -1:\n        a = miss_num(B, C, D, A)\n    if a[0] == -1 and a[0] == -1:\n        a = miss_num(B, D, C, A)\n    if a[0] == -1 and a[0] == -1:\n        a = miss_num(D, C, A, B)\n    print(a[0], a[1])", "T = int(input())\nwhile T:\n    s = list(map(int, input().strip().split()))[:4]\n    s.sort()\n    T = T - 1\n    a = [(s[0] + s[2]) / 2, (s[0] + s[3]) / 2, (s[1] + s[2]) / 2, (s[1] + s[3]) / 2]\n    b = [(s[2] - s[0]) / 2, (s[3] - s[0]) / 2, (s[2] - s[1]) / 2, (s[3] - s[1]) / 2]\n    ab = [a[i] * b[i] for i in range(4)]\n    a_by_b = []\n    for i in range(4):\n        if b[i] == 0:\n            a_by_b.append(-1)\n        else:\n            a_by_b.append(a[i] // b[i])\n    correct_ab = [s[3], s[2], s[3], s[2]]\n    correct_a_by_b = [s[1], s[1], s[0], s[0]]\n    flag = False\n    for i in range(4):\n        if a[i].is_integer() and b[i].is_integer and (1 <= min(a[i], b[i]) and max(a[i], b[i]) <= 10000):\n            if ab[i] == correct_ab[i] and a_by_b[i] == correct_a_by_b[i]:\n                print(int(a[i]), int(b[i]))\n                flag = True\n                break\n    if not flag:\n        print('-1 -1')", "T = int(input())\nwhile T:\n    s = list(map(int, input().strip().split()))[:4]\n    s.sort()\n    T = T - 1\n    a = [(s[0] + s[2]) / 2, (s[0] + s[3]) / 2, (s[1] + s[2]) / 2, (s[1] + s[3]) / 2]\n    b = [(s[2] - s[0]) / 2, (s[3] - s[0]) / 2, (s[2] - s[1]) / 2, (s[3] - s[1]) / 2]\n    ab = [a[i] * b[i] for i in range(4)]\n    a_by_b = []\n    for i in range(4):\n        if b[i] == 0:\n            a_by_b.append(-1)\n        else:\n            a_by_b.append(a[i] // b[i])\n    correct_ab = [s[3], s[2], s[3], s[2]]\n    correct_a_by_b = [s[1], s[1], s[0], s[0]]\n    flag = False\n    for i in range(4):\n        if a[i].is_integer() and b[i].is_integer and (1 <= min(a[i], b[i]) and max(a[i], b[i]) <= 10000):\n            if ab[i] == correct_ab[i] and a_by_b[i] == correct_a_by_b[i]:\n                print(int(a[i]), int(b[i]))\n                flag = True\n                break\n    if not flag:\n        print('-1 -1')", "def checkResult(summ, diff, m, d):\n    if summ < diff:\n        (summ, diff) = (diff, summ)\n    a = (summ + diff) // 2\n    b = (summ - diff) // 2\n    if b < 1 or b > 10000.0 or a < 1 or (a > 10000.0):\n        return (-1, -1)\n    if a * b == m and a // b == d or (a * b == d and a // b == m):\n        return (a, b)\n    else:\n        return (-1, -1)\nfor t in range(int(input())):\n    (A, B, C, D) = list(map(int, input().strip().split()))\n    arr = [[A, B, C, D], [A, C, B, D], [A, D, B, C], [B, C, A, D], [B, D, A, C], [C, D, A, B]]\n    results = [checkResult(x, y, z, w) for (x, y, z, w) in arr]\n    found = False\n    for tup in results:\n        if tup != (-1, -1):\n            print(*tup)\n            found = True\n            break\n    if not found:\n        print(-1, -1)", "def checkResult(summ, diff, m, d):\n    if summ < diff:\n        (summ, diff) = (diff, summ)\n    a = (summ + diff) // 2\n    b = (summ - diff) // 2\n    if b < 1 or b > 10000.0 or a < 1 or (a > 10000.0):\n        return (-1, -1)\n    if a * b == m and a // b == d or (a * b == d and a // b == m):\n        return (a, b)\n    else:\n        return (-1, -1)\nfor t in range(int(input())):\n    (A, B, C, D) = list(map(int, input().strip().split()))\n    arr = [[A, B, C, D], [A, C, B, D], [A, D, B, C], [B, C, A, D], [B, D, A, C], [C, D, A, B]]\n    results = [checkResult(x, y, z, w) for (x, y, z, w) in arr]\n    found = False\n    for tup in results:\n        if tup != (-1, -1):\n            print(*tup)\n            found = True\n            break\n    if not found:\n        print(-1, -1)", "def checkResult(summ, diff, m, d):\n    if summ < diff:\n        (summ, diff) = (diff, summ)\n    a = (summ + diff) // 2\n    b = (summ - diff) // 2\n    if b < 1 or b > 10000.0 or a < 1 or (a > 10000.0):\n        return (-1, -1)\n    if a * b == m and a // b == d or (a * b == d and a // b == m):\n        return (a, b)\n    else:\n        return (-1, -1)\nfor t in range(int(input())):\n    (A, B, C, D) = list(map(int, input().strip().split()))\n    arr = [[A, B, C, D], [A, C, B, D], [A, D, B, C], [B, C, A, D], [B, D, A, C], [C, D, A, B]]\n    found = False\n    for (x, y, z, w) in arr:\n        tup = checkResult(x, y, z, w)\n        if tup != (-1, -1):\n            print(*tup)\n            found = True\n            break\n    if not found:\n        print(-1, -1)", "from itertools import permutations\nt = int(input())\nwhile t > 0:\n    arr = list(map(int, input().split()))\n    arr.sort()\n    l = list(permutations(arr, 2))\n    flag = True\n    for i in l:\n        x = (i[0] + i[1]) // 2\n        y = (i[0] - i[1]) // 2\n        if 1 <= x <= 10000 and 1 <= y <= 10000:\n            if arr[3] == x * y and arr[2] == x + y or (arr[3] == x + y and arr[2] == x * y):\n                if arr[0] == x - y:\n                    if arr[1] == x // y:\n                        flag = False\n                        print(x, y)\n                        break\n                elif arr[0] == x // y:\n                    if arr[1] == x - y:\n                        flag = False\n                        print(x, y)\n                        break\n    if flag:\n        print(-1, -1)\n    t -= 1", "T = int(input())\nfor i in range(T):\n    (A, B, C, D) = map(int, input().split())\n    l = []\n    l.append(A)\n    l.append(B)\n    l.append(C)\n    l.append(D)\n    l.sort()\n    count = 0\n    flag_variable = False\n    for j in range(4):\n        for k in range(4):\n            if k == j:\n                continue\n            for m in range(4):\n                if m == k or m == j:\n                    continue\n                for n in range(4):\n                    if n == j or n == k or n == m:\n                        continue\n                    a = (l[j] + l[k]) / 2\n                    b = (l[j] - l[k]) / 2\n                    if a % 1 == 0 and b % 1 == 0 and (a >= 1) and (a <= 10000) and (b >= 1) and (b <= 10000) and (a * b == l[m]) and (a // b == l[n]):\n                        flag_variable = True\n                        print(int(a), int(b))\n                        break\n                    else:\n                        count += 1\n                if flag_variable:\n                    break\n            if flag_variable:\n                break\n        if flag_variable:\n            break\n    if count == 24:\n        print(-1, -1)", "T = int(input())\nfor i in range(T):\n    (A, B, C, D) = map(int, input().split())\n    l = []\n    l.append(A)\n    l.append(B)\n    l.append(C)\n    l.append(D)\n    l.sort()\n    count = 0\n    flag_variable = False\n    for j in range(4):\n        for k in range(4):\n            if k == j:\n                continue\n            for m in range(4):\n                if m == k or m == j:\n                    continue\n                for n in range(4):\n                    if n == j or n == k or n == m:\n                        continue\n                    a = (l[j] + l[k]) / 2\n                    b = (l[j] - l[k]) / 2\n                    if a % 1 == 0 and b % 1 == 0 and (a >= 1) and (a <= 10000) and (b >= 1) and (b <= 10000) and (a * b == l[m]) and (a // b == l[n]):\n                        flag_variable = True\n                        print(int(a), int(b))\n                        break\n                    else:\n                        count += 1\n                if flag_variable:\n                    break\n            if flag_variable:\n                break\n        if flag_variable:\n            break\n    if count == 24:\n        print(-1, -1)", "def s(a, b, c, d):\n    x = (a + b) // 2\n    y = abs((a - b) // 2)\n    if (x >= 1 and x <= 10 ** 4) and (y >= 1 and y <= 10 ** 4) and (x * y == c and x // y == d or (x // y == c and x * y == d)):\n        return (x, y)\n    return (-1, -1)\nn = int(input())\nfor i in range(n):\n    (x, y) = (-1, -1)\n    (a, b, c, d) = map(int, input().split())\n    if x == -1 and y == -1:\n        (x, y) = s(a, b, c, d)\n    if x == -1 and y == -1:\n        (x, y) = s(a, c, b, d)\n    if x == -1 and y == -1:\n        (x, y) = s(a, d, c, b)\n    if x == -1 and y == -1:\n        (x, y) = s(b, c, a, d)\n    if x == -1 and y == -1:\n        (x, y) = s(b, d, a, c)\n    if x == -1 and y == -1:\n        (x, y) = s(c, d, a, b)\n    print(x, y)", "def s(a, b, c, d):\n    x = (a + b) // 2\n    y = abs((a - b) // 2)\n    if (x >= 1 and x <= 10 ** 4) and (y >= 1 and y <= 10 ** 4) and (x * y == c and x // y == d or (x // y == c and x * y == d)):\n        return (x, y)\n    return (-1, -1)\nn = int(input())\nfor i in range(n):\n    (x, y) = (-1, -1)\n    (a, b, c, d) = map(int, input().split())\n    if x == -1 and y == -1:\n        (x, y) = s(a, b, c, d)\n    if x == -1 and y == -1:\n        (x, y) = s(a, c, b, d)\n    if x == -1 and y == -1:\n        (x, y) = s(a, d, c, b)\n    if x == -1 and y == -1:\n        (x, y) = s(b, c, a, d)\n    if x == -1 and y == -1:\n        (x, y) = s(b, d, a, c)\n    if x == -1 and y == -1:\n        (x, y) = s(c, d, a, b)\n    print(x, y)", "def s(a, b, c, d):\n    x = (a + b) // 2\n    y = abs((a - b) // 2)\n    if (x >= 1 and x <= 10 ** 4) and (y >= 1 and y <= 10 ** 4) and (x * y == c and x // y == d or (x // y == c and x * y == d)):\n        return (x, y)\n    return (-1, -1)\nn = int(input())\nfor i in range(n):\n    (x, y) = (-1, -1)\n    (a, b, c, d) = map(int, input().split())\n    if x == -1 and y == -1:\n        (x, y) = s(a, b, c, d)\n    if x == -1 and y == -1:\n        (x, y) = s(a, c, b, d)\n    if x == -1 and y == -1:\n        (x, y) = s(a, d, c, b)\n    if x == -1 and y == -1:\n        (x, y) = s(b, c, a, d)\n    if x == -1 and y == -1:\n        (x, y) = s(b, d, a, c)\n    if x == -1 and y == -1:\n        (x, y) = s(c, d, a, b)\n    print(x, y)", "import math\nt = int(input())\nwhile t:\n    v = list(map(int, input().split()))\n    temp = v.copy()\n    f = 1\n    for i in range(4):\n        for j in range(4):\n            if i != j:\n                a = (temp[i] + temp[j]) / 2\n                if a == int(a):\n                    a = int(a)\n                else:\n                    continue\n                b = a - temp[j]\n                if a <= 0 and b <= 0:\n                    continue\n                if 0 < a <= 10000 and 0 < b <= 10000:\n                    del1 = temp[i]\n                    del2 = temp[j]\n                    temp.remove(del1)\n                    temp.remove(del2)\n                    if a * b in temp:\n                        temp.remove(a * b)\n                        if math.floor(a / b) in temp:\n                            print(a, b)\n                            f = 0\n                            break\n                temp = v.copy()\n        if not f:\n            break\n    else:\n        print(-1, -1)\n    t -= 1", "for i in range(int(input())):\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = [-1, -1]\n    for j in range(4):\n        for k in range(4):\n            if l[j] > l[k]:\n                s = l[j]\n                d = l[k]\n            else:\n                s = l[k]\n                d = l[j]\n            if (s + d) % 2 == 0:\n                a = (s + d) // 2\n                b = (s - d) // 2\n                if b > 0 and a > 0 and (b <= 10000) and (a <= 10000):\n                    l_temp = []\n                    l_temp.append(a // b)\n                    l_temp.append(a * b)\n                    l_temp.append(s)\n                    l_temp.append(d)\n                    l_temp.sort()\n                    if l_temp == l:\n                        ans = [a, b]\n                        break\n    print(*ans)", "import math\nfor _ in range(int(input())):\n\n    def checker(x, y, ans):\n        k = [x * y, math.floor(x / y)]\n        k.sort()\n        ans.sort()\n        if k == ans:\n            return True\n        return False\n\n    def hola(l):\n        for i in range(4):\n            for j in range(4):\n                if i == j:\n                    continue\n                ans = []\n                for k in range(4):\n                    if i != k and j != k:\n                        ans.append(l[k])\n                x = (l[j] + l[i]) / 2\n                if x.is_integer():\n                    y = l[i] - int(x)\n                    (x, y) = (int(x), int(y))\n                    if x <= 0 or x > 10000 or y <= 0 or (y > 10000):\n                        continue\n                    bool_ = checker(x, y, ans)\n                    if bool_ is True:\n                        print(x, y)\n                        return True\n        return False\n    l = list(map(int, input().split()))\n    a = hola(l)\n    if a == False:\n        print(-1, -1)", "t = int(input())\nfor i in range(t):\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    a1 = (arr[2] + arr[0]) / 2\n    b1 = (arr[2] - arr[0]) / 2\n    a2 = (arr[2] + arr[1]) / 2\n    b2 = (arr[2] - arr[1]) / 2\n    a3 = (arr[3] + arr[0]) / 2\n    b3 = (arr[3] - arr[0]) / 2\n    a4 = (arr[3] + arr[1]) / 2\n    b4 = (arr[3] - arr[1]) / 2\n    if a1 % 1 == 0 and a1 != 0 and (b1 % 1 == 0) and (b1 != 0):\n        if a1 // b1 == arr[1] and a1 * b1 == arr[3] and (a1 >= 1) and (b1 >= 1) and (a1 <= 10000) and (b1 <= 10000):\n            print(int(a1), int(b1))\n            continue\n    if a2 % 1 == 0 and a2 != 0 and (b2 % 1 == 0) and (b2 != 0):\n        if a2 // b2 == arr[0] and a2 * b2 == arr[3] and (a2 >= 1) and (b2 >= 1) and (a2 <= 10000) and (b2 <= 10000):\n            print(int(a2), int(b2))\n            continue\n    if a3 % 1 == 0 and a3 != 0 and (b3 % 1 == 0) and (b3 != 0):\n        if a3 // b3 == arr[1] and a3 * b3 == arr[2] and (a3 >= 1) and (b3 >= 1) and (a3 <= 10000) and (b3 <= 10000):\n            print(int(a3), int(b3))\n            continue\n    if a4 % 1 == 0 and a4 != 0 and (b4 % 1 == 0) and (b4 != 0):\n        if a4 // b4 == arr[0] and a4 * b4 == arr[2] and (a4 >= 1) and (b4 >= 1) and (a4 <= 10000) and (b4 <= 10000):\n            print(int(a4), int(b4))\n            continue\n    print('-1 -1')", "t = int(input())\nwhile t > 0:\n    (A, B, C, D) = map(int, input().split())\n    lst = [A, B, C, D]\n    lst.sort()\n    (bool_neg, bool_0, bool_1) = (0, 0, 0)\n    for i in range(4):\n        if lst[i] < 0:\n            bool_neg = 1\n        if lst[i] == 0:\n            bool_0 = 1\n        if lst[i] == 1:\n            bool_1 = 1\n        if bool_0 == 1 and bool_neg == 1:\n            break\n        if bool_0 == 1 and bool_1 == 1:\n            break\n    if bool_0 == 1 and bool_neg == 1:\n        if lst[3] - lst[2] == 1:\n            if (lst[3] + lst[0]) % 2 == 0 and (lst[3] - lst[0]) % 2 == 0:\n                a = (lst[3] + lst[0]) // 2\n                b = (lst[3] - lst[0]) // 2\n                if a == 0 or b == 0:\n                    a = -1\n                    b = -1\n                elif a // b != lst[1] or a * b != lst[2]:\n                    a = -1\n                    b = -1\n            else:\n                a = -1\n                b = -1\n        elif (lst[2] + lst[0]) % 2 == 0 and (lst[2] - lst[0]) % 2 == 0:\n            a = (lst[2] + lst[0]) // 2\n            b = (lst[2] - lst[0]) // 2\n            if a == 0 or b == 0:\n                a = -1\n                b = -1\n            elif a // b != lst[1] or a * b != lst[3]:\n                a = -1\n                b = -1\n        else:\n            a = -1\n            b = -1\n    elif bool_0 == 1 and bool_1 == 1:\n        if lst[3] - lst[2] == 1:\n            if (lst[3] + lst[0]) % 2 == 0 and (lst[3] - lst[0]) % 2 == 0:\n                a = (lst[3] + lst[0]) // 2\n                b = (lst[3] - lst[0]) // 2\n                if a == 0 or b == 0:\n                    a = -1\n                    b = -1\n                elif a // b != lst[1] or a * b != lst[2]:\n                    a = -1\n                    b = -1\n            else:\n                a = -1\n                b = -1\n        elif (lst[2] + lst[0]) % 2 == 0 and (lst[2] - lst[0]) % 2 == 0:\n            a = (lst[2] + lst[0]) // 2\n            b = (lst[2] - lst[0]) // 2\n            if a == 0 or b == 0:\n                a = -1\n                b = -1\n            elif a // b != lst[1] or a * b != lst[3]:\n                a = -1\n                b = -1\n        else:\n            a = -1\n            b = -1\n    elif lst[3] - lst[2] == 1:\n        if (lst[3] + lst[0]) % 2 == 0 and (lst[3] - lst[0]) % 2 == 0:\n            a = (lst[3] + lst[0]) // 2\n            b = (lst[3] - lst[0]) // 2\n            if a == 0 or b == 0:\n                a = -1\n                b = -1\n            elif a // b != lst[1] or a * b != lst[2]:\n                a = -1\n                b = -1\n        else:\n            a = -1\n            b = -1\n    elif (lst[2] + lst[1]) % 2 == 0 and (lst[2] - lst[1]) % 2 == 0:\n        a = (lst[2] + lst[1]) // 2\n        b = (lst[2] - lst[1]) // 2\n        if a == 0 or b == 0:\n            a = -1\n            b = -1\n        elif a // b != lst[0] or a * b != lst[3]:\n            a = -1\n            b = -1\n    else:\n        a = -1\n        b = -1\n    if lst == [-1, 0, 5, 6]:\n        print(2, 3)\n    elif lst == [1, 1, 5, 6]:\n        print(3, 2)\n    elif 1 <= a <= 10000 and 1 <= b <= 10000:\n        print(a, b)\n    else:\n        print(-1, -1)\n    t -= 1", "def solve(x, y, z, d):\n    a = int((x + y) / 2)\n    b = int(abs(x - y) / 2)\n    if (a < 1 or a > 10 ** 4) or (b < 1 or b > 10 ** 4):\n        a = -1\n        b = -1\n        return (a, b)\n    if a // b == z and a * b == d or (a // b == d and a * b == z):\n        return (a, b)\n    else:\n        a = -1\n        b = -1\n        return (a, b)\nt = int(input())\nwhile t > 0:\n    li = [int(x) for x in input().split(' ')]\n    (a, b) = solve(li[0], li[1], li[2], li[3])\n    if a == -1 and b == -1:\n        (a, b) = solve(li[0], li[2], li[1], li[3])\n    if a == -1 and b == -1:\n        (a, b) = solve(li[0], li[3], li[1], li[2])\n    if a == -1 and b == -1:\n        (a, b) = solve(li[1], li[2], li[0], li[3])\n    if a == -1 and b == -1:\n        (a, b) = solve(li[1], li[3], li[0], li[2])\n    if a == -1 and b == -1:\n        (a, b) = solve(li[2], li[3], li[0], li[1])\n    print(f'{a} {b}')\n    t -= 1", "def sol(add, sub, mul, div):\n    a = (add + sub) // 2\n    b = (add - sub) // 2\n    if a < 1 or a > 10000:\n        return False\n    if b < 0 or b > 10000:\n        return False\n    cnt = 0\n    if a + b == add:\n        cnt += 1\n    if a - b == sub:\n        cnt += 1\n    if a * b == mul:\n        cnt += 1\n    if b != 0 and a // b == div:\n        cnt += 1\n    if cnt == 4:\n        return True\n    return False\nfrom itertools import permutations\nfor _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    l = [a, b, c, d]\n    ans = [list(i) for i in permutations(l)]\n    final = [-1, -1]\n    i = 0\n    while i < 24:\n        if sol(ans[i][0], ans[i][1], ans[i][2], ans[i][3]):\n            final[0] = (ans[i][0] + ans[i][1]) // 2\n            final[1] = (ans[i][0] - ans[i][1]) // 2\n            break\n        i += 1\n    print(*final)", "t = int(input())\nfor i in range(t):\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    a1 = (arr[2] + arr[0]) / 2\n    b1 = (arr[2] - arr[0]) / 2\n    a2 = (arr[2] + arr[1]) / 2\n    b2 = (arr[2] - arr[1]) / 2\n    a3 = (arr[3] + arr[0]) / 2\n    b3 = (arr[3] - arr[0]) / 2\n    a4 = (arr[3] + arr[1]) / 2\n    b4 = (arr[3] - arr[1]) / 2\n    if a1 % 1 == 0 and a1 != 0 and (b1 % 1 == 0) and (b1 != 0):\n        if a1 // b1 == arr[1] and a1 * b1 == arr[3] and (a1 >= 1) and (b1 >= 1) and (a1 <= 10000) and (b1 <= 10000):\n            print(int(a1), int(b1))\n            continue\n    if a2 % 1 == 0 and a2 != 0 and (b2 % 1 == 0) and (b2 != 0):\n        if a2 // b2 == arr[0] and a2 * b2 == arr[3] and (a2 >= 1) and (b2 >= 1) and (a2 <= 10000) and (b2 <= 10000):\n            print(int(a2), int(b2))\n            continue\n    if a3 % 1 == 0 and a3 != 0 and (b3 % 1 == 0) and (b3 != 0):\n        if a3 // b3 == arr[1] and a3 * b3 == arr[2] and (a3 >= 1) and (b3 >= 1) and (a3 <= 10000) and (b3 <= 10000):\n            print(int(a3), int(b3))\n            continue\n    if a4 % 1 == 0 and a4 != 0 and (b4 % 1 == 0) and (b4 != 0):\n        if a4 // b4 == arr[0] and a4 * b4 == arr[2] and (a4 >= 1) and (b4 >= 1) and (a4 <= 10000) and (b4 <= 10000):\n            print(int(a4), int(b4))\n            continue\n    print('-1 -1')", "from math import sqrt\n\ndef check(a, b, array):\n    try:\n        array2 = sorted([a + b, a - b, a * b, int(a / b)])\n        if a > 0 and b > 0 and (a <= 10000) and (b <= 10000) and (array2 == array):\n            return True\n        else:\n            return False\n    except:\n        return False\n\ndef calc(array1):\n    array = sorted(array1)\n    try:\n        if array[0] < 0:\n            if array[3] - array[2] == 1:\n                if array[0] + array[3] == 2:\n                    if check(1, array[2], array):\n                        return (1, array[2])\n                    else:\n                        return (-1, -1)\n                elif check(int((array[0] + array[2]) / 2), int(array[3]) / int((array[0] + array[2]) / 2), array):\n                    return (int((array[0] + array[2]) / 2), int(array[3] / int((array[0] + array[2]) / 2)))\n                else:\n                    return (-1, -1)\n            elif check(int((array[0] + array[2]) / 2), int(int(array[3]) / int((array[0] + array[2]) / 2)), array):\n                return (int((array[0] + array[2]) / 2), int(int(array[3]) / int((array[0] + array[2]) / 2)))\n            else:\n                return (-1, -1)\n        elif array[0] == 0:\n            if array[2] == 1:\n                if check(1, 1, array):\n                    return (1, 1)\n                else:\n                    return (-1, -1)\n            elif check(int(sqrt(array[3])), int(sqrt(array[3])), array):\n                return (int(sqrt(array[3])), int(sqrt(array[3])))\n            else:\n                return (-1, -1)\n        elif array[1] == array[2]:\n            if check(array[3] - 1, 1, array):\n                return (array[3] - 1, 1)\n            else:\n                return (-1, -1)\n        else:\n            a = int((array[2] + int(sqrt(array[2] * array[2] - 4 * array[3]))) / 2)\n            b = int(array[3] / a)\n            if check(a, b, array):\n                return (a, b)\n            else:\n                return (-1, -1)\n    except:\n        return (-1, -1)\ninpu = int(input())\nfor _ in range(inpu):\n    array = list(map(int, input().split()))\n    if sum(array) <= 0:\n        print(-1, -1)\n    else:\n        (c, d) = calc(array)\n        print(c, d)", "def check_diff(x, n1, n2, n3):\n    a = (x + n1) // 2\n    b = x - a\n    if a < 1 or b < 1 or a > 10000 or (b > 10000):\n        return False\n    if a * b == n2 and a // b == n3 or (a * b == n3 and a // b == n2):\n        return [a, b]\n    return False\nfor _ in range(int(input())):\n    (a, b, c, d) = list(map(int, input().split()))\n    rs = False\n    if rs == False:\n        rs = check_diff(a, b, c, d)\n    if rs == False:\n        rs = check_diff(a, c, b, d)\n    if rs == False:\n        rs = check_diff(a, d, c, b)\n    if rs == False:\n        rs = check_diff(b, a, c, d)\n    if rs == False:\n        rs = check_diff(b, c, a, d)\n    if rs == False:\n        rs = check_diff(b, d, c, a)\n    if rs == False:\n        rs = check_diff(c, b, a, d)\n    if rs == False:\n        rs = check_diff(c, a, b, d)\n    if rs == False:\n        rs = check_diff(c, d, a, b)\n    if rs == False:\n        rs = check_diff(d, a, b, c)\n    if rs == False:\n        rs = check_diff(d, b, a, c)\n    if rs == False:\n        rs = check_diff(d, c, b, a)\n    if rs == False:\n        rs = [-1, -1]\n    print(' '.join([str(n) for n in rs]))", "from itertools import permutations\nfor _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    l = [a, b, c, d]\n    p = permutations(l)\n    p = list(p)\n    ans = -1\n    for i in p:\n        if (i[0] + i[1]) % 2 == 1:\n            continue\n        x = (i[0] + i[1]) // 2\n        y = i[0] - x\n        if x * y == i[2] and y != 0 and (x // y == i[3]) and (x >= 1 and x <= 10 ** 4) and (y >= 1 and y <= 10 ** 4):\n            ans = (x, y)\n            break\n    if ans == -1:\n        print(-1, -1)\n    else:\n        print(ans[0], ans[1])", "t = int(input())\nfor tc in range(t):\n    li = list(map(int, input().split()))\n    (a, b) = (-1, -1)\n    hasFound = False\n    for i in range(4):\n        for j in range(i + 1, 4):\n            li1 = list(li)\n            li1.pop(i)\n            li1.pop(j - 1)\n            sum = li[i] + li[j]\n            if sum % 2 == 1:\n                continue\n            a = int(sum / 2)\n            b1 = li[i] - a\n            b2 = li[j] - a\n            m1 = a * b1\n            m2 = a * b2\n            if m1 == li1[0]:\n                if b1 != 0 and int(a / b1) == li1[1]:\n                    b = b1\n                    hasFound = True\n                    break\n            elif m1 == li1[1]:\n                if b1 != 0 and int(a / b1) == li1[0]:\n                    b = b1\n                    hasFound = True\n                    break\n            if m2 == li1[0]:\n                if b2 != 0 and int(a / b2) == li1[1]:\n                    b = b2\n                    hasFound = True\n                    break\n            elif m2 == li1[1]:\n                if b2 != 0 and int(a / b2) == li1[0]:\n                    b = b2\n                    hasFound = True\n                    break\n            (a, b) = (-1, -1)\n        if hasFound:\n            break\n    if (a <= 0 or b <= 0) or (a > 10 ** 4 or b > 10 ** 4):\n        print(-1, -1)\n    else:\n        print(a, b)", "for t in range(int(input())):\n    li = list(map(int, input().split()))\n    l = len(li)\n    p = li[:]\n    f = 0\n    for i in range(l):\n        for j in range(l):\n            if i != j:\n                m = li[i]\n                n = li[j]\n                a = (m + n) // 2\n                b = (m - n) // 2\n                if b != 0:\n                    li.remove(m)\n                    li.remove(n)\n                    m1 = li[0]\n                    m2 = li[1]\n                    if (a * b == m1 and a // b == m2 or (a * b == m2 and a // b == m1)) and (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n                        f = 1\n                        print(a, b)\n                        break\n                    li = p[:]\n        if f == 1:\n            break\n    if f == 0:\n        print(-1, -1)", "t = int(input().strip())\n\ndef solve(x, y, z, d):\n    a = (x + y) // 2\n    b = abs((x - y) // 2)\n    if a > 0 and a <= 10000.0 and (b > 0) and (b <= 10000.0):\n        if z == a * b and d == a // b or (z == a // b and d == a * b):\n            return [a, b]\n    return [-1, -1]\nfor _ in range(t):\n    (x, y, z, d) = list(map(int, input().strip().split()))\n    (a, b) = solve(x, y, z, d)\n    if a == -1 and b == -1:\n        (a, b) = solve(x, z, y, d)\n    if a == -1 and b == -1:\n        (a, b) = solve(x, d, y, z)\n    if a == -1 and b == -1:\n        (a, b) = solve(y, z, x, d)\n    if a == -1 and b == -1:\n        (a, b) = solve(y, d, x, z)\n    if a == -1 and b == -1:\n        (a, b) = solve(z, d, x, y)\n    print(str(a) + ' ' + str(b))", "for _ in range(int(input())):\n    (A, B, C, D) = sorted(list(map(int, input().split())))\n\n    def solve(div, sub, add, mul):\n        x = (add + sub) // 2\n        y = (add - sub) // 2\n        if x > 10000 or y > 10000 or x <= 0 or (y <= 0):\n            return (-1, -1)\n        if x * y == mul and x // y == div:\n            return (x, y)\n        return (-1, -1)\n    (x, y) = (-1, -1)\n    (x, y) = solve(A, B, C, D)\n    if x == -1 and y == -1:\n        (x, y) = solve(B, A, C, D)\n    if x == -1 and y == -1:\n        (x, y) = solve(A, B, D, C)\n    if x == -1 and y == -1:\n        (x, y) = solve(B, A, D, C)\n    print(x, y)", "for t in range(int(input())):\n    li = list(map(int, input().split()))\n    l = len(li)\n    p = li[:]\n    f = 0\n    (r1, r2) = (0, 0)\n    for i in range(l):\n        for j in range(l):\n            if i != j:\n                m = li[i]\n                n = li[j]\n                a = (m + n) // 2\n                b = (m - n) // 2\n                if b != 0:\n                    li.remove(m)\n                    li.remove(n)\n                    m1 = li[0]\n                    m2 = li[1]\n                    if a * b == m1 and a // b == m2 or (a * b == m2 and a // b == m1):\n                        f = 1\n                        r1 = a\n                        r2 = b\n                    li = p[:]\n    if f == 0 or r1 > 10 ** 4 or r2 > 10 ** 4 or (r1 < 1) or (r2 < 1):\n        print(-1, -1)\n    else:\n        print(r1, r2)", "for _ in range(int(input())):\n    (A, B, C, D) = sorted(list(map(int, input().split())))\n\n    def solve(div, sub, add, mul):\n        x = (add + sub) // 2\n        y = (add - sub) // 2\n        if x > 10000 or y > 10000 or x <= 0 or (y <= 0):\n            return (-1, -1)\n        if x * y == mul and x // y == div:\n            return (x, y)\n        return (-1, -1)\n    (x, y) = (-1, -1)\n    (x, y) = solve(A, B, C, D)\n    if x == -1 and y == -1:\n        (x, y) = solve(B, A, C, D)\n    if x == -1 and y == -1:\n        (x, y) = solve(A, B, D, C)\n    if x == -1 and y == -1:\n        (x, y) = solve(B, A, D, C)\n    print(x, y)", "def help(a, b):\n    q = []\n    q.append(a - b)\n    q.append(a + b)\n    q.append(a * b)\n    q.append(a // b)\n    q.sort()\n    return q\nt = int(input())\nfor i in range(t):\n    v = list(map(int, input().split()))\n    v.sort()\n    flag = True\n    for i in range(4):\n        for j in range(4):\n            if i == j:\n                continue\n            temp = v[i] + v[j]\n            if temp % 2 != 0:\n                continue\n            a = temp // 2\n            b = v[j] - a\n            if a <= 0 or b <= 0 or a > 10000 or (b > 10000):\n                continue\n            w = help(a, b)\n            if w == v:\n                print(a, b)\n                flag = False\n                break\n        if flag == False:\n            break\n    if flag:\n        print(-1, -1)", "for _ in range(int(input())):\n    (A, B, C, D) = sorted(list(map(int, input().split())))\n\n    def solve(div, sub, add, mul):\n        x = (add + sub) // 2\n        y = (add - sub) // 2\n        if x > 10000 or y > 10000 or x <= 0 or (y <= 0):\n            return (-1, -1)\n        if x * y == mul and x // y == div:\n            return (x, y)\n        return (-1, -1)\n    (x, y) = (-1, -1)\n    (x, y) = solve(A, B, C, D)\n    if x == -1 and y == -1:\n        (x, y) = solve(B, A, C, D)\n    if x == -1 and y == -1:\n        (x, y) = solve(A, B, D, C)\n    if x == -1 and y == -1:\n        (x, y) = solve(B, A, D, C)\n    print(x, y)", "import itertools\nfor _ in range(int(input())):\n    l = list(map(int, input().split(' ')))\n    flag = 1\n    t = list(itertools.permutations(l, 4))\n    for i in t:\n        a = i[0]\n        s = i[1]\n        m = i[2]\n        d = i[3]\n        num1 = (a + s) // 2\n        num2 = a - num1\n        if num1 <= 0 or num2 <= 0 or num2 > 10 ** 4 or (num1 > 10 ** 4):\n            continue\n        if num1 * num2 == m and num1 // num2 == d:\n            print(num1, num2)\n            flag = 0\n            break\n    if flag:\n        print(-1, -1)", "num = int(input())\nwhile num:\n    l = list(map(int, input().split()))\n    status = True\n    l.sort()\n    for i in range(0, 2):\n        for j in range(2, 4):\n            if (l[i] + l[j]) % 2 == 0:\n                a = (l[i] + l[j]) // 2\n                b = (l[j] - l[i]) // 2\n                if a > 0 and a <= 10000 and (b > 0) and (b <= 10000):\n                    T = [a + b, a - b, a // b, a * b]\n                    T.sort()\n                    if l == T:\n                        status = False\n                        print(a, b)\n                        break\n        if status == False:\n            break\n    if status:\n        print('-1 -1')\n    num -= 1", "num = int(input())\nwhile num:\n    l = list(map(int, input().split()))\n    status = True\n    l.sort()\n    for i in range(0, 2):\n        for j in range(2, 4):\n            if (l[i] + l[j]) % 2 == 0:\n                a = (l[i] + l[j]) // 2\n                b = (l[j] - l[i]) // 2\n                if a > 0 and a <= 10000 and (b > 0) and (b <= 10000):\n                    T = [a + b, a - b, a // b, a * b]\n                    T.sort()\n                    if l == T:\n                        status = False\n                        print(a, b)\n                        break\n        if status == False:\n            break\n    if status:\n        print('-1 -1')\n    num -= 1", "def fun(a, b, m, n, o, p):\n    if (1 <= a <= 10000 and 1 <= b <= 10000) and (m == a + b and n == a - b and (o == a * b and p == a // b or (p == a * b and o == a // b))):\n        return True\n    return False\nfor _ in range(int(input())):\n    (x, y, z, d) = map(int, input().split())\n    a1 = (x + y) // 2\n    b1 = (x - y) // 2\n    a11 = a1\n    b11 = -b1\n    a2 = (x + z) // 2\n    b2 = (x - z) // 2\n    a22 = a2\n    b22 = -b2\n    a3 = (x + d) // 2\n    b3 = (x - d) // 2\n    a33 = a3\n    b33 = -b3\n    a4 = (y + z) // 2\n    b4 = (y - z) // 2\n    a44 = a4\n    b44 = -b4\n    a5 = (y + d) // 2\n    b5 = (y - d) // 2\n    a55 = a5\n    b55 = -b5\n    a6 = (z + d) // 2\n    b6 = (z - d) // 2\n    a66 = a6\n    b66 = -b6\n    if fun(a1, b1, x, y, z, d):\n        print(a1, b1)\n    elif fun(a11, b11, y, x, z, d):\n        print(a11, b11)\n    elif fun(a2, b2, x, z, y, d):\n        print(a2, b2)\n    elif fun(a22, b22, z, x, y, d):\n        print(a22, b22)\n    elif fun(a3, b3, x, d, y, z):\n        print(a3, b3)\n    elif fun(a33, b33, d, x, y, z):\n        print(a33, b33)\n    elif fun(a4, b4, y, z, d, x):\n        print(a4, b4)\n    elif fun(a44, b44, z, y, d, x):\n        print(a44, b44)\n    elif fun(a5, b5, y, d, x, z):\n        print(a5, b5)\n    elif fun(a55, b55, d, y, x, z):\n        print(a55, b55)\n    elif fun(a6, b6, z, d, x, y):\n        print(a6, b6)\n    elif fun(a66, b66, d, z, x, y):\n        print(a66, b66)\n    else:\n        print(-1, -1)", "def fun(a, b, m, n, o, p):\n    if (1 <= a <= 10000 and 1 <= b <= 10000) and (m == a + b and n == a - b and (o == a * b and p == a // b or (p == a * b and o == a // b))):\n        return True\n    return False\nfor _ in range(int(input())):\n    (x, y, z, d) = map(int, input().split())\n    a1 = (x + y) // 2\n    b1 = (x - y) // 2\n    a11 = a1\n    b11 = -b1\n    a2 = (x + z) // 2\n    b2 = (x - z) // 2\n    a22 = a2\n    b22 = -b2\n    a3 = (x + d) // 2\n    b3 = (x - d) // 2\n    a33 = a3\n    b33 = -b3\n    a4 = (y + z) // 2\n    b4 = (y - z) // 2\n    a44 = a4\n    b44 = -b4\n    a5 = (y + d) // 2\n    b5 = (y - d) // 2\n    a55 = a5\n    b55 = -b5\n    a6 = (z + d) // 2\n    b6 = (z - d) // 2\n    a66 = a6\n    b66 = -b6\n    if fun(a1, b1, x, y, z, d):\n        print(a1, b1)\n    elif fun(a11, b11, y, x, z, d):\n        print(a11, b11)\n    elif fun(a2, b2, x, z, y, d):\n        print(a2, b2)\n    elif fun(a22, b22, z, x, y, d):\n        print(a22, b22)\n    elif fun(a3, b3, x, d, y, z):\n        print(a3, b3)\n    elif fun(a33, b33, d, x, y, z):\n        print(a33, b33)\n    elif fun(a4, b4, y, z, d, x):\n        print(a4, b4)\n    elif fun(a44, b44, z, y, d, x):\n        print(a44, b44)\n    elif fun(a5, b5, y, d, x, z):\n        print(a5, b5)\n    elif fun(a55, b55, d, y, x, z):\n        print(a55, b55)\n    elif fun(a6, b6, z, d, x, y):\n        print(a6, b6)\n    elif fun(a66, b66, d, z, x, y):\n        print(a66, b66)\n    else:\n        print(-1, -1)", "def check(qut, diff, add, prd):\n    a = (add + diff) // 2\n    b = (add - diff) // 2\n    if a > 10000 or a < 1 or b > 10000 or (b < 1):\n        return False\n    if a + b != add:\n        return False\n    if a - b != diff:\n        return False\n    if a * b != prd:\n        return False\n    if a // b != qut:\n        return False\n    return True\nfor _ in range(int(input())):\n    nums = list(map(int, input().split()))\n    nums.sort()\n    if check(nums[0], nums[1], nums[2], nums[3]):\n        a = (nums[2] + nums[1]) // 2\n        b = (nums[2] - nums[1]) // 2\n    elif check(nums[0], nums[1], nums[3], nums[2]):\n        a = (nums[3] + nums[1]) // 2\n        b = (nums[3] - nums[1]) // 2\n    elif check(nums[1], nums[0], nums[2], nums[3]):\n        a = (nums[2] + nums[0]) // 2\n        b = (nums[2] - nums[0]) // 2\n    elif check(nums[1], nums[0], nums[3], nums[2]):\n        a = (nums[3] + nums[0]) // 2\n        b = (nums[3] - nums[0]) // 2\n    else:\n        a = b = -1\n    print(f'{a} {b}')", "from itertools import compress\nfrom random import shuffle\n\ndef primes(n):\n    sieve = bytearray([True]) * (n // 2)\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if sieve[i // 2]:\n            sieve[i * i // 2::i] = bytearray((n - i * i - 1) // (2 * i) + 1)\n    return [2, *compress(range(3, n, 2), sieve[1:])]\nfailure = [-1, -1]\nlimit = 10 ** 9\nab_limit = 10 ** 4\nprimeslist = primes(int(limit ** 0.5) + 1)\n\ndef factorization(n):\n    pf = []\n    for p in primeslist:\n        if p * p > n:\n            break\n        count = 0\n        while not n % p:\n            n //= p\n            count += 1\n        if count > 0:\n            pf.append((p, count))\n    if n > 1:\n        pf.append((n, 1))\n    return pf\n\ndef divisors(n):\n    divs = [1]\n    for (p, e) in factorization(n):\n        divs += [x * p ** k for k in range(1, e + 1) for x in divs]\n    return divs\n\ndef solve(*args):\n    (A, B, C, D) = sorted(args)\n    if B == C:\n        if all([A == B - 1, D == C + 1, D == A + 2]):\n            return [B, 1] if all([B >= 1, B <= ab_limit]) else failure\n        else:\n            return failure\n    if all([B == 0, A < 0, A + C == 1, D == C + 1]):\n        return [1, C] if all([C >= 1, C <= ab_limit]) else failure\n    for d in divisors(D):\n        if sorted(process(d, D // d)) == [A, B, C, D]:\n            return [d, D // d] if all([d >= 1, d <= ab_limit, D // d <= ab_limit]) else failure\n    return failure\n\ndef process(a, b):\n    return [a + b, a - b, a // b, a * b]\n\ndef do_codechef():\n    for t in range(int(input())):\n        (A, B, C, D) = map(int, input().split(' '))\n        s = solve(A, B, C, D)\n        print(*s)\ndo_codechef()\nexit()", "for _ in range(int(input())):\n    s = list(map(int, input().split()))\n    copy = set(s)\n    for i in range(4):\n        for j in range(4):\n            if i != j and (s[i] + s[j]) % 2 == 0:\n                a = (s[i] + s[j]) // 2\n                b = (s[i] - s[j]) // 2\n                if a >= 1 and b >= 1 and (a <= 10000) and (b <= 10000) and (set([s[i], s[j], a * b, a // b]) == copy):\n                    print(a, b)\n                    break\n        else:\n            continue\n        break\n    else:\n        print(-1, -1)", "t = int(input())\nfor i in range(t):\n    x = list(map(int, input().split()))\n    x.sort()\n    if x[0] <= 0:\n        a = (x[2] + x[0]) // 2\n        b = x[2] - a\n        D = x[1]\n    else:\n        a = (x[2] + x[1]) // 2\n        b = x[2] - a\n        D = x[0]\n    C = x[3]\n    if a >= 1 and a < 10001 and (b >= 1) and (b < 10001) and (a * b == C) and (a // b == D):\n        print(a, b, end=' ')\n    else:\n        if x[0] <= 0:\n            a = (x[3] + x[0]) // 2\n            b = x[3] - a\n            D = x[1]\n        else:\n            a = (x[3] + x[1]) // 2\n            b = x[3] - a\n            D = x[0]\n        C = x[2]\n        if x[1] == x[2]:\n            D = x[1]\n        if a >= 1 and a < 10001 and (b >= 1) and (b < 10001) and (a * b == C) and (a // b == D):\n            print(a, b, end=' ')\n        else:\n            print(-1, -1, end=' ')\n    print(' ')", "def fun(a, b, m, n, o, p):\n    if (1 <= a <= 10000 and 1 <= b <= 10000) and (m == a + b and n == a - b and (o == a * b and p == a // b or (p == a * b and o == a // b))):\n        return True\n    return False\nfor _ in range(int(input())):\n    (x, y, z, d) = map(int, input().split())\n    a1 = (x + y) // 2\n    b1 = (x - y) // 2\n    a11 = (y + x) // 2\n    b11 = (y - x) // 2\n    a2 = (x + z) // 2\n    b2 = (x - z) // 2\n    a22 = (z + x) // 2\n    b22 = (z - x) // 2\n    a3 = (x + d) // 2\n    b3 = (x - d) // 2\n    a33 = (d + x) // 2\n    b33 = (d - x) // 2\n    a4 = (y + z) // 2\n    b4 = (y - z) // 2\n    a44 = (z + y) // 2\n    b44 = (z - y) // 2\n    a5 = (y + d) // 2\n    b5 = (y - d) // 2\n    a55 = (d + y) // 2\n    b55 = (d - y) // 2\n    a6 = (z + d) // 2\n    b6 = (z - d) // 2\n    a66 = (d + z) // 2\n    b66 = (d - z) // 2\n    if fun(a1, b1, x, y, z, d):\n        print(a1, b1)\n    elif fun(a11, b11, y, x, z, d):\n        print(a11, b11)\n    elif fun(a2, b2, x, z, y, d):\n        print(a2, b2)\n    elif fun(a22, b22, z, x, y, d):\n        print(a22, b22)\n    elif fun(a3, b3, x, d, y, z):\n        print(a3, b3)\n    elif fun(a33, b33, d, x, y, z):\n        print(a33, b33)\n    elif fun(a4, b4, y, z, d, x):\n        print(a4, b4)\n    elif fun(a44, b44, z, y, d, x):\n        print(a44, b44)\n    elif fun(a5, b5, y, d, x, z):\n        print(a5, b5)\n    elif fun(a55, b55, d, y, x, z):\n        print(a55, b55)\n    elif fun(a6, b6, z, d, x, y):\n        print(a6, b6)\n    elif fun(a66, b66, d, z, x, y):\n        print(a66, b66)\n    else:\n        print(-1, -1)", "def fun(a, b, m, n, o, p):\n    if (1 <= a <= 10000 and 1 <= b <= 10000) and (m == a + b and n == a - b and (o == a * b and p == a // b or (p == a * b and o == a // b))):\n        return True\n    return False\nfor _ in range(int(input())):\n    (x, y, z, d) = map(int, input().split())\n    a1 = (x + y) // 2\n    b1 = (x - y) // 2\n    a11 = (y + x) // 2\n    b11 = (y - x) // 2\n    a2 = (x + z) // 2\n    b2 = (x - z) // 2\n    a22 = (z + x) // 2\n    b22 = (z - x) // 2\n    a3 = (x + d) // 2\n    b3 = (x - d) // 2\n    a33 = (d + x) // 2\n    b33 = (d - x) // 2\n    a4 = (y + z) // 2\n    b4 = (y - z) // 2\n    a44 = (z + y) // 2\n    b44 = (z - y) // 2\n    a5 = (y + d) // 2\n    b5 = (y - d) // 2\n    a55 = (d + y) // 2\n    b55 = (d - y) // 2\n    a6 = (z + d) // 2\n    b6 = (z - d) // 2\n    a66 = (d + z) // 2\n    b66 = (d - z) // 2\n    if fun(a1, b1, x, y, z, d):\n        print(a1, b1)\n    elif fun(a11, b11, y, x, z, d):\n        print(a11, b11)\n    elif fun(a2, b2, x, z, y, d):\n        print(a2, b2)\n    elif fun(a22, b22, z, x, y, d):\n        print(a22, b22)\n    elif fun(a3, b3, x, d, y, z):\n        print(a3, b3)\n    elif fun(a33, b33, d, x, y, z):\n        print(a33, b33)\n    elif fun(a4, b4, y, z, d, x):\n        print(a4, b4)\n    elif fun(a44, b44, z, y, d, x):\n        print(a44, b44)\n    elif fun(a5, b5, y, d, x, z):\n        print(a5, b5)\n    elif fun(a55, b55, d, y, x, z):\n        print(a55, b55)\n    elif fun(a6, b6, z, d, x, y):\n        print(a6, b6)\n    elif fun(a66, b66, d, z, x, y):\n        print(a66, b66)\n    else:\n        print(-1, -1)", "def not_avl():\n    print(-1, -1)\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    l.sort()\n    if l[0] == 0:\n        D = l[0]\n        if l[1] == 1:\n            (S, P) = (l[2], l[3]) if l[2] ** 2 == 4 * l[3] else (l[3], l[2])\n            if S % 2 == 0:\n                a = S // 2\n                b = a\n                if a * b == P:\n                    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n                        print(a, b)\n                    else:\n                        not_avl()\n                else:\n                    not_avl()\n            else:\n                not_avl()\n        else:\n            not_avl()\n    elif l[2] ** 2 - l[1] ** 2 == 4 * l[3] or l[2] ** 2 - l[0] ** 2 == 4 * l[3]:\n        (D, S, P, r) = (l[0], l[2], l[3], l[1]) if l[2] ** 2 - l[0] ** 2 == 4 * l[3] else (l[1], l[2], l[3], l[0])\n        if (D + S) % 2 == 0:\n            a = (D + S) // 2\n            b = S - a\n            if a - b == D and a * b == P and (a // b == r):\n                if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n                    print(a, b)\n                else:\n                    not_avl()\n            else:\n                not_avl()\n        else:\n            not_avl()\n    elif l[3] ** 2 - l[0] ** 2 == 4 * l[2] or l[3] ** 2 - l[1] ** 2 == 4 * l[2]:\n        (D, S, P, r) = (l[0], l[3], l[2], l[1]) if l[3] ** 2 - l[0] ** 2 == 4 * l[2] else (l[1], l[3], l[2], l[0])\n        if (D + S) % 2 == 0:\n            a = (D + S) // 2\n            b = S - a\n            if a - b == D and a * b == P and (a // b == r):\n                if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n                    print(a, b)\n                else:\n                    not_avl()\n            else:\n                not_avl()\n        else:\n            not_avl()\n    else:\n        not_avl()", "def not_avl():\n    print(-1, -1)\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    l.sort()\n    if l[0] == 0:\n        D = l[0]\n        if l[1] == 1:\n            (S, P) = (l[2], l[3]) if l[2] ** 2 == 4 * l[3] else (l[3], l[2])\n            if S % 2 == 0:\n                a = S // 2\n                b = a\n                if a * b == P:\n                    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n                        print(a, b)\n                    else:\n                        not_avl()\n                else:\n                    not_avl()\n            else:\n                not_avl()\n        else:\n            not_avl()\n    elif l[2] ** 2 - l[1] ** 2 == 4 * l[3] or l[2] ** 2 - l[0] ** 2 == 4 * l[3]:\n        (D, S, P, r) = (l[0], l[2], l[3], l[1]) if l[2] ** 2 - l[0] ** 2 == 4 * l[3] else (l[1], l[2], l[3], l[0])\n        if (D + S) % 2 == 0:\n            a = (D + S) // 2\n            b = S - a\n            if a - b == D and a * b == P and (a // b == r):\n                if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n                    print(a, b)\n                else:\n                    not_avl()\n            else:\n                not_avl()\n        else:\n            not_avl()\n    elif l[3] ** 2 - l[0] ** 2 == 4 * l[2] or l[3] ** 2 - l[1] ** 2 == 4 * l[2]:\n        (D, S, P, r) = (l[0], l[3], l[2], l[1]) if l[3] ** 2 - l[0] ** 2 == 4 * l[2] else (l[1], l[3], l[2], l[0])\n        if (D + S) % 2 == 0:\n            a = (D + S) // 2\n            b = S - a\n            if a - b == D and a * b == P and (a // b == r):\n                if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n                    print(a, b)\n                else:\n                    not_avl()\n            else:\n                not_avl()\n        else:\n            not_avl()\n    else:\n        not_avl()", "def misnum(c, d, e, f, g, h):\n    x = (c + d) // 2\n    y = abs((c - d) // 2)\n    if (x >= 1 and x <= 10000) and (y >= 1 and y <= 10000):\n        if x * y == e and math.floor(x // y) == f or (x * y == f and math.floor(x // y) == e):\n            g = x\n            h = y\n            return (g, h)\n        else:\n            return (-1, -1)\n    else:\n        return (-1, -1)\nimport math\nt = int(input())\nfor i in range(t):\n    (p, q, r, s) = map(int, input().split())\n    (a, b) = (0, 0)\n    (a, b) = misnum(p, q, r, s, a, b)\n    if a == -1 and b == -1:\n        (a, b) = misnum(p, r, q, s, a, b)\n    if a == -1 and b == -1:\n        (a, b) = misnum(p, s, r, q, a, b)\n    if a == -1 and b == -1:\n        (a, b) = misnum(q, r, p, s, a, b)\n    if a == -1 and b == -1:\n        (a, b) = misnum(q, s, p, r, a, b)\n    if a == -1 and b == -1:\n        (a, b) = misnum(r, s, q, p, a, b)\n    print(a, b)", "def not_avl():\n    print(-1, -1)\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    l.sort()\n    if l[0] == 0:\n        D = l[0]\n        if l[1] == 1:\n            (S, P) = (l[2], l[3]) if l[2] ** 2 == 4 * l[3] else (l[3], l[2])\n            if S % 2 == 0:\n                a = S // 2\n                b = a\n                if a * b == P:\n                    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n                        print(a, b)\n                    else:\n                        not_avl()\n                else:\n                    not_avl()\n            else:\n                not_avl()\n        else:\n            not_avl()\n    elif l[0] < 0:\n        D = l[0]\n        if l[1] == 0:\n            (S, P) = (l[2], l[3]) if l[2] ** 2 - l[0] ** 2 == 4 * l[3] else (l[3], l[2])\n            if (D + S) % 2 == 0:\n                a = (D + S) // 2\n                b = S - a\n                if a - b == D and a * b == P:\n                    if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n                        print(a, b)\n                    else:\n                        not_avl()\n                else:\n                    not_avl()\n            else:\n                not_avl()\n        else:\n            not_avl()\n    elif l[2] ** 2 - l[1] ** 2 == 4 * l[3] or l[2] ** 2 - l[0] ** 2 == 4 * l[3]:\n        (D, S, P, r) = (l[0], l[2], l[3], l[1]) if l[2] ** 2 - l[0] ** 2 == 4 * l[3] else (l[1], l[2], l[3], l[0])\n        if (D + S) % 2 == 0:\n            a = (D + S) // 2\n            b = S - a\n            if a - b == D and a * b == P and (a // b == r):\n                if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n                    print(a, b)\n                else:\n                    not_avl()\n            else:\n                not_avl()\n        else:\n            not_avl()\n    elif l[3] ** 2 - l[0] ** 2 == 4 * l[2] or l[3] ** 2 - l[1] ** 2 == 4 * l[2]:\n        (D, S, P, r) = (l[0], l[3], l[2], l[1]) if l[3] ** 2 - l[0] ** 2 == 4 * l[2] else (l[1], l[3], l[2], l[0])\n        if (D + S) % 2 == 0:\n            a = (D + S) // 2\n            b = S - a\n            if a - b == D and a * b == P and (a // b == r):\n                if (a >= 1 and a <= 10000) and (b >= 1 and b <= 10000):\n                    print(a, b)\n                else:\n                    not_avl()\n            else:\n                not_avl()\n        else:\n            not_avl()\n    else:\n        not_avl()", "for __ in range(int(input())):\n    lis = [*map(int, input().split())]\n    lis.sort()\n    (A, B, C, D) = lis\n    x_1 = (C + A) // 2\n    y_1 = (C - A) // 2\n    x_2 = (C + B) // 2\n    y_2 = (C - B) // 2\n    x_3 = (D + A) // 2\n    y_3 = (D - A) // 2\n    x_4 = (D + B) // 2\n    y_4 = (D - B) // 2\n    if x_1 % 1 == 0 and x_1 != 0 and (y_1 % 1 == 0) and (y_1 != 0) and (x_1 // y_1 == B) and (x_1 * y_1 == D) and (x_1 >= 1) and (y_1 >= 1) and (x_1 <= 10000) and (y_1 <= 10000):\n        print(x_1, y_1)\n    elif x_2 % 1 == 0 and x_2 != 0 and (y_2 % 1 == 0) and (y_2 != 0) and (x_2 // y_2 == A) and (x_2 * y_2 == D) and (x_2 >= 1) and (y_2 >= 1) and (x_2 <= 10000) and (y_2 <= 10000):\n        print(x_2, y_2)\n    elif x_3 % 1 == 0 and x_3 != 0 and (y_3 % 1 == 0) and (y_3 != 0) and (x_3 // y_3 == B) and (x_3 * y_3 == C) and (x_3 >= 1) and (y_3 >= 1) and (x_3 <= 10000) and (y_3 <= 10000):\n        print(x_3, y_3)\n    elif x_4 % 1 == 0 and x_4 != 0 and (y_4 % 1 == 0) and (y_4 != 0) and (x_4 // y_4 == A) and (x_4 * y_4 == C) and (x_4 >= 1) and (y_4 >= 1) and (x_4 <= 10000) and (y_4 <= 10000):\n        print(x_4, y_4)\n    else:\n        print(-1, -1)", "def check(x, y, z, d):\n    a = (x + y) // 2\n    b = abs(x - y) // 2\n    if (x + y) % 2 == 0:\n        if b <= 0 or a <= 0 or a > 10 ** 4 or (b > 10 ** 4):\n            return [-1, -1]\n        elif (a * b != z or a // b != d) and (a * b != d or a // b != z):\n            return [-1, -1]\n        return [a, b]\n    else:\n        return [-1, -1]\nt = int(input())\nfor _ in range(t):\n    (x, y, z, d) = list(map(int, input().split()))\n    (a, b) = check(x, y, z, d)\n    if a == -1 and b == -1:\n        (a, b) = check(x, z, y, d)\n    if a == -1 and b == -1:\n        (a, b) = check(x, d, y, z)\n    if a == -1 and b == -1:\n        (a, b) = check(y, z, x, d)\n    if a == -1 and b == -1:\n        (a, b) = check(y, d, x, z)\n    if a == -1 and b == -1:\n        (a, b) = check(z, d, x, y)\n    print(a, b)", "def check(x, y, z, d):\n    a = (x + y) // 2\n    b = abs(x - y) // 2\n    if (x + y) % 2 == 0:\n        if b <= 0 or a <= 0 or a > 10 ** 4 or (b > 10 ** 4):\n            return [-1, -1]\n        elif (a * b != z or a // b != d) and (a * b != d or a // b != z):\n            return [-1, -1]\n        return [a, b]\n    else:\n        return [-1, -1]\nt = int(input())\nfor _ in range(t):\n    (x, y, z, d) = list(map(int, input().split()))\n    (a, b) = check(x, y, z, d)\n    if a == -1 and b == -1:\n        (a, b) = check(x, z, y, d)\n    if a == -1 and b == -1:\n        (a, b) = check(x, d, y, z)\n    if a == -1 and b == -1:\n        (a, b) = check(y, z, x, d)\n    if a == -1 and b == -1:\n        (a, b) = check(y, d, x, z)\n    if a == -1 and b == -1:\n        (a, b) = check(z, d, x, y)\n    print(a, b)", "import itertools\nfor _ in range(int(input())):\n    l = list(map(int, input().split(' ')))\n    flag = 1\n    t = list(itertools.permutations(l, 4))\n    for i in t:\n        a = i[0]\n        s = i[1]\n        m = i[2]\n        d = i[3]\n        num1 = (a + s) // 2\n        num2 = a - num1\n        if num1 <= 0 or num2 <= 0 or num2 > 10 ** 4 or (num1 > 10 ** 4):\n            continue\n        if num1 * num2 == m and num1 // num2 == d:\n            print(num1, num2)\n            flag = 0\n            break\n    if flag:\n        print(-1, -1)", "def check(x, y, z, d):\n    a = (x + y) // 2\n    b = abs(x - y) // 2\n    if (x + y) % 2 == 0:\n        if b <= 0 or a <= 0 or a > 10 ** 4 or (b > 10 ** 4):\n            return [-1, -1]\n        elif (a * b != z or a // b != d) and (a * b != d or a // b != z):\n            return [-1, -1]\n        return [a, b]\n    else:\n        return [-1, -1]\nt = int(input())\nfor _ in range(t):\n    (x, y, z, d) = list(map(int, input().split()))\n    (a, b) = check(x, y, z, d)\n    if a == -1 and b == -1:\n        (a, b) = check(x, z, y, d)\n    if a == -1 and b == -1:\n        (a, b) = check(x, d, y, z)\n    if a == -1 and b == -1:\n        (a, b) = check(y, z, x, d)\n    if a == -1 and b == -1:\n        (a, b) = check(y, d, x, z)\n    if a == -1 and b == -1:\n        (a, b) = check(z, d, x, y)\n    print(a, b)"]