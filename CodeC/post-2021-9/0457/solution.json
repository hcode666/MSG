["t = int(input())\nfor i in range(t):\n    nums = input().split(' ')\n    (n, k, s, l) = (int(nums[0]), int(nums[1]), int(nums[2]), [])\n    for j in range(n):\n        l.append(k ** j)\n    (total, l_good, a) = (s, [], 0)\n    for x in range(1, len(l) + 1):\n        if total - l[-x] >= 0:\n            l_good.append((-1) ** a)\n            total -= l[-x]\n        elif x != len(l) and total - l[-x] < 0 and (abs(total - l[-x]) <= sum(l[-len(l):-x])):\n            l_good.append((-1) ** a)\n            a += 1\n            total = l[-x] - total\n        else:\n            l_good.append(0)\n    if total == 0:\n        for y in range(n):\n            print(l_good[::-1][y], end=' ')\n        print()\n    else:\n        print(-2)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "t = int(input())\nfor i in range(t):\n    (n, k, s) = map(int, input().split())\n    seq = -2\n    l = []\n    for i in range(n):\n        if s % k == 0:\n            l.append(0)\n            s = s // k\n        elif s % k == 1:\n            l.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            l.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(seq)\n    else:\n        print(*l)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    arr = []\n    for j in range(a):\n        if c % b == 0:\n            arr.append(0)\n            c = c // b\n        elif c % b == 1:\n            arr.append(1)\n            c = (c - 1) // b\n        elif c % b == b - 1:\n            arr.append(-1)\n            c = (c + 1) // b\n    if c > 0:\n        print(-2)\n    else:\n        print(*arr)", "t = int(input())\nwhile t > 0:\n    (n, k, s) = map(int, input().split())\n    a = []\n    for i in range(n):\n        if s % k == 0:\n            a.append(0)\n            s //= k\n        elif s % k == 1:\n            a.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            a.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*a)\n    t -= 1", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    (N, K, S) = inlt()\n    an = []\n    for i in range(N):\n        if not S % K:\n            an.append(0)\n            S //= K\n        elif S % K == 1:\n            an.append(1)\n            S = (S - 1) // K\n        elif S % K == K - 1:\n            an.append(-1)\n            S = (S + 1) // K\n        else:\n            an = [-2]\n            break\n    ans.append(an if not S else [-2])\noutpltlt(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    bol = True\n    for i in range(n):\n        if s % k == 1:\n            ans.append(1)\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n            continue\n        elif s % k == 0:\n            ans.append(0)\n        else:\n            bol = False\n        s = s // k\n    if bol:\n        if s == 0:\n            print(*ans, sep=' ')\n        else:\n            print(-2)\n    else:\n        print(-2)", "for i in range(int(input())):\n    (N, K, S) = map(int, input().split())\n    b = True\n    ans = ''\n    for j in range(N):\n        if S % K == 1:\n            ans = ans + ' 1'\n        elif S % K == K - 1:\n            ans = ans + ' -1'\n            S = (S + 1) // K\n            continue\n        elif S % K == 0:\n            ans = ans + ' 0'\n        else:\n            b = False\n            break\n        S = S // K\n    if b:\n        if S != 0:\n            print(-2)\n        else:\n            print(ans)\n    else:\n        print(-2)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "for i in range(int(input())):\n    (N, K, S) = map(int, input().split())\n    b = True\n    ans = ''\n    for j in range(N):\n        if S % K == 1:\n            ans = ans + ' 1'\n        elif S % K == K - 1:\n            ans = ans + ' -1'\n            S = (S + 1) // K\n            continue\n        elif S % K == 0:\n            ans = ans + ' 0'\n        else:\n            b = False\n            break\n        S = S // K\n    if b:\n        if S != 0:\n            print(-2)\n        else:\n            print(ans)\n    else:\n        print(-2)", "t = int(input())\nfor i in range(t):\n    (N, K, S) = map(int, input().split())\n    b = True\n    ans = ''\n    for j in range(N):\n        if S % K == 1:\n            ans = ans + ' 1'\n        elif S % K == K - 1:\n            ans = ans + ' -1'\n            S = (S + 1) // K\n            continue\n        elif S % K == 0:\n            ans = ans + ' 0'\n        else:\n            b = False\n            break\n        S = S // K\n    if b:\n        if S != 0:\n            print(-2)\n        else:\n            print(ans)\n    else:\n        print(-2)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "T = int(input())\nfor _ in range(T):\n    (N, K, S) = map(int, input().split())\n    ans = []\n    while S > 0:\n        if S % K == 0 or S % K == 1:\n            ans.append(S % K)\n        elif S % K == K - 1:\n            ans.append(-1)\n            S += 1\n        else:\n            print(-2)\n            break\n        S = S // K\n    else:\n        if len(ans) > N:\n            print(-2)\n        else:\n            for _ in range(N - len(ans)):\n                ans.append(0)\n            print(*ans)", "T = int(input())\nfor _ in range(T):\n    (N, K, S) = map(int, input().split())\n    ans = []\n    while S > 0:\n        if S % K == 0 or S % K == 1:\n            ans.append(S % K)\n        elif S % K == K - 1:\n            ans.append(-1)\n            S += 1\n        else:\n            print(-2)\n            break\n        S = S // K\n    else:\n        if len(ans) > N:\n            print(-2)\n        else:\n            for _ in range(N - len(ans)):\n                ans.append(0)\n            print(*ans)", "T = int(input())\nfor _ in range(T):\n    (N, K, S) = map(int, input().split())\n    ans = []\n    while S > 0:\n        if S % K == 0 or S % K == 1:\n            ans.append(S % K)\n        elif S % K == K - 1:\n            ans.append(-1)\n            S += 1\n        else:\n            print(-2)\n            break\n        S = S // K\n    else:\n        if len(ans) > N:\n            print(-2)\n        else:\n            for _ in range(N - len(ans)):\n                ans.append(0)\n            print(*ans)", "for _ in range(int(input())):\n    (N, base, sm) = list(map(int, input().split()))\n    z = []\n    x = 0\n    for i in range(N):\n        z.append(-1)\n        x += -1 * base ** i\n    for i in range(N - 1, -1, -1):\n        m = base ** i\n        if x + 2 * m <= sm:\n            x = x + 2 * m\n            z[i] = 1\n        elif x + m <= sm:\n            x = x + m\n            z[i] = 0\n    if x == sm:\n        print(*z)\n    else:\n        print(-2)", "for _ in range(int(input())):\n    (N, K, S) = map(int, input().split(' '))\n    l = []\n    for i in range(N):\n        if S % K == 0:\n            l.append(0)\n            S //= K\n        elif S % K == 1:\n            l.append(1)\n            S = (S - 1) // K\n        elif S % K == K - 1:\n            l.append(-1)\n            S = (S + 1) // K\n    if S == 0:\n        print(*l)\n    else:\n        print(-2)", "for _ in range(int(input())):\n    (N, K, S) = map(int, input().split(' '))\n    l = []\n    for i in range(N):\n        if S % K == 0:\n            l.append(0)\n            S //= K\n        elif S % K == 1:\n            l.append(1)\n            S = (S - 1) // K\n        elif S % K == K - 1:\n            l.append(-1)\n            S = (S + 1) // K\n    if S != 0:\n        print(-2)\n    else:\n        print(*l)", "for _ in range(int(input())):\n    (N, K, S) = map(int, input().split(' '))\n    l = []\n    for i in range(N):\n        if S % K == 0:\n            l.append(0)\n            S //= K\n        elif S % K == 1:\n            l.append(1)\n            S = (S - 1) // K\n        elif S % K == K - 1:\n            l.append(-1)\n            S = (S + 1) // K\n    if S > 0:\n        print(-2)\n    else:\n        print(*l)", "t = int(input())\nfor _ in range(t):\n    (n, k, s) = map(int, input().split())\n    v = 0\n    m = s\n    l = []\n    for i in range(n):\n        b = s % k\n        if b == 1 or b == 0:\n            l.append(b)\n        else:\n            b = -1\n            l.append(-1)\n        s -= b\n        s = s // k\n    for i in range(n):\n        v += l[i] * k ** i\n    if v == m:\n        for i in l:\n            print(i, end=' ')\n        print()\n    else:\n        print(-2)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k, s) = map(int, input().split())\n    f = 0\n    m = s\n    l = []\n    for i in range(n):\n        b = s % k\n        if b == 1 or b == 0:\n            l.append(b)\n        else:\n            b = -1\n            l.append(-1)\n        s -= b\n        s = s // k\n    for i in range(n):\n        f += l[i] * k ** i\n    if f == m:\n        for i in l:\n            print(i, end=' ')\n        print()\n    else:\n        print(-2)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split(' '))\n    lst = []\n    flag = 0\n    for i in range(n):\n        mod = s % k\n        if mod == 0 or mod == 1 or mod == k - 1:\n            if mod == 0:\n                lst.append(0)\n            elif mod == 1:\n                lst.append(1)\n                s -= 1\n            else:\n                lst.append(-1)\n                s += 1\n            s = s // k\n        else:\n            flag = 1\n            break\n    if flag == 0 and s == 0:\n        print(*lst)\n    else:\n        print(-2)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "def helper(n, s, k):\n    n = int(n)\n    s = int(s)\n    k = int(k)\n    ans = []\n    Sum = s\n    i = 0\n    while i < n:\n        if s % k == 0:\n            ans.append(0)\n        elif s % k == 1:\n            s -= 1\n            ans.append(1)\n        else:\n            s += 1\n            ans.append(-1)\n        s = s // k\n        i += 1\n    ansSum = 0\n    t = 1\n    for i in ans:\n        ansSum += i * t\n        t = k * t\n    if ansSum == Sum:\n        return ans\n    else:\n        return -2\nT = int(input())\nfor i in range(T):\n    (n, k, s) = input().split()\n    ans = helper(n, s, k)\n    if ans != -2:\n        for i in ans:\n            print(i, end=' ')\n    else:\n        print('-2')\n    print()", "def helper(n, s, k):\n    n = int(n)\n    s = int(s)\n    k = int(k)\n    ans = []\n    Sum = s\n    i = 0\n    while i < n:\n        if s % k == 0:\n            ans.append(0)\n        elif s % k == 1:\n            s -= 1\n            ans.append(1)\n        else:\n            s += 1\n            ans.append(-1)\n        s = s // k\n        i += 1\n    ansSum = 0\n    t = 1\n    for i in ans:\n        ansSum += i * t\n        t = k * t\n    if ansSum == Sum:\n        return ans\n    else:\n        return -2\nT = int(input())\nfor i in range(T):\n    (n, k, s) = input().split()\n    ans = helper(n, s, k)\n    if ans != -2:\n        for i in ans:\n            print(i, end=' ')\n    else:\n        print('-2')\n    print()", "t = int(input())\nwhile t:\n    (n, k, s) = [int(i) for i in input().split()]\n    ans = []\n    flag = 1\n    while s != 0:\n        bi = s % k\n        if bi == 0 or bi == 1:\n            ans.append(bi)\n        elif bi == k - 1:\n            ans.append(-1)\n            bi = -1\n        else:\n            flag = 0\n            break\n        s = (s - bi) // k\n    if flag:\n        if len(ans) > n:\n            print(-2)\n        else:\n            if len(ans) < n:\n                ans.extend([0 for i in range(n - len(ans))])\n            for num in ans:\n                print(num, end=' ')\n            print()\n    else:\n        print(-2)\n    t -= 1", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for num in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "def omega(a, b):\n    if b == 0:\n        return 1\n    R = omega(a, b // 2)\n    if b % 2:\n        return R * R * a\n    else:\n        return R * R\nfor i in range(int(input())):\n    (N, K, S) = map(int, input().split())\n    t = S\n    alpha = []\n    for i in range(N):\n        r = S % K\n        if r != 0 and r != 1 and (r != K - 1):\n            print(-2)\n            break\n        if r == K - 1 and K != 2:\n            r = -1\n        alpha.append(r)\n        S = (S - r) // K\n    else:\n        sum = 0\n        for i in range(N):\n            sum += alpha[i] * omega(K, i)\n        if sum != t:\n            print(-2)\n            continue\n        print(' '.join(map(str, alpha)))", "import math\nT = int(input())\nfor tc in range(T):\n    (n, k, s) = map(int, input().split(' '))\n    sumk = s\n    l = []\n    iterm = 0\n    for i in range(n):\n        temp = sumk % k\n        if temp == 0:\n            l.append(0)\n        elif temp == 1:\n            l.append(1)\n        else:\n            temp = -1\n            l.append(-1)\n        iterm = temp\n        sumk -= iterm\n        sumk /= k\n    finalsum = 0\n    for i in range(0, n):\n        finalsum += k ** i * l[i]\n    if finalsum == s:\n        print(*l)\n    else:\n        print(-2)", "t = int(input())\nfor _ in range(t):\n    (n, k, s) = (int(x) for x in input().split())\n    if k == 2:\n        if s >= 2 ** n:\n            print(-2)\n        else:\n            s_bin = bin(s)[2:]\n            for c in reversed(s_bin):\n                print(c, end=' ')\n            print('0 ' * (n - len(s_bin)))\n    else:\n        seq = []\n        bad = False\n        for i in range(n):\n            dig = s % k\n            if dig in (0, 1):\n                seq.append(dig)\n                s //= k\n            elif dig == k - 1:\n                seq.append(-1)\n                s = (s + 1) // k\n            else:\n                bad = True\n                break\n        if bad or s != 0:\n            print(-2)\n        else:\n            for e in seq:\n                print(e, end=' ')\n            print()", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "t = int(input())\nfor _ in range(t):\n    (n, k, s) = list(map(int, input().split(' ')))\n    res = []\n    for _ in range(n):\n        if s % k == 0:\n            res.append(0)\n            s //= k\n        elif s % k == 1:\n            res.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            res.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*res)", "t = int(input())\nwhile t > 0:\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)\n    t -= 1", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "t = int(input())\nfor testcases in range(t):\n    (n, k, s) = map(int, input().split())\n    list = []\n    for i in range(n):\n        if s % k == 0:\n            list.append(0)\n            s //= k\n        elif s % k == 1:\n            list.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            list.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*list)", "def solution():\n    (n, k, s) = map(int, input().split())\n    list = []\n    for i in range(n):\n        if s % k == 0:\n            list.append(0)\n            s //= k\n        elif s % k == 1:\n            list.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            list.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*list)\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    solution()", "def solve(n, k, s):\n    ans = [0] * n\n    (prev, cur) = (1, k)\n    for i in range(n):\n        val = s % cur\n        if val:\n            if val == prev:\n                ans[i] = 1\n                s -= prev\n            elif val == cur - prev:\n                ans[i] = -1\n                s += prev\n            else:\n                return [-2]\n        if not s:\n            return ans\n        (prev, cur) = (cur, cur * k)\n    return [-2]\nfor _ in range(int(input())):\n    (n, k, s) = map(int, input().split(' '))\n    print(*solve(n, k, s))", "def omega(a, b):\n    if b == 0:\n        return 1\n    R = omega(a, b // 2)\n    if b % 2:\n        return R * R * a\n    else:\n        return R * R\nfor i in range(int(input())):\n    (N, K, S) = map(int, input().split())\n    t = S\n    alpha = []\n    for i in range(N):\n        r = S % K\n        if r != 0 and r != 1 and (r != K - 1):\n            print(-2)\n            break\n        if r == K - 1 and K != 2:\n            r = -1\n        alpha.append(r)\n        S = (S - r) // K\n    else:\n        sum = 0\n        for i in range(N):\n            sum += alpha[i] * omega(K, i)\n        if sum != t:\n            print(-2)\n            continue\n        print(' '.join(map(str, alpha)))", "t = int(input())\nfor _ in range(t):\n    (n, k, s) = map(int, input().split())\n    ans = [0] * n\n    i = 0\n    ss = s\n    while i < n:\n        l = s % k\n        if l == 0:\n            pass\n        elif l == 1:\n            ans[i] = 1\n            s -= 1\n        elif l == k - 1:\n            ans[i] = -1\n            s += 1\n        else:\n            break\n        s = s / k\n        i += 1\n    p = 1\n    sumt = 0\n    for i in ans:\n        sumt += i * p\n        p = p * k\n    if ss == sumt:\n        print(*ans)\n    else:\n        print(-2)", "t = int(input())\nfor _ in range(t):\n    (n, k, s) = map(int, input().split())\n    ans = [0] * n\n    i = 0\n    ss = s\n    while i < n:\n        l = s % k\n        if l == 0:\n            pass\n        elif l == 1:\n            ans[i] = 1\n            s -= 1\n        else:\n            ans[i] = -1\n            s += 1\n        s = s / k\n        i += 1\n    p = 1\n    sumt = 0\n    for i in ans:\n        sumt += i * p\n        p = p * k\n    if ss == sumt:\n        print(*ans)\n    else:\n        print(-2)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    l = []\n    for i in range(n):\n        if s % k == 0:\n            s = s // k\n            l.append('0')\n        elif s % k == 1:\n            s = (s - 1) // k\n            l.append('1')\n        elif s % k == k - 1:\n            s = (s + 1) // k\n            l.append('-1')\n    if s != 0:\n        print('-2')\n    else:\n        print(*l)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    l = []\n    for i in range(min(n, 6111)):\n        if s % k == 0:\n            s = s // k\n            l.append('0')\n        elif s % k == 1:\n            s = (s - 1) // k\n            l.append('1')\n        elif s % k == k - 1:\n            s = (s + 1) // k\n            l.append('-1')\n    if s != 0:\n        print('-2')\n    else:\n        print(*l)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    l = [0] * n\n    a = s\n    sumi = 0\n    for i in range(min(n, 6111)):\n        if s == 0:\n            break\n        elif s % k == 0:\n            l[i] = 0\n            s //= k\n        elif s % k == 1:\n            s -= 1\n            l[i] = 1\n            s //= k\n        elif s % k == k - 1:\n            s += 1\n            l[i] = -1\n            s //= k\n    if s != 0:\n        print(-2)\n    else:\n        print(*l)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    l = [0] * n\n    a = s\n    sumi = 0\n    for i in range(min(n, 6111)):\n        if s == 0:\n            break\n        elif s % k == 0:\n            l[i] = 0\n        elif s % k == 1:\n            s -= 1\n            l[i] = 1\n        else:\n            s += 1\n            l[i] = -1\n        s //= k\n    for i in range(n):\n        sumi += l[i] * pow(k, i)\n    if sumi == a:\n        print(*l)\n    else:\n        print(-2)", "t = int(input())\nfor _ in range(t):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s != 0:\n        print(-2)\n    else:\n        for x in ans:\n            print(x, end=' ')\n        print()", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "t = int(input())\nfor i in range(0, t):\n    (n, k, s) = map(int, input().split(' '))\n    b = []\n    flag = -1\n    for i in range(0, n):\n        if s == 0:\n            flag = i\n            break\n        elif s < 0:\n            flag = -2\n            break\n        elif s % k == 0 or s % k == 1:\n            b.append(int(s % k))\n            s = (s - b[i]) / k\n            if s < 0:\n                flag = -2\n                break\n        else:\n            b.append(-1)\n            s = (s + 1) / k\n            if s < 0:\n                flag = -2\n                break\n    if s == 0 and flag == -1:\n        print(*b)\n    elif flag == -2 or s > 0:\n        print(-2)\n    else:\n        lenb = len(b)\n        lb = [0] * (n - lenb)\n        print(*b, end=' ')\n        print(*lb)", "from collections import defaultdict\nimport math\nfrom heapq import heappop, heappush, heapify\n\ndef solve(n, k, s):\n    l = []\n    j = 0\n    while j < n:\n        x = s % k\n        if x == 0:\n            l.append(0)\n            s = s // k\n        elif x == 1:\n            l.append(1)\n            s = (s - 1) // k\n        elif k - x == 1:\n            l.append(-1)\n            s = (s + 1) // k\n        else:\n            return [-2]\n        j += 1\n    if s > 0:\n        return [-2]\n    else:\n        return l\nfor i in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    l = solve(n, k, s)\n    print(*l)", "from collections import defaultdict\nimport math\nfrom heapq import heappop, heappush, heapify\n\ndef solve(n, k, s):\n    l = []\n    j = 0\n    while j < n:\n        x = s % k\n        if x == 0:\n            l.append(0)\n            s = s // k\n        elif x == 1:\n            l.append(1)\n            s = (s - 1) // k\n        elif k - x == 1:\n            l.append(-1)\n            s = (s + 1) // k\n        j += 1\n    if s > 0:\n        return [-2]\n    else:\n        return l\nfor i in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    l = solve(n, k, s)\n    print(*l)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, k, s) = map(int, input().split())\n        powers = [0] * n\n        curr = 0\n        ans = [0] * n\n        powers[0] = 1\n        for i in range(1, n):\n            powers[i] = powers[i - 1] * k\n            if powers[i] > s:\n                break\n        for i in range(n - 1, -1, -1):\n            if abs(s - (curr + powers[i])) < abs(s - curr):\n                curr += powers[i]\n                ans[i] = 1\n            elif abs(s - (curr - powers[i])) < abs(s - curr):\n                curr -= powers[i]\n                ans[i] = -1\n        if curr == s:\n            for i in ans:\n                print(i, end=' ')\n            print()\n        else:\n            print(-2)\nmain()", "for i in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    l = []\n    while a > 0:\n        if n % b == 0:\n            l.append(0)\n            n = n // b\n        elif n % b == 1:\n            l.append(1)\n            n = (n - 1) // b\n        elif n % b == b - 1:\n            l.append(-1)\n            n = (n + 1) // b\n        a -= 1\n    if n > 0:\n        print(-2)\n    else:\n        print(*l)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, k, s) = map(int, input().split())\n        powers = [0] * n\n        curr = 0\n        ans = [0] * n\n        powers[0] = 1\n        for i in range(1, n):\n            powers[i] = powers[i - 1] * k\n            if powers[i] > s:\n                break\n        for i in range(n - 1, -1, -1):\n            if abs(s - curr + powers[i]) < abs(s - curr):\n                curr -= powers[i]\n                ans[i] = -1\n            elif abs(s - curr - powers[i]) < abs(s - curr):\n                curr += powers[i]\n                ans[i] = 1\n        if curr == s:\n            for i in ans:\n                print(i, end=' ')\n            print()\n        else:\n            print(-2)\nmain()", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, k, s) = map(int, input().split())\n        powers = [0] * n\n        curr = 0\n        ans = [0] * n\n        powers[0] = 1\n        for i in range(1, n):\n            powers[i] = powers[i - 1] * k\n            if powers[i] > s:\n                break\n        for i in range(n - 1, -1, -1):\n            if abs(s - curr + powers[i]) < abs(s - curr):\n                curr -= powers[i]\n                ans[i] = -1\n            elif abs(s - curr - powers[i]) < abs(s - curr):\n                curr += powers[i]\n                ans[i] = 1\n        if curr == s:\n            for i in ans:\n                print(i, end=' ')\n            print()\n        else:\n            print(-2)\nmain()", "for t in range(int(input())):\n    (n, k, s) = list(map(int, input().strip().split()))[:3]\n    li = []\n    flag = 1\n    for i in range(n):\n        rem = -1 if s % k == k - 1 and (not k == 2) else s % k\n        if abs(rem) > 1:\n            flag = 0\n            break\n        li.append(rem)\n        s = s - rem\n        s = s // k\n    if flag == 0 or s != 0:\n        print(-2)\n    else:\n        print(*li)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    b = []\n    for i in range(n):\n        m = s % k\n        if m == 0:\n            b.append(0)\n        elif m == 1:\n            b.append(1)\n        elif m == k - 1:\n            b.append(-1)\n        else:\n            break\n        s = (s - b[-1]) // k\n    if s > 0:\n        print('-2')\n    else:\n        for val in b:\n            print(val, end=' ')\n        print()", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    b = []\n    flg = False\n    for _ in range(n):\n        rem = -1 if s % k == k - 1 and (not k == 2) else s % k\n        if abs(rem) > 1:\n            flg = True\n            break\n        b.append(rem)\n        s -= rem\n        s //= k\n    if s > 0 or flg:\n        print(-2)\n    else:\n        print(*b)", "T = int(input())\nfor tc in range(T):\n    (n, k, s) = map(int, input().split())\n    b = []\n    st = s\n    flag = 0\n    while st > 0:\n        rem = st % k\n        if rem == 1 or rem == 0:\n            b.append(rem)\n        elif k - rem == 1:\n            b.append(-1)\n            st = st // k + 1\n            continue\n        elif k - rem > 1:\n            flag = 1\n            break\n        st = (st - rem) // k\n    if len(b) > n:\n        flag = 1\n    if flag == 1:\n        print(-2)\n        continue\n    while len(b) < n:\n        b.append(0)\n    for i in b:\n        print(i, end=' ')\n    print()", "for t in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    a = []\n    sm = s\n    for i in range(n):\n        x = s % k\n        if x == 0:\n            a.append(0)\n        elif x == 1:\n            a.append(1)\n        elif x == k - 1:\n            a.append(-1)\n        else:\n            break\n        s = (s - a[-1]) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*a)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    b = []\n    for i in range(n):\n        m = s % k\n        if m == 0:\n            b.append(0)\n        elif m == 1:\n            b.append(1)\n        elif m == k - 1:\n            b.append(-1)\n        else:\n            break\n        s = (s - b[-1]) // k\n    if s > 0:\n        print('-2')\n    else:\n        for val in b:\n            print(val, end=' ')\n        print()", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "for t in range(int(input())):\n    (n, k, s) = [int(i) for i in input().split()]\n    l1 = [0] * n\n    for i in range(n):\n        if s % k == 0:\n            l1[i] = 0\n            s = s // k\n        elif s % k == 1:\n            s = (s - 1) // k\n            l1[i] = 1\n        elif s % k == k - 1:\n            s = (s + 1) // k\n            l1[i] = -1\n    if s > 0:\n        print(-2)\n    else:\n        print(*l1)", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "import sys\nnext((f := sys.stdin))\nfor s in f:\n    (n, k, s) = map(int, s.split())\n    if k == 2:\n        ans = f'{s:b}'.zfill(n)[::-1]\n        if len(ans) == n:\n            s = 0\n    else:\n        ans = []\n        for _ in range(n):\n            r = (s + 1) % k - 1\n            if abs(r) > 1:\n                break\n            ans.append(r)\n            s = (s - r) // k\n    print(*([-2] if s else ans))", "import sys\nnext((f := sys.stdin))\nfor s in f:\n    (n, k, s) = map(int, s.split())\n    ans = []\n    for _ in range(n):\n        if abs((r := min((s % k, s % -k), key=abs))) > 1:\n            break\n        ans.append(r)\n        s = (s - r) // k\n    print(*([-2] if s else ans))", "import sys\nnext((f := sys.stdin))\nfor s in f:\n    (n, k, s) = map(int, s.split())\n    d = k > 2\n    ans = []\n    for _ in range(n):\n        if abs((r := ((s + d) % k - d))) > 1:\n            break\n        ans.append(r)\n        s = (s - r) // k\n    print(*([-2] if s else ans))", "import sys\nnext((f := sys.stdin))\nfor s in f:\n    (n, k, s) = map(int, s.split())\n    d = k > 2\n    ans = []\n    for _ in range(n):\n        r = (s + d) % k - d\n        if abs(r) > 1:\n            break\n        ans.append(r)\n        s = (s - r) // k\n    print(*([-2] if s else ans))", "import sys\nnext((f := sys.stdin))\nfor s in f:\n    (n, k, s) = map(int, s.split())\n    if k == 2:\n        ans = f'{s:b}'.zfill(n)[::-1]\n        if len(ans) == n:\n            s = 0\n    else:\n        ans = []\n        for _ in range(n):\n            r = (s + 1) % k - 1\n            if abs(r) > 1:\n                break\n            ans.append(r)\n            s = (s - r) // k\n    print(*([-2] if s else ans))", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        if s % k == 0:\n            ans.append(0)\n            s //= k\n        elif s % k == 1:\n            ans.append(1)\n            s = (s - 1) // k\n        elif s % k == k - 1:\n            ans.append(-1)\n            s = (s + 1) // k\n    if s > 0:\n        print(-2)\n    else:\n        print(*ans)", "def ii():\n    return int(input())\n\ndef si():\n    return input()\n\ndef mi():\n    return map(int, input().strip().split(' '))\n\ndef msi():\n    return map(str, input().strip().split(' '))\n\ndef li():\n    return list(mi())\n\ndef solve():\n    (n, k, s) = mi()\n    sc = s\n    ans = [0] * n\n    i = 0\n    while i < n:\n        if s % k == 0:\n            ans[i] = 0\n        elif s % k == 1:\n            s -= 1\n            ans[i] = 1\n        else:\n            s += 1\n            ans[i] = -1\n        s //= k\n        i += 1\n    (p, power) = (0, 1)\n    for i in range(0, n):\n        p += ans[i] * power\n        power *= k\n    if p != sc:\n        print(-2)\n        return\n    for i in ans:\n        print(i, end=' ')\n    print()\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, k, s) = map(int, input().split())\n    b = []\n    w = s\n    fail = False\n    while w > 0 or len(b) < n:\n        digit = w % k\n        if digit > 1 and digit < k - 1:\n            fail = True\n            break\n        if digit == k - 1 and digit != 1:\n            b.append(-1)\n            w += k\n        else:\n            b.append(digit)\n        w = w // k\n    while len(b) > n and b[-1] == 0:\n        b = b[0:len(b) - 1]\n    if len(b) > n:\n        fail = True\n    if fail:\n        print(-2)\n    else:\n        print(' '.join([str(e) for e in b]))", "for i in range(int(input())):\n    (N, K, S) = map(int, input().split())\n    t = S\n    alpha = []\n    for i in range(N):\n        r = S % K\n        if r != 0 and r != 1 and (r != K - 1):\n            print(-2)\n            break\n        if r == K - 1 and K != 2:\n            r = -1\n        alpha.append(r)\n        S = (S - r) // K\n    else:\n        sum = 0\n        for i in range(N):\n            sum += alpha[i] * K ** i\n        if sum != t:\n            print(-2)\n            continue\n        print(' '.join(map(str, alpha)))", "def solve():\n    (n, k, s) = map(int, input().split())\n    a = [k ** i for i in range(n)]\n    su = []\n    su.append(0)\n    for i in range(1, n):\n        su.append(su[i - 1] + a[i - 1])\n    a = a[::-1]\n    su = su[::-1]\n    ans = []\n    i = 0\n    while i < n:\n        if i < n - 1:\n            if s == 0:\n                ans.append(str(0))\n            elif s - a[i] + su[i] >= 0:\n                if s - a[i + 1] - su[i + 1] <= 0:\n                    ans.append(str(0))\n                else:\n                    s -= a[i]\n                    ans.append(str(1))\n            elif s <= 0:\n                if s + a[i + 1] + su[i + 1] >= 0:\n                    ans.append(str(0))\n                elif s - a[i] + su[i] <= 0:\n                    s += a[i]\n                    ans.append(str(-1))\n            else:\n                ans.append(str(0))\n        elif s == 0:\n            ans.append(str(0))\n        elif s - a[i] + su[i] >= 0:\n            s -= a[i]\n            ans.append(str(1))\n        elif s <= 0:\n            if s - a[i] + su[i] <= 0:\n                s += a[i]\n                ans.append(str(-1))\n        else:\n            ans.append(str(0))\n        i += 1\n    ans = ans[::-1]\n    a = a[::-1]\n    su = su[::-1]\n    if s != 0:\n        print(-2)\n        return\n    print(' '.join(ans))\n    return\nfor _ in range(int(input())):\n    solve()", "def log(n, s):\n    ans = 0\n    while s > 0:\n        s = s // n\n        if s > 0:\n            ans += 1\n    return ans\nt = int(input())\nwhile t > 0:\n    n = input()\n    n = n.split()\n    k = int(n[1])\n    s = int(n[2])\n    n = int(n[0])\n    a = [i for i in range(1, n + 1)]\n    for i in range(0, n):\n        a[i] = 0\n    ans = 0\n    for i in range(n):\n        ans += int(pow(k, i))\n        a[i] = 1\n        if ans >= s:\n            break\n    if ans < s:\n        print(-2)\n    else:\n        rem = int(ans - s)\n        while rem != 0:\n            temp = log(k, rem)\n            if a[temp] == -1:\n                print(-2)\n                break\n            a[temp] -= 1\n            rem -= int(pow(k, temp))\n        if rem == 0:\n            for i in range(n):\n                print(a[i], end=' ')\n            print()\n    t -= 1", "from sys import stdin\ninput = stdin.readline\n\ndef summation(K, N):\n    return (K ** (N + 1) - 1) // (K - 1)\n\ndef solve(N, K, S):\n    B = [0] * N\n    for i in range(N):\n        x = S % K\n        if x == K - 1:\n            if summation(K, N - i - 1) == S:\n                for j in range(i, N):\n                    B[j] = 1\n                S = 0\n                break\n            else:\n                x = -1\n        if x in [-1, 0, 1]:\n            B[i] = x\n            S = (S - x) // K\n        else:\n            return [-2]\n    if S == 0:\n        return B\n    return [-2]\nT = int(input().strip())\nfor problem in range(1, T + 1):\n    (N, K, S) = [int(x) for x in input().strip().split()]\n    print(*solve(N, K, S))", "def omega(a, b):\n    if b == 0:\n        return 1\n    R = omega(a, b // 2)\n    if b % 2:\n        return R * R * a\n    else:\n        return R * R\nfor i in range(int(input())):\n    (N, K, S) = map(int, input().split())\n    t = S\n    alpha = []\n    for i in range(N):\n        r = S % K\n        if r != 0 and r != 1 and (r != K - 1):\n            print(-2)\n            break\n        if r == K - 1 and K != 2:\n            r = -1\n        alpha.append(r)\n        S = (S - r) // K\n    else:\n        sum = 0\n        for i in range(N):\n            sum += alpha[i] * omega(K, i)\n        if sum != t:\n            print(-2)\n            continue\n        print(' '.join(map(str, alpha)))", "def inp():\n    return int(input())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\n\ndef solve(n, k, s):\n    b = [0] * n\n    i = n\n    sign = 1\n    while i > 0:\n        num = k ** (i - 1) - (k ** (i - 1) - 1) // (k - 1)\n        if num > s:\n            b[i - 1] = 0\n        else:\n            s -= k ** (i - 1)\n            b[i - 1] = sign\n        if s < 0:\n            sign *= -1\n            s *= -1\n        i -= 1\n    flag = True\n    if s != 0:\n        flag = False\n    return (b, flag)\n\ndef main():\n    for i in range(inp()):\n        (n, k, s) = lis()\n        (solution, flag) = solve(n, k, s)\n        if flag:\n            for j in solution:\n                print(j, end=' ')\n            print()\n        else:\n            print(-2)\nmain()", "def binpow(a1, b1):\n    if b1 == 0:\n        return 1\n    res = binpow(a1, b1 // 2)\n    if b1 % 2:\n        return res * res * a1\n    else:\n        return res * res\ne = int(input())\nwhile e > 0:\n    e -= 1\n    (n, k, s) = map(int, input().split())\n    tmp = s\n    b = []\n    for i in range(n):\n        rem = s % k\n        if rem != 0 and rem != 1 and (rem != k - 1):\n            print(-2)\n            break\n        if rem == k - 1 and k != 2:\n            rem = -1\n        b.append(rem)\n        s = (s - rem) // k\n    else:\n        sum = 0\n        for i in range(n):\n            sum += b[i] * binpow(k, i)\n        if sum != tmp:\n            print(-2)\n            continue\n        print(' '.join(map(str, b)))", "def binpow(a1, b1):\n    if b1 == 0:\n        return 1\n    res = binpow(a1, b1 // 2)\n    if b1 % 2:\n        return res * res * a1\n    else:\n        return res * res\ntes = int(input())\nwhile tes > 0:\n    tes -= 1\n    (n, k, s) = map(int, input().split())\n    tmp = s\n    b = []\n    for i in range(n):\n        rem = s % k\n        if rem != 0 and rem != 1 and (rem != k - 1):\n            print(-2)\n            break\n        if rem == k - 1 and k != 2:\n            rem = -1\n        b.append(rem)\n        s = (s - rem) // k\n    else:\n        sum = 0\n        for i in range(n):\n            sum += b[i] * binpow(k, i)\n        if sum != tmp:\n            print(-2)\n            continue\n        print(' '.join(map(str, b)))", "def binpow(a1, b1):\n    if b1 == 0:\n        return 1\n    res = binpow(a1, b1 // 2)\n    if b1 % 2:\n        return res * res * a1\n    else:\n        return res * res\ntes = int(input())\nwhile tes > 0:\n    tes -= 1\n    (n, k, s) = map(int, input().split())\n    tmp = s\n    b = []\n    for i in range(n):\n        rem = s % k\n        if rem != 0 and rem != 1 and (rem != k - 1):\n            print(-2)\n            break\n        if rem == k - 1 and k != 2:\n            rem = -1\n        b.append(rem)\n        s = (s - rem) // k\n    else:\n        sum = 0\n        for i in range(n):\n            sum += b[i] * binpow(k, i)\n        if sum != tmp:\n            print(-2)\n            continue\n        print(' '.join(map(str, b)))", "def binpow(a1, b1):\n    if b1 == 0:\n        return 1\n    res = binpow(a1, b1 // 2)\n    if b1 % 2:\n        return res * res * a1\n    else:\n        return res * res\ne = int(input())\nwhile e > 0:\n    e -= 1\n    (n, k, s) = map(int, input().split())\n    tmp = s\n    b = []\n    for i in range(n):\n        rem = s % k\n        if rem != 0 and rem != 1 and (rem != k - 1):\n            print(-2)\n            break\n        if rem == k - 1 and k != 2:\n            rem = -1\n        b.append(rem)\n        s = (s - rem) // k\n    else:\n        sum = 0\n        for i in range(n):\n            sum += b[i] * binpow(k, i)\n        if sum != tmp:\n            print(-2)\n            continue\n        print(' '.join(map(str, b)))", "def binpow(p, q):\n    if q == 0:\n        return 1\n    r = binpow(p, q // 2)\n    if q % 2:\n        return r * r * p\n    else:\n        return r * r\nT = int(input())\nfor i in range(0, T):\n    (N, a, b) = map(int, input().split())\n    ans = []\n    sum = b\n    f = 1\n    for i in range(N):\n        rem = b % a\n        if rem != 0 and rem != 1 and (rem != a - 1):\n            print(-2)\n            f = 0\n            break\n        if a != 2 and b % a == a - 1:\n            rem = -1\n        ans.append(rem)\n        b = (b - rem) // a\n    b = 0\n    if not f:\n        continue\n    for (i, digit) in enumerate(ans):\n        b += digit * binpow(a, i)\n    if sum != b:\n        print(-2)\n    else:\n        print(*ans)", "def binpow(a1, b1):\n    if b1 == 0:\n        return 1\n    res = binpow(a1, b1 // 2)\n    if b1 % 2:\n        return res * res * a1\n    else:\n        return res * res\ntes = int(input())\nwhile tes > 0:\n    tes -= 1\n    (n, k, s) = map(int, input().split())\n    tmp = s\n    b = []\n    for i in range(n):\n        rem = s % k\n        if rem != 0 and rem != 1 and (rem != k - 1):\n            print(-2)\n            break\n        if rem == k - 1 and k != 2:\n            rem = -1\n        b.append(rem)\n        s = (s - rem) // k\n    else:\n        sum = 0\n        for i in range(n):\n            sum += b[i] * binpow(k, i)\n        if sum != tmp:\n            print(-2)\n            continue\n        print(' '.join(map(str, b)))", "def binpow(a1, b1):\n    if b1 == 0:\n        return 1\n    res = binpow(a1, b1 // 2)\n    if b1 % 2:\n        return res * res * a1\n    else:\n        return res * res\ntes = int(input())\nwhile tes > 0:\n    tes -= 1\n    (n, k, s) = map(int, input().split())\n    tmp = s\n    b = []\n    for i in range(n):\n        rem = s % k\n        if rem != 0 and rem != 1 and (rem != k - 1):\n            print(-2)\n            break\n        if rem == k - 1 and k != 2:\n            rem = -1\n        b.append(rem)\n        s = (s - rem) // k\n    else:\n        sum = 0\n        for i in range(n):\n            sum += b[i] * binpow(k, i)\n        if sum != tmp:\n            print(-2)\n            continue\n        print(' '.join(map(str, b)))", "num = [3, 5, 7, 11, 13]\nmul = []\nfor n in num:\n    mul.append(n ** 2)\n\ndef swingshotscatter(xarfadedsasaass, xanderfadedsa):\n    if xanderfadedsa == 0:\n        return 1\n    xarfadedsasaass078 = swingshotscatter(xarfadedsasaass, xanderfadedsa // 2)\n    if xanderfadedsa % 2:\n        return xarfadedsasaass078 * xarfadedsasaass078 * xarfadedsasaass\n    else:\n        return xarfadedsasaass078 * xarfadedsasaass078\nsolve = int(input())\nwhile solve > 0:\n    solve -= 1\n    (n, k, s) = map(int, input().split())\n    curl = s\n    xanderfade = []\n    for i in range(n):\n        swingshot = s % k\n        if swingshot != 0 and swingshot != 1 and (swingshot != k - 1):\n            print(-2)\n            break\n        if swingshot == k - 1 and k != 2:\n            swingshot = -1\n        xanderfade.append(swingshot)\n        s = (s - swingshot) // k\n    else:\n        xanderfadedsasaass = 0\n        for i in range(n):\n            xanderfadedsasaass += xanderfade[i] * swingshotscatter(k, i)\n        if xanderfadedsasaass != curl:\n            print(-2)\n            continue\n        print(' '.join(map(str, xanderfade)))", "def fun(a, b):\n    if b == 0:\n        return 1\n    k = fun(a, b // 2)\n    if b % 2:\n        return k * k * a\n    else:\n        return k * k\ntes = int(input())\nwhile tes > 0:\n    tes -= 1\n    (n, k, s) = map(int, input().split())\n    tmp = s\n    l = []\n    for i in range(n):\n        rem = s % k\n        if rem != 0 and rem != 1 and (rem != k - 1):\n            print(-2)\n            break\n        if rem == k - 1 and k != 2:\n            rem = -1\n        l.append(rem)\n        s = (s - rem) // k\n    else:\n        sum = 0\n        for i in range(n):\n            sum += l[i] * fun(k, i)\n        if sum != tmp:\n            print(-2)\n            continue\n        print(*l)", "def bin(a, b):\n    if b == 0:\n        return 1\n    r = bin(a, b // 2)\n    if b % 2:\n        return r * r * a\n    else:\n        return r * r\nfor i in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    t = s\n    alpha = []\n    for i in range(n):\n        r = s % k\n        if r != 0 and r != 1 and (r != k - 1):\n            print(-2)\n            break\n        if r == k - 1 and k != 2:\n            r = -1\n        alpha.append(r)\n        s = (s - r) // k\n    else:\n        sum = 0\n        for i in range(n):\n            sum += alpha[i] * bin(k, i)\n        if sum != t:\n            print(-2)\n            continue\n        print(' '.join(map(str, alpha)))", "def binpow(a1, b1):\n    if b1 == 0:\n        return 1\n    res = binpow(a1, b1 // 2)\n    if b1 % 2:\n        return res * res * a1\n    else:\n        return res * res\ntes = int(input())\nwhile tes > 0:\n    tes -= 1\n    (n, k, s) = map(int, input().split())\n    tmp = s\n    b = []\n    for i in range(n):\n        rem = s % k\n        if rem != 0 and rem != 1 and (rem != k - 1):\n            print(-2)\n            break\n        if rem == k - 1 and k != 2:\n            rem = -1\n        b.append(rem)\n        s = (s - rem) // k\n    else:\n        sum = 0\n        for i in range(n):\n            sum += b[i] * binpow(k, i)\n        if sum != tmp:\n            print(-2)\n            continue\n        print(' '.join(map(str, b)))", "def binpow(a1, b1):\n    if b1 == 0:\n        return 1\n    res = binpow(a1, b1 // 2)\n    if b1 % 2:\n        return res * res * a1\n    else:\n        return res * res\ntes = int(input())\nwhile tes > 0:\n    tes -= 1\n    (n, k, s) = map(int, input().split())\n    tmp = s\n    b = []\n    for i in range(n):\n        rem = s % k\n        if rem != 0 and rem != 1 and (rem != k - 1):\n            print(-2)\n            break\n        if rem == k - 1 and k != 2:\n            rem = -1\n        b.append(rem)\n        s = (s - rem) // k\n    else:\n        sum = 0\n        for i in range(n):\n            sum += b[i] * binpow(k, i)\n        if sum != tmp:\n            print(-2)\n            continue\n        print(' '.join(map(str, b)))", "T = int(input())\nwhile T:\n    [n, k, s] = [int(i) for i in input().split()]\n    a = []\n    flag = False\n    while s > 0:\n        ins = False\n        f = s % k\n        if f == 0 or f == 1:\n            a.append(str(f))\n        elif (f + 1) % k == 0:\n            ins = True\n            a.append(str(-1))\n        else:\n            print(-2)\n            flag = True\n            break\n        if ins:\n            s += 1\n        s = int(s / k)\n    if not flag:\n        p = len(a)\n        if p < n:\n            for i in range(n - p):\n                a.append(str(0))\n            ans = ' '.join(a)\n            print(ans)\n        elif p == n:\n            ans = ' '.join(a)\n            print(ans)\n        else:\n            print(-2)\n    T -= 1", "def binpow(a1, b1):\n    if b1 == 0:\n        return 1\n    res = binpow(a1, b1 // 2)\n    if b1 % 2:\n        return res * res * a1\n    else:\n        return res * res\ntes = int(input())\nwhile tes > 0:\n    tes -= 1\n    (n, k, s) = map(int, input().split())\n    tmp = s\n    b = []\n    for i in range(n):\n        rem = s % k\n        if rem != 0 and rem != 1 and (rem != k - 1):\n            print(-2)\n            break\n        if rem == k - 1 and k != 2:\n            rem = -1\n        b.append(rem)\n        s = (s - rem) // k\n    else:\n        sum = 0\n        for i in range(n):\n            sum += b[i] * binpow(k, i)\n        if sum != tmp:\n            print(-2)\n            continue\n        print(' '.join(map(str, b)))", "def binpow(a, b):\n    if b == 0:\n        return 1\n    res = binpow(a, b // 2)\n    if b % 2:\n        return res * res * a\n    else:\n        return res * res\nT_C = int(input())\nfor _ in range(T_C):\n    (n, k, s) = map(int, input().split())\n    ans = []\n    sum = s\n    flag = True\n    for i in range(n):\n        rem = s % k\n        if rem != 0 and rem != 1 and (rem != k - 1):\n            print(-2)\n            flag = False\n            break\n        if k != 2 and s % k == k - 1:\n            rem = -1\n        ans.append(rem)\n        s = (s - rem) // k\n    s = 0\n    if not flag:\n        continue\n    for (i, digit) in enumerate(ans):\n        s += digit * binpow(k, i)\n    if sum != s:\n        print(-2)\n    else:\n        print(*ans)", "def bin_pow(a1, b1):\n    if b1 == 0:\n        return 1\n    res = bin_pow(a1, b1 // 2)\n    if b1 % 2:\n        return res * res * a1\n    else:\n        return res * res\ntes = int(input())\nwhile tes > 0:\n    tes -= 1\n    (n, k, s) = map(int, input().split())\n    tmp = s\n    b = []\n    for i in range(n):\n        rem = s % k\n        if rem != 0 and rem != 1 and (rem != k - 1):\n            print(-2)\n            break\n        if rem == k - 1 and k != 2:\n            rem = -1\n        b.append(rem)\n        s = (s - rem) // k\n    else:\n        sum = 0\n        for i in range(n):\n            sum += b[i] * bin_pow(k, i)\n        if sum != tmp:\n            print(-2)\n            continue\n        print(' '.join(map(str, b)))"]