["import math\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in range(1, n):\n        g = math.gcd(g, l[i])\n    print(n * g)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = a[0]\n    for x in a:\n        g = math.gcd(g, x)\n    print(n * g)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = a[0]\n    for x in a:\n        g = math.gcd(g, x)\n    print(n * g)", "from math import gcd\nt = int(input())\nfor ni in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    a = gcd(l[0], l[1])\n    for i in range(2, n):\n        a = gcd(a, l[i])\n    print(a * n)", "from math import gcd\n\ndef gcd_arr(arr):\n    g = gcd(arr[0], arr[1])\n    for i in range(2, len(arr)):\n        g = gcd(g, arr[i])\n    return g\nfor _ in range(int(input())):\n    n = int(input())\n    a = gcd_arr([int(x) for x in input().split()])\n    print(a * n)", "import math\na = int(input(''))\nfor i in range(a):\n    t = int(input(''))\n    h = [int(x) for x in input('').split()]\n    k = list(h)\n    k.sort()\n    j = k[0]\n    for g in k:\n        j = math.gcd(j, g)\n    print(j * t)", "import math\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    res = l[0]\n    for j in l:\n        res = math.gcd(res, j)\n    print(n * res)\n    t -= 1", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    res = l[0]\n    for j in l:\n        res = gcd(res, j)\n    print(n * res)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    res = l[0]\n    for j in l:\n        res = math.gcd(res, j)\n    print(n * res)", "def getgcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nfor tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    new = 0\n    change = 1\n    while change == 1:\n        a.sort()\n        for i in range(n - 1):\n            change = 0\n            new = getgcd(a[i], a[i + 1])\n            if a[i + 1] != new:\n                a[i + 1] = new\n                change = 1\n    print(sum(a))", "import math\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    res = a[0]\n    for i in a:\n        res = math.gcd(res, i)\n    print(res * n)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    res = a[0]\n    for i in a:\n        res = math.gcd(res, i)\n    print(res * n)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    x = l[0]\n    for i in l:\n        x = math.gcd(x, i)\n    print(x * n)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    x = a[0]\n    for i in a:\n        x = math.gcd(i, x)\n    print(x * n)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[0]\n    for i in a:\n        b = math.gcd(b, i)\n    print(n * b)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[0]\n    for i in a:\n        b = math.gcd(b, i)\n    print(n * b)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[0]\n    for i in a:\n        b = math.gcd(b, i)\n    print(n * b)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[0]\n    for i in a:\n        b = math.gcd(b, i)\n    print(n * b)", "import numpy as np\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = np.array(list(map(int, input().split())))\n    p = np.gcd.reduce(a)\n    print(n * p)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    temp = a[0]\n    for i in a:\n        temp = math.gcd(temp, i)\n    print(temp * n)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = a[0]\n    for x in a:\n        g = math.gcd(g, x)\n    print(n * g)", "for _ in range(int(input())):\n    import numpy as np\n    n = int(input())\n    a = np.array(list(map(int, input().split())))\n    p = np.gcd.reduce(a)\n    print(n * p)", "import numpy as np\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = np.array(list(map(int, input().split())))\n    p = np.gcd.reduce(a)\n    print(p * n)\n    t -= 1", "from math import gcd\n\ndef mn(b):\n    b.sort()\n    for w in range(1, len(b)):\n        b[w] = gcd(b[0], b[w])\n    return b\nT = int(input())\nfor i in range(0, T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = []\n    while True:\n        if c == a:\n            break\n        else:\n            c = tuple(a)\n            a = mn(a)\n            c = list(c)\n    sm = 0\n    for w in range(0, len(c)):\n        sm += c[w]\n    print(sm)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    mi = max(l) + 1\n    for i in range(n - 1):\n        gcd = math.gcd(l[i], l[i + 1])\n        mi = min(mi, gcd)\n    print(mi * n)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    mini = 10 ** 13\n    for i in range(n - 1):\n        gcd = math.gcd(a[i], a[i + 1])\n        mini = min(mini, gcd)\n    print(mini * len(a))", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    res = arr[0]\n    for i in range(1, n):\n        res = gcd(res, arr[i])\n    print(res * n)", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    res = arr[0]\n    for i in range(1, n):\n        res = gcd(res, arr[i])\n    print(res * n)", "def gcd(a, b):\n    rem = a % b\n    if rem == 0:\n        return b\n    else:\n        return gcd(b, rem)\n\ndef aa(a, n):\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(n * g)\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    aa(a, n)", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    res = arr[0]\n    for i in range(1, n):\n        res = gcd(res, arr[i])\n    print(res * n)", "from math import gcd\nfor _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    count = b[0]\n    for i in b:\n        count = gcd(i, count)\n    print(count * a)", "def gcd(a, b):\n    if b > a:\n        return gcd(b, a)\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mi = min(arr)\n    g = arr[0]\n    for ele in arr:\n        g = gcd(g, ele)\n    mi = min(g, mi)\n    ans = mi * n\n    print(ans)", "from math import gcd\n\ndef minimumgcd(arr, n):\n    g = arr[0]\n    for i in range(0, n):\n        g = gcd(g, arr[i])\n    return g\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    lowgcd = minimumgcd(arr, n)\n    print(n * lowgcd)\n    t -= 1", "from math import gcd\n\ndef minimumgcd(arr, n):\n    g = arr[0]\n    for i in range(0, n):\n        g = gcd(g, arr[i])\n    return g\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    lowgcd = minimumgcd(arr, n)\n    print(n * lowgcd)\n    t -= 1", "from math import gcd\n\ndef minimumgcd(arr, n):\n    g = arr[0]\n    for i in range(0, n):\n        g = gcd(g, arr[i])\n    return g\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    lowgcd = minimumgcd(arr, n)\n    print(n * lowgcd)\n    t -= 1", "def gcd(a, b):\n    rem = a % b\n    if rem == 0:\n        return b\n    else:\n        return gcd(b, rem)\n\ndef aa(a, n):\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(n * g)\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    aa(a, n)", "def gcd(a, b):\n    rem = a % b\n    if rem == 0:\n        return b\n    else:\n        return gcd(b, rem)\n\ndef aa(a, n):\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(n * g)\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    aa(a, n)", "def gcd(a, b):\n    if a % b == 0:\n        return b\n    else:\n        return gcd(b, a % b)\n\ndef kk(a, n):\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(n * g)\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    kk(a, n)", "def gcd(a, b):\n    rem = a % b\n    if rem == 0:\n        return b\n    else:\n        return gcd(b, rem)\n\ndef aa(a, n):\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(n * g)\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    aa(a, n)", "import math\ntests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    gcd = arr[0]\n    for j in arr:\n        gcd = math.gcd(gcd, j)\n    print(gcd * length)", "import math\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    r = l[0]\n    for i in l[1:]:\n        r = math.gcd(r, i)\n    print(n * r)\n    t -= 1", "import math\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    res = A[0]\n    for i in A[1:]:\n        res = math.gcd(res, i)\n    print(res * N)", "from math import gcd\nans = []\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    an = A[0]\n    for a in A[1:]:\n        an = gcd(a, an)\n    ans.append(N * an)\nprint(*ans, sep='\\n')", "ans = []\n\ndef gcd(a, b):\n    return gcd(b, a % b) if a % b else b\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    an = A[0]\n    for a in A[1:]:\n        an = gcd(a, an)\n    ans.append(N * an)\nprint(*ans, sep='\\n')", "from math import gcd\nn = int(input())\nfor i in range(n):\n    p = int(input())\n    a = list(map(int, input().split()))\n    for i in range(p):\n        a[0] = gcd(a[0], a[i])\n    print(a[0] * p)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef gcd(x, y):\n    r = x % y\n    if r == 0:\n        return y\n    else:\n        return gcd(y, r)\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = list(map(int, input().split()))\n    A = L[0]\n    for i in range(1, n):\n        A = gcd(A, L[i])\n    print(A * n)", "from math import gcd\nn = int(input())\nfor i in range(n):\n    x = int(input())\n    a = list(map(int, input().split()))\n    for j in range(1, x):\n        a[0] = gcd(a[0], a[j])\n    print(a[0] * x)", "from math import gcd\nn = int(input())\nfor i in range(n):\n    x = int(input())\n    a = list(map(int, input().split()))\n    for j in range(1, x):\n        a[0] = gcd(a[0], a[j])\n    print(a[0] * x)", "def gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    v = L[0]\n    for i in range(1, N):\n        v = gcd(v, L[i])\n    print(v * N)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    mingcd = float('inf')\n    for i in range(0, n - 1):\n        if arr[i] == 1:\n            temp = 1\n            break\n        temp = math.gcd(arr[i], arr[i + 1])\n        if temp == 1:\n            break\n        arr[i + 1] = temp\n        mingcd = min(mingcd, temp)\n    if temp == 1:\n        print(n)\n    else:\n        print(n * mingcd)", "def gcd(a, b):\n    if a == b:\n        return a\n    elif a == 0:\n        return b\n    elif b == 0:\n        return a\n    if a > b:\n        return gcd(b, a % b)\n    else:\n        return gcd(b % a, a)\nt = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = a[0]\n    for i in range(1, n):\n        k = gcd(k, a[i])\n    print(k * n)\n    t -= 1", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for j in range(1, n):\n        a[0] = gcd(a[0], a[j])\n    print(a[0] * n)", "import math\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    num1 = arr[0]\n    num2 = arr[1]\n    gcd = math.gcd(num1, num2)\n    for j in range(2, len(arr)):\n        gcd = math.gcd(gcd, arr[j])\n    print(gcd * N)", "from math import *\nv = int(input())\nfor i in range(v):\n    a = int(input())\n    l = list(map(int, input().split()))\n    gcd_min = 1000000000\n    for i in range(a - 1):\n        b = gcd(l[i], l[i - 1])\n        gcd_min = min(gcd_min, b)\n    print(gcd_min * a)", "import math\nt = int(input())\nfor q in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in range(1, n):\n        g = math.gcd(g, l[i])\n    print(g * n)", "import math\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    l = list(map(int, input().split()))\n    mini = float('inf')\n    idx = 0\n    for (i, val) in enumerate(l):\n        if val < mini:\n            mini = val\n            idx = i\n    flag = False\n    res = mini\n    x = mini\n    for (i, val) in enumerate(l):\n        if i != idx:\n            a = math.gcd(mini, val)\n            x = min(x, a)\n    print(x * len(l))", "def gcd(x, y):\n    if x > y:\n        while x % y != 0:\n            b = x % y\n            x = y\n            y = b\n        return y\n    else:\n        while y % x != 0:\n            b = y % x\n            y = x\n            x = b\n        return x\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    li = list(map(int, input().strip().split()))\n    a = sorted(li)\n    gc = gcd(a[0], a[1])\n    if a[0] == 1:\n        print(n)\n    else:\n        for m in a[2:]:\n            gc = gcd(gc, m)\n        print(n * gc)", "from math import *\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = 0\n    for j in range(n):\n        b = gcd(b, a[j])\n    print(b * n)", "from math import gcd\ntest_cases = int(input())\nfor t in range(test_cases):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        c = gcd(c, a[i])\n    print(c * n)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        c = math.gcd(c, a[i])\n    print(c * n)", "import math\ntest_case = int(input())\nfor i in range(test_case):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    gc = 0\n    for i in range(n):\n        gc = math.gcd(gc, arr[i])\n    print(gc * n)", "def gcd(A, B):\n    if A % B == 0:\n        return B\n    return gcd(B, A % B)\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = A[0]\n    for i in range(1, N):\n        if A[i] >= ans:\n            ans = gcd(A[i], ans)\n        else:\n            ans = gcd(ans, A[i])\n    print(ans * N)", "def gcd(A, B):\n    if A % B == 0:\n        return B\n    return gcd(B, A % B)\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = A[0]\n    for i in range(1, N):\n        if A[i] >= ans:\n            ans = gcd(A[i], ans)\n        else:\n            ans = gcd(ans, A[i])\n    print(ans * N)", "def gcd(A, B):\n    if A % B == 0:\n        return B\n    return gcd(B, A % B)\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = A[0]\n    for i in range(1, N):\n        if A[i] >= ans:\n            ans = gcd(A[i], ans)\n        else:\n            ans = gcd(ans, A[i])\n    print(ans * N)", "import math\nfor cc in range(int(input())):\n    length = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(length - 1):\n        gcd = math.gcd(gcd, a[i + 1])\n    print(gcd * length)", "import math\nfor cc in range(int(input())):\n    length = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(length - 1):\n        gcd = math.gcd(gcd, a[i + 1])\n    print(gcd * length)", "import math\nfor cc in range(int(input())):\n    length = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(length - 1):\n        gcd = math.gcd(gcd, a[i + 1])\n    print(gcd * length)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    gcd = math.gcd(l[0], l[1])\n    for i in range(2, n):\n        gcd = math.gcd(gcd, l[i])\n    print(gcd * n)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    gcd = math.gcd(l[0], l[1])\n    for i in range(2, n):\n        gcd = math.gcd(gcd, l[i])\n    print(gcd * n)", "import math\n\ndef find_gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    num1 = l[0]\n    num2 = l[1]\n    gcd = find_gcd(num1, num2)\n    for i in range(2, len(l)):\n        gcd = find_gcd(gcd, l[i])\n    print(gcd * n)", "import math\n\ndef gcd(m, n):\n    if n == 0:\n        return m\n    else:\n        return gcd(n, m % n)\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    l = list(map(int, input().split()))\n    res = l[0]\n    for i in range(len(l)):\n        res = gcd(res, l[i])\n    print(N * res)", "def findgcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return findgcd(y, x % y)\nT = int(input())\narr = []\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    num1 = arr[0]\n    num2 = arr[1]\n    gcd = findgcd(num1, num2)\n    for i in range(2, len(arr)):\n        gcd = findgcd(gcd, arr[i])\n    print(gcd * N)", "def findgcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return findgcd(y, x % y)\nT = int(input())\narr = []\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    num1 = arr[0]\n    num2 = arr[1]\n    gcd = findgcd(num1, num2)\n    for i in range(2, len(arr)):\n        gcd = findgcd(gcd, arr[i])\n    print(gcd * N)", "def gcd(m, n):\n    if n == 0:\n        return m\n    else:\n        return gcd(n, m % n)\nfor t in range(int(input())):\n    N = int(input())\n    l = list(map(int, input().split()))\n    res = l[0]\n    for i in range(len(l)):\n        res = gcd(res, l[i])\n    print(N * res)", "def gcd(m, n):\n    if n == 0:\n        return m\n    else:\n        return gcd(n, m % n)\nfor t in range(int(input())):\n    N = int(input())\n    l = list(map(int, input().split()))\n    res = l[0]\n    for i in range(len(l)):\n        res = gcd(res, l[i])\n    print(N * res)", "def gcd(m, n):\n    if n == 0:\n        return m\n    else:\n        return gcd(n, m % n)\nfor t in range(int(input())):\n    N = int(input())\n    l = list(map(int, input().split()))\n    res = l[0]\n    for i in range(len(l)):\n        res = gcd(res, l[i])\n    print(N * res)", "import math\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = arr[0]\n    for i in range(n - 1):\n        res = math.gcd(res, arr[i + 1])\n    print(res * n)", "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = arr[0]\n    for i in range(n - 1):\n        res = gcd(res, arr[i + 1])\n    print(res * n)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    c = l[0]\n    for i in range(1, n):\n        c = math.gcd(c, l[i])\n    print(c * n)", "import math\nn = int(input())\nfor i in range(n):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    v = l[0]\n    for i in range(1, n1):\n        v = math.gcd(v, l[i])\n    print(v * n1)", "import math\nn = int(input())\nfor i in range(n):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    v = l[0]\n    for i in range(1, n1):\n        v = math.gcd(v, l[i])\n    print(v * n1)", "def find_gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    num1 = l[0]\n    num2 = l[1]\n    gcd = find_gcd(num1, num2)\n    for i in range(2, len(l)):\n        gcd = find_gcd(gcd, l[i])\n    print(gcd * n)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = a[0]\n    for i in range(1, n):\n        c = math.gcd(c, a[i])\n    print(n * c)", "import math\nfor i in range(int(input())):\n    le = int(input())\n    l = list(map(int, input().split()))\n    gcd = math.gcd(l[0], l[1])\n    for j in range(2, le):\n        gcd = math.gcd(gcd, l[j])\n    print(gcd * le)"]