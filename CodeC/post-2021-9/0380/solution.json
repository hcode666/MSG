["from math import inf\nfrom collections import defaultdict\nfrom collections import OrderedDict\nfrom collections import Counter\nfrom collections import ChainMap\n\ndef getlist():\n    return list(map(int, input().split()))\n\ndef getinp():\n    return map(int, input().split())\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = getinp()\n        s = input()\n        if k == 1:\n            print(0) if '1' in s else print(1)\n        else:\n            different = 0\n            prev = ''\n            pre = [0] * (n + 1)\n            for i in range(n):\n                if prev:\n                    if prev != s[i]:\n                        different += 1\n                        prev = s[i]\n                else:\n                    prev = s[i]\n                pre[i] = different\n            if n == k:\n                diff = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    diff += 1\n                print(diff)\n            else:\n                minn = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    minn += 1\n                for i in range(1, n):\n                    if k + i - 1 < n:\n                        temp = pre[k + i - 1] - pre[i]\n                        if s[k + i - 1] == '0':\n                            temp += 1\n                    minn = min(temp, minn)\n                print(minn)\nmain()", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = list(input())\n    x = list()\n    y = list()\n    for i in range(0, a):\n        if i == 0:\n            x.append(0)\n        elif l[i - 1] == l[i]:\n            x.append(x[i - 1])\n        else:\n            x.append(x[i - 1] + 1)\n        if i >= b - 1:\n            if l[i] == '1':\n                y.append(x[i] - x[i - b + 1])\n            else:\n                y.append(x[i] - x[i - b + 1] + 1)\n    print(min(y))", "def T(S):\n    N = len(S)\n    x = 0\n    for j in range(N - 1):\n        if S[j] == '0' and S[j + 1] == '1':\n            x += 1\n        if S[j] == '1' and S[j + 1] == '0':\n            x += 1\n    return x\na = int(input())\nfor i in range(a):\n    (N, K) = map(int, input().split())\n    S = input()\n    x = T(S[:K])\n    y = 0\n    if x == 0:\n        if S[0] == '0':\n            y = 1\n        else:\n            y = 0\n    elif S[K - 1] == '1':\n        y = x\n    else:\n        y = x + 1\n    A = [y]\n    p = S[0]\n    q = S[K - 1]\n    for j in range(K, N):\n        if S[j] != q:\n            x += 1\n        if S[j - K + 1] != p:\n            x -= 1\n        q = S[j]\n        p = S[j - K + 1]\n        if q == '1':\n            A.append(x)\n        else:\n            A.append(x + 1)\n    ans = min(A)\n    print(ans)", "import sys\nsys.setrecursionlimit(10 ** 7)\nmod = 10 ** 9 + 7\n\ndef readInt():\n    return int(input())\n\ndef readIntList():\n    return list(map(int, input().split()))\n\ndef readStringList():\n    return list(input())\n\ndef readStringListWithSpace():\n    return list(input().split())\n\ndef readString():\n    return input()\n\ndef execute():\n    for _ in range(readInt()):\n        (n, k) = readIntList()\n        arr = readStringList()\n        (l, r, res, count) = (0, k - 1, n, 1)\n        for i in range(r):\n            if arr[i] != arr[i + 1]:\n                count += 1\n        res = min(res, count - 1 if arr[r] == '1' else count)\n        while r + 1 < n:\n            l += 1\n            if arr[l] != arr[l - 1]:\n                count -= 1\n            r += 1\n            if arr[r] != arr[r - 1]:\n                count += 1\n            res = min(res, count - 1 if arr[r] == '1' else count)\n        print(res)\nexecute()", "def T(S):\n    N = len(S)\n    x = 0\n    for j in range(N - 1):\n        if S[j] == '0' and S[j + 1] == '1':\n            x += 1\n        if S[j] == '1' and S[j + 1] == '0':\n            x += 1\n    return x\na = int(input())\nfor i in range(a):\n    (N, K) = map(int, input().split())\n    S = input()\n    x = T(S[:K])\n    y = 0\n    if x == 0:\n        if S[0] == '0':\n            y = 1\n        else:\n            y = 0\n    elif S[K - 1] == '1':\n        y = x\n    else:\n        y = x + 1\n    A = [y]\n    p = S[0]\n    q = S[K - 1]\n    for j in range(K, N):\n        if S[j] != q:\n            x += 1\n        if S[j - K + 1] != p:\n            x -= 1\n        q = S[j]\n        p = S[j - K + 1]\n        if q == '1':\n            A.append(x)\n        else:\n            A.append(x + 1)\n    ans = min(A)\n    print(ans)", "def T(S):\n    N = len(S)\n    x = 0\n    for j in range(N - 1):\n        if S[j] == '0' and S[j + 1] == '1':\n            x += 1\n        if S[j] == '1' and S[j + 1] == '0':\n            x += 1\n    return x\na = int(input())\nfor i in range(a):\n    (N, K) = map(int, input().split())\n    S = input()\n    x = T(S[:K])\n    y = 0\n    if x == 0:\n        if S[0] == '0':\n            y = 1\n        else:\n            y = 0\n    elif S[K - 1] == '1':\n        y = x\n    else:\n        y = x + 1\n    A = [y]\n    p = S[0]\n    q = S[K - 1]\n    for j in range(K, N):\n        if S[j] != q:\n            x += 1\n        if S[j - K + 1] != p:\n            x -= 1\n        q = S[j]\n        p = S[j - K + 1]\n        if q == '1':\n            A.append(x)\n        else:\n            A.append(x + 1)\n    ans = min(A)\n    print(ans)", "T = int(input())\nfor i in range(0, T):\n    (n, k) = map(int, input().split())\n    s = input()\n    segment = 1\n    l = 0\n    r = k - 1\n    ans = n\n    for i in range(0, r):\n        if s[i] != s[i + 1]:\n            segment += 1\n    if s[r] == '0':\n        ans = min(ans, segment)\n    else:\n        ans = min(ans, segment - 1)\n    while r + 1 < n:\n        l += 1\n        if s[l] != s[l - 1]:\n            segment -= 1\n        r += 1\n        if s[r] != s[r - 1]:\n            segment += 1\n        if s[r] == '0':\n            ans = min(ans, segment)\n        else:\n            ans = min(ans, segment - 1)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (N, k) = map(int, input().split())\n    S = input()\n    (l, r) = (0, k - 1)\n    ans = N\n    seg = 1\n    for i in range(1, k):\n        if S[i - 1] != S[i]:\n            seg += 1\n    if S[r] == '1':\n        ans = min(ans, seg - 1)\n    else:\n        ans = min(ans, seg)\n    while r + 1 < N:\n        (l, r) = (l + 1, r + 1)\n        if S[l - 1] != S[l]:\n            seg -= 1\n        if S[r - 1] != S[r]:\n            seg += 1\n        if S[r] == '1':\n            ans = min(ans, seg - 1)\n        else:\n            ans = min(ans, seg)\n    print(ans)", "from math import inf\nfrom collections import defaultdict\nfrom collections import OrderedDict\nfrom collections import Counter\nfrom collections import ChainMap\n\ndef getlist():\n    return list(map(int, input().split()))\n\ndef getinp():\n    return map(int, input().split())\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = getinp()\n        s = input()\n        if k == 1:\n            print(0) if '1' in s else print(1)\n        else:\n            different = 0\n            prev = ''\n            pre = [0] * (n + 1)\n            for i in range(n):\n                if prev:\n                    if prev != s[i]:\n                        different += 1\n                        prev = s[i]\n                else:\n                    prev = s[i]\n                pre[i] = different\n            if n == k:\n                diff = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    diff += 1\n                print(diff)\n            else:\n                minn = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    minn += 1\n                for i in range(1, n):\n                    if k + i - 1 < n:\n                        temp = pre[k + i - 1] - pre[i]\n                        if s[k + i - 1] == '0':\n                            temp += 1\n                    minn = min(temp, minn)\n                print(minn)\nmain()", "from math import inf\nfrom collections import defaultdict\nfrom collections import OrderedDict\nfrom collections import Counter\nfrom collections import ChainMap\n\ndef getlist():\n    return list(map(int, input().split()))\n\ndef getinp():\n    return map(int, input().split())\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = getinp()\n        s = input()\n        if k == 1:\n            print(0) if '1' in s else print(1)\n        else:\n            different = 0\n            prev = ''\n            pre = [0] * (n + 1)\n            for i in range(n):\n                if prev:\n                    if prev != s[i]:\n                        different += 1\n                        prev = s[i]\n                else:\n                    prev = s[i]\n                pre[i] = different\n            if n == k:\n                diff = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    diff += 1\n                print(diff)\n            else:\n                minn = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    minn += 1\n                for i in range(1, n):\n                    if k + i - 1 < n:\n                        temp = pre[k + i - 1] - pre[i]\n                        if s[k + i - 1] == '0':\n                            temp += 1\n                    minn = min(temp, minn)\n                print(minn)\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == 1:\n        if '1' in s:\n            print(0)\n        else:\n            print(1)\n    else:\n        c = 0\n        pr = s[0]\n        for i in range(k):\n            if pr != s[i]:\n                c += 1\n                pr = s[i]\n        if s[k - 1] != '1':\n            ans = c + 1\n        else:\n            ans = c\n        for i in range(n - k):\n            f = 0\n            if s[i + k] != s[i + k - 1]:\n                c += 1\n            if s[i + k] != '1':\n                f = 1\n            if s[i] != s[i + 1]:\n                c -= 1\n            ans = min(ans, c + f)\n        print(ans)", "from math import inf\nfrom collections import defaultdict\nfrom collections import OrderedDict\nfrom collections import Counter\nfrom collections import ChainMap\n\ndef getlist():\n    return list(map(int, input().split()))\n\ndef getinp():\n    return map(int, input().split())\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = getinp()\n        s = input()\n        if k == 1:\n            print(0) if '1' in s else print(1)\n        else:\n            different = 0\n            prev = ''\n            pre = [0] * (n + 1)\n            for i in range(n):\n                if prev:\n                    if prev != s[i]:\n                        different += 1\n                        prev = s[i]\n                else:\n                    prev = s[i]\n                pre[i] = different\n            if n == k:\n                diff = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    diff += 1\n                print(diff)\n            else:\n                minn = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    minn += 1\n                for i in range(1, n):\n                    if k + i - 1 < n:\n                        temp = pre[k + i - 1] - pre[i]\n                        if s[k + i - 1] == '0':\n                            temp += 1\n                    minn = min(temp, minn)\n                print(minn)\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == 1:\n        if '1' in s:\n            print(0)\n        else:\n            print(1)\n    else:\n        c = 0\n        pr = s[0]\n        for i in range(k):\n            if pr != s[i]:\n                c += 1\n                pr = s[i]\n        if s[k - 1] != '1':\n            ans = c + 1\n        else:\n            ans = c\n        for i in range(n - k):\n            f = 0\n            if s[i + k] != s[i + k - 1]:\n                c += 1\n            if s[i + k] != '1':\n                f = 1\n            if s[i] != s[i + 1]:\n                c -= 1\n            ans = min(ans, c + f)\n        print(ans)", "import sys\nimport math\nfrom math import inf\n\ndef main():\n    (t, y, z, i, n, ct, x, p, j, max1, o, ans, z1, k) = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n    t = int(input())\n    while t > 0:\n        t -= 1\n        (n, k) = map(int, input().split())\n        s = input()\n        (i, j, x) = (0, 0, 0)\n        if k == 1:\n            ans = 1\n            for i in range(n):\n                if s[i] == '1':\n                    ans = 0\n            print(ans)\n            continue\n        ans = inf\n        while j < n:\n            if j - i + 1 < k:\n                if j > 0 and s[j] != s[j - 1]:\n                    x += 1\n            elif j - i + 1 == k:\n                if j > 0 and s[j] != s[j - 1]:\n                    x += 1\n                if x == 0 and s[j] == '0' and (s[i] == '0'):\n                    ans = min(ans, 1)\n                elif s[j] == '0':\n                    ans = min(ans, x + 1)\n                else:\n                    ans = min(ans, x)\n                if i < n - 1 and s[i] != s[i + 1]:\n                    x -= 1\n                i += 1\n            j += 1\n        print(ans)\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == 1:\n        if '1' in s:\n            print(0)\n        else:\n            print(1)\n    else:\n        c = 0\n        pr = s[0]\n        for i in range(k):\n            if pr != s[i]:\n                c += 1\n                pr = s[i]\n        if s[k - 1] != '1':\n            ans = c + 1\n        else:\n            ans = c\n        for i in range(n - k):\n            f = 0\n            if s[i + k] != s[i + k - 1]:\n                c += 1\n            if s[i + k] != '1':\n                f = 1\n            if s[i] != s[i + 1]:\n                c -= 1\n            ans = min(ans, c + f)\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (N, K) = [int(x) for x in input().split(' ')]\n    s = ''.join([x for x in input().split(' ')])\n    ls = list(s)\n    pref = [0 for _ in range(len(ls))]\n    for i in range(1, len(ls)):\n        pref[i] = pref[i - 1]\n        if ls[i] != ls[i - 1]:\n            pref[i] += 1\n    mn = 9999999999999999999\n    for i in range(N - K + 1):\n        if s[i + K - 1] == '1':\n            mn = min(mn, pref[i + K - 1] - pref[i])\n        else:\n            mn = min(mn, pref[i + K - 1] - pref[i] + 1)\n    print(mn)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == 1:\n        if '1' in s:\n            print(0)\n        else:\n            print(1)\n    else:\n        c = 0\n        pr = s[0]\n        for i in range(k):\n            if pr != s[i]:\n                c += 1\n                pr = s[i]\n        if s[k - 1] != '1':\n            ans = c + 1\n        else:\n            ans = c\n        for i in range(n - k):\n            f = 0\n            if s[i + k] != s[i + k - 1]:\n                c += 1\n            if s[i + k] != '1':\n                f = 1\n            if s[i] != s[i + 1]:\n                c -= 1\n            ans = min(ans, c + f)\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    arr = [0] * (n + 1)\n    for i in range(n):\n        if i == 0:\n            arr[i + 1] = 1\n        elif s[i] != s[i - 1]:\n            arr[i + 1] = arr[i] + 1\n        else:\n            arr[i + 1] = arr[i]\n    m = k\n    for j in range(n - k + 1):\n        ss = j + 1\n        e = j + k\n        if s[j + k - 1] == '0':\n            if ss == 0:\n                c = arr[e]\n                m = min(m, c)\n            elif arr[e] == arr[ss - 1]:\n                c = 1\n                m = min(m, c)\n            elif arr[ss] == arr[ss - 1]:\n                c = arr[e] - arr[ss - 1] + 1\n                m = min(m, c)\n                pass\n            else:\n                c = arr[e] - arr[ss - 1]\n                m = min(m, c)\n        elif ss == 0:\n            c = arr[e] - 1\n            m = min(m, c)\n        elif arr[e] == arr[ss - 1]:\n            c = 0\n            m = min(m, c)\n        elif arr[ss] == arr[ss - 1]:\n            c = arr[e] - arr[ss - 1] - 1 + 1\n            m = min(m, c)\n        else:\n            c = arr[e] - arr[ss - 1] - 1\n            m = min(m, c)\n    print(m)", "def getList(val=1):\n    if not val:\n        return list(map(str, input().split()))\n    return list(map(int, input().split()))\n\ndef getTuple(val=1):\n    if not val:\n        return map(str, input().split())\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = input()\n    if k == 1:\n        if '1' in arr:\n            print(0)\n        else:\n            print(1)\n        continue\n    seg = 0\n    prev = ''\n    for i in range(k):\n        if arr[i] != prev:\n            seg += 1\n        prev = arr[i]\n    ans = seg\n    if prev == '1':\n        ans = min(ans, seg - 1)\n    for i in range(1, len(arr)):\n        j = i + k - 1\n        if j >= len(arr):\n            break\n        if arr[j] != arr[j - 1]:\n            seg += 1\n        if arr[i] != arr[i - 1]:\n            seg -= 1\n        if arr[j] == '1':\n            ans = min(ans, seg - 1)\n        ans = min(ans, seg)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == 1:\n        if '1' in s:\n            print(0)\n        else:\n            print(1)\n    else:\n        c = 0\n        pr = s[0]\n        for i in range(k):\n            if pr != s[i]:\n                c += 1\n                pr = s[i]\n        if s[k - 1] != '1':\n            ans = c + 1\n        else:\n            ans = c\n        for i in range(n - k):\n            f = 0\n            if s[i + k] != s[i + k - 1]:\n                c += 1\n            if s[i + k] != '1':\n                f = 1\n            if s[i] != s[i + 1]:\n                c -= 1\n            ans = min(ans, c + f)\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == 1:\n        print(0) if '1' in s else print(1)\n    else:\n        different = 0\n        prev = ''\n        pre = [0] * (n + 1)\n        for i in range(n):\n            if prev:\n                if prev != s[i]:\n                    different += 1\n                    prev = s[i]\n            else:\n                prev = s[i]\n            pre[i] = different\n        if n == k:\n            diff = pre[k - 1] - pre[0]\n            if s[k - 1] == '0':\n                diff += 1\n            print(diff)\n        else:\n            minn = pre[k - 1] - pre[0]\n            if s[k - 1] == '0':\n                minn += 1\n            for i in range(1, n):\n                if k + i - 1 < n:\n                    temp = pre[k + i - 1] - pre[i]\n                    if s[k + i - 1] == '0':\n                        temp += 1\n                minn = min(temp, minn)\n            print(minn)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    l1 = []\n    cnt = 0\n    if k * '1' in s:\n        print(0)\n    elif k * '0' in s:\n        print(1)\n    else:\n        for c in range(0, k):\n            if c == 0:\n                continue\n            elif s[c] == s[c - 1]:\n                continue\n            else:\n                cnt += 1\n        if s[k - 1] == '0':\n            l1.append(cnt + 1)\n        else:\n            l1.append(cnt)\n        for h in range(1, n - k + 1):\n            j = h + k - 1\n            if s[h - 1] != s[h] and s[j - 1] == s[j]:\n                cnt -= 1\n            if s[h - 1] == s[h] and s[j - 1] != s[j]:\n                cnt += 1\n            if s[j] == '0':\n                l1.append(cnt + 1)\n            else:\n                l1.append(cnt)\n        print(min(l1))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    s1 = '0' * k\n    s2 = '1' * k\n    if s2 in s:\n        print('0')\n    elif s1 in s:\n        print('1')\n    else:\n        cnt = 0\n        l1 = []\n        for c in range(0, k):\n            if c == 0:\n                continue\n            elif s[c] == s[c - 1]:\n                continue\n            else:\n                cnt += 1\n        if s[k - 1] == '0':\n            l1.append(cnt + 1)\n        else:\n            l1.append(cnt)\n        for h in range(1, n - k + 1):\n            j = h + k - 1\n            if s[h - 1] != s[h] and s[j - 1] == s[j]:\n                cnt -= 1\n            if s[h - 1] == s[h] and s[j - 1] != s[j]:\n                cnt += 1\n            if s[j] == '0':\n                l1.append(cnt + 1)\n            else:\n                l1.append(cnt)\n        print(min(l1))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    s1 = '0' * k\n    s2 = '1' * k\n    if s2 in s:\n        print('0')\n    elif s1 in s:\n        print('1')\n    else:\n        cnt = 0\n        l1 = []\n        for c in range(0, k):\n            if c == 0:\n                continue\n            elif s[c] == s[c - 1]:\n                continue\n            else:\n                cnt += 1\n        if s[k - 1] == '0':\n            l1.append(cnt + 1)\n        else:\n            l1.append(cnt)\n        for h in range(1, n - k + 1):\n            j = h + k - 1\n            if s[h - 1] != s[h] and s[j - 1] == s[j]:\n                cnt -= 1\n            if s[h - 1] == s[h] and s[j - 1] != s[j]:\n                cnt += 1\n            if s[j] == '0':\n                l1.append(cnt + 1)\n            else:\n                l1.append(cnt)\n        print(min(l1))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    l1 = []\n    cnt = 0\n    if k * '1' in s:\n        print(0)\n    elif k * '0' in s:\n        print(1)\n    else:\n        for c in range(0, k):\n            if c == 0:\n                continue\n            elif s[c] == s[c - 1]:\n                continue\n            else:\n                cnt += 1\n        if s[k - 1] == '0':\n            l1.append(cnt + 1)\n        else:\n            l1.append(cnt)\n        for h in range(1, n - k + 1):\n            j = h + k - 1\n            if s[h - 1] != s[h] and s[j - 1] == s[j]:\n                cnt -= 1\n            if s[h - 1] == s[h] and s[j - 1] != s[j]:\n                cnt += 1\n            if s[j] == '0':\n                l1.append(cnt + 1)\n            else:\n                l1.append(cnt)\n        print(min(l1))", "T = int(input())\nfor _ in range(T):\n    (N, k) = map(int, input().split())\n    S = input()\n    (l, r) = (0, k - 1)\n    ans = N\n    seg = 1\n    for i in range(1, k):\n        if S[i - 1] != S[i]:\n            seg += 1\n    if S[r] == '1':\n        ans = min(ans, seg - 1)\n    else:\n        ans = min(ans, seg)\n    while r + 1 < N:\n        (l, r) = (l + 1, r + 1)\n        if S[l - 1] != S[l]:\n            seg -= 1\n        if S[r - 1] != S[r]:\n            seg += 1\n        if S[r] == '1':\n            ans = min(ans, seg - 1)\n        else:\n            ans = min(ans, seg)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    b = input()\n    t = []\n    c = 0\n    for i in range(k - 1):\n        if b[i] != b[i + 1] and b[i] == '1' and (b[i + 1] == '0'):\n            c += 2\n    if b[0] == '0':\n        c += 1\n    t.append(c)\n    l = b[0]\n    r = b[k - 1]\n    for i in range(n - k):\n        if b[i + 1] != b[i]:\n            c -= 1\n        if b[k + i] != b[k + i - 1] and b[k + i - 1] == '1' and (b[i + k] == '0'):\n            c += 2\n        t.append(c)\n    print(min(t))", "def getlist():\n    return list(map(int, input().split()))\n\ndef getinp():\n    return map(int, input().split())\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = getinp()\n        s = input()\n        if k == 1:\n            print(0) if '1' in s else print(1)\n        else:\n            different = 0\n            prev = ''\n            pre = [0] * (n + 1)\n            for i in range(n):\n                if prev:\n                    if prev != s[i]:\n                        different += 1\n                        prev = s[i]\n                else:\n                    prev = s[i]\n                pre[i] = different\n            if n == k:\n                diff = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    diff += 1\n                print(diff)\n            else:\n                minn = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    minn += 1\n                for i in range(1, n):\n                    if k + i - 1 < n:\n                        temp = pre[k + i - 1] - pre[i]\n                        if s[k + i - 1] == '0':\n                            temp += 1\n                    minn = min(temp, minn)\n                print(minn)\nmain()", "def getlist():\n    return list(map(int, input().split()))\n\ndef getinp():\n    return map(int, input().split())\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = getinp()\n        s = input()\n        if k == 1:\n            print(0) if '1' in s else print(1)\n        else:\n            different = 0\n            prev = ''\n            pre = [0] * (n + 1)\n            for i in range(n):\n                if prev:\n                    if prev != s[i]:\n                        different += 1\n                        prev = s[i]\n                else:\n                    prev = s[i]\n                pre[i] = different\n            if n == k:\n                diff = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    diff += 1\n                print(diff)\n            else:\n                minn = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    minn += 1\n                for i in range(1, n):\n                    if k + i - 1 < n:\n                        temp = pre[k + i - 1] - pre[i]\n                        if s[k + i - 1] == '0':\n                            temp += 1\n                    minn = min(temp, minn)\n                print(minn)\nmain()", "from math import inf\nfrom collections import defaultdict\nfrom collections import OrderedDict\nfrom collections import Counter\nfrom collections import ChainMap\n\ndef getlist():\n    return list(map(int, input().split()))\n\ndef getinp():\n    return map(int, input().split())\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = getinp()\n        s = input()\n        if k == 1:\n            print(0) if '1' in s else print(1)\n        else:\n            different = 0\n            prev = ''\n            pre = [0] * (n + 1)\n            for i in range(n):\n                if prev:\n                    if prev != s[i]:\n                        different += 1\n                        prev = s[i]\n                else:\n                    prev = s[i]\n                pre[i] = different\n            if n == k:\n                diff = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    diff += 1\n                print(diff)\n            else:\n                minn = pre[k - 1] - pre[0]\n                if s[k - 1] == '0':\n                    minn += 1\n                for i in range(1, n):\n                    if k + i - 1 < n:\n                        temp = pre[k + i - 1] - pre[i]\n                        if s[k + i - 1] == '0':\n                            temp += 1\n                    minn = min(temp, minn)\n                print(minn)\nmain()", "import sys\nimport math\nfrom math import inf\n\ndef main():\n    (t, y, z, i, n, ct, x, p, j, max1, o, ans, z1, k) = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n    t = int(input())\n    while t > 0:\n        t -= 1\n        (n, k) = map(int, input().split())\n        s = input()\n        (i, j, x) = (0, 0, 0)\n        if k == 1:\n            ans = 1\n            for i in range(n):\n                if s[i] == '1':\n                    ans = 0\n            print(ans)\n            continue\n        ans = inf\n        while j < n:\n            if j - i + 1 < k:\n                if j > 0 and s[j] != s[j - 1]:\n                    x += 1\n            elif j - i + 1 == k:\n                if j > 0 and s[j] != s[j - 1]:\n                    x += 1\n                if x == 0 and s[j] == '0' and (s[i] == '0'):\n                    ans = min(ans, 1)\n                elif s[j] == '0':\n                    ans = min(ans, x + 1)\n                else:\n                    ans = min(ans, x)\n                if i < n - 1 and s[i] != s[i + 1]:\n                    x -= 1\n                i += 1\n            j += 1\n        print(ans)\nmain()", "import sys\nimport math\nfrom math import inf\n\ndef main():\n    (t, y, z, i, n, ct, x, p, j, max1, o, ans, z1, k) = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n    t = int(input())\n    while t > 0:\n        t -= 1\n        (n, k) = map(int, input().split())\n        s = input()\n        (i, j, x) = (0, 0, 0)\n        if k == 1:\n            ans = 1\n            for i in range(n):\n                if s[i] == '1':\n                    ans = 0\n            print(ans)\n            continue\n        ans = inf\n        while j < n:\n            if j - i + 1 < k:\n                if j > 0 and s[j] != s[j - 1]:\n                    x += 1\n            elif j - i + 1 == k:\n                if j > 0 and s[j] != s[j - 1]:\n                    x += 1\n                if x == 0 and s[j] == '0' and (s[i] == '0'):\n                    ans = min(ans, 1)\n                elif s[j] == '0':\n                    ans = min(ans, x + 1)\n                else:\n                    ans = min(ans, x)\n                if i < n - 1 and s[i] != s[i + 1]:\n                    x -= 1\n                i += 1\n            j += 1\n        print(ans)\nmain()", "def findOps(n, s):\n    cnt = 0\n    ops = [0] * n\n    for i in range(1, n):\n        ops[i] = ops[i - 1] + int(s[i - 1] != s[i])\n    return ops\n\ndef solve(n, k, s):\n    ops = findOps(n, s)\n    res = float('inf')\n    l = 0\n    for r in range(k - 1, n):\n        res = min(res, ops[r] - ops[l] + int(s[r] != '1'))\n        l += 1\n    return res\nt = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split(' ')))\n    s = input()\n    print(solve(n, k, s))", "def preFlip(n, k, s):\n    ans = n\n    blocks = 1\n    for i in range(1, k):\n        blocks += s[i] != s[i - 1]\n    if s[k - 1] == '1':\n        ans = blocks - 1\n    else:\n        ans = blocks\n    for i in range(k, n):\n        blocks += s[i] != s[i - 1]\n        blocks -= s[i - k] != s[i - k + 1]\n        if s[i] == '1':\n            ans = min(ans, blocks - 1)\n        else:\n            ans = min(ans, blocks)\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    print(preFlip(n, k, s))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    cnt = 0\n    l = []\n    if k * '1' in s:\n        print(0)\n    elif k * '0' in s:\n        print(1)\n    else:\n        for h in range(0, k):\n            if h == 0:\n                continue\n            elif s[h] == s[h - 1]:\n                continue\n            else:\n                cnt += 1\n        if s[k - 1] == '0':\n            l.append(cnt + 1)\n        else:\n            l.append(cnt)\n        for i in range(1, n - k + 1):\n            j = i + k - 1\n            if s[i - 1] != s[i] and s[j - 1] == s[j]:\n                cnt -= 1\n            if s[i - 1] == s[i] and s[j - 1] != s[j]:\n                cnt += 1\n            if s[j] == '0':\n                l.append(cnt + 1)\n            else:\n                l.append(cnt)\n        print(min(l))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if '1' * k in s:\n        print(0)\n    elif '0' * k in s:\n        print(1)\n    else:\n        bit = 0\n        op = 0\n        ans = n\n        operations = [0] * n\n        for i in range(1, n):\n            operations[i] = operations[i - 1] + int(s[i] != s[i - 1])\n            if i >= k - 1:\n                ans = min(ans, operations[i] - operations[i - k + 1] + int(s[i] == '0'))\n        print(ans)", "a = int(input())\nfor i in range(a):\n    (n, p) = map(int, input().split())\n    b = input()\n    co = 0\n    j = []\n    g = 0\n    for i in range(n):\n        if b[i] == '0':\n            if g == 1:\n                j.append([co, 1])\n                co = 0\n            co += 1\n            g = 0\n        if b[i] == '1':\n            if g == 1:\n                j.append([co, 0])\n                co = 0\n            co += 1\n            g = 0\n        if i != len(b) - 1:\n            if b[i] == '0' and b[i + 1] == '1':\n                g = 1\n            if b[i] == '1' and b[i + 1] == '0':\n                g = 1\n    if b[-1] == '0':\n        j.append([co, 0])\n    else:\n        j.append([co, 1])\n    co = 0\n    size = 10 ** 6\n    l = 0\n    r = 0\n    si = 0\n    su = 0\n    while r < len(j):\n        if su < p:\n            su += j[r][0]\n            si += 1\n            r += 1\n        if su >= p:\n            if size > si and j[r - 1][1] == 1:\n                size = si - 1\n            elif size > si:\n                size = si\n            while su >= p:\n                su -= j[l][0]\n                l += 1\n                si -= 1\n            if size > si and j[r - 1][1] == 1:\n                size = si\n            elif size > si + 1 and j[r - 1][1] == 0:\n                size = si + 1\n        if size == 0:\n            break\n    print(size)", "import os.path\nfrom math import *\nfrom collections import *\nfrom random import *\nfrom statistics import *\nfrom re import *\nimport time\nimport sys\nfrom itertools import *\nmod = 1000000007\nMin = float('-inf')\nMax = float('inf')\n\ndef prmp(li):\n    return sys.stdout.write(' '.join(map(str, li)) + '\\n')\n\ndef nl(n):\n    return sys.stdout.write(list(map(int, str(n))))\n\ndef sl(st):\n    return sys.stdout.write(list(st.split()))\n\ndef prli(li):\n    return sys.stdout.write(*li)\n\ndef prsli(li):\n    return sys.stdout.write(*sorted(li))\n\ndef binToDec(st):\n    return sys.stdout.write(int(st, 2))\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef ip():\n    return int(sys.stdin.readline())\n\ndef gt_bit(val, bit_idx):\n    return val & 1 << bit_idx\n\ndef st_bit(val, bit_idx):\n    return val | 1 << bit_idx\n\ndef unst_bit(val, bit_idx):\n    return val & ~(1 << bit_idx)\n\ndef tggl_bit(val, bit_idx):\n    return val ^ 1 << bit_idx\n\ndef comp(n):\n    return ~num\n\ndef slsb_(n):\n    n &= n - 1\n    return n\n\ndef lsb_(n):\n    n &= -n\n    print(n)\n\ndef div1(n):\n    return n >> 1\n\ndef mul2(n):\n    return num << 1\n\ndef sieve_(n):\n    li = []\n    for i in range(2, n + 1):\n        if i not in li:\n            print(i)\n            for j in range(i * i, n + 1, i):\n                li.append(j)\n    return li\n\ndef lcm_(x, y):\n    if x > y:\n        maxi = x\n    else:\n        maxi = y\n    while True:\n        if maxi % x == 0 and maxi % y == 0:\n            lcm = maxi\n            break\n        maxi += 1\n    return lcm\n\ndef binomial(n, k):\n    return 1 if k == 0 else 0 if n == 0 else Binomial(n - 1, k) + Binomial(n - 1, k - 1)\n\ndef binS(arr, x):\n    l = 0\n    r = len(arr) - 1\n    while l <= r:\n        mid = (l + r) // 2\n        if arr[mid] == x:\n            return mid\n        elif x < arr[mid]:\n            r = mid - 1\n        elif x > arr[mid]:\n            l = mid + 1\n    return -1\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef solve():\n    ans = float('inf')\n    (a, b) = map(int, input().split())\n    s = input()\n    arr = [0] * a\n    c = 0\n    for i in range(1, a):\n        if s[i - 1] != s[i]:\n            c += 1\n            arr[i] = c\n        else:\n            arr[i] = c\n    arr[0] = 0\n    for i in range(a - 1, -1, -1):\n        if i - (b - 1) < 0:\n            break\n        ch = arr[i] - arr[i - (b - 1)]\n        if s[i] == '0':\n            ch += 1\n        ans = min(ans, ch)\n    return ans\n\ndef LCP(arr, n):\n    if n == 0:\n        return ''\n    if n == 1:\n        return arr[0]\n    arr.sort()\n    en = min(len(arr[0]), len(arr[n - 1]))\n    fr = (arr[0], last) = arr[n - 1]\n    i = 0\n    while i < en and fr[i] == last(i):\n        i += 1\n    pre = fr.substr(0, i)\n    return pre\nt = int(input())\nwhile t:\n    print(solve())\n    t -= 1", "for g in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (cnt, ans) = (0, float('inf'))\n    a = [0] * n\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            cnt += 1\n            a[i] = cnt\n        else:\n            a[i] = cnt\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        f = a[i] - a[i - (k - 1)]\n        if s[i] == '0':\n            f += 1\n        ans = min(ans, f)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (N, k) = map(int, input().split(' '))\n    S = input()\n    (cnt, ans) = (0, float('inf'))\n    arr = [0] * N\n    for i in range(1, N):\n        if S[i - 1] != S[i]:\n            cnt += 1\n            arr[i] = cnt\n        else:\n            arr[i] = cnt\n    for i in range(N - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        f = arr[i] - arr[i - (k - 1)]\n        if S[i] == '0':\n            f += 1\n        ans = min(ans, f)\n    print(ans)", "def blocks(s, k):\n    blk = 0\n    for i in range(k):\n        if i + 1 < k:\n            if s[i] != s[i + 1]:\n                blk += 1\n    blk += 1\n    return blk\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = str(input())\n    l = []\n    blok = blocks(s, k)\n    for i in range(n):\n        if i + k - 1 < n:\n            if int(s[i + k - 1]) == 0:\n                l.append(blok)\n            else:\n                l.append(blok - 1)\n        if i + k < n:\n            if s[i] != s[i + 1]:\n                blok -= 1\n            if s[i + k - 1] != s[i + k]:\n                blok += 1\n    print(min(l))", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = n\n    count = 0\n    for i in range(0, k - 1):\n        if s[i] != s[i + 1]:\n            count += 1\n    if s[k - 1] == '0':\n        ans = min(ans, count + 1)\n    else:\n        ans = min(ans, count)\n    for i in range(k - 1, n - 1):\n        if s[i] != s[i + 1]:\n            count += 1\n        if s[i - k + 1] != s[i - k + 2]:\n            count -= 1\n        if s[i + 1] == '0':\n            ans = min(ans, count + 1)\n        else:\n            ans = min(ans, count)\n    if s[n - 1] == '0':\n        ans = min(ans, count + 1)\n    else:\n        ans = min(ans, count)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    segment = 1\n    mini = n\n    for i in range(1, k):\n        if s[i] != s[i - 1]:\n            segment += 1\n    if s[k - 1] == '0':\n        mini = min(segment, mini)\n    else:\n        mini = min(segment - 1, mini)\n    l = 1\n    for r in range(k, n):\n        if s[l] != s[l - 1]:\n            segment -= 1\n        if s[r] != s[r - 1]:\n            segment += 1\n        if s[r] == '0':\n            mini = min(segment, mini)\n        else:\n            mini = min(segment - 1, mini)\n        l += 1\n    print(mini)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = n\n    blocks = 1\n    for i in range(1, k):\n        blocks += s[i] != s[i - 1]\n    if s[k - 1] == '1':\n        ans = blocks - 1\n    else:\n        ans = blocks\n    for i in range(k, n):\n        blocks += s[i] != s[i - 1]\n        blocks -= s[i - k] != s[i - k + 1]\n        if s[i] == '1':\n            ans = min(ans, blocks - 1)\n        else:\n            ans = min(ans, blocks)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (N, k) = map(int, input().split(' '))\n    S = input()\n    (cnt, ans) = (0, float('inf'))\n    arr = [0] * N\n    for i in range(1, N):\n        if S[i - 1] != S[i]:\n            cnt += 1\n            arr[i] = cnt\n        else:\n            arr[i] = cnt\n    for i in range(N - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        f = arr[i] - arr[i - (k - 1)]\n        if S[i] == '0':\n            f += 1\n        ans = min(ans, f)\n    print(ans)", "test = int(input())\nfor _ in range(test):\n    (n, k) = map(int, input().split())\n    s = input()\n    arr = [0 for i in range(n)]\n    cn = 0\n    x = 999999\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            cn += 1\n            arr[i] = cn\n        else:\n            arr[i] = cn\n    arr[0] = 0\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        f = arr[i] - arr[i - (k - 1)]\n        if s[i] == '0':\n            f += 1\n        x = min(x, f)\n    print(x)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    r = 2 * s.count('10', 0, k) + (s[0] == '0')\n    t = r - (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:-1]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    g = lambda x: s.count(x, 0, k)\n    t = g('01') + g('10')\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:-1]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    g = lambda x: s.count(x, 0, k)\n    t = g('01') + g('10')\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:-1]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    t = sum((s.count(x, 0, k) for x in ('01', '10')))\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:-1]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "def sss(arr, x):\n    n = len(arr)\n    curr_sum = 0\n    start = 0\n    end = 0\n    while end < n:\n        while curr_sum < x and end < n:\n            curr_sum += arr[end]\n            end += 1\n        while curr_sum - arr[start] >= x and start <= end:\n            curr_sum -= arr[start]\n            start += 1\n        if curr_sum >= x:\n            yield (start, end - start)\n        if start < end:\n            curr_sum -= arr[start]\n            start += 1\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    counts = []\n    z_or_o = []\n    z = s[0] == '0'\n    count = 0\n    for a in s:\n        if a == '0' and z:\n            count += 1\n        elif a == '1' and (not z):\n            count += 1\n        else:\n            counts.append(count)\n            if z:\n                z_or_o.append(True)\n            else:\n                z_or_o.append(False)\n            count = 1\n            z = not z\n    counts.append(count)\n    if z:\n        z_or_o.append(True)\n    else:\n        z_or_o.append(False)\n    costs = []\n    for (start, l) in sss(counts, k):\n        cost = l - 1\n        if z_or_o[start + l - 1]:\n            cost += 1\n        costs.append(cost)\n    print(min(costs))", "for _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    s = [int(i) for i in input()]\n    (lt, rt) = (-1, 0)\n    ans = 1000000000000000.0\n    win = 0\n    while rt < n:\n        if lt >= 0 and s[lt] != s[lt + 1]:\n            win -= 1\n        if rt > 0 and s[rt] != s[rt - 1]:\n            win += 1\n        rt += 1\n        if rt - lt > k:\n            lt += 1\n            if rt - lt == k:\n                ans = min(ans, win + int(s[rt - 1] == 0))\n    print(ans)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    s = s[:-1]\n    p = sum((x != y for (x, y) in zip(s, s[1:k])))\n    r = p + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:]):\n        p += (x != y) - (u != v)\n        r = min(r, p + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    t = s.count('01', 0, k) + s.count('10', 0, k)\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:-1]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    s = s[:-1]\n    t = s.count('01', 0, k) + s.count('10', 0, k)\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    t = s.count('01', 0, k) + s.count('10', 0, k)\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:-1]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    t = s.count('01', 0, k) + s.count('10', 0, k)\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:-1]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    s = s[:-1]\n    t = s.count('01', 0, k) + s.count('10', 0, k)\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (t, s) in zip(f, f):\n    (n, k) = map(int, t.split())\n    t = s.count('01', 0, k) + s.count('10', 0, k)\n    r = t + (s[k - 1] == '0')\n    for i in range(k, n):\n        t += (s[i - 1] != s[i]) - (s[i - k] != s[i - k + 1])\n        r = min(r, t + (s[i] == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    t = s.count('01', 0, k) + s.count('10', 0, k)\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:-1]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    t = s.count('01', 0, k) + s.count('10', 0, k)\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:-1]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    t = s.count('01', 0, k) + s.count('10', 0, k)\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:-1]):\n        if (u, x) != (v, y):\n            t += (x != y) - (u != v)\n            r = min(r, t + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    t = s.count('01', 0, k) + s.count('10', 0, k)\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:-1]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "import sys\nnext((f := sys.stdin))\nfor (k, s) in zip(f, f):\n    k = int(k.split()[1])\n    s = s[:-1]\n    t = s.count('01', 0, k) + s.count('10', 0, k)\n    r = t + (s[k - 1] == '0')\n    for (u, v, x, y) in zip(s, s[1:], s[k - 1:], s[k:]):\n        t += (x != y) - (u != v)\n        r = min(r, t + (y == '0'))\n    print(r)", "t = int(input())\nwhile t:\n    t -= 1\n    (res, count) = (2147483647, 0)\n    (k, n) = list(map(int, input().split()))\n    s = input()\n    arr = [0] * k\n    for i in range(1, k):\n        if s[i - 1] != s[i]:\n            count += 1\n            arr[i] = count\n        else:\n            arr[i] = count\n    arr[0] = 0\n    for i in range(k - 1, -1, -1):\n        if i - (n - 1) < 0:\n            break\n        cross = arr[i] - arr[i - n + 1]\n        if s[i] == '0':\n            cross += 1\n        res = min(res, cross)\n    print(res)", "import sys\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    count = 0\n    ans = sys.maxsize\n    arr = []\n    arr.append(0)\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            count += 1\n            arr.append(count)\n        else:\n            arr.append(count)\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        check = arr[i] - arr[i - k + 1]\n        if s[i] == '0':\n            check += 1\n        ans = min(ans, check)\n    print(ans)", "import sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef print(n):\n    return sys.stdout.write(str(n) + '\\n')\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    s = input()\n    a = [0] * n\n    mx = 9223372036854775807\n    ct = 0\n    for i in range(1, n):\n        if s[i - 1] == s[i]:\n            a[i] = ct\n        else:\n            ct += 1\n            a[i] = ct\n    a[0] = 0\n    ans = ''\n    for i in range(1, n, 2):\n        ans += s[i]\n    ans = ans[::-1]\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            ans = ans[:-1]\n            break\n        ct2 = a[i] - a[i - (k - 1)]\n        if s[i] == '0':\n            ans = ans[:-1]\n            ct2 += 1\n        mx = min(mx, ct2)\n    print(mx)", "import sys\nt = int(input())\nfor x in range(t):\n    (n, k) = map(int, input().split())\n    string = input()\n    d = {0: 0}\n    c = 0\n    sol = sys.maxsize\n    for i in range(1, n):\n        if string[i - 1] != string[i]:\n            c += 1\n            d[i] = c\n        else:\n            d[i] = c\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        p = i - k + 1\n        h = abs(d[i] - d[p])\n        if string[i] == '0':\n            h += 1\n        sol = min(sol, h)\n    print(sol)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    s = input()\n    arr = [0 for i in range(n)]\n    cn = 0\n    x = 999999\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            cn += 1\n            arr[i] = cn\n        else:\n            arr[i] = cn\n    arr[0] = 0\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        f = arr[i] - arr[i - (k - 1)]\n        if s[i] == '0':\n            f += 1\n        x = min(x, f)\n    print(x)\n    t -= 1", "def isPalindrome(str):\n    for i in range(0, int(len(str) / 2)):\n        if str[i] != str[len(str) - i - 1]:\n            return False\n    return True\n\ndef findans(arr, n, k, s):\n    g = 0\n    ans = 100000000\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        tp = arr[i] - arr[i - k + 1]\n        if s[i] == '0':\n            tp += 1\n        ans = min(ans, tp)\n    return ans\n\ndef lps(seq, i, j):\n    if i == j:\n        return 1\n    if seq[i] == seq[j] and i + 1 == j:\n        return 2\n    if seq[i] == seq[j]:\n        return lps(seq, i + 1, j - 1) + 2\n    return max(lps(seq, i, j - 1), lps(seq, i + 1, j))\nt = int(input())\nwhile t > 0:\n    lst = [int(x) for x in input().split()]\n    n = lst[0]\n    k = lst[1]\n    s = input()\n    lst2 = []\n    c = 0\n    lst2.append(0)\n    for i in range(1, n):\n        if s[i - 1] == s[i]:\n            pass\n        else:\n            c = c + 1\n        lst2.append(c)\n    ans = findans(lst2, n, k, s)\n    print(ans)\n    t = t - 1", "import sys\nt = int(input())\nfor x in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = {}\n    c = 0\n    sol = sys.maxsize\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            c += 1\n            d[i] = c\n        else:\n            d[i] = c\n    d[0] = 0\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        h = d[i] - d[i - k + 1]\n        if s[i] == '0':\n            h += 1\n        sol = min(sol, h)\n    print(sol)", "t = int(input())\nfor _ in range(t):\n    (N, K) = map(int, input().split())\n    S = str(input())\n    value = []\n    g = 1000000\n    i = K - 1\n    c = 0\n    while i > 0:\n        if S[i - 1] != S[i]:\n            c = c + 1\n        i = i - 1\n    if S[K - 1] == '0':\n        c = c + 1\n    g = c\n    i = K - 1\n    while i < N - 1:\n        if S[i + 1] != S[i] and S[i + 1] == '0':\n            c = c + 2\n        if S[i - K + 1] != S[i - K + 2]:\n            c = c - 1\n        if g > c:\n            g = c\n        i = i + 1\n    print(g)", "t = int(input())\nwhile t:\n    (a, b) = list(map(int, input().split()))\n    s = input()\n    result = float('inf')\n    arr = [0] * a\n    count = 0\n    for i in range(1, a):\n        if s[i - 1] != s[i]:\n            count += 1\n            arr[i] = count\n        else:\n            arr[i] = count\n    for i in range(a - 1, -1, -1):\n        if i - (b - 1) < 0:\n            break\n        check = arr[i] - arr[i - b + 1]\n        if s[i] == '0':\n            check += 1\n        result = min(check, result)\n    print(result)\n    t -= 1", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor _ in range(0, t):\n    (n, k) = list(map(int, stdin.readline().split()))\n    s = stdin.readline()\n    s = s[::-1]\n    s = s.replace('\\n', '')\n    a = [0]\n    count = 0\n    res = n\n    for x in range(0, len(s) - 1):\n        if s[x] != s[x + 1]:\n            count += 1\n        a.append(count)\n    for i in range(n - k + 1):\n        ans = a[i + k - 1] - a[i]\n        if s[i] == '0':\n            ans += 1\n        res = min(res, ans)\n    print(res)", "T = int(input())\nfor ___ in range(T):\n    (a, b) = map(int, input().split())\n    s = input()\n    x = list()\n    res = 3 * 10 ** 5\n    c = 0\n    x.append(0)\n    for i in range(1, a):\n        if s[i - 1] != s[i]:\n            c += 1\n            x.append(c)\n        else:\n            x.append(c)\n    for i in range(a - 1, -1, -1):\n        if i - (b - 1) < 0:\n            break\n        ch = x[i] - x[i - b + 1]\n        if s[i] == '0':\n            ch += 1\n        res = min(res, ch)\n    print(res)", "for _ in range(int(input())):\n    (k, n) = map(int, input().split())\n    st = input()\n    (cnt, arr, an) = (0, [0], float('inf'))\n    for i in range(1, k):\n        if st[i - 1] != st[i]:\n            cnt += 1\n            arr.append(cnt)\n        else:\n            arr.append(cnt)\n    for j in range(k - 1, -1, -1):\n        if j - (n - 1) < 0:\n            break\n        ischeck = arr[j] - arr[j - n + 1]\n        if st[j] == '0':\n            ischeck += 1\n        an = min(an, ischeck)\n    print(an)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = str(input())\n    a = [0] * n\n    (cnt, ans) = (0, 1000000000.0)\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            cnt += 1\n        a[i] = cnt\n    for i in reversed(range(n)):\n        if i - k + 1 < 0:\n            break\n        if s[i] == '0':\n            tmp = a[i] - a[i - k + 1] + 1\n        else:\n            tmp = a[i] - a[i - k + 1]\n        ans = min(ans, tmp)\n    print(ans)", "def solve():\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    ans = float('inf')\n    arr = [0] * n\n    count = 0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            count += 1\n            arr[i] = count\n        else:\n            arr[i] = count\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        check = arr[i] - arr[i - k + 1]\n        if s[i] == '0':\n            check += 1\n        ans = min(check, ans)\n    print(ans)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "from collections import defaultdict\nimport math as mt\nfor _ in range(int(input())):\n    (n, k) = (int(i) for i in input().split())\n    s = input()\n    i = 0\n    j = 0\n    ans = int(1000000000.0)\n    cnt = 0\n    if k == 1:\n        flag = False\n        for i in range(n):\n            if s[i] == '1':\n                flag = True\n                break\n        if flag:\n            print(0)\n        else:\n            print(1)\n    else:\n        while j < n:\n            if j - i + 1 < k:\n                if j == 0 and s[j] == '0':\n                    cnt += 1\n                elif s[j - 1] == '1' and s[j] == '0':\n                    cnt += 2\n                j += 1\n            else:\n                if s[j] == '0' and s[j - 1] == '1':\n                    cnt += 2\n                ans = min(ans, cnt)\n                if s[i] != s[i + 1]:\n                    cnt -= 1\n                i += 1\n                j += 1\n        print(ans)", "import sys\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    arr = [None] * a\n    s = input()\n    ans = a\n    count = 0\n    for i in range(1, a):\n        if s[i - 1] != s[i]:\n            count += 1\n            arr[i] = count\n        else:\n            arr[i] = count\n    arr[0] = 0\n    i = a - 1\n    while i >= 0:\n        if i - (b - 1) < 0:\n            break\n        check = arr[i] - arr[i - b + 1]\n        if s[i] == '0':\n            check += 1\n        ans = min(ans, check)\n        i -= 1\n    print(ans)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = str(input())\n    ans = 1000000000000000.0\n    c = 0\n    A = [0]\n    for i in range(1, N):\n        if S[i - 1] != S[i]:\n            c += 1\n        A.append(c)\n    for i in range(N - 1, -1, -1):\n        if i - K + 1 < 0:\n            break\n        check = A[i] - A[i - K + 1]\n        if S[i] == '0':\n            check += 1\n        ans = min(ans, check)\n    print(ans)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    s = input()\n    ans = 2 ** 90\n    c = 0\n    l = [0] * a\n    for i in range(1, a):\n        if s[i - 1] != s[i]:\n            c += 1\n            l[i] = c\n        else:\n            l[i] = c\n    l[0] = 0\n    for i in range(a - 1, -1, -1):\n        if i - (b - 1) < 0:\n            break\n        f = l[i] - l[i - b + 1]\n        if s[i] == '0':\n            f += 1\n        ans = min(ans, f)\n    print(ans)", "import sys\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans = sys.maxsize\n    s = input()\n    arr = [0]\n    count = 0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            count += 1\n            arr.append(count)\n        else:\n            arr.append(count)\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        check = arr[i] - arr[i - k + 1]\n        if s[i] == '0':\n            check += 1\n        ans = min(ans, check)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = math.inf\n    arr = [0] * n\n    t = 0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            t += 1\n            arr[i] = t\n        else:\n            arr[i] = t\n    arr[0] = 0\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        c = arr[i] - arr[i - k + 1]\n        if s[i] == '0':\n            c += 1\n        ans = min(ans, c)\n    print(ans)", "import sys\nt = int(input())\nwhile t > 0:\n    (n, k) = [int(x) for x in input().split()]\n    ans = sys.maxsize\n    s = input()\n    arr = [0] * n\n    c = 0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            c += 1\n            arr[i] = c\n        else:\n            arr[i] = c\n    arr[0] = 0\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        check = arr[i] - arr[i - (k - 1)]\n        if s[i] == '0':\n            check += 1\n        ans = min(ans, check)\n    print(ans)\n    t = t - 1", "def prints(a):\n    for i in range(len(a)):\n        print(a[i], end=' ')\n    print()\n\ndef rrr(a):\n    f = 0\n    for i in range(len(a)):\n        if a.count(a[i]) < a[i]:\n            f = 1\n            break\n    return f\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    l = [0]\n    ll = 1000000.0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            c += 1\n            l.append(c)\n        else:\n            l.append(c)\n    p = []\n    for i in range(n - 1, -1, -1):\n        if i < k - 1:\n            break\n        c = l[i] - l[i + 1 - k]\n        if s[i] != '1':\n            c += 1\n        ll = min(ll, c)\n    print(ll)", "def solve():\n    (n, k) = map(int, input().split())\n    s = input()\n    arr = [0 for i in range(n)]\n    ans = float('inf')\n    count = 0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            count += 1\n            arr[i] = count\n        else:\n            arr[i] = count\n    for i in range(n - 1, -1, -1):\n        if i - k + 1 < 0:\n            break\n        check = arr[i] - arr[i - k + 1]\n        if s[i] == '0':\n            check += 1\n        ans = min(ans, check)\n    return ans\nt = int(input())\nfor _ in range(t):\n    print(solve())", "import sys\n\ndef sol(n, k):\n    s = input()\n    f = 0\n    r = 0\n    ans = 0\n    max1 = 9223372036854775807\n    while r < k - 1 and r < n - 1:\n        if s[r] != s[r + 1]:\n            ans += 1\n        r += 1\n    for i in range(k - 1, n):\n        if i != k - 1:\n            x = i - k\n            if s[x] != s[x + 1]:\n                ans -= 1\n            if s[i] == '0':\n                y = 1\n            else:\n                y = 0\n            max1 = min(max1, ans + y)\n            if i < n - 1:\n                if s[i] != s[i + 1]:\n                    ans += 1\n        else:\n            if s[i] == '0':\n                y = 1\n            else:\n                y = 0\n            max1 = min(max1, ans + y)\n            if i < n - 1:\n                if s[i] != s[i + 1]:\n                    ans += 1\n    print(max1)\nt = int(input())\nfor temp in range(t):\n    (n, k) = map(int, input().split())\n    sol(n, k)", "def min_operations(S, N, K):\n    ans = 9999999999\n    arr = [0] * N\n    count = 0\n    for i in range(1, N):\n        if S[i - 1] != S[i]:\n            count += 1\n            arr[i] = count\n        else:\n            arr[i] = count\n    arr[0] = 0\n    for i in range(N - 1, -1, -1):\n        if i - (K - 1) < 0:\n            break\n        check = arr[i] - arr[i - (K - 1)]\n        if S[i] == '0':\n            check += 1\n        ans = min(ans, check)\n    return ans\nt = int(input())\nwhile t > 0:\n    (x, y) = input().split(' ')\n    x = int(x)\n    y = int(y)\n    str1 = input()\n    print(min_operations(str1, x, y))\n    t -= 1", "t = int(input())\nfor x in range(0, t):\n    (n, k) = map(int, input().split())\n    s = input()\n    f = 0\n    r = 0\n    ans = 0\n    man = float('inf')\n    while r < k - 1 and r < n - 1:\n        if s[r] != s[r + 1]:\n            ans += 1\n        r += 1\n    for i in range(k - 1, n):\n        if i != k - 1:\n            x = i - k\n            if s[x] != s[x + 1]:\n                ans -= 1\n            y = 1 - int(ord(s[i]) - ord('0'))\n            man = min(man, ans + y)\n            if i < n - 1:\n                if s[i] != s[i + 1]:\n                    ans += 1\n        else:\n            y = 1 - int(ord(s[i]) - ord('0'))\n            man = min(man, ans + y)\n            if i < n - 1:\n                if s[i] != s[i + 1]:\n                    ans += 1\n    print(man)", "t = int(input())\nwhile t:\n    (A, B) = map(int, input().split())\n    str = input()\n    arr = [0] * A\n    count = 0\n    for i in range(1, A):\n        if str[i - 1] != str[i]:\n            count += 1\n            arr[i] = count\n        else:\n            arr[i] = count\n    ANS = float('inf')\n    for i in range(A - 1, -1, -1):\n        if i - (B - 1) < 0:\n            break\n        check = arr[i] - arr[i - B + 1]\n        if str[i] == '0':\n            check += 1\n        ANS = min(ANS, check)\n    print(ANS)\n    t -= 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    s = input()\n    ans = 10 ** 7 + 1\n    arr = [0] * a\n    cnt = 0\n    for i in range(1, a):\n        if s[i - 1] != s[i]:\n            cnt += 1\n            arr[i] = cnt\n        else:\n            arr[i] = cnt\n    arr[0] = 0\n    for i in range(a - 1, -1, -1):\n        if i - (b - 1) < 0:\n            break\n        check = arr[i] - arr[i - b + 1]\n        if s[i] == '0':\n            check += 1\n        ans = min(ans, check)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    ans = 1000000\n    (n, k) = list(map(int, input().split(' ')))\n    s = input()\n    arr = [0] * n\n    count = 0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            count += 1\n            arr[i] = count\n        else:\n            arr[i] = count\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        count = arr[i] - arr[i - (k - 1)]\n        if s[i] == '0':\n            count = count + 1\n        ans = min(ans, count)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (A, B) = map(int, input().split())\n    str = input()\n    arr = [0] * A\n    count = 0\n    for i in range(1, A):\n        if str[i - 1] != str[i]:\n            count += 1\n            arr[i] = count\n        else:\n            arr[i] = count\n    ANS = float('inf')\n    for i in range(A - 1, -1, -1):\n        if i - (B - 1) < 0:\n            break\n        check = arr[i] - arr[i - B + 1]\n        if str[i] == '0':\n            check += 1\n        ANS = min(ANS, check)\n    print(ANS)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = input()\n    count = 0\n    ans = float('inf')\n    arr = [0] * n\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            count += 1\n        arr[i] = count\n    for i in range(n - 1, -1, -1):\n        if i - (k - 1) < 0:\n            break\n        check = arr[i] - arr[i - k + 1]\n        if s[i] == '0':\n            check += 1\n        ans = min(ans, check)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (A, B) = map(int, input().split())\n    str = input()\n    arr = [0] * A\n    count = 0\n    for i in range(1, A):\n        if str[i - 1] != str[i]:\n            count += 1\n            arr[i] = count\n        else:\n            arr[i] = count\n    arr[0] = 0\n    ANS = float('inf')\n    for i in range(A - 1, -1, -1):\n        if i - (B - 1) < 0:\n            break\n        check = arr[i] - arr[i - B + 1]\n        if str[i] == '0':\n            check += 1\n        ANS = min(ANS, check)\n    print(ANS)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (f, r, ans) = (0, 0, 0)\n    man = 3 * 10 ** 5\n    while r < k - 1 and r < n - 1:\n        if s[r] != s[r + 1]:\n            ans += 1\n        r += 1\n    for i in range(k - 1, n):\n        if i != k - 1:\n            x = i - k\n            if s[x] != s[x + 1]:\n                ans -= 1\n            y = 1 - int(s[i])\n            man = min(man, ans + y)\n            if i < n - 1:\n                if s[i] != s[i + 1]:\n                    ans += 1\n        else:\n            y = 1 - int(s[i])\n            man = min(man, ans + y)\n            if i < n - 1:\n                if s[i] != s[i + 1]:\n                    ans += 1\n    print(man)", "for t in range(int(input())):\n    (a, b) = map(int, input().split())\n    string = input()\n    array = [0] * a\n    count = 0\n    minimum = 1000000\n    for i in range(1, a):\n        if string[i - 1] != string[i]:\n            count += 1\n            array[i] = count\n        else:\n            array[i] = count\n    for i in range(a - 1, -1, -1):\n        if i - (b - 1) < 0:\n            break\n        x = array[i] - array[i - (b - 1)]\n        if string[i] == '0':\n            x += 1\n        minimum = min(minimum, x)\n    print(minimum)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s = input()\n    ans = float('inf')\n    count = 0\n    arr = [0] * a\n    for i in range(1, a):\n        if s[i - 1] != s[i]:\n            count += 1\n            arr[i] = count\n        else:\n            arr[i] = count\n    for i in range(a - 1, -1, -1):\n        if i - (b - 1) < 0:\n            break\n        check = arr[i] - arr[i - b + 1]\n        if s[i] == '0':\n            check += 1\n        ans = min(ans, check)\n    print(ans)", "import sys\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = [0] * n\n    c = 0\n    a = sys.maxsize\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            c += 1\n            l[i] = c\n        else:\n            l[i] = c\n    l[0] = 0\n    for j in range(n - 1, -1, -1):\n        if j - (k - 1) < 0:\n            break\n        z = l[j] - l[j - (k - 1)]\n        if s[j] == '0':\n            z += 1\n        a = min(a, z)\n    print(min(a, z))"]