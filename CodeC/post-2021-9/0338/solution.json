["for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a1 = sorted(a)\n    x = y = []\n    start = 0\n    for i in range(n):\n        if a1[start] != a[i]:\n            x.append(a[i])\n        else:\n            start += 1\n    if x == []:\n        print('YES')\n    elif x == sorted(x):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    nli = list(map(int, input().split()))\n    srtli = list()\n    srtli += nli\n    srtli.sort()\n    pli = list()\n    qli = list()\n    ind_srt = 0\n    for a in nli:\n        if srtli[ind_srt] == a:\n            pli.append(a)\n            ind_srt += 1\n        else:\n            qli.append(a)\n    pq = pli + qli\n    if srtli == pq:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(z) for z in input().split()]\n    b = sorted(a)\n    c = [a.index(b[0]), 0]\n    d = [0] * n\n    for i in range(2):\n        c[0] = 0\n        while c[0] < n:\n            if not d[c[0]] and a[c[0]] == b[c[1]]:\n                d[c[0]] = 1\n                c[0] += 1\n                c[1] += 1\n            else:\n                c[0] += 1\n    print('YES' if c[0] == c[1] else 'NO')", "for _ in range(int(input())):\n    num = int(input())\n    array_1 = list(map(int, input().split()))[:num]\n    array_2 = sorted(array_1)\n    array_3 = [array_1.index(array_2[0]), 0]\n    null_array_1 = [0] * num\n    for i in range(2):\n        array_3[0] = 0\n        while array_3[0] < num:\n            if not null_array_1[array_3[0]] and array_1[array_3[0]] == array_2[array_3[1]]:\n                null_array_1[array_3[0]] = 1\n                array_3[0] += 1\n                array_3[1] += 1\n            else:\n                array_3[0] += 1\n    if array_3[0] == array_3[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    num = int(input())\n    array_1 = list(map(int, input().split()))[:num]\n    array_2 = sorted(array_1)\n    array_3 = [array_1.index(array_2[0]), 0]\n    null_array_1 = [0] * num\n    for i in range(2):\n        array_3[0] = 0\n        while array_3[0] < num:\n            if not null_array_1[array_3[0]] and array_1[array_3[0]] == array_2[array_3[1]]:\n                null_array_1[array_3[0]] = 1\n                array_3[0] += 1\n                array_3[1] += 1\n            else:\n                array_3[0] += 1\n    if array_3[0] == array_3[1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    j = 0\n    s = []\n    f = sorted(l)\n    for i in range(n):\n        if l[i] == f[j]:\n            j = j + 1\n        else:\n            s.append(l[i])\n    ss = sorted(s)\n    if s == ss:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    j = 0\n    s = []\n    f = sorted(l)\n    for i in range(n):\n        if l[i] == f[j]:\n            j = j + 1\n        else:\n            s.append(l[i])\n    ss = sorted(s)\n    if s == ss:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = []\n    j = 0\n    f = sorted(l)\n    for i in range(n):\n        if l[i] == f[j]:\n            j = j + 1\n        else:\n            s.append(l[i])\n    ss = sorted(s)\n    if s == ss:\n        print('YES')\n    else:\n        print('NO')", "def find_flop_ind(arr):\n    if len(arr) <= 1:\n        return -1\n    for ind in range(len(arr) - 1):\n        if arr[ind] > arr[ind + 1]:\n            return ind + 1\n    return -1\n\ndef solve(arr):\n    ind = find_flop_ind(arr)\n    if ind == -1:\n        return True\n    q_ind = 0\n    while q_ind < ind:\n        if arr[q_ind] > arr[ind]:\n            break\n        q_ind += 1\n    q0 = arr[q_ind]\n    P = [(i, loc) for (loc, i) in enumerate(arr) if i < q0]\n    Q = [(i, loc) for (loc, i) in enumerate(arr) if i > q0]\n    R = [(i, loc) for (loc, i) in enumerate(arr) if i == q0]\n    c1 = find_flop_ind(P) == -1 and find_flop_ind(Q) == -1\n    if len(Q) == 0 or len(P) == 0:\n        return c1\n    p_end = 0\n    while p_end < len(R):\n        i = R[p_end]\n        if i[1] > P[-1][1]:\n            break\n        p_end += 1\n    return c1 and (R[p_end - 1][1] < Q[0][1] if p_end != 0 else True)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().strip().split()]\n    print('YES' if solve(arr) else 'NO')", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = input()\n    x = list(map(int, A.split(' ')))\n    q = []\n    p = []\n    s = sorted(x)\n    j = 0\n    for i in s:\n        while j < len(x):\n            if x[j] == i:\n                p.append(i)\n                j = j + 1\n                break\n            q.append(x[j])\n            j = j + 1\n    res = 'YES' if p + q == s else 'NO'\n    print(res)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = input()\n    x = list(map(int, A.split(' ')))\n    q = []\n    p = []\n    s = sorted(x)\n    j = 0\n    for i in s:\n        while j < len(x):\n            if x[j] == i:\n                p.append(i)\n                j = j + 1\n                break\n            q.append(x[j])\n            j = j + 1\n    res = 'YES' if p + q == s else 'NO'\n    print(res)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    sortA = sorted(A)\n    possible = True\n    (s1, s2) = ([], [])\n    (i, j) = (0, 0)\n    while i < n:\n        if A[i] == sortA[j]:\n            s1.append(A[i])\n            i += 1\n            j += 1\n        else:\n            s2.append(A[i])\n            i += 1\n    for i in range(len(s2) - 1):\n        if s2[i] > s2[i + 1]:\n            possible = False\n            break\n    if possible:\n        print('YES')\n    else:\n        print('NO')", "from functools import cmp_to_key\nimport math\nfrom pydoc import doc\n\ndef run(debug=True):\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        sortedArr = sorted(arr)\n        rem = []\n        curr = 0\n        for i in range(n):\n            if arr[i] == sortedArr[curr]:\n                curr += 1\n                continue\n            else:\n                rem.append(arr[i])\n        remSorted = sorted(rem)\n        poss = True\n        for i in range(len(rem)):\n            if rem[i] != remSorted[i]:\n                poss = False\n                break\n        print('YES' if poss else 'NO')\nwhile True:\n    try:\n        run(False)\n    except:\n        break", "from functools import cmp_to_key\nimport math\nfrom pydoc import doc\n\ndef run(debug=True):\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        sortedArr = sorted(arr)\n        rem = []\n        curr = 0\n        for i in range(n):\n            if arr[i] == sortedArr[curr]:\n                curr += 1\n                continue\n            else:\n                rem.append(arr[i])\n        remSorted = sorted(rem)\n        poss = True\n        for i in range(len(rem)):\n            if rem[i] != remSorted[i]:\n                poss = False\n                break\n        print('YES' if poss else 'NO')\nwhile True:\n    try:\n        run(False)\n    except:\n        break", "from functools import cmp_to_key\nimport math\nfrom pydoc import doc\n\ndef run(debug=True):\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        sortedArr = sorted(arr)\n        rem = []\n        curr = 0\n        for i in range(n):\n            if arr[i] == sortedArr[curr]:\n                curr += 1\n                continue\n            else:\n                rem.append(arr[i])\n        remSorted = sorted(rem)\n        poss = True\n        for i in range(len(rem)):\n            if rem[i] != remSorted[i]:\n                poss = False\n                break\n        print('YES' if poss else 'NO')\nwhile True:\n    try:\n        run(False)\n    except:\n        break", "from functools import cmp_to_key\nimport math\nfrom pydoc import doc\n\ndef run(debug=True):\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        sortedArr = sorted(arr)\n        rem = []\n        curr = 0\n        for i in range(n):\n            if arr[i] == sortedArr[curr]:\n                curr += 1\n                continue\n            else:\n                rem.append(arr[i])\n        remSorted = sorted(rem)\n        poss = True\n        for i in range(len(rem)):\n            if rem[i] != remSorted[i]:\n                poss = False\n                break\n        print('YES' if poss else 'NO')\nwhile True:\n    try:\n        run(False)\n    except:\n        break", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] = 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] += 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] = 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = l.copy()\n    l.sort()\n    if x == l:\n        print('YES')\n        continue\n    cur = 0\n    m = []\n    for i in x:\n        if i == l[cur]:\n            cur += 1\n        else:\n            m.append(i)\n    if l[cur] <= m[0]:\n        f = m.copy()\n        m.sort()\n        if m == f:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        new_arr = sorted(arr)\n        List_new = []\n        i = 0\n        j = 0\n        while i < n:\n            if arr[i] == new_arr[j]:\n                arr[i] = -1\n                i += 1\n                List_new.append(new_arr[j])\n                j += 1\n            else:\n                i += 1\n        for val in arr:\n            if val != -1:\n                List_new.append(val)\n        if List_new == new_arr:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    original = list(map(int, input().split(' ')))\n    l = original.copy()\n    original.sort()\n    index = 0\n    l1 = []\n    l2 = []\n    for item in l:\n        if item == original[index]:\n            l1.append(item)\n            index += 1\n        else:\n            l2.append(item)\n    if l1 + l2 == original:\n        print('YES')\n    else:\n        print('NO')", "ans = []\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    sA = sorted(A)\n    (p, old) = (0, float('-inf'))\n    for a in A:\n        if a == sA[p]:\n            p += 1\n        else:\n            if old > a:\n                break\n            old = a\n    else:\n        ans.append('YES')\n        continue\n    ans.append('NO')\nprint(*ans, sep='\\n')", "ans = []\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    sA = sorted(A)\n    (p, A2, an) = (0, [float('-inf')], 'YES')\n    for a in A:\n        if a == sA[p]:\n            p += 1\n        else:\n            if A2[-1] > a:\n                break\n            A2.append(a)\n    else:\n        ans.append('YES')\n        continue\n    ans.append('NO')\nprint(*ans, sep='\\n')", "ans = []\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    sA = sorted(A)\n    (p, A2, an) = (0, [], 'YES')\n    for a in A:\n        if a == sA[p]:\n            p += 1\n        else:\n            A2.append(a)\n    for i in range(1, len(A2)):\n        if A2[i - 1] > A2[i]:\n            break\n    else:\n        ans.append('YES')\n        continue\n    ans.append('NO')\nprint(*ans, sep='\\n')", "ans = []\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    sA = sorted(A)\n    (p, A2, an) = (0, [], 'YES')\n    for i in range(N):\n        if A[i] == sA[p]:\n            p += 1\n        else:\n            A2.append(A[i])\n    for i in range(1, len(A2)):\n        if A2[i - 1] > A2[i]:\n            an = 'NO'\n            break\n    ans.append(an)\nprint(*ans, sep='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    s = [i for i in l]\n    s.sort()\n    j = 0\n    ans = []\n    for i in range(n):\n        if s[j] == l[i]:\n            j += 1\n        else:\n            ans.append(l[i])\n    flag = 1\n    for i in range(len(ans) - 1):\n        if ans[i] > ans[i + 1]:\n            flag = 0\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "def isSorted(arr):\n    for i in range(1, len(arr)):\n        if arr[i] < arr[i - 1]:\n            return False\n    return True\n\ndef solve(arr, n):\n    b = sorted(arr)\n    curr = 0\n    rem = []\n    for i in range(n):\n        if arr[i] == b[curr]:\n            curr += 1\n        else:\n            rem.append(arr[i])\n    if isSorted(rem):\n        return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(arr, n))", "for _ in range(int(input())):\n    n = int(input())\n    cpraid1 = [int(z) for z in input().split()]\n    cpraid2 = sorted(cpraid1)\n    cpraid3 = [cpraid1.index(cpraid2[0]), 0]\n    cpraid4 = [0] * n\n    for i in range(2):\n        cpraid3[0] = 0\n        while cpraid3[0] < n:\n            if not cpraid4[cpraid3[0]] and cpraid1[cpraid3[0]] == cpraid2[cpraid3[1]]:\n                cpraid4[cpraid3[0]] = 1\n                cpraid3[0] += 1\n                cpraid3[1] += 1\n            else:\n                cpraid3[0] += 1\n    print('YES' if cpraid3[0] == cpraid3[1] else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = arr.copy()\n    k.sort()\n    i = 0\n    j = 0\n    first = []\n    second = []\n    while i < n:\n        if arr[i] == k[j]:\n            first.append(k[j])\n            j += 1\n        else:\n            second.append(arr[i])\n        i = i + 1\n    if first + second == k:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = sorted(l)\n    l2 = []\n    l3 = []\n    j = 0\n    for k in range(n):\n        if l[k] == l1[j]:\n            l2.append(l[k])\n            j += 1\n        else:\n            l3.append(l[k])\n    if l2 == sorted(l2) and l3 == sorted(l3):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    cpraid1 = [int(z) for z in input().split()]\n    cpraid2 = sorted(cpraid1)\n    cpraid3 = [cpraid1.index(cpraid2[0]), 0]\n    cpraid4 = [0] * n\n    for i in range(2):\n        cpraid3[0] = 0\n        while cpraid3[0] < n:\n            if not cpraid4[cpraid3[0]] and cpraid1[cpraid3[0]] == cpraid2[cpraid3[1]]:\n                cpraid4[cpraid3[0]] = 1\n                cpraid3[0] += 1\n                cpraid3[1] += 1\n            else:\n                cpraid3[0] += 1\n    print('YES' if cpraid3[0] == cpraid3[1] else 'NO')", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    sorted_arr = sorted(arr)\n    l1 = []\n    l2 = []\n    j = 0\n    for i in range(n):\n        if arr[i] == sorted_arr[j]:\n            l1.append(arr[i])\n            j += 1\n        else:\n            l2.append(arr[i])\n    if l1 == sorted(l1) and l2 == sorted(l2):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    cpraid1 = [int(z) for z in input().split()]\n    cpraid2 = sorted(cpraid1)\n    cpraid3 = [cpraid1.index(cpraid2[0]), 0]\n    cpraid4 = [0] * n\n    for i in range(2):\n        cpraid3[0] = 0\n        while cpraid3[0] < n:\n            if not cpraid4[cpraid3[0]] and cpraid1[cpraid3[0]] == cpraid2[cpraid3[1]]:\n                cpraid4[cpraid3[0]] = 1\n                cpraid3[0] += 1\n                cpraid3[1] += 1\n            else:\n                cpraid3[0] += 1\n    print('YES' if cpraid3[0] == cpraid3[1] else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    cpraid1 = [int(z) for z in input().split()]\n    cpraid2 = sorted(cpraid1)\n    cpraid3 = [cpraid1.index(cpraid2[0]), 0]\n    cpraid4 = [0] * n\n    for i in range(2):\n        cpraid3[0] = 0\n        while cpraid3[0] < n:\n            if not cpraid4[cpraid3[0]] and cpraid1[cpraid3[0]] == cpraid2[cpraid3[1]]:\n                cpraid4[cpraid3[0]] = 1\n                cpraid3[0] += 1\n                cpraid3[1] += 1\n            else:\n                cpraid3[0] += 1\n    print('YES' if cpraid3[0] == cpraid3[1] else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()][:n]\n    sorted_array = sorted(arr)\n    half = []\n    second = []\n    j = 0\n    for i in range(n):\n        if arr[i] == sorted_array[j]:\n            half.append(arr[i])\n            j += 1\n        else:\n            second.append(arr[i])\n    if second == sorted(second):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    lis = list(map(int, input().split()))\n    new = sorted(lis)\n    j = 0\n    temp = []\n    for i in range(n):\n        if lis[i] == new[j]:\n            j += 1\n        else:\n            temp.append(lis[i])\n    if sorted(temp) == temp:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = sorted(a)\n    b = []\n    c = []\n    i = 0\n    j = 0\n    while i < n:\n        if a[i] == d[j]:\n            b.append(a[i])\n            i += 1\n            j += 1\n        else:\n            c.append(a[i])\n            i += 1\n    e = sorted(c)\n    if c == e:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ls = sorted(l)\n    j = 0\n    b = []\n    for i in l:\n        if i == ls[j]:\n            j += 1\n        else:\n            b.append(i)\n    if b == sorted(b):\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a_sorted = sorted(a)\n    b = []\n    j = 0\n    for i in a:\n        if i == a_sorted[j]:\n            j += 1\n        else:\n            b.append(i)\n    if b == sorted(b):\n        print('YES')\n    else:\n        print('NO')", "n = float(input())\nfor i in range(int(n)):\n    a = int(input())\n    b = input()\n    b = b.split(' ')\n    c = []\n    for i in range(a):\n        c.append(float(b[i]))\n    k = c.copy()\n    c.sort()\n    g = k.index(c[0])\n    k.remove(c[0])\n    d = [c[0]]\n    e = []\n    f = []\n    for i in range(g):\n        f.append(k[i])\n    for i in range(g, a - 1):\n        if k[i] == c[len(d)]:\n            d.append(k[i])\n        else:\n            e.append(k[i])\n    if d == sorted(d) and e == sorted(e) and (f == sorted(f)):\n        if len(f) == 0:\n            print('YES')\n        elif len(e) == 0:\n            print('YES')\n        elif min(e) >= max(f):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "t = int(input())\nfor z in range(t):\n    m = 0\n    l = []\n    r = []\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    k = 0\n    for i in range(0, len(a)):\n        if a[i] == b[k]:\n            l.append(a[i])\n            k += 1\n        else:\n            r.append(a[i])\n    e = r.copy()\n    e.sort()\n    for i in range(0, len(e)):\n        if e[i] != r[i]:\n            m = 1\n            break\n    if m == 1:\n        print('NO')\n    else:\n        print('YES')", "import heapq\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    arr1 = arr.copy()\n    (l, r) = ([], [])\n    ans = 'YES'\n    heapq.heapify(arr1)\n    temp = heapq.heappop(arr1)\n    i = 0\n    while i < len(arr):\n        if arr[i] == temp:\n            l.append(arr[i])\n            if arr1:\n                temp = heapq.heappop(arr1)\n            arr[i] = False\n        i += 1\n    for i in range(len(arr)):\n        if arr[i] != False:\n            if len(r) == 0:\n                r.append(arr[i])\n            elif arr[i] >= r[-1]:\n                r.append(arr[i])\n            else:\n                break\n    if len(l) + len(r) == len(arr):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] += 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor __ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a.copy()\n    a.sort()\n    h = []\n    i = 0\n    j = 0\n    while i < n and j < n:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            h.append(b[j])\n            j += 1\n    l = h.copy()\n    l.sort()\n    if l == h:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = sorted(a)\n    b = []\n    c = []\n    i = 0\n    j = 0\n    while i < n:\n        if a[i] == d[j]:\n            b.append(a[i])\n            i += 1\n            j += 1\n        else:\n            c.append(a[i])\n            i += 1\n    e = sorted(c)\n    if c == e:\n        print('YES')\n    else:\n        print('NO')", "def isSorted(rest):\n    n = len(rest)\n    for i in range(0, n - 1):\n        if rest[i] > rest[i + 1]:\n            return False\n    return True\ntc = int(input())\nfor _ in range(1, 1 + tc):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n <= 2:\n        print('YES')\n        continue\n    nums = sorted(arr)\n    probe = -1\n    shift = 0\n    rest = []\n    (i, j) = (0, 0)\n    while i < n and j < n:\n        while j < n and nums[i] != arr[j]:\n            rest.append(arr[j])\n            j += 1\n        i += 1\n        j += 1\n    if len(rest) == 0 or isSorted(rest):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr2 = sorted(arr)\n    (j, i) = (0, 0)\n    (p, q) = ([], [])\n    while i < len(arr):\n        if arr[i] == arr2[j]:\n            p.append(arr[i])\n            j += 1\n        else:\n            q.append(arr[i])\n        i += 1\n    q2 = sorted(q)\n    if q2 == q:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "import copy\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = l.copy()\n    p.sort()\n    j = 0\n    lst = []\n    for i in range(n):\n        if l[i] == p[j]:\n            j += 1\n        else:\n            lst.append(l[i])\n    if len(lst) == 0:\n        print('YES')\n        continue\n    prev = lst[0]\n    ans = 'YES'\n    for i in lst:\n        if i < prev:\n            ans = 'NO'\n            break\n        prev = i\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    elliot = list(map(int, input().split()))[:n]\n    angela = sorted(elliot)\n    tyrell = [elliot.index(angela[0]), 0]\n    null_arr = [0] * n\n    k = 0\n    for i in range(1000):\n        k += 1\n    for i in range(1000):\n        k += 1\n    for i in range(2):\n        tyrell[0] = 0\n        while tyrell[0] < n:\n            if not null_arr[tyrell[0]] and elliot[tyrell[0]] == angela[tyrell[1]]:\n                null_arr[tyrell[0]] = 1\n                tyrell[0] += 1\n                tyrell[1] += 1\n            else:\n                tyrell[0] += 1\n    if tyrell[0] == tyrell[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] = 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] = 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "for itr in range(int(input())):\n    num = int(input())\n    arr = list(map(int, input().split()))[:num]\n    arr2 = sorted(arr)\n    arr3 = [arr.index(arr2[0]), 0]\n    arr4 = [0] * num\n    for itr in range(2):\n        arr3[0] = 0\n        while arr3[0] < num:\n            if not arr4[arr3[0]] and arr[arr3[0]] == arr2[arr3[1]]:\n                arr4[arr3[0]] = 1\n                arr3[0] += 1\n                arr3[1] += 1\n            else:\n                arr3[0] += 1\n    if arr3[0] == arr3[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] = 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor t in range(n):\n    N = int(input())\n    ls = [int(x) for x in input().split()]\n    ls_sort = sorted(ls)\n    V1 = []\n    V2 = []\n    i = j = 0\n    while j < N:\n        if ls_sort[i] == ls[j]:\n            V1.append(ls[j])\n            i += 1\n        else:\n            V2.append(ls[j])\n        j += 1\n    if all((V1[i] <= V1[i + 1] for i in range(len(V1) - 1))) and all((V2[j] <= V2[j + 1] for j in range(len(V2) - 1))):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    no = int(input())\n    array = list(map(int, input().split()))[:no]\n    array2 = sorted(array)\n    array3 = [array.index(array2[0]), 0]\n    null_arr = [0] * no\n    for z in range(2):\n        array3[0] = 0\n        while array3[0] < no:\n            if not null_arr[array3[0]] and array[array3[0]] == array2[array3[1]]:\n                null_arr[array3[0]] = 1\n                array3[0] += 1\n                array3[1] += 1\n            else:\n                array3[0] += 1\n    if array3[0] == array3[1]:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nwhile T > 0:\n    n = int(input())\n    a = [int(i) for i in input().split(' ')]\n    sr = lr = 0\n    ans = 'YES'\n    for i in range(1, len(a)):\n        if sr == 0:\n            if a[i] < a[i - 1]:\n                lr = a[i - 1]\n                sr = a[i]\n                j = i - 2\n                while True:\n                    if j == -1 or a[j] <= a[i]:\n                        ll = a[j + 1]\n                        break\n                    else:\n                        j -= 1\n            else:\n                continue\n        elif a[i] >= lr:\n            lr = a[i]\n        elif a[i] > ll:\n            ans = 'NO'\n            break\n        elif a[i] >= sr:\n            sr = a[i]\n        else:\n            ans = 'NO'\n            break\n    print(ans)\n    T -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(num) for num in input().split(' ', n - 1)]\n    b = a[:]\n    b.sort()\n    lst = []\n    i = 0\n    j = 0\n    while i < n and j < n:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            lst.append(a[i])\n            i += 1\n    lst2 = lst[:]\n    lst2.sort()\n    if lst == lst2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = [int(z) for z in input().split()]\n    sorted_arr = sorted(arr1)\n    arr3 = [arr1.index(sorted_arr[0]), 0]\n    arr4 = [0] * n\n    for i in range(0, 2):\n        arr3[0] = 0\n        while arr3[0] < n:\n            if not arr4[arr3[0]] and arr1[arr3[0]] == sorted_arr[arr3[1]]:\n                arr4[arr3[0]] = 1\n                arr3[0] += 1\n                arr3[1] += 1\n            else:\n                arr3[0] += 1\n    if arr3[0] == arr3[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    temp1 = [int(z) for z in input().split()]\n    temp4 = [0] * n\n    temp2 = sorted(temp1)\n    temp3 = [temp1.index(temp2[0]), 0]\n    for i in range(2):\n        temp3[0] = 0\n        while temp3[0] < n:\n            if not temp4[temp3[0]] and temp1[temp3[0]] == temp2[temp3[1]]:\n                temp4[temp3[0]] = 1\n                temp3[0] += 1\n                temp3[1] += 1\n            else:\n                temp3[0] += 1\n    print('YES' if temp3[0] == temp3[1] else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(z) for z in input().split()]\n    b = sorted(a)\n    c = [a.index(b[0]), 0]\n    d = [0] * n\n    for i in range(2):\n        c[0] = 0\n        while c[0] < n:\n            if not d[c[0]] and a[c[0]] == b[c[1]]:\n                d[c[0]] = 1\n                c[0] += 1\n                c[1] += 1\n            else:\n                c[0] += 1\n    print('YES' if c[0] == c[1] else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = [int(x) for x in input().split()]\n    arr2 = sorted(arr1)\n    arr3 = [arr1.index(arr2[0]), 0]\n    arr4 = [0] * n\n    for i in range(0, 2):\n        arr3[0] = 0\n        while arr3[0] < n:\n            if not arr4[arr3[0]] and arr1[arr3[0]] == arr2[arr3[1]]:\n                arr4[arr3[0]] = 1\n                arr3[0] += 1\n                arr3[1] += 1\n            else:\n                arr3[0] += 1\n    if arr3[0] == arr3[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    li = [int(x) for x in input().split()]\n    j = 0\n    li1 = []\n    li2 = []\n    b = sorted(li)\n    for i in range(n):\n        if b[j] != li[i]:\n            li2.append(li[i])\n        else:\n            j += 1\n            li1.append(li[i])\n    li1.extend(li2)\n    if li1 != b:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    temp1 = [int(z) for z in input().split()]\n    temp4 = [0] * n\n    temp2 = sorted(temp1)\n    temp3 = [temp1.index(temp2[0]), 0]\n    for i in range(2):\n        temp3[0] = 0\n        while temp3[0] < n:\n            if not temp4[temp3[0]] and temp1[temp3[0]] == temp2[temp3[1]]:\n                temp4[temp3[0]] = 1\n                temp3[0] += 1\n                temp3[1] += 1\n            else:\n                temp3[0] += 1\n    print('YES' if temp3[0] == temp3[1] else 'NO')", "for i in range(int(input())):\n    n = int(input())\n    cpraid1 = [int(z) for z in input().split()]\n    cpraid2 = sorted(cpraid1)\n    cpraid3 = [cpraid1.index(cpraid2[0]), 0]\n    cpraid4 = [0] * n\n    for i in range(2):\n        cpraid3[0] = 0\n        while cpraid3[0] < n:\n            if not cpraid4[cpraid3[0]] and cpraid1[cpraid3[0]] == cpraid2[cpraid3[1]]:\n                cpraid4[cpraid3[0]] = 1\n                cpraid3[0] += 1\n                cpraid3[1] += 1\n            else:\n                cpraid3[0] += 1\n    print('YES' if cpraid3[0] == cpraid3[1] else 'NO')", "for i in range(int(input())):\n    size = int(input())\n    a = list(map(int, input().split()))\n    tmp = [0] * size\n    b = sorted(a)\n    c = [a.index(b[0]), 0]\n    for j in range(2):\n        c[0] = 0\n        while c[0] < size:\n            if not tmp[c[0]] and a[c[0]] == b[c[1]]:\n                c[1] += 1\n                tmp[c[0]] = 1\n                c[0] += 1\n            else:\n                c[0] += 1\n    if c[0] == c[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] = 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input(''))\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arrS = sorted(arr)\n    arrI = [arr.index(arrS[0]), 0]\n    arr0 = [0] * n\n    for i in range(2):\n        arrI[0] = 0\n        while arrI[0] < n:\n            if not arr0[arrI[0]] and arr[arrI[0]] <= arrS[arrI[1]]:\n                arr0[arrI[0]] = 1\n                arrI[0] += 1\n                arrI[1] += 1\n            else:\n                arrI[0] += 1\n    if arrI[0] == arrI[1]:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for test in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    t = l.copy()\n    t = sorted(t)\n    check = 0\n    for i in range(n):\n        if l[i] == t[check]:\n            check += 1\n    for j in range(n):\n        if check < n:\n            if l[j] == t[check]:\n                check += 1\n        else:\n            break\n    if check == n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input(''))\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arrS = sorted(arr)\n    arrI = [arr.index(arrS[0]), 0]\n    arr0 = [0] * n\n    for i in range(2):\n        arrI[0] = 0\n        while arrI[0] < n:\n            if not arr0[arrI[0]] and arr[arrI[0]] <= arrS[arrI[1]]:\n                arr0[arrI[0]] = 1\n                arrI[0] += 1\n                arrI[1] += 1\n            else:\n                arrI[0] += 1\n    if arrI[0] == arrI[1]:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))[:n]\n    B = sorted(A)\n    C = [A.index(B[0]), 0]\n    null_A = [0] * n\n    for i in range(2):\n        C[0] = 0\n        while C[0] < n:\n            if not null_A[C[0]] and A[C[0]] == B[C[1]]:\n                null_A[C[0]] = 1\n                C[0] += 1\n                C[1] += 1\n            else:\n                C[0] += 1\n    if C[0] == C[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] = 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "def sol(arr, n):\n    arrs = sorted(arr)\n    maxx = 0\n    for i in range(n):\n        if arr[i] == arrs[maxx]:\n            maxx += 1\n    for j in range(n):\n        if maxx == n:\n            break\n        elif arr[j] == arrs[maxx]:\n            maxx += 1\n    if maxx >= n:\n        print('YES')\n    else:\n        print('NO')\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    arr = list(map(int, input().split()))\n    sol(arr, N)\n    T -= 1", "for testcases in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    c = []\n    j = k = flag = 0\n    for i in range(n):\n        if a[i] == b[j]:\n            j += 1\n        else:\n            c.insert(k, a[i])\n            k += 1\n    if c != sorted(c):\n        flag = 1\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] = 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] = 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] = 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    temp = [int(i) for i in range(n)]\n    l2 = sorted(l)\n    l3 = []\n    l3.append(l.index(l2[0]))\n    l3.append(0)\n    temp.sort(reverse=True)\n    res = [0] * n\n    for i in range(2):\n        l3[0] = 0\n        while l3[0] < n:\n            if not res[l3[0]] and l[l3[0]] == l2[l3[1]]:\n                res[l3[0]] = 1\n                l3[0] += 1\n                l3[1] += 1\n            else:\n                l3[0] += 1\n    if l3[0] == l3[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    arr_2 = sorted(arr)\n    arr_3 = [arr.index(arr_2[0]), 0]\n    null_arr = [0] * n\n    for i in range(2):\n        arr_3[0] = 0\n        while arr_3[0] < n:\n            if not null_arr[arr_3[0]] and arr[arr_3[0]] == arr_2[arr_3[1]]:\n                null_arr[arr_3[0]] += 1\n                arr_3[0] += 1\n                arr_3[1] += 1\n            else:\n                arr_3[0] += 1\n    if arr_3[0] == arr_3[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    nkri = int(input())\n    arrkri = list(map(int, input().split()))[:nkri]\n    arrkri_2 = sorted(arrkri)\n    arrkri_3 = [arrkri.index(arrkri_2[0]), 0]\n    null_arrkri = [0] * nkri\n    for ikri in range(2):\n        arrkri_3[0] = 0\n        while arrkri_3[0] < nkri:\n            if not null_arrkri[arrkri_3[0]] and arrkri[arrkri_3[0]] == arrkri_2[arrkri_3[1]]:\n                null_arrkri[arrkri_3[0]] += 1\n                arrkri_3[0] += 1\n                arrkri_3[1] += 1\n            else:\n                arrkri_3[0] += 1\n    if arrkri_3[0] == arrkri_3[1]:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout, stderr, setrecursionlimit\nfrom math import pi, sqrt, gcd, ceil, floor, log2, log10, factorial\nfrom math import cos, acos, tan, atan, atan2, sin, asin, radians, degrees, hypot\nfrom bisect import insort, insort_left, insort_right, bisect_left, bisect_right, bisect\nfrom functools import reduce\nfrom itertools import combinations, combinations_with_replacement, permutations\nfrom fractions import Fraction\nfrom random import choice, getrandbits, randint, random, randrange, shuffle\nfrom re import compile, findall, escape, search, match\nfrom statistics import mean, median, mode\nfrom heapq import heapify, heappop, heappush, heappushpop, heapreplace, merge, nlargest, nsmallest\nfrom collections import deque, OrderedDict, defaultdict\nfrom collections import Counter, namedtuple, ChainMap, UserDict, UserList, UserString\nimport time\nimport math\n\ndef prime_number(start, end):\n    l = []\n    for num in range(start, end):\n        if num > 1:\n            for i in range(2, num):\n                if num % i == 0:\n                    break\n            else:\n                l.append(num)\n    return l\n\ndef findbin(a):\n    return bin(a)\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\n    for p in range(n + 1):\n        if prime[p]:\n            print(p)\n\ndef primeornot(num):\n    if num > 1:\n        for i in range(2, num):\n            if num % i == 0:\n                print(num, 'is not a prime number')\n                break\n            else:\n                print(num, 'is a prime number')\n    else:\n        print(num, 'is not a prime number')\n\ndef numSuba1ayProductLessThanK(nums, k):\n    if k <= 1:\n        return 0\n    prod = 1\n    ans = left = 0\n    for (right, val) in enumerate(nums):\n        prod *= val\n        while prod >= k:\n            prod /= nums[left]\n            left += 1\n        ans += right - left + 1\n    return ans\nmod = 10 ** 9 + 7\nlcm = lambda x, y: x * y // gcd(x, y)\nadd = lambda x, y: (x % mod + y % mod) % mod\nsub = lambda x, y: (x % mod - y % mod + mod) % mod\nmul = lambda x, y: x % mod * (y % mod) % mod\ninverse = lambda x: pow(x, mod - 2, mod)\nsetBitCount = lambda x: bin(x).count('1')\nsumOfDigits = lambda x: sum([int(i) for i in str(x)])\nstart_time = time.time()\nfor _ in range(int(input())):\n    n = int(input())\n    lcm = lambda x, y: x * y // gcd(x, y)\n    add = lambda x, y: (x % mod + y % mod) % mod\n    sub = lambda x, y: (x % mod - y % mod + mod) % mod\n    a1 = list(map(int, input().split()))\n    a2 = list(sorted(a1))\n    lcm = lambda x, y: x * y // gcd(x, y)\n    add = lambda x, y: (x % mod + y % mod) % mod\n    sub = lambda x, y: (x % mod - y % mod + mod) % mod\n    a3 = [a1.index(a2[0]), 0]\n    local = [0] * n\n    for i in range(2):\n        a3[0] = 0\n        while a3[0] < n:\n            if not local[a3[0]] and a1[a3[0]] == a2[a3[1]]:\n                local[a3[0]] = 1\n                a3[0] += 1\n                a3[1] += 1\n            else:\n                a3[0] += 1\n    lcm = lambda x, y: x * y // gcd(x, y)\n    add = lambda x, y: (x % mod + y % mod) % mod\n    sub = lambda x, y: (x % mod - y % mod + mod) % mod\n    if a3[0] == a3[1]:\n        print('YES')\n    else:\n        print('NO')\nend_time = time.time()"]