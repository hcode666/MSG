["import math\nimport bisect\nfor i in range(int(input())):\n    n = int(input())\n    A = [int(k) for k in input().split()]\n    b = list(set(A))\n    b.sort()\n    d = len(b)\n    mex = 0\n    k = 0\n    while k < d:\n        if b[k] != k:\n            mex = k\n            break\n        else:\n            if k == d - 1:\n                mex = d\n            k += 1\n    if mex == 0:\n        c = b[0]\n        print(c - 1)\n    elif mex == 1:\n        print(-1)\n    elif mex == 2:\n        c = 0\n        for k in range(1, d):\n            if b[k] < mex:\n                pass\n            elif b[k] - b[k - 1] == 1:\n                c += 1\n        print(d - 2 - c)\n    else:\n        c = 0\n        count = 1\n        y = 0\n        k = 0\n        n = d\n        while k < n:\n            if b[k] < mex:\n                k += 1\n            elif b[k] - b[k - 1] == 1:\n                if y == 0:\n                    y = 1\n                    count += 1\n                else:\n                    count += 1\n                if k == n - 1:\n                    if y == 1 and count >= mex - 1:\n                        c += 1\n                        k += 1\n                    else:\n                        k += 1\n                else:\n                    k += 1\n            elif y == 0:\n                k += 1\n            elif y == 1 and count >= mex - 1:\n                c += 1\n                count = 1\n                y = 0\n                k += 1\n            else:\n                y = 0\n                count = 1\n                k += 1\n        print(c)", "import math\nimport bisect\nfor i in range(int(input())):\n    n = int(input())\n    A = [int(k) for k in input().split()]\n    b = list(set(A))\n    b.sort()\n    d = len(b)\n    mex = 0\n    k = 0\n    while k < d:\n        if b[k] != k:\n            mex = k\n            break\n        else:\n            if k == d - 1:\n                mex = d\n            k += 1\n    if mex == 0:\n        c = b[0]\n        print(c - 1)\n    elif mex == 1:\n        print(-1)\n    elif mex == 2:\n        c = 0\n        for k in range(1, d):\n            if b[k] < mex:\n                pass\n            elif b[k] - b[k - 1] == 1:\n                c += 1\n        print(d - 2 - c)\n    else:\n        c = 0\n        count = 1\n        y = 0\n        k = 0\n        n = d\n        while k < n:\n            if b[k] < mex:\n                k += 1\n            elif b[k] - b[k - 1] == 1:\n                if y == 0:\n                    y = 1\n                    count += 1\n                else:\n                    count += 1\n                if k == n - 1:\n                    if y == 1 and count >= mex - 1:\n                        c += 1\n                        k += 1\n                    else:\n                        k += 1\n                else:\n                    k += 1\n            elif y == 0:\n                k += 1\n            elif y == 1 and count >= mex - 1:\n                c += 1\n                count = 1\n                y = 0\n                k += 1\n            else:\n                y = 0\n                count = 1\n                k += 1\n        print(c)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    a.sort()\n    mex = 0\n    for v in a:\n        if v == mex:\n            mex += 1\n        elif v > mex:\n            break\n    ans = 0\n    if mex == 0:\n        ans = a[0] - 1\n    elif mex == 1:\n        ans = -1\n    else:\n        i = 0\n        cnt = 0\n        v = a[i]\n        while i < n:\n            if v == a[i]:\n                v += 1\n                i += 1\n                cnt += 1\n            elif v < a[i]:\n                ans += 1 if cnt >= mex - 1 else 0\n                v = a[i]\n                cnt = 0\n            else:\n                i += 1\n        ans += 0 if cnt >= mex - 1 else -1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    a.sort()\n    mex = 0\n    for v in a:\n        if v == mex:\n            mex += 1\n        elif v > mex:\n            break\n    ans = 0\n    if mex == 0:\n        ans = a[0] - 1\n    elif mex == 1:\n        ans = -1\n    else:\n        i = 0\n        cnt = 0\n        v = a[i]\n        while i < n:\n            if v == a[i]:\n                v += 1\n                i += 1\n                cnt += 1\n            elif v < a[i]:\n                ans += 1 if cnt >= mex else 0\n                v = a[i]\n                cnt = 1\n            else:\n                i += 1\n        ans += 0 if cnt >= mex else -1\n    print(ans)", "def fun(l):\n    s = set(l)\n    mex = 0\n    while mex in s:\n        mex += 1\n    return mex\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(set(list(map(int, input().split()))))\n    l.sort()\n    mex = fun(l)\n    if mex == 1:\n        print(-1)\n    elif mex == 0:\n        print(l[0] - 1)\n    else:\n        i = 0\n        ans = 0\n        n = len(l)\n        count = 1\n        if mex == n:\n            count = 0\n        else:\n            count = 1\n        for i in range(mex, n - 1):\n            if l[i + 1] - l[i] == 1:\n                count += 1\n            else:\n                if count >= mex - 1:\n                    ans += 1\n                count = 1\n        if count >= mex - 1:\n            ans += 1\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    t = list(map(int, input().split()))\n    k = set(t)\n    l = list(k)\n    point = -1\n    l.sort()\n    for i in range(len(l)):\n        if l[i] != i:\n            point = i\n            break\n    if point == -1:\n        point = l[len(l) - 1] + 1\n    count = 1\n    ans = 0\n    for i in range(point, len(l)):\n        if i < len(l) - 1 and l[i] + 1 == l[i + 1]:\n            count += 1\n        else:\n            if count >= point - 1:\n                ans += 1\n            count = 1\n    if point == 1:\n        print(-1)\n    elif point == 0:\n        print(l[0] - 1)\n    elif point == n:\n        print(0)\n    else:\n        print(ans)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(set(a))\n    if 0 not in a:\n        print(min(a) - 1)\n    elif 1 not in a:\n        print(-1)\n    else:\n        a.sort()\n        cont = []\n        l = 1\n        mex = -1\n        for i in range(1, len(a)):\n            if a[i] == a[i - 1] + 1:\n                l += 1\n            else:\n                cont.append(l)\n                l = 1\n        if l != 0:\n            cont.append(l)\n        ans = -1\n        for c in cont:\n            if c >= cont[0] - 1:\n                ans += 1\n        print(ans)", "import sys\nfrom itertools import islice, groupby\nfor s in islice(sys.stdin, 2, None, 2):\n    a = sorted(set(map(int, s.split())))\n    r = a[0] - 1\n    if a[0] == 0:\n        b = (len([*g]) for (k, g) in groupby((x - i for (i, x) in enumerate(a))))\n        m = next(b) - 1\n        if m:\n            r = sum((x >= m for x in b))\n    print(r)", "import sys\nfrom itertools import islice, groupby\nfor s in islice(sys.stdin, 2, None, 2):\n    a = sorted(set(map(int, s.split())))\n    r = a[0] - 1\n    if r < 0:\n        b = (len([*g]) for (k, g) in groupby((x - i for (i, x) in enumerate(a))))\n        m = next(b) - 1\n        if m:\n            r = sum((x >= m for x in b))\n    print(r)", "import sys\nfrom itertools import islice, groupby\nfor s in islice(sys.stdin, 2, None, 2):\n    a = sorted(set(map(int, s.split())))\n    r = a[0] - 1\n    if r < 0:\n        b = (len([*g]) for (k, g) in groupby((x - i for (i, x) in enumerate(a))))\n        m = next(b) - 1\n        if m:\n            r = sum((x >= m for x in b))\n    print(r)", "import sys\nfrom itertools import islice, groupby\nfor s in islice(sys.stdin, 2, None, 2):\n    a = sorted(set(map(int, s.split())))\n    r = a[0] - 1\n    if a[0] == 0:\n        b = (len([*g]) for (k, g) in groupby((x - i for (i, x) in enumerate(a))))\n        m = next(b) - 1\n        if m:\n            r = sum((x >= m for x in b))\n    print(r)", "def mex(a):\n    (n, s, m) = (len(a), set(a), 0)\n    while m in s and m < n:\n        m += 1\n    return m\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = mex(a)\n    a = sorted(set(a))\n    (k, nn) = (0, len(a))\n    clens = []\n    while k < nn:\n        p = c = a[k]\n        j = k\n        k += 1\n        while k < nn and a[k] == p + 1:\n            p += 1\n            k += 1\n        if c:\n            clens.append(k - j)\n    if not m:\n        print(min(a) - 1)\n    elif m == 1:\n        print(-1)\n    else:\n        print(sum((1 for x in clens if x >= m)) + clens.count(m - 1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mex = 0\n    count = 1\n    ans = 0\n    arr.sort()\n    for i in arr:\n        if i == mex:\n            mex += 1\n    if mex == 0:\n        ans = min(arr) - 1\n    elif mex == 1:\n        ans = -1\n    else:\n        for i in range(len(arr) - 1):\n            if arr[i] + 1 == arr[i + 1] or arr[i] == arr[i + 1]:\n                if arr[i] + 1 == arr[i + 1]:\n                    count += 1\n            else:\n                if count >= mex - 1:\n                    ans += 1\n                count = 1\n        if count >= mex - 1:\n            ans += 1\n        ans -= 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mex = 0\n    count = 1\n    ans = 0\n    arr.sort()\n    for i in arr:\n        if i == mex:\n            mex += 1\n    if mex == 0:\n        ans = min(arr) - 1\n    elif mex == 1:\n        ans = -1\n    elif mex > max(arr):\n        ans = 0\n    else:\n        for i in range(len(arr) - 1):\n            if arr[i] + 1 == arr[i + 1] or arr[i] == arr[i + 1]:\n                if arr[i] + 1 == arr[i + 1]:\n                    count += 1\n            else:\n                if count >= mex - 1:\n                    ans += 1\n                count = 1\n        if count >= mex - 1:\n            ans += 1\n        ans -= 1\n    print(ans)", "import sys\nfrom itertools import islice, groupby\nfor s in islice(sys.stdin, 2, None, 2):\n    a = sorted(set(map(int, s.split())))\n    if a[0]:\n        r = a[0] - 1\n    else:\n        b = (len([*g]) for (k, g) in groupby((x - i for (i, x) in enumerate(a))))\n        m = next(b) - 1\n        r = sum((x >= m for x in b)) if m else -1\n    print(r)", "import sys\nfrom itertools import islice, groupby\nfor s in islice(sys.stdin, 2, None, 2):\n    a = [k for (k, g) in groupby(sorted(map(int, s.split())))]\n    if a[0]:\n        r = a[0] - 1\n    else:\n        b = (len([*g]) for (k, g) in groupby((x - i for (i, x) in enumerate(a))))\n        m = next(b) - 1\n        r = sum((x >= m for x in b)) if m else -1\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    mex = 0\n    if l[0] == 0:\n        mex = 1\n        for x in range(1, n):\n            if l[x] == mex - 1:\n                continue\n            elif l[x] == mex:\n                mex = mex + 1\n            else:\n                break\n    if mex == 1:\n        print('-1')\n    elif l[0] != 0:\n        print(l[0] - 1)\n    else:\n        ans = 0\n        cnt = 1\n        for x in range(n - 1):\n            if l[x] + 1 == l[x + 1]:\n                cnt = cnt + 1\n            elif l[x] == l[x + 1]:\n                continue\n            else:\n                if cnt >= mex - 1:\n                    ans = ans + 1\n                cnt = 1\n        if cnt >= mex - 1:\n            ans = ans + 1\n        print(ans - 1)", "def create_contagious(arr):\n    blocks = []\n    (a, b) = (0, 1)\n    while b < len(arr):\n        if arr[b] - arr[b - 1] == 1:\n            b += 1\n        else:\n            blocks.append(arr[a:b])\n            a = b\n            b += 1\n        if b == len(arr):\n            blocks.append(arr[a:b])\n    return blocks\n\ndef solve(A: list):\n    A = list(set(A))\n    A.sort()\n    if A[0] >= 1:\n        return A[0] - 1\n    elif A[0] == 0 and 1 not in A:\n        return -1\n    blocks = create_contagious(A)\n    total_k = 0\n    MEX = blocks[0][-1] + 1\n    for (i, nums) in enumerate(blocks):\n        if i == 0:\n            continue\n        if len(nums) >= MEX - 1:\n            total_k += 1\n    return total_k\n\ndef main():\n    T = int(input())\n    for tc in range(T):\n        n = int(input())\n        A = list(map(int, input().split()))\n        ans = solve(A)\n        print(ans)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(set(map(int, input().split()))))\n    if a[-1] == 0:\n        print(-1)\n        continue\n    target = -1\n    for (i, v) in enumerate(a):\n        if i != v:\n            target = i\n            break\n    if target == 0:\n        print(a[0] - 1)\n        continue\n    elif target == -1:\n        print(0)\n        continue\n    elif target == 1:\n        print(-1)\n        continue\n    countList = []\n    count = 1\n    for i in range(target, len(a) - 1):\n        if a[i] + 1 == a[i + 1]:\n            count += 1\n        elif a[i] != a[i + 1]:\n            countList.append(count)\n            count = 1\n    countList.append(count)\n    ans = 0\n    for i in countList:\n        if i >= target - 1:\n            ans += 1\n    print(ans)", "def get_mex(B):\n    se = set(B)\n    n = len(B)\n    for i in range(n + 1):\n        if i not in se:\n            return i\nfor _ in range(int(input())):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    mex = get_mex(A)\n    if mex == 0:\n        print(min(A) - 1)\n    elif mex == 1:\n        print(-1)\n    else:\n        A = list(set(A))\n        n = len(A)\n        A.sort()\n        ans = 0\n        i = 0\n        while i < n:\n            j = i\n            while j < n - 1 and A[j + 1] - A[j] == 1:\n                j += 1\n            if j - i + 1 >= mex - 1:\n                ans += 1\n            i = j + 1\n        print(ans - 1)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    lis.sort()\n    res = [lis[0]]\n    for i in lis:\n        if i != res[-1]:\n            res.append(i)\n    mex = 0\n    ans = 0\n    for i in res:\n        if i == mex:\n            mex += 1\n        else:\n            break\n    if mex == 0:\n        print(res[0] - 1)\n    elif mex == 1:\n        print(-1)\n    elif mex > res[-1]:\n        print(0)\n    elif mex == len(res):\n        print(0)\n    else:\n        le = len(res)\n        p1 = mex\n        while p1 < le:\n            start = p1\n            p1 += 1\n            while p1 < le and res[p1] == res[p1 - 1] + 1:\n                p1 += 1\n            if p1 - start >= mex - 1:\n                ans += 1\n        print(ans)", "from collections import Counter\nfor t in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr_ = set(arr)\n    arr = sorted(list(arr_))\n    mex = 0\n    ind = 0\n    for i in arr:\n        if i == mex:\n            mex += 1\n            ind += 1\n        else:\n            break\n    if mex == 1:\n        print(-1)\n    elif mex == 0:\n        print(min(arr) - 1)\n    elif mex == len(arr):\n        print(0)\n    elif mex == 2:\n        ans = 0\n        if len(arr) - 1 == ind:\n            print(1)\n            continue\n        cnt = 1\n        for i in range(ind + 1, len(arr)):\n            if arr[i] == arr[i - 1] + 1:\n                cnt += 1\n                if i == len(arr) - 1:\n                    ans += 1\n            else:\n                if cnt >= mex - 1:\n                    ans += 1\n                cnt = 1\n                if i == len(arr) - 1:\n                    ans += 1\n        print(ans)\n    else:\n        ans = 0\n        cnt = 1\n        for i in range(ind + 1, len(arr)):\n            if arr[i] == arr[i - 1] + 1:\n                cnt += 1\n            else:\n                if cnt >= mex - 1:\n                    ans += 1\n                cnt = 1\n            if i == len(arr) - 1:\n                if cnt >= mex - 1:\n                    ans += 1\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(set(a))\n    a.sort()\n    n = len(a)\n    mex = 0\n    for i in a:\n        if i != mex:\n            break\n        else:\n            mex += 1\n    if mex == 1:\n        print(-1)\n        continue\n    if mex == 0:\n        print(min(a) - 1)\n        continue\n    l = 2\n    count = 0\n    for i in range(1, n - 1):\n        if a[i] + 1 == a[i + 1]:\n            l += 1\n        else:\n            if l >= mex - 1:\n                count += 1\n            l = 1\n    if l >= mex - 1:\n        count += 1\n    print(count - 1)", "def fun(n, l):\n    x = 0\n    s = set()\n    for i in range(n):\n        s.add(l[i])\n        while x in s:\n            x += 1\n    return x\nfor _ in range(int(input())):\n    n = int(input())\n    l = set(list(map(int, input().split())))\n    s = l\n    l = list(l)\n    l.sort()\n    n = len(l)\n    x = fun(n, l)\n    val = 0\n    ans = 0\n    i = 0\n    while i < n:\n        if i == l[i]:\n            i += 1\n        else:\n            break\n    while i < n:\n        y = l[i]\n        f = 0\n        while i < n and y + f == l[i]:\n            i += 1\n            f += 1\n        if f >= x - 1:\n            ans += 1\n    if x == 0:\n        print(min(l) - 1)\n    elif x == 1:\n        print(-1)\n    else:\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = list(set(l))\n    l.sort()\n    mex = 0\n    ind = -1\n    for i in range(len(l)):\n        if l[i] == mex:\n            mex += 1\n        else:\n            ind = i\n            break\n    if mex == 0:\n        print(min(l) - 1)\n        continue\n    if mex == 1:\n        print(-1)\n        continue\n    cou = 1\n    tot = 0\n    for i in range(len(l) - 1):\n        if l[i] + 1 == l[i + 1]:\n            cou += 1\n        else:\n            if cou >= mex - 1:\n                tot += 1\n            cou = 1\n    if cou >= mex - 1:\n        tot += 1\n    print(tot - 1)", "import sys\nfrom itertools import islice, groupby\nfor s in islice(sys.stdin, 2, None, 2):\n    a = sorted(set(map(int, s.split())))\n    if a[0]:\n        r = a[0] - 1\n    else:\n        b = (len([*g]) for (k, g) in groupby((x - i for (i, x) in enumerate(a))))\n        m = next(b) - 1\n        r = sum((x >= m for x in b)) if m else -1\n    print(r)", "import sys\nfrom itertools import islice, groupby\nfor s in islice(sys.stdin, 2, None, 2):\n    a = sorted(set(map(int, s.split())))\n    b = (len([*g]) for (k, g) in groupby((x - i for (i, x) in enumerate(a))))\n    m = 0 if a[0] else next(b)\n    if m < 2:\n        r = sum(a[:m ^ 1]) - 1\n    else:\n        m -= 1\n        r = sum((x >= m for x in b))\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    i = 0\n    x = 0\n    a = list(dict.fromkeys(a))\n    a.sort()\n    n = len(a)\n    while i < n and x == a[i]:\n        x += 1\n        i += 1\n    if x == 0:\n        print(a[0] - 1)\n    elif x == 1:\n        print(-1)\n    else:\n        k = 0\n        r = 1\n        i = 0\n        while i < n - 1:\n            r += 1\n            if a[i + 1] != a[i] + 1:\n                if r >= x - 1:\n                    k += 1\n                r = 0\n            i += 1\n        r += 1\n        if r >= x - 1:\n            k += 1\n        k -= 1\n        print(k)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    i = 0\n    x = 0\n    k = 0\n    a = list(dict.fromkeys(a))\n    a.sort()\n    n = len(a)\n    while i < n and x == a[i]:\n        x += 1\n        i += 1\n    if x == 0:\n        print(a[0] - 1)\n    elif x == 1:\n        print(-1)\n    else:\n        ans = 0\n        cnt = 1\n        for i in range(n - 1):\n            cnt += 1\n            if a[i + 1] != a[i] + 1:\n                if cnt >= x - 1:\n                    ans += 1\n                cnt = 0\n        cnt += 1\n        if cnt >= x - 1:\n            ans += 1\n        ans -= 1\n        print(ans)", "def findmex(l):\n    m = 0\n    for i in l:\n        if i != m:\n            break\n        m += 1\n    return m\nt = int(input())\nfor _ in range(t):\n    _ = input()\n    l = list(map(lambda x: int(x), input().split()))\n    l = sorted(list(dict.fromkeys(l)))\n    mex = findmex(l)\n    if mex == 0:\n        print(min(l) - 1)\n    elif mex == 1:\n        print(-1)\n    else:\n        ans = -1\n        i = 0\n        while i < len(l):\n            cnt = 1\n            j = i + 1\n            while j < len(l) and l[j - 1] + 1 == l[j]:\n                cnt += 1\n                j += 1\n            if cnt >= mex - 1:\n                ans += 1\n            i = j\n        print(ans)", "def findmex(l):\n    m = 0\n    for i in l:\n        if i != m:\n            break\n        m += 1\n    return m\nt = int(input())\nfor _ in range(t):\n    _ = input()\n    l = list(map(lambda x: int(x), input().split()))\n    l = sorted(list(dict.fromkeys(l)))\n    mex = findmex(l)\n    if mex == 0:\n        print(min(l) - 1)\n    elif mex == 1:\n        print(-1)\n    else:\n        ans = 0\n        cnt = 1\n        for i in range(0, len(l) - 1):\n            cnt += 1\n            if l[i + 1] != l[i] + 1:\n                if cnt >= mex - 1:\n                    ans += 1\n                cnt = 0\n        cnt += 1\n        if cnt >= mex - 1:\n            ans += 1\n        ans -= 1\n        print(ans)", "def findmex(l):\n    m = 0\n    for i in l:\n        if i != m:\n            break\n        m += 1\n    return m\nt = int(input())\nfor _ in range(t):\n    _ = input()\n    l = list(map(lambda x: int(x), input().split()))\n    l = sorted(list(dict.fromkeys(l)))\n    mex = findmex(l)\n    if mex == 0:\n        print(min(l) - 1)\n    elif mex == 1:\n        print(-1)\n    else:\n        ans = 0\n        cnt = 0\n        for i in range(0, len(l) - 1):\n            cnt += 1\n            if l[i + 1] != l[i] + 1:\n                if cnt >= mex - 1:\n                    ans += 1\n                cnt = 0\n        cnt += 1\n        if cnt >= mex - 1:\n            ans += 1\n        ans -= 1\n        print(ans)", "from itertools import count\nimport sys, math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l.count(0) == 0:\n        print(min(l) - 1)\n    elif l.count(1) == 0:\n        print(-1)\n    else:\n        a = list(set(l))\n        a.sort()\n        x = 1\n        ans = []\n        for i in range(len(a) - 1):\n            if a[i] + 1 == a[i + 1]:\n                x = x + 1\n            else:\n                ans.append(x)\n                x = 1\n        ans.append(x)\n        c = 0\n        for i in range(1, len(ans)):\n            if ans[i] >= ans[0] - 1 and ans[i] > 0:\n                c = c + 1\n        print(c)", "import math\n\ndef mex(a):\n    for x in range(len(a) + 1):\n        if x not in a:\n            return x\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    if 0 not in a:\n        print(min(a) - 1)\n    elif 1 not in a:\n        print(-1)\n    else:\n        b = set(a)\n        m = mex(b)\n        ans = 0\n        seq_len = 1\n        a = list(b)\n        a = sorted(a)\n        for x in range(1, len(a)):\n            if a[x] == a[x - 1] + 1:\n                seq_len += 1\n            else:\n                if seq_len >= m - 1:\n                    ans += 1\n                seq_len = 1\n        if seq_len >= m - 1:\n            ans += 1\n            seq_len = 1\n        print(ans - 1)\n    t -= 1", "def fun(n, l):\n    x = 0\n    s = set()\n    for i in range(n):\n        s.add(l[i])\n        while x in s:\n            x += 1\n    return x\nfor _ in range(int(input())):\n    n = int(input())\n    l = set(list(map(int, input().split())))\n    s = l\n    l = list(l)\n    l.sort()\n    n = len(l)\n    x = fun(n, l)\n    val = 0\n    ans = 0\n    i = 0\n    while i < n:\n        if i == l[i]:\n            i += 1\n        else:\n            break\n    while i < n:\n        y = l[i]\n        f = 0\n        while i < n and y + f == l[i]:\n            i += 1\n            f += 1\n        if f >= x - 1:\n            ans += 1\n    if x == 0:\n        print(min(l) - 1)\n    elif x == 1:\n        print(-1)\n    else:\n        print(ans)", "def fun(n, l):\n    x = 0\n    s = set()\n    for i in range(n):\n        s.add(l[i])\n        while x in s:\n            x += 1\n    return x\nfor _ in range(int(input())):\n    n = int(input())\n    l = set(list(map(int, input().split())))\n    s = l\n    l = list(l)\n    l.sort()\n    n = len(l)\n    x = fun(n, l)\n    val = 0\n    ans = 0\n    i = 0\n    while i < n:\n        if i == l[i]:\n            i += 1\n        else:\n            break\n    while i < n:\n        y = l[i]\n        f = 0\n        while i < n and y + f == l[i]:\n            i += 1\n            f += 1\n        if f >= x - 1:\n            ans += 1\n    if x == 0:\n        print(l[0] - 1)\n    elif x == 1:\n        print(-1)\n    else:\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    lis1 = list(map(int, input().split()))\n    lis1.sort()\n    lis = [lis1[0]]\n    for i in range(1, n):\n        if lis1[i] != lis1[i - 1]:\n            lis.append(lis1[i])\n    n = len(lis)\n    mex = lis[-1] + 1\n    for i in range(n):\n        if lis[i] != i:\n            mex = i\n            break\n    if mex == 0:\n        print(lis[0] - 1)\n        continue\n    if n == 1:\n        print(-1)\n        continue\n    if lis[1] != 1:\n        print(-1)\n        continue\n    total = 0\n    k = mex\n    i = mex\n    while i < n:\n        coun = 1\n        i = i + 1\n        while i < n:\n            if lis[i] == lis[i - 1] + 1:\n                coun += 1\n                i += 1\n            else:\n                break\n        if coun >= mex - 1:\n            total += 1\n    print(total)", "t = int(input())\nfor _ in range(t):\n    input()\n    A = list(set([int(x) for x in input().split(' ')]))\n    A.sort()\n    if 0 not in A:\n        print(min(A) - 1)\n        continue\n    if 1 not in A:\n        print(-1)\n        continue\n    mex = 0\n    for i in range(len(A)):\n        if i != A[i]:\n            mex = i\n            break\n    if mex == 0:\n        mex = A[-1] + 1\n    A.append(A[-1] + 1000)\n    mex -= 1\n    count = -1\n    for i in range(len(A) - mex):\n        if A[i + mex - 1] == A[i] + mex - 1 and A[i + mex - 1] != A[i + mex] - 1:\n            count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr1 = list(map(int, input().split(' ')))\n    arr1.sort()\n    arr = [arr1[0]]\n    for i in range(1, n):\n        if arr1[i] == arr[-1]:\n            continue\n        arr.append(arr1[i])\n    pointer = -1\n    mex = 0\n    for i in range(len(arr)):\n        if arr[i] == mex:\n            mex += 1\n            continue\n        if arr[i] > mex:\n            pointer = i\n            break\n    if pointer == -1:\n        pointer = len(arr)\n    cont = 1\n    ans = 0\n    if mex == 0:\n        print(arr[0] - 1)\n        continue\n    if mex == 1:\n        print(-1)\n        continue\n    if mex == len(arr):\n        print(0)\n        continue\n    for i in range(pointer + 1, len(arr)):\n        if arr[i] == arr[i - 1] + 1:\n            cont += 1\n        else:\n            if cont >= mex - 1:\n                ans += 1\n            cont = 1\n    if cont >= mex - 1:\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a = set(arr)\n    m = 0\n    while True:\n        if m in a:\n            m += 1\n        else:\n            break\n    if m == 1:\n        print(-1)\n    elif m == 0:\n        print(arr[0] - 1)\n    else:\n        i = 0\n        while i < n and arr[i] < m:\n            i += 1\n        if i >= n:\n            print(0)\n            continue\n        ans = 0\n        l = m - 1\n        curr = 1\n        a = arr[i]\n        while i < n:\n            if arr[i] == a:\n                i += 1\n            else:\n                if arr[i] == a + 1:\n                    curr += 1\n                    a += 1\n                else:\n                    if curr >= l:\n                        ans += 1\n                        curr = 1\n                    curr = 1\n                    a = arr[i]\n                i += 1\n        if curr >= l:\n            ans += 1\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(s) for s in input().split(' ')]\n    a = list(set(a))\n    a.sort()\n    n = len(a)\n    ans = 0\n    mex = 0\n    cur = 0\n    temp = []\n    if a[0] != 0:\n        print(a[0] - 1)\n        continue\n    if n == 1:\n        print(-1)\n        continue\n    if a[1] != 1:\n        print(-1)\n        continue\n    cnt = 1\n    for i in range(n - 1):\n        if a[i] + 1 != a[i + 1]:\n            temp.append(cnt)\n            cnt = 1\n        else:\n            cnt += 1\n    if cnt:\n        temp.append(cnt)\n    for i in range(n):\n        if a[i] != cur:\n            mex = cur\n            break\n        else:\n            cur += 1\n    else:\n        print(0)\n        continue\n    for i in range(len(temp)):\n        if i == 0:\n            continue\n        if temp[i] >= mex - 1:\n            ans += 1\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(set(a))\n    if 0 not in a:\n        print(min(a) - 1)\n    elif 1 not in a:\n        print(-1)\n    else:\n        a.sort()\n        cont = []\n        l = 1\n        mex = -1\n        for i in range(1, len(a)):\n            if a[i] == a[i - 1] + 1:\n                l += 1\n            else:\n                cont.append(l)\n                l = 1\n        if l != 0:\n            cont.append(l)\n        ans = -1\n        for c in cont:\n            if c >= cont[0] - 1:\n                ans += 1\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(set(map(int, input().split(' '))))\n    n = len(a)\n    a.sort()\n    b = []\n    if a[0] != 0:\n        print(a[0] - 1)\n        continue\n    (j, ans, k) = (0, 0, 0)\n    for i in range(n):\n        if a[i] != j:\n            j = a[i]\n            b.append(k)\n            k = 0\n        j += 1\n        k += 1\n    b.append(k)\n    if n == 1 or b[0] == 1:\n        print(-1)\n        continue\n    for i in range(len(b)):\n        if b[i] >= b[0] - 1:\n            ans += 1\n    print(ans - 1)", "from sys import stdin\ninput = stdin.readline\n\ndef mex(A):\n    for (i, a) in enumerate(A):\n        if a > i:\n            return i\n    return A[-1] + 1\n\ndef solve(N, A):\n    A = sorted(list(set(A)))\n    N = len(A)\n    m = mex(A)\n    if m == 0:\n        return A[0] - 1\n    if m == 1:\n        return -1\n    if m == 2:\n        good = 0\n        for i in range(2, N):\n            if i == N - 1:\n                good += 1\n            elif A[i + 1] - A[i] >= 2:\n                good += 1\n        return good\n    good = 0\n    i = m\n    while i + m - 2 <= N - 1:\n        ok = True\n        for j in range(1, m - 1):\n            if A[i + j] != A[i] + j:\n                ok = False\n                break\n        if ok and i + m - 1 < N:\n            ok = A[i + m - 1] > A[i] + m - 1\n        if ok:\n            good += 1\n        i += 1\n    return good\nT = int(input().strip())\nfor problem in range(1, T + 1):\n    N = int(input().strip())\n    A = [int(x) for x in input().strip().split()]\n    print(solve(N, A))", "from sys import stdin\ninput = stdin.readline\n\ndef mex(A):\n    for (i, a) in enumerate(A):\n        if a > i:\n            return i\n    return A[-1] + 1\n\ndef solve(N, A):\n    A = sorted(list(set(A)))\n    N = len(A)\n    m = mex(A)\n    if m == 0:\n        return A[0] - 1\n    if m == 1:\n        return -1\n    if m == 2:\n        good = 0\n        for i in range(2, N):\n            if i == N - 1:\n                good += 1\n            elif A[i + 1] - A[i] >= 2:\n                good += 1\n        return good\n    good = 0\n    i = m\n    while i + m - 2 <= N - 1:\n        ok = True\n        for j in range(1, m - 1):\n            if A[i + j] != A[i] + j:\n                ok = False\n                break\n        if ok and i + m - 1 < N:\n            ok = A[i + m - 1] > A[i] + m - 1\n        if ok:\n            good += 1\n        i += 1\n    return good\nT = int(input().strip())\nfor problem in range(1, T + 1):\n    N = int(input().strip())\n    A = [int(x) for x in input().strip().split()]\n    print(solve(N, A))", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    arr.sort()\n    mex = 0\n    for i in arr:\n        if mex == i:\n            mex += 1\n        elif i > mex:\n            break\n    ans = 0\n    if mex == 0:\n        ans += arr[0] - 1\n    elif mex == 1:\n        ans = -1\n    elif mex > 1:\n        cnt = 0\n        v = 0\n        i = 0\n        while i < n:\n            if arr[i] == v:\n                v += 1\n                cnt += 1\n                i += 1\n            elif arr[i] < v:\n                i += 1\n            else:\n                ans += 1 if cnt >= mex else 0\n                cnt = 1\n                v = arr[i]\n        ans += 0 if cnt >= mex else -1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a = set(arr)\n    m = 0\n    while True:\n        if m in a:\n            m += 1\n        else:\n            break\n    if m == 1:\n        print(-1)\n    elif m == 0:\n        print(arr[0] - 1)\n    else:\n        i = 0\n        while i < n and arr[i] < m:\n            i += 1\n        if i >= n:\n            print(0)\n            continue\n        ans = 0\n        l = m - 1\n        curr = 1\n        a = arr[i]\n        while i < n:\n            if arr[i] == a:\n                i += 1\n            else:\n                if arr[i] == a + 1:\n                    curr += 1\n                    a += 1\n                else:\n                    if curr >= l:\n                        ans += 1\n                        curr = 1\n                    curr = 1\n                    a = arr[i]\n                i += 1\n        if curr >= l:\n            ans += 1\n        print(ans)", "from bisect import bisect_left\n\ndef bn(a, x):\n    i = bisect_left(a, x)\n    if i != len(a) and a[i] == x:\n        return i\n    else:\n        return -1\n\ndef check(st, k, x):\n    if k <= 0:\n        return 0\n    it = bn(st, k + 1)\n    it2 = bn(st, k + x - 1)\n    if it == -1 or it2 == -1:\n        return 0\n    cnt = it2 - it + 1\n    if cnt == x - 1:\n        it = bn(st, k + x)\n        if it == -1:\n            return 1\n        return 0\n    return 0\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr = set(arr)\n    arr = list(arr)\n    arr.sort()\n    mex = 0\n    n = len(arr)\n    for i in range(n):\n        if arr[i] == mex:\n            mex += 1\n        else:\n            break\n    if mex == 0:\n        print(max(0, arr[0] - 1))\n    elif mex == 1:\n        print(-1)\n    if mex <= 1:\n        continue\n    ans = []\n    for i in arr:\n        ind1 = check(arr, i, mex)\n        ind2 = check(arr, i - 1, mex)\n        if ind1 == 1:\n            ans.append(i)\n        if ind2 == 1:\n            ans.append(i - 1)\n    print(len(set(ans)))", "from bisect import bisect_left\n\ndef bn(a, x):\n    i = bisect_left(a, x)\n    if i != len(a) and a[i] == x:\n        return i\n    else:\n        return -1\n\ndef check(st, k, x):\n    if k <= 0:\n        return 0\n    it = bn(st, k + 1)\n    it2 = bn(st, k + x - 1)\n    if it == -1 or it2 == -1:\n        return 0\n    cnt = it2 - it + 1\n    if cnt == x - 1:\n        it = bn(st, k + x)\n        if it == -1:\n            return 1\n        return 0\n    return 0\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr = set(arr)\n    arr = list(arr)\n    arr.sort()\n    mex = 0\n    n = len(arr)\n    for i in range(n):\n        if arr[i] == mex:\n            mex += 1\n        else:\n            break\n    if mex == 0:\n        print(max(0, arr[0] - 1))\n    elif mex == 1:\n        print(-1)\n    if mex <= 1:\n        continue\n    ans = []\n    for i in arr:\n        ind1 = check(arr, i, mex)\n        ind2 = check(arr, i - 1, mex)\n        if ind1 == 1:\n            ans.append(i)\n        if ind2 == 1:\n            ans.append(i - 1)\n    print(len(set(ans)))", "from collections import defaultdict as dd\n\ndef solve(lst, n):\n    dk = dd(int)\n    for x in lst:\n        dk[x] = 1\n    for x in range(1 + n):\n        if not dk[x]:\n            return x\nfor _ in range(int(input())):\n    n = int(input())\n    lst_ = list(map(int, input().split()))\n    lst_.sort()\n    lst = []\n    prev = -1\n    n = 0\n    for x in lst_:\n        if x != prev:\n            lst.append(x)\n            n += 1\n        prev = x\n    mex = solve(lst, n)\n    req = mex - 1\n    lst.append(0)\n    if mex == 0:\n        print(lst[0] - 1)\n    elif mex == 1:\n        print(-1)\n    else:\n        cnt = 1\n        rslt = 0\n        for x in range(n):\n            if abs(lst[x] - lst[x + 1]) == 1:\n                cnt += 1\n            else:\n                if cnt >= req:\n                    rslt += 1\n                cnt = 1\n        print(max(0, rslt - 1))", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(list(set(arr)))\n    n = len(arr)\n    mex = n\n    for i in range(n):\n        if arr[i] != i:\n            mex = i\n            break\n    if mex == 1:\n        return -1\n    if mex == n:\n        return 0\n    if mex == 0:\n        return arr[0] - 1\n    ans = 0\n    i = mex\n    while i < n:\n        start = i\n        i += 1\n        while i < n and arr[i] == arr[i - 1] + 1:\n            i += 1\n        if i - start >= mex - 1:\n            ans += 1\n    return ans\nt = int(input())\nfor i in range(t):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sa = set(a)\n    a = sorted(list(sa))\n    mex = None\n    for i in range(len(a)):\n        if i != a[i]:\n            mex = i\n            break\n    if mex is None:\n        mex = a[-1] + 1\n    if mex == 0:\n        print(a[0] - 1)\n        continue\n    if mex == 1:\n        print(-1)\n        continue\n    prev = -100\n    k_count = 0\n    cont = 1\n    for i in a:\n        if i < mex:\n            prev = i\n            cont = -1\n            continue\n        if i - prev == 1:\n            cont += 1\n        else:\n            if cont >= mex - 1:\n                k_count += 1\n            cont = 1\n        prev = i\n    if cont >= mex - 1:\n        k_count += 1\n    print(k_count)", "def nCr(n, r):\n    return fact(n) / (fact(r) * fact(n - r))\n\ndef fact(n):\n    res = 1\n    for i in range(2, n + 1):\n        res = res * i\n    return res\nmod = 10 ** 4\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    ans = []\n    for p in range(2, n + 1):\n        if prime[p]:\n            ans.append(p)\n    return ans\n\ndef nextPowerOf2(n):\n    count = 0\n    if n and (not n & n - 1):\n        return n\n    while n != 0:\n        n >>= 1\n        count += 1\n    return 1 << count\nfrom collections import defaultdict\nimport math\n\ndef primeFactors(n):\n    res = set()\n    while n % 2 == 0:\n        res.add(2)\n        n = n // 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            res.add(i)\n            n = n // i\n    if n > 2:\n        res.add(n)\n    return res\n\ndef upper_bound(arr, target):\n    start = 0\n    end = len(arr) - 1\n    ans = -1\n    while start <= end:\n        mid = (start + end) // 2\n        if arr[mid] <= target:\n            start = mid + 1\n        else:\n            ans = mid\n            end = mid - 1\n    return ans\n\ndef get_dis(s1, s2):\n    s = 'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz'\n    a1 = s.index(s1)\n    a2 = s.rfind(s1)\n    b1 = s.index(s2)\n    b2 = s.rfind(s2)\n    return min(abs(a1 - b1), abs(a1 - b2), abs(a2 - b1), abs(a2 - b2))\nfrom collections import defaultdict\n\ndef func(l, m):\n    ans = 0\n    s = set()\n    for ele in l:\n        ans += ele % m\n        print(ans, ele % m, ele, m)\n        if ele % m in s:\n            return -1\n    print('tot', len(l) * (len(l) + 1) // 2, ans)\n    if ans == len(l) * (len(l) + 1) // 2:\n        return 1\n    return 0\n\ndef printDivisors(n):\n    i = 1\n    res = []\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                res.append(i)\n            else:\n                res.append(i)\n                res.append(n // i)\n        i = i + 1\n    return res\nINF = 1000000000000000000000\nfrom collections import deque\n\ndef solve():\n    d = defaultdict(int)\n    n = int(input())\n    lis = list(map(int, input().split()))\n    lis = list(set(lis))\n    n = len(lis)\n    lis.sort()\n    if lis[0] == 0 and n == 1:\n        print(-1)\n        return\n    if lis[0] != 0:\n        print(lis[0] - 1)\n        return\n    mex = 0\n    i = 0\n    while i < n and lis[i] == mex:\n        i += 1\n        mex += 1\n    if mex == 1:\n        print(-1)\n        return\n    temp = []\n    lis.append(10000000000000000)\n    while i < len(lis):\n        st = lis[i]\n        c = 1\n        j = i + 1\n        while j < len(lis):\n            if lis[j] == lis[j - 1] + 1:\n                j += 1\n                c += 1\n            else:\n                temp.append((st, c))\n                break\n        i = j\n    ans = 0\n    for (i, ele) in enumerate(temp):\n        if ele[0] > mex and ele[1] >= mex - 1:\n            ans += 1\n    print(ans)\nnum_test = 1\nnum_test = int(input())\nfor _ in range(num_test):\n    solve()", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    ans = 0\n    i = 0\n    st = set(lst)\n    lst = list(st)\n    n = len(lst)\n    lst.sort()\n    mex = n\n    for i in range(n):\n        if lst[i] != i:\n            mex = i\n            break\n    if mex == 1:\n        print('-1')\n    elif mex == 0:\n        print(lst[0] - 1)\n    else:\n        i = 0\n        while i < n:\n            ch = lst[i]\n            cnt = 0\n            t = lst[i]\n            while i < n and lst[i] == t:\n                t += 1\n                cnt += 1\n                i += 1\n            if cnt >= mex - 1:\n                ans += 1\n        print(ans - 1)", "for T in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A = list(set(A))\n    N = len(A)\n    A.sort()\n    mex = 0\n    st = -1\n    for i in range(N):\n        if A[i] == mex:\n            mex += 1\n        elif A[i] > mex:\n            st = i\n            break\n        st = i + 1\n    if mex == 1:\n        print(-1)\n    elif mex == 0:\n        print(A[0] - 1)\n    elif mex == 2:\n        ans = 0\n        for i in range(st, N):\n            if A[i] - A[i - 1] > 1:\n                ans += 1\n        print(ans)\n    else:\n        ans = 0\n        i = N - 1\n        while i >= st:\n            ct = 0\n            if A[i] - A[i - 1] == 1:\n                while A[i] - A[i - 1] == 1:\n                    i -= 1\n                    ct += 1\n            else:\n                i -= 1\n            if ct >= mex - 2:\n                ans += 1\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    lis = list(set(s))\n    lis.sort()\n    mex = len(lis)\n    for i in range(len(lis)):\n        if lis[i] != i:\n            mex = i\n            break\n    if mex == 0:\n        print(min(s) - 1)\n    elif mex == 1:\n        print(-1)\n    else:\n        ans = 0\n        i = 2\n        if mex == 2:\n            if lis[-1] - lis[-2] != 1:\n                ans += 1\n        while i < len(lis) - 1:\n            count = 0\n            while i + 1 < len(lis) and lis[i + 1] - lis[i] == 1:\n                i += 1\n                count += 1\n            if count >= mex - 2:\n                ans += 1\n            i += 1\n        print(ans)", "from typing import Counter\n\ndef solve(n, l):\n    if l == [0]:\n        return -1\n    d = Counter(l)\n    if d[0] == 0:\n        return min(l) - 1\n    m = 0\n    while d[m] != 0:\n        m += 1\n    if m == 1:\n        return -1\n    pre = [1] * n\n    for i in range(1, n):\n        if l[i] - 1 == l[i - 1]:\n            pre[i] += pre[i - 1]\n    return pre.count(m - 1) - 1\nfor _ in range(int(input())):\n    n = int(input())\n    l = sorted(list(set(map(int, input().split()))))\n    n = len(l)\n    print(solve(n, l))", "from collections import Counter\nquar = int(input())\nfor _ in range(quar):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a.append(10000000000000)\n    co = Counter(a)\n    mex = 0\n    lm = -1\n    ans = 0\n    while co[mex]:\n        mex += 1\n    if mex == 1:\n        print('-1')\n    elif mex == 0:\n        print(min(a) - 1)\n    else:\n        ans = 0\n        k = 1\n        for i in range(1, len(a)):\n            if a[i] == a[i - 1] + 1:\n                k += 1\n            elif a[i] == a[i - 1]:\n                continue\n            else:\n                if k >= mex - 1:\n                    ans += 1\n                k = 1\n        print(ans - 1)", "import sys\n\ndef solve():\n    (n,) = map(int, sys.stdin.readline().split())\n    a = sorted(set(map(int, sys.stdin.readline().split())))\n    n = len(a)\n    pos = 0\n    while pos < n and a[pos] == pos:\n        pos += 1\n    mex = pos\n    if mex == 1:\n        print(-1)\n    elif mex == 0:\n        print(a[pos] - 1)\n    elif pos == n:\n        print(0)\n    else:\n        res = 0\n        max_gap = a[pos] - 1\n        while pos < n:\n            if a[pos] - a[pos - 1] > 1:\n                max_gap = a[pos] - 1\n            k = a[pos] - mex + 1\n            if max_gap - k <= 0 and (pos + 1 >= n or a[pos + 1] - a[pos] > 1):\n                res += 1\n            pos += 1\n        print(res)\n(t,) = map(int, sys.stdin.readline().split())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = list(set(a))\n    b.sort()\n    le = len(b)\n    mex = 0\n    i = 0\n    while i < le:\n        if b[i] != i:\n            mex = i\n            break\n        else:\n            if i == le - 1:\n                mex = le\n            i += 1\n    if mex == 1:\n        print(-1)\n    elif mex == 0:\n        print(a[0] - 1)\n    elif mex == 2:\n        a = b\n        n = le\n        c = 0\n        for i in range(1, n):\n            if a[i] < mex:\n                pass\n            elif a[i] - a[i - 1] == 1:\n                c += 1\n        print(n - 2 - c)\n    else:\n        i = 0\n        c = 0\n        tc = 1\n        y = 0\n        a = b\n        n = le\n        while i < n:\n            if a[i] < mex:\n                i += 1\n            elif a[i] - a[i - 1] == 1:\n                if y == 0:\n                    y = 1\n                    tc += 1\n                else:\n                    tc += 1\n                if i == n - 1:\n                    if y == 1 and tc >= mex - 1:\n                        c += 1\n                        i += 1\n                    else:\n                        i += 1\n                else:\n                    i += 1\n            elif y == 0:\n                i += 1\n            elif y == 1 and tc >= mex - 1:\n                c += 1\n                tc = 1\n                y = 0\n                i += 1\n            else:\n                y = 0\n                tc = 1\n                i += 1\n        print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mex = 0\n    arr.sort()\n    for i in range(n):\n        if arr[i] == mex:\n            mex += 1\n    if mex == 0:\n        print(arr[0] - 1)\n    elif mex == 1:\n        print(-1)\n    else:\n        c = 0\n        no = mex\n        cnt = 0\n        mn = 0\n        for i in range(n):\n            if arr[i] > mn:\n                if c >= 1:\n                    if cnt >= no - 1:\n                        c += 1\n                elif cnt >= no:\n                    c += 1\n                cnt = 1\n                mn = arr[i] + 1\n            elif arr[i] == mn:\n                mn += 1\n                cnt += 1\n        if c >= 1:\n            if cnt >= no - 1:\n                c += 1\n        elif cnt >= no:\n            c += 1\n        print(c - 1)", "def solve() -> None:\n    ...\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(set(a))\n    n = len(a)\n    if a[0] != 0:\n        print(a[0] - 1)\n        return\n    if 1 not in a:\n        print(-1)\n        return\n    for i in range(n):\n        if a[i] != i:\n            mex = i\n            break\n    else:\n        print(0)\n        return\n    count = 0\n    now = 1\n    for i in range(1, n):\n        if a[i] == a[i - 1] + 1:\n            now += 1\n            continue\n        count += now >= mex - 1\n        now = 1\n    count += now >= mex - 1\n    print(count - 1)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef solve():\n    n = inp()\n    l = list(sorted(set(li())))\n    N = len(l)\n    m = N\n    for i in range(N):\n        if i != l[i]:\n            m = i\n            break\n    if m == 0:\n        pr(l[0] - 1)\n        return\n    if m == 1:\n        pr(-1)\n        return\n    ans = 0\n    cur = 1\n    for i in range(N - 1):\n        if l[i + 1] - l[i] == 1:\n            cur += 1\n        else:\n            if cur + 1 >= m:\n                ans += 1\n            cur = 1\n    if cur + 1 >= m:\n        ans += 1\n    ans -= 1\n    pr(ans)\nfor _ in range(inp()):\n    solve()", "import math\nfrom collections import Counter, defaultdict\nimport sys\nmod = 10 ** 9 + 7\ninput = sys.stdin.readline\nreadInt = lambda : int(input().strip())\nreadfloat = lambda : float(input().strip())\nreadStr = lambda : input().strip()\nintList = lambda : list(map(int, input().strip().split()))\nintMap = lambda : map(int, input().strip().split())\nfloatList = lambda : list(map(float, input().strip().split()))\nfloatMap = lambda : map(float, input().strip().split())\nstrList = lambda : list(input().strip().split())\n\ndef print(*args, end='\\n', sep=' '):\n    for i in args:\n        sys.stdout.write(str(i))\n        sys.stdout.write(sep)\n    sys.stdout.write(end)\n\ndef solve():\n    arr = sorted(set(ar))\n    if arr[0] != 0:\n        return arr[0] - 1\n    if 1 not in set(arr):\n        return -1\n    res = 0\n    for i in range(1, len(arr)):\n        if arr[i] != arr[i - 1] + 1:\n            c = 1\n            for j in range(i + 1, len(arr)):\n                if arr[j] == arr[j - 1] + 1:\n                    c += 1\n                else:\n                    if c >= i - 1:\n                        res += 1\n                    c = 1\n            if c >= i - 1:\n                res += 1\n            break\n    return res\nfor _ in range(readInt()):\n    n = readInt()\n    ar = intList()\n    print(solve())"]