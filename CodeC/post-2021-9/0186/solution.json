["def getprime(n):\n    if n <= 2:\n        return n\n    i = 2\n    while n % i != 0 and i / 2 <= n:\n        i += 1\n    if i <= n // 2:\n        return i\n    return n\nt = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    p = getprime(x)\n    if p == 2:\n        print((y - x) // p + (y - x) % p)\n    elif p % 2 == 1 and x % 2 == 1:\n        x += p\n        p = 2\n        print((y - x) // p + (y - x) % p + 1)", "def prime(x):\n    i = 2\n    while x % i != 0:\n        i += 1\n    return i\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    p = prime(x)\n    if p == 2:\n        print((y - x) // 2 + (y - x) % 2)\n    elif x % 2 == 1:\n        x = x + p\n        print(1 + (y - x) % 2 + (y - x) // 2)", "import math\n\ndef leastPrimeFactor(n):\n    least_prime = [0] * (n + 1)\n    least_prime[1] = 1\n    for i in range(2, n + 1):\n        if least_prime[i] == 0:\n            least_prime[i] = i\n            for j in range(i * i, n + 1, i):\n                if least_prime[j] == 0:\n                    least_prime[j] = i\n    return least_prime[n]\nfor _ in range(int(input())):\n    (x, y) = [int(x) for x in input().split()]\n    if x % 2 == 0:\n        print(math.ceil((y - x) / 2))\n    else:\n        temp = leastPrimeFactor(x)\n        x = x + temp\n        print(math.ceil((y - x) / 2) + 1)", "t = int(input())\nfor i in range(t):\n    (x, y) = input().split()\n    x = int(x)\n    y = int(y)\n    cnt = 0\n    if x >= y:\n        print('0')\n    elif x % 2 == 0:\n        diff = y - x\n        if diff % 2 == 0:\n            print(cnt + diff // 2)\n        else:\n            print(cnt + 1 + diff // 2)\n    else:\n        diff = 0\n        while x < y:\n            if x % 2 == 0:\n                diff = y - x\n                r = -1\n                break\n            elif x % 3 == 0:\n                diff = y - x\n                x += 3\n                cnt += 1\n            elif x % 5 == 0:\n                diff = y - x\n                x += 5\n                cnt += 1\n            elif x % 7 == 0:\n                diff = y - x\n                x += 7\n                cnt += 1\n            elif x % 11 == 0:\n                diff = y - x\n                x += 11\n                cnt += 1\n            elif x % 13 == 0:\n                diff = y - x\n                x += 13\n                cnt += 1\n            else:\n                diff = y - x\n                x += 17\n                cnt += 1\n        if r == -1:\n            if diff % 2 == 0:\n                print(cnt + diff // 2)\n            else:\n                print(cnt + 1 + diff // 2)\n        else:\n            print(cnt)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    i = 0\n    while x < y:\n        if x % 2 == 0:\n            i += (y - x) // 2 if (y - x) % 2 == 0 else (y - x) // 2 + 1\n            break\n        elif x % 3 == 0:\n            x += 3\n        elif x % 5 == 0:\n            x += 5\n        elif x % 7 == 0:\n            x += 7\n        i += 1\n    print(i)", "def prime(n):\n    f = 0\n    for i in range(2, n):\n        if n % i == 0:\n            f = 1\n    if n == 2:\n        p = True\n    elif f == 0:\n        p = True\n    else:\n        p = False\n    return p\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    s = 0\n    for i in range(2, x + 1):\n        if x % i == 0 and prime(i):\n            s = s + 1\n            x = x + i\n            break\n    if y % 2 == 0:\n        print(int((y - x) / 2 + 1))\n    else:\n        print(int((y + 1 - x) / 2 + 1))", "def least_prime(n):\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return i\n    return n\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x % 2 == 0:\n        if y % 2 == 0:\n            print(int((y - x) / 2))\n        else:\n            print(int((y - x) / 2 + 1))\n    else:\n        z = least_prime(x)\n        x = x + z\n        if y % 2 == 0:\n            print(int((y - x) / 2 + 1))\n        else:\n            print(int((y - x) / 2 + 2))", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    num = x\n    sec = 0\n    if x % 2:\n        for i in range(2, int(math.sqrt(x)) + 1):\n            if x % i == 0:\n                x += i\n                break\n        else:\n            x *= 2\n        sec += 1\n    if x >= y:\n        print(1)\n    elif (y - x) % 2 == 0:\n        print(sec + (y - x) // 2)\n    else:\n        print(sec + (y - x) // 2 + 1)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    i = 0\n    while x < y:\n        if x % 2 == 0:\n            i += (y - x) // 2 if (y - x) % 2 == 0 else (y - x) // 2 + 1\n            break\n        elif x % 3 == 0:\n            x += 3\n        elif x % 5 == 0:\n            x += 5\n        elif x % 7 == 0:\n            x += 7\n        i += 1\n    print(i)", "import math\nfor t in range(int(input())):\n    (x, y) = map(int, input().split())\n    ans = 0\n    y -= x\n    if x % 2 == 0:\n        ans = math.ceil(y / 2)\n    elif x % 3 == 0:\n        ans += 1\n        y -= 3\n        ans += math.ceil(y / 2)\n    elif x % 5 == 0:\n        ans += 1\n        y -= 5\n        ans += math.ceil(y / 2)\n    elif x % 7 == 0:\n        ans += 1\n        y -= 7\n        ans += math.ceil(y / 2)\n    print(ans)", "import math\n\ndef prFactor(inp):\n    if inp % 2 == 0:\n        return 2\n    if inp == 9:\n        return 3\n    if inp == 3:\n        return 3\n    if inp == 5:\n        return 5\n    if inp == 7:\n        return 7\ncases = eval(input())\nwhile cases > 0:\n    count = 0\n    val = input().split(' ')\n    isc = int(val[0])\n    nsc = int(val[1])\n    while isc % 2 != 0:\n        isc = isc + prFactor(isc)\n        count = count + 1\n    runr = nsc - isc\n    val = runr / 2\n    c = math.ceil(count + val)\n    print(c)\n    cases = cases - 1", "import math\nfor t in range(int(input())):\n    (x, y) = map(int, input().split())\n    ans = 0\n    y -= x\n    if x % 2 == 0:\n        ans = math.ceil(y / 2)\n    elif x % 3 == 0:\n        ans += 1\n        y -= 3\n        ans += math.ceil(y / 2)\n    elif x % 5 == 0:\n        ans += 1\n        y -= 5\n        ans += math.ceil(y / 2)\n    elif x % 7 == 0:\n        ans += 1\n        y -= 7\n        ans += math.ceil(y / 2)\n    print(ans)", "import math as M\nt = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    need = y - x\n    if x % 2 == 0:\n        print(int(M.ceil(need / 2)))\n    elif x == 9:\n        need -= 3\n        print(int(M.ceil(need / 2)) + 1)\n    else:\n        need -= x\n        print(int(M.ceil(need / 2)) + 1)", "import math as M\nt = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    need = y - x\n    if x % 2 == 0:\n        print(int(M.ceil(need / 2)))\n    elif x == 9:\n        need -= 3\n        print(int(M.ceil(need / 2)) + 1)\n    else:\n        need -= x\n        print(int(M.ceil(need / 2)) + 1)", "import math\nt = int(input())\n\ndef solve():\n    (x, y) = [int(i) for i in input().split()]\n    if x % 2 == 0:\n        print(math.ceil((y - x) / 2))\n    elif x == 9:\n        print(math.ceil((y - (x + 3)) / 2 + 1))\n    else:\n        print(math.ceil((y - (x + x)) / 2 + 1))\nfor i in range(t):\n    {solve()}", "import math as m\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    need = y - x\n    if x % 2 == 0:\n        print(int(m.ceil(need / 2)))\n    elif x == 9:\n        need -= 3\n        print(int(m.ceil(need / 2)) + 1)\n    else:\n        need -= x\n        print(int(m.ceil(need / 2)) + 1)", "import math as M\nt = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    need = y - x\n    if x % 2 == 0:\n        print(int(M.ceil(need / 2)))\n    elif x == 9:\n        need -= 3\n        print(int(M.ceil(need / 2)) + 1)\n    else:\n        need -= x\n        print(int(M.ceil(need / 2)) + 1)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    i = 0\n    while x < y:\n        if x % 2 == 0:\n            i += (y - x) // 2 if (y - x) % 2 == 0 else (y - x) // 2 + 1\n            break\n        elif x % 3 == 0:\n            x += 3\n        elif x % 5 == 0:\n            x += 5\n        elif x % 7 == 0:\n            x += 7\n        i += 1\n    print(i)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    i = 0\n    while x < y:\n        if x % 2 == 0:\n            i += (y - x) // 2 if (y - x) % 2 == 0 else (y - x) // 2 + 1\n            break\n        elif x % 3 == 0:\n            x += 3\n        elif x % 5 == 0:\n            x += 5\n        elif x % 7 == 0:\n            x += 7\n        i += 1\n    print(i)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    for i in range(2, x + 1):\n        if x % i == 0:\n            x += i\n            break\n    n = y - x\n    if n % 2 == 1:\n        n += 1\n    n = n // 2\n    print(n + 1)", "for _ in range(int(input())):\n    (x, y) = map(int, input().strip().split())\n    if x % 2 == 0:\n        x += 2\n    elif x % 3 == 0:\n        x += 3\n    elif x % 5 == 0:\n        x += 5\n    elif x % 7 == 0:\n        x += 7\n    print(1 + int((y - x) / 2) + (y - x) % 2)", "for _ in range(int(input())):\n    (x, y) = map(int, input().strip().split())\n    if x % 2 == 0:\n        x += 2\n    elif x % 3 == 0:\n        x += 3\n    elif x % 5 == 0:\n        x += 5\n    elif x % 7 == 0:\n        x += 7\n    print(1 + int((y - x) / 2) + (y - x) % 2)", "import math\n\ndef spf(a):\n    x = 3\n    while x <= math.sqrt(a):\n        if a % x == 0:\n            return x\n        x += 1\n    return a\nfor i in range(int(input())):\n    a = list(map(int, input().split()))\n    (x, y) = (a[0], a[1])\n    if x % 2 == 0:\n        print(math.ceil((y - x) / 2))\n    else:\n        c = spf(x)\n        print(math.ceil((y - (x + c)) / 2) + 1)", "import math as M\nt = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    need = y - x\n    if x % 2 == 0:\n        print(int(M.ceil(need / 2)))\n    elif x == 9:\n        need -= 3\n        print(int(M.ceil(need / 2)) + 1)\n    else:\n        need -= x\n        print(int(M.ceil(need / 2)) + 1)", "import math\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    res = x\n    count = 0\n    if x % 2 == 0:\n        cnt = y - x\n        count += int(math.ceil(cnt / 2))\n    else:\n        if x == 3 or x == 9:\n            x = x + 3\n            count += 1\n        else:\n            x = x + x\n            count += 1\n        cnt = y - x\n        count += int(math.ceil(cnt / 2))\n    print(count)", "import math as M\nt = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    need = y - x\n    if x % 2 == 0:\n        print(int(M.ceil(need / 2)))\n    elif x == 9:\n        need -= 3\n        print(int(M.ceil(need / 2)) + 1)\n    else:\n        need -= x\n        print(int(M.ceil(need / 2)) + 1)", "import math as M\nfor _ in range(int(input())):\n    (x, y) = list(map(int, input().split()))\n    need = y - x\n    if x % 2 == 0:\n        print(int(M.ceil(need / 2)))\n    elif x == 9:\n        need -= 3\n        print(int(M.ceil(need / 2)) + 1)\n    else:\n        need -= x\n        print(int(M.ceil(need / 2)) + 1)", "import math as m\nfor _ in range(int(input())):\n    (n, t) = map(int, input().split())\n    if n % 2 == 0:\n        d = t - n\n        print(int(m.ceil(d / 2)))\n    elif n != 9:\n        d = t - n * 2\n        print(int(m.ceil(d / 2)) + 1)\n    else:\n        d = t - n - 3\n        print(int(m.ceil(d / 2)) + 1)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    num = x\n    sec = 0\n    if x % 2:\n        for i in range(2, int(math.sqrt(x)) + 1):\n            if x % i == 0:\n                x += i\n                break\n        else:\n            x *= 2\n        sec += 1\n    if x >= y:\n        print(1)\n    elif (y - x) % 2 == 0:\n        print(sec + (y - x) // 2)\n    else:\n        print(sec + (y - x) // 2 + 1)", "for t in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a % 2 == 0:\n        print((b - a + 1) // 2)\n    elif a == 9:\n        b = b - 3\n        print((b - a + 1) // 2 + 1)\n    else:\n        b = b - a\n        print((b - a + 1) // 2 + 1)", "from collections import defaultdict\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x % 2 == 0:\n        dif = y - x\n        cnt = dif // 2\n        if dif % 2 == 1:\n            cnt += 1\n        print(cnt)\n        continue\n    prime = [0] * (10 ** 6 + 1)\n    d = defaultdict(int)\n    for i in range(2, 10 ** 4 + 1):\n        if prime[i] == 0:\n            d[i] = i\n            p = i * i\n            while p * p <= 10 ** 4:\n                prime[p] = 1\n                d[p] = i\n                p += i\n    cnt = 0\n    while x < y and x % 2 == 1:\n        x += d[x]\n        cnt += 1\n    if x < y:\n        dif = y - x\n        cnt += dif // 2\n        if dif % 2 == 1:\n            cnt += 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    if x % 2 == 0:\n        print((y - x + 1) // 2)\n    elif x == 9:\n        y = y - 3\n        print((y - x + 1) // 2 + 1)\n    else:\n        y = y - x\n        print((y - x + 1) // 2 + 1)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a % 2 == 0:\n        print((b - a + 1) // 2)\n    elif a == 9:\n        b = b - 3\n        print((b - a + 1) // 2 + 1)\n    else:\n        b = b - a\n        print((b - a + 1) // 2 + 1)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    i = 0\n    while x < y:\n        if x % 2 == 0:\n            i += (y - x) // 2 if (y - x) % 2 == 0 else (y - x) // 2 + 1\n            break\n        elif x % 3 == 0:\n            x += 3\n        elif x % 5 == 0:\n            x += 5\n        elif x % 7 == 0:\n            x += 7\n        i += 1\n    print(i)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    c = 0\n    while x < y:\n        if x % 2 == 0:\n            print(c + math.ceil((y - x) / 2))\n            break\n        elif x % 3 == 0:\n            x += 3\n            c += 1\n        elif x % 5 == 0:\n            x += 5\n            c += 1\n        elif x % 7 == 0:\n            x += 7\n            c += 1\n        elif x % 9 == 0:\n            x += 9\n            c += 1", "from math import ceil\n\ndef isPrime(n):\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x % 2 == 0:\n        print(ceil((y - x) / 2))\n    elif x == 3:\n        print(ceil((y - x - 3) / 2 + 1))\n    elif x % 3 == 0:\n        print(ceil((y - x - 3) / 2 + 1))\n    elif isPrime(x):\n        print(ceil((y - 2 * x) / 2 + 1))", "def factor(n):\n    for i in range(2, n + 1):\n        if n % i == 0:\n            return i\n\ndef odev(n):\n    if n % 2 == 0:\n        return 1\n    else:\n        return 0\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    k = factor(a)\n    c = (b - a - k) // 2\n    if odev(b):\n        print(c + 1)\n    else:\n        print(c + 2)", "def smallest_prime_factor(n):\n    for i in range(2, n + 1):\n        if n % i == 0:\n            return i\nt = int(input())\nfor cases in range(t):\n    (x, y) = map(int, input().split(' '))\n    time = 0\n    if x % 2 == 1:\n        x += smallest_prime_factor(x)\n        time += 1\n    print(time + (y - x + 1) // 2)", "t = int(input())\ntime = 0\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    for j in range(2, x + 1):\n        if x % j == 0:\n            x += j\n            time = 1\n            break\n    if y % 2 == 0:\n        time += (y - x) // 2\n    else:\n        time += (y - x + 1) // 2\n    print(time)", "import math\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    k = y - x\n    if x % 2 == 0:\n        print(math.ceil(k / 2))\n    elif x == 9:\n        k -= 3\n        print(math.ceil(k / 2) + 1)\n    else:\n        k -= x\n        print(math.ceil(k / 2) + 1)", "def smallestDivisor(n):\n    if n % 2 == 0:\n        return 2\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return i\n    return n\n\ndef Answer():\n    (x, y) = map(int, input().split())\n    x += smallestDivisor(x)\n    print(1 + (y - x + 1) // 2)\nt = int(input())\nfor i in range(t):\n    Answer()", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    s = x\n    for i in range(2, x):\n        if x % i == 0:\n            s = i\n            break\n    if y - x + s % 2:\n        s -= 1\n    print(1 + (y - (x + s)) // 2)", "for _ in range(int(input())):\n    (x, y) = [int(i) for i in input().split()]\n    t = 0\n    if not x % 2 == 0:\n        t = 1\n        for j in range(3, x + 1):\n            if x % j == 0:\n                x += j\n                break\n    print((y - x) // 2 + (y - x) % 2 + t)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    s = x\n    for i in range(2, x):\n        if x % i == 0:\n            s = i\n            break\n    if y - x + s % 2:\n        s -= 1\n    print(1 + (y - (x + s)) // 2)", "def prime(n):\n    for i in range(2, n):\n        if n % i == 0:\n            return False\n    return True\nimport math\nfor _ in range(int(input())):\n    c = 0\n    (a, b) = map(int, input().split())\n    if a % 2 == 0:\n        print(math.ceil((b - a) / 2))\n    else:\n        i = 3\n        while a < b:\n            if a % 2 == 0:\n                c += math.ceil((b - a) / 2)\n                break\n            elif a % i == 0 and prime(i):\n                a += i\n                i = 3\n                c += 1\n            else:\n                i += 2\n        print(c)", "def prime(n):\n    for i in range(2, n):\n        if n % i == 0:\n            return False\n    return True\nimport math\nfor _ in range(int(input())):\n    c = 0\n    (a, b) = map(int, input().split())\n    if a % 2 == 0:\n        print(math.ceil((b - a) / 2))\n    else:\n        i = 3\n        while a < b:\n            if a % 2 == 0:\n                c += math.ceil((b - a) / 2)\n                break\n            elif a % i == 0 and prime(i):\n                a += i\n                i = 3\n                c += 1\n            else:\n                i += 2\n        print(c)", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    i = 0\n    for i in range(2, x + 1):\n        if x % i == 0:\n            break\n    if y % 2 == 1:\n        print((y - (x + i)) // 2 + 2)\n    else:\n        print((y - (x + i)) // 2 + 1)", "import math\nt = int(input())\nwhile t:\n    (x, y) = map(int, input().split())\n    if x % 2 == 0:\n        op = math.ceil((y - x) / 2)\n    else:\n        if x % 3 == 0:\n            x += 3\n        elif x % 5 == 0:\n            x += 5\n        elif x % 7 == 0:\n            x += 7\n        op = math.ceil((y - x) / 2) + 1\n    print(op)\n    t -= 1", "from math import *\n\ndef smalldiv(a):\n    for i in range(2, int(sqrt(a)) + 1):\n        if a % i == 0:\n            return i\n    return a\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    count = 0\n    while x < y:\n        if x % 2 == 0:\n            if (y - x) % 2 == 0:\n                count += int((y - x) / 2)\n                break\n            else:\n                count += int((y - x + 1) / 2)\n                break\n        else:\n            d = smalldiv(x)\n            x += d\n            count += 1\n    print(count)", "import math as M\nt = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    need = y - x\n    if x % 2 == 0:\n        print(int(M.ceil(need / 2)))\n    elif x == 9:\n        need -= 3\n        print(int(M.ceil(need / 2)) + 1)\n    else:\n        need -= x\n        print(int(M.ceil(need / 2)) + 1)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    for i in range(2, x + 1):\n        if x % i == 0:\n            x = x + i\n            break\n    k = math.ceil((y - x) / 2)\n    print(k + 1)", "T = int(input(''))\nfor i in range(T):\n    (X, Y) = map(int, input().split())\n    if X % 2 == 0:\n        if Y % 2 == 0:\n            print(int((Y - X) / 2))\n        else:\n            print(int((Y - X) / 2 + 1))\n    elif X % 3 == 0:\n        X = X + 3\n        if Y % 2 == 0:\n            print(int((Y - X) / 2 + 1))\n        else:\n            print(int((Y - X) / 2 + 2))\n    elif X % 5 == 0:\n        X = X + 5\n        if Y % 2 == 0:\n            print(int((Y - X) / 2 + 1))\n        else:\n            print(int((Y - X) / 2 + 2))\n    elif X == 7:\n        X = X + 7\n        if Y % 2 == 0:\n            print(int((Y - X) / 2 + 1))\n        else:\n            print(int((Y - X) / 2 + 2))", "def findprime(n):\n    for i in range(2, n + 1):\n        if n % i == 0:\n            return i\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a % 2 == 0:\n        print((b - a + 1) // 2)\n    else:\n        count = 0\n        while a < b:\n            x = findprime(a)\n            if x == 2:\n                count += (b - a + 1) // 2\n                break\n            else:\n                a += x\n                count += 1\n        print(count)", "t = int(input())\nfor i in range(0, t):\n    (x, y) = map(int, input().split())\n    c = 0\n    k = 2\n    while x < y:\n        if x % 2 == 0:\n            if (y - x) % 2 == 0:\n                c += (y - x) // 2\n                break\n            else:\n                c += (y - x) // 2 + 1\n                break\n        elif x % 3 == 0:\n            x += 3\n        elif x % 5 == 0:\n            x += 5\n        elif x % 7 == 0:\n            x += 7\n        c += 1\n    print(c)", "import math\nt = int(input())\nfor tc in range(t):\n    (x, y) = map(int, input().split())\n    n = y - x\n    v = 0\n    if x % 2 == 0:\n        v = int(math.ceil(n / 2))\n    elif x == 9:\n        n -= 3\n        v = int(math.ceil(n / 2) + 1)\n    else:\n        n -= x\n        v = int(math.ceil(n / 2) + 1)\n    print(v)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    count = 0\n    while x % 2 != 0:\n        for i in range(3, x + 1):\n            if x % i == 0:\n                x += i\n                count += 1\n                break\n    ans = count + (y - x) // 2\n    print(ans + 1 if y % 2 != 0 else ans)", "import math as M\nt = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    need = y - x\n    if x % 2 == 0:\n        print(int(M.ceil(need / 2)))\n    elif x == 9:\n        need -= 3\n        print(int(M.ceil(need / 2)) + 1)\n    else:\n        need -= x\n        print(int(M.ceil(need / 2)) + 1)", "t = int(input())\nfor n in range(t):\n    (x, y) = map(int, input().split())\n    i = 0\n    while x < y:\n        if x % 2 == 0:\n            i += (y - x) // 2 if (y - x) % 2 == 0 else (y - x) // 2 + 1\n            break\n        elif x % 3 == 0:\n            x += 3\n        elif x % 5 == 0:\n            x += 5\n        elif x % 7 == 0:\n            x += 7\n        i += 1\n    print(i)", "def smallestDivisor(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\nt = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    res = 0\n    while x < y:\n        x = x + smallestDivisor(x)\n        res += 1\n        if x % 2 == 0:\n            break\n    res += (y - x) // 2\n    if y % 2 == 1:\n        print(res + 1)\n    else:\n        print(res)", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nsys.setrecursionlimit(10000000)\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nmod = 1000000007\n\ndef dfs(n, k):\n    need = k - n\n    if n % 2 == 0:\n        return math.ceil(need / 2)\n    elif n == 9:\n        need -= 3\n        return math.ceil(need / 2) + 1\n    else:\n        need -= n\n        return math.ceil(need / 2) + 1\ntried = int(input())\nfor _ in range(tried):\n    (n, k) = mul()\n    print(dfs(n, k))", "for _ in range(int(input())):\n    (x, y) = list(map(int, input().split()))\n    f = 0\n    while x < y:\n        if x % 2 == 0:\n            print((y - x) // 2 + y % 2 + f)\n            break\n        else:\n            f = 1\n            for i in range(3, x // 2 + 1):\n                if x % i == 0:\n                    x += i\n                    break\n            else:\n                x += x", "import math as M\nt = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    need = y - x\n    if x % 2 == 0:\n        print(int(M.ceil(need / 2)))\n    elif x == 9:\n        need -= 3\n        print(int(M.ceil(need / 2)) + 1)\n    else:\n        need -= x\n        print(int(M.ceil(need / 2)) + 1)", "import math\n\ndef prime(num):\n    for i in range(2, int(round(num / 2 + 1))):\n        if num % i == 0:\n            return i\n    return num\nnum_test = int(input())\nfor i in range(0, num_test):\n    (num, y) = map(int, input().split())\n    min_num = int(prime(num))\n    count = num + min_num\n    sun = 1\n    if math.floor((y - count) / 2) < (y - count) / 2:\n        sun += math.floor((y - count) / 2) + 1\n    else:\n        sun += math.floor((y - count) / 2)\n    print(sun)", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    (x, y) = map(int, input().split())\n    if x % 2 == 0:\n        print((y - x + 1) // 2)\n    elif x == 7:\n        print(1 + (y - 7 - x + 1) // 2)\n    elif x == 5:\n        print(1 + (y - 5 - x + 1) // 2)\n    else:\n        print(1 + (y - 3 - x + 1) // 2)", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    (x, y) = map(int, input().split())\n    if x % 2 == 0:\n        print((y - x + 1) // 2)\n    elif x == 7:\n        print(1 + (y - 7 - x + 1) // 2)\n    elif x == 5:\n        print(1 + (y - 5 - x + 1) // 2)\n    else:\n        print(1 + (y - 3 - x + 1) // 2)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x % 2 == 0:\n        print(math.ceil((y - x) / 2))\n    else:\n        for i in [3, 5, 7]:\n            if x % i == 0:\n                x = x + i\n                break\n        print(math.ceil((y - x) / 2) + 1)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = n\n    c = 0\n    while x < m:\n        if x % 2 == 0:\n            if (m - x) % 2 == 1:\n                c = c + (m - x) // 2 + 1\n                break\n            else:\n                c = c + (m - x) // 2\n                break\n        for j in range(2, x + 1):\n            if x % j == 0:\n                x = x + j\n                break\n        c = c + 1\n    print(c)", "from collections import *\nfrom bisect import *\nfrom heapq import *\nfrom math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().rstrip('\\r\\n')\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    cnt = 0\n    while x < y:\n        cnt += 1\n        if x % 2 == 0:\n            rem = y - x\n            if (y - x) % 2:\n                cnt += (y - x) // 2 + 1\n                x += (y - x) // 2 * 2 + 2\n            else:\n                cnt += (y - x) // 2\n                x += (y - x) // 2 * 2\n            cnt -= 1\n            continue\n        xx = x\n        for i in range(2, int(x ** 0.5) + 1):\n            if x % i == 0:\n                x += i\n                break\n        if xx == x:\n            x += x\n    print(cnt)", "t = int(input())\ntb = []\nfor nn in range(0, t):\n    jj = str(input())\n    vv = jj.split(' ')\n    jnb = []\n    for ii in vv:\n        jnb.append(int(ii))\n    tb.append(jnb)\nfor xxz in tb:\n    score = xxz[0]\n    target = xxz[1]\n    ite = 0\n    if score % 2 != 0:\n        ite = 1\n        for tth in range(3, score + 1, 2):\n            if score % tth == 0:\n                score += tth\n                break\n        if score >= target:\n            print(ite)\n        elif target % 2 == 0:\n            hbv = target - score\n            print(ite + hbv // 2)\n        else:\n            hbv = target - 1 - score\n            print(hbv // 2 + 1 + ite)\n    elif target % 2 == 0:\n        hbv = target - score\n        print(hbv // 2)\n    else:\n        hbv = target - 1 - score\n        print(hbv // 2 + 1)", "import math as M\nt = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    need = y - x\n    if x % 2 == 0:\n        print(int(M.ceil(need / 2)))\n    elif x == 9:\n        need -= 3\n        print(int(M.ceil(need / 2)) + 1)\n    else:\n        need -= x\n        print(int(M.ceil(need / 2)) + 1)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a % 2 == 0:\n        a += 2\n    elif a % 3 == 0:\n        a += 3\n    else:\n        a += a\n    print((b - a + 1) // 2 + 1)", "import math as M\nt = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    need = y - x\n    if x % 2 == 0:\n        print(int(M.ceil(need / 2)))\n    elif x == 9:\n        need -= 3\n        print(int(M.ceil(need / 2)) + 1)\n    else:\n        need -= x\n        print(int(M.ceil(need / 2)) + 1)", "import math\nt = int(input())\nwhile t:\n    (x, y) = map(int, input().split())\n    i = 0\n    while x < y:\n        if x % 2 == 0:\n            i += math.ceil((y - x) / 2)\n            break\n            x += 2\n        elif x % 3 == 0:\n            x += 3\n        elif x % 5 == 0:\n            x += 5\n        elif x % 7 == 0:\n            x += 7\n        i += 1\n    print(i)\n    t -= 1", "import math\nT = int(input())\nfor i in range(T):\n    (X, Y) = input().split()\n    X = int(X)\n    Y = int(Y)\n    if X % 2 == 0:\n        print(math.ceil((Y - X) / 2))\n    elif X == 3:\n        if Y <= 6:\n            print(1)\n        else:\n            print(1 + math.ceil((Y - 6) / 2))\n    elif X == 5:\n        if Y <= 10:\n            print(1)\n        else:\n            print(1 + math.ceil((Y - 10) / 2))\n    elif X == 7:\n        if Y <= 14:\n            print(1)\n        else:\n            print(1 + math.ceil((Y - 14) / 2))\n    elif Y <= 12:\n        print(1)\n    else:\n        print(1 + math.ceil((Y - 12) / 2))", "fuck = int(input())\nwhile fuck > 0:\n    a = list(map(int, input().split()))\n    count = 0\n    g = False\n    if a[0] % 2 == 0:\n        g = True\n    while a[0] < a[1]:\n        if a[0] % 2 == 0:\n            b = a[1] - a[0]\n            if b % 2 == 0:\n                count = int(b / 2)\n                a[0] = a[1]\n                break\n            else:\n                count = int((b + 1) / 2)\n                a[0] = a[1]\n                break\n        else:\n            i = 2\n            flag = False\n            while i * i <= a[0]:\n                if a[0] % i == 0:\n                    a[0] += i\n                    count += 1\n                    flag = True\n                    i = a[0]\n                i += 1\n            if flag == False:\n                a[0] += a[0]\n                count += 1\n                flag = False\n    if g == True:\n        print(count)\n    else:\n        print(count + 1)\n    fuck -= 1", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    i = 0\n    while x < y:\n        if x % 2 == 0:\n            i += (y - x) // 2 if (y - x) % 2 == 0 else (y - x) // 2 + 1\n            break\n        elif x % 3 == 0:\n            x += 3\n        elif x % 5 == 0:\n            x += 5\n        elif x % 7 == 0:\n            x += 7\n        i += 1\n    print(i)", "import math\n\ndef prime(num):\n    for i in range(2, math.floor(num ** 0.5 + 1)):\n        if num % i == 0:\n            return False\n    return True\n\ndef lprime(score):\n    for i in range(2, math.floor(score ** 0.5 + 1)):\n        if score % i == 0 and prime(i):\n            return i\n    return score\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    score = x\n    t = 0\n    l = []\n    for i in range(2, math.floor(score ** 0.5 + 1)):\n        if prime(i):\n            l.append(i)\n    l.append(score)\n    while score < y:\n        if score % 2 == 0:\n            t += (y - score) // 2 + y % 2\n            break\n        for i in l:\n            if score % i == 0:\n                score += i\n                break\n        t += 1\n    print(t)", "T = int(input())\nfor i in range(T):\n    a = input()\n    (X, Y) = [int(i) for i in a.split(' ')]\n    time = 0\n    fact = -1\n    for i in range(2, int(X ** 0.5) + 1):\n        if X % i == 0:\n            fact = i\n            break\n    if fact == -1:\n        fact = X\n    X = X + fact\n    if (Y - X) % 2 == 0:\n        print(int((Y - X) / 2 + 1))\n    else:\n        print(int((Y - X) // 2 + 2))", "T = int(input())\nfor i in range(T):\n    a = input()\n    (X, Y) = [int(i) for i in a.split(' ')]\n    time = 0\n    fact = -1\n    for i in range(2, int(X ** 0.5) + 1):\n        if X % i == 0:\n            fact = i\n            break\n    if fact == -1:\n        fact = X\n    X = X + fact\n    if (Y - X) % 2 == 0:\n        print(int((Y - X) / 2 + 1))\n    else:\n        print(int((Y - X) // 2 + 2))", "import math\nk = int(input())\nfor q in range(k):\n    (x, y) = map(int, input().split())\n    cnt = 0\n    for i in range(1, x):\n        if x % (i + 1) == 0:\n            x += i + 1\n            cnt += 1\n            break\n    y -= x\n    cnt += int(math.ceil(y / 2))\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    (x, y) = input().split()\n    (x, y) = (int(x), int(y))\n    a = int(0)\n    if x % 2 == 0:\n        if y % 2 == 0:\n            a = int((y - x) / 2)\n        else:\n            a = int((y - x) / 2) + 1\n    elif x % 3 == 0:\n        x += 3\n        if x >= y:\n            a = 1\n        elif y % 2 == 0:\n            a = int((y - x) / 2 + 1)\n        else:\n            a = int((y - x) / 2) + 2\n    elif x % 5 == 0:\n        x += 5\n        if x >= y:\n            a = 1\n        elif y % 2 == 0:\n            a = int((y - x) / 2 + 1)\n        else:\n            a = int((y - x) / 2) + 2\n    elif x % 7 == 0:\n        x += 7\n        if x >= y:\n            a = 1\n        elif y % 2 == 0:\n            a = int((y - x) / 2 + 1)\n        else:\n            a = int((y - x) / 2) + 2\n    print(a)", "def smallPrime(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\ntry:\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        ans = 0\n        while a < b:\n            a += smallPrime(a)\n            ans += 1\n            if a % 2 == 0:\n                break\n        c = 0\n        if (b - a) % 2 == 0:\n            c = (b - a) // 2\n        else:\n            c = (b - a) // 2 + 1\n        print(ans + c)\nexcept:\n    pass", "import math\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    if x % 2 == 0:\n        print(math.ceil(y / 2) - x // 2)\n    else:\n        res = math.ceil(y / 2)\n        if x == 3:\n            print(res - x + 1)\n        elif x == 5:\n            print(res - x + 1)\n        elif x == 7:\n            print(res - x + 1)\n        else:\n            print(res - 5)", "import math\nT = int(input())\nfor i in range(T):\n    i = input()\n    (X, Y) = i.split()\n    (X, Y) = (int(X), int(Y))\n    second_count = 0\n    if X % 2 == 0:\n        print(math.ceil((Y - X) / 2))\n    else:\n        for i in range(2, X + 1):\n            if X % i == 0:\n                X += i\n                break\n        print(1 + math.ceil((Y - X) / 2))", "import math\nt = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    if x % 2 == 0:\n        print(math.ceil((y - x) / 2))\n    elif x == 5:\n        print(math.ceil((y - x - 5) / 2) + 1)\n    elif x == 7:\n        print(math.ceil((y - x - 7) / 2) + 1)\n    else:\n        print(math.ceil((y - x - 3) / 2) + 1)", "def smallest_factor(x):\n    for i in range(2, 8):\n        if x % i == 0:\n            return i\n            break\n    return x\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    res = 0\n    while x < y:\n        if x % 2 == 0:\n            if (y - x) % 2 == 0:\n                res += (y - x) // 2\n            else:\n                res += (y - x) // 2 + 1\n            break\n        else:\n            x += smallest_factor(x)\n        res += 1\n    print(res)", "import math\nfor tc in range(int(input())):\n    (X, Y) = map(int, input().split(' '))\n    if X % 2 == 0:\n        print(math.ceil((Y - X) / 2))\n    elif X % 3 == 0:\n        print(math.ceil((Y - X - 3) / 2 + 1))\n    elif X % 5 == 0:\n        print(math.ceil((Y - X - 5) / 2 + 1))\n    else:\n        print(math.ceil((Y - X - 7) / 2 + 1))", "import math as m\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x % 2 == 0:\n        print(m.ceil((y - x) / 2))\n    elif x % 3 == 0:\n        x += 3\n        print(m.ceil((y - x) / 2) + 1)\n    elif x % 5 == 0:\n        x += 5\n        print(m.ceil((y - x) / 2) + 1)\n    else:\n        x += x\n        print(m.ceil((y - x) / 2) + 1)", "T = int(input())\nfor i in range(T):\n    (X, Y) = map(int, input().split())\n    if X % 2 == 0:\n        primefactor = 2\n    elif X % 3 == 0:\n        primefactor = 3\n    else:\n        primefactor = X\n    X = X + primefactor\n    diff = Y - X\n    ans = diff // 2\n    if diff % 2 != 0:\n        ans += 1\n    print(ans + 1)", "from math import ceil\n\ndef smallest_factor(num):\n    if num % 2 == 0:\n        return 2\n    i = 3\n    while True:\n        if num % i == 0:\n            return i\n        else:\n            i += 2\ntest_cases = int(input())\nwhile test_cases:\n    str = input()\n    (a, b) = str.split(' ')\n    x = int(a)\n    y = int(b)\n    sec = 0\n    if x % 2 == 0:\n        sec = ceil((y - x) / 2)\n        x += smallest_factor(x)\n    else:\n        sec = 1\n        sec += ceil((y - x - smallest_factor(x)) / 2)\n    print(sec)\n    test_cases -= 1", "from math import ceil\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    ans = 0\n    if x & 1:\n        fac = x\n        for i in range(2, x + 1):\n            if x % i == 0:\n                fac = i\n                break\n        x += fac\n        ans += 1\n    ans += ceil((y - x) / 2)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (x, y) = map(int, input().split())\n    if x % 2 == 0:\n        x = x + 2\n    elif x % 3 == 0:\n        x = x + 3\n    elif x % 5 == 0:\n        x = x + 5\n    else:\n        x = x + 7\n    if y % 2 == 1:\n        y = y + 1\n    diff = y - x\n    count = 1 + int(diff / 2)\n    print(count)", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    n = b - a\n    if a % 2 == 0:\n        print(int(math.ceil(n / 2)))\n    elif a == 9:\n        n -= 3\n        print(int(math.ceil(n / 2)) + 1)\n    else:\n        n -= a\n        print(int(math.ceil(n / 2)) + 1)", "import math\n\ndef smallest_prime(n):\n    for i in range(2, 10):\n        if n % i == 0:\n            return i\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    t = 0\n    while x <= y:\n        prime = smallest_prime(x)\n        if prime == 2:\n            t += math.ceil((y - x) / 2)\n            break\n        x += prime\n        t += 1\n    print(t)", "def sd(n):\n    if n % 2 == 0:\n        return 2\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return i\n    return n\nn = int(input())\nr = 0\nfor i in range(n):\n    (x, y) = map(int, input().split())\n    x = x + sd(x)\n    r = (y - x + 1) // 2\n    print(1 + r)", "def sd(n):\n    if n % 2 == 0:\n        return 2\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return i\n    return n\nn = int(input())\nfor i in range(n):\n    (x, y) = map(int, input().split())\n    x = x + sd(x)\n    print(1 + (y - x + 1) // 2)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    li = [1, 3, 5, 7]\n    ans = 0\n    if x in li:\n        x += x\n        ans += 1\n    elif x == 9:\n        x += 3\n        ans += 1\n    else:\n        x += 2\n        ans += 1\n    d = (y - x) / 2\n    e = math.ceil(d)\n    print(ans + e)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a % 2 == 0:\n        if b % 2 == 0:\n            print(int((b - a) // 2))\n        else:\n            print(int((b - a) // 2) + 1)\n    else:\n        for j in range(2, int(math.sqrt(a)) + 1):\n            if a % j == 0:\n                c = b - a - 3\n                if c // 2 == c / 2:\n                    print(int(c // 2) + 1)\n                else:\n                    print(int(c // 2) + 2)\n                break\n        else:\n            c = b - a - a\n            if c // 2 == c / 2:\n                print(int(c / 2) + 1)\n            else:\n                print(int(c / 2) + 2)", "for cases in range(int(input())):\n    (X, Y) = map(int, input().split())\n    sec = 0\n    while X < Y:\n        if X % 2 == 0:\n            sec += (Y - X) // 2 if (Y - X) % 2 == 0 else (Y - X) // 2 + 1\n            break\n        elif X % 3 == 0:\n            X += 3\n        elif X % 5 == 0:\n            X += 5\n        elif X % 7 == 0:\n            X += 7\n        sec += 1\n    print(sec)"]