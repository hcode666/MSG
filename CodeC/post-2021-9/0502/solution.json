["for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    sorted_arr = sorted(arr)\n    if arr == sorted_arr:\n        print(0)\n        continue\n    (index_x, index_y) = (0, 0)\n    for i in range(n):\n        if arr[i] == i + 1:\n            index_x += 1\n        else:\n            break\n    for i in reversed(range(n)):\n        if arr[i] == i + 1:\n            index_y += 1\n        else:\n            break\n    if n - index_x - index_y <= k:\n        print(1)\n        continue\n    index_y = min(n - index_y - k, n)\n    temp1 = arr[0:index_x] + sorted(arr[index_x:index_x + k]) + arr[index_x + k:n]\n    arr1 = temp1[0:index_y] + sorted(temp1[index_y:index_y + k]) + temp1[index_y + k:n]\n    temp2 = arr[0:index_y] + sorted(arr[index_y:index_y + k]) + arr[index_y + k:n]\n    arr2 = temp1[0:index_x] + sorted(temp2[index_x:index_x + k]) + temp2[index_x + k:n]\n    print(2) if arr1 == sorted_arr or arr2 == sorted_arr else print(3)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    sorted_arr = sorted(arr)\n    if arr == sorted_arr:\n        print(0)\n        continue\n    (index_x, index_y) = (0, 0)\n    for i in range(n):\n        if arr[i] == i + 1:\n            index_x += 1\n        else:\n            break\n    for i in reversed(range(n)):\n        if arr[i] == i + 1:\n            index_y += 1\n        else:\n            break\n    if n - index_x - index_y <= k:\n        print(1)\n        continue\n    index_y = min(n - index_y - k, n)\n    temp1 = arr[0:index_x] + sorted(arr[index_x:index_x + k]) + arr[index_x + k:n]\n    arr1 = temp1[0:index_y] + sorted(temp1[index_y:index_y + k]) + temp1[index_y + k:n]\n    temp2 = arr[0:index_y] + sorted(arr[index_y:index_y + k]) + arr[index_y + k:n]\n    arr2 = temp1[0:index_x] + sorted(temp2[index_x:index_x + k]) + temp2[index_x + k:n]\n    print(2) if arr1 == sorted_arr or arr2 == sorted_arr else print(3)", "import sys\ni = iter(([*map(int, s.split())] for s in sys.stdin))\nnext(i)\nfor ((n, k), a) in zip(i, i):\n    b = ''.join(('01'[i == j] for (i, j) in zip(range(1, n + 1), a)))\n    l = b.find('0')\n    if l < 0:\n        ans = 0\n    else:\n        r = b.rfind('0') + 1\n        m = r - l\n        if m <= k:\n            ans = 1\n        else:\n            (*t,) = range(l + 1, r + 1)\n            (i, j) = (0, k)\n            for u in range(4):\n                if ~u & 1:\n                    b = a[l:r]\n                b[i:j] = sorted(b[i:j])\n                if u & 1:\n                    if b == t:\n                        ans = 2\n                        break\n                else:\n                    (i, j) = (m - j, m - i)\n            else:\n                ans = 3\n    print(ans)", "import sys\ni = iter(([*map(int, s.split())] for s in sys.stdin))\nnext(i)\nfor ((n, k), a) in zip(i, i):\n    b = ''.join(('01'[i == j] for (i, j) in zip(range(1, n + 1), a)))\n    l = b.find('0')\n    if l < 0:\n        ans = 0\n    else:\n        r = b.rfind('0') + 1\n        m = r - l\n        if m <= k:\n            ans = 1\n        else:\n            (*t,) = range(l + 1, r + 1)\n            (i, j) = (0, k)\n            for _ in range(2):\n                b = a[l:r]\n                b[i:j] = sorted(b[i:j])\n                (i, j) = (m - j, m - i)\n                b[i:j] = sorted(b[i:j])\n                if b == t:\n                    ans = 2\n                    break\n            else:\n                ans = 3\n    print(ans)", "import sys\ni = iter(([*map(int, s.split())] for s in sys.stdin))\nnext(i)\nfor ((n, k), a) in zip(i, i):\n    b = ''.join(('01'[i == j] for (i, j) in zip(range(1, n + 1), a)))\n    l = b.find('0')\n    if l < 0:\n        ans = 0\n    else:\n        r = b.rfind('0')\n        if r - l < k:\n            ans = 1\n        else:\n            r += 1\n            (*t,) = range(l + 1, r + 1)\n            b = a[l:r]\n            b[:k] = sorted(b[:k])\n            b[-k:] = sorted(b[-k:])\n            if b == t:\n                ans = 2\n            else:\n                b = a[l:r]\n                b[-k:] = sorted(b[-k:])\n                b[:k] = sorted(b[:k])\n                ans = 2 + (b != t)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    sorted_arr = sorted(arr)\n    if arr == sorted_arr:\n        print(0)\n        continue\n    (index_x, index_y) = (0, 0)\n    for i in range(n):\n        if arr[i] == i + 1:\n            index_x += 1\n        else:\n            break\n    for i in range(n - 1, -1, -1):\n        if arr[i] == i + 1:\n            index_y += 1\n        else:\n            break\n    if n - index_x - index_y <= k:\n        print(1)\n        continue\n    index_y = min(n - index_y - k, n)\n    temp1 = arr[0:index_x] + sorted(arr[index_x:index_x + k]) + arr[index_x + k:n]\n    arr1 = temp1[0:index_y] + sorted(temp1[index_y:index_y + k]) + temp1[index_y + k:n]\n    temp2 = arr[0:index_y] + sorted(arr[index_y:index_y + k]) + arr[index_y + k:n]\n    arr2 = temp1[0:index_x] + sorted(temp2[index_x:index_x + k]) + temp2[index_x + k:n]\n    if arr1 == sorted_arr or arr2 == sorted_arr:\n        print(2)\n    else:\n        print(3)", "def sort(a, i, j):\n    d = []\n    for l in range(i, j):\n        d.append(a[l])\n    d.sort()\n    x = 0\n    for l in range(i, j):\n        a[l] = d[x]\n        x += 1\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [i + 1 for i in range(n)]\n    a1 = a.copy()\n    c = 0\n    if a == b:\n        print(0)\n        continue\n    while a != b:\n        c += 1\n        if c == 2:\n            break\n        element = -1\n        for i in range(n):\n            if i + 1 != a[i]:\n                left = i\n                element = i + 1\n                break\n        right = a.index(element)\n        rem = right - left + 1\n        if rem >= k:\n            sort(a, max(0, right - k + 1), right + 1)\n        else:\n            sort(a, left, min(n, left + k))\n    if c == 1:\n        print(c)\n        continue\n    a = a1.copy()\n    left = 0\n    for i in range(n):\n        if a[i] != i + 1:\n            left = i\n            break\n    right = n\n    for i in range(n - 1, -1, -1):\n        if a[i] != i + 1:\n            right = i + 1\n            break\n    a1 = a.copy()\n    a2 = a.copy()\n    sort(a1, left, min(right, left + k))\n    pos = left\n    for i in range(n):\n        if a1[i] != i + 1:\n            left = i\n            break\n    for i in range(n - 1, -1, -1):\n        if a1[i] != i + 1:\n            right = i + 1\n            break\n    sort(a1, left, min(right, left + k))\n    if a1 == b:\n        print(2)\n        continue\n    for i in range(n):\n        if a[i] != i + 1:\n            left = i\n            break\n    for i in range(n - 1, -1, -1):\n        if a[i] != i + 1:\n            right = i + 1\n            break\n    sort(a2, max(left, right - k), right)\n    sort(a2, left, min(right, left + k))\n    if a2 == b:\n        print(2)\n        continue\n    print(3)", "import copy\nt = int(input())\nfor i in range(t):\n    (n, k) = [int(i) for i in input().strip().split()]\n    arr = [int(i) for i in input().strip().split()]\n    shifts = [abs(k - (index + 1)) for (index, k) in enumerate(arr)]\n    if sum(shifts) == 0:\n        print(0)\n        continue\n    index_left = 0\n    index_right = n - 1\n    while shifts[index_left] == 0:\n        index_left += 1\n    while shifts[index_right] == 0:\n        index_right -= 1\n    if index_right - index_left + 1 <= k:\n        print(1)\n        continue\n    copy_1 = arr[:]\n    copy_2 = arr[:]\n    copy_1[index_left:min(n - 1, k + index_left)] = sorted(copy_1[index_left:min(n - 1, k + index_left)])\n    copy_1[max(0, index_right - k + 1):index_right + 1] = sorted(copy_1[max(0, index_right - k + 1):index_right + 1])\n    copy_2[max(0, index_right - k + 1):index_right + 1] = sorted(copy_2[max(0, index_right - k + 1):index_right + 1])\n    copy_2[index_left:min(n - 1, k + index_left)] = sorted(copy_2[index_left:min(n - 1, k + index_left)])\n    flag_1 = 0\n    flag_2 = 0\n    for (index, z) in enumerate(copy_1):\n        if index != z - 1:\n            flag_1 = 1\n            break\n    for (index, z) in enumerate(copy_2):\n        if index != z - 1:\n            flag_2 = 1\n            break\n    if flag_1 and flag_2:\n        print(3)\n    else:\n        print(2)", "def SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p ** 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\nimport sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom collections import Counter\ninp = lambda : int(stdin.readline())\nstrng = lambda : stdin.readline().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(stdin.readline().strip())\nmul = lambda : map(int, stdin.readline().strip().split())\nmulf = lambda : map(float, stdin.readline().strip().split())\nseq = lambda : list(map(int, stdin.readline().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdpr = lambda x: stdout.write(str(x))\nmod = 1000000007\n\ndef sol(l, k):\n    (c1, c2) = (0, 0)\n    for i in range(n):\n        if l[i] == i + 1:\n            c1 += 1\n        else:\n            break\n    for i in range(n - 1, -1, -1):\n        if l[i] == i + 1:\n            c2 += 1\n        else:\n            break\n    if c1 == n:\n        return 0\n    if n - c1 - c2 <= k:\n        return 1\n    t = l[c1:n - c2]\n    ts = sorted(t)\n    t1 = sorted(t[:k]) + t[k:]\n    t1 = t1[:len(t) - k] + sorted(t1[len(t) - k:])\n    t2 = t[:len(t) - k] + sorted(t[len(t) - k:])\n    t2 = sorted(t2[:k]) + t2[k:]\n    if t1 == ts or t2 == ts:\n        return 2\n    else:\n        return 3\nfor _ in range(int(input())):\n    (n, k) = mul()\n    l = seq()\n    print(sol(l, k))", "def ans1(n, k, arr):\n    count = 0\n    for i in range(n):\n        if arr[i] != i + 1:\n            right = min(i + k, n)\n            arr = arr[0:i] + sorted(arr[i:right]) + arr[right:n]\n            count += 1\n            break\n    for i in reversed(range(n)):\n        if arr[i] != i + 1:\n            left = max(i - k + 1, 0)\n            arr = arr[0:left] + sorted(arr[left:i + 1]) + arr[i + 1:n]\n            count += 1\n            break\n    for i in range(n):\n        if arr[i] != i + 1:\n            count += 1\n            break\n    return count\n\ndef ans2(n, k, arr):\n    count = 0\n    for i in reversed(range(n)):\n        if arr[i] != i + 1:\n            left = max(i - k + 1, 0)\n            arr = arr[0:left] + sorted(arr[left:i + 1]) + arr[i + 1:n]\n            count += 1\n            break\n    for i in range(n):\n        if arr[i] != i + 1:\n            right = min(i + k, n)\n            arr = arr[0:i] + sorted(arr[i:right]) + arr[right:n]\n            count += 1\n            break\n    for i in range(n):\n        if arr[i] != i + 1:\n            count += 1\n            break\n    return count\nt = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    print(min(ans1(n, k, arr), ans2(n, k, arr)))\n    t = t - 1", "try:\n\n    def solve(A, K):\n        A[:K] = sorted(A[:K])\n        A[len(A) - K:] = sorted(A[len(A) - K:])\n        return A\n\n    def solveReverse(A, K):\n        A[len(A) - K:] = sorted(A[len(A) - K:])\n        A[:K] = sorted(A[:K])\n        return A\n\n    def isSorted(A):\n        temp = list(A)\n        temp.sort()\n        if A == temp:\n            return True\n        return False\n    for t in range(int(input())):\n        (N, K) = map(int, input().split())\n        P = list(map(int, input().split()))\n        if isSorted(P):\n            print(0)\n            continue\n        L = 0\n        R = N - 1\n        while P[L] == L + 1:\n            L += 1\n        while P[R] == R + 1:\n            R -= 1\n        if R - L + 1 <= K:\n            print(1)\n            continue\n        if isSorted(solve(P[L:R + 1], K)) or isSorted(solveReverse(P[L:R + 1], K)):\n            print(2)\n            continue\n        print(3)\nexcept:\n    pass", "import math\nfrom heapq import heappush, heappop, heapify\nimport random\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000000 + 7\nmod2 = 998244353\nfor _ in range(I()):\n    (n, k) = M()\n    a = L()\n    f = 0\n    for i in range(n):\n        if a[i] != i + 1:\n            f = 1\n            break\n    if f == 0:\n        print(0)\n        continue\n    i = 0\n    j = n - 1\n    while i < n:\n        if a[i] != i + 1:\n            break\n        i += 1\n    while j >= 0:\n        if a[j] != j + 1:\n            break\n        j -= 1\n    if j - i + 1 <= k:\n        print(1)\n        continue\n    b = a[:]\n    a = sorted(a[:min(i + k, n)]) + a[min(i + k, n):]\n    a = a[:max(j - k + 1, 0)] + sorted(a[max(0, j - k + 1, 0):])\n    b = b[:max(j - k + 1, 0)] + sorted(b[max(0, j - k + 1, 0):])\n    b = sorted(b[:min(i + k, n)]) + b[min(i + k, n):]\n    f1 = f2 = 0\n    for i in range(n):\n        if a[i] != i + 1:\n            f1 = 1\n        if b[i] != i + 1:\n            f2 = 1\n    if f1 == 0 or f2 == 0:\n        print(2)\n        continue\n    else:\n        print(3)", "from math import ceil\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    if a == b:\n        print(0)\n    else:\n        (f, l) = (-1, -1)\n        for j in range(n):\n            if a[j] != b[j]:\n                if f == -1:\n                    f = j\n                l = j\n        seg = l - f + 1\n        if seg <= k:\n            print(1)\n        else:\n            c = a.copy()\n            x = a[f:f + k]\n            x.sort()\n            a[f:f + k] = x\n            x = a[l - k + 1:l + 1]\n            x.sort()\n            a[l - k + 1:l + 1] = x\n            x = c[l - k + 1:l + 1]\n            x.sort()\n            c[l - k + 1:l + 1] = x\n            x = c[f:f + k]\n            x.sort()\n            c[f:f + k] = x\n            if a == b or c == b:\n                print(2)\n            else:\n                print(3)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mx = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] != i + 1:\n            mx = i + 1\n            break\n    a = a[:mx]\n    n = len(a)\n    mn = n\n    for i in range(n):\n        if a[i] != i + 1:\n            mn = i\n            break\n    a = a[mn:]\n    n = len(a)\n    for i in range(n):\n        a[i] = a[i] - mn\n    if n == 0:\n        print(0)\n    elif n <= k:\n        print(1)\n    else:\n        f1 = 0\n        f2 = 0\n        f3 = 0\n        l1 = 0\n        l2 = 0\n        l3 = 0\n        s1 = 0\n        s2 = 0\n        s3 = 0\n        for i in range(n - k):\n            if a[i] <= n - k:\n                f1 += 1\n            elif n - k < a[i] <= k:\n                f2 += 1\n            else:\n                f3 += 1\n        for i in range(n - k, k):\n            if a[i] <= n - k:\n                s1 += 1\n            elif n - k < a[i] <= k:\n                s2 += 1\n            else:\n                s3 += 1\n        for i in range(k, n):\n            if a[i] <= n - k:\n                l1 += 1\n            elif n - k < a[i] <= k:\n                l2 += 1\n            else:\n                l3 += 1\n        if l1:\n            if f3:\n                print(3)\n            else:\n                print(2)\n        elif s1:\n            if f3:\n                print(2)\n            else:\n                p = 0\n                for i in range(k, n):\n                    if a[i] != i + 1:\n                        p = 1\n                        break\n                if p == 0:\n                    print(1)\n                else:\n                    print(2)\n        elif l2:\n            p = 0\n            for i in range(n - k):\n                if a[i] != i + 1:\n                    p = 1\n                    break\n            if p == 0:\n                print(1)\n            else:\n                print(2)\n        else:\n            fi = 1\n            se = 1\n            th = 1\n            for i in range(n - k):\n                if a[i] != i + 1:\n                    fi = 0\n                    break\n            for i in range(n - k, k):\n                if a[i] != i + 1:\n                    se = 0\n                    break\n            for i in range(k, n):\n                if a[i] != i + 1:\n                    th = 0\n                    break\n            if fi == 0 and se == 0 and (th == 0) or (fi == 0 and se == 1 and (th == 0)):\n                print(2)\n            elif fi == 1 and se == 1 and (th == 1):\n                print(0)\n            else:\n                print(1)", "from sys import stdin\ninput = stdin.readline\n\ndef zero():\n    if a == sorted(a):\n        return True\n    return False\n\ndef one(a):\n    front = 0\n    for i in range(n - k):\n        if a[i] == i + 1:\n            front += 1\n        else:\n            break\n    back = 0\n    for i in range(n - k):\n        if a[n - i - 1] == n - i:\n            back += 1\n        else:\n            break\n    total = front + back\n    if n - total <= k:\n        return True\n    return False\n\ndef two():\n    a_dup = a[:]\n    for i in range(n):\n        if a[i] != i + 1:\n            start = i\n            break\n    x = []\n    for i in range(start, start + k):\n        x.append(a[i])\n    x.sort()\n    for i in range(start, start + k):\n        a_dup[i] = x[i - start]\n    if one(a_dup):\n        return True\n    a_dup = a[:]\n    for i in range(n - 1, -1, -1):\n        if a[i] != i + 1:\n            start = i\n            break\n    x = []\n    for i in range(start, start - k, -1):\n        x.append(a[i])\n    x.sort(reverse=True)\n    for i in range(start, start - k, -1):\n        a_dup[i] = x[start - i]\n    if one(a_dup):\n        return True\n    return False\n\ndef answer():\n    if zero():\n        return 0\n    if one(a):\n        return 1\n    if two():\n        return 2\n    return 3\nfor T in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(answer())", "import sys\nimport bisect as bi\nfrom collections import defaultdict as dd\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\n\ndef ans(ar, k, st, en):\n    n = len(ar)\n    if k >= n:\n        return 1 - (sorted(ar) == ar)\n    an = 0\n    for i in range(k, n):\n        if ar[i] <= st + n - k - 1:\n            ar = ar[:n - k] + sorted(ar[n - k:])\n            ar = sorted(ar[:k]) + ar[k:]\n            an += 2\n            break\n    else:\n        an += 1\n        ar = sorted(ar[:k]) + ar[k:]\n    return an + 1 - (sorted(ar) == ar)\n(t,) = I()\nfor i in range(t):\n    (n, k) = I()\n    l = I()\n    i = 0\n    j = n - 1\n    while i < n and l[i] == i + 1:\n        i += 1\n    while j >= 0 and l[j] == j + 1:\n        j -= 1\n    an = ans(l[i:j + 1], k, i + 1, j + 1)\n    print(an)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split(' '))\n    P = list(map(int, input().split(' ')))\n    for alpha in range(N):\n        P[alpha] -= 1\n    while N != 0 and P[-1] == N - 1:\n        del P[-1]\n        N -= 1\n    tc = 0\n    while N != 0 and P[0] == tc:\n        del P[0]\n        N -= 1\n        tc += 1\n    for gamma in range(N):\n        P[gamma] -= tc\n    if N == 0:\n        print(0)\n    elif K >= N:\n        print(1)\n    else:\n        b = []\n        for theta in range(N):\n            b.append(P[theta])\n        ideal = [j for j in range(N)]\n        P[:K] = sorted(P[:K])\n        P[N - K:] = sorted(P[N - K:])\n        b[N - K:] = sorted(b[N - K:])\n        b[:K] = sorted(b[:K])\n        if P == ideal or b == ideal:\n            print(2)\n        else:\n            print(3)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        a[i] -= 1\n        d[a[i]] = i\n    b = sorted(a)\n    l = -1\n    for i in range(n):\n        if a[i] != i:\n            l = i\n            break\n    r = -1\n    for i in range(n - 1, -1, -1):\n        if a[i] != i:\n            r = i\n            break\n    if l == -1 or r == -1:\n        print(0)\n        continue\n    if r - l + 1 <= k:\n        print(1)\n        continue\n    c = a.copy()\n    d = a.copy()\n    c[l:l + k] = sorted(c[l:l + k])\n    if c == b:\n        print(1)\n        continue\n    c[r - k + 1:r + 1] = sorted(c[r - k + 1:r + 1])\n    if c == b:\n        print(2)\n        continue\n    d[r - k + 1:r + 1] = sorted(d[r - k + 1:r + 1])\n    if d == b:\n        print(1)\n        continue\n    d[l:l + k] = sorted(d[l:l + k])\n    if d == b:\n        print(2)\n        continue\n    print(3)"]