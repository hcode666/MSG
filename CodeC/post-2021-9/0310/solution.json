["for _ in range(int(input())):\n    N = int(input())\n    S = input()\n    T = set(S)\n    ans = 1\n    if len(S) == len(T):\n        ans = 0\n    elif len(T) == 1:\n        ans = N - 1\n    else:\n        d = {}\n        s = 'A'\n        for j in S:\n            if s[-1] == j:\n                if len(s) > ans:\n                    ans = len(s)\n                s += j\n            else:\n                s = j\n            if s[0] + str(len(s)) in d and len(s) > ans:\n                ans = len(s)\n            elif len(s) > 1:\n                d[s[0] + str(len(s))] = 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    L1 = input()\n    L = [[0, 0] for j in range(32)]\n    j = 0\n    while j < n:\n        s = L1[j]\n        length = 1\n        i = j + 1\n        while True:\n            if i == n:\n                break\n            if L1[i] == s:\n                length += 1\n            if L1[i] != s:\n                break\n            i += 1\n        j = i\n        if length > L[ord(s) - 97][0]:\n            L[ord(s) - 97][0] = length\n            L[ord(s) - 97][1] = 1\n        elif length == L[ord(s) - 97][0]:\n            L[ord(s) - 97][1] += 1\n    L3 = [0]\n    for j in range(32):\n        [a, b] = L[j]\n        if b > 1:\n            L3.append(a)\n        elif b == 1:\n            L3.append(a - 1)\n    print(max(L3))", "for _ in range(int(input())):\n    n = int(input())\n    L1 = input()\n    L = [[0, 0] for j in range(32)]\n    j = 0\n    while j < n:\n        s = L1[j]\n        length = 1\n        i = j + 1\n        while True:\n            if i == n:\n                break\n            if L1[i] == s:\n                length += 1\n            if L1[i] != s:\n                break\n            i += 1\n        j = i\n        if length > L[ord(s) - 97][0]:\n            L[ord(s) - 97][0] = length\n            L[ord(s) - 97][1] = 1\n        elif length == L[ord(s) - 97][0]:\n            L[ord(s) - 97][1] += 1\n    L3 = [0]\n    for j in range(32):\n        [a, b] = L[j]\n        if b > 1:\n            L3.append(a)\n        elif b == 1:\n            L3.append(a - 1)\n    print(max(L3))", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    s = input()\n    Max = 0\n    d = {}\n    for i in range(n):\n        if s[i] not in d:\n            d[s[i]] = [1, 1]\n            k = 1\n        elif prev == s[i]:\n            k += 1\n            if k > d[prev][0]:\n                d[prev][0] = k\n                d[prev][1] = 1\n            elif k == d[prev][0]:\n                d[prev][1] += 1\n        else:\n            if d[s[i]][0] == 1:\n                d[s[i]][1] += 1\n            k = 1\n        prev = s[i]\n    Max = []\n    for i in d:\n        if d[i] > Max:\n            Max = d[i]\n    if Max[1] == 1:\n        print(Max[0] - 1)\n    else:\n        print(Max[0])", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    s = input()\n    Max = 0\n    d = {}\n    for i in range(n):\n        if s[i] not in d:\n            d[s[i]] = [1, 1]\n            k = 1\n        elif prev == s[i]:\n            k += 1\n            if k > d[prev][0]:\n                d[prev][0] = k\n                d[prev][1] = 1\n            elif k == d[prev][0]:\n                d[prev][1] += 1\n        else:\n            if d[s[i]][0] == 1:\n                d[s[i]][1] += 1\n            k = 1\n        prev = s[i]\n    Max = []\n    for i in d:\n        if d[i] > Max:\n            Max = d[i]\n    if Max[1] == 1:\n        print(Max[0] - 1)\n    else:\n        print(Max[0])", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    s = input()\n    Max = 0\n    d = {}\n    for i in range(n):\n        if s[i] not in d:\n            d[s[i]] = [1, 1]\n            k = 1\n        elif prev == s[i]:\n            k += 1\n            if k > d[prev][0]:\n                d[prev][0] = k\n                d[prev][1] = 1\n            elif k == d[prev][0]:\n                d[prev][1] += 1\n        else:\n            if d[s[i]][0] == 1:\n                d[s[i]][1] += 1\n            k = 1\n        prev = s[i]\n    Max = []\n    for i in d:\n        if d[i] > Max:\n            Max = d[i]\n    if Max[1] == 1:\n        print(Max[0] - 1)\n    else:\n        print(Max[0])", "from functools import reduce\n\ndef find_ind(a, j):\n    x = []\n    for i in range(len(a)):\n        if a[i] == j:\n            x.append(i)\n    return x\nfor _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    acount = []\n    alett = []\n    i = 1\n    if s[0] != s[1]:\n        acount.append(1)\n        alett.append(s[0])\n    while i < n:\n        count = 1\n        j = i\n        lett_store = s[i]\n        while i < n and s[i] == s[i - 1]:\n            count += 1\n            i += 1\n        if j == i:\n            i += 1\n        acount.append(count)\n        alett.append(lett_store)\n    m = reduce(max, acount)\n    arr = find_ind(acount, m)\n    store = []\n    for i in arr:\n        store.append(alett[i])\n    if len(store) == 1:\n        print(m - 1)\n        continue\n    flag = True\n    for i in range(len(store) - 1):\n        for j in range(i + 1, len(store)):\n            if store[i] == store[j]:\n                print(m)\n                flag = False\n                break\n        if not flag:\n            break\n    if flag:\n        print(m - 1)", "for i in range(int(input())):\n    n = int(input())\n    s = [*input()]\n    c = set(s)\n    d = {}\n    for e in c:\n        d[e] = []\n    curr = 0\n    last = s[0]\n    for j in range(n - 1):\n        if s[j] != s[j + 1]:\n            d[last].append(j + 1 - curr)\n            curr = j + 1\n            last = s[j + 1]\n    d[last].append(n - curr)\n    ans = 0\n    for elem in d.values():\n        ma = max(elem)\n        if ma < ans:\n            continue\n        if elem.count(ma) == 1:\n            ans = max(ans, ma - 1)\n        else:\n            ans = max(ans, ma)\n    print(ans)", "from functools import reduce\n\ndef find_ind(a, j):\n    x = []\n    for i in range(len(a)):\n        if a[i] == j:\n            x.append(i)\n    return x\nfor _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    acount = []\n    alett = []\n    i = 1\n    if s[0] != s[1]:\n        acount.append(1)\n        alett.append(s[0])\n    while i < n:\n        count = 1\n        j = i\n        lett_store = s[i]\n        while i < n and s[i] == s[i - 1]:\n            count += 1\n            i += 1\n        if j == i:\n            i += 1\n        acount.append(count)\n        alett.append(lett_store)\n    m = reduce(max, acount)\n    arr = find_ind(acount, m)\n    store = []\n    for i in arr:\n        store.append(alett[i])\n    if len(store) == 1:\n        print(m - 1)\n        continue\n    flag = True\n    for i in range(len(store) - 1):\n        for j in range(i + 1, len(store)):\n            if store[i] == store[j]:\n                print(m)\n                flag = False\n                break\n        if not flag:\n            break\n    if flag:\n        print(m - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    mx = [[0, 0] for _ in range(26)]\n    (curch, curlen) = (s[0], 0)\n    for i in range(n):\n        if s[i] == curch:\n            curlen += 1\n        if i == n - 1 or s[i] != s[i + 1]:\n            pos = ord(curch) - ord('a')\n            if curlen > mx[pos][0]:\n                mx[pos] = [curlen, 0]\n            if curlen == mx[pos][0]:\n                mx[pos][1] += 1\n            if i < n - 1:\n                (curch, curlen) = (s[i + 1], 0)\n    ans = 0\n    for i in range(26):\n        if mx[i][1] > 1:\n            ans = max(ans, mx[i][0])\n        else:\n            ans = max(ans, mx[i][0] - 1)\n    print(ans)", "testcases = int(input())\nfor eachcase in range(testcases):\n    length = int(input())\n    string = input()\n    string = string + 'X'\n    hashmap = {}\n    left = 0\n    right = 1\n    while right <= length:\n        if string[left] == string[right]:\n            right += 1\n        else:\n            hashmap[string[left:right]] = 1 + hashmap.get(string[left:right], 0)\n            left = right\n            right += 1\n    if max(hashmap.values()) == 1:\n        ans = 0\n        boring = 0\n        for strings in hashmap:\n            boring = max(boring, len(strings))\n        ans = boring - 1\n    else:\n        ans = 0\n        boring = 0\n        boring2 = 0\n        for strings in hashmap:\n            boring = max(boring, len(strings))\n            if hashmap[strings] > 1:\n                boring2 = max(boring2, len(strings))\n        ans = max(boring - 1, boring2)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(input())\n    a = []\n    a.append(l[0])\n    k = 0\n    for j in range(1, n):\n        if l[j] == a[k][0]:\n            a[k] = a[k] + l[j]\n        else:\n            k = k + 1\n            a.append(l[j])\n    b = {}\n    for j in a:\n        b[j] = 0\n    for j in a:\n        b[j] = b[j] + 1\n    mx = 0\n    for j in b:\n        if b[j] == 1:\n            if mx < len(j) - 1:\n                mx = len(j) - 1\n        elif len(j) > mx:\n            mx = len(j)\n    print(mx)", "def ans(s):\n    i = 0\n    hm = {}\n    current = ''\n    while i < len(s):\n        if len(current) == 0:\n            current += s[i]\n        elif current[-1] == s[i]:\n            current += s[i]\n        else:\n            if current in hm.keys():\n                hm[current] += 1\n            else:\n                hm[current] = 1\n            current = s[i]\n        i += 1\n    if current in hm.keys():\n        hm[current] += 1\n    else:\n        hm[current] = 1\n    arr = []\n    for y in hm.keys():\n        arr.append([len(y), hm[y]])\n    m1 = 0\n    for y in arr:\n        if y[0] > m1:\n            if y[1] == 1:\n                m1 = y[0] - 1\n            else:\n                m1 = y[0]\n    return m1\ntest_cases = int(input())\nwhile test_cases != 0:\n    d_ = input()\n    d = input()\n    print(ans(d))\n    test_cases -= 1", "def ans(s):\n    i = 0\n    hm = {}\n    current = ''\n    while i < len(s):\n        if len(current) == 0:\n            current += s[i]\n        elif current[-1] == s[i]:\n            current += s[i]\n        else:\n            if current in hm.keys():\n                hm[current] += 1\n            else:\n                hm[current] = 1\n            current = s[i]\n        i += 1\n    if current in hm.keys():\n        hm[current] += 1\n    else:\n        hm[current] = 1\n    arr = []\n    for y in hm.keys():\n        arr.append([len(y), hm[y]])\n    m1 = 0\n    for y in arr:\n        if y[0] > m1:\n            if y[1] == 1:\n                m1 = y[0] - 1\n            else:\n                m1 = y[0]\n    return m1\ntest_cases = int(input())\nwhile test_cases != 0:\n    d_ = input()\n    d = input()\n    print(ans(d))\n    test_cases -= 1", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nlower = [chr(x) for x in range(ord('a'), ord('z') + 1)]\nans = []\n\ndef find_two_max(A):\n    (mx1, mx2) = (A[0], A[1]) if A[0] > A[1] else (A[1], A[0])\n    for a in A[2:]:\n        if a > mx1:\n            (mx1, mx2) = (a, mx1)\n        elif a > mx2:\n            mx2 = a\n    return (mx1, mx2)\nfor _ in range(inp()):\n    N = inp()\n    S = insr()\n    if N == 1:\n        ans.append(0)\n        continue\n    dic = {x: [] for x in lower}\n    (c, old) = (1, S[0])\n    for s in S[1:]:\n        if old == s:\n            c += 1\n        else:\n            dic[old].append(c)\n            c = 1\n            old = s\n    else:\n        dic[s].append(c)\n    an = 0\n    for ch in dic:\n        s = dic[ch]\n        if s:\n            if len(s) == 1:\n                an = max(an, s[0] - 1)\n            else:\n                (mx1, mx2) = find_two_max(s)\n                an = max(an, max(mx1 - 1, mx2))\n    ans.append(an)\noutplt(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    e = []\n    c = 0\n    d = 0\n    for y in range(1, n):\n        if s[y] != s[y - 1]:\n            if len(e) == 0:\n                e.append(s[y - 1])\n                c = y\n                d = y\n                continue\n            if len(e) > 0:\n                if d == y - c:\n                    e.append(s[y - 1])\n                    c = y\n                    continue\n                if d < y - c:\n                    e = []\n                    e.append(s[y - 1])\n                    d = y - c\n            c = y\n    if len(e) > 0:\n        if d == n - c:\n            e.append(s[n - 1])\n        if d < n - c:\n            print(n - c - 1)\n            continue\n    else:\n        print(n - 1)\n        continue\n    if len(set(e)) == len(e):\n        print(d - 1)\n    else:\n        print(d)", "def all_unique(item):\n    return len(set(item)) == len(item)\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    e = []\n    c = 0\n    d = 0\n    for y in range(1, n):\n        if s[y] != s[y - 1]:\n            if len(a) == 0:\n                a.append(y)\n                e.append(s[y - 1])\n                c = y\n                d = y\n                continue\n            if len(a) > 0:\n                if d == y - c:\n                    a.append(y)\n                    e.append(s[y - 1])\n                    c = y\n                    continue\n                if d < y - c:\n                    a = []\n                    e = []\n                    a.append(y)\n                    e.append(s[y - 1])\n                    d = y - c\n            c = y\n    if len(a) > 0:\n        if d == n - c:\n            a.append(n)\n            e.append(s[n - 1])\n        if d < n - c:\n            print(n - c - 1)\n            continue\n    else:\n        print(n - 1)\n        continue\n    if all_unique(e):\n        print(d - 1)\n    else:\n        print(d)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    c = 0\n    d = 0\n    for y in range(1, n):\n        if s[y] != s[y - 1]:\n            if len(a) == 0:\n                a.append([y, s[y - 1]])\n                c = y\n                d = y\n                continue\n            if len(a) > 0:\n                if d == y - c:\n                    a.append([y, s[y - 1]])\n                    c = y\n                    continue\n                if d < y - c:\n                    a = []\n                    a.append([y, s[y - 1]])\n                    d = y - c\n            c = y\n    if len(a) > 0:\n        if d == n - c:\n            a.append([n, s[n - 1]])\n        if d < n - c:\n            print(n - c - 1)\n            continue\n    else:\n        print(n - 1)\n        continue\n    b = len(a)\n    for x in range(b):\n        for y in range(x + 1, b):\n            if a[x][1] == a[y][1]:\n                print(d)\n                c = 0\n                break\n        if c == 0:\n            break\n    if c != 0:\n        print(d - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    c = 0\n    d = 0\n    for y in range(1, n):\n        if s[y] != s[y - 1]:\n            if len(a) == 0:\n                a.append(y)\n                c = y\n                d = y\n                continue\n            if len(a) > 0:\n                if d == y - c:\n                    a.append(y)\n                    c = y\n                    continue\n                if d < y - c:\n                    a = []\n                    a.append(y)\n                    d = y - c\n            c = y\n    if len(a) > 0:\n        if d == n - c:\n            a.append(n)\n        if d < n - c:\n            print(n - c - 1)\n            continue\n    else:\n        print(n - 1)\n        continue\n    b = len(a)\n    for x in range(b):\n        for y in range(x + 1, b):\n            if s[a[x] - 1] == s[a[y] - 1]:\n                print(d)\n                c = 0\n                break\n        if c == 0:\n            break\n    if c != 0:\n        print(d - 1)\n        continue", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    c = 0\n    d = 0\n    for y in range(1, n):\n        if s[y] != s[y - 1]:\n            if len(a) == 0:\n                a.append(y)\n                c = y\n                d = y\n                continue\n            if len(a) > 0:\n                if d == y - c:\n                    a.append(y)\n                    c = y\n                    continue\n                if d < y - c:\n                    a = []\n                    a.append(y)\n                    d = y - c\n            c = y\n    if len(a) > 0:\n        if d == n - c:\n            a.append(n)\n        if d < n - c:\n            a = []\n            a.append(n)\n            d = n - c\n            print(d - 1)\n            continue\n    else:\n        a.append(n)\n        d = n\n        print(d - 1)\n        continue\n    b = len(a)\n    for x in range(b):\n        for y in range(x + 1, b):\n            if s[a[x] - 1] == s[a[y] - 1]:\n                print(d)\n                c = 0\n                break\n        if c == 0:\n            break\n    if c != 0:\n        print(d - 1)\n        continue", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    c = 0\n    d = 0\n    for y in range(1, n):\n        if s[y] != s[y - 1]:\n            if len(a) == 0:\n                a.append(y)\n                c = y\n                d = y\n                continue\n            if len(a) > 0:\n                if d == y - c:\n                    a.append(y)\n                    c = y\n                    continue\n                if d < y - c:\n                    a = []\n                    a.append(y)\n                    d = y - c\n            c = y\n    if len(a) > 0:\n        if d == n - c:\n            a.append(n)\n        if d < n - c:\n            a = []\n            a.append(n)\n            d = n - c\n            print(d - 1)\n            continue\n    else:\n        a.append(n)\n        d = n\n        print(d - 1)\n        continue\n    b = len(a)\n    if b < 2:\n        print(d - 1)\n        continue\n    for x in range(b):\n        for y in range(x + 1, b):\n            if s[a[x] - 1] == s[a[y] - 1]:\n                print(d)\n                c = 0\n                break\n        if c == 0:\n            break\n    if c != 0:\n        print(d - 1)\n        continue", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    c = 0\n    d = 0\n    for y in range(1, n):\n        if s[y] != s[y - 1]:\n            if len(a) == 0:\n                a.append(y)\n                c = y\n                d = y\n                continue\n            if len(a) > 0:\n                if d == y - c:\n                    a.append(y)\n                    c = y\n                    continue\n                if d < y - c:\n                    a = []\n                    a.append(y)\n                    d = y - c\n            c = y\n    if len(a) > 0:\n        if d == n - c:\n            a.append(n)\n        if d < n - c:\n            a = []\n            a.append(n)\n            d = n - c\n    else:\n        a.append(n)\n        d = n\n    b = len(a)\n    if b < 2:\n        print(d - 1)\n        continue\n    for x in range(b):\n        for y in range(x + 1, b):\n            if s[a[x] - 1] == s[a[y] - 1]:\n                print(d)\n                c = 0\n                break\n        if c == 0:\n            break\n    if c != 0:\n        print(d - 1)\n        continue", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    c = 0\n    d = 0\n    for y in range(1, n):\n        if s[y] != s[y - 1]:\n            if len(a) == 0:\n                a.append(y)\n                c = y\n                d = y\n                continue\n            if len(a) > 0:\n                if d == y - c:\n                    a.append(y)\n                    c = y\n                    continue\n                if d < y - c:\n                    a = []\n                    a.append(y)\n                    d = y - c\n            c = y\n    if len(a) > 0:\n        if d == n - c:\n            a.append(n)\n        if d < n - c:\n            a = []\n            a.append(n)\n            d = n - c\n    else:\n        a.append(n)\n        d = n\n    b = len(a)\n    if b < 2:\n        print(d - 1)\n        continue\n    for x in range(b):\n        for y in range(x + 1, b):\n            if s[a[x] - 1] == s[a[y] - 1]:\n                print(d)\n                c = 'a'\n                break\n        if c == 'a':\n            break\n    if c != 'a':\n        print(d - 1)\n        continue", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    c = 0\n    d = 0\n    for y in range(1, n):\n        if s[y] != s[y - 1]:\n            if len(a) == 0:\n                a.append(y)\n                c = y\n                d = y\n                continue\n            if len(a) > 0:\n                if d == y - c:\n                    a.append(y)\n                    c = y\n                    continue\n                if d < y - c:\n                    a.clear()\n                    a.append(y)\n                    d = y - c\n            c = y\n    if len(a) > 0:\n        if d == n - c:\n            a.append(n)\n        if d < n - c:\n            a.clear()\n            a.append(n)\n            d = n - c\n    else:\n        a.append(n)\n        d = n\n    b = len(a)\n    if b < 2:\n        print(d - 1)\n        continue\n    for x in range(b):\n        for y in range(x + 1, b):\n            if s[a[x] - 1] == s[a[y] - 1]:\n                print(d)\n                c = 'a'\n                break\n        if c == 'a':\n            break\n    if c != 'a':\n        print(d - 1)\n        continue", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    c = 0\n    d = 0\n    for y in range(1, n):\n        if s[y] != s[y - 1]:\n            if len(a) == 0:\n                a.append(y)\n                c = y\n                d = y\n                continue\n            if len(a) > 0:\n                if d == y - c:\n                    a.append(y)\n                if d < y - c:\n                    a.clear()\n                    a.append(y)\n                    d = y - c\n            c = y\n        if y == n - 1:\n            if len(a) > 0:\n                if d == n - c:\n                    a.append(n)\n                if d < n - c:\n                    a.clear()\n                    a.append(n)\n                    d = n - c\n            else:\n                a.append(n)\n                d = n\n    b = len(a)\n    if b < 2:\n        print(d - 1)\n        continue\n    for x in range(b):\n        for y in range(x + 1, b):\n            if s[a[x] - 1] == s[a[y] - 1]:\n                print(d)\n                c = 'a'\n                break\n        if c == 'a':\n            break\n    if c != 'a':\n        print(d - 1)\n        continue", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    c = 0\n    for y in range(1, n):\n        if s[y] != s[y - 1]:\n            if len(a) == 0:\n                a.append([y, y])\n                c = y\n                continue\n            if len(a) > 0:\n                if a[-1][1] == y - c:\n                    a.append([y, y - c])\n                if a[-1][1] < y - c:\n                    a.clear()\n                    a.append([y, y - c])\n            c = y\n        if y == n - 1:\n            if len(a) > 0:\n                if a[-1][1] == n - c:\n                    a.append([n, n - c])\n                if a[-1][1] < n - c:\n                    a.clear()\n                    a.append([n, n - c])\n            else:\n                a.append([n, n - c])\n    b = len(a)\n    if b < 2:\n        print(a[0][1] - 1)\n        continue\n    for x in range(b):\n        for y in range(x + 1, b):\n            if s[a[x][0] - 1] == s[a[y][0] - 1]:\n                print(a[x][1])\n                c = 'a'\n                break\n        if c == 'a':\n            break\n    if c != 'a':\n        print(a[0][1] - 1)\n        continue", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    c = 0\n    for y in range(1, n):\n        if s[y] != s[y - 1]:\n            if len(a) == 0:\n                a.append([y, y])\n                c = y\n                continue\n            if len(a) > 0:\n                if a[-1][1] == y - c:\n                    a.append([y, y - c])\n                if a[-1][1] < y - c:\n                    a.clear()\n                    a.append([y, y - c])\n            c = y\n        if y == n - 1:\n            if len(a) > 0:\n                if a[-1][1] == n - c:\n                    a.append([n, n - c])\n                if a[-1][1] < n - c:\n                    a.clear()\n                    a.append([n, n - c])\n            else:\n                a.append([n, n - c])\n    b = len(a)\n    if b < 2:\n        print(a[0][1] - 1)\n        continue\n    for x in range(b):\n        for z in range(x + 1, b):\n            if s[a[x][0] - 1] == s[a[z][0] - 1]:\n                print(a[x][1])\n                c = 'a'\n                break\n        if c == 'a':\n            break\n    if c != 'a':\n        print(a[0][1] - 1)\n        continue", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    N = inp()\n    S = insr()\n    an = 0\n    if N == 1:\n        ans.append(0)\n        continue\n    dic = {chr(x): [] for x in range(ord('a'), ord('z') + 1)}\n    c = 1\n    for i in range(1, N):\n        if S[i - 1] == S[i]:\n            c += 1\n        else:\n            dic[S[i - 1]].append(c)\n            c = 1\n    else:\n        dic[S[-1]].append(c)\n    an = 0\n    for ch in dic:\n        s = sorted(dic[ch], reverse=True)\n        if s:\n            if len(s) == 1:\n                an = max(an, s[0] - 1)\n            else:\n                an = max(an, max(s[0] - 1, s[1]))\n    ans.append(an)\noutplt(ans)", "def compres(n):\n    z = []\n    max_val = 0\n    c = 1\n    t = n[0]\n    for i in range(1, len(n)):\n        if t == n[i]:\n            c += 1\n        else:\n            if c > max_val:\n                z = [t]\n                max_val = c\n            elif c == max_val:\n                z.append(t)\n            c = 1\n            t = n[i]\n    if c > max_val:\n        z = [t]\n        max_val = c\n    elif c == max_val:\n        z.append(t)\n    return (z, max_val)\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    (z, max_val) = compres(a)\n    flag = 1\n    for i in z:\n        if a.count(i * max_val) > 1:\n            flag = 0\n            break\n    print(max_val - flag)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    temp = s[0]\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            a.append(temp)\n            temp = ''\n        temp += s[i]\n    if len(temp):\n        a.append(temp)\n    a.sort()\n    ans = 0\n    for i in range(len(a)):\n        ans = max(ans, len(a[i]) - 1)\n    for i in range(1, len(a)):\n        if a[i] == a[i - 1]:\n            ans = max(ans, len(a[i]))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    lst = []\n    temp = s[0]\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            lst.append(temp)\n            temp = ''\n        temp += s[i]\n    if len(temp):\n        lst.append(temp)\n    lst.sort()\n    ans = 0\n    for i in range(len(lst)):\n        ans = max(ans, len(lst[i]) - 1)\n    for i in range(1, len(lst)):\n        if lst[i] == lst[i - 1]:\n            ans = max(ans, len(lst[i]))\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = str(input())\n    subs = {}\n    for i in range(97, 123):\n        subs[chr(i)] = []\n    curchr = s[0]\n    sublen = 1\n    for j in range(1, n):\n        if s[j] == curchr:\n            sublen += 1\n        else:\n            subs[curchr].append(sublen)\n            curchr = s[j]\n            sublen = 1\n    subs[curchr].append(sublen)\n    strings = []\n    for ch in subs:\n        if len(subs[ch]) > 0:\n            if len(subs[ch]) == 1:\n                strings.append(subs[ch][0] - 1)\n            elif subs[ch].count(max(subs[ch])) > 1:\n                strings.append(max(subs[ch]))\n            else:\n                strings.append(max(subs[ch]) - 1)\n    print(max(strings))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = str(input())\n    subs = {}\n    for i in range(97, 123):\n        subs[chr(i)] = []\n    curchr = s[0]\n    sublen = 1\n    for j in range(1, n):\n        if s[j] == curchr:\n            sublen += 1\n        else:\n            subs[curchr].append(sublen)\n            curchr = s[j]\n            sublen = 1\n    subs[curchr].append(sublen)\n    strings = []\n    for ch in subs:\n        if len(subs[ch]) > 0:\n            if len(subs[ch]) == 1:\n                strings.append(subs[ch][0] - 1)\n            elif subs[ch].count(max(subs[ch])) > 1:\n                strings.append(max(subs[ch]))\n            else:\n                strings.append(max(subs[ch]) - 1)\n    print(max(strings))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = str(input())\n    subs = {}\n    for i in range(97, 123):\n        subs[chr(i)] = []\n    curchr = s[0]\n    sublen = 1\n    for j in range(1, n):\n        if s[j] == curchr:\n            sublen += 1\n        else:\n            subs[curchr].append(sublen)\n            curchr = s[j]\n            sublen = 1\n    subs[curchr].append(sublen)\n    strings = []\n    for ch in subs:\n        if len(subs[ch]) > 0:\n            if len(subs[ch]) == 1:\n                strings.append(subs[ch][0] - 1)\n            elif subs[ch].count(max(subs[ch])) > 1:\n                strings.append(max(subs[ch]))\n            else:\n                strings.append(max(subs[ch]) - 1)\n    print(max(strings))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    l1 = []\n    l2 = []\n    last_char = s[0]\n    m = 0\n    for i in s:\n        if last_char != i:\n            l1.append(last_char)\n            l2.append(m)\n            last_char = i\n            m = 1\n        else:\n            m += 1\n    l1.append(last_char)\n    l2.append(m)\n    flag = False\n    lexi = 'abcdefghijklmnopqrstuvwxyz'\n    if n < 27 and max(l2) < 2:\n        for i in lexi:\n            if s.count(i) > 1:\n                flag = True\n                break\n    else:\n        flag = True\n    if flag:\n        maxy = max(l2) - 1\n        d = {}\n        for i in range(26):\n            d[lexi[i]] = [0, 0]\n        for i in range(len(l1)):\n            if d[l1[i]][1] == 0:\n                d[l1[i]][1] = l2[i]\n            elif d[l1[i]][0] == 0:\n                d[l1[i]][0] = min(l2[i], d[l1[i]][1])\n                d[l1[i]][1] = max(l2[i], d[l1[i]][1])\n            elif l2[i] > d[l1[i]][1]:\n                d[l1[i]][0] = d[l1[i]][1]\n                d[l1[i]][1] = l2[i]\n            elif l2[i] > d[l1[i]][0]:\n                d[l1[i]][0] = l2[i]\n        for i in lexi:\n            if d[i][0] == 0:\n                continue\n            else:\n                maxy = max(maxy, d[i][0])\n        print(maxy)\n    else:\n        print(0)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input()\n    bore = s[0]\n    b_strs = []\n    for i in range(1, n):\n        if i == n - 1:\n            if s[i] == s[i - 1]:\n                bore += s[i]\n            else:\n                b_strs.append(bore)\n                bore = s[i]\n            b_strs.append(bore)\n        elif s[i] == s[i - 1]:\n            bore += s[i]\n        else:\n            if len(bore) >= 1:\n                b_strs.append(bore)\n            bore = s[i]\n    hashh = [0] * 26\n    times = [0] * 26\n    for el in b_strs:\n        ind = ord(el[0]) % 97\n        len_ = len(el)\n        if len_ == hashh[ind]:\n            times[ind] = 2\n        else:\n            if len_ > hashh[ind]:\n                times[ind] = 1\n            hashh[ind] = max(len_, hashh[ind])\n    ans = 0\n    for i in range(26):\n        if hashh[i] > ans:\n            if times[i] == 2:\n                ans = hashh[i]\n            elif times[i] == 1 and hashh[i] == 1:\n                ans = 0\n            else:\n                ans = hashh[i] - 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = input()\n    y = dict()\n    for i in range(n):\n        ch = x[i]\n        if i == 0:\n            y[ch] = []\n            curr_char = ch\n            curr_index = 0\n        if ch != curr_char:\n            char = x[i - 1]\n            length = i - curr_index\n            if char in y:\n                y[char].append(length)\n            else:\n                y[char] = [length]\n            curr_char = x[i]\n            curr_index = i\n        if i == n - 1:\n            char = x[i]\n            length = i - curr_index + 1\n            if char in y:\n                y[char].append(length)\n            else:\n                y[char] = [length]\n    max_score = -1\n    for letter in y:\n        letter_list = y[letter]\n        winner = max(letter_list)\n        letter_list.remove(winner)\n        if letter_list:\n            runner = max(letter_list)\n            score = winner if winner == runner else winner - 1\n        else:\n            score = winner - 1\n        if score > max_score:\n            max_score = score\n    print(max_score)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    lst = []\n    temp = s[0]\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            lst.append(temp)\n            temp = ''\n        temp += s[i]\n    if len(temp):\n        lst.append(temp)\n    lst.sort()\n    ans = 0\n    for i in range(len(lst)):\n        ans = max(ans, len(lst[i]) - 1)\n    for i in range(1, len(lst)):\n        if lst[i] == lst[i - 1]:\n            ans = max(ans, len(lst[i]))\n    print(ans)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    s = input() + '?'\n    c = Counter()\n    char = s[0]\n    length = 1\n    for j in range(1, n + 1):\n        if s[j] == char:\n            length += 1\n        else:\n            c[char * length] += 1\n            char = s[j]\n            length = 1\n    maxlength = 0\n    for (wo, count) in c.items():\n        if count > 1:\n            maxlength = max(maxlength, len(wo))\n        else:\n            maxlength = max(maxlength, len(wo) - 1)\n    print(maxlength)", "def process_ans(letters, N):\n    flag = 0\n    ans = []\n    for letr in letters:\n        if len(letters[letr]) > 1:\n            flag = 1\n            mx = max(letters[letr])\n            cnt = letters[letr].count(mx)\n            if cnt > 1 or mx == 1:\n                ans.append(mx)\n            else:\n                ans.append(mx - 1)\n        elif letters[letr][0] > 1:\n            ans.append(letters[letr][0] - 1)\n        else:\n            ans.append(0)\n    return max(ans)\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    S = input()\n    letters = {}\n    length = 1\n    Ans = 0\n    if N == 1:\n        Ans = 0\n    else:\n        for i in range(1, N):\n            if S[i] == S[i - 1]:\n                length = length + 1\n            else:\n                if S[i - 1] in letters:\n                    letters[S[i - 1]].append(length)\n                else:\n                    letters[S[i - 1]] = [length]\n                length = 1\n            if i == N - 1:\n                if S[i] in letters:\n                    letters[S[i]].append(length)\n                else:\n                    letters[S[i]] = [length]\n        Ans = process_ans(letters, N)\n    print(Ans)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input()\n    bore = s[0]\n    b_strs = []\n    for i in range(1, n):\n        if i == n - 1:\n            if s[i] == s[i - 1]:\n                bore += s[i]\n            else:\n                b_strs.append(bore)\n                bore = s[i]\n            b_strs.append(bore)\n        elif s[i] == s[i - 1]:\n            bore += s[i]\n        else:\n            if len(bore) >= 1:\n                b_strs.append(bore)\n            bore = s[i]\n    hashh = [0] * 26\n    times = [0] * 26\n    for el in b_strs:\n        ind = ord(el[0]) % 97\n        len_ = len(el)\n        if len_ == hashh[ind]:\n            times[ind] = 2\n        else:\n            if len_ > hashh[ind]:\n                times[ind] = 1\n            hashh[ind] = max(len_, hashh[ind])\n    ans = 0\n    for i in range(26):\n        if hashh[i] > ans:\n            if times[i] == 2:\n                ans = hashh[i]\n            elif times[i] == 1 and hashh[i] == 1:\n                ans = 0\n            else:\n                ans = hashh[i] - 1\n    print(ans)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    s = input() + '?'\n    c = Counter()\n    char = s[0]\n    length = 1\n    for j in range(1, n + 1):\n        if s[j] == char:\n            length += 1\n        else:\n            c[char * length] += 1\n            char = s[j]\n            length = 1\n    maxlength = 0\n    for (wo, count) in c.items():\n        if count > 1:\n            maxlength = max(maxlength, len(wo))\n        else:\n            maxlength = max(maxlength, len(wo) - 1)\n    print(maxlength)", "T = int(input())\nfor t in range(T):\n    input()\n    d = {c: [0, 0] for c in 'abcdefghijklmnopqrstuvwxyz'}\n    cur = ''\n    inp = input()\n    for c in inp:\n        if len(cur) > 0 and cur[0] == c:\n            cur += c\n        else:\n            cur = c\n        ln = len(cur)\n        d[c][1] = max(d[c][1], ln if d[c][0] >= ln else ln - 1)\n        d[c][0] = max(d[c][0], ln)\n    print(max((boring_numbers[1] for boring_numbers in d.values())))", "T = int(input())\nfor t in range(T):\n    input()\n    d = {c: [0, 0] for c in 'abcdefghijklmnopqrstuvwxyz'}\n    cur = ''\n    inp = input()\n    for c in inp:\n        if len(cur) > 0 and cur[0] == c:\n            cur += c\n        else:\n            cur = c\n        ln = len(cur)\n        d[c][1] = max(d[c][1], ln if d[c][0] >= ln else ln - 1)\n        d[c][0] = max(d[c][0], ln)\n    print(max((boring_numbers[1] for boring_numbers in d.values())))", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    d = {c: [0, 0] for c in 'abcdefghijklmnopqrstuvwxyz'}\n    cur = []\n    inp = input()\n    for c in inp:\n        if len(cur) > 0 and cur[0] == c:\n            cur += c\n        else:\n            cur = c\n        l = len(cur)\n        if d[c][0] >= l:\n            d[c][1] = max(d[c][1], l)\n        else:\n            d[c][1] = max(d[c][1], l - 1)\n        d[c][0] = max(d[c][0], len(cur))\n    bor_max = 0\n    for (c, ns) in d.items():\n        bor_max = max(ns[1], bor_max)\n    print(bor_max)", "from collections import Counter, deque, defaultdict\nimport statistics\nimport math\n\ndef notSquare(n):\n    x = int(math.sqrt(n))\n    if x * x == n:\n        return False\n    return True\n\ndef solve(n, s):\n    hash = [[] for _ in range(26)]\n    beg = 0\n    end = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            end = i\n        else:\n            ch = ord(s[i - 1]) - ord('a')\n            hash[ch].append(end - beg + 1)\n            beg = i\n            end = i\n    hash[ord(s[-1]) - ord('a')].append(end - beg + 1)\n    arr = []\n    for i in range(26):\n        try:\n            arr.append(max(hash[i]))\n        except ValueError:\n            arr.append(0)\n    multiples = []\n    for i in range(26):\n        try:\n            hash[i].sort(reverse=True)\n            val = hash[i][1]\n            val1 = hash[i][0]\n            if val == val1:\n                multiples.append(True)\n            else:\n                multiples.append(False)\n        except IndexError:\n            multiples.append(False)\n    maxi = -1\n    for i in range(26):\n        if arr[i] >= maxi:\n            if multiples[i]:\n                maxi = max(maxi, arr[i])\n            else:\n                maxi = max(maxi, arr[i] - 1)\n    return maxi\nfor test in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    print(solve(n, s))", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    s = dict()\n    f = dict()\n    for i in range(26):\n        s[chr(i + 97)] = 0\n        f[chr(i + 97)] = 0\n    s['#'] = f['#'] = 0\n    pa = '#'\n    pc = 0\n    for c in a:\n        if c == pa:\n            pc += 1\n        else:\n            if s[pa] < pc:\n                s[pa] = pc\n                f[pa] = 1\n            elif s[pa] == pc:\n                f[pa] += 1\n            pa = c\n            pc = 1\n    if s[pa] < pc:\n        s[pa] = pc\n        f[pa] = 1\n    elif s[pa] == pc:\n        f[pa] += 1\n    a = []\n    for i in s:\n        if s[i] == 0:\n            continue\n        a.append((s[i], f[i], i))\n    a.sort(reverse=True)\n    (c, f, a) = a[0]\n    if f < 2:\n        print(c - 1)\n    else:\n        print(c)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    s = input() + '?'\n    c = Counter()\n    char = s[0]\n    length = 1\n    for j in range(1, n + 1):\n        if s[j] == char:\n            length += 1\n        else:\n            c[char * length] += 1\n            char = s[j]\n            length = 1\n    maxlength = 0\n    for (wo, count) in c.items():\n        if count > 1:\n            maxlength = max(maxlength, len(wo))\n        else:\n            maxlength = max(maxlength, len(wo) - 1)\n    print(maxlength)", "from collections import Counter\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    S = input() + '?'\n    C = Counter()\n    char = S[0]\n    length = 1\n    for i in range(1, N + 1):\n        if S[i] == char:\n            length += 1\n        else:\n            C[char * length] += 1\n            char = S[i]\n            length = 1\n    maxLen = 0\n    for (sub, count) in C.items():\n        if count > 1:\n            maxLen = max(maxLen, len(sub))\n        else:\n            maxLen = max(maxLen, len(sub) - 1)\n    print(maxLen)", "from heapq import heappop, heappush, heapify\nfor i in range(int(input())):\n    input()\n    s = input()\n    v = {}\n    for j in range(len(s)):\n        if s[j] not in v:\n            v[s[j]] = []\n            heapify(v[s[j]])\n    count = 1\n    for j in range(len(s) - 1):\n        if s[j] == s[j + 1]:\n            count += 1\n        else:\n            heappush(v[s[j]], -1 * count)\n            count = 1\n    heappush(v[s[-1]], -1 * count)\n    ma = -238127938718\n    y = -20\n    for j in v.keys():\n        x = -1 * heappop(v[j])\n        if len(v[j]) != 0:\n            y = -1 * heappop(v[j])\n        if y == -20:\n            ma = max(ma, x - 1)\n        elif x == y:\n            ma = max(ma, x)\n        else:\n            ma = max(ma, x - 1)\n    print(ma)", "from heapq import heappop, heappush, heapify\nfor i in range(int(input())):\n    input()\n    s = input()\n    v = {}\n    for j in range(len(s)):\n        if s[j] not in v:\n            v[s[j]] = []\n            heapify(v[s[j]])\n    count = 1\n    for j in range(len(s) - 1):\n        if s[j] == s[j + 1]:\n            count += 1\n        else:\n            heappush(v[s[j]], -1 * count)\n            count = 1\n    heappush(v[s[-1]], -1 * count)\n    ma = -238127938718\n    y = -20\n    for j in v.keys():\n        x = -1 * heappop(v[j])\n        if len(v[j]) != 0:\n            y = -1 * heappop(v[j])\n        if y == -20:\n            ma = max(ma, x - 1)\n        elif x == y:\n            ma = max(ma, x)\n        else:\n            ma = max(ma, x - 1)\n    print(ma)", "from heapq import heappop, heappush, heapify\nfor i in range(int(input())):\n    input()\n    s = input()\n    v = {}\n    for j in range(len(s)):\n        if s[j] not in v:\n            v[s[j]] = []\n            heapify(v[s[j]])\n    count = 1\n    for j in range(len(s) - 1):\n        if s[j] == s[j + 1]:\n            count += 1\n        else:\n            heappush(v[s[j]], -1 * count)\n            count = 1\n    heappush(v[s[-1]], -1 * count)\n    ma = -238127938718\n    y = -20\n    for j in v.keys():\n        x = -1 * heappop(v[j])\n        if len(v[j]) != 0:\n            y = -1 * heappop(v[j])\n        if y == -20:\n            ma = max(ma, x - 1)\n        elif x == y:\n            ma = max(ma, x)\n        else:\n            ma = max(ma, x - 1)\n    print(ma)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    arr = [1 for i in range(n)]\n    d = {}\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            arr[i] = arr[i - 1] + 1\n    mx = max(arr)\n    my = 0\n    for i in range(n):\n        if s[i] in d:\n            if d[s[i]] < arr[i]:\n                d[s[i]] = arr[i]\n            elif d[s[i]] == arr[i]:\n                my = max(my, arr[i])\n        else:\n            d[s[i]] = arr[i]\n    print(max(mx - 1, my))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    (i, j) = (0, 1)\n    d = {}\n    while i < n and j <= n:\n        while j < n and s[j - 1] == s[j]:\n            j += 1\n        if s[i] in d:\n            d[s[i]] += [j - i]\n        else:\n            d[s[i]] = [j - i]\n        i = j\n        j += 1\n    ans = 0\n    for (i, j) in d.items():\n        l = j.copy()\n        l.sort()\n        if len(l) > 1:\n            if l[len(l) - 1] == l[len(l) - 2]:\n                ans = max(l[len(l) - 1], ans)\n            else:\n                ans = max(l[len(l) - 1] - 1, ans)\n        else:\n            ans = max(l[0] - 1, ans)\n    print(ans)", "for _ in range(int(input())):\n    n = input()\n    s = input()\n    (d, prev, count, t, maxLen) = ({}, s[0], 1, s[0], 0)\n    s = s[1:]\n    for i in s:\n        if i == prev:\n            t += i\n        else:\n            d[t] = d.get(t, 0) + 1\n            t = i\n        prev = i\n    if len(s):\n        d[t] = d.get(t, 0) + 1\n    for i in d:\n        if len(i) > maxLen:\n            if d[i] > 1:\n                maxLen = max(maxLen, len(i))\n            else:\n                maxLen = max(maxLen, len(i) - 1)\n    print(maxLen)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    prevL = [s[0], 0]\n    result = 0\n    for j in range(1, n):\n        if s[j] == prevL[0]:\n            if j == n - 1 and j - prevL[1] > result:\n                result = j - prevL[1]\n            else:\n                continue\n        else:\n            if j - prevL[1] > result and s[prevL[1]:j] in s[j + 1:]:\n                result = j - prevL[1]\n            elif j - prevL[1] - 1 > result:\n                result = j - prevL[1] - 1\n            prevL[0] = s[j]\n            prevL[1] = j\n    print(result)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    ans = 0\n    for k in range(len(alpha)):\n        maxlen = 0\n        i = 0\n        while i < n:\n            if s[i] != alpha[k]:\n                i += 1\n                continue\n            j = i\n            while i + 1 < n and s[i] == s[i + 1]:\n                i += 1\n            l = i - j + 1\n            if maxlen < l:\n                maxlen = l\n            elif maxlen == l:\n                ans = max(ans, l)\n            i += 1\n        ans = max(ans, maxlen - 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    i = 0\n    while i < n:\n        subs = s[i]\n        j = i\n        while i + 1 < n and s[i] == s[i + 1]:\n            subs += s[i + 1]\n            i += 1\n        l = i - j + 1\n        if subs in s[i + 1:]:\n            ans = max(ans, l)\n        else:\n            ans = max(ans, l - 1)\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    mx = [[0, 0] for _ in range(26)]\n    (curch, curlen) = (s[0], 0)\n    for i in range(n):\n        if s[i] == curch:\n            curlen += 1\n        if i == n - 1 or s[i] != s[i + 1]:\n            pos = ord(curch) - ord('a')\n            if curlen > mx[pos][0]:\n                mx[pos] = [curlen, 0]\n            if curlen == mx[pos][0]:\n                mx[pos][1] += 1\n            if i < n - 1:\n                (curch, curlen) = (s[i + 1], 0)\n    ans = 0\n    for i in range(26):\n        if mx[i][1] > 1:\n            ans = max(ans, mx[i][0])\n        else:\n            ans = max(ans, mx[i][0] - 1)\n    print(ans)", "from collections import *\nfrom math import *\nfrom sys import *\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    B = input()\n    prev = ''\n    cnt = 0\n    A = {}\n    ans = 0\n    for i in B:\n        curr = i\n        if curr == prev:\n            cnt += 1\n        else:\n            cnt = 1\n            prev = curr\n        if curr not in A:\n            A[curr] = cnt\n        elif A[curr] >= cnt:\n            ans = max(ans, cnt)\n        else:\n            A[curr] = cnt\n    print(max(ans, max(A.values()) - 1))", "case = int(input())\nfor i in range(case):\n    n = int(input())\n    s = input()\n    prev = ''\n    count = 0\n    res = 0\n    char = {}\n    for j in range(n):\n        curr = s[j]\n        if curr == prev:\n            count += 1\n        else:\n            count = 1\n            prev = curr\n        if curr not in char:\n            char[curr] = count\n        elif char[curr] >= count:\n            res = max(res, count)\n        else:\n            char[curr] = count\n    for key in char:\n        res = max(res, char[key] - 1)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    mx = [[0, 0] for _ in range(26)]\n    (curch, curlen) = (s[0], 0)\n    for i in range(n):\n        if s[i] == curch:\n            curlen += 1\n        if i == n - 1 or s[i] != s[i + 1]:\n            pos = ord(curch) - ord('a')\n            if curlen > mx[pos][0]:\n                mx[pos] = [curlen, 0]\n            if curlen == mx[pos][0]:\n                mx[pos][1] += 1\n            if i < n - 1:\n                (curch, curlen) = (s[i + 1], 0)\n    ans = 0\n    for i in range(26):\n        if mx[i][1] > 1:\n            ans = max(ans, mx[i][0])\n        else:\n            ans = max(ans, mx[i][0] - 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    c = 0\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            c += 1\n        else:\n            c = 0\n        ans = max(c, ans)\n    d = {}\n    c = 1\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            c += 1\n        else:\n            if s[i] not in d:\n                d[s[i]] = c\n            else:\n                ans = max(ans, min(c, d[s[i]]))\n                if d[s[i]] < c:\n                    d[s[i]] = c\n            c = 1\n    if s[len(s) - 1] in d:\n        ans = max(ans, min(d[s[len(s) - 1]], c))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    ans = 0\n    for i in range(97, 122):\n        x = chr(i)\n        c = 0\n        m = 0\n        for j in a:\n            if x == j:\n                c += 1\n            else:\n                if m == c:\n                    ans = max(ans, m)\n                elif c > m:\n                    m = c\n                    ans = max(ans, m - 1)\n                c = 0\n        else:\n            if m == c:\n                ans = max(ans, m)\n            elif c > m:\n                m = c\n                ans = max(ans, m - 1)\n    print(ans)", "from collections import defaultdict\nimport math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    sub = s[0]\n    d = defaultdict(int)\n    ans = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            sub += s[i]\n        else:\n            d[sub] += 1\n            sub = s[i]\n    d[sub] += 1\n    l = [k for [k, v] in d.items() if v > 1 or len(k) > 1]\n    l.sort(key=lambda x: len(x), reverse=True)\n    val = 0\n    for x in l:\n        if d[x] == 1:\n            val = len(x) - 1\n        else:\n            val = len(x)\n        ans = max(ans, val)\n    print(ans)", "from collections import defaultdict\nimport math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    sub = s[0]\n    d = defaultdict(int)\n    ans = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            sub += s[i]\n        else:\n            d[sub] += 1\n            sub = s[i]\n    d[sub] += 1\n    l = [k for [k, v] in d.items() if v > 1 or len(k) > 1]\n    l.sort(key=lambda x: len(x), reverse=True)\n    val = 0\n    for x in l:\n        if d[x] == 1:\n            val = len(x) - 1\n        else:\n            val = len(x)\n        ans = max(ans, val)\n    print(ans)", "for i in range(int(input())):\n    num = int(input())\n    str1 = input()\n    str1 += '.'\n    lis = []\n    (s, t) = (1, 0)\n    while s < len(str1):\n        if str1[s - 1] == str1[s]:\n            s += 1\n        else:\n            lis.append(str1[t:s])\n            t = s\n            s += 1\n    dic = dict()\n    mx = 0\n    for j in lis:\n        length = len(j)\n        mx = max(mx, length)\n        try:\n            dic[length].append(j)\n        except:\n            dic[length] = list()\n            dic[length].append(j)\n    ans = list(set(dic[mx]))\n    total = 0\n    for i in ans:\n        count = lis.count(i)\n        total = max(count, total)\n    if mx == 1 and total == 1:\n        print(0)\n    elif total == 1:\n        print(mx - 1)\n    else:\n        print(mx)", "from string import ascii_lowercase as a_to_z\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    S = input()\n    ans = curLen = 1\n    for i in range(1, N):\n        if S[i] == S[i - 1]:\n            curLen += 1\n        if S[i] != S[i - 1] or i == N - 1:\n            if curLen > ans:\n                ans = curLen\n            curLen = 1\n    for ch in a_to_z:\n        if S.count(ch * ans) > 1:\n            print(ans)\n            break\n    else:\n        print(ans - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    my_dict = {}\n    borlen = 1\n    ans = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            borlen += 1\n        else:\n            if str(s[i - 1] + str(borlen)) not in my_dict:\n                my_dict[str(s[i - 1] + str(borlen))] = 1\n            else:\n                my_dict[str(s[i - 1] + str(borlen))] += 1\n            borlen = 1\n    if str(s[n - 1] + str(borlen)) not in my_dict:\n        my_dict[str(s[n - 1] + str(borlen))] = 1\n    else:\n        my_dict[str(s[n - 1] + str(borlen))] += 1\n    freq_1 = [i for i in my_dict if my_dict[i] == 1]\n    freq_g = [i for i in my_dict if my_dict[i] > 1]\n    max_bor_g = 0\n    max_bor_1 = 0\n    for i in freq_g:\n        if int(i[1:len(i)]) >= max_bor_g:\n            max_bor_g = int(i[1:len(i)])\n    for i in freq_1:\n        if int(i[1:n]) >= max_bor_1:\n            max_bor_1 = int(i[1:len(i)])\n    if max_bor_g >= max_bor_1 - 1:\n        print(max_bor_g)\n    else:\n        print(max_bor_1 - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    my_dict = {}\n    borlen = 1\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            borlen += 1\n        else:\n            if str(s[i - 1] + str(borlen)) not in my_dict:\n                my_dict[str(s[i - 1] + str(borlen))] = 1\n            else:\n                my_dict[str(s[i - 1] + str(borlen))] += 1\n            borlen = 1\n    if str(s[n - 1] + str(borlen)) not in my_dict:\n        my_dict[str(s[n - 1] + str(borlen))] = 1\n    else:\n        my_dict[str(s[n - 1] + str(borlen))] += 1\n    freq_1 = [i for i in my_dict if my_dict[i] == 1]\n    freq_g = [i for i in my_dict if my_dict[i] > 1]\n    max_bor_g = 0\n    max_bor_1 = 0\n    for i in freq_g:\n        if int(i[1:len(i)]) >= max_bor_g:\n            max_bor_g = int(i[1:len(i)])\n    for i in freq_1:\n        if int(i[1:len(i)]) >= max_bor_1:\n            max_bor_1 = int(i[1:len(i)])\n    if max_bor_g >= max_bor_1 - 1:\n        print(max_bor_g)\n    else:\n        print(max_bor_1 - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    hashmap = {}\n    sub = ''\n    for i in range(n):\n        if i == n - 1:\n            sub += s[i]\n            if sub in hashmap:\n                hashmap[sub] += 1\n            else:\n                hashmap[sub] = 1\n        elif s[i] == s[i + 1]:\n            sub += s[i]\n        else:\n            sub += s[i]\n            if sub in hashmap:\n                hashmap[sub] += 1\n            else:\n                hashmap[sub] = 1\n            sub = ''\n    res = 0\n    for string in hashmap.keys():\n        if hashmap[string] > 1:\n            res = max(res, len(string))\n        else:\n            res = max(res, len(string) - 1)\n    print(res)", "def solution(l, n):\n    l += '-'\n    dic = dict()\n    last = '_'\n    app = ''\n    for i in range(n):\n        if last != l[i]:\n            app = l[i]\n        else:\n            app += l[i]\n        if l[i] != l[i + 1]:\n            if app not in dic:\n                dic[app] = 1\n            else:\n                dic[app] += 1\n            if len(app) > 1:\n                substr = app[:-1]\n                if substr not in dic:\n                    dic[substr] = 2\n                else:\n                    dic[substr] += 2\n        last = l[i]\n    ans = 0\n    for key in dic:\n        if dic[key] > 1:\n            ans = max(ans, len(key))\n    print(ans)\nfor _ in range(int(input())):\n    n = int(input())\n    l = input()\n    solution(l, n)", "n = int(input())\nfor x in range(n):\n    l = int(input())\n    li = list(' ' + input())\n    li2 = set(li)\n    mfre = 0\n    fre = 0\n    for i in li2:\n        mi = 0\n        ma = 0\n        x = 0\n        fre = 0\n        for j in range(l + 1):\n            if li[j] == i and li[j - 1] != i:\n                x = 1\n                if mi == 1 and ma == 0:\n                    ma = 1\n                elif mi == 0:\n                    mi = 1\n            elif li[j] == li[j - 1] == i:\n                x = x + 1\n            elif x != 0 and x != 1:\n                if x >= ma:\n                    if ma != 0:\n                        mi = ma\n                    ma = x\n                    x = 0\n        if x >= ma and x != 1:\n            if ma != 0:\n                mi = ma\n            ma = x\n        if mi != 0 and ma != 0:\n            if ma == mi:\n                fre = ma\n            else:\n                fre = ma - 1\n        if fre > mfre:\n            mfre = fre\n    print(mfre)", "for _ in range(int(input())):\n    N = int(input())\n    S = input()\n    count = {}\n    temp = ''\n    for i in range(N):\n        if i == N - 1:\n            temp += S[i]\n            if temp in count:\n                count[temp] += 1\n            else:\n                count[temp] = 1\n        elif S[i] == S[i + 1]:\n            temp += S[i]\n        else:\n            temp += S[i]\n            if temp in count:\n                count[temp] += 1\n            else:\n                count[temp] = 1\n            temp = ''\n    output = 0\n    for i in count:\n        if count[i] > 1:\n            output = max(output, len(i))\n        else:\n            output = max(output, len(i) - 1)\n    print(output)", "for _ in range(int(input())):\n    N = int(input())\n    S = input()\n    count = {}\n    temp = ''\n    for i in range(N):\n        if i == N - 1:\n            temp += S[i]\n            if temp in count:\n                count[temp] += 1\n            else:\n                count[temp] = 1\n        elif S[i] == S[i + 1]:\n            temp += S[i]\n        else:\n            temp += S[i]\n            if temp in count:\n                count[temp] += 1\n            else:\n                count[temp] = 1\n            temp = ''\n    output = 0\n    for i in count:\n        if count[i] > 1:\n            output = max(output, len(i))\n        else:\n            output = max(output, len(i) - 1)\n    print(output)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    d = {}\n    a = ''\n    for i in range(n):\n        if i >= n - 1:\n            a += s[i]\n            if a not in d:\n                d[a] = 0\n            d[a] += 1\n            a = ''\n        elif s[i] == s[i + 1]:\n            a += s[i]\n        else:\n            a += s[i]\n            if a not in d:\n                d[a] = 0\n            d[a] += 1\n            a = ''\n    l = []\n    for (i, j) in d.items():\n        if j == 1:\n            l.append(len(i) - 1)\n        else:\n            l.append(len(i))\n    print(max(l))", "time = int(input())\nfor _ in range(time):\n    num = int(input())\n    string = input()\n    d = {}\n    a = ''\n    for i in range(0, num):\n        if i >= num - 1:\n            a += string[i]\n            if a not in d:\n                d[a] = 0\n            d[a] += 1\n            a = ''\n        elif string[i] == string[i + 1]:\n            a += string[i]\n        else:\n            a += string[i]\n            if a not in d:\n                d[a] = 0\n            d[a] += 1\n            a = ''\n    l = []\n    for (i, j) in d.items():\n        if j == 1:\n            l.append(len(i) - 1)\n        else:\n            l.append(len(i))\n    print(max(l))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    s = input()\n    s = s + ' '\n    (i, ma) = (0, 0)\n    while i < n:\n        sub = s[i]\n        while s[i] == s[i + 1]:\n            sub = sub + s[i]\n            i = i + 1\n        m = s[i + 1:]\n        if sub in m:\n            ma = max(ma, len(sub))\n        else:\n            ma = max(ma, len(sub) - 1)\n        i = i + 1\n    print(ma)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    substrs = []\n    ss = [s[0]]\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            ss.append(s[i + 1])\n        else:\n            substrs.append(''.join(ss))\n            ss = [s[i + 1]]\n    substrs.append(''.join(ss))\n    d = {}\n    for ss in substrs:\n        d.setdefault(ss, 0)\n        d[ss] += 1\n    mx = 0\n    for (k, v) in d.items():\n        l = len(k)\n        if v > 1 and l > mx:\n            mx = l\n        elif v == 1 and l - 1 > mx:\n            mx = l - 1\n    print(mx)", "import re\nfor tc in range(int(input())):\n    n = int(input())\n    s = input()\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    maxlongest = 0\n    for j in alpha:\n        regex = j + '+'\n        letters = re.findall(regex, s)\n        maxlen = 0\n        flagi = 0\n        countmax = 0\n        if len(letters) > 0:\n            for i in range(len(letters)):\n                if len(letters[i]) > maxlen:\n                    maxlen = len(letters[i])\n                    flagi = i\n            countmax = letters.count(letters[flagi])\n            if countmax > 1:\n                longestboring = maxlen\n            else:\n                longestboring = maxlen - 1\n            if longestboring > maxlongest:\n                maxlongest = longestboring\n    print(maxlongest)", "t = int(input())\nfor _ in range(t):\n    d = {}\n    n = int(input())\n    s = input()\n    mx = 0\n    i = 0\n    while i < n:\n        c = 1\n        ss = s[i]\n        while i < n - 1 and s[i] == s[i + 1]:\n            c += 1\n            i += 1\n            ss += s[i]\n        mx = max(mx, c - 1)\n        d[ss] = d.get(ss, 0) + 1\n        if d[ss] == 2:\n            mx = max(mx, len(ss))\n        i += 1\n    print(mx)", "from collections import Counter, defaultdict\nimport sys\nimport math\n\ndef sol(s, n):\n    count = 0\n    d = defaultdict(list)\n    i = 0\n    prev = None\n    while i < n:\n        if s[i] == prev:\n            count += 1\n        elif prev == None:\n            count = 1\n            prev = s[i]\n        else:\n            d[prev].append(count)\n            count = 1\n            prev = s[i]\n        i += 1\n    d[prev].append(count)\n    for x in d:\n        d[x].sort()\n    ans = 0\n    for i in d:\n        if len(d[i]) == 1 and d[i][0] == 1:\n            continue\n        elif len(d[i]) == 1:\n            ans = max(ans, d[i][0] - 1)\n        else:\n            ans = max(ans, d[i][-1] - 1, d[i][-2])\n    return ans\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return str(input())\n\ndef invr():\n    return map(int, input().split())\nT = inp()\nfor i in range(T):\n    n = inp()\n    s = insr()\n    print(sol(s, n))", "T = int(input())\nfor i in range(T):\n    d = {}\n    n = int(input())\n    s = input()\n    maxx = 0\n    i = 0\n    while i < n:\n        count = 1\n        sub = s[i]\n        while i < n - 1 and s[i] == s[i + 1]:\n            count += 1\n            i += 1\n            sub += s[i]\n        maxx = max(maxx, count - 1)\n        d[sub] = d.get(sub, 0) + 1\n        if d[sub] > 1:\n            maxx = max(maxx, len(sub))\n        i += 1\n    print(maxx)", "t = int(input())\nfor _ in range(t):\n    d = {}\n    n = int(input())\n    s = input()\n    mx = 0\n    i = 0\n    while i < n:\n        c = 1\n        ss = s[i]\n        while i < n - 1 and s[i] == s[i + 1]:\n            c += 1\n            i += 1\n            ss += s[i]\n        mx = max(mx, c - 1)\n        d[ss] = d.get(ss, 0) + 1\n        if d[ss] == 2:\n            mx = max(mx, len(ss))\n        i += 1\n    print(mx)", "for _ in range(int(input())):\n    l = int(input())\n    s = input()\n    maxmap = {}\n    maxe = 0\n    for i in range(l):\n        c = s[i]\n        if not c in maxmap:\n            maxmap[c] = [1]\n        elif s[i - 1] == c:\n            maxmap[c][-1] += 1\n        else:\n            maxmap[c].append(1)\n    for (key, val) in maxmap.items():\n        if len(val) == 1 and val[0] == 1:\n            continue\n        elif len(val) == 1 and val[0] - 1 > maxe:\n            maxe = val[0] - 1\n        elif max(val) > maxe:\n            if val.count(max(val)) > 1:\n                maxe = max(val)\n            else:\n                maxe = max(val) - 1\n    print(maxe)", "import collections\nfor t in range(int(input())):\n    n = int(input())\n    s = input()\n    longest_col = collections.defaultdict(int)\n    boring_list = collections.defaultdict(int)\n    cur = s[0]\n    for i in s[1:]:\n        if i == cur[0]:\n            cur += i\n        else:\n            if longest_col[cur[0]] > 0:\n                boring_list[cur[0]] = max(boring_list[cur[0]], min(longest_col[cur[0]], len(cur)), len(cur) - 1)\n            else:\n                boring_list[cur[0]] = len(cur) - 1\n            if len(cur) > longest_col[cur[0]]:\n                longest_col[cur[0]] = len(cur)\n            cur = i\n    else:\n        boring_list[cur[0]] = max(boring_list[cur[0]], min(longest_col[cur[0]], len(cur)), len(cur) - 1)\n    max_n = 0\n    for v in boring_list:\n        if boring_list[v] > max_n:\n            max_n = boring_list[v]\n    print(max_n)", "from collections import defaultdict\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    d = defaultdict(int)\n    p = s[0]\n    res = ''\n    for i in s:\n        if i == p:\n            res += i\n        else:\n            d[res] += 1\n            p = i\n            res = i\n    d[res] += 1\n    m = 0\n    for (k, v) in d.items():\n        if v > 1:\n            m = max(m, len(k))\n        else:\n            m = max(m, len(k) - 1)\n    print(m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    freq = {}\n    s += '-'\n    last = '-'\n    substr = ''\n    for i in range(n):\n        if last == s[i]:\n            substr += s[i]\n        else:\n            substr = s[i]\n        if s[i] != s[i + 1]:\n            if substr in freq:\n                freq[substr] += 1\n            else:\n                freq[substr] = 1\n            if len(substr) > 1:\n                moreStr = substr[0:-1]\n                if moreStr in freq:\n                    freq[moreStr] += 2\n                else:\n                    freq[moreStr] = 2\n        last = s[i]\n    ans = 0\n    for substr in freq:\n        count = freq[substr]\n        if count > 1:\n            ans = max(ans, len(substr))\n    print(ans)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    if n == 1:\n        print(0)\n    else:\n        count = 1\n        m = 1\n        l = []\n        ele = s[0]\n        for i in range(1, n):\n            if ele == s[i]:\n                count += 1\n            else:\n                count = 1\n                ele = s[i]\n            if m < count:\n                m = count\n        count = 1\n        for i in range(n):\n            if s[i] == ele:\n                count += 1\n            else:\n                count = 1\n                ele = s[i]\n            if count == m:\n                l.append(s[i])\n        if m == 1:\n            d = Counter(s)\n            if max(d.values()) > 1:\n                print(1)\n            else:\n                print(0)\n        else:\n            for i in l:\n                s1 = i * m\n                val = s.count(s1)\n                if val > 1:\n                    print(m)\n                    break\n            else:\n                print(m - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    mx = [[0, 0] for _ in range(26)]\n    (curch, curlen) = (s[0], 0)\n    for i in range(n):\n        if s[i] == curch:\n            curlen += 1\n        if i == n - 1 or s[i] != s[i + 1]:\n            pos = ord(curch) - ord('a')\n            if curlen > mx[pos][0]:\n                mx[pos] = [curlen, 0]\n            if curlen == mx[pos][0]:\n                mx[pos][1] += 1\n            if i < n - 1:\n                (curch, curlen) = (s[i + 1], 0)\n    ans = 0\n    for i in range(26):\n        if mx[i][1] > 1:\n            ans = max(ans, mx[i][0])\n        else:\n            ans = max(ans, mx[i][0] - 1)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = input()\n    f = [0] * 26\n    c = 1\n    res = 0\n    for i in range(1, n + 1):\n        if i < len(s) and s[i] == s[i - 1]:\n            c += 1\n        else:\n            j = ord(s[i - 1]) - 97\n            if f[j] != 0 and f[j] <= c:\n                res = max(res, max(c - 1, f[j]))\n                f[j] = c\n            elif f[j] == 0:\n                f[j] = c\n                res = max(res, f[j] - 1)\n            c = 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    s = s + ' '\n    m = []\n    c = 1\n    M = 0\n    for i in range(n):\n        if s[i] != s[i + 1]:\n            if c >= M:\n                M = c\n                m.append(s[i])\n            c = 1\n        else:\n            c += 1\n    for j in m:\n        if s.count(M * j) > 1:\n            print(M)\n            break\n    else:\n        print(M - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    s = s + ' '\n    m = []\n    c = 1\n    M = 0\n    for i in range(n):\n        if s[i] != s[i + 1]:\n            if c >= M:\n                M = c\n                m.append(s[i])\n            c = 1\n        else:\n            c += 1\n    for j in m:\n        if s.count(M * j) > 1:\n            print(M)\n            break\n    else:\n        print(M - 1)", "def spoc(a, b):\n    if b > a:\n        aa = b\n        b = a\n        a = aa\n    if b == 0:\n        if a == 0:\n            return 0\n        else:\n            return a - 1\n    elif a > b:\n        return a - 1\n    else:\n        return b\ntests = int(input())\nfor _ in range(tests):\n    del1 = []\n    del2 = []\n    for i in range(26):\n        del1.append(0)\n        del2.append(0)\n    n = int(input())\n    s = input()\n    c = chr(96)\n    poc = 0\n    for x in s:\n        if x != c:\n            if c != chr(96):\n                i = ord(c) - 97\n                if del1[i] < del2[i]:\n                    if del1[i] < poc:\n                        del1[i] = poc\n                elif del2[i] < del1[i]:\n                    if del2[i] < poc:\n                        del2[i] = poc\n                elif del1[i] < poc:\n                    del1[i] = poc\n            c = x\n            poc = 1\n        else:\n            poc += 1\n    i = ord(c) - 97\n    if del1[i] < del2[i]:\n        if del1[i] < poc:\n            del1[i] = poc\n    elif del2[i] < del1[i]:\n        if del2[i] < poc:\n            del2[i] = poc\n    elif del1[i] < poc:\n        del1[i] = poc\n    m = 0\n    for i in range(26):\n        pos = spoc(del1[i], del2[i])\n        if pos > m:\n            m = pos\n    print(m)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    if n == 1:\n        print(0)\n        continue\n    count = 1\n    ele = s[0]\n    l = []\n    m = 0\n    for i in range(1, n):\n        if ele == s[i]:\n            count += 1\n        else:\n            count = 1\n            ele = s[i]\n        if m < count:\n            m = count\n    count = 1\n    for i in range(1, n):\n        if s[i] == ele:\n            count += 1\n        else:\n            count = 1\n            ele = s[i]\n        if count == m:\n            l.append(s[i])\n    if m == 1:\n        s = list(s)\n        d = dict(Counter(s))\n        if max(d.values()) > 1:\n            print(1)\n        else:\n            print(0)\n    else:\n        done = False\n        for i in l:\n            s1 = i * m\n            val = s.count(s1)\n            if val > 1:\n                done = True\n                break\n        if done:\n            print(m)\n        else:\n            print(m - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    s = s + ' '\n    c = 1\n    maxx = 0\n    m = []\n    for i in range(n):\n        if s[i] != s[i + 1]:\n            if c >= maxx:\n                maxx = c\n                m.append(s[i])\n            c = 1\n        else:\n            c = c + 1\n    for i in m:\n        if s.count(maxx * i) > 1:\n            print(maxx)\n            break\n    else:\n        print(maxx - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    s = s + ' '\n    m = []\n    c = 1\n    M = 0\n    for i in range(n):\n        if s[i] != s[i + 1]:\n            if c >= M:\n                M = c\n                m.append(s[i])\n            c = 1\n        else:\n            c += 1\n    for j in m:\n        if s.count(M * j) > 1:\n            print(M)\n            break\n    else:\n        print(M - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    s = s + ' '\n    c = 1\n    maxx = 0\n    m = []\n    for i in range(n):\n        if s[i] != s[i + 1]:\n            if c >= maxx:\n                maxx = c\n                m.append(s[i])\n            c = 1\n        else:\n            c = c + 1\n    for i in m:\n        if s.count(maxx * i) > 1:\n            print(maxx)\n            break\n    else:\n        print(maxx - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    s = s + ' '\n    c = 1\n    maxx = 0\n    m = []\n    for i in range(n):\n        if s[i] != s[i + 1]:\n            if c >= maxx:\n                maxx = c\n                m.append(s[i])\n            c = 1\n        else:\n            c = c + 1\n    for i in m:\n        if s.count(maxx * i) > 1:\n            print(maxx)\n            break\n    else:\n        print(maxx - 1)", "from collections import defaultdict, Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().strip() + '-'\n    d = defaultdict(int)\n    last = '-'\n    sub = ''\n    for i in range(n):\n        if last == s[i]:\n            sub += s[i]\n        else:\n            sub = s[i]\n        if s[i] != s[i + 1]:\n            d[sub] += 1\n            if len(sub) > 1:\n                d[sub[:-1]] += 2\n        last = s[i]\n    mlen = 0\n    for key in d:\n        count = d[key]\n        leng = len(key)\n        if count > 1:\n            mlen = max(mlen, leng)\n    print(mlen)"]