["for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = []\n    if m == n:\n        r = 1\n        for i in range(n):\n            mat = []\n            c = r + 1\n            ele = r\n            for j in range(m):\n                mat.append(ele)\n                ele += r\n            r += 2\n            ans.append(mat)\n    elif n < m:\n        r = 0\n        dif = n + 1\n        ele = 1\n        for i in range(1, n + 1):\n            mat = []\n            r = i\n            for j in range(m):\n                mat.append(ele)\n                ele += r\n            strt = mat[0]\n            ele = strt + dif\n            ans.append(mat)\n    else:\n        ele = 1\n        for i in range(1, n + 1):\n            mat = []\n            dif = m + i\n            for j in range(m):\n                mat.append(ele)\n                ele += dif\n            strt = mat[0]\n            ele = strt + 1\n            ans.append(mat)\n    for li in ans:\n        for j in li:\n            print(j, end=' ')\n        print()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = []\n    if m == n:\n        r = 1\n        for i in range(n):\n            mat = []\n            c = r + 1\n            ele = r\n            for j in range(m):\n                mat.append(ele)\n                ele += r\n            r += 2\n            ans.append(mat)\n    elif n < m:\n        r = 0\n        dif = n + 1\n        ele = 1\n        for i in range(1, n + 1):\n            mat = []\n            r = i\n            for j in range(m):\n                mat.append(ele)\n                ele += r\n            strt = mat[0]\n            ele = strt + dif\n            ans.append(mat)\n    else:\n        ele = 1\n        for i in range(1, n + 1):\n            mat = []\n            dif = m + i\n            for j in range(m):\n                mat.append(ele)\n                ele += dif\n            strt = mat[0]\n            ele = strt + 1\n            ans.append(mat)\n    for li in ans:\n        for j in li:\n            print(j, end=' ')\n        print()", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    arr = [[0 for i in range(m)] for j in range(n)]\n    val = 1\n    r = 1\n    c = 2\n    if m > n:\n        c = n + 1\n    elif n > m:\n        c = 1\n        r = m + 1\n    for i in range(n):\n        temp = val\n        for j in range(m):\n            arr[i][j] = val\n            val += r\n        val = temp + c\n        if n == m:\n            r += 2\n        else:\n            r += 1\n    for i in range(n):\n        print(*arr[i])\n    t -= 1", "import math\nimport collections\nimport itertools\nimport functools\n\ndef fun(t):\n    (n, m) = map(int, input().split(' '))\n    ans = []\n    dif = 0\n    if m == n:\n        for i in range(n):\n            temp = []\n            dif += 1\n            temp.append(dif)\n            for j in range(1, m):\n                temp.append(dif * (j + 1))\n            ans.append(temp)\n            dif += 1\n        for l in ans:\n            print(*l)\n    elif n > m:\n        d = 2 * min(m, n) + abs(m - n)\n        op = 1\n        for i in range(n):\n            temp = []\n            for j in range(m):\n                temp.append(op + d * j)\n            print(*temp)\n            op += min(m, n)\n            d -= 1\n    else:\n        d = min(m, n)\n        op = 1\n        for i in range(n):\n            temp = []\n            for j in range(m):\n                temp.append(op + d * j)\n            print(*temp)\n            op += 2 * min(m, n) + abs(m - n)\n            d -= 1\nfor tc in range(int(input())):\n    fun(tc)", "def soln(n, m):\n    arr = [[0] * m for _ in range(n)]\n    if n == m:\n        d = 1\n        init = 1\n        for i in range(n):\n            arr[i][0] = init\n            init += 2\n            for j in range(1, m):\n                arr[i][j] = arr[i][j - 1] + d\n            d = init\n    elif n > m:\n        init = 1\n        d = m + 1\n        for i in range(n):\n            arr[i][0] = init\n            init += 1\n            for j in range(1, m):\n                arr[i][j] = arr[i][j - 1] + d\n            d += 1\n    else:\n        init = 1\n        d = n + 1\n        for j in range(m):\n            arr[0][j] = init\n            init += 1\n            for i in range(1, n):\n                arr[i][j] = arr[i - 1][j] + d\n            d += 1\n    return arr\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    res = soln(n, m)\n    for i in range(n):\n        for j in range(m):\n            print(res[i][j], end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        column = []\n        for j in range(m):\n            column.append(0)\n        arr.append(column)\n    if n == m:\n        hdcc = 1\n        vdcc = 2\n        a = 1\n        temp = a\n        for i in range(n):\n            for j in range(m):\n                arr[i][j] = a\n                print(arr[i][j], end=' ')\n                a = a + hdcc\n            a = temp\n            a = a + vdcc\n            temp = a\n            hdcc += 2\n            print('')\n    elif n > m:\n        a = 1\n        vdcc = 1\n        hdcc = m + 1\n        temp = a\n        for i in range(n):\n            for j in range(m):\n                arr[i][j] = a\n                print(arr[i][j], end=' ')\n                a = a + hdcc\n            a = temp\n            a = a + vdcc\n            temp = a\n            hdcc += 1\n            print('')\n    elif m > n:\n        a = 1\n        vdcc = n + 1\n        hdcc = 1\n        temp = a\n        for i in range(n):\n            for j in range(m):\n                arr[i][j] = a\n                print(arr[i][j], end=' ')\n                a = a + hdcc\n            a = temp\n            a = a + vdcc\n            temp = a\n            hdcc += 1\n            print('')", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    l = [[0 for i in range(n)] for j in range(m)]\n    if m > n:\n        c = 1\n        r = n + 1\n        for i in range(m):\n            l[i][0] = c\n            for j in range(1, n):\n                l[i][j] = l[i][j - 1] + r\n            r += 1\n            c += 1\n    elif m == n:\n        c = 1\n        for i in range(m):\n            l[i][0] = c\n            for j in range(1, n):\n                l[i][j] = l[i][j - 1] + c\n            c += 2\n    else:\n        r = 1\n        x = 1\n        for i in range(m):\n            l[i][0] = x\n            for j in range(1, n):\n                l[i][j] = l[i][j - 1] + r\n            r += 1\n            x += m + 1\n    for i in l:\n        print(*i)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m:\n        for i in range(n):\n            ans = ''\n            start = m * i + 1\n            diff = m + n - i\n            for j in range(m):\n                d = start + diff * j\n                ans = ans + ' ' + str(d)\n            print(ans.strip())\n    elif m > n:\n        for i in range(n):\n            ans = ''\n            start = (m + n) * i + 1\n            diff = n - i\n            for j in range(m):\n                d = start + diff * j\n                ans = ans + ' ' + str(d)\n            print(ans.strip())\n    else:\n        for i in range(0, n):\n            ans = ''\n            start = 1 + 2 * i\n            diff = 1 + 2 * i\n            for j in range(0, m):\n                d = start + diff * j\n                ans = ans + ' ' + str(d)\n            print(ans.strip())", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m:\n        for i in range(n):\n            ans = ''\n            start = m * i + 1\n            diff = m + n - i\n            for j in range(m):\n                d = start + diff * j\n                ans = ans + ' ' + str(d)\n            print(ans.strip())\n    elif m > n:\n        for i in range(n):\n            ans = ''\n            start = (m + n) * i + 1\n            diff = n - i\n            for j in range(m):\n                d = start + diff * j\n                ans = ans + ' ' + str(d)\n            print(ans.strip())\n    else:\n        for i in range(0, n):\n            ans = ''\n            start = 1 + 2 * i\n            diff = 1 + 2 * i\n            for j in range(0, m):\n                d = start + diff * j\n                ans = ans + ' ' + str(d)\n            print(ans.strip())", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        col = []\n        for j in range(m):\n            col.append(0)\n        arr.append(col)\n    if n == m:\n        hd = 1\n        vd = 2\n        a = 1\n        temp = a\n        for i in range(n):\n            for j in range(m):\n                arr[i][j] = a\n                print(arr[i][j], end=' ')\n                a = a + hd\n            a = temp\n            a = a + vd\n            temp = a\n            hd += 2\n            print('')\n    elif n > m:\n        a = 1\n        vd = 1\n        hd = m + 1\n        temp = a\n        for i in range(n):\n            for j in range(m):\n                arr[i][j] = a\n                print(arr[i][j], end=' ')\n                a = a + hd\n            a = temp\n            a = a + vd\n            temp = a\n            hd += 1\n            print('')\n    elif m > n:\n        a = 1\n        vd = n + 1\n        hd = 1\n        temp = a\n        for i in range(n):\n            for j in range(m):\n                arr[i][j] = a\n                print(arr[i][j], end=' ')\n                a = a + hd\n            a = temp\n            a = a + vd\n            temp = a\n            hd += 1\n            print('')", "t = int(input())\nfor i in range(t):\n    (n, m) = input().split()\n    (n, m) = (int(n), int(m))\n    (n, m) = (m, n)\n    if m == n:\n        s = 1\n        d = 1\n        stk = []\n        for i in range(m):\n            stk.append(s)\n            s += 2\n        for i in range(n):\n            for j in range(m):\n                print(stk[i], end=' ')\n                stk[i] += d\n            print('')\n            d += 2\n    elif m < n:\n        stk = []\n        stk.append(1)\n        d = m + 2\n        for i in range(1, m):\n            stk.append(d)\n            d += m + 1\n        d = 1\n        for i in range(m):\n            for j in range(n):\n                print(stk[i], end=' ')\n                stk[i] += d\n            print('')\n            d += 1\n    elif m > n:\n        stk = []\n        d = n + 1\n        for i in range(1, m + 1):\n            stk.append(i)\n        for i in range(m):\n            for j in range(n):\n                print(stk[i], end=' ')\n                stk[i] += d\n            print('')\n            d = d + 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        col = []\n        for j in range(m):\n            col.append(0)\n        arr.append(col)\n    if n == m:\n        hd = 1\n        vd = 2\n        a = 1\n        temp = a\n        for i in range(n):\n            for j in range(m):\n                arr[i][j] = a\n                print(arr[i][j], end=' ')\n                a = a + hd\n            a = temp\n            a = a + vd\n            temp = a\n            hd += 2\n            print('')\n    elif n > m:\n        a = 1\n        vd = 1\n        hd = m + 1\n        temp = a\n        for i in range(n):\n            for j in range(m):\n                arr[i][j] = a\n                print(arr[i][j], end=' ')\n                a = a + hd\n            a = temp\n            a = a + vd\n            temp = a\n            hd += 1\n            print('')\n    elif m > n:\n        a = 1\n        vd = n + 1\n        hd = 1\n        temp = a\n        for i in range(n):\n            for j in range(m):\n                arr[i][j] = a\n                print(arr[i][j], end=' ')\n                a = a + hd\n            a = temp\n            a = a + vd\n            temp = a\n            hd += 1\n            print('')", "import math\nfrom collections import Counter\nfrom sys import maxsize\nints = lambda : list(map(int, input().split()))\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nm = 10 ** 9 + 7\ninp = lambda : int(input())\n\ndef complementary():\n    d = {'A': 'T', 'C': 'G', 'G': 'C', 'T': 'A'}\n    n = inp()\n    s = input()\n    for x in s:\n        if x in d:\n            print(d[x], end='')\n    print()\n\ndef get_max_count(arr):\n    d = {}\n    for x in arr:\n        if x in d:\n            d[x] += 1\n        else:\n            d[x] = 1\n    return max(d.values())\n\ndef make_all_equal():\n    n = inp()\n    arr = ints()\n    max_count = get_max_count(arr)\n    print(n - max_count)\n\ndef count_acs():\n    p = inp()\n    n_hundred = p // 100\n    n_single = p % 100\n    if n_hundred + n_single <= 10:\n        print(n_hundred + n_single)\n    else:\n        print(-1)\n\ndef is_prime(n):\n    for x in range(2, int(n ** 0.5)):\n        if n % x == 0:\n            return False\n    return True\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef strong_elements():\n\n    def get_prime_count(arr):\n        count = 0\n        for x in arr:\n            if is_prime(x):\n                count += 1\n            if count == 2:\n                return count\n        return count\n    n = inp()\n    arr = ints()\n    co_primes = 0\n    gcd_of_n = arr[0]\n    prev_gcd = gcd_of_n\n    for x in arr:\n        gcd_of_n = gcd(x, gcd_of_n)\n        if gcd_of_n == 1:\n            co_primes += 1\n            gcd_of_n = prev_gcd\n        if co_primes == 2:\n            print(0)\n            return\n        prev_gcd = gcd_of_n\n    if co_primes == 1:\n        print(2)\n    else:\n        print(n)\n\ndef bubble_sort(arr, n, _max):\n    for i in range(n - 1):\n        flag = 0\n        for j in range(n - i - 1):\n            if arr[j] > arr[j + 1]:\n                if arr[j] + arr[j + 1] <= _max:\n                    flag = 1\n                    (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n                else:\n                    return 'no'\n        if not flag:\n            return 'yes'\n    return 'yes'\n\ndef reverse_sort():\n    (n, x) = ints()\n    A = ints()\n    for i in range(len(A)):\n        min_idx = i\n        for j in range(i + 1, len(A)):\n            if A[min_idx] > A[j]:\n                min_idx = j\n        if A[i] + A[min_idx] <= x or A[i] == A[min_idx]:\n            (A[i], A[min_idx]) = (A[min_idx], A[i])\n        else:\n            return 'no'\n    return 'yes'\n\ndef AP():\n    (n, m) = ints()\n    for row in range(n):\n        if m == n:\n            a = 2 * row + 1\n            arr = [a * col for col in range(1, m + 1)]\n        elif m < n:\n            initial = row + 1\n            diff = m + initial\n            arr = [initial + col * diff for col in range(m)]\n        else:\n            initial = (n + 1) * row + 1\n            diff = row + 1\n            arr = [initial + col * diff for col in range(m)]\n        print(*arr)\nfor _ in range(inp()):\n    AP()", "t = int(input())\nfor x in range(t):\n    (N, M) = map(int, input().strip().split())\n    matrix = [[0] * M for i in range(N)]\n    if M > N:\n        var = 1\n        for i in range(N):\n            for j in range(M):\n                if j == 0:\n                    matrix[i][j] = var\n                else:\n                    matrix[i][j] = matrix[i][j - 1] + (i + 1)\n            var += N + 1\n    if N > M:\n        var = M + 1\n        for i in range(N):\n            for j in range(M):\n                if j == 0:\n                    matrix[i][j] = i + 1\n                else:\n                    matrix[i][j] = matrix[i][j - 1] + var\n            var += 1\n    elif N == M:\n        var = 1\n        for i in range(N):\n            for j in range(M):\n                matrix[i][j] = var * (j + 1)\n            var += 2\n    for i in matrix:\n        for j in i:\n            print(j, '', end='')\n        print('\\n', end='')", "t = int(input())\nfor x in range(t):\n    (N, M) = map(int, input().strip().split())\n    matrix = [[0] * M for i in range(N)]\n    if M > N:\n        var = 1\n        for i in range(N):\n            for j in range(M):\n                if j == 0:\n                    matrix[i][j] = var\n                else:\n                    matrix[i][j] = matrix[i][j - 1] + (i + 1)\n            var += N + 1\n    if N > M:\n        var = M + 1\n        for i in range(N):\n            for j in range(M):\n                if j == 0:\n                    matrix[i][j] = i + 1\n                else:\n                    matrix[i][j] = matrix[i][j - 1] + var\n            var += 1\n    elif N == M:\n        var = 1\n        for i in range(N):\n            for j in range(M):\n                matrix[i][j] = var * (j + 1)\n            var += 2\n    for i in matrix:\n        for j in i:\n            print(j, '', end='')\n        print('\\n', end='')"]