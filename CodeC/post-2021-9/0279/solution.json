["import math\n\ndef printDivisors(n):\n    cnt = 0\n    i = 1\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                cnt += 1\n            else:\n                cnt += 2\n        i = i + 1\n    return cnt\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        print(printDivisors(n - 1))", "import math\n\ndef printDivisors(n):\n    cnt = 0\n    i = 1\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                cnt += 1\n            else:\n                cnt += 2\n        i = i + 1\n    return cnt\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        print(printDivisors(n - 1))", "import math\nfor i in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print('1')\n    else:\n        n -= 1\n        (cnt, j) = (0, 1)\n        while j * j <= n:\n            if n % j == 0:\n                cnt += 1\n                if int(n / j) != j:\n                    cnt += 1\n            j += 1\n        print(cnt)", "t = int(input())\nimport math\nimport time\nfor _ in range(t):\n    n = int(input())\n    n -= 1\n    c = 0\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            c += 1\n            if n / i != i:\n                c += 1\n    print(c)", "t = int(input())\nimport math\nimport time\nfor _ in range(t):\n    n = int(input())\n    n -= 1\n    c = 0\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            c += 1\n            if n / i != i:\n                c += 1\n    print(c)", "import math\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    nk = 0\n    for K in range(1, int(math.sqrt(N)) + 1):\n        if (N - 1) % K == 0:\n            nk += 1\n            if (N - 1) // K != K:\n                nk += 1\n    print(nk)", "for t in range(int(input())):\n    n = int(input())\n    i = 1\n    ans = 0\n    while i * i <= n - 1:\n        if (n - 1) % i == 0:\n            if i * i < n - 1:\n                ans += 2\n            elif i * i == n - 1:\n                ans += 1\n        i += 1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    i = 1\n    ans = 0\n    while i * i <= n - 1:\n        if (n - 1) % i == 0:\n            if i * i < n - 1:\n                ans += 2\n            elif i * i == n - 1:\n                ans += 1\n        i += 1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    i = 1\n    ans = 0\n    while i * i <= n - 1:\n        if (n - 1) % i == 0:\n            if i * i < n - 1:\n                ans += 2\n            elif i * i == n - 1:\n                ans += 1\n        i += 1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    i = 1\n    ans = 0\n    while i * i <= n - 1:\n        if (n - 1) % i == 0:\n            if i * i < n - 1:\n                ans += 2\n            elif i * i == n - 1:\n                ans += 1\n        i += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = n - 1\n    s = set()\n    for i in range(1, int(x ** 0.5) + 1):\n        if x % i == 0:\n            s.add(i)\n            s.add(x // i)\n    print(len(s))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    for i in range(1, int(math.sqrt(n - 1)) + 1):\n        if (n - 1) % i == 0:\n            ans += 1\n            if (n - 1) // i != i:\n                ans += 1\n    print(ans)", "import math\n\ndef findKValue():\n    n = int(input())\n    k = 0\n    for i in range(1, int(math.sqrt(n - 1)) + 1):\n        if (n - 1) % i == 0:\n            k += 1\n            if (n - 1) // i != i:\n                k += 1\n    print(k)\nfor i in range(0, int(input())):\n    findKValue()", "from math import sqrt, floor\nt = int(input())\nresult = []\nfor _ in range(t):\n    n = int(input())\n    x = n - 1\n    lim = floor(sqrt(x))\n    count = 0\n    for k in range(1, lim + 1):\n        if x % k == 0:\n            count += 1\n            if k ** 2 != x:\n                count += 1\n    result.append(count)\nfor count in result:\n    print(count)", "from math import sqrt, floor\nt = int(input())\nresult = []\nfor _ in range(t):\n    n = int(input())\n    x = n - 1\n    lim = floor(sqrt(x))\n    count = 0\n    for k in range(1, lim + 1):\n        if x % k == 0:\n            count += 1\n            if k ** 2 != x:\n                count += 1\n    result.append(count)\nfor count in result:\n    print(count)", "from math import sqrt, floor\nt = int(input())\nresult = []\nfor _ in range(t):\n    n = int(input())\n    x = n - 1\n    lim = floor(sqrt(x))\n    count = 0\n    for k in range(1, lim + 1):\n        if x % k == 0:\n            count += 2\n            if k ** 2 == x:\n                count -= 1\n    result.append(count)\nfor count in result:\n    print(count)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    cnt = 0\n    s = math.sqrt(n - 1)\n    for i in range(1, int(s) + 1):\n        if (n - 1) % i == 0:\n            v = n // i\n            if v == i:\n                cnt += 1\n            else:\n                cnt += 2\n    if n == 2:\n        print(1)\n    else:\n        print(cnt)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    cnt = 0\n    s = math.sqrt(n - 1)\n    for i in range(1, int(s) + 1):\n        if (n - 1) % i == 0:\n            v = n // i\n            if v == i:\n                cnt += 1\n            else:\n                cnt += 2\n    if n == 2:\n        print(1)\n    else:\n        print(cnt)", "def totalFactors(N):\n    cnt = 0\n    for i in range(1, int(N ** 0.5) + 1):\n        if N % i == 0:\n            cnt += 1\n            if i != N / i:\n                cnt += 1\n    return cnt\nfor _ in range(int(input())):\n    N = int(input())\n    print(totalFactors(N - 1))", "def totalFactors(N):\n    cnt = 0\n    for i in range(1, int(N ** 0.5) + 1):\n        if N % i == 0:\n            cnt += 1\n            if i != N / i:\n                cnt += 1\n    return cnt\nfor _ in range(int(input())):\n    N = int(input())\n    print(totalFactors(N - 1))", "for t in range(int(input())):\n    n = int(input())\n    l = 0\n    i = 1\n    while i * i <= n - 1:\n        if (n - 1) % i == 0:\n            l += 1\n            if (n - 1) // i != i:\n                l += 1\n        i += 1\n    print(l)", "import math\ntests = int(input())\nfor i in range(tests):\n    num = int(input())\n    num -= 1\n    ans = 0\n    if num == 1:\n        ans = 1\n    else:\n        for j in range(1, math.floor(num ** 0.5) + 1):\n            if num % j == 0:\n                if num / j == num / (num / j):\n                    ans += 1\n                else:\n                    ans += 2\n    print(ans)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    n -= 1\n    check = False\n    ans = 0\n    for j in range(1, math.floor(n ** (1 / 2)) + 1):\n        if n % j == 0:\n            ans += 2\n        if j * j == n:\n            ans -= 1\n    print(ans)", "t = int(input())\n\ndef factor(n):\n    ret = []\n    i = 2\n    while i * i <= n:\n        while n % i == 0:\n            ret.append(i)\n            n //= i\n        i += 1\n    if n > 1:\n        ret.append(n)\n    return ret\nfor _ in range(t):\n    n = int(input())\n    hashVal = {}\n    ret = factor(n - 1)\n    for num in ret:\n        if num in hashVal:\n            hashVal[num] += 1\n        else:\n            hashVal[num] = 1\n    ans = 1\n    for num in hashVal:\n        ans *= hashVal[num] + 1\n    print(ans)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    n -= 1\n    check = False\n    ans = 0\n    for j in range(1, math.floor(n ** (1 / 2)) + 1):\n        if n % j == 0:\n            ans += 2\n        if j * j == n:\n            ans -= 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    z = n - 1\n    l = []\n    for i in range(1, int(z ** (1 / 2)) + 1):\n        if z % i == 0:\n            l.append(i)\n            if z // i not in l:\n                l.append(z // i)\n    print(len(l))", "for _ in range(int(input())):\n    (n, d, x) = (int(input()) - 1, 1, 0)\n    while d * d < n:\n        if n % d == 0:\n            x += 2\n        d += 1\n    print(x + (n == d * d))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = n - 1\n    i = 1\n    count = 0\n    while i * i <= x:\n        if x % i == 0:\n            count += 1\n            if x // i != i:\n                count += 1\n        i = i + 1\n    print(count)", "for _ in range(int(input())):\n    (n, d, x) = (int(input()) - 1, 1, 0)\n    while d * d < n:\n        if n % d == 0:\n            x += 2\n        d += 1\n    print(x + (n == d * d))", "for tc in range(int(input())):\n    n = int(input())\n    l = 0\n    i = 1\n    while i * i <= n - 1:\n        if (n - 1) % i == 0:\n            l += 1\n            if (n - 1) // i != i:\n                l += 1\n        i += 1\n    print(l)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = n - 1\n    i = 1\n    count = 0\n    while i * i <= x:\n        if x % i == 0:\n            count += 1\n            if x // i != i:\n                count += 1\n        i = i + 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = n - 1\n    i = 1\n    count = 0\n    while i * i <= x:\n        if x % i == 0:\n            count += 1\n            if x // i != i:\n                count += 1\n        i = i + 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    count = 0\n    x = n - 1\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            count += 1\n            if x // i != i:\n                count += 1\n        i += 1\n    print(count)", "import math\nnumber_of_test_cases = int(input())\nfor test in range(0, number_of_test_cases):\n    friends = int(input())\n    chairs = friends - 1\n    possible_chairs_to_remove = 0\n    for divisors in range(1, round(math.sqrt(chairs)) + 1):\n        if chairs % divisors == 0:\n            if divisors ** 2 == chairs:\n                possible_chairs_to_remove += 1\n            else:\n                possible_chairs_to_remove += 2\n    print(possible_chairs_to_remove)", "import math\nnumber_of_test_cases = int(input())\nfor test in range(0, number_of_test_cases):\n    friends = int(input())\n    chairs = friends - 1\n    possible_chairs_to_remove = 0\n    for divisors in range(1, round(math.sqrt(chairs)) + 1):\n        if chairs % divisors == 0:\n            if divisors ** 2 == chairs:\n                possible_chairs_to_remove += 1\n            else:\n                possible_chairs_to_remove += 2\n    print(possible_chairs_to_remove)", "def factors(x):\n    result = []\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            result.append(i)\n            if x // i != i:\n                result.append(x // i)\n        i += 1\n    return result\n\ndef main():\n    n = int(input())\n    print(len(factors(n - 1)))\nfor _ in range(int(input())):\n    main()", "for _ in range(int(input())):\n    (n, d, x) = (int(input()) - 1, 1, 0)\n    while d * d < n:\n        if n % d == 0:\n            x += 2\n        d += 1\n    print(x + (n == d * d))", "import math\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    i = 1\n    cnt = 0\n    n -= 1\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                cnt += 1\n            else:\n                cnt += 2\n        i = i + 1\n    print(cnt)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    c = 0\n    v = int((n - 1) ** 0.5)\n    i = 1\n    for i in range(1, v + 1):\n        if (n - 1) % i == 0:\n            c += 2\n    if v * v == n - 1:\n        c -= 1\n    print(c)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    c = 0\n    v = int((n - 1) ** 0.5)\n    i = 1\n    for i in range(1, v + 1):\n        if (n - 1) % i == 0:\n            c += 2\n    if v * v == n - 1:\n        c -= 1\n    print(c)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    c = 0\n    v = int((n - 1) ** 0.5)\n    i = 1\n    for i in range(1, v + 1):\n        if (n - 1) % i == 0:\n            c += 2\n    if v * v == n - 1:\n        c -= 1\n    print(c)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    c = 0\n    v = int((n - 1) ** 0.5)\n    i = 1\n    for i in range(1, v + 1):\n        if (n - 1) % i == 0:\n            c += 2\n    if v * v == n - 1:\n        c -= 1\n    print(c)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    new = n - 1\n    count = 0\n    if n == 2:\n        print(1)\n    elif n == 3:\n        print(2)\n    else:\n        for i in range(1, int(math.sqrt(new)) + 1):\n            if new % i == 0:\n                if i == math.sqrt(new):\n                    count += 1\n                else:\n                    count += 2\n        print(count)", "for i in range(int(input())):\n    n = int(input()) - 1\n    count = 0\n    if n == 1:\n        print('1')\n    elif n == 2:\n        print('2')\n    else:\n        for j in range(1, int(n ** (1 / 2)) + 1):\n            if n % j == 0:\n                if n ** (1 / 2) == j:\n                    count += 1\n                else:\n                    count += 2\n        print(count)", "for i in range(int(input())):\n    n = int(input()) - 1\n    count = 0\n    if n == 1:\n        print('1')\n    elif n == 2:\n        print('2')\n    else:\n        for j in range(1, int(n ** (1 / 2)) + 1):\n            if n % j == 0:\n                if n ** (1 / 2) == j:\n                    count += 1\n                else:\n                    count += 2\n        print(count)", "from math import sqrt\nfor i in range(int(input())):\n    n = int(input())\n    a = n - 1\n    c = 0\n    for j in range(1, int(sqrt(n)) + 1):\n        if a % j == 0 and a // j != j:\n            c += 2\n        elif a % j == 0:\n            c += 1\n    print(c)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    c = 0\n    for i in range(1, int(math.sqrt(n - 1)) + 1):\n        if (n - 1) % i == 0:\n            if (n - 1) / i == i:\n                c += 1\n            else:\n                c += 2\n    print(c)", "from cgi import print_environ\nimport itertools\nimport heapq\nimport collections\nimport math\nfrom re import M\nimport sys\nfrom typing import Counter\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef inis():\n    return input().split()\n\ndef stlt():\n    return list(map(str, input().split()))\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    l = []\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    for p in range(2, n + 1):\n        if prime[p]:\n            l.append(p)\n    return l\n\ndef isPrime(n):\n    prime_flag = 0\n    if n > 1:\n        for i in range(2, int(math.sqrt(n)) + 1):\n            if n % i == 0:\n                prime_flag = 1\n                break\n        if prime_flag == 0:\n            return True\n        else:\n            return False\n    else:\n        return False\n\ndef gcd(a):\n    x = 0\n    for p in a:\n        x = math.gcd(x, p)\n    return x\n\ndef printDivisors(n):\n    i = 1\n    ans = []\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                ans.append(i)\n            else:\n                ans.append(i)\n                ans.append(n // i)\n        i = i + 1\n    ans.sort()\n    return ans\n\ndef CountDivisors(n):\n    i = 1\n    ans = []\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                ans.append(i)\n            else:\n                ans.append(i)\n                ans.append(n // i)\n        i = i + 1\n    ans.sort()\n    return len(ans)\n\ndef binaryToDecimal(n):\n    return int(n, 2)\n\ndef countTriplets(a, n):\n    s = set()\n    for i in range(n):\n        s.add(a[i])\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n, 1):\n            xr = a[i] ^ a[j]\n            if xr in s and xr != a[i] and (xr != a[j]):\n                count += 1\n    return int(count // 3)\n\ndef generate_twins(n):\n    a = 0\n    for i in range(1, n + 1):\n        j = i + 2\n        if isPrime(i) and isPrime(j):\n            if 2 ^ (i ^ j) == 0:\n                a += 1\n    return a\n\ndef smallestDivisor(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\n\ndef countOdd(L, R):\n    N = (R - L) // 2\n    if R % 2 != 0 or L % 2 != 0:\n        N += 1\n    return N\n\ndef isPalindrome(s):\n    return s == s[::-1]\nfor _ in range(inp()):\n    n = inp()\n    a = CountDivisors(n - 1)\n    print(a)", "from math import ceil, sqrt\nt = int(input())\nwhile t:\n    n = int(input())\n    if n == 2:\n        print(1)\n        t -= 1\n        continue\n    (count, n) = (0, n - 1)\n    for i in range(1, ceil(sqrt(n))):\n        if n % i == 0:\n            count += 1\n    print(count * 2 if int(sqrt(n)) * int(sqrt(n)) != n else count * 2 + 1)\n    t -= 1", "import math\nfor _ in range(int(input())):\n    n = int(input()) - 1\n    count = 0\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(2)\n    else:\n        for i in range(1, int(math.sqrt(n)) + 1):\n            if n % i == 0:\n                if math.sqrt(n) == i:\n                    count += 1\n                else:\n                    count += 2\n        print(count)", "import math\nfor tc in range(int(input())):\n    n = int(input())\n    n -= 1\n    ans = 0\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            ans += 1\n            if i * i != n:\n                ans += 1\n    print(ans)", "import math\nfor tc in range(int(input())):\n    n = int(input())\n    n -= 1\n    ans = 0\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            ans += 1\n            if i * i != n:\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    x = int(input())\n    x -= 1\n    (i, count) = (1, 0)\n    while i * i <= x:\n        if x % i == 0:\n            count += 1\n            if i * i != x:\n                count += 1\n        i += 1\n    print(count)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    count = 0\n    n = n - 1\n    p = int(math.sqrt(n))\n    for i in range(1, p + 1):\n        if n % i == 0:\n            count += 2\n    if p * p == n:\n        count -= 1\n    print(count)", "for s in [*open(0)][1:]:\n    s = int(s) - 1\n    i = 1\n    cnt = 0\n    while i <= s ** 0.5:\n        if not s % i:\n            cnt = cnt + 1 if s / i == i else cnt + 2\n        i += 1\n    print(cnt)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    count1 = 0\n    if n == 2:\n        print(1)\n    else:\n        n = n - 1\n        for j in range(1, int(math.sqrt(n)) + 1):\n            if n % j == 0:\n                if n // j == j:\n                    count1 += 1\n                else:\n                    count1 += 2\n        print(count1)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 2:\n        print('1')\n        continue\n    ct = 0\n    j = 2\n    n -= 1\n    while j <= math.sqrt(n):\n        if n % j == 0:\n            if n / j == j:\n                ct += 1\n            else:\n                ct += 2\n        j += 1\n    print(ct + 2)", "import math\nfor testcase in range(int(input())):\n    n = int(input())\n    count = 0\n    n = n - 1\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            if n // i == i:\n                count += 1\n            else:\n                count += 2\n    print(count)", "import math\nt = int(input())\nwhile t > 0:\n    N = int(input())\n    if N == 2:\n        print(1)\n    else:\n        st = set()\n        for i in range(1, int(math.sqrt(N - 1)) + 1):\n            if (N - 1) % i == 0:\n                st.add(i)\n                st.add((N - 1) // i)\n        print(len(st))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    n -= 1\n    (counter, i) = (0, 1)\n    while i * i <= n:\n        if n % i == 0:\n            counter += 1\n            if i * i != n:\n                counter += 1\n        i += 1\n    print(counter)", "import math\n\ndef findfact(n):\n    cnt = 0\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            cnt += 1\n            if n / i != i and n % (n / i) == 0:\n                cnt += 1\n    return cnt\n\ndef main():\n    t = int(input())\n    while t > 0:\n        n = int(input())\n        print(findfact(n - 1))\n        t -= 1\nmain()", "try:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        n = n - 1\n        count = 0\n        for i in range(1, int(n ** 0.5) + 1):\n            if n % i == 0:\n                if n // i == i:\n                    count += 1\n                else:\n                    count += 2\n        print(count)\nexcept:\n    pass", "from math import *\n\ndef factors(x):\n    f = 0\n    for i in range(1, int(sqrt(x)) + 1):\n        if x % i == 0:\n            if x // i == i:\n                f += 1\n            else:\n                f += 2\n    return f\nfor _ in range(int(input())):\n    print(factors(int(input()) - 1))", "for _ in range(int(input())):\n    c = 0\n    n = int(input())\n    n = n - 1\n    t = int(n ** 0.5) + 1\n    i = 1\n    while i < t:\n        if n % i == 0:\n            if n / i == i:\n                c = c + 1\n            else:\n                c = c + 2\n        i += 1\n    print(c)", "for _ in range(int(input())):\n    N = int(input())\n    c = 0\n    N -= 1\n    for i in range(1, int(N ** (1 / 2)) + 1):\n        if i * i == N:\n            c += 1\n        elif N % i == 0:\n            c += 2\n        else:\n            continue\n    print(c)", "test = int(input())\nfor a in range(test):\n    n = int(input()) - 1\n    ans = 0\n    i = 1\n    sqr = int(n ** 0.5)\n    while i <= sqr:\n        if n % i == 0:\n            ans = ans + 2\n        i = i + 1\n    if sqr * sqr == n:\n        ans = ans - 1\n    print(ans)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    x = n - 1\n    result = []\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            result.append(i)\n            if x // i != i:\n                result.append(x // i)\n        i += 1\n    print(len(result))", "from itertools import permutations as per\nfrom math import factorial as fact\nfrom difflib import SequenceMatcher\nimport bisect\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nt = int(input())\nfor _ in range(t):\n    n = int(input()) - 1\n    ans = 1\n    i = 2\n    while i * i <= n:\n        c = 1\n        while n % i == 0:\n            c += 1\n            n /= i\n        ans *= c\n        i += 1\n    if n > 1:\n        ans *= 2\n    print(ans)", "from itertools import permutations as per\nfrom math import factorial as fact\nfrom difflib import SequenceMatcher\nimport bisect\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    c = 0\n    i = 1\n    while i * i <= n - 1:\n        if i * i == n - 1:\n            c += 1\n        elif (n - 1) % i == 0:\n            c += 2\n        i += 1\n    print(c)", "from itertools import permutations as per\nfrom math import factorial as fact\nfrom difflib import SequenceMatcher\nimport bisect\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    c = 0\n    i = 1\n    while i * i <= n - 1:\n        if i * i == n - 1:\n            c += 1\n            i += 1\n            continue\n        if (n - 1) % i == 0:\n            c += 2\n        i += 1\n    print(c)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    l = 0\n    n = n - 1\n    for k in range(1, int(math.sqrt(n)) + 1):\n        if n % k == 0:\n            if k == n // k:\n                l += 1\n            else:\n                l += 2\n    print(l)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    l = 0\n    n = n - 1\n    for k in range(1, int(math.sqrt(n)) + 1):\n        if n % k == 0:\n            if k == n // k:\n                l += 1\n            else:\n                l += 2\n    print(l)", "from math import sqrt\nfor t in range(int(input())):\n    x = int(input())\n    count = 0\n    n = x - 1\n    j = 2\n    if x == 2:\n        print(1)\n    else:\n        while j <= sqrt(n):\n            if n % j == 0:\n                if j * j == n:\n                    count += 1\n                else:\n                    count += 2\n            j += 1\n        print(count + 2)", "import math\nt = int(input())\nwhile t:\n    t = t - 1\n    k = int(input())\n    nk = k - 1\n    divisorList = []\n    for i in range(1, int(math.sqrt(nk) + 1)):\n        if nk % i == 0:\n            divisorList.append(i)\n            divisorList.append(nk // i)\n    divisorList.append(k - 1)\n    divisorSet = set(divisorList)\n    print(len(divisorSet))", "import math\n\ndef mgc(x):\n    ans = 0\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            ans += 1\n            if i * i != x:\n                ans += 1\n        i += 1\n    return ans\nfor _ in range(int(input())):\n    x = int(input())\n    print(mgc(x - 1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    te = n - 1\n    c = 0\n    if te == 1:\n        c = 1\n    else:\n        x = int(pow(te, 0.5)) + 1\n        for i in range(1, x):\n            if te % i == 0:\n                c += 1\n                if i != te // i:\n                    c += 1\n    print(c)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    x = 0\n    for i in range(1, int(math.sqrt(n - 1)) + 1):\n        if (n - 1) % i == 0:\n            if (n - 1) / i == i:\n                x += 1\n            else:\n                x += 2\n    print(x)", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    count = 0\n    if n - 1 == 1:\n        count += 1\n    elif n - 1 == 0:\n        pass\n    else:\n        for i in range(1, int(math.sqrt(n)) + 1):\n            p = (n - 1) / i\n            if p == int(p):\n                if i == p:\n                    count += 1\n                else:\n                    count += 2\n    print(count)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    x = 0\n    for i in range(1, int(math.sqrt(n - 1)) + 1):\n        if (n - 1) % i == 0:\n            if (n - 1) / i == i:\n                x += 1\n            else:\n                x += 2\n    print(x)", "from math import sqrt\n\ndef factors(n):\n    i = 1\n    l = set()\n    while i <= sqrt(n):\n        if n % i == 0:\n            l.add(i)\n            l.add(n // i)\n        i += 1\n    return l\nfor _ in range(int(input())):\n    n = int(input())\n    l = factors(n - 1)\n    print(len(l))", "from math import sqrt\n\ndef factors(n):\n    i = 1\n    l = set()\n    while i <= sqrt(n):\n        if n % i == 0:\n            l.add(i)\n            l.add(n // i)\n        i += 1\n    return l\nfor _ in range(int(input())):\n    n = int(input())\n    l = factors(n - 1)\n    print(len(l))", "test = int(input())\nfor a in range(test):\n    n = int(input())\n    n = n - 1\n    i = 1\n    ans = 0\n    while i * i <= n:\n        if n % i == 0:\n            ans = ans + 1\n            if i * i != n:\n                ans = ans + 1\n        i = i + 1\n    print(ans)", "import math, os, io, heapq\nfrom sys import stdin, stdout\nfrom collections import Counter, deque, defaultdict\nfrom itertools import product\nimport bisect\n\ndef getList(method=int):\n    return list(map(method, input().split()))\n\ndef getInt():\n    return int(input())\n\ndef solve():\n    n = getInt() - 1\n    (fac, i) = (0, 1)\n    while i * i <= n:\n        if n % i == 0:\n            fac += 1 if n // i == i else 2\n        i += 1\n    return fac\nfor _ in range(getInt()):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    i = 1\n    n -= 1\n    while i * i < n:\n        if n % i == 0:\n            ans += 2\n        i += 1\n    if i * i == n:\n        ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    n -= 1\n    c = 0\n    for k in range(1, int(n ** 0.5) + 1):\n        if n % k == 0:\n            if n / k == k:\n                c += 1\n            else:\n                c += 2\n    print(c)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    cnt = 0\n    k = n - 1\n    x = math.sqrt(k)\n    j = 1\n    while j * j <= k:\n        if k % j == 0:\n            cnt += 1\n        j += 1\n    if x == k // x:\n        print(2 * cnt - 1)\n    else:\n        print(2 * cnt)", "for _ in range(int(input())):\n    n = int(input())\n    count = 0\n    k = 1\n    n -= 1\n    while k * k <= n:\n        if n % k == 0:\n            count += 1\n            if k * k != n:\n                count += 1\n        k += 1\n    print(count)", "from sys import stdin, stdout, maxsize\nfrom math import sqrt, log, factorial as ft, gcd, ceil, floor\nfrom collections import defaultdict\nii = lambda : int(input())\ndi = lambda : defaultdict(lambda : 0)\ndl = lambda : defaultdict(lambda : list())\nli = lambda : list(map(int, stdin.readline().strip().split()))\nmi = lambda : map(int, stdin.readline().strip().split())\nsi = lambda : stdin.readline().strip()\nfor _ in range(ii()):\n    n = ii()\n    d = di()\n    n -= 1\n    d[1] = 0\n    while n % 2 == 0:\n        n //= 2\n        d[2] += 1\n    for i in range(3, int(sqrt(n)) + 1, 2):\n        while n % i == 0:\n            n //= i\n            d[i] += 1\n        if n == 1:\n            break\n    if n > 1:\n        d[n] += 1\n    ans = 1\n    for i in d:\n        ans *= d[i] + 1\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    cnt = 2\n    if n == 2:\n        print(1)\n    else:\n        for j in range(2, math.floor(math.sqrt(n - 1)) + 1):\n            if (n - 1) % j == 0:\n                if j * j == n - 1:\n                    cnt += 1\n                else:\n                    cnt += 2\n            else:\n                continue\n        print(cnt)", "t = int(input())\nfor _ in range(t):\n    n = int(input()) - 1\n    cnt = 1\n    c = 1\n    while n % 2 == 0:\n        c += 1\n        n = n // 2\n    cnt *= c\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n == 1:\n            break\n        c = 1\n        while n % i == 0:\n            c += 1\n            n = n // i\n        cnt *= c\n    if n > 2:\n        cnt *= 2\n    print(cnt)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    x -= 1\n    count = 0\n    j = 1\n    while j * j <= x:\n        if x % j == 0:\n            count += 1\n            if j * j != x:\n                count += 1\n        j += 1\n    print(count)", "import sys\nfrom collections import deque\n\ndef g(l, n, f):\n    a = 0\n    x = n - 1\n    while a <= x:\n        m = a + (x - a) // 2\n        if l[m] == f:\n            return m\n        elif l[m] > f:\n            x = m - 1\n        else:\n            a = m + 1\n    return None\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    c = 0\n    p = int((n - 1) ** (1 / 2))\n    if p ** 2 == n - 1:\n        c = c - 1\n    for i in range(1, int((n - 1) ** 0.5) + 1):\n        if (n - 1) % i == 0:\n            c = c + 2\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    n = n - 1\n    for j in range(1, int(n ** 0.5) + 1):\n        if j * j == n:\n            c = c + 1\n        elif n % j == 0:\n            c = c + 2\n        else:\n            pass\n    print(c)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input()) - 1\n    cnt = 0\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            if n / i == i:\n                cnt = cnt + 1\n            else:\n                cnt = cnt + 2\n    print(cnt)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    n -= 1\n    (i, count) = (1, 0)\n    while i * i <= n:\n        if n % i == 0:\n            count += 1\n            if i * i != n:\n                count += 1\n        i += 1\n    print(count)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    n -= 1\n    ans = 0\n    for i in range(1, int(math.pow(n, 0.5)) + 1):\n        if n % i == 0:\n            if n // i == i:\n                ans += 1\n            else:\n                ans += 2\n    print(ans)"]