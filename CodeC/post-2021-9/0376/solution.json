["debug = False\n\ndef debug_msg(*args, **kwargs):\n    if debug:\n        print(*args, **kwargs)\nT = int(input())\nfor temp in range(T):\n    (N, D) = map(int, input().split())\n    new_N = N\n    current_digit = 1\n    debug_msg(f'N={N}, D={D}')\n    while new_N >= current_digit:\n        debug_msg(f'current_digit={current_digit}')\n        digit = new_N // current_digit % 10\n        if digit == D:\n            if current_digit == 1:\n                new_N += 1\n                current_digit *= 10\n            else:\n                new_N = (new_N // current_digit + 1) * current_digit\n                current_digit = 1\n        else:\n            current_digit *= 10\n        debug_msg(f'new_N={new_N}')\n    print(new_N - N)", "debug = False\n\ndef debug_msg(*args, **kwargs):\n    if debug:\n        print(*args, **kwargs)\nT = int(input())\nfor temp in range(T):\n    (N, D) = map(int, input().split())\n    new_N = N\n    current_digit = 1\n    debug_msg(f'N={N}, D={D}')\n    while new_N >= current_digit:\n        debug_msg(f'current_digit={current_digit}')\n        digit = new_N // current_digit % 10\n        if digit == D:\n            if current_digit == 1:\n                new_N += 1\n                current_digit *= 10\n            else:\n                new_N = (new_N // current_digit + 1) * current_digit\n                current_digit = 1\n        else:\n            current_digit *= 10\n        debug_msg(f'new_N={new_N}')\n    print(new_N - N)", "for i in range(int(input())):\n    (n, d) = map(int, input().split())\n    num = n\n    pos = 0\n    ans = 0\n    while num > 0:\n        dig = num % 10\n        num = num // 10\n        pos += 1\n        if dig == d:\n            num *= 10 ** pos\n            num += (d + 1) * pow(10, pos - 1)\n            ans = num - n\n            pos = 0\n    print(ans)", "def get_dgts(num):\n    dgts = []\n    while num:\n        dgts.append(num % 10)\n        num //= 10\n    return dgts[::-1]\n\ndef has_dgts(num, dgt):\n    return dgt in get_dgts(num)\n\ndef nextnum(num, digit):\n    dgts = get_dgts(num)\n    lent = len(dgts)\n    for i in range(lent):\n        if dgts[i] == digit:\n            num += 10 ** (lent - i - 1)\n            num -= num % 10 ** (lent - i - 1)\n            if has_dgts(num, digit):\n                return nextnum(num, digit)\n            break\n    return num\nfor i in range(int(input())):\n    (num, digit) = list(map(int, input().split()))\n    print(nextnum(num, digit) - num)", "def get_dgts(num):\n    dgts = []\n    while num:\n        dgts.append(num % 10)\n        num //= 10\n    return dgts[::-1]\n\ndef has_dgts(num, dgt):\n    return dgt in get_dgts(num)\n\ndef nextnum(num, digit):\n    dgts = get_dgts(num)\n    lent = len(dgts)\n    for i in range(lent):\n        if dgts[i] == digit:\n            num += 10 ** (lent - i - 1)\n            num -= num % 10 ** (lent - i - 1)\n            if has_dgts(num, digit):\n                return nextnum(num, digit)\n            break\n    return num\nfor i in range(int(input())):\n    (num, digit) = list(map(int, input().split()))\n    print(nextnum(num, digit) - num)", "def counting(idx, k, num, s, count):\n    for j in range(idx + 1, k):\n        count = count * 10 + (num - int(s[j]))\n    return count\n\ndef nine(a):\n    i = a.find('9')\n    if i == 0:\n        return str(pow(10, len(a)))\n    else:\n        return a[:i - 1] + str(int(a[i - 1]) + 1) + '0' * len(a[i:len(a)])\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    s = str(n)\n    count = 0\n    if n == d:\n        print('1')\n    else:\n        idx = s.find(str(d))\n        if idx == -1:\n            print('0')\n        else:\n            k = len(s)\n            if d == 0:\n                count = counting(idx, k, 10, s, 0)\n                print(count + 1)\n            elif d != 9:\n                count = counting(idx, k, 9, s, 0)\n                print(count + 1)\n            else:\n                t = False\n                if '9' in s:\n                    t = True\n                dup = s[:]\n                while t == True:\n                    dup = nine(dup)\n                    if '9' not in dup:\n                        t = False\n                print(int(dup) - n)", "def counting(idx, k, num, s, count):\n    for j in range(idx + 1, k):\n        count = count * 10 + (num - int(s[j]))\n    return count\n\ndef nine(a):\n    i = a.find('9')\n    if i == 0:\n        return str(pow(10, len(a)))\n    else:\n        return a[:i - 1] + str(int(a[i - 1]) + 1) + '0' * len(a[i:len(a)])\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    s = str(n)\n    count = 0\n    if n == d:\n        print('1')\n    else:\n        idx = s.find(str(d))\n        if idx == -1:\n            print('0')\n        else:\n            k = len(s)\n            if d == 0:\n                count = counting(idx, k, 10, s, 0)\n                print(count + 1)\n            elif d != 9:\n                count = counting(idx, k, 9, s, 0)\n                print(count + 1)\n            else:\n                t = False\n                if '9' in s:\n                    t = True\n                dup = s[:]\n                while t == True:\n                    dup = nine(dup)\n                    if '9' not in dup:\n                        t = False\n                print(int(dup) - n)", "def snek(n, d, ans):\n    if str(d) == str(n):\n        return 1\n    elif str(d) not in str(n):\n        return ans\n    else:\n        p = str(n)[::-1].index(str(d))\n        r = n % 10 ** p\n        ans += 10 ** p - r\n        n += 10 ** p - r\n        return snek(n, d, ans)\nt = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    ans = 0\n    print(snek(n, d, ans))", "def counting(idx, k, num, s, count):\n    for j in range(idx + 1, k):\n        count = count * 10 + (num - int(s[j]))\n    return count\n\ndef nine(a):\n    i = a.find('9')\n    if i == 0:\n        return str(pow(10, len(a)))\n    else:\n        return a[:i - 1] + str(int(a[i - 1]) + 1) + '0' * len(a[i:len(a)])\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    s = str(n)\n    count = 0\n    if n == d:\n        print('1')\n    else:\n        idx = s.find(str(d))\n        if idx == -1:\n            print('0')\n        else:\n            k = len(s)\n            if d == 0:\n                count = counting(idx, k, 10, s, 0)\n                print(count + 1)\n            elif d != 9:\n                count = counting(idx, k, 9, s, 0)\n                print(count + 1)\n            else:\n                t = False\n                if '9' in s:\n                    t = True\n                dup = s[:]\n                while t == True:\n                    dup = nine(dup)\n                    if '9' not in dup:\n                        t = False\n                print(int(dup) - n)", "def counting(idx, k, num, s, count):\n    for j in range(idx + 1, k):\n        count = count * 10 + (num - int(s[j]))\n    return count\n\ndef nine(a):\n    i = a.find('9')\n    if i == 0:\n        return str(pow(10, len(a)))\n    else:\n        return a[:i - 1] + str(int(a[i - 1]) + 1) + '0' * len(a[i:len(a)])\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    s = str(n)\n    count = 0\n    if n == d:\n        print('1')\n    else:\n        idx = s.find(str(d))\n        if idx == -1:\n            print('0')\n        else:\n            k = len(s)\n            if d == 0:\n                count = counting(idx, k, 10, s, 0)\n                print(count + 1)\n            elif d != 9:\n                count = counting(idx, k, 9, s, 0)\n                print(count + 1)\n            else:\n                t = False\n                if '9' in s:\n                    t = True\n                dup = s[:]\n                while t == True:\n                    dup = nine(dup)\n                    if '9' not in dup:\n                        t = False\n                print(int(dup) - n)", "t = int(input())\n\ndef digit_removal(n, d, ans):\n    if str(d) == str(n):\n        return 1\n    elif str(d) not in str(n):\n        return ans\n    else:\n        pos = str(n)[::-1].index(str(d))\n        rem = n % 10 ** pos\n        ans += 10 ** pos - rem\n        n += 10 ** pos - rem\n        return digit_removal(n, d, ans)\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    ans = 0\n    print(digit_removal(n, d, ans))", "t = int(input())\n\ndef digit_removal(n, d, ans):\n    if str(d) == str(n):\n        return 1\n    elif str(d) not in str(n):\n        return ans\n    else:\n        pos = str(n)[::-1].index(str(d))\n        rem = n % 10 ** pos\n        ans += 10 ** pos - rem\n        n += 10 ** pos - rem\n        return digit_removal(n, d, ans)\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    ans = 0\n    print(digit_removal(n, d, ans))", "t = int(input())\n\ndef digit_removal(n, d, ans):\n    if str(d) == str(n):\n        return 1\n    elif str(d) not in str(n):\n        return ans\n    else:\n        pos = str(n)[::-1].index(str(d))\n        rem = n % 10 ** pos\n        ans += 10 ** pos - rem\n        n += 10 ** pos - rem\n        return digit_removal(n, d, ans)\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    ans = 0\n    print(digit_removal(n, d, ans))", "t = int(input())\n\ndef digit_removal(n, d, ans):\n    if str(d) == str(n):\n        return 1\n    elif str(d) not in str(n):\n        return ans\n    else:\n        pos = str(n)[::-1].index(str(d))\n        rem = n % 10 ** pos\n        ans += 10 ** pos - rem\n        n += 10 ** pos - rem\n        return digit_removal(n, d, ans)\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    ans = 0\n    print(digit_removal(n, d, ans))", "t = int(input())\n\ndef digit_removal(n, d, ans):\n    if str(d) == str(n):\n        return 1\n    elif str(d) not in str(n):\n        return ans\n    else:\n        pos = str(n)[::-1].index(str(d))\n        rem = n % 10 ** pos\n        ans += 10 ** pos - rem\n        n += 10 ** pos - rem\n        return digit_removal(n, d, ans)\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    ans = 0\n    print(digit_removal(n, d, ans))", "t = int(input())\n\ndef digit_removal(n, d, ans):\n    if str(d) == str(n):\n        return 1\n    elif str(d) not in str(n):\n        return ans\n    else:\n        pos = str(n)[::-1].index(str(d))\n        rem = n % 10 ** pos\n        ans += 10 ** pos - rem\n        n += 10 ** pos - rem\n        return digit_removal(n, d, ans)\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    ans = 0\n    print(digit_removal(n, d, ans))", "t = int(input())\n\ndef digit_removal(n, d, ans):\n    if str(d) == str(n):\n        return 1\n    elif str(d) not in str(n):\n        return ans\n    else:\n        pos = str(n)[::-1].index(str(d))\n        rem = n % 10 ** pos\n        ans += 10 ** pos - rem\n        n += 10 ** pos - rem\n        return digit_removal(n, d, ans)\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    ans = 0\n    print(digit_removal(n, d, ans))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\n\ndef digit_removal(n, d, ans):\n    if str(d) == str(n):\n        return 1\n    elif str(d) not in str(n):\n        return ans\n    else:\n        pos = str(n)[::-1].index(str(d))\n        rem = n % 10 ** pos\n        ans += 10 ** pos - rem\n        n += 10 ** pos - rem\n        return digit_removal(n, d, ans)\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    ans = 0\n    print(digit_removal(n, d, ans))", "t = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    m = n\n    (count, ans) = (0, 0)\n    while m > 0:\n        a = m % 10\n        m = m // 10\n        count += 1\n        if a == d:\n            m = m * 10 ** count\n            m += (d + 1) * 10 ** (count - 1)\n            ans = m - n\n            count = 0\n    print(ans)", "def fun(n, d):\n    t = n\n    s = t\n    pos = 0\n    count = 0\n    while s > 0:\n        r = s % 10\n        count += 1\n        if r == d:\n            pos = count\n            break\n        s = s // 10\n    if pos > 0:\n        t = n // 10 ** pos * 10 ** pos + (r + 1) * 10 ** (pos - 1)\n        return fun(t, d)\n    else:\n        return t\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    s = fun(n, d)\n    print(s - n)", "t = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    q = n\n    ans2 = 0\n    a = str(n)\n    if str(d) not in a:\n        print('0')\n    else:\n        count = 0\n        while n != 0:\n            rem = n % 10\n            n = n // 10\n            count += 1\n            if rem == d:\n                n = n * 10 ** count + (d + 1) * 10 ** (count - 1)\n                ans2 = n - q\n                count = 0\n        print(int(ans2))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, d) = [int(x) for x in input().split(' ')]\n    New = n\n    ans = 0\n    c = 0\n    while New > 0:\n        rem = New % 10\n        New = New // 10\n        c = c + 1\n        if rem == d:\n            New = New * math.pow(10, c) + (rem + 1) * math.pow(10, c - 1)\n            ans = New - n\n            c = 0\n    print(int(ans))", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "def check(l, d):\n    if d in l:\n        ind = l.index(d)\n        if ind == 0:\n            l[ind] = str(int(l[ind]) + 1)\n        elif int(l[ind]) + 1 > 9:\n            l[ind] = str((int(l[ind]) + 1) % 10)\n            l[ind - 1] = str(int(l[ind - 1]) + 1)\n        else:\n            l[ind] = str(int(l[ind]) + 1)\n        if len(l[ind + 1:]) > 0:\n            for i in range(len(l[ind + 1:])):\n                l[ind + 1 + i] = '0'\n        return check(l, d)\n    else:\n        num = int(('{}' * len(l)).format(*l))\n        return num\nfor _ in range(int(input())):\n    (n, d) = input().split()\n    l = list(n)\n    c = check(l, d)\n    mini = c - int(n)\n    print(mini)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, d) = [int(x) for x in input().split(' ')]\n    New = n\n    ans = 0\n    c = 0\n    while New > 0:\n        rem = New % 10\n        New = New // 10\n        c = c + 1\n        if rem == d:\n            New = New * math.pow(10, c) + (rem + 1) * math.pow(10, c - 1)\n            ans = New - n\n            c = 0\n    print(int(ans))", "for i in range(int(input())):\n    (n, d) = map(int, input().split())\n    num = n\n    pos = 0\n    ans = 0\n    while num > 0:\n        dig = num % 10\n        num = num // 10\n        pos += 1\n        if dig == d:\n            num *= 10 ** pos\n            num += (d + 1) * pow(10, pos - 1)\n            ans = num - n\n            pos = 0\n    print(ans)", "for i in range(int(input())):\n    (n, d) = map(int, input().split())\n    num = n\n    pos = 0\n    ans = 0\n    while num > 0:\n        dig = num % 10\n        num = num // 10\n        pos += 1\n        if dig == d:\n            num *= 10 ** pos\n            num += (d + 1) * 10 ** (pos - 1)\n            ans = num - n\n            pos = 0\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "import re\n\ndef test(n, d):\n    if n[0] == '0':\n        n = re.sub('0+(.+)', '\\\\1', n)\n    new_n = ''\n    if len(n) == 1:\n        if n == d:\n            new_n = str(int(n) + 1)\n        else:\n            new_n = n\n    elif d == '9':\n        idx = n.find('9')\n        if idx > 0:\n            new_n = n[:idx - 1] + str(int(n[idx - 1]) + 1) + '0' * (len(n) - idx)\n        if idx == 0:\n            new_n = '1' + '0' * len(n)\n    else:\n        idx = n.find(d)\n        r = '0'\n        if d == '0':\n            r = '1'\n        if idx >= 0:\n            new_n = n[:idx] + str(int(n[idx]) + 1) + r * (len(n) - idx - 1)\n    if new_n == '':\n        return 0\n    elif d in new_n:\n        return int(new_n) - int(n) + test(new_n, d)\n    else:\n        return int(new_n) - int(n)\nfor i in range(int(input())):\n    (n, d) = input().split()\n    print(test(n, d))", "for i in range(int(input())):\n    (n, d) = map(int, input().split())\n    num = n\n    pos = 0\n    ans = 0\n    while num > 0:\n        dig = num % 10\n        num = num // 10\n        pos += 1\n        if dig == d:\n            num *= 10 ** pos\n            num += (d + 1) * 10 ** (pos - 1)\n            ans = num - n\n            pos = 0\n    print(ans)", "a = int(input())\nfor i in range(a):\n    (b, c) = map(int, input().split())\n    f = 0\n    e = 0\n    g = b\n    u = 0\n    while b != 0:\n        d = b % 10\n        b = b // 10\n        f += 1\n        if d == c:\n            b = b * pow(10, f) + (d + 1) * pow(10, f - 1)\n            u = b - g\n            f = 0\n    print(u)", "t = int(input())\nfor i in range(t):\n    (n, d) = list(map(int, input().split()))\n    num = n\n    pos = 0\n    add = 0\n    while num > 0:\n        digit = num % 10\n        num = num // 10\n        pos += 1\n        if digit == d:\n            num = num * pow(10, pos)\n            num += (digit + 1) * pow(10, pos - 1)\n            add = num - n\n            pos = 0\n    print(add)", "import sys\nimport math\nfor i in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    pos = 0\n    add = 0\n    num = x\n    while num > 0:\n        digit = num % 10\n        num = num // 10\n        pos += 1\n        if digit == y:\n            num = num * int(math.pow(10, pos))\n            num += (digit + 1) * int(math.pow(10, pos - 1))\n            add = num - x\n            pos = 0\n    print(add)", "import sys\nimport math\nfor i in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    pos = 0\n    add = 0\n    num = x\n    while num > 0:\n        digit = num % 10\n        num = num // 10\n        pos += 1\n        if digit == y:\n            num = num * int(math.pow(10, pos))\n            num += (digit + 1) * int(math.pow(10, pos - 1))\n            add = num - x\n            pos = 0\n    sys.stdout.write(str(add) + '\\n')", "import sys\nimport math\nfor i in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    pos = 0\n    add = 0\n    num = x\n    while num > 0:\n        digit = num % 10\n        num = num // 10\n        pos += 1\n        if digit == y:\n            num = num * int(math.pow(10, pos))\n            num += (digit + 1) * int(math.pow(10, pos - 1))\n            add = num - x\n            pos = 0\n    print(add)", "def getTheFill(n, x, start):\n    temp = n\n    track8s = False\n    if x == 9:\n        track8s = True\n        paddingFor8 = 0\n    for y in reversed(range(start)):\n        power = pow(10, y)\n        num = temp // power\n        if num == x:\n            return ((paddingFor8 if track8s else 0) + power - temp % power, y)\n        else:\n            temp = temp - num * power\n        if track8s:\n            if num == 8:\n                paddingFor8 += power\n            else:\n                paddingFor8 = 0\n    return (None, None)\n\ndef coverTheZeros(i):\n    fill = 0\n    for x in range(i):\n        fill += pow(10, x)\n    return fill\n\ndef test(ipt):\n    a = ipt.split()\n    n = a[0]\n    n = n.lstrip('0')\n    if n == '':\n        n = '0'\n    l = len(n)\n    n = int(n)\n    x = int(a[1])\n    (fill, i) = getTheFill(n, x, l)\n    if i != None:\n        if x == 0:\n            fill += coverTheZeros(i)\n            return fill\n        else:\n            return fill\n    else:\n        return 0\nt = int(input())\nfor _ in range(t):\n    print(test(input()))", "T = int(input())\nfor i in range(0, T):\n    (N, D) = map(int, input().split())\n    n = N\n    pos = 0\n    add = 0\n    while n > 0:\n        d = n % 10\n        n //= 10\n        pos += 1\n        if d == D:\n            n = n * pow(10, pos)\n            n += (d + 1) * pow(10, pos - 1)\n            add = n - N\n            pos = 0\n    print(add)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    res = 0\n    num = n\n    digit = 0\n    count = 0\n    while num > 0:\n        digit = num % 10\n        num //= 10\n        count += 1\n        if digit == d:\n            num = num * pow(10, count, mod) + (digit + 1) * pow(10, count - 1, mod)\n            res = num - n\n            count = 0\n    print(res)", "mod = 10 ** 9 + 7\n\ndef main():\n    (n, d) = map(int, input().split())\n    res = 0\n    num = n\n    digit = 0\n    count = 0\n    while num > 0:\n        digit = num % 10\n        num //= 10\n        count += 1\n        if digit == d:\n            num = num * pow(10, count, mod) + (digit + 1) * pow(10, count - 1, mod)\n            res = num - n\n            count = 0\n    print(res)\nfor _ in range(int(input())):\n    main()", "tests = int(input())\nfor t0 in range(tests):\n    [n, d] = [int(i) for i in input().split()]\n    ns = str(n)\n    ds = str(d)\n    if ds not in ns:\n        print(0)\n    else:\n        l = len(ns)\n        if d != 0 and d != 9:\n            i = ns.index(ds)\n            if l - i >= 1:\n                ans = ns[:i] + str(int(ns[i]) + 1) + '0' * (l - i - 1)\n            else:\n                ans = ns[:i] + str(int(ns[i]) + 1)\n        elif d == 0:\n            i = ns.index(ds)\n            if l - i >= 1:\n                ans = ns[:i] + str(int(ns[i]) + 1) + '1' * (l - i - 1)\n            else:\n                ans = ns[:i] + str(int(ns[i]) + 1)\n        elif d == 9:\n            i = ns.index('9')\n            if i == 0:\n                ans = '10' + '0' * (l - 1)\n            elif ns[i - 1] != '8':\n                ans = ns[:i - 1] + str(int(ns[i - 1]) + 1) + '0' * (l - i)\n            else:\n                j = i - 1\n                while j >= 0:\n                    if ns[j] != '8':\n                        break\n                    j -= 1\n                j += 1\n                if j == 0:\n                    ans = '1' + '0' * l\n                else:\n                    ans = ns[:j - 1] + str(int(ns[j - 1]) + 1) + '0' * (l - j)\n        print(int(ans) - n)", "tests = int(input())\nfor t0 in range(tests):\n    [n, d] = [int(i) for i in input().split()]\n    ns = str(n)\n    ds = str(d)\n    if ds not in ns:\n        print(0)\n    else:\n        l = len(ns)\n        if d != 0 and d != 9:\n            i = ns.index(ds)\n            if l - i >= 1:\n                ans = ns[:i] + str(int(ns[i]) + 1) + '0' * (l - i - 1)\n            else:\n                ans = ns[:i] + str(int(ns[i]) + 1)\n        elif d == 0:\n            i = ns.index(ds)\n            if l - i >= 1:\n                ans = ns[:i] + str(int(ns[i]) + 1) + '1' * (l - i - 1)\n            else:\n                ans = ns[:i] + str(int(ns[i]) + 1)\n        elif d == 9:\n            i = ns.index('9')\n            if i == 0:\n                ans = '10' + '0' * (l - 1)\n            elif ns[i - 1] != '8':\n                ans = ns[:i - 1] + str(int(ns[i - 1]) + 1) + '0' * (l - i)\n            else:\n                j = i - 1\n                while j >= 0:\n                    if ns[j] != '8':\n                        break\n                    j -= 1\n                j += 1\n                if j == 0:\n                    ans = '1' + '0' * l\n                else:\n                    ans = ns[:j - 1] + str(int(ns[j - 1]) + 1) + '0' * (l - j)\n        print(int(ans) - n)", "for _ in range(0, int(input())):\n    [n, d] = input().split(' ')\n    nC = n\n    while n.count(d) > 0:\n        firstIndex = n.index(d)\n        firstHalf = n[0:firstIndex + 1]\n        lastHalf = len(n) - firstIndex - 1\n        if lastHalf < 0:\n            lastHalf = 0\n        firstHalf = str(int(firstHalf) + 1)\n        if int(d) > 0:\n            lastHalf = '0' * lastHalf\n        else:\n            lastHalf = '1' * lastHalf\n        n = firstHalf + lastHalf\n    print(int(n) - int(nC))", "T = int(input())\nfor _ in range(T):\n    (n, d) = input().split(' ')\n    res = ''\n    con = 0\n    f = n[::-1].rfind(d)\n    for (idx, c) in enumerate(n[::-1]):\n        if idx == f:\n            _t = int(c) + 1\n        elif idx > f:\n            _t = int(c)\n        elif d == '0':\n            if c == '0':\n                _t = 1\n            else:\n                _t = 11\n        else:\n            _t = 10\n        _res = _t - con - int(c)\n        if _res < 0:\n            if con + int(c) == int(d):\n                _res = 1\n            else:\n                _res = 0\n        elif _res == 10:\n            _res = 0\n        res += str(_res)\n        con = 1 if _res + int(c) + con >= 10 else 0\n    print(int(res[::-1]))", "def get_update_arr(n, d):\n    t = []\n    _t = False\n    for c in n:\n        if not _t:\n            if c == d:\n                t.append(int(c) + 1)\n                _t = True\n            else:\n                t.append(int(c))\n        elif d == '0':\n            if c == '0':\n                t.append(1)\n            else:\n                t.append(11)\n        else:\n            t.append(10)\n    return t\nT = int(input())\nfor _ in range(T):\n    (n, d) = input().split(' ')\n    t = get_update_arr(n, d)\n    res = ''\n    con = 0\n    for (c, _t) in zip(n[::-1], t[::-1]):\n        _res = _t - con - int(c)\n        if _res < 0:\n            if con + int(c) == int(d):\n                _res = 1\n            else:\n                _res = 0\n        elif _res == 10:\n            _res = 0\n        res += str(_res)\n        con = 1 if _res + int(c) + con >= 10 else 0\n    print(int(res[::-1]))", "for _ in range(int(input())):\n    (N, D) = list(map(int, input().split()))\n    pos = 0\n    add = 0\n    n = N\n    while n > 0:\n        rem = n % 10\n        n = n // 10\n        pos += 1\n        if rem == D:\n            n = n * 10 ** pos\n            n += (rem + 1) * 10 ** (pos - 1)\n            add = n - N\n            pos = 0\n    print(add)", "for i in range(int(input())):\n    (n, d) = list(map(int, input().split()))\n    num = n\n    pos = 0\n    add = 0\n    while num > 0:\n        dig = num % 10\n        num = num // 10\n        pos += 1\n        if dig == d:\n            num *= 10 ** pos\n            num += (dig + 1) * 10 ** (pos - 1)\n            add = num - n\n            pos = 0\n    print(add)", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    if str(d) not in str(n):\n        print('0')\n        continue\n    num = n\n    pos = 0\n    added_num = 0\n    while num > 0:\n        digit = num % 10\n        num = num // 10\n        pos += 1\n        if digit == d:\n            num = num * 10 ** pos\n            num = num + (digit + 1) * 10 ** (pos - 1)\n            added_num = num\n            pos = 0\n    print(abs(n - added_num))", "t = int(input())\nwhile t != 0:\n    (n, d) = map(int, input().split())\n    num = n\n    pos = 0\n    ans = 0\n    while num > 0:\n        dig = num % 10\n        num = num // 10\n        pos += 1\n        if dig == d:\n            num = num * pow(10, pos)\n            num += (d + 1) * pow(10, pos - 1)\n            ans = num - n\n            pos = 0\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t != 0:\n    (n, d) = map(int, input().split())\n    num = n\n    pos = 0\n    ans = 0\n    while num > 0:\n        dig = num % 10\n        num = num // 10\n        pos += 1\n        if dig == d:\n            num = num * pow(10, pos)\n            num += (d + 1) * pow(10, pos - 1)\n            ans = num - n\n            pos = 0\n    print(ans)\n    t -= 1", "import math\n\ndef giveMeResult(copyOfNum, digit):\n    (maxLen, digits, answer, lenOfNum) = (0, [], 0, 0)\n    while copyOfNum:\n        lenOfNum += 1\n        temp = copyOfNum % 10\n        if temp == digit:\n            maxLen = lenOfNum\n        digits.append(temp)\n        copyOfNum = copyOfNum // 10\n    digits.reverse()\n    if maxLen:\n        powerFactor = maxLen - 2\n        if digit == 0:\n            for i in range(maxLen - 1, -1, -1):\n                answer += pow(10, i)\n        else:\n            answer = pow(10, maxLen - 1)\n        for i in range(lenOfNum - maxLen + 1, lenOfNum):\n            answer -= digits[i] * pow(10, powerFactor)\n            powerFactor -= 1\n        return int(answer)\n    else:\n        return 0\nfor testCase in range(int(input())):\n    (number, digit) = map(int, input().split())\n    d = math.floor(math.log10(number) + 1)\n    testResult = giveMeResult(number, digit)\n    for i in range(d - 1):\n        testResult += giveMeResult(testResult + number, digit)\n    print(testResult)", "def checkrem(n, d):\n    c = 0\n    n1 = n\n    ans = 0\n    while n1 > 0:\n        r = n1 % 10\n        c += 1\n        n1 = int(n1 / 10)\n        if r == d:\n            n1 = n1 * 10 ** c + (r + 1) * 10 ** (c - 1)\n            ans = n1 - n\n            c = 0\n    return ans\nfor i in range(int(input())):\n    (n, d) = [int(x) for x in input().split()]\n    print(checkrem(n, d))", "t = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    num = n\n    pos = 0\n    add = 0\n    while num > 0:\n        di = num % 10\n        num = num // 10\n        pos += 1\n        if di == d:\n            num = num * pow(10, pos)\n            num = num + (di + 1) * pow(10, pos - 1)\n            add = num - n\n            pos = 0\n    print(add)", "def calculateMinDigits(N, D):\n    temp = N\n    count = 0\n    j = 0\n    while temp > 0:\n        remainder = temp % 10\n        temp = temp // 10\n        j = j + 1\n        if remainder == D:\n            temp = temp * pow(10, j) + (remainder + 1) * pow(10, j - 1)\n            count = temp - N\n            j = 0\n    return int(count)\nt = int(input())\nfor i in range(t):\n    (N, D) = map(int, input().strip().split())\n    minimumDigitRequired = calculateMinDigits(N, D)\n    print(minimumDigitRequired)", "for _ in range(int(input())):\n    (n, d) = list(map(str, input().split()))\n    a = [x for x in n]\n    if a.count(d) == 0:\n        print(0)\n    elif len(a) == 1 and a.count(d) == 1:\n        if len(a) == 1:\n            print(1)\n    elif d == '0':\n        l = []\n        b = a.index('0')\n        for i in range(b, len(a)):\n            a[i] = '1'\n        b = ''.join(a)\n        print(int(b) - int(n))\n    elif d == '9':\n        while True:\n            b = a.index('9')\n            if b == 0:\n                a.insert(0, '1')\n                for i in range(b + 1, len(a)):\n                    a[i] = '0'\n            else:\n                a[b - 1] = str(int(a[b - 1]) + 1)\n                for i in range(b, len(a)):\n                    a[i] = '0'\n            c = ''.join(a)\n            z = list(c.split())\n            if c.count(d) == 0:\n                print(int(c) - int(n))\n                break\n            else:\n                continue\n    else:\n        s = ''\n        b = a.index(d)\n        a[b] = str(int(a[b]) + 1)\n        s = n[:b] + a[b]\n        for i in range(len(a) - len(s)):\n            s += '0'\n        c = ''.join(s)\n        print(int(c) - int(n))", "from sys import stdin\ninp = stdin.readline\nT = int(inp())\nfor tx in range(T):\n    (N, D) = inp().split()\n    sp = N.split(D, 1)\n    if len(sp) == 1:\n        print(0)\n    else:\n        (hi, lo) = sp\n        base = len(lo)\n        add = 10 ** base - int('0' + lo)\n        if D == '0':\n            add += (10 ** base - 1) // 9\n        elif D == '9':\n            for c in reversed(hi):\n                if c != '8':\n                    break\n                base += 1\n                add += 10 ** base\n        print(add)", "try:\n    for i in range(int(input())):\n        (num, k) = [int(itm) for itm in input().split()]\n        n = num\n        (add, p) = (0, 0)\n        while n > 0:\n            dig = n % 10\n            n = n // 10\n            p += 1\n            if dig == k:\n                n = n * 10 ** p\n                n += (k + 1) * 10 ** (p - 1)\n                add = n - num\n                p = 0\n        print(add)\nexcept EOFError:\n    exit()", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    act_n = n\n    sn = str(n)\n    sd = str(d)\n    while sd in sn:\n        x = sn.index(sd)\n        m = 10 ** (len(sn) - 1 - x)\n        if x != len(sn) - 1:\n            val = sn[x + 1:]\n            val = int(val)\n            n += m - val\n            sn = str(n)\n        else:\n            n = n + m\n            sn = str(n)\n    print(int(n) - act_n)", "for i in range(int(input())):\n    (n, d) = map(int, input().split())\n    pos = 0\n    ans = 0\n    num = n\n    while num > 0:\n        dig = num % 10\n        num = num // 10\n        pos = pos + 1\n        if dig == d:\n            num = num * 10 ** pos\n            num += (dig + 1) * 10 ** (pos - 1)\n            ans = num - n\n            pos = 0\n    print(ans)", "def check9(i, l, n):\n    while i > -n and l[i] == '9':\n        i -= 1\n    return i\nt = int(input())\nwhile t:\n    t -= 1\n    (num, x) = map(int, input().split())\n    l = list(str(num))\n    s = 0\n    if str(x) not in l:\n        print(s)\n    else:\n        n = len(l)\n        for i in range(-1, -n - 1, -1):\n            if l[i] == str(x):\n                var = l[i]\n                if var != '9' and var != '0':\n                    minus = ''.join(map(str, l[i:]))\n                    rem = int(int(var) + 1) * pow(10, -i - 1) - int(minus)\n                    s += rem\n                    l = l[:i] + list(str(int(int(var) + 1) * pow(10, -i - 1)))\n                elif var == '0':\n                    minus = ''.join(map(str, l[i:]))\n                    if i == -1:\n                        s += 1\n                        rem = 0\n                        l = l[:i] + list('1')\n                    else:\n                        rem = int(str(1) * -i) - int(minus)\n                        l = l[:i] + list(str(1) * -i)\n                        s += rem\n                else:\n                    i = check9(i, l, n)\n                    try:\n                        minus = ''.join(map(str, l[i:]))\n                        rem = int(int(l[i]) + 1) * pow(10, -i - 1) - int(minus)\n                        s += rem\n                        l = l[:i] + list(str(int(int(l[i]) + 1) * pow(10, -i - 1)))\n                    except IndexError:\n                        rem = 10 * pow(10, -i - 1) - int(''.join(map(str, l[i:])))\n                        s += rem\n                        break\n        print(s)", "def check(a, d):\n    n = a\n    c = 0\n    ans = 0\n    while n:\n        r = n % 10\n        c += 1\n        n = n // 10\n        if r == d:\n            n = n * 10 ** c + (r + 1) * 10 ** (c - 1)\n            c = 0\n            ans = n - a\n    print(ans)\nn = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    check(a, b)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    s_ = str(a)\n    l = len(s_)\n    s = []\n    for i in range(l):\n        s.append(s_[i])\n    s1 = str(b)\n    index = -1\n    for i in range(l):\n        if s[i] == s1:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        if s[index] == '9':\n            x = index\n            while True:\n                if x - 1 >= 0:\n                    s[x - 1] = str(int(s[x - 1]) + 1)\n                    s[x] = '0'\n                    if s[x - 1] != '9':\n                        break\n                    x -= 1\n                else:\n                    s[0] = '10'\n                    break\n            for i in range(index + 1, l):\n                s[i] = '0'\n        elif s[index] == '0':\n            for i in range(index, l):\n                s[i] = '1'\n        else:\n            s[index] = str(int(s[index]) + 1)\n            for i in range(index + 1, l):\n                s[i] = '0'\n        r = ''\n        for i in s:\n            r += i\n        print(int(r) - a)", "def checkrem(n, d):\n    c = 0\n    n1 = n\n    ans = 0\n    while n1 > 0:\n        r = n1 % 10\n        c += 1\n        n1 = int(n1 / 10)\n        if r == d:\n            n1 = n1 * 10 ** c + (r + 1) * 10 ** (c - 1)\n            ans = n1 - n\n            c = 0\n    return ans\nfor i in range(int(input())):\n    (n, d) = [int(x) for x in input().split()]\n    print(checkrem(n, d))", "def digitr(N, D):\n    str1 = str(N)\n    str2 = str(D)\n    for i in range(len(str1) - 1, -1, -1):\n        if str1[i] == str2:\n            mul = 10 ** (len(str1) - i - 1)\n            add = mul - (N - N // mul * mul)\n            N += add\n            return digitr(N, D)\n    return N\nfor _ in range(int(input())):\n    (N, D) = map(int, input().split())\n    print(digitr(N, D) - N)", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    x = n\n    res = 0\n    c = 0\n    while x > 0:\n        r = x % 10\n        x = x // 10\n        c += 1\n        if r == d:\n            x = x * pow(10, c) + (r + 1) * pow(10, c - 1)\n            res = x - n\n            c = 0\n    print(res)", "def get9(x, y):\n    l = int(x)\n    N = len(x)\n    flag = '0'\n    for (i, e) in enumerate(x):\n        wkanda()\n        if e == '9':\n            f = N - i\n            a = str(int(flag) + 1)\n            next = int(a + f * '0')\n            wkanda()\n            if '9' in str(next):\n                wkanda()\n                return next + getV(str(next), '9') - l\n            return next - l\n        flag = flag + e\n\ndef get0(x, y):\n    l = int(x)\n    N = len(x)\n    flag = ''\n    wkanda()\n    for (i, e) in enumerate(x):\n        if e == '0':\n            f = N - i\n            return int(flag + f * '1') - l\n        flag = flag + e\n\ndef getV(x, y):\n    l = int(x)\n    N = len(x)\n    if y not in x:\n        return 0\n    wkanda()\n    if y == '9':\n        return get9(x, y)\n    wkanda()\n    if y == '0':\n        return get0(x, y)\n    else:\n        wkanda()\n        flag = ' '\n        for (i, e) in enumerate(x):\n            wkanda()\n            if e == y:\n                a = str(int(e) + 1)\n                b = N - i - 1\n                return int(flag + a + '0' * b) - l\n            flag = flag + e\n\ndef wkanda():\n    return\nT = int(input())\nwhile T:\n    (x, y) = input().strip().split()\n    print(getV(x, y))\n    T -= 1", "for t in range(int(input())):\n    (n, d) = map(int, input().split())\n    p = str(n)\n    q = str(d)\n    if q not in p:\n        print(0)\n    else:\n        a = 0\n        while q in p:\n            x = p.index(q)\n            y = p[x + 1:]\n            if len(y) > 0:\n                z = int(y)\n            else:\n                z = int(0)\n            k = 10 ** len(y) - z\n            a += k\n            n += k\n            p = str(n)\n        print(a)", "t = int(input())\nfor tt in range(t):\n    (n, d) = input().split()\n    a = n.find(d)\n    if a == -1:\n        print(0)\n        continue\n    if d != '9' and d != '0':\n        y = (int(d) + 1) * 10 ** (len(n) - 1 - a)\n        z = int(n[a:])\n        print(y - z)\n    elif d == '0':\n        print(int('1' * (len(n) - a)) - int(n[a:]))\n    elif a != 0 and n[a - 1] == '8':\n        while n[a - 1] == '8' and a - 1 >= 0:\n            a -= 1\n        y = 10 ** (len(n) - a)\n        z = int(n[a:])\n        print(y - z)\n    else:\n        y = (int(d) + 1) * 10 ** (len(n) - 1 - a)\n        z = int(n[a:])\n        print(y - z)", "def sn(s, d):\n    n = ''\n    f = 0\n    for i in s:\n        if i == d and f == 0:\n            n += i\n            n = str(int(n) + 1)\n            f = 1\n        elif f == 1:\n            n += '0'\n        if f == 0:\n            n += i\n    return n\nfor _ in range(int(input())):\n    (n, d) = input().split()\n    p = n\n    while d in n:\n        n = sn(n, d)\n    print(int(n) - int(p))", "def sn(s, d):\n    n = ''\n    f = 0\n    for i in s:\n        if i == d and f == 0:\n            n += i\n            n = str(int(n) + 1)\n            f = 1\n        elif f == 1:\n            n += '0'\n        if f == 0:\n            n += i\n    return n\nfor _ in range(int(input())):\n    (n, d) = input().split()\n    p = n\n    while d in n:\n        n = sn(n, d)\n    print(int(n) - int(p))", "def sn(s, d):\n    n = ''\n    f = 0\n    for i in s:\n        if i == d and f == 0:\n            n += i\n            n = str(int(n) + 1)\n            f = 1\n        elif f == 1:\n            n += '0'\n        if f == 0:\n            n += i\n    return n\nfor _ in range(int(input())):\n    (n, d) = input().split()\n    p = n\n    while d in n:\n        n = sn(n, d)\n    print(int(n) - int(p))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, d) = map(int, input().split())\n    N = n\n    (c, res) = (0, 0)\n    while N > 0:\n        rem = N % 10\n        N = N // 10\n        c += 1\n        if rem == d:\n            N = N * pow(10, c) + (rem + 1) * pow(10, c - 1)\n            res = N - n\n            c = 0\n    print(res)", "def sn(s, d):\n    n = ''\n    f = 0\n    for i in s:\n        if i == d and f == 0:\n            n += i\n            n = str(int(n) + 1)\n            f = 1\n        elif f == 1:\n            n += '0'\n        if f == 0:\n            n += i\n    return n\nfor _ in range(int(input())):\n    (n, d) = input().split()\n    p = n\n    while d in n:\n        n = sn(n, d)\n    print(int(n) - int(p))"]