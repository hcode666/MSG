["import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nsys.setrecursionlimit(100000000)\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\n\ndef func():\n    (n, m, x, y) = map(int, input().split())\n    d = abs(m - n)\n    path1 = x * (n - 1 + m - 1)\n    path2 = y * (min(n, m) - 1) + d * min(x, y)\n    if d % 2 and x >= y:\n        path2 += x - y\n    return min(path1, path2)\nt = inp()\nfor i in range(t):\n    print(func())", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nsys.setrecursionlimit(100000000)\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\n\ndef func():\n    (n, m, x, y) = map(int, input().split())\n    d = abs(m - n)\n    path1 = x * (n - 1 + m - 1)\n    path2 = y * (min(n, m) - 1) + d * min(x, y)\n    if d % 2 and x >= y:\n        path2 += x - y\n    return min(path1, path2)\nt = inp()\nfor i in range(t):\n    print(func())", "t = int(input())\nfor _ in range(t):\n    (n, m, x, y) = map(int, input().split())\n    (ma, mi) = (max(n, m), min(n, m))\n    if 2 * x < y:\n        cost = 2 * (mi - 1) * x + (ma - mi) * x\n    elif y < x:\n        cost = (mi - 1) * y\n        cost += (ma - mi) // 2 * 2 * y + (ma - mi) % 2 * x\n    else:\n        cost = (mi - 1) * y + (ma - mi) * x\n    print(cost)", "try:\n    for t in range(int(input())):\n        (N, M, X, Y) = map(int, input().split())\n        if Y > 2 * X or M == 1 or N == 1:\n            print((N + M - 2) * X)\n        elif Y < X:\n            if (max(M, N) - min(M, N)) % 2 == 0:\n                print((min(M, N) - 1) * Y + (max(M, N) - min(M, N)) * Y)\n            else:\n                print((min(M, N) - 1) * Y + (max(M, N) - min(M, N) - 1) * Y + X)\n        else:\n            print((min(M, N) - 1) * Y + (max(M, N) - min(M, N)) * X)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, m, x, y) = [int(x) for x in input().split()]\n    diff = abs(m - n)\n    case1 = (n + m - 2) * x\n    case2 = y * min(n - 1, m - 1) + diff * x\n    case3 = y * min(n - 1, m - 1) + diff // 2 * 2 * y + diff % 2 * x\n    print(min(case1, min(case2, case3)))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, m, x, y) = map(int, stdin.readline().split())\n    (n, m) = (n - 1, m - 1) if n < m else (m - 1, n - 1)\n    s = n + m\n    if n > 0 and x > y:\n        r = m * y if s % 2 == 0 else m * y + (x - y)\n    else:\n        r = s * x - n * max(0, 2 * x - y)\n    print(r)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, m, x, y) = map(int, stdin.readline().split())\n    (n, m) = (n - 1, m - 1) if n < m else (m - 1, n - 1)\n    d = m - n\n    case1 = x * (n + m)\n    case2 = y * min(n, m) + d * min(x, y)\n    if d % 2 == 1 and x >= y:\n        case2 += x - y\n    print(min(case1, case2))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, m, x, y) = map(int, stdin.readline().split())\n    (n, m) = (n - 1, m - 1) if n < m else (m - 1, n - 1)\n    s = n + m\n    if n > 0 and x > y:\n        r = m * y + (s % 2 and x - y)\n    else:\n        r = s * x - n * max(0, 2 * x - y)\n    print(r)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, m, x, y) = map(int, stdin.readline().split())\n    d = abs(m - n)\n    case1 = x * (n - 1 + m - 1)\n    case2 = y * (min(n, m) - 1) + d * min(x, y)\n    if d % 2 == 1 and x >= y:\n        case2 += x - y\n    print(min(case1, case2))", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    d = abs(m - n)\n    case1 = x * (n - 1 + m - 1)\n    case2 = y * (min(n, m) - 1) + d * min(x, y)\n    if d % 2 == 1 and x >= y:\n        case2 += x - y\n    print(min(case1, case2))", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    d = abs(m - n)\n    case1 = x * (n - 1 + m - 1)\n    case2 = y * (min(n, m) - 1) + d * min(x, y)\n    if d % 2 == 1 and x >= y:\n        case2 += x - y\n    print(min(case1, case2))", "def solveA():\n    for _ in range(int(input())):\n        print('YES' if input().count('1') > 3 else 'NO')\n\ndef solveB():\n    for _ in range(int(input())):\n        N = int(input())\n        if N == 1:\n            print('3')\n        elif N == 2:\n            print('21')\n        else:\n            print('11' + '0' * (N - 3) + '1')\n\ndef solveC():\n    from itertools import permutations\n    for _ in range(int(input())):\n        T = [int(x) for x in input().split()]\n        M = [int(x) for x in input().split()]\n        ans = 0\n        for i in range(21):\n            for j in range(21):\n                for k in range(21):\n                    if i * T[0] + j * T[1] + k * T[2] <= 240:\n                        temp = i * M[0] + j * M[1] + k * M[2]\n                        ans = max(ans, temp)\n        print(ans)\n\ndef solveD():\n    index = set()\n    for _ in range(int(input())):\n        (N, K) = [int(x) for x in input().split()]\n        S = input() + '0' * K\n        ans = 0\n        index.clear()\n        for i in range(K):\n            if S[i] == '1' and S[i + K] == '0':\n                ans += 1\n                index.add(i + K)\n        for i in range(K, N):\n            if S[i] == '1' and S[i - K] == '0' and (S[i + K] == '0') and (i - K not in index):\n                ans += 1\n                index.add(i + K)\n        return ans\n\ndef solveE():\n    ans = []\n    T = int(input())\n    for _ in range(T):\n        (N, M, X, Y) = [int(x) for x in input().split()]\n        (N, M) = (N - 1, M - 1)\n        if 0 in [N, M]:\n            ans.append(X * max(N, M))\n        elif 2 * X <= Y:\n            ans.append((N + M) * X)\n        elif abs(N - M) % 2:\n            ans.append(Y * min(N, M) + min(X, Y) * (abs(N - M) - 1) + X)\n        else:\n            ans.append(Y * min(N, M) + min(X, Y) * abs(N - M))\n    for i in range(T):\n        print(ans[i])\nsolveE()", "def solveA():\n    for _ in range(int(input())):\n        print('YES' if input().count('1') > 3 else 'NO')\n\ndef solveB():\n    for _ in range(int(input())):\n        N = int(input())\n        if N == 1:\n            print('3')\n        elif N == 2:\n            print('21')\n        else:\n            print('11' + '0' * (N - 3) + '1')\n\ndef solveC():\n    from itertools import permutations\n    for _ in range(int(input())):\n        T = [int(x) for x in input().split()]\n        M = [int(x) for x in input().split()]\n        ans = 0\n        for i in range(21):\n            for j in range(21):\n                for k in range(21):\n                    if i * T[0] + j * T[1] + k * T[2] <= 240:\n                        temp = i * M[0] + j * M[1] + k * M[2]\n                        ans = max(ans, temp)\n        print(ans)\n\ndef solveD():\n    index = set()\n    for _ in range(int(input())):\n        (N, K) = [int(x) for x in input().split()]\n        S = input() + '0' * K\n        ans = 0\n        index.clear()\n        for i in range(K):\n            if S[i] == '1' and S[i + K] == '0':\n                ans += 1\n                index.add(i + K)\n        for i in range(K, N):\n            if S[i] == '1' and S[i - K] == '0' and (S[i + K] == '0') and (i - K not in index):\n                ans += 1\n                index.add(i + K)\n        return ans\n\ndef solveE():\n    for _ in range(int(input())):\n        (N, M, X, Y) = [int(x) for x in input().split()]\n        (N, M) = (N - 1, M - 1)\n        if 0 in [N, M]:\n            print(X * max(N, M))\n        elif 2 * X <= Y:\n            print((N + M) * X)\n        elif abs(N - M) % 2:\n            print(Y * min(N, M) + min(X, Y) * (abs(N - M) - 1) + X)\n        else:\n            print(Y * min(N, M) + min(X, Y) * abs(N - M))\nsolveE()", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if y >= 2 * x:\n        print((n + m - 2) * x)\n    elif y > x and y < 2 * x:\n        print((min(n, m) - 1) * y + abs(n - m) * x)\n    elif y <= x and abs(n - m) % 2 == 0:\n        print((min(n, m) - 1) * y + abs(n - m) * y)\n    elif y <= x and abs(n - m) % 2 == 1:\n        print((min(n, m) - 1) * y + (abs(n - m) - 1) * y + x)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if x * 2 > y > x:\n        if m > n:\n            mi = n - 1\n            dif = m - n\n            print(mi * y + dif * x)\n        else:\n            mi = m - 1\n            dif = n - m\n            print(mi * y + dif * x)\n    elif y >= 2 * x:\n        print((n + m - 2) * x)\n    else:\n        dif = abs(m - n)\n        if dif % 2 == 0:\n            print(max(m - 1, n - 1) * y)\n        else:\n            print((max(m - 1, n - 1) - 1) * y + x)", "for i in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    d = 0\n    d = (n + m - 2) * x\n    l = min(n, m)\n    k = max(n, m)\n    d = min(d, (l - 1) * y + (k - l) * x)\n    if (m - n) % 2:\n        th = x\n    else:\n        th = 0\n    th += (l - 1) * y\n    th += (k - l - (k - l) % 2) * y\n    d = min(d, th)\n    print(d)", "import sys\n\ndef codeChef():\n    n = sys.stdin.readline()\n    for _ in range(int(n)):\n        (n, m, x, y) = map(int, sys.stdin.readline().strip().split())\n        print(get_ans(n, m, x, y))\n\ndef get_ans(n, m, x, y):\n    if y >= 2 * x:\n        return (m + n - 2) * x\n    elif x < y < 2 * x:\n        return (min(m, n) - 1) * y + abs(m - n) * x\n    elif x >= y and abs(m - n) % 2 == 0:\n        return (min(m, n) - 1) * y + abs(m - n) * y\n    return (min(m, n) - 1) * y + (abs(m - n) - 1) * y + x\ntry:\n    codeChef()\nexcept:\n    pass", "t = int(input())\nfor tt in range(t):\n    (n, m, x, y) = map(int, input().split())\n    diagonal = min(n, m) - 1\n    result = min(2 * diagonal * x, diagonal * y)\n    remain = max(n, m) - min(n, m)\n    if x <= y:\n        result += remain * x\n    elif remain % 2 == 0:\n        result += remain * y\n    else:\n        result += (remain - 1) * y + x\n    print(result)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if y >= 2 * x:\n        print((n + m - 2) * x)\n    elif 2 * x > y > x:\n        print((min(n, m) - 1) * y + abs(n - m) * x)\n    else:\n        print((min(n, m) - 1) * y + abs(n - m) * y) if abs(n - m) % 2 == 0 else print((min(n, m) - 1) * y + (abs(n - m) - 1) * y + x)", "for i in range(int(input())):\n    (N, M, X, Y) = map(int, input().split())\n    if M == 1:\n        print((N - 1) * X)\n    elif N == 1:\n        print((M - 1) * X)\n    else:\n        n = min(X, Y)\n        k = (M + N - 2) * X\n        j = min(N, M)\n        b = (j - 1) * Y + (max(N, M) - j) * X\n        l = (j - 1) * Y + (max(N, M) - j) * X\n        m = (j - 1) * Y + (max(N, M) - 1) * X\n        h = M + N - 2 * j\n        if h & 1:\n            h = (j - 1) * Y + (M + N - 2 * j - 1) * n + X\n        else:\n            h = (j - 1) * Y + (M - j + N - j) * n\n        print(min(k, l, b, m, h))", "for t in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    cost = 0\n    if n == m:\n        cost = min((n - 1) * y, 2 * (n - 1) * x)\n    else:\n        a = x * (n + m - 2)\n        b = y * (min(n, m) - 1) + abs(n - m) * x\n        c = y * (min(n, m) - 1) + abs(n - m) // 2 * 2 * y + abs(n - m) % 2 * x\n        cost = min(a, b, c)\n    print(cost)", "for t in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    cost = 0\n    if n == m:\n        cost = min((n - 1) * y, 2 * (n - 1) * x)\n    else:\n        a = x * (n + m - 2)\n        b = y * (min(n, m) - 1) + abs(n - m) * x\n        c = y * (min(n, m) - 1) + abs(n - m) // 2 * 2 * y + abs(n - m) % 2 * x\n        cost = min(a, b, c)\n    print(cost)", "import sys\nfor i in range(int(input())):\n    (n, m, x, y) = map(int, sys.stdin.readline().split())\n    if y > 2 * x:\n        ans = (n - 1) * x + (m - 1) * x\n    elif y < x:\n        if abs(m - n) % 2 == 0:\n            ans = (min(n, m) - 1 + abs(n - m)) * y\n        else:\n            ans = (min(n, m) - 1) * y + (abs(n - m) - 1) * y + x\n    else:\n        ans = (min(n, m) - 1) * y + abs(m - n) * x\n    sys.stdout.write(str(ans) + '\\n')", "for i in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if y > 2 * x:\n        ans = (n - 1) * x + (m - 1) * x\n    elif y < x:\n        if abs(m - n) % 2 == 0:\n            ans = (min(n, m) - 1 + abs(n - m)) * y\n        else:\n            ans = (min(n, m) - 1) * y + (abs(n - m) - 1) * y + x\n    else:\n        ans = (min(n, m) - 1) * y + abs(m - n) * x\n    print(ans)", "for i in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if y > 2 * x:\n        ans = (n - 1) * x + (m - 1) * x\n    elif y < x:\n        if abs(m - n) % 2 == 0:\n            ans = (min(n, m) - 1 + abs(n - m)) * y\n        else:\n            ans = (min(n, m) - 1) * y + (abs(n - m) - 1) * y + x\n    else:\n        ans = (min(n, m) - 1) * y + abs(m - n) * x\n    print(ans)", "import sys\nfor i in range(int(input())):\n    (n, m, x, y) = map(int, sys.stdin.readline().split())\n    if y > 2 * x:\n        ans = (n - 1) * x + (m - 1) * x\n    elif y < x:\n        if abs(m - n) % 2 == 0:\n            ans = (min(n, m) - 1 + abs(n - m)) * y\n        else:\n            ans = (min(n, m) - 1) * y + (abs(n - m) - 1) * y + x\n    else:\n        ans = (min(n, m) - 1) * y + abs(m - n) * x\n    sys.stdout.write(str(ans) + '\\n')", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, m, x, y) = map(int, sys.stdin.readline().split())\n    a = max(n, m)\n    b = min(m, n)\n    if 2 * x <= y:\n        print((n + m - 2) * x)\n    elif y < x:\n        if (a - b) % 2 == 0:\n            print((a - 1) * y)\n        else:\n            print((a - 2) * y + x)\n    else:\n        print((b - 1) * y + (a - b) * x)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, m, x, y) = map(int, sys.stdin.readline().split())\n    a = max(n, m)\n    b = min(m, n)\n    if 2 * x <= y:\n        print((n + m - 2) * x)\n    elif y < x:\n        if (a - b) % 2 == 0:\n            print((a - 1) * y)\n        else:\n            print((a - 2) * y + x)\n    else:\n        print((b - 1) * y + (a - b) * x)", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (n, m, x, y) = map(int, s.split())\n    (n, m) = sorted((n - 1, m - 1))\n    s = n + m\n    if n and x > y:\n        r = m * y + (s % 2 and x - y)\n    else:\n        r = s * x - n * max(0, 2 * x - y)\n    print(r)", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (*a, x, y) = map(int, s.split())\n    (n, m) = (x - 1 for x in sorted(a))\n    s = n + m\n    if n and x > y:\n        r = m * y + (s % 2 and x - y)\n    else:\n        r = s * x - n * max(0, 2 * x - y)\n    print(r)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    yg2x = (n + m - 2) * x\n    x2gy = (min(n, m) - 1) * y + abs(n - m) * x\n    xgyd2 = (min(n, m) - 1 + abs(n - m)) * y\n    xgynd2 = (min(n, m) - 1 + abs(n - m) - 1) * y + x\n    if y > 2 * x:\n        print(yg2x)\n    elif y < x:\n        if abs(n - m) % 2 == 0:\n            print(xgyd2)\n        else:\n            print(xgynd2)\n    else:\n        print(x2gy)", "for t in range(int(input())):\n    (N, M, X, Y) = map(int, input().split())\n    (mn, mx, diff) = (min(N, M), max(N, M), abs(N - M))\n    zigzag = (mn + diff - 1) * Y\n    if diff & 1:\n        zigzag += X - Y\n    print(min(zigzag, (mn - 1) * Y + diff * X, (mn + mx - 2) * X))", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    ans = 0\n    Min = min(n, m)\n    Max = max(n, m)\n    if n == 1 and m == 1:\n        print(0)\n    elif n == 1:\n        print((m - 1) * x)\n    elif m == 1:\n        print((n - 1) * x)\n    elif y >= 2 * x:\n        ans = (m + n - 2) * x\n        print(ans)\n    elif 2 * x > y > x:\n        ans = (Min - 1) * y + (Max - Min) * x\n        print(ans)\n    elif y <= x:\n        if (Max - Min) % 2 == 0:\n            ans = (Min - 1) * y + (Max - Min) * y\n            print(ans)\n        else:\n            ans = (Min - 1) * y + x + (Max - Min - 1) * y\n            print(ans)", "t = int(input())\nfor k in range(t):\n    (n, m, x, y) = map(int, input().split())\n    d = 2 * x if 2 * x < y else y\n    s = 2 * x if 2 * x < 2 * y else 2 * y\n    p = n - 1 if n < m else m - 1\n    q = n - p - 1 if n > m else m - p - 1\n    q = q // 2\n    total = p * d + s * q\n    if n - m & 1 != 0:\n        total += x\n    print(total)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if y >= 2 * x:\n        print((n + m - 2) * x)\n    if y > x and y < 2 * x:\n        print((min(n, m) - 1) * y + abs(n - m) * x)\n    if y <= x and abs(n - m) % 2 == 0:\n        print((min(n, m) - 1) * y + abs(n - m) * y)\n    if y <= x and abs(n - m) % 2 == 1:\n        print((min(n, m) - 1) * y + (abs(n - m) - 1) * y + x)", "t = int(input())\nfor tc in range(t):\n    (n, m, x, y) = map(int, input().split())\n    if x == y:\n        if m >= n:\n            print((m - 1) * x)\n        else:\n            print((n - 1) * x)\n        continue\n    if y < x:\n        if n == 1:\n            print((m - 1) * x)\n            continue\n        if m == 1:\n            print((n - 1) * x)\n            continue\n        if m >= n:\n            print((min(n, m) - 1) * y + (m - n) // 2 * 2 * y + (m - n - (m - n) // 2 * 2) * x)\n        else:\n            print((min(n, m) - 1) * y + (n - m) // 2 * 2 * y + (n - m - (n - m) // 2 * 2) * x)\n    else:\n        if n == 1:\n            print((m - 1) * x)\n            continue\n        if m == 1:\n            print((n - 1) * x)\n            continue\n        if m >= n:\n            print(min((m + n - 2) * x, (min(n, m) - 1) * y + (m - n) * x))\n        else:\n            print(min((m + n - 2) * x, (min(n, m) - 1) * y + (n - m) * x))", "import sys\ninput = sys.stdin.readline\n\ndef I():\n    return input().strip()\n\ndef II():\n    return int(input().strip())\n\ndef LI():\n    return [*map(int, input().strip().split())]\nimport copy, string, math, time, functools, random, fractions\nfrom heapq import heappush, heappop, heapify\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, defaultdict, Counter, OrderedDict\nfrom itertools import permutations, chain, combinations, groupby\nfrom operator import itemgetter\nfrom types import GeneratorType\nfrom typing import Iterable, TypeVar, Union\nfor _ in range(II()):\n    (n, m, x, y) = LI()\n    (n, m) = (n - 1, m - 1)\n    ans = min((n + m) * x, abs(n - m) * x + min(n, m) * y)\n    if n >= 1 and m >= 1:\n        var = min(n, m) * y + abs(n - m) // 2 * 2 * y + abs(n - m) % 2 * x\n        ans = min(ans, var)\n    print(ans)", "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\n\ndef myfunc(m, n, x, y):\n    if m == 1:\n        return (n - 1) * x\n    if 2 * x <= y:\n        return (m - 1 + n - 1) * x\n    ans = (m - 1) * y\n    if 2 * x <= 2 * y:\n        return ans + (n - m) * x\n    if (n - m) % 2 == 0:\n        return ans + (n - m) * y\n    return ans + (n - 1 - m) * y + x\nfor _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    (min_nm, ans) = (min(n, m), 0)\n    if m == n:\n        ans = min((n - 1) * y, (n - 1) * 2 * x)\n    elif m > n:\n        (m, n) = (n, m)\n        ans = myfunc(m, n, x, y)\n    else:\n        ans = myfunc(m, n, x, y)\n    print(str(ans) + '\\n')", "tc = int(input())\nwhile tc > 0:\n    (n, m, x, y) = map(int, input().split())\n    ans_one = (n + m - 2) * x\n    ans_two = (min(n, m) - 1) * y + abs(n - m) * x\n    remain = abs(n - m)\n    if remain % 2 == 0:\n        ans_three = (min(n, m) - 1) * y + remain * y\n    else:\n        ans_three = (min(n, m) - 1) * y + (remain - 1) * y + remain % 2 * x\n    print(min(min(ans_one, ans_two), ans_three))\n    tc -= 1", "try:\n    for i in range(int(input())):\n        (n, m, x, y) = map(int, input().split())\n        shortpath = (n + m - 2) * x\n        diff = abs(n - m)\n        shortpath = min(shortpath, (min(n, m) - 1) * y + diff * x)\n        shortpath = min(shortpath, (min(n, m) - 1) * y + diff // 2 * 2 * y + diff % 2 * x)\n        print(shortpath)\nexcept:\n    pass", "tc = int(input())\nwhile tc > 0:\n    (n, m, x, y) = map(int, input().split())\n    ans_one = (n + m - 2) * x\n    ans_two = (min(n, m) - 1) * y + abs(n - m) * x\n    remain = abs(n - m)\n    if remain % 2 == 0:\n        ans_three = (min(n, m) - 1) * y + remain // 2 * 2 * y\n    else:\n        ans_three = (min(n, m) - 1) * y + remain // 2 * 2 * y + remain % 2 * x\n    print(min(min(ans_one, ans_two), ans_three))\n    tc -= 1", "def func(n1, m1, x, y):\n    if n1 == 1 or m1 == 1:\n        return (n1 + m1 - 2) * x\n    elif y < x:\n        if (n1 - m1) % 2 == 0:\n            return (n1 - 1) * y\n        else:\n            return (n1 - 2) * y + x\n    elif y < 2 * x:\n        return (m1 - 1) * y + (n1 - m1) * x\n    elif y >= 2 * x:\n        return (n1 + m1 - 2) * x\nn = int(input())\nfor i in range(n):\n    (n, m, x, y) = list(map(int, input().split()))\n    n1 = max(n, m)\n    m1 = min(n, m)\n    print(func(n1, m1, x, y))", "def solve(n, m, x, y):\n    if y >= 2 * x:\n        return (n + m - 2) * x\n    if y > x and y < 2 * x:\n        return (min(n, m) - 1) * y + abs(n - m) * x\n    if y <= x and abs(n - m) % 2 == 0:\n        return (min(n, m) - 1) * y + abs(n - m) * y\n    if y <= x and abs(n - m) % 2 == 1:\n        return (min(n, m) - 1) * y + (abs(n - m) - 1) * y + x\nfor _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    print(solve(n, m, x, y))", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (n, m, x, y) = map(int, s.split())\n    (n, m) = sorted((n - 1, m - 1))\n    s = n + m\n    if n and x > y:\n        r = m * y + (s % 2 and x - y)\n    else:\n        r = s * x - n * max(0, 2 * x - y)\n    print(r)", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (n, m, x, y) = map(int, s.split())\n    (n, m) = sorted((n - 1, m - 1))\n    s = n + m\n    if n and x > y:\n        r = m * y\n        if s % 2:\n            r += x - y\n    else:\n        r = s * x\n        if 2 * x > y:\n            r -= n * (2 * x - y)\n    print(r)", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (n, m, x, y) = map(int, s.split())\n    (n, m) = sorted((n - 1, m - 1))\n    s = n + m\n    d = x - y\n    if n and d > 0:\n        r = m * y\n        if s % 2:\n            r += d\n    else:\n        r = s * x\n        d = 2 * x - y\n        if d > 0:\n            r -= n * d\n    print(r)", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (n, m, x, y) = map(int, s.split())\n    (n, m) = sorted((n - 1, m - 1))\n    s = n + m\n    if n and x > y:\n        r = m * y\n        if s % 2:\n            r += x - y\n    else:\n        r = s * x\n        if 2 * x > y:\n            r -= n * (2 * x - y)\n    print(r)", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (n, m, x, y) = map(int, s.split())\n    (n, m) = sorted((n - 1, m - 1))\n    s = n + m\n    if n and x > y:\n        r = m * y + s % 2 * (x - y)\n    else:\n        r = s * x\n        if 2 * x > y:\n            r -= n * (2 * x - y)\n    print(r)", "t = int(input())\nfor _ in range(t):\n    (n, m, x, y) = map(int, input().split())\n    dif = abs(m - n)\n    if m < n:\n        (m, n) = (n, m)\n    c1 = x * (m - 1 + (n - 1))\n    c2 = y * (n - 1) + dif * x\n    c3 = y * (n - 1) + dif // 2 * 2 * y + dif % 2 * x\n    print(min(c1, c2, c3))", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().strip().split())\n    if n < m:\n        (n, m) = (m, n)\n    if n == 1 or m == 1:\n        print((n + m - 2) * x)\n    elif y < x:\n        print((n - 1) * y if (n - m) % 2 == 0 else (n - 2) * y + x)\n    elif y < 2 * x:\n        print((m - 1) * y + (n - m) * x)\n    else:\n        print((n + m - 2) * x)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().strip().split())\n    if n < m:\n        (n, m) = (m, n)\n    cost = min((n + m - 2) * x, (min(n, m) - 1) * y + (max(n, m) - min(n, m)) * x)\n    if n == 1 or m == 1:\n        print((n + m - 2) * x)\n    elif y < x:\n        print((n - 1) * y if (n - m) % 2 == 0 else (n - 2) * y + x)\n    elif y < 2 * x:\n        print((m - 1) * y + (n - m) * x)\n    else:\n        print((n + m - 2) * x)", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (n, m, x, y) = map(int, s.split())\n    (n, m) = sorted((n - 1, m - 1))\n    s = n + m\n    r = s * x - n * max(0, 2 * x - y)\n    if n:\n        r = min(r, m * y + s % 2 * max(0, x - y))\n    print(r)", "t = int(input())\nfor _ in range(t):\n    (n, m, x, y) = map(int, input().split())\n    w1 = (n + m - 2) * x\n    w2 = 0\n    if n > m:\n        w2 += (m - 1) * y\n    else:\n        w2 += (n - 1) * y\n    w3 = w2 + abs(n - m) * x\n    w4 = y * min(n - 1, m - 1) + abs(n - m) // 2 * 2 * y + abs(n - m) % 2 * x\n    print(min(w1, w4, w3))", "import sys\nt = sys.stdin.readline()\nt = int(t[0])\nl = sys.stdin.readlines()\nfor k in l:\n    (n, m, x, y) = map(int, k.split(' '))\n    if m > n:\n        (n, m) = (m, n)\n    ans = 0\n    if n == 1 or m == 1:\n        ans = (n + m - 2) * x\n    elif y < x:\n        if n % 2 == m % 2:\n            ans = (n - 1) * y\n        else:\n            ans = (n - 2) * y + x\n    elif y < 2 * x:\n        ans = (m - 1) * y + (n - m) * x\n    else:\n        ans = (n + m - 2) * x\n    sys.stdout.write(str(ans) + '\\n')", "for u in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    total = n + m - 2\n    if n > m:\n        (n, m) = (m, n)\n    diff = m - n\n    ans1 = x * total\n    ans2 = y * (n - 1) + x * diff\n    ans3 = y * (n - 1) + 2 * (diff // 2) * y + x * (diff % 2)\n    print(min(ans3, min(ans1, ans2)))", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    p = (min(n, m) - 1) * y\n    q = max(m, n) - min(m, n)\n    p += q // 2 * y * 2 + q % 2 * x\n    l = [(n + m - 2) * x, (min(n, m) - 1) * y + (max(n, m) - min(n, m)) * x, p]\n    print(min(l))", "T = int(input())\nmyinp1 = []\nfor i in range(T):\n    myinp1.append(input())\nfor i in range(T):\n    inp = myinp1[i].split()\n    N = int(inp[0])\n    M = int(inp[1])\n    X = int(inp[2])\n    Y = int(inp[3])\n    if N > M:\n        (N, M) = (M, N)\n    diff = M - N\n    cost1 = (N - 1 + M - 1) * X\n    cost2 = (N - 1) * Y + diff * X\n    cost3 = (N - 1) * Y + int(diff / 2) * 2 * Y + diff % 2 * X\n    ans = min(cost1, cost2, cost3)\n    print(ans)", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    (n, m, x, y) = map(int, input().split())\n    if n > m:\n        (n, m) = (m, n)\n    d = n - 1\n    moves = n + m - 2\n    res = moves * x\n    left = moves - 2 * d\n    hops = left // 2\n    extra = left % 2\n    res = min(res, d * y + left * x)\n    if n > 1:\n        res = min(res, d * y + 2 * hops * y + extra * x)\n    print(res)", "import sys, bisect, math\nfrom itertools import permutations\nfrom itertools import combinations\nfrom itertools import combinations_with_replacement\nimport heapq\nfrom collections import deque\nfrom collections import Counter\ninput = sys.stdin.readline\n\ndef log(*message):\n    if not online:\n        for i in message:\n            print(i, end=' ')\n        print()\n\ndef intersection(a: list, b: list):\n    return list(set(a).intersection(b))\n\ndef union(a: list, b: list):\n    return list(set(a + b))\n\ndef binarySearchFromLeft(a: list, x: any):\n    i = bisect.bisect_left(a, x)\n    if i != len(a) and a[i] == x:\n        return i\n    else:\n        return 0\n\ndef binarySearchFromRight(a: list, x: any):\n    i = bisect.bisect_right(a, x)\n    if i != len(a) + 1 and a[i - 1] == x:\n        return i - 1\n    else:\n        return 0\n\ndef lintinput(x=' '):\n    return [int(i) for i in input().split(x)]\n\ndef lstrinput():\n    return [i for i in input().split()]\n\ndef intinput():\n    return int(input())\n\ndef XOR(*elements):\n    return eval('^'.join([str(i) for i in elements]))\n\ndef AND(*elements):\n    return eval('&'.join([str(i) for i in elements]))\n\ndef OR(*elements):\n    return eval('|'.join([str(i) for i in elements]))\n\ndef NOT(x):\n    return ~x\n\ndef BitwiseLeftShift(a, b):\n    return a << b\n\ndef BitwiseRightShift(a, b):\n    return a >> b\nonline = False\n\ndef testCase():\n    return range(int(input()))\n\ndef solve(*args):\n    ans = 'answer'\n    return ans\nfor _ in testCase():\n    (n, m, x, y) = lintinput()\n    a1 = (n + m - 2) * x\n    d = abs(n - m)\n    if d & 1 == 0:\n        a2 = min(n - 1, m - 1) * y + d * y\n    else:\n        a2 = min(n - 1, m - 1) * y + (d - 1) * y + x\n    a3 = min(n - 1, m - 1) * y + d * x\n    print(min(a1, a2, a3))", "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    dir_cost = (n + m - 2) * x\n    di_cost = (min(n, m) - 1) * y\n    extra_steps = abs(n - m)\n    if extra_steps % 2 == 0:\n        di_cost += extra_steps * min(x, y)\n    else:\n        di_cost += min(extra_steps * x, x + (extra_steps - 1) * y)\n    ans = min(dir_cost, di_cost)\n    sys.stdout.write(str(ans) + '\\n')", "cases = int(input())\nfinal = []\nfor _ in range(cases):\n    (n, m, x, y) = map(int, input().split())\n    if x * 2 < y or m == 1 or n == 1:\n        ans = (n + m - 2) * x\n    else:\n        max_diag = min(n - 1, m - 1)\n        dif = abs(n - m)\n        ans1 = max_diag * y + dif * x\n        ans2 = max_diag * y + (dif // 2 * y * 2 + dif % 2 * x)\n        ans = min(ans1, ans2)\n    final.append(ans)\nfor a in final:\n    print(a)", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    (n, m, x, y) = map(int, input().split())\n    (n, m) = (max(n, m), min(n, m))\n    ans = 0\n    ans = ans + min((m - 1) * y, (2 * m - 2) * x)\n    ans = ans + min((n - m) // 2 * 2 * y + (n - m) % 2 * x, (n - m) * x)\n    print(ans)", "cases = int(input())\nfinal = []\nfor _ in range(cases):\n    (n, m, x, y) = map(int, input().split())\n    if x * 2 < y or m == 1 or n == 1:\n        ans = (n + m - 2) * x\n    else:\n        max_diag = min(n - 1, m - 1)\n        dif = abs(n - m)\n        ans1 = max_diag * y + dif * x\n        ans2 = max_diag * y + (dif // 2 * y * 2 + dif % 2 * x)\n        ans = min(ans1, ans2)\n    final.append(ans)\nfor a in final:\n    print(a)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\nt = inp()\nwhile t:\n    t -= 1\n    (n, m, x, y) = ma()\n    fi = (n + m - 2) * x\n    if n <= m:\n        se = max(0, m - n) * x + (n - 1) * y\n        if (m - n) % 2:\n            th = x\n        else:\n            th = 0\n        th += (n - 1) * y\n        th += (m - n - (m - n) % 2) * y\n        se = min(se, th)\n    else:\n        se = max(0, n - m) * x + (m - 1) * y\n        if (n - m) % 2:\n            th = x\n        else:\n            th = 0\n        th += (m - 1) * y\n        th += (n - m - (n - m) % 2) * y\n        se = min(se, th)\n    print(min(fi, se))", "cases = int(input())\nfinal = []\nfor _ in range(cases):\n    (n, m, x, y) = map(int, input().split())\n    if x * 2 < y or m == 1 or n == 1:\n        ans = (n + m - 2) * x\n    else:\n        max_diag = min(n - 1, m - 1)\n        dif = abs(n - m)\n        ans1 = max_diag * y + dif * x\n        ans2 = max_diag * y + (dif // 2 * y * 2 + dif % 2 * x)\n        ans = min(ans1, ans2)\n    final.append(ans)\nfor a in final:\n    print(a)", "import sys\nfor _ in range(int(input())):\n    (n, m, x, y) = map(int, sys.stdin.readline().split())\n    yg2x = (n + m - 2) * x\n    x2gy = (min(n, m) - 1) * y + abs(n - m) * x\n    xgyd2 = (min(n, m) - 1 + abs(n - m)) * y\n    xgynd2 = (min(n, m) - 1 + abs(n - m) - 1) * y + x\n    if y > 2 * x:\n        sys.stdout.write(str(yg2x) + '\\n')\n    elif y < x:\n        if abs(n - m) % 2 == 0:\n            sys.stdout.write(str(xgyd2) + '\\n')\n        else:\n            sys.stdout.write(str(xgynd2) + '\\n')\n    else:\n        sys.stdout.write(str(x2gy) + '\\n')", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\nn = sys.stdin.readline()\n\ndef solve(n, m, x, y):\n    if y >= 2 * x:\n        return (n + m - 2) * x\n    if y > x and y < 2 * x:\n        return (min(n, m) - 1) * y + abs(n - m) * x\n    if y <= x and abs(n - m) % 2 == 0:\n        return (min(n, m) - 1) * y + abs(n - m) * y\n    if y <= x and abs(n - m) % 2 == 1:\n        return (min(n, m) - 1) * y + (abs(n - m) - 1) * y + x\nfor i in range(int(n)):\n    (n, m, x, y) = get_ints()\n    print(solve(n, m, x, y))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m, x, y) = get_ints()\n    dis = 0\n    if m > n:\n        (m, n) = (n, m)\n    if 2 * x >= y:\n        dis = (m - 1) * y\n    else:\n        dis += 2 * x * (m - 1)\n    if y < x:\n        if (n - m) % 2 == 0:\n            dis += y * (n - m)\n        else:\n            dis += y * (n - m - 1) + x\n    else:\n        dis += (n - m) * x\n    print(dis)", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    (n, m, x, y) = map(int, input().split())\n    (n, m) = (max(n, m), min(n, m))\n    ans = 0\n    ans = ans + min((m - 1) * y, (2 * m - 2) * x)\n    ans = ans + min((n - m) // 2 * 2 * y + (n - m) % 2 * x, (n - m) * x)\n    print(ans)", "from sys import stdin\ninput = stdin.readline\n\ndef answer():\n    val1 = (n + m - 2) * x\n    diff = abs(n - m)\n    if diff & 1 == 0:\n        val2 = min(n - 1, m - 1) * y + diff * y\n    else:\n        val2 = min(n - 1, m - 1) * y + (diff - 1) * y + x\n    val3 = min(n - 1, m - 1) * y + diff * x\n    return min(val1, val2, val3)\nfor T in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    print(answer())"]