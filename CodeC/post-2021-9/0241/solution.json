["zoro = int(input())\n\ndef main():\n    for i in range(zoro):\n        solve()\n\ndef solve():\n    n = int(input())\n    arr = [int(_) for _ in input().split()]\n    res = 0\n    count = 0\n    for x in arr:\n        if x <= n:\n            res += count\n        else:\n            count += 1\n    print(res)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = l[:n]\n    l2 = l[n:]\n    (sum, count) = (0, 0)\n    for i in range(n):\n        if l1[i] > n:\n            count += 1\n            sum += abs(n - 1 - i)\n        if l2[i] < n + 1:\n            sum += i\n    print(sum + count)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    knt = 0\n    s = 0\n    for i in range(n, -1, -1):\n        if l[i] <= n:\n            if i < n:\n                s += i - knt\n                knt += 1\n    for j in range(n, 2 * n):\n        if l[j] <= n:\n            s += j - knt\n            knt += 1\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (c, m) = (0, 0)\n    for i in range(2 * n):\n        if p[i] > n:\n            p[i] = 1\n            m += 1\n        else:\n            p[i] = 0\n            c += m\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    sum1 = 0\n    sum2 = 0\n    for i in range(n):\n        if lst[i] > n:\n            sum1 += i\n        if lst[i + n] < n + 1:\n            sum2 += i + n\n    print(sum2 - sum1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input().split(' ')\n    _1 = []\n    _0 = []\n    ans = 0\n    for i in range(2 * n):\n        if int(a[i]) <= n:\n            a[i] = 0\n            if i >= n:\n                _0.append(i)\n        else:\n            a[i] = 1\n            if i < n:\n                _1.append(i)\n    for j in range(len(_0)):\n        ans += _0[j] - _1[j]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n1 = int(input())\n    n = 2 * n1\n    l = [int(x) for x in input().split()]\n    z = int(n / 2)\n    x = 0\n    y = 0\n    for j in range(0, z):\n        if l[j] > n / 2:\n            x += j\n    for j in range(z, n):\n        if l[j] <= n / 2:\n            y += j\n    print(y - x)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    for i in range(0, n):\n        if l[i] > n:\n            l1.append(i)\n    l2 = []\n    for i in range(n, 2 * n):\n        if l[i] <= n:\n            l2.append(i)\n    res = 0\n    for (x, y) in zip(l1, l2):\n        res += abs(x - y)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = sorted(a)\n    ans = 0\n    (i, l, k) = (2 * n - 1, 2 * n - 1, 0)\n    while k < n and i > -1:\n        if a[i] >= b[n]:\n            ans += l - i\n            l -= 1\n            k += 1\n        i -= 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if l[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = 0\n    filled = 0\n    for i in range(len(p)):\n        if p[i] <= n:\n            ans += i - filled\n            filled += 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = 0\n    ms = 0\n    for i in range(2 * n):\n        if l[i] <= n:\n            ms += i - k\n            k += 1\n    print(ms)", "for tc in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (count, j) = (0, 0)\n    for i in range(2 * n):\n        if arr[i] <= n:\n            count += i - j\n            j += 1\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = 0\n    ms = 0\n    for i in range(2 * n):\n        if l[i] <= n:\n            ms += i - k\n            k += 1\n    print(ms)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    j = 0\n    count = 0\n    for i in range(2 * n):\n        if p[i] > n:\n            count += n - i + j\n            j += 1\n    print(count)", "for t in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    a = 0\n    itr = n\n    for i in range(n):\n        ele = num[i]\n        if ele > n:\n            while num[itr] > n:\n                itr += 1\n            a += itr - i\n            itr += 1\n    print(a)", "for t in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    a = 0\n    itr = n\n    for i in range(n):\n        ele = num[i]\n        if ele > n:\n            while num[itr] > n:\n                itr += 1\n            a += itr - i\n            itr += 1\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    (c, j) = (0, 0)\n    for i in range(2 * n):\n        if l[i] <= n:\n            c += i - j\n            j += 1\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    j = 0\n    s = 0\n    for i in range(len(l)):\n        if l[i] <= n:\n            s = s + (i - j)\n            j += 1\n    print(s)", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    P = list(map(int, input().split()))\n    j = 0\n    ans = 0\n    for i in range(2 * N):\n        if P[i] <= N:\n            ans += i - j\n            j += 1\n    print(ans)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    p = list(map(int, input().split()))\n    j = 0\n    gorb = 0\n    for i in range(2 * n):\n        if p[i] <= n:\n            gorb += i - j\n            j += 1\n    print(gorb)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    (N, A) = (inp(), inlt())\n    t = [i for i in range(N, 2 * N) if A[i] <= N]\n    ans.append(sum((t.pop(-1) - i for i in range(N) if A[i] > N)))\noutplt(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    (N, A) = (inp(), inlt())\n    t = [i + N for (i, a) in enumerate(A[N:]) if a <= N]\n    ans.append(sum((t.pop(-1) - i for (i, a) in enumerate(A[:N]) if a > N)))\noutplt(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    N = inp()\n    A = inlt()\n    (an, openindices) = (0, [])\n    for (i, a) in enumerate(A[N:]):\n        if a <= N:\n            openindices.append(i + N)\n    for (i, a) in enumerate(A[:N]):\n        if a > N:\n            x = openindices.pop(-1)\n            an += x - i\n    ans.append(an)\noutplt(ans)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    ans = 0\n    itr2 = n\n    for i in range(n):\n        elem = nums[i]\n        if elem > n:\n            while nums[itr2] > n:\n                itr2 += 1\n            ans += itr2 - i\n            itr2 += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    ans = 0\n    itr2 = n\n    for i in range(n):\n        elem = nums[i]\n        if elem > n:\n            while nums[itr2] > n:\n                itr2 += 1\n            ans += itr2 - i\n            itr2 += 1\n    print(ans)", "zoro = int(input())\n\ndef main():\n    for asldkfjlkasejlksdafj in range(zoro):\n        solve()\n\ndef solve():\n    n = int(input())\n    arr = [int(_) for _ in input().split()]\n    res = 0\n    count = 0\n    for x in arr:\n        if x <= n:\n            res += count\n        else:\n            count += 1\n    print(res)\nmain()", "zoro = int(input())\n\ndef main():\n    for asldkfjlkasejlksdafj in range(zoro):\n        solve()\n\ndef solve():\n    n = int(input())\n    arr = [int(_) for _ in input().split()]\n    res = 0\n    count = 0\n    for x in arr:\n        if x <= n:\n            res += count\n        else:\n            count += 1\n    print(res)\nmain()", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    a = input().split(' ')\n    b = []\n    for k in a:\n        b.append(int(k))\n    z = list(range(N, 2 * N))\n    c = 0\n    for m in range(2 * N):\n        if b[m] > N:\n            c += z[0] - m\n            z.pop(0)\n    print(c)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    openindices = []\n    for i in range(N, 2 * N):\n        if A[i] <= N:\n            openindices.append(i)\n    ans = 0\n    for i in range(0, N):\n        if A[i] > N:\n            x = openindices.pop(-1)\n            ans += x - i\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    y = list(map(int, input().split()))\n    z = sorted(y)\n    lm = z[n - 1]\n    rm = z[n]\n    li = []\n    ri = []\n    for i in range(n):\n        if y[i] > lm:\n            li.append(i)\n    for i in range(n, 2 * n):\n        if y[i] < rm:\n            ri.append(i)\n    li = li[::-1]\n    s = 0\n    for (i, j) in zip(li, ri):\n        s += abs(i - j)\n    print(s)", "T = int(input())\nwhile T:\n    T = T - 1\n    N = int(input())\n    arr = [int(x) for x in input().split()]\n    (x, ans) = (0, 0)\n    for i in range(2 * N):\n        if arr[i] <= N:\n            ans += i - x\n            x += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = [int(x) for x in input().split()]\n    ans = 0\n    x = 0\n    for j in range(2 * n):\n        if p[j] <= n:\n            ans += j - x\n            x += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (left, right) = (0, 0)\n    ans = 0\n    for i in range(2 * n):\n        if p[i] > n and i < n:\n            ans += n - 1 - i - left\n            left += 1\n        if p[i] <= n and i >= n:\n            ans += i - n - right\n            right += 1\n    print(ans + left * right)", "t = int(input())\nfor t in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    count = 0\n    i = 0\n    for j in range(2 * n):\n        if arr[j] <= n:\n            count += j - i\n            i += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    ans = 0\n    count = 0\n    for j in range(n):\n        if A[j] > n:\n            count += 1\n            ans += n - j\n    for j in range(n):\n        if A[j + n] <= n:\n            ans += j + 1\n    print(ans - count)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    k = 0\n    for i in range(len(l)):\n        if l[i] <= n:\n            ans += i - k\n            k += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    queue = 0\n    for i in range(2 * n):\n        if l[i] <= n:\n            ans = ans + i - queue\n            queue = queue + 1\n        if queue == n:\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = l[:n]\n    l2 = l[n:]\n    (sum, count) = (0, 0)\n    for i in range(n):\n        if l1[i] > n:\n            count += 1\n            sum += abs(n - 1 - i)\n        if l2[i] < n + 1:\n            sum += i\n    print(sum + count)", "from math import sqrt, ceil, floor, gcd, log2\nimport sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import combinations, groupby\nfrom time import time\nfrom heapq import heappop, heappush, heapify\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mi = 0\n    j = 0\n    for i in range(2 * n):\n        if arr[i] <= n:\n            mi += i - j\n            j += 1\n    print(mi)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    mi = 0\n    j = 0\n    for i in range(2 * n):\n        if l[i] <= n:\n            mi += i - j\n            j += 1\n    print(mi)\n    t -= 1", "def solve(arr, n):\n    sort = sorted(arr)\n    (left, right) = (sort[n - 1], sort[n])\n    (left_i, right_i) = ([], [])\n    for i in range(0, n):\n        if arr[i] > left:\n            left_i.append(i)\n        if arr[i + n] < right:\n            right_i.append(i + n)\n    ans = 0\n    for i in range(len(left_i)):\n        ans += abs(left_i[i] - right_i[i])\n    return ans\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    per = list(map(int, input().split()))\n    print(solve(per, N))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sort = sorted(arr)\n    (left, right) = (sort[n - 1], sort[n])\n    (left_i, right_i) = ([], [])\n    for i in range(0, n):\n        if arr[i] > left:\n            left_i.append(i)\n        if arr[i + n] < right:\n            right_i.append(i + n)\n    ans = 0\n    for i in range(len(left_i)):\n        ans += abs(left_i[i] - right_i[i])\n    print(ans)", "a = int(input(''))\nfor i in range(a):\n    x = int(input(''))\n    t = [int(x) for x in input('').split()]\n    k = list(t)\n    more = less = 0\n    for j in range(0, 2 * x):\n        if j < x:\n            if k[j] > x:\n                less = less + j\n        elif k[j] <= x:\n            more = more + j\n    print(more - less)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    mean = math.ceil(sum(arr) / (2 * n))\n    ar = []\n    al = []\n    for i in range(n):\n        if arr[i] >= mean:\n            al.append([arr[i], i])\n    for i in range(n, 2 * n):\n        if arr[i] < mean:\n            ar.append([arr[i], i])\n    if len(al) != 0 and len(ar) != 0:\n        tsum = 0\n        for i in range(len(ar)):\n            tsum += ar[i][1] - al[i][1]\n        print(tsum)\n    else:\n        print(0)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    mean = math.ceil(sum(arr) / (2 * n))\n    ar = []\n    al = []\n    for i in range(n):\n        if arr[i] >= mean:\n            al.append([arr[i], i])\n    for i in range(n, 2 * n):\n        if arr[i] < mean:\n            ar.append([arr[i], i])\n    if len(al) != 0 and len(ar) != 0:\n        tsum = 0\n        for i in range(len(ar)):\n            tsum += ar[i][1] - al[i][1]\n        print(tsum)\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    more = less = 0\n    for j in range(0, 2 * n):\n        if j < n:\n            if a[j] > n:\n                less += j\n        elif a[j] <= n:\n            more += j\n    print(more - less)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = l[:n]\n    l2 = l[n:]\n    (sum, count) = (0, 0)\n    for i in range(n):\n        if l1[i] > n:\n            count += 1\n            sum += abs(n - 1 - i)\n        if l2[i] < n + 1:\n            sum += i\n    print(sum + count)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    (s, j) = (0, 0)\n    for i in range(2 * n):\n        if l[i] <= n:\n            s += i - j\n            j += 1\n    print(s)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (s, j) = (0, 0)\n    for i in range(2 * n):\n        if l[i] <= n:\n            s += i - j\n            j += 1\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = 0\n    count = 0\n    for x in arr:\n        if x <= n:\n            res += count\n        else:\n            count += 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (min_swap, i) = (0, 0)\n    for j in range(2 * n):\n        if arr[j] <= n:\n            min_swap += j - i\n            i += 1\n    print(min_swap)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (m, j) = (0, 0)\n    for i in range(2 * n):\n        if p[i] <= n:\n            m += i - j\n            j += 1\n    print(m)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(2 * n):\n        (p, v) = (i < n, a[i] <= n)\n        if p ^ v:\n            ans += abs(n - i)\n    print(ans)", "def func():\n    n = int(input())\n    arr = [int(_) for _ in input().split()]\n    res = 0\n    count = 0\n    for x in arr:\n        if x <= n:\n            res += count\n        else:\n            count += 1\n    print(res)\nfor i in range(int(input())):\n    func()", "for i in range(int(input())):\n    n = int(input())\n    permutation = list(map(int, input().split()))\n    num_of_ops = 0\n    j = 0\n    for i in range(2 * n):\n        if permutation[i] > n:\n            num_of_ops += n + j - i\n            j += 1\n    print(num_of_ops)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    l1 = []\n    l2 = []\n    sum = 0\n    for i in range(n):\n        if l[i] > n:\n            l1.append(i)\n    for j in range(n, 2 * n):\n        if l[j] <= n:\n            l2.append(j)\n    for i in range(len(l1)):\n        sum = sum + (l2[i] - l1[i])\n    print(sum)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    res = 0\n    for i in l:\n        if i <= n:\n            res += c\n        else:\n            c += 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "for i in range(int(input())):\n    j = 0\n    k = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(2 * n):\n        if n >= l[i]:\n            k += i - j\n            j += 1\n    print(k)", "def f(arr):\n    n = len(arr) // 2\n    h1 = 0\n    h2 = 0\n    count1 = 0\n    count2 = 0\n    for i in range(n - 1, -1, -1):\n        if arr[i] > n:\n            h1 += n - 1 - i - count1\n            count1 += 1\n    for i in range(n, len(arr)):\n        if arr[i] <= n:\n            h2 += i - n - count2\n            count2 += 1\n    return h1 + h2 + count1 ** 2\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(el) for el in input().split(' ')]\n    print(f(arr))", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "t = input()\nfor c in range(0, int(t)):\n    n = input()\n    p = input().split()\n    arr = []\n    for x in p:\n        arr.append(int(x))\n    count = 0\n    for y in range(0, int(n)):\n        if arr[y] > int(n):\n            count = count + (int(n) - y)\n    for z in range(int(n), 2 * int(n)):\n        if arr[z] <= int(n):\n            count = count + (z - int(n))\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ans = 0\n    for ii in range(n * 2):\n        if lst[ii] > n:\n            ans += lst[ii] - ii - 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ans = 0\n    for i in range(n * 2):\n        if lst[i] > n:\n            ans += lst[i] - i - 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (min_swap, j) = (0, 0)\n    for i in range(2 * n):\n        if array[i] <= n:\n            min_swap += i - j\n            j += 1\n    print(min_swap)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    (m, k) = (0, 0)\n    for i in range(2 * n):\n        if ar[i] <= n:\n            m += i - k\n            k += 1\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = 0\n    j = 0\n    for i in range(2 * n):\n        if p[i] > n:\n            j += 1\n        elif p[i] <= n:\n            ans += j\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    ans = 0\n    for i in range(2 * n):\n        if l[i] <= n:\n            ans += c\n        else:\n            c += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (m, j) = (0, 0)\n    for i in range(2 * n):\n        if p[i] <= n:\n            m += i - j\n            j += 1\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (left, right) = (0, 0)\n    ans = 0\n    for i in range(2 * n):\n        if p[i] > n and i < n:\n            ans += n - 1 - i - left\n            left += 1\n        if p[i] <= n and i >= n:\n            ans += i - n - right\n            right += 1\n    print(ans + left * right)", "for i in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    count = 0\n    ans = 0\n    for i in range(len(p)):\n        if p[i] > n:\n            count += 1\n        else:\n            ans += count\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (left, right) = (0, 0)\n    ans = 0\n    for i in range(2 * n):\n        if p[i] > n and i < n:\n            ans += n - 1 - i - left\n            left += 1\n        if p[i] <= n and i >= n:\n            ans += i - n - right\n            right += 1\n    print(ans + left * right)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (res, count) = (0, 0)\n    for i in a:\n        if i <= n:\n            res += count\n        else:\n            count += 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ls = sorted(l)\n    m = ls[n - 1]\n    c = 0\n    op = 0\n    for i in range(n * 2):\n        if l[i] <= m:\n            op += i - c\n            c += 1\n    print(op)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = [int(ele) for ele in input().split()][:2 * n]\n    l = p.copy()\n    l.sort()\n    k = l[n - 1]\n    t = 0\n    for i in range(n):\n        if p[i] > k:\n            t -= i\n        if p[2 * n - i - 1] <= k:\n            t += 2 * n - i - 1\n    print(t)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = [int(ele) for ele in input().split()][:2 * n]\n    l = p.copy()\n    l.sort()\n    k = l[n - 1]\n    (t, r) = ([], [])\n    for i in range(n):\n        if p[i] > k:\n            t.append(i)\n        if p[2 * n - i - 1] <= k:\n            r.append(2 * n - i - 1)\n    s = 0\n    for i in range(len(t)):\n        s += r[i] - t[i]\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (left, right) = (0, 0)\n    ans = 0\n    for i in range(2 * n):\n        if p[i] > n and i < n:\n            ans += n - 1 - i - left\n            left += 1\n        if p[i] <= n and i >= n:\n            ans += i - n - right\n            right += 1\n    print(ans + left * right)", "for i in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = 0\n    for j in range(2 * n):\n        if p[j] > n and j < n:\n            ans = ans - j\n        elif p[j] <= n and j >= n:\n            ans = ans + j\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = []\n    d = []\n    for i in range(n):\n        if a[i] > n:\n            c.append(i)\n        if a[n + i] <= n:\n            d.append(n + i)\n    if len(c) >= 1:\n        count = 0\n        m = 0\n        m1 = 0\n        c.sort(reverse=True)\n        d.sort(reverse=True)\n        for (i, j) in zip(c, d):\n            m += n - 1 - i - count\n            m1 += j - n - count\n            count += 1\n        print(m + m1 + len(c) * len(c))\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = 0\n    for j in range(2 * n):\n        if p[j] > n and j < n:\n            ans = ans - j\n        elif p[j] <= n and j >= n:\n            ans = ans + j\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = 0\n    for j in range(2 * n):\n        if p[j] > n and j < n:\n            ans = ans - j\n        elif p[j] <= n and j >= n:\n            ans = ans + j\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    n = 2 * n\n    cnt = 0\n    res = 0\n    for i in range(n):\n        if arr[i] > n // 2:\n            cnt += 1\n        else:\n            res += cnt\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = c = 0\n    for i in range(2 * n):\n        if l[i] > n:\n            c += 1\n        else:\n            ans += c\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = c = 0\n    for i in range(2 * n):\n        if l[i] > n:\n            c += 1\n        else:\n            ans += c\n    print(ans)", "tkk = int(input())\nfor z in range(tkk):\n    n = int(input())\n    lt = list(map(int, input().split()))\n    i = n\n    j = n - 1\n    ops = 0\n    while True:\n        f1 = 0\n        f2 = 0\n        while i > 0:\n            i -= 1\n            qq = lt[i]\n            if qq > n:\n                f1 = 1\n                break\n        while j < 2 * n - 1:\n            j += 1\n            vv = lt[j]\n            if vv <= n:\n                f2 = 1\n                break\n        if f1 == 1 or f2 == 1:\n            ops += j - i\n        if i == 0 and j == 2 * n - 1:\n            break\n    print(ops)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    h = []\n    e = []\n    ans = 0\n    for i in range(len(l)):\n        if l[i] <= n and i >= n:\n            e.append(i + 1)\n        if l[i] > n and i < n:\n            h.append(i + 1)\n    for i in range(len(h)):\n        ans += abs(h[i] - e[i])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    nn = 2 * n\n    c = 0\n    r = 0\n    for i in range(nn):\n        if l[i] > n:\n            c = c + 1\n        else:\n            r = r + c\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    n *= 2\n    ls = sorted(arr)\n    m = ls[n // 2 - 1]\n    count = 0\n    moves = 0\n    for (i, val) in enumerate(arr):\n        if val <= m:\n            moves += i - count\n            count += 1\n    print(moves)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = 0\n    c = 0\n    for i in range(n + n):\n        if a[i] <= n:\n            b += i - c\n            c += 1\n    print(b)"]