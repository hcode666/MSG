["for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = arr[0]\n    for i in arr:\n        res &= i\n    p = 0\n    curr = arr[0]\n    for i in range(1, n):\n        if curr == res:\n            p += 1\n            curr = arr[i]\n        else:\n            curr &= arr[i]\n    if curr == res:\n        p += 1\n    print(n - p)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = arr[0]\n    for i in arr:\n        res &= i\n    p = 0\n    curr = arr[0]\n    for i in range(1, n):\n        if curr == res:\n            p += 1\n            curr = arr[i]\n        else:\n            curr &= arr[i]\n    if curr == res:\n        p += 1\n    print(n - p)", "from functools import reduce\nn = int(input())\nfor i in range(n):\n    length = int(input())\n    A = list(map(int, input().split()))\n    minim = reduce(lambda a, b: a & b, A)\n    ans = len(A)\n    t = 2 ** 31 - 1\n    for j in range(len(A)):\n        t &= A[j]\n        if t == minim:\n            ans -= 1\n            t = 2 ** 31 - 1\n    print(ans)", "from functools import reduce\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cum = reduce(lambda x, y: x & y, arr)\n    operation = n - 1\n    temp = 2 ** 31 - 1\n    j = 0\n    while j < len(arr):\n        temp &= arr[j]\n        if temp == cum:\n            operation -= 1\n            temp = 2 ** 31 - 1\n        j += 1\n    print(operation + 1)", "ans = ''\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = (1 << 31) - 1\n    for i in arr:\n        res &= i\n    count = 0\n    cur = (1 << 31) - 1\n    for i in range(n):\n        if cur & arr[i] == res:\n            count += 1\n            cur = (1 << 31) - 1\n        else:\n            cur &= arr[i]\n    ans += str(n - count) + '\\n'\nprint(ans)", "for p in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    res = l[0]\n    for ele in l:\n        res = res & ele\n    ans = 0\n    m = []\n    i = 0\n    for ele in l:\n        if ele == res:\n            m.append(ele)\n        elif len(m) == 0:\n            m.append(ele)\n        elif m[-1] != res:\n            t = m[-1]\n            m.pop()\n            m.append(ele & t)\n            ans += 1\n        else:\n            m.append(ele)\n        i += 1\n    for ele in m:\n        if ele != res:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = arr[0]\n    for el in arr:\n        res &= el\n    p = 0\n    curr = arr[0]\n    for i in range(1, n):\n        if curr == res:\n            p += 1\n            curr = arr[i]\n        else:\n            curr &= arr[i]\n    if curr == res:\n        p += 1\n    print(n - p)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    res = l[0]\n    for ele in l:\n        res = res & ele\n    ans = 0\n    m = []\n    i = 0\n    for ele in l:\n        if ele == res:\n            m.append(ele)\n        elif len(m) == 0:\n            m.append(ele)\n        elif m[-1] != res:\n            t = m[-1]\n            m.pop()\n            m.append(ele & t)\n            ans += 1\n        else:\n            m.append(ele)\n        i += 1\n    for ele in m:\n        if ele != res:\n            ans += 1\n    print(ans)", "T = int(input())\nfor ts in range(T):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    k = A[0]\n    for i in range(1, N):\n        k &= A[i]\n    ans = 0\n    local = A[0]\n    for i in range(1, N):\n        if local == k:\n            local = A[i]\n        else:\n            local &= A[i]\n            ans += 1\n    if local != k:\n        ans += 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    for i in range(1, n):\n        x = x & a[i]\n    c = a[0]\n    cc = 0\n    for i in range(1, n):\n        if c == x:\n            cc += 1\n            c = a[i]\n        c = c & a[i]\n    if c == x:\n        cc += 1\n    print(n - cc)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    count = 0\n    z = []\n    check1 = 2 ** 30 - 1\n    for i in lis:\n        check1 &= i\n    check2 = 2 ** 32 - 1\n    for i in lis:\n        check2 &= i\n        if check2 == check1:\n            count += 1\n            check2 = 2 ** 32 - 1\n    print(len(lis) - count)", "def fi():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\nt = fi()\nfor i in range(t):\n    n = fi()\n    a = li()\n    tand = (1 << 30) - 1\n    for i in range(len(a)):\n        tand &= a[i]\n    groups = 0\n    cand = (1 << 30) - 1\n    for i in range(len(a)):\n        cand &= a[i]\n        if cand == tand:\n            groups += 1\n            cand = (1 << 30) - 1\n    ans = len(a) - groups\n    print(ans)", "def fi():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\nt = fi()\nfor i in range(t):\n    n = fi()\n    a = li()\n    tand = (1 << 30) - 1\n    for i in range(len(a)):\n        tand &= a[i]\n    groups = 0\n    cand = (1 << 30) - 1\n    for i in range(len(a)):\n        cand &= a[i]\n        if cand == tand:\n            groups += 1\n            cand = (1 << 30) - 1\n    ans = len(a) - groups\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = (1 << 30) - 1\n    for i in range(n):\n        x &= a[i]\n    g = 0\n    c = (1 << 30) - 1\n    for i in range(n):\n        c &= a[i]\n        if c == x:\n            g += 1\n            c = (1 << 30) - 1\n    print(n - g)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = 0\n    x = (1 << 30) - 1\n    for i in range(n):\n        x &= arr[i]\n    y = (1 << 30) - 1\n    for i in range(n):\n        y &= arr[i]\n        if y == x:\n            c += 1\n            y = (1 << 30) - 1\n    print(n - c)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    v = list(map(int, input().split()))\n    ans = 0\n    r = v[0]\n    for i in range(0, n):\n        r &= v[i]\n    for i in range(0, n - 1):\n        if v[i] != r:\n            ans += 1\n            v[i + 1] &= v[i]\n    if v[n - 1] != r:\n        ans += 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    for i in range(1, n):\n        x = x & a[i]\n    c = a[0]\n    cc = 0\n    for i in range(1, n):\n        if c == x:\n            cc += 1\n            c = a[i]\n        c = c & a[i]\n    if c == x:\n        cc += 1\n    print(n - cc)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    x = (1 << 30) - 1\n    for i in range(n):\n        x = x & l[i]\n    y = (1 << 30) - 1\n    for i in range(n):\n        y = y & l[i]\n        if y == x:\n            c += 1\n            y = (1 << 30) - 1\n    print(n - c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = 0\n    total_and = (1 << 30) - 1\n    for i in range(n):\n        total_and &= a[i]\n    group_and = (1 << 30) - 1\n    for i in range(n):\n        group_and &= a[i]\n        if group_and == total_and:\n            g += 1\n            group_and = (1 << 30) - 1\n    print(n - g)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    seq = list(map(int, input().split()))\n    Big = 2 ** 31 - 1\n    totAnd = Big\n    for i in seq:\n        totAnd = totAnd & i\n    groups = 0\n    CurrAnd = Big\n    for i in seq:\n        CurrAnd = CurrAnd & i\n        if CurrAnd == totAnd:\n            groups += 1\n            CurrAnd = Big\n    print(n - groups)", "result = []\nones = 2 ** 30 - 1\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    ad = ones\n    for a in A:\n        ad &= a\n    (tmp, c) = (ones, 0)\n    ans = 0\n    for a in A:\n        tmp &= a\n        if tmp == ad:\n            ans += c\n            (tmp, c) = (ones, 0)\n        else:\n            c += 1\n    if tmp != ad:\n        ans += c\n    result.append(ans)\nprint(*result, sep='\\n')", "result = []\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    ones = 2 ** 30 - 1\n    ad = ones\n    for a in A:\n        ad &= a\n    (tmp, c) = (ones, 0)\n    ans = 0\n    for a in A:\n        tmp &= a\n        if tmp == ad:\n            ans += c\n            (tmp, c) = (ones, 0)\n        else:\n            c += 1\n    if tmp != ad:\n        ans += c\n    result.append(ans)\nprint(*result, sep='\\n')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = 0\n    total_and = (1 << 30) - 1\n    for i in range(n):\n        total_and &= a[i]\n    group_and = (1 << 30) - 1\n    for i in range(n):\n        group_and &= a[i]\n        if group_and == total_and:\n            g += 1\n            group_and = (1 << 30) - 1\n    print(n - g)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    fe = arr[0]\n    for x in arr[1:]:\n        fe &= x\n    ng = 0\n    ta = arr[0]\n    for (i, x) in enumerate(arr):\n        ta &= x\n        if ta == fe:\n            ng += 1\n            if i + 1 < n:\n                ta = arr[i + 1]\n    print(n - ng)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = l[0]\n    for i in range(n):\n        a &= l[i]\n    b = 0\n    for i in range(n):\n        if l[i] == a:\n            b += 1\n    b = n - b\n    v = 0\n    for i in range(n):\n        if l[i] == a:\n            continue\n        if i == n - 1:\n            v += 1\n            continue\n        l[i + 1] &= l[i]\n        v += 1\n    print(v)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = l[0]\n    for i in range(n):\n        a &= l[i]\n    b = 0\n    for i in range(n):\n        if l[i] == a:\n            b += 1\n    b = n - b\n    v = 0\n    for i in range(n):\n        if l[i] == a:\n            continue\n        if i == n - 1:\n            v += 1\n            continue\n        l[i + 1] &= l[i]\n        v += 1\n    print(v)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    s = A[0]\n    res = 0\n    S = A[0]\n    for i in A:\n        S = S & i\n    for i in range(1, N):\n        if s == S:\n            s = A[i]\n            res += 1\n        s = s & A[i]\n    if s == S:\n        res += 1\n    print(N - res)", "r = int(input())\nwhile r != 0:\n    r -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = (1 << 30) - 1\n    for i in a:\n        x = x & i\n    y = (1 << 30) - 1\n    c = 0\n    for i in a:\n        y = y & i\n        if y == x:\n            c += 1\n            y = (1 << 30) - 1\n    print(n - c)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = (1 << 30) - 1\n    for i in a:\n        x = x & i\n    y = (1 << 30) - 1\n    c = 0\n    for i in a:\n        y = y & i\n        if y == x:\n            c += 1\n            y = (1 << 30) - 1\n    print(n - c)", "import sys\nfrom math import sqrt, gcd, factorial, ceil, floor, pi\nfrom collections import deque, Counter, OrderedDict\nfrom heapq import heapify, heappush, heappop\ninput = lambda : sys.stdin.readline()\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    n = I()\n    a = L()\n    x = 2 ** 30 - 1\n    for i in a:\n        x &= i\n    i = 1\n    while i < n:\n        if a[i - 1] == x:\n            i += 1\n            continue\n        a[i] &= a[i - 1]\n        if a[i] == x:\n            i += 1\n        i += 1\n    i = n - 1\n    print(n - a.count(x))", "for T in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    bitAND = l[0]\n    for i in range(n):\n        bitAND &= l[i]\n    smolbitAND = l[0]\n    count = 0\n    for i in range(n):\n        smolbitAND &= l[i]\n        if smolbitAND == bitAND and i != n - 1:\n            count += 1\n            smolbitAND = l[i + 1]\n        elif smolbitAND == bitAND and i == n - 1:\n            count += 1\n    print(n - count)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    t = l[0]\n    for i in l:\n        t &= i\n    ct = 2 ** 30 - 1\n    grps = 0\n    for i in l:\n        ct &= i\n        if ct == t:\n            grps += 1\n            ct = 2 ** 30 - 1\n    print(n - grps)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    finaland = currentand = arr[0]\n    for i in range(n):\n        finaland &= arr[i]\n    count = 0\n    arr.append(0)\n    for i in range(n):\n        currentand &= arr[i]\n        if currentand == finaland:\n            count += 1\n            currentand = arr[i + 1]\n    print(n - count)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    finaland = currentand = arr[0]\n    for i in range(1, n):\n        finaland &= arr[i]\n    count = i = 0\n    arr.append(0)\n    while i < n:\n        if currentand == finaland:\n            count += 1\n            currentand = arr[i + 1]\n            i += 1\n            continue\n        currentand &= arr[i + 1]\n        i += 1\n    print(n - count)", "for t in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    val = ar[0]\n    for i in range(1, len(ar)):\n        val &= ar[i]\n    part = 0\n    x = (1 << 30) - 1\n    for i in ar:\n        x &= i\n        if x == val:\n            part += 1\n            x = (1 << 30) - 1\n    print(n - part)", "from sys import stdin, setrecursionlimit, stdout\nfrom io import BytesIO\nimport os\nfrom collections import deque, Counter, defaultdict\nfrom math import sqrt, floor, ceil, log, log2, log10, pi, gcd, sin, cos, asin\nfrom bisect import bisect_right, bisect_left\n\ndef ii():\n    return int(input().decode()) if OJ else int(input())\n\ndef fi():\n    return float(input().decode()) if OJ else float(input())\n\ndef mi():\n    return map(int, input().decode().split()) if OJ else map(int, input().split())\n\ndef fmi():\n    return map(float, input().decode().split()) if OJ else map(float, input().split(''))\n\ndef li():\n    return list(mi())\n\ndef si():\n    return input().decode().rstrip() if OJ else input().rstrip()\n\ndef lsi():\n    return list(si())\n\ndef oj():\n    global OJ\n    OJ = True\n\ndef main():\n    n = ii()\n    a = li()\n    tot = a[0]\n    for i in a:\n        tot &= i\n    cnt = i = 0\n    while i < n:\n        cur = a[i]\n        j = i + 1\n        while j < n and cur != tot:\n            cur &= a[j]\n            j += 1\n        if cur == tot:\n            cnt += 1\n        i = j\n    print(n - cnt)\nOJ = False\nif OJ:\n    input = BytesIO(os.read(0, os.fstat(0).st_size)).readline\nelse:\n    input = stdin.readline\nvow = {'A', 'E', 'I', 'O', 'U'}\nmod = 1000000007\nres = ['NO', 'YES']\n(test, test_case) = (0, 1)\ntest_case = ii()\nwhile test < test_case:\n    test += 1\n    main()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = a[0]\n    for i in range(1, n):\n        z = z & a[i]\n    r = 0\n    for i in range(n):\n        if a[i] == z:\n            continue\n        if i == n - 1:\n            r += 1\n            continue\n        a[i + 1] = a[i] & a[i + 1]\n        r += 1\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = a[0]\n    for i in range(1, n):\n        z = z & a[i]\n    r = 0\n    for i in range(n):\n        if a[i] == z:\n            continue\n        if i == n - 1:\n            r += 1\n            continue\n        a[i + 1] = a[i] & a[i + 1]\n        r += 1\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = (1 << 30) - 1\n    for i in a:\n        mx &= i\n    grp = 0\n    curAnd = (1 << 30) - 1\n    for i in range(n):\n        curAnd &= a[i]\n        if curAnd == mx:\n            grp += 1\n            curAnd = (1 << 30) - 1\n    print(n - grp)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = arr[0]\n    for j in range(1, n):\n        x = x & arr[j]\n    j = 0\n    c = 0\n    while j < n:\n        y = arr[j]\n        j += 1\n        if y == 0:\n            continue\n        while y != x and j < n:\n            y = y & arr[j]\n            j += 1\n            c += 1\n    if y != x:\n        c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = l[0]\n    for i in range(n):\n        a &= l[i]\n    b = 0\n    for i in range(n):\n        if l[i] == a:\n            b += 1\n    b = n - b\n    v = 0\n    for i in range(n):\n        if l[i] == a:\n            continue\n        if i == n - 1:\n            v += 1\n            continue\n        l[i + 1] &= l[i]\n        v += 1\n    print(v)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    least = (1 << 30) - 1\n    for i in lis:\n        least &= i\n    p = lis[0]\n    i = 1\n    counti = 0\n    while i < n:\n        if p == least:\n            p = lis[i]\n            counti += 1\n        else:\n            p &= lis[i]\n        i += 1\n    if p == least:\n        counti += 1\n    print(n - counti)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    least = (1 << 30) - 1\n    for i in lis:\n        least &= i\n    p = lis[0]\n    i = 1\n    counti = 0\n    while i < n:\n        if p == least:\n            p = lis[i]\n            counti += 1\n        else:\n            p &= lis[i]\n        i += 1\n    if p == least:\n        counti += 1\n    print(n - counti)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    least = (1 << 30) - 1\n    for i in lis:\n        least &= i\n    p = lis[0]\n    i = 1\n    counti = 0\n    while i < n:\n        if p == least:\n            p = lis[i]\n            counti += 1\n        else:\n            p &= lis[i]\n        i += 1\n    if p == least:\n        counti += 1\n    print(n - counti)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    least = (1 << 30) - 1\n    for i in lis:\n        least &= i\n    p = lis[0]\n    i = 1\n    counti = 0\n    while i < n:\n        if p == least:\n            p = lis[i]\n            counti += 1\n        else:\n            p &= lis[i]\n        i += 1\n    if p == least:\n        counti += 1\n    print(n - counti)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    least = (1 << 30) - 1\n    for i in lis:\n        least &= i\n    p = lis[0]\n    i = 1\n    counti = 0\n    while i < n:\n        if p == least:\n            p = lis[i]\n            counti += 1\n        else:\n            p &= lis[i]\n        i += 1\n    if p == least:\n        counti += 1\n    print(n - counti)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    least = (1 << 30) - 1\n    for i in lis:\n        least &= i\n    p = lis[0]\n    i = 1\n    counti = 0\n    while i < n:\n        if p == least:\n            p = lis[i]\n            counti += 1\n        else:\n            p &= lis[i]\n        i += 1\n    if p == least:\n        counti += 1\n    print(n - counti)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    least = (1 << 30) - 1\n    for i in lis:\n        least &= i\n    p = lis[0]\n    i = 1\n    counti = 0\n    while i < n:\n        if p == least:\n            p = lis[i]\n            counti += 1\n        else:\n            p &= lis[i]\n        i += 1\n    if p == least:\n        counti += 1\n    print(n - counti)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    least = (1 << 30) - 1\n    for i in lis:\n        least &= i\n    p = lis[0]\n    i = 1\n    counti = 0\n    while i < n:\n        if p == least:\n            p = lis[i]\n            counti += 1\n        else:\n            p &= lis[i]\n        i += 1\n    if p == least:\n        counti += 1\n    print(n - counti)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    bit = a[0]\n    for i in range(1, n):\n        bit = bit & a[i]\n    ans = 0\n    left = int('1' * 32, 2)\n    for i in range(n):\n        left = left & a[i]\n        if left == bit:\n            left = int('1' * 32, 2)\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = arr[0]\n    for i in range(1, n):\n        a &= arr[i]\n    c = 0\n    for i in range(n):\n        if arr[i] == a:\n            c += 1\n    c = n - c\n    ans = 0\n    for i in range(n):\n        if arr[i] == a:\n            continue\n        if i == n - 1:\n            ans += 1\n            continue\n        arr[i + 1] &= arr[i]\n        ans += 1\n    print(ans)", "import sys\nimport math\nfrom collections import defaultdict, Counter, deque\nfrom bisect import *\nfrom string import ascii_lowercase\nfrom heapq import *\n\ndef readInts():\n    x = list(map(int, sys.stdin.readline().rstrip().split()))\n    return x[0] if len(x) == 1 else x\n\ndef readList(type=int):\n    x = sys.stdin.readline()\n    x = list(map(type, x.rstrip('\\n\\r').split()))\n    return x\n\ndef readStr():\n    x = sys.stdin.readline().rstrip('\\r\\n')\n    return x\nwrite = sys.stdout.write\nread = sys.stdin.readline\n\ndef dist(x1, x2, y1, y2):\n    return math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n\ndef mergeSort(arr, check=lambda a, b: a < b, reverse=False):\n    if len(arr) > 1:\n        mid = len(arr) // 2\n        L = arr[:mid]\n        R = arr[mid:]\n        mergeSort(L, check, reverse)\n        mergeSort(R, check, reverse)\n        i = j = k = 0\n        while i < len(L) and j < len(R):\n            if check(L[i], R[j]):\n                if not reverse:\n                    arr[k] = L[i]\n                    i += 1\n                else:\n                    arr[k] = R[j]\n                    j += 1\n            elif not reverse:\n                arr[k] = R[j]\n                j += 1\n            else:\n                arr[k] = L[i]\n                i += 1\n            k += 1\n        while i < len(L):\n            arr[k] = L[i]\n            i += 1\n            k += 1\n        while j < len(R):\n            arr[k] = R[j]\n            j += 1\n            k += 1\n\ndef maxSum(arr):\n    max_sum = float('-inf')\n    max_cur = 0\n    for num in ar:\n        max_cur = max(max_cur + num, num)\n        if max_cur > max_sum:\n            max_sum = max_cur\n    return max_sum\n\ndef hcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcf(b, b % a)\n\ndef get_power(n, m):\n    i = 1\n    p = -1\n    while i <= n:\n        i = i * m\n        p += 1\n    return p\n\ndef fact(n):\n    f = 1\n    for i in range(2, n + 1):\n        f *= i\n    return f\n\ndef find_closest(num, ar):\n    min_d = float('inf')\n    for num2 in ar:\n        d = abs(num2 - num)\n        if d < min_d:\n            min_d = d\n    return min_d\n\ndef check_pal(n):\n    s = str(n)\n    j = len(s) - 1\n    i = 0\n    while j > i:\n        if s[i] != s[j]:\n            return False\n        i += 1\n        j -= 1\n    return True\n\ndef solve(t):\n    n = readInts()\n    ar = readList()\n    k = ar[0]\n    for i in range(1, n):\n        k = k & ar[i]\n    cnt = 0\n    for (i, num) in enumerate(ar):\n        if num == k:\n            continue\n        if i == n - 1:\n            cnt += 1\n            break\n        ar[i + 1] = ar[i] & ar[i + 1]\n        cnt += 1\n    print(cnt)\n\ndef main():\n    t = 1\n    sys.setrecursionlimit(10000)\n    t = readInts()\n    for i in range(t):\n        solve(i + 1)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    b = arr[0]\n    for i in range(n):\n        b &= arr[i]\n    r = 0\n    for i in range(n):\n        if arr[i] == b:\n            continue\n        if i == n - 1:\n            r = r + 1\n            continue\n        arr[i + 1] &= arr[i]\n        r += 1\n    print(r)", "tc = int(input())\nwhile tc:\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    t = 2 ** 30 - 1\n    for i in a:\n        t = t & i\n    ans = 0\n    c = 2 ** 30 - 1\n    for i in a:\n        c &= i\n        if c == t:\n            ans += 1\n            c = 2 ** 30 - 1\n    print(n - ans)\n    tc -= 1", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = a[0]\n    for i in range(n):\n        m &= a[i]\n    ans = 0\n    for i in range(n):\n        if a[i] == m:\n            continue\n        if i == n - 1:\n            ans += 1\n            continue\n        ans += 1\n        a[i + 1] &= a[i]\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[0]\n    for i in range(n):\n        b &= a[i]\n    r = 0\n    for i in range(n):\n        if a[i] == b:\n            continue\n        if i == n - 1:\n            r += 1\n            continue\n        a[i + 1] &= a[i]\n        r += 1\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = -1\n    for i in range(n):\n        a = a & l[i]\n    t = -1\n    ct = 0\n    for j in range(n):\n        t = t & l[j]\n        if t == a:\n            ct += 1\n            t = -1\n    print(n - ct)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[0]\n    for i in range(n):\n        b &= a[i]\n    x = 0\n    for i in range(n):\n        if a[i] == b:\n            x += 1\n    x = n - x\n    r = 0\n    for i in range(n):\n        if a[i] == b:\n            continue\n        if i == n - 1:\n            r += 1\n            continue\n        a[i + 1] &= a[i]\n        r += 1\n    print(r)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    req_num = arr[0]\n    for i in arr:\n        req_num &= i\n    temp = arr[0]\n    grps = 0\n    for i in range(n):\n        temp &= arr[i]\n        if temp == req_num:\n            if i < n - 1:\n                temp = arr[i + 1]\n            grps += 1\n    print(n - grps)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = arr[0]\n    for i in range(1, n):\n        a &= arr[i]\n    c = 0\n    for i in range(n):\n        if arr[i] == a:\n            c += 1\n    c = n - c\n    ans = 0\n    for i in range(n):\n        if arr[i] == a:\n            continue\n        if i == n - 1:\n            ans += 1\n            continue\n        arr[i + 1] &= arr[i]\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = a[0]\n    for i in range(1, n):\n        z = z & a[i]\n    r = 0\n    for i in range(n):\n        if a[i] == z:\n            continue\n        if i == n - 1:\n            r += 1\n            continue\n        a[i + 1] = a[i] & a[i + 1]\n        r += 1\n    print(r)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    tot = -1\n    for i in range(n):\n        tot &= arr[i]\n    cur = -1\n    ans = 0\n    for i in range(n):\n        cur &= arr[i]\n        if cur == tot:\n            cur = -1\n            ans += 1\n    print(n - ans)\n    t -= 1", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    a = (1 << 30) - 1\n    for i in range(N):\n        a &= arr[i]\n    curr = (1 << 30) - 1\n    ans = 0\n    for i in range(N):\n        curr &= arr[i]\n        if curr == a:\n            ans += 1\n            curr = (1 << 30) - 1\n    print(N - ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    x = arr[0]\n    for i in arr[1:]:\n        x &= i\n    g = 0\n    c = (1 << 30) - 1\n    for i in arr:\n        c &= i\n        if c == x:\n            g += 1\n            c = (1 << 30) - 1\n    print(n - g)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    grps = 0\n    p = 2 ** 30 - 1\n    c = 2 ** 30 - 1\n    for i in l:\n        p &= i\n    for i in l:\n        c &= i\n        if c == p:\n            grps += 1\n            c = 2 ** 30 - 1\n    print(n - grps)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list([int(x) for x in input().split()])\n    a = (1 << 32) - 1\n    for i in l:\n        a = a & i\n    c = 0\n    ans = 0\n    b = (1 << 32) - 1\n    for i in l:\n        b = b & i\n        c += 1\n        if b == a:\n            ans += c - 1\n            c = 0\n            b = (1 << 32) - 1\n    if c > 0:\n        ans += c\n    print(ans)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    tot = -1\n    for i in range(n):\n        tot &= arr[i]\n    cur = -1\n    ans = 0\n    for i in range(n):\n        cur &= arr[i]\n        if cur == tot:\n            cur = -1\n            ans += 1\n    print(n - ans)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[0]\n    for i in range(n):\n        b &= a[i]\n    x = 0\n    for i in range(n):\n        if a[i] == b:\n            x += 1\n    x = n - x\n    r = 0\n    for i in range(n):\n        if a[i] == b:\n            continue\n        if i == n - 1:\n            r += 1\n            continue\n        a[i + 1] &= a[i]\n        r += 1\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = a[0]\n    for i in range(1, n):\n        z = z & a[i]\n    r = 0\n    for i in range(n):\n        if a[i] == z:\n            continue\n        if i == n - 1:\n            r += 1\n            continue\n        a[i + 1] = a[i] & a[i + 1]\n        r += 1\n    print(r)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = l[0]\n    for j in range(1, n):\n        x = x & l[j]\n    ans = 0\n    for k in range(n):\n        if l[k] == x:\n            continue\n        if k == n - 1:\n            ans += 1\n            continue\n        l[k + 1] = l[k] & l[k + 1]\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(j) for j in input().split()]\n    x = l[0]\n    for i in range(1, n):\n        x = x & l[i]\n    ans = 0\n    for i in range(n):\n        if l[i] == x:\n            continue\n        if i == n - 1:\n            ans += 1\n            continue\n        l[i + 1] = l[i] & l[i + 1]\n        ans += 1\n    print(ans)", "from functools import reduce\nfrom operator import and_\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = reduce(and_, arr)\n    ans = 0\n    for i in range(n):\n        if arr[i] == a:\n            continue\n        if i == n - 1:\n            ans += 1\n            continue\n        arr[i + 1] &= arr[i]\n        ans += 1\n    print(ans)", "tc = int(input())\n\ndef reset():\n    return (1 << 30) - 1\nfor t in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    req = reset()\n    for i in a:\n        req &= i\n    ans = 0\n    cur = reset()\n    for i in a:\n        cur &= i\n        if cur == req:\n            cur = reset()\n            ans += 1\n    print(n - ans)", "from functools import reduce\nk = int(input())\nwhile k:\n    n = int(input())\n    li = list(map(int, input().split()))\n    and_ = reduce(lambda x, y: x & y, li)\n    x = -1\n    ans = 0\n    for i in range(n):\n        x &= li[i]\n        ans += 1\n        if x == and_:\n            x = -1\n            ans -= 1\n    print(ans)\n    k = k - 1", "import sys\nimport math\nimport bisect\nimport heapq\nfrom bisect import bisect_right\nfrom sys import stdin, stdout\n\ndef get_ints_in_variables():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_int():\n    return int(sys.stdin.readline())\n\ndef get_ints_in_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_of_list(n):\n    return [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n)]\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef myceil(x, y):\n    return (x + y - 1) // y\n\ndef Solution():\n    pass\n\ndef main():\n    for _ in range(get_int()):\n        n = get_int()\n        a = get_ints_in_list()\n        s = a[0]\n        for v in a:\n            s &= v\n        i = 0\n        cnt = 0\n        ts = a[i]\n        while i < n:\n            if ts & a[i] == s:\n                cnt += 1\n                i += 1\n                if i < n:\n                    ts = a[i]\n            else:\n                ts &= a[i]\n                i += 1\n        print(n - cnt)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mn = a[0]\n    for i in range(1, n):\n        mn &= a[i]\n    tm = 0\n    for i in range(n):\n        if a[i] == mn:\n            tm += 1\n    tm = n - tm\n    ans = 0\n    for i in range(n):\n        if a[i] == mn:\n            continue\n        if i == n - 1:\n            ans += 1\n            continue\n        a[i + 1] &= a[i]\n        ans += 1\n    print(ans)", "from math import inf\nfrom collections import *\nimport math, os, sys, heapq, bisect, random, threading\nfrom functools import lru_cache\nfrom itertools import *\n\ndef inp():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef out(var):\n    sys.stdout.write(str(var))\n\ndef inpu():\n    return int(inp())\n\ndef lis():\n    return list(map(int, inp().split()))\n\ndef stringlis():\n    return list(map(str, inp().split()))\n\ndef sep():\n    return map(int, inp().split())\n\ndef strsep():\n    return map(str, inp().split())\n\ndef fsep():\n    return map(float, inp().split())\n(M, M1) = (1000000007, 998244353)\n\ndef main():\n    how_much_noob_I_am = 1\n    how_much_noob_I_am = inpu()\n    for _ in range(how_much_noob_I_am):\n        n = inpu()\n        arr = lis()\n        res = arr[0]\n        for i in range(n):\n            res &= arr[i]\n        ans = 0\n        for i in range(n - 1):\n            if arr[i] == res:\n                continue\n            arr[i + 1] &= arr[i]\n            ans += 1\n        if arr[-1] != res:\n            ans += 1\n        print(ans)\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split(' ')))\n    c = 0\n    a = sorted(x)\n    if len(set(a)) == 1:\n        print(0)\n    else:\n        d = x[0]\n        for i in range(1, n):\n            d &= x[i]\n        for i in range(n):\n            if x[i] == d:\n                continue\n            elif i == n - 1:\n                c = c + 1\n            else:\n                x[i + 1] &= x[i]\n                c = c + 1\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    bc = [0] * 32\n    for i in a:\n        for j in range(32):\n            if i >> j & 1:\n                bc[j] += 1\n    t = 0\n    for (i, j) in enumerate(bc):\n        if j == n:\n            t |= 1 << i\n    c = 0\n    p = a[0]\n    for i in range(1, n):\n        if p == t:\n            p = a[i]\n        else:\n            p &= a[i]\n            c += 1\n    if p != t:\n        c += 1\n    print(c)", "import collections\nfrom math import ceil, gcd, sqrt, log\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    finalAnd = A[0]\n    for a in A[1:]:\n        finalAnd &= a\n    groups = 0\n    curr = A[0]\n    for i in range(1, n):\n        if curr == finalAnd:\n            groups += 1\n            curr = A[i]\n        else:\n            curr &= A[i]\n    if curr == finalAnd:\n        groups += 1\n    print(n - groups)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "def solve(n, arr):\n    x = arr[0]\n    for i in range(n):\n        x &= arr[i]\n    groups = 0\n    s = arr[0]\n    for i in range(n):\n        s &= arr[i]\n        if s == x:\n            groups += 1\n            if i < n - 1:\n                s = arr[i + 1]\n    return n - groups\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "from sys import stdin, stdout\nfrom collections import defaultdict, Counter, deque\nimport math, heapq, bisect\ninput = stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    x = a[0]\n    for i in range(1, n):\n        x = x & a[i]\n    groups = 0\n    queue = deque()\n    i = 0\n    while i < n:\n        ele = a[i]\n        queue.append(ele)\n        if len(queue) == 1:\n            curr = ele\n        else:\n            curr = curr & ele\n        if curr == x:\n            groups += 1\n            queue.clear()\n        i += 1\n    print(n - groups)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = a[0]\n    for i in a:\n        k &= i\n    a.append(k)\n    (tp, ct, r) = (a[0], 0, 0)\n    for i in a:\n        ct += 1\n        tp &= i\n        if tp == k:\n            r += ct - 1\n            ct = 0\n            tp = 2 ** 30 - 1\n    print(r)", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    n = list(map(int, input().split()))\n    cnt = 0\n    if len(set(n)) == 1:\n        print(0)\n    else:\n        d = n[0]\n        for i in range(1, len(n)):\n            d &= n[i]\n        for i in range(a):\n            if n[i] == d:\n                continue\n            elif i == a - 1:\n                cnt += 1\n                continue\n            else:\n                n[i + 1] &= n[i]\n                cnt += 1\n        print(cnt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = a[0]\n    for i in a:\n        k &= i\n    count = 0\n    for i in range(n - 1):\n        if a[i] == k:\n            continue\n        a[i + 1] &= a[i]\n        count += 1\n    print(count + (a[-1] != k))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = a[0]\n    for i in range(1, n):\n        z &= a[i]\n    r = 0\n    for i in range(n):\n        if a[i] == z:\n            continue\n        if i == n - 1:\n            r += 1\n            continue\n        a[i + 1] = a[i] & a[i + 1]\n        r += 1\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    t = l[0]\n    for i in range(1, n):\n        t &= l[i]\n    g = 0\n    c = 2 ** 30 - 1\n    for i in range(n):\n        c &= l[i]\n        if c == t:\n            g += 1\n            c = 2 ** 30 - 1\n    print(n - g)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if len(set(l)) == 1:\n        print(0)\n    else:\n        c = 0\n        a = 0\n        e = l[0]\n        for i in range(1, n):\n            e &= l[i]\n        for i in range(n):\n            if l[i] == e:\n                continue\n            elif i == n - 1:\n                a += 1\n                continue\n            else:\n                l[i + 1] &= l[i]\n                a += 1\n        print(a)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ele = a[0]\n    for i in range(1, n):\n        ele = ele & a[i]\n    noz = a.count(ele)\n    calc = 0\n    i = 0\n    while i < n - 1:\n        if a[i] == ele:\n            i = i + 1\n            continue\n        a[i + 1] = a[i] & a[i + 1]\n        calc = calc + 1\n        i = i + 1\n    if a[-1] == ele:\n        print(calc)\n    else:\n        print(calc + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = a[0]\n    for i in a:\n        k &= i\n    count = 0\n    for i in range(n - 1):\n        if a[i] == k:\n            continue\n        a[i + 1] &= a[i]\n        count += 1\n    print(count + (a[-1] != k))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = arr[0]\n    for i in range(1, n):\n        a &= arr[i]\n    ans = 0\n    for i in range(n):\n        if arr[i] == a:\n            continue\n        if i == n - 1:\n            ans += 1\n            continue\n        arr[i + 1] &= arr[i]\n        ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = a[0]\n    for i in a:\n        k &= i\n    a.append(k)\n    count = 0\n    for i in range(n):\n        if a[i] == k:\n            continue\n        if i + 1 == n:\n            count += 1\n            continue\n        a[i + 1] &= a[i]\n        count += 1\n    print(count)", "from sys import stdin\n\ndef ii():\n    return int(stdin.readline())\n\ndef mi():\n    return map(int, stdin.readline().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return stdin.readline()\nt = 1\nt = ii()\nfor _ in range(t):\n    n = ii()\n    l1 = li()\n    ans = l1[0]\n    for i in l1[1:]:\n        ans &= i\n    if l1.count(ans) == n:\n        print(0)\n        continue\n    c1 = 0\n    curr = l1[0]\n    for i in l1[1:]:\n        if curr != ans:\n            curr &= i\n            c1 += 1\n        else:\n            curr = i\n    if curr != ans:\n        c1 += 1\n    c2 = 0\n    l1 = l1[::-1]\n    curr = l1[0]\n    for i in l1[1:]:\n        if curr != ans:\n            curr &= i\n            c2 += 1\n        else:\n            curr = i\n    if curr != ans:\n        c2 += 1\n    print(min(c1, c2))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mn = a[0]\n    for i in range(1, n):\n        mn &= a[i]\n    tm = 0\n    for i in range(n):\n        if a[i] == mn:\n            tm += 1\n    tm = n - tm\n    ans = 0\n    for i in range(n):\n        if a[i] == mn:\n            continue\n        if i == n - 1:\n            ans += 1\n            continue\n        a[i + 1] &= a[i]\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    mn = a[0]\n    for i in range(1, n):\n        mn = mn & a[i]\n    ans = 0\n    for i in range(n):\n        if a[i] == mn:\n            continue\n        if i == n - 1:\n            ans += 1\n            break\n        if a[i] != mn:\n            a[i + 1] = a[i] & a[i + 1]\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = arr[0]\n    for i in range(1, n):\n        a &= arr[i]\n    c = 0\n    for i in range(n):\n        if arr[i] == a:\n            c += 1\n    c = n - c\n    ans = 0\n    for i in range(n):\n        if arr[i] == a:\n            continue\n        if i == n - 1:\n            ans += 1\n            continue\n        arr[i + 1] &= arr[i]\n        ans += 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[0]\n    for i in range(n):\n        b &= a[i]\n    x = 0\n    for i in range(n):\n        if a[i] == b:\n            x += 1\n    x = n - x\n    r = 0\n    for i in range(n):\n        if a[i] == b:\n            continue\n        if i == n - 1:\n            r += 1\n            continue\n        a[i + 1] &= a[i]\n        r += 1\n    print(r)"]