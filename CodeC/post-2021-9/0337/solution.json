["def ans(arr):\n    new_arr = []\n    i = 0\n    while i < len(arr):\n        if i == 0:\n            new_arr.append(arr[i] & arr[i + 1])\n        elif i == len(arr) - 1:\n            new_arr.append(arr[i] & arr[i - 1])\n        else:\n            new_arr.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n        i += 1\n    return new_arr\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = input()\n    d2 = list(map(int, input().split()))\n    print(*ans(d2))\n    test_cases -= 1", "from typing import List\n\ndef soln(n: int, arr: List[int]) -> List[int]:\n    res = [arr[0] & arr[1]]\n    for i in range(1, n - 1):\n        res.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n    res.append(arr[-1] & arr[-2])\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*soln(n, arr))", "from typing import List\n\ndef soln(n: int, arr: List[int]) -> List[int]:\n    res = [arr[0] & arr[1]]\n    for i in range(1, n - 1):\n        res.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n    res.append(arr[-1] & arr[-2])\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*soln(n, arr))", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    arr = [0] * N\n    for i in range(N - 1):\n        v = A[i] & A[i + 1]\n        v1 = v\n        vi = i + 1\n        for j in range(i, N):\n            v1 = arr[j] & v1\n            arr[j] = max(arr[j], v1)\n            if v1 > v:\n                v = v1\n                vi = j\n            else:\n                break\n        for j in range(i, vi + 1):\n            arr[j] = max(arr[j], v)\n    print(*arr)", "def ans(arr):\n    new_arr = []\n    i = 0\n    while i < len(arr):\n        if i == 0:\n            new_arr.append(arr[i] & arr[i + 1])\n        elif i == len(arr) - 1:\n            new_arr.append(arr[i] & arr[i - 1])\n        else:\n            new_arr.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n        i += 1\n    return new_arr\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = input()\n    d2 = list(map(int, input().split()))\n    print(*ans(d2))\n    test_cases -= 1", "def ans(arr):\n    new_arr = []\n    i = 0\n    while i < len(arr):\n        if i == 0:\n            new_arr.append(arr[i] & arr[i + 1])\n        elif i == len(arr) - 1:\n            new_arr.append(arr[i] & arr[i - 1])\n        else:\n            new_arr.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n        i += 1\n    return new_arr\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = input()\n    d2 = list(map(int, input().split()))\n    print(*ans(d2))\n    test_cases -= 1", "def ans(arr):\n    new_arr = []\n    i = 0\n    while i < len(arr):\n        if i == 0:\n            new_arr.append(arr[i] & arr[i + 1])\n        elif i == len(arr) - 1:\n            new_arr.append(arr[i] & arr[i - 1])\n        else:\n            new_arr.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n        i += 1\n    return new_arr\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = input()\n    d2 = list(map(int, input().split()))\n    print(*ans(d2))\n    test_cases -= 1", "def ans(arr):\n    new_arr = []\n    i = 0\n    while i < len(arr):\n        if i == 0:\n            new_arr.append(arr[i] & arr[i + 1])\n        elif i == len(arr) - 1:\n            new_arr.append(arr[i] & arr[i - 1])\n        else:\n            new_arr.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n        i += 1\n    return new_arr\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = input()\n    d2 = list(map(int, input().split()))\n    print(*ans(d2))\n    test_cases -= 1", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ans = list()\n    nm = 0\n    for i in range(n):\n        if i == 0:\n            nm = lst[0] & lst[1]\n        elif i == n - 1:\n            nm = lst[i] & lst[i - 1]\n        else:\n            nm = max(lst[i] & lst[i - 1], lst[i] & lst[i + 1])\n        ans.append(nm)\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ans = list()\n    nm = 0\n    for i in range(n):\n        if i == 0:\n            nm = lst[0] & lst[1]\n        elif i == n - 1:\n            nm = lst[i] & lst[i - 1]\n        else:\n            nm = max(lst[i] & lst[i - 1], lst[i] & lst[i + 1])\n        ans.append(nm)\n    print(*ans)", "def integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\n\ndef solve():\n    res = print(lst[0] & lst[1], end=' ')\n    for i in range(1, n - 1):\n        xafter = lst[i] & lst[i + 1]\n        xprev = lst[i] & lst[i - 1]\n        if xafter < xprev:\n            print(xprev, end=' ')\n        else:\n            print(xafter, end=' ')\n    print(lst[-2] & lst[-1])\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = integer_list()\n    solve()", "def integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\n\ndef solve():\n    res = print(lst[0] & lst[1], end=' ')\n    for i in range(1, n - 1):\n        xafter = lst[i] & lst[i + 1]\n        xprev = lst[i] & lst[i - 1]\n        if xafter < xprev:\n            print(xprev, end=' ')\n        else:\n            print(xafter, end=' ')\n    print(lst[-2] & lst[-1])\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = integer_list()\n    solve()", "def integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\nimport math\nfrom collections import Counter\n\ndef solve():\n    res = [lst[0] & lst[1]]\n    for i in range(1, n - 1):\n        xafter = lst[i] & lst[i + 1]\n        xprev = lst[i] & lst[i - 1]\n        if xafter < xprev:\n            res.append(xprev)\n        else:\n            res.append(xafter)\n    res.append(lst[-2] & lst[-1])\n    print(*res)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = integer_list()\n    solve()", "def ans(arr):\n    new_arr = []\n    i = 0\n    while i < len(arr):\n        if i == 0:\n            new_arr.append(arr[i] & arr[i + 1])\n        elif i == len(arr) - 1:\n            new_arr.append(arr[i] & arr[i - 1])\n        else:\n            new_arr.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n        i += 1\n    return new_arr\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = input()\n    d2 = list(map(int, input().split()))\n    print(*ans(d2))\n    test_cases -= 1", "def ans(arr):\n    new_arr = []\n    i = 0\n    while i < len(arr):\n        if i == 0:\n            new_arr.append(arr[i] & arr[i + 1])\n        elif i == len(arr) - 1:\n            new_arr.append(arr[i] & arr[i - 1])\n        else:\n            new_arr.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n        i += 1\n    return new_arr\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = input()\n    d2 = list(map(int, input().split()))\n    print(*ans(d2))\n    test_cases -= 1", "def ans(arr):\n    new_arr = []\n    i = 0\n    while i < len(arr):\n        if i == 0:\n            new_arr.append(arr[i] & arr[i + 1])\n        elif i == len(arr) - 1:\n            new_arr.append(arr[i] & arr[i - 1])\n        else:\n            new_arr.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n        i += 1\n    return new_arr\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = input()\n    d2 = list(map(int, input().split()))\n    print(*ans(d2))\n    test_cases -= 1", "def ans(arr):\n    new_arr = []\n    i = 0\n    while i < len(arr):\n        if i == 0:\n            new_arr.append(arr[i] & arr[i + 1])\n        elif i == len(arr) - 1:\n            new_arr.append(arr[i] & arr[i - 1])\n        else:\n            new_arr.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n        i += 1\n    return new_arr\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = input()\n    d2 = list(map(int, input().split()))\n    print(*ans(d2))\n    test_cases -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    ans[0] = arr[0] & arr[1]\n    ans[n - 1] = arr[n - 1] & arr[n - 2]\n    for i in range(1, n - 1):\n        ans[i] = max(arr[i] & arr[i + 1], arr[i] & arr[i - 1])\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    ans[0] = arr[0] & arr[1]\n    ans[n - 1] = arr[n - 1] & arr[n - 2]\n    for i in range(1, n - 1):\n        ans[i] = max(arr[i] & arr[i + 1], arr[i] & arr[i - 1])\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    ans[0] = arr[0] & arr[1]\n    ans[n - 1] = arr[n - 1] & arr[n - 2]\n    for i in range(1, n - 1):\n        ans[i] = max(arr[i] & arr[i + 1], arr[i] & arr[i - 1])\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    ans[0] = arr[0] & arr[1]\n    ans[n - 1] = arr[n - 1] & arr[n - 2]\n    for i in range(1, n - 1):\n        ans[i] = max(arr[i] & arr[i + 1], arr[i] & arr[i - 1])\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    ans[0] = arr[0] & arr[1]\n    ans[n - 1] = arr[n - 1] & arr[n - 2]\n    for i in range(1, n - 1):\n        ans[i] = max(arr[i] & arr[i + 1], arr[i] & arr[i - 1])\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    ans[0] = arr[0] & arr[1]\n    ans[n - 1] = arr[n - 1] & arr[n - 2]\n    for i in range(1, n - 1):\n        ans[i] = max(arr[i] & arr[i + 1], arr[i] & arr[i - 1])\n    print(*ans)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().split()))\n    for i in range(n):\n        if i == 0:\n            print(arr[0] & arr[1], sep='', end=' ')\n        elif i == n - 1:\n            print(arr[n - 2] & arr[n - 1], sep='', end=' ')\n        else:\n            print(max(arr[i] & arr[i + 1], arr[i] & arr[i - 1]), sep='', end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        if i == 0:\n            print(a[i] & a[i + 1], end=' ')\n        elif i == n - 1:\n            print(a[i] & a[i - 1])\n        else:\n            print(max(a[i] & a[i + 1], a[i] & a[i - 1]), end=' ')", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = []\n    for i in range(n):\n        if i == 0:\n            print(arr[0] & arr[1], end=' ')\n        elif i == n - 1:\n            print(arr[n - 1] & arr[n - 2], end=' ')\n        else:\n            print(max(arr[i] & arr[i + 1], arr[i] & arr[i - 1]), end=' ')\n    print()", "T = int(input())\nwhile T:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        if i == 0:\n            print(arr[i] & arr[i + 1], end=' ')\n            continue\n        if i == n - 1:\n            print(arr[i] & arr[i - 1], end=' ')\n            continue\n        print(max(arr[i] & arr[i + 1], arr[i] & arr[i - 1]), end=' ')\n    print()\n    T -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        if i == 0:\n            print(arr[i] & arr[i + 1], end=' ')\n            continue\n        if i == n - 1:\n            print(arr[i] & arr[i - 1], end=' ')\n            continue\n        print(max(arr[i] & arr[i + 1], arr[i] & arr[i - 1]), end=' ')\n    print()\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input().split(' ')\n    b = []\n    x = int(a[0]) & int(a[1])\n    y = int(a[n - 2]) & int(a[n - 1])\n    b.insert(0, x)\n    b.insert(n - 1, y)\n    for j in range(1, n - 1):\n        c = int(a[j - 1]) & int(a[j])\n        d = int(a[j]) & int(a[j + 1])\n        e = max(c, d)\n        b.insert(j, e)\n    g = ' '.join((str(element) for element in b))\n    print(g)", "for _ in range(int(input())):\n    n = int(input())\n    A = [int(i) for i in input().strip().split(' ')]\n    ans = []\n    for i in range(n):\n        if i == 0:\n            ans.append(A[i] & A[i + 1])\n        elif i == n - 1:\n            ans.append(A[i] & A[i - 1])\n        else:\n            ans.append(max(A[i] & A[i + 1], A[i] & A[i - 1]))\n    for ele in ans:\n        print(ele, end=' ')\n    print('')", "for _ in range(int(input())):\n    n = int(input())\n    A = [int(i) for i in input().strip().split(' ')]\n    ans = []\n    for i in range(n):\n        if i == 0:\n            ans.append(A[i] & A[i + 1])\n        elif i == n - 1:\n            ans.append(A[i] & A[i - 1])\n        else:\n            ans.append(max(A[i] & A[i + 1], A[i] & A[i - 1]))\n    for ele in ans:\n        print(ele, end=' ')\n    print('')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    for i in range(len(a)):\n        if i == 0:\n            print(a[i] & a[i + 1], end=' ')\n            continue\n        if i == n - 1:\n            print(a[i] & a[i - 1], end=' ')\n            continue\n        print(max(a[i] & a[i + 1], a[i] & a[i - 1]), end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    for i in range(0, n):\n        if i == 0:\n            print(lst[i] & lst[i + 1], end=' ')\n            continue\n        elif i == n - 1:\n            print(lst[i] & lst[i - 1])\n            continue\n        print(max(lst[i] & lst[i + 1], lst[i] & lst[i - 1]), end=' ')", "def solve(A, N):\n    ans = [0] * N\n    ans[0] = A[0] & A[1]\n    ans[N - 1] = A[N - 1] & A[N - 2]\n    for i in range(1, N - 1):\n        ans[i] = max(A[i] & A[i + 1], A[i] & A[i - 1])\n    for i in ans:\n        print(i, end=' ')\n    print()\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    solve(A, N)", "def solve(A, N):\n    ans = [0] * N\n    ans[0] = A[0] & A[1]\n    ans[N - 1] = A[N - 1] & A[N - 2]\n    for i in range(1, N - 1):\n        ans[i] = max(A[i] & A[i + 1], A[i] & A[i - 1])\n    for i in ans:\n        print(i, end=' ')\n    print()\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    solve(A, N)", "for _ in range(int(input())):\n    n = int(input())\n    ele = list(map(int, input().split()))\n    for i in range(n):\n        if i == 0:\n            print(ele[i] & ele[i + 1], end=' ')\n        elif i == n - 1:\n            print(ele[i] & ele[i - 1], end=' ')\n        else:\n            print(max(ele[i] & ele[i - 1], ele[i] & ele[i + 1]), end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        (t, t1) = (0, 0)\n        if i - 1 >= 0:\n            t = l[i] & l[i - 1]\n        if i + 1 < n:\n            t1 = l[i] & l[i + 1]\n        print(max(t, t1), end=' ')\n    print()", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = []\n    for i in range(0, n):\n        if i == 0:\n            ans.append(l[i] & l[i + 1])\n        elif i == n - 1:\n            ans.append(l[i] & l[i - 1])\n        else:\n            p = 0\n            p = max(l[i] & l[i + 1], l[i] & l[i - 1])\n            ans.append(p)\n    print(*ans[0:])", "T = int(input())\nfor m in range(T):\n    n = [int(X) for X in input().split()]\n    arr = [int(X) for X in input().split()]\n    left = 0\n    right = 0\n    for i in range(n[0]):\n        if i - 1 >= 0:\n            left = arr[i] & arr[i - 1]\n        if i + 1 < n[0]:\n            right = arr[i] & arr[i + 1]\n        print(max(left, right), end=' ')\n    print()", "case = int(input())\nfor r in range(case):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    for i in range(n):\n        res = 1\n        if i == 0:\n            res = arr[0] & arr[1]\n            print(res, end=' ')\n            continue\n        elif i == n - 1:\n            res = arr[n - 1] & arr[n - 2]\n            print(res, end=' ')\n            continue\n        else:\n            a = arr[i] & arr[i - 1]\n            b = arr[i] & arr[i + 1]\n            print(max(a, b), end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        (t, t1) = (0, 0)\n        if i - 1 >= 0:\n            t = l[i] & l[i - 1]\n        if i + 1 < n:\n            t1 = l[i] & l[i + 1]\n        print(max(t, t1), end=' ')\n    print()", "for _ in range(int(input())):\n    l = int(input())\n    arr = list(map(int, input().strip().split()))\n    for i in range(len(arr)):\n        (ans1, ans2) = (0, 0)\n        if i - 1 >= 0:\n            ans1 = arr[i] & arr[i - 1]\n        if i + 1 < len(arr):\n            ans2 = arr[i] & arr[i + 1]\n        print(max(ans1, ans2), end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = []\n    a = list(map(int, input().split()))\n    c.append(a[0] & a[1])\n    for i in range(1, n - 1):\n        b = a[i] & a[i + 1]\n        e = a[i] & a[i - 1]\n        c.append(max(b, e))\n    c.append(a[n - 1] & a[n - 2])\n    print(*c, sep=' ')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    print(l1[0] & l1[1], end=' ')\n    for i in range(1, n - 1):\n        print(max(l1[i] & l1[i + 1], l1[i] & l1[i - 1]), end=' ')\n    print(l1[n - 1] & l1[n - 2])\n    t = t - 1", "t = int(input())\nwhile t:\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    print(l1[0] & l1[1], end=' ')\n    for i in range(1, n - 1):\n        print(max(l1[i] & l1[i + 1], l1[i] & l1[i - 1]), end=' ')\n    print(l1[n - 1] & l1[n - 2])\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    lst = [int(x) for x in input().split()]\n    print(lst[0] & lst[1], end=' ')\n    for i in range(1, len(lst) - 1):\n        print(max(lst[i] & lst[i + 1], lst[i] & lst[i - 1]), end=' ')\n    print(lst[n - 1] & lst[n - 2])", "for i in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    print(li[0] & li[1], end=' ')\n    for i in range(1, len(li) - 1):\n        print(max(li[i] & li[i + 1], li[i] & li[i - 1]), end=' ')\n    print(li[n - 1] & li[n - 2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    print(A[0] & A[1], end=' ')\n    for i in range(1, n - 1):\n        print(max(A[i] & A[i - 1], A[i] & A[i + 1]), end=' ')\n    print(A[n - 1] & A[n - 2])", "for _ in range(int(input())):\n    s = int(input())\n    lst = [int(t) for t in input().split()]\n    print(lst[0] & lst[1], end=' ')\n    for j in range(1, s - 1):\n        print(max(lst[j] & lst[j - 1], lst[j] & lst[j + 1]), end=' ')\n    print(lst[s - 1] & lst[s - 2])", "try:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        coal = list(map(int, input().split()))\n        arr = []\n        arr.append(coal[0] & coal[1])\n        for i in range(1, n - 1):\n            maxx = max(coal[i] & coal[i - 1], coal[i] & coal[i + 1])\n            arr.append(maxx)\n        arr.append(coal[n - 1] & coal[n - 2])\n        print(*arr)\nexcept:\n    pass", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        res = []\n        res = [a[0] & a[1]]\n        for i in range(1, n - 1, 1):\n            ans = max(a[i] & a[i - 1], a[i] & a[i + 1])\n            res.append(ans)\n        res.append(a[-1] & a[-2])\n        print(*res)\nexcept:\n    pass", "t = int(input())\nfor p in range(t):\n    q = int(input())\n    b = list(map(int, input().split()))\n    b.insert(0, 0)\n    b.append(0)\n    n = len(b)\n    a = b[1] & b[2]\n    for i in range(1, len(b) - 1):\n        d = a\n        a = b[i] & b[i + 1]\n        if d > a:\n            print(d, end=' ')\n        else:\n            print(a, end=' ')\n    print()", "t = int(input())\nfor p in range(t):\n    q = int(input())\n    b = list(map(int, input().split()))\n    n = len(b)\n    for i in range(n):\n        val = 0\n        if i > 0:\n            val = max(val, b[i] & b[i - 1])\n        if i < n - 1:\n            val = max(val, b[i] & b[i + 1])\n        print(val, end=' ')\n    print()", "tt = int(input())\nfor _ in range(tt):\n    N = int(input())\n    n1 = list(map(int, input().split()))\n    u = len(n1)\n    t = []\n    n1.insert(0, 0)\n    for i in range(1, u):\n        an = max(n1[i] & n1[i + 1], n1[i] & n1[i - 1])\n        t.append(an)\n    t.append(n1[-2] & n1[-1])\n    print(*t)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        if i == 0:\n            print(arr[0] & arr[1], end=' ')\n            continue\n        if i == n - 1:\n            print(arr[-1] & arr[-2], end=' ')\n            continue\n        print(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]), end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.insert(0, 0)\n    arr.append(0)\n    for i in range(1, n + 1):\n        print(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]), end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.insert(0, 0)\n    arr.append(0)\n    for i in range(1, n + 1):\n        print(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]), end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.insert(0, 0)\n    arr.append(0)\n    for i in range(1, n + 1):\n        print(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]), end=' ')\n    print()", "try:\n    times = int(input())\n    for i in range(times):\n        x = int(input())\n        arr = list(map(int, input().split(' ')))\n        maximum = 1\n        n = len(arr)\n        print(arr[0] & arr[1], end=' ')\n        for i in range(1, n - 1):\n            maxi = max(arr[i] & arr[i - 1], arr[i] & arr[i + 1])\n            print(maxi, end=' ')\n        print(arr[n - 2] & arr[n - 1])\nexcept:\n    pass", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l[0] & l[1], end=' ')\n    for i in range(1, n - 1):\n        print(max(l[i] & l[i - 1], l[i] & l[i + 1]), end=' ')\n    print(l[n - 2] & l[n - 1])", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.insert(0, 0)\n    arr.append(0)\n    for i in range(1, n + 1):\n        print(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]), end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [a[0] & a[1]]\n    for i in range(1, n - 1):\n        ans.append(max(a[i] & a[i - 1], a[i] & a[i + 1]))\n    ans.append(a[-1] & a[-2])\n    for i in ans:\n        print(i, end=' ')\n    print()", "import sys, functools, collections, heapq\ninput = lambda : sys.stdin.readline()\nalp = 'abcdefghijklmnopqrstuvwxyz'\n\ndef isValidIndex(x, y, n):\n    return x >= 0 and x < n and (y >= 0) and (y < n)\n\nclass ListOverride(list):\n\n    def __lt__(self, other):\n        return self[1] < other[1]\n\nclass Solution:\n\n    def minimumCostPath(self, grid):\n        (dx, dy, n) = ([0, 0, -1, 1], [-1, 1, 0, 0], len(grid))\n        dist = [[10 ** 9] * n for i in range(n)]\n        (dist[0][0], visited, minheap) = (grid[0][0], set(), list())\n        heapq.heappush(minheap, ListOverride([(0, 0), grid[0][0]]))\n        while len(minheap) > 0:\n            pt_cost = heapq.heappop(minheap)\n            if pt_cost[0] not in visited:\n                visited.add(pt_cost[0])\n                (x, y) = pt_cost[0]\n                for i in range(4):\n                    (x1, y1) = (x + dx[i], y + dy[i])\n                    if isValidIndex(x1, y1, n):\n                        if dist[x1][y1] > pt_cost[1] + grid[x1][y1]:\n                            dist[x1][y1] = pt_cost[1] + grid[x1][y1]\n                            heapq.heappush(minheap, ListOverride([(x1, y1), dist[x1][y1]]))\n        return dist[n - 1][n - 1]\n\n    def minPathSum(self, arr):\n        (m, n) = (len(arr), len(arr[0]))\n        sol = [[0] * n for r in range(m)]\n        sol[0][0] = arr[0][0]\n        for i in range(1, n):\n            sol[0][i] = arr[0][i] + sol[0][i - 1]\n        for i in range(1, m):\n            sol[i][0] = arr[i][0] + sol[i - 1][0]\n        for i in range(1, m):\n            for j in range(1, n):\n                sol[i][j] = arr[i][j] + min(sol[i - 1][j], sol[i][j - 1])\n        return sol[m - 1][n - 1]\n\n    def uniquePaths(self, r, c):\n        dp = [[None for i in range(c)] for j in range(r)]\n        for j in range(c):\n            dp[0][j] = 1\n        for i in range(r):\n            dp[i][0] = 1\n        for i in range(1, r):\n            for j in range(1, c):\n                dp[i][j] = dp[i][j - 1] + dp[i - 1][j]\n        return dp[r - 1][c - 1]\n\n    def lengthOfLIS(self, arr):\n        n = len(arr)\n        ans = [1] * n\n        for i in range(1, n):\n            subans = [ans[k] for k in range(i) if arr[k] < arr[i]]\n            ans[i] = 1 + max(subans, default=0)\n        return max(ans, default=0)\n\n    def knapSack01(self, W, wt, val, n):\n        dp = [0 for i in range(W + 1)]\n        for i in range(1, n + 1):\n            for w in range(W, 0, -1):\n                if wt[i - 1] <= W:\n                    dp[w] = max(dp[w], dp[w - wt[i - 1]] + val[i - 1])\n        return dp[W]\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(1, n + 1):\n        res = -1000000000000000.0\n        if i - 2 >= 0:\n            res = max(res, a[i - 1] & a[i - 2])\n        if i < n:\n            res = max(res, a[i - 1] & a[i])\n        print(res, end=' ')\n    print()\n\ndef main():\n    tcs = int(input())\n    for tc in range(tcs):\n        solve()\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l[0] & l[1], end=' ')\n    for i in range(1, n - 1):\n        print(max(l[i] & l[i - 1], l[i] & l[i + 1]), end=' ')\n    print(l[n - 2] & l[n - 1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l[0] & l[1], end=' ')\n    for i in range(1, n - 1):\n        print(max(l[i] & l[i - 1], l[i] & l[i + 1]), end=' ')\n    print(l[n - 1] & l[n - 2])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = []\n    for i in range(n):\n        if i == 0:\n            ans.append(a[i] & a[i + 1])\n        elif i == n - 1:\n            ans.append(a[i] & a[i - 1])\n        else:\n            ans.append(max(a[i] & a[i - 1], a[i] & a[i + 1]))\n    print(*ans)", "import sys\n\ndef solve(n, values):\n    for i in range(n):\n        val = 0\n        if i > 0:\n            val = max(val, values[i] & values[i - 1])\n        if i < n - 1:\n            val = max(val, values[i] & values[i + 1])\n        print(val, end=' ')\n    print()\n\ndef main():\n    test_case = int(sys.stdin.readline())\n    for tc in range(test_case):\n        n = int(sys.stdin.readline())\n        values = [int(a) for a in sys.stdin.readline().split()]\n        solve(n, values)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        if i == 0:\n            l.append(a[i] & a[i + 1])\n        elif i == n - 1:\n            l.append(a[i] & a[i - 1])\n        else:\n            l.append(max(a[i] & a[i - 1], a[i] & a[i + 1]))\n    print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = []\n    res.append(arr[0] & arr[1])\n    for i in range(1, n - 1):\n        res.append(max(arr[i] & arr[i + 1], arr[i] & arr[i - 1]))\n    res.append(arr[-1] & arr[-2])\n    print(*res)", "try:\n    for i in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(a[0] & a[1], end=' ')\n        for i in range(1, n - 1):\n            print(max(a[i] & a[i - 1], a[i] & a[i + 1]), end=' ')\n        print(a[n - 1] & a[n - 2])\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(arr[0] & arr[1], end=' ')\n    for i in range(1, n - 1):\n        print(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]), end=' ')\n    print(arr[-1] & arr[-2])", "for q in range(int(input())):\n    n = int(input())\n    li = [int(x) for x in input().split()]\n    for i in range(n):\n        if i == 0:\n            print(li[i] & li[i + 1], end=' ')\n        elif i == n - 1:\n            print(li[i - 1] & li[i], end=' ')\n        else:\n            print(max(li[i] & li[i + 1], li[i - 1] & li[i]), end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    input()\n    xs = [int(w) for w in input().strip().split(' ')]\n    ans = []\n    for (i, x) in enumerate(xs):\n        if i == 0:\n            ans.append(x & xs[1])\n        elif i == len(xs) - 1:\n            ans.append(x & xs[i - 1])\n        else:\n            ans.append(max(x & xs[i - 1], x & xs[i + 1]))\n    print(' '.join([str(v) for v in ans]))", "for _ in range(int(input())):\n    n = int(input())\n    c = [int(x) for x in input().split()]\n    for i in range(n):\n        if i == 0:\n            print(c[i] & c[i + 1], end=' ')\n        elif i == n - 1:\n            print(c[i - 1] & c[i])\n        else:\n            print(max(c[i] & c[i + 1], c[i - 1] & c[i]), end=' ')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0 for i in range(n)]\n    ans[0] = a[0] & a[1]\n    ans[-1] = a[-1] & a[-2]\n    for i in range(1, n - 1):\n        ans[i] = max(a[i] & a[i - 1], a[i] & a[i + 1])\n    print(*ans)", "def maxDamage(n):\n    global e\n    if n == 0:\n        return a[0] & a[1]\n    elif n == len(a) - 1:\n        return a[n] & a[n - 1]\n    else:\n        return max(a[n] & a[n - 1], a[n] & a[n + 1])\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = []\n    for i in range(len(a)):\n        maxi = maxDamage(i)\n        res.append(maxi)\n    print(*res)", "try:\n    t = int(input())\n    while t != 0:\n        n = int(input())\n        arr = [int(i) for i in input().split()]\n        s = []\n        s.append(arr[0] & arr[1])\n        for i in range(1, len(arr) - 1):\n            s.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n        s.append(arr[-1] & arr[-2])\n        print(*s)\n        t -= 1\nexcept EOFError:\n    pass", "from itertools import permutations as per\nfrom math import factorial as fact\nfrom difflib import SequenceMatcher\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [0] + [int(i) for i in input().split()] + [0]\n    for i in range(1, n + 1):\n        print(max(a[i] & a[i - 1], a[i] & a[i + 1]), end=' ')\n    print()", "for _ in range(int(input())):\n    (n, l) = (int(input()), list(map(int, input().split())))\n    l1 = []\n    for x in range(n):\n        if x == 0:\n            l1.append(l[x] & l[x + 1])\n        elif x == n - 1:\n            l1.append(l[x] & l[x - 1])\n        else:\n            l1.append(max(l[x] & l[x + 1], l[x] & l[x - 1]))\n    print(*l1)", "def DhuaDhua(c, n):\n    if n == 0:\n        return c[0] & c[1]\n    elif n == len(c) - 1:\n        return c[n] & c[n - 1]\n    else:\n        return max(c[n] & c[n - 1], c[n] & c[n + 1])\nfor _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    ans = []\n    for i in range(n):\n        ans.append(DhuaDhua(c, i))\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = []\n    for i in range(n):\n        if i == 0:\n            ans.append(arr[i] & arr[i + 1])\n        elif i == n - 1:\n            ans.append(arr[i] & arr[i - 1])\n        else:\n            ans.append(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]))\n    print(*ans)", "for _ in range(int(input())):\n    m = int(input())\n    a = list(map(int, input().split()))\n    for n in range(m):\n        if n == 0:\n            print(a[0] & a[1], end=' ')\n        elif n == len(a) - 1:\n            print(a[n] & a[n - 1], end=' ')\n        else:\n            print(max(a[n] & a[n - 1], a[n] & a[n + 1]), end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    if n == 2:\n        print(arr[0] & arr[1])\n        continue\n    print(arr[0] & arr[1], end=' ')\n    for i in range(1, len(arr) - 1):\n        print(max(arr[i] & arr[i - 1], arr[i] & arr[i + 1]), end=' ')\n    print(arr[len(arr) - 1] & arr[len(arr) - 2])", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    o = []\n    o.append(arr[0] & arr[1])\n    for i in range(1, len(arr) - 1):\n        o.append(max(arr[i] & arr[i + 1], arr[i] & arr[i - 1]))\n    o.append(arr[-1] & arr[-2])\n    print(*o)", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    l = list(map(int, input().strip().split(' ')))\n    if k == 2:\n        print(l[0] & l[1])\n        continue\n    print(l[0] & l[1], end=' ')\n    for i in range(1, len(l) - 1):\n        print(max(l[i] & l[i - 1], l[i] & l[i + 1]), end=' ')\n    print(l[len(l) - 1] & l[len(l) - 2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, list(input().split())))\n    b = len(l)\n    for i in range(b):\n        if i == 0:\n            print(l[i] & l[i + 1], end=' ')\n        elif i != b - 1:\n            v = l[i] & l[i + 1]\n            k = l[i] & l[i - 1]\n            if v > k:\n                print(v, end=' ')\n            else:\n                print(k, end=' ')\n        else:\n            print(l[i] & l[i - 1], end=' ')\n    print()", "for _ in range(int(input())):\n    (_, l, res, ps) = (int(input()), [int(x) for x in input().split()], [], 0)\n    for x in range(_ - 1):\n        (sol, ps) = (res.append(max(ps, l[x] & l[x + 1])), l[x] & l[x + 1])\n    print(*res + [l[x] & l[x + 1]])", "for _ in range(int(input())):\n    (_, l, res, ps) = (int(input()), [int(x) for x in input().split()], [], 0)\n    for x in range(_ - 1):\n        (sol, ps) = (res.append(max(ps, l[x] & l[x + 1])), l[x] & l[x + 1])\n    print(*res + [l[x] & l[x + 1]])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if i == 0:\n            print(l[0] & l[1], end=' ')\n        elif i == n - 1:\n            print(l[i] & l[i - 1], end=' ')\n        else:\n            print(max(l[i] & l[i - 1], l[i] & l[i + 1]), end=' ')\n    print()", "def func(arr, N):\n    ans = [0 for i in range(N)]\n    ans[0] = arr[0] & arr[1]\n    for i in range(1, N - 1):\n        ans[i] = max(arr[i] & arr[i + 1], arr[i] & arr[i - 1])\n    ans[-1] = arr[N - 1] & arr[N - 2]\n    return ans\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    print(*func(arr, N))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = []\n    for i in range(n):\n        l = 0\n        g = 0\n        if i > 0:\n            l = arr[i] & arr[i - 1]\n        if i < n - 1:\n            g = arr[i] & arr[i + 1]\n        ans.append(max(l, g))\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    ans = []\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        if i == 0:\n            ans.append(arr[i] & arr[i + 1])\n        elif i == n - 1:\n            ans.append(arr[i] & arr[i - 1])\n        else:\n            ans.append(max(arr[i] & arr[i + 1], arr[i] & arr[i - 1]))\n    print(*ans)", "for _ in range(int(input())):\n    no_of_ele = int(input())\n    arr = list(map(int, input().split()))\n    output_arr = []\n    output_arr.append(arr[0] & arr[1])\n    for i in range(1, len(arr) - 1):\n        output_arr.append(max(arr[i] & arr[i + 1], arr[i] & arr[i - 1]))\n    output_arr.append(arr[-1] & arr[-2])\n    print(*output_arr)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a[0] & a[1], end=' ')\n    for i in range(1, len(a) - 1):\n        print(max(a[i] & a[i + 1], a[i] & a[i - 1]), end=' ')\n    print(a[n - 1] & a[n - 2], end='')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(len(a)):\n        s = 0\n        if i > 0:\n            s = max(s, a[i] & a[i - 1])\n        if i < n - 1:\n            s = max(s, a[i] & a[i + 1])\n        print(s, end=' ')\n    print('')"]