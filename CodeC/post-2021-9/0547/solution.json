["from collections import Counter\nfor t in range(int(input())):\n    (NN, MM) = map(int, input().split(' '))\n    Ts = list(map(int, input().split(' ')))\n    Cs = list(map(int, input().split(' ')))\n    inc = 0\n    next_c = [Ts[inc], Cs[inc]]\n    master = Counter({0: 0})\n    for it in range(1, NN + 1):\n        new_master = Counter()\n        for m in master:\n            new_master[m + 1] = max(new_master[m + 1], master[m])\n            new_master[m - 1] = max(new_master[m - 1], master[m])\n        master = {i: new_master[i] for i in new_master if abs(i) <= 5}\n        if next_c[0] == it:\n            new_master = Counter()\n            for m in master:\n                if next_c[1] == 1:\n                    if m > 0:\n                        new_master[m] = max(new_master[m], master[m] + 1)\n                    else:\n                        new_master[0] = max(new_master[0], master[m])\n                elif m < 0:\n                    new_master[m] = max(new_master[m], master[m] + 1)\n                else:\n                    new_master[0] = max(new_master[0], master[m])\n            master = new_master\n            inc += 1\n            if inc < MM:\n                next_c = [Ts[inc], Cs[inc]]\n    lst = [master[i] for i in master]\n    print(max(lst))", "from collections import Counter\nfor t in range(int(input())):\n    (NN, MM) = map(int, input().split(' '))\n    Ts = list(map(int, input().split(' ')))\n    Cs = list(map(int, input().split(' ')))\n    inc = 0\n    next_c = [Ts[inc], Cs[inc]]\n    master = Counter({0: 0})\n    for it in range(1, NN + 1):\n        new_master = Counter()\n        for m in master:\n            new_master[m + 1] = max(new_master[m + 1], master[m])\n            new_master[m - 1] = max(new_master[m - 1], master[m])\n        master = {i: new_master[i] for i in new_master if abs(i) <= 5}\n        if next_c[0] == it:\n            new_master = Counter()\n            for m in master:\n                if next_c[1] == 1:\n                    if m > 0:\n                        new_master[m] = max(new_master[m], master[m] + 1)\n                    else:\n                        new_master[0] = max(new_master[0], master[m])\n                elif m < 0:\n                    new_master[m] = max(new_master[m], master[m] + 1)\n                else:\n                    new_master[0] = max(new_master[0], master[m])\n            master = new_master\n            inc += 1\n            if inc < MM:\n                next_c = [Ts[inc], Cs[inc]]\n    lst = [master[i] for i in master]\n    print(max(lst))", "from collections import Counter\nfor t in range(int(input())):\n    (NN, MM) = map(int, input().split(' '))\n    Ts = list(map(int, input().split(' ')))\n    Cs = list(map(int, input().split(' ')))\n    inc = 0\n    next_c = [Ts[inc], Cs[inc]]\n    master = Counter({0: 0})\n    for it in range(1, NN + 1):\n        new_master = Counter()\n        for m in master:\n            new_master[m + 1] = max(new_master[m + 1], master[m])\n            new_master[m - 1] = max(new_master[m - 1], master[m])\n        master = {i: new_master[i] for i in new_master if abs(i) <= 5}\n        if next_c[0] == it:\n            new_master = Counter()\n            for m in master:\n                if next_c[1] == 1:\n                    if m > 0:\n                        new_master[m] = max(new_master[m], master[m] + 1)\n                    else:\n                        new_master[0] = max(new_master[0], master[m])\n                elif m < 0:\n                    new_master[m] = max(new_master[m], master[m] + 1)\n                else:\n                    new_master[0] = max(new_master[0], master[m])\n            master = new_master\n            inc += 1\n            if inc < MM:\n                next_c = [Ts[inc], Cs[inc]]\n    lst = [master[i] for i in master]\n    print(max(lst))", "for _ in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    n = n + 1\n    t = [int(i) for i in input().split()]\n    c = [int(i) for i in input().split()]\n    C = {}\n    for i in range(m):\n        C[t[i] + 1] = c[i]\n    dp = [[-1000000000.0 for i in range(5)] for j in range(n + 1)]\n    dp[0][2] = 0\n    for i in range(1, n + 1):\n        if i in C:\n            if C[i] == 1:\n                dp[i][0] = -1000000000.0\n                dp[i][1] = max(dp[i - 1][2], dp[i - 1][1], dp[i - 1][0])\n                dp[i][2] = dp[i - 1][3] + 1\n                dp[i][3] = max(dp[i - 1][2], dp[i - 1][1], dp[i - 1][0], dp[i - 1][4] + 1)\n                dp[i][4] = dp[i - 1][3] + 1\n            else:\n                dp[i][4] = -1000000000.0\n                dp[i][3] = max(dp[i - 1][2], dp[i - 1][3], dp[i - 1][4])\n                dp[i][2] = dp[i - 1][1] + 1\n                dp[i][1] = max(dp[i - 1][2], dp[i - 1][3], dp[i - 1][4], dp[i - 1][0] + 1)\n                dp[i][0] = dp[i - 1][1] + 1\n        else:\n            for j in range(5):\n                lst = []\n                if j - 1 >= 0:\n                    lst.append(dp[i - 1][j - 1])\n                if j + 1 <= 4:\n                    lst.append(dp[i - 1][j + 1])\n                dp[i][j] = max(lst)\n    print(max(dp[n]))", "inf = 10 ** 9\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    times = list(map(int, input().split()))\n    types = list(map(int, input().split()))\n    dp = [[-inf, -inf, -inf, -inf, -inf] for _ in range(n + 2)]\n    dp[0][2] = 0\n    ptr = 0\n    for i in range(1, n + 1):\n        for dif in range(5):\n            if dif > 0:\n                dp[i][dif] = max(dp[i][dif], dp[i - 1][dif - 1])\n            if dif < 4:\n                dp[i][dif] = max(dp[i][dif], dp[i - 1][dif + 1])\n        if ptr < m and times[ptr] == i:\n            if types[ptr] == 1:\n                dp[i][4] += 1\n                dp[i][3] += 1\n                dp[i][2] = max(dp[i][:3])\n                dp[i][0] = -inf\n                dp[i][1] = -inf\n            else:\n                dp[i][0] += 1\n                dp[i][1] += 1\n                dp[i][2] = max(dp[i][2:])\n                dp[i][3] = -inf\n                dp[i][4] = -inf\n            ptr += 1\n    print(max(dp[n]))", "for _ in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    n = n + 1\n    t = [int(i) for i in input().split()]\n    c = [int(i) for i in input().split()]\n    C = {}\n    for i in range(m):\n        C[t[i] + 1] = c[i]\n    dp = [[-1000000000.0 for i in range(5)] for j in range(n + 1)]\n    dp[0][2] = 0\n    for i in range(1, n + 1):\n        if i in C:\n            if C[i] == 1:\n                dp[i][0] = -1000000000.0\n                dp[i][1] = max(dp[i - 1][2], dp[i - 1][1], dp[i - 1][0])\n                dp[i][2] = dp[i - 1][3] + 1\n                dp[i][3] = max(dp[i - 1][2], dp[i - 1][1], dp[i - 1][0], dp[i - 1][4] + 1)\n                dp[i][4] = dp[i - 1][3] + 1\n            else:\n                dp[i][4] = -1000000000.0\n                dp[i][3] = max(dp[i - 1][2], dp[i - 1][3], dp[i - 1][4])\n                dp[i][2] = dp[i - 1][1] + 1\n                dp[i][1] = max(dp[i - 1][2], dp[i - 1][3], dp[i - 1][4], dp[i - 1][0] + 1)\n                dp[i][0] = dp[i - 1][1] + 1\n        else:\n            for j in range(5):\n                lst = []\n                if j - 1 >= 0:\n                    lst.append(dp[i - 1][j - 1])\n                if j + 1 <= 4:\n                    lst.append(dp[i - 1][j + 1])\n                dp[i][j] = max(lst)\n    print(max(dp[n]))", "from collections import Counter\nfor t in range(int(input())):\n    (NN, MM) = map(int, input().split(' '))\n    Ts = list(map(int, input().split(' ')))\n    Cs = list(map(int, input().split(' ')))\n    inc = 0\n    next_c = [Ts[inc], Cs[inc]]\n    master = Counter({0: 0})\n    for it in range(1, NN + 1):\n        new_master = Counter()\n        for m in master:\n            new_master[m + 1] = max(new_master[m + 1], master[m])\n            new_master[m - 1] = max(new_master[m - 1], master[m])\n        master = {i: new_master[i] for i in new_master if abs(i) <= 5}\n        if next_c[0] == it:\n            new_master = Counter()\n            for m in master:\n                if next_c[1] == 1:\n                    if m > 0:\n                        new_master[m] = max(new_master[m], master[m] + 1)\n                    else:\n                        new_master[0] = max(new_master[0], master[m])\n                elif m < 0:\n                    new_master[m] = max(new_master[m], master[m] + 1)\n                else:\n                    new_master[0] = max(new_master[0], master[m])\n            master = new_master\n            inc += 1\n            if inc < MM:\n                next_c = [Ts[inc], Cs[inc]]\n    lst = [master[i] for i in master]\n    print(max(lst))", "inf = 10 ** 9\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    times = list(map(int, input().split()))\n    types = list(map(int, input().split()))\n    dp = [[-inf, -inf, -inf, -inf, -inf] for _ in range(n + 2)]\n    dp[0][2] = 0\n    ptr = 0\n    for i in range(1, n + 1):\n        for dif in range(5):\n            if dif > 0:\n                dp[i][dif] = dp[i - 1][dif - 1]\n            if dif < 4:\n                dp[i][dif] = max(dp[i][dif], dp[i - 1][dif + 1])\n        if ptr < m and times[ptr] == i:\n            if types[ptr] == 1:\n                dp[i][4] += 1\n                dp[i][3] += 1\n                dp[i][2] = max(dp[i][:3])\n                dp[i][0] = -inf\n                dp[i][1] = -inf\n            else:\n                dp[i][0] += 1\n                dp[i][1] += 1\n                dp[i][2] = max(dp[i][2:])\n                dp[i][3] = -inf\n                dp[i][4] = -inf\n            ptr += 1\n    print(max(dp[n]))", "inf = 10 ** 9\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    times = list(map(int, input().split()))\n    types = list(map(int, input().split()))\n    dp = [[-inf, -inf, -inf, -inf, -inf] for _ in range(n + 2)]\n    dp[0][2] = 0\n    ptr = 0\n    for i in range(1, n + 1):\n        for dif in range(5):\n            if dif > 0:\n                dp[i][dif] = max(dp[i][dif], dp[i - 1][dif - 1])\n            if dif < 4:\n                dp[i][dif] = max(dp[i][dif], dp[i - 1][dif + 1])\n        if ptr < m and times[ptr] == i:\n            if types[ptr] == 1:\n                dp[i][4] += 1\n                dp[i][3] += 1\n                dp[i][2] = max(dp[i][:3])\n                dp[i][0] = -inf\n                dp[i][1] = -inf\n            else:\n                dp[i][0] += 1\n                dp[i][1] += 1\n                dp[i][2] = max(dp[i][2:])\n                dp[i][3] = -inf\n                dp[i][4] = -inf\n            ptr += 1\n    print(max(dp[n]))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    t = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = [[-3, -3, -3, -3, -3] for i in range(n + 1)]\n    d[0][2] = 0\n    idx = 0\n    for i in range(1, n + 1):\n        d[i][0] = max(d[i][0], d[i - 1][1])\n        d[i][1] = max(d[i][1], d[i - 1][0], d[i - 1][2])\n        d[i][2] = max(d[i - 1][1], d[i][2], d[i - 1][3])\n        d[i][3] = max(d[i - 1][2], d[i - 1][4], d[i][3])\n        d[i][4] = max(d[i][4], d[i - 1][3])\n        if idx < m and t[idx] == i:\n            if c[idx] == 1:\n                d[i][4] += 1\n                d[i][3] += 1\n                d[i][2] = max(d[i][2], d[i][1], d[i][0])\n                d[i][1] = -3\n                d[i][0] = -3\n            else:\n                d[i][0] += 1\n                d[i][1] += 1\n                d[i][2] = max(d[i][2], d[i][3], d[i][4])\n                d[i][3] = -3\n                d[i][4] = -3\n            idx += 1\n    print(max(d[n][0], d[n][1], d[n][2], d[n][3], d[n][4]))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    t = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = [[-3, -3, -3, -3, -3] for i in range(n + 1)]\n    d[0][2] = 0\n    idx = 0\n    for i in range(1, n + 1):\n        d[i][0] = max(d[i][0], d[i - 1][1])\n        d[i][1] = max(d[i][1], d[i - 1][0], d[i - 1][2])\n        d[i][2] = max(d[i - 1][1], d[i][2], d[i - 1][3])\n        d[i][3] = max(d[i - 1][2], d[i - 1][4], d[i][3])\n        d[i][4] = max(d[i][4], d[i - 1][3])\n        if idx < m and t[idx] == i:\n            if c[idx] == 1:\n                d[i][4] += 1\n                d[i][3] += 1\n                d[i][2] = max(d[i][2], d[i][1], d[i][0])\n                d[i][1] = -3\n                d[i][0] = -3\n            else:\n                d[i][0] += 1\n                d[i][1] += 1\n                d[i][2] = max(d[i][2], d[i][3], d[i][4])\n                d[i][3] = -3\n                d[i][4] = -3\n            idx += 1\n    print(max(d[n][0], d[n][1], d[n][2], d[n][3], d[n][4]))", "inf = 10 ** 9\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    times = list(map(int, input().split()))\n    types = list(map(int, input().split()))\n    dp = [[-inf, -inf, -inf, -inf, -inf] for _ in range(n + 2)]\n    dp[0][2] = 0\n    ptr = 0\n    for i in range(1, n + 1):\n        for dif in range(5):\n            if dif > 0:\n                dp[i][dif] = max(dp[i][dif], dp[i - 1][dif - 1])\n            if dif < 4:\n                dp[i][dif] = max(dp[i][dif], dp[i - 1][dif + 1])\n        if ptr < m and times[ptr] == i:\n            if types[ptr] == 1:\n                dp[i][4] += 1\n                dp[i][3] += 1\n                dp[i][2] = max(dp[i][:3])\n                dp[i][0] = -inf\n                dp[i][1] = -inf\n            else:\n                dp[i][0] += 1\n                dp[i][1] += 1\n                dp[i][2] = max(dp[i][2:])\n                dp[i][3] = -inf\n                dp[i][4] = -inf\n            ptr += 1\n    print(max(dp[n]))", "TT = int(input())\nfor tt in range(TT):\n    (n, m) = map(int, input().split())\n    T = map(int, input().split())\n    C = map(int, input().split())\n    state = [0, -100, -100]\n    (prev_t, prev_c) = (0, 0)\n    for (t, c) in zip(T, C):\n        diff = t - prev_t\n        new_state = [-100, -100, -100]\n        if c == prev_c:\n            if diff % 2 == 0:\n                v = max(state[0], state[1], state[2])\n            else:\n                v = max(state[0], state[1])\n                if diff > 1:\n                    v = max(v, state[2])\n        else:\n            v = max(state[0], state[1], state[2])\n        new_state[0] = max(new_state[0], v)\n        if c == prev_c:\n            if diff % 2 == 0:\n                new_state[1] = max(state[1] + 1, new_state[1])\n            else:\n                new_state[1] = max(state[0] + 1, state[2] + 1, new_state[1])\n        elif diff % 2 == 0:\n            new_state[1] = max(state[1] + 1, new_state[1])\n        else:\n            new_state[1] = max(state[0] + 1, new_state[1])\n            if diff > 1:\n                new_state[1] = max(state[2] + 1, new_state[1])\n        if c == prev_c:\n            if diff % 2 == 0:\n                new_state[2] = max(state[0] + 1, state[2] + 1, new_state[2])\n            else:\n                new_state[2] = max(state[1] + 1, new_state[2])\n        elif diff % 2 == 0:\n            new_state[2] = max(state[0] + 1, new_state[2])\n            if diff > 2:\n                new_state[2] = max(state[2] + 1, new_state[2])\n        elif diff > 1:\n            new_state[2] = max(state[1] + 1, new_state[2])\n        prev_t = t\n        prev_c = c\n        state = new_state\n    print(max(state))", "from collections import Counter\nfor t in range(int(input())):\n    (NN, MM) = map(int, input().split(' '))\n    Ts = list(map(int, input().split(' ')))\n    Cs = list(map(int, input().split(' ')))\n    inc = 0\n    next_c = [Ts[inc], Cs[inc]]\n    master = Counter({0: 0})\n    for it in range(1, NN + 1):\n        new_master = Counter()\n        for m in master:\n            new_master[m + 1] = max(new_master[m + 1], master[m])\n            new_master[m - 1] = max(new_master[m - 1], master[m])\n        master = {i: new_master[i] for i in new_master if abs(i) <= 5}\n        if next_c[0] == it:\n            new_master = Counter()\n            for m in master:\n                if next_c[1] == 1:\n                    if m > 0:\n                        new_master[m] = max(new_master[m], master[m] + 1)\n                    else:\n                        new_master[0] = max(new_master[0], master[m])\n                elif m < 0:\n                    new_master[m] = max(new_master[m], master[m] + 1)\n                else:\n                    new_master[0] = max(new_master[0], master[m])\n            master = new_master\n            inc += 1\n            if inc < MM:\n                next_c = [Ts[inc], Cs[inc]]\n    lst = [master[i] for i in master]\n    print(max(lst))"]