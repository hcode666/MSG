["for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max([-(-sum(a[:i + 1]) // (i + 1)) for (i, e) in enumerate(a)]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max([-(-sum(a[:i + 1]) // (i + 1)) for (i, e) in enumerate(a)]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max([-(-sum(a[:i + 1]) // (i + 1)) for (i, e) in enumerate(a)]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max([-(-sum(a[:i + 1]) // (i + 1)) for (i, e) in enumerate(a)]))", "def dropdigit(alist):\n    y = alist.pop()\n    return y\n\ndef checklist(mylist):\n    if mylist[-1] < -(-sum(mylist) // len(mylist)):\n        y = dropdigit(mylist)\n        checklist(mylist)\n    return max(-(-sum(mylist) // len(mylist)), mylist[0])\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    tot = sum(a)\n    cumavg = [-(-sum(a[:i + 1]) // (i + 1)) for (i, e) in enumerate(a)]\n    res = checklist(a)\n    print(max(cumavg))", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    temp = 0\n    for j in range(n):\n        ans = max(ans, math.ceil((temp + a[j]) / (j + 1)))\n        temp += a[j]\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    (N, sm, av) = (inp(), 0, 0)\n    for (i, a) in enumerate(invr(), start=1):\n        sm += a\n        tmp = -(-sm // i)\n        if av < tmp:\n            av = tmp\n    ans.append(av)\noutplt(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    (N, sm, av) = (inp(), 0, 0)\n    for (i, a) in enumerate(invr(), start=1):\n        sm += a\n        av = max(av, -(-sm // i))\n    ans.append(av)\noutplt(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    (N, sm, av) = (inp(), 0, [])\n    for (i, a) in enumerate(invr(), start=1):\n        sm += a\n        av.append(-(-sm // i))\n    ans.append(max(av))\noutplt(ans)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    temp = 0\n    for j in range(n):\n        ans = max(ans, math.ceil((temp + a[j]) / (j + 1)))\n        temp += a[j]\n    print(ans)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    temp = 0\n    for j in range(n):\n        ans = max(ans, math.ceil((temp + a[j]) / (j + 1)))\n        temp += a[j]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max([-(-sum(a[:i + 1]) // (i + 1)) for (i, e) in enumerate(a)]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max([-(-sum(a[:i + 1]) // (i + 1)) for (i, e) in enumerate(a)]))", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    arr = list(map(int, input().strip().split()))\n    mx = -1\n    sm = sum(arr)\n    for i in range(N - 1, 0, -1):\n        cll = (sm + i) // (i + 1)\n        if cll < arr[i]:\n            d = arr[i] - cll\n            arr[i] = cll\n            arr[i - 1] += d\n            sm -= cll\n        else:\n            sm -= arr[i]\n        mx = max(arr[i], mx)\n    mx = max(mx, arr[0])\n    print(mx)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max([-(-sum(a[:i + 1]) // (i + 1)) for (i, e) in enumerate(a)]))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    vals = list(map(int, input().split(' ')))\n    cur_ans = -1\n    ans = -1\n    for i in range(n):\n        if vals[i] > cur_ans:\n            cur_ans = math.ceil(sum(vals[:i + 1]) / (i + 1))\n            if cur_ans > ans:\n                ans = cur_ans\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    vals = input().split(' ')\n    cur_max = -1\n    cur_sum = 0\n    ans = -1\n    for i in range(n):\n        cur_sum += int(vals[i])\n        cur_ans = math.ceil(cur_sum / (i + 1))\n        if cur_ans > ans:\n            ans = cur_ans\n    print(ans)", "import math\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    agg = 0\n    ans = 0\n    for i in range(n):\n        agg += a[i]\n        ans = max(ans, math.ceil(agg / (i + 1)))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max([-(-sum(a[:i + 1]) // (i + 1)) for (i, e) in enumerate(a)]))", "def dropdigit(alist):\n    y = alist.pop()\n    return y\n\ndef checklist(mylist):\n    if mylist[-1] < -(-sum(mylist) // len(mylist)):\n        y = dropdigit(mylist)\n        checklist(mylist)\n    return max(-(-sum(mylist) // len(mylist)), mylist[0])\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    tot = sum(a)\n    cumavg = [-(-sum(a[:i + 1]) // (i + 1)) for (i, e) in enumerate(a)]\n    res = checklist(a)\n    print(max(cumavg))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max([-(-sum(a[:i + 1]) // (i + 1)) for (i, e) in enumerate(a)]))", "def dropdigit(alist):\n    y = alist.pop()\n    return y\n\ndef checklist(mylist):\n    if mylist[-1] < -(-sum(mylist) // len(mylist)):\n        y = dropdigit(mylist)\n        checklist(mylist)\n    return max(-(-sum(mylist) // len(mylist)), mylist[0])\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    tot = sum(a)\n    cumavg = [-(-sum(a[:i + 1]) // (i + 1)) for (i, e) in enumerate(a)]\n    res = checklist(a)\n    print(max(cumavg))", "def f(arr):\n    m = arr[0]\n    count = 0\n    for i in range(1, len(arr)):\n        val = arr[i]\n        if val <= m:\n            count += m - val\n        elif val - m <= count:\n            count -= val - m\n        else:\n            val -= count\n            ex = val - m\n            cols = i + 1\n            if ex % cols == 0:\n                m += ex // cols\n                count = 0\n            else:\n                m += ex // cols + 1\n                count = cols - ex % cols\n    return m\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(el) for el in input().split(' ')]\n    print(f(arr))", "import math\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    l = [int(j) for j in input().split()]\n    l1 = [0] * len(l)\n    sum = 0\n    for i in range(len(l)):\n        sum += l[i]\n        l1[i] = math.ceil(sum / (i + 1))\n    print(max(l1))", "import math\nt = int(input())\nfor t in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = l[0]\n    sum = l[0]\n    for i in range(1, len(l)):\n        sum += l[i]\n        ans = max(ans, math.ceil(sum / (i + 1)))\n    print(ans)", "n = int(input())\nimport math\nfor i in range(n):\n    n = int(input())\n    ins = list(map(int, input().split(' ')))\n    x = y = ins[0]\n    for i in range(1, n):\n        x += ins[i]\n        y = max(y, math.floor((x + i) / (i + 1)))\n    print(y)", "a = int(input())\nfor i in range(a):\n    N = int(input())\n    A = list(map(int, input().split()))\n    t = sum(A)\n    x = t / N\n    y = 0\n    p = 0\n    B = []\n    for j in range(N):\n        y += A[j]\n        if y / (j + 1) > x:\n            if y % (j + 1) != 0:\n                s = y // (j + 1) + 1\n            else:\n                s = y // (j + 1)\n            B.append(s)\n        else:\n            p += 1\n    if p == N:\n        if t % N != 0:\n            ans = t // N + 1\n        else:\n            ans = t // N\n        print(ans)\n    else:\n        print(max(B))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = pref = 0\n    for i in range(n):\n        pref += a[i]\n        ans = max(ans, (pref + i) // (i + 1))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    (res, prefSum) = (0, 0)\n    for i in range(n):\n        prefSum += A[i]\n        res = max((prefSum + i) // (i + 1), res)\n    print(res)", "import math\nfor i in range(int(input())):\n    xxxx = int(input())\n    l = list(map(int, input().split()))\n    ans = l[0]\n    su = l[0]\n    for i in range(1, len(l)):\n        su += l[i]\n        ans = max(ans, math.ceil(su / (i + 1)))\n    print(ans)", "import math\nt = int(input())\nwhile t:\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    sum = arr[0]\n    m = arr[0]\n    for i in range(1, n):\n        sum += arr[i]\n        m = max(m, math.ceil(sum / (i + 1)))\n    print(m)\n    t -= 1", "from collections import defaultdict\nimport math\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    csum = 0\n    mx = -1\n    for i in range(n):\n        csum += a[i]\n        mx = max(math.ceil(csum / (i + 1)), mx)\n    print(mx)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = arr[0]\n    sm = arr[0]\n    for i in range(1, n):\n        sm += arr[i]\n        temp = (sm + i) // (i + 1)\n        ans = max(ans, temp)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (s, res) = (arr[0], arr[0])\n    for i in range(1, n):\n        s += arr[i]\n        res = max(res, math.ceil(s / (i + 1)))\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    (sm, ans) = (lst[0], lst[0])\n    for i in range(1, n):\n        sm += lst[i]\n        ans = max(ans, (sm + i) // (i + 1))\n    print(ans)", "import math\nfor tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    prefix = 0\n    ans = 0\n    for i in range(n):\n        prefix = prefix + a[i]\n        avg = math.ceil(prefix / (i + 1))\n        ans = max(avg, ans)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = pref = 0\n    for i in range(n):\n        pref += a[i]\n        ans = max(ans, (pref + i) // (i + 1))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = pref = 0\n    for i in range(n):\n        pref += a[i]\n        ans = max(ans, (pref + i) // (i + 1))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = ps = 0\n    for i in range(n):\n        ps += l[i]\n        ans = max(ans, (ps + i) // (i + 1))\n    print(ans)", "import math\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    res = sm = A[0]\n    for i in range(1, N):\n        sm += A[i]\n        res = max(res, math.floor((sm + i) / (i + 1)))\n    print(res)", "import math\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    res = sm = A[0]\n    for i in range(1, N):\n        sm += A[i]\n        res = max(res, math.floor((sm + i) / (i + 1)))\n    print(res)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (pre, ans) = (0, 0)\n    for i in range(n):\n        pre += a[i]\n        ans = max(ans, math.ceil(pre / (i + 1)))\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxi = max(a)\n    if maxi == a[0]:\n        print(a[0])\n    else:\n        b = []\n        for i in range(1, n + 1):\n            b.append(math.ceil(sum(a[:i]) / i))\n        print(max(b))", "import math\ncase = int(input())\nfor i in range(case):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    maxn = -1\n    csum = 0\n    j = 0\n    while j < n:\n        csum += arr[j]\n        if maxn <= arr[j]:\n            div = csum // (j + 1)\n            if div * (j + 1) == csum:\n                maxn = max(maxn, div)\n            else:\n                maxn = max(maxn, div + 1)\n        j += 1\n    print(maxn)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (sum, res) = (0, 0)\n    for i in range(n):\n        sum += a[i]\n        res = max(res, (sum + i) / (i + 1))\n    print(int(res))", "import sys\nfrom typing import List\n\ndef is_valid_mid(n: int, ds: List[int], mid: int) -> bool:\n    temp_vec = ds.copy()\n    if temp_vec[0] > mid:\n        return False\n    for i in range(1, n):\n        if temp_vec[i - 1] < mid:\n            temp_vec[i] = temp_vec[i] - (mid - temp_vec[i - 1])\n            temp_vec[i - 1] = mid\n        if temp_vec[i] > mid:\n            return False\n    if max(temp_vec) > mid:\n        return False\n    return True\n\ndef play():\n    num_of_elements = int(input())\n    elements = list(map(int, input().split()))\n    start = 0\n    end = max(elements)\n    ans = 1000000000\n    while start <= end:\n        mid = (start + end) // 2\n        if is_valid_mid(num_of_elements, elements, mid):\n            ans = min(ans, mid)\n            end = mid - 1\n        else:\n            start = mid + 1\n    print(ans)\nnum_of_tests = int(input())\nfor i in range(num_of_tests):\n    play()", "def func(n, arr, mid):\n    arr1 = []\n    for i in arr:\n        arr1.append(i)\n    if arr1[0] > mid:\n        return False\n    for i in range(1, n):\n        if arr1[i - 1] < mid:\n            arr1[i] = arr1[i] - (mid - arr1[i - 1])\n            arr1[i - 1] = mid\n        if arr1[i] > mid:\n            return False\n    if max(arr1) > mid:\n        return False\n    else:\n        return True\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    ans = 1000000000.0\n    max_element = max(arr)\n    while i <= max_element:\n        mid = i + (max_element - i) // 2\n        if func(n, arr, mid):\n            ans = min(ans, mid)\n            max_element = mid - 1\n        else:\n            i = mid + 1\n    print(ans)", "def solve(n, arr, mid):\n    newArray = arr.copy()\n    if newArray[0] > mid:\n        return False\n    for i in range(1, n):\n        if newArray[i - 1] < mid:\n            buffer = mid - newArray[i - 1]\n            newArray[i - 1] = mid\n            newArray[i] = newArray[i] - buffer\n        if newArray[i] > mid:\n            return False\n    maxElem = max(newArray)\n    if maxElem > mid:\n        return False\n    return True\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    j = max(arr)\n    ans = int(2 ** 63 - 1)\n    while i <= j:\n        mid = int(i + (j - i) / 2)\n        if solve(n, arr, mid):\n            ans = min(ans, mid)\n            j = mid - 1\n        else:\n            i = mid + 1\n    print(ans)", "import sys\nfrom typing import List\n\ndef is_valid_mid(n: int, ds: List[int], mid: int) -> bool:\n    temp_vec = ds.copy()\n    if temp_vec[0] > mid:\n        return False\n    for i in range(1, n):\n        if temp_vec[i - 1] < mid:\n            temp_vec[i] = temp_vec[i] - (mid - temp_vec[i - 1])\n            temp_vec[i - 1] = mid\n        if temp_vec[i] > mid:\n            return False\n    if max(temp_vec) > mid:\n        return False\n    return True\n\ndef play():\n    num_of_elements = int(input())\n    elements = list(map(int, input().split()))\n    start = 0\n    end = max(elements)\n    ans = 1000000000\n    while start <= end:\n        mid = (start + end) // 2\n        if is_valid_mid(num_of_elements, elements, mid):\n            ans = min(ans, mid)\n            end = mid - 1\n        else:\n            start = mid + 1\n    print(ans)\nnum_of_tests = int(input())\nfor i in range(num_of_tests):\n    play()", "import sys\nfrom typing import List\n\ndef is_valid_mid(n: int, ds: List[int], m: int) -> bool:\n    t_v = ds.copy()\n    if t_v[0] > m:\n        return False\n    for i in range(1, n):\n        if t_v[i - 1] < m:\n            t_v[i] = t_v[i] - (m - t_v[i - 1])\n            t_v[i - 1] = m\n        if t_v[i] > m:\n            return False\n    if max(t_v) > m:\n        return False\n    return True\n\ndef play():\n    num_of_elements = int(input())\n    elements = list(map(int, input().split()))\n    start = 0\n    end = max(elements)\n    ans = 1000000000\n    while start <= end:\n        mid = (start + end) // 2\n        if is_valid_mid(num_of_elements, elements, mid):\n            ans = min(ans, mid)\n            end = mid - 1\n        else:\n            start = mid + 1\n    print(ans)\nnum_of_tests = int(input())\nfor i in range(num_of_tests):\n    play()", "def funn(a, b):\n    if a < b:\n        return True\n    else:\n        return False\n\ndef decode(n, thaar_r, madh):\n    thaar = []\n    thaar += thaar_r\n    if thaar[0] > madh:\n        return False\n    for i in range(1, n):\n        if funn(thaar[i - 1], madh):\n            thaar[i] = thaar_r[i] + (thaar[i - 1] - madh)\n            thaar[i - 1] = madh\n        if thaar[i] > madh:\n            return False\n    if max(thaar) <= madh:\n        return True\n    return False\n_ = int(input())\nwhile _:\n    n = int(input())\n    haar = list(map(int, input().split()))\n    i = 0\n    j = max(haar)\n    RESS = 1000000000.0\n    while i <= j:\n        madh = (i + j) // 2\n        if decode(n, haar, madh):\n            RESS = min(RESS, madh)\n            j = madh - 1\n        else:\n            i = madh + 1\n    print(int(RESS))\n    _ -= 1", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    pre = []\n    preavg = []\n    s = 0\n    avg = 0\n    for i in arr:\n        s += i\n        pre.append(s)\n    for i in range(len(pre)):\n        avg = math.ceil(pre[i] / (i + 1))\n        preavg.append(avg)\n    print(max(preavg))", "def get():\n    return list(map(int, input().split()))\n\ndef avg(arr1):\n    s = sum(arr1)\n    n = len(arr1)\n    a = s // n\n    if s % n == 0:\n        return a\n    else:\n        return a + 1\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr1 = list(get())\n    arr2 = []\n    for i in range(1, n + 1):\n        arr2.append(avg(arr1[:i]))\n    print(max(arr2))\n    t = t - 1", "def dec(n, l, m):\n    l1 = []\n    l1 += l\n    if l1[0] > m:\n        return False\n    for i in range(1, n):\n        if l1[i - 1] < m:\n            l1[i] = l[i] + (l1[i - 1] - m)\n            l1[i - 1] = m\n        if l1[i] > m:\n            return False\n    if max(l1) <= m:\n        return True\n    return False\nt = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    j = max(l)\n    res = 1000000000.0\n    while i <= j:\n        m = (i + j) // 2\n        if dec(n, l, m):\n            res = min(res, m)\n            j = m - 1\n        else:\n            i = m + 1\n    print(int(res))\n    t -= 1", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sf = arr[0]\n    mx = sf\n    for i in range(1, n):\n        if arr[i] < arr[i - 1]:\n            x = math.ceil(sf / i)\n            mx = max(mx, x)\n        sf += arr[i]\n    x = math.ceil(sf / n)\n    mx = max(mx, x)\n    print(mx)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    lowest = min(a)\n    highest = max(a)\n    ans = highest\n    while lowest <= highest:\n        mid = (lowest + highest) // 2\n        flag = 0\n        b = a[:]\n        i = n - 1\n        while i > 0:\n            if b[i] > mid:\n                f = b[i] - mid\n                b[i - 1] = b[i - 1] + f\n                b[i] = b[i] - f\n            i -= 1\n        if max(b) > mid:\n            lowest = mid + 1\n        else:\n            ans = min(ans, max(b))\n            highest = mid - 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = max(l)\n    high = max(l)\n    low = min(l)\n    while low <= high:\n        l1 = [i for i in l]\n        mid = (low + high) // 2\n        for i in reversed(range(1, n)):\n            if l1[i] > mid:\n                l1[i - 1] += l1[i] - mid\n                l1[i] = mid\n        c = max(l1)\n        if c > mid:\n            low = mid + 1\n        else:\n            a = min(a, c)\n            high = mid - 1\n    print(a)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    low = min(l)\n    high = max(l)\n    res = high\n    maxi = high\n    while low <= high:\n        mid = (low + high) // 2\n        c = 0\n        m = []\n        m.extend(l)\n        for i in range(n - 1, 0, -1):\n            if m[i] > mid:\n                m[i - 1] += m[i] - mid\n                m[i] = mid\n        d = max(m)\n        maxi = min(maxi, d)\n        if maxi > mid:\n            low = mid + 1\n        else:\n            res = min(res, maxi)\n            high = mid - 1\n    print(res)", "from sys import stdin, stdout\nread = stdin.readline\nfrom math import floor, ceil\n\ndef splitter(L):\n    ans = [[L[0]]]\n    for i in range(1, len(L)):\n        if L[i] < L[i - 1]:\n            ans += [[]]\n        ans[-1] += [L[i]]\n    return ans\n\ndef equalize(L):\n    avg = sum(L) / len(L)\n    ceilCount = sum(L) - len(L) * floor(avg)\n    return [floor(avg)] * (len(L) - ceilCount) + [ceil(avg)] * ceilCount\n\ndef alpha(L):\n    ans = []\n    for i in splitter(L):\n        ans.append(equalize(i))\n    didSomething = 1\n    while didSomething and len(ans) > 1:\n        for i in range(1, len(ans)):\n            if min(ans[i]) >= max(ans[i - 1]):\n                ans = ans[:i - 1] + [equalize(ans[i] + ans[i - 1])] + ans[i + 1:]\n                break\n            if i == len(ans) - 1:\n                didSomething = 0\n                break\n    return ans\n\ndef sol(x):\n    print(max([max(i) for i in alpha(x)]))\ntt = read().strip()\ntt = int(tt)\nfor _ in range(tt):\n    read()\n    x = list(map(int, read().split()))\n    sol(x)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    low = min(l)\n    high = max(l)\n    res = high\n    maxi = high\n    while low <= high:\n        mid = (low + high) // 2\n        c = 0\n        m = []\n        m.extend(l)\n        for i in range(n - 1, 0, -1):\n            if m[i] > mid:\n                m[i - 1] += m[i] - mid\n                m[i] = mid\n        d = max(m)\n        maxi = min(maxi, d)\n        if maxi > mid:\n            low = mid + 1\n        else:\n            res = min(res, maxi)\n            high = mid - 1\n    print(res)", "t = int(input())\nfor u in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = a[0]\n    c = 1\n    m = []\n    l = []\n    for i in range(0, n - 1):\n        if a[i + 1] >= a[i]:\n            s += a[i + 1]\n            c += 1\n        else:\n            l.append(s)\n            m.append(c)\n            s = a[i + 1]\n            c = 1\n    l.append(s)\n    m.append(c)\n    z = True\n    while z:\n        z = False\n        x = []\n        y = []\n        s = l[0]\n        c = m[0]\n        p = s / c\n        for j in range(1, len(l)):\n            av = l[j] / m[j]\n            if av >= p:\n                s += l[j]\n                c += m[j]\n                p = s / c\n                z = True\n            else:\n                x.append(s)\n                y.append(c)\n                s = l[j]\n                c = m[j]\n        x.append(s)\n        y.append(c)\n        (l, m) = (x, y)\n    print(l[0] // m[0] + bool(l[0] % m[0]))", "import sys\n\ndef is_valid_mid(arr, mid):\n    n = len(arr)\n    if arr[0] > mid:\n        return False\n    for j in range(1, n):\n        if arr[j - 1] < mid:\n            arr[j] = arr[j] - (mid - arr[j - 1])\n            arr[j - 1] = mid\n        if arr[j] > mid:\n            return False\n    mx = max(arr)\n    if mx > mid:\n        return False\n    return True\n\ndef binary_search(arr):\n    i = 0\n    j = max(arr)\n    ans = sys.maxsize\n    while i <= j:\n        mid = i + (j - i) // 2\n        if is_valid_mid(arr.copy(), mid):\n            ans = min(ans, mid)\n            j = mid - 1\n        else:\n            i = mid + 1\n    return ans\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(binary_search(arr))", "from math import ceil\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    highest_max = 0\n    total = 0\n    for i in range(n):\n        total += a[i]\n        cur_av = ceil(total / (i + 1))\n        if cur_av > highest_max:\n            highest_max = cur_av\n    print(highest_max)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    for i in range(1, n + 1):\n        b = a[:i]\n        l.append(math.ceil(sum(b) / len(b)))\n    print(max(l))", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = max(a)\n    c = min(a)\n    d = b\n    while c <= b:\n        e = (b + c) // 2\n        f = 0\n        g = a.copy()\n        for i in reversed(range(1, n)):\n            if g[i] > e:\n                g[i - 1] += g[i] - e\n                g[i] = e\n        h = max(g)\n        if h > e:\n            c = e + 1\n        else:\n            d = min(d, h)\n            b = e - 1\n    print(d)", "def Keshu(A):\n    s = sum(A)\n    n = len(A)\n    if s % n == 0:\n        return s // n\n    else:\n        return s // n + 1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    B = []\n    for i in range(1, n + 1):\n        B.append(Keshu(A[:i]))\n    print(max(B))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (low, high) = (min(l), max(l))\n    result = high\n    while low <= high:\n        new_l = list(l)\n        mid = (low + high) // 2\n        for i in range(-1, n * -1, -1):\n            if new_l[i] > mid:\n                new_l[i - 1] += new_l[i] - mid\n                new_l[i] = mid\n        if mid == max(new_l):\n            result = max(new_l)\n            high = mid - 1\n        else:\n            low = mid + 1\n    print(result)", "for i in range(int(input())):\n\n    def check(n, a, m):\n        b = a.copy()\n        if b[0] > m:\n            return False\n        for j in range(1, n):\n            if b[j - 1] < m:\n                temp = m - b[j - 1]\n                b[j - 1] = m\n                b[j] -= temp\n            if b[j] > m:\n                return False\n        x = max(b)\n        if x > m:\n            return False\n        return True\n    n = int(input())\n    s = input()\n    a = [int(i) for i in s.split()]\n    x = 0\n    y = max(a)\n    ans = y\n    while x <= y:\n        m = x + (y - x) // 2\n        if check(n, a, m):\n            ans = min(ans, m)\n            y = m - 1\n        else:\n            x = m + 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxval = 0\n    total = 0\n    count = 0\n    for i in a:\n        total += i\n        count += 1\n        if total % count == 0:\n            mv = total // count\n        else:\n            mv = total // count + 1\n        if mv > maxval:\n            maxval = mv\n    print(maxval)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    presum = []\n    preavg = []\n    s = 0\n    avg = 0\n    for i in a:\n        s += i\n        presum.append(s)\n    for j in range(len(presum)):\n        avg = math.ceil(presum[j] / (j + 1))\n        preavg.append(avg)\n    print(max(preavg))", "import math\nimport itertools\n\ndef minimizeArrayValue(nums):\n    nums = list(itertools.accumulate(nums))\n    return max(((i + nums[i]) // (1 + i) for i in range(len(nums))))\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(minimizeArrayValue(arr))", "def avg(a):\n    s = sum(a)\n    n = len(a)\n    if s % n == 0:\n        return s // n\n    else:\n        return s // n + 1\nfor _ in range(int(input())):\n    m = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(1, m + 1):\n        b.append(avg(a[:i]))\n    print(max(b))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (l, h, res) = (0, max(arr), max(arr))\n    while l <= h:\n        mid = (l + h) // 2\n        temp = arr[:]\n        for i in range(n - 1, 0, -1):\n            if temp[i] > mid:\n                temp[i - 1] += temp[i] - mid\n        if temp[0] <= mid:\n            h = mid - 1\n            res = mid\n        else:\n            l = mid + 1\n    print(res)", "import math\nt = int(input())\nwhile t:\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    avg = []\n    for i in range(1, n + 1):\n        s = sum(arr[0:i])\n        mean = math.ceil(s / i)\n        avg.append(mean)\n    print(max(avg))\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = min(a)\n    h = max(a)\n    c = h\n    while l <= h:\n        b = a.copy()\n        mid = int((l + h) / 2)\n        for j in range(n - 1, 0, -1):\n            if b[j] > mid:\n                b[j - 1] += b[j] - mid\n                b[j] = mid\n        hn = max(b)\n        if hn > mid:\n            l = mid + 1\n        else:\n            c = min(h, hn)\n            h = mid - 1\n    print(int(c))", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = max(a)\n    c = min(a)\n    d = b\n    while c <= b:\n        e = (b + c) // 2\n        f = 0\n        g = a.copy()\n        for i in reversed(range(1, n)):\n            if g[i] > e:\n                g[i - 1] += g[i] - e\n                g[i] = e\n        h = max(g)\n        if h > e:\n            c = e + 1\n        else:\n            d = min(d, h)\n            b = e - 1\n    print(d)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = max(a)\n    c = min(a)\n    d = b\n    while c <= b:\n        e = (b + c) // 2\n        f = 0\n        g = a.copy()\n        for i in reversed(range(1, n)):\n            if g[i] > e:\n                g[i - 1] += g[i] - e\n                g[i] = e\n        h = max(g)\n        if h > e:\n            c = e + 1\n        else:\n            d = min(d, h)\n            b = e - 1\n    print(d)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = max(a)\n    c = min(a)\n    d = b\n    while c <= b:\n        e = (b + c) // 2\n        f = 0\n        g = a.copy()\n        for i in reversed(range(1, n)):\n            if g[i] > e:\n                g[i - 1] += g[i] - e\n                g[i] = e\n        h = max(g)\n        if h > e:\n            c = e + 1\n        else:\n            d = min(d, h)\n            b = e - 1\n    print(d)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = max(a)\n    c = min(a)\n    d = b\n    while c <= b:\n        e = (b + c) // 2\n        f = 0\n        g = a.copy()\n        for i in reversed(range(1, n)):\n            if g[i] > e:\n                g[i - 1] += g[i] - e\n                g[i] = e\n        h = max(g)\n        if h > e:\n            c = e + 1\n        else:\n            d = min(d, h)\n            b = e - 1\n    print(d)", "from math import ceil\nfrom itertools import accumulate\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    nums = list(accumulate(arr))\n    m = 0\n    for (i, v) in enumerate(nums):\n        diff = (i + v) // (i + 1)\n        m = max(diff, m)\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (l, h) = (min(a), max(a))\n    ans = 1000000000000\n    while l <= h:\n        m = (l + h) // 2\n        b = a.copy()\n        for i in range(n - 1, 0, -1):\n            if b[i] > m:\n                b[i - 1] += b[i] - m\n                b[i] = m\n        mx = max(b)\n        if mx > m:\n            l = m + 1\n        else:\n            ans = min(ans, mx)\n            h = m - 1\n    print(ans)", "from math import ceil\nfrom itertools import accumulate\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    nums = list(accumulate(arr))\n    m = max(((i + nums[i]) // (1 + i) for i in range(len(nums))))\n    print(m)", "import sys\nfrom typing import List\n\ndef modeee(n: int, ds: List[int], mid: int) -> bool:\n    vec = ds.copy()\n    if vec[0] > mid:\n        return False\n    for i in range(1, n):\n        if vec[i - 1] < mid:\n            vec[i] = vec[i] - (mid - vec[i - 1])\n            vec[i - 1] = mid\n        if vec[i] > mid:\n            return False\n    if max(vec) > mid:\n        return False\n    return True\n\ndef play():\n    n = int(input())\n    vec = list(map(int, input().split()))\n    i = 0\n    j = max(vec)\n    ans = 1000000000\n    while i <= j:\n        mid = (i + j) // 2\n        if modeee(n, vec, mid):\n            ans = min(ans, mid)\n            j = mid - 1\n        else:\n            i = mid + 1\n    print(ans)\ntt = int(input())\nfor i in range(tt):\n    play()", "import sys\nfrom typing import List\n\ndef is_valid_mid(n: int, ds: List[int], mid: int) -> bool:\n    temp_vec_1 = ds.copy()\n    if temp_vec_1[0] > mid:\n        return False\n    for i in range(1, n):\n        if temp_vec_1[i - 1] < mid:\n            temp_vec_1[i] = temp_vec_1[i] - (mid - temp_vec_1[i - 1])\n            temp_vec_1[i - 1] = mid\n        if temp_vec_1[i] > mid:\n            return False\n    if max(temp_vec_1) > mid:\n        return False\n    return True\n\ndef hook():\n    num_ele = int(input())\n    rve = list(map(int, input().split()))\n    start_1 = 0\n    end_1 = max(rve)\n    ans_1 = 1000000000\n    while start_1 <= end_1:\n        midy = (start_1 + end_1) // 2\n        if is_valid_mid(num_ele, rve, midy):\n            ans_1 = min(ans_1, midy)\n            end_1 = midy - 1\n        else:\n            start_1 = midy + 1\n    print(ans_1)\nnum = int(input())\nfor i in range(num):\n    hook()", "import sys\nfrom typing import List\n\ndef modeee(n: int, ds: List[int], mid: int) -> bool:\n    vec = ds.copy()\n    if vec[0] > mid:\n        return False\n    for i in range(1, n):\n        if vec[i - 1] < mid:\n            vec[i] = vec[i] - (mid - vec[i - 1])\n            vec[i - 1] = mid\n        if vec[i] > mid:\n            return False\n    if max(vec) > mid:\n        return False\n    return True\n\ndef play():\n    n = int(input())\n    vec = list(map(int, input().split()))\n    i = 0\n    j = max(vec)\n    ans = 1000000000\n    while i <= j:\n        mid = (i + j) // 2\n        if modeee(n, vec, mid):\n            ans = min(ans, mid)\n            j = mid - 1\n        else:\n            i = mid + 1\n    print(ans)\ntt = int(input())\nfor i in range(tt):\n    play()"]