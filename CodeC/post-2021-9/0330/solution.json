["d = {'1': '0', '0': '1'}\nfor t in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    if k % 2:\n        f = d[s[0]]\n    else:\n        f = s[0]\n    p = s[0]\n    for i in s:\n        if i != p:\n            k -= 1\n            p = d[p]\n            if k == 0:\n                break\n    if k:\n        print(-1)\n    else:\n        for i in range(n):\n            if s[-1 - i] == f:\n                break\n        print(n - i)", "def soln(n, k, s):\n    cond = ''\n    inds = []\n    i = 0\n    while i < n:\n        cur = s[i]\n        cond += s[i]\n        while i < n and s[i] == cur:\n            i += 1\n        inds.append(i)\n    if k >= len(cond):\n        return -1\n    if cond[0] == cond[-1]:\n        if k & 1:\n            return inds[-2]\n        else:\n            return inds[-1]\n    elif k & 1:\n        return inds[-1]\n    else:\n        return inds[-2]\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(soln(n, k, s))", "def soln(n, k, s):\n    cond = ''\n    inds = []\n    i = 0\n    while i < n:\n        cur = s[i]\n        cond += s[i]\n        while i < n and s[i] == cur:\n            i += 1\n        inds.append(i)\n    if k >= len(cond):\n        return -1\n    if cond[0] == cond[-1]:\n        if k & 1:\n            return inds[-2]\n        else:\n            return inds[-1]\n    elif k & 1:\n        return inds[-1]\n    else:\n        return inds[-2]\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(soln(n, k, s))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    one_zero = s.count('10')\n    zero_one = s.count('01')\n    if k > one_zero + zero_one:\n        print('-1')\n        continue\n    start = s[0]\n    if k % 2 == 0:\n        i = n - 1\n        while True:\n            if s[i] == start:\n                print(i + 1)\n                break\n            i -= 1\n    else:\n        i = n - 1\n        while True:\n            if s[i] != start:\n                print(i + 1)\n                break\n            i -= 1", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    S = input()\n    s = S[0]\n    x = 0\n    for i in range(1, N):\n        if S[i] != S[i - 1]:\n            x += 1\n    if K > x:\n        print(-1)\n        continue\n    S = S[::-1]\n    if K % 2 == 0:\n        print(N - S.index(s))\n    else:\n        print(N - S.index(str(int(not bool(int(s))))))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ali = [int(a) for a in input()]\n    fs = ali[0]\n    ck = k\n    cn = fs\n    for a in ali:\n        if a != cn:\n            cn = a\n            ck -= 1\n    if ck > 0:\n        print(-1)\n    else:\n        ali.reverse()\n        zs = 0\n        ons = 0\n        hon = False\n        hz = False\n        if ali.__contains__(0):\n            hz = True\n            zs = n - ali.index(0)\n        if ali.__contains__(1):\n            hon = True\n            ons = n - ali.index(1)\n        ans = 0\n        if fs == 0 and k % 2 == 1:\n            ans = ons\n        elif fs == 1 and k % 2 == 0:\n            ans = ons\n        elif fs == 1 and k % 2 == 1:\n            ans = zs\n        elif fs == 0 and k % 2 == 0:\n            ans = zs\n        if hon and hz:\n            print(ans)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ali = [int(a) for a in input()]\n    fs = ali[0]\n    ck = k\n    cn = fs\n    for a in ali:\n        if a != cn:\n            cn = a\n            ck -= 1\n    if ck > 0:\n        print(-1)\n    else:\n        ali.reverse()\n        zs = 0\n        ons = 0\n        hon = False\n        hz = False\n        if ali.__contains__(0):\n            hz = True\n            zs = n - ali.index(0)\n        if ali.__contains__(1):\n            hon = True\n            ons = n - ali.index(1)\n        ans = 0\n        if fs == 0 and k % 2 == 1:\n            ans = ons\n        elif fs == 1 and k % 2 == 0:\n            ans = ons\n        elif fs == 1 and k % 2 == 1:\n            ans = zs\n        elif fs == 0 and k % 2 == 0:\n            ans = zs\n        if hon and hz:\n            print(ans)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ali = [int(a) for a in input()]\n    fs = ali[0]\n    ck = k\n    cn = fs\n    for a in ali:\n        if a != cn:\n            cn = a\n            ck -= 1\n    if ck > 0:\n        print(-1)\n    else:\n        ali.reverse()\n        zs = 0\n        ons = 0\n        hon = False\n        hz = False\n        if ali.__contains__(0):\n            hz = True\n            zs = n - ali.index(0)\n        if ali.__contains__(1):\n            hon = True\n            ons = n - ali.index(1)\n        ans = 0\n        if fs == 0 and k % 2 == 1:\n            ans = ons\n        elif fs == 1 and k % 2 == 0:\n            ans = ons\n        elif fs == 1 and k % 2 == 1:\n            ans = zs\n        elif fs == 0 and k % 2 == 0:\n            ans = zs\n        if hon and hz:\n            print(ans)\n        else:\n            print(-1)", "def solve():\n    (last_zero, last_one) = (path.rfind('0') + 1, path.rfind('1') + 1)\n    new_path = path[0]\n    count = 0\n    for i in range(1, n):\n        if path[i] != new_path:\n            new_path = path[i]\n            count += 1\n    if count >= k:\n        if path[0] == '1':\n            if k % 2 == 1:\n                print(last_zero)\n            else:\n                print(last_one)\n        elif k % 2 == 1:\n            print(last_one)\n        else:\n            print(last_zero)\n    else:\n        print(-1)\nt = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    path = input()\n    solve()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = input()\n    c = 0\n    for j in range(1, n):\n        if l[j] != l[j - 1]:\n            c += 1\n    if c < k:\n        print('-1')\n        continue\n    if l[0] == '1':\n        if k % 2 == 0:\n            print(l.rfind('1') + 1)\n        else:\n            print(l.rfind('0') + 1)\n    elif k % 2 != 0:\n        print(l.rfind('1') + 1)\n    else:\n        print(l.rfind('0') + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = input()\n    c = 0\n    for j in range(1, n):\n        if l[j] != l[j - 1]:\n            c += 1\n    if c < k:\n        print('-1')\n        continue\n    if l[0] == '1':\n        if k % 2 == 0:\n            print(l.rfind('1') + 1)\n        else:\n            print(l.rfind('0') + 1)\n    elif k % 2 != 0:\n        print(l.rfind('1') + 1)\n    else:\n        print(l.rfind('0') + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = input()\n    c = 0\n    for j in range(1, n):\n        if l[j] != l[j - 1]:\n            c += 1\n    if c < k:\n        print('-1')\n        continue\n    if l[0] == '1':\n        if k % 2 == 0:\n            print(l.rfind('1') + 1)\n        else:\n            print(l.rfind('0') + 1)\n    elif k % 2 != 0:\n        print(l.rfind('1') + 1)\n    else:\n        print(l.rfind('0') + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for j in range(1, n):\n        if s[j] != s[j - 1]:\n            c += 1\n    if c < k:\n        print('-1')\n        continue\n    if s[0] == '1':\n        if k % 2 == 0:\n            print(s.rfind('1') + 1)\n        else:\n            print(s.rfind('0') + 1)\n    elif k % 2 != 0:\n        print(s.rfind('1') + 1)\n    else:\n        print(s.rfind('0') + 1)", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\nimport bisect\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        (n, k) = sm()\n        zebra = line()\n        count = 0\n        for i in range(n - 1):\n            if zebra[i] != zebra[i + 1]:\n                count += 1\n        if count < k:\n            print(-1)\n        else:\n            position = 1\n            if k & 1:\n                if zebra[0] == '1':\n                    position += zebra.rindex('0')\n                else:\n                    position += zebra.rindex('1')\n            elif zebra[0] == '1':\n                position += zebra.rindex('1')\n            else:\n                position += zebra.rindex('0')\n            print(position)\nmain()", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\nimport bisect\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        (n, k) = sm()\n        zebra = line()\n        count = 0\n        for i in range(n - 1):\n            if zebra[i] != zebra[i + 1]:\n                count += 1\n        if count < k:\n            print(-1)\n        else:\n            position = 0\n            first_tile = zebra[0]\n            for i in range(n - 1, -1, -1):\n                if first_tile == zebra[i] and k % 2 == 0:\n                    position = i\n                    break\n                if first_tile != zebra[i] and k % 2 == 1:\n                    position = i\n                    break\n            print(position + 1)\nmain()", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\nimport bisect\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        (n, k) = sm()\n        zebra = line()\n        proper_zebra = zebra[0]\n        curr = zebra[0]\n        for i in range(n):\n            if zebra[i] != curr:\n                proper_zebra += zebra[i]\n                curr = zebra[i]\n        count = len(proper_zebra)\n        if count - 1 < k:\n            print(-1)\n        else:\n            position = 0\n            first_tile = zebra[0]\n            for i in range(n - 1, -1, -1):\n                if first_tile == zebra[i] and k % 2 == 0:\n                    position = i\n                    break\n                if first_tile != zebra[i] and k % 2 == 1:\n                    position = i\n                    break\n            print(position + 1)\nmain()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for j in range(1, n):\n        if s[j] != s[j - 1]:\n            c += 1\n    if c < k:\n        print('-1')\n        continue\n    if s[0] == '1':\n        if k % 2 == 0:\n            print(s.rfind('1') + 1)\n        else:\n            print(s.rfind('0') + 1)\n    elif k % 2 != 0:\n        print(s.rfind('1') + 1)\n    else:\n        print(s.rfind('0') + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for j in range(1, n):\n        if s[j] != s[j - 1]:\n            c += 1\n    if c < k:\n        print('-1')\n        continue\n    if s[0] == '1':\n        if k % 2 == 0:\n            print(s.rfind('1') + 1)\n        else:\n            print(s.rfind('0') + 1)\n    elif k % 2 != 0:\n        print(s.rfind('1') + 1)\n    else:\n        print(s.rfind('0') + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for j in range(1, n):\n        if s[j] != s[j - 1]:\n            c += 1\n    if c < k:\n        print('-1')\n        continue\n    if s[0] == '1':\n        if k % 2 == 0:\n            print(s.rfind('1') + 1)\n        else:\n            print(s.rfind('0') + 1)\n    elif k % 2 != 0:\n        print(s.rfind('1') + 1)\n    else:\n        print(s.rfind('0') + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for j in range(1, n):\n        if s[j] != s[j - 1]:\n            c += 1\n    if c < k:\n        print('-1')\n        continue\n    if s[0] == '1':\n        if k % 2 == 0:\n            print(s.rfind('1') + 1)\n        else:\n            print(s.rfind('0') + 1)\n    elif k % 2 != 0:\n        print(s.rfind('1') + 1)\n    else:\n        print(s.rfind('0') + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for j in range(1, n):\n        if s[j] != s[j - 1]:\n            c += 1\n    if c < k:\n        print('-1')\n        continue\n    if s[0] == '1':\n        if k % 2 == 0:\n            print(s.rfind('1') + 1)\n        else:\n            print(s.rfind('0') + 1)\n    elif k % 2 != 0:\n        print(s.rfind('1') + 1)\n    else:\n        print(s.rfind('0') + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    last = s[0]\n    if k % 2 != 0:\n        last = '1' if s[0] == '0' else '0'\n    i = n - 1\n    while i >= 1 and s[i] != last:\n        i -= 1\n    if i == 0:\n        print(-1)\n        continue\n    k -= 1\n    count = i + 1\n    last = '1' if last == '0' else '0'\n    while i >= 1 and k > 0:\n        if s[i] == last:\n            last = '1' if last == '0' else '0'\n            k -= 1\n        i -= 1\n    if k > 0:\n        print(-1)\n    else:\n        print(count)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = input()\n    ct = 0\n    x = s[0]\n    y = 0\n    z = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            z = i + 1\n            break\n    for i in range(n - 1, -1, -1):\n        if s[i] == '0':\n            y = i + 1\n            break\n    for i in range(1, n):\n        if x == '0' and s[i] == '1':\n            ct += 1\n            x = s[i]\n        elif x == '1' and s[i] == '0':\n            ct += 1\n            x = s[i]\n    if s[0] == '0':\n        for i in range(k):\n            if i % 2 == 0:\n                x = '1'\n            else:\n                x = '0'\n    elif s[0] == '1':\n        for i in range(k):\n            if i % 2 == 0:\n                x = '0'\n            else:\n                x = '1'\n    if ct >= k:\n        if x == '0':\n            print(y)\n        else:\n            print(z)\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = input()\n    ct = 0\n    x = s[0]\n    y = 0\n    z = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            z = i + 1\n            break\n    for i in range(n - 1, -1, -1):\n        if s[i] == '0':\n            y = i + 1\n            break\n    for i in range(1, n):\n        if x == '0' and s[i] == '1':\n            ct += 1\n            x = s[i]\n        elif x == '1' and s[i] == '0':\n            ct += 1\n            x = s[i]\n    if s[0] == '0':\n        for i in range(k):\n            if i % 2 == 0:\n                x = '1'\n            else:\n                x = '0'\n    elif s[0] == '1':\n        for i in range(k):\n            if i % 2 == 0:\n                x = '0'\n            else:\n                x = '1'\n    if ct >= k:\n        if x == '0':\n            print(y)\n        else:\n            print(z)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for j in range(1, n):\n        if s[j] != s[j - 1]:\n            c += 1\n    if c < k:\n        print('-1')\n        continue\n    if s[0] == '1':\n        if k % 2 == 0:\n            print(s.rfind('1') + 1)\n        else:\n            print(s.rfind('0') + 1)\n    elif k % 2 != 0:\n        print(s.rfind('1') + 1)\n    else:\n        print(s.rfind('0') + 1)", "tc = int(input())\nfor j in range(tc):\n    ip = list(map(int, input().rstrip().split()))\n    n = ip[0]\n    k = ip[1]\n    s = input()\n    ar = []\n    loo = 0\n    lzo = 0\n    for i in range(n):\n        ar.append(int(s[i]))\n        if int(s[i]) == 1:\n            loo = i\n        if int(s[i]) == 0:\n            lzo = i\n    loo += 1\n    lzo += 1\n    br = []\n    br.append(ar[0])\n    for i in range(1, n):\n        if ar[i] != ar[i - 1]:\n            br.append(ar[i])\n    gg = len(br)\n    if gg == 1:\n        print(-1)\n        continue\n    if k > gg - 1:\n        print(-1)\n        continue\n    if br[0] == 1:\n        if k % 2 == 1:\n            print(lzo)\n        if k % 2 == 0:\n            print(loo)\n    if br[0] == 0:\n        if k % 2 == 1:\n            print(loo)\n        if k % 2 == 0:\n            print(lzo)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            c += 1\n    if c < k:\n        print('-1')\n        continue\n    if s[0] == '1':\n        if k % 2 == 0:\n            print(s.rfind('1') + 1)\n        else:\n            print(s.rfind('0') + 1)\n    elif k % 2 != 0:\n        print(s.rfind('1') + 1)\n    else:\n        print(s.rfind('0') + 1)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    s_rev = s[::-1]\n    start = s[0]\n    if s.count('01') + s.count('10') >= k:\n        if k % 2 == 0:\n            for i in s_rev:\n                if i == start:\n                    print(n - s_rev.index(i))\n                    break\n        else:\n            for i in s_rev:\n                if i != start:\n                    print(n - s_rev.index(i))\n                    break\n    else:\n        print('-1')", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    pos = 0\n    next_pos = 1\n    while next_pos < n and k > 1:\n        if s[next_pos] != s[pos]:\n            pos = next_pos\n            k -= 1\n        next_pos += 1\n    if k == 1:\n        for i in range(n - 1, pos, -1):\n            if s[i] != s[pos]:\n                k -= 1\n                pos = i\n                break\n    if k == 0:\n        print(pos + 1)\n    else:\n        print(-1)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    pos = 0\n    next_pos = 1\n    while next_pos < n and k > 1:\n        if s[next_pos] != s[pos]:\n            pos = next_pos\n            k -= 1\n        next_pos += 1\n    if k == 1:\n        for i in range(n - 1, pos, -1):\n            if s[i] != s[pos]:\n                k -= 1\n                pos = i\n                break\n    if k == 0:\n        print(pos + 1)\n    else:\n        print(-1)", "def main():\n    tc = int(input())\n    while tc > 0:\n        i = input().split()\n        n = int(i[0])\n        k = int(i[1])\n        s = input()\n        alt = 0\n        for i in range(1, n):\n            if s[i] != s[i - 1]:\n                alt += 1\n        if alt < k:\n            print(-1)\n        else:\n            for i in range(n - 1, -1, -1):\n                if k % 2 == 0 and s[i] == s[0]:\n                    print(i + 1)\n                    break\n                elif k % 2 != 0 and s[i] != s[0]:\n                    print(i + 1)\n                    break\n        tc -= 1\nmain()", "def func2(str1, k):\n    i = 0\n    rstr = ''\n    while i < len(str1) - 1:\n        if str1[i] != str1[i + 1]:\n            rstr += str1[i]\n        i += 1\n    rstr += str1[-1]\n    if len(rstr) == 1:\n        print(-1)\n        return\n    if k > len(rstr) - 1:\n        print(-1)\n        return\n    if k % 2 == 0:\n        if len(rstr) % 2 == 1:\n            print(len(str1))\n            return\n        else:\n            req = rstr[len(rstr) - 2]\n            for i in range(len(str1) - 1, -1, -1):\n                if str1[i] == req:\n                    print(i + 1)\n                    return\n    elif len(rstr) % 2 == 0:\n        print(len(str1))\n        return\n    else:\n        req = rstr[len(rstr) - 2]\n        for i in range(len(str1) - 1, -1, -1):\n            if str1[i] == req:\n                print(i + 1)\n                return\nt = int(input())\nfor i in range(t):\n    l1 = [int(i) for i in input().split()]\n    s = input()\n    func2(s, l1[1])", "t = int(input())\nfor z in range(t):\n    (n, k) = map(int, input().split())\n    a = list(input())\n    if a[len(a) - 1] == '\\r':\n        a.pop()\n    c1 = 0\n    d = []\n    x = a[0]\n    for i in range(len(a)):\n        if a[i] != x:\n            x = a[i]\n            c1 += 1\n        d.append(c1)\n    c2 = 0\n    for i in range(len(a) - 1, 0, -1):\n        if k % 2 == 0 and a[i] == a[0]:\n            if d[i] >= k:\n                print(i + 1)\n                c2 += 1\n                break\n        elif k % 2 and a[i] != a[0]:\n            if d[i] >= k:\n                print(i + 1)\n                c2 += 1\n                break\n    if c2 == 0:\n        print(-1)", "for x in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input()))\n    i = 0\n    j = 0\n    maxIndex = -1\n    while j < n:\n        if k > 1:\n            if s[j] != s[i]:\n                k -= 1\n                i = j\n        elif s[j] != s[i]:\n            maxIndex = j\n        j += 1\n    print(maxIndex + 1 if maxIndex != -1 else -1)", "import collections\nimport math\n\ndef nice(n, k, s):\n    firstLetter = s[0]\n    maxJumps = 0\n    lastIndex = -1\n    if not k % 2:\n        lastIndex = s.rindex(firstLetter)\n    elif str(int(firstLetter) ^ 1) in s:\n        lastIndex = s.rindex(str(int(firstLetter) ^ 1))\n    for i in range(1, lastIndex):\n        if s[i] != s[i - 1]:\n            maxJumps += 1\n    if k - 1 <= maxJumps and lastIndex != -1:\n        return lastIndex + 1\n    return -1\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(nice(n, k, s))", "def func(arr, k):\n    jpos = 0\n    for i in range(0, len(arr) - 1):\n        if arr[i] != arr[i + 1]:\n            jpos += 1\n    if k <= jpos:\n        if k % 2 == 0:\n            end = arr[0]\n        elif arr[0] == '0':\n            end = '1'\n        else:\n            end = '0'\n    else:\n        return -1\n    for i in range(len(arr) - 1, -1, -1):\n        if arr[i] == end:\n            return i + 1\nt = int(input())\nfor i in range(0, t):\n    (n, k) = list(map(int, input().strip().split()))\n    arr = input()\n    print(func(arr, k))", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    zebra = input()\n    previous = zebra[0]\n    steps = 1\n    for j in range(len(zebra)):\n        if K == 0:\n            break\n        if zebra[j] != previous and K != 1:\n            if j == len(zebra) - 1:\n                steps = j + 1\n                previous = zebra[j]\n                K -= 1\n            else:\n                steps = j + 1\n                previous = zebra[j]\n                K -= 1\n        elif zebra[j] != previous and K == 1:\n            if j == len(zebra) - 1:\n                steps = j + 1\n                previous = zebra[j]\n                K -= 1\n            elif zebra[j] not in zebra[j + 1:]:\n                steps = j + 1\n                previous = zebra[j]\n                K -= 1\n        else:\n            pass\n    if K != 0:\n        print(-1)\n    else:\n        print(steps)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            c += 1\n    if c < k:\n        print(-1)\n    elif k % 2 == 0:\n        x = s[0]\n        for i in range(n - 1, -1, -1):\n            if s[i] == x:\n                print(i + 1)\n                break\n    else:\n        x = int(s[0])\n        x = str(abs(x - 1))\n        for i in range(n - 1, -1, -1):\n            if s[i] == x:\n                print(i + 1)\n                break", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            c += 1\n    if c < k:\n        print(-1)\n    elif k % 2 == 0:\n        x = s[0]\n        for i in range(n - 1, -1, -1):\n            if s[i] == x:\n                print(i + 1)\n                break\n    else:\n        x = int(s[0])\n        x = str(abs(x - 1))\n        for i in range(n - 1, -1, -1):\n            if s[i] == x:\n                print(i + 1)\n                break", "try:\n    T = int(input())\n    for t in range(T):\n        (N, K) = tuple(input().split())\n        (N, K) = (int(N), int(K))\n        s = str(input())\n        x = 0\n        count = 0\n        for i in range(N - 1):\n            if s[i] != s[i + 1]:\n                count += 1\n        if count >= K:\n            if K % 2 == 0:\n                for i in range(N - 1, 0, -1):\n                    if s[i] == s[0]:\n                        x = i + 1\n                        break\n            else:\n                for i in range(N - 1, 0, -1):\n                    if s[i] != s[0]:\n                        x = i + 1\n                        break\n            print(x)\n        else:\n            print(-1)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    s += 'a'\n    s1 = []\n    l = 0\n    for i in range(n):\n        if s[i] != s[i + 1]:\n            s1.append(i + 1)\n            l += 1\n    if l - 1 < k:\n        print(-1)\n    elif (l - 1) % 2 == 0:\n        if k % 2 == 0:\n            print(s1[-1])\n        else:\n            print(s1[-2])\n    elif k % 2 == 0:\n        print(s1[-2])\n    else:\n        print(s1[-1])", "tt = int(input())\nfor i in range(tt):\n    (n, k) = [int(_) for _ in input().split()]\n    s = input()\n    stCh = s[0]\n    if stCh == '0':\n        nCh = '1'\n    else:\n        nCh = '0'\n    if k % 2 == 0:\n        lstPos = n - s[::-1].find(stCh)\n    else:\n        lstPos = n - s[::-1].find(nCh)\n    if s.count(nCh) > 0:\n        if lstPos <= n:\n            st = 1\n            f = False\n            for ii in range(k):\n                prevSt = st\n                st += s[st:].find(nCh) + 1\n                if st == prevSt:\n                    f = True\n                    break\n                if nCh == '0':\n                    nCh = '1'\n                else:\n                    nCh = '0'\n            if ii != k - 1 or f:\n                print(-1)\n            else:\n                print(lstPos)\n    else:\n        print('-1')", "T = int(input())\nfor t in range(T):\n    (N, K) = list(map(int, input().split()))\n    B = input().split()[0]\n    current_index = 0\n    possible_K = 0\n    for i in range(N - 1):\n        if B[i] != B[i + 1]:\n            possible_K += 1\n    if possible_K >= K:\n        for k in range(K):\n            for n in range(N):\n                index_to_go = -(n + 1)\n                if B[index_to_go] != B[current_index]:\n                    current_index = N + index_to_go\n                    break\n    if current_index == 0 or possible_K < K:\n        print('-1')\n    else:\n        print(current_index + 1)", "t = int(input())\n\ndef funcCheck(arr):\n    ct = 0\n    flag = arr[0]\n    for i in arr:\n        if flag != i:\n            ct += 1\n            flag = i\n    return ct\nfor i in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    arr = input()\n    if funcCheck(arr) < k:\n        print('-1')\n        continue\n    ans = 0\n    if arr[0] == '0':\n        if k % 2 == 0:\n            for i in range(len(arr) - 1, -1, -1):\n                if arr[i] == '0':\n                    ans = i + 1\n                    break\n        else:\n            for i in range(len(arr) - 1, -1, -1):\n                if arr[i] == '1':\n                    ans = i + 1\n                    break\n    elif k % 2 == 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] == '1':\n                ans = i + 1\n                break\n    else:\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] == '0':\n                ans = i + 1\n                break\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            c += 1\n    if c < k:\n        print(-1)\n        continue\n    if s[0] == '1':\n        if k % 2 == 0:\n            print(s.rfind('1') + 1)\n        else:\n            print(s.rfind('0') + 1)\n    elif k % 2 != 0:\n        print(s.rfind('1') + 1)\n    else:\n        print(s.rfind('0') + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(input())\n    start = a[0]\n    end = ''\n    if k % 2 == 0:\n        if start == '1':\n            end = '1'\n        else:\n            end = '0'\n    elif start == '1':\n        end = '0'\n    else:\n        end = '1'\n    for i in range(len(a) - 1, -1, -1):\n        if a[i] == end:\n            break\n    ans = i\n    cur = end\n    c = 0\n    for j in range(i - 1, -1, -1):\n        if a[j] != cur:\n            cur = a[j]\n            c += 1\n    if c >= k:\n        print(ans + 1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    count = 0\n    if k % 2 == 0:\n        eo = 0\n    else:\n        eo = 1\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            count += 1\n    if count < k:\n        print(-1)\n        continue\n    else:\n        for i in range(n - 1, -1, -1):\n            if not eo and s[0] == s[i]:\n                print(i + 1)\n                break\n            elif eo and s[0] != s[i]:\n                print(i + 1)\n                break", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    count = 0\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            count += 1\n    if count < k:\n        print(-1)\n    elif k % 2 == 0:\n        if s[0] == '1':\n            print(s.rfind('1') + 1)\n        else:\n            print(s.rfind('0') + 1)\n    elif s[0] == '1':\n        print(s.rfind('0') + 1)\n    else:\n        print(s.rfind('1') + 1)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = input()\n    c = 0\n    for j in range(n - 1):\n        if l[j] != l[j + 1]:\n            c = c + 1\n    if c < k:\n        print(-1)\n    elif k % 2 != 0 and l[n - 1] == l[0]:\n        for j in range(n - 1, -1, -1):\n            if l[j] != l[0]:\n                print(j + 1)\n                break\n    elif k % 2 != 0 and l[n - 1] != l[0]:\n        for j in range(n - 1, -1, -1):\n            if l[j] != l[0]:\n                print(j + 1)\n                break\n    elif k % 2 == 0 and l[n - 1] == l[0]:\n        for j in range(n - 1, -1, -1):\n            if l[j] == l[0]:\n                print(j + 1)\n                break\n    elif k % 2 == 0 and l[n - 1] != l[0]:\n        for j in range(n - 1, -1, -1):\n            if l[j] == l[0]:\n                print(j + 1)\n                break", "def func(arr, k):\n    jpos = 0\n    for i in range(0, len(arr) - 1):\n        if arr[i] != arr[i + 1]:\n            jpos += 1\n    if k <= jpos:\n        if k % 2 == 0:\n            end = arr[0]\n        elif arr[0] == '0':\n            end = '1'\n        else:\n            end = '0'\n    else:\n        return -1\n    for i in range(len(arr) - 1, -1, -1):\n        if arr[i] == end:\n            return i + 1\nt = int(input())\nfor i in range(0, t):\n    (n, k) = list(map(int, input().strip().split()))\n    arr = input()\n    print(func(arr, k))", "t = int(input())\nc = ''\nwhile t > 0:\n    flag = 0\n    count = 0\n    (n, k) = map(int, input().split())\n    s = input()\n    c = s[0]\n    for x in s:\n        j = x\n        if j != c:\n            c = j\n            flag = 1\n            count += 1\n    if flag == 0:\n        print('-1')\n    elif count < k:\n        print('-1')\n    elif k % 2 == 0:\n        for i in range(n - 1, 0, -1):\n            if s[0] == s[i]:\n                print(i + 1)\n                break\n    else:\n        for i in range(n - 1, 0, -1):\n            if s[0] != s[i]:\n                print(i + 1)\n                break\n    t -= 1", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    (n, k) = map(int, stdin.readline().split())\n    s = stdin.readline()\n    li = [s[0]]\n    (r, key) = (k, n + 1)\n    c = 0\n    for i in range(1, n):\n        if r == 1:\n            key = i - 1\n            break\n        if li[-1] != s[i]:\n            li.append(s[i])\n            r -= 1\n            key = c\n        c += 1\n    ind = []\n    for i in range(key + 1, n):\n        if li[-1] != s[i]:\n            ind.append(i)\n            r -= 1\n    if r > 0:\n        print(-1)\n    else:\n        print(ind[-1] + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, list(input())))\n    prev = arr[0]\n    jumps = 0\n    f = -1\n    for i in range(n):\n        if arr[i] == (not prev):\n            jumps += 1\n            prev = arr[i]\n        if jumps == k:\n            f = i\n            break\n    else:\n        print(-1)\n    if f != -1:\n        for i in range(n - 1, -1, -1):\n            if arr[i] == arr[f]:\n                print(i + 1)\n                break", "for q in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    flag = int(s[0])\n    ans = -1\n    temp = 0\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            temp += 1\n    if not temp >= k:\n        print(-1)\n        continue\n    for i in range(n - 1, -1, -1):\n        if k % 2 == 0:\n            if s[0] == s[i]:\n                ans = i + 1\n                break\n        elif s[0] != s[i]:\n            ans = i + 1\n            break\n    print(ans)", "T = int(input())\nwhile T > 0:\n    (n, k) = map(int, input().split())\n    arr = input()\n    count = 0\n    (last_zero, last_one) = (-1, -1)\n    for i in range(n):\n        if i > 0 and arr[i] != arr[i - 1]:\n            count += 1\n        if arr[i] == '0':\n            last_zero = i\n        else:\n            last_one = i\n    if count >= k:\n        if k % 2 == 0:\n            if arr[0] == '0':\n                print(last_zero + 1)\n            else:\n                print(last_one + 1)\n        elif arr[0] == '0':\n            print(last_one + 1)\n        else:\n            print(last_zero + 1)\n    else:\n        print(-1)\n    T -= 1", "import collections\nimport sys\n\ndef scan():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef solution():\n    for _ in range(int(input())):\n        (n, k) = scan()\n        s = input()\n        s = [int(i) for i in s]\n        c = 0\n        for i in range(1, n):\n            if s[i] != s[i - 1]:\n                c += 1\n        if c >= k:\n            for i in range(n - 1, -1, -1):\n                if k % 2 == 1 and s[i] != s[0]:\n                    print(i + 1)\n                    break\n                elif k % 2 == 0 and s[i] == s[0]:\n                    print(i + 1)\n                    break\n        else:\n            print(-1)\nsolution()", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    s = input()\n    count = 0\n    start = s[0]\n    for j in range(1, N):\n        if s[j] != start:\n            count += 1\n            if start == '0':\n                start = '1'\n            else:\n                start = '0'\n    if count >= K:\n        if K % 2 == 0:\n            if s[0] == '0':\n                end = '0'\n            else:\n                end = '1'\n        elif s[0] == '0':\n            end = '1'\n        else:\n            end = '0'\n        for j in range(N - 1, 0, -1):\n            if s[j] == end:\n                print(j + 1)\n                break\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    jump = prev = 0\n    for i in range(1, n):\n        if s[i] != s[prev]:\n            jump += 1\n        prev = i\n    if jump < k:\n        print(-1)\n    else:\n        for i in range(n - 1, -1, -1):\n            if k % 2 == 0 and s[i] == s[0]:\n                print(i + 1)\n                break\n            elif k % 2 != 0 and s[i] != s[0]:\n                print(i + 1)\n                break", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    num = input()\n    jumps = 0\n    flag = num[0]\n    for i in num:\n        if flag != i:\n            flag = i\n            jumps += 1\n    if jumps < k:\n        print('-1')\n    else:\n        ans = 0\n        if num[0] == '1':\n            if k % 2 == 0:\n                for j in range(len(num) - 1, 0, -1):\n                    if num[j] == '1':\n                        ans = j + 1\n                        break\n            else:\n                for j in range(len(num) - 1, 0, -1):\n                    if num[j] == '0':\n                        ans = j + 1\n                        break\n        elif k % 2 == 0:\n            for j in range(len(num) - 1, 0, -1):\n                if num[j] == '0':\n                    ans = j + 1\n                    break\n        else:\n            for j in range(len(num) - 1, 0, -1):\n                if num[j] == '1':\n                    ans = j + 1\n                    break\n        print(ans)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    num = input()\n    jumps = 0\n    flag = num[0]\n    for i in num:\n        if flag != i:\n            flag = i\n            jumps += 1\n    if jumps < k:\n        print('-1')\n    else:\n        ans = 0\n        if num[0] == '1':\n            if k % 2 == 0:\n                for j in range(len(num) - 1, -1, -1):\n                    if num[j] == '1':\n                        ans = j + 1\n                        break\n            else:\n                for j in range(len(num) - 1, -1, -1):\n                    if num[j] == '0':\n                        ans = j + 1\n                        break\n        elif k % 2 == 0:\n            for j in range(len(num) - 1, -1, -1):\n                if num[j] == '0':\n                    ans = j + 1\n                    break\n        else:\n            for j in range(len(num) - 1, -1, -1):\n                if num[j] == '1':\n                    ans = j + 1\n                    break\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    count = len([i for i in range(1, n) if s[i] != s[i - 1]])\n    if count < k:\n        print(-1)\n        continue\n    for i in reversed(range(n)):\n        if k % 2 and s[i] != s[0] or (not k % 2 and s[i] == s[0]):\n            print(i + 1)\n            break", "try:\n    t = int(input())\n    for i in range(t):\n        (n, k) = map(int, input().split())\n        arr = input()\n        c = 0\n        for i in range(1, n):\n            if arr[i] != arr[i - 1]:\n                c += 1\n        if c >= k:\n            for i in range(n - 1, 0, -1):\n                if k % 2 != 0 and arr[i] != arr[0]:\n                    print(i + 1)\n                    break\n                elif k % 2 == 0 and arr[i] == arr[0]:\n                    print(i + 1)\n                    break\n        else:\n            print('-1')\nexcept Exception as e:\n    pass", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    count = 0\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            count += 1\n    if count < k:\n        print(-1)\n        continue\n    for i in range(n - 1, -1, -1):\n        if k % 2 and s[i] != s[0] or (not k % 2 and s[i] == s[0]):\n            print(i + 1)\n            break", "t = int(input())\nfor tt in range(t):\n    (n, k) = map(int, input().split())\n    string = str(input())\n    possible = 0\n    for i in range(1, n):\n        if string[i] != string[i - 1]:\n            possible += 1\n    if k > possible:\n        print(-1)\n    else:\n        for i in range(n - 1, -1, -1):\n            if k % 2 & (string[i] != string[0]):\n                print(i + 1)\n                break\n            elif (k % 2 == 0) & (string[i] == string[0]):\n                print(i + 1)\n                break", "def game(s, k):\n    l = []\n    li = 0\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            li += 1\n            l.append(i)\n    if li >= k:\n        for i in range(len(s) - 1, -1, -1):\n            if k % 2 == 0:\n                if s[i] == s[0]:\n                    return i + 1\n            elif s[i] != s[0]:\n                return i + 1\n    else:\n        return -1\nfor i in range(int(input())):\n    (N, k) = input().split(' ')\n    s = input()\n    print(game(s, int(k)))", "T = int(input())\nwhile T > 0:\n    (N, K) = list(map(int, input().split()))\n    str = input()\n    ch = 0\n    if int(K) > int(N):\n        print(-1)\n    for i in range(1, int(N)):\n        if str[i] != str[i - 1]:\n            ch = ch + 1\n    if int(K) > int(ch):\n        print(-1)\n    elif ch % 2 == 0 and K % 2 == 0 or (ch % 2 != 0 and int(K) % 2 != 0):\n        print(N)\n    else:\n        j = N - 2\n        while j > 0:\n            if str[j] == str[N - 1]:\n                j = j - 1\n            else:\n                print(j + 1)\n                break\n    T = T - 1", "for t in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    (li, l) = ([], 0)\n    p = s[0]\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            li.append(i)\n            l += 1\n    if l >= k:\n        if s[0] == s[-1]:\n            if k % 2:\n                print(li[-1])\n            else:\n                print(n)\n        elif k % 2:\n            print(n)\n        else:\n            print(li[-1])\n    else:\n        print(-1)", "t = int(input())\n\ndef check(s):\n    count = 0\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            count += 1\n    return count\nfor _ in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    str = input()\n    count = check(str)\n    if count < k:\n        print(-1)\n    elif str[0] == '1':\n        if k % 2 == 0:\n            print(str.rindex('1') + 1)\n        else:\n            print(str.rindex('0') + 1)\n    elif k % 2 == 0:\n        print(str.rindex('0') + 1)\n    else:\n        print(str.rindex('1') + 1)", "def check(n, k, arr):\n    sharma = ''\n    s = '2'\n    for i in arr:\n        if i != s:\n            sharma += i\n            s = i\n    if len(sharma) - 1 < k:\n        return -1\n    if sharma[0] == '1':\n        if k % 2 == 0:\n            val = '1'\n        else:\n            val = '0'\n    elif k % 2 == 0:\n        val = '0'\n    else:\n        val = '1'\n    index = 0\n    for i in range(n):\n        if arr[i] == val:\n            index = i\n    index += 1\n    return index\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = input()\n    print(check(n, k, arr))", "for i in range(int(input())):\n    (N, K) = map(int, input().split())\n    s = input()\n    count = 0\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            count += 1\n    if count >= K:\n        for i in range(len(s) - 1, -1, -1):\n            if K % 2 == 0 and s[i] == s[0]:\n                print(i + 1)\n                break\n            elif K % 2 != 0 and s[i] != s[0]:\n                print(i + 1)\n                break\n    else:\n        print('-1')", "t = int(input())\n\ndef funcCheck(arr):\n    ct = 0\n    flag = arr[0]\n    for i in arr:\n        if flag != i:\n            ct += 1\n            flag = i\n    return ct\nfor i in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    arr = input()\n    if funcCheck(arr) < k:\n        print('-1')\n        continue\n    ans = 0\n    if arr[0] == '0':\n        if k % 2 == 0:\n            for i in range(len(arr) - 1, -1, -1):\n                if arr[i] == '0':\n                    ans = i + 1\n                    break\n        else:\n            for i in range(len(arr) - 1, -1, -1):\n                if arr[i] == '1':\n                    ans = i + 1\n                    break\n    elif k % 2 == 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] == '1':\n                ans = i + 1\n                break\n    else:\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] == '0':\n                ans = i + 1\n                break\n    print(ans)", "t = int(input())\n\ndef funcCheck(arr):\n    ct = 0\n    flag = arr[0]\n    for i in arr:\n        if flag != i:\n            ct += 1\n            flag = i\n    return ct\nfor i in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    arr = input()\n    if funcCheck(arr) < k:\n        print('-1')\n        continue\n    ans = 0\n    if arr[0] == '0':\n        if k % 2 == 0:\n            for i in range(len(arr) - 1, -1, -1):\n                if arr[i] == '0':\n                    ans = i + 1\n                    break\n        else:\n            for i in range(len(arr) - 1, -1, -1):\n                if arr[i] == '1':\n                    ans = i + 1\n                    break\n    elif k % 2 == 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] == '1':\n                ans = i + 1\n                break\n    else:\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] == '0':\n                ans = i + 1\n                break\n    print(ans)", "t = int(input())\n\ndef funcCheck(arr):\n    ct = 0\n    flag = arr[0]\n    for i in arr:\n        if flag != i:\n            ct += 1\n            flag = i\n    return ct\nfor i in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    arr = input()\n    if funcCheck(arr) < k:\n        print('-1')\n        continue\n    ans = 0\n    if arr[0] == '0':\n        if k % 2 == 0:\n            for i in range(len(arr) - 1, -1, -1):\n                if arr[i] == '0':\n                    ans = i + 1\n                    break\n        else:\n            for i in range(len(arr) - 1, -1, -1):\n                if arr[i] == '1':\n                    ans = i + 1\n                    break\n    elif k % 2 == 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] == '1':\n                ans = i + 1\n                break\n    else:\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] == '0':\n                ans = i + 1\n                break\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = input()\n    c = 0\n    an = -1\n    h = '0'\n    for i in range(1, n):\n        if a[i - 1] != a[i] and c < k:\n            c += 1\n            an = i + 1\n            h = a[i]\n        if c == k and a[i] == h:\n            an = i + 1\n    if c == k:\n        print(an)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = input()\n    count = 0\n    for i in range(n - 1):\n        if a[i] != a[i + 1]:\n            count += 1\n    if count < k:\n        print(-1)\n    elif k % 2 == 0:\n        i = n - 1\n        while a[0] != a[i]:\n            i -= 1\n        print(i + 1)\n    else:\n        i = n - 1\n        while a[0] == a[i]:\n            i -= 1\n        print(i + 1)", "for _ in range(int(input())):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    s = input()\n    cn = 0\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            cn += 1\n    if cn >= k:\n        for i in range(n - 1, -1, -1):\n            if k % 2 == 0 and s[i] == s[0]:\n                print(i + 1)\n                break\n            elif k % 2 != 0 and s[i] != s[0]:\n                print(i + 1)\n                break\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    if len(set(s)) == 1:\n        print(-1)\n        continue\n    curr_z = -1\n    curr_o = -1\n    if s[0] == '0':\n        nexti = 0\n    else:\n        nexti = 1\n    count = -1\n    for i in range(n):\n        if s[i] == '0' and nexti == 0:\n            if count < k:\n                curr_z = i\n                count += 1\n                nexti = 1\n        elif s[i] == '0' and nexti == 1:\n            curr_z = i\n        elif s[i] == '1' and nexti == 1:\n            if count < k:\n                curr_o = i\n                count += 1\n                nexti = 0\n        elif s[i] == '1' and nexti == 0:\n            curr_o = i\n    if count < k:\n        ans = -1\n    elif count == k:\n        if nexti == 1:\n            ans = curr_z + 1\n        else:\n            ans = curr_o + 1\n    print(ans)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    p = s[0]\n    for i in range(1, n):\n        if s[i] != p:\n            c += 1\n            p = s[i]\n    if c < k:\n        print(-1)\n        continue\n    if s[0] == '0':\n        if k % 2 == 0:\n            for i in range(n - 1, -1, -1):\n                if s[i] == '0':\n                    print(i + 1)\n                    break\n        else:\n            for i in range(n - 1, -1, -1):\n                if s[i] == '1':\n                    print(i + 1)\n                    break\n    elif k % 2 == 0:\n        for i in range(n - 1, -1, -1):\n            if s[i] == '1':\n                print(i + 1)\n                break\n    else:\n        for i in range(n - 1, -1, -1):\n            if s[i] == '0':\n                print(i + 1)\n                break", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    s1 = s[::-1]\n    c = 0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            c += 1\n    if c < k:\n        print('-1')\n    elif s[0] == '1':\n        if k % 2 == 0:\n            print(n - s1.index('1'))\n        else:\n            print(n - s1.index('0'))\n    elif k % 2 == 0:\n        print(n - s1.index('0'))\n    else:\n        print(n - s1.index('1'))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = input()\n    count = 0\n    for i in range(n - 1):\n        if a[i] != a[i + 1]:\n            count += 1\n    if count < k:\n        print(-1)\n    elif k % 2 == 0:\n        i = n - 1\n        while a[0] != a[i]:\n            i -= 1\n        print(i + 1)\n    else:\n        i = n - 1\n        while a[0] == a[i]:\n            i -= 1\n        print(i + 1)", "def zebra(arr, N, K):\n    a = 0\n    for i in range(N - 1):\n        if arr[i] != arr[i + 1]:\n            a += 1\n    if a < K:\n        print(-1)\n        return\n    i = N - 1\n    while i >= 0:\n        if K % 2 == 0:\n            if arr[0] == arr[i]:\n                print(i + 1)\n                return\n        elif arr[0] != arr[i]:\n            print(i + 1)\n            return\n        i -= 1\nT = int(input())\np1 = 0\nfor i in range(T * 2):\n    if p1 == 0:\n        (N, K) = input().strip().split()\n        N = int(N)\n        K = int(K)\n        p1 += 1\n    else:\n        p1 -= 1\n        str = input()\n        str = [int(i) for i in str]\n        zebra(str, N, K)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    count = 0\n    curr = s[0]\n    for i in s[1:]:\n        if i != curr:\n            curr = i\n            count += 1\n    if k > count:\n        print(-1)\n    else:\n        if k % 2 == 0:\n            target = s[0]\n        else:\n            target = str(1 - int(s[0]))\n        for i in range(1, n):\n            if s[-i] == target:\n                print(n - i + 1)\n                break", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            c += 1\n    if c < k:\n        print(-1)\n    elif s[0] == '0':\n        if k % 2 == 0:\n            print(n - s[::-1].index('0'))\n        else:\n            print(n - s[::-1].index('1'))\n    elif k % 2 == 0:\n        print(n - s[::-1].index('1'))\n    else:\n        print(n - s[::-1].index('0'))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 0\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            c += 1\n    if c < k:\n        print(-1)\n    elif s[0] == '0':\n        if k % 2 == 0:\n            print(n - s[::-1].index('0'))\n        else:\n            print(n - s[::-1].index('1'))\n    elif k % 2 == 0:\n        print(n - s[::-1].index('1'))\n    else:\n        print(n - s[::-1].index('0'))", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    crossing = 0\n    lzero = 0\n    lone = 0\n    for i in range(N):\n        if i != N - 1 and S[i] != S[i + 1]:\n            crossing += 1\n        if S[i] == '0':\n            lzero = i\n        else:\n            lone = i\n    if crossing < K:\n        print(-1)\n    else:\n        print(lone + 1 if int(S[0]) + K & 1 else lzero + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    s = input()\n    count = 0\n    for i in range(len(s) - 1):\n        if s[i] != s[i + 1]:\n            count += 1\n    if count >= k:\n        if k % 2 == 0:\n            for j in range(len(s) - 1, 0, -1):\n                if s[j] == s[0]:\n                    print(j + 1)\n                    break\n        else:\n            for j in range(len(s) - 1, 0, -1):\n                if s[j] != s[0]:\n                    print(j + 1)\n                    break\n    else:\n        print('-1')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = input()\n    if a.count('0') == 0 or a.count('1') == 0:\n        print(-1)\n    else:\n        s = 0\n        s += a.count('10')\n        s += a.count('01')\n        if k > s:\n            print(-1)\n        elif a[0] == '1':\n            if k % 2 == 0:\n                print(a.rfind('1') + 1)\n            else:\n                print(a.rfind('0') + 1)\n        elif k % 2 == 0:\n            print(a.rfind('0') + 1)\n        else:\n            print(a.rfind('1') + 1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    count = 0\n    last = s[0]\n    for i in range(1, n):\n        if s[i] != last:\n            count += 1\n            last = s[i]\n            farthest = i\n    if count < k:\n        print(-1)\n    else:\n        for j in range(n - 1, -1, -1):\n            if k % 2 == 0:\n                if s[j] == s[0]:\n                    print(j + 1)\n                    break\n            elif s[j] != s[0]:\n                print(j + 1)\n                break", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = str(input())\n    c = 0\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            c += 1\n    if c >= k:\n        s1 = s[::-1]\n        for i in range(n - 1, 0, -1):\n            if k % 2 != 0 and s[i] != s[0]:\n                print(i + 1)\n                break\n            elif k % 2 == 0 and s[i] == s[0]:\n                print(i + 1)\n                break\n    else:\n        print(-1)", "t = int(input())\nwhile t != 0:\n    (n, k) = map(int, input().split())\n    s = input()\n    count = 0\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            count += 1\n    if count >= k:\n        Find = s[0]\n        if k % 2 != 0:\n            if Find == '0':\n                Find = '1'\n            else:\n                Find = '0'\n        for i in range(n - 1, -1, -1):\n            if s[i] == Find:\n                print(i + 1)\n                break\n    else:\n        print(-1)\n    t -= 1", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    n = input()\n    count = 0\n    for i in range(N - 1):\n        if n[i] != n[i + 1]:\n            count += 1\n    if count >= K:\n        for i in range(N - 1, 0, -1):\n            if K % 2 == 0:\n                if n[i] == n[0]:\n                    print(i + 1)\n                    break\n            elif n[i] != n[0]:\n                print(i + 1)\n                break\n    else:\n        print(-1)", "T = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    binary = input()\n    possible_jumps = sum([binary[i - 1] != binary[i] for i in range(1, N)])\n    if possible_jumps < K:\n        print(-1)\n    else:\n        if K % 2 == 0:\n            pos = binary[0]\n        else:\n            pos = ['1', '0'][binary[0] == '1']\n        while N:\n            if binary[N - 1] == pos:\n                print(N)\n                break\n            N -= 1", "import math\nimport bisect\nimport collections\n\ndef combination(n, r):\n    return math.comb(n, r)\n\ndef listing():\n    return list(map(int, input().split()))\n\ndef intp():\n    return int(input())\n\ndef inp():\n    return input()\n\ndef inpspl():\n    return input().split()\n\ndef mapping():\n    return map(int, input().split(' '))\n\ndef sqrt(n):\n    return math.sqrt(n)\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef p(s):\n    print(f'{s}')\n\ndef lsetl(lst):\n    return list(set(lst))\n\ndef nCr(n, r):\n    f = math.factorial\n    return f(n) // f(r) // f(abs(n - r))\n\ndef frequencyofall(lst):\n    return dict(collections.Counter(lst))\n\ndef ispowerof2(n):\n    return n & n - 1 == 0\n\ndef ispowerof3(n):\n    return math.log10(n) / math.log10(3) % 1 == 0\n\ndef dictionarysort(d):\n    return collections.OrderedDict(sorted(d.items()))\n\ndef bintoint(s):\n    return int(s, 2)\n\ndef solve():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        s = input()\n        if s.count('0') == n or s.count('1') == n:\n            print(-1)\n            continue\n        fb = s[0]\n        count = 0\n        for i in range(1, n):\n            if s[i - 1] != s[i]:\n                count += 1\n        if count < k:\n            print(-1)\n            continue\n        for i in range(n - 1, -1, -1):\n            if k % 2 == 0:\n                if s[i] == fb:\n                    print(i + 1)\n                    break\n            elif s[i] != fb:\n                print(i + 1)\n                break\nsolve()", "try:\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        la = input()\n        count = 0\n        for i in range(1, len(la)):\n            if la[i] != la[i - 1]:\n                count += 1\n        if count >= k:\n            if k % 2 == 0:\n                for i in range(n - 1, -1, -1):\n                    if la[i] == la[0]:\n                        print(i + 1)\n                        break\n            else:\n                for i in range(n - 1, -1, -1):\n                    if la[i] != la[0]:\n                        print(i + 1)\n                        break\n        else:\n            print('-1')\nexcept Exception:\n    pass", "try:\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        la = input()\n        count = 0\n        for i in range(1, len(la)):\n            if la[i] != la[i - 1]:\n                count += 1\n        if count >= k:\n            if k % 2 == 0:\n                for i in range(n - 1, -1, -1):\n                    if la[i] == la[0]:\n                        print(i + 1)\n                        break\n            else:\n                for i in range(n - 1, -1, -1):\n                    if la[i] != la[0]:\n                        print(i + 1)\n                        break\n        else:\n            print('-1')\nexcept Exception:\n    pass", "try:\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        la = input()\n        count = 0\n        for i in range(1, len(la)):\n            if la[i] != la[i - 1]:\n                count += 1\n        if count >= k:\n            if k % 2 == 0:\n                for i in range(n - 1, -1, -1):\n                    if la[i] == la[0]:\n                        print(i + 1)\n                        break\n            else:\n                for i in range(n - 1, -1, -1):\n                    if la[i] != la[0]:\n                        print(i + 1)\n                        break\n        else:\n            print('-1')\nexcept Exception:\n    pass", "try:\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        la = input()\n        count = 0\n        for i in range(1, len(la)):\n            if la[i] != la[i - 1]:\n                count += 1\n        if count >= k:\n            if k % 2 == 0:\n                for i in range(n - 1, -1, -1):\n                    if la[i] == la[0]:\n                        print(i + 1)\n                        break\n            else:\n                for i in range(n - 1, -1, -1):\n                    if la[i] != la[0]:\n                        print(i + 1)\n                        break\n        else:\n            print('-1')\nexcept Exception:\n    pass", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    pval = s[0]\n    nval = None\n    c = 0\n    for nval in s:\n        if nval != pval:\n            c += 1\n            pval = nval\n    if c >= k:\n        if k % 2 == 0:\n            for i in range(n - 1, -1, -1):\n                if s[0] == s[i]:\n                    print(i + 1)\n                    break\n        else:\n            for i in range(n - 1, -1, -1):\n                if s[0] != s[i]:\n                    print(i + 1)\n                    break\n    else:\n        print(-1)"]