["def next_gre(arr):\n    stack = []\n    n = len(arr)\n    next_greater = [n] * n\n    for i in range(n):\n        x = arr[i]\n        while len(stack) and stack[-1][0] < x:\n            y = stack.pop(-1)[1]\n            next_greater[y] = i\n        stack.append((x, i))\n    return next_greater\nMOD = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    suff = [0] * (n + 1)\n    suff[n] = 1\n    suff[n - 1] = 2\n    next_greater = next_gre(arr)\n    prev = n\n    dp = [0] * (n + 1)\n    dp[n - 1] = 1\n    dp[n] = 1\n    for i in range(n - 2, -1, -1):\n        if arr[i] > arr[i + 1]:\n            prev = next_greater[i]\n        dp[i] = (suff[i + 1] - suff[prev] + dp[prev]) % MOD\n        suff[i] = (suff[i + 1] + dp[i]) % MOD\n    print(dp[0] % MOD)", "def next_gre(arr):\n    stack = []\n    n = len(arr)\n    next_greater = [n] * n\n    for i in range(n):\n        x = arr[i]\n        while len(stack) and stack[-1][0] < x:\n            y = stack.pop(-1)[1]\n            next_greater[y] = i\n        stack.append((x, i))\n    return next_greater\nMOD = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    suff = [0] * (n + 1)\n    suff[n] = 1\n    suff[n - 1] = 2\n    next_greater = next_gre(arr)\n    prev = n\n    dp = [0] * (n + 1)\n    dp[n - 1] = 1\n    dp[n] = 1\n    for i in range(n - 2, -1, -1):\n        if arr[i] > arr[i + 1]:\n            prev = next_greater[i]\n        dp[i] = (suff[i + 1] - suff[prev] + dp[prev]) % MOD\n        suff[i] = (suff[i + 1] + dp[i]) % MOD\n    print(dp[0] % MOD)", "def next_gre(arr):\n    stack = []\n    n = len(arr)\n    next_greater = [n] * n\n    for i in range(n):\n        x = arr[i]\n        while len(stack) and stack[-1][0] < x:\n            y = stack.pop(-1)[1]\n            next_greater[y] = i\n        stack.append((x, i))\n    return next_greater\nMOD = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    suff = [0] * (n + 1)\n    suff[n] = 1\n    suff[n - 1] = 2\n    next_greater = next_gre(arr)\n    prev = n\n    dp = [0] * (n + 1)\n    dp[n - 1] = 1\n    dp[n] = 1\n    for i in range(n - 2, -1, -1):\n        if arr[i] > arr[i + 1]:\n            prev = next_greater[i]\n        dp[i] = (suff[i + 1] - suff[prev] + dp[prev]) % MOD\n        suff[i] = (suff[i + 1] + dp[i]) % MOD\n    print(dp[0] % MOD)", "def next_gre(arr):\n    stack = []\n    n = len(arr)\n    next_greater = [n] * n\n    for i in range(n):\n        x = arr[i]\n        while len(stack) and stack[-1][0] < x:\n            y = stack.pop(-1)[1]\n            next_greater[y] = i\n        stack.append((x, i))\n    return next_greater\nMOD = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    suff = [0] * (n + 1)\n    suff[n] = 1\n    suff[n - 1] = 2\n    next_greater = next_gre(arr)\n    prev = n\n    dp = [0] * (n + 1)\n    dp[n - 1] = 1\n    dp[n] = 1\n    for i in range(n - 2, -1, -1):\n        if arr[i] > arr[i + 1]:\n            prev = next_greater[i]\n        dp[i] = (suff[i + 1] - suff[prev] + dp[prev]) % MOD\n        suff[i] = (suff[i + 1] + dp[i]) % MOD\n    print(dp[0] % MOD)"]