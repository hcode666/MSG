["for j in range(int(input())):\n    (p, x, y, z, a, b) = map(int, input().split())\n    y = x * a + y\n    z = x * b + z\n    r = min(y, z)\n    print(int(p / r))", "for i in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    b = a * x + b\n    c = a * y + c\n    r = min(b, c)\n    print(int(p / r))", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    A = a * x + b\n    C = a * y + c\n    m = min(A, C)\n    print(p // m)", "t = int(input())\nfor _ in range(t):\n    (Amt, a, b, c, x, y) = map(int, input().split())\n    a1 = b + a * x\n    a2 = c + a * y\n    m = min(a1, a2)\n    print(Amt // m)", "t = int(input())\nfor _ in range(t):\n    (Amt, a, b, c, x, y) = map(int, input().split())\n    a1 = b + a * x\n    a2 = c + a * y\n    m = min(a1, a2)\n    print(Amt // m)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    A = a * x + b\n    C = a * y + c\n    m = min(A, C)\n    print(p // m)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    A = a * x + b\n    C = a * y + c\n    m = min(A, C)\n    print(p // m)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    A = a * x + b\n    C = a * y + c\n    m = min(A, C)\n    print(p // m)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    A = a * x + b\n    C = a * y + c\n    m = min(A, C)\n    print(p // m)", "t = int(input())\nfor _ in range(0, t):\n    (p, a, b, c, x, y) = map(int, input().split())\n    A = a * x + b\n    C = a * y + c\n    m = min(A, C)\n    print(p // m)", "for x in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    t = p // (b + x * a)\n    t += (p - t * (b + x * a)) // (c + y * a)\n    r = p // (c + y * a)\n    r += (p - r * (c + y * a)) // (b + x * a)\n    print(max(t, r))", "T = int(input())\nfor i in range(T):\n    (P, a, b, c, x, y) = map(int, input().split())\n    cost = min(c + y * a, b + x * a)\n    print(P // cost)", "T = int(input())\nfor i in range(T):\n    (P, a, b, c, x, y) = map(int, input().split())\n    cost = min(c + y * a, b + x * a)\n    print(P // cost)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    a = l[1] * l[4] + l[2]\n    f = l[1] * l[5] + l[3]\n    if a <= f:\n        print(l[0] // a)\n    else:\n        print(l[0] // f)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    a = l[1] * l[4] + l[2]\n    f = l[1] * l[5] + l[3]\n    if a <= f:\n        print(l[0] // a)\n    else:\n        print(l[0] // f)", "for ra in range(int(input())):\n    (dd, f, u, c, ra, md) = map(int, input().split())\n    t = dd // (u + ra * f)\n    t += (dd - t * (u + ra * f)) // (c + md * f)\n    jd = dd // (c + md * f)\n    jd += (dd - jd * (c + md * f)) // (u + ra * f)\n    print(max(t, jd))", "for x in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    t = p // (b + x * a)\n    t += (p - t * (b + x * a)) // (c + y * a)\n    r = p // (c + y * a)\n    r += (p - r * (c + y * a)) // (b + x * a)\n    print(max(t, r))", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    anar = l[1] * l[4] + l[2]\n    fuli = l[1] * l[5] + l[3]\n    if anar <= fuli:\n        print(l[0] // anar)\n    else:\n        print(l[0] // fuli)", "tests = int(input())\nfor i in range(tests):\n    (P, a, b, c, x, y) = map(int, input().split())\n    each_anar = b + x * a\n    each_chakri = c + y * a\n    print(max(P // each_anar, P // each_chakri))", "tests = int(input())\nfor i in range(tests):\n    (P, a, b, c, x, y) = map(int, input().split())\n    each_anar = b + x * a\n    each_chakri = c + y * a\n    case_one = P // each_chakri + P % each_chakri // each_anar\n    case_two = P // each_anar + P % each_anar // each_chakri\n    print(max(case_one, case_two))", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    anar = a * x + b\n    chakri = a * y + c\n    sumi = 0\n    if anar < chakri:\n        sumi = p // anar\n        p = p - sumi * anar\n        sumi += p // chakri\n    else:\n        sumi = p // chakri\n        p = p - sumi * chakri\n        sumi += p // anar\n    print(sumi)", "t = int(input())\nfor i in range(t):\n    (p, a, b, c, x, y) = map(int, input().split())\n    z1 = b + a * x\n    z2 = c + y * a\n    if z1 > z2:\n        print(p // z2)\n    else:\n        print(p // z1)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    d = x * a + b\n    e = y * a + c\n    a1 = p // d\n    a2 = p // e\n    print(a1 if a1 >= a2 else a2)", "for t in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    z = min(x * a + b, y * a + c)\n    print(p // z)", "for t in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    z = min(x * a + b, y * a + c)\n    print(p // z)", "import sys\nfor x in range(int(input())):\n    (p, a, b, c, x, y) = map(int, sys.stdin.readline().strip().split())\n    print(p // min(x * a + b, y * a + c))", "for x in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    print(p // min(x * a + b, y * a + c))", "for x in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    aa = x * a + b\n    bb = y * a + c\n    print(p // min(aa, bb))", "for i in range(int(input())):\n    (P, a, b, c, x, y) = map(int, input().split())\n    print(int(P / min(b + x * a, c + y * a)))", "for _ in range(int(input())):\n    (P, a, b, c, x, y) = map(int, input().split())\n    b = b + a * x\n    c = c + a * y\n    k = min(b, c)\n    print(P // k)", "t = int(input())\nfor j in range(t):\n    (p, a, b, c, x, y) = map(int, input().split())\n    r = b + x * a\n    s = c + y * a\n    v = min(r, s)\n    print(p // v)", "for _ in range(int(input())):\n    (P, a, b, c, x, y) = map(int, input().split())\n    b = b + a * x\n    c = c + a * y\n    k = min(b, c)\n    print(P // k)", "t = int(input())\nfor i in range(t):\n    (p, a, b, c, x, y) = map(int, input().split())\n    num = min(b + a * x, c + a * y)\n    print(p // num)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef solve():\n    (p, a, b, c, x, y) = get_ints()\n    print(int(p / min(x * a + b, y * a + c)))\nfor i in range(int(input())):\n    solve()", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef solve():\n    (p, a, b, c, x, y) = get_ints()\n    print(int(p / min(x * a + b, y * a + c)))\nfor i in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (P, a, b, c, x, y) = map(int, input().split())\n    res = max(P // (a * x + b), P // (a * y + c))\n    print(res)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    k = min(l[2] + l[4] * l[1], l[3] + l[5] * l[1])\n    print(l[0] // k)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    k = min(l[2] + l[4] * l[1], l[3] + l[5] * l[1])\n    print(l[0] // k)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    k = min(l[2] + l[4] * l[1], l[3] + l[5] * l[1])\n    print(l[0] // k)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    k = min(l[2] + l[4] * l[1], l[3] + l[5] * l[1])\n    print(l[0] // k)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    k = min(l[2] + l[4] * l[1], l[3] + l[5] * l[1])\n    print(l[0] // k)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    cost_anar = b + x * a\n    cost_chakri = c + y * a\n    print(p // min(cost_anar, cost_chakri))", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    cost_anar = b + x * a\n    cost_chakri = c + y * a\n    print(p // min(cost_anar, cost_chakri))", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    k = min(l[2] + l[4] * l[1], l[3] + l[5] * l[1])\n    print(l[0] // k)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    k = min(l[2] + l[4] * l[1], l[3] + l[5] * l[1])\n    print(l[0] // k)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    k = min(l[2] + l[4] * l[1], l[3] + l[5] * l[1])\n    print(l[0] // k)", "t = int(input())\nfor i in range(t):\n    (amount, a, b, c, x, y) = map(int, input().split())\n    b = a * x + b\n    c = a * y + c\n    if b > c:\n        print(amount // c)\n    else:\n        print(amount // b)", "import sys\nimport bisect\ninp = sys.stdin.readline\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nfor _ in range(int(inp())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    b += x * a\n    c += y * a\n    print(p // min(b, c))", "try:\n    for _ in range(int(input())):\n        (p, a, b, c, x, y) = list(map(int, input().split()))\n        print(p // min(x * a + b, y * a + c))\nexcept:\n    pass", "t = int(input())\nfor i in range(t):\n    (a, b, c, d, e, f) = map(int, input().split())\n    s = b * e + c\n    x = b * f + d\n    m = min(s, x)\n    print(a // m)", "t = int(input())\nfor x in range(t):\n    (a, b, c, d, e, f) = input().split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    d = int(d)\n    e = int(e)\n    f = int(f)\n    fuljhari = b * e + c\n    chakris = b * f + d\n    r = min(fuljhari, chakris)\n    print(a // r)", "t = int(input())\nfor i in range(t):\n    (a, b, c, d, e, f) = map(int, input().split())\n    a1 = e * b + c\n    c1 = f * b + d\n    if a1 > c1:\n        ans = a // c1\n    else:\n        ans = a // a1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, a, b, c, x, y) = map(int, input().split())\n    b = a * x + b\n    c = a * y + c\n    m = min(b, c)\n    print(p // m)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = list(map(int, input().split()))\n    anar = b + x * a\n    chakri = c + y * a\n    ans = p / min(anar, chakri)\n    print(int(ans))", "for i in range(int(input())):\n    (p, a, b, c, x, y) = list(map(int, input().split()))\n    anar = b + x * a\n    chakri = c + y * a\n    ans = p / min(anar, chakri)\n    print(int(ans))", "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    ana = a[4] * a[1] + a[2]\n    ck = a[5] * a[1] + a[3]\n    one = min(ana, ck)\n    print(a[0] // one)", "for _ in range(int(input())):\n    i1 = input().split()\n    (P, a, b, c, x, y) = (int(i1[0]), int(i1[1]), int(i1[2]), int(i1[3]), int(i1[4]), int(i1[5]))\n    anar = 0\n    rocket = 0\n    cost_of_one_anar_with_fuljharis = b + x * a\n    cost_of_one_rocket_with_fuljharis = c + y * a\n    if cost_of_one_anar_with_fuljharis < cost_of_one_rocket_with_fuljharis:\n        anar += P // cost_of_one_anar_with_fuljharis\n    else:\n        rocket += P // cost_of_one_rocket_with_fuljharis\n    print(anar + rocket)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    n1 = p // (x * a + b)\n    n2 = p // (y * a + c)\n    print(max(n1, n2))", "t = int(input())\nfor i in range(0, t):\n    val = input().split()\n    for i in range(6):\n        val[i] = int(val[i])\n    c1 = val[1] * val[4] + val[2]\n    c2 = val[1] * val[5] + val[3]\n    print(val[0] // c1) if c1 < c2 else print(val[0] // c2)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split(' '))\n    total_1 = x * a + b\n    total_2 = y * a + c\n    maxi = 0\n    if total_1 <= total_2:\n        maxi = p // total_1\n    else:\n        maxi = p // total_2\n    print(maxi)", "for _ in range(int(input())):\n    (P, a, b, c, x, y) = map(int, input().split(' '))\n    num1 = x * a + b\n    num2 = y * a + c\n    ans = 0\n    if num1 <= num2:\n        ans = P // num1\n    else:\n        ans = P // num2\n    print(ans)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = tuple(map(int, input().split()))\n    anar = b + x * a\n    chari = c + y * a\n    if anar <= chari:\n        print(p // anar)\n    else:\n        print(p // chari)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (p, a, b, c, x, y) = list(map(int, input().split()))\n    a1 = p // (a * y + c)\n    a2 = p // (a * x + b)\n    print(max(a1, a2))", "for j in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    anar = x * a + b\n    chakri = y * a + c\n    count = 0\n    if anar < chakri:\n        count += int(p / anar)\n        p -= int(p / anar)\n    elif anar == chakri:\n        if x > y:\n            count += int(p / chakri)\n            p -= int(p / chakri)\n        elif y < x:\n            count += int(p / anar)\n            p -= int(p / anar)\n        elif b > c:\n            count += int(p / chakri)\n            p -= int(p / chakri)\n        else:\n            count += int(p / anar)\n            p -= int(p / anar)\n    else:\n        count += int(p / chakri)\n        p -= int(p / chakri)\n    print(count)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    print(p // min(b + x * a, c + y * a))", "for t in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    i = x * a + b\n    j = y * a + c\n    m = min(i, j)\n    print(p // m)", "for i in range(int(input())):\n    (p, a, b, c, x, y) = [int(x) for x in input().split()]\n    anar = x * a + b\n    chakri = y * a + c\n    print(max(p // anar, p // chakri))", "import sys\nMOD = 1000000007\n\ndef inp():\n    return sys.stdin.readline().strip()\n\ndef ii():\n    return int(inp())\n\ndef iis():\n    return [int(i) for i in inp().split()]\n\ndef solve():\n    (p, a, b, c, x, y) = iis()\n    return p // min(a * x + b, a * y + c)\nt = ii()\nfor _ in range(t):\n    print(solve())", "def doors(P, a, b, c, x, y):\n    anar_1 = b + a * x\n    chakri_1 = c + a * y\n    cnt = 0\n    if anar_1 <= chakri_1:\n        return P // anar_1\n    else:\n        return P // chakri_1\nt = int(input())\nfor i in range(t):\n    (P, a, b, c, x, y) = map(int, input().split())\n    print(doors(P, a, b, c, x, y))", "T = int(input())\nfor t in range(T):\n    (P, A, B, C, X, Y) = [int(k) for k in input().split()]\n    a = B + X * A\n    b = C + Y * A\n    print(P // min(a, b))", "t = int(input())\nfor _ in range(0, t):\n    (P, a, b, c, x, y) = map(int, input().split())\n    costa = b + x * a\n    costc = c + y * a\n    cost = min(costa, costc)\n    maxac = P // cost\n    print(maxac)", "t = int(input())\nfor _ in range(t):\n    (p, a, b, c, x, y) = map(int, input().split())\n    cost_of_anar = b + x * a\n    cost_of_chakri = c + y * a\n    cost = min(cost_of_chakri, cost_of_anar)\n    ans = p // cost\n    print(ans)", "def func():\n    (p, a, b, c, x, y) = map(int, input().split())\n    ac = b + x * a\n    cc = c + y * a\n    if ac < cc:\n        acnt = p // ac\n        ccnt = (p - acnt * ac) // cc\n        print(acnt + ccnt)\n    else:\n        ccnt = p // cc\n        acnt = (p - ccnt * cc) // ac\n        print(acnt + ccnt)\nt = int(input())\nfor i in range(t):\n    func()", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    anar = b + a * x\n    chakri = c + a * y\n    ans = 0\n    if anar < chakri:\n        ans += p // anar + p % anar // chakri\n    else:\n        ans += p // chakri + p % chakri // anar\n    print(ans)", "t = int(input())\nfor i in range(t):\n    ls = [int(x) for x in input().split(' ')]\n    P = ls[0]\n    a = ls[1]\n    b = ls[2]\n    c = ls[3]\n    x = ls[4]\n    y = ls[5]\n    print(P // int(min(x * a + b, y * a + c)))", "t = int(input())\nfor i in range(t):\n    ls = [int(x) for x in input().split(' ')]\n    P = ls[0]\n    a = ls[1]\n    b = ls[2]\n    c = ls[3]\n    x = ls[4]\n    y = ls[5]\n    print(P // int(min(x * a + b, y * a + c)))", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    b += x * a\n    c += y * a\n    print(max(p // b, p // c))", "t = int(input())\nfor _ in range(t):\n    (P, a, b, c, x, y) = map(int, input().split())\n    one1 = a * x + b\n    one2 = a * y + c\n    if one1 < one2:\n        ans = P // one1\n    else:\n        ans = P // one2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, a, b, c, x, y) = map(int, input().split())\n    c1 = x * a + b\n    c2 = y * a + c\n    mc = min(c1, c2)\n    print(p // mc)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    anar = b + a * x\n    chakri = c + a * y\n    print(p // min(anar, chakri))", "for tcase in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    print(p // min(b + a * x, c + a * y))", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = list(map(int, input().split()))\n    m1 = x * a + b\n    m2 = y * a + c\n    if m1 < m2:\n        print(p // m1)\n    else:\n        print(p // m2)", "def crackers_blast(p, a, b, c, x, y):\n    quantity1 = p // (x * a + b)\n    balance_quantity1 = p % (x * a + b)\n    quantity1 += balance_quantity1 // (y * a + c)\n    quantity2 = p // (y * a + c)\n    balance_quantity2 = p % (y * a + c)\n    quantity2 += balance_quantity2 // (x * a + b)\n    return max(quantity1, quantity2)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (p, a, b, c, x, y) = map(int, input().split())\n    print(crackers_blast(p, a, b, c, x, y))", "import sys\nimport math\nimport heapq\nfrom collections import defaultdict as dd\nfrom collections import OrderedDict as od\nfrom collections import deque\nfrom itertools import permutations as pp\nfrom itertools import combinations as cc\nfrom sys import stdin\nfrom functools import cmp_to_key as ctk\nfrom functools import lru_cache\nfrom bisect import bisect_left as bs_l\nfrom bisect import bisect_right as bs_r\ninput = sys.stdin.readline\nmod = 10 ** 9 + 7\nsys.setrecursionlimit(2 * 10 ** 5 + 1)\n\ndef comparator(x, y):\n    if x[0] == y[0]:\n        return x[1] - y[1]\n    return True\n\ndef ncr(n, r):\n    if n < r:\n        return 0\n    return fc[n] * pow(fc[r] * fc[n - r] % mod, mod - 2, mod) % mod\nT = int(input())\nfor _ in range(T):\n    (p, a, b, c, x, y) = map(int, input().split())\n    print(max(p // (a * x + b), p // (a * y + c)))", "T = int(input())\nfor _ in range(T):\n    (P, a, b, c, x, y) = map(int, input().split())\n    canar = b + x * a\n    cchakri = c + y * a\n    anar = P // canar\n    lanar = P - anar * canar\n    chakria = lanar // cchakri\n    chakri = P // cchakri\n    lchakri = P - chakri * cchakri\n    anarc = lchakri // canar\n    print(max(anar + chakria, chakri + anarc))", "T = int(input())\nval = 0\nwhile val < T:\n    (P, a, b, c, x, y) = [int(x) for x in input().split()]\n    cost_Anar = b + x * a\n    cost_Chakri = c + y * a\n    print(P // min(cost_Anar, cost_Chakri))\n    val += 1", "t = int(input())\nfor _ in range(t):\n    (p, a, b, c, x, y) = map(int, input().split())\n    anar = x * a + b\n    chakri = y * a + c\n    r = min(anar, chakri)\n    print(p // r)", "try:\n    for _ in range(int(input())):\n        (P, a, b, c, x, y) = map(int, input().split())\n        m = min(a * x + b, a * y + c)\n        print(P // m)\nexcept:\n    pass", "for _ in range(int(input())):\n    (money, a, b, c, x, y) = map(int, input().split())\n    anarcost = a * x + b\n    chakricost = a * y + c\n    ans = 0\n    if anarcost < chakricost:\n        ans += money // anarcost\n        money -= anarcost * (money // anarcost)\n        ans += money // chakricost\n    else:\n        ans += money // chakricost\n        money -= chakricost * (money // chakricost)\n        ans += money // anarcost\n    print(ans)", "def check(p, f, a, c, x, y):\n    cost_a = a + x * f\n    cost_c = c + f * y\n    data_a = p // cost_a\n    if cost_a >= cost_c:\n        data_c = p // cost_c\n        p = p - data_c * cost_c\n        data_a = p // cost_a\n    else:\n        data_a = p // cost_a\n        p = p - data_a * cost_a\n        data_c = p // cost_c\n    final = data_a + data_c\n    return final\nt = int(input())\nfor _ in range(t):\n    (p, f, a, c, x, y) = map(int, input().split())\n    print(check(p, f, a, c, x, y))", "for i in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    print(p // min(a * x + b, a * y + c))", "for _ in range(int(input())):\n    (n, a, b, c, x, y) = map(int, input().split())\n    p = min(x * a + b, y * a + c)\n    print(n // p)", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    t1 = a * x + b\n    t2 = a * y + c\n    print(p // min(t1, t2))", "t = int(input())\nfor i in range(t):\n    (p, a, b, c, x, y) = map(int, input().split())\n    v = x * a + b\n    z = y * a + c\n    print(p // min(v, z))", "T = int(input())\nwhile T != 0:\n    (p, a, b, c, x, y) = map(int, input().split())\n    minimum = min(b + x * a, c + y * a)\n    print(p // minimum)\n    T -= 1", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    m = p / min(b + x * a, c + y * a)\n    print(int(m))", "for _ in range(int(input())):\n    (p, a, b, c, x, y) = map(int, input().split())\n    an = b + x * a\n    cn = c + y * a\n    re = min(an, cn)\n    print(p // re)"]