["for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    total = []\n    x = 0\n    cost = 0\n    for i in range(1, n - 1):\n        if (a[i] - a[i - 1]) * (a[i] - a[i + 1]) > 0:\n            total.append(cost)\n            cost = 0\n        else:\n            cost += 1\n    total += [cost]\n    for i in total:\n        x ^= i\n    print(['Bob', 'Alice'][x != 0])", "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    total = []\n    x = 0\n    cost = 0\n    for i in range(1, n - 1):\n        if (a[i] - a[i - 1]) * (a[i] - a[i + 1]) > 0:\n            total.append(cost)\n            cost = 0\n        else:\n            cost += 1\n    total += [cost]\n    for i in total:\n        x ^= i\n    print(['Bob', 'Alice'][x != 0])", "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    total = []\n    x = 0\n    cost = 0\n    for i in range(1, n - 1):\n        if (a[i] - a[i - 1]) * (a[i] - a[i + 1]) > 0:\n            total.append(cost)\n            cost = 0\n        else:\n            cost += 1\n    total += [cost]\n    for i in total:\n        x ^= i\n    print(['Bob', 'Alice'][x != 0])", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    (xor, elcnt, lencntpos, lencntneg, posneg) = (0, 0, 0, 0, -1)\n    arrszs = []\n    for i in range(n - 1):\n        if s[i + 1] > s[i]:\n            lencntpos += 1\n            if lencntneg >= 2:\n                elcnt += 1\n                arrszs.append(lencntneg - 1)\n            lencntneg = 0\n            posneg = 1\n        elif s[i + 1] < s[i]:\n            lencntneg += 1\n            if lencntpos >= 2:\n                elcnt += 1\n                arrszs.append(lencntpos - 1)\n            lencntpos = 0\n            posneg = 0\n        elif s[i + 1] == s[i]:\n            if posneg == 1:\n                lencntpos += 1\n            else:\n                lencntneg += 1\n    if lencntpos >= 2 or lencntneg >= 2:\n        elcnt += 1\n        arrszs.append(max(lencntneg, lencntpos) - 1)\n    for i in range(len(arrszs)):\n        xor = xor ^ arrszs[i]\n    if xor == 0:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    total = []\n    x = 0\n    cost = 0\n    for i in range(1, n - 1):\n        if (a[i] - a[i - 1]) * (a[i] - a[i + 1]) > 0:\n            total.append(cost)\n            cost = 0\n        else:\n            cost += 1\n    total += [cost]\n    for i in total:\n        x ^= i\n    print(['Bob', 'Alice'][x != 0])", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    (xor, elcnt, lencntpos, lencntneg, posneg) = (0, 0, 0, 0, -1)\n    arrszs = []\n    for i in range(n - 1):\n        if s[i + 1] > s[i]:\n            lencntpos += 1\n            if lencntneg >= 2:\n                elcnt += 1\n                arrszs.append(lencntneg - 1)\n            lencntneg = 0\n            posneg = 1\n        elif s[i + 1] < s[i]:\n            lencntneg += 1\n            if lencntpos >= 2:\n                elcnt += 1\n                arrszs.append(lencntpos - 1)\n            lencntpos = 0\n            posneg = 0\n        elif s[i + 1] == s[i]:\n            if posneg == 1:\n                lencntpos += 1\n            else:\n                lencntneg += 1\n    if lencntpos >= 2 or lencntneg >= 2:\n        elcnt += 1\n        arrszs.append(max(lencntneg, lencntpos) - 1)\n    for i in range(len(arrszs)):\n        xor = xor ^ arrszs[i]\n    if xor == 0:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    (xor, elcnt, lencntpos, lencntneg, posneg) = (0, 0, 0, 0, -1)\n    arrszs = []\n    for i in range(n - 1):\n        if s[i + 1] > s[i]:\n            lencntpos += 1\n            if lencntneg >= 2:\n                elcnt += 1\n                arrszs.append(lencntneg - 1)\n            lencntneg = 0\n            posneg = 1\n        elif s[i + 1] < s[i]:\n            lencntneg += 1\n            if lencntpos >= 2:\n                elcnt += 1\n                arrszs.append(lencntpos - 1)\n            lencntpos = 0\n            posneg = 0\n        elif s[i + 1] == s[i]:\n            if posneg == 1:\n                lencntpos += 1\n            else:\n                lencntneg += 1\n    if lencntpos >= 2 or lencntneg >= 2:\n        elcnt += 1\n        arrszs.append(max(lencntneg, lencntpos) - 1)\n    for i in range(len(arrszs)):\n        xor = xor ^ arrszs[i]\n    if xor == 0:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    (xor, elcnt, lencntpos, lencntneg, posneg) = (0, 0, 0, 0, -1)\n    arrszs = []\n    for i in range(n - 1):\n        if s[i + 1] > s[i]:\n            lencntpos += 1\n            if lencntneg >= 2:\n                elcnt += 1\n                arrszs.append(lencntneg - 1)\n            lencntneg = 0\n            posneg = 1\n        elif s[i + 1] < s[i]:\n            lencntneg += 1\n            if lencntpos >= 2:\n                elcnt += 1\n                arrszs.append(lencntpos - 1)\n            lencntpos = 0\n            posneg = 0\n        elif s[i + 1] == s[i]:\n            if posneg == 1:\n                lencntpos += 1\n            else:\n                lencntneg += 1\n    if lencntpos >= 2 or lencntneg >= 2:\n        elcnt += 1\n        arrszs.append(max(lencntneg, lencntpos) - 1)\n    for i in range(len(arrszs)):\n        xor = xor ^ arrszs[i]\n    if xor == 0:\n        print('Bob')\n    else:\n        print('Alice')", "def find(arr, n):\n    i = 0\n    flag = 1\n    new = []\n    while i < n - 1:\n        if arr[i] > arr[i + 1]:\n            j = i + 1\n            while j < n - 1 and arr[j] > arr[j + 1]:\n                j += 1\n            new.append(j - i + 1)\n            i = j\n        else:\n            j = i + 1\n            while j < n - 1 and arr[j] < arr[j + 1]:\n                j += 1\n            new.append(j - i + 1)\n            i = j\n    flag = 0\n    for i in new:\n        flag ^= i - 2\n    return flag\nn = int(input())\nfor i in range(n):\n    l = int(input())\n    arr = list(map(int, input().split()))\n    ans = find(arr, l)\n    if ans == 0:\n        print('Bob')\n    else:\n        print('Alice')", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    xor = 0\n    chances = 0\n    if N <= 2:\n        print('Bob')\n        continue\n    heaps = []\n    prev = 0\n    for i in range(2, N):\n        if A[i] > A[i - 1] and A[i - 1] > A[i - 2]:\n            chances += 1\n        elif A[i] < A[i - 1] and A[i - 1] < A[i - 2]:\n            chances += 1\n        else:\n            heaps.append(chances)\n            chances = 0\n    if chances > 0:\n        heaps.append(chances)\n    for i in range(len(heaps)):\n        xor = xor ^ heaps[i]\n    if xor == 0:\n        print('Bob')\n    else:\n        print('Alice')", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    xor = 0\n    chances = 0\n    if N <= 2:\n        print('Bob')\n        continue\n    odd_even = []\n    prev = 0\n    for i in range(2, N):\n        if A[i] > A[i - 1] and A[i - 1] > A[i - 2]:\n            chances += 1\n        elif A[i] < A[i - 1] and A[i - 1] < A[i - 2]:\n            chances += 1\n        else:\n            odd_even.append(chances)\n            chances = 0\n    if chances > 0:\n        odd_even.append(chances)\n    for i in range(len(odd_even)):\n        xor = xor ^ odd_even[i]\n    if xor == 0:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    (xor, elcnt, lencntpos, lencntneg, posneg) = (0, 0, 0, 0, -1)\n    arrszs = []\n    for i in range(n - 1):\n        if s[i + 1] > s[i]:\n            lencntpos += 1\n            if lencntneg >= 2:\n                elcnt += 1\n                arrszs.append(lencntneg - 1)\n            lencntneg = 0\n            posneg = 1\n        elif s[i + 1] < s[i]:\n            lencntneg += 1\n            if lencntpos >= 2:\n                elcnt += 1\n                arrszs.append(lencntpos - 1)\n            lencntpos = 0\n            posneg = 0\n        elif s[i + 1] == s[i]:\n            if posneg == 1:\n                lencntpos += 1\n            else:\n                lencntneg += 1\n    if lencntpos >= 2 or lencntneg >= 2:\n        elcnt += 1\n        arrszs.append(max(lencntneg, lencntpos) - 1)\n    for i in range(len(arrszs)):\n        xor = xor ^ arrszs[i]\n    if xor == 0:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    (xor, elcnt, lencntpos, lencntneg, posneg) = (0, 0, 0, 0, -1)\n    arrszs = []\n    for i in range(n - 1):\n        if s[i + 1] > s[i]:\n            lencntpos += 1\n            if lencntneg >= 2:\n                elcnt += 1\n                arrszs.append(lencntneg - 1)\n            lencntneg = 0\n            posneg = 1\n        elif s[i + 1] < s[i]:\n            lencntneg += 1\n            if lencntpos >= 2:\n                elcnt += 1\n                arrszs.append(lencntpos - 1)\n            lencntpos = 0\n            posneg = 0\n        elif s[i + 1] == s[i]:\n            if posneg == 1:\n                lencntpos += 1\n            else:\n                lencntneg += 1\n    if lencntpos >= 2 or lencntneg >= 2:\n        elcnt += 1\n        arrszs.append(max(lencntneg, lencntpos) - 1)\n    for i in range(len(arrszs)):\n        xor = xor ^ arrszs[i]\n    if xor == 0:\n        print('Bob')\n    else:\n        print('Alice')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    i = 0\n    ans = 0\n    while i < n - 1:\n        x = 0\n        if l[i] < l[i + 1]:\n            while i < n - 1 and l[i] < l[i + 1]:\n                i += 1\n                x += 1\n        elif l[i] > l[i + 1]:\n            while i < n - 1 and l[i] > l[i + 1]:\n                i += 1\n                x += 1\n        ans ^= x - 1\n    if ans == 0:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    (xor, elcnt, lencntpos, lencntneg, posneg) = (0, 0, 0, 0, -1)\n    arrszs = []\n    for i in range(n - 1):\n        if s[i + 1] > s[i]:\n            lencntpos += 1\n            if lencntneg >= 2:\n                elcnt += 1\n                arrszs.append(lencntneg - 1)\n            lencntneg = 0\n            posneg = 1\n        elif s[i + 1] < s[i]:\n            lencntneg += 1\n            if lencntpos >= 2:\n                elcnt += 1\n                arrszs.append(lencntpos - 1)\n            lencntpos = 0\n            posneg = 0\n        elif s[i + 1] == s[i]:\n            if posneg == 1:\n                lencntpos += 1\n            else:\n                lencntneg += 1\n    if lencntpos >= 2 or lencntneg >= 2:\n        elcnt += 1\n        arrszs.append(max(lencntneg, lencntpos) - 1)\n    for i in range(len(arrszs)):\n        xor = xor ^ arrszs[i]\n    if xor == 0:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    (xor, elcnt, lencntpos, lencntneg, posneg) = (0, 0, 0, 0, -1)\n    arrszs = []\n    for i in range(n - 1):\n        if s[i + 1] > s[i]:\n            lencntpos += 1\n            if lencntneg >= 2:\n                elcnt += 1\n                arrszs.append(lencntneg - 1)\n            lencntneg = 0\n            posneg = 1\n        elif s[i + 1] < s[i]:\n            lencntneg += 1\n            if lencntpos >= 2:\n                elcnt += 1\n                arrszs.append(lencntpos - 1)\n            lencntpos = 0\n            posneg = 0\n        elif s[i + 1] == s[i]:\n            if posneg == 1:\n                lencntpos += 1\n            else:\n                lencntneg += 1\n    if lencntpos >= 2 or lencntneg >= 2:\n        elcnt += 1\n        arrszs.append(max(lencntneg, lencntpos) - 1)\n    for i in range(len(arrszs)):\n        xor = xor ^ arrszs[i]\n    if xor == 0:\n        print('Bob')\n    else:\n        print('Alice')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    i = 0\n    ans = 0\n    while i < n - 1:\n        x = 0\n        if l[i] < l[i + 1]:\n            while i < n - 1 and l[i] < l[i + 1]:\n                i += 1\n                x += 1\n        elif l[i] > l[i + 1]:\n            while i < n - 1 and l[i] > l[i + 1]:\n                i += 1\n                x += 1\n        ans ^= x - 1\n    if ans == 0:\n        print('Bob')\n    else:\n        print('Alice')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    i = 0\n    ans = 0\n    while i < n - 1:\n        x = 0\n        if l[i] < l[i + 1]:\n            while i < n - 1 and l[i] < l[i + 1]:\n                i += 1\n                x += 1\n        elif l[i] > l[i + 1]:\n            while i < n - 1 and l[i] > l[i + 1]:\n                i += 1\n                x += 1\n        ans ^= x - 1\n    if ans == 0:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    (xor, elcnt, lencntpos, lencntneg, posneg) = (0, 0, 0, 0, -1)\n    arrszs = []\n    for i in range(n - 1):\n        if s[i + 1] > s[i]:\n            lencntpos += 1\n            if lencntneg >= 2:\n                elcnt += 1\n                arrszs.append(lencntneg - 1)\n            lencntneg = 0\n            posneg = 1\n        elif s[i + 1] < s[i]:\n            lencntneg += 1\n            if lencntpos >= 2:\n                elcnt += 1\n                arrszs.append(lencntpos - 1)\n            lencntpos = 0\n            posneg = 0\n        elif s[i + 1] == s[i]:\n            if posneg == 1:\n                lencntpos += 1\n            else:\n                lencntneg += 1\n    if lencntpos >= 2 or lencntneg >= 2:\n        elcnt += 1\n        arrszs.append(max(lencntneg, lencntpos) - 1)\n    for i in range(len(arrszs)):\n        xor = xor ^ arrszs[i]\n    if xor == 0:\n        print('Bob')\n    else:\n        print('Alice')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    i = 0\n    ans = 0\n    while i < n - 1:\n        x = 0\n        if l[i] < l[i + 1]:\n            while i < n - 1 and l[i] < l[i + 1]:\n                i += 1\n                x += 1\n        elif l[i] > l[i + 1]:\n            while i < n - 1 and l[i] > l[i + 1]:\n                i += 1\n                x += 1\n        ans ^= x - 1\n    if ans == 0:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    total = []\n    x = 0\n    cost = 0\n    for i in range(1, n - 1):\n        if (a[i] - a[i - 1]) * (a[i] - a[i + 1]) > 0:\n            total.append(cost)\n            cost = 0\n        else:\n            cost += 1\n    total += [cost]\n    for i in total:\n        x ^= i\n    print(['Bob', 'Alice'][x != 0])", "t = int(input())\nfor t0 in range(t):\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    red_nodes = set()\n    red_nodes.add(0)\n    red_nodes.add(n - 1)\n    for i in range(1, n - 1):\n        if numbers[i - 1] > numbers[i] and numbers[i] < numbers[i + 1] or (numbers[i - 1] < numbers[i] and numbers[i] > numbers[i + 1]):\n            red_nodes.add(i)\n    counter = 0\n    xor_nums = []\n    for i in range(0, n):\n        if red_nodes.__contains__(i):\n            if counter != 0:\n                xor_nums.append(counter)\n            counter = 0\n        else:\n            counter += 1\n    res = 0\n    for xor_num in xor_nums:\n        res = res ^ xor_num\n    if res == 0:\n        print('Bob')\n    else:\n        print('Alice')", "def xorSum(arr):\n    s = 0\n    for val in arr:\n        s ^= val\n    return s\n\ndef getSeq(arr):\n    seqs = []\n    i = 1\n    currLen = 1\n    par = 0\n    while i < len(arr) and arr[i] == arr[i - 1]:\n        i += 1\n        currLen += 1\n    if i >= len(arr):\n        seqs.append(currLen)\n        return seqs\n    while i < len(arr):\n        if arr[i] > arr[i - 1]:\n            par = 1\n        else:\n            par = -1\n        if par == 1:\n            while i < len(arr) and arr[i] >= arr[i - 1]:\n                i += 1\n                currLen += 1\n            if i >= len(arr):\n                seqs.append(currLen)\n                return seqs\n            par = -1\n            seqs.append(currLen)\n            currLen = 1\n        else:\n            while i < len(arr) and arr[i] <= arr[i - 1]:\n                i += 1\n                currLen += 1\n            if i >= len(arr):\n                seqs.append(currLen)\n                return seqs\n            par = 1\n            seqs.append(currLen)\n            currLen = 1\n    return seqs\nfor _ in range(int(input())):\n    input()\n    arr = [int(i) for i in input().split()]\n    if len(arr) == 1:\n        print('Alice')\n        continue\n    seq = [i - 2 for i in getSeq(arr) if i - 2 > 0]\n    if xorSum(seq) != 0:\n        print('Alice')\n    else:\n        print('Bob')", "import sys, math, heapq, bisect\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 5)\nints = lambda : list(map(int, input().split()))\n\ndef gprint(t, ans=''):\n    print(f'Case #{t + 1}:', ans)\np = 10 ** 9 + 7\ninf = 10 ** 20 + 7\n\ndef find(A, n):\n    res = 0\n    for i in range(n):\n        res ^= A[i]\n    if res == 0:\n        return 'Bob'\n    else:\n        return 'Alice'\nfor t in range(int(input())):\n    n = int(input())\n    a = ints()\n    d = 0\n    if a[1] < a[0]:\n        d = 1\n    c = 1\n    b = []\n    for i in range(1, n - 1):\n        if a[i] < a[i + 1]:\n            if d == 0:\n                c += 1\n            else:\n                if c > 1:\n                    b.append(c - 1)\n                c = 1\n                d = 0\n        elif d == 1:\n            c += 1\n        else:\n            if c > 1:\n                b.append(c - 1)\n            c = 1\n            d = 1\n    if c > 1:\n        b.append(c - 1)\n    print(find(b, len(b)))", "testcase = int(input())\nfor _ in range(testcase):\n    n = int(input())\n    arr = [int(num) for num in input().split()]\n    lengths = []\n    current_first_ind = 0\n    increasing = arr[0] < arr[1]\n    for (ind, num) in enumerate(arr[2:]):\n        if increasing and num < arr[ind + 1]:\n            lengths.append(ind - current_first_ind)\n            current_first_ind = ind + 1\n            increasing = False\n        elif not increasing and num > arr[ind + 1]:\n            lengths.append(ind - current_first_ind)\n            current_first_ind = ind + 1\n            increasing = True\n    lengths.append(n - current_first_ind - 2)\n    ans = 0\n    for num in lengths:\n        ans = ans ^ num\n    print('Alice' if ans != 0 else 'Bob')"]