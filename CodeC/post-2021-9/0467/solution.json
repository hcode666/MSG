["def answer():\n    n = int(input())\n    a = input()\n    b = input()\n    ans = [''] * (2 * n)\n    beg = 0\n    end = 2 * n - 1\n    al = 0\n    ae = n - 1\n    bl = 0\n    be = n - 1\n    a = ''.join(sorted(a))\n    b = ''.join(sorted(b, reverse=True))\n    for i in range(2 * n):\n        if i & 1:\n            if al <= ae and a[al] < b[bl]:\n                ans[beg] = b[bl]\n                beg = beg + 1\n                bl = bl + 1\n            else:\n                ans[end] = b[be]\n                end = end - 1\n                be = be - 1\n        elif bl <= be and a[al] >= b[bl]:\n            ans[end] = a[ae]\n            end = end - 1\n            ae = ae - 1\n        else:\n            ans[beg] = a[al]\n            beg = beg + 1\n            al = al + 1\n    print(''.join(ans))\nfor test in range(int(input())):\n    answer()", "def answer():\n    n = int(input())\n    a = input()\n    b = input()\n    ans = [''] * (2 * n)\n    beg = 0\n    end = 2 * n - 1\n    al = 0\n    ae = n - 1\n    bl = 0\n    be = n - 1\n    a = ''.join(sorted(a))\n    b = ''.join(sorted(b, reverse=True))\n    for i in range(2 * n):\n        if i & 1:\n            if al <= ae and a[al] < b[bl]:\n                ans[beg] = b[bl]\n                beg = beg + 1\n                bl = bl + 1\n            else:\n                ans[end] = b[be]\n                end = end - 1\n                be = be - 1\n        elif bl <= be and a[al] >= b[bl]:\n            ans[end] = a[ae]\n            end = end - 1\n            ae = ae - 1\n        else:\n            ans[beg] = a[al]\n            beg = beg + 1\n            al = al + 1\n    print(''.join(ans))\nfor test in range(int(input())):\n    answer()", "def answer():\n    n = int(input())\n    a = input()\n    b = input()\n    ans = [''] * (2 * n)\n    beg = 0\n    end = 2 * n - 1\n    al = 0\n    ae = n - 1\n    bl = 0\n    be = n - 1\n    a = ''.join(sorted(a))\n    b = ''.join(sorted(b, reverse=True))\n    for i in range(2 * n):\n        if i & 1:\n            if al <= ae and a[al] < b[bl]:\n                ans[beg] = b[bl]\n                beg = beg + 1\n                bl = bl + 1\n            else:\n                ans[end] = b[be]\n                end = end - 1\n                be = be - 1\n        elif bl <= be and a[al] >= b[bl]:\n            ans[end] = a[ae]\n            end = end - 1\n            ae = ae - 1\n        else:\n            ans[beg] = a[al]\n            beg = beg + 1\n            al = al + 1\n    print(''.join(ans))\nfor test in range(int(input())):\n    answer()", "def answer():\n    n = int(input())\n    a = input()\n    b = input()\n    ans = [''] * (2 * n)\n    beg = 0\n    end = 2 * n - 1\n    al = 0\n    ae = n - 1\n    bl = 0\n    be = n - 1\n    a = ''.join(sorted(a))\n    b = ''.join(sorted(b, reverse=True))\n    for i in range(2 * n):\n        if i & 1:\n            if al <= ae and a[al] < b[bl]:\n                ans[beg] = b[bl]\n                beg = beg + 1\n                bl = bl + 1\n            else:\n                ans[end] = b[be]\n                end = end - 1\n                be = be - 1\n        elif bl <= be and a[al] >= b[bl]:\n            ans[end] = a[ae]\n            end = end - 1\n            ae = ae - 1\n        else:\n            ans[beg] = a[al]\n            beg = beg + 1\n            al = al + 1\n    print(''.join(ans))\nfor test in range(int(input())):\n    answer()", "def answer():\n    n = int(input())\n    a = input()\n    b = input()\n    ans = [''] * (2 * n)\n    beg = 0\n    end = 2 * n - 1\n    al = 0\n    ae = n - 1\n    bl = 0\n    be = n - 1\n    a = ''.join(sorted(a))\n    b = ''.join(sorted(b, reverse=True))\n    for i in range(2 * n):\n        if i & 1:\n            if al <= ae and a[al] < b[bl]:\n                ans[beg] = b[bl]\n                beg = beg + 1\n                bl = bl + 1\n            else:\n                ans[end] = b[be]\n                end = end - 1\n                be = be - 1\n        elif bl <= be and a[al] >= b[bl]:\n            ans[end] = a[ae]\n            end = end - 1\n            ae = ae - 1\n        else:\n            ans[beg] = a[al]\n            beg = beg + 1\n            al = al + 1\n    print(''.join(ans))\nfor test in range(int(input())):\n    answer()", "def answer():\n    n = int(input())\n    a = input()\n    b = input()\n    ans = [''] * (2 * n)\n    beg = 0\n    end = 2 * n - 1\n    al = 0\n    ae = n - 1\n    bl = 0\n    be = n - 1\n    a = ''.join(sorted(a))\n    b = ''.join(sorted(b, reverse=True))\n    for i in range(2 * n):\n        if i & 1:\n            if al <= ae and a[al] < b[bl]:\n                ans[beg] = b[bl]\n                beg = beg + 1\n                bl = bl + 1\n            else:\n                ans[end] = b[be]\n                end = end - 1\n                be = be - 1\n        elif bl <= be and a[al] >= b[bl]:\n            ans[end] = a[ae]\n            end = end - 1\n            ae = ae - 1\n        else:\n            ans[beg] = a[al]\n            beg = beg + 1\n            al = al + 1\n    print(''.join(ans))\nfor test in range(int(input())):\n    answer()", "def answer():\n    n = int(input())\n    a = input()\n    b = input()\n    ans = [''] * (2 * n)\n    beg = 0\n    end = 2 * n - 1\n    al = 0\n    ae = n - 1\n    bl = 0\n    be = n - 1\n    a = ''.join(sorted(a))\n    b = ''.join(sorted(b, reverse=True))\n    for i in range(2 * n):\n        if i & 1:\n            if al <= ae and a[al] < b[bl]:\n                ans[beg] = b[bl]\n                beg = beg + 1\n                bl = bl + 1\n            else:\n                ans[end] = b[be]\n                end = end - 1\n                be = be - 1\n        elif bl <= be and a[al] >= b[bl]:\n            ans[end] = a[ae]\n            end = end - 1\n            ae = ae - 1\n        else:\n            ans[beg] = a[al]\n            beg = beg + 1\n            al = al + 1\n    print(''.join(ans))\nfor test in range(int(input())):\n    answer()", "def answer():\n    n = int(input())\n    a = input()\n    b = input()\n    ans = [''] * (2 * n)\n    beg = 0\n    end = 2 * n - 1\n    al = 0\n    ae = n - 1\n    bl = 0\n    be = n - 1\n    a = ''.join(sorted(a))\n    b = ''.join(sorted(b, reverse=True))\n    for i in range(2 * n):\n        if i & 1:\n            if al <= ae and a[al] < b[bl]:\n                ans[beg] = b[bl]\n                beg = beg + 1\n                bl = bl + 1\n            else:\n                ans[end] = b[be]\n                end = end - 1\n                be = be - 1\n        elif bl <= be and a[al] >= b[bl]:\n            ans[end] = a[ae]\n            end = end - 1\n            ae = ae - 1\n        else:\n            ans[beg] = a[al]\n            beg = beg + 1\n            al = al + 1\n    print(''.join(ans))\nfor test in range(int(input())):\n    answer()", "import sys, os\nfrom sys import stdin, stdout\nio_path = '/Users/kunaldubey/Projects/competitve-programming/IO'\nif os.path.exists(io_path):\n    sys.stdout = open(io_path + '/output.txt', 'w')\n    sys.stdin = open(io_path + '/input.txt', 'r')\n\ndef get_ints():\n    return map(int, input().strip().split())\n\ndef get_ints_list():\n    return list(map(int, input().strip().split()))\n\ndef get_string():\n    return input().strip()\ntest_cases = int(input())\nwhile test_cases > 0:\n    n = int(input())\n    alice = get_string()\n    bob = get_string()\n    alice = sorted(alice)\n    bob = sorted(bob, reverse=True)\n    new = [0] * (2 * n)\n    new_start_index = 0\n    new_end_index = 2 * n - 1\n    alice_start = 0\n    alice_end = n - 1\n    bob_start = 0\n    bob_end = n - 1\n    chance = True\n    alice_current = ''\n    bob_current = ''\n    while new_start_index <= new_end_index:\n        if chance:\n            if bob_start <= n - 1 and alice_start <= n - 1 and (ord(alice[alice_start]) < ord(bob[bob_start])):\n                new[new_start_index] = alice[alice_start]\n                alice_start += 1\n                new_start_index += 1\n            else:\n                new[new_end_index] = alice[alice_end]\n                alice_end -= 1\n                new_end_index -= 1\n            chance = False\n        else:\n            if bob_start <= n - 1 and alice_start <= n - 1 and (ord(bob[bob_start]) > ord(alice[alice_start])):\n                new[new_start_index] = bob[bob_start]\n                bob_start += 1\n                new_start_index += 1\n            else:\n                new[new_end_index] = bob[bob_end]\n                bob_end -= 1\n                new_end_index -= 1\n            chance = True\n    for i in new:\n        print(i, end='')\n    print()\n    test_cases -= 1", "def answer():\n    n = int(input())\n    a = input()\n    b = input()\n    ans = [''] * (2 * n)\n    beg = 0\n    end = 2 * n - 1\n    al = 0\n    ae = n - 1\n    bl = 0\n    be = n - 1\n    a = ''.join(sorted(a))\n    b = ''.join(sorted(b, reverse=True))\n    for i in range(2 * n):\n        if i & 1:\n            if al <= ae and a[al] < b[bl]:\n                ans[beg] = b[bl]\n                beg = beg + 1\n                bl = bl + 1\n            else:\n                ans[end] = b[be]\n                end = end - 1\n                be = be - 1\n        elif bl <= be and a[al] >= b[bl]:\n            ans[end] = a[ae]\n            end = end - 1\n            ae = ae - 1\n        else:\n            ans[beg] = a[al]\n            beg = beg + 1\n            al = al + 1\n    print(''.join(ans))\nfor test in range(int(input())):\n    answer()", "def get1(arr):\n    for m in range(26):\n        if arr[m] > 0:\n            val = chr(97 + m)\n            break\n    return val\n\ndef get2(arr):\n    for m in range(26 - 1, -1, -1):\n        if arr[m] > 0:\n            val = chr(97 + m)\n            break\n    return val\nn = int(input())\nfor i in range(n):\n    x = int(input())\n    A = input()\n    B = input()\n    arr1 = [0] * 26\n    arr2 = [0] * 26\n    for j in A:\n        arr1[ord(j) - 97] += 1\n    for j in B:\n        arr2[ord(j) - 97] += 1\n    left = 0\n    right = 2 * x - 1\n    ans = [''] * (2 * x)\n    turn = 0\n    while left < right:\n        if turn % 2 == 0:\n            a1 = get1(arr1)\n            b1 = get2(arr2)\n            if a1 < b1:\n                ans[left] = a1\n                left += 1\n            else:\n                a1 = get2(arr1)\n                ans[right] = a1\n                right -= 1\n            arr1[ord(a1) - 97] -= 1\n        else:\n            c1 = get1(arr1)\n            d1 = get2(arr2)\n            if c1 < d1:\n                ans[left] = d1\n                left += 1\n            else:\n                d1 = get1(arr2)\n                ans[right] = d1\n                right -= 1\n            arr2[ord(d1) - 97] -= 1\n        turn = (turn + 1) % 2\n    for j in range(26):\n        if arr2[j] != 0:\n            ans[left] = chr(97 + j)\n            break\n    print(''.join(ans))", "for _ in range(int(input())):\n    n = int(input())\n    s1 = [i for i in input()]\n    s2 = [i for i in input()]\n    ans = ['' for i in range(2 * n)]\n    s1.sort()\n    s2.sort(reverse=True)\n    t = 0\n    s1i = 0\n    s1j = n - 1\n    s2i = 0\n    s2j = n - 1\n    k1 = 0\n    k2 = 2 * n - 1\n    while k1 <= k2:\n        if t == 0:\n            if s2i < n and s1[s1i] < s2[s2i]:\n                ans[k1] = s1[s1i]\n                k1 += 1\n                s1i += 1\n            else:\n                ans[k2] = s1[s1j]\n                k2 -= 1\n                s1j -= 1\n        elif t == 1:\n            if s1i < n and s1[s1i] < s2[s2i]:\n                ans[k1] = s2[s2i]\n                s2i += 1\n                k1 += 1\n            else:\n                ans[k2] = s2[s2j]\n                k2 -= 1\n                s2j -= 1\n        t += 1\n        t %= 2\n    print(''.join(ans))", "for i in range(int(input())):\n    n = int(input())\n    s1 = list(input())\n    s2 = list(input())\n    s1.sort()\n    s2.sort()\n    s2 = s2[::-1]\n    out_l = ''\n    out_r = ''\n    for j in range(n):\n        if s1[0] >= s2[0]:\n            out_r = s1[-1] + out_r\n            s1.pop()\n        else:\n            out_l += s1[0]\n            s1.pop(0)\n        if len(s1) > 0 and s1[0] >= s2[0]:\n            out_r = s2[-1] + out_r\n            s2.pop()\n        else:\n            out_l += s2[0]\n            s2.pop(0)\n    print(out_l + out_r)", "noOfTestCases = int(input())\nfor _ in range(noOfTestCases):\n    N = int(input())\n    strA = input()\n    strB = input()\n    strA = sorted(strA)\n    strB = sorted(strB, reverse=True)\n    resStr = [0] * 2 * N\n    startIdx = 0\n    endIdx = 2 * N - 1\n    startIdxA = 0\n    endIdxA = N - 1\n    startIdxB = 0\n    endIdxB = N - 1\n    while startIdxA <= endIdxA and startIdxB <= endIdxB:\n        if ord(strA[startIdxA]) < ord(strB[startIdxB]):\n            resStr[startIdx] = strA[startIdxA]\n            startIdxA += 1\n            startIdx += 1\n        else:\n            resStr[endIdx] = strA[endIdxA]\n            endIdxA -= 1\n            endIdx -= 1\n        if startIdxA <= endIdxA:\n            if ord(strA[startIdxA]) < ord(strB[startIdxB]):\n                resStr[startIdx] = strB[startIdxB]\n                startIdxB += 1\n                startIdx += 1\n            else:\n                resStr[endIdx] = strB[endIdxB]\n                endIdxB -= 1\n                endIdx -= 1\n        else:\n            resStr[startIdx] = strB[startIdxB]\n            break\n    print(''.join(resStr))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    alice = sorted(input())\n    bob = sorted(input(), reverse=True)\n    ans = [''] * 2 * n\n    (astart, aend) = (0, n - 1)\n    (bstart, bend) = (0, n - 1)\n    start = 0\n    end = 2 * n - 1\n    for _ in range(n):\n        if alice[astart] < bob[bstart]:\n            ans[start] = alice[astart]\n            start += 1\n            astart += 1\n        else:\n            ans[end] = alice[aend]\n            end -= 1\n            aend -= 1\n        if astart > aend:\n            break\n        if bob[bstart] > alice[astart]:\n            ans[start] = bob[bstart]\n            start += 1\n            bstart += 1\n        else:\n            ans[end] = bob[bend]\n            bend -= 1\n            end -= 1\n    ans[start] = bob[bstart]\n    print(''.join(ans))", "def mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n\ndef ni():\n    return int(input())\n\ndef si():\n    return str(input())\nfrom collections import deque\nfor t in range(int(input())):\n    N = ni()\n    a = list(si())\n    b = list(si())\n    a.sort()\n    b.sort(reverse=True)\n    a = deque(a)\n    b = deque(b)\n    front = []\n    back = []\n    for i in range(2 * N):\n        if i % 2 == 0:\n            if b[0] > a[0]:\n                front.append(a.popleft())\n            else:\n                back.append(a.pop())\n        elif a and a[0] < b[0]:\n            front.append(b.popleft())\n        else:\n            back.append(b.pop())\n    back.reverse()\n    print(''.join(front) + ''.join(back))", "T = int(input())\nfor i in range(0, T):\n    N = int(input())\n    A = input()\n    B = input()\n    A = ''.join(sorted(A))\n    B = ''.join(sorted(B, reverse=True))\n    l = [0] * (2 * N)\n    point1 = 0\n    point2 = 2 * N - 1\n    for i in range(0, N):\n        if ord(A[0]) < ord(B[0]):\n            l[point1] = A[0]\n            A = A[1:]\n            point1 += 1\n        else:\n            l[point2] = A[-1]\n            A = A[:-1]\n            point2 -= 1\n        if i == N - 1:\n            if point1 == N:\n                l[point2] = B[0]\n            else:\n                l[point1] = B[0]\n            continue\n        if ord(B[0]) > ord(A[0]):\n            l[point1] = B[0]\n            B = B[1:]\n            point1 += 1\n        else:\n            l[point2] = B[-1]\n            B = B[:-1]\n            point2 -= 1\n    print(''.join(l))", "def solve(A, B, N):\n    ans = ['' for i in range(2 * N)]\n    (front, back, startA, endA, startB, endB) = (0, 2 * N - 1, 0, N - 1, 0, N - 1)\n    A = ''.join(sorted(A))\n    B = ''.join(sorted(B, reverse=True))\n    for i in range(2 * N):\n        if i & 1 == 0:\n            if startB <= endB and A[startA] >= B[startB]:\n                ans[back] = A[endA]\n                (back, endA) = (back - 1, endA - 1)\n            else:\n                ans[front] = A[startA]\n                (front, startA) = (front + 1, startA + 1)\n        elif startA <= endA and A[startA] < B[startB]:\n            ans[front] = B[startB]\n            (front, startB) = (front + 1, startB + 1)\n        else:\n            ans[back] = B[endB]\n            (back, endB) = (back - 1, endB - 1)\n    print(''.join(ans))\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = input()\n    B = input()\n    solve(A, B, N)", "for _ in range(int(input())):\n    N = int(input())\n    A = sorted(input())\n    B = sorted(input(), reverse=True)\n    S = [''] * 2 * N\n    (ai, an) = (0, N - 1)\n    (bi, bn) = (0, N - 1)\n    (si, sn) = (0, 2 * N - 1)\n    for i in range(N - 1):\n        if A[ai] < B[bi]:\n            S[si] = A[ai]\n            si += 1\n            ai += 1\n        else:\n            S[sn] = A[an]\n            sn -= 1\n            an -= 1\n        if B[bi] > A[ai]:\n            S[si] = B[bi]\n            si += 1\n            bi += 1\n        else:\n            S[sn] = B[bn]\n            sn -= 1\n            bn -= 1\n    if A[ai] < B[bi]:\n        S[si] = A[ai]\n        si += 1\n        ai += 1\n    else:\n        S[sn] = A[an]\n        sn -= 1\n        an -= 1\n    S[si] = B[bi]\n    print(''.join(S))", "from collections import deque\nI = input\nD = lambda f: deque(sorted(I(), reverse=f))\nt = int(I())\nfor _ in range(t):\n    I()\n    (a, b) = c = (D(False), D(True))\n    pop = deque.popleft\n    i = 0\n    t = None\n    s = ''\n    while b:\n        if t is None and a and (a[0] >= b[0]):\n            t = s\n            s = ''\n            pop = deque.pop\n        s += pop(c[i])\n        i ^= 1\n    print(s if t is None else t + s[::-1])", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    a = [j for j in input()]\n    b = [j for j in input()]\n    a.sort()\n    b = sorted(b, reverse=True)\n    s = ['0'] * 2 * n\n    count = i = 0\n    starta = startb = 0\n    end = 2 * n - 1\n    pointa = n - 1\n    pointb = n - 1\n    while count < 2 * n:\n        if count % 2 == 0:\n            if a[starta] < b[startb]:\n                s[count] = a[starta]\n                count += 1\n                starta += 1\n            elif a[starta] >= b[startb]:\n                s[end] = a[pointa]\n                pointa -= 1\n                end -= 1\n                count += 1\n        elif starta < n:\n            if b[startb] > a[starta]:\n                s[count] = b[startb]\n                count += 1\n                startb += 1\n            elif b[startb] <= a[starta]:\n                s[end] = b[pointb]\n                pointb -= 1\n                end -= 1\n                count += 1\n        else:\n            s[count] = b[startb]\n            count += 1\n        i += 1\n    print(''.join(s))", "from collections import deque\nt = int(input())\nwhile t != 0:\n    n = int(input())\n    a = input()\n    b = input()\n    alice = deque(sorted(a))\n    bob = deque(sorted(b)[::-1])\n    ans = [''] * (2 * n)\n    (i, j) = (0, 2 * n - 1)\n    for k in range(2 * n):\n        if k % 2 == 0:\n            if alice[0] < bob[0]:\n                ans[i] = alice.popleft()\n                i += 1\n            else:\n                ans[j] = alice.pop()\n                j -= 1\n        elif len(alice) and bob[0] > alice[0]:\n            ans[i] = bob.popleft()\n            i += 1\n        else:\n            ans[j] = bob.pop()\n            j -= 1\n    print(''.join(ans))\n    t -= 1", "from collections import deque\nt = int(input())\nwhile t != 0:\n    n = int(input())\n    a = input()\n    b = input()\n    alice = deque(sorted(a))\n    bob = deque(sorted(b)[::-1])\n    ans = [''] * (2 * n)\n    (i, j) = (0, 2 * n - 1)\n    for k in range(2 * n):\n        if k % 2 == 0:\n            if alice[0] < bob[0]:\n                ans[i] = alice.popleft()\n                i += 1\n            else:\n                ans[j] = alice.pop()\n                j -= 1\n        elif len(alice) and bob[0] > alice[0]:\n            ans[i] = bob.popleft()\n            i += 1\n        else:\n            ans[j] = bob.pop()\n            j -= 1\n    print(''.join(ans))\n    t -= 1", "for _ in range(int(input())):\n    l = int(input())\n    a = input()\n    b = input()\n    (startA, endA, startB, endB) = (0, l - 1, 0, l - 1)\n    (front, back) = (0, 2 * l - 1)\n    output = '_' * (2 * l)\n    a = ''.join(sorted(a))\n    b = ''.join(sorted(b))\n    b = b[::-1]\n    for i in range(2 * l):\n        if i % 2 == 0:\n            if startB <= endB and a[startA] >= b[startB]:\n                output = output[:back] + a[endA] + output[back + 1:]\n                back -= 1\n                endA -= 1\n            else:\n                output = output[:front] + a[startA] + output[front + 1:]\n                front += 1\n                startA += 1\n        elif startA <= endA and a[startA] < b[startB]:\n            output = output[:front] + b[startB] + output[front + 1:]\n            front += 1\n            startB += 1\n        else:\n            output = output[:back] + b[endB] + output[back + 1:]\n            back -= 1\n            endB -= 1\n    print(output)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    alice_start = 0\n    alice_end = n - 1\n    bob_start = 0\n    bob_end = n - 1\n    a = sorted(a)\n    b = sorted(b, reverse=True)\n    s = ['.'] * (2 * n)\n    string_start = 0\n    string_end = 2 * n - 1\n    for i in range(n):\n        if alice_start <= alice_end and bob_start <= bob_end:\n            if a[alice_start] >= b[bob_start]:\n                s[string_end] = a[alice_end]\n                string_end -= 1\n                alice_end -= 1\n            else:\n                s[string_start] = a[alice_start]\n                string_start += 1\n                alice_start += 1\n        if alice_start <= alice_end and bob_start <= bob_end:\n            if b[bob_start] <= a[alice_start]:\n                s[string_end] = b[bob_end]\n                string_end -= 1\n                bob_end -= 1\n            else:\n                s[string_start] = b[bob_start]\n                string_start += 1\n                bob_start += 1\n        s[string_start] = b[bob_start]\n    print(''.join(s))", "def solve(n, al, bo):\n    ans = ['' for i in range(2 * n)]\n    (front, back, alS, alE, boS, boE) = (0, 2 * n - 1, 0, n - 1, 0, n - 1)\n    al = ''.join(sorted(al))\n    bo = ''.join(sorted(bo, reverse=True))\n    for i in range(2 * n):\n        if i & 1 == 0:\n            if boS <= boE and al[alS] < bo[boS]:\n                ans[front] = al[alS]\n                (front, alS) = (front + 1, alS + 1)\n            else:\n                ans[back] = al[alE]\n                (back, alE) = (back - 1, alE - 1)\n        elif alS <= alE and bo[boS] > al[alS]:\n            ans[front] = bo[boS]\n            (front, boS) = (front + 1, boS + 1)\n        else:\n            ans[back] = bo[boE]\n            (back, boE) = (back - 1, boE - 1)\n    print(''.join(ans))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    al = input()\n    bo = input()\n    solve(n, al, bo)", "def sol():\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    res = ['0' for i in range(n + n)]\n    s1 = sorted(s1)\n    s2 = sorted(s2)\n    tem = n - 1\n    bem = 0\n    b = n - 1\n    a = 0\n    rst = 2 * n - 1\n    TIH = 0\n    for i in range(n + n):\n        if b < bem:\n            res[TIH] = s1[a]\n            a += 1\n            TIH += 1\n            continue\n        if a > tem:\n            res[TIH] = s2[b]\n            b -= 1\n            TIH += 1\n            continue\n        if i % 2 == 0:\n            if s1[a] < s2[b]:\n                res[TIH] = s1[a]\n                a += 1\n                TIH += 1\n            else:\n                res[rst] = s1[tem]\n                rst -= 1\n                tem -= 1\n        elif s2[b] > s1[a]:\n            res[TIH] = s2[b]\n            TIH += 1\n            b -= 1\n        else:\n            res[rst] = s2[bem]\n            rst -= 1\n            bem += 1\n    print(''.join(res))\n\ndef main():\n    for _ in range(int(input())):\n        sol()\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    la = sorted(list(a))\n    lb = sorted(list(b))\n    f = la + lb\n    l = 0\n    r = 2 * n - 1\n    for k in range(n):\n        if la[0] < lb[-1]:\n            f[l] = la[0]\n            l += 1\n            la.pop(0)\n        else:\n            f[r] = la[-1]\n            r -= 1\n            del la[-1]\n        if len(la) > 0:\n            if la[0] < lb[-1]:\n                f[l] = lb[-1]\n                l += 1\n                del lb[-1]\n            else:\n                f[r] = lb[0]\n                r -= 1\n                lb.pop(0)\n        else:\n            f[l] = lb[0]\n            lb.pop(0)\n    print(''.join(f))", "testcase = int(input(''))\nfor i in range(testcase):\n    size = int(input())\n    arr1 = list(input())\n    arr2 = list(input())\n    arr1.sort()\n    arr2.sort()\n    s = [0] * (2 * size)\n    lix = 0\n    rix = 2 * size - 1\n    for i in range(2 * size):\n        if i % 2 == 0:\n            if arr1[0] < arr2[-1]:\n                s[lix] = arr1[0]\n                lix += 1\n                del arr1[0]\n            else:\n                s[rix] = arr1[-1]\n                rix -= 1\n                del arr1[-1]\n        elif len(arr1) != 0 and arr2[-1] > arr1[0]:\n            s[lix] = arr2[-1]\n            lix += 1\n            del arr2[-1]\n        else:\n            s[rix] = arr2[0]\n            rix -= 1\n            del arr2[0]\n    print(''.join(s))", "from collections import deque\nI = input\nD = lambda f: deque(sorted(I(), reverse=f))\nt = int(I())\nfor _ in range(t):\n    I()\n    (a, b) = c = (D(False), D(True))\n    pop = deque.popleft\n    i = 0\n    f = True\n    s = ''\n    while b:\n        if f and a and (a[0] >= b[0]):\n            f = False\n            t = s\n            s = ''\n            pop = deque.pop\n        s += pop(c[i])\n        i ^= 1\n    print(s if f else t + s[::-1])", "def func():\n    n = int(input())\n    s1 = [i for i in input()]\n    s2 = [i for i in input()]\n    s1.sort()\n    s2.sort(reverse=True)\n    news = [0 for i in range(2 * n)]\n    s1s = 0\n    s1e = n - 1\n    s2s = 0\n    s2e = n - 1\n    x = 0\n    y = 2 * n - 1\n    for i in range(n):\n        if s1[s1s] < s2[s2s]:\n            news[x] = s1[s1s]\n            s1s += 1\n            x += 1\n        else:\n            news[y] = s1[s1e]\n            s1e -= 1\n            y -= 1\n        if s1s < n and s2s < n and (s2[s2s] > s1[s1s]):\n            news[x] = s2[s2s]\n            x += 1\n            s2s += 1\n        else:\n            news[y] = s2[s2e]\n            s2e -= 1\n            y -= 1\n    print(''.join(news))\nt = int(input())\nfor i in range(t):\n    func()", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = input()[:n]\n    B = input()[:n]\n    A_sorted = sorted(A)\n    B_sorted = sorted(B, reverse=True)\n    new_list = list()\n    new_list_rev = list()\n    for j in range(n):\n        if A_sorted[0] < B_sorted[0]:\n            new_list.append(A_sorted[0])\n            A_sorted.pop(0)\n            if A_sorted:\n                if A_sorted[0] < B_sorted[0]:\n                    new_list.append(B_sorted[0])\n                    B_sorted.pop(0)\n                else:\n                    new_list_rev.append(B_sorted[-1])\n                    B_sorted.pop()\n            else:\n                new_list_rev.append(B_sorted[-1])\n                B_sorted.pop()\n        else:\n            new_list_rev.append(A_sorted[-1])\n            new_list_rev.append(B_sorted[-1])\n            A_sorted.pop()\n            B_sorted.pop()\n    new_list_rev.reverse()\n    final = new_list + new_list_rev\n    final_string = ''\n    for ele in final:\n        final_string += ele\n    print(final_string)", "for _ in range(int(input())):\n    N = int(input())\n    A = sorted(input())\n    B = sorted(input(), reverse=1)\n    A_start = 0\n    B_start = 0\n    A_end = N - 1\n    B_end = N - 1\n    Ss = ''\n    Se = ''\n    for i in range(N):\n        if A[A_start] < B[B_start]:\n            Ss += A[A_start]\n            A_start += 1\n        else:\n            Se = A[A_end] + Se\n            A_end -= 1\n        if A_end == -1 or A_start == N:\n            Ss += B[B_start]\n        elif B[B_start] > A[A_start]:\n            Ss += B[B_start]\n            B_start += 1\n        else:\n            Se = B[B_end] + Se\n            B_end -= 1\n    print(Ss + Se)", "for _ in range(int(input())):\n    n = int(input())\n    alice = sorted(list(input()))\n    bob = sorted(list(input()), reverse=True)\n    s = [0] * (2 * n)\n    (a, x) = (0, n - 1)\n    (b, y) = (0, n - 1)\n    (c, z) = (0, 2 * n - 1)\n    for i in range(n):\n        if alice[a] < bob[b]:\n            s[c] = alice[a]\n            a += 1\n            c += 1\n        else:\n            s[z] = alice[x]\n            z -= 1\n            x -= 1\n        if a > x or a == n or x == -1:\n            s[c] = bob[b]\n        elif bob[b] > alice[a]:\n            s[c] = bob[b]\n            b += 1\n            c += 1\n        else:\n            s[z] = bob[y]\n            z -= 1\n            y -= 1\n    print(''.join(s))", "T = int(input())\nfor K in range(T):\n    n = int(input())\n    x = input()\n    y = input()\n    a = list(x)\n    b = list(y)\n    a.sort()\n    b.sort()\n    b = b[::-1]\n    o = [0] * 2 * n\n    (front, end, startA, endA, startB, endB) = (0, 2 * n - 1, 0, n - 1, 0, n - 1)\n    for i in range(2 * n):\n        if i % 2 == 0:\n            if startB <= endB and a[startA] >= b[startB]:\n                o[end] = a[endA]\n                end -= 1\n                endA -= 1\n            else:\n                o[front] = a[startA]\n                front += 1\n                startA += 1\n        elif startA <= endA and a[startA] < b[startB]:\n            o[front] = b[startB]\n            front += 1\n            startB += 1\n        else:\n            o[end] = b[endB]\n            end -= 1\n            endB -= 1\n    output = ''\n    for i in o:\n        output += i\n    print(output)", "for _ in range(int(input())):\n    n = int(input())\n    k = [i for i in input()]\n    a = [i for i in input()]\n    s = [' ' for i in range(2 * n)]\n    st = 0\n    en = 2 * n - 1\n    k.sort()\n    a.sort(reverse=True)\n    for i in range(2 * n):\n        if i % 2 == 0:\n            if k[0] < a[0]:\n                s[st] = k[0]\n                st += 1\n                if k:\n                    k.pop(0)\n            else:\n                s[en] = k[-1]\n                en -= 1\n                if k:\n                    k.pop(-1)\n        elif not k or a[0] > k[0]:\n            s[st] = a[0]\n            st += 1\n            if a:\n                a.pop(0)\n        else:\n            s[en] = a[-1]\n            en -= 1\n            if a:\n                a.pop(-1)\n    s = ''.join(s)\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(sorted(input()))\n    b = list(sorted(input(), reverse=True))\n    ans = [''] * 2 * n\n    l = 0\n    r = 2 * n - 1\n    while l < r:\n        if a[0] >= b[0]:\n            ans[r] = a.pop()\n            r = r - 1\n        else:\n            ans[l] = a.pop(0)\n            l = l + 1\n        if a and b[0] <= a[0]:\n            ans[r] = b.pop()\n            r = r - 1\n        else:\n            ans[l] = b.pop(0)\n            l = l + 1\n    print(''.join((i for i in ans)))", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    a = list(a)\n    b = list(b)\n    a.sort()\n    b.sort(reverse=True)\n    (startA, backA) = (0, n - 1)\n    (startB, backB) = (0, n - 1)\n    ans = [0] * (2 * n)\n    (front, back) = (0, 2 * n - 1)\n    for i in range(2 * n):\n        if i % 2 == 0:\n            if startB <= backB and a[startA] >= b[startB]:\n                ans[back] = a[backA]\n                (back, backA) = (back - 1, backA - 1)\n            else:\n                ans[front] = a[startA]\n                (front, startA) = (front + 1, startA + 1)\n        elif startA <= backA and a[startA] < b[startB]:\n            ans[front] = b[startB]\n            (front, startB) = (front + 1, startB + 1)\n        else:\n            ans[back] = b[backB]\n            (back, backB) = (back - 1, backB - 1)\n    for val in ans:\n        print(val, end='')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    a = ''.join(sorted(a))\n    b = ''.join(sorted(b, reverse=True))\n    start = 0\n    astart = 0\n    bstart = 0\n    end = 2 * n - 1\n    aend = n - 1\n    bend = n - 1\n    l = [''] * (2 * n)\n    for i in range(2 * n):\n        if i % 2 == 0:\n            if bstart <= bend and a[astart] < b[bstart]:\n                l[start] = a[astart]\n                start += 1\n                astart += 1\n            else:\n                l[end] = a[aend]\n                end -= 1\n                aend -= 1\n        elif astart <= aend and b[bstart] > a[astart]:\n            l[start] = b[bstart]\n            start += 1\n            bstart += 1\n        else:\n            l[end] = b[bend]\n            end -= 1\n            bend -= 1\n    print(''.join(l))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s1 = input()\n    s1 = ''.join(sorted(s1))\n    s2 = input()\n    s2 = ''.join(sorted(s2, reverse=True))\n    l = [''] * (2 * n)\n    j = 0\n    k = 2 * n - 1\n    x1 = 0\n    x2 = n - 1\n    y1 = 0\n    y2 = n - 1\n    for i in range(2 * n):\n        if i & 1 == 0:\n            if y1 <= y2 and s2[y1] <= s1[x1]:\n                l[k] = s1[x2]\n                k -= 1\n                x2 -= 1\n            else:\n                l[j] = s1[x1]\n                j += 1\n                x1 += 1\n        elif x1 <= x2 and s1[x1] < s2[y1]:\n            l[j] = s2[y1]\n            j += 1\n            y1 += 1\n        else:\n            l[k] = s2[y2]\n            k -= 1\n            y2 -= 1\n    print(''.join(l))", "for o in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    res = list('0' * (2 * n))\n    s1 = list(s1)\n    s2 = list(s2)\n    s1 = ''.join(sorted(s1))\n    s2 = ''.join(sorted(s2))\n    ti = 0\n    tem = n - 1\n    bem = 0\n    b = n - 1\n    a = 0\n    rst = 2 * n - 1\n    for u in range(2 * n):\n        if b < bem:\n            res[ti] = s1[a]\n            a = a + 1\n            ti = ti + 1\n            continue\n        if a > tem:\n            res[ti] = s2[b]\n            b = b - 1\n            ti = ti + 1\n            continue\n        if u % 2 == 0:\n            if s1[a] < s2[b]:\n                res[ti] = s1[a]\n                a = a + 1\n                ti = ti + 1\n            else:\n                res[rst] = s1[tem]\n                rst = rst - 1\n                tem = tem - 1\n        elif s2[b] > s1[a]:\n            res[ti] = s2[b]\n            ti = ti + 1\n            b = b - 1\n        else:\n            res[rst] = s2[bem]\n            rst = rst - 1\n            bem = bem + 1\n    print(''.join(res))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s1 = input()\n    s1 = ''.join(sorted(s1))\n    s2 = input()\n    s2 = ''.join(sorted(s2, reverse=True))\n    l = [''] * (2 * n)\n    j = 0\n    k = 2 * n - 1\n    x1 = 0\n    x2 = n - 1\n    y1 = 0\n    y2 = n - 1\n    for i in range(2 * n):\n        if i & 1 == 0:\n            if y1 <= y2 and s2[y1] <= s1[x1]:\n                l[k] = s1[x2]\n                k -= 1\n                x2 -= 1\n            else:\n                l[j] = s1[x1]\n                j += 1\n                x1 += 1\n        elif x1 <= x2 and s1[x1] < s2[y1]:\n            l[j] = s2[y1]\n            j += 1\n            y1 += 1\n        else:\n            l[k] = s2[y2]\n            k -= 1\n            y2 -= 1\n    print(''.join(l))", "def check(n, a, b):\n    s = [0] * (2 * n)\n    (l, r) = (0, 2 * n - 1)\n    (la, lb) = (0, 0)\n    (ra, rb) = (n - 1, n - 1)\n    for i in range(n):\n        if a[la] < b[rb]:\n            s[l] = a[la]\n            la += 1\n            l += 1\n        else:\n            s[r] = a[ra]\n            r -= 1\n            ra -= 1\n        if la < n and a[la] < b[rb]:\n            s[l] = b[rb]\n            l += 1\n            rb -= 1\n        else:\n            s[r] = b[lb]\n            r -= 1\n            lb += 1\n    return ''.join(s)\nfor _ in range(int(input())):\n    n = int(input())\n    a = sorted(input())\n    b = sorted(input())\n    print(check(n, a, b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s1 = input()\n    s1 = ''.join(sorted(s1))\n    s2 = input()\n    s2 = ''.join(sorted(s2, reverse=True))\n    l = [''] * (2 * n)\n    j = 0\n    k = 2 * n - 1\n    x1 = 0\n    x2 = n - 1\n    y1 = 0\n    y2 = n - 1\n    for i in range(2 * n):\n        if i & 1 == 0:\n            if y1 <= y2 and s2[y1] <= s1[x1]:\n                l[k] = s1[x2]\n                k -= 1\n                x2 -= 1\n            else:\n                l[j] = s1[x1]\n                j += 1\n                x1 += 1\n        elif x1 <= x2 and s1[x1] < s2[y1]:\n            l[j] = s2[y1]\n            j += 1\n            y1 += 1\n        else:\n            l[k] = s2[y2]\n            k -= 1\n            y2 -= 1\n    print(''.join(l))", "for _ in range(int(input())):\n    n = int(input())\n    alice = sorted(input())\n    bob = sorted(input(), reverse=True)\n    ans = [0] * 2 * n\n    i = 0\n    j = n - 1\n    a = 0\n    b = 2 * n - 1\n    p = 0\n    q = n - 1\n    for k in range(n):\n        if alice[i] < bob[p]:\n            ans[a] = alice[i]\n            a += 1\n            i += 1\n        else:\n            ans[b] = alice[j]\n            b -= 1\n            j -= 1\n        if j < i or i == n or j == -1:\n            ans[a] = bob[p]\n        elif bob[p] > alice[i]:\n            ans[a] = bob[p]\n            p += 1\n            a += 1\n        else:\n            ans[b] = bob[q]\n            q -= 1\n            b -= 1\n    print(''.join(ans))", "for i in range(int(input())):\n    a = int(input())\n    alice = input()\n    bob = input()\n    A = list(sorted(alice))\n    B = list(sorted(bob)[::-1])\n    ans = [''] * 2 * a\n    l = 0\n    r = 2 * a - 1\n    while l < r:\n        if A[0] >= B[0]:\n            ans[r] = A.pop()\n            r -= 1\n        else:\n            ans[l] = A.pop(0)\n            l += 1\n        if A and B[0] <= A[0]:\n            ans[r] = B.pop()\n            r -= 1\n        else:\n            ans[l] = B.pop(0)\n            l += 1\n    print(''.join((i for i in ans)))", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    b = list(input())\n    a.sort()\n    b.sort(reverse=True)\n    ans = [0] * (2 * n)\n    l = 0\n    k = 1\n    ind1 = ind2 = 0\n    ind12 = ind22 = 1\n    for i in range(2 * n):\n        if i % 2 == 0:\n            if a[ind1] < b[ind2]:\n                ans[l] = a[ind1]\n                l += 1\n                ind1 += 1\n            else:\n                ans[-k] = a[-ind12]\n                k += 1\n                ind12 += 1\n        elif ind1 != n and a[ind1] < b[ind2]:\n            ans[l] = b[ind2]\n            l += 1\n            ind2 += 1\n        else:\n            ans[-k] = b[-ind22]\n            k += 1\n            ind22 += 1\n    print(''.join(ans))", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    al = []\n    bl = []\n    for j in range(n):\n        al.append(a[j])\n        bl.append(b[j])\n    al.sort()\n    bl.sort(reverse=True)\n    ans = [0] * (2 * n)\n    front = 0\n    back = 2 * n - 1\n    starta = 0\n    enda = n - 1\n    startb = 0\n    endb = n - 1\n    for i in range(2 * n):\n        if i % 2 == 0:\n            if startb <= endb and al[starta] >= bl[startb]:\n                ans[back] = al[enda]\n                back -= 1\n                enda -= 1\n            else:\n                ans[front] = al[starta]\n                front += 1\n                starta += 1\n        elif starta <= enda and al[starta] < bl[startb]:\n            ans[front] = bl[startb]\n            front += 1\n            startb += 1\n        else:\n            ans[back] = bl[endb]\n            back -= 1\n            endb -= 1\n    print(''.join(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    a = sorted(a)\n    b = sorted(b, reverse=True)\n    ans = [None] * (2 * n)\n    a_l = 0\n    a_r = n - 1\n    b_l = 0\n    b_r = n - 1\n    l = 0\n    r = 2 * n - 1\n    for i in range(n):\n        if a[a_l] < b[b_l]:\n            ans[l] = a[a_l]\n            l += 1\n            a_l += 1\n        else:\n            ans[r] = a[a_r]\n            r -= 1\n            a_r -= 1\n        if a_l >= n or b[b_l] > a[a_l]:\n            ans[l] = b[b_l]\n            l += 1\n            b_l += 1\n        else:\n            ans[r] = b[b_r]\n            r -= 1\n            b_r -= 1\n    print(''.join(ans))", "import sys, os, inspect\nINT_MIN = -sys.maxsize - 1\nINT_MAX = sys.maxsize\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n    sys.stderr = open('debug.txt', 'w')\n\ndef retrieve_name(var):\n    callers_local_vars = inspect.currentframe().f_back.f_back.f_locals.items()\n    return [var_name for (var_name, var_val) in callers_local_vars if var_val is var]\n\ndef debug(*argv):\n    for i in range(len(argv)):\n        sys.stderr.write(retrieve_name(argv[i])[0] + ' = ' + str(argv[i]))\n        sys.stderr.write('\\n')\n\ndef EOF():\n    return sys.stdin.tell() == os.fstat(sys.stdin.fileno()).st_size\n\ndef solve():\n    for t in range(int(input())):\n        n = int(input())\n        St1 = sorted(input())\n        St2 = sorted(input())[::-1]\n        St = St1 + St2\n        x = 0\n        y = 2 * n - 1\n        S1s = 0\n        S1e = n - 1\n        S2s = 0\n        S2e = n - 1\n        for i in range(n):\n            try:\n                if St1[S1s] < St2[S2s]:\n                    St[x] = St1[S1s]\n                    S1s += 1\n                    x += 1\n                else:\n                    St[y] = St1[S1e]\n                    S1e -= 1\n                    y -= 1\n                if St2[S2s] > St1[S1s]:\n                    St[x] = St2[S2s]\n                    S2s += 1\n                    x += 1\n                else:\n                    St[y] = St2[S2e]\n                    S2e -= 1\n                    y -= 1\n            except:\n                pass\n        print(*St, sep='')\nsolve()", "from collections import deque\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = deque(sorted(input().strip()))\n    b = deque(sorted(input().strip()))\n    s1 = ''\n    s2 = ''\n    for i in range(n):\n        if a[0] < b[-1]:\n            s1 += a.popleft()\n        else:\n            s2 = a.pop() + s2\n        if len(a):\n            if a[0] < b[-1]:\n                s1 += b.pop()\n            else:\n                s2 = b.popleft() + s2\n        else:\n            s1 += b[0]\n    print(s1 + s2)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(input()))\n    b = sorted(list(input()), reverse=True)\n    start = 0\n    end = 2 * n - 1\n    s = [0] * (2 * n)\n    for v in range(n):\n        if a[0] < b[0]:\n            s[start] = a[0]\n            a.pop(0)\n            start += 1\n        else:\n            s[end] = a[-1]\n            a.pop(-1)\n            end -= 1\n        if a == []:\n            s[s.index(0)] = b[0]\n            b.pop()\n        elif b[0] > a[0]:\n            s[start] = b[0]\n            b.pop(0)\n            start += 1\n        else:\n            s[end] = b[-1]\n            b.pop(-1)\n            end -= 1\n    print(''.join(s))", "T = int(input())\n\ndef solve():\n    n = int(input())\n    a = str(input())\n    b = str(input())\n    a = sorted(a)\n    b = sorted(b, reverse=True)\n    front = ''\n    back = ''\n    for i in range(2 * n):\n        if not i & 1:\n            if len(b) != 0 and a[0] >= b[0]:\n                back = a.pop() + back\n            else:\n                front += a.pop(0)\n        elif len(a) != 0 and a[0] >= b[0]:\n            back = b.pop() + back\n        else:\n            front += b.pop(0)\n    print(front + back)\nfor t in range(T):\n    solve()", "def test():\n    size = int(input())\n    string_1 = input()\n    string_2 = input()\n    string_size = 2 * size - 1\n    answer = [' '] * 2 * size\n    alice_string = sorted([i for i in string_1])\n    bob_string = sorted([i for i in string_2], reverse=True)\n    front_time = 0\n    last_time = string_size\n    for i in range(string_size // 2 + 1):\n        if alice_string[0] < bob_string[0]:\n            answer[front_time] = alice_string[0]\n            alice_string.remove(alice_string[0])\n            front_time += 1\n        else:\n            answer[last_time] = alice_string.pop(len(alice_string) - 1)\n            last_time -= 1\n        try:\n            if bob_string[0] > alice_string[0]:\n                answer[front_time] = bob_string[0]\n                bob_string.pop(0)\n                front_time += 1\n            else:\n                answer[last_time] = bob_string.pop(len(bob_string) - 1)\n                last_time -= 1\n        except IndexError:\n            answer[front_time] = bob_string.pop(0)\n    print(''.join(answer))\nt = int(input())\nfor _ in range(t):\n    test()", "from collections import deque\nimport sys\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    num_stones_each = int(input())\n    arr_a = deque(sorted(input().strip()))\n    arr_b = deque(sorted(input().strip()))\n    left = ''\n    right = ''\n    for i in range(num_stones_each):\n        if arr_a[0] < arr_b[-1]:\n            left += arr_a.popleft()\n        else:\n            right += arr_a.pop()\n        if len(arr_a):\n            if arr_a[0] < arr_b[-1]:\n                left += arr_b.pop()\n            else:\n                right += arr_b.popleft()\n        else:\n            right += arr_b.pop()\n    ans = left + right[::-1]\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    s = ['' for _ in range(2 * n)]\n    (f, f1, f2, e, e1, e2) = (0, 0, 0, 2 * n - 1, n - 1, n - 1)\n    s1 = ''.join(sorted(s1))\n    s2 = ''.join(sorted(s2, reverse=True))\n    for i in range(2 * n):\n        if i % 2 == 0:\n            if f2 <= e2 and s1[f1] >= s2[f2]:\n                s[e] = s1[e1]\n                e -= 1\n                e1 -= 1\n            else:\n                s[f] = s1[f1]\n                f += 1\n                f1 += 1\n        elif f1 <= e1 and s1[f1] < s2[f2]:\n            s[f] = s2[f2]\n            f += 1\n            f2 += 1\n        else:\n            s[e] = s2[e2]\n            e -= 1\n            e2 -= 1\n    print(''.join(s))\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    s = ['' for _ in range(2 * n)]\n    (f, f1, f2, e, e1, e2) = (0, 0, 0, 2 * n - 1, n - 1, n - 1)\n    s1 = ''.join(sorted(s1))\n    s2 = ''.join(sorted(s2, reverse=True))\n    for i in range(2 * n):\n        if i % 2 == 0:\n            if f2 <= e2 and s1[f1] >= s2[f2]:\n                s[e] = s1[e1]\n                e -= 1\n                e1 -= 1\n            else:\n                s[f] = s1[f1]\n                f += 1\n                f1 += 1\n        elif f1 <= e1 and s1[f1] < s2[f2]:\n            s[f] = s2[f2]\n            f += 1\n            f2 += 1\n        else:\n            s[e] = s2[e2]\n            e -= 1\n            e2 -= 1\n    print(''.join(s))\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    s = ['' for _ in range(2 * n)]\n    (f, f1, f2, e, e1, e2) = (0, 0, 0, 2 * n - 1, n - 1, n - 1)\n    s1 = ''.join(sorted(s1))\n    s2 = ''.join(sorted(s2, reverse=True))\n    for i in range(2 * n):\n        if i % 2 == 0:\n            if f2 <= e2 and s1[f1] >= s2[f2]:\n                s[e] = s1[e1]\n                e -= 1\n                e1 -= 1\n            else:\n                s[f] = s1[f1]\n                f += 1\n                f1 += 1\n        elif f1 <= e1 and s1[f1] < s2[f2]:\n            s[f] = s2[f2]\n            f += 1\n            f2 += 1\n        else:\n            s[e] = s2[e2]\n            e -= 1\n            e2 -= 1\n    print(''.join(s))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input().strip()\n    b = input().strip()\n    a = list(a)\n    b = list(b)\n    a.sort()\n    b.sort()\n    a = ''.join(a)\n    b = ''.join(b)\n    i1 = 0\n    j1 = n - 1\n    i2 = 0\n    j2 = n - 1\n    end = 2 * n\n    i = 0\n    ans1 = ''\n    ans2 = ''\n    while i < end:\n        if i1 <= j1 and i2 <= j2:\n            if i % 2 == 0:\n                if a[i1] < b[j2]:\n                    ans1 = ans1 + a[i1]\n                    i1 += 1\n                else:\n                    ans2 = ans2 + a[j1]\n                    j1 -= 1\n            elif a[i1] < b[j2]:\n                ans1 = ans1 + b[j2]\n                j2 -= 1\n            else:\n                ans2 = ans2 + b[i2]\n                i2 += 1\n        elif i1 <= j1:\n            ans1 = ans1 + a[i1]\n            i1 += 1\n        elif i2 <= j2:\n            ans1 = ans1 + b[j2]\n            j2 -= 1\n        i = i + 1\n    ans = ans1 + ans2[::-1]\n    print(ans)", "from math import sqrt\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    l = sorted(a)\n    v = sorted(b, reverse=True)\n    s = ['' for i in range(2 * n)]\n    i = 0\n    p = n - 1\n    q = n - 1\n    j = 0\n    x = 0\n    k = 2 * n - 1\n    iss = True\n    while x < k:\n        if iss:\n            if l[i] < v[j]:\n                s[x] = l[i]\n                x += 1\n                i += 1\n            else:\n                s[k] = l[q]\n                k -= 1\n                q -= 1\n        elif l[i] >= v[j]:\n            s[k] = v[p]\n            k -= 1\n            p -= 1\n        else:\n            s[x] = v[j]\n            x += 1\n            j += 1\n        iss = not iss\n    s[x] = v[j]\n    print(''.join(s))", "from math import sqrt\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    l = sorted(a)\n    v = sorted(b, reverse=True)\n    s = ['' for i in range(2 * n)]\n    i = 0\n    p = n - 1\n    q = n - 1\n    j = 0\n    x = 0\n    k = 2 * n - 1\n    iss = True\n    while x < k:\n        if iss:\n            if l[i] < v[j]:\n                s[x] = l[i]\n                x += 1\n                i += 1\n            else:\n                s[k] = l[q]\n                k -= 1\n                q -= 1\n        elif l[i] >= v[j]:\n            s[k] = v[p]\n            k -= 1\n            p -= 1\n        else:\n            s[x] = v[j]\n            x += 1\n            j += 1\n        iss = not iss\n    s[x] = v[j]\n    print(''.join(s))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    s1 = ''.join(sorted(s1))\n    s2 = ''.join(sorted(s2, reverse=True))\n    s = ['*'] * (2 * n)\n    i = 0\n    j = 2 * n - 1\n    for i in range(2 * n):\n        if len(s1) == 0:\n            if s[i] == '*':\n                s[i] = s2\n                break\n            if s[j] == '*':\n                s[j] = s2\n                break\n        if i % 2 == 0:\n            if s1[0] >= s2[0]:\n                s[j] = s1[-1]\n                j -= 1\n                if len(s1) != 0:\n                    s1 = s1[:-1]\n                else:\n                    s1 = ''\n            else:\n                s[i] = s1[0]\n                i += 1\n                if len(s1) != 0:\n                    s1 = s1[1:]\n                else:\n                    s1 = ''\n        elif s2[0] <= s1[0]:\n            s[j] = s2[-1]\n            j -= 1\n            if len(s2) != 0:\n                s2 = s2[:-1]\n            else:\n                s2 = ''\n        else:\n            s[i] = s2[0]\n            i += 1\n            if len(s2) != 0:\n                s2 = s2[1:]\n            else:\n                s2 = ''\n    for i in s:\n        print(i, end='')\n    print()", "from collections import defaultdict\nimport heapq\nimport math\nfrom math import sqrt\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    l = sorted(a)\n    v = sorted(b, reverse=True)\n    s = ['' for i in range(2 * n)]\n    i = 0\n    p = n - 1\n    q = n - 1\n    j = 0\n    x = 0\n    k = 2 * n - 1\n    iss = True\n    while x < k:\n        if iss:\n            if l[i] < v[j]:\n                s[x] = l[i]\n                x += 1\n                i += 1\n            else:\n                s[k] = l[q]\n                k -= 1\n                q -= 1\n        elif l[i] >= v[j]:\n            s[k] = v[p]\n            k -= 1\n            p -= 1\n        else:\n            s[x] = v[j]\n            x += 1\n            j += 1\n        iss = not iss\n    s[x] = v[j]\n    print(''.join(s))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    p1 = sorted(list(s1))\n    p2 = sorted(list(s2), reverse=True)\n    ans = [-1] * (2 * n)\n    alice = 0\n    (i, j) = (0, 0)\n    while alice < 2 * n:\n        if len(p1) == 0 or len(p2) == 0:\n            break\n        if alice % 2 == 0:\n            if p2[0] > p1[0]:\n                ans[i] = p1[0]\n                p1.pop(0)\n                i += 1\n            else:\n                ans[2 * n - j - 1] = p1[-1]\n                p1.pop()\n                j += 1\n        elif p1[0] < p2[0]:\n            ans[i] = p2[0]\n            p2.pop(0)\n            i += 1\n        else:\n            ans[2 * n - j - 1] = p2[-1]\n            p2.pop()\n            j += 1\n        alice += 1\n    if len(p1) == 0:\n        for i in range(len(ans)):\n            if ans[i] == -1:\n                ans[i] = p2[0]\n                break\n    else:\n        for i in range(len(ans)):\n            if ans[i] == -1:\n                ans[i] = p1[0]\n                break\n    print(''.join(ans))", "def solve(x, y):\n    (s1, s2) = ('', '')\n    while True:\n        if x[0] >= y[0]:\n            s2 += x[-1]\n            x.pop()\n        else:\n            s1 += x[0]\n            x.pop(0)\n        if not x:\n            s2 += y[0]\n            y.pop()\n            break\n        if y[0] <= x[0]:\n            s2 += y[-1]\n            y.pop()\n        else:\n            s1 += y[0]\n            y.pop(0)\n    return ''.join(s1 + s2[::-1])\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    l1 = list(input())\n    l2 = list(input())\n    print(solve(sorted(l1), sorted(l2, reverse=True)))", "import sys\nimport math\nfrom collections import defaultdict, Counter\nfrom bisect import *\nfrom string import ascii_lowercase\n\ndef readInts():\n    x = list(map(int, sys.stdin.readline().rstrip().split()))\n    return x[0] if len(x) == 1 else x\n\ndef readList(type=int):\n    x = sys.stdin.readline()\n    x = list(map(type, x.rstrip('\\n\\r').split()))\n    return x\n\ndef readStr():\n    x = sys.stdin.readline().rstrip('\\r\\n')\n    return x\nwrite = sys.stdout.write\nread = sys.stdin.readline\n\ndef solve():\n    n = readInts()\n    a = list(readStr())\n    b = list(readStr())\n    k = 0\n    j = 2 * n - 1\n    res = ['_' for x in range(2 * n)]\n    a.sort()\n    b.sort(reverse=True)\n    while len(a) > 0 and len(b) > 0:\n        if a[0] >= b[0]:\n            res[j] = a[len(a) - 1]\n            j -= 1\n            a.pop(len(a) - 1)\n        else:\n            res[k] = a[0]\n            k += 1\n            a.pop(0)\n        if len(a) == 0:\n            res[j] = b[0]\n        elif b[0] > a[0]:\n            res[k] = b[0]\n            k += 1\n            b.pop(0)\n        else:\n            res[j] = b[len(b) - 1]\n            j -= 1\n            b.pop(len(b) - 1)\n    print(''.join(res))\n\ndef main():\n    t = readInts()\n    for _ in range(t):\n        solve()\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(input())\n    b = sorted(input(), reverse=True)\n    s = [0] * 2 * n\n    front = 0\n    back = 2 * n - 1\n    for i in range(2 * n):\n        if i & 1 == 0:\n            if a[0] >= b[0]:\n                s[back] = a[-1]\n                a.pop(-1)\n                back -= 1\n            else:\n                s[front] = a[0]\n                a.pop(0)\n                front += 1\n        elif a == []:\n            s[back] = b[-1]\n        elif b[0] <= a[0]:\n            s[back] = b[-1]\n            b.pop(-1)\n            back -= 1\n        else:\n            s[front] = b[0]\n            b.pop(0)\n            front += 1\n    print(''.join(s))", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(input())\n    b = sorted(input(), reverse=True)\n    s = [0] * 2 * n\n    front = 0\n    back = 2 * n - 1\n    for i in range(2 * n):\n        if i & 1 == 0:\n            if a[0] >= b[0]:\n                s[back] = a[-1]\n                a.pop(-1)\n                back -= 1\n            else:\n                s[front] = a[0]\n                a.pop(0)\n                front += 1\n        elif a == []:\n            s[back] = b[-1]\n        elif b[0] <= a[0]:\n            s[back] = b[-1]\n            b.pop(-1)\n            back -= 1\n        else:\n            s[front] = b[0]\n            b.pop(0)\n            front += 1\n    print(''.join(s))", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(input())\n    b = sorted(input(), reverse=True)\n    s = [0] * 2 * n\n    front = 0\n    back = 2 * n - 1\n    for i in range(2 * n):\n        if i & 1 == 0:\n            if a[0] >= b[0]:\n                s[back] = a[-1]\n                a.pop(-1)\n                back -= 1\n            else:\n                s[front] = a[0]\n                a.pop(0)\n                front += 1\n        elif a == []:\n            s[back] = b[-1]\n        elif b[0] <= a[0]:\n            s[back] = b[-1]\n            b.pop(-1)\n            back -= 1\n        else:\n            s[front] = b[0]\n            b.pop(0)\n            front += 1\n    print(''.join(s))", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(input())\n    b = sorted(input(), reverse=True)\n    s = [0] * 2 * n\n    front = 0\n    back = 2 * n - 1\n    for i in range(2 * n):\n        if i & 1 == 0:\n            if a[0] >= b[0]:\n                s[back] = a[-1]\n                a.pop(-1)\n                back -= 1\n            else:\n                s[front] = a[0]\n                a.pop(0)\n                front += 1\n        elif a == []:\n            s[back] = b[-1]\n        elif b[0] <= a[0]:\n            s[back] = b[-1]\n            b.pop(-1)\n            back -= 1\n        else:\n            s[front] = b[0]\n            b.pop(0)\n            front += 1\n    print(''.join(s))", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        alice = list(input())\n        bob = list(input())\n        alice = sorted(alice)\n        bob = sorted(bob, reverse=True)\n        ans = [0] * (2 * n)\n        i = 0\n        j = 2 * n - 1\n        while (alice or bob) and i < 2 * n and (j > -1):\n            if alice[0] < bob[0]:\n                ans[i] = alice.pop(0)\n                i += 1\n            else:\n                ans[j] = alice.pop(-1)\n                j -= 1\n            if alice and bob[0] > alice[0]:\n                ans[i] = bob.pop(0)\n                i += 1\n            else:\n                ans[j] = bob.pop(-1)\n                j -= 1\n        print(''.join(ans))\nexcept:\n    pass", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    a1 = [a for a in input()]\n    a2 = [aa for aa in input()]\n    i1 = 0\n    i2 = n - 1\n    j1 = 0\n    j2 = n - 1\n    a1.sort()\n    a2.sort(reverse=True)\n    ans = [0] * (2 * n)\n    f = 0\n    b = 2 * n - 1\n    for r in range(n):\n        if a1[i1] < a2[j1]:\n            ans[f] = a1[i1]\n            f += 1\n            i1 += 1\n        else:\n            ans[b] = a1[i2]\n            b -= 1\n            i2 -= 1\n        if i1 < n and a1[i1] < a2[j1]:\n            ans[f] = a2[j1]\n            f += 1\n            j1 += 1\n        else:\n            ans[b] = a2[j2]\n            b -= 1\n            j2 -= 1\n    print(''.join(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    A = [char for char in a]\n    B = [char for char in b]\n    A.sort()\n    B.sort()\n    ans = [0] * (2 * n)\n    l = 0\n    r = 2 * n - 1\n    la = lb = 0\n    ra = rb = n - 1\n    for i in range(n):\n        if A[la] < B[rb]:\n            ans[l] = A[la]\n            l += 1\n            la += 1\n        else:\n            ans[r] = A[ra]\n            r -= 1\n            ra -= 1\n        if la < n and B[rb] > A[la]:\n            ans[l] = B[rb]\n            l += 1\n            rb -= 1\n        else:\n            ans[r] = B[lb]\n            r -= 1\n            lb += 1\n    print(''.join(ans))", "import sys\nfrom collections import Counter\ninput = sys.stdin.readline\nT = int(input())\n\ndef testcase():\n    n = int(input())\n    alice = input().split()[0]\n    bob = input().split()[0]\n    da = Counter(alice)\n    db = Counter(bob)\n    ind1 = sorted(list(da.keys()))\n    ind2 = sorted(list(db.keys()))\n    s = [''] * (2 * n)\n    i = 0\n    j = 2 * n - 1\n    (ia, ja, ib, jb) = (0, len(ind1) - 1, 0, len(ind2) - 1)\n    flag = False\n    for loop in range(n):\n        if ind1[ia] >= ind2[jb]:\n            s[j] = ind1[ja]\n            da[ind1[ja]] -= 1\n            if da[ind1[ja]] == 0:\n                ja -= 1\n            j -= 1\n            flag = True\n        else:\n            s[i] = ind1[ia]\n            da[ind1[ia]] -= 1\n            if da[ind1[ia]] == 0:\n                ia += 1\n            i += 1\n        if loop == n - 1 or ind1[ia] >= ind2[jb]:\n            s[j] = ind2[ib]\n            db[ind2[ib]] -= 1\n            if db[ind2[ib]] == 0:\n                ib += 1\n            j -= 1\n        else:\n            s[i] = ind2[jb]\n            db[ind2[jb]] -= 1\n            if db[ind2[jb]] == 0:\n                jb -= 1\n            i += 1\n    for c in s:\n        print(c, end='')\n    print('')\nfor _ in range(T):\n    testcase()", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        alice = list(input())\n        bob = list(input())\n        alice = sorted(alice)\n        bob = sorted(bob, reverse=True)\n        ans = [0] * (2 * n)\n        i = 0\n        j = 2 * n - 1\n        while (alice or bob) and i < 2 * n and (j > -1):\n            if alice[0] < bob[0]:\n                ans[i] = alice.pop(0)\n                i += 1\n            else:\n                ans[j] = alice.pop(-1)\n                j -= 1\n            if alice and bob[0] > alice[0]:\n                ans[i] = bob.pop(0)\n                i += 1\n            else:\n                ans[j] = bob.pop(-1)\n                j -= 1\n        print(''.join(ans))\nexcept:\n    pass", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(input())\n    b = list(input())\n    a.sort(reverse=True)\n    b.sort()\n    final = ['-'] * (n * 2)\n    (i, j) = (0, len(final) - 1)\n    (k, l) = (0, 0)\n    flag = 1\n    while i <= j:\n        if len(a) == 0:\n            final[i] = b.pop()\n            break\n        x = a[-1]\n        y = b[-1]\n        if flag:\n            if x < y:\n                final[i] = x\n                i += 1\n                a.pop()\n            else:\n                if k == 0:\n                    a.reverse()\n                    b.reverse()\n                    k += 1\n                x = a[-1]\n                final[j] = x\n                j -= 1\n                a.pop()\n            flag = 0\n        else:\n            if x < y:\n                final[i] = y\n                i += 1\n                b.pop()\n            else:\n                if k == 0:\n                    a.reverse()\n                    b.reverse()\n                    k += 1\n                y = b[-1]\n                final[j] = y\n                j -= 1\n                b.pop()\n            flag = 1\n    print(''.join(final))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(input())\n    b = list(input())\n    a.sort(reverse=True)\n    b.sort()\n    final = ['-'] * (n * 2)\n    (i, j) = (0, len(final) - 1)\n    (k, l) = (0, 0)\n    flag = 1\n    while i <= j:\n        if len(a) == 0:\n            final[i] = b.pop()\n            break\n        x = a[-1]\n        y = b[-1]\n        if flag:\n            if x < y:\n                final[i] = x\n                i += 1\n                a.pop()\n            else:\n                if k == 0:\n                    a.reverse()\n                    k += 1\n                x = a[-1]\n                final[j] = x\n                j -= 1\n                a.pop()\n            flag = 0\n        else:\n            if x < y:\n                final[i] = y\n                i += 1\n                b.pop()\n            else:\n                if l == 0:\n                    b.reverse()\n                    l += 1\n                y = b[-1]\n                final[j] = y\n                j -= 1\n                b.pop()\n            flag = 1\n    print(''.join(final))", "for o in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    res = list('0' * (2 * n))\n    s1 = list(s1)\n    s2 = list(s2)\n    s1 = ''.join(sorted(s1))\n    s2 = ''.join(sorted(s2))\n    ti = 0\n    tem = n - 1\n    bem = 0\n    b = n - 1\n    a = 0\n    rst = 2 * n - 1\n    for u in range(2 * n):\n        if b < bem:\n            res[ti] = s1[a]\n            a = a + 1\n            ti = ti + 1\n            continue\n        if a > tem:\n            res[ti] = s2[b]\n            b = b - 1\n            ti = ti + 1\n            continue\n        if u % 2 == 0:\n            if s1[a] < s2[b]:\n                res[ti] = s1[a]\n                a = a + 1\n                ti = ti + 1\n            else:\n                res[rst] = s1[tem]\n                rst = rst - 1\n                tem = tem - 1\n        elif s2[b] > s1[a]:\n            res[ti] = s2[b]\n            ti = ti + 1\n            b = b - 1\n        else:\n            res[rst] = s2[bem]\n            rst = rst - 1\n            bem = bem + 1\n    print(''.join(res))", "def sol():\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    res = ['0' for i in range(n + n)]\n    s1 = sorted(s1)\n    s2 = sorted(s2)\n    tem = n - 1\n    bem = 0\n    b = n - 1\n    a = 0\n    rst = 2 * n - 1\n    TIH = 0\n    for i in range(n + n):\n        if b < bem:\n            res[TIH] = s1[a]\n            a += 1\n            TIH += 1\n            continue\n        if a > tem:\n            res[TIH] = s2[b]\n            b -= 1\n            TIH += 1\n            continue\n        if i % 2 == 0:\n            if s1[a] < s2[b]:\n                res[TIH] = s1[a]\n                a += 1\n                TIH += 1\n            else:\n                res[rst] = s1[tem]\n                rst -= 1\n                tem -= 1\n        elif s2[b] > s1[a]:\n            res[TIH] = s2[b]\n            TIH += 1\n            b -= 1\n        else:\n            res[rst] = s2[bem]\n            rst -= 1\n            bem += 1\n    print(''.join(res))\n\ndef main():\n    for _ in range(int(input())):\n        sol()\nmain()", "tests = int(input())\nfor i in range(tests):\n    N = int(input())\n    A_string = input()\n    B_string = input()\n    A_sorted = sorted(A_string)\n    B_sorted = sorted(B_string, reverse=True)\n    new_list = list()\n    new_list_rev = list()\n    for j in range(N):\n        if A_sorted[0] < B_sorted[0]:\n            new_list.append(A_sorted[0])\n            A_sorted.pop(0)\n            if A_sorted:\n                if A_sorted[0] < B_sorted[0]:\n                    new_list.append(B_sorted[0])\n                    B_sorted.pop(0)\n                else:\n                    new_list_rev.append(B_sorted[-1])\n                    B_sorted.pop()\n            else:\n                new_list_rev.append(B_sorted[-1])\n                B_sorted.pop()\n        else:\n            new_list_rev.append(A_sorted[-1])\n            new_list_rev.append(B_sorted[-1])\n            A_sorted.pop()\n            B_sorted.pop()\n    new_list_rev.reverse()\n    final = new_list + new_list_rev\n    final_string = ''\n    for ele in final:\n        final_string += ele\n    print(final_string)", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    res = list('0' * (2 * n))\n    s1 = list(s1)\n    s2 = list(s2)\n    s1 = ''.join(sorted(s1))\n    s2 = ''.join(sorted(s2))\n    ti = 0\n    tem = n - 1\n    bem = 0\n    b = n - 1\n    a = 0\n    rst = 2 * n - 1\n    for i in range(2 * n):\n        if b < bem:\n            res[ti] = s1[a]\n            a = a + 1\n            ti = ti + 1\n            continue\n        if a > tem:\n            res[ti] = s2[b]\n            b = b - 1\n            ti = ti + 1\n            continue\n        if i % 2 == 0:\n            if s1[a] < s2[b]:\n                res[ti] = s1[a]\n                a = a + 1\n                ti = ti + 1\n            else:\n                res[rst] = s1[tem]\n                rst = rst - 1\n                tem = tem - 1\n        elif s2[b] > s1[a]:\n            res[ti] = s2[b]\n            ti = ti + 1\n            b = b - 1\n        else:\n            res[rst] = s2[bem]\n            rst = rst - 1\n            bem = bem + 1\n    print(''.join(res))", "for t in range(int(input())):\n    n = int(input())\n    St1 = sorted(input())\n    St2 = sorted(input())[::-1]\n    St = St1 + St2\n    x = 0\n    y = 2 * n - 1\n    S1s = 0\n    S1e = n - 1\n    S2s = 0\n    S2e = n - 1\n    for i in range(n):\n        try:\n            if St1[S1s] < St2[S2s]:\n                St[x] = St1[S1s]\n                S1s += 1\n                x += 1\n            else:\n                St[y] = St1[S1e]\n                S1e -= 1\n                y -= 1\n            if St2[S2s] > St1[S1s]:\n                St[x] = St2[S2s]\n                S2s += 1\n                x += 1\n            else:\n                St[y] = St2[S2e]\n                S2e -= 1\n                y -= 1\n        except:\n            pass\n    print(*St, sep='')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [j for j in input()]\n    b = [j for j in input()]\n    a.sort()\n    b.sort()\n    i1 = 0\n    i2 = n - 1\n    j1 = 0\n    j2 = n - 1\n    s = ''\n    s1 = ''\n    while j2 >= j1:\n        if a[i1] < b[j2]:\n            s += a[i1]\n            i1 += 1\n        else:\n            s1 = a[i2] + s1\n            i2 -= 1\n        if i1 < n and b[j2] > a[i1]:\n            s += b[j2]\n            j2 -= 1\n        else:\n            s1 = b[j1] + s1\n            j1 += 1\n    print(s + s1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [x for x in input()]\n    a.sort()\n    b = [x for x in input()]\n    b.sort(reverse=True)\n    new = [0] * (2 * n)\n    i = 0\n    k = 0\n    j = 0\n    flag = 0\n    while i < n:\n        if flag:\n            new[k] = a[-1 - j]\n            new[k - 1] = b[-1 - j]\n            j += 1\n            k -= 2\n        elif a[i] < b[i]:\n            new[2 * i] = a[i]\n            if i == n - 1:\n                new[2 * i + 1] = b[i]\n                break\n            elif b[i] > a[i + 1]:\n                new[2 * i + 1] = b[i]\n            else:\n                new[-1] = b[-1]\n                b.pop()\n                j = 0\n                k = -2\n                flag = 1\n        else:\n            flag = 1\n            new[-1] = a[-1]\n            new[-2] = b[-1]\n            j = 1\n            k = -3\n        i += 1\n    for z in new:\n        print(z, end='')\n    print()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s1 = list(input())\n    s2 = list(input())\n    s1.sort()\n    s2.sort()\n    a = 0\n    a_end = n - 1\n    b_end = 0\n    b = n - 1\n    s = ['0'] * (2 * n)\n    end = 2 * n - 1\n    start = 0\n    for i in range(2 * n):\n        if b < b_end:\n            s[start] = s1[a]\n            a += 1\n            start += 1\n            continue\n        if a > a_end:\n            s[start] = s2[b]\n            b -= 1\n            start += 1\n            continue\n        if i % 2 == 0:\n            if s1[a] < s2[b]:\n                s[start] = s1[a]\n                a += 1\n                start += 1\n            else:\n                s[end] = s1[a_end]\n                end -= 1\n                a_end -= 1\n        elif s2[b] > s1[a]:\n            s[start] = s2[b]\n            start += 1\n            b -= 1\n        else:\n            s[end] = s2[b_end]\n            end -= 1\n            b_end += 1\n    ans = ''\n    for x in s:\n        ans = ans + x\n    print(ans)\n    t = t - 1", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    a = list(input())\n    b = list(input())\n    a.sort()\n    b.sort(reverse=True)\n    s = [0] * (2 * n)\n    emptystart = 0\n    emptyend = 2 * n - 1\n    mina = 0\n    maxa = n - 1\n    maxb = n - 1\n    minb = 0\n    for i in range(2 * n):\n        if i % 2 == 0:\n            if mina < n and minb < n and (a[mina] < b[minb]):\n                s[emptystart] = a[mina]\n                mina += 1\n                emptystart += 1\n            else:\n                s[emptyend] = a[maxa]\n                maxa -= 1\n                emptyend -= 1\n        elif mina < n and minb < n and (a[mina] < b[minb]):\n            s[emptystart] = b[minb]\n            minb += 1\n            emptystart += 1\n        else:\n            s[emptyend] = b[maxb]\n            maxb -= 1\n            emptyend -= 1\n    print(''.join(s))", "for _ in range(int(input())):\n    n = int(input())\n    alice = sorted(input())\n    bob = sorted(input(), reverse=True)\n    ans = [0] * 2 * n\n    i = 0\n    j = n - 1\n    a = 0\n    b = 2 * n - 1\n    p = 0\n    q = n - 1\n    for k in range(n):\n        if alice[i] < bob[p]:\n            ans[a] = alice[i]\n            a += 1\n            i += 1\n        else:\n            ans[b] = alice[j]\n            b -= 1\n            j -= 1\n        if j < i or i == n or j == -1:\n            ans[a] = bob[p]\n        elif bob[p] > alice[i]:\n            ans[a] = bob[p]\n            p += 1\n            a += 1\n        else:\n            ans[b] = bob[q]\n            q -= 1\n            b -= 1\n    print(''.join(ans))", "for t in range(int(input())):\n    n = int(input())\n    alice = list(input())\n    bob = list(input())\n    alice.sort()\n    bob.sort(reverse=True)\n    ans = [0] * (2 * n)\n    (start, end) = (0, 2 * n - 1)\n    (a, b) = (len(alice), len(bob))\n    while start < end:\n        i = 0\n        if alice[i] < bob[i]:\n            ans[start] = alice[i]\n            a -= 1\n            alice.pop(0)\n            start += 1\n        else:\n            ans[end] = alice[-1]\n            a -= 1\n            alice.pop()\n            end -= 1\n        if a > 0 and bob[i] > alice[i]:\n            ans[start] = bob[i]\n            b -= 1\n            bob.pop(0)\n            start += 1\n        else:\n            ans[end] = bob[-1]\n            b -= 1\n            bob.pop()\n            end -= 1\n    for i in ans:\n        print(i, end='')\n    print()", "test = int(input())\nfor _ in range(test):\n    N = int(input())\n    A = sorted(list(input()))\n    B = sorted(list(input()))\n    S = [None] * (2 * N)\n    n = N\n    a_begin = 0\n    b_begin = n - 1\n    a_end = n - 1\n    b_end = 0\n    left = 0\n    right = 2 * n - 1\n    for i in range(2 * N):\n        if b_begin < b_end:\n            S[left] = A[a_begin]\n            a_begin += n - 1\n            left += 1\n            continue\n        if a_begin > a_end:\n            S[left] = B[b_begin]\n            b_begin -= 1\n            left += 1\n            continue\n        if i % 2 == 0:\n            if A[a_begin] < B[b_begin]:\n                S[left] = A[a_begin]\n                a_begin += 1\n                left += 1\n            else:\n                S[right] = A[a_end]\n                right -= 1\n                a_end -= 1\n        elif B[b_begin] > A[a_begin]:\n            S[left] = B[b_begin]\n            left += 1\n            b_begin -= 1\n        else:\n            S[right] = B[b_end]\n            right -= 1\n            b_end += 1\n    print(''.join(S))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(input())\n    p = list(input())\n    l = sorted(l)\n    p = sorted(p)\n    tem = n - 1\n    bem = 0\n    b = n - 1\n    a = 0\n    rst = 2 * n - 1\n    tih = 0\n    res = ['' for i in range(2 * n)]\n    for i in range(2 * n):\n        if b < bem:\n            res[tih] = l[a]\n            a += 1\n            tih += 1\n            continue\n        if a > tem:\n            res[tih] = p[b]\n            b -= 1\n            tih += 1\n            continue\n        if i % 2 == 0:\n            if l[a] < p[b]:\n                res[tih] = l[a]\n                a += 1\n                tih += 1\n            else:\n                res[rst] = l[tem]\n                rst -= 1\n                tem -= 1\n        elif p[b] > l[a]:\n            res[tih] = p[b]\n            tih += 1\n            b -= 1\n        else:\n            res[rst] = p[bem]\n            rst -= 1\n            bem += 1\n    print(''.join(res))", "for _ in range(int(input())):\n    n = int(input())\n    A = sorted(input())\n    B = sorted(input())\n    ans = ['' for _ in range(2 * n)]\n    l = 0\n    r = 2 * n - 1\n    la = lb = 0\n    ra = rb = n - 1\n    for i in range(n):\n        if A[la] < B[rb]:\n            ans[l] = A[la]\n            l += 1\n            la += 1\n        else:\n            ans[r] = A[ra]\n            r -= 1\n            ra -= 1\n        if la < n and B[rb] > A[la]:\n            ans[l] = B[rb]\n            l += 1\n            rb -= 1\n        else:\n            ans[r] = B[lb]\n            r -= 1\n            lb += 1\n    print(''.join(ans))", "for _ in range(int(input())):\n    n = int(input())\n    (a, b) = (sorted(list(input())), sorted(list(input())))\n    c = [0] * (2 * n)\n    d = e = j = 0\n    f = g = n - 1\n    h = 2 * n - 1\n    for i in range(2 * n):\n        if g < e:\n            c[j] = a[d]\n            d += 1\n            j += 1\n        elif d > f:\n            c[j] = b[g]\n            g -= 1\n            j += 1\n        elif i % 2 == 0:\n            if a[d] < b[g]:\n                c[j] = a[d]\n                d += 1\n                j += 1\n            else:\n                c[h] = a[f]\n                f -= 1\n                h -= 1\n        elif i % 2 == 1:\n            if b[g] > a[d]:\n                c[j] = b[g]\n                j += 1\n                g -= 1\n            else:\n                c[h] = b[e]\n                h -= 1\n                e += 1\n    print(''.join(c))", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    alice = input()\n    bob = input()\n    A = list(sorted(alice))\n    B = list(sorted(bob)[::-1])\n    ans = [''] * 2 * a\n    l = 0\n    r = 2 * a - 1\n    while l < r:\n        if A[0] >= B[0]:\n            ans[r] = A.pop()\n            r -= 1\n        else:\n            ans[l] = A.pop(0)\n            l += 1\n        if A and B[0] <= A[0]:\n            ans[r] = B.pop()\n            r -= 1\n        else:\n            ans[l] = B.pop(0)\n            l += 1\n    print(''.join((i for i in ans)))", "for _ in range(int(input())):\n    n = int(input())\n    aa = input()\n    bb = input()\n    a = ''.join(sorted(aa))\n    b = ''.join(sorted(bb))\n    d = {}\n    (aStart, bEnd) = (0, 0)\n    (aEnd, bStart) = (n - 1, n - 1)\n    p1 = 0\n    p2 = 2 * n - 1\n    for i in range(2 * n):\n        if aStart > aEnd:\n            bStart -= 1\n            p1 += 1\n            d[p1 - 1] = b[bStart + 1]\n            continue\n        if bStart < bEnd:\n            p1 += 1\n            d[p1 - 1] = a[aStart]\n            aStart += 1\n            continue\n        if i % 2 == 0:\n            if a[aStart] < b[bStart]:\n                p1 += 1\n                aStart += 1\n                d[p1 - 1] = a[aStart - 1]\n            else:\n                aEnd -= 1\n                p2 -= 1\n                d[p2 + 1] = a[aEnd + 1]\n        elif b[bStart] > a[aStart]:\n            p1 += 1\n            bStart -= 1\n            d[p1 - 1] = b[bStart + 1]\n        else:\n            p2 -= 1\n            bEnd += 1\n            d[p2 + 1] = b[bEnd - 1]\n    for i in range(2 * n):\n        print(d[i], end='')\n    print()"]