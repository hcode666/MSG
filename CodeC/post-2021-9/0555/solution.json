["t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    A = [[0 for i in range(m)] for j in range(n)]\n    B = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        A[i] = list(map(int, input().split()))\n    for i in range(n):\n        B[i] = list(map(int, input().split()))\n    for i in range(n - 2, -1, -1):\n        for j in range(m):\n            A[i][j] += A[i + 1][j]\n    for i in range(1, n):\n        for j in range(m):\n            B[i][j] += B[i - 1][j]\n    dp = [[0 for i in range(m + 1)] for j in range(n + 1)]\n    for col in range(m - 1, -1, -1):\n        for row in range(n, -1, -1):\n            if col < m - 1:\n                dp[row][col] += dp[row][col + 1]\n            if row:\n                dp[row][col] += B[row - 1][col]\n            if row < n:\n                dp[row][col] += A[row][col]\n                dp[row][col] = max(dp[row][col], dp[row + 1][col])\n    print(dp[0][0])", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    A = [[0 for i in range(m)] for j in range(n)]\n    B = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        A[i] = list(map(int, input().split()))\n    for i in range(n):\n        B[i] = list(map(int, input().split()))\n    for i in range(n - 2, -1, -1):\n        for j in range(m):\n            A[i][j] += A[i + 1][j]\n    for i in range(1, n):\n        for j in range(m):\n            B[i][j] += B[i - 1][j]\n    dp = [[0 for i in range(m + 1)] for j in range(n + 1)]\n    for col in range(m - 1, -1, -1):\n        for row in range(n, -1, -1):\n            if col < m - 1:\n                dp[row][col] += dp[row][col + 1]\n            if row:\n                dp[row][col] += B[row - 1][col]\n            if row < n:\n                dp[row][col] += A[row][col]\n                dp[row][col] = max(dp[row][col], dp[row + 1][col])\n    print(dp[0][0])", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    A = [[0 for i in range(m)] for j in range(n)]\n    B = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        A[i] = list(map(int, input().split()))\n    for i in range(n):\n        B[i] = list(map(int, input().split()))\n    for i in range(n - 2, -1, -1):\n        for j in range(m):\n            A[i][j] += A[i + 1][j]\n    for i in range(1, n):\n        for j in range(m):\n            B[i][j] += B[i - 1][j]\n    dp = [[0 for i in range(m + 1)] for j in range(n + 1)]\n    for col in range(m - 1, -1, -1):\n        for row in range(n, -1, -1):\n            if col < m - 1:\n                dp[row][col] += dp[row][col + 1]\n            if row:\n                dp[row][col] += B[row - 1][col]\n            if row < n:\n                dp[row][col] += A[row][col]\n                dp[row][col] = max(dp[row][col], dp[row + 1][col])\n    print(dp[0][0])", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    A = [[0 for i in range(m)] for j in range(n)]\n    B = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        A[i] = list(map(int, input().split()))\n    for i in range(n):\n        B[i] = list(map(int, input().split()))\n    for i in range(n - 2, -1, -1):\n        for j in range(m):\n            A[i][j] += A[i + 1][j]\n    for i in range(1, n):\n        for j in range(m):\n            B[i][j] += B[i - 1][j]\n    dp = [[0 for i in range(m + 1)] for j in range(n + 1)]\n    for col in range(m - 1, -1, -1):\n        for row in range(n, -1, -1):\n            if col < m - 1:\n                dp[row][col] += dp[row][col + 1]\n            if row:\n                dp[row][col] += B[row - 1][col]\n            if row < n:\n                dp[row][col] += A[row][col]\n                dp[row][col] = max(dp[row][col], dp[row + 1][col])\n    print(dp[0][0])", "def integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\n\ndef pprint(matrix):\n    for i in range(len(matrix)):\n        print(*matrix[i])\nt = int(input())\nfor _ in range(t):\n    (n, m) = integer_list()\n    A = [integer_list() for i in range(n)]\n    B = [integer_list() for i in range(n)]\n    students = [[[0, 0] for _ in range(m)] for i in range(n)]\n    students[0][0][0] = B[0][0]\n    students[0][0][1] = A[0][0]\n    cumm_top = []\n    cumm_left = []\n    for i in range(n):\n        temp = []\n        s = 0\n        for j in range(m):\n            s += A[i][j]\n            temp.append(s)\n        cumm_left.append(temp)\n    for j in range(m):\n        temp = []\n        s = 0\n        for i in range(n):\n            s += B[i][j]\n            temp.append(s)\n        cumm_top.append(temp)\n    cumm_top = [list(i) for i in zip(*cumm_top)]\n    prev_top = 0\n    for i in range(1, m):\n        students[0][i][0] = max(students[0][i - 1]) + B[0][i]\n        students[0][i][1] = cumm_left[0][i]\n    prev_left = 0\n    for i in range(1, n):\n        students[i][0][0] = cumm_top[i][0]\n        students[i][0][1] = max(students[i - 1][0]) + A[i][0]\n    for i in range(1, n):\n        for j in range(1, m):\n            students[i][j][0] = cumm_top[i][j] + max(students[i][j - 1])\n            students[i][j][1] = cumm_left[i][j] + max(students[i - 1][j])\n    print(max(students[n - 1][m - 1]))", "def integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\n\ndef pprint(matrix):\n    for i in range(len(matrix)):\n        print(*matrix[i])\nt = int(input())\nfor _ in range(t):\n    (n, m) = integer_list()\n    A = [integer_list() for i in range(n)]\n    B = [integer_list() for i in range(n)]\n    students = [[[0, 0] for _ in range(m)] for i in range(n)]\n    students[0][0][0] = B[0][0]\n    students[0][0][1] = A[0][0]\n    cumm_top = []\n    cumm_left = []\n    for i in range(n):\n        temp = []\n        s = 0\n        for j in range(m):\n            s += A[i][j]\n            temp.append(s)\n        cumm_left.append(temp)\n    for j in range(m):\n        temp = []\n        s = 0\n        for i in range(n):\n            s += B[i][j]\n            temp.append(s)\n        cumm_top.append(temp)\n    cumm_top = [list(i) for i in zip(*cumm_top)]\n    prev_top = 0\n    for i in range(1, m):\n        students[0][i][0] = max(students[0][i - 1]) + B[0][i]\n        students[0][i][1] = cumm_left[0][i]\n    prev_left = 0\n    for i in range(1, n):\n        students[i][0][0] = cumm_top[i][0]\n        students[i][0][1] = max(students[i - 1][0]) + A[i][0]\n    for i in range(1, n):\n        for j in range(1, m):\n            students[i][j][0] = cumm_top[i][j] + max(students[i][j - 1])\n            students[i][j][1] = cumm_left[i][j] + max(students[i - 1][j])\n    print(max(students[n - 1][m - 1]))", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(x):\n        a.append(list(map(int, input().split())))\n    for _ in range(x):\n        b.append(list(map(int, input().split())))\n    for i in range(x):\n        (temp1, temp2) = (0, 0)\n        for j in range(y):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(y + 1)] for _ in range(x)]\n    for i in range(x):\n        for j in range(y + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == y:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    for i in range(n):\n        (temp1, temp2) = (0, 0)\n        for j in range(m):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(m + 1)] for _ in range(n)]\n    for i in range(n):\n        for j in range(m + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == m:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    for i in range(n):\n        (temp1, temp2) = (0, 0)\n        for j in range(m):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(m + 1)] for _ in range(n)]\n    for i in range(n):\n        for j in range(m + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == m:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    for i in range(n):\n        (temp1, temp2) = (0, 0)\n        for j in range(m):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(m + 1)] for _ in range(n)]\n    for i in range(n):\n        for j in range(m + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == m:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    for i in range(n):\n        (temp1, temp2) = (0, 0)\n        for j in range(m):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(m + 1)] for _ in range(n)]\n    for i in range(n):\n        for j in range(m + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == m:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    for i in range(n):\n        (temp1, temp2) = (0, 0)\n        for j in range(m):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(m + 1)] for _ in range(n)]\n    for i in range(n):\n        for j in range(m + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == m:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    for i in range(n):\n        (temp1, temp2) = (0, 0)\n        for j in range(m):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(m + 1)] for _ in range(n)]\n    for i in range(n):\n        for j in range(m + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == m:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    for i in range(n):\n        (temp1, temp2) = (0, 0)\n        for j in range(m):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(m + 1)] for _ in range(n)]\n    for i in range(n):\n        for j in range(m + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == m:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    for i in range(n):\n        (temp1, temp2) = (0, 0)\n        for j in range(m):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(m + 1)] for _ in range(n)]\n    for i in range(n):\n        for j in range(m + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == m:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    for i in range(n):\n        (temp1, temp2) = (0, 0)\n        for j in range(m):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(m + 1)] for _ in range(n)]\n    for i in range(n):\n        for j in range(m + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == m:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    for i in range(n):\n        (temp1, temp2) = (0, 0)\n        for j in range(m):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(m + 1)] for _ in range(n)]\n    for i in range(n):\n        for j in range(m + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == m:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    for i in range(n):\n        (temp1, temp2) = (0, 0)\n        for j in range(m):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(m + 1)] for _ in range(n)]\n    for i in range(n):\n        for j in range(m + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == m:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = ([], [])\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    for i in range(n):\n        (temp1, temp2) = (0, 0)\n        for j in range(m):\n            a[i][j] = a[i][j] + temp1\n            b[i][j] = b[i][j] + temp2\n            (temp1, temp2) = (a[i][j], b[i][j])\n    ans = [[0 for _ in range(m + 1)] for _ in range(n)]\n    for i in range(n):\n        for j in range(m + 1):\n            if j == 0:\n                ans[i][j] = b[i][-1]\n                if i != 0:\n                    ans[i][j] = ans[i][j] + ans[i - 1][j]\n            elif j == m:\n                if i == 0:\n                    ans[i][j] = max(a[i][-1], ans[i][j - 1])\n                else:\n                    ans[i][j] = max(a[i][-1] + ans[i - 1][j], ans[i][j - 1])\n            else:\n                ans[i][j] = max(ans[i - 1][j] + (b[i][-1] - b[i][j - 1]) + a[i][j - 1], ans[i][j - 1])\n    print(ans[-1][-1])", "import random\nimport math\nfrom collections import defaultdict, Counter\nfrom functools import lru_cache\nimport bisect\nimport heapq\n\nclass UnionFind:\n\n    def __init__(self, n):\n        self.n = n\n        self.parents = list(range(n))\n\n    def find(self, x):\n        if self.parents[x] == x:\n            return x\n        else:\n            self.parents[x] = self.find(self.parents[x])\n            return self.parents[x]\n\n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n        if x != y:\n            self.parents[x] = y\ndire = [0, 1, 0, -1, 0]\n\ndef is_prime(n):\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef google(t):\n    print('Case #{}:'.format(t), end=' ')\nRANDOM = random.randrange(2 ** 62)\n\ndef Wrapper(x):\n    return x ^ RANDOM\n\ndef solve():\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    b = []\n    for i in range(n):\n        b.append(list(map(int, input().split())))\n    dp = [[0 for i in range(m + 1)] for _ in range(n)]\n    for i in range(n - 1, -1, -1):\n        maxv = 0\n        su = 0\n        for j in range(m):\n            maxv += a[i][j]\n            su += a[i][j]\n        dp[i][-1] = maxv\n        if i < n - 1:\n            dp[i][-1] += dp[i + 1][-1]\n        for j in range(m - 1, -1, -1):\n            su -= a[i][j]\n            su += b[i][j]\n            aa = su + (dp[i + 1][j] if i < n - 1 else 0)\n            bb = dp[i][j + 1]\n            dp[i][j] = max(aa, bb)\n    print(dp[0][0])\nfor t in range(int(input())):\n    solve()", "import sys\nsys.setrecursionlimit(10 ** 7)\n\ndef f(i, j):\n    if i >= n:\n        return 0\n    if j > m:\n        return 0\n    if dp[i][j] != -1:\n        return dp[i][j]\n    case1 = pref[i][j] + suff[i][j] + f(i + 1, j)\n    case2 = f(i, j + 1)\n    dp[i][j] = max(case1, case2)\n    return dp[i][j]\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    b = []\n    for _ in range(n):\n        b.append(list(map(int, input().split())))\n    pref = [[0 for i in range(m)] for j in range(n)]\n    suff = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        pref[i][0] = a[i][0]\n        for j in range(1, m):\n            pref[i][j] = a[i][j] + pref[i][j - 1]\n        pref[i] = [0] + pref[i]\n    for i in range(n):\n        suff[i][m - 1] = b[i][m - 1]\n        for j in range(m - 2, -1, -1):\n            suff[i][j] = b[i][j] + suff[i][j + 1]\n        suff[i].append(0)\n    dp = [[-1 for _ in range(m + 1)] for _ in range(n)]\n    print(f(0, 0))"]