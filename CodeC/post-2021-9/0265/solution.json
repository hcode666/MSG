["for i in range(int(input())):\n    n = int(input())\n    p = input()\n    s = 0\n    l = []\n    for i in range(n):\n        if p[i] == '0':\n            if s > 0:\n                l.append(s)\n            s = 0\n        else:\n            s += 1\n    if s > 0:\n        l.append(s)\n    if l == []:\n        print(0)\n    elif len(l) == 1:\n        print(l[0])\n    elif p[0] == '0':\n        print(max(l))\n    else:\n        print(l[0] + max(l[1:]))", "for i in range(int(input())):\n    n = int(input())\n    p = input()\n    s = 0\n    l = []\n    for i in range(n):\n        if p[i] == '0':\n            if s > 0:\n                l.append(s)\n            s = 0\n        else:\n            s += 1\n    if s > 0:\n        l.append(s)\n    if l == []:\n        print(0)\n    elif len(l) == 1:\n        print(l[0])\n    elif p[0] == '0':\n        print(max(l))\n    else:\n        print(l[0] + max(l[1:]))", "for tc in range(int(input())):\n    n = input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if '0' not in s:\n        print(n)\n    elif s[0] == '1':\n        i = 0\n        while s[i] == '1':\n            i = i + 1\n        l = []\n        c = 0\n        s = s + '0'\n        for j in range(i, len(s)):\n            if s[j] == '1':\n                c = c + 1\n            else:\n                l.append(c)\n                c = 0\n        print(i + max(l))\n    else:\n        l = []\n        c = 0\n        s = s + '0'\n        for j in range(0, len(s)):\n            if s[j] == '1':\n                c = c + 1\n            else:\n                l.append(c)\n                c = 0\n        print(max(l))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    cnt = 0\n    one = []\n    for i in s:\n        if i == '1':\n            cnt += 1\n        elif i == '0':\n            if cnt != 0:\n                one.append(cnt)\n            cnt = 0\n    if cnt != 0:\n        one.append(cnt)\n    if len(one) == 0:\n        print(0)\n    elif s[0] == '0':\n        print(max(one))\n    else:\n        print(one[0] + max(one[1:]) if len(one) != 1 else one[0])", "for _ in range(int(input())):\n    input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "for _ in range(int(input())):\n    input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "for _ in range(int(input())):\n    input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "for _ in range(int(input())):\n    n = int(input())\n    arr = input()\n    fi = 0\n    i = 0\n    while i < n and arr[i] == '1':\n        fi += 1\n        i += 1\n    if fi == n:\n        print(fi)\n    else:\n        cnt = 0\n        s = 0\n        for k in range(i, n):\n            if arr[k] == '1':\n                s += 1\n                if s > cnt:\n                    cnt = s\n            else:\n                s = 0\n        cnt += fi\n        print(cnt)", "T = input()\nfor i in range(int(T)):\n    N = int(input())\n    a = input()\n    list0 = [i for i in a.split('0')]\n    list1 = list0[1:]\n    list1.sort()\n    if len(list0) == 1:\n        largest = len(list0[0])\n    else:\n        largest = len(list1[-1]) + len(list0[0])\n    print(largest)", "import os\nimport sys\nfrom io import BytesIO, IOBase\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = 'x' in file.mode or 'r' not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            (self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr))\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b'\\n') + (not b)\n            ptr = self.buffer.tell()\n            (self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr))\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            (self.buffer.truncate(0), self.buffer.seek(0))\n\nclass IOWrapper(IOBase):\n\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode('ascii'))\n        self.read = lambda : self.buffer.read().decode('ascii')\n        self.readline = lambda : self.buffer.readline().decode('ascii')\n\ndef ans():\n    pora = int(input())\n    string = input()\n    lavadaval = 0\n    supermova = 0\n    if string == '1' * pora:\n        print(pora)\n        return\n    elif string[0] == '0':\n        for i in range(pora):\n            if string[i] == '0':\n                lavadaval = max(lavadaval, supermova)\n                supermova = 0\n            else:\n                supermova += 1\n        lavadaval = max(lavadaval, supermova)\n        print(lavadaval)\n        return\n    else:\n        puku = 0\n        jai = 0\n        for i in range(pora):\n            if string[i] == '1':\n                puku += 1\n            else:\n                jai = i\n                break\n        for i in range(jai, pora):\n            if string[i] == '0':\n                lavadaval = max(lavadaval, supermova)\n                supermova = 0\n            else:\n                supermova += 1\n        lavadaval = max(lavadaval, supermova)\n        lavadaval += puku\n        print(lavadaval)\n        return\nfor _ in range(int(input())):\n    ans()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    idx = 0\n    while idx < n and s[idx] == '1':\n        idx += 1\n    if idx == n:\n        print(n)\n    elif idx == 0:\n        ans = 0\n        curr = 0\n        for i in range(len(s)):\n            if s[i] == '1':\n                curr += 1\n            else:\n                ans = max(ans, curr)\n                curr = 0\n        ans = max(ans, curr)\n        print(ans)\n    else:\n        ans = 0\n        curr = 0\n        for i in range(idx, len(s)):\n            if s[i] == '1':\n                curr += 1\n            else:\n                ans = max(ans, curr)\n                curr = 0\n        ans = max(ans, curr)\n        print(ans + idx)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    c = 0\n    s2 = 0\n    s1 = 0\n    f = 0\n    for i in s:\n        if i == '1':\n            c += 1\n        else:\n            if f == 0:\n                f = 1\n                s1 = c\n            else:\n                s2 = max(c, s2)\n            c = 0\n    s2 = max(c, s2)\n    if s[0] == '0':\n        print(max(s1, s2))\n    else:\n        print(s1 + s2)", "for _ in range(int(input())):\n    n = input()\n    s = input()\n    try:\n        index = s.index('0')\n        s = s[index:]\n        print(max((len(i) for i in s.split('0'))) + index)\n    except:\n        print(n)", "for _ in range(int(input())):\n    t = int(input())\n    str1 = input()\n    if str1.count('1') == 0:\n        print(0)\n    else:\n        str1 = str1.split('0')\n        if len(str1) == 1:\n            print(len(str1[0]))\n        elif str1[0] == '0':\n            print(max([len(x) for x in str1]))\n        else:\n            print(max([len(str1[0]) + max([len(x) for x in str1[1:]]), max([len(x) for x in str1])]))", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input()).strip()\n    s = s.lstrip('1')\n    print(n - len(s) + max((len(sp) for sp in s.split('0'))))", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input()).strip()\n    s = s.lstrip('1')\n    print(n - len(s) + max((len(sp) for sp in s.split('0'))))", "for _ in range(int(input())):\n    _ = input()\n    s = input() + '0'\n    n = len(s)\n    cnts = []\n    (cnt, max_cnt) = (0, 0)\n    for i in range(n):\n        if s[i] == '1':\n            cnt += 1\n        elif cnt > 0:\n            cnts.append(cnt)\n            max_cnt = max(cnt, max_cnt)\n            cnt = 0\n    if s[0] == '0' or len(cnts) == 1:\n        print(max_cnt)\n    else:\n        print(cnts[0] + max(cnts[1:]))", "for _ in range(int(input())):\n    input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "def largest_sub(s):\n    maxi = 0\n    count = 0\n    for i in s:\n        if i == '0':\n            count = 0\n            continue\n        count += 1\n        if count > maxi:\n            maxi = count\n    return maxi\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if s[0] == '0':\n        print(largest_sub(s))\n    elif s.count('0') == 0:\n        print(n)\n    else:\n        t = 0\n        for i in s:\n            if i == '0':\n                break\n            t += 1\n        x = s.lstrip('1')\n        print(largest_sub(x) + t)", "def solve():\n    n = int(input())\n    s = input()\n    one = 0\n    pre = 0\n    mx = 0\n    j = 0\n    while j < n and s[j] == '1':\n        j += 1\n        pre += 1\n    for i in range(j, n):\n        if s[i] == '1':\n            one += 1\n        else:\n            mx = max(mx, one)\n            one = 0\n    mx = max(mx, one)\n    print(mx + pre)\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    s = a.split('0')\n    f = []\n    ma = 0\n    for i in s:\n        if i == '':\n            continue\n        else:\n            f.append(len(i))\n            ma = max(ma, len(i))\n    if a[0] == '0':\n        print(ma)\n    elif len(f) > 1:\n        print(max(ma, f[0] + max(f[1:])))\n    else:\n        print(ma)", "for _ in range(int(input())):\n    n = int(input())\n    str1 = input()\n    if str1.count('1') == 0:\n        print(0)\n    else:\n        str1 = str1.split('0')\n        if len(str1) == 1:\n            print(len(str1[0]))\n        elif str1[0] == '0':\n            print(max([len(x) for x in str1]))\n        else:\n            print(max([len(str1[0]) + max([len(x) for x in str1[1:]]), max([len(x) for x in str1])]))", "from functools import reduce\nimport math\n\ndef vout(v):\n    return ' '.join(map(str, v))\n\ndef main(is_testCases=True):\n    testCases = 1\n    if is_testCases:\n        testCases = int(input())\n    for _ in range(testCases):\n        n = int(input())\n        s = input()\n        index = s.find('0')\n        if index == -1:\n            print(n)\n        else:\n            answer = 0\n            current = 0\n            for i in range(index + 1, len(s)):\n                if s[i] == '1':\n                    current += 1\n                    answer = max(answer, current)\n                else:\n                    current = 0\n            print(answer + index)\nmain()", "def solve():\n    n = int(input())\n    s = input()\n    one = 0\n    pre = 0\n    mx = 0\n    j = 0\n    while j < n and s[j] == '1':\n        j += 1\n        pre += 1\n    for i in range(j, n):\n        if s[i] == '1':\n            one += 1\n        else:\n            mx = max(mx, one)\n            one = 0\n    mx = max(mx, one)\n    print(mx + pre)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    l = s.split('0')\n    if int(s) == 0:\n        print(0)\n    elif l[0] == '':\n        print(len(max(l)))\n    elif len(l) == 1:\n        print(len(l[0]))\n    elif len(l[0]) != len(max(l)):\n        print(len(l[0]) + len(max(l)))\n    elif len(max(l)) == len(l[0]):\n        x = len(l[0])\n        l.remove(l[0])\n        print(x + len(max(l)))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    series = 0\n    if s[0] == '1':\n        k = 0\n        while k < n and s[k] == '1':\n            ans = ans + 1\n            k = k + 1\n        ts = 0\n        for i in range(k, n):\n            if s[i] == '0':\n                if ts > series:\n                    series = ts\n                ts = 0\n            else:\n                ts = ts + 1\n        if ts > series:\n            series = ts\n    else:\n        ts = 0\n        for j in s:\n            if j == '0':\n                if ts > series:\n                    series = ts\n                ts = 0\n            else:\n                ts = ts + 1\n            if ts > series:\n                series = ts\n    ans = ans + series\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    maxi = 0\n    first = 0\n    if s[0] == '0':\n        i = 1\n        c = 0\n        while i < n:\n            if s[i] == '1':\n                c += 1\n            else:\n                maxi = max(maxi, c)\n                c = 0\n            i += 1\n        maxi = max(maxi, c)\n    else:\n        i = 0\n        while i < n and s[i] == '1':\n            first += 1\n            i += 1\n        c = 0\n        maxi = 0\n        while i < n:\n            if s[i] == '1':\n                c += 1\n            else:\n                maxi = max(maxi, c)\n                c = 0\n            i += 1\n        maxi = max(maxi, c)\n    print(first + maxi)", "for _ in range(int(input())):\n    input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n    else:\n        print(max((len(u) for u in s[i:].split('0'))) + i)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    zero = s.find('0')\n    if zero == -1:\n        print(len(s))\n        continue\n    t = s[zero:]\n    print(max((len(u) for u in t.split('0'))) + zero)", "for _ in range(int(input())):\n    input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "for _ in range(int(input())):\n    input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "for _ in range(int(input())):\n    input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = []\n    c = 0\n    for i in range(n):\n        if s[i] == '1':\n            c += 1\n        else:\n            l.append(c)\n            c = 0\n    l.append(c)\n    maxPrefix = l[0]\n    m = 0\n    for i in range(1, len(l)):\n        if l[i] > m:\n            m = l[i]\n    print(maxPrefix + m)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(n)\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "for _ in range(int(input())):\n    n = input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n    else:\n        print(max((len(u) for u in s[i:].split('0'))) + i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(str, input().split('0')))\n    m = 0\n    ex = 0\n    if len(a[0]) > 0:\n        ex = len(a[0])\n        a.remove(a[0])\n    for i in range(len(a)):\n        if len(a[i]) > m:\n            m = len(a[i])\n    print(m + ex)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    if s[0] == '0':\n        end = 1\n        while end < n:\n            counter = 0\n            if s[end] == '1':\n                while end < n and s[end] == '1':\n                    counter += 1\n                    end += 1\n            ans = max(ans, counter)\n            end += 1\n        print(ans)\n    elif s[0] == '1':\n        pre = 0\n        end = 0\n        while end < n and s[end] == '1':\n            pre += 1\n            end += 1\n        while end < n:\n            counter = 0\n            if s[end] == '1':\n                while end < n and s[end] == '1':\n                    counter += 1\n                    end += 1\n            ans = max(ans, counter)\n            end += 1\n        print(ans + pre)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    l = int(input())\n    s = input()\n    m1 = 0\n    f = 0\n    i = 0\n    m3 = 0\n    while i < l:\n        f = 0\n        c = 0\n        while i < l and s[i] != '0':\n            if i == 0:\n                f = 1\n            c += 1\n            i += 1\n        if f == 1:\n            m3 = c\n        elif c > m1:\n            m1 = c\n        i += 1\n    if m3 > 0:\n        print(m3 + m1)\n    else:\n        print(m1)", "def helper(arr):\n    k = 1\n    ans = 0\n    left = -1\n    h = []\n    arr = str(arr)\n    lst = [0 for i in range(len(arr))]\n    big = float('-inf')\n    if '0' not in arr:\n        return len(arr)\n    for i in range(len(arr) - 1, -1, -1):\n        if arr[i] == '1' and (i + 1 >= len(arr) or arr[i + 1] == '0'):\n            lst[i] = 1\n        elif arr[i] == '1' and (i + 1 < len(arr) and arr[i + 1] == '1'):\n            lst[i] = lst[i + 1] + 1\n        big = max(big, lst[i])\n    if arr[0] == '0':\n        return big\n    else:\n        for i in range(len(arr)):\n            if arr[i] == '0':\n                return lst[0] + max(lst[i:])\nfor i in range(int(input())):\n    n = int(input())\n    print(helper(str(input())))", "AmXz = 0\nfor loop in range(int(input())):\n    PnNp = int(input())\n    l = list(input())\n    DeL = 0\n    cnt = 0\n    DelloiTTe = 0\n    for i in range(PnNp):\n        if l[i] == '1':\n            DelloiTTe += 1\n        else:\n            break\n    for i in range(DelloiTTe, PnNp):\n        if l[i] == '1':\n            cnt += 1\n        else:\n            cnt = 0\n        DeL = max(cnt, DeL)\n    print(DeL + DelloiTTe)", "for loop in range(int(input())):\n    n = int(input())\n    l = list(input())\n    ans = 0\n    cnt = 0\n    preOnes = 0\n    for i in range(n):\n        if l[i] == '1':\n            preOnes += 1\n        else:\n            break\n    for i in range(preOnes, n):\n        if l[i] == '1':\n            cnt += 1\n        else:\n            cnt = 0\n        ans = max(cnt, ans)\n    print(ans + preOnes)", "from math import sqrt, ceil, floor, gcd, log2\nimport sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import combinations, groupby\nfrom time import time\nfrom heapq import heappop, heappush, heapify\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    best = 0\n    for (key, val) in groupby(s):\n        l = len(list(val))\n        if key == '1':\n            best = max(best, l)\n    if s[0] == '0':\n        print(best)\n    else:\n        first = 0\n        cnt = 0\n        for i in range(n):\n            if s[i] == '1':\n                cnt += 1\n            elif first == 0:\n                first = cnt\n                cnt = 0\n            elif cnt != 0:\n                best = max(best, first + cnt)\n                cnt = 0\n        if cnt != 0:\n            best = max(best, first + cnt)\n        print(best)", "for testcase in range(int(input())):\n    n = int(input())\n    s = input()\n    count = 0\n    pre = 0\n    z = 0\n    for i in range(n):\n        if s[i] == '1':\n            pre += 1\n        else:\n            z = i\n            break\n    t = 0\n    for i in range(i + 1, n):\n        if s[i] == '1':\n            count += 1\n        else:\n            t = max(count, t)\n            count = 0\n    t = max(t, count)\n    print(t + pre)", "for testcase in range(int(input())):\n    n = int(input())\n    s = input()\n    count = 0\n    pre = 0\n    z = 0\n    for i in range(n):\n        if s[i] == '1':\n            pre += 1\n        else:\n            z = i\n            break\n    t = 0\n    for i in range(i + 1, n):\n        if s[i] == '1':\n            count += 1\n        else:\n            t = max(count, t)\n            count = 0\n    t = max(t, count)\n    print(t + pre)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, s) = (IN(), IS())\n    i = 0\n    while i < n and s[i] != '0':\n        i += 1\n    (r, c) = (0, 0)\n    for x in range(i + 1, n):\n        if s[x] == '1':\n            c += 1\n        else:\n            r = max(r, c)\n            c = 0\n    r = max(r, c)\n    return i + r\nfor _ in range(IN()):\n    print(f())", "testcases = int(input())\nfor eachcase in range(testcases):\n    length = int(input())\n    string = input()\n    if string[0] == '0':\n        count = 0\n        maxlen = 0\n        for nums in range(1, length):\n            if string[nums] == '1':\n                count += 1\n            else:\n                maxlen = max(maxlen, count)\n                count = 0\n        maxlen = max(maxlen, count)\n    else:\n        count1 = count2 = 0\n        maxlen = 0\n        nums = 0\n        while nums < length:\n            if string[nums] == '0':\n                break\n            count1 += 1\n            nums += 1\n        while nums < length:\n            if string[nums] == '1':\n                count2 += 1\n            else:\n                maxlen = max(maxlen, count2)\n                count2 = 0\n            nums += 1\n        maxlen = max(maxlen, count2)\n        maxlen += count1\n    print(maxlen)", "t = input()\nfor c in range(0, int(t)):\n    n = input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "for _ in range(int(input())):\n    input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "testcases = int(input())\nfor eachcase in range(testcases):\n    length = int(input())\n    string = input()\n    if string[0] == '0':\n        count = 0\n        maxlen = 0\n        for nums in range(1, length):\n            if string[nums] == '1':\n                count += 1\n            else:\n                maxlen = max(maxlen, count)\n                count = 0\n        maxlen = max(maxlen, count)\n    else:\n        count1 = count2 = 0\n        maxlen = 0\n        nums = 0\n        while nums < length:\n            if string[nums] == '0':\n                break\n            count1 += 1\n            nums += 1\n        while nums < length:\n            if string[nums] == '1':\n                count2 += 1\n            else:\n                maxlen = max(maxlen, count2)\n                count2 = 0\n            nums += 1\n        maxlen = max(maxlen, count2)\n        maxlen += count1\n    print(maxlen)", "t = int(input())\nfor t in range(0, t):\n    n = int(input())\n    s = input()\n    s = s + '0'\n    l = []\n    z = 0\n    x = 0\n    for i in range(0, n + 1):\n        if s[i] == '1':\n            z = 1\n            x += 1\n        else:\n            if z:\n                l.append(x)\n            x = 0\n            z = 0\n    if len(l) == 0:\n        print(0)\n    elif len(l) == 1:\n        print(l[0])\n    elif s[0] == '0':\n        mx = max(l)\n        print(mx)\n    else:\n        f = l[0]\n        l.pop(0)\n        mx = max(l)\n        print(f + mx)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, s) = (IN(), IS())\n    i = 0\n    while i < n and s[i] != '0':\n        i += 1\n    (r, c) = (0, 0)\n    for x in range(i + 1, n):\n        if s[x] == '1':\n            c += 1\n        else:\n            r = max(r, c)\n            c = 0\n    r = max(r, c)\n    return i + r\nfor _ in range(IN()):\n    print(f())", "for _ in range(int(input())):\n    n = int(input())\n    a = [*input()]\n    k = [-1]\n    for i in range(n):\n        if a[i] == '0':\n            k.append(i)\n    if a[-1] == '1':\n        k.append(n)\n    maxi = 0\n    for i in range(1, len(k) - 1):\n        if k[i + 1] - k[i] - 1 > maxi:\n            maxi = k[i + 1] - k[i] - 1\n    if a[0] == '0':\n        if k[1] - k[0] - 1 > maxi:\n            print(k[1] - k[0] - 1)\n        else:\n            print(maxi)\n    else:\n        print(k[1] - k[0] - 1 + maxi)", "for _ in range(int(input())):\n    n = int(input())\n    a = [*input()]\n    flag = True\n    count1 = []\n    count = 0\n    for i in a:\n        if i == '1':\n            count += 1\n            flag = True\n        elif flag == True:\n            count1.append(count)\n            flag = False\n            count = 0\n        else:\n            continue\n    if count != 0:\n        count1.append(count)\n    if a[0] == '0':\n        print(max(count1))\n    elif len(count1) <= 1:\n        if len(count1) == 0:\n            print(n)\n        else:\n            print(count1[0])\n    else:\n        print(count1[0] + sorted(count1[1:])[-1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    z = s.find('0')\n    if z == -1:\n        print(n)\n        continue\n    v = s[z:]\n    print(max((len(x) for x in v.split('0'))) + z)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    firstones = 0\n    for j in range(n):\n        if s[j] == '0':\n            break\n        firstones += 1\n    (ans, flag, temp) = (0, 0, 0)\n    for i in range(j + 1, n):\n        if s[i] == '1' and flag == 0:\n            flag = 1\n            temp = 0\n        if s[i] == '0' and flag == 1:\n            ans = max(ans, firstones + temp)\n            temp = 0\n            flag = 0\n        if flag == 1:\n            temp += 1\n    print(max(ans, firstones + temp))", "for T in range(int(input())):\n    n = int(input())\n    s = input()\n    suff = [0] * n\n    if s[-1] == '1':\n        suff[-1] = 1\n    for i in range(n - 2, -1, -1):\n        if s[i] == '1':\n            suff[i] = suff[i + 1] + 1\n    if s[0] == '0':\n        print(max(suff))\n    else:\n        c = 0\n        for i in range(n):\n            if s[i] == '1':\n                c += 1\n            else:\n                break\n        ans = c\n        for i in range(c, n):\n            ans = max(ans, c + suff[i])\n        print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    x = s.find('0')\n    if x == -1:\n        print(len(s))\n        continue\n    t = s[x:]\n    print(max((len(u) for u in t.split('0'))) + x)", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    k = 0\n    while k < n and s[k] != '0':\n        k += 1\n    ms = 0\n    c = 0\n    for i in range(k + 1, n):\n        if s[i] == '1':\n            c += 1\n        else:\n            ms = max(ms, c)\n            c = 0\n    ms = max(ms, c)\n    print(ms + k)\n    t -= 1", "for _ in range(int(input())):\n    input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i + 1:]\n    print(max((len(u) for u in t.split('0'))) + i)", "for i in range(int(input())):\n    n = int(input())\n    l = list(input().split('0'))\n    l1 = []\n    if l[0] == '':\n        print(max(l).count('1'))\n    else:\n        for i in l:\n            if i != '':\n                l1.append(i)\n        if len(l1) == 0:\n            print('0')\n        elif len(l1) == 1:\n            print(len(l[0]))\n        else:\n            p = l1[0]\n            l1.remove(l1[0])\n            print(max(l1).count('1') + p.count('1'))", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    s = input()\n    if s == '00':\n        print('0')\n    elif s[0] == '1':\n        temp = 0\n        count = 0\n        ls = []\n        for i in s:\n            if i == '1':\n                count = count + 1\n            elif i == '0':\n                temp = count\n                ls.append(temp)\n                count = 0\n        ls.append(count)\n        if ls[0] == len(s):\n            print(len(s))\n        else:\n            print(ls[0] + max(ls[1:]))\n    elif s[0] == '0':\n        temp = 0\n        count = 0\n        ls2 = []\n        for i in s:\n            if i == '1':\n                count = count + 1\n            elif i == '0':\n                temp = count\n                ls2.append(temp)\n                count = 0\n        ls2.append(count)\n        if ls2[0] == len(s):\n            print(len(ls2))\n        else:\n            print(max(ls2[1:]))\n    t = t - 1", "from collections import Counter\nfrom math import log2\n\ndef inparr():\n    tmparr = [int(i) for i in input().split()]\n    return tmparr\nfor _ in range(int(input())):\n    N = int(input())\n    S = input()\n    if S == '1' * N:\n        print(N)\n        continue\n    if S == '0' * N:\n        print(0)\n        continue\n    ar1 = []\n    tmp = 0\n    for i in range(N):\n        if S[i] == '1':\n            tmp += 1\n        else:\n            ar1.append(tmp)\n            tmp = 0\n    ar1.append(tmp)\n    res = ar1[0] + max(ar1[1:])\n    print(res)", "for i in range(int(input())):\n    n = input()\n    a = input().split('0')\n    s = 0\n    if a[0]:\n        s = len(a[0])\n    if len(a) > 1:\n        s += max(map(len, a[1:]))\n    print(s)", "t = int(input())\nfor _ in range(t):\n    l = []\n    n = int(input())\n    s = input()\n    if s[0] == '0':\n        ans = 0\n        i = 0\n        while i < n:\n            c = 0\n            while i < n and s[i] == '1':\n                c += 1\n                i += 1\n            ans = max(ans, c)\n            i += 1\n        print(ans)\n    else:\n        ans = 0\n        i = 0\n        p = 0\n        while i < n:\n            c = 0\n            while i < n and s[i] == '1':\n                c += 1\n                i += 1\n            if p == 0:\n                p = c\n            else:\n                ans = max(ans, c)\n            i += 1\n        print(p + ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    L = 0\n    while L < n and s[L] == '1':\n        L += 1\n    R = L + 1\n    mx = cur = 0\n    while R < n:\n        if s[R] == '0':\n            mx = max(mx, cur)\n            cur = 0\n        else:\n            cur += 1\n        R += 1\n    mx = max(mx, cur)\n    print(mx + L)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    L = 0\n    while L < n and s[L] == '1':\n        L += 1\n    R = L + 1\n    mx = cur = 0\n    while R < n:\n        if s[R] == '0':\n            mx = max(mx, cur)\n            cur = 0\n        else:\n            cur += 1\n        R += 1\n    mx = max(mx, cur)\n    print(mx + L)", "for _ in range(int(input())):\n    input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    suf = [0] * n\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            suf[i] = 1 + (suf[i + 1] if i + 1 < n else 0)\n    ans = suf[0]\n    first = -1\n    for i in range(n):\n        if s[i] == '0':\n            first = 1\n        if first != -1:\n            ans = max(ans, (suf[i + 1] if i + 1 < n else 0) + suf[0])\n    print(ans)", "T = input()\nfor i in range(int(T)):\n    N = int(input())\n    a = input()\n    list0 = [i for i in a.split('0')]\n    list1 = list0[1:]\n    list1.sort()\n    if len(list0) == 1:\n        largest = len(list0[0])\n    else:\n        largest = len(list1[-1]) + len(list0[0])\n    print(largest)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input()))\n    ind = 0\n    while ind < n and l[ind]:\n        ind += 1\n    if ind == n:\n        print(n)\n    elif ind == 0:\n        maxx = 0\n        count = 0\n        for j in range(1, n):\n            if l[j]:\n                count += 1\n            else:\n                if maxx < count:\n                    maxx = count\n                count = 0\n        print(max(maxx, count))\n    else:\n        maxx = 0\n        count = 0\n        for j in range(ind + 1, n):\n            if l[j]:\n                count += 1\n            else:\n                if maxx < count:\n                    maxx = count\n                count = 0\n        print(ind + max(maxx, count))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    L = 0\n    while L < n and s[L] == '1':\n        L += 1\n    R = L + 1\n    mx = cur = 0\n    while R < n:\n        if s[R] == '0':\n            mx = max(mx, cur)\n            cur = 0\n        else:\n            cur += 1\n        R += 1\n    mx = max(mx, cur)\n    print(mx + L)", "def m(str):\n    (mx, lg) = (0, 0)\n    for i in range(len(str)):\n        if str[i] == '1':\n            lg += 1\n            if mx < lg:\n                mx = lg\n        if str[i] == '0':\n            lg = 0\n    return mx\nfor i in range(int(input())):\n    l = int(input())\n    s = input()\n    if s[0] == '0':\n        print(m(s))\n    else:\n        (l1, z) = (0, 0)\n        while s[z] == '1':\n            l1 += 1\n            z += 1\n            if z == l - 1:\n                break\n        l2 = 0\n        if l2 != '':\n            l2 = m(s[z:])\n        print(l1 + l2)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    a = list(map(int, input()))\n    c = d = 0\n    for i in a:\n        if i == 1:\n            c += 1\n        else:\n            l.append(c)\n            c = 0\n    l.append(c)\n    if a[0] == 0:\n        print(max(l))\n    else:\n        for i in a:\n            if i == 1:\n                d += 1\n            else:\n                break\n        l.remove(l[0])\n        if len(l) >= 1:\n            print(d + max(l))\n        else:\n            print(d)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    z = input()\n    i = z.find('0')\n    if i == -1:\n        print(len(z))\n        continue\n    t = z[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "def mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return str(input())\n\ndef lsi():\n    return si().strip().split(' ')\n\ndef ni():\n    return int(input())\nfor _ in range(ni()):\n    n = ni()\n    s = si()\n    L = 0\n    while L < n and s[L] == '1':\n        L += 1\n    R = L + 1\n    mx = cur = 0\n    while R < n:\n        if s[R] == '0':\n            mx = max(mx, cur)\n            cur = 0\n        else:\n            cur += 1\n        R += 1\n    mx = max(mx, cur)\n    print(mx + L)", "def longestPrefOnes(n, s):\n    L = 0\n    while L < n and s[L] == '1':\n        L += 1\n    R = L + 1\n    mx = cur = 0\n    while R < n:\n        if s[R] == '0':\n            mx = max(mx, cur)\n            cur = 0\n        else:\n            cur += 1\n        R += 1\n    mx = max(mx, cur)\n    return mx + L\nt = int(input())\nassert 1 <= t <= 1000\nfor _ in range(t):\n    n = int(input())\n    assert 2 <= n <= 2 * 10 ** 5\n    s = input()\n    print(longestPrefOnes(n, s))", "for _ in range(int(input())):\n    input()\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        print(len(s))\n        continue\n    t = s[i:]\n    print(max((len(u) for u in t.split('0'))) + i)", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    spans = []\n    count = 0\n    for i in range(n):\n        if s[i] == '1':\n            count += 1\n        elif count != 0:\n            spans.append(count)\n            count = 0\n        if i == n - 1:\n            if count:\n                spans.append(count)\n    if len(spans) == 0:\n        print('0')\n        t -= 1\n        continue\n    if s[0] == '1':\n        if len(spans) > 1:\n            print(spans[0] + max(spans[1:]))\n        else:\n            print(spans[0])\n    else:\n        print(max(spans))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    temp = 0\n    maxi = 0\n    dum = ''\n    count = 0\n    val = 0\n    if a[0] == '0':\n        for i in a:\n            if i == '1':\n                temp += 1\n            else:\n                temp = 0\n            maxi = max(maxi, temp)\n    else:\n        for i in a:\n            if i == '1':\n                temp += 1\n            else:\n                if count == 0:\n                    val = temp\n                    count += 1\n                temp = 0\n            if count == 1:\n                maxi = max(maxi, temp)\n        if count == 0:\n            maxi = temp\n        else:\n            maxi = maxi + val\n    print(maxi)", "def findMaxString(n, s, i):\n    maxS = idx = 0\n    while i < n:\n        if s[i] == '1':\n            tempC = 0\n            tempIdx = i\n            while i < n and s[i] == '1':\n                i += 1\n            if maxS <= i - tempIdx:\n                idx = tempIdx\n                maxS = i - tempIdx\n        else:\n            i += 1\n    return (maxS, idx)\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    (maxS, idx) = findMaxString(n, s, 0)\n    if s[0] == '0':\n        print(maxS)\n    elif idx == 0:\n        i = tempIdx = count = 0\n        while i < n and s[i] != '0':\n            i += 1\n        (count, idx) = findMaxString(n, s, i)\n        print(maxS + count)\n    else:\n        i = count = 0\n        while i < n and s[i] == '1':\n            i += 1\n            count += 1\n        print(maxS + count)", "for s in [*open(0)][2::2]:\n    s = s[:-1] + '0'\n    l = [*map(len, s.split('0'))]\n    print(max(l[1:]) + l[0])", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    m = 0\n    z = 0\n    p = 0\n    for i in range(n):\n        if s[i] == '1':\n            c = c + 1\n        elif s[i] == '0':\n            m = i\n            break\n    for i in range(i + 1, n):\n        if s[i] == '1':\n            z = z + 1\n        else:\n            p = max(p, z)\n            z = 0\n    p = max(z, p)\n    print(c + p)", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = 0\n    i = 0\n    while i < n and s[i] == '1':\n        ones += 1\n        i += 1\n    i += 1\n    maxi = -1\n    count = 0\n    while i < n:\n        if s[i] == '1':\n            count += 1\n        else:\n            maxi = max(count, maxi)\n            count = 0\n        i += 1\n    maxi = max(count, maxi)\n    print(ones + maxi)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    c = []\n    count = 0\n    i = 0\n    while i < n:\n        if s[i] == '0':\n            while i < n and s[i] == '0':\n                count -= 1\n                i += 1\n            c.append(count)\n            count = 0\n        if i < n:\n            if s[i] == '1':\n                while i < n and s[i] == '1':\n                    count += 1\n                    i += 1\n            c.append(count)\n            count = 0\n    if len(c) == 1:\n        print(max(0, c[0]))\n    elif c[0] < 0:\n        print(max(c))\n    else:\n        m = max(c[1:])\n        if m > 0:\n            print(c[0] + m)\n        else:\n            print(c[0])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    str1 = input()\n    mainList = list(str1)\n    counts1 = []\n    if mainList[0] == '0':\n        counter = 0\n        flag = 0\n        for i in range(1, n):\n            if mainList[i] == '1':\n                flag = 1\n                counter += 1\n            elif flag == 1:\n                flag = 0\n                counts1.append(counter)\n                counter = 0\n        counts1.append(counter)\n        counts1.sort()\n        print(counts1[-1])\n    else:\n        counter = 0\n        flag = 0\n        initial1count = 0\n        firstzero = 0\n        for i in range(n):\n            if mainList[i] == '1':\n                counter += 1\n            else:\n                initial1count = counter\n                firstzero = i\n                counter = 0\n                break\n        for j in range(firstzero, n):\n            if mainList[j] == '1':\n                flag = 1\n                counter += 1\n            elif flag == 1:\n                flag = 0\n                counts1.append(counter)\n                counter = 0\n        counts1.append(counter)\n        counts1.sort()\n        if firstzero == 0:\n            print(n)\n        else:\n            print(counts1[-1] + initial1count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = str(input())\n    l1 = []\n    cnt = 0\n    for j in range(n):\n        if s[j] == '0':\n            l1.append(cnt)\n            cnt = 0\n        elif s[j] == '1':\n            cnt += 1\n    l1.append(cnt)\n    if s[0] == '0':\n        print(max(l1))\n    else:\n        a = l1[0]\n        l1.pop(0)\n        if len(l1) > 0:\n            print(a + max(l1))\n        else:\n            print(a)", "def longestPrefOnes(n, s):\n    conc_ones = []\n    curr = 0\n    for i in range(n):\n        if s[i] == '1':\n            curr += 1\n        else:\n            if curr:\n                conc_ones.append(curr)\n            curr = 0\n    if curr > 0:\n        conc_ones.append(curr)\n    if not conc_ones:\n        return 0\n    if s[0] == '0':\n        return max(conc_ones)\n    elif len(conc_ones) <= 2:\n        return sum(conc_ones)\n    else:\n        return conc_ones[0] + max(conc_ones[1:])\nt = int(input())\nassert 1 <= t <= 1000\nfor _ in range(t):\n    n = int(input())\n    assert 2 <= n <= 2 * 10 ** 5\n    s = input()\n    print(longestPrefOnes(n, s))", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = 0\n    i = 0\n    while i < n and s[i] == '1':\n        ones += 1\n        i += 1\n    i += 1\n    maxi = -1\n    count = 0\n    while i < n:\n        if s[i] == '1':\n            count += 1\n        else:\n            maxi = max(count, maxi)\n            count = 0\n        i += 1\n    maxi = max(count, maxi)\n    print(ones + maxi)", "T = input()\nfor i in range(int(T)):\n    N = int(input())\n    a = input()\n    list0 = [i for i in a.split('0')]\n    list1 = list0[1:]\n    list1.sort()\n    if len(list0) == 1:\n        largest = len(list0[0])\n    else:\n        largest = len(list1[-1]) + len(list0[0])\n    print(largest)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    pref = 0\n    ct = 0\n    while ct < n and s[ct] == '1':\n        ct += 1\n        pref += 1\n    maxi = 0\n    while ct < n:\n        count = 0\n        while ct < n and s[ct] == '1':\n            count += 1\n            ct += 1\n        if count > maxi:\n            maxi = count\n        ct += 1\n    print(maxi + pref)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    startingones = 0\n    for i in range(n):\n        if s[i] == '1':\n            startingones += 1\n        else:\n            break\n    count = 0\n    maxx = 0\n    for i in range(startingones, n):\n        if s[i] == '1':\n            count += 1\n        else:\n            maxx = max(maxx, count)\n            count = 0\n    maxx = max(maxx, count)\n    print(startingones + maxx)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    j = 0\n    cnt = 0\n    while j < n and s[j] != '0':\n        cnt += 1\n        j += 1\n    c = 0\n    a = 0\n    for i in range(j + 1, n):\n        if s[i] == '0':\n            c = 0\n        else:\n            c += 1\n            a = max(a, c)\n    print(a + cnt)", "def Solve(s, n):\n    (cnt, start_one, max_one) = (0, 0, 0)\n    b = s[0] == '1'\n    for i in range(n):\n        if s[i] == '1':\n            cnt += 1\n        else:\n            if b:\n                start_one = cnt\n                b = False\n            else:\n                max_one = max(max_one, cnt)\n            cnt = 0\n    if b:\n        start_one = cnt\n    else:\n        max_one = max(max_one, cnt)\n    return max_one + start_one\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(Solve(s, n))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    (j, c) = (0, 0)\n    while j < n and s[j] != '0':\n        c += 1\n        j += 1\n    curr = 0\n    ans = 0\n    for i in range(j + 1, n):\n        if s[i] == '0':\n            curr = 0\n        else:\n            curr += 1\n            ans = max(ans, curr)\n    print(ans + c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    fd = s.find('0')\n    if fd == -1:\n        print(len(s))\n    else:\n        tm = s[fd:]\n        print(max((len(st) for st in tm.split('0'))) + fd)", "for _ in range(int(input())):\n    int(input())\n    s = str(input())\n    if s.count('0') == 0:\n        print(len(s))\n    else:\n        z = s.index('0')\n        l = s[z:]\n        l = l.split('0')\n        print(max((len(x) for x in l)) + z)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    s = input()\n    lst = s.split('0')\n    lst1 = lst[1:]\n    lst1.sort()\n    if len(lst) == 1:\n        print(len(lst[0]))\n    else:\n        print(len(lst1[-1]) + len(lst[0]))", "for i in range(int(input())):\n    N = int(input())\n    a = input()\n    list0 = [i for i in a.split('0')]\n    list1 = list0[1:]\n    list1.sort()\n    if len(list0) == 1:\n        largest = len(list0[0])\n    else:\n        largest = len(list1[-1]) + len(list0[0])\n    print(largest)"]