["for _ in range(int(input())):\n    N = int(input())\n    S = input()\n    if N % 2 == 0:\n        notPossible = False\n        alpha = dict()\n        for i in S:\n            alpha[i] = alpha.get(i, 0) + 1\n            if alpha[i] > N / 2:\n                notPossible = True\n                break\n        if notPossible:\n            print('NO')\n            continue\n        sortedAlpha = dict(sorted(alpha.items(), key=lambda item: item[1]))\n        finalString = ''\n        for (k, v) in sortedAlpha.items():\n            finalString += k * v\n        halfWayMark = N // 2\n        finalString = finalString[:halfWayMark] + finalString[halfWayMark:][::-1]\n        print('YES')\n        print(finalString)\n    else:\n        print('NO')", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    S = input()\n    if N % 2 == 1:\n        print('NO')\n    else:\n        S1 = list(S)\n        S2 = set(S1)\n        D = {}\n        for i in S1:\n            if i not in D:\n                D[i] = 1\n            else:\n                D[i] += 1\n        v = 0\n        for i in list(D.values()):\n            if i > len(S) / 2:\n                print('NO')\n                v = 1\n                break\n        b = sorted(D.items(), key=lambda kv: (kv[1], kv[0]))\n        if v == 0:\n            print('YES')\n            ans = ''\n            for i in range(len(b)):\n                ans += str(b[i][0]) * b[i][1]\n            ans = ans[0:int(len(ans) / 2)] + ans[int(len(ans) / 2):][::-1]\n            print(ans)", "import math\n\ndef check(s, n):\n    for i in range(n):\n        if s[i] == s[n - i - 1]:\n            return False\n    else:\n        return True\n\ndef rotate(s, n):\n    l = len(s)\n    return s[-n:] + s[:l - n]\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    s = list(input())\n    if n % 2 != 0:\n        print('NO')\n        continue\n    d = {}\n    for i in range(n):\n        try:\n            d[s[i]] += 1\n        except:\n            d[s[i]] = 1\n    d = {k: v for (k, v) in sorted(d.items(), key=lambda x: x[1])}\n    new = ''\n    flag = True\n    for (k, v) in d.items():\n        if v > n // 2:\n            flag = False\n            break\n        new += k * v\n    if flag == False:\n        print('NO')\n        continue\n    if check(new, n):\n        print('YES')\n        print(new)\n        continue\n    ans = new[:n // 2] + new[n // 2:][::-1]\n    if check(ans, n):\n        print('YES')\n        print(ans)\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if n % 2 == 1:\n        print('NO')\n    else:\n        d = {}\n        for i in s:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n        d = dict(sorted(d.items(), key=lambda kv: (kv[1], kv[0])))\n        if max(d.values()) > n // 2:\n            print('NO')\n        else:\n            ans = ''\n            for i in d:\n                ans += i * d[i]\n            print('YES')\n            final = ans[:n // 2]\n            res = ans[n // 2:][::-1]\n            print(final + res)"]