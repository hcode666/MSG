["t = int(input())\nfor i in range(t):\n    (a, b) = tuple(map(int, input().split()))\n    p = False\n    r = b\n    for i in range(100):\n        if r % a == 0:\n            p = True\n            break\n        else:\n            r *= b\n    if p:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = tuple(map(int, input().split()))\n    p = False\n    r = b\n    for i in range(100):\n        if r % a == 0:\n            p = True\n            break\n        else:\n            r *= b\n    if p:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if b ** 30 % a == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = tuple(map(int, input().split()))\n    p = False\n    r = b\n    for i in range(100):\n        if r % a == 0:\n            p = True\n            break\n        else:\n            r *= b\n    if p:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if b ** 100 % a == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = tuple(map(int, input().split()))\n    p = False\n    r = b\n    for i in range(100):\n        if r % a == 0:\n            p = True\n            break\n        else:\n            r *= b\n    if p:\n        print('YES')\n    else:\n        print('NO')", "import math\ntest = int(input())\nfor _ in range(test):\n    (a, b) = map(int, input().split())\n    while True:\n        hcf = math.gcd(a, b)\n        if hcf == 1:\n            break\n        a = int(a / hcf)\n    if a == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\ntest = int(input())\nfor _ in range(test):\n    (a, b) = map(int, input().split())\n    while True:\n        hcf = math.gcd(a, b)\n        if hcf == 1:\n            break\n        a = int(a / hcf)\n    if a == 1:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor __ in range(T):\n    (a, b) = list(map(int, input().split()))\n    isPossible = False\n    q = b\n    for i in range(50):\n        if q % a == 0:\n            isPossible = True\n            break\n        else:\n            q *= b\n    if isPossible:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = 0\n    if b == 1:\n        print('NO')\n    elif a == b:\n        print('YES')\n    elif a == 1:\n        print('YES')\n    else:\n        while b <= 10 ** 500:\n            if b % a == 0:\n                x = 1\n                print('YES')\n                break\n            else:\n                b = b * b\n        if x == 0:\n            print('NO')", "import math\ntest = int(input())\nfor kk in range(test):\n    (x, y) = map(int, input().split())\n    while True:\n        a = math.gcd(x, y)\n        if a == 1:\n            break\n        x = int(x / a)\n    if x == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\ntest = int(input())\nfor kk in range(test):\n    (x, y) = map(int, input().split())\n    while True:\n        a = math.gcd(x, y)\n        if a == 1:\n            break\n        x = int(x / a)\n    if x == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    f = False\n    for j in range(1, 31):\n        if b ** j % a == 0:\n            f = True\n            break\n    print('YES' if f else 'NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    found = False\n    for i in range(1, 31):\n        if b ** i % a == 0:\n            found = True\n            break\n    if found:\n        print('YES')\n    else:\n        print('NO')", "import math\nT = int(input())\nfor _ in range(T):\n    (a, b) = map(int, input().split())\n    found = False\n    for i in range(1, 31):\n        if b ** i % a == 0:\n            found = True\n            break\n    if found:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    while True:\n        g = math.gcd(a, b)\n        if g == 1:\n            break\n        if a % g != 0:\n            break\n        a //= g\n    if a == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        ans = 'NO'\n        for i in range(1, 30):\n            if b ** i % a == 0:\n                ans = 'YES'\n                break\n        print(ans)", "t = int(input())\nfor zz in range(t):\n    (a, b) = map(int, input().split())\n    c = 0\n    v = b\n    for i in range(100):\n        if v % a == 0:\n            c = 1\n            break\n        else:\n            v *= b\n    if c == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor zz in range(t):\n    (a, b) = map(int, input().split())\n    c = 0\n    v = b\n    for i in range(100):\n        if v % a == 0:\n            c = 1\n        else:\n            v *= b\n    if c == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    while True:\n        g = math.gcd(a, b)\n        if g == 1:\n            break\n        if a % g != 0:\n            break\n        a //= g\n    if a == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    temp = b\n    pos = True\n    for i in range(50):\n        if temp % a == 0:\n            pos = False\n            break\n        temp = temp * b\n    if pos:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if b % a == 0:\n        print('YES')\n    elif b == 1:\n        print('NO')\n    else:\n        ans = 'NO'\n        for i in range(2, 30):\n            if b ** i % a == 0:\n                ans = 'YES'\n                break\n        print(ans)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b % a == 0:\n        print('YES')\n    elif b == 1:\n        print('NO')\n    else:\n        ans = 'NO'\n        for i in range(2, 30):\n            if b ** i % a == 0:\n                ans = 'YES'\n                break\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    res = 0\n    for i in range(1, 30):\n        if b ** i % a == 0:\n            res = 1\n            break\n    if res == 1:\n        print('YES')\n    else:\n        print('NO')", "from collections import *\nfor u in range(int(input())):\n    (a, b) = map(int, input().split())\n    s = b\n    f = 0\n    for i in range(100):\n        if s % a == 0:\n            f = 1\n            break\n        else:\n            s *= b\n    if f == 0:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = 0\n    if b == 1:\n        print('NO')\n    elif a == 1:\n        print('YES')\n    elif a == b:\n        print('YES')\n    else:\n        while b <= 10 ** 500:\n            if b % a == 0:\n                x = 1\n                print('YES')\n                break\n            else:\n                b = b * b\n        if x == 0:\n            print('NO')", "import math\nfor t in range(int(input())):\n    (a, b) = map(int, input().split())\n    f = 0\n    r = b\n    for i in range(30):\n        if r % a == 0:\n            f = 1\n            break\n        r *= b\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor t in range(int(input())):\n    (a, b) = map(int, input().split())\n    f = 0\n    r = b\n    for i in range(30):\n        if r % a == 0:\n            f = 1\n            break\n        r *= b\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor t in range(int(input())):\n    (a, b) = map(int, input().split())\n    f = 0\n    r = b\n    for i in range(40):\n        if r % a == 0:\n            f = 1\n            break\n        r *= b\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor t in range(int(input())):\n    (a, b) = map(int, input().split())\n    f = 0\n    r = b\n    for i in range(50):\n        if r % a == 0:\n            f = 1\n            break\n        r *= b\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor t in range(int(input())):\n    (a, b) = map(int, input().split())\n    f = 0\n    r = b\n    for i in range(50):\n        if r % a == 0:\n            f = 1\n            break\n        r *= b\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "import heapq as hp\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    f = 0\n    for i in range(32):\n        if b % a == 0:\n            f = 1\n            break\n        else:\n            b *= b\n            b %= a\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for j in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    d = 0\n    for i in range(1, 30):\n        if k ** i % n == 0:\n            print('YES')\n            d += 1\n            break\n    if d == 0:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    p = False\n    r = b\n    for i in range(50):\n        if r % a == 0:\n            p = True\n            break\n        else:\n            r *= b\n    if p:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (a, b) = map(int, input().split())\n    r = b\n    c = False\n    for i in range(0, 100):\n        if r % a == 0:\n            c = True\n            break\n        else:\n            r = r * b\n    if c == True:\n        print('YES')\n    else:\n        print('NO')", "import math\nimport sys\nMOD = 1000000007\n\ndef inp():\n    return sys.stdin.readline().strip()\n\ndef ii():\n    return int(inp())\n\ndef iis():\n    return [int(i) for i in inp().split()]\n\ndef solve():\n    (a, b) = iis()\n    while a != 1:\n        if math.gcd(a, b) == 1:\n            return False\n        a //= math.gcd(a, b)\n    return True\nt = ii()\nfor _ in range(t):\n    print('YES' if solve() else 'NO')", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nans = ''\nfor _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    while True:\n        g = gcd(a, b)\n        if g == 1:\n            break\n        a /= g\n    if a == 1:\n        ans += 'YES\\n'\n    else:\n        ans += 'NO\\n'\nprint(ans)", "def hcf(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nt = int(input())\nwhile t:\n    t -= 1\n    (x, y) = map(int, input().split())\n    h = hcf(x, y)\n    while h > 1:\n        h = hcf(x, y)\n        x /= h\n        if h == 1:\n            break\n    if x != 1:\n        print('NO')\n    else:\n        print('YES')", "from math import gcd\ntest = int(input())\nfor t in range(test):\n    (a, b) = map(int, input().split())\n    if b % a == 0:\n        print('YES')\n    else:\n        x = b\n        ok = False\n        while gcd(a, x) != 1:\n            m = gcd(a, x)\n            x //= m\n            a //= m\n            if a == 1:\n                ok = True\n                break\n            x *= b\n        if not ok:\n            print('NO')\n        else:\n            print('YES')", "def func():\n    (a, b) = map(int, input().split())\n    v = b\n    for i in range(100):\n        if v % a == 0:\n            return 'YES'\n        else:\n            v *= b\n    return 'NO'\nt = int(input())\nfor i in range(t):\n    print(func())", "def func():\n    (a, b) = map(int, input().split())\n    v = b\n    for i in range(100):\n        if v % a == 0:\n            return 'YES'\n        else:\n            v *= b\n    return 'NO'\nt = int(input())\nfor i in range(t):\n    print(func())", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    n = y\n    f = 0\n    for i in range(50):\n        if n % x == 0:\n            f = 1\n            break\n        n = n * y\n    if f:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = tuple(map(int, input().split()))\n    p = False\n    r = b\n    for i in range(50):\n        if r % a == 0:\n            p = True\n            break\n        else:\n            r *= b\n    if p:\n        print('YES')\n    else:\n        print('NO')", "def gcd(x, y):\n    while y > 0:\n        (x, y) = (y, x % y)\n    return x\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    g = gcd(a, b)\n    while g != 1:\n        a = a / g\n        g = gcd(a, b)\n    if a == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = math.gcd(a, b)\n    x = a // c\n    if pow(b, x, a) == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    po = b\n    check = False\n    for _ in range(100):\n        if po % a == 0:\n            check = True\n            break\n        po = po * b\n    if check == True:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math\nimport heapq\nfrom collections import defaultdict as dd\nfrom collections import OrderedDict as od\nfrom collections import deque\nfrom itertools import permutations as pp\nfrom itertools import combinations as cc\nfrom sys import stdin\nfrom functools import cmp_to_key as ctk\nfrom functools import lru_cache\nfrom bisect import bisect_left as bs_l\nfrom bisect import bisect_right as bs_r\ninput = sys.stdin.readline\nmod = 10 ** 9 + 7\nsys.setrecursionlimit(2 * 10 ** 5 + 1)\n\ndef comparator(x, y):\n    if x[0] == y[0]:\n        return x[1] - y[1]\n    return True\n\ndef ncr(n, r):\n    if n < r:\n        return 0\n    return fc[n] * pow(fc[r] * fc[n - r] % mod, mod - 2, mod) % mod\nT = int(input())\nfor _ in range(T):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        if a == 1:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        f = 0\n        pp = 1\n        for i in range(31):\n            if b ** pp % a == 0:\n                f = 1\n                break\n            pp += 1\n        if f:\n            print('YES')\n            continue\n        print('NO')", "t = int(input())\nwhile t:\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    power = 1\n    poss = False\n    for i in range(1, 100):\n        power *= b\n        if power % a == 0:\n            poss = True\n            break\n    if poss:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    while True:\n        x = gcd(a, b)\n        if x == 1:\n            break\n        a //= x\n    if a == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    k = 0\n    for i in range(30):\n        if pow(b, i) % a == 0:\n            print('YES')\n            k += 1\n            break\n    if k == 0:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    k = 0\n    for i in range(50):\n        if pow(b, i) % a == 0:\n            print('YES')\n            k += 1\n            break\n    if k == 0:\n        print('NO')", "def check(a, b):\n    for i in range(1, 31):\n        if b ** i % a == 0:\n            return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    print(check(a, b))", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    for i in range(6):\n        if b % a == 0:\n            print('YES')\n            break\n        b = b * b\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = tuple(map(int, input().split()))\n    p = False\n    r = b\n    for i in range(100):\n        if r % a == 0:\n            p = True\n            break\n        else:\n            r *= b\n    if p:\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nfor i in range(a):\n    b = input()\n    (c, d) = b.split()\n    c = int(c)\n    d = int(d)\n    for i in range(6):\n        if d % c == 0:\n            print('YES')\n            break\n        d = d * d\n    else:\n        print('NO')", "a = int(input())\nfor i in range(a):\n    b = input()\n    (c, d) = b.split()\n    c = int(c)\n    d = int(d)\n    for i in range(10):\n        if d % c == 0:\n            print('YES')\n            break\n        d = d * d\n    else:\n        print('NO')", "n = int(input())\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    flag = False\n    for i in range(1, 30):\n        if b ** i % a == 0:\n            flag = True\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = tuple(map(int, input().split()))\n    p = False\n    r = b\n    for i in range(50):\n        if r % a == 0:\n            p = True\n            break\n        else:\n            r *= b\n    if p:\n        print('YES')\n    else:\n        print('NO')", "def inIntList():\n    return [int(x) for x in input().split()]\n\ndef inInt():\n    return int(input())\n\ndef outList(lst):\n    for data in lst:\n        print(data)\n\ndef solveA():\n    for _ in range(inInt()):\n        (M, N, K) = inIntList()\n        ans.append('YES' if M > N * K else 'NO')\n\ndef solveB():\n    for _ in range(inInt()):\n        (N, P, X, Y) = inIntList()\n        A = inIntList()\n        child = A[:P].count(0)\n        elder = P - child\n        ans.append(X * child + Y * elder)\n\ndef solveC():\n    for _ in range(inInt()):\n        S = input()\n        old = S[0]\n        wand = 1 if old == '0' else 0\n        for new in S[1:]:\n            if old != new:\n                wand += 1\n                old = new\n        ans.append(wand)\n\ndef solveD():\n    for _ in range(inInt()):\n        (P, a, b, c, x, y) = inIntList()\n        ans.append(P // min(b + a * x, c + a * y))\n\ndef solveE():\n    for _ in range(inInt()):\n        (a, b) = inIntList()\n        for i in range(1, 30):\n            if b ** i % a == 0:\n                ans.append('YES')\n                break\n        else:\n            ans.append('NO')\nans = []\nsolveE()\noutList(ans)", "def inIntList():\n    return [int(x) for x in input().split()]\n\ndef inInt():\n    return int(input())\n\ndef outList(lst):\n    for data in lst:\n        print(data)\n\ndef solveA():\n    for _ in range(inInt()):\n        (M, N, K) = inIntList()\n        ans.append('YES' if M > N * K else 'NO')\n\ndef solveB():\n    for _ in range(inInt()):\n        (N, P, X, Y) = inIntList()\n        A = inIntList()\n        child = A[:P].count(0)\n        elder = P - child\n        ans.append(X * child + Y * elder)\n\ndef solveC():\n    for _ in range(inInt()):\n        S = input()\n        old = S[0]\n        wand = 1 if old == '0' else 0\n        for new in S[1:]:\n            if old != new:\n                wand += 1\n                old = new\n        ans.append(wand)\n\ndef solveD():\n    for _ in range(inInt()):\n        (P, a, b, c, x, y) = inIntList()\n        ans.append(P // min(b + a * x, c + a * y))\n\ndef solveE():\n\n    def gcd(x, y):\n        return gcd(y, x % y) if x % y else y\n    for _ in range(inInt()):\n        (a, b) = inIntList()\n        common = gcd(a, b)\n        while common != 1:\n            a //= common\n            common = gcd(a, b)\n        ans.append('YES' if a == 1 else 'NO')\nans = []\nsolveE()\noutList(ans)", "def inIntList():\n    return [int(x) for x in input().split()]\n\ndef inInt():\n    return int(input())\n\ndef outList(lst):\n    for data in lst:\n        print(data)\n\ndef solveA():\n    for _ in range(inInt()):\n        (M, N, K) = inIntList()\n        ans.append('YES' if M > N * K else 'NO')\n\ndef solveB():\n    for _ in range(inInt()):\n        (N, P, X, Y) = inIntList()\n        A = inIntList()\n        child = A[:P].count(0)\n        elder = P - child\n        ans.append(X * child + Y * elder)\n\ndef solveC():\n    for _ in range(inInt()):\n        S = input()\n        old = S[0]\n        wand = 1 if old == '0' else 0\n        for new in S[1:]:\n            if old != new:\n                wand += 1\n                old = new\n        ans.append(wand)\n\ndef solveD():\n    for _ in range(inInt()):\n        (P, a, b, c, x, y) = inIntList()\n        ans.append(P // min(b + a * x, c + a * y))\n\ndef solveE():\n\n    def gcd(x, y):\n        return gcd(y, x % y) if x % y else y\n    for _ in range(inInt()):\n        (a, b) = inIntList()\n        common = gcd(a, b)\n        while common != 1:\n            a //= common\n            common = gcd(a, b)\n        ans.append('YES' if a == 1 else 'NO')\nans = []\nsolveE()\noutList(ans)", "import math\n\ndef lcm(a, b):\n    return a * b / math.gcd(a, b)\nfor r in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    gcd1 = math.gcd(a, b)\n    if a == b == 1:\n        print('YES')\n        continue\n    while a > 1 and gcd1 > 1:\n        a = a // gcd1\n        gcd1 = math.gcd(a, b)\n    if a == 1 and gcd1 == 1:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    num = 1\n    cnt = 0\n    flag = 0\n    while cnt <= 100:\n        if num % a == 0:\n            print('YES')\n            flag = 1\n            break\n        num *= b\n        cnt += 1\n    if flag == 0:\n        print('NO')", "t = int(input())\nwhile t:\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    power = 1\n    poss = False\n    for i in range(1, 100):\n        power *= b\n        if power % a == 0:\n            poss = True\n            break\n    if poss:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    while True:\n        g = math.gcd(a, b)\n        if g == 1:\n            break\n        a = a // g\n    if a == 1:\n        print('YES')\n    else:\n        print('NO')", "from math import gcd\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    while gcd(a, b) != 1:\n        a = a // gcd(a, b)\n    if a == 1:\n        sys.stdout.write('YES\\n')\n    else:\n        sys.stdout.write('NO\\n')", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    g = math.gcd(a, b)\n    if g == 1 and a != 1:\n        print('NO')\n    elif a == 1:\n        print('YES')\n    else:\n        a = a // g\n        while a != 1 and g != 1:\n            g = math.gcd(a, b)\n            a = a // g\n        if g == 1:\n            print('NO')\n        if a == 1:\n            print('YES')", "import math\nimport sys\np = int(input())\nfor _ in range(p):\n    (a, b) = map(int, sys.stdin.readline().split())\n    g = math.gcd(a, b)\n    if g == 1 and a != 1:\n        print('NO')\n    elif a == 1:\n        print('YES')\n    else:\n        a = a // g\n        while a != 1 and g != 1:\n            g = math.gcd(a, b)\n            a = a // g\n        if g == 1:\n            print('NO')\n        if a == 1:\n            print('YES')", "for i in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(['YES', 'NO'][pow(y, 100, x) != 0])", "def solve():\n    (a, b) = map(int, input().split())\n    r = b\n    p = 0\n    for i in range(100):\n        if r % a == 0:\n            p = 1\n            break\n        else:\n            r = r * b\n    if p == 1:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (a, b) = tuple(map(int, input().split()))\n    p = False\n    r = b\n    for i in range(100):\n        if r % a == 0:\n            p = True\n            break\n        else:\n            r *= b\n    if p:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    for i in range(80):\n        if b ** i % a == 0:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    flag = False\n    i = 0\n    x = b\n    while i < 100:\n        x = x * b\n        if x % a == 0:\n            flag = True\n            break\n        i += 1\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "import math\nimport sys\nimport collections\nimport bisect\nimport time\nimport random\nimport itertools\nimport string\nfrom collections import Counter, defaultdict\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nfor t in range(int(input())):\n    (a, b) = get_ints()\n    poss = True\n    g = math.gcd(a, b)\n    while g != 1:\n        a //= g\n        g = math.gcd(a, b)\n    if a == 1:\n        print('YES')\n    else:\n        print('NO')", "from math import gcd\n\ndef solve(a, b):\n    while True:\n        g = gcd(a, b)\n        if g != 1:\n            a //= g\n            continue\n        if a == 1:\n            return 'YES'\n        return 'NO'\n    return 'NO'\nt = int(input().strip())\ninputs = []\nfor _ in range(t):\n    (a, b) = map(int, input().strip().split())\n    inputs.append((a, b))\nfor (a, b) in inputs:\n    print(solve(a, b))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    f = True\n    for i in range(1, 30):\n        p = b ** i\n        if p % a == 0:\n            print('YES')\n            f = False\n            break\n    if f:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    f = True\n    for i in range(1, 31):\n        p = b ** i\n        if p % a == 0:\n            print('YES')\n            f = False\n            break\n    if f:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    f = True\n    for i in range(1, 41):\n        p = b ** i\n        if p % a == 0:\n            print('YES')\n            f = False\n            break\n    if f:\n        print('NO')", "from math import gcd\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1:\n        print('YES')\n    elif b == 1:\n        print('NO')\n    else:\n        gcd_ab = gcd(a, b)\n        while gcd_ab != 1:\n            a //= gcd_ab\n            gcd_ab = gcd(a, b)\n        if a == 1:\n            print('YES')\n        else:\n            print('NO')", "def main():\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        flg = 0\n        for i in range(1, 50):\n            if b ** i % a == 0:\n                flg = 1\n                break\n        print('YES' if flg else 'NO')\nmain()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    m = pow(b, 100) % a\n    if b % a == 0 or m == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    v = b\n    for i in range(100):\n        if v % a == 0:\n            break\n        v = v * b\n    if v % a == 0:\n        print('YES')\n    else:\n        print('NO')", "import math\nT = int(input())\nfor i in range(T):\n    (a, b) = map(int, input().split(' '))\n    while True:\n        gcd = math.gcd(a, b)\n        if gcd == 1:\n            break\n        else:\n            a = a // gcd\n    print('YES' if a == 1 else 'NO')", "def gcd(a, b):\n    return a if b == 0 else gcd(b, a % b)\nfor testcase in range(int(input())):\n    (a, b) = map(int, input().split())\n    while True:\n        gc = gcd(a, b)\n        if gc == 1:\n            break\n        else:\n            a //= gc\n    print('YES' if a == 1 else 'NO')", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().strip().split())\n    while 1:\n        g = math.gcd(a, b)\n        if g == 1:\n            break\n        a = a // g\n    print('YES' if a == 1 else 'NO')", "try:\n    TC = int(input())\n    for i in range(TC):\n        (a, b) = map(int, input().split())\n        x = 1\n        count = False\n        for i in range(1, 100):\n            x *= b\n            if x % a == 0:\n                count = True\n                break\n        if count:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass", "try:\n    t = int(input())\n    for i in range(t):\n        (a, b) = map(int, input().split())\n        power = 1\n        count = False\n        for i in range(1, 100):\n            power *= b\n            if power % a == 0:\n                count = True\n                break\n        if count:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass"]