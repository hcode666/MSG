["def compute(A):\n    ans = 0\n    N = len(A)\n    for i in range(N):\n        k = i + 1\n        for j in range(i + 2, N):\n            mid = (A[i] + A[j]) / 2\n            while k < j - 1 and abs(A[k + 1] - mid) <= abs(A[k] - mid):\n                k += 1\n            ans += (A[k] - A[i]) * (A[j] - A[k])\n    return ans\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(compute(A))", "import sys\n\ndef compute(A):\n    ans = 0\n    N = len(A)\n    for i in range(N):\n        k = i + 1\n        for j in range(i + 2, N):\n            mid = (A[i] + A[j]) / 2\n            while k < j - 1 and abs(A[k + 1] - mid) <= abs(A[k] - mid):\n                k += 1\n            ans += (A[k] - A[i]) * (A[j] - A[k])\n    return ans\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    A = list(map(int, sys.stdin.readline().strip().split()))\n    print(compute(A))", "import sys\n\ndef compute(A):\n    ans = 0\n    N = len(A)\n    for i in range(N):\n        k = i + 1\n        for j in range(i + 2, N):\n            mid = (A[i] + A[j]) / 2\n            while k < j - 1 and abs(A[k + 1] - mid) <= abs(A[k] - mid):\n                k += 1\n            ans += (A[k] - A[i]) * (A[j] - A[k])\n    return ans\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    A = list(map(int, sys.stdin.readline().strip().split()))\n    print(compute(A))", "def compute(arr):\n    n = len(arr)\n    total = 0\n    for i in range(n - 2):\n        j = i + 1\n        for k in range(i + 2, n):\n            mid = (arr[i] + arr[k]) / 2\n            while j < k - 1 and abs(arr[j + 1] - mid) <= abs(arr[j] - mid):\n                j += 1\n            total += (arr[i] - arr[j]) * (arr[j] - arr[k])\n    return total\nfor t in range(int(input())):\n    n = int(input())\n    print(compute(list(map(int, input().split()))))", "def op(arr, n):\n    tot = 0\n    for i in range(n - 2):\n        j = i + 1\n        for k in range(i + 2, n):\n            mid = (arr[i] + arr[k]) // 2\n            while j < k - 1 and abs(arr[j + 1] - mid) <= abs(arr[j] - mid):\n                j += 1\n            tot += (arr[i] - arr[j]) * (arr[j] - arr[k])\n    return tot\nfor _ in range(int(input())):\n    n = int(input())\n    li = [int(x) for x in input().split()]\n    print(op(li, n))", "def op(arr, n):\n    tot = 0\n    for i in range(n - 2):\n        j = i + 1\n        for k in range(i + 2, n):\n            mid = (arr[i] + arr[k]) // 2\n            while j < k - 1 and abs(arr[j + 1] - mid) <= abs(arr[j] - mid):\n                j += 1\n            tot += (arr[i] - arr[j]) * (arr[j] - arr[k])\n    return tot\nfor _ in range(int(input())):\n    n = int(input())\n    li = [int(x) for x in input().split()]\n    print(op(li, n))", "import sys\n\ndef compute(arr):\n    n = len(arr)\n    total = 0\n    for i in range(n - 2):\n        j = i + 1\n        for k in range(i + 2, n):\n            mid = (arr[i] + arr[k]) / 2\n            while j < k - 1 and abs(arr[j + 1] - mid) <= abs(arr[j] - mid):\n                j += 1\n            total += (arr[i] - arr[j]) * (arr[j] - arr[k])\n    return total\nt = int(sys.stdin.readline())\nfor t_itr in range(t):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().strip().split()))\n    sys.stdout.write(str(compute(arr)) + '\\n')", "from sys import stdin\n\ndef uniq_cnt(arr):\n    uniq = []\n    cnt = []\n    c = arr[0] - 1\n    for a in arr:\n        if a == c:\n            cnt[-1] += 1\n        else:\n            uniq.append(a)\n            cnt.append(1)\n            c = a\n    return (uniq, cnt)\n\ndef sum_of_weights(arr):\n    (uniq, cnt) = uniq_cnt(arr)\n    n = len(uniq)\n    if n < 3:\n        return 0\n    swt = 0\n    for lx in range(n - 2):\n        L = uniq[lx]\n        C = cnt[lx]\n        M = uniq[lx + 1]\n        mx = lx + 2\n        Mn = uniq[mx]\n        for hx in range(lx + 2, n):\n            H = uniq[hx]\n            while mx < hx:\n                if M - L >= H - Mn:\n                    break\n                M = Mn\n                mx += 1\n                Mn = uniq[mx]\n            swt += (H - M) * (M - L) * C * cnt[hx]\n    return swt\ninp = stdin.readline\nT = int(inp())\nfor tx in range(T):\n    N = int(inp())\n    Ays = list(map(int, inp().split()))\n    print(sum_of_weights(Ays))", "from sys import stdin\n\ndef sum_of_weights(arr, n):\n    swt = 0\n    for lx in range(n - 2):\n        L = arr[lx]\n        M = arr[lx + 1]\n        mx = lx + 2\n        Mn = arr[mx]\n        for hx in range(lx + 2, n):\n            H = arr[hx]\n            while mx < hx:\n                if M - L > H - Mn:\n                    break\n                M = Mn\n                mx += 1\n                Mn = arr[mx]\n            swt += (H - M) * (M - L)\n    return swt\ninp = stdin.readline\nT = int(inp())\nfor tx in range(T):\n    N = int(inp())\n    Ays = list(map(int, inp().split()))\n    print(sum_of_weights(Ays, N))", "import sys\n\ndef compute(arr):\n    n = len(arr)\n    total = 0\n    for i in range(n - 2):\n        j = i + 1\n        for k in range(i + 2, n):\n            mid = (arr[i] + arr[k]) / 2\n            while j < k - 1 and abs(arr[j + 1] - mid) <= abs(arr[j] - mid):\n                j += 1\n            total += (arr[i] - arr[j]) * (arr[j] - arr[k])\n    return total\nt = int(sys.stdin.readline())\nfor t_itr in range(t):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().strip().split()))\n    sys.stdout.write(str(compute(arr)) + '\\n')", "def compute(arr):\n    n = len(arr)\n    total = 0\n    for i in range(n - 2):\n        j = i + 1\n        for k in range(i + 2, n):\n            mid = (arr[i] + arr[k]) / 2\n            while j < k - 1 and abs(arr[j + 1] - mid) <= abs(arr[j] - mid):\n                j += 1\n            total += (arr[i] - arr[j]) * (arr[j] - arr[k])\n    return total\nfor t in range(int(input())):\n    n = int(input())\n    print(compute(list(map(int, input().split()))))", "import sys\n\ndef compute(a):\n    ans = 0\n    for i in range(n):\n        j = i + 1\n        for k in range(i + 2, n):\n            x = (a[i] + a[k]) / 2\n            while j < k - 1 and abs(a[j + 1] - x) <= abs(a[j] - x):\n                j = j + 1\n            ans += (a[j] - a[i]) * (a[k] - a[j])\n    return ans\nt = int(sys.stdin.readline())\nfor t_itr in range(t):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().strip().split()))\n    sys.stdout.write(str(compute(arr)) + '\\n')", "import bisect\n\ndef func(N, A):\n    i = 0\n    s = 0\n    ans = 0\n    for i in range(N - 2):\n        k = i + 1\n        for j in range(i + 2, N):\n            mid = (A[j] + A[i]) // 2\n            while k < j - 1 and abs(A[k + 1] - mid) <= abs(A[k] - mid):\n                k += 1\n            ans += (A[k] - A[i]) * (A[j] - A[k])\n    return ans\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(func(N, A))", "def main():\n    for t in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        total = 0\n        for i in range(n - 2):\n            j = i + 1\n            for k in range(i + 2, n):\n                avg = (arr[i] + arr[k]) / 2\n                while j < k - 1 and abs(arr[j + 1] - avg) <= abs(arr[j] - avg):\n                    j += 1\n                total += (arr[j] - arr[i]) * (arr[k] - arr[j])\n        print(total)\nmain()", "def compute(arr):\n    n = len(arr)\n    total = 0\n    for i in range(n - 2):\n        j = i + 1\n        for k in range(i + 2, n):\n            mid = (arr[i] + arr[k]) / 2\n            while j < k - 1 and abs(arr[j + 1] - mid) <= abs(arr[j] - mid):\n                j += 1\n            total += (arr[i] - arr[j]) * (arr[j] - arr[k])\n    return total\n\ndef main():\n    for t in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        print(compute(arr))\nmain()", "import sys\n\ndef compute(arr):\n    n = len(arr)\n    total = 0\n    for i in range(n - 2):\n        j = i + 1\n        for k in range(i + 2, n):\n            mid = (arr[i] + arr[k]) / 2\n            while j < k - 1 and abs(arr[j + 1] - mid) <= abs(arr[j] - mid):\n                j += 1\n            total += (arr[i] - arr[j]) * (arr[j] - arr[k])\n    return total\nfor i in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    l = list(map(int, sys.stdin.readline().strip().split()))\n    sys.stdout.write(str(compute(l)) + '\\n')", "import sys\n\ndef calculate(lks):\n    n = len(lks)\n    ans = 0\n    for i in range(n - 2):\n        j = i + 1\n        for k in range(i + 2, n):\n            mid = (lks[i] + lks[k]) / 2\n            while j < k - 1 and abs(lks[j + 1] - mid) <= abs(lks[j] - mid):\n                j += 1\n            ans += (lks[k] - lks[j]) * (lks[j] - lks[i])\n    return ans\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    lks = list(map(int, sys.stdin.readline().strip().split()))\n    sys.stdout.write(str(calculate(lks)) + '\\n')", "import sys\n\ndef compute(arr):\n    n = len(arr)\n    total = 0\n    for i in range(n - 2):\n        j = i + 1\n        for k in range(i + 2, n):\n            mid = (arr[i] + arr[k]) / 2\n            while j < k - 1 and abs(arr[j + 1] - mid) <= abs(arr[j] - mid):\n                j += 1\n            total += (arr[i] - arr[j]) * (arr[j] - arr[k])\n    return total\nt = int(sys.stdin.readline())\nfor t_itr in range(t):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().strip().split()))\n    sys.stdout.write(str(compute(arr)) + '\\n')", "import sys\n\ndef compute(arr):\n    n = len(arr)\n    total = 0\n    for i in range(n - 2):\n        j = i + 1\n        for k in range(i + 2, n):\n            mid = (arr[i] + arr[k]) / 2\n            while j < k - 1 and abs(arr[j + 1] - mid) <= abs(arr[j] - mid):\n                j += 1\n            total += (arr[i] - arr[j]) * (arr[j] - arr[k])\n    return total\nt = int(sys.stdin.readline())\nfor t_itr in range(t):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().strip().split()))\n    sys.stdout.write(str(compute(arr)) + '\\n')", "import sys\n\ndef compute(arr):\n    n = len(arr)\n    total = 0\n    for i in range(n - 2):\n        j = i + 1\n        for k in range(i + 2, n):\n            mid = (arr[i] + arr[k]) / 2\n            while j < k - 1 and abs(arr[j + 1] - mid) <= abs(arr[j] - mid):\n                j += 1\n            total += (arr[i] - arr[j]) * (arr[j] - arr[k])\n    return total\nt = int(sys.stdin.readline())\nfor t_itr in range(t):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().strip().split()))\n    sys.stdout.write(str(compute(arr)) + '\\n')"]