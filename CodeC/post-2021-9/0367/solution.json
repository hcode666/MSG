["for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    l = [0] * 32\n    for i in range(32):\n        for j in a:\n            if 1 << i & j:\n                l[i] += 1\n    s = 0\n    for i in range(32):\n        if l[i] >= 2:\n            s |= 1 << i\n    print(s)", "from collections import defaultdict\n\ndef AndOrUnion(arr):\n    d = defaultdict(lambda : 0)\n    for i in arr:\n        x = bin(i)[2:]\n        for j in range(len(x)):\n            if x[j] == '1':\n                d[len(x) - j] += 1\n    s = ''\n    for j in range(1, 32):\n        if d[j] >= 2:\n            s = '1' + s\n        else:\n            s = '0' + s\n    print(int(s, 2))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    AndOrUnion(arr)", "from collections import defaultdict\n\ndef AndOrUnion(arr):\n    d = defaultdict(lambda : 0)\n    for i in arr:\n        x = bin(i)[2:]\n        for j in range(len(x)):\n            if x[j] == '1':\n                d[len(x) - j] += 1\n    s = ''\n    for j in range(1, 32):\n        if d[j] >= 2:\n            s = '1' + s\n        else:\n            s = '0' + s\n    print(int(s, 2))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    AndOrUnion(arr)", "from collections import defaultdict\n\ndef AndOrUnion(arr):\n    d = defaultdict(lambda : 0)\n    for i in arr:\n        x = bin(i)[2:]\n        for j in range(len(x)):\n            if x[j] == '1':\n                d[len(x) - j] += 1\n    s = ''\n    for j in range(1, 32):\n        if d[j] >= 2:\n            s = '1' + s\n        else:\n            s = '0' + s\n    print(int(s, 2))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    AndOrUnion(arr)", "case = int(input())\nfor i in range(case):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    i = 30\n    onebits = []\n    while i > 0:\n        count = 0\n        for j in range(n):\n            count += arr[j] & 1\n            arr[j] = arr[j] >> 1\n        onebits.append(count)\n        i -= 1\n    res = 0\n    power = 0\n    for counts in onebits:\n        if counts >= 2:\n            res += pow(2, power)\n        power += 1\n    print(res)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    lst = list(map(int, input().split()))\n    or_lst = []\n    initial_or = 0\n    for i in range(n - 1, -1, -1):\n        or_lst.insert(0, initial_or)\n        initial_or |= lst[i]\n    or_component = 0\n    for i in range(n):\n        temp = or_lst[i] & lst[i]\n        or_component |= temp\n    print(or_component)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    lst = list(map(int, input().split()))\n    or_lst = []\n    initial_or = 0\n    for i in range(n - 1, -1, -1):\n        or_lst.insert(0, initial_or)\n        initial_or |= lst[i]\n    or_component = 0\n    for i in range(n):\n        temp = or_lst[i] & lst[i]\n        or_component |= temp\n    print(or_component)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    lst = list(map(int, input().split()))\n    or_lst = []\n    initial_or = 0\n    for i in range(n - 1, -1, -1):\n        or_lst.insert(0, initial_or)\n        initial_or |= lst[i]\n    or_component = 0\n    for i in range(n):\n        temp = or_lst[i] & lst[i]\n        or_component |= temp\n    print(or_component)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    lst = list(map(int, input().split()))\n    or_lst = []\n    initial_or = 0\n    for i in range(n - 1, -1, -1):\n        or_lst.insert(0, initial_or)\n        initial_or |= lst[i]\n    or_component = 0\n    for i in range(n):\n        temp = or_lst[i] & lst[i]\n        or_component |= temp\n    print(or_component)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    q = [0] * 32\n    a = list(map(int, input().split()))\n    for i in a:\n        p = 0\n        while i:\n            q[p] += i & 1\n            i >>= 1\n            p += 1\n    for i in range(32):\n        if q[i] > 1:\n            q[i] = '1'\n        else:\n            q[i] = '0'\n    print(int(''.join(q[::-1]), 2))", "for i in range(int(input())):\n    N = int(input())\n    arr = [int(x) for x in input().split()]\n    brr = []\n    dict = set()\n    while len(arr) > 0:\n        count = 0\n        dict = sorted(dict)\n        dict = reversed(dict)\n        for i in dict:\n            arr.pop(i)\n        n = len(arr)\n        dict = set()\n        for i in range(len(arr)):\n            if arr[i] == 0:\n                dict.add(i)\n            if arr[i] & 1 == 1:\n                count += 1\n            arr[i] = arr[i] >> 1\n            if arr[i] == 0:\n                dict.add(i)\n        if count > 1:\n            brr.append(1)\n        else:\n            brr.append(0)\n    sum = 0\n    k = 0\n    for i in brr:\n        sum += i * 2 ** k\n        k += 1\n    print(sum)", "t = int(input())\nwhile t:\n    n = int(input())\n    array = list(map(int, input().split(' ')[:n]))\n    temp = [0] * 30\n    for i in range(n):\n        for j in range(30):\n            if array[i] & 1 << j:\n                temp[j] += 1\n    ans = 0\n    for i in range(30):\n        if temp[i] > 1:\n            ans |= 1 << i\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    b = [0 for i in range(30)]\n    for i in range(n):\n        for j in range(30):\n            if a[i] & 1 << j:\n                b[j] += 1\n    ans = 0\n    for i in range(30):\n        if b[i] > 1:\n            ans |= 1 << i\n    print(ans)\n    t -= 1", "from math import log\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    f = [0] * 40\n    p = 1\n    for i in range(40):\n        for j in range(n):\n            num = l[j] & p\n            if num == 0:\n                continue\n            x = int(log(num, 2))\n            f[x] += 1\n        p <<= 1\n    ans = 0\n    for i in range(40):\n        if f[i] > 1:\n            ans += 2 ** i\n    print(ans)", "mod = 1000000007\nread_int = lambda : int(input().strip())\nread_str = lambda : input().strip()\nread_str_arr = lambda : input().strip().split()\nread_int_arr = lambda : [int(x) for x in input().strip().split()]\n\ndef solve():\n    N = read_int()\n    A = read_int_arr()\n    ans = 0\n    or_acc = A[N - 1]\n    for i in range(N - 2, -1, -1):\n        ans |= A[i] & or_acc\n        or_acc |= A[i]\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "import sys\nfrom os import path\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 0\n    for i in range(30):\n        seen = 0\n        for e in a:\n            if e & 1 << i:\n                if seen:\n                    res |= 1 << i\n                    break\n                seen = 1\n    print(res)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = [0] * 30\n    for i in range(n):\n        for j in range(30):\n            if arr[i] & 1 << j:\n                cnt[j] += 1\n    ans = ''\n    for i in cnt:\n        if i > 1:\n            ans += '1'\n        else:\n            ans += '0'\n    print(int(ans[::-1], 2))", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = [0] * 30\n    for i in range(n):\n        for j in range(30):\n            if arr[i] & 1 << j:\n                cnt[j] += 1\n    ans = ''\n    for i in cnt:\n        if i > 1:\n            ans += '1'\n        else:\n            ans += '0'\n    print(int(ans[::-1], 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (ans, p) = (0, 1)\n    for j in range(32):\n        c = 0\n        for k in range(n):\n            if a[k] % 2 == 1:\n                c += 1\n            a[k] = a[k] // 2\n        if c > 1:\n            ans += p\n        p *= 2\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    (ans, p) = (0, 1)\n    for j in range(32):\n        C = 0\n        for i in range(N):\n            if A[i] % 2 == 1:\n                C += 1\n            A[i] = A[i] // 2\n        if C > 1:\n            ans += p\n        p *= 2\n    print(ans)", "t = int(input())\nfor l in range(t):\n    n = int(input())\n    a = [k for k in map(int, input().split())]\n    b = [0 for i in range(32)]\n    j = 0\n    for k in range(0, n):\n        z = 0\n        for m in range(0, 31):\n            if a[k] % 2 == 1:\n                b[z] += 1\n                z += 1\n                a[k] = a[k] // 2\n            else:\n                a[k] = a[k] // 2\n                z += 1\n    ans = 0\n    for e in b:\n        if e > 1:\n            ans = ans + 2 ** j\n            j += 1\n        else:\n            j += 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = input().split()\n    for i in range(n):\n        a[i] = int(a[i])\n    b = [0 for i in range(32)]\n    for i in range(n):\n        r = 0\n        while a[i] > 0:\n            if a[i] % 2:\n                b[r] += 1\n            a[i] = a[i] // 2\n            r += 1\n    ans = 0\n    m = 0\n    for i in range(32):\n        if b[i] > 1:\n            m = i\n    for i in range(m, -1, -1):\n        if b[i] > 1:\n            ans = 2 * ans + 1\n        else:\n            ans = 2 * ans\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    N = int(input())\n    listx = list(map(int, input().split()))\n    listy = [0] * 30\n    for i in listx:\n        for j in range(30):\n            if i & 1 << j:\n                listy[j] += 1\n    ans = 0\n    for k in range(30):\n        if listy[k] > 1:\n            ans |= 1 << k\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    l = []\n    final = ''\n    for k in A:\n        l.append(format(k, '032b'))\n    for j in range(32):\n        cnt = 0\n        for s in l:\n            if s[j] == '1':\n                cnt += 1\n                if cnt == 2:\n                    break\n        if cnt < 2:\n            final += '0'\n        else:\n            final += '1'\n    print(int(final, 2))", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        matrix = []\n        for i in arr:\n            s = '0' * 30\n            temp = bin(i).replace('0b', '')\n            matrix.append(s[len(temp):] + temp)\n        result = ['0'] * 30\n        for i in range(30):\n            cnt = 0\n            for j in range(n):\n                if matrix[j][i] == '1':\n                    cnt += 1\n                if cnt > 1:\n                    result[i] = '1'\n        print(int(''.join(result), 2))\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    X = [int(x) for x in input().split()]\n    l = []\n    for i in X:\n        l.append(format(i, '032b'))\n    ans = ''\n    for i in range(32):\n        count = 0\n        for s in l:\n            if s[i] == '1':\n                count += 1\n            if count >= 2:\n                break\n        if count >= 2:\n            ans += '1'\n        else:\n            ans += '0'\n    print(int(ans, 2))", "for _ in range(int(input())):\n    n = int(input())\n    res = list(map(int, input().split()))\n    vect = [0] * 30\n    for i in res:\n        s = bin(i)[2:]\n        k = -1\n        for j in range(len(s) - 1, -1, -1):\n            if s[j] == '1':\n                vect[k] += 1\n            k -= 1\n    final_result = ['0'] * 30\n    for i in range(29, -1, -1):\n        if vect[i] > 1:\n            final_result[i] = '1'\n    print(int(''.join(final_result), 2))", "import math\n\ndef join(x, bits):\n    X = x\n    for i in range(0, 32):\n        if X % 2 == 1:\n            bits[i] += 1\n        X //= 2\n\ndef solve():\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    bits = [0] * 32\n    for i in range(0, len(A)):\n        join(A[i], bits)\n    ans = 0\n    for i in range(0, 32):\n        if bits[i] > 1:\n            ans += 2 ** i\n    print(ans)\n\ndef main():\n    t = int(input())\n    while t > 0:\n        solve()\n        t -= 1\nmain()", "for t in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    byte_list = [0] * 32\n    ans = 0\n    for num in a:\n        i = 0\n        bit = num >> i\n        while bit > 0:\n            byte_list[i] = byte_list[i] + (bit & 1)\n            i += 1\n            bit = num >> i\n    for (i, bit_count) in enumerate(byte_list):\n        if bit_count > 1:\n            ans = ans | 1 << i\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    A = A[:n]\n    li = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    for k in A:\n        for j in range(31):\n            if k & 1 << j:\n                li[j] += 1\n    ans = 0\n    for j in range(31):\n        if li[j] > 1:\n            ans = ans | 1 << j\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = [0] * 30\n    for i in range(n):\n        for j in range(30):\n            if l[i] & 1 << j:\n                m[j] += 1\n    ans = 0\n    for i in range(30):\n        if m[i] > 1:\n            ans |= 1 << i\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = [0] * 32\n    for i in range(n):\n        for j in range(32):\n            if l[i] & 1 << j:\n                m[j] += 1\n    ans = 0\n    for i in range(32):\n        if m[i] > 1:\n            ans |= 1 << i\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    from collections import deque\n    ans = deque()\n    d = {}\n    for i in a:\n        i = bin(i)[2:]\n        for j in range(-1, -len(i) - 1, -1):\n            if i[j] == '1':\n                if -j in d:\n                    d[-j] += 1\n                else:\n                    d[-j] = 1\n            if i[j] == '0':\n                if -j not in d:\n                    d[-j] = 0\n    positions = d.items()\n    positions = sorted(positions)\n    for (indx, count) in positions:\n        if count > 1:\n            ans.appendleft('1')\n        else:\n            ans.appendleft('0')\n    res = int(''.join(ans), 2)\n    print(res)", "for i in range(int(input())):\n    n = int(input())\n    ar = [int(x) for x in input().split()]\n    l = []\n    m = 1\n    for i in range(0, 32):\n        count = 0\n        for j in ar:\n            if j >> i & m == 1:\n                count += 1\n            if count == 2:\n                l.append(2)\n                break\n        else:\n            l.append(1)\n    s = 0\n    for i in range(0, 32):\n        if l[i] == 2:\n            s = s + pow(2, i)\n    print(s)", "for i in range(int(input())):\n    n = int(input())\n    ar = [int(x) for x in input().split()]\n    l = []\n    m = 1\n    for i in range(0, 32):\n        count = 0\n        for j in ar:\n            if j >> i & m == 1:\n                count += 1\n            if count == 2:\n                l.append(2)\n                break\n        else:\n            l.append(1)\n    s = 0\n    for i in range(0, 32):\n        if l[i] == 2:\n            s = s + pow(2, i)\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    nl = [0] * 32\n    for i in range(n):\n        for j in range(32):\n            nl[j] += l[i] & 1 << j > 0\n    ans = 0\n    for i in range(32):\n        if nl[i] >= 2:\n            ans |= 1 << i\n    print(ans)", "def binary(l, num):\n    j = 0\n    while num != 0:\n        rem = num % 2\n        l[j] = l[j] + rem\n        j += 1\n        num //= 2\n    return (l, num)\nn = int(input())\nfor _ in range(n):\n    l = [0] * 30\n    x = int(input())\n    y = list(map(int, input().split()))\n    for i in range(x):\n        binary(l, y[i])\n    for i in range(30):\n        if l[i] > 1:\n            l[i] = 1\n        else:\n            l[i] = 0\n    l.reverse()\n    l2 = map(str, l)\n    st = ''.join(map(str, l2))\n    print(int(st, 2))", "num = int(input())\nwhile num:\n    num -= 1\n    length = int(input())\n    a1 = input().split()\n    if length == 2:\n        print(int(a1[0]) & int(a1[1]))\n        continue\n    length = 0\n    answer = ''\n    for i in a1:\n        length = max(length, len(bin(int(i))))\n    for j in range(0, length):\n        gotans = False\n        is1present = False\n        for i in range(0, len(a1)):\n            temp = 1 << j\n            if temp & int(a1[i]) != 0:\n                if is1present:\n                    gotans = True\n                    break\n                else:\n                    is1present = True\n        if gotans:\n            answer = '1' + answer\n        else:\n            answer = '0' + answer\n    print(int(answer, 2))", "import math\n\ndef join(x, bits):\n    X = x\n    for i in range(0, 32):\n        if X % 2 == 1:\n            bits[i] += 1\n        X //= 2\n\ndef solve():\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    bits = [0] * 32\n    for i in range(0, len(A)):\n        join(A[i], bits)\n    ans = 0\n    for i in range(0, 32):\n        if bits[i] > 1:\n            ans += 2 ** i\n    print(ans)\n\ndef main():\n    t = int(input())\n    while t > 0:\n        solve()\n        t -= 1\nmain()", "T = int(input())\nfor tc in range(T):\n    s = int(input())\n    a = [int(x) for x in input().split()]\n    bits = [0] * 30\n    for n in a:\n        idx = 0\n        while n > 0:\n            bits[idx] += n & 1\n            n = n >> 1\n            idx += 1\n    r = 0\n    for (idx, n) in enumerate(bits):\n        if n >= 2:\n            r += 2 ** idx\n    print(r)", "t = input()\nt = int(t)\nwhile t:\n    n = input()\n    n = int(n)\n    a = [int(a) for a in input().split()]\n    setBitCount = [0] * 30\n    for num in a:\n        for i in range(0, 30):\n            if num & 1 << i:\n                setBitCount[i] += 1\n    ans = 0\n    for i in range(30):\n        if setBitCount[i] > 1:\n            ans |= 1 << i\n    print(ans)\n    t -= 1", "t = input()\nt = int(t)\nwhile t:\n    n = input()\n    n = int(n)\n    a = [int(a) for a in input().split()]\n    setBitCount = [0] * 30\n    for num in a:\n        for i in range(0, 30):\n            if num & 1 << i:\n                setBitCount[i] += 1\n    ans = 0\n    for i in range(30):\n        if setBitCount[i] > 1:\n            ans |= 1 << i\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    li = list(map(int, input().strip().split()))\n    l = []\n    di = {}\n    ml = 0\n    c = 0\n    for i in range(32):\n        di[i] = '0'\n    for i in li:\n        bs = bin(i)\n        l.append(bs[::-1])\n        lon = len(l[len(l) - 1])\n        if ml < lon:\n            ml = lon\n    for i in range(ml):\n        c = 0\n        for j in range(len(l)):\n            if i < len(l[j]) and l[j][i] == '1':\n                c += 1\n        if c > 1:\n            di[i] = '1'\n    ans = ''\n    for i in range(32):\n        ans += di[i]\n    print(int(ans[::-1], 2))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = [0] * 32\n    for i in arr:\n        for j in range(32):\n            res[j] += i & 1 << j > 0\n    ans = 0\n    for i in range(32):\n        if res[i] > 1:\n            ans |= 1 << i\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = [0] * 32\n    for i in arr:\n        for j in range(32):\n            if i & 1 << j:\n                res[j] += 1\n    ans = 0\n    for i in range(32):\n        if res[i] > 1:\n            ans |= 1 << i\n    print(ans)", "from collections import Counter\nfrom math import ceil, floor, log, gcd\nimport bisect as bs\nimport sys\ninput = sys.stdin.readline\ninp_lis = lambda : list(map(int, input().split()))\ninp_multi = lambda : map(int, input().split())\ninp_int = lambda : int(input().strip())\n\ndef binary(s):\n    s = bin(s)\n    s = s[2:]\n    s = s[::-1]\n    return s\nfor _ in range(int(input().strip())):\n    n = inp_int()\n    a = inp_lis()\n    l = [0] * 32\n    for each in a:\n        s = binary(each)\n        l_s = len(s)\n        for i in range(l_s):\n            if s[i] == '1' and l[i] != 2:\n                l[i] += 1\n    ans = 0\n    for i in range(32):\n        if l[i] == 2:\n            ans += 2 ** i\n    print(ans)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        s = 0\n        for j in range(32):\n            c = 0\n            for i in range(n):\n                if l[i] % 2 != 0:\n                    c += 1\n                l[i] = l[i] // 2\n            if c > 1:\n                s = s + 2 ** j\n        print(s)\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    for i in range(n):\n        a[i] = (30 - len(bin(a[i])[2:])) * '0' + bin(a[i])[2:]\n    y = [0] * 30\n    for i in range(30):\n        for j in range(n):\n            if a[j][i] == '1':\n                y[i] += 1\n    s = ''\n    for i in range(30):\n        if y[i] > 1:\n            s += '1'\n        else:\n            s += '0'\n    print(int(s, 2))", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    lenA = len(a)\n    if lenA == 2:\n        print(a[0] & a[1])\n        continue\n    acc = 0\n    x = a[lenA - 1]\n    for i in range(lenA - 2, -1, -1):\n        acc = acc | a[i] & x\n        x = x | a[i]\n    print(acc)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * 30\n    for i in range(32):\n        for j in range(n):\n            if 1 << i & a[j]:\n                b[i] += 1\n    ans = 0\n    for i in range(30):\n        if b[i] > 1:\n            ans += 2 ** i\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = arr[0]\n    left = [arr[0]]\n    for i in range(1, len(arr)):\n        x = x | arr[i]\n        left.append(x)\n    right = [arr[-1]]\n    x = arr[-1]\n    for i in range(len(arr) - 2, -1, -1):\n        x = x | arr[i]\n        right.append(x)\n    right = list(reversed(right))\n    ans = 0\n    for i in range(len(arr)):\n        if i == 0:\n            z = 0\n        else:\n            z = left[i - 1]\n        if i + 1 == len(arr):\n            z1 = 0\n        else:\n            z1 = right[i + 1]\n        z = z | z1\n        ans = ans | z & arr[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = arr[0]\n    left = [arr[0]]\n    for i in range(1, len(arr)):\n        x = x | arr[i]\n        left.append(x)\n    right = [arr[-1]]\n    x = arr[-1]\n    for i in range(len(arr) - 2, -1, -1):\n        x = x | arr[i]\n        right.append(x)\n    right = list(reversed(right))\n    ans = 0\n    for i in range(len(arr)):\n        if i == 0:\n            z = 0\n        else:\n            z = left[i - 1]\n        if i + 1 == len(arr):\n            z1 = 0\n        else:\n            z1 = right[i + 1]\n        z = z | z1\n        ans = ans | z & arr[i]\n    print(ans)", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = [0] * 10000\n    k = 0\n    for i in a:\n        j = i\n        z = 0\n        while j > 0:\n            if j % 2 == 1:\n                x[z] = x[z] + 1\n            k = max(k, z)\n            z = z + 1\n            j = j // 2\n    for i in range(k + 1):\n        if x[i] >= 2:\n            x[i] = 1\n        else:\n            x[i] = 0\n    ans = 0\n    for i in range(k + 1):\n        if x[i] == 1:\n            ans = ans + 2 ** i\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    bits = [0] * 32\n    for i in range(n):\n        cur = arr[i]\n        for j in range(32):\n            if cur & 1 << j:\n                bits[j] += 1\n    ans = 0\n    for i in range(31, -1, -1):\n        if bits[i] >= 2:\n            ans += 2 ** i\n    print(ans)", "nn = int(input())\nfor i in range(nn):\n    p = int(input())\n    l = list(map(int, input().split()))\n    o = 1\n    a = 0\n    for j in range(32):\n        c = 0\n        for k in range(p):\n            if l[k] % 2 == 1:\n                c += 1\n            l[k] = l[k] // 2\n        if c > 1:\n            a += o\n        else:\n            pass\n        o *= 2\n    ppp = a\n    print(ppp)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    bit = [0] * 32\n    for i in range(n):\n        for j in range(32):\n            bit[j] += a[i] & 1 << j > 0\n    a = 0\n    for i in range(32):\n        if bit[i] >= 2:\n            a |= 1 << i\n    print(a)", "t = int(input())\n\ndef solve(ar):\n    n = len(ar)\n    out = [0] * 32\n    for i in range(n):\n        idx = 0\n        tmp = ar[i]\n        while tmp != 0:\n            if tmp & 1 == 1:\n                out[idx] += 1\n            tmp = tmp >> 1\n            idx += 1\n    res = 0\n    p = 0\n    for i in out:\n        if i > 1:\n            res += 2 ** p\n        p += 1\n    return res\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    print(solve(x))", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    b = [0] * 30\n    ct = 0\n    for c in l:\n        bi = format(c, '030b')\n        for i in range(29, -1, -1):\n            if bi[i] == '1':\n                b[i] += 1\n    op = '0b'\n    for k in range(30):\n        if b[k] > 1:\n            op += '1'\n        else:\n            op += '0'\n    print(int(op, 2))\n    t -= 1", "def to_find(n, ll):\n    b = [0] * 30\n    for i in range(n):\n        for j in range(30):\n            if ll[i] & 1 << j > 0:\n                b[j] += 1\n    res = 0\n    for i in range(30):\n        if b[i] >= 2:\n            res = res | 1 << i\n    return res\nfor i in range(int(input())):\n    n = int(input())\n    ll = list(map(int, input().split()))\n    res = to_find(n, ll)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    nl = [0] * 32\n    for i in range(n):\n        for j in range(32):\n            nl[j] += l[i] & 1 << j > 0\n    ans = 0\n    for i in range(32):\n        if nl[i] >= 2:\n            ans |= 1 << i\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(32):\n        c = 0\n        for x in a:\n            if x & 1 << i:\n                c += 1\n            if c > 1:\n                ans = ans | 1 << i\n    print(ans)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        bits = []\n        ans = ['0'] * 32\n        for i in arr:\n            temp1 = bin(i).replace('0b', '')\n            temp2 = '0' * (32 - len(temp1))\n            bits.append(temp2 + temp1)\n        for i in range(32):\n            cnt = 0\n            for j in bits:\n                if j[i] == '1':\n                    cnt += 1\n                if cnt == 2:\n                    ans[i] = '1'\n                    break\n        print(int(''.join(ans), 2))\nexcept:\n    pass", "T = int(input())\nwhile T > 0:\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    setcount = []\n    for i in range(30):\n        temp = 0\n        setcount.append(temp)\n    for i in range(n):\n        for j in range(30):\n            if arr[i] & 1 * 2 ** j:\n                setcount[j] += 1\n    answer = 0\n    for i in range(30):\n        if setcount[i] > 1:\n            answer |= 1 * 2 ** i\n    print(answer)\n    T = T - 1", "for i in range(int(input())):\n    n = int(input())\n    setbits = [0] * 32\n    num = list(map(int, input().split()))[:n]\n    for j in range(n):\n        for k in range(32):\n            if num[j] & 1 << k:\n                setbits[k] += 1\n    ans = 0\n    for j in range(32):\n        if setbits[j] > 1:\n            ans |= 1 << j\n    print(ans)", "for case in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    arr = [0] * 31\n    for val in a:\n        for bit in range(0, 31):\n            arr[bit] += bool(val & 1 << bit)\n    out = 0\n    for bit in range(0, 31):\n        if arr[bit] > 1:\n            out |= 1 << bit\n    print(out)", "def Binary(n):\n    s = bin(n)\n    s1 = s[2:]\n    return s1\n\ndef binaryToDecimal(n):\n    return int(n, 2)\nfor i in range(int(input())):\n    N = int(input())\n    elements = list(map(int, input().split()))\n    newelements = [Binary(i) for i in elements]\n    a = max(elements)\n    a = Binary(a)\n    a = len(a)\n    for i in range(len(newelements)):\n        while len(newelements[i]) != a:\n            newelements[i] = '0' + newelements[i]\n\n    def yes(i):\n        count = 0\n        for j in range(len(newelements)):\n            if newelements[j][i] == '1':\n                count += 1\n        if count >= 2:\n            return True\n        else:\n            return False\n    ans = ''\n    for i in range(a):\n        if yes(i):\n            ans = ans + '1'\n        else:\n            ans = ans + '0'\n    print(binaryToDecimal(ans))", "def Binary(n):\n    s = bin(n)\n    s1 = s[2:]\n    return s1\n\ndef binaryToDecimal(n):\n    return int(n, 2)\nfor i in range(int(input())):\n    N = int(input())\n    elements = list(map(int, input().split()))\n    newelements = [Binary(i) for i in elements]\n    a = max(elements)\n    a = Binary(a)\n    a = len(a)\n    for i in range(len(newelements)):\n        while len(newelements[i]) != a:\n            newelements[i] = '0' + newelements[i]\n\n    def yes(i):\n        count = 0\n        for j in range(len(newelements)):\n            if newelements[j][i] == '1':\n                count += 1\n        if count >= 2:\n            return True\n        else:\n            return False\n    ans = ''\n    for i in range(a):\n        if yes(i):\n            ans = ans + '1'\n        else:\n            ans = ans + '0'\n    print(binaryToDecimal(ans))", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(lambda x: '{0:032b}'.format(int(x)), input().split()))\n        ans = ['0' for _ in range(32)]\n        for i in range(32):\n            counter = 0\n            for element in arr:\n                if element[i] == '1':\n                    if counter == 0:\n                        counter += 1\n                    elif counter == 1:\n                        ans[i] = '1'\n                        break\n        print(int(''.join(ans), 2))\nmain()", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = []\n    for i in range(0, 32, 1):\n        res.append(0)\n    ans = 0\n    for i in range(0, 32, 1):\n        for j in range(n):\n            if arr[j] % 2 == 1:\n                res[i] = res[i] + 1\n            else:\n                res[i] = res[i]\n            arr[j] = arr[j] // 2\n    for i in range(0, len(res)):\n        if res[i] > 1:\n            ans = ans + 2 ** i\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = [int(i) for i in input().split()]\n    l = []\n    temp = 0\n    for i in range(n - 1):\n        temp = temp | p[n - i - 1]\n        l.append(temp)\n    temp = 0\n    for i in range(n - 1):\n        temp = temp | p[i] & l[n - i - 2]\n    print(temp)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    p = 1\n    for j in range(0, 32):\n        c = 0\n        for i in range(n):\n            if a[i] % 2 == 1:\n                c += 1\n            a[i] = a[i] // 2\n        if c > 1:\n            ans = ans + p\n        p *= 2\n    print(ans)", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ai = [0 for j in range(30)]\n    for j in a:\n        n = 0\n        while n < 31:\n            if j & 1 << 0 + n >= 1:\n                ai[n] += 1\n            n += 1\n    for k in range(30):\n        if ai[k] < 2:\n            ai[k] = 0\n        else:\n            ai[k] = 1\n    print(int(''.join(map(str, ai[::-1])), 2))\nfor _ in range(int(input())):\n    main()", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    Arr = [int(i) for i in input().split()]\n    pos = 1\n    ans = 0\n    for i in range(32):\n        count = 0\n        for j in range(len(Arr)):\n            if Arr[j] % 2 == 1:\n                count += 1\n            Arr[j] = Arr[j] // 2\n        if count > 1:\n            ans = ans + pos\n        pos = pos * 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    num_bits = [0] * 30\n    res = 0\n    for x in input().split():\n        a = int(x)\n        for j in range(len(num_bits)):\n            if a & 1 << j:\n                num_bits[j] += 1\n                if num_bits[j] == 2:\n                    res += 2 ** j\n    print(res)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = []\n    maxlen = 0\n    for each in A:\n        binary = bin(each)[2:]\n        B.append(binary)\n        if len(binary) > maxlen:\n            maxlen = len(binary)\n    for i in range(len(B)):\n        B[i] = '0' * (maxlen - len(B[i])) + B[i]\n    d = dict()\n    for i in range(maxlen):\n        d[i] = 0\n    final = ''\n    for each in B:\n        for i in range(maxlen):\n            if each[i] == '1':\n                d[i] += 1\n    for i in d.values():\n        if i > 1:\n            final += '1'\n        else:\n            final += '0'\n    print(int(final, 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    li = input().split()\n    for j in range(n):\n        li[j] = int(li[j])\n    m = [0] * 40\n    for j in range(n):\n        temp = bin(li[j])[2:]\n        for k in range(len(temp)):\n            m[-k - 1] = m[-k - 1] + int(temp[-k - 1])\n    ans = 0\n    for j in range(40):\n        if m[j] > 1:\n            ans = ans + 2 ** (40 - j - 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(32):\n        c = 0\n        for j in range(n):\n            if arr[j] % 2:\n                c += 1\n            arr[j] //= 2\n        if c > 1:\n            ans += 1 << i\n    print(ans)", "def solve(ar):\n    t = 0\n    ans = 0\n    for i in range(32):\n        t = 0\n        for x in ar:\n            if x & 1 << i:\n                t += 1\n        if t > 1:\n            ans |= 1 << i\n    return ans\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(solve(l))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    for i in range(30, -1, -1):\n        d[i] = 0\n    for bit in range(30, -1, -1):\n        for j in arr:\n            if 1 << bit & j:\n                d[bit] += 1\n    ans = 0\n    for i in range(30, -1, -1):\n        if d[i] > 1:\n            ans += 1 << i\n    print(ans)", "t = int(input())\nfor tc in range(0, t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    out = [0 for i in range(32)]\n    for j in range(len(arr)):\n        for i in range(32):\n            k = arr[j] >> i\n            if k & 1:\n                out[i] += 1\n    ans = 0\n    for i in range(32):\n        if out[i] > 1:\n            ans += pow(2, i)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = [0] * 32\n    l = list(map(int, input().split()))\n    for i in range(n):\n        for j in range(32):\n            if l[i] & 1 << j > 0:\n                x[j] += 1\n    ans = 0\n    for i in range(32):\n        if x[i] >= 2:\n            ans = ans | 1 << i\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    res = 0\n    for i in range(32, -1, -1):\n        cnt = 0\n        for j in range(n):\n            if a[j] & 1 << i:\n                cnt += 1\n        if cnt > 1:\n            res += pow(2, i)\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, list(input().split())))\n    arr = [0] * 35\n    for j in range(n):\n        count = 0\n        while l[j] > 0:\n            x = l[j] & 1\n            if x == 1:\n                arr[count] = arr[count] + 1\n            count = count + 1\n            l[j] = l[j] >> 1\n    ans = 0\n    for i in range(len(arr)):\n        if arr[i] > 1:\n            ans = ans + pow(2, i)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    o = 1\n    a = 0\n    for j in range(32):\n        c = 0\n        for k in range(n):\n            if arr[k] % 2 == 1:\n                c += 1\n            arr[k] = arr[k] // 2\n        if c > 1:\n            a += o\n        o *= 2\n    print(a)", "from functools import reduce\n\ndef till_or(arr):\n    ele_operated = []\n    till = None\n    for x in reversed(arr):\n        if not till:\n            till = x\n            continue\n        ele_operated.append(x & till)\n        till = till | x\n    return ele_operated\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    individual_ored = till_or(arr)\n    or_ans = reduce(lambda a, b: a | b, individual_ored)\n    print(or_ans)", "from functools import reduce\n\ndef till_or(arr):\n    ele_operated = []\n    till = None\n    for x in reversed(arr):\n        if not till:\n            till = x\n            continue\n        ele_operated.append(x & till)\n        till = till | x\n    return ele_operated\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    individual_ored = till_or(arr)\n    or_ans = reduce(lambda a, b: a | b, individual_ored)\n    print(or_ans)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    if n == 1:\n        print(l[0])\n    x = ans = 0\n    for i in range(n - 1, 0, -1):\n        x |= l[i]\n        ans |= l[i - 1] & x\n    print(ans)\n    t -= 1", "nn = int(input())\nfor i in range(nn):\n    p = int(input())\n    l = list(map(int, input().split()))\n    o = 1\n    a = 0\n    for j in range(32):\n        c = 0\n        for k in range(p):\n            if l[k] % 2 == 1:\n                c += 1\n            l[k] = l[k] // 2\n        if c > 1:\n            a += o\n        else:\n            pass\n        o *= 2\n    ppp = a\n    print(ppp)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    or_Array = [0] * len(a)\n    or_Array[n - 1] = a[n - 1]\n    for i in range(n - 2, 0, -1):\n        or_Array[i] = a[i] | or_Array[i + 1]\n    res = 0\n    for j in range(n - 2):\n        res = res | a[j] & or_Array[j + 1]\n    res = res | a[n - 1] & a[n - 2]\n    print(res)", "for t in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    suffixOR = [0]\n    for i in range(len(A) - 1, 0, -1):\n        suffixOR.append(suffixOR[-1] | A[i])\n    suffixOR.reverse()\n    ans = 0\n    for i in range(N - 1):\n        ans = ans | A[i] & suffixOR[i]\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    B = []\n    if n == 2:\n        print(A[1] & A[0])\n        continue\n    for i in range(n - 1, 0, -1):\n        if i == n - 1:\n            B.append(A[i])\n        else:\n            B.append(B[-1] | A[i])\n    ans = 0\n    for i in range(n - 1):\n        ans = ans | A[i] & B[-1]\n        B.pop()\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    c = a[0]\n    for i in range(1, n):\n        ans = ans | c & a[i]\n        c |= a[i]\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ma = format(max(l), 'b')\n    l1 = [0] * len(ma)\n    i = 0\n    for x in l:\n        a = format(x, 'b')\n        z = 0\n        for y in a[::-1]:\n            if y == '1':\n                if l1[z] == 2:\n                    pass\n                else:\n                    l1[z] += 1\n            z += 1\n    s = ''\n    for a in l1[::-1]:\n        if a <= 1:\n            s += '0'\n        else:\n            s += '1'\n    print(int(s, 2))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cn = 1\n    ans = 0\n    for j in range(32):\n        c = 0\n        for k in range(n):\n            if arr[k] % 2:\n                c += 1\n            arr[k] = arr[k] // 2\n        if c > 1:\n            ans += cn\n        cn *= 2\n    print(ans)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    arrA = [int(x) for x in input().split()]\n    BinArr = [0] * 32\n    for num in arrA:\n        i = -1\n        while i >= -32:\n            if num % 2 == 1:\n                BinArr[i] += 1\n            num = num // 2\n            i -= 1\n    sum = 0\n    for j in range(len(BinArr)):\n        if BinArr[j] >= 2:\n            sum += 2 ** (len(BinArr) - j - 1)\n    print(sum)"]