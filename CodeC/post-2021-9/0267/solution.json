["import math\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    if a <= 1 or b <= 1:\n        print(-1)\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "import math\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    if a <= 1 or b <= 1:\n        print(-1)\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "import math\n\ndef check(a, b):\n    if a == 1 or b == 1:\n        print('-1')\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)\nt = int(input())\nwhile t > 0:\n    (x, y) = map(int, input().split())\n    check(x, y)\n    t = t - 1", "from math import gcd\nfor t in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print('-1')\n    elif gcd(a, b) == 1:\n        print('1')\n    else:\n        print('0')", "import math\n\ndef check(a, b):\n    if a == 1 or b == 1:\n        print('-1')\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)\nt = int(input())\nwhile t > 0:\n    (x, y) = map(int, input().split())\n    check(x, y)\n    t = t - 1", "import math\n\ndef check(a, b):\n    if a == 1 or b == 1:\n        print('-1')\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)\nt = int(input())\nwhile t > 0:\n    (x, y) = map(int, input().split())\n    check(x, y)\n    t = t - 1", "import math\nt = int(input())\nfor x in range(t):\n    (a, b) = map(int, input().split())\n    if a <= 1 or b <= 1:\n        print(-1)\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "import math\nt = int(input())\nfor x in range(t):\n    (a, b) = map(int, input().split())\n    if a <= 1 or b <= 1:\n        print(-1)\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "import math\nt = int(input())\nfor x in range(t):\n    (a, b) = map(int, input().split(' '))\n    if a <= 1 or b <= 1:\n        print(-1)\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "import math\nt = int(input())\nfor x in range(t):\n    (a, b) = map(int, input().split(' '))\n    if a <= 1 or b <= 1:\n        print(-1)\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a <= 1 or b <= 1:\n        print(-1)\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "import math\nn = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split(' '))\n    if a <= 1 or b <= 1:\n        print(-1)\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a <= 1 or b <= 1:\n        print(-1)\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "from math import gcd\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a != 1 and b != 1:\n        if gcd(a, b) == 1:\n            print(1)\n        else:\n            print(0)\n    else:\n        print(-1)", "import math\nT = int(input())\nfor i in range(T):\n    (A, B) = map(int, input().split())\n    if A == 1 or B == 1:\n        print(-1)\n    elif math.gcd(A, B) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a != 1 and b != 1:\n        if gcd(a, b) == 1:\n            print('1')\n        else:\n            print('0')\n    else:\n        print('-1')", "from math import gcd\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a != 1 and b != 1:\n        if gcd(a, b) == 1:\n            print(1)\n        else:\n            print(0)\n    else:\n        print(-1)", "from math import gcd\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a != 1 and b != 1:\n        if gcd(a, b) == 1:\n            print(1)\n        else:\n            print(0)\n    else:\n        print(-1)", "from math import gcd\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a != 1 and b != 1:\n        if gcd(a, b) == 1:\n            print(1)\n        else:\n            print(0)\n    else:\n        print(-1)", "from math import gcd\nfor _ in range(int(input())):\n    (A, B) = map(int, input().split())\n    if A == 1 or B == 1:\n        print(-1)\n    elif gcd(A, B) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\ntests = int(input())\nfor i in range(tests):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nT = int(input())\nfor i in range(T):\n    (A, B) = map(int, input().split())\n    if A == 1 or B == 1:\n        print(-1)\n    elif math.gcd(A, B) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nfor _ in range(int(input())):\n    (A, B) = [int(s) for s in input().split()]\n    if A == 1 or B == 1:\n        print(-1)\n    elif gcd(A, B) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nt = int(input())\nfor j in range(t):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m == 1 or n == 1:\n        print(-1)\n    elif gcd(m, n) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nfor _ in range(int(input())):\n    (X, Y) = map(int, input().split(' '))\n    if X == 1 or Y == 1:\n        print(-1)\n    else:\n        G_XY = gcd(X, Y)\n        if G_XY != 1:\n            print(0)\n        else:\n            print(1)", "from math import gcd\nfor _ in range(int(input())):\n    (X, Y) = map(int, input().split(' '))\n    if X == 1 or Y == 1:\n        print(-1)\n    else:\n        G_XY = gcd(X, Y)\n        if G_XY != 1:\n            print(0)\n        else:\n            print(1)", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    k = math.gcd(a, b)\n    if a < 2 or b < 2:\n        print(-1)\n    elif k == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nt = int(input())\nfor j in range(t):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nt = int(input())\nfor j in range(t):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\n\ndef solution():\n    (A, B) = map(int, input().split())\n    if A < 2 or B < 2:\n        print(-1)\n    elif math.gcd(A, B) == 1:\n        print(1)\n    else:\n        print(0)\nT = int(input())\nfor _ in range(T):\n    solution()", "from math import gcd\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif gcd(a, b) != 1:\n        print(0)\n    else:\n        print(1)", "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\nT = int(input())\nfor _ in range(T):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "from math import gcd\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif gcd(a, b) != 1:\n        print(0)\n    else:\n        print(1)", "ll = lambda : map(int, input().split())\nt = lambda : int(input())\nss = lambda : input()\nlx = lambda x: map(int, input().split(x))\nyy = lambda : print('YES')\nnn = lambda : print('NO')\nfrom math import log10, log2, ceil, factorial as fac, gcd, inf, sqrt, log, floor\nfrom bisect import bisect_right as br, bisect_left as bl, insort\nfrom collections import Counter\nmod = 10 ** 9 + 7\n\ndef Nprime(n):\n    if n == 2 or n == 3:\n        return 0\n    if n == 1:\n        return 1\n    i = 2\n    while i * i <= n:\n        if n % i == 0:\n            return 1\n        i += 1\n    return 0\n\ndef sum_(a, n):\n    d = 4\n    s = n * (2 * a + (n - 1) * d) // 2\n    return s\n\ndef find(low, high, p, ans):\n    while low <= high:\n        mid = (low + high) // 2\n        temp = pow(mid, p)\n        if temp == ans:\n            return mid\n        elif temp > ans:\n            high = mid - 1\n        else:\n            low = mid + 1\n    return high\n\ndef max_(arr, n, k):\n    for i in range(k, n):\n        s -= arr[i - k]\n        s += arr[i]\n        ans = max(s, ans)\n    return ans\n\ndef f(x, y, m):\n    if y <= m and gcd(x, y) > 1:\n        return 1\n    return 0\nfor _ in range(t()):\n    (a, b) = ll()\n    if a == 1 or b == 1:\n        print(-1)\n        continue\n    if gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    r = math.gcd(a, b)\n    if a <= 1 or b <= 1:\n        print('-1')\n    elif r == 1:\n        print(1)\n    else:\n        print(0)", "import math\nT = int(input())\nfor i in range(T):\n    (x, y) = input().split()\n    (X, Y) = (max(int(x), int(y)), min(int(x), int(y)))\n    L = X / Y\n    if int(x) < 2 or int(y) < 2:\n        print(-1)\n    elif math.gcd(X, Y) != 1:\n        print(0)\n    else:\n        print(1)", "import math\nT = int(input())\nfor _ in range(T):\n    (A, B) = [int(x) for x in input().split()]\n    div = math.gcd(A, B)\n    if A < 2 or B < 2:\n        print('-1')\n    elif div == 1:\n        print(1)\n    else:\n        print(0)", "def gcd(x, y):\n    return gcd(y, x % y) if x % y else y\nfor _ in range(int(input())):\n    (A, B) = [int(x) for x in input().split()]\n    if 1 in [A, B]:\n        print(-1)\n    elif gcd(A, B) > 1:\n        print(0)\n    else:\n        print(1)", "from math import gcd\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a <= 1 or b <= 1:\n        print(-1)\n    elif gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nt = int(input())\nfor i in range(0, t):\n    (A, B) = map(int, input().split())\n    if A <= 1 or B <= 1:\n        print(-1)\n    elif math.gcd(A, B) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nt = int(input())\nfor i in range(t):\n    l = input().split()\n    a = int(l[0])\n    b = int(l[-1])\n    if a == 1 or b == 1:\n        print(-1)\n    elif gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nt = int(input())\nfor i in range(t):\n    n = input().split()\n    a = int(n[0])\n    b = int(n[1])\n    if a == 1 or b == 1:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print('-1')\n    elif math.gcd(a, b) == 1:\n        print('1')\n    else:\n        print('0')", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nfor _ in range(int(input())):\n    (i, j) = map(int, input().split(' '))\n    if i == 1 or j == 1:\n        print(-1)\n    else:\n        GCD_i_j = gcd(i, j)\n        if GCD_i_j != 1:\n            print(0)\n        else:\n            print(1)", "import math\nt = int(input())\nfor _ in range(t):\n    (p, q) = map(int, input().split())\n    r = math.gcd(p, q)\n    if p <= 1 or q <= 1:\n        print('-1')\n    elif r == 1:\n        print(1)\n    else:\n        print(0)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math as m\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print('-1')\n    elif m.gcd(a, b) == 1:\n        print('1')\n    else:\n        print('0')", "import math as m\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print('-1')\n    elif m.gcd(a, b) == 1:\n        print('1')\n    else:\n        print('0')", "import math as m\nfor _ in range(int(input())):\n    (a, b) = [int(i) for i in input().split()]\n    if a == 1 or b == 1:\n        print(-1)\n    elif m.gcd(a, b) != 1:\n        print(0)\n    else:\n        print(1)", "import math\n\ndef solve():\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    solve()", "import math\nt = int(input())\nfor _ in range(t):\n    (p, q) = map(int, input().split())\n    r = math.gcd(p, q)\n    if p <= 1 or q <= 1:\n        print('-1')\n    elif r == 1:\n        print(1)\n    else:\n        print(0)", "import math\nt = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    r = math.gcd(a, b)\n    if a == 1 or b == 1:\n        print(-1)\n    elif r == 1:\n        print(1)\n    else:\n        print(0)\n    t -= 1", "from math import gcd\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    g = gcd(a, b)\n    if a == 1 or b == 1:\n        print(-1)\n        continue\n    if g != 1:\n        print(0)\n    else:\n        print(1)", "from math import gcd\nq = int(input())\nfor i in range(q):\n    (x, y) = map(int, input().split())\n    g = gcd(x, y)\n    if x == 1 or y == 1:\n        print(-1)\n        continue\n    if g != 1:\n        print(0)\n    else:\n        print(1)", "from math import gcd\nfor _ in range(int(input())):\n    (X, Y) = map(int, input().split(' '))\n    if X == 1 or Y == 1:\n        print(-1)\n    else:\n        G_XY = gcd(X, Y)\n        if G_XY != 1:\n            print(0)\n        else:\n            print(1)", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import io, os, sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\nfrom math import gcd\nans = []\nfor _ in range(inp()):\n    (A, B) = inlt()\n    ans.append(-1 if 1 in [A, B] else 1 if gcd(A, B) == 1 else 0)\noutplt(ans)", "from math import gcd\nans = []\nfor _ in range(int(input())):\n    (A, B) = [int(x) for x in input().split()]\n    ans.append(-1 if 1 in [A, B] else 1 if gcd(A, B) == 1 else 0)\nprint(*ans, sep='\\n')", "def gcd(x, y):\n    return gcd(y, x % y) if x % y else y\nfor _ in range(int(input())):\n    (A, B) = [int(x) for x in input().split()]\n    if 1 in [A, B]:\n        print(-1)\n    else:\n        print(1 if gcd(A, B) == 1 else 0)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif math.gcd(a, b) > 1:\n        print(0)\n    else:\n        print(1)", "import math\n\ndef solution():\n    (A, B) = map(int, input().split())\n    if A < 2 or B < 2:\n        print(-1)\n    elif math.gcd(A, B) == 1:\n        print(1)\n    else:\n        print(0)\nT = int(input())\nwhile T > 0:\n    solution()\n    T -= 1", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print('-1')\n    elif math.gcd(a, b) == 1:\n        print('1')\n    else:\n        print('0')", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a <= 1 or b <= 1:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(-1 if min(a, b) < 2 else 0 if math.gcd(a, b) > 1 else 1)", "from math import *\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if min(a, b) <= 1:\n        print('-1')\n    elif gcd(a, b) > 1:\n        print('0')\n    else:\n        print('1')", "import math\ny = int(input())\nfor i in range(y):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nT = int(input())\nfor _ in range(T):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    if x < 2 or y < 2:\n        print(-1)\n    elif math.gcd(x, y) == 1:\n        print(1)\n    else:\n        print(0)", "def gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    else:\n        c = gcd(a, b)\n        if c == 1:\n            print(1)\n        else:\n            print(0)", "def gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    else:\n        c = gcd(a, b)\n        if c == 1:\n            print(1)\n        else:\n            print(0)", "import math\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    if x < 2 or y < 2:\n        print(-1)\n    elif math.gcd(x, y) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nT = int(input())\nwhile T:\n    arr = list(map(int, input().split()))\n    A = arr[0]\n    B = arr[1]\n    if A == 1 or B == 1:\n        print(-1)\n    elif math.gcd(A, B) > 1 or A == B:\n        print(0)\n    else:\n        print(1)\n    T -= 1", "import math\n\ndef solve():\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)\nt = int(input())\nfor i in range(t):\n    solve()", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "from math import gcd\nfor _ in range(int(input())):\n    (X, Y) = map(int, input().split(' '))\n    if X == 1 or Y == 1:\n        print(-1)\n    else:\n        G_XY = gcd(X, Y)\n        if G_XY != 1:\n            print(0)\n        else:\n            print(1)", "from math import gcd\n\ndef highest(num1, num2):\n    temp_var = gcd(num1, num2)\n    return temp_var\n\ndef check(num1, num2):\n    ini = num1\n    fin = num2\n    if ini == 1 or fin == 1:\n        print('-1')\n    elif highest(ini, fin) == 1:\n        print('1')\n    elif ini <= fin or fin <= ini:\n        print('0')\ntest_cses = int(input())\nfor ele in range(test_cses):\n    (ini, fin) = map(int, input().split())\n    check(ini, fin)", "import math\n\ndef solve(A, B):\n    if A == 1 or B == 1:\n        return -1\n    elif math.gcd(A, B) == 1:\n        return 1\n    else:\n        return 0\n\ndef main():\n    T = int(input())\n    for _ in range(T):\n        (A, B) = map(int, input().split())\n        ans = solve(A, B)\n        print(ans)\nmain()", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)", "import math\nt = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        print(-1)\n    elif math.gcd(a, b) == 1:\n        print(1)\n    else:\n        print(0)\n    t -= 1", "import math\nt = int(input())\nfor _ in range(t):\n    (a, b) = [int(i) for i in input().split()]\n    g = math.gcd(a, b)\n    if a == 1 or b == 1:\n        print('-1')\n    elif a % 2 == 0 and b % 2 == 0 or g > 1:\n        print('0')\n    else:\n        print('1')", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a < 2 or b < 2:\n        print('-1')\n    elif math.gcd(a, b) == 1:\n        print('1')\n    else:\n        print('0')", "import os, sys, math, cmath, time, collections\nfrom collections import deque, Counter, OrderedDict, defaultdict\nfrom heapq import nsmallest, nlargest, heapify, heappop, heappush, heapreplace\nfrom math import ceil, floor, log, log2, sqrt, gcd, factorial, pow, pi\nfrom bisect import bisect_left, bisect_right\nfrom functools import reduce\n\ndef input_as_array():\n    return list(map(int, input().split()))\nstart_time = time.time()\n\ndef main():\n    (a, b) = input_as_array()\n    if min(a, b) <= 1:\n        print(-1)\n        return\n    if gcd(a, b) > 1:\n        print(0)\n        return\n    else:\n        print(1)\n        return\nif os.path.exists('data.in'):\n    sys.stdin = open('data.in', 'r')\n    sys.stdout = open('data.out', 'w')\ntestcases = int(input())\nfor i in range(testcases):\n    main()\nif os.path.exists('data.in'):\n    print(f'Time Elapsed: {time.time() - start_time} seconds')\n    sys.stdout.close()", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    r = math.gcd(a, b)\n    if a <= 1 or b <= 1:\n        print('-1')\n    elif r == 1:\n        print(1)\n    else:\n        print(0)"]