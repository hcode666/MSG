["from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        print(0)\n        continue\n    temp = []\n    temp.append(arr[0])\n    total_ugliness = 0\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1]:\n            temp.append(arr[i + 1])\n            total_ugliness += 1\n    leni = len(temp)\n    dic = defaultdict(int)\n    for i in range(1, leni - 1):\n        if temp[i - 1] != temp[i + 1]:\n            dic[temp[i]] += 1\n        else:\n            dic[temp[i]] += 2\n    dic[temp[0]] += 1\n    dic[temp[-1]] += 1\n    for i in range(1, k + 1):\n        ans = total_ugliness - dic[i]\n        print(ans, end=' ')\n    print()", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        print(0)\n        continue\n    temp = []\n    temp.append(arr[0])\n    total_ugliness = 0\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1]:\n            temp.append(arr[i + 1])\n            total_ugliness += 1\n    leni = len(temp)\n    dic = defaultdict(int)\n    for i in range(1, leni - 1):\n        if temp[i - 1] != temp[i + 1]:\n            dic[temp[i]] += 1\n        else:\n            dic[temp[i]] += 2\n    dic[temp[0]] += 1\n    dic[temp[-1]] += 1\n    for i in range(1, k + 1):\n        ans = total_ugliness - dic[i]\n        print(ans, end=' ')\n    print()", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        print(0)\n        continue\n    temp = []\n    temp.append(arr[0])\n    total_ugliness = 0\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1]:\n            temp.append(arr[i + 1])\n            total_ugliness += 1\n    leni = len(temp)\n    dic = defaultdict(int)\n    for i in range(1, leni - 1):\n        if temp[i - 1] != temp[i + 1]:\n            dic[temp[i]] += 1\n        else:\n            dic[temp[i]] += 2\n    dic[temp[0]] += 1\n    dic[temp[-1]] += 1\n    for i in range(1, k + 1):\n        ans = total_ugliness - dic[i]\n        print(ans, end=' ')\n    print()", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        print(0)\n        continue\n    temp = [arr[0]]\n    total_ugliness = 0\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1]:\n            temp.append(arr[i + 1])\n            total_ugliness += 1\n    leni = len(temp)\n    dic = defaultdict(int)\n    for i in range(1, leni - 1):\n        dic[temp[i]] += 1 if temp[i - 1] != temp[i + 1] else 2\n    dic[temp[0]] += 1\n    dic[temp[-1]] += 1\n    print(*[total_ugliness - dic[i] for i in range(1, k + 1)])", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        print(0)\n        continue\n    temp = []\n    temp.append(arr[0])\n    total_ugliness = 0\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1]:\n            temp.append(arr[i + 1])\n            total_ugliness += 1\n    leni = len(temp)\n    dic = defaultdict(int)\n    for i in range(1, leni - 1):\n        if temp[i - 1] != temp[i + 1]:\n            dic[temp[i]] += 1\n        else:\n            dic[temp[i]] += 2\n    dic[temp[0]] += 1\n    dic[temp[-1]] += 1\n    for i in range(1, k + 1):\n        ans = total_ugliness - dic[i]\n        print(ans, end=' ')\n    print()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    v = {}\n    for i in range(1, k + 1):\n        v[i] = 0\n    b = [int(x) for x in input().split()]\n    if k == 1:\n        print(0)\n        continue\n    c = []\n    x = -1\n    for i in range(n):\n        if b[i] != x:\n            c.append(b[i])\n            x = b[i]\n    t = len(c) - 1\n    for j in range(len(c)):\n        if j == 0:\n            v[c[j]] += 1\n        elif j == len(c) - 1:\n            v[c[j]] += 1\n        elif c[j - 1] == c[j + 1]:\n            v[c[j]] += 2\n        else:\n            v[c[j]] += 1\n    for j in v.keys():\n        print(t - v[j], end=' ')\n    print()", "from sys import stdin\nrline = stdin.readline\nrfile = stdin.read\n\ndef rt(tip=int):\n    return tip(rline())\n\ndef rts(tip=int, way=rline):\n    return [tip(v) for v in way().split()]\n\ndef solve():\n    T = rt()\n    while T > 0:\n        T -= 1\n        (N, K) = rts()\n        A = []\n        p = -1\n        for v in rts():\n            if v != p:\n                A.append(v)\n                p = v\n        N = len(A)\n        born_after_remove = [0] * (K + 1)\n        current = [0] * (K + 1)\n        S = 0\n        for n in range(N - 1):\n            if n > 0:\n                born_after_remove[A[n]] += A[n - 1] != A[n + 1]\n            current[A[n]] += 1\n            current[A[n + 1]] += 1\n            S += 2\n        ret = [0] * (K + 1)\n        for k in range(1, K + 1):\n            ret[k] = (S - 2 * current[k]) // 2 + born_after_remove[k]\n        print(' '.join((str(ret[k]) for k in range(1, K + 1))))\nsolve()", "def SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p ** 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\nimport sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom collections import Counter\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nmod = 1000000007\nfor _ in range(int(input())):\n    (n, k) = mul()\n    t = seq()\n    if k == 1:\n        print(0)\n        continue\n    l = []\n    m = [0] * (k + 1)\n    x = -1\n    for i in range(n):\n        if t[i] != x:\n            l.append(t[i])\n            x = t[i]\n    u = len(l) - 1\n    c = Counter(l)\n    for i in range(1, len(l) - 1):\n        x = l[i]\n        if l[i - 1] == l[i + 1]:\n            m[x] += 1\n    for i in range(1, k + 1):\n        print(u - m[i] - c[i], end=' ')\n    print()", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, k) = list(map(int, sys.stdin.readline().split()))\n    case = list(map(int, sys.stdin.readline().split()))\n    if k == 1:\n        print(0)\n        continue\n    prev = -1\n    arr = []\n    ugly = -1\n    for c in case:\n        if c != prev:\n            arr.append(c)\n            prev = c\n            ugly += 1\n    out = [ugly] * k\n    for a in range(len(arr)):\n        before = arr[a - 1]\n        now = arr[a]\n        if a + 1 == len(arr):\n            nex = arr[0]\n        else:\n            nex = arr[a + 1]\n        if a == 0 or a == len(arr) - 1:\n            out[now - 1] -= 1\n        elif before == nex:\n            out[now - 1] -= 2\n        else:\n            out[now - 1] -= 1\n    sys.stdout.write(str(' '.join(list(map(str, out)))) + '\\n')", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    d = defaultdict(list)\n    for i in range(k):\n        d[i + 1] = [0, 0]\n    l = -1\n    c = 0\n    for i in range(n - 1):\n        if A[i] != A[i + 1]:\n            if l == A[i + 1]:\n                d[A[i]][1] += 1\n            else:\n                d[A[i]][0] += 1\n            c += 1\n            l = A[i]\n    if c >= 1:\n        d[A[-1]][0] += 1\n    ans = []\n    for i in range(k):\n        ans.append(c - d[i + 1][0] - d[i + 1][1] * 2)\n    print(*ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    prev = -1\n    now = -1\n    next = -1\n    same = 0\n    value = [0] * k\n    for i in range(n - 1):\n        index = n - i - 1\n        now = l[index]\n        next = l[index - 1]\n        if prev != -1 and prev != next and (next != now) and (now != prev):\n            value[now - 1] -= 1\n        if now != next:\n            value[now - 1] += 1\n            value[next - 1] += 1\n            prev = now\n        else:\n            same += 1\n    for i in value:\n        print(n - i - 1 - same, end=' ')\n    print()", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    A = list(map(int, input().split())) + ['#']\n    B = ['#']\n    for i in range(1, N + 1):\n        if A[i] != A[i - 1]:\n            B.append(A[i - 1])\n    B.append('#')\n    ht = {}\n    for i in range(1, len(B) - 1):\n        if B[i] not in ht:\n            ht[B[i]] = 0\n        if B[i - 1] != B[i + 1]:\n            ht[B[i]] += 1\n        else:\n            ht[B[i]] += 2\n    if K == 1:\n        print(0)\n    else:\n        print(' '.join([str(len(B) - 3 - ht[k + 1]) for k in range(K)]))", "t = int(input())\nfor tt in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        print(0)\n        continue\n    elif k == 2:\n        print('0 0')\n        continue\n    brr = [arr[0]]\n    count = 0\n    for i in range(1, n):\n        if arr[i] != arr[i - 1]:\n            brr.append(arr[i])\n            count += 1\n    temp = {}\n    if n > 1:\n        if brr[0] != brr[1]:\n            temp[brr[0]] = 1\n    for i in range(1, len(brr) - 1):\n        if brr[i - 1] != brr[i + 1]:\n            if brr[i] not in temp.keys():\n                temp[brr[i]] = 1\n            else:\n                temp[brr[i]] += 1\n        elif brr[i] not in temp.keys():\n            temp[brr[i]] = 2\n        else:\n            temp[brr[i]] += 2\n    m = len(brr)\n    if brr[m - 1] != brr[m - 2]:\n        if brr[m - 1] not in temp.keys():\n            temp[brr[m - 1]] = 1\n        else:\n            temp[brr[m - 1]] += 1\n    result = []\n    for i in range(k):\n        result.append(count - temp[i + 1])\n    print(*result)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ugly = [0] * k\n    prev = -1\n    same = 0\n    for i in range(n - 1):\n        if prev != -1 and prev != a[i + 1] and (a[i + 1] != a[i]) and (prev != a[i]):\n            ugly[a[i] - 1] -= 1\n        if a[i] != a[i + 1]:\n            ugly[a[i] - 1] += 1\n            ugly[a[i + 1] - 1] += 1\n            prev = a[i]\n        elif a[i] == a[i + 1]:\n            same += 1\n    ugly = [n - i - 1 - same for i in ugly]\n    print(*ugly)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ugly = [0] * k\n    prev = -1\n    same = 0\n    for i in range(n - 1):\n        if prev != -1 and prev != a[n - i - 2] and (a[n - i - 2] != a[n - i - 1]) and (prev != a[n - i - 1]):\n            ugly[a[n - i - 1] - 1] -= 1\n        if a[n - i - 1] != a[n - i - 2]:\n            ugly[a[n - i - 1] - 1] += 1\n            ugly[a[n - i - 2] - 1] += 1\n            prev = a[n - i - 1]\n        elif a[n - i - 1] == a[n - i - 2]:\n            same += 1\n    ugly = [n - i - 1 - same for i in ugly]\n    print(*ugly)", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, t) = map(int, input().split())\n    a = list(map(int, input().split()))\n    f = defaultdict(list)\n    for i in range(t):\n        f[i + 1] = [0, 0]\n    l = -1\n    c = 0\n    for i in range(n - 1):\n        if a[i] != a[i + 1]:\n            if l == a[i + 1]:\n                f[a[i]][1] += 1\n            else:\n                f[a[i]][0] += 1\n            l = a[i]\n            c += 1\n    if c >= 1:\n        f[a[n - 1]][0] += 1\n    for i in range(t):\n        print(c - (f[i + 1][0] + f[i + 1][1] * 2), end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    prev = -1\n    now = -1\n    nxt = -1\n    ans = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        now = arr[ind]\n        nxt = arr[ind - 1]\n        if prev != -1 and prev != nxt and (nxt != now) and (prev != now):\n            key[now - 1] -= 1\n        if now != nxt:\n            key[now - 1] += 1\n            key[nxt - 1] += 1\n            prev = now\n        elif now == nxt:\n            ans += 1\n    for i in key:\n        print(n - i - 1 - ans, end=' ')\n    print('\\n')", "import math\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    prev = l[0]\n    ind = 0\n    d = {}\n    for i in range(n):\n        if l[i] == prev:\n            continue\n        else:\n            p = [ind, i - 1]\n            if prev in d:\n                d[prev].append(p)\n            else:\n                d[prev] = [p]\n            prev = l[i]\n            ind = i\n    p = [ind, n - 1]\n    if prev in d:\n        d[prev].append(p)\n    else:\n        d[prev] = [p]\n    prev = l[n - 1]\n    ind = n - 1\n    ugli = 0\n    for i in range(1, n):\n        if l[i] != l[i - 1]:\n            ugli += 1\n    ans = []\n    for i in range(1, k + 1):\n        u = ugli\n        for j in d[i]:\n            x = j[0]\n            y = j[1]\n            if x == 0 or y == n - 1:\n                u = u - 1\n            elif l[x - 1] == l[y + 1]:\n                u = u - 2\n            else:\n                u = u - 1\n        ans.append(u)\n    if k == 1:\n        print(0)\n    else:\n        print(*ans)", "import math\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    prev = l[0]\n    ind = 0\n    d = {}\n    for i in range(n):\n        if l[i] == prev:\n            continue\n        else:\n            p = [ind, i - 1]\n            if prev in d:\n                d[prev].append(p)\n            else:\n                d[prev] = [p]\n            prev = l[i]\n            ind = i\n    p = [ind, n - 1]\n    if prev in d:\n        d[prev].append(p)\n    else:\n        d[prev] = [p]\n    prev = l[n - 1]\n    ind = n - 1\n    ugli = 0\n    for i in range(1, n):\n        if l[i] != l[i - 1]:\n            ugli += 1\n    ans = []\n    for i in range(1, k + 1):\n        u = ugli\n        for j in d[i]:\n            x = j[0]\n            y = j[1]\n            if x == 0 or y == n - 1:\n                u = u - 1\n            elif l[x - 1] == l[y + 1]:\n                u = u - 2\n            else:\n                u = u - 1\n        ans.append(u)\n    if k == 1:\n        print(0)\n    else:\n        print(*ans)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    p = []\n    q = []\n    p.append(arr[0])\n    ugli = 0\n    for i in range(1, n):\n        if arr[i - 1] != arr[i]:\n            p.append(arr[i])\n    for i in range(1, len(p)):\n        if p[i - 1] != p[i]:\n            ugli += 1\n    for i in range(k + 1):\n        q.append(ugli)\n    for i in range(len(p)):\n        if i + 1 < len(p):\n            q[p[i]] = q[p[i]] - 1\n        if i - 1 >= 0:\n            q[p[i]] = q[p[i]] - 1\n        if i - 1 >= 0 and i + 1 < len(p) and (p[i + 1] != p[i - 1]):\n            q[p[i]] = q[p[i]] + 1\n    for i in range(1, k + 1):\n        print(q[i], end=' ')\n    print('')\n    t = t - 1", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    cur = 0\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            cur += 1\n    x = [0] * (k + 1)\n    last = -1\n    for i in range(n):\n        if i > 0 and a[i] != a[i - 1]:\n            x[a[i]] += 1\n            if a[i] == last or last == -1:\n                x[a[i - 1]] += 1\n            last = a[i - 1]\n    x = x[1:]\n    for i in range(k):\n        x[i] = cur - x[i]\n    print(*x)", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    f = defaultdict(list)\n    for i in range(m):\n        f[i + 1] = [0, 0]\n    l = -1\n    c = 0\n    for i in range(n - 1):\n        if a[i] != a[i + 1]:\n            if a[i + 1] == l:\n                f[a[i]][1] += 1\n            else:\n                f[a[i]][0] += 1\n            l = a[i]\n            c += 1\n    if c >= 1:\n        f[a[n - 1]][0] += 1\n    for i in range(m):\n        print(c - (f[i + 1][0] + f[i + 1][1] * 2), end=' ')\n    print()", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    f = defaultdict(list)\n    for i in range(m):\n        f[i + 1] = [0, 0]\n    l = -1\n    c = 0\n    for i in range(n - 1):\n        if a[i] != a[i + 1]:\n            if a[i + 1] == l:\n                f[a[i]][1] += 1\n            else:\n                f[a[i]][0] += 1\n            l = a[i]\n            c += 1\n    if c >= 1:\n        f[a[n - 1]][0] += 1\n    for i in range(m):\n        print(c - (f[i + 1][0] + f[i + 1][1] * 2), end=' ')\n    print()", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, t) = map(int, input().split())\n    a = list(map(int, input().split()))\n    f = defaultdict(list)\n    for i in range(t):\n        f[i + 1] = [0, 0]\n    l = -1\n    c = 0\n    for i in range(n - 1):\n        if a[i] != a[i + 1]:\n            if l == a[i + 1]:\n                f[a[i]][1] += 1\n            else:\n                f[a[i]][0] += 1\n            l = a[i]\n            c += 1\n    if c >= 1:\n        f[a[n - 1]][0] += 1\n    for i in range(t):\n        print(c - (f[i + 1][0] + f[i + 1][1] * 2), end=' ')\n    print()", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    Prev = -1\n    Now = -1\n    Next = -1\n    same = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - n - 1\n        Now = arr[ind]\n        Next = arr[ind - 1]\n        if Prev != -1 and Prev != Next and (Next != Now) and (Prev != Now):\n            key[Now - 1] -= 1\n        if Now != Next:\n            key[Now - 1] += 1\n            key[Next - 1] += 1\n            Prev = Now\n        elif Now == Next:\n            same += 1\n    for i in key:\n        print(n - i - 1 - same, end=' ')\n    print()\n    t -= 1", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    Prev = -1\n    Now = -1\n    Next = -1\n    same = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - n - 1\n        Now = arr[ind]\n        Next = arr[ind - 1]\n        if Prev != -1 and Prev != Next and (Next != Now) and (Prev != Now):\n            key[Now - 1] -= 1\n        if Now != Next:\n            key[Now - 1] += 1\n            key[Next - 1] += 1\n            Prev = Now\n        elif Now == Next:\n            same += 1\n    for i in key:\n        print(n - i - 1 - same, end=' ')\n    print()\n    t -= 1", "t = int(input())\nwhile t:\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A1 = [A[0]]\n    total = 0\n    for i in range(N - 1):\n        if A[i] == A[i + 1]:\n            continue\n        else:\n            A1.append(A[i + 1])\n            total += 1\n    d = {}\n    for i in range(1, len(A1) - 1):\n        if A1[i - 1] != A1[i + 1]:\n            if A1[i] in d.keys():\n                d[A1[i]] += 1\n            else:\n                d[A1[i]] = 1\n        elif A1[i] in d.keys():\n            d[A1[i]] += 2\n        else:\n            d[A1[i]] = 2\n    if A1[0] in d.keys():\n        d[A1[0]] += 1\n    else:\n        d[A1[0]] = 1\n    if A1[-1] in d.keys():\n        d[A1[-1]] += 1\n    else:\n        d[A1[-1]] = 1\n    if len(A1) == 1:\n        print(0)\n    else:\n        for i in range(1, K + 1):\n            print(total - d[i], end=' ')\n    print('\\n')\n    t -= 1", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    Prev = -1\n    Now = -1\n    Next = -1\n    same = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        Now = arr[ind]\n        Next = arr[ind - 1]\n        if Prev != -1 and Prev != Next and (Next != Now) and (Prev != Now):\n            key[Now - 1] -= 1\n        if Now != Next:\n            key[Now - 1] += 1\n            key[Next - 1] += 1\n            Prev = Now\n        elif Now == Next:\n            same += 1\n    for i in key:\n        print(n - 1 - i - same, end=' ')\n    print()\n    t -= 1", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    Prev = -1\n    Now = -1\n    Next = -1\n    same = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        Now = arr[ind]\n        Next = arr[ind - 1]\n        if Prev != -1 and Prev != Next and (Next != Now) and (Prev != Now):\n            key[Now - 1] -= 1\n        if Now != Next:\n            key[Now - 1] += 1\n            key[Next - 1] += 1\n            Prev = Now\n        elif Now + +Next:\n            same += 1\n    for i in key:\n        print(n - i - 1 - same, end=' ')\n    print()\n    t -= 1", "def ugly(s):\n    res = 0\n    for i in range(len(s) - 1):\n        if s[i] != s[i + 1]:\n            res += 1\n    return res\nt = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    mapp = dict()\n    stk = [s[0]]\n    mapp[s[0]] = 1\n    for i in range(1, n):\n        if stk[-1] != s[i]:\n            stk.append(s[i])\n            if s[i] in mapp:\n                mapp[s[i]] += 1\n            else:\n                mapp[s[i]] = 1\n    l = len(stk) - 1\n    totalUgly = l\n    if k > 100:\n        for i in range(1, l):\n            if stk[i - 1] == stk[i + 1]:\n                mapp[stk[i]] += 1\n        for i in range(1, k + 1):\n            print(totalUgly - mapp[i], end=' ')\n    else:\n        for i in range(1, k + 1):\n            temp = [j for j in stk if j != i]\n            try:\n                while True:\n                    temp.remove(i)\n            except:\n                pass\n            print(ugly(temp), end=' ')\n    print()\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    i = 0\n    while i < n and l[i] == l[0]:\n        i += 1\n    d = {}\n    c = 0\n    for j in range(1, n):\n        if l[j] != l[j - 1]:\n            c += 1\n    if i < n:\n        d[l[i - 1]] = -1\n    while i < n:\n        y = l[i - 1]\n        x = l[i]\n        while i < n and l[i] == x:\n            i += 1\n        r = 0\n        if i < n and l[i] == y:\n            r = 2\n        else:\n            r = 1\n        if x in d:\n            d[x] -= r\n        else:\n            d[x] = -r\n    for j in range(1, k + 1):\n        if j in d:\n            print(c + d[j], end=' ')\n        else:\n            print(c, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        print(0)\n        continue\n    brr = [0]\n    c = [arr[0]]\n    for i in range(1, n):\n        if arr[i] != arr[i - 1]:\n            c.append(arr[i])\n    x = len(c)\n    ugle = x - 1\n    for i in range(1, x - 1):\n        if c[i - 1] == c[i + 1]:\n            brr.append(1)\n        else:\n            brr.append(-1)\n    dic = {}\n    for i in range(x):\n        if c[i] in dic.keys():\n            dic[c[i]].append(i)\n        else:\n            dic[c[i]] = [i]\n    ans = [0 for i in range(k)]\n    for i in range(1, k + 1):\n        u = ugle\n        for j in dic[i]:\n            if j == 0 or j == x - 1:\n                u -= 1\n            elif brr[j] == 1:\n                u -= 2\n            else:\n                u -= 1\n        ans[i - 1] = u\n    for i in range(k):\n        print(ans[i], end=' ')\n    print()", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    Prev = -1\n    Now = -1\n    Next = -1\n    same = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        Now = arr[ind]\n        Next = arr[ind - 1]\n        if Prev != -1 and Prev != Next and (Next != Now) and (Prev != Now):\n            key[Now - 1] -= 1\n        if Now != Next:\n            key[Now - 1] += 1\n            key[Next - 1] += 1\n            Prev = Now\n        elif Now + +Next:\n            same += 1\n    for i in key:\n        print(n - i - 1 - same, end=' ')\n    print()\n    t -= 1", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    Prev = -1\n    Now = -1\n    Next = -1\n    same = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        Now = arr[ind]\n        Next = arr[ind - 1]\n        if Prev != -1 and Prev != Next and (Next != Now) and (Prev != Now):\n            key[Now - 1] -= 1\n        if Now != Next:\n            key[Now - 1] += 1\n            key[Next - 1] += 1\n            Prev = Now\n        elif Now == Next:\n            same += 1\n    for i in key:\n        print(n - 1 - i - same, end=' ')\n    print()\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    i = 0\n    while i < n and l[i] == l[0]:\n        i += 1\n    d = {}\n    c = 0\n    for j in range(1, n):\n        if l[j] != l[j - 1]:\n            c += 1\n    if i < n:\n        d[l[i - 1]] = -1\n    while i < n:\n        y = l[i - 1]\n        x = l[i]\n        while i < n and l[i] == x:\n            i += 1\n        r = 0\n        if i < n and l[i] == y:\n            r = 2\n        else:\n            r = 1\n        if x in d:\n            d[x] -= r\n        else:\n            d[x] = -r\n    for j in range(1, k + 1):\n        if j in d:\n            print(c + d[j], end=' ')\n        else:\n            print(c, end=' ')\n    print()", "from bisect import *\nfrom collections import *\nfrom sys import stdin, stdout\nfrom queue import *\nfrom itertools import *\nfrom heapq import *\nfrom random import *\nfrom statistics import *\nfrom math import *\nfrom re import *\nimport array\nimport operator\nfrom copy import *\nlines = stdin.readlines()\nout = stdout.write\nlines.reverse()\n\ndef input():\n    return lines.pop().strip('\\n')\n\ndef readIntList():\n    return list(map(int, input().split()))\n\ndef readStrList():\n    return list(map(str, input().split()))\n\ndef binary_search(arr, value, l, h):\n    k = bisect_left(arr, value, l, h)\n    if k != h and arr[k] == value:\n        return True\n    return False\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    vis = []\n    ans = defaultdict(int)\n    i = 0\n    for (i, j) in groupby(arr):\n        vis.append(i)\n    for i in range(len(vis)):\n        if i == 0:\n            ans[vis[0]] += 1\n        elif i == len(vis) - 1:\n            ans[vis[len(vis) - 1]] += 1\n        elif vis[i - 1] == vis[i + 1]:\n            ans[vis[i]] += 2\n        else:\n            ans[vis[i]] += 1\n    cnt = len(vis) - 1\n    if k == 1:\n        print('0')\n        continue\n    for i in range(k):\n        print(cnt - ans[i + 1], end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    prev = -1\n    now = -1\n    nxt = -1\n    ans = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        now = arr[ind]\n        nxt = arr[ind - 1]\n        if prev != -1 and prev != nxt and (nxt != now) and (prev != now):\n            key[now - 1] -= 1\n        if now != nxt:\n            key[now - 1] += 1\n            key[nxt - 1] += 1\n            prev = now\n        elif now == nxt:\n            ans += 1\n    for i in key:\n        print(n - i - 1 - ans, end=' ')\n    print('\\n')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    i = 0\n    while i < n and l[i] == l[0]:\n        i += 1\n    d = {}\n    c = 0\n    for j in range(1, n):\n        if l[j] != l[j - 1]:\n            c += 1\n    if i < n:\n        d[l[i - 1]] = -1\n    while i < n:\n        y = l[i - 1]\n        x = l[i]\n        while i < n and l[i] == x:\n            i += 1\n        r = 0\n        if i < n and l[i] == y:\n            r = 2\n        else:\n            r = 1\n        if x in d:\n            d[x] -= r\n        else:\n            d[x] = -r\n    for j in range(1, k + 1):\n        if j in d:\n            print(c + d[j], end=' ')\n        else:\n            print(c, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    prev = -1\n    now = -1\n    nxt = -1\n    ans = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        now = arr[ind]\n        nxt = arr[ind - 1]\n        if prev != -1 and prev != nxt and (nxt != now) and (prev != now):\n            key[now - 1] -= 1\n        if now != nxt:\n            key[now - 1] += 1\n            key[nxt - 1] += 1\n            prev = now\n        elif now == nxt:\n            ans += 1\n    for i in key:\n        print(n - i - 1 - ans, end=' ')\n    print()", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    Prev = -1\n    Now = -1\n    Next = -1\n    same = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        Now = arr[ind]\n        Next = arr[ind - 1]\n        if Prev != -1 and Prev != Next and (Next != Now) and (Prev != Now):\n            key[Now - 1] -= 1\n        if Now != Next:\n            key[Now - 1] += 1\n            key[Next - 1] += 1\n            Prev = Now\n        elif Now == Next:\n            same += 1\n    for i in key:\n        print(n - 1 - i - same, end=' ')\n    print()\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    prev = -1\n    now = -1\n    nxt = -1\n    same = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        now = arr[ind]\n        nxt = arr[ind - 1]\n        if prev != -1 and prev != nxt and (nxt != now) and (prev != now):\n            key[now - 1] -= 1\n        if now != nxt:\n            key[now - 1] += 1\n            key[nxt - 1] += 1\n            prev = now\n        elif now == nxt:\n            same += 1\n    for i in key:\n        print(n - i - 1 - same, end=' ')\n    print()", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    st = []\n    newlis = []\n    for i in range(n - 1):\n        if lis[i] != lis[i + 1]:\n            newlis.append(lis[i])\n    newlis.append(lis[-1])\n    nnew = len(newlis)\n    res = [nnew - 1] * (k + 1)\n    if nnew == 1:\n        print(0)\n    else:\n        for i in range(nnew - 2):\n            if newlis[i] == newlis[i + 2]:\n                res[newlis[i + 1]] -= 2\n            else:\n                res[newlis[i + 1]] -= 1\n        res[newlis[0]] -= 1\n        res[newlis[-1]] -= 1\n        print(*res[1:])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.append('#')\n    ans = []\n    for i in range(n):\n        if arr[i] != arr[i + 1]:\n            ans.append(arr[i])\n    n = len(ans)\n    check = [0] * (k + 2)\n    for i in range(1, n):\n        if i == 1:\n            (p1, p2) = (min(ans[i], ans[i - 1]), max(ans[i], ans[i - 1]))\n            if p1 + 1 == p2:\n                check[0] += 1\n                check[p1] -= 1\n                check[p2 + 1] += 1\n            else:\n                check[0] += 1\n                check[p1] -= 1\n                check[p1 + 1] += 1\n                check[p2] -= 1\n                check[p2 + 1] += 1\n        elif ans[i] == ans[i - 2]:\n            (p1, p2) = (min(ans[i], ans[i - 1]), max(ans[i], ans[i - 1]))\n            if p1 + 1 == p2:\n                check[0] += 1\n                check[p1] -= 1\n                check[p2 + 1] += 1\n            else:\n                check[0] += 1\n                check[p1] -= 1\n                check[p1 + 1] += 1\n                check[p2] -= 1\n                check[p2 + 1] += 1\n        else:\n            p1 = ans[i]\n            check[0] += 1\n            check[p1] -= 1\n            check[p1 + 1] += 1\n    for i in range(1, k + 2):\n        check[i] += check[i - 1]\n    print(*check[1:k + 1])", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    Prev = -1\n    Now = -1\n    Next = -1\n    Same = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        Now = arr[ind]\n        Next = arr[ind - 1]\n        if Prev != -1 and Prev != Next and (Next != Now) and (Prev != Now):\n            key[Now - 1] -= 1\n        if Now != Next:\n            key[Now - 1] += 1\n            key[Next - 1] += 1\n            Prev = Now\n        elif Now == Next:\n            Same += 1\n    for i in key:\n        print(n - 1 - i - Same, end=' ')\n    print()\n    t -= 1", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    Prev = -1\n    Now = -1\n    Next = -1\n    Same = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        Now = arr[ind]\n        Next = arr[ind - 1]\n        if Prev != -1 and Prev != Next and (Next != Now) and (Prev != Now):\n            key[Now - 1] -= 1\n        if Now != Next:\n            key[Now - 1] += 1\n            key[Next - 1] += 1\n            Prev = Now\n        elif Now == Next:\n            Same += 1\n    for i in key:\n        print(n - 1 - i - Same, end=' ')\n    print()\n    t -= 1", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    prev = -1\n    now = -1\n    same = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        now = arr[ind]\n        next = arr[ind - 1]\n        if prev != -1 and prev != next and (next != now) and (prev != now):\n            key[now - 1] -= 1\n        if now != next:\n            key[now - 1] += 1\n            key[next - 1] += 1\n            prev = now\n        elif now == next:\n            same += 1\n    for i in key:\n        print(n - 1 - i - same, end=' ')\n    print()\n    t -= 1", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [a[0]]\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            continue\n        else:\n            b.append(a[i])\n    us = len(b) - 1\n    ct = defaultdict(int)\n    for b_i in b:\n        ct[b_i] += 1\n    usr = defaultdict(int)\n    for i in range(len(b)):\n        if i + 1 < len(b) and i - 1 >= 0 and (b[i - 1] == b[i + 1]):\n            usr[b[i]] += 2\n        else:\n            usr[b[i]] += 1\n    if k == 1:\n        print(0)\n    else:\n        print(' '.join((str(us - usr[i]) for i in range(1, k + 1))))", "def funcx(n, k, l1):\n    if k == 1:\n        print(0)\n        return\n    if k == 2:\n        print(0, 0)\n        return\n    if k == n:\n        for i in range(n):\n            print(k - 2, end=' ')\n        print()\n        return\n    else:\n        d1 = {}\n        d2 = {}\n        ld = -1\n        i = 1\n        t = 0\n        while i < n:\n            if l1[i] != l1[i - 1]:\n                d1[l1[i]] = d1.get(l1[i], 0) + 1\n                d1[l1[i - 1]] = d1.get(l1[i - 1], 0) + 1\n                t += 1\n                if l1[i] != ld and ld != -1:\n                    d2[l1[i - 1]] = d2.get(l1[i - 1], 0) + 1\n                ld = l1[i - 1]\n            i += 1\n        arr = [t for i in range(k)]\n        for i in d1:\n            arr[i - 1] -= d1[i]\n        for i in d2:\n            arr[i - 1] += d2[i]\n        print(*arr)\n        return\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l1 = [int(i) for i in input().split()]\n    funcx(n, k, l1)", "from collections import Counter\n\ndef solve():\n    (size, K) = map(int, input().split())\n    array = list(map(int, input().split()))\n    dict = {}\n    k1 = Counter(array)\n    for i in range(size):\n        try:\n            if dict[array[i]][-1][1] == i - 1:\n                dict[array[i]][-1][1] = i\n            else:\n                dict[array[i]].append([i, i])\n        except:\n            dict[array[i]] = [[i, i]]\n    match = [0 for i in range(K + 1)]\n    total = 0\n    for i in range(1, size):\n        if array[i] == array[i - 1]:\n            total += 1\n            match[array[i - 1]] += 1\n    output = []\n    for i in range(1, K + 1):\n        ans = total - match[i]\n        if size - k1[i] == 0:\n            output.append(0)\n        else:\n            for j in range(len(dict[i])):\n                if dict[i][j][0] > 0 and dict[i][j][1] < size - 1:\n                    if array[dict[i][j][0] - 1] == array[dict[i][j][1] + 1]:\n                        ans += 1\n            output.append(size - k1[i] - 1 - ans)\n    return output\nremained_test_cases = 1\nremained_test_cases = int(input())\nwhile remained_test_cases > 0:\n    print(*solve())\n    remained_test_cases -= 1", "import sys\ninput = sys.stdin.readline\nri = lambda : int(input())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input().strip('\\r\\n')\n\ndef solve():\n    (n, k) = rl()\n    a = rl()\n    ans = [0] * k\n    t = l = r = 0\n    for i in range(n):\n        if a[i] == a[r]:\n            r = i\n            continue\n        t += 1\n        ans[a[i] - 1] += 1\n        ans[a[r] - 1] += 1\n        if l > 0 and l < n - 1 and (a[l - 1] != a[r + 1]):\n            ans[a[r] - 1] -= 1\n        l = r = i\n    for i in range(k):\n        ans[i] = t - ans[i]\n    return ans\nfor _ in range(ri()):\n    print(*solve())", "from bisect import *\nfrom collections import *\nfrom sys import stdin, stdout\nfrom queue import *\nfrom itertools import *\nfrom heapq import *\nfrom random import *\nfrom statistics import *\nfrom math import *\nfrom re import *\nimport array\nimport operator\nfrom copy import *\nlines = stdin.readlines()\nout = stdout.write\nlines.reverse()\n\ndef input():\n    return lines.pop().strip('\\n')\n\ndef readIntList():\n    return list(map(int, input().split()))\n\ndef readStrList():\n    return list(map(str, input().split()))\n\ndef binary_search(arr, value, l, h):\n    k = bisect_left(arr, value, l, h)\n    if k != h and arr[k] == value:\n        return True\n    return False\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    vis = []\n    ans = defaultdict(int)\n    i = 0\n    for (i, j) in groupby(arr):\n        vis.append(i)\n    for i in range(len(vis)):\n        if i == 0:\n            ans[vis[0] - 1] += 1\n        elif i == len(vis) - 1:\n            ans[vis[len(vis) - 1] - 1] += 1\n        elif vis[i - 1] == vis[i + 1]:\n            ans[vis[i] - 1] += 2\n        else:\n            ans[vis[i] - 1] += 1\n    cnt = 0\n    for i in range(1, len(vis)):\n        if vis[i] != vis[i - 1]:\n            cnt += 1\n    if k == 1:\n        print('0')\n        continue\n    for i in range(k):\n        print(cnt - ans[i], end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    a = list((int(i) for i in input().split()))\n    if n < 1000:\n        for j in range(1, k + 1):\n            new = []\n            for l in a:\n                if l != j:\n                    new.append(l)\n            ugliness = 0\n            if len(new) == 0:\n                print(ugliness, end=' ')\n                continue\n            last = new[0]\n            for l in new:\n                if l != last:\n                    last = l\n                    ugliness += 1\n            print(ugliness, end=' ')\n        print()\n        continue\n    ugl_sum = list([0 for i in range(k)])\n    if len(a) >= 2:\n        if a[0] != a[1]:\n            ugl_sum[a[0] - 1] += 1\n        if a[-1] != a[-2]:\n            ugl_sum[a[-1] - 1] += 1\n    else:\n        print(0)\n        continue\n    for j in range(1, n - 1):\n        if a[j] != a[j - 1]:\n            ugl_sum[a[j] - 1] += 1\n        index = j\n        while a[index] == a[index - 1]:\n            if index == 1:\n                break\n            index -= 1\n        else:\n            if a[index - 1] == a[j + 1]:\n                ugl_sum[a[j] - 1] += 1\n    ugliness = 0\n    for j in range(n - 1):\n        if a[j] != a[j - 1]:\n            ugliness += 1\n    for j in ugl_sum:\n        print(ugliness - j, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    d = {}\n    c = {}\n    fin = []\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    f = []\n    s = 0\n    f.append(l[0])\n    for j in range(len(l)):\n        if l[j] != f[-1]:\n            f.append(l[j])\n    for j in f:\n        if j not in d.keys():\n            d[j] = 1\n        else:\n            d[j] += 1\n    for j in range(1, b + 1):\n        c[j] = 0\n    for j in range(2, len(f)):\n        if f[j] == f[j - 2]:\n            c[f[j - 1]] += 1\n    for j in d.keys():\n        s += d[j]\n    for j in range(1, b + 1):\n        pr1 = s - d[j]\n        pr1 -= c[j]\n        if pr1 != 0:\n            fin.append(pr1 - 1)\n        else:\n            fin.append(pr1)\n    print(*fin)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    i = 0\n    while i < n and l[i] == l[0]:\n        i += 1\n    d = {}\n    c = 0\n    for j in range(1, n):\n        if l[j] != l[j - 1]:\n            c += 1\n    if i < n:\n        d[l[i - 1]] = -1\n    while i < n:\n        y = l[i - 1]\n        x = l[i]\n        while i < n and l[i] == x:\n            i += 1\n        r = 0\n        if i < n and l[i] == y:\n            r = 2\n        else:\n            r = 1\n        if x in d:\n            d[x] -= r\n        else:\n            d[x] = -r\n    for j in range(1, k + 1):\n        if j in d:\n            print(c + d[j], end=' ')\n        else:\n            print(c, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    d = {}\n    c = {}\n    fin = []\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    f = []\n    s = 0\n    f.append(l[0])\n    for j in range(len(l)):\n        if l[j] != f[-1]:\n            f.append(l[j])\n    for j in f:\n        if j not in d.keys():\n            d[j] = 1\n        else:\n            d[j] += 1\n    for j in range(1, b + 1):\n        c[j] = 0\n    for j in range(2, len(f)):\n        if f[j] == f[j - 2]:\n            c[f[j - 1]] += 1\n    for j in d.keys():\n        s += d[j]\n    for j in range(1, b + 1):\n        pr1 = s - d[j]\n        pr1 -= c[j]\n        if pr1 != 0:\n            fin.append(pr1 - 1)\n        else:\n            fin.append(pr1)\n    print(*fin)", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        print('0')\n    else:\n        a1 = list()\n        d = dict()\n        d1 = dict()\n        for i in range(n):\n            if i == 0:\n                a1.append(a[i])\n                d[a[i]] = 1\n            elif a[i - 1] != a[i]:\n                a1.append(a[i])\n                if d.get(a[i]):\n                    d[a[i]] += 1\n                else:\n                    d[a[i]] = 1\n        for i in range(len(a1) - 2):\n            if a1[i] == a1[i + 2]:\n                if d1.get(a1[i + 1]):\n                    d1[a1[i + 1]] -= 1\n                else:\n                    d1[a1[i + 1]] = -1\n        for i in range(1, k + 1):\n            kok = 0\n            if d1.get(i):\n                kok = d1[i]\n            print(kok + len(a1) - d[i] - 1, end=' ')\n        print()", "def main():\n    t = int(input())\n    for i in range(t):\n        temp = list(map(int, input().split()))\n        (n, k) = (temp[0], temp[1])\n        a = list(map(int, input().split()))\n        if k == 1:\n            print(0)\n            continue\n        umax = 0\n        a2 = [a[0]]\n        for j in range(1, len(a)):\n            if a[j] != a[j - 1]:\n                a2.append(a[j])\n                umax += 1\n        dictt = {}\n        for j in range(k):\n            dictt[j + 1] = umax\n        dictt[a2[0]] -= 1\n        dictt[a2[-1]] -= 1\n        for j in range(1, len(a2) - 1):\n            if a2[j - 1] == a2[j + 1]:\n                dictt[a2[j]] -= 2\n            else:\n                dictt[a2[j]] -= 1\n        ans = []\n        for j in sorted(dictt.keys()):\n            ans.append(str(dictt[j]))\n        print(' '.join(ans))\nmain()", "t = int(input())\nfor i in range(t):\n    d = {}\n    c = {}\n    fin = []\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    f = []\n    s = 0\n    f.append(l[0])\n    for j in range(len(l)):\n        if l[j] != f[-1]:\n            f.append(l[j])\n    for j in f:\n        if j not in d.keys():\n            d[j] = 1\n        else:\n            d[j] += 1\n    for j in range(1, b + 1):\n        c[j] = 0\n    for j in range(2, len(f)):\n        if f[j] == f[j - 2]:\n            c[f[j - 1]] += 1\n    for j in d.keys():\n        s += d[j]\n    for j in range(1, b + 1):\n        pr1 = s - d[j]\n        pr1 -= c[j]\n        if pr1 != 0:\n            fin.append(pr1 - 1)\n        else:\n            fin.append(pr1)\n    print(*fin)", "for tc in range(int(input())):\n    ls = list(map(int, input().split()))\n    lk = list(map(int, input().split()))\n    dis = dict()\n    newlk = []\n    for x in lk:\n        if len(newlk) == 0:\n            newlk.append(x)\n        elif newlk[-1] != x:\n            newlk.append(x)\n    if len(newlk) == 1:\n        print(0)\n        continue\n    ct = 0\n    dis[newlk[0]] = 1\n    for x in range(1, len(newlk) - 1):\n        if newlk[x] != newlk[x - 1]:\n            ct += 1\n            if dis.get(newlk[x]) is None:\n                dis[newlk[x]] = 1\n            else:\n                dis[newlk[x]] += 1\n        if newlk[x + 1] != newlk[x]:\n            if newlk[x + 1] == newlk[x - 1]:\n                if dis.get(newlk[x]) is None:\n                    dis[newlk[x]] = 1\n                else:\n                    dis[newlk[x]] += 1\n    if newlk[-1] != newlk[-2]:\n        ct += 1\n        if dis.get(newlk[-1]) is None:\n            dis[newlk[-1]] = 1\n        else:\n            dis[newlk[-1]] += 1\n    res = []\n    for x in range(1, ls[1] + 1):\n        res.append(ct - dis[x])\n    print(*res)", "test = int(input())\nfor t in range(test):\n    (n, k) = map(int, input().split())\n    ls = [int(i) for i in input().split()]\n    ans = [0 * i for i in range(k)]\n    tc = 0\n    last = ls[0]\n    if k == 1:\n        print(0)\n        continue\n    for i in range(1, n):\n        c = ls[i]\n        p = ls[i - 1]\n        if c == p:\n            continue\n        else:\n            tc += 1\n            if last == c:\n                ans[p - 1] += 2\n            else:\n                ans[p - 1] += 1\n            last = p\n    ans2 = [tc for i in range(k)]\n    ans[ls[n - 1] - 1] += 1\n    a = [x1 - x2 for (x1, x2) in zip(ans2, ans)]\n    print(*a)", "t = int(input())\nfor i in range(t):\n    d = {}\n    c = {}\n    fin = []\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    f = []\n    s = 0\n    f.append(l[0])\n    for j in range(len(l)):\n        if l[j] != f[-1]:\n            f.append(l[j])\n    for j in f:\n        if j not in d.keys():\n            d[j] = 1\n        else:\n            d[j] += 1\n    for j in range(1, b + 1):\n        c[j] = 0\n    for j in range(2, len(f)):\n        if f[j] == f[j - 2]:\n            c[f[j - 1]] += 1\n    for j in d.keys():\n        s += d[j]\n    for j in range(1, b + 1):\n        pr1 = s - d[j]\n        pr1 -= c[j]\n        if pr1 != 0:\n            fin.append(pr1 - 1)\n        else:\n            fin.append(pr1)\n    print(*fin)", "import sys\n\ndef build_arr(arr):\n    new = []\n    last = -1\n    for x in arr:\n        if x != last:\n            last = x\n            new.append(last)\n    return new\nfor _ in range(int(input().strip())):\n    (n, k) = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    arr = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    if k == 1:\n        print(0)\n        continue\n    if k == 2:\n        print('0 0')\n        continue\n    arr = build_arr(arr)\n    curr = len(arr) - 1\n    n = len(arr)\n    eat = dict()\n    for i in range(1, k + 1):\n        eat[i] = 0\n    for i in range(n):\n        if i == 0 or i == n - 1:\n            eat[arr[i]] += 1\n        elif arr[i - 1] == arr[i + 1]:\n            eat[arr[i]] += 2\n        else:\n            eat[arr[i]] += 1\n    ans = [0] * k\n    for i in range(1, k + 1):\n        ans[i - 1] = curr - eat[i]\n    print(*ans)", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef solve():\n    (n, k) = mp()\n    l = li()\n    d = defaultdict(int)\n    pre = [0] * n\n    suff = [0] * n\n    first_ind = defaultdict(lambda x: -1)\n    last_ind = defaultdict(lambda x: -1)\n    last_ind[l[0]] = 0\n    for i in range(1, n):\n        pre[i] = pre[i - 1]\n        last_ind[l[i]] = i\n        if l[i] != l[i - 1]:\n            pre[i] += 1\n    first_ind[l[-1]] = n - 1\n    for i in range(n - 2, -1, -1):\n        first_ind[l[i]] = i\n        suff[i] = suff[i + 1]\n        if l[i] != l[i + 1]:\n            suff[i] += 1\n    i = 0\n    indexes = [-1] * (k + 1)\n    while i < n:\n        j = i\n        if indexes[l[i]] >= 0:\n            d[l[i]] += pre[i - 1] - pre[indexes[l[i]] + 1]\n        while j < n and l[j] == l[i]:\n            j += 1\n        if i - 1 >= 0 and j < n and (l[i - 1] != l[j]):\n            d[l[i]] += 1\n        indexes[l[i]] = j - 1\n        i = j\n    ANS = []\n    for i in range(1, k + 1):\n        if first_ind[i] == -1:\n            ANS.append(pre[-1])\n        else:\n            ans = d[i]\n            if first_ind[i] != 0:\n                ans += pre[first_ind[i] - 1]\n            if last_ind[i] != n - 1:\n                ans += suff[last_ind[i] + 1]\n            ANS.append(ans)\n    print(*ANS)\nfor _ in range(inp()):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    s = s.split()\n    a = [int(s[0])]\n    check = []\n    for _ in range(k + 1):\n        check.append([])\n    check[int(s[0])].append(0)\n    for i in s:\n        if int(i) != a[-1]:\n            a.append(int(i))\n            check[int(i)].append(len(a) - 1)\n    total = len(a) - 1\n    if total > 0:\n        for i in range(1, k + 1):\n            if len(check[i]) > 0:\n                ans = total\n                for j in check[i]:\n                    if i == a[j]:\n                        if j > 0 and j < total:\n                            if a[j - 1] == a[j + 1]:\n                                ans -= 2\n                            elif a[j - 1] != a[j + 1]:\n                                ans -= 1\n                        elif j == 0:\n                            ans -= 1\n                        elif j == total:\n                            ans -= 1\n                print(ans, end=' ')\n        print()\n    else:\n        print(0)", "def rajeev(a):\n    b = [a[0]]\n    for r in range(1, len(a)):\n        if b[-1] == a[r]:\n            continue\n        else:\n            b.append(a[r])\n    return b\nt = int(input())\nfor tt in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = rajeev(a)\n    yy = len(c)\n    ss = []\n    for rr in range(k + 1):\n        ss.append(0)\n    for y in range(1, yy - 1):\n        if c[y - 1] == c[y + 1]:\n            ss[c[y]] += 2\n        else:\n            ss[c[y]] += 1\n    ss[c[0]] += 1\n    ss[c[-1]] += 1\n    ans = []\n    for g in range(1, k + 1):\n        if yy - ss[g] - 1 >= 0:\n            ans.append(str(yy - ss[g] - 1))\n        else:\n            ans.append(str(0))\n    print(' '.join(ans))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().rstrip().split()))\n    res = 0\n    for i in range(1, n):\n        if A[i] != A[i - 1]:\n            res += 1\n    B = list()\n    x = -1\n    for i in range(n):\n        if A[i] != x:\n            B.append(A[i])\n        x = A[i]\n    res1 = [res] * (k + 1)\n    l = len(B)\n    for i in range(l):\n        if i == 0 or i == l - 1:\n            res1[B[i]] -= 1\n        elif B[i - 1] == B[i + 1]:\n            res1[B[i]] -= 2\n        else:\n            res1[B[i]] -= 1\n    if k <= 2:\n        for i in range(k):\n            print(0, end=' ')\n        print()\n    else:\n        for i in range(1, k + 1):\n            print(res1[i], end=' ')\n        print()", "import sys\nfrom collections import deque\nfrom collections import Counter\nimport heapq\nimport bisect\nimport copy\nMOD = 1000000007\nNO = lambda : print('NO')\nYES = lambda : print('YES')\n_1 = lambda : print(-1)\nari = lambda : [int(_) for _ in input().split()]\ncin = lambda : int(input())\ncis = lambda : input()\nshow = lambda x: print(x)\nfast = lambda : sys.stdin.readline()\ntest_case = 1\ntest_case = int(input())\nsys.setrecursionlimit(10 ** 6)\n\ndef ans():\n    (size, k) = ari()\n    arr = ari()\n    reducearr = []\n    intial = arr[0]\n    reducearr.append(intial)\n    for i in range(1, size):\n        if intial != arr[i]:\n            reducearr.append(arr[i])\n            intial = arr[i]\n    maxpossible = 0\n    n = len(reducearr)\n    for i in range(len(reducearr) - 1):\n        if reducearr[i] != reducearr[i + 1]:\n            maxpossible += 1\n    total = [maxpossible] * (n + 1)\n    for i in range(n):\n        if i + 1 < n and i - 1 >= 0:\n            total[reducearr[i]] -= 2\n        elif i - 1 >= 0 or i + 1 < n:\n            total[reducearr[i]] -= 1\n        if i - 1 >= 0 and i + 1 < n and (reducearr[i + 1] != reducearr[i - 1]):\n            total[reducearr[i]] += 1\n    print(*total[1:k + 1])\n    return\n\n    def doit(ele):\n        newarr = []\n        for i in reducearr:\n            if i != ele:\n                newarr.append(i)\n        count = 0\n        for i in range(len(newarr) - 1):\n            if newarr[i] != newarr[i + 1]:\n                count += 1\n        return count\n    result = []\n    for i in range(1, n + 1):\n        result.append(doit(i))\n    print(*result)\n    return\nfor _ in range(test_case):\n    ans()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(j) for j in input().split()]\n    b = []\n    mapp = [0 for j in range(10 ** 5 + 3)]\n    j = 0\n    while j < n:\n        ele = a[j]\n        b.append(a[j])\n        while j + 1 < n and a[j + 1] == ele:\n            j += 1\n        j += 1\n    if len(b) == 1:\n        print(0)\n        continue\n    for j in b:\n        mapp[j] += 1\n    ans = [len(b) - 1 for j in range(k)]\n    for j in range(2, len(b)):\n        if b[j] == b[j - 2]:\n            ans[b[j - 1] - 1] -= 1\n    for j in range(len(ans)):\n        ans[j] -= mapp[j + 1]\n        print(ans[j], end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    i = 0\n    while i < n and l[i] == l[0]:\n        i += 1\n    d = {}\n    c = 0\n    for j in range(1, n):\n        if l[j] != l[j - 1]:\n            c += 1\n    if i < n:\n        d[l[i - 1]] = -1\n    while i < n:\n        y = l[i - 1]\n        x = l[i]\n        while i < n and l[i] == x:\n            i += 1\n        r = 0\n        if i < n and l[i] == y:\n            r = 2\n        else:\n            r = 1\n        if x in d:\n            d[x] -= r\n        else:\n            d[x] = -r\n    for j in range(1, k + 1):\n        if j in d:\n            print(c + d[j], end=' ')\n        else:\n            print(c, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    d = dict()\n    start = 0\n    end = 0\n    last = ar[0]\n    for i in range(1, n):\n        if ar[i] == last:\n            end += 1\n        elif last in d:\n            d[last].append([start, end])\n            start = i\n            end = i\n            last = ar[i]\n        else:\n            d[last] = [[start, end]]\n            start = i\n            end = i\n            last = ar[i]\n    if last in d:\n        d[last].append([start, end])\n    else:\n        d[last] = [[start, end]]\n    count = 0\n    for i in range(1, n):\n        if ar[i] != ar[i - 1]:\n            count += 1\n    ans = [0] * k\n    for i in range(1, k + 1):\n        c = count\n        for val in d[i]:\n            if val[0] - 1 >= 0:\n                if ar[val[0]] != ar[val[0] - 1]:\n                    c -= 1\n            if val[1] + 1 < n:\n                if ar[val[1]] != ar[val[1] + 1]:\n                    c -= 1\n            if val[0] - 1 >= 0 and val[1] + 1 < n:\n                if ar[val[0] - 1] != ar[val[1] + 1]:\n                    c += 1\n        ans[i - 1] = c\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    tc = 0\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            tc += 1\n    if n == 1:\n        print(0)\n    else:\n        d = dict()\n        kd = dict()\n        nli = []\n        for i in range(1, n):\n            if a[i] != a[i - 1]:\n                nli.append(a[i - 1])\n        nli.append(a[-1])\n        n = len(nli)\n        for i in range(k):\n            d[i + 1] = 0\n        for i in range(1, n):\n            if nli[i] != nli[i - 1]:\n                d[nli[i]] += 1\n                d[nli[i - 1]] += 1\n                if i != n - 1:\n                    if nli[i - 1] != nli[i + 1] and nli[i] != nli[i + 1]:\n                        if nli[i] in kd:\n                            kd[nli[i]] += 1\n                        else:\n                            kd[nli[i]] = 1\n        ans = []\n        for i in range(k):\n            if i + 1 in kd:\n                ans.append(tc + kd[i + 1] - d[i + 1])\n            else:\n                ans.append(tc - d[i + 1])\n        print(*ans)", "try:\n    from collections import defaultdict\n    for _ in range(int(input())):\n        (n, k) = list(map(int, input().split()))\n        a = list(map(int, input().split()))\n        a1 = []\n        if k == 1:\n            print(0)\n        else:\n            d = {}\n            d = defaultdict(lambda : 0, d)\n            d1 = {}\n            d1 = defaultdict(lambda : 0, d1)\n            i = 0\n            while i < n:\n                b = a[i]\n                while i < n and a[i] == b:\n                    i += 1\n                d[b] += 1\n                a1.append(b)\n            l = len(a1)\n            for i in range(1, l - 1):\n                if a1[i - 1] == a1[i + 1]:\n                    d1[a1[i]] += 1\n            s = 0\n            for i in range(1, k + 1):\n                s += d[i]\n            for i in range(1, k + 1):\n                print(s - d[i] - d1[i] - 1, end=' ')\n            print()\nexcept:\n    pass", "def myfunc(n, k, arr):\n    ug = 0\n    for i in range(1, n):\n        if arr[i] != arr[i - 1]:\n            ug += 1\n    m = [True] * n\n    for i in range(n - 1):\n        if arr[i] == arr[i + 1]:\n            m[i] = False\n    aux = []\n    for i in range(n):\n        if m[i]:\n            aux.append(arr[i])\n    a = [[] for _ in range(k + 1)]\n    for i in range(len(aux)):\n        a[aux[i]].append(i)\n    ans = []\n    for i in range(1, k + 1):\n        t = 0\n        for idx in a[i]:\n            if aux[max(idx - 1, 0)] == aux[min(idx + 1, len(aux) - 1)]:\n                t += 2\n            else:\n                t += 1\n        ans.append(ug - t)\n    if k == 1:\n        ans = [0]\n    print(*ans)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    myfunc(n, k, arr)", "def func():\n    (n, k) = map(int, input().split())\n    v = list(map(int, input().split()))\n    ug = 0\n    l = [v[0]]\n    for i in range(1, n):\n        if l[-1] != v[i]:\n            l.append(v[i])\n    n = len(l)\n    for i in range(n - 1):\n        if l[i] != l[i + 1]:\n            ug += 1\n    ans = [ug for i in range(k + 1)]\n    for i in range(n):\n        if i + 1 < n:\n            ans[l[i]] -= 1\n        if i - 1 >= 0:\n            ans[l[i]] -= 1\n        if i - 1 >= 0 and i + 1 < n and (l[i + 1] != l[i - 1]):\n            ans[l[i]] += 1\n    for i in range(1, k + 1):\n        print(ans[i], end=' ')\n    print()\nt = int(input())\nfor i in range(t):\n    func()", "from collections import defaultdict\nfrom sys import stdin, stdout, setrecursionlimit\n(readline, writeline) = (stdin.readline, stdout.write)\nsetrecursionlimit(100005)\nfor _ in range(int(readline())):\n    (n, k) = map(int, readline().split())\n    arr = list(map(int, readline().split()))\n    lst = [arr[0]]\n    for i in range(1, n):\n        if arr[i] != lst[-1]:\n            lst.append(arr[i])\n    n = len(lst)\n    ans = [n - 1] * (k + 1)\n    for i in range(n):\n        if i + 1 < n:\n            ans[lst[i]] -= 1\n        if i - 1 >= 0:\n            ans[lst[i]] -= 1\n        if i + 1 < n and i - 1 >= 0 and (lst[i - 1] != lst[i + 1]):\n            ans[lst[i]] += 1\n    print(*ans[1:])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        print(0)\n        continue\n    h = {arr[0]: 0}\n    total = 0\n    pre = 0\n    cur = arr[0]\n    for i in range(1, n):\n        if arr[i] == arr[i - 1]:\n            continue\n        if arr[i] == pre:\n            if arr[i - 1] in h:\n                h[arr[i - 1]] += 2\n            else:\n                h[arr[i - 1]] = 2\n            pre = arr[i - 1]\n            total += 1\n        else:\n            if arr[i - 1] in h:\n                h[arr[i - 1]] += 1\n            else:\n                h[arr[i - 1]] = 1\n            pre = arr[i - 1]\n            total += 1\n    if arr[-1] in h:\n        h[arr[-1]] += 1\n    else:\n        h[arr[-1]] = 1\n    for i in range(1, k + 1):\n        print(total - h[i], end=' ')\n    print()", "def input_int():\n    return int(input())\n\ndef input_multiple():\n    return map(int, input().split())\nt = input_int()\nwhile t > 0:\n    (n, k) = input_multiple()\n    a = list(input_multiple())\n    b = []\n    last = ''\n    for i in a:\n        if i != last:\n            b.append(i)\n        last = i\n    ka = [0] * k\n    lb = len(b)\n    for i in range(1, lb - 1):\n        if b[i - 1] == b[i + 1]:\n            ka[b[i] - 1] += 1\n        ka[b[i] - 1] += 1\n    ka[b[0] - 1] += 1\n    ka[b[-1] - 1] += 1\n    for i in range(k):\n        if lb - ka[i] - 1 < 0:\n            print(0)\n        else:\n            print(lb - ka[i] - 1, end=' ')\n    print()\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    if k == 1:\n        print(0)\n        continue\n    for i in range(1, n):\n        if l[i] != l[i - 1]:\n            c += 1\n    d = {i: 0 for i in range(1, k + 1)}\n    prev = {i: i for i in range(1, k + 1)}\n    for i in range(n):\n        if i - 1 >= 0 and l[i] != l[i - 1]:\n            if l[i] == prev[l[i - 1]]:\n                d[l[i - 1]] += 2\n            else:\n                d[l[i - 1]] += 1\n        if i - 1 >= 0 and l[i] != l[i - 1]:\n            prev[l[i]] = l[i - 1]\n    d[l[-1]] += 1\n    for i in range(1, k + 1):\n        print(c - d[i], end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ug = 0\n    for i in range(1, n):\n        if arr[i] != arr[i - 1]:\n            ug += 1\n    m = [True] * n\n    for i in range(n - 1):\n        if arr[i] == arr[i + 1]:\n            m[i] = False\n    aux = []\n    for i in range(n):\n        if m[i]:\n            aux.append(arr[i])\n    a = [[] for _ in range(k + 1)]\n    for i in range(len(aux)):\n        a[aux[i]].append(i)\n    ans = []\n    for i in range(1, k + 1):\n        t = 0\n        for idx in a[i]:\n            if aux[max(idx - 1, 0)] == aux[min(idx + 1, len(aux) - 1)]:\n                t += 2\n            else:\n                t += 1\n        ans.append(ug - t)\n    if k == 1:\n        ans = [0]\n    print(*ans)", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom collections import Counter\nfrom collections import defaultdict as dd\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nstdmap = lambda : map(int, stdstr().split())\nstdarr = lambda : list(map(int, stdstr().split()))\nmod = 1000000007\nfor _ in range(stdint()):\n    (n, k) = stdmap()\n    arr = stdarr()\n    split = [arr[0]]\n    total = Counter()\n    for i in range(1, n):\n        if arr[i] != arr[i - 1]:\n            split.append(arr[i])\n    total = len(split) - 1\n    c = Counter()\n    for i in range(1, len(split) - 1):\n        if split[i - 1] == split[i + 1]:\n            c[split[i]] += 2\n        else:\n            c[split[i]] += 1\n    c[split[0]] += 1\n    c[split[-1]] += 1\n    res = []\n    for i in range(1, k + 1):\n        res.append(max(total - c[i], 0))\n    print(*res)", "def solve(N, K, arr):\n    temp = [arr[0]]\n    for i in range(1, N):\n        if temp[-1] != arr[i]:\n            temp.append(arr[i])\n    arr = temp\n    N = len(temp)\n    total = 0\n    for i in range(N - 1):\n        if arr[i] != arr[i + 1]:\n            total += 1\n    ans = [total for _ in range(K + 1)]\n    for i in range(N):\n        if i + 1 < N:\n            ans[arr[i]] -= 1\n        if i - 1 >= 0:\n            ans[arr[i]] -= 1\n        if i - 1 >= 0 and i + 1 < N and (arr[i + 1] != arr[i - 1]):\n            ans[arr[i]] += 1\n    return ' '.join(map(str, ans[1:]))\nt = int(input())\nfor _ in range(t):\n    (N, K) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(N, K, arr))", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    d = defaultdict(int)\n    l = defaultdict(int)\n    ug = 0\n    a = [int(i) for i in input().split()]\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            ug += 1\n            l[a[i]] = a[i - 1]\n            if l[a[i - 1]] == a[i]:\n                d[a[i - 1]] += 2\n            else:\n                d[a[i - 1]] += 1\n        if i == n - 1 and l[a[n - 1]] != 0:\n            d[a[i]] += 1\n    for i in range(1, k + 1):\n        print(ug - d[i], end=' ')\n    print('')", "for hjikdjfsk in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    d = {}\n    b = [a[0]]\n    for i in range(1, n):\n        if a[i - 1] != a[i]:\n            b.append(a[i])\n    for i in range(1, len(b) - 1):\n        if b[i - 1] == b[i + 1]:\n            try:\n                d[b[i]] += 2\n            except:\n                d[b[i]] = 2\n        else:\n            try:\n                d[b[i]] += 1\n            except:\n                d[b[i]] = 1\n    if len(b) >= 2:\n        try:\n            d[b[0]] += 1\n        except:\n            d[b[0]] = 1\n        try:\n            d[b[-1]] += 1\n        except:\n            d[b[-1]] = 1\n    else:\n        print(0)\n        continue\n    u = 0\n    for i in range(1, n):\n        if a[i - 1] != a[i]:\n            u += 1\n    for i in range(1, k + 1):\n        print(u - d[i], end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    if k == 1:\n        print('0')\n        continue\n    blk = [A[0]]\n    for i in range(1, n):\n        if A[i - 1] != A[i]:\n            blk.append(A[i])\n    (dit1, dit2) = ({}, {})\n    for i in range(1, k + 1):\n        (dit1[i], dit2[i]) = (0, 0)\n    for i in blk:\n        dit1[i] += 1\n    for i in range(1, len(blk) - 1):\n        if blk[i - 1] == blk[i + 1]:\n            dit2[blk[i]] += 1\n    blocks = len(blk) - 1\n    for i in range(1, k + 1):\n        print(blocks - dit1[i] - dit2[i], end=' ')\n    print()", "T = int(input())\nimport collections\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    stack = []\n    for i in range(n):\n        if len(stack) == 0:\n            stack.append(ar[i])\n        elif stack[-1] == ar[i]:\n            continue\n        else:\n            stack.append(ar[i])\n    tot = len(stack) - 1\n    d = collections.defaultdict(int)\n    for i in range(len(stack)):\n        d[stack[i]] = d[stack[i]] + 1\n        if i != len(stack) - 1 and i != 0:\n            if stack[i + 1] == stack[i - 1]:\n                d[stack[i]] = d[stack[i]] + 1\n    ans = [0 for i in range(k)]\n    for i in range(1, k + 1):\n        ans[i - 1] = tot - d[i]\n    if len(stack) == 1:\n        print(0)\n        continue\n    for i in range(len(ans)):\n        if i != len(ans) - 1:\n            print(ans[i], end=' ')\n        else:\n            print(ans[i])", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    MAP = defaultdict(list)\n    for i in range(k):\n        MAP[i + 1] = [0, 0]\n    last = -1\n    count = 0\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1]:\n            if last == arr[i + 1]:\n                MAP[arr[i]][1] += 1\n            else:\n                MAP[arr[i]][0] += 1\n            last = arr[i]\n            count += 1\n    if count >= 1:\n        MAP[arr[n - 1]][0] += 1\n    for i in range(k):\n        print(count - (MAP[i + 1][0] + MAP[i + 1][1] * 2), end=' ')\n    print()", "from sys import stdin\nt = int(stdin.readline().rstrip())\nwhile t > 0:\n    (n, k) = map(int, stdin.readline().strip().split(' '))\n    test = list(map(int, stdin.readline().strip().split(' ')))\n    arr = []\n    for i in range(len(test)):\n        if i == 0:\n            arr.append(test[i])\n        elif test[i] != arr[-1]:\n            arr.append(test[i])\n    n = len(arr)\n    totaluglines = 0\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1]:\n            totaluglines += 1\n    new_arr = [totaluglines] * (k + 1)\n    for i in range(n):\n        if i + 1 < n:\n            new_arr[arr[i]] -= 1\n        if i - 1 >= 0:\n            new_arr[arr[i]] -= 1\n        if i - 1 >= 0 and i + 1 < n and (arr[i + 1] != arr[i - 1]):\n            new_arr[arr[i]] += 1\n    for i in range(1, k + 1):\n        print(new_arr[i], end=' ')\n    print()\n    t -= 1", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    prev = None\n    ans = []\n    for ch in arr:\n        if prev == None or ch != prev:\n            ans.append(ch)\n        prev = ch\n    res = [max(len(ans) - 1, 1)] * k\n    d = defaultdict(int)\n    for i in range(len(ans)):\n        if i > 0 and i < len(ans) - 1 and (ans[i - 1] == ans[i + 1]):\n            d[ans[i]] += 2\n        else:\n            d[ans[i]] += 1\n    for i in range(k):\n        res[i] -= d[i + 1]\n    print(*res)", "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nnum_test_cases = int(input())\nfor _ in range(num_test_cases):\n    (length, num_unique_digits) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    reduced_arr = [arr[0]]\n    for x in arr[1:]:\n        if x != reduced_arr[-1]:\n            reduced_arr += [x]\n    base_ugliness = len(reduced_arr) - 1\n    discount = defaultdict(int)\n    discount[reduced_arr[0]] = 1\n    for i in range(1, len(reduced_arr) - 1):\n        x = reduced_arr[i]\n        if reduced_arr[i - 1] == reduced_arr[i + 1]:\n            discount[x] += 2\n        else:\n            discount[x] += 1\n    if len(reduced_arr) > 1:\n        discount[reduced_arr[-1]] += 1\n    ans = [max(base_ugliness - discount[x], 0) for x in range(1, num_unique_digits + 1)]\n    print(*ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 1:\n        arr = [int(input())]\n    else:\n        arr = list(map(int, input().split()))\n    i = 0\n    curr = arr[i]\n    fin = [curr]\n    total_ugliness = 0\n    while i < n:\n        if curr != arr[i]:\n            total_ugliness += 1\n            curr = arr[i]\n            fin.append(curr)\n        i += 1\n    if curr != arr[i - 1]:\n        total_ugliness += 1\n        curr = arr[i - 1]\n        fin.append(curr)\n    pos = [None] * (k + 1)\n    for i in range(len(fin)):\n        if not pos[fin[i]]:\n            pos[fin[i]] = [i]\n        else:\n            pos[fin[i]].append(i)\n    op = []\n    for i in range(1, k + 1):\n        temp = 0\n        for j in pos[i]:\n            if j - 1 > -1 and j + 1 < len(fin):\n                if fin[j - 1] == fin[j + 1]:\n                    temp += 1\n        op.append(max(0, total_ugliness - temp - len(pos[i])))\n    print(*op)", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    Prev = -1\n    Now = -1\n    Next = -1\n    same = 0\n    key = [0] * k\n    for i in range(n - 1):\n        ind = n - i - 1\n        Now = arr[ind]\n        Next = arr[ind - 1]\n        if Prev != -1 and Prev != Next and (Next != Now) and (Prev != Now):\n            key[Now - 1] -= 1\n        if Now != Next:\n            key[Now - 1] += 1\n            key[Next - 1] += 1\n            Prev = Now\n        elif Now == Next:\n            same += 1\n    for i in key:\n        print(n - 1 - i - same, end=' ')\n    print()\n    t -= 1", "from sys import *\ninput = stdin.readline\nfor u in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    a = list(map(int, input().split()))\n    v = []\n    for i in range(n):\n        if i == 0:\n            v.append(a[i])\n        elif a[i] != v[-1]:\n            v.append(a[i])\n    m = len(v)\n    t = 0\n    for i in range(m - 1):\n        if v[i] != v[i + 1]:\n            t += 1\n    ans = [t for i in range(k + 1)]\n    for i in range(m):\n        if i + 1 < m:\n            ans[v[i]] -= 1\n        if i - 1 >= 0:\n            ans[v[i]] -= 1\n        if i - 1 >= 0 and i + 1 < m and (v[i + 1] != v[i - 1]):\n            ans[v[i]] += 1\n    print(*ans[1:])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    if k == 1 or n == 1:\n        print(0)\n        continue\n    for i in range(1, n):\n        if arr[i - 1] != arr[i]:\n            count += 1\n    ans = [count] * k\n    ans[arr[0] - 1] -= 1\n    p = arr[0]\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1]:\n            if p == arr[i + 1]:\n                ans[arr[i] - 1] -= 1\n            p = arr[i]\n            ans[arr[i + 1] - 1] -= 1\n    for i in range(k - 1):\n        print(ans[i], end=' ')\n    print(ans[k - 1])", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    if k == 2:\n        print('0 0')\n        continue\n    dic = {}\n    for i in range(1, k + 1):\n        dic[i] = 0\n    ans = 0\n    t = [li[0]]\n    for i in range(1, n):\n        if t[-1] != li[i]:\n            t.append(li[i])\n    for i in range(n - 1):\n        if li[i] != li[i + 1]:\n            dic[li[i]] += 1\n            dic[li[i + 1]] += 1\n    li = t.copy()\n    dic2 = {}\n    for i in range(1, k + 1):\n        dic2[i] = 0\n    for i in range(0, len(li) - 2):\n        if li[i] != li[i + 1]:\n            if li[i] != li[i + 2]:\n                dic2[li[i + 1]] += 1\n    ans = len(t)\n    for i in range(1, k + 1):\n        print(ans - dic[i] - 1 + dic2[i], end=' ')\n    print()"]