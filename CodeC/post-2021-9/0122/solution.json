["from collections import Counter\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    answer = 0\n    A = list(map(int, input().split(' ')))\n    counts = Counter(A).most_common()\n    freq = counts[0][1]\n    print(N - freq)", "from collections import Counter\nT = int(input())\nfor _ in range(T):\n    input()\n    answer = 0\n    A = list(map(int, input().split(' ')))\n    X = Counter(A).most_common()\n    Z = X[0][0]\n    for i in A:\n        if i != Z:\n            answer += 1\n    print(answer)", "from collections import Counter\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    b = Counter(a)\n    ans = max(b.values())\n    print(n - ans)", "from collections import Counter\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = Counter(arr)\n    maxi = max(c.values())\n    print(n - maxi)", "n = int(input())\nfor i in range(n):\n    length = input()\n    inp_list = input().split()\n    dicti = {}\n    for num in inp_list:\n        dicti.setdefault(num, 0)\n        dicti[num] += 1\n    print(len(inp_list) - max(dicti.values()))", "for i in range(int(input())):\n    n = int(input())\n    l = list(input().split())\n    d = dict()\n    for i in l:\n        if i in d.keys():\n            d[i] += 1\n        else:\n            d[i] = 1\n    print(n - max(d.values()))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = dict()\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    maxval = max(d.values())\n    print(n - maxval)", "for jdfg in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    d = {}\n    for j in k:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    l = list(d.values())\n    print(n - max(l))", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maxi = max(C.values())\n    print(n - maxi)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ma = max(c.values())\n    print(n - ma)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maxi = max(C.values())\n    print(n - maxi)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    d = defaultdict(int)\n    for i in [int(x) for x in input().split()]:\n        d[i] += 1\n    print(n - max(d.values()))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    m = max(d.values())\n    print(len(l) - m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = {}\n    for j in a:\n        if j in c:\n            c[j] += 1\n        else:\n            c[j] = 1\n    s = max(c.values())\n    print(n - s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = {}\n    for j in a:\n        if j in c:\n            c[j] += 1\n        else:\n            c[j] = 1\n    s = max(c.values())\n    print(n - s)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = max(Counter(l).values())\n    print(n - d)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    if n == len(set(a)):\n        print(n - 1)\n    else:\n        ca = Counter(a)\n        m = max(ca.values())\n        result = n - m\n        print(result)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    t = len(set(a))\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = 1\n        else:\n            d[a[i]] += 1\n    t1 = max(d.values())\n    if n == t:\n        print(n - 1)\n    else:\n        print(n - t1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = map(int, input().split())\n    dict = {}\n    for j in a:\n        if j in dict:\n            dict[j] += 1\n        else:\n            dict[j] = 1\n    value = max(dict.values())\n    print(n - value)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = map(int, input().split())\n    dict = {}\n    for j in a:\n        if j in dict:\n            dict[j] += 1\n        else:\n            dict[j] = 1\n    value = max(dict.values())\n    print(n - value)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mydict = {}\n    for item in a:\n        if item in mydict:\n            mydict[item] += 1\n        else:\n            mydict[item] = 1\n    value = max(mydict.values())\n    print(n - value)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    y = max(c.values())\n    print(len(a) - y)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    D = {}\n    for j in A:\n        if j in D:\n            D[j] += 1\n        else:\n            D[j] = 1\n    m = max(D.values())\n    print(n - m)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    D = {}\n    for j in A:\n        if j in D:\n            D[j] += 1\n        else:\n            D[j] = 1\n    m = max(D.values())\n    print(n - m)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maxi = max(C.values())\n    print(n - maxi)", "for t in range(int(input())):\n    d = {}\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(len(a)):\n        if a[i] in d.keys():\n            d[a[i]] = d[a[i]] + 1\n        else:\n            d[a[i]] = 1\n    v = list(d.values())\n    m = 0\n    f = -1\n    for i in range(len(v)):\n        if v[i] > m:\n            f = i\n            m = v[i]\n    print(n - m)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    C = {}\n    for i in A:\n        if i not in C:\n            C[i] = 1\n        else:\n            C[i] += 1\n    maxC = max(C.values())\n    print(N - maxC)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maximum = max(C.values())\n    print(n - maximum)", "from collections import Counter\nfor i in range(int(input())):\n    l = int(input())\n    s = list(map(int, input().split()))\n    c = Counter(s)\n    maxc = max(c.values())\n    print(l - maxc)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    c = 0\n    d = {}\n    for k in l:\n        if k not in d:\n            d[k] = 1\n        else:\n            d[k] += 1\n    a = max(d.values())\n    print(n - a)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    c = 0\n    d = {}\n    for k in l:\n        if k not in d:\n            d[k] = 1\n        else:\n            d[k] += 1\n    a = max(d.values())\n    print(n - a)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    c = 0\n    d = {}\n    for k in l:\n        if k not in d:\n            d[k] = 1\n        else:\n            d[k] += 1\n    a = max(d.values())\n    print(n - a)", "for i in range(int(input())):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    (f, mf) = (1, 1)\n    for i in range(1, n):\n        if l[i] == l[i - 1]:\n            f += 1\n        else:\n            if mf < f:\n                mf = f\n            f = 1\n    print(n - max(mf, f))", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    c = Counter(a)\n    max_count = max(c.values())\n    print(n - max_count)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    c = Counter(a)\n    max_count = max(c.values())\n    print(n - max_count)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = Counter(sorted(list(map(int, input().split()))))\n    print(n - max(a.values()))", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    c = Counter(a)\n    max_count = max(c.values())\n    print(n - max_count)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    c = Counter(a)\n    max_count = c.most_common()[0][1]\n    print(n - max_count)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    c = Counter(a)\n    max_count = c.most_common()[0][1]\n    print(n - max_count)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = Counter(a)\n    print(n - max(d.values()))", "for i in range(int(input())):\n    t = int(input())\n    l = list(map(int, input().split()))\n    l1 = list(set(l))\n    c = []\n    if len(l) == len(l1):\n        print(len(l) - 1)\n    else:\n        for i in l1:\n            c.append(l.count(i))\n        print(t - max(c))", "from collections import Counter\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    a = list(map(int, input().split(' ')))[:N]\n    a = dict(Counter(a))\n    print(N - max(a.values()))", "t = int(input())\nfor _ in range(t):\n    sz = int(input())\n    N = [int(x) for x in input().split(' ')]\n    d = dict({})\n    for i in N:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    print(len(N) - max(list(d.values())))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = {}\n    for i in range(n):\n        if a[i] not in f:\n            f[a[i]] = 0\n        f[a[i]] += 1\n    m = max(f.values())\n    print(n - m)", "t = int(input())\nwhile t > 0:\n    N = int(input())\n    A = list(map(int, input().split()))\n    f = {}\n    for i in range(N):\n        if A[i] not in f:\n            f[A[i]] = 0\n        f[A[i]] += 1\n    m = max(f.values())\n    print(N - m)\n    t = t - 1", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maxi = max(C.values())\n    print(n - maxi)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maxi = max(C.values())\n    print(n - maxi)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    from collections import Counter\n    d = Counter(a)\n    v = d.values()\n    print(n - max(v))", "def min_operations(arr):\n    n = len(arr)\n    count = {}\n    for i in arr:\n        if i in count:\n            count[i] += 1\n        else:\n            count[i] = 1\n    max_count = max(count.values())\n    return n - max_count\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(min_operations(arr))", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    count = Counter(lst)\n    maximumamongcount = max(count.values())\n    print(len(lst) - maximumamongcount)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    count = Counter(lst)\n    maximumamongcount = max(count.values())\n    print(len(lst) - maximumamongcount)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = Counter(arr)\n    max_value = max(x.values())\n    print(n - max_value)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(Counter(a).values())\n    print(n - m)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(Counter(a).values())\n    print(len(a) - m)", "from collections import Counter\ntestcases = int(input())\nwhile testcases > 0:\n    N = int(input())\n    li = list(map(int, input().split()))[:N]\n    maximum = max(Counter(li).values())\n    print(len(li) - maximum)\n    testcases -= 1", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maxi = max(C.values())\n    print(n - maxi)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maxi = max(C.values())\n    print(n - maxi)", "for i in range(0, int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = [0] * (max(l) + 1)\n    for _ in l:\n        f[_] = f[_] + 1\n    print(sum(f) - max(f))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = [0] * (max(l) + 1)\n    for j in l:\n        f[j] = f[j] + 1\n    print(sum(f) - max(f))", "def maxx(l):\n    maxi = 0\n    for i in range(len(l)):\n        c = l.count(l[i])\n        if c > maxi:\n            maxi = c\n    return maxi\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = Counter(l)\n    ans = max(a.values())\n    print(n - ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    max1 = max(Counter(l).values())\n    print(n - max1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    d = dict()\n    for ele in arr:\n        if ele in d:\n            d[ele] += 1\n        else:\n            d[ele] = 1\n    maxfreq = 0\n    for (k, v) in d.items():\n        if v > maxfreq:\n            maxfreq = v\n    print(len(arr) - maxfreq)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = Counter(a)\n    maximum = max(freq.values())\n    print(len(a) - maximum)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = Counter(a)\n    maximum = max(freq.values())\n    print(len(a) - maximum)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    k = max(d.values())\n    print(n - k)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maxi = max(C.values())\n    print(n - maxi)", "from collections import Counter\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    arr = Counter(lst)\n    print(n - max(arr.values()))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    x = max([c[i] for i in c])\n    print(n - x)", "from collections import *\nfor i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    f = Counter(b)\n    p = max(f.values())\n    print(a - p)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maxi = max(C.values())\n    print(n - maxi)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = Counter(arr)\n    ans = n - max(c.values())\n    print(ans)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maxi = max(C.values())\n    print(n - maxi)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maxi = max(C.values())\n    print(n - maxi)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    counter = Counter(l)\n    print(n - max(counter.values()))", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dic = Counter(arr)\n    mux = max(dic.values())\n    print(n - mux)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    maxC = {}\n    for i in A:\n        if i in maxC:\n            maxC[i] += 1\n        else:\n            maxC[i] = 1\n    maxV = max(maxC.values())\n    print(len(A) - maxV)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = Counter(a)\n    maxi = max(freq.values())\n    print(len(a) - maxi)", "test = int(input())\nfor i in range(test):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * (n + 1)\n    for i in range(n):\n        num = a[i]\n        b[num] += 1\n    maxi = max(b)\n    print(n - maxi)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = {}\n    for i in a:\n        if i not in c:\n            c[i] = 1\n        else:\n            c[i] += 1\n    maxC = max(c.values())\n    print(n - maxC)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = {}\n    for i in a:\n        if i not in c:\n            c[i] = 1\n        else:\n            c[i] += 1\n    maxC = max(c.values())\n    print(n - maxC)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    C = Counter(a)\n    maxi = max(C.values())\n    print(n - maxi)", "test = int(input())\nfor i in range(test):\n    number = int(input())\n    a = list(map(int, input().split()))\n    freq_dict = {}\n    for i in a:\n        freq_dict[i] = freq_dict.get(i, 0) + 1\n    repetited_value = max(freq_dict, key=freq_dict.get)\n    count = 0\n    for x in a:\n        if x != repetited_value:\n            count += 1\n    print(count)", "for tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    k = max(d.values())\n    print(n - k)", "n = int(input())\nl = []\nfor i in range(n):\n    m = int(input())\n    l = list(map(int, input().split()))\n    count = {}\n    for i in l:\n        if i not in count:\n            count[i] = 1\n        else:\n            count[i] += 1\n    result = max(count.values())\n    print(m - result)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    freq = Counter(l)\n    m = max(freq.values())\n    print(len(l) - m)", "from collections import Counter\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    C = Counter(A)\n    maxC = max(C.values())\n    print(N - maxC)", "goals = int(input())\nfor distractions in range(goals):\n    wife = int(input())\n    life = list(map(int, input().split()))\n    aim = {}\n    for death in life:\n        if death not in aim:\n            aim[death] = 1\n        else:\n            aim[death] += 1\n    stress = max(aim.values())\n    print(len(life) - stress)", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    list1 = list(list(map(int, input().split())))\n    cnt = 0\n    dict1 = {}\n    for i in list1:\n        if i in dict1:\n            dict1[i] += 1\n        else:\n            dict1[i] = 1\n    maxi = 0\n    for k in dict1.keys():\n        if dict1[k] > maxi:\n            maxi = dict1[k]\n    print(x - maxi)", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    C = {}\n    for i in A:\n        if i not in C:\n            C[i] = 1\n        else:\n            C[i] += 1\n    maxC = max(C.values())\n    print(N - maxC)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    print(n - max(c.values()))", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = Counter(a)\n    maximum = max(freq.values())\n    print(len(a) - maximum)", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if li[i] in d:\n            d[li[i]] += 1\n        else:\n            d[li[i]] = 1\n    m = max(d.values())\n    print(n - m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    freq = {}\n    for a in list1:\n        if a in freq:\n            freq[a] += 1\n        else:\n            freq[a] = 1\n    print(n - max(freq.values()))", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = Counter(a)\n    maximum = max(r.values())\n    print(n - maximum)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = dict()\n    for i in range(len(l)):\n        if l[i] in d:\n            d[l[i]] += 1\n        else:\n            d[l[i]] = 1\n    m = max(d.values())\n    print(n - m)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    m = max(c.values())\n    print(n - m)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = {}\n    for num in a:\n        freq[num] = freq.get(num, 0) + 1\n    minOP = float('inf')\n    for (_, f) in freq.items():\n        minOP = min(minOP, n - f)\n    print(minOP)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = {}\n    for num in a:\n        freq[num] = freq.get(num, 0) + 1\n    minOP = float('inf')\n    for (_, f) in freq.items():\n        minOP = min(minOP, n - f)\n    print(minOP)", "from collections import defaultdict\n\ndef min_operations(n, arr):\n    freq = defaultdict(int)\n    for num in arr:\n        freq[num] += 1\n    max_freq = max(freq.values())\n    return n - max_freq\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(min_operations(n, arr))", "import sys\nsys.setrecursionlimit(10 ** 7)\nmod = 10 ** 9 + 7\n\ndef readInt():\n    return int(input())\n\ndef readIntList():\n    return list(map(int, input().split()))\n\ndef readStringList():\n    return list(input())\n\ndef readStringListWithSpace():\n    return list(input().split())\n\ndef readString():\n    return input()\nimport math\n\ndef execute():\n    for _ in range(readInt()):\n        n = readInt()\n        a = readIntList()\n        hmap = {}\n        for c in a:\n            if c in hmap:\n                hmap[c] += 1\n            else:\n                hmap[c] = 1\n        max_same = 0\n        for (k, v) in hmap.items():\n            if v > max_same:\n                max_same = v\n        print(n - max_same)\nexecute()"]