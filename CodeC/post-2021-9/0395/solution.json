["mod = 998244353\nfor _ in range(int(input())):\n    N = int(input())\n    p = int((N + N % 2) // 2 * (N + int(not bool(N % 2))))\n    if N % 2 == 1:\n        if p % 2 == 0:\n            p = p // 2 * (N + 1) % mod\n        else:\n            p = (N + 1) // 2 * p % mod\n    else:\n        p = p * (N + 1) % mod\n        x = pow(2, -1, mod)\n        p = p * x % mod\n    print(int(p % mod))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n * (n + 1) * (n + 1) % 4 == 0:\n        print(n * (n + 1) * (n + 1) // 4 % 998244353)\n    else:\n        x = n * (n + 1) * (n + 1)\n        x = x // 2\n        print(x * 499122177 % 998244353)", "mod = 998244353\nfor _ in range(int(input())):\n    N = int(input())\n    p = int((N + N % 2) // 2 * (N + int(not bool(N % 2))))\n    if N % 2 == 1:\n        if p % 2 == 0:\n            p = p // 2 * (N + 1) % mod\n        else:\n            p = (N + 1) // 2 * p % mod\n    else:\n        p = p * (N + 1) % mod\n        x = pow(2, -1, mod)\n        p = p * x % mod\n    print(int(p % mod))", "mod = 998244353\nfor _ in range(int(input())):\n    N = int(input())\n    p = int((N + N % 2) // 2 * (N + int(not bool(N % 2))))\n    if N % 2 == 1:\n        if p % 2 == 0:\n            p = p // 2 * (N + 1) % mod\n        else:\n            p = (N + 1) // 2 * p % mod\n    else:\n        p = p * (N + 1) % mod\n        x = pow(2, -1, mod)\n        p = p * x % mod\n    print(int(p % mod))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mod = 998244353\n    a = 1\n    b = 0\n    if n % 2 == 0:\n        if n % 4 == 0:\n            b = 1\n            a = n // 4\n            a %= mod\n            a *= n + 1\n            a %= mod\n            a *= n + 1\n            a %= mod\n        else:\n            b = 2\n            a = n // 2\n            a %= mod\n            a *= n + 1\n            a %= mod\n            a *= n + 1\n            a %= mod\n    else:\n        b = 1\n        a *= (n + 1) // 2\n        a %= mod\n        a *= (n + 1) // 2\n        a %= mod\n        a *= n\n        a %= mod\n    inv = 0\n    if b == 1:\n        inv = 1\n    elif b == 2:\n        inv = 499122177\n    ans = a * inv\n    ans %= mod\n    print(int(ans))", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mod = 998244353\n    a = 1\n    b = 0\n    if n % 2 == 0:\n        if n % 4 == 0:\n            b = 1\n            a = n // 4\n            a %= mod\n            a *= n + 1\n            a %= mod\n            a *= n + 1\n            a %= mod\n        else:\n            b = 2\n            a = n // 2\n            a %= mod\n            a *= n + 1\n            a %= mod\n            a *= n + 1\n            a %= mod\n    else:\n        b = 1\n        a *= (n + 1) // 2\n        a %= mod\n        a *= (n + 1) // 2\n        a %= mod\n        a *= n\n        a %= mod\n    inv = 0\n    if b == 1:\n        inv = 1\n    elif b == 2:\n        inv = 499122177\n    ans = a * inv\n    ans %= mod\n    print(int(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mod = 998244353\n    a = 1\n    b = 0\n    if n % 2 == 0:\n        if n % 4 == 0:\n            b = 1\n            a = n // 4\n            a %= mod\n            a *= n + 1\n            a %= mod\n            a *= n + 1\n            a %= mod\n        else:\n            b = 2\n            a = n // 2\n            a %= mod\n            a *= n + 1\n            a %= mod\n            a *= n + 1\n            a %= mod\n    else:\n        b = 1\n        a *= (n + 1) // 2\n        a %= mod\n        a *= (n + 1) // 2\n        a %= mod\n        a *= n\n        a %= mod\n    inv = 0\n    if b == 1:\n        inv = 1\n    elif b == 2:\n        inv = 499122177\n    ans = a * inv\n    ans %= mod\n    print(int(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mod = 998244353\n    a = 1\n    b = 0\n    if n % 2 == 0:\n        if n % 4 == 0:\n            b = 1\n            a = n // 4\n            a %= mod\n            a *= n + 1\n            a %= mod\n            a *= n + 1\n            a %= mod\n        else:\n            b = 2\n            a = n // 2\n            a %= mod\n            a *= n + 1\n            a %= mod\n            a *= n + 1\n            a %= mod\n    else:\n        b = 1\n        a *= (n + 1) // 2\n        a %= mod\n        a *= (n + 1) // 2\n        a %= mod\n        a *= n\n        a %= mod\n    inv = 0\n    if b == 1:\n        inv = 1\n    elif b == 2:\n        inv = 499122177\n    ans = a * inv\n    ans %= mod\n    print(int(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mod = 998244353\n    a = 1\n    b = 0\n    if n % 2 == 0:\n        if n % 4 == 0:\n            b = 1\n            a = n // 4\n            a %= mod\n            a *= n + 1\n            a %= mod\n            a *= n + 1\n            a %= mod\n        else:\n            b = 2\n            a = n // 2\n            a %= mod\n            a *= n + 1\n            a %= mod\n            a *= n + 1\n            a %= mod\n    else:\n        b = 1\n        a *= (n + 1) // 2\n        a %= mod\n        a *= (n + 1) // 2\n        a %= mod\n        a *= n\n        a %= mod\n    inv = 0\n    if b == 1:\n        inv = 1\n    elif b == 2:\n        inv = 499122177\n    ans = a * inv\n    ans %= mod\n    print(int(ans))", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "mod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = (n + 1) ** 2 * n\n    d = 4\n    c %= mod\n    if not c & 3:\n        c >>= 2\n        d = 1\n    elif not c & 1:\n        c >>= 1\n        d = 2\n    print(c * pow(d, mod - 2, mod) % mod)", "def modInverse(a, m):\n    m0 = m\n    y = 0\n    x = 1\n    if m == 1:\n        return 0\n    while a > 1:\n        q = a // m\n        t = m\n        m = a % m\n        a = t\n        t = y\n        y = x - q * y\n        x = t\n    if x < 0:\n        x = x + m0\n    return x\nmodd = 998244353\nt = int(input())\nfor hh in range(0, t):\n    n = int(input())\n    if n % 2 == 0:\n        ans1 = n // 2 * (n + 1) % modd\n    else:\n        ans1 = (n + 1) // 2 * n % modd\n    if ans1 % 2 == 0 or (n + 1) % 2 == 0:\n        if ans1 % 2 == 0:\n            ans = ans1 // 2 * (n + 1) % modd\n        else:\n            ans = (n + 1) // 2 * ans1 % modd\n        print(ans)\n    else:\n        qinv = modInverse(2, modd)\n        ans = ans1 * (n + 1) % modd\n        ans = ans * qinv % modd\n        print(ans)", "mod = 998244353\nn = int(input())\nfor i in range(n):\n    num = int(input())\n    numerator = (num + 1) ** 2 * num\n    denominator = 4\n    numerator %= mod\n    if not numerator & 3:\n        numerator >>= 2\n        denominator = 1\n    elif not numerator & 1:\n        numerator >>= 1\n        denominator = 2\n    print(numerator * pow(denominator, mod - 2, mod) % mod)", "from math import gcd\n\ndef calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\n\ndef reduceFrac(p, q):\n    d = gcd(p, q)\n    p = p // d\n    q = q // d\n    print(calculate(p, q))\nfor _ in range(int(input())):\n    n = int(input())\n    p = n * n * (n + 1) * (n + 1) // 4\n    q = n\n    reduceFrac(p, q)", "for _ in range(int(input())):\n    n = int(input())\n    if n * (n + 1) ** 2 % 4 == 0:\n        print(n * (n + 1) ** 2 // 4 % 998244353)\n    else:\n        print(n * (n + 1) ** 2 // 2 * 499122177 % 998244353)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mod = 998244353\n    a = 1\n    b = 0\n    if n % 2 == 0:\n        if n % 4 == 0:\n            b = 1\n            a = n // 4\n            a %= mod\n            a *= n + 1\n            a %= mod\n            a *= n + 1\n            a %= mod\n        else:\n            b = 2\n            a = n // 2\n            a %= mod\n            a *= n + 1\n            a %= mod\n            a *= n + 1\n            a %= mod\n    else:\n        b = 1\n        a *= (n + 1) // 2\n        a %= mod\n        a *= (n + 1) // 2\n        a %= mod\n        a *= n\n        a %= mod\n    inv = 0\n    if b == 1:\n        inv = 1\n    elif b == 2:\n        inv = 499122177\n    ans = a * inv\n    ans %= mod\n    print(int(ans))", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    if n * (n + 1) * (n + 1) % 4 == 0:\n        ans.append(n * (n + 1) * (n + 1) // 4 % 998244353)\n    else:\n        x = n * (n + 1) * (n + 1)\n        x = x // 2\n        ans.append(x * 499122177 % 998244353)\nfor i in ans:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n * (n + 1) * (n + 1) % 4 == 0:\n        print(n * (n + 1) * (n + 1) // 4 % 998244353)\n    else:\n        x = n * (n + 1) * (n + 1)\n        x = x // 2\n        print(x * 499122177 % 998244353)", "import sys\ninput = sys.stdin.readline\nmod = 998244353\nn = int(input())\nfor i in range(n):\n    num = int(input())\n    numerator = (num + 1) ** 2 * num\n    denominator = 4\n    numerator %= mod\n    if not numerator & 3:\n        numerator >>= 2\n        denominator = 1\n    elif not numerator & 1:\n        numerator >>= 1\n        denominator = 2\n    print(numerator * pow(denominator, mod - 2, mod) % mod)", "for t in range(int(input())):\n    n = int(input())\n    if n * (n + 1) * (n + 1) % 4 == 0:\n        print(n * (n + 1) * (n + 1) // 4 % 998244353)\n    else:\n        x = n * (n + 1) * (n + 1)\n        x = x // 2\n        print(x * 499122177 % 998244353)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n * (n + 1) * (n + 1) % 4 == 0:\n        print(n * (n + 1) * (n + 1) // 4 % 998244353)\n    else:\n        x = n * (n + 1) * (n + 1)\n        x = x // 2\n        print(x * 499122177 % 998244353)", "mod = 998244353\n\ndef power(a, b):\n    if b == 0:\n        return 1\n    if b == 1:\n        return a\n    ret = power(a, b // 2)\n    if b % 2 == 0:\n        return ret * ret % mod\n    else:\n        return ret * ret % mod * a % mod\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    ans = n * (n + 1) % mod * (n + 1) % mod\n    ans = ans * power(4, mod - 2) % mod\n    print(ans)", "for a0 in range(int(input())):\n    n = int(input())\n    if n * (n + 1) * (n + 1) % 4 == 0:\n        print(n * (n + 1) * (n + 1) // 4 % 998244353)\n    else:\n        x = n * (n + 1) * (n + 1)\n        x = x // 2\n        print(x * 499122177 % 998244353)", "t = int(input())\nwhile t > 0:\n    mod = 998244353\n    n = int(input())\n\n    def gcd(a, b):\n        if b == 0:\n            return a\n        return gcd(b, a % b)\n    res = n * (n + 1) * (n + 1)\n    h = gcd(res, 4)\n    a = res // h\n    b = 4 // h\n\n    def modexp(x, n):\n        if n == 0:\n            return 1\n        elif n % 2 == 0:\n            return modexp(x * x % mod, n // 2)\n        else:\n            return x * modexp(x * x % mod, (n - 1) / 2) % mod\n    d = modexp(b, mod - 2)\n    sol = a % mod * (d % mod) % mod\n    print(sol)\n    t = t - 1", "import sys\ninput = sys.stdin.readline\nmod = 998244353\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    n = int(input())\n    numerator = (n + 1) ** 2 * n\n    denominator = 4\n    numerator %= mod\n    if not numerator & 3:\n        numerator >>= 2\n        denominator = 1\n    elif not numerator & 1:\n        numerator >>= 1\n        denominator = 2\n    print(numerator * pow(denominator, mod - 2, mod) % mod)", "import sys\ninput = sys.stdin.readline\nmod = 998244353\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    n = int(input())\n    numerator = (n + 1) ** 2 * n\n    denominator = 4\n    numerator %= mod\n    if not numerator & 3:\n        numerator >>= 2\n        denominator = 1\n    elif not numerator & 1:\n        numerator >>= 1\n        denominator = 2\n    print(numerator * pow(denominator, mod - 2, mod) % mod)", "from math import ceil\nMOD = 998244353\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    k = n + 1\n    val = n * k * k\n    ans = 0\n    if val % 4 == 0:\n        ans = val // 4\n    else:\n        ans = val // 2\n        ans = ans * ceil(MOD / 2)\n    print(ans % MOD)", "import sys\nimport math\nfrom math import gcd, sqrt\nimport heapq as hq\nfrom bisect import bisect_right, bisect_left, bisect\nimport itertools\nfrom sys import stdin, stdout, setrecursionlimit\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\n\ndef calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\nT = 1\nT = int(stdin.readline())\nMOD = int(1000000000.0) + 7\nfor _ in range(T):\n    n = int(stdin.readline())\n    P = n * (n + 1) * (n + 1)\n    Q = 4\n    print(calculate(P, Q))", "mod = 998244353\n\ndef power(a, b):\n    if b == 0:\n        return 1\n    if b == 1:\n        return a\n    ret = power(a, b // 2)\n    if b % 2 == 0:\n        return ret * ret % mod\n    else:\n        return ret * ret % mod * a % mod\ntry:\n    t = int(input())\n    while t > 0:\n        n = int(input())\n        ans = n * (n + 1) % mod * (n + 1) % mod\n        ans = ans * power(4, mod - 2) % mod\n        print(ans)\n        t = t - 1\nexcept:\n    pass", "m = 998244353\nv = 499122177\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    if N & 1 == 1:\n        next = (N + 1) % m\n        half = next * v % m\n        res = half * half % m\n        res = res * N % m\n    else:\n        next = (N + 1) % m\n        half = N * v % m\n        res = next * next % m\n        res = res * half % m\n        res = res * v % m\n    print(int(res))", "def calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\nfor _ in range(int(input())):\n    n = int(input())\n    val = n * (n + 1) * (n + 1)\n    print(calculate(val, 4))", "mod = 998244353\ndiv = pow(4, mod - 2, mod)\n\ndef solve():\n    n = int(input())\n    x = (n + 1) ** 2\n    x = x * n\n    x %= mod\n    x *= div\n    x %= mod\n    print(x)\nfor iii in range(int(input())):\n    solve()", "mod = 998244353\ndiv = pow(4, mod - 2, mod)\n\ndef solve():\n    n = int(input())\n    x = (n + 1) ** 2\n    x = x * n\n    x %= mod\n    x *= div\n    x %= mod\n    print(x)\nfor iii in range(int(input())):\n    solve()", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    w = n * (n + 1) ** 2\n    if w // 4 == 0:\n        print(w // 4)\n    else:\n        print(w // 2 * 499122177 % 998244353)", "t = int(input())\na = []\nfor i in range(0, t):\n    a += [list(map(int, input().split()))]\n\ndef f(n):\n    l = n * (n + 1) ** 2\n    if l % 4 == 0:\n        return l // 4 % 998244353\n    elif l % 2 == 0:\n        return l // 2 * 499122177 % 998244353\n    else:\n        return l * 748683265 % 998244353\nfor i in range(0, t):\n    print(f(a[i][0]))", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    n = int(input())\n    mod = 998244353\n    ans = n * (n + 1) % mod * (n + 1) % mod\n    ans = ans * pow(4, mod - 2, mod) % mod\n    print(ans)", "mod = 998244353\ndiv = pow(4, mod - 2, mod)\n\ndef solve():\n    n = int(input())\n    x = (n + 1) ** 2\n    x = x * n\n    x %= mod\n    x *= div\n    x %= mod\n    print(x)\nfor iii in range(int(input())):\n    solve()", "MOD = 10 ** 9 + 7\n\ndef mod_mul(a, b):\n    return a % MOD * (b % MOD) % MOD\n\ndef mod_sum(a, b):\n    return (a + b) % MOD\n\ndef mod_inv(a):\n    return pow(a, MOD - 2, MOD)\nimport io, os, sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef Q1(S, A, B, C):\n    p = S * (1 + C / 100)\n    return 'YES' if p >= A and p <= B else 'NO'\n\ndef Q2(N, K):\n\n    def hcf(x, y):\n        return hcf(y, x % y) if y else x\n    return N // hcf(N, K)\n\ndef Q3(N):\n    return N * pow(N + 1, 2, MOD) * Q_inv % MOD\nMOD = 998244353\nQ_inv = mod_inv(4)\nfor _ in range(inp()):\n    N = inp()\n    outp(Q3(N))", "def gcdEx(p, q):\n    if p == 0:\n        return (q, 0, 1)\n    (gcd, x1, y1) = gcdEx(q % p, p)\n    x = y1 - q // p * x1\n    y = x1\n    return (gcd, x, y)\n\ndef gcd(a, b):\n    if a >= b:\n        c = b\n        d = a\n    else:\n        (c, d) = (a, b)\n    while not d % c == 0:\n        a = d - c\n        b = c\n        if a >= b:\n            c = b\n            d = a\n        else:\n            (c, d) = (a, b)\n    return c\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = n * (n + 1) ** 2\n    if n % 2 == 0:\n        (_, q, _) = gcdEx(2, 998244353)\n        s = s // 2\n        s *= q\n        print(s % 998244353)\n    else:\n        s = s // 4\n        print(s % 998244353)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    mod = 998244353\n    ans = n * (n + 1) % mod * (n + 1) % mod\n    print(ans * 748683265 % mod)\n    t -= 1", "mod = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    ans = n * (n + 1) % mod * (n + 1) % mod\n    temp = pow(4, mod - 2, mod)\n    ans = ans * temp % mod\n    print(ans)", "def calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\n\ndef summation(x):\n    ret = x * (x + 1) // 2\n    return ret\nfor _ in range(int(input())):\n    n = int(input())\n    p = summation(n) ** 2\n    q = n\n    ans = calculate(p, q)\n    print(ans)", "m = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        inv = (m + 1) // 2 % m\n        pro = n // 2 * (n + 1) ** 2 % m\n        print(pro * inv % m)\n    else:\n        pro = n * ((n + 1) // 2) ** 2 % m\n        print(pro)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 4 == 2:\n        print(n * (n + 1) * (n + 1) // 2 % 998244353 * 499122177 % 998244353)\n    else:\n        print(n * (n + 1) * (n + 1) // 4 % 998244353)", "t = int(input())\nm = 998244353\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        inv = (m + 1) // 2 % m\n        pro = n // 2 * (n + 1) * (n + 1) % m\n        print(pro * inv % m)\n    else:\n        pro = n * ((n + 1) // 2) * ((n + 1) // 2) % m\n        print(pro)", "t = int(input())\nm = 998244353\nwhile t:\n    n = int(input())\n    if n % 2 == 0:\n        inv = (m + 1) // 2 % m\n        pro = n // 2 * (n + 1) * (n + 1) % m\n        print(pro * inv % m)\n    else:\n        pro = n * ((n + 1) // 2) * ((n + 1) // 2) % m\n        print(pro)\n    t = t - 1", "mod = 998244353\n\ndef power(p, q):\n    if q == 0:\n        return 0\n    elif q == 1:\n        return p\n    else:\n        res = power(p, q // 2)\n        if q & 1:\n            return res * res % mod * p % mod\n        else:\n            return res * res % mod\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    P = n ** 3 + 2 * (n * n) + n\n    P = P * power(4, mod - 2) % mod\n    print(P)", "mod = 998244353\n\ndef power(p, q):\n    if q == 0:\n        return 0\n    elif q == 1:\n        return p\n    else:\n        res = power(p, q // 2)\n        if q & 1:\n            return res * res % mod * p % mod\n        else:\n            return res * res % mod\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    P = n * (n + 1) % mod * (n + 1) % mod\n    P = P * power(4, mod - 2) % mod\n    print(P)", "def calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\nfor _ in range(int(input())):\n    n = int(input())\n    numerator = n * (n + 1) * (n + 1)\n    deno = 4\n    modinv = calculate(numerator, deno)\n    print(modinv)", "from sys import stdin\ninp = stdin.readline\nmod = 998244353\nT = int(inp())\nans = []\nfor tx in range(T):\n    N = int(inp())\n    Tn = N * (N + 1) // 2\n    if N % 4 == 2:\n        P = Tn * Tn * 2 // N % mod\n        if P % 2 == 0:\n            ans.append(P // 2)\n        else:\n            ans.append((P + mod) // 2)\n    else:\n        ans.append(Tn * Tn // N % mod)\nprint(*ans, sep='\\n')", "def fastPower(a, b):\n    m = b + 2\n    r = 1\n    while b > 0:\n        if b & 1:\n            r = r * a % m\n        a = a % m * a % m % m\n        b >>= 1\n    return r\n\ndef solver(n):\n    m = 998244353\n    num = n % m * (n + 1) % m * (n + 1) % m * fastPower(4, m - 2) % m\n    return num\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(solver(n))", "def f(n):\n    l = n * (n + 1) ** 2\n    if l % 4 == 0:\n        return l // 4 % 998244353\n    elif l % 2 == 0:\n        return l // 2 * 499122177 % 998244353\n    else:\n        return l * 748683265 % 998244353\nt = int(input())\nfor _ in range(t):\n    print(f(int(input())))", "t = int(input())\na = []\nfor i in range(0, t):\n    a += [list(map(int, input().split(' ')))]\n\ndef f(n):\n    l = n * (n + 1) ** 2\n    if l % 4 == 0:\n        return l // 4 % 998244353\n    elif l % 2 == 0:\n        return l // 2 * 499122177 % 998244353\n    else:\n        return l * 748683265 % 998244353\nfor i in range(0, t):\n    print(f(a[i][0]))", "def sol(N):\n    ans = N * ((N + 1) * (N + 1)) * 748683265 % 998244353\n    return ans\nt = int(input())\nwhile t > 0:\n    N = int(input())\n    print(sol(N))\n    t = t - 1", "def sol(N):\n    ans = N * (N + 1) ** 2 * 748683265 % 998244353\n    return ans\nt = int(input())\nwhile t > 0:\n    N = int(input())\n    print(sol(N))\n    t = t - 1", "t = int(input())\na = []\nfor i in range(0, t):\n    a += [list(map(int, input().split()))]\n\ndef f(n):\n    l = n * (n + 1) ** 2\n    if l % 4 == 0:\n        return l // 4 % 998244353\n    elif l % 2 == 0:\n        return l // 2 * 499122177 % 998244353\n    else:\n        return l % 998244353\nfor i in range(0, t):\n    print(f(a[i][0]))", "def fun(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = n * (n + 1) // 2\n    res = fun(p ** 2, n)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    p = n * (n + 1) * (n + 1)\n    q = 4\n    mod = 998244353\n    tem = mod - 2\n    while tem:\n        if tem & 1:\n            p = p * q % mod\n        q = q * q % mod\n        tem >>= 1\n    print(p)", "mod = 998244353\n\ndef modInv(a, m):\n    m0 = m\n    y = 0\n    x = 1\n    if m == 1:\n        return 0\n    while a > 1:\n        q = a // m\n        t = m\n        m = a % m\n        a = t\n        t = y\n        y = x - q * y\n        x = t\n    if x < 0:\n        x = x + m0\n    return x\nfor _ in range(int(input())):\n    n = int(input())\n    x = modInv(4, mod)\n    sump = n * (n + 1) ** 2\n    ans = sump % mod * (x % mod) % mod\n    print(ans)", "try:\n\n    def calculate(p, q):\n        mod = 998244353\n        expo = 0\n        expo = mod - 2\n        while expo:\n            if expo & 1:\n                p = p * q % mod\n            q = q * q % mod\n            expo >>= 1\n        return p\n    for t in range(int(input())):\n        N = int(input())\n        temp1 = (N + 1) * (N + 1) % 998244353\n        temp2 = N * temp1 % 998244353\n        print(calculate(temp2, 4))\nexcept:\n    pass", "mod = 998244353\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 4 == 0 or (n + 1) * (n + 1) % 4 == 0:\n        ans = n * (n + 1) ** 2 // 4\n        ans = ans % mod\n        print(ans)\n    else:\n        ans = n * (n + 1) ** 2 % mod\n        ans *= pow(4, mod - 2, mod)\n        ans = ans % mod\n        print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    if n % 4 == 0:\n        p = 1\n        p *= n + 1\n        p %= 998244353\n        p *= n + 1\n        p %= 998244353\n        p *= n // 4\n        p %= 998244353\n        print(p)\n    elif n % 2 == 0:\n        p = 1\n        p *= n + 1\n        p %= 998244353\n        p *= n + 1\n        p %= 998244353\n        p *= n // 2\n        p %= 998244353\n        print(p * 499122177 % 998244353)\n    else:\n        p = 1\n        p *= n\n        p %= 998244353\n        p *= n // 2 + 1\n        p %= 998244353\n        p *= n // 2 + 1\n        p %= 998244353\n        print(p)\n    t -= 1", "def calculateMod(p, q):\n    _mod = 998244353\n    expo = _mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % _mod\n        q = q * q % _mod\n        expo >>= 1\n    return p\n\ndef _func(n):\n    p = n * pow(n + 1, 2) // 2\n    if n & 1:\n        return calculateMod(p // 2, 1)\n    else:\n        return calculateMod(p, 2)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(_func(n))\nmain()", "import math\n\ndef calculate(p, q):\n    mod = 998244353\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\nt = int(input())\nwhile t:\n    n = int(input())\n    k = n * (n + 1) // 2 * (n * (n + 1) // 2)\n    print(calculate(k, n))\n    t -= 1", "from fractions import Fraction\nt = int(input())\nm = 998244353\nfor i in range(t):\n    n = int(input())\n    sn = n * (n + 1) // 2\n    sm = sn * sn\n    ans = Fraction(sm, n)\n    nmr = ans.numerator % m\n    if ans.denominator == 1:\n        print(nmr)\n    else:\n        print(nmr * 499122177 % m)", "mod = 998244353\n\ndef power(a, b):\n    if b == 0:\n        return 1\n    if b == 1:\n        return a\n    ret = power(a, b // 2)\n    if b % 2 == 0:\n        return ret * ret % mod\n    else:\n        return ret * ret % mod * a % mod\ntry:\n    t = int(input())\n    while t > 0:\n        n = int(input())\n        ans = n * (n + 1) % mod * (n + 1) % mod\n        ans = ans * power(4, mod - 2) % mod\n        print(ans)\n        t = t - 1\nexcept:\n    pass", "import math\n\ndef calculate(a, b):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            a = a * b % mod\n        b = b * b % mod\n        expo >>= 1\n    return a\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    print(calculate(n * (n + 1) * (n + 1), 4))", "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    S = n * (n + 1) // 2\n    ans = S * S\n    ans = ans\n    if ans % n == 0:\n        print(ans // n % 998244353)\n    else:\n        A = ans // n\n        B = ans % n\n        p = A * n + B\n        q = n\n        P = p // gcd(p, q)\n        Q = q // gcd(p, q)\n        L = 998244353 // Q + 1\n        M = (998244353 // Q + 1) * Q - 998244353\n        P = P // M\n        print(P * L % 998244353)", "import sys\nL = sys.stdin.readlines()\nT = int(L[0])\nM = 998244353\n\ndef mod_exp(x, n, m):\n    if n == 0:\n        return 1\n    return (1 + n % 2 * (x - 1)) * mod_exp(x, n >> 1, m) ** 2 % m\n\ndef exp_weight(N):\n    P = N * (N + 1) ** 2\n    return P % M * (mod_exp(4, M - 2, M) % M) % M\nfor t in range(T):\n    N = int(L[1 + t])\n    print(exp_weight(N))", "def calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\nt = int(input())\nfor z in range(t):\n    n = int(input())\n    p = n * (n + 1) * (n + 1)\n    if p % 4 == 0:\n        p = p // 4\n        q = 1\n    elif p % 2 == 0:\n        p = p // 2\n        q = 2\n    else:\n        q = 4\n    print(calculate(p, q))", "def c(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\nfor _ in range(int(input())):\n    n = int(input())\n    p = n * n * (n + 1) * (n + 1)\n    q = n\n    print(c(p // 4, n))", "from math import gcd\n\ndef modInverse(a, m):\n    g = gcd(a, m)\n    if g != 1:\n        return -1\n    else:\n        return power(a, m - 2, m)\n\ndef power(x, y, m):\n    if y == 0:\n        return 1\n    p = power(x, y // 2, m) % m\n    p = p * p % m\n    if y % 2 == 0:\n        return p\n    else:\n        return x * p % m\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\nm = 998244353\nr = modInverse(4, m)\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n        continue\n    l = n % m * ((n + 1) % m) * ((n + 1) % m) * (r % m) % m\n    print(l)", "mod = 998244353\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef modexp(x, n):\n    if n == 0:\n        return 1\n    elif n % 2 == 0:\n        return modexp(x * x % mod, n // 2)\n    else:\n        return x * modexp(x * x % mod, (n - 1) / 2) % mod\n\ndef getFractionModulo(a, b):\n    c = gcd(a, b)\n    a = a // c\n    b = b // c\n    d = modexp(b, mod - 2)\n    ans = a % mod * (d % mod) % mod\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    c = (n + 1) * (n * (n + 1) // 2)\n    if c % 2 == 0:\n        c //= 2\n        print(c % mod)\n    else:\n        print(getFractionModulo(c, 2))", "mod = 998244353\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef modexp(x, n):\n    if n == 0:\n        return 1\n    elif n % 2 == 0:\n        return modexp(x * x % mod, n // 2)\n    else:\n        return x * modexp(x * x % mod, (n - 1) / 2) % mod\n\ndef getFractionModulo(a, b):\n    c = gcd(a, b)\n    a = a // c\n    b = b // c\n    d = modexp(b, mod - 2)\n    ans = a % mod * (d % mod) % mod\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    c = (n + 1) * (n * (n + 1) // 2)\n    if c % 2 == 0:\n        c //= 2\n        print(c % mod)\n    else:\n        print(getFractionModulo(c, 2))", "import math\n\ndef calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    print(calculate(n * (n + 1) * (n + 1), 4))"]