["for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in reversed(range(1, n)):\n        if a[i] > 0:\n            moves = a[i] // 2\n            a[i] -= 2 * moves\n            a[i - 1] -= moves\n    for i in reversed(range(1, n)):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(sum((abs(x) for x in a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in reversed(range(1, n)):\n        if a[i] > 0:\n            moves = a[i] // 2\n            a[i] -= 2 * moves\n            a[i - 1] -= moves\n    for i in reversed(range(1, n)):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(sum((abs(x) for x in a)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    for i in reversed(range(1, n)):\n        if arr[i] > 0:\n            x = arr[i] // 2\n            arr[i] -= 2 * x\n            arr[i - 1] -= x\n    for i in reversed(range(1, n)):\n        if arr[i] > 0 and arr[i - 1] > 0:\n            arr[i] -= 2\n            arr[i - 1] -= 1\n    print(sum((abs(i) for i in arr)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    for i in reversed(range(1, n)):\n        if arr[i] > 0:\n            x = arr[i] // 2\n            arr[i] -= 2 * x\n            arr[i - 1] -= x\n    for i in reversed(range(1, n)):\n        if arr[i] > 0 and arr[i - 1] > 0:\n            arr[i] -= 2\n            arr[i - 1] -= 1\n    print(sum((abs(i) for i in arr)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    for i in reversed(range(1, n)):\n        if arr[i] > 0:\n            x = arr[i] // 2\n            arr[i] -= 2 * x\n            arr[i - 1] -= x\n    for i in reversed(range(1, n)):\n        if arr[i] > 0 and arr[i - 1] > 0:\n            arr[i] -= 2\n            arr[i - 1] -= 1\n    print(sum((abs(i) for i in arr)))", "def f(n, arr):\n    k = 0\n    for j in range(n - 2, -1, -1):\n        if arr[j + 1] <= 0:\n            k = 0\n            continue\n        if arr[j + 1] % 2 == 0 or k == 1:\n            arr[j] -= arr[j + 1] // 2\n            arr[j + 1] = 0\n            k = 0\n        elif j == 0:\n            if arr[j] - arr[j + 1] // 2 > 0:\n                arr[j] -= arr[j + 1] // 2 + 1\n                arr[j + 1] = -1\n            else:\n                arr[j] -= arr[j + 1] // 2\n                arr[j + 1] = 1\n        else:\n            arr[j] -= arr[j + 1] // 2\n            arr[j + 1] = 1\n            k = 1\n    return sum([abs(el) for el in arr])\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(el) for el in input().split(' ')]\n    print(f(n, arr))", "def find_best_sub(arr, i, negative=False):\n    (a, b) = (arr[i - 1], arr[i])\n    if b <= 0:\n        return 0\n    cand = b // 2\n    if a > cand and b % 2 == 1 and negative:\n        cand += 1\n    return cand\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        for i in range(n - 1, 0, -1):\n            x = find_best_sub(a, i)\n            a[i - 1] -= x\n            a[i] -= 2 * x\n        for i in range(n - 1, 0, -1):\n            x = find_best_sub(a, i, negative=True)\n            a[i - 1] -= x\n            a[i] -= 2 * x\n        print(sum(map(abs, a)))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0:\n            t = a[i] // 2\n            a[i] -= 2 * t\n            a[i - 1] -= t\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0 and a[i - 1] > 0:\n            t = (a[i] + 1) // 2\n            a[i] -= 2 * t\n            a[i - 1] -= t\n    print(sum((abs(i) for i in a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0:\n            t = a[i] // 2\n            a[i] -= 2 * t\n            a[i - 1] -= t\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0 and a[i - 1] > 0:\n            t = (a[i] + 1) // 2\n            a[i] -= 2 * t\n            a[i - 1] -= t\n    print(sum((abs(i) for i in a)))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    S = 0\n    for i in range(N - 1, 0, -1):\n        if A[i] > 0:\n            q = int(A[i] / 2)\n            A[i] = A[i] % 2\n            A[i - 1] -= q\n    for i in range(N - 1, 0, -1):\n        if A[i] == 1 and A[i - 1] > 0:\n            A[i] -= 2\n            A[i - 1] -= 1\n    for i in A:\n        S += abs(i)\n    print(S)", "import time\nimport sys\nimport math\nmod = 1000000007\nfrom collections import defaultdict as dd\nfrom collections import Counter\nfrom itertools import accumulate\nfrom functools import lru_cache\ninty = lambda : int(input())\nstringy = lambda : input().strip()\nmappy = lambda : map(int, input().strip().split())\nfmappy = lambda : map(float, input().strip().split())\nlisty = lambda : list(map(int, input().strip().split()))\nsys.setrecursionlimit(10 ** 6)\ntick = lambda : time.perf_counter()\nlogg = lambda a, b: math.log(a) / math.log(b)\nprefix = lambda x: list(accumulate(x))\nsign = lambda x, y: x >= 0 and y >= 0 or (x < 0 and y < 0)\nT = inty()\nfor _ in range(T):\n    n = inty()\n    nums = listy()\n    for i in range(n - 1, 0, -1):\n        if nums[i] > 0:\n            till = nums[i] // 2\n            nums[i] -= 2 * till\n            nums[i - 1] -= till\n    for i in range(n - 1, 0, -1):\n        if nums[i] == 1 and nums[i - 1] > 0:\n            nums[i - 1] -= 1\n    res = 0\n    for i in range(n):\n        res += abs(nums[i])\n    print(res)", "test = int(input())\nwhile test:\n    test -= 1\n    N = int(input())\n    A = list(map(int, input().split()))\n    for i in range(N - 1, 0, -1):\n        if A[i] > 0:\n            k = A[i] // 2\n            A[i] -= 2 * k\n            A[i - 1] -= k\n    for i in range(N - 1):\n        if A[i] > 0 and A[i + 1] > 0:\n            A[i] -= 1\n            A[i + 1] -= 2\n    ans = 0\n    for i in A:\n        ans += abs(i)\n    print(ans)", "N = int(input())\nwhile N > 0:\n    n = int(input())\n    a = input()\n    b = 0\n    a = a.split()\n    a = list(map(lambda x: int(x), a))\n    m = n\n    if n == 1:\n        if a[0] < 0:\n            a[0] = a[0] * -1\n        print(a[0])\n    else:\n        while n > 1:\n            if a[n - 1] >= 2:\n                div = a[n - 1] // 2\n                a[n - 2] = a[n - 2] - div\n                a[n - 1] = a[n - 1] % 2\n            n = n - 1\n        n = m\n        while n > 1:\n            if a[n - 1] == 1 and a[n - 2] > 0:\n                a[n - 2] = a[n - 2] - 1\n                a[n - 1] = a[n - 1] - 2\n            n = n - 1\n        for i in range(0, m):\n            if a[i] < 0:\n                a[i] = a[i] * -1\n            b = b + a[i]\n        print(b)\n    N = N - 1", "N = int(input())\nwhile N > 0:\n    n = int(input())\n    a = input()\n    b = 0\n    a = a.split()\n    a = list(map(lambda x: int(x), a))\n    m = n\n    if n == 1:\n        if a[0] < 0:\n            a[0] = a[0] * -1\n        print(a[0])\n    else:\n        while n > 1:\n            if a[n - 1] >= 2:\n                div = a[n - 1] // 2\n                a[n - 2] = a[n - 2] - div\n                a[n - 1] = a[n - 1] % 2\n            n = n - 1\n        n = m\n        while n > 1:\n            if a[n - 1] == 1 and a[n - 2] > 0:\n                a[n - 2] = a[n - 2] - 1\n                a[n - 1] = a[n - 1] - 2\n            n = n - 1\n        for i in range(0, m):\n            if a[i] < 0:\n                a[i] = a[i] * -1\n            b = b + a[i]\n        print(b)\n    N = N - 1", "N = int(input())\nwhile N > 0:\n    n = int(input())\n    a = input()\n    b = 0\n    a = a.split()\n    a = list(map(lambda x: int(x), a))\n    m = n\n    if n == 1:\n        if a[0] < 0:\n            a[0] = a[0] * -1\n        print(a[0])\n    else:\n        while n > 1:\n            if a[n - 1] >= 2:\n                div = a[n - 1] // 2\n                a[n - 2] = a[n - 2] - div\n                a[n - 1] = a[n - 1] % 2\n            n = n - 1\n        n = m\n        while n > 1:\n            if a[n - 1] > 0 and a[n - 2] > 0:\n                a[n - 2] = a[n - 2] - 1\n                a[n - 1] = a[n - 1] - 2\n            n = n - 1\n        for i in range(0, m):\n            if a[i] < 0:\n                a[i] = a[i] * -1\n            b = b + a[i]\n        print(b)\n    N = N - 1", "N = int(input())\nwhile N > 0:\n    n = int(input())\n    a = input()\n    b = 0\n    a = a.split()\n    a = list(map(lambda x: int(x), a))\n    m = n\n    if n == 1:\n        if a[0] < 0:\n            a[0] = a[0] * -1\n        print(a[0])\n    else:\n        while n > 1:\n            if a[n - 1] >= 2:\n                div = a[n - 1] // 2\n                a[n - 2] = a[n - 2] - div\n                a[n - 1] = a[n - 1] % 2\n            n = n - 1\n        n = m\n        while n > 1:\n            if a[n - 1] > 0 and a[n - 2] > 0:\n                a[n - 2] = a[n - 2] - 1\n                a[n - 1] = a[n - 1] - 2\n            n = n - 1\n        for i in range(0, m):\n            if a[i] < 0:\n                a[i] = a[i] * -1\n            b = b + a[i]\n        print(b)\n    N = N - 1", "n = int(input())\nfor z in range(n):\n    size = int(input())\n    arr = [int(i) for i in input().split()]\n    for i in range(size - 1, 0, -1):\n        if arr[i] > 0:\n            k = arr[i] // 2\n            arr[i] = arr[i] - 2 * k\n            arr[i - 1] = arr[i - 1] - k\n    for i in range(size - 1, 0, -1):\n        if arr[i] > 0 and arr[i - 1] > 0:\n            arr[i] -= 2\n            arr[i - 1] -= 1\n    sum = 0\n    for i in arr:\n        sum += abs(i)\n    print(sum)", "from sys import stdin\n\ndef sp(n, a):\n    if n == 1:\n        return abs(a[0])\n    ans = 0\n    for i in range(n - 1, 0, -1):\n        a1 = a[i - 1]\n        a2 = a[i]\n        if a2 <= 0:\n            continue\n        z = a2 // 2\n        a[i] -= z * 2\n        a[i - 1] -= z\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    return sum([abs(x) for x in a])\nt = int(stdin.readline().strip())\nfor i in range(t):\n    n = int(stdin.readline().strip())\n    a = [int(x) for x in stdin.readline().split()]\n    print(sp(n, a))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in reversed(range(1, n)):\n        if a[i] > 0:\n            moves = a[i] // 2\n            a[i] -= 2 * moves\n            a[i - 1] -= moves\n    for i in reversed(range(1, n)):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(sum((abs(x) for x in a)))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n - 1):\n        if arr[n - i - 1] > 1 and arr[n - i - 1] % 2 == 0:\n            div = math.floor(arr[n - i - 1] / 2)\n            arr[n - i - 1] = 0\n            arr[n - i - 2] -= div\n        elif arr[n - i - 1] > 1 and arr[n - i - 1] % 2 != 0:\n            div = math.floor(arr[n - i - 1] / 2)\n            arr[n - i - 1] = 1\n            arr[n - i - 2] -= div\n    for i in range(n - 1):\n        if arr[n - i - 2] > 0 and arr[n - i - 1] > 0:\n            arr[n - i - 2] -= 1\n            arr[n - i - 1] -= 2\n        arr[n - i - 1] = abs(arr[n - i - 1])\n    arr[0] = abs(arr[0])\n    print(sum(arr))", "for i in range(int(input())):\n    N = int(input())\n    arr = [int(x) for x in input().split()]\n    for i in range(len(arr) - 1, 0, -1):\n        if arr[i] < 0:\n            continue\n        x = arr[i] // 2\n        arr[i] = arr[i] - x * 2\n        arr[i - 1] = arr[i - 1] - x\n    for i in range(len(arr) - 1, 0, -1):\n        if arr[i] > 0 and arr[i - 1] > 0:\n            arr[i] -= 2\n            arr[i - 1] -= 1\n    sum = 0\n    for i in arr:\n        sum += abs(i)\n    print(sum)", "for test in range(int(input())):\n    n = int(input())\n    a = [int(ai) for ai in input().split()]\n    for i in range(n - 1, 0, -1):\n        if a[i] >= 2 and a[i - 1] >= 1:\n            substract = min(a[i] // 2, a[i - 1])\n            a[i] -= 2 * substract\n            a[i - 1] -= 1 * substract\n    for i in range(n - 1, 0, -1):\n        if a[i] >= 2:\n            substract = a[i] // 2\n            a[i] -= 2 * substract\n            a[i - 1] -= 1 * substract\n    for i in range(n - 1, 0, -1):\n        if a[i] == 1 and a[i - 1] >= 1:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(sum((abs(ai) for ai in a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in reversed(range(1, n)):\n        if a[i] > 0:\n            moves = a[i] // 2\n            a[i] -= 2 * moves\n            a[i - 1] -= moves\n    for i in reversed(range(1, n)):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(sum((abs(x) for x in a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in reversed(range(1, n)):\n        if a[i] > 0:\n            moves = a[i] // 2\n            a[i] -= 2 * moves\n            a[i - 1] -= moves\n    for i in reversed(range(1, n)):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(sum((abs(x) for x in a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in reversed(range(1, n)):\n        if a[i] > 0:\n            moves = a[i] // 2\n            a[i] -= 2 * moves\n            a[i - 1] -= moves\n    for i in reversed(range(1, n)):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(sum((abs(x) for x in a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sum = 0\n    for i in range(n - 1, 0, -1):\n        if a[i] <= 0:\n            continue\n        elif a[i] % 2 == 0:\n            a[i - 1] = int(a[i - 1] - a[i] / 2)\n            a[i] = 0\n        else:\n            a[i - 1] = int(a[i - 1] - (a[i] - 1) / 2)\n            a[i] = 1\n    for i in range(n - 1, 0, -1):\n        if a[i] == 1 and a[i - 1] > 0:\n            a[i - 1] = a[i - 1] - 1\n            a[i] = -1\n    for i in a:\n        sum += abs(i)\n    print(sum)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0:\n            div = a[i] // 2\n            a[i - 1] -= div\n            a[i] -= 2 * div\n    for i in range(n - 1, 0, -1):\n        if a[i - 1] > 0 and a[i] > 0:\n            a[i - 1] -= 1\n            a[i] -= 2\n    ans = 0\n    for i in range(n):\n        ans += abs(a[i])\n    print(ans)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(abs(a[0]))\n    else:\n        for i in range(n - 1, 0, -1):\n            if a[i] > 0:\n                moves = a[i] // 2\n                a[i] -= 2 * moves\n                a[i - 1] -= moves\n        for i in range(n - 1, 0, -1):\n            if a[i] > 0 and a[i - 1] > 0:\n                a[i] -= 2\n                a[i - 1] -= 1\n        print(sum((abs(x) for x in a)))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in reversed(range(1, n)):\n        if a[i] > 0:\n            moves = a[i] // 2\n            a[i] -= 2 * moves\n            a[i - 1] -= moves\n    for i in reversed(range(1, n)):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(sum((abs(x) for x in a)))", "import sys\nimport math\nfrom collections import Counter\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    if n == 1:\n        print(abs(a[0]))\n    else:\n        ans = 0\n        for i in reversed(range(1, n)):\n            if a[i] > 0:\n                moves = a[i] // 2\n                a[i] -= 2 * moves\n                a[i - 1] -= moves\n        for i in reversed(range(1, n)):\n            if a[i] > 0 and a[i - 1] > 0:\n                a[i] -= 2\n                a[i - 1] -= 1\n        print(sum((abs(x) for x in a)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    for i in range(n - 2, -1, -1):\n        if lis[i + 1] > 0:\n            x = lis[i + 1] // 2\n            lis[i] = lis[i] - x\n            lis[i + 1] = lis[i + 1] - 2 * x\n    for i in range(n - 1, 0, -1):\n        if lis[i] == 1 and lis[i - 1] > 0:\n            lis[i] = -1\n            lis[i - 1] -= 1\n    sum = 0\n    for i in lis:\n        sum += abs(i)\n    print(sum)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef v(k, val1, val2):\n    val1 -= k\n    val2 -= 2 * k\n    return abs(val1) + abs(val2)\n\ndef fun(val1, val2):\n    if val2 <= 0:\n        return (val1, val2)\n    x = val2 // 2\n    m1 = v(x, val1, val2)\n    return (val1 - x, val2 - 2 * x)\nfor _ in range(inp()):\n    n = inp()\n    arr = inlt()\n    if n == 1:\n        print(abs(arr[0]))\n    else:\n        for i in range(n - 2, -1, -1):\n            (arr[i], arr[i + 1]) = fun(arr[i], arr[i + 1])\n        sm = 0\n        for i in range(n - 1, 0, -1):\n            if arr[i] == 1 and arr[i - 1] > 0:\n                arr[i] = -1\n                arr[i - 1] -= 1\n        for i in range(n):\n            sm += abs(arr[i])\n        print(sm)", "from math import *\nfrom bisect import *\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0:\n            t = a[i] // 2\n            a[i - 1] -= t\n            a[i] -= 2 * t\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i - 1] -= 1\n            a[i] -= 2\n    sum_ = 0\n    for i in a:\n        sum_ += abs(i)\n    print(sum_)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    for i in range(N - 1, 0, -1):\n        if A[i] > 0:\n            val = A[i]\n            A[i - 1] -= val // 2\n            A[i] = val % 2\n    for i in range(N - 2, -1, -1):\n        if A[i] > 0 and A[i + 1] == 1:\n            A[i] -= 1\n            A[i + 1] -= 2\n    ans = 0\n    for i in A:\n        ans += abs(i)\n    print(ans)", "def op(a, b):\n    if abs(a - 2) + abs(b - 1) < abs(a) + abs(b):\n        return True\n    return False\nimport sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().split()))\n    ans = 0\n    if n == 1:\n        print(abs(arr[0]))\n    else:\n        i = n - 1\n        while i > 0:\n            if arr[i] > 0 and op(arr[i], arr[i - 1]):\n                if arr[i] % 2 == 0:\n                    arr[i - 1] -= arr[i] // 2\n                    arr[i] = 0\n                else:\n                    arr[i - 1] -= arr[i] // 2\n                    arr[i] = 1\n            i -= 1\n        i = n - 1\n        while i > 0:\n            if arr[i] > 0 and op(arr[i], arr[i - 1]):\n                arr[i] = -1\n                arr[i - 1] -= 1\n            i -= 1\n        for i in arr:\n            ans += abs(i)\n        sys.stdout.write(str(ans) + '\\n')", "from sys import stdin\ninput = stdin.readline\n\ndef ii():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\nfrom math import sqrt\n\ndef perfect_sq(n):\n    x = int(sqrt(n))\n    while x * x < n:\n        x += 1\n    while x * x > n:\n        x -= 1\n    return x * x == n\nfor _ in range(ii()):\n    n = ii()\n    a = li()\n    for i in range(n - 2, -1, -1):\n        if a[i + 1] > 0:\n            moves = a[i + 1] // 2\n            a[i + 1] -= 2 * moves\n            a[i] -= moves\n    for i in range(n - 2, -1, -1):\n        if a[i] > 0 and a[i + 1] > 0:\n            a[i + 1] -= 2\n            a[i] -= 1\n    ans = 0\n    for i in a:\n        ans += abs(i)\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0:\n            a[i - 1] -= a[i] // 2\n            a[i] %= 2\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    res = 0\n    for i in a:\n        res += abs(i)\n    print(res)", "import numpy as np\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in reversed(range(1, n)):\n        if a[i] > 0:\n            moves = a[i] // 2\n            a[i] -= 2 * moves\n            a[i - 1] -= moves\n    for i in reversed(range(1, n)):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(np.sum(np.abs(a)))", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if nums[i] > 0:\n            nums[i - 1] -= nums[i] // 2\n            nums[i] %= 2\n    for i in range(n - 1, 0, -1):\n        if nums[i] > 0 and nums[i - 1] > 0:\n            nums[i] -= 2\n            nums[i - 1] -= 1\n    print(sum([abs(i) for i in nums]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if arr[i] > 0:\n            m = arr[i] // 2\n            arr[i - 1] -= m\n            arr[i] -= 2 * m\n    for i in range(n - 1, 0, -1):\n        if arr[i] > 0 and arr[i - 1] > 0:\n            arr[i] -= 2\n            arr[i - 1] -= 1\n    sum = 0\n    for i in arr:\n        sum += abs(i)\n    print(sum)", "ri = lambda : int(input())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input()\nfrom collections import defaultdict\nimport sys\nsys.setrecursionlimit(100000)\nt = ri()\nfor test in range(t):\n    n = ri()\n    arr = rl()\n    i = n - 1\n    while i >= 1:\n        if arr[i] > 0:\n            x = arr[i] // 2\n            arr[i - 1] -= x\n            arr[i] -= 2 * x\n        i -= 1\n    ans = 0\n    i = n - 1\n    while i >= 1:\n        if arr[i] == 1 and arr[i - 1] > 0:\n            arr[i - 1] -= 1\n            arr[i] -= 2\n        i -= 1\n    for i in arr:\n        ans += abs(i)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if nums[i] > 0:\n            hf = nums[i] // 2\n            nums[i] -= 2 * hf\n            nums[i - 1] -= hf\n    for i in range(n - 1, 0, -1):\n        if nums[i] == 1 and nums[i - 1] > 0:\n            nums[i] -= 2\n            nums[i - 1] -= 1\n    res = 0\n    for num in nums:\n        res += abs(num)\n    print(res)", "import time\nimport sys\nimport math\nmod = 1000000007\nfrom collections import defaultdict as dd\nfrom collections import Counter\nfrom itertools import accumulate\nfrom functools import lru_cache\ninty = lambda : int(input())\nstringy = lambda : input().strip()\nmappy = lambda : map(int, input().strip().split())\nfmappy = lambda : map(float, input().strip().split())\nlisty = lambda : list(map(int, input().strip().split()))\nsys.setrecursionlimit(10 ** 6)\ntick = lambda : time.perf_counter()\nlogg = lambda a, b: math.log(a) / math.log(b)\nprefix = lambda x: list(accumulate(x))\nsign = lambda x, y: x >= 0 and y >= 0 or (x < 0 and y < 0)\nT = inty()\nfor _ in range(T):\n    n = inty()\n    nums = listy()\n    for i in range(n - 1, 0, -1):\n        if nums[i] > 0:\n            hf = nums[i] // 2\n            nums[i] -= 2 * hf\n            nums[i - 1] -= hf\n    for i in range(n - 1, 0, -1):\n        if nums[i] == 1 and nums[i - 1] > 0:\n            nums[i] -= 2\n            nums[i - 1] -= 1\n    res = 0\n    for num in nums:\n        res += abs(num)\n    print(res)", "t = int(input())\nres = []\nfor _ in range(t):\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    for i in range(n - 1, 0, -1):\n        if nums[i] > 0:\n            times = nums[i] // 2\n            nums[i] -= 2 * times\n            nums[i - 1] -= times\n    for i in range(n - 1, 0, -1):\n        if nums[i] > 0 and nums[i - 1] > 0:\n            nums[i] -= 2\n            nums[i - 1] -= 1\n    res.append(sum((abs(x) for x in nums)))\nfor val in res:\n    print(val)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if lis[i] > 0:\n            hf = abs(lis[i]) // 2\n            lis[i] -= hf * 2\n            lis[i - 1] -= hf\n    for i in range(n - 1, 0, -1):\n        if lis[i] > 0 and lis[i - 1] > 0:\n            lis[i] -= 2\n            lis[i - 1] -= 1\n    ans = 0\n    for i in lis:\n        ans += abs(i)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if arr[i] <= 0:\n            continue\n        x = arr[i] // 2\n        arr[i - 1] -= x\n        arr[i] -= 2 * x\n    for i in range(n - 1):\n        if arr[i] > 0 and arr[i + 1] == 1:\n            arr[i] -= 1\n            arr[i + 1] -= 2\n    ans = 0\n    for i in arr:\n        ans += abs(i)\n    print(ans)", "t = int(input())\nres = []\nfor _ in range(t):\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    for i in range(n - 1, 0, -1):\n        if nums[i] > 0:\n            times = nums[i] // 2\n            nums[i] -= 2 * times\n            nums[i - 1] -= times\n    for i in range(n - 1, 0, -1):\n        if nums[i] > 0 and nums[i - 1] > 0:\n            nums[i] -= 2\n            nums[i - 1] -= 1\n    res.append(sum((abs(x) for x in nums)))\nfor val in res:\n    print(val)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0:\n            a[i - 1] -= a[i] // 2\n            a[i] = a[i] % 2\n            if a[i] == 1 and a[i - 1] > 0 and (a[i - 1] % 2 == 1 or i == 1):\n                a[i] -= 2\n                a[i - 1] -= 1\n    print(sum([abs(j) for j in a]))", "t = int(input())\nres = []\nfor _ in range(t):\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    for i in range(n - 1, 0, -1):\n        if nums[i] > 0:\n            times = nums[i] // 2\n            nums[i] -= 2 * times\n            nums[i - 1] -= times\n    for i in range(n - 1, 0, -1):\n        if nums[i] > 0 and nums[i - 1] > 0:\n            nums[i] -= 2\n            nums[i - 1] -= 1\n    res.append(sum((abs(x) for x in nums)))\nfor val in res:\n    print(val)", "for i in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    min_su = 0\n    for k in range(n - 2, -1, -1):\n        if li[k + 1] > 0:\n            va = li[k + 1] // 2\n            li[k] -= va\n            li[k + 1] -= 2 * va\n    for k in range(n - 2, -1, -1):\n        if li[k] > 0 and li[k + 1] == 1:\n            li[k] -= 1\n            li[k + 1] -= 2\n    for i in li:\n        min_su += abs(i)\n    print(min_su)", "for _ in range(int(input())):\n    N = int(input())\n    nums = list(map(int, input().split()))\n    for i in range(N - 1, 0, -1):\n        if nums[i] >= 2:\n            nums[i - 1] = nums[i - 1] - nums[i] // 2\n            nums[i] = nums[i] % 2\n    for i in range(len(nums) - 1, 0, -1):\n        if nums[i] >= 1 and nums[i - 1] >= 1:\n            nums[i - 1] = nums[i - 1] - 1\n            nums[i] = nums[i] - 2\n    print(sum([abs(x) for x in nums]))", "for _ in range(int(input())):\n    N = int(input())\n    nums = list(map(int, input().split()))\n    s = abs(nums[0]) if N == 1 else (2 * 10) ** 5\n    for i in range(len(nums) - 1, 0, -1):\n        if nums[i] >= 2:\n            nums[i - 1] = nums[i - 1] - nums[i] // 2\n            nums[i] = nums[i] % 2\n    for i in range(len(nums) - 1, 0, -1):\n        if nums[i] >= 1 and nums[i - 1] >= 1:\n            nums[i - 1] = nums[i - 1] - 1\n            nums[i] = nums[i] - 2\n    print(sum([abs(x) for x in nums]))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(abs(l[0]))\n    else:\n        for i in range(n - 1, 0, -1):\n            if l[i] <= 0:\n                continue\n            else:\n                m = l[i] // 2\n                l[i] %= 2\n                l[i - 1] -= m\n        for i in range(n - 1, 0, -1):\n            if l[i] == 1 and l[i - 1] > 0:\n                l[i - 1] -= 1\n                l[i] -= 2\n        s = 0\n        for i in range(n):\n            s += abs(l[i])\n        print(s)", "def op(a, b):\n    if abs(a - 2) + abs(b - 1) < abs(a) + abs(b):\n        return True\n    return False\nimport sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().split()))\n    ans = 0\n    if n == 1:\n        print(abs(arr[0]))\n    else:\n        i = n - 1\n        while i > 0:\n            if arr[i] > 0 and op(arr[i], arr[i - 1]):\n                if arr[i] % 2 == 0:\n                    arr[i - 1] -= arr[i] // 2\n                    arr[i] = 0\n                else:\n                    arr[i - 1] -= arr[i] // 2\n                    arr[i] = 1\n            i -= 1\n        i = n - 1\n        while i > 0:\n            if arr[i] > 0 and op(arr[i], arr[i - 1]):\n                arr[i] = -1\n                arr[i - 1] -= 1\n            i -= 1\n        for i in arr:\n            ans += abs(i)\n        sys.stdout.write(str(ans) + '\\n')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0:\n            count = a[i] // 2\n            a[i] = a[i] - 2 * count\n            a[i - 1] = a[i - 1] - 1 * count\n    for i in range(n - 1):\n        if a[i] > 0 and a[i + 1] > 0:\n            a[i] = a[i] - 1\n            a[i + 1] = a[i + 1] - 2\n    sum1 = 0\n    for i in range(n):\n        sum1 += abs(a[i])\n    print(sum1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in reversed(range(1, n)):\n        if a[i] > 0:\n            moves = a[i] // 2\n            a[i] -= 2 * moves\n            a[i - 1] -= moves\n    for i in reversed(range(1, n)):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(sum((abs(x) for x in a)))", "def op(a, b):\n    if abs(a - 2) + abs(b - 1) < abs(a) + abs(b):\n        return True\n    return False\nimport sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().split()))\n    ans = 0\n    if n == 1:\n        print(abs(arr[0]))\n    else:\n        i = n - 1\n        while i > 0:\n            if arr[i] > 0 and op(arr[i], arr[i - 1]):\n                if arr[i] % 2 == 0:\n                    arr[i - 1] -= arr[i] // 2\n                    arr[i] = 0\n                else:\n                    arr[i - 1] -= arr[i] // 2\n                    arr[i] = 1\n            i -= 1\n        i = n - 1\n        while i > 0:\n            if arr[i] > 0 and op(arr[i], arr[i - 1]):\n                arr[i] = -1\n                arr[i - 1] -= 1\n            i -= 1\n        for i in arr:\n            ans += abs(i)\n        sys.stdout.write(str(ans) + '\\n')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in reversed(range(1, n)):\n        if a[i] > 0:\n            moves = a[i] // 2\n            a[i] -= 2 * moves\n            a[i - 1] -= moves\n    for i in reversed(range(1, n)):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(sum((abs(x) for x in a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in reversed(range(1, n)):\n        if a[i] > 0:\n            moves = a[i] // 2\n            a[i] -= 2 * moves\n            a[i - 1] -= moves\n    for i in reversed(range(1, n)):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(sum((abs(x) for x in a)))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for j in range(n - 2, -1, -1):\n        if l[j + 1] >= 2:\n            c = l[j + 1] // 2\n            l[j + 1] = l[j + 1] % 2\n            l[j] = l[j] - c\n    for j in range(n - 2, -1, -1):\n        if l[j + 1] > 0 and l[j] > 0:\n            l[j + 1] = -1\n            l[j] = l[j] - 1\n    for j in l:\n        ans += abs(j)\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1, 0, -1):\n        if l[i] <= 0:\n            ans += abs(l[i])\n        else:\n            ans += l[i] % 2\n            l[i - 1] -= l[i] // 2\n            if l[i - 1] > 0 and l[i] % 2 == 1:\n                if i > 1:\n                    l[i - 1] -= l[i - 1] % 2\n                else:\n                    l[i - 1] -= 1\n    ans += abs(l[0])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(abs(a[0]))\n        continue\n    else:\n        for i in range(n - 1, 0, -1):\n            if a[i] < 1:\n                continue\n            elif a[i] % 2 == 0 and a[i] >= 2:\n                diff = a[i] // 2\n                a[i] = 0\n                a[i - 1] -= diff\n            elif a[i] % 2 != 0 and a[i] > 1:\n                diff = (a[i] - 1) // 2\n                a[i] = 1\n                a[i - 1] -= diff\n        for i in range(n - 1, 0, -1):\n            if a[i] == 1:\n                if a[i - 1] > 0:\n                    a[i] = -1\n                    a[i - 1] -= 1\n        ans = 0\n        for i in range(n):\n            ans += abs(a[i])\n        print(ans)", "def func():\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(abs(l[0]))\n        return\n    for i in range(n - 1, 0, -1):\n        if l[i] > 1:\n            if l[i] % 2 == 0:\n                x = l[i] // 2\n                l[i] = 0\n                l[i - 1] -= x\n            else:\n                x = l[i] // 2\n                l[i] = 1\n                l[i - 1] -= x\n    for i in range(n - 1):\n        if l[i] > 0 and l[i + 1] == 1:\n            l[i] -= 1\n            l[i + 1] = -1\n    ans = 0\n    for i in range(n):\n        ans += abs(l[i])\n    print(ans)\nt = int(input())\nwhile t:\n    func()\n    t -= 1", "def func():\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(abs(l[0]))\n        return\n    for i in range(n - 1, 0, -1):\n        if l[i] > 1:\n            if l[i] % 2 == 0:\n                x = l[i] // 2\n                l[i] = 0\n                l[i - 1] -= x\n            else:\n                x = l[i] // 2\n                l[i] = 1\n                l[i - 1] -= x\n    for i in range(n - 1):\n        if l[i] > 0 and l[i + 1] == 1:\n            l[i] -= 1\n            l[i + 1] = -1\n    ans = 0\n    for i in range(n):\n        ans += abs(l[i])\n    print(ans)\nt = int(input())\nwhile t:\n    func()\n    t -= 1", "import sys\nfrom math import sqrt, gcd, factorial, ceil, floor, pi\nfrom collections import deque, Counter, OrderedDict\nfrom heapq import heapify, heappush, heappop\ninput = lambda : sys.stdin.readline()\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 10 ** 9 + 7\nfor _ in range(I()):\n    n = I()\n    a = L()\n    ans = 0\n    for i in range(n - 1)[::-1]:\n        if a[i + 1] <= 0:\n            continue\n        x = a[i + 1] // 2\n        a[i] -= x\n        a[i + 1] -= 2 * x\n    for i in range(n - 1)[::-1]:\n        if a[i] > 0 and a[i + 1] == 1:\n            a[i] -= 1\n            a[i + 1] -= 2\n    for i in a:\n        ans += abs(i)\n    print(ans)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        for i in reversed(range(1, n)):\n            if l[i] > 0:\n                m = l[i] // 2\n                l[i - 1] -= m\n                l[i] -= 2 * m\n        for i in reversed(range(1, n)):\n            if l[i] == 1 and l[i - 1] > 0:\n                l[i - 1] -= 1\n                l[i] -= 2\n        print(sum((abs(j) for j in l)))\nmain()", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in range(n - 1, 0, -1):\n        if arr[i] > 0:\n            temp = arr[i] // 2\n            arr[i - 1] -= temp\n            arr[i] -= temp * 2\n    for i in range(n - 1, 0, -1):\n        if arr[i] > 0 and arr[i - 1] > 0:\n            arr[i - 1] -= 1\n            arr[i] -= 2\n    for i in range(0, n):\n        s += abs(arr[i])\n    print(s)\n    t -= 1", "import math\nfrom bisect import bisect, bisect_left, bisect_right\nimport heapq\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as ddc\nfrom collections import Counter\n\ndef intin():\n    return int(input())\n\ndef mapin():\n    return map(int, input().split())\n\ndef strin():\n    return input().split()\nINF = 10 ** 20\nmod = 1000000007\n\ndef LIS(arr, n):\n    dp = [10 ** 9] * (n + 1)\n    for ele in arr:\n        dp[bisect_left(dp, ele)] = ele\n    return bisect_left(dp, 10 ** 9)\n\ndef exponentiation(bas, exp, mod=1000000007):\n    t = 1\n    while exp > 0:\n        if exp % 2 != 0:\n            t = t * bas % mod\n        bas = bas * bas % mod\n        exp //= 2\n    return t % mod\n\ndef MOD(p, q=1, mod=1000000007):\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\nyes = 'YES'\nno = 'NO'\neven = 'EVEN'\nodd = 'ODD'\n\ndef process(arr, n):\n    if n == 1:\n        return abs(arr[0])\n    ans = 0\n    for i in range(n - 1, 0, -1):\n        if arr[i] > 0:\n            arr[i - 1] -= arr[i] // 2\n            arr[i] %= 2\n    for i in range(n - 1):\n        if arr[i] > 0 and arr[i + 1] > 0:\n            while arr[i + 1] > 0:\n                arr[i] -= 1\n                arr[i + 1] -= 2\n        ans += abs(arr[i])\n    ans += abs(arr[n - 1])\n    return ans\n\ndef main():\n    for _ in range(int(input())):\n        n = intin()\n        arr = list(mapin())\n        print(process(arr, n))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in reversed(range(1, n)):\n        if a[i] > 0:\n            moves = a[i] // 2\n            a[i] -= 2 * moves\n            a[i - 1] -= moves\n    for i in reversed(range(1, n)):\n        if a[i] > 0 and a[i - 1] > 0:\n            a[i] -= 2\n            a[i - 1] -= 1\n    print(sum((abs(x) for x in a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(abs(a[0]))\n        continue\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0:\n            a[i - 1] -= a[i] // 2\n            a[i] = a[i] % 2\n            if a[i] == 1 and a[i - 1] > 0 and (a[i - 1] % 2 == 1):\n                a[i] -= 2\n                a[i - 1] -= 1\n    if a[1] == 1 and a[0] > 0:\n        a[1] -= 2\n        a[0] -= 1\n    print(sum([abs(j) for j in a]))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n - 2, -1, -1):\n        if a[i + 1] > 1:\n            x = a[i + 1] // 2\n            a[i + 1] %= 2\n            a[i] -= x\n    for i in range(n - 2, -1, -1):\n        if a[i + 1] == 1 and a[i] > 0:\n            a[i] -= 1\n            a[i + 1] -= 2\n    s = 0\n    for i in a:\n        s += abs(i)\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0:\n            a[i - 1] -= a[i] // 2\n            a[i] = a[i] % 2\n            if a[i] == 1 and a[i - 1] > 0 and (a[i - 1] % 2 == 1 or i == 1):\n                a[i] -= 2\n                a[i - 1] -= 1\n    print(sum([abs(j) for j in a]))", "import math\n\ndef new_sum(lst):\n    Sum = 0\n    for num in lst:\n        if num < 0:\n            Sum += -num\n        else:\n            Sum += num\n    return Sum\n\ndef test():\n    N = int(input())\n    nums = list(map(int, input().split()))\n    last_sum = new_sum(nums)\n    for i in range(len(nums) - 1, 0, -1):\n        if nums[i] >= 2:\n            nums[i - 1] = nums[i - 1] - nums[i] // 2\n            nums[i] = nums[i] % 2\n    for i in range(len(nums) - 1, 0, -1):\n        if nums[i] >= 1 and nums[i - 1] >= 1:\n            nums[i - 1] = nums[i - 1] - 1\n            nums[i] = nums[i] - 2\n    print(new_sum(nums))\ntests = int(input())\nfor i in range(tests):\n    test()", "def codeforces(arr, n):\n    for i in range(n - 1, 0, -1):\n        if arr[i] >= 2 and arr[i - 1] >= 1:\n            x = min(arr[i] // 2, arr[i - 1])\n            arr[i - 1] -= x\n            arr[i] -= 2 * x\n    for i in range(n - 1, 0, -1):\n        if arr[i] >= 2:\n            x = arr[i] // 2\n            arr[i - 1] -= x\n            arr[i] = arr[i] % 2\n        if arr[i] == 1 and arr[i - 1] > 0:\n            arr[i] = -1\n            arr[i - 1] -= 1\n    ans = 0\n    for i in arr:\n        ans += abs(i)\n    return ans\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    print(codeforces(arr, n))", "def codeforces(arr, n):\n    for i in range(n - 1, 0, -1):\n        if arr[i] >= 2 and arr[i - 1] >= 1:\n            x = min(arr[i] // 2, arr[i - 1])\n            arr[i - 1] -= x\n            arr[i] -= 2 * x\n    for i in range(n - 1, 0, -1):\n        if arr[i] >= 2:\n            x = arr[i] // 2\n            arr[i - 1] -= x\n            arr[i] = arr[i] % 2\n        if arr[i] == 1 and arr[i - 1] > 0:\n            arr[i] = -1\n            arr[i - 1] -= 1\n    ans = 0\n    for i in arr:\n        ans += abs(i)\n    return ans\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    print(codeforces(arr, n))", "import math\nt = int(input())\nfor _ in range(t):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(N - 1, 0, -1):\n        second = arr[i]\n        if second >= 1:\n            if second >= 2:\n                mult = math.floor(second / 2)\n                arr[i] = second - 2 * mult\n                arr[i - 1] = arr[i - 1] - mult\n            if arr[i] == 1 and arr[i - 1] >= 1 and (arr[i - 1] % 2 == 1):\n                arr[i] = -1\n                arr[i - 1] -= 1\n            elif arr[i] == 1 and arr[i - 1] >= 1 and (i == 1):\n                arr[0] -= 1\n                arr[i] = -1\n    sum = 0\n    for i in range(N):\n        sum += abs(arr[i])\n    print(sum)", "iter = int(input())\nfor z in range(iter):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    ans = 0\n    for i in range(n - 1, 0, -1):\n        mult = 0\n        if a[i] > 0:\n            if a[i] & 1:\n                mult = a[i] // 2\n                a[i] = 1\n            else:\n                mult = a[i] // 2\n                a[i] = 0\n        a[i - 1] -= mult\n    for i in range(n - 1, 0, -1):\n        if a[i] == 1 and a[i - 1] > 0:\n            a[i - 1] -= 1\n    for i in range(n):\n        ans += abs(a[i])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if arr[i] <= 0:\n            continue\n        x = arr[i] // 2\n        arr[i - 1] -= x\n        arr[i] -= 2 * x\n    for i in range(n - 1):\n        if arr[i] > 0 and arr[i + 1] == 1:\n            arr[i] -= 1\n            arr[i + 1] -= 2\n    ans = 0\n    for e in arr:\n        ans += abs(e)\n    print(ans)", "t = int(input())\nfor e in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = len(l) - 2\n    while i >= 0:\n        if l[i + 1] >= 0:\n            q1 = int(l[i + 1] / 2)\n            q2 = l[i + 1] % 2\n            l[i] -= q1 * 1\n            l[i + 1] -= 2 * q1\n        i -= 1\n    s = 0\n    for i in range(n - 2, -1, -1):\n        if l[i + 1] == 1 and l[i] > 0:\n            l[i + 1] = -1\n            l[i] -= 1\n    for i in l:\n        s += abs(i)\n    print(s)", "for _ in range(int(input())):\n    array_len = int(input())\n    array = [int(num) for num in input().split()]\n    for i in range(array_len - 1, 0, -1):\n        if array[i] <= 0:\n            continue\n        if array[i] >= 2:\n            array[i - 1] -= array[i] // 2\n            array[i] %= 2\n        if array[i] == 1 and array[i - 1] >= 1 and (array[i - 1] % 2 != 0 or i - 1 == 0):\n            array[i] -= 2\n            array[i - 1] -= 1\n    print(sum([abs(num) for num in array]))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n - 1, 0, -1):\n        if arr[i] >= 2:\n            num = arr[i] // 2\n            arr[i] -= 2 * num\n            arr[i - 1] -= num\n    for i in range(n - 1, 0, -1):\n        if arr[i] == 1 and arr[i - 1] >= 1:\n            arr[i] -= 2\n            arr[i - 1] -= 1\n    ans = 0\n    for i in arr:\n        ans += abs(i)\n    print(ans)", "import sys, math, heapq, bisect\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 5)\nints = lambda : list(map(int, input().split()))\n\ndef gprint(t, ans=''):\n    print(f'Case #{t + 1}:', ans)\np = 10 ** 9 + 7\ninf = 10 ** 20 + 7\nfor t in range(int(input())):\n    n = int(input())\n    a = ints()\n    for i in range(n - 1, 0, -1):\n        if a[i] > 0:\n            x = a[i] // 2\n            a[i] = a[i] % 2\n            a[i - 1] -= x\n    for i in range(n - 1):\n        if a[i] > 0 and a[i + 1] > 0:\n            a[i] -= 1\n            a[i + 1] -= 2\n    ans = 0\n    for i in a:\n        ans += abs(i)\n    print(ans)"]