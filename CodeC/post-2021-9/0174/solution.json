["for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    lis.sort()\n    ans = 0\n    cou = 1\n    for i in range(1, n):\n        if lis[i] == lis[i - 1]:\n            cou += 1\n        else:\n            ans = ans + cou * (cou - 1) / 2\n            cou = 1\n    ans = ans + cou * (cou - 1) // 2\n    print(int(ans))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    y = list(set(l))\n    s = 0\n    if len(y) == n:\n        s = 0\n    else:\n        for i in range(len(y)):\n            x = l.count(y[i])\n            s = s + x * (x - 1) // 2\n    print(int(s))", "for _ in range(int(input())):\n    num = int(input())\n    AA = list(map(int, input().split()))\n    f = {}\n    for i in AA:\n        if i in f:\n            f[i] += 1\n        else:\n            f[i] = 1\n    ps = 0\n    for j in f.values():\n        ps += j * (j - 1) // 2\n    print(ps)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    freq = {}\n    for a in A:\n        if a in freq:\n            freq[a] += 1\n        else:\n            freq[a] = 1\n    pairs = 0\n    for n in freq.values():\n        pairs += n * (n - 1) // 2\n    print(pairs)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from collections import Counter\nimport math\nfor i in range(int(input())):\n    n = int(input())\n    r = 0\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    for i in c:\n        r = r + math.comb(c[i], 2)\n    print(r)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "def gcd(n1, n2):\n    n = min(n1, n2)\n    cd = 1\n    for i in range(2, n + 1):\n        if n1 % i == 0 and n2 % i == 0:\n            cd = i\n    return cd\n\ndef lcm(n1, n2):\n    return abs(n1 * n2) / gcd(n1, n2)\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    cc = 0\n    c = 0\n    num = 0\n    prev = 0\n    cur = 0\n    A.sort()\n    for i in range(1, len(A)):\n        prev = i - 1\n        cur = i\n        if A[cur] == A[prev]:\n            c += 1\n        else:\n            cc += (c + 1) * c // 2\n            c = 0\n    cc += (c + 1) * c // 2\n    c = 0\n    print(cc)", "import collections\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = dict(collections.Counter(l))\n    d = 0\n    for i in k:\n        if k[i] > 1:\n            n = k[i]\n            p = n * (n - 1) // 2\n            d = d + p\n    print(d)", "import collections\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = dict(collections.Counter(l))\n    d = 0\n    for i in k:\n        if k[i] > 1:\n            n = k[i]\n            p = n * (n - 1) // 2\n            d = d + p\n    print(d)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l_unique = list(set(l))\n    s = 0\n    if len(l_unique) == n:\n        s = 0\n    else:\n        for i in range(len(l_unique)):\n            x = l.count(l_unique[i])\n            s = s + x * (x - 1) // 2\n    print(int(s))", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    ans = 0\n    for i in d:\n        if d[i] == 1:\n            ans += 0\n        else:\n            ans += d[i] * (d[i] - 1) // 2\n    print(ans)", "import math\nfrom collections import Counter\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    p = 0\n    for j in c:\n        p += math.comb(c[j], 2)\n    print(p)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(c) for c in input().split()]\n\n    def fac(n):\n        if n == 0:\n            return 0\n        else:\n            ans = 0\n            for i in range(1, n):\n                ans = ans + i\n            return ans\n    b = {}\n    for j in range(n):\n        if a[j] not in b:\n            b.update({a[j]: 1})\n        else:\n            k = b[a[j]] + 1\n            b.update({a[j]: k})\n    l = 0\n    for k in b:\n        l = l + fac(b[k])\n    print(l)", "for _ in range(int(input())):\n    N = int(input())\n    A = [int(i) for i in input().split()]\n    countADict = {}\n    for num in A:\n        countADict[num] = countADict.get(num, 0) + 1\n    count = 0\n    for num in countADict:\n        if countADict[num] > 1:\n            count += int(countADict[num] * (countADict[num] - 1) / 2)\n    print(count)", "import math\nfor tc in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    kmap = {}\n    for ele in arr:\n        if ele not in kmap:\n            kmap[ele] = 1\n        else:\n            kmap[ele] += 1\n    count = 0\n    for key in kmap:\n        count += math.comb(kmap[key], 2)\n    print(count)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "x = int(input())\nrt = []\nfor nnm in range(0, x):\n    ptr = int(input())\n    op = str(input())\n    hv = op.split(' ')\n    gxz = []\n    for iiy in hv:\n        gxz.append(int(iiy))\n    rt.append(gxz)\nfor eex in rt:\n    pairs = 0\n    dfrt = {}\n    for mm in eex:\n        if mm not in dfrt.keys():\n            dfrt[mm] = 1\n        else:\n            fvxz = dfrt[mm]\n            pairs += fvxz\n            dfrt[mm] += 1\n    print(pairs)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "def solve(x):\n    s = 0\n    n = 1\n    for i in range(x):\n        s = s + n\n        n = n + 1\n    return s\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d:\n        if d[i] > 1:\n            s += solve(d[i] - 1)\n    print(int(s))", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from collections import Counter\nimport math\nfor _ in range(int(input())):\n    n = int(input())\n    a = Counter(map(int, input().split()))\n    count = 0\n    for value in a.values():\n        if value > 1:\n            count += math.comb(value, 2)\n    print(count)", "from collections import Counter\nimport math\nfor _ in range(int(input())):\n    n = int(input())\n    a = Counter(map(int, input().split()))\n    count = 0\n    for value in a.values():\n        if value > 1:\n            count += math.comb(value, 2)\n    print(count)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    res = 0\n    freq = {}\n    for x in lis:\n        if x in freq:\n            freq[x] += 1\n        else:\n            freq[x] = 1\n    for i in freq:\n        res += freq[i] * (freq[i] - 1) / 2\n    print(int(res))", "t = int(input())\nfor i in range(t):\n    input()\n    s = list(map(int, input().split()))\n    d = dict()\n    maxi = 0\n    for j in s:\n        if not j in d:\n            d[j] = 1\n        else:\n            d[j] += 1\n        maxi = i\n    res = 0\n    for k in d:\n        res += int((d[k] - 1) * d[k] / 2)\n    print(res)", "def count(n):\n    return n * (n - 1) // 2\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    ans = 0\n    for i in list(d.values()):\n        ans += count(i)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor k in range(int(input())):\n    NU_MB = int(input())\n    aarr = list(map(int, input().strip().split()))\n    cout = Counter(aarr)\n    answe = 0\n    for j in cout:\n        answe += comb(cout[j], 2)\n    print(answe)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "for _ in range(int(input())):\n    t52 = int(input())\n    d52 = {}\n    l52 = [int(i52) for i52 in input().split()]\n    for i52 in l52:\n        d52[i52] = 0\n    for i52 in l52:\n        d52[i52] += 1\n    sm = 0\n    for i52 in d52:\n        p52 = d52[i52]\n        p52 -= 1\n        p52 = (p52 + 1) * p52 // 2\n        sm += p52\n    print(sm)", "for _ in range(int(input())):\n    t52 = int(input())\n    d52 = {}\n    l52 = [int(i52) for i52 in input().split()]\n    for i52 in l52:\n        d52[i52] = 0\n    for i52 in l52:\n        d52[i52] += 1\n    sm = 0\n    for i52 in d52:\n        p52 = d52[i52]\n        p52 -= 1\n        p52 = (p52 + 1) * p52 // 2\n        sm += p52\n    print(sm)", "import collections\nfrom collections import Counter\nfor i in range(int(input())):\n    count = 0\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dic = dict(Counter(arr))\n    for k in dic.keys():\n        if dic[k] != 1:\n            val = dic[k]\n            ad = val * (val + 1) // 2 - val\n            count += ad\n    print(count)", "import collections\nfrom collections import Counter\nfor i in range(int(input())):\n    count = 0\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dic = dict(Counter(arr))\n    for k in dic.keys():\n        if dic[k] != 1:\n            val = dic[k]\n            ad = val * (val + 1) // 2 - val\n            count += ad\n    print(count)", "import collections as coll\nfrom collections import Counter\nfor i in range(int(input())):\n    count = 0\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dic = dict(Counter(arr))\n    for k in dic.keys():\n        if dic[k] != 1:\n            val = dic[k]\n            ad = val * (val + 1) // 2 - val\n            count += ad\n    print(count)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    x = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    count = 0\n    for i in c:\n        count += comb(c[i], 2)\n    print(count)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    d = Counter(l)\n    res = 0\n    for i in d:\n        res += comb(d[i], 2)\n    return res\nfor _ in range(IN()):\n    print(f())", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    su = 0\n    c = Counter(l)\n    for i in c:\n        su += comb(c[i], 2)\n    print(su)", "import math\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    count = 0\n    curr = 0\n    for i in range(1, n):\n        if arr[i] == arr[i - 1]:\n            curr += 1\n        else:\n            count += curr * (curr + 1) // 2\n            curr = 0\n    print(count + curr * (curr + 1) // 2)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    res = 0\n    for i in c:\n        res += comb(c[i], 2)\n    print(res)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    res = 0\n    for i in c:\n        res += comb(c[i], 2)\n    print(res)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    res = 0\n    for i in c:\n        res += comb(c[i], 2)\n    print(res)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from math import comb\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    dic = {}\n    ans = 0\n    for i in A:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    for i in dic:\n        ans += comb(dic[i], 2)\n    print(ans)", "from math import comb\nfor _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    count = 0\n    for i in d.keys():\n        if d[i] > 1:\n            count += comb(d[i], 2)\n    print(count)", "from collections import Counter\nt = int(input())\nfor ni in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    C = Counter(l)\n    count = 0\n    for i in C:\n        count = count + C[i] * (C[i] - 1) / 2\n    print(int(count))", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from collections import Counter\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    s = list(map(int, input('').split()))\n    s = Counter(s)\n    s = s.values()\n    pairs = 0\n    for val in s:\n        if val > 1:\n            pairs = pairs + val * (val - 1) / 2\n    print(int(pairs))", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    (ans1, ans2) = (0, 0)\n    L = list(map(int, input().split()))\n    L.sort()\n    for i in range(1, N):\n        if L[i] == L[i - 1]:\n            ans1 += 1\n        else:\n            if ans1 == 1:\n                ans2 += 1\n            elif ans1 > 1:\n                ans2 = ans2 + ans1 + ans1 * (ans1 - 1) // 2\n            ans1 = 0\n    if ans1 == 0:\n        print(ans2)\n    elif ans1 == 1:\n        print(ans2 + 1)\n    else:\n        print(ans2 + ans1 + ans1 * (ans1 - 1) // 2)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    (ans1, ans2) = (0, 0)\n    L = list(map(int, input().split()))\n    L.sort()\n    for i in range(1, N):\n        if L[i] == L[i - 1]:\n            ans1 += 1\n        else:\n            if ans1 == 1:\n                ans2 += 1\n            elif ans1 > 1:\n                ans2 = ans2 + ans1 + ans1 * (ans1 - 1) // 2\n            ans1 = 0\n    if ans1 == 0:\n        print(ans2)\n    elif ans1 == 1:\n        print(ans2 + 1)\n    else:\n        print(ans2 + ans1 + ans1 * (ans1 - 1) // 2)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "def pairs(leng, list1):\n    count = 0\n    dict1 = {}\n    for i in list1:\n        if i in dict1:\n            dict1[i] += 1\n        else:\n            dict1[i] = 1\n    for j in dict1:\n        if dict1[j] > 1:\n            x = dict1[j] - 1\n            while x != 0:\n                count += x\n                x -= 1\n    return count\nn = int(input())\nfor i in range(n):\n    leng = int(input())\n    list1 = [int(a) for a in input().split()]\n    print(pairs(leng, list1))", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "from collections import Counter as c\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = c(arr).values()\n    ans = 0\n    for j in count:\n        ans += j * (j - 1) // 2\n    print(ans)", "from collections import Counter as c\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = c(arr).values()\n    ans = 0\n    for j in count:\n        ans += j * (j - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    import math\n    a = list(map(int, input().split()))\n    from collections import Counter\n    c = Counter(a)\n    s = 0\n    for i in c:\n        s += math.comb(c[i], 2)\n    print(s)", "from collections import Counter as c\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = c(arr).values()\n    ans = 0\n    for j in count:\n        ans += j * (j - 1) // 2\n    print(ans)", "from collections import Counter as c\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = c(arr).values()\n    ans = 0\n    for j in count:\n        ans += j * (j - 1) // 2\n    print(ans)", "from collections import Counter\nfor i in range(int(input())):\n    l = int(input())\n    s = list(map(int, input().split()))\n    s = Counter(s)\n    s = s.values()\n    res = 0\n    for val in s:\n        if val > 1:\n            res += val * (val - 1) // 2\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    dic = {}\n    a = list(map(int, input().split()))\n    for v in a:\n        if v in dic:\n            dic[v] += 1\n        else:\n            dic[v] = 1\n    good = 0\n    for key in dic:\n        if dic[key] > 1:\n            good += dic[key] * (dic[key] - 1) // 2\n    print(good)", "p = int(input())\nfor m in range(0, p):\n    k = int(input())\n    n = list(map(int, input().split()[:k]))\n    freq = {}\n    for i in n:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    pairsum = 0\n    for i in freq:\n        pairsum += freq[i] * (freq[i] - 1) // 2\n    print(pairsum)", "p = int(input())\nfor m in range(0, p):\n    k = int(input())\n    n = list(map(int, input().split()[:k]))\n    freq = {}\n    for i in n:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    pairsum = 0\n    for i in freq:\n        pairsum += freq[i] * (freq[i] - 1) // 2\n    print(pairsum)", "p = int(input())\nfor m in range(0, p):\n    k = int(input())\n    n = list(map(int, input().split()[:k]))\n    freq = {}\n    for i in n:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    pair_sum = 0\n    for i in freq:\n        pair_sum += freq[i] * (freq[i] - 1) // 2\n    print(pair_sum)", "for x in range(int(input())):\n    n = int(input())\n    a = [int(d) for d in input().split()]\n    dictt = {}\n    for char in a:\n        if char not in dictt:\n            dictt[char] = 1\n        else:\n            dictt[char] += 1\n    final = 0\n    for key in dictt:\n        if dictt[key] >= 2:\n            d = dictt[key]\n            final += d * (d - 1) // 2\n    print(final)", "p = int(input())\nfor m in range(0, p):\n    k = int(input())\n    n = list(map(int, input().split()[:k]))\n    freq = {}\n    for i in n:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    pair_sum = 0\n    for i in freq:\n        pair_sum += freq[i] * (freq[i] - 1) // 2\n    print(pair_sum)", "p = int(input())\nfor m in range(0, p):\n    k = int(input())\n    n = list(map(int, input().split()[:k]))\n    freq = {}\n    for i in n:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    pair_sum = 0\n    for i in freq:\n        pair_sum += freq[i] * (freq[i] - 1) // 2\n    print(pair_sum)", "p = int(input())\nfor m in range(0, p):\n    k = int(input())\n    n = list(map(int, input().split()[:k]))\n    freq = {}\n    for i in n:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    pair_sum = 0\n    for i in freq:\n        pair_sum += freq[i] * (freq[i] - 1) // 2\n    print(pair_sum)", "import math\nfor i in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    dic = {}\n    for x in range(N):\n        if A[x] not in dic:\n            dic[A[x]] = 1\n        else:\n            dic[A[x]] += 1\n    keys = list(dic.keys())\n    freq = 0\n    for z in keys:\n        freq += math.comb(dic[z], 2)\n    print(freq)", "from math import comb\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    for num in c:\n        ans += comb(c[num], 2)\n    print(ans)", "import pandas as pd\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    count = pd.Series(arr).value_counts()\n    for j in count:\n        ans = ans + j * (j - 1) // 2\n    print(ans)", "from collections import Counter as c\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = c(arr).values()\n    ans = 0\n    for j in count:\n        ans += j * (j - 1) // 2\n    print(ans)", "from collections import Counter as c\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = c(arr).values()\n    ans = 0\n    for j in count:\n        ans += j * (j - 1) // 2\n    print(ans)", "from collections import Counter as c\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = c(arr).values()\n    ans = 0\n    for j in count:\n        ans += j * (j - 1) // 2\n    print(ans)", "from collections import Counter as c\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = c(arr).values()\n    ans = 0\n    for j in count:\n        ans += j * (j - 1) // 2\n    print(ans)", "from collections import Counter as c\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = c(arr).values()\n    ans = 0\n    for j in count:\n        ans += j * (j - 1) // 2\n    print(ans)", "from collections import Counter as c\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = c(arr).values()\n    ans = 0\n    for j in count:\n        ans += j * (j - 1) // 2\n    print(ans)", "from collections import Counter as c\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = c(arr).values()\n    ans = 0\n    for j in count:\n        ans += j * (j - 1) // 2\n    print(ans)", "from collections import Counter as p\nfor i in range(int(input())):\n    s = int(input())\n    a = list(map(int, input().split()))\n    b = 0\n    c = p(a).values()\n    for i in c:\n        b += i * (i - 1) // 2\n    print(b)", "from collections import Counter as p\nfor _ in range(int(input())):\n    s = int(input())\n    a = list(map(int, input().split()))\n    b = 0\n    c = p(a).values()\n    for i in c:\n        b += i * (i - 1) // 2\n    print(b)"]