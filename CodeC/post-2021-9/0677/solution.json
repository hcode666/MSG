["from sys import stdin, stdout\nread = stdin.readline\nt = int(read())\nfor testcase in range(t):\n    (n, m) = map(int, read().split())\n    scorearr = [list(map(int, read().split())) for i in range(n)]\n    sumarr = [sum(i) for i in scorearr]\n    cm = 0\n    for i in range(m):\n        cur = 0\n        for j in range(n):\n            temp = sumarr[j] - m * scorearr[j][i]\n            if temp > 0:\n                cur += temp\n        if cur > cm:\n            cm = cur\n    for i in range(m):\n        cur = 0\n        for j in range(n):\n            temp = m * scorearr[j][i] - sumarr[j]\n            if temp > 0:\n                cur += temp\n        if cur > cm:\n            cm = cur\n    print(cm)", "from sys import stdin, stdout\nread = stdin.readline\nt = int(read())\nfor testcase in range(t):\n    (n, m) = map(int, read().split())\n    scorearr = [list(map(int, read().split())) for i in range(n)]\n    sumarr = [sum(i) for i in scorearr]\n    cm = 0\n    for i in range(m):\n        cur = 0\n        for j in range(n):\n            temp = sumarr[j] - m * scorearr[j][i]\n            if temp > 0:\n                cur += temp\n        if cur > cm:\n            cm = cur\n    for i in range(m):\n        cur = 0\n        for j in range(n):\n            temp = m * scorearr[j][i] - sumarr[j]\n            if temp > 0:\n                cur += temp\n        if cur > cm:\n            cm = cur\n    print(cm)", "from sys import stdin, stdout\nread = stdin.readline\nt = int(read())\nfor testcase in range(t):\n    (n, m) = map(int, read().split())\n    scorearr = [list(map(int, read().split())) for i in range(n)]\n    sumarr = [sum(i) for i in scorearr]\n    cm = 0\n    for i in range(m):\n        cur = 0\n        for j in range(n):\n            temp = sumarr[j] - m * scorearr[j][i]\n            if temp > 0:\n                cur += temp\n        if cur > cm:\n            cm = cur\n    for i in range(m):\n        cur = 0\n        for j in range(n):\n            temp = m * scorearr[j][i] - sumarr[j]\n            if temp > 0:\n                cur += temp\n        if cur > cm:\n            cm = cur\n    print(cm)", "def DIFF_solu():\n    max_ans = 0\n    (n, m) = map(int, input().split())\n    sum_i = []\n    A = []\n    for i in range(n):\n        A.append(list(map(int, input().split())))\n        sum_i.append(sum(A[-1]))\n    for j in range(m):\n        max_diff_1 = 0\n        max_diff_2 = 0\n        for i in range(n):\n            diff = sum_i[i] - A[i][j] - A[i][j] * (m - 1)\n            max_diff_1 += max(0, diff)\n            max_diff_2 += max(0, -diff)\n        max_ans = max(max_ans, max_diff_1, max_diff_2)\n    return max_ans\nt = int(input())\nfor _ in range(t):\n    print(DIFF_solu())", "def DIFF_solu():\n    max_ans = 0\n    (n, m) = map(int, input().split())\n    sum_i = []\n    A = []\n    for i in range(n):\n        A.append(list(map(int, input().split())))\n        sum_i.append(sum(A[-1]))\n    for j in range(m):\n        max_diff_1 = 0\n        max_diff_2 = 0\n        for i in range(n):\n            diff = sum_i[i] - A[i][j] - A[i][j] * (m - 1)\n            max_diff_1 += max(0, diff)\n            max_diff_2 += max(0, -diff)\n        max_ans = max(max_ans, max_diff_1, max_diff_2)\n    return max_ans\nt = int(input())\nfor _ in range(t):\n    print(DIFF_solu())", "def DIFF_solu():\n    max_ans = 0\n    (n, m) = map(int, input().split())\n    sum_i = []\n    A = []\n    for i in range(n):\n        A.append(list(map(int, input().split())))\n        sum_i.append(sum(A[-1]))\n    for i in range(m):\n        max_diff_1 = 0\n        max_diff_2 = 0\n        for j in range(n):\n            diff = sum_i[j] - A[j][i] - A[j][i] * (m - 1)\n            max_diff_1 += max(0, diff)\n            max_diff_2 += max(0, -diff)\n        max_ans = max(max_ans, max_diff_1, max_diff_2)\n    return max_ans\nt = int(input())\nfor _ in range(t):\n    print(DIFF_solu())"]