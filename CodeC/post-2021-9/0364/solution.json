["for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = map(int, input().split())\n    a -= 1\n    b -= 1\n    (c, d) = map(int, input().split())\n    c -= 1\n    d -= 1\n    mat = [[4] * m for i in range(n)]\n    mat[a][b] = 1\n    mat[c][d] = 2\n    for i in range(n):\n        for j in range(m):\n            if i == a and j == b or (i == c and j == d):\n                continue\n            elif (i + j) % 2 == (a + b) % 2:\n                mat[i][j] = 1\n            elif (i + j) % 2 == (c + d) % 2:\n                mat[i][j] = 2\n    for i in mat:\n        print(*i)", "import collections\nfrom math import ceil, gcd, sqrt, log\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    (n, m) = map(int, input().split())\n    (x1, y1) = map(int, input().split())\n    (x2, y2) = map(int, input().split())\n    mat = [[0] * m for i in range(n)]\n    if (x1 + y1) % 2 == (x2 + y2) % 2:\n        if (x1 + y1) % 2 == 0:\n            start = 1\n            other = 4\n        else:\n            start = 4\n            other = 1\n        for i in range(n):\n            for j in range(m):\n                if i + 1 == x2 and j + 1 == y2:\n                    mat[i][j] = 2\n                elif (i + j) % 2 == 0:\n                    mat[i][j] = start\n                else:\n                    mat[i][j] = other\n    else:\n        if (x1 + y1) % 2 == 0:\n            start = 1\n            other = 2\n        else:\n            start = 2\n            other = 1\n        for i in range(n):\n            for j in range(m):\n                if (i + j + 2) % 2 == 0:\n                    mat[i][j] = start\n                else:\n                    mat[i][j] = other\n    for i in mat:\n        print(*i)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "import collections\nfrom math import ceil, gcd, sqrt, log\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    (n, m) = map(int, input().split())\n    (x1, y1) = map(int, input().split())\n    (x2, y2) = map(int, input().split())\n    mat = [[0] * m for i in range(n)]\n    if (x1 + y1) % 2 == (x2 + y2) % 2:\n        if (x1 + y1) % 2 == 0:\n            start = 1\n            other = 4\n        else:\n            start = 4\n            other = 1\n        for i in range(n):\n            for j in range(m):\n                if i + 1 == x2 and j + 1 == y2:\n                    mat[i][j] = 2\n                elif (i + j + 2) % 2 == 0:\n                    mat[i][j] = start\n                else:\n                    mat[i][j] = other\n    else:\n        if (x1 + y1) % 2 == 0:\n            start = 1\n            other = 2\n        else:\n            start = 2\n            other = 1\n        for i in range(n):\n            for j in range(m):\n                if (i + j + 2) % 2 == 0:\n                    mat[i][j] = start\n                else:\n                    mat[i][j] = other\n    for i in mat:\n        print(*i)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "import math\nimport os\nimport random\nimport re\nimport sys\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    (x1, y1) = map(int, input().split())\n    (x2, y2) = map(int, input().split())\n    A = (x1 + y1) % 2\n    B = (x2 + y2) % 2\n    if A == B:\n        for j in range(N):\n            for k in range(M):\n                if j == x1 - 1 and k == y1 - 1:\n                    print(1, end=' ')\n                elif j == x2 - 1 and k == y2 - 1:\n                    print(2, end=' ')\n                elif (j + k) % 2 == A:\n                    print(1, end=' ')\n                else:\n                    print(4, end=' ')\n            print()\n    else:\n        for j in range(N):\n            for k in range(M):\n                if (j + k) % 2 == A:\n                    print(1, end=' ')\n                else:\n                    print(2, end=' ')\n            print()", "def parity(x, y):\n    if (x + y) % 2 == 0:\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x1, y1) = map(int, input().split())\n    (x2, y2) = map(int, input().split())\n    if parity(x1, y1) == parity(x2, y2):\n        for i in range(1, n + 1):\n            for j in range(1, m + 1):\n                if parity(i, j) == parity(x1, y1):\n                    if i == x2 and j == y2:\n                        print(2, end=' ')\n                    else:\n                        print(1, end=' ')\n                else:\n                    print(4, end=' ')\n            print()\n    else:\n        for i in range(1, n + 1):\n            for j in range(1, m + 1):\n                if parity(i, j) == parity(x1, y1):\n                    print(1, end=' ')\n                else:\n                    print(2, end=' ')\n            print()", "tc = int(input())\nfor i in range(tc):\n    (n, m) = list(map(int, input().split()))\n    (x1, y1) = list(map(int, input().split()))\n    (x2, y2) = list(map(int, input().split()))\n    if (abs(x1 - x2) + abs(y1 - y2)) % 2 == 0:\n        color2 = 4\n    else:\n        color2 = 2\n    if (x1 + y1) % 2 == 0:\n        color1 = 1\n    else:\n        color1 = color2\n        color2 = 1\n    for j in range(n):\n        for k in range(m):\n            sepat = ' '\n            if k == m - 1:\n                sepat = '\\n'\n            if j + 1 == x2 and k + 1 == y2:\n                print(2, end=sepat)\n            elif (j + k) % 2 == 0:\n                print(color1, end=sepat)\n            else:\n                print(color2, end=sepat)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x1, y1) = map(int, input().split())\n    (x2, y2) = map(int, input().split())\n    inc = 0 if (x1 + y1) % 2 == 0 else 1\n    if (x1 + y1) % 2 != (x2 + y2) % 2:\n        for i in range(inc, n + inc):\n            if i % 2 == 0:\n                print('1 2 ' * (m // 2), '1' * (m % 2), sep='')\n            else:\n                print('2 1 ' * (m // 2), '2' * (m % 2), sep='')\n    else:\n        l = []\n        for i in range(inc, n + inc):\n            if i % 2 == 0:\n                l.append([1, 2] * (m // 2) + [1] * (m % 2))\n            else:\n                l.append([2, 1] * (m // 2) + [2] * (m % 2))\n        l[x2 - 1][y2 - 1] = 2\n        if x2 != n:\n            l[x2][y2 - 1] = 4\n        if x2 != 1:\n            l[x2 - 2][y2 - 1] = 4\n        if y2 != 1:\n            l[x2 - 1][y2 - 2] = 4\n        if y2 != m:\n            l[x2 - 1][y2] = 4\n        for i in l:\n            print(*i)", "T = int(input())\nwhile T:\n    T -= 1\n    (N, M) = map(int, input().split())\n    (x1, y1) = map(int, input().split())\n    (x2, y2) = map(int, input().split())\n    (x1, y1) = (x1 - 1, y1 - 1)\n    (x2, y2) = (x2 - 1, y2 - 1)\n    if x1 + y1 & 1 != x2 + y2 & 1:\n        for i in range(N):\n            for j in range(M):\n                if i + j & 1 == x1 + y1 & 1:\n                    print(1, end=' ')\n                else:\n                    print(2, end=' ')\n            print()\n    else:\n        matrix = [[0] * M for _ in range(N)]\n        for i in range(N):\n            for j in range(M):\n                if i + j & 1 == x1 + y1 & 1:\n                    matrix[i][j] = 1\n                else:\n                    matrix[i][j] = 2\n        matrix[x1][y1] = 1\n        matrix[x2][y2] = 2\n        if x2 > 0:\n            matrix[x2 - 1][y2] = 4\n        if x2 < N - 1:\n            matrix[x2 + 1][y2] = 4\n        if y2 > 0:\n            matrix[x2][y2 - 1] = 4\n        if y2 < M - 1:\n            matrix[x2][y2 + 1] = 4\n        for i in range(N):\n            for j in range(M):\n                print(matrix[i][j], end=' ')\n            print()", "from collections import deque\na = int(input())\nfor i in range(a):\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    z = list(map(int, input().split()))\n    matrix = []\n    for i in range(x[0]):\n        matrix.append([])\n        for j in range(x[1]):\n            matrix[i].append(-1)\n    matrix[y[0] - 1][y[1] - 1] = 1\n    matrix[z[0] - 1][z[1] - 1] = 2\n    adj = [[1, 0], [-1, 0], [0, -1], [0, 1]]\n    queue = deque([])\n    queue.append([y[0] - 1, y[1] - 1])\n    while len(queue) != 0:\n        curr = queue.popleft()\n        for neigh in adj:\n            dx = curr[0] + neigh[0]\n            dy = curr[1] + neigh[1]\n            if dx >= 0 and dx < x[0] and (dy >= 0) and (dy < x[1]):\n                if matrix[dx][dy] == -1:\n                    queue.append([dx, dy])\n                    if matrix[curr[0]][curr[1]] == 1:\n                        matrix[dx][dy] = 2\n                    else:\n                        matrix[dx][dy] = 1\n    curr = [z[0] - 1, z[1] - 1]\n    for neigh in adj:\n        dx = curr[0] + neigh[0]\n        dy = curr[1] + neigh[1]\n        if dx >= 0 and dx < x[0] and (dy >= 0) and (dy < x[1]):\n            if matrix[dx][dy] == 2:\n                matrix[dx][dy] = 4\n    for rows in matrix:\n        print(*rows)", "from numpy import *\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    (x1, y1) = map(int, input().split())\n    (x2, y2) = map(int, input().split())\n    l = ones((x, y), dtype=int)\n    m = x2 - x1 + (y2 - y1)\n    n = x1 + y1\n    if m % 2 == 0:\n        if n % 2 == 0:\n            for i in range(x):\n                for j in range(y):\n                    if (i + j) % 2 != 0:\n                        l[i][j] = 4\n        else:\n            for i in range(x):\n                for j in range(y):\n                    if (i + j) % 2 == 0:\n                        l[i][j] = 4\n    elif n % 2 == 0:\n        for i in range(x):\n            for j in range(y):\n                if (i + j) % 2 != 0:\n                    l[i][j] = 2\n    else:\n        for i in range(x):\n            for j in range(y):\n                if (i + j) % 2 == 0:\n                    l[i][j] = 2\n    l[x2 - 1][y2 - 1] = 2\n    for i in l:\n        for j in i:\n            print(j, end=' ')\n        print('')", "def solve():\n    (n, m) = map(int, input().split())\n    (x1, y1) = map(int, input().split())\n    (x2, y2) = map(int, input().split())\n    x1 -= 1\n    x2 -= 1\n    y1 -= 1\n    y2 -= 1\n    if (x1 + y1) % 2 != (x2 + y2) % 2:\n        for i in range(n):\n            for j in range(m):\n                temp = (i + j) % 2\n                if temp == (x1 + y1) % 2:\n                    print(1, end=' ')\n                else:\n                    print(2, end=' ')\n            print()\n        return\n    res = [[0] * m for i in range(n)]\n    for i in range(n):\n        for j in range(m):\n            temp = (i + j) % 2\n            if temp == (x1 + y1) % 2:\n                res[i][j] = 1\n            else:\n                res[i][j] = 2\n    res[x1][y1] = 1\n    res[x2][y2] = 2\n    if x2 > 0:\n        res[x2 - 1][y2] = 4\n    if x2 < n - 1:\n        res[x2 + 1][y2] = 4\n    if y2 > 0:\n        res[x2][y2 - 1] = 4\n    if y2 < m - 1:\n        res[x2][y2 + 1] = 4\n    for i in range(n):\n        print(*res[i])\nt = int(input())\nfor _ in range(t):\n    solve()"]