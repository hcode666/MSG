["import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    print(math.ceil(math.log(max(Counter(a).values()), 2)))", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    print(math.ceil(math.log(max(Counter(a).values()), 2)))", "import math\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    x = max(d.values())\n    print(math.ceil(math.log(x, 2)))", "from statistics import mode\nimport math\nt = int(input())\nwhile t != 0:\n    t = t - 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = mode(l)\n    a = l.count(m) - 1\n    if a == 0:\n        print(0)\n    else:\n        print(len(bin(a)) - 2)", "from collections import Counter\nimport math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ac = Counter(a)\n    al = list(ac.values())\n    print(math.ceil(math.log2(max(al))))", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    dic = {}\n    for i in A:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    mx = max(dic.values())\n    count = 0\n    while 2 ** count < mx:\n        count += 1\n    print(count)", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        l = [int(x) for x in input().split()]\n        d = {}\n        for i in l:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n        l = []\n        m = 0\n        for (i, j) in d.items():\n            if j > m:\n                m = j\n        c = 0\n        while m > 1:\n            if m % 2 == 0:\n                m = m // 2\n            else:\n                m = (m + 1) // 2\n            c += 1\n        print(c)\nmain()", "import math\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    x = max(d.values())\n    print(math.ceil(math.log(x, 2)))", "import math\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    x = max(d.values())\n    print(math.ceil(math.log(x, 2)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    c = max(d.values())\n    k = 0\n    while 2 ** k < c:\n        k += 1\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for x in a:\n        if x not in d:\n            d[x] = 0\n        d[x] += 1\n    m = max(d.values())\n    k = 0\n    while 2 ** k < m:\n        k += 1\n    print(k)", "import statistics\nt = int(input())\nfor i in range(t):\n    input_size = int(input())\n    x = list(map(int, input().split()))\n    ans = 0\n    v = statistics.mode(x)\n    count = x.count(v)\n    while count > 1:\n        if count % 2 == 1:\n            count = (count + 1) / 2\n        else:\n            count = count / 2\n        ans = ans + 1\n    print(ans)", "from collections import Counter\nimport math\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    C = Counter(L)\n    M = max(C.values())\n    count = 0\n    while M > 1:\n        M = math.ceil(M / 2)\n        count = count + 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = {}\n    for i in a:\n        if i not in f:\n            f[i] = 1\n        else:\n            f[i] += 1\n    m = 0\n    for i in f:\n        if f[i] > m:\n            m = f[i]\n    count = 0\n    while m > 1:\n        if m % 2:\n            m = (m + 1) // 2\n        else:\n            m = m // 2\n        count += 1\n    print(count)", "t = int(input())\nwhile t:\n    a = int(input())\n    d = {}\n    l = list(map(int, input().split()))\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    count = 0\n    x = max(list(d.values()))\n    while x > 1:\n        if x % 2 == 0:\n            x = x // 2\n        else:\n            x = (x + 1) // 2\n        count += 1\n    print(count)\n    t -= 1", "import math\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    l = map(int, input().split())\n    dictS = dict()\n    maxNum = 0\n    maxV = 1\n    for el in l:\n        if not el in dictS:\n            dictS[el] = 1\n        else:\n            dictS[el] += 1\n            if dictS[el] > maxV:\n                maxNum = el\n                maxV = dictS[el]\n    print(math.ceil(math.log2(maxV)))", "t = int(input())\nimport math\nfor _ in range(t):\n    n = int(input())\n    arr = list(input().split())\n    check = {}\n    for x in arr:\n        if x in check:\n            check[x] += 1\n        else:\n            check[x] = 1\n    ans = max(check.values())\n    print(math.ceil(math.log2(ans)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = 0\n    count = 0\n    list2 = []\n    list1 = list(map(int, input().split()))\n    dict1 = {}\n    for i in list1:\n        if i not in dict1:\n            dict1[i] = 1\n        else:\n            dict1[i] = dict1[i] + 1\n    for i in dict1.values():\n        list2.append(i)\n    x = max(list2)\n    while x > 1:\n        if x % 2 == 0:\n            x = x // 2\n        else:\n            x = (x + 1) // 2\n        count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = 0\n    count = 0\n    list2 = []\n    list1 = list(map(int, input().split()))\n    dict1 = {}\n    for i in list1:\n        if i not in dict1:\n            dict1[i] = 1\n        else:\n            dict1[i] = dict1[i] + 1\n    for i in dict1.values():\n        list2.append(i)\n    x = max(list2)\n    while x > 1:\n        if x % 2 == 0:\n            x = x // 2\n        else:\n            x = (x + 1) // 2\n        count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = 0\n    count = 0\n    list2 = []\n    list1 = list(map(int, input().split()))\n    dict1 = {}\n    for i in list1:\n        if i not in dict1:\n            dict1[i] = 1\n        else:\n            dict1[i] = dict1[i] + 1\n    for i in dict1.values():\n        list2.append(i)\n    x = max(list2)\n    while x > 1:\n        if x % 2 == 0:\n            x = x // 2\n        else:\n            x = (x + 1) // 2\n        count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    d = {}\n    for j in l1:\n        if j not in d:\n            d[j] = 1\n        else:\n            d[j] += 1\n    n = max(list(d.values()))\n    ans = 0\n    while n > 1:\n        ans += 1\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n = (n + 1) // 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    d = {}\n    for j in l1:\n        if j not in d:\n            d[j] = 1\n        else:\n            d[j] += 1\n    n = max(list(d.values()))\n    ans = 0\n    while n > 1:\n        ans += 1\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n = (n + 1) // 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    d = {}\n    for j in l1:\n        if j not in d:\n            d[j] = 1\n        else:\n            d[j] += 1\n    n = max(list(d.values()))\n    ans = 0\n    while n > 1:\n        ans += 1\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n = (n + 1) // 2\n    print(ans)", "import math\nt = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = input().split()\n    for i in range(n):\n        a[i] = int(a[i])\n    a.sort()\n    max = 0\n    count = 1\n    for i in range(1, n):\n        if a[i - 1] == a[i]:\n            count = count + 1\n        else:\n            if max <= count:\n                max = count\n            count = 1\n    if max <= count:\n        max = count\n    print(math.ceil(math.log2(max)))", "from collections import Counter\nimport math as m\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = max(Counter(l).values()) - 1\n    if x == 0:\n        print(0)\n    else:\n        print(int(m.ceil(m.log(max(Counter(l).values()), 2))))", "from collections import Counter\nimport math as m\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = max(Counter(l).values()) - 1\n    if x == 0:\n        print(0)\n    else:\n        print(int(m.ceil(m.log(max(Counter(l).values()), 2))))", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    d = {}\n    unique = 1\n    largest = 0\n    for i in l:\n        d[i] = d.get(i, 0) + 1\n        if unique == 1 and d[i] > 1:\n            unique = 0\n        if d[i] > largest:\n            largest = d[i]\n    if unique == 1:\n        print('0')\n    else:\n        print(int(math.ceil(math.log(largest, 2))))", "from math import ceil, log2\nfrom statistics import mode\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = mode(arr)\n    print(ceil(log2(arr.count(c))))", "import collections\nimport math\nimport numpy as np\n\ndef count(array):\n    counter = collections.Counter(array)\n    max_n = max(list(counter.values()))\n    return math.ceil(np.log2(max_n))\nn = int(input())\nfor a in range(0, n):\n    length = int(input())\n    array = list(map(int, input().split()))\n    print(count(array))", "def abc(n):\n    if n == 1:\n        return 0\n    elif n & 1:\n        cnt = 1 + abc(n // 2 + 1)\n    else:\n        cnt = 1 + abc(n // 2)\n    return cnt\nfor i in range(int(input())):\n    (max_count_z, n_z) = (0, int(input()))\n    arr_z = [int(ele_z) for ele_z in input().split()]\n    dict1_z_z = {}\n    for ele in arr_z:\n        if dict1_z_z.get(ele) is None:\n            dict1_z_z[ele] = 0\n        dict1_z_z[ele] += 1\n        max_count_z = max(max_count_z, dict1_z_z[ele])\n    print(abc(max_count_z))", "import math\n\ndef subseq(arr):\n    comp = dict()\n    for val in arr:\n        if val not in comp:\n            comp[val] = 1\n        else:\n            comp[val] += 1\n    max_cnt = max(comp.values())\n    if max_cnt == 1:\n        return 0\n    return math.ceil(math.log2(max_cnt))\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(subseq(arr))", "import math\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    d = defaultdict(lambda : 0)\n    n = int(input())\n    a = list(map(int, input().split()))\n    ue = []\n    for ele in a:\n        if d[ele] == 0:\n            ue.append(ele)\n        d[ele] += 1\n    m = 0\n    for uele in ue:\n        m = max(m, d[uele])\n    ans = 0\n    while m > 1:\n        ans += 1\n        if m % 2 == 0:\n            m = m // 2\n        else:\n            m = (m + 1) // 2\n    print(ans)", "import sys\nimport math\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef fast_out(n):\n    sys.stdout.write(str(n) + '\\n')\nT = int(input())\nfor n1 in range(T):\n    n = int(input())\n    A = list(get_ints())\n    d = dict()\n    for i in A:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    c = max(d.values())\n    if c == 1:\n        print(0)\n    else:\n        print(math.ceil(math.log(c, 2)))", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = Counter(a)\n    c = max(b.values())\n    if c != 1:\n        print(math.ceil(math.log(c, 2)))\n    else:\n        print(0)", "import numpy as np\nimport math\ny = int(input())\nfor z in range(y):\n    noOfElements = int(input())\n    temp = [int(x) for x in input().split()]\n    (uniqueArr, count) = np.unique(temp, return_counts=True)\n    if max(count) - 1 == 0:\n        print('0')\n    else:\n        print(int(math.log(max(count) - 1) / math.log(2)) + 1)", "import numpy as np\nimport math\ny = int(input())\nfor z in range(y):\n    noOfElements = int(input())\n    temp = [int(x) for x in input().split()]\n    (uniqueArr, count) = np.unique(temp, return_counts=True)\n    if max(count) - 1 == 0:\n        print('0')\n    else:\n        print(int(math.log(max(count) - 1) / math.log(2)) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dict = {}\n    m = 0\n    for i in a:\n        dict[i] = dict.get(i, 0) + 1\n    for key in dict:\n        if dict[key] > 1:\n            a = len(bin(dict[key] - 1)[2:])\n            m = max(m, a)\n    print(m)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    for i in arr:\n        d[i] = d.get(i, 0) + 1\n    maxi = 0\n    for key in d:\n        if d[key] > 1:\n            oper = len(bin(d[key] - 1)[2:])\n            maxi = max(maxi, oper)\n    print(maxi)", "from math import ceil, log2\nfrom statistics import mode\nfor tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = mode(a)\n    print(ceil(log2(a.count(p))))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    d = {}\n    l1 = []\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    n = max(list(d.values()))\n    c = 0\n    while n > 1:\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n = (n + 1) // 2\n        c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dic = {}\n    ans = 0\n    flag = True\n    for i in arr:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    n = max(list(dic.values()))\n    while n > 1:\n        if n % 2 == 0:\n            ans += 1\n            n = n // 2\n        else:\n            ans += 1\n            n = (n + 1) // 2\n    print(ans)", "from collections import Counter\nfrom math import log2, ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = Counter(a)\n    x = max(x.values())\n    print(ceil(log2(x)))", "from math import log2, ceil\nfor _ in range(int(input())):\n    input()\n    arr = map(int, input().split())\n    count = {}\n    for i in arr:\n        if i in count.keys():\n            count[i] += 1\n        else:\n            count[i] = 1\n    a = max(count.values())\n    print(ceil(log2(a)))", "from math import ceil, log2\nfrom statistics import mode\nfor tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = mode(a)\n    print(ceil(log2(a.count(p))))", "from itertools import count\nfrom typing import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    cout = max(Counter(l).values())\n    while cout > 1:\n        if cout % 2 == 0:\n            cout = cout // 2\n            ans += 1\n        else:\n            cout = (cout + 1) // 2\n            ans += 1\n    print(ans)", "from math import ceil, log2\nfrom statistics import mode\nfor tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = mode(a)\n    print(ceil(log2(a.count(p))))", "from math import ceil, log2\nfrom statistics import mode\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = mode(arr)\n    print(ceil(log2(arr.count(c))))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    count = 0\n    ans = 0\n    for i in l:\n        d[i] = d.get(i, 0) + 1\n        count = max(count, d[i])\n    while count > 1:\n        if count % 2 == 0:\n            count = count // 2\n        else:\n            count = (count + 1) // 2\n        ans += 1\n    print(ans)", "from math import log, ceil\nfrom collections import Counter\ntest = int(input())\nwhile test:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ct = Counter(a)\n    maxi = max(list(ct.values()))\n    print(ceil(log(maxi, 2)))\n    test -= 1", "from collections import Counter\nfrom math import floor\nt = int(input())\nwhile t > 0:\n    numbers = int(input())\n    arr = list(map(int, input().split()))\n    freq = Counter(arr)\n    maxFrequency = 0\n    for x in freq:\n        if freq[x] > maxFrequency:\n            maxFrequency = freq[x]\n    count = 0\n    while maxFrequency > 1:\n        if maxFrequency % 2 == 0:\n            maxFrequency = floor(maxFrequency / 2)\n            count += 1\n        else:\n            maxFrequency = floor(maxFrequency / 2) + 1\n            count += 1\n    print(count)\n    t -= 1", "from math import ceil, log2\nfrom statistics import mode\nt = int(input())\nfor j in range(t):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = mode(b)\n    print(ceil(log2(b.count(c))))", "from math import ceil, log2\nfrom statistics import mode\nfor tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = mode(a)\n    print(ceil(log2(a.count(p))))", "from collections import Counter\nimport math\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    C = Counter(L)\n    M = max(C.values())\n    count = 0\n    while M > 1:\n        M = math.ceil(M / 2)\n        count = count + 1\n    print(count)", "from collections import Counter\nimport math\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    c = Counter(A)\n    k = max(c.values())\n    print(math.ceil(math.log2(k)))", "from collections import Counter\nimport math\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    c = Counter(A)\n    k = max(c.values())\n    print(math.ceil(math.log(k, 2)))", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    dist_a = {}\n    list_a = list(map(int, input().split()))\n    if b == len(set(list_a)):\n        print(0)\n    else:\n        for j in range(b):\n            if list_a[j] not in dist_a:\n                dist_a[list_a[j]] = 1\n            else:\n                dist_a[list_a[j]] += 1\n        max_count = max(dist_a.values())\n        num = 0\n        while max_count > 1:\n            if max_count % 2 == 0:\n                max_count = max_count // 2\n                num += 1\n            else:\n                max_count = (max_count + 1) // 2\n                num += 1\n        print(num)", "import math\nfrom collections import Counter\ntest_case = int(input())\nfor _ in range(test_case):\n    n = int(input())\n    A = list(map(int, input().split()))\n    freq = dict(Counter(A))\n    m = max(list(freq.values()))\n    print(math.ceil(math.log2(m)))", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if j not in d:\n            d[j] = 1\n        else:\n            d[j] += 1\n    m = max(d.values())\n    print(math.ceil(math.log(m, 2)))", "from collections import Counter\nimport math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = Counter(arr)\n    l = list(x.values())\n    y = max(l)\n    print(math.ceil(math.log(y, 2)))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    count = {}\n    for number in numbers:\n        if number not in count:\n            count[number] = 1\n        else:\n            count[number] += 1\n    max_count = max(count.values())\n    print(math.ceil(math.log(max_count, 2)))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    count = {}\n    for number in numbers:\n        if number not in count:\n            count[number] = 1\n        else:\n            count[number] += 1\n    max_count = max(count.values())\n    print(math.ceil(math.log(max_count, 2)))", "import numpy as np\n\ndef get_minimum_operations(A):\n    (unique, counts) = np.unique(A, return_counts=True)\n    max_counts = max(counts)\n    n = 0\n    while max_counts > 1:\n        max_counts = np.ceil(max_counts / 2)\n        n += 1\n    return n\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = np.array(input().split(' ')).astype(int)\n    print(get_minimum_operations(A))", "from collections import defaultdict\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    A = list(map(int, input().strip().split()))[:N]\n    d = defaultdict(lambda : 0)\n    for i in range(N):\n        d[A[i]] += 1\n    Max = 0\n    for i in d:\n        Max = max(Max, d[i])\n    a = 0\n    for i in range(33):\n        if 2 ** i >= Max:\n            a = i\n            break\n    print(a)\n    T -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(el) for el in input().split(' ')]\n    m = 0\n    counts = {}\n    for el in arr:\n        if el in counts:\n            counts[el] += 1\n        else:\n            counts[el] = 1\n        if counts[el] > m:\n            m = counts[el]\n    res = 0\n    while m > 1:\n        res += 1\n        m = m - m // 2\n    print(res)", "from collections import Counter\nfrom math import floor\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    m = 0\n    c = 0\n    for i in d:\n        if d[i] > m:\n            m = d[i]\n    while m > 1:\n        if m % 2 == 0:\n            m = floor(m / 2)\n            c += 1\n        else:\n            m = floor(m / 2) + 1\n            c += 1\n    print(c)", "from collections import Counter\nfrom math import floor\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    m = 0\n    c = 0\n    for i in d:\n        if d[i] > m:\n            m = d[i]\n    while m > 1:\n        if m % 2 == 0:\n            m = floor(m / 2)\n            c += 1\n        else:\n            m = floor(m / 2) + 1\n            c += 1\n    print(c)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    m = 0\n    c = 0\n    for i in d.keys():\n        if d[i] > m:\n            m = d[i]\n    while m > 1:\n        if m % 2 == 0:\n            m = m // 2\n            c += 1\n        else:\n            m = m // 2 + 1\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    if n <= 0:\n        print(0)\n    arr = list(map(int, input().split()))\n    hashmap = {}\n    for i in arr:\n        if i in hashmap:\n            hashmap[i] += 1\n        else:\n            hashmap[i] = 1\n    maxi = 0\n    for i in hashmap.values():\n        if maxi < i:\n            maxi = i\n    ans = 0\n    val = 1\n    while val < maxi:\n        ans += 1\n        val *= 2\n    print(ans)", "def ans(arr):\n    hm = {}\n    for y in arr:\n        if y in hm.keys():\n            hm[y] += 1\n        else:\n            hm[y] = 1\n    k = max(hm.values())\n    count = 0\n    while k > 1:\n        if k % 2 == 0:\n            k = k // 2\n        else:\n            k = (k + 1) // 2\n        count += 1\n    return count\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = int(input())\n    d2 = list(map(int, input().split()))\n    print(ans(d2))\n    test_cases -= 1", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    mx = max(d.values())\n    ans = 0\n    while mx > 1:\n        if mx % 2 == 0:\n            mx = mx // 2\n        else:\n            mx = mx // 2 + 1\n        ans += 1\n    print(ans)", "import statistics\nfrom statistics import mode\nfor g in range(int(input())):\n    n = int(input())\n    k = input().split(' ')\n    c = k.count(mode(k))\n    a = 0\n    while c > 1:\n        if c % 2 == 1:\n            c = c // 2 + 1\n        else:\n            c = c // 2\n        a += 1\n    print(a)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    maxx = max(d.values())\n    count = maxx\n    ops = 0\n    while count > 1:\n        if count % 2 == 0:\n            count /= 2\n        else:\n            count = (count + 1) // 2\n        ops += 1\n    print(ops)", "import math\nfor _ in range(int(input())):\n    k = int(input())\n    a = list(map(int, input().split()))\n    h = {}\n    for i in a:\n        if i in h:\n            h[i] += 1\n        else:\n            h[i] = 1\n    k = max(h.values())\n    if k == 0:\n        print(0)\n    else:\n        print(math.ceil(math.log(k, 2)))", "for _ in range(int(input())):\n    n = int(input())\n    l = map(int, input().split())\n    d = {}\n    c = 0\n    for i in l:\n        if i not in d.keys():\n            d[i] = 1\n        else:\n            d[i] = d[i] + 1\n    ans = 0\n    max_val = max(d.values())\n    while max_val > 1:\n        if max_val % 2 == 0:\n            max_val = max_val // 2\n        else:\n            max_val = max_val // 2 + 1\n        ans += 1\n    print(ans)", "from collections import Counter\nfrom math import ceil, log\nfor i in range(int(input())):\n    _ = input()\n    arr = map(int, input().split())\n    dct = Counter(arr)\n    max_freq = max(dct.values())\n    print(ceil(log(max_freq, 2)))", "from collections import Counter\nfrom math import ceil, log\nfor i in range(int(input())):\n    _ = input()\n    arr = map(int, input().split())\n    dct = Counter(arr)\n    max_freq = max(dct.values())\n    print(ceil(log(max_freq, 2)))", "from collections import Counter\nfrom math import ceil, log\nfor i in range(int(input())):\n    _ = input()\n    arr = map(int, input().split())\n    dct = Counter(arr)\n    max_freq = max(dct.values())\n    print(ceil(log(max_freq, 2)))", "from collections import defaultdict\nfor _ in range(int(input())):\n    length = int(input())\n    arr = map(int, input().split())\n    freq_arr = defaultdict(int)\n    for elem in arr:\n        freq_arr[elem] += 1\n    maxitem_len = max(freq_arr.items(), key=lambda a: a[1])[1]\n    (count, step) = (0, 1)\n    while step < maxitem_len:\n        count += 1\n        step *= 2\n    print(count)", "from math import ceil, log2\nfrom statistics import mode\nfor tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = mode(a)\n    print(ceil(log2(a.count(p))))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if j not in d:\n            d[j] = 1\n        else:\n            d[j] = d[j] + 1\n    res = 0\n    maxi = max(d.values())\n    while maxi > 1:\n        if maxi % 2 == 0:\n            maxi = maxi / 2\n        else:\n            maxi = (maxi + 1) / 2\n        res += 1\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if j not in d:\n            d[j] = 1\n        else:\n            d[j] = d[j] + 1\n    res = 0\n    maxi = max(d.values())\n    while maxi > 1:\n        if maxi % 2 == 0:\n            maxi = maxi // 2\n        else:\n            maxi = (maxi + 1) // 2\n        res += 1\n    print(res)", "q = int(input())\nfor w in range(q):\n    n = int(input())\n    num = list(map(int, input().split()))\n    dicts = {}\n    for i in range(len(num)):\n        if num[i] not in dicts:\n            dicts[num[i]] = 1\n        else:\n            dicts[num[i]] += 1\n    res = 0\n    maxi = max(dicts.values())\n    while maxi > 1:\n        if maxi % 2 == 0:\n            maxi = maxi // 2\n        else:\n            maxi = (maxi + 1) // 2\n        res += 1\n    print(res)", "from typing import Counter\nfor i in range(int(input())):\n    a = int(input())\n    lst = map(int, input().split())\n    x = dict(Counter(lst))\n    maxm = 0\n    for i in x.values():\n        if i > maxm:\n            maxm = i\n    res = 0\n    while maxm > 1:\n        if maxm % 2 == 0:\n            maxm //= 2\n        else:\n            maxm = (maxm + 1) // 2\n        res += 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    ans = 0\n    for i in d:\n        ans = max(ans, d[i])\n    res = 0\n    while ans > 1:\n        if ans % 2 == 0:\n            ans = ans // 2\n        else:\n            ans = (ans + 1) // 2\n        res += 1\n    print(res)", "import math\nT = int(input())\nfor m in range(T):\n    d = {}\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in a:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    mx = max(d.values())\n    print(math.ceil(math.log(mx, 2)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = {}\n    for element in arr:\n        if element not in count:\n            count[element] = 1\n        else:\n            count[element] += 1\n    max_frequency = max(count.values())\n    cost = 0\n    while max_frequency > 1:\n        if max_frequency % 2 == 0:\n            max_frequency = max_frequency / 2\n        else:\n            max_frequency = (max_frequency + 1) / 2\n        cost += 1\n    print(cost)", "import statistics\nfrom statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    l = input().split(' ')\n    count = l.count(mode(l))\n    cost = 0\n    while count > 1:\n        if count % 2 == 1:\n            count = count // 2 + 1\n        else:\n            count = count // 2\n        cost += 1\n    print(cost)", "def fun(a, n):\n    f = {}\n    for i in range(n):\n        if a[i] in f:\n            f[a[i]] += 1\n        else:\n            f[a[i]] = 1\n    k = 0\n    h = max(f.values())\n    while h > 1:\n        if h % 2 == 0:\n            h = h / 2\n        else:\n            h = (h + 1) / 2\n        k += 1\n    return k\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(fun(l, n))", "import statistics\nfrom statistics import mode\n\ndef rep(l):\n    return mode(l)\nn = int(input())\nfor i in range(n):\n    q = int(input())\n    l = list(map(int, input().split()))\n    k = l.count(rep(l))\n    s = 0\n    while k != 1:\n        s = s + 1\n        if k % 2 == 0:\n            k = k // 2\n        else:\n            k = k // 2 + 1\n    print(s)", "import statistics\nfrom statistics import mode\n\ndef rep(l):\n    return mode(l)\nn = int(input())\nfor i in range(n):\n    q = int(input())\n    l = list(map(int, input().split()))\n    k = l.count(rep(l))\n    s = 0\n    while k != 1:\n        s = s + 1\n        if k % 2 == 0:\n            k = k // 2\n        else:\n            k = k // 2 + 1\n    print(s)", "for t in range(int(input())):\n    m = c = 0\n    d = {}\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in l:\n        if i not in d.keys():\n            d[i] = 1\n        else:\n            d[i] += 1\n    for i in d.keys():\n        if d[i] > m:\n            m = d[i]\n    while m > 1:\n        if m % 2 == 0:\n            m = m // 2\n            c += 1\n        else:\n            m = m // 2 + 1\n            c += 1\n    print(c)", "import statistics\nfrom statistics import mode\n\ndef rep(l):\n    return mode(l)\nn = int(input())\nfor i in range(n):\n    q = int(input())\n    l = list(map(int, input().split()))\n    k = l.count(rep(l))\n    s = 0\n    while k != 1:\n        s = s + 1\n        if k % 2 == 0:\n            k = k // 2\n        else:\n            k = k // 2 + 1\n    print(s)", "import statistics\nfrom statistics import mode\n\ndef rep(l):\n    return mode(l)\nn = int(input())\nfor i in range(n):\n    q = int(input())\n    l = list(map(int, input().split()))\n    k = l.count(rep(l))\n    s = 0\n    while k != 1:\n        s = s + 1\n        if k % 2 == 0:\n            k = k // 2\n        else:\n            k = k // 2 + 1\n    print(s)", "import statistics\nfrom statistics import mode\n\ndef rep(l):\n    return mode(l)\nn = int(input())\nfor i in range(n):\n    q = int(input())\n    l = list(map(int, input().split()))\n    k = l.count(rep(l))\n    s = 0\n    while k != 1:\n        s = s + 1\n        if k % 2 == 0:\n            k = k // 2\n        else:\n            k = k // 2 + 1\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    d = {}\n    l = list(map(int, input().split(' ')))\n    for i in l:\n        if i not in d.keys():\n            d[i] = 1\n        else:\n            d[i] += 1\n    count = max(d.values())\n    ans = 0\n    while count > 1:\n        if count % 2 == 0:\n            count = count // 2\n            ans += 1\n        else:\n            count = count // 2 + 1\n            ans += 1\n    print(ans)", "from math import ceil\ntestCaseLen = int(input())\nfor i in range(testCaseLen):\n    n = int(input())\n    arr = [int(val) for val in input(' ').split()]\n    hashMap = {j: 0 for j in arr}\n    for count in arr:\n        hashMap[count] += 1\n    high = max(hashMap.values())\n    count = 0\n    while high > 1:\n        if high % 2 == 0:\n            high = high // 2\n        else:\n            high = (high + 1) // 2\n        count += 1\n    print(count)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = [int(i) for i in input().split(' ')]\n    counts = {}\n    notSames = False\n    for a in A:\n        if a not in counts:\n            counts[a] = 0\n        counts[a] += 1\n        if notSames == False and counts[a] == 2:\n            notSames = True\n    if not notSames:\n        print(0)\n        continue\n    mx = max(counts.values())\n    ans = 0\n    temp = 1\n    while temp < mx:\n        temp *= 2\n        ans += 1\n    print(ans)", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    maxcnt = cnt = 1\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            cnt += 1\n            if cnt > maxcnt:\n                maxcnt = cnt\n        else:\n            cnt = 1\n    if maxcnt < 4:\n        print(maxcnt - 1)\n        return\n    maxcnt += maxcnt % 2\n    ans = 1\n    while 1:\n        maxcnt = (maxcnt + 1) // 2 if maxcnt % 2 else maxcnt // 2\n        if maxcnt < 2:\n            break\n        ans += 1\n    print(ans)\nfor _ in range(int(input())):\n    main()", "from math import ceil, log2\nfrom statistics import mode\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = mode(a)\n    print(ceil(log2(a.count(p))))", "def op():\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    sorted(l)\n    d = {}\n    for x in l:\n        if x in d.keys():\n            d[x] += 1\n        else:\n            d[x] = 1\n    m = max(d.values())\n    count = 0\n    while m > 1:\n        if m % 2 == 0:\n            m = m / 2\n        else:\n            m = (m + 1) / 2\n        count += 1\n    print(count)\nt = int(input())\nfor i in range(t):\n    op()"]