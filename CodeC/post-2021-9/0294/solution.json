["case = int(input())\nfor _ in range(case):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    value = max(arr)\n    res = value + (sum(arr) - value) / (n - 1)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    list1 = [int(x) for x in input().split()]\n    list1.sort()\n    print(sum(list1[:n - 1]) / (n - 1) + list1[n - 1])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    last = a[-1]\n    sum = 0\n    for i in range(n - 1):\n        sum += a[i]\n    ans = sum / (n - 1)\n    print(ans + last)", "o = 'bool'\nf = 0\nfor i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    sum = 0\n    h = 1234\n    for i in range(n - 1):\n        sum += s[i]\n    sum = sum / (n - 1)\n    sum += s[-1]\n    print(sum)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    t = 0\n    for i in range(n - 1):\n        t += l[i]\n    t = t / (n - 1)\n    t += l[-1]\n    print(t)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    m = max(l)\n    s = sum(l)\n    return m + (s - m) / (n - 1)\nfor _ in range(IN()):\n    print(f())", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    m = max(l)\n    s = sum(l)\n    return m + (s - m) / (n - 1)\nfor _ in range(IN()):\n    print(f())", "testcase = int(input())\n\ndef meanmax(arr):\n    max_ele = max(arr)\n    ans = max_ele + (sum(arr) - max_ele) / (len(arr) - 1)\n    return ans\nwhile testcase:\n    size = input()\n    arr = input()\n    arr = [int(num) for num in arr.split(' ')]\n    print(meanmax(arr))\n    testcase -= 1", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    m = max(l)\n    s = sum(l)\n    return m + (s - m) / (n - 1)\nfor _ in range(IN()):\n    print(f())", "testcase = int(input())\n\ndef meanmax(arr):\n    max_ele = max(arr)\n    ans = max_ele + (sum(arr) - max_ele) / (len(arr) - 1)\n    return ans\nwhile testcase:\n    size = input()\n    arr = input()\n    arr = [int(num) for num in arr.split(' ')]\n    print(meanmax(arr))\n    testcase -= 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    l.remove(m)\n    s = 0\n    for i in l:\n        s = s + i\n    print('{:.6f}'.format(m + s / (n - 1)))\n    t = t - 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    l.remove(m)\n    s = 0\n    for i in l:\n        s = s + i\n    print('{:.6f}'.format(m + s / (n - 1)))\n    t = t - 1", "def mean_Array(a):\n    return sum(a) / len(a)\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(mean_Array(a[0:len(a) - 1]) + a[-1])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    l = a[0]\n    r = sum(a[1:])\n    m = l + r / (n - 1)\n    for i in range(1, n - 1):\n        l += a[i]\n        r -= a[i]\n        m1 = l / (i + 1)\n        m2 = r / (n - i - 1)\n        m = max(m, m1 + m2)\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    l = a[0]\n    r = sum(a[1:])\n    m = l + r / (n - 1)\n    for i in range(1, n - 1):\n        l += a[i]\n        r -= a[i]\n        m1 = l / (i + 1)\n        m2 = r / (n - i - 1)\n        m = max(m, m1 + m2)\n    print(m)", "tests = int(input())\nfor i in range(tests):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    maximum = max(arr)\n    total = sum(arr)\n    print(maximum + (total - maximum) / (n - 1))", "tests = int(input())\nfor i in range(tests):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    maximum = max(arr)\n    total = sum(arr)\n    print(maximum + (total - maximum) / (n - 1))", "from bisect import bisect_left, bisect_right\nimport math\nfrom sys import maxsize\nfrom collections import defaultdict\nfrom bisect import bisect_left\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\nfrom collections import deque, defaultdict\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor z in range(ii()):\n    lim = ii()\n    temp = il()\n    print((sum(temp) - max(temp)) / (lim - 1) + max(temp))", "def soln(n, arr):\n    maxm = max(arr)\n    m_sum = sum(arr) - maxm\n    return maxm + m_sum / (n - 1)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(f'{soln(n, arr):.6f}')", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    print(a[n - 1] + (sum(a) - a[n - 1]) / (n - 1))", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    print(a[n - 1] + (sum(a) - a[n - 1]) / (n - 1))", "for T in range(int(input())):\n    n = int(input())\n    L = sorted(map(int, input().split()))\n    print(L[-1] + sum(L[:-1]) / (n - 1))", "for t in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().strip().split()))\n    c = max(b)\n    d = (sum(b) - c) / (a - 1)\n    print(c + d)", "test = int(input())\nfor t in range(test):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    mx = max(a)\n    su = (sum(a) - mx) / (n - 1)\n    print(mx + su)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().lstrip().split()))\n    arr.sort()\n    ans = 0\n    if n == 2:\n        ans += sum(arr)\n        print('{:.6f}'.format(ans))\n    else:\n        ans += sum(arr[:n - 1]) / (n - 1) + arr[n - 1]\n        print('{:.6f}'.format(ans))", "for i in range(int(input())):\n    N = int(input())\n    l = list(map(int, input().split()))\n    p = max(l)\n    temp_avg = (sum(l) - p) / (N - 1)\n    print(temp_avg + p)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    array = list(map(int, input().split(' ')[:n]))\n    maxele = max(array)\n    temp_avg = (sum(array) - maxele) / (n - 1)\n    print(temp_avg + maxele)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    array = list(map(int, input().split(' ')[:n]))\n    maxele = max(array)\n    temp_avg = (sum(array) - maxele) / (n - 1)\n    print(temp_avg + maxele)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = max(l)\n    y = (sum(l) - k) / (n - 1)\n    print(k + y)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    s = (sum(a) - m) / (n - 1)\n    print(m + s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    y = (sum(a) - m) / (n - 1)\n    print(y + m)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = max(l)\n    y = (sum(l) - k) / (n - 1)\n    print(k + y)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = max(l)\n    y = (sum(l) - k) / (n - 1)\n    print(k + y)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = max(l)\n    y = (sum(l) - k) / (n - 1)\n    print(k + y)", "import numpy as np\nfor i in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    p = [A[n - 1]]\n    q = []\n    for i in range(n - 1):\n        q.append(A[i])\n    print(np.mean(p) + np.mean(q))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = max(x)\n    z = []\n    s = []\n    x.sort()\n    print('{:.6f}'.format((sum(x) - x[-1]) / (len(x) - 1) + x[-1]))", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    b = a - 1\n    c = int(lst[-1]) + sum(lst[:-1]) / b\n    print(c)", "for i in range(int(input())):\n    x = int(input())\n    c = list(map(int, input().split(' ')))[:x]\n    c.sort()\n    p = []\n    for i in range(x):\n        if i != x - 1:\n            y = c[:i + 1]\n            z = c[i + 1:]\n            p.append(sum(y) / len(y) + sum(z) / len(z))\n    print('{:.6f}'.format(max(p)))", "for i in range(int(input())):\n    x = int(input())\n    c = list(map(int, input().split(' ')))[:x]\n    c.sort()\n    print('{:.6f}'.format((sum(c) - c[-1]) / (len(c) - 1) + c[-1]))", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    s = sum(arr) - arr[-1]\n    av = s / (n - 1)\n    av = av + arr[-1]\n    print(av)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    s = sum(arr) - arr[-1]\n    av = s / (n - 1)\n    av = av + arr[-1]\n    print(av)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = sorted(list(map(int, input().strip().split(' '))))\n    total = 0\n    for x in range(n - 1):\n        total += arr[x]\n    meanP = total / (n - 1)\n    meanQ = float(arr[-1])\n    res = meanP + meanQ\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l1.sort()\n    k = sum(l1[:n - 1]) / (n - 1) + l1[n - 1]\n    print(k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    num = list(map(int, input().split()))\n    x = max(num)\n    y = (sum(num) - x) / (n - 1)\n    print(x + y)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    print(sum(a[:n - 1]) / (n - 1) + a[-1])", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    nums = list(map(int, input().split()))\n    nums.sort()\n    sum_min = 0\n    sum_max = sum(nums)\n    means = []\n    for i in range(0, N - 1):\n        sum_min += nums[i]\n        sum_max -= nums[i]\n        mean = sum_min / (i + 1) + sum_max / (N - i - 1)\n        means.append(mean)\n    print(max(means))", "def main():\n    tsc = int(input())\n    for i in range(0, tsc):\n        length = int(input())\n        string = input()\n        List = []\n        string = string.split()\n        for word in string:\n            List.append(float(word))\n        List.sort()\n        A = List.pop()\n        B = List\n        a = A + mean(B)\n        print(format(a, '.6f'))\n\ndef mean(x):\n    sum = 0\n    for index in range(0, len(x)):\n        sum += x[index]\n    lmean = sum / len(x)\n    return lmean\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    k.sort()\n    x = max(k) + sum(k[:n - 1]) / (n - 1)\n    print('%.6f' % x)", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    m = max(arr)\n    t = sum(arr)\n    print(m + (t - m) / (len(arr) - 1))", "t = int(input())\nfor _ in range(t):\n    maximum = 0\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(max(arr) + (sum(arr) - max(arr)) / (n - 1))", "t = int(input())\nfor _ in range(t):\n    maximum = 0\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(max(arr) + (sum(arr) - max(arr)) / (n - 1))", "t = int(input())\nfor _ in range(t):\n    maximum = 0\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(max(arr) + (sum(arr) - max(arr)) / (n - 1))", "t = int(input())\nfor _ in range(t):\n    maximum = 0\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(max(arr) + (sum(arr) - max(arr)) / (n - 1))", "t = int(input())\nfor _ in range(t):\n    maximum = 0\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(max(arr) + (sum(arr) - max(arr)) / (n - 1))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    x = int(input())\n    lst = list(map(int, input().split()))\n    print(max(lst) + (sum(lst) - max(lst)) / (x - 1))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    s = 0\n    m = 0\n    k = max(a)\n    for i in range(n):\n        if a[i] == k:\n            if m == 0:\n                m = 1\n                continue\n            else:\n                s = s + a[i]\n        else:\n            s = s + a[i]\n    avg = s / (n - 1) + k\n    print(avg)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    ali = list(map(int, input().split()))\n    mx = max(ali)\n    ind = ali.index(mx)\n    del ali[ind]\n    if len(ali) > 0:\n        mn = mx + sum(ali) / len(ali)\n        print(mn)", "for _ in range(int(input())):\n    n = int(input())\n    ali = list(map(int, input().split()))\n    mx = max(ali)\n    ind = ali.index(mx)\n    del ali[ind]\n    if len(ali) > 0:\n        mn = mx + sum(ali) / len(ali)\n        print(mn)\n    else:\n        mn = 2 * mx\n        print(mn)", "for T in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    avg = (sum(l) - max(l)) / (n - 1)\n    print(max(l) + avg)", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    mean = sum(a[:n - 1]) / (n - 1) + a[-1]\n    print(mean)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max1 = max(arr)\n    print(round(max1 + (sum(arr) - max1) / (n - 1), 6))", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    m = max(arr)\n    t = sum(arr)\n    print(m + (t - m) / (len(arr) - 1))", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    total = sum(arr)\n    pref = [arr[0]]\n    for i in range(1, len(arr)):\n        pref.append(pref[-1] + arr[i])\n    maxMean = -float('inf')\n    for i in range(1, len(arr)):\n        left = pref[i - 1] / i\n        right = (total - pref[i - 1]) / (len(pref) - i)\n        maxMean = max(maxMean, left + right)\n    print(maxMean)", "def mean(p, q):\n    a = 0\n    b = 0\n    for i in p:\n        a += i\n    for i in q:\n        b += i\n    return a / len(p) + b / len(q)\nfor i in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    A.sort()\n    c = mean(A[:-1], A[-1:])\n    print(c)", "n = int(input())\nfor i in range(n):\n    sz = int(input())\n    lst = [int(i) for i in input().split()]\n    maxI = lst[0]\n    sumI = 0\n    for i in lst:\n        if i > maxI:\n            maxI = i\n        sumI += i\n    print((sumI - maxI) / (sz - 1) + maxI)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    lst = list(map(int, input().split()))\n    avgp = 0\n    avgq = 0\n    lst.sort()\n    for j in range(len(lst) - 1):\n        avgp += lst[j]\n    avgq += lst[len(lst) - 1]\n    avgp /= N - 1\n    print(avgp + avgq)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    lst = list(map(int, input().split()))\n    P = []\n    Q = []\n    avgp = 0\n    avgq = 0\n    lst.sort()\n    for j in range(len(lst) - 1):\n        avgp += lst[j]\n    avgq += lst[len(lst) - 1]\n    avgp /= N - 1\n    print(avgp + avgq)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    print(a[-1] + sum(a[0:n - 1]) / (n - 1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    k = lst[len(lst) - 1]\n    a = (sum(lst) - k) / (len(lst) - 1)\n    ans = a + k\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    ind = l.index(m)\n    l.pop(ind)\n    ans = m + sum(l) / (n - 1)\n    print(ans)", "def readList():\n    li = [int(x) for x in input().split()]\n    return li\n\ndef ab_janJaooo():\n    length = int(input())\n    arr = readList()\n    p = arr[0]\n    for item in arr:\n        if p < item:\n            p = item\n    arr.remove(p)\n    sum = 0\n    for x in arr:\n        sum += x\n    sum /= length - 1\n    print(p + sum)\nt = int(input())\nfor _ in range(t):\n    ab_janJaooo()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    s = 0\n    for i in range(n - 1):\n        s = s + l[i]\n    z = s / (n - 1) + l[n - 1]\n    print('%0.6f' % z)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(max(l) + (sum(l) - max(l)) / (n - 1))", "for _ in range(int(input())):\n    N = int(input())\n    A = sorted(list(map(int, input().split(' '))))\n    S = 0\n    for i in range(N - 1):\n        S += A[i]\n    print('%.6f' % (A[-1] + S / (N - 1)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    (sum1, sum2) = (arr[-1], sum(arr) - arr[-1])\n    (l1, l2) = (1, len(arr) - 1)\n    ans = sum1 / l1 + sum2 / l2\n    for i in range(len(arr) - 2, 0, -1):\n        sum1 += arr[i]\n        sum2 -= arr[i]\n        l1 += 1\n        l2 -= 1\n        total = sum1 / l1 + sum2 / l2\n        ans = max(ans, total)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    print(max(l) + (sum(l) - max(l)) / (n - 1))", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l1.sort()\n    k = sum(l1[0:n - 1])\n    a = k / (n - 1)\n    z = a + l1[-1]\n    print(z)", "t = int(input())\nwhile t:\n    n = input()\n    n = int(n)\n    list = [int(x) for x in input().split()]\n    list = sorted(list)\n    x = list[n - 1]\n    list.remove(list[n - 1])\n    mean = float(sum(list) / len(list))\n    print('%.6f' % (mean + x))\n    t -= 1", "def mean(arr):\n    l = len(arr)\n    mean1 = sum(arr) / l\n    return mean1\nT = int(input())\nfor _ in range(T):\n    p = []\n    N = int(input())\n    a = list(map(int, input().split()))\n    p.append(max(a))\n    a.remove(max(a))\n    m1 = mean(p)\n    m2 = mean(a)\n    print(m1 + m2)", "for i in range(int(input())):\n    n = int(input())\n    l = [int(j) for j in input().split()]\n    k = sorted(l)[::-1]\n    s = k[0]\n    k.remove(s)\n    d = s + sum(k) / len(k)\n    print('{:.6f}'.format(d))", "for i in range(int(input())):\n    n = int(input())\n    l = [int(j) for j in input().split()]\n    k = sorted(l)[::-1]\n    s = k[0]\n    k.remove(s)\n    d = s + sum(k) / len(k)\n    print('{:.6f}'.format(d))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())), reverse=True)\n    mw1 = arr[0]\n    mw2 = (sum(arr) - mw1) / (n - 1)\n    print(mw1 + mw2)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = max(a)\n    count = 0\n    for i in range(n):\n        count += a[i]\n    print(count / (n - 1) + p - p / (n - 1))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = sum(a[:n - 1]) / (n - 1)\n    s += a[n - 1]\n    print(s)\n    t -= 1", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    lst = sorted(list(map(int, input().split())))\n    a = lst[:-1]\n    b = lst[-1:]\n    print(sum(a) / len(a) + sum(b) / len(b))", "def sol(l, n):\n    if n < 3:\n        return '{0:.6f}'.format(sum(l))\n    elif len(set(l)) == 1:\n        return '{0:.6f}'.format(sum(l[:2]))\n    l.sort()\n    s = sum(l[:n - 1]) / (n - 1)\n    return '{0:.6f}'.format(s + l[n - 1])\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(sol(l, n))", "for q in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    sum1 = sum(arr)\n    max1 = max(arr)\n    sum2 = (sum1 - max1) / (n - 1)\n    ans = sum2 + max1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    lis.sort()\n    t1 = lis[-1]\n    t2 = sum(lis[0:n - 1]) / (n - 1)\n    su = t1 + t2\n    print(su)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    summ = 0\n    lst = list(map(int, input().split(' ')))\n    if n == 1:\n        print('0.000000')\n        break\n    lst.sort()\n    for j in range(0, n - 1):\n        summ += lst[j]\n    summ /= n - 1\n    summ += lst[n - 1]\n    print('{:.6f}'.format(summ))\n    print('\\n')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=1)\n    ans = 0\n    for i in range(n):\n        try:\n            x = l[0:i + 1]\n        except IndexError:\n            pass\n        try:\n            y = l[i + 1:]\n        except IndexError:\n            pass\n        try:\n            mean = sum(x) / len(x) + sum(y) / len(y)\n        except ZeroDivisionError:\n            continue\n        if mean > ans:\n            ans = mean\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (s, m1, m2) = (sum(arr), min(arr), max(arr))\n    print(max((s - m1) / (n - 1) + m1, (s - m2) / (n - 1) + m2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (s, m1, m2) = (sum(arr), min(arr), max(arr))\n    print(max((s - m1) / (n - 1) + m1, (s - m2) / (n - 1) + m2))", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip('\\r\\n')\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max(a) + (sum(a) - max(a)) / (len(a) - 1))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    mx = s = 0\n    for i in l:\n        if i > mx:\n            mx = i\n        s += i\n    s -= mx\n    print(s / (n - 1) + mx)", "import numpy as np\nt = int(input())\nwhile t != 0:\n    t -= 1\n    m = int(input())\n    l = list(map(int, input().split()))\n    c = sum(l)\n    l.sort()\n    c = c - l[m - 1]\n    c = c / (m - 1)\n    print(c + l[m - 1])"]