["for test_cases in range(int(input())):\n    length = int(input())\n    list_a = list(map(int, input().split()))\n    count_0 = list_a.count(0)\n    count_1 = list_a.count(1)\n    if count_1 > count_0 or count_1 == count_0:\n        print(1)\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l.count(1) > l.count(0):\n        print(1)\n    elif l.count(1) < l.count(0):\n        print(0)\n    else:\n        print(1)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if s.count('0') <= s.count('1'):\n        print(1)\n    else:\n        print(0)", "def func(b):\n    t = 0\n    i = 0\n    while i < len(b):\n        if 1 in b and 0 in b:\n            if t % 2 == 0:\n                b.remove(1)\n                b.remove(0)\n                b.append(1)\n                t = t + 1\n            else:\n                b.remove(1)\n                b.remove(0)\n                b.append(0)\n                t = t + 1\n        else:\n            break\n        i = i + 1\n    while len(b) > 1:\n        if t % 2 == 0:\n            b.append(b.pop() or b.pop())\n            t = t + 1\n        else:\n            b.append(b.pop() and b.pop())\n            t = t + 1\n    print(*b, sep='')\na = int(input())\nfor i in range(a):\n    t = int(input())\n    b = list(map(int, input().rstrip().split()))\n    func(b)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if s.count('0') <= s.count('1'):\n        print(1)\n    else:\n        print(0)", "t = int(input())\nfor ni in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    l1 = l.count(1)\n    l0 = n - l1\n    if l1 > l0:\n        print(1)\n    elif l0 > l1:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nfor ni in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    l1 = l.count(1)\n    l0 = n - l1\n    if l1 > l0:\n        print(1)\n    elif l0 > l1:\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = input()\n    a = [int(x) for x in input().split()]\n    (c0, c1) = (a.count(0), a.count(1))\n    print(0 if c0 > c1 else 1)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(1) if lst.count(1) >= lst.count(0) else print(0)", "for _ in range(int(input())):\n    n = int(input())\n    l = input()\n    m = l.count('0')\n    n = l.count('1')\n    if n >= m:\n        print(1)\n    elif n < m:\n        print(0)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    zeros = A.count(0)\n    ones = A.count(1)\n    if ones >= zeros:\n        print(1)\n    else:\n        print(0)", "for tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = a.count(0)\n    w = a.count(1)\n    if w >= z:\n        print(1)\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(0) > a.count(1):\n        print(0)\n    elif a.count(0) < a.count(1):\n        print(1)\n    elif a.count(0) == a.count(1):\n        print(1)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(0) > a.count(1):\n        print(0)\n    elif a.count(0) < a.count(1):\n        print(1)\n    elif a.count(0) == a.count(1):\n        print(1)", "for _ in range(int(input())):\n    size = int(input())\n    binary = list(map(int, input().split()))\n    if binary.count(1) < binary.count(0):\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    size = int(input())\n    binary = list(map(int, input().split()))\n    if binary.count(1) < binary.count(0):\n        print(0)\n    else:\n        print(1)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    zero = a.count(0)\n    one = a.count(1)\n    pair = min(one, zero)\n    count = 0\n    i = 0\n    while i < pair:\n        a.remove(1)\n        a.remove(0)\n        if count % 2 == 0:\n            a.append(1)\n        else:\n            a.append(0)\n            pair += 1\n        count += 1\n        i += 1\n    if a.count(1) == len(a):\n        print(1)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l.count(0) > l.count(1):\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    flag = True\n    while flag:\n        for i in range(2):\n            if 1 in a and 0 in a:\n                a.remove(i)\n            else:\n                a.pop()\n            if len(a) == 1:\n                flag = False\n                break\n    print(a[0])", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    numbers = list(map(int, input().split(' ')))\n    go_on = True\n    while go_on:\n        for i in range(2):\n            numbers.remove(i) if 1 in numbers and 0 in numbers else numbers.pop()\n            if len(numbers) == 1:\n                go_on = False\n                break\n    print(numbers[0])", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    numbers = list(map(int, input().split(' ')))\n    while len(numbers) > 1:\n        numbers.remove(0) if 1 in numbers and 0 in numbers else numbers.pop()\n        if len(numbers) == 1:\n            break\n        numbers.remove(1) if 1 in numbers and 0 in numbers else numbers.pop()\n    print(numbers[0])", "T = int(input())\nfor i in range(0, T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(1) >= a.count(0):\n        print(1)\n    else:\n        print(0)", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ones = a.count(1)\n    zeros = a.count(0)\n    if ones >= zeros:\n        print(1)\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if s.count('0') <= s.count('1'):\n        print(1)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ones = a.count(1)\n    zeros = n - ones\n    if min(ones, zeros) == zeros:\n        print(1)\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if s.count('0') <= s.count('1'):\n        print(1)\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if s.count('0') <= s.count('1'):\n        print(1)\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    c1 = ar.count(1)\n    c0 = ar.count(0)\n    if c1 >= c0:\n        print(1)\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l.count(1) >= l.count(0):\n        print(1)\n    elif l.count(0) > l.count(1):\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l.count(1) >= l.count(0):\n        print(1)\n    elif l.count(0) > l.count(1):\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = l.count(0)\n    b = l.count(1)\n    if b >= a:\n        print(1)\n    else:\n        print(0)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    blackboard = input().split()\n    zeroes = 0\n    ones = 0\n    for idx in range(n):\n        if blackboard[idx] == '0':\n            zeroes += 1\n        else:\n            ones += 1\n    if ones >= zeroes:\n        print(1)\n    else:\n        print(0)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    blackboard = input().split()\n    zeroes = 0\n    ones = 0\n    for idx in range(n):\n        if blackboard[idx] == '0':\n            zeroes += 1\n        else:\n            ones += 1\n    if ones >= zeroes:\n        print(1)\n    else:\n        print(0)", "for _ in range(int(input())):\n    print(int(int(input()) <= sum(map(int, input().split())) << 1))", "for _ in range(int(input())):\n    n = int(input())\n    s = sum(map(int, input().split())) << 1\n    print(int(n <= s))", "for _ in range(int(input())):\n    n = int(input())\n    s = sum(map(int, input().split()))\n    print(int(s << 1 >= n))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr.count(1) >= arr.count(0):\n        print(1)\n    else:\n        print(0)", "vishnesh = int(input())\nfor vish in range(vishnesh):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a0 = arr.count(0)\n    a1 = arr.count(1)\n    if a0 <= a1:\n        print(1)\n    else:\n        print(0)", "vishnesh = int(input())\nfor vish in range(vishnesh):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a0 = arr.count(0)\n    a1 = arr.count(1)\n    if a0 == a1:\n        print(1)\n    elif a1 > a0:\n        print(1)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(0) == a.count(1):\n        print(1)\n    elif a.count(0) > a.count(1):\n        print(0)\n    elif a.count(0) < a.count(1):\n        print(1)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = l.count(0)\n    y = l.count(1)\n    if x == y:\n        print('1')\n    elif x > y:\n        print('0')\n    else:\n        print('1')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    operation_list = list(a)\n    bitwise_OR = []\n    bitwise_AND = []\n    if (len(a) - 1) % 2 == 0:\n        for j in range((len(a) - 1) // 2):\n            if 1 in operation_list and 0 in operation_list:\n                bitwise_OR.append(1)\n                bitwise_OR.append(0)\n                operation_list.remove(1)\n                operation_list.remove(0)\n                operation_list.append(bitwise_OR[0] | bitwise_OR[1])\n                bitwise_OR.remove(1)\n                bitwise_OR.remove(0)\n            elif 1 in operation_list and 0 not in operation_list:\n                bitwise_OR.append(1)\n                bitwise_OR.append(1)\n                operation_list.remove(1)\n                operation_list.remove(1)\n                operation_list.append(bitwise_OR[0] | bitwise_OR[1])\n                bitwise_OR.remove(1)\n                bitwise_OR.remove(1)\n            else:\n                bitwise_OR.append(0)\n                bitwise_OR.append(0)\n                operation_list.remove(0)\n                operation_list.remove(0)\n                operation_list.append(bitwise_OR[0] | bitwise_OR[1])\n                bitwise_OR.remove(0)\n                bitwise_OR.remove(0)\n            if 1 in operation_list and 0 in operation_list:\n                bitwise_AND.append(1)\n                bitwise_AND.append(0)\n                operation_list.remove(1)\n                operation_list.remove(0)\n                operation_list.append(bitwise_AND[0] & bitwise_AND[1])\n                bitwise_AND.remove(1)\n                bitwise_AND.remove(0)\n            elif 1 not in operation_list and 0 in operation_list:\n                bitwise_AND.append(0)\n                bitwise_AND.append(0)\n                operation_list.remove(0)\n                operation_list.remove(0)\n                operation_list.append(bitwise_AND[0] & bitwise_AND[1])\n                bitwise_AND.remove(0)\n                bitwise_AND.remove(0)\n            else:\n                bitwise_AND.append(1)\n                bitwise_AND.append(1)\n                operation_list.remove(1)\n                operation_list.remove(1)\n                operation_list.append(bitwise_AND[0] & bitwise_AND[1])\n                bitwise_AND.remove(1)\n                bitwise_AND.remove(1)\n        print(*operation_list)\n    else:\n        for j in range((len(a) - 1) // 2):\n            if 1 in operation_list and 0 in operation_list:\n                bitwise_OR.append(1)\n                bitwise_OR.append(0)\n                operation_list.remove(1)\n                operation_list.remove(0)\n                operation_list.append(bitwise_OR[0] | bitwise_OR[1])\n                bitwise_OR.remove(1)\n                bitwise_OR.remove(0)\n            elif 1 in operation_list and 0 not in operation_list:\n                bitwise_OR.append(1)\n                bitwise_OR.append(1)\n                operation_list.remove(1)\n                operation_list.remove(1)\n                operation_list.append(bitwise_OR[0] | bitwise_OR[1])\n                bitwise_OR.remove(1)\n                bitwise_OR.remove(1)\n            else:\n                bitwise_OR.append(0)\n                bitwise_OR.append(0)\n                operation_list.remove(0)\n                operation_list.remove(0)\n                operation_list.append(bitwise_OR[0] | bitwise_OR[1])\n                bitwise_OR.remove(0)\n                bitwise_OR.remove(0)\n            if 1 in operation_list and 0 in operation_list:\n                bitwise_AND.append(1)\n                bitwise_AND.append(0)\n                operation_list.remove(1)\n                operation_list.remove(0)\n                operation_list.append(bitwise_AND[0] & bitwise_AND[1])\n                bitwise_AND.remove(1)\n                bitwise_AND.remove(0)\n            elif 1 not in operation_list and 0 in operation_list:\n                bitwise_AND.append(0)\n                bitwise_AND.append(0)\n                operation_list.remove(0)\n                operation_list.remove(0)\n                operation_list.append(bitwise_AND[0] & bitwise_AND[1])\n                bitwise_AND.remove(0)\n                bitwise_AND.remove(0)\n            else:\n                bitwise_AND.append(1)\n                bitwise_AND.append(1)\n                operation_list.remove(1)\n                operation_list.remove(1)\n                operation_list.append(bitwise_AND[0] & bitwise_AND[1])\n                bitwise_AND.remove(1)\n                bitwise_AND.remove(1)\n        if 1 in operation_list and 0 in operation_list:\n            bitwise_OR.append(1)\n            bitwise_OR.append(0)\n            operation_list.remove(1)\n            operation_list.remove(0)\n            operation_list.append(bitwise_OR[0] | bitwise_OR[1])\n            bitwise_OR.remove(1)\n            bitwise_OR.remove(0)\n        elif 1 in operation_list and 0 not in operation_list:\n            bitwise_OR.append(1)\n            bitwise_OR.append(1)\n            operation_list.remove(1)\n            operation_list.remove(1)\n            operation_list.append(bitwise_OR[0] | bitwise_OR[1])\n            bitwise_OR.remove(1)\n            bitwise_OR.remove(1)\n        else:\n            bitwise_OR.append(0)\n            bitwise_OR.append(0)\n            operation_list.remove(0)\n            operation_list.remove(0)\n            operation_list.append(bitwise_OR[0] | bitwise_OR[1])\n            bitwise_OR.remove(0)\n            bitwise_OR.remove(0)\n        print(*operation_list)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l.count(1) >= l.count(0):\n        print(1)\n    else:\n        print(0)", "testcases = int(input())\nfor i in range(testcases):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ones = sum(arr)\n    zeroes = n - ones\n    if ones < zeroes:\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    ar = input()\n    if ar.count('0') <= ar.count('1'):\n        print(1)\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    a = s.count('1')\n    b = s.count('0')\n    if a >= b:\n        print(1)\n    else:\n        print(0)", "t = input()\nfor c in range(0, int(t)):\n    n = int(input())\n    ar = input()\n    if ar.count('0') <= ar.count('1'):\n        print(1)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    ar = input()\n    if ar.count('0') <= ar.count('1'):\n        print(1)\n    else:\n        print(0)", "import sys\nt = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    dct = {}\n    (dct[1], dct[0]) = (0, 0)\n    for item in a:\n        dct[item] = dct.get(item, 0) + 1\n    while dct[0] and dct[1]:\n        dct[0] -= 1\n        dct[1] -= 1\n    if dct[0] == 0:\n        print('1')\n    else:\n        print('0')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = 0\n    p = 1\n    if a.count(p) >= a.count(z):\n        print('1')\n    else:\n        print('0')", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    zero_count = arr.count(0)\n    ones_count = arr.count(1)\n    if zero_count > ones_count:\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    ones = l.count(1)\n    zeros = n - ones\n    if ones >= zeros:\n        print(1)\n    else:\n        print(0)", "n = int(input())\nwhile n:\n    n = n - 1\n    k = int(input())\n    l = list(map(int, input().split()))\n    a = l.count(1)\n    b = l.count(0)\n    if a == b or a > b:\n        print('1')\n    else:\n        print('0')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = l.count(0)\n    b = l.count(1)\n    if a > b:\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    a = input().split()\n    numbers = sorted(a)\n    result = ''\n    while True:\n        if len(numbers) == 1:\n            break\n        for i in range(len(numbers[-1])):\n            if numbers[1][i] == '1' or numbers[0][i] == '1':\n                result += '1'\n            else:\n                result += '0'\n        numbers.pop(0)\n        numbers.pop(0)\n        numbers.insert(0, result)\n        result = ''\n        if len(numbers) == 1:\n            break\n        for i in range(len(numbers[-1])):\n            if numbers[-1][i] == '1' and numbers[-2][i] == '1':\n                result += '1'\n            else:\n                result += '0'\n        numbers.pop(-1)\n        numbers.pop(-1)\n        numbers.append(result)\n        result = ''\n    print(numbers[0])", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    c1 = a.count('0')\n    if c1 > n // 2:\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l.count(1) >= l.count(0):\n        print(1)\n    else:\n        print(0)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    arr = [int(i) for i in input().split(' ', N - 1)]\n    oneCount = 0\n    zeroCount = 0\n    for j in range(N):\n        if arr[j] == 0:\n            zeroCount = zeroCount + 1\n        else:\n            oneCount = oneCount + 1\n    if oneCount >= zeroCount:\n        print('1')\n    else:\n        print('0')", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    arr = [int(i) for i in input().split(' ', N - 1)]\n    oneCount = 0\n    zeroCount = 0\n    for j in range(N):\n        if arr[j] == 0:\n            zeroCount = zeroCount + 1\n        else:\n            oneCount = oneCount + 1\n    if oneCount >= zeroCount:\n        print('1')\n    else:\n        print('0')", "T = int(input())\nfor j in range(T):\n    n = int(input())\n    a1 = []\n    a2 = []\n    li = list(input().split())\n    li = list(map(int, li))\n    for i in range(0, n):\n        if li[i] == 0:\n            a1.append(0)\n        else:\n            a2.append(1)\n    if len(a1) <= len(a2):\n        print('1')\n    else:\n        print('0')", "T = int(input())\nfor j in range(T):\n    n = int(input())\n    a1 = []\n    a2 = []\n    li = list(input().split())\n    li = list(map(int, li))\n    for i in range(0, n):\n        if li[i] == 0:\n            a1.append(0)\n        else:\n            a2.append(1)\n    if len(a1) <= len(a2):\n        print('1')\n    else:\n        print('0')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    l = arr.count(0)\n    r = arr.count(1)\n    if l > r:\n        print(0)\n    else:\n        print(1)\n    t = t - 1", "n = int(input())\nfor i in range(n):\n    p = int(input())\n    l = list(map(int, input().split()))\n    a0 = l.count(0)\n    a1 = l.count(1)\n    if a0 > a1:\n        print(0)\n    else:\n        print(1)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (cnt_1, cnt_0) = (0, 0)\n    for i in arr:\n        if i == 1:\n            cnt_1 += 1\n        else:\n            cnt_0 += 1\n    if cnt_1 >= cnt_0:\n        print(1)\n    else:\n        print(0)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (cnt_1, cnt_0) = (0, 0)\n    for i in arr:\n        if i == 1:\n            cnt_1 += 1\n        else:\n            cnt_0 += 1\n    k = 0\n    while cnt_0 != 0 and cnt_1 != 0:\n        if k % 2 == 0:\n            cnt_0 -= 1\n        else:\n            cnt_1 -= 1\n        k += 1\n    if cnt_1 != 0:\n        print(1)\n    else:\n        print(0)", "testCases = int(input())\nfor t in range(0, testCases):\n    n = int(input())\n    binaries = list(map(int, input().strip().split()))[:n]\n    ones = binaries.count(1)\n    zeros = n - ones\n    if zeros > ones:\n        print('0')\n    else:\n        print('1')", "a = int(input())\nfor _ in range(a):\n    b = int(input())\n    c = input().split(' ')\n    c = [int(x) for x in c]\n    count_0 = c.count(0)\n    count_1 = c.count(1)\n    if count_0 > count_1:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    one = sum(l)\n    zero = n - one\n    if one >= zero:\n        print(1)\n    else:\n        print(0)\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    L = input().split(' ')\n    l = []\n    for i in L:\n        l.append(int(i))\n    l.sort()\n    if l.count(0) >= l.count(1) + 1:\n        print(0)\n    elif l.count(0) < l.count(1) + 1:\n        print(1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    L = input().split(' ')\n    l = []\n    for i in L:\n        l.append(int(i))\n    l.sort()\n    if l.count(0) >= l.count(1) + 1:\n        print(0)\n    elif l.count(0) < l.count(1) + 1:\n        print(1)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    sen = list(map(str, input().split()))\n    z = sen.count('0')\n    o = sen.count('1')\n    if z > o:\n        print(0)\n    else:\n        print(1)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    sen = list(map(str, input().split()))\n    z = sen.count('0')\n    o = sen.count('1')\n    if z > o:\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    if a.count(0) < a.count(1):\n        print(1)\n    elif a.count(0) == a.count(1):\n        print(1)\n    elif a.count(0) > a.count(1):\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if lst.count(0) <= lst.count(1):\n        print(1)\n    else:\n        print(0)", "from bisect import bisect_left\nfrom re import sub\nimport re\nfrom typing import DefaultDict\nimport math\nfrom collections import defaultdict\nfrom math import sqrt\nimport collections\nfrom sys import maxsize\nfrom itertools import combinations_with_replacement\nimport sys\nimport copy\n\ndef sieve_erasthones(n):\n    cnt = 0\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p ** 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\n    for p in range(n + 1):\n        if prime[p]:\n            cnt += 1\n    return cnt\n\ndef calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\n\ndef count_factors(n):\n    i = 1\n    c = 0\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n // i == i:\n                c += 1\n            else:\n                c += 2\n        i += 1\n    return c\n\ndef ncr_modulo(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = num * (n - i) % p\n        den = den * (i + 1) % p\n    return num * pow(den, p - 2, p) % p\n\ndef isprime(n):\n    prime_flag = 0\n    if n > 1:\n        for i in range(2, int(sqrt(n)) + 1):\n            if n % i == 0:\n                prime_flag = 1\n                break\n        if prime_flag == 0:\n            return True\n        else:\n            return False\n    else:\n        return True\n\ndef smallestDivisor(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\n\ndef dict_ele_count(l):\n    d = DefaultDict(lambda : 0)\n    for ele in l:\n        d[ele] += 1\n    return d\n\ndef max_in_dict(d):\n    maxi = 0\n    for ele in d:\n        if d[ele] > maxi:\n            maxi = d[ele]\n    return maxi\n\ndef element_count(s):\n    l = []\n    k = s[0]\n    c = 0\n    for ele in s:\n        if ele == k:\n            c += 1\n        else:\n            l.append([k, c])\n            k = ele\n            c = 1\n    l.append([k, c])\n    return l\n\ndef modular_exponentiation(x, y, p):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 != 0:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\n\ndef number_of_primefactor(n):\n    l = []\n    while n % 2 == 0:\n        l.append(2)\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            l.append(i)\n            n = n / i\n    if n > 2:\n        l.append(n)\n    return len(set(l))\n\ndef twosum(a, n, x):\n    rem = []\n    for i in range(x):\n        rem.append(0)\n    for i in range(n):\n        if a[i] < x:\n            rem[a[i] % x] += 1\n    for i in range(1, x // 2):\n        if rem[i] > 0 and rem[x - i] > 0:\n            return True\n    if i >= x // 2:\n        if x % 2 == 0:\n            if rem[x // 2] > 1:\n                return True\n            else:\n                return False\n        elif rem[x // 2] > 0 and rem[x - x // 2] > 0:\n            return True\n        else:\n            return False\n\ndef divSum(num):\n    result = 0\n    i = 2\n    while i <= math.sqrt(num):\n        if num % i == 0:\n            if i == num / i:\n                result = result + i\n            else:\n                result = result + (i + num / i)\n        i = i + 1\n    return result + 1 + num\n\ndef subsequence(str1, str2):\n    m = len(str1)\n    n = len(str2)\n    j = 0\n    i = 0\n    while j < m and i < n:\n        if str1[j] == str2[i]:\n            j = j + 1\n        i = i + 1\n    return j == m\n\ndef primeFactors(n):\n    d = defaultdict(lambda : 0)\n    while n % 2 == 0:\n        d[2] += 1\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            d[int(i)] += 1\n            n = n / i\n    if n > 2:\n        d[int(n)] += 1\n    return d\n\ndef calc(s):\n    ans = 0\n    for ele in s:\n        ans += ord(ele) - 96\n    return ans\n\ndef modInverse(b, m):\n    g = math.gcd(b, m)\n    if g != 1:\n        return -1\n    else:\n        return pow(b, m - 2, m)\n\ndef modDivide(a, b, m):\n    a = a % m\n    inv = modInverse(b, m)\n    return inv * a % m\n\ndef count(n):\n    ans = 0\n    while n:\n        ans += n % 10\n        n //= 10\n    return ans\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l.count(0) > l.count(1):\n        print(0)\n    else:\n        print(1)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    L = [int(j) for j in input().split()]\n    (c1, c0) = (L.count(1), L.count(0))\n    rem_numm = 0\n    if c1 >= c0:\n        rem_numm = 1\n    elif c0 > c1:\n        if abs(c0 - c1) == 1:\n            if n % 2 == 0:\n                rem_numm = 1\n    print(rem_numm)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c1 = arr.count(1)\n    c0 = n - c1\n    if c0 > c1:\n        print(0)\n    elif c1 > c0:\n        print(1)\n    else:\n        print(1)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = a.count(1)\n    q = a.count(0)\n    if p >= q:\n        print('1')\n    elif p < q:\n        print('0')", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    (zr, on) = (0, 0)\n    for i in lst:\n        if i == 0:\n            zr += 1\n        else:\n            on += 1\n    print([0, 1][on >= zr])", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    while len(l) > 1:\n        if 1 in l and 0 in l:\n            l.remove(0)\n        elif l.count(1) > 1:\n            l.remove(1)\n        elif l.count(0) > 1:\n            l.remove(0)\n        if 1 in l and 0 in l:\n            l.remove(1)\n        elif l.count(0) > 1:\n            l.remove(0)\n        elif l.count(1) > 1:\n            l.remove(1)\n    print(l[0])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (one, zero) = (0, 0)\n    for i in range(n):\n        if l[i] == 0:\n            zero = zero + 1\n        else:\n            one = one + 1\n    if one >= zero:\n        print(1)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    n0 = l.count(0)\n    n1 = l.count(1)\n    if n0 > n1:\n        print(0)\n    else:\n        print(1)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l.count(1) >= l.count(0):\n        print(1)\n    else:\n        print(0)", "while True:\n    try:\n        for _ in range(int(input())):\n            inn = int(input())\n            arr = input().split()\n            arr_1 = []\n            arr_0 = []\n            for i in range(inn):\n                arr[i] = int(arr[i])\n                if arr[i] == 1:\n                    arr_1.append(arr[i])\n                else:\n                    arr_0.append(arr[i])\n            if len(arr_1) >= len(arr_0):\n                print(1)\n            else:\n                print(0)\n    except:\n        break", "for i in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    if k.count(1) >= k.count(0):\n        print(1)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ones = arr.count(1)\n    zeroes = arr.count(0)\n    if ones > zeroes:\n        print('1')\n    elif ones == zeroes:\n        print('1')\n    else:\n        print('0')", "import numpy as np\nfor i in range(int(input())):\n    n = int(input())\n    arr = np.array([int(i) for i in input().split()])\n    one = sum(arr)\n    zero = n - one\n    if one == zero or one > zero:\n        print(1)\n    else:\n        print(0)", "import numpy as np\nfor i in range(int(input())):\n    n = int(input())\n    arr = np.array([int(i) for i in input().split()])\n    one = sum(arr)\n    zero = n - one\n    if one == zero or one > zero:\n        print(1)\n    else:\n        print(0)", "def finalOut(l, lst):\n    n1 = sum(lst)\n    n0 = l - n1\n    if n1 >= n0:\n        return 1\n    else:\n        return 0\nt = int(input())\nfor i in range(t):\n    l = int(input())\n    lst = list(map(int, input().split()))\n    print(finalOut(l, lst))", "def finalOut(l, lst):\n    n0 = 0\n    n1 = 0\n    for i in lst:\n        if i == 0:\n            n0 += 1\n        else:\n            n1 += 1\n    a = True\n    while n0 and n1:\n        if a:\n            n0 -= 1\n            a = False\n        else:\n            n1 -= 1\n            a = True\n    if n0 == 0:\n        return 1\n    else:\n        return 0\nt = int(input())\nfor i in range(t):\n    l = int(input())\n    lst = list(map(int, input().split()))\n    print(finalOut(l, lst))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ones = sum(arr)\n    zeros = n - ones\n    if ones == zeros or ones > zeros:\n        print(1)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ones = sum(arr)\n    zeros = n - ones\n    if ones == zeros or ones > zeros:\n        print(1)\n    else:\n        print(0)", "for i in range(int(input())):\n    N = int(input())\n    arr = [int(i) for i in input().split()]\n    t = 1\n    one = arr.count(1)\n    zero = arr.count(0)\n    for i in range(N):\n        if len(arr) != 1:\n            if t == -1:\n                if one != 0:\n                    arr.remove(1)\n                    one -= 1\n                else:\n                    arr.remove(0)\n            elif zero != 0:\n                arr.remove(0)\n                zero -= 1\n            else:\n                arr.remove(1)\n            t = -t\n    print(*arr)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a0 = a.count(0)\n    a1 = a.count(1)\n    if a1 >= a0:\n        print(1)\n    else:\n        print(0)", "def solve(arr):\n    ones = 0\n    zeros = 0\n    for num in arr:\n        if num == 1:\n            ones += 1\n        else:\n            zeros += 1\n    alice = True\n    while ones + zeros > 1:\n        if alice:\n            if ones >= 1 and zeros >= 1 or ones == 0:\n                zeros -= 1\n            else:\n                ones -= 1\n        elif ones >= 1 and zeros >= 1 or zeros == 0:\n            ones -= 1\n        else:\n            zeros -= 1\n        alice = not alice\n    return 0 if zeros == 1 else 1\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(arr))", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    arr = [int(j) for j in input().split()]\n    x = arr.count(0)\n    y = arr.count(1)\n    if y >= x:\n        print(1)\n    else:\n        print(0)", "for i in range(int(input())):\n    N = int(input())\n    l = list(map(int, input().split(' ')))\n    a = l.count(1)\n    b = l.count(0)\n    if a >= b:\n        print(1)\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    n1 = int(input())\n    l1 = list(map(int, input().split()))\n    c1 = l1.count(1)\n    c0 = l1.count(0)\n    if c1 > c0 or c1 == c0:\n        print(1)\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    o = l.count(1)\n    z = l.count(0)\n    if o == z:\n        print(1)\n    elif o > z:\n        print(1)\n    else:\n        print(0)"]