["def soln(n, k, s):\n    beg = 0\n    end = k - 1\n    res = [''] * n\n    for i in range(k):\n        if not i & 1:\n            res[i] = s[beg]\n            beg += 1\n        else:\n            res[i] = s[end]\n            end -= 1\n    res[:k] = res[k - 1::-1]\n    for i in range(k, n):\n        res[i] = s[i]\n    return ''.join(res)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(soln(n, k, s))", "def soln(n, k, s):\n    beg = 0\n    end = k - 1\n    res = [''] * n\n    for i in range(k):\n        if not i & 1:\n            res[i] = s[beg]\n            beg += 1\n        else:\n            res[i] = s[end]\n            end -= 1\n    res[:k] = res[k - 1::-1]\n    for i in range(k, n):\n        res[i] = s[i]\n    return ''.join(res)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(soln(n, k, s))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    str1 = input()\n    str2 = str1[k:]\n    emp = ''\n    i = 0\n    j = k - 1\n    while i < j:\n        emp += str1[i]\n        emp += str1[j]\n        i += 1\n        j -= 1\n    if i == j:\n        emp += str1[j]\n    k1 = emp[::-1]\n    print(k1 + str2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    srt = input()\n    kstr = srt[:k]\n    lst_str = srt[k:]\n    oprn_lst = [' '] * (n + 1)\n    odd = False\n    if k % 2 == 1:\n        odd = True\n    nm = k // 2\n    k -= 1\n    cnt = 0\n    fin_ind = 0\n    for i in range(nm):\n        oprn_lst[n - cnt] = kstr[i]\n        oprn_lst[n - cnt - 1] = kstr[k - i]\n        cnt += 2\n        fin_ind += 1\n    if odd:\n        oprn_lst[0] = kstr[fin_ind]\n    print(''.join(oprn_lst).replace(' ', '') + lst_str)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    x = s[:k]\n    y = s[k:]\n    r = ''\n    for i in range(len(x) // 2):\n        r += x[i]\n        r += x[-(i + 1)]\n    if len(x) % 2:\n        r += x[len(x) // 2]\n    r = r[::-1]\n    print(r + y)", "import sys\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (e, res) = (s[k:], s[:k])\n    arr = ['' for i in range(k)]\n    cnt = 0\n    for i in range(k - 1, -1, -2):\n        arr[i] = s[cnt]\n        cnt += 1\n    for i in range(k):\n        if arr[i] == '':\n            arr[i] = s[cnt]\n            cnt += 1\n    for i in arr:\n        print(i, end='')\n    print(e)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    x = s[:k]\n    y = s[k:]\n    r = ''\n    for i in range(len(x) // 2):\n        r += x[i]\n        r += x[-(i + 1)]\n    if len(x) % 2:\n        r += x[len(x) // 2]\n    r = r[::-1]\n    print(r + y)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l1 = k\n    s2 = s[k:]\n    s1 = s[:k]\n    s3 = ''\n    l1 -= 1\n    l2 = 0\n    while l1 >= l2:\n        s3 += s1[l2]\n        if l1 != l2:\n            s3 += s1[l1]\n        l1 -= 1\n        l2 += 1\n    print(s3[::-1] + s2)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l1 = k\n    s2 = s[k:]\n    s1 = s[:k]\n    s3 = ''\n    l1 -= 1\n    l2 = 0\n    while l1 >= l2:\n        s3 += s1[l2]\n        if l1 != l2:\n            s3 += s1[l1]\n        l1 -= 1\n        l2 += 1\n    print(s3[::-1] + s2)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split(' '))\n    s = input()\n    res = ''\n    (prev_s, last_res) = (s[:r], s[r:])\n    (p1, p2) = (0, r - 1)\n    while p1 <= p2:\n        res += prev_s[p1]\n        if p1 != p2:\n            res += prev_s[p2]\n        p1 += 1\n        p2 -= 1\n    print(res[::-1] + last_res)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    ext = s[k:]\n    solve = s[:k]\n    l = ['' for i in range(k)]\n    c = 0\n    for i in range(k - 1, -1, -2):\n        l[i] = s[c]\n        c += 1\n    for i in range(k):\n        if l[i] == '':\n            l[i] = s[c]\n            c += 1\n    for i in l:\n        print(i, end='')\n    print(ext)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    s = input()\n    lst = s[b:]\n    s = s[:b]\n    r = ''\n    for i in range(len(s) // 2):\n        r += s[i]\n        r += s[-(i + 1)]\n    if len(s) % 2:\n        r += s[len(s) // 2]\n    r = r[::-1]\n    print(r + lst)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    x = s[:k]\n    y = s[k:]\n    r = ''\n    for i in range(len(x) // 2):\n        r += x[i]\n        r += x[-(i + 1)]\n    if len(x) % 2:\n        r += x[len(x) // 2]\n    r = r[::-1]\n    print(r + y)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    s = list(input())\n    ans = ''\n    s1 = r // 2\n    s2 = r // 2 - 1\n    if r % 2 == 1:\n        print(s[s1], end='')\n        s1 += 1\n    for i in range(r // 2):\n        print(s[s1], end='')\n        print(s[s2], end='')\n        s2 -= 1\n        s1 += 1\n    print(ans, end='')\n    print(''.join(s[r:]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    x = s[:k]\n    y = s[k:]\n    r = ''\n    for i in range(len(x) // 2):\n        r += x[i]\n        r += x[-(i + 1)]\n    if len(x) % 2:\n        r += x[len(x) // 2]\n    r = r[::-1]\n    print(r + y)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    x = s[:k]\n    y = s[k:]\n    r = ''\n    for i in range(len(x) // 2):\n        r += x[i]\n        r += x[-(i + 1)]\n    if len(x) % 2:\n        r += x[len(x) // 2]\n    r = r[::-1]\n    print(r + y)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    i = 0\n    j = k - 1\n    res = ''\n    while i < j:\n        res += s[i]\n        res += s[j]\n        i += 1\n        j -= 1\n    if i == j:\n        res = res + s[i]\n    m = res[::-1]\n    o = s[k:]\n    print(m + o)", "from bisect import bisect_left\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\n\ndef rev_st(st, k):\n    ans = ''\n    i = 0\n    j = k - 1\n    f = True\n    while i <= j:\n        if f:\n            ans = ans + st[i]\n            i += 1\n        else:\n            ans = ans + st[j]\n            j -= 1\n        f = not f\n    ans = ans[::-1]\n    for e in range(k, len(st)):\n        ans = ans + st[e]\n    print(ans)\nfor _ in range(ii()):\n    (n, k) = il()\n    st = ip()\n    rev_st(st, k)", "def integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\nimport math\nimport sys\nfrom collections import Counter\n\ndef main():\n    (i, j) = (0, k - 1)\n    ans = ''\n    flag = True\n    while i <= j:\n        if flag:\n            ans = s[i] + ans\n            flag = False\n            i += 1\n        else:\n            ans = s[j] + ans\n            flag = True\n            j -= 1\n    print(ans + s[k:])\nt = int(input())\nfor _ in range(t):\n    (n, k) = integer_list()\n    s = input()\n    main()", "def integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\nimport math\nimport sys\nfrom collections import Counter\n\ndef main():\n    (i, j) = (0, k - 1)\n    ans = ''\n    flag = True\n    while i <= j:\n        if flag:\n            ans = s[i] + ans\n            flag = False\n            i += 1\n        else:\n            ans = s[j] + ans\n            flag = True\n            j -= 1\n    print(ans + s[k:])\nt = int(input())\nfor _ in range(t):\n    (n, k) = integer_list()\n    s = input()\n    main()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    str = input()\n    ans = ''\n    s = 0\n    e = k - 1\n    while s < e:\n        ans += str[s]\n        ans += str[e]\n        s += 1\n        e -= 1\n    if s == e:\n        ans += str[s]\n    print(ans[::-1] + str[k:])", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    st = input()\n    par = +1\n    if d % 2 == 1:\n        par = -1\n    s = ''\n    j = d // 2\n    for i in range(d):\n        j += par * i\n        s += st[j]\n        par = -par\n    try:\n        print(s + st[d:])\n    except:\n        print(s)", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    st = input()\n    par = +1\n    if d % 2 == 1:\n        par = -1\n    s = ''\n    j = d // 2\n    for i in range(d):\n        j += par * i\n        s += st[j]\n        par = -par\n    try:\n        print(s + st[d:])\n    except:\n        print(s)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    i = 0\n    j = k - 1\n    res = ''\n    while i < j:\n        res += s[i]\n        res += s[j]\n        i = i + 1\n        j = j - 1\n    if i == j:\n        res = res + s[i]\n    m = res[::-1]\n    o = s[k:n]\n    print(m + o)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    st = input()\n    par = +1\n    if m % 2 == 1:\n        par = -1\n    s = ''\n    j = m // 2\n    for i in range(m):\n        j += par * i\n        s += st[j]\n        par = -par\n    try:\n        print(s + st[m:])\n    except:\n        print(s)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    st = input()\n    par = +1\n    if m % 2 == 1:\n        par = -1\n    s = ''\n    j = m // 2\n    for i in range(m):\n        j += par * i\n        s += st[j]\n        par = -par\n    try:\n        print(s + st[m:])\n    except:\n        print(s)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    s = input()\n    mainarr = list(s)\n    arr = []\n    arr[:] = mainarr[:n]\n    newarr = []\n    (l, r) = (0, n - 1)\n    for i in range(0, n):\n        if i % 2 == 0:\n            newarr.append(arr[l])\n            l += 1\n        else:\n            newarr.append(arr[r])\n            r -= 1\n    newarr = newarr[::-1]\n    ans = newarr + mainarr[n:]\n    print(''.join(ans))", "t = int(input())\nwhile t:\n    p = input().split()\n    s = input()\n    d = int(p[1])\n    lenn = int(p[1])\n    x = ''\n    x += s[d // 2]\n    if lenn % 2 == 1:\n        i = 1\n        while i <= d // 2:\n            x += s[d // 2 + i]\n            x += s[d // 2 - i]\n            i += 1\n        print(x + s[d:])\n    else:\n        i = 1\n        while i < d // 2:\n            x += s[d // 2 - i]\n            x += s[d // 2 + i]\n            i += 1\n        print(x + s[0] + s[d:])\n    t -= 1", "t = int(input())\nwhile t:\n    p = input().split()\n    s = input()\n    d = int(p[1])\n    lenn = int(p[1])\n    x = ''\n    x += s[d // 2]\n    if lenn % 2 == 1:\n        i = 1\n        while i <= d // 2:\n            x += s[d // 2 + i]\n            x += s[d // 2 - i]\n            i += 1\n        print(x + s[d:])\n    else:\n        i = 1\n        while i < d // 2:\n            x += s[d // 2 - i]\n            x += s[d // 2 + i]\n            i += 1\n        print(x + s[0] + s[d:])\n    t -= 1", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    s = list(input())\n    ans = ''\n    s1 = r // 2\n    s2 = r // 2 - 1\n    if r % 2 == 1:\n        print(s[s1], end='')\n        s1 += 1\n    for i in range(r // 2):\n        print(s[s1], end='')\n        print(s[s2], end='')\n        s2 -= 1\n        s1 += 1\n    print(ans, end='')\n    print(''.join(s[r:]))", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    s = list(input())\n    ans = ''\n    s1 = r // 2\n    s2 = r // 2 - 1\n    if r % 2 == 1:\n        print(s[s1], end='')\n        s1 += 1\n    for i in range(r // 2):\n        print(s[s1], end='')\n        print(s[s2], end='')\n        s2 -= 1\n        s1 += 1\n    print(ans, end='')\n    print(''.join(s[r:]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    x = s[:k]\n    y = s[k:]\n    r = ''\n    for i in range(len(x) // 2):\n        r += x[i]\n        r += x[-(i + 1)]\n    if len(x) % 2:\n        r += x[len(x) // 2]\n    r = r[::-1]\n    print(r + y)", "def inpNum():\n    return int(input())\n\ndef inpNums():\n    return tuple(list(map(int, input().split())))\n\ndef inpList():\n    return list(map(int, input().split()))\n\ndef solve(t: int):\n    (N, K) = inpNums()\n    s = input()\n    ans = ''\n    dir = 1 if K % 2 == 0 else -1\n    step = 0\n    i = int(K / 2)\n    while K:\n        idx = i + step * dir\n        dir *= -1\n        step += 1\n        K -= 1\n        i = idx\n        ans = ans + s[idx]\n    for i in range(len(ans), N):\n        ans = ans + s[i]\n    print(ans)\nfor t in range(int(input())):\n    solve(t)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    x = s[k:]\n    r = ''\n    i = 0\n    j = k - 1\n    while i < j:\n        r = r + s[i]\n        r = r + s[j]\n        i = i + 1\n        j = j - 1\n    if i == j:\n        r = r + s[i]\n    a = r[::-1] + x\n    print(a)", "t = int(input())\nfor _ in range(t):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    s = input()\n    x = s[k:]\n    r = ''\n    i = 0\n    j = k - 1\n    while i < j:\n        r = r + s[i]\n        r = r + s[j]\n        i = i + 1\n        j = j - 1\n    if i == j:\n        r = r + s[i]\n    a = r[::-1] + x\n    print(a)", "def solve(s, k):\n    res = ['-'] * len(s)\n    res[-len(s) + k:] = s[-len(s) + k:]\n    is_left = True\n    i = -len(s) + k - 1\n    (left, right) = (0, k - 1)\n    while left <= right:\n        if is_left:\n            res[i] = s[left]\n            left += 1\n        else:\n            res[i] = s[right]\n            right -= 1\n        i -= 1\n        is_left = not is_left\n    return ''.join(res)\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        s = input()\n        result = solve(s, k)\n        print(result)\nmain()", "def solve(s, k):\n    res = ['-'] * len(s)\n    res[-len(s) + k:] = s[-len(s) + k:]\n    is_left = True\n    i = -len(s) + k - 1\n    (left, right) = (0, k - 1)\n    while left <= right:\n        if is_left:\n            res[i] = s[left]\n            left += 1\n        else:\n            res[i] = s[right]\n            right -= 1\n        i -= 1\n        is_left = not is_left\n    return ''.join(res)\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        s = input()\n        result = solve(s, k)\n        print(result)\nmain()", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    s = input()\n    a = s[0:k]\n    b = s[k:]\n    c = []\n    var1 = 0\n    var2 = k - 1\n    for i in range(k):\n        if i % 2 == 0:\n            c.append(a[var1])\n            var1 = var1 + 1\n        else:\n            c.append(a[var2])\n            var2 = var2 - 1\n    d = c[::-1]\n    e = ''.join(d)\n    res = e + b\n    print(res)\n    t = t - 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    inp = input()\n    pref = ''\n    i = 0\n    l = 0\n    while l <= k:\n        if i != k - i - 1:\n            pref += f'{inp[i]}{inp[k - i - 1]}'\n            l += 2\n            i += 1\n        else:\n            pref += inp[i]\n            break\n        if l == k:\n            break\n    print(pref[::-1] + inp[k:])", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    ext = s[k:]\n    solve = s[:k]\n    l = ['' for i in range(k)]\n    c = 0\n    for i in range(k - 1, -1, -2):\n        l[i] = s[c]\n        c += 1\n    for i in range(k):\n        if l[i] == '':\n            l[i] = s[c]\n            c += 1\n    for i in l:\n        print(i, end='')\n    print(ext)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    S = input()\n    p1 = S[:k]\n    p2 = S[k:n]\n    p11 = p1[:k // 2]\n    p11 = p11[::-1]\n    p12 = p1[k // 2:]\n    ans = ''\n    if k % 2 == 0:\n        for i in range(k // 2):\n            ans = ans + p12[i] + p11[i]\n    else:\n        ans = ans + p12[0]\n        for i in range(1, k // 2 + 1):\n            ans = ans + p12[i] + p11[i - 1]\n    print(ans + p2)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = list(s)\n    ans[k - 1::-2] = s[0:(k + 1) // 2]\n    ans[k % 2:k:2] = s[(k + 1) // 2:k]\n    print(''.join(ans))", "T = int(input())\nfor i in range(T):\n    (N, M) = map(int, input().split())\n    l = input()\n    left = []\n    right = []\n    r = [None] * M\n    if M % 2 == 0:\n        right = l[M // 2:M]\n        left = l[M // 2 - 1::-1]\n        r[::2] = right\n        r[1::2] = left\n        r[M:] = l[M:]\n    else:\n        right = l[M // 2 + 1:M]\n        left = l[M // 2::-1]\n        r[1::2] = right\n        r[::2] = left\n        r[M:] = l[M:]\n    print(*r, sep='')", "try:\n    t = int(input())\n    while t:\n        (n, k) = map(int, input().split())\n        s = input()\n        org = ''\n        (i, j) = (0, k - 1)\n        while i < j:\n            org += s[i]\n            org += s[j]\n            i += 1\n            j -= 1\n        if i == j:\n            org += s[i]\n        org = org[::-1] + s[k:n]\n        print(org)\n        t -= 1\nexcept EOFError as e:\n    pass", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = ''\n    left = 0\n    right = k - 1\n    while left < right:\n        ans += s[left]\n        ans += s[right]\n        left += 1\n        right -= 1\n    if left == right:\n        ans += s[left]\n    print(ans[::-1] + s[k:])", "test_cases = int(input())\nfor _ in range(test_cases):\n    (N, K) = map(int, input().split())\n    S = input().rstrip('\\n')\n    S1 = list(S)\n    Current_Character = 0\n    for i in range(K, 0, -2):\n        S1[i - 1] = S[Current_Character]\n        Current_Character += 1\n    Next = 1 + K % 2\n    for i in range(Next, K, 2):\n        S1[i - 1] = S[Current_Character]\n        Current_Character += 1\n    print(''.join(S1))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = [0] * n\n    s = input()\n    c = 0\n    if k % 2 == 0:\n        for j in range(k - 1, 0, -2):\n            l[j] = s[c]\n            c += 1\n        for x in range(n):\n            if l[x] == 0:\n                l[x] = s[c]\n                c += 1\n        ans = ''\n        for y in l:\n            ans += y\n        print(ans)\n    else:\n        for z in range(k - 1, -1, -2):\n            l[z] = s[c]\n            c += 1\n        for w in range(n):\n            if l[w] == 0:\n                l[w] = s[c]\n                c += 1\n        ans = ''\n        for q in l:\n            ans += q\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(0)\n    s = input()\n    j = 0\n    if k % 2 == 0:\n        for i in range(k - 1, 0, -2):\n            l[i] = s[j]\n            j += 1\n        for i in range(n):\n            if l[i] == 0:\n                l[i] = s[j]\n                j += 1\n        ans = ''\n        for i in l:\n            ans += i\n        print(ans)\n    else:\n        for i in range(k - 1, -1, -2):\n            l[i] = s[j]\n            j += 1\n        for i in range(n):\n            if l[i] == 0:\n                l[i] = s[j]\n                j += 1\n        ans = ''\n        for i in l:\n            ans += i\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s1 = input()\n    s = list(s1)\n    x = 0\n    for i in range(k - 1, -1, -2):\n        s[i] = s1[x]\n        x += 1\n    for j in range((i + 1) % 2, k - 1, 2):\n        s[j] = s1[x]\n        x += 1\n    print(''.join(s))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s1 = input()\n    s = list(s1)\n    x = 0\n    for i in range(k - 1, -1, -2):\n        s[i] = s1[x]\n        x += 1\n    if k % 2 == 0:\n        for i in range(0, k - 1, 2):\n            s[i] = s1[x]\n            x += 1\n    else:\n        for i in range(1, k - 1, 2):\n            s[i] = s1[x]\n            x += 1\n    print(''.join(s))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    indlist = []\n    if k % 2 == 0:\n        count = k\n        x = 0\n        for i in range(k):\n            indlist.append(count)\n            if count - 2 == 0:\n                x = 1\n                count = -1\n            if x == 0:\n                count -= 2\n            else:\n                count += 2\n    else:\n        count = k\n        x = 0\n        for i in range(k):\n            indlist.append(count)\n            if count == 1:\n                x = 1\n                count = 0\n            if x == 0:\n                count -= 2\n            else:\n                count += 2\n    sliced = s[0:k]\n    for i in range(len(indlist)):\n        s[indlist[i] - 1] = sliced[i]\n    for i in s:\n        print(i, end='')\n    print()", "ans = ''\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    sub1 = ''\n    sub2 = s[k:]\n    (l, r) = (0, k - 1)\n    while l <= r:\n        sub1 += s[l]\n        if l != r:\n            sub1 += s[r]\n        r -= 1\n        l += 1\n    ans += sub1[::-1] + sub2 + '\\n'\nprint(ans)", "from operator import sub\nt = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = list(input())\n    ss = []\n    (l, r) = (0, k - 1)\n    for i in range(k):\n        if i % 2 == 0:\n            ss.append(s[l])\n            l += 1\n        else:\n            ss.append(s[r])\n            r -= 1\n    s = list(reversed(ss)) + s[k:]\n    print(''.join(s))", "ans = ''\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    sub1 = ''\n    sub2 = s[k:]\n    (l, r) = (0, k - 1)\n    while l <= r:\n        sub1 += s[l]\n        if l != r:\n            sub1 += s[r]\n        r -= 1\n        l += 1\n    ans += sub1[::-1] + sub2 + '\\n'\nprint(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    s2 = s[k:]\n    low = 0\n    hi = k - 1\n    ans = ''\n    while low < hi:\n        ans += s[low] + s[hi]\n        low += 1\n        hi -= 1\n    if low == hi:\n        ans += s[low]\n    ans = ans[::-1]\n    ans = ans + s2\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    med = math.ceil((k - 1) / 2)\n    newStr = ''\n    newStr += s[med]\n    if k % 2 == 0:\n        for i in range(1, med + 1):\n            if med - i >= 0:\n                newStr += s[med - i]\n            if med + i <= k - 1:\n                newStr += s[med + i]\n    else:\n        for i in range(1, med + 1):\n            if med + i <= k - 1:\n                newStr += s[med + i]\n            if med - i >= 0:\n                newStr += s[med - i]\n    newStr += s[k:]\n    print(newStr)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    mid = k // 2\n    if k % 2 == 1:\n        (ans, i, j) = (s[mid], mid - 1, mid + 1)\n        while i >= 0:\n            ans += s[j]\n            ans += s[i]\n            i -= 1\n            j += 1\n    else:\n        (ans, j, i) = ('', mid, mid - 1)\n        while i >= 0:\n            ans += s[j]\n            ans += s[i]\n            i -= 1\n            j += 1\n    for i in range(k, n):\n        ans += s[i]\n    print(ans)", "from collections import Counter\nfrom math import ceil, floor, log, gcd\nimport bisect as bs\nimport sys\ninput = sys.stdin.readline\ninp_lis = lambda : list(map(int, input().split()))\ninp_multi = lambda : map(int, input().split())\ninp_int = lambda : int(input().strip())\nfor _ in range(int(input().strip())):\n    (n, k) = inp_multi()\n    s = input().strip()\n    s2 = s[k:]\n    m = k // 2\n    if k % 2 != 0:\n        m += 1\n    l = [0] * k\n    t = k\n    if k % 2 == 0:\n        t2 = 1\n    else:\n        t2 = 2\n    for i in range(k):\n        if i < m:\n            l[t - i * 2 - 1] = s[i]\n        else:\n            l[t2 - 1] = s[i]\n            t2 += 2\n    ans = ''.join(l)\n    print(ans + s2)", "def check(n, k, s):\n    sharma = s[0:k]\n    data = s[k:]\n    ans = ''\n    for i in range(0, k // 2):\n        ans = sharma[-(i + 1)] + sharma[i] + ans\n    if k % 2 != 0:\n        ans = sharma[k // 2:k // 2 + 1] + ans\n    return ans + data\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(check(n, k, s))", "T = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    S = input()\n    res = ''\n    i = 0\n    j = K - 1\n    while i < j:\n        res = res + S[i]\n        res = res + S[j]\n        i = i + 1\n        j = j - 1\n    if i == j:\n        res = res + S[i]\n    res = res[::-1]\n    tmp = res + S[K:N]\n    print(tmp)", "T = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    S = input()\n    res = ''\n    i = 0\n    j = K - 1\n    while i < j:\n        res = res + S[i]\n        res = res + S[j]\n        i = i + 1\n        j = j - 1\n    if i == j:\n        res = res + S[i]\n    res = res[::-1]\n    tmp = res + S[K:N]\n    print(tmp)", "import sys\n\ndef reverse(answer, i):\n    for j in range(i // 2):\n        (answer[j], answer[i - j - 1]) = (answer[i - j - 1], answer[j])\n\ndef findOriginalString(N, K, string):\n    answer = []\n    answer.append(string[K // 2])\n    if K % 2:\n        x = 2\n        flag = -1\n        j = K // 2 + 1\n        while j >= 0 and j < K:\n            answer.append(string[j])\n            if flag == -1:\n                j -= x\n                flag = 1\n            else:\n                j += x\n                flag = -1\n            x += 1\n    else:\n        x = 2\n        flag = -1\n        j = K // 2 - 1\n        while j >= 0 and j < K:\n            answer.append(string[j])\n            if flag == -1:\n                j += x\n                flag = 1\n            else:\n                j -= x\n                flag = -1\n            x += 1\n    for i in range(K, N):\n        answer.append(string[i])\n    return ''.join(answer)\n\ndef main():\n    test_case = int(sys.stdin.readline())\n    for tc in range(test_case):\n        (N, K) = map(int, sys.stdin.readline().split())\n        string = sys.stdin.readline().strip('\\n')\n        print(findOriginalString(N, K, string))\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = list(s)\n    ans[k - 1::-2] = s[0:(k + 1) // 2]\n    ans[k % 2:k:2] = s[(k + 1) // 2:k]\n    print(''.join(ans))", "n = int(input())\nfor i in range(n):\n    (length, moves) = [int(x) for x in str(input()).split(' ')]\n    word = str(input())\n    a = ''\n    b = word[moves:]\n    c = word[:moves]\n    is_odd = moves % 2 != 0\n    for j in range(moves // 2):\n        a = c[j] + a\n        a = c[moves - 1 - j] + a\n    if is_odd:\n        a = c[moves // 2] + a\n    print(a + b)", "from math import ceil\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = input()\n    other = x[b:]\n    before = x[:b]\n    ans = ''\n    i = 0\n    j = b - 1\n    while i < j:\n        ans += before[i] + before[j]\n        i += 1\n        j -= 1\n    if i == j:\n        ans += before[i]\n    print(ans[::-1] + other)", "import sys\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = str(input())\n    a = ''\n    p = int(k / 2)\n    for i in range(k):\n        if i % 2 == 0:\n            if k % 2 == 0:\n                p += i\n            else:\n                p -= i\n        elif k % 2 == 0:\n            p -= i\n        else:\n            p += i\n        a += s[p]\n    print(a + s[k:])", "t = int(input())\nfor _ in range(t):\n    n = input().split()\n    s = input()\n    d = int(n[1])\n    le = int(n[1])\n    x = ''\n    x += s[d // 2]\n    if le % 2 == 1:\n        j = 1\n        while j <= d // 2:\n            x += s[d // 2 + j]\n            x += s[d // 2 - j]\n            j += 1\n        print(x + s[d:])\n    else:\n        j = 1\n        while j < d // 2:\n            x += s[d // 2 - j]\n            x += s[d // 2 + j]\n            j += 1\n        print(x + s[0] + s[d:])", "t = int(input())\nfor _ in range(t):\n    n = input().split()\n    s = input()\n    d = int(n[1])\n    le = int(n[1])\n    x = ''\n    x += s[d // 2]\n    if le % 2 == 1:\n        j = 1\n        while j <= d // 2:\n            x += s[d // 2 + j]\n            x += s[d // 2 - j]\n            j += 1\n        print(x + s[d:])\n    else:\n        j = 1\n        while j < d // 2:\n            x += s[d // 2 - j]\n            x += s[d // 2 + j]\n            j += 1\n        print(x + s[0] + s[d:])", "t = int(input())\nfor _ in range(t):\n    n = input().split()\n    s = input()\n    d = int(n[1])\n    le = int(n[1])\n    x = ''\n    x += s[d // 2]\n    if le % 2 == 1:\n        j = 1\n        while j <= d // 2:\n            x += s[d // 2 + j]\n            x += s[d // 2 - j]\n            j += 1\n        print(x + s[d:])\n    else:\n        j = 1\n        while j < d // 2:\n            x += s[d // 2 - j]\n            x += s[d // 2 + j]\n            j += 1\n        print(x + s[0] + s[d:])", "T = int(input())\nfor i in range(T):\n    (N, M) = map(int, input().split())\n    l = input()\n    left = []\n    right = []\n    r = [None] * M\n    if M % 2 == 0:\n        right = l[M // 2:M]\n        left = l[M // 2 - 1::-1]\n        r[::2] = right\n        r[1::2] = left\n        r[M:] = l[M:]\n    else:\n        right = l[M // 2 + 1:M]\n        left = l[M // 2::-1]\n        r[1::2] = right\n        r[::2] = left\n        r[M:] = l[M:]\n    print(*r, sep='')", "for _ in range(int(input())):\n    z = [int(i) for i in input().split()]\n    b = z[1]\n    st = input()\n    st1 = st[b:]\n    s = st[:b]\n    out = ''\n    for i in range(len(s) // 2):\n        out += s[i]\n        out += s[-(i + 1)]\n    if len(s) % 2:\n        out += s[len(s) // 2]\n    out = out[::-1]\n    print(out + st1)", "t = int(input())\nwhile t:\n    p = input().split()\n    s = input()\n    d = int(p[1])\n    lenn = int(p[1])\n    x = ''\n    x += s[d // 2]\n    if lenn % 2 == 1:\n        i = 1\n        while i <= d // 2:\n            x += s[d // 2 + i]\n            x += s[d // 2 - i]\n            i += 1\n        print(x + s[d:])\n    else:\n        i = 1\n        while i < d // 2:\n            x += s[d // 2 - i]\n            x += s[d // 2 + i]\n            i += 1\n        print(x + s[0] + s[d:])\n    t = t - 1", "t = int(input())\nwhile t:\n    p = input().split()\n    s = input()\n    d = int(p[1])\n    lenn = int(p[1])\n    x = ''\n    x += s[d // 2]\n    if lenn % 2 == 1:\n        i = 1\n        while i <= d // 2:\n            x += s[d // 2 + i]\n            x += s[d // 2 - i]\n            i += 1\n        print(x + s[d:])\n    else:\n        i = 1\n        while i < d // 2:\n            x += s[d // 2 - i]\n            x += s[d // 2 + i]\n            i += 1\n        print(x + s[0] + s[d:])\n    t = t - 1", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = ''\n    i = 0\n    j = k - 1\n    while i < j:\n        ans += s[i]\n        ans += s[j]\n        i += 1\n        j -= 1\n    if i == j:\n        ans += s[i]\n    ans = ans[::-1]\n    ans += s[k:]\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = k\n    l = k\n    x = ''\n    x += s[d // 2]\n    if l % 2 == 1:\n        i = 1\n        while i <= d // 2:\n            x += s[d // 2 + i]\n            x += s[d // 2 - i]\n            i += 1\n        print(x + s[d:])\n    else:\n        i = 1\n        while i < d // 2:\n            x += s[d // 2 - i]\n            x += s[d // 2 + i]\n            i += 1\n        print(x + s[0] + s[d:])", "ans = []\ntestcase = int(input())\nfor i in range(0, testcase):\n    string = ''\n    li = []\n    flag = 0\n    (lenght, key) = map(int, input().split())\n    ss = list(input())\n    for i in range(lenght):\n        li.append([ss[i], i + 1])\n    for i in range(lenght):\n        if key == 0:\n            key = 1\n            flag = 1\n        elif key == -1:\n            key = 2\n            flag = 1\n        li[i][1] = key\n        if flag == 0:\n            key -= 2\n        elif flag == 1:\n            key += 2\n    li.sort(key=lambda x: x[1])\n    for ele in range(lenght):\n        string = string + li[ele][0]\n    ans.append(string)\nfor sol in ans:\n    print(sol)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    t = ''\n    i = 0\n    p = k - 1\n    while i < p:\n        t = s[i] + t\n        t = s[p] + t\n        i += 1\n        p -= 1\n    if k % 2 != 0:\n        t = s[i] + t\n    print(t + s[k:])", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = input()\n    x = ''\n    c = k // 2\n    i = 1\n    if k % 2 == 0:\n        while i <= k // 2:\n            x += a[k // 2 + i - 1]\n            x += a[k // 2 - i]\n            i += 1\n        print(x + a[k:])\n    else:\n        while i <= k // 2:\n            x += a[k // 2 + i]\n            x += a[k // 2 - i]\n            i += 1\n        print(a[k // 2] + x + a[k:])", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    s1 = s[:k]\n    s4 = s[k:]\n    n_s = ''\n    for i in range(len(s1) // 2):\n        n_s += s1[i]\n        n_s += s1[-(i + 1)]\n    if len(s1) % 2:\n        n_s += s1[len(s1) // 2]\n    n_s = n_s[::-1]\n    print(n_s + s4)", "import sys\nimport math\nimport random\n\ndef get_line():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef in1():\n    return int(input())\nfor _ in range(in1()):\n    (n, k) = get_line()\n    s = str(input())\n    s1 = list(s)\n    t = s[k:]\n    t1 = ''\n    if k % 2 == 0:\n        for i in range(k // 2):\n            t1 += s1[i]\n            t1 += s1[k - i - 1]\n        t5 = ''.join(t1[::-1])\n    else:\n        for i in range(k // 2 + 1):\n            t1 += s1[i]\n            t1 += s1[k - i - 1]\n        t5 = ''.join(t1[::-1])\n        t5 = t5[1:]\n    t3 = t5 + t\n    print(t3)", "x = int(input())\nfor i in range(x):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    a = input()\n    if k & 1 == 0:\n        z = k // 2\n        b = 1\n        while z < k:\n            print(a[z] + a[z - b], end='')\n            b += 2\n            z += 1\n        for ll in range(k, n):\n            print(a[ll], end='')\n    else:\n        z = k // 2\n        b = 2\n        print(a[z], end='')\n        z += 1\n        while z < k:\n            print(a[z] + a[z - b], end='')\n            b += 2\n            z += 1\n        for ll in range(k, n):\n            print(a[ll], end='')\n    print()", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    s = input()\n    s1 = ''\n    if k % 2 != 0:\n        s1 += s[k // 2]\n        i = k // 2 + 1\n        j = k // 2 - 1\n    else:\n        i = k // 2\n        j = k // 2 - 1\n    while j >= 0 and i < k:\n        s1 += s[i]\n        s1 += s[j]\n        i += 1\n        j -= 1\n    s1 += s[k:]\n    print(s1)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    s = input()\n    s1 = ''\n    if k % 2 != 0:\n        s1 += s[k // 2]\n        i = k // 2 + 1\n        j = k // 2 - 1\n    else:\n        i = k // 2\n        j = k // 2 - 1\n    while j >= 0 and i < k:\n        s1 += s[i]\n        s1 += s[j]\n        i += 1\n        j -= 1\n    s1 += s[k:]\n    print(s1)\n    t -= 1", "for t in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    s = input()\n    original_right = s[k:]\n    tl = s[:k]\n    sl = ''\n    l = 0\n    r = k - 1\n    steps = k\n    while l != r > 0:\n        sl += tl[l]\n        if l < r:\n            l += 1\n        else:\n            l -= 1\n        (l, r) = (r, l)\n    sl += tl[l]\n    print(sl[::-1] + original_right)", "import string\n\ndef reverse(string, i, j, n):\n    if i > n / 2:\n        return string\n    else:\n        temp = string[i]\n        string[i] = string[j]\n        string[j] = temp\n        return reverse(string, i + 1, j - 1, n)\nt = int(input())\nfor b in range(t):\n    (n, k) = tuple(map(int, input().split(' ')))\n    string = input()\n    i = 0\n    j = k - 1\n    ans = ''\n    while i < j:\n        ans += string[i]\n        ans += string[j]\n        i += 1\n        j -= 1\n    if i == j:\n        ans += string[i]\n    ans = ans[::-1]\n    for idx in range(k, n):\n        ans += string[idx]\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    p1 = k // 2\n    p2 = p1 + 1\n    flag = True\n    if k % 2 == 0:\n        flag = False\n        p1 -= 1\n        p2 -= 1\n    tmp = k\n    while tmp > 0:\n        if flag:\n            print(s[p1], end='')\n            p1 -= 1\n            flag = False\n        else:\n            print(s[p2], end='')\n            p2 += 1\n            flag = True\n        tmp -= 1\n    for i in range(k, n):\n        print(s[i], end='')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    word = input()\n    p1 = k // 2\n    p2 = p1 + 1\n    flag = True\n    temp = k\n    if k % 2 == 0:\n        flag = False\n        p2 -= 1\n        p1 -= 1\n    while temp:\n        if flag:\n            print(word[p1], end='')\n            p1 -= 1\n            flag = False\n        else:\n            print(word[p2], end='')\n            p2 += 1\n            flag = True\n        temp -= 1\n    for i in range(k, n):\n        print(word[i], end='')\n    print()", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    p1 = k // 2\n    p2 = p1 + 1\n    flag = True\n    tmp = k\n    if k % 2 == 0:\n        flag = False\n        p1 -= 1\n        p2 -= 1\n    while tmp > 0:\n        if flag:\n            print(s[p1], end='')\n            p1 -= 1\n            flag = False\n        else:\n            print(s[p2], end='')\n            p2 += 1\n            flag = True\n        tmp -= 1\n    for i in range(k, n):\n        print(s[i], end='')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = k\n    l = k\n    x = ''\n    x += s[d // 2]\n    if l % 2 == 1:\n        i = 1\n        while i <= d // 2:\n            x += s[d // 2 + i]\n            x += s[d // 2 - i]\n            i += 1\n        print(x + s[d:])\n    else:\n        i = 1\n        while i < d // 2:\n            x += s[d // 2 - i]\n            x += s[d // 2 + i]\n            i += 1\n        print(x + s[0] + s[d:])", "import array as array1\nfor i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    os = list(input())\n    (tl, j) = ([], 0)\n    myl = array1.array('u', ['s' for x in range(n)])\n    for i in range(k, 0, -2):\n        myl[int(i - 1)] = os[j]\n        j += 1\n    if k % 2 == 0:\n        start = 1\n    else:\n        start = 2\n    for i in range(start, k, 2):\n        myl[i - 1] = os[j]\n        j += 1\n    for i in range(k + 1, n + 1):\n        myl[i - 1] = os[j]\n        j += 1\n    print(*myl, sep='')", "import numpy as np\nfor i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    os = list(input())\n    (tl, j) = ([], 0)\n    myl = np.array(['s' for x in range(n)])\n    for i in range(k, 0, -2):\n        myl[int(i - 1)] = os[j]\n        j += 1\n    if k % 2 == 0:\n        start = 1\n    else:\n        start = 2\n    for i in range(start, k, 2):\n        myl[i - 1] = os[j]\n        j += 1\n    for i in range(k + 1, n + 1):\n        myl[i - 1] = os[j]\n        j += 1\n    print(*myl, sep='')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = ''\n    even = 0\n    odd = 0\n    for j in range(k):\n        if j % 2 == 0:\n            ans += s[j - even]\n            even += 1\n        else:\n            ans += s[k - j + odd]\n            odd += 1\n    ans_1 = ans[::-1]\n    ans_1 += s[k:]\n    print(ans_1)", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    os = list(input())\n    (tl, j) = ([], 0)\n    myl = [-1 for x in range(n)]\n    for i in range(k, 0, -2):\n        myl[i - 1] = os[j]\n        j += 1\n    if k % 2 == 0:\n        start = 1\n    else:\n        start = 2\n    for i in range(start, k, 2):\n        myl[i - 1] = os[j]\n        j += 1\n    for i in range(k + 1, n + 1):\n        myl[i - 1] = os[j]\n        j += 1\n    print(*myl, sep='')", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    os = list(input())\n    tl = []\n    for i in range(k, 0, -2):\n        tl.append(i)\n    if k % 2 == 0:\n        start = 1\n    else:\n        start = 2\n    for i in range(start, k, 2):\n        tl.append(i)\n    for i in range(k + 1, n + 1):\n        tl.append(i)\n    myl = [-1 for x in range(n)]\n    for (i, j) in zip(tl, range(0, n)):\n        myl[i - 1] = os[j]\n    print(*myl, sep='')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(str(input()))[:n]\n    narr = []\n    i = 0\n    j = k - 1\n    while i < j:\n        narr.append(arr[i])\n        narr.append(arr[j])\n        i += 1\n        j -= 1\n    if i == j:\n        narr.append(arr[i])\n    farr = narr[::-1] + arr[k:n]\n    print(''.join(farr))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    x = s[:k]\n    y = s[k:]\n    r = ''\n    for i in range(len(x) // 2):\n        r += x[i]\n        r += x[-(i + 1)]\n    if len(x) % 2:\n        r += x[len(x) // 2]\n    r = r[::-1]\n    print(r + y)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = input()\n    le = []\n    ri = []\n    r = [None] * m\n    if m % 2 == 0:\n        ri = l[m // 2:m]\n        le = l[m // 2 - 1::-1]\n        r[::2] = ri\n        r[1::2] = le\n        r[m:] = l[m:]\n    else:\n        ri = l[m // 2 + 1:m]\n        le = l[m // 2::-1]\n        r[1::2] = ri\n        r[::2] = le\n        r[m:] = l[m:]\n    print(*r, sep='')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = [int(k) for k in input().split(' ')]\n    s = str(input())\n    rev = s[:k]\n    orig = s[k:]\n    ans = []\n    while len(rev) > 0:\n        if len(rev) > 0:\n            ans.append(rev[0])\n            rev = rev[1:]\n        if len(rev) > 0:\n            ans.append(rev[-1])\n            rev = rev[:-1]\n    ans.reverse()\n    for c in orig:\n        ans.append(c)\n    print(''.join(ans))", "def rev(x):\n    return x[::-1]\n\ndef func():\n    (n, k) = map(int, input().split())\n    s = input()\n    l = 0\n    r = k - 1\n    ans = ''\n    while l <= r:\n        ans += s[l]\n        l += 1\n        if l <= r:\n            ans += s[r]\n            r -= 1\n    ans = rev(ans)\n    for i in range(k, n):\n        ans += s[i]\n    print(ans)\nt = int(input())\nfor i in range(t):\n    func()"]