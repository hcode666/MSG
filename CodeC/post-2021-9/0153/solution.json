["BitsSetTable256 = [0] * 256\n\ndef initialize():\n    BitsSetTable256[0] = 0\n    for i in range(256):\n        BitsSetTable256[i] = (i & 1) + BitsSetTable256[i // 2]\n\ndef countSetBits(n):\n    return BitsSetTable256[n & 255] + BitsSetTable256[n >> 8 & 255] + BitsSetTable256[n >> 16 & 255] + BitsSetTable256[n >> 24]\nfor _ in range(int(input())):\n    initialize()\n    print(countSetBits(int(input())) - 1)", "for _ in range(int(input())):\n    n = bin(int(input())).count('1')\n    print(n - 1)", "for _ in range(int(input())):\n    n = int(input())\n    set_bits = 0\n    while n:\n        n &= n - 1\n        set_bits += 1\n    print(set_bits - 1)", "from math import log\nfor _ in range(int(input())):\n    n = int(input())\n    ans = []\n    while n > 0:\n        res = round(log(n, 2), 14)\n        ans.append(int(res))\n        n -= 2 ** ans[-1]\n    print(len(ans) - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    binary = bin(n)\n    print(binary.count('1') - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    binary = bin(n)\n    print(binary.count('1') - 1)", "for T in range(int(input())):\n    n = int(input())\n    k = 0\n    while True:\n        if n < 2 ** k:\n            break\n        k += 1\n    k -= 1\n    t = 0\n    while n > 0:\n        if n >= 2 ** k:\n            t += 1\n            n = n - 2 ** k\n        k = k - 1\n    print(t - 1)", "import math\nfor _ in range(int(input())):\n    num = int(input())\n    c = 0\n    while num > 0:\n        power = math.floor(math.log2(num))\n        num -= math.pow(2, power)\n        if num != 0:\n            c += 1\n    print(c)", "import math\nfor _ in range(int(input())):\n    z = int(input())\n    op = -1\n    while z > 0:\n        z -= 2 ** math.floor(math.log2(z))\n        op += 1\n    print(op)", "import math\nfor _ in range(int(input())):\n    z = int(input())\n    op = -1\n    if z - 2 ** math.floor(math.log2(z)) == 0:\n        print(0)\n    else:\n        while z > 0:\n            z -= 2 ** math.floor(math.log2(z))\n            op += 1\n        print(op)", "from math import log\nfor _ in range(int(input())):\n    n = int(input())\n    ans = []\n    while n > 0:\n        res = round(log(n, 2), 14)\n        ans.append(int(res))\n        n -= 2 ** ans[-1]\n    print(len(ans) - 1)", "from math import log\n\ndef po2(x):\n    return log(x, 2)\nfor _ in range(int(input())):\n    n = int(input())\n    cnt = 0\n    ans = []\n    while n > 0:\n        res = round(po2(n), 14)\n        ans.append(int(res))\n        n -= 2 ** ans[-1]\n        if n > 0:\n            cnt += 1\n    print(len(ans) - 1)", "from math import log\n\ndef po2(x):\n    return log(x, 2)\nfor _ in range(int(input())):\n    n = int(input())\n    cnt = 0\n    ans = []\n    while n > 0:\n        res = round(po2(n), 14)\n        ans.append(int(res))\n        n -= 2 ** ans[-1]\n        if n > 0:\n            cnt += 1\n    print(cnt)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = bin(n).replace('0b', '')\n    print(l.count('1') - 1)", "for i in range(int(input())):\n    n = int(input())\n    l = []\n    while n // 2 != 0:\n        l.append(n % 2)\n        n = n // 2\n    if 1 not in l:\n        print(0)\n    else:\n        print(l.count(1))", "for i in range(int(input())):\n    n = int(input())\n    l = []\n    while n // 2 != 0:\n        l.append(n % 2)\n        n = n // 2\n    if 1 not in l:\n        print(0)\n    else:\n        print(l.count(1))", "tc = int(input())\nfor t in range(tc):\n    N = int(input())\n    nBin = bin(N).replace('0b', '')\n    opCountStr = nBin.count('1')\n    opCount = int(opCountStr) - 1\n    print(opCount)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    c = 0\n    while n > 1:\n        if n % 2 == 1:\n            c = c + 1\n        n = n // 2\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    c = 0\n    while n > 1:\n        if n % 2 == 1:\n            c = c + 1\n        n = n // 2\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    c = 0\n    while n > 1:\n        if n % 2 == 1:\n            c = c + 1\n        n = n // 2\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    while n > 1:\n        if n % 2 == 1:\n            c = c + 1\n        n = n // 2\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    c = 0\n    while n > 1:\n        if n % 2 == 1:\n            c += 1\n        n = n // 2\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    c = 0\n    while n > 1:\n        if n % 2 == 1:\n            c += 1\n        n = n // 2\n    print(c)", "for i in range(int(input())):\n    d = int(input())\n    c = 0\n    while d:\n        c += d & 1\n        d >>= 1\n    print(c - 1)", "for _ in range(int(input())):\n    n = int(input())\n    b = bin(n).count('1')\n    print(b - 1)", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    r = ''\n    a = 1\n    while a <= n:\n        a *= 2\n    a = a / 2\n    while a >= 1:\n        if a <= n:\n            n = n - a\n            r = r + '1'\n            c += 1\n        else:\n            r = r + '0'\n        a = a / 2\n    print(c - 1)", "for i in range(int(input())):\n    n = int(input())\n    c = -1\n    while n:\n        if n % 2 == 1:\n            c += 1\n        n = n // 2\n    print(c)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    b = bin(n).count('1')\n    print(b - 1)", "nn = int(input())\nfor I in range(nn):\n    n = int(input())\n    c = -1\n    while n:\n        if n % 2 == 1:\n            c += 1\n        n //= 2\n    print(c)", "nn = int(input())\nfor I in range(nn):\n    n = int(input())\n    c = -1\n    while n:\n        if n % 2 == 1:\n            c += 1\n        n //= 2\n    print(c)", "t = int(input())\n\ndef split(x):\n    if x == 1 or x == 2:\n        return 0\n    y = 1\n    while y < x:\n        if x == 2 ** y:\n            return 0\n        if x // 2 ** y < 1:\n            z = x % 2 ** (y - 1)\n            return 1 + split(z)\n        y = y + 1\nfor i in range(t):\n    n = int(input())\n    count = split(n)\n    print(count)", "nn = int(input())\nfor I in range(nn):\n    n = int(input())\n    c = -1\n    while n:\n        if n % 2 == 1:\n            c += 1\n        n //= 2\n    print(c)", "h = int(input())\nfor i in range(h):\n    g = int(input())\n    j = str(bin(g)).count('1')\n    print(j - 1)", "T = int(input())\nwhile T:\n    N = int(input())\n    power_of_2 = []\n    for i in range(32):\n        power_of_2.append(pow(2, i))\n    count = 0\n    stop_pos = 0\n    total_count = 0\n\n    def power(number):\n        if number == 1:\n            return 0\n        elif number // 2 in power_of_2 and number % 2 == 0:\n            return 0\n        else:\n            for i in range(31):\n                if pow(2, i) < number:\n                    continue\n                else:\n                    reminder = number % pow(2, i - 1)\n                    count = 1 + power(reminder)\n                    return count\n    total_count = power(N)\n    print(total_count)\n    T -= 1", "nn = int(input())\nfor I in range(nn):\n    n = int(input())\n    c = -1\n    while n:\n        if n % 2 == 1:\n            c += 1\n        n //= 2\n    print(c)", "for _ in range(int(input())):\n    N = int(input())\n    count = 0\n    while N > 1:\n        if N % 2 == 1:\n            count += 1\n        N //= 2\n    print(count)", "for x in range(int(input())):\n    n = int(input())\n    count = 0\n    while n > 1:\n        if n % 2 == 1:\n            count += 1\n        n //= 2\n    print(count)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    count = 0\n    while n > 1:\n        if n % 2 == 1:\n            count += 1\n        n //= 2\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    count = 0\n    while n > 1:\n        if n % 2 == 1:\n            count += 1\n        n //= 2\n    print(count)", "n = int(input())\nfor i in range(n):\n    n = int(input())\n    count = 0\n    while n > 1:\n        if n % 2 == 1:\n            count += 1\n        n //= 2\n    print(count)", "n = int(input())\nfor i in range(n):\n    n = int(input())\n    count = 0\n    while n > 1:\n        if n % 2 == 1:\n            count += 1\n        n //= 2\n    print(count)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    k = bin(m)\n    h = k.count('1')\n    print(h - 1)", "for _ in range(int(input())):\n    n = int(input())\n    b = bin(n)\n    print(b.count('1') - 1)", "import math\nt = int(input())\nfor v in range(0, t, 1):\n    counter = 0\n    t = 0\n    operations = {}\n    n = int(input())\n    if 2 ** int(math.log(n, 2)) == n:\n        counter = 0\n    else:\n        while True:\n            if n - t > 0:\n                operations[int(math.log(n - t, 2))] = 2 ** int(math.log(n - t, 2))\n                counter += 1\n            else:\n                counter -= 1\n                break\n            t = 0\n            for v in operations:\n                t += operations[v]\n    print(counter)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    b = bin(n)[3:]\n    print(b.count('1'))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    count = 0\n    while n != 0:\n        count += n % 2\n        n = n // 2\n    print(count - 1)", "import math\nt = int(input())\nfor _ in range(t):\n    a = int(input())\n    count = 0\n    while a != 0:\n        sumu = 1\n        while sumu <= a:\n            sumu *= 2\n        sumu = sumu // 2\n        a -= sumu\n        count += 1\n    print(count - 1)", "def sgcd(a, b):\n    if a == b:\n        return a\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a % 2 == 0:\n        if b % 2 == 0:\n            return 2 * sgcd(a / 2, b / 2)\n        else:\n            return sgcd(a / 2, b)\n    if b % 2 == 0:\n        return sgcd(a, b / 2)\n    else:\n        return sgcd(abs(a - b) / 2, min(a, b))\n\ndef egcd(a, b):\n    if b == 0:\n        return a\n    else:\n        A = egcd(b, a % b)\n    return A\n\ndef lcm(a, b):\n    try:\n        return int(a * b / sgcd(a, b))\n    except:\n        return a * b / egcd(a, b)\n\ndef I(a):\n    return map(int, a.split(' '))\n\ndef ispowerof(x, y):\n    import math\n    a = math.log10(y) / math.log10(x)\n    return math.ceil(a) == math.floor(a)\n\ndef b(a, c=0):\n    if a == 1:\n        return c\n    if ispowerof(2, a):\n        return c\n    while a > 0:\n        if a % 2:\n            c += 1\n        a = a // 2\n    return c - 1\n\ndef main():\n    for i in range(int(input())):\n        a = int(input())\n        print(b(a))\nmain()", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    ans = -1\n    while n > 0:\n        a = int(math.log(n, 2))\n        n -= 2 ** a\n        ans += 1\n    print(ans)", "i = 0\nb = ''\ntestcases = int(input())\nwhile i < testcases:\n    count = 0\n    n = int(input())\n    while n > 1:\n        if n % 2 == 1:\n            count = count + 1\n        n = (n - n % 2) / 2\n    print(count)\n    i = i + 1", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    sq = 0\n    while n > 1:\n        if n % 2 == 1:\n            sq += 1\n        n //= 2\n    print(sq)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    while n > 0:\n        if n % 2 != 0:\n            c += 1\n        n = n // 2\n    print(c - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    while n > 0:\n        if n % 2 != 0:\n            c += 1\n        n = n // 2\n    print(c - 1)", "for i in range(int(input())):\n    Num = int(input())\n    Count = 0\n    while Num != 0:\n        Sum = 1\n        while Sum <= Num:\n            Sum = Sum * 2\n        Sum = Sum / 2\n        Num = Num - Sum\n        Count += 1\n    print(Count - 1)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    res = -1\n    while N != 0:\n        if N & 1 == 1:\n            res += 1\n        N >>= 1\n    print(res)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    res = -1\n    while N != 0:\n        if N & 1 == 1:\n            res += 1\n        N >>= 1\n    print(res)", "from math import log2\n\ndef ops(n):\n    d = log2(n)\n    dtrunc = int(d)\n    i = 0\n    while d != dtrunc:\n        n = n - 2 ** dtrunc\n        d = log2(n)\n        dtrunc = int(d)\n        i += 1\n    return i\nt = int(input())\nfor _ in range(0, t):\n    print(ops(int(input())))", "n = int(input())\nfor i in range(n):\n    n = int(input())\n    count = 0\n    while n > 1:\n        if n % 2 == 1:\n            count += 1\n        n //= 2\n    print(count)", "n = int(input())\nfor i in range(n):\n    n = int(input())\n    count = 0\n    while n > 1:\n        if n % 2 == 1:\n            count += 1\n        n //= 2\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    c = 0\n    while n > 0:\n        if n % 2 != 0:\n            c += 1\n        n = n // 2\n    print(c - 1)", "n = int(input())\nfor i in range(n):\n    n = int(input())\n    count = 0\n    while n > 1:\n        if n % 2 == 1:\n            count += 1\n        n //= 2\n    print(count)", "for i in range(int(input())):\n    c = 0\n    n = int(input())\n    for j in range(len(bin(n))):\n        if list(bin(n))[j] == '1':\n            c += 1\n    print(c - 1)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = bin(n)\n    count1 = a.count('1')\n    print(count1 - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    n = bin(n)\n    c = n.count('1')\n    print(c - 1)", "cases = int(input())\nfor l in range(cases):\n    i = int(input())\n    print(bin(i).count('1') - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    b = bin(n)\n    s = b.count('1')\n    if s == 1:\n        print('0')\n    else:\n        print(s - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    b = bin(n)\n    s = b.count('1')\n    if s == 1:\n        print('0')\n    else:\n        print(s - 1)", "n = int(input())\nl = []\nfor i in range(0, n):\n    k = int(input())\n    a = str(bin(k))[2:]\n    sum = -1\n    for j in a:\n        if j == '1':\n            sum += 1\n    l.append(sum)\nfor i in l:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    b = bin(n)\n    c = b.count('1')\n    print(c - 1)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    z = str(bin(a))\n    v = z.count('1')\n    print(v - 1)", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    y = str(format(x, 'b'))\n    k = 0\n    for i in y:\n        if i == '1':\n            k = k + 1\n    print(k - 1)", "n = int(input())\nfor i in range(n):\n    r = bin(int(input()))\n    print(r.count('1') - 1)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    binn = bin(n)\n    count1 = int(str(binn.count('1')))\n    print(count1 - 1)", "T = int(input())\nl = [int(input()) for i in range(T)]\nfor i in range(T):\n    k = bin(l[i])\n    k = k[2:]\n    j = k.count('1')\n    print(j - 1)", "for t in range(int(input())):\n    n = int(input())\n    b = bin(n)\n    s = b[2:]\n    if s.count('1') == 1:\n        print('0')\n    else:\n        print(s.count('1') - 1)", "T = int(input())\nans = []\nfor i in range(T):\n    N = int(input())\n    ones = 0\n    while N > 0:\n        a = N % 2\n        if N % 2 == 1:\n            ones += 1\n        N = N // 2\n    ans.append(ones - 1)\nfor k in ans:\n    print(k)", "for i in range(int(input())):\n    n = int(input())\n    n = bin(n)\n    c = n.count('1')\n    print(c - 1)", "for i in range(int(input())):\n    n = int(input())\n    n = bin(n)\n    c = n.count('1')\n    print(c - 1)", "t = int(input())\nwhile t:\n    n = int(input())\n    cnt = str(bin(n)).count('1')\n    print(cnt - 1)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    print(bin(int(input())).count('1') - 1)", "parts = [2 ** n for n in range(30)]\nparts = parts[::-1]\nfor _ in range(int(input())):\n    N = int(input())\n    breaks = 0\n    for p in parts:\n        if N > p:\n            breaks += 1\n            N -= p\n        elif N == p:\n            break\n    print(breaks)", "for i in range(int(input())):\n    n = int(input())\n    n = bin(n)\n    c = n.count('1')\n    print(c - 1)", "for _ in range(int(input())):\n    print(bin(int(input())).count('1') - 1)", "def main():\n    for t in range(int(input())):\n        N = int(input())\n        print(splitn(N))\n\ndef splitn(N):\n    return bin(N).count('1') - 1\nmain()", "for i in range(int(input())):\n    n = int(input())\n    c = 0\n    a = 0\n    flag = 't'\n    while flag == 't' and n > 0:\n        if n == 2 ** a:\n            flag = 'f'\n        elif n < 2 ** a:\n            n = n - 2 ** (a - 1)\n            c += 1\n            a = 0\n        else:\n            a += 1\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    count = 0\n    j = 0\n    while n > 1:\n        if 2 ** j < n:\n            j = j + 1\n        elif 2 ** j == n:\n            break\n        else:\n            n = n - 2 ** (j - 1)\n            count = count + 1\n            j = 0\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    print(bin(n).count('1') - 1)", "for _ in range(int(input())):\n    n = int(input())\n    print(bin(n).count('1') - 1)", "for _ in range(int(input())):\n    n = int(input())\n    print(bin(n).count('1') - 1)", "import numpy as np\nT = int(input())\nfor k in range(T):\n    N = int(input())\n    n = -1\n    while N > 0:\n        n = n + 1\n        N = int(N - 2 ** np.floor(np.log2(N)))\n    print(n)", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    N = bin(N)\n    print(N.count('1') - 1)", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    onecount = str(bin(n)).count('1')\n    print(int(onecount) - 1)", "for _ in range(int(input())):\n    print(str(bin(int(input()))).count('1') - 1)", "for _ in range(int(input())):\n    n = int(input())\n    n = bin(n)\n    a = n.count('1')\n    print(a - 1)", "for i in range(int(input())):\n    n = int(input())\n    n = bin(n)\n    c = n.count('1')\n    print(c - 1)", "for i in range(int(input())):\n    n = int(input())\n    n = bin(n)\n    c = n.count('1')\n    print(c - 1)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    c = str(bin(N)).count('1')\n    print(c - 1)", "for i in range(int(input())):\n    n = int(input())\n    n = bin(n)\n    c = n.count('1')\n    print(c - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    binary = bin(n)\n    count = binary.count('1')\n    print(count - 1)"]