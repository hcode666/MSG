["from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = Counter(a)\n    maximum = 0\n    for i in d:\n        if maximum < d[i]:\n            maximum = d[i]\n    print(n - maximum)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    print(n - max(list(map(lambda x: l.count(x), l))))", "from statistics import mode\nTest = int(input())\nfor Cases in range(Test):\n    NumberofCards = int(input())\n    Cards = list(map(int, input().split()))\n    Mode = mode(Cards)\n    Count = Cards.count(Mode)\n    print(NumberofCards - Count)", "for _ in range(int(input())):\n    a = int(input())\n    l1 = list(map(int, input().split()))\n    l = len(set(l1))\n    c = 0\n    if l == a:\n        print(l - 1)\n    elif l == 1:\n        print(0)\n    else:\n        for i in l1:\n            if c < l1.count(i):\n                c = l1.count(i)\n        print(a - c)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    for i in l:\n        l1.append(l.count(i))\n    print(len(l) - max(l1))", "from statistics import mode\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    c = 0\n    for i in x:\n        if x.count(i) > c:\n            c = x.count(i)\n    print(n - c)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    c = Counter(l)\n    m = max(c, key=c.get)\n    print(n - l.count(m))", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    c = Counter(l)\n    m = max(c, key=c.get)\n    print(n - l.count(m))", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    se = set(l)\n    c = []\n    for i in se:\n        cn = 0\n        for j in l:\n            if int(j) == int(i):\n                cn += 1\n        c.append(cn)\n    print(n - max(c))", "for i in range(int(input())):\n    c = int(input())\n    l = input().split()\n    g = []\n    dic = {}\n    for j in l:\n        dic[j] = l.count(j)\n    maxi = 0\n    for (key, value) in dic.items():\n        if value > maxi:\n            maxi = value\n    print(len(l) - maxi)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    s = set(l)\n    cl = []\n    for i in s:\n        cn = 0\n        for j in l:\n            if int(j) == int(i):\n                cn += 1\n        cl.append(cn)\n    print(n - max(cl))", "from collections import Counter\nfor i in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    b = Counter(l)\n    d = max(b.values())\n    print(a - d)", "from statistics import mode\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    m = []\n    l = list(map(int, input().split(' ')))\n    for i in l:\n        m.append(l.count(i))\n    print(n - max(m))", "from collections import Counter\nfor i in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    c = Counter(A)\n    m = max(c.values())\n    print(N - m)", "t = int(input())\n\ndef ans():\n    n = int(input())\n    c = 0\n    x = [int(i) for i in input().split()]\n    for i in x:\n        if x.count(i) > c:\n            c = x.count(i)\n    print(n - c)\nfor i in range(t):\n    ans()", "import statistics\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    card = l.count(statistics.mode(l))\n    print(n - card)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    i = list(map(int, input().split()))\n    x = mode(i)\n    y = i.count(x)\n    print(n - y)", "import statistics\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    card = a.count(statistics.mode(a))\n    print(n - card)", "for i in range(int(input())):\n    N = int(input())\n    W = list(map(int, input().split()))\n    a = set(W)\n    c = []\n    for item in a:\n        c.append(W.count(item))\n    count = 0\n    for j in range(len(c)):\n        if len(c) > 1:\n            a = min(c)\n            count = count + a\n            c.remove(a)\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    a = lst.count(10)\n    b = lst.count(1)\n    c = lst.count(2)\n    d = lst.count(3)\n    e = lst.count(4)\n    f = lst.count(5)\n    g = lst.count(6)\n    h = lst.count(7)\n    i = lst.count(8)\n    j = lst.count(9)\n    max1 = max(a, b, c, d, e, f, g, h, i, j)\n    print(len(lst) - max1)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    n = list(map(int, input().split()))\n    f = mode(n)\n    fx = n.count(f)\n    print(x - fx)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    j = mode(arr)\n    m = arr.count(j)\n    cn = n - m\n    print(cn)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    cards = list(map(int, input().split()))\n    freq = {}\n    for card in cards:\n        freq[card] = freq.get(card, 0) + 1\n    max_freq = max(freq.values())\n    moves = n - max_freq\n    print(moves)", "for i in range(int(input())):\n    n = int(input())\n    a = input().split()\n    b = []\n    for i in a:\n        b.append(a.count(i))\n    print(n - max(b))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = {}\n    for num in a:\n        freq[num] = freq.get(num, 0) + 1\n    max_freq = max(freq.values())\n    ans = n - max_freq\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    c1 = 0\n    for _ in lst:\n        c = lst.count(_)\n        if c >= c1:\n            c1 = c\n    print(n - c1)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    c = Counter(l)\n    m = max(c, key=c.get)\n    print(n - l.count(m))", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = set(l)\n    a = mode(l)\n    z = l.count(a)\n    print(n - z)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max = a.count(a[0])\n    for i in a:\n        if max < a.count(i):\n            max = a.count(i)\n    print(n - max)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max = a.count(a[0])\n    for i in a:\n        if max < a.count(i):\n            max = a.count(i)\n    print(n - max)", "for _ in range(int(input())):\n    n = int(input())\n    input_1 = list(map(int, input().split(' ')))\n    dict_1 = dict()\n    for ele in input_1:\n        if dict_1.get(ele) == None:\n            dict_1[ele] = 1\n        else:\n            dict_1[ele] = dict_1[ele] + 1\n    max_value = 0\n    max_key = 0\n    for (key, value) in dict_1.items():\n        if value > max_value:\n            max_value = value\n            max_key = key\n    print(n - max_value)", "for _ in range(int(input())):\n    cards = int(input())\n    card = list(map(int, input().split()))\n    a = set(card)\n    maxi = 0\n    for q in a:\n        if card.count(q) > maxi:\n            maxi = card.count(q)\n    print(len(card) - maxi)", "for _ in range(int(input())):\n    n = int(input())\n    m = 1\n    l = list(map(int, input().split()))\n    for i in l:\n        x = l.count(i)\n        m = max(m, x)\n    print(n - m)", "from collections import Counter\ncases = int(input())\nfor i in range(cases):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = Counter(arr).most_common(1)[0][1]\n    for a in range(len(arr)):\n        if a >= len(arr):\n            break\n        if cnt <= arr.count(arr[a]):\n            cnt = arr.count(arr[a]) + 1\n            arr = list(filter(arr[a].__ne__, arr))\n    print(len(arr))", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    l = []\n    count = 0\n    c = 0\n    for i in num:\n        c = num.count(i)\n        l.append(c)\n    print(n - max(l))", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    l = []\n    count = 0\n    c = 0\n    for i in num:\n        c = num.count(i)\n        l.append(c)\n    print(n - max(l))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c1 = 0\n    for i in range(n):\n        c2 = a.count(a[i])\n        if c2 > c1:\n            c1 = c2\n    print(n - c1)", "for _ in range(int(input())):\n    cards = int(input())\n    card = list(map(int, input().split()))\n    a = set(card)\n    maxi = 0\n    for q in a:\n        if card.count(q) > maxi:\n            maxi = card.count(q)\n    print(len(card) - maxi)", "for _ in range(int(input())):\n    cards = int(input())\n    card = list(map(int, input().split()))\n    a = set(card)\n    maxi = 0\n    for q in a:\n        if card.count(q) > maxi:\n            maxi = card.count(q)\n    print(len(card) - maxi)", "for i in range(int(input())):\n    N = int(input())\n    li = list(map(int, input().split()))\n    s = set(li)\n    count = 0\n    for i in s:\n        if li.count(i) > count:\n            count = li.count(i)\n    print(N - count)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    c = Counter(l)\n    m = max(c, key=c.get)\n    print(n - l.count(m))", "import statistics\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    card = a.count(statistics.mode(a))\n    print(n - card)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "n = int(input())\nfor i in range(n):\n    size = int(input())\n    K = [0] * 11\n    L = list(map(int, input().split()))\n    for i in L:\n        K[i] += 1\n    print(abs(max(K) - size))", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = sum(sorted([arr.count(i) for i in set(arr)])[:-1])\n    print(count)\n    t -= 1", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    c = Counter(l)\n    m = max(c, key=c.get)\n    print(n - l.count(m))", "m = int(input())\nl = []\na = 0\nfor i in range(m):\n    x = int(input())\n    l = list(map(int, input().strip().split()))[:x]\n    n = set(l)\n    m = 0\n    for i in n:\n        if m < l.count(i):\n            m = l.count(i)\n        else:\n            continue\n    print(int(len(l) - m))", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in set(l):\n        if l.count(i) > c:\n            c = l.count(i)\n    print(n - c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in l:\n        if l.count(i) > c:\n            c = l.count(i)\n    print(n - c)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    list1 = [int(k) for k in input().split()]\n    count = 0\n    maxi = 0\n    set1 = set(list1)\n    for j in set1:\n        count = list1.count(j)\n        if count > maxi:\n            maxi = count\n    print(x - maxi)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "for t in range(int(input())):\n    n = int(input())\n    a = input().split()\n    uni = {}\n    for i in a:\n        if i in uni:\n            uni[i] += 1\n        else:\n            uni[i] = 1\n    print(n - max(uni.values()))", "for _ in range(int(input())):\n    m = int(input())\n    t = list(map(int, input().split()))\n    d = {}\n    for i in t:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    min_freq = 0\n    for i in d:\n        if d[i] > min_freq:\n            min_freq = d[i]\n    print(m - min_freq)", "m = int(input())\nl = []\na = 0\nfor i in range(m):\n    x = int(input())\n    l = list(map(int, input().strip().split()))[:x]\n    n = set(l)\n    m = 0\n    for i in n:\n        if m < l.count(i):\n            m = l.count(i)\n        else:\n            continue\n    print(int(len(l) - m))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    s = set(x)\n    l = []\n    for j in s:\n        a = x.count(j)\n        l.append(a)\n    print(n - max(l))", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = [0] * 11\n    for j in b:\n        c[j] += 1\n    max_c = max(c)\n    print(a - max_c)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dic = Counter(l)\n    k = max(dic.values())\n    print(n - k)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    string = list(map(int, input().split()))\n    set_cards = set(string)\n    set_cards = list(set_cards)\n    max_count = 0\n    for i in set_cards:\n        count = string.count(i)\n        max_count = max(max_count, count)\n    print(N - max_count)", "import statistics\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    card = a.count(statistics.mode(a))\n    print(n - card)", "import statistics\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    card = a.count(statistics.mode(a))\n    print(n - card)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    c = Counter(l)\n    m = max(c, key=c.get)\n    print(n - l.count(m))", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "for j in range(int(input())):\n    n = int(input())\n    h = {}\n    l = map(int, input().split())\n    for i in l:\n        if i not in h:\n            h[i] = 1\n        else:\n            h[i] += 1\n    c = max(h.values())\n    print(n - c)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "t = int(input())\nwhile t > 0:\n    count = 0\n    flag = 0\n    t = t - 1\n    n = int(input())\n    arr = [n]\n    arr = list(map(int, input().strip().split()))[:n]\n    d = {}\n    m = 0\n    for i in arr:\n        if i in d.keys():\n            d[i] += 1\n        else:\n            d[i] = 1\n    if len(d) == 1:\n        count = 0\n    else:\n        for j in d:\n            if m < d[j]:\n                m = d[j]\n        count = n - m\n    print(count)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "t = int(input())\nwhile t > 0:\n    count = 0\n    flag = 0\n    t = t - 1\n    n = int(input())\n    arr = [n]\n    arr = list(map(int, input().strip().split()))[:n]\n    d = {}\n    m = 0\n    for i in arr:\n        if i in d.keys():\n            d[i] += 1\n        else:\n            d[i] = 1\n    if len(d) == 1:\n        count = 0\n    else:\n        for j in d:\n            if m < d[j]:\n                m = d[j]\n        count = n - m\n    print(count)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    j = mode(k)\n    cn = k.count(j)\n    print(n - cn)"]