["for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "for _ in range(int(input())):\n    n = int(input())\n    my = map(int, input().split())\n    out = []\n    cnt = {}\n    for x in my:\n        if x in cnt.keys():\n            cnt[x] += 1\n        else:\n            cnt[x] = 1\n            out.append(x)\n    out.sort()\n    if n == 1:\n        if len(out) > 1:\n            print(-1)\n        else:\n            print(out[0])\n        continue\n    if n == 2:\n        if cnt[out[0]] != 3 or cnt[out[-1]] != 1:\n            print(-1)\n        else:\n            print(out[0], end=' ')\n            print(out[1])\n        continue\n    ans = True\n    if cnt[out[-1]] != 1:\n        ans = False\n    if n % 2 == 0:\n        if cnt[out[len(out) // 2 - 1]] != 3:\n            ans = False\n        for i in range(len(out) - 1):\n            if cnt[out[i]] != 2 and i != len(out) // 2 - 1:\n                ans = False\n    else:\n        if cnt[out[len(out) // 2]] != 3:\n            ans = False\n        for i in range(len(out) - 1):\n            if cnt[out[i]] != 2 and i != len(out) // 2:\n                ans = False\n    if ans == True:\n        for v in out:\n            print(v, end=' ')\n    else:\n        print(-1)\n    print()", "for i in range(int(input())):\n    N = int(input())\n    B = list(map(int, input().split()))\n    d1 = {}\n    for i in B:\n        if i in d1:\n            d1[i] += 1\n        else:\n            d1[i] = 1\n    A = []\n    for i in d1:\n        A.append(i)\n    A.sort()\n    check = 0\n    for i in range(len(A)):\n        if i % 2 == 0 or i == 1:\n            mid = i / 2\n        else:\n            mid = (i + 1) / 2\n            mid -= 1\n        val = A[int(mid)]\n        if val in d1:\n            d1[val] -= 1\n        else:\n            check = 1\n            break\n    A.reverse()\n    for i in range(len(A)):\n        if i % 2 == 0:\n            mid = i / 2\n        else:\n            mid = (i + 1) / 2\n        if A[int(mid)] in d1:\n            d1[A[int(mid)]] -= 1\n        else:\n            check = 1\n            break\n    if check == 1:\n        print('-1')\n    else:\n        check = 0\n        for i in d1:\n            if d1[i] != 0:\n                print('-1')\n                check = 1\n                break\n        if check != 1:\n            A.reverse()\n            for i in A:\n                print(str(i) + ' ', end='')\n            print()", "for i in range(int(input())):\n    N = int(input())\n    B = list(map(int, input().split()))\n    d1 = {}\n    for i in B:\n        if i in d1:\n            d1[i] += 1\n        else:\n            d1[i] = 1\n    A = []\n    for i in d1:\n        A.append(i)\n    A.sort()\n    check = 0\n    for i in range(len(A)):\n        if i % 2 == 0 or i == 1:\n            mid = i / 2\n        else:\n            mid = (i + 1) / 2\n            mid -= 1\n        val = A[int(mid)]\n        if val in d1:\n            d1[val] -= 1\n        else:\n            check = 1\n            break\n    A.reverse()\n    for i in range(len(A)):\n        if i % 2 == 0:\n            mid = i / 2\n        else:\n            mid = (i + 1) / 2\n        if A[int(mid)] in d1:\n            d1[A[int(mid)]] -= 1\n        else:\n            check = 1\n            break\n    if check == 1:\n        print('-1')\n    else:\n        check = 0\n        for i in d1:\n            if d1[i] != 0:\n                print('-1')\n                check = 1\n                break\n        if check != 1:\n            A.reverse()\n            for i in A:\n                print(str(i) + ' ', end='')\n            print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 2 * n\n    s = list(set(l))\n    c = []\n    if len(s) != n:\n        print(-1)\n        continue\n    l.sort()\n    if n % 2 == 0:\n        x = n // 2 - 1\n    else:\n        x = n // 2\n    s.sort()\n    for j in range(x):\n        c.append(s[j])\n        c.append(s[j])\n    c.append(s[x])\n    c.append(s[x])\n    c.append(s[x])\n    for k in range(x + 1, n - 1):\n        c.append(s[k])\n        c.append(s[k])\n    c.append(s[n - 1])\n    f = False\n    for z in range(m):\n        if c[z] != l[z]:\n            f = True\n            break\n    if f == False:\n        print(*s)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 2 * n\n    s = list(set(l))\n    c = []\n    if len(s) != n:\n        print(-1)\n        continue\n    l.sort()\n    if n % 2 == 0:\n        x = n // 2 - 1\n    else:\n        x = n // 2\n    s.sort()\n    for j in range(x):\n        c.append(s[j])\n        c.append(s[j])\n    c.append(s[x])\n    c.append(s[x])\n    c.append(s[x])\n    for k in range(x + 1, n - 1):\n        c.append(s[k])\n        c.append(s[k])\n    c.append(s[n - 1])\n    f = False\n    for z in range(m):\n        if c[z] != l[z]:\n            f = True\n            break\n    if f == False:\n        print(*s)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 2 * n\n    s = list(set(l))\n    c = []\n    if len(s) != n:\n        print(-1)\n        continue\n    l.sort()\n    if n % 2 == 0:\n        x = n // 2 - 1\n    else:\n        x = n // 2\n    s.sort()\n    for j in range(x):\n        c.append(s[j])\n        c.append(s[j])\n    c.append(s[x])\n    c.append(s[x])\n    c.append(s[x])\n    for k in range(x + 1, n - 1):\n        c.append(s[k])\n        c.append(s[k])\n    c.append(s[n - 1])\n    f = False\n    for z in range(m):\n        if c[z] != l[z]:\n            f = True\n            break\n    if f == False:\n        print(*s)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 2 * n\n    s = list(set(l))\n    c = []\n    if len(s) != n:\n        print(-1)\n        continue\n    l.sort()\n    if n % 2 == 0:\n        x = n // 2 - 1\n    else:\n        x = n // 2\n    s.sort()\n    for j in range(x):\n        c.append(s[j])\n        c.append(s[j])\n    c.append(s[x])\n    c.append(s[x])\n    c.append(s[x])\n    for k in range(x + 1, n - 1):\n        c.append(s[k])\n        c.append(s[k])\n    c.append(s[n - 1])\n    f = False\n    for z in range(m):\n        if c[z] != l[z]:\n            f = True\n            break\n    if f == False:\n        print(*s)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 2 * n\n    s = list(set(l))\n    c = []\n    if len(s) != n:\n        print(-1)\n        continue\n    l.sort()\n    if n % 2 == 0:\n        x = n // 2 - 1\n    else:\n        x = n // 2\n    s.sort()\n    for j in range(x):\n        c.append(s[j])\n        c.append(s[j])\n    c.append(s[x])\n    c.append(s[x])\n    c.append(s[x])\n    for k in range(x + 1, n - 1):\n        c.append(s[k])\n        c.append(s[k])\n    c.append(s[n - 1])\n    f = False\n    for z in range(m):\n        if c[z] != l[z]:\n            f = True\n            break\n    if f == False:\n        print(*s)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 2 * n\n    s = list(set(l))\n    c = []\n    if len(s) != n:\n        print(-1)\n        continue\n    l.sort()\n    if n % 2 == 0:\n        x = n // 2 - 1\n    else:\n        x = n // 2\n    s.sort()\n    for j in range(x):\n        c.append(s[j])\n        c.append(s[j])\n    c.append(s[x])\n    c.append(s[x])\n    c.append(s[x])\n    for k in range(x + 1, n - 1):\n        c.append(s[k])\n        c.append(s[k])\n    c.append(s[n - 1])\n    f = False\n    for z in range(m):\n        if c[z] != l[z]:\n            f = True\n            break\n    if f == False:\n        print(*s)\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(k) for k in input().split()]\n    B.sort()\n    d = dict()\n    for k in range(2 * n):\n        if B[k] not in d:\n            d[B[k]] = 1\n        else:\n            d[B[k]] += 1\n    c = list(set(B))\n    c.sort()\n    if n == 1:\n        if B[0] == B[1]:\n            print(B[0])\n        else:\n            print(-1)\n        continue\n    for k in range(len(c)):\n        if k == len(c) - 1:\n            if d[c[k]] == 1:\n                pass\n            else:\n                print(-1)\n                break\n        elif k == (n - 1) // 2:\n            if d[c[k]] == 3:\n                pass\n            else:\n                print(-1)\n                break\n        elif d[c[k]] == 2:\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 2 * n\n    s = list(set(l))\n    c = []\n    if len(s) != n:\n        print(-1)\n        continue\n    l.sort()\n    if n % 2 == 0:\n        x = n // 2 - 1\n    else:\n        x = n // 2\n    s.sort()\n    for j in range(x):\n        c.append(s[j])\n        c.append(s[j])\n    c.append(s[x])\n    c.append(s[x])\n    c.append(s[x])\n    for k in range(x + 1, n - 1):\n        c.append(s[k])\n        c.append(s[k])\n    c.append(s[n - 1])\n    f = False\n    for z in range(m):\n        if c[z] != l[z]:\n            f = True\n            break\n    if f == False:\n        print(*s)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 2 * n\n    s = list(set(l))\n    c = []\n    if len(s) != n:\n        print(-1)\n        continue\n    l.sort()\n    if n % 2 == 0:\n        x = n // 2 - 1\n    else:\n        x = n // 2\n    s.sort()\n    for j in range(x):\n        c.append(s[j])\n        c.append(s[j])\n    c.append(s[x])\n    c.append(s[x])\n    c.append(s[x])\n    for k in range(x + 1, n - 1):\n        c.append(s[k])\n        c.append(s[k])\n    c.append(s[n - 1])\n    f = False\n    for z in range(m):\n        if c[z] != l[z]:\n            f = True\n            break\n    if f == False:\n        print(*s)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 2 * n\n    s = list(set(l))\n    c = []\n    if len(s) != n:\n        print(-1)\n        continue\n    l.sort()\n    if n % 2 == 0:\n        x = n // 2 - 1\n    else:\n        x = n // 2\n    s.sort()\n    for j in range(x):\n        c.append(s[j])\n        c.append(s[j])\n    c.append(s[x])\n    c.append(s[x])\n    c.append(s[x])\n    for k in range(x + 1, n - 1):\n        c.append(s[k])\n        c.append(s[k])\n    c.append(s[n - 1])\n    f = False\n    for z in range(m):\n        if c[z] != l[z]:\n            f = True\n            break\n    if f == False:\n        print(*s)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    m = 2 * n\n    s = list(set(arr))\n    cmp = []\n    if len(s) != n:\n        print(-1)\n        continue\n    arr.sort()\n    mid = n // 2 - 1 if n % 2 == 0 else n // 2\n    s.sort()\n    for i in range(mid):\n        cmp.append(s[i])\n        cmp.append(s[i])\n    cmp.append(s[mid])\n    cmp.append(s[mid])\n    cmp.append(s[mid])\n    for i in range(mid + 1, n - 1):\n        cmp.append(s[i])\n        cmp.append(s[i])\n    cmp.append(s[n - 1])\n    flag = False\n    for i in range(m):\n        if cmp[i] != arr[i]:\n            flag = True\n            break\n    if flag == False:\n        print(*s)\n    else:\n        print(-1)", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    n = int(input())\n    arr = [int(x) for x in input().strip().split()]\n    if n == 1:\n        if arr[0] == arr[1]:\n            print(arr[0])\n        else:\n            print(-1)\n        continue\n    arr.sort()\n    count = Counter(arr)\n    if len(count) != n:\n        print(-1)\n        continue\n    elements = sorted(count)\n    ans = []\n    is_possible = True\n    i_mid = (n - 1) // 2\n    for i in range(i_mid):\n        if count[elements[i]] == 2:\n            ans += [elements[i]]\n        else:\n            is_possible = False\n            break\n    if count[elements[i_mid]] == 3:\n        ans += [elements[i_mid]]\n    else:\n        is_possible = False\n    if not is_possible:\n        print(-1)\n        continue\n    for i in range(i_mid + 1, n - 1):\n        if count[elements[i]] == 2:\n            ans += [elements[i]]\n        else:\n            is_possible = False\n            break\n    if count[elements[-1]] == 1:\n        ans += [elements[-1]]\n    else:\n        is_possible = False\n    if is_possible:\n        print(*ans)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        d[i] = d.get(i, 0) + 1\n    m = sorted(d)\n    x = True\n    if n == 1:\n        for i in set(l):\n            print(i)\n    else:\n        for i in range(len(m)):\n            if n % 2 == 1:\n                mid = n // 2\n            else:\n                mid = n // 2 - 1\n            if i != mid and i != n - 1:\n                if d[m[i]] != 2:\n                    print(-1)\n                    x = False\n                    break\n            elif i == mid:\n                if d[m[i]] != 3:\n                    print(-1)\n                    x = False\n                    break\n            elif d[m[i]] != 1:\n                print(-1)\n                x = False\n                break\n        if x:\n            for i in m:\n                print(i, end=' ')\n            print()", "def ans(b):\n    b.sort()\n    x = max(b)\n    a = []\n    if len(b) == 2 and b.count(x) == 2:\n        a.append(x)\n        return a\n    if b.count(x) != 1:\n        return -1\n    else:\n        i = 0\n        while i < len(b) - 1:\n            if b[i] == b[i + 1]:\n                if b[i] == b[i + 2]:\n                    if len(b) % 4 == 0:\n                        mp = len(b) // 4 - 1\n                    else:\n                        mp = len(b) // 4\n                    if len(a) == mp:\n                        a.append(b[i])\n                        i += 3\n                    else:\n                        return -1\n                else:\n                    a.append(b[i])\n                    i += 2\n            else:\n                return -1\n        a.append(max(b))\n        if len(a) != len(b) / 2:\n            return -1\n        return a\nfor i in range(int(input())):\n    ul = input()\n    ints = input()\n    b = []\n    for x in ints.split():\n        b.append(int(x))\n    a = ans(b)\n    if a == -1:\n        print(-1)\n    else:\n        o = ''\n        for x in a:\n            o += str(x) + ' '\n        print(o)", "import math\n\ndef pre(l):\n    ans = []\n    for i in range(len(l)):\n        if i == 0:\n            ans.append(l[i])\n        else:\n            q = int(i / 2)\n            p = l[q]\n            ans.append(p)\n    return ans\n\ndef suf(l):\n    ans2 = []\n    for i in range(1, len(l) + 1):\n        if i % 2 != 0:\n            p = int(math.ceil(i / 2))\n            q = l[-p]\n            ans2.append(q)\n        else:\n            p = int(i / 2) + 1\n            q = l[-p]\n            ans2.append(q)\n    return ans2\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    test = []\n    for i in set(l):\n        test.append(i)\n    test.sort()\n    a = pre(test)\n    b = suf(test)\n    final_ans = a + b\n    l.sort()\n    final_ans.sort()\n    if l != final_ans:\n        print(-1)\n    else:\n        print(*test)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    m = 2 * n\n    s = list(set(arr))\n    cmp = []\n    if len(s) != n:\n        print(-1)\n        continue\n    arr.sort()\n    mid = n // 2 - 1 if n % 2 == 0 else n // 2\n    s.sort()\n    for i in range(mid):\n        cmp.append(s[i])\n        cmp.append(s[i])\n    cmp.append(s[mid])\n    cmp.append(s[mid])\n    cmp.append(s[mid])\n    for i in range(mid + 1, n - 1):\n        cmp.append(s[i])\n        cmp.append(s[i])\n    cmp.append(s[n - 1])\n    flag = False\n    for i in range(m):\n        if cmp[i] != arr[i]:\n            flag = True\n            break\n    if flag == False:\n        print(*s)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    m = 2 * n\n    s = list(set(arr))\n    cmp = []\n    if len(s) != n:\n        print(-1)\n        continue\n    arr.sort()\n    mid = n // 2 - 1 if n % 2 == 0 else n // 2\n    s.sort()\n    for i in range(mid):\n        cmp.append(s[i])\n        cmp.append(s[i])\n    cmp.append(s[mid])\n    cmp.append(s[mid])\n    cmp.append(s[mid])\n    for i in range(mid + 1, n - 1):\n        cmp.append(s[i])\n        cmp.append(s[i])\n    cmp.append(s[n - 1])\n    flag = False\n    for i in range(m):\n        if cmp[i] != arr[i]:\n            flag = True\n            break\n    if flag == False:\n        print(*s)\n    else:\n        print(-1)", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    n = int(input())\n    arr = [int(x) for x in input().strip().split()]\n    if n == 1:\n        if arr[0] == arr[1]:\n            print(arr[0])\n        else:\n            print(-1)\n        continue\n    arr.sort()\n    count = Counter(arr)\n    if len(count) != n:\n        print(-1)\n        continue\n    elements = sorted(count)\n    ans = []\n    is_possible = True\n    i_mid = (n - 1) // 2\n    for i in range(i_mid):\n        if count[elements[i]] == 2:\n            ans += [elements[i]]\n        else:\n            is_possible = False\n            break\n    if count[elements[i_mid]] == 3:\n        ans += [elements[i_mid]]\n    else:\n        is_possible = False\n    if not is_possible:\n        print(-1)\n        continue\n    for i in range(i_mid + 1, n - 1):\n        if count[elements[i]] == 2:\n            ans += [elements[i]]\n        else:\n            is_possible = False\n            break\n    if count[elements[-1]] == 1:\n        ans += [elements[-1]]\n    else:\n        is_possible = False\n    if is_possible:\n        print(*ans)\n    else:\n        print(-1)", "from collections import Counter\nMOD = 998244353\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = sorted(list(set(b)))\n    cnt = dict(Counter(b))\n    if n == 1:\n        print(a[0] if b == a * 2 else -1)\n    else:\n        med = (n - 1) // 2\n        if any((cnt[el] != 2 for el in a[:med])) or cnt[a[med]] != 3 or cnt[a[-1]] != 1 or any((cnt[el] != 2 for el in a[med + 1:-1])):\n            print(-1)\n        else:\n            print(' '.join(list(map(str, a))))", "from collections import deque\nfor tc in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    se = set()\n    dis = dict()\n    for x in ls:\n        if dis.get(x) is None:\n            dis[x] = 1\n        else:\n            dis[x] += 1\n        se.add(x)\n    se = sorted(list(se))\n    ln = 0\n    dip = dict()\n    const = []\n    for x in se:\n        const.append(x)\n        ln += 1\n        if ln % 2 == 0:\n            med = const[ln // 2 - 1]\n        else:\n            med = const[ln // 2]\n        if dip.get(med) is None:\n            dip[med] = 1\n        else:\n            dip[med] += 1\n    que = deque()\n    ln = 0\n    for x in range(len(se) - 1, -1, -1):\n        que.appendleft(se[x])\n        ln += 1\n        if ln % 2 == 0:\n            med = que[ln // 2 - 1]\n        else:\n            med = que[ln // 2]\n        if dip.get(med) is None:\n            dip[med] = 1\n        else:\n            dip[med] += 1\n    fl = False\n    for x in dip:\n        if dip[x] != dis[x]:\n            fl = True\n            break\n    if fl:\n        print(-1)\n    else:\n        print(*se)", "from collections import deque\nfor tc in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    se = set()\n    dis = dict()\n    for x in ls:\n        if dis.get(x) is None:\n            dis[x] = 1\n        else:\n            dis[x] += 1\n        se.add(x)\n    se = sorted(list(se))\n    ln = 0\n    dip = dict()\n    const = []\n    for x in se:\n        const.append(x)\n        ln += 1\n        if ln % 2 == 0:\n            med = const[ln // 2 - 1]\n        else:\n            med = const[ln // 2]\n        if dip.get(med) is None:\n            dip[med] = 1\n        else:\n            dip[med] += 1\n    que = deque()\n    ln = 0\n    for x in range(len(se) - 1, -1, -1):\n        que.appendleft(se[x])\n        ln += 1\n        if ln % 2 == 0:\n            med = que[ln // 2 - 1]\n        else:\n            med = que[ln // 2]\n        if dip.get(med) is None:\n            dip[med] = 1\n        else:\n            dip[med] += 1\n    fl = False\n    for x in dip:\n        if dip[x] != dis[x]:\n            fl = True\n            break\n    if fl:\n        print(-1)\n    else:\n        print(*se)", "import sys\nimport math\nfrom math import gcd, sqrt\nimport heapq as hq\nfrom bisect import bisect_right, bisect_left, bisect\nimport itertools\nfrom sys import stdin, stdout, setrecursionlimit\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\n\ndef Median(a):\n    n = len(a)\n    if n % 2 == 0:\n        return a[n // 2 - 1]\n    else:\n        return a[n // 2]\nT = 1\nT = int(stdin.readline())\nMOD = int(1000000000.0) + 7\nfor _ in range(T):\n    n = int(stdin.readline())\n    b = list(map(int, stdin.readline().rstrip().split()))\n    d = {}\n    for i in range(2 * n):\n        if b[i] not in d:\n            d[b[i]] = 1\n    a = list(d.keys())\n    a.sort()\n    if len(a) != n:\n        print(-1)\n        continue\n    B = []\n    for i in range(n):\n        B.append(Median(a[:i + 1]))\n    for i in range(n - 1, -1, -1):\n        B.append(Median(a[i:]))\n    B.sort()\n    b.sort()\n    if B == b:\n        print(*a)\n    else:\n        print(-1)", "from collections import Counter\nT = int(input())\ni = 1\nwhile i <= T:\n    i += 1\n    N = int(input())\n    nums = list(map(int, input().split()))\n    distinct_nums = list(set(nums))\n    c_distinct_nums = len(distinct_nums)\n    if c_distinct_nums != N:\n        print(-1)\n    else:\n        distinct_nums.sort()\n        counter = dict(Counter(nums))\n        median_pos = (N - 1) // 2\n        end_pos = N - 1\n        j = 0\n        while j < N:\n            if j == median_pos and j != end_pos:\n                count = 3\n            elif j != median_pos and j == end_pos:\n                count = 1\n            else:\n                count = 2\n            if counter[distinct_nums[j]] != count:\n                print(-1)\n                break\n            j += 1\n        if j == N:\n            print(*distinct_nums)", "import math\n\ndef rapidReOrdering(n, arr):\n    mapDictX = {}\n    for item in arr:\n        mapDictX[item] = mapDictX.get(item, 0) + 1\n    ansArr = sorted(mapDictX.keys())\n    medianIdx = math.ceil(n / 2)\n    for (idx, val) in enumerate(ansArr):\n        if idx == n - 1:\n            if mapDictX[val] != 1:\n                return -1\n        elif idx == medianIdx - 1:\n            if mapDictX[val] != 3:\n                return -1\n        elif mapDictX[val] != 2:\n            return -1\n    return ansArr\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split(' ')))\n    if n == 1:\n        if arr[0] == arr[1]:\n            print(arr[0])\n        else:\n            print(-1)\n    else:\n        ans = rapidReOrdering(n, arr)\n        if ans == -1:\n            print(-1)\n        else:\n            for i in ans:\n                print(i, end=' ')\n            print()", "from collections import Counter\nT = int(input())\ni = 1\nwhile i <= T:\n    i += 1\n    N = int(input())\n    nums = list(map(int, input().split()))\n    distinct_nums = list(set(nums))\n    c_distinct_nums = len(distinct_nums)\n    if c_distinct_nums != N:\n        print(-1)\n    else:\n        distinct_nums.sort()\n        counter = dict(Counter(nums))\n        median_pos = (N - 1) // 2\n        end_pos = N - 1\n        j = 0\n        while j < N:\n            if j == median_pos and j != end_pos:\n                count = 3\n            elif j != median_pos and j == end_pos:\n                count = 1\n            else:\n                count = 2\n            if counter[distinct_nums[j]] != count:\n                print(-1)\n                break\n            j += 1\n        if j == N:\n            print(*distinct_nums)", "def validarraycount(n):\n    L = [2 for i in range(n)]\n    midindex = n // 2\n    if n % 2:\n        midindex += 1\n    L[midindex - 1] = 3\n    L[n - 1] = 1\n    return L\nfor tc in range(int(input())):\n    n = int(input())\n    t = list(map(int, input().split()))\n    if len(t) == 2:\n        print(t[0]) if t[0] == t[1] else print(-1)\n        continue\n    x = []\n    A = []\n    t.sort()\n    i = 0\n    while i < 2 * n:\n        count = 1\n        j = i + 1\n        while j < 2 * n:\n            if t[j] == t[i]:\n                count += 1\n                j += 1\n            else:\n                break\n        x.append(count)\n        A.append(t[i])\n        i = j\n    y = validarraycount(n)\n    if len(A) != n:\n        print(-1)\n    elif x == y:\n        print(*A)\n    else:\n        print(-1)", "def validarraycount(n):\n    L = [2 for i in range(n)]\n    midindex = n // 2\n    if n % 2 == 1:\n        midindex += 1\n    L[midindex - 1] = 3\n    L[n - 1] = 1\n    return L\nT = int(input())\nfor tc in range(T):\n    n = int(input())\n    t = list(map(int, input().split()))\n    if len(t) == 2:\n        if t[0] == t[1]:\n            print(t[0])\n            continue\n        else:\n            print(-1)\n            continue\n    x = []\n    A = []\n    t.sort()\n    i = 0\n    while i < 2 * n:\n        count = 1\n        j = i + 1\n        while j < 2 * n:\n            if t[j] == t[i]:\n                count += 1\n                j += 1\n            else:\n                break\n        x.append(count)\n        A.append(t[i])\n        i = j\n    y = validarraycount(n)\n    if len(A) != n:\n        print(-1)\n    elif x == y:\n        A2 = list(map(str, A))\n        print(' '.join(A2))\n    else:\n        print(-1)", "def validarraycount(n):\n    L = [2 for i in range(n)]\n    midindex = n // 2\n    if n % 2 == 1:\n        midindex += 1\n    L[midindex - 1] = 3\n    L[n - 1] = 1\n    return L\nT = int(input())\nfor tc in range(T):\n    n = int(input())\n    t = list(map(int, input().split()))\n    if len(t) == 2:\n        if t[0] == t[1]:\n            print(t[0])\n            continue\n        else:\n            print(-1)\n            continue\n    x = []\n    A = []\n    t.sort()\n    i = 0\n    while i < 2 * n:\n        count = 1\n        j = i + 1\n        while j < 2 * n:\n            if t[j] == t[i]:\n                count += 1\n                j += 1\n            else:\n                break\n        x.append(count)\n        A.append(t[i])\n        i = j\n    y = validarraycount(n)\n    if len(A) != n:\n        print(-1)\n    elif x == y:\n        A2 = list(map(str, A))\n        print(' '.join(A2))\n    else:\n        print(-1)", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = dict()\n    for i in a:\n        if d.get(i):\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    a1 = sorted(d)\n    flag = 0\n    if n == 1:\n        if len(a1) != 1:\n            flag = 1\n        elif d[a1[0]] != 2:\n            flag = 1\n    else:\n        for i in range(n):\n            if i == n - 1:\n                if d[a1[i]] != 1:\n                    flag = 1\n                    break\n            elif (n - 1) // 2 == i:\n                if d[a1[i]] != 3:\n                    flag = 1\n                    break\n            elif d[a1[i]] != 2:\n                flag = 1\n                break\n    if flag == 0:\n        for i in a1:\n            print(i, end=' ')\n        print()\n    else:\n        print('-1')", "from collections import defaultdict\nfrom sys import stdin, stdout, setrecursionlimit\n(readline, writeline) = (stdin.readline, stdout.write)\nsetrecursionlimit(100005)\nfor _ in range(int(readline())):\n    n = int(input())\n    lst = list(map(int, readline().split()))\n    lst.sort()\n    s = set()\n    arr = []\n    for i in lst:\n        if i not in s:\n            arr.append(i)\n            s.add(i)\n    if len(s) != n:\n        print(-1)\n        continue\n    arr1 = [arr[0]]\n    l = len(arr)\n    for i in range(1, l):\n        arr1.append(arr[i // 2])\n    for i in range(l):\n        arr1.append(arr[(i + l - 1) // 2])\n    if lst == arr1:\n        print(*arr)\n    else:\n        print(-1)", "try:\n    for t in range(int(input())):\n        N = int(input())\n        B = list(map(int, input().split()))\n        B.sort()\n        A = list(set(B))\n        A.sort()\n        pos = (len(A) - 1) // 2\n        dic = {}\n        if N == 1:\n            if len(A) == 1:\n                print(B[0])\n                continue\n            else:\n                print(-1)\n                continue\n        for element in B:\n            if element not in dic:\n                dic[element] = 0\n            dic[element] += 1\n        val = list(dic.values())\n        if len(dic) == N:\n            if dic.get(A[pos]) == 3 and dic.get(A[-1]) == 1 and (val.count(2) == len(A) - 2):\n                print(*A)\n            else:\n                print(-1)\n        else:\n            print(-1)\nexcept:\n    pass", "def mod_inv(a):\n    return pow(a, MOD - 2, MOD)\nimport io, os, sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef Q1(S, A, B, C):\n    p = S * (1 + C / 100)\n    return 'YES' if p >= A and p <= B else 'NO'\n\ndef Q2(N, K):\n\n    def hcf(x, y):\n        return hcf(y, x % y) if y else x\n    return N // hcf(N, K)\nMOD = 998244353\nQ_inv = mod_inv(4)\n\ndef Q3(N):\n    return N * pow(N + 1, 2, MOD) * Q_inv % MOD\n\ndef Q4(N, B):\n    B.sort()\n    count = dict()\n    for b in B:\n        if b not in count:\n            count[b] = 1\n        else:\n            count[b] += 1\n    even = sum((1 for x in count if not count[x] % 2))\n    if N == 1:\n        return [B[0]] if B[0] == B[1] else [-1]\n    else:\n        m = N - 1 if N % 2 else N - 2\n        if (B[m] != B[m + 1] or B[m] != B[m + 2] or count[B[m]] != 3) or B[-1] == B[-2] or even != N - 2:\n            return [-1]\n        else:\n            return [B[2 * i + 1] for i in range(N - 1)] + [B[-1]]\nfor _ in range(inp()):\n    N = inp()\n    B = inlt()\n    outlt(Q4(N, B))", "def mod_inv(a):\n    return pow(a, MOD - 2, MOD)\nimport io, os, sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef Q1(S, A, B, C):\n    p = S * (1 + C / 100)\n    return 'YES' if p >= A and p <= B else 'NO'\n\ndef Q2(N, K):\n\n    def hcf(x, y):\n        return hcf(y, x % y) if y else x\n    return N // hcf(N, K)\nMOD = 998244353\nQ_inv = mod_inv(4)\n\ndef Q3(N):\n    return N * pow(N + 1, 2, MOD) * Q_inv % MOD\n\ndef Q4(N, B):\n    B.sort()\n    count = dict()\n    for b in B:\n        if b not in count:\n            count[b] = 1\n        else:\n            count[b] += 1\n    (odd, even) = ([], [])\n    for x in count:\n        if count[x] % 2:\n            odd.append(x)\n        else:\n            even.append(x)\n    if N == 1:\n        return [B[0]] if B[0] == B[1] else [-1]\n    else:\n        m = N - 1 if N % 2 else N - 2\n        if (B[m] != B[m + 1] or B[m] != B[m + 2] or count[B[m]] != 3) or B[-1] == B[-2] or len(even) != N - 2:\n            return [-1]\n        else:\n            A = [B[2 * i + 1] for i in range(N - 1)]\n            A.append(B[-1])\n            return A\nfor _ in range(inp()):\n    N = inp()\n    B = inlt()\n    outlt(Q4(N, B))", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    seti = list(set(b))\n    seti.sort()\n    c = Counter(b)\n    if n % 2 == 0:\n        mid = n // 2 - 1\n    else:\n        mid = n // 2\n    is_valid = True\n    if n == 1:\n        if c[seti[0]] != 2:\n            is_valid = False\n    elif len(seti) == n:\n        if c[seti[mid]] != 3:\n            is_valid = False\n        if c[seti[-1]] != 1:\n            is_valid = False\n        for i in range(n - 1):\n            if i != mid:\n                if c[seti[i]] != 2:\n                    is_valid = False\n    else:\n        is_valid = False\n    if is_valid:\n        print(*seti)\n    else:\n        print(-1)", "t = int(input())\nwhile t > 0:\n    n = int(input()) * 2\n    lst = list(map(int, input().split()))\n    sett = list(set(lst))\n    ans = []\n    sett.sort()\n    for i in range(len(sett)):\n        ans.append(sett[i // 2])\n        ans.append(sett[(len(sett) - 1 + i) // 2])\n    ans.sort()\n    lst.sort()\n    if ans == lst:\n        print(*sett)\n    else:\n        print(-1)\n    t -= 1", "t = int(input())\n\ndef f(l):\n    n = len(l) // 2\n    s = set(l)\n    d = {}\n    if len(s) == 1 and len(l) == 2:\n        return [l[0]]\n    if n == len(s):\n        a = sorted(list(s))\n        for j in s:\n            d[j] = 0\n        for k in l:\n            d[k] += 1\n        if n % 2 == 0:\n            m = n // 2 - 1\n        else:\n            m = n // 2\n        for x in range(n):\n            if x == m:\n                if d[a[x]] != 3:\n                    return [-1]\n            elif x == n - 1:\n                if d[a[x]] != 1:\n                    return [-1]\n            elif d[a[x]] != 2:\n                return [-1]\n        return a\n    return [-1]\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    y = list(map(str, f(l)))\n    print(' '.join(y))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    a = list(set(lst))\n    a.sort()\n    ns = []\n    for j in range(1, len(a) + 1):\n        if j % 2 != 0:\n            k = a[j // 2]\n            ns.append(k)\n        else:\n            k = a[j // 2 - 1]\n            ns.append(k)\n    r = a[::-1]\n    for j in range(1, len(a) + 1):\n        if j % 2 != 0:\n            k = r[j // 2]\n            ns.append(k)\n        else:\n            k = r[j // 2]\n            ns.append(k)\n    ns.sort()\n    if ns == lst:\n        g = list(set(ns))\n        g.sort()\n        print(*g)\n    else:\n        print('-1')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    a = list(set(lst))\n    a.sort()\n    ns = []\n    for j in range(1, len(a) + 1):\n        if j % 2 != 0:\n            k = a[j // 2]\n            ns.append(k)\n        else:\n            k = a[j // 2 - 1]\n            ns.append(k)\n    r = a[::-1]\n    for j in range(1, len(a) + 1):\n        if j % 2 != 0:\n            k = r[j // 2]\n            ns.append(k)\n        else:\n            k = r[j // 2]\n            ns.append(k)\n    ns.sort()\n    if ns == lst:\n        g = list(set(ns))\n        g.sort()\n        print(*g)\n    else:\n        print('-1')", "import math\n\ndef find_median(l):\n    if len(l) % 2 == 0:\n        return l[len(l) // 2 - 1]\n    else:\n        return l[math.floor(len(l) / 2)]\ntry:\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n = int(input())\n        b = list(map(int, input().split(' ')))\n        a = list(set(b))\n        a.sort()\n        b.sort()\n        ans = []\n        for i in range(1, len(a) + 1):\n            ans.append(find_median(a[:i]))\n        for i in range(1, len(a) + 1):\n            ans.append(find_median(a[-i:]))\n        ans.sort()\n        if ans == b:\n            for i in a:\n                print(i, end=' ')\n            print()\n        else:\n            print(-1)\nexcept:\n    pass", "from math import ceil, floor\n\ndef median(a):\n    n = len(a)\n    index = floor(n / 2) if n % 2 != 0 else n // 2 - 1\n    return a[index]\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split(' ')))\n    bFreq = {}\n    aFreq = {}\n    for i in range(2 * n):\n        bFreq[b[i]] = bFreq.get(b[i], 0) + 1\n    a = list(bFreq.keys())\n    a.sort()\n    n2 = len(a)\n    for pre in range(1, n2 + 1):\n        _median = median(a[:pre])\n        aFreq[_median] = aFreq.get(_median, 0) + 1\n        _median = median(a[-pre:])\n        aFreq[_median] = aFreq.get(_median, 0) + 1\n    f = 1\n    for (k, v) in aFreq.items():\n        if bFreq[k] == v:\n            pass\n        else:\n            f = 0\n            break\n    print((-1, ' '.join(list(map(str, a))))[f])", "from math import ceil, floor\n\ndef median(a):\n    n = len(a)\n    index = floor(n / 2) if n % 2 != 0 else n // 2 - 1\n    return a[index]\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split(' ')))\n    bFreq = {}\n    aFreq = {}\n    for i in range(2 * n):\n        bFreq[b[i]] = bFreq.get(b[i], 0) + 1\n    a = list(bFreq.keys())\n    a.sort()\n    n2 = len(a)\n    for pre in range(1, n2 + 1):\n        _median = median(a[:pre])\n        aFreq[_median] = aFreq.get(_median, 0) + 1\n        _median = median(a[-pre:])\n        aFreq[_median] = aFreq.get(_median, 0) + 1\n    f = 1\n    for (k, v) in aFreq.items():\n        if bFreq[k] == v:\n            pass\n        else:\n            f = 0\n            break\n    if f:\n        print(' '.join(list(map(str, a))))\n    else:\n        print(-1)", "from math import ceil, floor\n\ndef median(a):\n    n = len(a)\n    index = floor(n / 2) if n % 2 != 0 else n // 2 - 1\n    return a[index]\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split(' ')))\n    bFreq = {}\n    aFreq = {}\n    for i in range(2 * n):\n        if bFreq.get(b[i]) is None:\n            bFreq[b[i]] = 1\n        else:\n            bFreq[b[i]] += 1\n    a = list(bFreq.keys())\n    a.sort()\n    n2 = len(a)\n    for pre in range(1, n2 + 1):\n        _median = median(a[:pre])\n        if aFreq.get(_median) is None:\n            aFreq[_median] = 1\n        else:\n            aFreq[_median] += 1\n        _median = median(a[-pre:])\n        if aFreq.get(_median) is None:\n            aFreq[_median] = 1\n        else:\n            aFreq[_median] += 1\n    f = 1\n    for (k, v) in aFreq.items():\n        if bFreq[k] == v:\n            pass\n        else:\n            f = 0\n            break\n    if f:\n        print(' '.join(list(map(str, a))))\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = list(set(b))\n    c = []\n    a.sort()\n    for i in range(len(a)):\n        c.append(a[i // 2])\n        c.append(a[(len(a) - 1 + i) // 2])\n    c.sort()\n    b.sort()\n    if c == b:\n        print(*a)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        if len(set(a)) == 1:\n            print(a[0])\n        else:\n            print(-1)\n    else:\n        d = {}\n        for i in range(2 * n):\n            if a[i] not in d:\n                d[a[i]] = 0\n            d[a[i]] += 1\n        ke = list(d.keys())\n        ke.sort()\n        c = []\n        for i in range(len(ke)):\n            c.append(d[ke[i]])\n        ans = 1\n        if len(ke) == n:\n            l = (len(ke) - 1) // 2\n            for i in range(n):\n                if i == l:\n                    if c[i] != 3:\n                        ans = 0\n                        break\n                elif i == n - 1:\n                    if c[i] != 1:\n                        ans = 0\n                        break\n                elif c[i] != 2:\n                    ans = 0\n                    break\n            if ans:\n                print(*ke)\n            else:\n                print(-1)\n        else:\n            print(-1)", "from collections import Counter\n\ndef checksforTwo(b):\n    a = sorted(list(set(b)))\n    ans = 0\n    if b.count(min(a)) != 3:\n        ans = -1\n    if b.count(max(a)) != 1:\n        ans = -1\n    if ans != -1:\n        return a\n    else:\n        return [-1]\n\ndef checksforThreeMore(b):\n    ans = 0\n    c = Counter(b)\n    twiceOnes = list(filter(lambda x: c[x] == 2, c))\n    s = sorted(list(set(b)))\n    median = s[(len(s) - 1) // 2]\n    if c[median] != 3:\n        ans = -1\n    if c[max(b)] != 1:\n        ans = -1\n    if len(twiceOnes) != n - 2:\n        ans = -1\n    if ans != -1:\n        ans = sorted(s)\n    else:\n        ans = [-1]\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    if n == 1:\n        if b[0] == b[1]:\n            res = [b[0]]\n        else:\n            res = [-1]\n    elif n == 2:\n        res = checksforTwo(b)\n    else:\n        res = checksforThreeMore(b)\n    print(*res)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = Counter(arr)\n    m = max(arr)\n    if n == 1:\n        if arr[0] == arr[1]:\n            print(arr[0])\n        else:\n            print(-1)\n        continue\n    mid = n // 2 if n % 2 else n // 2 - 1\n    f = 1\n    if c[m] != 1:\n        print(-1)\n    else:\n        ans = []\n        i = 0\n        for el in sorted(c):\n            if f == 0:\n                break\n            if i != mid and i != n - 1:\n                if c[el] != 2:\n                    print(-1)\n                    f = 0\n                    break\n            elif i == mid:\n                if c[el] != 3:\n                    print(-1)\n                    f = 0\n                    break\n            ans.append(el)\n            i += 1\n        if f == 1:\n            print(*ans)", "from collections import Counter\nt = int(input())\nwhile t != 0:\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = list(set(b))\n    a.sort()\n    counts = dict(Counter(b))\n    if n == 1 and b[0] == b[1]:\n        print(b[0])\n    else:\n        if n % 2 == 0:\n            mid = n // 2 - 1\n        else:\n            mid = n // 2\n        isValid = True\n        for (value, count) in counts.items():\n            if value == a[mid]:\n                if count != 3:\n                    isValid = False\n                    break\n            elif value == a[-1]:\n                if count != 1:\n                    isValid = False\n                    break\n            elif count != 2:\n                isValid = False\n                break\n        a = [str(i) for i in a]\n        if isValid:\n            print(' '.join(a))\n        else:\n            print(-1)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    mid = (n - 1) // 2\n    if n == 1:\n        if lst[0] == lst[1]:\n            print(lst[0])\n        else:\n            print(-1)\n    else:\n        d = {}\n        for i in range(n * 2):\n            if lst[i] not in d:\n                d[lst[i]] = 1\n            else:\n                d[lst[i]] += 1\n        ele = list(sorted(d.keys()))\n        if len(ele) != n:\n            print(-1)\n        else:\n            for i in range(n):\n                if i == mid:\n                    if d[ele[i]] != 3:\n                        print(-1)\n                        break\n                elif i == n - 1:\n                    if d[ele[i]] != 1:\n                        print(-1)\n                        break\n                elif d[ele[i]] != 2:\n                    print(-1)\n                    break\n            else:\n                print(*ele)", "for tc in range(int(input())):\n    n = int(input())\n    se = set()\n    dis = dict()\n    ls = list(map(int, input().split()))\n    for x in ls:\n        if dis.get(x) is None:\n            dis[x] = 1\n        else:\n            dis[x] += 1\n        se.add(x)\n    pn = sorted(list(se))\n    if len(pn) == 1:\n        if dis[pn[0]] == 2:\n            print(*pn)\n        else:\n            print(-1)\n    else:\n        mid = len(pn) // 2\n        if len(pn) % 2 == 0:\n            mid -= 1\n        (a, b) = (pn[mid], pn[-1])\n        res = True\n        for x in dis:\n            if x == a:\n                if dis[x] == 3:\n                    pass\n                else:\n                    res = False\n                    break\n            elif x == b:\n                if dis[x] == 1:\n                    pass\n                else:\n                    res = False\n                    break\n            elif dis[x] == 2:\n                pass\n            else:\n                res = False\n                break\n        if res:\n            print(*pn)\n        else:\n            print(-1)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if n == 1:\n        if len(set(lst)) != 1:\n            print(-1)\n        else:\n            print(lst[0])\n    else:\n        s = set(lst)\n        lstf = list(s)\n        lstf.sort()\n        l = len(lstf)\n        if l % 2 == 0:\n            med = lstf[l // 2 - 1]\n        else:\n            med = lstf[l // 2]\n        m = max(lstf)\n        a = 0\n        if lst.count(med) == 3 and lst.count(m) == 1:\n            a += 1\n        if a == 0:\n            print(-1)\n        else:\n            lst.sort()\n            lst.remove(med)\n            lst.remove(med)\n            lst.remove(med)\n            lst.remove(m)\n            c2 = 0\n            if len(lst) % 2 != 0:\n                print(-1)\n            else:\n                for g in range(0, len(lst), 2):\n                    if lst[g] == lst[g + 1]:\n                        c2 += 1\n                if c2 == (2 * n - 4) // 2:\n                    print(*lstf)\n                else:\n                    print(-1)", "from sys import stdin\nfrom collections import Counter\n\ndef check1(arr):\n    new_dict = {}\n    for i in range(len(arr)):\n        temp = arr[:i + 1]\n        if len(temp) % 2 == 0:\n            value = len(temp) // 2\n            value -= 1\n            median = arr[value]\n        else:\n            value = len(temp) // 2\n            median = arr[value]\n        if median not in new_dict:\n            new_dict[median] = 1\n        else:\n            new_dict[median] += 1\n    return new_dict\n\ndef check2(arr):\n    new_dict = {}\n    for i in range(len(arr) - 1, -1, -1):\n        temp = arr[i:]\n        if len(temp) % 2 == 0:\n            value = len(temp) // 2\n            value -= 1\n            median = temp[value]\n        else:\n            value = len(temp) // 2\n            median = temp[value]\n        if median not in new_dict:\n            new_dict[median] = 1\n        else:\n            new_dict[median] += 1\n    return new_dict\nt = int(stdin.readline().rstrip())\nwhile t > 0:\n    n = int(stdin.readline().rstrip())\n    b = list(map(int, stdin.readline().strip().split(' ')[:2 * n]))\n    my_dict = Counter(b)\n    s = set(b)\n    arr = list(s)\n    arr.sort()\n    dict1 = check1(arr)\n    dict2 = check2(arr)\n    l1 = [0] * (max(arr) + 1)\n    for (key, item) in dict1.items():\n        l1[key] += item\n    for (key, item) in dict2.items():\n        l1[key] += item\n    flag = True\n    for (key, item) in my_dict.items():\n        if item == l1[key]:\n            flag = True\n        else:\n            flag = False\n            break\n    if flag:\n        print(*arr)\n    else:\n        print(-1)\n    t -= 1", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = defaultdict(lambda : 0)\n    for i in l:\n        d[i] += 1\n    new = []\n    for i in d.keys():\n        new.append(i)\n    new.sort()\n    if len(new) != n:\n        print(-1)\n    else:\n        z = []\n        for i in range(n):\n            z.append(new[i // 2])\n        s = new[::-1]\n        for j in range(n):\n            z.append(s[j // 2 + j % 2])\n        if sorted(z) == sorted(l):\n            print(*new)\n        else:\n            print(-1)", "from sys import stdin, stdout\ninp_num = lambda : int(input())\ninp_lis = lambda : list(map(int, input().split()))\nfor _ in range(inp_num()):\n    n = inp_num()\n    l = inp_lis()\n    l1 = list(set(l))\n    if len(l1) != n:\n        print(-1)\n        continue\n    if len(l1) == 1 and n == 1:\n        print(*l1)\n        continue\n    l1.sort()\n    dic = {}\n    for i in l1:\n        dic[i] = 0\n    for i in l:\n        dic[i] += 1\n    an = 1\n    for i in range(n):\n        if i == int((n + 1) / 2) - 1:\n            if dic[l1[i]] != 3:\n                an = 0\n                break\n            else:\n                continue\n        elif i == n - 1:\n            if dic[l1[i]] != 1:\n                an = 0\n                break\n            else:\n                continue\n        elif dic[l1[i]] == 2:\n            continue\n        else:\n            an = 0\n            break\n    if an == 0:\n        print(-1)\n    else:\n        print(*l1)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(j) for j in input().split()]\n    A = set(B)\n    l = []\n    for k in A:\n        l.append(k)\n    l.sort()\n    d = dict()\n    for k in l:\n        d[k] = 0\n    for k in B:\n        d[k] += 1\n    z = 2\n    if len(l) % 2 == 1:\n        s = len(l) // 2\n    else:\n        s = (len(l) - 1) // 2\n    m = []\n    if n == 1:\n        m.append(2)\n    elif n == 2:\n        m.append(3)\n        m.append(1)\n    else:\n        for k in range(len(l)):\n            if k == 0 and n != 1:\n                m.append(2)\n            elif k == 0 and n == 1:\n                m.append(1)\n            elif k == len(l) - 1:\n                m.append(1)\n            elif k == s:\n                m.append(3)\n            else:\n                m.append(z)\n    q = []\n    for (k, v) in d.items():\n        q.append(v)\n    if q == m:\n        for k in l:\n            print(k, end=' ')\n        print()\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(j) for j in input().split()]\n    A = set(B)\n    l = []\n    for k in A:\n        l.append(k)\n    l.sort()\n    d = dict()\n    for k in l:\n        d[k] = 0\n    for k in B:\n        d[k] += 1\n    z = 2\n    if len(l) % 2 == 1:\n        s = len(l) // 2\n    else:\n        s = (len(l) - 1) // 2\n    m = []\n    if n == 1:\n        m.append(2)\n    elif n == 2:\n        m.append(3)\n        m.append(1)\n    else:\n        for k in range(len(l)):\n            if k == 0 and n != 1:\n                m.append(2)\n            elif k == 0 and n == 1:\n                m.append(1)\n            elif k == len(l) - 1:\n                m.append(1)\n            elif k == s:\n                m.append(3)\n            else:\n                m.append(z)\n    q = []\n    for (k, v) in d.items():\n        q.append(v)\n    if q == m:\n        for k in l:\n            print(k, end=' ')\n        print()\n    else:\n        print(-1)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    if n == 1:\n        print(b[0])\n        continue\n    b.sort()\n    a = [-1] * n\n    j = 0\n    for i in range(1, 2 * n, 2):\n        if i < n:\n            if b[i] != b[i - 1]:\n                print(-1)\n                break\n            if i != 1 and b[i] == b[i - 2]:\n                print(-1)\n                break\n        elif i == n:\n            if b[i] != b[i - 1] or b[i] != b[i + 1]:\n                print(-1)\n                break\n            if b[i] == b[i - 2]:\n                print(-1)\n                break\n        else:\n            if i != 2 * n - 1 and b[i] != b[i + 1]:\n                print(-1)\n                break\n            if b[i] == b[i - 1]:\n                print(-1)\n                break\n        a[j] = b[i]\n        j += 1\n    else:\n        for i in range(n):\n            print(a[i], end=' ')\n    print('')", "from sys import stdin\ninput = stdin.readline\n\ndef answer():\n    ans = sorted(list(set(b)))\n    if len(ans) < n or len(ans) > n:\n        return [-1]\n    d = dict()\n    for i in range(2 * n):\n        d[b[i]] = d.get(b[i], 0) + 1\n    for i in range(n):\n        median = i // 2\n        if d[ans[median]] == 0:\n            return [-1]\n        d[ans[median]] -= 1\n    for i in range(n - 1, -1, -1):\n        median = i + (n - i - 1) // 2\n        if d[ans[median]] == 0:\n            return [-1]\n        d[ans[median]] -= 1\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    print(*answer())", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        if l[0] == l[1]:\n            print(l[0])\n            continue\n        else:\n            print(-1)\n            continue\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    t = 0\n    o = 0\n    th = 0\n    for i in d:\n        if d[i] == 2:\n            t += 1\n        if d[i] == 1:\n            o += 1\n        if d[i] == 3:\n            th += 1\n    if o != 1 or th != 1 or t != n - 2:\n        print(-1)\n    else:\n        if n % 2 == 0:\n            m = n // 2 - 1\n        else:\n            m = n // 2\n        ans = [0] * n\n        v = []\n        for i in d:\n            if d[i] == 1:\n                ans[-1] = i\n            if d[i] == 3:\n                ans[m] = i\n            if d[i] == 2:\n                v.append(i)\n        j = 0\n        v.sort()\n        for i in range(n):\n            if ans[i] == 0:\n                ans[i] = v[j]\n                j += 1\n        t = sorted(ans)\n        f = 0\n        for i in range(n):\n            if ans[i] != t[i]:\n                f = 1\n        if f == 1:\n            print(-1)\n        else:\n            print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    suffix_array = []\n    prefix_array = []\n    A = sorted(list(set(l1)))\n    n1 = len(A)\n    d1 = {}\n    for i in l1:\n        if i in d1.keys():\n            d1[i] += 1\n        else:\n            d1[i] = 1\n    for i in range(n1):\n        if (i + 1) % 2 == 0:\n            suffix_array.append(A[i // 2])\n            x = (2 * n1 - i - 2) // 2\n            prefix_array.append(A[x])\n        else:\n            suffix_array.append(A[(i + 1) // 2])\n            x = (2 * n1 - i - 2) // 2 + 1\n            prefix_array.append(A[x - 1])\n    for i in suffix_array:\n        if i in d1.keys():\n            d1[i] -= 1\n    for i in prefix_array:\n        if i in d1.keys():\n            d1[i] -= 1\n    flag = False\n    for i in d1.keys():\n        if d1[i] > 0:\n            print(-1)\n            flag = True\n            break\n    if flag == False:\n        print(*A)", "from collections import defaultdict\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    frq = defaultdict(int)\n    b = list(map(int, input().split(' ')))\n    for i in b:\n        frq[i] += 1\n    if n == 1:\n        if b[0] == b[1]:\n            print(b[0])\n        else:\n            print(-1)\n        continue\n    uniq = sorted(list(frq.keys()))\n    if len(uniq) != n:\n        print(-1)\n        continue\n    med = uniq[(n - 1) // 2]\n    last = uniq[n - 1]\n    ok = True\n    if frq[med] != 3 or frq[last] != 1:\n        ok = False\n    for i in range(n - 1):\n        if i != (n - 1) // 2 and frq[uniq[i]] != 2:\n            ok = False\n    if ok:\n        print(' '.join(map(str, uniq)))\n    else:\n        print(-1)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    di = {}\n    for i in range(2 * n):\n        if a[i] in di.keys():\n            di[a[i]] += 1\n        else:\n            di[a[i]] = 1\n    d = set(a)\n    d = list(d)\n    d.sort()\n    if len(d) != n:\n        print('-1')\n    elif n == 1:\n        print(d[0])\n    else:\n        k = d[(n - 1) // 2]\n        f = True\n        for i in range(n):\n            if i == (n - 1) // 2:\n                if di[d[i]] != 3:\n                    print('-1')\n                    f = False\n                    break\n            elif i == n - 1:\n                if di[d[i]] != 1:\n                    print('-1')\n                    f = False\n                    break\n            elif di[d[i]] != 2:\n                print('-1')\n                f = False\n                break\n        if f == True:\n            print(' '.join(map(str, d)))\n    t = t - 1", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    m = Counter(b)\n    a = list(set(b))\n    if len(a) != n:\n        print(-1)\n        continue\n    if n == 1:\n        print(*a)\n        continue\n    a.sort()\n    exp = [2] * n\n    exp[(n - 1) // 2] = 3\n    exp[-1] = 1\n    ok = True\n    for i in range(n):\n        if m[a[i]] != exp[i]:\n            ok = False\n            break\n    if ok:\n        print(*a)\n    else:\n        print(-1)", "def funcx(n, l2):\n    d1 = {}\n    if n == 1:\n        if l2[0] == l2[1]:\n            print(l2[0])\n            return\n        else:\n            print(-1)\n            return\n    for i in l2:\n        d1[i] = d1.get(i, 0) + 1\n    l1 = list(d1.keys())\n    l1.sort()\n    if len(l1) != n:\n        print(-1)\n        return\n    if d1[l1[-1]] != 1:\n        print(-1)\n        return\n    for i in range(n - 1):\n        if n % 2 == 1:\n            if i == n // 2:\n                if d1[l1[i]] != 3:\n                    print(-1)\n                    return\n            elif d1[l1[i]] != 2:\n                print(-1)\n                return\n        elif i == n // 2 - 1:\n            if d1[l1[i]] != 3:\n                print(-1)\n                return\n        elif d1[l1[i]] != 2:\n            print(-1)\n            return\n    print(*l1)\n    return\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = [int(i) for i in input().split()]\n    funcx(n, l1)", "from collections import defaultdict\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    d = defaultdict(lambda : 0)\n    for i in range(2 * N):\n        d[A[i]] += 1\n    ans = [0] * N\n    ll = list(d.keys())\n    l = list(d.values())\n    if N == 1:\n        if A[0] == A[-1]:\n            print(A[0])\n        else:\n            print(-1)\n    elif N == 2:\n        if d[ll[0]] == 3 and d[ll[1]] == 1 or (d[ll[0]] == 1 and d[ll[1]] == 3):\n            if d[ll[0]] == 3:\n                print(ll[0], ll[1])\n            else:\n                print(ll[1], ll[0])\n        else:\n            print(-1)\n    elif N > 2:\n        if l.count(1) != 1:\n            print(-1)\n        elif l.count(3) != 1:\n            print(-1)\n        elif l.count(2) != N - 2:\n            print(-1)\n        else:\n            j = 0\n            dd = ll\n            dd.sort()\n            if N % 2 != 0:\n                for i in dd:\n                    if d[i] == 2:\n                        if j == N // 2:\n                            j += 1\n                        ans[j] = i\n                        j += 1\n                    if d[i] == 3:\n                        ans[N // 2] = i\n                    if d[i] == 1:\n                        ans[-1] = i\n            else:\n                for i in dd:\n                    if d[i] == 2:\n                        if j == N // 2 - 1:\n                            j += 1\n                        ans[j] = i\n                        j += 1\n                    if d[i] == 3:\n                        ans[N // 2 - 1] = i\n                    if d[i] == 1:\n                        ans[-1] = i\n            k = sorted(ans)\n            if k == ans:\n                print(*ans)\n            else:\n                print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    d = {}\n    for i in b:\n        try:\n            if d[i]:\n                d[i] += 1\n        except KeyError:\n            d[i] = 1\n    if len(d) != n:\n        print(-1)\n    elif n == 1:\n        print(b[-1])\n    else:\n        a = []\n        for i in d:\n            a.append(i)\n        a.sort()\n        if n == 2:\n            if d[a[0]] == 3 and d[a[1]] == 1:\n                print(a[0], end=' ')\n                print(a[1])\n            else:\n                print(-1)\n            continue\n        f = 0\n        if n % 2 == 0:\n            for i in range(n // 2 - 1):\n                if d[a[i]] != 2:\n                    f = 1\n                    break\n            if f == 1:\n                print(-1)\n                continue\n            for i in range(n // 2, n - 1):\n                if d[a[i]] != 2:\n                    f = 1\n                    break\n            if f == 1:\n                print(-1)\n                continue\n            if d[a[-1]] == 1 and d[a[n // 2 - 1]] == 3:\n                for i in range(n):\n                    print(a[i], end=' ')\n                print()\n                continue\n            else:\n                print(-1)\n                continue\n        else:\n            for i in range(n // 2):\n                if d[a[i]] != 2:\n                    f = 1\n                    break\n            if f == 1:\n                print(-1)\n                continue\n            for i in range(n // 2 + 1, n - 1):\n                if d[a[i]] != 2:\n                    f = 1\n                    break\n            if f == 1:\n                print(-1)\n                continue\n            if d[a[-1]] == 1 and d[a[n // 2]] == 3:\n                for i in range(n):\n                    print(a[i], end=' ')\n                print()\n                continue\n            else:\n                print(-1)\n                continue", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    has = {}\n    for i in b:\n        if i not in has:\n            has[i] = 1\n        else:\n            has[i] += 1\n    flag = True\n    res = {}\n    for i in range(n):\n        t = i // 2\n        if t not in res:\n            res[t] = 1\n        else:\n            res[t] += 1\n    for i in range(n - 1, -1, -1):\n        t = math.ceil((n - 1 + i) // 2)\n        if t not in res:\n            res[t] = 1\n        else:\n            res[t] += 1\n    pre = sorted(list(set(b)))\n\n    def solve(has, res, pre):\n        for i in range(len(pre)):\n            if has[pre[i]] == res[i]:\n                continue\n            else:\n                print(-1)\n                return\n        print(*pre)\n        return\n    solve(has, res, pre)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    l1 = set(l)\n    l1 = sorted(l1)\n    flag = 1\n    if n == 1:\n        if len(l1) != 1:\n            flag = 0\n    elif l.count(l1[-1]) == 1:\n        mid = int((n - 1) / 2)\n        if l.count(l1[mid]) == 3:\n            for i in l1:\n                if i != l1[-1] and i != l1[mid]:\n                    if l.count(i) != 2:\n                        flag = 0\n                        break\n        else:\n            flag = 0\n    else:\n        flag = 0\n    if flag:\n        for i in l1:\n            print(i, end=' ')\n        print()\n    else:\n        print(-1)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    c = Counter(b)\n    if n == 1:\n        if len(set(b)) == 2:\n            print(-1)\n        else:\n            print(b[0])\n        continue\n    ck = list(c.keys())\n    cv = list(c.values())\n    se = list(set(b))\n    se.sort()\n    if len(se) < n:\n        print(-1)\n        continue\n    dick = dict(zip(ck, cv))\n    if len(se) % 2 == 0:\n        mid = len(se) // 2 - 1\n    else:\n        mid = len(se) // 2\n    if n >= 3:\n        if dick[se[-1]] == 1 and dick[se[mid]] == 3 and (cv.count(2) == n - 2):\n            print(*se)\n        else:\n            print(-1)\n    elif n == 2:\n        if dick[se[-1]] == 1 and dick[se[mid]] == 3:\n            print(*se)\n        else:\n            print(-1)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if n == 1 and lst[0] == lst[1]:\n        print(lst[0])\n    else:\n        lst.sort()\n        dic = defaultdict(lambda : 0)\n        for i in lst:\n            dic[i] += 1\n        arr = sorted(list(dic.keys()))\n        if n % 2 == 0:\n            x = arr[n // 2 - 1]\n            y = arr[-1]\n            for i in dic.keys():\n                if i == x and dic[i] != 3:\n                    print(-1)\n                    break\n                elif i == y and dic[i] != 1:\n                    print(-1)\n                    break\n                elif i != x and i != y and (dic[i] != 2):\n                    print(-1)\n                    break\n            else:\n                print(*arr)\n        else:\n            x = arr[n // 2]\n            y = arr[-1]\n            for i in dic.keys():\n                if i == x and dic[i] != 3:\n                    print(-1)\n                    break\n                elif i == y and dic[i] != 1:\n                    print(-1)\n                    break\n                elif i != x and i != y and (dic[i] != 2):\n                    print(-1)\n                    break\n            else:\n                print(*arr)", "t = int(input())\n\ndef median(a):\n    return a[(len(a) + 1) // 2 - 1]\nfor _ in range(t):\n    n = int(input())\n    medians = [int(x) for x in input().split()]\n    elements = set()\n    for x in medians:\n        elements.add(x)\n    elements = list(elements)\n    elements.sort()\n    medians.sort()\n    flag = True\n    for i in range(n):\n        m1 = median(elements[:i + 1])\n        m2 = median(elements[-(i + 1):])\n        if m1 != medians[i] or m2 != medians[-(i + 1)]:\n            flag = False\n            break\n    if len(elements) != n:\n        print(-1)\n        continue\n    if flag:\n        for x in elements:\n            print(x, end=' ')\n        print()\n    else:\n        print(-1)", "for _ in range(int(input())):\n    int(input())\n    arr = list(map(int, input().split()))\n    ar1 = set(arr)\n    ar1 = list(ar1)\n    ar1.sort()\n    try:\n        ind = 0\n        for i in range(1, len(ar1) + 1):\n            arr.remove(ar1[ind])\n            if i % 2 == 0:\n                ind += 1\n        ar1.reverse()\n        ind = 0\n        for i in range(len(ar1)):\n            arr.remove(ar1[ind])\n            if i % 2 == 0:\n                ind += 1\n        if len(arr) == 0:\n            ar1.reverse()\n            for i in ar1:\n                print(i, end=' ')\n            print()\n        else:\n            print(-1)\n    except:\n        print(-1)", "from collections import defaultdict\nfrom sys import stdin, stdout, setrecursionlimit\n(readline, writeline) = (stdin.readline, stdout.write)\nsetrecursionlimit(100005)\nfor _ in range(int(readline())):\n    n = int(input())\n    lst = list(map(int, readline().split()))\n    lst.sort()\n    s = set()\n    arr = []\n    for i in lst:\n        if i not in s:\n            arr.append(i)\n            s.add(i)\n    if len(s) != n:\n        print(-1)\n        continue\n    arr1 = [arr[0]]\n    l = len(arr)\n    for i in range(1, l):\n        arr1.append(arr[i // 2])\n    for i in range(l):\n        arr1.append(arr[(i + l - 1) // 2])\n    if lst == arr1:\n        print(*arr)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    s = set()\n    arr.sort()\n    for i in arr:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n            s.add(i)\n    ss = []\n    ans = True\n    for i in s:\n        ss.append(i)\n    if n == 1:\n        print(*ss)\n        continue\n    maxm = max(ss)\n    l = len(ss)\n    ss.sort()\n    if d[maxm] != 1:\n        print(-1)\n        ans = False\n    else:\n        d[maxm] = 0\n        if l % 2 == 0:\n            temp = l // 2 - 1\n        else:\n            temp = l // 2\n        if d[ss[temp]] != 3:\n            ans = False\n            print(-1)\n        else:\n            d[ss[temp]] = 0\n            for i in d:\n                if d[i] != 2 and d[i] != 0:\n                    print(-1)\n                    ans = False\n                    break\n    if ans == True:\n        if n != l:\n            print(-1)\n        else:\n            print(*ss)"]