["for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        a.append(a[i])\n    r = 0\n    for i in range(2 * n):\n        r = r ^ a[i]\n        a[i] = r\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] += 1\n        else:\n            d[a[i]] = 1\n    res = len(d)\n    for i in range(n, 2 * n):\n        if a[i] in d:\n            d[a[i]] += 1\n        else:\n            d[a[i]] = 1\n        d[a[i - n]] -= 1\n        if d[a[i - n]] == 0:\n            del d[a[i - n]]\n        res = max(res, len(d))\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        a.append(a[i])\n    r = 0\n    for i in range(2 * n):\n        r = r ^ a[i]\n        a[i] = r\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] += 1\n        else:\n            d[a[i]] = 1\n    res = len(d)\n    for i in range(n, 2 * n):\n        if a[i] in d:\n            d[a[i]] += 1\n        else:\n            d[a[i]] = 1\n        d[a[i - n]] -= 1\n        if d[a[i - n]] == 0:\n            del d[a[i - n]]\n        res = max(res, len(d))\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        a.append(a[i])\n    r = 0\n    for i in range(2 * n):\n        r = r ^ a[i]\n        a[i] = r\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] += 1\n        else:\n            d[a[i]] = 1\n    res = len(d)\n    for i in range(n, 2 * n):\n        if a[i] in d:\n            d[a[i]] += 1\n        else:\n            d[a[i]] = 1\n        d[a[i - n]] -= 1\n        if d[a[i - n]] == 0:\n            del d[a[i - n]]\n        res = max(res, len(d))\n    print(res)", "from collections import defaultdict\nfrom collections import Counter\nfrom collections import deque\nimport math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    prefix = [arr[0]]\n    freq = defaultdict(int)\n    freq[prefix[0]] += 1\n    for i in range(1, n):\n        prefix.append(prefix[-1] ^ arr[i])\n        freq[prefix[i]] += 1\n    x = prefix[-1]\n    mx = ans = len(freq)\n    for i in range(n):\n        freq[prefix[i]] -= 1\n        if not freq[prefix[i]]:\n            ans -= 1\n        x ^= arr[i]\n        if not freq[x]:\n            ans += 1\n        freq[x] += 1\n        mx = max(ans, mx)\n    print(mx)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a == [a[0]] * n:\n        if a[0] == 0:\n            print(1)\n        else:\n            print(2)\n    else:\n        (xor_dict, xor, ans) = ({}, 0, 0)\n        cnt = 0\n        for i in range(n):\n            xor = xor ^ a[i]\n            try:\n                xor_dict[xor] += 1\n            except:\n                xor_dict[xor] = 1\n                cnt += 1\n        (ans, total) = (max(ans, cnt), xor)\n        for i in range(n - 1):\n            xor = xor ^ a[i]\n            try:\n                xor_dict[xor] += 1\n            except:\n                xor_dict[xor] = 1\n            if xor_dict[xor] == 1:\n                cnt += 1\n            pref = xor ^ total\n            if xor_dict[pref] == 1:\n                cnt -= 1\n            xor_dict[pref] -= 1\n            ans = max(ans, cnt)\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a += a\n    b = [a[0]]\n    for i in range(1, 2 * n):\n        b.append(b[-1] ^ a[i])\n    m = 0\n    d = dict()\n    for i in range(n):\n        if b[i] not in d:\n            d[b[i]] = 1\n            m += 1\n        else:\n            d[b[i]] += 1\n    if d[b[0]] == 1:\n        loc = m - 1\n        del d[b[0]]\n    else:\n        loc = m\n        d[b[0]] -= 1\n    k = 1\n    for j in range(n, 2 * n):\n        if b[j] in d:\n            d[b[j]] += 1\n        else:\n            loc += 1\n            d[b[j]] = 0\n        m = max(m, loc)\n        if d[b[k]] == 1:\n            loc -= 1\n            del d[b[k]]\n        else:\n            d[b[k]] -= 1\n        k += 1\n    print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a += a\n    b = []\n    b.append(a[0])\n    for j in range(1, 2 * n):\n        b.append(b[j - 1] ^ a[j])\n    mx = 0\n    d = {}\n    for j in range(n):\n        if b[j] not in d:\n            d[b[j]] = 1\n            mx += 1\n        else:\n            d[b[j]] += 1\n    if d[b[0]] == 1:\n        loc = mx - 1\n        del d[b[0]]\n    else:\n        loc = mx\n        d[b[0]] -= 1\n    k = 1\n    for j in range(n, 2 * n):\n        if b[j] in d:\n            d[b[j]] += 1\n        else:\n            loc += 1\n            d[b[j]] = 0\n        mx = max(mx, loc)\n        if d[b[k]] == 1:\n            loc -= 1\n            del d[b[k]]\n        else:\n            d[b[k]] -= 1\n        k += 1\n    print(mx)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    s = 0\n    b = []\n    d = {}\n    for j in range(0, n):\n        a.append(a[j])\n        s = s ^ a[j]\n        b.append(s)\n        try:\n            d[s] += 1\n        except Exception:\n            d[s] = 1\n    for j in range(n, n + n):\n        s = s ^ a[j]\n        b.append(s)\n    ans = set(b[:n])\n    c = len(ans)\n    for j in range(0, n):\n        if d[b[j]] == 1:\n            ans.remove(b[j])\n        d[b[j]] -= 1\n        try:\n            d[b[n + j]] += 1\n        except Exception:\n            d[b[n + j]] = 1\n        ans.add(b[n + j])\n        c = max(len(ans), c)\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    nums += nums\n    keep = {nums[0]: 1}\n    for i in range(1, 2 * n):\n        nums[i] ^= nums[i - 1]\n        if i < n:\n            keep[nums[i]] = keep[nums[i]] + 1 if nums[i] in keep else 1\n    ans = temp = len(keep)\n    for i in range(n):\n        if nums[i] in keep:\n            keep[nums[i]] -= 1\n            if not keep[nums[i]]:\n                keep.pop(nums[i])\n                temp -= 1\n        if nums[i + n] in keep:\n            keep[nums[i + n]] += 1\n        else:\n            keep[nums[i + n]] = 1\n            temp += 1\n        ans = max(ans, temp)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    x = 0\n    c = 0\n    for j in range(n):\n        x = x ^ a[j]\n        if x in d:\n            d[x] += 1\n        else:\n            c += 1\n            d[x] = 1\n    y = 0\n    maxo = c\n    for j in range(n):\n        y = y ^ a[j]\n        if y in d:\n            d[y] -= 1\n            if d[y] == 0:\n                c -= 1\n        x = x ^ a[j]\n        if x not in d or d[x] == 0:\n            d[x] = 1\n            c += 1\n        else:\n            d[x] += 1\n        maxo = max(maxo, c)\n    print(maxo)", "for tcase in range(int(input())):\n    n = int(input())\n    a = [0] * (2 * n)\n    i = 0\n    for ai in map(int, input().split()):\n        a[i] = a[i + n] = ai\n        i += 1\n    b = [a[0]]\n    for ai in a[1:]:\n        b.append(b[-1] ^ ai)\n    r = 0\n    c = 0\n    last = dict()\n    while r < n:\n        if b[r] not in last:\n            c += 1\n        last[b[r]] = r\n        r += 1\n    l = 0\n    ans = c\n    while l < n:\n        if last[b[l]] == l:\n            c -= 1\n            del last[b[l]]\n        l += 1\n        if b[r] not in last:\n            c += 1\n        last[b[r]] = r\n        r += 1\n        ans = max(ans, c)\n    print(ans)", "import fileinput\nfrom collections import defaultdict\n\ndef attempt1(n, aP):\n    maxvals = 0\n    for shift in range(n):\n        vals = set()\n        xorv = 0\n        for i in range(n):\n            xorv = xorv ^ aP[(i - shift) % n]\n            vals.add(xorv)\n        l = len(vals)\n        if l > maxvals:\n            maxvals = l\n    return maxvals\n\ndef attempt2(n, aP):\n    counters = defaultdict(int)\n    maxvalue = 0\n    currentv = 0\n    curhash_ = 0\n    for i in range(n):\n        curhash_ = curhash_ ^ aP[i]\n        counters[curhash_] += 1\n        if counters[curhash_] == 1:\n            currentv += 1\n        lastv = curhash_\n    maxvalue = currentv\n    for sh in range(1, n):\n        newe = aP[n - sh]\n        removed = lastv\n        counters[removed] -= 1\n        if counters[removed] == 0:\n            counters.pop(removed)\n            currentv -= 1\n        xounters = defaultdict(int)\n        for (k, d) in counters.items():\n            xounters[k ^ newe] = d\n        counters = xounters\n        counters[newe] += 1\n        if counters[newe] == 1:\n            currentv += 1\n        if currentv > maxvalue:\n            maxvalue = currentv\n    return maxvalue\n\ndef attempt3(n, aP):\n    counters = defaultdict(int)\n    maxvalue = 0\n    currentv = 0\n    curhash_ = 0\n    for i in range(n):\n        curhash_ = curhash_ ^ aP[i]\n        counters[curhash_] += 1\n        if counters[curhash_] == 1:\n            currentv += 1\n        lastv = curhash_\n    maxvalue = currentv\n    modifier = 0\n    for sh in range(1, n):\n        newe = aP[n - sh]\n        removed = modifier ^ lastv\n        counters[removed] -= 1\n        if counters[removed] == 0:\n            currentv -= 1\n        modifier ^= newe\n        counters[modifier ^ newe] += 1\n        if counters[modifier ^ newe] == 1:\n            currentv += 1\n        if currentv > maxvalue:\n            maxvalue = currentv\n    return maxvalue\nwith fileinput.input() as f:\n    t = int(f.readline().strip())\n    for i in range(t):\n        n = int(f.readline().strip())\n        aP = [int(e) for e in f.readline().strip().split(' ')]\n        if len(aP) != n:\n            raise ValueError('input length mismatch')\n        mv = attempt3(n, aP)\n        print(mv)", "import sys\nsys.setrecursionlimit(10 ** 6)\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr += arr\n    temp = 0\n    for i in range(2 * n):\n        arr[i] = arr[i] ^ temp\n        temp = arr[i]\n    h = Counter(arr[:n])\n    c = [len(h)]\n    for i in range(0, n):\n        if arr[i + n] not in h:\n            h[arr[i + n]] = 0\n        h[arr[i + n]] += 1\n        h[arr[i]] -= 1\n        if h[arr[i]] == 0:\n            del h[arr[i]]\n        c.append(len(h))\n    print(max(c))", "import sys\nsys.setrecursionlimit(10 ** 6)\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr += arr\n    temp = 0\n    for i in range(2 * n):\n        arr[i] = arr[i] ^ temp\n        temp = arr[i]\n    h = Counter(arr[:n])\n    c = [len(h)]\n    for i in range(0, n):\n        if arr[i + n] not in h:\n            h[arr[i + n]] = 0\n        h[arr[i + n]] += 1\n        h[arr[i]] -= 1\n        if h[arr[i]] == 0:\n            del h[arr[i]]\n        c.append(len(h))\n    print(max(c))", "import sys\nsys.setrecursionlimit(10 ** 6)\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr += arr\n    temp = 0\n    for i in range(2 * n):\n        arr[i] = arr[i] ^ temp\n        temp = arr[i]\n    h = Counter(arr[:n])\n    c = [len(h)]\n    for i in range(0, n):\n        if arr[i + n] not in h:\n            h[arr[i + n]] = 0\n        h[arr[i + n]] += 1\n        h[arr[i]] -= 1\n        if h[arr[i]] == 0:\n            del h[arr[i]]\n        c.append(len(h))\n    print(max(c))"]