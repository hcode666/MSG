["t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    aind = []\n    bind = []\n    for i in range(n):\n        aind.append([a[i], i])\n    for i in range(n):\n        bind.append([b[i], i])\n    aind.sort()\n    bind.sort()\n    c = 0\n    for i in range(n):\n        if aind[i][1] > bind[i][1]:\n            c -= aind[i][0] * (aind[i][1] - bind[i][1])\n        else:\n            c += aind[i][0] * (bind[i][1] - aind[i][1])\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    aind = []\n    bind = []\n    for i in range(n):\n        aind.append([a[i], i])\n    for i in range(n):\n        bind.append([b[i], i])\n    aind.sort()\n    bind.sort()\n    c = 0\n    for i in range(n):\n        if aind[i][1] > bind[i][1]:\n            c -= aind[i][0] * (aind[i][1] - bind[i][1])\n        else:\n            c += aind[i][0] * (bind[i][1] - aind[i][1])\n    print(c)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if b[i] in d:\n            d[b[i]].append(i)\n        else:\n            d[b[i]] = [i]\n    c = 0\n    for i in range(n):\n        ind = d[a[i]][-1]\n        d[a[i]] = d[a[i]][:-1]\n        c += (ind - i) * a[i]\n    print(c)", "import sys\nfrom math import *\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans -= l[i] * (i + 1)\n        ans += p[i] * (i + 1)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = [[a[x], x] for x in range(n)]\n    b = [[b[x], x] for x in range(n)]\n    a = sorted(a)\n    b = sorted(b)\n    ans = 0\n    for j in range(n):\n        if b[j][1] != a[j][1]:\n            ans += a[j][0] * (b[j][1] - a[j][1])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = [[a[i], i] for i in range(n)]\n    b = [[b[i], i] for i in range(n)]\n    a = sorted(a)\n    b = sorted(b)\n    ans = 0\n    for i in range(n):\n        if b[i][1] != a[i][1]:\n            ans += a[i][0] * (b[i][1] - a[i][1])\n    print(ans)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    res = 0\n    for i in range(1, n + 1):\n        res -= i * arr1[i - 1]\n    for i in range(1, n + 1):\n        res += i * arr2[i - 1]\n    print(res)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    c = 0\n    for i in range(n):\n        c += b[i] * (i + 1) - a[i] * (i + 1)\n    print(c)", "ans = ''\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        s -= a[i] * i\n    for i in range(n):\n        s += b[i] * i\n    ans += str(s) + '\\n'\nprint(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mo_left = 0\n    mo_right = 0\n    for i in range(n):\n        mo_left += -1 * (i + 1) * a[i]\n        mo_right += (i + 1) * b[i]\n    print(mo_right + mo_left)", "test = int(input())\nfor t in range(test):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = [(A[i], i) for i in range(N)]\n    D = [(B[i], i) for i in range(N)]\n    C.sort(key=lambda x: x[0])\n    D.sort(key=lambda x: x[0])\n    cost = 0\n    for i in range(N):\n        cost += C[i][0] * (D[i][1] - C[i][1])\n    print(cost)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    A = sum((ele * (i + 1) for (i, ele) in enumerate(a)))\n    B = sum((ele * (i + 1) for (i, ele) in enumerate(b)))\n    print(B - A)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    A = sum((ele * (i + 1) for (i, ele) in enumerate(a)))\n    B = sum((ele * (i + 1) for (i, ele) in enumerate(b)))\n    print(B - A)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    sa = sum([b[i] * (i + 1) - a[i] * (i + 1) for i in range(n)])\n    print(sa)", "for h in range(int(input())):\n    art = input()\n    a = input().split(' ')\n    a = list(map(int, a))\n    b = input().split(' ')\n    b = list(map(int, b))\n    summer = 0\n    s2 = 0\n    c = 1\n    for i in a:\n        summer += i * c\n        c += 1\n    c = 1\n    for i in b:\n        s2 += i * c\n        c += 1\n    print(s2 - summer)", "from sys import stdin\ninp = stdin.readline\nT = int(inp())\nans = []\nfor tx in range(T):\n    N = int(inp())\n    A_score = sum((p * a for (p, a) in enumerate(map(int, inp().split()))))\n    B_score = sum((p * b for (p, b) in enumerate(map(int, inp().split()))))\n    ans.append(B_score - A_score)\nprint(*ans, sep='\\n')", "from sys import stdin\ninp = stdin.readline\n\ndef arrange_cost(arr1, arr2):\n    stval = sum((p * a for (p, a) in enumerate(arr1)))\n    enval = sum((p * a for (p, a) in enumerate(arr2)))\n    return enval - stval\nT = int(inp())\nans = []\nfor tx in range(T):\n    N = int(inp())\n    Ays = map(int, inp().split())\n    Bs = map(int, inp().split())\n    ans.append(arrange_cost(Ays, Bs))\nprint(*ans, sep='\\n')", "def inIntList():\n    return [int(x) for x in input().split()]\n\ndef inInt():\n    return int(input())\n\ndef outList(lst):\n    for data in lst:\n        print(data)\n\ndef solveA():\n    for _ in range(inInt()):\n        (M, N, K) = inIntList()\n        ans.append('YES' if M > N * K else 'NO')\n\ndef solveB():\n    for _ in range(inInt()):\n        (N, P, X, Y) = inIntList()\n        A = inIntList()\n        child = A[:P].count(0)\n        elder = P - child\n        ans.append(X * child + Y * elder)\n\ndef solveC():\n    for _ in range(inInt()):\n        S = input()\n        old = S[0]\n        wand = 1 if old == '0' else 0\n        for new in S[1:]:\n            if old != new:\n                wand += 1\n                old = new\n        ans.append(wand)\n\ndef solveD():\n    for _ in range(inInt()):\n        (P, a, b, c, x, y) = inIntList()\n        ans.append(P // min(b + a * x, c + a * y))\n\ndef solveE():\n\n    def gcd(x, y):\n        return gcd(y, x % y) if x % y else y\n    for _ in range(inInt()):\n        (a, b) = inIntList()\n        common = gcd(a, b)\n        while common != 1:\n            a //= common\n            common = gcd(a, b)\n        ans.append('YES' if a == 1 else 'NO')\n\ndef solveF():\n    for _ in range(inInt()):\n        N = inInt()\n        (A, B) = (inIntList(), inIntList())\n        ans.append(sum(((N - i) * (A[i] - B[i]) for i in range(N))))\nans = []\nsolveF()\noutList(ans)", "def inIntList():\n    return [int(x) for x in input().split()]\n\ndef inInt():\n    return int(input())\n\ndef outList(lst):\n    for data in lst:\n        print(data)\n\ndef solveA():\n    for _ in range(inInt()):\n        (M, N, K) = inIntList()\n        ans.append('YES' if M > N * K else 'NO')\n\ndef solveB():\n    for _ in range(inInt()):\n        (N, P, X, Y) = inIntList()\n        A = inIntList()\n        child = A[:P].count(0)\n        elder = P - child\n        ans.append(X * child + Y * elder)\n\ndef solveC():\n    for _ in range(inInt()):\n        S = input()\n        old = S[0]\n        wand = 1 if old == '0' else 0\n        for new in S[1:]:\n            if old != new:\n                wand += 1\n                old = new\n        ans.append(wand)\n\ndef solveD():\n    for _ in range(inInt()):\n        (P, a, b, c, x, y) = inIntList()\n        ans.append(P // min(b + a * x, c + a * y))\n\ndef solveE():\n\n    def gcd(x, y):\n        return gcd(y, x % y) if x % y else y\n    for _ in range(inInt()):\n        (a, b) = inIntList()\n        common = gcd(a, b)\n        while common != 1:\n            a //= common\n            common = gcd(a, b)\n        ans.append('YES' if a == 1 else 'NO')\n\ndef solveF():\n    for _ in range(inInt()):\n        N = inInt()\n        (A, B) = (inIntList(), inIntList())\n        result = 0\n        dic = {}\n        for (i, a) in enumerate(A):\n            if a in dic:\n                dic[a].add(i)\n            else:\n                dic[a] = set([i])\n        for (i, b) in enumerate(B):\n            if b == A[i]:\n                dic[b].remove(i)\n                continue\n            ai = dic[b].pop()\n            dic[A[i]].remove(i)\n            dic[A[i]].add(ai)\n            A[ai] = A[i]\n            result += (ai - i) * (A[i] - b)\n        ans.append(result)\nans = []\nsolveF()\noutList(ans)", "import math\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arra = []\n    arrb = []\n    for i in range(n):\n        temp = [a[i], i]\n        arra.append(temp)\n        temp = [b[i], i]\n        arrb.append(temp)\n    arra.sort()\n    arrb.sort()\n    ans = 0\n    for i in range(n):\n        ans += arra[i][0] * (arrb[i][1] - arra[i][1])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    sum = 0\n    for i in range(n):\n        sum = sum - a[i] * (i + 1) + b[i] * (i + 1)\n    print(sum)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    score = 0\n    for i in range(n):\n        score -= (i + 1) * a[i]\n    for j in range(n):\n        score += (j + 1) * b[j]\n    print(score)", "def check(l1, l2, n):\n    a = b = c = 0\n    for i in range(n):\n        a += l1[i]\n        b += l2[i]\n        c += a - b\n    return c\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = [int(i) for i in input().split()]\n    l2 = [int(i) for i in input().split()]\n    print(check(l1, l2, n))", "for r in range(int(input())):\n    n = list(map(int, input().split()))\n    a = [0]\n    a += list(map(int, input().split()))\n    b = [0]\n    b += list(map(int, input().split()))\n    score = 0\n    for i in range(1, len(a)):\n        score -= i * a[i]\n    a = []\n    for i in range(1, len(b)):\n        score += i * b[i]\n    print(score)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, len(a)):\n        ans -= a[i] * i\n    for i in range(1, len(b)):\n        ans += b[i] * i\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans -= a[i] * (i + 1)\n    for i in range(n):\n        ans += b[i] * (i + 1)\n    print(ans)", "import sys\ninput = lambda : sys.stdin.readline().strip()\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    B = 0\n    A = 0\n    for i in range(1, n + 1):\n        A += a[i - 1] * i\n    for i in range(1, n + 1):\n        B += b[i - 1] * i\n    print(B - A)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        count += b[i] * (i + 1) - a[i] * (i + 1)\n    print(count)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans += i * (b[i] - a[i])\n    sys.stdout.write(str(ans) + '\\n')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans -= i * a[i]\n    for i in range(n):\n        ans += i * b[i]\n    print(ans)", "def mainFunc():\n    length = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    count = 0\n    for i in range(length):\n        count -= A[i] * i\n    for j in range(length):\n        count += B[j] * j\n    print(count)\ntests = int(input())\nwhile tests:\n    mainFunc()\n    tests -= 1", "def mainFunc():\n    length = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    count = 0\n    for i in range(length):\n        count -= A[i] * i\n    for j in range(length):\n        count += B[j] * j\n    print(count)\ntests = int(input())\nwhile tests:\n    mainFunc()\n    tests -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(sum([(i + 1) * (b[i] - a[i]) for i in range(n)]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    counta = 0\n    countb = 0\n    for i in range(n):\n        counta += (i + 1) * a[i]\n        countb += (i + 1) * b[i]\n    ans = countb - counta\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    counta = 0\n    countb = 0\n    for i in range(n):\n        counta += (i + 1) * a[i]\n        countb += (i + 1) * b[i]\n    counta = -1 * counta\n    ans = countb + counta\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if a == b:\n        print(0)\n        continue\n    counta = 0\n    countb = 0\n    for i in range(n):\n        counta += (i + 1) * a[i]\n    counta = -1 * counta\n    for i in range(n):\n        countb += (i + 1) * b[i]\n    ans = countb + counta\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    counta = 0\n    countb = 0\n    for i in range(n):\n        counta += (i + 1) * a[i]\n    counta = -1 * counta\n    for i in range(n):\n        countb += (i + 1) * b[i]\n    ans = countb + counta\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    (a, b, s1, s2) = ([], [], 0, 0)\n    for i in range(len(p)):\n        s1 += p[i]\n        a.append(s1)\n    for i in range(len(q)):\n        s2 += q[i]\n        b.append(s2)\n    ans = 0\n    for i in range(len(a)):\n        ans += a[i] - b[i]\n    print(ans)", "from collections import defaultdict\n\ndef solve(n, a, b):\n    index_map = defaultdict(list)\n    for i in range(n):\n        index_map[a[i]].append(i)\n    cost = 0\n    for i in range(n):\n        start = index_map[b[i]].pop()\n        cost = cost + b[i] * (i - start)\n    return cost\nt = int(input().strip())\ninputs = []\nfor _ in range(t):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    inputs.append((n, a, b))\nfor (n, a, b) in inputs:\n    print(solve(n, a, b))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans += -1 * (i + 1) * a[i]\n    for i in range(n):\n        ans += (i + 1) * b[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    cnt = x = y = 0\n    for i in range(n):\n        x += a[i]\n        y += b[i]\n        cnt += x - y\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    aind = []\n    bind = []\n    for i in range(n):\n        aind.append([a[i], i])\n    for i in range(n):\n        bind.append([b[i], i])\n    aind.sort()\n    bind.sort()\n    c = 0\n    for i in range(n):\n        c -= aind[i][0] * (aind[i][1] - bind[i][1])\n    print(c)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    b = [int(x) for x in input().split(' ')]\n    x = y = z = 0\n    for j in range(n):\n        x += a[j]\n        y += b[j]\n        z += x - y\n    print(z)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        ans -= a[i] * (i + 1)\n        ans += b[i] * (i + 1)\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    new = []\n    tar = []\n    for i in range(n):\n        new.append([a[i], i])\n        tar.append([b[i], i])\n    new.sort()\n    tar.sort()\n    ans = 0\n    for i in range(n):\n        if new[i][-1] < tar[i][-1]:\n            ans -= new[i][0] * abs(new[i][-1] - tar[i][-1])\n        else:\n            ans += new[i][0] * abs(new[i][-1] - tar[i][-1])\n    print(-ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        count -= (i + 1) * A[i]\n    for i in range(n):\n        count += (i + 1) * B[i]\n    print(count)", "a = input()\nfor i in range(int(a)):\n    n = int(input())\n    arr1 = [int(x) for x in input().split()]\n    arr2 = [int(x) for x in input().split()]\n    aa = 0\n    bb = 0\n    ans = 0\n    for i in range(n):\n        aa += arr1[i]\n        bb += arr2[i]\n        ans += aa - bb\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    r = 0\n    for i in range(1, n + 1):\n        r -= i * a[i - 1]\n    for i in range(1, n + 1):\n        r += i * b[i - 1]\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    aa = 0\n    bb = 0\n    for i in range(n):\n        aa += a[i]\n        bb += b[i]\n        ans += aa - bb\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s1 = 0\n    s2 = 0\n    for i in range(n):\n        s1 += a[i] * i\n        s2 += b[i] * i\n    print(s2 - s1)", "def solution():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    points = 0\n    a.insert(0, 0)\n    for i in range(n + 1):\n        points -= i * a[i]\n    for i in range(n):\n        points += (i + 1) * b[i]\n    print(points)\nfor _ in range(int(input())):\n    solution()", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split(' ')]\n    B = [int(x) for x in input().split(' ')]\n    assert N == len(A)\n    assert N == len(B)\n    x = y = z = 0\n    for j in range(N):\n        x += A[j]\n        y += B[j]\n        z += x - y\n    print(z)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    brr = [int(i) for i in input().split()]\n    score = 0\n    for i in range(n):\n        score += -(i + 1) * arr[i]\n    for i in range(n):\n        score += (i + 1) * brr[i]\n    print(score)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    s = 0\n    for i in range(N):\n        s += B[i] * (i + 1) - A[i] * (i + 1)\n    print(s)", "inf = float('inf')\nimport sys\nimport pprint\nimport logging\nfrom logging import getLogger\nimport array\n\ndef input():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef maps():\n    return [int(i) for i in input().split()]\nlogging.basicConfig(format='%(message)s', level=logging.WARNING)\nlogger = getLogger(__name__)\nlogger.setLevel(logging.INFO)\n\ndef debug(msg, *args):\n    logger.info(f'{msg}={pprint.pformat(args)}')\n\ndef sol1():\n    from itertools import accumulate\n    for i in range(*maps()):\n        (n,) = maps()\n        a = list(accumulate(maps()))\n        b = list(accumulate(maps()))\n        s = 0\n        for i in range(n):\n            s += a[i] - b[i]\n        print(s)\n\ndef sol2():\n    for __ in range(*maps()):\n        (n,) = maps()\n        a = [*maps()]\n        b = [*maps()]\n        ans = 0\n        for i in range(n):\n            ans -= (i + 1) * a[i]\n            ans += (i + 1) * b[i]\n        print(ans)\nsol2()", "def main():\n    tc = int(input())\n    while tc > 0:\n        n = int(input())\n        a1 = input().split()\n        a2 = input().split()\n        sum_a = [0] * n\n        sum_b = [0] * n\n        sum_a[0] = int(a1[0])\n        sum_b[0] = int(a2[0])\n        power = sum_a[0] - sum_b[0]\n        for i in range(1, n):\n            sum_a[i] = sum_a[i - 1] + int(a1[i])\n            sum_b[i] = sum_b[i - 1] + int(a2[i])\n            val = sum_a[i] - sum_b[i]\n            power += val\n        print(power)\n        tc -= 1\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    count = 0\n    l1 = l2 = 0\n    for i in range(n):\n        l1 += a[i]\n        l2 += b[i]\n        count += l1 - l2\n    print(count)", "for j in range(int(input())):\n    a = int(input())\n    lst1 = list(map(int, input().split(' ')))\n    lst2 = list(map(int, input().split(' ')))\n    c = 0\n    s = 0\n    b = 0\n    if lst1 == lst2:\n        print(0)\n    else:\n        for i in range(a):\n            s += lst1[i]\n            b += lst2[i]\n            c += s - b\n        print(c)", "def func6(l1, l2, n):\n    a = b = c = 0\n    for i in range(n):\n        a += l1[i]\n        b += l2[i]\n        c += a - b\n    print(c)\n    return\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = [int(i) for i in input().split()]\n    l2 = [int(i) for i in input().split()]\n    func6(l1, l2, n)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = a[-1]\n    y = 1\n    for i in range(n - 2, -1, -1):\n        xx = x + a[i]\n        a[i] = y * a[i] - x\n        x = xx\n        y += 1\n    x = b[-1]\n    y = 1\n    for i in range(n - 2, -1, -1):\n        xx = x + b[i]\n        b[i] = y * b[i] - x\n        x = xx\n        y += 1\n    (ans, a[-1], b[-1]) = (0, 0, 0)\n    for i in range(n):\n        ans += a[i]\n        ans -= b[i]\n    print(ans // 2)", "def main():\n    tc = int(input())\n    while tc > 0:\n        n = int(input())\n        a1 = input().split()\n        a2 = input().split()\n        sum_a = [0] * n\n        sum_b = [0] * n\n        sum_a[0] = int(a1[0])\n        sum_b[0] = int(a2[0])\n        power = sum_a[0] - sum_b[0]\n        for i in range(1, n):\n            sum_a[i] = sum_a[i - 1] + int(a1[i])\n            sum_b[i] = sum_b[i - 1] + int(a2[i])\n            val = sum_a[i] - sum_b[i]\n            power += val\n        print(power)\n        tc -= 1\nmain()", "from math import gcd\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    temp = arr[n - 1]\n    sz = 1\n    for i in range(n - 2, -1, -1):\n        tempp = temp + arr[i]\n        arr[i] = sz * arr[i] - temp\n        temp = tempp\n        sz += 1\n    temp = brr[n - 1]\n    sz = 1\n    for i in range(n - 2, -1, -1):\n        tempp = temp + brr[i]\n        brr[i] = sz * brr[i] - temp\n        temp = tempp\n        sz += 1\n    ans = 0\n    arr[n - 1] = 0\n    brr[n - 1] = 0\n    for i in range(n):\n        ans += arr[i]\n        ans -= brr[i]\n    print(ans // 2)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if b[i] in d:\n            d[b[i]].append(i)\n        else:\n            d[b[i]] = [i]\n    c = 0\n    for i in range(n):\n        ind = d[a[i]][-1]\n        d[a[i]] = d[a[i]][:-1]\n        c += (ind - i) * a[i]\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    temp = a[-1]\n    size = 1\n    for i in range(n - 2, -1, -1):\n        t = temp + a[i]\n        a[i] = size * a[i] - temp\n        temp = t\n        size += 1\n    temp = b[-1]\n    size = 1\n    for i in range(n - 2, -1, -1):\n        t = temp + b[i]\n        b[i] = size * b[i] - temp\n        temp = t\n        size += 1\n    ans = 0\n    (a[-1], b[-1]) = (0, 0)\n    for i in range(n):\n        ans += a[i]\n        ans -= b[i]\n    print(ans // 2)", "inf = float('inf')\nimport sys\nimport pprint\nimport logging\nfrom logging import getLogger\nimport array\n\ndef input():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef maps():\n    return [int(i) for i in input().split()]\nlogging.basicConfig(format='%(message)s', level=logging.WARNING)\nlogger = getLogger(__name__)\nlogger.setLevel(logging.INFO)\n\ndef debug(msg, *args):\n    logger.info(f'{msg}={pprint.pformat(args)}')\nfrom itertools import accumulate\nfor i in range(*maps()):\n    (n,) = maps()\n    a = list(accumulate(maps()))\n    b = list(accumulate(maps()))\n    s = 0\n    for i in range(n):\n        s += a[i] - b[i]\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s1 = 0\n    s2 = 0\n    for i in range(n):\n        s1 += a[i] * i\n        s2 += b[i] * i\n    print(s2 - s1)", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    pre_ind = {}\n    for i in range(n):\n        pre_ind[brr[i]] = []\n    for i in range(n):\n        pre_ind[brr[i]].append(i)\n    total = 0\n    for i in range(n):\n        next = pre_ind[arr[i]].pop()\n        total += (next - i) * arr[i]\n    print(total)\nt = 1\nt = int(input())\nfor test in range(t):\n    main()", "def main():\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    ALPHA = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    inf = 1e+17\n    mod = 10 ** 9 + 7\n\n    def factorial(n):\n        f = 1\n        for i in range(1, n + 1):\n            f = f * i % mod\n        return f\n\n    def ncr(n, r):\n        num = den = 1\n        for i in range(r):\n            num = num * (n - i) % mod\n            den = den * (i + 1) % mod\n        return num * pow(den, mod - 2, mod) % mod\n\n    def solve(n, a, b):\n        b_ind = dict()\n        for i in range(n):\n            if b[i] in b_ind:\n                b_ind[b[i]] += [i]\n            else:\n                b_ind[b[i]] = [i]\n        for ele in b_ind:\n            b_ind[ele] = sorted(b_ind[ele], reverse=True)\n        cnt = 0\n        for i in range(n):\n            best = b_ind[a[i]].pop()\n            cnt += (best - i) * a[i]\n        return cnt\n        pass\n    t = int(input())\n    ans = []\n    for _ in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        b = [int(x) for x in input().split()]\n        ans.append(solve(n, a, b))\n    p = 1\n    for answer in ans:\n        print(answer)\n        p += 1\nimport sys, threading\nimport bisect\nimport math\nimport itertools\nfrom sys import stdout\nimport heapq\nfrom queue import PriorityQueue\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    aind = []\n    bind = []\n    for i in range(n):\n        aind.append([a[i], i])\n    for i in range(n):\n        bind.append([b[i], i])\n    aind.sort()\n    bind.sort()\n    c = 0\n    for i in range(n):\n        if aind[i][1] > bind[i][1]:\n            c -= aind[i][0] * (aind[i][1] - bind[i][1])\n        else:\n            c += aind[i][0] * (bind[i][1] - aind[i][1])\n    print(c)", "def flex_it(arr, lex, size):\n    j = 0\n    ans = 0\n    k = 0\n    rem = 0\n    while j < len(arr):\n        if k == 0:\n            rem = j\n        if k < size:\n            if ans < lex:\n                j = rem + 1\n                ans = 0\n                k = 0\n                continue\n            j += 1\n            k += 1\n        if k == size:\n            return True\n    else:\n        if k == size and ans >= lex:\n            return True\n        return False\nfor ii in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[b[i]] = []\n    for i in range(n):\n        d[b[i]].append(i)\n    ans = 0\n    for i in range(n):\n        j = d[a[i]].pop()\n        ans += (j - i) * a[i]\n    print(ans)", "from sys import stdin\ninput = stdin.readline\n\ndef answer():\n    prefix = [0]\n    for i in range(n):\n        prefix.append(prefix[-1] + a[i])\n    d = dict()\n    for i in range(n):\n        try:\n            d[a[i]].append(i + 1)\n        except:\n            d[a[i]] = [i + 1]\n    (ans, sub) = (0, 0)\n    for i in range(n - 1, -1, -1):\n        j = d[b[i]].pop()\n        ans += (n - j) * a[j - 1] - (prefix[n] - prefix[j])\n        ans -= (n - j) * a[j - 1] - sub\n        sub += b[i]\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(answer())"]