["import numpy as np\n\ndef inp():\n    return int(input())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\n\ndef lexsmall(freqarr):\n    for j in np.unique(freqarr):\n        if freqarr.count(j) % j != 0:\n            print(-1)\n            return\n    num = 1\n    dic = {}\n    lex = []\n    for i in freqarr:\n        if i not in dic:\n            dic[i] = (num, i - 1)\n            num += 1\n        elif dic[i][1] != 0:\n            (num_, i_) = dic[i]\n            dic[i] = (num_, i_ - 1)\n        else:\n            dic[i] = (num, i - 1)\n            num += 1\n        print(dic[i][0], end=' ')\n    print()\n\ndef main():\n    for i in range(inp()):\n        lent = inp()\n        lexsmall(lis())\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if b[i] not in d:\n            d[b[i]] = 1\n        else:\n            d[b[i]] += 1\n    nums = 0\n    for i in d:\n        nums += d[i] / i\n    if nums % 1 != 0:\n        print(-1)\n        continue\n    else:\n        nums = int(nums)\n    ans = [0 for i in range(len(b))]\n    num = 0\n    d1 = {}\n    d2 = {}\n    for i in range(len(b)):\n        if b[i] not in d1:\n            num += 1\n            d1[b[i]] = num\n            d2[num] = 1\n            ans[i] = num\n        elif d2[d1[b[i]]] % b[i] != 0:\n            ans[i] = d1[b[i]]\n            d2[d1[b[i]]] += 1\n        else:\n            num += 1\n            d1[b[i]] = num\n            d2[num] = 1\n            ans[i] = d1[b[i]]\n    for i in ans:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = list()\n    ref = dict()\n    j = 1\n    for i in b:\n        if i == 1:\n            a.append(j)\n            j += 1\n        else:\n            if i not in ref.keys():\n                ref[i] = [j, i]\n                j += 1\n            a.append(ref[i][0])\n            ref[i][1] -= 1\n            if not ref[i][1]:\n                ref.pop(i)\n    if ref:\n        print(-1)\n    else:\n        print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    flag = 0\n    list1 = list(map(int, input().split()))\n    dict1 = {}\n    num = []\n    ans = []\n    for j in range(len(list1)):\n        num.append(j + 1)\n        if list1[j] not in dict1:\n            dict1[list1[j]] = 1\n        else:\n            dict1[list1[j]] += 1\n    for k in dict1.keys():\n        if dict1[k] % k != 0:\n            flag = -1\n            break\n    if flag != -1:\n        q = 0\n        dict3 = {}\n        dict2 = {}\n        x = []\n        for r in range(len(list1)):\n            x = dict2.keys()\n            if list1[r] not in x:\n                dict3[list1[r]] = num[q]\n                dict2[list1[r]] = 1\n                ans.append(num[q])\n                q += 1\n                if list1[r] == 1:\n                    del dict3[list1[r]]\n                    del dict2[list1[r]]\n            elif list1[r] > dict2[list1[r]]:\n                ans.append(dict3[list1[r]])\n                dict2[list1[r]] += 1\n                if dict2[list1[r]] == list1[r]:\n                    del dict3[list1[r]]\n                    del dict2[list1[r]]\n        print(*ans)\n    else:\n        print('-1')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "for i in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, list(input().split())))\n    d = {}\n    ans = []\n    count = 1\n    for j in range(0, n):\n        if a[j] in d.keys():\n            ans.append(d[a[j]][0])\n        else:\n            d[a[j]] = [[count, a[j]]]\n            count += 1\n            ans.append(d[a[j]][0])\n        d[a[j]][0][1] -= 1\n        if d[a[j]][0][1] == 0:\n            del d[a[j]]\n    if len(d) != 0:\n        print(-1)\n    else:\n        for j in range(n):\n            print(ans[j][0], ' ', end='')\n        print('\\n')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "import random\nimport math\nfrom collections import defaultdict, Counter, deque, OrderedDict\nfrom functools import lru_cache\nimport bisect\nimport heapq\nimport sys\ninput = lambda : sys.stdin.readline().strip()\n\nclass SegmentTree:\n\n    def __init__(self, arr, func=lambda x, y: x + y, defaultvalue=0):\n        self.n = len(arr)\n        self.segmentTree = [0] * self.n + arr\n        self.func = func\n        self.defaultvalue = defaultvalue\n        self.buildSegmentTree(arr)\n\n    def buildSegmentTree(self, arr):\n        for i in range(self.n - 1, 0, -1):\n            self.segmentTree[i] = self.func(self.segmentTree[2 * i], self.segmentTree[2 * i + 1])\n\n    def query(self, l, r):\n        l += self.n\n        r += self.n\n        res = self.defaultvalue\n        while l < r:\n            if l & 1:\n                res = self.func(res, self.segmentTree[l])\n                l += 1\n            l >>= 1\n            if r & 1:\n                r -= 1\n                res = self.func(res, self.segmentTree[r])\n            r >>= 1\n        return res\n\n    def update(self, i, value):\n        i += self.n\n        self.segmentTree[i] = value\n        while i > 1:\n            i >>= 1\n            self.segmentTree[i] = self.func(self.segmentTree[2 * i], self.segmentTree[2 * i + 1])\n\nclass UnionFind:\n\n    def __init__(self, n):\n        self.n = n\n        self.parents = list(range(n))\n\n    def find(self, x):\n        if self.parents[x] == x:\n            return x\n        else:\n            self.parents[x] = self.find(self.parents[x])\n            return self.parents[x]\n\n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n        if x != y:\n            self.parents[x] = y\ndire = [0, 1, 0, -1, 0]\n\ndef is_prime(n):\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef ncr(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = num * (n - i) % p\n        den = den * (i + 1) % p\n    return num * pow(den, p - 2, p) % p\n\ndef case(t):\n    print('Case #{}:'.format(t), end=' ')\nRANDOM = random.randrange(2 ** 62)\n\ndef Wrapper(x):\n    return x ^ RANDOM\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = Counter()\n    mapp = {}\n    ans = []\n    last = 0\n    for i in range(n):\n        if c[arr[i]] == 0:\n            last += 1\n            mapp[arr[i]] = last\n            c[arr[i]] = arr[i] - 1\n            ans.append(last)\n        else:\n            c[arr[i]] -= 1\n            ans.append(mapp[arr[i]])\n    for i in c:\n        if c[i] != 0:\n            print(-1)\n            return\n    print(*ans)\nfor t in range(int(input())):\n    solve()", "T = int(input())\nwhile T:\n    T -= 1\n    n = int(input())\n    b = list(map(int, input().split()))\n    d = {b[0]: [1]}\n    numsl = [0, b[0] - 1]\n    if not numsl[1]:\n        del d[b[0]][0]\n    ans = [1]\n    num = 2\n    if n == 1:\n        print(1)\n    else:\n        for i in b[1:]:\n            if i not in d or not d[i]:\n                if i - 1:\n                    d[i] = [num]\n                ans.append(num)\n                num += 1\n                numsl.append(i - 1)\n            else:\n                ans.append(d[i][0])\n                numsl[d[i][0]] -= 1\n                if not numsl[d[i][0]]:\n                    del d[i][0]\n        if sum(numsl):\n            print(-1)\n        else:\n            print(*ans)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = []\n    d = {}\n    c = 0\n    f = False\n    cnt = Counter(arr)\n    for j in range(n):\n        i = arr[j]\n        if i in d:\n            if cnt[i] % i == 0:\n                c += 1\n                d[i] = c\n                ans.append(c)\n            else:\n                ans.append(d[i])\n            cnt[i] -= 1\n        elif cnt[i] % i == 0:\n            c += 1\n            d[i] = c\n            cnt[i] = -1\n            ans.append(c)\n        else:\n            f = True\n            break\n    if f == True:\n        print(-1)\n    else:\n        print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    nl = [int(x) for x in input().split()]\n    dic = {}\n    for i in nl:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    flag = 0\n    for i in nl:\n        if dic[i] % i != 0:\n            flag = 1\n            break\n    if flag:\n        print(-1)\n    else:\n        aa = {}\n        bc = {}\n        j = 1\n        arr = []\n        for i in nl:\n            if i in aa:\n                arr += [bc[i]]\n                aa[i] += 1\n                if aa[i] == i:\n                    del aa[i]\n            else:\n                aa[i] = 1\n                bc[i] = j\n                arr += [j]\n                if aa[i] == i:\n                    del aa[i]\n                j += 1\n        for i in range(n):\n            print(arr[i], end=' ')\n        print()", "import collections\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dic = {}\n    dic1 = {}\n    frequency = collections.Counter(l)\n    dic0 = dict(frequency)\n    flag = 0\n    for keys in dic0.keys():\n        if dic0[keys] % keys != 0:\n            flag = 1\n            break\n    j = 0\n    if flag == 0:\n        for i in l:\n            if i not in dic.keys():\n                j = j + 1\n                dic[i] = j\n                dic1[i] = i - 1\n                print(j, end=' ')\n            elif dic1[i] > 0:\n                dic1[i] = dic1[i] - 1\n                print(dic[i], end=' ')\n            else:\n                j = j + 1\n                dic[i] = j\n                dic1[i] = i - 1\n                print(dic[i], end=' ')\n        print()\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    elem = {}\n    cnt = {}\n    num = 1\n    ans = [0 for i in range(n)]\n    for i in range(n):\n        if a[i] not in elem:\n            elem[a[i]] = num\n            cnt[num] = 1\n            ans[i] = num\n            num += 1\n        else:\n            e = elem[a[i]]\n            if cnt[e] % a[i] != 0:\n                ans[i] = e\n                cnt[e] += 1\n            else:\n                ans[i] = num\n                elem[a[i]] = num\n                cnt[num] = 1\n                num += 1\n    temp = {}\n    for e in ans:\n        temp[e] = temp.get(e, 0) + 1\n    f = 0\n    for i in range(n):\n        if a[i] != temp[ans[i]]:\n            f = 1\n            break\n    if f == 0:\n        print(*ans)\n    else:\n        print(-1)", "def Solve(freq, n):\n    (d, ans) = ({}, [])\n    (next_element, size) = (1, 0)\n    for i in range(n):\n        if freq[i] == 1:\n            size += 1\n            ans.append(next_element)\n            next_element += 1\n        elif freq[i] not in d:\n            size += freq[i]\n            d[freq[i]] = [1, next_element]\n            ans.append(next_element)\n            next_element += 1\n        else:\n            value = d[freq[i]][1]\n            ans.append(value)\n            d[freq[i]][0] += 1\n            if d[freq[i]][0] >= freq[i]:\n                del d[freq[i]]\n    if size > n:\n        return [-1]\n    else:\n        return ans\nfor _ in range(int(input())):\n    n = int(input())\n    freq = list(map(int, input().split()))\n    print(*Solve(freq, n))", "def Solve(freq, n):\n    (d, ans) = ({}, [])\n    (next_element, size) = (1, 0)\n    for i in range(n):\n        if freq[i] == 1:\n            size += 1\n            ans.append(next_element)\n            next_element += 1\n        elif freq[i] not in d:\n            size += freq[i]\n            d[freq[i]] = [1, next_element]\n            ans.append(next_element)\n            next_element += 1\n        else:\n            value = d[freq[i]][1]\n            ans.append(value)\n            d[freq[i]][0] += 1\n            if d[freq[i]][0] >= freq[i]:\n                del d[freq[i]]\n    if size > n:\n        return [-1]\n    else:\n        return ans\nfor _ in range(int(input())):\n    n = int(input())\n    freq = list(map(int, input().split()))\n    print(*Solve(freq, n))", "from collections import defaultdict, Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    flag = 0\n    for i in c:\n        if c[i] % i != 0:\n            flag = 1\n            break\n    if flag:\n        print(-1)\n        continue\n    d = defaultdict(lambda : [0, 0])\n    t = 0\n    ans = []\n    for i in a:\n        if i in d and d[i][1] == i:\n            t += 1\n            d[i] = [t, 0]\n        if i not in d:\n            t += 1\n            ans.append(t)\n            d[i][0] = t\n        else:\n            ans.append(d[i][0])\n        d[i][1] += 1\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    (d, ans, cnt, impossible) = (dict(), [], 1, False)\n    for i in range(n):\n        if d.get(b[i], [0, 0])[1] == 0:\n            d[b[i]] = [cnt, b[i] - 1]\n            cnt += 1\n        else:\n            d[b[i]][1] -= 1\n        ans.append(str(d[b[i]][0]))\n    for k in d.keys():\n        if d[k][1] > 0:\n            impossible = True\n            break\n    print(' '.join(ans) if not impossible else -1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set(a)\n    b = dict.fromkeys(b, 0)\n    for i in a:\n        b[i] += 1\n    res = True\n    for i in b:\n        if b[i] % i != 0:\n            print(-1)\n            res = False\n            break\n    if res == True:\n        j = 1\n        l = [0] * n\n        dic = {}\n        for i in range(n):\n            if b[a[i]] % a[i] == 0:\n                dic[a[i]] = j\n                j += 1\n            b[a[i]] -= 1\n            l[i] = dic[a[i]]\n        print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = [-1 for i in range(n)]\n    dic = {}\n    for i in range(n):\n        if b[i] in dic:\n            dic[b[i]].append(i)\n        else:\n            dic[b[i]] = [i]\n    yes = 1\n    for i in dic.keys():\n        if len(dic[i]) % i:\n            yes = 0\n            break\n    if yes == 0:\n        print('-1')\n        continue\n    num = 1\n    for i in range(n):\n        if a[i] != -1:\n            continue\n        for j in range(b[i]):\n            a[dic[b[i]][0]] = str(num)\n            dic[b[i]].pop(0)\n        num += 1\n    print(' '.join(a))", "NumTests = int(input())\nfor test in range(NumTests):\n    N = int(input())\n    B = list(map(int, input().split(' ')))\n    freqdict = {}\n    for b in B:\n        if b in freqdict.keys():\n            freqdict[b] += 1\n        else:\n            freqdict[b] = 1\n    flag = 'Pass'\n    for k in freqdict:\n        if freqdict[k] % k != 0:\n            flag = 'Fail'\n            break\n    if flag == 'Fail':\n        print(-1)\n        continue\n    Result = []\n    nextfree = 1\n    trackerdict1 = {}\n    trackerdict2 = {}\n    for b in B:\n        if b in trackerdict1.keys():\n            Result.append(trackerdict1[b])\n            trackerdict2[b] -= 1\n        else:\n            trackerdict1[b] = nextfree\n            trackerdict2[b] = b - 1\n            Result.append(nextfree)\n            nextfree += 1\n        if trackerdict2[b] == 0:\n            del trackerdict2[b]\n            del trackerdict1[b]\n    for r in Result:\n        print(r, end=' ')\n    print()", "NumTests = int(input())\nfor test in range(NumTests):\n    N = int(input())\n    B = list(map(int, input().split(' ')))\n    freqdict = {}\n    for b in B:\n        if b in freqdict.keys():\n            freqdict[b] += 1\n        else:\n            freqdict[b] = 1\n    flag = 'Pass'\n    for k in freqdict:\n        if freqdict[k] % k != 0:\n            flag = 'Fail'\n            break\n    if flag == 'Fail':\n        print(-1)\n        continue\n    Result = []\n    nextfree = 1\n    trackerdict1 = {}\n    trackerdict2 = {}\n    for b in B:\n        if b in trackerdict1.keys():\n            Result.append(trackerdict1[b])\n            trackerdict2[b] -= 1\n        else:\n            trackerdict1[b] = nextfree\n            trackerdict2[b] = b - 1\n            Result.append(nextfree)\n            nextfree += 1\n        if trackerdict2[b] == 0:\n            del trackerdict2[b]\n            del trackerdict1[b]\n    for r in Result:\n        print(r, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "for _ in range(int(input())):\n    _ = input()\n    b = list(map(int, input().split()))\n    updated = set()\n    num = 1\n    for i in range(len(b)):\n        if i in updated:\n            continue\n        bi = b[i]\n        b[i] = num\n        updated.add(i)\n        changed = 1\n        for j in range(i + 1, len(b)):\n            if j in updated:\n                continue\n            if changed == bi:\n                break\n            if b[j] == bi:\n                b[j] = num\n                updated.add(j)\n                changed += 1\n        if changed != bi:\n            print(-1)\n            break\n        num += 1\n    else:\n        print(' '.join([str(i) for i in b]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "def minarr(l1):\n    l3 = []\n    l2 = set(l1)\n    from collections import defaultdict\n    d1 = defaultdict(list)\n    t = 0\n    for x in l2:\n        d1[x] = []\n    for x in l1:\n        if len(d1[x]) != x:\n            if len(d1[x]) != 0:\n                l3.append(d1[x][0])\n                d1[x].append(d1[x][0])\n            else:\n                t += 1\n                d1[x].append(t)\n                l3.append(t)\n        else:\n            t += 1\n            d1[x] = []\n            d1[x].append(t)\n            l3.append(t)\n    return l3\nfor q in range(int(input())):\n    n = int(input())\n    l1 = [int(x) for x in input().split()]\n    l2 = set(l1)\n    s = 0\n    for x in l2:\n        if l1.count(x) % x != 0:\n            s = 1\n            break\n    if s == 1:\n        print(-1)\n    else:\n        print(*minarr(l1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "for i in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, list(input().split())))\n    d = {}\n    ans = []\n    count = 1\n    for j in range(0, n):\n        if a[j] in d.keys():\n            ans.append(d[a[j]][0])\n        else:\n            d[a[j]] = [[count, a[j]]]\n            count += 1\n            ans.append(d[a[j]][0])\n        d[a[j]][0][1] -= 1\n        if d[a[j]][0][1] == 0:\n            del d[a[j]]\n    if len(d) != 0:\n        print(-1)\n    else:\n        for j in range(n):\n            print(ans[j][0], ' ', end='')\n        print('\\n')", "for i in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, list(input().split())))\n    d = {}\n    ans = []\n    count = 1\n    for j in range(0, n):\n        if a[j] in d.keys():\n            ans.append(d[a[j]][0])\n        else:\n            d[a[j]] = [[count, a[j]]]\n            count += 1\n            ans.append(d[a[j]][0])\n        d[a[j]][0][1] -= 1\n        if d[a[j]][0][1] == 0:\n            del d[a[j]]\n    if len(d) != 0:\n        print(-1)\n    else:\n        for j in range(n):\n            print(ans[j][0], ' ', end='')\n        print('\\n')", "for i in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, list(input().split())))\n    d = {}\n    ans = []\n    count = 1\n    for j in range(0, n):\n        if a[j] in d.keys():\n            ans.append(d[a[j]][0])\n        else:\n            d[a[j]] = [[count, a[j]]]\n            count += 1\n            ans.append(d[a[j]][0])\n        d[a[j]][0][1] -= 1\n        if d[a[j]][0][1] == 0:\n            del d[a[j]]\n    if len(d) != 0:\n        print(-1)\n    else:\n        for j in range(n):\n            print(ans[j][0], ' ', end='')\n        print('\\n')", "for _ in range(int(input())):\n    n = int(input())\n    B = list(map(int, input().split()))\n    B_arr = {}\n    for i in B:\n        if i in B_arr:\n            B_arr[i] += 1\n        else:\n            B_arr[i] = 1\n    count = 0\n    for i in B_arr:\n        if B_arr[i] % i != 0:\n            count = 1\n    if count == 1:\n        print(-1)\n    else:\n        count_arr = {}\n        assign_arr = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in count_arr:\n                A.append(assign_arr[i])\n                count_arr[i] += 1\n                if count_arr[i] == i:\n                    del count_arr[i]\n            else:\n                count_arr[i] = 1\n                assign_arr[i] = j\n                A.append(j)\n                if count_arr[i] == i:\n                    del count_arr[i]\n                j = j + 1\n        print(*A)", "for _ in range(int(input())):\n    n = int(input())\n    B = list(map(int, input().split()))\n    B_arr = {}\n    for i in B:\n        if i in B_arr:\n            B_arr[i] += 1\n        else:\n            B_arr[i] = 1\n    count = 0\n    for i in B_arr:\n        if B_arr[i] % i != 0:\n            count = 1\n    if count == 1:\n        print(-1)\n    else:\n        count_arr = {}\n        assign_arr = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in count_arr:\n                A.append(assign_arr[i])\n                count_arr[i] += 1\n                if count_arr[i] == i:\n                    del count_arr[i]\n            else:\n                count_arr[i] = 1\n                assign_arr[i] = j\n                A.append(j)\n                if count_arr[i] == i:\n                    del count_arr[i]\n                j = j + 1\n        print(*A)", "for _ in range(int(input())):\n    n = int(input())\n    B = list(map(int, input().split()))\n    B_arr = {}\n    for i in B:\n        if i in B_arr:\n            B_arr[i] += 1\n        else:\n            B_arr[i] = 1\n    count = 0\n    for i in B_arr:\n        if B_arr[i] % i != 0:\n            count = 1\n    if count == 1:\n        print(-1)\n    else:\n        count_arr = {}\n        assign_arr = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in count_arr:\n                A.append(assign_arr[i])\n                count_arr[i] += 1\n                if count_arr[i] == i:\n                    del count_arr[i]\n            else:\n                count_arr[i] = 1\n                assign_arr[i] = j\n                A.append(j)\n                if count_arr[i] == i:\n                    del count_arr[i]\n                j = j + 1\n        print(*A)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    for i in d.keys():\n        if d[i] % i != 0:\n            print(-1)\n            break\n    else:\n        d = {}\n        c = 0\n        for i in l:\n            if i not in d.keys():\n                c += 1\n                d[i] = [[c], 1]\n            elif d[i][1] % i == 0:\n                c += 1\n                d[i][0].append(c)\n                d[i][1] += 1\n            else:\n                d[i][1] += 1\n        d1 = {}\n        for i in l:\n            if i not in d1.keys():\n                print(d[i][0][0], end=' ')\n                d1[i] = 1\n            else:\n                print(d[i][0][d1[i] // i], end=' ')\n                d1[i] += 1\n        print()", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    N = inp()\n    B = inlt()\n    an = []\n    mx = 10 ** 5\n    x = 1\n    dic = {B[0]: [x] * B[0]}\n    mx -= B[0]\n    for b in B:\n        if b not in dic or not dic[b]:\n            x += 1\n            dic[b] = [x] * b\n            mx -= b\n            if mx < 0:\n                break\n        an.append(dic[b].pop())\n    for x in dic:\n        if dic[x] or mx < 0:\n            an = [-1]\n            break\n    ans.append(an)\noutpltlt(ans)", "for _ in range(int(input())):\n    n = int(input())\n    freq = list(map(int, input().split()))\n    x = 1\n    for i in set(freq):\n        if freq.count(i) % i != 0:\n            print(-1)\n            break\n    else:\n        res = [0] * n\n        dic = {}\n        check = {}\n        for i in range(n):\n            p = freq[i]\n            if p in check and check[p] == p:\n                check.pop(p)\n                dic.pop(p)\n            if p == 1:\n                res[i] = x\n                x = x + 1\n            elif p in dic:\n                res[i] = dic[p]\n                check[p] += 1\n            elif p not in dic:\n                dic[p] = x\n                res[i] = x\n                check[p] = 1\n                x += 1\n        print(*res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    for i in range(len(arr)):\n        if arr[i] not in d:\n            d[arr[i]] = [i]\n        else:\n            d[arr[i]].append(i)\n    s = 0\n    for i in d:\n        if len(d[i]) % i != 0:\n            s = -1\n            break\n        s += len(d[i])\n    if s != n:\n        print(-1)\n    else:\n        l = [0] * n\n        j = 1\n        for i in range(len(arr)):\n            if l[i] == 0:\n                x = d[arr[i]]\n                y = arr[i]\n                for k in x:\n                    if y > 0:\n                        l[k] = j\n                        y -= 1\n                    else:\n                        break\n                del x[0:arr[i]]\n                j += 1\n            else:\n                continue\n        [print(i, end=' ') for i in l]\n        print()\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "from collections import defaultdict, Counter\nfrom os import path\nimport sys\nfrom collections import defaultdict\nimport math\n\ndef int_inp():\n    return int(input())\n\ndef mul_inp():\n    return map(int, input().split())\n\ndef arr_inp():\n    return list(map(int, input().split()))\n\ndef is_prime(n):\n    prime_flag = 0\n    if n > 1:\n        for i in range(2, int(math.sqrt(n)) + 1):\n            if n % i == 0:\n                prime_flag = 1\n                break\n        if prime_flag == 0:\n            return True\n        else:\n            return False\n    else:\n        return False\n\ndef factors(x):\n    result = []\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            result.append(i)\n            if x // i != i:\n                result.append(x // i)\n        i += 1\n    return sorted(result)\n\ndef factors1(x):\n    i = 2\n    while i * i <= x:\n        if x % i == 0:\n            return i\n        i += 1\n    return x\n\ndef prime_factors(x):\n    result = []\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            result.append(i)\n        i += 1\n    return sorted(result)\n\ndef solution():\n    n = int_inp()\n    arr = arr_inp()\n    m1 = Counter(arr)\n    s = 0\n    for i in m1.keys():\n        if m1[i] % i != 0:\n            print(-1)\n            return\n    m2 = defaultdict(int)\n    m3 = defaultdict(int)\n    start = 0\n    ans = [0] * n\n    for i in range(n):\n        if m2[arr[i]]:\n            ans[i] = m3[arr[i]]\n            m2[arr[i]] -= 1\n        else:\n            start += 1\n            m3[arr[i]] = start\n            m2[arr[i]] = arr[i]\n            ans[i] = m3[arr[i]]\n            m2[arr[i]] -= 1\n    print(*ans)\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int_inp()):\n    x = solution()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "testcases = int(input())\nfor i in range(testcases):\n    n = int(input())\n    data = list(map(int, input().split()))\n    flag = 0\n    check = {}\n    for i in data:\n        if i in check:\n            check[i] += 1\n        else:\n            check[i] = 1\n    for i in check:\n        if check[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        datacount = {}\n        dataassign = {}\n        j = 1\n        val = []\n        for i in data:\n            if i not in datacount:\n                datacount[i] = 1\n                dataassign[i] = j\n                val.append(j)\n                if datacount[i] == i:\n                    del datacount[i]\n                j = j + 1\n            else:\n                datacount[i] += 1\n                val.append(dataassign[i])\n                if datacount[i] == i:\n                    del datacount[i]\n        print(*val)", "import numpy as np\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    c = 1\n    a = [None] * n\n    i = 0\n    flag = False\n    for i in set(b):\n        if b.count(i) % i != 0:\n            flag = True\n            break\n    if flag:\n        print(-1)\n    else:\n        for i in range(n):\n            if b[i] == 0:\n                continue\n            else:\n                rep = b[i]\n                cont = b[i]\n                for j in range(i, n):\n                    if cont <= 0:\n                        break\n                    if b[j] == rep:\n                        a[j] = c\n                        cont -= 1\n                        b[j] = 0\n                c += 1\n        print(*a)", "import numpy as np\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    c = 1\n    a = [None] * n\n    i = 0\n    bd = {}\n    flag = 0\n    for i in b:\n        if i in bd:\n            bd[i] += 1\n        else:\n            bd[i] = 1\n    for i in bd:\n        if bd[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        for i in range(n):\n            if b[i] == 0:\n                continue\n            else:\n                rep = b[i]\n                cont = b[i]\n                for j in range(i, n):\n                    if cont <= 0:\n                        break\n                    if b[j] == rep:\n                        a[j] = c\n                        cont -= 1\n                        b[j] = 0\n                c += 1\n        print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "from collections import defaultdict\nfor _ in range(int(input())):\n    c = int(input())\n    arr = [int(i) for i in input().split()]\n    a = defaultdict(int)\n    b = {}\n    ans = []\n    cnt = 0\n    for i in range(c):\n        if a[arr[i]]:\n            ans.append(b[arr[i]])\n            a[arr[i]] -= 1\n        else:\n            cnt += 1\n            a[arr[i]] = arr[i] - 1\n            b[arr[i]] = cnt\n            ans.append(cnt)\n        if not a[arr[i]]:\n            del a[arr[i]]\n    if a:\n        ans = [-1]\n    print(*ans)", "for i in range(int(input())):\n    n = int(input())\n    B = [int(j) for j in input().split()]\n    u = {}\n    k = 1\n    for j in range(n):\n        if B[j] not in u:\n            u[B[j]] = [1, k]\n            k += 1\n        else:\n            if u[B[j]][0] % B[j] == 0:\n                u[B[j]].append(k)\n                k += 1\n            u[B[j]][0] += 1\n    b = True\n    for j in u:\n        if u[j][0] % j != 0:\n            b = False\n            break\n    if b:\n        k = 1\n        for j in B:\n            print(u[j][1], end=' ')\n            u[j][0] -= 1\n            if u[j][0] % j == 0:\n                u[j].pop(1)\n        print()\n    else:\n        print(-1)", "for _ in range(int(input())):\n    dic = {}\n    n = int(input())\n    ls = list(map(int, input().split()))\n    arr = [0] * (n + 1)\n    ans = []\n    dic = {}\n    count = 0\n    num = 0\n    for i in range(n):\n        if ls[i] > n:\n            count = n + 1\n            break\n        if arr[ls[i]] == 0:\n            num += 1\n            dic[ls[i]] = num\n            arr[ls[i]] = ls[i] - 1\n            count += ls[i]\n            ans.append(num)\n        else:\n            ans.append(dic[ls[i]])\n            arr[ls[i]] -= 1\n    if count != n:\n        print(-1)\n    else:\n        print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    B = [int(j) for j in input().split()]\n    u = {}\n    k = 1\n    for j in range(n):\n        if B[j] not in u:\n            u[B[j]] = [1, k]\n            k += 1\n        else:\n            if u[B[j]][0] % B[j] == 0:\n                u[B[j]].append(k)\n                k += 1\n            u[B[j]][0] += 1\n    b = True\n    for j in u:\n        if u[j][0] % j != 0:\n            b = False\n            break\n    if b:\n        k = 1\n        for j in B:\n            print(u[j][1], end=' ')\n            u[j][0] -= 1\n            if u[j][0] % j == 0:\n                u[j].pop(1)\n        print()\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    countRecord = {}\n    for freq in B:\n        countRecord[freq] = countRecord.get(freq, 0) + 1\n    flag = False\n    for (key, value) in countRecord.items():\n        if value % key != 0:\n            flag = True\n            print(-1)\n            break\n    if flag:\n        continue\n    record = {}\n    A = [0] * n\n    for i in range(n):\n        if B[i] in record:\n            record[B[i]].append(i)\n        else:\n            record[B[i]] = [i]\n    count = 1\n    visited = set()\n    for i in range(n):\n        if i not in visited:\n            c2 = 0\n            flag = False\n            while record[B[i]] and c2 != B[i]:\n                flag = True\n                idx = record[B[i]].pop(0)\n                visited.add(idx)\n                A[idx] = count\n                c2 += 1\n            if flag:\n                count += 1\n    print(*A)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = []\n    d = defaultdict(lambda : [0, 0])\n    f = 1\n    for i in range(n):\n        v = b[i]\n        if d[v][0] == 0:\n            d[v][0] = f\n            a.append(f)\n            f += 1\n            d[v][1] += 1\n            if d[v][1] >= v:\n                d[v][1] = 0\n                d[v][0] = 0\n        else:\n            d[v][1] += 1\n            a.append(d[v][0])\n            if d[v][1] >= v:\n                d[v][1] = 0\n                d[v][0] = 0\n    poss = True\n    for i in d:\n        if d[i][0] != 0:\n            poss = False\n            break\n    if not poss:\n        print(-1)\n    else:\n        for i in a:\n            print(i, end=' ')\n        print()", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = []\n    d = defaultdict(lambda : [0, 0])\n    f = 1\n    for i in range(n):\n        v = b[i]\n        if d[v][0] == 0:\n            d[v][0] = f\n            a.append(f)\n            f += 1\n            d[v][1] += 1\n            if d[v][1] >= v:\n                d[v][1] = 0\n                d[v][0] = 0\n        else:\n            d[v][1] += 1\n            a.append(d[v][0])\n            if d[v][1] >= v:\n                d[v][1] = 0\n                d[v][0] = 0\n    poss = True\n    for i in d:\n        if d[i][0] != 0:\n            poss = False\n            break\n    if not poss:\n        print(-1)\n    else:\n        for i in a:\n            print(i, end=' ')\n        print()", "tpy = int(input())\nfor i in range(tpy):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = []\n    c = {}\n    d = 1\n    for j in range(n):\n        if b[j] not in c.keys():\n            c[b[j]] = [d, b[j] - 1]\n            d = d + 1\n            a.append(c[b[j]][0])\n        else:\n            a.append(c.get(b[j])[0])\n            l = c.get(b[j])\n            l[1] = l[1] - 1\n            c[b[j]] = l\n        if c.get(b[j])[1] < 1:\n            del c[b[j]]\n    if bool(c) == True:\n        a.clear()\n        a.append(-1)\n    print(' '.join(map(str, a)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = []\n    c = {}\n    d = 1\n    for j in range(n):\n        if b[j] not in c.keys():\n            c[b[j]] = [d, b[j] - 1]\n            d = d + 1\n            a.append(c[b[j]][0])\n        else:\n            a.append(c.get(b[j])[0])\n            l = c.get(b[j])\n            l[1] = l[1] - 1\n            c[b[j]] = l\n        if c.get(b[j])[1] < 1:\n            del c[b[j]]\n    if bool(c) == True:\n        a.clear()\n        a.append(-1)\n    print(' '.join(map(str, a)))", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i not in d.keys():\n            d[i] = 0\n        d[i] += 1\n    for i in d.keys():\n        if d[i] % i != 0:\n            print(-1)\n            return\n    x = {}\n    y = {}\n    z = 1\n    for i in l:\n        if i not in x.keys() or i not in y.keys() or y[i] == 0:\n            x[i] = z\n            z += 1\n            y[i] = i\n        print(x[i], end=' ')\n        y[i] -= 1\n    print()\nfor _ in range(int(input())):\n    solve()", "testcases = int(input())\nfor eachcase in range(testcases):\n    length = int(input())\n    array = list(map(int, input().split()))\n    value = 0\n    hashmapA = {}\n    hashmapB = {}\n    finalarray = []\n    for nums in array:\n        hashmapA[nums] = 1 + hashmapA.get(nums, 0)\n    for nums in array:\n        if hashmapA[nums] % nums == 0:\n            value += 1\n            hashmapB[nums] = value\n            finalarray.append(value)\n            hashmapA[nums] -= 1\n        elif nums in hashmapB:\n            finalarray.append(hashmapB[nums])\n            hashmapA[nums] -= 1\n        else:\n            finalarray.append(-1)\n            break\n    if finalarray[-1] == -1:\n        print(-1)\n    else:\n        print(*finalarray)", "import sys\nR = lambda : map(int, next(sys.stdin).split())\nT = int(input())\nfor i in range(T):\n    length = int(input())\n    B = list(R())\n    maxB = max(B)\n    valid = []\n    numberFrequency = []\n    for i in range(maxB + 1):\n        numberFrequency.append(0)\n    numberCount = numberFrequency.copy()\n    unique = 1\n    for i in range(length):\n        if numberFrequency[B[i]] == 0:\n            numberFrequency[B[i]] = unique\n            numberCount[B[i]] = B[i]\n            unique += 1\n        numberCount[B[i]] -= 1\n        valid.append(str(numberFrequency[B[i]]))\n        if numberCount[B[i]] == 0:\n            numberFrequency[B[i]] = 0\n    empty = 1\n    for i in range(len(numberFrequency)):\n        if numberFrequency[i] != 0:\n            empty = 0\n    if empty == 1:\n        print(' '.join(valid))\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    d = {}\n    for i in ar:\n        d[i] = d.get(i, 0) + 1\n    flag = 0\n    for i in d:\n        if d[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        a = {}\n        b = {}\n        l = []\n        k = 1\n        for i in ar:\n            if i in a:\n                l.append(b[i])\n                a[i] += 1\n                if a[i] == i:\n                    del a[i]\n            else:\n                a[i] = 1\n                b[i] = k\n                l.append(k)\n                if a[i] == i:\n                    del a[i]\n                k += 1\n        print(*l)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = []\n    val = 1\n    d = {}\n    d2 = defaultdict(int)\n    for ele in arr:\n        d2[ele] += 1\n        if ele not in d:\n            (key, cnt) = (val, 0)\n            val += 1\n        else:\n            (key, cnt) = d[ele]\n        if cnt == ele:\n            (key, cnt) = (val, 0)\n            val += 1\n        res.append(key)\n        d[ele] = [key, cnt + 1]\n    for key in d2:\n        if d2[key] % key != 0:\n            res = [-1]\n    for ele in res:\n        print(ele, end=' ')\n    print()", "T = int(input())\nfor t in range(0, T):\n    L = int(input())\n    B = list(map(int, input().split()))\n    A = []\n    EH = {}\n    FH = {}\n    a = 1\n    for i in B:\n        if i in EH:\n            A.append(EH[i])\n            FH[i] += 1\n            if FH[i] == i:\n                del EH[i]\n                del FH[i]\n            continue\n        else:\n            A.append(a)\n            if i == 1:\n                a += 1\n                continue\n            else:\n                EH[i] = a\n                FH[i] = 1\n                a += 1\n                continue\n    if not EH:\n        print(*A)\n    else:\n        print(-1)", "T = int(input())\nfor t in range(0, T):\n    L = int(input())\n    B = list(map(int, input().split()))\n    A = []\n    EH = {}\n    FH = {}\n    a = 1\n    for i in range(0, L):\n        if B[i] in EH:\n            A += [EH[B[i]]]\n            FH[B[i]] += 1\n            if FH[B[i]] == B[i]:\n                del EH[B[i]]\n                del FH[B[i]]\n            continue\n        else:\n            A += [a]\n            if B[i] == 1:\n                a += 1\n                continue\n            else:\n                EH[B[i]] = a\n                FH[B[i]] = 1\n                a += 1\n                continue\n    if not EH:\n        for i in range(0, L):\n            print(A[i], end=' ')\n        print()\n    else:\n        print(-1)", "def reconstruct_array(B):\n    a = []\n    using = {}\n    j = 1\n    k = 0\n    s = 0\n    for i in B:\n        if i in using:\n            if using[i][0][1] == 0:\n                using[i] = [[j, i]]\n                j += 1\n                s += i\n            a.append(using[i][0][0])\n            using[i][0][1] -= 1\n        else:\n            using[i] = [[j, i]]\n            s += i\n            j += 1\n            a.append(using[i][0][0])\n            using[i][0][1] -= 1\n    if s > len(B):\n        return [-1]\n    return a\nfor _ in range(int(input())):\n    n = int(input())\n    B = list(map(int, input().split()))\n    print(*reconstruct_array(B))", "from collections import Counter\nimport itertools\nop = int(input())\nfor i in range(op):\n    n = int(input())\n    a = list(map(int, input().split()))\n    w = Counter(a)\n    d = {}\n    e = 1\n    for i in w:\n        if i > len(a):\n            e = 0\n            print('-1')\n            break\n        if w[i] % i != 0:\n            e = 0\n            print('-1')\n            break\n    if e:\n        h = {}\n        for i in range(len(a)):\n            if a[i] in d:\n                d[a[i]] += 1\n            else:\n                d[a[i]] = 1\n        for i in range(len(a)):\n            if a[i] in h:\n                pass\n            else:\n                h[a[i]] = 0\n        curr = 1\n        new = 0\n        for i in range(len(a)):\n            if h[a[i]] == 0:\n                print(curr, end=' ')\n                d[a[i]] -= 1\n                h[a[i]] = curr\n                curr += 1\n            elif d[a[i]] % a[i] == 0:\n                h[a[i]] = curr\n                print(h[a[i]], end=' ')\n                d[a[i]] -= 1\n                curr += 1\n            elif d[a[i]] % a[i] != 0:\n                d[a[i]] -= 1\n                print(h[a[i]], end=' ')\n        print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    bdict = {}\n    for i in B:\n        if i in bdict:\n            bdict[i] += 1\n        else:\n            bdict[i] = 1\n    flag = 0\n    for i in bdict:\n        if bdict[i] % i != 0:\n            flag = 1\n            break\n    if flag == 1:\n        print(-1)\n    else:\n        A = []\n        cdict = {}\n        adict = {}\n        j = 1\n        for i in B:\n            if i in cdict:\n                A.append(adict[i])\n                cdict[i] += 1\n                if cdict[i] == i:\n                    del cdict[i]\n            else:\n                cdict[i] = 1\n                adict[i] = j\n                A.append(j)\n                if cdict[i] == i:\n                    del cdict[i]\n                j += 1\n        print(*A)", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    f = collections.Counter(b)\n    pas = True\n    for i in f:\n        if f[i] % i != 0:\n            pas = False\n        f[i] = 0\n    if pas == False:\n        print(-1)\n    else:\n        g = f.copy()\n        res = []\n        c = 1\n        for i in b:\n            if f[i] != i:\n                f[i] += 1\n                if g[i] != 0:\n                    res.append(g[i])\n                else:\n                    g[i] = c\n                    res.append(g[i])\n                    c += 1\n            else:\n                f[i] = 1\n                g[i] = c\n                res.append(g[i])\n                c += 1\n        print(*res)", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = []\n    d = {}\n    i = 0\n    for x in map(int, s.split()):\n        if (y := d.get(x)) is None:\n            y = d[x] = [(i := (i + 1)), x]\n        a.append(y[0])\n        y[1] -= 1\n        if y[1] == 0:\n            del d[x]\n    print(*([-1] if d else a))", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = []\n    d = {}\n    i = 0\n    for x in map(int, s.split()):\n        if (y := d.get(x)) is None:\n            y = d[x] = [(i := (i + 1)), x]\n        a.append(y[0])\n        y[1] -= 1\n        if y[1] == 0:\n            del d[x]\n    print(*([-1] if d else a))", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = []\n    d = {}\n    i = 0\n    for x in map(int, s.split()):\n        if (y := d.get(x)) is None:\n            d[x] = (y := [(i := (i + 1)), x])\n        a.append(y[0])\n        y[1] -= 1\n        if y[1] == 0:\n            del d[x]\n    print(*([-1] if d else a))", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    freq = collections.Counter(b)\n    curval = {}\n    nxt = 1\n    a = [-1] * n\n    for i in range(n):\n        if freq[b[i]] % b[i] == 0:\n            curval[b[i]] = nxt\n            nxt += 1\n        if b[i] not in curval:\n            break\n        freq[b[i]] -= 1\n        a[i] = curval[b[i]]\n    if min(a) == -1:\n        print(-1)\n    else:\n        print(*a)", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = []\n    d = {}\n    i = 0\n    for x in map(int, s.split()):\n        if (y := d.get(x)) is None:\n            d[x] = (y := [(i := (i + 1)), x])\n        a.append(y[0])\n        y[1] -= 1\n        if y[1] == 0:\n            del d[x]\n    print(*([-1] if d else a))", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = []\n    d = {}\n    i = 0\n    for x in map(int, s.split()):\n        y = d.setdefault(x, [None, x])\n        if y[1] == x:\n            i += 1\n            y[0] = i\n        a.append(y[0])\n        y[1] -= 1\n        if y[1] == 0:\n            del d[x]\n    print(*([-1] if d else a))", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = []\n    d = {}\n    i = 0\n    for x in map(int, s.split()):\n        y = d.get(x)\n        if y is None:\n            i += 1\n            y = [i, x]\n            d[x] = y\n        a.append(y[0])\n        y[1] -= 1\n        if y[1] == 0:\n            del d[x]\n    print(*([-1] if d else a))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set(a)\n    b = dict.fromkeys(b, 0)\n    for i in a:\n        b[i] += 1\n    res = True\n    for i in b:\n        if b[i] % i != 0:\n            print(-1)\n            res = False\n            break\n    if res == True:\n        j = 1\n        l = [0] * n\n        dic = {}\n        for i in range(n):\n            if b[a[i]] % a[i] == 0:\n                dic[a[i]] = j\n                j += 1\n            b[a[i]] -= 1\n            l[i] = dic[a[i]]\n        print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set(a)\n    b = dict.fromkeys(b, 0)\n    for i in a:\n        b[i] += 1\n    flag = True\n    for i in b:\n        if b[i] % i != 0:\n            print(-1)\n            flag = False\n            break\n    if flag == True:\n        j = 1\n        l = [0] * n\n        cur = {}\n        for i in range(n):\n            if b[a[i]] % a[i] == 0:\n                cur[a[i]] = j\n                j += 1\n            b[a[i]] -= 1\n            l[i] = cur[a[i]]\n        print(*l)", "from collections import defaultdict, Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    flag = 0\n    for i in c:\n        if c[i] % i != 0:\n            flag = 1\n            break\n    if flag:\n        print(-1)\n        continue\n    d = defaultdict(lambda : [0, 0])\n    t = 0\n    ans = []\n    for i in a:\n        if i in d and d[i][1] == i:\n            t += 1\n            d[i] = [t, 0]\n        if i not in d:\n            t += 1\n            ans.append(t)\n            d[i][0] = t\n        else:\n            ans.append(d[i][0])\n        d[i][1] += 1\n    print(*ans)", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    freq = collections.Counter(b)\n    curval = {}\n    nxt = 1\n    a = [-1] * n\n    for i in range(n):\n        if freq[b[i]] % b[i] == 0:\n            curval[b[i]] = nxt\n            nxt += 1\n        if b[i] not in curval:\n            break\n        freq[b[i]] -= 1\n        a[i] = curval[b[i]]\n    if min(a) == -1:\n        print(-1)\n    else:\n        print(*a)", "from collections import defaultdict, Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    val = {}\n    t = 1\n    ans = [0] * n\n    for i in range(n):\n        if c[a[i]] % a[i] == 0:\n            val[a[i]] = t\n            t += 1\n        if a[i] not in val:\n            break\n        c[a[i]] -= 1\n        ans[i] = val[a[i]]\n    if min(ans) == 0:\n        print(-1)\n    else:\n        print(*ans)", "def abc():\n    n = int(input())\n    b = list(map(int, input().split()))\n    freq = {}\n    for i in b:\n        if i not in freq.keys():\n            freq[i] = 0\n        freq[i] += 1\n    for i in b:\n        if freq[i] % i != 0:\n            print('-1')\n            return\n    (m, f) = ({}, {})\n    j = 1\n    for i in b:\n        if i not in m.keys() or i not in f.keys() or f[i] == 0:\n            m[i] = j\n            f[i] = i\n            j += 1\n        print(m[i], end=' ')\n        f[i] -= 1\n    print()\nfor _ in range(int(input())):\n    abc()", "def solve():\n    flag = 0\n    n = int(input())\n    arr = list(map(int, input().split()))\n    freq = dict()\n    for i in arr:\n        if i not in freq.keys():\n            freq[i] = 0\n        freq[i] += 1\n    for i in freq.keys():\n        if freq[i] % i != 0:\n            print(-1)\n            return\n    m = {}\n    f = {}\n    j = 1\n    for i in arr:\n        if i not in m.keys() or i not in f.keys() or f[i] == 0:\n            m[i] = j\n            j += 1\n            f[i] = i\n        print(m[i], end=' ')\n        f[i] -= 1\n    print()\ntry:\n    t = int(input())\n    while t > 0:\n        solve()\n        t -= 1\nexcept:\n    pass", "from collections import Counter\n\ndef inparr():\n    tmparr = [int(i) for i in input().split()]\n    return tmparr\nfor _ in range(int(input())):\n    N = int(input())\n    arr = inparr()\n    hm = Counter(arr)\n    ok = True\n    for i in hm:\n        if hm[i] % i:\n            ok = False\n            break\n    if sum(hm.keys()) > N or not ok:\n        print(-1)\n        continue\n    d1 = Counter()\n    dprev = 0\n    res = ''\n    for i in arr:\n        if hm[i] % i == 0:\n            dprev += 1\n            d1[i] = dprev\n        res += f'{d1[i]} '\n        hm[i] -= 1\n    print(res)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    d = {}\n    count = 1\n    s = set(l)\n    for j in s:\n        d[j] = [0, 0]\n    for k in l:\n        if d[k][1] == 0:\n            d[k][1] = k\n            d[k][0] = count\n            count += 1\n        if d[k][1] != 0:\n            l1.append(d[k][0])\n            d[k][1] -= 1\n    for q in d.values():\n        if q[1] != 0:\n            print(-1)\n            break\n    else:\n        for w in l1:\n            print(w, end=' ')\n        print()", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    d = {}\n    count = 1\n    s = set(l)\n    for j in s:\n        d[j] = [0, 0]\n    for k in l:\n        if d[k][1] == 0:\n            d[k][1] = k\n            d[k][0] = count\n            count += 1\n        if d[k][1] != 0:\n            l1.append(d[k][0])\n            d[k][1] -= 1\n    for q in d.values():\n        if q[1] != 0:\n            print(-1)\n            break\n    else:\n        for w in l1:\n            print(w, end=' ')\n        print()", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = collections.Counter(a)\n    vals = {}\n    c = 1\n    res = []\n    for i in a:\n        if freq[i] % i == 0:\n            vals[i] = c\n            c += 1\n        if i not in vals:\n            break\n        res.append(vals[i])\n        freq[i] -= 1\n    if len(res) == n:\n        print(*res)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    d = {}\n    for item in arr:\n        if item in d:\n            d[item] += 1\n        else:\n            d[item] = 1\n    start = 1\n    curr_val = {}\n    for i in range(n):\n        if d[arr[i]] % arr[i] == 0:\n            curr_val[arr[i]] = start\n            start += 1\n        if arr[i] not in curr_val:\n            break\n        d[arr[i]] -= 1\n        ans[i] = curr_val[arr[i]]\n    if min(ans) == 0:\n        print(-1)\n    else:\n        print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    d = {}\n    for item in arr:\n        if item in d:\n            d[item] += 1\n        else:\n            d[item] = 1\n    start = 1\n    curr_val = {}\n    for i in range(n):\n        if d[arr[i]] % arr[i] == 0:\n            curr_val[arr[i]] = start\n            start += 1\n        if arr[i] not in curr_val:\n            break\n        d[arr[i]] -= 1\n        ans[i] = curr_val[arr[i]]\n    if min(ans) == 0:\n        print(-1)\n    else:\n        print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    Bdict = {}\n    for i in B:\n        if i in Bdict:\n            Bdict[i] += 1\n        else:\n            Bdict[i] = 1\n    flag = 0\n    for i in Bdict:\n        if Bdict[i] % i != 0:\n            flag = 1\n    if flag == 1:\n        print(-1)\n    else:\n        dictcount = {}\n        dictassign = {}\n        A = []\n        j = 1\n        for i in B:\n            if i in dictcount:\n                A.append(dictassign[i])\n                dictcount[i] += 1\n                if dictcount[i] == i:\n                    del dictcount[i]\n            else:\n                dictcount[i] = 1\n                dictassign[i] = j\n                A.append(j)\n                if dictcount[i] == i:\n                    del dictcount[i]\n                j = j + 1\n        print(*A)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    l1 = []\n    k = list(d.keys())\n    v = list(d.values())\n    for j in range(0, len(list(d.values()))):\n        l1.append(v[j] % k[j])\n    d1 = dict()\n    for j in range(len(k)):\n        d1[k[j]] = 0\n    l2 = []\n    for j in l:\n        if d[j] % j == 0:\n            d1[j] = max(list(d1.values())) + 1\n        l2.append(d1[j])\n        d[j] -= 1\n    if max(l1) != 0:\n        print('-1')\n    else:\n        for j in l2:\n            print(j, end=' ')\n        print()", "def solve():\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    freq = {}\n    for i in arr:\n        if i not in freq.keys():\n            freq[i] = 0\n        freq[i] += 1\n    for i in freq.keys():\n        if freq[i] % i != 0:\n            print('-1')\n            return\n    m = {}\n    f = {}\n    j = 1\n    for i in arr:\n        if i not in m.keys() or i not in f.keys() or f[i] == 0:\n            m[i] = j\n            j += 1\n            f[i] = i\n        print(m[i], end=' ')\n        f[i] -= 1\n    print()\ntry:\n    t = int(input())\n    while t:\n        solve()\n        t -= 1\nexcept:\n    pass", "def mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return str(input())\n\ndef ni():\n    return int(input())\nimport collections\nfor _ in range(ni()):\n    n = ni()\n    b = li()\n    freq = collections.Counter(b)\n    curval = {}\n    nxt = 1\n    a = [-1] * n\n    for i in range(n):\n        if freq[b[i]] % b[i] == 0:\n            curval[b[i]] = nxt\n            nxt += 1\n        if b[i] not in curval:\n            break\n        freq[b[i]] -= 1\n        a[i] = curval[b[i]]\n    if min(a) == -1:\n        print(-1)\n    else:\n        print(*a)", "for hm in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().strip().split(' ')))\n    c = 0\n    e = set(b)\n    k = {}\n    for hm in b:\n        if hm in k:\n            k[hm] += 1\n        else:\n            k[hm] = 1\n    for hm in e:\n        c += k[hm] // hm * hm\n    if c != a:\n        print(-1)\n        continue\n    m = 1\n    n = {}\n    v = set(b)\n    for hm in range(a):\n        if b[hm] in n and n[b[hm]][1] > 0:\n            n[b[hm]][1] -= 1\n            b[hm] = n[b[hm]][0]\n        else:\n            n[b[hm]] = [m, b[hm] - 1]\n            b[hm] = m\n            m += 1\n    print(*b)", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = []\n    d = {}\n    i = 0\n    for x in map(int, s.split()):\n        y = d.get(x)\n        if y is None:\n            i += 1\n            y = [i, x]\n            d[x] = y\n        a.append(y[0])\n        y[1] -= 1\n        if y[1] == 0:\n            del d[x]\n    print(*([-1] if d else a))", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = []\n    d = {}\n    i = 0\n    for x in map(int, s.split()):\n        y = d.setdefault(x, [None, x])\n        if y[1] == x:\n            i += 1\n            y[0] = i\n        a.append(y[0])\n        y[1] -= 1\n        if y[1] == 0:\n            del d[x]\n    print(*([-1] if d else a))", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = []\n    d = {}\n    i = 0\n    for x in map(int, s.split()):\n        y = d.setdefault(x, [None, 0])\n        if y[1] == 0:\n            i += 1\n            y[0] = i\n        a.append(y[0])\n        y[1] += 1\n        if y[1] == x:\n            del d[x]\n    print(*([-1] if d else a))", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = []\n    d = {}\n    i = 0\n    for x in map(int, s.split()):\n        y = d.get(x)\n        if y is None:\n            i += 1\n            y = [i, x]\n            d[x] = y\n        a.append(y[0])\n        y[1] -= 1\n        if y[1] == 0:\n            del d[x]\n    print(*([-1] if d else a))"]