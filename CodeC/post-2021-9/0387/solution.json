["t = int(input())\nfor _ in range(t):\n    old_s = list(input())\n    r = old_s[::-1]\n    i = 0\n    j = 0\n    n = len(old_s)\n    while j < n:\n        if old_s[j] == r[i]:\n            i += 1\n        j += 1\n    print(n - i)", "t = int(input())\nfor _ in range(t):\n    old_s = list(input())\n    r = old_s[::-1]\n    i = 0\n    j = 0\n    n = len(old_s)\n    while j < n:\n        if old_s[j] == r[i]:\n            i += 1\n        j += 1\n    print(n - i)", "t = int(input())\nfor a in range(t):\n    old_s = list(input())\n    r = old_s[::-1]\n    i = 0\n    j = 0\n    n = len(old_s)\n    while j < n:\n        if old_s[j] == r[i]:\n            i += 1\n        j += 1\n    print(n - i)", "t = int(input())\nfor _ in range(t):\n    old_s = list(input())\n    r = old_s[::-1]\n    i = 0\n    j = 0\n    n = len(old_s)\n    while j < n:\n        if old_s[j] == r[i]:\n            i += 1\n        j += 1\n    print(n - i)", "t = int(input())\nfor _ in range(t):\n    old_s = list(input())\n    r = old_s[::-1]\n    i = 0\n    j = 0\n    n = len(old_s)\n    while j < n:\n        if old_s[j] == r[i]:\n            i += 1\n        j += 1\n    print(n - i)", "def ip():\n    return input()\nfor tastcas in range(int(input())):\n    old_s = list(input())\n    new_s = old_s.copy()\n    new_s.reverse()\n    i = j = 0\n    n = len(old_s)\n    while j < n:\n        if old_s[j] == new_s[i]:\n            i += 1\n        j += 1\n    print(n - i)", "def ip():\n    return input()\nfor tastcas in range(int(input())):\n    old_s = list(input())\n    new_s = old_s.copy()\n    new_s.reverse()\n    i = j = 0\n    n = len(old_s)\n    while j < n:\n        if old_s[j] == new_s[i]:\n            i += 1\n        j += 1\n    print(n - i)", "t = int(input())\nfor _ in range(t):\n    old_s = list(input())\n    r = old_s[::-1]\n    i = 0\n    j = 0\n    n = len(old_s)\n    while j < n:\n        if old_s[j] == r[i]:\n            i += 1\n        j += 1\n    print(n - i)", "t = int(input())\nfor _ in range(t):\n    old_s = list(input())\n    new_s = old_s.copy()\n    new_s.reverse()\n    i = 0\n    j = 0\n    n = len(old_s)\n    while j < n:\n        if old_s[j] == new_s[i]:\n            i += 1\n        j += 1\n    print(n - i)", "t = int(input())\nfor _ in range(t):\n    old_s = list(input())\n    new_s = old_s.copy()\n    new_s.reverse()\n    i = 0\n    j = 0\n    n = len(old_s)\n    while j < n:\n        if old_s[j] == new_s[i]:\n            i += 1\n        j += 1\n    print(n - i)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    s = input()\n    n = len(s)\n    i = 0\n    j = n - 1\n    ans = 0\n    while i < n:\n        if s[i] == s[j]:\n            j -= 1\n        else:\n            ans += 1\n        i += 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    s = input()\n    n = len(s)\n    i = 0\n    j = n - 1\n    ans = 0\n    while i < n:\n        if s[i] == s[j]:\n            j -= 1\n        else:\n            ans += 1\n        i += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    s = input()\n    r = s[::-1]\n    (a, b) = (0, 0)\n    ans = 0\n    while a < len(s):\n        if r[b] == s[a]:\n            b += 1\n        else:\n            ans += 1\n        a += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    rev = s[::-1]\n    (i, j) = (0, 0)\n    ans = 0\n    while i < len(s):\n        if rev[j] == s[i]:\n            j += 1\n        else:\n            ans += 1\n        i += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    r = s[::-1]\n    i = 0\n    j = 0\n    x = 0\n    while i < len(s) and j < len(r):\n        if s[i] == r[j]:\n            i += 1\n            j += 1\n            x += 1\n        else:\n            i += 1\n    print(len(s) - x)", "import math\ntest = int(input())\nfor _ in range(test):\n    string = input()\n    i = 0\n    j = 0\n    rev_string = string[::-1]\n    count = 0\n    while i < len(string):\n        if string[i] == rev_string[j]:\n            j += 1\n        else:\n            count += 1\n        i += 1\n    print(count)", "import math\nfor _ in range(int(input())):\n    s = input()\n    i = 0\n    j = 0\n    r = s[::-1]\n    c = 0\n    while i < len(s):\n        if s[i] == r[j]:\n            j += 1\n        else:\n            c += 1\n        i += 1\n    print(c)", "for i in range(int(input())):\n    x = input()\n    rev = x[::-1]\n    i = 0\n    j = 0\n    ans = 0\n    while i < len(x):\n        if x[i] == rev[j]:\n            i += 1\n            j += 1\n        else:\n            i += 1\n            ans += 1\n    print(ans)", "for i in range(int(input())):\n    s = input()\n    rev = s[::-1]\n    i = 0\n    j = 0\n    ans = 0\n    while i < len(s):\n        if s[i] == rev[j]:\n            i += 1\n            j += 1\n        else:\n            i += 1\n            ans += 1\n    print(ans)", "from math import inf\nfrom collections import *\nimport math, os, sys, heapq, bisect, random\nfrom functools import lru_cache\nfrom itertools import *\n\ndef inp():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef out(var):\n    sys.stdout.write(str(var))\n\ndef inpu():\n    return int(inp())\n\ndef lis():\n    return list(map(int, inp().split()))\n\ndef stringlis():\n    return list(map(str, inp().split()))\n\ndef sep():\n    return map(int, inp().split())\n\ndef strsep():\n    return map(str, inp().split())\n\ndef fsep():\n    return map(float, inp().split())\n(M, M1) = (10 ** 9 + 7, 998244353)\n\ndef sieve(MAXN):\n    prime = [True] * (MAXN + 10)\n    (prime[0], prime[1]) = [False] * 2\n    for i in range(2, int(math.sqrt(MAXN + 1)) + 5):\n        if prime[i] == True:\n            for j in range(i * i, MAXN + 5, i):\n                prime[j] = False\n    return prime\n\ndef main():\n    how_much_noob_I_am = 1\n    how_much_noob_I_am = int(input())\n    for __ in range(how_much_noob_I_am):\n        s = inp()\n        p = s[::-1]\n        if s == p:\n            print(0)\n            continue\n        j = 0\n        for i in range(len(s)):\n            if s[i] == p[j]:\n                j += 1\n        print(len(s) - j)\nmain()", "for t in range(int(input())):\n    a = input()\n    l = len(a)\n    rev = a[::-1]\n    (i, j) = (0, 0)\n    while i < l:\n        if a[i] == rev[j]:\n            j += 1\n        i += 1\n    print(l - j)", "import math, sys\n\ndef input():\n    return sys.stdin.readline().rstrip('\\r\\n')\ntcs = int(input())\nfor _ in range(tcs):\n    wrd1 = input()\n    wrd2 = wrd1\n    wrd1 = wrd1[::-1]\n    sz1 = len(wrd1)\n    sz2 = len(wrd2)\n    ans = 0\n    (i, j) = (sz2 - 1, sz2 - 1)\n    while i > -1:\n        while i > -1 and wrd1[i] != wrd2[j]:\n            i -= 1\n            ans += 1\n        if i > -1:\n            i -= 1\n            j -= 1\n    sys.stdout.write(str(ans) + '\\n')", "T = int(input())\nfor i in range(T):\n    s = input()\n    n = len(s) - 1\n    m = len(s)\n    r = s[::-1]\n    j = f = 0\n    for i in range(m):\n        if s[i] != r[j]:\n            f += 1\n        else:\n            j += 1\n    print(f)", "for T in range(int(input())):\n    A = input()\n    l = len(A)\n    revA = A[::-1]\n    (i, j) = (0, 0)\n    while i < l:\n        if A[i] == revA[j]:\n            j += 1\n        i += 1\n    print(l - j)", "for _ in range(int(input())):\n    s = input()\n    b = s[::-1]\n    j = 0\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == b[j]:\n            j += 1\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    answer = 0\n    rev = s[::-1]\n    n = len(s)\n    j = n - 1\n    i = n - 1\n    while i >= 0:\n        while i >= 0 and rev[i] != s[j]:\n            i -= 1\n            answer += 1\n        if i >= 0:\n            i -= 1\n            j -= 1\n    print(answer)", "def rev(A):\n    l = len(A)\n    B = []\n    for i in range(l - 1, -1, -1):\n        B.append(A[i])\n    return B\ntest = int(input())\nfor case in range(test):\n    s = str(input())\n    a = [n for n in s]\n    ra = rev(a)\n    count = 0\n    l = len(a)\n    (i, j) = (0, 0)\n    while i < l:\n        if a[i] == ra[j]:\n            j = j + 1\n        else:\n            count = count + 1\n        i = i + 1\n    print(count)", "for _ in range(int(input())):\n    string = input()\n    rev = string[::-1]\n    (i, j) = (0, 0)\n    while i < len(string):\n        if rev[j] == string[i]:\n            j += 1\n        i += 1\n    print(len(string) - j)", "caseCount = int(input())\nfor i in range(caseCount):\n    inputString = input()\n    sLen = len(inputString)\n    i = 0\n    j = sLen - 1\n    moves = 0\n    while i < sLen:\n        if inputString[i] == inputString[j]:\n            j -= 1\n        else:\n            moves += 1\n        i += 1\n    print(moves)", "from collections import defaultdict\nimport sys\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    string = input().strip()\n    target = string[::-1]\n    removed_count = defaultdict(int)\n    num_removed = 0\n    length = len(string)\n    i_string = 0\n    i_target = 0\n    while i_string < length:\n        if string[i_string] != target[i_target]:\n            i_target -= 1\n            num_removed += 1\n        i_string += 1\n        i_target += 1\n    print(num_removed)", "def calc(s):\n    a = s[::-1]\n    ans = 0\n    (i, j) = (0, 0)\n    while i < len(s):\n        if s[i] == a[j]:\n            j += 1\n        else:\n            ans += 1\n        i += 1\n    return ans\nt = int(input())\nwhile t > 0:\n    s = input()\n    print(calc(s))\n    t -= 1", "for i in range(int(input())):\n    s = input()\n    j = 0\n    c = 0\n    s2 = s[::-1]\n    if s == s2:\n        print(0)\n    else:\n        for i in range(0, len(s)):\n            if s[i] == s2[j]:\n                j += 1\n            else:\n                c += 1\n        print(c)", "for i in range(int(input())):\n    S = input()\n    a = 0\n    r = 0\n    d = S[::-1]\n    s = -1\n    if S == d:\n        print(0)\n    else:\n        for k in range(len(S)):\n            if d[r] == S[k]:\n                r += 1\n            else:\n                a += 1\n        print(a)", "for i in range(int(input())):\n    str1 = list(input())\n    str2 = str1[::-1]\n    x = 0\n    j = 0\n    for k in range(0, len(str1)):\n        if str1[k] == str2[j]:\n            j += 1\n        else:\n            x += 1\n        k += 1\n    print(x)", "import sys\nfrom math import sqrt, gcd\nfrom collections import deque, Counter, OrderedDict\ninput = lambda : sys.stdin.readline()\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    s = S()\n    (c, n) = (0, len(s))\n    j = n - 1\n    for i in range(n):\n        if s[i] == s[j]:\n            c += 1\n            j -= 1\n    print(n - c)", "t = int(input())\nfor i in range(t):\n    s = input()\n    r = s[::-1]\n    a = 0\n    j = 0\n    for i in range(len(s)):\n        if s[i] != r[j]:\n            a += 1\n        else:\n            j += 1\n    print(a)", "import math\nt = int(input())\nfor tc in range(t):\n    str = input()\n    n = len(str)\n    rev = str[::-1]\n    ans = 0\n    j = 0\n    i = 0\n    while i < n:\n        if str[i] == rev[j]:\n            j += 1\n        else:\n            ans += 1\n        i += 1\n    print(ans)", "t = int(input())\nfor k in range(t):\n    s = input()\n    r = s[::-1]\n    (i, j, ct) = (0, 0, 0)\n    while i < len(s):\n        if s[i] == r[j]:\n            i += 1\n            j += 1\n        else:\n            i += 1\n            ct += 1\n    print(ct)", "import math\nt = int(input())\nfor tc in range(t):\n    s = input()\n    n = len(s)\n    rev = s[::-1]\n    j = 0\n    ans = 0\n    for i in range(n):\n        if s[i] == rev[j]:\n            j += 1\n        else:\n            ans += 1\n    print(ans)", "n = int(input())\nfor j in range(n):\n    s = input()\n    a = s[::-1]\n    cnt = 0\n    i = 0\n    j = 0\n    while i < len(s):\n        if s[i] == a[j]:\n            j += 1\n        else:\n            cnt += 1\n        i += 1\n    print(cnt)", "for _ in range(int(input())):\n    s = input()\n    r = s[::-1]\n    i = j = ans = 0\n    while i < len(s):\n        if s[i] != r[j]:\n            ans += 1\n        else:\n            j += 1\n        i += 1\n    print(ans)", "for i in range(int(input())):\n    s = input()\n    rev_s = s[::-1]\n    (i, j) = (0, 0)\n    count = 0\n    while i != len(s) and j != len(rev_s):\n        if s[i] != rev_s[j]:\n            count += 1\n            i += 1\n        else:\n            i += 1\n            j += 1\n    print(count)", "T = int(input())\nfor i in range(T):\n    s = str(input())\n    r = s\n    r = r[::-1]\n    (i, j, ans) = (0, 0, 0)\n    while i < len(s):\n        if s[i] == r[j]:\n            j += 1\n        else:\n            ans += 1\n        i += 1\n    print(ans)", "t = int(input())\nfor i in range(0, t):\n    s = input()\n    n = len(s)\n    i = 0\n    j = n - 1\n    count = 0\n    while i < n:\n        if s[i] == s[j]:\n            j -= 1\n        else:\n            count += 1\n        i += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    a = list(input())\n    n = len(a)\n    print()\n    if a == a[::-1]:\n        print(0)\n    else:\n        j = 0\n        for i in range(n):\n            if a[i] == a[n - j - 1]:\n                j += 1\n        print(n - j)", "import sys\ninput = sys.stdin.readline\nT = int(input())\n\ndef testcase():\n    a = input().split()[0]\n    n = len(a)\n    (i, j) = (0, n - 1)\n    cnt = 0\n    while i < n:\n        if a[i] != a[j]:\n            cnt += 1\n        else:\n            j -= 1\n        i += 1\n    print(cnt)\nfor _ in range(T):\n    testcase()", "T = int(input())\nfor _ in range(T):\n    s = input()\n    n = len(s)\n    s_rev = s[::-1]\n    j = n - 1\n    r = 0\n    for i in range(n - 1, -1, -1):\n        if s_rev[i] == s[j]:\n            j -= 1\n        else:\n            r += 1\n    print(r)", "T = int(input())\nfor _ in range(T):\n    s = input()\n    n = len(s)\n    s_rev = s[::-1]\n    j = n - 1\n    r = 0\n    for i in range(n - 1, -1, -1):\n        if s_rev[i] == s[j]:\n            j -= 1\n        else:\n            r += 1\n    print(r)", "for _ in range(int(input())):\n    st = input()\n    count = 0\n    st1 = st[::-1]\n    for i in range(len(st)):\n        if st1[count] == st[i]:\n            count += 1\n    print(len(st) - count)", "T = int(input())\nfor testCase in range(T):\n    name = input()\n    rev = name[::-1]\n    (count, j) = (0, 0)\n    for i in range(len(name)):\n        if name[i] == rev[j]:\n            j += 1\n        else:\n            count += 1\n    print(count)", "n = int(input())\nfor _ in range(n):\n    arr = input()\n    rev = arr[::-1]\n    count = 0\n    pos1 = len(arr) - 1\n    pos2 = len(arr) - 1\n    while pos2 >= 0:\n        while pos2 >= 0 and rev[pos2] != arr[pos1]:\n            pos2 -= 1\n            count += 1\n        if pos2 >= 0:\n            pos2 -= 1\n            pos1 -= 1\n    print(count)", "t = int(input())\nfor x in range(t):\n    S = str(input())\n    rev = S[::-1]\n    count = 0\n    j = 0\n    for i in range(len(S)):\n        if S[i] == rev[j]:\n            j += 1\n        else:\n            count += 1\n    print(count)", "try:\n    for _ in range(int(input())):\n        a = input()\n        b = a[::-1]\n        count = 0\n        i = 0\n        j = 0\n        while i < len(a) and j < len(b):\n            if a[i] != b[j]:\n                count += 1\n                i = i + 1\n            else:\n                i = i + 1\n                j = j + 1\n        print(count)\nexcept:\n    pass", "try:\n    for _ in range(int(input())):\n        a = input()\n        b = a[::-1]\n        i = 0\n        j = 0\n        ans = 0\n        while i < len(a):\n            if a[i] == b[j]:\n                j = j + 1\n            else:\n                ans = ans + 1\n            i = i + 1\n        print(ans)\nexcept:\n    pass", "t = int(input())\nfor i in range(t):\n    s = input()\n    j = s[::-1]\n    l = 0\n    k = 0\n    ans = 0\n    for l in range(len(s)):\n        if s[l] == j[k]:\n            k = k + 1\n        else:\n            ans = ans + 1\n            l = l + 1\n    print(ans)", "for i in range(int(input())):\n    s = str(input())\n    n = len(s)\n    rev = s[::-1]\n    count = 0\n    j = 0\n    for i in range(n):\n        if s[i] == rev[j]:\n            j += 1\n        else:\n            count += 1\n    print(count)", "for i in range(int(input())):\n    s = input()\n    r = s[::-1]\n    j = 0\n    c = 0\n    for i in range(len(s)):\n        if s[i] == r[j]:\n            j += 1\n        else:\n            c += 1\n    print(c)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input().strip())):\n    s = input().strip()\n    n = len(s)\n    k = s[::-1]\n    (left, right) = (0, 0)\n    cnt = 0\n    while left < n:\n        if s[left] != k[right]:\n            cnt += 1\n        else:\n            right += 1\n        left += 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    s = input()\n    s1 = s[::-1]\n    j = len(s) - 1\n    c = 0\n    for i in range(len(s) - 1, -1, -1):\n        if s1[i] == s[j]:\n            j -= 1\n        else:\n            c += 1\n    print(c)", "n = int(input())\nwhile n > 0:\n    n -= 1\n    s = input()\n    rev = s[::-1]\n    i = 0\n    j = 0\n    ans = 0\n    while i < len(s):\n        if s[i] == rev[j]:\n            j += 1\n        else:\n            ans += 1\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    r = s[::-1]\n    n = len(s)\n    j = 0\n    ans = 0\n    for i in range(n):\n        if s[i] == r[j]:\n            j += 1\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    r = s[::-1]\n    (i, j, ans) = (0, 0, 0)\n    while i < len(s):\n        if s[i] == r[j]:\n            j += 1\n        else:\n            ans += 1\n        i += 1\n    print(ans)", "for i in range(int(input())):\n    s = str(input())\n    reverse = s[::-1]\n    count = 0\n    j = 0\n    for i in range(len(s)):\n        if s[i] == reverse[j]:\n            j += 1\n        else:\n            count += 1\n    print(count)", "def check(s):\n    return s[::-1]\nfor _ in range(int(input())):\n    s = input()\n    rev = check(s)\n    a = 0\n    b = rev[0]\n    flag = 0\n    for i in range(0, len(s)):\n        if s[i] != b:\n            flag += 1\n        elif i != len(s) - 1:\n            a += 1\n            b = rev[a]\n    print(flag)", "t = int(input())\nfor i in range(t):\n    s = input()\n    s1 = s[::-1]\n    j = len(s) - 1\n    c = 0\n    for i in range(len(s) - 1, -1, -1):\n        if s1[i] == s[j]:\n            j -= 1\n        else:\n            c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    s = input()\n    s = list(s)\n    r = s[::-1]\n    (j, ans) = (0, 0)\n    for i in range(len(s)):\n        if s[i] == r[j]:\n            j += 1\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    s = input()\n    rev = s[::-1]\n    ans = 0\n    j = 0\n    k = 0\n    while j < len(s):\n        if s[j] == rev[k]:\n            k += 1\n        else:\n            ans += 1\n        j += 1\n    print(ans)", "for _ in range(int(input())):\n    x = input()\n    y = x[::-1]\n    i = 0\n    j = 0\n    ans = 0\n    while i < len(x):\n        if x[i] == y[j]:\n            j += 1\n        else:\n            ans += 1\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    (i, j) = (0, 0)\n    r = s[::-1]\n    ans = 0\n    while i < len(s):\n        if s[i] == r[j]:\n            j += 1\n        else:\n            ans += 1\n        i += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    count = 0\n    n = len(s)\n    for i in range(n):\n        if s[i] == s[n - count - 1]:\n            count += 1\n    print(n - count)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    count = 0\n    n = len(s)\n    for i in range(n):\n        if s[i] == s[n - count - 1]:\n            count += 1\n    print(n - count)", "for _ in range(int(input())):\n    s = input()\n    r = s[::-1]\n    (c, i, j) = (0, 0, 0)\n    while i < len(s):\n        if s[i] == r[j]:\n            j += 1\n        else:\n            c += 1\n        i += 1\n    print(c)", "for t in range(int(input())):\n    S = str(input())\n    N = len(S)\n    rev = S[::-1]\n    count = 0\n    j = 0\n    for i in range(N):\n        if S[i] == rev[j]:\n            j += 1\n        else:\n            count += 1\n    print(count)", "for j in range(int(input())):\n    s = input()\n    rev_s = s[::-1]\n    c = 0\n    for i in range(len(s)):\n        if s[i] == rev_s[c]:\n            c += 1\n    print(len(s) - c)", "for _ in range(int(input())):\n    s = input()\n    sr = s[::-1]\n    j = 0\n    for i in s:\n        if i == sr[j]:\n            j += 1\n    print(len(s) - j)", "for _ in range(int(input())):\n    s = input()\n    sr = s[::-1]\n    (i, j) = (0, 0)\n    for i in s:\n        if i == sr[j]:\n            j += 1\n    print(len(s) - j)", "for _ in range(int(input())):\n    s = input()\n    sr = s[::-1]\n    (i, j) = (0, 0)\n    length = len(s)\n    while i < length:\n        if s[i] == sr[j]:\n            j += 1\n        i += 1\n    print(length - j)", "for _ in range(int(input())):\n    s = input()\n    reversed_s = s[::-1]\n    count = 0\n    for i in range(len(s)):\n        if s[i] == reversed_s[count]:\n            count += 1\n    print(len(s) - count)", "for _ in range(int(input())):\n    s = list(input())\n    sr = s[:]\n    sr.reverse()\n    (i, j) = (0, 0)\n    length = len(s)\n    while i < length:\n        if s[i] == sr[j]:\n            j += 1\n        i += 1\n    print(length - j)", "for _ in range(int(input())):\n    s = input()\n    (i, j) = (0, 0)\n    r = s[::-1]\n    ans = 0\n    while i < len(s):\n        if s[i] == r[j]:\n            j += 1\n        else:\n            ans += 1\n        i += 1\n    print(ans)", "T = int(input())\nfor i in range(T):\n    S = input()\n    l = len(S)\n    R = S[::-1]\n    i = 0\n    j = 0\n    x = 0\n    while i < l:\n        if S[i] == R[j]:\n            i += 1\n            j += 1\n        else:\n            x += 1\n            i += 1\n    print(x)", "for _ in range(int(input())):\n    s = input()\n    (rs, j) = (s[::-1], 0)\n    for i in s:\n        if i == rs[j]:\n            j += 1\n    print(len(s) - j)", "def reverse(s):\n    str = ''\n    for i in s:\n        str = i + str\n    return str\nt = int(input())\nfor i in range(0, t):\n    s = input()\n    r = reverse(s)\n    i = 0\n    j = 0\n    ans = 0\n    while i < len(s):\n        if s[i] == r[j]:\n            j = j + 1\n        else:\n            ans = ans + 1\n        i = i + 1\n    print(ans)", "def maxLenPrefix(str1, str2):\n    i = 0\n    for j in range(len(str2)):\n        if str1[i] == str2[j]:\n            i += 1\n        if i == len(str1):\n            break\n    return i\n\ndef main():\n    t = int(input())\n    for tx in range(t):\n        pstr = input()\n        fstr = pstr[::-1]\n        maxPrefixLen = maxLenPrefix(fstr, pstr)\n        print(len(fstr) - maxPrefixLen)\n    return 0\nmain()", "t = int(input())\nfor _ in range(t):\n    s = input().rstrip()\n    n = len(s)\n    r = s[::-1]\n    j = ans = 0\n    for i in range(n):\n        if s[i] == r[j]:\n            j += 1\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    rev = s[::-1]\n    i = 0\n    j = 0\n    ans = 0\n    while i < len(s):\n        if s[i] == rev[j]:\n            j += 1\n        else:\n            ans += 1\n        i += 1\n    print(ans)", "caseCount = int(input())\nfor i in range(caseCount):\n    inputString = input()\n    sLen = len(inputString)\n    i = 0\n    j = sLen - 1\n    moves = 0\n    while i < sLen:\n        if inputString[i] == inputString[j]:\n            j -= 1\n        else:\n            moves += 1\n        i += 1\n    print(moves)", "for _ in range(int(input())):\n    s = input()\n    r = s[::-1]\n    (i, j) = (0, 0)\n    result = 0\n    while i < len(s):\n        if s[i] == r[j]:\n            j += 1\n        else:\n            result += 1\n        i += 1\n    print(result)", "for t in range(int(input())):\n    S = str(input())\n    N = len(S)\n    rev = S[::-1]\n    count = 0\n    j = 0\n    for i in range(N):\n        if S[i] == rev[j]:\n            j += 1\n        else:\n            count += 1\n    print(count)", "for t in range(int(input())):\n    s = input()\n    s1 = s[::-1]\n    j = 0\n    for i in range(len(s)):\n        if s[i] == s1[j]:\n            j += 1\n    print(len(s) - j)", "def check(s):\n    return s[::-1]\nfor _ in range(int(input())):\n    s = input()\n    rev = check(s)\n    a = 0\n    b = rev[0]\n    flag = 0\n    for i in range(len(s)):\n        if s[i] != b:\n            flag += 1\n        elif i != len(s) - 1:\n            a = a + 1\n            b = rev[a]\n    print(flag)", "def check(s):\n    return s[::-1]\nfor _ in range(int(input())):\n    s = input()\n    rev = check(s)\n    a = 0\n    b = rev[0]\n    flag = 0\n    for i in range(0, len(s)):\n        if s[i] != b:\n            flag += 1\n        elif i != len(s) - 1:\n            a = a + 1\n            b = rev[a]\n    print(flag)", "for t in range(int(input())):\n    str = input()\n    str2 = str[::-1]\n    (i, j) = (0, 0)\n    ans = 0\n    while i != len(str):\n        if str[i] == str2[j]:\n            i += 1\n            j += 1\n        else:\n            i += 1\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    r = s[::-1]\n    i = j = 0\n    ans = len(s)\n    while i < len(s):\n        if s[i] == r[j]:\n            i += 1\n            j += 1\n            ans -= 1\n        else:\n            i += 1\n    print(ans)", "T = int(input())\nfor test in range(T):\n    S = input()\n    N = len(S)\n    count = 0\n    for i in range(N):\n        if S[i] == S[N - count - 1]:\n            count += 1\n    print(N - count)", "try:\n    for _ in range(int(input())):\n        s = str(input())\n        n = len(s)\n        r = s[::-1]\n        (count, j) = (0, 0)\n        for i in range(n):\n            if s[i] == r[j]:\n                j += 1\n            else:\n                count += 1\n        print(count)\nexcept:\n    pass", "for _ in range(int(input())):\n    s = input()\n    a = []\n    for i in s:\n        a.append(i)\n    n = len(s)\n    r = a[::-1]\n    j = 0\n    ans = 0\n    i = 0\n    while i <= n - 1:\n        if a[i] == r[j]:\n            j += 1\n            i += 1\n        else:\n            ans += 1\n            i += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    rev = s[::-1]\n    c = 0\n    j = 0\n    for i in range(len(s)):\n        if s[i] == rev[j]:\n            j += 1\n        else:\n            c += 1\n    print(c)", "t = int(input())\nwhile t > 0:\n    s = str(input())\n    p = s[::-1]\n    count = 0\n    j = 0\n    for i in range(len(s)):\n        if s[i] == p[j]:\n            j = j + 1\n        else:\n            count += 1\n    print(count)\n    t -= 1"]