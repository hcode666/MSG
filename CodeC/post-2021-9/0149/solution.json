["import math\nfor _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    gcd = 0\n    for i in array:\n        gcd = math.gcd(gcd, i)\n    for i in array:\n        if i == gcd:\n            n -= 1\n    print(n)", "goals = int(input())\nfor distractions in range(goals):\n    wife = int(input())\n    life = list(map(int, input().split()))\n    death = max(life)\n    for i in life:\n        if death > i:\n            death = i\n    (final, total) = (0, 0)\n    for j in life:\n        if j != death:\n            if j % death == 0:\n                final += 1\n            else:\n                total = 1\n                break\n    if total:\n        print(wife)\n    else:\n        print(final)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = list(set(l))\n    ans = []\n    ans.append(n)\n    for k in s:\n        d = 1\n        f = n\n        for j in l:\n            if j % k != 0:\n                d = 0\n                break\n            if j == k:\n                f -= 1\n        if d:\n            ans.append(f)\n    print(min(ans))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = min(a)\n    c = 0\n    for i in range(n):\n        if a[i] % b == 0:\n            c += 1\n    if c == n:\n        print(n - a.count(b))\n    else:\n        print(n)", "goals = int(input())\nfor distractions in range(goals):\n    wife = int(input())\n    life = list(map(int, input().split()))\n    death = max(life)\n    for i in life:\n        if death > i:\n            death = i\n    (final, total) = (0, 0)\n    for j in life:\n        if j != death:\n            if j % death == 0:\n                final += 1\n            else:\n                total = 1\n                break\n    if total:\n        print(wife)\n    else:\n        print(final)", "import math\nT = int(input())\nfor t in range(T):\n    a = int(input())\n    b = list(map(int, input().split()))\n    count = 0\n    gcd = 0\n    for i in b:\n        gcd = math.gcd(gcd, i)\n    for i in b:\n        if i != gcd:\n            count += 1\n    print(count)", "from math import gcd\nfrom functools import reduce\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    GCD = reduce(gcd, lst)\n    ans = 0\n    for x in lst:\n        ans += x // GCD > 1\n    print(ans)", "from math import gcd\nfrom functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    GCD = reduce(gcd, a)\n    ans = 0\n    for x in a:\n        ans += x // GCD > 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = min(a)\n    l = len(a)\n    c = a.count(m)\n    if c == len(a):\n        print(0)\n    else:\n        a = list(filter(m.__ne__, a))\n        for i in a:\n            if i % m != 0:\n                print(l)\n                break\n        else:\n            print(len(a))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = min(a)\n    l = len(a)\n    c = a.count(m)\n    if c == len(a):\n        print(0)\n    else:\n        a = list(filter(m.__ne__, a))\n        for i in a:\n            if i % m != 0:\n                print(l)\n                break\n        else:\n            print(len(a))", "import math\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = 0\n    c = 0\n    for i in l:\n        g = math.gcd(i, g)\n    for i in l:\n        if i != g:\n            c = c + 1\n    print(c)", "from math import gcd\nfrom functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    GCD = reduce(gcd, a)\n    ans = 0\n    for x in a:\n        ans += x // GCD > 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = min(a)\n    c = 0\n    for i in range(n):\n        if a[i] % b == 0:\n            c += 1\n    if c == n:\n        print(n - a.count(b))\n    else:\n        print(n)", "from math import gcd\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 1\n    r = min(a)\n    for i in a:\n        if i % r != 0:\n            flag = 0\n            print(n)\n            break\n    if flag == 1:\n        print(n - a.count(r))", "from math import gcd\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    print(n - a.count(g))", "from math import gcd\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    for i in range(n):\n        a[i] //= g\n    print(n - a.count(1))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    a = min(A)\n    b = 0\n    for i in A:\n        if i % a != 0:\n            b = 1\n            break\n    if b == 1:\n        print(N)\n    else:\n        print(N - A.count(a))", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    x = 0\n    m = min(a)\n    for k in a:\n        if k % m == 0 and k != m:\n            x += 1\n        if k % m != 0 and k != m:\n            x = len(a)\n            break\n    print(x)", "for i in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    a = min(A)\n    c = 0\n    for i in A:\n        if i % a != 0:\n            c = 1\n            break\n    if c == 1:\n        print(n)\n    else:\n        print(n - A.count(a))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = min(a)\n    ans = 0\n    for i in a:\n        if i % x == 0 and i != x:\n            ans = ans + 1\n        if i % x != 0:\n            ans = len(a)\n            break\n    print(ans)", "goals = int(input())\nfor distractions in range(goals):\n    wife = int(input())\n    life = list(map(int, input().split()))\n    death = max(life)\n    for i in life:\n        if death > i:\n            death = i\n    (final, total) = (0, 0)\n    for j in life:\n        if j != death:\n            if j % death == 0:\n                final += 1\n            else:\n                total = 1\n                break\n    if total:\n        print(wife)\n    else:\n        print(final)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = min(a)\n    ans = 0\n    for i in a:\n        if i % x == 0 and i != x:\n            ans = ans + 1\n        if i % x != 0:\n            ans = len(a)\n            break\n    print(ans)", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    m = min(l)\n    cont = 0\n    for j in l:\n        if j % m != 0:\n            cont = len(l)\n            break\n        if j % m == 0 and j != m:\n            cont = cont + 1\n    print(cont)", "for _ in range(int(input())):\n    h = int(input())\n    a = list(map(int, input().split()))\n    b = min(a)\n    c = 0\n    for i in range(h):\n        if a[i] % b == 0:\n            c += 1\n    if c == h:\n        print(h - a.count(b))\n    else:\n        print(h)", "goals = int(input())\nfor distractions in range(goals):\n    wife = int(input())\n    life = list(map(int, input().split()))\n    death = max(life)\n    for i in life:\n        if death > i:\n            death = i\n    (final, total) = (0, 0)\n    for j in life:\n        if j != death:\n            if j % death == 0:\n                final += 1\n            else:\n                total = 1\n                break\n    if total:\n        print(wife)\n    else:\n        print(final)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = min(x)\n    count = 0\n    for z in x:\n        if z % y != 0:\n            count = 1\n            break\n    if count == 1:\n        print(n)\n    else:\n        print(n - x.count(y))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = min(a)\n    c = 0\n    for i in range(n):\n        if a[i] % b == 0:\n            c += 1\n    if c == n:\n        print(n - a.count(b))\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = min(a)\n    c = 0\n    for i in range(n):\n        if a[i] % b == 0:\n            c += 1\n    if c == n:\n        print(n - a.count(b))\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = min(x)\n    count = 0\n    for z in x:\n        if z % y != 0:\n            count = 1\n            break\n    if count == 1:\n        print(n)\n    else:\n        print(n - x.count(y))", "goals = int(input())\nfor distractions in range(goals):\n    wife1 = int(input())\n    life = list(map(int, input().split()))\n    death = max(life)\n    for i in life:\n        if death > i:\n            death = i\n    (final, total) = (0, 0)\n    for j in life:\n        if j != death:\n            if j % death == 0:\n                final += 1\n            else:\n                total = 1\n                break\n    if total:\n        print(wife1)\n    else:\n        print(final)", "goals = int(input())\nfor distractions in range(goals):\n    wife = int(input())\n    life = list(map(int, input().split()))\n    death = max(life)\n    for i in life:\n        if death > i:\n            death = i\n    (final, total) = (0, 0)\n    for j in life:\n        if j != death:\n            if j % death == 0:\n                final += 1\n            else:\n                total = 1\n                break\n    if total:\n        print(wife)\n    else:\n        print(final)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = min(x)\n    count = 0\n    for z in x:\n        if z % y != 0:\n            count = 1\n            break\n    if count == 1:\n        print(n)\n    else:\n        print(n - x.count(y))", "import math\ntests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    gcd = arr[0]\n    for j in arr:\n        gcd = math.gcd(gcd, j)\n    ans = 0\n    arr.sort()\n    for j in range(length):\n        if arr[j] != gcd:\n            ans += 1\n    print(ans)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    list = [int(i) for i in input().split()]\n    gc = 0\n    count = 0\n    for i in list:\n        gc = math.gcd(i, gc)\n    for i in list:\n        if i != gc:\n            count += 1\n    print(count)", "k = int(input())\nfor i in range(k):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    chota = min(lis)\n    c = 0\n    for i in lis:\n        if i % chota != 0:\n            print(n)\n            c = 1\n            break\n    if c == 0:\n        print(n - lis.count(chota))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    x = min(lst)\n    flag = 0\n    for i in lst:\n        if i % x != 0:\n            print(n)\n            flag = 1\n            break\n    if flag == 0:\n        print(n - lst.count(x))", "def same(ls):\n    for i in range(len(lst)):\n        ls[i] = ls[i] == ls[-1]\n    return all(ls)\n\ndef make(x, lst):\n    for i in range(len(lst)):\n        lst[i] = lst[i] % x\n    return lst.count(0)\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    ls1 = lst.copy()\n    if same(ls1):\n        print(0)\n    else:\n        x = lst[0]\n        y = [i % x != 0 for i in lst]\n        if any(y):\n            print(len(lst))\n        else:\n            ls2 = lst.copy()\n            while ls2[0] == x:\n                ls2.remove(x)\n            print(make(x, ls2))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = min(x)\n    count = 0\n    for z in x:\n        if z % y != 0:\n            count = 1\n            break\n    if count == 1:\n        print(n)\n    else:\n        print(n - x.count(y))", "goals = int(input())\nfor distractions in range(goals):\n    wife = int(input())\n    life = list(map(int, input().split()))\n    death = max(life)\n    for i in life:\n        if death > i:\n            death = i\n    (final, total) = (0, 0)\n    for j in life:\n        if j != death:\n            if j % death == 0:\n                final += 1\n            else:\n                total = 1\n                break\n    if total:\n        print(wife)\n    else:\n        print(final)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    m = 0\n    flag = 0\n    l.sort()\n    for i in range(len(l) - 1):\n        if l[i] != l[i + 1]:\n            flag = 1\n            break\n    if flag == 0:\n        print(0)\n    else:\n        for i in range(1, n):\n            if l[i] % l[0] == 0 and l[i] != l[0]:\n                c += 1\n            elif l[i] % l[0] != 0:\n                m = n\n                break\n        if m == n:\n            print(n)\n        else:\n            print(c)", "goals = int(input())\nfor distractions in range(goals):\n    wife = int(input())\n    life = list(map(int, input().split()))\n    death = max(life)\n    for i in life:\n        if death > i:\n            death = i\n    (final, total) = (0, 0)\n    for j in life:\n        if j != death:\n            if j % death == 0:\n                final += 1\n            else:\n                total = 1\n                break\n    if total:\n        print(wife)\n    else:\n        print(final)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    m = max(A)\n    count = 0\n    s = 0\n    for i in A:\n        if m > i:\n            m = i\n    for j in A:\n        if j != m:\n            if j % m == 0:\n                count += 1\n            else:\n                s = 1\n                break\n    if s:\n        print(n)\n    else:\n        print(count)", "import math\n\ndef big_gcd(arr):\n    b = arr.copy()\n    c = math.gcd(b[-1], b[-2])\n    b.pop()\n    b.pop()\n    while len(b) > 0:\n        c = math.gcd(c, b[-1])\n        b.pop()\n    return c\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n == 1:\n        print(0)\n        continue\n    g = big_gcd(a)\n    ans = 0\n    for i in a:\n        ans += int(not g == i)\n    print(ans)", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    m = min(l)\n    cont = 0\n    for j in l:\n        if j % m != 0:\n            cont = len(l)\n            break\n        if j % m == 0 and j != m:\n            cont = cont + 1\n    print(cont)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    x = a[0]\n    for i in range(n):\n        x = math.gcd(x, a[i])\n    for i in range(n):\n        if a[i] != x:\n            a[i] = a[i] / x\n            count += 1\n        else:\n            pass\n    print(count)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    val = a[0]\n    for i in range(1, n):\n        val = math.gcd(val, a[i])\n    res = 0\n    for num in a:\n        if num != val:\n            res += 1\n    print(res)", "goals = int(input())\nfor distractions in range(goals):\n    wife = int(input())\n    life = list(map(int, input().split()))\n    death = max(life)\n    for i in life:\n        if death > i:\n            death = i\n    (final, total) = (0, 0)\n    for j in life:\n        if j != death:\n            if j % death == 0:\n                final += 1\n            else:\n                total = 1\n                break\n    if total:\n        print(wife)\n    else:\n        print(final)", "goals = int(input())\nfor distractions in range(goals):\n    wife = int(input())\n    life = list(map(int, input().split()))\n    death = max(life)\n    for i in life:\n        if death > i:\n            death = i\n    (final, total) = (0, 0)\n    for j in life:\n        if j != death:\n            if j % death == 0:\n                final += 1\n            else:\n                total = 1\n                break\n    if total:\n        print(wife)\n    else:\n        print(final)", "from math import gcd\nfrom functools import reduce\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    G = reduce(gcd, A)\n    B = [a > G for a in A]\n    print(sum(B))", "goals = int(input())\nfor distractions in range(goals):\n    wife = int(input())\n    life = list(map(int, input().split()))\n    death = max(life)\n    for i in life:\n        if death > i:\n            death = i\n    (final, total) = (0, 0)\n    for j in life:\n        if j != death:\n            if j % death == 0:\n                final += 1\n            else:\n                total = 1\n                break\n    if total:\n        print(wife)\n    else:\n        print(final)", "def GCD(a, b):\n    if b == 0:\n        return abs(a)\n    else:\n        return GCD(b, a % b)\nt = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    g = arr[0]\n    for x in arr:\n        g = GCD(x, g)\n    print(n - arr.count(g))\n    t -= 1", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    s = set(l)\n    m = min(l)\n    c = 0\n    for i in l:\n        if i % m == 0:\n            c += 1\n    if len(s) > 1:\n        if c == len(l):\n            print(len(l) - l.count(m))\n        else:\n            print(len(l))\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    a = min(A)\n    c = 0\n    for i in A:\n        if i % a != 0:\n            c = 1\n            break\n    if c == 1:\n        print(n)\n    else:\n        print(n - A.count(a))", "import sys\nfor i in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in sys.stdin.readline().split()]\n    x = min(arr)\n    flag = False\n    ans = 0\n    for i in range(len(arr)):\n        if arr[i] % x != 0:\n            flag = True\n            break\n        elif arr[i] != x:\n            ans += 1\n    if flag == True:\n        print(len(arr))\n    else:\n        print(ans)\n        print()", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    minA = min(A)\n    count = 0\n    for a in A:\n        if a % minA != 0:\n            count = N\n            break\n        elif a // minA > 1:\n            count += 1\n    print(count)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = min(l)\n    c = 0\n    for i in l:\n        if i % x != 0:\n            c = n\n            break\n        elif i // x > 1:\n            c += 1\n    print(c)\n    t -= 1", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    low = min(arr)\n    for i in arr:\n        low = gcd(low, i)\n        if low == 1:\n            break\n    count = 0\n    for i in arr:\n        if i != low:\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    v = list(map(int, input().split()))\n    v.sort()\n    a = 0\n    b = v[0]\n    for i in v:\n        if b == i:\n            continue\n        if i % b != 0:\n            a = n\n            break\n        a += 1\n    print(a)", "for i in range(int(input())):\n    y = int(input())\n    z = list(map(int, input().split()))\n    x = set(z)\n    if len(x) == 1:\n        print(0)\n    else:\n        z.sort()\n        c = 0\n        for i in range(y):\n            if i >= 1 and z[i] != z[0]:\n                if z[i] % z[0] == 0:\n                    c += 1\n                else:\n                    c = len(z)\n                    break\n        print(c)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    ans = l[0]\n    for i in range(1, n):\n        ans = math.gcd(ans, l[i])\n    print(n - l.count(ans))", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    low = min(arr)\n    for i in arr:\n        low = gcd(low, i)\n        if low == 1:\n            break\n    count = 0\n    for i in arr:\n        if i != low:\n            count += 1\n    print(count)", "goals = int(input())\nfor distractions in range(goals):\n    wife = int(input())\n    life = list(map(int, input().split()))\n    death = max(life)\n    for i in life:\n        if death > i:\n            death = i\n    (final, total) = (0, 0)\n    for j in life:\n        if j != death:\n            if j % death == 0:\n                final += 1\n            else:\n                total = 1\n                break\n    if total:\n        print(wife)\n    else:\n        print(final)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = min(a)\n    flag = 0\n    count = 0\n    for i in a:\n        if i % s == 0:\n            if i != s:\n                count += 1\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print(count)\n    else:\n        print(n)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = min(a)\n    f = 1\n    c = 0\n    for i in a:\n        if i != m:\n            if i % m == 0:\n                c += 1\n            else:\n                f = 0\n                break\n    if f == 1:\n        print(c)\n    else:\n        print(n)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    f = 1\n    m = min(a)\n    for i in a:\n        if i != m:\n            if i % m == 0:\n                c += 1\n            else:\n                f = 0\n                break\n    if f == 1:\n        print(c)\n    else:\n        print(n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    maxi = min(l)\n    c = 0\n    flag = 0\n    for j in l:\n        if j != maxi:\n            if j % maxi == 0:\n                c += 1\n            else:\n                flag = 1\n                break\n    if flag == 0:\n        print(c)\n    else:\n        print(n)", "import math\nfor j in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = 0\n    i = 1\n    h = l[i - 1]\n    for k in range(1, n):\n        h = math.gcd(h, l[k])\n    for k in range(n):\n        if l[k] == h:\n            pass\n        else:\n            count = count + 1\n    print(count)", "import math\nfor j in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = 0\n    i = 1\n    h = l[i - 1]\n    for k in range(1, n):\n        h = math.gcd(h, l[k])\n    for k in range(n):\n        if l[k] == h:\n            pass\n        else:\n            count = count + 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set(a)\n    mini = min(a)\n    count = 0\n    for i in a:\n        if i % mini == 0:\n            count += 1\n    if len(s) > 1:\n        if count == len(a):\n            print(len(a) - a.count(mini))\n        else:\n            print(len(a))\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set(a)\n    mini = min(a)\n    count = 0\n    for i in a:\n        if i % mini == 0:\n            count += 1\n    if len(s) > 1:\n        if count == len(a):\n            print(len(a) - a.count(mini))\n        else:\n            print(len(a))\n    else:\n        print(0)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    h = 0\n    g = 0\n    for i in range(n):\n        g = math.gcd(g, a[i])\n    for i in range(n):\n        if a[i] != g:\n            h += 1\n    print(h)", "for i in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    a = min(A)\n    c = 0\n    for i in A:\n        if i % a != 0:\n            c = 1\n            break\n    if c == 1:\n        print(n)\n    else:\n        print(n - A.count(a))", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in l:\n        g = gcd(g, i)\n    c = 0\n    for i in l:\n        if i != g:\n            c += 1\n    print(c)", "from math import gcd\nfrom functools import reduce\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = reduce(gcd, a)\n    print(n - a.count(g))", "x = int(input())\nfor i in range(x):\n    y = int(input())\n    z = input().split()\n    z = list(map(int, z))\n    counter = 0\n    n = min(z)\n    for m in range(len(z)):\n        if z[m] % n == 0 and z[m] != n:\n            counter += 1\n        if z[m] % n != 0:\n            counter = len(z)\n            break\n    print(counter)", "from math import gcd\nfrom functools import reduce\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = reduce(lambda a, b: gcd(a, b), l)\n    print(len(l) - l.count(k))", "from math import gcd\nfrom functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = reduce(lambda a, b: gcd(a, b), l)\n    print(len(l) - l.count(k))", "from math import gcd\nfrom functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = reduce(lambda a, b: gcd(a, b), l)\n    print(len(l) - l.count(k))", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        c = l[0]\n        for i in l[1:]:\n            c = gcd(c, i)\n        a = 0\n        for i in l:\n            if i != c:\n                a += 1\n        print(a)", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        gc = l[0]\n        for i in l[1:]:\n            gc = gcd(gc, i)\n        cnt = 0\n        for i in l:\n            if i != gc:\n                cnt += 1\n        print(cnt)", "lster = lambda : list(map(int, input().split()))\n\ndef gcd(a: int, b: int):\n    while a != 0:\n        (a, b) = (b % a, a)\n    return b\n\ndef sol():\n    n = int(input())\n    l = lster()\n    if n == 1:\n        print(0)\n    else:\n        gc = l[0]\n        for i in l[1:]:\n            gc = gcd(gc, i)\n        cnt = 0\n        for i in l:\n            if i != gc:\n                cnt += 1\n        print(cnt)\nfor _ in range(int(input())):\n    sol()", "from math import gcd\nfrom functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = reduce(lambda a, b: gcd(a, b), l)\n    print(len(l) - l.count(k))", "from math import gcd\nfrom functools import reduce\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = reduce(lambda a, b: gcd(a, b), l)\n    print(len(l) - l.count(k))", "from math import gcd\nfrom functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = reduce(lambda a, b: gcd(a, b), l)\n    print(len(l) - l.count(k))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nfrom math import gcd\nfrom functools import reduce\nans = []\nfor _ in range(inp()):\n    N = inp()\n    A = inlt()\n    g = reduce(gcd, A)\n    ans.append(N - A.count(g))\noutplt(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    N = inp()\n    A = inlt()\n    mn = min(A)\n    for a in A:\n        if a % mn:\n            ans.append(N)\n            break\n    else:\n        ans.append(N - A.count(mn))\noutplt(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\n\ndef gcd(x, y):\n    return gcd(y, x % y) if x % y else y\nans = []\nfor _ in range(inp()):\n    N = inp()\n    A = inlt()\n    g = A[0]\n    for a in A[1:]:\n        g = gcd(a, g)\n    ans.append(N - A.count(g))\noutplt(ans)", "lster = lambda : list(map(int, input().split()))\n\ndef gcd(a: int, b: int):\n    while a != 0:\n        (a, b) = (b % a, a)\n    return b\n\ndef sol():\n    n = int(input())\n    l = lster()\n    if n == 1:\n        print(0)\n    else:\n        gc = l[0]\n        for i in l[1:]:\n            gc = gcd(gc, i)\n        cnt = 0\n        for i in l:\n            if i != gc:\n                cnt += 1\n        print(cnt)\nfor _ in range(int(input())):\n    sol()", "from math import gcd\nt = int(input())\nfor ni in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    x = 0\n    m = min(l)\n    for i in l:\n        if i % m == 0:\n            x = x + 1\n        else:\n            break\n    if x != n:\n        print(n)\n    else:\n        print(n - l.count(m))", "t = int(input())\nfor i in range(t):\n    num_elems = int(input())\n    elems_list = list(map(int, input().split()))\n    mini = min(elems_list)\n    x = 0\n    for i in range(num_elems):\n        if elems_list[i] % mini == 0:\n            x += 1\n        else:\n            break\n    if x != num_elems:\n        print(num_elems)\n    else:\n        print(f'{num_elems - elems_list.count(mini)}')", "t = eval(input(''))\nwhile t != 0:\n    t -= 1\n    n = eval(input(''))\n    a = []\n    g = 0\n    k = 0\n    a = list(map(int, input().split()))\n    h = min(a)\n    for i in range(n):\n        if a[i] > h:\n            d = a[i] // h\n            if h == a[i] / d:\n                g += 1\n            else:\n                k = 1\n    if k == 1:\n        print(n)\n    else:\n        print(g)", "for i in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    a = min(A)\n    c = 0\n    for i in A:\n        if i % a != 0:\n            c = 1\n            break\n    if c == 1:\n        print(n)\n    else:\n        print(n - A.count(a))", "t = eval(input(''))\nwhile t != 0:\n    t -= 1\n    n = eval(input(''))\n    a = []\n    g = 0\n    k = 0\n    a = list(map(int, input().split()))\n    h = min(a)\n    for i in range(n):\n        if a[i] > h:\n            d = a[i] // h\n            if h == a[i] / d:\n                g += 1\n            else:\n                k = 1\n    if k == 1:\n        print(n)\n    else:\n        print(g)"]