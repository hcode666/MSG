["import math\nt = int(input())\nfor kkk in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = {}\n    for i in range(n):\n        d[a[i]] = d.get(a[i], 0) + 1\n    max_ans = 0\n    for i in d:\n        ans = d[i]\n        if i - 1 in d and i ^ i - 1 <= 1:\n            ans += d[i - 1]\n        max_ans = max(ans, max_ans)\n    print(n - max_ans)", "for _ in range(int(input())):\n    l = [0]\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n + 5):\n        l.append(0)\n    for i in range(n):\n        l[a[i]] += 1\n    m = 0\n    for i in range(0, n + 2, 2):\n        if l[i] + l[i + 1] > m:\n            m = l[i] + l[i + 1]\n    print(n - m)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    p = l[0]\n    k = [[p, 1]]\n    for i in range(1, n):\n        if k[-1][0] == l[i]:\n            k[-1][1] += 1\n        else:\n            k += [[l[i], 1]]\n    k.sort()\n    m = 0\n    p = 0\n    l = len(k)\n    for i in range(len(k)):\n        if p:\n            p = 0\n            continue\n        if k[i][0] % 2:\n            if k[i][1] > m:\n                m = k[i][1]\n        elif i != l - 1:\n            if k[i][0] - k[i + 1][0] == -1:\n                if k[i][1] + k[i + 1][1] > m:\n                    m = k[i][1] + k[i + 1][1]\n                p = 1\n            elif k[i][1] > m:\n                m = k[i][1]\n        elif k[i][1] > m:\n            m = k[i][1]\n    print(n - m)", "import math\n\ndef main(arr, l):\n    arr.sort()\n    dct = dict()\n    M_value = 0\n    for _ in arr:\n        if _ not in dct:\n            dct[_] = 1\n        else:\n            dct[_] += 1\n        if dct[_] > M_value:\n            M_value = dct[_]\n    for _ in dct.keys():\n        if _ % 2 == 0:\n            next = _ + 1\n            if next in dct.keys():\n                r = dct[next] + dct[_]\n                if r > M_value:\n                    M_value = r\n    return l - M_value\nfor _ in range(int(input())):\n    l = int(input())\n    arr = list(map(int, input().split()))[:l]\n    print(main(arr, l))", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    p = l[0]\n    k = [[p, 1]]\n    for i in range(1, n):\n        if k[-1][0] == l[i]:\n            k[-1][1] += 1\n        else:\n            k += [[l[i], 1]]\n    k.sort()\n    m = 0\n    p = 0\n    l = len(k)\n    for i in range(len(k)):\n        if p:\n            p = 0\n            continue\n        if k[i][0] % 2:\n            if k[i][1] > m:\n                m = k[i][1]\n        elif i != l - 1:\n            if k[i][0] - k[i + 1][0] == -1:\n                if k[i][1] + k[i + 1][1] > m:\n                    m = k[i][1] + k[i + 1][1]\n                p = 1\n            elif k[i][1] > m:\n                m = k[i][1]\n        elif k[i][1] > m:\n            m = k[i][1]\n    print(n - m)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    p = l[0]\n    k = [[p, 1]]\n    for i in range(1, n):\n        if k[-1][0] == l[i]:\n            k[-1][1] += 1\n        else:\n            k += [[l[i], 1]]\n    k.sort()\n    m = 0\n    p = 0\n    l = len(k)\n    for i in range(len(k)):\n        if p:\n            p = 0\n            continue\n        if k[i][0] % 2:\n            if k[i][1] > m:\n                m = k[i][1]\n        elif i != l - 1:\n            if k[i][0] - k[i + 1][0] == -1:\n                if k[i][1] + k[i + 1][1] > m:\n                    m = k[i][1] + k[i + 1][1]\n                p = 1\n            elif k[i][1] > m:\n                m = k[i][1]\n        elif k[i][1] > m:\n            m = k[i][1]\n    print(n - m)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    p = l[0]\n    k = [[p, 1]]\n    for i in range(1, n):\n        if k[-1][0] == l[i]:\n            k[-1][1] += 1\n        else:\n            k += [[l[i], 1]]\n    k.sort()\n    m = 0\n    p = 0\n    l = len(k)\n    for i in range(len(k)):\n        if p:\n            p = 0\n            continue\n        if k[i][0] % 2:\n            if k[i][1] > m:\n                m = k[i][1]\n        elif i != l - 1:\n            if k[i][0] - k[i + 1][0] == -1:\n                if k[i][1] + k[i + 1][1] > m:\n                    m = k[i][1] + k[i + 1][1]\n                p = 1\n            elif k[i][1] > m:\n                m = k[i][1]\n        elif k[i][1] > m:\n            m = k[i][1]\n    print(n - m)", "for _ in range(int(input())):\n    n = int(input())\n    flag = 0\n    mask = ~(1 << 0)\n    size = input()\n    a = size.split(' ')\n    for j in range(n):\n        a[j] = int(a[j]) & mask\n    idx = []\n    for k in range(n + 2):\n        idx.append(0)\n    for l in range(n):\n        idx[a[l]] = idx[a[l]] + 1\n        flag = max(flag, idx[a[l]])\n    print(n - flag)", "for i in range(0, int(input())):\n    zz = int(input())\n    arr = list(map(int, input().split()))\n    dicti = {}\n    maxi = 1\n    for i in range(0, len(arr)):\n        if arr[i] in dicti.keys():\n            dicti[arr[i]] = dicti[arr[i]] + 1\n            if dicti[arr[i]] > maxi:\n                maxi = dicti[arr[i]]\n        else:\n            dicti[arr[i]] = 1\n    for j in dicti.keys():\n        if j % 2 == 0:\n            p = j + 1\n            if p in dicti.keys():\n                u = dicti[p] + dicti[j]\n                if u > maxi:\n                    maxi = u\n    print(zz - maxi)", "for i in range(0, int(input())):\n    zz = int(input())\n    arr = list(map(int, input().split()))\n    dicti = {}\n    maxi = 1\n    for i in range(0, len(arr)):\n        if arr[i] in dicti.keys():\n            dicti[arr[i]] = dicti[arr[i]] + 1\n            if dicti[arr[i]] > maxi:\n                maxi = dicti[arr[i]]\n        else:\n            dicti[arr[i]] = 1\n    for j in dicti.keys():\n        p = j ^ 1\n        if p in dicti.keys():\n            u = dicti[p] + dicti[j]\n            if u > maxi:\n                maxi = u\n    print(zz - maxi)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    flag = 0\n    mask = ~(1 << 0)\n    size = input()\n    a = size.split(' ')\n    for j in range(n):\n        a[j] = int(a[j]) & mask\n    idx = []\n    for k in range(n + 2):\n        idx.append(0)\n    for l in range(n):\n        idx[a[l]] = idx[a[l]] + 1\n        flag = max(flag, idx[a[l]])\n    print(n - flag)", "for i in range(int(input())):\n    n = int(input())\n    flag = 0\n    mask = ~(1 << 0)\n    size = input()\n    a = size.split(' ')\n    for j in range(n):\n        a[j] = int(a[j]) & mask\n    idx = []\n    for k in range(n + 2):\n        idx.append(0)\n    for l in range(n):\n        idx[a[l]] = idx[a[l]] + 1\n        flag = max(flag, idx[a[l]])\n    print(n - flag)", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = collections.Counter(a)\n    longest = 0\n    length = 0\n    for key in d:\n        if key % 2 == 0:\n            if key + 1 in d:\n                length = d[key] + d[key + 1]\n            else:\n                length = d[key]\n        else:\n            length = d[key]\n        if longest < length:\n            longest = length\n    min_opt = n - longest\n    print(min_opt)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ma = 0\n    count = 1\n    for i in range(1, n):\n        if a[i] ^ a[i - 1] <= 1:\n            count += 1\n        else:\n            ma = max(ma, count)\n            count = 1\n    ma = max(ma, count)\n    print(n - ma)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ma = 0\n    count = 1\n    for i in range(1, n):\n        if a[i] ^ a[i - 1] <= 1:\n            count += 1\n        else:\n            ma = max(ma, count)\n            count = 1\n    ma = max(ma, count)\n    print(n - ma)", "import collections\nT = int(input())\nfor x in range(T):\n    n = int(input())\n    a = collections.Counter([*map(int, input().split())])\n    m = max((a[k] + [a[k + 1], a[k - 1]][k % 2] for k in a))\n    print(n - m)", "import sys\nimport collections\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    n = int(input())\n    a = collections.Counter([*map(int, input().split())])\n    m = max((a[k] + [a[k + 1], a[k - 1]][k % 2] for k in a))\n    print(n - m)", "import collections\nfor i in range(int(input())):\n    n = int(input())\n    a = collections.Counter([*map(int, input().split())])\n    print(n - max((a[k] + [a[k + 1], a[k - 1]][k % 2] for k in a)))", "import sys\nimport collections\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    n = int(input())\n    a = collections.Counter([*map(int, input().split())])\n    m = max((a[k] + [a[k + 1], a[k - 1]][k % 2] for k in a))\n    print(n - m)", "for t in range(int(input())):\n    size = int(input())\n    li = list(map(int, input().split()))\n    d = {}\n    for i in li:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    c = []\n    for i in d:\n        c.append(d[i])\n        try:\n            if i ^ i + 1 == 1:\n                c.append(d[i] + d[i + 1])\n        except:\n            a = 2\n    print(size - max(c))", "from collections import Counter\nfor tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [x | 1 for x in a]\n    c = Counter(b)\n    print(n - max(c.values()))", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    k = list(c.keys())\n    v = list(c.values())\n    k.sort()\n    maxval = 0\n    for i in range(len(k) - 1):\n        if k[i] + 1 == k[i + 1] and k[i] % 2 == 0:\n            if c[k[i]] + c[k[i + 1]] > maxval:\n                maxval = c[k[i]] + c[k[i + 1]]\n        if c[k[i]] > maxval:\n            maxval = c[k[i]]\n    if c[k[-1]] > maxval:\n        maxval = c[k[-1]]\n    print(n - maxval)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    k = list(c.keys())\n    v = list(c.values())\n    k.sort()\n    mindel = n\n    for i in range(len(k) - 1):\n        if k[i] + 1 == k[i + 1] and k[i] % 2 == 0:\n            if n - (c[k[i]] + c[k[i + 1]]) < mindel:\n                mindel = n - (c[k[i]] + c[k[i + 1]])\n        if n - c[k[i]] < mindel:\n            mindel = n - c[k[i]]\n    if n - c[k[-1]] < mindel:\n        mindel = n - c[k[-1]]\n    print(mindel)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    freq = [0] * (n + 1)\n    for i in l:\n        freq[i] += 1\n    m = freq[0]\n    for i in range(len(freq)):\n        if i % 2 != 0:\n            m = max(m, freq[i] + freq[i - 1])\n    if n % 2 == 0:\n        m = max(m, freq[n])\n    print(n - m)", "from collections import *\nfrom itertools import *\nfrom functools import *\nfrom heapq import *\nimport sys, math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = defaultdict(int)\n    c = Counter(l)\n    ans = 0\n    for x in c.keys():\n        if x ^ x + 1 == 1:\n            ans = max(ans, c[x] + c[x + 1])\n        else:\n            ans = max(ans, c[x])\n    print(n - ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [x | 1 for x in a]\n    c = Counter(b)\n    print(n - max(c.values()))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    N = inp()\n    A = invr()\n    dic = {}\n    for a in A:\n        x = a | 1\n        if x in dic:\n            dic[x] += 1\n        else:\n            dic[x] = 1\n    ans.append(N - max(dic.values()))\noutplt(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    mx1 = max(list(d.values()))\n    mx2 = 0\n    for k in d:\n        if k % 2 == 0 and k + 1 in d:\n            if d[k] + d[k + 1] > mx2:\n                mx2 = d[k + 1] + d[k]\n    print(n - max(mx1, mx2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    mx1 = max(list(d.values()))\n    mx2 = 0\n    for k in d:\n        if k % 2 == 0 and k + 1 in d:\n            if d[k] + d[k + 1] > mx2:\n                mx2 = d[k + 1] + d[k]\n    print(n - max(mx1, mx2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    mx1 = max(list(d.values()))\n    mx2 = 0\n    for k in d:\n        if k % 2 == 0 and k + 1 in d:\n            if d[k] + d[k + 1] > mx2:\n                mx2 = d[k + 1] + d[k]\n    print(n - max(mx1, mx2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    mx1 = max(list(d.values()))\n    mx2 = 0\n    for k in d:\n        if k % 2 == 0 and k + 1 in d:\n            if d[k] + d[k + 1] > mx2:\n                mx2 = d[k + 1] + d[k]\n    print(n - max(mx1, mx2))", "for i in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    d = {}\n    for j in k:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    mx1 = max(list(d.values()))\n    mx2 = 0\n    for jj in d:\n        if jj % 2 == 0 and jj + 1 in d:\n            if d[jj] + d[jj + 1] > mx2:\n                mx2 = d[jj + 1] + d[jj]\n    print(n - max(mx1, mx2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    mx1 = max(list(d.values()))\n    mx2 = 0\n    for jj in d:\n        if jj % 2 == 0 and jj + 1 in d:\n            if d[jj] + d[jj + 1] > mx2:\n                mx2 = d[jj] + d[jj + 1]\n    print(n - max(mx1, mx2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    mx1 = max(list(d.values()))\n    mx2 = 0\n    for k in d:\n        if k % 2 == 0 and k + 1 in d:\n            if d[k] + d[k + 1] > mx2:\n                mx2 = d[k + 1] + d[k]\n    print(n - max(mx1, mx2))", "for i in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    d = {}\n    for j in k:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    mx1 = max(list(d.values()))\n    mx2 = 0\n    for jj in d:\n        if jj % 2 == 0 and jj + 1 in d:\n            if d[jj] + d[jj + 1] > mx2:\n                mx2 = d[jj + 1] + d[jj]\n    print(n - max(mx1, mx2))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (c, m) = (0, 0)\n    for i in range(n - 1):\n        if a[i] == a[i + 1] or (a[i] % 2 == 0 and a[i + 1] == a[i] + 1):\n            c += 1\n        else:\n            c = 0\n        m = max(m, c)\n    print(n - m - 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (c, m) = (0, 0)\n    for i in range(n - 1):\n        if a[i] == a[i + 1] or (a[i] % 2 == 0 and a[i + 1] == a[i] + 1):\n            c += 1\n        else:\n            c = 0\n        m = max(m, c)\n    print(n - m - 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (c, m) = (0, 0)\n    for i in range(n - 1):\n        if a[i] == a[i + 1] or (a[i] % 2 == 0 and a[i + 1] == a[i] + 1):\n            c += 1\n        else:\n            c = 0\n        m = max(m, c)\n    print(n - m - 1)", "def app(l):\n    a = []\n    m = {}\n    for i in l:\n        if i % 2:\n            a.append(i - 1)\n        else:\n            a.append(i)\n    for i in a:\n        if i in m:\n            m[i] = m[i] + 1\n        else:\n            m[i] = 1\n    k = 0\n    for i in m:\n        if m[i] > k:\n            k = m[i]\n    return n - k\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(app(l))\n    t -= 1", "def app(l):\n    a = []\n    m = {}\n    for i in l:\n        if i % 2:\n            a.append(i - 1)\n        else:\n            a.append(i)\n    for i in a:\n        if i in m:\n            m[i] = m[i] + 1\n        else:\n            m[i] = 1\n    k = 0\n    for i in m:\n        if m[i] > k:\n            k = m[i]\n    return n - k\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(app(l))\n    t -= 1", "def ans(arr):\n    arr.sort()\n    i = 0\n    j = 0\n    cand = []\n    done = False\n    cmp = arr[i]\n    while j < len(arr):\n        if arr[j] == cmp:\n            j += 1\n            if j == len(arr):\n                cand.append(j - i)\n        elif arr[j] ^ cmp == 1:\n            cmp = arr[j]\n            if done is False:\n                done = True\n                j += 1\n                if j == len(arr):\n                    cand.append(j - i)\n            else:\n                done = False\n                cand.append(j - i)\n                i = j\n        else:\n            cand.append(j - i)\n            done = False\n            cmp = arr[j]\n            i = j\n    return len(arr) - max(cand)\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = input()\n    d2 = list(map(int, input().split()))\n    print(ans(d2))\n    test_cases -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = dict()\n    for i in range(n):\n        if l[i] in count:\n            count[l[i]] += 1\n        else:\n            count[l[i]] = 1\n    if len(count) == 1:\n        print('0')\n        t -= 1\n        continue\n    ans = n\n    maxi = 0\n    for x in count:\n        if count[x] > maxi:\n            maxi = count[x]\n        if x % 2 == 0 and x + 1 in count:\n            delete = n - count[x] - count[x + 1]\n            if delete < ans:\n                ans = delete\n    if ans == n or n - maxi < ans:\n        print(n - maxi)\n    else:\n        print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = dict()\n    for i in range(n):\n        if l[i] % 2 != 0:\n            l[i] -= 1\n        if l[i] in count:\n            count[l[i]] += 1\n        else:\n            count[l[i]] = 1\n    maxi = 0\n    for x in count:\n        if count[x] > maxi:\n            maxi = count[x]\n    else:\n        print(n - maxi)\n    t -= 1", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    d = {}\n    for i in input().split():\n        i = int(i)\n        if i in d.keys():\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    ans = n\n    for i in d.keys():\n        if i % 2 and i - 1 in d.keys():\n            ans = min(n - (d[i] + d[i - 1]), ans)\n    for i in d.keys():\n        ans = min(n - d[i], ans)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    d = {}\n    for i in input().split():\n        i = int(i)\n        if i in d.keys():\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    ans = n\n    for i in d.keys():\n        if i % 2 and i - 1 in d.keys():\n            ans = min(n - (d[i] + d[i - 1]), ans)\n    for i in d.keys():\n        ans = min(n - d[i], ans)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    d = {}\n    for i in input().split():\n        i = int(i)\n        if i in d.keys():\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    ans = n\n    for i in d.keys():\n        if i % 2 and i - 1 in d.keys():\n            ans = min(n - (d[i] + d[i - 1]), ans)\n    for i in d.keys():\n        ans = min(n - d[i], ans)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = {}\n    for i in arr:\n        ans[i] = ans.get(i, 0) + 1\n    if len(ans) == 1:\n        print(0)\n    elif len(ans) == 2:\n        (a, b) = ans.keys()\n        if a ^ b == 1:\n            print(0)\n        else:\n            print(min(ans[a], ans[b]))\n    else:\n        res = max(ans.values())\n        for i in ans.keys():\n            j = i ^ 1\n            if j in ans:\n                res = max(ans[i] + ans[j], res)\n        print(n - res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = {}\n    for i in arr:\n        ans[i] = ans.get(i, 0) + 1\n    if len(ans) == 1:\n        print(0)\n    elif len(ans) == 2:\n        (a, b) = ans.keys()\n        if a ^ b == 1:\n            print(0)\n        else:\n            print(min(ans[a], ans[b]))\n    else:\n        res = max(ans.values())\n        for i in ans.keys():\n            j = i ^ 1\n            if j in ans:\n                res = max(ans[i] + ans[j], res)\n        print(n - res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = 0\n    d = {}\n    for i in arr:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d:\n        if i % 2 == 0:\n            if i + 1 in d:\n                c = max(c, d[i] + d[i + 1])\n            else:\n                c = max(c, d[i])\n        else:\n            c = max(c, d[i])\n    print(n - c)", "from collections import defaultdict\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    d = defaultdict(int)\n    m = 0\n    for i in x:\n        d[i] += 1\n    for i in d:\n        if i % 2 == 0:\n            if i + 1 in d:\n                m = max(m, d[i] + d[i + 1])\n            else:\n                m = max(m, d[i])\n        else:\n            m = max(m, d[i])\n    print(n - m)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    data = list(map(int, input().split()))\n    cache = {}\n    for i in data:\n        if i % 2 == 0:\n            if (i, i + 1) in cache:\n                cache[i, i + 1] += 1\n            else:\n                cache[i, i + 1] = 1\n        elif (i - 1, i) in cache:\n            cache[i - 1, i] += 1\n        else:\n            cache[i - 1, i] = 1\n    maxer = -1\n    for key in cache:\n        maxer = max(maxer, cache[key])\n    print(n - maxer)", "for _ in range(int(input())):\n    n = int(input())\n    data = list(map(int, input().split()))\n    cache = {}\n    for i in data:\n        if i % 2 == 0:\n            if (i, i + 1) in cache:\n                cache[i, i + 1] += 1\n            else:\n                cache[i, i + 1] = 1\n        elif (i - 1, i) in cache:\n            cache[i - 1, i] += 1\n        else:\n            cache[i - 1, i] = 1\n    maxer = -1\n    for key in cache:\n        maxer = max(maxer, cache[key])\n    print(n - maxer)", "from collections import Counter\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    C = Counter(L)\n    S = set(L)\n    M = [0]\n    for i in S:\n        count = 0\n        if i ^ i + 1 <= 1:\n            count += C[i]\n            if i + 1 in S:\n                count += C[i + 1]\n            M.append(count)\n    print(min(N - max(C.values()), N - max(M)))", "from collections import Counter\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    C = Counter(L)\n    S = set(L)\n    M = [0]\n    for i in S:\n        count = 0\n        if i ^ i + 1 <= 1:\n            count += C[i]\n            if i + 1 in S:\n                count += C[i + 1]\n            M.append(count)\n    print(min(N - max(C.values()), N - max(M)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    hashmap = {}\n    for e in arr:\n        if e in hashmap:\n            hashmap[e] += 1\n        else:\n            hashmap[e] = 1\n    take = float('-inf')\n    for k in hashmap:\n        cur = hashmap[k]\n        if k % 2 == 0 and k + 1 in hashmap:\n            cur += hashmap[k + 1]\n        take = max(take, cur)\n    print(n - take)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    b = 0\n    s = set(a)\n    for i in s:\n        x = d[i]\n        if i ^ 1 in s:\n            x += d[i ^ 1]\n        b = max(b, x)\n    print(n - b)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    count = []\n    for i in d:\n        ans = n - d[i]\n        if i % 2 == 0:\n            if i + 1 in d:\n                ans -= d[i + 1]\n        elif i - 1 in d:\n            ans -= d[i - 1]\n        count.append(ans)\n    print(min(count))", "from collections import Counter\nt = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    counter = Counter(a)\n    x = [counter[i] + counter[i ^ 1] for i in a]\n    print(n - max(x))\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    dick = {}\n    for i in s:\n        dick[i] = dick.get(i, 0) + 1\n    if len(dick) == 1:\n        print(0)\n    elif len(dick) == 2:\n        (a, b) = dick.keys()\n        if a ^ b == 1:\n            print(0)\n        else:\n            print(min(dick[a], dick[b]))\n    else:\n        maxi = max(dick.values())\n        for i in dick.keys():\n            x = i ^ 1\n            if x in dick:\n                maxi = max(dick[i] + dick[x], maxi)\n        answer = n - maxi\n        print(answer)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 1\n    b = []\n    for j in range(n):\n        if a[j] % 2 == 0:\n            if a[j] == a[j - 1]:\n                count += 1\n            else:\n                b.append(count)\n                count = 1\n        elif a[j] == a[j - 1]:\n            count += 1\n        elif a[j] == a[j - 1] + 1:\n            count += 1\n        else:\n            b.append(count)\n            count = 1\n    b.append(count)\n    print(max(0, n - max(b)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 1\n    b = []\n    for j in range(n):\n        if a[j] % 2 == 0:\n            if a[j] == a[j - 1]:\n                count += 1\n            else:\n                b.append(count)\n                count = 1\n        elif a[j] == a[j - 1]:\n            count += 1\n        elif a[j] == a[j - 1] + 1:\n            count += 1\n        else:\n            b.append(count)\n            count = 1\n    b.append(count)\n    print(max(0, n - max(b)))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if A.count(A[0]) == N:\n        print(0)\n    else:\n        freq = {}\n        for item in A:\n            if item not in freq.keys():\n                freq[item] = 0\n            freq[item] += 1\n        List = []\n        for item in freq:\n            val = N - freq[item]\n            if item % 2 == 0:\n                if item + 1 in freq.keys():\n                    val -= freq[item + 1]\n            elif item - 1 in freq.keys():\n                val -= freq[item - 1]\n            List.append(val)\n        print(min(List))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set(l)\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    temp = 0\n    for i in s:\n        a = d[i]\n        if i ^ 1 in s:\n            a += d[i ^ 1]\n        temp = max(temp, a)\n    print(n - temp)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    b = 0\n    s = set(a)\n    for i in s:\n        x = d[i]\n        if i ^ 1 in s:\n            x += d[i ^ 1]\n        b = max(b, x)\n    print(n - b)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (c, m) = (0, 0)\n    for i in range(n - 1):\n        if a[i] == a[i + 1] or (a[i] % 2 == 0 and a[i + 1] == a[i] + 1):\n            c += 1\n        else:\n            c = 0\n        m = max(m, c)\n    print(n - m - 1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    num = 0\n    for i in d:\n        p = d[i]\n        if i & 1 == 0 and d.get(i + 1):\n            p += d[i + 1]\n        num = max(num, p)\n    print(n - num)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    num = 0\n    for i in d:\n        p = d[i]\n        if i & 1 == 0 and d.get(i + 1):\n            p += d[i + 1]\n        num = max(num, p)\n    print(n - num)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set(l)\n    d = {}\n    for j in l:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    c = 0\n    for j in s:\n        m = d[j]\n        if j ^ 1 in s:\n            m += d[j ^ 1]\n        c = max(c, m)\n    print(n - c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (c, m) = (0, 0)\n    for i in range(n - 1):\n        if a[i] == a[i + 1] or (a[i] % 2 == 0 and a[i + 1] == a[i] + 1):\n            c += 1\n        else:\n            c = 0\n        m = max(m, c)\n    print(n - m - 1)", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    arr = list(map(lambda x: x >> 1, arr))\n    frequencyDict = {}\n    for num in arr:\n        if num in frequencyDict.keys():\n            frequencyDict[num] += 1\n        else:\n            frequencyDict[num] = 1\n    frequencies = frequencyDict.values()\n    max_freq = max(frequencies)\n    print(N - max_freq)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    d1 = {}\n    ans = n\n    for i in a:\n        if i not in d1:\n            d1[i] = 1\n        else:\n            d1[i] += 1\n    for i in a:\n        if i % 2 == 0:\n            if d1.get(i + 1) != None:\n                ans = min(ans, n - d1[i] - d1[i + 1])\n            else:\n                ans = min(ans, n - d1[i])\n        else:\n            ans = min(ans, n - d1[i])\n    print(ans)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i not in d.keys():\n            d[i] = 0\n        d[i] += 1\n    l = []\n    for j in d.keys():\n        vol = n - d[j]\n        if j % 2 == 0:\n            if j + 1 in d.keys():\n                vol -= d[j + 1]\n        elif j - 1 in d.keys():\n            vol -= d[j - 1]\n        l.append(vol)\n    print(min(l))", "import math\ntests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    unique_dict = {}\n    for j in arr:\n        if j in unique_dict:\n            unique_dict[j] += 1\n        else:\n            unique_dict[j] = 1\n    ans = 0\n    for j in unique_dict.keys():\n        temp = unique_dict[j]\n        if j ^ j + 1 == 1 and j + 1 in unique_dict:\n            temp += unique_dict[j + 1]\n        ans = max(ans, temp)\n    print(length - ans)", "from collections import Counter, defaultdict\nimport sys\n\ndef sol(n, A):\n    d = defaultdict(int)\n    for i in range(n):\n        num = A[i]\n        count = 0\n        s = ''\n        while num > 0:\n            if num % 2 == 1:\n                s = str(1) + s\n            else:\n                s = str(0) + s\n            num //= 2\n        d[s[:-1] + '*'] += 1\n    ans = 0\n    for i in d:\n        ans = max(ans, d[i])\n    return n - ans\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return str(input())\n\ndef invr():\n    return map(int, input().split())\nT = inp()\nfor i in range(T):\n    n = inp()\n    arr = inlt()\n    print(sol(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    j = sorted(list(set(x)))\n    d = dict()\n    mx = 0\n    for i in x:\n        if i in d:\n            d[i] += 1\n            mx = max(mx, d[i])\n        else:\n            d[i] = 1\n            mx = max(mx, d[i])\n    for k in range(len(j) - 1):\n        if j[k] % 2 == 0 and j[k] + 1 == j[k + 1]:\n            mx = max(mx, d[j[k]] + d[j[k + 1]])\n    print(n - mx)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    counta = {}\n    for x in a:\n        xstr = '{:b}'.format(x)[:-1]\n        if xstr in counta:\n            counta[xstr] = counta[xstr] + 1\n        else:\n            counta[xstr] = 1\n    tot = len(a)\n    maxocc = max(counta.values())\n    if len(counta) > 1:\n        print(tot - maxocc)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    x = l[0] ^ 1\n    if x in d:\n        y = d[x]\n    else:\n        y = 0\n    m = n - d[l[0]] - y\n    for i in range(1, len(l)):\n        x = l[i] ^ 1\n        if x in d:\n            y = d[x]\n        else:\n            y = 0\n        m = min(m, n - d[l[i]] - y)\n    print(m)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    freq = {}\n    for item in A:\n        if item not in freq.keys():\n            freq[item] = 0\n        freq[item] += 1\n    new_list = []\n    for ki in freq:\n        val = N - freq[ki]\n        if ki % 2 == 0:\n            if ki + 1 in freq.keys():\n                val -= freq[ki + 1]\n        elif ki - 1 in freq.keys():\n            val -= freq[ki - 1]\n        new_list.append(val)\n    print(min(new_list))", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    l = list(map(int, input().split()))\n    j = 0\n    d = {}\n    for j in l:\n        if j not in d.keys():\n            d[j] = 0\n        d[j] += 1\n    j = 0\n    p = 0\n    k = []\n    for j in d.keys():\n        p = len(l) - d[j]\n        if j % 2 == 0:\n            if j + 1 in d.keys():\n                p -= d[j + 1]\n        elif j - 1 in d.keys():\n            p -= d[j - 1]\n        k.append(p)\n    print(min(k))", "for i in range(int(input())):\n    n = int(input())\n    freq = {}\n    my_list = list(map(int, input().split()))\n    for item in my_list:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n    l = []\n    for k in freq.keys():\n        val = n - freq[k]\n        if k % 2 == 0:\n            if k + 1 in freq.keys():\n                val -= freq[k + 1]\n        elif k - 1 in freq.keys():\n            val -= freq[k - 1]\n        l.append(val)\n    print(min(l))", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l3 = []\n    val = 0\n    d = Counter(l)\n    for i in d.keys():\n        if i % 2 == 0:\n            if i + 1 in d.keys():\n                val = n - d[i]\n                val = val - d[i + 1]\n            else:\n                val = n - d[i]\n        elif i - 1 in d.keys():\n            val = n - d[i]\n            val = val - d[i - 1]\n        else:\n            val = n - d[i]\n        l3.append(val)\n    print(min(l3))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if j not in d.keys():\n            d[j] = 0\n        d[j] += 1\n    count = []\n    for j in d.keys():\n        vol = n - d[j]\n        if j % 2 == 0:\n            if j + 1 in d.keys():\n                vol -= d[j + 1]\n        elif j - 1 in d.keys():\n            vol -= d[j - 1]\n        count.append(vol)\n    print(min(count))", "time = int(input())\nfor _ in range(time):\n    le = int(input())\n    array = list(map(int, input().split()))\n    d = {}\n    for i in array:\n        if i not in d.keys():\n            d[i] = 0\n        d[i] += 1\n    count = []\n    for i in d.keys():\n        var = le - d[i]\n        if i % 2 == 0:\n            if i + 1 in d.keys():\n                var -= d[i + 1]\n        elif i - 1 in d.keys():\n            var -= d[i - 1]\n        count.append(var)\n    print(min(count))", "import collections\nfor _ in range(int(input())):\n    print(int(input()) - collections.Counter([a // 2 for a in list(map(int, input().split()))]).most_common(1)[0][1])", "import collections\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    counter = collections.Counter([a // 2 for a in A])\n    print(len(A) - counter.most_common(1)[0][1])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    m = 0\n    for i in d:\n        if i & i + 1 != 0 and i + 1 in d and (i % 2 == 0):\n            m = max(m, d[i] + d[i + 1])\n        else:\n            m = max(m, d[i])\n    print(n - m)", "from collections import Counter\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    C = Counter(L)\n    S = set(L)\n    M = [0]\n    for i in S:\n        count = 0\n        if i ^ i + 1 <= 1:\n            count += C[i]\n            if i + 1 in S:\n                count += C[i + 1]\n            M.append(count)\n    print(min(N - max(C.values()), N - max(M)))", "from collections import Counter, defaultdict\nimport sys\n\ndef sol(n, A):\n    d = defaultdict(int)\n    for i in range(n):\n        num = A[i]\n        count = 0\n        s = ''\n        while num > 0:\n            if num % 2 == 1:\n                s = str(1) + s\n            else:\n                s = str(0) + s\n            num //= 2\n        d[s[:-1] + '*'] += 1\n    ans = 0\n    for i in d:\n        ans = max(ans, d[i])\n    return n - ans\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return str(input())\n\ndef invr():\n    return map(int, input().split())\nT = inp()\nfor i in range(T):\n    n = inp()\n    arr = inlt()\n    print(sol(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    for i in range(len(a)):\n        if a[i] & 1:\n            a[i] = a[i] - 1\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    print(n - max(d.values()))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [a // 2 for a in arr]\n    count = Counter(arr)\n    print(n - max(count.values()))", "from collections import Counter\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    C = Counter(L)\n    S = C.keys()\n    M = 0\n    for i in S:\n        count = 0\n        if i ^ i + 1 <= 1:\n            if i in S:\n                count += C[i]\n            if i + 1 in S:\n                count += C[i + 1]\n            M = max(M, count)\n    print(min(N - max(C.values()), N - M))", "from collections import Counter\nt = int(input())\nwhile t:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    d = Counter(l)\n    l = [x for x in d.values()]\n    l2 = [x for x in d.keys()]\n    l2.sort()\n    r1 = 0\n    r = max(l)\n    for i in l2:\n        c = 0\n        if i ^ i + 1 <= 1:\n            if i in d.keys():\n                c += d[i]\n            if i + 1 in d.keys():\n                c += d[i + 1]\n            r1 = max(r1, c)\n    print(min(n - r, n - r1))\n    t -= 1", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ct = Counter(a)\n    ans = n\n    for k in ct:\n        temp = ct[k]\n        nxt = k + (-1) ** (k & 1)\n        if nxt in ct:\n            temp += ct[nxt]\n        ans = min(ans, n - temp)\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [a // 2 for a in arr]\n    count = Counter(arr)\n    print(n - max(count.values()))", "for trie in range(int(input())):\n    n = int(input())\n    lst = [int(i) for i in input().split()]\n    c = 0\n    s = list(set(lst))\n    d = {}\n    for i in range(n):\n        lst[i] = lst[i] // 2\n    for i in lst:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    max1 = 0\n    for i in d.keys():\n        if d[i] > max1:\n            max1 = d[i]\n    print(n - max1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 1\n    cnt = 1\n    for i in range(len(arr) - 1):\n        if arr[i] ^ arr[i + 1] <= 1:\n            cnt += 1\n            ans = max(cnt, ans)\n        else:\n            cnt = 1\n    print(n - ans)", "from collections import Counter\nt = int(input())\nfor i in range(1, t + 1):\n    n = int(input())\n    l = list(map(int, input().split()))\n    n_c = Counter(l)\n    c = [0]\n    for i in n_c.keys():\n        if i % 2 == 0:\n            if i + 1 in n_c.keys():\n                c.append(n_c[i] + n_c[i + 1])\n    k = max(c)\n    p = max(n_c.values())\n    print(min(n - k, n - p))"]