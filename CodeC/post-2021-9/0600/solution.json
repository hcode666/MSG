["t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    rem = n % k\n    rep = n // k\n    even = rem // rep\n    dis = rem % rep\n    ex = rep - dis\n    print(k + even + min(dis, 1))\n    cycle = list(range(1, k + even + min(dis, 1) + 1))\n    extra = list(range(1, k + even + 1))\n    carr = cycle * dis + extra * ex\n    print(' '.join(map(str, carr)))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    rem = n % k\n    rep = n // k\n    even = rem // rep\n    dis = rem % rep\n    ex = rep - dis\n    print(k + even + min(dis, 1))\n    cycle = list(range(1, k + even + min(dis, 1) + 1))\n    extra = list(range(1, k + even + 1))\n    carr = cycle * dis + extra * ex\n    print(' '.join(map(str, carr)))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    rem = n % k\n    rep = n // k\n    even = rem // rep\n    dis = rem % rep\n    ex = rep - dis\n    print(k + even + min(dis, 1))\n    cycle = list(range(1, k + even + min(dis, 1) + 1))\n    extra = list(range(1, k + even + 1))\n    carr = cycle * dis + extra * ex\n    print(' '.join(map(str, carr)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    rem = k + (n % k + n // k - 1) // (n // k)\n    ans = [0] * rem\n    for i in range(rem):\n        ans[i] = i + 1\n    res = []\n    for j in range(n):\n        res.append(ans[j % rem])\n    print(rem)\n    print(' '.join(map(str, res)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    rem = k + (n % k + n // k - 1) // (n // k)\n    ans = [0] * rem\n    for i in range(rem):\n        ans[i] = i + 1\n    res = []\n    for j in range(n):\n        res.append(ans[j % rem])\n    print(rem)\n    print(' '.join(map(str, res)))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    x = n // k\n    m = n % k\n    l = []\n    for i in range(x):\n        l.append(k)\n    if x >= m:\n        for i in range(m):\n            l[i] += 1\n    else:\n        while x < m:\n            for i in range(x):\n                l[i] += m // x\n            m = m % x\n        for i in range(m):\n            l[i] += 1\n    res = []\n    for i in l:\n        for j in range(i):\n            res.append(j + 1)\n    print(max(l))\n    print(*res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    rem = k + (n % k + n // k - 1) // (n // k)\n    ans = [0] * rem\n    for i in range(rem):\n        ans[i] = i + 1\n    res = []\n    for j in range(n):\n        res.append(ans[j % rem])\n    print(rem)\n    print(' '.join(map(str, res)))", "import math\nfor _ in range(int(input())):\n    (N, X) = map(int, input().split())\n    res = X + math.ceil(N % X / (N // X))\n    print(res)\n    i = 1\n    while i <= N:\n        if i % res == 0:\n            print(res, end=' ')\n        else:\n            print(i % res, end=' ')\n        i += 1\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    cols = k + (n % k + n // k - 1) // (n // k)\n    print(cols)\n    ans = [[i for i in range(1, k + 1)] for _ in range(n // k)]\n    n -= k * (n // k)\n    for col in range(k + 1, cols + 1):\n        for list in ans:\n            if n > 0:\n                list.append(col)\n                n -= 1\n    for list in ans:\n        print(*list, end=' ')\n    print()", "import math as m\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = []\n    t = k + m.ceil(n % k / m.floor(n / k))\n    for i in range(1, n // t + 1):\n        for j in range(1, t + 1):\n            ans.append(j)\n    for i in range(1, n % t + 1):\n        ans.append(i)\n    print(t)\n    print(*ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    colors = k + (n % k + n // k - 1) // (n // k)\n    ans = [list(range(1, k + 1)) for i in range(n // k)]\n    n %= k\n    for col in range(k + 1, colors + 1):\n        for x in ans:\n            if n > 0:\n                x.append(col)\n                n -= 1\n    print(colors)\n    for x in ans:\n        print(*x, end=' ')\n    print()", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = n // k\n    mod = n % k\n    l = []\n    for i in range(x):\n        l.append(k)\n    if x >= mod:\n        for i in range(mod):\n            l[i] += 1\n    else:\n        while x < mod:\n            for i in range(x):\n                l[i] += mod // x\n            mod = mod % x\n        for i in range(mod):\n            l[i] += 1\n    lst = []\n    for i in l:\n        for j in range(i):\n            lst.append(j + 1)\n    print(max(l))\n    for i in lst:\n        print(i, end=' ')\n    print()", "from sys import stdin\ninput = stdin.readline\n\ndef solve(N, K):\n    BLOC = N // K\n    remain1 = N % K\n    addon = remain1 // BLOC\n    remain2 = remain1 % BLOC\n    count = K + addon\n    if remain2 != 0:\n        count += 1\n    answer = list(range(1, K + addon + 2)) * remain2 + list(range(1, K + addon + 1)) * (BLOC - remain2)\n    assert len(answer) == N\n    return (count, answer)\nT = int(input().strip())\nfor problem in range(1, T + 1):\n    (N, K) = [int(x) for x in input().strip().split()]\n    answer = solve(N, K)\n    print(answer[0])\n    print(*[a for a in answer[1]])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    cols = k + (n % k + n // k - 1) // (n // k)\n    print(cols)\n    ans = [[i for i in range(1, k + 1)] for _ in range(n // k)]\n    n -= k * (n // k)\n    for col in range(k + 1, cols + 1):\n        for list in ans:\n            if n > 0:\n                list.append(col)\n                n -= 1\n    for list in ans:\n        print(*list, end=' ')\n    print()", "def min_colors(n, k):\n    i = k\n    while i <= n:\n        if 1 + (n - 1) % i >= k:\n            break\n        i += 1\n    return i\nans = []\nnq = int(input())\nfor _ in range(nq):\n    inp = input().split()\n    n = int(inp[0])\n    k = int(inp[1])\n    val = ''\n    nCol = k\n    aa = list(map(str, list(range(1, k + 1))))\n    A = [' '.join(aa)] * (n // k)\n    extras = n % k\n    while extras > 0:\n        nCol += 1\n        for i in range(len(A)):\n            A[i] = str(nCol) + ' ' + A[i]\n            extras += -1\n            if extras == 0:\n                break\n    ans.append(nCol)\n    colors = ' '.join(A)\n    ans.append(colors.strip())\nprint(*ans, sep='\\n')", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = tuple(map(int, input().strip().split(' ')))\n    if k == 1:\n        print('1')\n        for i in range(n):\n            if i == n - 1:\n                print('1')\n            else:\n                print('1', end=' ')\n    else:\n        ansNum = k + math.ceil(n % k / (n // k))\n        print(ansNum)\n        val = 0\n        for i in range(n):\n            val = val % ansNum + 1\n            if i == n - 1:\n                print(val)\n            else:\n                print(val, end=' ')"]