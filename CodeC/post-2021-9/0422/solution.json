["from math import gcd\n\ndef solve(M, x):\n    if M == 1:\n        return [i + 1 for i in range(x)]\n    ans = [1]\n    for n in range(2, x + 1):\n        if n >= M:\n            ans.append(ans[-1])\n        elif M % n != 0 and M % n <= ans[-1]:\n            ans.append(ans[-1] + 1)\n        else:\n            ans.append(ans[-1])\n    print(*ans)\nt = int(input())\nfor xyz in range(t):\n    (M, x) = map(int, input().split())\n    solve(M, x)", "from math import gcd\n\ndef solve(M, x):\n    if M == 1:\n        return [i + 1 for i in range(x)]\n    ans = [1]\n    for n in range(2, x + 1):\n        if n >= M:\n            ans.append(ans[-1])\n        elif M % n != 0 and M % n <= ans[-1]:\n            ans.append(ans[-1] + 1)\n        else:\n            ans.append(ans[-1])\n    print(*ans)\nt = int(input())\nfor xyz in range(t):\n    (M, x) = map(int, input().split())\n    solve(M, x)", "from math import gcd\n\ndef solve(M, x):\n    if M == 1:\n        return [i + 1 for i in range(x)]\n    ans = [1]\n    for n in range(2, x + 1):\n        if n >= M:\n            ans.append(ans[-1])\n        elif M % n != 0 and M % n <= ans[-1]:\n            ans.append(ans[-1] + 1)\n        else:\n            ans.append(ans[-1])\n    print(*ans)\nt = int(input())\nfor xyz in range(t):\n    (M, x) = map(int, input().split())\n    solve(M, x)", "t = int(input())\nfor i in range(t):\n    w = list(map(int, input().split()))\n    (m, x) = (w[0], w[1])\n    a = [0 for r in range(x + 1)]\n    a[1] = 1\n    if w[1] > 1:\n        for k in range(2, x + 1, 1):\n            q = 0\n            if m % k == 0:\n                q = x\n            else:\n                q = m % k\n            if q > a[k - 1]:\n                a[k] = a[k - 1]\n            else:\n                a[k] = a[k - 1] + 1\n    for j in range(1, x + 1, 1):\n        print(a[j], end=' ')", "t = int(input())\nfor i in range(t):\n    w = list(map(int, input().split()))\n    (m, x) = (w[0], w[1])\n    a = [0 for r in range(x + 1)]\n    a[1] = 1\n    if w[1] > 1:\n        for k in range(2, x + 1, 1):\n            q = 0\n            if m % k == 0:\n                q = x\n            else:\n                q = m % k\n            if q > a[k - 1]:\n                a[k] = a[k - 1]\n            else:\n                a[k] = a[k - 1] + 1\n    for j in range(1, x + 1, 1):\n        print(a[j], end=' ')", "t = int(input())\nfor i in range(t):\n    w = list(map(int, input().split()))\n    (m, x) = (w[0], w[1])\n    a = [0 for r in range(x + 1)]\n    a[1] = 1\n    if w[1] > 1:\n        for k in range(2, x + 1, 1):\n            q = 0\n            if m % k == 0:\n                q = x\n            else:\n                q = m % k\n            if q > a[k - 1]:\n                a[k] = a[k - 1]\n            else:\n                a[k] = a[k - 1] + 1\n    for j in range(1, x + 1, 1):\n        print(a[j], end=' ')", "t = int(input())\nfor i in range(t):\n    w = list(map(int, input().split()))\n    a = [0 for r in range(w[1] + 1)]\n    a[1] = 1\n    if w[1] > 1:\n        for k in range(2, w[1] + 1, 1):\n            q = 0\n            if w[0] % k == 0:\n                q = w[1]\n            else:\n                q = w[0] % k\n            if q > a[k - 1]:\n                a[k] = a[k - 1]\n            else:\n                a[k] = a[k - 1] + 1\n    for j in range(1, w[1] + 1, 1):\n        print(a[j], end=' ')", "t = int(input())\nfor i in range(t):\n    (m, x) = map(int, input().split())\n    ans = [0, 1] + [0] * (x - 1)\n    for j in range(2, x + 1):\n        c = m % j if m % j else j\n        ans[j] = ans[j - 1] + (ans[j - 1] >= c)\n    print(*[ans[j] for j in range(1, x + 1)])", "t = int(input())\nfor i in range(t):\n    (m, x) = map(int, input().split())\n    ans = [0, 1] + [0] * (x - 1)\n    for j in range(2, x + 1):\n        c = m % j if m % j else j\n        ans[j] = ans[j - 1] + (ans[j - 1] >= c)\n    print(*[ans[j] for j in range(1, x + 1)])", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    ans = [0, 1] + [0] * (x - 1)\n    for i in range(2, x + 1):\n        tp = m % i if m % i else i\n        ans[i] = ans[i - 1] + (ans[i - 1] >= tp)\n    print(*[ans[i] for i in range(1, x + 1)])", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    win = [1]\n    print(1, end=' ')\n    for i in range(1, x):\n        if win[i - 1] >= m % (i + 1) and m % (i + 1) != 0:\n            print(win[i - 1] + 1, end=' ')\n            win.append(win[i - 1] + 1)\n        else:\n            print(win[i - 1], end=' ')\n            win.append(win[i - 1])\n    print('')", "import sys, io, os\nfor _ in range(int(input())):\n    (mm, xx) = map(int, input().split())\n    aa = [0, 1] + [0 for ii in range(xx - 1)]\n    for ii in range(2, xx + 1):\n        aa[ii] = aa[ii - 1] + (aa[ii - 1] >= (mm % ii if mm % ii else ii))\n    print(*[aa[ii + 1] for ii in range(xx)])", "import math\ntestcase = int(input())\nwhile testcase:\n    testcase -= 1\n    (M, X) = input().split()\n    M = int(M)\n    X = int(X)\n    ans = 1\n    print(ans, end=' ')\n    for i in range(2, X + 1):\n        f = M % i\n        if f == 0:\n            f = i\n        if ans >= f:\n            ans += 1\n        print(ans, end=' ')\n    print()", "import sys\nsys.setrecursionlimit(10000000)\n\ndef jos(n, k):\n    if n == 1:\n        print(1, end=' ')\n        return 1\n    a = jos(n - 1, k)\n    if (k - 1) % n == 0:\n        print(a + 1, end=' ')\n        return a + 1\n    if a <= (k - 1) % n:\n        print(a, end=' ')\n        return a\n    else:\n        print(a + 1, end=' ')\n        return a + 1\ncase = int(input())\nfor u in range(case):\n    (M, X) = list(map(int, input().split(' ')))\n    jos(X, M)", "t = int(input())\nfor _ in range(t):\n    (m, x) = map(int, input().split())\n    lst = [k for k in range(x + 1)]\n    lst[1] = 1\n    ans = []\n    for i in range(2, x + 1):\n        calc = m % i\n        if calc == 0:\n            calc = i\n        lst[i] = lst[i - 1]\n        if lst[i] >= calc:\n            lst[i] += 1\n    lst.pop(0)\n    print(*lst)", "from sys import stdin\ninput = stdin.readline\n\ndef solve(M, X):\n    winner = [0] * (X + 1)\n    for N in range(2, X + 1):\n        if winner[N - 1] <= (M - 1) % N - 1:\n            winner[N] = winner[N - 1]\n        else:\n            winner[N] = winner[N - 1] + 1\n    for i in range(X + 1):\n        winner[i] += 1\n    return winner[1:]\nT = int(input().strip())\nfor problem in range(1, T + 1):\n    (M, X) = [int(x) for x in input().strip().split()]\n    print(*solve(M, X))", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    m -= 1\n    l = [1] * x\n    for i in range(1, x):\n        temp = m % (i + 1) + 1\n        if l[i - 1] < temp:\n            l[i] = l[i - 1]\n        else:\n            l[i] = l[i - 1] + 1\n    print(*l)", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    arr = [0 for _ in range(x + 1)]\n    arr[1] = 1\n    if x > 1:\n        for i in range(2, x + 1):\n            if m % i != 0:\n                temp = m % i\n            else:\n                temp = x\n            if temp > arr[i - 1]:\n                arr[i] = arr[i - 1]\n            else:\n                arr[i] = arr[i - 1] + 1\n    for i in range(1, x + 1):\n        print(arr[i], end=' ')", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    l = []\n    for i in range(0, x):\n        l.append(i)\n        l[0] = 1\n        a = (m - 1) % (i + 1) + 1\n        if l[i - 1] < a:\n            l[i] = l[i - 1]\n        else:\n            l[i] = l[i - 1] + 1\n    print(*l, sep=' ')", "t = int(input())\nfor i in range(t):\n    (m, x) = map(int, input().split())\n    l = [1] * (x + 1)\n    print(l[1], end=' ')\n    for i in range(2, x + 1):\n        if m % i == 0:\n            x = i\n        else:\n            x = m % i\n        l[i] = l[i - 1]\n        if l[i] >= x:\n            l[i] += 1\n        print(l[i], end=' ')\n    print()", "import sys\nsys.setrecursionlimit(10 ** 6)\n\ndef jos_m1(n: int, m: int) -> int:\n    if n == 1:\n        print(1, end=' ')\n        return 1\n    if (m - 1) % n == 0:\n        z = (jos_m1(n - 1, m) + 1) % (n + 1)\n        print(z, end=' ')\n        return z\n    else:\n        x = jos_m1(n - 1, m)\n        if x <= (m - 1) % n:\n            print(x % (n + 1), end=' ')\n            return x % (n + 1)\n        else:\n            print((x + 1) % (n + 1))\n            return (x + 1) % (n + 1)\nT = int(input())\nfor i in range(T):\n    (m, x) = list(map(int, input().split()))\n    jos_m1(x, m)\n    print()", "t = int(input())\n\ndef solve(m, x):\n    dp = [0, 1]\n    for i in range(2, x + 1):\n        md = (m - 1) % i + 1\n        if md > dp[i - 1]:\n            dp.append(dp[i - 1])\n        else:\n            dp.append(dp[i - 1] + 1)\n    return dp[1:]\nfor _ in range(t):\n    (m, x) = list(map(int, input().split()))\n    ans = solve(m, x)\n    for i in ans:\n        print(i, end=' ')", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    arr = []\n    m = m - 1\n    arr.append(1)\n    for i in range(1, x):\n        p = m % (i + 1) + 1\n        if arr[i - 1] < p:\n            arr.append(arr[i - 1])\n        else:\n            arr.append(arr[i - 1] + 1)\n    print(*arr)", "for _ in range(int(input())):\n    (m, x) = [int(i) for i in input().split()]\n    m -= 1\n    (i, p) = (1, 1)\n    print(p, end=' ')\n    while i < x:\n        val = m % (i + 1) + 1\n        if val > p:\n            print(p, end=' ')\n        else:\n            p = p + 1\n            print(p, end=' ')\n        i += 1\n    print()", "def get(num, m):\n    if m % num == 0:\n        return num\n    return m % num\nfor _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    ans = [1] * x\n    for i in range(1, x):\n        ans[i] = ans[i - 1] if get(i + 1, m) > ans[i - 1] else ans[i - 1] + 1\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    (m, n) = map(int, input().split())\n    a = [0] * (n + 1)\n    a[1] = 1\n    for i in range(2, n + 1):\n        if m % i != 0:\n            idx = m % i\n        else:\n            idx = m\n        if a[i - 1] < idx:\n            a[i] = a[i - 1]\n        else:\n            a[i] = a[i - 1] + 1\n    a = a[1:]\n    print(*a)", "T = input()\nfor i in range(int(T)):\n    (M, X) = map(int, input().split())\n    A = [1] * X\n    for j in range(1, X):\n        m = (M - 1) % (j + 1)\n        if A[j - 1] < m + 1:\n            A[j] = A[j - 1]\n        else:\n            A[j] = A[j - 1] + 1\n    print(*A)", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    m -= 1\n    l = [1] * x\n    for i in range(1, x):\n        temp = m % (i + 1) + 1\n        if l[i - 1] < temp:\n            l[i] = l[i - 1]\n        else:\n            l[i] = l[i - 1] + 1\n    print(*l)", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    win = [1] * x\n    for n in range(1, x):\n        if m % (n + 1) == 0:\n            f = n + 1\n        else:\n            f = m % (n + 1)\n        if f > win[n - 1]:\n            win[n] = win[n - 1]\n        else:\n            win[n] = win[n - 1] + 1\n    print(*win)", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    win = [1] * x\n    for n in range(1, x):\n        if m % (n + 1) == 0:\n            f = n + 1\n        else:\n            f = m % (n + 1)\n        if f > win[n - 1]:\n            win[n] = win[n - 1]\n        else:\n            win[n] = win[n - 1] + 1\n    print(*win)", "x = int(input())\nfor i in range(x):\n    (m, x) = list(map(int, input().split()))\n    print(1, end=' ')\n    y = 1\n    for k in range(2, x + 1):\n        z = m % k\n        if z == 0:\n            print(y, end=' ')\n        elif z <= y and z != 0:\n            print(y + 1, end=' ')\n            y += 1\n        else:\n            print(y, end=' ')\n    print()", "for tc in range(int(input())):\n    (m, x) = map(int, input().split())\n    arr = [1] * x\n    arr[0] = 1\n    m = m - 1\n    for i in range(1, x):\n        t = m % (i + 1) + 1\n        if arr[i - 1] < t:\n            arr[i] = arr[i - 1]\n        else:\n            arr[i] = arr[i - 1] + 1\n    print(*arr)", "import math\nimport os\nimport random\nimport re\nimport sys\nT = int(input())\nfor _ in range(T):\n    (M, X) = map(int, input().split())\n    l = [1]\n    for i in range(2, X + 1):\n        if (M - 1) % i + 1 > l[-1]:\n            l.append(l[-1])\n        else:\n            l.append(l[-1] + 1)\n    print(*l)", "for t in range(int(input())):\n    L = [1]\n    (M, X) = list(map(int, input().split()))\n    for i in range(2, X + 1):\n        k = M % i\n        if k == 0:\n            k = i\n        if k > L[-1]:\n            L.append(L[-1])\n        else:\n            L.append(L[-1] + 1)\n    L = list(map(str, L))\n    print(' '.join(L))", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    a = [0, 1] + [0 for i in range(x - 1)]\n    for i in range(2, x + 1):\n        a[i] = a[i - 1] + (a[i - 1] >= (m % i if m % i else i))\n    print(*[a[i + 1] for i in range(x)])", "test = int(input())\nwhile test:\n    test -= 1\n    (m, x) = map(int, input().split())\n    m -= 1\n    arr = [0] * x\n    arr[0] = 1\n    for i in range(1, x):\n        ps = m % (i + 1) + 1\n        if arr[i - 1] < ps:\n            arr[i] = arr[i - 1]\n        else:\n            arr[i] = arr[i - 1] + 1\n    for i in range(x):\n        print(arr[i], end=' ')", "t = int(input())\nfor q in range(t):\n    (m, x) = map(int, input().split())\n    m -= 1\n    arr = [0] * x\n    arr[0] = 1\n    for i in range(1, x):\n        ps = m % (i + 1) + 1\n        if arr[i - 1] < ps:\n            arr[i] = arr[i - 1]\n        else:\n            arr[i] = arr[i - 1] + 1\n    for i in range(x):\n        print(arr[i], end=' ')", "for _ in range(int(input())):\n    (m, k) = map(int, input().split())\n    last = []\n    for i in range(k):\n        if i == 0:\n            last.append(0)\n            continue\n        last.append((m % (i + 1) - 1) % (i + 1))\n    out = [0]\n    for i in last[1:]:\n        if len(out) >= m - 1:\n            out.append(out[-1])\n            continue\n        if out[-1] >= last[len(out)]:\n            out.append(out[-1] + 1)\n        else:\n            out.append(out[-1])\n    print(' '.join(map(lambda x: str(x + 1), out)))", "def gl():\n    return [int(x) for x in input().split()]\nfor _ in range(int(input())):\n    (m, x) = gl()\n    m -= 1\n    l = [1] * x\n    for i in range(1, x):\n        l[i] = l[i - 1] if l[i - 1] < m % (i + 1) + 1 else l[i - 1] + 1\n    print(*l)", "for _ in range(int(input())):\n    (m, k) = map(int, input().split())\n    last = []\n    for i in range(k):\n        if i == 0:\n            last.append(0)\n            continue\n        last.append((m % (i + 1) - 1) % (i + 1))\n    out = [0]\n    for i in last[1:]:\n        if len(out) >= m - 1:\n            out.append(out[-1])\n            continue\n        if out[-1] >= last[len(out)]:\n            out.append(out[-1] + 1)\n        else:\n            out.append(out[-1])\n    print(' '.join(map(lambda x: str(x + 1), out)))", "x = int(input(''))\nli = []\nfor i in range(x):\n    y = input('')\n    y = list(map(int, y.split()))\n    li.append(y)\nfor l in li:\n    m = l[0] - 1\n    x = l[1]\n    counter = 1\n    while counter != x + 1:\n        if counter == 1:\n            print(1, end=' ')\n            counter = counter + 1\n        elif counter == 2:\n            array = [1, 2]\n            array.pop(m % len(array))\n            indi = array[0] - 1\n            print(array[0], end=' ')\n            counter = counter + 1\n        else:\n            popped = m % counter + 1\n            if indi < m % counter:\n                ans = indi + 1\n                indi = ans - 1\n            else:\n                ans = indi + 2\n                indi = ans - 1\n            print(ans, end=' ')\n            counter = counter + 1\n    print('')", "t = int(input())\nfor i in range(t):\n    (m, x) = map(int, input().split())\n    m -= 1\n    l = []\n    l.append(1)\n    for i in range(1, x):\n        a = m % (i + 1) + 1\n        if l[i - 1] < a:\n            l.append(l[i - 1])\n        else:\n            l.append(l[i - 1] + 1)\n    for i in l:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    (mm, xx) = map(int, input().split())\n    aa = [0, 1] + [0 for ii in range(xx - 1)]\n    for ii in range(2, xx + 1):\n        aa[ii] = aa[ii - 1] + (aa[ii - 1] >= (mm % ii if mm % ii else ii))\n    print(*[aa[ii + 1] for ii in range(xx)])", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    m -= 1\n    l = [1] * x\n    for i in range(1, x):\n        temp = m % (i + 1) + 1\n        if l[i - 1] < temp:\n            l[i] = l[i - 1]\n        else:\n            l[i] = l[i - 1] + 1\n    print(*l)", "t = int(input())\nwhile t:\n    t -= 1\n    (m, x) = map(int, input().split())\n    res = [1]\n    for i in range(2, x + 1):\n        if (m - 1) % i + 1 > res[-1]:\n            res.append(res[-1])\n        else:\n            res.append(res[-1] + 1)\n    print(*res)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (m, k) = map(int, input().split())\n    m -= 1\n    ans = -1\n    dp = [0] * k\n    dp[0] = 1\n    for i in range(1, k):\n        ans = m % (i + 1) + 1\n        if dp[i - 1] < ans:\n            dp[i] = dp[i - 1]\n        else:\n            dp[i] = dp[i - 1] + 1\n    print(*dp)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (m, k) = map(int, input().split())\n    m -= 1\n    ans = -1\n    dp = [0] * k\n    dp[0] = 1\n    for i in range(1, k):\n        ans = m % (i + 1) + 1\n        if dp[i - 1] < ans:\n            dp[i] = dp[i - 1]\n        else:\n            dp[i] = dp[i - 1] + 1\n    print(*dp)", "test = int(input())\nwhile test:\n    test -= 1\n    (m, x) = map(int, input().split())\n    m -= 1\n    arr = [0] * x\n    arr[0] = 1\n    for i in range(1, x):\n        ps = m % (i + 1) + 1\n        if arr[i - 1] < ps:\n            arr[i] = arr[i - 1]\n        else:\n            arr[i] = arr[i - 1] + 1\n    for i in range(x):\n        print(arr[i], end=' ')", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    a = [0, 1] + [0 for i in range(x - 1)]\n    for i in range(2, x + 1):\n        a[i] = a[i - 1] + (a[i - 1] >= (m % i if m % i else i))\n    print(*[a[i + 1] for i in range(x)])", "t = int(input())\nfor _ in range(t):\n    (m, x) = map(int, input().split())\n    arr = []\n    for i in range(1, x + 1):\n        arr.append(i)\n    dp = [0] * (x + 1)\n    dp[1] = 0\n    print(arr[dp[1]], end=' ')\n    for i in range(2, x + 1):\n        rem = (m - 1) % i\n        if rem <= dp[i - 1]:\n            print(arr[dp[i - 1] + 1], end=' ')\n            dp[i] = dp[i - 1] + 1\n        else:\n            print(arr[dp[i - 1]], end=' ')\n            dp[i] = dp[i - 1]\n    print()", "for i in range(int(input())):\n    (m, x) = map(int, input().split())\n    st = [0] * (x + 1)\n    st[1] = 1\n    for i in range(2, x + 1):\n        temp = m % i\n        if temp == 0:\n            temp = i\n        st[i] = st[i - 1]\n        if st[i] >= temp:\n            st[i] += 1\n    for i in range(1, x + 1):\n        print(st[i], end=' ')\n    print('\\n')", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\nfor _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    arr = [0] * x\n    arr[0] = 1\n    a1 = 0\n    m = m - 1\n    for i in range(1, x):\n        a1 = m % (i + 1) + 1\n        if arr[i - 1] < a1:\n            arr[i] = arr[i - 1]\n        else:\n            arr[i] = arr[i - 1] + 1\n    for i in range(x):\n        print(arr[i], end=' ')\n    print()", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    m = m - 1\n    arr = []\n    for i in range(1, n + 1):\n        if not arr:\n            arr.append(1)\n        elif i >= m + 1:\n            arr.append(arr[-1])\n        else:\n            idx = arr[-1]\n            l = m % i + 1\n            if l <= idx:\n                idx += 1\n            arr.append(idx)\n    for i in range(n - 1):\n        print(arr[i], end=' ')\n    print(arr[-1])", "for _ in range(int(input())):\n    (n, l) = map(int, input().split())\n    p = [0, 1] + [0 for i in range(l - 1)]\n    for i in range(2, l + 1):\n        p[i] = p[i - 1] + (p[i - 1] >= (n % i if n % i else i))\n    print(*[p[i + 1] for i in range(l)])", "t = int(input())\nfor _ in range(t):\n    (m, x) = input().split()\n    m = int(m)\n    x = int(x)\n    m -= 1\n    arr = [0] * x\n    arr[0] = 1\n    var = 0\n    for i in range(1, x):\n        var = m % (i + 1) + 1\n        if arr[i - 1] < var:\n            arr[i] = arr[i - 1]\n        else:\n            arr[i] = arr[i - 1] + 1\n    for i in range(0, x):\n        print(arr[i], end=' ')\n    print()", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    store = [0] * (x + 1)\n    store[1] = 1\n    for i in range(2, x + 1):\n        temp = m % i\n        if temp == 0:\n            temp = i\n        store[i] = store[i - 1]\n        if store[i] >= temp:\n            store[i] += 1\n    print(*store[1:])", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    store = [0] * (x + 1)\n    store[1] = 1\n    for i in range(2, x + 1):\n        temp = m % i\n        if temp == 0:\n            temp = i\n        store[i] = store[i - 1]\n        if store[i] >= temp:\n            store[i] += 1\n    print(*store[1:])", "t = int(input())\nfor _ in range(0, t):\n    (m, x) = map(int, input().split())\n    l = []\n    for i in range(0, x):\n        l.append(i)\n        l[0] = 1\n        a = (m - 1) % (i + 1) + 1\n        if l[i - 1] < a:\n            l[i] = l[i - 1]\n        else:\n            l[i] = l[i - 1] + 1\n    print(*l, sep=' ')", "from os import path\nfrom io import BytesIO, IOBase\nimport sys\nfrom heapq import heappush, heappop\nfrom functools import cmp_to_key as ctk\nfrom collections import deque, Counter, defaultdict as dd\nfrom bisect import bisect, bisect_left, bisect_right, insort, insort_left, insort_right\nfrom itertools import permutations\nfrom datetime import datetime\nfrom math import ceil, sqrt, log, gcd\n\ndef ii():\n    return int(input())\n\ndef si():\n    return input().rstrip()\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\nabc = 'abcdefghijklmnopqrstuvwxyz'\nmod = 1000000007\ninf = float('inf')\nvow = ['a', 'e', 'i', 'o', 'u']\n(dx, dy) = ([-1, 1, 0, 0], [0, 0, 1, -1])\n\ndef bo(i):\n    return ord(i) - ord('0')\nfile = 1\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\ndef solve():\n    for _ in range(1, ii() + 1):\n        (m, x) = mi()\n        c = 1\n        m -= 1\n        elm = [i + 1 for i in range(x)]\n        print(1, end=' ')\n        for i in range(2, x + 1):\n            p1 = 1 + m % i\n            if p1 == 1:\n                c = elm[c]\n            elif c < p1:\n                c = elm[c - 1]\n            else:\n                c = elm[c]\n            print(c, end=' ')\n        print()\nif file:\n    if path.exists('input.txt'):\n        sys.stdin = open('input.txt', 'r')\n        sys.stdout = open('output.txt', 'w')\n    else:\n        input = sys.stdin.readline\nsolve()", "for _ in range(int(input())):\n    (n, l) = map(int, input().split())\n    p = [0, 1] + [0 for i in range(l - 1)]\n    for i in range(2, l + 1):\n        p[i] = p[i - 1] + (p[i - 1] >= (n % i if n % i else i))\n    print(*[p[i + 1] for i in range(l)])", "t = int(input())\nfor _ in range(t):\n    (m, x) = map(int, input().split())\n    arr = [1] * x\n    m = m - 1\n    for i in range(1, x):\n        a = m % (i + 1) + 1\n        if arr[i - 1] < a:\n            arr[i] = arr[i - 1]\n        else:\n            arr[i] = arr[i - 1] + 1\n    for i in arr:\n        print(i, end=' ')\n    print()", "try:\n    for _ in range(int(input())):\n        (m, x) = map(int, input().split())\n        l = [0 for _ in range(x)]\n        l[0] = 1\n        for i in range(1, x):\n            temp = (m - 1) % (i + 1) + 1\n            if l[i - 1] < temp:\n                l[i] = l[i - 1]\n            else:\n                l[i] = l[i - 1] + 1\n        print(*l)\nexcept:\n    pass", "for i in range(int(input())):\n    (m, x) = map(int, input().split())\n    l = ['1']\n    a = 1\n    for j in range(2, x + 1):\n        if j > m - 1:\n            l.append(str(a))\n        else:\n            r = (m - 1) % j\n            if r < a:\n                a += 1\n            l.append(str(a))\n    print(' '.join(l))", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    l = [1]\n    m = m - 1\n    b = 0\n    for i in range(1, x):\n        b = m % (i + 1) + 1\n        if l[i - 1] < b:\n            l.append(l[i - 1])\n        else:\n            l.append(l[i - 1] + 1)\n    print(*l)", "for _ in range(int(input())):\n    (m, x) = map(int, input().split(' '))\n    m -= 1\n    arr = [1 for i in range(x)]\n    for i in range(1, x):\n        temp = m % (i + 1) + 1\n        if arr[i - 1] < temp:\n            arr[i] = arr[i - 1]\n        else:\n            arr[i] = arr[i - 1] + 1\n    for i in range(0, x):\n        print(arr[i], end=' ')\n    print()", "try:\n    for _ in range(int(input())):\n        (m, x) = map(int, input().split(' '))\n        m -= 1\n        arr = [1 for i in range(x)]\n        for i in range(1, x):\n            temp = m % (i + 1) + 1\n            if arr[i - 1] < temp:\n                arr[i] = arr[i - 1]\n            else:\n                arr[i] = arr[i - 1] + 1\n        print(*arr)\nexcept:\n    pass", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    arr = []\n    m = m - 1\n    arr.append(1)\n    for i in range(1, x):\n        p = m % (i + 1) + 1\n        if arr[i - 1] < p:\n            arr.append(arr[i - 1])\n        else:\n            arr.append(arr[i - 1] + 1)\n    print(*arr)", "def sol(m, n):\n    arr = [1] + [0] * (n - 1)\n    for i in range(1, n):\n        pos = m % (i + 1) + 1\n        if arr[i - 1] < pos:\n            arr[i] = arr[i - 1]\n        else:\n            arr[i] = arr[i - 1] + 1\n    return arr\nt = int(input())\nfor tc in range(0, t):\n    (m, n) = map(int, input().split())\n    m -= 1\n    ans = sol(m, n)\n    print(*ans)", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    lst = []\n    lst.append(1)\n    for i in range(1, x):\n        x = (m - 1) % (i + 1) + 1\n        if lst[i - 1] < x:\n            lst.append(lst[i - 1])\n        else:\n            lst.append(lst[i - 1] + 1)\n    print(*lst, sep=' ')", "t = int(input())\nfor _ in range(t):\n    (m, x) = map(int, input().split())\n    arr = [1]\n    m -= 1\n    for i in range(1, x):\n        temp = m % (i + 1) + 1\n        if arr[i - 1] < temp:\n            arr.append(arr[i - 1])\n        else:\n            arr.append(arr[i - 1] + 1)\n    for i in range(0, x):\n        print(arr[i], end=' ')\n    print()", "try:\n    for _ in range(int(input())):\n        (m, x) = map(int, input().split())\n        lst = [1]\n        for i in range(1, x):\n            k = (m - 1) % (i + 1) + 1\n            if lst[i - 1] < k:\n                lst.append(lst[i - 1])\n            else:\n                lst.append(lst[i - 1] + 1)\n        for i in lst:\n            print(i, end=' ')\nexcept:\n    pass", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    a = [0, 1] + [0 for i in range(x - 1)]\n    for i in range(2, x + 1):\n        a[i] = a[i - 1] + (a[i - 1] >= (m % i if m % i else i))\n    print(*[a[i + 1] for i in range(x)])", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (m, x) = map(int, input().split())\n    m -= 1\n    a = [0] * x\n    a[0] = 1\n    ps = 0\n    for i in range(1, x):\n        ps = m % (i + 1) + 1\n        a[i] = a[i - 1] * 1\n        if a[i - 1] >= ps:\n            a[i] += 1\n    print(*a)", "for i in range(int(input())):\n    (m, x) = map(int, input().split())\n    st = [0] * (x + 1)\n    st[1] = 1\n    for i in range(2, x + 1):\n        temp = m % i\n        if temp == 0:\n            temp = i\n        st[i] = st[i - 1]\n        if st[i] >= temp:\n            st[i] += 1\n    for i in range(1, x + 1):\n        print(st[i], end=' ')\n    print()", "t = int(input())\nwhile t > 0:\n    (m, x) = map(int, input().split())\n    m -= 1\n    a = [0] * x\n    a[0] = 1\n    for i in range(1, x):\n        temp = m % (i + 1) + 1\n        if a[i - 1] < temp:\n            a[i] = a[i - 1]\n        else:\n            a[i] = a[i - 1] + 1\n    for i in range(x):\n        print(a[i], end=' ')\n    print(' ')\n    t = t - 1", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    a = []\n    m = m - 1\n    a.append(1)\n    for i in range(1, x):\n        b = m % (i + 1) + 1\n        if a[i - 1] < b:\n            a.append(a[i - 1])\n        else:\n            a.append(a[i - 1] + 1)\n    for i in a:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    a = [0, 1] + [0 for i in range(x - 1)]\n    for i in range(2, x + 1):\n        a[i] = a[i - 1] + (a[i - 1] >= (m % i if m % i else i))\n    print(*[a[i + 1] for i in range(x)])", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    a = [0, 1] + [0 for i in range(x - 1)]\n    for i in range(2, x + 1):\n        a[i] = a[i - 1] + (a[i - 1] >= (m % i if m % i else i))\n    print(*[a[i + 1] for i in range(x)])", "for t in range(int(input())):\n    (m, n) = map(int, input().split())\n    print(1)\n    l = 0\n    for i in range(1, n):\n        a = (m - 1) % (i + 1)\n        if l >= a:\n            l = l + 1\n        print(l + 1)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    d = [0] * (n + 1)\n    d[1] = 0\n    for i in range(2, n + 1):\n        z = (m - 1) % i\n        if z <= d[i - 1]:\n            d[i] = d[i - 1] + 1\n        else:\n            d[i] = d[i - 1]\n    x = ''\n    for a in range(1, n + 1):\n        x += str(d[a] + 1) + ' '\n    print(x)", "for _ in range(int(input())):\n    (m, x) = list(map(int, input().split()))\n    m -= 1\n    arr = [0] * x\n    arr[0] = 1\n    for i in range(1, x):\n        y = m % (i + 1) + 1\n        if arr[i - 1] < y:\n            arr[i] = arr[i - 1]\n        else:\n            arr[i] = arr[i - 1] + 1\n    for i in arr:\n        print(i, end=' ')", "n = int(input())\nfor _ in range(n):\n    (m, x) = map(int, input().split())\n    arr = [1]\n    for i in range(1, x):\n        if arr[i - 1] < (m - 1) % (i + 1) + 1:\n            arr += [arr[i - 1]]\n        else:\n            arr += [arr[i - 1] + 1]\n    for i in arr:\n        print(i, end=' ')", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    a = [0, 1] + [0 for i in range(x - 1)]\n    for i in range(2, x + 1):\n        a[i] = a[i - 1] + (a[i - 1] >= (m % i if m % i else i))\n    print(*[a[i + 1] for i in range(x)])", "for t in range(int(input())):\n    (m, n) = map(int, input().split())\n    ans = [1]\n    for i in range(1, n):\n        p = (m - 1) % (i + 1) + 1\n        if ans[i - 1] < p:\n            ans.append(ans[i - 1])\n        else:\n            ans.append(ans[i - 1] + 1)\n    print(*ans)", "for t in range(int(input())):\n    (m, n) = map(int, input().split())\n    ans = [1]\n    for i in range(1, n):\n        p = (m - 1) % (i + 1) + 1\n        if ans[i - 1] < p:\n            ans.append(ans[i - 1])\n        else:\n            ans.append(ans[i - 1] + 1)\n    print(*ans)", "for _ in range(int(input())):\n    [m, x] = [int(j) for j in input().split()]\n    ps = 0\n    l = []\n    m = m - 1\n    for i in range(x):\n        l.append('0')\n    l[0] = 1\n    for i in range(1, x):\n        ps = m % (i + 1) + 1\n        if l[i - 1] < ps:\n            l[i] = l[i - 1]\n        else:\n            l[i] = l[i - 1] + 1\n    for i in range(x):\n        print(l[i], end=' ')", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    qwerty = [0, 1] + [0 for p in range(x - 1)]\n    for i in range(2, x + 1):\n        qwerty[i] = qwerty[i - 1] + (qwerty[i - 1] >= (m % i if m % i else i))\n    print(*[qwerty[i + 1] for i in range(x)])", "from sys import stdin, stdout\nfrom random import randint\nfor _ in range(int(stdin.readline())):\n    (m, x) = map(int, stdin.readline().split())\n    a = [0 for i in range(x)]\n    (a[0], m) = (1, m - 1)\n    for i in range(1, x):\n        b = m % (i + 1) + 1\n        a[i] = a[i - 1] if b > a[i - 1] else a[i - 1] + 1\n    print(*a)", "import heapq\nimport math\nimport sys\nimport collections\nimport bisect\nimport time\nimport random\nimport itertools\nimport string\nfrom collections import Counter, defaultdict\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nfor t in range(int(input())):\n    (m, x) = get_ints()\n    m -= 1\n    ans = []\n    ans.append(1)\n    for i in range(1, x):\n        val = m % (i + 1) + 1\n        if ans[i - 1] < val:\n            ans.append(ans[-1])\n        else:\n            ans.append(ans[-1] + 1)\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    (m, x) = list(map(int, input().split()))\n    m -= 1\n    lst = list(range(x))\n    lst[0] = 1\n    for i in range(1, x):\n        a = m % (i + 1) + 1\n        if lst[i - 1] < a:\n            lst[i] = lst[i - 1]\n        else:\n            lst[i] = lst[i - 1] + 1\n    print(*lst, end=' ')", "for _ in range(int(input())):\n    (m, x) = [int(i) for i in input().split()]\n    m = m - 1\n    a = [i for i in range(0, x)]\n    if m == 0:\n        for i in range(1, x + 1):\n            print(i, end=' ')\n        print('')\n    if m == 1:\n        for i in range(1, x + 1):\n            print(1, end=' ')\n        print('')\n    else:\n        print(1, end=' ')\n        i = [0]\n        for j in range(1, x):\n            if j + 1 > m:\n                break\n            d = m % (j + 1)\n            if i[j - 1] >= d:\n                print(i[j - 1] + 2, end=' ')\n                i.append(i[j - 1] + 1)\n            else:\n                print(i[j - 1] + 1, end=' ')\n                i.append(i[j - 1])\n        if j + 1 > m:\n            for j in range(x - m):\n                print(i[-1] + 1, end=' ')\n        print('')", "t = int(input())\nfor i in range(t):\n    (m, x) = list(map(int, input().split()))\n    m -= 1\n    lst = list(range(x))\n    lst[0] = 1\n    for i in range(1, x):\n        a = m % (i + 1) + 1\n        if lst[i - 1] < a:\n            lst[i] = lst[i - 1]\n        else:\n            lst[i] = lst[i - 1] + 1\n    print(*lst, end=' ')", "try:\n    for test in range(int(input())):\n        (man, axe) = map(int, input().split())\n        ls = [0] * (axe + 1)\n        ls[1] = 1\n        for i in range(2, axe + 1):\n            t = man % i\n            if t == 0:\n                t = i\n            ls[i] = ls[i - 1]\n            if ls[i] >= t:\n                ls[i] += 1\n        for i in range(1, axe + 1):\n            print(ls[i], end=' ')\n        print()\nexcept:\n    pass", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    a = [0, 1] + [0 for i in range(x - 1)]\n    for i in range(2, x + 1):\n        a[i] = a[i - 1] + (a[i - 1] >= (m % i if m % i else i))\n    print(*[a[i + 1] for i in range(x)])", "for _ in range(int(input())):\n    (m, x) = map(int, input().split())\n    a = [0, 1] + [0 for i in range(x - 1)]\n    for i in range(2, x + 1):\n        a[i] = a[i - 1] + (a[i - 1] >= (m % i if m % i else i))\n    print(*[a[i + 1] for i in range(x)])", "for i in range(int(input())):\n    (m, x) = map(int, input().split())\n    m = m - 1\n    l = []\n    for i in range(x):\n        l.append(0)\n    l[0] = 1\n    a = 0\n    for i in range(1, x):\n        a = m % (i + 1) + 1\n        if l[i - 1] < a:\n            l[i] = l[i - 1]\n        else:\n            l[i] = l[i - 1] + 1\n    for i in range(x):\n        print(l[i], end=' ')", "for _ in range(int(input())):\n    (m, x) = map(int, input().split(' '))\n    arr = [0 for i in range(x)]\n    arr[0] = 1\n    for i in range(1, x):\n        s = (m - 1) % (1 + i) + 1\n        if arr[i - 1] < s:\n            arr[i] = arr[i - 1]\n        else:\n            arr[i] = arr[i - 1] + 1\n    print(*arr)", "for _ in range(int(input())):\n    (num, xo) = map(int, input().split())\n    st = [None] * int(xo + 1)\n    st.insert(1, 1)\n    for i in range(2, xo + 1):\n        tempo = num % i\n        if tempo == 0:\n            tempo = i\n        st[i] = st[i - 1]\n        if st[i] >= tempo:\n            st[i] += 1\n    for k in range(1, xo + 1):\n        print(st[k], end=' ')\n    print()"]