["from bisect import bisect_right as bl\nfrom random import randint as R\nRI = lambda : [int(_x) for _x in input().split()]\nII = lambda : int(input())\nimport random\nmod = 10 ** 9 + 7\nfor _ in range(II()):\n    n = II()\n    A = RI()\n    dp = [0] * 7\n    dp[0] = 1\n    for i in A:\n        ndp = dp[:]\n        le = len(str(i))\n        rem = i % 7\n        for j in range(7):\n            ndp[(j * 10 ** le + rem) % 7] += dp[j]\n        for j in range(7):\n            ndp[j] %= mod\n        dp = ndp[:]\n    print((dp[0] - 1) % mod)", "from bisect import bisect_right as bl\nfrom random import randint as R\nRI = lambda : [int(_x) for _x in input().split()]\nII = lambda : int(input())\nimport random\nmod = 10 ** 9 + 7\nfor _ in range(II()):\n    n = II()\n    A = RI()\n    dp = [0] * 7\n    dp[0] = 1\n    for i in A:\n        ndp = dp[:]\n        le = len(str(i))\n        rem = i % 7\n        for j in range(7):\n            ndp[(j * 10 ** le + rem) % 7] += dp[j]\n        for j in range(7):\n            ndp[j] %= mod\n        dp = ndp[:]\n    print((dp[0] - 1) % mod)", "from bisect import bisect_right as bl\nfrom random import randint as R\nRI = lambda : [int(_x) for _x in input().split()]\nII = lambda : int(input())\nimport random\nmod = 10 ** 9 + 7\nfor _ in range(II()):\n    n = II()\n    A = RI()\n    dp = [0] * 7\n    dp[0] = 1\n    for i in A:\n        ndp = dp[:]\n        le = len(str(i))\n        rem = i % 7\n        for j in range(7):\n            ndp[(j * 10 ** le + rem) % 7] += dp[j]\n        for j in range(7):\n            ndp[j] %= mod\n        dp = ndp[:]\n    print((dp[0] - 1) % mod)", "from bisect import bisect_right as bl\nfrom random import randint as R\nRI = lambda : [int(_x) for _x in input().split()]\nII = lambda : int(input())\nimport random\nmod = 10 ** 9 + 7\nfor _ in range(II()):\n    n = II()\n    A = RI()\n    dp = [0] * 7\n    dp[0] = 1\n    for i in A:\n        ndp = dp[:]\n        le = len(str(i))\n        rem = i % 7\n        for j in range(7):\n            ndp[(j * 10 ** le + rem) % 7] += dp[j]\n        for j in range(7):\n            ndp[j] %= mod\n        dp = ndp[:]\n    print((dp[0] - 1) % mod)", "from bisect import bisect_right as bl\nfrom random import randint as R\nRI = lambda : [int(_x) for _x in input().split()]\nII = lambda : int(input())\nimport random\nmod = 10 ** 9 + 7\nfor _ in range(II()):\n    n = II()\n    A = RI()\n    dp = [0] * 7\n    dp[0] = 1\n    for i in A:\n        ndp = dp[:]\n        le = len(str(i))\n        rem = i % 7\n        for j in range(7):\n            ndp[(j * 10 ** le + rem) % 7] += dp[j]\n        for j in range(7):\n            ndp[j] %= mod\n        dp = ndp[:]\n    print((dp[0] - 1) % mod)", "from bisect import bisect_right as bl\nfrom random import randint as R\nRI = lambda : [int(_x) for _x in input().split()]\nII = lambda : int(input())\nimport random\nmod = 10 ** 9 + 7\nfor _ in range(II()):\n    n = II()\n    A = RI()\n    dp = [0] * 7\n    dp[0] = 1\n    for i in A:\n        ndp = dp[:]\n        le = len(str(i))\n        rem = i % 7\n        for j in range(7):\n            ndp[(j * 10 ** le + rem) % 7] += dp[j]\n        for j in range(7):\n            ndp[j] %= mod\n        dp = ndp[:]\n    print((dp[0] - 1) % mod)", "from bisect import bisect_right as bl\nfrom random import randint as R\nRI = lambda : [int(_x) for _x in input().split()]\nII = lambda : int(input())\nimport random\nmod = 10 ** 9 + 7\nfor _ in range(II()):\n    n = II()\n    A = RI()\n    dp = [0] * 7\n    dp[0] = 1\n    for i in A:\n        ndp = dp[:]\n        le = len(str(i))\n        rem = i % 7\n        for j in range(7):\n            ndp[(j * 10 ** le + rem) % 7] += dp[j]\n        for j in range(7):\n            ndp[j] %= mod\n        dp = ndp[:]\n    print((dp[0] - 1) % mod)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    t = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(t[i]))\n        for j in range(7):\n            k = (j * p + t[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dp = [[0 for i in range(n)] for j in range(7)]\n    M = 1000000007\n    for i in range(n):\n        if i == 0:\n            p = l[i] % 7\n            dp[p][i] += 1\n        else:\n            for j in range(7):\n                dp[j][i] += dp[j][i - 1]\n                dp[j][i] %= M\n            p = l[i] % 7\n            dp[p][i] += 1\n            for j in range(7):\n                dp[(j * 10 ** len(str(l[i])) + l[i]) % 7][i] += dp[j][i - 1]\n                dp[(j * 10 ** len(str(l[i])) + l[i]) % 7][i] %= M\n    print(dp[0][n - 1])", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(arr[i]))\n        for j in range(7):\n            k = (j * p + arr[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % int(1000000000.0 + 7)\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % int(1000000000.0 + 7)\n    print((dp[-1][0] - 1 + int(1000000000.0 + 7)) % int(1000000000.0 + 7))", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "import math\nT = int(input())\n\ndef countDigit(n):\n    return math.floor(math.log10(n) + 1)\n\ndef update(arr, a):\n    one = [0] * 7\n    for (i, x) in enumerate(arr):\n        one[(i * 10 ** countDigit(a) + a) % 7] = x\n    one[a % 7] += 1\n    for i in range(len(arr)):\n        arr[i] = (arr[i] + one[i]) % (10 ** 9 + 7)\nwhile T:\n    T -= 1\n    n = int(input())\n    A = [int(a) for a in input().split()]\n    arr = [0] * 7\n    for a in A:\n        update(arr, a)\n    print(arr[0])", "N = int(1000000000.0 + 7)\nfor a in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    ar = [[0] * 7 for _ in range(n + 1)]\n    ar[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(b[i]))\n        for j in range(7):\n            k = (j * p + b[i]) % 7\n            ar[i + 1][j] = (ar[i + 1][j] + ar[i][j]) % N\n            ar[i + 1][k] = (ar[i + 1][k] + ar[i][j]) % N\n    print((ar[-1][0] - 1 + N) % N)", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    arr = []\n    for j in range(a + 1):\n        arr.append([0] * 7)\n    arr[0][0] = 1\n    for k in range(a):\n        c = 10 ** len(str(b[k]))\n        for l in range(7):\n            arr[k + 1][l] = (arr[k + 1][l] + arr[k][l]) % 1000000007\n            m = (c * l + b[k]) % 7\n            arr[k + 1][m] = (arr[k + 1][m] + arr[k][l]) % 1000000007\n    arr = arr[::-1]\n    print((arr[0][0] - 1 + 1000000007) % 1000000007)", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    arr = []\n    for j in range(a + 1):\n        arr.append([0] * 7)\n    arr[0][0] = 1\n    for k in range(a):\n        c = 10 ** len(str(b[k]))\n        for l in range(7):\n            arr[k + 1][l] = (arr[k + 1][l] + arr[k][l]) % 1000000007\n            m = (c * l + b[k]) % 7\n            arr[k + 1][m] = (arr[k + 1][m] + arr[k][l]) % 1000000007\n    arr = arr[::-1]\n    print((arr[0][0] - 1 + 1000000007) % 1000000007)", "tc = int(input())\nfor i in range(tc):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    for x in range(n1 + 1):\n        l1 += [[0] * 7]\n    l1[0][0] = 1\n    for j in range(n1):\n        a = 10 ** len(str(l[j]))\n        for k in range(7):\n            m = (k * a + l[j]) % 7\n            l1[j + 1][k] = (l1[j + 1][k] + l1[j][k]) % (10 ** 9 + 7)\n            l1[j + 1][m] = (l1[j + 1][m] + l1[j][k]) % (10 ** 9 + 7)\n    l1 = l1[::-1]\n    print((l1[0][0] - 1 + (10 ** 9 + 7)) % (10 ** 9 + 7))", "tc = int(input())\nfor i in range(tc):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    for x in range(n1 + 1):\n        l1 += [[0] * 7]\n    l1[0][0] = 1\n    for j in range(n1):\n        a = 10 ** len(str(l[j]))\n        for k in range(7):\n            m = (k * a + l[j]) % 7\n            l1[j + 1][k] = (l1[j + 1][k] + l1[j][k]) % (10 ** 9 + 7)\n            l1[j + 1][m] = (l1[j + 1][m] + l1[j][k]) % (10 ** 9 + 7)\n    l1 = l1[::-1]\n    print((l1[0][0] - 1 + (10 ** 9 + 7)) % (10 ** 9 + 7))", "import copy\nimport math\nmod = 1000000007\nfor asdf in range(int(input())):\n    length = int(input())\n    nums = [int(lol) for lol in input().split()]\n    current = [1, 0, 0, 0, 0, 0, 0]\n    new = [1, 0, 0, 0, 0, 0, 0]\n    currSum = 0\n    for i in range(length):\n        multi = round(math.pow(10, math.floor(math.log10(nums[i]) + 1)) % 7)\n        for j in range(7):\n            new[(j * multi + nums[i]) % 7] += current[j]\n            new[(j * multi + nums[i]) % 7] %= mod\n        current = copy.deepcopy(new)\n    print((current[0] - 1) % mod)", "tc = int(input())\nfor i in range(tc):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    for x in range(n1 + 1):\n        l1 += [[0] * 7]\n    l1[0][0] = 1\n    for j in range(n1):\n        a = 10 ** len(str(l[j]))\n        for k in range(7):\n            m = (k * a + l[j]) % 7\n            l1[j + 1][k] = (l1[j + 1][k] + l1[j][k]) % (10 ** 9 + 7)\n            l1[j + 1][m] = (l1[j + 1][m] + l1[j][k]) % (10 ** 9 + 7)\n    l1 = l1[::-1]\n    print((l1[0][0] - 1 + (10 ** 9 + 7)) % (10 ** 9 + 7))", "tc = int(input())\nfor i in range(tc):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    for x in range(n1 + 1):\n        l1 += [[0] * 7]\n    l1[0][0] = 1\n    for j in range(n1):\n        a = 10 ** len(str(l[j]))\n        for k in range(7):\n            m = (k * a + l[j]) % 7\n            l1[j + 1][k] = (l1[j + 1][k] + l1[j][k]) % (10 ** 9 + 7)\n            l1[j + 1][m] = (l1[j + 1][m] + l1[j][k]) % (10 ** 9 + 7)\n    l1 = l1[::-1]\n    print((l1[0][0] - 1 + (10 ** 9 + 7)) % (10 ** 9 + 7))", "tc = int(input())\nfor i in range(tc):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    for x in range(n1 + 1):\n        l1 += [[0] * 7]\n    l1[0][0] = 1\n    for j in range(n1):\n        a = 10 ** len(str(l[j]))\n        for k in range(7):\n            m = (k * a + l[j]) % 7\n            l1[j + 1][k] = (l1[j + 1][k] + l1[j][k]) % (10 ** 9 + 7)\n            l1[j + 1][m] = (l1[j + 1][m] + l1[j][k]) % (10 ** 9 + 7)\n    l1 = l1[::-1]\n    print((l1[0][0] - 1 + (10 ** 9 + 7)) % (10 ** 9 + 7))", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "K = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pp = [[0] * 7 for _ in range(n + 1)]\n    pp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            pp[i + 1][j] = (pp[i + 1][j] + pp[i][j]) % K\n            pp[i + 1][k] = (pp[i + 1][k] + pp[i][j]) % K\n    print((pp[-1][0] - 1 + K) % K)", "mod = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % mod\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % mod\n    print((dp[-1][0] - 1 + mod) % mod)", "tc = int(input())\nfor i in range(tc):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    for x in range(n1 + 1):\n        l1 += [[0] * 7]\n    l1[0][0] = 1\n    for j in range(n1):\n        a = 10 ** len(str(l[j]))\n        for k in range(7):\n            m = (k * a + l[j]) % 7\n            l1[j + 1][k] = (l1[j + 1][k] + l1[j][k]) % (10 ** 9 + 7)\n            l1[j + 1][m] = (l1[j + 1][m] + l1[j][k]) % (10 ** 9 + 7)\n    l1 = l1[::-1]\n    print((l1[0][0] - 1 + (10 ** 9 + 7)) % (10 ** 9 + 7))", "N = int(1000000000.0 + 7)\nfor a in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    ar = [[0] * 7 for _ in range(n + 1)]\n    ar[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(b[i]))\n        for j in range(7):\n            k = (j * p + b[i]) % 7\n            ar[i + 1][j] = (ar[i + 1][j] + ar[i][j]) % N\n            ar[i + 1][k] = (ar[i + 1][k] + ar[i][j]) % N\n    print((ar[-1][0] - 1 + N) % N)", "A = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    N = int(input())\n    l = list(map(int, input().split()))\n    DP = [[0] * 7 for _ in range(N + 1)]\n    DP[0][0] = 1\n    for i in range(N):\n        P = 10 ** len(str(l[i]))\n        for j in range(7):\n            k = (j * P + l[i]) % 7\n            DP[i + 1][j] = (DP[i + 1][j] + DP[i][j]) % A\n            DP[i + 1][k] = (DP[i + 1][k] + DP[i][j]) % A\n    print((DP[-1][0] - 1 + A) % A)", "monu = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    nana = int(input())\n    ay = list(map(int, input().split()))\n    ap = [[0] * 7 for _ in range(nana + 1)]\n    ap[0][0] = 1\n    for i in range(nana):\n        p = 10 ** len(str(ay[i]))\n        for j in range(7):\n            k = (j * p + ay[i]) % 7\n            ap[i + 1][j] = (ap[i + 1][j] + ap[i][j]) % monu\n            ap[i + 1][k] = (ap[i + 1][k] + ap[i][j]) % monu\n    print((ap[-1][0] - 1 + monu) % monu)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "t = int(input())\n\ndef res():\n    return 0\nfor i in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    dynamic_arr = []\n    for i in range(n + 1):\n        dynamic_arr.append([0] * 7)\n    dynamic_arr[0][0] = 1\n    for i in range(n):\n        length = 10 ** len(str(array[i]))\n        for c in range(0, 7, 1):\n            z = (c * length + array[i]) % 7\n            dynamic_arr[i + 1][c] = (dynamic_arr[i + 1][c] + dynamic_arr[i][c]) % int(1000000000.0 + 7)\n            dynamic_arr[i + 1][z] = (dynamic_arr[i + 1][z] + dynamic_arr[i][c]) % int(1000000000.0 + 7)\n    print((dynamic_arr[len(dynamic_arr) - 1][0] - 1 + res() + int(1000000000.0 + 7)) % int(1000000000.0 + 7 + res()))", "K = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pp = [[0] * 7 for _ in range(n + 1)]\n    pp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            pp[i + 1][j] = (pp[i + 1][j] + pp[i][j]) % K\n            pp[i + 1][k] = (pp[i + 1][k] + pp[i][j]) % K\n    print((pp[-1][0] - 1 + K) % K)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "K = int(1000000000.0 + 7)\nfor x in range(int(input())):\n    n = int(input())\n    d = list(map(int, input().split()))\n    pp = [[0] * 7 for _ in range(n + 1)]\n    pp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(d[i]))\n        for j in range(7):\n            k = (j * p + d[i]) % 7\n            pp[i + 1][j] = (pp[i + 1][j] + pp[i][j]) % K\n            pp[i + 1][k] = (pp[i + 1][k] + pp[i][j]) % K\n    print((pp[-1][0] - 1 + K) % K)", "mega = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split(' ')))\n    dummyArr = [[0] * 7 for _ in range(N + 1)]\n    dummyArr[0][0] = 1\n    for i in range(N):\n        P = 10 ** len(str(arr[i]))\n        for j in range(7):\n            k = (j * P + arr[i]) % 7\n            dummyArr[i + 1][j] = (dummyArr[i + 1][j] + dummyArr[i][j]) % mega\n            dummyArr[i + 1][k] = (dummyArr[i + 1][k] + dummyArr[i][j]) % mega\n    print((dummyArr[-1][0] - 1 + mega) % mega)", "mod = int(1000000007)\nfor z in range(int(input())):\n    mn = int(input())\n    arr = list(map(int, input().split()))\n    t = [[0] * 7 for _ in range(mn + 1)]\n    t[0][0] = 1\n    for i in range(mn):\n        p = 10 ** len(str(arr[i]))\n        for j in range(7):\n            k = (j * p + arr[i]) % 7\n            t[i + 1][j] = (t[i + 1][j] + t[i][j]) % mod\n            t[i + 1][k] = (t[i + 1][k] + t[i][j]) % mod\n    print((t[-1][0] - 1 + mod) % mod)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "t = int(input())\n\ndef res():\n    return 0\nconst = int(1000000000.0 + 7)\nfor i in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    dynamic_arr = []\n    for i in range(n + 1):\n        dynamic_arr.append([0] * 7)\n    dynamic_arr[0][0] = 1\n    for i in range(n):\n        length = 10 ** len(str(array[i]))\n        for c in range(0, 7, 1):\n            z = (c * length + array[i]) % 7\n            dynamic_arr[i + 1][c] = (dynamic_arr[i + 1][c] + dynamic_arr[i][c]) % int(1000000000.0 + 7)\n            dynamic_arr[i + 1][z] = (dynamic_arr[i + 1][z] + dynamic_arr[i][c]) % int(1000000000.0 + 7)\n    print((dynamic_arr[-1][0] - 1 + res() + int(1000000000.0 + 7)) % int(1000000000.0 + 7 + res()))", "m = int(1000000000.0 + 7)\nn = int(input())\nwhile n:\n    a = int(input())\n    ls = list(map(int, input().split()))[:a]\n    b = [[0] * 7 for i in range(0, a + 1)]\n    b[0][0] = 1\n    for j in range(0, a):\n        l = 10 ** len(str(ls[j]))\n        for k in range(0, 7):\n            p = (k * l + ls[j]) % 7\n            b[j + 1][k] = (b[j + 1][k] + b[j][k]) % m\n            b[j + 1][p] = (b[j + 1][p] + b[j][k]) % m\n    print((b[-1][0] - 1 + m) % m)\n    n = n - 1", "power = int(1000000000.0 + 7)\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = n + 1\n    pp = [[0] * 7 for _ in range(m)]\n    pp[0][0] = 1\n    for i in range(n):\n        d = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * d + a[i]) % 7\n            pp[i + 1][j] = (pp[i + 1][j] + pp[i][j]) % power\n            pp[i + 1][k] = (pp[i + 1][k] + pp[i][j]) % power\n    print((pp[-1][0] - 1 + power) % power)", "x = int(1000000000.0 + 7)\nfor y in range(int(input())):\n    z = int(input())\n    a = list(map(int, input().split()))\n    b = [[0] * 7 for _ in range(z + 1)]\n    b[0][0] = 1\n    for i in range(z):\n        c = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * c + a[i]) % 7\n            b[i + 1][j] = (b[i + 1][j] + b[i][j]) % x\n            b[i + 1][k] = (b[i + 1][k] + b[i][j]) % x\n    print((b[-1][0] - 1 + x) % x)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    subsets = [[0] * 7 for _ in range(n + 1)]\n    subsets[0][0] = 1\n    for i in range(n):\n        k = 10 ** len(str(a[i]))\n        for j in range(7):\n            m = (j * k + a[i]) % 7\n            subsets[i + 1][j] = (subsets[i + 1][j] + subsets[i][j]) % M\n            subsets[i + 1][m] = (subsets[i + 1][m] + subsets[i][j]) % M\n    print((subsets[-1][0] - 1 + M) % M)", "N = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    arr = [[0] * 7 for _ in range(n + 1)]\n    arr[0][0] = 1\n    for i in range(n):\n        s = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * s + a[i]) % 7\n            arr[i + 1][j] = (arr[i + 1][j] + arr[i][j]) % N\n            arr[i + 1][k] = (arr[i + 1][k] + arr[i][j]) % N\n    print((arr[-1][0] - 1 + N) % N)", "kar = int(1000000000.0 + 7)\nfor govind in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % kar\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % kar\n    print((dp[-1][0] - 1 + kar) % kar)", "M = int(1000000000.0 + 7)\nfor k in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        c = 10 ** len(str(arr[i]))\n        for j in range(7):\n            k = (j * c + arr[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor case in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    arr = [[0] * 7 for i in range(n + 1)]\n    arr[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(lst[i]))\n        for j in range(7):\n            x = (j * p + lst[i]) % 7\n            arr[i + 1][j] = (arr[i + 1][j] + arr[i][j]) % mod\n            arr[i + 1][x] = (arr[i + 1][x] + arr[i][j]) % mod\n    print((arr[-1][0] - 1 + mod) % mod)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "Mod = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    o = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(o + 1)]\n    dp[0][0] = 1\n    for d in range(o):\n        p = 10 ** len(str(a[d]))\n        for g in range(7):\n            k = (g * p + a[d]) % 7\n            dp[d + 1][g] = (dp[d + 1][g] + dp[d][g]) % Mod\n            dp[d + 1][k] = (dp[d + 1][k] + dp[d][g]) % Mod\n    print((dp[-1][0] - 1 + Mod) % Mod)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    arr = [[0] * 7 for _ in range(n + 1)]\n    arr[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            arr[i + 1][j] = (arr[i + 1][j] + arr[i][j]) % M\n            arr[i + 1][k] = (arr[i + 1][k] + arr[i][j]) % M\n    print((arr[-1][0] - 1 + M) % M)", "a = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    d = [[0] * 7 for _ in range(n + 1)]\n    d[0][0] = 1\n    for j in range(n):\n        p = 10 ** len(str(x[j]))\n        for l in range(7):\n            w = (l * p + x[j]) % 7\n            d[j + 1][l] = (d[j + 1][l] + d[j][l]) % a\n            d[j + 1][w] = (d[j + 1][w] + d[j][l]) % a\n    print((d[-1][0] - 1 + a) % a)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "m = int(1000000000.0 + 7)\ntest = int(input())\nfor i in range(test):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dp = [[0] * 7 for j in range(n + 1)]\n    dp[0][0] = 1\n    for c in range(n):\n        q = 10 ** len(str(l[c]))\n        for d in range(7):\n            k = (d * q + l[c]) % 7\n            dp[c + 1][d] = (dp[c + 1][d] + dp[c][d]) % m\n            dp[c + 1][k] = (dp[c + 1][k] + dp[c][d]) % m\n    print((dp[-1][0] - 1 + m) % m)", "m = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = [[0] * 7 for _ in range(n + 1)]\n    d[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            d[i + 1][j] = (d[i + 1][j] + d[i][j]) % m\n            d[i + 1][k] = (d[i + 1][k] + d[i][j]) % m\n    print((d[-1][0] - 1 + m) % m)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "m = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    dp = [[0] * 7 for i in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % m\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % m\n    print((dp[-1][0] - 1 + m) % m)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor w in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    wa = [[0] * 7 for i in range(n + 1)]\n    wa[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            wa[i + 1][j] = (wa[i + 1][j] + wa[i][j]) % M\n            wa[i + 1][k] = (wa[i + 1][k] + wa[i][j]) % M\n    print((wa[-1][0] - 1 + M) % M)", "temp = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = [[0] * 7 for _ in range(n + 1)]\n    d[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(arr[i]))\n        for j in range(7):\n            k = (j * p + arr[i]) % 7\n            d[i + 1][j] = (d[i + 1][j] + d[i][j]) % temp\n            d[i + 1][k] = (d[i + 1][k] + d[i][j]) % temp\n    print((d[-1][0] - 1 + temp) % temp)", "mod = int(1000000000.0 + 7)\nfor a in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        q = 10 ** len(str(b[i]))\n        for j in range(7):\n            k = (j * q + b[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % mod\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % mod\n    print((dp[-1][0] - 1 + mod) % mod)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor w in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    wa = [[0] * 7 for i in range(n + 1)]\n    wa[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            wa[i + 1][j] = (wa[i + 1][j] + wa[i][j]) % M\n            wa[i + 1][k] = (wa[i + 1][k] + wa[i][j]) % M\n    print((wa[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "mod = 10 ** 9 + 7\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    numbers = [int(x) for x in input().split(' ', n - 1)]\n    dp = [[0] * 7 for i in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        power = 10 ** len(str(numbers[i]))\n        for j in range(7):\n            k = (j * power + numbers[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % mod\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % mod\n    print((dp[-1][0] - 1 + mod) % mod)", "Mod = int(1000000000.0 + 7)\nfor n in range(int(input())):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    dynamic = [[0] * 7 for _ in range(length + 1)]\n    dynamic[0][0] = 1\n    for qq in range(length):\n        pe = 10 ** len(str(arr[qq]))\n        for j in range(7):\n            data = (arr[qq] + pe * j) % 7\n            dynamic[qq + 1][j] = (dynamic[qq + 1][j] + dynamic[qq][j]) % Mod\n            dynamic[qq + 1][data] = (dynamic[qq + 1][data] + dynamic[qq][j]) % Mod\n    print((dynamic[-1][0] - 1 + Mod) % Mod)", "mod = int(1000000000.0 + 7)\nfor tc in range(int(input())):\n    sz = int(input())\n    m = list(map(int, input().split()))\n    memoize = [[0] * 7 for _ in range(sz + 1)]\n    memoize[0][0] = 1\n    for x in range(sz):\n        v = 10 ** len(str(m[x]))\n        for y in range(7):\n            z = (y * v + m[x]) % 7\n            memoize[x + 1][y] = (memoize[x + 1][y] + memoize[x][y]) % mod\n            memoize[x + 1][z] = (memoize[x + 1][z] + memoize[x][y]) % mod\n    print((memoize[-1][0] - 1 + mod) % mod)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor a in range(int(input())):\n    b = int(input())\n    c = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(b + 1)]\n    dp[0][0] = 1\n    for i in range(b):\n        p = 10 ** len(str(c[i]))\n        for j in range(7):\n            k = (j * p + c[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "m = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    noe = int(input())\n    arr = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(noe + 1)]\n    dp[0][0] = 1\n    for i in range(noe):\n        p = 10 ** len(str(arr[i]))\n        for j in range(7):\n            k = (j * p + arr[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % m\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % m\n    print((dp[-1][0] - 1 + m) % m)", "mod = int(1000000000.0 + 7)\nfor i in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    qb = [[0] * 7 for _ in range(n + 1)]\n    qb[0][0] = 1\n    for j in range(n):\n        s = 10 ** len(str(p[j]))\n        for k in range(7):\n            l = (k * s + p[j]) % 7\n            qb[j + 1][k] = (qb[j + 1][k] + qb[j][k]) % mod\n            qb[j + 1][l] = (qb[j + 1][l] + qb[j][k]) % mod\n    print((qb[-1][0] - 1 + mod) % mod)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "def Subsequence_Numbers_Divisible_b_7(l, n):\n    Di = [[0] * 7 for i in range(n + 2)]\n    Di[0][0] = 1\n    for i in range(n):\n        j = int(len(str(l[i])))\n        p = 1\n        while j != 0:\n            p = p * 10\n            j = j - 1\n        for k in range(7):\n            y = (k * p + l[i]) % 7\n            Di[i + 1][k] = (Di[i + 1][k] + Di[i][k]) % 1000000007\n            Di[i + 1][y] = (Di[i + 1][y] + Di[i][k]) % 1000000007\n    print(int((Di[n][0] - 1 + 1000000007) % 1000000007))\nfor _ in range(int(input())):\n    n = int(input())\n    Ai = list(map(int, input().split()))\n    Subsequence_Numbers_Divisible_b_7(Ai, n)", "M = 1000000007\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = [[0 for i in range(7)] for i in range(n + 1)]\n    ans[0][0] = 1\n    for i in range(n):\n        x = len(str(l[i]))\n        p = 1\n        for I in range(x):\n            p *= 10\n        for j in range(7):\n            u = (j * p + l[i]) % 7\n            ans[i + 1][j] = (ans[i + 1][j] + ans[i][j]) % M\n            ans[i + 1][u] = (ans[i + 1][u] + ans[i][j]) % M\n    print((ans[n][0] - 1) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "x = int(1000000000.0 + 7)\nt = int(input())\nfor i in range(t):\n    p = int(input())\n    l = list(map(int, input().split()))\n    st = [[0] * 7 for x in range(p + 1)]\n    st[0][0] = 1\n    for j in range(p):\n        q = 10 ** len(str(l[j]))\n        for k in range(7):\n            r = (k * q + l[j]) % 7\n            st[j + 1][k] = (st[j + 1][k] + st[j][k]) % x\n            st[j + 1][r] = (st[j + 1][r] + st[j][k]) % x\n    print((st[-1][0] - 1 + x) % x)", "N = int(1000000000.0 + 7)\nk = int(input())\nfor jk in range(k):\n    m = int(input())\n    lis = list(map(int, input().split()))\n    dp = [[0] * 7 for i in range(m + 1)]\n    dp[0][0] = 1\n    for jp in range(m):\n        p = 10 ** len(str(lis[jp]))\n        for jl in range(7):\n            kp = (jl * p + lis[jp]) % 7\n            dp[jp + 1][jl] = (dp[jp + 1][jl] + dp[jp][jl]) % N\n            dp[jp + 1][kp] = (dp[jp + 1][kp] + dp[jp][jl]) % N\n    print((dp[-1][0] - 1 + N) % N)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    M = int(1000000000.0 + 7)\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "Reminderrrrrrrrrrrrrrrrr = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % Reminderrrrrrrrrrrrrrrrr\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % Reminderrrrrrrrrrrrrrrrr\n    print((dp[-1][0] - 1 + Reminderrrrrrrrrrrrrrrrr) % Reminderrrrrrrrrrrrrrrrr)", "M = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for i in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        arr = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * arr + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "val = int(1000000000.0 + 7)\nfor i in range(int(input())):\n    num = int(input())\n    p = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(num + 1)]\n    dp[0][0] = 1\n    for j in range(num):\n        store = 10 ** len(str(p[j]))\n        for k in range(7):\n            l = (k * store + p[j]) % 7\n            dp[j + 1][k] = (dp[j + 1][k] + dp[j][k]) % val\n            dp[j + 1][l] = (dp[j + 1][l] + dp[j][k]) % val\n    print((dp[-1][0] - 1 + val) % val)", "test = int(input())\nz = 0\nwhile z < test:\n    n = int(input())\n    l = list(map(int, input().split()))\n    arr = []\n    for _ in range(n + 1):\n        arr.append([0] * 7)\n    arr[0][0] = 1\n    i = 0\n    M = int(1000000000.0 + 7)\n    while i < n:\n        p = pow(10, len(str(l[i])))\n        j = 0\n        while j < 7:\n            k = (j * p + l[i]) % 7\n            arr[i + 1][k] = (arr[i + 1][k] + arr[i][j]) % M\n            arr[i + 1][j] = (arr[i + 1][j] + arr[i][j]) % M\n            j += 1\n        i += 1\n    arr = arr[-1][0]\n    res = (arr - 1 + M) % M\n    print(res)\n    z += 1", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for x in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "for i in range(int(input())):\n    x = int(input())\n    l = list(map(int, input().split(' ')))\n    mod = int(1000000000.0 + 7)\n    my = [[0] * 7 for j in range(x + 1)]\n    my[0][0] = 1\n    for i in range(x):\n        p = 10 ** len(str(l[i]))\n        for j in range(7):\n            k = (j * p + l[i]) % 7\n            my[i + 1][j] = (my[i + 1][j] + my[i][j]) % mod\n            my[i + 1][k] = (my[i + 1][k] + my[i][j]) % mod\n    print((my[-1][0] - 1 + mod) % mod)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)", "M = int(1000000000.0 + 7)\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0] * 7 for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        p = 10 ** len(str(a[i]))\n        for j in range(7):\n            k = (j * p + a[i]) % 7\n            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % M\n            dp[i + 1][k] = (dp[i + 1][k] + dp[i][j]) % M\n    print((dp[-1][0] - 1 + M) % M)"]