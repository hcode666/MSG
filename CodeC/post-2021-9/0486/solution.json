["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    greater = a[n // 2:]\n    lesser = a[:n // 2]\n    valid = []\n    for i in range(n // 2):\n        valid.append(greater[i])\n        valid.append(lesser[i])\n    if n % 2 == 1:\n        valid.append(greater[-1])\n    interest = True\n    for i in range(1, n - 1):\n        if not (valid[i - 1] < valid[i] > valid[i + 1] or valid[i - 1] > valid[i] < valid[i + 1]):\n            interest = False\n    if interest == True:\n        print(*valid)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    greater = a[n // 2:]\n    lesser = a[:n // 2]\n    valid = []\n    for i in range(n // 2):\n        valid.append(greater[i])\n        valid.append(lesser[i])\n    if n % 2 == 1:\n        valid.append(greater[-1])\n    interest = True\n    for i in range(1, n - 1):\n        if not (valid[i - 1] < valid[i] > valid[i + 1] or valid[i - 1] > valid[i] < valid[i + 1]):\n            interest = False\n    if interest == True:\n        print(*valid)\n    else:\n        print(-1)", "import math\nfor ii in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n <= 2:\n        print(-1)\n    elif n == 3:\n        if len(set(a)) == 1:\n            print(-1)\n        elif len(set(a)) == 3:\n            print(a[1], a[2], a[0])\n        elif a[0] == a[1]:\n            print(a[0], a[2], a[0])\n        else:\n            print(a[1], a[0], a[1])\n    else:\n        l = []\n        for i in range(n // 2):\n            l.append(a[n // 2 + i])\n            l.append(a[i])\n            if l[-1] == l[-2]:\n                print(-1)\n                break\n        else:\n            if n % 2 == 0:\n                print(*l)\n            else:\n                l.append(a[-1])\n                print(*l)", "import math\nfor ii in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n <= 2:\n        print(-1)\n    elif n == 3:\n        if len(set(a)) == 1:\n            print(-1)\n        elif len(set(a)) == 3:\n            print(a[1], a[2], a[0])\n        elif a[0] == a[1]:\n            print(a[0], a[2], a[0])\n        else:\n            print(a[1], a[0], a[1])\n    else:\n        l = []\n        m = a[n // 2:]\n        m1 = a[:n // 2]\n        for i in range(n // 2):\n            l.append(m[i])\n            l.append(m1[i])\n            if l[-1] == l[-2]:\n                print(-1)\n                break\n        else:\n            if n % 2 == 0:\n                print(*l)\n            else:\n                l.append(a[-1])\n                print(*l)", "from collections import Counter, deque, defaultdict\nimport statistics\nimport math\n\ndef validate(ans):\n    val = 'equal'\n    for i in range(1, n):\n        if ans[i] > ans[i - 1]:\n            sign = 'greater'\n            if val == sign:\n                return -1\n        elif ans[i] < ans[i - 1]:\n            sign = 'lesser'\n            if val == sign:\n                return -1\n        elif ans[i] == ans[i - 1]:\n            return -1\n        val = sign\n    return 0\n\ndef solve(n, arr):\n    arr.sort()\n    beg = 0\n    end = n - 1\n    mid = (n - 1) // 2\n    r = mid\n    ans = []\n    while mid >= 0 or end > r:\n        ans.append(arr[mid])\n        mid -= 1\n        if end > r:\n            ans.append(arr[end])\n            end -= 1\n    if validate(ans) == -1:\n        return [-1]\n    return ans\nfor test in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*solve(n, arr))", "import math\nfor ii in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n <= 2:\n        print(-1)\n    elif n == 3:\n        if len(set(a)) == 1:\n            print(-1)\n        elif len(set(a)) == 3:\n            print(a[1], a[2], a[0])\n        elif a[0] == a[1]:\n            print(a[0], a[2], a[0])\n        else:\n            print(a[1], a[0], a[1])\n    else:\n        b = list(set(a))\n        b.sort()\n        d = {}\n        for i in b:\n            d[i] = 0\n        for i in a:\n            d[i] += 1\n        b1 = []\n        for i in range(len(b)):\n            b1.append(d[b[i]])\n        x = max(b1)\n        if x > math.ceil(n / 2):\n            print(-1)\n        elif x == math.ceil(n / 2):\n            if n % 2 == 0:\n                l = []\n                for i in range(n // 2):\n                    l.append(a[n // 2 + i])\n                    l.append(a[i])\n                    if l[-1] == l[-2]:\n                        print(-1)\n                        break\n                else:\n                    print(*l)\n            elif a.count(b[0]) == x or a.count(b[-1]) == x:\n                l = []\n                for i in range(n // 2):\n                    l.append(a[n // 2 + i])\n                    l.append(a[i])\n                l.append(a[-1])\n                print(*l)\n            else:\n                print(-1)\n        else:\n            l = []\n            for i in range(n // 2):\n                l.append(a[n // 2 + i])\n                l.append(a[i])\n            if n % 2 == 0:\n                print(*l)\n            else:\n                l.append(a[-1])\n                print(*l)", "import math\nfor ii in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n <= 2:\n        print(-1)\n    elif n == 3:\n        if len(set(a)) == 1:\n            print(-1)\n        elif len(set(a)) == 3:\n            print(a[1], a[2], a[0])\n        elif a[0] == a[1]:\n            print(a[0], a[2], a[0])\n        else:\n            print(a[1], a[0], a[1])\n    else:\n        b = list(set(a))\n        b.sort()\n        d = {}\n        for i in b:\n            d[i] = 0\n        for i in a:\n            d[i] += 1\n        b1 = []\n        for i in range(len(b)):\n            b1.append(d[b[i]])\n        x = max(b1)\n        if x > math.ceil(n / 2):\n            print(-1)\n        elif x == math.ceil(n / 2):\n            if n % 2 == 0:\n                l = []\n                for i in range(n // 2):\n                    l.append(a[n // 2 + i])\n                    l.append(a[i])\n                    if l[-1] == l[-2]:\n                        print(-1)\n                        break\n                else:\n                    print(*l)\n            elif a.count(b[0]) == x or a.count(b[-1]) == x:\n                l = []\n                for i in range(n // 2):\n                    l.append(a[n // 2 + i])\n                    l.append(a[i])\n                l.append(a[-1])\n                print(*l)\n            else:\n                print(-1)\n        else:\n            l = []\n            for i in range(n // 2):\n                l.append(a[n // 2 + i])\n                l.append(a[i])\n            if n % 2 == 0:\n                print(*l)\n            else:\n                l.append(a[-1])\n                print(*l)", "def check(lst):\n    for i in range(1, len(lst) - 1):\n        if lst[i + 1] >= lst[i] >= lst[i - 1]:\n            return False\n        if lst[i + 1] <= lst[i] <= lst[i - 1]:\n            return False\n    return True\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    if N == 1 or N == 2:\n        print(*res)\n        continue\n    i = 0\n    j = N // 2\n    res = []\n    while i < N // 2:\n        res.append(arr[i])\n        res.append(arr[j])\n        i += 1\n        j += 1\n    if N % 2 == 1:\n        res.append(arr[-1])\n    i = 0\n    j = N // 2\n    res1 = []\n    while i < N // 2:\n        res1.append(arr[j])\n        res1.append(arr[i])\n        i += 1\n        j += 1\n    if N % 2 == 1:\n        res1.append(arr[-1])\n    if check(res):\n        print(*res)\n    elif check(res1):\n        print(*res1)\n    else:\n        print(-1)", "from collections import Counter\nimport math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = Counter(l)\n    flag = 1\n    ans = []\n    l.sort()\n    if len(l) < 3:\n        print(*l)\n    else:\n        for i in p:\n            if p[i] > math.ceil(n / 2):\n                print(-1)\n                flag = 0\n                break\n        if flag == 1:\n            if n % 2 == 0:\n                for i in range(n // 2):\n                    ans.append(l[n // 2 + i])\n                    ans.append(l[i])\n                print(*ans)\n            else:\n                for i in range(n // 2):\n                    ans.append(l[i])\n                    ans.append(l[n // 2 + i + 1])\n                if ans[0] == l[n // 2]:\n                    ans.append(l[n // 2])\n                    print(*ans)\n                else:\n                    r = [l[n // 2]]\n                    for i in ans:\n                        r.append(i)\n                    print(*r)", "def maximum_subarray_with_same_value(arr):\n    n = len(arr)\n    max_len = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n and arr[j] == arr[i]:\n            j += 1\n        max_len = max(max_len, j - i)\n        i = j\n    return max_len\nt = int(input())\nfor _ in range(t):\n    (n,) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = maximum_subarray_with_same_value(a)\n    if m > n // 2:\n        print(-1)\n        continue\n    ans = []\n    (i, j) = (0, n // 2)\n    while i < n // 2:\n        ans.append(a[j])\n        ans.append(a[i])\n        i += 1\n        j += 1\n    if n % 2 != 0:\n        ans.append(a[j])\n    print(*ans)", "def impossible(arr):\n    for i in range(len(arr) - 2):\n        if len(set(arr[i:i + 3])) == 1:\n            return True\n    return False\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    arr.sort()\n    a1 = arr[:len(arr) // 2]\n    a2 = arr[len(arr) // 2:]\n    sol = []\n    for j in range(len(a2)):\n        sol.append(a2[j])\n        if len(a1) > j:\n            sol.append(a1[j])\n    if impossible(sol):\n        print(-1)\n    else:\n        print(' '.join(list(map(str, sol))))", "from collections import defaultdict\nimport math as mt\n\ndef check(b):\n    n = len(b)\n    for i in range(1, n - 1):\n        if b[i - 1] > b[i] and b[i] < b[i + 1]:\n            continue\n        elif b[i - 1] < b[i] and b[i] > b[i + 1]:\n            continue\n        else:\n            return False\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n == 1 or n == 2:\n        print(*a)\n        continue\n    a.sort()\n    l1 = []\n    l2 = []\n    for i in range(n // 2):\n        l1.extend([a[i], a[n // 2 + i]])\n    for i in range(n // 2):\n        l2.extend([a[n // 2 + i], a[i]])\n    if n & 1:\n        l1.append(a[-1])\n        l2.append(a[-2])\n    if check(l1):\n        print(*l1)\n    elif check(l2):\n        print(*l2)\n    else:\n        print(-1)", "from collections import Counter\nimport math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = Counter(l)\n    flag = 1\n    ans = []\n    l.sort()\n    if len(l) < 3:\n        print(*l)\n    else:\n        for i in p:\n            if p[i] > math.ceil(n / 2):\n                print(-1)\n                flag = 0\n                break\n        if flag == 1:\n            if n % 2 == 0:\n                for i in range(n // 2):\n                    ans.append(l[n // 2 + i])\n                    ans.append(l[i])\n                print(*ans)\n            else:\n                for i in range(n // 2):\n                    ans.append(l[i])\n                    ans.append(l[n // 2 + i + 1])\n                if ans[0] == l[n // 2]:\n                    ans.append(l[n // 2])\n                    print(*ans)\n                else:\n                    r = [l[n // 2]]\n                    for i in ans:\n                        r.append(i)\n                    print(*r)", "def impossible(arr):\n    for i in range(len(arr) - 2):\n        if len(set(arr[i:i + 3])) == 1:\n            return True\n    return False\nfor i in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    a.sort()\n    a1 = a[:len(a) // 2]\n    a2 = a[len(a) // 2:]\n    sol = []\n    for i in range(len(a2)):\n        sol.append(a2[i])\n        if len(a1) > i:\n            sol.append(a1[i])\n    if impossible(sol):\n        print(-1)\n    else:\n        print(' '.join(list(map(str, sol))))", "def impossible(arr):\n    for i in range(len(arr) - 2):\n        if len(set(arr[i:i + 3])) == 1:\n            return True\n    return False\nfor i in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    a.sort()\n    a1 = a[:len(a) // 2]\n    a2 = a[len(a) // 2:]\n    sol = []\n    for i in range(len(a2)):\n        sol.append(a2[i])\n        if len(a1) > i:\n            sol.append(a1[i])\n    if impossible(sol):\n        print(-1)\n    else:\n        print(' '.join(list(map(str, sol))))", "def solve(a, d, f):\n    a1 = a[0:d]\n    a2 = a[d:]\n    b = []\n    d = min(len(a1), len(a2))\n    if f == 0:\n        for i in range(d):\n            b.append(a2[i])\n            b.append(a1[i])\n        b.append(a2[-1])\n    else:\n        for i in range(d):\n            b.append(a1[i])\n            b.append(a2[i])\n        b.append(a1[-1])\n    return b\n\ndef check(b):\n    for i in range(len(b) - 2):\n        if b[i] <= b[i + 1] <= b[i + 2] or b[i] >= b[i + 1] >= b[i + 2]:\n            return 0\n    return 1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n == 1:\n        print(a[0])\n    elif n == 2:\n        print(a[0], a[1])\n    elif n % 2 == 0:\n        a1 = a[:n // 2]\n        a2 = a[n // 2:]\n        b = []\n        for i in range(n // 2):\n            b.append(a2[i])\n            b.append(a1[i])\n        if check(b):\n            print(*b)\n        else:\n            print(-1)\n    else:\n        md1 = n // 2\n        md2 = n // 2 + 1\n        b1 = solve(a, md1, 0)\n        b2 = solve(a, md2, 1)\n        if check(b1):\n            print(*b1)\n        elif check(b2):\n            print(*b2)\n        else:\n            print(-1)", "from statistics import mode\na = int(input())\nfor i in range(a):\n    N = int(input())\n    A = list(map(int, input().split()))\n    x = mode(A)\n    y = A.count(x)\n    t = 0\n    if N >= 3:\n        A.sort()\n        if N % 2 == 0:\n            if y > N // 2:\n                t += 1\n            else:\n                arr = [0] * N\n                for j in range(N):\n                    if j % 2 == 0:\n                        arr[j] = A[j // 2 + N // 2]\n                    else:\n                        arr[j] = A[(j - 1) // 2]\n        elif y > N // 2 + 1:\n            t += 1\n        else:\n            arr = [0] * N\n            for j in range(N):\n                if j % 2 == 0:\n                    arr[j] = A[j // 2 + (N - 1) // 2]\n                else:\n                    arr[j] = A[(j - 1) // 2]\n        if t >= 1:\n            print(-1)\n        else:\n            for j in range(N):\n                print(arr[j], end=' ')\n            print('')\n    else:\n        for j in range(N):\n            print(A[j], end=' ')\n        print('')", "from statistics import mode\na = int(input())\nfor i in range(a):\n    N = int(input())\n    A = list(map(int, input().split()))\n    x = mode(A)\n    y = A.count(x)\n    t = 0\n    if N >= 3:\n        A.sort()\n        if N % 2 == 0:\n            if y > N // 2:\n                t += 1\n            else:\n                arr = [0] * N\n                for j in range(N):\n                    if j % 2 == 0:\n                        arr[j] = A[j // 2 + N // 2]\n                    else:\n                        arr[j] = A[(j - 1) // 2]\n        elif y > N // 2 + 1:\n            t += 1\n        else:\n            arr = [0] * N\n            for j in range(N):\n                if j % 2 == 0:\n                    arr[j] = A[j // 2 + (N - 1) // 2]\n                else:\n                    arr[j] = A[(j - 1) // 2]\n        if t >= 1:\n            print(-1)\n        else:\n            for j in range(N):\n                print(arr[j], end=' ')\n            print('')\n    else:\n        for j in range(N):\n            print(A[j], end=' ')\n        print('')", "from collections import Counter\n\ndef check(n, arr):\n    i = 0\n    while i < n:\n        cur = arr[i]\n        count = 0\n        while i < n and arr[i] == cur:\n            count += 1\n            i += 1\n        if count > 2:\n            return False\n    return True\n\ndef soln(n, arr):\n    arr.sort()\n    res = []\n    left = arr[:n // 2]\n    right = arr[n // 2:]\n    res = []\n    j = k = 0\n    for i in range(n):\n        if i & 1:\n            res.append(left[j])\n            j += 1\n        else:\n            res.append(right[k])\n            k += 1\n    if not check(n, res):\n        return [-1]\n    return res\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*soln(n, arr))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = [0] * n\n    c = [0] * n\n    for i in range(0, n, 2):\n        b[i] = a[i // 2]\n    for i in range(1, n, 2):\n        b[i] = a[(n + i) // 2]\n    for i in range(0, n, 2):\n        c[i] = a[(n + i) // 2]\n    for i in range(1, n, 2):\n        c[i] = a[i // 2]\n    ans = 0\n    final = b\n    for i in range(1, n - 1):\n        if (b[i] - b[i - 1]) * (b[i] - b[i + 1]) <= 0:\n            ans += 1\n            final = c\n            break\n    for i in range(1, n - 1):\n        if (c[i] - c[i - 1]) * (c[i] - c[i + 1]) <= 0:\n            ans += 1\n            final = b\n            break\n    if ans == 2:\n        print(-1)\n    else:\n        for i in final:\n            print(i, end=' ')\n        print()", "def solve(n, arr):\n    if n <= 2:\n        return arr\n    arr_b = arr[:]\n    arr_b.sort()\n    arr_c = arr_b[:len(arr_b) // 2]\n    arr_d = arr_b[len(arr_b) // 2:]\n    arr_e = []\n    i = 0\n    j = 0\n    while i < len(arr_c) and j < len(arr_d):\n        arr_e.append(arr_d[j])\n        arr_e.append(arr_c[i])\n        i += 1\n        j += 1\n    if n % 2 == 1:\n        arr_e.append(arr_d[-1])\n    for j in range(10):\n        for i in range(0, n - 2):\n            if arr_e[i] <= arr_e[i + 1] <= arr_e[i + 2] or arr_e[i] >= arr_e[i + 1] >= arr_e[i + 2]:\n                (arr_e[i + 1], arr_e[i + 2]) = (arr_e[i + 2], arr_e[i + 1])\n    for i in range(0, n - 2):\n        if arr_e[i] <= arr_e[i + 1] <= arr_e[i + 2] or arr_e[i] >= arr_e[i + 1] >= arr_e[i + 2]:\n            return -1\n    if arr_e == arr:\n        return -1\n    else:\n        return arr_e\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = solve(n, arr)\n    if ans == -1:\n        print(-1)\n    else:\n        print(*ans)", "def solve(n, arr):\n    if n <= 2:\n        return arr\n    arr_b = arr[:]\n    arr_b.sort()\n    arr_c = arr_b[:len(arr_b) // 2]\n    arr_d = arr_b[len(arr_b) // 2:]\n    arr_e = []\n    i = 0\n    j = 0\n    while i < len(arr_c) and j < len(arr_d):\n        arr_e.append(arr_d[j])\n        arr_e.append(arr_c[i])\n        i += 1\n        j += 1\n    if n % 2 == 1:\n        arr_e.append(arr_d[-1])\n    for j in range(10):\n        for i in range(0, n - 2):\n            if arr_e[i] <= arr_e[i + 1] <= arr_e[i + 2] or arr_e[i] >= arr_e[i + 1] >= arr_e[i + 2]:\n                (arr_e[i + 1], arr_e[i + 2]) = (arr_e[i + 2], arr_e[i + 1])\n    for i in range(0, n - 2):\n        if arr_e[i] <= arr_e[i + 1] <= arr_e[i + 2] or arr_e[i] >= arr_e[i + 1] >= arr_e[i + 2]:\n            return -1\n    if arr_e == arr:\n        return -1\n    else:\n        return arr_e\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = solve(n, arr)\n    if ans == -1:\n        print(-1)\n    else:\n        print(*ans)", "def check(ans, n):\n    inc = int(ans[0] < ans[1])\n    i = 1\n    while i < n:\n        if ans[i] == ans[i - 1]:\n            return False\n        if int(ans[i] > ans[i - 1]) == inc:\n            inc = int(ans[i] < ans[i - 1])\n        else:\n            return False\n        i += 1\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n <= 2:\n        print(*arr)\n        continue\n    arr.sort()\n    ans = []\n    i = 0\n    j = int((n + 1) / 2)\n    half = j\n    while i < half:\n        ans.append(arr[i])\n        if j < n:\n            ans.append(arr[j])\n        i += 1\n        j += 1\n    if check(ans, n):\n        print(*ans)\n        continue\n    ans = []\n    i = 0\n    j = int(n / 2)\n    while j < n:\n        ans.append(arr[j])\n        if i < n / 2:\n            ans.append(arr[i])\n        i += 1\n        j += 1\n    if check(ans, n):\n        print(*ans)\n        continue\n    print(-1)", "def check(ans, n):\n    inc = int(ans[0] < ans[1])\n    i = 1\n    while i < n:\n        if ans[i] == ans[i - 1]:\n            return False\n        if int(ans[i] > ans[i - 1]) == inc:\n            inc = int(ans[i] < ans[i - 1])\n        else:\n            return False\n        i += 1\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n <= 2:\n        print(*arr)\n        continue\n    arr.sort()\n    ans = []\n    i = 0\n    j = int((n + 1) / 2)\n    half = j\n    while i < half:\n        ans.append(arr[i])\n        if j < n:\n            ans.append(arr[j])\n        i += 1\n        j += 1\n    if check(ans, n):\n        print(*ans)\n        continue\n    ans = []\n    i = 0\n    j = int(n / 2)\n    while j < n:\n        ans.append(arr[j])\n        if i < n / 2:\n            ans.append(arr[i])\n        i += 1\n        j += 1\n    if check(ans, n):\n        print(*ans)\n        continue\n    print(-1)", "def check(ar):\n    n = len(ar)\n    for i in range(n - 2):\n        if ar[i] >= ar[i + 1] >= ar[i + 2]:\n            return 0\n        if ar[i] <= ar[i + 1] <= ar[i + 2]:\n            return 0\n    return 1\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (interesting, interesting1) = ([0] * n, [0] * n)\n    (interesting[0::2], interesting[1::2]) = (a[:(n + 1) // 2], a[(n + 1) // 2:])\n    (interesting1[0::2], interesting1[1::2]) = (a[n // 2:], a[:n // 2])\n    if check(interesting):\n        print(*interesting)\n    elif check(interesting1):\n        print(*interesting1)\n    else:\n        print(-1)", "def check(ar):\n    n = len(ar)\n    for i in range(n - 2):\n        if ar[i] >= ar[i + 1] >= ar[i + 2]:\n            return 0\n        if ar[i] <= ar[i + 1] <= ar[i + 2]:\n            return 0\n    return 1\n\ndef interesting_array(n, a):\n    a.sort()\n    (b, c) = ([0] * n, [0] * n)\n    (b[::2], b[1::2]) = (a[:(n + 1) // 2], a[(n + 1) // 2:])\n    (c[::2], c[1::2]) = (a[n // 2:], a[:n // 2])\n    if check(b):\n        print(*b)\n    elif check(c):\n        print(*c)\n    else:\n        print(-1)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    interesting_array(n, arr)", "def check(ar):\n    n = len(ar)\n    for i in range(n - 2):\n        if ar[i] >= ar[i + 1] >= ar[i + 2]:\n            return 0\n        if ar[i] <= ar[i + 1] <= ar[i + 2]:\n            return 0\n    return 1\nfor _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    (b, c) = ([0] * n, [0] * n)\n    (b[0::2], b[1::2]) = (a[:(n + 1) // 2], a[(n + 1) // 2:])\n    (c[0::2], c[1::2]) = (a[n // 2:], a[:n // 2])\n    if check(b):\n        print(*b)\n    elif check(c):\n        print(*c)\n    else:\n        print(-1)", "from sys import stdin\ninput = stdin.readline\n\ndef interesting(A):\n    for i in range(N - 2):\n        if A[i] <= A[i + 1] <= A[i + 2] or A[i] >= A[i + 1] >= A[i + 2]:\n            return False\n    return True\n\ndef construct(A1, A2):\n    B = []\n    for i in range(max(len(A1), len(A2))):\n        if i < len(A1):\n            B.append(A1[i])\n        if i < len(A2):\n            B.append(A2[i])\n    return B\n\ndef solve(N, A):\n    if N <= 2:\n        return A\n    A = sorted(A)\n    A1 = A[(N + 1) // 2:]\n    A2 = A[:(N + 1) // 2]\n    B = construct(A1, A2)\n    if interesting(B):\n        return B\n    A1 = A[N // 2:]\n    A2 = A[:N // 2]\n    B = construct(A1, A2)\n    if interesting(B):\n        return B\n    return [-1]\nT = int(input().strip())\nfor problem in range(1, T + 1):\n    N = int(input().strip())\n    A = [int(x) for x in input().strip().split()]\n    print(*solve(N, A))", "from sys import stdin\ninput = stdin.readline\n\ndef construct(N, A1, A2):\n    B = []\n    for i in range(max(len(A1), len(A2))):\n        if i < len(A1):\n            B.append(A1[i])\n        if i < len(A2):\n            B.append(A2[i])\n    for i in range(N - 2):\n        if B[i] <= B[i + 1] <= B[i + 2] or B[i] >= B[i + 1] >= B[i + 2]:\n            return [-1]\n    return B\n\ndef solve(N, A):\n    if N <= 2:\n        return A\n    A = sorted(A)\n    A1 = A[(N + 1) // 2:]\n    A2 = A[:(N + 1) // 2]\n    B = construct(N, A1, A2)\n    if len(B) == N:\n        return B\n    A1 = A[N // 2:]\n    A2 = A[:N // 2]\n    B = construct(N, A1, A2)\n    return B\nT = int(input().strip())\nfor problem in range(1, T + 1):\n    N = int(input().strip())\n    A = [int(x) for x in input().strip().split()]\n    print(*solve(N, A))", "from sys import stdin\ninput = stdin.readline\n\ndef construct(N, A1, A2):\n    B = []\n    for i in range(max(len(A1), len(A2))):\n        if i < len(A1):\n            B.append(A1[i])\n        if i < len(A2):\n            B.append(A2[i])\n    for i in range(N - 2):\n        if not (max(B[i], B[i + 2]) < B[i + 1] or min(B[i], B[i + 2]) > B[i + 1]):\n            return [-1]\n    return B\n\ndef solve(N, A):\n    if N <= 2:\n        return A\n    A = sorted(A)\n    A1 = A[(N + 1) // 2:]\n    A2 = A[:(N + 1) // 2]\n    B = construct(N, A1, A2)\n    if len(B) == N:\n        return B\n    A1 = A[N // 2:]\n    A2 = A[:N // 2]\n    B = construct(N, A1, A2)\n    return B\nT = int(input().strip())\nfor problem in range(1, T + 1):\n    N = int(input().strip())\n    A = [int(x) for x in input().strip().split()]\n    print(*solve(N, A))", "from sys import stdin\ninput = stdin.readline\n\ndef construct(N, A1, A2):\n    B = []\n    for i in range(max(len(A1), len(A2))):\n        if i < len(A1):\n            B.append(A1[i])\n        if i < len(A2):\n            B.append(A2[i])\n    for i in range(N - 2):\n        if not (max(B[i], B[i + 2]) < B[i + 1] or min(B[i], B[i + 2]) > B[i + 1]):\n            return [-1]\n    return B\n\ndef solve(N, A):\n    if N <= 2:\n        return A\n    A = sorted(A)\n    A1 = A[:(N + 1) // 2]\n    A2 = A[(N + 1) // 2:]\n    B = construct(N, A1, A2)\n    if len(B) == N:\n        return B\n    A1 = A[N // 2:]\n    A2 = A[:N // 2]\n    B = construct(N, A1, A2)\n    return B\nT = int(input().strip())\nfor problem in range(1, T + 1):\n    N = int(input().strip())\n    A = [int(x) for x in input().strip().split()]\n    print(*solve(N, A))", "def N():\n    return int(input())\n\ndef A():\n    return [int(x) for x in input().split()]\n\ndef S():\n    return input()\n\ndef decimalToBinary(n):\n    return bin(n).replace('0b', '')\n\ndef factors(n: int) -> list:\n    s = set()\n    step = 2 if n % 2 else 1\n    for i in range(1, n ** 0.5 + 1, step):\n        if n % i == 0:\n            s.add(i)\n            s.add(n // i)\n    return factors\n\ndef c(aa):\n    f = False\n    for i in range(1, n - 1):\n        if aa[i - 1] < aa[i] and aa[i] > aa[i + 1] or (aa[i - 1] > aa[i] and aa[i] < aa[i + 1]):\n            continue\n        f = True\n    return f\n\ndef sorts(nums):\n    sortedList = sorted(nums)\n    n = len(nums)\n    if n % 2 == 1:\n        small = sortedList[:1 + n // 2][::-1]\n        large = sortedList[1 + n // 2:][::-1]\n        for i in range(1, n, 2):\n            nums[i] = large[i // 2]\n        for i in range(0, n, 2):\n            nums[i] = small[i // 2]\n    else:\n        small = sortedList[:n // 2][::-1]\n        large = sortedList[n // 2:][::-1]\n        for i in range(1, n, 2):\n            nums[i] = large[i // 2]\n        for i in range(0, n, 2):\n            nums[i] = small[i // 2]\nfor _ in range(N()):\n    n = N()\n    if 'codechef' == 28226329:\n        print('Tanmay')\n    a = A()\n    sorts(a)\n    if c(a):\n        print(-1)\n        continue\n    for i in a:\n        print(i, end=' ')\n    print()", "def solve(n, arr):\n    if n <= 2:\n        return arr\n    arr_b = arr[:]\n    arr_b.sort()\n    arr_c = arr_b[:len(arr_b) // 2]\n    arr_d = arr_b[len(arr_b) // 2:]\n    arr_e = []\n    i = 0\n    j = 0\n    while i < len(arr_c) and j < len(arr_d):\n        arr_e.append(arr_d[j])\n        arr_e.append(arr_c[i])\n        i += 1\n        j += 1\n    if n % 2 == 1:\n        arr_e.append(arr_d[-1])\n    for j in range(10):\n        for i in range(0, n - 2):\n            if arr_e[i] <= arr_e[i + 1] <= arr_e[i + 2] or arr_e[i] >= arr_e[i + 1] >= arr_e[i + 2]:\n                (arr_e[i + 1], arr_e[i + 2]) = (arr_e[i + 2], arr_e[i + 1])\n    for i in range(0, n - 2):\n        if arr_e[i] <= arr_e[i + 1] <= arr_e[i + 2] or arr_e[i] >= arr_e[i + 1] >= arr_e[i + 2]:\n            return -1\n    if arr_e == arr:\n        return -1\n    else:\n        return arr_e\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = solve(n, arr)\n    if ans == -1:\n        print(-1)\n    else:\n        print(*ans)", "def maximum_subarray_with_same_value(arr):\n    n = len(arr)\n    max_len = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n and arr[j] == arr[i]:\n            j += 1\n        max_len = max(max_len, j - i)\n        i = j\n    return max_len\nt = int(input())\nfor _ in range(t):\n    (n,) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = maximum_subarray_with_same_value(a)\n    if m > n // 2:\n        print(-1)\n        continue\n    ans = []\n    (i, j) = (0, n // 2)\n    while i < n // 2:\n        ans.append(a[j])\n        ans.append(a[i])\n        i += 1\n        j += 1\n    if n % 2 != 0:\n        ans.append(a[j])\n    print(*ans)", "def fun(l):\n    x = len(l) // 2\n    pos = len(l) // 2\n    while x > 0:\n        l.insert(pos, l.pop(0))\n        x -= 1\n        pos += 1\n    for i in range(n - 2):\n        if l[i] >= l[i + 1] and l[i + 1] >= l[i + 2] or (l[i] <= l[i + 1] and l[i + 1] <= l[i + 2]):\n            return True\n    return False\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    if fun(l) == 0:\n        for x in l:\n            print(x, end=' ')\n        print()\n    else:\n        print(-1)", "def fun(l):\n    x = len(l) // 2\n    pos = len(l) // 2\n    while x > 0:\n        l.insert(pos, l.pop(0))\n        x -= 1\n        pos += 1\n    for i in range(n - 2):\n        if l[i] >= l[i + 1] and l[i + 1] >= l[i + 2] or (l[i] <= l[i + 1] and l[i + 1] <= l[i + 2]):\n            return True\n    return False\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    if fun(l) == 0:\n        for x in l:\n            print(x, end=' ')\n        print()\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr2 = arr.copy()\n    arr.sort(reverse=True)\n    mid = n // 2\n    (arr[1::2], arr[0::2]) = (arr[:mid], arr[mid:])\n    flag = False\n    for i in range(n - 2):\n        if arr[i] == arr[i + 1] or arr[i + 1] == arr[i + 2]:\n            flag = True\n            break\n    if flag:\n        print(-1)\n    else:\n        print(*arr)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if L[i] in d:\n            d[L[i]] += 1\n        else:\n            d[L[i]] = 1\n    M = []\n    for i in d:\n        M.append((i, d[i]))\n    M.sort()\n    if n == 1 or n == 2:\n        print(*L)\n        continue\n    if len(M) == 1:\n        print(-1)\n        continue\n    A = []\n    (x, y) = M[0]\n    i = 0\n    f = True\n    A.append(x)\n    y -= 1\n    for j in range(1, len(M)):\n        (a, b) = M[j]\n        for k in range(b):\n            A.append(a)\n            if y > 0:\n                A.append(x)\n                y -= 1\n            elif A[i] < A[-1]:\n                A.append(A[i])\n                i += 1\n            else:\n                A.pop()\n                x = a\n                y = b - k\n                break\n    B = []\n    if y == 1 and A[-1] != x:\n        A.append(x)\n        y -= 1\n    if y > 0:\n        print(-1)\n        continue\n    if not f:\n        print(-1)\n        continue\n    for j in range(i, len(A)):\n        B.append(A[j])\n    print(*B)", "def interesting(a):\n    n = len(a)\n    return n < 3 or all((a[i] < min(a[i - 1], a[i + 1]) or a[i] > max(a[i - 1], a[i + 1]) for i in range(1, n - 1)))\nfor tcase in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    (b, c) = ([], [])\n    h = n // 2\n    d = h + n % 2\n    for i in range(h):\n        b.append(a[i])\n        b.append(a[i + d])\n        c.append(a[i + h])\n        c.append(a[i])\n    if n % 2 == 1:\n        b.append(a[h])\n        c.append(a[-1])\n    if interesting(b):\n        print(' '.join(map(str, b)))\n    elif interesting(c):\n        print(' '.join(map(str, c)))\n    else:\n        print(-1)", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    ans1 = [0] * n\n    a.sort()\n    i = 0\n    j = n - 1\n    for r in range(1, n, 2):\n        ans[r] = a[i]\n        ans1[r] = a[j]\n        j -= 1\n        i += 1\n    for r in range(0, n, 2):\n        ans[r] = a[i]\n        ans1[r] = a[j]\n        j -= 1\n        i += 1\n    p = 0\n    q = 0\n    for r in range(0, n - 2):\n        k = sorted(ans[r:r + 3])\n        if ans[r:r + 3] == k or ans[r:r + 3] == k[::-1]:\n            p = 1\n            break\n    for r in range(0, n - 2):\n        k = sorted(ans1[r:r + 3])\n        if ans1[r:r + 3] == k or ans1[r:r + 3] == k[::-1]:\n            q = 1\n            break\n    if p == 0:\n        print(' '.join(map(str, ans)))\n    elif q == 0:\n        print(' '.join(map(str, ans1)))\n    else:\n        print(-1)", "from collections import Counter\na = int(input())\nfor _ in range(a):\n    c = int(input())\n    b = list(map(int, input().split()))\n    e = Counter(b)\n    z = True\n    f = False\n    q = -100\n    s = len(b)\n    for i in e:\n        if s % 2 == 0 and e[i] > len(b) // 2:\n            z = False\n            print(-1)\n            break\n        if s % 2 == 1 and e[i] == len(b) // 2 + 1 and (i == min(b) or i == max(b)):\n            f = True\n            q = i\n            break\n        if s % 2 == 1 and e[i] > len(b) // 2:\n            z = False\n            print(-1)\n            break\n    if z:\n        b.sort()\n        if f:\n            if q == max(b):\n                z = b[0:len(b) // 2]\n                x = b[len(b) // 2:len(b)]\n                for i in range(len(x) - 1):\n                    print(x[i], end=' ')\n                    print(z[i], end=' ')\n                print(x[-1])\n            else:\n                z = b[0:len(b) // 2 + 1]\n                x = b[len(b) // 2 + 1:len(b)]\n                for i in range(len(z) - 1):\n                    print(z[i], end=' ')\n                    print(x[i], end=' ')\n                print(z[-1])\n        elif len(b) % 2 == 0:\n            z = b[0:len(b) // 2]\n            x = b[len(b) // 2:len(b)]\n            for i in range(len(x)):\n                print(x[i], end=' ')\n                print(z[i], end=' ')\n            print()\n        else:\n            z = b[0:len(b) // 2 + 1]\n            x = b[len(b) // 2 + 1:len(b)]\n            for i in range(len(z) - 1):\n                print(z[i], end=' ')\n                print(x[i], end=' ')\n            print(z[-1])", "t = int(input())\nfor t0 in range(t):\n    n = int(input())\n    a_i = list(map(int, input().split()))\n    max_valid_count = int(n / 2) + 1\n    num_count = {}\n    for num in a_i:\n        if not num_count.__contains__(num):\n            num_count[num] = 0\n        num_count[num] += 1\n    max_occurred_item = max(num_count.items(), key=lambda item: item[1])\n    if max_occurred_item[1] > max_valid_count:\n        print(-1)\n        continue\n    a_i = sorted(a_i)\n    middle_i = int(n / 2)\n    list1 = a_i[:middle_i]\n    list2 = a_i[middle_i:]\n    result = []\n    for i in range(len(list1)):\n        result.append(list2[i])\n        result.append(list1[i])\n    if len(list1) != len(list2):\n        result.append(list2[-1])\n    print(' '.join([str(item) for item in result]))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if n == 1:\n        print(a[0])\n    elif n == 2:\n        print(a[0], a[1])\n    else:\n        new = [-1] * n\n        ind = 1\n        while ind < n:\n            new[ind] = a.pop()\n            ind += 2\n        ind = 0\n        while ind < n:\n            new[ind] = a.pop()\n            ind += 2\n        flag = 0\n        for i in range(n - 2):\n            if new[i] <= new[i + 1] and new[i + 1] <= new[i + 2]:\n                flag = 1\n                break\n            if new[i] >= new[i + 1] and new[i + 1] >= new[i + 2]:\n                flag = 1\n                break\n        if flag == 1:\n            print(-1)\n        else:\n            print(*new)", "from collections import Counter\nimport math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = Counter(l)\n    flag = 1\n    ans = []\n    l.sort()\n    if len(l) < 3:\n        print(*l)\n    else:\n        for i in p:\n            if p[i] > math.ceil(n / 2):\n                print(-1)\n                flag = 0\n                break\n        if flag == 1:\n            if n % 2 == 0:\n                for i in range(n // 2):\n                    ans.append(l[n // 2 + i])\n                    ans.append(l[i])\n                print(*ans)\n            else:\n                for i in range(n // 2):\n                    ans.append(l[i])\n                    ans.append(l[n // 2 + i + 1])\n                if ans[0] == l[n // 2]:\n                    ans.append(l[n // 2])\n                    print(*ans)\n                else:\n                    r = [l[n // 2]]\n                    for i in ans:\n                        r.append(i)\n                    print(*r)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = []\n    for i in range(0, n // 2):\n        b += [a[n // 2 + i]]\n        b += [a[i]]\n    if n % 2 != 0:\n        b += [a[-1]]\n    f = 0\n    for i in range(0, len(b) - 1):\n        if b[i] == b[i + 1]:\n            print(-1)\n            f = 1\n            break\n    if f == 0:\n        for i in range(len(b)):\n            print(b[i], end=' ')\n        print()", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor i in range(t):\n    n = inp()\n    l = li()\n    l1 = []\n    l2 = []\n    l.sort(reverse=True)\n    for i in range(0, n // 2):\n        l1.append(l[i])\n    l1.reverse()\n    for i in range(n // 2, n):\n        l2.append(l[i])\n    l2.reverse()\n    l.clear()\n    for i in range(n):\n        if i % 2 == 0:\n            l.append(l2.pop())\n        else:\n            l.append(l1.pop())\n    if n <= 2:\n        print(*l)\n    else:\n        f = 0\n        for i in range(1, n - 1):\n            if l[i - 1] <= l[i] and l[i] <= l[i + 1] or (l[i - 1] >= l[i] and l[i] >= l[i + 1]):\n                f = 1\n                break\n        if f == 1:\n            print(-1)\n        else:\n            print(*l)", "def impossible(arr):\n    for i in range(len(arr) - 2):\n        if len(set(arr[i:i + 3])) == 1:\n            return True\n    return False\nfor i in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    a.sort()\n    a1 = a[:len(a) // 2]\n    a2 = a[len(a) // 2:]\n    sol = []\n    for i in range(len(a2)):\n        sol.append(a2[i])\n        if len(a1) > i:\n            sol.append(a1[i])\n    if impossible(sol):\n        print(-1)\n    else:\n        print(' '.join(list(map(str, sol))))", "def impossible(arr):\n    for i in range(len(arr) - 2):\n        if len(set(arr[i:i + 3])) == 1:\n            return True\n    return False\nfor i in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    a.sort()\n    a1 = a[:len(a) // 2]\n    a2 = a[len(a) // 2:]\n    sol = []\n    for i in range(len(a2)):\n        sol.append(a2[i])\n        if len(a1) > i:\n            sol.append(a1[i])\n    if impossible(sol):\n        print(-1)\n    else:\n        print(' '.join(list(map(str, sol))))", "from copy import copy\nfrom collections import deque\n\ndef check(arr):\n    n = len(arr)\n    for i in range(n - 2):\n        if arr[i] <= arr[i + 1] <= arr[i + 2] or arr[i] >= arr[i + 1] >= arr[i + 2]:\n            return False\n    else:\n        return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (a1, a2) = (a[:(n + 1) // 2], a[(n + 1) // 2:])\n    if n <= 2:\n        print(*a)\n        continue\n    b = []\n    for i in range(n // 2):\n        b.append(a1[i])\n        b.append(a2[i])\n    if len(a1) > len(a2):\n        b.append(a1[-1])\n    c = []\n    for i in range(n // 2):\n        c.append(a2[i])\n        c.append(a1[i])\n    if len(a1) > len(a2):\n        c.append(a1[-1])\n    if check(b):\n        print(*b)\n    elif check(c):\n        print(*c)\n    else:\n        print(-1)"]