["from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = Counter([int(x) for x in input().strip().split()])\n    a = [(x, y) for (x, y) in a.items()]\n    a.sort(key=lambda x: x[0], reverse=True)\n    (ans, i) = (0, 0)\n    while ans < n / 2 and i < len(a):\n        ans += a[i][1]\n        i += 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    i = n // 2\n    while i > 0 and l[i] == l[i - 1]:\n        i -= 1\n    print(n - i)", "def find_boasting_students(n, scores):\n    count = 0\n    for i in range(n):\n        num_greater = 0\n        num_less_equal = 0\n        for j in range(n):\n            if scores[j] > scores[i]:\n                num_greater += 1\n            elif scores[j] <= scores[i]:\n                num_less_equal += 1\n        if num_less_equal > num_greater:\n            count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    scores = list(map(int, input().split()))\n    count = find_boasting_students(n, scores)\n    print(count)", "def find_boasting_students(n, scores):\n    count = 0\n    for i in range(n):\n        num_greater = 0\n        num_less_equal = 0\n        for j in range(n):\n            if scores[j] > scores[i]:\n                num_greater += 1\n            elif scores[j] <= scores[i]:\n                num_less_equal += 1\n        if num_less_equal > num_greater:\n            count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    scores = list(map(int, input().split()))\n    count = find_boasting_students(n, scores)\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        cless = 0\n        cmore = 0\n        for j in range(n):\n            if l[i] >= l[j]:\n                cless += 1\n            else:\n                cmore += 1\n        if cmore < cless:\n            ans += 1\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    i = n // 2\n    while i > 0 and l[i] == l[i - 1]:\n        i -= 1\n    print(n - i)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "import statistics\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    med = statistics.median(arr)\n    count = 0\n    for i in arr:\n        if i >= med:\n            count += 1\n    print(count)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    boast = 0\n    for i in range(len(A)):\n        (a, b) = (0, 0)\n        for j in range(len(A)):\n            if A[i] >= A[j]:\n                a = a + 1\n            else:\n                b = b + 1\n        if a > b:\n            boast = boast + 1\n    print(boast)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    temp = a[int(n / 2):]\n    set_a = set(temp)\n    ans = 0\n    for each in set_a:\n        ans += a.count(each)\n    print(ans)", "def max_num(i, kk2):\n    kk2 = kk2[::-1]\n    p = 0\n    for k in range(len(kk2)):\n        if kk2[k] == i:\n            p = len(kk2) - k\n            break\n    kk2 = kk2[::-1]\n    return p\ni = int(input())\nlistk = []\nfor _ in range(i):\n    p = int(input())\n    kk = input().split()\n    kk2 = []\n    for ele in kk:\n        kk2.append(int(ele))\n    kk2.sort()\n    sta = 0\n    for ele in kk2:\n        if max_num(ele, kk2) > len(kk2) - max_num(ele, kk2):\n            sta = sta + 1\n    listk.append(sta)\nfor ele in listk:\n    print(ele)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for j in l:\n        s = 0\n        k = 0\n        for z in l:\n            if z <= j:\n                s += 1\n            elif z > j:\n                k += 1\n        if s > k:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    for i in range(n):\n        less = i\n        large = n - 1 - i\n        same = a[i + 1:n].count(a[i])\n        if i + same >= large - same:\n            count += 1\n    print(count)", "t = int(input())\nlc = []\nfor _ in range(0, t):\n    N = int(input())\n    score_students = list(map(int, input().split(' ')))\n    lc.append(score_students)\nfor i in lc:\n    ofr = 0\n    for j in i:\n        l = 0\n        m = 0\n        for k in i:\n            if k <= j:\n                l += 1\n            else:\n                m += 1\n        if l > m:\n            ofr += 1\n    print(ofr)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    count = 0\n    if n % 2 != 0:\n        mid = arr[n // 2]\n        count += n // 2 + 1\n        c1 = arr[0:n // 2].count(mid)\n        count += c1\n    else:\n        mid = arr[n // 2]\n        mid_1 = arr[n // 2 - 1]\n        if mid == mid_1:\n            count += n // 2\n            c1 = arr[0:n // 2].count(mid)\n            count += c1\n        else:\n            count += n // 2\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    i = 0\n    while i < n:\n        if i != n - 1 and arr[i] == arr[i + 1]:\n            i += 1\n            continue\n        if i >= n - i - 1:\n            break\n        i += 1\n    print(arr.count(arr[i]) + n - i - 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "from collections import Counter\n\nclass Solver:\n\n    def solve(self, array, length):\n        counter = Counter(array)\n        keys = sorted(counter)\n        prevt = 0\n        nextt = sum(counter.values())\n        ans = 0\n        for key in keys:\n            prevt += counter[key]\n            nextt -= counter[key]\n            if prevt > nextt:\n                ans += counter[key]\n        return ans\n\nclass Driver:\n\n    def __init__(self):\n        self._solver = Solver()\n\n    def drive(self):\n        test_cases = int(input().strip())\n        for _ in range(test_cases):\n            length = int(input().strip())\n            array = list(map(int, input().strip().split(' ')))\n            ans = self._solver.solve(array, length)\n            print(ans)\nDriver().drive()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split(' ')))\n    list1.sort()\n    m = int(n / 2)\n    list2 = []\n    for i in list1[m:]:\n        if i not in list2:\n            list2.append(i)\n    count = 0\n    for i in list2:\n        if i in list1:\n            count += list1.count(i)\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = 0\n    for i in range(n):\n        (s, b) = (0, 0)\n        for j in range(n):\n            if arr[j] <= arr[i]:\n                s += 1\n            elif arr[j] > arr[i]:\n                b += 1\n        if s > b:\n            cnt += 1\n    print(cnt)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        l = 0\n        m = 0\n        for j in range(n):\n            if lst[j] <= lst[i]:\n                l += 1\n            elif lst[j] > lst[i]:\n                m += 1\n        if l > m:\n            count += 1\n    print(count)", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    l = list(map(int, input().split()))\n    cnt = 0\n    for i in range(k):\n        a = 0\n        b = 0\n        for j in range(k):\n            if l[i] >= l[j]:\n                a += 1\n            else:\n                b += 1\n        if a > b:\n            cnt += 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    score = sorted(list(map(int, input().split())))\n    count = 0\n    for i in range(n):\n        lessNum = i\n        sameNum = score[i + 1:n].count(score[i])\n        largeNum = n - 1 - i\n        if lessNum + sameNum >= largeNum - sameNum:\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    total = 0\n    for i in range(N):\n        mini = 0\n        maxi = 0\n        for j in A:\n            if j <= A[i]:\n                mini += 1\n            else:\n                maxi += 1\n        if mini > maxi:\n            total += 1\n    print(total)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        c1 = 0\n        c2 = 0\n        for j in range(n):\n            if l[i] >= l[j]:\n                c2 += 1\n            else:\n                c1 += 1\n        if c2 > c1:\n            ans += 1\n    print(ans)", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    l = list(map(int, input().split()))\n    cnt = 0\n    for i in range(k):\n        a = 0\n        b = 0\n        for j in range(k):\n            if l[i] >= l[j]:\n                a += 1\n            else:\n                b += 1\n        if a > b:\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 == 0:\n        print(n // 2 + count)\n    else:\n        print(n // 2 + 1 + count)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(len(arr)):\n        arr[i] = int(arr[i])\n    arr = sorted(arr)\n    print(N - arr.index(arr[N // 2]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    (lt, g, c) = (0, 0, 0)\n    for i in range(n):\n        (lt, g) = (0, 0)\n        for j in range(n):\n            if i == j:\n                continue\n            if s[j] <= s[i]:\n                lt += 1\n            else:\n                g += 1\n        if lt >= g:\n            c += 1\n    print(c)", "def average_flex(list, n):\n    boast = 0\n    for i in range(0, n):\n        (flex, nflex) = (0, 0)\n        for j in range(0, n):\n            if list[i] >= list[j]:\n                flex = flex + 1\n            else:\n                nflex = nflex + 1\n        if flex > nflex:\n            boast = boast + 1\n    return boast\nlist1 = []\nnlist = []\nT = int(input())\nfor i in range(0, T):\n    nlist.append(int(input()))\n    list1.append(list(map(int, input().split())))\nfor i in range(0, T):\n    print(average_flex(list1[i], nlist[i]))", "for _ in range(int(input())):\n    (n, m) = (int(input()), sorted(list(map(int, input().split(' ')))))\n    b = 0\n    for i in range(n):\n        lits = gits = 0\n        for j in range(n):\n            if m[j] <= m[i]:\n                lits += 1\n            else:\n                gits += 1\n        if lits > gits:\n            b += 1\n    print(b)", "for _ in range(int(input())):\n    (n, m) = (int(input()), sorted(list(map(int, input().split(' ')))))\n    b = 0\n    for i in range(n):\n        lts = gts = 0\n        for j in range(n):\n            if m[j] <= m[i]:\n                lts += 1\n            else:\n                gts += 1\n        if lts > gts:\n            b += 1\n    print(b)", "for _ in range(int(input())):\n    (n, m) = (int(input()), sorted(list(map(int, input().split(' ')))))\n    b = 0\n    for i in range(n):\n        lts = gts = 0\n        for j in range(n):\n            if m[j] <= m[i]:\n                lts += 1\n            else:\n                gts += 1\n        if lts > gts:\n            b += 1\n    print(b)", "for _ in range(int(input())):\n    (n, m) = (int(input()), sorted(list(map(int, input().split(' ')))))\n    b = 0\n    for i in range(n):\n        lts = gts = 0\n        for j in range(n):\n            if m[j] <= m[i]:\n                lts += 1\n            else:\n                gts += 1\n        if lts > gts:\n            b += 1\n    print(b)", "for _ in range(int(input())):\n    (n, m) = (int(input()), sorted(list(map(int, input().split(' ')))))\n    b = 0\n    for i in range(n):\n        lts = gts = 0\n        for j in range(n):\n            if m[j] <= m[i]:\n                lts += 1\n            else:\n                gts += 1\n        if lts > gts:\n            b += 1\n    print(b)", "for _ in range(int(input())):\n    (n, m) = (int(input()), sorted(list(map(int, input().split(' ')))))\n    b = 0\n    for i in range(n):\n        lts = gts = 0\n        for j in range(n):\n            if m[j] <= m[i]:\n                lts += 1\n            elif m[j] > m[i]:\n                gts += 1\n        if lts > gts:\n            b += 1\n    print(b)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        l = 0\n        m = 0\n        for j in range(n):\n            if lst[j] <= lst[i]:\n                l += 1\n            elif lst[j] > lst[i]:\n                m += 1\n        if l > m:\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    N = int(input())\n    lst = list(map(int, input().split(' ')))\n    f = 0\n    for i in range(len(lst)):\n        g = 0\n        l = 0\n        for j in range(len(lst)):\n            if lst[j] > lst[i]:\n                g += 1\n            else:\n                l += 1\n        if l > g:\n            f += 1\n    print(f)", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    lo = 0\n    hi = n\n    mid = (lo + hi) // 2\n    c = 0\n    if l[mid] == l[mid - 1]:\n        c += l[:mid].count(l[mid])\n    if n % 2 != 0:\n        c += 1\n    print(mid + c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    for i in range(0, len(a)):\n        lc = 0\n        gc = 0\n        for j in range(0, len(a)):\n            if i != j:\n                if a[j] <= a[i]:\n                    lc += 1\n                else:\n                    gc += 1\n        if lc >= gc:\n            cnt += 1\n    print(cnt)", "def isBoast(students, index):\n    score = students[index]\n    cntLess = 0\n    cntMore = 0\n    for i in range(0, len(students)):\n        if score >= students[i]:\n            cntLess = cntLess + 1\n        else:\n            cntMore = cntMore + 1\n    return cntLess > cntMore\n\ndef main(students):\n    cnt = 0\n    for i in range(0, len(students)):\n        if isBoast(students, i):\n            cnt = cnt + 1\n    return cnt\ntry:\n    n = int(input())\n    for i in range(0, n):\n        N = int(input())\n        students = list(map(int, input().split()))\n        print(main(students))\nexcept EOFError as e:\n    print()", "for x in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    if l[n // 2] == l[n // 2 - 1]:\n        c = l[:n // 2].count(l[n // 2])\n    if n % 2 != 0:\n        c += 1\n    print(n // 2 + c)", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    A = sorted(A)\n    A_d = {}\n    for mark in A:\n        if mark in A_d:\n            A_d[mark] += 1\n        else:\n            A_d[mark] = 1\n    count = 0\n    sum = 0\n    for key in A_d:\n        sum += A_d[key]\n        if N - sum < sum:\n            count += A_d[key]\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ar.sort()\n    k = n // 2 - 1\n    d = k + 1\n    ans = n // 2 if n % 2 == 0 else n // 2 + 1\n    for i in range(k, -1, -1):\n        if ar[i] == ar[d]:\n            ans += 1\n        else:\n            break\n    print(ans)", "for _ in range(int(input())):\n    nun = int(input())\n    wr = list(map(int, input().split()))\n    wr.sort()\n    medium = wr[len(wr) // 2]\n    children = 0\n    boast = 0\n    for i in range(len(wr)):\n        if wr[i] >= medium:\n            boast += 1\n    print(boast)", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    w.sort()\n    mid = w[len(w) // 2]\n    student = 0\n    boast = 0\n    for i in range(len(w)):\n        if w[i] >= mid:\n            boast += 1\n    print(boast)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        (l, g) = (0, 0)\n        for j in range(n):\n            if a[j] <= a[i]:\n                l += 1\n            else:\n                g += 1\n        if l > g:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "t_case = int(input())\nfor y in range(t_case):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    (m, M, c) = (0, 0, 0)\n    for i in range(a):\n        (m, M) = (0, 0)\n        for j in range(a):\n            if b[j] <= b[i]:\n                m += 1\n            if b[j] > b[i]:\n                M += 1\n        if m > M:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    w.sort()\n    mid = w[len(w) // 2]\n    student = 0\n    boast = 0\n    for i in range(len(w)):\n        if w[i] >= mid:\n            boast += 1\n    print(boast)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        (s, g) = (0, 0)\n        for j in range(n):\n            if l[j] <= l[i]:\n                s += 1\n            elif l[j] > l[i]:\n                g += 1\n        if s > g:\n            c += 1\n    print(c)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    C = 0\n    for i in range(0, len(list1)):\n        c1 = 0\n        c3 = 0\n        for j in range(0, len(list1)):\n            if i != j:\n                if list1[j] <= list1[i]:\n                    c1 = c1 + 1\n                elif list1[j] > list1[i]:\n                    c3 = c3 + 1\n        if c1 >= c3:\n            C = C + 1\n    print(C)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    t = []\n    for i in range(n):\n        l1 = []\n        h = []\n        c = l[i]\n        for j in range(n):\n            if i != j:\n                if l[j] > c:\n                    h.append(l[j])\n                elif l[j] <= c:\n                    l1.append(l[j])\n        l1.append(c)\n        if len(l1) > len(h):\n            t.append(l[i])\n    print(len(t))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "t = int(input())\nlc = []\nfor mml in range(0, t):\n    l = int(input())\n    jk = str(input())\n    tp = []\n    for kkc in jk.split(' '):\n        tp.append(int(kkc))\n    lc.append(tp)\nfor bb in lc:\n    ofr = 0\n    for iir in range(0, len(bb)):\n        l = 0\n        m = 0\n        for kke in range(0, len(bb)):\n            if bb[kke] <= bb[iir]:\n                l += 1\n            else:\n                m += 1\n        if l > m:\n            ofr += 1\n    print(ofr)", "def flex(a, n):\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flex(a, n)", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    m = N // 2\n    M = A[m]\n    for i in range(m - 1, -1, -1):\n        if A[i] == M:\n            m = i\n        else:\n            break\n    print(N - m)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    (b, c, d) = (0, 0, 0)\n    while c < n:\n        (x, y) = (0, 0)\n        d = 0\n        while d < n:\n            if a[d] <= a[c]:\n                x += 1\n            else:\n                y += 1\n            d += 1\n        if x > y:\n            b += 1\n        c += 1\n    t -= 1\n    print(b)", "for i in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().strip().split(' ')))\n    lis.sort()\n    r = (n + 1) // 2\n    s = r\n    if n % 2 != 0:\n        s = r - 1\n    for j in range(1, n // 2 + 1):\n        if lis[s - j] == lis[s]:\n            r += 1\n        else:\n            break\n    print(r)", "for _ in range(int(input())):\n    i = int(input())\n    j = list(map(int, input().split()))\n    j.sort()\n    if i % 2 == 0:\n        mid = (j[i // 2 - 1] + j[i // 2]) / 2\n    else:\n        mid = j[i // 2]\n    ans = 0\n    for val in j:\n        if val >= mid:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    w.sort()\n    mid = w[len(w) // 2]\n    student = 0\n    boast = 0\n    for i in range(len(w)):\n        if w[i] >= mid:\n            boast += 1\n    print(boast)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "t = input()\nfor c in range(0, int(t)):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    x = []\n    c = 0\n    for i in range(n // 2, n):\n        if a[i] not in x:\n            c += a.count(a[i])\n            x.append(a[i])\n    print(c)", "def flex(a, n):\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flex(a, n)", "for _ in range(int(input())):\n    N = int(input())\n    A = sorted(list(map(int, input().split())))\n    z = 0\n    ans = 0\n    i = 0\n    while i < N:\n        j = 1\n        z += 1\n        while i != N - 1 and A[i] == A[i + 1]:\n            z += 1\n            j += 1\n            i += 1\n        if z > N - z:\n            ans += j\n        i += 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    count = 0\n    if lst[n // 2] == lst[n // 2 - 1]:\n        count = lst[:n // 2].count(lst[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    count = 0\n    if lst[n // 2] == lst[n // 2 - 1]:\n        count = lst[:n // 2].count(lst[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    count = 0\n    for i in range(n):\n        j = 0\n        c1 = 0\n        c2 = 0\n        while j < n:\n            if j == i:\n                j += 1\n                continue\n            if a[j] <= a[i]:\n                c1 += 1\n            else:\n                c2 += 1\n            j += 1\n        if c1 >= c2:\n            count += 1\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    count = 0\n    if lst[n // 2] == lst[n // 2 - 1]:\n        count = lst[:n // 2].count(lst[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    l = n // 2\n    c = 0\n    if a[l] == a[l - 1]:\n        c = a[0:l].count(a[l])\n    ans = n // 2 + c\n    if n % 2 == 0:\n        print(ans)\n    else:\n        print(ans + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    if n % 2 == 0:\n        d = int(n / 2)\n    else:\n        d = int((n - 1) / 2)\n    e = l[d]\n    j = l.index(e)\n    print(n - j)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    if n % 2 == 0:\n        d = int(n / 2)\n    else:\n        d = int((n - 1) / 2)\n    e = l[d]\n    j = l.index(e)\n    print(n - j)", "n = int(input())\nfor i in range(n):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    a = l[n1 // 2]\n    for i in l:\n        if i >= a:\n            c += 1\n    print(c)", "n = int(input())\nfor i in range(n):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    a = l[n1 // 2]\n    for i in l:\n        if i >= a:\n            c += 1\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    for j in range(n):\n        max = j\n        min = j\n        while min < n - 1:\n            if l[min] != l[min + 1]:\n                break\n            else:\n                max += 1\n            min += 1\n        max += 1\n        if max > n - max:\n            c += 1\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    k.sort()\n    c = 0\n    for j in range(n):\n        cc = j\n        j1 = j\n        while j1 < n - 1:\n            if k[j1] != k[j1 + 1]:\n                break\n            else:\n                cc += 1\n            j1 += 1\n        cc += 1\n        if cc > n - cc:\n            c += 1\n    print(c)", "n = int(input())\nfor i in range(n):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    a = l[n1 // 2]\n    for i in l:\n        if i >= a:\n            c += 1\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    k.sort()\n    c = 0\n    for j in range(n):\n        cc = j\n        j1 = j\n        while j1 < n - 1:\n            if k[j1] != k[j1 + 1]:\n                break\n            else:\n                cc += 1\n            j1 += 1\n        cc += 1\n        if cc > n - cc:\n            c += 1\n    print(c)", "def flex(a, n):\n    a.sort()\n    count = 0\n    if a[n // 2] == a[n // 2 - 1]:\n        count = a[:n // 2].count(a[n // 2])\n    if n % 2 != 0:\n        count += 1\n    print(n // 2 + count)\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flex(a, n)", "for _ in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))\n    lst = []\n    for i in a:\n        high = 0\n        low = 0\n        for j in a:\n            if i >= j:\n                low += 1\n            else:\n                high += 1\n        if low > high:\n            lst.append(i)\n    print(len(lst))"]