["def soln(A):\n    freq = {}\n    for i in A:\n        if i in freq.keys():\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    A = [*freq.keys()]\n    A.sort()\n    max_count = sum((freq[x] for x in freq if freq[x] > 1))\n    for x in range(1, A[-1] - A[0] + 1):\n        (s, p, count) = ([], {}, 0)\n        for i in A:\n            if i - x in freq:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(freq[i])\n        for v in s:\n            count += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                count -= 1\n        max_count = max(max_count, count)\n    return max_count\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    print(soln(A))", "def soln(A):\n    freq = {}\n    for i in A:\n        if i in freq.keys():\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    A = [*freq.keys()]\n    A.sort()\n    max_count = sum((freq[x] for x in freq if freq[x] > 1))\n    for x in range(1, A[-1] - A[0] + 1):\n        (s, p, count) = ([], {}, 0)\n        for i in A:\n            if i - x in freq:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(freq[i])\n        for v in s:\n            count += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                count -= 1\n        max_count = max(max_count, count)\n    return max_count\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    print(soln(A))", "def soln(A):\n    freq = {}\n    for i in A:\n        if i in freq.keys():\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    A = [*freq.keys()]\n    A.sort()\n    max_count = sum((freq[x] for x in freq if freq[x] > 1))\n    for x in range(1, A[-1] - A[0] + 1):\n        (s, p, count) = ([], {}, 0)\n        for i in A:\n            if i - x in freq:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(freq[i])\n        for v in s:\n            count += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                count -= 1\n        max_count = max(max_count, count)\n    return max_count\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    print(soln(A))", "def soln(A):\n    freq = {}\n    for i in A:\n        if i in freq.keys():\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    A = [*freq.keys()]\n    A.sort()\n    max_count = sum((freq[x] for x in freq if freq[x] > 1))\n    for x in range(1, A[-1] - A[0] + 1):\n        (s, p, count) = ([], {}, 0)\n        for i in A:\n            if i - x in freq:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(freq[i])\n        for v in s:\n            count += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                count -= 1\n        max_count = max(max_count, count)\n    return max_count\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    print(soln(A))", "def soln(A):\n    freq = {}\n    for i in A:\n        if i in freq.keys():\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    A = [*freq.keys()]\n    A.sort()\n    max_count = sum((freq[x] for x in freq if freq[x] > 1))\n    for x in range(1, A[-1] - A[0] + 1):\n        (s, p, count) = ([], {}, 0)\n        for i in A:\n            if i - x in freq:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(freq[i])\n        for v in s:\n            count += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                count -= 1\n        max_count = max(max_count, count)\n    return max_count\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    print(soln(A))", "def soln(A):\n    freq = {}\n    for i in A:\n        if i in freq.keys():\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    A = [*freq.keys()]\n    A.sort()\n    max_count = sum((freq[x] for x in freq if freq[x] > 1))\n    for x in range(1, A[-1] - A[0] + 1):\n        (s, p, count) = ([], {}, 0)\n        for i in A:\n            if i - x in freq:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(freq[i])\n        for v in s:\n            count += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                count -= 1\n        max_count = max(max_count, count)\n    return max_count\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    print(soln(A))", "def soln(A):\n    A.sort()\n    freq = {}\n    for i in A:\n        if i in freq.keys():\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    A = [*freq.keys()]\n    max_count = sum((freq[x] for x in freq if freq[x] > 1))\n    for x in range(1, A[-1] - A[0] + 1):\n        (s, p, count) = ([], {}, 0)\n        for i in freq:\n            if i - x in freq:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(freq[i])\n        for v in s:\n            count += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                count -= 1\n        max_count = max(max_count, count)\n    return max_count\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    print(soln(A))", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(curr, ans)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    freq = [0] * 1001\n    for x in a:\n        freq[x] += 1\n    ans = 0\n    for d in range(1, 1001):\n        cur = 0\n        mark = [0] * 1001\n        for x in a:\n            if mark[x] == 1:\n                continue\n            ptr = x\n            tot = 0\n            mx = 0\n            while ptr <= 1000:\n                if freq[ptr] == 0:\n                    break\n                mark[ptr] = 1\n                tot += freq[ptr]\n                mx = max(mx, freq[ptr])\n                ptr += d\n            if mx > 1 or tot % 2 == 0:\n                cur += tot\n            else:\n                cur += tot - 1\n        ans = max(ans, cur)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(curr, ans)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(curr, ans)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(curr, ans)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for i in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [*map(int, input().split())]\n    freq = [0] * 1001\n    for x in A:\n        freq[x] += 1\n    D = {}\n    for i in range(1001):\n        if freq[i]:\n            D[i] = freq[i]\n    ans = sum((D[x] for x in D if D[x] > 1))\n    for x in range(1, 1001):\n        (s, p, curr) = ([], {}, 0)\n        for i in D:\n            if i - x in D:\n                p[i] = p[i - x]\n            else:\n                p[i] = len(s)\n                s.append([])\n            s[p[i]].append(D[i])\n        for v in s:\n            curr += sum(v)\n            v.sort()\n            if len(v) & 1 and v[-1] == 1:\n                curr -= 1\n        ans = max(ans, curr)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    freq = [0] * 1001\n    ans = 0\n    for x in a:\n        freq[x] += 1\n    for d in range(1, 1001):\n        mark = [0] * 1001\n        Ans = 0\n        for x in a:\n            pointer = x\n            if mark[pointer] == 1:\n                continue\n            mx = 0\n            curAns = 0\n            while pointer <= 1000:\n                if freq[pointer] == 0:\n                    break\n                mark[pointer] = 1\n                curAns += freq[pointer]\n                mx = max(mx, freq[pointer])\n                pointer += d\n            if curAns % 2 == 0 or mx > 1:\n                Ans += curAns\n            else:\n                Ans += curAns - 1\n        ans = max(ans, Ans)\n    print(ans)"]