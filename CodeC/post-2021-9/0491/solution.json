["def f(x):\n    return x[1]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    k = [[0 for x in range(2)] for y in range(n)]\n    for i in range(n):\n        k[i][0] = i\n        k[i][1] = l[i] / p[i]\n    k.sort(key=f)\n    sum = 0\n    z = 0\n    for i in range(n):\n        sum = sum + l[k[i][0]] * z\n        z = z + p[k[i][0]]\n    print(sum)", "from functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = []\n    for i in range(n):\n        arr.append((a[i], b[i]))\n    res = 0\n    l = 0\n\n    def compare(a):\n        return a[0] / a[1]\n    arr.sort(key=compare, reverse=True)\n    for i in range(n - 1):\n        l += arr[i][0]\n        res += l * arr[i + 1][1]\n    print(res)", "def key(val):\n    return val[1] / val[0]\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    s1 = input().split()\n    leng = [int(x) for x in s1]\n    s2 = input().split()\n    beau = [int(x) for x in s2]\n    arr = []\n    tup_arr = zip(leng, beau)\n    for (a, b) in tup_arr:\n        arr.append([a, b])\n    arr.sort(key=key)\n    cost = 0\n    c_length = 0\n    for y in arr:\n        cost += y[1] * c_length\n        c_length += y[0]\n    print(cost)", "def key(val):\n    return val[1] / val[0]\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    s1 = input().split()\n    leng = [int(x) for x in s1]\n    s2 = input().split()\n    beau = [int(x) for x in s2]\n    arr = []\n    tup_arr = zip(leng, beau)\n    for (a, b) in tup_arr:\n        arr.append([a, b])\n    arr.sort(key=key)\n    cost = 0\n    c_length = 0\n    for y in arr:\n        cost += y[1] * c_length\n        c_length += y[0]\n    print(cost)", "t = int(input())\n\ndef compare(a):\n    return a[1] / a[0]\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = [(a[i], b[i]) for i in range(n)]\n    arr.sort(key=compare)\n    (prefix, ans) = (0, 0)\n    for k in range(n):\n        ans += prefix * arr[k][1]\n        prefix += arr[k][0]\n    print(ans)", "def key(arr1):\n    return arr1[1] / arr1[0]\n\ndef ans(n, length, beauty):\n    arr = []\n    for (y1, y2) in zip(length, beauty):\n        arr.append([y1, y2])\n    arr.sort(key=key)\n    cost = 0\n    c_length = 0\n    for y in arr:\n        cost += y[1] * c_length\n        c_length += y[0]\n    return cost\ntest_cases = int(input())\nwhile test_cases != 0:\n    d_ = int(input())\n    d = list(map(int, input().split()))\n    d2 = list(map(int, input().split()))\n    print(ans(d_, d, d2))\n    test_cases -= 1", "def key(arr1):\n    return arr1[1] / arr1[0]\n\ndef ans(n, length, beauty):\n    arr = []\n    for (y1, y2) in zip(length, beauty):\n        arr.append([y1, y2])\n    arr.sort(key=key)\n    cost = 0\n    c_length = 0\n    for y in arr:\n        cost += y[1] * c_length\n        c_length += y[0]\n    return cost\ntest_cases = int(input())\nwhile test_cases != 0:\n    d_ = int(input())\n    d = list(map(int, input().split()))\n    d2 = list(map(int, input().split()))\n    print(ans(d_, d, d2))\n    test_cases -= 1", "def key(arr1):\n    return arr1[1] / arr1[0]\n\ndef ans(n, length, beauty):\n    arr = []\n    for (y1, y2) in zip(length, beauty):\n        arr.append([y1, y2])\n    arr.sort(key=key)\n    cost = 0\n    c_length = 0\n    for y in arr:\n        cost += y[1] * c_length\n        c_length += y[0]\n    return cost\ntest_cases = int(input())\nwhile test_cases != 0:\n    d_ = int(input())\n    d = list(map(int, input().split()))\n    d2 = list(map(int, input().split()))\n    print(ans(d_, d, d2))\n    test_cases -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = 0\n    o = []\n    for i in range(n):\n        o.append([b[i] / a[i], i])\n    o.sort()\n    m = 0\n    x = 0\n    for j in o:\n        i = j[1]\n        m += x * b[i]\n        x += a[i]\n    print(m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = 0\n    o = []\n    for i in range(n):\n        o.append([b[i] / a[i], i])\n    o.sort()\n    m = 0\n    x = 0\n    for j in o:\n        i = j[1]\n        m += x * b[i]\n        x += a[i]\n    print(m)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = []\n    for i in range(n):\n        arr.append([a[i] / b[i], i])\n    arr.sort(reverse=True)\n    now = 0\n    curent = 0\n    for j in arr:\n        now += curent * b[j[1]]\n        curent += a[j[1]]\n    print(now)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = []\n    for i in range(n):\n        arr.append([a[i] / b[i], i])\n    arr.sort(reverse=True)\n    now = 0\n    curent = 0\n    for j in arr:\n        now += curent * b[j[1]]\n        curent += a[j[1]]\n    print(now)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    pts = list(zip(l, b))\n    pts = sorted(pts, key=lambda x: x[1] / x[0])\n    currdist = 0\n    res = 0\n    for (i, j) in pts:\n        res += currdist * j\n        currdist += i\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    opt = [[b[i] / a[i], i] for i in range(n)]\n    opt.sort()\n    ans = 0\n    x = 0\n    for i in opt:\n        id = i[1]\n        ans += x * b[id]\n        x += a[id]\n    print(ans)", "for tcase in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = [(b[i] / a[i], i) for i in range(n)]\n    c.sort()\n    x = [0] * n\n    s = 0\n    for (z, i) in c:\n        x[i] = s\n        s += a[i]\n    beauty = sum((x[i] * b[i] for i in range(n)))\n    print(beauty)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    complist = []\n    order = []\n    for i in range(n):\n        comp = a[i] / b[i]\n        complist.append((comp, i))\n    complist.sort(key=lambda complist: complist[0])\n    for i in range(len(complist)):\n        order.append(complist[i][1])\n    order.reverse()\n    ans = 0\n    incr = 0\n    for i in order:\n        ans += b[i] * incr\n        incr += a[i]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    complist = []\n    order = []\n    for i in range(n):\n        comp = a[i] / b[i]\n        complist.append([comp, i])\n    complist.sort(key=lambda complist: complist[0])\n    for i in range(len(complist)):\n        order.append(complist[i][1])\n    order.reverse()\n    incr = 0\n    ans = 0\n    for i in order:\n        while i < n:\n            ans += b[i] * incr\n            incr += a[i]\n            break\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    complist = []\n    order = []\n    for i in range(n):\n        comp = a[i] / b[i]\n        complist.append([comp, i])\n    complist.sort(key=lambda complist: complist[0])\n    for i in range(len(complist)):\n        order.append(complist[i][1])\n    order.reverse()\n    incr = 0\n    ans = 0\n    for i in order:\n        while i < n:\n            ans += b[i] * incr\n            incr += a[i]\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = []\n    for i in range(n):\n        arr.append([a[i] / b[i], i])\n    arr.sort(reverse=True)\n    ans = 0\n    cur = 0\n    for r in arr:\n        ans += cur * b[r[1]]\n        cur += a[r[1]]\n    print(ans)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    s = 0\n    d = {}\n    for i in range(n):\n        d[i] = a[i] / b[i]\n    d = sorted(d, key=lambda x: d[x], reverse=True)\n    offset = 0\n    for i in d:\n        s += offset * b[i]\n        offset += a[i]\n    print(s)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    br = list(map(int, input().split()))\n    l = [[ar[i] / br[i], i] for i in range(n)]\n    l.sort(reverse=True)\n    (m, res) = (0, 0)\n    for i in l:\n        res += br[i[1]] * m\n        m += ar[i[1]]\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    ratio = [[A[i] / B[i], i] for i in range(n)]\n    ratio.sort(reverse=True)\n    length = 0\n    ans = 0\n    for r in ratio:\n        ans += B[r[1]] * length\n        length += A[r[1]]\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append([a[i], b[i], a[i] / b[i]])\n    l.sort(key=lambda x: x[2])\n    l.reverse()\n    s = 0\n    ans = 0\n    for i in range(n):\n        ans += s * l[i][1]\n        s += l[i][0]\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    order = sorted(range(n), key=lambda i: -a[i] / b[i])\n    ans = 0\n    curr = 0\n    for i in range(n):\n        ans += curr * b[order[i]]\n        curr += a[order[i]]\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    b = list(map(int, input().split()))[:n]\n    t = sorted(list(((i, b[i] / a[i]) for i in range(n))), key=lambda r: r[1])\n    ans = 0\n    s = 0\n    for (i, f) in t:\n        ans += s * b[i]\n        s += a[i]\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    b = list(map(int, input().split()))[:n]\n    t = sorted(list(((i, b[i] / a[i]) for i in range(n))), key=lambda r: r[1])\n    ans = 0\n    s = 0\n    for (i, f) in t:\n        ans += s * b[i]\n        s += a[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ind = [i for i in range(n)]\n    ind.sort(key=lambda x: -a[x] / b[x])\n    ans = prev = 0\n    for i in ind:\n        ans += b[i] * prev\n        prev += a[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ind = [i for i in range(n)]\n    ind.sort(key=lambda x: -a[x] / b[x])\n    ans = prev = 0\n    for i in ind:\n        ans += b[i] * prev\n        prev += a[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ind = [i for i in range(n)]\n    ind.sort(key=lambda x: -a[x] / b[x])\n    ans = prev = 0\n    for i in ind:\n        ans += b[i] * prev\n        prev += a[i]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    t = sorted([(i, b[i] / a[i]) for i in range(n)], key=lambda r: r[1])\n    res = 0\n    s = 0\n    for (i, frac) in t:\n        res += s * b[i]\n        s += a[i]\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    t = sorted([(i, b[i] / a[i]) for i in range(n)], key=lambda r: r[1])\n    res = 0\n    s = 0\n    for (i, frac) in t:\n        res += s * b[i]\n        s += a[i]\n    print(res)", "from sys import stdin, stdout\nfrom heapq import heapify, heappop\nfrom functools import cmp_to_key\nstdint = lambda : int(stdin.readline())\nseq = lambda : list(map(int, stdin.readline().strip().split()))\n\ndef compare(a, b):\n    if a[0] * b[1] > a[1] * b[0]:\n        return -1\n    else:\n        return 1\nfor _ in range(stdint()):\n    n = stdint()\n    first = seq()\n    second = seq()\n    arr = []\n    for i in range(n):\n        arr.append((first[i], second[i]))\n    arr = sorted(arr, key=cmp_to_key(compare))\n    l = arr[0][0]\n    ans = 0\n    for i in range(1, n):\n        ans += l * arr[i][1]\n        l += arr[i][0]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ind = [i for i in range(n)]\n    ind.sort(key=lambda x: -a[x] / b[x])\n    ans = prev = 0\n    for i in ind:\n        ans += b[i] * prev\n        prev += a[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    order = sorted(range(n), key=lambda i: -a[i] / b[i])\n    ans = 0\n    curr = 0\n    for i in range(n):\n        ans += curr * b[order[i]]\n        curr += a[order[i]]\n    print(ans)", "import sys\nfrom collections import defaultdict as dd, deque\ninput = lambda : sys.stdin.readline().strip()\n\ndef ii():\n    return int(input())\n\ndef ia():\n    return list(map(int, input().split()))\nINF = float('inf')\nMOD = 10 ** 9 + 7\nfor _ in range(ii()):\n    n = ii()\n    a = ia()\n    b = ia()\n    c = list(zip(a, b))\n    c.sort(key=lambda x: x[1] / x[0])\n    res = 0\n    s = 0\n    for (i, j) in c:\n        res += s * j\n        s += i\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    t = sorted([(i, b[i] / a[i]) for i in range(n)], key=lambda r: r[1])\n    res = 0\n    s = 0\n    for (i, frac) in t:\n        res += s * b[i]\n        s += a[i]\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    t = sorted([(i, b[i] / a[i]) for i in range(n)], key=lambda r: r[1])\n    res = 0\n    s = 0\n    for (i, frac) in t:\n        res += s * b[i]\n        s += a[i]\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    t = sorted([(i, b[i] / a[i]) for i in range(n)], key=lambda x: x[1])\n    res = 0\n    s = 0\n    for (i, frac) in t:\n        res += s * b[i]\n        s += a[i]\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = {}\n    for (ai, bi, i) in zip(a, b, range(n)):\n        x[i] = ai / bi\n    indexes = []\n    for (k, v) in sorted(x.items(), key=lambda item: item[1], reverse=True):\n        indexes.append(k)\n    beau = []\n    length = []\n    running_sum = 0\n    for i in indexes:\n        beau.append(b[i])\n        length.append(running_sum)\n        running_sum += a[i]\n    beauty = 0\n    for (xi, bi) in zip(length, beau):\n        beauty += xi * bi\n    print(beauty)", "from collections import defaultdict\nimport math as mt\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = list(map(int, input().split()))\n    c = [list(i) for i in zip(a, b)]\n    c.sort(key=lambda x: -(x[0] / x[1]))\n    ans = 0\n    curr = 0\n    for i in range(n - 1):\n        curr += c[i][0]\n        ans += curr * c[i + 1][1]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    r = [0] * n\n    for i in range(n):\n        r[i] = b[i] / a[i]\n    z = list(zip(r, a, b))\n    z.sort()\n    clen = 0\n    ans = 0\n    for i in range(n):\n        ans += clen * z[i][2]\n        clen += z[i][1]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    r = [0] * n\n    for i in range(n):\n        r[i] = b[i] / a[i]\n    z = list(zip(r, a, b))\n    z.sort()\n    clen = 0\n    ans = 0\n    for i in range(n):\n        ans += clen * z[i][2]\n        clen += z[i][1]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ind = [i for i in range(n)]\n    ind.sort(key=lambda x: -a[x] / b[x])\n    ans = prv = 0\n    for i in ind:\n        ans += b[i] * prv\n        prv += a[i]\n    print(ans)", "def solution(n, a, b):\n    arr = []\n    length = 0\n    ans = 0\n    for i in range(n):\n        arr.append([a[i] / b[i], a[i], b[i]])\n    arr.sort(reverse=True)\n    for element in arr:\n        ans += length * element[2]\n        length += element[1]\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    b = list(map(int, input().split()))[:n]\n    print(solution(n, a, b))", "def solution(n, a, b):\n    ans = 0\n    arr = []\n    length = 0\n    for i in range(n):\n        arr.append([a[i] / b[i], a[i], b[i]])\n    arr.sort(reverse=True)\n    for ele in arr:\n        ans += length * ele[2]\n        length += ele[1]\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    b = list(map(int, input().split()))[:n]\n    print(solution(n, a, b))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    arr = []\n    for i in range(n):\n        arr.append((a[i] / b[i], a[i], b[i]))\n    arr.sort(reverse=True)\n    l = 0\n    ans = 0\n    for i in range(n):\n        ans += l * arr[i][2]\n        l += arr[i][1]\n    print(ans)\n    t -= 1", "import functools\n\ndef soln(n, l, b):\n\n    def sorted_by(a, b):\n        if a[0] * b[1] > a[1] * b[0]:\n            return -1\n        elif a[0] * b[1] < a[1] * b[0]:\n            return 1\n        return 0\n    cmp = functools.cmp_to_key(sorted_by)\n    srr = sorted([(l[i], b[i]) for i in range(len(l))], key=cmp)\n    res = 0\n    x = 0\n    for i in srr:\n        res += i[1] * x\n        x += i[0]\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(soln(n, l, b))", "def musical_rods(n, rod_len, beauty):\n    index = [i for i in range(n)]\n    index.sort(key=lambda x: rod_len[x] / beauty[x], reverse=True)\n    ans = prev = 0\n    for i in index:\n        ans += beauty[i] * prev\n        prev += rod_len[i]\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    rl = [int(x) for x in input().split()]\n    bi = [int(x) for x in input().split()]\n    print(musical_rods(n, rl, bi))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    order = sorted(range(n), key=lambda i: -a[i] / b[i])\n    ans = 0\n    curr = 0\n    for i in range(n):\n        ans += curr * b[order[i]]\n        curr += a[order[i]]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = []\n    for i in range(n):\n        d.append([b[i] / l[i], i])\n    e = sorted(d)\n    x = 0\n    y = 0\n    for i in e:\n        y += x * b[i[1]]\n        x += l[i[1]]\n    print(y)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = []\n    for i in range(n):\n        d.append([b[i] / l[i], i])\n    e = sorted(d)\n    x = 0\n    y = 0\n    for i in e:\n        y += x * b[i[1]]\n        x += l[i[1]]\n    print(y)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    v = list(zip(a, b))\n    v.sort(key=lambda x: -x[0] / x[1])\n    s = 0\n    sm = 0\n    for e in v:\n        sm += s * e[1]\n        s += e[0]\n    print(sm)", "from sys import stdin\n\ndef Sort_Tuple(tup):\n    tup.sort(key=lambda x: x[2])\n    return tup\n\ndef finalList(weights, values, n):\n    fli = list()\n    for i in range(n):\n        fli.append((weights[i], values[i], values[i] / weights[i]))\n    Sort_Tuple(fli)\n    return fli\n\ndef musicalRods(fli):\n    start = 0\n    ans = 0\n    for i in fli:\n        ans += i[1] * start\n        start += i[0]\n    return ans\n\ndef takeInput():\n    n = int(input())\n    if n == 0:\n        return (list(), list(), n, 0)\n    weights = list(map(int, input().split(' ')))\n    values = list(map(int, input().split(' ')))\n    maxWeight = sum(weights)\n    return (weights, values, n, maxWeight)\nt = int(input())\nwhile t:\n    (weights, values, n, maxWeight) = takeInput()\n    fli = finalList(weights, values, n)\n    ans = musicalRods(fli)\n    print(ans)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ratios = [(a[i] / b[i], i) for i in range(n)]\n    ratios.sort()\n    total = 0\n    length = sum(a)\n    for r in ratios:\n        length -= a[r[1]]\n        total += b[r[1]] * length\n    print(total)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    l = []\n    for k in range(n):\n        l.append([a[k] / b[k], k])\n    l.sort()\n    l = l[::-1]\n    q = 0\n    s = 0\n    for j in l:\n        s += q * b[j[1]]\n        q += a[j[1]]\n    print(s)", "import bisect\nimport math\nimport sys\nfrom collections import Counter, deque\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    b = [int(i) for i in sys.stdin.readline().split()]\n    l = list(zip(a, b))\n    l.sort(key=lambda x: x[0] / x[1], reverse=True)\n    c = l[0][0]\n    ans = 0\n    for i in range(1, n):\n        ans += l[i][1] * c\n        c += l[i][0]\n    print(ans)", "from sys import stdin\ninput = stdin.readline\n\ndef solve(N, A, B):\n    C = [(a, b, b / a) for (a, b) in zip(A, B)]\n    C = sorted(C, key=lambda x: x[2])\n    count = 0\n    x = 0\n    for (a, b, c) in C:\n        count += x * b\n        x += a\n    return count\nT = int(input().strip())\nfor problem in range(1, T + 1):\n    N = int(input().strip())\n    A = [int(x) for x in input().strip().split()]\n    B = [int(x) for x in input().strip().split()]\n    print(solve(N, A, B))", "import math\nfrom collections import Counter\n\ndef li():\n    return list(map(int, input().split()))\n\ndef n():\n    return int(input())\n\ndef st():\n    return input()\nyes = 'YES'\nno = 'NO'\neven = 'EVEN'\nodd = 'ODD'\n\ndef prefix(L):\n    size = len(L)\n    for i in range(1, size):\n        L[i] = L[i] + L[i - 1]\n    return L\nfor _ in range(int(input())):\n    size = n()\n    A = li()\n    B = li()\n    Z = list(zip(A, B))\n    Z.sort(key=lambda x: x[1] / x[0])\n    ans = 0\n    cur = 0\n    for (x, y) in Z:\n        ans += cur * y\n        cur += x\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    leng = list(map(int, input().split()))\n    val = list(map(int, input().split()))\n    l = [[] for i in range(n)]\n    for i in range(n):\n        l[i].append(leng[i] / val[i])\n        l[i].append(val[i])\n        l[i].append(leng[i])\n    l.sort(reverse=True)\n    w = 0\n    ans = 0\n    for i in range(n):\n        ans += w * l[i][1]\n        w += l[i][2]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    leng = list(map(int, input().split()))\n    val = list(map(int, input().split()))\n    l = [[] for i in range(n)]\n    for i in range(n):\n        l[i].append(leng[i] / val[i])\n        l[i].append(val[i])\n        l[i].append(leng[i])\n    l.sort(reverse=True)\n    w = 0\n    ans = 0\n    for i in range(n):\n        ans += w * l[i][1]\n        w += l[i][2]\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    cost = list(map(int, input().split()))\n    ans = [[cost[i] / a[i], i] for i in range(n)]\n    ans.sort(key=lambda x: x[0])\n    sol = 0\n    x = 0\n    for i in range(n):\n        sol += x * cost[ans[i][1]]\n        x += a[ans[i][1]]\n    print(sol)", "gtt = int(input())\nfor i in range(gtt):\n    nn = int(input())\n    aa = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for i in range(nn):\n        l.append([aa[i], b[i], b[i] / aa[i]])\n    l.sort(key=lambda x: x[2])\n    d = 0\n    ans = 0\n    for x in l:\n        ans += d * x[1]\n        d += x[0]\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    cost = list(map(int, input().split()))\n    ans = [[cost[i] / a[i], i] for i in range(n)]\n    ans.sort(key=lambda x: x[0])\n    s = 0\n    l = 0\n    for i in range(n):\n        s += l * cost[ans[i][1]]\n        l += a[ans[i][1]]\n    print(s)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = [(b[i] / a[i], (a[i], b[i])) for i in range(n)]\n    ans.sort()\n    x = 0\n    sum = 0\n    for i in range(n):\n        sum += x * ans[i][1][1]\n        x = x + ans[i][1][0]\n    print(sum)\n    t -= 1", "for temp in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    res = [b[i] / a[i] for i in range(n)]\n    (res, a, b) = (list(t) for t in zip(*sorted(zip(res, a, b))))\n    s = 0\n    ans = 0\n    for i in range(1, n):\n        s += a[i - 1]\n        ans += s * b[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = []\n    for i in range(n):\n        d.append([b[i] / l[i], i])\n    e = sorted(d)\n    x = 0\n    y = 0\n    for i in e:\n        y += x * b[i[1]]\n        x += l[i[1]]\n    print(y)", "def last(n):\n    return n[2]\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = []\n    A = list(map(int, str(input()).split(' ')))\n    B = list(map(int, str(input()).split(' ')))\n    for i in range(n):\n        arr.append((A[i], B[i], B[i] / A[i]))\n    arr = sorted(arr, key=last)\n    curr = 0\n    ans = 0\n    for i in range(n):\n        ans = ans + curr * arr[i][1]\n        curr = curr + arr[i][0]\n    print(ans)\n    t = t - 1", "for x in range(int(input())):\n    c = int(input())\n    s = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    e = [[0, 0] for i in range(c)]\n    for i in range(c):\n        e[i][0] = s[i]\n        e[i][1] = d[i]\n    e.sort(key=lambda x: x[1] / x[0])\n    cur = 0\n    ans = 0\n    for i in range(c):\n        ans += e[i][1] * cur\n        cur += e[i][0]\n    print(ans)", "def maximum_beauty(N, a, b):\n    if N == 1:\n        return 0\n    else:\n        mp = []\n        for i in range(N):\n            mp.append([b[i] / a[i], i])\n        mp.sort()\n        ans = tmp = 0\n        for i in range(len(mp)):\n            ans += b[mp[i][1]] * tmp\n            tmp += a[mp[i][1]]\n        return ans\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print(maximum_beauty(N, A, B))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = [(a[i] / b[i], i) for i in range(n)]\n    x = [0 for i in range(n)]\n    d = sorted(d, key=lambda x: x[0])\n    length = 0\n    for i in range(n):\n        ind = d[-1][1]\n        x[ind] = length\n        length += a[ind]\n        d.pop()\n    ans = 0\n    for i in range(n):\n        ans += b[i] * x[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    t = []\n    for (i, j) in zip(A, B):\n        t.append([j / i, i, j])\n    t.sort(key=lambda x: x[0])\n    d = 0\n    s = 0\n    for i in t:\n        s += d * i[2]\n        d += i[1]\n    print(s)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(len(a)):\n        c.append((b[i] / a[i], i))\n    c.sort()\n    x = 0\n    ans = 0\n    for i in c:\n        ans += x * b[i[1]]\n        x += a[i[1]]\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    p = []\n    for i in range(n):\n        p.append([x[i], y[i], y[i] / x[i]])\n    p.sort(key=lambda x: x[2])\n    (ans, c) = (0, p[0][0])\n    for k in range(1, len(x)):\n        ans += c * p[k][1]\n        c += p[k][0]\n    print(ans)", "import sys\nimport math as m\nfrom collections import Counter\n\ndef gcd(a, b):\n    return b if a % b == 0 else gcd(b, a % b)\n\ndef li():\n    return list(map(int, input().split()))\n\ndef print_l(l):\n    return [i for i in l]\n\ndef si():\n    return input()\n\ndef isKthBitSet(n, k):\n    if n & 1 << k - 1:\n        return True\n    else:\n        pass\n    return False\n\ndef A():\n    n = int(input())\n    l = li()\n    ct = 0\n    for i in l:\n        if i % 2 == 1:\n            ct += 1\n    if ct % 2 == 0:\n        return 'YES'\n    else:\n        return 'NO'\n\ndef B():\n    (n, x1, y1, x2, y2) = map(int, input().split())\n    if x1 < 1 and y1 > n and (x2 < 1) and (y2 > n):\n        return 0\n    elif x1 < 1 or y1 > n:\n        return min(min(n - x2 + 1, n - y2 + 1), min(x2, y2))\n    elif x2 < 1 or y2 > n:\n        return min(min(n - x1 + 1, n - y1 + 1), min(x1, y1))\n    x = min(min(n - x1 + 1, n - y1 + 1), min(x1, y1))\n    y = min(min(n - x2 + 1, n - y2 + 1), min(x2, y2))\n    z = abs(x1 - x2) + abs(y1 - y2)\n    return min(x + y, z)\n\ndef C():\n    (n, k) = map(int, input().split())\n    s = n * (n - 1) // 2\n    if k < n // 2:\n        x = n - 2 * k\n        s -= x * (x - 1) // 2\n    return s\n\ndef D():\n    n = int(input())\n    l1 = li()\n    l2 = li()\n    l = []\n    for i in range(n):\n        l.append([l2[i] / l1[i], l1[i], l2[i]])\n    l = sorted(l)\n    x = 0\n    s = 0\n    for i in range(n):\n        s += x * l[i][2]\n        x += +l[i][1]\n    return s\nfor _ in range(int(input())):\n    print(D())", "import sys\nimport math\nfrom collections import defaultdict, Counter, OrderedDict\nfrom itertools import permutations\nfrom collections import deque\nfrom decimal import Decimal\nfrom fractions import Fraction\nimport heapq\nimport bisect\nimport functools\nsys.setrecursionlimit(10 ** 5)\n\ndef sin():\n    return int(sys.stdin.readline())\n\ndef array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef two():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef multiple():\n    return [int(x) for x in sys.stdin.readline().split()]\n\ndef string():\n    return sys.stdin.readline().strip()\n\ndef sqrt(x):\n    (low, high) = (0, x)\n    while low <= high:\n        mid = (low + high) // 2\n        if mid * mid <= x < (mid + 1) * (mid + 1):\n            return mid\n        elif x < mid * mid:\n            high = mid - 1\n        else:\n            low = mid + 1\nt = sin()\nfor _ in range(t):\n    n = sin()\n    a = array()\n    b = array()\n    res = []\n    for i in range(n):\n        res.append([a[i], b[i], b[i] / a[i]])\n    res.sort(key=lambda x: x[2])\n    ans = 0\n    x = 0\n    for i in range(n):\n        ans += x * res[i][1]\n        x += res[i][0]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = [[0, 0] for i in range(n)]\n    for i in range(n):\n        x[i][0] = a[i]\n        x[i][1] = b[i]\n    x.sort(key=lambda x: x[1] / x[0])\n    cur = 0\n    ans = 0\n    for i in range(n):\n        ans += x[i][1] * cur\n        cur += x[i][0]\n    print(ans)", "def maincase():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append((a[i], b[i]))\n    l.sort(key=lambda x: x[1] / x[0])\n    counter = 0\n    sum1 = 0\n    for i in l:\n        sum1 += counter * i[1]\n        counter += i[0]\n    print(sum1)\nfor test in range(int(input())):\n    maincase()", "def solve():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        length = list(map(int, input().split()))\n        beaut = list(map(int, input().split()))\n        arr = [0] * n\n        for k in range(n):\n            arr[k] = beaut[k] / length[k]\n        list1 = arr\n        list2 = length\n        (list1, list2) = zip(*sorted(zip(list1, list2)))\n        length = list2\n        list1 = arr\n        list2 = beaut\n        (list1, list2) = zip(*sorted(zip(list1, list2)))\n        beaut = list2\n        x = 0\n        tot_sum = 0\n        for s in range(n):\n            tot_sum += x * beaut[s]\n            x += length[s]\n        print(tot_sum)\nsolve()", "for i in range(int(input())):\n    n = int(input())\n    le = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append([le[i], b[i], b[i] / le[i]])\n    l.sort(key=lambda x: x[2])\n    s = l[0][0]\n    count = 0\n    for i in range(1, n):\n        count += s * l[i][1]\n        s += l[i][0]\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    order = [[q / p, p, q] for (p, q) in zip(a, b)]\n    order.sort()\n    ans = 0\n    for j in range(n):\n        if j == 0:\n            prev = order[j][1]\n        else:\n            ans += order[j][2] * prev\n            prev += order[j][1]\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    ans = []\n    for i in range(len(a)):\n        ans.append(tuple([a[i], b[i], b[i] / a[i]]))\n    ans.sort(key=lambda x: x[2])\n    sum = ans[0][0]\n    answer = 0\n    for i in range(1, len(a)):\n        answer += sum * ans[i][1]\n        sum += ans[i][0]\n    print(answer)", "for tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = []\n    for i in range(n):\n        d.append([i, b[i] / a[i]])\n    d = sorted(d, key=lambda x: x[1])\n    s = 0\n    c = a[d[0][0]]\n    for i in range(1, n):\n        s += c * b[d[i][0]]\n        c += a[d[i][0]]\n    print(s)", "def maintestcase():\n    n = int(input())\n    ai = list(map(int, input().split()))\n    bi = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append((ai[i], bi[i]))\n    l.sort(key=lambda x: x[1] / x[0])\n    counter = 0\n    s = 0\n    for i in l:\n        s += counter * i[1]\n        counter += i[0]\n    print(s)\nfor test in range(int(input())):\n    maintestcase()", "from functools import cmp_to_key\n\ndef compare(x, y):\n    if x[1] * y[0] > x[0] * y[1]:\n        return 1\n    elif x[1] * y[0] < x[0] * y[1]:\n        return -1\n    else:\n        return 0\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    c = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        k = [c[i], b[i]]\n        l.append(k)\n    l.sort(key=cmp_to_key(compare))\n    s = 0\n    r = 0\n    for i in l:\n        s += r * i[1]\n        r += i[0]\n    print(s)", "a = int(input())\nfor i in range(a):\n    c = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    final = [[arr1[i], arr2[i], arr2[i] / arr1[i]] for i in range(c)]\n    sol = sorted(final, key=lambda l: l[2], reverse=False)\n    s = 0\n    index = 0\n    for i in range(len(sol)):\n        s += sol[i][1] * index\n        index += sol[i][0]\n    print(s)", "a = int(input())\nfor i in range(a):\n    c = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    f = [[arr1[i], arr2[i], arr2[i] / arr1[i]] for i in range(c)]\n    sol = sorted(f, key=lambda l: l[2], reverse=False)\n    s = 0\n    ind = 0\n    for i in range(len(sol)):\n        s += sol[i][1] * ind\n        ind += sol[i][0]\n    print(s)", "a = int(input())\nfor i in range(a):\n    c = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    f = [[arr1[i], arr2[i], arr2[i] / arr1[i]] for i in range(c)]\n    sol = sorted(f, key=lambda l: l[2], reverse=False)\n    s = 0\n    ind = 0\n    for i in range(len(sol)):\n        s += sol[i][1] * ind\n        ind += sol[i][0]\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    v = []\n    for i in range(n):\n        v.append((A[i], B[i]))\n    v.sort(key=lambda x: x[1] / x[0])\n    start = 0\n    ans = 0\n    for i in v:\n        ans += i[1] * start\n        start += i[0]\n    print(ans)", "t = int(input())\nfor t0 in range(t):\n    n = int(input())\n    len_nums = list(map(int, input().split()))\n    beauty_nums = list(map(int, input().split()))\n    weights = [(i, beauty_nums[i] / len_nums[i]) for i in range(n)]\n    weights = sorted(weights, key=lambda item: item[1])\n    len_until_now = 0\n    score = 0\n    for i in range(n):\n        rod_i = weights[i][0]\n        score += beauty_nums[rod_i] * len_until_now\n        len_until_now += len_nums[rod_i]\n    print(score)", "def sorter(x):\n    return b[x] / a[x]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = list(range(n))\n    l.sort(key=sorter)\n    sum_ = 0\n    answer = 0\n    for i in l:\n        answer += b[i] * sum_\n        sum_ += a[i]\n    print(answer)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    hashy = [[arr[i], brr[i]] for i in range(n)]\n    hashy.sort(key=lambda x: x[1] / x[0])\n    ans = 0\n    length = 0\n    for i in range(n):\n        ans += length * hashy[i][1]\n        length += hashy[i][0]\n    print(ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append([a[i], b[i], b[i] / a[i]])\n    l.sort(key=lambda x: x[2])\n    d = 0\n    ans = 0\n    for x in l:\n        ans += d * x[1]\n        d += x[0]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append([h[i], b[i], b[i] / h[i]])\n    l = sorted(l, key=lambda x: x[2])\n    s = 0\n    ht = 0\n    for i in l:\n        s += i[1] * ht\n        ht += i[0]\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split(' ')))\n    b = list(map(int, input().strip().split(' ')))\n    temp = []\n    for i in range(n):\n        temp.append((a[i] / b[i], a[i], b[i]))\n    temp = sorted(temp, reverse=True)\n    ans = 0\n    length = 0\n    for i in temp:\n        ans += length * i[2]\n        length += i[1]\n    print(ans)", "def N():\n    return int(input())\n\ndef A():\n    return [int(x) for x in input().split()]\n\ndef S():\n    return input()\nfor _ in range(N()):\n    n = N()\n    aa = []\n    ans = 0\n    if 'codechef' == 28226329:\n        print('Tanmay')\n    a = A()\n    b = A()\n    for i in range(n):\n        aa.append([a[i] / b[i], i])\n    na = [0]\n    aa.sort(key=lambda x: x[0], reverse=True)\n    c = 0\n    for i in range(1, n):\n        c += a[aa[i - 1][1]]\n        na.append(c)\n    for i in range(n):\n        ans += na[i] * b[aa[i][1]]\n    print(ans)", "for T in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    div = [b[i] / a[i] for i in range(n)]\n    z = sorted(zip(div, a, b), reverse=False)\n    current_length = 0\n    res = 0\n    for rod in z:\n        res += current_length * rod[2]\n        current_length += rod[1]\n    print(res)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    info = []\n    for i in range(n):\n        info.append([b[i] / a[i], a[i], b[i]])\n    info.sort()\n    ans = 0\n    l = 0\n    for i in range(n):\n        ans += l * info[i][2]\n        l += info[i][1]\n    print(ans)\n    t -= 1", "def sortSecond(elem):\n    return elem[1]\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    r = []\n    for i in range(n):\n        c = (i, b[i] / a[i])\n        r.append(c)\n    r.sort(key=sortSecond)\n    x = 0\n    ans = 0\n    for i in range(n):\n        ans += x * b[r[i][0]]\n        x += a[r[i][0]]\n    print(ans)"]