["from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "for u in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    d = {}\n    for j in range(n):\n        if k[j] in d:\n            d[k[j]] += 1\n        else:\n            d[k[j]] = 1\n    ans = 0\n    q = 1\n    k = 1\n    while 1:\n        if q in d:\n            q += 1\n        else:\n            break\n    for jj in range(1, q):\n        k *= d[jj]\n        ans += k\n    print(ans % 1000000007)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    d = dict()\n    for i in l:\n        if i in d.keys():\n            d[i] += 1\n        else:\n            d[i] = 1\n    n = 1\n    x = 0\n    sum = 0\n    while n >= 0:\n        if n in d.keys():\n            if n == 1:\n                x = d[n]\n            else:\n                x = x * d[n]\n            sum = sum + x\n            n += 1\n        else:\n            break\n    print(sum % (10 ** 9 + 7))", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    sz = int(input())\n    N = [int(x) for x in input().split(' ')]\n    MOD = 10 ** 9 + 7\n    C = Counter(N)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "import sys\nMOD = 1000000007\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    freq = {}\n    for x in a:\n        freq[x] = freq.get(x, 0) + 1\n    max_val = max(a)\n    ran = min(max_val, n)\n    temp1 = freq.get(1, 0)\n    som = temp1\n    for i in range(2, ran + 1):\n        if i not in freq:\n            break\n        temp1 = temp1 * freq[i] % MOD\n        som = (som + temp1) % MOD\n    print(som)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "for a in range(int(input())):\n    x = int(input())\n    mod = 10 ** 9 + 7\n    l = list(map(int, input().split()))\n    g = {}\n    for i in l:\n        if i not in g:\n            g[i] = 0\n        g[i] += 1\n    j = 1\n    ans = 0\n    p = 1\n    while j in g:\n        cur = p % mod * (g[j] % mod) % mod\n        p = cur\n        ans += cur\n        j += 1\n    print(ans % mod)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    s = 0\n    inc = 1\n    i = 1\n    while i in d:\n        inc = inc * d[i]\n        s = s + inc\n        i += 1\n    print(s % 1000000007)", "import sys\ninput = sys.stdin.readline\nmodulas = 1000000007\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        array1 = list(map(int, input().split()))\n        subseq = {}\n        for i in range(n):\n            if array1[i] not in subseq:\n                subseq[array1[i]] = 1\n            else:\n                subseq[array1[i]] += 1\n        sumation = 0\n        lastsumation = 1\n        for i in range(1, n + 1):\n            multiply = lastsumation * subseq.get(i, 0)\n            multiply = multiply % modulas\n            sumation += multiply\n            lastsumation = multiply\n            sumation = sumation % modulas\n        print(sumation)\nmain()", "mod = 1000000007\ncase = int(input())\nfor _ in range(case):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    arr.sort()\n    number = 1\n    found = False\n    count = 0\n    res = 0\n    instance = 1\n    i = 0\n    while i < n:\n        if arr[i] == number:\n            found = True\n            count += 1\n        elif not found:\n            break\n        else:\n            instance *= count\n            res = (res % mod + instance % mod) % mod\n            count = 0\n            number += 1\n            found = False\n            i -= 1\n        i += 1\n    if found:\n        res = (res % mod + instance % mod * count % mod % mod) % mod\n    print(res)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "import sys\nsys.setrecursionlimit(10 ** 7)\nmod = 10 ** 9 + 7\n\ndef readInt():\n    return int(input())\n\ndef readIntList():\n    return list(map(int, input().split()))\n\ndef readStringList():\n    return list(input())\n\ndef readStringListWithSpace():\n    return list(input().split())\n\ndef readString():\n    return input()\nimport math\n\ndef execute():\n    for _ in range(readInt()):\n        n = readInt()\n        a = readIntList()\n        hmap = {}\n        for i in a:\n            if i in hmap:\n                hmap[i] += 1\n            else:\n                hmap[i] = 1\n        b = [[k, v] for (k, v) in hmap.items()]\n        b.sort()\n        prev = 0\n        res = 0\n        p = 1\n        for (i, j) in b:\n            if i - 1 == prev:\n                prev = i\n                p *= j\n                res = (res + p) % mod\n            else:\n                break\n        print(res)\nexecute()", "from collections import Counter\nMOD = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i == prev + 1:\n            p = p * j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    freq = {}\n    for num in a:\n        freq[num] = freq.get(num, 0) + 1\n    s = 0\n    prevPerm = 1\n    flag = True\n    for i in range(1, n + 1):\n        if i in freq:\n            calc = freq[i] * prevPerm\n            s += calc\n            prevPerm = calc\n        else:\n            print(s % MOD)\n            flag = False\n            break\n    if flag:\n        print(s % MOD)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    freq = {}\n    for num in a:\n        freq[num] = freq.get(num, 0) + 1\n    s = 0\n    prevPerm = 1\n    flag = True\n    for i in range(1, n + 1):\n        if i in freq:\n            calc = freq[i] * prevPerm\n            s += calc\n            prevPerm = calc\n        else:\n            print(s % MOD)\n            flag = False\n            break\n    if flag:\n        print(s % MOD)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "import random\nfrom collections import Counter\nMOD = 10 ** 9 + 7\n\ndef gen_list():\n    a = []\n    for i in range(1, 100):\n        a += [i] * random.randint(11, 20)\n    print(len(a), Counter(a))\n    return a\n\ndef solve():\n    n = int(input())\n    a = Counter(map(int, input().split()))\n    tot = 0\n    if a[1] == 0:\n        print(tot)\n        return\n    tot = a[1]\n    prev = a[1]\n    i = 2\n    while a[i] > 0:\n        prev *= a[i]\n        tot += prev\n        if tot >= MOD:\n            tot = tot % MOD\n        i += 1\n    print(tot % MOD)\nfor _ in range(int(input())):\n    solve()", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "t = int(input())\nans = []\nmod = 10 ** 9 + 7\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    gg = {}\n    for i in a:\n        if i not in gg:\n            gg[i] = 0\n        gg[i] += 1\n    x = 1\n    ans = 0\n    p = 1\n    while x in gg:\n        curr = p % mod * (gg[x] % mod) % mod\n        p = curr\n        ans += curr\n        x += 1\n    print(ans % mod)", "t = int(input())\nans = []\nmod = 10 ** 9 + 7\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    gg = {}\n    for i in a:\n        if i not in gg:\n            gg[i] = 0\n        gg[i] += 1\n    x = 1\n    ans = 0\n    p = 1\n    while x in gg and gg[x] > 0:\n        curr = p % mod * (gg[x] % mod) % mod\n        p = curr\n        ans += curr\n        ans % mod\n        x += 1\n    print(ans % mod)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    dici = {}\n    li = list(map(int, input().split()))\n    for i in li:\n        if i in dici:\n            dici[i] += 1\n        else:\n            dici[i] = 1\n    ans = 0\n    temp = 1\n    for i in range(1, n + 1):\n        if i in dici:\n            temp *= dici[i]\n            ans += temp\n        else:\n            break\n    print(ans % (10 ** 9 + 7))", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dit = {}\n    for i in arr:\n        if i in dit:\n            dit[i] += 1\n        else:\n            dit[i] = 1\n    mod = 1000000007\n    ans = 0\n    prev = 1\n    last = 1\n    while last in dit:\n        prev *= dit[last]\n        ans = (ans + prev) % mod\n        last += 1\n    print(ans)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "from collections import Counter\nfor k in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    ans = 0\n    l2 = []\n    MOD = 10 ** 9 + 7\n    for i in c:\n        l2.append((i, c[i]))\n    p = 1\n    l2.sort()\n    pr = 0\n    for (i, j) in l2:\n        if i - 1 == pr:\n            p *= j\n            ans = (ans + p) % MOD\n            pr = i\n        else:\n            break\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    s = 0\n    p = 1\n    i = 1\n    while i in d:\n        p *= d[i]\n        s = s + p\n        i += 1\n    print(s % 1000000007)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    s = 0\n    p = 1\n    i = 1\n    while i in d:\n        p *= d[i]\n        s = (s + p) % 1000000007\n        i += 1\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    s = 0\n    p = 1\n    i = 1\n    while i in d:\n        p *= d[i]\n        s = (s + p) % 1000000007\n        i += 1\n    print(s)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "from collections import Counter\nt = int(input())\n\ndef fun(lst):\n    for i in range(1, len(lst) + 4):\n        if i not in lst:\n            break\n    return i - 1\nmod = 1000000007\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    xnum = fun(lst)\n    clist = Counter(lst)\n    x = clist[1]\n    prv = x\n    for i in range(2, xnum + 1):\n        vl = clist[i]\n        prv = vl * prv\n        x += prv\n    print(x % mod)", "from collections import Counter\nm = 10 ** 9 + 7\nfor _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    l = Counter(b)\n    c = 0\n    s = 1\n    for i in range(1, a + 1):\n        if l[i] == 0:\n            break\n        temp = s * l[i]\n        c += temp\n        c = c % m\n        s = s * l[i]\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    num = 0\n    while num + 1 in l:\n        num += 1\n    frq = {}\n    l = sorted(l)\n    for i in l:\n        if i <= num:\n            if i in frq:\n                frq[i] += 1\n            else:\n                frq[i] = 1\n    prev = 1\n    cnt = 0\n    for i in frq:\n        prev = prev * frq[i]\n        cnt += prev\n    print(cnt % 1000000007)", "from collections import Counter\n\ndef inparr():\n    tmparr = [int(i) for i in input().split()]\n    return tmparr\nfor _ in range(int(input())):\n    N = int(input())\n    rmod = int(1000000000.0) + 7\n    arr = Counter(inparr())\n    maxa = max(arr)\n    prod = 1\n    res = 0\n    for i in range(1, maxa + 1):\n        if arr[i] == 0:\n            break\n        else:\n            prod *= arr[i]\n            res += prod\n    print(res % rmod)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    freq = {}\n    m = 1000000007\n    for x in arr:\n        if x in freq:\n            freq[x] += 1\n        else:\n            freq[x] = 1\n    (x, p, c) = (1, 1, 0)\n    while x in freq and freq[x] > 0:\n        cur = p * freq[x] % m\n        c += cur\n        p = cur\n        c %= m\n        x += 1\n    print(c)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    num = 0\n    while num + 1 in l:\n        num += 1\n    frq = {}\n    l = sorted(l)\n    for i in l:\n        if i <= num:\n            if i in frq:\n                frq[i] += 1\n            else:\n                frq[i] = 1\n    prev = 1\n    cnt = 0\n    for i in frq:\n        prev = prev * frq[i]\n        cnt += prev\n    print(cnt % 1000000007)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = [0] * n\n    for e in a:\n        if e <= n:\n            count[e - 1] += 1\n    ans = [0] * n\n    t = 1\n    ans[0] = count[0]\n    if ans[0] != 0:\n        for i in range(1, len(count)):\n            if count[i] != 0:\n                ans[i] = ans[i - 1] * count[i] % 1000000007\n            else:\n                break\n    print(sum(ans) % 1000000007)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = map(int, input().split(' '))\n    c = {}\n    l = sorted(a)\n    j = 1\n    while j < len(l):\n        if int(l[j]) - int(l[j - 1]) > 1:\n            del l[j:]\n        else:\n            j += 1\n    c = {}\n    for item in l:\n        c[item] = c.get(item, 0) + 1\n    p = 1\n    d = 0\n    if c.get(1, 0) != 0:\n        for k in c:\n            p *= c[k]\n            d += p\n    print(d % (10 ** 9 + 7))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = map(int, input().split(' '))\n    c = {}\n    l = sorted(a)\n    j = 1\n    while j < len(l):\n        if int(l[j]) - int(l[j - 1]) > 1:\n            del l[j:]\n        else:\n            j += 1\n    c = {}\n    for item in l:\n        c[item] = c.get(item, 0) + 1\n    p = 1\n    d = 0\n    if c.get(1, 0) != 0:\n        for k in c:\n            p *= c[k]\n            d += p\n    print(d % (10 ** 9 + 7))", "from collections import Counter\nMOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    numberOfElements = int(input())\n    tempInput = list(map(int, input().split()))\n    freq = Counter(tempInput)\n    freqList = []\n    for i in freq:\n        freqList.append((i, freq[i]))\n    freqList.sort()\n    total = 1\n    previousI = 0\n    result = 0\n    for (i, j) in freqList:\n        if i - 1 == previousI:\n            total *= j\n            previousI = i\n            result = (result + total) % MOD\n            pass\n        else:\n            break\n    print(result)", "mod = int(1000000000.0 + 7)\nMOD = 998244353\n\ndef add(a, b):\n    return (a % mod + b % mod) % mod\n\ndef sub(a, b):\n    return (a - b + mod) % mod\n\ndef mul(a, b):\n    return a % mod * (b % mod) % mod\n\ndef div(a, b):\n    return mul(a, pow(b, mod - 2, mod))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    ans = 0\n    prev = 1\n    i = 0\n    t = 1\n    while i < n:\n        j = i\n        while j < n and arr[j] == t:\n            j += 1\n        if i == j:\n            break\n        val = mul(j - i, prev)\n        ans = add(ans, val)\n        prev = val\n        i = j\n        t += 1\n    print(ans)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "MOD = int(1000000000.0) + 7\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    mp = {}\n    x = list(map(int, input().split()))\n    for i in x:\n        mp[i] = mp.get(i, 0) + 1\n    ans = 0\n    prev = 1\n    for i in range(1, n + 1):\n        temp = prev * mp.get(i, 0)\n        temp %= MOD\n        ans += temp\n        prev = temp\n        ans %= MOD\n    print(ans)", "for i in range(int(input())):\n    M = 1000000007\n    n = int(input())\n    lst = [int(x) for x in input().split()]\n    d = {}\n    for j in lst:\n        if j not in d.keys():\n            d[j] = 1\n        else:\n            d[j] += 1\n    ct = 1\n    ans = 0\n    mul = 1\n    for j in sorted(d.keys()):\n        if j == ct:\n            mul *= d[j]\n            ans += mul\n        else:\n            break\n        ct += 1\n    print(ans % M)", "import sys\nsys.setrecursionlimit(10 ** 6)\n\ndef get_count(arr, i):\n    if i == 0:\n        freq = dict()\n        if arr[0] == 1:\n            freq[1] = 1\n            return (freq, True)\n        return (freq, False)\n    (freq, isokay) = get_count(arr, i - 1)\n    if isokay is True:\n        flag = False\n        if arr[i] == 1:\n            flag = True\n            freq[1] = freq.get(1, 0) + 1\n        elif freq.get(arr[i] - 1, -1) != -1:\n            flag = True\n            freq[arr[i]] = freq.get(arr[i], 0) + freq[arr[i] - 1]\n        return (freq, flag)\n    return (freq, False)\nt = int(input())\nfor z in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    (freq_map, isokay) = get_count(arr, n - 1)\n    ans = 0\n    for key in freq_map:\n        ans += freq_map[key]\n    print(ans % (10 ** 9 + 7))", "ans = []\nnq = int(input())\nfor _ in range(nq):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for ai in a:\n        if ai in d:\n            d[ai] += 1\n        else:\n            d[ai] = 1\n    i = 1\n    count = 0\n    while i in d:\n        if i == 1:\n            curr = d[i]\n            count = d[i]\n        else:\n            curr = curr * d[i]\n            count += curr\n        i += 1\n    val = count % 1000000007\n    ans.append(val)\nprint(*ans, sep='\\n')", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    C = Counter(l)\n    a = []\n    for i in C:\n        a.append((i, C[i]))\n    a.sort()\n    m = int(1000000000.0 + 7)\n    p = 1\n    ans = 0\n    prev = 0\n    for (i, j) in a:\n        if i - 1 == prev:\n            p = p * j\n            ans = (ans + p) % m\n            prev = i\n        else:\n            break\n    print(ans)", "from collections import Counter\nT = int(input())\nfor tc in range(T):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    e = 1\n    count = 0\n    inc = 1\n    m = 1000000007\n    l.sort()\n    d = dict(Counter(l))\n    l = list(set(l))\n    for (i, j) in enumerate(l):\n        inc = d[j] * inc\n        if j == e:\n            count += inc\n            e += 1\n        else:\n            break\n    print(count % m)", "from collections import defaultdict\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dic = defaultdict(int)\n    for i in arr:\n        dic[i] += 1\n    mod = pow(10, 9) + 7\n    if 1 not in dic:\n        print(0)\n        continue\n    ans = dic[1]\n    tot_prev = ans\n    for i in range(2, n + 1):\n        new = tot_prev * dic[i]\n        ans += new % mod\n        tot_prev = new\n    print(ans % mod)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    count = 1\n    j = 1\n    while j < N:\n        if A[j] == A[j - 1] or A[j - 1] == A[j] - 1:\n            count += 1\n            j += 1\n        else:\n            break\n    B = A[0:count]\n    if B[0] != 1:\n        print(0)\n    else:\n        total = 0\n        counter = 1\n        for j in Counter(B).values():\n            counter = counter * j\n            total = total + counter\n        total = total % 1000000007\n        print(total)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "from collections import defaultdict\nm1 = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = defaultdict(int)\n    for i in l:\n        d[i] += 1\n    m = max(l) + 1\n    q = 1\n    r = 0\n    for i in range(1, m):\n        if i in d:\n            q *= d[i]\n            r += q\n        else:\n            break\n    print(r % m1)", "MOD = int(1000000000.0) + 7\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    mp = {}\n    x = list(map(int, input().split()))\n    for i in x:\n        mp[i] = mp.get(i, 0) + 1\n    ans = 0\n    prev = 1\n    for i in range(1, n + 1):\n        temp = prev * mp.get(i, 0)\n        temp %= MOD\n        ans += temp\n        prev = temp\n        ans %= MOD\n    print(ans)", "t = int(input())\nm = 10 ** 9 + 7\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    l = max(a)\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    p = 1\n    ans = 0\n    for i in range(1, l + 1):\n        if d.get(i, 0):\n            p *= d[i]\n            ans += p\n        else:\n            break\n        ans %= m\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    for i in arr:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    t = 1\n    M = int(1000000000.0 + 7)\n    ans = 0\n    prod = 1\n    while t in d:\n        prod = prod * d[t]\n        ans = (ans + prod) % M\n        t += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dic = {}\n    a = 0\n    for i in range(1, n + 1):\n        if i in l:\n            a += 1\n        else:\n            break\n    for i in range(1, a + 1):\n        dic[i] = 0\n    for i in l:\n        if i in dic and i <= a:\n            dic[i] += 1\n    s = 0\n    k = 1\n    for i in dic:\n        s = s + k * dic[i]\n        k = k * dic[i]\n    print(s % 1000000007)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    freq = [0] * (n + 1)\n    for x in map(int, input().split()):\n        if x <= n:\n            freq[x] += 1\n    (cur, ans) = (1, 0)\n    for i in range(1, n + 1):\n        cur = cur * freq[i] % mod\n        ans += cur\n    print(ans % mod)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dic = {}\n    a = 0\n    for i in range(1, n + 1):\n        if i in l:\n            a += 1\n        else:\n            break\n    for i in range(1, a + 1):\n        dic[i] = 0\n    for i in l:\n        if i in dic:\n            dic[i] += 1\n    s = 0\n    k = 1\n    for i in dic:\n        s = s + k * dic[i]\n        k = k * dic[i]\n    print(s % 1000000007)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    modVal = 10 ** 9 + 7\n    freq = Counter(arr)\n    tuples = []\n    for i in freq:\n        tuples.append((i, freq[i]))\n    tuples.sort()\n    ans = 0\n    p = 1\n    prev = 0\n    for (i, j) in tuples:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % modVal\n            prev = i\n        else:\n            break\n    print(ans)", "t = int(input())\nhnr = []\nfor vvc in range(0, t):\n    r = int(input())\n    fcx = str(input())\n    opt = fcx.split(' ')\n    xwq = []\n    for tt in opt:\n        xwq.append(int(tt))\n    hnr.append(xwq)\nfor uu in hnr:\n    hk = {}\n    for bbv in uu:\n        if bbv in hk:\n            hk[bbv] += 1\n        else:\n            hk[bbv] = 1\n    abd = len(uu)\n    sumd = 0\n    pr = 1\n    for ingf in range(1, abd + 1):\n        try:\n            andf = hk[ingf]\n            pr *= andf\n            sumd += pr\n        except:\n            break\n    print(sumd % (10 ** 9 + 7))", "t = int(input())\nhnr = []\nfor vvc in range(0, t):\n    r = int(input())\n    fcx = str(input())\n    opt = fcx.split(' ')\n    xwq = []\n    for tt in opt:\n        xwq.append(int(tt))\n    hnr.append(xwq)\nfor uu in hnr:\n    hk = {}\n    for bbv in uu:\n        if bbv in hk:\n            hk[bbv] += 1\n        else:\n            hk[bbv] = 1\n    abd = len(uu)\n    sumd = 0\n    pr = 1\n    for ingf in range(1, abd + 1):\n        try:\n            andf = hk[ingf]\n            pr *= andf\n            sumd += pr\n        except:\n            break\n    print(sumd % (10 ** 9 + 7))", "t = int(input())\nhnr = []\nfor vvc in range(0, t):\n    r = int(input())\n    fcx = str(input())\n    opt = fcx.split(' ')\n    xwq = []\n    for tt in opt:\n        xwq.append(int(tt))\n    hnr.append(xwq)\nfor uu in hnr:\n    hk = {}\n    for bbv in uu:\n        if bbv in hk:\n            hk[bbv] += 1\n        else:\n            hk[bbv] = 1\n    abd = len(uu)\n    sumd = 0\n    pr = 1\n    for ingf in range(1, abd + 1):\n        try:\n            andf = hk[ingf]\n            pr *= andf\n            sumd += pr\n        except:\n            break\n    print(sumd % (10 ** 9 + 7))", "t = int(input())\nhnr = []\nfor vvc in range(0, t):\n    r = int(input())\n    fcx = str(input())\n    opt = fcx.split(' ')\n    xwq = []\n    for tt in opt:\n        xwq.append(int(tt))\n    hnr.append(xwq)\nfor uu in hnr:\n    hk = {}\n    for bbv in uu:\n        if bbv in hk:\n            hk[bbv] += 1\n        else:\n            hk[bbv] = 1\n    abd = len(uu)\n    sumd = 0\n    pr = 1\n    for ingf in range(1, abd + 1):\n        try:\n            andf = hk[ingf]\n            pr *= andf\n            sumd += pr\n        except:\n            break\n    print(sumd % (10 ** 9 + 7))", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    freq = [0] * (n + 1)\n    for x in map(int, input().split()):\n        if x <= n:\n            freq[x] += 1\n    (cur, ans) = (1, 0)\n    for i in range(1, n + 1):\n        cur = cur * freq[i] % mod\n        ans += cur\n    print(ans % mod)", "for test_cases in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 1000000007\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    x = 1\n    c = 0\n    p = 1\n    while x in d and d[x] > 0:\n        cur = p % m * (d[x] % m) % m\n        c += cur\n        p = cur\n        c = c % m\n        x += 1\n    print(c)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    q = Counter(l)\n    m = 1\n    t = 0\n    for i in range(1, len(q) + 1):\n        if q[i] == 0:\n            break\n        else:\n            t = t + q[i] * m\n            m = max(m, q[i] * m)\n    print(t % 1000000007)", "for test_cases in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 1000000007\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    x = 1\n    c = 0\n    p = 1\n    while x in d:\n        cur = p % m * (d[x] % m) % m\n        c += cur\n        p = cur\n        c = c % m\n        x += 1\n    print(c)", "for test_cases in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 1000000007\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    x = 1\n    c = 0\n    p = 1\n    while x in d and d[x] > 0:\n        cur = p % m * (d[x] % m) % m\n        c += cur\n        p = cur\n        c = c % m\n        x += 1\n    print(c)", "N = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    cnt = [0] * (n + 1)\n    for __ in map(int, input().split()):\n        if __ <= n:\n            cnt[__] += 1\n    curr = 1\n    ans = 0\n    for i in range(1, n + 1):\n        curr = curr * cnt[i] % N\n        ans = (ans + curr) % N\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    prev = 1\n    mod = 10 ** 9 + 7\n    ans = 0\n    d = {}\n    for i in a:\n        d[i] = 1 + d.get(i, 0)\n    for i in range(1, 10 ** 9):\n        if i not in d:\n            break\n        else:\n            temp = prev * d[i]\n            temp = temp % mod\n            ans += temp\n            prev = temp\n            ans = ans % mod\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    prev = 1\n    mod = 10 ** 9 + 7\n    ans = 0\n    d = {}\n    a.sort()\n    for i in a:\n        d[i] = 1 + d.get(i, 0)\n    for i in range(1, 10 ** 9):\n        if i not in d:\n            break\n        else:\n            prev = prev * d[i]\n            ans += prev\n    print(ans % mod)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    count = {}\n    prod = 1\n    res = 0\n    for i in range(N):\n        if count.get(arr[i], 0):\n            count[arr[i]] += 1\n        else:\n            count[arr[i]] = 1\n    for i in range(1, N + 1):\n        if count.get(i, 0):\n            prod *= count[i]\n            res += prod\n        else:\n            prod = 0\n    print(res % mod)", "from collections import Counter\nM = 10 ** 9 + 7\ntest = int(input())\nfor _ in range(test):\n    n = int(input())\n    ls = list(map(int, input().split(' ')))\n    C = Counter(ls)\n    subseq = 0\n    if C[1] == 0:\n        print(0)\n        continue\n    else:\n        subseq = C[1]\n    temp = subseq\n    for i in range(2, n + 1):\n        if C[i] == 0:\n            break\n        else:\n            subseq += C[i] * temp\n            temp = C[i] * temp\n    print(subseq % M)", "from collections import Counter\nMOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    d = Counter(A)\n    res = 0\n    i = 1\n    tmp = 1\n    while d[i] != 0:\n        tmp *= d[i]\n        res += tmp % MOD\n        i += 1\n    print(res % MOD)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    mod = 1000000007\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    d = [[i, d[i]] for i in d]\n    d.sort()\n    d = [[0, 1]] + d\n    ans = 0\n    for i in range(1, len(d)):\n        if d[i][0] != i:\n            print(ans)\n            break\n        d[i][1] = d[i][1] * d[i - 1][1]\n        ans = (ans + d[i][1]) % mod\n    else:\n        print(ans)", "from collections import Counter as cc\nfor t in range(int(input())):\n    m = 1000000007\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = cc(a)\n    c = []\n    for i in b:\n        c.append([i, b[i]])\n    c.sort()\n    p = 1\n    s = 0\n    k = 1\n    for i in c:\n        if i[0] != p:\n            break\n        k *= i[1]\n        s = (s + k) % m\n        p += 1\n    print(s)", "MOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    d = {}\n    for i in range(0, n):\n        if x[i] in d:\n            d[x[i]] += 1\n        else:\n            d[x[i]] = 1\n    v = n\n    for i in range(1, n + 1):\n        if i not in d:\n            v = i - 1\n            break\n    if v == 0:\n        print('0')\n    else:\n        prev = d[1]\n        ans = d[1]\n        for i in range(2, v + 1):\n            t = prev * d[i]\n            ans = (ans + t) % MOD\n            prev = t\n        ans %= MOD\n        print(ans)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if d.get(j) is None:\n            d[j] = 1\n        else:\n            d[j] += 1\n    ans = 0\n    temp = 1\n    for j in range(1, n + 1):\n        if d.get(j) is None:\n            break\n        else:\n            count = 1\n            temp = temp * d[j]\n            ans = ans + temp\n    print(ans % 1000000007)", "mod = 10 ** 9 + 7\n\ndef solve(arr, n):\n    m = {}\n    for i in arr:\n        if i not in m.keys():\n            m[i] = 0\n        m[i] += 1\n    ans = [0] * (n + 1)\n    if 1 not in m.keys():\n        print(0)\n        return\n    ans[1] = m[1]\n    for i in range(2, n + 1):\n        if i not in m.keys():\n            break\n        ans[i] += ans[i - 1] * m[i]\n        ans[i] %= mod\n    res = 0\n    for i in ans:\n        res += i\n        res %= mod\n    print(res)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solve(arr, n)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    ans = 0\n    p = Counter(l)\n    q = []\n    for i in p:\n        q.append((i, p[i]))\n    q.sort()\n    prev = 0\n    k = 1\n    for (i, j) in q:\n        if i - 1 == prev:\n            k = k * j\n            ans = (ans + k) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    k = []\n    if l[0] == 1:\n        k = {1: 1}\n        i = 0\n        while l[i] == l[i + 1] or l[i + 1] == l[i] + 1:\n            if l[i + 1] in k:\n                k[l[i]] += 1\n            else:\n                k[l[i + 1]] = 1\n            i += 1\n            if i >= n - 1:\n                break\n        ans = 1\n        sum = 0\n        h = 10 ** 9 + 7\n        for i in k:\n            ans = ans * k[i] % h\n            sum = sum % h + ans % h\n        print(sum % h)\n    else:\n        print(0)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    p = [int(ele) for ele in input().split()][:n]\n    p.sort()\n    d = Counter(p)\n    if n == 1 and p[0] == 1:\n        print(1)\n        continue\n    l = list(set(p))\n    c = 1\n    for i in range(len(l)):\n        if l[i] != c:\n            break\n        c += 1\n    s = 0\n    k = 1\n    for i in range(1, c):\n        k *= d[i]\n        s = (s + k) % 1000000007\n    print(s)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    freq = [0] * (n + 1)\n    v = list(map(int, input().split()))\n    for x in v:\n        if x <= n:\n            freq[x] += 1\n    (cur, res) = (1, 0)\n    for i in range(1, n + 1):\n        cur = cur * freq[i] % mod\n        res = (res + cur) % mod\n    print(res)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "from collections import Counter\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    listy = []\n    for i in range(1, len(C) + 1):\n        if i + 1 not in C:\n            listy.append(C[i])\n            break\n        else:\n            listy.append(C[i])\n    MOD = 10 ** 9 + 7\n    multiple = 1\n    count = 0\n    for i in listy:\n        multiple *= i\n        count = (count + multiple) % MOD\n    print(count)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MOD = 10 ** 9 + 7\n    C = Counter(arr)\n    ans = 0\n    L = []\n    for i in C:\n        L.append((i, C[i]))\n    L.sort()\n    p = 1\n    prev = 0\n    for (i, j) in L:\n        if i - 1 == prev:\n            p *= j\n            ans = (ans + p) % MOD\n            prev = i\n        else:\n            break\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    s = 0\n    M = 10 ** 9 + 7\n    for j in range(n):\n        if l[j] in d:\n            d[l[j]] = d[l[j]] + 1\n        else:\n            d[l[j]] = 1\n    b = []\n    for j in d:\n        b.append((j, d[j]))\n    b.sort()\n    prev = 0\n    m = 1\n    for (c, d) in b:\n        if c - 1 == prev:\n            m = m * d\n            s = (s + m) % M\n            prev = c\n        else:\n            break\n    print(s)", "from collections import Counter\n\ndef solve(n):\n    a = list(map(int, input().split()))\n    fr = []\n    c = Counter(a)\n    for i in c:\n        fr.append((i, c[i]))\n    fr.sort()\n    mod = 10 ** 9 + 7\n    ans = 0\n    mult = 1\n    prev = 0\n    for (i, j) in fr:\n        if i - 1 == prev:\n            prev = i\n            mult *= j\n            ans = (ans + mult) % mod\n        else:\n            break\n    print(ans)\nfor _ in range(int(input())):\n    n = int(input())\n    solve(n)", "def solve(n):\n    a = list(map(int, input().split()))\n    fr = [0 for i in range(max(a) + 1)]\n    for i in a:\n        if fr[i] == 0:\n            fr[i] = 1\n        else:\n            fr[i] += 1\n    ans = 0\n    mult = 1\n    for i in range(1, len(fr)):\n        if fr[i] == 0:\n            print(ans)\n            return\n        mult *= fr[i]\n        ans = (ans + mult) % (10 ** 9 + 7)\n    print(ans)\nfor _ in range(int(input())):\n    n = int(input())\n    solve(n)", "from collections import Counter\nfor z in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 0\n    ct = 1\n    mp = Counter(l)\n    for i in range(1, 10 ** 9):\n        if i not in mp:\n            break\n        else:\n            ct *= mp[i]\n            ans += ct\n    print(ans % 1000000007)", "from collections import OrderedDict\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    mod = 1000000007\n    h = {}\n    for i in a:\n        if i not in h:\n            h[i] = 1\n        else:\n            h[i] += 1\n    h = OrderedDict(sorted(h.items()))\n    prev = 0\n    p = 1\n    ans = 0\n    for i in h:\n        if i - 1 == prev:\n            p *= h[i]\n            ans += p % mod\n            prev = i\n        else:\n            break\n    print(ans % mod)\n    t -= 1"]