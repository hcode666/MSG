["for I in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (p, q) = ([], [])\n    for i in range(n):\n        if a[i] % 2:\n            p.append(a[i])\n        else:\n            q.append(a[i])\n    if p == [] or q == []:\n        print(-1)\n    else:\n        print(*p + q)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    supp = []\n    for i in l:\n        if i & 1:\n            supp.insert(0, i)\n        else:\n            supp.append(i)\n    if abs(supp[0] - supp[-1]) & 1:\n        print(*supp)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    supp = []\n    for i in l:\n        if i & 1:\n            supp.insert(0, i)\n        else:\n            supp.append(i)\n    if abs(supp[0] - supp[-1]) & 1:\n        print(*supp)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (even, odd) = ([], [])\n    for i in l:\n        if i & 1 == 1:\n            odd.append(i)\n        else:\n            even.append(i)\n    if len(odd) == 0 or len(even) == 0:\n        print(-1)\n    else:\n        print(*odd + even)", "import numpy as np\nt = int(input())\nfor dfshaf in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    eve = 0\n    evel = []\n    odd = 0\n    oddl = []\n    for i in arr:\n        if i % 2:\n            odd += 1\n            oddl.append(i)\n        else:\n            eve += 1\n            evel.append(i)\n    if odd != 0 and eve != 0:\n        print(*evel + oddl)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in l:\n        if i % 2 == 0:\n            even.append(i)\n        elif i % 2 == 1:\n            odd.append(i)\n    if len(even) == 0 or len(odd) == 0:\n        print(-1)\n        continue\n    print(*even + odd)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ev = []\n    od = []\n    for j in l:\n        if j % 2 == 0:\n            ev.append(j)\n        else:\n            od.append(j)\n    if len(ev) == len(l):\n        print(-1)\n    elif len(od) == len(l):\n        print(-1)\n    else:\n        for j in range(len(od)):\n            print(od[j], end=' ')\n        for j in range(len(ev)):\n            print(ev[j], end=' ')\n        print()", "for I in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "(a1, a2) = (0, 1)\nfor _ in range(int(input())):\n    n = int(input())\n    n1 = list(map(int, input().strip().split()))\n    n1.sort()\n    n2 = [i for i in n1 if i % 2]\n    n3 = [i for i in n1 if i % 2 == 0]\n    (o, e) = (len(n2), len(n3))\n    if o == 0 or e == 0:\n        print(-1)\n    else:\n        print(*n2, *n3)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    xodd = [i for i in lst if i % 2 == 1]\n    xeven = [i for i in lst if i % 2 == 0]\n    l1 = len(xodd)\n    l2 = len(xeven)\n    if l2 == 0 or l1 == 0:\n        print(-1)\n    else:\n        x = xeven + xodd\n        print(*x)", "for I in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = []\n    odd = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            even.append(a[i])\n        else:\n            odd.append(a[i])\n    ans = []\n    l_odd = len(odd)\n    l_even = len(even)\n    if l_even == 0 or l_odd == 0:\n        print(-1)\n    else:\n        ans = even + odd\n        print(*ans)", "for i in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list2 = []\n    list3 = []\n    for x in list1:\n        if x % 2 == 0:\n            list2.append(x)\n        else:\n            list3.append(x)\n    if len(list2) != 0 and len(list3) != 0:\n        list2 += list3\n        for z in list2:\n            print(z, end=' ')\n        print('')\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    o = []\n    e = []\n    for i in l:\n        if i % 2 == 0:\n            o.append(i)\n        else:\n            e.append(i)\n    if len(o) == 0 or len(e) == 0:\n        print(-1)\n    else:\n        res = o + e\n        print(*o + e)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    od = []\n    ev = []\n    sod = 0\n    sev = 0\n    for i in l:\n        if i % 2 == 0:\n            ev.append(i)\n        else:\n            od.append(i)\n    if len(ev) == 0 or len(od) == 0:\n        print(-1)\n    else:\n        for o in range(len(od) - 1):\n            sod = sod + abs(od[o] - od[o + 1])\n        for e in range(len(ev) - 1):\n            sev = sev + abs(ev[e] - ev[e + 1])\n        if (sev + sod) % 2 != 0:\n            print(-1)\n        else:\n            for o in od:\n                print(o, end=' ')\n            for e in ev:\n                print(e, end=' ')\n            print()\n    t -= 1", "for I in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "for I in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "for I in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    no = ne = 0\n    for val in lst:\n        if val % 2:\n            no += 1\n        else:\n            ne += 1\n    if no == 0 or ne == 0:\n        print(-1)\n    else:\n        for val in lst:\n            if val % 2:\n                print(val, end=' ')\n        for val in lst:\n            if val % 2 == 0:\n                print(val, end=' ')\n        print()", "for I in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "case = int(input())\nfor _ in range(case):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    res = []\n    even = 0\n    odd = 0\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            even += 1\n            res.append(arr[i])\n    for i in range(n):\n        if arr[i] % 2 != 0:\n            odd += 1\n            res.append(arr[i])\n    if even == 0 or odd == 0:\n        print(-1)\n    else:\n        for val in res:\n            print(val, end=' ')\n        print()", "a = int(input())\nfor i in range(a):\n    N = int(input())\n    array = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    Odd = []\n    Even = []\n    for k in array:\n        if k % 2 == 0:\n            even += 1\n            Even.append(k)\n        else:\n            odd += 1\n            Odd.append(k)\n    if even == N or odd == N:\n        print(-1)\n        continue\n    print(*Odd + Even)", "for I in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "tc = int(input().strip())\nfor t in range(tc):\n    n = int(input().strip())\n    arr = list(map(int, input().split()))\n    (evens, odds) = ([], [])\n    for i in arr:\n        if i % 2 == 0:\n            evens.append(i)\n        else:\n            odds.append(i)\n    if len(evens) == 0 or len(odds) == 0:\n        print(-1)\n    else:\n        for i in odds + evens:\n            print(i, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    list1 = [int(x) for x in input().split()]\n    even = []\n    odd = []\n    for i in range(n):\n        if list1[i] % 2 == 0:\n            even.append(list1[i])\n        else:\n            odd.append(list1[i])\n    if len(odd) == 0 or len(even) == 0:\n        print(-1)\n    else:\n        answer = even + odd\n        answer_to_str = ' '.join([str(elem) for elem in answer])\n        print(answer_to_str)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "for I in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    (n, l) = (IN(), I())\n    (a, b) = ([], [])\n    for i in l:\n        if i & 1:\n            a.append(i)\n        else:\n            b.append(i)\n    if a == [] or b == []:\n        print(-1)\n    else:\n        print(*a + b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list_even = []\n    list_odd = []\n    for i in range(n):\n        if list1[i] % 2 == 0:\n            list_even.append(list1[i])\n        else:\n            list_odd.append(list1[i])\n    if len(list_even) == n or len(list_odd) == n:\n        print(-1)\n    else:\n        s = ''\n        for i in range(len(list_odd)):\n            s = s + str(list_odd[i]) + ' '\n        for i in range(len(list_even)):\n            s = s + str(list_even[i]) + ' '\n        print(s)", "T = int(input())\nfor x in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "for I in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "for _ in range(int(input())):\n    n = int(input())\n    mydict = {0: [], 1: []}\n    for i in map(int, input().split()):\n        if i % 2 == 0:\n            mydict[0].append(i)\n        else:\n            mydict[1].append(i)\n    a = len(mydict[0])\n    b = n - a\n    if min(a, b) == 0:\n        print(-1)\n    else:\n        print(mydict[0][0], end=' ')\n        for i in mydict[0][1:] + mydict[1][:-1]:\n            print(i, end=' ')\n        print(mydict[1][-1])", "for _ in range(int(input())):\n    n = int(input())\n    mydict = {0: [], 1: []}\n    for i in map(int, input().split()):\n        if i % 2 == 0:\n            mydict[0].append(i)\n        else:\n            mydict[1].append(i)\n    a = len(mydict[0])\n    b = n - a\n    if min(a, b) == 0:\n        print(-1)\n    else:\n        print(mydict[0][0], end=' ')\n        for i in mydict[0][1:] + mydict[1][:-1]:\n            print(i, end=' ')\n        print(mydict[1][-1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    e = []\n    o = []\n    for i in l:\n        if i % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    if len(e) == 0 or len(o) == 0:\n        print(-1)\n    else:\n        res = []\n        if len(e) >= len(o):\n            for i in range(len(o)):\n                res.append(o[i])\n                res.append(e[i])\n            for i in range(len(o), len(e)):\n                res.append(e[i])\n        else:\n            for i in range(len(e)):\n                res.append(e[i])\n                res.append(o[i])\n            for i in range(len(e), len(o)):\n                res.append(o[i])\n        print(*res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    e = []\n    o = []\n    for i in l:\n        if i % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    if len(e) == 0 or len(o) == 0:\n        print(-1)\n    else:\n        res = []\n        if len(e) >= len(o):\n            for i in range(len(o)):\n                res.append(o[i])\n                res.append(e[i])\n            for i in range(len(o), len(e)):\n                res.append(e[i])\n        else:\n            for i in range(len(e)):\n                res.append(e[i])\n                res.append(o[i])\n            for i in range(len(e), len(o)):\n                res.append(o[i])\n        print(*res)", "for I in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r1 = []\n    r2 = []\n    for i in range(n):\n        if a[i] % 2:\n            r1.append(a[i])\n        else:\n            r2.append(a[i])\n    if r1 == [] or r2 == []:\n        print(-1)\n    else:\n        print(*r1 + r2)", "for i in range(int(input())):\n    n = int(input())\n    e = []\n    o = []\n    l = list(map(int, input().split()))\n    for i in l:\n        if i % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    if e == [] or o == []:\n        print(-1)\n    else:\n        print(*e + o)", "from collections import deque\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ae = deque()\n    ao = deque()\n    for i in a:\n        if i % 2 == 0:\n            ae.append(i)\n        else:\n            ao.append(i)\n    if len(ae) == 0 or len(ao) == 0:\n        print(-1)\n    else:\n        l = deque()\n        for i in ae:\n            l.append(i)\n        for i in ao:\n            l.append(i)\n        for i in l:\n            print(i, end=' ')\n        print()", "from collections import deque\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ae = []\n    ao = []\n    for i in a:\n        if i % 2 == 0:\n            ae.append(i)\n        else:\n            ao.append(i)\n    if len(ae) == 0 or len(ao) == 0:\n        print(-1)\n    else:\n        l = []\n        for i in ae:\n            l.append(i)\n        for i in ao:\n            l.append(i)\n        for i in l:\n            print(i, end=' ')\n        print()", "for _ in range(int(input())):\n    N = int(input())\n    l = list(map(int, input().split()))\n    odd_list = []\n    even_list = []\n    for x in l:\n        if x % 2 == 0:\n            even_list.append(x)\n        else:\n            odd_list.append(x)\n    if len(even_list) == 0 or len(odd_list) == 0:\n        print(-1)\n    else:\n        for x in even_list:\n            print(x, end=' ')\n        for x in odd_list:\n            print(x, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = []\n    odd = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            even.append(a[i])\n        else:\n            odd.append(a[i])\n    if len(odd) == 0 or len(even) == 0:\n        print(-1)\n    else:\n        print(' '.join((str(x) for x in odd + even)))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    e = []\n    o = []\n    for i in l:\n        if i % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    if len(e) == 0 or len(o) == 0:\n        print('-1')\n    else:\n        for i in e:\n            print(i, end=' ')\n        for i in range(len(o) - 1):\n            print(o[i], end=' ')\n        print(o[len(o) - 1])", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    even_arr = []\n    odd_arr = []\n    for j in arr:\n        if j & 1:\n            odd_arr.append(j)\n        else:\n            even_arr.append(j)\n    if len(even_arr) == 0 or len(odd_arr) == 0:\n        print(-1)\n    else:\n        print(*even_arr, *odd_arr)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    (o, e) = (0, 0)\n    New = []\n    for j in A:\n        if j % 2 == 0:\n            e += 1\n            New = [j] + New\n        else:\n            o += 1\n            New.append(j)\n    if o == 0 or e == 0:\n        print(-1)\n    else:\n        for j in New:\n            print(j, end=' ')\n        print('')", "def soln(n, arr):\n    odds = []\n    eves = []\n    for i in arr:\n        if i & 1:\n            odds.append(i)\n        else:\n            eves.append(i)\n    if not len(odds) or not len(eves):\n        return [-1]\n    return eves + odds\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*soln(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    evens = []\n    odds = []\n    for i in range(n):\n        if array[i] & 1:\n            odds.append(array[i])\n        else:\n            evens.append(array[i])\n    if len(odds) == 0 or len(evens) == 0:\n        print(-1)\n        continue\n    print(*evens, *odds)", "for M in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in a:\n        if i % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n    if len(odd) != 0 and len(even) != 0:\n        print(*even + odd)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    evens = []\n    odds = []\n    for i in range(n):\n        if array[i] & 1:\n            odds.append(array[i])\n        else:\n            evens.append(array[i])\n    if len(odds) == 0 or len(evens) == 0:\n        print(-1)\n        continue\n    print(*evens, *odds)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().lstrip().split()))\n    even = []\n    odd = []\n    li = []\n    j = 0\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            even.append(arr[i])\n        else:\n            odd.append(arr[i])\n    if len(even) == 0 or len(odd) == 0:\n        print(-1)\n    else:\n        for i in range(len(even)):\n            li.append(even[i])\n        for j in range(len(odd)):\n            li.append(odd[j])\n        print(*li, sep=' ')", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    arr = list(map(int, input().lstrip().split()))\n    even = []\n    odd = []\n    lovely = []\n    j = 0\n    for f in range(x):\n        if arr[f] % 2 == 0:\n            even.append(arr[f])\n        else:\n            odd.append(arr[f])\n    if len(even) == 0 or len(odd) == 0:\n        print(-1)\n    else:\n        for f in range(len(even)):\n            lovely.append(even[f])\n        for j in range(len(odd)):\n            lovely.append(odd[j])\n        print(*lovely, sep=' ')", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    arr = list(map(int, input().lstrip().split()))\n    even = []\n    odd = []\n    lovely = []\n    j = 0\n    for f in range(x):\n        if arr[f] % 2 == 0:\n            even.append(arr[f])\n        else:\n            odd.append(arr[f])\n    if len(even) == 0 or len(odd) == 0:\n        print(-1)\n    else:\n        for f in range(len(even)):\n            lovely.append(even[f])\n        for j in range(len(odd)):\n            lovely.append(odd[j])\n        print(*lovely, sep=' ')", "tests = int(input())\nfor t in range(tests):\n    N = int(input())\n    arr = map(int, input().split(' '))\n    counts = {'e': [], 'o': []}\n    for i in arr:\n        if i % 2 == 0:\n            counts['e'].append(i)\n        else:\n            counts['o'].append(i)\n    evens = len(counts['e'])\n    odds = len(counts['o'])\n    new_arr = []\n    if odds == 0 or evens == 0:\n        print(-1)\n    else:\n        for i in range(evens):\n            new_arr.append(str(counts['e'][i]))\n        for i in range(odds):\n            new_arr.append(str(counts['o'][i]))\n        print(' '.join(new_arr))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().lstrip().split()))\n    even = []\n    odd = []\n    li = []\n    j = 0\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            even.append(arr[i])\n        else:\n            odd.append(arr[i])\n    if len(even) == 0 or len(odd) == 0:\n        print(-1)\n    else:\n        for i in range(len(even)):\n            li.append(even[i])\n        for j in range(len(odd)):\n            li.append(odd[j])\n        print(*li, sep=' ')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().lstrip().split()))\n    even = []\n    odd = []\n    li = []\n    j = 0\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            even.append(arr[i])\n        else:\n            odd.append(arr[i])\n    if len(even) == 0 or len(odd) == 0:\n        print(-1)\n    else:\n        for i in range(len(even)):\n            li.append(even[i])\n        for j in range(len(odd)):\n            li.append(odd[j])\n        print(*li, sep=' ')", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    el = []\n    ol = []\n    ec = 0\n    oc = 0\n    for i in l:\n        if i % 2 == 0:\n            el.append(i)\n            ec += 1\n        else:\n            ol.append(i)\n            oc += 1\n    if oc == 0 or ec == 0:\n        print(-1)\n    else:\n        print(*el, *ol)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = []\n    d = []\n    for i in a:\n        if i % 2 == 0:\n            c.append(i)\n        else:\n            d.append(i)\n    if len(d) == 0 or len(c) == 0:\n        print(-1)\n    else:\n        for x in c + d:\n            print(x, end=' ')\n        print()", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = []\n    d = []\n    for i in a:\n        if i % 2 == 0:\n            c.append(i)\n        else:\n            d.append(i)\n    if len(d) == 0 or len(c) == 0:\n        print(-1)\n    else:\n        for x in c + d:\n            print(x, end=' ')\n        print()", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    odd = [ai for ai in a if ai % 2 == 1]\n    even = [ai for ai in a if ai % 2 == 0]\n    if len(odd) == 0 or (len(even) == 0 and len(odd) != 1):\n        print(-1)\n    else:\n        print(*odd, *even)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    odd = [ai for ai in a if ai % 2 == 1]\n    even = [ai for ai in a if ai % 2 == 0]\n    if len(odd) == 0 or (len(even) == 0 and len(odd) != 1):\n        print(-1)\n    else:\n        print(*odd, *even)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = []\n    q = []\n    print()\n    for i in l:\n        if i % 2 == 0:\n            p.append(i)\n        else:\n            q.append(i)\n    if len(p) == 0 or len(q) == 0:\n        print(-1)\n    else:\n        for x in p + q:\n            print(x, end=' ')", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    el = []\n    ol = []\n    for i in l:\n        if i % 2 == 0:\n            el.append(i)\n        else:\n            ol.append(i)\n    if len(ol) == 0:\n        print(-1)\n    elif len(el) == 0 and len(ol) != 1:\n        print(-1)\n    else:\n        print(*ol, *el)", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "def isEven(num):\n    return not num & 1\n\ndef adjacent(arr, n):\n    odd = []\n    even = []\n    for el in arr:\n        if isEven(el):\n            even.append(el)\n        else:\n            odd.append(el)\n    if not odd or not even:\n        return [-1]\n    else:\n        return even + odd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*adjacent(arr, n))", "t = int(input())\nfor i in range(t):\n    n1 = int(input())\n    list1 = list(map(int, input().split()))\n    list1.sort()\n    sum1 = [i for i in list1 if i % 2 != 0]\n    sum2 = n1 - len(sum1)\n    l1 = []\n    l2 = []\n    if len(sum1) == n1:\n        print(-1)\n    elif sum2 == n1:\n        print(-1)\n    else:\n        for i in list1:\n            if i % 2 != 0:\n                l1.append(i)\n            else:\n                l2.append(i)\n        l2.extend(l1)\n        print(*l2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    num = list(map(int, input().split()))\n    (e, o) = ([], [])\n    for x in num:\n        if x % 2 == 0:\n            e.append(x)\n        else:\n            o.append(x)\n    if len(o) == 0 or len(e) == 0:\n        print(-1)\n    else:\n        for x in o:\n            print(x, end=' ')\n        for x in e:\n            print(x, end=' ')\n        print('')", "def out(x):\n    for i in x:\n        print(i, end=' ')\n    print('')\nntc = int(input())\nfor tc in range(ntc):\n    length = int(input())\n    arr = [int(x) for x in input().split()]\n    arrodd = [x for x in arr if x % 2 == 1]\n    arreven = [x for x in arr if x % 2 == 0]\n    if len(arrodd) == 0 or len(arreven) == 0:\n        print(-1)\n        continue\n    x = arrodd + arreven\n    out(x)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = [a & 1 for a in A]\n    if sum(B) in [0, N]:\n        print(-1)\n        continue\n    B = list(enumerate(B))\n    B.sort(key=lambda x: x[1])\n    print(*[A[b[0]] for b in B])"]