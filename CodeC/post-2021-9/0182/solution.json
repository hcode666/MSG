["def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    for j in set(l):\n        l1.append(j + l.count(j) - 1)\n    print(max(l1))", "for _ in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))[:n]\n    s = list(set(h))\n    (l, l1) = ([], [])\n    for i in range(len(s)):\n        l.append(h.count(s[i]))\n        l1.append(s[i] + l[i] - 1)\n    print(max(l1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    for j in set(l):\n        l1.append(j + l.count(j) - 1)\n    print(max(l1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for j in set(a):\n        b.append(j + a.count(j) - 1)\n    print(max(b))", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for j in set(a):\n        b.append(j + a.count(j) - 1)\n    print(max(b))", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    cnt = 0\n    s = 0\n    if len(l) == 1:\n        print(l[0])\n    else:\n        for i in range(n - 1, -1, -1):\n            if l[i - 1] == l[i]:\n                cnt += 1\n            else:\n                if s < l[i] + cnt:\n                    s = l[i] + cnt\n                cnt = 0\n        print(s)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = []\n    for i in set(l):\n        a.append(i + l.count(i) - 1)\n    print(max(a))", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for j in set(a):\n        b.append(j + a.count(j) - 1)\n    print(max(b))", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for j in set(a):\n        b.append(j + a.count(j) - 1)\n    print(max(b))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    h = Counter(map(int, input().split()))\n    max_value = 0\n    for key in h:\n        max_value = max(max_value, key + h[key] - 1)\n    print(max_value)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    h = Counter(map(int, input().split()))\n    max_value = 0\n    for key in h:\n        max_value = max(max_value, key + h[key] - 1)\n    print(max_value)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    h = Counter(map(int, input().split()))\n    max_h = 0\n    for key in h:\n        max_h = max(max_h, key + h[key] - 1)\n    print(max_h)", "for _ in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    c = []\n    if n == 1:\n        print(h[0])\n    else:\n        h1 = list(set(h))\n        for i in h1:\n            d = h.count(i)\n            c = c + [i + d - 1]\n        print(max(c))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = {}\n    for i in a:\n        b[i] = b.get(i, 0) + 1\n    max_jump = 0\n    for (x, y) in b.items():\n        max_jump = max([max_jump, x + y - 1])\n    print(max_jump)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = {}\n    for i in a:\n        b[i] = b.get(i, 0) + 1\n    max_jump = 0\n    for (x, y) in b.items():\n        max_jump = max([max_jump, x + y - 1])\n    print(max_jump)", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    h = list(map(int, input().split()))\n    height = []\n    for i in set(h):\n        height.append(i + h.count(i) - 1)\n    print(max(height))\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    n_list = list(map(int, input().split()))\n    x = max(set(n_list), key=n_list.count) + n_list.count(max(set(n_list), key=n_list.count)) - 1\n    y = max(n_list) + n_list.count(max(n_list)) - 1\n    print(x if x > y else y)", "for i in range(int(input())):\n    n = int(input())\n    h = [int(num) for num in input().split()]\n    ct = []\n    if n == 1:\n        print(h[0])\n    else:\n        d = list(set(h))\n        for i in d:\n            c = h.count(i)\n            ct = ct + [i + c - 1]\n        print(max(ct))", "for i in range(int(input())):\n    n = int(input())\n    h = [int(num) for num in input().split()]\n    c = list(set(h))\n    (a, b) = ([], [])\n    for j in range(len(c)):\n        a.append(h.count(c[j]))\n        b.append(c[j] + a[j] - 1)\n    print(max(b))", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        d = {}\n        for h in arr:\n            if h in d:\n                d[h] += 1\n            else:\n                d[h] = 1\n        amax = max(arr)\n        for h in d.keys():\n            if h + d[h] - 1 > amax:\n                amax = h + d[h] - 1\n        print(amax)\nexcept Exception:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    mp = {}\n    for i in range(n):\n        if l[i] not in mp:\n            mp[l[i]] = 1\n        else:\n            mp[l[i]] += 1\n    max_ht = -float('inf')\n    for i in mp:\n        max_ht = max(i + (mp[i] - 1), max_ht)\n    print(max_ht)", "t = int(input())\nlists = []\nfor i in range(t):\n    n = int(input())\n    l = input().split(' ')\n    for i in range(len(l)):\n        l[i] = int(l[i])\n    d = {}\n    if n == 1:\n        lists.append(l[0])\n    else:\n        for i in range(len(l)):\n            d[l[i]] = 0\n        for i in range(len(l)):\n            d[l[i]] += 1\n        y2 = sorted(d.items(), key=lambda kv: (kv[1], kv[0]))\n        ans = 0\n        for i in range(len(y2)):\n            a1 = y2[i][0]\n            a2 = y2[i][1]\n            bb = a1 + a2 - 1\n            if ans < bb:\n                ans = bb\n        lists.append(ans)\nfor i in range(len(lists)):\n    print(lists[i])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    L = sorted(list(map(int, input().strip().split())))\n    D = {}\n    F = []\n    for item in L:\n        if item in D.keys():\n            continue\n        D[item] = L.count(item)\n        F.append(int(item) + int(D[item] - 1))\n    print(max(F))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    L = sorted(list(map(int, input().strip().split())))\n    D = {}\n    F = []\n    for item in L:\n        if item in D.keys():\n            continue\n        D[item] = L.count(item)\n        F.append(int(item) + int(D[item] - 1))\n    print(max(F))", "t = int(input())\nfor t in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    d = {}\n    for a in arr:\n        if a in d:\n            d[a] += 1\n        else:\n            d[a] = 1\n    max_h = 0\n    for key in d:\n        max_h = max(max_h, key + d[key] - 1)\n    print(max_h)", "for t in range(int(input())):\n    input()\n    hj = [int(i) for i in input().split()]\n    ploy = 0\n    for i in set(hj):\n        if ploy < i + hj.count(i) - 1:\n            ploy = i + hj.count(i) - 1\n    print(ploy)", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "def pushpaRaj(towerHeights):\n    counts = {}\n    maxCount = 0\n    for i in range(len(towerHeights)):\n        if counts.get(towerHeights[i]) == None:\n            counts[towerHeights[i]] = 1\n        else:\n            counts[towerHeights[i]] += 1\n        if towerHeights[i] + counts[towerHeights[i]] - 1 > maxCount:\n            maxCount = towerHeights[i] + counts[towerHeights[i]] - 1\n    return max(maxCount, max(counts))\nnTests = int(input())\nfor i in range(nTests):\n    nTowers = int(input())\n    towerHeights = list(map(int, input().split(' ')))\n    print(pushpaRaj(towerHeights))", "def pushpaRaj(towerHeights):\n    counts = {}\n    maxCount = 0\n    for i in range(len(towerHeights)):\n        if counts.get(towerHeights[i]) == None:\n            counts[towerHeights[i]] = 1\n        else:\n            counts[towerHeights[i]] += 1\n        if towerHeights[i] + counts[towerHeights[i]] - 1 > maxCount:\n            maxCount = towerHeights[i] + counts[towerHeights[i]] - 1\n    return max(maxCount, max(counts))\nnTests = int(input())\nfor i in range(nTests):\n    nTowers = int(input())\n    towerHeights = list(map(int, input().split(' ')))\n    print(pushpaRaj(towerHeights))", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    a = list(map(int, input().split()))\n    s = set(a)\n    x = 0\n    for i in s:\n        x = max(x, a.count(i) + i - 1)\n    print(x)", "t = int(input())\nfor ni in range(t):\n    n = int(input())\n    h = [int(i) for i in input().split()]\n    s = set(h)\n    m = 0\n    for i in s:\n        m = max(m, h.count(i) + i - 1)\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    key = set(arr)\n    ans = 0\n    for i in key:\n        ans = max(ans, arr.count(i) + i - 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    key = set(arr)\n    ans = 0\n    for i in key:\n        ans = max(ans, arr.count(i) + i - 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    key = set(arr)\n    ans = 0\n    for i in key:\n        ans = max(ans, arr.count(i) + i - 1)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    H = set(h)\n    b = 0\n    for i in H:\n        v = h.count(i) + i - 1\n        if v > b:\n            b = v\n    print(b)", "try:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        d = {}\n        for h in arr:\n            if h in d:\n                d[h] += 1\n            else:\n                d[h] = 1\n        amax = max(arr)\n        for h in d.keys():\n            if h + d[h] - 1 > amax:\n                amax = h + d[h] - 1\n        print(amax)\nexcept Exception:\n    pass", "testcases = int(input())\nfor i in range(testcases):\n    n = int(input())\n    data = list(map(int, input().split()))\n    if len(data) == 1:\n        print(max(data))\n    else:\n        c = 0\n        m = 0\n        data.sort()\n        for i in range(n - 1, 0, -1):\n            if data[i] == data[i - 1]:\n                c = c + 1\n            elif m < data[i] + c:\n                m = data[i] + c\n                c = 0\n        print(m)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    if len(l) == 1:\n        print(l[0])\n    else:\n        m = 0\n        c = 0\n        for i in range(n - 1, 0, -1):\n            if l[i] == l[i - 1]:\n                c += 1\n            elif m < l[i] + c:\n                m = l[i] + c\n                c = 0\n        print(m)", "for i in range(int(input())):\n    k = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    if len(a) == 1:\n        print(a[0])\n    else:\n        m = 0\n        c = 0\n        for i in range(k - 1, 0, -1):\n            if a[i] == a[i - 1]:\n                c += 1\n            elif m < a[i] + c:\n                m = a[i] + c\n                c = 0\n        print(m)", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    if len(a) == 1:\n        print(a[0])\n    else:\n        m = 0\n        c = 0\n        for i in range(k - 1, 0, -1):\n            if a[i] == a[i - 1]:\n                c += 1\n            elif m < a[i] + c:\n                m = a[i] + c\n                c = 0\n        print(m)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    new = set(arr)\n    maxx = 0\n    for i in new:\n        temp = arr.count(i) + i - 1\n        maxx = max(temp, maxx)\n    print(maxx)", "n = int(input())\nfor _ in range(n):\n    k = int(input())\n    l = list(map(int, input().split()))\n    maxi = 0\n    for i in set(l):\n        new = l.count(i)\n        cou = new + i - 1\n        if cou > maxi:\n            maxi = cou\n    print(maxi)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    c = 0\n    for j in l:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    for k in d:\n        c = max(c, k + d[k] - 1)\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    new = set(arr)\n    maxx = 0\n    for i in new:\n        temp = arr.count(i) + i - 1\n        maxx = max(temp, maxx)\n    print(maxx)", "n = int(input())\nfor _ in range(n):\n    k = int(input())\n    l = list(map(int, input().split()))\n    maxi = 0\n    for i in set(l):\n        new = l.count(i)\n        cou = new + i - 1\n        if cou > maxi:\n            maxi = cou\n    print(maxi)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    new = set(arr)\n    maxx = 0\n    for i in new:\n        temp = arr.count(i) + i - 1\n        maxx = max(temp, maxx)\n    print(maxx)", "for _ in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    temp = []\n    for i in set(h):\n        temp.append(i + h.count(i) - 1)\n    temp.append(max(h))\n    print(max(temp))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    new = set(arr)\n    maxx = 0\n    for i in new:\n        temp = arr.count(i) + i - 1\n        maxx = max(temp, maxx)\n    print(maxx)", "for i in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    H = set(h)\n    b = 0\n    for i in H:\n        v = h.count(i) + i - 1\n        if v > b:\n            b = v\n    print(b)", "for j in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    count = 0\n    maxi = max(l)\n    for k in range(n - 1):\n        if l[k] == l[k + 1]:\n            count = count + 1\n        else:\n            if count + l[k] > maxi:\n                maxi = count + l[k]\n            count = 0\n    if l[n - 1] == l[n - 2]:\n        count = l.count(l[n - 1])\n        if maxi < l[n - 1] + count - 1:\n            maxi = l[n - 1] + count - 1\n    print(maxi)", "for i in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    H = set(h)\n    b = 0\n    for i in H:\n        v = h.count(i) + i - 1\n        if v > b:\n            b = v\n    print(b)", "for i in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    H = set(h)\n    b = 0\n    for i in H:\n        v = h.count(i) + i - 1\n        if v > b:\n            b = v\n    print(b)", "from collections import Counter\nfor tc in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    c = Counter(k)\n    z = [k + v - 1 for (k, v) in c.items()]\n    print(max(max(z), max(k)))", "for _ in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    h_set = list(set(h))\n    best = 0\n    for v in h_set:\n        c = h.count(v)\n        height = v + c - 1\n        if height > best:\n            best = height\n    print(best)", "from collections import Counter\nfor tc in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    c = Counter(h)\n    r = [k + v - 1 for (k, v) in c.items()]\n    print(max(max(r), max(h)))", "for _ in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    h_set = list(set(h))\n    best = 0\n    for v in h_set:\n        c = h.count(v)\n        height = v + c - 1\n        if height > best:\n            best = height\n    print(best)", "from collections import Counter\ntestcase = int(input())\nfor i in range(testcase):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    cnt = Counter(lst)\n    best = [j + k - 1 for (j, k) in cnt.items()]\n    print(max(best))", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    d = dict()\n    for i in range(0, len(a)):\n        if a[i] not in d:\n            d[a[i]] = 1\n        else:\n            d[a[i]] += 1\n    x = []\n    for (i, j) in d.items():\n        x.append(i + j)\n    print(max(max(x) - 1, max(a)))", "def mostFrequent(arr, n):\n    max_count = 1\n    res = arr[0]\n    curr_count = 1\n    for i in range(1, n):\n        if arr[i] == arr[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        if curr_count > max_count:\n            max_count = curr_count\n            res = arr[i - 1]\n    return res\nfor test in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(l[0])\n    else:\n        l.sort(reverse=True)\n        mx = mostFrequent(l, n)\n        if mx + l.count(mx) - 1 > max(l):\n            print(mx + l.count(mx) - 1)\n        else:\n            print(max(l) + l.count(max(l)) - 1)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    d = dict()\n    for i in range(0, len(a)):\n        if a[i] not in d:\n            d[a[i]] = 1\n        else:\n            d[a[i]] += 1\n    x = []\n    for (i, j) in d.items():\n        x.append(i + j)\n    print(max(max(x) - 1, max(a)))", "def mostFrequent(arr, n):\n    max_count = 1\n    res = arr[0]\n    curr_count = 1\n    for i in range(1, n):\n        if arr[i] == arr[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        if curr_count > max_count:\n            max_count = curr_count\n            res = arr[i - 1]\n    return res\nfor test in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(l[0])\n    else:\n        l.sort(reverse=True)\n        mx = mostFrequent(l, n)\n        if mx + l.count(mx) - 1 > max(l):\n            print(mx + l.count(mx) - 1)\n        else:\n            print(max(l) + l.count(max(l)) - 1)", "def mostFrequent(arr, n):\n    max_count = 1\n    res = arr[0]\n    curr_count = 1\n    for i in range(1, n):\n        if arr[i] == arr[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        if curr_count > max_count:\n            max_count = curr_count\n            res = arr[i - 1]\n    return res\nfor test in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(l[0])\n    else:\n        l.sort(reverse=True)\n        mx = mostFrequent(l, n)\n        if mx + l.count(mx) - 1 > max(l):\n            print(mx + l.count(mx) - 1)\n        else:\n            print(max(l) + l.count(max(l)) - 1)", "def mostFrequent(arr, n):\n    max_count = 1\n    res = arr[0]\n    curr_count = 1\n    for i in range(1, n):\n        if arr[i] == arr[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        if curr_count > max_count:\n            max_count = curr_count\n            res = arr[i - 1]\n    return res\nfor test in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(l[0])\n    else:\n        l.sort(reverse=True)\n        mx = mostFrequent(l, n)\n        if mx + l.count(mx) - 1 > max(l):\n            print(mx + l.count(mx) - 1)\n        else:\n            print(max(l) + l.count(max(l)) - 1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    c = Counter(h)\n    best = [k + v - 1 for (k, v) in c.items()]\n    print(max(max(best), max(h)))", "from collections import Counter\nfor tc in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    c = Counter(h)\n    best = [k + v - 1 for (k, v) in c.items()]\n    print(max(max(best), max(h)))", "from collections import Counter\nfor tc in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    c = Counter(h)\n    best = [k + v - 1 for (k, v) in c.items()]\n    print(max(max(best), max(h)))", "from collections import Counter\nfor tc in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    c = Counter(h)\n    best = [k + v - 1 for (k, v) in c.items()]\n    print(max(max(best), max(h)))", "for _ in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    h_set = list(set(h))\n    best = 0\n    for v in h_set:\n        c = h.count(v)\n        height = v + c - 1\n        if height > best:\n            best = height\n    print(best)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    h = list(map(int, input().split()))\n    a = list(set(h))\n    pushpa = []\n    for i in range(len(a)):\n        count = a[i] + h.count(a[i]) - 1\n        pushpa.append(count)\n    print(max(pushpa))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    h = list(map(int, input().split()))\n    a = list(set(h))\n    pushpa = []\n    for i in range(len(a)):\n        count = a[i] + h.count(a[i]) - 1\n        pushpa.append(count)\n    print(max(pushpa))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = max(lst)\n    d = {i: lst.count(i) for i in set(lst)}\n    for i in d:\n        res = max(d[i] + i - 1, res)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = max(lst)\n    d = {i: lst.count(i) for i in set(lst)}\n    for i in d:\n        res = max(d[i] + i - 1, res)\n    print(res)", "for _ in range(int(input())):\n    p = []\n    N = int(input())\n    l = list(map(int, input().split()))\n    for i in set(l):\n        p = p + [i + l.count(i) - 1]\n    print(max(p))", "for _ in range(int(input())):\n    p = []\n    N = int(input())\n    l = list(map(int, input().split()))\n    for i in set(l):\n        p = p + [i + l.count(i) - 1]\n    print(max(p))", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    heights = list(map(int, input().split()))\n    sorted_heights = sorted(heights)\n    my_dict = {}\n    for height in sorted_heights:\n        if height in my_dict:\n            my_dict[height] += 1\n        else:\n            my_dict[height] = height\n    print(max(my_dict.values()))", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    heights = list(map(int, input().split()))\n    sorted_heights = sorted(heights)\n    my_dict = {}\n    for height in sorted_heights:\n        if height in my_dict:\n            my_dict[height] += 1\n        else:\n            my_dict[height] = height\n    print(max(my_dict.values()))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = max(lst)\n    d = {i: lst.count(i) for i in set(lst)}\n    for i in d:\n        res = max(d[i] + i - 1, res)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = max(lst)\n    d = {i: lst.count(i) for i in set(lst)}\n    for i in d:\n        res = max(d[i] + i - 1, res)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    s = sorted(list(map(int, input().split())))\n    c = 1\n    num = 0\n    maxnum = 0\n    if n == 1:\n        print(s[0])\n    else:\n        for i in range(n - 1):\n            if s[i] == s[i + 1]:\n                c += 1\n            else:\n                num = s[i] + c - 1\n                maxnum = max(num, maxnum)\n                c = 1\n        num = s[n - 1] + c - 1\n        maxnum = max(num, maxnum)\n        print(maxnum)", "for _ in range(int(input())):\n    n = int(input())\n    s = sorted(list(map(int, input().split())))\n    c = 1\n    num = 0\n    maxnum = 0\n    if n == 1:\n        print(s[0])\n    else:\n        for i in range(n - 1):\n            if s[i] == s[i + 1]:\n                c += 1\n            else:\n                num = s[i] + c - 1\n                maxnum = max(num, maxnum)\n                c = 1\n        num = s[n - 1] + c - 1\n        maxnum = max(num, maxnum)\n        print(maxnum)", "for _ in range(int(input())):\n    n = int(input())\n    s = sorted(list(map(int, input().split())))\n    c = 1\n    num = 0\n    maxnum = 0\n    if n == 1:\n        print(s[0])\n    else:\n        for i in range(n - 1):\n            if s[i] == s[i + 1]:\n                c += 1\n            else:\n                num = s[i] + c - 1\n                maxnum = max(num, maxnum)\n                c = 1\n        num = s[n - 1] + c - 1\n        maxnum = max(num, maxnum)\n        print(maxnum)", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr1 = Counter(arr)\n    ans = 0\n    for i in arr1:\n        ans = max(ans, i + arr1[i] - 1)\n    print(ans)", "def maxHeight(List):\n    return max(set(List), key=List.count)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = maxHeight(a) + a.count(maxHeight(a)) - 1\n    y = max(a) + a.count(max(a)) - 1\n    print(x if x > y else y)", "from collections import Counter\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr2 = Counter(arr)\n    ans = 0\n    for i in arr2:\n        ans = max(ans, i + arr2[i] - 1)\n    print(ans)", "from collections import Counter\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr2 = Counter(arr)\n    ans = 0\n    for i in arr2:\n        ans = max(ans, i + arr2[i] - 1)\n    print(ans)", "for i in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    h = {}\n    for j in l:\n        if j in h:\n            h[j] = h[j] + 1\n        else:\n            h[j] = 1\n    ans = 0\n    for j in l:\n        ans = max(ans, h[j] + j - 1)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    ans = 0\n    for j in l:\n        ans = max(ans, j + d[j] - 1)\n    print(ans)"]