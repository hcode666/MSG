["t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(b[i], d[a[i]])\n    if len(d) < k:\n        print(-1)\n    else:\n        array = []\n        for dd in d:\n            array.append(d[dd])\n        array.sort()\n        sum = 0\n        for i in range(k):\n            sum += array[i]\n        print(sum)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    if len(set(a)) < k:\n        print(-1)\n    else:\n        d = {}\n        for i in range(n):\n            d[a[i]] = min(d.get(a[i], 10 ** 5), b[i])\n        v = list(d.values())\n        v.sort()\n        print(sum(v[:k]))", "for tc in range(int(input())):\n    (n, kdish) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    kmap = {}\n    for i in range(n):\n        if a[i] not in kmap:\n            kmap[a[i]] = b[i]\n        else:\n            kmap[a[i]] = min(b[i], kmap[a[i]])\n    if len(kmap) < kdish:\n        print(-1)\n    else:\n        arr = []\n        for k in kmap:\n            arr.append(kmap[k])\n        arr.sort()\n        tot = 0\n        for i in range(kdish):\n            tot += arr[i]\n        print(tot)", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    category = list(map(int, input().split()))\n    food_time = list(map(int, input().split()))\n    food = {}\n    for j in range(n):\n        if category[j] in food:\n            Previous_time = food[category[j]]\n            if Previous_time > food_time[j]:\n                food[category[j]] = food_time[j]\n        else:\n            food[category[j]] = food_time[j]\n    if len(food) >= k:\n        min_time = sorted(list(food.values()))\n        print(sum(min_time[0:k]))\n    else:\n        print('-1')", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    category = list(map(int, input().split()))\n    food_time = list(map(int, input().split()))\n    food = {}\n    for j in range(n):\n        if category[j] in food:\n            Previous_time = food[category[j]]\n            if Previous_time > food_time[j]:\n                food[category[j]] = food_time[j]\n        else:\n            food[category[j]] = food_time[j]\n    if len(food) >= k:\n        min_time = sorted(list(food.values()))\n        print(sum(min_time[0:k]))\n    else:\n        print('-1')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "from collections import defaultdict\nT = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    cat = defaultdict(lambda : 1000000)\n    for i in range(n):\n        cat[a[i]] = min(cat[a[i]], b[i])\n    times = list(cat.values())\n    if len(times) < k:\n        print(-1)\n        continue\n    times.sort()\n    total = 0\n    for i in range(k):\n        total += times[i]\n    print(total)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    time = {}\n    for j in range(0, n):\n        if a[j] not in time:\n            time.update({a[j]: b[j]})\n        else:\n            time[a[j]] = b[j] if b[j] < time[a[j]] else time[a[j]]\n    if len(time) >= k:\n        times = list(time.values())\n        times.sort()\n        print(sum(times[0:k]))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    res = {}\n    for i in range(n):\n        if res.get(a[i], -1) == -1:\n            res[a[i]] = b[i]\n        else:\n            res[a[i]] = min(res.get(a[i], 0), b[i])\n    l = len(res)\n    if k > l:\n        print(-1)\n    else:\n        ans = sum(list(sorted(res.values())[:k]))\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "t = int(input())\nfor i in range(t):\n    n_k = input().split(' ')\n    category = input().split(' ')\n    time = input().split(' ')\n    s_cat = set(category)\n    if len(s_cat) < int(n_k[1]):\n        print(-1)\n    else:\n        l_time = {}\n        for j in range(int(n_k[0])):\n            if category[j] not in l_time:\n                l_time.update({category[j]: int(time[j])})\n            elif category[j] in l_time and l_time.get(category[j]) > int(time[j]):\n                l_time.update({category[j]: int(time[j])})\n        l = list(l_time.values())\n        l.sort()\n        print(sum(l[0:int(n_k[1])]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    clist = list(map(int, input().split()))\n    tlist = list(map(int, input().split()))\n    st = set(clist)\n    lnst = len(st)\n    if lnst < k:\n        print(-1)\n        continue\n    xlist = {}\n    for i in range(n):\n        cv = clist[i]\n        tv = tlist[i]\n        if cv in xlist:\n            xlist[cv] = min(xlist[cv], tv)\n        else:\n            xlist[cv] = tv\n    val = list(xlist.values())\n    val.sort()\n    print(sum(val[:k]))", "t = int(input())\nfor t in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    ans = {}\n    for i in range(n):\n        if a[i] not in ans:\n            ans[a[i]] = b[i]\n        elif ans[a[i]] > b[i]:\n            ans[a[i]] = b[i]\n    if len(ans) < k:\n        print(-1)\n    else:\n        arr = sorted(ans.values())\n        s = len(arr) - k\n        for i in range(s):\n            arr.remove(arr[len(arr) - 1])\n        time = sum(arr)\n        print(time)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    items = set()\n    time = 0\n    total = 0\n    a = [A for (B, A) in sorted(zip(b, a))]\n    b.sort()\n    for i in range(n):\n        if a[i] not in items:\n            items.add(a[i])\n            time += b[i]\n            total += 1\n        if total == k:\n            break\n    if total == k:\n        print(time)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if len(set(a)) < k:\n        print(-1)\n    else:\n        d = {}\n        for i in range(n):\n            if a[i] not in d:\n                d[a[i]] = b[i]\n            else:\n                d[a[i]] = min(d[a[i]], b[i])\n        c = []\n        for i in d.values():\n            c.append(i)\n        c.sort()\n        print(sum(c[:k]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if len(set(a)) < k:\n        print(-1)\n    else:\n        d = {}\n        for i in range(n):\n            if a[i] not in d:\n                d[a[i]] = b[i]\n            else:\n                d[a[i]] = min(d[a[i]], b[i])\n        c = []\n        for i in d.values():\n            c.append(i)\n        c.sort()\n        print(sum(c[:k]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if len(set(a)) < k:\n        print(-1)\n    else:\n        d = {}\n        for i in range(n):\n            if a[i] not in d:\n                d[a[i]] = b[i]\n            else:\n                d[a[i]] = min(d[a[i]], b[i])\n        c = []\n        for i in d.values():\n            c.append(i)\n        c.sort()\n        print(sum(c[:k]))", "import numpy as np\nfoodtime = [('food', int), ('time', int)]\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    foodlist = list(map(int, input().split()))\n    timelist = list(map(int, input().split()))\n    menu = {}\n    for i in range(n):\n        menu.update({foodlist[i]: -1})\n    for i in range(n):\n        if timelist[i] < menu[foodlist[i]] or menu[foodlist[i]] == -1:\n            menu.update({foodlist[i]: timelist[i]})\n    v = sorted(menu.values())\n    if len(v) >= m:\n        print(sum(v[:m]))\n    else:\n        print(-1)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if len(set(a)) < k:\n        print(-1)\n    else:\n        d = {}\n        for i in range(n):\n            if a[i] not in d:\n                d[a[i]] = b[i]\n            else:\n                d[a[i]] = min(d[a[i]], b[i])\n        c = []\n        for i in d.values():\n            c.append(i)\n        c.sort()\n        print(sum(c[:k]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if a[i] in d.keys():\n            d[a[i]] = min([d[a[i]], b[i]])\n        else:\n            d[a[i]] = b[i]\n    if len(d.keys()) < k:\n        print(-1)\n        continue\n    outs = sorted([i for i in d.values()])\n    print(sum(outs[:k]))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if a[i] in d.keys():\n            d[a[i]] = min([d[a[i]], b[i]])\n        else:\n            d[a[i]] = b[i]\n    if len(d.keys()) < k:\n        print(-1)\n        continue\n    outs = sorted([i for i in d.values()])\n    print(sum(outs[:k]))", "def dinner(n, k, a, b):\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]].append(b[i])\n        else:\n            d[a[i]] = [b[i]]\n    c = set(a)\n    if len(c) < k:\n        return -1\n    else:\n        s = 0\n        exi = []\n        for i in d:\n            mini = min(d[i])\n            exi.append(mini)\n        exi.sort()\n        return sum(exi[:k])\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = dinner(n, k, a, b)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    time = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if c[i] not in d.keys():\n            d[c[i]] = time[i]\n        else:\n            d[c[i]] = min(d[c[i]], time[i])\n    if len(d) < k:\n        print(-1)\n    else:\n        l = list(d.values())\n        l.sort()\n        print(sum(l[:k]))\n    t -= 1", "for i in range(int(input())):\n    (Num, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    dt = {}\n    if len(set(A)) < K:\n        print(-1)\n    else:\n        for i in range(len(A)):\n            if A[i] not in dt:\n                dt[A[i]] = B[i]\n            elif dt[A[i]] > B[i]:\n                dt[A[i]] = B[i]\n        lis = list(dt.values())\n        lis.sort()\n        Sum = sum(lis[0:K])\n        print(Sum)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = set(a)\n    time = dict()\n    for i in range(n):\n        if a[i] not in time:\n            time[a[i]] = b[i]\n        elif b[i] < time[a[i]]:\n            time[a[i]] = b[i]\n    if len(s) < k:\n        print(-1)\n    else:\n        l = list(time.values())\n        l.sort()\n        low = l[:k]\n        print(sum(low))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    time = dict()\n    for i in range(n):\n        if a[i] not in time:\n            time[a[i]] = b[i]\n        elif b[i] < time[a[i]]:\n            time[a[i]] = b[i]\n    if len(time) < k:\n        print(-1)\n    else:\n        low = sorted(list(time.values()))[:k]\n        print(sum(low))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    time = dict()\n    for i in range(n):\n        if a[i] not in time:\n            time[a[i]] = b[i]\n        elif b[i] < time[a[i]]:\n            time[a[i]] = b[i]\n    if len(time) < k:\n        print(-1)\n    else:\n        low = list(time.values())\n        low.sort()\n        print(sum(low[:k]))", "from collections import defaultdict\nT = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    cat = defaultdict(lambda : 1000000)\n    for i in range(n):\n        cat[a[i]] = min(cat[a[i]], b[i])\n    times = list(cat.values())\n    if len(times) < k:\n        print(-1)\n        continue\n    times.sort()\n    total = 0\n    for i in range(k):\n        total += times[i]\n    print(total)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] = min(b[i], d[a[i]])\n        else:\n            d[a[i]] = b[i]\n    if len(d) < k:\n        print('-1')\n    else:\n        v = list(d.values())\n        v.sort()\n        sum = 0\n        for x in range(k):\n            sum += v[x]\n        print(sum)", "import numpy as np\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = np.array(list(map(int, input().split())))\n    b = np.array(list(map(int, input().split())))\n    idx = b.argsort()\n    b = b[idx]\n    a = a[idx]\n    (av, ai) = np.unique(a, return_index=True)\n    if len(av) < k:\n        print(-1)\n        continue\n    b_ = b[ai]\n    b_.sort()\n    ans = np.sum(b_[:k])\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] = min(d[a[i]], b[i])\n        else:\n            d[a[i]] = b[i]\n    li = []\n    for i in d:\n        li.append((i, d[i]))\n    if len(li) >= k:\n        li.sort(key=lambda x: x[1])\n        ans = 0\n        for i in range(k):\n            ans += li[i][1]\n        print(ans)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    time = {}\n    for j in range(0, n):\n        if a[j] not in time:\n            time.update({a[j]: b[j]})\n        else:\n            time[a[j]] = b[j] if b[j] < time[a[j]] else time[a[j]]\n    if len(time) >= k:\n        times = list(time.values())\n        times.sort()\n        print(sum(times[0:k]))\n    else:\n        print(-1)", "def main():\n    tests = int(input())\n    for test in range(tests):\n        (total, taste) = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        dishes = dict()\n        for i in range(total):\n            if a[i] not in dishes:\n                dishes.update({a[i]: b[i]})\n            else:\n                dishes[a[i]] = b[i] if b[i] < dishes[a[i]] else dishes[a[i]]\n        if len(dishes) >= taste:\n            time = list(dishes.values())\n            time.sort()\n            print(sum(time[:taste]))\n        else:\n            print('-1')\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "def main():\n    tests = int(input())\n    for test in range(tests):\n        (total, taste) = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        dishes = dict()\n        for i in range(total):\n            if a[i] not in dishes:\n                dishes.update({a[i]: b[i]})\n            else:\n                dishes[a[i]] = b[i] if b[i] < dishes[a[i]] else dishes[a[i]]\n        if len(dishes) >= taste:\n            time = list(dishes.values())\n            time.sort()\n            print(sum(time[:taste]))\n        else:\n            print('-1')\nmain()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    list2 = list(map(int, input().split()))\n    dict1 = {}\n    j = 0\n    while j < n:\n        if list1[j] not in dict1.keys():\n            dict1[list1[j]] = list2[j]\n        elif list2[j] < dict1[list1[j]]:\n            dict1[list1[j]] = list2[j]\n        j += 1\n    if len(dict1.keys()) < k:\n        print(-1)\n    else:\n        p = list(dict1.values())\n        p.sort()\n        print(sum(p[:k]))", "t = input()\nfor c in range(0, int(t)):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if arr[i] in d:\n            d[arr[i]] = min(d[arr[i]], brr[i])\n        else:\n            d[arr[i]] = brr[i]\n    if len(d) < k:\n        print(-1)\n    else:\n        temp = list(sorted(d.values()))\n        print(sum(temp[:k]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    dic = {}\n    temp = max(b)\n    for j in a:\n        dic[j] = temp\n    for j in range(n):\n        dic[a[j]] = min(dic[a[j]], b[j])\n    if len(dic) < k:\n        print(-1)\n    else:\n        l = [j for j in dic.values()]\n        l.sort()\n        ans = 0\n        for j in range(len(l)):\n            if j >= k:\n                break\n            ans += l[j]\n        print(ans)", "test = int(input())\nfor t in range(test):\n    (n, k) = map(int, input().split())\n    item = list(map(int, input().split()))\n    cooktime = list(map(int, input().split()))\n    unqitems = dict()\n    for i in range(n):\n        if item[i] in unqitems:\n            unqitems[item[i]] = min(unqitems[item[i]], cooktime[i])\n        else:\n            unqitems[item[i]] = cooktime[i]\n    if len(unqitems) < k:\n        print(-1)\n    else:\n        values = list(sorted(unqitems.values()))\n        print(sum(values[:k]))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    lsta = list(map(int, input().split()))\n    lstc = []\n    lstb = list(map(int, input().split()))\n    dict = {}\n    for i in range(n):\n        if lsta[i] in dict:\n            dict[lsta[i]] = min(lstb[i], dict[lsta[i]])\n        else:\n            dict[lsta[i]] = lstb[i]\n    for (key, value) in dict.items():\n        lstc.append(value)\n    lstc.sort()\n    ans = 0\n    if k <= len(lstc):\n        for i in range(k):\n            ans += lstc[i]\n    if len(lstc) < k:\n        print(-1)\n    else:\n        print(ans)", "import math\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    d = {}\n    if k > len(set(arr1)):\n        print(-1)\n    elif k <= len(set(arr1)):\n        for i in range(n):\n            d[arr1[i]] = math.inf\n        for i in range(n):\n            d[arr1[i]] = min(d[arr1[i]], arr2[i])\n        d_sorted = sorted(d.items(), key=lambda x: x[1])\n        converted_dict = dict(d_sorted)\n        val = list(converted_dict.values())\n        s = 0\n        for i in range(k):\n            s += val[i]\n        print(s)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    dic = {}\n    temp = max(b)\n    for j in a:\n        dic[j] = temp\n    for j in range(n):\n        dic[a[j]] = min(dic[a[j]], b[j])\n    if len(dic) < k:\n        print(-1)\n    else:\n        l = [j for j in dic.values()]\n        l.sort()\n        ans = 0\n        for j in range(len(l)):\n            if j >= k:\n                break\n            ans += l[j]\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    hast = {}\n    for i in range(len(A)):\n        if A[i] in hast:\n            hast[A[i]] = min(hast[A[i]], B[i])\n        else:\n            hast[A[i]] = B[i]\n    L = []\n    for i in hast:\n        L.append(hast[i])\n    L.sort()\n    if K > len(L):\n        print(-1)\n    else:\n        print(sum(L[:K]))", "def minimum_time(items, k):\n    items.sort(key=lambda x: x[1])\n    categories = set()\n    total_time = 0\n    for item in items:\n        (category, time) = item\n        if category not in categories:\n            categories.add(category)\n            total_time += time\n        if len(categories) >= k:\n            return total_time\n    return -1\nT = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    items = []\n    for i in range(n):\n        items.append([a[i], b[i]])\n    print(minimum_time(items, k))", "def cal(a, b, n, k):\n    d = dict()\n    for i in range(n):\n        if a[i] in d.keys():\n            if d.get(a[i]) > b[i]:\n                d[a[i]] = b[i]\n        else:\n            d[a[i]] = b[i]\n    l = []\n    for i in d.keys():\n        l.append([d.get(i), i])\n    l.sort()\n    size = len(l)\n    time = 0\n    while size > 0 and k > 0:\n        b = l.pop(0)\n        size -= 1\n        time += b[0]\n        k -= 1\n    if k != 0:\n        return -1\n    else:\n        return time\nT = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(cal(a, b, n, k))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    t = 0\n    mintf = []\n    for i in range(n):\n        if a[i] not in d.keys():\n            d[a[i]] = [b[i]]\n        else:\n            d[a[i]].append(b[i])\n    for i in d.keys():\n        mintf.append(min(d[i]))\n    mintf.sort()\n    if len(mintf) < k:\n        print('-1')\n    else:\n        for i in range(k):\n            t += mintf[i]\n        print(t)", "n = int(input())\nfor i in range(n):\n    (l, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    aa = dict()\n    for i in range(l):\n        try:\n            aa[a[i]] = min(aa[a[i]], b[i])\n        except:\n            aa[a[i]] = b[i]\n    if len(aa) < k:\n        print(-1)\n        continue\n    aa1 = sorted(aa.items(), key=lambda x: x[1])\n    an = 0\n    for i in aa1:\n        an += i[1]\n        k -= 1\n        if k == 0:\n            break\n    print(an)", "import heapq\n\ndef find_min_time(n, k, categories, times):\n    category_time = {}\n    for i in range(n):\n        if categories[i] not in category_time:\n            category_time[categories[i]] = times[i]\n        else:\n            category_time[categories[i]] = min(category_time[categories[i]], times[i])\n    if len(category_time) < k:\n        return -1\n    min_heap = []\n    for time in category_time.values():\n        heapq.heappush(min_heap, time)\n    total_time = 0\n    while k > 0:\n        min_time = heapq.heappop(min_heap)\n        total_time += min_time\n        k -= 1\n    return total_time\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        categories = list(map(int, input().split()))\n        times = list(map(int, input().split()))\n        print(find_min_time(n, k, categories, times))\nmain()", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    z = {}\n    q = []\n    (c, t) = (0, 0)\n    for i in range(a):\n        if x[i] not in z:\n            z[x[i]] = y[i]\n        else:\n            z[x[i]] = min(z[x[i]], y[i])\n    for i in z.values():\n        q.append(i)\n    q.sort()\n    if len(q) >= b:\n        print(sum(q[:b]))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    l = len(d)\n    if l < k:\n        print(-1)\n    else:\n        print(sum(sorted(d.values())[:k]))", "def Solve(d, n, k):\n    if len(d) < k:\n        return -1\n    values = list(d.values())\n    values.sort()\n    ans = 0\n    for i in range(k):\n        ans = ans + values[i]\n    return ans\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] = min(b[i], d[a[i]])\n        else:\n            d[a[i]] = b[i]\n    print(Solve(d, n, k))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    l = len(d)\n    if l < k:\n        print(-1)\n    else:\n        print(sum(sorted(d.values())[:k]))", "test = int(input())\nfor t in range(test):\n    (n, k) = map(int, input().split())\n    item = list(map(int, input().split()))\n    cooktime = list(map(int, input().split()))\n    unqitems = dict()\n    for i in range(n):\n        if item[i] in unqitems:\n            unqitems[item[i]] = min(unqitems[item[i]], cooktime[i])\n        else:\n            unqitems[item[i]] = cooktime[i]\n    if len(unqitems) < k:\n        print(-1)\n    else:\n        values = list(sorted(unqitems.values()))\n        print(sum(values[:k]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "test = int(input())\nfor t in range(test):\n    (n, k) = map(int, input().split())\n    item = list(map(int, input().split()))\n    cooktime = list(map(int, input().split()))\n    unqitems = dict()\n    for i in range(n):\n        if item[i] in unqitems:\n            unqitems[item[i]] = min(unqitems[item[i]], cooktime[i])\n        else:\n            unqitems[item[i]] = cooktime[i]\n    if len(unqitems) < k:\n        print(-1)\n    else:\n        values = list(sorted(unqitems.values()))\n        print(sum(values[:k]))", "T = int(input())\nimport numpy as np\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    dict = {}\n    if len(np.unique(a)) < K:\n        print('-1')\n    else:\n        for i in range(N):\n            if a[i] in dict:\n                if dict[a[i]] > b[i]:\n                    dict[a[i]] = b[i]\n            else:\n                dict[a[i]] = b[i]\n        t = list(dict.values())\n        t.sort()\n        print(sum(t[:K]))", "T = int(input())\nimport numpy as np\nfor _ in range(T):\n    [n, k] = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    dict = {}\n    if len(np.unique(a)) < k:\n        print(-1)\n    else:\n        for i in range(n):\n            if a[i] in dict:\n                if dict[a[i]] > b[i]:\n                    dict[a[i]] = b[i]\n            else:\n                dict[a[i]] = b[i]\n        t = list(dict.values())\n        t.sort()\n        print(sum(t[:k]))", "def solve():\n    (n, k) = map(int, input().split())\n    di = dict()\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] in di:\n            di[a[i]] = min(b[i], di[a[i]])\n        else:\n            di[a[i]] = b[i]\n    val = list(di.values())\n    print(sum(sorted(val)[:k]) if len(val) >= k else -1)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    di = dict()\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] in di:\n            di[a[i]] = min(b[i], di[a[i]])\n        else:\n            di[a[i]] = b[i]\n    val = list(di.values())\n    print(sum(sorted(val)[:k]) if len(val) >= k else -1)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    di = dict()\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] in di:\n            di[a[i]] = min(b[i], di[a[i]])\n        else:\n            di[a[i]] = b[i]\n    val = list(di.values())\n    print(sum(sorted(val)[:k]) if len(val) >= k else -1)", "def solve():\n    (n, k) = map(int, input().split())\n    di = dict()\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] in di:\n            di[a[i]] = min(b[i], di[a[i]])\n        else:\n            di[a[i]] = b[i]\n    val = list(di.values())\n    print(sum(sorted(val)[:k]) if len(val) >= k else -1)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    d = {}\n    for i in range(len(l1)):\n        if l1[i] not in d:\n            d[l1[i]] = l2[i]\n        elif l2[i] < d[l1[i]]:\n            d[l1[i]] = l2[i]\n    if len(list(d.keys())) < k:\n        print(-1)\n    else:\n        lst = list(d.values())\n        c = 0\n        t = 0\n        lst = sorted(lst)\n        for i in range(k):\n            t += lst[i]\n        print(t)", "T = int(input())\nwhile T:\n    T -= 1\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    ki = 0\n    for i in range(n):\n        try:\n            d[a[i]] = min(d[a[i]], b[i])\n        except KeyError:\n            d[a[i]] = b[i]\n            ki += 1\n    if ki < k:\n        print(-1)\n    else:\n        l = list(d.values())\n        l.sort()\n        ans = 0\n        i = 0\n        while i < k:\n            ans += l[i]\n            i += 1\n        print(ans)", "def dinner(category, time, N, K):\n    look = list(zip(time, category))\n    look.sort()\n    distinct = {}\n    ans = 0\n    for i in range(N):\n        if len(distinct) >= K:\n            return ans\n        if look[i][1] in distinct:\n            continue\n        else:\n            distinct[look[i][1]] = True\n            ans += look[i][0]\n    if len(distinct) >= K:\n        return ans\n    return -1\nfor i in range(int(input())):\n    (N, K) = map(int, input().split())\n    category = list(map(int, input().split()))\n    time = list(map(int, input().split()))\n    print(dinner(category, time, N, K))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = set(a)\n    if len(s) < k:\n        print(-1)\n    else:\n        d = {}\n        for i in range(n):\n            if a[i] not in d or d[a[i]] > b[i]:\n                d[a[i]] = b[i]\n            if i == n - 1:\n                arr = list(d.values())\n        arr.sort()\n        print(sum(arr[0:k]))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = set(a)\n    if len(s) < k:\n        print(-1)\n    else:\n        d = {}\n        for i in range(n):\n            if a[i] not in d or d[a[i]] > b[i]:\n                d[a[i]] = b[i]\n            if i == n - 1:\n                arr = list(d.values())\n        arr.sort()\n        arr = arr[0:k]\n        print(sum(arr))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if A[i] in d.keys():\n            d[A[i]] = min(d[A[i]], B[i])\n        else:\n            d[A[i]] = B[i]\n    if len(d.keys()) < k:\n        print(-1)\n        continue\n    print(sum(sorted(d.values())[:k]))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if A[i] in d.keys():\n            d[A[i]] = min(d[A[i]], B[i])\n        else:\n            d[A[i]] = B[i]\n    if len(d.keys()) < k:\n        print(-1)\n        continue\n    print(sum(sorted(d.values())[:k]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d[a[i]], b[i])\n    l = list(d.values())\n    l = sorted(l)\n    if len(l) >= k:\n        y = l[:k]\n        x = sum(y)\n        print(x)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d[a[i]], b[i])\n    l = list(d.values())\n    l = sorted(l)\n    if len(l) >= k:\n        y = l[:k]\n        print(sum(y))\n    else:\n        print(-1)", "try:\n    T = int(input())\n    for _ in range(T):\n        (N, K) = map(int, input().split())\n        l1 = list(map(int, input().split()))\n        l2 = list(map(int, input().split()))\n        D = dict()\n        for i in range(N):\n            if D.get(l1[i], -1) == -1:\n                D[l1[i]] = l2[i]\n            else:\n                D[l1[i]] = min(D.get(l1[i], 0), l2[i])\n        if len(D) < K:\n            print('-1')\n        else:\n            s = sum(sorted(D.values())[:K])\n            print(s)\nexcept:\n    pass", "try:\n    T = int(input())\n    for _ in range(T):\n        (N, K) = map(int, input().split())\n        l1 = list(map(int, input().split()))\n        l2 = list(map(int, input().split()))\n        D = dict()\n        for i in range(N):\n            if D.get(l1[i], -1) == -1:\n                D[l1[i]] = l2[i]\n            else:\n                D[l1[i]] = min(D.get(l1[i], 0), l2[i])\n        if len(D) < K:\n            print('-1')\n        else:\n            s = sum(list(sorted(D.values())[:K]))\n            print(s)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    if len(set(a)) < k:\n        print(-1)\n        continue\n    for i in range(len(a)):\n        d[a[i]] = b[i]\n    for i in range(len(a)):\n        d[a[i]] = min(b[i], d[a[i]])\n    c = 0\n    l = 0\n    for i in sorted(d.values()):\n        if l < k:\n            c += i\n        l += 1\n    print(c)", "import pandas as pd\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if len(set(a)) < k:\n        print(-1)\n    else:\n        df = pd.DataFrame(zip(a, b), columns=['cat', 'prep'])\n        gb = df.groupby(['cat'])['prep'].min().sort_values(ascending=True).head(k)\n        print(gb.sum())", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    meals = set(m)\n    if k > len(meals):\n        print(-1)\n    else:\n        m = [x for (i, x) in sorted(zip(t, m))]\n        t.sort()\n        time = 0\n        total = 0\n        for i in range(n):\n            if m[i] in meals:\n                time += t[i]\n                total += 1\n                meals.discard(m[i])\n            if total == k:\n                break\n        print(time)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    lsta = list(map(int, input().split()))\n    lstc = []\n    lstb = list(map(int, input().split()))\n    dict = {}\n    for i in range(n):\n        if lsta[i] in dict:\n            dict[lsta[i]] = min(lstb[i], dict[lsta[i]])\n        else:\n            dict[lsta[i]] = lstb[i]\n    for (key, value) in dict.items():\n        lstc.append(value)\n    lstc.sort()\n    ans = 0\n    if k <= len(lstc):\n        for i in range(k):\n            ans += lstc[i]\n    if len(lstc) < k:\n        print(-1)\n    else:\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    categories = list(map(int, input().split()))\n    times = list(map(int, input().split()))\n    min_times = {}\n    for j in range(n):\n        if categories[j] in min_times:\n            min_times[categories[j]] = min(min_times[categories[j]], times[j])\n        else:\n            min_times[categories[j]] = times[j]\n    if len(min_times) < k:\n        print(-1)\n    else:\n        sorted_min_times = sorted(min_times.items(), key=lambda x: x[1])\n        result = sum((time for (category, time) in sorted_min_times[:k]))\n        print(result)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    catg = list(map(int, input().split()))\n    time = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if catg[i] not in d:\n            d[catg[i]] = time[i]\n        else:\n            d[catg[i]] = min(d[catg[i]], time[i])\n    values = sorted(list(d.values()))\n    if len(values) >= k:\n        print(sum(values[:k]))\n    else:\n        print(-1)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    d = {}\n    for i in range(N):\n        if A[i] not in d:\n            d[A[i]] = B[i]\n        else:\n            d[A[i]] = min(d[A[i]], B[i])\n    v = list(d.values())\n    v.sort()\n    if len(v) < K:\n        print(-1)\n    else:\n        print(sum(v[:K]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    meals = set(m)\n    if k > len(meals):\n        print(-1)\n    else:\n        m = [x for (i, x) in sorted(zip(t, m))]\n        t.sort()\n        time = 0\n        total = 0\n        for i in range(n):\n            if m[i] in meals:\n                time += t[i]\n                total += 1\n                meals.discard(m[i])\n            if total == k:\n                break\n        print(time)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    c = {}\n    for i in range(len(a)):\n        if a[i] not in c:\n            c[a[i]] = b[i]\n        else:\n            c[a[i]] = min(c[a[i]], b[i])\n    if len(c) < k:\n        print(-1)\n    else:\n        c = sorted(c.values())\n        x = sum(c[:k])\n        print(x)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    meals = set(m)\n    if k > len(meals):\n        print(-1)\n    else:\n        m = [x for (i, x) in sorted(zip(t, m))]\n        t.sort()\n        time = 0\n        total = 0\n        for i in range(n):\n            if m[i] in meals:\n                time += t[i]\n                total += 1\n                meals.discard(m[i])\n            if total == k:\n                break\n        print(time)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split(' ')))\n    dishes = list(map(int, input().split(' ')))\n    uni = set(dishes)\n    time = list(map(int, input().split(' ')))\n    arr = [1000000] * 1000000\n    s = 0\n    for x in range(len(dishes)):\n        if arr[dishes[x]] > time[x]:\n            arr[dishes[x]] = time[x]\n    arr.sort()\n    for i in range(k):\n        s = s + arr[i]\n    if k > len(uni):\n        print(-1)\n    else:\n        print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    meals = set(m)\n    if k > len(meals):\n        print(-1)\n    else:\n        m = [x for (i, x) in sorted(zip(t, m))]\n        t.sort()\n        time = 0\n        total = 0\n        for i in range(n):\n            if m[i] in meals:\n                time += t[i]\n                total += 1\n                meals.discard(m[i])\n            if total == k:\n                break\n        print(time)", "testcases = int(input())\nfor _ in range(testcases):\n    smallest = []\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l3 = list(map(int, input().split()))\n    d = dict.fromkeys(l2)\n    for j in l2:\n        d[j] = list()\n    for i in range(l1[0]):\n        d[l2[i]].append(l3[i])\n    for i in d.keys():\n        d[i] = sorted(d[i])\n    for i in d.values():\n        smallest.append(i[0])\n    if len(d.keys()) < l1[1]:\n        print(-1)\n    else:\n        print(sum(sorted(smallest)[:l1[1]]))", "from collections import Counter, defaultdict\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = b[i]\n        elif d[a[i]] > b[i]:\n            d[a[i]] = b[i]\n    if len(d) >= k:\n        j = 0\n        val = 0\n        for i in sorted(d.values()):\n            if j == k:\n                break\n            val += i\n            j += 1\n        print(val)\n    else:\n        print(-1)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        x = d.get(a[i], -1)\n        if x == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(b[i], d.get(a[i], 0))\n    if k > len(d):\n        print(-1)\n        continue\n    s = sorted(d.values())\n    print(sum(s[:k]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if d.get(a[i], -1) == -1:\n            d[a[i]] = b[i]\n        else:\n            d[a[i]] = min(d.get(a[i], 0), b[i])\n    m = len(d)\n    if k > m:\n        print(-1)\n    else:\n        ans = sum(list(sorted(d.values())[:k]))\n        print(ans)"]