["for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N == 1:\n        print(1)\n    elif N == 2:\n        print(3)\n    else:\n        C = 2\n        F = A[1] > A[0]\n        final = 0\n        for i in range(2, N):\n            if not F or (F and A[i] > A[i - 1]):\n                if not F and A[i] > A[i - 1]:\n                    F = True\n                C += 1\n            else:\n                final += C * (C + 1) // 2\n                if final > C * (C + 1) // 2:\n                    final -= 1\n                C = 2\n                F ^= True\n        if C > 0:\n            final += C * (C + 1) // 2\n            if final > C * (C + 1) // 2:\n                final -= 1\n        print(final)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (dpl, dpr) = ([1] * n, [1] * n)\n    for i in range(1, n):\n        if arr[i - 1] > arr[i]:\n            dpl[i] += dpl[i - 1]\n    for i in range(n - 1, 0, -1):\n        if arr[i] > arr[i - 1]:\n            dpr[i - 1] += dpr[i]\n    ans = 0\n    for i in range(n):\n        ans += dpl[i] * dpr[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (dpl, dpr) = ([1] * n, [1] * n)\n    for i in range(1, n):\n        if arr[i - 1] > arr[i]:\n            dpl[i] += dpl[i - 1]\n    for i in range(n - 1, 0, -1):\n        if arr[i] > arr[i - 1]:\n            dpr[i - 1] += dpr[i]\n    ans = 0\n    for i in range(n):\n        ans += dpl[i] * dpr[i]\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (dpl, dpr) = ([1] * n, [1] * n)\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            dpl[i] += dpl[i - 1]\n    for i in range(n - 1, 0, -1):\n        if a[i - 1] < a[i]:\n            dpr[i - 1] += dpr[i]\n    ans = 0\n    for i in range(n):\n        ans += dpl[i] * dpr[i]\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (dpl, dpr) = ([1] * n, [1] * n)\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            dpl[i] += dpl[i - 1]\n    for i in range(n - 1, 0, -1):\n        if a[i - 1] < a[i]:\n            dpr[i - 1] += dpr[i]\n    ans = 0\n    for i in range(n):\n        ans += dpl[i] * dpr[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    ans = 1\n    i = 0\n    j = 1\n    las = None\n    while j < n:\n        if las == None:\n            if lis[j] > lis[j - 1]:\n                las = 'inc'\n                ans += 2\n            else:\n                las = 'dec'\n                ans += 2\n        elif las == 'inc':\n            if lis[j] >= lis[j - 1]:\n                ans += j - i + 1\n            else:\n                las = 'dec'\n                i = j - 1\n                ans += 2\n        elif lis[j] >= lis[j - 1]:\n            las = 'inc'\n            ans += j - i + 1\n        else:\n            ans += j - i + 1\n        j += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    inc = [0] * n\n    desc = [0] * n\n    inc[n - 1] = desc[n - 1] = 1\n    for i in reversed(range(n - 1)):\n        if a[i] < a[i + 1]:\n            inc[i] = inc[i + 1] + 1\n        else:\n            inc[i] = 1\n        if a[i] > a[i + 1]:\n            desc[i] = desc[i + 1] + 1\n        else:\n            desc[i] = 1\n    for i in range(n):\n        if inc[i] > 1:\n            ans = ans + inc[i]\n        elif desc[i] > 1:\n            ans = ans + desc[i]\n            j = i + desc[i]\n            if j < n:\n                ans = ans + inc[j]\n        else:\n            ans = ans + 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    ans = 1\n    i = 0\n    j = 1\n    las = None\n    while j < n:\n        if las == None:\n            if lis[j] > lis[j - 1]:\n                las = 'inc'\n                ans += 2\n            else:\n                las = 'dec'\n                ans += 2\n        elif las == 'inc':\n            if lis[j] >= lis[j - 1]:\n                ans += j - i + 1\n            else:\n                las = 'dec'\n                i = j - 1\n                ans += 2\n        elif lis[j] >= lis[j - 1]:\n            las = 'inc'\n            ans += j - i + 1\n        else:\n            ans += j - i + 1\n        j += 1\n    print(ans)", "def perms3orbigger(x):\n    return x * (x + 1) // 2 - (x + x) + 1\n\ndef isWeird3v2(l, h):\n    return p[l] > p[l + 1] or p[l + 1] < p[l + 2]\n\ndef extendsv2(l, h):\n    return p[h - 2] < p[h - 1] or p[h - 3] > p[h - 2]\n\ndef pretendsv2(l, h):\n    return p[l + 1] < p[l + 2] or p[l] > p[l + 1]\n\ndef countWeirds(lo, hi):\n    if lo + 3 > hi:\n        return 0\n    if lo + 3 == hi:\n        return int(isWeird3v2(lo, hi))\n    tophit = bothit = False\n    if isWeird3v2((midlo := ((lo + hi - 1) // 2 - 1)), (midhi := (midlo + 3))):\n        while (midhi == hi or extendsv2(midlo, (midhi := (midhi + 1)))) and (midlo == lo or pretendsv2((midlo := (midlo - 1)), midhi)):\n            if (tophit := (midhi == hi)) and (bothit := (midlo == lo)):\n                return perms3orbigger(hi - lo)\n    return -perms3orbigger(midhi - midlo - 2) + (perms3orbigger(midhi - lo - 1) if bothit else countWeirds(lo, midhi - 1)) + (perms3orbigger(hi - midlo - 1) if tophit else countWeirds(midlo + 1, hi))\nfor _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = n + n - 1\n    if n > 2:\n        ans += countWeirds(0, n)\n    print(ans)", "def perms3orbigger(x):\n    return x * (x + 1) // 2 - (x + x) + 1\n\ndef isWeird3v2(l, h):\n    return p[l] > p[l + 1] or p[l + 1] < p[l + 2]\n\ndef extendsv2(l, h):\n    return p[h - 2] < p[h - 1] or p[h - 3] > p[h - 2]\n\ndef pretendsv2(l, h):\n    return p[l + 1] < p[l + 2] or p[l] > p[l + 1]\n\ndef countWeirds(lo, hi):\n    if lo + 3 > hi:\n        return 0\n    if lo + 3 == hi:\n        return int(isWeird3v2(lo, hi))\n    tophit = bothit = False\n    if isWeird3v2((midlo := ((lo + hi - 1) // 2 - 1)), (midhi := (midlo + 3))):\n        while (midhi == hi or extendsv2(midlo, (midhi := (midhi + 1)))) and (midlo == lo or pretendsv2((midlo := (midlo - 1)), midhi)):\n            if (tophit := (midhi == hi)) and (bothit := (midlo == lo)):\n                return perms3orbigger(hi - lo)\n    return -perms3orbigger(midhi - midlo - 2) + (perms3orbigger(midhi - lo - 1) if bothit else countWeirds(lo, midhi - 1)) + (perms3orbigger(hi - midlo - 1) if tophit else countWeirds(midlo + 1, hi))\nfor _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = n + n - 1\n    if n > 2:\n        ans += countWeirds(0, n)\n    print(ans)", "def sum(n):\n    if n > 2:\n        return (n - 2) * (n - 1) / 2\n    return 0\na = int(input())\nfor i in range(a):\n    b = int(input())\n    array = list(map(int, input().split()))\n    count = b + b - 1\n    ini = 0\n    f = 1\n    while f < len(array) - 1:\n        if array[f + 1] < array[f] > array[f - 1]:\n            count += sum(f - ini + 1)\n            ini = f\n        elif f == len(array) - 1:\n            count += sum(f + 1 - ini + 1)\n        f += 1\n    count += sum(f - ini + 1)\n    print(int(count))", "def sum(n):\n    if n > 2:\n        return (n - 2) * (n - 1) / 2\n    return 0\na = int(input())\nfor i in range(a):\n    b = int(input())\n    array = list(map(int, input().split()))\n    count = b + b - 1\n    ini = 0\n    f = 1\n    while f < len(array) - 1:\n        if array[f + 1] < array[f] > array[f - 1]:\n            count += sum(f - ini + 1)\n            ini = f\n        elif f == len(array) - 1:\n            count += sum(f + 1 - ini + 1)\n        f += 1\n    count += sum(f - ini + 1)\n    print(int(count))", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = 0\n    p[0] *= -1\n    count = 1\n    flag = 0\n    for i in range(1, n):\n        if -p[i] > p[i - 1]:\n            count += 1\n            p[i] *= -1\n        elif p[i] > p[i - 1]:\n            count += 1\n        else:\n            p[i - 1] *= -1\n            if -p[i] > p[i - 1]:\n                p[i] *= -1\n            count = (count + 1) * count // 2\n            if flag != 0:\n                count -= 1\n            flag += 1\n            ans += count\n            count = 2\n    count = (count + 1) * count // 2\n    if flag != 0:\n        count -= 1\n    ans += count\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = 0\n    p[0] *= -1\n    count = 1\n    flag = 0\n    for i in range(1, n):\n        if -p[i] > p[i - 1]:\n            count += 1\n            p[i] *= -1\n        elif p[i] > p[i - 1]:\n            count += 1\n        else:\n            p[i - 1] *= -1\n            if -p[i] > p[i - 1]:\n                p[i] *= -1\n            count = (count + 1) * count // 2\n            if flag != 0:\n                count -= 1\n            flag += 1\n            ans += count\n            count = 2\n    count = (count + 1) * count // 2\n    if flag != 0:\n        count -= 1\n    ans += count\n    print(ans)", "def calculate(arr, n):\n    inc = [1 for i in range(n)]\n    dec = [1 for i in range(n)]\n    for i in range(n - 2, -1, -1):\n        if arr[i] < arr[i + 1]:\n            inc[i] = inc[i + 1] + 1\n        else:\n            dec[i] = dec[i + 1] + 1\n    count = 1\n    for i in range(n):\n        if inc[i] > 1:\n            count += inc[i]\n        elif dec[i] > 1:\n            count += dec[i]\n            if i + dec[i] < n:\n                count += inc[i + dec[i]]\n    return count\nT = int(input())\nans = []\nfor i in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    v = calculate(arr, n)\n    ans.append(v)\nfor i in ans:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    c = 0\n    prev = 1\n    curr = 1\n    for i in range(n - 1):\n        if arr[i] <= arr[i + 1]:\n            prev = curr\n            curr = 1\n            c += 1\n        else:\n            prev = curr\n            curr = 0\n            if prev == 1 and curr == 0:\n                ans += (c + 1) * c // 2\n                c = 0\n            c += 1\n    ans += (c + 1) * c // 2 + n\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    c = 0\n    prev = 1\n    curr = 1\n    for i in range(n - 1):\n        if arr[i] <= arr[i + 1]:\n            prev = curr\n            curr = 1\n            c += 1\n        else:\n            prev = curr\n            curr = 0\n            if prev == 1 and curr == 0:\n                ans += (c + 1) * c // 2\n                c = 0\n            c += 1\n    ans += (c + 1) * c // 2 + n\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    P = list(map(int, input().split()))\n    if N == 1:\n        print(1)\n    else:\n        peaks = []\n        if P[0] > P[1]:\n            peaks.append(0)\n        for i in range(1, N - 1):\n            if P[i - 1] < P[i] and P[i + 1] < P[i]:\n                peaks.append(i)\n        if P[N - 1] > P[N - 2]:\n            peaks.append(N - 1)\n        peak_gaps = [peaks[0] - 0]\n        for i in range(1, len(peaks)):\n            peak_gaps.append(peaks[i] - peaks[i - 1])\n        peak_gaps.append(N - 1 - peaks[-1])\n        count = N\n        for i in peak_gaps:\n            count += i * (i + 1) // 2\n        print(count)", "for i in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    k = 1\n    ans = 1\n    array[0] = min(-array[0], array[0])\n    for j in range(n - 1):\n        if max(array[j + 1], -array[j + 1]) > array[j]:\n            k += 1\n            if -array[j + 1] > array[j]:\n                array[j + 1] = -array[j + 1]\n        else:\n            ans += k * (k + 1) // 2 - 1\n            k = 2\n            if -array[j + 1] > -abs(array[j]):\n                array[j + 1] = -array[j + 1]\n    ans += k * (k + 1) // 2 - 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    k = 1\n    ans = 1\n    array[0] = min(-array[0], array[0])\n    for j in range(n - 1):\n        if max(array[j + 1], -array[j + 1]) > array[j]:\n            k += 1\n            if -array[j + 1] > -abs(array[j]):\n                array[j + 1] = -array[j + 1]\n        else:\n            ans += k * (k + 1) // 2 - 1\n            k = 2\n            if -array[j + 1] > -abs(array[j]):\n                array[j + 1] = -array[j + 1]\n    ans += k * (k + 1) // 2 - 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    k = 1\n    ans = 1\n    array[0] = min(-array[0], array[0])\n    for j in range(n - 1):\n        if array[j + 1] > array[j] or -array[j + 1] > array[j]:\n            k += 1\n            if -array[j + 1] > array[j]:\n                array[j + 1] = -array[j + 1]\n        else:\n            ans += k * (k + 1) // 2 - 1\n            k = 2\n            if -array[j + 1] > -abs(array[j]):\n                array[j + 1] = -array[j + 1]\n    ans += k * (k + 1) // 2 - 1\n    print(ans)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    p = list(map(int, input().split()))\n    k = 1\n    ans = 1\n    p[0] = -p[0]\n    for j in range(n - 1):\n        if p[j + 1] > p[j]:\n            k += 1\n            if -p[j + 1] > p[j]:\n                p[j + 1] = -p[j + 1]\n        else:\n            ans += k * (k + 1) // 2 - 1\n            k = 2\n            if -p[j + 1] > -abs(p[j]):\n                p[j + 1] = -p[j + 1]\n    ans += k * (k + 1) // 2 - 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    in1 = [1]\n    dc1 = [1]\n    j = 0\n    for i in range(n - 2, -1, -1):\n        if l[i] < l[i + 1]:\n            in1.append(in1[j] + 1)\n        else:\n            in1.append(1)\n        j += 1\n    j = 0\n    for i in range(n - 2, -1, -1):\n        if l[i] > l[i + 1]:\n            dc1.append(dc1[j] + 1)\n        else:\n            dc1.append(1)\n        j += 1\n    in1 = in1[::-1]\n    dc1 = dc1[::-1]\n    ans = 0\n    for i in range(n):\n        if in1[i] > 1:\n            ans += in1[i]\n        elif dc1[i] > 1:\n            ans += dc1[i]\n            j = i + dc1[i]\n            if j < n:\n                ans += in1[j]\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    in1 = [1]\n    dc1 = [1]\n    j = 0\n    for i in range(n - 2, -1, -1):\n        if l[i] < l[i + 1]:\n            in1.append(in1[j] + 1)\n        else:\n            in1.append(1)\n        j += 1\n    j = 0\n    for i in range(n - 2, -1, -1):\n        if l[i] > l[i + 1]:\n            dc1.append(dc1[j] + 1)\n        else:\n            dc1.append(1)\n        j += 1\n    in1 = in1[::-1]\n    dc1 = dc1[::-1]\n    ans = 0\n    for i in range(n):\n        if in1[i] > 1:\n            ans += in1[i]\n        elif dc1[i] > 1:\n            ans += dc1[i]\n            j = i + dc1[i]\n            if j < n:\n                ans += in1[j]\n        else:\n            ans += 1\n    print(ans)", "numInp = lambda : int(input())\nlstImp = lambda : list(map(int, input().split()))\nstrImp = lambda : input()\nspacedStrImp = lambda : list(input())\nseperateImp = lambda : map(int, input().split())\nfor i in range(int(input())):\n    lenOfPermutation = numInp()\n    permutation = lstImp()\n    ans = 0\n    check = 0\n    previous = 1\n    current = 1\n    for i in range(lenOfPermutation - 1):\n        previous = current\n        if permutation[i] <= permutation[i + 1]:\n            current = 1\n        else:\n            current = 0\n            if previous == 1 and (not current):\n                ans += (check + 1) * check // 2\n                check = 0\n        check += 1\n    ans += (check + 1) * check // 2 + lenOfPermutation\n    print(ans)", "numInp = lambda : int(input())\nlstImp = lambda : list(map(int, input().split()))\nstrImp = lambda : input()\nspacedStrImp = lambda : list(input())\nseperateImp = lambda : map(int, input().split())\nfor i in range(int(input())):\n    lenOfPermutation = numInp()\n    permutation = lstImp()\n    ans = 0\n    check = 0\n    previous = 1\n    current = 1\n    for i in range(lenOfPermutation - 1):\n        previous = current\n        if permutation[i] <= permutation[i + 1]:\n            current = 1\n        else:\n            current = 0\n            if previous == 1 and (not current):\n                ans += (check + 1) * check // 2\n                check = 0\n        check += 1\n    ans += (check + 1) * check // 2 + lenOfPermutation\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    c = 0\n    prev = 1\n    curr = 1\n    for i in range(n - 1):\n        if arr[i] <= arr[i + 1]:\n            prev = curr\n            curr = 1\n            c += 1\n        else:\n            prev = curr\n            curr = 0\n            if prev == 1 and curr == 0:\n                ans += (c + 1) * c // 2\n                c = 0\n            c += 1\n    ans += (c + 1) * c // 2 + n\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    inc = [1] * n\n    dec = [1] * n\n    for i in range(n - 2, -1, -1):\n        if a[i] > a[i + 1]:\n            dec[i] = dec[i + 1] + 1\n        else:\n            dec[i] = 1\n        if a[i] < a[i + 1]:\n            inc[i] = inc[i + 1] + 1\n        else:\n            inc[i] = 1\n    a = 0\n    for i in range(n):\n        if inc[i] > 1:\n            a = a + inc[i]\n        elif dec[i] > 1:\n            a = a + dec[i]\n            j = i + dec[i]\n            if j < n:\n                a = a + inc[j]\n        elif inc[i] == 1 and inc[i] == 1:\n            a = a + 1\n    print(a)", "import os, sys, io, math\nfrom array import array\nfrom math import *\nfrom collections import Counter\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    (n, l, a, c, ok) = (IN(), I(), 1, 1, False)\n    for i in range(1, n):\n        if l[i] > l[i - 1]:\n            c += 1\n            a += c\n            ok = True\n        elif ok:\n            c = 2\n            a += c\n            ok = False\n        else:\n            c += 1\n            a += c\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    wl = n\n    a = l\n    op = 1\n    i = 0\n    for j in range(i + 1, n):\n        if a[j - 1] < a[j]:\n            wl += j - i\n            op = 0\n        elif -1 * a[j - 1] < a[j] and op == 1:\n            a[j - 1] = a[j - 1] * -1\n            wl += j - i\n            if a[j - 1] > a[j] * -1:\n                op = 0\n        elif -1 * a[j - 1] < a[j]:\n            op = 1\n            i = j - 1\n            a[j - 1] = a[j - 1] * -1\n            wl += j - i\n            if a[j - 1] > a[j] * -1:\n                op = 0\n        else:\n            i = j\n            op = 1\n    print(wl)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    wl = n\n    a = l\n    op = 1\n    i = 0\n    for j in range(i + 1, n):\n        if a[j - 1] < a[j]:\n            wl += j - i\n            op = 0\n        elif -1 * a[j - 1] < a[j] and op == 1:\n            a[j - 1] = a[j - 1] * -1\n            wl += j - i\n            if a[j - 1] > a[j] * -1:\n                op = 0\n        elif -1 * a[j - 1] < a[j]:\n            op = 1\n            i = j - 1\n            a[j - 1] = a[j - 1] * -1\n            wl += j - i\n            if a[j - 1] > a[j] * -1:\n                op = 0\n        else:\n            i = j\n            op = 1\n    print(wl)", "for _ in range(int(input())):\n    N = int(input())\n    numbers = input().split()\n    for i in range(N):\n        numbers[i] = int(numbers[i])\n    counter = 0\n    initial = 1\n    count = 0\n    for i in range(N):\n        try:\n            if numbers[i] > numbers[i - 1] and numbers[i] > numbers[i + 1]:\n                counter += 1\n                order = i + 1\n                total = order - initial + 1\n                count += int(total * (total + 1) / 2)\n                initial = order\n        except IndexError:\n            pass\n    if counter == 0:\n        print(int(N * (N + 1) / 2))\n    else:\n        total = N - initial + 1\n        count += int(total * (total + 1) / 2)\n        count -= counter\n        print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    ans = n\n    while i < n:\n        j = i\n        while j + 1 < n:\n            if a[j] > a[j + 1]:\n                if j - 1 >= i and a[j - 1] > -a[j]:\n                    break\n                a[j] = -a[j]\n            j += 1\n        k = j - i + 1\n        ans += k * (k + 1) // 2 - k\n        i = max(i + 1, j)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (left, right) = ([1] * n, [1] * n)\n    for i in range(1, n):\n        if p[i] < p[i - 1]:\n            left[i] += left[i - 1]\n        if p[n - 1 - i] < p[n - i]:\n            right[n - 1 - i] += right[n - i]\n    print(sum((left[i] * right[i] for i in range(n))))", "s = int(input())\nfor i in range(0, s):\n    x = input()\n    n = list(map(int, input().split()))\n    dp = [[1, 1] for k in range(0, len(n))]\n    for k in range(1, len(n)):\n        if n[k] > n[k - 1]:\n            dp[k][0] = dp[k - 1][0] + 1\n        else:\n            dp[k][1] = dp[k - 1][1] + 1\n            dp[k][0] = dp[k][1]\n    c1 = 0\n    for i in range(0, len(n)):\n        x1 = max(dp[i])\n        c1 = c1 + x1\n    print(c1)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    left = [1] * n\n    dec = [1] * n\n    for i in range(len(arr) - 2, -1, -1):\n        if arr[i] <= arr[i + 1]:\n            left[i] = left[i + 1] + 1\n        if arr[i] >= arr[i + 1]:\n            dec[i] = dec[i + 1] + 1\n    ans = 0\n    for i in range(n):\n        if left[i] > 1:\n            ans += left[i]\n        elif dec[i] > 1:\n            ans += dec[i]\n            if i + dec[i] < n:\n                ans += left[i + dec[i]]\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    hills = []\n    for i in range(1, n - 1):\n        if p[i - 1] < p[i] and p[i] > p[i + 1]:\n            hills.append(i)\n    hills.append(n - 1)\n    length = []\n    prev = 0\n    for hill in hills:\n        length.append(hill - prev + 1)\n        prev = hill\n    ans = 0\n    for num in length:\n        ans += num * (num + 1) // 2\n    print(ans - len(hills) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    hills = []\n    for i in range(1, n - 1):\n        if p[i - 1] < p[i] and p[i] > p[i + 1]:\n            hills.append(i)\n    hills.append(n - 1)\n    length = []\n    prev = 0\n    for hill in hills:\n        length.append(hill - prev + 1)\n        prev = hill\n    ans = 0\n    for num in length:\n        ans += num * (num + 1) // 2\n    print(ans - len(hills) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (left, right) = ([1] * n, [1] * n)\n    for i in range(1, n):\n        if p[i] < p[i - 1]:\n            left[i] += left[i - 1]\n        if p[n - 1 - i] < p[n - i]:\n            right[n - 1 - i] += right[n - i]\n    print(sum((left[i] * right[i] for i in range(n))))", "for t in range(int(input())):\n    N = int(input())\n    P = list(map(int, input().split()))\n    (hill, h) = ([], [])\n    C = 0\n    for i in range(1, N - 1):\n        if P[i - 1] < P[i] and P[i] > P[i + 1]:\n            hill.append(i)\n    h.append(0)\n    h.extend(hill)\n    h.append(N - 1)\n    for i in range(len(h) - 1):\n        B = h[i + 1] - h[i] + 1\n        C += B * (B + 1) // 2\n    C -= len(hill)\n    print(C)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    hills = []\n    for i in range(1, n - 1):\n        if l[i - 1] < l[i] and l[i] > l[i + 1]:\n            hills.append(i)\n    hills = [0] + hills + [n - 1]\n    count = 0\n    for i in range(1, len(hills)):\n        length = hills[i] - hills[i - 1] + 1\n        count += length * (length + 1) // 2\n    count += 2 - len(hills)\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (left, right) = ([1] * n, [1] * n)\n    for i in range(1, n):\n        if p[i] < p[i - 1]:\n            left[i] += left[i - 1]\n        if p[n - 1 - i] < p[n - i]:\n            right[n - 1 - i] += right[n - i]\n    print(sum((left[i] * right[i] for i in range(n))))", "for _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split(' ')))\n    inc = [1] * n\n    dec = [1] * n\n    for i in range(n - 2, -1, -1):\n        if L[i] > L[i + 1]:\n            dec[i] = dec[i + 1] + 1\n        else:\n            inc[i] = inc[i + 1] + 1\n    res = 0\n    for i in range(n):\n        if inc[i] > 1:\n            res += inc[i]\n        elif dec[i] > 1:\n            res += dec[i]\n            j = i + dec[i]\n            if j < n:\n                res += inc[j]\n        else:\n            res += 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    P = list(map(int, input().split()))\n    left = [1] * N\n    right = [1] * N\n    for i in range(1, N):\n        if P[i] < P[i - 1]:\n            left[i] += left[i - 1]\n        if P[N - (1 + i)] < P[N - i]:\n            right[N - (1 + i)] += right[N - i]\n    count = 0\n    for i in range(N):\n        count += left[i] * right[i]\n    print(count)", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    P = list(map(int, input().split()))\n    left = [1] * N\n    right = [1] * N\n    for i in range(1, N):\n        if P[i] < P[i - 1]:\n            left[i] += left[i - 1]\n        if P[N - 1 - i] < P[N - i]:\n            right[N - 1 - i] += right[N - i]\n    count = 0\n    for i in range(N):\n        count += left[i] * right[i]\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    hills = []\n    for i in range(1, n - 1):\n        if l[i - 1] < l[i] and l[i] > l[i + 1]:\n            hills.append(i)\n    hills = [0] + hills + [n - 1]\n    count = 0\n    for i in range(1, len(hills)):\n        length = hills[i] - hills[i - 1] + 1\n        count += length * (length + 1) // 2\n    count += 2 - len(hills)\n    print(count)", "for trie in range(int(input())):\n    N = int(input())\n    LST = list(map(int, input().split()))\n    arr = [0]\n    for i in range(1, N - 1):\n        if LST[i - 1] < LST[i] > LST[i + 1]:\n            arr.append(i)\n    ANSWER = N\n    arr.append(N - 1)\n    for i in range(len(arr) - 1):\n        x = arr[i + 1] - arr[i]\n        ANSWER += (x + 1) * x // 2\n    print(ANSWER)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (inc, dec) = ([0] * n, [0] * n)\n    inc[n - 1] = dec[n - 1] = 1\n    for i in range(n - 2, -1, -1):\n        if arr[i + 1] > arr[i]:\n            inc[i] = inc[i + 1] + 1\n        else:\n            inc[i] = 1\n        if arr[i + 1] < arr[i]:\n            dec[i] = dec[i + 1] + 1\n        else:\n            dec[i] = 1\n    ans = 0\n    for i in range(n):\n        if inc[i] > 1:\n            ans += inc[i]\n        elif dec[i] > 1:\n            ans += dec[i]\n            j = i + dec[i]\n            if j < n:\n                ans += inc[j]\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    incr = [1 for _ in range(n)]\n    decr = [1 for _ in range(n)]\n    for i in range(1, n):\n        if p[i] < p[i - 1]:\n            decr[i] += decr[i - 1]\n        if p[n - 1 - i] < p[n - i]:\n            incr[n - 1 - i] += incr[n - i]\n    summ = 0\n    for i in range(n):\n        summ += incr[i] * decr[i]\n    print(summ)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    inc = [0] * n\n    dec = [0] * n\n    inc[n - 1] = dec[n - 1] = 1\n    ans = 0\n    for i in range(n - 1):\n        j = n - 2 - i\n        if A[j] > A[j + 1]:\n            dec[j] = dec[j + 1] + 1\n            inc[j] = 1\n        else:\n            inc[j] = inc[j + 1] + 1\n            dec[j] = 1\n    for i in range(n):\n        if inc[i] > 1:\n            ans += inc[i]\n        elif dec[i] > 1:\n            ans += dec[i]\n            k = i + dec[i]\n            if k < n:\n                ans += inc[k]\n        else:\n            ans += 1\n    print(ans)", "def weirdArr(n, p):\n    left = [1] * n\n    right = [1] * n\n    for i in range(1, n):\n        if p[i] < p[i - 1]:\n            left[i] += left[i - 1]\n        if p[n - i - 1] < p[n - i]:\n            right[n - i - 1] += right[n - i]\n    ans = 0\n    for i in range(n):\n        ans += left[i] * right[i]\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = [int(x) for x in input().split()]\n    ans = weirdArr(n, p)\n    print(ans)", "from itertools import islice\nimport sys\nfor s in islice(sys.stdin, 2, None, 2):\n    a = [*map(int, s.split())]\n    m = 0\n    r = len(a) * 2 - 1\n    for (x, y, z) in zip(a, a[1:], a[2:]):\n        if x < y > z:\n            m = 0\n        else:\n            m += 1\n            r += m\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    arr = [0]\n    for i in range(1, n - 1):\n        if l[i - 1] < l[i] > l[i + 1]:\n            arr.append(i)\n    ans = n\n    arr.append(n - 1)\n    for i in range(len(arr) - 1):\n        x = arr[i + 1] - arr[i]\n        ans += (x + 1) * x // 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (left, right) = ([1] * n, [1] * n)\n    for i in range(1, n):\n        if p[i] < p[i - 1]:\n            left[i] += left[i - 1]\n        if p[n - 1 - i] < p[n - i]:\n            right[n - 1 - i] += right[n - i]\n    print(sum((left[i] * right[i] for i in range(n))))", "def solve(n, arr):\n    res = 0\n    decreasing = [0] * n\n    increasing = [0] * n\n    for i in range(1, n):\n        decreasing[i] = i if arr[i] < arr[i - 1] else decreasing[i - 1]\n        increasing[i] = i if arr[i] > arr[i - 1] else increasing[i - 1]\n    for i in range(n):\n        res += i - decreasing[i] + 1\n        res += i - increasing[i]\n        if increasing[decreasing[i]] < increasing[i]:\n            res += decreasing[i] - increasing[decreasing[i]]\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = (*map(int, s.split()),)\n    r = 2 * len(a) - 1\n    m = 0\n    for (x, y, z) in zip(a, a[1:], a[2:]):\n        if x < y > z:\n            m = 0\n        else:\n            m += 1\n            r += m\n    print(r)", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = (*map(int, s.split()),)\n    n = len(a)\n    r = 2 * n - 1\n    m = 0\n    for i in range(n - 2):\n        if a[i] < a[i + 1] > a[i + 2]:\n            m = 0\n        else:\n            m += 1\n            r += m\n    print(r)", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = (*map(int, s.split()),)\n    r = 2 * len(a) - 1\n    m = 0\n    for (x, y, z) in zip(a, a[1:], a[2:]):\n        if x < y > z:\n            m = 0\n        else:\n            m += 1\n            r += m\n    print(r)", "import sys\nfrom itertools import islice\nfor s in islice(sys.stdin, 2, None, 2):\n    a = (*map(int, s.split()),)\n    s = ''.join(('* '[x < y > z] for (x, y, z) in zip(a, a[1:], a[2:])))\n    print(2 * len(a) - 1 + sum((l * (l + 1) // 2 for l in map(len, s.split()))))", "def solve(aa, nn):\n    ff = [1] * nn\n    gg = [1] * nn\n    for i in range(1, nn):\n        if aa[i] > aa[i - 1]:\n            ff[i] += ff[i - 1]\n        if aa[i] < aa[i - 1]:\n            ff[i] += gg[i - 1]\n            gg[i] += gg[i - 1]\n    ans = 0\n    for i in range(nn):\n        ans += max(ff[i], gg[i])\n    return ans\ntt = int(input())\nfor _ in range(tt):\n    nn = int(input())\n    aa = list(map(int, input().split()))\n    print(solve(aa, nn))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    ans = n + 0\n    f = 0\n    for i in range(1, n):\n        if f == 2:\n            if a[i] < a[i - 1]:\n                f = i - s\n                ans += f * (f + 1) // 2 - f\n                s = i - 1\n                f = 1\n        elif f == 1:\n            if a[i] > a[i - 1]:\n                f = 2\n        elif a[i] > a[i - 1]:\n            f = 2\n        elif a[i] < a[i - 1]:\n            f = 1\n    if s < n - 1:\n        f = n - s\n        ans += f * (f + 1) // 2 - f\n        s = i\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (left, right) = ([1] * n, [1] * n)\n    for i in range(1, n):\n        if p[i] < p[i - 1]:\n            left[i] += left[i - 1]\n        if p[n - 1 - i] < p[n - i]:\n            right[n - 1 - i] += right[n - i]\n    print(sum((left[i] * right[i] for i in range(n))))", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    l = [1] * n\n    r = [1] * n\n    for i in range(1, n):\n        if p[i] <= p[i - 1]:\n            l[i] += l[i - 1]\n    for i in range(n - 2, -1, -1):\n        if p[i] < p[i + 1]:\n            r[i] += r[i + 1]\n    ans = 0\n    for i in range(n):\n        ans += l[i] * r[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    tot = 0\n    n = int(input())\n    (l, r) = ([1] * n, [1] * n)\n    arr = list(map(int, input().split()))\n    for i in range(1, n):\n        if arr[i] < arr[i - 1]:\n            l[i] += l[i - 1]\n        if arr[n - i - 1] < arr[n - i]:\n            r[n - i - 1] += r[n - i]\n    print(sum((l[i] * r[i] for i in range(n))))", "def solve(a, n):\n    f = [1] * n\n    g = [1] * n\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            f[i] += f[i - 1]\n        if a[i] < a[i - 1]:\n            f[i] += g[i - 1]\n            g[i] += g[i - 1]\n    ans = 0\n    for i in range(n):\n        ans += max(f[i], g[i])\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a, n))", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    a = [0]\n    ans = n\n    for i in range(1, n - 1):\n        if p[i] > p[i - 1] and p[i] > p[i + 1]:\n            a.append(i)\n    a.append(n - 1)\n    for i in range(1, len(a)):\n        l = a[i] - a[i - 1] + 1\n        ans += l * (l - 1) // 2\n    print(ans)", "def weirdArr(n, p):\n    hills = [0]\n    for i in range(1, n - 1):\n        if p[i] > p[i - 1] and p[i] > p[i + 1]:\n            hills.append(i)\n    hills.append(n - 1)\n    ans = 0\n    for i in range(0, len(hills) - 1):\n        leng = hills[i + 1] - hills[i] + 1\n        ans += leng * (leng - 1) // 2\n    ans += n\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = [int(x) for x in input().split()]\n    ans = weirdArr(n, p)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = 0\n    a = list(map(int, input().split()))\n    (pref, suff) = ([1] * n, [1] * n)\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            pref[i] += pref[i - 1]\n        if a[n - i - 1] < a[n - i]:\n            suff[n - i - 1] += suff[n - i]\n    ans = 0\n    for i in range(n):\n        ans += pref[i] * suff[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = 0\n    a = list(map(int, input().split()))\n    (pref, suff) = ([1] * n, [1] * n)\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            pref[i] += pref[i - 1]\n        if a[n - i - 1] < a[n - i]:\n            suff[n - i - 1] += suff[n - i]\n    ans = 0\n    for i in range(n):\n        ans += pref[i] * suff[i]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    dec = [0] * n\n    inc = [0] * n\n    dec[n - 1] = n - 1\n    inc[n - 1] = n - 1\n    i = n - 2\n    while i >= 0:\n        if p[i] > p[i + 1]:\n            dec[i] = dec[i + 1]\n            inc[i] = i\n        else:\n            dec[i] = i\n            inc[i] = inc[i + 1]\n        i -= 1\n    sm = 0\n    for i in range(n):\n        j = dec[i]\n        k = inc[j]\n        sm += k - i + 1\n    print(sm)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    count = 1\n    up = False\n    ans = 0\n    for i in range(1, n):\n        if p[i] > p[i - 1]:\n            count += 1\n            up = True\n        elif up:\n            ans += (count - 1) * count // 2\n            up = False\n            count = 2\n        else:\n            count += 1\n    ans += (count - 1) * count // 2 + n\n    print(ans)", "for messi in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split(' ')))\n    hill = []\n    ans = 0\n    hill.append(0)\n    for i in range(1, n - 1):\n        if p[i] > p[i - 1] and p[i] > p[i + 1]:\n            hill.append(i)\n    hill.append(n - 1)\n    for i in range(len(hill) - 1):\n        dist = hill[i + 1] - hill[i] + 1\n        ans += dist * (dist - 1) // 2\n    ans += n\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    v = []\n    v.append(1)\n    for i in range(1, n - 1):\n        if p[i] > p[i - 1] and p[i] > p[i + 1]:\n            v.append(i + 1)\n    v.append(n)\n    ans = 0\n    c = 0\n    for i in range(1, len(v)):\n        c = v[i] - v[i - 1] + 1\n        ans += c * (c + 1) // 2\n    ans -= len(v) - 2\n    print(ans)", "for messi in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split(' ')))\n    hill = []\n    ans = 0\n    hill.append(0)\n    for i in range(1, n - 1):\n        if p[i] > p[i - 1] and p[i] > p[i + 1]:\n            hill.append(i)\n    hill.append(n - 1)\n    for i in range(len(hill) - 1):\n        dist = hill[i + 1] - hill[i] + 1\n        ans += dist * (dist - 1) // 2\n    ans += n\n    print(ans)", "for T in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dec = [0] * n\n    inc = [0] * n\n    dec[n - 1] = n - 1\n    inc[n - 1] = n - 1\n    for i in range(n - 2, -1, -1):\n        if l[i] > l[i + 1]:\n            dec[i] = dec[i + 1]\n            inc[i] = i\n        else:\n            inc[i] = inc[i + 1]\n            dec[i] = i\n    ans = 0\n    for i in range(n):\n        j = dec[i]\n        k = inc[j]\n        ans += k - i + 1\n    print(ans)", "from sys import stdin\ninput = stdin.readline\n\ndef solve(N, P):\n    count = 0\n    hills = [i for i in range(1, N - 1) if P[i - 1] < P[i] > P[i + 1]]\n    hills = [0] + hills + [N - 1]\n    for (left, right) in zip(hills, hills[1:]):\n        size = right - left + 1\n        count += size * (size - 1) // 2\n    return count + N\nT = int(input().strip())\nfor problem in range(1, T + 1):\n    N = int(input().strip())\n    P = [int(x) for x in input().strip().split()]\n    print(solve(N, P))", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().strip().split()))\n    res = 0\n    l = [0]\n    for i in range(1, n - 1):\n        if p[i - 1] < p[i] > p[i + 1]:\n            l.append(i)\n    l.append(n - 1)\n    for i in range(len(l) - 1):\n        temp = l[i + 1] - l[i] + 1\n        res += temp * (temp - 1) / 2\n    res += n\n    print(int(res))", "import bisect\nimport math\nimport sys\nfrom collections import Counter, deque\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    ans = 0\n    l = [0]\n    for i in range(1, len(a) - 1):\n        if a[i - 1] < a[i] > a[i + 1]:\n            l.append(i)\n    l.append(n - 1)\n    for i in range(0, len(l) - 1):\n        temp = l[i + 1] - l[i] + 1\n        ans += temp * (temp - 1) / 2\n    ans += n\n    print(int(ans))", "def soln(n, arr):\n    streak = 1\n    res = 0\n    i = 0\n    while i < n - 1:\n        if arr[i] < arr[i + 1]:\n            i += 1\n            streak += 1\n        else:\n            arr[i] = -arr[i]\n            if i > 0 and arr[i - 1] > 0:\n                if res != 0:\n                    res -= 1\n                res += streak * (streak + 1) // 2\n                streak = 1\n    if res != 0:\n        res -= 1\n    res += streak * (streak + 1) // 2\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(soln(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    (left, right) = ([1] * n, [1] * n)\n    for i in range(1, n):\n        if p[i] < p[i - 1]:\n            left[i] += left[i - 1]\n        if p[n - 1 - i] < p[n - i]:\n            right[n - 1 - i] += right[n - i]\n    print(sum((left[i] * right[i] for i in range(n))))", "def soln(n, arr):\n    left = [1]\n    for i in range(1, n):\n        if arr[i - 1] > arr[i]:\n            left.append(left[-1] + 1)\n        else:\n            left.append(1)\n    right = [1] * n\n    for i in range(n - 2, -1, -1):\n        if arr[i + 1] > arr[i]:\n            right[i] = 1 + right[i + 1]\n    res = 0\n    for i in range(n):\n        res += left[i] * right[i]\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(soln(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    v = []\n    v.append(1)\n    for i in range(1, n - 1):\n        if p[i] > p[i - 1] and p[i] > p[i + 1]:\n            v.append(i + 1)\n    v.append(n)\n    ans = 0\n    c = 0\n    for i in range(1, len(v)):\n        c = v[i] - v[i - 1] + 1\n        ans += c * (c + 1) // 2\n    ans -= len(v) - 2\n    print(ans)", "ans = []\nnq = int(input())\nfor _ in range(nq):\n    n = int(input())\n    A = list(map(int, input().split()))\n    i = 0\n    sol = []\n    val = 0\n    for j in range(1, n - 1):\n        if A[j] > A[j - 1] and A[j] > A[j + 1]:\n            val += (j - i + 1) * (j - i + 2) // 2\n            val += -1\n            i = j\n    val += (n - i) * (n - i + 1) // 2\n    ans.append(val)\nprint(*ans, sep='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    b = [1]\n    for i in range(1, n - 1):\n        if l[i] > l[i + 1]:\n            if l[i] > l[i - 1]:\n                b.append(i + 1)\n    b.append(n)\n    ans = 0\n    for i in range(1, len(b)):\n        temp = b[i] - b[i - 1] + 1\n        ans += temp * (temp + 1) // 2\n    print(ans - (len(b) - 2))", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    v = []\n    v.append(1)\n    for i in range(1, n - 1):\n        if p[i] > p[i - 1] and p[i] > p[i + 1]:\n            v.append(i + 1)\n    v.append(n)\n    ans = 0\n    c = 0\n    for i in range(1, len(v)):\n        c = v[i] - v[i - 1] + 1\n        ans += c * (c + 1) // 2\n    ans -= len(v) - 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [abs(int(x)) for x in input().split()]\n    sets = []\n    lflag = False\n    start = 0\n    for end in range(n - 1):\n        if not lflag:\n            if a[end] < a[end + 1]:\n                lflag = True\n        elif a[end] > a[end + 1]:\n            sets.append([start, end])\n            temp = end\n            while a[temp] == a[end]:\n                start = temp\n                temp -= 1\n            lflag = False\n    sets.append([start, n - 1])\n    ans = 0\n    for i in range(len(sets)):\n        l = sets[i][1] - sets[i][0] + 1\n        ans += l * (l + 1) / 2\n        if i < len(sets) - 1 and sets[i + 1][0] <= sets[i][1]:\n            l = sets[i][1] - sets[i + 1][0] + 1\n            ans -= l * (l + 1) / 2\n    print(int(ans))", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n    else:\n        ord1 = [0] * (n - 1)\n        sum1 = 0\n        for i in range(0, n - 1):\n            if a[i] < a[i + 1]:\n                ord1[i] = 1\n            else:\n                ord1[i] = 0\n        cur = ord1[0]\n        j = 0\n        counts = [0] * n\n        counts[0] = 1\n        for i in range(0, n - 1):\n            if ord1[i] == cur:\n                counts[j] += 1\n            elif cur == 0:\n                cur = 1\n                counts[j] += 1\n            else:\n                j = j + 1\n                counts[j] = 2\n                cur = 0\n        k = 0\n        for i in range(0, n):\n            m = counts[i]\n            if m > 0:\n                sum1 += m * (m + 1) // 2\n                k = k + 1\n        k = k - 1\n        print(sum1 - k)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    l.append(1)\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] and a[i] > a[i + 1]:\n            l.append(i + 1)\n    l.append(n)\n    ans = 0\n    for i in range(1, len(l)):\n        c = l[i] - l[i - 1] + 1\n        ans += c * (c + 1) // 2\n    ans -= len(l) - 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [abs(int(x)) for x in input().split()]\n    sets = []\n    lflag = False\n    start = 0\n    for end in range(n - 1):\n        if not lflag:\n            if a[end] < a[end + 1]:\n                lflag = True\n        elif a[end] > a[end + 1]:\n            sets.append([start, end])\n            temp = end\n            while a[temp] == a[end]:\n                start = temp\n                temp -= 1\n            lflag = False\n    sets.append([start, n - 1])\n    ans = 0\n    for i in range(len(sets)):\n        l = sets[i][1] - sets[i][0] + 1\n        ans += l * (l + 1) / 2\n        if i < len(sets) - 1 and sets[i + 1][0] <= sets[i][1]:\n            l = sets[i][1] - sets[i + 1][0] + 1\n            ans -= l * (l + 1) / 2\n    print(int(ans))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = []\n    dp.append(1)\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] and a[i] > a[i + 1]:\n            dp.append(i + 1)\n    dp.append(n)\n    ans = 0\n    for i in range(1, len(dp)):\n        c = dp[i] - dp[i - 1] + 1\n        ans += c * (c + 1) // 2\n    ans -= len(dp) - 2\n    print(ans)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ls = [1]\n    for i in range(1, n - 1):\n        if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:\n            ls.append(i + 1)\n    ls.append(n)\n    ans = 0\n    cnt = 0\n    for i in range(1, len(ls)):\n        cnt = ls[i] - ls[i - 1] + 1\n        ans += cnt * (cnt + 1) // 2\n    ans -= len(ls) - 2\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N == 1:\n        print(1)\n    elif N == 2:\n        print(3)\n    else:\n        C = 2\n        F = A[1] > A[0]\n        final = 0\n        for i in range(2, N):\n            if not F or (F and A[i] > A[i - 1]):\n                if not F and A[i] > A[i - 1]:\n                    F = True\n                C += 1\n            else:\n                final += C * (C + 1) // 2\n                if final > C * (C + 1) // 2:\n                    final -= 1\n                C = 2\n                F ^= True\n        if C > 0:\n            final += C * (C + 1) // 2\n            if final > C * (C + 1) // 2:\n                final -= 1\n        print(final)", "def sum(n):\n    if n > 2:\n        return (n - 2) * (n - 1) / 2\n    return 0\na = int(input())\nfor i in range(a):\n    b = int(input())\n    array = list(map(int, input().split()))\n    count = b + b - 1\n    ini = 0\n    f = 1\n    while f < len(array) - 1:\n        if array[f + 1] < array[f] > array[f - 1]:\n            count += sum(f - ini + 1)\n            ini = f\n        elif f == len(array) - 1:\n            count += sum(f + 1 - ini + 1)\n        f += 1\n    count += sum(f - ini + 1)\n    print(int(count))", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ls = []\n    ls.append(1)\n    for i in range(1, n - 1):\n        if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:\n            ls.append(i + 1)\n    ls.append(n)\n    ans = 0\n    cnt = 0\n    for i in range(1, len(ls)):\n        cnt = ls[i] - ls[i - 1] + 1\n        ans += cnt * (cnt + 1) // 2\n    ans -= len(ls) - 2\n    print(ans)", "for _ in range(int(input())):\n    ans = 0\n    n = int(input())\n    ls = list(map(int, input().split(' ')))\n    ls.insert(0, 0)\n    ls.append(0)\n    t = 0\n    ct = 0\n    for i in range(n + 2):\n        if i == 0 or i == n + 1:\n            continue\n        if ls[i - 1] < ls[i] and ls[i] > ls[i + 1]:\n            t = t + 1\n            ct = ct + 1\n            ans = ans + t * (t + 1) // 2\n            t = 1\n        else:\n            t = t + 1\n    ans = ans + t * (t + 1) // 2\n    print(ans - ct)", "testc = int(input())\nfor q in range(testc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = [1]\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] and a[i] > a[i + 1]:\n            l.append(i + 1)\n    l.append(n)\n    ans = 0\n    x = len(l)\n    for i in range(1, x):\n        c = l[i] - l[i - 1] + 1\n        ans += c * (c + 1) // 2\n    ans -= x - 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    liDiff = []\n    last = 0\n    count = 0\n    for i in li:\n        if i >= last:\n            count += 1\n        else:\n            liDiff.append(count)\n            count = 1\n        last = i\n    liDiff.append(count)\n    liNew = []\n    count = 0\n    for i in range(len(liDiff)):\n        if liDiff[i] == 1:\n            count += 1\n        else:\n            if i != 0 and i - count != 0:\n                liNew.append(liDiff[i] + count + 1)\n            else:\n                liNew.append(liDiff[i] + count)\n            count = 0\n    if count > 0:\n        if count == len(liDiff):\n            liNew.append(count)\n        else:\n            liNew.append(count + 1)\n    ans = 0\n    for i in liNew:\n        ans = ans + i * (i + 1) // 2\n    ans += n - sum(liNew)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    P = list(map(int, input().split()))\n    if N == 1:\n        print(1)\n    elif N == 2:\n        print(3)\n    else:\n        l = ['D' if i == 0 or P[i] < P[i - 1] else 'I' for i in range(N)]\n        inI = False\n        nDs = nIs = 0\n        ans = 0\n        for c in l:\n            if c == 'D':\n                if inI:\n                    inI = False\n                    (nDs, nIs) = (1, 0)\n                nDs += 1\n                ans += nDs\n                inI = False\n            else:\n                nIs += 1\n                ans += nDs + nIs\n                inI = True\n        print(ans)", "T = int(input())\nwhile T > 0:\n    n = int(input())\n    a = [int(item) for item in input().split()]\n    v = [1]\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] and a[i] > a[i + 1]:\n            v.append(i + 1)\n    v.append(n)\n    ans = 0\n    cnt = 0\n    for i in range(1, len(v)):\n        cnt = v[i] - v[i - 1] + 1\n        ans += cnt * (cnt + 1) // 2\n    ans -= len(v) - 2\n    print(ans)\n    T -= 1", "def solve(n, arr):\n    if n == 1:\n        return 1\n    tmp = []\n    lst = []\n    res = 0\n    for i in range(1, n):\n        tmp.append(arr[i] < arr[i - 1])\n    lst.append([tmp[0], 1])\n    for i in range(1, len(tmp)):\n        if tmp[i] == lst[len(lst) - 1][0]:\n            lst[len(lst) - 1][1] += 1\n        else:\n            lst.append([tmp[i], 1])\n    lst.append([0, 0])\n    for i in range(len(lst) - 1):\n        res += lst[i][1] * (lst[i][1] + 1) // 2\n    for i in range(len(lst) - 1):\n        if lst[i][0] == 1:\n            res += lst[i][1] * lst[i + 1][1]\n    return res + n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))"]