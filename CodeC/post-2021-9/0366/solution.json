["for tc in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    s1 = 0\n    v = {'a', 'e', 'i', 'o', 'u'}\n    dv = {}\n    dc = {}\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] != '?' and p[i] != '?':\n                if s[i] in v and p[i] not in v:\n                    s1 += 1\n                elif s[i] not in v and p[i] in v:\n                    s1 += 1\n                else:\n                    s1 += 2\n            else:\n                if s[i] == '?':\n                    c = p[i]\n                else:\n                    c = s[i]\n                if c in v:\n                    if c in dv:\n                        dv[c] += 1\n                    else:\n                        dv[c] = 1\n                elif c in dc:\n                    dc[c] += 1\n                else:\n                    dc[c] = 1\n    (dc, dv) = (list(dc.values()), list(dv.values()))\n    (dc_sum, dv_sum) = (sum(dc), sum(dv))\n    (dc_max, dv_max) = (max(dc, default=0), max(dv, default=0))\n    print(s1 + min(2 * (dc_sum - dc_max) + dv_sum, 2 * (dv_sum - dv_max) + dc_sum))", "from collections import Counter\n\ndef calc(s, p):\n    res = 0\n    for i in range(len(p)):\n        a = s[i]\n        b = p[i]\n        if a == b:\n            continue\n        if a in 'aeiou' and b not in 'aeiuo':\n            res += 1\n        elif a not in 'aeiou' and b in 'aeiuo':\n            res += 1\n        else:\n            res += 2\n    return res\nfor t in range(int(input())):\n    n = int(input())\n    p = input()\n    s = input()\n    s1 = []\n    p1 = []\n    s2 = []\n    p2 = []\n    vowels = Counter()\n    cons = Counter()\n    for i in range(len(p)):\n        if p[i] == '?' and s[i] != '?':\n            if s[i] in 'aeiuo':\n                vowels[s[i]] += 1\n            else:\n                cons[s[i]] += 1\n        elif p[i] != '?' and s[i] == '?':\n            if p[i] in 'aeiuo':\n                vowels[p[i]] += 1\n            else:\n                cons[p[i]] += 1\n    vowel = 'a'\n    con = 'b'\n    for (key, val) in vowels.items():\n        if val > vowels[vowel]:\n            vowel = key\n    for (key, val) in cons.items():\n        if val > cons[con]:\n            con = key\n    for i in range(len(p)):\n        if s[i] == '?':\n            s1.append(vowel)\n            s2.append(con)\n        else:\n            s1.append(s[i])\n            s2.append(s[i])\n        if p[i] == '?':\n            p1.append(vowel)\n            p2.append(con)\n        else:\n            p1.append(p[i])\n            p2.append(p[i])\n    print(min(calc(s1, p1), calc(s2, p2)))", "from collections import Counter\n\ndef calc(s, p):\n    res = 0\n    for i in range(len(p)):\n        a = s[i]\n        b = p[i]\n        if a == b:\n            continue\n        if a in 'aeiou' and b not in 'aeiuo':\n            res += 1\n        elif a not in 'aeiou' and b in 'aeiuo':\n            res += 1\n        else:\n            res += 2\n    return res\nfor t in range(int(input())):\n    n = int(input())\n    p = input()\n    s = input()\n    s1 = []\n    p1 = []\n    s2 = []\n    p2 = []\n    vowels = Counter()\n    cons = Counter()\n    for i in range(len(p)):\n        if p[i] == '?' and s[i] != '?':\n            if s[i] in 'aeiuo':\n                vowels[s[i]] += 1\n            else:\n                cons[s[i]] += 1\n        elif p[i] != '?' and s[i] == '?':\n            if p[i] in 'aeiuo':\n                vowels[p[i]] += 1\n            else:\n                cons[p[i]] += 1\n    vowel = 'a'\n    con = 'b'\n    for (key, val) in vowels.items():\n        if val > vowels[vowel]:\n            vowel = key\n    for (key, val) in cons.items():\n        if val > cons[con]:\n            con = key\n    for i in range(len(p)):\n        if s[i] == '?':\n            s1.append(vowel)\n            s2.append(con)\n        else:\n            s1.append(s[i])\n            s2.append(s[i])\n        if p[i] == '?':\n            p1.append(vowel)\n            p2.append(con)\n        else:\n            p1.append(p[i])\n            p2.append(p[i])\n    print(min(calc(s1, p1), calc(s2, p2)))", "from collections import Counter\n\ndef calc(s, p):\n    res = 0\n    for i in range(len(p)):\n        a = s[i]\n        b = p[i]\n        if a == b:\n            continue\n        if a in 'aeiou' and b not in 'aeiuo':\n            res += 1\n        elif a not in 'aeiou' and b in 'aeiuo':\n            res += 1\n        else:\n            res += 2\n    return res\nfor t in range(int(input())):\n    n = int(input())\n    p = input()\n    s = input()\n    s1 = []\n    p1 = []\n    s2 = []\n    p2 = []\n    vowels = Counter()\n    cons = Counter()\n    for i in range(len(p)):\n        if p[i] == '?' and s[i] != '?':\n            if s[i] in 'aeiuo':\n                vowels[s[i]] += 1\n            else:\n                cons[s[i]] += 1\n        elif p[i] != '?' and s[i] == '?':\n            if p[i] in 'aeiuo':\n                vowels[p[i]] += 1\n            else:\n                cons[p[i]] += 1\n    vowel = 'a'\n    con = 'b'\n    for (key, val) in vowels.items():\n        if val > vowels[vowel]:\n            vowel = key\n    for (key, val) in cons.items():\n        if val > cons[con]:\n            con = key\n    for i in range(len(p)):\n        if s[i] == '?':\n            s1.append(vowel)\n            s2.append(con)\n        else:\n            s1.append(s[i])\n            s2.append(s[i])\n        if p[i] == '?':\n            p1.append(vowel)\n            p2.append(con)\n        else:\n            p1.append(p[i])\n            p2.append(p[i])\n    print(min(calc(s1, p1), calc(s2, p2)))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    s1 = 0\n    v = {'a', 'e', 'i', 'o', 'u'}\n    dv = {}\n    dc = {}\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] != '?' and p[i] != '?':\n                if s[i] in v and p[i] not in v:\n                    s1 += 1\n                elif s[i] not in v and p[i] in v:\n                    s1 += 1\n                else:\n                    s1 += 2\n            else:\n                if s[i] == '?':\n                    c = p[i]\n                else:\n                    c = s[i]\n                if c in v:\n                    if c in dv:\n                        dv[c] += 1\n                    else:\n                        dv[c] = 1\n                elif c in dc:\n                    dc[c] += 1\n                else:\n                    dc[c] = 1\n    (dc, dv) = (list(dc.values()), list(dv.values()))\n    (dc_sum, dv_sum) = (sum(dc), sum(dv))\n    (dc_max, dv_max) = (max(dc, default=0), max(dv, default=0))\n    print(s1 + min(2 * (dc_sum - dc_max) + dv_sum, 2 * (dv_sum - dv_max) + dc_sum))", "from collections import defaultdict\nv = 'aeiou'\nfor _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    p = str(input())\n    d = defaultdict(lambda : 0)\n    dd = defaultdict(lambda : 0)\n    ans = 0\n    m1 = 0\n    m2 = 0\n    c1 = 0\n    c2 = 0\n    for (i, j) in zip(s, p):\n        if i == j:\n            if i == '?':\n                f = 1\n            continue\n        if i != '?' and j != '?':\n            x = int(i in v) + int(j in v)\n            if x == 1:\n                ans += 1\n            else:\n                ans += 2\n            continue\n        elif i == '?':\n            if j not in v:\n                c2 += 1\n                dd[j] += 1\n                m2 = max(m2, dd[j])\n            else:\n                c1 += 1\n                d[j] += 1\n                m1 = max(m1, d[j])\n        elif j == '?':\n            if i not in v:\n                c2 += 1\n                dd[i] += 1\n                m2 = max(m2, dd[i])\n            else:\n                c1 += 1\n                d[i] += 1\n                m1 = max(m1, d[i])\n    ans += min(2 * (c1 - m1) + c2, 2 * (c2 - m2) + c1)\n    print(ans)", "vowels = {'a', 'e', 'i', 'o', 'u'}\n\ndef changeops(a, b):\n    if a == b:\n        return 0\n    elif a in vowels and b in vowels:\n        return 2\n    elif a not in vowels and b not in vowels:\n        return 2\n    else:\n        return 1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    change = [0 for i in range(n)]\n    vowcount = {}\n    conscount = {}\n    for i in range(97, 123):\n        if chr(i) in vowels:\n            vowcount[chr(i)] = 0\n        else:\n            conscount[chr(i)] = 0\n    s = str(input())\n    p = str(input())\n    for j in range(n):\n        si = s[j]\n        pi = p[j]\n        if si != '?' and pi != '?':\n            change[j] = changeops(si, pi)\n        if si == '?' and pi == '?':\n            change[j] = 0\n        elif si == '?':\n            if pi in vowels:\n                vowcount[pi] += 1\n            else:\n                conscount[pi] += 1\n        elif pi == '?':\n            if si in vowels:\n                vowcount[si] += 1\n            else:\n                conscount[si] += 1\n    totvow = sum(vowcount.values())\n    totcons = sum(conscount.values())\n    opcount = []\n    for v in vowcount:\n        opcount.append(totcons + (totvow - vowcount[v]) * 2)\n    for c in conscount:\n        opcount.append(totvow + (totcons - conscount[c]) * 2)\n    print(min(opcount) + sum(change))", "from collections import defaultdict\nv = 'aeiou'\nfor _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    p = str(input())\n    d = defaultdict(lambda : 0)\n    dd = defaultdict(lambda : 0)\n    ans = 0\n    m1 = 0\n    m2 = 0\n    c1 = 0\n    c2 = 0\n    for (i, j) in zip(s, p):\n        if i == j:\n            if i == '?':\n                f = 1\n            continue\n        if i != '?' and j != '?':\n            x = int(i in v) + int(j in v)\n            if x == 1:\n                ans += 1\n            else:\n                ans += 2\n            continue\n        elif i == '?':\n            if j not in v:\n                c2 += 1\n                dd[j] += 1\n                m2 = max(m2, dd[j])\n            else:\n                c1 += 1\n                d[j] += 1\n                m1 = max(m1, d[j])\n        elif j == '?':\n            if i not in v:\n                c2 += 1\n                dd[i] += 1\n                m2 = max(m2, dd[i])\n            else:\n                c1 += 1\n                d[i] += 1\n                m1 = max(m1, d[i])\n    ans += min(2 * (c1 - m1) + c2, 2 * (c2 - m2) + c1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    res = 0\n    v = 0\n    dv = {}\n    mv = 0\n    c = 0\n    dc = {}\n    mc = 0\n    for i in range(n):\n        a = s[i]\n        b = p[i]\n        if a == b:\n            continue\n        if a == '?' or b == '?':\n            if a == '?':\n                l = b\n            else:\n                l = a\n            if l in ['a', 'e', 'i', 'o', 'u']:\n                v += 1\n                dv[l] = dv.get(l, 0) + 1\n                mv = max(dv[l], mv)\n            else:\n                c += 1\n                dc[l] = dc.get(l, 0) + 1\n                mc = max(dc[l], mc)\n            continue\n        av = False\n        bv = False\n        if a in ['a', 'e', 'i', 'o', 'u']:\n            av = True\n        if b in ['a', 'e', 'i', 'o', 'u']:\n            bv = True\n        if av == bv:\n            res += 2\n        else:\n            res += 1\n    c_cost = (c - mc) * 2 + v\n    v_cost = (v - mv) * 2 + c\n    print(res + min(c_cost, v_cost))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    res = 0\n    v = 0\n    dv = {}\n    mv = 0\n    c = 0\n    dc = {}\n    mc = 0\n    for i in range(n):\n        a = s[i]\n        b = p[i]\n        if a == b:\n            continue\n        if a == '?' or b == '?':\n            if a == '?':\n                l = b\n            else:\n                l = a\n            if l in ['a', 'e', 'i', 'o', 'u']:\n                v += 1\n                dv[l] = dv.get(l, 0) + 1\n                mv = max(dv[l], mv)\n            else:\n                c += 1\n                dc[l] = dc.get(l, 0) + 1\n                mc = max(dc[l], mc)\n            continue\n        av = False\n        bv = False\n        if a in ['a', 'e', 'i', 'o', 'u']:\n            av = True\n        if b in ['a', 'e', 'i', 'o', 'u']:\n            bv = True\n        if av == bv:\n            res += 2\n        else:\n            res += 1\n    c_cost = (c - mc) * 2 + v\n    v_cost = (v - mv) * 2 + c\n    print(res + min(c_cost, v_cost))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    res = 0\n    v = 0\n    dv = {}\n    mv = 0\n    c = 0\n    dc = {}\n    mc = 0\n    for i in range(n):\n        a = s[i]\n        b = p[i]\n        if a == b:\n            continue\n        if a == '?' or b == '?':\n            if a == '?':\n                l = b\n            else:\n                l = a\n            if l in ['a', 'e', 'i', 'o', 'u']:\n                v += 1\n                dv[l] = dv.get(l, 0) + 1\n                mv = max(dv[l], mv)\n            else:\n                c += 1\n                dc[l] = dc.get(l, 0) + 1\n                mc = max(dc[l], mc)\n            continue\n        av = False\n        bv = False\n        if a in ['a', 'e', 'i', 'o', 'u']:\n            av = True\n        if b in ['a', 'e', 'i', 'o', 'u']:\n            bv = True\n        if av == bv:\n            res += 2\n        else:\n            res += 1\n    c_cost = (c - mc) * 2 + v\n    v_cost = (v - mv) * 2 + c\n    print(res + min(c_cost, v_cost))", "def check_vowel(x):\n    if x in 'aeiou':\n        return True\n    return False\n\ndef get_min_move(s, p, N):\n    min_move = N * 2\n    for ch in 'abcdefghijklmnopqrstuvwxyz':\n        s_arr = s\n        p_arr = p\n        s_arr = s_arr.replace('?', ch)\n        p_arr = p_arr.replace('?', ch)\n        move = 0\n        for i in range(N):\n            s_arr_vowel = check_vowel(s_arr[i])\n            p_arr_vowel = check_vowel(p_arr[i])\n            if s_arr[i] == p_arr[i]:\n                continue\n            elif s_arr_vowel and (not p_arr_vowel):\n                move += 1\n            elif p_arr_vowel and (not s_arr_vowel):\n                move += 1\n            else:\n                move += 2\n        if move < min_move:\n            min_move = move\n    return min_move\nfor i in range(int(input())):\n    N = int(input())\n    s_arr = input()\n    p_arr = input()\n    min_move = get_min_move(s_arr, p_arr, N)\n    print(min_move)", "def check_vowel(x):\n    if x in 'aeiou':\n        return True\n    return False\n\ndef get_min_move(s, p, N):\n    min_move = 99999999999999\n    for ch in 'abcdefghijklmnopqrstuvwxyz':\n        s_arr = s\n        p_arr = p\n        s_arr = s_arr.replace('?', ch)\n        p_arr = p_arr.replace('?', ch)\n        move = 0\n        for i in range(N):\n            s_arr_vowel = check_vowel(s_arr[i])\n            p_arr_vowel = check_vowel(p_arr[i])\n            if s_arr[i] == p_arr[i]:\n                pass\n            elif s_arr_vowel and (not p_arr_vowel):\n                move += 1\n            elif p_arr_vowel and (not s_arr_vowel):\n                move += 1\n            else:\n                move += 2\n        if move == 0:\n            min_move = move\n            break\n        else:\n            min_move = min(move, min_move)\n    return min_move\nfor i in range(int(input())):\n    N = int(input())\n    s_arr = input()\n    p_arr = input()\n    min_move = get_min_move(s_arr, p_arr, N)\n    print(min_move)", "def check_vowel(x):\n    if x in 'aeiou':\n        return True\n    return False\n\ndef get_min_move(s, p, N):\n    min_move = 99999999999999\n    for ch in 'abcdefghijklmnopqrstuvwxyz':\n        s_arr = s\n        p_arr = p\n        s_arr = s_arr.replace('?', ch)\n        p_arr = p_arr.replace('?', ch)\n        move = 0\n        for i in range(N):\n            s_arr_vowel = check_vowel(s_arr[i])\n            p_arr_vowel = check_vowel(p_arr[i])\n            if s_arr[i] == p_arr[i]:\n                pass\n            elif s_arr_vowel and (not p_arr_vowel):\n                move += 1\n            elif p_arr_vowel and (not s_arr_vowel):\n                move += 1\n            else:\n                move += 2\n        if move == 0:\n            min_move = move\n            break\n        else:\n            min_move = min(move, min_move)\n    return min_move\nfor i in range(int(input())):\n    N = int(input())\n    s_arr = input()\n    p_arr = input()\n    min_move = get_min_move(s_arr, p_arr, N)\n    print(min_move)", "def check_vowel(x):\n    if x in 'aeiou':\n        return True\n    return False\n\ndef get_min_move(s, p, N):\n    min_move = 99999999999999\n    for ch in 'abcdefghijklmnopqrstuvwxyz':\n        s_arr = s\n        p_arr = p\n        s_arr = s_arr.replace('?', ch)\n        p_arr = p_arr.replace('?', ch)\n        move = 0\n        for i in range(N):\n            s_arr_vowel = check_vowel(s_arr[i])\n            p_arr_vowel = check_vowel(p_arr[i])\n            if s_arr[i] == p_arr[i]:\n                pass\n            elif s_arr_vowel and (not p_arr_vowel):\n                move += 1\n            elif p_arr_vowel and (not s_arr_vowel):\n                move += 1\n            else:\n                move += 2\n        if move == 0:\n            min_move = move\n            break\n        else:\n            min_move = min(move, min_move)\n    return min_move\nfor i in range(int(input())):\n    N = int(input())\n    s_arr = input()\n    p_arr = input()\n    min_move = get_min_move(s_arr, p_arr, N)\n    print(min_move)", "def check_vowel(x):\n    if x == 'a' or x == 'e' or x == 'i' or (x == 'o') or (x == 'u'):\n        return True\n    return False\n\ndef get_min_move(s, p, N):\n    min_move = 99999999999999\n    for ch in 'abcdefghijklmnopqrstuvwxyz':\n        s_arr = s\n        p_arr = p\n        s_arr = s_arr.replace('?', ch)\n        p_arr = p_arr.replace('?', ch)\n        move = 0\n        for i in range(N):\n            if s_arr[i] == p_arr[i]:\n                pass\n            elif s_arr[i] in 'aeiou' and p_arr[i] not in 'aeiou':\n                move += 1\n            elif p_arr[i] in 'aeiou' and s_arr[i] not in 'aeiou':\n                move += 1\n            else:\n                move += 2\n        if move == 0:\n            min_move = move\n            break\n        else:\n            min_move = min(move, min_move)\n    return min_move\nfor i in range(int(input())):\n    N = int(input())\n    s_arr = input()\n    p_arr = input()\n    min_move = get_min_move(s_arr, p_arr, N)\n    print(min_move)", "import string\nV = ['a', 'e', 'i', 'o', 'u']\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    p = list(input())\n    d = dict.fromkeys(string.ascii_lowercase, 0)\n    ans = 0\n    vc = 0\n    cc = 0\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] == '?':\n                d[p[i]] += 1\n                if p[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif p[i] == '?':\n                d[s[i]] += 1\n                if s[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif s[i] in V and p[i] in V:\n                ans += 2\n            elif s[i] in V and p[i] not in V:\n                ans += 1\n            elif s[i] not in V and p[i] in V:\n                ans += 1\n            elif s[i] not in V and p[i] not in V:\n                ans += 2\n    (vm, cm) = [0, 0]\n    for i in list(d.keys()):\n        if i in V:\n            vm = max(vm, d[i])\n        else:\n            cm = max(cm, d[i])\n    ans = ans + min((cc - cm) * 2 + vc, (vc - vm) * 2 + cc, cc * 2 + vc, vc * 2 + cc)\n    print(ans)", "import string\nV = ['a', 'e', 'i', 'o', 'u']\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    p = list(input())\n    d = dict.fromkeys(string.ascii_lowercase, 0)\n    ans = 0\n    vc = 0\n    cc = 0\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] == '?':\n                d[p[i]] += 1\n                if p[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif p[i] == '?':\n                d[s[i]] += 1\n                if s[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif s[i] in V and p[i] in V:\n                ans += 2\n            elif s[i] in V and p[i] not in V:\n                ans += 1\n            elif s[i] not in V and p[i] in V:\n                ans += 1\n            elif s[i] not in V and p[i] not in V:\n                ans += 2\n    (vm, cm) = [0, 0]\n    for i in list(d.keys()):\n        if i in V:\n            vm = max(vm, d[i])\n        else:\n            cm = max(cm, d[i])\n    ans = ans + min((cc - cm) * 2 + vc, (vc - vm) * 2 + cc, cc * 2 + vc, vc * 2 + cc)\n    print(ans)", "import string\nV = ['a', 'e', 'i', 'o', 'u']\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    p = list(input())\n    d = dict.fromkeys(string.ascii_lowercase, 0)\n    ans = 0\n    vc = 0\n    cc = 0\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] == '?':\n                d[p[i]] += 1\n                if p[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif p[i] == '?':\n                d[s[i]] += 1\n                if s[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif s[i] in V and p[i] in V:\n                ans += 2\n            elif s[i] in V and p[i] not in V:\n                ans += 1\n            elif s[i] not in V and p[i] in V:\n                ans += 1\n            elif s[i] not in V and p[i] not in V:\n                ans += 2\n    (vm, cm) = [0, 0]\n    for i in list(d.keys()):\n        if i in V:\n            vm = max(vm, d[i])\n        else:\n            cm = max(cm, d[i])\n    ans = ans + min((cc - cm) * 2 + vc, (vc - vm) * 2 + cc, cc * 2 + vc, vc * 2 + cc)\n    print(ans)", "import string\nV = ['a', 'e', 'i', 'o', 'u']\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    p = list(input())\n    d = dict.fromkeys(string.ascii_lowercase, 0)\n    ans = 0\n    vc = 0\n    cc = 0\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] == '?':\n                d[p[i]] += 1\n                if p[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif p[i] == '?':\n                d[s[i]] += 1\n                if s[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif s[i] in V and p[i] in V:\n                ans += 2\n            elif s[i] in V and p[i] not in V:\n                ans += 1\n            elif s[i] not in V and p[i] in V:\n                ans += 1\n            elif s[i] not in V and p[i] not in V:\n                ans += 2\n    (vm, cm) = [0, 0]\n    for i in list(d.keys()):\n        if i in V:\n            vm = max(vm, d[i])\n        else:\n            cm = max(cm, d[i])\n    ans = ans + min((cc - cm) * 2 + vc, (vc - vm) * 2 + cc, cc * 2 + vc, vc * 2 + cc)\n    print(ans)", "import string\nV = ['a', 'e', 'i', 'o', 'u']\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    p = list(input())\n    d = dict.fromkeys(string.ascii_lowercase, 0)\n    ans = 0\n    vc = 0\n    cc = 0\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] == '?':\n                d[p[i]] += 1\n                if p[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif p[i] == '?':\n                d[s[i]] += 1\n                if s[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif s[i] in V and p[i] in V:\n                ans += 2\n            elif s[i] in V and p[i] not in V:\n                ans += 1\n            elif s[i] not in V and p[i] in V:\n                ans += 1\n            elif s[i] not in V and p[i] not in V:\n                ans += 2\n    (vm, cm) = [0, 0]\n    for i in list(d.keys()):\n        if i in V:\n            vm = max(vm, d[i])\n        else:\n            cm = max(cm, d[i])\n    ans = ans + min((cc - cm) * 2 + vc, (vc - vm) * 2 + cc, cc * 2 + vc, vc * 2 + cc)\n    print(ans)", "import string\nV = ['a', 'e', 'i', 'o', 'u']\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    p = list(input())\n    d = dict.fromkeys(string.ascii_lowercase, 0)\n    ans = 0\n    vc = 0\n    cc = 0\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] == '?':\n                d[p[i]] += 1\n                if p[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif p[i] == '?':\n                d[s[i]] += 1\n                if s[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif s[i] in V and p[i] in V:\n                ans += 2\n            elif s[i] in V and p[i] not in V:\n                ans += 1\n            elif s[i] not in V and p[i] in V:\n                ans += 1\n            elif s[i] not in V and p[i] not in V:\n                ans += 2\n    (vm, cm) = [0, 0]\n    for i in list(d.keys()):\n        if i in V:\n            vm = max(vm, d[i])\n        else:\n            cm = max(cm, d[i])\n    ans = ans + min((cc - cm) * 2 + vc, (vc - vm) * 2 + cc, cc * 2 + vc, vc * 2 + cc)\n    print(ans)", "import string\nV = ['a', 'e', 'i', 'o', 'u']\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    p = list(input())\n    d = dict.fromkeys(string.ascii_lowercase, 0)\n    ans = 0\n    vc = 0\n    cc = 0\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] == '?':\n                d[p[i]] += 1\n                if p[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif p[i] == '?':\n                d[s[i]] += 1\n                if s[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif s[i] in V and p[i] in V:\n                ans += 2\n            elif s[i] in V and p[i] not in V:\n                ans += 1\n            elif s[i] not in V and p[i] in V:\n                ans += 1\n            elif s[i] not in V and p[i] not in V:\n                ans += 2\n    (vm, cm) = [0, 0]\n    for i in list(d.keys()):\n        if i in V:\n            vm = max(vm, d[i])\n        else:\n            cm = max(cm, d[i])\n    ans = ans + min((cc - cm) * 2 + vc, (vc - vm) * 2 + cc, cc * 2 + vc, vc * 2 + cc)\n    print(ans)", "import string\nV = ['a', 'e', 'i', 'o', 'u']\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    p = list(input())\n    d = dict.fromkeys(string.ascii_lowercase, 0)\n    ans = 0\n    vc = 0\n    cc = 0\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] == '?':\n                d[p[i]] += 1\n                if p[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif p[i] == '?':\n                d[s[i]] += 1\n                if s[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif s[i] in V and p[i] in V:\n                ans += 2\n            elif s[i] in V and p[i] not in V:\n                ans += 1\n            elif s[i] not in V and p[i] in V:\n                ans += 1\n            elif s[i] not in V and p[i] not in V:\n                ans += 2\n    (vm, cm) = [0, 0]\n    for i in list(d.keys()):\n        if i in V:\n            vm = max(vm, d[i])\n        else:\n            cm = max(cm, d[i])\n    ans = ans + min((cc - cm) * 2 + vc, (vc - vm) * 2 + cc, cc * 2 + vc, vc * 2 + cc)\n    print(ans)", "import string\nV = ['a', 'e', 'i', 'o', 'u']\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    p = list(input())\n    d = dict.fromkeys(string.ascii_lowercase, 0)\n    ans = 0\n    vc = 0\n    cc = 0\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] == '?':\n                d[p[i]] += 1\n                if p[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif p[i] == '?':\n                d[s[i]] += 1\n                if s[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif s[i] in V and p[i] in V:\n                ans += 2\n            elif s[i] in V and p[i] not in V:\n                ans += 1\n            elif s[i] not in V and p[i] in V:\n                ans += 1\n            elif s[i] not in V and p[i] not in V:\n                ans += 2\n    (vm, cm) = [0, 0]\n    for i in list(d.keys()):\n        if i in V:\n            vm = max(vm, d[i])\n        else:\n            cm = max(cm, d[i])\n    ans = ans + min((cc - cm) * 2 + vc, (vc - vm) * 2 + cc, cc * 2 + vc, vc * 2 + cc)\n    print(ans)", "import string\nV = ['a', 'e', 'i', 'o', 'u']\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    p = list(input())\n    d = dict.fromkeys(string.ascii_lowercase, 0)\n    ans = 0\n    vc = 0\n    cc = 0\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] == '?':\n                d[p[i]] += 1\n                if p[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif p[i] == '?':\n                d[s[i]] += 1\n                if s[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif s[i] in V and p[i] in V:\n                ans += 2\n            elif s[i] in V and p[i] not in V:\n                ans += 1\n            elif s[i] not in V and p[i] in V:\n                ans += 1\n            elif s[i] not in V and p[i] not in V:\n                ans += 2\n    (vm, cm) = [0, 0]\n    for i in list(d.keys()):\n        if i in V:\n            vm = max(vm, d[i])\n        else:\n            cm = max(cm, d[i])\n    ans = ans + min((cc - cm) * 2 + vc, (vc - vm) * 2 + cc, cc * 2 + vc, vc * 2 + cc)\n    print(ans)", "import string\nV = ['a', 'e', 'i', 'o', 'u']\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    p = list(input())\n    d = dict.fromkeys(string.ascii_lowercase, 0)\n    ans = 0\n    vc = 0\n    cc = 0\n    for i in range(n):\n        if s[i] != p[i]:\n            if s[i] == '?':\n                d[p[i]] += 1\n                if p[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif p[i] == '?':\n                d[s[i]] += 1\n                if s[i] in V:\n                    vc += 1\n                else:\n                    cc += 1\n            elif s[i] in V and p[i] in V:\n                ans += 2\n            elif s[i] in V and p[i] not in V:\n                ans += 1\n            elif s[i] not in V and p[i] in V:\n                ans += 1\n            elif s[i] not in V and p[i] not in V:\n                ans += 2\n    (vm, cm) = [0, 0]\n    for i in list(d.keys()):\n        if i in V:\n            vm = max(vm, d[i])\n        else:\n            cm = max(cm, d[i])\n    ans = ans + min((cc - cm) * 2 + vc, (vc - vm) * 2 + cc, cc * 2 + vc, vc * 2 + cc)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    ans = 0\n    cons = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    vowel = ['a', 'e', 'i', 'o', 'u']\n    (dc, dv) = ({}, {})\n    i = 0\n    while i < n:\n        if a[i] != b[i]:\n            if a[i] in cons and b[i] in vowel or (a[i] in vowel and b[i] in cons):\n                ans += 1\n            elif a[i] in cons and b[i] in cons or (a[i] in vowel and b[i] in vowel):\n                ans += 2\n            elif a[i] == '?':\n                if b[i] in cons:\n                    temp = dc.get(b[i], 0) + 1\n                    dc[b[i]] = temp\n                else:\n                    temp = dv.get(b[i], 0) + 1\n                    dv[b[i]] = temp\n            elif b[i] == '?':\n                if a[i] in cons:\n                    temp = dc.get(a[i], 0) + 1\n                    dc[a[i]] = temp\n                else:\n                    temp = dv.get(a[i], 0) + 1\n                    dv[a[i]] = temp\n        i += 1\n    x = 2 * (sum(dv.values()) - max(dv.values(), default=0)) + sum(dc.values())\n    y = 2 * (sum(dc.values()) - max(dc.values(), default=0)) + sum(dv.values())\n    print(ans + min(x, y))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    ans = 0\n    cons = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    vowel = ['a', 'e', 'i', 'o', 'u']\n    (dc, dv) = ({}, {})\n    i = 0\n    while i < n:\n        if a[i] != b[i]:\n            if a[i] in cons and b[i] in vowel or (a[i] in vowel and b[i] in cons):\n                ans += 1\n            elif a[i] in cons and b[i] in cons or (a[i] in vowel and b[i] in vowel):\n                ans += 2\n            elif a[i] == '?':\n                if b[i] in cons:\n                    temp = dc.get(b[i], 0) + 1\n                    dc[b[i]] = temp\n                else:\n                    temp = dv.get(b[i], 0) + 1\n                    dv[b[i]] = temp\n            elif b[i] == '?':\n                if a[i] in cons:\n                    temp = dc.get(a[i], 0) + 1\n                    dc[a[i]] = temp\n                else:\n                    temp = dv.get(a[i], 0) + 1\n                    dv[a[i]] = temp\n        i += 1\n    x = 2 * (sum(dv.values()) - max(dv.values(), default=0)) + sum(dc.values())\n    y = 2 * (sum(dc.values()) - max(dc.values(), default=0)) + sum(dv.values())\n    print(ans + min(x, y))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    ans = 0\n    cons = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    vowel = ['a', 'e', 'i', 'o', 'u']\n    (dc, dv) = ({}, {})\n    i = 0\n    while i < n:\n        if a[i] != b[i]:\n            if a[i] in cons and b[i] in vowel or (a[i] in vowel and b[i] in cons):\n                ans += 1\n            elif a[i] in cons and b[i] in cons or (a[i] in vowel and b[i] in vowel):\n                ans += 2\n            elif a[i] == '?':\n                if b[i] in cons:\n                    temp = dc.get(b[i], 0) + 1\n                    dc[b[i]] = temp\n                else:\n                    temp = dv.get(b[i], 0) + 1\n                    dv[b[i]] = temp\n            elif b[i] == '?':\n                if a[i] in cons:\n                    temp = dc.get(a[i], 0) + 1\n                    dc[a[i]] = temp\n                else:\n                    temp = dv.get(a[i], 0) + 1\n                    dv[a[i]] = temp\n        i += 1\n    x = 2 * (sum(dv.values()) - max(dv.values(), default=0)) + sum(dc.values())\n    y = 2 * (sum(dc.values()) - max(dc.values(), default=0)) + sum(dv.values())\n    print(ans + min(x, y))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    ans = 0\n    cons = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    vowel = ['a', 'e', 'i', 'o', 'u']\n    (dc, dv) = ({}, {})\n    i = 0\n    while i < n:\n        if a[i] != b[i]:\n            if a[i] in cons and b[i] in vowel or (a[i] in vowel and b[i] in cons):\n                ans += 1\n            elif a[i] in cons and b[i] in cons or (a[i] in vowel and b[i] in vowel):\n                ans += 2\n            elif a[i] == '?':\n                if b[i] in cons:\n                    temp = dc.get(b[i], 0) + 1\n                    dc[b[i]] = temp\n                else:\n                    temp = dv.get(b[i], 0) + 1\n                    dv[b[i]] = temp\n            elif b[i] == '?':\n                if a[i] in cons:\n                    temp = dc.get(a[i], 0) + 1\n                    dc[a[i]] = temp\n                else:\n                    temp = dv.get(a[i], 0) + 1\n                    dv[a[i]] = temp\n        i += 1\n    x = 2 * (sum(dv.values()) - max(dv.values(), default=0)) + sum(dc.values())\n    y = 2 * (sum(dc.values()) - max(dc.values(), default=0)) + sum(dv.values())\n    print(ans + min(x, y))", "inp = lambda : int(input())\nmul = lambda : map(int, input().split())\njn = lambda x, l: x.join(map(str, l))\nslst = lambda : list(input().split()[0])\nsilst = lambda : list(map(int, input().split()[0]))\nlst = lambda : list(map(int, input().split()))\ndd = lambda : defaultdict(lambda : 0)\nimport sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nfrom math import ceil, log, floor, sqrt, gcd, log10\n\ndef merge(a, lo, hi, m):\n    tmp = []\n    i = lo\n    j = m + 1\n    while i <= m and j <= hi:\n        if a[i] > a[j]:\n            tmp += [a[j]]\n            j += 1\n        else:\n            tmp += [a[i]]\n            i += 1\n    while i <= m:\n        tmp += [a[i]]\n        i += 1\n    while j <= hi:\n        tmp += [a[j]]\n        j += 1\n    j = 0\n    for i in range(lo, hi + 1):\n        a[i] = tmp[j]\n        j += 1\n\ndef msrt(arr, lo, hi):\n    if lo < hi:\n        m = (lo + hi) // 2\n        msrt(arr, lo, m)\n        msrt(arr, m + 1, hi)\n        merge(arr, lo, hi, m)\nfor _ in range(inp()):\n    n = inp()\n    s1 = input()\n    p1 = input()\n    ans = []\n    for x in list('abcdefghiklmnopqrstuvwxyz'):\n        s = s1\n        p = p1\n        count = 0\n        s = s.replace('?', x)\n        p = p.replace('?', x)\n        for i in range(n):\n            if s[i] == p[i]:\n                pass\n            elif s[i] in 'aeiou' and p[i] not in 'aeiou':\n                count += 1\n            elif p[i] in 'aeiou' and s[i] not in 'aeiou':\n                count += 1\n            else:\n                count += 2\n        ans.append(count)\n    print(min(ans))", "inp = lambda : int(input())\nmul = lambda : map(int, input().split())\njn = lambda x, l: x.join(map(str, l))\nslst = lambda : list(input().split()[0])\nsilst = lambda : list(map(int, input().split()[0]))\nlst = lambda : list(map(int, input().split()))\ndd = lambda : defaultdict(lambda : 0)\nimport sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nfrom math import ceil, log, floor, sqrt, gcd, log10\n\ndef merge(a, lo, hi, m):\n    tmp = []\n    i = lo\n    j = m + 1\n    while i <= m and j <= hi:\n        if a[i] > a[j]:\n            tmp += [a[j]]\n            j += 1\n        else:\n            tmp += [a[i]]\n            i += 1\n    while i <= m:\n        tmp += [a[i]]\n        i += 1\n    while j <= hi:\n        tmp += [a[j]]\n        j += 1\n    j = 0\n    for i in range(lo, hi + 1):\n        a[i] = tmp[j]\n        j += 1\n\ndef msrt(arr, lo, hi):\n    if lo < hi:\n        m = (lo + hi) // 2\n        msrt(arr, lo, m)\n        msrt(arr, m + 1, hi)\n        merge(arr, lo, hi, m)\nfor _ in range(inp()):\n    n = inp()\n    s1 = input()\n    p1 = input()\n    ans = []\n    for x in list('abcdefghiklmnopqrstuvwxyz'):\n        s = s1\n        p = p1\n        count = 0\n        s = s.replace('?', x)\n        p = p.replace('?', x)\n        for i in range(n):\n            if s[i] == p[i]:\n                pass\n            elif s[i] in 'aeiou' and p[i] not in 'aeiou':\n                count += 1\n            elif p[i] in 'aeiou' and s[i] not in 'aeiou':\n                count += 1\n            else:\n                count += 2\n        ans.append(count)\n    print(min(ans))", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)) + '\\n')\nvowels = 'aeiou'\n\ndef convert(n, p, s):\n    count = 0\n    for i in range(n):\n        if p[i] != s[i]:\n            if p[i] in vowels and s[i] in vowels:\n                count += 2\n            elif p[i] not in vowels and s[i] not in vowels:\n                count += 2\n            else:\n                count += 1\n    return count\n\ndef main():\n    for _ in tr():\n        n = nl()\n        s = line()\n        p = line()\n        count = 2 * n\n        for i in range(26):\n            rep = chr(ord('a') + i)\n            count = min(count, convert(n, p.replace('?', rep), s.replace('?', rep)))\n        print(count)\nmain()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = input()\n    p = input()\n    vowel = ['a', 'e', 'i', 'o', 'u']\n    temp = {}\n    for i in range(26):\n        temp[chr(i + 97)] = 0\n    vc = 0\n    cc = 0\n    ans = 0\n    for i in range(0, n):\n        if s[i] != p[i]:\n            if s[i] == '?':\n                temp[p[i]] += 1\n                if p[i] in vowel:\n                    vc += 1\n                else:\n                    cc += 1\n            elif p[i] == '?':\n                temp[s[i]] += 1\n                if s[i] in vowel:\n                    vc += 1\n                else:\n                    cc += 1\n            elif s[i] in vowel:\n                if p[i] in vowel:\n                    ans += 2\n                else:\n                    ans += 1\n            elif p[i] in vowel:\n                ans += 1\n            else:\n                ans += 2\n    ans_temp = 1000000000\n    for i in range(26):\n        if chr(i + 97) in vowel:\n            ans_temp = min(ans_temp, 2 * (vc - temp[chr(i + 97)]) + cc)\n        else:\n            ans_temp = min(ans_temp, 2 * (cc - temp[chr(i + 97)]) + vc)\n    print(ans + ans_temp)", "u = int(input())\nvow = {'a', 'e', 'i', 'o', 'u'}\nfor _ in range(u):\n    n = int(input())\n    s = input()\n    p = input()\n    answ = n * 2\n    for char in range(ord('a'), ord('z') + 1):\n        char = chr(char)\n        curr = 0\n        for ind in range(n):\n            charS = s[ind]\n            charP = p[ind]\n            if charS == '?':\n                charS = char\n            if charP == '?':\n                charP = char\n            if charS == charP:\n                continue\n            if charS in vow:\n                if charP in vow:\n                    curr += 2\n                else:\n                    curr += 1\n            elif charP not in vow:\n                curr += 2\n            else:\n                curr += 1\n        if curr < answ:\n            answ = curr\n    print(answ)", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    l = ['a', 'e', 'i', 'o', 'u']\n    (c1, c2, l1, c) = (0, 0, [], 0)\n    for i in range(n):\n        if s1[i] != s2[i]:\n            if s1[i] == '?':\n                l1.append(ord(s2[i]))\n                if s2[i] in l:\n                    c1 += 1\n                else:\n                    c2 += 1\n            elif s2[i] == '?':\n                l1.append(ord(s1[i]))\n                if s1[i] in l:\n                    c1 += 1\n                else:\n                    c2 += 1\n            elif s1[i] in l and s2[i] in l or (s1[i] not in l and s2[i] not in l):\n                c += 2\n            else:\n                c += 1\n    (k1, k2, k3, k4) = (0, 0, 0, 0)\n    if l1 != []:\n        l1.sort()\n        (d, c3) = ({0: 0}, 1)\n        for i in range(len(l1) - 1):\n            if l1[i] == l1[i + 1]:\n                c3 += 1\n            else:\n                d[l1[i]] = c3\n                c3 = 1\n        d[l1[len(l1) - 1]] = c3\n        (k1, k2, k3, k4) = (0, 0, 0, 0)\n        for i in d:\n            if chr(i) in l:\n                if d[i] > k2:\n                    k1 = i\n                    k2 = d[i]\n            elif d[i] > k4:\n                k3 = i\n                k4 = d[i]\n    print(c + min((c1 - d[k1]) * 2 + c2, c1 + (c2 - d[k3]) * 2))", "from collections import Counter\nimport math\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    l = ['a', 'e', 'i', 'o', 'u']\n    r = 'qwertyuiopasdfghjklzxcvbnm'\n    rr = list(r)\n    ss = 0\n    sss = math.inf\n    for j in rr:\n        ss = 0\n        ns = s.replace('?', j)\n        np = p.replace('?', j)\n        for i in range(n):\n            if np[i] == ns[i]:\n                continue\n            elif np[i] in l:\n                if ns[i] in l:\n                    ss += 2\n                else:\n                    ss += 1\n            elif ns[i] in l:\n                ss += 1\n            else:\n                ss += 2\n        sss = min(sss, ss)\n    print(sss)", "vowels = ['a', 'e', 'i', 'o', 'u']\n\ndef changeOpR(a, b):\n    if a == b:\n        return 0\n    isVowel = [True if a in vowels else False, True if b in vowels else False]\n    if isVowel[0] == isVowel[1]:\n        return 2\n    return 1\n\ndef extra(A):\n    possibleAns = 1000000\n    for i in range(26):\n        temp = chr(97 + i)\n        sample = A\n        countA = 0\n        for j in range(len(sample)):\n            (x, y) = sample[j]\n            if x == '?':\n                x = temp\n            if y == '?':\n                y = temp\n            countA += changeOpR(x, y)\n        possibleAns = min(possibleAns, countA)\n    return possibleAns\nfor _ in range(int(input())):\n    N = int(input())\n    S = input()\n    P = input()\n    count = 0\n    A = []\n    for i in range(N):\n        if S[i] == '?' and P[i] == '?':\n            continue\n        if S[i] == '?' or P[i] == '?':\n            A.append([S[i], P[i]])\n        else:\n            count += changeOpR(S[i], P[i])\n    count += extra(A)\n    print(count)", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    n = int(input())\n    s = input()\n    p = input()\n    ov = 'aeiou'\n    c = 0\n    v = 0\n    d = dict()\n    kk = 0\n    for i in range(n):\n        if s[i] == '?' and p[i] == '?':\n            continue\n        if s[i] == '?' or p[i] == '?':\n            if s[i] != '?':\n                if d.get(s[i]):\n                    d[s[i]] += 1\n                else:\n                    d[s[i]] = 1\n                if s[i] in ov:\n                    v = v + 1\n                else:\n                    c = c + 1\n            else:\n                if d.get(p[i]):\n                    d[p[i]] += 1\n                else:\n                    d[p[i]] = 1\n                if p[i] in ov:\n                    v = v + 1\n                else:\n                    c = c + 1\n        elif s[i] != p[i]:\n            if s[i] in ov and p[i] in ov:\n                kk = kk + 2\n            elif s[i] in ov and p[i] not in ov:\n                kk = kk + 1\n            elif s[i] not in ov and p[i] in ov:\n                kk = kk + 1\n            else:\n                kk = kk + 2\n    mv = 0\n    mc = 0\n    for i in d:\n        if i in ov:\n            if mv < d[i]:\n                mv = d[i]\n        elif mc < d[i]:\n            mc = d[i]\n    print(min((v - mv) * 2 + c, (c - mc) * 2 + v) + kk)", "vowels = ['a', 'e', 'i', 'o', 'u']\nalphabets = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nt = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    S = input()\n    P = input()\n    source = ''\n    target = ''\n    count_arr = []\n    for x_x in alphabets:\n        count = 0\n        source = S.replace('?', x_x)\n        target = P.replace('?', x_x)\n        for i in range(n):\n            if source[i] != target[i]:\n                if source[i] not in vowels and target[i] not in vowels:\n                    count = count + 2\n                elif source[i] in vowels and target[i] in vowels:\n                    count = count + 2\n                else:\n                    count = count + 1\n        count_arr.append(count)\n    print(min(count_arr))", "vowel = ['a', 'e', 'i', 'o', 'u']\n\ndef check(c):\n    return c in vowel\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    ans = 10000000\n    for ci in range(26):\n        c = chr(ord('a') + ci)\n        s2 = s.replace('?', c)\n        p2 = p.replace('?', c)\n        op = 0\n        for (i, j) in zip(s2, p2):\n            if i == j:\n                continue\n            op += 2 if check(i) == check(j) else 1\n        ans = min(ans, op)\n    print(ans)", "from bisect import bisect_left as bl\nVOWELS = 'aeiou'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (s1, s2) = (list(input()), list(input()))\n    if s1 == s2:\n        print(0)\n    else:\n        cnt = 2 * n\n        for j in range(26):\n            ans = 0\n            repl = chr(97 + j)\n            for i in range(n):\n                (v1, v2) = (s1[i] if s1[i] != '?' else repl, s2[i] if s2[i] != '?' else repl)\n                if v1 != v2:\n                    (c1, c2) = (v1 in VOWELS, v2 in VOWELS)\n                    if c1 and c2 or not (c1 or c2):\n                        ans += 2\n                    else:\n                        ans += 1\n            cnt = min(cnt, ans)\n        print(cnt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    p = input()\n    vovel = {'a', 'e', 'i', 'o', 'u'}\n    ans = 1000000000\n    for i in range(26):\n        s_d = s.replace('?', chr(97 + i))\n        p_d = p.replace('?', chr(97 + i))\n        p_ans = 0\n        for i in range(n):\n            if p_d[i] == s_d[i]:\n                pass\n            elif p_d[i] in vovel and s_d[i] in vovel or (p_d[i] not in vovel and s_d[i] not in vovel):\n                p_ans += 2\n            else:\n                p_ans += 1\n        if ans > p_ans:\n            ans = p_ans\n    print(ans)", "t = int(input())\nvowels = {'a', 'e', 'i', 'o', 'u'}\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    p = input()\n    ans = n * 2\n    for char in range(ord('a'), ord('z') + 1):\n        char = chr(char)\n        curr = 0\n        for ind in range(n):\n            charS = s[ind]\n            charP = p[ind]\n            if charS == '?':\n                charS = char\n            if charP == '?':\n                charP = char\n            if charS == charP:\n                continue\n            if charS in vowels:\n                if charP in vowels:\n                    curr += 2\n                else:\n                    curr += 1\n            elif charP not in vowels:\n                curr += 2\n            else:\n                curr += 1\n        if curr < ans:\n            ans = curr\n    print(ans)", "def abc(a, b):\n    l1 = []\n    x = 'aeiou'\n    y = 'bcdfghjklmnpqrstvwxyz'\n    for i in range(97, 123):\n        count = 0\n        s = a.replace('?', chr(i))\n        p = b.replace('?', chr(i))\n        for j in range(n):\n            if s[j] != p[j]:\n                if s[j] in x and p[j] in x:\n                    count += 2\n                elif s[j] in x and p[j] in y:\n                    count += 1\n                elif s[j] in y and p[j] in x:\n                    count += 1\n                else:\n                    count += 2\n        l1.append(count)\n    return min(l1)\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    print(abc(a, b))", "ts = int(input())\n\ndef minimum(l, l1):\n    score = []\n    al = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    a = l\n    b = l1\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    for j in range(25):\n        c = 0\n        l = a.replace('?', al[j])\n        l1 = b.replace('?', al[j])\n        for i in range(len(l)):\n            if l[i] != l1[i]:\n                c += 1\n                if l1[i] not in vowels:\n                    if l[i] not in vowels:\n                        c += 1\n                elif l1[i] in vowels:\n                    if l[i] in vowels:\n                        c += 1\n        score.append(c)\n    return min(score)\nfor i in range(ts):\n    c = 0\n    l = []\n    l1 = []\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    print(minimum(s1, s2))", "ts = int(input())\n\ndef minimum(l, l1):\n    score = []\n    al = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    a = l\n    b = l1\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    for j in range(25):\n        c = 0\n        l = a.replace('?', al[j])\n        l1 = b.replace('?', al[j])\n        m = []\n        n = []\n        for i in range(len(l)):\n            m.append(l[i])\n            n.append(l1[i])\n        for i in range(len(l)):\n            if m[i] != n[i]:\n                c += 1\n                if n[i] not in vowels:\n                    if m[i] not in vowels:\n                        c += 1\n                elif n[i] in vowels:\n                    if m[i] in vowels:\n                        c += 1\n        score.append(c)\n    return min(score)\nfor i in range(ts):\n    c = 0\n    s = 0\n    l = []\n    l1 = []\n    n = int(input())\n    if n == 0:\n        print(0)\n        continue\n    s1 = input()\n    s2 = input()\n    print(minimum(s1, s2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    p = input()\n    vowel = ('a', 'e', 'i', 'o', 'u')\n    d = {}\n    ct = 0\n    qv = 0\n    qc = 0\n    streakc = 0\n    streakv = 0\n    for i in range(n):\n        x = p[i]\n        z = s[i]\n        sf = 10 ** 5\n        xv = x in vowel\n        zv = z in vowel\n        if x == z:\n            continue\n        if x == '?':\n            if z in d:\n                d[z] += 1\n            else:\n                d[z] = 1\n            if zv:\n                qv += 1\n                streakv = max(streakv, d[z])\n            else:\n                qc += 1\n                streakc = max(streakc, d[z])\n            continue\n        if z == '?':\n            if x in d:\n                d[x] += 1\n            else:\n                d[x] = 1\n            if xv:\n                qv += 1\n                streakv = max(streakv, d[x])\n            else:\n                qc += 1\n                streakc = max(streakc, d[x])\n            continue\n        if xv ^ zv:\n            ct += 1\n        else:\n            ct += 2\n    tv = qc + (qv - streakv) * 2\n    tc = qv + (qc - streakc) * 2\n    ans = min(tv, tc)\n    print(ans + ct)", "vowels = ['a', 'e', 'i', 'o', 'u']\n\ndef changeOpR(a, b):\n    if a == b:\n        return 0\n    isVowel = [True if a in vowels else False, True if b in vowels else False]\n    if isVowel[0] == isVowel[1]:\n        return 2\n    return 1\n\ndef extra(A):\n    possibleAns = 1000000\n    iterate = 'abcdefghijklmnopqrstuvwxyz'\n    for i in iterate:\n        temp = 0\n        for j in A:\n            temp += changeOpR(i, j)\n        possibleAns = min(possibleAns, temp)\n    return possibleAns\nfor _ in range(int(input())):\n    N = int(input())\n    S = input()\n    P = input()\n    count = 0\n    A = []\n    for i in range(N):\n        if S[i] == '?' and P[i] == '?':\n            continue\n        if S[i] == '?':\n            A.append(P[i])\n        elif P[i] == '?':\n            A.append(S[i])\n        else:\n            count += changeOpR(S[i], P[i])\n    count += extra(A)\n    print(count)", "vowels = ['a', 'e', 'i', 'o', 'u']\n\ndef changeOpR(a, b):\n    if a == b:\n        return 0\n    isVowel = [True if a in vowels else False, True if b in vowels else False]\n    if isVowel[0] == isVowel[1]:\n        return 2\n    return 1\n\ndef extra(A):\n    possibleAns = 1000000\n    for i in range(26):\n        temp = chr(97 + i)\n        sample = A\n        countA = 0\n        for j in range(len(sample)):\n            (x, y) = sample[j]\n            if x == '?':\n                x = temp\n            if y == '?':\n                y = temp\n            countA += changeOpR(x, y)\n        possibleAns = min(possibleAns, countA)\n    return possibleAns\nfor _ in range(int(input())):\n    N = int(input())\n    S = input()\n    P = input()\n    count = 0\n    A = []\n    for i in range(N):\n        if S[i] == '?' and P[i] == '?':\n            continue\n        if S[i] == '?' or P[i] == '?':\n            A.append([S[i], P[i]])\n        else:\n            count += changeOpR(S[i], P[i])\n    count += extra(A)\n    print(count)", "import string\n\ndef get_count(string1, string2, n, ch):\n    string1 = string1.replace('?', ch)\n    string2 = string2.replace('?', ch)\n    count = 0\n    for i in range(n):\n        if string1[i] != string2[i]:\n            if string1[i] in vowels and string2[i] not in vowels or (string2[i] in vowels and string1[i] not in vowels):\n                count += 1\n            else:\n                count += 2\n    return count\nt = int(input())\nvowels = ['a', 'e', 'i', 'o', 'u']\nalphabets = list(string.ascii_lowercase)\nfor i in range(t):\n    min_value = 10000000000000000000000000000000000\n    n = int(input())\n    string_1 = input()\n    string_2 = input()\n    for ch in alphabets:\n        min_value = min(min_value, get_count(string_1, string_2, n, ch))\n    print(min_value)", "import string, sys\n\ndef get_count(string1, string2, n, ch):\n    string1 = string1.replace('?', ch)\n    string2 = string2.replace('?', ch)\n    count = 0\n    for i in range(n):\n        if string1[i] != string2[i]:\n            if string1[i] in vowels and string2[i] not in vowels or (string2[i] in vowels and string1[i] not in vowels):\n                count += 1\n            else:\n                count += 2\n    return count\nt = int(input())\nvowels = ['a', 'e', 'i', 'o', 'u']\nalphabets = list(string.ascii_lowercase)\nfor i in range(t):\n    min_value = sys.maxsize\n    n = int(input())\n    string_1 = input()\n    string_2 = input()\n    for ch in alphabets:\n        min_value = min(min_value, get_count(string_1, string_2, n, ch))\n    print(min_value)", "def fun(a, b, n, car):\n    c = 0\n    s = set(['a', 'e', 'i', 'o', 'u'])\n    f1 = 0\n    f2 = 0\n    for i in range(n):\n        if a[i] == '?':\n            a[i] = car\n            f1 = 1\n        if b[i] == '?':\n            b[i] = car\n            f2 = 1\n        if a[i] != b[i]:\n            if a[i] in s and b[i] in s or (a[i] not in s and b[i] not in s):\n                c += 2\n            else:\n                c += 1\n        if f1 == 1:\n            a[i] = '?'\n            f1 = 0\n        if f2 == 1:\n            b[i] = '?'\n            f2 = 0\n    return c\nimport sys\nfor _ in range(int(input())):\n    n = int(sys.stdin.readline())\n    a = list(sys.stdin.readline())\n    b = list(sys.stdin.readline())\n    ans = 2 * n + 1\n    for j in range(26):\n        ans = min(ans, fun(a, b, n, chr(j + 97)))\n    sys.stdout.write(str(ans) + '\\n')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    ans = 10000000007\n    o = {'a', 'e', 'i', 'o', 'u'}\n    for i in range(26):\n        s = a.replace('?', chr(i + 97))\n        p = b.replace('?', chr(i + 97))\n        r = 0\n        for i in range(n):\n            if s[i] != p[i]:\n                if s[i] not in o and p[i] in o or (s[i] in o and p[i] not in o):\n                    r += 1\n                else:\n                    r += 2\n        ans = min(ans, r)\n    print(ans)", "def main():\n    t = int(input())\n    while t > 0:\n        n = int(input())\n        s = str(input())\n        p = str(input())\n        ans = n * 2 + 1\n        vowels = ['a', 'e', 'i', 'o', 'u']\n        for i in range(97, 123):\n            Operation = 0\n            (temp_s, temp_p) = ('', '')\n            temp_s = s.replace('?', chr(i))\n            temp_p = p.replace('?', chr(i))\n            for j in range(n):\n                if temp_s[j] != temp_p[j]:\n                    if temp_s[j] in vowels and temp_p[j] in vowels:\n                        Operation += 2\n                    elif temp_s[j] not in vowels and temp_p[j] not in vowels:\n                        Operation += 2\n                    else:\n                        Operation += 1\n            ans = min(ans, Operation)\n        print(ans)\n        t -= 1\nmain()", "vowel = 'aeiou'\nimport string\nfor i in range(int(input())):\n    n = int(input())\n    (s, p) = (input(), input())\n    Min = n * 2\n    for j in string.ascii_lowercase:\n        x = s\n        y = p\n        x = x.replace('?', j)\n        y = y.replace('?', j)\n        ct = 0\n        for k in range(n):\n            if x[k] != y[k]:\n                if x[k] in vowel and y[k] in vowel or (x[k] not in vowel and y[k] not in vowel):\n                    ct += 2\n                else:\n                    ct += 1\n        if ct < Min:\n            Min = ct\n    print(Min)", "import string\nletters = string.ascii_lowercase\nfrom sys import stdin, stdout\nt = int(stdin.readline())\nfor i in range(t):\n    N = int(stdin.readline())\n    S = list(input())\n    P = list(input())\n    count = 0\n    vowels = {'a', 'e', 'i', 'o', 'u'}\n    P_new = []\n    S_new = []\n    for j in range(N):\n        if P[j] != S[j] and P[j] != '?' and (S[j] != '?'):\n            if P[j] in vowels and S[j] in vowels or (P[j] not in vowels and S[j] not in vowels):\n                count += 2\n            else:\n                count += 1\n        if P[j] == '?' or S[j] == '?':\n            P_new.append(P[j])\n            S_new.append(S[j])\n    x = 0\n    for k in range(len(S_new)):\n        y = True\n        if S_new[k] == '?':\n            if P_new[k] == S_new[k]:\n                y = False\n                pass\n            elif P_new[k] == 'a':\n                pass\n            elif P_new[k] in vowels:\n                x += 2\n            elif P_new[k] not in vowels:\n                x += 1\n        elif P_new[k] == '?':\n            if S_new[k] == P_new[k]:\n                pass\n            elif S_new[k] == 'a':\n                pass\n            elif S_new[k] in vowels:\n                x += 2\n            elif S_new[k] not in vowels:\n                x += 1\n    for j in letters:\n        m = 0\n        for k in range(len(S_new)):\n            y = True\n            if S_new[k] == '?':\n                if P_new[k] == S_new[k]:\n                    y = False\n                    pass\n                elif P_new[k] == j:\n                    pass\n                elif P_new[k] in vowels and j in vowels:\n                    m += 2\n                elif P_new[k] not in vowels and j not in vowels:\n                    m += 2\n                else:\n                    m += 1\n            elif P_new[k] == '?' and y:\n                if S_new[k] == P_new[k]:\n                    pass\n                elif S_new[k] == j:\n                    pass\n                elif S_new[k] in vowels and j in vowels:\n                    m += 2\n                elif S_new[k] not in vowels and j not in vowels:\n                    m += 2\n                else:\n                    m += 1\n        if m < x:\n            x = m\n    count += x\n    stdout.write(f'{count}\\n')", "from sys import stdin, stdout\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    p = input().strip()\n    s = input().strip()\n    ans = n * 2\n    for i in range(26):\n        c = chr(i + ord('a'))\n        a = s[:]\n        b = p[:]\n        a = a.replace('?', c)\n        b = b.replace('?', c)\n        t = 0\n        for j in range(n):\n            if a[j] != b[j]:\n                if a[j] in 'aeiou' and b[j] in 'aeiou':\n                    t += 2\n                elif a[j] not in 'aeiou' and b[j] not in 'aeiou':\n                    t += 2\n                else:\n                    t += 1\n        ans = min(ans, t)\n    print(ans)", "import sys\nl = ['a', 'e', 'i', 'o', 'u']\nco = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n\ndef func(s1, s2, c):\n    count = 0\n    for i in range(len(s1)):\n        if s1[i] == '?':\n            s1[i] = c\n        if s2[i] == '?':\n            s2[i] = c\n    for i in range(len(s1)):\n        if s1[i] != s2[i]:\n            if s1[i] not in l and s2[i] not in l:\n                count = count + 2\n            elif s1[i] in l and s2[i] in l:\n                count = count + 2\n            else:\n                count = count + 1\n    return count\nn = int(input())\nfor i in range(n):\n    n1 = int(input())\n    s1 = input()\n    s2 = input()\n    temp = sys.maxsize\n    for k in co:\n        count1 = func(list(s1), list(s2), k)\n        temp = min(temp, count1)\n    print(temp)", "def swap(s, p, N):\n    mins = float('inf')\n    d = {'a': 1, 'e': 1, 'i': 1, 'o': 1, 'u': 1}\n    for i in range(97, 123):\n        S = s.replace('?', chr(i))\n        P = p.replace('?', chr(i))\n        count = 0\n        for i in range(N):\n            if S[i] != P[i]:\n                if S[i] in d:\n                    if P[i] in d:\n                        count += 2\n                    else:\n                        count += 1\n                elif P[i] in d:\n                    count += 1\n                else:\n                    count += 2\n        mins = min(count, mins)\n    return mins\nt = int(input().strip())\nwhile t:\n    N = int(input().strip())\n    S = input().strip()\n    P = input().strip()\n    print(swap(S, P, N))\n    t -= 1", "import math\nvowels = ['a', 'e', 'i', 'o', 'u']\n\ndef value(a, b):\n    if a == b:\n        return 0\n    else:\n        first = True if a in vowels else False\n        second = True if b in vowels else False\n        if second == first:\n            return 2\n        else:\n            return 1\n\ndef change(a, b, tempc):\n    if a == '?':\n        return value(tempc, b)\n    else:\n        return value(tempc, a)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    p = input()\n    count = 0\n    for i in range(n):\n        if s[i] == p[i]:\n            continue\n        elif s[i] == '?' or p[i] == '?':\n            continue\n        else:\n            count += value(s[i], p[i])\n    min_count = math.inf\n    for i in range(26):\n        temp_char = chr(97 + i)\n        count_ = 0\n        for i in range(n):\n            if s[i] == p[i]:\n                continue\n            elif s[i] == '?' or p[i] == '?':\n                count_ += change(s[i], p[i], temp_char)\n        min_count = min(count_, min_count)\n    print(count + min_count)", "vowels = ['a', 'e', 'i', 'o', 'u']\n\ndef is_vowel(c):\n    return c in vowels\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    ans = 1000000\n    for ci in range(26):\n        c = chr(ord('a') + ci)\n        s2 = s.replace('?', c)\n        p2 = p.replace('?', c)\n        ops = 0\n        for (si, pi) in zip(s2, p2):\n            if si == pi:\n                continue\n            ops += 2 if is_vowel(si) == is_vowel(pi) else 1\n        ans = min(ans, ops)\n    print(ans)", "vowels = ['a', 'e', 'i', 'o', 'u']\n\ndef is_vowel(c):\n    return c in vowels\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    ans = 10000000\n    for ci in range(26):\n        c = chr(ord('a') + ci)\n        s2 = s.replace('?', c)\n        p2 = p.replace('?', c)\n        ops = 0\n        for (si, pi) in zip(s2, p2):\n            if si == pi:\n                continue\n            ops += 2 if is_vowel(si) == is_vowel(pi) else 1\n        ans = min(ans, ops)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    if s == p:\n        print(0)\n        continue\n\n    def func(c, s, p, n):\n        v = set(['a', 'e', 'i', 'o', 'u'])\n        ans = 0\n        for i in range(n):\n            a = s[i]\n            b = p[i]\n            if s[i] == '?':\n                a = c\n            if p[i] == '?':\n                b = c\n            if a == b:\n                continue\n            if a in v and b in v:\n                ans += 2\n            elif a not in v and b not in v:\n                ans += 2\n            elif a in v and b not in v:\n                ans += 1\n            elif a not in v and b in v:\n                ans += 1\n        return ans\n    val = 1000000000\n    for i in range(0, 26):\n        val = min(val, func(chr(ord('a') + i), s, p, n))\n    print(val)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    p = input()\n    count1 = 0\n    vowel = {'a', 'e', 'i', 'o', 'u'}\n    arr = []\n    for j in range(n):\n        if s[j] == '?' and p[j] == '?':\n            continue\n        elif s[j] != '?' and p[j] != '?':\n            if s[j] != p[j]:\n                if s[j] in vowel:\n                    if p[j] in vowel:\n                        count1 += 2\n                    else:\n                        count1 += 1\n                elif p[j] in vowel:\n                    count1 += 1\n                else:\n                    count1 += 2\n        elif s[j] == '?' or p[j] == '?':\n            arr.append(j)\n    if len(arr) != 0:\n        count2 = 2 * n\n        for i in range(97, 123):\n            char = chr(i)\n            count = 0\n            for k in arr:\n                flag = s[k]\n                if s[k] == '?':\n                    flag = p[k]\n                if flag != char:\n                    if flag in vowel:\n                        if char in vowel:\n                            count += 2\n                        else:\n                            count += 1\n                    elif char in vowel:\n                        count += 1\n                    else:\n                        count += 2\n            count2 = min(count2, count)\n        count1 += count2\n    print(count1)", "vowel = 'aeiou'\nfor _ in range(int(input())):\n    length = int(input())\n    s = input()\n    p = input()\n    counts = []\n    for letter in range(97, 123):\n        s1 = s.replace('?', chr(letter), length)\n        p1 = p.replace('?', chr(letter), length)\n        count = 0\n        for ind in range(length):\n            if s1[ind] == p1[ind]:\n                pass\n            elif (s1[ind] in vowel) == (p1[ind] in vowel):\n                count += 2\n            else:\n                count += 1\n        counts.append(count)\n    print(min(counts))", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    v = 'aeiou'\n    c = []\n    for x in range(97, 123):\n        s3 = s1.replace('?', chr(x))\n        s4 = s2.replace('?', chr(x))\n        cnt = 0\n        for i in range(n):\n            if s3[i] == s4[i]:\n                pass\n            elif s3[i] in v and s4[i] not in v:\n                cnt += 1\n            elif s3[i] not in v and s4[i] in v:\n                cnt += 1\n            else:\n                cnt += 2\n        c.append(cnt)\n    print(min(c))", "for i in range(int(input())):\n    A = ['a', 'e', 'i', 'o', 'u']\n    n = int(input())\n    a = input()\n    b = input()\n    ans = 10 ** 9 + 1\n    for i in range(97, 123):\n        char = chr(i)\n        x = a\n        y = b\n        p = x.replace('?', char)\n        s = y.replace('?', char)\n        res = 0\n        for i in range(n):\n            if s[i] != p[i]:\n                if s[i] in A:\n                    if p[i] in A:\n                        res += 2\n                    else:\n                        res += 1\n                elif p[i] not in A:\n                    res += 2\n                else:\n                    res += 1\n        res = min(res, ans)\n        ans = res\n    print(ans)", "import sys\ninput = sys.stdin.readline\nvowels = ['a', 'e', 'i', 'o', 'u']\n\ndef is_vowel(c):\n    return c in vowels\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    ans = 10000000\n    for ci in range(26):\n        c = chr(ord('a') + ci)\n        s2 = s.replace('?', c)\n        p2 = p.replace('?', c)\n        ops = 0\n        for (si, pi) in zip(s2, p2):\n            if si == pi:\n                continue\n            if is_vowel(si) == is_vowel(pi):\n                ops += 2\n            else:\n                ops += 1\n        ans = min(ans, ops)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    p1 = input()\n    k = []\n    vowel = 'aeiou'\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    for x in alpha:\n        (s, p) = (s1, p1)\n        s = s.replace('?', x)\n        p = p.replace('?', x)\n        c = 0\n        for i in range(n):\n            if s[i] != p[i]:\n                if s[i] in vowel and p[i] in vowel or (s[i] not in vowel and p[i] not in vowel):\n                    c += 2\n                else:\n                    c += 1\n            else:\n                continue\n        k.append(c)\n    print(min(k))", "for _ in range(int(input())):\n    n = int(input())\n    A = input()\n    B = input()\n    nc = 0\n    ans = 0\n    nv = 0\n    f = {}\n    d = {}\n    W = {'a': 1, 'e': 1, 'i': 1, 'o': 1, 'u': 1}\n    for i in range(n):\n        if A[i] == '?' and B[i] != '?':\n            try:\n                W[B[i]]\n                nv += 1\n                try:\n                    f[B[i]] += 1\n                except:\n                    f[B[i]] = 1\n            except:\n                nc += 1\n                try:\n                    d[B[i]] += 1\n                except:\n                    d[B[i]] = 1\n        elif B[i] == '?' and A[i] != '?':\n            try:\n                W[A[i]]\n                nv += 1\n                try:\n                    f[A[i]] += 1\n                except:\n                    f[A[i]] = 1\n            except:\n                nc += 1\n                try:\n                    d[A[i]] += 1\n                except:\n                    d[A[i]] = 1\n        elif A[i] != '?' and B[i] != '?':\n            if A[i] == B[i]:\n                pass\n            else:\n                try:\n                    W[A[i]]\n                    W[B[i]]\n                    ans += 2\n                except:\n                    try:\n                        W[A[i]]\n                        ans += 1\n                    except:\n                        try:\n                            W[B[i]]\n                            ans += 1\n                        except:\n                            ans += 2\n    if nc != 0:\n        ke = max(d, key=d.get)\n    if nv != 0:\n        ky = max(f, key=f.get)\n    if nc > 0 and nv > 0:\n        ans += min(nv + (nc - d[ke]) * 2, nc + (nv - f[ky]) * 2)\n    elif nc > 0:\n        ans += min(nv + (nc - d[ke]) * 2, nc + nv * 2)\n    elif nv > 0:\n        ans += min(nv + nc * 2, nc + (nv - f[ky]) * 2)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = input()\n    B = input()\n    nc = 0\n    ans = 0\n    nv = 0\n    f = {}\n    d = {}\n    W = {'a': 1, 'e': 1, 'i': 1, 'o': 1, 'u': 1}\n    for i in range(n):\n        if A[i] == '?' and B[i] != '?':\n            try:\n                W[B[i]]\n                nv += 1\n                try:\n                    f[B[i]] += 1\n                except:\n                    f[B[i]] = 1\n            except:\n                nc += 1\n                try:\n                    d[B[i]] += 1\n                except:\n                    d[B[i]] = 1\n        elif B[i] == '?' and A[i] != '?':\n            try:\n                W[A[i]]\n                nv += 1\n                try:\n                    f[A[i]] += 1\n                except:\n                    f[A[i]] = 1\n            except:\n                nc += 1\n                try:\n                    d[A[i]] += 1\n                except:\n                    d[A[i]] = 1\n        elif A[i] != '?' and B[i] != '?':\n            if A[i] == B[i]:\n                pass\n            else:\n                try:\n                    W[A[i]]\n                    W[B[i]]\n                    ans += 2\n                except:\n                    try:\n                        W[A[i]]\n                        ans += 1\n                    except:\n                        try:\n                            W[B[i]]\n                            ans += 1\n                        except:\n                            ans += 2\n    if nc != 0:\n        ke = max(d, key=d.get)\n    if nv != 0:\n        ky = max(f, key=f.get)\n    if nc > 0 and nv > 0:\n        ans += min(nv + (nc - d[ke]) * 2, nc + nv * 2, nc + nc * 2, nc + (nv - f[ky]) * 2)\n    elif nc > 0:\n        ans += min(nv + (nc - d[ke]) * 2, nc + nv * 2, nv + nc * 2)\n    elif nv > 0:\n        ans += min(nc + nv * 2, nv + nc * 2, nc + (nv - f[ky]) * 2)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    v = 'aeiou'\n    c = []\n    for x in range(97, 123):\n        s3 = s1.replace('?', chr(x))\n        s4 = s2.replace('?', chr(x))\n        cnt = 0\n        for i in range(n):\n            if s3[i] == s4[i]:\n                pass\n            elif s3[i] in v and s4[i] not in v:\n                cnt += 1\n            elif s3[i] not in v and s4[i] in v:\n                cnt += 1\n            else:\n                cnt += 2\n        c.append(cnt)\n    print(min(c))", "def solution():\n    N = int(input())\n    S = input()\n    P = input()\n    vowels = {'a', 'e', 'i', 'o', 'u'}\n    minO = float('inf')\n    for char in range(97, 122):\n        alpha = chr(char)\n        curO = 0\n        for (s, p) in zip(S, P):\n            if s == '?':\n                s = alpha\n            if p == '?':\n                p = alpha\n            if s == p:\n                continue\n            curO += 1 if (s in vowels) != (p in vowels) else 2\n        minO = min(curO, minO)\n    print(minO)\nfor _ in range(int(input())):\n    solution()", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    p1 = input()\n    count = []\n    for i in 'abcdefghijklmnopqrstuvwxyz':\n        count1 = 0\n        s = s1\n        p = p1\n        s = s.replace('?', i)\n        p = p.replace('?', i)\n        for j in range(n):\n            if s[j] != p[j]:\n                if s[j] in 'aeiou' and p[j] not in 'aeiou':\n                    count1 += 1\n                elif s[j] not in 'aeiou' and p[j] in 'aeiou':\n                    count1 += 1\n                else:\n                    count1 += 2\n        count.append(count1)\n    print(min(count))", "for _ in range(int(input())):\n    n = int(input())\n    ss = input()\n    pp = input()\n    vov = 'aeiou'\n    if ss == pp:\n        print(0)\n    else:\n        alphs = [chr(i) for i in range(97, 123)]\n        orops = 9999999999\n        for j in range(len(alphs)):\n            aa = ss\n            bb = pp\n            aa = aa.replace('?', alphs[j])\n            bb = bb.replace('?', alphs[j])\n            ops = 0\n            for i in range(n):\n                if aa[i] == bb[i]:\n                    continue\n                if aa[i] in vov and bb[i] not in vov:\n                    ops += 1\n                elif aa[i] not in vov and bb[i] in vov:\n                    ops += 1\n                else:\n                    ops += 2\n            orops = min(orops, ops)\n            if orops == 0:\n                break\n        print(orops)", "def swap(P, S):\n    mins = float('inf')\n    vow = ['a', 'e', 'i', 'o', 'u']\n    for i in range(97, 123):\n        s = S[:]\n        p = P[:]\n        c = 0\n        s = s.replace('?', chr(i))\n        p = p.replace('?', chr(i))\n        for (x, y) in zip(p, s):\n            if x != y:\n                if x in vow and y in vow:\n                    c += 2\n                elif x not in vow and y not in vow:\n                    c += 2\n                else:\n                    c += 1\n        mins = min(mins, c)\n    return mins\nT = int(input())\nwhile T:\n    N = int(input())\n    S = input()\n    P = input()\n    print(swap(P, S))\n    T -= 1", "def swap(P, S):\n    mins = float('inf')\n    vow = ['a', 'e', 'i', 'o', 'u']\n    for i in range(97, 123):\n        s = S\n        p = P\n        c = 0\n        s = s.replace('?', chr(i))\n        p = p.replace('?', chr(i))\n        for (x, y) in zip(p, s):\n            if x != y:\n                if x in vow and y in vow:\n                    c += 2\n                elif x not in vow and y not in vow:\n                    c += 2\n                else:\n                    c += 1\n        mins = min(mins, c)\n    return mins\nT = int(input())\nwhile T:\n    N = int(input())\n    S = input()\n    P = input()\n    print(swap(P, S))\n    T -= 1", "vowels = 'aeiou'\nalpha = 'abcdefghijklmnopqrstuvwxyz'\n\ndef isvowel(a):\n    if a in vowels:\n        return True\n    else:\n        return False\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        ans = 10 ** 9\n        n = int(input())\n        s = str(input())\n        p = str(input())\n        for c in alpha:\n            curr = 0\n            for i in range(n):\n                si = c if s[i] == '?' else s[i]\n                pi = c if p[i] == '?' else p[i]\n                if si == pi:\n                    continue\n                curr += 1 if isvowel(si) != isvowel(pi) else 2\n            ans = min(ans, curr)\n        print(ans)\nmain()", "import sys\ninput = sys.stdin.readline\nvowels = ['a', 'e', 'i', 'o', 'u']\n\ndef is_vowel(c):\n    return c in vowels\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    ans = 10000000\n    for ci in range(26):\n        c = chr(ord('a') + ci)\n        s2 = s.replace('?', c)\n        p2 = p.replace('?', c)\n        ops = 0\n        for (si, pi) in zip(s2, p2):\n            if si == pi:\n                continue\n            if is_vowel(si) == is_vowel(pi):\n                ops += 2\n            else:\n                ops += 1\n        ans = min(ans, ops)\n    print(ans)", "t = int(input())\nfor i in range(0, t):\n    x = int(input())\n    vo = ['a', 'e', 'i', 'o', 'u']\n    al = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    li = input()\n    ri = input()\n    min = 1000000000000\n    for j in range(0, len(al)):\n        mi = li.replace('?', al[j])\n        pi = ri.replace('?', al[j])\n        count = 0\n        for k in range(0, len(li)):\n            if mi[k] == pi[k]:\n                count = count + 0\n            elif mi[k] in 'aeiou' and pi[k] in 'aeiou' or (mi[k] not in 'aeiou' and pi[k] not in 'aeiou'):\n                count = count + 2\n            else:\n                count = count + 1\n        if count < min:\n            min = count\n    print(min)", "for _ in range(int(input())):\n    ans = 0\n    n = int(input())\n    s = input()\n    p = input()\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    d = dict()\n    for i in range(26):\n        d[chr(ord('a') + i)] = 0\n    if s == p:\n        print(0)\n    else:\n        ans = 2 * n\n        m = n\n        t1 = ''\n        t2 = ''\n        ans1 = 0\n        for i in range(n):\n            if s[i] == '?' and p[i] == '?':\n                continue\n            if s[i] == '?' or p[i] == '?':\n                t1 += s[i]\n                t2 += p[i]\n                continue\n            if s[i] == p[i]:\n                continue\n            if s[i] in vowels and p[i] in vowels:\n                ans1 += 2\n            elif s[i] not in vowels and p[i] not in vowels:\n                ans1 += 2\n            else:\n                ans1 += 1\n        m = len(t1)\n        for i in range(26):\n            s1 = t1\n            temp = chr(ord('a') + i)\n            s1 = s1.replace('?', temp)\n            p1 = t2\n            p1 = p1.replace('?', temp)\n            val = 0\n            for j in range(m):\n                v1 = s1[j] in vowels\n                v2 = p1[j] in vowels\n                if s1[j] != p1[j]:\n                    if v1 is True and v2 is True:\n                        val += 2\n                    elif v1 is False and v2 is False:\n                        val += 2\n                    else:\n                        val += 1\n            if val < ans:\n                ans = val\n        ans += ans1\n        print(ans)", "t = int(input())\nfor i in range(t):\n    r = int(input())\n    a = input()\n    b = input()\n    ans = 0\n    up = 0\n    x = 0\n    mv = 0\n    mc = 0\n    v = ['a', 'e', 'i', 'o', 'u']\n    hh = [0] * 26\n    for i in range(r):\n        if a[i] == '?' or b[i] == '?':\n            if a[i] == '?' and b[i] == '?':\n                up -= 1\n            up += 1\n            if a[i] in v or b[i] in v:\n                x += 1\n            if a[i] != '?':\n                hh[ord(a[i]) - ord('a')] += 1\n                if a[i] in v:\n                    mv = max(mv, hh[ord(a[i]) - ord('a')])\n                else:\n                    mc = max(mc, hh[ord(a[i]) - ord('a')])\n            if b[i] != '?':\n                hh[ord(b[i]) - ord('a')] += 1\n                if b[i] in v:\n                    mv = max(mv, hh[ord(b[i]) - ord('a')])\n                else:\n                    mc = max(mc, hh[ord(b[i]) - ord('a')])\n        elif a[i] == b[i]:\n            ans += 0\n        elif a[i] in v and b[i] in v:\n            ans += 2\n        elif a[i] not in v and b[i] not in v:\n            ans += 2\n        else:\n            ans += 1\n    ans = ans + min(2 * (x - mv) + (up - x), 2 * (up - x - mc) + x)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    vow = 'aeiou'\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    l = []\n    for e in alpha:\n        sum = 0\n        p2 = p.replace('?', e)\n        s2 = s.replace('?', e)\n        for i in range(n):\n            if p2[i] != s2[i]:\n                if p2[i] in vow:\n                    if s2[i] in vow:\n                        sum = sum + 2\n                    else:\n                        sum = sum + 1\n                elif s2[i] in vow:\n                    sum = sum + 1\n                else:\n                    sum = sum + 2\n        l.append(sum)\n    m = min(l)\n    print(m)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    d = s\n    e = p\n    arr = []\n    co = ['a', 'e', 'i', 'o', 'u']\n    alphabet_list = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    for j in alphabet_list:\n        s = d\n        p = e\n        c = 0\n        s = s.replace('?', j)\n        p = p.replace('?', j)\n        for i in range(n):\n            if s[i] == p[i]:\n                pass\n            elif s[i] in 'aeiou' and p[i] not in 'aeiou':\n                c += 1\n            elif p[i] in 'aeiou' and s[i] not in 'aeiou':\n                c += 1\n            else:\n                c += 2\n        arr.append(c)\n    print(min(arr))", "vowels = ['a', 'e', 'i', 'o', 'u']\n\ndef cost(a, b):\n    if a == b:\n        return 0\n    isVowel = [True if a in vowels else False, True if b in vowels else False]\n    if isVowel[0] == isVowel[1]:\n        return 2\n    return 1\n\ndef extra(A):\n    possibleAns = 1000000\n    for i in range(26):\n        temp = chr(97 + i)\n        sample = A\n        countA = 0\n        for j in range(len(sample)):\n            (x, y) = sample[j]\n            if x == '?':\n                x = temp\n            if y == '?':\n                y = temp\n            countA += cost(x, y)\n        possibleAns = min(possibleAns, countA)\n    return possibleAns\nfor _ in range(int(input())):\n    N = int(input())\n    S = input()\n    P = input()\n    count = 0\n    A = []\n    for i in range(N):\n        if S[i] == '?' and P[i] == '?':\n            continue\n        if S[i] == '?' or P[i] == '?':\n            A.append([S[i], P[i]])\n        else:\n            count += cost(S[i], P[i])\n    count += extra(A)\n    print(count)", "t = int(input())\nli = ['a', 'e', 'i', 'o', 'u']\nfor z in range(t):\n    n = int(input())\n    mi = 1000000\n    s = input()\n    p = input()\n    for j in range(26):\n        cha = chr(j + 97)\n        c = 0\n        s1 = s.replace('?', cha)\n        p1 = p.replace('?', cha)\n        for i in range(n):\n            if s1[i] != p1[i]:\n                if (s1[i] in li) ^ (p1[i] in li):\n                    c = c + 1\n                else:\n                    c = c + 2\n        if c < mi:\n            mi = c\n    print(mi)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = input()\n    vowel = defaultdict(lambda : 0)\n    (vowel['a'], vowel['e'], vowel['i'], vowel['o'], vowel['u']) = (1, 1, 1, 1, 1)\n    ans = 2 * n\n    ooo = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    for j in ooo:\n        c = j\n        k = 0\n        for i in range(n):\n            if s[i] == '?':\n                si = c\n            else:\n                si = s[i]\n            if p[i] == '?':\n                pi = c\n            else:\n                pi = p[i]\n            if si == pi:\n                continue\n            if vowel[si] != vowel[pi]:\n                k += 1\n            else:\n                k += 2\n        ans = min(ans, k)\n    print(ans)", "def is_vowel(s: str):\n    if s in 'aeiou':\n        return 'v'\n    elif s == '?':\n        return '?'\n    else:\n        return 'c'\n\ndef compare_strings(string_p, string_s) -> int:\n    count = count2 = 0\n    count1 = None\n    comp_p = comp_s = ''\n    letters_p = letters_s = ''\n    vowels = not_vowels = 0\n    counts_let = dict()\n    for i in range(len(string_p)):\n        if string_p[i] == string_s[i]:\n            continue\n        elif string_p[i] == '?' or string_s[i] == '?':\n            comp_p += string_p[i]\n            comp_s += string_s[i]\n            letters_p += is_vowel(string_p[i])\n            letters_s += is_vowel(string_s[i])\n        else:\n            count = count + 2 if is_vowel(string_p[i]) is is_vowel(string_s[i]) else count + 1\n    if comp_p:\n        for let in comp_p[:]:\n            counts_let[let] = 1 if let not in list(counts_let) else counts_let[let] + 1\n        for let in comp_s[:]:\n            counts_let[let] = counts_let.get(let, 0) + 1\n        counts_let.pop('?')\n        if len(comp_p) == 1:\n            return count\n        let_to_replace = max(counts_let, key=counts_let.get)\n        vowels = letters_p.count('v') + letters_s.count('v')\n        not_vowels = letters_p.count('c') + letters_s.count('c')\n        if counts_let[let_to_replace] > 1:\n            assert_p = comp_p.replace('?', let_to_replace)\n            assert_s = comp_s.replace('?', let_to_replace)\n            count1 = compare_strings(assert_p, assert_s)\n        if vowels >= not_vowels:\n            if not_vowels != 0:\n                ind = letters_p.find('c')\n                if ind == -1:\n                    ind = letters_s.find('c')\n                    repl = comp_s[ind]\n                else:\n                    repl = comp_p[ind]\n            else:\n                repl = 'b'\n            assert_p = comp_p.replace('?', repl)\n            assert_s = comp_s.replace('?', repl)\n            count2 = compare_strings(assert_p, assert_s)\n        else:\n            if vowels != 0:\n                ind = letters_p.find('v')\n                if ind == -1:\n                    ind = letters_s.find('v')\n                    repl = comp_s[ind]\n                else:\n                    repl = comp_p[ind]\n            else:\n                repl = 'a'\n            assert_p = comp_p.replace('?', repl)\n            assert_s = comp_s.replace('?', repl)\n            count2 = compare_strings(assert_p, assert_s)\n        if count1 is None:\n            count += count2\n        else:\n            count += min(count1, count2)\n    return count\nT = int(input())\nimport string\nfor tc in range(T):\n    curr_cnt = -1\n    num_of_letters = int(input())\n    STR_S = input()\n    STR_P = input()\n    if not ('?' in STR_S or '?' in STR_P):\n        cnt = compare_strings(STR_P, STR_S)\n    else:\n        for char in string.ascii_lowercase:\n            assert_s = STR_S.replace('?', char)\n            assert_p = STR_P.replace('?', char)\n            cnt = compare_strings(assert_p, assert_s)\n            curr_cnt = cnt if curr_cnt == -1 else min(curr_cnt, cnt)\n        cnt = curr_cnt\n    print(cnt)", "from sys import stdin, stdout\ninp_num = lambda : int(input())\ninp_lis = lambda : list(map(int, input().split()))\nvow = {'a', 'e', 'i', 'o', 'u'}\nfor _ in range(inp_num()):\n    n = inp_num()\n    s = input()\n    s1 = input()\n    d = {}\n    nv = 0\n    nc = 0\n    sc = 0\n    ma = 0\n    li = list(s + s1)\n    for i in li:\n        if i != '?':\n            d[i] = 0\n    for i in range(n):\n        a = s[i] == 'a' or s[i] == 'e' or s[i] == 'i' or (s[i] == 'o') or (s[i] == 'u')\n        b = s1[i] == 'a' or s1[i] == 'e' or s1[i] == 'i' or (s1[i] == 'o') or (s1[i] == 'u')\n        if s[i] == '?' and s1[i] == '?':\n            continue\n        elif s[i] == '?' or s1[i] == '?':\n            if s[i] == '?':\n                if b:\n                    nv += 1\n                else:\n                    nc += 1\n                d[s1[i]] += 1\n            else:\n                if a:\n                    nv += 1\n                else:\n                    nc += 1\n                d[s[i]] += 1\n        elif a:\n            if b:\n                if s[i] != s1[i]:\n                    sc += 2\n                else:\n                    continue\n            else:\n                sc += 1\n        elif b:\n            sc += 1\n        elif s1[i] == s[i]:\n            continue\n        else:\n            sc += 2\n    p = q = 0\n    for i in d.keys():\n        if i in vow:\n            if p < d[i]:\n                p = d[i]\n        elif q < d[i]:\n            q = d[i]\n    vowe = (nv - p) * 2 + nc\n    cons = nv + (nc - q) * 2\n    print(sc + min(vowe, cons))", "def check(c1, c2):\n    s = 'bcdfghjklmnpqrstvwxyz'\n    if c1 == c2:\n        return 0\n    elif c1 in 'aeiou' and c2 in 'aeiou' or (c1 in s and c2 in s):\n        return 2\n    else:\n        return 1\n\ndef compute(c1, c2):\n    if len(c1) == 0:\n        return 0\n    minval = float('inf')\n    for x in 'abcdefghijklmnopqrstuvwxyz':\n        str1 = ''\n        str2 = ''\n        for i in range(len(c1)):\n            if c1[i] == '?' and c2[i] != '?':\n                str1 += x\n                str2 += c2[i]\n            elif c1[i] != '?' and c2[i] == '?':\n                str2 += x\n                str1 += c1[i]\n            else:\n                str1 += c1[i]\n                str2 += c2[i]\n        cc = 0\n        for i in range(len(c1)):\n            cc += check(str1[i], str2[i])\n        if cc < minval:\n            minval = cc\n    return minval\nfor _ in range(int(input())):\n    num = int(input())\n    stt = input()\n    ptt = input()\n    answer = num\n    string = 'abcdefghijklmnopqrstuvwxyz'\n    str1 = ''\n    str2 = ''\n    for i in range(num):\n        if stt[i] == ptt[i]:\n            answer -= 1\n        elif stt[i] in string and ptt[i] in string:\n            if check(stt[i], ptt[i]) == 2:\n                answer += 1\n        else:\n            answer -= 1\n            str1 += stt[i]\n            str2 += ptt[i]\n    print(answer + compute(str1, str2))", "def most_frequent(List):\n    counter = 0\n    num = List[0]\n    for i in List:\n        curr_frequency = List.count(i)\n        if curr_frequency > counter:\n            counter = curr_frequency\n            num = i\n    return num\nn = int(input())\nfor _ in range(n):\n    l = int(input())\n    s1 = input()\n    s2 = input()\n    alls = 'abcdefghijklmnopqrstuvwxyz'\n    vovels = 'aeiou'\n    c = []\n    for j in alls:\n        x1 = ''\n        x2 = ''\n        count = 0\n        for i in range(len(s1)):\n            if s1[i] == '?':\n                si = j\n            else:\n                si = s1[i]\n            if s2[i] == '?':\n                pi = j\n            else:\n                pi = s2[i]\n            if si == pi:\n                continue\n            elif si in vovels and pi in vovels:\n                count += 2\n            elif si not in vovels and pi not in vovels:\n                count += 2\n            else:\n                count += 1\n        c.append(count)\n    print(min(c))", "T = int(input())\nfor tc in range(T):\n    N = int(input())\n    s = input()\n    p = input()\n    vow = 'aeiou'\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    l = []\n    for e in alpha:\n        sum = 0\n        p2 = p.replace('?', e)\n        s2 = s.replace('?', e)\n        for i in range(N):\n            if p2[i] != s2[i]:\n                if p2[i] in vow:\n                    if s2[i] in vow:\n                        sum = sum + 2\n                    else:\n                        sum = sum + 1\n                elif s2[i] in vow:\n                    sum = sum + 1\n                else:\n                    sum = sum + 2\n        l.append(sum)\n    m = min(l)\n    print(m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input().strip()\n    b = input().strip()\n    ans = 0\n    vows = {'a', 'e', 'i', 'o', 'u'}\n    s1 = ''\n    s2 = ''\n    for i in range(n):\n        if a[i] != b[i]:\n            if a[i] != '?' and b[i] != '?':\n                m = a[i] in vows\n                n = b[i] in vows\n                if m ^ n:\n                    ans += 1\n                else:\n                    ans += 2\n            else:\n                s1 += a[i]\n                s2 += b[i]\n    min_c = float('inf')\n    for i in range(26):\n        c = chr(ord('a') + i)\n        temp = 0\n        for i in range(len(s1)):\n            if s1[i] == '?':\n                k = s2[i]\n            else:\n                k = s1[i]\n            if k != c:\n                m = k in vows\n                n = c in vows\n                if m ^ n:\n                    temp += 1\n                else:\n                    temp += 2\n        min_c = min(min_c, temp)\n    print(ans + min_c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    res = 0\n    vow = 'aeiou'\n    freq = [0] * 26\n    for i in range(n):\n        if s[i] == t[i]:\n            continue\n        if s[i] != '?' and t[i] != '?':\n            if s[i] in vow and t[i] in vow:\n                res += 2\n            elif s[i] not in vow and t[i] not in vow:\n                res += 2\n            else:\n                res += 1\n        elif s[i] != '?':\n            freq[ord(s[i]) - 97] += 1\n        else:\n            freq[ord(t[i]) - 97] += 1\n    m1 = 999999999\n    vowc = 0\n    c = 0\n    for i in range(26):\n        if chr(i + 97) in vow:\n            vowc += freq[i]\n        else:\n            c += freq[i]\n    for i in range(26):\n        if chr(i + 97) in vow:\n            m1 = min(m1, 2 * (vowc - freq[i]) + c)\n        else:\n            m1 = min(m1, 2 * (c - freq[i]) + vowc)\n    if m1 != 999999999:\n        res += m1\n    print(res)", "def min_dico(dico):\n    mini = dico['a']\n    for i in alphabet:\n        if dico[i] < mini:\n            mini = dico[i]\n    return mini\nT = int(input())\nalphabet = ['a', 'z', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'q', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'w', 'x', 'c', 'v', 'b', 'n']\nconsonne = ['z', 'r', 't', 'y', 'p', 'q', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'w', 'x', 'c', 'v', 'b', 'n']\nvoyelle = ['a', 'e', 'i', 'o', 'u']\nfor i in range(T):\n    N = int(input())\n    s = [j for j in input()]\n    p = [j for j in input()]\n    tot = 0\n    dic = {'a': 0, 'z': 0, 'e': 0, 'r': 0, 't': 0, 'y': 0, 'u': 0, 'i': 0, 'o': 0, 'p': 0, 'q': 0, 's': 0, 'd': 0, 'f': 0, 'g': 0, 'h': 0, 'j': 0, 'k': 0, 'l': 0, 'm': 0, 'w': 0, 'x': 0, 'c': 0, 'v': 0, 'b': 0, 'n': 0}\n    for j in range(N):\n        if p[j] != '?' and s[j] != '?':\n            if p[j] != s[j]:\n                if s[j] in voyelle:\n                    if p[j] in voyelle:\n                        tot += 2\n                    else:\n                        tot += 1\n                elif not p[j] in voyelle:\n                    tot += 2\n                else:\n                    tot += 1\n        elif p[j] == '?':\n            if s[j] in voyelle:\n                for k in consonne:\n                    dic[k] += 1\n                for k in voyelle:\n                    dic[k] += 2\n                dic[s[j]] -= 2\n            if s[j] in consonne:\n                for k in consonne:\n                    dic[k] += 2\n                for k in voyelle:\n                    dic[k] += 1\n                dic[s[j]] -= 2\n        elif s[j] == '?':\n            if p[j] in voyelle:\n                for k in consonne:\n                    dic[k] += 1\n                for k in voyelle:\n                    dic[k] += 2\n                dic[p[j]] -= 2\n            if p[j] in consonne:\n                for k in consonne:\n                    dic[k] += 2\n                for k in voyelle:\n                    dic[k] += 1\n                dic[p[j]] -= 2\n    print(tot + min_dico(dic))"]