["for _ in range(int(input())):\n    (m, ans) = (1, 0)\n    (N, X) = list(map(int, input().split()))\n    i = 0\n    while True:\n        if X & 1 << i:\n            i += 1\n            continue\n        if N & 1 << i:\n            ans += m\n        m = 2 * m\n        if 1 << i > max(N, X):\n            break\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    m = 1\n    n = 0\n    ans = 0\n    (N, X) = list(map(int, input().split()))\n    i = 0\n    while True:\n        if X & 1 << i:\n            i += 1\n            continue\n        if N & 1 << i:\n            ans += m\n        m = 2 * m\n        n += 1\n        if 1 << i > max(N, X):\n            n -= 1\n            break\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    m = 1\n    n = 0\n    ans = 0\n    (N, X) = list(map(int, input().split()))\n    i = 0\n    while True:\n        if X & 1 << i:\n            i += 1\n            continue\n        if N & 1 << i:\n            ans += m\n        m = 2 * m\n        n += 1\n        if 1 << i > max(N, X):\n            n -= 1\n            break\n        i += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(0, 30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    count = 0\n    ans = 0\n    for i in range(0, 30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << count\n            count += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "def prod(arr):\n    res = 1\n    for el in arr:\n        res *= el\n    return res\n\ndef to_binary(n, l):\n    if n == 0:\n        return [0] * l\n    res = []\n    while n > 0 or len(res) < l:\n        b = n % 2\n        n //= 2\n        res.append(b)\n    return list(reversed(res))\n\ndef get_values(n, x):\n    bn = to_binary(n, 32)\n    bx = to_binary(x, 32)\n    arr = []\n    for i in range(len(bn)):\n        if bx[i] == 0:\n            arr.append([0, 1])\n        else:\n            arr.append([bn[i]])\n    return [bn, bx, arr]\n\ndef f(bn, bx, arr, start):\n    if len(bn) == 0:\n        return 0\n    for i in range(start, len(bn)):\n        if bn[i] == 0:\n            continue\n        if len(arr[i]) == 2:\n            return prod(map(len, arr[i + 1:])) + f(bn, bx, arr, i + 1)\n        elif arr[i][0] == 0:\n            return prod(map(len, arr[i + 1:]))\n        else:\n            return f(bn, bx, arr, i + 1)\n    return 0\n\ndef g(n, x):\n    values = get_values(n, x)\n    return f(*values, 0)\nt = int(input())\nfor i in range(t):\n    (n, x) = [int(el) for el in input().split(' ')]\n    print(g(n, x))", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(0, 30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(0, 30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(0, 30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "for _ in range(int(input())):\n    (N, X) = map(int, input().split())\n    ans = p = 0\n    for i in range(30):\n        if not X & 1 << i:\n            if N & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(0, 30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(0, 30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(0, 30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(0, 30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(0, 30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(0, 30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "def fun(n, v1, v2, f, dp):\n    if n == -1:\n        return 1\n    if dp[n][f] != -1:\n        return dp[n][f]\n    if f == 0:\n        if 1 << n & v1 and 1 << n & v2:\n            ans = fun(n - 1, v1, v2, 0, dp)\n        elif 1 << n & v1 and 1 << n & v2 == 0:\n            ans = fun(n - 1, v1, v2, 0, dp) + fun(n - 1, v1, v2, 1, dp)\n        elif 1 << n & v1 == 0 and 1 << n & v2:\n            ans = fun(n - 1, v1, v2, 0, dp)\n        else:\n            ans = fun(n - 1, v1, v2, 0, dp)\n    elif 1 << n & v1 and 1 << n & v2:\n        ans = fun(n - 1, v1, v2, 1, dp)\n    elif 1 << n & v1 and 1 << n & v2 == 0:\n        ans = 2 * fun(n - 1, v1, v2, 1, dp)\n    elif 1 << n & v1 == 0 and 1 << n & v2:\n        ans = fun(n - 1, v1, v2, 1, dp)\n    else:\n        ans = 2 * fun(n - 1, v1, v2, 1, dp)\n    dp[n][f] = ans\n    return ans\nfor _ in range(int(input())):\n    f = -1\n    (x, k) = map(int, input().split())\n    for i in range(30, -1, -1):\n        if 1 << i & x:\n            f = i\n            break\n    dp = [[-1] * 2 for i in range(31)]\n    ans = fun(f, x, k, 0, dp)\n    print(ans - 1)", "def fun(n, v1, v2, f, dp):\n    if n == -1:\n        return 1\n    if dp[n][f] != -1:\n        return dp[n][f]\n    if f == 0:\n        if 1 << n & v1 and 1 << n & v2:\n            ans = fun(n - 1, v1, v2, 0, dp)\n        elif 1 << n & v1 and 1 << n & v2 == 0:\n            ans = fun(n - 1, v1, v2, 0, dp) + fun(n - 1, v1, v2, 1, dp)\n        elif 1 << n & v1 == 0 and 1 << n & v2:\n            ans = fun(n - 1, v1, v2, 0, dp)\n        else:\n            ans = fun(n - 1, v1, v2, 0, dp)\n    elif 1 << n & v1 and 1 << n & v2:\n        ans = fun(n - 1, v1, v2, 1, dp)\n    elif 1 << n & v1 and 1 << n & v2 == 0:\n        ans = 2 * fun(n - 1, v1, v2, 1, dp)\n    elif 1 << n & v1 == 0 and 1 << n & v2:\n        ans = fun(n - 1, v1, v2, 1, dp)\n    else:\n        ans = 2 * fun(n - 1, v1, v2, 1, dp)\n    dp[n][f] = ans\n    return ans\nfor _ in range(int(input())):\n    f = -1\n    (x, k) = map(int, input().split())\n    for i in range(30, -1, -1):\n        if 1 << i & x:\n            f = i\n            break\n    dp = [[-1] * 2 for i in range(31)]\n    ans = fun(f, x, k, 0, dp)\n    print(ans - 1)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    ans = p = 0\n    for i in range(30):\n        if not x & 1 << i:\n            if n & 1 << i:\n                ans += 1 << p\n            p += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = [int(x) for x in input().split()]\n    dp = [[0] * 2 for i in range(31)]\n    i = 0\n    while n > 0 or x > 0:\n        n_r = n % 2\n        x_r = x % 2\n        if x_r == 0:\n            if i == 0:\n                dp[i][0] = 2\n                dp[i][1] = n_r\n            else:\n                dp[i][0] = 2 * dp[i - 1][0]\n                if n_r == 0:\n                    dp[i][1] = dp[i - 1][1]\n                else:\n                    dp[i][1] = dp[i - 1][0] + dp[i - 1][1]\n        elif i == 0:\n            dp[i][0] = 1\n            dp[i][1] = 0\n        else:\n            dp[i][0] = dp[i - 1][0]\n            dp[i][1] = dp[i - 1][1]\n        n //= 2\n        x //= 2\n        i += 1\n    print(dp[i - 1][1])", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    n1 = 0\n    n2 = 0\n    x1 = n\n    x2 = x\n    while x1 > 0:\n        n1 += 1\n        x1 = x1 >> 1\n    while x2 > 0:\n        n2 += 1\n        x2 = x2 >> 1\n    x1 = n\n    x2 = x\n    ans = 1\n    while n1 >= 0:\n        if x2 & 1 << n1 > 0:\n            ans *= 1\n        elif x1 & 1 << n1 > 0:\n            ans *= 2\n        else:\n            ans = ans * 2 - 1\n        n1 -= 1\n    print(ans - 1)", "for _ in range(int(input())):\n    dp = [[-1, -1] for i in range(55)]\n    (n, x) = list(map(int, input().split()))\n\n    def helper(i, g):\n        if i < 0:\n            return 1\n        if dp[i][g] != -1:\n            return dp[i][g]\n        ans = 0\n        if x >> i & 1:\n            ans += helper(i - 1, g)\n        elif n >> i & 1:\n            ans += helper(i - 1, g)\n            ans += helper(i - 1, 0)\n        else:\n            ans += helper(i - 1, g)\n            if g == 0:\n                ans += helper(i - 1, g)\n        dp[i][g] = ans\n        return ans\n    print(helper(39, 1) - 1)", "def dfs(ind, g):\n    if ind < 0:\n        return 1\n    if dp[ind][g] != -1:\n        return dp[ind][g]\n    res = 0\n    if X >> ind & 1:\n        res += dfs(ind - 1, g)\n    elif N >> ind & 1:\n        res += dfs(ind - 1, g)\n        res += dfs(ind - 1, 0)\n    else:\n        res += dfs(ind - 1, g)\n        if g == 0:\n            res += dfs(ind - 1, g)\n    dp[ind][g] = res\n    return dp[ind][g]\nT = int(input())\nfor i in range(T):\n    (N, X) = [int(x) for x in input().split()]\n    dp = [[-1 for i in range(2)] for j in range(55)]\n    print(dfs(39, 1) - 1)", "from functools import lru_cache\n\n@lru_cache(None)\ndef solve(i, ceil):\n    if i < 0:\n        return 1\n    ans = 0\n    if X & 1 << i == 0:\n        mini = 1 << i\n        maxi = (1 << i + 1) - 1\n        if ceil <= mini:\n            pass\n        elif ceil <= maxi:\n            ans += solve(i - 1, ceil ^ mini)\n        else:\n            ans += solve(i - 1, float('inf'))\n        mini = 0\n        maxi = (1 << i) - 1\n        if ceil <= mini:\n            pass\n        elif ceil <= maxi:\n            ans += solve(i - 1, ceil ^ mini)\n        else:\n            ans += solve(i - 1, float('inf'))\n    elif N & 1 << i == 0:\n        mini = 0\n        maxi = (1 << i) - 1\n        if ceil <= mini:\n            pass\n        elif ceil <= maxi:\n            ans += solve(i - 1, ceil ^ mini)\n        else:\n            ans += solve(i - 1, float('inf'))\n    else:\n        mini = 1 << i\n        maxi = (1 << i + 1) - 1\n        if ceil <= mini:\n            pass\n        elif ceil <= maxi:\n            ans += solve(i - 1, ceil ^ mini)\n        else:\n            ans += solve(i - 1, float('inf'))\n    return ans\nfor _ in range(int(input())):\n    (N, X) = map(int, input().split())\n    solve.cache_clear()\n    print(solve(31, N))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    y = len(bin(n)) - 2\n    na = [0 for i in range(y)]\n    xa = [0 for i in range(y)]\n    arr = [0 for i in range(y)]\n    val = 1\n    for i in range(y):\n        if val & x:\n            xa[i] = 1\n        if val & n:\n            na[i] = 1\n        val *= 2\n    ans = 1\n    for i in range(y - 1, -1, -1):\n        if xa[i] == 0 and na[i] == 1:\n            ans *= 2\n        elif xa[i] == 0 and na[i] == 0:\n            ans *= 2\n            ans -= 1\n    print(ans - 1)"]