["t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = str(input())\n    s = list(['0'] * k + list(s) + ['0'] * k)\n    c = 0\n    for j in range(k, k + n):\n        if s[j] == '1' and s[j - k] == '0' and (s[j + k] == '0'):\n            c += 1\n            if j + k < k + n:\n                s[j + k] = '1'\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = str(input())\n    s = list(['0'] * k + list(s) + ['0'] * k)\n    c = 0\n    for j in range(k, k + n):\n        if s[j] == '1' and s[j - k] == '0' and (s[j + k] == '0'):\n            c += 1\n            if j + k < k + n:\n                s[j + k] = '1'\n    print(c)", "try:\n    for t in range(int(input())):\n        (N, K) = map(int, input().split())\n        S = str(input())\n        S = list(['0'] * K + list(S) + ['0'] * K)\n        count = 0\n        for i in range(K, K + N):\n            if S[i] == '1' and S[i - K] == '0' and (S[i + K] == '0'):\n                count += 1\n                if i + K < K + N:\n                    S[i + K] = '1'\n        print(count)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    s = list(input())\n    count = 0\n    for i in range(n):\n        if s[i] == '0':\n            continue\n        if i + k < n and s[i + k] == '1' or (i - k >= 0 and s[i - k] == '1'):\n            continue\n        if i + k < n:\n            s[i + k] = '1'\n        else:\n            s[i] = '0'\n        count += 1\n    print(count)", "for test in range(int(input())):\n    (n, k) = map(int, input().split())\n    str = list(input())\n    if str.count('0') == n:\n        print(0)\n    else:\n        q = 0\n        for i in range(n):\n            if str[i] == '0':\n                continue\n            elif i + k < n and str[i + k] == '1' or (i - k >= 0 and str[i - k] == '1'):\n                continue\n            elif i + k < n:\n                str[i + k] = '1'\n                q += 1\n            else:\n                str[i] = '0'\n                q += 1\n        print(q)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ai = []\n    for i in range(n):\n        ai.append(int(s[i]))\n    c = 0\n    for i in range(n):\n        if ai[i] == 1:\n            if i + k >= n:\n                if ai[i - k] == 0 or i - k < 0:\n                    ai[i] = 0\n                    c = c + 1\n            elif i < k:\n                if ai[i + k] == 0:\n                    ai[i + k] = 1\n                    c = c + 1\n            elif ai[i + k] == 0 and ai[i - k] == 0:\n                ai[i + k] = 1\n                c = c + 1\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input().strip('\\n'))\n    ans = s.count('1')\n    res = 0\n    for i in range(n):\n        if s[i] == '1':\n            c = 0\n            t = 0\n            if i + k < n:\n                c += 1\n                if s[i + k] == '1':\n                    t += 1\n            if i - k >= 0:\n                c += 1\n                if s[i - k] == '1':\n                    t += 1\n            if c == 0:\n                res += 1\n                s[i] = '0'\n            if c > 0:\n                if t == 0:\n                    res += 1\n                    if i + k < n:\n                        s[i + k] = '1'\n                    else:\n                        s[i - k] = '1'\n    print(min(res, ans))", "def solveA():\n    for _ in range(int(input())):\n        print('YES' if input().count('1') > 3 else 'NO')\n\ndef solveB():\n    for _ in range(int(input())):\n        N = int(input())\n        if N == 1:\n            print('3')\n        elif N == 2:\n            print('21')\n        else:\n            print('11' + '0' * (N - 3) + '1')\n\ndef solveC():\n    from itertools import permutations\n    for _ in range(int(input())):\n        T = [int(x) for x in input().split()]\n        M = [int(x) for x in input().split()]\n        ans = 0\n        for i in range(21):\n            for j in range(21):\n                for k in range(21):\n                    if i * T[0] + j * T[1] + k * T[2] <= 240:\n                        temp = i * M[0] + j * M[1] + k * M[2]\n                        ans = max(ans, temp)\n        print(ans)\n\ndef solveD():\n    index = set()\n    for _ in range(int(input())):\n        (N, K) = [int(x) for x in input().split()]\n        S = input() + '0' * K\n        ans = 0\n        index.clear()\n        for i in range(K):\n            if S[i] == '1' and S[i + K] == '0':\n                ans += 1\n                index.add(i + K)\n        for i in range(K, N):\n            if S[i] == '1' and S[i - K] == '0' and (S[i + K] == '0') and (i - K not in index):\n                ans += 1\n                index.add(i + K)\n        print(ans)\nsolveD()", "def solveA():\n    for _ in range(int(input())):\n        print('YES' if input().count('1') > 3 else 'NO')\n\ndef solveB():\n    for _ in range(int(input())):\n        N = int(input())\n        if N == 1:\n            print('3')\n        elif N == 2:\n            print('21')\n        else:\n            print('11' + '0' * (N - 3) + '1')\n\ndef solveC():\n    from itertools import permutations\n    for _ in range(int(input())):\n        T = [int(x) for x in input().split()]\n        M = [int(x) for x in input().split()]\n        ans = 0\n        for i in range(21):\n            for j in range(21):\n                for k in range(21):\n                    if i * T[0] + j * T[1] + k * T[2] <= 240:\n                        temp = i * M[0] + j * M[1] + k * M[2]\n                        ans = max(ans, temp)\n        print(ans)\n\ndef solveD():\n    for _ in range(int(input())):\n        (N, K) = [int(x) for x in input().split()]\n        S = [int(x) for x in input()]\n        if K >= N:\n            print(S.count(1))\n            continue\n        mod_k = list(S[:K])\n        ans = 0\n        for (i, s) in enumerate(S[K:]):\n            ik = i % K\n            if s:\n                if mod_k[ik]:\n                    mod_k[ik] += 1\n                else:\n                    mod_k[ik] = 1\n            elif not mod_k[ik]:\n                continue\n            elif mod_k[ik] == 1:\n                ans += 1\n                mod_k[ik] += 1\n            else:\n                mod_k[ik] = 0\n        ans += mod_k.count(1)\n        print(ans)\nsolveD()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    c = 0\n    for i in range(n):\n        if s[i] == '1':\n            if i >= k and s[i - k] == '1' or (i + k < n and s[i + k] == '1'):\n                continue\n            if i + k < n:\n                s[i + k] = '1'\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = input()\n    s = list(c)\n    count = 0\n    for i in range(n):\n        if s[i] == '0':\n            continue\n        if s[i] == '1':\n            if i + k < n and s[i + k] == '1' or (i - k >= 0 and s[i - k] == '1'):\n                continue\n        if i + k < n:\n            s[i + k] = '1'\n            count += 1\n        else:\n            s[i] = '0'\n            count += 1\n    print(count)", "for q in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    s = list(s)\n    ans = 0\n    for i in range(n):\n        if s[i] == '0':\n            continue\n        flag = False\n        temp1 = abs(i + k)\n        temp2 = i - k\n        if temp1 < n:\n            if s[i] == s[temp1]:\n                flag = True\n        if temp2 >= 0 and (not flag):\n            if s[i] == s[temp2]:\n                flag = True\n        if temp1 > n - 1 and temp2 < 0:\n            s[i] = '0'\n            ans += 1\n        if not flag:\n            if temp1 < n:\n                s[temp1] = '1'\n                ans += 1\n            elif temp2 >= 0:\n                s[temp2] = '1'\n                ans += 1\n    print(ans)", "def k_balanced(N, K, S):\n    count = 0\n    index = []\n    S += K * '0'\n    for i in range(K):\n        if S[i] == '1':\n            if S[i + K] == '0':\n                count += 1\n                index.append(i + K)\n    for i in range(K, N):\n        if S[i] == '1':\n            if S[i + K] == '0' and S[i - K] == '0' and (i - K not in index):\n                count += 1\n                index.append(i + K)\n    return count\nt = int(input())\nans = []\nfor i in range(t):\n    (N, K) = map(int, input().split())\n    S = input()\n    ans.append(k_balanced(N, K, S))\nfor i in range(t):\n    print(ans[i])", "I = input\nt = int(I())\nfor _ in range(t):\n    (n, k) = map(int, I().split())\n    a = [*map(int, I())] + [0] * k\n    a = [a[i] and (not (a[i - k] or a[i + k])) for i in range(n)]\n    k *= 2\n    for i in range(k, n):\n        a[i] &= ~a[i - k]\n    print(sum(a))", "I = input\nt = int(I())\nfor _ in range(t):\n    (n, k) = map(int, I().split())\n    a = [*map(int, I())] + [0] * k\n    a = [a[i] and (not (a[i - k] or a[i + k])) for i in range(n)]\n    k *= 2\n    r = sum(a[:k])\n    for i in range(k, n):\n        a[i] &= ~a[i - k]\n        r += a[i]\n    print(r)", "import sys, os, io\ninput = sys.stdin.readline\nPI = 3.141592653589793\nINF = float('inf')\nMOD = 1000000007\n\ndef bin32(num):\n    return '{0:032b}'.format(num)\n\ndef add(x, y):\n    return (x + y) % MOD\n\ndef sub(x, y):\n    return (x - y + MOD) % MOD\n\ndef mul(x, y):\n    return x * y % MOD\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    return gcd(y, x % y)\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef power(x, y):\n    res = 1\n    x %= MOD\n    while y != 0:\n        if y & 1:\n            res = mul(res, x)\n        y >>= 1\n        x = mul(x, x)\n    return res\n\ndef mod_inv(n):\n    return power(n, MOD - 2)\n\ndef prob(p, q):\n    return mul(p, power(q, MOD - 2))\n\ndef ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\n\ndef ls():\n    return [i for i in input().split()]\nfor t in range(ii()):\n    t += 1\n    (n, k) = li()\n    s = input().strip()\n    ans = 0\n    s = list(s)\n    for i in range(n):\n        flag = 0\n        if s[i] == '1':\n            if i + k >= n and i - k < 0:\n                s[i] = '0'\n                ans += 1\n            else:\n                if i + k < n and s[i + k] == '1':\n                    continue\n                if i - k >= 0 and s[i - k] == '1':\n                    continue\n                if i + k < n:\n                    s[i + k] = '1'\n                else:\n                    s[i - k] = '1'\n                ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(input())\n    count = 0\n    for i in range(n):\n        if l[i] == '1':\n            if i < k and i + k < n:\n                if l[i + k] == '0':\n                    count += 1\n                    l[i + k] = '1'\n            elif i >= k and i + k < n:\n                if l[i + k] == '0' and l[i - k] == '0':\n                    count += 1\n                    l[i + k] = '1'\n            elif i >= k and i + k > n - 1:\n                if l[i - k] == '0':\n                    count += 1\n                    l[i] = '0'\n            elif i < k and i + k > n - 1:\n                count += 1\n                l[i] = '0'\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    s = input()\n    ar = list(s)\n    count = 0\n    for i in range(len(s)):\n        if ar[i] == '1' and i + k < n and (i - k >= 0):\n            if ar[i + k] != '1' and ar[i - k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i + k < n:\n            if ar[i + k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i - k >= 0:\n            if ar[i - k] != '1':\n                ar[i - k] = '1'\n                count += 1\n        elif ar[i] == '1':\n            ar[i] = '0'\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    cnt = 0\n    s = list(k * '0' + input() + k * '0')\n    for i in range(k, k + n):\n        if s[i] == '1':\n            if s[i + k] != '1' and s[i - k] != '1':\n                s[i + k] = '1'\n                cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    ans = 0\n    for i in range(n):\n        if s[i] == '1':\n            if i + k < n and i - k >= 0:\n                if s[i + k] == '0' and s[i - k] == '0':\n                    s[i + k] = '1'\n                    ans += 1\n            elif i + k < n:\n                if s[i + k] == '0':\n                    s[i + k] = '1'\n                    ans += 1\n            elif i - k >= 0:\n                if s[i - k] == '0':\n                    s[i - k] = '1'\n                    ans += 1\n            else:\n                ans += 1\n    print(ans)", "def addit(s):\n    le = len(s)\n    c = 0\n    for i in range(le):\n        if s[i] == '1':\n            if i - 1 >= 0 and s[i - 1] == '1':\n                continue\n            if i + 1 < le and s[i + 1] == '1':\n                continue\n            if i + 1 < le:\n                s = s[:i + 1] + '1' + s[i + 2:]\n            else:\n                s = s[:i] + '0' + s[i + 1:]\n            c += 1\n    return c\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    li = [''] * k\n    for i in range(n):\n        li[i % k] += s[i]\n    ans = 0\n    for i in range(k):\n        ans += addit(li[i])\n    print(ans)", "test = int(input())\nfor i in range(0, test):\n    (n, k) = map(int, input().split())\n    s = input()\n    current = -1\n    l = []\n    leader = [0] * n\n    counter = 0\n    for i in s:\n        l.append(int(i))\n    for i in range(0, n):\n        if n - 1 - i >= k:\n            if l[i] == 1:\n                if leader[i] == 0:\n                    if l[i + k] == 1:\n                        leader[i + k] = 1\n                        leader[i] = 1\n                        continue\n                    else:\n                        l[i + k] = 1\n                        leader[i] = 1\n                        leader[i + k] = 1\n                        counter = counter + 1\n                else:\n                    leader[i + k] = 1\n        elif l[i] == 1 and leader[i] == 0:\n            counter = counter + 1\n    print(counter)", "from itertools import islice\nI = input\nt = int(I())\nfor _ in range(t):\n    (n, k) = map(int, I().split())\n    a = [*map(int, I())] + [0] * k\n    a = [a[i] and (not (a[i - k] or a[i + k])) for i in range(n)]\n    k *= 2\n    r = sum(islice(a, k))\n    for i in range(k, n):\n        if a[i]:\n            if a[i - k]:\n                a[i] = 0\n            else:\n                r += 1\n    print(r)", "I = input\nt = int(I())\nfor _ in range(t):\n    (n, k) = map(int, I().split())\n    a = [*map(int, I())] + [0] * k\n    a = [a[i] and (not (a[i - k] or a[i + k])) for i in range(n)]\n    k *= 2\n    r = sum(a[:k])\n    for i in range(k, n):\n        if a[i]:\n            if a[i - k]:\n                a[i] = 0\n            else:\n                r += 1\n    print(r)", "I = input\nt = int(I())\nfor _ in range(t):\n    (n, k) = map(int, I().split())\n    a = [*map(int, I())] + [0] * k\n    a = [a[i] and (not (a[i - k] or a[i + k])) for i in range(n)]\n    r = 0\n    k *= 2\n    a = [0] * k + a\n    for i in range(k, n + k):\n        if a[i]:\n            if a[i - k]:\n                a[i] = 0\n            else:\n                r += 1\n    print(r)", "I = input\nt = int(I())\nfor _ in range(t):\n    (n, k) = map(int, I().split())\n    a = [*map(int, I())] + [0] * k\n    a = [a[i] & ~(a[i - k] | a[i + k]) for i in range(n)]\n    r = 0\n    k *= 2\n    a = [0] * k + a\n    for i in range(k, n + k):\n        if a[i]:\n            if a[i - k]:\n                a[i] = 0\n            else:\n                r += 1\n    print(r)", "for t in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    s = []\n    for i in S:\n        s.append(int(i))\n    ope = 0\n    for i in range(len(s)):\n        if s[i] == 0:\n            continue\n        if i + K < N and s[i + K] == 1 or (i - K >= 0 and s[i - K] == 1):\n            continue\n        if i + K < N and s[i + K] == 0:\n            s[i + K] = 1\n            ope += 1\n        else:\n            s[i] = 0\n            ope += 1\n    print(ope)", "for t in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    s = []\n    for i in S:\n        s.append(int(i))\n    ope = 0\n    for i in range(len(s)):\n        if s[i] == 0:\n            continue\n        if i + K < N and s[i + K] == 1 or (i - K >= 0 and s[i - K] == 1):\n            continue\n        if i + K < N and s[i + K] == 0:\n            s[i + K] = 1\n            ope += 1\n        else:\n            s[i] = 0\n            ope += 1\n    print(ope)", "for t in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    s = []\n    for i in S:\n        s.append(int(i))\n    ope = 0\n    for i in range(len(s)):\n        if s[i] == 0:\n            continue\n        if i + K < N and s[i + K] == 1 or (i - K >= 0 and s[i - K] == 1):\n            continue\n        if i + K < N and s[i + K] == 0:\n            s[i + K] = 1\n            ope += 1\n        elif i - K >= 0 and s[i - K] == 0:\n            s[i - K] = 1\n            ope += 1\n        else:\n            s[i] = 0\n            ope += 1\n    print(ope)", "t = int(input())\nfor tt in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(str(input()))\n    count = 0\n    for i in range(n):\n        if arr[i] == '0':\n            continue\n        if i + k < n:\n            if arr[i + k] == '1':\n                continue\n        if i - k >= 0:\n            if arr[i - k] == '1':\n                continue\n        if i + k < n:\n            arr[i + k] = '1'\n        else:\n            arr[i] = '0'\n        count += 1\n    print(count)", "try:\n    for i in range(int(input())):\n        (n, k) = map(int, input().split())\n        ar = list(input())\n        count = 0\n        for i in range(n):\n            if ar[i] == '1' and i + k < n and (i - k >= 0):\n                if ar[i + k] != '1' and ar[i - k] != '1':\n                    ar[i + k] = '1'\n                    count += 1\n            elif ar[i] == '1' and i + k < n:\n                if ar[i + k] != '1':\n                    ar[i + k] = '1'\n                    count += 1\n            elif ar[i] == '1' and i - k >= 0:\n                if ar[i - k] != '1':\n                    ar[i - k] = '1'\n                    count += 1\n            elif ar[i] == '1':\n                ar[i] = '0'\n                count += 1\n        print(count)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = []\n    for i in range(n):\n        if s[i] == '1':\n            if i - k >= 0 and s[i - k] == '1':\n                pass\n            elif i + k < n and s[k + i] == '1':\n                pass\n            else:\n                l.append(i)\n    m = len(l)\n    s = set(l)\n    c = 0\n    for i in range(m):\n        if l[i] in s:\n            if l[i] + 2 * k in s:\n                s.remove(l[i] + 2 * k)\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = []\n    for i in range(n):\n        if s[i] == '1':\n            if i - k >= 0 and s[i - k] == '1':\n                pass\n            elif i + k < n and s[k + i] == '1':\n                pass\n            else:\n                l.append(i)\n    m = len(l)\n    s = set(l)\n    c = 0\n    for i in range(m):\n        if l[i] in s:\n            if l[i] + 2 * k in s:\n                s.remove(l[i] + 2 * k)\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = []\n    for i in range(n):\n        if s[i] == '1':\n            if i - k >= 0 and s[i - k] == '1':\n                pass\n            elif i + k < n and s[k + i] == '1':\n                pass\n            else:\n                l.append(i)\n    m = len(l)\n    s = set(l)\n    c = 0\n    for i in range(m):\n        if l[i] in s:\n            if l[i] + 2 * k in s:\n                s.remove(l[i] + 2 * k)\n            c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    s = input()\n    ar = list(s)\n    count = 0\n    for i in range(len(s)):\n        if ar[i] == '1' and i + k < n and (i - k >= 0):\n            if ar[i + k] != '1' and ar[i - k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i + k < n:\n            if ar[i + k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i - k >= 0:\n            if ar[i - k] != '1':\n                ar[i - k] = '1'\n                count += 1\n        elif ar[i] == '1':\n            ar[i] = '0'\n            count += 1\n    print(count)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    s = input()\n    a = list(s)\n    c = 0\n    for i in range(n):\n        if a[i] == '1' and i + k < n and (i - k >= 0):\n            if a[i + k] == '0' and a[i - k] == '0':\n                a[i + k] = '1'\n                c = c + 1\n        elif a[i] == '1' and i + k < n:\n            if a[i + k] == '0':\n                a[i + k] = '1'\n                c = c + 1\n        elif a[i] == '1' and i - k >= 0:\n            if a[i - k] == '0':\n                a[i - k] = '1'\n                c = c + 1\n        elif a[i] == '1':\n            a[i] = '0'\n            c = c + 1\n    print(c)\n    t = t - 1", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    c = 0\n    for i in range(n):\n        if s[i] == '0':\n            continue\n        if i + k < n and s[i + k] == '1' or (i - k >= 0 and s[i - k] == '1'):\n            continue\n        if i + k < n:\n            s = s[:i + k] + '1' + s[i + k + 1:]\n        else:\n            s = s[:i] + '0' + s[i + 1:]\n        c += 1\n    print(c)", "try:\n    t = int(input())\n    for i in range(t):\n        (n, k) = [int(j) for j in input().split(' ')]\n        arr = input()\n        count = 0\n        a = []\n        for j in range(n):\n            a.append(arr[j])\n        for j in range(n):\n            if a[j] == '1':\n                if j - k >= 0 and a[j - k] == '1':\n                    continue\n                if j + k < n and a[j + k] == '1':\n                    continue\n                if j + k < n:\n                    a[j + k] = '1'\n                else:\n                    a[j] = '0'\n                count += 1\n        print(count)\nexcept:\n    pass", "t = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = 0\n    for i in range(n):\n        if s[i] == '1':\n            st = 0\n            if i - k >= 0:\n                if s[i - k] == '1':\n                    st = -1\n            if st == 0:\n                if i + k < n:\n                    if s[i + k] == '1':\n                        st = 1\n                    else:\n                        try:\n                            s = s[:i + k] + '1' + s[i + k + 1:]\n                        except:\n                            s = s[:i + k] + '1'\n                        ans += 1\n                else:\n                    ans += 1\n                    try:\n                        s = s[:i] + '0' + s[i + 1:]\n                    except:\n                        s = s[:i] + '0'\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef I():\n    return input().strip()\n\ndef II():\n    return int(input().strip())\n\ndef LI():\n    return [*map(int, input().strip().split())]\nimport copy, string, math, time, functools, random, fractions\nfrom heapq import heappush, heappop, heapify\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, defaultdict, Counter, OrderedDict\nfrom itertools import permutations, chain, combinations, groupby\nfrom operator import itemgetter\nfrom types import GeneratorType\nfrom typing import Iterable, TypeVar, Union\nfor _ in range(II()):\n    (n, k) = LI()\n    s = [int(x) for x in I()]\n    f = [0] * n\n    for i in range(n):\n        if s[i] == 1:\n            if i - k >= 0 and s[i - k] == 1 or (i + k < n and s[i + k] == 1):\n                continue\n            f[i] = 1\n    ans = 0\n    for i in range(n):\n        if f[i] == 1:\n            if i + 2 * k < n and f[i + 2 * k] == 1:\n                f[i + 2 * k] = 0\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1' and i + k < n and (i - k >= 0):\n            if s[i + k] != '1' and s[i - k] != '1':\n                s[i + k] = '1'\n                count += 1\n        elif s[i] == '1' and i + k < n:\n            if s[k + i] != '1':\n                s[i + k] = '1'\n                count += 1\n        elif s[i] == '1' and i - k >= 0:\n            if s[i - k] != '1':\n                s[i - k] = '1'\n                count += 1\n        elif s[i] == '1':\n            s[i] = '0'\n            count += 1\n    print(count)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    s = input()\n    l = []\n    m = [0 for i in range(0, 2 * n + 1)]\n    result = 0\n    for i in range(n):\n        if s[i] == '1':\n            l.append(i)\n            m[i] += 1\n    for i in range(len(l)):\n        if m[l[i] - k] and l[i] - k >= 0:\n            continue\n        if m[l[i] + k]:\n            continue\n        result += 1\n        m[l[i] + k] += 1\n    print(result)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    ans = 0\n    for i in range(n):\n        if s[i] == '1':\n            if i + k < n and s[i + k] == '0':\n                if i - k < 0 or s[i - k] == '0':\n                    s[i + k] = '1'\n                    ans += 1\n            if i + k >= n and i - k < 0:\n                s[i] = '0'\n                ans += 1\n    for i in range(n):\n        if i + k >= n and i - k >= 0:\n            if s[i] == '1' and s[i - k] == '0':\n                s[i - k] = 1\n                ans += 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    s = input()\n    l = []\n    m = [0 for i in range(0, 2 * n + 1)]\n    result = 0\n    for i in range(n):\n        if s[i] == '1':\n            l.append(i)\n            m[i] += 1\n    for i in range(len(l)):\n        if m[l[i] - k] and l[i] - k >= 0:\n            continue\n        if m[l[i] + k]:\n            continue\n        result += 1\n        m[l[i] + k] += 1\n    print(result)\n    t -= 1", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    count = 0\n    index = []\n    S += K * '0'\n    for i in range(K):\n        if S[i] == '1':\n            if S[i + K] == '0':\n                count += 1\n                index.append(i + K)\n    for i in range(K, N):\n        if S[i] == '1':\n            if S[i + K] == '0' and S[i - K] == '0' and (i - K not in index):\n                count += 1\n                index.append(i + K)\n    print(count)", "for k in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    p = []\n    for i in S:\n        p.append(int(i))\n    l = 0\n    for i in range(N):\n        if p[i] == 1 and i + K < N and (i - K >= 0):\n            if p[i + K] != 1 and p[i - K] != 1:\n                p[i + K] = 1\n                l += 1\n        elif p[i] == 1 and i + K < N:\n            if p[i + K] != 1:\n                p[i + K] = 1\n                l += 1\n        elif p[i] == 1 and i - K >= 0:\n            if p[i - K] != 1:\n                p[i - K] = 1\n                l += 1\n        elif p[i] == 1:\n            p[i] = 0\n            l += 1\n    print(l)", "def solve(s, n, k):\n    visited = [False for i in range(n)]\n    ans = 0\n    for i in range(n):\n        if not visited[i]:\n            visited[i] = True\n            if s[i] == '1':\n                if i + k < n:\n                    visited[i + k] = True\n                    if s[i + k] == '0':\n                        ans += 1\n                else:\n                    ans += 1\n        elif i + k < n and s[i + k] == '1':\n            visited[i + k] = True\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(solve(s, n, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    c = 0\n    for i in range(len(s)):\n        if s[i] == '1' and i + k < n and (i - k >= 0):\n            if s[i + k] != '1' and s[i - k] != '1':\n                s[i + k] = '1'\n                c += 1\n        elif s[i] == '1' and i + k < n:\n            if s[i + k] != '1':\n                s[i + k] = '1'\n                c += 1\n        elif s[i] == '1' and i - k >= 0:\n            if s[i - k] != '1':\n                s[i - k] = '1'\n                c += 1\n        elif s[i] == '1':\n            s[i] == '0'\n            c += 1\n    print(c)", "t = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    c = 0\n    for i in range(n):\n        if s[i] == '1':\n            if i - k >= 0 and s[i - k] == '1':\n                continue\n            elif i + k < n and s[i + k] == '1':\n                continue\n            elif i + k < n:\n                s[i + k] = '1'\n                c += 1\n            else:\n                s[i] = '0'\n                c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    s = input()\n    ar = list(s)\n    count = 0\n    for i in range(len(s)):\n        if ar[i] == '1' and i + k < n and (i - k >= 0):\n            if ar[i + k] != '1' and ar[i - k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i + k < n:\n            if ar[i + k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i - k >= 0:\n            if ar[i - k] != '1':\n                ar[i - k] = '1'\n                count += 1\n        elif ar[i] == '1':\n            ar[i] = '0'\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    s = list(input())\n    c = 0\n    for i in range(n):\n        if s[i] == '1':\n            if i >= k and s[i - k] == '1' or (i < n - k and s[i + k] == '1'):\n                continue\n            c += 1\n            if i < n - k:\n                s[i + k] = '1'\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    ar = list(s)\n    count = 0\n    for i in range(len(s)):\n        if ar[i] == '1' and i + k < n and (i - k >= 0):\n            if ar[i + k] != '1' and ar[i - k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i + k < n:\n            if ar[i + k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i - k >= 0:\n            if ar[i - k] != '1':\n                ar[i - k] = '1'\n                count += 1\n        elif ar[i] == '1':\n            ar[i] = '0'\n            count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    lis = list(input())\n    count = 0\n    for i in range(n):\n        if lis[i] == '0':\n            continue\n        if i + k < n and lis[i + k] == '1' or (i - k >= 0 and lis[i - k] == '1'):\n            continue\n        if i + k < n:\n            lis[i + k] = '1'\n        else:\n            lis[i] = '0'\n        count += 1\n    print(count)", "from collections import defaultdict\nfor _ in range(int(input())):\n\n    def solve(t):\n        ans = 0\n        for i in range(len(t)):\n            if t[i] == '1':\n                if i - 1 >= 0 and t[i - 1] == '1':\n                    continue\n                if i + 1 < len(t) and t[i + 1] == '1':\n                    continue\n                if i + 1 < n:\n                    t = t[:i + 1] + '1' + t[i + 2:]\n                else:\n                    t = t[:i - 1] + '1' + t[i:]\n                ans += 1\n        return ans\n    (n, k) = map(int, input().split())\n    s = input()\n    val = {}\n    for i in range(len(s)):\n        g = i % k\n        if not g in val:\n            val[g] = ''\n        val[g] += s[i]\n    res = 0\n    for l in val.values():\n        res += solve(l)\n    print(res)", "def solve(n, k, s):\n    count = 0\n    for (index, value) in enumerate(s):\n        if value == '0':\n            continue\n        if value == '1' and (index + k < n and s[index + k] == '1' or (index - k >= 0 and s[index - k] == '1')):\n            continue\n        elif index + k < n:\n            s[index + k] = '1'\n        else:\n            s[index] = '0'\n        count += 1\n    return count\nT = int(input())\nwhile T:\n    (n, k) = tuple(map(int, input().split()))\n    lis = list(input())\n    output = solve(n, k, lis)\n    print(output)\n    T -= 1", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    ans = 0\n    for i in range(n):\n        if s[i] == '1':\n            if i - k > -1 and s[i - k] == '1':\n                continue\n            if i + k < n:\n                if s[i + k] != '1':\n                    s[i + k] = '1'\n                    ans += 1\n            else:\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    r = 0\n    for i in range(n):\n        if s[i] == '0':\n            continue\n        elif i + k < n and s[i + k] == '1' or (i - k >= 0 and s[i - k] == '1'):\n            continue\n        elif i + k < n:\n            s[i + k] = '1'\n        else:\n            s[i] = '0'\n        r += 1\n    print(r)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    ans = 0\n    for i in range(n):\n        if s[i] == '1':\n            if i - k > -1 and s[i - k] == '1':\n                continue\n            if i + k < n:\n                if s[i + k] != '1':\n                    s[i + k] = '1'\n                    ans += 1\n            else:\n                ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    s = input()\n    ar = list(s)\n    count = 0\n    for i in range(len(s)):\n        if ar[i] == '1' and i + k < n and (i - k >= 0):\n            if ar[i + k] != '1' and ar[i - k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i - k >= 0:\n            if ar[i - k] != '1':\n                ar[i - k] = '1'\n                count += 1\n        elif ar[i] == '1' and i + k < n:\n            if ar[i + k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1':\n            ar[i] = '0'\n            count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    s = input()\n    ar = list(s)\n    count = 0\n    for i in range(len(s)):\n        if ar[i] == '1' and i + k < n and (i - k >= 0):\n            if ar[i + k] != '1' and ar[i - k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i + k < n:\n            if ar[i + k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i - k >= 0:\n            if ar[i - k] != '1':\n                ar[i - k] = '1'\n                count += 1\n        elif ar[i] == '1':\n            ar[i] = '0'\n            count += 1\n    print(count)", "t = int(input())\nwhile t > 0:\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    ans = 0\n    s = list(s)\n    for i in range(n):\n        if s[i] == '1':\n            if i + k < n and s[i + k] == '1' or (i - k >= 0 and s[i - k] == '1'):\n                continue\n            else:\n                ans += 1\n                if i + 2 * k < n and s[i + 2 * k] == '1':\n                    s[i + k] = '1'\n    print(ans)\n    t -= 1", "def func():\n    (N, K) = map(int, input().split())\n    S = list(input())\n    req = 0\n    for i in range(N):\n        if S[i] == '1':\n            if i >= K and S[i - K] == '1' or (i <= N - K - 1 and S[i + K] == '1'):\n                continue\n            req += 1\n            if i <= N - K - 1:\n                S[i + K] = '1'\n    print(req)\nt = int(input())\nfor i in range(t):\n    func()", "for j in range(int(input())):\n    (a, k) = map(int, input().split())\n    c = input()\n    b = []\n    for i in c:\n        b.append(i)\n    ans = 0\n    for i in range(len(b)):\n        if b[i] == '1':\n            if i - k >= 0 and b[i - k] == '1':\n                continue\n            if i + k <= a - 1 and b[i + k] == '1':\n                continue\n            if i + 2 * k <= a - 1 and b[i + 2 * k] == '1':\n                b[i + k] = '1'\n                ans += 1\n                continue\n            ans += 1\n    print(ans)", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef solve():\n    (n, k) = mp()\n    s = st()\n    ans = 0\n    for i in range(n):\n        if s[i] == '1':\n            if i - k >= 0 and i + k < n:\n                if s[i - k] == '1' or s[i + k] == '1':\n                    continue\n                else:\n                    s[i + k] = '1'\n                    ans += 1\n            elif i + k < n:\n                if s[i + k] == '1':\n                    continue\n                else:\n                    s[i + k] = '1'\n                    ans += 1\n            elif i - k >= 0:\n                if s[i - k] != '1':\n                    s[i - k] = '1'\n                    ans += 1\n            else:\n                s[i] = '0'\n                ans += 1\n    print(ans)\nfor _ in range(inp()):\n    solve()", "from sys import stdin, stdout\nnmbr = lambda : int(input())\nlst = lambda : list(map(int, input().split()))\nfor _ in range(nmbr()):\n    ans = 0\n    (n, k) = lst()\n    s = list(input())\n    for i in range(n):\n        ch = s[i]\n        if ch == '1':\n            if i - k < 0 and i + k >= n:\n                ans += 1\n            elif i + k >= n and (i - k >= 0 and s[i - k] == '0'):\n                ans += 1\n            elif i - k >= 0 and s[i - k] == '1':\n                continue\n            elif i + k < n and s[i + k] == '0':\n                s[i + k] = '1'\n                ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    s = input()\n    ar = list(s)\n    count = 0\n    for i in range(len(s)):\n        if ar[i] == '1' and i + k < n and (i - k >= 0):\n            if ar[i + k] != '1' and ar[i - k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i + k < n:\n            if ar[i + k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i - k >= 0:\n            if ar[i - k] != '1':\n                ar[i - k] = '1'\n                count += 1\n        elif ar[i] == '1':\n            ar[i] = '0'\n            count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    s = input()\n    ar = list(s)\n    count = 0\n    for i in range(len(s)):\n        if ar[i] == '1' and i + k < n and (i - k >= 0):\n            if ar[i + k] != '1' and ar[i - k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i + k < n:\n            if ar[i + k] != '1':\n                ar[i + k] = '1'\n                count += 1\n        elif ar[i] == '1' and i - k >= 0:\n            if ar[i - k] != '1':\n                ar[i - k] = '1'\n                count += 1\n        elif ar[i] == '1':\n            ar[i] = '0'\n            count += 1\n    print(count)", "T = int(input())\nans = []\n\ndef kbal(N, K, S):\n    count = 0\n    index = []\n    S += K * '0'\n    for i in range(K):\n        if S[i] == '1':\n            if S[i + K] == '0':\n                count += 1\n                index.append(i + K)\n    for i in range(K, N):\n        if S[i] == '1':\n            if S[i + K] == '0' and S[i - K] == '0' and (i - K not in index):\n                count += 1\n                index.append(i + K)\n    return count\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    S = input()\n    ans.append(kbal(N, K, S))\nfor i in range(T):\n    print(ans[i])", "t = int(input())\nwhile t > 0:\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    s = input()\n    l = []\n    m = [0 for i in range(0, 2 * n + 1)]\n    result = 0\n    for i in range(n):\n        if s[i] == '1':\n            l.append(i)\n            m[i] += 1\n    for i in range(len(l)):\n        if m[l[i] - k] and l[i] - k >= 0:\n            continue\n        if m[l[i] + k]:\n            continue\n        result += 1\n        m[l[i] + k] += 1\n    print(result)\n    t -= 1", "T = int(input())\nfor t in range(T):\n    (N, K) = map(int, input().split())\n    S = list(input())\n    ans = 0\n    for i in range(N):\n        if S[i] == '1':\n            if i >= K and S[i - K] == '1' or (i <= N - K - 1 and S[i + K] == '1'):\n                continue\n            ans += 1\n            if i <= N - K - 1:\n                S[i + K] = '1'\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    str = input()\n    list1 = list(str)\n    list2 = list(str)\n    count = 0\n    count1 = 0\n    for i in range(0, len(list1)):\n        if list1[i] == '1':\n            if i - k >= 0 and i + k < n:\n                if list1[i - k] == '1' or list1[i + k] == '1':\n                    continue\n                else:\n                    list1[i + k] = '1'\n                    count += 1\n            elif i - k >= 0 and i + k >= n:\n                if list1[i - k] == '1':\n                    continue\n                else:\n                    list1[i - k] = '1'\n                    count += 1\n            elif i - k < 0 and i + k < n:\n                if list1[i + k] == '1':\n                    continue\n                else:\n                    list1[i + k] = '1'\n                    count += 1\n            else:\n                list1[i] = '0'\n                count += 1\n    for i in range(len(list2) - 1, -1, -1):\n        if list2[i] == '1':\n            if i - k >= 0 and i + k < n:\n                if list2[i - k] == '1' or list2[i + k] == '1':\n                    continue\n                else:\n                    list2[i - k] = '1'\n                    count1 += 1\n            elif i - k >= 0 and i + k >= n:\n                if list2[i - k] == '1':\n                    continue\n                else:\n                    list2[i - k] = '1'\n                    count1 += 1\n            elif i - k < 0 and i + k < n:\n                if list2[i + k] == '1':\n                    continue\n                else:\n                    list2[i + k] = '1'\n                    count1 += 1\n            else:\n                list2[i] = '0'\n                count1 += 1\n    print(min(count, count1))", "for t in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    count = 0\n    li = []\n    for i in range(n):\n        if s[i] == '1':\n            if i - k >= 0:\n                if s[i - k] == '1' or i - k in li:\n                    continue\n            if i + k < n:\n                if s[i + k] == '1' or i + k in li:\n                    continue\n            count += 1\n            if i + k < n:\n                li.append(i + k)\n            else:\n                li.append(i - k)\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, list(input())))\n    p = 0\n    for i in range(n):\n        if l[i] == 1:\n            x = 0\n            y = 0\n            z = 0\n            if i + k < n:\n                if l[i + k] == 1:\n                    continue\n                else:\n                    x = 1\n            else:\n                x = 1\n            if i - k >= 0:\n                if l[i - k] == 1:\n                    continue\n                else:\n                    y = 1\n            else:\n                y = 1\n            if x == 1 and y == 1:\n                if i + k < n:\n                    l[i + k] = 1\n                elif i - k >= 0:\n                    l[i - k] = 1\n                else:\n                    l[i] = 0\n                p = p + 1\n    print(p)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(str(input()))\n    (a, b) = (0, 0)\n    for i in range(n):\n        t = 0\n        if s[i] == '1':\n            if i + k >= n and i - k < 0:\n                s[i] = '0'\n                a += 1\n                continue\n            if i + k < n and i - k >= 0:\n                if s[i + k] == '0' and s[i - k] == '0':\n                    a += 1\n                    s[i + k] = '1'\n                    continue\n            elif i + k < n:\n                if s[i + k] == '0':\n                    a += 1\n                    s[i + k] = '1'\n            elif s[i - k] == '0':\n                a += 1\n                s[i - k] = '1'\n    print(a)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\nt = inp()\nwhile t:\n    t -= 1\n    (n, k) = ma()\n    s = st()\n    re = 0\n    for i in range(k):\n        test = ''\n        for j in range(i, n, k):\n            test += s[j]\n        co = 0\n        ind = []\n        for j in range(len(test)):\n            if test[j] == '1':\n                co += 1\n                continue\n            else:\n                if co == 1:\n                    ind.append(j - 1)\n                co = 0\n        if co == 1:\n            ind.append(len(test) - 1)\n        if len(ind):\n            if len(ind) == 1:\n                re += 1\n            else:\n                j = 0\n                while j < len(ind) - 1:\n                    if ind[j + 1] - ind[j] > 2:\n                        re += 1\n                        j += 1\n                    else:\n                        re += 1\n                        j += 2\n                if j == len(ind) - 1:\n                    re += 1\n    print(min(re, s.count('1')))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    v = []\n    cnt = [0] * (2 * n)\n    for i in range(n):\n        if s[i] == '1':\n            v.append(i)\n            cnt[i] += 1\n    ans = 0\n    for i in range(len(v)):\n        if v[i] - k >= 0 and cnt[v[i] - k]:\n            continue\n        if cnt[v[i] + k]:\n            continue\n        ans += 1\n        cnt[v[i] + k] += 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = input()\n    lst = []\n    l = [0] * (2 * n)\n    for i in range(n):\n        if s[i] == '1':\n            lst.append(i)\n            l[i] += 1\n    res = 0\n    for i in range(len(lst)):\n        if lst[i] - k >= 0 and l[lst[i] - k]:\n            continue\n        if l[lst[i] + k]:\n            continue\n        res += 1\n        l[lst[i] + k] += 1\n    print(res)", "from os import times\nimport sys\nfrom collections import deque\nimport heapq\nimport bisect\nimport copy\nMOD = 1000000007\nNO = lambda : print('NO')\nYES = lambda : print('YES')\n_1 = lambda : print(-1)\nari = lambda : [int(_) for _ in input().split()]\ncin = lambda : int(input())\ncis = lambda : input()\nshow = lambda x: print(x)\ntest_case = 1\ntest_case = int(input())\nsys.setrecursionlimit(10 ** 6)\n\ndef ans():\n    (n, k) = ari()\n    cost = 0\n    st = cis()\n    st = list('0' * k + st + '0' * k)\n    for i in range(k, k + n):\n        if st[i] == '1':\n            if st[i + k] != '1' and st[i - k] != '1':\n                st[i + k] = '1'\n                cost += 1\n    print(cost)\nfor _ in range(test_case):\n    ans()", "def mgc(x, k, n):\n    ans = 0\n    bst = set()\n    for i in range(n):\n        if x[i] == '1':\n            if i in bst:\n                if i + k < n:\n                    if x[i + k] == '1':\n                        bst.add(i + k)\n                continue\n            if i + k >= n:\n                ans += 1\n                continue\n            if x[i + k] != '1':\n                ans += 1\n            s[i + k] = '1'\n            bst.add(i + k)\n    return ans\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    print(mgc(s, k, n))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    a = [s[i] for i in range(n)]\n    ans = 0\n    for i in range(n):\n        if a[i] == '1':\n            if i - k >= 0 and a[i - k] == '1':\n                continue\n            if i + k < n and a[i + k] == '1':\n                continue\n            if i + 2 * k < n and a[i + 2 * k] == '1':\n                a[i + k] = '1'\n            ans += 1\n    print(ans)", "from math import ceil, log, floor\nfrom collections import defaultdict\nimport sys\nimport os.path\nsys.setrecursionlimit(200000)\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r+')\n    sys.stdout = open('output.txt', 'w')\n\ndef MI():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = MI()\n    ans = 0\n    s = list(input())\n    for i in range(n):\n        if s[i] == '1':\n            if i + k >= n and i - k < 0:\n                ans += 1\n            elif i + k < n:\n                if i - k >= 0 and s[i - k] == '1':\n                    continue\n                if s[i + k] != '1':\n                    ans += 1\n                    s[i + k] = '1'\n            elif s[i - k] != '1':\n                ans += 1\n    print(ans)", "def cal(n, k, a):\n    convert = 0\n    a = list(a)\n    for i in range(n):\n        if a[i] == '1':\n            if i + k < n and i - k >= 0:\n                if a[i + k] == '1':\n                    a[i] = '2'\n                    a[i + k] = '2'\n                elif a[i - k] == '2':\n                    a[i] = '2'\n                elif a[i + k] == '0':\n                    convert += 1\n                    a[i] = '2'\n                    a[i + k] = '2'\n            elif i + k < n:\n                if a[i + k] == '1':\n                    a[i] = '2'\n                    a[i + k] = '2'\n                else:\n                    convert += 1\n                    a[i] = '2'\n                    a[i + k] = '2'\n            elif i - k >= 0:\n                if a[i - k] == '2':\n                    a[i] = '2'\n                elif a[i - k] == '0':\n                    a[i] = '2'\n                    convert += 1\n            else:\n                convert += 1\n                a[i] = '0'\n    return convert\nt = int(input())\nfor i in range(t):\n    m = list(map(int, input().split()))\n    l = input()\n    print(cal(m[0], m[1], l))", "for j in range(int(input())):\n    (N, K) = [int(i) for i in input().split()]\n    result = 0\n    string = [int(i) for i in input()]\n    for i in range(len(string)):\n        if string[i] == 1:\n            if i < K:\n                if i + K < len(string):\n                    if string[i + K] == 0:\n                        result += 1\n                        string[i + K] = 1\n                else:\n                    result += 1\n                    string[i] = 0\n            elif i > N - K - 1:\n                if i - K >= 0:\n                    if string[i - K] == 0:\n                        result += 1\n                        string[i - K] = 1\n                else:\n                    result += 1\n                    string[i] = 0\n            elif string[i + K] == 0 and string[i - K] == 0:\n                result += 1\n                string[i + K] = 1\n    print(result)", "T = int(input())\nout = []\nfor _ in range(T):\n    (n, k) = list(map(int, input().split(' ')))\n    string = input()\n    swaps = 0\n    done = set()\n    for i in range(n):\n        if i in done:\n            done.remove(i)\n            if i + k < n and string[i + k] == '1':\n                done.add(i + k)\n            continue\n        if string[i] == '1':\n            if i + k >= n:\n                swaps += 1\n                continue\n            if string[i + k] == '1':\n                done.add(i + k)\n            elif i + k * 2 < n and string[i + k * 2] == '1':\n                done.add(i + k)\n                swaps += 1\n            else:\n                swaps += 1\n    print(swaps)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = str(input())\n    res = []\n    for i in range(n):\n        if l[i] == '1':\n            if i >= k and l[i - k] == '1' or (i + k < n and l[i + k]) == '1':\n                continue\n            else:\n                res.append(i)\n    ans = set()\n    x = 0\n    for i in res:\n        if i + k not in ans and i - k not in ans:\n            if i + k < n:\n                ans.add(i + k)\n            else:\n                ans.add(i - k)\n            x += 1\n    print(x)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = str(input())\n    res = []\n    for i in range(n):\n        if l[i] == '1':\n            if i >= k and l[i - k] == '1' or (i + k < n and l[i + k]) == '1':\n                continue\n            else:\n                res.append(i)\n    ans = set()\n    x = 0\n    for i in res:\n        if i + k not in ans and i - k not in ans:\n            if i + k < n:\n                ans.add(i + k)\n            else:\n                ans.add(i - k)\n            x += 1\n    print(x)", "from copy import deepcopy\ncases = int(input())\nfor _ in range(cases):\n    (n, k) = map(int, input().split())\n    s = input()\n    ones = [i for (i, char) in enumerate(s) if char == '1']\n    st = set(ones)\n    ans = 0\n    for n in ones:\n        if n + k in st or n - k in st:\n            continue\n        ans += 1\n        st.add(n + k)\n    print(ans)", "from sys import stdin\ninput = stdin.readline\n\ndef answer():\n    ans = 0\n    for i in range(n):\n        if s[i] == '1':\n            if i + k < n:\n                if s[i + k] == '0':\n                    if i - k < 0 or s[i - k] != '1':\n                        ans += 1\n                        s[i + k] = '1'\n            elif i - k < 0:\n                ans += 1\n            elif s[i - k] != '1':\n                ans += 1\n                s[i - k] = '1'\n    return ans\nfor T in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input().strip())\n    print(answer())"]