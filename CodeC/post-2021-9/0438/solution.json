["def find_k(a):\n    e = 0\n    i = 0\n    o = 0\n    d = 0\n    for m in range(len(a)):\n        if a[m] % 2 != 0:\n            d += 1\n            break\n        else:\n            continue\n    while True:\n        if 2 * i >= len(a):\n            break\n        if a[2 * i] % 2 != 0:\n            e += 1\n        if a[2 * i] % 2 == 0:\n            o += 1\n        if 2 * i + 1 >= len(a):\n            break\n        if a[2 * i + 1] % 2 == 0:\n            e += 1\n        if a[2 * i + 1] % 2 != 0:\n            o += 1\n        i += 1\n    return (e, o, d)\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    (e, o, d) = find_k(a)\n    if d == 0:\n        print(-1)\n    else:\n        print(min(e, o))\n    while True:\n        if d == 0 or min(e, o) == 0:\n            break\n        if min(e, o) == e:\n            if 2 * i >= len(a):\n                break\n            if a[2 * i] % 2 != 0:\n                for j in range(len(a)):\n                    if a[j] % 2 != 0 and 2 * i != j:\n                        a[2 * i] = a[2 * i] ^ a[j]\n                        print(2 * i + 1, j + 1)\n                        break\n                    else:\n                        continue\n            if 2 * i + 1 >= len(a):\n                break\n            if a[2 * i + 1] % 2 == 0:\n                for j in range(len(a)):\n                    if a[j] % 2 != 0:\n                        a[2 * i + 1] = a[2 * i + 1] ^ a[j]\n                        print(2 * i + 1 + 1, j + 1)\n                        break\n                    else:\n                        continue\n        else:\n            if 2 * i >= len(a):\n                break\n            if a[2 * i] % 2 == 0:\n                for j in range(len(a)):\n                    if a[j] % 2 != 0:\n                        a[2 * i] = a[2 * i] ^ a[j]\n                        print(2 * i + 1, j + 1)\n                        break\n                    else:\n                        continue\n            if 2 * i + 1 >= len(a):\n                break\n            if a[2 * i + 1] % 2 != 0:\n                for j in range(len(a)):\n                    if a[j] % 2 != 0 and 2 * i + 1 != j:\n                        a[2 * i + 1] = a[2 * i + 1] ^ a[j]\n                        print(2 * i + 2, j + 1)\n                        break\n                    else:\n                        continue\n        i += 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = []\n    count = 0\n    nodd = 0\n    neven = 0\n    for i in range(n):\n        if l[i] % 2 == 0:\n            neven = neven + 1\n        else:\n            nodd = nodd + 1\n    if nodd == 0:\n        print(-1)\n    else:\n        if neven >= nodd:\n            oddindex = 0\n            evenindex = 0\n            for i in range(n):\n                if l[i] % 2 == 0:\n                    if i % 2 == 0:\n                        evenindex += 1\n                    else:\n                        oddindex += 1\n            if oddindex >= evenindex:\n                for i in range(n):\n                    if l[i] % 2 == 1 and i % 2 == 0:\n                        firstcrtodd = i\n                        break\n                i = 0\n                while i < n:\n                    if l[i] % 2 == 0:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n                i = 1\n                while i < n:\n                    if l[i] % 2 == 1:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n            else:\n                for i in range(n):\n                    if l[i] % 2 == 1 and i % 2 == 1:\n                        firstcrtodd = i\n                        break\n                i = 1\n                while i < n:\n                    if l[i] % 2 == 0:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n                i = 0\n                while i < n:\n                    if l[i] % 2 == 1:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n        else:\n            oddindex = 0\n            evenindex = 0\n            for i in range(n):\n                if l[i] % 2 == 1:\n                    if i % 2 == 0:\n                        evenindex += 1\n                    else:\n                        oddindex += 1\n            if oddindex >= evenindex:\n                for i in range(n):\n                    if l[i] % 2 == 1 and i % 2 == 1:\n                        firstcrtodd = i\n                        break\n                i = 0\n                while i < n:\n                    if l[i] % 2 == 1:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n                i = 1\n                while i < n:\n                    if l[i] % 2 == 0:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n            else:\n                for i in range(n):\n                    if l[i] % 2 == 1 and i % 2 == 0:\n                        firstcrtodd = i\n                        break\n                i = 0\n                while i < n:\n                    if l[i] % 2 == 0:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n                i = 1\n                while i < n:\n                    if l[i] % 2 == 1:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n        print(count)\n        for i in ans:\n            print(i)\n    t = t - 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = []\n    count = 0\n    nodd = 0\n    neven = 0\n    for i in range(n):\n        if l[i] % 2 == 0:\n            neven = neven + 1\n        else:\n            nodd = nodd + 1\n    if nodd == 0:\n        print(-1)\n    else:\n        if neven >= nodd:\n            oddindex = 0\n            evenindex = 0\n            for i in range(n):\n                if l[i] % 2 == 0:\n                    if i % 2 == 0:\n                        evenindex += 1\n                    else:\n                        oddindex += 1\n            if oddindex >= evenindex:\n                for i in range(n):\n                    if l[i] % 2 == 1 and i % 2 == 0:\n                        firstcrtodd = i\n                        break\n                i = 0\n                while i < n:\n                    if l[i] % 2 == 0:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n                i = 1\n                while i < n:\n                    if l[i] % 2 == 1:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n            else:\n                for i in range(n):\n                    if l[i] % 2 == 1 and i % 2 == 1:\n                        firstcrtodd = i\n                        break\n                i = 1\n                while i < n:\n                    if l[i] % 2 == 0:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n                i = 0\n                while i < n:\n                    if l[i] % 2 == 1:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n        else:\n            oddindex = 0\n            evenindex = 0\n            for i in range(n):\n                if l[i] % 2 == 1:\n                    if i % 2 == 0:\n                        evenindex += 1\n                    else:\n                        oddindex += 1\n            if oddindex >= evenindex:\n                for i in range(n):\n                    if l[i] % 2 == 1 and i % 2 == 1:\n                        firstcrtodd = i\n                        break\n                i = 0\n                while i < n:\n                    if l[i] % 2 == 1:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n                i = 1\n                while i < n:\n                    if l[i] % 2 == 0:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n            else:\n                for i in range(n):\n                    if l[i] % 2 == 1 and i % 2 == 0:\n                        firstcrtodd = i\n                        break\n                i = 0\n                while i < n:\n                    if l[i] % 2 == 0:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n                i = 1\n                while i < n:\n                    if l[i] % 2 == 1:\n                        l[i] = l[i] ^ l[firstcrtodd]\n                        ans.append(str(i + 1) + ' ' + str(firstcrtodd + 1))\n                        count = count + 1\n                    i = i + 2\n        print(count)\n        for i in ans:\n            print(i)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list((i % 2 for i in map(int, input().split())))\n    if a.count(1) == 0:\n        print(-1)\n    else:\n        (l0, l1) = (-1, -1)\n        for i in range(n):\n            if a[i] % 2:\n                if i % 2:\n                    l1 = i\n                else:\n                    l0 = i\n        Answ121 = []\n        if l0 != -1:\n            for i in range(n):\n                if i % 2 == a[i] % 2:\n                    Answ121.append([i + 1, l0 + 1])\n        Answ122 = []\n        if l1 != -1:\n            for i in range(n):\n                if i % 2 != a[i] % 2:\n                    Answ122.append([i + 1, l1 + 1])\n        if l0 == -1:\n            print(len(Answ122))\n            for i in Answ122:\n                print(*i)\n        elif l1 == -1:\n            print(len(Answ121))\n            for i in Answ121:\n                print(*i)\n        else:\n            print(min(len(Answ121), len(Answ122)))\n            if len(Answ121) < len(Answ122):\n                for i in Answ121:\n                    print(*i)\n            else:\n                for i in Answ122:\n                    print(*i)", "for _ in range(int(input())):\n    n = int(input())\n    a = list((i % 2 for i in map(int, input().split())))\n    if a.count(1) == 0:\n        print(-1)\n    else:\n        (l0, l1) = (-1, -1)\n        for i in range(n):\n            if a[i] % 2:\n                if i % 2:\n                    l1 = i\n                else:\n                    l0 = i\n        Answ121 = []\n        if l0 != -1:\n            for i in range(n):\n                if i % 2 == a[i] % 2:\n                    Answ121.append([i + 1, l0 + 1])\n        Answ122 = []\n        if l1 != -1:\n            for i in range(n):\n                if i % 2 != a[i] % 2:\n                    Answ122.append([i + 1, l1 + 1])\n        if l0 == -1:\n            print(len(Answ122))\n            for i in Answ122:\n                print(*i)\n        elif l1 == -1:\n            print(len(Answ121))\n            for i in Answ121:\n                print(*i)\n        else:\n            print(min(len(Answ121), len(Answ122)))\n            if len(Answ121) < len(Answ122):\n                for i in Answ121:\n                    print(*i)\n            else:\n                for i in Answ122:\n                    print(*i)", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    count0 = 0\n    count1 = 0\n    a0 = []\n    a1 = []\n    ans = 0\n    for i in range(n):\n        if i % 2 == 0 and a[i] % 2 == 1:\n            x = i\n            count0 = count0 + 1\n        if i % 2 == 1 and a[i] % 2 == 1:\n            y = i\n            count1 = count1 + 1\n    if count0 > count1:\n        for i in range(n):\n            if i % 2 == 1 and a[i] % 2 == 1 or (i % 2 == 0 and a[i] % 2 == 0):\n                ans = ans + 1\n                a0.append(i)\n        print(ans)\n        for i in range(len(a0)):\n            print(a0[i] + 1, x + 1)\n    elif count0 == 0 and count1 == 0:\n        print('-1')\n    else:\n        for i in range(n):\n            if i % 2 == 0 and a[i] % 2 == 1 or (i % 2 == 1 and a[i] % 2 == 0):\n                ans = ans + 1\n                a1.append(i)\n        print(ans)\n        for i in range(len(a1)):\n            print(a1[i] + 1, y + 1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        output = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    output.append([i + 1, one + 1])\n                else:\n                    output.append([i + 1, one + 1])\n        print(m)\n        for i in output:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "def printi(ans):\n    print(len(ans))\n    for i in ans:\n        print(i[0] + 1, i[1] + 1)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = [0] * len(arr)\n    odd = []\n    flag = 0\n    for i in range(len(arr)):\n        l[i] = arr[i] % 2\n        if arr[i] % 2 == 1:\n            odd.append(i)\n    if odd == []:\n        print(-1)\n        continue\n    (ans, ans1) = ([], [])\n    if l[0] % 2 != 1:\n        l[0] = 1\n        ans.append([0, odd[-1]])\n    for i in range(1, len(l)):\n        if i % 2 == 0 and l[i] == 0:\n            ans.append([i, 0])\n        elif i % 2 == 1 and l[i] == 1:\n            ans.append([i, 0])\n    l[0] = arr[0] % 2\n    if l[1] % 2 != 1:\n        l[1] = 1\n        ans1.append([1, odd[-1]])\n    for i in range(len(l)):\n        if i != 1:\n            if i % 2 == 0 and l[i] == 1:\n                ans1.append([i, 1])\n            elif i % 2 == 1 and l[i] == 0:\n                ans1.append([i, 1])\n    if len(ans) < len(ans1):\n        printi(ans)\n    else:\n        printi(ans1)", "def printi(ans):\n    print(len(ans))\n    for i in ans:\n        print(i[0] + 1, i[1] + 1)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = [0] * len(arr)\n    odd = []\n    flag = 0\n    for i in range(len(arr)):\n        l[i] = arr[i] % 2\n        if arr[i] % 2 == 1:\n            odd.append(i)\n    if odd == []:\n        print(-1)\n        continue\n    (ans, ans1) = ([], [])\n    if l[0] % 2 != 1:\n        l[0] = 1\n        ans.append([0, odd[-1]])\n    for i in range(1, len(l)):\n        if i % 2 == 0 and l[i] == 0:\n            ans.append([i, 0])\n        elif i % 2 == 1 and l[i] == 1:\n            ans.append([i, 0])\n    l[0] = arr[0] % 2\n    if l[1] % 2 != 1:\n        l[1] = 1\n        ans1.append([1, odd[-1]])\n    for i in range(len(l)):\n        if i != 1:\n            if i % 2 == 0 and l[i] == 1:\n                ans1.append([i, 1])\n            elif i % 2 == 1 and l[i] == 0:\n                ans1.append([i, 1])\n    if len(ans) < len(ans1):\n        printi(ans)\n    else:\n        printi(ans1)", "def printi(ans):\n    print(len(ans))\n    for i in ans:\n        print(i[0] + 1, i[1] + 1)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = [0] * len(arr)\n    odd = []\n    flag = 0\n    for i in range(len(arr)):\n        l[i] = arr[i] % 2\n        if arr[i] % 2 == 1:\n            odd.append(i)\n    if odd == []:\n        print(-1)\n        continue\n    (ans, ans1) = ([], [])\n    if l[0] % 2 != 1:\n        l[0] = 1\n        ans.append([0, odd[-1]])\n    for i in range(1, len(l)):\n        if i % 2 == 0 and l[i] == 0:\n            ans.append([i, 0])\n        elif i % 2 == 1 and l[i] == 1:\n            ans.append([i, 0])\n    l[0] = arr[0] % 2\n    if l[1] % 2 != 1:\n        l[1] = 1\n        ans1.append([1, odd[-1]])\n    for i in range(len(l)):\n        if i != 1:\n            if i % 2 == 0 and l[i] == 1:\n                ans1.append([i, 1])\n            elif i % 2 == 1 and l[i] == 0:\n                ans1.append([i, 1])\n    if len(ans) < len(ans1):\n        printi(ans)\n    else:\n        printi(ans1)", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if [ele % 2 for ele in a].count(1) == 0:\n        print(-1)\n        continue\n    x = delta = 0\n    for i in range(n):\n        if a[i] % 2 != i % 2:\n            x += 1\n    if x > n - x:\n        delta += 1\n    ind = -1\n    for i in range(n):\n        if a[i] % 2 and (i + delta) % 2:\n            ind = i\n            break\n    assert ind != -1\n    ops = []\n    for i in range(n):\n        if a[i] % 2 != (i + delta) % 2:\n            ops.append((i + 1, ind + 1))\n    print(len(ops))\n    assert len(ops) == min(x, n - x)\n    for i in ops:\n        a[i[0] - 1] ^= a[i[1] - 1]\n        print(*i)\n    for i in range(n - 1):\n        assert a[i] % 2 != a[i + 1] % 2", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if [ele % 2 for ele in a].count(1) == 0:\n        print(-1)\n        continue\n    x = delta = 0\n    for i in range(n):\n        if a[i] % 2 != i % 2:\n            x += 1\n    if x > n - x:\n        delta += 1\n    ind = -1\n    for i in range(n):\n        if a[i] % 2 and (i + delta) % 2:\n            ind = i\n            break\n    assert ind != -1\n    ops = []\n    for i in range(n):\n        if a[i] % 2 != (i + delta) % 2:\n            ops.append((i + 1, ind + 1))\n    print(len(ops))\n    assert len(ops) == min(x, n - x)\n    for i in ops:\n        a[i[0] - 1] ^= a[i[1] - 1]\n        print(*i)\n    for i in range(n - 1):\n        assert a[i] % 2 != a[i + 1] % 2", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if [ele % 2 for ele in a].count(1) == 0:\n        print(-1)\n        continue\n    x = delta = 0\n    for i in range(n):\n        if a[i] % 2 != i % 2:\n            x += 1\n    if x > n - x:\n        delta += 1\n    ind = -1\n    for i in range(n):\n        if a[i] % 2 and (i + delta) % 2:\n            ind = i\n            break\n    assert ind != -1\n    ops = []\n    for i in range(n):\n        if a[i] % 2 != (i + delta) % 2:\n            ops.append((i + 1, ind + 1))\n    print(len(ops))\n    assert len(ops) == min(x, n - x)\n    for i in ops:\n        a[i[0] - 1] ^= a[i[1] - 1]\n        print(*i)\n    for i in range(n - 1):\n        assert a[i] % 2 != a[i + 1] % 2", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) % 2 for x in input().split()]\n    target1 = [x % 2 for x in range(n)]\n    target2 = [(x + 1) % 2 for x in range(n)]\n    chk1 = chk2 = 0\n    changeind = -1\n    for i in range(n):\n        if a[i] != target1[i]:\n            chk1 += 1\n        elif a[i] != target2[i]:\n            chk2 += 1\n        else:\n            pass\n    if chk1 < chk2:\n        target = target1\n        chk = chk1\n    else:\n        target = target2\n        chk = chk2\n    for i in range(n):\n        if a[i] == 1 and target[i] == 1:\n            changeind = i\n            break\n    if changeind == -1:\n        print(-1)\n    else:\n        resinds = []\n        for i in range(n):\n            if a[i] != target[i] and i != changeind:\n                resinds.append(i)\n        print(chk)\n        for i in range(len(resinds)):\n            print(resinds[i] + 1, changeind + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list((i % 2 for i in map(int, input().split())))\n    if a.count(1) == 0:\n        print(-1)\n    else:\n        (l0, l1) = (-1, -1)\n        for i in range(n):\n            if a[i] % 2:\n                if i % 2:\n                    l1 = i\n                else:\n                    l0 = i\n        ans1 = []\n        if l0 != -1:\n            for i in range(n):\n                if i % 2 == a[i] % 2:\n                    ans1.append([i + 1, l0 + 1])\n        ans2 = []\n        if l1 != -1:\n            for i in range(n):\n                if i % 2 != a[i] % 2:\n                    ans2.append([i + 1, l1 + 1])\n        if l0 == -1:\n            print(len(ans2))\n            for i in ans2:\n                print(*i)\n        elif l1 == -1:\n            print(len(ans1))\n            for i in ans1:\n                print(*i)\n        else:\n            print(min(len(ans1), len(ans2)))\n            if len(ans1) < len(ans2):\n                for i in ans1:\n                    print(*i)\n            else:\n                for i in ans2:\n                    print(*i)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        output = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    output.append([i + 1, one + 1])\n                else:\n                    output.append([i + 1, one + 1])\n        print(m)\n        for i in output:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "def solver(n, arr):\n\n    def utility(arr):\n        indices = [[], []]\n        for i in range(n):\n            if parity[i] == arr[i]:\n                indices[parity[i]].append(i)\n        altered = []\n        for i in range(n):\n            if parity[i] != arr[i]:\n                search_val = 1\n                found_index = -1\n                for j in indices[search_val]:\n                    if j != i:\n                        found_index = j\n                        break\n                if found_index == -1:\n                    return None\n                altered.append((i, found_index))\n                parity[i] = search_val\n        return altered\n    parity = [i % 2 for i in arr]\n    s1 = [i % 2 for i in range(n)]\n    s2 = [(i + 1) % 2 for i in range(n)]\n    score1 = score2 = 0\n    for i in range(n):\n        if parity[i] == s1[i]:\n            score1 += 1\n        else:\n            score2 += 1\n    if score1 > score2:\n        c1 = utility(s1)\n        c2 = None\n    elif score2 > score1:\n        c2 = utility(s2)\n        c1 = None\n    else:\n        c1 = utility(s1)\n        parity = [i % 2 for i in arr]\n        c2 = utility(s2)\n    if c1 is None and c2 is None:\n        print('-1')\n    else:\n        if c1 is None:\n            changes = c2\n        elif c2 is None:\n            changes = c1\n        elif len(c1) <= len(c2):\n            changes = c1\n        else:\n            changes = c2\n        print(len(changes))\n        for tup in changes:\n            print(f'{tup[0] + 1} {tup[1] + 1}')\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    solver(n, arr)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor you in range(t):\n    n = int(input())\n    l = input().split()\n    li = [int(i) % 2 for i in l]\n    ind = -1\n    z = 0\n    ans = 10 ** 12\n    for i in range(n):\n        if li[i]:\n            ind = i\n            break\n    if ind == -1:\n        print(-1)\n        continue\n    c1 = 0\n    for i in range(n):\n        if li[i] != i % 2:\n            c1 += 1\n    c2 = 0\n    for i in range(n):\n        if li[i] != (i + 1) % 2:\n            c2 += 1\n    if c1 < c2:\n        print(c1)\n        for i in range(n):\n            if li[i] != i % 2:\n                if i == ind:\n                    continue\n                print(i + 1, ind + 1)\n        if li[ind] != ind % 2:\n            for i in range(n):\n                if i != ind and i % 2:\n                    print(ind + 1, i + 1)\n                    break\n    else:\n        print(c2)\n        for i in range(n):\n            if li[i] != (i + 1) % 2:\n                if i == ind:\n                    continue\n                print(i + 1, ind + 1)\n        if li[ind] != (ind + 1) % 2:\n            for i in range(n):\n                if i != ind and (i + 1) % 2:\n                    print(ind + 1, i + 1)\n                    break", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    e = o = ans = 0\n    for j in range(n):\n        if a[j] % 2 == 0:\n            ans += 1\n    if ans == n:\n        print(-1)\n    else:\n        for i in range(n):\n            if i % 2 != 0 and a[i] % 2 != 0:\n                b = i\n            if i % 2 == 0 and a[i] % 2 != 0:\n                c = i\n            if i % 2 == 0 and a[i] % 2 == 0 or (i % 2 != 0 and a[i] % 2 != 0):\n                e += 1\n            elif i % 2 == 0 and a[i] % 2 != 0 or (i % 2 != 0 and a[i] % 2 == 0):\n                o += 1\n        if o <= e:\n            print(n - e)\n            for x in range(n):\n                if x % 2 == 0:\n                    if a[x] % 2 != 0:\n                        print(x + 1, b + 1)\n                elif a[x] % 2 == 0:\n                    print(x + 1, b + 1)\n        else:\n            print(n - o)\n            for y in range(n):\n                if y % 2 == 0:\n                    if a[y] % 2 == 0:\n                        print(y + 1, c + 1)\n                elif a[y] % 2 != 0:\n                    print(y + 1, c + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    eo = 0\n    oe = 0\n    ans = 0\n    for j in range(n):\n        if a[j] % 2 == 0:\n            ans += 1\n    if ans == n:\n        print(-1)\n    else:\n        for i in range(n):\n            if i % 2 != 0 and a[i] % 2 != 0:\n                b = i\n            if i % 2 == 0 and a[i] % 2 != 0:\n                c = i\n            if i % 2 == 0 and a[i] % 2 == 0 or (i % 2 != 0 and a[i] % 2 != 0):\n                eo += 1\n            elif i % 2 == 0 and a[i] % 2 != 0 or (i % 2 != 0 and a[i] % 2 == 0):\n                oe += 1\n        if oe <= eo:\n            print(n - eo)\n            for x in range(n):\n                if x % 2 == 0:\n                    if a[x] % 2 != 0:\n                        print(x + 1, b + 1)\n                elif a[x] % 2 == 0:\n                    print(x + 1, b + 1)\n        else:\n            print(n - oe)\n            for y in range(n):\n                if y % 2 == 0:\n                    if a[y] % 2 == 0:\n                        print(y + 1, c + 1)\n                elif a[y] % 2 != 0:\n                    print(y + 1, c + 1)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = input().split(' ')\n    oePatternXor = []\n    eoPatternXor = []\n    eoPivot = -1\n    oePivot = -1\n    for (i, n) in enumerate(A):\n        V = int(n) % 2\n        if i % 2 == 0 and V == 0 or (i % 2 == 1 and V == 1):\n            eoPatternXor.append(i + 1)\n            if oePivot == -1 and V == 1:\n                oePivot = i + 1\n        elif i % 2 == 1 and V == 0 or (i % 2 == 0 and V == 1):\n            oePatternXor.append(i + 1)\n            if eoPivot == -1 and V == 1:\n                eoPivot = i + 1\n    if eoPivot == -1 and oePivot == -1:\n        print(-1)\n    else:\n        if eoPivot != -1 and oePivot != -1:\n            if oePivot != -1 and len(oePatternXor) <= len(eoPatternXor):\n                (res, pivot) = (oePatternXor, oePivot)\n            else:\n                (res, pivot) = (eoPatternXor, eoPivot)\n        elif eoPivot != -1:\n            (res, pivot) = (eoPatternXor, eoPivot)\n        elif oePivot != -1:\n            (res, pivot) = (oePatternXor, oePivot)\n        print(len(res))\n        for v in res:\n            print(v, pivot)", "try:\n    t = int(float(input()))\n    for _ in range(t):\n        n = int(float(input()))\n        a = list(map(int, input().split()))\n        b = [i % 2 for i in a]\n        if not any(b):\n            print(-1)\n        else:\n            (oe, eo) = (0, 0)\n            (o1, o2) = (0, 0)\n            for i in range(n):\n                if i % 2 == 0 and b[i] == 1:\n                    eo += 1\n                elif i % 2 == 1 and b[i] == 0:\n                    eo += 1\n                if i % 2 == 1 and b[i] == 1:\n                    o1 = i\n            for i in range(n):\n                if i % 2 == 0 and b[i] == 0:\n                    oe += 1\n                elif i % 2 == 1 and b[i] == 1:\n                    oe += 1\n                if i % 2 == 0 and b[i] == 1:\n                    o2 = i\n            if eo <= oe:\n                print(eo)\n                for i in range(n):\n                    if i % 2 == 0 and b[i] == 1:\n                        print(i + 1, o1 + 1)\n                    elif i % 2 == 1 and b[i] == 0:\n                        print(i + 1, o1 + 1)\n            else:\n                print(oe)\n                for i in range(n):\n                    if i % 2 == 0 and b[i] == 0:\n                        print(i + 1, o2 + 1)\n                    elif i % 2 == 1 and b[i] == 1:\n                        print(i + 1, o2 + 1)\nexcept:\n    pass", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if a[i] % 2 == 1:\n            count += 1\n    if count == 0:\n        print(-1)\n    else:\n        ans1 = []\n        ans2 = []\n        oddpos = -1\n        evenpos = -1\n        ele1 = 0\n        ele2 = 0\n        for i in range(n):\n            if a[i] % 2 == 1 and i % 2 == 1:\n                oddpos = i\n                ele1 = a[i]\n            if a[i] % 2 == 1 and i % 2 == 0:\n                evenpos = i\n                ele2 = a[i]\n        if oddpos >= 0:\n            for i in range(n):\n                if a[i] & 1 == 1 and i & 1 == 0:\n                    ans1.append((i + 1, oddpos + 1))\n                if a[i] & 1 == 0 and i & 1 == 1:\n                    ans1.append((i + 1, oddpos + 1))\n        if evenpos >= 0:\n            for i in range(n):\n                if a[i] & 1 == 1 and i & 1 == 1:\n                    ans2.append((i + 1, evenpos + 1))\n                if a[i] & 1 == 0 and i & 1 == 0:\n                    ans2.append((i + 1, evenpos + 1))\n        ans1len = len(ans1)\n        ans2len = len(ans2)\n        if ans2len == 0:\n            print(ans1len)\n            for i in ans1:\n                print(i[0], i[1])\n        elif ans1len == 0:\n            print(ans2len)\n            for i in ans2:\n                print(i[0], i[1])\n        elif len(ans1) < len(ans2):\n            print(ans1len)\n            for i in ans1:\n                print(i[0], i[1])\n        else:\n            print(ans2len)\n            for i in ans2:\n                print(i[0], i[1])\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if a[i] % 2 == 1:\n            count += 1\n    if count == 0:\n        print(-1)\n    else:\n        ans1 = []\n        ans2 = []\n        oddpos = -1\n        evenpos = -1\n        ele1 = 0\n        ele2 = 0\n        for i in range(n):\n            if a[i] % 2 == 1 and i % 2 == 1:\n                oddpos = i\n                ele1 = a[i]\n            if a[i] % 2 == 1 and i % 2 == 0:\n                evenpos = i\n                ele2 = a[i]\n        if oddpos >= 0:\n            for i in range(n):\n                if a[i] & 1 == 1 and i & 1 == 0:\n                    ans1.append((i + 1, oddpos + 1))\n                if a[i] & 1 == 0 and i & 1 == 1:\n                    ans1.append((i + 1, oddpos + 1))\n        if evenpos >= 0:\n            for i in range(n):\n                if a[i] & 1 == 1 and i & 1 == 1:\n                    ans2.append((i + 1, evenpos + 1))\n                if a[i] & 1 == 0 and i & 1 == 0:\n                    ans2.append((i + 1, evenpos + 1))\n        ans1len = len(ans1)\n        ans2len = len(ans2)\n        if ans2len == 0:\n            print(ans1len)\n            for i in ans1:\n                print(i[0], i[1])\n        elif ans1len == 0:\n            print(ans2len)\n            for i in ans2:\n                print(i[0], i[1])\n        elif len(ans1) < len(ans2):\n            print(ans1len)\n            for i in ans1:\n                print(i[0], i[1])\n        else:\n            print(ans2len)\n            for i in ans2:\n                print(i[0], i[1])\n    t = t - 1", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if num[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if [ele % 2 for ele in a].count(1) == 0:\n        print(-1)\n        continue\n    x = delta = 0\n    for i in range(n):\n        if a[i] % 2 != i % 2:\n            x += 1\n    if x > n - x:\n        delta += 1\n    ind = -1\n    for i in range(n):\n        if a[i] % 2 and (i + delta) % 2:\n            ind = i\n            break\n    assert ind != -1\n    ops = []\n    for i in range(n):\n        if a[i] % 2 != (i + delta) % 2:\n            ops.append((i + 1, ind + 1))\n    print(len(ops))\n    assert len(ops) == min(x, n - x)\n    for i in ops:\n        a[i[0] - 1] ^= a[i[1] - 1]\n        print(*i)\n    for i in range(n - 1):\n        assert a[i] % 2 != a[i + 1] % 2", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    if all([i & 1 == 0 for i in l]):\n        print('-1')\n        continue\n    l1 = []\n    l2 = []\n    l3 = []\n    odd_index = 0\n    for i in range(n):\n        if i & 1 == 0:\n            if l[i] & 1 == 0:\n                l2.append(i)\n            else:\n                l1.append(i)\n        elif l[i] & 1 == 0:\n            l1.append(i)\n        else:\n            l2.append(i)\n    op_req = min(len(l1), len(l2))\n    if len(l1) > len(l2):\n        l3 = l2\n    else:\n        l3 = l1\n    for i in range(len(l)):\n        if l[i] & 1 == 1 and i not in l3:\n            odd_index = i\n            break\n        else:\n            continue\n    print(op_req)\n    for i in l3:\n        print(i + 1, odd_index + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (evenI, oddI) = (0, 0)\n    (even, odd, oddP) = (False, False, False)\n    (kE, kO) = (0, 0)\n    (wE, wO) = ([], [])\n    for i in range(n):\n        if a[i] % 2 != 0:\n            oddP = True\n            if i % 2 == 0:\n                evenI = i\n                even = True\n            else:\n                oddI = i\n                odd = True\n    if not oddP:\n        print('-1')\n    else:\n        if even:\n            for i in range(n):\n                if i % 2 == 0 and a[i] % 2 == 0:\n                    kE += 1\n                    wE.append(i + 1)\n                if i % 2 != 0 and a[i] % 2 != 0:\n                    kE += 1\n                    wE.append(i + 1)\n        if odd:\n            for i in range(n):\n                if i % 2 == 0 and a[i] % 2 != 0:\n                    kO += 1\n                    wO.append(i + 1)\n                if i % 2 != 0 and a[i] % 2 == 0:\n                    kO += 1\n                    wO.append(i + 1)\n        if kE > kO:\n            if kO > 0:\n                print(kO)\n                for i in range(kO):\n                    print(wO[i], oddI + 1, end=' ')\n            else:\n                print(kE)\n                for i in range(kE):\n                    print(wE[i], evenI + 1, end=' ')\n        elif kE <= kO:\n            if kE > 0:\n                print(kE)\n                for i in range(kE):\n                    print(wE[i], evenI + 1, end=' ')\n            else:\n                print(kO)\n                for i in range(kO):\n                    print(wO[i], oddI + 1, end=' ')", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "from sys import stdin, stdout\ninp_num = lambda : int(input())\ninp_lis = lambda : list(map(int, input().split()))\nfor _ in range(inp_num()):\n    n = inp_num()\n    l1 = inp_lis()\n    l = []\n    re = []\n    re1 = []\n    a = 0\n    cou1 = -1\n    for i in l1:\n        if i % 2 == 0:\n            l.append(0)\n        else:\n            l.append(1)\n            cou1 = a\n        if a % 2 == 0:\n            re.append(1)\n            re1.append(0)\n        else:\n            re.append(0)\n            re1.append(1)\n        a += 1\n    if cou1 == -1:\n        print(-1)\n        continue\n    an1 = 0\n    an2 = 0\n    for i in range(n):\n        if l[i] == re[i]:\n            an2 += 1\n        else:\n            an1 += 1\n    print(min(an1, an2))\n    if an2 >= an1:\n        for i in range(n):\n            if l[i] == re[i]:\n                continue\n            elif i == 0 and l[0] == 0:\n                print(i + 1, cou1 + 1, sep=' ')\n            elif i == 1 and l[i] == 1:\n                print(2, 1, sep=' ')\n            elif l[i] != re[i]:\n                if l[i] == 1:\n                    print(i + 1, 1, sep=' ')\n                else:\n                    print(i + 1, 1, sep=' ')\n    else:\n        for i in range(n):\n            if l[i] == re1[i]:\n                continue\n            elif i == 0 and l[i] == 1 and (l[1] == 1):\n                print(1, 2, sep=' ')\n            elif i == 0 and l[i] == 1 and (l[1] == 0):\n                print(2, 1, sep=' ')\n                l[1] = 1\n                print(1, 2, sep=' ')\n            elif i == 1:\n                print(2, cou1 + 1, sep=' ')\n            elif l[i] != re1[i]:\n                if l[i] == 1:\n                    print(i + 1, 2, sep=' ')\n                else:\n                    print(i + 1, 2, sep=' ')", "p1 = [0, 1]\np2 = [1, 0]\n\ndef parity(x):\n    return x & 1\nfor t in range(int(input())):\n    n = int(input())\n    a = tuple(map(int, input().strip().split()))\n    idx = 0\n    c1 = 0\n    c2 = 0\n    sol_exists = False\n    s1 = []\n    s2 = []\n    o1 = -1\n    o2 = -1\n    for i in range(n):\n        p = parity(a[i])\n        if p != p1[idx]:\n            s1.append(i + 1)\n            c1 += 1\n        elif p == 1:\n            o1 = i + 1\n        if p != p2[idx]:\n            s2.append(i + 1)\n            c2 += 1\n        elif p == 1:\n            o2 = i + 1\n        idx = (idx + 1) % 2\n    if o1 == -1 and o2 == -1:\n        print(-1)\n        continue\n    m = min(c1, c2)\n    print(m)\n    if c1 <= c2:\n        for i in s1:\n            print(i, o1)\n    else:\n        for i in s2:\n            print(i, o2)", "p1 = [0, 1]\np2 = [1, 0]\n\ndef parity(x):\n    return x & 1\nfor t in range(int(input())):\n    n = int(input())\n    a = tuple(map(int, input().strip().split()))\n    idx = 0\n    c1 = 0\n    c2 = 0\n    sol_exists = False\n    s1 = []\n    s2 = []\n    o1 = -1\n    o2 = -1\n    for i in range(n):\n        p = parity(a[i])\n        if p != p1[idx]:\n            s1.append(i + 1)\n            c1 += 1\n        elif p == 1:\n            o1 = i + 1\n        if p != p2[idx]:\n            s2.append(i + 1)\n            c2 += 1\n        elif p == 1:\n            o2 = i + 1\n        idx = (idx + 1) % 2\n    if o1 == -1 and o2 == -1:\n        print(-1)\n        continue\n    m = min(c1, c2)\n    print(m)\n    if c1 <= c2:\n        for i in s1:\n            print(i, o1)\n    else:\n        for i in s2:\n            print(i, o2)", "p1 = [0, 1]\np2 = [1, 0]\n\ndef parity(x):\n    return x & 1\nfor t in range(int(input())):\n    n = int(input())\n    a = tuple(map(int, input().strip().split()))\n    idx = 0\n    c1 = 0\n    c2 = 0\n    sol_exists = False\n    s1 = []\n    s2 = []\n    o1 = -1\n    o2 = -1\n    for i in range(n):\n        p = parity(a[i])\n        if p != p1[idx]:\n            s1.append(i + 1)\n            c1 += 1\n        elif p == 1:\n            o1 = i + 1\n        if p != p2[idx]:\n            s2.append(i + 1)\n            c2 += 1\n        elif p == 1:\n            o2 = i + 1\n        idx = (idx + 1) % 2\n    if o1 == -1 and o2 == -1:\n        print(-1)\n        continue\n    m = min(c1, c2)\n    print(m)\n    if c1 <= c2:\n        for i in s1:\n            print(i, o1)\n    else:\n        for i in s2:\n            print(i, o2)", "p1 = [0, 1]\np2 = [1, 0]\n\ndef parity(x):\n    return x & 1\nfor t in range(int(input())):\n    n = int(input())\n    a = tuple(map(int, input().strip().split()))\n    idx = 0\n    c1 = 0\n    c2 = 0\n    sol_exists = False\n    s1 = []\n    s2 = []\n    o1 = -1\n    o2 = -1\n    for i in range(n):\n        p = parity(a[i])\n        if p != p1[idx]:\n            s1.append(i + 1)\n            c1 += 1\n        elif p == 1:\n            o1 = i + 1\n        if p != p2[idx]:\n            s2.append(i + 1)\n            c2 += 1\n        elif p == 1:\n            o2 = i + 1\n        idx = (idx + 1) % 2\n    if o1 == -1 and o2 == -1:\n        print(-1)\n        continue\n    m = min(c1, c2)\n    print(m)\n    if c1 <= c2:\n        for i in s1:\n            print(i, o1)\n    else:\n        for i in s2:\n            print(i, o2)", "p1 = [0, 1]\np2 = [1, 0]\n\ndef parity(x):\n    return x & 1\nfor t in range(int(input())):\n    n = int(input())\n    a = tuple(map(int, input().strip().split()))\n    idx = 0\n    c1 = 0\n    c2 = 0\n    sol_exists = False\n    s1 = []\n    s2 = []\n    o1 = -1\n    o2 = -1\n    for i in range(n):\n        p = parity(a[i])\n        if p != p1[idx]:\n            s1.append(i + 1)\n            c1 += 1\n        elif p == 1:\n            o1 = i + 1\n        if p != p2[idx]:\n            s2.append(i + 1)\n            c2 += 1\n        elif p == 1:\n            o2 = i + 1\n        idx = (idx + 1) % 2\n    if o1 == -1 and o2 == -1:\n        print(-1)\n        continue\n    m = min(c1, c2)\n    print(m)\n    if c1 <= c2:\n        for i in s1:\n            print(i, o1)\n    else:\n        for i in s2:\n            print(i, o2)", "p1 = [0, 1]\np2 = [1, 0]\n\ndef parity(x):\n    return x & 1\nfor t in range(int(input())):\n    n = int(input())\n    a = tuple(map(int, input().strip().split()))\n    idx = 0\n    c1 = 0\n    c2 = 0\n    sol_exists = False\n    s1 = []\n    s2 = []\n    o1 = -1\n    o2 = -1\n    for i in range(n):\n        p = parity(a[i])\n        if p != p1[idx]:\n            s1.append(i + 1)\n            c1 += 1\n        elif p == 1:\n            o1 = i + 1\n        if p != p2[idx]:\n            s2.append(i + 1)\n            c2 += 1\n        elif p == 1:\n            o2 = i + 1\n        idx = (idx + 1) % 2\n    if o1 == -1 and o2 == -1:\n        print(-1)\n        continue\n    m = min(c1, c2)\n    print(m)\n    if c1 <= c2:\n        for i in s1:\n            print(i, o1)\n    else:\n        for i in s2:\n            print(i, o2)", "p1 = [0, 1]\np2 = [1, 0]\n\ndef parity(x):\n    return x & 1\nfor t in range(int(input())):\n    n = int(input())\n    a = tuple(map(int, input().strip().split()))\n    idx = 0\n    c1 = 0\n    c2 = 0\n    sol_exists = False\n    s1 = []\n    s2 = []\n    o1 = -1\n    o2 = -1\n    for i in range(n):\n        p = parity(a[i])\n        if p != p1[idx]:\n            s1.append(i + 1)\n            c1 += 1\n        elif p == 1:\n            o1 = i + 1\n        if p != p2[idx]:\n            s2.append(i + 1)\n            c2 += 1\n        elif p == 1:\n            o2 = i + 1\n        idx = (idx + 1) % 2\n    if o1 == -1 and o2 == -1:\n        print(-1)\n        continue\n    m = min(c1, c2)\n    print(m)\n    if c1 <= c2:\n        for i in s1:\n            print(i, o1)\n    else:\n        for i in s2:\n            print(i, o2)", "p1 = [0, 1]\np2 = [1, 0]\n\ndef parity(x):\n    return x & 1\nfor t in range(int(input())):\n    n = int(input())\n    a = tuple(map(int, input().strip().split()))\n    idx = 0\n    c1 = 0\n    c2 = 0\n    sol_exists = False\n    s1 = []\n    s2 = []\n    o1 = -1\n    o2 = -1\n    for i in range(n):\n        p = parity(a[i])\n        if p != p1[idx]:\n            s1.append(i + 1)\n            c1 += 1\n        elif p == 1:\n            o1 = i + 1\n        if p != p2[idx]:\n            s2.append(i + 1)\n            c2 += 1\n        elif p == 1:\n            o2 = i + 1\n        idx = (idx + 1) % 2\n    if o1 == -1 and o2 == -1:\n        print(-1)\n        continue\n    m = min(c1, c2)\n    print(m)\n    if c1 <= c2:\n        for i in s1:\n            print(i, o1)\n    else:\n        for i in s2:\n            print(i, o2)", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "p1 = [0, 1]\np2 = [1, 0]\n\ndef parity(x):\n    return x & 1\nfor t in range(int(input())):\n    n = int(input())\n    a = tuple(map(int, input().strip().split()))\n    idx = 0\n    c1 = 0\n    c2 = 0\n    sol_exists = False\n    s1 = []\n    s2 = []\n    o1 = -1\n    o2 = -1\n    for i in range(n):\n        p = parity(a[i])\n        if p != p1[idx]:\n            s1.append(i + 1)\n            c1 += 1\n        elif p == 1:\n            o1 = i + 1\n        if p != p2[idx]:\n            s2.append(i + 1)\n            c2 += 1\n        elif p == 1:\n            o2 = i + 1\n        idx = (idx + 1) % 2\n    if o1 == -1 and o2 == -1:\n        print(-1)\n        continue\n    m = min(c1, c2)\n    print(m)\n    if c1 <= c2:\n        for i in s1:\n            print(i, o1)\n    else:\n        for i in s2:\n            print(i, o2)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for _ in range(int(input())):\n    m = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(m):\n            count[k % 2].append(i)\n            if i < m - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "for _ in range(int(input())):\n    l = int(input())\n    seq = [int(i) % 2 for i in input().split()]\n    if not any(seq):\n        print(-1)\n    else:\n        count = [[], []]\n        k = 0\n        for i in range(l):\n            count[k % 2].append(i)\n            if i < l - 1 and seq[i] == seq[i + 1]:\n                k += 1\n        min = count[0] if len(count[0]) <= len(count[1]) else count[1]\n        print(len(min))\n        for i in min:\n            seq[i] = -1\n            print(i + 1, 1 + seq.index(1))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().strip().split()))\n    arr_odd = []\n    arr_even = []\n    even = 0\n    for i in range(len(lst)):\n        lst[i] = lst[i] % 2\n        if lst[i] == 0:\n            even += 1\n        arr_even.append(i % 2)\n        arr_odd.append((i + 1) % 2)\n    if even == len(lst):\n        print(-1)\n        continue\n    chose_arr = []\n    count_even = 0\n    count_odd = 0\n    for i in range(len(lst)):\n        if lst[i] == arr_even[i]:\n            count_even += 1\n        if lst[i] == arr_odd[i]:\n            count_odd += 1\n    if count_even >= count_odd:\n        chose_arr = arr_even\n    else:\n        chose_arr = arr_odd\n    result = []\n    j = len(lst) - 1\n    while j >= 0:\n        if lst[j] == 1:\n            break\n        j -= 1\n    odd_index = 0\n    res = 0\n    for i in range(2):\n        if lst[i] != chose_arr[i]:\n            res += 1\n            lst[i] = chose_arr[i]\n            result.append([i + 1, j + 1])\n    for i in range(len(lst)):\n        if lst[i] % 2 != 0:\n            odd_index = i\n            break\n    for i in range(2, len(lst)):\n        if lst[i] != chose_arr[i]:\n            res += 1\n            result.append([i + 1, odd_index + 1])\n    print(res)\n    for i in range(res):\n        print(result[i][0], result[i][1])", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().strip().split()))\n    arr_odd = []\n    arr_even = []\n    even = 0\n    for i in range(len(lst)):\n        lst[i] = lst[i] % 2\n        if lst[i] == 0:\n            even += 1\n        arr_even.append(i % 2)\n        arr_odd.append((i + 1) % 2)\n    if even == len(lst):\n        print(-1)\n        continue\n    chose_arr = []\n    count_even = 0\n    count_odd = 0\n    for i in range(len(lst)):\n        if lst[i] == arr_even[i]:\n            count_even += 1\n        if lst[i] == arr_odd[i]:\n            count_odd += 1\n    if count_even >= count_odd:\n        chose_arr = arr_even\n    else:\n        chose_arr = arr_odd\n    result = []\n    j = len(lst) - 1\n    while j >= 0:\n        if lst[j] == 1:\n            break\n        j -= 1\n    odd_index = 0\n    res = 0\n    for i in range(2):\n        if lst[i] != chose_arr[i]:\n            res += 1\n            lst[i] = chose_arr[i]\n            result.append([i + 1, j + 1])\n    for i in range(len(lst)):\n        if lst[i] != 0:\n            odd_index = i\n            break\n    for i in range(2, len(lst)):\n        if lst[i] != chose_arr[i]:\n            res += 1\n            result.append([i + 1, odd_index + 1])\n    print(res)\n    for i in range(res):\n        print(result[i][0], result[i][1])", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().strip().split()))\n    arr_odd = []\n    arr_even = []\n    k = 0\n    even = 0\n    for i in range(len(lst)):\n        lst[i] = lst[i] % 2\n        if lst[i] == 0:\n            even += 1\n        arr_even.append(k % 2)\n        k += 1\n        arr_odd.append(k % 2)\n    if even == len(lst):\n        print(-1)\n        continue\n    chose_arr = []\n    count_even = 0\n    count_odd = 0\n    for i in range(len(lst)):\n        if lst[i] == arr_even[i]:\n            count_even += 1\n        if lst[i] == arr_odd[i]:\n            count_odd += 1\n    if count_even >= count_odd:\n        chose_arr = arr_even\n    else:\n        chose_arr = arr_odd\n    result = []\n    j = len(lst) - 1\n    while j >= 0:\n        if lst[j] == 1:\n            break\n        j -= 1\n    odd_index = 0\n    res = 0\n    for i in range(2):\n        if lst[i] != chose_arr[i]:\n            res += 1\n            lst[i] = chose_arr[i]\n            result.append([i + 1, j + 1])\n    for i in range(len(lst)):\n        if lst[i] != 0:\n            odd_index = i\n            break\n    for i in range(2, len(lst)):\n        if lst[i] != chose_arr[i]:\n            res += 1\n            result.append([i + 1, odd_index + 1])\n    print(res)\n    for i in range(res):\n        print(result[i][0], result[i][1])", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().strip().split()))\n    arr_odd = []\n    arr_even = []\n    k = 0\n    even = 0\n    an = 0\n    for i in range(len(lst)):\n        lst[i] = lst[i] % 2\n        if lst[i] == 0:\n            even += 1\n        arr_even.append(i % 2)\n        arr_odd.append((i + 1) % 2)\n    if even == len(lst):\n        print(-1)\n        continue\n    chose_arr = []\n    count_even = 0\n    count_odd = 0\n    for i in range(len(lst)):\n        if lst[i] == arr_even[i]:\n            count_even += 1\n        if lst[i] == arr_odd[i]:\n            count_odd += 1\n    if count_even >= count_odd:\n        chose_arr = arr_even\n        an = n - count_even\n    else:\n        chose_arr = arr_odd\n        an = n - count_odd\n    result = []\n    j = len(lst) - 1\n    while j >= 0:\n        if lst[j] == 1:\n            break\n        j -= 1\n    odd_index = 0\n    res = 0\n    print(an)\n    for i in range(2):\n        if lst[i] != chose_arr[i]:\n            res += 1\n            lst[i] = chose_arr[i]\n            print(i + 1, j + 1)\n    for i in range(len(lst)):\n        if lst[i] != 0:\n            odd_index = i\n            break\n    for i in range(2, len(lst)):\n        if lst[i] != chose_arr[i]:\n            res += 1\n            print(i + 1, odd_index + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (valid, odd, even) = (False, False, False)\n    (odd_pos, even_pos) = (-1, -1)\n    for i in range(n):\n        if a[i] % 2:\n            valid = True\n            if i % 2:\n                odd = True\n                odd_pos = i\n            else:\n                even = True\n                even_pos = i\n    if valid == False:\n        print(-1)\n        continue\n    r_odd = []\n    r_even = []\n    ops_odd = 0\n    ops_even = 0\n    if odd:\n        for i in range(n):\n            if i % 2:\n                if a[i] % 2 == 0:\n                    ops_odd += 1\n                    r_odd.append([i + 1, odd_pos + 1])\n            elif a[i] % 2 != 0:\n                ops_odd += 1\n                r_odd.append([i + 1, odd_pos + 1])\n    if even:\n        for i in range(n):\n            if i % 2:\n                if a[i] % 2 != 0:\n                    ops_even += 1\n                    r_even.append([i + 1, even_pos + 1])\n            elif a[i] % 2 == 0:\n                ops_even += 1\n                r_even.append([i + 1, even_pos + 1])\n    if odd and even:\n        if ops_even <= ops_odd:\n            print(ops_even)\n            for i in r_even:\n                print(i[0], i[1])\n        else:\n            print(ops_odd)\n            for i in r_odd:\n                print(i[0], i[1])\n    elif odd:\n        print(ops_odd)\n        for i in r_odd:\n            print(i[0], i[1])\n    else:\n        print(ops_even)\n        for i in r_even:\n            print(i[0], i[1])", "t = int(input())\nwhile t:\n    n = int(input())\n    ls = list(map(int, input().split(' ')))\n    (lastOddPos, evenPos, oddPos) = (-1, 0, 0)\n    if [ele % 2 for ele in ls].count(1) == 0:\n        print(-1)\n        t -= 1\n        continue\n    for i in range(1, n + 1):\n        if i % 2:\n            if ls[i - 1] % 2:\n                evenPos += 1\n            else:\n                oddPos += 1\n        elif ls[i - 1] % 2:\n            oddPos += 1\n        else:\n            evenPos += 1\n        if ls[i - 1] % 2:\n            lastOddPos = i\n    if oddPos < evenPos:\n        print(oddPos)\n        for i in range(1, n + 1):\n            if i % 2:\n                if ls[i - 1] % 2 == 0:\n                    print(i, lastOddPos)\n            elif ls[i - 1] % 2 == 1:\n                print(i, lastOddPos)\n            if i == 1:\n                lastOddPos = 1\n    else:\n        print(evenPos)\n        for i in range(1, n + 1):\n            if i % 2:\n                if ls[i - 1] % 2 == 1:\n                    print(i, lastOddPos)\n            elif ls[i - 1] % 2 == 0:\n                print(i, lastOddPos)\n            if i == 2:\n                lastOddPos = 2\n    t -= 1", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if [ele % 2 for ele in a].count(1) == 0:\n        print(-1)\n        continue\n    x = delta = 0\n    for i in range(n):\n        if a[i] % 2 != i % 2:\n            x += 1\n    if x > n - x:\n        delta += 1\n    ind = -1\n    for i in range(n):\n        if a[i] % 2 and (i + delta) % 2:\n            ind = i\n            break\n    assert ind != -1\n    ops = []\n    for i in range(n):\n        if a[i] % 2 != (i + delta) % 2:\n            ops.append((i + 1, ind + 1))\n    print(len(ops))\n    assert len(ops) == min(x, n - x)\n    for i in ops:\n        a[i[0] - 1] ^= a[i[1] - 1]\n        print(*i)\n    for i in range(n - 1):\n        assert a[i] % 2 != a[i + 1] % 2", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr1 = []\n    arr2 = []\n    t = ans = x = odd = 0\n    for i in range(n):\n        if arr[i] % 2:\n            odd += 1\n    if odd:\n        for i in range(n):\n            if arr[i] % 2 != t:\n                arr1.append(i)\n                ans += 1\n            if arr[i] % 2 and i % 2:\n                x = i\n            if t == 0:\n                t = 1\n            else:\n                t = 0\n        (t, ans1, x1) = (1, 0, 0)\n        for i in range(n):\n            if arr[i] % 2 != t:\n                arr2.append(i)\n                ans1 += 1\n            if arr[i] % 2 and i % 2 == 0:\n                x1 = i\n            if t == 0:\n                t = 1\n            else:\n                t = 0\n        if ans1 > ans:\n            print(ans)\n            for i in range(ans):\n                print(f'{arr1[i] + 1} {x + 1}')\n        else:\n            print(ans1)\n            for i in range(ans1):\n                print(f'{arr2[i] + 1} {x1 + 1}')\n    else:\n        print(-1)\nfor _ in range(int(input())):\n    main()", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = []\n    b = []\n    c = []\n    d = []\n    count = 0\n    for i in range(n):\n        if i % 2 == 0:\n            if arr[i] % 2 == 0:\n                d.append(i)\n                count += 1\n            else:\n                c.append(i)\n        elif arr[i] % 2 == 0:\n            b.append(i)\n            count += 1\n        else:\n            a.append(i)\n    if count == n:\n        print(-1)\n        continue\n    x = len(b)\n    y = len(c)\n    z = x + y\n    m = len(a)\n    n = len(d)\n    o = m + n\n    if z < o:\n        print(z)\n        if m != 0:\n            ans = a[0]\n        else:\n            ans = c[0]\n        for i in b:\n            print(i + 1, ans + 1)\n        for i in c:\n            print(i + 1, 2)\n    else:\n        print(o)\n        if y != 0:\n            ans = c[0]\n        else:\n            ans = a[0]\n        for i in d:\n            print(i + 1, ans + 1)\n        for i in a:\n            print(i + 1, 1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = []\n    b = []\n    c = []\n    d = []\n    count = 0\n    for i in range(n):\n        if i % 2 == 0:\n            if arr[i] % 2 == 0:\n                d.append(i)\n                count += 1\n            else:\n                c.append(i)\n        elif arr[i] % 2 == 0:\n            b.append(i)\n            count += 1\n        else:\n            a.append(i)\n    if count == n:\n        print(-1)\n        continue\n    x = len(b)\n    y = len(c)\n    z = x + y\n    m = len(a)\n    n = len(d)\n    o = m + n\n    if z < o:\n        print(z)\n        if m != 0:\n            ans = a[0]\n        else:\n            ans = c[0]\n        for i in b:\n            print(i + 1, ans + 1)\n        for i in c:\n            print(i + 1, 2)\n    else:\n        print(o)\n        if y != 0:\n            ans = c[0]\n        else:\n            ans = a[0]\n        for i in d:\n            print(i + 1, ans + 1)\n        for i in a:\n            print(i + 1, 1)", "import math\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    e = []\n    o = []\n    cte = 0\n    cto = 0\n    for i in range(n):\n        if i % 2 == 0:\n            e.append(0)\n            o.append(1)\n        else:\n            e.append(1)\n            o.append(0)\n    a = []\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            a.append(0)\n            cte += 1\n        else:\n            a.append(1)\n            cto += 1\n    if cto == 0:\n        print(-1)\n        continue\n    if cto == n:\n        print(n // 2)\n        for i in range(n):\n            if i % 2 == 1:\n                print(i + 1, 1, sep=' ')\n        continue\n    diffe = 0\n    diffo = 0\n    for i in range(n):\n        if a[i] != e[i]:\n            diffe += 1\n        else:\n            diffo += 1\n    if diffe < diffo:\n        sup = e\n        need_ch = diffe\n    else:\n        sup = o\n        need_ch = diffo\n    for i in range(n):\n        if a[i] == 1 and a[i] == sup[i]:\n            seco = i\n            break\n    for i in range(n):\n        if a[i] == 0 and a[i] == sup[i]:\n            sece = i\n            break\n    print(need_ch)\n    for i in range(n):\n        if a[i] == 0 and a[i] != sup[i]:\n            print(i + 1, seco + 1, sep=' ')\n        elif a[i] == 1 and a[i] != sup[i]:\n            print(i + 1, seco + 1, sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mp = -1\n    a = []\n    for i in range(n):\n        a.append(arr[i] & 1)\n        if a[i] == 1:\n            mp = i\n    if mp == -1:\n        print(-1)\n        continue\n    a1 = []\n    for i in range(1, n, 2):\n        if a[i] == 0:\n            a1.append([i + 1, mp + 1])\n    for i in range(0, n, 2):\n        if a[i] == 1:\n            a1.append([i + 1, 2])\n    a2 = []\n    for i in range(0, n, 2):\n        if a[i] == 0:\n            a2.append([i + 1, mp + 1])\n    for i in range(1, n, 2):\n        if a[i] == 1:\n            a2.append([i + 1, 1])\n    if len(a1) > len(a2):\n        a1 = a2\n    print(len(a1))\n    for i in a1:\n        print(*i)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        out = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    out.append([i + 1, one + 1])\n                else:\n                    out.append([i + 1, one + 1])\n        print(m)\n        for i in out:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    num = A\n    for i in range(n):\n        num[i] %= 2\n    if 1 in num:\n        eve = odd = 0\n        for i in range(n):\n            if num[i] == i % 2:\n                eve += 1\n            else:\n                odd += 1\n        temp = []\n        if eve > odd:\n            for i in range(n):\n                temp.append(i % 2)\n        else:\n            for i in range(n):\n                temp.append((i + 1) % 2)\n        one = 0\n        flag = 0\n        for i in range(n):\n            if num[i] == 1 and temp[i] == 1:\n                one = i\n                flag = 1\n                break\n        if flag != 1:\n            for i in range(n):\n                if temp[i] == 1:\n                    temp[i] = 0\n                else:\n                    temp[i] = 1\n            for i in range(n):\n                if nos[i] == 1 and temp[i] == 1:\n                    one = i\n                    break\n        m = 0\n        output = []\n        for i in range(n):\n            if temp[i] != num[i]:\n                m += 1\n                if num[i] == 0:\n                    output.append([i + 1, one + 1])\n                else:\n                    output.append([i + 1, one + 1])\n        print(m)\n        for i in output:\n            print(i[0], i[1], sep=' ')\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    odd_index_odd = []\n    odd_index_even = []\n    even_index_odd = []\n    even_index_even = []\n    count = 0\n    for i in range(n):\n        if i % 2 == 0:\n            if arr[i] % 2 == 0:\n                even_index_even.append(i)\n                count += 1\n            else:\n                even_index_odd.append(i)\n        elif arr[i] % 2 == 0:\n            odd_index_even.append(i)\n            count += 1\n        else:\n            odd_index_odd.append(i)\n    if count == n:\n        print(-1)\n        continue\n    no_of_even_at_odd = len(odd_index_even)\n    no_of_odd_at_even = len(even_index_odd)\n    tot1 = no_of_even_at_odd + no_of_odd_at_even\n    no_of_odd_at_odd = len(odd_index_odd)\n    no_of_even_at_even = len(even_index_even)\n    tot2 = no_of_odd_at_odd + no_of_even_at_even\n    if tot1 < tot2:\n        print(tot1)\n        if no_of_odd_at_odd != 0:\n            ind = odd_index_odd[0]\n        else:\n            ind = even_index_odd[0]\n        for i in odd_index_even:\n            print(i + 1, ind + 1)\n        for i in even_index_odd:\n            print(i + 1, 2)\n    else:\n        print(tot2)\n        if no_of_odd_at_even != 0:\n            ind = even_index_odd[0]\n        else:\n            ind = odd_index_odd[0]\n        for i in even_index_even:\n            print(i + 1, ind + 1)\n        for i in odd_index_odd:\n            print(i + 1, 1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    if all([i & 1 == 0 for i in l]):\n        print('-1')\n        continue\n    l1 = []\n    l2 = []\n    l3 = []\n    odd_index = 0\n    for i in range(n):\n        if i & 1 == 0:\n            if l[i] & 1 == 0:\n                l2.append(i)\n            else:\n                l1.append(i)\n        elif l[i] & 1 == 0:\n            l1.append(i)\n        else:\n            l2.append(i)\n    op_req = min(len(l1), len(l2))\n    if len(l1) > len(l2):\n        l3 = l2\n    else:\n        l3 = l1\n    for i in range(len(l)):\n        if l[i] & 1 == 1 and i not in l3:\n            odd_index = i\n            break\n        else:\n            continue\n    print(op_req)\n    for i in l3:\n        print(i + 1, odd_index + 1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    if all([i & 1 == 0 for i in l]):\n        print('-1')\n        continue\n    l1 = []\n    l2 = []\n    l3 = []\n    odd_index = 0\n    for i in range(n):\n        if i & 1 == 0:\n            if l[i] & 1 == 0:\n                l2.append(i)\n            else:\n                l1.append(i)\n        elif l[i] & 1 == 0:\n            l1.append(i)\n        else:\n            l2.append(i)\n    op_req = min(len(l1), len(l2))\n    if len(l1) > len(l2):\n        l3 = l2\n    else:\n        l3 = l1\n    for i in range(len(l)):\n        if l[i] & 1 == 1 and i not in l3:\n            odd_index = i\n            break\n        else:\n            continue\n    print(op_req)\n    for i in l3:\n        print(i + 1, odd_index + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    a = []\n    ce = 0\n    co = 0\n    pe = 0\n    po = 0\n    for i in range(n):\n        if lst[i] % 2 == 0:\n            a.append(0)\n            ce = ce + 1\n        else:\n            a.append(1)\n            co = co + 1\n    if co == 0:\n        print(-1)\n    elif co == n:\n        print(n // 2)\n        j = 1\n        while j < n:\n            print(j + 1, 1)\n            j = j + 2\n    else:\n        ans = []\n        ans1 = []\n        po1 = 0\n        po2 = 0\n        pe1 = 0\n        pe2 = 0\n        i = 0\n        flag = 1\n        while flag == 1 and i < n:\n            if i % 2 == 0 and a[i] == 1:\n                po1 = i\n                flag = 0\n            i = i + 1\n        i = 0\n        flag = 1\n        while flag == 1 and i < n:\n            if i % 2 == 1 and a[i] == 0:\n                pe1 = i\n                flag = 0\n            i = i + 1\n        i = 0\n        flag = 1\n        while flag == 1 and i < n:\n            if i % 2 == 0 and a[i] == 0:\n                pe2 = i\n                flag = 0\n            i = i + 1\n        i = 0\n        flag = 1\n        while flag == 1 and i < n:\n            if i % 2 == 1 and a[i] == 1:\n                po2 = i\n                flag = 0\n            i = i + 1\n        for i in range(len(lst)):\n            if i % 2 == 0 and a[i] == 0:\n                ans.append(i + 1)\n                ans.append(po1 + 1)\n            if i % 2 != 0 and a[i] == 1:\n                ans.append(i + 1)\n                ans.append(po1 + 1)\n        for i in range(len(lst)):\n            if i % 2 == 0 and a[i] == 1:\n                ans1.append(i + 1)\n                ans1.append(po2 + 1)\n            if i % 2 != 0 and a[i] == 0:\n                ans1.append(i + 1)\n                ans1.append(po2 + 1)\n        if min(len(ans1), len(ans)) == len(ans):\n            print(len(ans) // 2)\n            j = 0\n            while j < len(ans):\n                print(ans[j], ans[j + 1])\n                j = j + 2\n        else:\n            print(len(ans1) // 2)\n            j = 0\n            while j < len(ans1):\n                print(ans1[j], ans1[j + 1])\n                j = j + 2", "def solver(n, arr):\n\n    def utility(arr):\n        indices = [[], []]\n        for i in range(n):\n            if parity[i] == arr[i]:\n                indices[parity[i]].append(i)\n        altered = []\n        for i in range(n):\n            if parity[i] != arr[i]:\n                search_val = 1\n                found_index = -1\n                for j in indices[search_val]:\n                    if j != i:\n                        found_index = j\n                        break\n                if found_index == -1:\n                    return None\n                altered.append((i, found_index))\n                parity[i] = search_val\n        return altered\n    parity = [i % 2 for i in arr]\n    s1 = [i % 2 for i in range(n)]\n    s2 = [(i + 1) % 2 for i in range(n)]\n    score1 = score2 = 0\n    for i in range(n):\n        if parity[i] == s1[i]:\n            score1 += 1\n        else:\n            score2 += 1\n    if score1 > score2:\n        c1 = utility(s1)\n        c2 = None\n    elif score2 > score1:\n        c2 = utility(s2)\n        c1 = None\n    else:\n        c1 = utility(s1)\n        parity = [i % 2 for i in arr]\n        c2 = utility(s2)\n    if c1 is None and c2 is None:\n        print('-1')\n    else:\n        if c1 is None:\n            changes = c2\n        elif c2 is None:\n            changes = c1\n        elif len(c1) <= len(c2):\n            changes = c1\n        else:\n            changes = c2\n        print(len(changes))\n        for tup in changes:\n            print(f'{tup[0] + 1} {tup[1] + 1}')\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    solver(n, arr)", "def solver(n, arr):\n\n    def utility(arr):\n        indices = [[], []]\n        for i in range(n):\n            if parity[i] == arr[i]:\n                indices[parity[i]].append(i)\n        altered = []\n        for i in range(n):\n            if parity[i] != arr[i]:\n                search_val = 1\n                found_index = -1\n                for j in indices[search_val]:\n                    if j != i:\n                        found_index = j\n                        break\n                if found_index == -1:\n                    return None\n                altered.append((i, found_index))\n                parity[i] = search_val\n        return altered\n    parity = [i % 2 for i in arr]\n    s1 = [i % 2 for i in range(n)]\n    s2 = [(i + 1) % 2 for i in range(n)]\n    c1 = utility(s1)\n    parity = [i % 2 for i in arr]\n    c2 = utility(s2)\n    if c1 is None and c2 is None:\n        print('-1')\n    else:\n        if c1 is None:\n            changes = c2\n        elif c2 is None:\n            changes = c1\n        elif len(c1) <= len(c2):\n            changes = c1\n        else:\n            changes = c2\n        print(len(changes))\n        for tup in changes:\n            print(f'{tup[0] + 1} {tup[1] + 1}')\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    solver(n, arr)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    o = 0\n    e = 0\n    for i in range(n):\n        if a[i] & 1:\n            c += 1\n            if i & 1:\n                o += 1\n            else:\n                e += 1\n    if c == 0:\n        print(-1)\n    elif o >= e:\n        ans = []\n        x = -1\n        for i in range(n):\n            if a[i] & 1 and i & 1:\n                x = i\n                break\n        for i in range(n):\n            if i & 1 and a[i] % 2 == 0 or (i % 2 == 0 and a[i] & 1):\n                ans.append((i + 1, x + 1))\n        print(len(ans))\n        for i in ans:\n            print(*i)\n    else:\n        ans = []\n        x = -1\n        for i in range(n):\n            if a[i] & 1 and i % 2 == 0:\n                x = i\n                break\n        for i in range(n):\n            if i & 1 and a[i] & 1 or (i % 2 == 0 and a[i] % 2 == 0):\n                ans.append((i + 1, x + 1))\n        print(len(ans))\n        for i in ans:\n            print(*i)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cnt = 0\n    g = -1\n    for x in range(len(l)):\n        if x % 2 == 0 and l[x] % 2 == 0:\n            cnt = cnt + 1\n        elif x % 2 == 1 and l[x] % 2 == 1:\n            cnt = cnt + 1\n        if l[x] % 2 == 1:\n            g = x\n    if g == -1:\n        print('-1')\n    elif cnt <= int(len(l) / 2):\n        print(cnt)\n        if l[0] % 2 == 0:\n            l[0] = l[0] ^ l[g]\n            print('1', g + 1)\n            g = 0\n        else:\n            g = 0\n        for x in range(len(l)):\n            if x % 2 == 0 and l[x] % 2 == 0:\n                print(x + 1, g + 1)\n            elif x % 2 == 1 and l[x] % 2 == 1:\n                print(x + 1, g + 1)\n    else:\n        print(len(l) - cnt)\n        if l[1] % 2 == 0:\n            l[1] = l[1] ^ l[g]\n            print('2', g + 1)\n            g = 1\n        else:\n            g = 1\n        for x in range(len(l)):\n            if x % 2 == 1 and l[x] % 2 == 0:\n                print(x + 1, g + 1)\n            elif x % 2 == 0 and l[x] % 2 == 1:\n                print(x + 1, g + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a = a[:n]\n    even_a = 0\n    even_b = 0\n    indices = []\n    op = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            if i % 2 == 0:\n                even_a += 1\n            else:\n                even_b += 1\n    if even_a > even_b:\n        for i in range(n):\n            if i % 2 == 0:\n                if a[i] % 2 != 0:\n                    poss = False\n                    for j in range(n):\n                        if a[j] % 2 != 0 and i != j:\n                            a[i] = a[i] ^ a[j]\n                            indices.append([i + 1, j + 1])\n                            poss = True\n                            op += 1\n                            break\n                    if not poss:\n                        op = -1\n                        break\n            elif a[i] % 2 == 0:\n                poss = False\n                for j in range(n):\n                    if a[j] % 2 != 0 and i != j:\n                        a[i] = a[i] ^ a[j]\n                        indices.append([i + 1, j + 1])\n                        poss = True\n                        op += 1\n                        break\n                if not poss:\n                    op = -1\n                    break\n    else:\n        for i in range(n):\n            if i % 2 != 0:\n                if a[i] % 2 != 0:\n                    poss = False\n                    for j in range(n):\n                        if a[j] % 2 != 0 and i != j:\n                            a[i] = a[i] ^ a[j]\n                            indices.append([i + 1, j + 1])\n                            poss = True\n                            op += 1\n                            break\n                    if not poss:\n                        op = -1\n                        break\n            elif a[i] % 2 == 0:\n                poss = False\n                for j in range(n):\n                    if a[j] % 2 != 0 and i != j:\n                        a[i] = a[i] ^ a[j]\n                        indices.append([i + 1, j + 1])\n                        poss = True\n                        op += 1\n                        break\n                if not poss:\n                    op = -1\n                    break\n    print(op)\n    for i in indices:\n        print(i[0], i[1])", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [x % 2 for x in arr]\n    if len(set(arr)) == 1 and arr[0] == 0:\n        print(-1)\n        continue\n    ans = []\n    s1 = [0 for i in range(n)]\n    s2 = [1 for i in range(n)]\n    (cnt1, cnt2) = (0, 0)\n    for i in range(n):\n        if i & 1:\n            s1[i] = 1\n            s2[i] = 0\n        if s1[i] != arr[i]:\n            cnt1 += 1\n        if s2[i] != arr[i]:\n            cnt2 += 1\n    mask = []\n    if cnt1 <= cnt2:\n        mask = s1[:]\n    else:\n        mask = s2[:]\n    ind = arr.index(1)\n    ind2 = mask.index(1)\n    for i in range(n):\n        if arr[i] == 0 and mask[i] == 1:\n            ans.append((i + 1, ind + 1))\n    for i in range(n):\n        if arr[i] == 1 and mask[i] == 0:\n            ans.append((i + 1, ind2 + 1))\n    print(min(cnt1, cnt2))\n    for i in range(len(ans)):\n        print(*ans[i])", "import copy\n\ndef findEven(arr):\n    for i in arr:\n        if i % 2 == 1:\n            return False\n    return True\n\ndef findOdd(arr, start):\n    for j in range(start, len(arr), 2):\n        if arr[j] % 2 == 1:\n            return j\n\ndef change(arr, startodd, startEven, odd):\n    for i in range(startodd, len(arr), 2):\n        if arr[i] % 2 == 1:\n            print(i + 1, odd)\n    for i in range(startEven, len(arr), 2):\n        if arr[i] % 2 == 0:\n            print(i + 1, odd)\nt = int(input())\ntest = []\nfor i in range(t):\n    n = int(input())\n    v = [int(j) for j in input().split()]\n    test.append([n, v])\nfor i in test:\n    if findEven(i[1]):\n        print(-1)\n        continue\n    feven = 0\n    fodd = 0\n    seven = 0\n    sodd = 0\n    for j in range(0, i[0], 2):\n        if i[1][j] % 2 == 1:\n            fodd += 1\n        else:\n            feven += 1\n    for j in range(1, i[0], 2):\n        if i[1][j] % 2 == 1:\n            sodd += 1\n        else:\n            seven += 1\n    if feven + sodd > fodd + seven:\n        ind = findOdd(i[1], 1)\n        print(fodd + seven)\n        change(i[1], 0, 1, ind + 1)\n    else:\n        ind = findOdd(i[1], 0)\n        print(feven + sodd)\n        change(i[1], 1, 0, ind + 1)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    flag = False\n    for i in range(n):\n        if A[i] % 2 == 1:\n            A[i] = 1\n        else:\n            A[i] = 0\n    first = []\n    second = []\n    no_alt_id1 = []\n    no_alt_id2 = []\n    for i in range(n):\n        if i % 2 == 0 and A[i] == 0:\n            pass\n        elif i % 2 == 1 and A[i] == 1:\n            no_alt_id1.append(i)\n        else:\n            first.append(i)\n    for i in range(n):\n        if i % 2 == 1 and A[i] == 0:\n            pass\n        elif i % 2 == 0 and A[i] == 1:\n            no_alt_id2.append(i)\n        else:\n            second.append(i)\n    ans = []\n    if len(first) < len(second):\n        for i in range(len(first)):\n            if len(no_alt_id1) == 0:\n                flag = True\n                print(-1)\n                break\n            else:\n                ans.append(first[i] + 1)\n                ans.append(no_alt_id1[0] + 1)\n    else:\n        for i in range(len(second)):\n            if len(no_alt_id2) == 0:\n                flag = True\n                print(-1)\n                break\n            else:\n                ans.append(second[i] + 1)\n                ans.append(no_alt_id2[0] + 1)\n    if flag != True:\n        print(len(ans) // 2)\n        for i in range(0, len(ans), 2):\n            print(ans[i], end=' ')\n            print(ans[i + 1])", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    flag = False\n    fo = -1\n    so = -1\n    fz = -1\n    sz = -1\n    for i in range(n):\n        if A[i] % 2 == 1:\n            A[i] = 1\n        else:\n            A[i] = 0\n    first = []\n    second = []\n    no_alt_id1 = []\n    no_alt_id2 = []\n    for i in range(n):\n        if i % 2 == 0 and A[i] == 0:\n            pass\n        elif i % 2 == 1 and A[i] == 1:\n            no_alt_id1.append(i)\n        else:\n            first.append(i)\n    for i in range(n):\n        if i % 2 == 1 and A[i] == 0:\n            pass\n        elif i % 2 == 0 and A[i] == 1:\n            no_alt_id2.append(i)\n        else:\n            second.append(i)\n    ans = []\n    if len(first) < len(second):\n        for i in range(len(first)):\n            if len(no_alt_id1) == 0:\n                flag = True\n                print(-1)\n                break\n            else:\n                ans.append(first[i] + 1)\n                ans.append(no_alt_id1[0] + 1)\n    else:\n        for i in range(len(second)):\n            if len(no_alt_id2) == 0:\n                flag = True\n                print(-1)\n                break\n            else:\n                ans.append(second[i] + 1)\n                ans.append(no_alt_id2[0] + 1)\n    if flag != True:\n        print(len(ans) // 2)\n        for i in range(0, len(ans), 2):\n            print(ans[i], end=' ')\n            print(ans[i + 1])"]