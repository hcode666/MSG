["import sys\ninput = sys.stdin.readline\nfrom math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * (n + 1)\n    gcds = {}\n    sm = 0\n    for x in a:\n        new_gcds = {x: 1}\n        for g in gcds.keys():\n            G = gcd(x, g)\n            if G not in new_gcds:\n                new_gcds[G] = gcds[g] + 1\n            else:\n                new_gcds[G] = max(new_gcds[G], gcds[g] + 1)\n        gcds = new_gcds\n        for g in gcds.keys():\n            ans[gcds[g]] = max(ans[gcds[g]], g)\n    print(*ans[1:])", "import sys\ninput = sys.stdin.readline\nfrom math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * (n + 1)\n    gcds = {}\n    sm = 0\n    for x in a:\n        new_gcds = {x: 1}\n        for g in gcds.keys():\n            G = gcd(x, g)\n            if G not in new_gcds:\n                new_gcds[G] = gcds[g] + 1\n            else:\n                new_gcds[G] = max(new_gcds[G], gcds[g] + 1)\n        gcds = new_gcds\n        for g in gcds.keys():\n            ans[gcds[g]] = max(ans[gcds[g]], g)\n    print(*ans[1:])", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * (n + 1)\n    gcds = {}\n    sm = 0\n    for x in a:\n        new_gcds = {x: 1}\n        for g in gcds.keys():\n            G = gcd(x, g)\n            if G not in new_gcds:\n                new_gcds[G] = gcds[g] + 1\n            else:\n                new_gcds[G] = max(new_gcds[G], gcds[g] + 1)\n        gcds = new_gcds\n        for g in gcds.keys():\n            ans[gcds[g]] = max(ans[gcds[g]], g)\n    for i in reversed(range(1, n)):\n        ans[i] = max(ans[i], ans[i + 1])\n    print(*ans[1:])", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * (n + 1)\n    gcds = {}\n    sm = 0\n    for x in a:\n        new_gcds = {x: 1}\n        for g in gcds.keys():\n            G = gcd(x, g)\n            if G not in new_gcds:\n                new_gcds[G] = gcds[g] + 1\n            else:\n                new_gcds[G] = max(new_gcds[G], gcds[g] + 1)\n        gcds = new_gcds\n        for g in gcds.keys():\n            ans[gcds[g]] = max(ans[gcds[g]], g)\n    for i in reversed(range(1, n)):\n        ans[i] = max(ans[i], ans[i + 1])\n    print(*ans[1:])", "import sys\ninput = sys.stdin.readline\nfrom math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * (n + 1)\n    gcds = {}\n    sm = 0\n    for x in a:\n        new_gcds = {x: 1}\n        for g in gcds.keys():\n            G = gcd(x, g)\n            if G not in new_gcds:\n                new_gcds[G] = gcds[g] + 1\n            else:\n                new_gcds[G] = max(new_gcds[G], gcds[g] + 1)\n        gcds = new_gcds\n        for g in gcds.keys():\n            ans[gcds[g]] = max(ans[gcds[g]], g)\n    for i in reversed(range(1, n)):\n        ans[i] = max(ans[i], ans[i + 1])\n    print(*ans[1:])", "from typing import List, Tuple, Dict\nimport math\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcds = [{} for _ in range(n)]\n    for i in range(n):\n        gcds[i][a[i]] = 1\n        if i:\n            for j in gcds[i - 1]:\n                new_gcd = math.gcd(j, a[i])\n                if new_gcd in gcds[i]:\n                    gcds[i][new_gcd] = max(gcds[i][new_gcd], gcds[i - 1][j] + 1)\n                else:\n                    gcds[i][new_gcd] = gcds[i - 1][j] + 1\n    ans = [0 for _ in range(n)]\n    for i in range(n):\n        for j in gcds[i]:\n            ans[gcds[i][j] - 1] = max(ans[gcds[i][j] - 1], j)\n    print(*ans)\nt = int(input())\nfor test in range(1, t + 1):\n    solve()", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    mp = {}\n    for i in range(n):\n        ex = arr[i]\n        gmp = {}\n        gmp[ex] = i\n        for (val, left) in mp.items():\n            nval = math.gcd(val, ex)\n            if nval not in gmp:\n                gmp[nval] = left\n            else:\n                gmp[nval] = min(gmp[nval], left)\n        for (val, left) in gmp.items():\n            ans[i - left] = max(ans[i - left], val)\n        mp = gmp\n    for i in range(n - 2, -1, -1):\n        ans[i] = max(ans[i], ans[i + 1])\n    print(*ans)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    mp = {}\n    for i in range(n):\n        ex = arr[i]\n        gmp = {}\n        gmp[ex] = i\n        for (val, left) in mp.items():\n            nval = math.gcd(val, ex)\n            if nval not in gmp:\n                gmp[nval] = left\n            else:\n                gmp[nval] = min(gmp[nval], left)\n        for (val, left) in gmp.items():\n            ans[i - left] = max(ans[i - left], val)\n        mp = gmp\n    for i in range(n - 2, -1, -1):\n        ans[i] = max(ans[i], ans[i + 1])\n    print(*ans)", "import sys\ninput = sys.stdin.readline\nfrom math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * (n + 1)\n    gcds = {}\n    sm = 0\n    for x in a:\n        new_gcds = {x: 1}\n        for g in gcds.keys():\n            G = gcd(x, g)\n            if G not in new_gcds:\n                new_gcds[G] = gcds[g] + 1\n            else:\n                new_gcds[G] = max(new_gcds[G], gcds[g] + 1)\n        gcds = new_gcds\n        for g in gcds.keys():\n            ans[gcds[g]] = max(ans[gcds[g]], g)\n    for i in reversed(range(1, n)):\n        ans[i] = max(ans[i], ans[i + 1])\n    print(*ans[1:])"]