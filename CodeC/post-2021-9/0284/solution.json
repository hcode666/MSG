["t = int(input())\nfor _ in range(t):\n    (start, cnt, ones, zeros) = (0, 0, 0, 0)\n    n = int(input())\n    arr = list(map(str, input().split()))\n    for i in arr:\n        if i == '0':\n            zeros += 1\n        else:\n            ones += 1\n    print(min(ones, zeros) + max(0, ones - zeros) // 3)", "import math\n\ndef Solve(a, n):\n    stack = [a[0]]\n    score = 0\n    for i in a[1:]:\n        if len(stack) != 0 and stack[-1] != i:\n            score += 1\n            stack.pop()\n        else:\n            stack.append(i)\n    temp = 0\n    if stack.count(1) == len(stack):\n        score = score + len(stack) // 3\n    return score + temp\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(Solve(a, n))", "import math\n\ndef Solve(a, n):\n    stack = [a[0]]\n    score = 0\n    for i in a[1:]:\n        if len(stack) != 0 and stack[-1] != i:\n            score += 1\n            stack.pop()\n        else:\n            stack.append(i)\n    temp = 0\n    if stack.count(1) == len(stack):\n        score = score + len(stack) // 3\n    return score + temp\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(Solve(a, n))", "t = int(input())\n\ndef fun(st):\n    st = st.replace(' ', '')\n    count = 0\n    while len(st) > 3:\n        flag = 0\n        if '01' in st:\n            st = st.replace('01', '', 1)\n            count += 1\n            flag += 1\n        if '10' in st:\n            st = st.replace('10', '', 1)\n            count += 1\n            flag += 1\n        if flag == 0:\n            break\n    if '0' in st and '1' in st:\n        count += 1\n    elif '1' in st:\n        count += len(st) // 3\n    print(count)\nfor _ in range(t):\n    n = int(input())\n    st = input()\n    st = st.replace(' ', '')\n    fun(st)", "for _ in range(int(input())):\n    K = int(input())\n    A = list(map(int, input().split()))\n    c0 = 0\n    c1 = 0\n    for i in range(K):\n        if A[i] == 0:\n            c0 += 1\n        else:\n            c1 += 1\n    if c0 >= c1:\n        print(c1)\n    else:\n        ans = c0\n        x = c1 - c0\n        print(ans + x // 3)", "t = int(input())\nfrom collections import Counter\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = Counter(arr)\n    tmp = min(cnt[0], cnt[1])\n    if cnt[1] > cnt[0]:\n        res = cnt[1] - cnt[0]\n        print(tmp + res // 3)\n    else:\n        print(tmp)", "for _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    (C0, C1) = (0, 0)\n    for i in range(N):\n        if A[i] == 0:\n            C0 += 1\n        else:\n            C1 += 1\n    if C1 == 0:\n        print(0)\n    elif C0 == 0:\n        print(int(C1 / 3))\n    elif C0 >= C1:\n        print(C1)\n    else:\n        print(C0 + int((C1 - C0) / 3))", "for i in range(int(input())):\n    aim = int(input())\n    (wife, Life, knife) = (0, 0, 0)\n    life = list(map(int, input().split()))\n    for death in life:\n        wife += death == 0\n        Life += death == 1\n        temp = min(wife, Life)\n        wife -= temp\n        Life -= temp\n        knife += temp\n    print(knife + Life // 3)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = [int(x) for x in input().split()]\n    if lst.count(1) == 0:\n        print(0)\n    else:\n        one = lst.count(1)\n        zero = lst.count(0)\n        ans = min(one, zero) + max(0, one - zero) / 3\n        print(int(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = [int(x) for x in input().split()]\n    if lst.count(1) == 0:\n        print(0)\n    else:\n        one = lst.count(1)\n        zero = lst.count(0)\n        ans = min(one, zero) + max(0, one - zero) / 3\n        print(int(ans))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = min(l.count(0), l.count(1))\n    x = max(l.count(1) - l.count(0), 0)\n    ans += x // 3\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    s = []\n    c = 0\n    for i in l:\n        if s == []:\n            s.append(i)\n        elif i != s[-1]:\n            c += 1\n            s.pop()\n        else:\n            s.append(i)\n    while len(s) > 1:\n        top = s[-1]\n        s.pop(-1)\n        if top == s[-1]:\n            s.pop()\n            s.append(0)\n        else:\n            c += 1\n            s.pop()\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    (x, y, z) = (0, 0, 0)\n    m = list(map(int, input().split()))\n    for i in m:\n        x += i == 0\n        y += i == 1\n        temp = min(x, y)\n        x -= temp\n        y -= temp\n        z += temp\n    print(z + y // 3)", "goals = int(input())\nfor i in range(goals):\n    aim = int(input())\n    (wife, Life, knife) = (0, 0, 0)\n    life = list(map(int, input().split()))\n    for death in life:\n        wife += death == 0\n        Life += death == 1\n        temp = min(wife, Life)\n        wife -= temp\n        Life -= temp\n        knife += temp\n    print(knife + Life // 3)", "for i in range(int(input())):\n    aim = int(input())\n    (wife, Life, knife) = (0, 0, 0)\n    life = list(map(int, input().split()))\n    for death in life:\n        wife += death == 0\n        Life += death == 1\n        temp = min(wife, Life)\n        wife -= temp\n        Life -= temp\n        knife += temp\n    print(knife + Life // 3)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l1 = arr.count(1)\n    l2 = arr.count(0)\n    c = min(l1, l2)\n    res = c + max(0, (l1 - l2) // 3)\n    print(res)\n    t -= 1", "import math\n\ndef Solve(a, n):\n    stack = [a[0]]\n    score = 0\n    for i in a[1:]:\n        if len(stack) != 0 and stack[-1] != i:\n            score += 1\n            stack.pop()\n        else:\n            stack.append(i)\n    temp = 0\n    if stack.count(1) == len(stack):\n        score = score + len(stack) // 3\n    return score + temp\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(Solve(a, n))", "goals = int(input())\nfor i in range(goals):\n    aim = int(input())\n    (wife, Life, knife) = (0, 0, 0)\n    life = list(map(int, input().split()))\n    for death in life:\n        wife += death == 0\n        Life += death == 1\n        temp = min(wife, Life)\n        wife -= temp\n        Life -= temp\n        knife += temp\n    print(knife + Life // 3)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    (cnto, cntz) = (0, 0)\n    for i in li:\n        if i == 1:\n            cnto += 1\n        else:\n            cntz += 1\n    ans = 0\n    common = min(cnto, cntz)\n    ans += common\n    cnto = cnto - common\n    cntz = cntz - common\n    ans += cnto // 3\n    print(ans)", "goals = int(input())\nfor i in range(goals):\n    aim = int(input())\n    (wife, Life, knife) = (0, 0, 0)\n    life = list(map(int, input().split()))\n    for death in life:\n        wife += death == 0\n        Life += death == 1\n        temp = min(wife, Life)\n        wife -= temp\n        Life -= temp\n        knife += temp\n    print(knife + Life // 3)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    zero = l.count(0)\n    one = n - zero\n    b = 0\n    if one > zero:\n        b = one - zero\n    print(min(one, zero) + b // 3)", "from math import sqrt, ceil, floor, gcd, log2\nimport sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import combinations, groupby\nfrom time import time\nfrom heapq import heappop, heappush, heapify\nt = int(input())\nfor _ in range(t):\n    (start, cnt, ones, zeros) = (0, 0, 0, 0)\n    n = int(input())\n    arr = list(map(str, input().split()))\n    for i in arr:\n        if i == '0':\n            zeros += 1\n        else:\n            ones += 1\n    print(min(ones, zeros) + max(0, ones - zeros) // 3)", "goals = int(input())\nfor i in range(goals):\n    aim = int(input())\n    (wife, Life, knife) = (0, 0, 0)\n    life = list(map(int, input().split()))\n    for death in life:\n        wife += death == 0\n        Life += death == 1\n        temp = min(wife, Life)\n        wife -= temp\n        Life -= temp\n        knife += temp\n    print(knife + Life // 3)", "goals = int(input())\nfor i in range(goals):\n    aim = int(input())\n    (wife, Life, knife) = (0, 0, 0)\n    life = list(map(int, input().split()))\n    for death in life:\n        wife += death == 0\n        Life += death == 1\n        temp = min(wife, Life)\n        wife -= temp\n        Life -= temp\n        knife += temp\n    print(knife + Life // 3)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = sum(l)\n    val = min(x, n - x)\n    val += (x - val) // 3\n    print(val)", "goals = int(input())\nfor i in range(goals):\n    aim = int(input())\n    (wife, Life, knife) = (0, 0, 0)\n    life = list(map(int, input().split()))\n    for death in life:\n        wife += death == 0\n        Life += death == 1\n        temp = min(wife, Life)\n        wife -= temp\n        Life -= temp\n        knife += temp\n    print(knife + Life // 3)", "for i in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ones = 0\n    zeros = 0\n    count = 0\n    for i in arr:\n        if i == 0:\n            zeros += 1\n        else:\n            ones += 1\n    if ones >= zeros:\n        count = zeros\n        ones = ones - zeros\n        zeros = 0\n    else:\n        count = ones\n        ones = 0\n    count += ones // 3\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ones = 0\n    zeros = 0\n    count = 0\n    for i in arr:\n        if i == 0:\n            zeros += 1\n        else:\n            ones += 1\n    if ones >= zeros:\n        count = zeros\n        ones = ones - zeros\n        zeros = 0\n    else:\n        count = ones\n        ones = 0\n    count += ones // 3\n    print(count)", "for z in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split())).count(1)\n    val = min(a, n - a)\n    val += (a - val) // 3\n    print(val)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    zc = 0\n    oc = 0\n    pc = 0\n    for i in a:\n        zc += i == 0\n        oc += i == 1\n    te = min(zc, oc)\n    zc -= te\n    oc -= te\n    pc += te\n    print(pc + oc // 3)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    one = A.count(1)\n    zero = n - one\n    if zero >= one:\n        print(one)\n    else:\n        print(zero + (one - zero) // 3)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    stack = []\n    c = 0\n    for i in range(n):\n        if stack == []:\n            stack.append(a[i])\n        elif a[i] != stack[-1]:\n            c += 1\n            stack.pop(-1)\n        else:\n            stack.append(a[i])\n    while len(stack) > 1:\n        t = stack[-1]\n        stack.pop(-1)\n        if t == stack[-1]:\n            stack.pop(-1)\n            stack.append(0)\n        else:\n            c += 1\n            stack.pop(-1)\n    print(c)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    ones = L.count(1)\n    zeros = L.count(0)\n    if ones >= zeros:\n        print(zeros + (ones - zeros) // 3)\n    else:\n        print(ones)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    ans = 0\n    zeros_available = 0\n    ones_available = 0\n    for val in L:\n        if val == 0:\n            if ones_available:\n                ans += 1\n                ones_available -= 1\n            else:\n                zeros_available += 1\n        elif zeros_available:\n            ans += 1\n            zeros_available -= 1\n        else:\n            ones_available += 1\n    ans += ones_available // 3\n    print(ans)", "def score(n, arr):\n    stack = []\n    i = 0\n    res = 0\n    while i < len(arr):\n        if len(stack) == 0:\n            if arr[i] == 0:\n                stack.append(0)\n            else:\n                stack.append(1)\n        elif arr[i] == 0:\n            if stack[-1] == 1:\n                stack.pop()\n                res += 1\n            else:\n                stack.append(0)\n        elif stack[-1] == 0:\n            stack.pop()\n            res += 1\n        else:\n            stack.append(1)\n        i += 1\n    if len(stack) > 0 and stack[-1] == 0:\n        return res\n    if len(stack) > 0:\n        res += len(stack) // 3\n    return res\ncase = int(input())\nfor i in range(case):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    ans = score(n, arr)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l1 = arr.count(1)\n    l2 = arr.count(0)\n    c = min(l1, l2)\n    res = c + max(0, (l1 - l2) // 3)\n    print(res)\n    t -= 1", "T = int(input())\nfor x in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    o = a.count(1)\n    z = a.count(0)\n    if z >= o:\n        print(o)\n    else:\n        print(z + (o - z) // 3)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    one = a.count(1)\n    zero = a.count(0)\n    if zero >= one:\n        print(one)\n    else:\n        print(zero + (one - zero) // 3)", "for _ in range(int(input())):\n    l = int(input())\n    s = input().split(' ')\n    z = 0\n    o = 0\n    for k in range(l):\n        if s[k] == '1':\n            o += 1\n        else:\n            z += 1\n    if z >= o:\n        print(o)\n    else:\n        print(z + (o - z) // 3)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    one = a.count(1)\n    zero = a.count(0)\n    ans = min(one, zero)\n    one -= ans\n    zero -= ans\n    one = max(one, one - zero)\n    print(ans + one // 3)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    l = list(input())\n    ones = l.count('1')\n    zeroes = l.count('0')\n    if ones <= zeroes:\n        print(ones)\n    else:\n        print(zeroes + (ones - zeroes) // 3)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    s = []\n    count = 0\n    for i in l:\n        if len(s) == 0 or i == s[0]:\n            s.append(i)\n        else:\n            s.pop(-1)\n            count += 1\n    if len(s) and s[0] == 1:\n        count += len(s) // 3\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    (z, o) = (0, 0)\n    for i in range(n):\n        if x[i] == 0:\n            z += 1\n        elif x[i] == 1:\n            o += 1\n    if o <= z:\n        print(o)\n    elif o > z:\n        print(z + (o - z) // 3)", "for t in range(int(input())):\n    n = int(input())\n    lst = [int(i) for i in input().split()]\n    res = 0\n    ones = lst.count(1)\n    zeros = lst.count(0)\n    res += min(zeros, ones)\n    ones -= min(ones, zeros)\n    res += ones // 3\n    print(res)", "for t in range(int(input())):\n    n = int(input())\n    lst = [int(i) for i in input().split()]\n    res = 0\n    ones = lst.count(1)\n    zeros = lst.count(0)\n    res += min(zeros, ones)\n    ones -= min(ones, zeros)\n    res += ones // 3\n    print(res)", "for t in range(int(input())):\n    n = int(input())\n    lst = [int(i) for i in input().split()]\n    res = 0\n    ones = lst.count(1)\n    zeros = lst.count(0)\n    res += min(zeros, ones)\n    ones -= min(ones, zeros)\n    res += ones // 3\n    print(res)", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    s = input().split(' ')\n    z = 0\n    o = 0\n    for k in range(l):\n        if s[k] == '1':\n            o += 1\n        else:\n            z += 1\n    if z >= o:\n        print(o)\n    else:\n        print(z + (o - z) // 3)", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    s = input().split(' ')\n    z = 0\n    o = 0\n    for k in range(l):\n        if s[k] == '1':\n            o += 1\n        else:\n            z += 1\n    if z >= o:\n        print(o)\n    else:\n        print(z + (o - z) // 3)", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    s = input().split(' ')\n    z = 0\n    o = 0\n    for k in range(l):\n        if s[k] == '1':\n            o += 1\n        else:\n            z += 1\n    if z >= o:\n        print(o)\n    else:\n        print(z + (o - z) // 3)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    a = input()\n    z = a.count('0')\n    o = a.count('1')\n    if z >= o:\n        print(o)\n    else:\n        print(z + (o - z) // 3)", "def subarray_removal(arr):\n    num_zeroes = 0\n    num_ones = 0\n    for i in arr:\n        if i == 1:\n            num_ones += 1\n        else:\n            num_zeroes += 1\n    m = min(num_zeroes, num_ones)\n    if num_zeroes > num_ones:\n        return num_ones\n    else:\n        return num_zeroes + (num_ones - num_zeroes) // 3\nt = int(input())\nfor _ in range(t):\n    unused_n = input()\n    arr = [int(x) for x in input().split()]\n    print(subarray_removal(arr))", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    ones_count = 0\n    zeroes_count = 0\n    for j in arr:\n        if j == 1:\n            ones_count += 1\n        else:\n            zeroes_count += 1\n    minimum = min(ones_count, zeroes_count)\n    ans = minimum\n    ones_count -= minimum\n    if ones_count > 0:\n        ans += ones_count // 3\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = input().split().count('1')\n    c = n - a\n    if a > c:\n        print(c + (a - c) // 3)\n    else:\n        print(a)", "import sys\n\ndef main():\n    next(stdin)\n    while (N := next(stdin, None)):\n        A = next(stdin)\n        zer = A.count('0')\n        one = A.count('1')\n        print(min(zer, one) + (one - min(zer, one)) // 3)\nstdin = sys.stdin\nmain()", "import sys\n\ndef main():\n    next(stdin)\n    for N in stdin:\n        A = next(stdin)\n        zer = A.count('0')\n        one = A.count('1')\n        print(min(zer, one) + (one - min(zer, one)) // 3)\nstdin = sys.stdin\nmain()", "import sys\n\ndef main():\n    next(sys.stdin)\n    for N in sys.stdin:\n        A = next(sys.stdin)\n        zer = A.count('0')\n        one = A.count('1')\n        write(str(min(zer, one) + (one - min(zer, one)) // 3) + '\\n')\n(read, write, flush) = (sys.stdin.readline, sys.stdout.write, sys.stdout.flush)\nmain()", "import sys\n\ndef main():\n    for _ in range(int(read().strip())):\n        N = int(read().strip())\n        A = [int(__) for __ in read().split()]\n        zer = A.count(0)\n        print(min(zer, N - zer) + (N - zer - min(zer, N - zer)) // 3)\n(read, write, flush) = (sys.stdin.readline, sys.stdout.write, sys.stdout.flush)\nmain()", "import sys\n\ndef main():\n    for _ in range(int(read().strip())):\n        N = int(read().strip())\n        A = [int(__) for __ in read().split()]\n        zer = A.count(0)\n        write(str(min(zer, N - zer) + (N - zer - min(zer, N - zer)) // 3) + '\\n')\n(read, write, flush) = (sys.stdin.readline, sys.stdout.write, sys.stdout.flush)\nmain()", "import sys\n\ndef main():\n    for _ in range(int(read().strip())):\n        N = int(read().strip())\n        A = [int(__) for __ in read().split()]\n        zer = A.count(0)\n        one = A.count(1)\n        write(str(min(zer, one) + (one - min(zer, one)) // 3) + '\\n')\n(read, write, flush) = (sys.stdin.readline, sys.stdout.write, sys.stdout.flush)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    c1 = input().split().count('1')\n    c0 = n - c1\n    if c1 > c0:\n        print(c0 + (c1 - c0) // 3)\n    else:\n        print(c1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(str, input().split()))\n    z = 0\n    o = 0\n    for i in range(n):\n        if lst[i] == '0':\n            z += 1\n        else:\n            o += 1\n    k = min(z, o)\n    print(k + (o - k) // 3)", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    ones_count = 0\n    zeroes_count = 0\n    for j in arr:\n        if j == 1:\n            ones_count += 1\n        else:\n            zeroes_count += 1\n    minimum = min(ones_count, zeroes_count)\n    ans = minimum\n    ones_count -= minimum\n    if ones_count > 0:\n        ans += ones_count // 3\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    one = l.count(1)\n    zero = n - one\n    m = min(one, zero)\n    sam = m + (one - m) // 3\n    print(sam)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    one = l.count(1)\n    zero = n - one\n    m = min(one, zero)\n    sam = m + (one - m) // 3\n    print(sam)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    one = l.count(1)\n    zero = n - one\n    m = min(one, zero)\n    sam = m + (one - m) // 3\n    print(sam)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    one = l.count(1)\n    zero = n - one\n    m = min(one, zero)\n    sam = m + (one - m) // 3\n    print(sam)", "for _ in range(int(input())):\n    n = int(input())\n    a = ''.join(input().split())\n    c1 = sum((1 for x in a if x == '1'))\n    c0 = n - c1\n    if c0 == n:\n        print(0)\n    elif c1 == n:\n        print(c1 // 3)\n    else:\n        res = min(c1, c0)\n        if c1 > c0:\n            res += (c1 - res) // 3\n        print(res)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = list(map(int, input().split()))\n    c1 = sum((1 for i in L if i == 1))\n    c0 = n - c1\n    if c0 == n:\n        print(0)\n    elif c1 == n:\n        print(n // 3)\n    else:\n        pairs = min(c1, c0)\n        if c1 > c0:\n            pairs += (c1 - c0) // 3\n        print(pairs)", "for i in range(int(input())):\n    N = int(input())\n    bin_array = [int(elem) for elem in input().split(' ')]\n    zeros = bin_array.count(0)\n    ones = bin_array.count(1)\n    if zeros >= ones:\n        print(ones)\n        continue\n    print(zeros + (ones - zeros) // 3)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = a.count(0)\n    j = a.count(1)\n    if i >= j:\n        print(j)\n    elif j == i + 1:\n        print(i)\n    else:\n        c = j - i\n        print(i + c // 3)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = a.count(0)\n    j = a.count(1)\n    if i >= j:\n        print(j)\n    elif j == i + 1:\n        print(i)\n    else:\n        c = j - i\n        print(i + c // 3)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 0\n    temp = []\n    for c in a:\n        if len(temp) == 0 or c == temp[-1]:\n            temp.append(c)\n        else:\n            res += 1\n            temp.pop()\n    if len(temp) > 0 and temp[0] == 1:\n        res += len(temp) // 3\n    print(res)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    ones = L.count(1)\n    zeros = N - ones\n    if ones == N:\n        print(N // 3)\n    elif zeros == N:\n        print(0)\n    else:\n        score = min(ones, zeros)\n        if zeros < ones:\n            score += (ones - zeros) // 3\n        print(score)", "for _ in range(int(input())):\n    n = int(input())\n    a = ''.join(input().split())\n    count1 = sum((1 for x in a if x == '1'))\n    count0 = n - count1\n    if count0 == n:\n        print(0)\n    elif count1 == n:\n        print(count1 // 3)\n    else:\n        npair = min(count1, count0)\n        if count1 > count0:\n            npair += (count1 - npair) // 3\n        print(npair)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count0 = a.count(0)\n    count1 = a.count(1)\n    result = 0\n    if count1 == 0:\n        print(0)\n    elif count0 == 0:\n        print(n // 3)\n    else:\n        result += min(count0, count1)\n        count0 -= result\n        count1 -= result\n        if count1 == 0:\n            print(result)\n        else:\n            result += count1 // 3\n            print(result)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    one = 0\n    zero = 0\n    for i in range(n):\n        if a[i] == 0:\n            zero += 1\n        else:\n            one += 1\n    if one <= zero:\n        print(one)\n    else:\n        one -= zero\n        print(zero + one // 3)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    (c1, c2, c3, c4) = (0, 0, 0, 0)\n    s = list(map(int, input().split()))\n    for x in s:\n        if x == 0:\n            c1 = c1 + 1\n        else:\n            c2 = c2 + 1\n        c3 = min(c1, c2)\n        c1 = c1 - c3\n        c2 = c2 - c3\n        c4 = c4 + c3\n    print(int(c4 + c2 / 3))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    one = 0\n    zero = 0\n    for i in range(n):\n        if a[i] == 0:\n            zero += 1\n        else:\n            one += 1\n    if one <= zero:\n        print(one)\n    else:\n        one -= zero\n        print(zero + one // 3)", "mod = 1000000007\nfrom sys import stdin, stdout\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    c = s.count('1')\n    if c <= n // 2:\n        print(c)\n    else:\n        print(s.count('0') + (c - s.count('0')) // 3)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ones = l.count(1)\n    zeros = l.count(0)\n    m = min(ones, zeros)\n    n = n - m - zeros\n    print(m + n // 3)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    stack = []\n    ans = 0\n    for i in range(n):\n        if len(stack) == 0 or a[i] == stack[-1]:\n            stack.append(a[i])\n        else:\n            stack.pop()\n            ans += 1\n    c = 0\n    for i in range(len(stack)):\n        if stack[i] == 1:\n            c += 1\n    ans += c // 3\n    print(ans)", "def main():\n    n = int(input())\n    s = input().split()\n    one_count = 0\n    zero_count = 0\n    for j in range(len(s)):\n        if s[j] == '1':\n            one_count += 1\n        else:\n            zero_count += 1\n    res = min(one_count, zero_count)\n    temp = n - res - zero_count\n    return res + int(temp / 3)\nT = int(input())\nfor i in range(T):\n    print(main())", "goals = int(input())\nfor i in range(goals):\n    aim = int(input())\n    (wife, Life, knife) = (0, 0, 0)\n    life = list(map(int, input().split()))\n    for death in life:\n        wife += death == 0\n        Life += death == 1\n        temp = min(wife, Life)\n        wife -= temp\n        Life -= temp\n        knife += temp\n    print(knife + Life // 3)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    ans = min(s.count('0'), s.count('1'))\n    x = n - ans - s.count('0')\n    if x > 0:\n        ans += x // 3\n    print(ans)", "a = int(input())\nfor x in range(a):\n    k = int(input())\n    s = [int(x) for x in input().split(' ')]\n    ct = s.count(0)\n    pt = s.count(1)\n    ans = min(ct, pt)\n    pt = max(pt - ct, 0)\n    ans += pt // 3\n    print(ans)", "import os, sys, io, math\nfrom array import array\nfrom math import *\nfrom collections import Counter\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    (n, l, i, c) = (IN(), I(), 0, 0)\n    (p, t) = (l[0], [])\n    for i in l:\n        if not t or t[-1] == i:\n            t.append(i)\n        else:\n            t.pop()\n            c += 1\n    c += t.count(1) // 3\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    bits = list(map(int, input().split(' ')))\n    i = 0\n    cnt = 0\n    prev = bits[0]\n    tmp = []\n    for x in bits:\n        if not tmp or tmp[-1] == x:\n            tmp.append(x)\n        else:\n            tmp.pop()\n            cnt += 1\n    cnt += tmp.count(1) // 3\n    print(cnt)", "for i in range(int(input())):\n    m = int(input())\n    l = list(map(int, input().split()))\n    z = l.count(0)\n    o = l.count(1)\n    ans = min(o, z)\n    if o > z:\n        ans += (o - z) // 3\n        print(ans)\n    else:\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    x = n - s\n    if s <= x:\n        print(s)\n    else:\n        print(x + (s - x) // 3)", "for tt in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    s = sum(l)\n    k = n - s\n    if s <= k:\n        print(s)\n    else:\n        print(k + (s - k) // 3)", "for tt in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    s = sum(l)\n    k = n - s\n    if s <= k:\n        print(s)\n    else:\n        print(k + (s - k) // 3)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ones = l.count(1)\n    zeros = l.count(0)\n    if zeros >= ones:\n        print(ones)\n    else:\n        print(zeros + (ones - zeros) // 3)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ones = l.count(1)\n    zeros = l.count(0)\n    if zeros >= ones:\n        print(ones)\n    else:\n        print(zeros + (ones - zeros) // 3)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    l = list(map(int, input().split()))\n    b = l.count(0)\n    c = l.count(1)\n    z = min(c, b)\n    e = z\n    d = 0\n    if c - b > 2:\n        d = (c - z) // 3\n    print(e + d)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (z, o) = (0, 0)\n    for i in l:\n        if i == 1:\n            o += 1\n        else:\n            z += 1\n    if o < z:\n        z = z - o\n        ans = o\n    else:\n        o = o - z\n        ans = z + o // 3\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    z = 0\n    o = 0\n    s = 0\n    for i in range(n):\n        if l[i] == 1:\n            o += 1\n        else:\n            z += 1\n    if o >= z:\n        o = o - z\n        s = s + z + o // 3\n    else:\n        z = z - o\n        s += o\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    one = s.count('1')\n    zero = s.count('0')\n    if one > zero:\n        print(zero + (one - zero) // 3)\n    else:\n        print(one)", "for t in range(int(input())):\n    n = int(input())\n    lst = [int(i) for i in input().split()]\n    c = 0\n    ones = lst.count(1)\n    zeros = lst.count(0)\n    c += min(ones, zeros)\n    ones -= min(ones, zeros)\n    c += ones // 3\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    k = sum(list(map(int, input().split())))\n    (o, z) = (k, n - k)\n    ans = min(o, z)\n    o -= ans\n    z -= ans\n    ans += o // 3\n    print(ans)"]