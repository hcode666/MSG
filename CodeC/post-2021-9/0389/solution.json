["for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    a = a[::-1]\n    minn = a[-1]\n    minnind = a.index(minn)\n    total = n * minn\n    total += minnind\n    print(total)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    ans = a[-1]\n    print(ans * n + a.index(ans))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    ans = a[-1]\n    print(ans * n + a.index(ans))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    ans = a[-1]\n    print(ans * n + a.index(ans))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    ans = a[-1]\n    print(ans * n + a.index(ans))", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = sorted(list(map(int, input().strip().split())), key=lambda x: -x)\n    r = 0\n    if a[-1] > 0:\n        r = a[-1]\n    l = n - 2\n    while l >= 0 and (a[l] <= 0 or a[l] == a[l + 1]):\n        l -= 1\n    l += 1\n    print(r * n + l)", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = sorted(list(map(int, input().strip().split())), key=lambda x: -x)\n    r = 0\n    if a[-1] > 0:\n        r = a[-1]\n    l = n - 2\n    while l >= 0 and (a[l] <= 0 or a[l] == a[l + 1]):\n        l -= 1\n    l += 1\n    print(r * n + l)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    ai = a.index(a[-1])\n    print(n * a[-1] + ai)", "for _ in range(int(input())):\n    N = int(input())\n    A = sorted(list(map(int, input().split())), reverse=True)\n    sm = N * A[-1]\n    x = A[-1]\n    for i in range(len(A)):\n        if A[i] == x:\n            x = i\n            break\n    sm += i\n    print(sm)", "for t in range(int(input())):\n    n = int(input())\n    P = sorted([int(x) for x in input().split(' ')], reverse=True)\n    print(n * P[-1] + P.index(P[-1]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    ans = a[-1]\n    print(ans * n + a.index(ans))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    ans = a[-1]\n    b = [a[i] - ans for i in range(n)]\n    print(ans * n + b.index(0))", "from bisect import bisect_left\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    d = a.count(0)\n    if d != 0:\n        t = 0\n        for i in range(n):\n            if a[i] != 0:\n                t += 1\n            else:\n                break\n        print(t)\n    else:\n        s = a[-1]\n        d = a.index(s)\n        res = s * n + d\n        print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    temp = input().split()\n    A = [int(ele) for ele in temp]\n    Min = min(A)\n    MinCount = 0\n    for ele in A:\n        if ele == Min:\n            MinCount += 1\n    ans += Min * n\n    ans += n - MinCount\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    c = 0\n    for i in l:\n        if i == 0:\n            c += 1\n    m = 0\n    if c == 0:\n        min1 = min(l)\n        count_min = 0\n        for i in l:\n            if i == min1:\n                count_min += 1\n        m = min1 * n\n        m = m + (n - count_min)\n    else:\n        m = n - c\n    print(m)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    a.sort(reverse=True)\n    mn = a.index(min(a))\n    print(n * min(a) + mn)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    a.sort(reverse=True)\n    mn = a.index(min(a))\n    print(n * min(a) + mn)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    if A[0] == 0:\n        i = 0\n        while A[i] == 0:\n            i += 1\n            if i == n:\n                break\n        print(n - i)\n    else:\n        count = 1\n        for i in range(1, n):\n            if A[0] == A[i]:\n                count += 1\n            else:\n                break\n        ans = (A[0] + 1) * n - count\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    ind = 0\n    mini = arr[0]\n    for i in range(n):\n        if arr[i] < mini:\n            mini = arr[i]\n            ind = i\n    t = n * mini + ind\n    print(t)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    a.reverse()\n    e = 0\n    e += a[-1] * n\n    z = a.count(a[-1])\n    e += n - z\n    print(e)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    a.reverse()\n    e = 0\n    e += a[-1] * n\n    z = a.count(a[-1])\n    e += n - z\n    print(e)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    a.reverse()\n    e = 0\n    e += a[-1] * n\n    z = a.count(a[-1])\n    e += n - z\n    print(e)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    a.reverse()\n    e = 0\n    e += a[-1] * n\n    z = a.count(a[-1])\n    e += n - z\n    print(e)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    a.reverse()\n    e = 0\n    e += a[-1] * n\n    z = a.count(a[-1])\n    e += n - z\n    print(e)", "for i in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    time = 0\n    x = 0\n    c = 0\n    for j in range(len(A) - 1):\n        if A[j] != A[j + 1]:\n            x = j\n            c = 0\n            break\n        else:\n            c = 1\n    time = N * A[x]\n    if c == 0:\n        time += N - x - 1\n    print(time)", "def main():\n    test_cases = int(input())\n    for t in range(test_cases):\n        n = int(input())\n        arr = [int(i) for i in input().split()]\n        arr = sorted(arr, reverse=True)\n        (ind, mini) = (0, arr[0])\n        for i in range(n):\n            if arr[i] < mini:\n                mini = arr[i]\n                ind = i\n        ind = ind + 1\n        out = mini * n + ind - 1\n        print(out)\nmain()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    minValue = 1000000\n    for j in a:\n        minValue = min(minValue, j)\n    ans = minValue * n\n    for j in a:\n        if j > minValue:\n            ans += 1\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    li = list(map(int, input().split()))\n    li.sort(reverse=True)\n    dic = {}\n    dic1 = {}\n    key = 0\n    for i in li:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n        if i in dic1:\n            dic1[i] += 1\n        else:\n            dic1[i] = 1\n    for (i, j) in dic.items():\n        key = dic1.pop(i)\n        dic1[i] = j\n    key = li[-1]\n    print(n * key + n - dic[key])\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    li = list(map(int, input().split()))\n    li.sort(reverse=True)\n    dic = {}\n    dic1 = {}\n    key = 0\n    for i in li:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n        if i in dic1:\n            dic1[i] += 1\n        else:\n            dic1[i] = 1\n    for _ in li:\n        key = dic1.pop(li[0])\n        dic1[li[0]] = key\n    key = li[-1]\n    print(n * key + n - dic[key])\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    li = list(map(int, input().split()))\n    li.sort(reverse=True)\n    dic = {}\n    key = 0\n    for i in li:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    key = li[-1]\n    print(n * key + n - dic[key])\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    li = list(map(int, input().split()))\n    li.sort(reverse=True)\n    dic = {}\n    for i in li:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    key = list(dic)[-1]\n    print(n * key + n - dic[key])\nt = int(input())\nfor i in range(t):\n    solve()", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = list(map(int, input().split()))\n    L.sort(reverse=True)\n    m = min(L)\n    x = L.index(m)\n    print(m * n + x)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = list(map(int, input().split()))\n    L.sort(reverse=True)\n    m = min(L)\n    x = L.index(m)\n    print(m * n + x)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort(reverse=True)\n    x = arr[n - 1]\n    if x == 0:\n        y = arr.count(0)\n        print(n - y)\n    else:\n        y = arr.count(x)\n        r = x * n\n        print(r + (n - y))", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ar.sort()\n    mi = min(ar)\n    flag = ar.count(mi)\n    ans = mi * n + (n - flag)\n    print(ans)", "import math\nfor i in range(int(input())):\n    aaa = int(input())\n    bbb = input().split()\n    for j in range(len(bbb)):\n        bbb[j] = math.ceil(max(0, int(bbb[j])))\n    smh = min(bbb)\n    smhh = []\n    for k in range(len(bbb)):\n        if bbb[k] == smh:\n            smhh.append(k)\n    print(len(bbb) - len(smhh) + smh * len(bbb))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    arr.sort(reverse=True)\n    min_value = min(arr)\n    for i in range(n):\n        arr[i] -= min_value\n    j = 0\n    while arr[j] > 0:\n        j += 1\n    print(j + min_value * n)", "for _ in range(int(input())):\n    x = int(input())\n    zoop = list(map(int, input().split()))\n    zoop.sort(reverse=True)\n    ans = 0\n    if zoop[-1] != 0:\n        for i in range(zoop[-1]):\n            ans += len(zoop)\n        i = 0\n        mn = min(zoop)\n        while zoop[i] != mn:\n            ans += 1\n            i += 1\n    else:\n        i = 0\n        while zoop[i] != 0:\n            ans += 1\n            i += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array = input().split()\n    mini = int(array[0])\n    count = 0\n    for k in range(n):\n        val = int(array[k])\n        if val == mini:\n            count += 1\n        elif val < mini:\n            mini = val\n            count = 1\n    print(n - count + n * mini)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    v = [-1] * n\n    s = 0\n    m = -1\n    for j in range(n):\n        if m < 0 or m > a[j]:\n            m = a[j]\n            s = j\n    j = s\n    ans = n\n    for z in a:\n        if z == m:\n            ans -= 1\n    print(ans + m * n)", "T = int(input())\nfor tc in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    v = [-1] * N\n    startI = 0\n    minValue = -1\n    for i in range(N):\n        if minValue < 0 or minValue > A[i]:\n            minValue = A[i]\n            startI = i\n    i = startI\n    ans = N\n    for a in A:\n        if a == minValue:\n            ans -= 1\n    print(ans + minValue * N)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    mn = min(arr)\n    ans = mn * n\n    for i in range(n):\n        arr[i] -= mn\n    print(ans + n - arr.count(0))", "import random\n\ndef s2(n, arr):\n    min_ele = min(arr)\n    ind = []\n    for i in range(n):\n        if arr[i] == min_ele:\n            ind += [i]\n    ans = min_ele * n + n - len(ind)\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(s2(n, arr))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    mini = min(ar)\n    more = 0\n    for num in ar:\n        if num > mini:\n            more += 1\n    ans = n * mini + more\n    print(ans)", "for q in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split(' ')))\n    lst.sort(reverse=True)\n    if lst[-1] == 0:\n        index = lst.index(0)\n        print(index)\n    else:\n        index = lst.index(lst[-1])\n        ans = index + lst[-1] * n\n        print(ans)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    a.reverse()\n    if a[-1] == 0:\n        index = a.index(0)\n        print(index)\n    else:\n        index = a.index(a[-1])\n        time = index + a[-1] * n\n        print(time)", "def ans(arr, n):\n    x = min(arr)\n    z = arr.count(x)\n    print(x * n + n - z)\n    return\nx = int(input())\nfor i in range(x):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ans(arr, n)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = min(arr)\n    print(m * n + n - arr.count(m))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    AE = [int(o) for o in input().split(' ')]\n    if 0 in AE:\n        print(N - AE.count(0))\n    else:\n        s = sorted(AE, reverse=True)\n        l = s[-1]\n        print(N * l + N - s.count(l))", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(min(arr) * n + n - arr.count(min(arr)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    min_element = min(arr)\n    min_count = arr.count(min_element)\n    print(min_element * n + (n - min_count))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    c = 0\n    for i in l:\n        if i == 0:\n            c += 1\n    m = 0\n    if c == 0:\n        min1 = min(l)\n        count_min = 0\n        for i in l:\n            if i == min1:\n                count_min += 1\n        m = min1 * n\n        m = m + (n - count_min)\n    else:\n        m = n - c\n    print(m)", "for i in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    m = min(x)\n    c = 0\n    for i in range(len(x)):\n        if x[i] > m:\n            c += 1\n    print(n * m + c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mn = min(a)\n    print(n * mn + n - a.count(mn))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n - a.count(min(a)) + min(a) * n)", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    min1 = min(a)\n    c = 0\n    for i in a:\n        if i == min1:\n            c = c + 1\n    print(n - c + min1 * n)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        continue\n    MIN = min(ar)\n    MIN_CNT = ar.count(MIN)\n    print(MIN * n + n - MIN_CNT)", "def x(l):\n    l1 = []\n    c = 0\n    for j in l:\n        if j > 0:\n            c = c + 1\n    return c\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    time = 0\n    c = 0\n    for j in l:\n        if j == 0:\n            c = 1\n            break\n    if c == l:\n        time = x(l)\n    else:\n        y = min(l)\n        time = time + min(l) * len(l)\n        for k in range(n):\n            l[k] = l[k] - y\n        time = time + x(l)\n    print(time)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mini = min(arr)\n    arr.sort()\n    f = 0\n    for i in range(n):\n        if arr[i] > mini:\n            print(n * arr[0] + n - i)\n            f = 1\n            break\n    if not f:\n        print(arr[0] * n)", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = min(a)\n    c = a.count(m)\n    ans = m * n + (n - c)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    arrA = input().split()\n    arrA = [int(i) for i in arrA]\n    a = min(arrA)\n    b = arrA.count(a)\n    print(N * a + (N - b))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    v = min(a)\n    c = a.count(v)\n    if v:\n        print(v * n + n - c)\n    else:\n        print(n - c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    v = min(a)\n    c = a.count(v)\n    if v:\n        print(v * n + n - c)\n    else:\n        print(n - c)", "try:\n    t = int(input())\n    while t > 0:\n        n = int(input())\n        nn = 0\n        nnn = 0\n        nnnn = 0\n        l = list(map(int, input().strip().split()))\n        l.sort()\n        lt = 0\n        lt2 = 1\n        count_for_zero = 0\n        count_for_one = 1\n        if l[0] == 0:\n            while True and lt < n:\n                if l[lt] == 0:\n                    lt += 1\n                    count_for_zero += 1\n                    continue\n                break\n            print(n - count_for_zero)\n            continue\n        elif l[0] >= 1:\n            while True and lt2 < n:\n                if l[0] == l[lt2]:\n                    lt2 += 1\n                    count_for_one += 1\n                    continue\n                break\n            ans = n * l[0] + n - count_for_one\n            print(ans)\n            continue\n            t = t - 1\nexcept EOFError as e:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    cnt = 0\n    for i in lst:\n        if i == 0:\n            cnt += 1\n    ans = 0\n    if cnt == 0:\n        mn = min(lst)\n        cmin = 0\n        for i in lst:\n            if i == mn:\n                cmin += 1\n        ans = mn * n\n        ans = ans + (n - cmin)\n    else:\n        ans = n - cnt\n    print(ans)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    s = input().split(' ')\n    a = []\n    mini = 10000007\n    for i in range(n):\n        ele = int(s[i])\n        a.append(ele)\n        mini = min(mini, a[i])\n    res = n * mini\n    for i in range(n):\n        if a[i] > mini:\n            res = res + 1\n    print(res)\n    t = t - 1", "def Time(arr, n):\n    arr.sort(reverse=True)\n    time = 0\n    lim = n - 1\n    for i in range(n - 2, -1, -1):\n        if arr[i] == arr[i + 1]:\n            lim = i\n            continue\n        else:\n            break\n    time = n * arr[lim]\n    if time < 0:\n        return lim\n    time += lim\n    return time\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().rstrip().rsplit()))\n    print(Time(arr, n))", "def SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p ** 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\n    for p in range(n + 1):\n        if prime[p]:\n            print(p)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    time = 0\n    a.sort()\n    count = 0\n    if a[0] == 0:\n        print(n - a.count(0))\n    else:\n        time = a[0] * n\n        for i in range(n):\n            if a[i] > a[0]:\n                time += 1\n        print(time)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    arr = arr[::-1]\n    time = arr[-1] * n\n    for i in arr:\n        if i > arr[-1]:\n            time += 1\n    print(time)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    mn = min(a)\n    ans = mn * n\n    for i in range(n):\n        if a[i] > mn:\n            ans += 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = min(a)\n    c = a.count(k)\n    s = (k + 1) * n - c\n    print(s)", "def check(n, a):\n    mn = min(a)\n    if mn > 0:\n        total = mn * n\n        for i in range(n):\n            if a[i] - mn > 0:\n                total += 1\n    else:\n        total = 0\n        for i in range(n):\n            if a[i] > 0:\n                total += 1\n    return total\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(check(n, a))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = min(a)\n    l = []\n    c = 0\n    for j in range(n):\n        if a[j] == k:\n            l.append(j)\n            c += 1\n    s = (k + 1) * n - c\n    print(s)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    j = min(l)\n    m = (j + 1) * n - l.count(j)\n    print(m)", "def Time(arr, n):\n    arr.sort(reverse=True)\n    time = 0\n    lim = n - 1\n    for i in range(n - 2, -1, -1):\n        if arr[i] == arr[i + 1]:\n            lim = i\n            continue\n        else:\n            break\n    time = n * arr[lim]\n    if time < 0:\n        return lim\n    time += lim\n    return time\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().rstrip().rsplit()))\n    print(Time(arr, n))", "for t in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    lis.sort(reverse=True)\n    if n == 1:\n        print(0)\n    elif min(lis) == max(lis):\n        print(lis[0] * n)\n    else:\n        mini = min(lis)\n        for i in range(n):\n            lis[i] -= mini\n        res = mini * n\n        index = lis.index(0)\n        res += index\n        print(res)", "test = int(input())\nfor i in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    min_elem = min(arr)\n    passes = min_elem * n\n    for j in range(len(arr)):\n        arr[j] -= min_elem\n    count = 0\n    for k in arr:\n        if k > 0:\n            count += 1\n    print(count + passes)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    cnt = arr[0] * n\n    k = arr[0]\n    for i in range(n):\n        arr[i] = arr[i] - k\n    j = n - 1\n    while arr[j] != 0:\n        cnt += 1\n        j -= 1\n    print(cnt)", "t = int(input())\nfor j in range(t):\n    N = int(input())\n    a = list(map(int, input('').strip().split()))[:N]\n    a.sort()\n    min1 = min(a)\n    T = min(a) * N\n    a = a[::-1]\n    count = a.count(min1)\n    T = T + (N - count)\n    print(T)", "t = int(input())\nfor j in range(t):\n    N = int(input())\n    a = list(map(int, input('').strip().split()))[:N]\n    a.sort()\n    min1 = min(a)\n    T = min(a) * N\n    a = a[::-1]\n    count = a.count(min1)\n    T = T + (N - count)\n    print(T)", "for i in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    m = a[-1]\n    c = a.count(m)\n    rem = n - c\n    ans = m * n + rem\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = min(a)\n    a = [i - x for i in a]\n    c = 0\n    for i in range(n):\n        if a[i] != 0:\n            c += 1\n    print(x * n + c)", "def _func(n, a):\n    if n == 1:\n        return '0'\n    if 0 not in a:\n        a.sort()\n        _min = min(a)\n        _count = a.count(_min)\n        return n * _min + (n - _count)\n    else:\n        return n - a.count(0)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(_func(n, a))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    p = 0\n    m = min(l)\n    ans = m * n\n    for i in range(n):\n        if l[i] > m:\n            p = p + 1\n    ans = ans + p\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split(' ')))\n    count0 = 0\n    mini = min(lis)\n    for i in range(len(lis)):\n        if lis[i] == 0:\n            count0 += 1\n    if count0 > 0:\n        print(n - count0)\n    else:\n        mincount = 0\n        for i in lis:\n            if i == mini:\n                mincount += 1\n        print(mini * n + (n - mincount))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    min_ = min(arr)\n    for i in range(n):\n        arr[i] -= min_\n    count_zero = 0\n    for i in range(n):\n        if arr[i] == 0:\n            count_zero += 1\n    ans = (min_ + 1) * n - count_zero\n    print(ans)\n    t -= 1", "def orican(N, A):\n    A.sort()\n    i = A[0]\n    count = N * i\n    for i in A:\n        if i > A[0]:\n            count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    result = orican(N, A)\n    print(result)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    cnt = arr.count(arr[-1])\n    print(arr[-1] * n + n - cnt)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = min(a)\n    cnm = a.count(m)\n    c0 = a.count(0)\n    if c0 == 0:\n        a = m * n\n        print(a + (n - cnm))\n    else:\n        print(n - c0)", "t = int(input())\na = []\nfor i in range(2 * t):\n    a += [list(map(int, input().split()))]\n\ndef f(n):\n    n.sort()\n    l = [x for x in n if x == n[0]]\n    return len(n) - len(l) + len(n) * n[0]\nfor i in range(t):\n    print(f(a[2 * i + 1]))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(min(arr) * n + n - arr.count(min(arr)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = arr.count(min(arr))\n    print(min(arr) * n + n - x)", "for _ in range(int(input())):\n    n = int(input())\n    b = input().split()\n    b.sort(reverse=True)\n    m = min(b)\n    i = b.index(m)\n    print(int(m) * n + i)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sorted(arr, reverse=True)\n    m = min(arr)\n    t = 0\n    for i in arr:\n        if i > m:\n            t += 1\n    print(m * n + t)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    idx = min(a)\n    c = 0\n    for i in range(0, n):\n        a[i] = a[i] - idx\n    for i in a:\n        if i != 0:\n            c += 1\n    print(f'{n * idx + c}')", "t = int(input())\nfor tc in range(0, t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    min = arr[0]\n    ct = 1\n    for i in range(1, n):\n        if arr[i] < min:\n            min = arr[i]\n            ct = 1\n        elif arr[i] == min:\n            ct += 1\n    val = min * n + n - ct\n    print(val)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    l = l[::-1]\n    a = l[-1]\n    b = l.index(a)\n    print(n * a + b)", "from collections import Counter\nfrom math import ceil, floor, log\nimport bisect as bs\nimport sys\ninput = sys.stdin.readline\ninp_lis = lambda : list(map(int, input().split()))\nmulti = lambda : map(int, input().split())\ninp_int = lambda : int(input().strip())\nfor _ in range(int(input())):\n    n = inp_int()\n    a = inp_lis()\n    x = dict(Counter(a))\n    a.sort(reverse=True)\n    if 0 in a:\n        print(a.index(0))\n        continue\n    m = a[-1]\n    c = m * n\n    c += a.index(m)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, list(input().split())))\n    l = sorted(l)[::-1]\n    mi = l[-1]\n    for i in range(n):\n        l[i] = l[i] - mi\n    count = 0\n    for i in l:\n        if i > 0:\n            count = count + 1\n    print(n * mi + count)"]