["for i in range(int(input())):\n    n = int(input())\n    if n == 1 or n == 3:\n        print(-1)\n    elif n == 2:\n        print(2, 1)\n    else:\n        a = []\n        if n % 2 == 0:\n            for k in range(1, n + 1):\n                a.append(k)\n            for k in range(0, n, 2):\n                q = a[k]\n                a[k] = a[k + 1]\n                a[k + 1] = q\n            print(*a)\n        else:\n            a = [3, 4, 1, 5, 2]\n            if n > 5:\n                for k in range(6, n + 1):\n                    a.append(k)\n                for k in range(5, n, 2):\n                    q = a[k]\n                    a[k] = a[k + 1]\n                    a[k + 1] = q\n            print(*a)", "for i in range(int(input())):\n    n = int(input())\n    if n == 1 or n == 3:\n        print(-1)\n    elif n == 2:\n        print(2, 1)\n    else:\n        a = []\n        if n % 2 == 0:\n            for k in range(1, n + 1):\n                a.append(k)\n            for k in range(0, n, 2):\n                q = a[k]\n                a[k] = a[k + 1]\n                a[k + 1] = q\n            print(*a)\n        else:\n            a = [3, 4, 1, 5, 2]\n            if n > 5:\n                for k in range(6, n + 1):\n                    a.append(k)\n                for k in range(5, n, 2):\n                    q = a[k]\n                    a[k] = a[k + 1]\n                    a[k + 1] = q\n            print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        if n < 5:\n            print(-1)\n        else:\n            ans5 = [4, 5, 2, 1, 3]\n            ansRest = list(range(n, 5, -1))\n            print(*ans5, *ansRest)\n    else:\n        print(*list(range(n, 0, -1)))", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        if n <= 3:\n            print(-1)\n        else:\n            temp = [n, n - 1 - 3, n - 1]\n            arr = []\n            for i in range(1, n - 2, 2):\n                if i == temp[1]:\n                    arr.append(i + 1)\n                    arr.append(i + 2)\n                else:\n                    arr.append(i + 1)\n                    arr.append(i)\n            print(*arr + temp)\n    else:\n        ans = []\n        for i in range(1, n + 1, 2):\n            ans.append(i + 1)\n            ans.append(i)\n        print(*ans)", "for i in range(int(input())):\n    N = int(input())\n    if N == 1 or N == 3:\n        print(-1)\n    else:\n        nums = [i + 1 for i in range(N)]\n        if N % 2 == 0:\n            print(*nums[::-1])\n        else:\n            temp = [2, 5, 1, 3, 4]\n            for i in range(6, N, 2):\n                (nums[i - 1], nums[i]) = (nums[i], nums[i - 1])\n            final = temp + nums[5:]\n            print(*final)", "for i in range(int(input())):\n    N = int(input())\n    if N == 1 or N == 3:\n        print(-1)\n    else:\n        nums = [i + 1 for i in range(N)]\n        if N % 2 == 0:\n            print(*nums[::-1])\n        else:\n            temp = [2, 5, 1, 3, 4]\n            for i in range(6, N, 2):\n                (nums[i - 1], nums[i]) = (nums[i], nums[i - 1])\n            final = temp + nums[5:]\n            print(*final)", "for i in range(int(input())):\n    N = int(input())\n    if N == 1 or N == 3:\n        print(-1)\n    else:\n        nums = [i + 1 for i in range(N)]\n        if N % 2 == 0:\n            for i in range(1, N, 2):\n                (nums[i - 1], nums[i]) = (nums[i], nums[i - 1])\n            print(*nums)\n        else:\n            temp = [2, 5, 1, 3, 4]\n            for i in range(6, N, 2):\n                (nums[i - 1], nums[i]) = (nums[i], nums[i - 1])\n            final = temp + nums[5:]\n            print(*final)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1 or n == 3:\n        print('-1')\n    elif n % 2 == 0:\n        for j in range(0, n):\n            print(n - j, end=' ')\n        print()\n    else:\n        print('4 5 2 1 3', end=' ')\n        x = n\n        for j in range(5, n):\n            print(x, end=' ')\n            x = x - 1\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2:\n        if n == 1 or n == 3:\n            print(-1)\n        else:\n            print('3 5 1 2 4', end=' ')\n            for i in range(n, 5, -1):\n                print(i, end=' ')\n            print()\n    else:\n        for i in range(n, 0, -1):\n            print(i, end=' ')\n        print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1 or n == 3:\n        print('-1')\n    else:\n        d = {}\n        if n % 2 == 0:\n            for j in range(0, n, 2):\n                d[j] = j + 2\n                d[j + 1] = j + 1\n        else:\n            d[0] = 4\n            d[1] = 5\n            d[2] = 2\n            d[3] = 1\n            d[4] = 3\n            for l in range(5, n, 2):\n                d[l] = l + 2\n                d[l + 1] = l + 1\n        for k in range(n):\n            print(d[k], end=' ')\n        print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1 or n == 3:\n        print('-1')\n    else:\n        d = {}\n        if n % 2 == 0:\n            for j in range(0, n, 2):\n                d[j] = j + 2\n                d[j + 1] = j + 1\n        else:\n            d[0] = 4\n            d[1] = 5\n            d[2] = 2\n            d[3] = 1\n            d[4] = 3\n            for l in range(5, n, 2):\n                d[l] = l + 2\n                d[l + 1] = l + 1\n        for k in range(n):\n            print(d[k], end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    ans = []\n    if n == 1 or n == 3:\n        print(-1)\n        continue\n    if n % 2 == 0:\n        for j in range(0, n, 2):\n            ans.append(j + 2)\n            ans.append(j + 1)\n    else:\n        ans = [2, 5, 1, 3, 4]\n        for j in range(5, n, 2):\n            ans.append(j + 2)\n            ans.append(j + 1)\n    for i in ans:\n        print(i, end=' ')\n    print(' ')", "for _ in range(int(input())):\n    n = int(input())\n    ans = []\n    if n == 1 or n == 3:\n        print(-1)\n        continue\n    if n % 2 == 0:\n        for j in range(1, n, 2):\n            ans.append(j)\n            ans.append(j + 1)\n            (ans[j - 1], ans[j]) = (ans[j], ans[j - 1])\n    else:\n        ans = [2, 5, 1, 3, 4]\n        for j in range(6, n, 2):\n            ans.append(j)\n            ans.append(j + 1)\n            (ans[j - 1], ans[j]) = (ans[j], ans[j - 1])\n    for i in ans:\n        print(i, end=' ')\n    print(' ')", "from sys import stdin\ninput = stdin.readline\n\ndef answer():\n    if n == 1 or n == 3:\n        return [-1]\n    if n & 1:\n        ans = [2, 3, 5, 1, 4]\n        for i in range(6, n + 1, 2):\n            ans.append(i + 1)\n            ans.append(i)\n    else:\n        (start, end) = (1, n)\n        ans = [-1 for i in range(n)]\n        while start < end:\n            ans[start - 1] = end\n            ans[end - 1] = start\n            (start, end) = (start + 1, end - 1)\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    print(*answer())", "for i in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(n):\n            if i % 2 == 0:\n                print(i + 2, end=' ')\n            else:\n                print(i, end=' ')\n    elif n == 1 or n == 3:\n        print(-1, end='')\n        n = 0\n    else:\n        print('4 3 5 1 2', end=' ')\n        for i in range(5, n):\n            if i % 2 == 1:\n                print(i + 2, end=' ')\n            else:\n                print(i, end=' ')\n    print('')", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    ans = []\n    if n == 1 or n == 3:\n        print(-1)\n        continue\n    if n % 2 == 0:\n        for j in range(1, n, 2):\n            ans.append(j)\n            ans.append(j + 1)\n            (ans[j - 1], ans[j]) = (ans[j], ans[j - 1])\n    else:\n        ans = [2, 5, 1, 3, 4]\n        for j in range(6, n, 2):\n            ans.append(j)\n            ans.append(j + 1)\n            (ans[j - 1], ans[j]) = (ans[j], ans[j - 1])\n    for _ in ans:\n        print(_, end=' ')\n    print(' ')", "testCase = int(input())\nwhile testCase > 0:\n    N = int(input())\n    if N == 1 or N == 3:\n        print(-1, end='')\n    elif N == 2:\n        print('2 1', end='')\n    elif N == 5:\n        print('2 3 5 1 4', end='')\n    elif N % 2 == 0:\n        for i in range(1, N + 1, 2):\n            print(i + 1, i, end=' ')\n    else:\n        print('2 3 5 1 4 ', end='')\n        for i in range(6, N + 1, 2):\n            print(i + 1, i, end=' ')\n    print('')\n    testCase -= 1", "testCase = int(input())\nwhile testCase > 0:\n    N = int(input())\n    if N == 1 or N == 3:\n        print(-1, end='')\n    elif N == 2:\n        print('2 1', end='')\n    elif N == 5:\n        print('2 3 5 1 4', end='')\n    elif N % 2 == 0:\n        for i in range(1, N + 1, 2):\n            print(i + 1, i, end=' ')\n    else:\n        print('2 3 5 1 4 ', end='')\n        for i in range(6, N + 1, 2):\n            print(i + 1, i, end=' ')\n    print('')\n    testCase -= 1", "testCase = int(input())\nwhile testCase > 0:\n    N = int(input())\n    if N == 1 or N == 3:\n        print(-1, end='')\n    elif N == 2:\n        print('2 1', end='')\n    elif N == 5:\n        print('2 3 5 1 4', end='')\n    elif N % 2 == 0:\n        for i in range(1, N + 1, 2):\n            print(i + 1, i, end=' ')\n    else:\n        print('2 3 5 1 4 ', end='')\n        for i in range(6, N + 1, 2):\n            print(i + 1, i, end=' ')\n    print('')\n    testCase -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        for x in range(n, 0, -1):\n            print(x, end=' ')\n        print()\n    elif n % 2 != 0:\n        if n < 5:\n            print(-1)\n        else:\n            print('4 5 1 3 2 ')\n            for x in range(n, 5, -1):\n                print(x, end=' ')\n            print()", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(1, n, 2):\n            print(i + 1, i, end=' ')\n    elif n < 5:\n        print(-1, end=' ')\n    else:\n        print('2 5 1 3 4', end=' ')\n        for i in range(6, n, 2):\n            print(i + 1, i, end=' ')\n    print(' ')", "T = int(input())\nfor Tc in range(T):\n    n = int(input())\n    if n & 1:\n        if n == 1 or n == 3:\n            print(-1)\n        else:\n            print('3 5 1 2 4', end=' ')\n            for i in range(n, 5, -1):\n                print(i, end=' ')\n            print()\n    else:\n        for i in range(1, n + 1):\n            print(n - i + 1, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1 or n == 3:\n        print(-1)\n    elif n % 2 == 0:\n        lst = []\n        for i in range(n):\n            lst.append(n - i)\n        print(*lst)\n    else:\n        lst = [3, 5, 1, 2, 4]\n        x = n - 5\n        if x > 0:\n            if x % 2 == 0:\n                for i in range(6, n + 1):\n                    lst.append(i)\n                    if i % 2 == 1:\n                        (lst[-2], lst[-1]) = (lst[-1], lst[-2])\n        print(*lst)", "t = int(input())\n\ndef swap(l):\n    i = 0\n    while i < len(l):\n        temp = l[i]\n        l[i] = l[i + 1]\n        l[i + 1] = temp\n        i = i + 2\n    return l\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    if n % 2 != 0:\n        if n == 1 or n == 3:\n            print(-1)\n        else:\n            q = [4, 3, 5, 1, 2]\n            if n == 5:\n                print(*q)\n            else:\n                sl = []\n                for i in range(6, n + 1):\n                    sl.append(i)\n                swap(sl)\n                print(*q + sl)\n    else:\n        tab = [i for i in range(1, n + 1)]\n        print(*swap(tab))", "t = int(input())\nfor i in range(1, t + 1):\n    n = int(input())\n    arr = [0] * n\n    b = True\n    if n % 2 == 0:\n        for j in range(1, n + 1):\n            if j % 2 == 1:\n                arr[j - 1] = j + 1\n            else:\n                arr[j - 1] = j - 1\n    elif n == 1 or n == 3:\n        print(-1)\n        b = False\n    else:\n        arr[0] = 3\n        arr[1] = 5\n        arr[2] = 1\n        arr[3] = 2\n        arr[4] = 4\n        if n > 5:\n            for j in range(6, n + 1):\n                if j % 2 == 0:\n                    arr[j - 1] = j + 1\n                else:\n                    arr[j - 1] = j - 1\n    if b:\n        print(*arr)", "t = int(input())\nfor i in range(1, t + 1):\n    n = int(input())\n    arr = [0] * n\n    if n % 2 == 0:\n        for j in range(1, n + 1):\n            if j % 2 == 1:\n                arr[j - 1] = j + 1\n            else:\n                arr[j - 1] = j - 1\n    elif n == 1 or n == 3:\n        print(-1)\n    else:\n        arr[0] = 3\n        arr[1] = 5\n        arr[2] = 1\n        arr[3] = 2\n        arr[4] = 4\n        if n > 5:\n            for j in range(6, n + 1):\n                if j % 2 == 0:\n                    arr[j - 1] = j + 1\n                else:\n                    arr[j - 1] = j - 1\n    if n != 1 and n != 3:\n        print(*arr)", "t = int(input())\nfor i in range(1, t + 1):\n    n = int(input())\n    arr = [0] * n\n    if n % 2 == 0:\n        for j in range(1, n + 1):\n            if j % 2 == 1:\n                arr[j - 1] = j + 1\n            else:\n                arr[j - 1] = j - 1\n    elif n == 1 or n == 3:\n        print(-1)\n    else:\n        arr[0] = 3\n        arr[1] = 5\n        arr[2] = 1\n        arr[3] = 2\n        arr[4] = 4\n        if n > 5:\n            for j in range(6, n + 1):\n                if j % 2 == 0:\n                    arr[j - 1] = j + 1\n                else:\n                    arr[j - 1] = j - 1\n    if n != 1 and n != 3:\n        print(*arr)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    if N & 1:\n        if N == 1 or N == 3:\n            print(-1, end=' ')\n            print('')\n        else:\n            print('2 5 1 3 4', end=' ')\n            for i in range(6, N, 2):\n                print(i + 1, i, end=' ')\n            print('')\n    else:\n        for i in range(1, N + 1, 2):\n            print(i + 1, i, end=' ')\n        print('')", "def solve():\n    n = int(input())\n    if n == 1:\n        print(-1)\n        return\n    if n == 3:\n        print(-1)\n        return\n    if n % 2 == 0:\n        print(*[i + 1 for i in range(n)][::-1])\n    else:\n        ans = []\n        for i in range(1, n - 4, 2):\n            ans.append(i + 1)\n            ans.append(i)\n        ans.append(n - 3)\n        ans.append(n - 2)\n        ans.append(n)\n        ans.append(n - 4)\n        ans.append(n - 1)\n        print(*ans)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    ans = []\n    if n == 1 or n == 3:\n        print(-1)\n        continue\n    if n % 2 == 0:\n        for i in range(1, n, 2):\n            ans.append(i)\n            ans.append(i + 1)\n            (ans[i - 1], ans[i]) = (ans[i], ans[i - 1])\n    else:\n        ans = [2, 5, 1, 3, 4]\n        for i in range(6, n, 2):\n            ans.append(i)\n            ans.append(i + 1)\n            (ans[i], ans[i - 1]) = (ans[i - 1], ans[i])\n    for i in ans:\n        print(i, end=' ')\n    print()", "def xor(ar):\n    print('ar', ar)\n    tot = 0\n    for i in range(len(ar)):\n        tot = tot ^ abs(i + 1 - ar[i])\n    print('tot', tot)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1 or n == 3:\n        print(-1)\n        continue\n    if n % 2 == 1:\n        print(2, 5, 1, end=' ')\n        for i in range(6, n + 1):\n            print(i, end=' ')\n        print(3, 4)\n        continue\n    if n == 2:\n        print(2, 1)\n        continue\n    for i in range(n - 2):\n        print(i + 3, end=' ')\n    print(1, 2)", "import sys\nimport math\nfrom collections import defaultdict, Counter, deque\nfrom bisect import *\nfrom string import ascii_lowercase\nfrom heapq import *\n\ndef readInts():\n    x = list(map(int, sys.stdin.readline().rstrip().split()))\n    return x[0] if len(x) == 1 else x\n\ndef readList(type=int):\n    x = sys.stdin.readline()\n    x = list(map(type, x.rstrip('\\n\\r').split()))\n    return x\n\ndef readStr():\n    x = sys.stdin.readline().rstrip('\\r\\n')\n    return x\nwrite = sys.stdout.write\nread = sys.stdin.readline\n\ndef dist(x1, x2, y1, y2):\n    return math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n\ndef mergeSort(arr, check=lambda a, b: a < b, reverse=False):\n    if len(arr) > 1:\n        mid = len(arr) // 2\n        L = arr[:mid]\n        R = arr[mid:]\n        mergeSort(L, check, reverse)\n        mergeSort(R, check, reverse)\n        i = j = k = 0\n        while i < len(L) and j < len(R):\n            if check(L[i], R[j]):\n                if not reverse:\n                    arr[k] = L[i]\n                    i += 1\n                else:\n                    arr[k] = R[j]\n                    j += 1\n            elif not reverse:\n                arr[k] = R[j]\n                j += 1\n            else:\n                arr[k] = L[i]\n                i += 1\n            k += 1\n        while i < len(L):\n            arr[k] = L[i]\n            i += 1\n            k += 1\n        while j < len(R):\n            arr[k] = R[j]\n            j += 1\n            k += 1\n\ndef maxSum(arr):\n    max_sum = float('-inf')\n    max_cur = 0\n    for num in ar:\n        max_cur = max(max_cur + num, num)\n        if max_cur > max_sum:\n            max_sum = max_cur\n    return max_sum\n\ndef hcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return hcf(b, b % a)\n\ndef get_power(n, m):\n    i = 1\n    p = -1\n    while i <= n:\n        i = i * m\n        p += 1\n    return p\n\ndef fact(n):\n    f = 1\n    for i in range(2, n + 1):\n        f *= i\n    return f\n\ndef solve(t):\n    n = readInts()\n    if n & 1:\n        if n < 4:\n            print(-1)\n        else:\n            res = [4, 1, 5, 2, 3]\n            for i in range(6, n + 1):\n                if i & 1:\n                    res.append(i - 1)\n                else:\n                    res.append(i + 1)\n            print(*res)\n    else:\n        print(*[n - x for x in range(n)])\n\ndef main():\n    sys.setrecursionlimit(12000)\n    t = readInts()\n    for i in range(t):\n        solve(i + 1)\nmain()", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    ans = []\n    if n == 1 or n == 3:\n        print(-1)\n        continue\n    if n % 2 == 0:\n        for j in range(1, n, 2):\n            ans.append(j)\n            ans.append(j + 1)\n            (ans[j - 1], ans[j]) = (ans[j], ans[j - 1])\n    else:\n        ans = [2, 5, 1, 3, 4]\n        for j in range(6, n, 2):\n            ans.append(j)\n            ans.append(j + 1)\n            (ans[j - 1], ans[j]) = (ans[j], ans[j - 1])\n    for _ in ans:\n        print(_, end=' ')\n    print(' ')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    p = []\n    for i in range(1, n + 1):\n        p.append(i)\n    if n % 2 == 0:\n        for i in range(0, n, 2):\n            (p[i], p[i + 1]) = (p[i + 1], p[i])\n        for i in range(0, n):\n            print(p[i], end=' ')\n        print()\n    elif n < 5:\n        print('-1')\n    else:\n        p[0] = 4\n        p[1] = 5\n        p[2] = 2\n        p[3] = 1\n        p[4] = 3\n        for i in range(5, n, 2):\n            (p[i], p[i + 1]) = (p[i + 1], p[i])\n        for i in range(0, n):\n            print(p[i], end=' ')\n        print()\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        l = [i for i in range(1, n + 1)][::-1]\n        print(*l)\n    elif n < 5:\n        print(-1)\n    else:\n        print('2 5 1 3 4', end=' ')\n        for i in range(6, n, 2):\n            print(i + 1, i, end=' ')\n        print()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    p = []\n    for i in range(1, n + 1):\n        p.append(i)\n    if n % 2 == 0:\n        for i in range(0, n, 2):\n            (p[i], p[i + 1]) = (p[i + 1], p[i])\n        for i in range(0, n):\n            print(p[i], end=' ')\n        print()\n    elif n < 5:\n        print('-1')\n    else:\n        p[0] = 4\n        p[1] = 5\n        p[2] = 2\n        p[3] = 1\n        p[4] = 3\n        for i in range(5, n, 2):\n            (p[i], p[i + 1]) = (p[i + 1], p[i])\n        for i in range(0, n):\n            print(p[i], end=' ')\n        print()\n    t = t - 1", "def solve():\n    n = int(input())\n    a = list(range(1, n + 1))\n    if n % 2 == 0:\n        i = 0\n        while i < n - 1:\n            t = a[i]\n            a[i] = a[i + 1]\n            a[i + 1] = t\n            i += 2\n        print(*a)\n    elif n < 5:\n        print('-1')\n    else:\n        a[0] = 2\n        a[1] = 3\n        a[2] = 5\n        a[3] = 1\n        a[4] = 4\n        i = 5\n        while i < n - 1:\n            t = a[i]\n            a[i] = a[i + 1]\n            a[i + 1] = t\n            i += 2\n        print(*a)\nt = int(input())\nfor j in range(t):\n    solve()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    p = []\n    for i in range(1, n + 1):\n        p.append(i)\n    if n % 2 == 0:\n        for i in range(0, n, 2):\n            (p[i], p[i + 1]) = (p[i + 1], p[i])\n        for i in range(0, n):\n            print(p[i], end=' ')\n        print()\n    elif n < 5:\n        print('-1')\n    else:\n        p[0] = 4\n        p[1] = 5\n        p[2] = 2\n        p[3] = 1\n        p[4] = 3\n        for i in range(5, n, 2):\n            (p[i], p[i + 1]) = (p[i + 1], p[i])\n        for i in range(0, n):\n            print(p[i], end=' ')\n        print()\n    t = t - 1", "for i in range(int(input())):\n    n = int(input())\n    if n & 1:\n        if n <= 3:\n            print(-1)\n        else:\n            print(2, 3, 5, 1, 4, end=' ')\n            for j in range(n, 5, -1):\n                print(j, end=' ')\n            print()\n    else:\n        half = n // 2\n        for j in range(n // 2):\n            print(half + j + 1, end=' ')\n        for j in range(n // 2):\n            print(j + 1, end=' ')\n        print()", "import collections, math, bisect, sys\nfrom collections import OrderedDict, Counter, defaultdict\nfrom sys import stdin, stdout\n\ndef get_line():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef in1():\n    return int(stdin.readline())\n\ndef display_arr(arr):\n    stdout.write(' '.join(map(str, arr)) + '\\n')\n\ndef display_num(num):\n    stdout.write(str(num) + '\\n')\n\ndef factorial(n):\n    return n * factorial(n - 1) if n > 1 else 1\n\ndef fact(n):\n    n = n - 1\n    return n * (n + 1) // 2\n\ndef percent(c, s):\n    return c / s * 100\n\ndef l2d(a):\n    return collections.Counter(a)\n\ndef lcm(x, y):\n    return x * y // math.gcd(x, y)\na = []\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    for p in range(2, n + 1):\n        if prime[p]:\n            a.append(p)\n    return set(prime)\nprime = SieveOfEratosthenes(pow(10, 5))\n\ndef add(i):\n    return (1 << i) - 1\n\ndef rsb(k):\n    p = 1\n    while k > 0:\n        if k & 1:\n            return p - 1\n        p += 1\n        k = k >> 1\n\ndef phone_number(s):\n    ans = ''\n    l = 0\n    mul = 1\n    for i in range(len(s)):\n        if s[i] == ' ':\n            r = i\n            char = s[l:r]\n            if char == 'double':\n                mul = 2\n            elif char == 'triple':\n                mul = 3\n            else:\n                ans += mul * str(d[char])\n                mul = 1\n            l = r + 1\n    ans += mul * str(d[s[l:len(s)]])\n    return ans\nd = [0, 0]\nb = 1\n\ndef isPrime(p):\n    if p == 1:\n        return 0\n    i = 2\n    while i * i <= n:\n        if n % i == 0:\n            return 0\n        i += 1\n    return 1\nd = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9, 'zero': 0}\n\ndef main():\n    for _ in range(in1()):\n        n = in1()\n        if n == 1 or n == 3:\n            print(-1)\n        elif n & 1:\n            res = [2, 3, 5, 1, 4]\n            f = 5\n            while len(res) + 2 <= n:\n                res.extend([f + 2, f + 1])\n                f += 2\n            print(*res)\n        else:\n            res = []\n            f = 0\n            while len(res) + 2 <= n:\n                res.extend([f + 2, f + 1])\n                f += 2\n            print(*res)\nmain()", "for _ in range(int(input())):\n    N = int(input())\n    if N % 2:\n        if N in [1, 3]:\n            print(-1)\n        else:\n            outstr = '4 3 5 1 2'\n            if N > 5:\n                for i in range(7, N + 1, 2):\n                    outstr += f' {i} {i - 1}'\n            print(outstr)\n    else:\n        outstr = f'{N}'\n        a = [i for i in range(N - 1, 0, -1)]\n        for i in a:\n            outstr += f' {i}'\n        print(outstr)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    if n % 2 == 1:\n        if n == 1 or n == 3:\n            print('-1')\n        else:\n            s = '4 3 5 1 2 '\n            if n > 5:\n                for i in range(7, n + 1, 2):\n                    s += str(i) + ' ' + str(i - 1) + ' '\n            print(s.strip())\n    else:\n        s = ''\n        for i in range(n // 2 + 1, n + 1):\n            s += str(i) + ' '\n        for i in range(1, n // 2 + 1):\n            s += str(i) + ' '\n        print(s.strip())", "for _ in range(int(input())):\n    N = int(input())\n    if N % 2 == 1 and N <= 3:\n        print(-1)\n    elif N % 2 == 0:\n        arr = [(i + 1, i) for i in range(1, N + 1, 2)]\n        arr = [j for i in arr for j in i]\n        print(*arr)\n    else:\n        arr = [2, 3, 5, 1, 4]\n        arr1 = [(i + 1, i) for i in range(6, N + 1, 2)]\n        arr1 = [j for i in arr1 for j in i]\n        arr += arr1\n        print(*arr)", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2:\n        if n <= 3:\n            print(-1)\n        elif n == 5:\n            print(4, 5, 2, 1, 3)\n        else:\n            print(4, 5, 2, 1, 3, end=' ')\n            for i in range(6, n + 1):\n                if i % 2 == 0:\n                    print(i + 1, end=' ')\n                else:\n                    print(i - 1, end=' ')\n            print()\n    else:\n        for i in range(1, n + 1):\n            if i % 2:\n                print(i + 1, end=' ')\n            else:\n                print(i - 1, end=' ')\n        print()", "from itertools import permutations\nsl = []\nfor sl in list(permutations(range(1, 5 + 1))):\n    f = 0\n    for i in range(5):\n        if i + 1 == sl[i]:\n            f = 1\n            break\n    if f:\n        continue\n    xo = 0\n    for i in range(5):\n        xo ^= abs(sl[i] - (i + 1))\n    if xo == 0:\n        break\n\ndef swap(sidx, eidx):\n    for i in range(sidx, eidx, 2):\n        (l[i], l[i + 1]) = (l[i + 1], l[i])\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        l = []\n        for i in range(n):\n            l.append(i + 1)\n        swap(0, n)\n        print(*l)\n    elif n < 5:\n        print(-1)\n    else:\n        l = []\n        for i in range(n):\n            l.append(i + 1)\n        swap(5, n)\n        l[0:5] = sl\n        print(*l)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(0, n, 2):\n            print(i + 2, i + 1, end=' ')\n    elif n % 2 == 1 and n >= 5:\n        print(2, 3, 5, 1, 4, end=' ')\n        for i in range(5, n, 2):\n            print(i + 2, i + 1, end=' ')\n    else:\n        print(-1, end='')\n    print()", "for _ in range(int(input())):\n    N = int(input())\n    l = [i for i in range(1, N + 1)]\n    five = [4, 5, 1, 3, 2]\n    if N == 1 or N == 3:\n        print(-1)\n    elif N % 2 == 0:\n        l = l[::-1]\n        print(*l)\n    else:\n        rem = l[5:]\n        ans = five + rem[::-1]\n        print(*ans)", "def gen(s, n):\n    a = range(s, n, 2)\n    b = range(s + 1, n + 1, 2)\n    index = n\n    if s == 6:\n        index = n - 5\n    for i in range(index):\n        if i % 2 == 0:\n            print(b[i // 2], end=' ')\n        else:\n            print(a[i // 2], end=' ')\n    print('\\n')\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        gen(1, n)\n    elif n < 5:\n        print(-1, '\\n')\n    else:\n        print('2 3 5 1 4', end=' ')\n        gen(6, n)", "for t in range(int(input())):\n    N = int(input())\n    if N == 1 or N == 3:\n        print(-1)\n        continue\n    if N % 2 == 0:\n        print(*list(range(N, 0, -1)))\n    else:\n        if N == 5:\n            print(*[4, 5, 2, 1, 3])\n            continue\n        ind = N // 2\n        A = list(range(N, 0, -1))\n        (A[ind], A[ind + 1]) = (A[ind + 1], A[ind])\n        (A[ind + 2], A[ind + 3]) = (A[ind + 3], A[ind + 2])\n        print(*A)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1 or n == 3:\n        print(-1)\n    else:\n        ans = []\n        len_ = 0\n        p = 1\n        if n & 1 == 0:\n            while len_ != n:\n                ans.append(p + 1)\n                ans.append(p)\n                p += 2\n                len_ += 2\n        else:\n            ans = [2, 3, 5, 1, 4]\n            len_ = 5\n            p = 7\n            while len_ != n:\n                ans.append(p)\n                ans.append(p - 1)\n                p += 2\n                len_ += 2\n        print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        if n < 5:\n            print('-1')\n        else:\n            print('2 5 1 3 4 ')\n            for i in range(6, n, 2):\n                print(i + 1, i, end=' ')\n    else:\n        for i in range(1, n, 2):\n            print(i + 1, i, end=' ')\n        print()", "import math, bisect, heapq, random, sys, itertools\nsys.setrecursionlimit(10 ** 5)\ninput = sys.stdin.readline\n\ndef gprint(t, ans=''):\n    print(f'Case #{t + 1}:', ans)\nints = lambda : list(map(int, input().split()))\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\np2 = [1]\nfor i in range(20):\n    p2.append(p2[-1] * 2)\np = 10 ** 9 + 7\nANS = []\nfor t in range(int(input())):\n    n = int(input())\n    if n in [1, 3]:\n        print(-1)\n        continue\n    if n % 2:\n        arr = [3, 5, 4]\n        for i in range(6, n + 1):\n            arr.append(i)\n        arr += [1, 2]\n        print(*arr)\n    else:\n        arr = [n - i for i in range(n)]\n        print(*arr)", "def xor(ar):\n    print('ar', ar)\n    tot = 0\n    for i in range(len(ar)):\n        tot = tot ^ abs(i + 1 - ar[i])\n    print('tot', tot)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1 or n == 3:\n        print(-1)\n        continue\n    if n % 2 == 1:\n        print(2, 5, 1, end=' ')\n        for i in range(6, n + 1):\n            print(i, end=' ')\n        print(3, 4)\n        continue\n    if n == 2:\n        print(2, 1)\n        continue\n    for i in range(n - 2):\n        print(i + 3, end=' ')\n    print(1, 2)", "def calculate(start: int, end: int):\n    op = []\n    t = 1\n    while t != end + 1:\n        if t % 2:\n            op.append(start + 1)\n        else:\n            op.append(start - 1)\n        start += 1\n        t += 1\n    return op\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    if N % 2 == 0:\n        print(' '.join(map(str, calculate(1, N))))\n    elif N < 5:\n        print(-1)\n    else:\n        print(' '.join(map(str, [2, 5, 1, 3, 4] + calculate(6, N - 5))))", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1 or n == 3:\n        print(-1)\n    else:\n        ans = []\n        if n % 2 == 0:\n            for j in range(n // 2 + 1, n + 1):\n                ans.append(j)\n            for j in range(1, n // 2 + 1):\n                ans.append(j)\n            print(*ans)\n        else:\n            ans = ans + [3, 5, 1, 2, 4]\n            j = 6\n            for k in range(j, n, 2):\n                ans.append(k + 1)\n                ans.append(k)\n            print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1 or n == 3:\n        print(-1)\n    else:\n        ans = []\n        if n % 2 == 0:\n            for j in range(n // 2 + 1, n + 1):\n                ans.append(j)\n            for j in range(1, n // 2 + 1):\n                ans.append(j)\n            print(*ans)\n        else:\n            ans = ans + [3, 5, 1, 2, 4]\n            j = 6\n            for k in range(j, n, 2):\n                ans.append(k + 1)\n                ans.append(k)\n            print(*ans)", "def display(l, n):\n    nums = [i for i in range(l + 1, n + 1)]\n    for i in range(-1, l - n - 1, -1):\n        print(nums[i], end=' ')\n    print()\nfor i in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        display(0, n)\n    elif n < 5:\n        print('-1')\n    else:\n        print(4, 5, 2, 1, 3, end=' ')\n        display(5, n)", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        if n == 1 or n == 3:\n            print(-1)\n        else:\n            print('3 5 1 2 4', end=' ')\n            for i in range(n, 5, -1):\n                print(i, end=' ')\n            print()\n    else:\n        for i in range(1, n + 1):\n            print(n - i + 1, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        if n == 1 or n == 3:\n            print(-1)\n        else:\n            print('3 5 1 2 4', end=' ')\n            for i in range(n, 5, -1):\n                print(i, end=' ')\n            print()\n    else:\n        for i in range(1, n + 1):\n            print(n - i + 1, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2:\n        if n == 1 or n == 3:\n            print(-1)\n        else:\n            print('3 5 1 2 4 ')\n            for i in range(n, 5, -1):\n                print(i, end=' ')\n            print()\n    else:\n        for i in range(1, n + 1):\n            print(n + 1 - i, end=' ')\n        print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        step = [2, 4, 5, 1, 3]\n        if n == 1 or n == 3:\n            print('-1')\n        elif n == 5:\n            for i in step:\n                print(i, end=' ')\n            print()\n        else:\n            for i in range(6, n, 2):\n                step.append(i + 1)\n                step.append(i)\n            for i in step:\n                print(i, end=' ')\n            print()\n    else:\n        for i in range(n, 0, -1):\n            print(i, end=' ')\n        print()", "import sys, os.path\nif os.path.exists('input.txt'):\n    sys.stdout = open('output.txt', 'w')\n    sys.stdin = open('input.txt', 'r')\n\ndef solve(n):\n    if n == 1 or n == 3:\n        return [-1]\n    if n % 2 == 0:\n        x = n // 2\n        return [x + i for i in range(1, x + 1)] + [i for i in range(1, x + 1)]\n    res = []\n    if n == 5:\n        return [2, 3, 5, 1, 4]\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            res.append(i + 1)\n        else:\n            res.append(i - 1)\n    (res[-1], res[-2], res[-3]) = (n - 1, n - 1 - 3, n)\n    res[-4] = n - 2\n    return res\n\ndef main():\n    sys.setrecursionlimit(10 ** 8)\n    for _ in range(int(input())):\n        N = int(input())\n        result = solve(N)\n        print(*result)\nmain()", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        if n == 1 or n == 3:\n            print('-1')\n        else:\n            res = [3, 5, 1, 2, 4]\n            if n == 5:\n                print(*res)\n            else:\n                for i in range(n, 5, -1):\n                    res.append(i)\n                print(*res)\n    else:\n        li = [int(x) for x in range(n, 0, -1)]\n        print(*li)", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(n, 0, -1):\n            print(i, end=' ')\n        print()\n    elif n == 1 or n == 3:\n        print(-1)\n    else:\n        print(3, 5, 1, 2, 4, end=' ')\n        for i in range(n, 5, -1):\n            print(i, end=' ')\n        print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1 or n == 3:\n        print(-1)\n        continue\n    if n % 2 != 0:\n        print(3, 5, 1, 2, 4, end=' ')\n        j = n\n        while j >= 6:\n            print(j, end=' ')\n            j = j - 1\n        print()\n        continue\n    for j in range(1, n + 1):\n        print(n - j + 1, end=' ')\n    print()", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    if N % 2 == 1:\n        if N == 1 or N == 3:\n            print('-1')\n        else:\n            print('3 5 1 2 4')\n            for i in range(N, 5, -1):\n                print(i, end=' ')\n            print()\n    else:\n        for i in range(1, N + 1):\n            print(N + 1 - i, end=' ')\n        print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        step = [2, 4, 5, 1, 3]\n        if n == 1 or n == 3:\n            print('-1')\n        elif n == 5:\n            for i in step:\n                print(i, end=' ')\n            print()\n        else:\n            for i in range(6, n, 2):\n                step.append(i + 1)\n                step.append(i)\n            for i in step:\n                print(i, end=' ')\n            print()\n    else:\n        for i in range(n, 0, -1):\n            print(i, end=' ')\n        print()", "for z in range(int(input())):\n    N = int(input())\n    if N % 2 == 1 and N >= 5:\n        for i in range(N - 5):\n            if i % 2 == 1:\n                print(i, end=' ')\n            else:\n                print(i + 2, end=' ')\n        print(N - 3, N - 2, N, N - 4, N - 1)\n    elif N % 2 == 0:\n        for i in range(N, 0, -1):\n            if i != 1:\n                print(i, end=' ')\n            else:\n                print(i)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1 or n == 3:\n        print(-1)\n        continue\n    a = []\n    e = 2\n    o = 1\n    for i in range(n):\n        if i == n - 1 and n % 2 == 1:\n            a.append(n)\n            break\n        if i % 2 == 0:\n            a.append(e)\n            e += 2\n        else:\n            a.append(o)\n            o += 2\n    if n % 2 == 1:\n        t = a[n - 3]\n        a[n - 3] = a[n - 1]\n        a[n - 1] = t\n        t = a[n - 2]\n        a[n - 2] = a[n - 4]\n        a[n - 4] = t\n    for i in a:\n        print(i, end=' ')\n    print()", "class Solution:\n\n    def goodpermutation(self, n):\n        arr = []\n        if n % 2 == 0:\n            for i in range(1, n + 1):\n                arr.append(n + 1 - i)\n        elif n == 1 or n == 3:\n            return [-1]\n        else:\n            arr = [3, 5, 1, 2, 4]\n            for i in range(n, 5, -1):\n                arr.append(i)\n        return arr\ntc = int(input())\nwhile tc > 0:\n    n = int(input())\n    Sol = Solution()\n    print(*Sol.goodpermutation(n))\n    tc -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        if n == 1 or n == 3:\n            print('-1')\n        else:\n            print('3 5 1 2 4 ', end='')\n            for j in range(n, 5, -1):\n                print(j, end=' ')\n            print()\n    else:\n        for j in range(1, n + 1):\n            print(n + 1 - j, end=' ')\n        print()", "for i in range(int(input())):\n    n = int(input())\n    if n % 2:\n        if n == 1 or n == 3:\n            print(-1)\n        else:\n            a = [3, 5, 1, 2, 4]\n            for i in range(n, 5, -1):\n                a.append(i)\n            print(*a)\n    else:\n        a = []\n        for i in range(1, n + 1):\n            a.append(n + 1 - i)\n        print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1 or n == 3:\n        print(-1)\n    elif n % 2 != 0:\n        l = [0] * n\n        l1 = [i for i in range(1, n + 1)]\n        l1.remove(2)\n        l1.remove(3)\n        l1.remove(5)\n        for i in range(n - 3):\n            l[l1[i] - 1] = l1[n - 4 - i]\n        l[1] = 5\n        l[2] = 2\n        l[4] = 3\n        for i in l:\n            print(i, end=' ')\n        print()\n    else:\n        for i in range(n):\n            print(n - i, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(n):\n            print(n - i, end=' ')\n        print()\n    else:\n        if n < 5:\n            print(-1)\n            continue\n        print('4 5 1 3 2', end=' ')\n        for i in range(n - 5):\n            print(n - i, end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        if n == 1 or n == 3:\n            print(-1)\n        else:\n            print('3 5 1 2 4')\n            i = n\n            while i >= 6:\n                print(i, end=' ')\n                i -= 1\n            print('')\n    else:\n        for i in range(1, n + 1):\n            print(n + 1 - i, end=' ')\n        print('')", "import sys\n\ndef f(l, n, f):\n    a = 0\n    x = n - 1\n    while a <= x:\n        m = a + (x - a) // 2\n        if l[m] == f:\n            return m\n        elif l[m] > f:\n            x = m - 1\n        else:\n            a = m + 1\n    return None\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = []\n    if n % 2 == 0:\n        for i in range(n // 2 + 1, n + 1):\n            a.append(i)\n        for i in range(1, n // 2 + 1):\n            a.append(i)\n        print(*a)\n    elif n == 1:\n        print(-1)\n    elif n == 3:\n        print(-1)\n    else:\n        a = []\n        x = n - 5\n        for i in range(x // 2 + 1, x + 1):\n            a.append(i)\n        for i in range(1, x // 2 + 1):\n            a.append(i)\n        a = a + [n - 2, n, n - 1, n - 4, n - 3]\n        print(*a)", "for i in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        if n in [1, 3]:\n            print(-1)\n        else:\n            print('3 5 1 2 4', end=' ')\n            for i in range(n, 5, -1):\n                print(i, end=' ')\n            print()\n    else:\n        for i in range(1, n + 1):\n            print(n + 1 - i, end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        if n == 1 or n == 3:\n            print(-1)\n        else:\n            print('3 5 1 2 4')\n            i = n\n            while i >= 6:\n                print(i, end=' ')\n                i -= 1\n            print('')\n    else:\n        for i in range(1, n + 1):\n            print(n + 1 - i, end=' ')\n        print('')", "from heapq import heappop, heappush\n\ndef solve(N):\n    if N <= 1:\n        print(-1)\n        return\n    if N % 2 == 0:\n        val = 0\n        for i in range(N):\n            print(N - i, end=' ')\n        print()\n        return\n    else:\n        if N == 3:\n            print(-1)\n            return\n        res = [4, 3, 5]\n        i = 6\n        while len(res) < N - 2:\n            res.append(i)\n            res.append(i + 1)\n            i += 2\n        res.append(1)\n        res.append(2)\n        val = 0\n        for i in range(len(res)):\n            assert i + 1 != res[i]\n            print(res[i], end=' ')\n        print()\nT = int(input())\nres = []\nfor i in range(T):\n    N = int(input())\n    solve(N)", "t = int(input())\nfor _ in range(t):\n    num = int(input())\n    if num % 2 == 1:\n        if num == 1 or num == 3:\n            print('-1')\n        else:\n            print('3 5 1 2 4')\n            for i in range(num, 5, -1):\n                print(i, end=' ')\n            print('')\n    else:\n        for i in range(1, num + 1):\n            print(num + 1 - i, end=' ')\n        print('')", "from collections import deque\n\ndef fun(n):\n    if n == 1 or n == 3:\n        return [-1]\n    if n % 2:\n        m = 5\n        l = deque([3, 4, 1, 5, 2])\n        for i in range((n - 4) // 2):\n            l.append(2 + m)\n            l.append(1 + m)\n            m += 2\n        return list(l)\n    if n % 2 == 0:\n        m = 0\n        l = deque([])\n        for i in range(n // 2):\n            l.append(2 + m)\n            l.append(1 + m)\n            m += 2\n        return list(l)\nfor t in range(int(input())):\n    n = int(input())\n    l = fun(n)\n    print(*l)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 3 or n == 1:\n        print(-1)\n        continue\n    if n & 1:\n        res = [0]\n        for i in range(n, 0, -1):\n            res.append(i)\n        res[n // 2] = n // 2 + 1\n        res[n // 2 + 1] = res[n // 2] + 2\n        res[n // 2 + 2] = res[n // 2] - 2\n        res[n // 2 - 1] = n // 2\n        res[n // 2 + 3] = n // 2 + 2\n        print(*res[1:])\n    else:\n        for i in range(n, 0, -1):\n            print(i, end=' ')\n        print()", "def solve(a):\n    if a % 2 == 0:\n        for i in range(1, a + 1, 2):\n            print(i + 1, i, end=' ')\n    else:\n        if a == 1 or a == 3:\n            print(-1)\n            return\n        print('3 5 1 2 4', end=' ')\n        for i in range(a, 5, -1):\n            print(i, end=' ')\n    print()\nn = int(input())\nfor i in range(n):\n    a = int(input())\n    solve(a)", "for i in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        if n == 1 or n == 3:\n            print(-1)\n        else:\n            print(3, 5, 1, 2, 4, end=' ')\n            for i in range(n, 5, -1):\n                print(i, end=' ')\n            print()\n    else:\n        for i in range(1, n + 1, 1):\n            print(n + 1 - i, end=' ')\n        print()", "for _ in range(int(input())):\n    terms = int(input())\n    if terms == 1 or terms == 3:\n        print(-1)\n        continue\n    elif terms % 2 == 0:\n        for i in range(1, terms + 1):\n            print(terms + 1 - i, end=' ')\n        print()\n    else:\n        L = [3, 5, 1, 2, 4]\n        for i in range(terms, 5, -1):\n            L.append(i)\n        print(*L)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    if n % 2:\n        if n == 1 or n == 3:\n            print(-1)\n        else:\n            print('3 5 1 2 4 ', end='')\n            for i in range(n, 5, -1):\n                print(i, end=' ')\n            print()\n    else:\n        for i in range(1, n + 1):\n            print(n + 1 - i, end=' ')\n        print()", "for _ in range(int(input())):\n    a = int(input())\n    if a % 2 == 1:\n        if a == 1 or a == 3:\n            print(-1)\n        else:\n            print('3 5 1 2 4')\n            for i in range(a, 5, -1):\n                print(i, end=' ')\n            print()\n    else:\n        for i in range(1, a + 1):\n            print(a + 1 - i, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 != 0:\n        if n == 1 or n == 3:\n            print('-1')\n        else:\n            print(3, 5, 1, 2, 4, end=' ')\n            for i in range(n, 5, -1):\n                print(i, end=' ')\n    else:\n        for i in range(1, n + 1):\n            print(n + 1 - i, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1 and n >= 5:\n        for i in range(0, n - 5):\n            if i & 1:\n                print(i, end=' ')\n            else:\n                print(i + 2, end=' ')\n        print(n - 3, n - 2, n, n - 4, n - 1)\n    elif n % 2 == 0:\n        i = n\n        while i >= 1:\n            print(i, end=' ')\n            i -= 1\n        print()\n    else:\n        print(-1)", "import math\nfrom collections import defaultdict\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    if n == 1:\n        print(-1)\n    elif n % 2 == 0:\n        k = 0\n        for j in range(0, n // 2):\n            print(k + 2, end=' ')\n            print(k + 1, end=' ')\n            k += 2\n        print()\n    elif n == 3:\n        print(-1)\n    elif n == 5:\n        print(f'2 4 5 1 3')\n    else:\n        lis = [2, 4, 6, 1, 7, 3, 5]\n        for j in lis:\n            print(j, end=' ')\n        y = 8\n        for m in range((n - 7) // 2):\n            print(y + 1, end=' ')\n            print(y, end=' ')\n            y += 2\n        print()", "from sys import stdin, stdout\nfrom collections import Counter as co, defaultdict as dd\nimport math\nmod = int(1000000000.0 + 7)\n\nclass node:\n\n    def __init__(self, val, depth=0):\n        self.val = val\n        self.depth = depth\n        self.left = None\n        self.right = None\n\ndef create(root, x):\n    if not root:\n        return node(x)\n    if root.val == x:\n        return root\n    elif x < root.val:\n        root.left = create(root.left, x)\n    else:\n        root.right = create(root.right, x)\n    return root\n\ndef fibcompute():\n    ans = {1: [[0, 1], [1, 1]]}\n    l = [1]\n    i = 2\n    while i <= 10 ** 18:\n        ans[i] = matmul(ans[i / 2], ans[i / 2])\n        l.append(i)\n        i *= 2\n    return [ans, l]\n\ndef listi():\n    return list(map(int, stdin.readline().strip().split()))\n\ndef multii():\n    return map(int, stdin.readline().strip().split())\n\ndef inti():\n    return int(stdin.readline().strip())\n\ndef stri():\n    return stdin.readline().strip()\n\ndef matmul(a, b):\n    return [[(a[0][0] % mod * b[0][0] % mod % mod + a[0][1] % mod * b[1][0] % mod % mod) % mod, (a[0][0] % mod * b[0][1] % mod % mod + a[0][1] % mod * b[1][1] % mod % mod) % mod], [(a[1][0] % mod * b[0][0] % mod % mod + a[1][1] % mod * b[1][0] % mod % mod) % mod, (a[1][0] % mod * b[0][1] % mod % mod + a[1][1] % mod * b[1][1] % mod % mod) % mod]]\n\ndef isprime(n):\n    if n == 1:\n        return 0\n    c = 0\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            c = 1\n            break\n    if c == 0:\n        return 1\n    else:\n        return 0\n\ndef noofdivisors(n):\n    c = 0\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            if n == i ** 2:\n                c += 1\n            else:\n                c += 2\n    return c\n\ndef fibgreedy(n):\n    ans = []\n    s = bin(n)[2:]\n    ls = len(s)\n    for i in range(ls):\n        if s[i] != '0':\n            ans.append(2 ** (ls - i - 1) * int(s[i]))\n    return ans\n\ndef sumd(n):\n    ans = 0\n    while n > 0:\n        ans += n % 10\n        n //= 10\n    return ans\n\ndef solve():\n    n = inti()\n    ans = []\n    if n % 2 == 0:\n        for i in range(1, n + 1):\n            ans.append(n - i + 1)\n    else:\n        if n == 1 or n == 3:\n            print(-1)\n            return\n        ans += [3, 5, 1, 2, 4]\n        for i in range(n, 5, -1):\n            ans.append(i)\n    print(*ans)\nt = inti()\nfor _ in range(t):\n    solve()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(1, n + 1):\n            print(n - i + 1, end=' ')\n        print('')\n    elif n > 3:\n        print('3 5 1 2 4 ', end='')\n        for i in range(n, 5, -1):\n            print(i, end=' ')\n        print('')\n    else:\n        print('-1')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1 and n <= 3:\n        print(-1)\n    elif n == 5:\n        print(2, 5, 1, 3, 4)\n    elif n % 2 == 0:\n        a = []\n        for i in range(1, n + 1):\n            a.append(n + 1 - i)\n        print(*a)\n    else:\n        a = [2, 1]\n        a.append(n)\n        a.append(n - 2)\n        a.append(n - 1)\n        l = n - 3\n        while l >= 3:\n            a.append(l)\n            l -= 1\n        print(*a[::-1])", "from math import *\nfrom collections import *\nimport os\nfrom io import BytesIO, IOBase\nimport sys\nfrom bisect import *\nfrom heapq import *\nMOD = 1000000007\n\ndef subinp():\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('op1.txt', 'w')\n\ndef subinp_1():\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('op2.txt', 'w')\n\ndef binpow(a, b, m):\n    a %= m\n    x = 1\n    while b > 0:\n        if b & 1:\n            x = x * a % m\n        a = a * a % m\n        b >>= 1\n    return x\n\ndef binser(arr, l, r, x):\n    while l < r:\n        mid = l + (r - l) // 2\n        if arr[mid] == x:\n            return mid\n        elif arr[mid] < x:\n            l = mid + 1\n        else:\n            r = mid - 1\n    return mid\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef sod(n):\n    l = list(str(n))\n    s = 0\n    for i in l:\n        s += int(i)\n    return s\n\ndef prime_factors(num):\n    l = []\n    if num % 2:\n        l.append(2)\n    while num % 2 == 0:\n        num = num / 2\n    for i in range(3, int(sqrt(num)) + 1, 2):\n        if not num % i:\n            l.append(i)\n        while num % i == 0:\n            num = num / i\n    if num > 2:\n        l.append(num)\n    return l\n\ndef factmod(n, p):\n    f = defaultdict(int)\n    f[0] = 1\n    for i in range(1, n + 1):\n        f[i] = f[i - 1] * i % MOD\n    return f\n\ndef largestPower(n, p):\n    x = 0\n    while n:\n        n //= p\n        x += n\n    return x\n\ndef modFact(n, p):\n    if n >= p:\n        return 0\n    res = 1\n    isPrime = [1] * (n + 1)\n    i = 2\n    while i * i <= n:\n        if isPrime[i]:\n            for j in range(2 * i, n, i):\n                isPrime[j] = 0\n        i += 1\n    for i in range(2, n):\n        if isPrime[i]:\n            k = largestPower(n, i)\n            res = res * binpow(i, k, p) % p\n    return res\n\ndef drec(x, y):\n    if y == x + 1:\n        return 'R'\n    if y == x - 1:\n        return 'L'\n    if x < y:\n        return 'D'\n    return 'U'\n\ndef cellhash(x, y):\n    return (x - 1) * m + y\n\ndef bins(l, x, n):\n    i = bisect_left(l, x)\n    if i < n:\n        return i\n    if i:\n        return i - 1\n    else:\n        return n\n\ndef cond(l):\n    for i in range(len(l) - 1):\n        if l[i] == str(int(l[i + 1]) - 1):\n            return False\n    return True\n\ndef isvowel(s):\n    if s in list('aeiou'):\n        return 1\n    return 0\n\ndef countOdd(L, R):\n    N = (R - L) // 2\n    if R % 2 != 0 or L % 2 != 0:\n        N += 1\n    return N\n\ndef tst(A, B, C):\n    return (A | B) & (B | C) & (C | A)\n\ndef palcheck(n, s):\n    (i, j) = (0, n - 1)\n    while i <= j:\n        if s[i] == s[j]:\n            return False\n        i += 1\n        j -= 1\n    return True\n\ndef sakurajima(n):\n    if n < 9:\n        n = 10\n    l = [0]\n    for i in range(1, n + 1):\n        if i % 2:\n            l.append(i)\n        else:\n            l.append(2)\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if l[i] == i:\n            for j in range(i * i, n + 1, i):\n                if l[j] == j:\n                    l[j] = i\n    return l\n\ndef getfact(x):\n    ret = []\n    d = defaultdict(int)\n    while x != 1:\n        ret.append(spf[x] ** (d[spf[x]] + 1))\n        d[spf[x]] += 1\n        x = x // spf[x]\n    return ret\n\ndef prchck(n):\n    l = [1] * (n + 1)\n    l[1] = 0\n    for i in range(2, n + 1):\n        for j in range(2, int(sqrt(n)) + 1):\n            if j % i == 0:\n                l[j] = 1\n    return l\n\ndef ispal(s, n):\n    for i in range(n // 2):\n        if s[i] != s[n - i - 1]:\n            return False\n    return True\n\ndef bfs(src, dest, ajl, vis):\n    q = deque([src])\n    vis[src] = True\n    while q:\n        i = q.popleft()\n        if i == dest:\n            return True\n        for j in ajl[i]:\n            if not vis[j]:\n                vis[j] = True\n                q.append(j)\n    return False\n\ndef sieve(n):\n    if n < 9:\n        n = 10\n    l = [1] * (n + 1)\n    for i in range(2, int(n ** 0.5) + 1):\n        if l[i]:\n            for j in range(i ** 2, n + 1, i):\n                if j % i == 0:\n                    l[j] = 0\n    l[1] = 0\n    return l\n\nclass DisjSet:\n\n    def __init__(self, n):\n        self.size = [1] * n\n        self.parent = [i for i in range(n)]\n\n    def find(self, x):\n        if self.parent[x] != x:\n            self.parent[x] = self.find(self.parent[x])\n        return self.parent[x]\n\n    def union(self, x, y):\n        xset = self.find(x)\n        yset = self.find(y)\n        if xset == yset:\n            return\n        if self.size[xset] < self.size[yset]:\n            self.parent[xset] = yset\n            self.size[yset] += self.size[xset]\n        else:\n            self.parent[yset] = xset\n            self.size[xset] += self.size[yset]\n\ndef dfs(i, ajl, vis, l, x):\n    vis[i] = True\n    l[i] = x\n    for j in ajl[i]:\n        if not vis[j]:\n            dfs(j, ajl, vis, l, x)\n\ndef checkpo3(N):\n    while N > 0:\n        if N % 3 == 2:\n            return False\n        N //= 3\n    return True\n\ndef sumofdig(n):\n    ans = 0\n    s = str(n)\n    for i in s:\n        ans += int(i)\n    return ans\n\ndef convert(set):\n    return [*set]\ninp = lambda : int(input())\nstrin = lambda : input().strip()\nstrl = lambda : list(input().strip())\nstrlst = lambda : list(map(str, input().split()))\nmult = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nlstin = lambda : list(map(int, input().strip().split()))\nflush = lambda : stdout.flush()\nstdpr = lambda x: stdout.write(str(x))\n\ndef panda(n):\n    ans = []\n    if n == 1 or n == 3:\n        return [-1]\n    if n % 2:\n        ans = [3, 5, 1, 2, 4]\n        for i in range(n, 5, -1):\n            ans.append(i)\n        return ans\n    for i in range(n, 0, -1):\n        ans.append(i)\n    return ans\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\nt = 1\nt = int(input())\nfor _ in range(t):\n    n = inp()\n    ans = panda(n)\n    print(*ans)", "import math\nimport bisect\nimport heapq\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as ddc\nfrom collections import Counter\n\ndef intin():\n    return int(input())\n\ndef mapin():\n    return map(int, input().split())\n\ndef strin():\n    return input().split()\nINF = 10 ** 20\nmod = 1000000007\n\ndef exponentiation(bas, exp, mod=1000000007):\n    t = 1\n    while exp > 0:\n        if exp % 2 != 0:\n            t = t * bas % mod\n        bas = bas * bas % mod\n        exp //= 2\n    return t % mod\n\ndef MOD(p, q=1, mod=1000000007):\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\n\ndef process(N):\n    if N in [1, 3]:\n        return [-1]\n    ans = []\n    if not N % 2:\n        for i in range(1, N + 1, 2):\n            ans.append(i + 1)\n            ans.append(i)\n    else:\n        ans = [2, 3, 5, 1, 4]\n        for i in range(6, N + 1, 2):\n            ans.append(i + 1)\n            ans.append(i)\n    return ans\n\ndef main():\n    for _ in range(int(input())):\n        N = intin()\n        print(*process(N))\nmain()", "def ispo(n):\n    if n == 1 or n == 3:\n        print(-1)\n    elif n % 2 == 1:\n        for i in range(3, n):\n            print(i, end=' ')\n        print(1, n, 2)\n    else:\n        for i in range(n, 0, -1):\n            print(i, end=' ')\n        print()\nfor _ in range(int(input())):\n    ispo(int(input()))", "for z in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        if n == 1 or n == 3:\n            print('-1')\n        else:\n            s = '3 5 1 2 4 '\n            print(s)\n            for i in range(n, 5, -1):\n                print(i, end=' ')\n    else:\n        for i in range(1, n + 1):\n            print(n + 1 - i, end=' ')\n        print()"]