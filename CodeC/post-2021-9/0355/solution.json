["for t in range(int(input())):\n    n = int(input())\n    x = n + 1\n    arr = list(map(int, input().split()))\n    ans = [[-1] for i in range(x)]\n    for i in range(n):\n        ans[arr[i]] += [i]\n    arr = n * x // 2\n    for i in range(1, x):\n        ans[i] += [n]\n        arr -= sum((max(0, ans[i][j + 1] - ans[i][j] - i) for j in range(len(ans[i]) - 1)))\n    print(arr)", "for t in range(int(input())):\n    n = int(input())\n    x = n + 1\n    arr = list(map(int, input().split()))\n    ans = [[-1] for i in range(x)]\n    for i in range(n):\n        ans[arr[i]] += [i]\n    arr = n * x // 2\n    for i in range(1, x):\n        ans[i] += [n]\n        arr -= sum((max(0, ans[i][j + 1] - ans[i][j] - i) for j in range(len(ans[i]) - 1)))\n    print(arr)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "ans = []\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    last = [-1] * N\n    an = 0\n    for i in range(N):\n        s = max(0, i + 1 - A[i], 1 + last[A[i] - 1])\n        e = min(N - 1, i + A[i] - 1)\n        an += max(0, e - s - A[i] + 2)\n        last[A[i] - 1] = i\n    ans.append(an)\nprint(*ans, sep='\\n')", "t = int(input())\nwhile t:\n    n = int(input())\n    inp = list(map(int, input().split()))\n    myList = []\n    for i in range(0, n):\n        myList.append((inp[i], i + 1))\n    myList = sorted(myList, key=lambda element: (element[0], element[1]))\n    ans = 0\n    i = 0\n    while i < n:\n        firsti = i\n        secondi = i\n        while secondi < n:\n            if secondi + 1 == n:\n                break\n            if myList[secondi + 1][0] != myList[i][0]:\n                break\n            if myList[secondi + 1][1] - myList[secondi][1] >= myList[i][0]:\n                break\n            secondi += 1\n        firstindex = max(myList[i][1] - myList[i][0] + 1, 1)\n        secondindex = min(myList[secondi][1] + myList[secondi][0] - 1, n)\n        ans += secondindex - firstindex - myList[i][0] + 2\n        i = secondi + 1\n    print(f'{ans}')\n    t -= 1", "def appending(fil, lis, x):\n    for i in range(x):\n        fil[lis[i]] += [i]\n    return fil\n\ndef final(x, fill, add):\n    for i in range(1, x + 1):\n        fill[i] += [x]\n        add = add - sum((max(0, fill[i][s + 1] - fill[i][s] - i) for s in range(len(fill[i]) - 1)))\n    return add\n\ndef execute():\n    for _ in range(int(input())):\n        x = int(input())\n        lis = list(map(int, input().split()))\n        add = x * (x + 1) // 2\n        fil = []\n        for li in range(0, x + 1, 1):\n            fil.append([-1])\n        fill = appending(fil, lis, x)\n        print(final(x, fill, add))\nexecute()", "def appending(fil, lis, x):\n    for i in range(x):\n        fil[lis[i]] += [i]\n    return fil\n\ndef final(x, fill, add):\n    for i in range(1, x + 1):\n        fill[i] += [x]\n        add = add - sum((max(0, fill[i][s + 1] - fill[i][s] - i) for s in range(len(fill[i]) - 1)))\n    return add\n\ndef execute():\n    for _ in range(int(input())):\n        x = int(input())\n        lis = list(map(int, input().split()))\n        add = x * (x + 1) // 2\n        fil = []\n        for li in range(0, x + 1, 1):\n            fil.append([-1])\n        fill = appending(fil, lis, x)\n        print(final(x, fill, add))\nexecute()", "def appending(fil, lis, x):\n    for i in range(x):\n        fil[lis[i]] += [i]\n    return fil\n\ndef final(x, fill, add):\n    for i in range(1, x + 1):\n        fill[i] += [x]\n        add = add - sum((max(0, fill[i][s + 1] - fill[i][s] - i) for s in range(len(fill[i]) - 1)))\n    return add\n\ndef execute():\n    for _ in range(int(input())):\n        x = int(input())\n        lis = list(map(int, input().split()))\n        add = x * (x + 1) // 2\n        fil = []\n        for li in range(0, x + 1, 1):\n            fil.append([-1])\n        fill = appending(fil, lis, x)\n        print(final(x, fill, add))\nexecute()", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    visit = dict()\n    ans = 0\n    for (i, n) in enumerate(arr):\n        if n == 1:\n            ans += 1\n        else:\n            right = min(N - n, i)\n            left = max(0, i - (n - 1))\n            ans += right - left + 1\n            if n in visit:\n                ans -= max(visit[n] - left + 1, 0)\n            visit[n] = right\n    print(str(ans))", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    visit = dict()\n    ans = 0\n    for (i, n) in enumerate(arr):\n        if n == 1:\n            ans += 1\n        else:\n            right = min(N - n, i)\n            left = max(0, i - (n - 1))\n            ans += right - left + 1\n            if n in visit:\n                ans -= max(visit[n] - left + 1, 0)\n            visit[n] = right\n    print(str(ans))", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    nums = list(map(int, input().split()))\n    visited = dict()\n    answer = 0\n    for (index, num) in enumerate(nums):\n        if num == 1:\n            answer += 1\n        else:\n            right = min(N - num, index)\n            left = max(0, index - (num - 1))\n            answer += right - left + 1\n            if num in visited:\n                answer -= max(visited[num] - left + 1, 0)\n            visited[num] = right\n    print(str(answer))", "ans = []\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    last = [-1] * (N + 1)\n    an = 0\n    for i in range(N):\n        s = max(i - A[i], last[A[i]])\n        e = min(N - A[i], i)\n        an += max(0, e - s)\n        last[A[i]] = i\n    ans.append(an)\nprint(*ans, sep='\\n')", "def solve(n, arr):\n    res = 0\n    last_seen = {}\n    for i in range(n):\n        left = i - max(0, i - arr[i] + 1)\n        right = min(n - 1, i + arr[i] - 1) - i\n        if arr[i] in last_seen and last_seen[arr[i]] >= i - arr[i] + 1:\n            left = i - last_seen[arr[i]] - 1\n        size = left + right + 1\n        if size >= arr[i]:\n            res += size - arr[i] + 1\n        last_seen[arr[i]] = i\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "import math\n\ndef func(n, a):\n    res = 0\n    lastvistart = {i: -1 for i in range(1, n + 1)}\n    for i in range(n):\n        start = max(0, i - a[i] + 1)\n        end = min(i, n - a[i])\n        start = max(lastvistart[a[i]] + 1, start)\n        lastvistart[a[i]] = end\n        res += end - start + 1\n    return res\nq = int(input())\nfor i in range(q):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(func(n, a))", "ans = []\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    last = [-1] * (N + 1)\n    an = 0\n    for i in range(N):\n        s = max(i - A[i], last[A[i]])\n        e = min(N - A[i], i)\n        an += max(0, e - s)\n        last[A[i]] = i\n    ans.append(an)\nprint(*ans, sep='\\n')", "ans = []\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    last = [-1] * N\n    an = 0\n    for i in range(N):\n        s = max(i - A[i], last[A[i] - 1])\n        e = min(N, i + A[i])\n        an += max(0, e - s - A[i])\n        last[A[i] - 1] = i\n    ans.append(an)\nprint(*ans, sep='\\n')", "ans = []\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    last = [-1] * N\n    an = 0\n    for i in range(N):\n        s = max(0, i + 1 - A[i], 1 + last[A[i] - 1])\n        e = min(N - 1, i + A[i] - 1)\n        an += max(0, e - s - A[i] + 2)\n        last[A[i] - 1] = i\n    ans.append(an)\nprint(*ans, sep='\\n')", "t = int(input())\nfor tc in range(t):\n    x = int(input())\n    a = list(map(int, input().split()))\n    res = 0\n    z = [-1] * (x + 1)\n    for i in range(x):\n        l = max(z[a[i]] + 1, i - a[i] + 1)\n        r = min(i, x - a[i])\n        z[a[i]] = i\n        if r >= l:\n            res += r - l + 1\n    print(res)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dic = defaultdict(list)\n    for (i, x) in enumerate(l):\n        dic[x].append(i)\n    ans = 0\n    for x in dic:\n        if x > n:\n            continue\n        if x == 1:\n            ans += len(dic[x])\n            continue\n        a = dic[x]\n        for i in range(len(a)):\n            if i != 0:\n                left = max(0, a[i] - a[i - 1] - 1)\n            else:\n                left = a[i]\n            left = min(left, x - 1)\n            right = min(x - 1, n - 1 - a[i])\n            if left == x or right == x:\n                cnt = 1 + min(left, right)\n                ans += cnt\n            elif left + right + 1 >= x:\n                cnt = left + right + 1 - x + 1\n                ans += cnt\n    print(ans)", "def solve():\n    count = 0\n    visited = set()\n    last = {}\n    for ele in lst:\n        last[ele] = 0\n    for i in range(1, n + 1):\n        val = lst[i - 1]\n        l_bound = max(last[val] + 1, i - val + 1)\n        r_bound = min(i, n - val + 1)\n        last[val] = i\n        if r_bound >= l_bound:\n            count += r_bound - l_bound + 1\n    print(count)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    solve()", "def solve():\n    count = 0\n    visited = set()\n    last = {}\n    for ele in lst:\n        last[ele] = 0\n    for i in range(1, n + 1):\n        val = lst[i - 1]\n        l_bound = max(last[val] + 1, i - val + 1)\n        r_bound = min(i, n - val + 1)\n        last[val] = i\n        if r_bound >= l_bound:\n            count += r_bound - l_bound + 1\n    print(count)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    solve()", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    last = [-1] * (n + 1)\n    for i in range(n):\n        l = max(last[a[i]] + 1, i - a[i] + 1)\n        r = min(i, n - a[i])\n        last[a[i]] = i\n        if r >= l:\n            ans += r - l + 1\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    li = list(map(int, input().split()))\n    ans = 0\n    prev = [-1] * n\n    for i in range(n):\n        if i - li[i] + 1 >= 0:\n            st = i - li[i] + 1\n        else:\n            st = 0\n        if prev[li[i] - 1] != -1 and prev[li[i] - 1] >= st:\n            st = prev[li[i] - 1] + 1\n        if st + li[i] - 1 < n:\n            en = st + li[i] - 1\n        else:\n            en = n - 1\n        if en - st + 1 == li[i] and st <= en:\n            ans += min(i - st + 1, n - en)\n        prev[li[i] - 1] = i\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    last = [-1] * n\n    for i in range(n):\n        l = max(last[arr[i] - 1] + 1, i - arr[i] + 1)\n        r = min(n - arr[i], i)\n        last[arr[i] - 1] = i\n        if r >= l:\n            ans += r - l + 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    visited = []\n    for i in range(n):\n        visited.append(-1)\n    ans = 0\n    for i in range(n):\n        l = max(i - a[i] + 1, visited[a[i] - 1] + 1)\n        r = min(i + a[i] - 1, n - 1)\n        ans += a[i] - min(l - i + a[i] - 1 + (i + a[i] - 1 - r), a[i])\n        visited[a[i] - 1] = i\n    print(ans)", "def appending(fil, lis, x):\n    for i in range(x):\n        fil[lis[i]] += [i]\n    return fil\n\ndef final(x, fill, add):\n    for i in range(1, x + 1):\n        fill[i] += [x]\n        add = add - sum((max(0, fill[i][s + 1] - fill[i][s] - i) for s in range(len(fill[i]) - 1)))\n    return add\n\ndef execute():\n    for _ in range(int(input())):\n        x = int(input())\n        lis = list(map(int, input().split()))\n        add = x * (x + 1) // 2\n        fil = []\n        for li in range(0, x + 1, 1):\n            fil.append([-1])\n        fill = appending(fil, lis, x)\n        print(final(x, fill, add))\nexecute()", "for q in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "def appending(fil, lis, x):\n    for i in range(x):\n        fil[lis[i]] += [i]\n    return fil\n\ndef final(x, fill, add):\n    for i in range(1, x + 1):\n        fill[i] += [x]\n        add = add - sum((max(0, fill[i][s + 1] - fill[i][s] - i) for s in range(len(fill[i]) - 1)))\n    return add\n\ndef execute():\n    for _ in range(int(input())):\n        x = int(input())\n        lis = list(map(int, input().split()))\n        add = x * (x + 1) // 2\n        fil = []\n        for li in range(0, x + 1, 1):\n            fil.append([-1])\n        fill = appending(fil, lis, x)\n        print(final(x, fill, add))\nexecute()", "for t in range(int(input())):\n    n = int(input())\n    x = n + 1\n    arr = list(map(int, input().split()))\n    ans = [[-1] for i in range(x)]\n    for i in range(n):\n        ans[arr[i]] += [i]\n    arr = n * x // 2\n    for i in range(1, x):\n        ans[i] += [n]\n        arr -= sum((max(0, ans[i][j + 1] - ans[i][j] - i) for j in range(len(ans[i]) - 1)))\n    print(arr)", "j = int(input())\nfor o in range(j):\n    number = int(input())\n    l = [int(a) for a in input().split()]\n    c = [[-1] for i in range(number + 1)]\n    for i in range(number):\n        c[l[i]] += [i]\n    h = number * (number + 1) // 2\n    reslt = h\n    for i in range(1, number + 1):\n        c[i] += [number]\n        reslt -= sum((max(0, c[i][j + 1] - c[i][j] - i) for j in range(len(c[i]) - 1)))\n    print(reslt)", "j = int(input())\nfor o in range(j):\n    number = int(input())\n    l = [int(a) for a in input().split()]\n    c = [[-1] for i in range(number + 1)]\n    for i in range(number):\n        c[l[i]] += [i]\n    reslt = number * (number + 1) // 2\n    for i in range(1, number + 1):\n        c[i] += [number]\n        reslt -= sum((max(0, c[i][j + 1] - c[i][j] - i) for j in range(len(c[i]) - 1)))\n    print(reslt)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = n + 1\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = n + 1\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "try:\n    for i in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        ladoo = 0\n        cutoo = set()\n        nary = {}\n        for i in range(n):\n            if l[i] not in nary.keys():\n                nary[l[i]] = []\n            if i - l[i] + 1 < 0:\n                if i + l[i] - 1 <= n - 1:\n                    nary[l[i]].append([0, i + 1])\n                else:\n                    nary[l[i]].append([0, n - l[i] + 1])\n            elif i + l[i] - 1 <= n - 1:\n                nary[l[i]].append([i - l[i] + 1, i + 1])\n            else:\n                nary[l[i]].append([i - l[i] + 1, i - l[i] + 1 + n - i])\n        ladoo = 0\n        for i in nary.keys():\n            l = nary[i]\n            ladoo += l[0][1] - l[0][0]\n            for t in range(1, len(l)):\n                if l[t][0] >= l[t - 1][1]:\n                    ladoo += l[t][1] - l[t][0]\n                else:\n                    ladoo += l[t][1] - l[t - 1][1]\n        print(ladoo)\nexcept Exception as e:\n    pass", "for q in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "tests = int(input())\nfor t0 in range(tests):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    counts = 0\n    pairs = dict()\n    for i in range(n):\n        n1 = arr[i]\n        s = max(0, i + 1 - n1)\n        if arr[i] in pairs:\n            if pairs[arr[i]] >= s:\n                s = pairs[arr[i]] + 1\n        if s + n1 - 1 >= n:\n            s1 = n - 1\n        else:\n            s1 = s + n1 - 1\n        if s1 - s + 1 != n1 or s > s1:\n            continue\n        else:\n            pairs[arr[i]] = i\n        counts += min(n - s1, 1 + i - s)\n    print(counts)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    count = 0\n    dict_count = {}\n    for idx in range(n):\n        sub_len = arr[idx]\n        start_idx = 0\n        if idx - sub_len + 1 >= 0:\n            start_idx = idx - sub_len + 1\n        if arr[idx] in dict_count and dict_count[arr[idx]] >= start_idx:\n            start_idx = dict_count[arr[idx]] + 1\n        end_idx = start_idx + sub_len - 1\n        if start_idx + sub_len - 1 > n:\n            end_idx = n - 1\n        if end_idx - start_idx + 1 != sub_len or start_idx > end_idx:\n            continue\n        count += min(idx - start_idx + 1, n - end_idx)\n        dict_count[arr[idx]] = idx\n    print(count)", "t1 = int(input())\nfor i in range(t1):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    x = []\n    for y in range(n1 + 1):\n        x += [[-1]]\n    for j in range(n1):\n        x[l[j]] += [j]\n    z = n1 * (n1 + 1) // 2\n    for j in range(1, n1 + 1):\n        x[j] += [n1]\n        for k in range(len(x[j]) - 1):\n            z -= max(0, x[j][k + 1] - x[j][k] - j)\n    print(z)", "for _ in range(int(input())):\n    n = int(input())\n    m = n + 1\n    lst = list(map(int, input().split()))\n    arr = [[-1] for i in range(m)]\n    for i in range(n):\n        arr[lst[i]] += [i]\n    lst = n * m // 2\n    for i in range(1, m):\n        arr[i] += [n]\n        lst -= sum((max(0, arr[i][j + 1] - arr[i][j] - i) for j in range(len(arr[i]) - 1)))\n    print(lst)", "import numpy as np\n\ndef subarray_len():\n    input()\n    arr = list(map(int, input().split()))\n    indexed_elems = {}\n    for (i, elem) in enumerate(arr):\n        indexed_elems.setdefault(elem, list()).append(i)\n    count = 0\n    for elem in indexed_elems.keys():\n        last_left = 0\n        for i in indexed_elems[elem]:\n            r = min(len(arr), i + elem)\n            l = max(last_left, i - elem + 1)\n            count += max(0, r - elem + 1 - l)\n            last_left = i + 1\n    return count\n\ndef submission():\n    t = int(input())\n    for i in range(t):\n        print(subarray_len())\nsubmission()", "tests = int(input())\nfor i in range(tests):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    dis = {}\n    cos = 0\n    for i in range(0, n):\n        a = ls[i]\n        l = i - a + 1\n        r = a + i - 1\n        car = 0\n        if a in dis:\n            if l <= dis[a]:\n                car = l - (dis[a] + 1)\n                l = dis[a] + 1\n        sm = a + car\n        if l < 0:\n            sm = sm + l\n        if r > n - 1:\n            sm = sm - (r - (n - 1))\n        if sm > 0:\n            cos = cos + sm\n        dis[a] = i\n    print(cos)", "import math\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    dis = {}\n    cos = 0\n    for i in range(0, n):\n        a = ls[i]\n        l = i - a + 1\n        r = a + i - 1\n        car = 0\n        if a in dis:\n            if l <= dis[a]:\n                car = l - (dis[a] + 1)\n                l = dis[a] + 1\n        sm = a + car\n        if l < 0:\n            sm = sm + l\n        if r > n - 1:\n            sm = sm - (r - (n - 1))\n        if sm > 0:\n            cos = cos + sm\n        dis[a] = i\n    print(cos)", "import numpy as np\n\ndef subarray_len():\n    input()\n    arr = list(map(int, input().split()))\n    indexed_elems = {}\n    for (i, elem) in enumerate(arr):\n        indexed_elems.setdefault(elem, list()).append(i)\n    count = 0\n    for elem in indexed_elems.keys():\n        last_left = 0\n        for i in indexed_elems[elem]:\n            r = min(len(arr), i + elem)\n            l = max(last_left, i - elem + 1)\n            count += max(0, r - elem + 1 - l)\n            last_left = i + 1\n    return count\n\ndef submission():\n    t = int(input())\n    for i in range(t):\n        print(subarray_len())\nsubmission()", "for q in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    m = n + 1\n    arr = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[arr[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "for test in range(int(input())):\n    number = int(input())\n    mass = number + 1\n    array = list(map(int, input().split()))\n    pas = [[-1] for i in range(mass)]\n    for i in range(number):\n        pas[array[i]] += [i]\n    array = number * mass // 2\n    for i in range(1, mass):\n        pas[i] += [number]\n        array -= sum((max(0, pas[i][j + 1] - pas[i][j] - i) for j in range(len(pas[i]) - 1)))\n    print(array)", "for test in range(int(input())):\n    number = int(input())\n    mass = number + 1\n    array = list(map(int, input().split()))\n    pas = [[-1] for i in range(mass)]\n    for i in range(number):\n        pas[array[i]] += [i]\n    array = number * mass // 2\n    for i in range(1, mass):\n        pas[i] += [number]\n        array -= sum((max(0, pas[i][j + 1] - pas[i][j] - i) for j in range(len(pas[i]) - 1)))\n    print(array)", "def binary_search(arr, low, high, x):\n    if high >= low:\n        mid = (high + low) // 2\n        if arr[mid] == x:\n            return mid\n        elif arr[mid] > x:\n            return binary_search(arr, low, mid - 1, x)\n        else:\n            return binary_search(arr, mid + 1, high, x)\n    else:\n        return -1\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    d = dict()\n    maxi = binary_search(l, 0, n - 1, 12)\n    ans = 0\n    for i in range(n):\n        (s, new_size) = (l[i], None)\n        if i - s + 1 >= 0:\n            new_size = i - s + 1\n        else:\n            new_size = 0\n        if l[i] in d and d.get(l[i]) >= new_size:\n            new_size = d.get(l[i]) + 1\n        a = None\n        if new_size + s - 1 < n:\n            a = new_size + s - 1\n        else:\n            a = n - 1\n        if a - new_size + 1 != s or new_size > a:\n            continue\n        ans = ans + min(i - new_size + 1, n - a)\n        d[l[i]] = i\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = [[-1] for i in range(n + 1)]\n    for i in range(n):\n        x[a[i]] += [i]\n    ans = n * (n + 1) // 2\n    for i in range(1, n + 1):\n        x[i] += [n]\n        ans = ans - sum((max(0, x[i][j + 1] - x[i][j] - i) for j in range(len(x[i]) - 1)))\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    long = len(lst)\n    dic = {}\n    times = 0\n    toremove = 0\n    for l in range(n):\n        item_lst = dic.get(lst[l], None)\n        if item_lst is None:\n            item_lst = [l]\n            dic[lst[l]] = item_lst\n        else:\n            item_lst.append(l)\n    for (key, items) in dic.items():\n        times = times + key * len(items)\n        for i in range(1, len(items)):\n            diff = items[i] - items[i - 1]\n            diff = key - diff\n            if diff > 0:\n                toremove = toremove + diff\n        for i in range(len(items)):\n            diff = key - items[i] - 1\n            if diff > 0:\n                toremove = toremove + diff\n                break\n        for i in range(len(items) - 1, -1, -1):\n            diff = key - (n - items[i])\n            if diff > 0:\n                toremove += diff\n                break\n    times = times - toremove\n    print(times)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    res = 0\n    d = {}\n    for i in range(n):\n        l = a[i]\n        if i - l + 1 >= 0:\n            si = i - l + 1\n        else:\n            si = 0\n        if a[i] in d and d[a[i]] >= si:\n            si = d[a[i]] + 1\n        if si + l - 1 >= n:\n            ei = n - 1\n        else:\n            ei = si + l - 1\n        if ei - si + 1 != l or si > ei:\n            continue\n        res += min(i - si + 1, n - ei)\n        d[a[i]] = i\n    print(res)", "for _ in range(int(input())):\n    c = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        m = l[i]\n        if m == 1:\n            c += 1\n        else:\n            if m not in d:\n                d[m] = i\n                k = -1\n            else:\n                k = d[m]\n                d[m] = i\n            if i == k:\n                f = 0\n            else:\n                f = i - k - 1\n            j = n - i\n            if f + j < m:\n                continue\n            c += 1\n            if f == 0 or j == 1 or f + j == m:\n                continue\n            if f + 1 >= m and j >= m:\n                c += m - 1\n            else:\n                c += min(f, j - 1, f + j - m)\n    print(c)", "for q in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "for abhi in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [[-1] for i in range(n + 1)]\n    for i in range(n):\n        b[a[i]] += [i]\n    c = n * (n + 1) // 2\n    for i in range(1, n + 1):\n        b[i] += [n]\n        for j in range(len(b[i]) - 1):\n            c -= max(0, b[i][j + 1] - b[i][j] - i)\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = {}\n    ans = 0\n    for i in range(n):\n        sI = max(0, i - arr[i] + 1)\n        if arr[i] in m and m[arr[i]] >= sI:\n            sI = m[arr[i]] + 1\n        eI = min(n - 1, sI + arr[i] - 1)\n        if eI - sI + 1 != arr[i]:\n            continue\n        ans += min(i - sI + 1, n - eI)\n        m[arr[i]] = i\n    print(ans)", "for abhi in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [[-1] for i in range(n + 1)]\n    for i in range(n):\n        b[a[i]] += [i]\n    c = n * (n + 1) // 2\n    for i in range(1, n + 1):\n        b[i] += [n]\n        c -= sum((max(0, b[i][j + 1] - b[i][j] - i) for j in range(len(b[i]) - 1)))\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "for q in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ans = 0\n    dict = {}\n    for i in range(n):\n        le = arr[i]\n        si = max(i - le + 1, 0)\n        if le in dict.keys() and dict[le] >= si:\n            si = dict[le] + 1\n        ei = min(si + le - 1, n - 1)\n        if ei - si + 1 != le or si > ei:\n            continue\n        ans += min(i - si + 1, n - ei)\n        dict[le] = i\n    print(ans)", "def solution():\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    a = [[-1] for i in range(n + 1)]\n    for i in range(n):\n        a[l[i]] += [i]\n    s = n * (n + 1) // 2\n    for i in range(1, n + 1):\n        a[i] += [n]\n        s -= sum((max(0, a[i][j + 1] - a[i][j] - i) for j in range(len(a[i]) - 1)))\n    print(s)\nfor i in range(int(input())):\n    solution()", "try:\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(a) for a in input().split()]\n        c = 0\n        d = {}\n        for j in range(0, n):\n            l = j - a[j] + 1\n            if l < 0:\n                l = 0\n            if (a[j] in d) == True and l <= d[a[j]]:\n                l = d[a[j]] + 1\n            r = l + a[j] - 1\n            if r >= n:\n                r = n - 1\n            if r - l + 1 == a[j]:\n                c = c + min(j - l + 1, n - r)\n            d[a[j]] = j\n        print(c)\nexcept:\n    pass", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    prev_index = [-1] * (2 * 10 ** 5 + 1)\n    for i in range(n):\n        j = i\n        if prev_index[arr[i]] != -1:\n            ref = n - 1 - prev_index[arr[i]]\n            j = j - (prev_index[arr[i]] + 1)\n        else:\n            ref = n\n        value = 0\n        if ref - arr[i] >= 0:\n            left = j + 1\n            right = ref - 1 - j + 1\n            if left <= arr[i] or right <= arr[i]:\n                value = min(left, right)\n            else:\n                value = arr[i]\n            if ref - arr[i] + 1 < arr[i]:\n                value = min(value, ref - arr[i] + 1)\n        ans += value\n        prev_index[arr[i]] = i\n    print(ans)", "for tc in range(int(input())):\n    p = int(input())\n    arr = list(map(int, input().split()))\n    r = p + 1\n    t = [[-1] for i in range(r)]\n    for i in range(p):\n        t[arr[i]] += [i]\n    arr = p * r // 2\n    for i in range(1, r):\n        t[i] += [p]\n        arr -= sum((max(0, t[i][j + 1] - t[i][j] - i) for j in range(len(t[i]) - 1)))\n    print(arr)", "for t in range(int(input())):\n    n = int(input())\n    c = n + 1\n    a = list(map(int, input().split()))\n    b = [[-1] for i in range(c)]\n    for i in range(n):\n        b[a[i]] += [i]\n    a = n * c // 2\n    for i in range(1, c):\n        b[i] += [n]\n        a -= sum((max(0, b[i][j + 1] - b[i][j] - i) for j in range(len(b[i]) - 1)))\n    print(a)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    array = input().split()\n    Count = 0\n    dic = {}\n    for i in range(0, n):\n        len = int(array[i])\n        Subarray_index1 = i - len + 1 if i - len + 1 >= 0 else 0\n        if int(array[i]) in dic.keys() and dic[int(array[i])] >= Subarray_index1:\n            Subarray_index1 = dic[int(array[i])] + 1\n        Subarray_index2 = n - 1 if Subarray_index1 + len - 1 >= n else Subarray_index1 + len - 1\n        if Subarray_index2 - Subarray_index1 + 1 != len or Subarray_index1 > Subarray_index2:\n            continue\n        Count += min(i + 1 - Subarray_index1, n - Subarray_index2)\n        dic[int(array[i])] = i\n    print(Count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    dp = [0] * (n + 1)\n    ans = 0\n    for i in range(n):\n        ans += max(0, min(n - a[i], i) - max(i - a[i] + 1, dp[a[i]]) + 1)\n        dp[a[i]] = i + 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    dummy_array = [[-1] for i in range(n + 1)]\n    for i in range(n):\n        if i < 0:\n            break\n        dummy_array[A[i]] += [i]\n    A = n * (n + 1) // 2\n    for i in range(1, n + 1):\n        dummy_array[i] += [n]\n        A -= sum((max(0, dummy_array[i][j + 1] - dummy_array[i][j] - i) for j in range(len(dummy_array[i]) - 1)))\n    print(A)", "for testcase in range(int(input())):\n    n = int(input())\n    cnt = n + 1\n    harshal = list(map(int, input().split()))\n    rrr = [[-1] for i in range(cnt)]\n    for i in range(n):\n        rrr[harshal[i]] += [i]\n    harshal = n * cnt // 2\n    for i in range(1, cnt):\n        rrr[i] += [n]\n        harshal -= sum((max(0, rrr[i][j + 1] - rrr[i][j] - i) for j in range(len(rrr[i]) - 1)))\n    print(harshal)", "from collections import defaultdict\n\ndef overlap(d, n, var):\n    for (i, j) in d.items():\n        t = d[i][0]\n        for k in range(1, len(j)):\n            if d[i][k] - t <= i - 1:\n                cur = d[i][k] - 1 - min(d[i][k] - 1, i - 1)\n                var += min(min(t - 1 - cur, i - 1), n - (cur + i - 1))\n                if t - 1 + i - 1 < n:\n                    var += 1\n            t = d[i][k]\n    return var\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = defaultdict(list)\n    for i in range(n):\n        d[a[i]].append(i + 1)\n    ans = 1\n    for i in range(1, n):\n        temp = 0\n        if a[i] == 1:\n            temp += 1\n        else:\n            cur = i - min(i, a[i] - 1)\n            temp += min(min(i, a[i] - 1), n - (cur + a[i] - 1))\n            if i + a[i] - 1 < n:\n                temp += 1\n        ans += temp\n    print(ans - overlap(d, n, 0))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    f1 = []\n    d = {}\n    ans = 0\n    for i in range(0, n):\n        num = arr[i]\n        newindex = i + 1\n        st = max(1, newindex - num + 1)\n        en = min(n, newindex + num - 1)\n        if num in d.keys() and newindex - d[num] < num:\n            st = d[num] + 1\n        if en - st + 1 < num:\n            continue\n        curr = en - st + 1 - num + 1\n        ans += curr\n        d[num] = newindex\n    print(ans)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "for i in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "for i in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "for i in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "t = int(input())\nfor l in range(t):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "for testcase in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    dp = [[-1] for i in range(m)]\n    for i in range(n):\n        dp[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        dp[i] += [n]\n        a -= sum((max(0, dp[i][j + 1] - dp[i][j] - i) for j in range(len(dp[i]) - 1)))\n    print(a)", "for q in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, m):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "for i in range(int(input())):\n    n = int(input())\n    some = list(map(int, input().split()))\n    a = n + 1\n    g = [[-1] for j in range(a)]\n    for j in range(n):\n        g[some[j]] += [j]\n    some = n * a // 2\n    for i in range(1, a):\n        g[i] += [n]\n        some -= sum((max(0, g[i][j + 1] - g[i][j] - i) for j in range(len(g[i]) - 1)))\n    print(some)", "def subarraay_len(n: int, num: list) -> int:\n    max_total = 0\n    memo = {}\n    for (index, ele) in enumerate(num):\n        total = ele\n        count_to_reduce = 0\n        if ele in memo:\n            diff = index - memo[ele]\n            if diff < ele:\n                count_to_reduce += ele - diff\n        elif index < ele - 1:\n            count_to_reduce += ele - 1 - index\n        memo[ele] = index\n        if n - index < ele:\n            count_to_reduce += ele - (n - index)\n        total -= count_to_reduce\n        max_total += max(total, 0)\n    return max_total\n\ndef main():\n    test = int(input())\n    for _ in range(test):\n        n = int(input())\n        arr = list(map(int, input().strip().split()))\n        print(subarraay_len(n, arr))\nmain()", "for x in range(int(input())):\n    n = int(input())\n    z = n + 1\n    a = list(map(int, input().split()))\n    q = [[-1] for i in range(z)]\n    for x1 in range(n):\n        q[a[x1]] += [x1]\n    a = n * z // 2\n    for y in range(1, z):\n        q[y] += [n]\n        a -= sum((max(0, q[y][j + 1] - q[y][j] - y) for j in range(len(q[y]) - 1)))\n    print(a)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ct = 0\n    d = defaultdict(lambda : -1)\n    for p in range(n):\n        v = a[p]\n        f = d[v]\n        if f == -1:\n            f = 0\n        else:\n            f = f + 1\n        z1 = min(0, p - f - v + 1)\n        z2 = min(0, n - 1 - p - v + 1)\n        ct += v + max(-v, z1 + z2)\n        d[v] = p\n    print(ct)", "def main():\n    for _ in range(int(input())):\n        N = int(input())\n        values = [int(x) for x in input().split(' ')]\n        HM = dict()\n        ans = 0\n        for i in range(N):\n            lenArr = values[i]\n            if i - lenArr + 1 >= 0:\n                si = i - lenArr + 1\n            else:\n                si = 0\n            if values[i] in HM.keys() and HM[values[i]] >= si:\n                si = HM[values[i]] + 1\n            if si + lenArr - 1 >= N:\n                ei = N - 1\n            else:\n                ei = si + lenArr - 1\n            if ei - si + 1 != lenArr or si > ei:\n                continue\n            ans += min(i - si + 1, N - ei)\n            HM[values[i]] = i\n        print(ans)\nmain()", "from collections import Counter, deque, defaultdict, namedtuple\nfrom math import *\nfrom random import randint\nimport itertools\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    d = defaultdict(int)\n    for i in range(n):\n        start = max(d[a[i]], i - a[i] + 1)\n        end = min(a[i] + i - 1, n - 1)\n        if end - start + 1 >= a[i]:\n            ans += max(0, end - start + 1 - a[i]) + 1\n        d[a[i]] = i + 1\n    print(ans)\ntestCases = int(input())\nfor i in range(testCases):\n    solve()", "for _ in range(int(input())):\n    num = int(input())\n    inp = list(map(int, input().split()))\n    par = num + 1\n    x = [[-1] for i in range(par)]\n    for i in range(num):\n        x[inp[i]] += [i]\n    yes = num * par // 2\n    for i in range(1, par):\n        x[i] += [num]\n        yes -= sum((max(0, x[i][j + 1] - x[i][j] - i) for j in range(len(x[i]) - 1)))\n    print(yes)", "T = int(input())\nwhile T > 0:\n    n = int(input())\n    lst = input().split()\n    count = 0\n    dic = {}\n    for i in range(n):\n        if lst[i] in dic and dic[lst[i]] + int(lst[i]) > i:\n            si = dic[lst[i]] + 1\n            ei = si + int(lst[i]) - 1\n        elif int(lst[i]) - 1 >= i:\n            si = 0\n            ei = int(lst[i]) - 1\n        else:\n            si = i - int(lst[i]) + 1\n            ei = i\n        if ei >= n:\n            continue\n        l = i - si + 1\n        r = n - 1 - ei + 1\n        if l >= r:\n            count += r\n        else:\n            count += l\n        dic[lst[i]] = i\n    print(count)\n    T -= 1", "for _ in range(int(input())):\n    N = int(input())\n    M = N + 1\n    A = list(map(int, input().split()))\n    S = [[-1] for i in range(M)]\n    for i in range(N):\n        S[A[i]] += [i]\n    A = N * M // 2\n    for i in range(1, M):\n        S[i] += [N]\n        A -= sum((max(0, S[i][j + 1] - S[i][j] - i) for j in range(len(S[i]) - 1)))\n    print(A)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    diction = dict()\n    count = 0\n    for i in range(n):\n        l = arr[i]\n        if i - l + 1 >= 0:\n            a = i - l + 1\n        else:\n            a = 0\n        if arr[i] in diction and diction[arr[i]] >= a:\n            a = diction[arr[i]] + 1\n        if a + l - 1 >= n:\n            b = n - 1\n        else:\n            b = a + l - 1\n        if b - a + 1 != l or a > b:\n            continue\n        count += min(i - a + 1, n - b)\n        diction[arr[i]] = i\n    print(count)", "from collections import *\nfor n in [*open(0)][2::2]:\n    (a, b, c) = ([*map(int, n.split())], defaultdict(lambda : -1), 0)\n    for (i, j) in enumerate(a):\n        (v, b[j]) = (b[j], i)\n        c += max(0, i - max(i - j + 1, v + 1) - max(0, i + j - len(a)) + 1)\n    print(c)", "t = int(input())\nfor i in range(0, t):\n    N = int(input())\n    M = N + 1\n    A = list(map(int, input().split()))\n    X = [[-1] for i in range(M)]\n    for i in range(N):\n        X[A[i]] += [i]\n    A = N * M // 2\n    for i in range(1, M):\n        X[i] += [N]\n        A -= sum((max(0, X[i][j + 1] - X[i][j] - i) for j in range(len(X[i]) - 1)))\n    print(A)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    temp_dict = {}\n    for i in range(len(a)):\n        number = a[i]\n        left_max = min(i, number - 1)\n        right_max = min(n - i - 1, number - 1)\n        if number in temp_dict:\n            new_left = i - temp_dict[number] - 1\n            left_max = min(left_max, new_left)\n        temp_dict[number] = i\n        total_window = right_max + left_max + 1\n        slide = total_window - number + 1\n        count += max(slide, 0)\n    print(count)", "for i in range(int(input())):\n    input()\n    was = {}\n    coun = 0\n    arr = [int(s) for s in input().split(' ')]\n    N = len(arr)\n    dic = {}\n    for i in range(N):\n        k = arr[i]\n        l = max(i - (k - 1), 0)\n        r = min(i + (k - 1), N - 1)\n        if k in dic:\n            if i - dic[k] < k:\n                l = min(dic[k] + 1, N - 1)\n        num = max(r - k + 1 - l + 1, 0)\n        coun += num\n        dic[k] = i\n    print(coun)", "for _ in range(int(input())):\n    d = {}\n    ans = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        start = i - l[i] + 1\n        if start < 0:\n            start = 0\n        if l[i] in d and d[l[i]] >= start:\n            start = d[l[i]] + 1\n        end = start + l[i] - 1\n        if end > n:\n            end = n - 1\n        if end - start + 1 != l[i] or start > end:\n            continue\n        ans += min(i - start + 1, n - end)\n        d[l[i]] = i\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    m = n + 1\n    a = list(map(int, input().split()))\n    p = [[-1] for i in range(m)]\n    for i in range(n):\n        p[a[i]] += [i]\n    a = n * m // 2\n    for i in range(1, n + 1):\n        p[i] += [n]\n        a -= sum((max(0, p[i][j + 1] - p[i][j] - i) for j in range(len(p[i]) - 1)))\n    print(a)", "for _ in range(int(input())):\n    d = {}\n    ans = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        start = i - l[i] + 1\n        if start < 0:\n            start = 0\n        if l[i] in d and d[l[i]] >= start:\n            start = d[l[i]] + 1\n        end = start + l[i] - 1\n        if end > n:\n            end = n - 1\n        if end - start + 1 != l[i] or start > end:\n            continue\n        ans += min(i - start + 1, n - end)\n        d[l[i]] = i\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    hashmap = dict()\n    for i in range(n):\n        length = arr[i]\n        if i - length + 1 >= 0:\n            si = i - length + 1\n        else:\n            si = 0\n        if arr[i] in hashmap and hashmap[arr[i]] >= si:\n            si = hashmap[arr[i]] + 1\n        if si + length - 1 >= n:\n            ei = n - 1\n        else:\n            ei = si + length - 1\n        if ei - si + 1 != length or si > ei:\n            continue\n        count += min(i - si + 1, n - ei)\n        hashmap[arr[i]] = i\n    print(count)"]