["for _ in range(int(input())):\n    (N, A, B) = map(int, input().split())\n    (A_Temp, B_Temp) = (A, B)\n    C = 0\n    D = 0\n    E = 0\n    for i in range(N):\n        currentBit = 2 ** (N - i - 1)\n        count = 0\n        if A_Temp >= currentBit:\n            A_Temp -= currentBit\n            count += 1\n        if B_Temp >= currentBit:\n            B_Temp -= currentBit\n            count += 1\n        if count == 1 and D == 0:\n            D += currentBit\n        elif count == 1:\n            E += currentBit\n        elif count == 2 or count == 0:\n            C += currentBit\n    Sum = 2 ** N - C - 1\n    D = Sum - E\n    X = C + D ^ A\n    print(X)", "for _ in range(int(input())):\n    (N, A, B) = map(int, input().split())\n    (A_Temp, B_Temp) = (A, B)\n    C = 0\n    D = 0\n    E = 0\n    for i in range(N):\n        currentBit = 2 ** (N - i - 1)\n        count = 0\n        if A_Temp >= currentBit:\n            A_Temp -= currentBit\n            count += 1\n        if B_Temp >= currentBit:\n            B_Temp -= currentBit\n            count += 1\n        if count == 1 and D == 0:\n            D += currentBit\n        elif count == 1:\n            E += currentBit\n        elif count == 2 or count == 0:\n            C += currentBit\n    Sum = 2 ** N - C - 1\n    D = Sum - E\n    Max = C ** 2 + C * Sum + E * D\n    X = C + D ^ A\n    print(X)", "t = int(input())\nwhile t > 0:\n    (n, a, b) = map(int, input().split())\n    xor = 0\n    flag = False\n    for i in range(n - 1, -1, -1):\n        if a & 1 << i and b & 1 << i:\n            continue\n        elif a & 1 << i == 0 and b & 1 << i == 0:\n            xor = xor | 1 << i\n        elif flag == False:\n            if a & 1 << i == 0:\n                xor = xor | 1 << i\n            flag = True\n        elif b & 1 << i == 0:\n            xor = xor | 1 << i\n    print(xor)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, a, b) = map(int, input().split())\n    xor = 0\n    flag = False\n    for i in range(n - 1, -1, -1):\n        if a & 1 << i and b & 1 << i:\n            continue\n        elif a & 1 << i == 0 and b & 1 << i == 0:\n            xor = xor | 1 << i\n        elif flag == False:\n            if a & 1 << i == 0:\n                xor = xor | 1 << i\n            flag = True\n        elif b & 1 << i == 0:\n            xor = xor | 1 << i\n    print(xor)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, a, b) = map(int, input().split())\n    xor = 0\n    flag = False\n    for i in range(n - 1, -1, -1):\n        if a & 1 << i and b & 1 << i:\n            continue\n        elif a & 1 << i == 0 and b & 1 << i == 0:\n            xor = xor | 1 << i\n        elif flag == False:\n            if a & 1 << i == 0:\n                xor = xor | 1 << i\n            flag = True\n        elif b & 1 << i == 0:\n            xor = xor | 1 << i\n    print(xor)\n    t -= 1", "def solve():\n    for t in range(int(input())):\n        (N, A, B) = list(map(int, input().split()))\n        x = 0\n        flag = False\n        for i in range(N - 1, -1, -1):\n            if A & 1 << i == B & 1 << i:\n                if A & 1 << i == 0:\n                    x += 1 << i\n            elif flag == False:\n                flag = True\n                if A & 1 << i == 0:\n                    x += 1 << i\n            elif B & 1 << i == 0:\n                x += 1 << i\n        print(x)\nsolve()", "def solve():\n    for T in range(int(input())):\n        (n, a, b) = list(map(int, input().split()))\n        X = 0\n        flag = False\n        for i in range(n - 1, -1, -1):\n            if a & 1 << i == b & 1 << i:\n                if a & 1 << i == 0:\n                    X += 1 << i\n            elif flag == False:\n                flag = True\n                if a & 1 << i == 0:\n                    X += 1 << i\n            elif b & 1 << i == 0:\n                X += 1 << i\n        print(X)\nsolve()", "def solve():\n    for T in range(int(input())):\n        (n, a, b) = list(map(int, input().split()))\n        X = 0\n        flag = False\n        for i in range(n - 1, -1, -1):\n            if a & 1 << i == b & 1 << i:\n                if a & 1 << i == 0:\n                    X += 1 << i\n            elif flag == False:\n                flag = True\n                if a & 1 << i == 0:\n                    X += 1 << i\n            elif b & 1 << i == 0:\n                X += 1 << i\n        print(X)\nsolve()", "def solve():\n    for t in range(int(input())):\n        (N, A, B) = list(map(int, input().split()))\n        x = 0\n        flag = False\n        for i in range(N - 1, -1, -1):\n            if A & 1 << i == B & 1 << i:\n                if A & 1 << i == 0:\n                    x += 1 << i\n            elif flag == False:\n                flag = True\n                if A & 1 << i == 0:\n                    x += 1 << i\n            elif B & 1 << i == 0:\n                x += 1 << i\n        print(x)\nsolve()", "t = int(input())\nwhile t > 0:\n    (n, a, b) = map(int, input().split())\n    xor = 0\n    flag = False\n    for i in range(n - 1, -1, -1):\n        if a & 1 << i and b & 1 << i:\n            continue\n        elif a & 1 << i == 0 and b & 1 << i == 0:\n            xor = xor | 1 << i\n        elif flag == False:\n            if a & 1 << i == 0:\n                xor = xor | 1 << i\n            flag = True\n        elif b & 1 << i == 0:\n            xor = xor | 1 << i\n    print(xor)\n    t -= 1", "def sol():\n    (n, a, b) = map(int, input().split())\n    xor = 0\n    flag = False\n    for i in range(n - 1, -1, -1):\n        if a & 1 << i and b & 1 << i:\n            continue\n        elif a & 1 << i == 0 and b & 1 << i == 0:\n            xor = xor | 1 << i\n        elif flag == False:\n            if a & 1 << i == 0:\n                xor = xor | 1 << i\n            flag = True\n        elif b & 1 << i == 0:\n            xor = xor | 1 << i\n    print(xor)\nfor _ in range(int(input())):\n    sol()", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    big_bin_a = '{:032b}'.format(a)\n    big_bin_b = '{:032b}'.format(b)\n    bin_a = big_bin_a[32 - n:]\n    bin_b = big_bin_b[32 - n:]\n    k = n - 1\n    x = 0\n    done = False\n    for i in range(0, n):\n        if bin_a[i] == '0' and bin_b[i] == '0':\n            x += 2 ** k\n        if bin_a[i] == '0' and bin_b[i] == '1':\n            if not done:\n                x += 2 ** k\n                done = True\n        if bin_a[i] == '1' and bin_b[i] == '0':\n            if done:\n                x += 2 ** k\n            else:\n                done = True\n        k -= 1\n    print(x)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    mask = 0\n    for i in range(n - 1, -1, -1):\n        temp1 = mask\n        temp2 = mask | 1 << i\n        val1 = (a ^ temp1) * (temp1 ^ b)\n        val2 = (a ^ temp2) * (temp2 ^ b)\n        if val1 > val2:\n            mask = temp1\n        else:\n            mask = temp2\n    print(mask)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    xor = 0\n    flag = True\n    for i in range(n - 1, -1, -1):\n        if a & 1 << i > 0 and b & 1 << i > 0:\n            continue\n        elif a & 1 << i == 0 and b & 1 << i == 0:\n            xor |= 1 << i\n        elif flag:\n            flag = False\n            if a & 1 << i > 0:\n                continue\n            else:\n                xor |= 1 << i\n        elif b & 1 << i > 0:\n            continue\n        else:\n            xor |= 1 << i\n    print(xor)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    xor = 0\n    flag = True\n    for i in range(n - 1, -1, -1):\n        if a & 1 << i > 0 and b & 1 << i > 0:\n            continue\n        elif a & 1 << i == 0 and b & 1 << i == 0:\n            xor |= 1 << i\n        elif flag:\n            flag = False\n            if a & 1 << i > 0:\n                continue\n            else:\n                xor |= 1 << i\n        elif b & 1 << i > 0:\n            continue\n        else:\n            xor |= 1 << i\n    print(xor)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(i) for i in input().split()]\n    flag = 0\n    res = 1\n    x = 0\n    for i in range(n - 1, -1, -1):\n        res = 2 ** i\n        if not res & a and (not res & b):\n            x += 2 ** i\n        elif res & a and res & b:\n            pass\n        elif not flag:\n            if not res & a:\n                x += 2 ** i\n            else:\n                pass\n            flag += 1\n        elif not res & b:\n            x += 2 ** i\n        else:\n            pass\n    print(x)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(i) for i in input().split()]\n    flag = 0\n    res = 1\n    x = 0\n    for i in range(n - 1, -1, -1):\n        res = 2 ** i\n        if not res & a and (not res & b):\n            x += 2 ** i\n        elif res & a and res & b:\n            pass\n        elif not flag:\n            if not res & a:\n                x += 2 ** i\n            else:\n                pass\n            flag += 1\n        elif not res & b:\n            x += 2 ** i\n        else:\n            pass\n    print(x)", "def solve():\n    (n, a, b) = map(int, input().split())\n    x = 0\n    flag = True\n    for i in range(n - 1, -1, -1):\n        a1 = 1 << i & a\n        b1 = 1 << i & b\n        d = 1 << i\n        if a1 == b1:\n            if a1 == 0:\n                x += d\n        elif a1 != 0 and b1 == 0:\n            if flag == True:\n                flag = False\n            else:\n                x += d\n        elif a1 == 0 and b1 != 0:\n            if flag == True:\n                flag = False\n                x += d\n    return x\nfor i in range(int(input())):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    ans = 0\n    flag = True\n    for i in range(n - 1, -1, -1):\n        (x, y) = (1 << i & a, 1 << i & b)\n        if x == 0 and y == 0:\n            ans += 1 << i\n        elif x != 0 and y == 0:\n            if flag:\n                flag = False\n            else:\n                ans += 1 << i\n        elif x == 0 and y != 0:\n            if flag:\n                ans += 1 << i\n                flag = False\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    ans = 0\n    flag = True\n    for i in range(n - 1, -1, -1):\n        (x, y) = (1 << i & a, 1 << i & b)\n        if x == 0 and y == 0:\n            ans += 1 << i\n        elif x != 0 and y == 0:\n            if flag:\n                flag = False\n            else:\n                ans += 1 << i\n        elif x == 0 and y != 0:\n            if flag:\n                ans += 1 << i\n                flag = False\n    print(ans)", "t = int(input())\nwhile t:\n    (n, a, b) = map(int, input().strip().split())\n    s1 = bin(a)[2:]\n    s2 = bin(b)[2:]\n    diff = abs(len(s2) - len(s1))\n    if len(s2) > len(s1):\n        s1 = '0' * diff + s1\n    if len(s1) > len(s2):\n        s2 = '0' * diff + s2\n    f = 0\n    ans = ''\n    for i in range(len(s2)):\n        if s1[i] == s2[i]:\n            if s1[i] == '1':\n                ans += '0'\n            else:\n                ans += '1'\n        elif f == 0:\n            if s1[i] == '0':\n                ans += '1'\n                f = 1\n            else:\n                ans += '0'\n                f = 1\n        elif s2[i] == '0':\n            ans += '1'\n        else:\n            ans += '0'\n    if len(ans) < n:\n        ans = '1' * (n - len(ans)) + ans\n    print(int(ans, 2))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    a = list(map(int, input().split()))\n    limit = '1' + '0' * (a[0] - 1)\n    bin_first = bin(a[1])[2:]\n    bin_second = bin(a[2])[2:]\n    if len(limit) > len(bin_first):\n        bin_first = '0' * (len(limit) - len(bin_first)) + bin_first\n    if len(bin_first) > len(bin_second):\n        bin_second = '0' * (len(bin_first) - len(bin_second)) + bin_second\n    elif len(bin_first) < len(bin_second):\n        bin_first = '0' * (len(bin_second) - len(bin_first)) + bin_first\n    ans = ''\n    for j in range(len(bin_first)):\n        if bin_first[j] == bin_second[j]:\n            ans += '1'\n        else:\n            ans += '_'\n    xor_key = ''\n    statement = True\n    for j in range(len(ans)):\n        if ans[j] == '_':\n            if statement:\n                xor_key += '1'\n                statement = False\n            else:\n                xor_key += '0'\n        else:\n            xor_key += ans[j]\n    result = int(xor_key, 2) ^ int(bin_first, 2)\n    print(result)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    mask = 0\n    for i in range(n - 1, -1, -1):\n        temp1 = mask\n        temp2 = mask | 1 << i\n        val1 = (a ^ temp1) * (temp1 ^ b)\n        val2 = (a ^ temp2) * (temp2 ^ b)\n        if val1 > val2:\n            mask = temp1\n        else:\n            mask = temp2\n    print(mask)", "def conv_dec(lst):\n    n = len(lst)\n    ans = 0\n    for i in range(n):\n        if lst[i] == 1:\n            ans += pow(2, i)\n    return ans\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    ca = [0] * n\n    cb = [0] * n\n    i = 0\n    j = 1\n    while i < n:\n        if a & j > 0:\n            ca[i] = 1\n        else:\n            ca[i] = 0\n        if b & j > 0:\n            cb[i] = 1\n        else:\n            cb[i] = 0\n        i += 1\n        j = j * 2\n    x = [0] * n\n    flag = True\n    for i in range(n - 1, -1, -1):\n        if ca[i] == 0 and cb[i] == 0:\n            x[i] = 1\n        elif ca[i] == 1 and cb[i] == 0:\n            if flag:\n                flag = False\n            else:\n                x[i] = 1\n        elif ca[i] == 0 and cb[i] == 1:\n            if flag:\n                flag = False\n                x[i] = 1\n    ans = conv_dec(x)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(i) for i in input().split()]\n    flag = 0\n    res = 1\n    x = 0\n    for i in range(n - 1, -1, -1):\n        res = 2 ** i\n        if not res & a and (not res & b):\n            x += 2 ** i\n        elif res & a and res & b:\n            pass\n        elif not flag:\n            if not res & a:\n                x += 2 ** i\n            else:\n                pass\n            flag += 1\n        elif not res & b:\n            x += 2 ** i\n        else:\n            pass\n    print(x)", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (n, a, b) = map(int, s.split())\n    b ^= a\n    r = ~(a | b) & (1 << n) - 1 | a & b\n    if b:\n        r ^= 1 << b.bit_length() - 1\n    print(r)", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (n, a, b) = map(int, s.split())\n    b ^= a\n    print(~(a | b) & (1 << n) - 1 | a & b ^ (b and 1 << b.bit_length() - 1))", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (n, a, b) = map(int, s.split())\n    b ^= a\n    c = b.bit_length()\n    print(~(a | b) & (1 << n) - 1 | a & b ^ (c and 1 << c - 1))", "def getithbit(num, i):\n    mask = 1 << i\n    if num & mask > 0:\n        return 1\n    else:\n        return 0\nt = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    l = [0] * n\n    boo = True\n    for k in range(n - 1, -1, -1):\n        x = getithbit(a, k)\n        y = getithbit(b, k)\n        if x == 1 and y == 1:\n            l[k] = 0\n        elif x == 0 and y == 0:\n            l[k] = 1\n        elif boo == True:\n            l[k] = y\n            boo = False\n        else:\n            l[k] = x\n    sumy = 0\n    for q in range(0, n):\n        if l[q] == 1:\n            sumy += 2 ** q\n    print(sumy)", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (n, a, b) = map(int, s.split())\n    x = a ^ b\n    c = x.bit_length()\n    print(~(a | x) & (1 << n) - 1 | a & x ^ (c and 1 << c - 1))", "import sys\nf = sys.stdin\nnext(f)\nfor s in f:\n    (n, a, b) = map(int, s.split())\n    x = a ^ b\n    c = x.bit_length()\n    print(~a & (~a ^ b) & (1 << n) - 1 | x & a ^ (c and 1 << c - 1))", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    m = 0\n    for i in range(n - 1, -1, -1):\n        t1 = m\n        t2 = m | 1 << i\n        (p1, p2) = ((a ^ t1) * (b ^ t1), (a ^ t2) * (b ^ t2))\n        if p1 > p2:\n            m = t1\n        else:\n            m = t2\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    mask = 0\n    for i in range(n - 1, -1, -1):\n        temp1 = mask\n        temp2 = mask | 1 << i\n        val1 = (a ^ temp1) * (temp1 ^ b)\n        val2 = (a ^ temp2) * (temp2 ^ b)\n        if val1 > val2:\n            mask = temp1\n        else:\n            mask = temp2\n    print(mask)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    mask = 0\n    for i in range(n - 1, -1, -1):\n        bit1 = a >> i & 1\n        bit2 = b >> i & 1\n        if bit1 == 0 and bit2 == 0:\n            mask = mask | 1 << i\n        elif bit1 == 1 and bit2 == 1:\n            continue\n        else:\n            temp1 = mask\n            temp2 = mask | 1 << i\n            val1 = (a ^ temp1) * (temp1 ^ b)\n            val2 = (a ^ temp2) * (temp2 ^ b)\n            if val1 > val2:\n                mask = temp1\n            else:\n                mask = temp2\n    print(mask)", "t = int(input())\nfor j in range(t):\n    (n, a, b) = map(int, input().split())\n    temp = 0\n    boo = False\n    for i in range(n - 1, -1, -1):\n        if a >> i & 1 and b >> i & 1:\n            continue\n        elif a >> i & 1 or b >> i & 1:\n            if not boo:\n                boo = True\n                if b >> i & 1:\n                    temp = temp | 1 << i\n            elif a >> i & 1:\n                temp = temp | 1 << i\n        elif not a >> i & 1 and (not b >> i & 1):\n            temp = temp | 1 << i\n    print(temp)", "t = int(input())\nfor j in range(t):\n    (n, a, b) = map(int, input().split())\n    temp = 0\n    boo = False\n    for i in range(n - 1, -1, -1):\n        if a >> i & 1 and b >> i & 1:\n            continue\n        elif a >> i & 1 or b >> i & 1:\n            if not boo:\n                boo = True\n                if b >> i & 1:\n                    temp = temp | 1 << i\n            elif a >> i & 1:\n                temp = temp | 1 << i\n        elif not a >> i & 1 and (not b >> i & 1):\n            temp = temp | 1 << i\n    print(temp)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a = '0' * (n - len(bin(a)[2:])) + bin(a)[2:]\n    b = '0' * (n - len(bin(b)[2:])) + bin(b)[2:]\n    ans = ''\n    carry = 0\n    for i in range(n):\n        if a[i] == b[i] and a[i] == '0':\n            ans += '1'\n        elif a[i] == b[i] and a[i] == '1':\n            ans += '0'\n        else:\n            if carry == 0:\n                if a[i] == '1':\n                    ans += '0'\n                elif a[i] == '0':\n                    ans += '1'\n            elif b[i] == '1':\n                ans += '0'\n            elif b[i] == '0':\n                ans += '1'\n            carry = 1\n    print(int(ans, 2))", "for s in range(int(input())):\n    (n, a, b) = list(map(int, input().split()))\n    m = 0\n    c = 0\n    for i in range(n):\n        if a & 1 << i != b & 1 << i:\n            m = max(m, 1 << i)\n        else:\n            c += 1 << i\n    print(m + c ^ a)", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    l = [0] * n\n    x = 0\n    t = 0\n    for i in range(n - 1, -1, -1):\n        if a & 1 << i > 0:\n            l[i] += 1\n        if b & 1 << i > 0:\n            l[i] += 1\n        if l[i] == 0:\n            x += 1 << i\n        if l[i] == 1:\n            if t == 0:\n                t = 1\n                if a & 1 << i == 0:\n                    x += 1 << i\n            elif b & 1 << i == 0:\n                x += 1 << i\n    print(x)", "for s in range(int(input())):\n    (n, a, b) = list(map(int, input().split()))\n    m = 0\n    c = 0\n    for i in range(n):\n        if a & 1 << i != b & 1 << i:\n            m = max(m, 1 << i)\n        else:\n            c += 1 << i\n    print(m + c ^ a)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = list(map(int, input().split()))\n    arr1 = [0] * 31\n    arr2 = [0] * 31\n    i = 0\n    j = 1\n    while i < n:\n        if a & j > 0:\n            arr1[i] = 1\n        else:\n            arr1[i] = 0\n        if b & j > 0:\n            arr2[i] = 1\n        else:\n            arr2[i] = 0\n        i += 1\n        j *= 2\n    ans = 0\n    f = 0\n    for i in range(n - 1, -1, -1):\n        if arr1[i] == 0 and arr2[i] == 0:\n            ans = ans + (1 << i)\n        elif arr1[i] == 1 and arr2[i] == 0:\n            if f == 0:\n                f += 1\n            else:\n                ans += 1 << i\n        elif arr1[i] == 0 and arr2[i] == 1:\n            if f == 0:\n                f += 1\n                ans += 1 << i\n    print(ans)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (count, res) = (0, 0)\n    for i in range(n - 1, -1, -1):\n        abit = 1 << i & a\n        bbit = 1 << i & b\n        if abit == bbit:\n            if abit == 0:\n                res |= 1 << i\n        elif count == 0:\n            if bbit:\n                res |= 1 << i\n            count += 1\n        elif abit:\n            res |= 1 << i\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    ans = 0\n    flag = False\n    for i in range(n - 1, -1, -1):\n        ba = a >> i & 1\n        bb = b >> i & 1\n        an = 1 << i\n        if ba == 0 and bb == 0:\n            ans += an\n        elif ba != bb:\n            if not flag:\n                if ba == 0:\n                    ans += an\n                flag = True\n            elif bb == 0:\n                ans += an\n    print(ans)", "t = int(input())\nfor i in range(t):\n    [N, A, B] = [int(i) for i in input().split()]\n    arr1 = str(bin(A)[2:])\n    arr2 = str(bin(B)[2:])\n    A1 = len(arr1)\n    B1 = len(arr2)\n    arr2 = '0' * (N - B1) + arr2\n    arr1 = '0' * (N - A1) + arr1\n    ans = ''\n    c = 0\n    for i in range(N):\n        if arr1[i] == arr2[i] and arr1[i] == '0':\n            ans = ans + '1'\n        elif arr1[i] == arr2[i] and arr1[i] == '1':\n            ans = ans + '0'\n        else:\n            if c == 0:\n                if arr1[i] == '1':\n                    ans = ans + '0'\n                elif arr1[i] == '0':\n                    ans = ans + '1'\n            elif arr2[i] == '1':\n                ans = ans + '0'\n            elif arr2[i] == '0':\n                ans = ans + '1'\n            c = 1\n    print(int(ans, 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    mx = c = 0\n    for i in range(n):\n        if a & 1 << i != b & 1 << i:\n            mx = max(mx, 1 << i)\n        else:\n            c += 1 << i\n    print(c + mx ^ a)", "count = int(input())\nfor i in range(count):\n    (count_inside, int_a, int_b) = list(map(int, input().split()))\n    temp_A = 0\n    maximum_val = 0\n    for i in range(count_inside):\n        temp_p = 1 << i\n        sum_a = False\n        sum_b = False\n        if temp_p & int_a != 0:\n            sum_a = True\n        if temp_p & int_b != 0:\n            sum_b = True\n        if sum_a != sum_b:\n            maximum_val = max(maximum_val, temp_p)\n        else:\n            temp_A += temp_p\n    temp_A += maximum_val\n    print(temp_A ^ int_a)", "def solve(A):\n    (n, b, a) = A\n    x = 0\n    p = -1\n    for i in range(n - 1, -1, -1):\n        if 1 << i & a > 0 and 1 << i & b > 0:\n            continue\n        elif 1 << i & a == 0 and 1 << i & b == 0:\n            x |= 1 << i\n        elif p == -1:\n            if 1 << i & a == 0 and 1 << i & b > 0:\n                p = 0\n            else:\n                p = 0\n                x |= 1 << i\n        elif 1 << i & a == 0 and 1 << i & b > 0:\n            x |= 1 << i\n    print(x)\nt = int(input())\nans = []\nfor i in range(t):\n    A = list(map(int, input().split()))\n    ans.append(solve(A))", "count = int(input())\nfor i in range(count):\n    (count_inside, int_a, int_b) = list(map(int, input().split()))\n    temp_A = 0\n    maximum_val = 0\n    for i in range(count_inside):\n        temp_p = 1 << i\n        sum_a = False\n        sum_b = False\n        if temp_p & int_a != 0:\n            sum_a = True\n        if temp_p & int_b != 0:\n            sum_b = True\n        if sum_a != sum_b:\n            maximum_val = max(maximum_val, temp_p)\n        else:\n            temp_A += temp_p\n    temp_A += maximum_val\n    print(temp_A ^ int_a)"]