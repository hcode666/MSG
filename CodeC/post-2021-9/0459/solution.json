["for _ in range(int(input())):\n    N = int(input())\n    arr1 = list(map(int, input().split(' ')))\n    arr2 = list(map(int, input().split(' ')))\n    for i in range(N):\n        if arr1[i] < arr2[i]:\n            (arr1[i], arr2[i]) = (arr2[i], arr1[i])\n    arr = []\n    for i in range(N):\n        col = []\n        col.append(arr1[i])\n        col.append(arr2[i])\n        arr.append(col)\n    arr.sort()\n    (arr1Min, arr1Max, arr2Min, arr2Max) = ([0] * N, [0] * N, [0] * N, [0] * N)\n    arr1Min[0] = arr[0][0]\n    arr1Max[0] = arr[0][0]\n    arr2Min[N - 1] = arr[N - 1][1]\n    arr2Max[N - 1] = arr[N - 1][1]\n    for i in range(1, N):\n        arr1Min[i] = min(arr1Min[i - 1], arr[i][0])\n        arr1Max[i] = max(arr1Min[i - 1], arr[i][0])\n    for i in range(N - 2, -1, -1):\n        arr2Min[i] = min(arr2Min[i + 1], arr[i][1])\n        arr2Max[i] = max(arr2Max[i + 1], arr[i][1])\n    ans = arr[N - 1][0] - arr[0][0]\n    for i in range(N - 1, -1, -1):\n        if i == 0:\n            maximum = arr2Max[0]\n            minimum = arr2Min[0]\n        else:\n            maximum = max(arr1Max[i - 1], arr2Max[i])\n            minimum = min(arr1Min[i - 1], arr2Min[i])\n        ans = min(ans, maximum - minimum)\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    arr1 = list(map(int, input().split(' ')))\n    arr2 = list(map(int, input().split(' ')))\n    for i in range(N):\n        if arr1[i] < arr2[i]:\n            (arr1[i], arr2[i]) = (arr2[i], arr1[i])\n    arr = []\n    for i in range(N):\n        col = []\n        col.append(arr1[i])\n        col.append(arr2[i])\n        arr.append(col)\n    arr.sort()\n    (arr1Min, arr1Max, arr2Min, arr2Max) = ([0] * N, [0] * N, [0] * N, [0] * N)\n    arr1Min[0] = arr[0][0]\n    arr1Max[0] = arr[0][0]\n    arr2Min[N - 1] = arr[N - 1][1]\n    arr2Max[N - 1] = arr[N - 1][1]\n    for i in range(1, N):\n        arr1Min[i] = min(arr1Min[i - 1], arr[i][0])\n        arr1Max[i] = max(arr1Min[i - 1], arr[i][0])\n    for i in range(N - 2, -1, -1):\n        arr2Min[i] = min(arr2Min[i + 1], arr[i][1])\n        arr2Max[i] = max(arr2Max[i + 1], arr[i][1])\n    ans = arr[N - 1][0] - arr[0][0]\n    for i in range(N - 1, -1, -1):\n        if i == 0:\n            maximum = arr2Max[0]\n            minimum = arr2Min[0]\n        else:\n            maximum = max(arr1Max[i - 1], arr2Max[i])\n            minimum = min(arr1Min[i - 1], arr2Min[i])\n        ans = min(ans, maximum - minimum)\n    print(ans)", "import math\ncase = int(input())\nfor _ in range(case):\n    n = int(input())\n    l1 = list(map(int, input().split(' ')))\n    l2 = list(map(int, input().split(' ')))\n    for i in range(n):\n        if l1[i] > l2[i]:\n            (l1[i], l2[i]) = (l2[i], l1[i])\n    arr = [[l1[i], l2[i]] for i in range(n)]\n    arr.sort()\n    lrmin = [0] * n\n    lrmax = [0] * n\n    lrmin[0] = arr[0][1]\n    lrmax[0] = arr[0][1]\n    rlmin = [0] * n\n    rlmax = [0] * n\n    rlmin[-1] = arr[-1][0]\n    rlmax[-1] = arr[-1][0]\n    for i in range(1, n):\n        lrmin[i] = min(lrmin[i - 1], arr[i][1])\n        lrmax[i] = max(lrmax[i - 1], arr[i][1])\n    for i in range(n - 2, -1, -1):\n        rlmin[i] = min(rlmin[i + 1], arr[i][0])\n        rlmax[i] = max(rlmax[i + 1], arr[i][0])\n    res = arr[-1][0] - arr[0][0]\n    for i in range(1, n):\n        mn = min(lrmin[i - 1], rlmin[i])\n        mx = max(lrmax[i - 1], rlmax[i])\n        res = min(res, mx - mn)\n    res = min(res, lrmax[n - 1] - lrmin[n - 1])\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append([min(a[i], b[i]), i])\n        c.append([max(a[i], b[i]), i])\n    c.sort()\n    (ans, ptr) = (10 ** 10, 0)\n    last = [-1] * n\n    have = 0\n    for i in range(2 * n):\n        (val, id) = c[i]\n        if last[id] == -1:\n            have += 1\n        last[id] = i\n        if have < n:\n            continue\n        while True:\n            if last[c[ptr][1]] == ptr:\n                break\n            ptr += 1\n        ans = min(ans, c[i][0] - c[ptr][0])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(min(abs(a[1] - a[0]), abs(b[1] - a[0]), abs(a[1] - b[0]), abs(b[1] - b[0])))\n    else:\n        els = []\n        for i in range(n):\n            els.append((a[i], i))\n            els.append((b[i], i))\n        els.sort()\n        doubs = {}\n        elids = {}\n        for i in range(2 * n):\n            e = els[i][1]\n            if e in doubs:\n                doubs[e].append(i)\n            else:\n                doubs[e] = [i]\n            elids[i] = e\n        mindist = float('inf')\n        ri = 0\n        li = 0\n        en = set()\n        while li < 2 * n:\n            while len(en) < n and ri < 2 * n:\n                en.add(els[ri][1])\n                ri += 1\n            if els[ri - 1][0] - els[li][0] < mindist and len(en) == n:\n                mindist = els[ri - 1][0] - els[li][0]\n            if doubs[els[li][1]][1] >= ri or doubs[els[li][1]][1] <= li:\n                en.remove(els[li][1])\n            li += 1\n        print(mindist)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list()\n    for i in range(N):\n        C.append([A[i], i])\n        C.append([B[i], i])\n    C.sort(key=lambda x: x[0])\n    ans = 10 ** 10\n    last = [-1] * N\n    p = 0\n    num = 0\n    for i in range(2 * N):\n        (val, ind) = C[i]\n        if last[ind] == -1:\n            num += 1\n        last[ind] = i\n        if num < N:\n            continue\n        while True:\n            if last[C[p][1]] == p:\n                break\n            p += 1\n        ans = min(ans, C[i][0] - C[p][0])\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list()\n    for i in range(N):\n        C.append([A[i], i])\n        C.append([B[i], i])\n    C.sort(key=lambda x: x[0])\n    ans = 10 ** 10\n    last = [-1] * N\n    p = 0\n    num = 0\n    for i in range(2 * N):\n        (val, ind) = C[i]\n        if last[ind] == -1:\n            num += 1\n        last[ind] = i\n        if num < N:\n            continue\n        while True:\n            if last[C[p][1]] == p:\n                break\n            p += 1\n        ans = min(ans, C[i][0] - C[p][0])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append([min(a[i], b[i]), i])\n        c.append([max(a[i], b[i]), i])\n    c.sort()\n    (ans, ptr) = (10 ** 10, 0)\n    last = [-1] * n\n    have = 0\n    for i in range(2 * n):\n        (val, id) = c[i]\n        if last[id] == -1:\n            have += 1\n        last[id] = i\n        if have < n:\n            continue\n        while True:\n            if last[c[ptr][1]] == ptr:\n                break\n            ptr += 1\n        ans = min(ans, c[i][0] - c[ptr][0])\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append([a[i], i])\n        c.append([b[i], i])\n    c.sort()\n    (ans, ptr) = (10 ** 10, 0)\n    last = [-1] * n\n    have = 0\n    for i in range(2 * n):\n        (val, id) = c[i]\n        if last[id] == -1:\n            have += 1\n        last[id] = i\n        if have < n:\n            continue\n        while True:\n            if last[c[ptr][1]] == ptr:\n                break\n            ptr += 1\n        ans = min(ans, c[i][0] - c[ptr][0])\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append([min(a[i], b[i]), i])\n        c.append([max(a[i], b[i]), i])\n    c.sort()\n    (ans, ptr) = (10 ** 10, 0)\n    last = [-1] * n\n    have = 0\n    for i in range(2 * n):\n        (val, id) = c[i]\n        if last[id] == -1:\n            have += 1\n        last[id] = i\n        if have < n:\n            continue\n        while True:\n            if last[c[ptr][1]] == ptr:\n                break\n            ptr += 1\n        ans = min(ans, c[i][0] - c[ptr][0])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    for i in range(n):\n        if arr[i] < brr[i]:\n            (arr[i], brr[i]) = (brr[i], arr[i])\n    crr = []\n    for i in range(n):\n        crr.append([arr[i], brr[i]])\n    crr.sort()\n    maxi = crr[n - 1][0]\n    mini = crr[0][0]\n    ans = maxi - mini\n    fmini = [None] * n\n    fmaxi = [None] * n\n    lmini = [None] * n\n    lmaxi = [None] * n\n    fmini[0] = crr[0][0]\n    fmaxi[0] = crr[0][0]\n    lmini[n - 1] = crr[n - 1][1]\n    lmaxi[n - 1] = crr[n - 1][1]\n    for i in range(1, n):\n        fmini[i] = min(fmini[i - 1], crr[i][0])\n        fmaxi[i] = max(fmaxi[i - 1], crr[i][0])\n    i = n - 2\n    while i >= 0:\n        lmini[i] = min(lmini[i + 1], crr[i][1])\n        lmaxi[i] = max(lmaxi[i + 1], crr[i][1])\n        i -= 1\n    i = n - 1\n    while i >= 0:\n        (crr[i][0], crr[i][1]) = (crr[i][1], crr[i][0])\n        if i == 0:\n            maxi = lmaxi[0]\n            mini = lmini[0]\n        else:\n            maxi = max(fmaxi[i - 1], lmaxi[i])\n            mini = min(fmini[i - 1], lmini[i])\n        ans = min(ans, maxi - mini)\n        i -= 1\n    print(ans)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    for i in range(n):\n        if a[i] < b[i]:\n            (a[i], b[i]) = (b[i], a[i])\n    twoD = [[a[i], b[i]] for i in range(n)]\n    twoD.sort()\n    maximum = twoD[n - 1][0]\n    minimum = twoD[0][0]\n    res = maximum - minimum\n    firstMin = [0] * n\n    firstMax = [0] * n\n    lastMin = [0] * n\n    lastMax = [0] * n\n    firstMin[0] = twoD[0][0]\n    lastMin[n - 1] = twoD[n - 1][1]\n    firstMax[0] = twoD[0][0]\n    lastMax[n - 1] = twoD[n - 1][1]\n    for i in range(1, n):\n        firstMin[i] = min(firstMin[i - 1], twoD[i][0])\n        firstMax[i] = max(firstMax[i - 1], twoD[i][0])\n    for i in range(n - 2, -1, -1):\n        lastMin[i] = min(lastMin[i + 1], twoD[i][1])\n        lastMax[i] = max(lastMax[i + 1], twoD[i][1])\n    for i in range(n - 1, -1, -1):\n        (twoD[i][0], twoD[i][1]) = (twoD[i][1], twoD[i][0])\n        if i == 0:\n            maximum = lastMax[0]\n            minimum = lastMin[0]\n        else:\n            maximum = max(firstMax[i - 1], lastMax[i])\n            minimum = min(firstMin[i - 1], lastMin[i])\n        res = min(res, maximum - minimum)\n    print(res)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append([min(a[i], b[i]), i])\n        c.append([max(a[i], b[i]), i])\n    c.sort()\n    (ans, ptr) = (10 ** 10, 0)\n    last = [-1] * n\n    have = 0\n    for i in range(2 * n):\n        (val, id) = c[i]\n        if last[id] == -1:\n            have += 1\n        last[id] = i\n        if have < n:\n            continue\n        while True:\n            if last[c[ptr][1]] == ptr:\n                break\n            ptr += 1\n        ans = min(ans, c[i][0] - c[ptr][0])\n    print(ans)", "def solution(n, a, b):\n    res = []\n    for i in range(n):\n        if a[i] < b[i]:\n            (a[i], b[i]) = (b[i], a[i])\n    l = [[a[i], b[i]] for i in range(n)]\n    l.sort()\n    mx = l[n - 1][0]\n    mn = l[0][0]\n    res.append(mx - mn)\n    l1 = [0] * n\n    l2 = [0] * n\n    l_Min = [0] * n\n    l_Max = [0] * n\n    l1[0] = l[0][0]\n    l_Min[n - 1] = l[n - 1][1]\n    l2[0] = l[0][0]\n    l_Max[n - 1] = l[n - 1][1]\n    for i in range(1, n):\n        l1[i] = min(l1[i - 1], l[i][0])\n        l2[i] = max(l2[i - 1], l[i][0])\n    for i in range(n - 2, -1, -1):\n        l_Min[i] = min(l_Min[i + 1], l[i][1])\n        l_Max[i] = max(l_Max[i + 1], l[i][1])\n    for i in range(n - 1, -1, -1):\n        (l[i][0], l[i][1]) = (l[i][1], l[i][0])\n        if i == 0:\n            mx = l_Max[0]\n            mn = l_Min[0]\n        else:\n            mx = max(l2[i - 1], l_Max[i])\n            mn = min(l1[i - 1], l_Min[i])\n        res[-1] = min(res[-1], mx - mn)\n    return min(res)\n    l\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a1 = list(map(int, input().split()))\n    a2 = list(map(int, input().split()))\n    print(solution(n, a1, a2))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        if a[i] < b[i]:\n            (a[i], b[i]) = (b[i], a[i])\n        c.append([a[i], b[i]])\n    c.sort()\n    fMin = [0] * n\n    fMax = [0] * n\n    lMin = [0] * n\n    lMax = [0] * n\n    fMax[0] = c[0][0]\n    fMin[0] = c[0][0]\n    lMax[-1] = c[-1][1]\n    lMin[-1] = c[-1][1]\n    for i in range(1, n):\n        fMin[i] = min(fMin[i - 1], c[i][0])\n        fMax[i] = max(fMax[i - 1], c[i][0])\n    for i in range(n - 2, -1, -1):\n        lMin[i] = min(lMin[i + 1], c[i][1])\n        lMax[i] = max(lMax[i + 1], c[i][1])\n    mx = c[-1][0]\n    mn = c[0][0]\n    ans = mx - mn\n    for i in range(n - 1, -1, -1):\n        if not i:\n            mx = lMax[0]\n            mn = lMin[0]\n        else:\n            mx = max(fMax[i - 1], lMax[i])\n            mn = min(fMin[i - 1], lMin[i])\n        ans = min(ans, mx - mn)\n    print(ans)", "def solve(n, a, b):\n    ans = []\n    for i in range(n):\n        if a[i] < b[i]:\n            (a[i], b[i]) = (b[i], a[i])\n    kunal = [[a[i], b[i]] for i in range(n)]\n    kunal.sort()\n    mvaskunx = kunal[n - 1][0]\n    uimm = kunal[0][0]\n    ans.append(mvaskunx - uimm)\n    twer1 = [0] * n\n    x2 = [0] * n\n    lastMin = [0] * n\n    lastMax = [0] * n\n    twer1[0] = kunal[0][0]\n    lastMin[n - 1] = kunal[n - 1][1]\n    x2[0] = kunal[0][0]\n    lastMax[n - 1] = kunal[n - 1][1]\n    for i in range(1, n):\n        twer1[i] = min(twer1[i - 1], kunal[i][0])\n        x2[i] = max(x2[i - 1], kunal[i][0])\n    for i in range(n - 2, -1, -1):\n        lastMin[i] = min(lastMin[i + 1], kunal[i][1])\n        lastMax[i] = max(lastMax[i + 1], kunal[i][1])\n    for i in range(n - 1, -1, -1):\n        (kunal[i][0], kunal[i][1]) = (kunal[i][1], kunal[i][0])\n        if i == 0:\n            mvaskunx = lastMax[0]\n            uimm = lastMin[0]\n        else:\n            mvaskunx = max(x2[i - 1], lastMax[i])\n            uimm = min(twer1[i - 1], lastMin[i])\n        ans[-1] = min(ans[-1], mvaskunx - uimm)\n    return min(ans)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    print(solve(n, arr1, arr2))", "def func(n, x, y):\n    ans = []\n    for i in range(n):\n        if x[i] < y[i]:\n            (x[i], y[i]) = (y[i], x[i])\n    set = [[x[i], y[i]] for i in range(n)]\n    set.sort()\n    maxvar = set[n - 1][0]\n    minvar = set[0][0]\n    ans.append(maxvar - minvar)\n    a = [0] * n\n    b = [0] * n\n    lastMin = [0] * n\n    lastMax = [0] * n\n    a[0] = set[0][0]\n    lastMin[n - 1] = set[n - 1][1]\n    b[0] = set[0][0]\n    lastMax[n - 1] = set[n - 1][1]\n    for i in range(1, n):\n        a[i] = min(a[i - 1], set[i][0])\n        b[i] = max(b[i - 1], set[i][0])\n    for i in range(n - 2, -1, -1):\n        lastMin[i] = min(lastMin[i + 1], set[i][1])\n        lastMax[i] = max(lastMax[i + 1], set[i][1])\n    for i in range(n - 1, -1, -1):\n        (set[i][0], set[i][1]) = (set[i][1], set[i][0])\n        if i == 0:\n            mx = lastMax[0]\n            mn = lastMin[0]\n        else:\n            mx = max(b[i - 1], lastMax[i])\n            mn = min(a[i - 1], lastMin[i])\n        ans[-1] = min(ans[-1], mx - mn)\n    return min(ans)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    print(func(n, arr1, arr2))", "def solve(n, a, b):\n    ans = []\n    for i in range(n):\n        if a[i] < b[i]:\n            (a[i], b[i]) = (b[i], a[i])\n    tup = [[a[i], b[i]] for i in range(n)]\n    tup.sort()\n    maxx = tup[n - 1][0]\n    minn = tup[0][0]\n    ans.append(maxx - minn)\n    y1 = [0] * n\n    y2 = [0] * n\n    lastMinn = [0] * n\n    lastMaxx = [0] * n\n    y1[0] = tup[0][0]\n    lastMinn[n - 1] = tup[n - 1][1]\n    y2[0] = tup[0][0]\n    lastMaxx[n - 1] = tup[n - 1][1]\n    for i in range(1, n):\n        y1[i] = min(y1[i - 1], tup[i][0])\n        y2[i] = max(y2[i - 1], tup[i][0])\n    for i in range(n - 2, -1, -1):\n        lastMinn[i] = min(lastMinn[i + 1], tup[i][1])\n        lastMaxx[i] = max(lastMaxx[i + 1], tup[i][1])\n    for i in range(n - 1, -1, -1):\n        (tup[i][0], tup[i][1]) = (tup[i][1], tup[i][0])\n        if i == 0:\n            maxx = lastMaxx[0]\n            minn = lastMinn[0]\n        else:\n            maxx = max(y2[i - 1], lastMaxx[i])\n            minn = min(y1[i - 1], lastMinn[i])\n        ans[-1] = min(ans[-1], maxx - minn)\n    return min(ans)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    print(solve(n, arr1, arr2))", "def solve(n, a, b):\n    ret = []\n    for i in range(n):\n        if a[i] < b[i]:\n            (a[i], b[i]) = (b[i], a[i])\n    tup = [[a[i], b[i]] for i in range(n)]\n    tup.sort()\n    mx = tup[n - 1][0]\n    mn = tup[0][0]\n    ret.append(mx - mn)\n    x1 = [0] * n\n    x2 = [0] * n\n    prevMin = [0] * n\n    prevMax = [0] * n\n    x1[0] = tup[0][0]\n    prevMin[n - 1] = tup[n - 1][1]\n    x2[0] = tup[0][0]\n    prevMax[n - 1] = tup[n - 1][1]\n    for i in range(1, n):\n        x1[i] = min(x1[i - 1], tup[i][0])\n        x2[i] = max(x2[i - 1], tup[i][0])\n    for i in range(n - 2, -1, -1):\n        prevMin[i] = min(prevMin[i + 1], tup[i][1])\n        prevMax[i] = max(prevMax[i + 1], tup[i][1])\n    for i in range(n - 1, -1, -1):\n        (tup[i][0], tup[i][1]) = (tup[i][1], tup[i][0])\n        if i == 0:\n            mx = prevMax[0]\n            mn = prevMin[0]\n        else:\n            mx = max(x2[i - 1], prevMax[i])\n            mn = min(x1[i - 1], prevMin[i])\n        ret[-1] = min(ret[-1], mx - mn)\n    return min(ret)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    UpperArr = list(map(int, input().split()))\n    LowerArr = list(map(int, input().split()))\n    print(solve(n, UpperArr, LowerArr))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    brr = list(map(int, input().split(' ')))\n    for (idx, (val1, val2)) in enumerate(zip(arr, brr)):\n        if val1 < val2:\n            arr[idx] = val2\n            brr[idx] = val1\n    combined = []\n    for (idx, (val1, val2)) in enumerate(zip(arr, brr)):\n        curr = [val1, val2]\n        combined.append(curr)\n    combined.sort()\n    firstMn = [0 for _ in range(n)]\n    firstMx = [0 for _ in range(n)]\n    lastMn = [0 for _ in range(n)]\n    lastMx = [0 for _ in range(n)]\n    firstMn[0] = combined[0][0]\n    firstMx[0] = combined[0][0]\n    lastMn[n - 1] = combined[n - 1][1]\n    lastMx[n - 1] = combined[n - 1][1]\n    for i in range(1, n):\n        firstMn[i] = min(firstMn[i - 1], combined[i][0])\n        firstMx[i] = max(firstMx[i - 1], combined[i][0])\n    for i in range(n - 2, -1, -1):\n        lastMn[i] = min(lastMn[i + 1], combined[i][1])\n        lastMx[i] = max(lastMx[i + 1], combined[i][1])\n    ans = combined[n - 1][0] - combined[0][0]\n    for i in range(n - 1, -1, -1):\n        if i == 0:\n            mx = lastMx[i]\n            mn = lastMn[i]\n        else:\n            mx = max(firstMx[i - 1], lastMx[i])\n            mn = min(firstMn[i - 1], lastMn[i])\n        ans = min(ans, mx - mn)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    brr = list(map(int, input().split(' ')))\n    for (idx, (val1, val2)) in enumerate(zip(arr, brr)):\n        if val1 < val2:\n            arr[idx] = val2\n            brr[idx] = val1\n    combined = []\n    for (idx, (val1, val2)) in enumerate(zip(arr, brr)):\n        curr = [val1, val2]\n        combined.append(curr)\n    combined.sort()\n    firstMn = [0 for _ in range(n)]\n    firstMx = [0 for _ in range(n)]\n    lastMn = [0 for _ in range(n)]\n    lastMx = [0 for _ in range(n)]\n    firstMn[0] = combined[0][0]\n    firstMx[0] = combined[0][0]\n    lastMn[n - 1] = combined[n - 1][1]\n    lastMx[n - 1] = combined[n - 1][1]\n    for i in range(1, n):\n        firstMn[i] = min(firstMn[i - 1], combined[i][0])\n        firstMx[i] = max(firstMx[i - 1], combined[i][0])\n    for i in range(n - 2, -1, -1):\n        lastMn[i] = min(lastMn[i + 1], combined[i][1])\n        lastMx[i] = max(lastMx[i + 1], combined[i][1])\n    ans = combined[n - 1][0] - combined[0][0]\n    for i in range(n - 1, -1, -1):\n        if i == 0:\n            mx = lastMx[i]\n            mn = lastMn[i]\n        else:\n            mx = max(firstMx[i - 1], lastMx[i])\n            mn = min(firstMn[i - 1], lastMn[i])\n        ans = min(ans, mx - mn)\n    print(ans)", "import sys\nfrom typing import List, Tuple\n\ndef min_difference(t: int, t1: List[Tuple[int, List[int], List[int]]]) -> List[int]:\n    op = []\n    for i in range(t):\n        n = t1[i][0]\n        arr = t1[i][1]\n        brr = t1[i][2]\n        for i in range(n):\n            if arr[i] < brr[i]:\n                (arr[i], brr[i]) = (brr[i], arr[i])\n        combined = [[arr[i], brr[i]] for i in range(n)]\n        combined.sort()\n        m1 = combined[n - 1][0]\n        m2 = combined[0][0]\n        op.append(m1 - m2)\n        firstMin = [0] * n\n        firstMax = [0] * n\n        lastMin = [0] * n\n        lastMax = [0] * n\n        firstMin[0] = combined[0][0]\n        lastMin[n - 1] = combined[n - 1][1]\n        firstMax[0] = combined[0][0]\n        lastMax[n - 1] = combined[n - 1][1]\n        for i in range(1, n):\n            firstMin[i] = min(firstMin[i - 1], combined[i][0])\n            firstMax[i] = max(firstMax[i - 1], combined[i][0])\n        for i in range(n - 2, -1, -1):\n            lastMin[i] = min(lastMin[i + 1], combined[i][1])\n            lastMax[i] = max(lastMax[i + 1], combined[i][1])\n        for i in range(n - 1, -1, -1):\n            (combined[i][0], combined[i][1]) = (combined[i][1], combined[i][0])\n            if i == 0:\n                m1 = lastMax[0]\n                m2 = lastMin[0]\n            else:\n                m1 = max(firstMax[i - 1], lastMax[i])\n                m2 = min(firstMin[i - 1], lastMin[i])\n            op[-1] = min(op[-1], m1 - m2)\n    return op\nt = int(input())\nt1 = []\nfor _ in range(t):\n    q = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    t1.append((q, x, y))\nop = min_difference(t, t1)\nfor i in op:\n    print(i)", "import sys\nfrom typing import List, Tuple\n\ndef min_diff(t: int, test_cases: List[Tuple[int, List[int], List[int]]]) -> List[int]:\n    res = []\n    for i in range(t):\n        n = test_cases[i][0]\n        a = test_cases[i][1]\n        b = test_cases[i][2]\n        for i in range(n):\n            if a[i] < b[i]:\n                (a[i], b[i]) = (b[i], a[i])\n        c = [[a[i], b[i]] for i in range(n)]\n        c.sort()\n        mx = c[n - 1][0]\n        mn = c[0][0]\n        res.append(mx - mn)\n        fmi = [0] * n\n        fmx = [0] * n\n        lmi = [0] * n\n        lmx = [0] * n\n        fmi[0] = c[0][0]\n        lmi[n - 1] = c[n - 1][1]\n        fmx[0] = c[0][0]\n        lmx[n - 1] = c[n - 1][1]\n        for i in range(1, n):\n            fmi[i] = min(fmi[i - 1], c[i][0])\n            fmx[i] = max(fmx[i - 1], c[i][0])\n        for i in range(n - 2, -1, -1):\n            lmi[i] = min(lmi[i + 1], c[i][1])\n            lmx[i] = max(lmx[i + 1], c[i][1])\n        for i in range(n - 1, -1, -1):\n            (c[i][0], c[i][1]) = (c[i][1], c[i][0])\n            if i == 0:\n                mx = lmx[0]\n                mn = lmi[0]\n            else:\n                mx = max(fmx[i - 1], lmx[i])\n                mn = min(fmi[i - 1], lmi[i])\n            res[-1] = min(res[-1], mx - mn)\n    return res\nt = int(input())\ntest_cases = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    test_cases.append((n, a, b))\nans = min_diff(t, test_cases)\nfor i in ans:\n    print(i)", "def solve(n, a, b):\n    ans = []\n    for i in range(n):\n        if a[i] < b[i]:\n            (a[i], b[i]) = (b[i], a[i])\n    tup = [[a[i], b[i]] for i in range(n)]\n    tup.sort()\n    mx = tup[n - 1][0]\n    mn = tup[0][0]\n    ans.append(mx - mn)\n    x1 = [0] * n\n    x2 = [0] * n\n    lastMin = [0] * n\n    lastMax = [0] * n\n    x1[0] = tup[0][0]\n    lastMin[n - 1] = tup[n - 1][1]\n    x2[0] = tup[0][0]\n    lastMax[n - 1] = tup[n - 1][1]\n    for i in range(1, n):\n        x1[i] = min(x1[i - 1], tup[i][0])\n        x2[i] = max(x2[i - 1], tup[i][0])\n    for i in range(n - 2, -1, -1):\n        lastMin[i] = min(lastMin[i + 1], tup[i][1])\n        lastMax[i] = max(lastMax[i + 1], tup[i][1])\n    for i in range(n - 1, -1, -1):\n        (tup[i][0], tup[i][1]) = (tup[i][1], tup[i][0])\n        if i == 0:\n            mx = lastMax[0]\n            mn = lastMin[0]\n        else:\n            mx = max(x2[i - 1], lastMax[i])\n            mn = min(x1[i - 1], lastMin[i])\n        ans[-1] = min(ans[-1], mx - mn)\n    return min(ans)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    print(solve(n, arr1, arr2))", "import sys\nfrom typing import List, Tuple\n\ndef min_difference(t: int, test_cases: List[Tuple[int, List[int], List[int]]]) -> List[int]:\n    ans = []\n    for i in range(t):\n        n = test_cases[i][0]\n        a = test_cases[i][1]\n        b = test_cases[i][2]\n        for i in range(n):\n            if a[i] < b[i]:\n                (a[i], b[i]) = (b[i], a[i])\n        combined = [[a[i], b[i]] for i in range(n)]\n        combined.sort()\n        maximum = combined[n - 1][0]\n        minimum = combined[0][0]\n        ans.append(maximum - minimum)\n        firstMin = [0] * n\n        firstMax = [0] * n\n        lastMin = [0] * n\n        lastMax = [0] * n\n        firstMin[0] = combined[0][0]\n        lastMin[n - 1] = combined[n - 1][1]\n        firstMax[0] = combined[0][0]\n        lastMax[n - 1] = combined[n - 1][1]\n        for i in range(1, n):\n            firstMin[i] = min(firstMin[i - 1], combined[i][0])\n            firstMax[i] = max(firstMax[i - 1], combined[i][0])\n        for i in range(n - 2, -1, -1):\n            lastMin[i] = min(lastMin[i + 1], combined[i][1])\n            lastMax[i] = max(lastMax[i + 1], combined[i][1])\n        for i in range(n - 1, -1, -1):\n            (combined[i][0], combined[i][1]) = (combined[i][1], combined[i][0])\n            if i == 0:\n                maximum = lastMax[0]\n                minimum = lastMin[0]\n            else:\n                maximum = max(firstMax[i - 1], lastMax[i])\n                minimum = min(firstMin[i - 1], lastMin[i])\n            ans[-1] = min(ans[-1], maximum - minimum)\n    return ans\nt = int(input())\ntest_cases = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    test_cases.append((n, a, b))\nans = min_difference(t, test_cases)\nfor i in ans:\n    print(i)", "import sys\nfrom typing import List, Tuple\n\ndef min_difference(t: int, test_cases: List[Tuple[int, List[int], List[int]]]) -> List[int]:\n    ans = []\n    for i in range(t):\n        n = test_cases[i][0]\n        a = test_cases[i][1]\n        b = test_cases[i][2]\n        for i in range(n):\n            if a[i] < b[i]:\n                (a[i], b[i]) = (b[i], a[i])\n        combined = [[a[i], b[i]] for i in range(n)]\n        combined.sort()\n        maximum = combined[n - 1][0]\n        minimum = combined[0][0]\n        ans.append(maximum - minimum)\n        firstMin = [0] * n\n        firstMax = [0] * n\n        lastMin = [0] * n\n        lastMax = [0] * n\n        firstMin[0] = combined[0][0]\n        lastMin[n - 1] = combined[n - 1][1]\n        firstMax[0] = combined[0][0]\n        lastMax[n - 1] = combined[n - 1][1]\n        for i in range(1, n):\n            firstMin[i] = min(firstMin[i - 1], combined[i][0])\n            firstMax[i] = max(firstMax[i - 1], combined[i][0])\n        for i in range(n - 2, -1, -1):\n            lastMin[i] = min(lastMin[i + 1], combined[i][1])\n            lastMax[i] = max(lastMax[i + 1], combined[i][1])\n        for i in range(n - 1, -1, -1):\n            (combined[i][0], combined[i][1]) = (combined[i][1], combined[i][0])\n            if i == 0:\n                maximum = lastMax[0]\n                minimum = lastMin[0]\n            else:\n                maximum = max(firstMax[i - 1], lastMax[i])\n                minimum = min(firstMin[i - 1], lastMin[i])\n            ans[-1] = min(ans[-1], maximum - minimum)\n    return ans\nt = int(input())\ntest_cases = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    test_cases.append((n, a, b))\nans = min_difference(t, test_cases)\nfor i in ans:\n    print(i)", "for i in range(int(input())):\n    N = int(input())\n    arr_A = list(map(int, input().split()))\n    arr_B = list(map(int, input().split()))\n    for i in range(N):\n        if arr_A[i] < arr_B[i]:\n            (arr_A[i], arr_B[i]) = (arr_B[i], arr_A[i])\n    c = [[arr_A[i], arr_B[i]] for i in range(N)]\n    c.sort()\n    maxB = c[N - 1][0]\n    minB = c[0][0]\n    soln = maxB - minB\n    fminB = [0 for i in range(N)]\n    fmaxB = [0 for i in range(N)]\n    lminB = [0 for i in range(N)]\n    lmaxB = [0 for i in range(N)]\n    fminB[0] = c[0][0]\n    lminB[N - 1] = c[N - 1][1]\n    fmaxB[0] = c[0][0]\n    lmaxB[N - 1] = c[N - 1][1]\n    for i in range(1, N):\n        fminB[i] = min(fminB[i - 1], c[i][0])\n        fmaxB[i] = max(fmaxB[i - 1], c[i][0])\n    for i in range(N - 2, -1, -1):\n        lminB[i] = min(lminB[i + 1], c[i][1])\n        lmaxB[i] = max(lmaxB[i + 1], c[i][1])\n    for i in range(N - 1, -1, -1):\n        (c[i][0], c[i][1]) = (c[i][1], c[i][0])\n        if i == 0:\n            maxB = lmaxB[0]\n            minB = lminB[0]\n        else:\n            maxB = max(fmaxB[i - 1], lmaxB[i])\n            minB = min(fminB[i - 1], lminB[i])\n        ss = maxB - minB\n        soln = min(soln, ss)\n    print(soln)", "for etgh in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    aa = list(a)\n    bb = list(b)\n    for y in range(n):\n        if a[y] < b[y]:\n            qweq = a[y]\n            a[y] = b[y]\n            b[y] = qweq\n    k = []\n    for t in range(n):\n        k.append([a[t], b[t], t])\n    k.sort()\n    mn = k[0][0]\n    mx = k[n - 1][0]\n    ans = mx - mn\n    a1 = [0 for w in range(n)]\n    a2 = [0 for w in range(n)]\n    b1 = [0 for w in range(n)]\n    b2 = [0 for w in range(n)]\n    a1[0] = k[0][0]\n    a2[0] = k[0][0]\n    b1[n - 1] = k[n - 1][1]\n    b2[n - 1] = k[n - 1][1]\n    for d in range(1, n):\n        a1[d] = min(a1[d - 1], k[d][0])\n        a2[d] = max(a2[d - 1], k[d][0])\n    for f in range(n - 2, -1, -1):\n        b1[f] = min(b1[f + 1], k[f][1])\n        b2[f] = max(b2[f + 1], k[f][1])\n    for g in range(n - 1, -1, -1):\n        r = k[g][0]\n        k[g][0] = k[g][1]\n        k[g][1] = r\n        if g == 0:\n            maxi = b2[0]\n            mini = b1[0]\n        else:\n            maxi = max(a2[g - 1], b2[g])\n            mini = min(a1[g - 1], b1[g])\n        ans = min(ans, maxi - mini)\n    print(ans)", "for etgh in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    aa = list(a)\n    bb = list(b)\n    for y in range(n):\n        if a[y] < b[y]:\n            qweq = a[y]\n            a[y] = b[y]\n            b[y] = qweq\n    k = []\n    for t in range(n):\n        k.append([a[t], b[t], t])\n    k.sort()\n    mn = k[0][0]\n    mx = k[n - 1][0]\n    ans = mx - mn\n    a1 = [0 for w in range(n)]\n    a2 = [0 for w in range(n)]\n    b1 = [0 for w in range(n)]\n    b2 = [0 for w in range(n)]\n    a1[0] = k[0][0]\n    a2[0] = k[0][0]\n    b1[n - 1] = k[n - 1][1]\n    b2[n - 1] = k[n - 1][1]\n    for d in range(1, n):\n        a1[d] = min(a1[d - 1], k[d][0])\n        a2[d] = max(a2[d - 1], k[d][0])\n    for f in range(n - 2, -1, -1):\n        b1[f] = min(b1[f + 1], k[f][1])\n        b2[f] = max(b2[f + 1], k[f][1])\n    for g in range(n - 1, -1, -1):\n        r = k[g][0]\n        k[g][0] = k[g][1]\n        k[g][1] = r\n        if g == 0:\n            maxi = b2[0]\n            mini = b1[0]\n        else:\n            maxi = max(a2[g - 1], b2[g])\n            mini = min(a1[g - 1], b1[g])\n        ans = min(ans, maxi - mini)\n    print(ans)", "m = int(input())\nfor i in range(m):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for j in range(n):\n        if a[j] < b[j]:\n            (a[j], b[j]) = (b[j], a[j])\n    c = []\n    for k in range(n):\n        c.append([a[k], b[k]])\n    c.sort()\n    maxi = c[n - 1][0]\n    mini = c[0][0]\n    ans = maxi - mini\n    firstmin = [0] * n\n    firstmax = [0] * n\n    lastmin = [0] * n\n    lastmax = [0] * n\n    firstmin[0] = c[0][0]\n    lastmin[n - 1] = c[n - 1][1]\n    firstmax[0] = c[0][0]\n    lastmax[n - 1] = c[n - 1][1]\n    for q in range(1, n):\n        firstmin[q] = min(firstmin[q - 1], c[q][0])\n        firstmax[q] = max(firstmax[q - 1], c[q][0])\n    for w in range(n - 2, -1, -1):\n        lastmin[w] = min(lastmin[w + 1], c[w][1])\n        lastmax[w] = max(lastmax[w + 1], c[w][1])\n    for e in range(n - 1, -1, -1):\n        (c[e][0], c[e][1]) = (c[e][1], c[e][0])\n        if e == 0:\n            maxi = lastmax[0]\n            mini = lastmin[0]\n        else:\n            maxi = max(firstmax[e - 1], lastmax[e])\n            mini = min(firstmin[e - 1], lastmin[e])\n        ans = min(ans, maxi - mini)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    for i in range(n):\n        if A[i] < B[i]:\n            tmp = A[i]\n            A[i] = B[i]\n            B[i] = tmp\n    AB = [[-1 for i in range(2)] for i in range(n)]\n    for i in range(n):\n        AB[i][0] = A[i]\n        AB[i][1] = B[i]\n    AB.sort(key=lambda row: row[0])\n    (L, R) = ([], [])\n    for i in range(len(AB)):\n        L.append(AB[i][0])\n        R.append(AB[i][1])\n    (R_max, R_min) = (max(R), min(R))\n    maxi = float('-inf')\n    mini = float('inf')\n    for i in reversed(range(len(R))):\n        maxi = max(maxi, R[i])\n        mini = min(mini, R[i])\n        R[i] = [mini, maxi]\n    diff = min(max(L) - min(L), R_max - R_min)\n    for i in range(0, n - 1):\n        (L_max, R_max) = (L[n - i - 2], R[-i - 1][1])\n        (L_min, R_min) = (L[0], R[-i - 1][0])\n        A_max = max(L_max, R_max)\n        A_min = min(L_min, R_min)\n        diff = min(diff, A_max - A_min)\n    print(diff)", "def swap(A, B, i):\n    (A[i], B[i]) = (B[i], A[i])\n\ndef solution(A, B, n):\n    for i in range(n):\n        if A[i] < B[i]:\n            swap(A, B, i)\n    combined = [[0 for i in range(2)] for j in range(n)]\n    for i in range(n):\n        combined[i][0] = A[i]\n        combined[i][1] = B[i]\n    combined.sort(key=lambda x: x[0])\n    maxx = combined[n - 1][0]\n    minn = combined[0][0]\n    ans = maxx - minn\n    firstmin = [0] * n\n    firstmax = [0] * n\n    lastmin = [0] * n\n    lastmax = [0] * n\n    firstmin[0] = combined[0][0]\n    lastmin[n - 1] = combined[n - 1][1]\n    firstmax[0] = combined[0][0]\n    lastmax[n - 1] = combined[n - 1][1]\n    for i in range(1, n):\n        firstmin[i] = min(firstmin[i - 1], combined[i][0])\n        firstmax[i] = max(firstmax[i - 1], combined[i][0])\n    for i in range(n - 2, -1, -1):\n        lastmin[i] = min(lastmin[i + 1], combined[i][1])\n        lastmax[i] = max(lastmax[i + 1], combined[i][1])\n    for i in range(n - 1, -1, -1):\n        (combined[i][0], combined[i][1]) = (combined[i][1], combined[i][0])\n        if i == 0:\n            maxx = lastmax[0]\n            minn = lastmin[0]\n        else:\n            maxx = max(firstmax[i - 1], lastmax[i])\n            minn = min(firstmin[i - 1], lastmin[i])\n        ans = min(ans, maxx - minn)\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    solution(A, B, n)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    for i in range(N):\n        if arr1[i] < arr2[i]:\n            (arr1[i], arr2[i]) = (arr2[i], arr1[i])\n    combined_arr = [[arr1[i], arr2[i]] for i in range(N)]\n    combined_arr.sort()\n    max_val = combined_arr[N - 1][0]\n    min_val = combined_arr[0][0]\n    ans = max_val - min_val\n    first_min = [0] * N\n    first_max = [0] * N\n    last_min = [0] * N\n    last_max = [0] * N\n    first_min[0] = combined_arr[0][0]\n    last_min[N - 1] = combined_arr[N - 1][1]\n    first_max[0] = combined_arr[0][0]\n    last_max[N - 1] = combined_arr[N - 1][1]\n    for i in range(1, N):\n        first_min[i] = min(first_min[i - 1], combined_arr[i][0])\n        first_max[i] = max(first_max[i - 1], combined_arr[i][0])\n    for i in range(N - 2, -1, -1):\n        last_min[i] = min(last_min[i + 1], combined_arr[i][1])\n        last_max[i] = max(last_max[i + 1], combined_arr[i][1])\n    for i in range(N - 1, -1, -1):\n        (combined_arr[i][0], combined_arr[i][1]) = (combined_arr[i][1], combined_arr[i][0])\n        if i == 0:\n            max_val = last_max[0]\n            min_val = last_min[0]\n        else:\n            max_val = max(first_max[i - 1], last_max[i])\n            min_val = min(first_min[i - 1], last_min[i])\n        ans = min(ans, max_val - min_val)\n    print(ans)", "for i in range(int(input())):\n    num_elements = int(input())\n    array1 = list(map(int, input().split()))\n    array2 = list(map(int, input().split()))\n    for i in range(num_elements):\n        if array1[i] < array2[i]:\n            (array1[i], array2[i]) = (array2[i], array1[i])\n    combined_array = [[array1[i], array2[i]] for i in range(num_elements)]\n    combined_array.sort()\n    max_element = combined_array[num_elements - 1][0]\n    min_element = combined_array[0][0]\n    result = max_element - min_element\n    first_min_array = [0] * num_elements\n    first_max_array = [0] * num_elements\n    last_min_array = [0] * num_elements\n    last_max_array = [0] * num_elements\n    first_min_array[0] = combined_array[0][0]\n    last_min_array[num_elements - 1] = combined_array[num_elements - 1][1]\n    first_max_array[0] = combined_array[0][0]\n    last_max_array[num_elements - 1] = combined_array[num_elements - 1][1]\n    for i in range(1, num_elements):\n        first_min_array[i] = min(first_min_array[i - 1], combined_array[i][0])\n        first_max_array[i] = max(first_max_array[i - 1], combined_array[i][0])\n    for i in range(num_elements - 2, -1, -1):\n        last_min_array[i] = min(last_min_array[i + 1], combined_array[i][1])\n        last_max_array[i] = max(last_max_array[i + 1], combined_array[i][1])\n    for i in range(num_elements - 1, -1, -1):\n        (combined_array[i][0], combined_array[i][1]) = (combined_array[i][1], combined_array[i][0])\n        if i == 0:\n            max_element = last_max_array[0]\n            min_element = last_min_array[0]\n        else:\n            max_element = max(first_max_array[i - 1], last_max_array[i])\n            min_element = min(first_min_array[i - 1], last_min_array[i])\n        result = min(result, max_element - min_element)\n    print(result)", "lm = int(input())\nwhile lm > 0:\n    nb = int(input())\n    ab = list(map(int, input().split()))\n    bb = list(map(int, input().split()))\n    for ib in range(nb):\n        if ab[ib] < bb[ib]:\n            (ab[ib], bb[ib]) = (bb[ib], ab[ib])\n    combined = []\n    for ib in range(nb):\n        combined.append([ab[ib], bb[ib]])\n    combined.sort()\n    maximumb = combined[nb - 1][0]\n    minimumb = combined[0][0]\n    ansb = maximumb - minimumb\n    firstMinb = [0] * nb\n    firstMaxb = [0] * nb\n    lastMinb = [0] * nb\n    lastMaxb = [0] * nb\n    firstMinb[0] = combined[0][0]\n    lastMinb[nb - 1] = combined[nb - 1][1]\n    firstMaxb[0] = combined[0][0]\n    lastMaxb[nb - 1] = combined[nb - 1][1]\n    for ib in range(1, nb):\n        firstMinb[ib] = min(firstMinb[ib - 1], combined[ib][0])\n        firstMaxb[ib] = max(firstMaxb[ib - 1], combined[ib][0])\n    for ib in range(nb - 2, -1, -1):\n        lastMinb[ib] = min(lastMinb[ib + 1], combined[ib][1])\n        lastMaxb[ib] = max(lastMaxb[ib + 1], combined[ib][1])\n    for ib in range(nb - 1, -1, -1):\n        (combined[ib][0], combined[ib][1]) = (combined[ib][1], combined[ib][0])\n        if ib == 0:\n            maximumb = lastMaxb[0]\n            minimumb = lastMinb[0]\n        else:\n            maximumb = max(firstMaxb[ib - 1], lastMaxb[ib])\n            minimumb = min(firstMinb[ib - 1], lastMinb[ib])\n        ansb = min(ansb, maximumb - minimumb)\n    print(ansb)\n    lm -= 1", "from sys import stdin, stdout\nfrom heapq import heapify, heappop, heappush\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    l1 = list(map(int, stdin.readline().split()))\n    l2 = list(map(int, stdin.readline().split()))\n    l = []\n    for i in range(n):\n        k = [l1[i], l2[i]]\n        k.sort()\n        l.append(k)\n    l.sort()\n    h = []\n    heapify(h)\n    maxi = 0\n    for i in range(n):\n        a = l[i]\n        heappush(h, [a[0], i])\n        maxi = max(maxi, a[0])\n    temp = heappop(h)\n    ans = maxi - temp[0]\n    heappush(h, temp)\n    for i in range(n):\n        a = heappop(h)\n        heappush(h, [l[a[1]][1], 10 ** 10])\n        maxi = max(maxi, l[a[1]][1])\n        temp = heappop(h)\n        ans = min(ans, maxi - temp[0])\n        heappush(h, temp)\n        if temp[1] != i + 1:\n            break\n    print(ans)", "from heapq import heapify, heappop, heappush\nfor _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        k = [l1[i], l2[i]]\n        k.sort()\n        l.append(k)\n    l.sort()\n    h = []\n    heapify(h)\n    maxi = 0\n    for i in range(n):\n        a = l[i]\n        heappush(h, [a[0], i])\n        maxi = max(maxi, a[0])\n    temp = heappop(h)\n    ans = maxi - temp[0]\n    heappush(h, temp)\n    for i in range(n):\n        a = heappop(h)\n        heappush(h, [l[a[1]][1], 10 ** 10])\n        maxi = max(maxi, l[a[1]][1])\n        temp = heappop(h)\n        ans = min(ans, maxi - temp[0])\n        heappush(h, temp)\n        if temp[1] != i + 1:\n            break\n    print(ans)", "import numpy as np\nT = int(input())\nwhile T != 0:\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    pairs = []\n    for i in range(len(l1)):\n        if l1[i] < l2[i]:\n            (l1[i], l2[i]) = (l2[i], l1[i])\n    for i in range(len(l1)):\n        pairs.append([l1[i], l2[i]])\n    pairs = np.array(pairs)\n    pairs = pairs[pairs[:, 0].argsort()]\n    high = pairs[-1][0]\n    low = pairs[0][0]\n    ans = high - low\n    (fmax, fmin, lmax, lmin) = ([0 for i in range(n)], [0 for i in range(n)], [0 for i in range(n)], [0 for i in range(n)])\n    fmin[0] = int(pairs[0][0])\n    lmin[n - 1] = int(pairs[n - 1][1])\n    fmax[0] = int(pairs[0][0])\n    lmax[n - 1] = int(pairs[n - 1][1])\n    for i in range(1, n):\n        fmin[i] = min(fmin[i - 1], int(pairs[i][0]))\n        fmax[i] = max(fmax[i - 1], int(pairs[i][0]))\n    for i in range(n - 2, -1, -1):\n        lmin[i] = min(lmin[i + 1], int(pairs[i][1]))\n        lmax[i] = max(lmax[i + 1], int(pairs[i][1]))\n    for i in range(n - 1, -1, -1):\n        (pairs[i][0], pairs[i][1]) = (pairs[i][1], pairs[i][0])\n        if i == 0:\n            high = lmax[0]\n            low = lmin[0]\n        else:\n            high = max(fmax[i - 1], lmax[i])\n            low = min(fmin[i - 1], lmin[i])\n        ans = min(ans, high - low)\n    print(ans)\n    T -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    for i in range(n):\n        if arr[i] < brr[i]:\n            (arr[i], brr[i]) = (brr[i], arr[i])\n    merge = []\n    for i in range(n):\n        merge.append([arr[i], brr[i]])\n    merge.sort()\n    maximum = merge[n - 1][0]\n    minimum = merge[0][0]\n    result = maximum - minimum\n    first_Min = [0] * n\n    first_Max = [0] * n\n    last_Min = [0] * n\n    last_Max = [0] * n\n    first_Min[0] = merge[0][0]\n    last_Min[n - 1] = merge[n - 1][1]\n    first_Max[0] = merge[0][0]\n    last_Max[n - 1] = merge[n - 1][1]\n    for i in range(1, n):\n        first_Min[i] = min(first_Min[i - 1], merge[i][0])\n        first_Max[i] = max(first_Max[i - 1], merge[i][0])\n    for i in range(n - 2, -1, -1):\n        last_Min[i] = min(last_Min[i + 1], merge[i][1])\n        last_Max[i] = max(last_Max[i + 1], merge[i][1])\n    for i in range(n - 1, -1, -1):\n        (merge[i][0], merge[i][1]) = (merge[i][1], merge[i][0])\n        if i == 0:\n            maximum = last_Max[0]\n            minimum = last_Min[0]\n        else:\n            maximum = max(first_Max[i - 1], last_Max[i])\n            minimum = min(first_Min[i - 1], last_Min[i])\n        result = min(result, maximum - minimum)\n    print(result)\n    t -= 1", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = [int(numa) for numa in input().split()]\n    b = [int(numb) for numb in input().split()]\n    for j in range(n):\n        if a[j] < b[j]:\n            temp = a[j]\n            a[j] = b[j]\n            b[j] = temp\n    c = []\n    for j in range(n):\n        l = []\n        l.append(a[j])\n        l.append(b[j])\n        c.append(l)\n    c.sort()\n    maximum = c[n - 1][0]\n    minimum = c[0][0]\n    ans = maximum - minimum\n    fmin = [0] * n\n    fmax = [0] * n\n    lmin = [0] * n\n    lmax = [0] * n\n    fmin[0] = c[0][0]\n    lmin[n - 1] = c[n - 1][1]\n    fmax[0] = c[0][0]\n    lmax[n - 1] = c[n - 1][1]\n    for i in range(1, n):\n        fmin[i] = min(fmin[i - 1], c[i][0])\n        fmax[i] = max(fmax[i - 1], c[i][0])\n    for i in range(n - 2, -1, -1):\n        lmin[i] = min(lmin[i + 1], c[i][1])\n        lmax[i] = max(lmax[i + 1], c[i][1])\n    for i in range(n - 1, -1, -1):\n        temp = c[i][0]\n        c[i][0] = c[i][1]\n        c[i][1] = temp\n        if i == 0:\n            maximum = lmax[0]\n            minimum = lmin[0]\n        else:\n            maximum = max(fmax[i - 1], lmax[i])\n            minimum = min(fmin[i - 1], lmin[i])\n        ans = min(ans, maximum - minimum)\n    print(ans)", "def main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    for i in range(N):\n        if A[i] < B[i]:\n            temp = A[i]\n            A[i] = B[i]\n            B[i] = temp\n    combined = []\n    for i in range(N):\n        combined.append([A[i], B[i]])\n    combined = sorted(combined, key=lambda x: x[0])\n    MAX = combined[N - 1][0]\n    MIN = combined[0][0]\n    ans = MAX - MIN\n    (firstMin, firstMax, lastMin, lastMax) = ([0] * N, [0] * N, [0] * N, [0] * N)\n    firstMin[0] = combined[0][0]\n    lastMin[N - 1] = combined[N - 1][1]\n    firstMax[0] = combined[0][0]\n    lastMax[N - 1] = combined[N - 1][1]\n    for i in range(1, N):\n        firstMin[i] = min(firstMin[i - 1], combined[i][0])\n        firstMax[i] = max(firstMax[i - 1], combined[i][0])\n    for i in range(N - 2, -1, -1):\n        lastMin[i] = min(lastMin[i + 1], combined[i][1])\n        lastMax[i] = max(lastMax[i + 1], combined[i][1])\n    for i in range(N - 1, -1, -1):\n        temp = combined[i][0]\n        combined[i][0] = combined[i][1]\n        combined[i][1] = temp\n        if i == 0:\n            MAX = lastMax[0]\n            MIN = lastMin[0]\n        else:\n            MAX = max(firstMax[i - 1], lastMax[i])\n            MIN = min(firstMin[i - 1], lastMin[i])\n        ans = min(ans, MAX - MIN)\n    return ans\nfor _ in range(int(input())):\n    print(main())", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    A = [int(x) for x in input().split(' ')]\n    B = [int(x) for x in input().split(' ')]\n    C = [[0 for i in range(2)] for j in range(n)]\n    for i in range(n):\n        C[i][0] = A[i]\n        C[i][1] = B[i]\n    for i in range(n):\n        if C[i][0] < C[i][1]:\n            (C[i][0], C[i][1]) = (C[i][1], C[i][0])\n    C.sort()\n    max1 = C[n - 1][0]\n    min1 = C[0][0]\n    ans = max1 - min1\n    fMin = [0] * n\n    fMax = [0] * n\n    lMin = [0] * n\n    lMax = [0] * n\n    fMin[0] = C[0][0]\n    lMin[n - 1] = C[n - 1][1]\n    fMax[0] = C[0][0]\n    lMax[n - 1] = C[n - 1][1]\n    for i in range(1, n):\n        fMin[i] = min(fMin[i - 1], C[i][0])\n        fMax[i] = max(fMax[i - 1], C[i][0])\n    for i in range(n - 2, -1, -1):\n        lMin[i] = min(lMin[i + 1], C[i][1])\n        lMax[i] = max(lMax[i + 1], C[i][1])\n    for i in range(n - 1, -1, -1):\n        (C[i][0], C[i][1]) = (C[i][1], C[i][0])\n        if i == 0:\n            max1 = lMax[0]\n            min1 = lMin[0]\n        else:\n            max1 = max(fMax[i - 1], lMax[i])\n            min1 = min(fMin[i - 1], lMin[i])\n        ans = min(ans, max1 - min1)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] < b[i]:\n            (a[i], b[i]) = (b[i], a[i])\n    co = list(sorted(zip(a, b)))\n    c = [list(i) for i in co]\n    res = c[n - 1][0] - c[0][0]\n    firstMin = [c[0][0]] * n\n    firstMax = [c[0][0]] * n\n    lastMin = [c[n - 1][1]] * n\n    lastMax = [c[n - 1][1]] * n\n    for i in range(1, n):\n        firstMin[i] = min(firstMin[i - 1], c[i][0])\n        firstMax[i] = max(firstMax[i - 1], c[i][0])\n    for i in range(n - 2, -1, -1):\n        lastMin[i] = min(lastMin[i + 1], c[i][1])\n        lastMax[i] = max(lastMax[i + 1], c[i][1])\n    for i in range(n - 1, -1, -1):\n        if i == 0:\n            mx = lastMax[0]\n            mn = lastMin[0]\n        else:\n            mx = max(firstMax[i - 1], lastMax[i])\n            mn = min(firstMin[i - 1], lastMin[i])\n        res = min(res, mx - mn)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    for i in range(n):\n        if A[i] < B[i]:\n            (A[i], B[i]) = (B[i], A[i])\n    C = [[0, 0] for x in range(n)]\n    for i in range(n):\n        C[i][0] = A[i]\n        C[i][1] = B[i]\n    C = sorted(C, key=lambda l: l[0])\n    (maxC, minC) = (C[n - 1][0], C[0][0])\n    delta = maxC - minC\n    helper1 = [0 for x in range(n)]\n    helper2 = [0 for x in range(n)]\n    helper1B = [0 for x in range(n)]\n    helper2B = [0 for x in range(n)]\n    (helper1[0], helper2[n - 1], helper1B[0], helper2B[n - 1]) = (C[0][0], C[n - 1][1], C[0][0], C[n - 1][1])\n    for i in range(1, n):\n        helper1[i] = min(helper1[i - 1], C[i][0])\n        helper1B[i] = max(helper1B[i - 1], C[i][0])\n    for i in range(n - 2, -1, -1):\n        helper2[i] = min(helper2[i + 1], C[i][1])\n        helper2B[i] = max(helper2B[i + 1], C[i][1])\n    for i in range(n - 1, -1, -1):\n        (C[i][0], C[i][1]) = (C[i][1], C[i][0])\n        if i == 0:\n            (maxA, minA) = (helper2B[0], helper2[0])\n        else:\n            maxA = max(helper1B[i - 1], helper2B[i])\n            minA = min(helper1[i - 1], helper2[i])\n        Delta = maxA - minA\n        delta = min(delta, Delta)\n    print(delta)", "import heapq\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    t1 = []\n    maxx = max(a)\n    minn = min(a)\n    ans = maxx - minn\n    for i in range(n):\n        t1.append([-a[i], -b[i]])\n    heapq.heapify(t1)\n    while True:\n        if ans > abs(t1[0][0]) - minn:\n            ans = abs(t1[0][0]) - minn\n        if abs(t1[0][0]) <= abs(t1[0][1]):\n            break\n        t = heapq.heappop(t1)\n        (t[0], t[1]) = (t[1], t[0])\n        if abs(t[0]) < minn:\n            minn = abs(t[0])\n        heapq.heappush(t1, t)\n    maxx = abs(t1[0][0])\n    for i in range(n):\n        t1[i][0] = -t1[i][0]\n        t1[i][1] = -t1[i][1]\n        if maxx < t1[i][0]:\n            maxx = t1[i][0]\n    heapq.heapify(t1)\n    while True:\n        if ans > maxx - t1[0][0]:\n            ans = maxx - t1[0][0]\n        if t1[0][0] >= t1[0][1]:\n            break\n        t = heapq.heappop(t1)\n        (t[0], t[1]) = (t[1], t[0])\n        if maxx < t[0]:\n            maxx = t[0]\n        heapq.heappush(t1, t)\n    print(ans)", "import heapq\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    (t1, t2) = ([], [])\n    maxx = max(a)\n    minn = min(a)\n    ans = maxx - minn\n    for i in range(n):\n        t1.append([-a[i], -b[i]])\n    heapq.heapify(t1)\n    while True:\n        if ans > abs(t1[0][0]) - minn:\n            ans = abs(t1[0][0]) - minn\n        if abs(t1[0][0]) <= abs(t1[0][1]):\n            break\n        t = heapq.heappop(t1)\n        (t[0], t[1]) = (t[1], t[0])\n        if abs(t[0]) < minn:\n            minn = abs(t[0])\n        heapq.heappush(t1, t)\n    maxx = abs(t1[0][0])\n    for i in range(n):\n        t1[i][0] = -t1[i][0]\n        t1[i][1] = -t1[i][1]\n        if maxx < t1[i][0]:\n            maxx = t1[i][0]\n    heapq.heapify(t1)\n    while True:\n        if ans > maxx - t1[0][0]:\n            ans = maxx - t1[0][0]\n        if t1[0][0] >= t1[0][1]:\n            break\n        t = heapq.heappop(t1)\n        (t[0], t[1]) = (t[1], t[0])\n        if maxx < t[0]:\n            maxx = t[0]\n        heapq.heappush(t1, t)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ad = a\n    bd = b\n    maxa = max(a)\n    mina = min(a)\n    maxai = a.index(maxa)\n    minai = a.index(mina)\n    d = a[maxai] - a[minai]\n    while True:\n        if bd[minai] > ad[minai]:\n            temp = ad[minai]\n            ad[minai] = bd[minai]\n            bd[minai] = temp\n        maxad = max(ad)\n        minad = min(ad)\n        if maxad - minad < d:\n            d = maxad - minad\n        if ad.index(minad) != minai:\n            minai = ad.index(minad)\n        else:\n            break\n    while True:\n        if bd[maxai] < ad[maxai]:\n            temp = ad[maxai]\n            ad[maxai] = bd[maxai]\n            bd[maxai] = temp\n        maxad = max(ad)\n        minad = min(ad)\n        if maxad - minad < d:\n            d = maxad - minad\n        if ad.index(maxad) != maxai:\n            maxai = ad.index(maxad)\n        else:\n            break\n    print(d)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    arr = [int(ele) for ele in s.strip().split()]\n    s = input()\n    brr = [int(ele) for ele in s.strip().split()]\n    arr = arr + brr\n    arr = [(arr[i], i % n) for i in range(2 * n)]\n    arr.sort()\n    dic = {}\n    mn = 1000000001\n    j = 0\n    for i in range(2 * n):\n        if dic.get(arr[i][1], None) == None:\n            dic[arr[i][1]] = 0\n        dic[arr[i][1]] += 1\n        if len(dic) == n:\n            while len(dic) == n:\n                dic[arr[j][1]] -= 1\n                if dic[arr[j][1]] == 0:\n                    del dic[arr[j][1]]\n                j += 1\n            mn = min(mn, arr[i][0] - arr[j - 1][0])\n    print(mn)\n    t -= 1", "from heapq import heapify, heappop, heappush\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    H = [(-x, -y) if x >= y else (-y, -x) for (x, y) in zip(a, b)]\n    l = min([-x for (x, y) in H])\n    heapify(H)\n    ans = float('inf')\n    while True:\n        (x, y) = heappop(H)\n        x = -x\n        y = -y\n        ans = min(ans, x - l)\n        if y < x:\n            l = min(l, y)\n            heappush(H, (-y, -x))\n        else:\n            break\n    print(ans)", "for tcase in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = [(ai + bi, min(ai, bi), max(ai, bi)) for (ai, bi) in zip(a, b)]\n    c.sort()\n    mnb = [10 ** 9]\n    for (ci, ai, bi) in c:\n        mnb.append(min(mnb[-1], bi))\n    mna = [10 ** 9]\n    for (ci, ai, bi) in reversed(c):\n        mna.append(min(mna[-1], ai))\n    mna.reverse()\n    mn = [min(x, y) for (x, y) in zip(mna, mnb)]\n    mxb = [0]\n    for (ci, ai, bi) in c:\n        mxb.append(max(mxb[-1], bi))\n    mxa = [0]\n    for (ci, ai, bi) in reversed(c):\n        mxa.append(max(mxa[-1], ai))\n    mxa.reverse()\n    mx = [max(x, y) for (x, y) in zip(mxa, mxb)]\n    ans = [mxi - mni for (mni, mxi) in zip(mn, mx)]\n    print(min(ans))", "import math\n\ndef II():\n    return int(input())\n\ndef LII():\n    return [int(x) for x in input().split()]\nfor _ in range(II()):\n    n = II()\n    as_ = LII()\n    bs_ = LII()\n    items = list(enumerate(as_)) + list(enumerate(bs_))\n    items.sort(key=lambda v: v[1])\n    i = 0\n    j = 0\n    totals = n * [0]\n    n_have = 0\n    min_delta = math.inf\n    while True:\n        while j < 2 * n and n_have < n:\n            if totals[items[j][0]] == 0:\n                n_have += 1\n            totals[items[j][0]] += 1\n            j += 1\n        if n_have < n:\n            break\n        while j < 2 * n and items[j][1] == items[j - 1][1]:\n            totals[items[j][0]] += 1\n            j += 1\n        while totals[items[i][0]] == 2:\n            totals[items[i][0]] -= 1\n            i += 1\n        delta = items[j - 1][1] - items[i][1]\n        if delta < min_delta:\n            min_delta = delta\n        assert totals[items[i][0]] == 1\n        totals[items[i][0]] = 0\n        i += 1\n        n_have -= 1\n    print(min_delta)"]