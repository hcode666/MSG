["(k1, k2) = (-1, -1)\nk3 = 0\nk4 = 100\nn = int(input())\nwhile n:\n    n -= 1\n    b = int(input())\n    a = list(map(int, input().split()))\n    (p1, p2) = (0, 0)\n    for i in a:\n        if i & 1:\n            p1 += 1\n        else:\n            p2 += 1\n    if p1 == 0 or (p2 == 0 and p1 & 1) or p1 == 1:\n        print(-1)\n    else:\n        (s1, s2) = ([], [])\n        for i in a:\n            if i & 1:\n                s1.append(i)\n            else:\n                s2.append(i)\n        if p1 & 1:\n            s2.append(s1.pop())\n        for i in s1:\n            print(i, end=' ')\n        for i in s2:\n            print(i, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            even.append(a[i])\n        else:\n            odd.append(a[i])\n    spa = len(even)\n    if spa == 0:\n        if len(odd) % 2 == 0:\n            print(*odd)\n        else:\n            print(-1)\n    else:\n        ans = []\n        if len(odd) == 1 or len(odd) == 0:\n            print(-1)\n        elif len(odd) % 2 == 0:\n            ans = even + odd\n            print(*ans)\n        else:\n            ans = odd[:1] + even + odd[1:]\n            print(*ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    (odd, eve) = (0, 0)\n    for i in a:\n        if i & 1:\n            odd += 1\n        else:\n            eve += 1\n    if odd == 0 or (eve == 0 and odd & 1) or odd == 1:\n        print(-1)\n    else:\n        (o, e) = ([], [])\n        for i in a:\n            if i & 1:\n                o.append(i)\n            else:\n                e.append(i)\n        if odd & 1:\n            e.append(o.pop())\n        for i in o:\n            print(i, end=' ')\n        for i in e:\n            print(i, end=' ')\n        print()", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    (odd, eve) = (0, 0)\n    for i in a:\n        if i & 1:\n            odd += 1\n        else:\n            eve += 1\n    if odd == 0 or (eve == 0 and odd & 1) or odd == 1:\n        print(-1)\n    else:\n        (o, e) = ([], [])\n        for i in a:\n            if i & 1:\n                o.append(i)\n            else:\n                e.append(i)\n        if odd & 1:\n            e.append(o.pop())\n        for i in o:\n            print(i, end=' ')\n        for i in e:\n            print(i, end=' ')\n        print()", "from itertools import permutations\n\ndef solve1():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    odd = []\n    i = 0\n    while i < len(arr):\n        if arr[i] % 2:\n            odd.append(arr[i])\n            del arr[i]\n        else:\n            i += 1\n    if len(odd) <= 1 or (len(odd) == n and n % 2):\n        return -1\n    if len(odd) % 2:\n        arr.append(odd.pop())\n    return ' '.join(map(str, odd + arr))\nfor _ in range(int(input())):\n    print(solve1())", "from itertools import permutations\n\ndef solve1():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    odd = []\n    i = 0\n    while i < len(arr):\n        if arr[i] % 2:\n            odd.append(arr[i])\n            del arr[i]\n        else:\n            i += 1\n    if len(odd) <= 1 or (len(odd) == n and n % 2):\n        return -1\n    if len(odd) % 2:\n        arr.append(odd.pop())\n    return ' '.join(map(str, odd + arr))\nfor _ in range(int(input())):\n    print(solve1())", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    o = 0\n    e = 0\n    o1 = []\n    e1 = []\n    f = 0\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n            e1.append(i)\n        else:\n            o += 1\n            o1.append(i)\n    if o < 2 or (e == 0 and o % 2 != 0):\n        print(-1)\n    elif e == 0 and o % 2 == 0:\n        print(*o1)\n    else:\n        f = 1\n        x1 = []\n        if e > o:\n            if o % 2 == 0:\n                x1 = e1 + o1\n            else:\n                x1 = x1 + o1[0:2]\n                x1 = x1 + e1\n                x1 = x1 + o1[2:]\n        elif o % 2 == 0:\n            x1 = e1 + o1\n        else:\n            x1 = x1 + o1[0:2]\n            x1 = x1 + e1\n            x1 = x1 + o1[2:]\n    if f == 1:\n        print(*x1)", "def solve(n, arr):\n    odd = []\n    even = []\n    for i in range(n):\n        if arr[i] % 2 == 1:\n            odd.append(arr[i])\n        else:\n            even.append(arr[i])\n    if len(odd) == 0:\n        return -1\n    if len(even) == 0:\n        return ' '.join(map(str, odd)) if n % 2 == 0 else -1\n    if len(odd) == 1:\n        return -1\n    if len(odd) % 2 == 0:\n        return ' '.join(map(str, even + odd))\n    e = even.pop()\n    o = odd.pop()\n    return ' '.join(map(str, even + [o] + [e] + odd))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "from itertools import permutations\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    odd = []\n    i = 0\n    while i < len(arr):\n        if arr[i] % 2:\n            odd.append(arr[i])\n            del arr[i]\n        else:\n            i += 1\n    if len(odd) <= 1 or (len(odd) == n and n % 2):\n        return -1\n    if len(odd) % 2:\n        arr.append(odd.pop())\n    return ' '.join(map(str, odd + arr))\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    n = input()\n    arr = list(map(int, input().split()))\n    ae = []\n    ao = []\n    for i in arr:\n        if i % 2 == 0:\n            ae.append(i)\n        else:\n            ao.append(i)\n    if len(ao) <= 1 or (len(ae) == 0 and len(ao) % 2 != 0):\n        print(-1)\n    else:\n        ans = []\n        if len(ao) % 2 == 0:\n            ans = ao + ae\n        else:\n            ans = ao[:-1] + ae\n            ans.append(ao[-1])\n        print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    v = []\n    even = 0\n    odd = 0\n    for i in l:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd % 2 == 0 and odd != 0:\n        for j in l:\n            if j % 2 != 0:\n                v.append(j)\n        for j in l:\n            if j % 2 == 0:\n                v.append(j)\n        print(*v)\n    elif odd != 1 and odd % 2 != 0 and (even != 0):\n        for j in l:\n            if j % 2 != 0:\n                v.append(j)\n        for j in l:\n            if j % 2 == 0:\n                v.append(j)\n        print(*v[1:], v[0])\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (odd, even) = (0, 0)\n    for i in range(n):\n        if l[i] % 2:\n            odd += 1\n        else:\n            even += 1\n    if odd == 0:\n        print(-1)\n    elif odd % 2 == 0:\n        for i in range(n):\n            if l[i] % 2:\n                print(l[i], end=' ')\n        for i in range(n):\n            if not l[i] % 2:\n                print(l[i], end=' ')\n        print()\n    elif odd == 1 or even == 0:\n        print(-1)\n    else:\n        i = 0\n        while odd > 1:\n            if l[i] % 2:\n                print(l[i], end=' ')\n                odd -= 1\n            i += 1\n        for i in range(n):\n            if not l[i] % 2:\n                print(l[i], end=' ')\n            else:\n                temp = l[i]\n        print(temp)", "t = int(input(''))\nfor i in range(0, t):\n    n = int(input(''))\n    lis = list(map(int, input('').split(' ')))\n    o = 0\n    e = 0\n    ol = []\n    el = []\n    for i in lis:\n        if i % 2 == 0:\n            e = e + 1\n            el.append(i)\n        else:\n            o = o + 1\n            ol.append(i)\n    if o == 0 or o == 1:\n        print(-1)\n    elif e == 0:\n        if o % 2 == 1:\n            print(-1)\n        else:\n            for k in ol:\n                print(k, end=' ')\n            print('')\n    elif o % 2 == 0:\n        for k in ol:\n            print(k, end=' ')\n        for q in el:\n            print(q, end=' ')\n        print('')\n    elif o % 2 == 1:\n        for k in ol[1:]:\n            print(k, end=' ')\n        for q in el:\n            print(q, end=' ')\n        print(ol[0])\n        print('')", "t = int(input(''))\nfor i in range(0, t):\n    n = int(input(''))\n    lis = list(map(int, input('').split(' ')))\n    o = 0\n    e = 0\n    ol = []\n    el = []\n    for i in lis:\n        if i % 2 == 0:\n            e = e + 1\n            el.append(i)\n        else:\n            o = o + 1\n            ol.append(i)\n    if o == 0 or o == 1:\n        print(-1)\n    elif e == 0:\n        if o % 2 == 1:\n            print(-1)\n        else:\n            for k in ol:\n                print(k, end=' ')\n            print('')\n    elif o % 2 == 0:\n        for k in ol:\n            print(k, end=' ')\n        for q in el:\n            print(q, end=' ')\n        print('')\n    elif o % 2 == 1:\n        for k in ol[1:]:\n            print(k, end=' ')\n        for q in el:\n            print(q, end=' ')\n        print(ol[0])\n        print('')", "for i in range(int(input())):\n    n = int(input())\n    A = [int(k) for k in input().split()]\n    o = []\n    e = []\n    for k in range(n):\n        if A[k] % 2 == 0:\n            e.append(A[k])\n        else:\n            o.append(A[k])\n    O = len(o)\n    E = len(e)\n    d = []\n    if O == 0 or O == 1:\n        print(-1)\n    elif E != 0:\n        if O % 2 == 0:\n            d = o + e\n            print(*d)\n        else:\n            d = [o[0]] + e + o[1:]\n            print(*d)\n    elif E == 0:\n        if O % 2 == 0:\n            print(*o)\n        else:\n            print(-1)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (o, e) = (0, 0)\n    odd = []\n    even = []\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            e += 1\n            even.append(arr[i])\n        else:\n            o += 1\n            odd.append(arr[i])\n    if o <= 1:\n        print(-1)\n        continue\n    if o % 2 == 0:\n        per = odd + even\n    elif o % 2 != 0 and e > 0:\n        per = odd[:-1] + even + [odd[-1]]\n    else:\n        per = [-1]\n    print(*per)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    e_c = 0\n    o_c = 0\n    od = []\n    ev = []\n    for i in li:\n        if i % 2 == 0:\n            e_c += 1\n            ev.append(i)\n        else:\n            o_c += 1\n            od.append(i)\n    if o_c == 0:\n        print(-1, end=' ')\n    elif o_c == 1 and e_c == 0:\n        print(li[0], end=' ')\n    elif o_c == 1:\n        print(-1, end=' ')\n    elif o_c % 2 == 0:\n        for i in od:\n            print(i, end=' ')\n        for i in ev:\n            print(i, end=' ')\n    elif o_c % 2 != 0 and e_c > 0:\n        for i in range(o_c - 1):\n            print(od[i], end=' ')\n        for i in ev:\n            print(i, end=' ')\n        print(od[o_c - 1], end=' ')\n    else:\n        print(-1, end=' ')\n    print()", "import collections\n\ndef solve(nums):\n    can_solve = False\n    even_odd_zero = collections.defaultdict(list)\n    for n in nums:\n        if n == 0:\n            even_odd_zero['zero'].append(n)\n        elif n % 2:\n            even_odd_zero['odd'].append(n)\n        else:\n            even_odd_zero['even'].append(n)\n    res = []\n    if len(even_odd_zero['odd']) >= 3 and len(even_odd_zero['odd']) % 2 == 1 and (len(even_odd_zero['even']) >= 1):\n        can_solve = True\n        res = [even_odd_zero['odd'][0]] + [even_odd_zero['even'][0]] + even_odd_zero['odd'][1:] + even_odd_zero['even'][1:] + even_odd_zero['zero']\n    if len(even_odd_zero['odd']) >= 2 and len(even_odd_zero['odd']) % 2 == 0:\n        can_solve = True\n        res = even_odd_zero['odd'] + even_odd_zero['even'] + even_odd_zero['zero']\n    print(' '.join(list(map(str, res)))) if can_solve else print(-1)\nfor _ in range(int(input())):\n    N = int(input())\n    nums = list(map(int, input().split()))\n    solve(nums)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (e, o) = ([], [])\n    for i in l:\n        if i % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    k = len(o)\n    if k == 0:\n        print(-1)\n    elif k == n:\n        if k % 2 == 1:\n            print(-1)\n        else:\n            print(*o, sep=' ')\n    elif k == 1:\n        print(-1)\n    elif k % 2 == 1:\n        k = o[-1]\n        o.pop()\n        print(*o, *e, k, sep=' ')\n    else:\n        print(*o, *e, sep=' ')", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    list1 = [int(num) for num in input().split()]\n    odds = 0\n    oddslist = []\n    eveslist = []\n    for i in range(0, len(list1)):\n        if list1[i] % 2 == 1:\n            odds += 1\n            oddslist.append(list1[i])\n        else:\n            eveslist.append(list1[i])\n    if odds == 0:\n        print(-1)\n    elif odds == n and n % 2 == 1:\n        print(-1)\n    elif odds == n and n % 2 == 0:\n        s = ''\n        for i in range(0, len(list1)):\n            s += str(list1[i]) + ' '\n        print(s.strip())\n    else:\n        s = ''\n        if odds % 2 == 0:\n            for i in range(0, len(oddslist)):\n                s += str(oddslist[i]) + ' '\n            for i in range(0, len(eveslist)):\n                s += str(eveslist[i]) + ' '\n            print(s.strip())\n        elif odds != 1:\n            for i in range(0, len(oddslist) - 1):\n                s += str(oddslist[i]) + ' '\n            for i in range(0, len(eveslist)):\n                s += str(eveslist[i]) + ' '\n            s += str(oddslist[len(oddslist) - 1])\n            print(s)\n        else:\n            print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ar = []\n    so = 0\n    se = 0\n    a = []\n    for i in range(n):\n        if arr[i] % 2 == 1:\n            so += 1\n            ar.append(arr[i])\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            se += 1\n            ar.append(arr[i])\n    if so == 1 or so == 0 or (n % 2 == 1 and se == 0):\n        print(-1)\n    elif so % 2 == 0:\n        print(*ar)\n    elif so % 2 == 1:\n        for j in range(1, n):\n            a.append(ar[j])\n        a.append(ar[0])\n        print(*a)\n    else:\n        print(-1)", "def permutation(arr, n):\n    o = []\n    e = []\n    for y in arr:\n        if y % 2 == 0:\n            e.append(y)\n        else:\n            o.append(y)\n    if len(o) == n and n % 2 != 0:\n        return [-1]\n    elif len(o) == n and n % 2 == 0:\n        return arr\n    elif len(e) == n:\n        return [-1]\n    elif len(o) == 1:\n        return [-1]\n    elif len(o) % 2 == 0:\n        for y in e:\n            o.append(y)\n        return o\n    else:\n        ans = []\n        i = 0\n        while i < len(o) - 1:\n            ans.append(o[i])\n            i += 1\n        for y in e:\n            ans.append(y)\n        ans.append(o[len(o) - 1])\n        return ans\ntest_cases = int(input())\nwhile test_cases != 0:\n    data = int(input())\n    data2 = list(map(int, input().split()))\n    print(*permutation(data2, data))\n    test_cases -= 1", "def adjLove(arr):\n    oddCount = 0\n    oddList = []\n    evenList = []\n    for i in range(len(arr)):\n        if arr[i] % 2 != 0:\n            oddCount += 1\n            oddList.append(arr[i])\n        else:\n            evenList.append(arr[i])\n    if oddCount <= 1 or (oddCount % 2 == 1 and len(evenList) == 0):\n        print(-1)\n        return\n    elif oddCount % 2 == 0:\n        for i in range(len(oddList)):\n            print(oddList[i], end=' ')\n        for i in range(len(evenList)):\n            print(evenList[i], end=' ')\n        print()\n    else:\n        for i in range(len(oddList) - 1):\n            print(oddList[i], end=' ')\n        for i in range(len(evenList)):\n            print(evenList[i], end=' ')\n        print(oddList[len(oddList) - 1])\ntests = int(input())\nfor test in range(tests):\n    num = int(input())\n    arr = list(map(int, input().split()))\n    adjLove(arr)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    odd = []\n    even = []\n    for i in a:\n        if i % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n    if len(odd) <= 1:\n        print(-1)\n    elif len(odd) % 2 != 0 and len(even) == 0:\n        print(-1)\n    elif len(odd) % 2 == 0:\n        print(*odd, *even)\n    else:\n        for i in range(len(odd) - 1):\n            print(odd[i], end=' ')\n        print(*even, odd[-1])\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    dx = [int(i) for i in input().split()]\n    eve = 0\n    odd = 0\n    for j in range(n):\n        if dx[j] % 2 == 0:\n            eve += 1\n        else:\n            odd += 1\n    if odd == 0 or odd == 1:\n        print(-1)\n        continue\n    elif odd % 2 == 0:\n        dl = []\n        for j in dx:\n            if j % 2 == 0:\n                pass\n            else:\n                dl.append(j)\n        for j in dx:\n            if j % 2 == 0:\n                dl.append(j)\n        dl = [str(i) for i in dl]\n        print(' '.join(dl))\n    elif eve > 0:\n        dl = []\n        dl_eve = []\n        dl_odd = []\n        for j in dx:\n            if j % 2 == 0:\n                dl_eve.append(j)\n            else:\n                dl_odd.append(j)\n        for j in dl_odd[:-1]:\n            dl.append(j)\n        for j in dl_eve:\n            dl.append(j)\n        dl.append(dl_odd[-1])\n        dl = [str(i) for i in dl]\n        print(' '.join(dl))\n    else:\n        print(-1)\n        continue", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()[:n]))\n    lo = []\n    le = []\n    for i in l:\n        if i % 2 == 0:\n            le.append(i)\n        else:\n            lo.append(i)\n    s1 = len(le)\n    s2 = len(lo)\n    if s2 == n and n % 2 == 1 or s2 <= 1:\n        print(-1)\n    else:\n        if s2 % 2 == 1:\n            print(lo.pop(), end=' ')\n        le.extend(lo)\n        print(*le)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in a:\n        if i % 2:\n            odd.append(i)\n        else:\n            even.append(i)\n    if len(odd) <= 1 or (len(odd) == n and n % 2):\n        print(-1)\n    else:\n        if len(odd) % 2:\n            print(odd.pop(), end=' ')\n        print(*even, end=' ')\n        print(*odd)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in a:\n        if i % 2:\n            odd.append(i)\n        else:\n            even.append(i)\n    if len(odd) <= 1 or (len(odd) == n and n % 2):\n        print(-1)\n    else:\n        if len(odd) % 2:\n            print(odd.pop(), end=' ')\n        print(*even, end=' ')\n        print(*odd)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = sorted(list(filter(lambda i: i % 2, a)))\n    even = sorted(list(filter(lambda i: not i % 2, a)))\n    if odd and (not len(odd) % 2):\n        a = odd + even\n        print(*a)\n    elif even and len(odd) >= 3:\n        a = odd[:-1] + even + [odd[-1]]\n        print(*a)\n    else:\n        print(-1)", "for i in range(int(input())):\n    num = int(input())\n    arr = list(map(int, input().split(' ')))\n    odd = []\n    even = []\n    for ii in arr:\n        if ii % 2 != 0:\n            odd.append(ii)\n        else:\n            even.append(ii)\n    if len(odd) <= 1:\n        print(-1)\n    elif len(odd) % 2 == 0:\n        ans = odd + even\n        print(*ans)\n    elif len(odd) % 2 != 0 and len(even) == 0:\n        print(-1)\n    else:\n        k = odd.pop()\n        ans = odd + even + [k]\n        print(*ans)", "import math, os, io, heapq\nfrom functools import reduce\nfrom sys import stdin, stdout\nfrom collections import Counter, deque, defaultdict\nfrom itertools import product\nimport bisect\n\ndef getList(method=int):\n    return list(map(method, input().split()))\n\ndef getInt():\n    return int(input())\n\ndef solve():\n    (n, a) = (getInt(), getList())\n    (even, odd) = ([], [])\n    for v in a:\n        if v % 2:\n            odd.append(v)\n        else:\n            even.append(v)\n    if not even:\n        print(*(a if n % 2 == 0 else [-1]))\n    elif len(odd) <= 1:\n        print(-1)\n    elif len(odd) % 2 == 0:\n        print(*even, *odd)\n    else:\n        print(odd[0], *even, *odd[1:])\nfor _ in range(getInt()):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in a:\n        if i % 2:\n            odd.append(i)\n        else:\n            even.append(i)\n    if len(odd) <= 1 or (len(odd) == n and n % 2):\n        print(-1)\n    else:\n        if len(odd) % 2:\n            print(odd.pop(), end=' ')\n        print(*even, end=' ')\n        print(*odd)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    evens = []\n    odds = []\n    for A in input().split():\n        if int(A) % 2 == 0:\n            evens.append(A)\n        else:\n            odds.append(A)\n    if len(odds) == 0:\n        print(-1)\n    elif len(odds) % 2 == 0:\n        print(' '.join(evens + odds))\n    elif len(evens) > 0 and len(odds) > 1:\n        last = odds.pop()\n        evens = [last, *evens]\n        print(' '.join(evens + odds))\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    arr = list(map(int, input().split()))\n    ae = []\n    ao = []\n    for i in arr:\n        if i % 2 == 0:\n            ae.append(i)\n        else:\n            ao.append(i)\n    aol = len(ao)\n    ael = len(ae)\n    if aol <= 1 or (ael == 0 and aol % 2 != 0):\n        print(-1)\n    else:\n        ans = []\n        if aol % 2 == 0:\n            ans = ao + ae\n        else:\n            ans = ao[:-1] + ae\n            ans.append(ao[-1])\n        print(*ans)", "def leftRotate(arr):\n    first_elem = arr[0]\n    for idx in range(1, len(arr)):\n        arr[idx - 1] = arr[idx]\n    arr[len(arr) - 1] = first_elem\n    return arr\n\ndef adjLove(n, arr):\n    (n_even, n_odd) = (0, 0)\n    left = 0\n    right = len(arr) - 1\n    while left <= right:\n        if arr[left] % 2 == 0:\n            if arr[right] % 2 == 1:\n                n_even += 1\n                n_odd += 1\n                (arr[left], arr[right]) = (arr[right], arr[left])\n                left += 1\n                right -= 1\n            else:\n                n_even += 1\n                right -= 1\n        else:\n            n_odd += 1\n            left += 1\n    if n_even > 0 and n_odd % 2 == 0 and (n_odd > 1):\n        return arr\n    elif n_even == 0 and n_odd % 2 == 0:\n        return arr\n    elif n_even >= 1 and n_odd % 2 == 1 and (n_odd > 1):\n        return leftRotate(arr)\n    else:\n        return None\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split(' ')))\n    ans = adjLove(n, arr)\n    if ans is not None:\n        for num in ans:\n            print(num, end=' ')\n        print()\n    else:\n        print(-1)", "def leftRotate(arr):\n    first_elem = arr[0]\n    for idx in range(1, len(arr)):\n        arr[idx - 1] = arr[idx]\n    arr[len(arr) - 1] = first_elem\n    return arr\n\ndef adjLove(n, arr):\n    (n_even, n_odd) = (0, 0)\n    left = 0\n    right = len(arr) - 1\n    while left <= right:\n        if arr[left] % 2 == 0:\n            if arr[right] % 2 == 1:\n                n_even += 1\n                n_odd += 1\n                (arr[left], arr[right]) = (arr[right], arr[left])\n                left += 1\n                right -= 1\n            else:\n                n_even += 1\n                right -= 1\n        else:\n            n_odd += 1\n            left += 1\n    if n_even > 0 and n_odd % 2 == 0 and (n_odd > 1):\n        return arr\n    elif n_even == 0 and n_odd % 2 == 0:\n        return arr\n    elif n_even >= 1 and n_odd % 2 == 1 and (n_odd > 1):\n        return leftRotate(arr)\n    else:\n        return None\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split(' ')))\n    ans = adjLove(n, arr)\n    if ans is not None:\n        for num in ans:\n            print(num, end=' ')\n        print()\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    o = []\n    e = []\n    for i in l:\n        if i % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    if len(o) == 1 or len(o) == 0 or (len(o) % 2 == 1 and len(e) == 0):\n        print(-1)\n    elif len(o) % 2 == 0:\n        print(*o + e)\n    else:\n        print(*o[:-1] + e + [o[-1]])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in a:\n        if i % 2:\n            odd.append(i)\n        else:\n            even.append(i)\n    if len(odd) <= 1 or (len(odd) == n and n % 2):\n        print(-1)\n    else:\n        if len(odd) % 2:\n            print(odd.pop(), end=' ')\n        print(*even, end=' ')\n        print(*odd)", "T = int(input())\nfor tc in range(T):\n    N = int(input())\n    arr = list(map(int, input().split(' ')))\n    odd = list(filter(lambda x: x % 2 == 1, arr))\n    even = list(filter(lambda x: x % 2 == 0, arr))\n    oddLen = len(odd)\n    if oddLen <= 1:\n        print(-1)\n        continue\n    if oddLen == len(arr):\n        if oddLen % 2 == 1:\n            print(-1)\n            continue\n        else:\n            print(*arr, sep=' ')\n            continue\n    if oddLen % 2 == 0:\n        arr = odd + even\n    else:\n        arr = odd[:-1] + even\n        arr.append(odd[-1])\n    print(*arr, sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    odd = [x for x in a if x % 2 == 1]\n    even = [x for x in a if x % 2 == 0]\n    if len(odd) == 1 or len(odd) == 0:\n        if len(even) >= 1:\n            print(-1)\n        else:\n            print(*odd)\n        continue\n    if len(odd) % 2 == 0:\n        print(*odd, end=' ')\n        print(*even)\n    elif len(even) < 1:\n        print(-1)\n    else:\n        print(*odd[:len(odd) - 1], end=' ')\n        print(even[0], end=' ')\n        print(odd[len(odd) - 1], end=' ')\n        print(*even[1:])", "for i in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    even = []\n    odd = []\n    for num in array:\n        if num % 2 == 0:\n            even.append(num)\n        else:\n            odd.append(num)\n    len_e = len(even)\n    len_o = len(odd)\n    if len_o == 0:\n        print(-1)\n    elif len_o % 2 == 1 and len_e == 0:\n        print(-1)\n    elif len_o == 1 and len_e > 0:\n        print(-1)\n    elif len_o % 2 == 0:\n        print(*[j for j in odd], end=' ')\n        print(*[j for j in even], end=' ')\n        print()\n    elif len_o % 2 != 0:\n        print(*[j for j in odd[:len_o // 2 * 2]], end=' ')\n        print(*[j for j in even], end=' ')\n        print(*[j for j in odd[len_o // 2 * 2:]], end=' ')\n        print()", "for i in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    even = []\n    odd = []\n    for num in array:\n        if num % 2 == 0:\n            even.append(num)\n        else:\n            odd.append(num)\n    len_e = len(even)\n    len_o = len(odd)\n    if len_o == 0:\n        print(-1)\n    elif len_o % 2 == 1 and len_e == 0:\n        print(-1)\n    elif len_o == 1 and len_e > 0:\n        print(-1)\n    elif len_o % 2 == 0:\n        print(*[j for j in odd], end=' ')\n        print(*[j for j in even], end=' ')\n        print()\n    elif len_o % 2 != 0:\n        print(*[j for j in odd[:len_o // 2 * 2]], end=' ')\n        print(*[j for j in even], end=' ')\n        print(*[j for j in odd[len_o // 2 * 2:]], end=' ')\n        print()", "def change(odd, even):\n    l = []\n    for i in range(0, len(odd) - 1):\n        l.append(odd[i])\n    l.append(even[0])\n    l.append(odd[len(odd) - 1])\n    for j in range(1, len(even)):\n        l.append(even[j])\n    return l\n\ndef merge(odd, even):\n    l = []\n    for num in odd:\n        l.append(num)\n    for num in even:\n        l.append(num)\n    return l\n\ndef solve(l):\n    su = 0\n    for i in range(0, len(l) - 1):\n        su += l[i] * l[i + 1]\n    if su % 2 == 1:\n        return l\n    even = []\n    odd = []\n    for num in l:\n        if num % 2 == 0:\n            even.append(num)\n        else:\n            odd.append(num)\n    if len(odd) % 2 == 1 and len(even) != 0 and (len(odd) > 1):\n        l = change(odd, even)\n    elif len(odd) % 2 == 0 and len(odd) != 0:\n        l = merge(odd, even)\n    else:\n        return -1\n    return l\nn = int(input())\nresults = []\nfor i in range(0, n):\n    num = int(input())\n    l = list(map(int, input().split()))\n    out = solve(l)\n    results.append(out)\nfor li in results:\n    if li == -1:\n        print(-1)\n        continue\n    for num in li:\n        print(num, end='\\t')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (le, lo) = ([], [])\n    for i in l:\n        if i % 2 == 0:\n            le.append(i)\n        else:\n            lo.append(i)\n    if len(lo) == 0 or len(lo) == 1:\n        print(-1)\n        continue\n    if len(lo) % 2 == 0:\n        print(*lo, *le)\n    elif len(le) > 0:\n        print(lo[0], lo[1], *le, end=' ')\n        for i in range(2, len(lo)):\n            print(lo[i], end=' ')\n        print()\n    else:\n        print(-1)", "t = int(input())\nfor testcases in range(t):\n    number = int(input())\n    arr = [int(i) for i in input().split()]\n    odd1 = 0\n    (even, odd) = ([], [])\n    for i in range(number):\n        if arr[i] % 2 == 1:\n            odd1 += 1\n            odd.append(arr[i])\n        else:\n            even.append(arr[i])\n    if len(odd) <= 1:\n        print('-1')\n    elif len(even) == 0 and len(odd) % 2 == 1:\n        print('-1')\n    elif len(odd) % 2 == 0:\n        for i in odd:\n            print(i, end=' ')\n        for j in even:\n            print(j, end=' ')\n    else:\n        for i in range(len(odd) - 1):\n            print(odd[i], end=' ')\n        for j in range(len(even)):\n            print(even[j], end=' ')\n        print(odd[-1])\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (even, odd) = ([], [])\n    for i in a:\n        even.append(str(i)) if i % 2 == 0 else odd.append(str(i))\n    if even == []:\n        print(' '.join(odd) if len(odd) % 2 == 0 else -1)\n    elif len(odd) == 1 or odd == []:\n        print(-1)\n    else:\n        res = odd + even if len(odd) % 2 == 0 else odd[0:1] + even + odd[1:]\n        print(*res)", "from sys import stdin\ninput = stdin.readline\n\ndef answer():\n    (odd, even) = ([], [])\n    for i in range(n):\n        if a[i] & 1:\n            odd.append(a[i])\n        else:\n            even.append(a[i])\n    (size1, size2) = (len(odd), len(even))\n    ans = []\n    if size1 & 1 == 0:\n        if len(odd) <= 1:\n            return [-1]\n        ans += odd + even\n    else:\n        if len(even) == 0:\n            return [-1]\n        if len(odd) <= 1:\n            return [-1]\n        ans.append(odd.pop())\n        ans.append(even.pop())\n        ans += odd\n        ans += even\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*answer())", "from sys import stdin\ninp = stdin.readline\nT = int(inp())\nfor tx in range(T):\n    N = int(input())\n    Ays = list(map(int, inp().split()))\n    ev = []\n    od = []\n    for a in Ays:\n        if a % 2:\n            od.append(a)\n        else:\n            ev.append(a)\n    if len(ev) == 0:\n        if len(od) % 2 == 0:\n            print(*Ays)\n        else:\n            print(-1)\n    elif len(od) < 2:\n        print(-1)\n    elif len(od) % 2 == 0:\n        print(*od, *ev)\n    else:\n        spare = od.pop()\n        print(*od, *ev, spare)", "def solve_v2(_data):\n    data = list(map(int, _data.split()))\n    (even, odd) = ([], [])\n    for i in data:\n        even.append(i) if i & 1 == 0 else odd.append(i)\n    if len(odd) <= 1 or (len(odd) & 1 and len(even) == 0):\n        print(-1)\n    elif len(odd) & 1 != 1:\n        print(*odd, *even)\n    else:\n        if len(odd) % 2:\n            print(odd.pop(), end=' ')\n        print(*even, end=' ')\n        print(*odd)\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = input()\n    solve_v2(A)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    o = 0\n    e = 0\n    o1 = []\n    e1 = []\n    f = 0\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n            e1.append(i)\n        else:\n            o += 1\n            o1.append(i)\n    if o < 2 or (e == 0 and o % 2 != 0):\n        print(-1)\n    elif e == 0 and o % 2 == 0:\n        print(*o1)\n    else:\n        f = 1\n        x1 = []\n        if e > o:\n            if o % 2 == 0:\n                x1 = e1 + o1\n            else:\n                x1 = x1 + o1[0:2]\n                x1 = x1 + e1\n                x1 = x1 + o1[2:]\n        elif o % 2 == 0:\n            x1 = e1 + o1\n        else:\n            x1 = x1 + o1[0:2]\n            x1 = x1 + e1\n            x1 = x1 + o1[2:]\n    if f == 1:\n        print(*x1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in range(n):\n        if l[i] % 2 == 0:\n            even.append(l[i])\n        else:\n            odd.append(l[i])\n    if len(odd) <= 1:\n        print(-1)\n    elif len(odd) % 2 == 1 and len(even) == 0:\n        print(-1)\n    elif len(odd) % 2 == 0:\n        print(*odd, *even)\n    else:\n        for i in range(len(odd) - 1):\n            print(odd[i], end=' ')\n        print(*even, odd[-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in range(n):\n        if l[i] % 2 == 0:\n            even.append(l[i])\n        else:\n            odd.append(l[i])\n    if len(odd) <= 1:\n        print(-1)\n    elif len(odd) % 2 == 1 and len(even) == 0:\n        print(-1)\n    elif len(odd) % 2 == 0:\n        print(*odd, *even)\n    else:\n        for i in range(len(odd) - 1):\n            print(odd[i], end=' ')\n        print(*even, odd[-1])", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    (odd_list, even_list) = ([], [])\n    for i in range(N):\n        if A[i] % 2 == 0:\n            even_list.append(A[i])\n        else:\n            odd_list.append(A[i])\n    if len(odd_list) <= 1:\n        print(-1)\n    elif len(odd_list) % 2 == 0:\n        for items in odd_list:\n            print(items, end=' ')\n        for items in even_list:\n            print(items, end=' ')\n    elif len(odd_list) % 2 != 0:\n        if len(even_list) == 0:\n            print(-1)\n        elif len(even_list) >= 1:\n            for i in range(len(odd_list) - 1):\n                print(odd_list[i], end=' ')\n            for items in even_list:\n                print(items, end=' ')\n            print(odd_list[-1], end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    o = []\n    e = []\n    for i in a:\n        if i & 1 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    if len(o) <= 1:\n        print(-1)\n    elif len(o) & 1 != 0 and len(e) == 0:\n        print(-1)\n    elif len(o) & 1 == 0:\n        print(*o, *e)\n    else:\n        for i in range(len(o) - 1):\n            print(o[i], end=' ')\n        print(*e, o[-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    o = []\n    e = []\n    for i in a:\n        if i & 1 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    if len(o) <= 1:\n        print(-1)\n    elif len(o) & 1 != 0 and len(e) == 0:\n        print(-1)\n    elif len(o) & 1 == 0:\n        print(*o, *e)\n    else:\n        for i in range(len(o) - 1):\n            print(o[i], end=' ')\n        print(*e, o[-1])", "T = int(input())\n\ndef prd_sum(list):\n    sum = 0\n    for i in range(len(list) - 1):\n        sum += list[i] * list[i + 1]\n    return sum\n\ndef operation1(list):\n    (even, odd) = ([], [])\n    for I in range(len(list)):\n        if list[I] % 2 == 0:\n            even.append(list[I])\n        elif list[I] % 2 != 0:\n            odd.append(list[I])\n    odd.sort(reverse=True)\n    even.sort(reverse=True)\n    (a, b) = (len(even), len(odd))\n    result = []\n    if b % 2 == 0:\n        for __ in range(b):\n            result.append(odd[__])\n        for __ in range(a):\n            result.append(even[__])\n    else:\n        for __ in range(b - 1):\n            result.append(odd[__])\n        for __ in range(a):\n            result.append(even[__])\n        result.append(odd[b - 1])\n    return result\n\ndef goornot(list):\n    (even, odd) = ([], [])\n    for I in range(len(list)):\n        if list[I] % 2 == 0:\n            even.append(list[I])\n        elif list[I] % 2 != 0:\n            odd.append(list[I])\n    (a, b) = (len(even), len(odd))\n    return (a, b)\nfor _ in range(T):\n    A = int(input())\n    numbers = list(map(int, input().split()))\n    (b, a) = goornot(numbers)\n    if a == 1 and b != 0 or a == 0 or (a == len(numbers) and a != 1 and (a % 2 != 0) or (a != 1 and a % 2 != 0 and (b == 0))):\n        print('-1')\n    elif prd_sum(numbers) % 2 != 0:\n        print(*numbers)\n    else:\n        print(*operation1(numbers))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(a) == 1:\n        print(*a)\n        continue\n    b = [i for i in a if i % 2 == 1]\n    c = [i for i in a if i % 2 == 0]\n    if len(b) == 0:\n        print(-1)\n        continue\n    if len(b) % 2 == 0:\n        d = b + c\n        print(*d)\n    elif len(c) == 0 or len(b) == 1:\n        print(-1)\n    else:\n        d = b[:len(b) - 1]\n        d += [c[0]]\n        d += [b[-1]]\n        if len(c) > 1:\n            d += c[1:]\n        print(*d)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (e, o) = (0, 0)\n    l1 = []\n    l2 = []\n    for i in l:\n        if i % 2 == 0:\n            e += 1\n            l1.append(i)\n        else:\n            o += 1\n            l2.append(i)\n    if o <= 1:\n        print(-1)\n    elif o % 2 == 0:\n        for i in l2:\n            print(i, end=' ')\n        for i in l1:\n            print(i, end=' ')\n        print()\n    elif e == 0:\n        print(-1)\n    else:\n        for i in range(len(l2) - 1):\n            print(l2[i], end=' ')\n        for i in l1:\n            print(i, end=' ')\n        print(l2[len(l2) - 1])", "for _ in range(int(input())):\n    x = int(input())\n    l = list(map(int, input().split()))\n    e = o = 0\n    even = []\n    odd = []\n    for i in l:\n        if i % 2 == 0:\n            e += 1\n            even.append(i)\n        else:\n            o += 1\n            odd.append(i)\n    if e == x:\n        print(-1)\n        continue\n    if o == x:\n        if o % 2 == 0:\n            print(*l)\n        else:\n            print(-1)\n        continue\n    if o % 2 == 0:\n        print(*odd + even)\n    else:\n        if o <= 1:\n            print(-1)\n            continue\n        for i in odd[:-1]:\n            print(i, end=' ')\n        print(*even, end=' ')\n        print(odd[-1])", "def print_arr(arr):\n    res = ''\n    for x in arr:\n        res = res + str(x) + ' '\n    print(res[:-1])\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    arr = []\n    temp = input()\n    temp = temp.split(' ')\n    arr = [int(x) for x in temp]\n    odds = []\n    eves = []\n    for n in arr:\n        if n % 2 == 0:\n            eves.append(n)\n        else:\n            odds.append(n)\n    if len(odds) < 2:\n        print('-1')\n    elif len(odds) % 2 == 0:\n        temp = odds + eves\n        print_arr(temp)\n    elif len(eves) > 0:\n        temp = odds[:-1] + eves + [odds[-1]]\n        print_arr(temp)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (o, e) = ([], [])\n    for i in l:\n        if i % 2:\n            o.append(i)\n        else:\n            e.append(i)\n    (on, en) = (len(o), len(e))\n    if on <= 1:\n        print(-1)\n    elif en == 0:\n        if on % 2:\n            print(-1)\n        else:\n            print(*o)\n    else:\n        if on % 2:\n            print(o.pop(), end=' ')\n        print(*e, end=' ')\n        print(*o)", "for _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    (odd, even) = ([], [])\n    for a in A:\n        if a % 2:\n            odd.append(a)\n        else:\n            even.append(a)\n    if not odd:\n        print(-1)\n    elif len(odd) % 2 == 0:\n        print(*odd, *even, sep=' ')\n    elif len(odd) == 1:\n        print(-1)\n    elif not even:\n        print(-1)\n    else:\n        print(odd[0], even[0], *odd[1:], *even[1:])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ol = []\n    el = []\n    flag = 0\n    on = 0\n    en = 0\n    for j in a:\n        if j % 2 == 0:\n            el.append(j)\n            en += 1\n        else:\n            ol.append(j)\n            on += 1\n    if on % 2 == 0:\n        res = ol + el\n        flag = 1\n    elif en >= 1:\n        res = ol[:on - 1] + el + [ol[-1]]\n        flag = 1\n    if on <= 1:\n        flag = 0\n    if flag == 0:\n        print(-1)\n    else:\n        for i in range(n):\n            if i == n - 1:\n                print(res[i])\n            else:\n                print(res[i], end=' ')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    result = []\n    oddcount = 0\n    for i in a:\n        if i % 2 != 0:\n            oddcount += 1\n            result.append(i)\n    for i in a:\n        if i % 2 == 0:\n            result.append(i)\n    if oddcount <= 1:\n        print(-1)\n    elif oddcount == n:\n        if n % 2 != 0:\n            print(-1)\n        else:\n            print(*a)\n    elif oddcount % 2 == 0:\n        print(*result)\n    else:\n        result.append(result.pop(0))\n        print(*result)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    l2 = []\n    for i in l:\n        if i % 2 == 0:\n            l1.append(i)\n        else:\n            l2.append(i)\n    if len(l2) <= 1 or (len(l2) == n and n % 2):\n        print(-1)\n    else:\n        if len(l2) % 2:\n            print(l2.pop(), end=' ')\n        print(*l1, end=' ')\n        print(*l2)", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    c = [int(y) for y in input().split()]\n    m = 0\n    n = 0\n    e = []\n    o = []\n    for j in c:\n        if int(j) % 2 == 0:\n            e.append(int(j))\n            m += 1\n        else:\n            o.append(int(j))\n            n += 1\n    if n <= 1:\n        print(-1)\n    elif n % 2 == 0:\n        print(*o, *e)\n    elif n % 2 == 1 and m == 0:\n        print(-1)\n    else:\n        print(*o[:1], *e, *o[1:])", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    ec = 0\n    e = []\n    oc = 0\n    o = []\n    for i in arr:\n        if i % 2 == 0:\n            ec += 1\n            e += [i]\n        else:\n            oc += 1\n            o += [i]\n    if oc <= 1:\n        print(-1)\n    elif oc % 2 == 0:\n        print(*o, *e)\n    elif oc % 2 == 1 and ec == 0:\n        print(-1)\n    else:\n        print(*o[:-1], *e, o[-1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    (od, ev) = (0, 0)\n    for i in a:\n        if i % 2 == 1:\n            b[od] = i\n            od += 1\n        else:\n            b[-ev - 1] = i\n            ev += 1\n    if od < 2 or (od == n and n % 2 == 1):\n        print(-1)\n        continue\n    if od % 2 == 1:\n        (b[od - 1], b[-ev]) = (b[-ev], b[od - 1])\n    print(' '.join(map(str, b)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    result = []\n    oddcount = 0\n    for i in a:\n        if i % 2 != 0:\n            oddcount += 1\n            result.append(i)\n    for i in a:\n        if i % 2 == 0:\n            result.append(i)\n    if oddcount <= 1:\n        print(-1)\n    elif oddcount == n:\n        if n % 2 != 0:\n            print(-1)\n        else:\n            print(*a)\n    elif oddcount % 2 == 0:\n        print(*result)\n    else:\n        result.append(result.pop(0))\n        print(*result)", "from sys import stdin, stdout\ninp_num = lambda : int(input())\ninp_lis = lambda : list(map(int, input().split()))\nfor _ in range(inp_num()):\n    n = inp_num()\n    l = inp_lis()\n    od = 0\n    l1 = []\n    l2 = []\n    for i in l:\n        if i % 2 != 0:\n            od += 1\n            l2.append(i)\n        else:\n            l1.append(i)\n    if od == 0 or od == 1:\n        print(-1)\n    elif od % 2 == 0:\n        print(*l2, end=' ')\n        print(*l1)\n    elif len(l1) > 0:\n        print(*l2[:len(l2) - 1], end=' ')\n        print(l1[0], end=' ')\n        print(l2[-1], end=' ')\n        print(*l1[1:])\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in a:\n        if i % 2:\n            odd.append(i)\n        else:\n            even.append(i)\n    if len(odd) <= 1 or (len(odd) == n and n % 2):\n        print(-1)\n    else:\n        if len(odd) % 2:\n            print(odd.pop(), end=' ')\n        print(*even, end=' ')\n        print(*odd)", "for _ in range(int(input())):\n    n = int(input())\n    inp = list(map(int, input().split()))\n    odd = []\n    even = []\n    for (i, item) in enumerate(inp):\n        if item % 2:\n            odd.append(item)\n        else:\n            even.append(item)\n    if len(odd) < 2:\n        print(-1)\n    elif len(odd) % 2 == 0:\n        print(*odd + even)\n    elif even:\n        print(*odd[:-1] + even + [odd[-1]])\n    else:\n        print(-1)", "n = int(input())\nfor _ in range(n):\n    a = int(input())\n    x = list(map(int, input().split(' ')))\n    (odd, even) = ([], [])\n    for i in range(a):\n        if x[i] % 2 == 0:\n            even.append(x[i])\n        else:\n            odd.append(x[i])\n    if len(odd) <= 1:\n        print('-1')\n    elif len(even) == 0 and len(odd) % 2 == 1:\n        print('-1')\n    elif len(odd) % 2 == 0:\n        for i in odd:\n            print(i, end=' ')\n        for j in even:\n            print(j, end=' ')\n    else:\n        for i in range(len(odd) - 1):\n            print(odd[i], end=' ')\n        for j in range(len(even)):\n            print(even[j], end=' ')\n        print(odd[-1])\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    o = []\n    e = []\n    for i in a:\n        if i & 1:\n            o.append(i)\n        else:\n            e.append(i)\n    ol = len(o)\n    el = len(e)\n    if ol == 1 or el == n or (ol & 1 and el == 0):\n        print(-1)\n    elif ol & 1:\n        print(*o[:-1] + e + [o[-1]])\n    else:\n        print(*o + e)", "for _ in range(int(input())):\n    a = int(input())\n    b = [int(i) for i in input().split()]\n    odd = []\n    even = []\n    for i in b:\n        if i % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n    if len(odd) <= 1 or (len(odd) == a and a % 2 != 0):\n        print(-1)\n    else:\n        if len(odd) % 2 == 1:\n            print(odd.pop(0), end=' ')\n        for i in even:\n            print(i, end=' ')\n        for i in odd:\n            print(i, end=' ')\n        print()", "t = int(input())\n\ndef adLove(arr):\n    even = []\n    odd = []\n    ec = 0\n    oc = 0\n    for i in arr:\n        if i % 2 == 0:\n            ec += 1\n            even.append(i)\n        else:\n            oc += 1\n            odd.append(i)\n    if oc <= 1:\n        print(-1)\n    elif oc % 2 == 0:\n        res = odd + even\n        print(*res)\n    elif ec == 0:\n        print(-1)\n    else:\n        res = odd[:oc - 1] + even + [odd[oc - 1]]\n        print(*res)\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    adLove(arr)", "t = int(input())\n\ndef adLove(arr):\n    even = []\n    odd = []\n    ec = 0\n    oc = 0\n    for i in arr:\n        if i % 2 == 0:\n            ec += 1\n            even.append(i)\n        else:\n            oc += 1\n            odd.append(i)\n    if oc <= 1:\n        print(-1)\n    elif oc % 2 == 0:\n        res = odd + even\n        print(*res)\n    elif ec == 0:\n        print(-1)\n    else:\n        res = odd[:oc - 1] + even + [odd[oc - 1]]\n        print(*res)\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    adLove(arr)", "n = int(input())\nwhile n > 0:\n    n -= 1\n    m = int(input())\n    t = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in range(len(t)):\n        if t[i] % 2 == 0:\n            even.append(t[i])\n        else:\n            odd.append(t[i])\n    if len(odd) <= 1 or (len(even) == 0 and m % 2 == 1):\n        print(-1)\n    elif len(even) == 0:\n        for i in range(m):\n            print(odd[i], end=' ')\n    else:\n        res = []\n        n1 = 0\n        n2 = 0\n        if len(odd) % 2 == 1 and len(odd) > 0:\n            res.append(odd[0])\n            res.append(even[0])\n            n2 += 1\n            n1 += 1\n        while n1 < len(even):\n            res.append(even[n1])\n            n1 += 1\n        while n2 < len(odd):\n            res.append(odd[n2])\n            n2 += 1\n        print(*res, sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (e, o) = (0, 0)\n    (ee, oo) = ([], [])\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n            ee.append(i)\n        else:\n            o += 1\n            oo.append(i)\n    if o <= 1:\n        print(-1)\n    elif n == o:\n        if n % 2 == 0:\n            print(*a, sep=' ')\n        else:\n            print(-1)\n    elif o % 2 == 0:\n        ans = oo + ee\n        print(*ans, sep=' ')\n    else:\n        ans = oo[:-1] + ee + [oo[-1]]\n        print(*ans, sep=' ')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    even = []\n    odd = []\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            even.append(arr[i])\n        else:\n            odd.append(arr[i])\n    if len(odd) <= 1:\n        print('-1')\n    elif len(even) == 0 and len(odd) % 2 == 1:\n        print('-1')\n    elif len(odd) % 2 == 0:\n        for i in odd:\n            print(i, end=' ')\n        for j in even:\n            print(j, end=' ')\n    else:\n        for i in range(len(odd) - 1):\n            print(odd[i], end=' ')\n        for j in range(len(even)):\n            print(even[j], end=' ')\n        print(odd[-1])\n    print()", "from sys import stdin\nfrom math import ceil\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    even = []\n    odd = []\n    for ele in li:\n        if ele % 2 == 0:\n            even.append(ele)\n        else:\n            odd.append(ele)\n    if len(even) == 0:\n        if len(odd) % 2 == 0:\n            print(*odd)\n        else:\n            print(-1)\n    elif len(odd) == 0:\n        print(-1)\n    elif len(odd) == 1:\n        print(-1)\n    elif len(odd) % 2 == 0:\n        print(*odd + even)\n    else:\n        print(*odd[:len(odd) - 1] + even + [odd[-1]])", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    o_list = []\n    e_list = []\n    o_count = 0\n    e_count = 0\n    for num in nums:\n        if num % 2 == 0:\n            e_list.append(num)\n            e_count += 1\n        else:\n            o_list.append(num)\n            o_count += 1\n    if o_count < 2:\n        print(-1)\n    elif o_count % 2 == 0 and o_count != 0:\n        ans_list = o_list + e_list\n        for ans in ans_list:\n            print(ans, end=' ')\n        print()\n    elif e_count > 0:\n        e_list.append(o_list[0])\n        o_list.pop(0)\n        ans_list = o_list + e_list\n        for ans in ans_list:\n            print(ans, end=' ')\n        print()\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    even = []\n    odd = []\n    for i in arr:\n        if i % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n    res = []\n    flag = 0\n    if len(odd) % 2 == 0:\n        res += odd\n    else:\n        flag = 1\n        res += odd[:len(odd) - 1]\n    res += even\n    if flag == 1:\n        res += [odd[-1]]\n    ans = 0\n    for i in range(len(res) - 1):\n        ans += res[i] * res[i + 1]\n    if ans % 2 != 0:\n        for i in res:\n            print(i, end=' ')\n        print()\n    else:\n        print(-1)", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in l:\n        if i % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n    if len(odd) >= 2 and (len(odd) % 2 != 0 and len(even) >= 1 or len(odd) % 2 == 0):\n        if len(odd) % 2 == 0:\n            ll = odd[:] + even[:]\n        else:\n            ll = odd[:-1] + even + [odd[-1]]\n        for i in ll:\n            print(i, end=' ')\n    else:\n        print(-1)\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in l1:\n        if i % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n    if len(odd) <= 1:\n        print('-1')\n    elif len(odd) % 2 != 0 and len(even) == 0:\n        print('-1')\n    elif len(odd) % 2 == 0:\n        for i in odd:\n            print(i, sep=' ', end=' ')\n        for j in even:\n            print(j, sep=' ', end=' ')\n        print()\n    elif len(odd) % 2 != 0 and len(even) >= 1:\n        for i in range(len(odd) - 1):\n            print(odd[i], sep=' ', end=' ')\n        for j in even:\n            print(j, sep=' ', end=' ')\n        print(odd[len(odd) - 1])", "for h in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    even = []\n    odd = []\n    q = []\n    (e, o) = (0, 0)\n    for l in li:\n        if l % 2 == 0:\n            e += 1\n            even.append(l)\n        else:\n            o += 1\n            odd.append(l)\n    if o <= 1 or (o % 2 != 0 and e == 0):\n        print(-1)\n    else:\n        if o % 2 == 0:\n            q.extend(odd)\n            q.extend(even)\n        else:\n            q.extend(odd[:-1])\n            q.extend(even)\n            q.append(odd[-1])\n        print(*q)", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    a = input().split()\n    a_odd = []\n    odd = 0\n    a_even = []\n    even = 0\n    for i in range(n):\n        num = a[i]\n        if int(num) % 2 == 1:\n            a_odd.append(num)\n            odd += 1\n        else:\n            a_even.append(num)\n            even += 1\n    if odd <= 1:\n        print(-1)\n    elif odd % 2 == 0:\n        print(' '.join(a_odd), end=' ')\n        print(' '.join(a_even))\n    elif not even:\n        print(-1)\n    else:\n        print(' '.join(a_odd[:odd - 1]), end=' ')\n        print(' '.join(a_even), end=' ')\n        print(a_odd[odd - 1])", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in arr:\n        if i % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n    if len(even) == n or len(odd) == 1:\n        print(-1)\n    elif len(odd) == n and len(odd) % 2 != 0:\n        print(-1)\n    elif len(odd) % 2 == 0:\n        print(*odd + even)\n    else:\n        for i in range(len(odd) - 1):\n            print(odd[i], end=' ')\n        print(even[0], end=' ')\n        print(odd[-1], end=' ')\n        for i in range(1, len(even)):\n            print(even[i], end=' ')\n        print()", "t = int(input())\nwhile t > 0:\n    odd = []\n    even = []\n    n = int(input())\n    l = list((int(x) for x in input().split()))\n    for i in l:\n        if i % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n    a = len(odd)\n    b = len(even)\n    if len(odd) == n and n % 2 == 1 or len(odd) < 2:\n        print(-1)\n    elif len(odd) % 2 == 1:\n        print(*odd[:-1], end=' ')\n        print(*even, end=' ')\n        print(odd[-1])\n    else:\n        print(*odd, end=' ')\n        print(*even)\n    t = t - 1", "from bisect import bisect_left\nfrom re import sub\nfrom typing import DefaultDict\nimport math\nfrom collections import defaultdict\nfrom math import sqrt\nimport collections\nfrom sys import maxsize\nfrom itertools import combinations_with_replacement\nimport sys\n\ndef sieve_erasthones(n):\n    cnt = 0\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p ** 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\n    for p in range(n + 1):\n        if prime[p]:\n            cnt += 1\n    return cnt\n\ndef calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\n\ndef count_factors(n):\n    i = 1\n    c = 0\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n // i == i:\n                c += 1\n            else:\n                c += 2\n        i += 1\n    return c\n\ndef ncr_modulo(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = num * (n - i) % p\n        den = den * (i + 1) % p\n    return num * pow(den, p - 2, p) % p\n\ndef isprime(n):\n    prime_flag = 0\n    if n > 1:\n        for i in range(2, int(sqrt(n)) + 1):\n            if n % i == 0:\n                prime_flag = 1\n                break\n        if prime_flag == 0:\n            return True\n        else:\n            return False\n    else:\n        return True\n\ndef smallestDivisor(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\n\ndef dict_ele_count(l):\n    d = DefaultDict(lambda : 0)\n    for ele in l:\n        d[ele] += 1\n    return d\n\ndef max_in_dict(d):\n    maxi = 0\n    for ele in d:\n        if d[ele] > maxi:\n            maxi = d[ele]\n    return maxi\n\ndef element_count(s):\n    l = []\n    k = s[0]\n    c = 0\n    for ele in s:\n        if ele == k:\n            c += 1\n        else:\n            l.append([k, c])\n            k = ele\n            c = 1\n    l.append([k, c])\n    return l\n\ndef modular_exponentiation(x, y, p):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 != 0:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\n\ndef number_of_primefactor(n):\n    l = []\n    while n % 2 == 0:\n        l.append(2)\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            l.append(i)\n            n = n / i\n    if n > 2:\n        l.append(n)\n    return len(set(l))\n\ndef twosum(a, n, x):\n    rem = []\n    for i in range(x):\n        rem.append(0)\n    for i in range(n):\n        if a[i] < x:\n            rem[a[i] % x] += 1\n    for i in range(1, x // 2):\n        if rem[i] > 0 and rem[x - i] > 0:\n            return True\n    if i >= x // 2:\n        if x % 2 == 0:\n            if rem[x // 2] > 1:\n                return True\n            else:\n                return False\n        elif rem[x // 2] > 0 and rem[x - x // 2] > 0:\n            return True\n        else:\n            return False\n\ndef divSum(num):\n    result = 0\n    i = 2\n    while i <= math.sqrt(num):\n        if num % i == 0:\n            if i == num / i:\n                result = result + i\n            else:\n                result = result + (i + num / i)\n        i = i + 1\n    return result + 1 + num\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = []\n    y = []\n    for ele in l:\n        if ele % 2 == 1:\n            x.append(ele)\n        else:\n            y.append(ele)\n    if len(x) <= 1:\n        print(-1)\n    elif len(x) % 2 == 1 and len(y) == 0:\n        print(-1)\n    elif len(x) % 2 == 0:\n        y += x\n        print(*y)\n    else:\n        temp = y[1:] + [x[0]] + [y[0]] + x[1:]\n        print(*temp)\nfor _ in range(int(input())):\n    solve()", "inputs = int(input())\nfor i in range(inputs):\n    input_length = input()\n    if input_length == 1:\n        print(-1)\n        continue\n    arr = list(map(int, input().split()))\n    odd = []\n    even = []\n    out = []\n    for i in arr:\n        if i % 2:\n            odd.append(i)\n        else:\n            even.append(i)\n    if not odd:\n        print(-1)\n        continue\n    if not len(odd) % 2:\n        even += odd\n        out = even\n    else:\n        if len(even) == 0 or len(odd) == 1:\n            print(-1)\n            continue\n        out.append(odd[0])\n        out += even\n        out += odd[1:]\n    print(*out, sep=' ')", "inputs = int(input())\nfor i in range(inputs):\n    input_length = input()\n    if input_length == 1:\n        print(-1)\n        continue\n    arr = list(map(int, input().split()))\n    odd = []\n    even = []\n    out = []\n    for i in arr:\n        if i % 2:\n            odd.append(i)\n        else:\n            even.append(i)\n    if not odd:\n        print(-1)\n        continue\n    if not len(odd) % 2:\n        even += odd\n        out = even\n    else:\n        if len(even) == 0 or len(odd) == 1:\n            print(-1)\n            continue\n        out.append(odd[0])\n        out += even\n        out += odd[1:]\n    print(*out, sep=' ')", "inputs = int(input())\nfor i in range(inputs):\n    input_length = input()\n    if input_length == 1:\n        print(-1)\n        continue\n    arr = list(map(int, input().split()))\n    odd = []\n    even = []\n    out = []\n    for i in arr:\n        if i % 2:\n            odd.append(i)\n        else:\n            even.append(i)\n    if not odd:\n        print(-1)\n        continue\n    if not len(odd) % 2:\n        even += odd\n        out = even\n    else:\n        if len(even) == 0 or len(odd) == 1:\n            print(-1)\n            continue\n        out.append(odd[0])\n        out += even\n        out += odd[1:]\n    print(*out, sep=' ')", "inputs = int(input())\nfor i in range(inputs):\n    input_length = input()\n    if input_length == 1:\n        print(-1)\n        continue\n    arr = list(map(int, input().split()))\n    odd = []\n    even = []\n    out = []\n    for i in arr:\n        if i % 2:\n            odd.append(i)\n        else:\n            even.append(i)\n    if not odd:\n        print(-1)\n        continue\n    if not len(odd) % 2:\n        even += odd\n        out = even\n    else:\n        if len(even) == 0 or len(odd) == 1:\n            print(-1)\n            continue\n        out.append(odd[0])\n        out += even\n        out += odd[1:]\n    print(*out, sep=' ')"]