["g = int(input())\n\ndef algo():\n    H = int(input())\n    A = list(map(int, input().split()[:H]))\n    o = 0\n    for x in A:\n        o = o | x\n    c = 0\n    for i in bin(o)[2:]:\n        if i == '1':\n            c += 1\n    print(c)\nfor i in range(g):\n    algo()", "t = int(input())\nfor ni in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    count = 0\n    for i in l:\n        count = count | i\n    count = bin(count)[2:]\n    print(count.count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    s = 0\n    for i in a:\n        s = s | i\n    s = bin(s)[2:]\n    print(s.count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    for i in l:\n        s = s | i\n    print(bin(s)[2:].count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    for i in l:\n        s = s | i\n    print(bin(s)[2:].count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = 0\n    for i in l:\n        x |= i\n    print(bin(x).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = 0\n    for i in a:\n        x |= i\n    print(bin(x).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = 0\n    for i in l:\n        x |= i\n    print(bin(x).count('1'))", "import math\nfor tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (suba, temp) = (0, 0)\n    cnt = 0\n    while sum(a) > 0:\n        cnt += 1\n        if max(a) > 0:\n            temp = int(math.log2(max(a)))\n            suba = 2 ** temp\n        for i in range(n):\n            if a[i] >= suba:\n                a[i] = a[i] - suba\n    print(cnt)", "import math\nfor tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    suba = 0\n    cnt = 0\n    (maxi, maxl) = (0, 0)\n    while sum(a) > 0:\n        cnt += 1\n        if max(a) > 0:\n            temp = int(math.log2(max(a)))\n            suba = 2 ** temp\n        else:\n            temp = 0\n            suba = 0\n        for i in range(n):\n            if a[i] >= suba:\n                a[i] = a[i] - suba\n    print(cnt)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    res = 0\n    num = 0\n    for a in A:\n        num = num | a\n    while num != 0:\n        res += num & 1\n        num >>= 1\n    print(res)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    res = 0\n    num = 0\n    for a in A:\n        num = num | a\n    while num != 0:\n        res += num & 1\n        num >>= 1\n    print(res)", "g = int(input())\n\ndef algo():\n    H = int(input())\n    A = list(map(int, input().split()[:H]))\n    o = 0\n    for x in A:\n        o = o | x\n    c = 0\n    for i in bin(o)[2:]:\n        if i == '1':\n            c += 1\n    print(c)\nfor i in range(g):\n    algo()", "testcase = int(input())\nfor i in range(testcase):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    aa = 0\n    for nn in arr:\n        aa = aa | nn\n    print(bin(aa).count('1'))", "testcase = int(input())\nfor i in range(testcase):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    aa = 0\n    for nn in arr:\n        aa = aa | nn\n    print(bin(aa).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    f = 0\n    for j in arr:\n        f = f | j\n    print(bin(f).count('1'))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    f = 0\n    l = list(map(int, input().split()))\n    for j in l:\n        f = f | j\n    print(bin(f).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    x = max(a)\n    c = 0\n    for i in a:\n        c = c | i\n    s = str(bin(c))\n    k = 0\n    for i in s:\n        if i == '1':\n            k += 1\n    print(k)", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in l:\n        c = c | i\n    k = 0\n    c = bin(c)\n    for i in range(len(c)):\n        if c[i] == '1':\n            k += 1\n    print(k)", "for i in range(int(input())):\n    a = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for j in arr:\n        s |= j\n    print(format(s, 'b').count('1'))", "for i in range(int(input())):\n    a = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for j in arr:\n        s |= j\n    print(format(s, 'b').count('1'))", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in l:\n        c = c | i\n    k = 0\n    c = bin(c)\n    for i in range(len(c)):\n        if c[i] == '1':\n            k += 1\n    print(k)", "def mi(x, y2):\n    if x >= y2:\n        return mi(x, y2 * 2)\n    else:\n        return y2 // 2\nt = int(input(''))\nif 1 <= t <= 1000:\n    for z in range(t):\n        sum = 0\n        n = int(input(''))\n        a = map(int, input().split())\n        a = list(a)\n        while max(a) != 0:\n            m = max(a)\n            s = mi(m, 1)\n            for i in range(n):\n                if a[i] >= s:\n                    a[i] -= s\n            sum += 1\n        print(sum)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    c = 0\n    l = list(map(int, input().split()))\n    for j in l:\n        c = c | j\n    print(bin(c).count('1'))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    c = 0\n    l = list(map(int, input().split()))\n    for j in l:\n        c = c | j\n    print(bin(c).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    initial = 0\n    a = list(map(int, input().split()))\n    for i in a:\n        initial = initial | i\n    print(bin(initial).count('1'))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    for i in l:\n        s |= i\n    print(format(s, 'b').count('1'))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    c = 0\n    l = list(map(int, input().split()))\n    for i in l:\n        c = c | i\n    print(bin(c).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in a:\n        c = c | i\n    print(bin(c).count('1'))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    for i in range(31, -1, -1):\n        temp = 0\n        for x in range(n):\n            if a[x] - 2 ** i >= 0:\n                a[x] -= 2 ** i\n                temp += 1\n        if temp:\n            c += 1\n    print(c)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    for i in range(31, -1, -1):\n        temp = 0\n        for x in range(n):\n            if a[x] - 2 ** i >= 0:\n                a[x] -= 2 ** i\n                temp += 1\n        if temp:\n            c += 1\n    print(c)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    for i in range(31, -1, -1):\n        temp = 0\n        for x in range(n):\n            if a[x] - 2 ** i >= 0:\n                a[x] -= 2 ** i\n                temp += 1\n        if temp:\n            c += 1\n    print(c)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    for i in range(31, -1, -1):\n        temp = 0\n        for x in range(n):\n            if a[x] - 2 ** i >= 0:\n                a[x] -= 2 ** i\n                temp += 1\n        if temp:\n            c += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    f = 0\n    for ele in arr:\n        f = f | ele\n    print(bin(f).count('1'))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    f = 0\n    l = list(map(int, input().split()))\n    for j in l:\n        f = f | j\n    print(bin(f).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    flag = 0\n    a = list(map(int, input().split()))\n    for i in a:\n        flag = flag | i\n    print(bin(flag).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    initial = 0\n    a = list(map(int, input().split()))\n    for i in a:\n        initial = initial | i\n    print(bin(initial).count('1'))", "t = input()\nfor c in range(0, int(t)):\n    n = int(input())\n    l = list(map(int, input().split()))\n    bits = [0] * 30\n    for i in range(n):\n        for j in range(30):\n            if 1 << j & l[i]:\n                bits[j] += 1\n    ans = 0\n    for i in bits:\n        if i > 0:\n            ans += 1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    bits = [0] * 30\n    for i in range(n):\n        for j in range(30):\n            if 1 << j & l[i]:\n                bits[j] += 1\n    ans = 0\n    for i in bits:\n        if i > 0:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = 0\n    for i in range(n):\n        x |= a[i]\n    print(bin(x).count('1'))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = tuple(map(int, input().split()))\n    b = 0\n    for i in range(n):\n        b |= a[i]\n    print(bin(b).count('1'))", "import math\ntests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(set(map(int, input().split())))\n    ans_arr = [0] * 32\n    for x in arr:\n        y = 0\n        while x > 0:\n            if x & 1:\n                ans_arr[y] = 1\n            y += 1\n            x >>= 1\n    print(ans_arr.count(1))", "T = int(input())\n\ndef algo():\n    N = int(input())\n    A = list(map(int, input().split()[:N]))\n    o = 0\n    for x in A:\n        o = o | x\n    c = 0\n    for i in bin(o)[2:]:\n        if i == '1':\n            c += 1\n    print(c)\nfor i in range(T):\n    algo()", "for _ in range(int(input())):\n    n = int(input())\n    int_list = list(map(int, input().split()))\n    ans = 0\n    for i in int_list:\n        ans = ans | i\n    count = 0\n    while ans:\n        if ans & 1:\n            count += 1\n        ans >>= 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    int_list = list(map(int, input().split()))\n    ans = 0\n    for i in int_list:\n        ans = ans | i\n    count = 0\n    while ans:\n        if ans & 1:\n            count += 1\n        ans >>= 1\n    print(count)", "import math\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    cnt = [0] * 32\n    for i in range(n):\n        for j in range(1, 32):\n            if a[i] & 1 << j - 1:\n                if cnt[j] == 0:\n                    cnt[j] = 1\n                    continue\n    ans = 0\n    for i in range(32):\n        if cnt[i] != 0:\n            ans += 1\n    print(ans)", "T = int(input())\n\ndef algo():\n    N = int(input())\n    A = list(map(int, input().split()[:N]))\n    o = 0\n    for x in A:\n        o = o | x\n    c = 0\n    for i in bin(o)[2:]:\n        if i == '1':\n            c += 1\n    print(c)\nfor i in range(T):\n    algo()", "list_x = [2 ** x for x in range(32, -1, -1)]\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    cnt = 0\n    ans = 0\n    for x in arr:\n        if x == 0:\n            cnt += 1\n    if cnt < n:\n        for p in list_x:\n            prev_arr = arr.copy()\n            for (i, x) in enumerate(arr):\n                if arr[i] - p >= 0:\n                    arr[i] = arr[i] - p\n            cnt = 0\n            for x in arr:\n                if x == 0:\n                    cnt += 1\n            if arr != prev_arr:\n                ans += 1\n            if cnt == n:\n                break\n    print(ans)\n    t = t - 1", "T = int(input())\n\ndef algo():\n    N = int(input())\n    A = list(map(int, input().split()[:N]))\n    o = 0\n    for x in A:\n        o = o | x\n    c = 0\n    for i in bin(o)[2:]:\n        if i == '1':\n            c += 1\n    print(c)\nfor i in range(T):\n    algo()", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = 0\n    while len(arr) != 0:\n        try:\n            ma = int(math.log(max(arr), 2))\n        except:\n            break\n        ar = []\n        for i in arr:\n            if i >= 2 ** ma:\n                if i - 2 ** ma != 0:\n                    ar.append(i - 2 ** ma)\n            else:\n                ar.append(i)\n        arr = ar[:]\n        c += 1\n    print(c)", "import math\n\ndef factors(n):\n    arr = []\n    while n != 0:\n        factor = math.floor(math.log(n, 2))\n        n -= math.pow(2, factor)\n        arr.append(factor)\n    return arr\nfor _ in range(int(input())):\n    n = int(input())\n    ip = list(map(int, input().split()))\n    res = set()\n    for i in ip:\n        fact = factors(i)\n        res.update(fact)\n    print(len(res))", "import sys\nimport math\nfrom sys import stdin, stdout\nimport heapq\n\ndef get_ints_in_variables():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_int():\n    return int(input())\n\ndef get_ints_in_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_of_list(n):\n    return [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n)]\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef main():\n    for _ in range(get_int()):\n        n = int(input())\n        arr = [-v for v in get_ints_in_list()]\n        if arr.count(0) == n:\n            print(0)\n            continue\n        heapq.heapify(arr)\n        ans = 1\n        mxX = 1\n        while mxX < abs(arr[0]):\n            mxX *= 2\n        if mxX > abs(arr[0]):\n            mxX = mxX // 2\n        f = 0\n        while abs(arr[0]) != 0:\n            if abs(arr[0]) < mxX:\n                mxX = mxX // 2\n                if f == 0:\n                    ans += 1\n                    f = 1\n            else:\n                f = 0\n                el = abs(heapq.heappop(arr))\n                heapq.heappush(arr, -1 * (el - mxX))\n        print(ans)\nmain()", "import math\n\ndef getFactors(n):\n    factors = []\n    while n != 0:\n        fact = math.floor(math.log(n, 2))\n        n = n - int(math.pow(2, fact))\n        factors.append(fact)\n    return factors\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = set()\n    for x in arr:\n        factors = getFactors(x)\n        s.update(factors)\n    print(len(s))", "import math\n\ndef getFactors(num):\n    factors = []\n    while num != 0:\n        power = int(math.log(num, 2))\n        factors.append(power)\n        num -= math.pow(2, power)\n    return factors\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    powers = set()\n    for n in arr:\n        factors = getFactors(n)\n        powers.update(factors)\n    print(len(powers))", "t = int(input())\nj = 0\nwhile j != t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    count = 0\n    for i in range(n):\n        for k in range(30):\n            if 2 ** k & a[i] == 2 ** k:\n                if 2 ** k in d.keys():\n                    d[2 ** k] += 1\n                else:\n                    d[2 ** k] = 1\n    for x in d:\n        count += 1\n    print(len(d))\n    j += 1", "powersOf2 = []\nfor iter in range(50):\n    powersOf2.append(2 ** (iter + 1))\nnoOfTestCases = int(input())\nfor _ in range(noOfTestCases):\n    N = int(input())\n    Ais = list(set(map(int, input().split())))\n    binary = 0\n    for iter in range(len(Ais)):\n        binary |= Ais[iter]\n    print(bin(binary)[2:].count('1'))", "powersOf2 = []\nfor iter in range(50):\n    powersOf2.append(2 ** (iter + 1))\nnoOfTestCases = int(input())\nfor _ in range(noOfTestCases):\n    N = int(input())\n    Ais = list(set(map(int, input().split())))\n    binary = 0\n    for iter in range(len(Ais)):\n        binary |= Ais[iter]\n    print(bin(binary)[2:].count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    v = 0\n    for i in arr:\n        v |= i\n    ans = 0\n    for j in bin(v)[2:]:\n        if j == '1':\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = sorted(set(map(int, input().split())), reverse=True)\n    ans = 0\n    if len(arr) == 1:\n        if arr[0] != 0:\n            for i in bin(arr[0])[2:]:\n                if i == '1':\n                    ans += 1\n    else:\n        binary = bin(arr[0])[2:][::-1]\n        d = {i: int(binary[i]) for i in range(len(binary))}\n        firstlen = len(d.keys())\n        l = list(d.keys()).copy()\n        for i in l:\n            if d[i] == 1:\n                d.pop(i)\n        for i in range(1, len(arr)):\n            binary = '{0:b}'.format(arr[i])[::-1]\n            for j in d:\n                try:\n                    if binary[j] == '1':\n                        d[j] = 1\n                except:\n                    pass\n            l = list(d.keys()).copy()\n            for j in l:\n                if d[j] == 1:\n                    d.pop(j)\n            if len(d.keys()) == 0:\n                break\n        ans = firstlen - len(d.keys())\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    a = 0\n    for i in l:\n        a = a | i\n    b = format(a, 'b')\n    nl = [int(x) for x in b]\n    print(nl.count(1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(0, n):\n        c = c | a[i]\n    y = format(c, 'b')\n    l = [int(x) for x in str(y)]\n    print(l.count(1))", "for _ in range(int(input())):\n    n = int(input())\n    d = 0\n    for value in list(set(map(int, input().split()))):\n        d |= value\n    print(bin(d).count('1'))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = 0\n    inp = list(map(int, input().split()))\n    for ai in inp:\n        a = a | ai\n    countsetbits = 0\n    while a:\n        countsetbits = countsetbits + (a & 1)\n        a >>= 1\n    print(countsetbits)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    count = 0\n    for x in a:\n        b = bin(x)[2:][::-1]\n        for (i, val) in enumerate(b):\n            if val == '1':\n                if 2 ** i not in s:\n                    count += 1\n                    s.add(2 ** i)\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    count = 0\n    for x in a:\n        b = bin(x)[2:][::-1]\n        for (i, val) in enumerate(b):\n            if val == '1':\n                if 2 ** i not in s:\n                    count += 1\n                    s.add(2 ** i)\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    count = 0\n    for x in a:\n        b = bin(x)[2:][::-1]\n        for (i, val) in enumerate(b):\n            if val == '1':\n                if 2 ** i not in s:\n                    count += 1\n                    s.add(2 ** i)\n    print(count)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(32, -1, -1):\n        temp = False\n        for el in arr:\n            if el >> i & 1:\n                temp = True\n        if temp:\n            ans += 1\n    print(ans)", "import math\n\ndef makeZero(l, arr):\n    c = 0\n    while max(arr) != 0:\n        maxIndex = arr.index(max(arr))\n        maxElement = arr[maxIndex]\n        power = int(math.log(maxElement, 2))\n        for i in range(0, l):\n            if arr[i] >= 2 ** power:\n                arr[i] = arr[i] - 2 ** power\n        c = c + 1\n    print(c)\nntc = int(input())\nfor i in range(0, ntc):\n    length = int(input())\n    array = list(map(int, input().split(' ')))\n    makeZero(length, array)", "t = int(input())\nfor i in range(t):\n    c = 0\n    n = int(input())\n    a = input().split()\n    a = set(map(int, a))\n    a.discard(0)\n    while len(a) > 0:\n        c += 1\n        p = 0\n        num = max(a)\n        num = num // 2\n        while num > 0:\n            p += 1\n            num = num // 2\n        p = 2 ** p\n        temp_a = set()\n        for ai in a:\n            if ai > p:\n                temp_a.add(ai - p)\n            elif ai < p:\n                temp_a.add(ai)\n        a = temp_a\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    c = 0\n    while any(l):\n        cnt = 0\n        m = max(l)\n        while m > 1:\n            m = m // 2\n            cnt = cnt + 1\n        l = [i % 2 ** cnt for i in l]\n        c = c + 1\n    print(c)", "import sys\n\ndef _input():\n    return sys.stdin.readline().strip()\n\ndef main():\n    for _ in range(int(_input())):\n        n = int(_input())\n        ans = 0\n        lst = list(map(int, _input().split()))\n        for i in lst:\n            ans |= i\n        j = bin(ans)\n        print(j.count('1'))\nmain()", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    l = list(map(int, input().split()))[:x]\n    c = 0\n    while any(l):\n        cnt = 0\n        m = max(l)\n        while m >= 2:\n            m = m // 2\n            cnt += 1\n        l = [i % 2 ** cnt for i in l]\n        c += 1\n    print(c)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))[:a]\n    d = 0\n    for i in range(a):\n        d = d | b[i]\n    print(bin(d).count('1'))", "import math\n\ndef func(n, a):\n    m = max(a)\n    if m == 0:\n        return 0\n    d = int(math.log(m, 2)) + 1\n    temp = [0 for i in range(d)]\n    for i in range(n):\n        for k in range(d - 1, -1, -1):\n            if a[i] & 2 ** k != 0:\n                temp[k] = 1\n    return temp.count(1)\nq = int(input())\nfor i in range(q):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(func(n, a))", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    i = [int(i) for i in input().split()]\n    op = 0\n    while max(i) > 0:\n        m = max(i)\n        p = 0\n        while pow(2, p) <= m:\n            p = p + 1\n        v = pow(2, p - 1)\n        for n in range(N):\n            if i[n] >= v:\n                i[n] = i[n] - v\n        op = op + 1\n    print(op)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    rep = 0\n    for i in arr:\n        rep = rep | i\n    d = bin(rep)\n    print(d.count('1'))", "for t in range(int(input())):\n    N = input()\n    A = list(map(int, list(input().split(' '))))\n    x = 0\n    for i in A:\n        x = x | i\n    z = x\n    c = 0\n    while z > 0:\n        if z & 1 != 0:\n            c = c + 1\n        z = z >> 1\n    print(c)", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor i in range(t):\n    n = inp()\n    l = li()\n    s1 = set()\n    c = 0\n    for i in range(len(l)):\n        if l[i] % 2 != 0:\n            c = 1\n            l[i] -= 1\n    for i in l:\n        c1 = 0\n        i1 = i\n        while i > 0:\n            i = i // 2\n            c1 += 1\n        c1 = c1 - 1\n        while i1 > 0:\n            if pow(2, c1) <= i1:\n                i1 = i1 % pow(2, c1)\n                s1.add(pow(2, c1))\n            c1 = c1 - 1\n    pr(len(s1) + c)", "for t in range(int(input())):\n    N = input()\n    A = list(map(int, list(input().split(' '))))\n    x = 0\n    for i in A:\n        x = x | i\n    z = x\n    c = 0\n    while z > 0:\n        if z & 1 != 0:\n            c = c + 1\n        z = z >> 1\n    print(c)", "for t in range(int(input())):\n    N = input()\n    A = list(map(int, list(input().split(' '))))\n    x = 0\n    for i in A:\n        x = x | i\n    z = x\n    c = 0\n    while z > 0:\n        if z & 1 != 0:\n            c = c + 1\n        z = z >> 1\n    print(c)", "for t in range(int(input())):\n    N = input()\n    A = list(map(int, list(input().split(' '))))\n    x = 0\n    for i in A:\n        x = x | i\n    z = x\n    c = 0\n    while z > 0:\n        if z & 1 != 0:\n            c = c + 1\n        z = z >> 1\n    print(c)", "t = int(input())\nfor cases in range(t):\n    bits = 0\n    ncases = int(input())\n    for x in map(int, input().split()):\n        bits |= x\n    print(bin(bits).count('1'))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    li = []\n    li = list(map(int, input().split()))\n    l = []\n    max = 0\n    for i in range(0, n):\n        p = '{0:b}'.format(li[i])\n        l.append(p)\n        if len(l[i]) > max:\n            max = len(l[i])\n    for i in range(0, n):\n        q = len(l[i])\n        if q < max:\n            l[i] = (max - q) * '0' + l[i]\n    count = 0\n    for i in range(0, max):\n        for j in range(0, n):\n            if l[j][i] == '1':\n                count = count + 1\n                break\n    print(count)\n    t = t - 1", "t = int(input())\nfor cases in range(t):\n    bits = 0\n    ncases = int(input())\n    for x in map(int, input().split()):\n        bits |= x\n    print(bin(bits).count('1'))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    list = [int(i) for i in input().split()]\n    out = 0\n    m = int(math.log2(max(list) + 1)) + 1\n    for i in range(m):\n        for j in list:\n            if j % 2 == 1:\n                out += 1\n                break\n        list = [k // 2 for k in list]\n    print(out)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in l:\n        ans = ans | i\n    x = '{:032b}'.format(ans)\n    print(x.count('1'))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    list = [int(i) for i in input().split()]\n    out = 0\n    m = int(math.log2(max(list) + 1)) + 1\n    for i in range(m):\n        for j in list:\n            if j % 2 == 1:\n                out += 1\n                break\n        list = [k // 2 for k in list]\n    print(out)", "import math as m\n\ndef ncr(N, R):\n    return m.factorial(N) // (m.factorial(R) * m.factorial(N - R))\n\ndef getL():\n    return [int(i) for i in input().split(' ')]\n\ndef getInt():\n    return int(input())\n\ndef solve():\n    n = getInt()\n    arr = getL()\n    ans = arr[0]\n    for i in range(1, n):\n        ans |= arr[i]\n    print(bin(ans).count('1'))\nfor _ in range(getInt()):\n    solve()", "ncases = int(input())\nfor case in range(ncases):\n    bits = 0\n    nvalues = int(input())\n    for x in map(int, input().split()):\n        bits |= x\n    print(bin(bits).count('1'))", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in arr:\n        ans |= i\n    c = 0\n    while ans:\n        c += ans & 1\n        ans = ans >> 1\n    print(c)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        d = 0\n        for i in a:\n            d = d | i\n        print(bin(d).count('1'))\nexcept:\n    pass", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = 0\n    for i in a:\n        d = d | i\n    print(bin(d).count('1'))\n    t -= 1", "from collections import Counter\nimport string\nimport math\nimport bisect\nimport sys\nfrom fractions import Fraction\n\ndef array_int():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef vary(arrber_of_variables):\n    if arrber_of_variables == 1:\n        return int(sys.stdin.readline())\n    if arrber_of_variables >= 2:\n        return map(int, sys.stdin.readline().split())\n\ndef makedict(var):\n    return dict(Counter(var))\nmod = 10 ** 9 + 7\ntestcases = vary(1)\nfor _ in range(testcases):\n    n = vary(1)\n    arr = set(array_int())\n    power_of_two = odd = 0\n    ans = 0\n    OR = 0\n    for i in arr:\n        OR |= i\n    print(bin(OR)[2:].count('1'))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = map(int, input().split())\n    res = 0\n    for v in a:\n        res |= v\n    print(bin(res).count('1'))", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = [0] * 32\n    for i in l:\n        j = 0\n        while j < 32:\n            if 1 & i >> j == 1:\n                a[j] = 1\n            j += 1\n    print(a.count(1))", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = [0] * 32\n    for i in l:\n        j = 0\n        while j < 32:\n            if 1 & i >> j == 1:\n                a[j] = 1\n            j += 1\n    print(a.count(1))", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = [0] * 32\n    for i in l:\n        j = 0\n        while j < 32:\n            if 1 & i >> j == 1:\n                a[j] = 1\n            j += 1\n    print(a.count(1))", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = [0] * 32\n    for i in l:\n        j = 0\n        while j < 32:\n            if 1 & i >> j == 1:\n                a[j] = 1\n            j += 1\n    print(a.count(1))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for j in range(32):\n        ok = False\n        for v in a:\n            ok |= bool(v & 1 << j)\n        ans += ok\n    print(ans)"]