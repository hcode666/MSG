["def maxsubarray(x):\n    max_sum = max(x)\n    max_tillnow = 0\n    for i in range(0, len(x)):\n        max_tillnow += x[i]\n        if max_tillnow > max_sum:\n            max_sum = max_tillnow\n        if max_tillnow < 0:\n            max_tillnow = 0\n    return max_sum\ntc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    a1 = []\n    a2 = []\n    for i in range(n):\n        a1.append(a[i])\n        a2.append(a[i])\n    for i in range(m):\n        if b[i] >= 0:\n            a1.insert(0, b[i])\n            a2.append(b[i])\n        else:\n            a1.append(b[i])\n            a2.insert(0, b[i])\n    print(max(maxsubarray(a1), maxsubarray(a2)))", "def maxsubarray(x):\n    max_sum = max(x)\n    max_tillnow = 0\n    for i in range(0, len(x)):\n        max_tillnow += x[i]\n        if max_tillnow > max_sum:\n            max_sum = max_tillnow\n        if max_tillnow < 0:\n            max_tillnow = 0\n    return max_sum\ntc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    a1 = []\n    a2 = []\n    for i in range(n):\n        a1.append(a[i])\n        a2.append(a[i])\n    for i in range(m):\n        if b[i] >= 0:\n            a1.insert(0, b[i])\n            a2.append(b[i])\n        else:\n            a1.append(b[i])\n            a2.insert(0, b[i])\n    print(max(maxsubarray(a1), maxsubarray(a2)))", "import sys\nimport math\ninput = sys.stdin.readline\nt = int(input())\n\ndef kadan(ar):\n    ma = -10 ** 18\n    s = 0\n    for x in range(len(ar)):\n        s += ar[x]\n        ma = max(ma, s)\n        if s < 0:\n            s = 0\n    return ma\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    m = int(input())\n    z = list(map(int, input().split()))\n    l = r = 0\n    for x in range(m):\n        if z[x] <= 0:\n            l += z[x]\n        else:\n            r += z[x]\n    ar.insert(0, l)\n    ar.append(r)\n    a = kadan(ar)\n    (ar[0], ar[-1]) = (ar[-1], ar[0])\n    b = kadan(ar)\n    print(max(a, b))", "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    m = int(input())\n    b = [*map(int, input().split())]\n    y = sum((max(0, i) for i in b))\n    l = st = 0\n    r = n\n    ll = 0\n    bb = 0\n    ps = [0]\n    for i in a:\n        ps.append(ps[-1] + i)\n    for i in range(n):\n        if ll + a[i] < 0:\n            st = i + 1\n            ll = 0\n        else:\n            ll += a[i]\n        if ll > bb:\n            bb = ll\n            r = i\n            l = st\n    print(y + max(ps[l] - ps[0], ps[-1] - ps[r + 1]) + bb)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    mx = float('-inf')\n    curmax = 0\n    curmax2 = 0\n    stmx = -1\n    enmx = -1\n    for i in range(N):\n        curmax += A[i]\n        curmax2 += A[-i - 1]\n        if curmax > mx:\n            mx = curmax\n        if i == N - 1:\n            enmx = curmax\n            stmx = curmax2\n        if curmax < 0:\n            curmax = 0\n        if curmax2 < 0:\n            curmax2 = 0\n    z = sum([x for x in B if x > 0])\n    print(max(z, z + stmx, z + enmx, mx))", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = int(input())\n    b = list(map(int, input().split()))\n    s = a[0]\n    e = a[0]\n    for i in range(1, len(a)):\n        e = max(e + a[i], a[i])\n        if s < e:\n            s = e\n    ans = 0\n    for k in b:\n        if k > 0:\n            ans += k\n    print(s + ans)", "import math\nfrom collections import defaultdict\n\ndef f(a, n):\n    meh = 0\n    msf = -1000000000\n    for i in range(n):\n        meh += a[i]\n        if meh < a[i]:\n            meh = a[i]\n        if msf < meh:\n            msf = meh\n    return msf\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    l1 = []\n    for i in b:\n        if i < 0:\n            l1.append(i)\n    l1.extend(a)\n    for i in b:\n        if i >= 0:\n            l1.append(i)\n    m1 = f(l1, n + m)\n    l2 = []\n    for i in b:\n        if i >= 0:\n            l2.append(i)\n    l2.extend(a)\n    for i in b:\n        if i < 0:\n            l2.append(i)\n    m2 = f(l2, n + m)\n    print(max(m1, m2))", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    mx = float('-inf')\n    curmax = 0\n    curmax2 = 0\n    stmx = -1\n    enmx = -1\n    for i in range(N):\n        curmax += A[i]\n        curmax2 += A[-i - 1]\n        if curmax > mx:\n            mx = curmax\n        if i == N - 1:\n            enmx = curmax\n            stmx = curmax2\n        if curmax < 0:\n            curmax = 0\n        if curmax2 < 0:\n            curmax2 = 0\n    z = sum([x for x in B if x > 0])\n    print(max(z, z + stmx, z + enmx, mx))", "for t in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    input()\n    t = list(map(int, input().split()))\n    k = [l[0]]\n    m = 0\n    if k[0] > 0:\n        m = k[0]\n    x = 0\n    y = 0\n    for i in range(1, a):\n        if k[-1] > 0:\n            k += [k[-1] + l[i]]\n            if k[-1] > m:\n                m = k[i]\n                y = i\n        else:\n            k += [l[i]]\n            if x:\n                (x, z) = (i, x)\n            else:\n                x = i\n                z = 0\n    h = 0\n    if y != a - 1 and x != 0:\n        if x < y:\n            h = sum(l[:x])\n        elif z != 0:\n            h = sum(l[:z])\n        h = max(h, sum(l[y + 1:]))\n    s = 0\n    for i in t:\n        if i > 0:\n            s += i\n    if s + h > 0:\n        m += s + h\n    print(m)", "def kadane(arr):\n    res = cur = 0\n    for i in arr:\n        cur += i\n        res = max(res, cur)\n        if cur < 0:\n            cur = 0\n    if res == 0:\n        return max(arr)\n    return res\n\ndef soln(n, m, a, b):\n    poses = []\n    negs = []\n    for i in b:\n        if i < 0:\n            negs.append(i)\n        else:\n            poses.append(i)\n    return max(kadane(negs + a + poses), kadane(poses + a + negs))\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    print(soln(n, m, a, b))", "def kadane(arr):\n    res = cur = 0\n    for i in arr:\n        cur += i\n        res = max(res, cur)\n        if cur < 0:\n            cur = 0\n    if res == 0:\n        return max(arr)\n    return res\n\ndef soln(n, m, a, b):\n    poses = []\n    negs = []\n    for i in b:\n        if i < 0:\n            negs.append(i)\n        else:\n            poses.append(i)\n    return max(kadane(negs + a + poses), kadane(poses + a + negs))\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    print(soln(n, m, a, b))", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    mx = float('-inf')\n    curmax = 0\n    curmax2 = 0\n    stmx = -1\n    enmx = -1\n    for i in range(N):\n        curmax += A[i]\n        curmax2 += A[-i - 1]\n        if curmax > mx:\n            mx = curmax\n        if i == N - 1:\n            enmx = curmax\n            stmx = curmax2\n        if curmax < 0:\n            curmax = 0\n        if curmax2 < 0:\n            curmax2 = 0\n    z = sum([x for x in B if x > 0])\n    print(max(z, z + stmx, z + enmx, mx))", "for _ in range(int(input())):\n    inputt = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    mx = float('-inf')\n    cmax = 0\n    cmax2 = 0\n    stmx = -1\n    enmx = -1\n    for p in range(inputt):\n        cmax += A[p]\n        cmax2 += A[-p - 1]\n        if cmax > mx:\n            mx = cmax\n        if p == inputt - 1:\n            enmx = cmax\n            stmx = cmax2\n        if cmax < 0:\n            cmax = 0\n        if cmax2 < 0:\n            cmax2 = 0\n    z = sum([x for x in B if x > 0])\n    print(max(z, z + stmx, z + enmx, mx))", "for _ in range(int(input())):\n    inputt = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    mx = float('-inf')\n    cmax = 0\n    cmax2 = 0\n    stmx = -1\n    enmx = -1\n    for p in range(inputt):\n        cmax += A[p]\n        cmax2 += A[-p - 1]\n        if cmax > mx:\n            mx = cmax\n        if p == inputt - 1:\n            enmx = cmax\n            stmx = cmax2\n        if cmax < 0:\n            cmax = 0\n        if cmax2 < 0:\n            cmax2 = 0\n    z = sum([x for x in B if x > 0])\n    print(max(z, z + stmx, z + enmx, mx))", "from heapq import *\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    (tambah, sekarang, l, r, MAX) = (0, 0, 0, 0, -10 ** 18)\n    for x in b:\n        if x > 0:\n            tambah += x\n    arr = []\n    heapify(arr)\n    heappush(arr, (0, 0))\n    for (i, x) in enumerate(a):\n        sekarang += x\n        heappush(arr, (sekarang, i + 1))\n        (y, z) = heappop(arr)\n        nilai = sekarang - y\n        if nilai > MAX:\n            MAX = nilai\n            l = z\n            r = i\n        heappush(arr, (y, z))\n    (kiri, kanan) = (sum(a[:l]), sum(a[r + 1:]))\n    print(max(0, max(kiri, kanan) + MAX) + tambah)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    mx = float('-inf')\n    curmax = 0\n    curmax2 = 0\n    stmx = -1\n    enmx = -1\n    for i in range(N):\n        curmax += A[i]\n        curmax2 += A[-i - 1]\n        if curmax > mx:\n            mx = curmax\n        if i == N - 1:\n            enmx = curmax\n            stmx = curmax2\n        if curmax < 0:\n            curmax = 0\n        if curmax2 < 0:\n            curmax2 = 0\n    z = sum([x for x in B if x > 0])\n    print(max(z, z + stmx, z + enmx, mx))", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    mx = float('-inf')\n    curmax = 0\n    curmax2 = 0\n    stmx = -1\n    enmx = -1\n    for i in range(N):\n        curmax += A[i]\n        curmax2 += A[-i - 1]\n        if curmax > mx:\n            mx = curmax\n        if i == N - 1:\n            enmx = curmax\n            stmx = curmax2\n        if curmax < 0:\n            curmax = 0\n        if curmax2 < 0:\n            curmax2 = 0\n    z = sum([x for x in B if x > 0])\n    if z == 0:\n        z = max(B)\n    print(max(z, max(0, z) + stmx, max(0, z) + enmx, mx))", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    mx = float('-inf')\n    curmax = 0\n    curmax2 = 0\n    stmx = -1\n    enmx = -1\n    for i in range(N):\n        curmax += A[i]\n        curmax2 += A[-i - 1]\n        if curmax > mx:\n            mx = curmax\n        if i == N - 1:\n            enmx = curmax\n            stmx = curmax2\n        if curmax < 0:\n            curmax = 0\n        if curmax2 < 0:\n            curmax2 = 0\n    z = sum([x for x in B if x > 0])\n    print(max(z, z + stmx, z + enmx, mx))", "def maxSubArraySum(a):\n    max_so_far = a[0]\n    max_ending_here = 0\n    for i in range(0, len(a)):\n        max_ending_here = max_ending_here + a[i]\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\nfor _ in range(int(input())):\n    n = int(input())\n    nli = list(map(int, input().split(' ')))\n    m = int(input())\n    mli = list(map(int, input().split(' ')))\n    psli = list(filter(lambda x: x > 0, mli))\n    ali = nli + psli\n    a = maxSubArraySum(ali)\n    bli = psli + nli\n    b = maxSubArraySum(bli)\n    print(max(a, b))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    m = int(input())\n    b = list(map(int, input().split(' ')))\n    l = 0\n    x = 0\n    for i in range(n):\n        x += a[i]\n        l = max(l, x)\n    r = 0\n    x = 0\n    for i in range(n)[::-1]:\n        x += a[i]\n        r = max(r, x)\n    x = 0\n    for el in b:\n        if el > 0:\n            x += el\n    print(max(l, r) + x)", "def kadane(arr):\n    res = cur = 0\n    for i in arr:\n        cur += i\n        res = max(res, cur)\n        if cur < 0:\n            cur = 0\n    if res == 0:\n        return max(arr)\n    return res\n\ndef soln(n, m, a, b):\n    poses = []\n    negs = []\n    for i in b:\n        if i < 0:\n            negs.append(i)\n        else:\n            poses.append(i)\n    return max(kadane(negs + a + poses), kadane(poses + a + negs))\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    print(soln(n, m, a, b))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    m = int(input())\n    b = [int(i) for i in input().split()]\n\n    def kadane(arr):\n        max_current = arr[0]\n        maxi = max_current\n        for j in arr[1:]:\n            max_current = max(j, j + max_current)\n            if max_current > maxi:\n                maxi = max_current\n        return maxi\n    plus = []\n    minus = []\n    for k in b:\n        if k > 0:\n            plus.append(k)\n        else:\n            minus.append(k)\n    print(max(kadane(a), kadane(plus + a + minus), kadane(minus + a + plus)))", "k = int(input())\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    m = int(input())\n    b = list(map(int, input().split(' ')))\n    mx = a[0]\n    s = 0\n    for i in range(n):\n        s += a[i]\n        if s > mx:\n            mx = s\n    s = 0\n    for i in range(n - 1, -1, -1):\n        s += a[i]\n        if s > mx:\n            mx = s\n    v = 0\n    for i in b:\n        if i > 0:\n            v += i\n    print(mx + v)\n    k -= 1", "k = int(input())\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    m = int(input())\n    b = list(map(int, input().split(' ')))\n    mx = a[0]\n    s = 0\n    for i in range(n):\n        s += a[i]\n        if s > mx:\n            mx = s\n    s = 0\n    for i in range(n - 1, -1, -1):\n        s += a[i]\n        if s > mx:\n            mx = s\n    v = 0\n    for i in b:\n        if i > 0:\n            v += i\n    print(mx + v)\n    k -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = int(input())\n    b = list(map(int, input().split()))\n    s = 0\n    m = a[0]\n    for i in range(n):\n        s += a[i]\n        if s > m:\n            m = s\n    s = 0\n    for i in range(n - 1, -1, -1):\n        s += a[i]\n        if s > m:\n            m = s\n    sum = 0\n    for i in b:\n        if i > 0:\n            sum += i\n    print(m + sum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    m = int(input())\n    b = list(map(int, input().split(' ')))\n    c1 = a.copy()\n    c2 = a.copy()\n    for x in range(m):\n        if b[x] < 0:\n            c1.append(b[x])\n            c2.insert(0, b[x])\n        else:\n            c1.insert(0, b[x])\n            c2.append(b[x])\n    csum = 0\n    ans1 = 0\n    for i in range(len(c1)):\n        csum += c1[i]\n        if csum < 0:\n            csum = 0\n        ans1 = max(ans1, csum)\n    csum = 0\n    ans2 = 0\n    for i in range(len(c2)):\n        csum += c2[i]\n        if csum < 0:\n            csum = 0\n        ans2 = max(ans2, csum)\n    print(max(ans1, ans2))", "def kadanes(arr):\n    s = 0\n    maxi = arr[0]\n    for i in arr:\n        s += i\n        if s > maxi:\n            maxi = s\n        if s < 0:\n            s = 0\n    return maxi\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = int(input())\n    b = list(map(int, input().split()))\n    p_dummy = []\n    n_dummy = []\n    for i in b:\n        if i > 0:\n            p_dummy.append(i)\n        else:\n            n_dummy.append(i)\n    new_sum1 = kadanes(n_dummy + a + p_dummy)\n    new_sum2 = kadanes(p_dummy + a + n_dummy)\n    print(max(new_sum1, new_sum2))", "for _ in range(int(input())):\n    msn = int(input())\n    msa = list(map(int, input().split()))\n    msm = int(input())\n    msb = list(map(int, input().split()))\n    s1 = 0\n    for i in msb:\n        if i > 0:\n            s1 += i\n    a = s1\n    m1 = 0\n    for j in msa:\n        a = a + j\n        m1 = max(a, m1)\n    m2 = 0\n    a = s1\n    for u in msa[::-1]:\n        a += u\n        m2 = max(m2, a)\n    print(max(s1, m1, m2))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = int(input())\n    b = list(map(int, input().split()))\n    s = 0\n    m = a[0]\n    for i in range(n):\n        s += a[i]\n        if s > m:\n            m = s\n    s = 0\n    for i in range(n - 1, -1, -1):\n        s += a[i]\n        if s > m:\n            m = s\n    sum = 0\n    for i in b:\n        if i > 0:\n            sum += i\n    print(m + sum)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    (s, t) = (0, 0)\n    for x in a:\n        t += x\n        if t < 0:\n            t = 0\n        s = max(s, t)\n    (pr, t) = (0, 0)\n    for x in a:\n        t += x\n        pr = max(pr, t)\n    (su, t) = (0, 0)\n    for x in reversed(a):\n        t += x\n        su = max(su, t)\n    sb = sum([x for x in b if x > 0])\n    print(max(s, pr + sb, su + sb))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    sum_B = 0\n    for i in b:\n        if i > 0:\n            sum_B += i\n    sum_A = 0\n    finalMax = a[0]\n    for i in a:\n        sum_A += i\n        if sum_A > finalMax:\n            finalMax = sum_A\n    sum_A = 0\n    for i in a[::-1]:\n        sum_A += i\n        if sum_A > finalMax:\n            finalMax = sum_A\n    ans = sum_B + finalMax\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    m = a[0]\n    for i in range(n):\n        s += a[i]\n        if s > m:\n            m = s\n    s = 0\n    for i in range(n - 1, -1, -1):\n        s += a[i]\n        if s > m:\n            m = s\n    x = int(input())\n    b = list(map(int, input().split()))\n    sum = 0\n    for i in b:\n        if i > 0:\n            sum += i\n    print(m + sum)", "t = int(input())\nfor iter in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    sumOfB = 0\n    for i in b:\n        if i > 0:\n            sumOfB += i\n    sumOfA = 0\n    finalMax = a[0]\n    for i in a:\n        sumOfA += i\n        if sumOfA > finalMax:\n            finalMax = sumOfA\n    sumOfA = 0\n    for i in a[::-1]:\n        sumOfA += i\n        if sumOfA > finalMax:\n            finalMax = sumOfA\n    ans = sumOfB + finalMax\n    print(ans)", "t = int(input())\nfor iter in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    sumOfB = 0\n    for i in b:\n        if i > 0:\n            sumOfB += i\n    sumOfA = 0\n    finalMax = a[0]\n    for i in a:\n        sumOfA += i\n        if sumOfA > finalMax:\n            finalMax = sumOfA\n    sumOfA = 0\n    for i in a[::-1]:\n        sumOfA += i\n        if sumOfA > finalMax:\n            finalMax = sumOfA\n    ans = sumOfB + finalMax\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    m = int(input())\n    b = list(map(int, input().split(' ')))\n    c1 = a.copy()\n    c2 = a.copy()\n    for x in range(m):\n        if b[x] < 0:\n            c1.append(b[x])\n            c2.insert(0, b[x])\n        else:\n            c1.insert(0, b[x])\n            c2.append(b[x])\n    csum = 0\n    ans1 = 0\n    for i in range(len(c1)):\n        csum += c1[i]\n        if csum < 0:\n            csum = 0\n        ans1 = max(ans1, csum)\n    csum = 0\n    ans2 = 0\n    for i in range(len(c2)):\n        csum += c2[i]\n        if csum < 0:\n            csum = 0\n        ans2 = max(ans2, csum)\n    print(max(ans1, ans2))", "def max_sum_subarray(P):\n    A = []\n    a = 0\n    M = []\n    m = 0\n    D = []\n    d = 0\n    N = []\n    n = 0\n    i = 0\n    while i < len(P):\n        if P[i] < 0:\n            if n + P[i] < 0:\n                D += N + [P[i]]\n                d += n + P[i]\n                N = []\n                n = 0\n                i += 1\n                continue\n            else:\n                N += [P[i]]\n                n += P[i]\n                i += 1\n                continue\n        else:\n            N += [P[i]]\n            n += P[i]\n            if n > m:\n                if m + d > 0:\n                    M = M + D + N\n                    m += d + n\n                    D = []\n                    d = 0\n                    N = []\n                    n = 0\n                    i += 1\n                    continue\n                else:\n                    A += M + D\n                    a += m + d\n                    M = N\n                    m = n\n                    D = []\n                    d = 0\n                    N = []\n                    n = 0\n                    i += 1\n                    continue\n            elif n + d > 0:\n                M += D + N\n                m += d + n\n                D = []\n                d = 0\n                N = []\n                n = 0\n                i += 1\n                continue\n            i += 1\n            continue\n    D += N\n    d += n\n    return [[A, M, D], [a, m, d]]\n\ndef main():\n    T = int(input())\n    while T > 0:\n        N = int(input())\n        A = input().split()\n        A = [int(item) for item in A]\n        M = int(input())\n        B = input().split()\n        B = [int(item) for item in B]\n        C = max_sum_subarray(A)\n        C = C[1]\n        a = C[0]\n        m = C[1]\n        d = C[2]\n        if d > a:\n            t = m + d\n        else:\n            t = m + a\n        for x in B:\n            if x > 0:\n                t += x\n        if t > m:\n            print(t)\n        else:\n            print(m)\n        T -= 1\n    return\nmain()", "def max_sum_subarray(P):\n    A = []\n    a = 0\n    M = []\n    m = 0\n    D = []\n    d = 0\n    N = []\n    n = 0\n    i = 0\n    while i < len(P):\n        if P[i] < 0:\n            if n + P[i] < 0:\n                D += N + [P[i]]\n                d += n + P[i]\n                N = []\n                n = 0\n                i += 1\n                continue\n            else:\n                N += [P[i]]\n                n += P[i]\n                i += 1\n                continue\n        else:\n            N += [P[i]]\n            n += P[i]\n            if n > m:\n                if m + d > 0:\n                    M = M + D + N\n                    m += d + n\n                    D = []\n                    d = 0\n                    N = []\n                    n = 0\n                    i += 1\n                    continue\n                else:\n                    A += M + D\n                    a += m + d\n                    M = N\n                    m = n\n                    D = []\n                    d = 0\n                    N = []\n                    n = 0\n                    i += 1\n                    continue\n            elif n + d > 0:\n                M += D + N\n                m += d + n\n                D = []\n                d = 0\n                N = []\n                n = 0\n                i += 1\n                continue\n            i += 1\n            continue\n    D += N\n    d += n\n    return [[A, M, D], [a, m, d]]\n\ndef main():\n    T = int(input())\n    while T > 0:\n        N = int(input())\n        A = input().split()\n        A = [int(item) for item in A]\n        M = int(input())\n        B = input().split()\n        B = [int(item) for item in B]\n        C = max_sum_subarray(A)\n        C = C[1]\n        a = C[0]\n        m = C[1]\n        d = C[2]\n        if d > a:\n            t = m + d\n        else:\n            t = m + a\n        for x in B:\n            if x > 0:\n                t += x\n        if t > m:\n            print(t)\n        else:\n            print(m)\n        T -= 1\n    return\nmain()", "def calc_max(A):\n    (max_, cur_sum) = (A[0], A[0])\n    for i in range(1, N):\n        cur_sum += A[i]\n        if cur_sum > max_:\n            max_ = cur_sum\n    return max_\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    sum_b = sum([el for el in B if el > 0])\n    print(max(calc_max(A), calc_max(A[::-1])) + sum_b)", "from sys import stdin\ninput = stdin.readline\n\ndef ii():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\nfrom math import sqrt\n\ndef perfect_sq(n):\n    x = int(sqrt(n))\n    while x * x < n:\n        x += 1\n    while x * x > n:\n        x -= 1\n    return x * x == n\nfor _ in range(ii()):\n    n = ii()\n    a = li()\n    m = ii()\n    b = li()\n    psum = [0 for i in range(n)]\n    psum[0] = a[0]\n    for i in range(1, n):\n        psum[i] = psum[i - 1] + a[i]\n    a.reverse()\n    ssum = [0 for i in range(n)]\n    ssum[0] = a[0]\n    for i in range(1, n):\n        ssum[i] = ssum[i - 1] + a[i]\n    ans = max(max(psum), max(ssum))\n    for i in range(m):\n        if b[i] >= 0:\n            ans += b[i]\n    print(ans)", "from sys import stdin\ninput = stdin.readline\n\ndef ii():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\nfrom math import sqrt\n\ndef perfect_sq(n):\n    x = int(sqrt(n))\n    while x * x < n:\n        x += 1\n    while x * x > n:\n        x -= 1\n    return x * x == n\nfor _ in range(ii()):\n    n = ii()\n    a = li()\n    m = ii()\n    b = li()\n    psum = [0 for i in range(n)]\n    psum[0] = a[0]\n    for i in range(1, n):\n        psum[i] = psum[i - 1] + a[i]\n    a.reverse()\n    ssum = [0 for i in range(n)]\n    ssum[0] = a[0]\n    for i in range(1, n):\n        ssum[i] = ssum[i - 1] + a[i]\n    ans = max(max(psum), max(ssum))\n    for i in range(m):\n        if b[i] >= 0:\n            ans += b[i]\n    print(ans)", "from sys import stdin\ninput = stdin.readline\n\ndef ii():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\nfrom math import sqrt\n\ndef perfect_sq(n):\n    x = int(sqrt(n))\n    while x * x < n:\n        x += 1\n    while x * x > n:\n        x -= 1\n    return x * x == n\nfor _ in range(ii()):\n    n = ii()\n    a = li()\n    m = ii()\n    b = li()\n    psum = [0 for i in range(n)]\n    psum[0] = a[0]\n    for i in range(1, n):\n        psum[i] = psum[i - 1] + a[i]\n    a.reverse()\n    ssum = [0 for i in range(n)]\n    ssum[0] = a[0]\n    for i in range(1, n):\n        ssum[i] = ssum[i - 1] + a[i]\n    ans = max(max(psum), max(ssum))\n    for i in range(m):\n        if b[i] >= 0:\n            ans += b[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    maxx = 0\n    maxe = 0\n    sume = 0\n    for i in range(n):\n        sume += a[i]\n        maxe = max(maxe, sume)\n    maxx = maxe\n    maxe = 0\n    sume = 0\n    for i in range(n - 1, -1, -1):\n        sume += a[i]\n        maxe = max(maxe, sume)\n    maxx = max(maxx, maxe)\n    for i in b:\n        if i > 0:\n            maxx += i\n    print(maxx)", "def ar():\n    l = list(map(int, input().split()))\n    return l\n\ndef xy():\n    (x, y) = map(int, input().split())\n    return (x, y)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = ar()\n    m = int(input())\n    b = ar()\n    k = sum([i for i in b if i > 0])\n\n    def kad(a):\n        maxi = a[0]\n        cur = 0\n        for i in a:\n            cur += i\n            maxi = max(maxi, cur)\n            if cur < 0:\n                cur = 0\n        return maxi\n    print(kad(a) + k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    maxx = 0\n    maxe = 0\n    sume = 0\n    for i in range(n):\n        sume += a[i]\n        maxe = max(maxe, sume)\n    maxx = maxe\n    maxe = 0\n    sume = 0\n    for i in range(n - 1, -1, -1):\n        sume += a[i]\n        maxe = max(maxe, sume)\n    maxx = max(maxx, maxe)\n    for i in b:\n        if i > 0:\n            maxx += i\n    print(maxx)", "def calc_max(A):\n    (max_, cur_sum) = (A[0], A[0])\n    for i in range(1, N):\n        cur_sum += A[i]\n        if cur_sum > max_:\n            max_ = cur_sum\n    return max_\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    sum_b = sum([el for el in B if el > 0])\n    print(max(calc_max(A), calc_max(A[::-1])) + sum_b)", "def sumOfMaximumSumSubArray(a):\n    sm = mx = a[0]\n    for i in a[1:]:\n        if sm + i <= i:\n            sm = 0\n        sm += i\n        mx = max(mx, sm)\n    return mx\n\ndef sumOfPositiveElements(a):\n    res = 0\n    for i in a:\n        if i > 0:\n            res += i\n    return res\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    mx = sumOfPositiveElements(b)\n    lmx = sumOfMaximumSumSubArray([mx, *a])\n    rmx = sumOfMaximumSumSubArray([*a, mx])\n    return max(lmx, rmx)\ntest_cases_count = int(input())\nfor tc in range(1, test_cases_count + 1):\n    result = solve()\n    print(result)\n    pass", "def calc_max(A):\n    (max_, cur_sum) = (A[0], A[0])\n    for i in range(1, N):\n        cur_sum += A[i]\n        if cur_sum > max_:\n            max_ = cur_sum\n    return max_\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    sum_b = sum([el for el in B if el > 0])\n    print(max(calc_max(A), calc_max(A[::-1])) + sum_b)", "def calc_max(A):\n    max_ = -10 ** 13\n    cur_sum = 0\n    for el in A:\n        cur_sum += el\n        if cur_sum > max_:\n            max_ = cur_sum\n    return max_\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    sum_b = sum([el for el in B if el > 0])\n    print(max(calc_max(A), calc_max(A[::-1])) + sum_b)", "def calc_max(A):\n    max_ = -N * 10 ** 8\n    cur_sum = 0\n    for el in A:\n        cur_sum += el\n        if cur_sum > max_:\n            max_ = cur_sum\n    return max_\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    sum_b = sum([el for el in B if el > 0])\n    print(max(calc_max(A), calc_max(A[::-1])) + sum_b)", "def calc_max(A, N):\n    max_1 = -N * 10 ** 8\n    max_2 = -N * 10 ** 8\n    cur_sum_1 = 0\n    cur_sum_2 = 0\n    for i in range(N):\n        cur_sum_1 += A[i]\n        cur_sum_2 += A[N - i - 1]\n        if cur_sum_1 > max_1:\n            max_1 = cur_sum_1\n        if cur_sum_2 > max_2:\n            max_2 = cur_sum_2\n    return max(max_1, max_2)\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    sum_b = sum([el for el in B if el > 0])\n    print(calc_max(A, N) + sum_b)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    max_1 = -N * 10 ** 8\n    max_2 = -N * 10 ** 8\n    cur_sum_1 = 0\n    cur_sum_2 = 0\n    for i in range(N):\n        cur_sum_1 += A[i]\n        cur_sum_2 += A[N - i - 1]\n        if cur_sum_1 > max_1:\n            max_1 = cur_sum_1\n        if cur_sum_2 > max_2:\n            max_2 = cur_sum_2\n    sum_b = sum([el for el in B if el > 0])\n    print(max(max_1, max_2) + sum_b)", "import math\nimport numpy as np\n\ndef max_sub_array(arr):\n    result = -math.inf\n    max_ending_here = 0\n    for a in arr:\n        max_ending_here = max_ending_here + a\n        if max_ending_here > result:\n            result = max_ending_here\n        if max_ending_here < 0:\n            max_ending_here = 0\n        return result\n\ndef readints():\n    return list(map(int, input().split()))\nfor _ in range(int(input())):\n    N = int(input())\n    A = readints()\n    M = int(input())\n    B = readints()\n    max_without_B = max_sub_array(A)\n    max_A_forward = max(np.cumsum(A))\n    max_A_backward = max(np.cumsum(A[::-1]))\n    B_positive_sum = sum([b for b in B if b >= 0])\n    max_with_B = max(max_A_forward, max_A_backward) + B_positive_sum\n    print(max(max_with_B, max_without_B))", "for tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    c = [i for i in b if i > 0]\n    maxi = a[0]\n    ans = 0\n    for i in a + c:\n        if ans < 0:\n            ans = 0\n        ans += i\n        maxi = max(maxi, ans)\n    ans = 0\n    for i in c + a:\n        if ans < 0:\n            ans = 0\n        ans += i\n        maxi = max(maxi, ans)\n    print(maxi)", "for tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    c = [i for i in b if i > 0]\n    maxi = a[0]\n    ans = 0\n    for i in a + c:\n        if ans < 0:\n            ans = 0\n        ans += i\n        maxi = max(maxi, ans)\n    ans = 0\n    for i in c + a:\n        if ans < 0:\n            ans = 0\n        ans += i\n        maxi = max(maxi, ans)\n    print(maxi)", "for tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    c = [i for i in b if i > 0]\n    maxi = a[0]\n    ans = 0\n    for i in a + c:\n        if ans < 0:\n            ans = 0\n        ans += i\n        maxi = max(maxi, ans)\n    ans = 0\n    for i in c + a:\n        if ans < 0:\n            ans = 0\n        ans += i\n        maxi = max(maxi, ans)\n    print(maxi)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = int(input())\n    b = [int(x) for x in input().split()]\n    ans = -1000000000\n    s = 0\n    p1 = 0\n    for i in range(0, n):\n        s += a[i]\n        if s < 0:\n            s = 0\n            p1 = i + 1\n        else:\n            p2 = i\n            pass\n        if s > ans:\n            l = [p1, i]\n            ans = s\n    q = a[:l[0]]\n    r = a[l[1] + 1:]\n    s1 = sum(q)\n    s2 = sum(r)\n    bb = 0\n    for i in b:\n        if i > 0:\n            bb += i\n    print(bb + ans + max(s1, s2))", "def calc_max_sum_for_array(array):\n    max_sum = -10 ** 15\n    cur_sum = 0\n    for el in array:\n        cur_sum += el\n        if cur_sum > max_sum:\n            max_sum = cur_sum\n    return max_sum\n\ndef calc_max_sum(arrayA, arrayB):\n    max_sum_a = max(calc_max_sum_for_array(arrayA), calc_max_sum_for_array(arrayA[::-1]))\n    max_sum_b = sum([el for el in arrayB if el > 0])\n    return max_sum_a + max_sum_b\nfor _ in range(int(input())):\n    input()\n    arrayA = list(map(int, input().split()))\n    input()\n    arrayB = list(map(int, input().split()))\n    print(calc_max_sum(arrayA, arrayB))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    M = int(input())\n    B = [int(x) for x in input().split()]\n    best_sum = float('-inf')\n    best_start = best_end = None\n    current_sum = 0\n    for (current_end, x) in enumerate(A):\n        if current_sum <= 0:\n            current_start = current_end\n            current_sum = x\n        else:\n            current_sum += x\n        if current_sum > best_sum:\n            best_sum = current_sum\n            best_start = current_start\n            best_end = current_end\n    temp = 0\n    for j in B:\n        if j > 0:\n            temp += j\n    if best_start == 0 or best_end == N - 1:\n        print(best_sum + temp)\n    elif sum(A[0:best_start]) >= sum(A[best_end + 1:N]):\n        if sum(A[0:best_end + 1]) + temp > best_sum:\n            print(sum(A[0:best_end + 1]) + temp)\n        else:\n            print(best_sum)\n    elif sum(A[best_start:N]) + temp > best_sum:\n        print(sum(A[best_start:N]) + temp)\n    else:\n        print(best_sum)", "for _ in range(int(input())):\n    n = int(input())\n    ln = list(map(int, input().split()))\n    m = int(input())\n    lm = list(map(int, input().split()))\n    s1 = 0\n    for i in range(m):\n        if lm[i] > 0:\n            s1 += lm[i]\n        else:\n            pass\n    s = ln[0]\n    z = ln[0]\n    ind1 = 0\n    for j in range(1, n):\n        z = z + ln[j]\n        if s <= z:\n            s = z\n            ind1 = j\n    s2 = ln[-1]\n    z2 = ln[-1]\n    ind2 = 0\n    for j in range(n - 2, -1, -1):\n        z2 = z2 + ln[j]\n        if s2 <= z2:\n            s2 = z2\n            ind2 = j\n    if s2 > s:\n        s_max = s2 + s1\n    else:\n        s_max = s + s1\n    print(s_max)", "t = int(input())\nimport numpy as np\nfor i in range(t):\n    n = int(input())\n    arr_a = list(map(int, input().split()))\n    arr_c = arr_a.copy()\n    m = int(input())\n    arr_b = list(map(int, input().split()))\n    for num in arr_b:\n        if num > 0:\n            arr_a.insert(0, num)\n            arr_c.append(num)\n        else:\n            arr_c.insert(0, num)\n            arr_a.append(num)\n    ans1 = 0\n    ans2 = 0\n    s1 = 0\n    s2 = 0\n    for i in range(len(arr_a)):\n        s1 = s1 + arr_a[i]\n        if s1 < 0:\n            s1 = 0\n        ans1 = max(s1, ans1)\n    for i in range(len(arr_c)):\n        s2 = s2 + arr_c[i]\n        if s2 < 0:\n            s2 = 0\n        ans2 = max(s2, ans2)\n    print(max(ans1, ans2))", "t1 = int(input())\nfor i in range(t1):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    c = a.copy()\n    for i in range(m):\n        if b[i] > 0:\n            a.append(b[i])\n            c.insert(0, b[i])\n\n    def fun(list1):\n        sum = 0\n        gsum = list1[0]\n        for i in range(len(list1)):\n            sum += list1[i]\n            if gsum < sum:\n                gsum = sum\n            if sum <= 0:\n                sum = 0\n        return gsum\n    e = fun(a)\n    f = fun(c)\n    if e > f:\n        print(e)\n    else:\n        print(f)", "from sys import maxsize\n\ndef kadane(arr):\n    n = len(arr)\n    max_till_now = -maxsize - 1\n    max_ending = 0\n    for i in range(n):\n        max_ending += arr[i]\n        if max_ending > max_till_now:\n            max_till_now = max_ending\n        if max_ending < 0:\n            max_ending = 0\n    return max_till_now\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    A = list(map(int, input().split()))\n    M = int(input())\n    B = list(map(int, input().split()))\n    A1 = A.copy()\n    A2 = A.copy()\n    B1 = B.copy()\n    B2 = B.copy()\n    flag = True\n    while len(B1) != 0:\n        if flag:\n            if B1[0] > 0:\n                A1.append(B1[0])\n            else:\n                A1.insert(0, B1[0])\n            B1.pop(0)\n            flag = False\n        else:\n            if B1[-1] > 0:\n                A1.append(B1[-1])\n            else:\n                A1.insert(0, B1[-1])\n            B1.pop(-1)\n            flag = True\n    flag = True\n    while len(B2) != 0:\n        if flag:\n            if B2[0] < 0:\n                A2.append(B2[0])\n            else:\n                A2.insert(0, B2[0])\n            B2.pop(0)\n            flag = False\n        else:\n            if B2[-1] < 0:\n                A2.append(B2[-1])\n            else:\n                A2.insert(0, B2[-1])\n            B2.pop(-1)\n            flag = True\n    print(max(kadane(A1), kadane(A2)))\n    T -= 1", "t = int(input())\n\ndef kadanes(size, arr):\n    maxTillNow = 0\n    maxEnding = 0\n    for a in arr:\n        maxEnding += a\n        if maxEnding < 0:\n            maxEnding = 0\n        if maxTillNow < maxEnding:\n            maxTillNow = maxEnding\n    return maxTillNow\nfor _ in range(t):\n    n = int(input())\n    leftList = list(map(int, input().split()))\n    rightList = leftList[:]\n    m = int(input())\n    b = list(map(int, input().split()))\n    for num in b:\n        if num > 0:\n            leftList.insert(0, num)\n            rightList.append(num)\n    ans = max(kadanes(len(leftList), leftList), kadanes(len(rightList), rightList))\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    c = a.copy()\n    for i in range(m):\n        if b[i] > 0:\n            a.append(b[i])\n            c.insert(0, b[i])\n\n    def fun(list1):\n        sum = 0\n        gsum = list1[0]\n        for i in range(len(list1)):\n            sum += list1[i]\n            if gsum < sum:\n                gsum = sum\n            if sum <= 0:\n                sum = 0\n        return gsum\n    e = fun(a)\n    f = fun(c)\n    if e > f:\n        print(e)\n    else:\n        print(f)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    m = int(input())\n    B = list(map(int, input().split()))\n    c = A.copy()\n    for i in range(m):\n        if B[i] < 0:\n            A.append(B[i])\n            c.insert(0, B[i])\n        else:\n            A.insert(0, B[i])\n            c.append(B[i])\n    ans1 = 0\n    ans2 = 0\n    s1 = 0\n    s2 = 0\n    for i in range(len(A)):\n        s1 = s1 + A[i]\n        if s1 < 0:\n            s1 = 0\n        ans1 = max(s1, ans1)\n    for i in range(len(c)):\n        s2 = s2 + c[i]\n        if s2 < 0:\n            s2 = 0\n        ans2 = max(s2, ans2)\n    print(max(ans1, ans2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    m = int(input())\n    B = list(map(int, input().split()))\n    c = A.copy()\n    for i in range(m):\n        if B[i] < 0:\n            A.append(B[i])\n            c.insert(0, B[i])\n        else:\n            A.insert(0, B[i])\n            c.append(B[i])\n    ans1 = 0\n    ans2 = 0\n    s1 = 0\n    s2 = 0\n    for i in range(len(A)):\n        s1 = s1 + A[i]\n        if s1 < 0:\n            s1 = 0\n        ans1 = max(s1, ans1)\n    for i in range(len(c)):\n        s2 = s2 + c[i]\n        if s2 < 0:\n            s2 = 0\n        ans2 = max(s2, ans2)\n    print(max(ans1, ans2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    m = int(input())\n    B = list(map(int, input().split()))\n    c = A.copy()\n    for i in range(m):\n        if B[i] < 0:\n            A.append(B[i])\n            c.insert(0, B[i])\n        else:\n            A.insert(0, B[i])\n            c.append(B[i])\n    ans1 = 0\n    ans2 = 0\n    s1 = 0\n    s2 = 0\n    for i in range(len(A)):\n        s1 = s1 + A[i]\n        if s1 < 0:\n            s1 = 0\n        ans1 = max(s1, ans1)\n    for i in range(len(c)):\n        s2 = s2 + c[i]\n        if s2 < 0:\n            s2 = 0\n        ans2 = max(s2, ans2)\n    print(max(ans1, ans2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    c = a.copy()\n    for i in range(m):\n        if b[i] > 0:\n            a.append(b[i])\n            c.insert(0, b[i])\n\n    def fun(list1):\n        sum = 0\n        gsum = list1[0]\n        for i in range(len(list1)):\n            sum += list1[i]\n            if gsum < sum:\n                gsum = sum\n            if sum <= 0:\n                sum = 0\n        return gsum\n    e = fun(a)\n    f = fun(c)\n    if e > f:\n        print(e)\n    else:\n        print(f)", "t = int(input())\ni = 0\nwhile t > i:\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    k = []\n    l = a.copy()\n    j = 0\n    while j < m:\n        if b[j] > 0:\n            k.append(b[j])\n        j += 1\n    a.extend(k)\n    s = 0\n    max_till_here = 0\n    global_max = a[s]\n    while s < len(a):\n        max_till_here += a[s]\n        if max_till_here > global_max:\n            global_max = max_till_here\n        if max_till_here <= 0:\n            max_till_here = 0\n        s += 1\n    x = global_max\n    j = 0\n    while j < m:\n        if b[j] > 0:\n            l.insert(0, b[j])\n        j += 1\n    s = 0\n    max_till_here = 0\n    global_max = a[s]\n    while s < len(l):\n        max_till_here += l[s]\n        if max_till_here > global_max:\n            global_max = max_till_here\n        if max_till_here <= 0:\n            max_till_here = 0\n        s += 1\n    z = global_max\n    if x > z:\n        print(x)\n    else:\n        print(z)\n    i += 1", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))[:N]\n    s = 0\n    m = A[0]\n    for i in range(N):\n        s += A[i]\n        if s > m:\n            m = s\n    s = 0\n    for i in range(N - 1, -1, -1):\n        s += A[i]\n        if s > m:\n            m = s\n    M = int(input())\n    B = list(map(int, input().split()))[:M]\n    for i in B:\n        if i > 0:\n            m += i\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    m = a[0]\n    for i in range(n):\n        s += a[i]\n        if s > m:\n            m = s\n    s = 0\n    for i in range(n - 1, -1, -1):\n        s += a[i]\n        if s > m:\n            m = s\n    x = int(input())\n    b = list(map(int, input().split()))\n    sum = 0\n    for i in b:\n        if i > 0:\n            sum += i\n    print(m + sum)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sum = 0\n    m = a[0]\n    for i in range(n):\n        sum += a[i]\n        if sum > m:\n            m = sum\n    sum = 0\n    for i in range(n - 1, -1, -1):\n        sum += a[i]\n        if sum > m:\n            m = sum\n    sum1 = 0\n    x = int(input())\n    b = list(map(int, input().split()))\n    for i in range(x):\n        if b[i] >= 0:\n            sum1 += b[i]\n    print(m + sum1)", "ina = lambda : [*map(int, input().split())]\nins = lambda : input()\nind = lambda : int(input())\ninf = lambda : float(input())\n\ndef csum(a, n):\n    r = a[:]\n    for i in range(n - 1):\n        r[i + 1] = r[i] + r[i + 1]\n    return r\n\ndef sump(b):\n    return sum((i for i in b if i > 0))\n\ndef main():\n    (n, a) = (ind(), ina())\n    (_, b) = (ind(), ina())\n    print(max(max(csum(a, n)), max(csum(list(reversed(a)), n))) + sump(b))\nfor _ in range(ind()):\n    main()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    m = a[0]\n    for i in range(n):\n        s += a[i]\n        if s > m:\n            m = s\n    s = 0\n    for i in range(n - 1, -1, -1):\n        s += a[i]\n        if s > m:\n            m = s\n    x = int(input())\n    b = list(map(int, input().split()))\n    sum = 0\n    for i in b:\n        if i > 0:\n            sum += i\n    print(m + sum)", "def solve(N, A, M, B):\n    cum_sum = 0\n    start_sum = 0\n    end_sum = 0\n    for i in A:\n        if cum_sum >= 0:\n            cum_sum += i\n        start_sum = max(cum_sum, start_sum)\n    cum_sum = 0\n    for i in A[::-1]:\n        if cum_sum >= 0:\n            cum_sum += i\n        end_sum = max(cum_sum, end_sum)\n    sum_to_be_added = 0\n    cum_sum = 0\n    mid_sum = 0\n    for i in A[1:-1]:\n        if cum_sum >= 0:\n            cum_sum += i\n        end_sum = max(cum_sum, end_sum)\n    for i in B:\n        if i > 0:\n            sum_to_be_added += i\n    return sum_to_be_added + max(end_sum, mid_sum, start_sum)\n    return max(start_sum, end_sum)\nT = int(input())\nwhile T:\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    M = int(input())\n    B = [int(x) for x in input().split()]\n    ans = solve(N, A, M, B)\n    print(ans)\n    T -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    maxsum = -99999999\n    currsum = 0\n    for i in range(n):\n        currsum += a[i]\n        maxsum = max(maxsum, currsum)\n        if currsum < 0:\n            currsum = 0\n    for i in b:\n        if i > 0:\n            maxsum += i\n    print(maxsum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    m = a[0]\n    for i in range(n):\n        s += a[i]\n        if s > m:\n            m = s\n    s = 0\n    for i in range(n - 1, -1, -1):\n        s += a[i]\n        if s > m:\n            m = s\n    x = int(input())\n    b = list(map(int, input().split()))\n    sum = 0\n    for i in b:\n        if i > 0:\n            sum += i\n    print(m + sum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    m = a[0]\n    for i in range(n):\n        s += a[i]\n        if s > m:\n            m = s\n    s = 0\n    for i in range(n - 1, -1, -1):\n        s += a[i]\n        if s > m:\n            m = s\n    x = int(input())\n    b = list(map(int, input().split()))\n    sum = 0\n    for i in b:\n        if i > 0:\n            sum += i\n    print(m + sum)", "def maximumSubarray():\n    numTestCases = int(input())\n    for i in range(numTestCases):\n        sizeA = int(input())\n        arrayA = [int(x) for x in input().split()]\n        sizeB = int(input())\n        arrayB = [int(x) for x in input().split()]\n        start = 0\n        end = 0\n        arrayC = arrayA.copy()\n        for j in range(sizeB):\n            if arrayB[j] < 0:\n                arrayA.append(arrayB[j])\n                arrayC.insert(0, arrayB[j])\n            else:\n                arrayC.append(arrayB[j])\n                arrayA.insert(0, arrayB[j])\n        maxA = helper(arrayA, len(arrayA))\n        maxC = helper(arrayC, len(arrayC))\n        ansA = 0\n        sumA = 0\n        ansC = 0\n        sumC = 0\n        for i in range(sizeB + sizeA):\n            sumA = sumA + arrayA[i]\n            sumC = sumC + arrayC[i]\n            ansA = max(sumA, ansA)\n            ansC = max(sumC, ansC)\n            if sumA < 0:\n                sumA = 0\n            if sumC < 0:\n                sumC = 0\n        print(max(maxA, maxC))\n\ndef helper(array, length):\n    maxArray = [0] * length\n    ans = 0\n    sum = 0\n    for i in range(length):\n        sum = sum + array[i]\n        ans = max(sum, ans)\n        if sum < 0:\n            sum = 0\n    return ans\nmaximumSubarray()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    m = a[0]\n    for i in range(n):\n        s += a[i]\n        if s > m:\n            m = s\n    s = 0\n    for i in range(n - 1, -1, -1):\n        s += a[i]\n        if s > m:\n            m = s\n    x = int(input())\n    b = list(map(int, input().split()))\n    sum = 0\n    for i in b:\n        if i > 0:\n            sum += i\n    print(m + sum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    maxi = -2 ** 32 + 1\n    if n >= 3:\n        dp = [0 for i in range(n)]\n        dp[1] = a[1]\n        for i in range(2, n - 1):\n            dp[i] = max(a[i], dp[i - 1] + a[i])\n        maxi = max(dp)\n    st = 0\n    start = 0\n    for i in range(0, n):\n        st += a[i]\n        start = max(start, st)\n    en = 0\n    end = 0\n    for i in range(n - 1, -1, -1):\n        en += a[i]\n        end = max(end, en)\n    ma = max(start, end)\n    for i in b:\n        if i > 0:\n            ma += i\n    print(max(maxi, ma))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = a.copy()\n    m = int(input())\n    b = list(map(int, input().split()))\n    for i in b:\n        if i > 0:\n            a.append(i)\n            c.insert(0, i)\n        else:\n            a.insert(0, i)\n            c.append(i)\n    s1 = 0\n    s2 = 0\n    ans1 = 0\n    ans2 = 0\n    for i in range(m + n):\n        s1 = s1 + a[i]\n        s2 = s2 + c[i]\n        ans1 = max(ans1, s1)\n        ans2 = max(ans2, s2)\n        if s1 <= 0:\n            s1 = 0\n        if s2 <= 0:\n            s2 = 0\n    print(max(ans1, ans2))", "for i in range(int(input())):\n    x = int(input())\n    arr = list(map(int, input().split()))\n    y = int(input())\n    arr2 = list(map(int, input().split()))\n    (m, c1, c2) = (0, 0, 0)\n    for i in range(x):\n        c1 += arr[i]\n        c2 += arr[x - i - 1]\n        m = max(m, max(c1, c2))\n    c3 = 0\n    for i in range(y):\n        c3 += arr2[i] if arr2[i] > 0 else 0\n    print(m + c3)", "for i in range(int(input())):\n    x = int(input())\n    arr = list(map(int, input().split()))\n    y = int(input())\n    arr2 = list(map(int, input().split()))\n    (m, c1, c2) = (0, 0, 0)\n    for i in range(x):\n        c1 += arr[i]\n        c2 += arr[x - i - 1]\n        m = max(m, max(c1, c2))\n    c3 = 0\n    for i in range(y):\n        c3 += arr2[i] if arr2[i] > 0 else 0\n    print(m + c3)", "for i in range(int(input())):\n    x = int(input())\n    arr = list(map(int, input().split()))\n    y = int(input())\n    arr2 = list(map(int, input().split()))\n    (m, c1, c2) = (0, 0, 0)\n    for i in range(x):\n        c1 += arr[i]\n        c2 += arr[x - i - 1]\n        m = max(m, max(c1, c2))\n    c3 = 0\n    for i in range(y):\n        c3 += arr2[i] if arr2[i] > 0 else 0\n    print(m + c3)", "def calc(a):\n    ans = cur = 0\n    for x in a:\n        cur = max(x, x + cur)\n        ans = max(ans, cur)\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    pos = 0\n    while pos < m and b[pos] < 0:\n        pos += 1\n    print(max(calc(b[pos:] + a), calc(a + b[pos:])))", "from sys import maxsize\n\ndef maxSubArraySum(a, size):\n    max_so_far = -maxsize - 1\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n    for i in range(0, size):\n        max_ending_here += a[i]\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n    return [max_so_far, start, end]\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    b.sort(reverse=True)\n    l = maxSubArraySum(a, n)\n    su = 0\n    for x in range(m):\n        if b[x] > 0:\n            su += b[x]\n        else:\n            break\n    if l[2] + 1 < n:\n        su2 = sum(a[l[2] + 1:])\n    else:\n        su2 = 0\n    print(max(l[0], l[0] + sum(a[:l[1]]) + su, l[0] + su2 + su))", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = int(input())\n    d = list(map(int, input().split()))\n    x = []\n    y = b[::-1]\n    z = 0\n    for i in b:\n        z += i\n        x.append(z)\n    z = 0\n    for i in y:\n        z += i\n        x.append(z)\n    s = max(x)\n    for i in d:\n        if i > 0:\n            s += i\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n1 = int(input())\n    a = list(map(int, input().split()))\n    n2 = int(input())\n    b = list(map(int, input().split()))\n    (ans1, ans2, sm) = (0, 0, 0)\n    for i in range(n1):\n        sm += a[i]\n        ans1 = max(ans1, sm)\n    sm = 0\n    for i in range(n1 - 1, -1, -1):\n        sm += a[i]\n        ans2 = max(ans2, sm)\n    if ans2 > ans1:\n        for i in b:\n            if i > 0:\n                a.append(i)\n        (ans1, sm) = (0, 0)\n        for i in range(len(a) - 1, -1, -1):\n            sm += a[i]\n            ans1 = max(ans1, sm)\n    else:\n        for i in b:\n            if i > 0:\n                a = [i] + a\n        (ans1, sm) = (0, 0)\n        for i in range(len(a)):\n            sm += a[i]\n            ans1 = max(ans1, sm)\n    print(ans1)", "t = int(input())\nfor _ in range(t):\n    n1 = int(input())\n    a = list(map(int, input().split()))\n    n2 = int(input())\n    b = list(map(int, input().split()))\n    (ans1, ans2, sm) = (0, 0, 0)\n    for i in range(n1):\n        sm += a[i]\n        ans1 = max(ans1, sm)\n    sm = 0\n    for i in range(n1 - 1, -1, -1):\n        sm += a[i]\n        ans2 = max(ans2, sm)\n    if ans2 > ans1:\n        for i in b:\n            if i > 0:\n                a.append(i)\n        (ans1, sm) = (0, 0)\n        for i in range(len(a) - 1, -1, -1):\n            sm += a[i]\n            ans1 = max(ans1, sm)\n    else:\n        for i in b:\n            if i > 0:\n                a = [i] + a\n        (ans1, sm) = (0, 0)\n        for i in range(len(a)):\n            sm += a[i]\n            ans1 = max(ans1, sm)\n    print(ans1)", "for i in range(int(input())):\n    x = int(input())\n    arr = list(map(int, input().split()))\n    y = int(input())\n    arr2 = list(map(int, input().split()))\n    (m, c1, c2) = (0, 0, 0)\n    for i in range(x):\n        c1 += arr[i]\n        c2 += arr[x - i - 1]\n        m = max(m, max(c1, c2))\n    c3 = 0\n    for i in range(y):\n        c3 += arr2[i] if arr2[i] > 0 else 0\n    print(m + c3)", "def calc(a):\n    ans = cur = 0\n    for x in a:\n        cur = max(x, x + cur)\n        ans = max(ans, cur)\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    pos = 0\n    while pos < m and b[pos] < 0:\n        pos += 1\n    print(max(calc(b[pos:] + a), calc(a + b[pos:])))", "def calc(a):\n    ans = cur = 0\n    for x in a:\n        cur = max(x, x + cur)\n        ans = max(ans, cur)\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    pos = 0\n    while pos < m and b[pos] < 0:\n        pos += 1\n    print(max(calc(b[pos:] + a), calc(a + b[pos:])))", "import os, sys, io, math\nfrom array import array\nfrom math import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    m = IN()\n    a = I()\n    n = IN()\n    b = I()\n    (x, c, d, e) = (0, 0, 0, 0)\n    for i in range(m):\n        c += a[i]\n        e += a[m - i - 1]\n        x = max(x, max(c, e))\n    for i in range(n):\n        d += b[i] if b[i] > 0 else 0\n    print(x + d)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    mx = 0\n    s1 = 0\n    s2 = 0\n    for i in range(n):\n        s1 += a[i]\n        s2 += a[n - i - 1]\n        mx = max(mx, max(s1, s2))\n    s3 = 0\n    for i in range(m):\n        s3 += b[i] if b[i] > 0 else 0\n    print(mx + s3)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    bsum = 0\n    for j in b:\n        if j > 0:\n            bsum += j\n    csum = 0\n    asum = 0\n    for j in a:\n        csum += j\n        asum = max(asum, csum)\n    csum = 0\n    a.reverse()\n    for j in a:\n        csum += j\n        asum = max(asum, csum)\n    print(asum + bsum)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    s = 0\n    a1 = 0\n    a2 = 0\n    s1 = 0\n    e = 0\n    b = input().split()\n    for i in range(m):\n        b[i] = int(b[i])\n        if b[i] > 0:\n            s1 += b[i]\n        else:\n            e += b[i]\n    s = s1\n    for i in range(n):\n        s += a[i]\n        a1 = max(s, a1)\n        if s < 0:\n            s = 0\n    a1 = max(s + e, a1)\n    s = e\n    for i in range(n):\n        s += a[i]\n        a2 = max(s, a2)\n        if s < 0:\n            s = 0\n    a2 = max(s + s1, a2)\n    print(max(a1, a2))", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = input().split()\n    for i in range(n):\n        a[i] = int(a[i])\n    m = int(input())\n    b = input().split()\n    sum = 0\n    for i in range(m):\n        b[i] = int(b[i])\n        if b[i] > 0:\n            sum = sum + b[i]\n    max1 = -100000000\n    max2 = -100000000\n    sum1 = 0\n    for i in range(n):\n        sum1 = sum1 + a[i]\n        if sum1 > max1:\n            max1 = sum1\n    sum1 = 0\n    for i in range(n):\n        sum1 = sum1 + a[n - 1 - i]\n        if sum1 > max2:\n            max2 = sum1\n    if max1 > max2:\n        print(max1 + sum)\n    else:\n        print(max2 + sum)"]