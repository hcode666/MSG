["MOD = 998244353\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    li = sorted(li)\n    c = li.count(1)\n    for i in range(n):\n        if li[i] % 2 == 0 and c > 0:\n            li[i] += 1\n            c -= 1\n    ans = 1\n    for i in li:\n        ans = ans * i % MOD\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split(' ')))\n    odds = sorted([x for x in arr if x % 2 == 1])\n    evens = sorted([x for x in arr if x % 2 == 0])\n    p = q = 0\n    while p < len(odds) and q < len(evens):\n        if odds[p] != 1:\n            break\n        evens[q] += 1\n        p += 1\n        q += 1\n    ans = 1\n    for idx in range(p, len(odds)):\n        ans = ans * odds[idx] % 998244353\n    for ev in evens:\n        ans = ans * ev % 998244353\n    print(ans)", "Test = int(input())\nmod = 998244353\nfor t in range(Test):\n    n = int(input())\n    lis = map(int, input().split())\n    lis = sorted(lis)\n    countof1 = lis.count(1)\n    for i in range(n):\n        if lis[i] % 2 == 0 and countof1 > 0:\n            lis[i] += 1\n            countof1 -= 1\n    ans = 1\n    for a in lis:\n        ans = ans * a % mod\n    print(ans)", "Test = int(input())\nmod = 998244353\nfor t in range(Test):\n    n = int(input())\n    lis = map(int, input().split())\n    lis = sorted(lis)\n    countof1 = lis.count(1)\n    for i in range(n):\n        if lis[i] % 2 == 0 and countof1 > 0:\n            lis[i] += 1\n            countof1 -= 1\n    ans = 1\n    for a in lis:\n        ans = ans * a % mod\n    print(ans)", "Test = int(input())\nmod = 998244353\nfor t in range(Test):\n    n = int(input())\n    lis = map(int, input().split())\n    lis = sorted(lis)\n    countof1 = lis.count(1)\n    for i in range(n):\n        if lis[i] % 2 == 0 and countof1 > 0:\n            lis[i] += 1\n            countof1 -= 1\n    ans = 1\n    for a in lis:\n        ans = ans * a % mod\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    finprod = 1\n    aones = a.count(1)\n    evs = []\n    for e in range(aones, n):\n        if a[e] % 2 == 1:\n            finprod = finprod * a[e] % 998244353\n        else:\n            evs.append(a[e])\n    evs.sort()\n    i = min(aones, len(evs))\n    for j in range(len(evs)):\n        if j < i:\n            finprod = finprod * (evs[j] + 1) % 998244353\n        else:\n            finprod = finprod * evs[j] % 998244353\n    print(finprod % 998244353)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 998244353\n    (o, e) = (1, [])\n    for i in a:\n        if i & 1:\n            o = o * i % m\n        else:\n            e.append(i)\n    c = a.count(1)\n    e.sort()\n    for i in range(min(c, len(e))):\n        e[i] += 1\n    for i in e:\n        o = o * i % m\n    print(o)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 998244353\n    (o, e) = (1, [])\n    for i in a:\n        if i & 1:\n            o = o * i % m\n        else:\n            e.append(i)\n    c = a.count(1)\n    e.sort()\n    for i in range(min(c, len(e))):\n        e[i] += 1\n    for i in e:\n        o = o * i % m\n    print(o)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 998244353\n    (o, e) = (1, [])\n    for i in a:\n        if i & 1:\n            o = o * i % m\n        else:\n            e.append(i)\n    c = a.count(1)\n    e.sort()\n    for i in range(min(c, len(e))):\n        e[i] += 1\n    for i in e:\n        o = o * i % m\n    print(o)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 998244353\n    (o, e) = (1, [])\n    for i in a:\n        if i & 1:\n            o = o * i % m\n        else:\n            e.append(i)\n    c = a.count(1)\n    e.sort()\n    for i in range(min(c, len(e))):\n        e[i] += 1\n    for i in e:\n        o = o * i % m\n    print(o)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    o = []\n    e = []\n    c = 0\n    for i in l:\n        if i == 1:\n            c += 1\n    l.sort()\n    p = 1\n    for i in l:\n        if i % 2 == 0 and c:\n            p = p * (i ^ 1) % 998244353\n            c -= 1\n        else:\n            p = p * i % 998244353\n    print(p)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    o = []\n    e = []\n    c = 0\n    for i in l:\n        if i == 1:\n            c += 1\n    l.sort()\n    p = 1\n    for i in l:\n        if i % 2 == 0 and c:\n            p = p * (i ^ 1) % 998244353\n            c -= 1\n        else:\n            p = p * i % 998244353\n    print(p)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    o = []\n    e = []\n    c = 0\n    for i in l:\n        if i == 1:\n            c += 1\n    l.sort()\n    p = 1\n    for i in l:\n        if i % 2 == 0 and c:\n            p = p * (i ^ 1) % 998244353\n            c -= 1\n        else:\n            p = p * i % 998244353\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 998244353\n    (o, e) = (1, [])\n    for i in a:\n        if i & 1:\n            o = o * i % m\n        else:\n            e.append(i)\n    c = a.count(1)\n    e.sort()\n    for i in range(min(c, len(e))):\n        e[i] += 1\n    for i in e:\n        o = o * i % m\n    print(o)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 1\n    mod = 998244353\n    ones = 0\n    a.sort()\n    for i in range(n):\n        if a[i] == 1:\n            ones += 1\n        elif a[i] % 2 == 0 and ones > 0:\n            ones -= 1\n            a[i] += 1\n        ans = ans * a[i] % mod\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 1\n    mod = 998244353\n    ones = 0\n    a.sort()\n    for i in range(n):\n        if a[i] == 1:\n            ones += 1\n        elif a[i] % 2 == 0 and ones > 0:\n            ones -= 1\n            a[i] += 1\n        ans = ans * a[i] % mod\n    print(ans)", "prime = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odds = sorted([x for x in a if x % 2 != 0])\n    evens = sorted([x for x in a if x % 2 == 0])\n    j = k = 0\n    while j < len(odds) and k < len(evens):\n        if odds[j] != 1:\n            break\n        evens[k] += 1\n        j += 1\n        k += 1\n    prod = 1\n    for k in range(j, len(odds)):\n        prod = prod * odds[k] % prime\n    for x in evens:\n        prod = prod * x % prime\n    print(prod)", "prime = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odds = sorted([x for x in a if x % 2 != 0])\n    evens = sorted([x for x in a if x % 2 == 0])\n    j = k = 0\n    while j < len(odds) and k < len(evens):\n        if odds[j] != 1:\n            break\n        evens[k] += 1\n        j += 1\n        k += 1\n    prod = 1\n    for k in range(j, len(odds)):\n        prod = prod * odds[k] % prime\n    for x in evens:\n        prod = prod * x % prime\n    print(prod)", "mod = 998244353\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    evens = sorted([x for x in a if x % 2 == 0])\n    odds = sorted([x for x in a if x % 2 == 1])\n    j = k = 0\n    while j < len(odds) and k < len(evens):\n        if odds[j] != 1:\n            break\n        evens[k] += 1\n        j += 1\n        k += 1\n    ans = 1\n    for i in range(j, len(odds)):\n        ans = ans * odds[i] % mod\n    for x in evens:\n        ans = ans * x % mod\n    print(ans)", "mod = 998244353\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (evens, odds) = (sorted([x for x in a if x % 2 == 0]), sorted([x for x in a if x % 2 == 1]))\n    p = q = 0\n    while p < len(odds) and q < len(evens):\n        if odds[p] != 1:\n            break\n        evens[q] += 1\n        p += 1\n        q += 1\n    ans = 1\n    for i in range(p, len(odds)):\n        ans = ans * odds[i] % mod\n    for x in evens:\n        ans = ans * x % mod\n    print(ans)", "mod = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (evens, odds) = (sorted([x for x in a if x % 2 == 0]), sorted([x for x in a if x % 2 == 1]))\n    p = q = 0\n    while p < len(odds) and q < len(evens):\n        if odds[p] != 1:\n            break\n        evens[q] += 1\n        p += 1\n        q += 1\n    ans = 1\n    for i in range(p, len(odds)):\n        ans = ans * odds[i] % mod\n    for x in evens:\n        ans = ans * x % mod\n    print(ans)", "MOD = 998244353\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    (odd, even) = ([], [])\n    for i in A:\n        if i % 2 == 1:\n            odd.append(i)\n        else:\n            even.append(i)\n    odd.sort()\n    even.sort()\n    (i, j) = (0, 0)\n    while i < len(odd) and j < len(even):\n        if odd[i] > 1:\n            break\n        even[j] += 1\n        i += 1\n        j += 1\n    product = 1\n    for i in odd:\n        product = product * i % MOD\n    for i in even:\n        product = product * i % MOD\n    print(product)", "mod = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (evens, odds) = (sorted([x for x in a if x % 2 == 0]), sorted([x for x in a if x % 2 == 1]))\n    p = q = 0\n    while p < len(odds) and q < len(evens):\n        if odds[p] != 1:\n            break\n        evens[q] += 1\n        p += 1\n        q += 1\n    ans = 1\n    for i in range(p, len(odds)):\n        ans = ans * odds[i] % mod\n    for x in evens:\n        ans = ans * x % mod\n    print(ans)", "mod = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    L.sort()\n    c = 0\n    while L and L[0] == 1:\n        c += 1\n        L.pop(0)\n    res = 1\n    for i in L:\n        if i & 1 == 0 and c > 0:\n            c -= 1\n            i ^= 1\n        res *= i\n        res %= mod\n    print(res)", "mod = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    L.sort()\n    prod = 1\n    c = L.count(1)\n    for i in range(n):\n        if L[i] & 1 == 0 and c > 0:\n            c -= 1\n            L[i] ^= 1\n        prod = prod % mod\n        prod *= L[i] % mod\n    print(prod % mod)", "def solve(arr):\n    ones = arr.count(1)\n    temp = []\n    for (i, x) in enumerate(arr):\n        if x & 1 == 0:\n            temp.append([x, i])\n    temp.sort()\n    for i in range(min(ones, len(temp))):\n        arr[temp[i][1]] = 1\n        arr.append(temp[i][0] + 1)\n    mod = 998244353\n    res = 1\n    for i in arr:\n        res = res * i % mod\n    return res\nt = int(input())\nwhile t:\n    n = int(input())\n    arr = [int(i) for i in str(input()).split()]\n    print(solve(arr))\n    t -= 1", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    k = x.count(1)\n    c = 0\n    for i in range(len(x)):\n        if c == k:\n            break\n        if x[i] % 2 == 0:\n            c += 1\n            x[i] = x[i] + 1\n    prod = 1\n    for i in x:\n        prod = prod % 998244353\n        prod *= i % 998244353\n    print(prod % 998244353)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = [i for i in a if i % 2 == 0]\n    odd = [j for j in a if j % 2 == 1 and j != 1]\n    even.sort()\n    one = a.count(1)\n    ans = 1\n    for i in even:\n        if one != 0:\n            ans = ans * (i + 1)\n            ans %= 998244353\n            one -= 1\n        else:\n            ans = ans * i\n            ans %= 998244353\n    for j in odd:\n        if j != 1:\n            ans = ans * j % 998244353\n    print(ans)", "from enum import unique\nimport math\n\ndef calcGCD(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return abs(x)\n\ndef coprime(a, b):\n    if calcGCD(a, b) == 1:\n        print('Co-Prime')\n    else:\n        print('Not Co-Prime')\n\ndef countDivisibles(A, B, M):\n    if A % M == 0:\n        return B / M - A / M + 1\n    return B / M - A / M\n\ndef max_cuts(n, a, b, c):\n    if n == 0:\n        return 0\n    elif n < 0:\n        return -1\n    result = max(max_cuts(n - a, a, b, c), max_cuts(n - b, a, b, c), max_cuts(n - c, a, b, c))\n    if result == -1:\n        return -1\n    return result + 1\n\ndef freq(list1):\n    freq_count = {}\n    for i in list1:\n        if i in freq_count:\n            freq_count[i] += 1\n        else:\n            freq_count[i] = 1\n    return freq_count\n\ndef checker(arr, col):\n    count = 0\n    for i in range(8):\n        for j in range(8):\n            if arr[i][j] == str(col):\n                count += 1\n        if count == 8:\n            return count\nt = int(input())\nfor t1 in range(t):\n    n = int(input())\n    a1 = list(map(int, input().split(' ')))\n    a = sorted(a1)\n    onc = a.count(1)\n    prod = 1\n    mod = 998244353\n    for i in range(n):\n        if onc != 0 and a[i] % 2 == 0:\n            onc -= 1\n            prod = int(int(prod % mod) * (1 ^ a[i]) % mod)\n        else:\n            prod = int(int(prod % mod) * a[i] % mod)\n    print(prod)", "from collections import *\nfrom math import *\nfrom sys import *\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    mod = 998244353\n    (eve, odd) = ([], [])\n    cnt1 = 0\n    for i in A:\n        if i == 1:\n            cnt1 += 1\n        elif i % 2:\n            odd.append(i)\n        else:\n            eve.append(i)\n    val = 1\n    eve.sort()\n    for i in range(len(eve)):\n        if cnt1 == 0:\n            break\n        eve[i] += 1\n        cnt1 -= 1\n    for i in eve:\n        val = val * i % mod\n    for i in odd:\n        val = val * i % mod\n    print(val % mod)", "from collections import *\nfrom math import *\nfrom sys import *\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    mod = 998244353\n    (eve, odd) = ([], [])\n    cnt1 = 0\n    for i in A:\n        if i == 1:\n            cnt1 += 1\n        elif i % 2:\n            odd.append(i)\n        else:\n            eve.append(i)\n    val = 1\n    eve.sort()\n    for i in range(len(eve)):\n        if cnt1 == 0:\n            break\n        eve[i] += 1\n        cnt1 -= 1\n    for i in eve:\n        val = int(int(val % mod) * i % mod)\n    for i in odd:\n        val = int(int(val % mod) * i % mod)\n    print(int(val % mod))", "m = 998244353\nt = int(input())\nwhile t != 0:\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    x = 0\n    s = 1\n    b = []\n    k = 1\n    for i in a:\n        if i == 1:\n            x += 1\n        elif i % 2 == 0:\n            b.append(i)\n        else:\n            k = k * i\n            k = k % m\n    b.sort()\n    for i in range(0, len(b)):\n        if x > 0:\n            k = k * (b[i] + 1)\n            k = k % m\n            x = x - 1\n        else:\n            k = k * b[i]\n            k = k % m\n    print(k)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    one = 0\n    ans = 1\n    for i in l:\n        if i == 1:\n            one += 1\n    l.sort()\n    for i in range(len(l)):\n        if l[i] % 2 == 0 and one:\n            l[i] += 1\n            one -= 1\n        ans = ans * l[i] % 998244353\n    print(ans)", "import sys\nfrom math import *\nfrom collections import defaultdict\ninput = sys.stdin.readline\nmod = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 1\n    c = 0\n    for i in range(n):\n        if a[i] == 1:\n            c += 1\n    a.sort()\n    for i in range(n):\n        if a[i] % 2 == 0 and c > 0:\n            a[i] ^= 1\n            ans *= a[i]\n            ans %= mod\n            c -= 1\n        else:\n            ans *= a[i]\n            ans %= mod\n    print(ans)", "MOD = 998244353\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A = sorted(A)\n    oneCount = A.count(1)\n    for i in range(N):\n        if A[i] % 2 == 0 and oneCount > 0:\n            A[i] += 1\n            oneCount -= 1\n    ans = 1\n    for a in A:\n        ans = ans * a % MOD\n    print(ans)", "mod = 998244353\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ct = l.count(1)\n    res = 1\n    i = 0\n    while i < n:\n        if ct > 0 and l[i] % 2 == 0:\n            res = res * (l[i] + 1) % mod\n            ct -= 1\n        else:\n            res = res * l[i] % mod\n        i += 1\n    print(res)", "m = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    count = arr.count(1)\n    res = 1\n    i = 0\n    while i < n:\n        if count > 0 and arr[i] % 2 == 0:\n            res = res * (arr[i] + 1) % m\n            count -= 1\n        else:\n            res = res * arr[i] % m\n        i += 1\n    print(res)", "mod = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    l.sort()\n    ones = l.count(1)\n    ans = 1\n    x = 0\n    len_even = 0\n    while x < n:\n        if l[x] % 2 == 0 and len_even < ones:\n            ans *= l[x] ^ 1 % mod\n            len_even += 1\n        else:\n            ans *= l[x] % mod\n        ans %= mod\n        x += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    p = 1\n    c = 0\n    b = []\n    m = 998244353\n    for i in arr:\n        if i == 1:\n            c += 1\n        elif i & 1:\n            p *= i\n            p = p % m\n        else:\n            b.append(i)\n    b.sort()\n    for i in b:\n        if c:\n            p *= i ^ 1\n            c -= 1\n        else:\n            p *= i\n        p = p % m\n    print(p)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 1\n    mod = 998244353\n    ones = 0\n    a.sort()\n    for i in range(n):\n        if a[i] == 1:\n            ones += 1\n        elif a[i] % 2 == 0 and ones > 0:\n            ones -= 1\n            a[i] += 1\n        ans = ans * a[i] % mod\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 1\n    mod = 998244353\n    ones = 0\n    a.sort()\n    for i in range(n):\n        if a[i] == 1:\n            ones += 1\n        elif a[i] % 2 == 0 and ones > 0:\n            ones -= 1\n            a[i] += 1\n        ans = ans * a[i] % mod\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 1\n    mod = 998244353\n    ones = 0\n    a.sort()\n    for i in range(n):\n        if a[i] == 1:\n            ones += 1\n        elif a[i] % 2 == 0 and ones > 0:\n            ones -= 1\n            a[i] += 1\n        ans = ans * a[i] % mod\n    print(ans)", "from collections import Counter, defaultdict\nimport sys\nimport math\n\ndef sol(n, arr):\n    ans = 1\n    mod = 998244353\n    ones = 0\n    arr.sort()\n    for i in range(n):\n        if arr[i] == 1:\n            ones += 1\n        elif arr[i] % 2 == 0 and ones > 0:\n            ones -= 1\n            arr[i] += 1\n        ans = ans * arr[i] % mod\n    return ans\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return str(input())\n\ndef invr():\n    return map(int, input().split())\nT = inp()\nfor i in range(T):\n    n = inp()\n    arr = inlt()\n    print(sol(n, arr))", "from collections import Counter, defaultdict\nimport sys\nimport math\n\ndef sol(n, arr):\n    ans = 1\n    mod = 998244353\n    ones = 0\n    arr.sort()\n    for i in range(n):\n        if arr[i] == 1:\n            ones += 1\n        elif arr[i] % 2 == 0 and ones > 0:\n            ones -= 1\n            arr[i] += 1\n        ans = ans * arr[i] % mod\n    return ans\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return str(input())\n\ndef invr():\n    return map(int, input().split())\nT = inp()\nfor i in range(T):\n    n = inp()\n    arr = inlt()\n    print(sol(n, arr))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    m = 998244353\n    c = a.count(1)\n    res = 1\n    for i in a:\n        if c > 0 and i % 2 == 0:\n            i += 1\n            c -= 1\n        res = res * i % m\n    print(res)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    m = 998244353\n    c = 0\n    for i in a:\n        if i == 1:\n            c += 1\n        else:\n            break\n    res = 1\n    for i in a:\n        if c > 0 and i % 2 == 0:\n            res = res * (i + 1) % m\n            c -= 1\n        else:\n            res = res * i % m\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ones = arr.count(1)\n    if ones == 0:\n        product = 1\n        for num in arr:\n            product = product * num % 998244353\n        print(product % 998244353)\n    else:\n        arr.sort()\n        product = 1\n        for num in arr:\n            if num & 1 == 0 and ones > 0:\n                product = product * (num + 1) % 998244353\n                ones -= 1\n            else:\n                product = product * num % 998244353\n        print(product % 998244353)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ones = arr.count(1)\n    if ones == 0:\n        product = 1\n        for num in arr:\n            product = product % 998244353 * num % 998244353\n        print(product % 998244353)\n    else:\n        arr.sort()\n        product = 1\n        for num in arr:\n            if num & 1 == 0 and ones > 0:\n                product = product % 998244353 * (num + 1) % 998244353\n                ones -= 1\n            else:\n                product = product % 998244353 * num % 998244353\n        print(product % 998244353)", "for ii in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (e, o) = ([], [])\n    for i in range(n):\n        if a[i] % 2 == 0:\n            e.append(a[i])\n        else:\n            o.append(a[i])\n    x = 0\n    for i in range(n):\n        if a[i] == 1:\n            x += 1\n    a.sort()\n    ans = 1\n    for i in range(n):\n        if x == 0:\n            break\n        if a[i] % 2 == 0:\n            a[i] += 1\n            x -= 1\n    for i in range(n):\n        ans = ans * a[i] % 998244353\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    t = input().split()\n    lis = []\n    one_count = 0\n    for i in t:\n        if i == '1':\n            one_count += 1\n        lis.append(int(i))\n    lis.sort()\n    res = 1\n    start = one_count\n    for i in range(start, n):\n        if one_count and lis[i] % 2 == 0:\n            res = res * (lis[i] ^ 1) % 998244353\n            one_count -= 1\n        else:\n            res = res * lis[i] % 998244353\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in l:\n        if i == 1:\n            c += 1\n    l.sort()\n    p = 1\n    m = 998244353\n    for i in l:\n        if i % 2 == 0 and c > 0:\n            p *= i + 1\n            c -= 1\n        else:\n            p *= i\n        p %= m\n    print(p % m)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in l:\n        if i == 1:\n            c += 1\n    l.sort()\n    p = 1\n    m = 998244353\n    for i in l:\n        if i % 2 == 0 and c > 0:\n            p *= i + 1\n            c -= 1\n        else:\n            p *= i\n        p %= m\n    print(p % m)", "def xorprod(lst):\n    even = sorted([x for x in lst if x % 2 == 0])\n    odd = sorted([x for x in lst if x % 2 == 1])\n    i = j = 0\n    while i < len(odd) and j < len(even):\n        if odd[i] != 1:\n            break\n        even[j] += 1\n        i += 1\n        j += 1\n    res = 1\n    for i in range(len(odd)):\n        res = res * odd[i] % 998244353\n    for el in even:\n        res = res * el % 998244353\n    return res\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(xorprod(lst))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in l:\n        if i == 1:\n            c += 1\n    l.sort()\n    p = 1\n    m = 998244353\n    for i in l:\n        if i % 2 == 0 and c > 0:\n            p *= i + 1\n            c -= 1\n        else:\n            p *= i\n        p %= m\n    print(p % m)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in l:\n        if i == 1:\n            c += 1\n    l.sort()\n    p = 1\n    m = 998244353\n    for i in l:\n        if i % 2 == 0 and c > 0:\n            p *= i + 1\n            c -= 1\n        else:\n            p *= i\n        p %= m\n    print(p % m)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in l:\n        if i == 1:\n            c += 1\n    l.sort()\n    p = 1\n    m = 998244353\n    for i in l:\n        if i % 2 == 0 and c > 0:\n            p *= i + 1\n            c -= 1\n        else:\n            p *= i\n        p %= m\n    print(p % m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c1 = a.count(1)\n    for i in range(n):\n        if a[i] % 2 == 0 and c1 > 0:\n            a[i] += 1\n            c1 -= 1\n    r = 1\n    for j in a:\n        r = r % 998244353 * (j % 998244353) % 998244353\n    print(r)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c1 = a.count(1)\n    for i in range(n):\n        if a[i] % 2 == 0 and c1 > 0:\n            a[i] += 1\n            c1 -= 1\n    r = 1\n    for j in a:\n        r = r % 998244353 * (j % 998244353) % 998244353\n    print(r)", "MODULO = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(lambda x: x % MODULO, map(int, input().split(' '))))\n    e = [x for x in a if x % 2 == 0]\n    o = 0\n    for i in range(n):\n        if a[i] == 1:\n            o += 1\n    e.sort()\n    res = 1\n    for x in e:\n        res *= (x + (1 if o > 0 else 0)) % MODULO\n        o -= 1\n    for x in a:\n        if x & 1:\n            res *= x\n            res %= MODULO\n    print(res)", "for T in range(int(input())):\n    lent = int(input())\n    l = [int(x) for x in input().split()]\n    _1 = l.count(1)\n    l_even = []\n    odd_prod = 1\n    for i in l:\n        if i % 2 == 0:\n            l_even.append(i % 998244353)\n        else:\n            odd_prod = odd_prod * i % 998244353\n    l_even.sort()\n    _even = len(l_even)\n    if _even == 0:\n        print(odd_prod % 998244353)\n    else:\n        if _1 >= _even:\n            for i in range(_even):\n                l_even[i] += 1\n        else:\n            for j in range(_1):\n                l_even[j] += 1\n        even_prod = 1\n        for i in range(_even):\n            even_prod = even_prod * l_even[i] % 998244353\n        print(odd_prod % 998244353 * (even_prod % 998244353) % 998244353)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ones = arr.count(1)\n    prod = 1\n    for i in arr:\n        if ones > 0 and i % 2 == 0:\n            prod = prod * (i + 1) % 998244353\n            ones -= 1\n        else:\n            prod = prod * i % 998244353\n    print(prod)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ones = arr.count(1)\n    prod = 1\n    for i in arr:\n        if ones > 0 and i % 2 == 0:\n            prod = prod * (i + 1) % 998244353\n            ones -= 1\n        else:\n            prod = prod * i % 998244353\n    print(prod)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ones = arr.count(1)\n    prod = 1\n    for i in arr:\n        if ones > 0 and i % 2 == 0:\n            prod = prod * (i + 1) % 998244353\n            ones -= 1\n        else:\n            prod = prod * i % 998244353\n    print(prod)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nmod = 998244353\nfor _ in range(IN()):\n    (n, l, res, c) = (IN(), I(), 1, 0)\n    c = l.count(1)\n    l.sort()\n    for i in range(n):\n        if l[i] == 1:\n            continue\n        if l[i] % 2 == 0:\n            if c > 0:\n                c -= 1\n                l[i] += 1\n        res = res % mod * (l[i] % mod) % mod\n    print(res % mod)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nmod = 998244353\nfor _ in range(IN()):\n    (n, l, res, c) = (IN(), I(), 1, 0)\n    c = l.count(1)\n    l.sort()\n    for i in range(n):\n        if l[i] == 1:\n            continue\n        if l[i] % 2 == 0:\n            if c > 0:\n                c -= 1\n                l[i] += 1\n        res = res % mod * (l[i] % mod) % mod\n    print(res % mod)", "t = int(input())\nfor p in range(t):\n    temp = 0\n    count = 0\n    l = []\n    m = []\n    n = int(input())\n    a = input()\n    a = a.split(' ')\n    for i in range(n):\n        a[i] = int(a[i])\n        if a[i] == 1:\n            count += 1\n        if a[i] % 2 == 0:\n            m.append(a[i])\n        else:\n            l.append(a[i])\n    m.sort()\n    k = len(m)\n    while count > 0 and k > 0:\n        m[temp] = m[temp] + 1\n        count = count - 1\n        temp = temp + 1\n        k = k - 1\n    l.extend(m)\n    prod = 1\n    for i in range(n):\n        prod = prod * l[i] % 998244353\n    print(prod)", "m = 998244353\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    q = a.count(1)\n    a.sort()\n    ans = 1\n    for r in a:\n        if r & 1 == 0 and q != 0:\n            ans = ans * ((r + 1) % m) % m\n            q -= 1\n        else:\n            ans = ans * (r % m) % m\n    print(ans)", "t = int(input())\nfor p in range(t):\n    temp = 0\n    count = 0\n    l = []\n    m = []\n    n = int(input())\n    a = input()\n    a = a.split(' ')\n    for i in range(n):\n        a[i] = int(a[i])\n        if a[i] == 1:\n            count += 1\n        if a[i] % 2 == 0:\n            m.append(a[i])\n        else:\n            l.append(a[i])\n    m.sort()\n    k = len(m)\n    while count > 0 and k > 0:\n        m[temp] = m[temp] + 1\n        count = count - 1\n        temp = temp + 1\n        k = k - 1\n    l.extend(m)\n    prod = 1\n    for i in range(n):\n        prod = prod * l[i] % 998244353\n    print(prod)", "mod = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    count = arr.count(1)\n    ans = 1\n    for i in range(n):\n        if arr[i] % 2 == 0 and count > 0:\n            arr[i] = arr[i] + 1\n            count -= 1\n        ans = ans * arr[i] % mod\n    print(ans)", "from bisect import bisect_left\nfrom bisect import bisect_right\nfrom getopt import getopt\nimport re\nfrom tempfile import tempdir\nfrom traceback import print_tb\nfrom typing import DefaultDict\nimport math\nfrom collections import Counter, defaultdict\nfrom math import sqrt\nimport collections\nfrom sys import maxsize\nfrom itertools import combinations_with_replacement\nimport copy\nimport heapq\nfrom collections import deque\nimport sys\n\ndef sieve_erasthones(n):\n    cnt = 0\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p ** 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\n    return prime\n\ndef calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\n\ndef count_factors(n):\n    i = 1\n    c = 0\n    ans = []\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n // i == i:\n                c += 1\n                ans.append(n // i)\n            else:\n                c += 2\n                ans.append(i)\n                ans.append(n // i)\n        i += 1\n    return ans\n\ndef ncr_modulo(n, r, p):\n    num = 2\n    den = 1\n    for i in range(r):\n        num = num * (n - i) % p\n        den = den * (i + 1) % p\n    return num * pow(den, p - 2, p) % p\n\ndef isprime(n):\n    prime_flag = 0\n    if n > 1:\n        for i in range(2, int(sqrt(n)) + 1):\n            if n % i == 0:\n                prime_flag = 1\n                break\n        if prime_flag == 0:\n            return True\n        else:\n            return False\n    else:\n        return True\n\ndef smallestDivisor(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\n\ndef modular_exponentiation(x, y, p):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 != 0:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\n\ndef number_of_primefactor(n):\n    l = []\n    while n % 2 == 0:\n        l.append(2)\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            l.append(i)\n            n = n / i\n    if n > 2:\n        l.append(n)\n    return l\n\ndef twosum(a, n, x):\n    rem = []\n    for i in range(x):\n        rem.append(0)\n    for i in range(n):\n        if a[i] < x:\n            rem[a[i] % x] += 1\n    for i in range(1, x // 2):\n        if rem[i] > 0 and rem[x - i] > 0:\n            return True\n    if i >= x // 2:\n        if x % 2 == 0:\n            if rem[x // 2] > 1:\n                return True\n            else:\n                return False\n        elif rem[x // 2] > 0 and rem[x - x // 2] > 0:\n            return True\n        else:\n            return False\n\ndef divSum(num):\n    result = 0\n    i = 2\n    while i <= math.sqrt(num):\n        if num % i == 0:\n            if i == num / i:\n                result = result + i\n            else:\n                result = result + (i + num / i)\n        i = i + 1\n    return result + 1 + num\n\ndef subsequence(str1, str2):\n    m = len(str1)\n    n = len(str2)\n    j = 0\n    i = 0\n    while j < m and i < n:\n        if str1[j] == str2[i]:\n            j = j + 1\n        i = i + 1\n    return j == m\n\ndef primeFactors(n):\n    d = defaultdict(lambda : 0)\n    while n % 2 == 0:\n        d[2] += 1\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            d[int(i)] += 1\n            n = n / i\n    if n > 2:\n        d[int(n)] += 1\n    return d\n\ndef lcm(a, b):\n    return a * b // math.gcd(a, b)\n\ndef modInverse(b, m):\n    return pow(b, m - 2, m)\n\ndef modDivide(a, b, m):\n    a = a % m\n    inv = modInverse(b, m)\n    return inv * a % m\n\ndef gcdList(l):\n    a = l[0]\n    for i in range(1, len(l)):\n        a = math.gcd(a, l[i])\n    return a\n\ndef solve(t):\n    n = int(input())\n    mod = 998244353\n    l = list(map(int, input().split()))\n    even = []\n    ans = 1\n    curr = 0\n    for ele in l:\n        if ele % 2 == 0:\n            even.append(ele)\n        elif ele == 1:\n            curr += 1\n        else:\n            ans *= ele\n            ans %= mod\n    even.sort()\n    bool = True\n    for ele in even:\n        if curr == 0:\n            ans *= ele\n            ans %= mod\n        elif bool:\n            ans *= ele + 1\n            ans %= mod\n            curr -= 1\n    return ans\nfor t in range(1, int(input()) + 1):\n    print(solve(t))", "mod = 998244353\n\ndef max_xor_product(n, a):\n    (evens, odds) = (sorted([x for x in a if x % 2 == 0]), sorted([x for x in a if x % 2 == 1]))\n    p = q = 0\n    while p < len(odds) and q < len(evens):\n        if odds[p] != 1:\n            break\n        evens[q] += 1\n        p += 1\n        q += 1\n    ans = 1\n    for i in range(p, len(odds)):\n        ans = ans * odds[i] % mod\n    for x in evens:\n        ans = ans * x % mod\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    max_xor_product(n, a)", "t = int(input())\nfor p in range(t):\n    temp = 0\n    count = 0\n    l = []\n    m = []\n    n = int(input())\n    a = input()\n    a = a.split(' ')\n    for i in range(n):\n        a[i] = int(a[i])\n        if a[i] == 1:\n            count += 1\n        if a[i] % 2 == 0:\n            m.append(a[i])\n        else:\n            l.append(a[i])\n    m.sort()\n    k = len(m)\n    while count > 0 and k > 0:\n        m[temp] = m[temp] + 1\n        count = count - 1\n        temp = temp + 1\n        k = k - 1\n    l.extend(m)\n    prod = 1\n    for i in range(n):\n        prod = prod * l[i] % 998244353\n    print(prod)", "def solution():\n    n = int(input())\n    a = [int(num) for num in input().split()]\n    mod = 998244353\n    ones = []\n    evens = []\n    others = []\n    ans = 1\n    for num in a:\n        if num == 1:\n            ones.append(1)\n        elif num % 2 == 0:\n            evens.append(num)\n        else:\n            others.append(num)\n    n = min(len(ones), len(evens))\n    evens.sort()\n    for i in range(n):\n        ans = ans * (evens[i] + 1) % mod\n    for i in range(n, len(evens)):\n        ans = ans * evens[i] % mod\n    for num in others:\n        ans = ans * num % mod\n    print(ans)\n\ndef main():\n    t = int(input())\n    while t:\n        solution()\n        t -= 1\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    c = l.count(1)\n    l.sort()\n    ans = 1\n    for i in range(n):\n        if l[i] % 2 == 0 and c > 0:\n            ans *= l[i] + 1\n            ans %= 998244353\n            c -= 1\n        else:\n            ans *= l[i]\n            ans %= 998244353\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    one = 0\n    for i in range(n):\n        if a[i] == 1:\n            one += 1\n        else:\n            break\n    j = 0\n    ans = 1\n    for elem in a:\n        if one > 0 and elem % 2 == 0:\n            ans *= elem + 1\n            ans %= 998244353\n            one -= 1\n        else:\n            ans *= elem\n            ans %= 998244353\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 1\n    mod = 998244353\n    ev = []\n    ctr = 0\n    for i in range(n):\n        if arr[i] == 1:\n            ctr += 1\n        elif arr[i] % 2 == 0:\n            ev.append(arr[i])\n        else:\n            ans *= arr[i]\n            ans %= mod\n    ev.sort()\n    for i in range(len(ev)):\n        if ctr != 0:\n            ans *= ev[i] + 1\n            ctr -= 1\n            ans %= mod\n        else:\n            ans *= ev[i]\n            ans %= mod\n    print(ans % mod)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 1\n    mod = 998244353\n    ev = []\n    ctr = 0\n    for i in range(n):\n        if arr[i] == 1:\n            ctr += 1\n        elif arr[i] % 2 == 0:\n            ev.append(arr[i])\n        else:\n            ans *= arr[i]\n            ans %= mod\n    ev.sort()\n    for i in range(len(ev)):\n        if ctr != 0:\n            ans *= ev[i] + 1\n            ctr -= 1\n            ans %= mod\n        else:\n            ans *= ev[i]\n    print(ans % mod)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    e = []\n    o = []\n    c = 0\n    for i in arr:\n        if i == 1:\n            c += 1\n        elif i % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    p = 1\n    for i in o:\n        p = p * i % 998244353\n    e.sort()\n    for i in e:\n        elem = i\n        if c > 0:\n            elem += 1\n            c -= 1\n        p = p * elem % 998244353\n    print(p)", "t = int(input())\nwhile t != 0:\n    m = 998244353\n    n = int(input())\n    a = list(map(int, input().split()))\n    count1 = a.count(1)\n    a.sort()\n    u = 1\n    for i in range(n):\n        if a[i] % 2 == 0 and count1 > 0:\n            a[i] += 1\n            u = u * a[i] % m\n            count1 -= 1\n        else:\n            u = u * a[i] % m\n    print(u % m)\n    t -= 1", "n = int(input())\nfor i in range(n):\n    le = int(input())\n    arr = [int(x) for x in input().split()]\n    one = []\n    even = []\n    prod = 1\n    for k in range(le):\n        if arr[k] == 1:\n            one.append(1)\n        elif arr[k] % 2 == 1:\n            prod = prod * arr[k] % 998244353\n        else:\n            even.append(arr[k])\n    l = len(one)\n    e = len(even)\n    if l == 0:\n        for k in range(e):\n            prod = prod * even[k] % 998244353\n        print(prod)\n    elif l >= e:\n        for k in range(e):\n            prod = prod * (even[k] + 1) % 998244353\n        print(prod)\n    else:\n        even.sort()\n        for k in range(l):\n            prod = prod * (even[k] + 1) % 998244353\n        for k in range(l, e):\n            prod = prod * even[k] % 998244353\n        print(prod)", "import bisect\nimport math\nimport sys\nfrom collections import Counter, deque\nimport re\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    ans = 1\n    a.sort()\n    one = a.count(1)\n    for i in range(0, n):\n        if one > 0 and a[i] % 2 == 0:\n            a[i] += 1\n            one -= 1\n        if one == 0:\n            break\n    for j in a:\n        ans = ans * j % 998244353\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    c = lst.count(1)\n    for i in range(len(lst)):\n        if c > 0 and lst[i] % 2 == 0 and (lst[i] != 1):\n            lst[i] += 1\n            c -= 1\n    ans = 1\n    for i in lst:\n        ans = ans * i % 998244353\n    print(ans)", "t = int(input())\nwhile t != 0:\n    m = 998244353\n    n = int(input())\n    a = list(map(int, input().split()))\n    count1 = a.count(1)\n    a.sort()\n    u = 1\n    for i in range(n):\n        if a[i] % 2 == 0 and count1 > 0:\n            a[i] += 1\n            u = u * a[i] % m\n            count1 -= 1\n        else:\n            u = u * a[i] % m\n    print(u % m)\n    t -= 1", "for t in range(int(input())):\n    l = int(input())\n    l1 = [int(i) for i in input().split()]\n    l1.sort()\n    c = 0\n    mod = 998244353\n    c = l1.count(1)\n    ans = 1\n    for i in range(c, l):\n        if l1[i] % 2 == 0 and c > 0:\n            l1[i] += 1\n            c -= 1\n        if c <= 0:\n            break\n    if l == 0:\n        ans = 0\n    else:\n        for k in range(l):\n            ans = ans * l1[k] % 998244353\n    print(ans % 998244353)", "t = int(input())\nMOD = 998244353\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    odd = []\n    even = []\n    for x in arr:\n        if x % 2 == 1:\n            odd.append(x)\n        else:\n            even.append(x)\n    even.sort()\n    c = arr.count(1)\n    ans = 1\n    for x in even:\n        if c == 0:\n            ans = ans * x % MOD\n        else:\n            ans = ans * (x + 1) % MOD\n            c -= 1\n    for x in odd:\n        ans = ans * x % MOD\n    print(ans % 998244353)", "def xorprod(a):\n    c1 = a.count(1)\n    even = []\n    odd = []\n    for e in a:\n        if e & 1 == 0:\n            even.append(e)\n        else:\n            odd.append(e)\n    even.sort()\n    for i in range(min(c1, len(even))):\n        even[i] = (even[i] ^ 1) % 998244353\n    p = 1\n    for e in even:\n        p = p * e % 998244353\n    for o in odd:\n        p = p * o % 998244353\n    return p\nimport math as mm\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(xorprod(a))", "import numpy as np\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = sorted([int(i) for i in input().split()])\n    sum_1 = A.count(1)\n    for i in range(len(A)):\n        if sum_1 != 0 and A[i] % 2 == 0 and (A[i] != 1):\n            A[i] += 1\n            sum_1 -= 1\n    s = 1\n    for i in A:\n        s = s * i % 998244353\n    print(s)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = []\n    for i in a:\n        if i == 1:\n            b.append(1)\n        else:\n            break\n    for i in b:\n        del a[0]\n    if len(a) == 0:\n        print(1)\n        continue\n    a.sort(reverse=True, key=lambda x: (1 ^ x) / x)\n    for i in range(min(len(b), len(a))):\n        if 1 ^ a[i] < a[i]:\n            break\n        a[i] = 1 ^ a[i]\n    v = 1\n    for i in a:\n        v = v * i % 998244353\n    print(v)", "mod = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (evens, odds) = (sorted([x for x in a if x % 2 == 0]), sorted([x for x in a if x % 2 == 1]))\n    p = q = 0\n    while p < len(odds) and q < len(evens):\n        if odds[p] != 1:\n            break\n        evens[q] += 1\n        p += 1\n        q += 1\n    ans = 1\n    for i in range(p, len(odds)):\n        ans = ans * odds[i] % mod\n    for x in evens:\n        ans = ans * x % mod\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list([int(x) for x in input().split()])\n    oc = 0\n    ll = []\n    for i in l:\n        if i > 0:\n            if i == 1:\n                oc = oc + 1\n            else:\n                ll.append(i)\n    ll = sorted(ll)\n    for i in range(0, len(ll)):\n        if oc == 0:\n            break\n        if ll[i] % 2 == 0:\n            ll[i] = ll[i] + 1\n            oc = oc - 1\n    ans = 1\n    for i in ll:\n        ans = ans * i % 998244353\n    print(ans)", "m = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = 1\n    ones = 0\n    one_inv = []\n    for e in a:\n        if e > 1:\n            if e & 1 == 0:\n                one_inv.append(e)\n            else:\n                p *= e\n                p %= m\n        elif e == 1:\n            ones += 1\n    one_inv.sort()\n    for e in one_inv[:ones]:\n        p *= e + 1\n        p %= m\n    for e in one_inv[ones:]:\n        p *= e\n        p %= m\n    print(p)", "for _ in range(int(input())):\n    N = int(input())\n    A = [int(a) for a in input().split()]\n    even = []\n    odd = []\n    for i in range(N):\n        if A[i] % 2 == 0:\n            even.append(A[i])\n        else:\n            odd.append(A[i])\n    count = odd.count(1)\n    even = sorted(even)\n    j = 0\n    curr = 0\n    while curr < len(even) and j < count:\n        even[curr] += 1\n        j += 1\n        curr += 1\n    mod = 998244353\n    value = 1\n    for i in range(len(odd)):\n        value = value * odd[i]\n        value = value % mod\n    for i in range(len(even)):\n        value = value * even[i]\n        value = value % mod\n    print(value)", "from collections import defaultdict\nimport math as mt\nmod = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    odd = []\n    even = []\n    one = 0\n    for i in a:\n        if i & 1:\n            if i == 1:\n                one += 1\n            else:\n                odd.append(i)\n        else:\n            even.append(i)\n    even.sort(reverse=True)\n    k = len(even) - 1\n    while one > 0 and k >= 0:\n        even[k] ^= 1\n        k -= 1\n        one -= 1\n    ans = 1\n    for i in odd:\n        ans = ans % mod * (i % mod) % mod\n    for i in even:\n        ans = ans % mod * (i % mod) % mod\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    a = []\n    m = 1\n    for i in l:\n        if i == 1:\n            c += 1\n    l.sort()\n    i = 0\n    for i in range(n):\n        if l[i] % 2 == 0 and c > 0:\n            c -= 1\n            l[i] += 1\n    for i in l:\n        m = m * i % 998244353\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = l.count(1)\n    l.sort()\n    for i in range(n):\n        if l[i] != 1 and l[i] % 2 == 0 and (count > 0):\n            l[i] += 1\n            count -= 1\n    s = 1\n    for i in range(n):\n        s = s * l[i] % 998244353\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    v = list(map(int, input().split()))\n    v.sort()\n    c = v.count(1)\n    for i in range(n):\n        if v[i] != 1 and v[i] % 2 == 0 and (c > 0):\n            v[i] += 1\n            c -= 1\n    s = 1\n    for i in range(n):\n        s = s * v[i] % 998244353\n    print(s)", "t = int(input())\nfor i in range(t):\n    l = int(input())\n    lis = list(map(int, input().split()))\n    c = lis.count(1)\n    res = sorted(lis)\n    ans = 1\n    for i in range(len(res)):\n        if c > 0 and res[i] % 2 == 0:\n            ans = ans % 998244353 * ((res[i] + 1) % 998244353) % 998244353\n            c -= 1\n        else:\n            ans = ans % 998244353 * (res[i] % 998244353) % 998244353\n    print(ans % 998244353)"]