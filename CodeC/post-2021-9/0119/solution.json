["for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = b = 0\n    for i in s:\n        if i == '1':\n            a += 1\n        else:\n            b += 1\n    if a == b:\n        print(a + b)\n    elif a + 1 == b or b + 1 == a:\n        print(n)\n    elif a == 0 or b == 0:\n        print(1)\n    else:\n        print(2 * min(a, b) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    one = s.count('1')\n    zero = n - one\n    c = 0\n    if one < zero:\n        c = 2 * one + 1\n    elif zero < one:\n        c = 2 * zero + 1\n    else:\n        c = 2 * one\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for i in range(int(input())):\n    a = int(input())\n    b = str(input())\n    l = []\n    l.append(b.count('0'))\n    l.append(b.count('1'))\n    s = min(l) * 2 + 1\n    print(min(a, s))", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    o = s.count('1')\n    z = n - o\n    p = 2 * min(o, z)\n    e = min(abs(z - o), 1)\n    print(p + e)", "for _ in range(int(input())):\n    n = int(input())\n    str = input()\n    zeros = str.count('0')\n    ones = str.count('1')\n    if zeros == ones:\n        print(2 * ones)\n    elif zeros > ones:\n        print(2 * ones + 1)\n    else:\n        print(2 * zeros + 1)", "def fun(s, n):\n    count0 = 0\n    count1 = 0\n    for i in s:\n        if int(i) == 1:\n            count1 = count1 + 1\n        else:\n            count0 = count0 + 1\n    m = min(count0, count1)\n    if count0 == n or count1 == n:\n        return 1\n    elif count0 == m and count1 == m:\n        return count1 + count0\n    else:\n        return m + (m + 1)\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    print(fun(s, n))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "n = int(input())\nfor i in range(n):\n    s1 = int(input())\n    s2 = input()\n    if s2.count('0') == 0 or s2.count('1') == 0:\n        print('1')\n    elif s2.count('0') == s2.count('1'):\n        print(2 * s2.count('0'))\n    else:\n        print(2 * min(s2.count('0'), s2.count('1')) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    b = input()\n    if b.count('1') == b.count('0'):\n        print(2 * b.count('1'))\n    elif b.count('0') == 0 or b.count('1') == 0:\n        print(1)\n    else:\n        print(2 * min(b.count('0'), b.count('1')) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    b = abs(a.count('1') - a.count('0'))\n    if b <= 1:\n        print(n)\n    else:\n        print(n - b + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    s = input()\n    x1 = s.count('1')\n    x0 = n - x1\n    p = 2 * min(x1, x0)\n    a = min(abs(x0 - x1), 1)\n    print(p + a)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    zero = 0\n    one = 0\n    for num in s:\n        if num == '0':\n            zero = zero + 1\n        else:\n            one = one + 1\n    if zero == one:\n        print(n)\n    elif zero == 0 or one == 0:\n        print(1)\n    else:\n        print(min(zero, one) * 2 + 1)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    a = input()\n    o = 0\n    j = 0\n    p = 0\n    q = 0\n    for i in a:\n        if i == '0':\n            p = 1\n            o += 1\n        else:\n            q = 1\n            j += 1\n    if p == 0 or q == 0:\n        print(1)\n    elif j == o:\n        print(j * 2)\n    elif j > o:\n        print(o * 2 + 1)\n    else:\n        print(j * 2 + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    o = s.count('1')\n    z = n - o\n    p = 2 * min(z, o)\n    e = min(abs(z - o), 1)\n    print(p + e)", "for i in range(int(input())):\n    N = int(input())\n    S = input()\n    a = S.count('0')\n    b = S.count('1')\n    if a == b:\n        print(N)\n    else:\n        mins = min(a, b)\n        print(2 * mins + 1 if mins != 0 else 1)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    st = input()\n    k = Counter(st)\n    d = min(k['0'], k['1'])\n    if k['1'] == k['0']:\n        d = d * 2\n    else:\n        d = 1 + d * 2\n    print(d)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    x = s.count('1')\n    y = s.count('0')\n    if x == y:\n        print(n)\n    elif x == 0 or y == 0:\n        print(1)\n    else:\n        r = min(x, y)\n        print(2 * r + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    z = s.count('0')\n    y = s.count('1')\n    pair = 2 * min(z, y)\n    leftover = min(abs(z - y), 1)\n    print(pair + leftover)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    (a, b) = (0, 0)\n    for i in s:\n        if i == '0':\n            a += 1\n        else:\n            b += 1\n    if a > b:\n        print(2 * b + 1)\n    elif b > a:\n        print(2 * a + 1)\n    else:\n        print(2 * b)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    c_1 = s.count('1')\n    c_2 = n - c_1\n    pairs = 2 * min(c_1, c_2)\n    extras = min(abs(c_1 - c_2), 1)\n    print(pairs + extras)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = s.count('0')\n    b = s.count('1')\n    pairs = 2 * min(a, b)\n    extra = min(abs(a - b), 1)\n    c = pairs + extra\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    o = a.count('1')\n    z = a.count('0')\n    if o == 0 or z == 0:\n        print(1)\n    elif abs(o - z) == 0 or abs(o - z) == 1:\n        print(o + z)\n    else:\n        print(min(o, z) + min(o, z) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for i in range(int(input())):\n    h = int(input())\n    x = input()\n    y = x.count('0')\n    z = x.count('1')\n    if y == z:\n        print(h)\n    else:\n        print(2 * min(y, z) + 1)\n    y = 0", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    lst = list(map(int, input()))\n    m = lst.count(0)\n    n = lst.count(1)\n    if m == n:\n        print(x)\n    else:\n        print(2 * min(m, n) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    s0 = s.count('0')\n    s1 = s.count('1')\n    if s0 == s1:\n        print(s0 + s1)\n    else:\n        print(min(s0, s1) * 2 + 1)", "from itertools import permutations\nfor _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if s.count('1') == s.count('0'):\n        print(n)\n    else:\n        print(2 * min(s.count('1'), s.count('0')) + 1)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    s = input()\n    if s == s[0] * len(s):\n        print(1)\n    elif s.count('0') == s.count('1'):\n        print(n)\n    else:\n        print(2 * min(s.count('0'), s.count('1')) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if s.count('1') == s.count('0'):\n        print(n)\n    else:\n        print(2 * min(s.count('1'), s.count('0')) + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if s.count('1') == s.count('0'):\n        print(n)\n    else:\n        print(2 * min(s.count('1'), s.count('0')) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    c = 0\n    d = 0\n    if n == 1:\n        print('1')\n    elif all((v == 0 for v in s)) or all((v == 1 for v in s)):\n        print('1')\n    else:\n        for i in range(n):\n            if s[i] == '0':\n                c += 1\n            else:\n                d += 1\n        if c == d:\n            print(c + d)\n        elif c < d:\n            print(c + c + 1)\n        elif d < c:\n            print(d + d + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeroes = n - ones\n    pairs = 2 * min(ones, zeroes)\n    extra = min(abs(zeroes - ones), 1)\n    print(pairs + extra)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    freq = {}\n    for j in s:\n        if j in freq:\n            freq[j] += 1\n        else:\n            freq[j] = 1\n    one = 0\n    zero = 0\n    for key in freq:\n        if key == '1':\n            one += int(freq[key])\n        else:\n            zero += int(freq[key])\n    if one == 0 or zero == 0:\n        print(1)\n    elif one == zero:\n        print(2 * one)\n    elif one > zero:\n        print(2 * zero + 1)\n    else:\n        print(2 * one + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    freq = {}\n    for j in s:\n        if j in freq:\n            freq[j] += 1\n        else:\n            freq[j] = 1\n    one = 0\n    zero = 0\n    for key in freq:\n        if key == '1':\n            one += int(str(freq[key]))\n        else:\n            zero += int(str(freq[key]))\n    if one == 0 or zero == 0:\n        print(1)\n    elif one == zero:\n        print(2 * one)\n    elif one > zero:\n        print(2 * zero + 1)\n    else:\n        print(2 * one + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(ones - zeros), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    count1 = 0\n    count0 = 0\n    for i in s:\n        if i == '1':\n            count1 = count1 + 1\n        elif i == '0':\n            count0 = count0 + 1\n    ans = min(count1, count0)\n    if count1 > count0 or count0 > count1:\n        print(ans + (ans + 1))\n    elif count1 == count0:\n        print(2 * ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    x = a.count('1')\n    y = n - x\n    p = 2 * min(x, y)\n    q = min(abs(x - y), 1)\n    print(p + q)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = [0, 0]\n    for i in s:\n        ans[int(i)] += 1\n    x = min(ans)\n    if x * 2 < n:\n        print(x * 2 + 1)\n    else:\n        print(x * 2)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    z = s.count('0')\n    o = s.count('1')\n    min1 = 2 * min(z, o)\n    r = min(abs(z - o), 1)\n    print(min1 + r)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    dic = {'0': 0, '1': 0}\n    lis = [0] * n\n    total = 0\n    for i in s:\n        if i == '1':\n            dic['1'] += 1\n        if i == '0':\n            dic['0'] += 1\n    if dic['0'] == n or dic['1'] == n:\n        print(1)\n    elif dic['0'] == dic['1']:\n        print(n)\n    else:\n        if dic['0'] < dic['1']:\n            total = dic['0'] + dic['0'] + 1\n            print(total)\n        if dic['1'] < dic['0']:\n            total = dic['1'] + dic['1'] + 1\n            print(total)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = s.count('0')\n    if 2 * min(ones, zeros) + 1 >= n:\n        print(n)\n    else:\n        print(2 * min(ones, zeros) + 1)", "for i in range(int(input())):\n    N = int(input())\n    S = input()\n    c = S.count('1')\n    if N % 2 == 0:\n        if abs(N - 2 * c) > 0:\n            print(2 * min(c, N - c) + 1)\n        else:\n            print(2 * c)\n    else:\n        print(2 * min(c, N - c) + 1)", "for i in range(int(input())):\n    x = int(input())\n    y = input()\n    c0 = y.count('0')\n    c1 = y.count('1')\n    if c0 == c1:\n        print(c0 * 2)\n    else:\n        print(min(c0, c1) * 2 + 1)", "for i in range(int(input())):\n    x = int(input())\n    y = input()\n    c0 = y.count('0')\n    c1 = y.count('1')\n    if c0 == c1:\n        print(c0 * 2)\n    else:\n        print(min(c0, c1) * 2 + 1)", "T = int(input())\nfor i in range(T):\n    x = int(input())\n    y = input()\n    c0 = y.count('0')\n    c1 = y.count('1')\n    if c0 == c1:\n        print(c0 * 2)\n    else:\n        print(min(c0, c1) * 2 + 1)", "T = int(input())\nfor i in range(T):\n    x = int(input())\n    y = input()\n    c0 = y.count('0')\n    c1 = y.count('1')\n    if c0 == c1:\n        print(c0 * 2)\n    else:\n        print(min(c0, c1) * 2 + 1)", "T = int(input())\nfor i in range(T):\n    x = int(input())\n    y = input()\n    c0 = y.count('0')\n    c1 = y.count('1')\n    if c0 == c1:\n        print(c0 * 2)\n    else:\n        print(min(c0, c1) * 2 + 1)", "T = int(input())\nfor i in range(T):\n    x = int(input())\n    y = input()\n    c0 = y.count('0')\n    c1 = y.count('1')\n    if c0 == c1:\n        print(c0 * 2)\n    elif c0 == 0 or c1 == 0:\n        print('1')\n    elif c0 > c1 or c1 > c0:\n        print(min(c0, c1) * 2 + 1)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    zc = 0\n    oc = 0\n    for j in range(n):\n        if s[j] == '0':\n            zc += 1\n        else:\n            oc += 1\n    if zc == 0 or zc == n or oc == 0 or (oc == n):\n        print('1')\n    elif zc == oc:\n        print(2 * zc)\n    elif oc < zc:\n        print(2 * oc + 1)\n    else:\n        print(2 * zc + 1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = [int(x) for x in s]\n    st = set(l)\n    if len(st) == 1:\n        print(1)\n        continue\n    C = Counter(l)\n    m1 = min(C.values())\n    m2 = max(C.values())\n    if m2 > m1 + 1:\n        m2 = m1 + 1\n    print(m1 + m2)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    a = s.count('1')\n    b = s.count('0')\n    c = min(a, b)\n    if a == b:\n        print(len(s))\n    else:\n        d = c + (c + 1)\n        print(d)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    a = s.count('1')\n    b = s.count('0')\n    c = min(a, b)\n    if a == b:\n        print(len(s))\n    else:\n        d = c + (c + 1)\n        print(d)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    a = s.count('1')\n    b = s.count('0')\n    c = min(a, b)\n    if a == b:\n        print(len(s))\n    else:\n        d = c + (c + 1)\n        print(d)", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    (ones, zeros) = (s.count('1'), s.count('0'))\n    if any((i == 0 for i in [ones, zeros])):\n        print(1)\n    elif ones == zeros:\n        print(n)\n    else:\n        print(min([ones, zeros]) * 2 + 1)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    s = input()\n    b = s.count('0')\n    a = s.count('1')\n    if abs(a - b) <= 1:\n        print(n)\n    elif a < b:\n        print(2 * a + 1)\n    elif b < a:\n        print(2 * b + 1)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    o = s.count('1')\n    z = s.count('0')\n    if abs(o - z) <= 1:\n        print(n)\n    elif o < z:\n        print(o + o + 1)\n    else:\n        print(z + z + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = s.count('1')\n    b = s.count('0')\n    if abs(a - b) <= 1:\n        print(len(s))\n    elif a < b:\n        print(a + a + 1)\n    else:\n        print(b + b + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    pairs = 2 * min(ones, zeros)\n    extra = min(abs(zeros - ones), 1)\n    print(pairs + extra)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    count0 = 0\n    count1 = 0\n    for i in s:\n        if i == '0':\n            count0 += 1\n        elif i == '1':\n            count1 += 1\n    if count1 == 0 or count0 == 0:\n        print(1)\n    elif count1 == count0:\n        print(count1 * 2)\n    elif count1 > count0:\n        print(count0 * 2 + 1)\n    elif count0 > count1:\n        print(count1 * 2 + 1)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    S = input()\n    P = S.count('1')\n    P1 = S.count('0')\n    S1 = set(S)\n    M = min(P, P1)\n    if len(S1) == 1:\n        print(1)\n    elif len(S) % 2 == 0:\n        if P == P1:\n            print(P + P1)\n        else:\n            print(M * 2 + 1)\n    else:\n        print(2 * M + 1)", "for _ in range(int(input())):\n    x = int(input())\n    y = str(input())\n    l = []\n    l.append(y.count('0'))\n    l.append(y.count('1'))\n    b = min(l) * 2 + 1\n    print(min(x, b))", "for _ in range(int(input())):\n    x = int(input())\n    s = input()\n    s1 = s.count('1')\n    z = len(s) - s1\n    if z == s1:\n        print(s1 * 2)\n    else:\n        print(min(s1, z) * 2 + 1)", "test = int(input())\nfor i in range(test):\n    x = int(input())\n    s = input()\n    y = s.count('1')\n    z = len(s) - y\n    if y == z:\n        print(y * 2)\n    else:\n        print(min(y, z) * 2 + 1)", "for i in range(int(input())):\n    n = int(input())\n    x = input()\n    y = x.count('1')\n    z = len(x) - y\n    if y == z:\n        print(y * 2)\n    else:\n        print(min(y, z) * 2 + 1)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    x = input()\n    y = x.count('1')\n    z = len(x) - y\n    if y == z:\n        print(y * 2)\n    else:\n        print(min(y, z) * 2 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    n1 = 0\n    n2 = 0\n    for j in s:\n        if int(j) == 0:\n            n1 += 1\n        else:\n            n2 += 1\n    if n1 > n2:\n        print(n2 * 2 + 1)\n    elif n1 < n2:\n        print(n1 * 2 + 1)\n    else:\n        print(n1 * 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    n0 = 0\n    n1 = 0\n    for i in s:\n        if int(i) == 0:\n            n0 = n0 + 1\n        else:\n            n1 = n1 + 1\n    if n0 > n1:\n        print(n1 * 2 + 1)\n    elif n0 < n1:\n        print(n0 * 2 + 1)\n    else:\n        print(n0 * 2)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(input())\n    z = b.count('0')\n    o = b.count('1')\n    if z == o:\n        print(z * 2)\n    elif z < o:\n        print(2 * z + 1)\n    else:\n        print(2 * o + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    z = a.count('0')\n    o = a.count('1')\n    if z == o:\n        print(z * 2)\n    elif z < o:\n        print(z * 2 + 1)\n    else:\n        print(o * 2 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(input())\n    z = s.count('0')\n    o = s.count('1')\n    if z == o:\n        print(z * 2)\n    elif z < o:\n        print(2 * z + 1)\n    else:\n        print(2 * o + 1)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    _0 = s.count('0')\n    _1 = s.count('1')\n    if _0 > _1:\n        b = _0\n        a = _1\n    else:\n        a = _0\n        b = _1\n    if a == 0 or b == 0:\n        print(1)\n    elif a == b or a == b - 1:\n        print(n)\n    else:\n        print(2 * a + 1)", "for _ in range(int(input())):\n    lenstr = int(input())\n    inpstr = list(map(str, input().split()))\n    inpstr = inpstr[0]\n    onecount = inpstr.count('1')\n    zerocount = inpstr.count('0')\n    if onecount == zerocount:\n        print(lenstr)\n    else:\n        minvalue = min(onecount, zerocount)\n        print(minvalue + minvalue + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ones = s.count('1')\n    zero = s.count('0')\n    if ones == zero and n % 2 == 0:\n        print(zero * 2)\n    else:\n        print(min(ones, zero) * 2 + 1)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if s.count('0') == s.count('1'):\n        print(len(s))\n    elif s.count('0') < s.count('1'):\n        print(s.count('0') * 2 + 1)\n    else:\n        print(s.count('1') * 2 + 1)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if s.count('1') < s.count('0'):\n        print(2 * s.count('1') + 1)\n    elif s.count('1') > s.count('0'):\n        print(2 * s.count('0') + 1)\n    else:\n        print(len(s))"]