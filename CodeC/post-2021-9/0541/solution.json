["for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    total_balls = 0\n    for i in range(len(lst)):\n        if i != 0:\n            total_balls += lst[i] - lst[i - 1] - 1\n        else:\n            total_balls += lst[i] - 1\n        total_balls = total_balls >> 1\n        if i == len(lst) - 1:\n            total_balls += n - lst[-1]\n    minus = 0\n    for i in range(30):\n        if total_balls >> i & 1 == 1:\n            minus += 1\n    print(n - k - minus)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    total_balls = 0\n    for i in range(len(lst)):\n        if i != 0:\n            total_balls += lst[i] - lst[i - 1] - 1\n        else:\n            total_balls += lst[i] - 1\n        total_balls = total_balls >> 1\n        if i == len(lst) - 1:\n            total_balls += n - lst[-1]\n    minus = 0\n    for i in range(30):\n        if total_balls >> i & 1 == 1:\n            minus += 1\n    print(n - k - minus)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    total_balls = 0\n    for i in range(len(lst)):\n        if i != 0:\n            total_balls += lst[i] - lst[i - 1] - 1\n        else:\n            total_balls += lst[i] - 1\n        total_balls = total_balls >> 1\n        if i == len(lst) - 1:\n            total_balls += n - lst[-1]\n    minus = 0\n    for i in range(30):\n        if total_balls >> i & 1 == 1:\n            minus += 1\n    print(n - k - minus)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    total_balls = 0\n    for i in range(len(lst)):\n        if i != 0:\n            total_balls += lst[i] - lst[i - 1] - 1\n        else:\n            total_balls += lst[i] - 1\n        total_balls = total_balls >> 1\n        if i == len(lst) - 1:\n            total_balls += n - lst[-1]\n    minus = 0\n    for i in range(30):\n        if total_balls >> i & 1 == 1:\n            minus += 1\n    print(n - k - minus)", "for i in range(int(input())):\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    b.sort()\n    ans = 0\n    n = '{0:b}'.format(b[0] - 1)\n    k = b[0] - 1\n    o = 0\n    for i in range(len(n)):\n        if n[i] == '1':\n            o += 1\n    k -= o\n    if n[-1] == '1':\n        k += 1\n    n = n[0:len(n) - 1]\n    for i in range(1, a[1]):\n        if b[i] - b[i - 1] - 1 > 0:\n            o = 0\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k += o\n            o = 0\n            if n == '':\n                n = 0\n            else:\n                n = int(n, 2)\n            n += b[i] - b[i - 1] - 1\n            n = '{0:b}'.format(n)\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k -= o\n            k += b[i] - b[i - 1] - 1\n        if n[-1] == '1':\n            k += 1\n        n = n[0:len(n) - 1]\n    if a[0] - b[-1] > 0:\n        o = 0\n        for j in range(len(n)):\n            if n[j] == '1':\n                o += 1\n        k += o\n        o = 0\n        if n == '':\n            n = 0\n        else:\n            n = int(n, 2)\n        n += a[0] - b[-1]\n        n = '{0:b}'.format(n)\n        for i in range(len(n)):\n            if n[i] == '1':\n                o += 1\n        k -= o\n        k += a[0] - b[-1]\n    print(k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    num = prv = 0\n    for x in a:\n        num += x - prv - 1\n        num //= 2\n        prv = x\n    num += n - prv\n    print(n - k - bin(num)[2:].count('1'))", "for i in range(int(input())):\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    b.sort()\n    ans = 0\n    n = '{0:b}'.format(b[0] - 1)\n    k = b[0] - 1\n    o = 0\n    for i in range(len(n)):\n        if n[i] == '1':\n            o += 1\n    k -= o\n    if n[-1] == '1':\n        k += 1\n    n = n[0:len(n) - 1]\n    for i in range(1, a[1]):\n        if b[i] - b[i - 1] - 1 > 0:\n            o = 0\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k += o\n            o = 0\n            if n == '':\n                n = 0\n            else:\n                n = int(n, 2)\n            n += b[i] - b[i - 1] - 1\n            n = '{0:b}'.format(n)\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k -= o\n            k += b[i] - b[i - 1] - 1\n        if n[-1] == '1':\n            k += 1\n        n = n[0:len(n) - 1]\n    if a[0] - b[-1] > 0:\n        o = 0\n        for j in range(len(n)):\n            if n[j] == '1':\n                o += 1\n        k += o\n        o = 0\n        if n == '':\n            n = 0\n        else:\n            n = int(n, 2)\n        n += a[0] - b[-1]\n        n = '{0:b}'.format(n)\n        for i in range(len(n)):\n            if n[i] == '1':\n                o += 1\n        k -= o\n        k += a[0] - b[-1]\n    print(k)", "for i in range(int(input())):\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    b.sort()\n    ans = 0\n    n = '{0:b}'.format(b[0] - 1)\n    k = b[0] - 1\n    o = 0\n    for i in range(len(n)):\n        if n[i] == '1':\n            o += 1\n    k -= o\n    if n[-1] == '1':\n        k += 1\n    n = n[0:len(n) - 1]\n    for i in range(1, a[1]):\n        if b[i] - b[i - 1] - 1 > 0:\n            o = 0\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k += o\n            o = 0\n            if n == '':\n                n = 0\n            else:\n                n = int(n, 2)\n            n += b[i] - b[i - 1] - 1\n            n = '{0:b}'.format(n)\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k -= o\n            k += b[i] - b[i - 1] - 1\n        if n[-1] == '1':\n            k += 1\n        n = n[0:len(n) - 1]\n    if a[0] - b[-1] > 0:\n        o = 0\n        for j in range(len(n)):\n            if n[j] == '1':\n                o += 1\n        k += o\n        o = 0\n        if n == '':\n            n = 0\n        else:\n            n = int(n, 2)\n        n += a[0] - b[-1]\n        n = '{0:b}'.format(n)\n        for i in range(len(n)):\n            if n[i] == '1':\n                o += 1\n        k -= o\n        k += a[0] - b[-1]\n    print(k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    num = prv = 0\n    for x in a:\n        num += x - prv - 1\n        num //= 2\n        prv = x\n    num += n - prv\n    print(n - k - bin(num)[2:].count('1'))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    num = prv = 0\n    for x in a:\n        num += x - prv - 1\n        num //= 2\n        prv = x\n    num += n - prv\n    print(n - k - bin(num)[2:].count('1'))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    num = prv = 0\n    for x in a:\n        num += x - prv - 1\n        num //= 2\n        prv = x\n    num += n - prv\n    print(n - k - bin(num)[2:].count('1'))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    num = prv = 0\n    for x in a:\n        num += x - prv - 1\n        num //= 2\n        prv = x\n    num += n - prv\n    print(n - k - bin(num)[2:].count('1'))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    num = prv = 0\n    for x in a:\n        num += x - prv - 1\n        num //= 2\n        prv = x\n    num += n - prv\n    print(n - k - bin(num)[2:].count('1'))", "for i in range(int(input())):\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    b.sort()\n    ans = 0\n    n = '{0:b}'.format(b[0] - 1)\n    k = b[0] - 1\n    o = 0\n    for i in range(len(n)):\n        if n[i] == '1':\n            o += 1\n    k -= o\n    if n[-1] == '1':\n        k += 1\n    n = n[0:len(n) - 1]\n    for i in range(1, a[1]):\n        if b[i] - b[i - 1] - 1 > 0:\n            o = 0\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k += o\n            o = 0\n            if n == '':\n                n = 0\n            else:\n                n = int(n, 2)\n            n += b[i] - b[i - 1] - 1\n            n = '{0:b}'.format(n)\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k -= o\n            k += b[i] - b[i - 1] - 1\n        if n[-1] == '1':\n            k += 1\n        n = n[0:len(n) - 1]\n    if a[0] - b[-1] > 0:\n        o = 0\n        for j in range(len(n)):\n            if n[j] == '1':\n                o += 1\n        k += o\n        o = 0\n        if n == '':\n            n = 0\n        else:\n            n = int(n, 2)\n        n += a[0] - b[-1]\n        n = '{0:b}'.format(n)\n        for i in range(len(n)):\n            if n[i] == '1':\n                o += 1\n        k -= o\n        k += a[0] - b[-1]\n    print(k)", "for i in range(int(input())):\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    b.sort()\n    ans = 0\n    n = '{0:b}'.format(b[0] - 1)\n    k = b[0] - 1\n    o = 0\n    for i in range(len(n)):\n        if n[i] == '1':\n            o += 1\n    k -= o\n    if n[-1] == '1':\n        k += 1\n    n = n[0:len(n) - 1]\n    for i in range(1, a[1]):\n        if b[i] - b[i - 1] - 1 > 0:\n            o = 0\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k += o\n            o = 0\n            if n == '':\n                n = 0\n            else:\n                n = int(n, 2)\n            n += b[i] - b[i - 1] - 1\n            n = '{0:b}'.format(n)\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k -= o\n            k += b[i] - b[i - 1] - 1\n        if n[-1] == '1':\n            k += 1\n        n = n[0:len(n) - 1]\n    if a[0] - b[-1] > 0:\n        o = 0\n        for j in range(len(n)):\n            if n[j] == '1':\n                o += 1\n        k += o\n        o = 0\n        if n == '':\n            n = 0\n        else:\n            n = int(n, 2)\n        n += a[0] - b[-1]\n        n = '{0:b}'.format(n)\n        for i in range(len(n)):\n            if n[i] == '1':\n                o += 1\n        k -= o\n        k += a[0] - b[-1]\n    print(k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    prev = 0\n    c = 1\n    for i in arr:\n        a = i + prev - c\n        prev = a // 2\n        c = i + 1\n    prev += n - c + 1\n    b = bin(prev)\n    c = b.count('1')\n    a = n - k - c\n    print(a)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    num = prv = 0\n    for x in a:\n        num += x - prv - 1\n        num //= 2\n        prv = x\n    num += n - prv\n    print(n - k - bin(num)[2:].count('1'))", "try:\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        a = [0] + sorted(map(int, input().split()))\n        (c, v) = (0, 0)\n        for (i, curr) in enumerate(a[1:], start=1):\n            v += curr - 1 - a[i - 1]\n            v //= 2\n        v += n - a[-1]\n        print(n - k - format(v, 'b').count('1'))\nexcept Exception as e:\n    raise e", "t = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    num = prv = 0\n    for x in a:\n        num += x - prv - 1\n        num = num // 2\n        prv = x\n    num += n - prv\n    print(n - k - bin(num).count('1'))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    num = prv = 0\n    for x in a:\n        num += x - prv - 1\n        num //= 2\n        prv = x\n    num += n - prv\n    print(n - k - bin(num)[2:].count('1'))", "t = int(input())\nfor _ in range(t):\n    s = input().split()\n    (n, k) = map(int, s)\n    s = input().split()\n    arr = list(map(int, s))\n    arr.sort()\n    curNum = arr[0] - 1\n    for i in range(k - 1):\n        curNum = curNum >> 1\n        curNum += arr[i + 1] - arr[i] - 1\n    curNum = curNum >> 1\n    curNum += n - arr[-1]\n    print(n - k - bin(curNum).count('1'))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    num = prv = 0\n    for x in a:\n        num += x - prv - 1\n        num //= 2\n        prv = x\n    num += n - prv\n    print(n - k - bin(num)[2:].count('1'))", "t = int(input())\nfor _ in range(t):\n    s = input().split()\n    (n, k) = map(int, s)\n    s = input().split()\n    arr = list(map(int, s))\n    arr.sort()\n    curNum = arr[0] - 1\n    for i in range(k - 1):\n        curNum = curNum >> 1\n        curNum += arr[i + 1] - arr[i] - 1\n    curNum = curNum >> 1\n    curNum += n - arr[-1]\n    print(n - k - bin(curNum).count('1'))", "def cal(a, b):\n    dp = 0\n    for i in range(35):\n        dp += int(a >> i & 1) * (2 ** i - 1) - int(b >> i & 1) * (2 ** i - 1)\n    return dp\nimport math\nfor i in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    a = [0] + a\n    prv = 0\n    nm = 0\n    dr = 0\n    for i in range(1, k + 1):\n        inc = a[i] - a[i - 1] - 1\n        dr += cal(nm + inc, nm)\n        nm += inc\n        dr += nm % 2\n        nm //= 2\n    inc = n - a[i]\n    dr += cal(nm + inc, nm)\n    print(dr)", "def cal(a, b):\n    d = 0\n    for i in range(35):\n        d += int(a >> i & 1) * (2 ** i - 1) - int(b >> i & 1) * (2 ** i - 1)\n    return d\nimport math\nfor _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    a = [0] + a\n    pr = 0\n    nm = 0\n    dr = 0\n    for i in range(1, k + 1):\n        inc = a[i] - a[i - 1] - 1\n        dr += cal(nm + inc, nm)\n        nm += inc\n        dr += nm % 2\n        nm //= 2\n    inc = n - a[i]\n    dr += cal(nm + inc, nm)\n    print(dr)", "def calc(a, b):\n    dp = 0\n    for i in range(35):\n        dp += int(a >> i & 1) * (2 ** i - 1) - int(b >> i & 1) * (2 ** i - 1)\n    return dp\nimport math\nfor _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    a = [0] + a\n    prv = 0\n    nm = 0\n    drp = 0\n    for i in range(1, k + 1):\n        inc = a[i] - a[i - 1] - 1\n        drp += calc(nm + inc, nm)\n        nm += inc\n        drp += nm % 2\n        nm //= 2\n    inc = n - a[i]\n    drp += calc(nm + inc, nm)\n    print(drp)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = [*map(int, input().split())]\n    num = prv = 0\n    for x in a:\n        num += x - prv - 1\n        num //= 2\n        prv = x\n    num += n - prv\n    print(n - k - bin(num).count('1'))", "t = int(input())\nwhile t:\n    (x, y) = map(int, input().split(' '))\n    l = list(map(int, input().split(' ')))\n    c = 0\n    a = l[0] - 1\n    for i in range(y):\n        if i >= 1:\n            a += l[i] - l[i - 1] - 1\n        a >>= 1\n    a += x - l[-1]\n    b = x - y - bin(a).count('1')\n    print(b)\n    t -= 1", "from sys import stdin\ninput = stdin.readline\ninp = lambda : list(map(int, input().split()))\n\ndef answer():\n    (ans, prev, pv) = (0, 0, 0)\n    for i in range(k + 1):\n        count = prev + (a[i] - pv - 1)\n        for bit in range(30):\n            if count >> bit & 1:\n                if bit:\n                    ans += (1 << bit) - 1\n        if a[i] == n + 1:\n            break\n        cur = prev + (a[i] - pv - 1)\n        if cur & 1:\n            ans += 1\n        cur >>= 1\n        for bit in range(30):\n            if cur >> bit & 1:\n                if bit:\n                    ans -= (1 << bit) - 1\n        prev = cur\n        pv = a[i]\n    return ans\nfor T in range(int(input())):\n    (n, k) = inp()\n    a = inp()\n    a.append(n + 1)\n    print(answer())", "for i in range(int(input())):\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    b.sort()\n    ans = 0\n    n = '{0:b}'.format(b[0] - 1)\n    k = b[0] - 1\n    o = 0\n    for i in range(len(n)):\n        if n[i] == '1':\n            o += 1\n    k -= o\n    if n[-1] == '1':\n        k += 1\n    n = n[0:len(n) - 1]\n    for i in range(1, a[1]):\n        if b[i] - b[i - 1] - 1 > 0:\n            o = 0\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k += o\n            o = 0\n            if n == '':\n                n = 0\n            else:\n                n = int(n, 2)\n            n += b[i] - b[i - 1] - 1\n            n = '{0:b}'.format(n)\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k -= o\n            k += b[i] - b[i - 1] - 1\n        if n[-1] == '1':\n            k += 1\n        n = n[0:len(n) - 1]\n    if a[0] - b[-1] > 0:\n        o = 0\n        for j in range(len(n)):\n            if n[j] == '1':\n                o += 1\n        k += o\n        o = 0\n        if n == '':\n            n = 0\n        else:\n            n = int(n, 2)\n        n += a[0] - b[-1]\n        n = '{0:b}'.format(n)\n        for i in range(len(n)):\n            if n[i] == '1':\n                o += 1\n        k -= o\n        k += a[0] - b[-1]\n    print(k)", "for i in range(int(input())):\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    b.sort()\n    ans = 0\n    n = '{0:b}'.format(b[0] - 1)\n    k = b[0] - 1\n    o = 0\n    for i in range(len(n)):\n        if n[i] == '1':\n            o += 1\n    k -= o\n    if n[-1] == '1':\n        k += 1\n    n = n[0:len(n) - 1]\n    for i in range(1, a[1]):\n        if b[i] - b[i - 1] - 1 > 0:\n            o = 0\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k += o\n            o = 0\n            if n == '':\n                n = 0\n            else:\n                n = int(n, 2)\n            n += b[i] - b[i - 1] - 1\n            n = '{0:b}'.format(n)\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k -= o\n            k += b[i] - b[i - 1] - 1\n        if n[-1] == '1':\n            k += 1\n        n = n[0:len(n) - 1]\n    if a[0] - b[-1] > 0:\n        o = 0\n        for j in range(len(n)):\n            if n[j] == '1':\n                o += 1\n        k += o\n        o = 0\n        if n == '':\n            n = 0\n        else:\n            n = int(n, 2)\n        n += a[0] - b[-1]\n        n = '{0:b}'.format(n)\n        for i in range(len(n)):\n            if n[i] == '1':\n                o += 1\n        k -= o\n        k += a[0] - b[-1]\n    print(k)", "for i in range(int(input())):\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    b.sort()\n    ans = 0\n    n = '{0:b}'.format(b[0] - 1)\n    k = b[0] - 1\n    o = 0\n    for i in range(len(n)):\n        if n[i] == '1':\n            o += 1\n    k -= o\n    if n[-1] == '1':\n        k += 1\n    n = n[0:len(n) - 1]\n    for i in range(1, a[1]):\n        if b[i] - b[i - 1] - 1 > 0:\n            o = 0\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k += o\n            o = 0\n            if n == '':\n                n = 0\n            else:\n                n = int(n, 2)\n            n += b[i] - b[i - 1] - 1\n            n = '{0:b}'.format(n)\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k -= o\n            k += b[i] - b[i - 1] - 1\n        if n[-1] == '1':\n            k += 1\n        n = n[0:len(n) - 1]\n    if a[0] - b[-1] > 0:\n        o = 0\n        for j in range(len(n)):\n            if n[j] == '1':\n                o += 1\n        k += o\n        o = 0\n        if n == '':\n            n = 0\n        else:\n            n = int(n, 2)\n        n += a[0] - b[-1]\n        n = '{0:b}'.format(n)\n        for i in range(len(n)):\n            if n[i] == '1':\n                o += 1\n        k -= o\n        k += a[0] - b[-1]\n    print(k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    total_balls = 0\n    for i in range(len(lst)):\n        if i != 0:\n            total_balls += lst[i] - lst[i - 1] - 1\n        else:\n            total_balls += lst[i] - 1\n        total_balls = total_balls >> 1\n        if i == len(lst) - 1:\n            total_balls += n - lst[-1]\n    minus = 0\n    for i in range(30):\n        if total_balls >> i & 1 == 1:\n            minus += 1\n    print(n - k - minus)", "import sys\n\ndef get_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef oper(n):\n    val = 0\n    x = 2\n    cur = n // x\n    while cur >= 1:\n        val += cur\n        x = x * 2\n        cur = n // x\n    return val\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, k) = get_ints()\n    a = get_arr()\n    a.append(n + 1)\n    ans = oper(a[0] - 1)\n    val = a[0] - 1\n    for i in range(k):\n        if val % 2 != 0:\n            ans += 1\n        val = val >> 1\n        if val < 0:\n            val = 0\n        ans -= oper(val)\n        val2 = a[i + 1] - a[i] - 1\n        val += val2\n        ans += oper(val)\n    print(ans)", "for test in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(ai) for ai in input().split()]\n    line = 0\n    balls = 0\n    runs = [a[0] - 1]\n    for i in range(k - 1):\n        runs.append(a[i + 1] - a[i] - 1)\n    runs.append(n - a[k - 1])\n    prevcount = 0\n    for i in range(k):\n        line += runs[i]\n        newcount = bin(line).count('1')\n        balls += runs[i] + prevcount - newcount\n        prevcount = newcount\n        l2 = line % 2\n        balls += l2\n        prevcount -= l2\n        line >>= 1\n    line += runs[k]\n    balls += runs[k] + prevcount - bin(line).count('1')\n    print(balls)", "from collections import defaultdict\n\ndef get_set_bits(x):\n    cnt = 0\n    while x > 0:\n        if x % 2 == 1:\n            cnt += 1\n        x //= 2\n    return cnt\n\ndef solve():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    balls_given = n - k\n    ans = 0\n    steps = [0] + sorted(arr)\n    for i in range(1, len(steps)):\n        ans += steps[i] - steps[i - 1] - 1\n        ans //= 2\n    ans += n - steps[-1]\n    return balls_given - get_set_bits(ans)\nfor _ in range(int(input())):\n    print(solve())", "def mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return str(input())\n\ndef ni():\n    return int(input())\n\ndef f(n):\n    ans = bin(n)\n    return ans.count('1')\nfor t in range(int(input())):\n    (n, k) = mi()\n    a = li()\n    a.append(n + 1)\n    ans = 0\n    pre = 0\n    count = 0\n    for i in a:\n        ans += i - pre - 1\n        if i == n + 1:\n            continue\n        count += ans % 2\n        ans //= 2\n        pre = int(i)\n    print(n - k - f(ans))", "T = int(input())\nfor i in range(T):\n    [N, K] = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    b = A[0] - 1\n    for i in range(K):\n        if i > 0:\n            b += A[i] - A[i - 1] - 1\n        s = bin(b).split('b')[1]\n        b = int(s[:-1].zfill(1), 2)\n    b += N - A[-1]\n    r = 0\n    for i in bin(b).split('b')[1]:\n        r += int(i)\n    print(N - K - r)", "import random\nimport math\nfrom collections import defaultdict, Counter, deque, OrderedDict\nfrom functools import lru_cache\nimport bisect\nimport heapq\nimport sys\ninput = lambda : sys.stdin.readline().strip()\n\nclass SegmentTree:\n\n    def __init__(self, nums):\n        self._size = len(nums)\n        self._tree = [0] * (4 * self._size)\n        self.build(nums)\n\n    def build(self, a, v=1, lo=0, hi=None):\n        if hi is None:\n            hi = self._size - 1\n        if lo == hi:\n            self._tree[v] = a[lo]\n        else:\n            mi = (lo + hi) // 2\n            self.build(a, 2 * v, lo, mi)\n            self.build(a, 2 * v + 1, mi + 1, hi)\n            self._tree[v] = self._tree[2 * v] + self._tree[2 * v + 1]\n\n    def update(self, pos, val, v=1, lo=0, hi=None):\n        if hi is None:\n            hi = self._size - 1\n        if lo == hi:\n            self._tree[v] = val\n        else:\n            mi = (lo + hi) // 2\n            if pos <= mi:\n                self.update(pos, val, 2 * v, lo, mi)\n            else:\n                self.update(pos, val, 2 * v + 1, mi + 1, hi)\n            self._tree[v] = self._tree[2 * v] + self._tree[2 * v + 1]\n\n    def query(self, l, h, v=1, lo=0, hi=None):\n        if hi is None:\n            hi = self._size - 1\n        if l > h:\n            return 0\n        elif l == lo and h == hi:\n            return self._tree[v]\n        else:\n            mi = (lo + hi) // 2\n            return self.query(l, min(mi, h), 2 * v, lo, mi) + self.query(max(mi + 1, l), h, 2 * v + 1, mi + 1, hi)\n\nclass UnionFind:\n\n    def __init__(self, n):\n        self.n = n\n        self.parents = list(range(n))\n\n    def find(self, x):\n        if self.parents[x] == x:\n            return x\n        else:\n            self.parents[x] = self.find(self.parents[x])\n            return self.parents[x]\n\n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n        if x != y:\n            self.parents[x] = y\ndire = [0, 1, 0, -1, 0]\n\ndef is_prime(n):\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef case(t):\n    print('Case #{}:'.format(t), end=' ')\nRANDOM = random.randrange(2 ** 62)\n\ndef Wrapper(x):\n    return x ^ RANDOM\n\ndef solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    last = 0\n    actual = 0\n    for i in a:\n        added = i - 1 - last\n        oldcount = format(actual, 'b').count('1')\n        actual += added\n        ans += added + oldcount - format(actual, 'b').count('1')\n        last = i\n        if actual % 2 == 1:\n            ans += 1\n        actual = actual >> 1\n    if a[-1] != n:\n        i = n\n        added = i - last\n        oldcount = format(actual, 'b').count('1')\n        actual += added\n        ans += added + oldcount - format(actual, 'b').count('1')\n    print(ans)\nfor t in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    k_pos = list(map(int, input().split()))\n    num = k_pos[0] - 1\n    for i in range(1, k):\n        num = num >> 1\n        num += k_pos[i] - k_pos[i - 1] - 1\n        if i == k - 1:\n            num = num >> 1\n    if k == 1:\n        num = num >> 1\n    num += n - k_pos[-1]\n    num = bin(num)\n    ones = num.count('1')\n    print(n - k - ones)", "def bitsum(n):\n    return sum(map(int, f'{n:b}'))\n\ndef dropstill(n):\n    return n - bitsum(n)\n\ndef getdrops(nombre, newnombre):\n    return dropstill(newnombre) - dropstill(nombre)\nT = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    typeoneses = list(map(int, input().split()))\n    typeoneses.append(N + 1)\n    for j in range(K, 0, -1):\n        typeoneses[j] -= typeoneses[j - 1] + 1\n    typeoneses[0] -= 1\n    nombre = 0\n    drops = 0\n    for j in range(K):\n        typeones = typeoneses[j]\n        newnombre = nombre + typeones\n        drops += getdrops(nombre, newnombre)\n        nombre = newnombre\n        drops += nombre % 2\n        nombre >>= 1\n    drops += getdrops(nombre, nombre + typeoneses[-1])\n    print(drops)", "import sys\nfrom collections import defaultdict\nfrom math import log2\ninput = sys.stdin.readline\nI = lambda : map(int, input().split())\nii = lambda : int(input())\nmod = 10 ** 9 + 7\n\ndef jaadu(n):\n    if n <= 1:\n        return 0\n    x = int(log2(n))\n    f = 1 << x\n    ans = 0\n    for i in range(x):\n        ans = ans * 2 + 1\n    return ans + jaadu(n - f)\nfor _ in range(ii()):\n    (n, k) = I()\n    a = [*I()]\n    lambu = 0\n    ans = 0\n    chotu = 0\n    for i in range(k):\n        temp = lambu\n        lambu += a[i] - chotu - 1\n        chotu = a[i]\n        ans += jaadu(lambu) - jaadu(temp)\n        if lambu & 1:\n            ans += 1\n        lambu >>= 1\n    temp = lambu\n    lambu += n - chotu\n    ans += jaadu(lambu) - jaadu(temp)\n    print(ans)", "for i in range(int(input())):\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    b.sort()\n    ans = 0\n    n = '{0:b}'.format(b[0] - 1)\n    k = b[0] - 1\n    o = 0\n    for i in range(len(n)):\n        if n[i] == '1':\n            o += 1\n    k -= o\n    if n[-1] == '1':\n        k += 1\n    n = n[0:len(n) - 1]\n    for i in range(1, a[1]):\n        if b[i] - b[i - 1] - 1 > 0:\n            o = 0\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k += o\n            o = 0\n            if n == '':\n                n = 0\n            else:\n                n = int(n, 2)\n            n += b[i] - b[i - 1] - 1\n            n = '{0:b}'.format(n)\n            for j in range(len(n)):\n                if n[j] == '1':\n                    o += 1\n            k -= o\n            k += b[i] - b[i - 1] - 1\n        if n[-1] == '1':\n            k += 1\n        n = n[0:len(n) - 1]\n    if a[0] - b[-1] > 0:\n        o = 0\n        for j in range(len(n)):\n            if n[j] == '1':\n                o += 1\n        k += o\n        o = 0\n        if n == '':\n            n = 0\n        else:\n            n = int(n, 2)\n        n += a[0] - b[-1]\n        n = '{0:b}'.format(n)\n        for i in range(len(n)):\n            if n[i] == '1':\n                o += 1\n        k -= o\n        k += a[0] - b[-1]\n    print(k)", "import sys\nfrom math import sqrt, gcd, factorial, ceil, floor, pi\nfrom collections import deque, Counter, OrderedDict\nfrom heapq import heapify, heappush, heappop\ninput = lambda : sys.stdin.readline()\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 10 ** 9 + 7\n\ndef solver(val):\n    y = 0\n    for i in range(32):\n        y += val // 2 ** (i + 1)\n    return y\nfor _ in range(I()):\n    (n, k) = M()\n    a = [0] + L()\n    x = 0\n    ans = 0\n    for i in range(1, k + 1):\n        t = x + a[i] - a[i - 1] - 1\n        ans += solver(t) - solver(x) + t % 2\n        if bin(t)[2:-1]:\n            x = int(bin(t)[2:-1], 2)\n        else:\n            x = 0\n    ans += solver(n - a[-1] + x) - solver(x)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = 0\n    ans = 0\n    for i in range(k):\n        if i == 0:\n            s += a[i] - 1\n        else:\n            s += a[i] - a[i - 1] - 1\n        s >>= 1\n    s += n - a[-1]\n    balls = n - k\n    c = 0\n    while s:\n        if s & 1:\n            c += 1\n        s >>= 1\n    ans += balls - c\n    print(ans)", "def f(x):\n    ans = 0\n    p = 0\n    while x != 0:\n        if x & 1 == 1:\n            ans += pow(2, p) - 1\n        x >>= 1\n        p += 1\n    return ans\nfor case in range(int(input())):\n    (n, k) = (int(i) for i in input().split())\n    d = [int(i) for i in input().split()]\n    m = 0\n    p = 0\n    ans = 0\n    for i in d:\n        ans += f(m + i - 1 - p) - f(m)\n        if m + i - 1 - p & 1 == 1:\n            ans += 1\n        m = m + i - 1 - p >> 1\n        p = i\n    ans += f(m + n - p) - f(m)\n    print(ans)", "def f():\n    (n, k) = map(int, input().split())\n    v = list(map(int, input().split()))\n    last = 0\n    ans = 0\n    for i in range(k):\n        temp = v[i]\n        diff = temp - last\n        ans += diff\n        ans = ans // 2\n        last = v[i]\n    ans += n - last - 1\n    st = 0\n    while ans > 0:\n        pop = ans % 2\n        if pop:\n            st += 1\n        ans //= 2\n    print(n - k - st)\nt = int(input())\nwhile t:\n    f()\n    t -= 1", "from itertools import count\nimport sys\nsys.setrecursionlimit(25000)\ncin = sys.stdin\nread = cin.readline\ncout = sys.stdout\nwrite = cout.write\nir = lambda : int(read())\nrir = lambda : range(int(read()))\nmir = lambda : map(int, read().split())\nlmir = lambda : list(map(int, read().split()))\n\ndef carry(n):\n    return 0 if n <= 0 else carry(n >> 1) + (n >> 1)\n\ndef range_carry(l, r):\n    return carry(r) - carry(l)\nfor _ in rir():\n    (n, k) = mir()\n    two = lmir()\n    res = x = 0\n    last = 0\n    for i in two:\n        adds = i - last - 1\n        res += range_carry(x, x + adds)\n        x += adds\n        res += x & 1\n        x >>= 1\n        last = i\n    res += range_carry(x, x + n - i)\n    print(res)"]