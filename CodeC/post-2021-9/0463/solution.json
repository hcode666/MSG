["T = int(input())\nfor _ in range(T):\n    s = input()\n    cnt = 0\n    ncnt = 0\n    for i in range(len(s)):\n        cnt += s[i] == '0'\n    if not cnt:\n        print('0')\n        continue\n    for i in range(cnt):\n        ncnt += s[i] == '0'\n    ans = cnt - ncnt\n    for i in range(cnt, len(s)):\n        ncnt -= s[i - cnt] == '0'\n        ncnt += s[i] == '0'\n        ans = min(ans, cnt - ncnt)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    s = input()\n    cnt = 0\n    ncnt = 0\n    for i in range(len(s)):\n        cnt += s[i] == '0'\n    if not cnt:\n        print('0')\n        continue\n    for i in range(cnt):\n        ncnt += s[i] == '0'\n    ans = cnt - ncnt\n    for i in range(cnt, len(s)):\n        ncnt -= s[i - cnt] == '0'\n        ncnt += s[i] == '0'\n        ans = min(ans, cnt - ncnt)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    s = input()\n    cnt = 0\n    ncnt = 0\n    for i in range(len(s)):\n        cnt += s[i] == '0'\n    if not cnt:\n        print('0')\n        continue\n    for i in range(cnt):\n        ncnt += s[i] == '0'\n    ans = cnt - ncnt\n    for i in range(cnt, len(s)):\n        ncnt -= s[i - cnt] == '0'\n        ncnt += s[i] == '0'\n        ans = min(ans, cnt - ncnt)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    s = input()\n    cnt = 0\n    ncnt = 0\n    for i in range(len(s)):\n        cnt += s[i] == '0'\n    if not cnt:\n        print('0')\n        continue\n    for i in range(cnt):\n        ncnt += s[i] == '0'\n    ans = cnt - ncnt\n    for i in range(cnt, len(s)):\n        ncnt -= s[i - cnt] == '0'\n        ncnt += s[i] == '0'\n        ans = min(ans, cnt - ncnt)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    b = list(map(int, input().strip()))\n    z = len(b) - sum(b)\n    if z == 0:\n        print(0)\n        continue\n    a = b[0:z]\n    s = sum(a)\n    maxim = s\n    for i in range(z, len(b)):\n        if a[0] == 1:\n            s -= 1\n        if b[i] == 1:\n            s += 1\n        a.pop(0)\n        a.append(b[i])\n        if s < maxim:\n            maxim = s\n    print(maxim)", "T = int(input())\nfor _ in range(T):\n    bs = input()\n    (x, y) = (0, 0)\n    for i in bs:\n        if i == '0':\n            x += 1\n        if i == '1':\n            y += 1\n    a = bs[:x].count('0')\n    c = a\n    for i in range(x, len(bs)):\n        if bs[i] == '0':\n            c += 1\n        if bs[i - x] == '0':\n            c -= 1\n        a = max(a, c)\n    print(x - a)", "for i in range(int(input())):\n    s = input()\n    m = s.count('0')\n    count = s[:m].count('1')\n    mincount = count\n    lowlim = 0\n    uplim = m\n    while uplim < len(s):\n        if s[uplim] == '1':\n            count += 1\n        if s[lowlim] == '1':\n            count -= 1\n        lowlim += 1\n        uplim += 1\n        if count < mincount:\n            mincount = count\n    print(mincount)", "for i in range(int(input())):\n    s = input()\n    m = s.count('0')\n    count = s[:m].count('1')\n    mincount = count\n    lowlim = 0\n    uplim = m\n    while uplim < len(s):\n        if s[uplim] == '1':\n            count += 1\n        if s[lowlim] == '1':\n            count -= 1\n        lowlim += 1\n        uplim += 1\n        if count < mincount:\n            mincount = count\n    print(mincount)", "for _ in range(int(input())):\n    s = input()\n    x = s.count('0')\n    m = len(s)\n    a = s[0:x].count('0')\n    b = a\n    for i in range(x, m):\n        if s[i] == '0' and s[i - x] == '1':\n            b += 1\n        elif s[i] == '1' and s[i - x] == '0':\n            b -= 1\n        if b > a:\n            a = b\n    print(x - a)", "for _ in range(int(input())):\n    s = input()\n    x = s.count('0')\n    m = len(s)\n    a = s[0:x].count('0')\n    b = a\n    for i in range(x, m):\n        if s[i] == '0' and s[i - x] == '1':\n            b += 1\n        elif s[i] == '1' and s[i - x] == '0':\n            b -= 1\n        if b > a:\n            a = b\n    print(x - a)", "for _ in range(int(input())):\n    s = input()\n    x = s.count('0')\n    m = len(s)\n    a = s[0:x].count('0')\n    b = a\n    for i in range(x, m):\n        if s[i] == '0' and s[i - x] == '1' and (b == a):\n            a += 1\n            b += 1\n        elif s[i] == '0' and s[i - x] == '1':\n            b += 1\n        elif s[i] == '1' and s[i - x] == '0':\n            b -= 1\n    print(x - a)", "for _ in range(int(input())):\n    s = input()\n    x = s.count('0')\n    m = len(s)\n    a = s[0:x].count('0')\n    b = a\n    for i in range(x, m):\n        if s[i] == '0' and s[i - x] == '1' and (b == a):\n            a += 1\n            b += 1\n        elif s[i] == '0' and s[i - x] == '1':\n            b += 1\n        elif s[i] == '1' and s[i - x] == '0':\n            b -= 1\n    print(x - a)", "def func1():\n    s = list(input())\n    ct = 0\n    nct = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            ct += 1\n    if ct == 0:\n        print('0')\n        return\n    for j in range(ct):\n        if s[j] == '0':\n            nct += 1\n    one_ct = ct - nct\n    for k in range(ct, len(s)):\n        if s[k - ct] == '0':\n            nct -= 1\n        if s[k] == '0':\n            nct += 1\n        one_ct = min(one_ct, ct - nct)\n    print(one_ct)\nfor t in range(int(input())):\n    func1()", "for _ in range(int(input())):\n    s = input()\n    c = 0\n    nc = 0\n    for i in s:\n        if i == '0':\n            c += 1\n    if c == 0:\n        print('0')\n        continue\n    for i in range(c):\n        if s[i] == '0':\n            nc = nc + 1\n    ans = c - nc\n    for i in range(c, len(s)):\n        if s[i - c] == '0':\n            nc = nc - 1\n        if s[i] == '0':\n            nc = nc + 1\n        ans = min(ans, c - nc)\n    print(ans)", "for _ in range(int(input())):\n    string = input()\n    s = list(map(int, string))\n    k = string.count('0')\n    pref = [0]\n    for ele in s:\n        pref.append(pref[-1] + ele)\n    ans = float('inf')\n    for i in range(len(s) - k + 1):\n        cost = pref[i + k] - pref[i]\n        ans = min(ans, cost)\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    k = s.count('0')\n    if k == len(s):\n        print(0)\n        continue\n    m = s[:k].count('0')\n    ans = k - m\n    for i in range(k, len(s)):\n        m -= s[i - k] == '0'\n        m += s[i] == '0'\n        ans = min(ans, k - m)\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    k = s.count('0')\n    if k == len(s):\n        print(0)\n        continue\n    m = s[:k].count('0')\n    ans = k - m\n    for i in range(k, len(s)):\n        m -= s[i - k] == '0'\n        m += s[i] == '0'\n        ans = min(ans, k - m)\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    k = s.count('0')\n    if k == len(s):\n        print(0)\n        continue\n    m = s[:k].count('0')\n    ans = k - m\n    for i in range(k, len(s)):\n        m -= s[i - k] == '0'\n        m += s[i] == '0'\n        ans = min(ans, k - m)\n    print(ans)", "for _ in range(int(input())):\n    B = list(input())\n    N = len(B)\n    K = B.count('0')\n    mnOnes = float('inf')\n    ones = 0\n    for i in range(N - K + 1):\n        if i == 0:\n            ones = B[i:K + i].count('1')\n        else:\n            ones = ones - (1 if B[i - 1] == '1' else 0) + (1 if K + i - 1 < N and B[K + i - 1] == '1' else 0)\n        if mnOnes > ones:\n            mnOnes = ones\n    print(mnOnes)", "for _ in range(int(input())):\n    s = input()\n    k = s.count('0')\n    if k == len(s):\n        print(0)\n        continue\n    m = s[:k].count('0')\n    ans = k - m\n    for i in range(k, len(s)):\n        m -= s[i - k] == '0'\n        m += s[i] == '0'\n        ans = min(ans, k - m)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    b = list(map(int, input().strip()))\n    z = len(b) - sum(b)\n    if z == 0:\n        print(0)\n        continue\n    a = b[0:z]\n    s = sum(a)\n    maxim = s\n    for i in range(z, len(b)):\n        if a[0] == 1:\n            s -= 1\n        if b[i] == 1:\n            s += 1\n        a.pop(0)\n        a.append(b[i])\n        if s < maxim:\n            maxim = s\n    print(maxim)", "t = int(input())\nfor _ in range(t):\n    b = list(map(int, input().strip()))\n    z = len(b) - sum(b)\n    if z == 0:\n        print(0)\n        continue\n    a = b[0:z]\n    s = sum(a)\n    maxim = s\n    for i in range(z, len(b)):\n        if a[0] == 1:\n            s -= 1\n        if b[i] == 1:\n            s += 1\n        a.pop(0)\n        a.append(b[i])\n        if s < maxim:\n            maxim = s\n    print(maxim)", "T = int(input())\nfor _ in range(T):\n    arr = list(map(int, list(input())))\n    n = len(arr)\n    num1s = arr.count(1)\n    orig_num1s = num1s - arr[::-1][:num1s].count(1)\n    best_transpose = 0\n    ones_corrected = 0\n    best_i = 0\n    for i in range(num1s):\n        if arr[i] == 1:\n            ones_corrected += 1\n        if arr[i + n - num1s] == 1:\n            ones_corrected -= 1\n        if ones_corrected >= best_transpose:\n            best_transpose = ones_corrected\n            best_i = i\n    best_arr = arr[best_i + n - num1s + 1:][::-1] + arr[:best_i + n - num1s + 1]\n    fin_num1s = num1s - best_arr[:num1s].count(1)\n    print(min(orig_num1s, fin_num1s))", "import sys\na = [None] * 100001\nb = [0] * 100001\n\ndef query(l, r):\n    return b[r] - b[l - 1]\n\ndef sol():\n    st = input()\n    n = len(st)\n    s = 99999\n    for i in range(n):\n        a[i + 1] = ord(st[i]) - 48\n    for i in range(1, n + 1):\n        b[i] = b[i - 1] + a[i]\n    m = query(1, n)\n    for i in range(1, n + 1):\n        if n - i - query(i + 1, n) > query(1, i):\n            continue\n        s = min(s, n - i - query(i + 1, n) + query(1, i) - (n - i - query(i + 1, n)) - query(1, query(1, i) - (n - i - query(i + 1, n))))\n    print(s)\nT = int(input())\nfor i in range(T):\n    sol()", "test = int(input())\nfor t in range(test):\n    s = input()\n    a = [0] * (len(s) + 1)\n    out = float('inf')\n    for i in range(len(s)):\n        a[i + 1] = int(s[i])\n    n = len(s)\n    b = [0] * (n + 1)\n    for i in range(1, n + 1):\n        b[i] = b[i - 1] + a[i]\n    m = b[n] - b[0]\n    for i in range(1, n + 1):\n        if n - i - (b[n] - b[i]) > b[i] - b[0]:\n            continue\n        x = b[i] - b[0] - (n - i - (b[n] - b[i]))\n        out = min(out, n - i - (b[n] - b[i]) + (b[i] - b[0]) - (n - i - (b[n] - b[i])) - (b[x] - b[0]))\n    print(out)", "def ques(a, b, B):\n    return B[b] - B[a - 1]\nT = int(input())\nfor _ in range(T):\n    A = [s for s in input()]\n    B = [0] * (len(A) + 2)\n    C = [0] * len(B)\n    for i in range(len(A)):\n        B[i + 1] = ord(A[i]) - 48\n    N = len(A)\n    s = 2147483647\n    for i in range(1, N + 1):\n        C[i] = C[i - 1] + B[i]\n    M = ques(1, N, C)\n    for i in range(1, N + 1):\n        if N - i - ques(i + 1, N, C) > ques(1, i, C):\n            continue\n        s = min(s, N - i - ques(i + 1, N, C) + ques(1, i, C) - (N - i - ques(i + 1, N, C)) - ques(1, ques(1, i, C) - (N - i - ques(i + 1, N, C)), C))\n    print(s)", "for _ in range(int(input())):\n    s = [int(x) for x in list(input())]\n    n = len(s)\n    sm = sum(s)\n    if sm == 0:\n        print(0)\n        continue\n    sm1 = [0 for i in range(sm)]\n    sm2 = [0 for i in range(sm)]\n    sm1[0] = s[0]\n    sm2[0] = s[-1]\n    for i in range(1, sm):\n        sm1[i] = sm1[i - 1] + s[i]\n        sm2[i] = sm2[i - 1] + s[-i - 1]\n    mn = max(sm1[sm - 1], sm2[sm - 1])\n    for i in range(0, sm - 1):\n        mn = max(mn, sm1[i] + sm2[sm - i - 2])\n    print(sm - mn)", "T = int(input())\nfor _ in range(T):\n    S = list(map(int, list(input())))\n    zeroes = S.count(0)\n    pref = [0]\n    for elt in S:\n        pref.append(pref[-1] + elt)\n\n    def somme(a, b):\n        return pref[b] - pref[a]\n    ans = float('inf')\n    for i in range(len(S) - zeroes + 1):\n        cost = somme(i, i + zeroes)\n        ans = min(ans, cost)\n    print(ans)"]