["mod = 10 ** 9 + 7\ncheat = [1] * (10 ** 6 + 1)\nfor i in range(1, 10 ** 6 + 1):\n    cheat[i] = cheat[i - 1] * i % mod\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = Counter([int(x) for x in input().split()])\n    ans = 0\n    for i in a:\n        ans += cheat[i] * a[i]\n    print(ans % mod)", "z = [1]\nfor i in range(1, 10 ** 6 + 1):\n    z.append(z[i - 1] * i % (10 ** 9 + 7))\nt = int(input())\nfor item in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in arr:\n        s = s + z[i]\n    print(s % 1000000007)", "z = [1]\nfor i in range(1, 10 ** 6 + 1):\n    z.append(z[i - 1] * i % (10 ** 9 + 7))\nt = int(input())\nfor item in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in arr:\n        s = s + z[i]\n    print(s % 1000000007)", "t = int(input())\nxfact = [1]\nfor i in range(1, 1000001):\n    xfact.append(xfact[i - 1] * i % 1000000007)\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    val = 0\n    for i in lst:\n        val += xfact[i]\n    print(val % 1000000007)", "t = int(input())\nfact = [1]\nfor i in range(1, 1000001):\n    fact.append(fact[i - 1] * i % 1000000007)\nfor t in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    sum = 0\n    for a in arr:\n        sum += fact[a]\n    print(sum % 1000000007)", "z = [1]\nfor i in range(1, 10 ** 6 + 1):\n    z.append(z[i - 1] * i % (10 ** 9 + 7))\nt = int(input())\nfor item in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in arr:\n        s = s + z[i]\n    print(s % 1000000007)", "from math import sqrt, ceil, floor, gcd, log2\nimport sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import combinations, groupby\nfrom time import time\nfrom heapq import heappop, heappush, heapify\nfac = [1] * (10 ** 6 + 1)\nfor i in range(1, len(fac)):\n    fac[i] = fac[i - 1] * i % (10 ** 9 + 7)\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    result = 0\n    for i in s:\n        result = result + fac[i]\n    print(result % (10 ** 9 + 7))", "fac = [1] * (10 ** 6 + 1)\nfor i in range(1, len(fac)):\n    fac[i] = fac[i - 1] * i % (10 ** 9 + 7)\nfor _ in range(int(input())):\n    n = int(input()) - 1\n    s = list(map(int, input().split()))\n    result = 0\n    for i in s:\n        result = result + fac[i]\n    print(result % (10 ** 9 + 7))", "MODULO = 1000000007\nK_MAX = 1000001\nT = int(input())\nfact = [1]\nfor i in range(1, K_MAX):\n    fact.append(fact[i - 1] * i % MODULO)\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sum = 0\n    for i in range(n):\n        sum = (sum + fact[a[i]]) % MODULO\n    print(sum)", "MODULO = 1000000007\nK_MAX = 1000001\nT = int(input())\nfact = [1]\nfor i in range(1, K_MAX):\n    fact.append(fact[i - 1] * i % MODULO)\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sum = 0\n    for i in range(n):\n        sum = (sum + fact[a[i]]) % MODULO\n    print(sum)", "fact = [1]\nfor i in range(1, 10 ** 6 + 1):\n    fact.append(fact[i - 1] * i % (10 ** 9 + 7))\nt = int(input())\nfor item in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in arr:\n        s = s + fact[i]\n    print(s % 1000000007)", "d = [1]\nfor j in range(2, 1000000 + 1):\n    d += [d[-1] * j % 1000000007]\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for x in a:\n        ans += d[x - 1]\n    print(ans % 1000000007)", "d = [1]\nfor ii in range(2, 1000000 + 1):\n    d += [d[-1] * ii % 1000000007]\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for xx in a:\n        ans += d[xx - 1]\n    print(ans % 1000000007)", "d = [1]\nfor ii in range(2, 1000000 + 1):\n    d += [d[-1] * ii % 1000000007]\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for xx in a:\n        ans += d[xx - 1]\n    print(ans % 1000000007)", "fact = [1]\nfor i in range(1, 10 ** 6 + 1):\n    fact.append(fact[i - 1] * i % (10 ** 9 + 7))\nt = int(input())\nfor item in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in arr:\n        s = s + fact[i]\n    print(s % 1000000007)", "l1 = [1]\nfor _ in range(1, 10 ** 6):\n    l1.append(l1[_ - 1] * _ % 1000000007)\nt = input()\nfor c in range(0, int(t)):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = 0\n    for _ in l:\n        d += l1[_]\n    print(d % 1000000007)", "fact = [1]\nfor i in range(1, 10 ** 6 + 1):\n    fact.append(fact[i - 1] * i % (10 ** 9 + 7))\nt = int(input())\nfor item in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in arr:\n        s = s + fact[i]\n    print(s % 1000000007)", "l1 = [1]\nfor _ in range(1, 10 ** 6):\n    l1.append(l1[_ - 1] * _ % 1000000007)\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = 0\n    for _ in l:\n        d += l1[_]\n    print(d % 1000000007)", "num_cases = int(input())\nfactorials = {}\nfor case in range(num_cases):\n    input()\n    balls = input().split()\n    total = 0\n    for ball in balls:\n        n = int(ball)\n        if n in factorials:\n            total += factorials[n]\n        else:\n            factorial = 1\n            for k in range(2, n + 1):\n                factorial *= k\n                factorial %= 1000000007\n                factorials.update({k: factorial})\n            total += factorial\n        total %= 1000000007\n    print(total)", "dic = {1: 1, 2: 2, 3: 6, 4: 24}\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mod = 1000000007\n    ans = 0\n    for e in a:\n        if e in dic.keys():\n            ans = (ans + dic[e]) % mod\n            continue\n        count = max(dic.keys())\n        while True:\n            dic[count + 1] = (count + 1) * dic[count] % mod\n            count += 1\n            if count == e:\n                break\n        ans = (ans + dic[e]) % mod\n    print(ans)", "l = []\nmx = []\nkl = []\ntc = int(input())\nfor i in range(tc):\n    n = int(input())\n    k = list(map(int, input().split()))\n    kl.append(k)\n    mx.append(max(k))\nd = {}\nff = 1\nfor kk in range(1, max(mx) + 1):\n    d[kk] = ff % 1000000007\n    ff = ff * (kk + 1)\n    ff = ff % 1000000007\nfor i in range(tc):\n    ans = 0\n    for t in kl[i]:\n        ans += d[t]\n        ans % 1000000007\n    print(ans % 1000000007)", "l = []\nmx = []\nkl = []\ntc = int(input())\nfor i in range(tc):\n    n = int(input())\n    k = list(map(int, input().split()))\n    kl.append(k)\n    mx.append(max(k))\nd = {}\nff = 1\nfor kk in range(1, max(mx) + 1):\n    d[kk] = ff % 1000000007\n    ff = ff * (kk + 1)\n    ff = ff % 1000000007\nfor i in range(tc):\n    ans = 0\n    for t in kl[i]:\n        ans += d[t]\n        ans % 1000000007\n    print(ans % 1000000007)", "mod = 10 ** 9 + 7\nfactorials = [0] * 10 ** 6\nfactorials[0] = factorials[1] = 1\nfor i in range(2, len(factorials)):\n    factorials[i] = factorials[i - 1] * i % mod\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    for i in range(len(A)):\n        ans += factorials[A[i]]\n        ans = ans % mod\n    print(ans)", "factorials = [1]\nfor i in range(1, 10 ** 6 + 1):\n    factorials.append(factorials[i - 1] * i % 1000000007)\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    n = 0\n    for x in l:\n        n += factorials[x]\n    print(n % 1000000007)", "NN = 1000000007\nstore = [1] * 10 ** 6\nfor i in range(2, 10 ** 6):\n    store[i] = store[i - 1] % NN * (i % NN) % NN\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    total = 0\n    for i in arr:\n        total += store[i] % NN\n    print(int(total % NN))", "NN = 1000000007\nstore = [1] * 10 ** 6\nfor i in range(2, 10 ** 6):\n    store[i] = store[i - 1] % NN * (i % NN) % NN\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    total = 0\n    for i in arr:\n        total += store[i] % NN\n    print(int(total % NN))", "f = [1]\nfor i in range(1, 10 ** 6):\n    f.append(f[i - 1] * i % 1000000007)\nfor _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    sum = 0\n    for i in c:\n        sum += f[i]\n    print(sum % 1000000007)", "aux = [0] * 1000001\naux[0] = 1\ni = 1\nfor _ in range(1000000):\n    aux[i] = aux[i - 1] * i % 1000000007\n    i += 1\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        ans = (ans + aux[arr[i]]) % 1000000007\n    print(ans)", "fact = [1]\nfor i in range(1, 10 ** 6 + 1):\n    fact.append(fact[i - 1] * i % (10 ** 9 + 7))\nt = int(input())\nfor item in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in arr:\n        s = s + fact[i]\n    print(s % 1000000007)", "MOD = 10 ** 9 + 7\nMAX = 10 ** 6 + 1\nfac = [1, 1]\nfor i in range(2, MAX):\n    fac += [fac[-1] * i % MOD]\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = 0\n    for i in arr:\n        res = (res + fac[i]) % MOD\n    print(res)", "fact = [1]\nfor i in range(1, 10 ** 6 + 1):\n    fact.append(fact[i - 1] * i % (10 ** 9 + 7))\nt = int(input())\nfor item in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in arr:\n        s = s + fact[i]\n    print(s % 1000000007)", "fact = [1]\nfor i in range(1, 10 ** 6 + 1):\n    fact.append(fact[i - 1] * i % (10 ** 9 + 7))\nt = int(input())\nfor item in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in arr:\n        s = s + fact[i]\n    print(s % 1000000007)", "dp = {}\ndp[1] = 1\nfor i in range(2, 1000000 + 1):\n    dp[i] = dp[i - 1] * i % (10 ** 9 + 7)\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in arr:\n        s = (s + dp[i]) % (10 ** 9 + 7)\n    print(s % (10 ** 9 + 7))\n    t -= 1", "dp = {}\ndp[1] = 1\nfor j in range(2, 1000000 + 1):\n    dp[j] = dp[j - 1] * j % (10 ** 9 + 7)\nfor i in range(int(input())):\n    a = int(input())\n    l = [int(x) for x in input().split()]\n    c = max(l)\n    ans = 0\n    for j in l:\n        ans = ans + dp[j]\n    print(ans % (10 ** 9 + 7))", "A = {}\nA[1] = 1\nM = pow(10, 9) + 7\nfor i in range(2, 1000001):\n    A[i] = A[i - 1] * i % M\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    B = list(map(int, input().split()))\n    sum = 0\n    for k in B:\n        sum += A[k]\n    print(sum % M)", "x = 1000000007\nd = dict()\n\ndef factorial(n):\n    temp = 1\n    for i in range(1, n + 1):\n        temp *= i\n        temp = temp % x\n        d[i] = temp\n    return temp\nt = int(input())\nfor _ in range(t):\n    answer = 0\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    for i in arr:\n        if i in d:\n            answer += d[i] % x\n        else:\n            temp2 = factorial(i)\n            answer += temp2 % x\n        answer = answer % x\n    print(answer)", "x = 1000000007\nd = dict()\n\ndef factorial(n):\n    temp = 1\n    for i in range(1, n + 1):\n        temp *= i\n        temp = temp % x\n        d[i] = temp\n    return temp\nt = int(input())\nfor _ in range(t):\n    t -= 1\n    answer = 0\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    for i in arr:\n        if i in d:\n            answer += d[i] % x\n        else:\n            temp2 = factorial(i)\n            answer += temp2 % x\n        answer = answer % x\n    print(answer)", "x = 1000000007\nd = dict()\n\ndef factorial(n):\n    temp = 1\n    for i in range(1, n + 1):\n        temp *= i\n        temp = temp % x\n        d[i] = temp\n    return temp\nt = int(input())\nwhile t > 0:\n    t -= 1\n    answer = 0\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    for i in arr:\n        if i in d:\n            answer += d[i] % x\n        else:\n            temp2 = factorial(i)\n            answer += temp2 % x\n        answer = answer % x\n    print(answer)", "x = 1000000007\nd = dict()\n\ndef factorial(n):\n    temp = 1\n    for i in range(1, n + 1):\n        temp *= i\n        d[i] = temp\n        temp = temp % x\n    return temp\nt = int(input())\nwhile t > 0:\n    t -= 1\n    answer = 0\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    for i in arr:\n        if i in d:\n            answer += d[i] % x\n        else:\n            temp2 = factorial(i)\n            answer += temp2 % x\n        answer = answer % x\n    print(answer)", "A = {}\nA[1] = 1\nM = pow(10, 9) + 7\nfor i in range(2, 1000001):\n    A[i] = A[i - 1] * i % M\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    B = list(map(int, input().split()))\n    sum = 0\n    for k in B:\n        sum += A[k]\n    print(sum % M)", "MOD = 10 ** 9 + 7\nMAX = 10 ** 6 + 1\nfac = [1, 1]\nfor i in range(2, MAX):\n    fac += [fac[-1] * i % MOD]\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = 0\n    for i in arr:\n        res = (res + fac[i]) % MOD\n    print(res)", "import math\nf = []\nx = 1\nfor i in range(1, 1000001):\n    x = x * i % 1000000007\n    f.append(x)\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    ans = 0\n    for i in l:\n        ans = (ans % 1000000007 + f[i - 1]) % 1000000007\n    print(ans)", "f = [1]\nfor i in range(1, 10 ** 6 + 1):\n    f.append(i * f[i - 1])\n    f[i] = f[i] % (10 ** 9 + 7)\nfor i in range(int(input())):\n    balls = int(input())\n    num = [int(i) for i in input().split(' ')]\n    count = 0\n    for j in num:\n        count = count + f[int(j)]\n    print(count % (10 ** 9 + 7))", "import math\nf = []\nx = 1\nfor i in range(1, 1000001):\n    x = x * i % 1000000007\n    f.append(x)\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    ans = 0\n    for i in l:\n        ans = (ans % 1000000007 + f[i - 1]) % 1000000007\n    print(ans)", "f = [1]\nfor i in range(1, 10 ** 6 + 1):\n    f.append(i * f[i - 1])\n    f[i] = f[i] % (10 ** 9 + 7)\nfor i in range(int(input())):\n    balls = int(input())\n    num = [int(i) for i in input().split(' ')]\n    count = 0\n    for j in num:\n        count = count + f[int(j)]\n    print(count % (10 ** 9 + 7))", "f = [1]\nfor i in range(1, 10 ** 6 + 1):\n    f.append(i * f[i - 1])\n    f[i] = f[i] % (10 ** 9 + 7)\nfor i in range(int(input())):\n    balls = int(input())\n    num = [int(i) for i in input().split(' ')]\n    count = 0\n    for j in num:\n        count = count + f[int(j)]\n    print(count % (10 ** 9 + 7))", "f = [1]\nfor i in range(1, 10 ** 6 + 1):\n    f.append(i * f[i - 1])\n    f[i] = f[i] % (10 ** 9 + 7)\nfor i in range(int(input())):\n    balls = int(input())\n    num = [int(i) for i in input().split(' ')]\n    count = 0\n    for j in num:\n        count = count + f[int(j)]\n    print(count % (10 ** 9 + 7))", "t = int(input())\nd = {}\ns = 1\nfor x in range(1, 1000001):\n    s *= x\n    s = s % 1000000007\n    d[x] = s\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    su = 0\n    for x in l:\n        su += d[x]\n    print(su % 1000000007)", "k = 10 ** 9 + 7\nd = {1: 1}\nfor i in range(2, 1000001):\n    d[i] = i % k * d[i - 1] % k\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    s = 0\n    l = [int(x) for x in input().split()]\n    for i in l:\n        s += d[i] % k\n    print(s % k)", "f = [1]\nfor i in range(1, 10 ** 6 + 1):\n    f.append(i * f[i - 1])\n    f[i] = f[i] % (10 ** 9 + 7)\nfor i in range(int(input())):\n    balls = int(input())\n    num = [int(i) for i in input().split(' ')]\n    count = 0\n    for j in num:\n        count = count + f[int(j)]\n    print(count % (10 ** 9 + 7))", "f = [1]\nfor i in range(1, 10 ** 6 + 1):\n    f.append(i * f[i - 1])\n    f[i] = f[i] % (10 ** 9 + 7)\nfor i in range(int(input())):\n    n = int(input())\n    lst = input().split()\n    count = 0\n    for j in lst:\n        count = count + f[int(j)]\n    print(count % (10 ** 9 + 7))", "facl = [1]\nfor i in range(1, 1000001):\n    facl.append(i * facl[i - 1])\n    facl[i] %= 1000000007\nfor test in range(int(input())):\n    n = int(input())\n    a = input().split()\n    sum = 0\n    for i in a:\n        sum += facl[int(i)]\n    print(sum % 1000000007)", "ls = [1]\nfor i in range(1, 1000001):\n    ls.append(i * ls[i - 1])\n    ls[i] %= 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    s = 0\n    for i in a:\n        s += ls[i]\n    print(s % 1000000007)", "n = 1000001\nm = 1000000007\nlist2 = [0, 1]\nfor i in range(2, n):\n    list2.append(list2[i - 1] * i % m)\nfor _ in range(int(input())):\n    a = int(input())\n    list1 = list(map(int, input().split(' ')[:a]))\n    sum1 = 0\n    for i in list1:\n        if i != 1:\n            b = list2[i]\n            sum1 = sum1 + b\n        else:\n            sum1 = sum1 + 1\n    print(sum1 % m)", "n = 1000001\nm = 1000000007\nlist2 = [0, 1]\nfor i in range(2, n):\n    list2.append(list2[i - 1] * i % m)\nfor _ in range(int(input())):\n    a = int(input())\n    list1 = list(map(int, input().split(' ')[:a]))\n    sum1 = 0\n    for i in list1:\n        if i != 1:\n            b = list2[i]\n            sum1 = sum1 + b\n        else:\n            sum1 = sum1 + 1\n    print(sum1 % m)", "fact = [1]\nfor i in range(1, 1000001):\n    fact.append(i * fact[i - 1])\n    fact[i] %= 1000000007\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = 0\n    for i in l:\n        p = p + fact[i]\n    print(p % 1000000007)", "fact = [1]\nfor i in range(1, 1000001):\n    fact.append(i * fact[i - 1])\n    fact[i] %= 1000000007\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = 0\n    for i in l:\n        p = p + fact[i]\n    print(p % 1000000007)", "fact = [1]\nfor k in range(1, 1000001):\n    fact.append(k * fact[k - 1])\n    fact[k] %= 1000000007\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for u in range(n):\n        ans += fact[l[u]]\n    print(ans % 1000000007)", "(mod, lookup, l) = (10 ** 9 + 7, dict(), 1)\nfor i in range(1, 10 ** 6 + 1):\n    l = l * i % mod\n    lookup[i] = l\nfor _ in range(int(input())):\n    (n, ans) = (int(input()), 0)\n    arr = list(map(int, input().split()))\n    for i in arr:\n        ans = (ans + lookup[i]) % mod\n    print(ans)", "x = 1000000007\nd = dict()\n\ndef factorial(n):\n    temp = 1\n    for i in range(1, n + 1):\n        temp *= i\n        d[i] = temp\n        temp = temp % x\n    return temp\nt = int(input())\nwhile t > 0:\n    t -= 1\n    answer = 0\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    for i in arr:\n        if i in d:\n            answer += d[i] % x\n        else:\n            temp2 = factorial(i)\n            answer += temp2 % x\n        answer = answer % x\n    print(answer)", "x = 1000000007\nd = dict()\n\ndef factorial(n):\n    temp = 1\n    for i in range(1, n + 1):\n        temp *= i\n        d[i] = temp\n        temp = temp % x\n    return temp\nt = int(input())\nwhile t > 0:\n    t -= 1\n    answer = 0\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    for i in arr:\n        if i in d:\n            answer += d[i] % x\n        else:\n            temp2 = factorial(i)\n            answer += temp2 % x\n        answer = answer % x\n    print(answer)", "dp = [0] * (10 ** 6 + 1)\ndp[0] = 1\nmod = 10 ** 9 + 7\nfor i in range(1, 10 ** 6 + 1):\n    dp[i] = dp[i - 1] * i % mod\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    res = 0\n    for i in l:\n        res += dp[i] % mod\n    print(res % mod)", "data = [None] * (10 ** 6 + 1)\ndata[0] = 1\nfor i in range(1, 10 ** 6 + 1):\n    data[i] = data[i - 1] % 1000000007 * i\nt = int(input())\ni = 0\nwhile i < t:\n    N = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for j in a:\n        count = count + data[j]\n    print(count % 1000000007)\n    i = i + 1", "fact = [1]\nfor k in range(1, 1000001):\n    fact.append(k * fact[k - 1])\n    fact[k] %= 1000000007\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for u in range(n):\n        ans += fact[l[u]]\n    print(ans % 1000000007)", "mod = 1000000007\nd = {1: 1}\nfor i in range(2, 10000001):\n    d[i] = d[i - 1] % mod * i\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in l:\n        ans += d[i] % mod\n    print(ans % mod)", "mod = 10 ** 9 + 7\ndata = [0] * (10 ** 6 + 1)\ndata[0] = 1\nfor i in range(1, 10 ** 6 + 1):\n    data[i] = data[i - 1] % mod * i\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for each in a:\n        ans += data[each] % mod\n    print(ans % mod)", "p = 1\nd = {}\nd[1] = 1\na = 10 ** 9 + 7\nfor i in range(2, 1000001):\n    d[i] = d[i - 1] % a * i\nfor tc in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in l:\n        c += d[i] % a\n        c %= a\n    print(c)", "mod = 10 ** 9 + 7\nd = dict()\nd[1] = 1\nfor i in range(2, 1000001):\n    d[i] = d[i - 1] * i % mod\nt = int(input())\nfor _ in range(t):\n    k = input()\n    bag = list((int(i) for i in input().split()))\n    sum = 0\n    l = map(int, bag)\n    for i in bag:\n        sum += d[i]\n        sum = sum % mod\n    print(sum % mod)", "a = 10 ** 9 + 7\nl = []\nl.append(1)\nfor i in range(2, 1000001):\n    l.append(i * l[i - 2] % a)\nt = int(input())\nwhile t:\n    n = int(input())\n    s = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        c += l[s[i] - 1]\n        c = c % a\n    print(c % a)\n    t -= 1", "d = {}\nd[1] = 1\nfor i in range(2, 1000001):\n    d[i] = d[i - 1] * i % 1000000007\nn = int(input())\nfor j in range(n):\n    m = int(input())\n    arr = list((int(i) for i in input().split()))\n    s = 0\n    for i in arr:\n        s += d[i]\n        s %= 1000000007\n    print(s % 1000000007)", "fact = [1]\nfor k in range(1, 1000001):\n    fact.append(k * fact[k - 1])\n    fact[k] %= 1000000007\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for u in range(n):\n        ans += fact[l[u]]\n    print(ans % 1000000007)", "a = 10 ** 9 + 7\nl = []\nl.append(1)\nfor i in range(2, 1000001):\n    l.append(i * l[i - 2] % a)\nt = int(input())\nwhile t:\n    n = int(input())\n    s = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        c += l[s[i] - 1]\n        c = c % a\n    print(c % a)\n    t -= 1", "a = 10 ** 9 + 7\nl = {}\nl[1] = 1\nfor i in range(2, 1000001):\n    l[i] = i * l[i - 1] % a\nt = int(input())\nwhile t:\n    n = int(input())\n    s = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        c += l[s[i]]\n        c = c % a\n    print(c % a)\n    t -= 1", "mod = 10 ** 9 + 7\ndp = {}\ndp[1] = 1\nfor i in range(2, 1000000 + 1):\n    dp[i] = i * dp[i - 1] % mod\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans += dp[arr[i]]\n        ans %= mod\n    print(ans % mod)", "v = 10 ** 9 + 7\nf = [1]\nfor i in range(1, 1000001):\n    f.append(i * f[i - 1])\n    f[i] = f[i] % v\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    c = 0\n    for j in a:\n        c = c + f[j] % v\n    print(c % v)", "fact = [1]\nfor k in range(1, 1000001):\n    fact.append(k * fact[k - 1])\n    fact[k] %= 1000000007\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for u in range(n):\n        ans += fact[l[u]]\n    print(ans % 1000000007)", "from collections import Counter, UserString\nmod = lambda n: n % (10 ** 9 + 7)\nfc_ = [1]\nfor i in range(1, 1000001):\n    fc_.append(i * fc_[i - 1])\n    fc_[i] = mod(fc_[i])\n\ndef fact(n):\n    return fc_[n]\n\ndef printm(n):\n    print(mod(n))\n\ndef yn(b, caps=False):\n    if b:\n        returning = 'Yes'\n    else:\n        returning = 'No'\n    if caps:\n        return returning.upper()\n    return returning\n\ndef isPrime(n):\n    if n > 1:\n        for i in range(2, int(n ** 0.5) + 1):\n            if not n % i:\n                return False\n        else:\n            return True\n    return True\n\ndef decimal(n):\n    return int(ans) + int(int(ans) != ans)\n\nclass mutableStr(UserString):\n\n    def ins(self, n, s):\n        if n < 0:\n            self.data = self.data = ''.join(list(self.data)[:n + 1]) + s + ''.join(list(self.data)[n + 1:])\n        else:\n            self.data = ''.join(list(self.data)[:n]) + s + ''.join(list(self.data)[n:])\n\n    def rem(self, s):\n        self.data = self.data.replace(s, '')\nalphabetOrd = [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]\nalphabet = list('abcdefghijklmnopqrstuvwxyz')\nr2 = lambda n: range(1, n + 1)\nalph = lambda s: s.isalpha()\nsl = lambda l: list(set(l))\ninf = float('inf')\nsoi = lambda : sorted(input())\nii = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nsi = lambda : mutableStr(input())\nlsi = lambda : list(input())\nsepi = lambda : map(int, input().split())\nseti = lambda : set(map(int, input().split()))\nfor t in range(int(input())):\n    numOfBalls = ii()\n    ballValues = li()\n    postNumOfBalls = 0\n    for dissociation in ballValues:\n        postNumOfBalls += fact(dissociation)\n    printm(postNumOfBalls)", "from collections import Counter, UserString\nmod = lambda n: n % (10 ** 9 + 7)\nfc_ = [1]\nfor i in range(1, 1000001):\n    fc_.append(i * fc_[i - 1])\n    fc_[i] = mod(fc_[i])\n\ndef fact(n):\n    return fc_[n]\n\ndef printm(n):\n    print(mod(n))\n\ndef yn(b, caps=False):\n    if b:\n        returning = 'Yes'\n    else:\n        returning = 'No'\n    if caps:\n        return returning.upper()\n    return returning\n\ndef isPrime(n):\n    if n > 1:\n        for i in range(2, int(n ** 0.5) + 1):\n            if not n % i:\n                return False\n        else:\n            return True\n    return True\n\ndef decimal(n):\n    return int(ans) + int(int(ans) != ans)\n\nclass mutableStr(UserString):\n\n    def ins(self, n, s):\n        if n < 0:\n            self.data = self.data = ''.join(list(self.data)[:n + 1]) + s + ''.join(list(self.data)[n + 1:])\n        else:\n            self.data = ''.join(list(self.data)[:n]) + s + ''.join(list(self.data)[n:])\n\n    def rem(self, s):\n        self.data = self.data.replace(s, '')\nalphabetOrd = [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]\nalphabet = list('abcdefghijklmnopqrstuvwxyz')\nr2 = lambda n: range(1, n + 1)\nalph = lambda s: s.isalpha()\nsl = lambda l: list(set(l))\ninf = float('inf')\nsoi = lambda : sorted(input())\nii = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nsi = lambda : mutableStr(input())\nlsi = lambda : list(input())\nsepi = lambda : map(int, input().split())\nseti = lambda : set(map(int, input().split()))\nfor t in range(int(input())):\n    numOfBalls = ii()\n    ballValues = li()\n    postNumOfBalls = 0\n    for dissociation in ballValues:\n        postNumOfBalls += fact(dissociation)\n    printm(postNumOfBalls)", "from collections import Counter, UserString\nfc_ = [1]\nfor i in range(1, 1000001):\n    fc_.append(i * fc_[i - 1])\n    fc_[i] %= 10 ** 9 + 7\n\ndef fact(n):\n    return fc_[n]\n\ndef yn(b, caps=False):\n    if b:\n        returning = 'Yes'\n    else:\n        returning = 'No'\n    if caps:\n        return returning.upper()\n    return returning\n\ndef isPrime(n):\n    if n > 1:\n        for i in range(2, int(n ** 0.5) + 1):\n            if not n % i:\n                return False\n        else:\n            return True\n    return True\n\ndef decimal(n):\n    return int(ans) + int(int(ans) != ans)\n\nclass mutableStr(UserString):\n\n    def ins(self, n, s):\n        if n < 0:\n            self.data = self.data = ''.join(list(self.data)[:n + 1]) + s + ''.join(list(self.data)[n + 1:])\n        else:\n            self.data = ''.join(list(self.data)[:n]) + s + ''.join(list(self.data)[n:])\n\n    def rem(self, s):\n        self.data = self.data.replace(s, '')\nalphabetOrd = [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]\nalphabet = list('abcdefghijklmnopqrstuvwxyz')\nr2 = lambda n: range(1, n + 1)\nalph = lambda s: s.isalpha()\nmod = lambda n: n % (10 ** 9 + 7)\nsl = lambda l: list(set(l))\ninf = float('inf')\nsoi = lambda : sorted(input())\nii = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nsi = lambda : mutableStr(input())\nlsi = lambda : list(input())\nsepi = lambda : map(int, input().split())\nseti = lambda : set(map(int, input().split()))\nfor t in range(int(input())):\n    numOfBalls = ii()\n    ballValues = li()\n    postNumOfBalls = 0\n    for dissociation in ballValues:\n        postNumOfBalls += fact(dissociation)\n    print(mod(postNumOfBalls))", "fact = [1]\nfor k in range(1, 1000001):\n    fact.append(k * fact[k - 1])\n    fact[k] %= 1000000007\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for u in range(n):\n        ans += fact[l[u]]\n    print(ans % 1000000007)", "fact = [1]\nfor k in range(1, 1000001):\n    fact.append(k * fact[k - 1])\n    fact[k] %= 1000000007\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for u in range(n):\n        ans += fact[l[u]]\n    print(ans % 1000000007)", "t = int(input())\narr = [1] * 1000001\nfor i in range(2, 1000001):\n    arr[i] = arr[i - 1] * i % int(1000000000.0 + 7)\nwhile t:\n    t -= 1\n    n = input()\n    ans = 0\n    li = list(map(int, input().split()))\n    for i in li:\n        ans += arr[i]\n        ans = ans % int(1000000000.0 + 7)\n    print(ans)", "import math\nk = pow(10, 9) + 7\nfact = [1]\nfor i in range(2, 1000000 + 2):\n    fact.append(i * fact[-1] % k)\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    sum = 0\n    for i in range(n):\n        sum += fact[l[i] - 1] % k\n    print(sum % k)", "f = [1]\nfor i in range(2, 1000001):\n    f.append(i * f[-1])\n    f[-1] %= 10 ** 9 + 7\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(sum([f[j - 1] for j in a]) % (10 ** 9 + 7))", "import sys\ntest_cases = int(sys.stdin.readline().strip())\nM = 1000000007\nMAX_A = 1000000\nfactorial_map = {1: 1}\nfor i in range(2, MAX_A + 1):\n    factorial_map[i] = factorial_map[i - 1] * i % M\n\ndef factorial_iter(x):\n    return factorial_map[x]\n\ndef factorial(x):\n    if x in factorial_map:\n        return factorial_map[x]\n    elif x == 1:\n        return 1\n    else:\n        result = x % M * (factorial(x - 1) % M) % M\n        factorial_map[x] = result\n        return result\n\ndef find_count(array_balls):\n    return sum(map(factorial_iter, array_balls)) % M\nfor i in range(test_cases):\n    number_balls = int(sys.stdin.readline().strip())\n    array_balls = map(int, sys.stdin.readline().strip().split())\n    print(find_count(array_balls))", "f = [1]\nfor i in range(2, 1000001):\n    f.append(i * f[-1])\n    f[-1] %= 10 ** 9 + 7\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(sum([f[j - 1] for j in a]) % (10 ** 9 + 7))", "t = int(input())\nm = 1000000000.0 + 7\np = 10000000.0\ns = [1] * 1000007\nfor i in range(2, len(s)):\n    s[i] = s[i - 1] * i % m\nwhile t > 0:\n    sum = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(len(l)):\n        sum += s[l[i]] % m\n    print(int(sum % m))\n    t = t - 1", "ls = [1]\nfor i in range(1, 1000001):\n    ls.append(i * ls[i - 1])\n    ls[i] %= 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    s = 0\n    for i in a:\n        s += ls[i]\n    print(s % 1000000007)", "ls = [1]\nfor i in range(1, 1000001):\n    ls.append(i * ls[i - 1])\n    ls[i] %= 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    s = 0\n    for i in a:\n        s += ls[i]\n    print(s % 1000000007)", "ls = [1]\nfor i in range(1, 1000001):\n    ls.append(i * ls[i - 1])\n    ls[i] %= 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    s = 0\n    for i in a:\n        s += ls[i]\n    print(s % 1000000007)", "ls = [1]\nfor i in range(1, 1000001):\n    ls.append(i * ls[i - 1])\n    ls[i] %= 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    s = 0\n    for i in a:\n        s += ls[i]\n    print(s % 1000000007)", "import math\nfact = [1]\nmod = 10 ** 9 + 7\nfor i in range(1, 10 ** 6 + 1):\n    next_fact = fact[-1] * i\n    fact.append(next_fact % mod)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for x in arr:\n        ans += fact[x]\n        ans %= mod\n    print(ans)", "fact = [1]\nMOD = 10 ** 9 + 7\nfor i in range(1, 10 ** 6 + 1):\n    next_fact = fact[-1] * i\n    fact.append(next_fact % MOD)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(n):\n        ans = (ans + fact[arr[i]]) % MOD\n    print(ans)", "m = 10 ** 9 + 7\nfact = [1]\nfor i in range(1, 10 ** 6 + 1):\n    next = fact[-1] * i\n    fact.append(next % m)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = 0\n    for k in a:\n        d = (d + fact[k]) % m\n    print(d)", "MOD = 10 ** 9 + 7\nfact = [1]\nfor i in range(1, 10 ** 6 + 1):\n    next_fact = fact[-1] * i\n    fact.append(next_fact % MOD)\nt = int(input())\nfor i in range(t):\n    l = int(input())\n    bag = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(l):\n        ans = (ans + fact[bag[i]]) % MOD\n    print(ans)", "mod = 10 ** 9 + 7\nfac = [1, 1]\nfor x in range(2, 10 ** 6 + 1):\n    fac.append(x * fac[x - 1])\n    fac[x] %= mod\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for x in a:\n        ans += fac[x]\n    print(ans % mod)", "import math\nfact = [1]\nfor i in range(1, 1000001):\n    fact.append(fact[i - 1] * i)\n    fact[i] %= 1000000007\nfor i in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    out = 0\n    for i in arr:\n        out = out + fact[i]\n    out = out % 1000000007\n    print(out)", "fact = [1]\nfor k in range(1, 1000001):\n    fact.append(k * fact[k - 1])\n    fact[k] %= 1000000007\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for u in range(n):\n        ans += fact[l[u]]\n    print(ans % 1000000007)", "fact = []\nfact.append(1)\nfact.append(1)\nfor i in range(2, 1000001):\n    fact.append(fact[i - 1] * i)\n    fact[i] %= 1000000007\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = map(int, input().split(' '))\n    res = 0\n    for ele in arr:\n        res += fact[ele]\n    print(res % 1000000007)", "fact = []\nfact.append(1)\nfact.append(1)\nfor i in range(2, 1000001):\n    fact.append(fact[i - 1] * i)\n    fact[i] %= 1000000007\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = map(int, input().split(' '))\n    res = 0\n    for ele in arr:\n        res += fact[ele]\n    print(res % 1000000007)"]