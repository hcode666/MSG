["for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    ans = m % (l + n - 1)\n    if n == 0:\n        print(m)\n    elif ans < l:\n        print(ans)\n    else:\n        print(0)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m, k) = map(int, input().split())\n    if n == 0:\n        print(m)\n        continue\n    v = k + n - 1\n    m %= v\n    if m >= k:\n        m = 0\n    print(m)", "T = int(input())\nwhile T != 0:\n    (n, m, l) = tuple(map(int, input().split()))\n    q = l + n - 1\n    if n == 0:\n        print(m)\n    elif m % q >= l:\n        print(0)\n    else:\n        print(m % q)\n    T -= 1", "T = int(input())\nwhile T != 0:\n    (n, m, l) = tuple(map(int, input().split()))\n    q = l + n - 1\n    if n == 0:\n        print(m)\n    elif m % q >= l:\n        print(0)\n    else:\n        print(m % q)\n    T -= 1", "T = int(input())\nwhile T != 0:\n    (n, m, l) = tuple(map(int, input().split()))\n    q = l + n - 1\n    if n == 0:\n        print(m)\n    elif m % q >= l:\n        print(0)\n    else:\n        print(m % q)\n    T -= 1", "T = int(input())\nwhile T != 0:\n    (n, m, l) = tuple(map(int, input().split()))\n    q = l + n - 1\n    if n == 0:\n        print(m)\n    elif m % q >= l:\n        print(0)\n    else:\n        print(m % q)\n    T -= 1", "def solve(n, m, l):\n    curr = l + n - 1\n    while n > 0 and m // curr != 0:\n        m -= m // curr * curr\n        curr -= 1\n        n -= 1\n    if l <= m <= curr:\n        return 0\n    return m\nfor _ in range(int(input())):\n    (n, m, l) = list(map(int, input().split()))\n    print(solve(n, m, l))", "def solve(n, m, l):\n    curr = l + n - 1\n    while n > 0 and m // curr != 0:\n        m -= m // curr * curr\n        curr -= 1\n        n -= 1\n    if l <= m <= curr:\n        return 0\n    return m\nfor _ in range(int(input())):\n    (n, m, l) = list(map(int, input().split()))\n    print(solve(n, m, l))", "t = int(input())\nfor i in range(t):\n    s = input().split()\n    n = int(s[0])\n    m = int(s[1])\n    l = int(s[2])\n    b = l + n - 1\n    while b >= l:\n        m = m % b\n        b = m\n    print(m)", "t = int(input())\nfor i in range(t):\n    s = input().split()\n    n = int(s[0])\n    m = int(s[1])\n    l = int(s[2])\n    b = l + n - 1\n    while b >= l:\n        m = m % b\n        b = m\n    print(m)", "t = int(input())\nfor i in range(t):\n    s = input().split()\n    n = int(s[0])\n    m = int(s[1])\n    l = int(s[2])\n    b = l + n - 1\n    while b >= l:\n        m = m % b\n        b = m\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    if n == 0:\n        print(m)\n        continue\n    s = l + n - 1\n    while m >= l:\n        m %= s\n        s = m\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    if n == 0:\n        print(m)\n        continue\n    s = l + n - 1\n    while m >= l:\n        m %= s\n        s = m\n    print(m)", "def binarySearch(l, r, x):\n    ans = 0\n    while l <= r:\n        mid = l + (r - l) // 2\n        if mid <= x:\n            l = mid + 1\n            ans = mid\n        else:\n            r = mid - 1\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    x = l + n - 1\n    rem = m\n    while x >= l and rem > 0:\n        ans = binarySearch(l, x, rem)\n        if ans == 0:\n            break\n        rem %= ans\n        x = ans - 1\n    print(rem)", "t = int(input())\nfor tc in range(t):\n    (n, m, l) = map(int, input().split())\n    i = n - 1\n    while i >= 0:\n        m = m % (l + i)\n        i = m - l\n    print(m)", "t = int(input())\nfor i in range(t):\n    (n, m, l) = map(int, input().split())\n    temp = l + n - 1\n    while temp >= l:\n        m = m % temp\n        temp -= 1\n        if temp >= m and m >= l:\n            temp = m\n        else:\n            break\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    i = n + l - 1\n    while i >= l:\n        m = m % i\n        i = m\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    x = l + n - 1\n    while x >= l:\n        m = m % x\n        x = m\n    print(m)", "T = int(input())\nfor _ in range(T):\n    (n, m, l) = map(int, input().split())\n    x = m % (l + n - 1)\n    if n == 0:\n        print(m)\n    elif x < l:\n        print(x)\n    else:\n        print(0)", "def sol():\n    (n, m, l) = map(int, input().split())\n    i = n - 1\n    while i >= 0:\n        m = m % (i + l)\n        i = m - l\n    print(m)\nfor _ in range(int(input())):\n    sol()", "T = int(input())\nfor _ in range(T):\n    (N, M, L) = map(int, input().split())\n    i = N - 1\n    while i >= 0:\n        M = M % (L + i)\n        i = M - L\n    print(M)", "t = int(input())\nfor _ in range(t):\n    (n, m, l) = list(map(int, input().split()))\n    if n == 0:\n        print(m)\n    else:\n        x = m % (n + l - 1)\n        if x < l:\n            print(x)\n        else:\n            print(0)", "for k in range(int(input())):\n    (n, c, s) = map(int, input().split())\n    j = s + n - 1\n    while j >= s:\n        c = c % j\n        j = c\n    print(c)", "a = int(input())\nfor x in range(a):\n    (b, c, d) = map(int, input().split())\n    n = d + (b - 1)\n    l = b - 1\n    while n >= d:\n        c = c % n\n        if c >= d:\n            n = c\n        else:\n            break\n    print(c)", "T = int(input())\nfor _ in range(T):\n    (N, M, L) = map(int, input().split())\n    if N == 0:\n        print(M)\n    else:\n        M = M % (N + L - 1)\n        if M >= L:\n            print(0)\n        else:\n            print(M)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    if n == 0:\n        print(m)\n        continue\n    an = l + n - 1\n    r = m % an\n    if r >= l:\n        print(0)\n    else:\n        print(r)", "def candy():\n    (N, M, L) = map(int, input().split(' '))\n    i = N - 1\n    while i >= 0:\n        M = M % (L + i)\n        i = M - L\n    print(M)\nfor _ in range(int(input())):\n    candy()", "def candy():\n    (N, M, L) = map(int, input().split(' '))\n    i = N - 1\n    while i >= 0:\n        M = M % (L + i)\n        i = M - L\n    print(M)\nfor _ in range(int(input())):\n    candy()", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    if n == 0:\n        print(m)\n    else:\n        val = m % (n + l - 1)\n        print(val if val < l else 0)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    if n == 0:\n        print(m)\n    else:\n        val = m % (n + l - 1)\n        print(val if val < l else 0)", "t = int(input())\nfor i in range(t):\n    (N, M, L) = map(int, input().split())\n    if N == 0:\n        print(M)\n    else:\n        x = N + L - 1\n        d = M % x\n        if d >= L:\n            d = 0\n        print(d)", "t = int(input())\nfor i in range(t):\n    (N, M, L) = map(int, input().split())\n    if N == 0:\n        print(M)\n    else:\n        x = N + L - 1\n        d = M % x\n        if d >= L:\n            d = 0\n        print(d)", "ins = int(input())\nfor i in range(ins):\n    lis = input().split(' ')\n    (N, M, L) = (int(lis[0]), int(lis[1]), int(lis[2]))\n    out = 0\n    for i in range(N, 0, -1):\n        M = M % (L + i - 1)\n        if M < L:\n            break\n        if M >= L and M <= L + i - 2:\n            M = 0\n            break\n    print(M)", "for _ in range(int(input())):\n    (n, choco, l) = [int(x) for x in input().split()]\n    flag = 0\n    for i in range(n - 1, -1, -1):\n        buckets = l + i\n        choco = choco % buckets\n        if choco < l:\n            break\n        if choco >= l and choco <= buckets - 1:\n            choco = 0\n            break\n    print(choco)", "for _ in range(int(input())):\n    (n, choco, l) = [int(x) for x in input().split()]\n    flag = 0\n    for i in range(n - 1, -1, -1):\n        buckets = l + i\n        choco = choco % buckets\n        if choco < l:\n            break\n        if choco >= l and choco <= buckets - 1:\n            choco = 0\n            break\n    print(choco)", "for i in range(int(input())):\n    (n, m, l) = map(int, input().split(' '))\n    for i in range(n - 1, -1, -1):\n        x = l + i\n        m = m % x\n        if m < l:\n            break\n        elif m >= l and m <= x - 1:\n            m = 0\n            break\n    print(m)", "for _ in range(int(input())):\n    (n, choco, l) = [int(x) for x in input().split()]\n    flag = 0\n    for i in range(n - 1, -1, -1):\n        buckets = l + i\n        choco = choco % buckets\n        if choco < l:\n            break\n        if choco >= l and choco <= buckets - 1:\n            choco = 0\n            break\n    print(choco)", "t = int(input())\nfor z in range(t):\n    (N, M, L) = map(int, input().split())\n    if N == 0:\n        print(M)\n    else:\n        x = N + L - 1\n        r = M % x\n        if r >= L:\n            r = 0\n        print(r)", "t = int(input())\nfor z in range(t):\n    (N, M, L) = map(int, input().split())\n    if N == 0:\n        print(M)\n    else:\n        x = N + L - 1\n        r = M % x\n        if r >= L:\n            r = 0\n        print(r)", "for _ in range(int(input())):\n    (n, m, l) = (int(i) for i in input().split())\n    if n == 0:\n        print(m)\n    else:\n        s = l + n - 1\n        ans = m % s\n        if ans >= l:\n            print(0)\n        else:\n            print(ans)", "for _ in range(int(input())):\n    (n, m, l) = (int(i) for i in input().split())\n    if n == 0:\n        print(m)\n    else:\n        s = l + n - 1\n        ans = m % s\n        if ans % 2 == 0:\n            if ans >= l:\n                print(0)\n            else:\n                print(ans)\n        elif ans >= l:\n            print(0)\n        else:\n            print(ans)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    i = n - 1\n    while i >= 0:\n        m = m % (l + i)\n        i = m - l\n    print(m)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    candiesLeft = m\n    i = l + n - 1\n    while i > l - 1:\n        candiesLeft -= i * (candiesLeft // i)\n        i = candiesLeft\n    print(candiesLeft)", "t = int(input())\nwhile t:\n    t -= 1\n    k = 0\n    (n, m, l) = map(int, input().strip().split())\n    if n > 0:\n        k = l + n - 1\n        m %= k\n        if m > l - 1 and m < k:\n            m = 0\n    print(m)", "for t in range(int(input())):\n    (n, m, l) = [int(x) for x in input().rstrip().split()]\n    if n == 0:\n        print(m)\n    else:\n        x = m % (l + n - 1)\n        if x < l:\n            print(x)\n        else:\n            print(0)", "T = int(input())\nfor _ in range(T):\n    (N, M, L) = [int(x) for x in input().split()]\n    if N == 0:\n        print(M)\n    else:\n        remainder = M % (N + L - 1)\n        if remainder < L:\n            print(remainder)\n        else:\n            print(0)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    if n == 0:\n        print(m)\n    elif m % (n + l - 1) < l:\n        print(m % (n + l - 1))\n    else:\n        print(0)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    if n == 0:\n        print(m)\n    elif m % (n + l - 1) < l:\n        print(m % (n + l - 1))\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    if a == 0:\n        print(b)\n    else:\n        x = b % (a + c - 1)\n        if x < c:\n            print(x)\n        else:\n            print(0)", "def a(m, l, n):\n    if m >= l + n - 1:\n        return m % (l + n - 1)\n    elif m < l:\n        return m\n    elif m == l:\n        return 0\n    elif m > l and m < l + n - 1:\n        return 0\nt = int(input())\nwhile t:\n    (n, m, l) = input().split()\n    n = int(n)\n    l = int(l)\n    m = int(m)\n    if n == 0:\n        print(m)\n    else:\n        while m >= l:\n            m = a(m, l, n)\n        print(m)\n    t -= 1", "for i in range(int(input())):\n    (n, m, l) = list(map(int, input().split()))\n    if not n:\n        print(m)\n        continue\n    m %= l + n - 1\n    if m >= l:\n        print(0)\n    else:\n        print(m)", "def inp():\n    return int(input())\n\ndef mp():\n    return map(int, input().split())\n\ndef lst():\n    return list(map(int, input().split()))\nT = int(input())\nfor _ in range(T):\n    (n, m, l) = mp()\n    if n == 0:\n        print(m)\n    else:\n        m = m % (l + n - 1)\n        if m >= l:\n            print(0)\n        else:\n            print(m)", "for _ in range(int(input())):\n    (n, m, l) = [int(i) for i in input().split()]\n    buckets = l + n - 1\n    while buckets >= l and m >= buckets:\n        m %= buckets\n        buckets -= 1\n    if m >= l and m <= buckets:\n        print(0)\n    else:\n        print(m)", "def dis(n, m, l):\n    i = n - 1\n    while i >= 0:\n        m = m % (l + i)\n        i = m - l\n    print(m)\ntry:\n    for _ in range(int(input())):\n        (n, m, l) = map(int, input().split())\n        dis(n, m, l)\nexcept:\n    pass", "t = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    v = m % (l + n - 1)\n    if n == 0:\n        print(m)\n    elif v < l:\n        print(v)\n    else:\n        print(0)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m, l) = list(map(int, input().split()))\n    x = l + n - 1\n    rem = m % x\n    res = rem\n    if n == 0:\n        print(m)\n        continue\n    if rem >= l:\n        res = 0\n    print(res)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m, l) = list(map(int, input().split()))\n    i = l + n - 1\n    while i >= l:\n        m = m % i\n        if i >= m:\n            i = m\n        else:\n            i -= 1\n    print(m)", "T = int(input())\nfor i in range(T):\n    (N, M, L) = map(int, input().split())\n    n = L + N - 1\n    ans = M\n    while n >= L:\n        ans = ans % n\n        if n >= ans:\n            n = ans\n        else:\n            n -= 1\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, M, L) = map(int, input().split())\n    n = L + N - 1\n    ans = M\n    while n >= L:\n        ans = ans % n\n        if n >= ans:\n            n = ans\n        else:\n            n -= 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m, l) = list(map(int, input().split()))\n    if n == 0:\n        print(m)\n        continue\n    x = l + n - 1\n    rem = m % x\n    res = rem\n    if rem >= l:\n        res = 0\n    print(res)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    if n == 0:\n        print(m)\n        continue\n    if m % (n + l - 1) < l:\n        print(m % (n + l - 1))\n    else:\n        print(0)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    i = n - 1\n    while i >= 0:\n        m %= l + i\n        i = m - l\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (n, c, l) = map(int, input().split())\n    if n == 0:\n        print(c)\n        continue\n    c %= l + n - 1\n    if c >= l and c < l + n - 1:\n        print(0)\n    else:\n        print(c)", "t = int(input())\nfor _ in range(t):\n    (n, c, l) = map(int, input().split())\n    if n == 0:\n        print(c)\n        continue\n    c %= l + n - 1\n    if c >= l and c < l + n - 1:\n        print(0)\n    else:\n        print(c)", "t = int(input())\nfor _ in range(t):\n    (n, c, l) = map(int, input().split())\n    i = n - 1\n    while i >= 0:\n        c = c % (l + i)\n        i = c - l\n    print(c)", "t = int(input())\nwhile t:\n    (n, m, l) = map(int, input().split())\n    i = n - 1\n    while i >= 0:\n        m = m % (l + i)\n        i = m - l\n    print(m)\n    t -= 1", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m, l) = map(int, input().split())\n    if m == 0 or l == 1:\n        print(0)\n        continue\n    if n == 0:\n        print(m)\n        continue\n    modulo = m % (l + n - 1)\n    if modulo >= l:\n        print(0)\n        continue\n    print(modulo)", "t = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    pre = l + n - 1\n\n    def solve(n, m, l):\n        if n == 0:\n            return m\n        if m == 0:\n            return 0\n        if m % (l + n - 1) == 0 or (n > 1 and m % (l + n - 1) >= l):\n            return 0\n        return m % (l + n - 1)\n    print(solve(n, m, l))", "t = int(input())\nfor i in range(t):\n    a = list(map(int, input().split()))\n    n = a[0]\n    m = a[1]\n    l = a[2]\n    p = l + (n - 1)\n    if n == 0:\n        print(m)\n    else:\n        m = m % p\n        if m >= l:\n            print(0)\n        else:\n            print(m)", "t = int(input())\nwhile t > 0:\n    (n, m, l) = map(int, input().split())\n    i = n - 1\n    while i >= 0:\n        m = m % (l + i)\n        i = m - l\n    print(m)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, c, m) = map(int, input().split())\n    if n == 0:\n        print(c)\n        continue\n    k = m + n - 1\n    if c >= k:\n        c %= k\n    if c in range(m, m + n - 1):\n        print(0)\n    else:\n        print(c)", "t = int(input())\nfor _ in range(t):\n    (n, c, m) = map(int, input().split())\n    if n == 0:\n        print(c)\n        continue\n    k = m + n - 1\n    if c >= k:\n        c %= k\n    if c in range(m, m + n - 1):\n        print(0)\n    else:\n        print(c)", "for _ in range(int(input())):\n    (n, m, l) = [int(a) for a in input().split()]\n    z = l + n - 1\n    if n == 0:\n        print(m)\n        continue\n    while m > 0 and m >= l:\n        val = m % z\n        if val <= z - 1:\n            z = val\n        m = val\n    print(m)", "t = int(input())\nwhile t > 0:\n    (n, m, l) = map(int, input().split())\n    if m == 0:\n        print(0)\n    elif n == 0:\n        print(m)\n    elif m % (l + n - 1) < l:\n        print(m % (l + n - 1))\n    else:\n        print(0)\n    t -= 1", "for z in range(int(input())):\n    (N, M, L) = map(int, input().split())\n    tmp = N + L - 1\n    if N == 0:\n        print(M)\n    elif M % tmp < L:\n        print(M % tmp)\n    else:\n        print(0)", "for tc in range(int(input())):\n    (N, M, L) = map(int, input().split())\n    i = N - 1\n    while i >= 0:\n        M = M % (L + i)\n        i = M - L\n    print(M)", "for i in range(int(input())):\n    (f, c, b) = map(int, input().split())\n    lastb = min(b + f - 1, c)\n    while c >= b and lastb >= b:\n        give = lastb * (c // lastb)\n        c -= give\n        lastb = min(lastb - 1, c)\n    print(c)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    lfc = n + l - 1\n    if n == 0:\n        print(m)\n    else:\n        m = m % lfc\n        if m >= l:\n            print(0)\n        else:\n            print(m)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    lfc = n + l - 1\n    if n == 0:\n        print(m)\n    else:\n        m = m % lfc\n        if m >= l:\n            print(0)\n        else:\n            print(m)", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    buckets_n = n + l - 1\n    if n == 0:\n        print(m)\n    elif m < l:\n        print(m)\n    elif m <= buckets_n:\n        print(0)\n    else:\n        rem = m % buckets_n\n        if rem == 0 or rem >= l:\n            print(0)\n        else:\n            print(rem)", "for i in range(int(input())):\n    (n_friend, n_candies, min_bucket) = map(int, input().split())\n    if n_friend == 0 or n_candies == 0:\n        print(n_candies)\n    else:\n        n_candies %= n_friend + min_bucket - 1\n        if n_candies >= min_bucket:\n            print(0)\n        elif n_candies < min_bucket:\n            print(n_candies)", "from math import inf\nfrom collections import *\nimport math, os, sys, heapq, bisect, random, threading\nfrom functools import lru_cache\nfrom itertools import *\n\ndef inp():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef out(var):\n    sys.stdout.write(str(var))\n\ndef inpu():\n    return int(inp())\n\ndef lis():\n    return list(map(int, inp().split()))\n\ndef stringlis():\n    return list(map(str, inp().split()))\n\ndef sep():\n    return map(int, inp().split())\n\ndef strsep():\n    return map(str, inp().split())\n\ndef fsep():\n    return map(float, inp().split())\n(M, M1) = (1000000007, 998244353)\n\ndef main():\n    how_much_noob_I_am = 1\n    how_much_noob_I_am = inpu()\n    for _ in range(how_much_noob_I_am):\n        (n, m, l) = sep()\n        if n == 0:\n            print(m)\n            continue\n        start = l\n        end = n + l - 1\n        rem = m % end\n        if rem >= start:\n            print(0)\n        else:\n            print(rem)\nmain()", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    low = l\n    high = l + n - 1\n    while low <= high:\n        if m < high:\n            high = m\n        else:\n            m = m % high\n            high = m\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (n, c, m) = map(int, input().split())\n    if n == 0:\n        print(c)\n        continue\n    k = m + n - 1\n    if c >= k:\n        c %= k\n    if c in range(m, m + n - 1):\n        print(0)\n    else:\n        print(c)", "def solu(n, m, l):\n    i = n - 1\n    while i >= 0:\n        m = m % (l + i)\n        i = m - l\n    print(m)\nfor _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    solu(n, m, l)", "t = int(input())\nfor _ in range(t):\n    (n, m, l) = map(int, input().split())\n    x = m % (n + l - 1)\n    if n == 0:\n        print(m)\n    elif x >= l:\n        print(0)\n    else:\n        print(x)", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    n = inputs[0]\n    m = inputs[1]\n    l = inputs[2]\n    start = l + n - 1\n    if start > m:\n        start = m\n    if m > 0 and n > 0:\n        i = start\n        while i >= l:\n            if m >= i and i != 0:\n                m = m % i\n                i = m\n            else:\n                break\n        print(m)\n    else:\n        print(m)", "t = int(input())\nwhile t:\n    (n, m, l) = [int(i) for i in input().split()]\n    flag = 0\n    while n > 0:\n        m = m % (l + n - 1)\n        if m == 0:\n            print(m)\n            flag = 1\n            break\n        elif m < l:\n            print(m)\n            flag = 1\n            break\n        n = m - l + 1\n    if flag == 0:\n        print(m)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, m, l) = [int(i) for i in input().split()]\n    flag = 0\n    while n > 0:\n        m = m % (l + n - 1)\n        if m == 0:\n            print(m)\n            flag = 1\n            break\n        elif m < l:\n            print(m)\n            flag = 1\n            break\n        n = m - l + 1\n    if flag == 0:\n        print(m)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, m, l) = [int(i) for i in input().split()]\n    flag = 0\n    i = n - 1\n    while i >= 0:\n        m = m % (l + i)\n        if m == 0:\n            print(m)\n            flag = 1\n            break\n        elif m < l:\n            print(m)\n            flag = 1\n            break\n        i = m - l\n    if flag == 0:\n        print(m)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, m, l) = [int(i) for i in input().split()]\n    flag = 0\n    i = n - 1\n    while i >= 0:\n        m = m % (l + i)\n        i = m - l\n    if flag == 0:\n        print(m)\n    t -= 1", "for i in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    i = n - 1\n    while i >= 0:\n        m = m % (l + i)\n        i = m - l\n    print(m)", "no_of_test_cases = int(input())\n\ndef main():\n    for i in range(no_of_test_cases):\n        (n, m, l) = input().split()\n        (n, m, l) = (int(n), int(m), int(l))\n        r = print_result(n, m, l)\n        print(r)\n\ndef print_result(n, m, l):\n    if n == 0:\n        return m\n    candies = m\n    low = l\n    high = l + n - 1\n    while True:\n        if candies > high:\n            candies = candies % high\n            continue\n        elif low <= candies <= high:\n            return 0\n        else:\n            return candies\nmain()", "no_of_test_cases = int(input())\n\ndef main():\n    for i in range(no_of_test_cases):\n        (n, m, l) = input().split()\n        (n, m, l) = (int(n), int(m), int(l))\n        r = print_result(n, m, l)\n        print(r)\n\ndef print_result(n, m, l):\n    if n == 0:\n        return m\n    candies = m\n    low = l\n    high = l + n - 1\n    while True:\n        if candies > high:\n            candies = candies % high\n            continue\n        elif low <= candies <= high:\n            return 0\n        else:\n            return candies\nmain()", "t = int(input())\nfor i in range(t):\n    (n, m, l) = map(int, input().split())\n    a = l + n - 1\n    k = m % a\n    if n == 0:\n        print(m)\n    elif k < l:\n        print(k)\n    else:\n        print('0')", "for _ in range(int(input())):\n    (n, m, l) = map(int, input().split())\n    low = l\n    high = l + n - 1\n    while high >= low:\n        if high > m:\n            high = m\n        else:\n            m = m % high\n            high = m\n    print(m)", "T = int(input())\nwhile T:\n    (F, C, B) = list(map(int, input().split()))\n    i = F - 1\n    while i >= 0:\n        C = C % (B + i)\n        i = C - B\n    print(C)\n    T -= 1", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    (x, y, l) = map(int, input().split())\n    if x == 0 or y == 0:\n        print(y)\n    elif y % (x + l - 1) >= l:\n        print(0)\n    else:\n        print(y % (x + l - 1))", "for _ in range(int(input())):\n    (N, M, L) = map(int, input().split())\n    x = L + N - 1\n    r = M % x\n    if N == 0:\n        print(M)\n    elif r < L:\n        print(r)\n    else:\n        print(0)", "def solve(n, m, l):\n    candies = m\n    i = n - 1\n    while i >= 0 and candies > 0:\n        left = candies % (i + l)\n        candies = left\n        i = left - l\n    return candies\n\ndef main():\n    for _ in range(int(input())):\n        (n, m, l) = map(int, input().split())\n        res = solve(n, m, l)\n        print(res)\nmain()"]