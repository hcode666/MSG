["mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    bstr = [a for a in input()]\n    n = len(bstr)\n    ali = [0] * (n + 1)\n    ali[0] = 1\n    ali[1] = 1\n    for i in range(1, n):\n        if bstr[i] != bstr[i - 1]:\n            ali[i + 1] = (ali[i] + ali[i - 1]) % mod\n        else:\n            ali[i + 1] = ali[i]\n    print(ali[n] % mod)", "mod = 998244353\nfor _ in range(int(input())):\n    bstr = [a for a in input()]\n    n = len(bstr)\n    ali = [0] * (n + 2)\n    ali[0] = 1\n    ali[1] = 1\n    for i in range(1, n):\n        if bstr[i] != bstr[i - 1]:\n            ali[i + 1] = (ali[i] + ali[i - 1]) % mod\n        else:\n            ali[i + 1] = ali[i]\n    print(ali[n] % mod)", "for f in range(int(input())):\n    shiv = input().strip()\n    N = len(shiv)\n    L = [0] * (N + 1)\n    L[N] = 1\n    L[N - 1] = 1\n    for bhav in range(N - 2, -1, -1):\n        if shiv[bhav] != shiv[bhav + 1]:\n            L[bhav] = (L[bhav + 1] + L[bhav + 2]) % 998244353\n        else:\n            L[bhav] = L[bhav + 1]\n    print(L[0] % 998244353)", "for f in range(int(input())):\n    shiv = input().strip()\n    N = len(shiv)\n    L = [0] * (N + 1)\n    L[N] = 1\n    L[N - 1] = 1\n    for bhav in range(N - 2, -1, -1):\n        if shiv[bhav] != shiv[bhav + 1]:\n            L[bhav] = (L[bhav + 1] + L[bhav + 2]) % 998244353\n        else:\n            L[bhav] = L[bhav + 1]\n    print(L[0] % 998244353)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    x = 1\n    y = 1\n    z = 1\n    val = [1] * (n + 2)\n    for i in range(1, n):\n        if s[i] == 'a' and s[i - 1] == 'a':\n            val[i + 1] = val[i]\n        if s[i] == 'a' and s[i - 1] == 'b':\n            val[i + 1] = val[i] + val[i - 1]\n        if s[i] == 'b' and s[i - 1] == 'b':\n            val[i + 1] = val[i]\n        if s[i] == 'b' and s[i - 1] == 'a':\n            val[i + 1] = val[i] + val[i - 1]\n    print(val[n] % 998244353)", "for t in range(int(input())):\n    s = input()\n    arr = [1] + [0] * len(s)\n    for i in range(len(s)):\n        arr[i + 1] = (arr[i + 1] + arr[i]) % 998244353\n        if i != len(s) - 1 and s[i:i + 2] in ['ab', 'ba']:\n            arr[i + 2] = (arr[i + 2] + arr[i]) % 998244353\n    print(arr[-1])", "S = {'a', 'b', 'ab', 'ba'}\nfor _ in range(int(input())):\n    s = input()\n    N = len(s)\n    dp = [0] * N\n    dp[0] = 1\n    for i in range(1, N):\n        c1 = dp[i - 1]\n        c2 = 0\n        if s[i - 1:i + 1] in S:\n            if i - 2 < 0:\n                c2 = 1\n            else:\n                c2 = dp[i - 2]\n        dp[i] = (c1 + c2) % 998244353\n    print(dp[-1] % 998244353)", "T = int(input())\nfor _ in range(T):\n    S = input()\n    N = len(S)\n    if N == 1:\n        print(1)\n    else:\n        L = [0] * N\n        L[0] = 1\n        if S[0] != S[1]:\n            L[1] = 2\n        else:\n            L[1] = 1\n        for i in range(2, N):\n            if S[i] == S[i - 1]:\n                L[i] = L[i - 1]\n            else:\n                L[i] = L[i - 1] + L[i - 2]\n        print(L[N - 1] % 998244353)", "for t in range(int(input())):\n    s = input()\n    arr = [1] + [0] * len(s)\n    for i in range(len(s)):\n        arr[i + 1] = (arr[i + 1] + arr[i]) % 998244353\n        if i != len(s) - 1 and s[i:i + 2] in ['ab', 'ba']:\n            arr[i + 2] = (arr[i + 2] + arr[i]) % 998244353\n    print(arr[-1])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    if len(s) == 1:\n        print(1)\n        continue\n    l = [0] * len(s)\n    l[0] = 1\n    if s[0] == s[1]:\n        l[1] = 1\n    else:\n        l[1] = 2\n    for i in range(2, len(s)):\n        if s[i] != s[i - 1]:\n            l[i] = (l[i - 1] + l[i - 2]) % mod\n        else:\n            l[i] = l[i - 1] % mod\n    print(l[-1])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    if len(s) == 1:\n        print(1)\n        continue\n    l = [0] * len(s)\n    l[0] = 1\n    if s[0] == s[1]:\n        l[1] = 1\n    else:\n        l[1] = 2\n    for i in range(2, len(s)):\n        if s[i] != s[i - 1]:\n            l[i] = (l[i - 1] + l[i - 2]) % mod\n        else:\n            l[i] = l[i - 1] % mod\n    print(l[-1])", "for _ in range(int(input())):\n    str1 = input()\n    len1 = len(str1)\n    if len1 == 1:\n        print('1')\n        continue\n    elif len1 == 2:\n        if str1[0] == str1[-1]:\n            print('1')\n            continue\n        else:\n            print('2')\n            continue\n    dp = [0 for i in range(len1)]\n    dp[-1] = 1\n    if str1[-1] == str1[-2]:\n        dp[-2] = 1\n    else:\n        dp[-2] = 2\n    for i in range(-3, -len1 - 1, -1):\n        if str1[i] == str1[i + 1]:\n            dp[i] = dp[i + 1]\n            continue\n        else:\n            dp[i] = (dp[i + 1] + dp[i + 2]) % 998244353\n    print(dp[0])", "def bin_sub(s):\n    n = len(s)\n    mod = 998244353\n    prev = 1\n    cur = 1\n    for i in range(n - 2, -1, -1):\n        take = 0\n        if s[i] != s[i + 1]:\n            take = prev\n        ans = (cur + take) % mod\n        prev = cur\n        cur = ans\n    print(cur)\nT = int(input())\nfor _ in range(T):\n    s = list(input())\n    bin_sub(s)", "def bin_sub(s):\n    n = len(s)\n    mod = 998244353\n    group = [0 for _ in range(n + 1)]\n    group[n] = 1\n    for i in range(n - 1, -1, -1):\n        if i == n - 1:\n            group[i] = 1\n        else:\n            take = 0\n            if s[i] != s[i + 1]:\n                take = group[i + 2]\n            group[i] = (group[i + 1] + take) % mod\n    print(group[0])\nT = int(input())\nfor _ in range(T):\n    s = list(input())\n    bin_sub(s)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(n):\n        dp[i + 1] = dp[i]\n        if i and s[i] != s[i - 1]:\n            dp[i + 1] = (dp[i + 1] + dp[i - 1]) % mod\n    print(dp[-1])", "N = 100010\nM = 998244353\nf = [1] * N\nf[1] = 2\nf[2] = 3\nfor i in range(3, N):\n    f[i] = (f[i - 1] + f[i - 2]) % M\nt = int(input())\nfor _ in range(t):\n    s = input()\n    s += s[-1]\n    ans = 1\n    x = 0\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            x += 1\n        else:\n            ans = ans * f[x] % M\n            x = 0\n    print(ans)", "n = int(input())\nfor k in range(n):\n    l = input()\n    q = len(l)\n    p2 = 1\n    p1 = 1\n    c = 1\n    temp1 = 0\n    temp2 = 0\n    t = False\n    for i in range(1, q):\n        temp1 = c\n        temp2 = p1\n        if l[i] != l[i - 1]:\n            if t:\n                c = p2 + p1 * 2\n            if not t:\n                c = p1 * 2\n                t = True\n            p1 = temp1\n            p2 = temp2\n        elif l[i] == l[i - 1]:\n            if t:\n                t = False\n                p1 = c\n            else:\n                t = False\n    print(c % 998244353)", "for i in range(int(input())):\n    s = input()\n    c = 1\n    p = 1\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            p = c\n        else:\n            (c, p) = (c + p, c)\n    print(c % 998244353)", "def solve(s):\n    p = 1\n    c = 1\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            p = c\n        else:\n            (c, p) = (c + p, c)\n    print(c % 998244353)\nfor _ in range(int(input())):\n    s = input()\n    solve(s)", "def solve(s):\n    p_way = 1\n    c_way = 1\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            p_way = c_way\n        else:\n            (c_way, p_way) = (c_way + p_way, c_way)\n    print(c_way % 998244353)\nfor _ in range(int(input())):\n    s = input()\n    solve(s)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    r = len(s)\n    d = [0] * (r + 1)\n    d[0] = 1\n    d[1] = 1\n    for i in range(1, r):\n        if s[i] == s[i - 1]:\n            d[i + 1] = d[i]\n        else:\n            d[i + 1] = d[i] + d[i - 1]\n    print(d[r] % mod)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    r = len(s)\n    d = [0] * (r + 1)\n    d[0] = 1\n    d[1] = 1\n    for i in range(1, r):\n        if s[i] == s[i - 1]:\n            d[i + 1] = d[i]\n        else:\n            d[i + 1] = d[i] + d[i - 1]\n    print(d[r] % mod)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    r = len(s)\n    d = [0] * (r + 1)\n    d[0] = 1\n    d[1] = 1\n    for i in range(1, r):\n        if s[i] == s[i - 1]:\n            d[i + 1] = d[i]\n        else:\n            d[i + 1] = d[i] + d[i - 1]\n    print(d[r] % mod)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    r = len(s)\n    d = [0] * (r + 1)\n    d[0] = 1\n    d[1] = 1\n    for i in range(1, r):\n        if s[i] == s[i - 1]:\n            d[i + 1] = d[i]\n        else:\n            d[i + 1] = d[i] + d[i - 1]\n    print(d[r] % mod)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    r = len(s)\n    d = [0] * (r + 1)\n    d[0] = 1\n    d[1] = 1\n    for i in range(1, r):\n        if s[i] == s[i - 1]:\n            d[i + 1] = d[i]\n        else:\n            d[i + 1] = d[i] + d[i - 1]\n    print(d[r] % mod)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    r = len(s)\n    d = [0] * (r + 1)\n    d[0] = 1\n    d[1] = 1\n    for i in range(1, r):\n        if s[i] == s[i - 1]:\n            d[i + 1] = d[i]\n        else:\n            d[i + 1] = d[i] + d[i - 1]\n    print(d[r] % mod)", "mod = 998244353\nfor t in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(2, n + 1):\n        if s[i - 1] != s[i - 2]:\n            dp[i] = dp[i - 1] + dp[i - 2]\n        else:\n            dp[i] = dp[i - 1]\n    print(dp[n] % mod)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "caseCount = int(input())\nfor _ in range(caseCount):\n    s = input()\n    length = len(s)\n    dp = [0] * (length + 1)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(1, length):\n        if s[i] == s[i - 1]:\n            dp[i + 1] = dp[i] % 998244353\n        else:\n            dp[i + 1] = (dp[i] + dp[i - 1]) % 998244353\n    print(dp[length])", "T = int(input())\nfor _ in range(T):\n    S = input()\n    N = len(S)\n    if N == 1:\n        print(1)\n    else:\n        L = [0] * N\n        L[0] = 1\n        L[1] = 1 if S[0] == S[1] else 2\n        for i in range(2, N):\n            if S[i] == S[i - 1]:\n                L[i] = L[i - 1]\n            else:\n                L[i] = L[i - 1] + L[i - 2]\n        print(L[N - 1] % 998244353)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    a = [0] * (len(s) + 1)\n    (a[-1], a[-2]) = (1, 1)\n    for i in range(len(s) - 2, -1, -1):\n        if s[i] == s[i + 1]:\n            a[i] = a[i + 1]\n        else:\n            a[i] = (a[i + 1] + a[i + 2]) % mod\n    print(a[0] % mod)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nt = int(input())\nfor _ in range(t):\n    s = input()\n    a = [0] * (len(s) + 1)\n    (a[-1], a[-2]) = (1, 1)\n    for i in range(len(s) - 2, -1, -1):\n        if s[i] == s[i + 1]:\n            a[i] = a[i + 1]\n        else:\n            a[i] = (a[i + 1] + a[i + 2]) % mod\n    print(a[0] % mod)", "def funct(st1):\n    dpi = [0] * (len(st1) + 1)\n    dpi[-1] = 1\n    dpi[-2] = 1\n    for k in range(len(st1) - 2, -1, -1):\n        if st1[k] == st1[k + 1]:\n            dpi[k] = dpi[k + 1]\n        else:\n            dpi[k] = (dpi[k + 1] + dpi[k + 2]) % 998244353\n    return dpi[0] % 998244353\n\ndef ma():\n    a = int(input())\n    while a:\n        str = input()\n        print(funct(str))\n        a -= 1\nma()", "from collections import *\nfrom math import *\nfrom sys import *\nmod = 998244353\nT = int(input())\nfor _ in range(T):\n    B = input()\n    A = [0] * (len(B) + 1)\n    (A[-1], A[-2]) = (1, 1)\n    for i in range(len(B) - 2, -1, -1):\n        if B[i] == B[i + 1]:\n            A[i] = A[i + 1]\n        else:\n            A[i] = (A[i + 1] + A[i + 2]) % mod\n    print(A[0] % mod)", "n = int(input())\nfor op in range(n):\n    st = input()\n    li = [0] * (len(st) + 1)\n    (li[-1], li[-2]) = (1, 1)\n    for k in range(len(st) - 2, -1, -1):\n        if st[k] == st[k + 1]:\n            li[k] = li[k + 1]\n        else:\n            li[k] = (li[k + 1] + li[k + 2]) % 998244353\n    print(li[0] % 998244353)", "n = int(input())\nfor op in range(n):\n    st = input()\n    li = [0] * (len(st) + 1)\n    (li[-1], li[-2]) = (1, 1)\n    for k in range(len(st) - 2, -1, -1):\n        if st[k] == st[k + 1]:\n            li[k] = li[k + 1]\n        else:\n            li[k] = (li[k + 1] + li[k + 2]) % 998244353\n    print(li[0] % 998244353)", "n = int(input())\nfor op in range(n):\n    st = input()\n    li = [0] * (len(st) + 1)\n    (li[-1], li[-2]) = (1, 1)\n    for k in range(len(st) - 2, -1, -1):\n        if st[k] == st[k + 1]:\n            li[k] = li[k + 1]\n        else:\n            li[k] = (li[k + 1] + li[k + 2]) % 998244353\n    print(li[0] % 998244353)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    a = input()\n    n = len(a)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if a[i] != a[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "def solve(s):\n    p_way = 1\n    c_way = 1\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            p_way = c_way\n        else:\n            (c_way, p_way) = (c_way + p_way, c_way)\n    print(c_way % 998244353)\nfor _ in range(int(input())):\n    s = input()\n    solve(s)", "def func(base_str):\n    if len(base_str) <= 1:\n        return 1\n    if base_str[0] == base_str[1]:\n        return func(base_str[1:])\n    else:\n        return func(base_str[1:]) + func(base_str[2:])\nfor _ in range(int(input().strip())):\n    x = input().strip()\n    n = len(x)\n    d = [-1] * (n + 1)\n    d[0] = d[1] = 1\n    for i in range(2, n + 1):\n        d[i] = d[i - 1]\n        if x[i - 1] != x[i - 2]:\n            d[i] = (d[i] + d[i - 2]) % 998244353\n    print(d[n])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "for T in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = [1] * (n + 1)\n    for i in range(1, n):\n        ans[i + 1] = ans[i]\n        if s[i] != s[i - 1]:\n            ans[i + 1] += ans[i - 1]\n    ans[n] = ans[n] % 998244353\n    print(ans[n])", "MOD = 998244353\nt = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    dp = [1] * n\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            if i == 1:\n                dp[i] = 2\n            else:\n                dp[i] = (dp[i - 2] + dp[i - 1]) % MOD\n        else:\n            dp[i] = dp[i - 1] % MOD\n    print(dp[-1])", "for i in range(int(input())):\n    S = input()\n    L = len(S)\n    X = [1] * (L + 1)\n    for i in range(1, L):\n        X[i + 1] = X[i]\n        if S[i] != S[i - 1]:\n            X[i + 1] += X[i - 1]\n    X[L] %= 998244353\n    print(X[L])", "def binarySubstring(index):\n    ans = b_s_dict[index + 1]\n    if s[index] != s[index + 1]:\n        if index + 2 < n:\n            ans = ans + b_s_dict[index + 2]\n        if index + 2 == n:\n            ans += 1\n    b_s_dict[index] = ans\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    final_ans = 0\n    b_s_dict = {n - 1: 1}\n    for i in range(n - 2, -1, -1):\n        binarySubstring(i)\n    print(b_s_dict[0] % 998244353)", "for T in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = [1] * (n + 1)\n    for i in range(1, n):\n        ans[i + 1] = ans[i]\n        if s[i] != s[i - 1]:\n            ans[i + 1] += ans[i - 1]\n    ans[n] = ans[n] % 998244353\n    print(ans[n])", "for _ in range(int(input())):\n    s = input()\n    N = len(s)\n    arr = [1] * (N + 1)\n    for i in range(1, N):\n        arr[i + 1] = arr[i]\n        if s[i] != s[i - 1]:\n            arr[i + 1] += arr[i - 1]\n        arr[i + 1] %= 998244353\n    print(arr[N])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "testcases = int(input())\nfor i in range(testcases):\n    string = input()\n    n = len(string)\n    greed = [0] * (n + 1)\n    greed[n] = greed[n - 1] = 1\n    for j in range(n - 2, -1, -1):\n        if string[j] == string[j + 1]:\n            greed[j] = greed[j + 1]\n        else:\n            greed[j] = (greed[j + 1] + greed[j + 2]) % 998244353\n    print(greed[0] % 998244353)", "testcases = int(input())\nfor i in range(testcases):\n    string = input()\n    n = len(string)\n    greed = [0] * (n + 1)\n    greed[n] = greed[n - 1] = 1\n    for j in range(n - 2, -1, -1):\n        if string[j] == string[j + 1]:\n            greed[j] = greed[j + 1]\n        else:\n            greed[j] = (greed[j + 1] + greed[j + 2]) % 998244353\n    print(greed[0] % 998244353)", "def solve():\n    s = input()\n    n = len(s)\n    if n == 1:\n        print(1)\n        return\n    ans = [0] * n\n    ans[0] = 1\n    ans[1] = 1 + (s[0] != s[1])\n    for i in range(2, n):\n        ans[i] = ans[i - 1]\n        if s[i] != s[i - 1]:\n            ans[i] = ans[i - 1] + ans[i - 2] % 998244353\n    print(ans[n - 1] % 998244353)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "def solve():\n    s = input()\n    n = len(s)\n    if n == 1:\n        print(1)\n        return\n    ans = [0] * n\n    ans[0] = 1\n    ans[1] = 1 + (s[0] != s[1])\n    for i in range(2, n):\n        ans[i] = ans[i - 1]\n        if s[i] != s[i - 1]:\n            ans[i] = ans[i - 1] + ans[i - 2] % 998244353\n    print(ans[n - 1] % 998244353)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "mod = 998244353\nfor c in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "def fib(s):\n    if len(s) == 1 or len(s) == 0:\n        return 1\n    if s[0:2] == 'ab' or s[0:2] == 'ba':\n        return fib(s[1:]) + fib(s[2:])\n    else:\n        return fib(s[1:])\nt = int(input())\nfor tr in range(t):\n    s = input()\n    ab = s.count('ab')\n    ba = s.count('ba')\n    abb = s.count('abb')\n    baa = s.count('baa')\n    aab = s.count('aab')\n    bba = s.count('bba')\n    a = 1\n    b = 1\n    for i in range(len(s) - 1):\n        if s[i] != s[i + 1]:\n            (a, b) = (b % 998244353, (a + b) % 998244353)\n        else:\n            a = b\n    print(b % 998244353)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "for i in range(int(input())):\n    inpStr = input()\n    a = 0\n    b = 1\n    beforeValue = None\n    for i in range(len(inpStr) - 1, -1, -1):\n        if inpStr[i] != beforeValue:\n            b += a\n            a = b - a\n        else:\n            a = b\n        beforeValue = inpStr[i]\n    print(b % 998244353)", "for i in range(int(input())):\n    inpStr = input()\n    a = 0\n    b = 1\n    beforeValue = None\n    for i in range(len(inpStr) - 1, -1, -1):\n        if inpStr[i] != beforeValue:\n            b += a\n            a = b - a\n        else:\n            a = b\n        beforeValue = inpStr[i]\n    print(b % 998244353)", "t = int(input())\nfor i in range(t):\n    s = input()\n    x = 'c'\n    y = 1\n    (a, b) = (0, 1)\n    for j in range(len(s) - 1, -1, -1):\n        if s[j] != x:\n            b += a\n            a = b - a\n        else:\n            a = b\n        x = s[j]\n    print(b % 998244353)", "T = int(input())\nfor i in range(T):\n    strr = input()\n    x = 'c'\n    y = 1\n    (a, b) = (0, 1)\n    for j in range(len(strr) - 1, -1, -1):\n        if strr[j] != x:\n            b += a\n            a = b - a\n        else:\n            a = b\n        x = strr[j]\n    print(b % 998244353)", "for i in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = [0] * n\n    ans[0] = 1\n    if n == 1:\n        print(1)\n    else:\n        ans[1] = 1 + (s[0] != s[1])\n        for i in range(2, n):\n            ans[i] = ans[i - 1]\n            if s[i] != s[i - 1]:\n                ans[i] = (ans[i] + ans[i - 2]) % 998244353\n        print(ans[n - 1])", "for i in range(int(input())):\n    a = input()\n    m = [1, 1]\n    for i in range(1, len(a)):\n        if a[i] != a[i - 1]:\n            m.append(m[-1] + m[-2])\n        else:\n            m.append(m[-1])\n    print(m[-1] % 998244353)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "t = int(input())\nfor _ in range(0, t):\n    s = list(input())\n    n = len(s)\n    x = 1\n    y = 1\n    for i in range(0, n - 1):\n        if s[i] != s[i + 1]:\n            temp = x\n            x = x + y\n            y = temp\n        else:\n            y = x\n    print(x % 998244353)", "for x in range(int(input())):\n    a = list(input())\n    if len(a) < 2:\n        print(1)\n        continue\n    if len(a) == 2:\n        if a == ['a', 'a'] or a == ['b', 'b']:\n            print(1)\n        else:\n            print(2)\n        continue\n    ans = [1]\n    ans.append(2 if a[0] != a[1] else 1)\n    for i in range(2, len(a)):\n        temp = 0\n        if a[i] != a[i - 1]:\n            temp = ans[i - 2]\n        ans.append(temp + ans[i - 1])\n    print(ans[-1] % 998244353)", "modd = 998244353\nt = int(input())\nwhile t > 0:\n    s = str(input())\n    n = len(s)\n    if n == 1:\n        print(1)\n    else:\n        ans = [0] * n\n        ans[0] = 1\n        ans[1] = 1 + (s[0] != s[1])\n        for i in range(2, n):\n            ans[i] = ans[i - 1]\n            if s[i - 1] != s[i]:\n                ans[i] = (ans[i] + ans[i - 2]) % modd\n        print(ans[n - 1])\n    t = t - 1", "for i in range(int(input())):\n    s = input()\n    a = [None] * (len(s) + 1)\n    a[len(s)] = 1\n    a[len(s) - 1] = 1\n    for i in reversed(range(len(s) - 1)):\n        if s[i] == s[i + 1]:\n            a[i] = a[i + 1]\n        else:\n            a[i] = (a[i + 1] + a[i + 2]) % 998244353\n    print(a[0])", "t = int(input())\nfor _ in range(0, t):\n    s = list(input())\n    n = len(s)\n    x = 1\n    y = 1\n    for i in range(0, n - 1):\n        if s[i] != s[i + 1]:\n            temp = x\n            x = x + y\n            y = temp\n        else:\n            y = x\n    print(x % 998244353)", "mod = 998244353\n\ndef solve(s):\n    dp = [0 for i in range(len(s))]\n    dp[0] = 1\n    if len(s) > 1:\n        dp[1] = dp[0] + (1 if s[0] != s[1] else 0)\n    for i in range(2, len(s)):\n        if s[i] == s[i - 1]:\n            dp[i] = dp[i - 1]\n        else:\n            dp[i] = (dp[i - 1] + dp[i - 2]) % mod\n    return dp[-1]\nfor _ in range(int(input())):\n    s = input()\n    ans = solve(s)\n    print(ans % mod)", "mod = 998244353\n\ndef solve(s):\n    dp = [0 for i in range(len(s))]\n    dp[0] = 1\n    if len(s) > 1:\n        dp[1] = dp[0] + (1 if s[0] != s[1] else 0)\n    for i in range(2, len(s)):\n        if s[i] == s[i - 1]:\n            dp[i] = dp[i - 1]\n        else:\n            dp[i] = dp[i - 1] + dp[i - 2]\n    return dp[-1]\nfor _ in range(int(input())):\n    s = input()\n    ans = solve(s)\n    print(ans % mod)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    dp = [0 for i in range(len(s))]\n    dp[0] = 1\n    if len(s) > 1:\n        dp[1] = dp[0] + (1 if s[0] != s[1] else 0)\n    for i in range(2, len(s)):\n        if s[i] == s[i - 1]:\n            dp[i] = dp[i - 1]\n        else:\n            dp[i] = dp[i - 1] + dp[i - 2]\n    print(dp[-1] % mod)", "def soln(s):\n    res = 0\n    n = len(s)\n    mod = 998244353\n    dp = [0] * (n + 1)\n    dp[-1] = dp[-2] = 1\n    for i in range(n - 2, -1, -1):\n        if s[i] != s[i + 1]:\n            dp[i] = (dp[i + 1] + dp[i + 2]) % mod\n        else:\n            dp[i] = dp[i + 1]\n    return dp[0] % mod\nfor _ in range(int(input())):\n    s = input()\n    print(soln(s))", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    if n == 1:\n        print(1)\n    else:\n        l = []\n        l.append(1)\n        if s[0] == s[1]:\n            l.append(1)\n        else:\n            l.append(2)\n        for i in range(2, n):\n            if s[i] == s[i - 1]:\n                l.append(l[i - 1])\n            else:\n                l.append(l[i - 1] + l[i - 2])\n        print(l[n - 1] % 998244353)", "MOD = 998244353\nt = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    dp = [0] * n\n    dp[0] = 1\n    for i in range(1, n):\n        dp[i] = dp[i - 1]\n        if s[i - 1:i + 1] == 'ab' or s[i - 1:i + 1] == 'ba':\n            if i >= 2:\n                dp[i] = (dp[i] + dp[i - 2]) % MOD\n            else:\n                dp[i] = (dp[i] + 1) % MOD\n    print(dp[n - 1])", "def bin_sub(s, n, mod):\n    dp = [1 for i in range(n + 1)]\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    return dp[n]\nt = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    mod = 998244353\n    print(bin_sub(s, n, mod))", "def bin_sub(s: str):\n    n = len(s)\n    dp = [1 for i in range(n + 1)]\n    mod = 998244353\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])\nfor _ in range(int(input())):\n    bin_sub(input())", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    S = input()\n    N = len(S)\n    DP = [1] * (N + 1)\n    for i in range(1, N):\n        DP[i + 1] = DP[i]\n        if S[i] != S[i - 1]:\n            DP[i + 1] += DP[i - 1]\n        DP[i + 1] %= mod\n    print(DP[N])", "caseCount = int(input())\nfor _ in range(caseCount):\n    s = input()\n    length = len(s)\n    dp = []\n    dp.append(1)\n    dp.append(1)\n    for i in range(1, length):\n        if s[i] == s[i - 1]:\n            dp.append(dp[i] % 998244353)\n        else:\n            dp.append((dp[i] + dp[i - 1]) % 998244353)\n    print(dp[length])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "caseCount = int(input())\nfor _ in range(caseCount):\n    s = input()\n    length = len(s)\n    if length == 1:\n        print(1)\n    else:\n        dp = []\n        dp.append(1)\n        if s[0] == s[1]:\n            dp.append(1)\n        else:\n            dp.append(2)\n        for i in range(2, length):\n            if s[i] == s[i - 1]:\n                dp.append(dp[i - 1] % 998244353)\n            else:\n                dp.append((dp[i - 1] + dp[i - 2]) % 998244353)\n        print(dp[length - 1])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])", "caseCount = int(input())\nfor _ in range(caseCount):\n    s = input()\n    length = len(s)\n    if length == 1:\n        print(1)\n    else:\n        dp = []\n        dp.append(1)\n        if s[0] == s[1]:\n            dp.append(1)\n        else:\n            dp.append(2)\n        for i in range(2, length):\n            if s[i] == s[i - 1]:\n                dp.append(dp[i - 1])\n            else:\n                dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[length - 1] % 998244353)", "mod = 998244353\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [1] * (n + 1)\n    for i in range(1, n):\n        dp[i + 1] = dp[i]\n        if s[i] != s[i - 1]:\n            dp[i + 1] += dp[i - 1]\n        dp[i + 1] %= mod\n    print(dp[n])"]