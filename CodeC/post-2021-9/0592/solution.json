["from sys import stdin, setrecursionlimit\ninput = stdin.readline\nmod = 998244353\n\ndef add(a, b):\n    return (a % mod + b % mod) % mod\n\ndef mul(a, b):\n    return a % mod * (b % mod) % mod\n\ndef sub(a, b):\n    return (a - b + mod) % mod\n\ndef answer():\n    if n == 1:\n        return 1\n    even = pow(2, n - 1, mod)\n    ans = mul(2, even)\n    ans = sub(ans, 2)\n    if n & 1:\n        pal = mul(2, sub(pow(2, n // 2, mod), 1))\n        pal = add(pal, pow(2, n // 2, mod))\n    else:\n        pal = mul(2, sub(pow(2, n // 2, mod), 1))\n    ans = add(ans, pal)\n    odd = sub(pow(2, n, mod), even)\n    leftodd = sub(odd, pal)\n    ans = add(ans, mul(3, leftodd))\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    print(answer())", "from sys import stdin, setrecursionlimit\ninput = stdin.readline\nmod = 998244353\n\ndef add(a, b):\n    return (a % mod + b % mod) % mod\n\ndef mul(a, b):\n    return a % mod * (b % mod) % mod\n\ndef sub(a, b):\n    return (a - b + mod) % mod\n\ndef answer():\n    if n == 1:\n        return 1\n    even = pow(2, n - 1, mod)\n    ans = mul(2, even)\n    ans = sub(ans, 2)\n    if n & 1:\n        pal = mul(2, sub(pow(2, n // 2, mod), 1))\n        pal = add(pal, pow(2, n // 2, mod))\n    else:\n        pal = mul(2, sub(pow(2, n // 2, mod), 1))\n    ans = add(ans, pal)\n    odd = sub(pow(2, n, mod), even)\n    leftodd = sub(odd, pal)\n    ans = add(ans, mul(3, leftodd))\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    print(answer())", "tl = int(input())\nmod = 998244353\nwhile tl:\n    tl = tl - 1\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(4)\n    else:\n        if n % 2 == 0:\n            x = pow(2, n // 2, mod) % mod\n            pal = 2 * (x - 1) % mod\n            nonpal = pow(2, n - 1, mod) % mod\n            ans = (5 * nonpal % mod - 2 - 2 * pal) % mod\n        else:\n            pal = (3 * pow(2, (n - 1) // 2, mod) - 2) % mod\n            nonpal = pow(2, n - 1, mod) % mod\n            ans = (5 * nonpal % mod - 2 - 2 * pal) % mod\n        print(ans)", "from math import ceil\nmod = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    temp = pow(2, n - 1, mod)\n    ans = 2 * (temp - 1) % mod\n    if n % 2:\n        cnt = (2 * (pow(2, n // 2, mod) - 1) + pow(2, n // 2, mod)) % mod\n    else:\n        cnt = 2 * (pow(2, n // 2, mod) - 1) % mod\n    ans = (ans + 3 * (temp - cnt) + cnt) % mod\n    print(ans)", "t = int(input())\nmod = 998244353\nwhile t:\n    t = t - 1\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(4)\n    else:\n        if n % 2 == 0:\n            x = pow(2, n // 2, mod) % mod\n            pal = 2 * (x - 1) % mod\n            nonpal = pow(2, n - 1, mod) % mod\n            ans = (5 * nonpal % mod - 2 - 2 * pal) % mod\n        else:\n            pal = (3 * pow(2, (n - 1) // 2, mod) - 2) % mod\n            nonpal = pow(2, n - 1, mod) % mod\n            ans = (5 * nonpal % mod - 2 - 2 * pal) % mod\n        print(ans)", "t = int(input())\nmod = 998244353\nwhile t:\n    t = t - 1\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(4)\n    else:\n        if n % 2 == 0:\n            tot = (pow(2, n, mod) - 1) % mod\n            pal = 2 * (pow(2, n // 2, mod) - 1) % mod\n            nonpal = pow(2, n - 1, mod) % mod\n            ans = (2 * tot + nonpal - 2 * pal) % mod\n        else:\n            tot = (pow(2, n, mod) - 1) % mod\n            pal = (3 * pow(2, (n - 1) // 2, mod) - 2) % mod\n            nonpal = pow(2, n - 1, mod) % mod\n            ans = (2 * tot + nonpal - 2 * pal) % mod\n        print(ans)", "t = int(input())\nmod = 998244353\nwhile t:\n    t = t - 1\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(4)\n    else:\n        if n % 2 == 0:\n            tot = (pow(2, n, mod) - 1) % mod\n            pal = 2 * (pow(2, n // 2, mod) - 1) % mod\n            nonpal = pow(2, n - 1, mod) % mod\n            ans = (2 * tot + nonpal - 2 * pal) % mod\n        else:\n            tot = (pow(2, n, mod) - 1) % mod\n            pal = (3 * pow(2, (n - 1) // 2, mod) - 2) % mod\n            nonpal = pow(2, n - 1, mod) % mod\n            ans = (2 * tot + nonpal - 2 * pal) % mod\n        print(ans)", "def main():\n    n = int(input())\n    mod = 998244353\n    if n == 1:\n        return 1\n    if n == 2:\n        return 4\n    if n == 3:\n        return 10\n    a = 10 * pow(2, n - 2, mod) + 2\n    b = 2 * pow(2, (n + 1) // 2, mod)\n    c = 2 * pow(2, n // 2, mod)\n    return (a - b - c) % mod\nfor _ in range(int(input())):\n    print(main())", "def main():\n    n = int(input())\n    mod = 998244353\n    if n == 1:\n        return 1\n    if n == 2:\n        return 4\n    if n == 3:\n        return 10\n    if n % 2 == 0:\n        a = pow(2, n - 2, mod)\n        b = pow(2, n // 2 + 2, mod)\n        return (10 * a - b + 2) % mod\n    else:\n        a = pow(2, n - 2, mod)\n        b = pow(2, (n + 1) // 2, mod)\n        return (10 * a - 3 * b + 2) % mod\nfor _ in range(int(input())):\n    print(main())", "def main():\n    n = int(input())\n    mod = 998244353\n    if n == 1:\n        return 1\n    if n == 2:\n        return 4\n    if n == 3:\n        return 10\n    if n % 2 == 0:\n        a = pow(2, n - 2, mod)\n        b = pow(2, n // 2 + 2, mod)\n        return (10 * a - b + 2) % mod\n    else:\n        a = pow(2, n - 2, mod)\n        b = pow(2, (n + 1) // 2, mod)\n        return (10 * a - 3 * b + 2) % mod\nfor _ in range(int(input())):\n    print(main())", "from sys import stdin, setrecursionlimit\ninput = stdin.readline\nmod = 998244353\n\ndef add(a, b):\n    return (a % mod + b % mod) % mod\n\ndef mul(a, b):\n    return a % mod * (b % mod) % mod\n\ndef sub(a, b):\n    return (a - b + mod) % mod\n\ndef answer():\n    if n == 1:\n        return 1\n    even = pow(2, n - 1, mod)\n    ans = mul(2, even)\n    ans = sub(ans, 2)\n    if n & 1:\n        pal = mul(2, sub(pow(2, n // 2, mod), 1))\n        pal = add(pal, pow(2, n // 2, mod))\n    else:\n        pal = mul(2, sub(pow(2, n // 2, mod), 1))\n    ans = add(ans, pal)\n    odd = sub(pow(2, n, mod), even)\n    leftodd = sub(odd, pal)\n    ans = add(ans, mul(3, leftodd))\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    print(answer())"]