["for _ in range(int(input())):\n    N = int(input())\n    S = str(input())\n    l = -1\n    for i in range(N):\n        if S[i] != S[0]:\n            l = i\n            break\n    if l == -1:\n        print(0)\n        continue\n    p = 0\n    for i in range(l, N):\n        if S[i] == S[l]:\n            p += 1\n        else:\n            break\n    p = min(p, l)\n    ans = 0\n    x = 1\n    for i in range(N - 1, l - 1, -1):\n        if S[i] != S[i - p]:\n            ans = (ans + x) % 1000000007\n        x = x * 2 % 1000000007\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    S = str(input())\n    l = -1\n    for i in range(N):\n        if S[i] != S[0]:\n            l = i\n            break\n    if l == -1:\n        print(0)\n        continue\n    p = 0\n    for i in range(l, N):\n        if S[i] == S[l]:\n            p += 1\n        else:\n            break\n    p = min(p, l)\n    ans = 0\n    x = 1\n    for i in range(N - 1, l - 1, -1):\n        if S[i] != S[i - p]:\n            ans = (ans + x) % 1000000007\n        x = x * 2 % 1000000007\n    print(ans)", "def fun(s1, s2):\n    md = 1000000007\n    l = len(s1)\n    ans = 0\n    p = 1\n    for i in range(l - 1, -1, -1):\n        if s1[i] != s2[i]:\n            ans = (ans + p) % 1000000007\n        p = p * 2 % 1000000007\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = input()\n    i = 0\n    x = 0\n    while i < n - 1:\n        if l[i] != l[i + 1]:\n            x = i + 1\n            break\n        i += 1\n    c = 1\n    i = x\n    while i < n - 1:\n        if c >= x:\n            break\n        if l[i] == l[i + 1]:\n            i += 1\n            c += 1\n        else:\n            break\n    if x - c == -1:\n        print(0)\n        continue\n    print(fun(l[x:], l[x - c:n - c]))", "for _ in range(int(input())):\n    n = int(input())\n    mod = 10 ** 9 + 7\n    s = input()\n    idx = -1\n    for i in range(0, len(s) - 1):\n        if s[i] != s[i + 1]:\n            idx = i + 1\n            break\n    count = 1\n    if idx == -1:\n        print(0)\n        continue\n    for i in range(idx, len(s) - 1):\n        if s[i] != s[i + 1]:\n            break\n        else:\n            count += 1\n    if count > idx:\n        ans = int(s[idx:n], base=2) ^ int(s[0:n - idx], base=2)\n    else:\n        ans = int(s[idx:n], base=2) ^ int(s[idx - count:n - count], base=2)\n    print(ans % mod)", "for _ in range(int(input())):\n    n = int(input())\n    mod = 10 ** 9 + 7\n    s = input()\n    idx = -1\n    for i in range(0, len(s) - 1):\n        if s[i] != s[i + 1]:\n            idx = i + 1\n            break\n    count = 1\n    if idx == -1:\n        print(0)\n        continue\n    for i in range(idx, len(s) - 1):\n        if s[i] != s[i + 1]:\n            break\n        else:\n            count += 1\n    if count > idx:\n        ans = int(s[idx:n], base=2) ^ int(s[0:n - idx], base=2)\n    else:\n        ans = int(s[idx:n], base=2) ^ int(s[idx - count:n - count], base=2)\n    print(ans % mod)", "for _ in range(int(input())):\n    n = int(input())\n    mod = 10 ** 9 + 7\n    s = input()\n    idx = -1\n    for i in range(0, len(s) - 1):\n        if s[i] != s[i + 1]:\n            idx = i + 1\n            break\n    count = 1\n    if idx == -1:\n        print(0)\n        continue\n    for i in range(idx, len(s) - 1):\n        if s[i] != s[i + 1]:\n            break\n        else:\n            count += 1\n    if count > idx:\n        ans = int(s[idx:n], base=2) ^ int(s[0:n - idx], base=2)\n    else:\n        ans = int(s[idx:n], base=2) ^ int(s[idx - count:n - count], base=2)\n    print(ans % mod)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    flag = -1\n    mod = 10 ** 9 + 7\n    for i in range(1, n):\n        if s[i] != s[0]:\n            flag = i\n            break\n    else:\n        print(0)\n        continue\n    xor_ = int(s[:n - flag], base=2) ^ int(s[flag:], base=2)\n    (start, end) = (flag, n)\n    for i in range(flag, n):\n        if start == 0:\n            break\n        if s[i] == '0':\n            start -= 1\n            end -= 1\n        else:\n            break\n    xor_ = max(xor_, int(s[start:end], base=2) ^ int(s[flag:], base=2))\n    (start, end) = (flag, n)\n    for i in range(flag, n):\n        if start == 0:\n            break\n        if s[i] == '1':\n            start -= 1\n            end -= 1\n        else:\n            break\n    xor_ = max(xor_, int(s[start:end], base=2) ^ int(s[flag:], base=2))\n    print(xor_ % mod)", "t = int(input(''))\nm = 1000000007\nl = [0] * 2000000\nl[0] = 1\nfor i in range(1, 2000000):\n    l[i] = l[i - 1] * 2 % m\nfor j in range(t):\n    n = int(input(''))\n    s = input('')\n    if s.count('0') == n or s.count('1') == n:\n        print(0)\n        continue\n    a = s.index('0')\n    b = s.index('1')\n    ans = 0\n    z = 0\n    if a < b:\n        x = s[b:n]\n        if '0' in x:\n            z = x.index('0')\n        if z == 0:\n            y = s[a:n]\n        elif b > z:\n            y = s[b - z:n]\n        else:\n            y = s[a:n]\n        for i in range(n - b):\n            if x[i] != y[i]:\n                ans = (ans % m + l[n - b - i - 1]) % m\n    if a > b:\n        (a, b) = (b, a)\n        x = s[b:n]\n        if '1' in x:\n            z = x.index('1')\n        if z == 0:\n            y = s[a:n]\n        elif b > z:\n            y = s[b - z:n]\n        else:\n            y = s[a:n]\n        for i in range(n - b):\n            if x[i] != y[i]:\n                ans = (ans % m + l[n - b - i - 1]) % m\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    S = str(input())\n    l = -1\n    for i in range(N):\n        if S[i] != S[0]:\n            l = i\n            break\n    if l == -1:\n        print(0)\n        continue\n    p = 0\n    for i in range(l, N):\n        if S[i] == S[l]:\n            p += 1\n        else:\n            break\n    p = min(p, l)\n    ans = 0\n    x = 1\n    for i in range(N - 1, l - 1, -1):\n        if S[i] != S[i - p]:\n            ans = (ans + x) % 1000000007\n        x = x * 2 % 1000000007\n    print(ans)", "t = int(input())\nfor tr in range(t):\n    n = int(input())\n    s = input()\n    n = len(s)\n    i = 0\n    switch_pos = 0\n    while i < n - 1:\n        if s[i] != s[i + 1]:\n            switch_pos = i + 1\n            break\n        i += 1\n    if not switch_pos:\n        print(0)\n        continue\n    s2 = s[switch_pos:]\n    max_num = 0\n    i = switch_pos\n    second_switch_pos = 0\n    while i < n - 1:\n        if s[i] != s[i + 1]:\n            second_switch_pos = i + 1\n            break\n        i += 1\n    if not second_switch_pos or second_switch_pos - switch_pos >= switch_pos:\n        s1 = s[:len(s2)]\n    else:\n        s1 = s[switch_pos + n - second_switch_pos - len(s2):switch_pos + n - second_switch_pos]\n    num = 0\n    for i in range(len(s1)):\n        if s1[i] != s2[i]:\n            num = num + pow(2, len(s1) - 1 - i, 10 ** 9 + 7)\n    print(num % (10 ** 9 + 7))", "mod = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    (i0, i1) = (-1, -1)\n    for i in range(n):\n        if s[i] == '1':\n            i1 = i\n            break\n    for i in range(n):\n        if s[i] == '0':\n            i0 = i\n            break\n    if i0 == -1 or i1 == -1:\n        print(0)\n        continue\n    if i0 == 0:\n        f0 = 10000 * n\n        for i in range(i1 + 1, n):\n            if s[i] == '0':\n                f0 = i\n                break\n        ans = 0\n        st = max(0, i1 - (f0 - i1))\n        for i in range(i1, n):\n            ans *= 2\n            if s[i] != s[st]:\n                ans += 1\n            ans %= mod\n            st += 1\n        print(ans)\n    else:\n        f0 = 10000 * n\n        for i in range(i0 + 1, n):\n            if s[i] == '1':\n                f0 = i\n                break\n        ans = 0\n        st = max(0, i0 - (f0 - i0))\n        for i in range(i0, n):\n            ans *= 2\n            if s[i] != s[st]:\n                ans += 1\n            ans %= mod\n            st += 1\n        print(ans)", "import sys\ninput = sys.stdin.readline\nmod = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    (i0, i1) = (-1, -1)\n    for i in range(n):\n        if s[i] == '1':\n            i1 = i\n            break\n    for i in range(n):\n        if s[i] == '0':\n            i0 = i\n            break\n    if i0 == -1 or i1 == -1:\n        print(0)\n        continue\n    if i0 == 0:\n        f0 = 10000 * n\n        for i in range(i1 + 1, n):\n            if s[i] == '0':\n                f0 = i\n                break\n        ans = 0\n        st = max(0, i1 - (f0 - i1))\n        for i in range(i1, n):\n            ans *= 2\n            if s[i] != s[st]:\n                ans += 1\n            ans %= mod\n            st += 1\n        print(ans)\n    else:\n        f0 = 10000 * n\n        for i in range(i0 + 1, n):\n            if s[i] == '1':\n                f0 = i\n                break\n        ans = 0\n        st = max(0, i0 - (f0 - i0))\n        for i in range(i0, n):\n            ans *= 2\n            if s[i] != s[st]:\n                ans += 1\n            ans %= mod\n            st += 1\n        print(ans)", "import sys\nfrom math import *\nfrom bisect import *\nmod_ = 10 ** 9 + 7\nsys.setrecursionlimit(10 ** 7)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    flag = -1\n    for i in range(1, n):\n        if s[i] != s[0]:\n            flag = i\n            break\n    else:\n        print(0)\n        continue\n    xor_ = int(s[:n - flag], base=2) ^ int(s[flag:], base=2)\n    (start, end) = (flag, n)\n    for i in range(flag, n):\n        if start == 0:\n            break\n        if s[i] == '0':\n            start -= 1\n            end -= 1\n        else:\n            break\n    xor_ = max(xor_, int(s[start:end], base=2) ^ int(s[flag:], base=2))\n    (start, end) = (flag, n)\n    for i in range(flag, n):\n        if start == 0:\n            break\n        if s[i] == '1':\n            start -= 1\n            end -= 1\n        else:\n            break\n    xor_ = max(xor_, int(s[start:end], base=2) ^ int(s[flag:], base=2))\n    print(xor_ % mod_)", "def readlist():\n    return list(map(int, input().split()))\n\ndef readint():\n    return int(input())\n\ndef printbool(result: bool):\n    print('YES') if result else print('NO')\nmodulo = 10 ** 9 + 7\nT = readint()\nfor _ in range(T):\n    N = readint()\n    S = input()\n    start = S[0]\n    L = 0\n    for i in range(len(S)):\n        if S[i] != start:\n            break\n    for j in range(i + 1, N):\n        if S[j] == start:\n            break\n    else:\n        j = N\n    j = max(0, 2 * i - j)\n    best = int(S[i:], 2) ^ int(S[j:j + (N - i)], 2)\n    print(best % modulo)", "for _ in range(int(input())):\n    N = int(input())\n    S = str(input())\n    isValid = '1' not in S or '0' not in S\n    if isValid:\n        print(0)\n    else:\n        find = str(S[0])\n        i = 0\n        for x in range(len(S)):\n            if S[x] != find:\n                i = int(x)\n                break\n        j = len(S)\n        for x in range(i, len(S)):\n            if S[x] != S[i]:\n                j = int(x)\n                break\n        dis = min(i, j - i)\n        print((int(S[i - dis:len(S) - dis], 2) ^ int(S[i:], 2)) % 1000000007)", "def mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return str(input())\n\ndef ni():\n    return int(input())\nfor t in range(int(input())):\n    n = ni()\n    s = si()\n    if '1' not in s or '0' not in s:\n        print(0)\n        continue\n    target = s[0]\n    i = 0\n    while i < len(s) and s[i] == target:\n        i += 1\n    j = int(i)\n    while j < len(s) and s[i] == s[j]:\n        j += 1\n    d = min(i, j - i)\n    l = len(s) - i\n    print((int(s[i:], 2) ^ int(s[i - d:len(s) - d], 2)) % 1000000007)", "import sys\ninput = sys.stdin.readline\nmod = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    (i0, i1) = (-1, -1)\n    for i in range(n):\n        if s[i] == '1':\n            i1 = i\n            break\n    for i in range(n):\n        if s[i] == '0':\n            i0 = i\n            break\n    if i0 == -1 or i1 == -1:\n        print(0)\n        continue\n    if i0 == 0:\n        f0 = 10000 * n\n        for i in range(i1 + 1, n):\n            if s[i] == '0':\n                f0 = i\n                break\n        ans = 0\n        st = max(0, i1 - (f0 - i1))\n        for i in range(i1, n):\n            ans *= 2\n            if s[i] != s[st]:\n                ans += 1\n            ans %= mod\n            st += 1\n        print(ans)\n    else:\n        f0 = 10000 * n\n        for i in range(i0 + 1, n):\n            if s[i] == '1':\n                f0 = i\n                break\n        ans = 0\n        st = max(0, i0 - (f0 - i0))\n        for i in range(i0, n):\n            ans *= 2\n            if s[i] != s[st]:\n                ans += 1\n            ans %= mod\n            st += 1\n        print(ans)"]