["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        m = len(set(a))\n        if m == n:\n            print(-1)\n        else:\n            d = {}\n            for x in a:\n                if x in d:\n                    d[x] += 1\n                else:\n                    d[x] = 1\n            p = max(d.values())\n            if p == n:\n                print(0)\n            else:\n                res = n - p + 1\n                print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        m = len(set(a))\n        if m == n:\n            print(-1)\n        else:\n            d = {}\n            for x in a:\n                if x in d:\n                    d[x] += 1\n                else:\n                    d[x] = 1\n            p = max(d.values())\n            if p == n:\n                print(0)\n            else:\n                res = n - p + 1\n                print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        m = len(set(a))\n        if m == n:\n            print(-1)\n        else:\n            d = {}\n            for x in a:\n                if x in d:\n                    d[x] += 1\n                else:\n                    d[x] = 1\n            p = max(d.values())\n            if p == n:\n                print(0)\n            else:\n                res = n - p + 1\n                print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        m = len(set(a))\n        if m == n:\n            print(-1)\n        else:\n            d = {}\n            for x in a:\n                if x in d:\n                    d[x] += 1\n                else:\n                    d[x] = 1\n            p = max(d.values())\n            if p == n:\n                print(0)\n            else:\n                res = n - p + 1\n                print(res)", "for _ in range(int(input())):\n    N = int(input())\n    lst = list(map(int, input().split(' ')))\n    d = {}\n    for ele in lst:\n        if ele in d:\n            d[ele] += 1\n        else:\n            d[ele] = 1\n    m = max(d.values())\n    if m == N:\n        print(0)\n    elif len(set(lst)) == N:\n        print(-1)\n    else:\n        print(N - m + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        m = len(set(a))\n        if m == n:\n            print(-1)\n        else:\n            d = {}\n            for x in a:\n                if x in d:\n                    d[x] += 1\n                else:\n                    d[x] = 1\n            p = max(d.values())\n            if p == n:\n                print(0)\n            else:\n                res = n - p + 1\n                print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    z = list(map(int, input().split()))\n    d = dict()\n    for i in z:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    x = -1\n    for i in d:\n        x = max(x, d[i])\n    if x == n or n == 1:\n        print(0)\n    elif x == 1 and n != 1:\n        print(-1)\n    else:\n        print(n - x + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        m = len(set(a))\n        if m == n:\n            print(-1)\n        else:\n            d = {}\n            for x in a:\n                if x in d:\n                    d[x] += 1\n                else:\n                    d[x] = 1\n            p = max(d.values())\n            if p == n:\n                print(0)\n            else:\n                res = n - p + 1\n                print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        m = len(set(a))\n        if m == n:\n            print(-1)\n        else:\n            d = {}\n            for x in a:\n                if x in d:\n                    d[x] += 1\n                else:\n                    d[x] = 1\n            p = max(d.values())\n            if p == n:\n                print(0)\n            else:\n                print(n - p + 1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = {}\n    cnt = 0\n    for i in arr:\n        if i in res:\n            res[i] += 1\n        else:\n            res[i] = 1\n        if res[i] > cnt:\n            cnt = res[i]\n    if cnt == 1 and n > 1:\n        print(-1)\n    elif n == 1 or n == cnt:\n        print(0)\n    else:\n        print(n - cnt + 1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = {}\n    cnt = 0\n    for i in arr:\n        if i in res:\n            res[i] += 1\n        else:\n            res[i] = 1\n        if res[i] > cnt:\n            cnt = res[i]\n    if cnt == 1 and n > 1:\n        print(-1)\n    elif n == 1 or n == cnt:\n        print(0)\n    else:\n        print(n - cnt + 1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    d1 = {}\n    for i in arr:\n        if i not in d1:\n            d1[i] = 1\n        else:\n            d1[i] += 1\n    m1 = max(d1.values())\n    if m1 == n:\n        print(0)\n    elif m1 < 2:\n        print(-1)\n    else:\n        print(n - m1 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    d1 = {}\n    for i in arr:\n        if i not in d1:\n            d1[i] = 1\n        else:\n            d1[i] += 1\n    m1 = max(d1.values())\n    if m1 == n:\n        print(0)\n    elif m1 < 2:\n        print(-1)\n    else:\n        print(n - m1 + 1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = {}\n    for i in a:\n        if i in f:\n            f[i] += 1\n        else:\n            f[i] = 1\n    m = -1\n    for i in f:\n        if f[i] > m:\n            m = f[i]\n    a.sort()\n    if n == 1 or a[0] == a[-1]:\n        print(0)\n    elif m == 1:\n        print(-1)\n    else:\n        print(n - m + 1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = {}\n    for i in a:\n        if i in f:\n            f[i] += 1\n        else:\n            f[i] = 1\n    m = -1\n    for i in f:\n        if f[i] > m:\n            m = f[i]\n    a.sort()\n    if n == 1 or a[0] == a[-1]:\n        print(0)\n    elif m == 1:\n        print(-1)\n    else:\n        print(n - m + 1)", "import statistics\nfrom statistics import mode\nn = int(input())\nfor i in range(n):\n    q = int(input())\n    l = list(map(int, input().split()))\n    k = l.count(mode(l))\n    if k == 1 and q != 1:\n        print(-1)\n    elif q == 1 or q == k:\n        print(0)\n    else:\n        h = q - k + 1\n        print(h)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = 1\n    c = 1\n    a.sort()\n    for i in range(n):\n        if a[i] == a[i - 1]:\n            c += 1\n            m = max(m, c)\n        else:\n            c = 1\n    if n == m:\n        print(0)\n        continue\n    if m == 1:\n        print(-1)\n        continue\n    print(n - m + 1)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = 1\n    c = 1\n    a.sort()\n    for i in range(n):\n        if a[i] == a[i - 1]:\n            c += 1\n            m = max(m, c)\n        else:\n            c = 1\n    if n == m:\n        print(0)\n        continue\n    if m == 1:\n        print(-1)\n        continue\n    print(n - m + 1)", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    myList = list(map(int, sys.stdin.readline().split()))\n    myDict = {}\n    maxCounter = 0\n    for i in myList:\n        if i in myDict:\n            myDict[i] += 1\n        else:\n            myDict[i] = 1\n        if myDict[i] > maxCounter:\n            maxCounter = myDict[i]\n    if maxCounter == 1 and N > 1:\n        print(-1)\n    elif N == 1:\n        print(0)\n    elif N == maxCounter:\n        print(0)\n    else:\n        print(N - maxCounter + 1)", "from collections import Counter\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = Counter(a)\n    c = b.values()\n    if len(b) == 1:\n        print(0)\n    elif max(c) == 1:\n        print(-1)\n    else:\n        print(sum(c) - max(c) + 1)", "from collections import Counter\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = Counter(a)\n    c = b.values()\n    if len(b) == 1:\n        print(0)\n    elif max(c) == 1:\n        print(-1)\n    else:\n        print(sum(c) - max(c) + 1)", "from math import gcd, sqrt, ceil, floor, log10, log2\nfrom heapq import heapify, heappop, heappush, nsmallest, nlargest\nfrom collections import Counter, deque, OrderedDict, defaultdict\nfrom itertools import combinations, permutations, zip_longest\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache, reduce\nimport sys\nimport time\nimport string\nimport operator\nRECURSION_LIMIT = int(10000000.0)\nINT_MAX = float('inf')\nINT_MIN = float('-inf')\nMOD = int(1000000000.0) + 7\nNEWLINE = '\\n'\nSPACE = ' '\nsys.setrecursionlimit(RECURSION_LIMIT)\ninp = lambda fn: fn(input())\ninp_vars = lambda fn, delim, convert_to=list: convert_to(map(fn, input().split(delim)))\nenum = lambda itr: enumerate(itr)\n\ndef toposort(graph, n):\n    degree = [0] * n\n    for node in graph:\n        for adj in graph[node]:\n            degree[adj] += 1\n    bfs_queue = [node for node in range(n) if not degree[node]]\n    for node in bfs_queue:\n        for adj in graph[node]:\n            degree[adj] -= 1\n            if not degree[adj]:\n                bfs_queue.append(adj)\n    return (bfs_queue, degree)\n\ndef dfs(graph, node, visited):\n    visited.add(node)\n    for adj in graph[node]:\n        if adj in visited:\n            continue\n        dfs(graph, adj, visited)\n\ndef solve(*args, **kwargs):\n    (n, arr) = args\n    c = Counter(arr)\n    if len(c) == 1 and len(c.values()):\n        return 0\n    if max(c.values()) == 1:\n        return -1\n    return sum(c.values()) - max(c.values()) + 1\n\ndef main(*args, **kwargs):\n    for _ in range(int(input())):\n        arg1 = inp(int)\n        arg3 = inp_vars(int, SPACE)\n        res = solve(*(arg1, arg3))\n        if type(res) in {list, tuple, set}:\n            print(*res, sep=' ')\n        else:\n            print(res)\nmain()", "from collections import Counter\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = Counter(a)\n    c = b.values()\n    if len(b) == 1 and len(c) == 1:\n        print(0)\n    elif max(c) == 1:\n        print(-1)\n    else:\n        print(sum(c) - max(c) + 1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = Counter(a)\n    values = b.values()\n    if len(a) == 1 or len(values) == 1:\n        print(0)\n    elif max(values) == 1:\n        print(-1)\n    else:\n        print(sum(values) - max(values) + 1)", "from collections import Counter\nimport sys\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, sys.stdin.readline().split()))\n    d = dict(Counter(l))\n    m = max(d.values())\n    s = sum(d.values())\n    rem = s - m\n    if rem == 0:\n        print(0)\n    elif m > 1:\n        print(rem + 1)\n    else:\n        print(-1)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    m = max(d.values())\n    s = sum(d.values())\n    rem = s - m\n    if rem == 0:\n        print(0)\n    elif m > 1:\n        print(rem + 1)\n    else:\n        print(-1)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    m = max(d.values())\n    s = sum(d.values())\n    rem = s - m\n    if rem == 0:\n        print(0)\n    elif m > 1:\n        print(rem + 1)\n    else:\n        print(-1)", "from collections import Counter\ntry:\n    T = int(input())\n    while T > 0:\n        N = int(input())\n        arr = list(map(int, input().strip().split()))\n        if len(set(arr)) == 1:\n            print('0')\n        elif len(set(arr)) == N:\n            print('-1')\n        else:\n            comm = dict(Counter(arr))\n            comm_max = max(comm.values())\n            print(N - comm_max + 1)\n        T -= 1\nexcept:\n    pass", "from collections import Counter\ntry:\n    T = int(input())\n    while T > 0:\n        N = int(input())\n        arr = list(map(int, input().strip().split()))\n        if len(set(arr)) == 1:\n            print('0')\n        elif len(set(arr)) == N:\n            print('-1')\n        else:\n            comm = dict(Counter(arr))\n            comm_max = max(comm.values())\n            print(N - comm_max + 1)\n        T -= 1\nexcept:\n    pass", "from collections import Counter\ntry:\n    T = int(input())\n    while T > 0:\n        N = int(input())\n        arr = list(map(int, input().strip().split()))\n        if len(set(arr)) == 1:\n            print('0')\n        elif len(set(arr)) == N:\n            print('-1')\n        else:\n            comm = dict(Counter(arr))\n            comm_max = max(comm.values())\n            print(N - comm_max + 1)\n        T -= 1\nexcept:\n    pass", "import sys\n\ndef _input():\n    return sys.stdin.readline().strip()\n\ndef main():\n    for _ in range(int(_input())):\n        n = int(_input())\n        lst = list(map(int, _input().split()))\n        if len(set(lst)) == 1:\n            print(0)\n        elif len(set(lst)) == n:\n            print(-1)\n        else:\n            d = {}\n            f = 0\n            c = d.fromkeys(lst, 0)\n            for i in lst:\n                if i in c:\n                    c[i] += 1\n            f = max(c.values())\n            print(n - f + 1)\nmain()", "from collections import defaultdict\nfor tc in range(int(input())):\n    n = int(input())\n    mp = defaultdict(int)\n    arr = [int(x) for x in input().split()]\n    for num in arr:\n        mp[num] += 1\n    if len(mp) == 1:\n        print('0')\n    elif len(mp) == n:\n        print('-1')\n    else:\n        ans = n + 5\n        for (key, value) in mp.items():\n            if value > 1:\n                ans = min(ans, n - value + 1)\n        print(ans)", "class solution:\n\n    def calc(self):\n        tc = int(input())\n        for _ in range(tc):\n            n = int(input())\n            a = [int(x) for x in input().split()]\n            m = 1\n            c = 1\n            a.sort()\n            for i in range(n):\n                if a[i] == a[i - 1]:\n                    c += 1\n                    m = max(m, c)\n                else:\n                    c = 1\n            if n == m:\n                print(0)\n                continue\n            if m == 1:\n                print(-1)\n                continue\n            print(n - m + 1)\ns = solution()\ns.calc()", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1 or len(set(l)) == 1:\n        print(0)\n    else:\n        d = defaultdict(int)\n        for i in l:\n            d[i] += 1\n        m = n + 1\n        for i in d.values():\n            if i > 1:\n                c = n - i + 1\n                if m > c:\n                    m = c\n        print(-1) if m == n + 1 else print(m)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1 or len(set(l)) == 1:\n        print(0)\n    else:\n        d = defaultdict(int)\n        for i in l:\n            d[i] += 1\n        m = n + 1\n        for i in d.values():\n            if i > 1:\n                c = n - i + 1\n                if m > c:\n                    m = c\n        print(-1) if m == n + 1 else print(m)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1 or len(set(l)) == 1:\n        print(0)\n    else:\n        d = defaultdict(int)\n        for i in l:\n            d[i] += 1\n        m = n + 1\n        for i in d.values():\n            if i > 1:\n                c = n - i + 1\n                if m > c:\n                    m = c\n        print(-1) if m == n + 1 else print(m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    maxCount = 1\n    m = {}\n    for x in a:\n        if x not in m:\n            m[x] = 1\n        else:\n            m[x] += 1\n    for freq in m.values():\n        maxCount = max(maxCount, freq)\n    ans = -1\n    if n == 1 or maxCount == n:\n        ans = 0\n    elif maxCount > 1:\n        ans = n - maxCount + 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    length = len(l)\n    r = list(set(l))\n    d = dict.fromkeys(r, 0)\n    for i in l:\n        d[i] += 1\n    maximum = 0\n    for i in d:\n        if maximum < d[i]:\n            maximum = d[i]\n    if maximum == n:\n        print(0)\n    elif maximum == 1 and len(d.keys()) == n:\n        print(-1)\n    else:\n        print(n - maximum + 1)", "from collections import defaultdict\nfor t in range(int(input())):\n    n = int(input())\n    np = defaultdict(int)\n    arr = [int(x) for x in input().split()]\n    for h in arr:\n        np[h] += 1\n    if len(np) == 1:\n        print(0)\n    elif len(np) == n:\n        print(-1)\n    else:\n        ans = 0\n        for (k, v) in np.items():\n            if v > ans:\n                ans = v\n        print(n - ans + 1)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    LL = list(map(int, input().split()))\n    freqDict = dict()\n    for item in LL:\n        if item in freqDict:\n            freqDict[item] += 1\n        else:\n            freqDict[item] = 1\n    maxFrq = max(list(freqDict.values()))\n    if maxFrq == 1:\n        if len(list(freqDict.keys())) == 1:\n            print('0')\n        else:\n            print('-1')\n    elif len(list(freqDict.keys())) == 1:\n        print('0')\n    else:\n        minOper = N - maxFrq + 1\n        print(minOper)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mp = defaultdict(int)\n    for num in a:\n        mp[num] += 1\n    if len(mp) == 1:\n        print(0)\n    elif len(mp) == n:\n        print(-1)\n    else:\n        ans = n + 5\n        for (key, value) in mp.items():\n            if value > 1:\n                ans = min(ans, n - value + 1)\n        print(ans)", "t = int(input())\nwhile t != 0:\n    try:\n        n = int(input())\n        a = list(map(int, input().split(' ')))\n        m = 1\n        x = 1\n        a.sort()\n        for i in range(n):\n            if a[i] == a[i - 1]:\n                x = x + 1\n                m = max(m, x)\n            else:\n                x = 1\n        if n == m:\n            print('0')\n            continue\n        if m == 1:\n            print('-1')\n            continue\n        print(n - m + 1)\n    except EOFError:\n        break\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    if n == 1:\n        print(0)\n    else:\n        dic = {}\n        for item in a:\n            if item in dic:\n                dic[item] += 1\n            else:\n                dic[item] = 1\n        maximum = 1\n        for item in dic:\n            if dic[item] > maximum:\n                maximum = dic[item]\n        if maximum == 1:\n            print(-1)\n        elif maximum == n:\n            print(0)\n        else:\n            print(n - maximum + 1)", "from collections import defaultdict\n\ndef minSeq(arr, n):\n    freq = defaultdict(int)\n    for num in arr:\n        freq[num] += 1\n    if len(freq) == 1:\n        return 0\n    elif len(freq) == n:\n        return -1\n    else:\n        ans = n + 10\n        for (num, time) in freq.items():\n            if time > 0:\n                ans = min(ans, n - time + 1)\n        return ans\nt = int(input())\nfor z in range(t):\n    n = int(input())\n    elm = list(map(int, input().split()))\n    print(minSeq(elm, n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    z = input().split()\n    l = dict()\n    for i in z:\n        if i not in l:\n            l[i] = 1\n        else:\n            l[i] += 1\n    j = max(list(l.values()))\n    x = 0\n    sum = 0\n    if n == 1 or len(list(l.values())) == 1:\n        print(0)\n    elif j == 1:\n        print(-1)\n    else:\n        for i in list(l.values()):\n            if i != j or x > 0:\n                sum += i\n            elif x == 0:\n                x += 1\n        print(sum + 1)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        n = get_int()\n        arr = get_list()\n        d = dict()\n        for i in range(n):\n            if arr[i] not in d:\n                d[arr[i]] = 1\n            else:\n                d[arr[i]] += 1\n        if len(d) == 1:\n            get_print_int(0)\n        elif len(d) == n:\n            get_print_int(-1)\n        else:\n            get_print_int(n - 1 - (max(d.values()) - 2))\nsolve()", "T = int(input())\nfrom collections import defaultdict\nfor _ in range(T):\n    N = int(input())\n    A = map(int, input().split())\n    Freq = defaultdict(lambda : 0)\n    for a in A:\n        Freq[a] += 1\n    most_frq = max(Freq.values())\n    if most_frq == N:\n        print(0)\n    elif most_frq < 2:\n        print(-1)\n    else:\n        print(N - most_frq + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    dic = {}\n    for i in arr:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    if len(dic) == 1:\n        print(0)\n    elif len(dic) == n:\n        print(-1)\n    else:\n        ans = n + 2\n        for (key, value) in dic.items():\n            if value > 1:\n                ans = min(ans, n - value + 1)\n        print(ans)", "nbListe = int(input())\nfor _ in range(nbListe):\n    nbNombre = int(input())\n    l = list(map(int, input().split()))\n    k = list(set(l))\n    d = {}\n    d = dict.fromkeys(k, 0)\n    for j in l:\n        d[j] += 1\n    max = 0\n    for i in d:\n        if max < d[i]:\n            max = d[i]\n    if max == nbNombre:\n        print(0)\n    elif max == 1 and len(d.keys()) == nbNombre:\n        print(-1)\n    else:\n        print(nbNombre - max + 1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    elems = [int(i) for i in input().split(' ')]\n    freq = {}\n    for i in range(len(elems)):\n        if elems[i] not in freq:\n            freq[elems[i]] = 0\n        freq[elems[i]] += 1\n    maxf = max(list(freq.values()))\n    minops = n - maxf + 1\n    if minops == 1:\n        print(0)\n    elif minops == n:\n        print(-1)\n    else:\n        print(minops)", "for a in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if len(set(l)) == 1:\n        print(0)\n    elif len(set(l)) == len(l):\n        print(-1)\n    else:\n        d = {}\n        m = 0\n        c = d.fromkeys(l, 0)\n        for i in l:\n            if i in c:\n                c[i] += 1\n        m = max(c.values())\n        print(len(l) - m + 1)", "import sys\n\ndef execute(n, values):\n    if n == 1:\n        return 0\n    count_dict = dict()\n    max_count = -1\n    for val in values:\n        if val in count_dict:\n            count_dict[val] += 1\n        else:\n            count_dict[val] = 1\n        if count_dict[val] > max_count:\n            max_count = count_dict[val]\n    if max_count == 1:\n        return -1\n    if len(count_dict.keys()) == 1:\n        return 0\n    total_sum = n - max_count - 1 + 2\n    return int(total_sum)\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    values = list(map(int, input().split()))\n    print(execute(n, values))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    length = len(l)\n    r = list(set(l))\n    d = dict.fromkeys(r, 0)\n    for i in l:\n        d[i] += 1\n    maximum = 0\n    for i in d:\n        if maximum < d[i]:\n            maximum = d[i]\n    if maximum == n:\n        print(0)\n    elif maximum == 1 and len(d.keys()) == n:\n        print(-1)\n    else:\n        print(n - maximum + 1)", "from collections import defaultdict\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    S = set(A)\n    mp = defaultdict(int)\n    for num in A:\n        mp[num] += 1\n    if A.count(A[0]) == N:\n        print(0)\n    elif sorted(A) == list(S):\n        print(-1)\n    else:\n        ans = N + 5\n        for (key, value) in mp.items():\n            if value > 1:\n                ans = min(ans, N - value + 1)\n        print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    length = len(l)\n    r = list(set(l))\n    d = dict.fromkeys(r, 0)\n    for i in l:\n        d[i] += 1\n    maximum = 0\n    for i in d:\n        if maximum < d[i]:\n            maximum = d[i]\n    if maximum == n:\n        print(0)\n    elif maximum == 1 and len(d.keys()) == n:\n        print(-1)\n    else:\n        print(n - maximum + 1)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = dict()\n    if n == 1:\n        print(0)\n        continue\n    for i in range(n):\n        if not a[i] in d:\n            d[a[i]] = 0\n        d[a[i]] += 1\n    max_freq = 0\n    max_freq_key = 1\n    for i in d.keys():\n        if d[i] >= max_freq:\n            max_freq_key = i\n            max_freq = d[i]\n    if max_freq == 1:\n        print(-1)\n    else:\n        if max_freq == n:\n            print(0)\n            continue\n        print(n - max_freq + 1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(input().split())\n\n    def most_frequent(a):\n        occurence_count = Counter(a)\n        return occurence_count.most_common(1)[0][1]\n    f = most_frequent(a)\n    ans = n + 1 - most_frequent(a)\n    if ans == n and n != 1:\n        print(-1)\n    elif n == 1 or f == n:\n        print(0)\n    else:\n        print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    elif len(set(l)) == len(l):\n        print(-1)\n    else:\n        y = 0\n        d = {}\n        for i in l:\n            try:\n                d[i] += 1\n                if d[i] > y:\n                    y = d[i]\n            except KeyError:\n                d[i] = 1\n        if n == y:\n            print(0)\n        else:\n            print(n - y + 1)", "t = int(input())\nfor u in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (d, f) = ({}, False)\n    (m, ans) = (-2 ** 32, 0)\n    for i in l:\n        if i in d:\n            d[i] += 1\n            f = True\n        else:\n            d[i] = 1\n        m = max(m, d[i])\n    if f:\n        if m == n:\n            print(0)\n        else:\n            ans = n - m\n            print(ans + 1)\n    elif n == 1:\n        print(0)\n    else:\n        print(-1)", "from collections import defaultdict as d\nfor i in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    vals = d(int)\n    if n == 1 or max(li) == min(li):\n        print(0)\n    elif len(set(li)) == len(li):\n        print(-1)\n    else:\n        for i in li:\n            vals[i] += 1\n        min_val = n + 5\n        for (i, j) in vals.items():\n            if n - j + 1 < min_val and j > 1:\n                min_val = n - j + 1\n        print(min_val)", "from collections import Counter\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    freq = Counter(A)\n    max_freq = max(freq.values())\n    if N == max_freq:\n        print(0)\n    elif N == len(freq.keys()):\n        print(-1)\n    else:\n        print(N - max_freq + 1)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    for num in arr:\n        if num in d:\n            d[num] += 1\n        else:\n            d[num] = 1\n    max_freq = max(d.values())\n    if n == 1 or max_freq == n:\n        print(0)\n    elif max_freq >= 2:\n        print(n - max_freq + 1)\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    freq = {}\n    for item in l:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n    maxi = max(freq.values())\n    if len(l) == 1:\n        print(0)\n    elif maxi == 1:\n        print(-1)\n    elif maxi == len(l):\n        print(0)\n    else:\n        print(len(l) - maxi + 1)", "from collections import Counter\ntry:\n    for _ in range(int(input())):\n        N = int(input())\n        numbers = list(map(int, input().split()))\n        cc = Counter(numbers)\n        s = list(set(numbers))\n        if len(numbers) == 1 or len(s) == 1:\n            print(0)\n        elif len(numbers) == 2:\n            print(-1)\n        elif len(s) == len(numbers):\n            print(-1)\n        else:\n            maxed = cc.most_common()\n            rep = maxed[0][1]\n            total = len(numbers) + 1 - rep\n            print(total)\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = {}\n    for i in a:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    if len(freq) == 1:\n        print(0)\n        continue\n    if len(freq) == n:\n        print(-1)\n        continue\n    ans = float('inf')\n    for i in freq:\n        if freq[i] > 1:\n            ans = min(n - freq[i] + 1, ans)\n    print(ans)", "from collections import defaultdict\nfor test_cases in range(int(input())):\n    n = int(input())\n    mp = defaultdict(int)\n    arr = [int(x) for x in input().split()]\n    for num in arr:\n        mp[num] += 1\n    if len(mp) == 1:\n        print(0)\n    elif len(mp) == n:\n        print(-1)\n    else:\n        ans = n + 5\n        for (key, value) in mp.items():\n            if value > 1:\n                ans = min(ans, n - value + 1)\n        print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    dic = {}\n    arr = list(map(int, input().split()))\n    for i in arr:\n        if i not in dic.keys():\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    if len(dic) == 1:\n        print(0)\n    elif len(dic) == n:\n        print(-1)\n    else:\n        print(n - max(dic.values()) + 1)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    length = len(l)\n    r = list(set(l))\n    d = dict.fromkeys(r, 0)\n    for i in l:\n        d[i] += 1\n    maximum = 0\n    for i in d:\n        if maximum < d[i]:\n            maximum = d[i]\n    if maximum == n:\n        print(0)\n    elif maximum == 1 and len(d.keys()) == n:\n        print(-1)\n    else:\n        print(n - maximum + 1)", "try:\n    t = input()\n    for i in range(int(t)):\n        n = input()\n        a = input()\n        l = list(map(int, a.split(' ')))\n        mx = 1\n        c = 1\n        l.sort()\n        for k in range(1, int(n)):\n            if l[k] == l[k - 1]:\n                c += 1\n                mx = max(mx, c)\n            else:\n                c = 1\n        if int(n) == mx:\n            print(0)\n        elif mx == 1:\n            print(-1)\n        else:\n            print(int(n) - mx + 1)\nexcept EOFError as e:\n    print()", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    dic = {}\n    if n == 1:\n        print('0')\n    else:\n        max_total = 0\n        max_no = 0\n        for i in range(n):\n            if a[i] not in dic:\n                dic[a[i]] = 1\n            else:\n                dic[a[i]] = dic[a[i]] + 1\n            if dic[a[i]] > max_total:\n                max_total = dic[a[i]]\n                max_no = a[i]\n        if max_total == 1:\n            print('-1')\n        elif max_total == n:\n            print('0')\n        else:\n            print(n - max_total + 1)", "for t in range(int(input())):\n    n = int(input())\n    di = {}\n    val = 1\n    li = list(map(int, input().split()))\n    if len(li) < 2:\n        print(0)\n    else:\n        for i in li:\n            val = i\n            if val in di:\n                di[val] += 1\n            else:\n                di[val] = 1\n        if len(di) == n:\n            print(-1)\n        elif len(di) == 1:\n            print(0)\n        else:\n            maxi = max(di.values())\n            print(n - maxi + 1)", "for t in range(int(input())):\n    n = int(input())\n    di = {}\n    val = 1\n    li = list(map(int, input().split()))\n    if len(li) < 2:\n        print(0)\n    else:\n        for i in li:\n            val = i\n            if val in di:\n                di[val] += 1\n            else:\n                di[val] = 1\n        if len(di) == n:\n            print(-1)\n        elif len(di) == 1:\n            print(0)\n        else:\n            min1 = n + 3\n            for i in di:\n                if di[i] > 1:\n                    min1 = min(min1, n - di[i] + 1)\n            print(min1)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    num_unique = len(set(arr))\n    if num_unique == 1:\n        print(0)\n    elif num_unique == n:\n        print(-1)\n    else:\n        c = Counter(arr)\n        max_freq = max(c.values())\n        ans = n - max_freq + 1\n        print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    lists = map(int, input().split())\n    if n <= 1:\n        print(0)\n        continue\n    c = Counter(lists)\n    freq = c.most_common(1)[0][1]\n    if freq == n:\n        print(0)\n        continue\n    if freq == 1:\n        print(-1)\n        continue\n    print(n - freq + 1)", "t = int(input())\nfor _ in range(t):\n    number = int(input())\n    list_number = list(map(int, input().split()))\n    set_numbers = list(set(list_number))\n    l = len(set_numbers)\n    if number == 1:\n        print(0)\n    elif l == 1:\n        print(0)\n    elif len(list_number) == l:\n        print(-1)\n    else:\n        list_number.sort()\n        last = 0\n        max_freq = 0\n        for i in range(0, number - 1):\n            freq = 0\n            if list_number[i] != list_number[i + 1]:\n                freq = i + 1 - last\n                last = i + 1\n            if max_freq < freq:\n                max_freq = freq\n        if number - last > max_freq:\n            max_freq = number - last\n        print(number + 1 - max_freq)", "for _ in range(int(input())):\n    n = map(int, input().split())\n    l = list(map(int, input().split()))\n    if len(l) == 1:\n        print(0)\n    elif len(l) == len(set(l)):\n        print(-1)\n    else:\n        d = dict()\n        for x in l:\n            if x not in d.keys():\n                d[x] = 1\n            else:\n                d[x] += 1\n        malele = max(d.values())\n        if malele == len(l):\n            print(0)\n        else:\n            ans = len(l) - malele + 1\n            print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    if n == 1:\n        print(0)\n    else:\n        for i in a:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n        m = m1 = 0\n        for i in d.keys():\n            if m < d[i]:\n                m = d[i]\n                m1 = i\n        if n - m + 1 == n:\n            print(-1)\n        elif n - m + 1 == 1:\n            print(0)\n        else:\n            print(n - m + 1)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    length = len(l)\n    r = list(set(l))\n    d = dict.fromkeys(r, 0)\n    for i in l:\n        d[i] += 1\n    maximum = 0\n    for i in d:\n        if maximum < d[i]:\n            maximum = d[i]\n    if maximum == n:\n        print(0)\n    elif maximum == 1 and len(d.keys()) == n:\n        print(-1)\n    else:\n        print(n - maximum + 1)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    length = len(l)\n    r = list(set(l))\n    d = dict.fromkeys(r, 0)\n    for i in l:\n        d[i] += 1\n    maximum = 0\n    for i in d:\n        if maximum < d[i]:\n            maximum = d[i]\n    if maximum == n:\n        print(0)\n    elif maximum == 1 and len(d.keys()) == n:\n        print(-1)\n    else:\n        print(n - maximum + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    elif len(set(l)) == len(l):\n        print(-1)\n    else:\n        y = 0\n        d = {}\n        for i in l:\n            try:\n                d[i] += 1\n                if d[i] > y:\n                    y = d[i]\n            except KeyError:\n                d[i] = 1\n        if y == n:\n            print(0)\n        else:\n            print(n - y + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    elif len(set(l)) == len(l):\n        print(-1)\n    else:\n        y = 0\n        d = {}\n        for i in l:\n            try:\n                d[i] += 1\n                if d[i] > y:\n                    y = d[i]\n            except KeyError:\n                d[i] = 1\n        if n == y:\n            print(0)\n        else:\n            print(n - y + 1)", "T = int(input())\nfor test in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    if N == 0:\n        print(-1)\n    elif N == 1:\n        print(0)\n    elif len(set(A)) == 1:\n        print(0)\n    else:\n        mx = 1\n        c = 1\n        A.sort()\n        for i in range(N):\n            if A[i] == A[i - 1]:\n                c += 1\n                mx = max(mx, c)\n            else:\n                c = 1\n        if mx == N:\n            print(0)\n        elif mx == 1:\n            print(-1)\n        else:\n            print(N - mx + 1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    x = c.most_common(1)[0][1]\n    if n == 1 or x == len(l):\n        print(0)\n    elif n >= 2 and x <= 1:\n        print(-1)\n    else:\n        print(len(l) - x + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = [0] * n\n    a = list(map(int, input().split()))\n    mx = 1\n    c = 1\n    a.sort()\n    for i in range(n):\n        if a[i] == a[i - 1]:\n            c = c + 1\n            mx = max(mx, c)\n        else:\n            c = 1\n    if n == mx:\n        print(0)\n        continue\n    if mx == 1:\n        print(-1)\n        continue\n    print(n - mx + 1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    x = c.most_common(1)[0][1]\n    if n == 1 or x == len(l):\n        print(0)\n    elif n >= 2 and x <= 1:\n        print(-1)\n    else:\n        print(len(l) - x + 1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    x = c.most_common(1)[0][1]\n    if n == 1 or x == len(l):\n        print(0)\n    elif n >= 2 and x <= 1:\n        print(-1)\n    else:\n        print(len(l) - x + 1)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    z = int(input())\n    l = list(map(int, input().split()))\n    a = Counter(l)\n    b = -1\n    c1 = -1\n    for (m, n) in a.items():\n        b = max(b, n)\n    for (m, n) in a.items():\n        if n == b:\n            c1 = m\n            break\n    if z == 1 or len(set(l)) == 1:\n        print(0)\n    elif b == 1:\n        print(-1)\n    else:\n        c2 = a[c1]\n        c3 = z - c2\n        print(c3 + 1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    x = c.most_common(1)[0][1]\n    if n == 1 or x == len(l):\n        print(0)\n    elif n >= 2 and x <= 1:\n        print(-1)\n    else:\n        print(len(l) - x + 1)", "def listof():\n    for i in range(int(input())):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        a.sort()\n        m = 1\n        c = 1\n        for i in range(n):\n            if a[i] == a[i - 1]:\n                c += 1\n                m = max(m, c)\n            else:\n                c = 1\n        if n == m:\n            print(0)\n            continue\n        if m == 1:\n            print(-1)\n            continue\n        print(n - m + 1)\nlistof()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = {}\n    m = 0\n    l = input().split(' ')\n    for j in l:\n        if j in d:\n            d[j] += 1\n            if d[j] >= 2 and d[j] > m:\n                m = d[j]\n        else:\n            d[j] = 1\n    if len(d.keys()) == 1:\n        print(0)\n    elif m == 0:\n        print(-1)\n    else:\n        print(int(n - (m - 2) - 1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    if n == 1:\n        print(0)\n    else:\n        for i in a:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n        m = m1 = 0\n        for i in d.keys():\n            if m < d[i]:\n                m = d[i]\n                m1 = i\n        if n - m + 1 == n:\n            print(-1)\n        elif n - m + 1 == 1:\n            print(0)\n        else:\n            print(n - m + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = 1\n    c = 1\n    for i in range(n):\n        if a[i] == a[i - 1]:\n            c += 1\n            m = max(m, c)\n        else:\n            c = 1\n    if n == m:\n        print('0', end='')\n        continue\n    if m == 1:\n        print('-1')\n        continue\n    print(n - m + 1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    x = c.most_common(1)[0][1]\n    if n == 1 or x == len(l):\n        print(0)\n    elif n >= 2 and x <= 1:\n        print(-1)\n    else:\n        print(len(l) - x + 1)", "for i in range(int(input())):\n    x = int(input())\n    a = list(map(int, input().split()))\n    (b, c) = (1, 1)\n    a.sort()\n    for i in range(1, x):\n        if a[i] == a[i - 1]:\n            c += 1\n            b = max(b, c)\n        else:\n            c = 1\n    if x == b:\n        print('0')\n        continue\n    if b == 1:\n        print('-1')\n        continue\n    print(x - b + 1)", "for i in range(int(input())):\n    x = int(input())\n    a = list(map(int, input().split()))\n    (b, c) = (1, 1)\n    a.sort()\n    for i in range(1, x):\n        if a[i] == a[i - 1]:\n            c += 1\n            b = max(b, c)\n        else:\n            c = 1\n    if x == b:\n        print('0')\n        continue\n    if b == 1:\n        print('-1')\n        continue\n    print(x - b + 1)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = Counter(a)\n    m = max(l, key=l.get)\n    h = l[m]\n    if h == len(a):\n        print(0)\n    elif h >= 2:\n        print(len(a) - h + 1)\n    else:\n        print('-1')", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    c = Counter(list1)\n    y = c.most_common(1)[0][1]\n    if n == 1 or y == len(list1):\n        print(0)\n    elif n >= 2 and y <= 1:\n        print(-1)\n    else:\n        print(len(list1) - y + 1)"]