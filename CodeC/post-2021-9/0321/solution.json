["for _ in range(int(input())):\n    n = int(input())\n    S = [int(x) for x in input().split()]\n    dif = S[-1] - S[0]\n    ans = True\n    for i in range(int(n / 2)):\n        if S[-i - 1] - S[i] > dif or S[-i - 1] - S[i] < 0:\n            print(-1)\n            ans = False\n            break\n        dif = S[-i - 1] - S[i]\n    if ans:\n        print(S[-1] - S[0])", "for _ in range(int(input())):\n    n = int(input())\n    S = [int(x) for x in input().split()]\n    dif = S[-1] - S[0]\n    ans = True\n    for i in range(int(n / 2)):\n        if S[i] > S[-i - 1]:\n            print(-1)\n            ans = False\n            break\n        elif S[-i - 1] - S[i] > dif:\n            print(-1)\n            ans = False\n            break\n        dif = S[-i - 1] - S[i]\n    if ans:\n        print(S[-1] - S[0])", "for _ in range(int(input())):\n    n = int(input())\n    S = [int(x) for x in input().split()]\n    dif = 10000000000\n    ans = True\n    for i in range(int(n / 2)):\n        if S[i] > S[-i - 1]:\n            print(-1)\n            ans = False\n            break\n        elif S[-i - 1] - S[i] > dif:\n            print(-1)\n            ans = False\n            break\n        dif = S[-i - 1] - S[i]\n    if ans:\n        print(S[-1] - S[0])", "for _ in range(int(input())):\n    n = int(input())\n    S = [int(x) for x in input().split()]\n    dif = 10000000000\n    ans = True\n    for i in range(int(n / 2)):\n        if S[i] > S[-i - 1]:\n            print(-1)\n            ans = False\n            break\n        elif S[-i - 1] - S[i] > dif:\n            print(-1)\n            ans = False\n            break\n        dif = S[-i - 1] - S[i]\n    if ans:\n        print(S[-1] - S[0])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    x = n // 2\n    d1 = A[n - 1] - A[0]\n    d2 = 0\n    ans = 1\n    for j in range(x - 1):\n        d2 = A[n - j - 2] - A[j + 1]\n        if d2 < 0:\n            ans = 0\n            break\n        elif d2 <= d1:\n            d1 = d2\n        else:\n            ans = 0\n            break\n    if ans == 0:\n        print(-1)\n    else:\n        print(A[n - 1] - A[0])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    x = n // 2\n    d1 = A[n - 1] - A[0]\n    d2 = 0\n    ans = 1\n    for j in range(x - 1):\n        d2 = A[n - j - 2] - A[j + 1]\n        if d2 < 0:\n            ans = 0\n            break\n        elif d2 <= d1:\n            d1 = d2\n        else:\n            ans = 0\n            break\n    if ans == 0:\n        print(-1)\n    else:\n        print(A[n - 1] - A[0])", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    last_diff = 0\n    for i in reversed(range(n // 2)):\n        diff = a[n - 1 - i] - a[i]\n        if diff < last_diff:\n            diff = -1\n            break\n        last_diff = diff\n    print(diff)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    bad = False\n    tot = 0\n    last_diff = 0\n    for i in reversed(range(n // 2)):\n        diff = a[n - 1 - i] - a[i]\n        if diff < last_diff:\n            diff = -1\n            break\n        last_diff = diff\n    print(diff)", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    previous = num[-1] - num[0]\n    for i in range(n // 2):\n        current = num[-(i + 1)] - num[i]\n        if current < 0 or previous < current:\n            print(-1)\n            break\n        previous = current\n    else:\n        print(num[-1] - num[0])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = a[n - 1] - a[0]\n    for i in range(n // 2):\n        c = a[-(i + 1)] - a[i]\n        if p < c or c < 0:\n            print(-1)\n            break\n        p = c\n    else:\n        print(a[n - 1] - a[0])", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    previous = num[-1] - num[0]\n    for i in range(n // 2):\n        current = num[-(i + 1)] - num[i]\n        if current < 0 or previous < current:\n            print(-1)\n            break\n        previous = current\n    else:\n        print(num[-1] - num[0])", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    previous = num[-1] - num[0]\n    for i in range(n // 2):\n        current = num[-(i + 1)] - num[i]\n        if current < 0 or previous < current:\n            print(-1)\n            break\n        previous = current\n    else:\n        print(num[-1] - num[0])", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    diff = []\n    for i in range(n // 2):\n        diff.append(num[-(i + 1)] - num[i])\n    if not all(map(lambda x: 1 if x >= 0 else 0, diff)):\n        print(-1)\n        continue\n    for j in range(len(diff) - 1):\n        if diff[j] < diff[j + 1]:\n            print(-1)\n            break\n    else:\n        print(diff[0])", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    half = n // 2\n    left = a[:half]\n    left.reverse()\n    right = []\n    if n % 2 == 1:\n        right = a[half + 1:]\n    else:\n        right = a[half:]\n    diff = []\n    for i in range(half):\n        diff.append(right[i] - left[i])\n    check = diff[-1] < 0\n    for i in range(half - 1):\n        if diff[i] > diff[i + 1] or diff[i] < 0:\n            check = True\n            break\n    if check:\n        print(-1)\n    else:\n        print(diff[-1])", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left = []\n    k = True\n    for i in range(len(a) // 2):\n        if a[i] <= a[-i - 1]:\n            left.append(a[-i - 1] - a[i])\n        else:\n            k = False\n            print('-1')\n            break\n    if k:\n        m = []\n        m.extend(left)\n        m.reverse()\n        left.sort()\n        if m == left:\n            print(m[-1])\n        else:\n            print('-1')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left = []\n    k = True\n    for i in range(len(a) // 2):\n        if a[i] <= a[-i - 1]:\n            left.append(a[-i - 1] - a[i])\n        else:\n            k = False\n            print('-1')\n            break\n    if k:\n        m = []\n        m.extend(left)\n        m.reverse()\n        left.sort()\n        if m == left:\n            print(m[-1])\n        else:\n            print('-1')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    half = n // 2\n    left = a[:half]\n    left.reverse()\n    right = []\n    if n % 2 == 1:\n        right = a[half + 1:]\n    else:\n        right = a[half:]\n    diff = []\n    for i in range(half):\n        diff.append(right[i] - left[i])\n    check = diff[-1] < 0\n    for i in range(half - 1):\n        if diff[i] > diff[i + 1] or diff[i] < 0:\n            check = True\n            break\n    if check:\n        print(-1)\n    else:\n        print(diff[-1])", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    half = n // 2\n    left = a[:half]\n    left.reverse()\n    right = []\n    if n % 2 == 1:\n        right = a[half + 1:]\n    else:\n        right = a[half:]\n    diff = []\n    for i in range(half):\n        diff.append(right[i] - left[i])\n    check = diff[-1] < 0\n    for i in range(half - 1):\n        if diff[i] > diff[i + 1] or diff[i] < 0:\n            check = True\n            break\n    if check:\n        print(-1)\n    else:\n        print(diff[-1])", "for _ in range(int(input())):\n    N = int(input())\n    l = list(map(int, input().split()))\n    m = N // 2\n    l1 = l[:m]\n    l1 = l1[::-1]\n    l2 = l[m + 1:] if N & 1 else l[m:]\n    cc = list()\n    for i in range(len(l1)):\n        cc.append(l2[i] - l1[i])\n    fl = False\n    for i in range(1, len(cc)):\n        if cc[i] < cc[i - 1]:\n            fl = True\n    for v in cc:\n        if v < 0:\n            fl = True\n    if fl:\n        print(-1)\n    else:\n        print(cc[-1])", "def palindrome(n, arr):\n    if n == 1:\n        return 0\n    mid = (n - 1) // 2\n    count = 0\n    for i in range(mid, -1, -1):\n        temp = arr[i] + count\n        if temp > arr[n - 1 - i]:\n            return -1\n        elif temp < arr[n - 1 - i]:\n            count += arr[n - 1 - i] - temp\n    return count\nt = int(input())\nres = []\nwhile t > 0:\n    n = int(input())\n    arr = [int(ele) for ele in input().split(' ')]\n    res.append(palindrome(n, arr))\n    t -= 1\nfor r in res:\n    print(r)", "def palindrome(n, arr):\n    if n == 1:\n        return 0\n    mid = (n - 1) // 2\n    count = 0\n    for i in range(mid, -1, -1):\n        temp = arr[i] + count\n        if temp > arr[n - 1 - i]:\n            return -1\n        elif temp < arr[n - 1 - i]:\n            count += arr[n - 1 - i] - temp\n    return count\nt = int(input())\nres = []\nwhile t > 0:\n    n = int(input())\n    arr = [int(ele) for ele in input().split(' ')]\n    res.append(palindrome(n, arr))\n    t -= 1\nfor r in res:\n    print(r)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a == a[::-1]:\n        print('0')\n        continue\n    l = m = a[-1] - a[0]\n    for i in range(n // 2):\n        if a[i] > a[-i - 1]:\n            print('-1')\n            break\n        if a[-i - 1] - a[i] > m:\n            print('-1')\n            break\n        m = a[-i - 1] - a[i]\n    else:\n        print(l)", "def palindrome(n, arr):\n    if n == 1:\n        return 0\n    mid = (n - 1) // 2\n    count = 0\n    for i in range(mid, -1, -1):\n        temp = arr[i] + count\n        if temp > arr[n - 1 - i]:\n            return -1\n        elif temp < arr[n - 1 - i]:\n            count += arr[n - 1 - i] - temp\n    return count\nt = int(input())\nres = []\nwhile t > 0:\n    n = int(input())\n    arr = [int(ele) for ele in input().split(' ')]\n    res.append(palindrome(n, arr))\n    t -= 1\nfor r in res:\n    print(r)", "def palindrome(n, arr):\n    if n == 1:\n        return 0\n    mid = (n - 1) // 2\n    count = 0\n    for i in range(mid, -1, -1):\n        temp = arr[i] + count\n        if temp > arr[n - 1 - i]:\n            return -1\n        elif temp < arr[n - 1 - i]:\n            count += arr[n - 1 - i] - temp\n    return count\nt = int(input())\nres = []\nwhile t > 0:\n    n = int(input())\n    arr = [int(ele) for ele in input().split(' ')]\n    res.append(palindrome(n, arr))\n    t -= 1\nfor r in res:\n    print(r)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = input()\n    arr = list(map(int, arr.split(' ')))\n    if arr[0] > arr[-1]:\n        print(-1)\n        continue\n    num_of_op = arr[-1] - arr[0]\n    diff = arr[-1] - arr[0]\n    j = -2\n    flag = False\n    for k in range(1, int(len(arr) / 2)):\n        if arr[k] > arr[j] or diff < arr[j] - arr[k]:\n            flag = True\n            break\n        diff = arr[j] - arr[k]\n        j = j - 1\n    if flag:\n        num_of_op = -1\n    print(num_of_op)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = input()\n    arr = list(map(int, arr.split(' ')))\n    if arr[0] > arr[-1]:\n        print(-1)\n        continue\n    diff_arr = [arr[-1] - arr[0]]\n    j = -2\n    num_of_op = 0\n    flag = False\n    for k in range(1, int(len(arr) / 2)):\n        if arr[k] > arr[j] or diff_arr[-1] < arr[j] - arr[k]:\n            flag = True\n            break\n        diff_arr.append(arr[j] - arr[k])\n        j = j - 1\n    num_of_op = diff_arr[0]\n    if flag:\n        num_of_op = -1\n    print(num_of_op)", "def give_result(num):\n    i = 0\n    j = len(num) - 1\n    results = []\n    same = 0\n    while i < j:\n        if num[i] != num[j]:\n            if num[j] < num[i]:\n                return -1\n            else:\n                if same != 0:\n                    return -1\n                results.append(num[j] - num[i])\n        else:\n            same += 1\n        i += 1\n        j -= 1\n    temp = results.copy()\n    temp.sort(reverse=True)\n    if len(results) > 0 and results == temp:\n        return results[0]\n    elif len(results) == 0:\n        return 0\n    else:\n        return -1\nfor _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    print(give_result(num))", "from collections import Counter, defaultdict\nimport sys\nimport math\n\ndef sol(n, s):\n    ans = 0\n    if len(s) == 1 or len(s) == 0:\n        return 0\n    min_ = float('inf')\n    for i in range(n // 2):\n        if s[n - i - 1] < s[i]:\n            return -1\n        else:\n            k = s[n - i - 1] - s[i]\n            if k > min_:\n                return -1\n            else:\n                min_ = s[n - i - 1] - s[i]\n    return s[-1] - s[0]\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return str(input())\n\ndef invr():\n    return map(int, input().split())\nT = inp()\nfor i in range(T):\n    n = inp()\n    s = inlt()\n    print(sol(n, s))", "def give_result(num):\n    i = 0\n    j = len(num) - 1\n    results = []\n    same = 0\n    while i < j:\n        if num[i] != num[j]:\n            if num[j] < num[i]:\n                return -1\n            else:\n                if same != 0:\n                    return -1\n                results.append(num[j] - num[i])\n        else:\n            same += 1\n        i += 1\n        j -= 1\n    temp = results.copy()\n    temp.sort(reverse=True)\n    if len(results) > 0 and results == temp:\n        return results[0]\n    elif len(results) == 0:\n        return 0\n    else:\n        return -1\nfor _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    print(give_result(num))", "from collections import Counter, defaultdict\nimport sys\nimport math\n\ndef sol(n, s):\n    ans = 0\n    if len(s) == 1 or len(s) == 0:\n        return 0\n    min_ = float('inf')\n    for i in range(n // 2):\n        if s[n - i - 1] < s[i]:\n            return -1\n        else:\n            k = s[n - i - 1] - s[i]\n            if k > min_:\n                return -1\n            else:\n                min_ = s[n - i - 1] - s[i]\n    return s[-1] - s[0]\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return str(input())\n\ndef invr():\n    return map(int, input().split())\nT = inp()\nfor i in range(T):\n    n = inp()\n    s = inlt()\n    print(sol(n, s))", "t = int(input())\n\ndef pallindrome(a):\n    d = len(a)\n    q = 1\n    for i in range(d // 2):\n        if a[i] == a[d - i - 1]:\n            continue\n        else:\n            q = 0\n            break\n    if not q:\n        return 0\n    else:\n        return 1\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        continue\n    if n % 2 == 1:\n        a.pop(n // 2)\n        n -= 1\n    b = sorted(a)\n    if pallindrome(a):\n        print(0)\n    else:\n        j = 0\n        d = a[n - 1] - a[0]\n        while j < n // 2:\n            if d >= a[n - j - 1] - a[j]:\n                d = a[n - j - 1] - a[j]\n                if d < 0:\n                    print(-1)\n                    break\n            else:\n                print(-1)\n                break\n            j += 1\n        if j == n // 2:\n            print(a[n - 1] - a[0])", "for i in range(int(input())):\n    n = int(input())\n    pok = list(map(int, input().split()))\n    mari = n // 2\n    Flag = 0\n    l1 = pok[:mari]\n    l1 = l1[::-1]\n    Flag = 1\n    l2 = pok[mari + 1:] if n & 1 else pok[mari:]\n    ihj = list()\n    for j in range(len(l1)):\n        ihj.append(l2[j] - l1[j])\n        Flag += 1\n    hyy = False\n    for kj in range(1, len(ihj)):\n        if ihj[kj] < ihj[kj - 1]:\n            hyy = True\n    for jh in ihj:\n        if jh < 0:\n            hyy = True\n    if hyy:\n        print(-1)\n    else:\n        print(ihj[-1])", "for i in range(int(input())):\n    f = int(input())\n    arr = list(map(int, input().split()))\n    fg = False\n    answer = arr[f - 1] - arr[0]\n    if answer < 0:\n        print('-1')\n        continue\n    x = f // 2\n    fin = answer\n    for j in range(x):\n        if arr[f - j - 1] >= arr[j]:\n            if arr[f - j - 1] - arr[j] <= fin:\n                fin = arr[f - j - 1] - arr[j]\n            else:\n                fg = True\n                break\n        else:\n            fg = True\n    if fg:\n        print(-1)\n    else:\n        print(answer)", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    i = 1\n    j = N - 2\n    F = 0\n    L = []\n    L.append(A[-1] - A[0])\n    while i <= j:\n        if A[i] > A[j]:\n            F = 1\n            break\n        else:\n            if A[j] - A[i] > L[-1]:\n                F = 1\n                break\n            L.append(A[j] - A[i])\n        i += 1\n        j -= 1\n    if F == 1:\n        print(-1)\n    else:\n        print(L[0])", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 1\n    j = n - 2\n    flag = 0\n    ans = []\n    ans.append(arr[-1] - arr[0])\n    while i <= j:\n        if arr[i] > arr[j]:\n            flag = 1\n            break\n        else:\n            if arr[j] - arr[i] > ans[-1]:\n                flag = 1\n                break\n            ans.append(arr[j] - arr[i])\n        i += 1\n        j -= 1\n    if flag == 1:\n        print(-1)\n    else:\n        print(ans[0])", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    half = len(A) // 2\n    shortage = []\n    possible = True\n    prev = abs(A[-1] - A[0])\n    for i in range(half):\n        new = A[-i - 1] - A[i]\n        possible = possible and (new <= prev and new >= 0)\n        shortage.append(new)\n        prev = new\n    if possible:\n        print(A[-1] - A[0])\n    else:\n        print(-1)", "import numpy as np\n\ndef num_moves(l):\n    maximum_value = max(l)\n    number_moves = maximum_value\n    for value in l:\n        if value <= maximum_value:\n            maximum_value = value\n        else:\n            return -1\n    else:\n        return number_moves\ntestcases = int(input())\nfor _ in range(testcases):\n    N = int(input())\n    A = list(map(lambda x: int(x), input().split(' ')))\n    palindrome = []\n    for (i, val) in enumerate(A):\n        palindrome.append(max((A[i], A[-i - 1])))\n    difference = list(np.subtract(np.array(palindrome), np.array(A)))\n    print(num_moves(difference))", "def helper(n, arr):\n    (i, j) = (1, n - 2)\n    diff = arr[-1] - arr[0]\n    if diff < 0:\n        return -1\n    while i < j:\n        if arr[j] - arr[i] < 0 or arr[j] - arr[i] > diff:\n            return -1\n        diff = arr[j] - arr[i]\n        i += 1\n        j -= 1\n    return arr[-1] - arr[0]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(helper(n, arr))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    r = n // 2\n    count = 0\n    if n % 2 == 0:\n        temp1 = lis[:r]\n        temp2 = lis[r:][::-1]\n    else:\n        temp1 = lis[:r]\n        temp2 = lis[r + 1:][::-1]\n    lis = []\n    for i in range(r):\n        a = temp2[i] - temp1[i]\n        if abs(a) != a:\n            print(-1)\n            count = 1\n            break\n        else:\n            lis.append(a)\n    if count == 0:\n        bro = lis.copy()\n        bro.sort()\n        bro = bro[::-1]\n        if bro == lis:\n            print(max(lis))\n        else:\n            print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    r = n // 2\n    count = 0\n    if n % 2 == 0:\n        temp1 = lis[:r]\n        temp2 = lis[r:][::-1]\n    else:\n        temp1 = lis[:r]\n        temp2 = lis[r + 1:][::-1]\n    lis = []\n    for i in range(r):\n        a = temp2[i] - temp1[i]\n        if abs(a) != a:\n            print(-1)\n            count = 1\n            break\n        else:\n            lis.append(a)\n    if count == 0:\n        bro = lis.copy()\n        bro.sort()\n        bro = bro[::-1]\n        if bro == lis:\n            print(max(lis))\n        else:\n            print(-1)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    half = len(A) // 2\n    shortage = []\n    possible = True\n    prev = abs(A[-1] - A[0])\n    for i in range(half):\n        new = A[-i - 1] - A[i]\n        possible = possible and (new <= prev and new >= 0)\n        shortage.append(new)\n        prev = new\n    if possible:\n        print(A[-1] - A[0])\n    else:\n        print(-1)", "t = input()\nt = int(t)\nwhile t:\n    t = t - 1\n    n = input()\n    n = int(n)\n    arr = input()\n    arr = arr.split(' ')\n    arr = list(map(int, arr))\n    mid = (n - 1) // 2\n    min_diff = None\n    max_diff = None\n    not_poss = False\n    for i in range(mid + 1):\n        diff = arr[n - 1 - i] - arr[i]\n        if diff < 0:\n            not_poss = True\n            break\n        if min_diff is None:\n            min_diff = diff\n        elif diff < min_diff:\n            min_diff = diff\n        elif diff > min_diff:\n            not_poss = True\n            break\n        else:\n            pass\n        if max_diff is None:\n            max_diff = diff\n        else:\n            max_diff = max(max_diff, diff)\n    if not_poss:\n        print('-1')\n    else:\n        print(max_diff)", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    b = True\n    x = arr[0] - arr[-1]\n    for i in range(0, n // 2):\n        y = arr[i] - arr[-(i + 1)]\n        if y > 0:\n            b = False\n            break\n        if x > y:\n            b = False\n            break\n        else:\n            x = y\n    if b == False:\n        print(-1)\n    else:\n        print(arr[-1] - arr[0])", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    b = True\n    x = arr[0] - arr[-1]\n    for i in range(0, n // 2):\n        y = arr[i] - arr[-(i + 1)]\n        if y > 0:\n            b = False\n            break\n        if x > y:\n            b = False\n            break\n        else:\n            x = y\n    if b == False:\n        print(-1)\n    else:\n        print(arr[-1] - arr[0])", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n\n    def solve():\n        prev_diff = float('inf')\n        for i in range(len(A) // 2):\n            diff = A[len(A) - i - 1] - A[i]\n            if diff < 0 or diff > prev_diff:\n                return -1\n            prev_diff = diff\n        return A[-1] - A[0]\n    print(solve())", "try:\n    for i in range(int(input())):\n        n = int(input())\n        A = list(map(int, input().split()))\n        a1 = A[::-1]\n        if A == a1:\n            print(0)\n        else:\n            b = 0\n            flag = True\n            for j in range(1, n // 2):\n                if A[j] > A[n - 1 - j]:\n                    print(-1)\n                    flag = False\n                    break\n                if A[n - 1 - j] - A[j] > A[n - 1 - (j - 1)] - A[j - 1]:\n                    print(-1)\n                    flag = False\n                    break\n            if flag:\n                print(A[-1] - A[0])\nexcept:\n    pass", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = True\n    for i in range(1, n // 2):\n        if a[i] > a[n - 1 - i]:\n            print(-1)\n            flag = False\n            break\n        if a[n - 1 - i] - a[i] > a[n - 1 - (i - 1)] - a[i - 1]:\n            print(-1)\n            flag = False\n            break\n    if flag:\n        print(abs(a[0] - a[n - 1]))", "for i in range(int(input())):\n    lenOfLst = int(input())\n    lst = list(map(int, input().split()))\n    mid = lenOfLst // 2\n    vantageSection = lst[:mid][::-1]\n    if lenOfLst % 2 == 0:\n        secondSection = lst[mid:]\n    else:\n        secondSection = lst[mid + 1:]\n    check = []\n    for i in range(len(vantageSection)):\n        check.append(secondSection[i] - vantageSection[i])\n    impossible = False\n    operations = check[-1]\n    for i in range(1, len(check)):\n        if check[i] < check[i - 1]:\n            impossible = True\n            break\n    for i in check:\n        if not impossible:\n            if i < 0:\n                impossible = True\n            continue\n        break\n    if impossible:\n        print(-1)\n    else:\n        print(operations)", "t = int(input())\nwhile t != 0:\n    N = int(input())\n    l = list(map(int, input().split()))\n    m = N // 2\n    l1 = l[:m]\n    l1 = l1[::-1]\n    l2 = l[m + 1:] if N & 1 else l[m:]\n    l = []\n    for i in range(len(l1)):\n        l.append(l2[i] - l1[i])\n    d = False\n    for i in range(1, len(l)):\n        if l[i] < l[i - 1]:\n            d = True\n    for j in l:\n        if j < 0:\n            d = True\n    if d:\n        print(-1)\n    else:\n        print(l[-1])\n    t -= 1", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    nums = list(map(int, input().split()))\n    fstdif = nums[-1] - nums[0]\n    if fstdif < 0:\n        print(-1)\n        continue\n    lastdif = fstdif\n    curdif = 0\n    for i in range(1, N // 2):\n        curdif = nums[-i - 1] - nums[i]\n        if curdif < 0 or curdif > lastdif:\n            print(-1)\n            break\n        else:\n            lastdif = curdif\n    if curdif == lastdif:\n        print(fstdif)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    val = 0\n    count = 0\n    done = True\n    for i in range(n // 2):\n        if i == 0:\n            val = l[n - 1] - l[0]\n        else:\n            ele = l[n - 1 - i] - l[i]\n            if ele > val or ele < 0:\n                done = False\n                break\n            else:\n                val = ele\n    if done:\n        if n == 2 and val >= 0:\n            print(val)\n        elif n != 2:\n            print(l[-1] - l[0])\n        else:\n            print(-1)\n    else:\n        print(-1)", "for i in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    flag = False\n    ans = arr[N - 1] - arr[0]\n    if ans < 0:\n        print('-1')\n        continue\n    x = N // 2\n    final = ans\n    for j in range(x):\n        if arr[N - j - 1] >= arr[j]:\n            if arr[N - j - 1] - arr[j] <= final:\n                final = arr[N - j - 1] - arr[j]\n            else:\n                flag = True\n                break\n        else:\n            flag = True\n    if flag:\n        print('-1')\n    else:\n        print(ans)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    nums = list(map(int, input().split()))\n    fstdif = nums[-1] - nums[0]\n    if fstdif < 0:\n        print(-1)\n        continue\n    lastdif = fstdif\n    curdif = 0\n    for i in range(1, N // 2):\n        curdif = nums[-i - 1] - nums[i]\n        if curdif < 0 or curdif > lastdif:\n            print(-1)\n            break\n        else:\n            lastdif = curdif\n    if curdif == lastdif:\n        print(fstdif)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    mid = n // 2\n    add = 0\n    count = 0\n    for i in range(mid - 1, -1, -1):\n        if l[i] + add > l[n - i - 1]:\n            print(-1)\n            break\n        elif l[i] + add == l[n - i - 1]:\n            continue\n        add += l[n - i - 1] - l[i] - add\n    else:\n        print(add)", "def solution(arr, no_ele):\n    if arr == arr[::-1]:\n        return 0\n    (i, j) = (0, no_ele - 1)\n    temp = []\n    while i < j:\n        sb = arr[j] - arr[i]\n        if sb < 0:\n            return -1\n        else:\n            temp.append(sb)\n        i += 1\n        j -= 1\n    ans = 0\n    for i in range(len(temp) - 1, -1, -1):\n        if ans > temp[i]:\n            return -1\n        temp1 = temp[i] - ans\n        ans += temp1\n    return ans\nnum = int(input())\nfor _ in range(num):\n    no_ele = int(input())\n    main_arr = list(map(int, input().strip().split()))\n    print(solution(main_arr, no_ele))", "def ans(l, n):\n    mid = n // 2\n    prev = 10 ** 9\n    mx = -1\n    for i in range(mid + 1):\n        curr = l[n - i - 1] - l[i]\n        if curr > prev:\n            return -1\n        mx = max(mx, curr)\n        prev = curr\n    return mx\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    print(ans(l, n))", "def mgc(arr, n):\n    if arr == arr[::-1]:\n        return 0\n    temp = []\n    for i in range(n // 2):\n        x = arr[n - i - 1] - arr[i]\n        if x < 0:\n            return -1\n        else:\n            temp.append(x)\n    ans = 0\n    for i in range(len(temp) - 1, -1, -1):\n        if ans > temp[i]:\n            return -1\n        ops = temp[i] - ans\n        ans += ops\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(mgc(arr, n))", "for j in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    count = 0\n    flag = False\n    for i in range(N // 2 - 1, -1, -1):\n        if A[i] + count > A[N - i - 1]:\n            flag = True\n            break\n        count += A[N - i - 1] - A[i] - count\n    if flag == True:\n        print(-1)\n    else:\n        print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    flag = 0\n    sub = 0\n    for i in range(n // 2, n):\n        j = n - i - 1\n        if l[i] >= l[j] + sub:\n            sub = l[i] - l[j]\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print(sub)\n    else:\n        print('-1')", "def mgc(arr, n):\n    if arr == arr[::-1]:\n        return 0\n    temp = []\n    for i in range(n // 2):\n        x = arr[n - i - 1] - arr[i]\n        if x < 0:\n            return -1\n        else:\n            temp.append(x)\n    ans = 0\n    for i in range(len(temp) - 1, -1, -1):\n        if ans > temp[i]:\n            return -1\n        ops = temp[i] - ans\n        ans += ops\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(mgc(arr, n))", "def mgc(arr, n):\n    if arr == arr[::-1]:\n        return 0\n    temp = []\n    for i in range(n // 2):\n        x = arr[n - i - 1] - arr[i]\n        if x < 0:\n            return -1\n        else:\n            temp.append(x)\n    ans = 0\n    cum = 0\n    for i in range(len(temp) - 1, -1, -1):\n        if cum > temp[i]:\n            return -1\n        ops = temp[i] - cum\n        cum += ops\n        ans += ops\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(mgc(arr, n))", "T = int(input())\nfor j in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    count = 0\n    flag = False\n    for i in range(N // 2 - 1, -1, -1):\n        if A[i] + count > A[N - i - 1]:\n            flag = True\n            break\n        count += A[N - i - 1] - A[i] - count\n    if flag == True:\n        print(-1)\n    else:\n        print(count)", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N % 2 == 0:\n        x = N // 2 - 1\n    else:\n        x = N // 2\n    i = x\n    flag = 0\n    temp = 0\n    moves = 0\n    while i >= 0:\n        if A[i] > A[N - i - 1]:\n            flag = 1\n            break\n        else:\n            moves = moves + A[N - i - 1] - A[i]\n            temp = temp + A[N - i - 1] - A[i]\n        if i > 0:\n            A[i - 1] = A[i - 1] + temp\n        i = i - 1\n    if flag == 1:\n        print(-1)\n    else:\n        print(moves)", "def solve(n, arr):\n    i = 0\n    j = n - 1\n    prevChange = float('inf')\n    while i < j:\n        if arr[i] == arr[j]:\n            prevChange = 0\n        elif arr[i] < arr[j] and arr[j] - arr[i] <= prevChange:\n            prevChange = arr[j] - arr[i]\n        else:\n            return -1\n        i += 1\n        j -= 1\n    return arr[-1] - arr[0]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "t = int(input())\nfor iter in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    flag = 0\n    sub = 0\n    for i in range(n // 2, n):\n        j = n - i - 1\n        if l[i] >= l[j] + sub:\n            sub = l[i] - l[j]\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print(sub)\n    else:\n        print('-1')", "t = int(input())\nfor iter in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    flag = 0\n    sub = 0\n    for i in range(n // 2, n):\n        j = n - i - 1\n        if l[i] >= l[j] + sub:\n            sub = l[i] - l[j]\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print(sub)\n    else:\n        print('-1')", "t = int(input())\nfor iter in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    flag = 0\n    sub = 0\n    for i in range(n // 2, n):\n        j = n - i - 1\n        if l[i] >= l[j] + sub:\n            sub = l[i] - l[j]\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print(sub)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    possible = True\n    to_add = []\n    for i in range(n // 2):\n        add = arr[-1 - i] - arr[i]\n        if add < 0:\n            possible = False\n            break\n        to_add.append(add)\n    if possible:\n        for i in range(n // 2 - 1):\n            if to_add[i] < to_add[i + 1]:\n                possible = False\n                break\n    if possible:\n        print(to_add[0])\n    else:\n        print(-1)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    if len(a) % 2 == 0:\n        i = len(a) // 2 - 1\n    else:\n        i = len(a) // 2\n    j = len(a) // 2\n    c1 = 0\n    while i >= 0 and j < len(a):\n        x = a[i] + c\n        if x < a[j]:\n            c += a[j] - x\n        elif x > a[j]:\n            c1 += 1\n            break\n        i -= 1\n        j += 1\n    if c1 == 0:\n        print(c)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = n // 2\n    f = 1\n    r = 0\n    l = [int(x) for x in input().split()]\n    l1 = l[:c]\n    l1 = l1[::-1]\n    if n % 2 == 0:\n        l2 = l[c:]\n    else:\n        l2 = l[c + 1:]\n    for i in range(c):\n        if l1[i] + r > l2[i]:\n            f = 0\n            break\n        else:\n            r += l2[i] - (l1[i] + r)\n    if f == 0:\n        print(-1)\n    else:\n        print(r)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\nans = []\nfor _ in range(inp()):\n    N = inp()\n    A = inlt()\n    c = N // 2\n    if N == 1:\n        ans.append(0)\n        continue\n    elif N <= 3:\n        an = A[-1] - A[0] if A[0] <= A[-1] else -1\n        ans.append(an)\n        continue\n    an = A[N - c] - A[c - 1]\n    if an < 0:\n        ans.append(-1)\n        continue\n    for i in range(c - 2, -1, -1):\n        diff = A[-i - 1] - A[i]\n        if diff < 0 or diff < an:\n            an = -1\n            break\n        an = diff\n    ans.append(an)\noutplt(ans)", "for _ in range(int(input())):\n    l = int(input())\n    s = list(map(int, input().split()))\n    sl = s[:l // 2]\n    sr = s[-(l // 2):][::-1]\n    ss = [r - l for (l, r) in zip(sl, sr)]\n    if sorted(ss, reverse=True) == ss and ss[-1] >= 0:\n        print(ss[0])\n    else:\n        print('-1')", "t = int(input())\nwhile t > 0:\n    s1 = int(input())\n    a = list(map(int, input().split()))\n    max1 = pow(10, 10)\n    p = 0\n    for i in range(s1 // 2):\n        if -a[i] + a[s1 - 1 - i] >= 0 and -a[i] + a[s1 - 1 - i] <= max1:\n            max1 = -a[i] + a[s1 - 1 - i]\n        else:\n            print(-1)\n            break\n    else:\n        print(-a[0] + a[s1 - 1])\n    t -= 1", "t = int(input())\nwhile t > 0:\n    s1 = int(input())\n    a = list(map(int, input().split()))\n    max1 = pow(10, 10)\n    p = 0\n    for i in range(s1 // 2):\n        if -a[i] + a[s1 - 1 - i] >= 0 and -a[i] + a[s1 - 1 - i] <= max1:\n            max1 = -a[i] + a[s1 - 1 - i]\n        else:\n            print(-1)\n            break\n    else:\n        print(-a[0] + a[s1 - 1])\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    n //= 2\n    l = 0\n    flag = False\n    for i in range(n - 1, -1, -1):\n        m = a[-i - 1] - a[i] - l\n        l += m\n        if m < 0:\n            print(-1)\n            flag = True\n            break\n    if flag == False:\n        print(l)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    a = []\n    flag = 1\n    while i < j:\n        if l[i] > l[j]:\n            print('-1')\n            flag = 0\n            break\n        else:\n            a.append(l[j] - l[i])\n            i += 1\n            j -= 1\n    if flag:\n        flag2 = 1\n        for x in range(1, len(a)):\n            if a[x] > a[x - 1]:\n                print('-1')\n                flag2 = 0\n                break\n        if flag2:\n            print(max(a))", "for i in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    flag = False\n    ans = arr[N - 1] - arr[0]\n    if ans < 0:\n        print('-1')\n        continue\n    x = N // 2\n    final = ans\n    for j in range(x):\n        if arr[N - j - 1] >= arr[j]:\n            if arr[N - j - 1] - arr[j] <= final:\n                final = arr[N - j - 1] - arr[j]\n            else:\n                flag = True\n                break\n        else:\n            flag = True\n    if flag:\n        print('-1')\n    else:\n        print(ans)", "for i in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    flag = False\n    f = 0\n    ans = arr[N - 1] - arr[0]\n    if ans < 0:\n        print('-1')\n        continue\n    x = N // 2\n    final = ans\n    for j in range(x):\n        if arr[N - j - 1] >= arr[j]:\n            if arr[N - j - 1] - arr[j] <= final:\n                final = arr[N - j - 1] - arr[j]\n                pass\n            else:\n                flag = True\n                break\n        else:\n            flag = True\n    if flag:\n        print('-1')\n    else:\n        print(ans)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    flag = False\n    f = 0\n    maxop = lst[n - 1] - lst[0]\n    if maxop < 0:\n        print('-1')\n        continue\n    m = n // 2\n    p = maxop\n    for j in range(m):\n        if lst[n - j - 1] >= lst[j]:\n            if lst[n - j - 1] - lst[j] <= p:\n                p = lst[n - j - 1] - lst[j]\n                pass\n            else:\n                flag = True\n                break\n        else:\n            flag = True\n    if flag:\n        print('-1')\n    else:\n        print(maxop)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    d = 0\n    b = list(map(int, input().split()))\n    for j in range(a // 2 - 1, -1, -1):\n        if b[j] + d > b[a - 1 - j]:\n            d = -1\n            break\n        else:\n            d = b[a - 1 - j] - b[j]\n    print(d)", "for i in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    flag = 0\n    sub = 0\n    for i in range(N // 2, N):\n        j = N - i - 1\n        if arr[i] >= arr[j] + sub:\n            sub = arr[i] - arr[j]\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print(sub)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    l = (len(ar) - 1) // 2\n    if len(ar) % 2 != 0:\n        r = l\n    else:\n        r = l + 1\n    diff = 0\n    c = 0\n    carry = 0\n    flag = True\n    while l != -1:\n        ar[l] += carry\n        if ar[r] > ar[l]:\n            diff = ar[r] - ar[l]\n            carry += diff\n            c += diff\n        elif ar[r] == ar[l]:\n            pass\n        else:\n            flag = False\n            break\n        l -= 1\n        r += 1\n    if flag:\n        print(c)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    flag = 0\n    sub = 0\n    for i in range(N // 2, N):\n        j = N - i - 1\n        if arr[i] >= arr[j] + sub:\n            sub = arr[i] - arr[j]\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print(sub)\n    else:\n        print(-1)", "t = int(input())\nfor iter in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    flag = 0\n    sub = 0\n    for i in range(n // 2, n):\n        j = n - i - 1\n        if l[i] >= l[j] + sub:\n            sub = l[i] - l[j]\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print(sub)\n    else:\n        print('-1')", "t = int(input())\nfor iter in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    flag = 0\n    sub = 0\n    for i in range(n // 2, n):\n        j = n - i - 1\n        if l[i] >= l[j] + sub:\n            sub = l[i] - l[j]\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print(sub)\n    else:\n        print('-1')", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    flag = False\n    f = 0\n    maxop = lst[n - 1] - lst[0]\n    if maxop < 0:\n        print('-1')\n        continue\n    m = n // 2\n    p = maxop\n    for j in range(m):\n        if lst[n - j - 1] >= lst[j]:\n            if lst[n - j - 1] - lst[j] <= p:\n                p = lst[n - j - 1] - lst[j]\n                pass\n            else:\n                flag = True\n                break\n        else:\n            flag = True\n    if flag:\n        print('-1')\n    else:\n        print(maxop)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    flag = False\n    f = 0\n    maxop = lst[n - 1] - lst[0]\n    if maxop < 0:\n        print('-1')\n        continue\n    m = n // 2\n    p = maxop\n    for j in range(m):\n        if lst[n - j - 1] >= lst[j]:\n            if lst[n - j - 1] - lst[j] <= p:\n                p = lst[n - j - 1] - lst[j]\n                pass\n            else:\n                flag = True\n                break\n        else:\n            flag = True\n    if flag:\n        print('-1')\n    else:\n        print(maxop)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    flag = False\n    f = 0\n    maxop = lst[n - 1] - lst[0]\n    if maxop < 0:\n        print('-1')\n        continue\n    m = n // 2\n    p = maxop\n    for j in range(m):\n        if lst[n - j - 1] >= lst[j]:\n            if lst[n - j - 1] - lst[j] <= p:\n                p = lst[n - j - 1] - lst[j]\n                pass\n            else:\n                flag = True\n                break\n        else:\n            flag = True\n    if flag:\n        print('-1')\n    else:\n        print(maxop)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print('0')\n    else:\n        flag = 0\n        k = len(a) // 2\n        b = []\n        d = []\n        count = 0\n        for j in range(k):\n            c = a[n - j - 1] - a[j]\n            if c < 0:\n                flag = 1\n            b.append(c)\n            d.append(c)\n        d.sort()\n        d = d[::-1]\n        for j in range(k):\n            if b[j] == d[j]:\n                count = count + 1\n        if count == k and flag == 0:\n            print(max(b))\n        else:\n            print('-1')", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = 0\n    flag = 1\n    for j in range(n // 2 - 1, -1, -1):\n        if l[j] + count > l[n - j - 1]:\n            flag = 0\n            break\n        count += l[n - j - 1] - l[j] - count\n    if flag == 1:\n        print(count)\n    else:\n        print(-1)", "for j in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[:int(n // 2) - 1:-1]\n    l = 0\n    v = 0\n    i = n // 2 - 1\n    flag = True\n    while i >= 0:\n        d = b[i] - a[i]\n        if d < l:\n            flag = False\n        else:\n            v = v + (d - l)\n            l = d\n        i -= 1\n    if flag == True:\n        print(v)\n    else:\n        print(-1)", "A = int(input())\nI = 0\nwhile I < A:\n    q = input()\n    z = list(map(int, input().split()))\n    Z = z.copy()\n    start = z[0]\n    end = z[len(z) - 1]\n    if start == end:\n        Z.reverse()\n        if z == Z:\n            print(0)\n        else:\n            print(-1)\n    elif end < start:\n        print(-1)\n    else:\n        if len(z) % 2 == 0:\n            list1 = z[0:int(len(z) / 2):1]\n            list2 = z[int(len(z) / 2)::1]\n        else:\n            list1 = z[0:int(len(z) / 2):1]\n            list2 = z[int(len(z) / 2) + 1::1]\n        if list1 == list2:\n            print(-1)\n        else:\n            list2.reverse()\n            subtracted = list()\n            for (item1, item2) in zip(list1, list2):\n                item = item2 - item1\n                subtracted.append(item)\n            m = subtracted\n            n = sorted(subtracted, reverse=True)\n            if m == n:\n                flag = True\n                for nume in m:\n                    if nume < 0:\n                        flag = False\n                        break\n                if flag == True:\n                    print(m[0])\n                else:\n                    print(-1)\n            else:\n                print(-1)\n    I += 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = True\n    c = 0\n    for i in range(n // 2 - 1, -1, -1):\n        if a[i] + c > a[n - i - 1]:\n            flag = False\n            break\n        c += a[n - i - 1] - a[i] - c\n    if flag:\n        print(c)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    i = n // 2 - 1\n    q = 0\n    while i >= 0:\n        p = -i - 1\n        if a[i] + c <= a[p]:\n            c = c + (a[p] - (a[i] + c))\n            i -= 1\n        else:\n            q = 1\n            break\n    if q == 1:\n        print(-1)\n    else:\n        print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    f = 1\n    a = list(map(int, input().split()))\n    for j in range(n // 2 - 1, -1, -1):\n        if a[j] + c > a[n - j - 1]:\n            f = 0\n            break\n        c += a[n - j - 1] - a[j] - c\n    if f == 1:\n        print(c)\n    else:\n        print(-1)", "for t in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    C = 0\n    B = N // 2 - 1\n    Flag = False\n    for i in range(B, -1, -1):\n        C = A[N - i - 1] - A[i] - C\n        if C < 0:\n            Flag = True\n        C = A[N - i - 1] - A[i]\n    if Flag == True:\n        print(-1)\n    else:\n        print(C)", "for t in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    C = 0\n    B = N // 2 - 1\n    Flag = False\n    for i in range(B, -1, -1):\n        if A[i] + C > A[N - i - 1]:\n            Flag = True\n        C += A[N - i - 1] - A[i] - C\n    if Flag == True:\n        print(-1)\n    else:\n        print(C)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    d = 0\n    b = list(map(int, input().split()))\n    for j in range(a // 2 - 1, -1, -1):\n        if b[j] + d > b[a - 1 - j]:\n            d = -1\n            break\n        else:\n            d = b[a - 1 - j] - b[j]\n    print(d)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 == 0:\n        flag = True\n        n //= 2\n        c = 0\n        l = 0\n        for j in range(n - 1, -1, -1):\n            m = a[n + c] - a[j] - l\n            l += m\n            if m < 0:\n                print(-1)\n                flag = False\n                break\n            c += 1\n        if flag == True:\n            print(l)\n    else:\n        c = 0\n        flag = True\n        n //= 2\n        l = 0\n        for j in range(n - 1, -1, -1):\n            m = a[n + c + 1] - a[j] - l\n            l += m\n            if m < 0:\n                print(-1)\n                flag = False\n                break\n            c += 1\n        if flag == True:\n            print(l)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = 0\n    flag = 1\n    for i in range(n // 2 - 1, -1, -1):\n        if l[i] + count > l[n - i - 1]:\n            flag = 0\n            break\n        count += l[n - i - 1] - l[i] - count\n    if flag == 1:\n        print(count)\n    else:\n        print(-1)"]