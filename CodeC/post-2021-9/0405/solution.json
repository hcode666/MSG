["import math\n\ndef make_square(n):\n    a = n ** 0.5 // 2\n    j = int(n ** 0.5)\n    while a <= j:\n        temp = n - a * a\n        k = temp ** 0.5\n        if math.ceil(k) == int(k):\n            return (int(k), int(a))\n        a += 1\n    return (-1,)\n\ndef solve(n):\n    MAX = 2 * 10 ** 5\n    mul = 1\n    while n > MAX:\n        n /= 4\n        mul *= 2\n    res = make_square(n)\n    if res == (-1,):\n        print(-1)\n    else:\n        print(res[0] * mul, res[1] * mul)\n\ndef printf(a):\n    if a:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    n = int(input())\n    solve(n)", "import math\n\ndef make_square(n):\n    a = n ** 0.5 // 2\n    j = int(n ** 0.5)\n    while a <= j:\n        temp = n - a * a\n        k = temp ** 0.5\n        if math.ceil(k) == int(k):\n            return (int(k), int(a))\n        a += 1\n    return (-1,)\n\ndef solve(n):\n    MAX = 2 * 10 ** 5\n    mul = 1\n    while n > MAX:\n        n /= 4\n        mul *= 2\n    res = make_square(n)\n    if res == (-1,):\n        print(-1)\n    else:\n        print(res[0] * mul, res[1] * mul)\n\ndef printf(a):\n    if a:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    n = int(input())\n    solve(n)", "import sys\ninput = sys.stdin.readline\ndp = [False] * 200001\nfor i in range(500):\n    for j in range(i, 500):\n        x = i * i + j * j\n        if x <= 200000:\n            dp[x] = (i, j)\n\ndef solve():\n    n = int(input())\n    counter = 1\n    while n % 4 == 0:\n        counter *= 2\n        n //= 4\n    if dp[n] == False:\n        return [-1]\n    return [dp[n][0] * counter, dp[n][1] * counter]\nfor _ in range(int(input())):\n    print(*solve())", "import sys\ninput = sys.stdin.readline\ndp = [False] * 200001\nfor i in range(500):\n    for j in range(i, 500):\n        x = i * i + j * j\n        if x <= 200000:\n            dp[x] = (i, j)\n\ndef solve():\n    n = int(input())\n    counter = 1\n    while n % 4 == 0:\n        counter *= 2\n        n //= 4\n    if dp[n] == False:\n        return [-1]\n    return [dp[n][0] * counter, dp[n][1] * counter]\nfor _ in range(int(input())):\n    print(*solve())", "import sys\ninput = sys.stdin.readline\ndp = [False] * 200001\nfor i in range(500):\n    for j in range(i, 500):\n        x = i * i + j * j\n        if x <= 200000:\n            dp[x] = (i, j)\n\ndef solve():\n    n = int(input())\n    counter = 1\n    while n % 4 == 0:\n        counter *= 2\n        n //= 4\n    if dp[n] == False:\n        return [-1]\n    return [dp[n][0] * counter, dp[n][1] * counter]\nfor _ in range(int(input())):\n    print(*solve())", "x = [0] * (10 ** 5 + 1)\nfor i in range(0, 317):\n    for j in range(i, 317):\n        p = i * i + j * j\n        if p > 10 ** 5:\n            break\n        else:\n            x[p] = [i, j]\nfor _ in range(int(input())):\n    n = int(input())\n    s = 0\n    while n % 2 == 0:\n        n = n // 2\n        s += 1\n    t = x[n]\n    if not t:\n        print(-1)\n        continue\n    a = t[1]\n    b = t[0]\n    if b > a:\n        (a, b) = (b, a)\n    for i in range(s):\n        (a, b) = (a + b, a - b)\n    print(a, b)", "x = [0] * (10 ** 5 + 1)\nfor i in range(0, 317):\n    for j in range(i, 317):\n        p = i * i + j * j\n        if p > 10 ** 5:\n            break\n        else:\n            x[p] = [i, j]\nfor _ in range(int(input())):\n    n = int(input())\n    s = 0\n    while n % 2 == 0:\n        n = n // 2\n        s += 1\n    t = x[n]\n    if not t:\n        print(-1)\n        continue\n    a = t[1]\n    b = t[0]\n    if b > a:\n        (a, b) = (b, a)\n    for i in range(s):\n        (a, b) = (a + b, a - b)\n    print(a, b)", "x = [0] * (10 ** 5 + 1)\nfor i in range(0, 317):\n    for j in range(i, 317):\n        p = i * i + j * j\n        if p > 10 ** 5:\n            break\n        else:\n            x[p] = [i, j]\nfor _ in range(int(input())):\n    n = int(input())\n    s = 0\n    while n % 2 == 0:\n        n = n // 2\n        s += 1\n    t = x[n]\n    if not t:\n        print(-1)\n        continue\n    a = t[1]\n    b = t[0]\n    if b > a:\n        (a, b) = (b, a)\n    for i in range(s):\n        (a, b) = (a + b, a - b)\n    print(a, b)", "import math\n\ndef make_square(n):\n    a = n ** 0.5 // 2\n    j = int(n ** 0.5)\n    while a <= j:\n        temp = n - a * a\n        k = temp ** 0.5\n        if math.ceil(k) == int(k):\n            return (int(k), int(a))\n        a += 1\n    return (-1,)\n\ndef solve(n):\n    MAX = 2 * 10 ** 5\n    mul = 1\n    while n > MAX:\n        n /= 4\n        mul *= 2\n    res = make_square(n)\n    if res == (-1,):\n        print(-1)\n    else:\n        print(res[0] * mul, res[1] * mul)\n\ndef printf(a):\n    if a:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    n = int(input())\n    solve(n)", "dp = [0] * 200001\nfor i in range(500):\n    for j in range(i, 500):\n        if i * i + j * j <= 200000:\n            dp[i * i + j * j] = (i, j)\n\ndef solve(n):\n    cnt = 1\n    while n % 4 == 0:\n        n //= 4\n        cnt *= 2\n    if dp[n] != False:\n        return f'{dp[n][0] * cnt} {dp[n][1] * cnt}'\n    else:\n        return -1\nfor _ in range(int(input())):\n    n = int(input())\n    print(solve(n))", "dp = [0] * 200001\nfor i in range(500):\n    for j in range(i, 500):\n        if i * i + j * j <= 200000:\n            dp[i * i + j * j] = (i, j)\n\ndef solve(n):\n    cnt = 1\n    while n % 4 == 0:\n        n //= 4\n        cnt *= 2\n    if dp[n] != False:\n        return f'{dp[n][0] * cnt} {dp[n][1] * cnt}'\n    else:\n        return -1\n\ndef raise_to(a, b):\n    if a == 1:\n        return b\n    else:\n        return b * raise_to(a - 1, b)\nfor _ in range(int(input())):\n    n = int(input())\n    print(solve(n))", "import sys\ninput = sys.stdin.readline\ndp = [False] * 200001\nfor i in range(500):\n    for j in range(i, 500):\n        if i * i + j * j <= 200000:\n            dp[i * i + j * j] = (i, j)\nfor _ in range(int(input())):\n    n = int(input())\n    cnt = 1\n    while n % 4 == 0:\n        n //= 4\n        cnt *= 2\n    if dp[n] != False:\n        print(dp[n][0] * cnt, dp[n][1] * cnt)\n    else:\n        print(-1)", "import sys\ninput = sys.stdin.readline\ndp = [False] * 200001\nfor i in range(500):\n    for j in range(i, 500):\n        if i * i + j * j <= 200000:\n            dp[i * i + j * j] = (i, j)\nfor _ in range(int(input())):\n    n = int(input())\n    cnt = 1\n    while n % 4 == 0:\n        n //= 4\n        cnt *= 2\n    if dp[n] != False:\n        print(dp[n][0] * cnt, dp[n][1] * cnt)\n    else:\n        print(-1)", "import sys\nfrom math import isqrt\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    x = 0\n    p = n\n    while n % 4 == 0:\n        n = n // 4\n        x += 1\n    a = -1\n    for i in range(1, isqrt(n) + 1, 2):\n        v = n - i * i\n        if isqrt(v) ** 2 == v:\n            a = i\n            break\n    if a >= 0:\n        print(a * 2 ** x, isqrt(n - a * a) * 2 ** x)\n    else:\n        print(-1)", "import sys\ninput = sys.stdin.readline\ndp = [False] * 200001\nfor i in range(500):\n    for j in range(i, 500):\n        if i * i + j * j <= 200000:\n            dp[i * i + j * j] = (i, j)\nfor _ in range(int(input())):\n    n = int(input())\n    cnt = 1\n    while n % 4 == 0:\n        n //= 4\n        cnt *= 2\n    if dp[n] != False:\n        print(dp[n][0] * cnt, dp[n][1] * cnt)\n    else:\n        print(-1)", "from math import sqrt\n\ndef helper(a):\n    S = 0\n    while a % 2 == 0:\n        S += 1\n        a = a // 2\n    if S % 2 == 1:\n        S -= 1\n        a *= 2\n    b = int(sqrt(a))\n    for i in range(1, b + 1):\n        c = a - i * i\n        d = int(sqrt(c))\n        if d * d == c:\n            return [i << S // 2, d << S // 2]\n    return [-1]\ntest_case = int(input())\nfor test in range(test_case):\n    ref = int(input())\n    print(*helper(ref))"]