["import sys\nimport math\nimport collections\nimport random\nfrom heapq import heappush, heappop\nfrom functools import reduce\ninput = sys.stdin.readline\nints = lambda : list(map(int, input().split()))\nMOD = 10 ** 9 + 7\n\ndef solve() -> None:\n    (n, k) = map(int, input().split())\n    s = str(input())\n    if k == n:\n        print(2)\n    elif k & 1:\n        print(pow(2, n, MOD))\n    else:\n        print(pow(2, n - 1, MOD))\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\nimport math\nimport collections\nimport random\nfrom heapq import heappush, heappop\nfrom functools import reduce\ninput = sys.stdin.readline\nints = lambda : list(map(int, input().split()))\nMOD = 10 ** 9 + 7\n\ndef solve() -> None:\n    (n, k) = map(int, input().split())\n    s = str(input())\n    if k == n:\n        print(2)\n    elif k & 1:\n        print(pow(2, n, MOD))\n    else:\n        print(pow(2, n - 1, MOD))\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\nimport math\nimport collections\nimport random\nfrom heapq import heappush, heappop\nfrom functools import reduce\ninput = sys.stdin.readline\nints = lambda : list(map(int, input().split()))\nMOD = 10 ** 9 + 7\n\ndef solve() -> None:\n    (n, k) = map(int, input().split())\n    s = str(input())\n    if k == n:\n        print(2)\n    elif k & 1:\n        print(pow(2, n, MOD))\n    else:\n        print(pow(2, n - 1, MOD))\nt = int(input())\nfor _ in range(t):\n    solve()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    b = int(input())\n    if n == k:\n        print(2)\n    elif k % 2 == 1:\n        print(2 ** n % (10 ** 9 + 7))\n    else:\n        print(2 ** (n - 1) % (10 ** 9 + 7))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k % 2 == 1:\n        print(2 ** n % 1000000007)\n    else:\n        print(2 ** (n - 1) % 1000000007)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k % 2 == 1:\n        print(2 ** n % 1000000007)\n    else:\n        print(2 ** (n - 1) % 1000000007)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k % 2 == 1:\n        print(2 ** n % (10 ** 9 + 7))\n    else:\n        print(2 ** (n - 1) % (10 ** 9 + 7))", "for i in range(int(input())):\n    (N, K) = map(int, input().split())\n    a = int(input())\n    if N == K:\n        print(2)\n    elif K % 2 == 1:\n        print(2 ** N % (10 ** 9 + 7))\n    else:\n        print(2 ** (N - 1) % (10 ** 9 + 7))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    b = int(input())\n    if n == k:\n        print(2)\n    elif k % 2 == 1:\n        print(2 ** n % (10 ** 9 + 7))\n    else:\n        print(2 ** (n - 1) % (10 ** 9 + 7))", "for _ in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k % 2 == 0:\n        print(pow(2, n - 1, 10 ** 9 + 7))\n    else:\n        print(pow(2, n, 10 ** 9 + 7))", "for _ in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k % 2 == 0:\n        print(pow(2, n - 1, 10 ** 9 + 7))\n    else:\n        print(pow(2, n, 10 ** 9 + 7))", "for _ in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k % 2 == 0:\n        print(pow(2, n - 1, 10 ** 9 + 7))\n    else:\n        print(pow(2, n, 10 ** 9 + 7))", "for _ in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k % 2 == 0:\n        print(pow(2, n - 1, 10 ** 9 + 7))\n    else:\n        print(pow(2, n, 10 ** 9 + 7))", "for _ in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k % 2 == 0:\n        print(pow(2, n - 1, 10 ** 9 + 7))\n    else:\n        print(pow(2, n, 10 ** 9 + 7))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 0:\n        print(pow(2, n - 1, 10 ** 9 + 7))\n    else:\n        print(pow(2, n, 10 ** 9 + 7))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 0:\n        print(pow(2, n - 1, 10 ** 9 + 7))\n    else:\n        print(pow(2, n, 10 ** 9 + 7))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    z = 10 ** 9 + 7\n    if n == k:\n        print(2)\n    elif n > k:\n        if k % 2 == 1:\n            print(2 ** n % z)\n        else:\n            print(2 ** (n - 1) % z)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k == 1:\n        print(2 ** n % 1000000007)\n    elif k % 2 == 0:\n        print(2 ** (n - 1) % 1000000007)\n    else:\n        print(2 ** n % 1000000007)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k == 1:\n        print(2 ** n % 1000000007)\n    elif k % 2 == 0:\n        print(2 ** (n - 1) % 1000000007)\n    else:\n        print(2 ** n % 1000000007)\n    t -= 1", "for binstr in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = int(input())\n    if n == k:\n        print(2)\n    elif k % 2 == 0:\n        print(2 ** (n - 1) % (10 ** 9 + 7))\n    else:\n        print(2 ** n % (10 ** 9 + 7))", "import math\nmod = 1000000007\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print('2')\n    elif k % 2 == 0:\n        print(pow(2, n - 1, mod))\n    else:\n        print(pow(2, n, mod))", "T = int(input())\nwhile T != 0:\n    (N, K) = map(int, input().split())\n    S = int(input())\n    if K == N:\n        print(2)\n    elif K % 2 == 0:\n        print(2 ** (N - 1) % (10 ** 9 + 7))\n    else:\n        print(2 ** N % (10 ** 9 + 7))\n    T -= 1", "import math\nmod = 1000000007\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print('2')\n    elif k % 2 == 0:\n        print(pow(2, n - 1, mod))\n    else:\n        print(pow(2, n, mod))", "mod = int(10 ** 9 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2:\n        print(pow(2, n, 10 ** 9 + 7))\n    else:\n        print(pow(2, n - 1, 10 ** 9 + 7))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2:\n        print(pow(2, n, 10 ** 9 + 7))\n    else:\n        print(pow(2, n - 1, 10 ** 9 + 7))", "def f(n, k, str):\n    if k == n:\n        return 2\n    elif k % 2 == 0:\n        return 2 ** (n - 1) % (10 ** 9 + 7)\n    else:\n        return 2 ** n % (10 ** 9 + 7)\nt = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    str = input()\n    res = f(n, k, str)\n    print(res)\n    t -= 1", "mod = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 != 0:\n        print(2 ** n % mod)\n    else:\n        print(2 ** (n - 1) % mod)", "mod = int(10 ** 9 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "from math import comb\nt = int(input())\nm = 1000000007\nfor i in range(0, t):\n    a = list(map(int, input().split()))\n    s = input()\n    if a[0] == a[1]:\n        print(2)\n    elif a[1] % 2 == 0:\n        print(pow(2, a[0] - 1, m))\n    else:\n        print(pow(2, a[0], m))", "mod = int(10 ** 9 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "mod = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 != 0:\n        print(2 ** n % mod)\n    else:\n        print(2 ** (n - 1) % mod)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k & 1:\n        print(2 ** n % (10 ** 9 + 7))\n    else:\n        print(2 ** (n - 1) % (10 ** 9 + 7))", "m = 1000000007\n\ndef po(num, p):\n    power = 1\n    for i in range(0, p):\n        power = power % m * num % m % m\n    return power\nt = int(input())\ns = ''\nwhile t > 0:\n    a = [int(i) for i in input().strip().split()]\n    n = a[0]\n    k = a[1]\n    s = input()\n    if n == k:\n        print('2')\n    elif k % 2 != 0:\n        print(po(2, n))\n    else:\n        print(po(2, n - 1))\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif n > k and k % 2 == 0:\n        print(2 ** (n - 1) % (10 ** 9 + 7))\n    elif n > k and k % 2 != 0:\n        print(2 ** n % (10 ** 9 + 7))\n    else:\n        print(1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif n > k and k % 2 == 0:\n        print(2 ** (n - 1) % (10 ** 9 + 7))\n    elif n > k and k % 2 != 0:\n        print(2 ** n % (10 ** 9 + 7))\n    else:\n        print(1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print('2')\n    elif n > k and k & 1:\n        print(2 ** n % (10 ** 9 + 7))\n    else:\n        print(2 ** (n - 1) % (10 ** 9 + 7))", "import math\nt = int(input())\nmod = 1000000007\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    str = input()\n    if n == k:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    a = input()\n    if N == K:\n        print(2)\n    elif K < N and K % 2 == 1:\n        print(2 ** N % mod)\n    else:\n        print(2 ** (N - 1) % mod)", "import sys\ninput = sys.stdin.readline\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = int(input())\n    if n == q:\n        print(2)\n    else:\n        print(2 ** n % mod if q % 2 != 0 else 2 ** (n - 1) % mod)", "T = int(input())\nfor i in range(T):\n    (x, p) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    if x == p:\n        print(2)\n    elif p < x and p % 2 == 0:\n        print(2 ** (x - 1) % (10 ** 9 + 7))\n    elif p < x and p % 2 != 0:\n        print(2 ** x % (10 ** 9 + 7))", "t = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    s = input()\n    if x == y:\n        print(2)\n    elif y < x:\n        if y % 2 != 0:\n            print(2 ** x % 1000000007)\n        else:\n            print(2 ** (x - 1) % 1000000007)", "from sys import stdin, stdout\nfrom collections import deque\nT = int(stdin.readline())\nwhile T > 0:\n    T -= 1\n    (n, k) = map(int, stdin.readline().split())\n    s = stdin.readline()\n    if k == n:\n        print('2')\n        continue\n    if k % 2 == 0:\n        b = n - 1\n    else:\n        b = n\n    modulo = 7 + pow(10, 9)\n    bb = b % (modulo - 1)\n    ans = pow(2, bb)\n    ans = ans % modulo\n    print(ans)", "import math, copy\nfor i in range(int(input())):\n    a = list(map(int, input().strip().split()))\n    b = input()\n    if a[0] == a[1]:\n        print(2)\n    elif a[1] % 2 == 0:\n        print(pow(2, a[0] - 1, 10 ** 9 + 7))\n    else:\n        print(pow(2, a[0], 10 ** 9 + 7))", "M = 1000000007\nfor _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    if N == K:\n        print(2)\n    else:\n        f = 1\n        L = N if K % 2 == 1 else N - 1\n        for i in range(L):\n            f = f * 2 % M\n        print(f)", "t = int(input())\nwhile t > 0:\n    (n, k) = list(map(int, input().split(' ')))\n    binary = input()\n    if n == k:\n        print(2)\n    elif k < n:\n        if k % 2 != 0:\n            print(2 ** n % 1000000007)\n        else:\n            print(2 ** (n - 1) % 1000000007)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    string = [char for char in input()]\n    if k == n:\n        print('2')\n    elif k % 2 == 0:\n        print(2 ** (n - 1) % (10 ** 9 + 7))\n    else:\n        print(2 ** n % (10 ** 9 + 7))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = int(input())\n    if n == k:\n        print(2)\n    elif k % 2 != 0:\n        print(2 ** n % (10 ** 9 + 7))\n    else:\n        print(2 ** (n - 1) % (10 ** 9 + 7))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2:\n        print(pow(2, n, int(10 ** 9 + 7)))\n    else:\n        print(pow(2, n - 1, int(10 ** 9 + 7)))", "from collections import Counter\nfrom math import ceil, floor, log, gcd\nimport bisect as bs\nimport sys\ninput = sys.stdin.readline\ninp_lis = lambda : list(map(int, input().split()))\ninp_multi = lambda : map(int, input().split())\ninp_int = lambda : int(input().strip())\nmod = int(1000000000.0) + 7\nfor _ in range(int(input().strip())):\n    (n, k) = inp_multi()\n    s = input().strip()\n    if k == n:\n        print(2)\n    elif k % 2 == 0:\n        print(2 ** (n - 1) % mod)\n    else:\n        print(2 ** n % mod)", "m = pow(10, 9) + 7\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = 0\n    if n == k:\n        ans = 2\n    elif k % 2 == 1:\n        ans = pow(2, n, m)\n    else:\n        ans = pow(2, n - 1, m)\n    print(ans)", "m = pow(10, 9) + 7\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = 0\n    if n == k:\n        ans = 2\n    elif k % 2 == 1:\n        ans = pow(2, n, m)\n    else:\n        ans = pow(2, n - 1, m)\n    print(ans)", "m = int(pow(10, 9) + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k < n and k % 2 != 0:\n        print(2 ** n % m)\n    elif k < n and k % 2 == 0:\n        print(2 ** (n - 1) % m)", "import sys\nfrom itertools import islice\nfor t in islice(sys.stdin, 1, None, 2):\n    (n, q) = map(int, t.split())\n    r = 2 if q == n else 1 << n - 1 + q % 2\n    print(r % (10 ** 9 + 7))", "import sys\nfrom itertools import islice\nfor t in islice(sys.stdin, 1, None, 2):\n    (n, q) = map(int, t.split())\n    r = 2 if q == n else 1 << n - 1 + q % 2\n    print(r % (10 ** 9 + 7))", "t = int(input())\nmod = int(10 ** 9 + 7)\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print('2')\n    elif k % 2 != 0:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "t = int(input())\nx = int(10 ** 9 + 7)\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print('2')\n    elif k % 2 != 0:\n        print(pow(2, n, x))\n    else:\n        print(pow(2, n - 1, x))", "t = int(input())\nmod = int(10 ** 9 + 7)\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print('2')\n    elif k % 2 != 0:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print('2')\n    elif k % 2 != 0:\n        print(pow(2, n) % 1000000007)\n    else:\n        print(pow(2, n - 1) % 1000000007)", "import math\nmod = int(10 ** 9 + 7)\nfor i in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    s = input()\n    if n == k:\n        print(2)\n    elif k % 2 == 0:\n        print(pow(2, n - 1, mod))\n    else:\n        print(pow(2, n, mod))", "import sys\nfrom itertools import islice\nfor i in islice(sys.stdin, 1, None, 2):\n    (n, k) = map(int, i.split())\n    r = 2 if k == n else 1 << n - 1 + k % 2\n    print(r % (10 ** 9 + 7))", "m = pow(10, 9) + 7\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = 0\n    if n == k:\n        ans = 2\n    elif k % 2 == 1:\n        ans = pow(2, n, m)\n    else:\n        ans = pow(2, n - 1, m)\n    print(ans)", "import sys\nfrom itertools import islice\nfor i in islice(sys.stdin, 1, None, 2):\n    (n, k) = map(int, i.split())\n    r = 2 if k == n else 1 << n - 1 + k % 2\n    print(r % (10 ** 9 + 7))", "def soln(N, K):\n    if K == N:\n        pw = 1\n    elif K % 2 == 1:\n        pw = N\n    else:\n        pw = N - 1\n    return pw\nmod = int(10 ** 9 + 7)\nfor t in range(int(input())):\n    (N, K) = map(int, input().split())\n    S = input()\n    print(pow(2, soln(N, K), mod))", "mod = int(10 ** 9 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "import math\nm = int(pow(10, 9) + 7)\nt = int(input())\nfor x in range(t):\n    (n, k) = map(int, input().split())\n    l = [int(i) for i in input()]\n    if n == k:\n        ans = 2\n    elif k % 2 == 0:\n        ans = pow(2, n - 1) % m\n    else:\n        ans = pow(2, n) % m\n    print(ans)", "import math\nm = int(pow(10, 9) + 7)\nt = int(input())\nfor x in range(t):\n    (n, k) = map(int, input().split())\n    l = [int(i) for i in input()]\n    if n == k:\n        ans = 2\n    elif k % 2 == 0:\n        ans = pow(2, n - 1) % m\n    else:\n        ans = pow(2, n) % m\n    print(ans)", "x = int(input())\nfor i in range(x):\n    (n, k) = map(int, input().split())\n    s = int(input())\n    m = 1000000007\n    if n == k:\n        print(2)\n        continue\n    if k % 2 == 1:\n        print(2 ** n % m)\n        continue\n    else:\n        print(2 ** (n - 1) % m)", "mod = int(10 ** 9 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "mod = int(10 ** 9 + 7)\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    s = input()\n    if b == a:\n        print(2)\n    elif b < a and b % 2 == 1:\n        print(pow(2, a, mod))\n    elif b < a and b % 2 == 0:\n        print(pow(2, a - 1, mod))", "mod = int(10 ** 9 + 7)\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    s = input()\n    if b == a:\n        print(2)\n    elif b < a and b % 2 == 1:\n        print(pow(2, a, mod))\n    elif b < a and b % 2 == 0:\n        print(pow(2, a - 1, mod))", "mod = int(10 ** 9 + 7)\nT = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    S = input()\n    if N == K:\n        print(2)\n    elif K % 2 == 1:\n        print(pow(2, N, mod))\n    else:\n        print(pow(2, N - 1, mod))", "import math\nfrom bisect import bisect, bisect_left, bisect_right\nimport heapq\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as ddc\nfrom collections import Counter\n\ndef intin():\n    return int(input())\n\ndef mapin():\n    return map(int, input().split())\n\ndef strin():\n    return input().split()\nINF = 10 ** 20\nmod = 1000000007\n\ndef LIS(arr, n):\n    dp = [10 ** 9] * (n + 1)\n    for ele in arr:\n        dp[bisect_left(dp, ele)] = ele\n    return bisect_left(dp, 10 ** 9)\n\ndef exponentiation(bas, exp, mod=1000000007):\n    t = 1\n    while exp > 0:\n        if exp % 2 != 0:\n            t = t * bas % mod\n        bas = bas * bas % mod\n        exp //= 2\n    return t % mod\n\ndef MOD(p, q=1, mod=1000000007):\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\nyes = 'YES'\nno = 'NO'\neven = 'EVEN'\nodd = 'ODD'\n\ndef process(arr, n, k):\n    if n == k:\n        return 2\n    if k % 2:\n        return exponentiation(2, n)\n    else:\n        return exponentiation(2, n - 1)\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = mapin()\n        arr = list(mapin())\n        print(process(arr, n, k))\nmain()", "mod = int(10 ** 9 + 7)\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    m = 1000000007\n    if n == k:\n        print(2)\n        continue\n    if k % 2 == 1:\n        print(2 ** n % m)\n        continue\n    else:\n        print(2 ** (n - 1) % m)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k % 2 == 1:\n        print(2 ** n % 1000000007)\n    else:\n        print(2 ** (n - 1) % 1000000007)", "t = int(input())\nwhile t != 0:\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k % 2 == 0:\n        print(pow(2, n - 1) % 1000000007)\n    else:\n        print(pow(2, n) % 1000000007)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = input()\n    print(2 if k == n else pow(2, n - (1 - k % 2), 10 ** 9 + 7))", "t = int(input())\nif t >= 1 and t <= 10 ** 4:\n    for i in range(t):\n        (n, k) = map(int, input().split(' '))\n        l = input()\n        if n >= 1 and n <= 10 ** 5 and (k >= 1) and (k <= n):\n            if n == k:\n                print('2')\n            elif k % 2 == 1:\n                print(pow(2, n, 10 ** 9 + 7))\n            else:\n                print(pow(2, n - 1, 10 ** 9 + 7))", "t = int(input())\ndp = [0] * 100001\ndp[0] = 1\nmod = 1000000007\nfor i in range(1, 100001):\n    dp[i] = dp[i - 1] * 2 % mod\n\ndef solve(N, K):\n    if K == 1:\n        return dp[N]\n    if K == N:\n        return 2\n    if K % 2 == 1:\n        return dp[N]\n    return dp[N - 1]\nfor _ in range(t):\n    (N, K) = tuple(map(int, input().split()))\n    input()\n    print(solve(N, K))", "t = int(input())\ndp = [0] * 100001\ndp[0] = 1\nmod = 1000000007\nfor i in range(1, 100001):\n    dp[i] = dp[i - 1] * 2 % mod\n\ndef solve(N, K):\n    if K == 1:\n        return dp[N]\n    if K == N:\n        return 2\n    if K % 2 == 1:\n        return dp[N]\n    return dp[N - 1]\nfor _ in range(t):\n    (N, K) = tuple(map(int, input().split()))\n    input()\n    print(solve(N, K))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    x = int(input())\n    if k == n:\n        ans = 2\n    elif k % 2 == 0:\n        ans = pow(2, n - 1, 10 ** 9 + 7)\n    else:\n        ans = pow(2, n, 10 ** 9 + 7)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    S = input()\n    if N == K:\n        print(2)\n    elif K % 2 == 1:\n        print(pow(2, N, 10 ** 9 + 7))\n    else:\n        print(pow(2, N - 1, 10 ** 9 + 7))", "mod = int(10 ** 9 + 7)\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = int(input())\n    if n == k:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = int(input())\n    if n == k:\n        print(2)\n    elif k % 2 == 1:\n        print(2 ** n % 1000000007)\n    else:\n        print(2 ** (n - 1) % 1000000007)", "mod = int(10 ** 9 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "mod = int(10 ** 9 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "mod = int(10 ** 9 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "mod = int(10 ** 9 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "for i in range(int(input())):\n    MOD = 10 ** 9 + 7\n    (n, k) = map(int, input().split())\n    s = input().replace(' ', '').strip()\n    if n == k:\n        print(2)\n    elif k % 2 == 1:\n        print(2 ** n % MOD)\n    else:\n        print(pow(2, n - 1) % MOD)", "for i in range(int(input())):\n    MOD = 10 ** 9 + 7\n    (n, k) = map(int, input().split())\n    s = input().replace(' ', '').strip()\n    if n == k:\n        print(2)\n    elif k & 1:\n        print(2 ** n % MOD)\n    else:\n        print(pow(2, n - 1) % MOD)", "for i in range(int(input())):\n    MOD = 10 ** 9 + 7\n    (n, k) = map(int, input().split())\n    s = input().replace(' ', '').strip()\n    if n == k:\n        print(2)\n    elif k & 1:\n        print(2 ** n % MOD)\n    else:\n        print(pow(2, n - 1) % MOD)", "for i in range(int(input())):\n    MOD = 10 ** 9 + 7\n    (n, k) = map(int, input().split())\n    s = input().replace(' ', '').strip()\n    if n == k:\n        print(2)\n    elif k & 1:\n        print(2 ** n % MOD)\n    else:\n        print(pow(2, n - 1) % MOD)", "for i in range(int(input())):\n    MOD = 10 ** 9 + 7\n    (n, k) = map(int, input().split())\n    s = input().replace(' ', '').strip()\n    if n == k:\n        print(2)\n    elif k & 1:\n        print(2 ** n % MOD)\n    else:\n        print(pow(2, n - 1) % MOD)", "T = int(input())\nmod = int(10 ** 9 + 7)\nfor t in range(T):\n    (N, K) = map(int, input().split())\n    S = input()\n    if K == N:\n        print(2)\n    elif K % 2 == 1:\n        print(pow(2, N, mod))\n    else:\n        print(pow(2, N - 1, mod))", "mod = int(10 ** 9 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 1:\n        print(pow(2, n, mod))\n    else:\n        print(pow(2, n - 1, mod))", "from itertools import combinations\nmod = pow(10, 9) + 7\nT = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 0:\n        print(pow(2, n - 1) % mod)\n    else:\n        print(pow(2, n) % mod)", "from itertools import combinations\nmod = pow(10, 9) + 7\nT = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split())\n    s = input()\n    if k == n:\n        print(2)\n    elif k % 2 == 0:\n        print(pow(2, n - 1) % mod)\n    else:\n        print(pow(2, n) % mod)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k == 1:\n        print(2 ** n % 1000000007)\n    elif k % 2 == 0:\n        print(2 ** (n - 1) % 1000000007)\n    else:\n        print(2 ** n % 1000000007)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if n == k:\n        print(2)\n    elif k == 1:\n        print(2 ** n % 1000000007)\n    elif k % 2 == 0:\n        print(2 ** (n - 1) % 1000000007)\n    else:\n        print(2 ** n % 1000000007)"]