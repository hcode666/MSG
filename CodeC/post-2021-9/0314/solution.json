["import math as m\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    gcd = A[0]\n    for j in A:\n        gcd = m.gcd(j, gcd)\n    for j in A:\n        print(j // gcd, end=' ')\n    print()", "import math\ntest = int(input())\nfor t in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    gcd = 0\n    for i in range(n):\n        gcd = math.gcd(gcd, arr[i])\n    for i in range(n):\n        print(arr[i] // gcd, end=' ')\n    print()", "def kou(s, h):\n    while h != 0:\n        (s, h) = (h, s % h)\n    return s\nfor _ in range(int(input())):\n    i = int(input())\n    k = list(map(int, input().split()))\n    r = k[0]\n    for o in k:\n        r = kou(r, o)\n    for o in k:\n        print(o // r, end=' ')\n    print()", "import math\ntest = int(input())\nfor t in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    gcd = 0\n    for i in range(n):\n        gcd = math.gcd(gcd, arr[i])\n    for i in range(n):\n        print(arr[i] // gcd, end=' ')\n    print()", "def gcd(a, b):\n    while b != 0:\n        (a, b) = (b, a % b)\n    return a\nfor test_case in range(int(input())):\n    array_length = int(input())\n    array = list(map(int, input().split()))\n    gcd_value = array[0]\n    for element in array:\n        gcd_value = gcd(gcd_value, element)\n    for element in array:\n        print(element // gcd_value, end=' ')\n    print()", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    f = A[0]\n    for i in range(1, n):\n        f = gcd(f, A[i])\n    res = list()\n    for i in A:\n        res.append(i // f)\n    print(*res)", "import math\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    a = [int(c) for c in input().split()]\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "def gcd(x, y):\n    c = x\n    x = max(x, y)\n    y = min(c, y)\n    c = x % y\n    while c != 0:\n        x = y\n        y = c\n        c = x % y\n    return y\n\ndef big_gcd(a):\n    v = a[0]\n    for i in range(1, len(a)):\n        v = gcd(v, a[i])\n    return v\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    G = big_gcd(a)\n    arr = [str(e // gcd(e, G)) for e in a]\n    print(' '.join(arr))", "import math\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    list1 = list(map(int, input().split()))\n    hcf = 0\n    for i in range(len(list1)):\n        hcf = math.gcd(hcf, list1[i])\n    for i in list1:\n        print(i // hcf, end=' ')\n    print()", "import math\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    a = [int(c) for c in input().split()]\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "import math\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    a = [int(c) for c in input().split()]\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "def gcd(y, x):\n    if x == 0:\n        return y\n    return gcd(x, y % x)\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = input().split()\n    for i in range(len(a)):\n        a[i] = int(a[i])\n    div = a[0]\n    for i in range(1, len(a)):\n        div = gcd(div, a[i])\n    out = []\n    for el in a:\n        print(int(el / div), end=' ')\n    print()", "import math\nfor i in range(int(input())):\n    n = int(input())\n    flag = 0\n    arr = list(map(int, input().split()))\n    d = arr[0]\n    for i in arr:\n        d = math.gcd(d, i)\n    for i in arr:\n        print(i // d, end=' ')\n    print()", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = [0] * n\n    l = a[0]\n    for j in range(1, n):\n        l = math.gcd(l, a[j])\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = a[i] // l\n    print(*ans)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    gcd = 0\n    for i in range(n):\n        gcd = math.gcd(gcd, arr[i])\n    for i in range(n):\n        print(arr[i] // gcd, end=' ')\n    print()", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    gcd = 0\n    for i in range(n):\n        gcd = math.gcd(gcd, arr[i])\n    for i in range(n):\n        print(arr[i] // gcd, end=' ')\n    print()", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "def find_gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef main():\n    for __ in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        res = l[0]\n        for i in range(1, len(l)):\n            res = find_gcd(res, l[i])\n        for i in l:\n            print(i // res, end=' ')\n        print('\\n')\nmain()", "import math as m\nz = int(input())\nwhile z > 0:\n    z -= 1\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = b[0]\n    for i in b:\n        c = m.gcd(c, i)\n    for i in b:\n        print(i // c, end=' ')\n    print()", "import math\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "import numpy as np\nt = int(input())\nfor r in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    arr = np.array(a)\n    g = np.gcd.reduce(arr)\n    l = []\n    for i in range(n):\n        print(a[i] // g, end=' ')\n    print('')", "import numpy as np\n\ndef lcm(arr, idx=0):\n    if idx == len(arr) - 1:\n        return arr[idx]\n    a = arr[idx]\n    b = lcm(arr, idx + 1)\n    return int(a * b / m.gcd(a, b))\nt = int(input())\nfor r in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    arr = np.array(a)\n    g = np.gcd.reduce(arr)\n    l = []\n    for i in range(n):\n        print(a[i] // g, end=' ')\n    print('')", "import math\nfor _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    m = b[0]\n    for i in b:\n        m = math.gcd(m, i)\n    for i in b:\n        print(i // m, end=' ')\n    print()", "from functools import reduce\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef div_by(a):\n    return lambda x: x // a\nt = int(input())\nfor t_ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    arr_gcd = reduce(gcd, A)\n    ans = map(div_by(arr_gcd), A)\n    for i in ans:\n        print(i, end=' ')\n    print()", "import math\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    a = [int(c) for c in input().split()]\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "import math\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    a = [int(c) for c in input().split()]\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    g = ar[0]\n    for i in ar:\n        g = math.gcd(g, i)\n    for i in ar:\n        print(i // g, end=' ')\n    print()", "import math\nT = int(input())\nfor x in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = a[0]\n    for i in a:\n        g = math.gcd(i, g)\n    for i in a:\n        print(i // g, end=' ')\n    print('')", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    GCD = a[0]\n    for x in a:\n        GCD = math.gcd(x, GCD)\n    for x in a:\n        ans = x // GCD\n        print(ans, end=' ')\n    print('')", "import math\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    a = [int(c) for c in input().split()]\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    GCD = a[0]\n    for x in a:\n        GCD = math.gcd(x, GCD)\n    for x in a:\n        ans = x // GCD\n        print(ans, end=' ')\n    print('')", "import math\nfor x in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "import math\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    a = [int(c) for c in input().split()]\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "import math\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    final_gcd = A[0]\n    for i in A:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in A:\n        print(i // final_gcd, end=' ')\n    print()", "import math\nfrom typing import Sequence\n\ndef div_by_a_i(a: Sequence[int]) -> Sequence[int]:\n    gcd = a[0]\n    for i in a:\n        gcd = math.gcd(gcd, i)\n    result = [i // gcd for i in a]\n    return result\nt = int(input())\nfor _ in range(t):\n    unused_n = input()\n    a = [int(x) for x in input().split()]\n    result = div_by_a_i(a)\n    print(' '.join((str(x) for x in result)))", "for q in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    from math import gcd\n    ans = []\n    g = arr[0]\n    for i in range(1, n):\n        g = gcd(g, arr[i])\n    for i in arr:\n        ans.append(i // g)\n    print(*ans)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = 0\n    for i in a:\n        g = math.gcd(g, i)\n    for i in a:\n        print(i // g, end=' ')\n    print('')", "from math import *\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in l:\n        g = gcd(g, i)\n    for i in l:\n        print(i // g, end=' ')\n    print()\n    t -= 1", "def fun(a, b):\n    while b != 0:\n        (a, b) = (b, a % b)\n    return a\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = fun(max(gcd, a[i]), min(gcd, a[i]))\n    l = [x // gcd for x in a]\n    print(*l)", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    g = arr[0]\n    for i in range(n):\n        g = gcd(g, arr[i])\n    for i in arr:\n        print(i // g, end=' ')\n    print('\\n')", "from math import *\n\ndef solve(n, l):\n    g = l[0]\n    for i in range(1, n):\n        g = gcd(g, l[i])\n    for i in range(n):\n        l[i] = l[i] // g\n    return l\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(*solve(n, l))", "from math import *\n\ndef solve(n, l):\n    g = l[0]\n    for i in range(1, n):\n        g = gcd(g, l[i])\n    for i in range(n):\n        l[i] = l[i] // g\n    return l\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(*solve(n, l))", "import math\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    list1 = list(map(int, input().split()))\n    hcf = 0\n    for i in range(len(list1)):\n        hcf = math.gcd(hcf, list1[i])\n    for i in list1:\n        print(i // hcf, end=' ')\n    print()", "import math\nfor i in range(int(input())):\n    num = int(input())\n    lis = list(map(int, input().split(' ')))\n    c = 0\n    for j in lis:\n        c = math.gcd(c, j)\n    for j in range(num):\n        print(lis[j] // c, end=' ')\n    print()", "def hcf(a, b):\n    if b == 0:\n        return a\n    return hcf(b, a % b)\n\ndef list_hcf(mylist):\n    h = mylist[0]\n    for i in range(1, len(mylist)):\n        h = hcf(h, mylist[i])\n        if h == 1:\n            return 1\n    return h\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    h = list_hcf(list1)\n    for val in list1:\n        print(val // h, end=' ')\n    print()", "import math\nfor x in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "import math\nfor x in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "import math\nk = int(input())\nfor x in range(k):\n    n = int(input())\n    a = [int(c) for c in input().split()]\n    final_gcd = a[0]\n    for i in a:\n        final_gcd = math.gcd(final_gcd, i)\n    for i in a:\n        print(i // final_gcd, end=' ')\n    print()", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nfrom math import gcd\nfrom functools import reduce\n\ndef gcdl(A):\n    return reduce(gcd, A)\nans = []\nfor _ in range(inp()):\n    N = inp()\n    A = inlt()\n    g = gcdl(A)\n    ans.append([a // g for a in A])\noutpltlt(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\n\ndef gcd(a, b):\n    return gcd(b, a % b) if a % b else b\nans = []\nfor _ in range(inp()):\n    N = inp()\n    A = inlt()\n    g = A[0]\n    for a in A[1:]:\n        g = gcd(a, g)\n    ans.append([a // g for a in A])\noutpltlt(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = max(a)\n    for i in range(n):\n        gcd = math.gcd(a[i], gcd)\n    for i in range(n):\n        print(a[i] // gcd, end=' ')\n    print()", "from math import *\nT = int(input())\nwhile T > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in l:\n        g = gcd(g, i)\n    for i in l:\n        print(i // g, end=' ')\n    print()\n    T = T - 1", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = max(a)\n    for i in range(n):\n        gcd = math.gcd(a[i], gcd)\n    for i in range(n):\n        print(a[i] // gcd, end=' ')\n    print()", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    g = a[0]\n    for i in range(1, n):\n        g = gcd(g, a[i])\n    for i in range(n):\n        print(a[i] // g, end=' ')\n    print()", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    gcd = max(arr)\n    for i in range(n):\n        gcd = math.gcd(arr[i], gcd)\n    for i in range(n):\n        print(arr[i] // gcd, end=' ')\n    print()", "import math\nfor t in range(int(input())):\n    n = int(input())\n    m = list(map(int, input().split()))\n    l = []\n    ans = 0\n    for i in m:\n        ans = math.gcd(ans, i)\n    for i in m:\n        l.append(i // ans)\n    print(*l)", "import math\n\ndef gc(x, y):\n    b = max(x, y)\n    a = min(x, y)\n    while b % a != 0:\n        (a, b) = (b % a, a)\n    return a\n\ndef gcd(l):\n    hcf = 1\n    if len(l) == 1:\n        return l[0]\n    (x, y) = (l[0], l[1])\n    hcf = gc(x, y)\n    for i in range(2, len(l)):\n        hcf = gc(hcf, l[i])\n    return hcf\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = [1] * N\n    y = gcd(A)\n    for i in range(N):\n        print(A[i] // y, end=' ')\n    print()", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = max(a)\n    for i in range(n):\n        gcd = math.gcd(a[i], gcd)\n    for i in range(n):\n        print(a[i] // gcd, end=' ')\n    print()", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = max(a)\n    for i in range(n):\n        gcd = math.gcd(a[i], gcd)\n    for i in range(n):\n        print(a[i] // gcd, end=' ')\n    print()", "from math import *\nt = int(input())\nwhile t > 0:\n    a = int(input())\n    x = list(map(int, input().split()))\n    g = x[0]\n    for i in x:\n        g = gcd(g, i)\n    for i in x:\n        print(i // g, end=' ')\n    print()\n    t -= 1", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    gcd = max(arr)\n    for i in range(n):\n        gcd = math.gcd(arr[i], gcd)\n    for i in range(n):\n        print(arr[i] // gcd, end=' ')\n    print()", "from math import gcd\nt = int(input())\nwhile t:\n    N = int(input())\n    arr = list(map(int, input().split()))\n    ans = []\n    g = gcd(arr[0], arr[1])\n    for i in range(2, N):\n        g = gcd(g, arr[i])\n    for x in arr:\n        ans.append(x // g)\n    print(*ans)\n    t = t - 1", "import math\nn = int(input())\nfor i in range(n):\n    a = int(input())\n    l = list(map(int, input().split()))\n    s = min(l)\n    c = 0\n    for i in l:\n        s = math.gcd(s, i)\n    for i in l:\n        print(i // s, end=' ')\n    print()", "from math import *\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in l:\n        g = gcd(g, i)\n    for i in l:\n        print(i // g, end=' ')\n    print()\n    t -= 1", "import math\na = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    p = 0\n    for j in range(0, b):\n        p = math.gcd(p, c[j])\n    for k in c:\n        print(k // p, end=' ')\n    print()", "from math import gcd\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    p = 0\n    for i in range(0, n):\n        p = gcd(p, a[i])\n    for i in a:\n        print(i // p, end=' ')\n    print()", "from math import *\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in l:\n        g = gcd(g, i)\n    for i in l:\n        print(i // g, end=' ')\n    print()\n    t -= 1", "def gcd(x, y):\n    while x != y:\n        if x > y:\n            x -= (x - 1) // y * y\n        else:\n            y -= (y - 1) // x * x\n    return x\nfor z in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    val = lst[0]\n    for i in range(n):\n        val = gcd(val, lst[i])\n    for i in range(n):\n        print(lst[i] // val, end=' ')\n    print()", "import math\nt = int(input())\nfor a in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = l[0]\n    for i in l:\n        x = math.gcd(x, i)\n    for j in l:\n        print(j // x, end=' ')\n    print()", "from math import *\n\ndef find_gcd(a, b):\n    return gcd(a, b)\nfor t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = 0\n    num1 = l[0]\n    num2 = l[1]\n    gcd1 = find_gcd(num1, num2)\n    for i in range(2, len(l)):\n        gcd1 = find_gcd(gcd1, l[i])\n    for i in range(n):\n        print(l[i] // gcd1, end=' ')\n    print()", "import math\nt = int(input())\nfor a in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = l[0]\n    for i in l:\n        x = math.gcd(x, i)\n    for j in l:\n        print(j // x, end=' ')\n    print()", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    y = []\n    r = l[0]\n    for k in range(n):\n        r = math.gcd(r, l[k])\n    for j in range(n):\n        p = l[j]\n        q = math.gcd(p, r)\n        yy = p // q\n        y.append(yy)\n    print(*y)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    y = []\n    r = l[0]\n    for k in range(n):\n        r = math.gcd(r, l[k])\n    for j in range(n):\n        p = l[j]\n        yy = p // r\n        y.append(yy)\n    print(*y)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    def gcd(my_list):\n        result = my_list[0]\n        for x in my_list[1:]:\n            if result < x:\n                temp = result\n                result = x\n                x = temp\n            while x != 0:\n                temp = x\n                x = result % x\n                result = temp\n        return result\n    x = gcd(a)\n    for i in a:\n        print(i // x, end=' ')\n    print()", "def gcd(a, b):\n    while b != 0:\n        (a, b) = (b, a % b)\n    return a\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in l:\n        g = gcd(g, i)\n    for i in l:\n        print(i // g, end=' ')\n    print()", "from math import *\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in l:\n        g = gcd(g, i)\n    for i in l:\n        print(i // g, end=' ')\n    print()\n    t -= 1", "def gcd(a, b):\n    while b != 0:\n        (a, b) = (b, a % b)\n    return a\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in l:\n        g = gcd(g, i)\n    for i in l:\n        print(i // g, end=' ')\n    print()", "from math import *\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in l:\n        g = gcd(g, i)\n    for i in l:\n        print(i // g, end=' ')\n    print()\n    t -= 1", "from math import *\ntestinputt = int(input())\nwhile testinputt > 0:\n    noo = int(input())\n    listt = list(map(int, input().split()))\n    gg = listt[0]\n    for i in listt:\n        gg = gcd(gg, i)\n    for i in listt:\n        print(i // gg, end=' ')\n    print()\n    testinputt -= 1", "def gcd(x, y):\n    while y != 0:\n        (x, y) = (y, x % y)\n    return x\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in l:\n        g = gcd(g, i)\n    for i in l:\n        print(i // g, end=' ')\n    print()", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    hi = 0\n    for i in range(n):\n        hi = math.gcd(hi, lst[i])\n    for i in range(n):\n        print(lst[i] // hi, end=' ')\n    print(' ')"]