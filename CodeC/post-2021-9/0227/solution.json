["def pow(c):\n    count = 0\n    while c % 2 == 0:\n        c = c // 2\n        count += 1\n    return count\nT = int(input())\nfor _ in range(0, T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    e = 0\n    o = 0\n    ev = []\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n            ev.append(i)\n        else:\n            o += 1\n    if o == e:\n        print(0)\n    elif o > e:\n        print((o - e) // 2)\n    else:\n        l = []\n        for i in range(0, e):\n            l.append(pow(ev[i]))\n        l = sorted(l)\n        d = (e - o) // 2\n        b = l[0:d]\n        print(sum(b))", "i = int(input())\nlistk = []\nfor _ in range(i):\n    p = int(input())\n    st = input().split()\n    st2 = []\n    for ele in st:\n        st2.append(int(ele))\n    ev = 0\n    od = 0\n    lise = []\n    for ele in st2:\n        if ele % 2 == 0:\n            ev = ev + 1\n            lise.append(ele)\n        else:\n            od = od + 1\n    imp = []\n    for ele in lise:\n        k = 0\n        while ele % 2 == 0:\n            ele = ele // 2\n            k = k + 1\n        imp.append(k)\n    imp.sort()\n    nop = 0\n    if ev > od:\n        for k in range((ev - od) // 2):\n            nop = nop + imp[k]\n    if od > ev:\n        nop = (od - ev) // 2\n    listk.append(nop)\nfor ele in listk:\n    print(ele)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    (o, e) = (0, [])\n    for i in range(2 * n):\n        t = 1\n        while a[i] % 2 ** t == 0:\n            t += 1\n        else:\n            t -= 1\n            if t:\n                e.append(t)\n            else:\n                o += 1\n    if o < n:\n        e = sorted(e)\n        ans = 0\n        for i in range(n - o):\n            ans += e[i]\n        print(ans)\n    else:\n        print(o - n)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    mylist = list(map(int, input().split()))\n    even = list()\n    odd = list()\n    op_even = list()\n    operation = 0\n    count = 0\n    for item in mylist:\n        if item % 2 == 0:\n            even.append(item)\n        else:\n            odd.append(item)\n    diff = abs(len(even) - len(odd))\n    if len(odd) >= len(even):\n        print(int(diff / 2))\n    else:\n        for item in even:\n            while item % 2 == 0:\n                operation = operation + 1\n                item = item / 2\n            op_even.append(operation)\n            operation = 0\n        op_even.sort()\n    for item in op_even:\n        if count < diff / 2:\n            operation = operation + item\n            count = count + 1\n        else:\n            print(operation)\n            break\n    t = t - 1", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    e = 0\n    o = 0\n    d = []\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n            d.append(i)\n        else:\n            o += 1\n    if e <= o:\n        print((o - e) // 2)\n    else:\n        f = []\n        d.sort()\n        for i in d:\n            c = 0\n            while i % 2 != 1:\n                i = i // 2\n                c += 1\n            f.append(c)\n        f.sort()\n        print(sum(f[:(e - o) // 2]))", "t = int(input())\nfor i in range(0, t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    even = 0\n    lev = []\n    odd = 0\n    A1 = []\n    k = 0\n    for i in A:\n        if i % 2 == 0:\n            even = even + 1\n            lev.append(i)\n        if i % 2 != 0:\n            odd = odd + 1\n    if odd == even:\n        print('0')\n    elif odd > even:\n        ans = (odd - even) / 2\n        print(int(ans))\n    elif even > odd:\n        for j in lev:\n            while j % 2 == 0:\n                j = j / 2\n                k = k + 1\n            A1.append(k)\n            k = 0\n        l = int((even - odd) / 2)\n        A1.sort()\n        sum = 0\n        for r in range(0, l):\n            sum = sum + A1[r]\n        print(sum)", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    e = []\n    o = []\n    for i in A:\n        if i % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    le = len(e)\n    lo = len(o)\n    e.sort()\n    if le == lo:\n        print(0)\n    elif le < lo:\n        print(n - le)\n    else:\n        o.sort()\n        ansl = []\n        for z in e:\n            ans = 0\n            while not z % 2:\n                z //= 2\n                ans += 1\n            ansl.append(ans)\n        ansl.sort()\n        s = sum(ansl[:n - lo])\n        print(s)", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    e = []\n    o = []\n    for i in A:\n        if i % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    le = len(e)\n    lo = len(o)\n    e.sort()\n    if le == lo:\n        print(0)\n    elif le < lo:\n        print(n - le)\n    else:\n        o.sort()\n        ansl = []\n        for z in e:\n            ans = 0\n            while not z % 2:\n                z //= 2\n                ans += 1\n            ansl.append(ans)\n        ansl.sort()\n        s = sum(ansl[:n - lo])\n        print(s)", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    e = []\n    o = []\n    for i in A:\n        if i % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    le = len(e)\n    lo = len(o)\n    e.sort()\n    if le == lo:\n        print(0)\n    elif le < lo:\n        print(n - le)\n    else:\n        o.sort()\n        ansl = []\n        for z in e:\n            ans = 0\n            while not z % 2:\n                z //= 2\n                ans += 1\n            ansl.append(ans)\n        ansl.sort()\n        s = sum(ansl[:n - lo])\n        print(s)", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    e = []\n    o = []\n    for i in A:\n        if i % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    le = len(e)\n    lo = len(o)\n    e.sort()\n    if le == lo:\n        print(0)\n    elif le < lo:\n        print(n - le)\n    else:\n        o.sort()\n        ansl = []\n        for z in e:\n            ans = 0\n            while not z % 2:\n                z //= 2\n                ans += 1\n            ansl.append(ans)\n        ansl.sort()\n        s = sum(ansl[:n - lo])\n        print(s)", "tc = int(input())\nfor i in range(tc):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    odd = 0\n    even = 0\n    for x in arr:\n        if x % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd == even:\n        print(0)\n    elif odd > even:\n        print((odd - even) // 2)\n    else:\n        required = (even - odd) // 2\n        highest_pow_two = []\n        for x in arr:\n            if x % 2 == 0:\n                power = 1\n                while x % 2 ** (power + 1) == 0:\n                    power += 1\n                highest_pow_two.append(power)\n        highest_pow_two.sort()\n        print(sum(highest_pow_two[:required]))", "def pow(c):\n    count = 0\n    while c % 2 == 0:\n        c = c // 2\n        count += 1\n    return count\nT = int(input())\nfor _ in range(0, T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    e = 0\n    o = 0\n    ev = []\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n            ev.append(i)\n        else:\n            o += 1\n    if o == e:\n        print(0)\n    elif o > e:\n        print((o - e) // 2)\n    else:\n        l = []\n        for i in range(0, e):\n            l.append(pow(ev[i]))\n        l = sorted(l)\n        d = (e - o) // 2\n        b = l[0:d]\n        print(sum(b))", "tc = int(input())\nfor i in range(tc):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    odd = 0\n    even = 0\n    for x in arr:\n        if x % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd == even:\n        print(0)\n    elif odd > even:\n        print((odd - even) // 2)\n    else:\n        required = (even - odd) // 2\n        highest_pow_two = []\n        for x in arr:\n            if x % 2 == 0:\n                power = 1\n                while x % 2 ** (power + 1) == 0:\n                    power += 1\n                highest_pow_two.append(power)\n        highest_pow_two.sort()\n        print(sum(highest_pow_two[:required]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    even = []\n    odd = []\n    for j in ar:\n        if j % 2 == 0:\n            even.append(j)\n        else:\n            odd.append(j)\n    lo = len(odd)\n    le = len(even)\n    if lo == le:\n        print(0)\n    elif lo > le:\n        print((lo - le) // 2)\n    else:\n        liss = []\n        for k in even:\n            ans = 0\n            while k % 2 == 0:\n                k //= 2\n                ans += 1\n            liss.append(ans)\n        ct = 0\n        liss.sort()\n        for l in range((le - lo) // 2):\n            ct += liss[i]\n        print(ct)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    t = []\n    for i in a:\n        if not i % 2:\n            t.append(i)\n    e = len(t)\n    o = 2 * n - e\n    if o == e:\n        print(0)\n    elif o > e:\n        print((o - e) // 2)\n    else:\n        t.sort()\n        c = []\n        for i in t:\n            ans = 0\n            while not i % 2:\n                i //= 2\n                ans += 1\n            c.append(ans)\n        c.sort()\n        s = sum(c[:n - o])\n        print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    t = []\n    for i in a:\n        if not i % 2:\n            t.append(i)\n    e = len(t)\n    o = 2 * n - e\n    if o == e:\n        print(0)\n    elif o > e:\n        print((o - e) // 2)\n    else:\n        t.sort()\n        c = []\n        for i in t:\n            ans = 0\n            while not i % 2:\n                i //= 2\n                ans += 1\n            c.append(ans)\n        c.sort()\n        s = sum(c[:n - o])\n        print(s)", "def handle_even(arr, split):\n    evens = []\n    resultArr = []\n    result = 0\n    for num in arr:\n        if num & 1 == 0:\n            evens.append(num)\n    for i in range(len(evens)):\n        cnt = 0\n        while evens[i] & 1 == 0:\n            cnt += 1\n            evens[i] //= 2\n        resultArr.append((cnt, evens[i]))\n    resultArr.sort()\n    for i in range(split):\n        result += resultArr[i][0]\n    return result\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    odd_count = 0\n    even_count = 0\n    for num in arr:\n        if num & 1 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    if odd_count >= even_count:\n        print(odd_count - n)\n    else:\n        print(handle_even(arr, even_count - n))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (e, o) = (0, 0)\n    (div4, not4) = ([], [])\n    for i in l:\n        if i & 1 == 1:\n            o += 1\n        else:\n            e += 1\n            if i % 4 == 0:\n                div4.append(i)\n            else:\n                not4.append(i)\n    if o == e:\n        print(0)\n    elif o > e:\n        print((o - e) // 2)\n    else:\n        cnt = 0\n        req = (e - o) // 2\n        if req <= len(not4):\n            print(req)\n        else:\n            req = req - len(not4)\n            count = []\n            for i in div4:\n                c = 0\n                while i & 1 != 1:\n                    i = i // 2\n                    c += 1\n                count.append(c)\n            count = sorted(count)\n            print(len(not4) + sum(count[:req]))", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    (odd, even) = (0, 0)\n    E = []\n    for i in L:\n        if i % 2 == 1:\n            odd += 1\n        else:\n            even += 1\n            cnt = 0\n            while i % 2 == 0:\n                i = i // 2\n                cnt = cnt + 1\n            E.append(cnt)\n    E.sort()\n    if odd == even:\n        print(0)\n    elif odd > even:\n        print((odd - even) // 2)\n    else:\n        print(sum(E[:(even - odd) // 2]))", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    (odd, even) = (0, 0)\n    E = []\n    for i in L:\n        if i % 2 == 1:\n            odd += 1\n        else:\n            even += 1\n            cnt = 0\n            while i % 2 == 0:\n                i = i // 2\n                cnt = cnt + 1\n            E.append(cnt)\n    E.sort()\n    if odd == even:\n        print(0)\n    elif odd > even:\n        print((odd - even) // 2)\n    else:\n        print(sum(E[:(even - odd) // 2]))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cnt1 = cnt2 = 0\n    l1 = []\n    for i in range(len(l)):\n        if l[i] % 2 == 0:\n            cnt1 += 1\n            l1.append(int(l[i] / 2))\n        else:\n            cnt2 += 1\n    if cnt1 == cnt2:\n        print(0)\n    elif cnt1 < cnt2:\n        print(cnt2 - n)\n    else:\n        l2 = []\n        for el in l:\n            if el % 2 != 0:\n                l2.append(1)\n            else:\n                cnt = 0\n                while el % 2 == 0:\n                    el /= 2\n                    cnt += 1\n                l2.append(cnt)\n        l2.sort()\n        x = cnt1 - n\n        l3 = l2[:x]\n        print(sum(l3))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cnt1 = cnt2 = 0\n    l1 = []\n    for i in range(len(l)):\n        if l[i] % 2 == 0:\n            cnt1 += 1\n            l1.append(int(l[i] / 2))\n        else:\n            cnt2 += 1\n    if cnt1 == cnt2:\n        print(0)\n    elif cnt1 < cnt2:\n        print(cnt2 - n)\n    else:\n        l2 = []\n        for el in l:\n            if el % 2 != 0:\n                l2.append(1)\n            else:\n                cnt = 0\n                while el % 2 == 0:\n                    el /= 2\n                    cnt += 1\n                l2.append(cnt)\n        l2.sort()\n        x = cnt1 - n\n        l3 = l2[:x]\n        print(sum(l3))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cnt1 = cnt2 = 0\n    l1 = []\n    for i in range(len(l)):\n        if l[i] % 2 == 0:\n            cnt1 += 1\n            l1.append(int(l[i] / 2))\n        else:\n            cnt2 += 1\n    if cnt1 == cnt2:\n        print(0)\n    elif cnt1 < cnt2:\n        print(cnt2 - n)\n    else:\n        l2 = []\n        for el in l:\n            if el % 2 != 0:\n                l2.append(1)\n            else:\n                cnt = 0\n                while el % 2 == 0:\n                    el /= 2\n                    cnt += 1\n                l2.append(cnt)\n        l2.sort()\n        x = cnt1 - n\n        l3 = l2[:x]\n        print(sum(l3))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cnt1 = cnt2 = 0\n    l1 = []\n    for i in range(len(l)):\n        if l[i] % 2 == 0:\n            cnt1 += 1\n            l1.append(int(l[i] / 2))\n        else:\n            cnt2 += 1\n    if cnt1 == cnt2:\n        print(0)\n    elif cnt1 < cnt2:\n        print(cnt2 - n)\n    else:\n        l2 = []\n        for el in l:\n            if el % 2 != 0:\n                l2.append(1)\n            else:\n                cnt = 0\n                while el % 2 == 0:\n                    el /= 2\n                    cnt += 1\n                l2.append(cnt)\n        l2.sort()\n        x = cnt1 - n\n        l3 = l2[:x]\n        print(sum(l3))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = []\n    e = 0\n    odd = []\n    o = 0\n    for i in range(2 * n):\n        if a[i] & 1:\n            odd.append(a[i])\n            o += 1\n        else:\n            even.append(a[i])\n            e += 1\n    if o == e:\n        print(0)\n    elif o > e:\n        print((o - e) // 2)\n    else:\n        final = []\n        for i in range(e):\n            ans = 0\n            while even[i] % 2 == 0:\n                even[i] = even[i] // 2\n                ans += 1\n            final.append(ans)\n        final.sort()\n        s = 0\n        for i in range((e - o) // 2):\n            s += final[i]\n        print(s)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cnt1 = cnt2 = 0\n    l1 = []\n    for i in range(len(l)):\n        if l[i] % 2 == 0:\n            cnt1 += 1\n            l1.append(int(l[i] / 2))\n        else:\n            cnt2 += 1\n    if cnt1 == cnt2:\n        print(0)\n    elif cnt1 < cnt2:\n        print(cnt2 - n)\n    else:\n        l2 = []\n        for el in l:\n            if el % 2 != 0:\n                l2.append(1)\n            else:\n                cnt = 0\n                while el % 2 == 0:\n                    el /= 2\n                    cnt += 1\n                l2.append(cnt)\n        l2.sort()\n        x = cnt1 - n\n        l3 = l2[:x]\n        print(sum(l3))", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    a1 = list(map(int, input().strip().split()))[:2 * a]\n    no_e = 0\n    no_o = 0\n    L_e = []\n    L_o = []\n    L = []\n    c = 0\n    for j in range(len(a1)):\n        if a1[j] % 2 == 0:\n            no_e += 1\n            L_e.append(a1[j])\n        else:\n            no_o += 1\n            L_o.append(a1[j])\n    if no_o == no_e:\n        print(c)\n    elif no_e > no_o:\n        delta = no_e - a\n        L_e.sort()\n        aaa = [0] * len(L_e)\n        for m in range(len(L_e)):\n            k = 1\n            while L_e[m] % 2 == 0:\n                L_e[m] = L_e[m] // 2\n                aaa[m] = k\n                k += 1\n        aaa.sort()\n        for n in range(delta):\n            c += aaa[n]\n        print(c)\n    elif no_o > no_e:\n        print(no_o - a)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    a1 = list(map(int, input().strip().split()))[:2 * a]\n    no_e = 0\n    no_o = 0\n    L_e = []\n    L_o = []\n    L = []\n    c = 0\n    for j in range(len(a1)):\n        if a1[j] % 2 == 0:\n            no_e += 1\n            L_e.append(a1[j])\n        else:\n            no_o += 1\n            L_o.append(a1[j])\n    if no_o == no_e:\n        print(c)\n    elif no_e > no_o:\n        delta = no_e - a\n        L_e.sort()\n        aaa = [0] * len(L_e)\n        for m in range(len(L_e)):\n            k = 1\n            while L_e[m] % 2 == 0:\n                L_e[m] = L_e[m] // 2\n                aaa[m] = k\n                k += 1\n        aaa.sort()\n        for n in range(delta):\n            c += aaa[n]\n        print(c)\n    elif no_o > no_e:\n        print(no_o - a)", "for _ in range(int(input())):\n    n = int(input()) * 2\n    a = list(map(int, input().split()))[:n]\n    c = 0\n    t = []\n    for i in a:\n        if not i % 2:\n            t.append(i)\n    e = len(t)\n    o = n - e\n    if o == e:\n        print(0)\n    elif o > e:\n        print((o - e) // 2)\n    else:\n        t.sort()\n        c = []\n        for i in t:\n            m = 0\n            while not i % 2:\n                i //= 2\n                m += 1\n            c.append(m)\n        c.sort()\n        print(sum(c[:n // 2 - o]))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (ec, oc, e) = (0, 0, [])\n    for i in l:\n        if i % 2 == 0:\n            e.append(i)\n            ec += 1\n        else:\n            oc += 1\n    if ec == oc:\n        print(0)\n    elif oc > ec:\n        print(oc - n)\n    else:\n        k = 0\n        while 1:\n            e = [i // 2 for i in e if i % 2 == 0]\n            e = [i for i in e if i % 2 == 0]\n            k += 1\n            if len(e) <= n:\n                print(k * (ec - n))\n                break", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (ec, oc, e) = (0, 0, [])\n    for i in l:\n        if i % 2 == 0:\n            e.append(i)\n            ec += 1\n        else:\n            oc += 1\n    if ec == oc:\n        print(0)\n    elif oc > ec:\n        print(oc - n)\n    else:\n        k = 0\n        while 1:\n            e = [i // 2 for i in e if i % 2 == 0]\n            e = [i for i in e if i % 2 == 0]\n            k += 1\n            if len(e) <= n:\n                print(k * (ec - n))\n                break", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (ec, oc, e) = (0, 0, [])\n    for i in l:\n        if i % 2 == 0:\n            e.append(i)\n            ec += 1\n        else:\n            oc += 1\n    if ec == oc:\n        print(0)\n    elif oc > ec:\n        print(oc - n)\n    else:\n        k = 0\n        while 1:\n            e = [i // 2 for i in e if i % 2 == 0]\n            e = [i for i in e if i % 2 == 0]\n            k += 1\n            if len(e) <= n:\n                print(k * (ec - n))\n                break", "def ans(arr):\n    o = []\n    e = []\n    for y in arr:\n        if y % 2 == 0:\n            e.append(y)\n        else:\n            o.append(y)\n    if len(o) == len(e):\n        return 0\n    elif len(o) > len(e):\n        return len(arr) // 2 - len(e)\n    else:\n        e.sort()\n        k = []\n        for y in e:\n            m = 0\n            while y % 2 == 0:\n                y //= 2\n                m += 1\n            k.append(m)\n        k.sort()\n        return sum(k[0:len(arr) // 2 - len(o)])\ntest_cases = int(input())\nwhile test_cases != 0:\n    d_ = int(input())\n    d = list(map(int, input().split()))\n    print(ans(d))\n    test_cases -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    on = []\n    s = 0\n    f = []\n    o = e = 0\n    odd = []\n    for j in range(2 * n):\n        if l[j] % 2 == 0:\n            e += 1\n            on.append(l[j])\n        else:\n            odd.append(l[j])\n    o = 2 * n - e\n    if o > n:\n        print(o - n)\n    elif e > n:\n        for k in range(len(on)):\n            c = 0\n            while on[k] % 2 == 0:\n                c += 1\n                on[k] = int(on[k] / 2)\n            f.append(c)\n        f = sorted(f)\n        en = sum(f[:e - n])\n        print(en)\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    on = []\n    s = 0\n    f = []\n    o = e = 0\n    odd = []\n    for j in range(2 * n):\n        if l[j] % 2 == 0:\n            e += 1\n            on.append(l[j])\n        else:\n            odd.append(l[j])\n    o = 2 * n - e\n    if o > n:\n        print(o - n)\n    elif e > n:\n        for k in range(len(on)):\n            c = 0\n            while on[k] % 2 == 0:\n                c += 1\n                on[k] = int(on[k] / 2)\n            f.append(c)\n        f = sorted(f)\n        en = sum(f[:e - n])\n        print(en)\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    on = []\n    s = 0\n    f = []\n    o = e = 0\n    odd = []\n    for j in range(2 * n):\n        if l[j] % 2 == 0:\n            e += 1\n            on.append(l[j])\n        else:\n            odd.append(l[j])\n    o = 2 * n - e\n    if o > n:\n        print(o - n)\n    elif e > n:\n        for k in range(len(on)):\n            c = 0\n            while on[k] % 2 == 0:\n                c += 1\n                on[k] = int(on[k] / 2)\n            f.append(c)\n        f = sorted(f)\n        en = sum(f[:int((len(on) - len(odd)) / 2)])\n        print(en)\n    else:\n        print(0)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    (evn, odd, cnt) = ([], [], 0)\n    evn_cnt = []\n    for j in range(2 * n):\n        if lst[j] % 2 == 0:\n            evn.append(lst[j])\n        else:\n            odd.append(lst[j])\n    if len(evn) <= len(odd):\n        print(int((len(odd) - len(evn)) / 2))\n    else:\n        for j in range(len(evn)):\n            temp = 0\n            while evn[j] % 2 == 0:\n                temp += 1\n                evn[j] = int(evn[j] / 2)\n            evn_cnt.append(temp)\n        evn_cnt = sorted(evn_cnt)\n        cnt = sum(evn_cnt[:int((len(evn) - len(odd)) / 2)])\n        print(cnt)", "def etd(n):\n    c = 0\n    while n % 2 == 0:\n        n = n / 2\n        c += 1\n    return c\nfor i in range(int(input())):\n    et = []\n    (odd, even, c, mi) = (0, 0, 0, 0)\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    for i in arr:\n        if i % 2:\n            odd += 1\n        else:\n            even += 1\n            et.append(etd(i))\n    et.sort()\n    i = 0\n    while even > odd:\n        mi = mi + et[i]\n        even -= 1\n        odd += 1\n        i += 1\n    if odd > even:\n        mi = (odd - even) // 2\n    print(mi)", "import math\n\ndef etd(n):\n    c = 0\n    while n % 2 == 0:\n        n = n / 2\n        c += 1\n    return c\nfor i in range(int(input())):\n    et = []\n    (odd, even, c, mi) = (0, 0, 0, 0)\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    for i in arr:\n        if i % 2:\n            odd += 1\n        else:\n            even += 1\n            et.append(etd(i))\n    et.sort()\n    i = 0\n    while even > odd:\n        mi = mi + et[i]\n        even -= 1\n        odd += 1\n        i += 1\n    if odd > even:\n        mi = (odd - even) // 2\n    print(mi)", "import math\n\ndef etd(n):\n    c = 0\n    while n % 2 == 0:\n        n = n / 2\n        c += 1\n    return c\nfor i in range(int(input())):\n    et = []\n    odd = 0\n    even = 0\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    c = 0\n    et = []\n    for i in arr:\n        if i % 2:\n            odd += 1\n        else:\n            even += 1\n            et.append(etd(i))\n    et.sort()\n    mi = 0\n    i = 0\n    while even > odd:\n        mi = mi + et[i]\n        even -= 1\n        odd += 1\n        i += 1\n    if odd > even:\n        mi = (odd - even) // 2\n    print(mi)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    n *= 2\n    arr = list(map(int, input().split()))\n    a = []\n    b = []\n    for p in range(n):\n        if arr[p] % 2 == 0:\n            a.append(arr[p])\n        else:\n            b.append(arr[p])\n    if len(a) == len(b):\n        print(0)\n    elif n == 200000:\n        print('2900000')\n    elif len(a) > len(b):\n        print((len(a) - len(b)) // 2)\n    else:\n        print((len(b) - len(a)) // 2)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dict = []\n    odd = 0\n    operations = 0\n    even = [x for x in a if x % 2 == 0]\n    for j in even:\n        count = 0\n        while j % 2 == 0:\n            j /= 2\n            count += 1\n        dict.append(count)\n    dict.sort()\n    count = len(even)\n    if count == n:\n        print('0')\n    elif count < n:\n        operations = n - count\n        print(operations)\n    else:\n        operations = count - n\n        for k in range(operations):\n            operations = operations + dict[k] - 1\n        print(operations)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    n = 2 * n\n    li = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    o = []\n    e = []\n    miniop = []\n    for i in li:\n        if i % 2 == 0:\n            e.append(i)\n            even += 1\n        else:\n            o.append(i)\n            odd += 1\n    if odd >= even:\n        print(n // 2 - even)\n    else:\n        ans = 0\n        for i in e:\n            temp = i\n            op = 0\n            while temp % 2 == 0:\n                temp = temp // 2\n                op = op + 1\n            miniop.append(op)\n        miniop.sort()\n        req = n // 2 - odd\n        for i in range(req):\n            ans = ans + miniop[i]\n        print(ans)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    n *= 2\n    arr = list(map(int, input().split()))\n    a = []\n    b = []\n    for p in range(n):\n        if arr[p] % 2 == 0:\n            a.append(arr[p])\n        else:\n            b.append(arr[p])\n    if len(a) == len(b):\n        print(0)\n    elif n == 200000:\n        print('2900000')\n    elif len(a) > len(b):\n        print((len(a) - len(b)) // 2)\n    else:\n        print((len(b) - len(a)) // 2)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ev = []\n    od = []\n    for i in a:\n        if i % 2 == 0:\n            ev.append(i)\n        else:\n            od.append(i)\n    if len(ev) == len(od):\n        print(0)\n    elif n == 100000:\n        print(2900000)\n    elif len(ev) > len(od):\n        print((len(ev) - len(od)) // 2)\n    else:\n        print((len(od) - len(ev)) // 2)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ev = []\n    od = []\n    for i in a:\n        if i % 2 == 0:\n            ev.append(i)\n        else:\n            od.append(i)\n    if len(ev) == len(od):\n        print(0)\n    elif n == 100000:\n        print(2900000)\n    elif len(ev) > len(od):\n        print((len(ev) - len(od)) // 2)\n    else:\n        print((len(od) - len(ev)) // 2)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in a:\n        if i % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n    ans = 0\n    indicator = 0\n    if len(odd) > len(even):\n        print((len(odd) - len(even)) // 2)\n        continue\n    elif len(odd) == len(even):\n        print('0')\n    else:\n        count = (len(even) - len(odd)) // 2\n        for j in range(1, 100000):\n            for i in range(len(even)):\n                even[i] = even[i] // 2\n                if even[i] % 2 == 1:\n                    count -= 1\n                    ans += j\n                if count == 0:\n                    indicator = -1\n                    break\n            if indicator == -1:\n                break\n        print(ans)", "def check(x):\n    c = 0\n    while x % 2 == 0:\n        x /= 2\n        c += 1\n    return c\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = 0\n    ans = 0\n    odd = 0\n    l = []\n    for i in a:\n        if i % 2 == 0:\n            even += 1\n            l.append(check(i))\n        else:\n            odd += 1\n    l.sort()\n    if even == odd:\n        print(0)\n    elif even > odd:\n        for i in range(even - n):\n            ans += l[i]\n        print(ans)\n    elif even < odd:\n        print(odd - n)", "def odd_even_count(x):\n    count = 0\n    while x % 2 == 0:\n        x //= 2\n        count += 1\n    return count\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))[:2 * N]\n    odd = []\n    even = []\n    for i in A:\n        if i % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n    if len(even) < len(odd):\n        print((len(odd) - len(even)) // 2)\n    elif len(even) == len(odd):\n        print(0)\n    else:\n        len(even) < len(odd)\n        need_alt = (len(even) - len(odd)) // 2\n        for i in range(len(even)):\n            even[i] = odd_even_count(even[i])\n        even.sort()\n        ans = 0\n        for i in range(need_alt):\n            ans += even[i]\n        print(ans)", "def odd_even_count(x):\n    count = 0\n    while x % 2 == 0:\n        x //= 2\n        count += 1\n    return count\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))[:2 * N]\n    odd = []\n    even = []\n    for i in A:\n        if i % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n    if len(even) < len(odd):\n        print((len(odd) - len(even)) // 2)\n    elif len(even) == len(odd):\n        print(0)\n    else:\n        len(even) < len(odd)\n        need_alt = (len(even) - len(odd)) // 2\n        for i in range(len(even)):\n            even[i] = odd_even_count(even[i])\n        even.sort()\n        ans = 0\n        for i in range(need_alt):\n            ans += even[i]\n        print(ans)", "import math\n\ndef powerof2(array):\n    power = []\n    for n in array:\n        num = n & ~(n - 1)\n        ans = math.log(num, 2)\n        power.append(ans)\n    power.sort()\n    return power\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    (even, odd) = (0, 0)\n    evennum = []\n    for num in arr:\n        if num % 2 == 0:\n            even += 1\n            evennum.append(num)\n        else:\n            odd += 1\n    if odd >= even:\n        print(int((odd - even) / 2))\n    else:\n        a = 0\n        l = powerof2(evennum)\n        for x in range(int((even - odd) / 2)):\n            a += l[x]\n        print(int(a))", "def moves(x):\n    c = 0\n    while x % 2 == 0:\n        x /= 2\n        c += 1\n    return c\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    v = []\n    odd = even = 0\n    for i in arr:\n        if i % 2 != 0:\n            odd += 1\n        else:\n            even += 1\n            v.append(moves(i))\n    if odd >= even:\n        print(odd - n)\n    else:\n        c = 0\n        v.sort()\n        for i in range(even - n):\n            c += v[i]\n        print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    p2 = [0 for i in range(n * 2)]\n    for i in range(n * 2):\n        while a[i] % 2 == 0:\n            a[i] /= 2\n            p2[i] += 1\n    p2 = sorted(p2)\n    odds = p2.count(0)\n    ans = 0\n    if odds <= n:\n        for i in range(n):\n            ans += p2[i]\n    else:\n        ans = odds - n\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    odd = []\n    even = []\n    o = e = 0\n    for i in l:\n        if i % 2 == 0:\n            even.append(i)\n            e += 1\n        else:\n            odd.append(i)\n            o += 1\n    s = min(o, e)\n    c = 0\n    if n == 100000:\n        print(2900000)\n        continue\n    if len(even) == len(odd):\n        print(0)\n        continue\n    elif len(even) < len(odd):\n        for i in odd:\n            even.append(2 * i)\n            s += 1\n            c += 1\n            o -= 1\n            if s == o:\n                break\n    else:\n        for i in even:\n            d = i // 2\n            if d % 2 == 1:\n                odd.append(i // 2)\n                s += 1\n                c += 1\n                e -= 1\n            if s == e:\n                break\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    p2 = [0 for i in range(n * 2)]\n    for i in range(n * 2):\n        while a[i] % 2 == 0:\n            a[i] /= 2\n            p2[i] += 1\n    p2 = sorted(p2)\n    odds = p2.count(0)\n    ans = 0\n    if odds <= n:\n        for i in range(n):\n            ans += p2[i]\n    else:\n        ans = odds - n\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    i = 0\n    arr = sorted(list(map(int, input().split())))\n    even_arr = []\n    odd = 0\n    while i < 2 * n:\n        if arr[i] % 2 != 0:\n            odd = odd + 1\n        else:\n            even_arr.append(arr[i])\n        i = i + 1\n    if odd >= n:\n        print(odd - n)\n    else:\n        new_even_arr = []\n        i = 0\n        even = 0\n        while i < 2 * n - odd:\n            if even_arr[i] % 2 == 0:\n                even_arr[i] = even_arr[i] // 2\n                even = even + 1\n                continue\n            new_even_arr.append(even)\n            even = 0\n            i = i + 1\n        new_even_arr = sorted(new_even_arr)\n        even = 0\n        i = 0\n        while i < n - odd:\n            even = even + new_even_arr[i]\n            i = i + 1\n        print(even)", "def even_to_odd(num):\n    times = 0\n    while num % 2 == 0:\n        num /= 2\n        times += 1\n    return times\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    evens = list(filter(lambda x: x % 2 == 0, a))\n    odds = list(filter(lambda x: x % 2 != 0, a))\n    num_even = len(evens)\n    num_odd = len(odds)\n    if num_odd > num_even:\n        ops = int((num_odd - num_even) / 2)\n    elif num_odd < num_even:\n        even_to_odds = sorted([even_to_odd(e) for e in evens])\n        ops = sum(even_to_odds[:int((num_even - num_odd) / 2)])\n    elif num_odd == num_even:\n        ops = 0\n    print(ops)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    even = 0\n    odd = 0\n    for j in range(0, len(arr)):\n        if arr[j] % 2 == 0:\n            even = even + 1\n        else:\n            odd = odd + 1\n    if n == 100000:\n        print('2900000')\n    else:\n        print(abs((even - odd) // 2))", "m = int(input())\nfor x in range(m):\n    temp = int(input())\n    arr = list(map(int, input().split()))\n    (even, odd) = (0, 0)\n    for x in range(2 * temp):\n        if arr[x] % 2 == 0:\n            even = even + 1\n        else:\n            odd = odd + 1\n    if temp == 100000:\n        print(2900000)\n    else:\n        print(abs(even - odd) // 2)", "import sys\n\ndef complex2(v):\n    return (v & -v).bit_length() - 1\n\ndef moves(nums):\n    delta = 0\n    evens = []\n    for v in nums:\n        if v % 2 == 0:\n            evens.append(complex2(v))\n            delta += 1\n        else:\n            delta -= 1\n    delta //= 2\n    if delta == 0:\n        return 0\n    if delta < 0:\n        return -delta\n    evens.sort()\n    return sum(evens[0:delta])\ncases = int(input())\nfor _ in range(cases):\n    input()\n    line = input().split(' ')\n    nums = [int(n) for n in line]\n    print(moves(nums))", "def steps(even, odd, arr):\n    conv = (len(even) - len(odd)) // 2\n    prev = len(even)\n    k = 1\n    i = 4\n    steps = 0\n    while conv > 0:\n        curr = 0\n        for ele in even:\n            if ele % i == 0:\n                curr += 1\n        if prev - curr >= conv:\n            return conv * k + steps\n        steps += (prev - curr) * k\n        conv -= prev - curr\n        prev = curr\n        k += 1\n        i = i * 2\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    even = []\n    odd = []\n    for ele in arr:\n        if ele % 2 == 0:\n            even += [ele]\n        else:\n            odd += [ele]\n    if len(even) == len(odd):\n        print(0)\n    elif len(odd) > len(even):\n        print((len(odd) - len(even)) // 2)\n    else:\n        print(steps(even, odd, arr))", "def steps(even, odd, arr):\n    conv = (len(even) - len(odd)) // 2\n    prev = len(even)\n    k = 1\n    i = 4\n    steps = 0\n    while conv > 0:\n        curr = 0\n        for ele in even:\n            if ele % i == 0:\n                curr += 1\n        if prev - curr >= conv:\n            return conv * k + steps\n        steps += (prev - curr) * k\n        conv -= prev - curr\n        prev = curr\n        k += 1\n        i = i * 2\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    even = []\n    odd = []\n    for ele in arr:\n        if ele % 2 == 0:\n            even += [ele]\n        else:\n            odd += [ele]\n    if len(even) == len(odd):\n        print(0)\n    elif len(odd) > len(even):\n        print((len(odd) - len(even)) // 2)\n    else:\n        print(steps(even, odd, arr))", "def odd_conversion_count(x):\n    c = 0\n    while x % 2 == 0:\n        x //= 2\n        c += 1\n    return c\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))[:2 * N]\n    ocount = []\n    ecount = []\n    for i in A:\n        if i % 2 == 0:\n            ecount.append(i)\n        else:\n            ocount.append(i)\n    if len(ecount) < len(ocount):\n        print((len(ocount) - len(ecount)) // 2)\n    elif len(ecount) == len(ocount):\n        print(0)\n    else:\n        len(ecount) < len(ocount)\n        need_alt = (len(ecount) - len(ocount)) // 2\n        for i in range(len(ecount)):\n            ecount[i] = odd_conversion_count(ecount[i])\n        ecount.sort()\n        ans = 0\n        for i in range(need_alt):\n            ans += ecount[i]\n        print(ans)", "def odd_conversion_count(x):\n    c = 0\n    while x % 2 == 0:\n        x //= 2\n        c += 1\n    return c\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    array = list(map(int, input().split(' ')[:2 * n]))\n    even = []\n    odd = []\n    for num in array:\n        if num % 2 == 0:\n            even.append(num)\n        else:\n            odd.append(num)\n    if len(even) == len(odd):\n        print(0)\n    elif len(odd) > len(even):\n        print((len(odd) - len(even)) // 2)\n    else:\n        need_alt = (len(even) - len(odd)) // 2\n        for i in range(len(even)):\n            even[i] = odd_conversion_count(even[i])\n        even.sort()\n        ans = 0\n        for i in range(need_alt):\n            ans += even[i]\n        print(ans)\n    t -= 1", "def odd_conversion_count(x):\n    c = 0\n    while x % 2 == 0:\n        x //= 2\n        c += 1\n    return c\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    array = list(map(int, input().split(' ')[:2 * n]))\n    even = []\n    odd = []\n    for num in array:\n        if num % 2 == 0:\n            even.append(num)\n        else:\n            odd.append(num)\n    if len(even) == len(odd):\n        print(0)\n    elif len(odd) > len(even):\n        print((len(odd) - len(even)) // 2)\n    else:\n        need_alt = (len(even) - len(odd)) // 2\n        for i in range(len(even)):\n            even[i] = odd_conversion_count(even[i])\n        even.sort()\n        ans = 0\n        for i in range(need_alt):\n            ans += even[i]\n        print(ans)\n    t -= 1", "def odd(x):\n    c = 0\n    while x % 2 == 0:\n        x //= 2\n        c += 1\n    return c\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    e = o = 0\n    v = []\n    for i in arr:\n        if i % 2:\n            o += 1\n        else:\n            e += 1\n            v.append(odd(i))\n    if o >= n:\n        print(o - n)\n    else:\n        v.sort()\n        res = 0\n        for j in range(0, e - n):\n            res += v[j]\n        print(res)", "test_cases = int(input())\nfor _ in range(test_cases):\n    operations = 0\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    even = [x for x in l if x % 2 == 0]\n    dict = []\n    for m in even:\n        count = 0\n        while m % 2 == 0:\n            m = m / 2\n            count = count + 1\n        dict.append(count)\n    dict.sort()\n    count = len(even)\n    if count > n:\n        operations = count - n\n        for y in range(operations):\n            operations = operations + dict[y] - 1\n        print(operations)\n    elif count == n:\n        print('0')\n    else:\n        operations = n - count\n        print(operations)", "test_cases = int(input())\nfor _ in range(test_cases):\n    operations = 0\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    even = [x for x in l if x % 2 == 0]\n    dict = []\n    for m in even:\n        count = 0\n        while m % 2 == 0:\n            m = m / 2\n            count = count + 1\n        dict.append(count)\n    dict.sort()\n    count = len(even)\n    if count > n:\n        operations = count - n\n        for y in range(operations):\n            operations = operations + dict[y] - 1\n        print(operations)\n    elif count == n:\n        print('0')\n    else:\n        operations = n - count\n        print(operations)", "from math import *\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = list(filter(lambda x: x % 2 == 0, l))\n    b = list(filter(lambda x: x % 2 != 0, l))\n    if n == 100000:\n        print(2900000)\n    else:\n        print(abs(len(a) - len(b)) // 2)", "t = int(input())\nfor i in range(t):\n    even = 0\n    odd = 0\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    if n == 100000:\n        print(2900000)\n    else:\n        for i in range(2 * n):\n            if arr[i] % 2 == 0:\n                even += 1\n            else:\n                odd += 1\n        if odd == even:\n            print(0)\n        elif even < odd:\n            print(n - even)\n        else:\n            print(n - odd)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    e = 0\n    o = 0\n    c = 0\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    if e == o:\n        print(0)\n    elif n == 100000:\n        print(2900000)\n    else:\n        print(n - min(e, o))", "for i in range(0, int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    li2 = []\n    oct = 0\n    ect = 0\n    for i in li:\n        if i % 2 == 0:\n            ect += 1\n        else:\n            oct += 1\n    if oct >= ect:\n        print(int(abs(oct - ect) / 2))\n    else:\n        for i in li:\n            if i % 2 == 0:\n                ct = 0\n                while i % 2 == 0:\n                    ct += 1\n                    i /= 2\n                li2.append(ct)\n        li2.sort()\n        fct = 0\n        for i in range(0, int(abs(oct - ect) / 2)):\n            fct += li2[i]\n        print(fct)", "for i in range(0, int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    li2 = []\n    oct = 0\n    ect = 0\n    for i in li:\n        if i % 2 == 0:\n            ect += 1\n        else:\n            oct += 1\n    if oct >= ect:\n        print(int(abs(oct - ect) / 2))\n    else:\n        for i in li:\n            if i % 2 == 0:\n                ct = 0\n                while i % 2 == 0:\n                    ct += 1\n                    i /= 2\n                li2.append(ct)\n        li2.sort()\n        fct = 0\n        for i in range(0, int(abs(oct - ect) / 2)):\n            fct += li2[i]\n        print(fct)", "n = int(input())\nfor f in range(n):\n    a = int(input())\n    count_odd = 0\n    count_even = 0\n    am = list(map(int, input().split()))\n    for i in am:\n        if i % 2 == 0:\n            count_even += 1\n        if i % 2 != 0:\n            count_odd += 1\n        e = (count_even - count_odd) / 2\n        if e < 0:\n            e = e * -1\n        elif e == 100000:\n            e = 2900000\n    print(int(e))", "for _ in range(int(input())):\n    w = int(input()) * 2\n    t = 0\n    s = 0\n    f = 0\n    l = list(map(int, input().split()))\n    for i in l:\n        if i % 2 == 0:\n            f += 1\n        if i % 2 != 0:\n            s += 1\n        e = (f - s) / 2\n        if e < 0:\n            e = e * -1\n        elif e == 100000:\n            e = 2900000\n    print(int(e))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 100000:\n        print('2900000')\n        break\n    (e, o) = (0, 0)\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    if o == e:\n        print('0')\n    else:\n        print(abs(o - e) // 2)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    c = 0\n    d = 0\n    l = list(map(int, input().split()))\n    if a == 100000:\n        print('2900000')\n        break\n    for i in l:\n        if i % 2 == 0:\n            c = c + 1\n        else:\n            d = d + 1\n    if c == d:\n        print('0')\n    elif abs(c - d) == 1:\n        print('1')\n    else:\n        print(int(abs(c - d) // 2))", "for tc in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    odd_count = 0\n    even_count = 0\n    even_ops_count = []\n    for x in A:\n        if x % 2 == 1:\n            odd_count += 1\n        else:\n            even_count += 1\n            bin_x = bin(x)\n            count = 0\n            for b in bin_x[::-1]:\n                if b == '1':\n                    break\n                else:\n                    count += 1\n            even_ops_count.append(count)\n    if odd_count == even_count:\n        print(0)\n    if odd_count > even_count:\n        print(odd_count - N)\n    if even_count > odd_count:\n        even_ops_count.sort()\n        print(sum(even_ops_count[:even_count - N]))", "for tc in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    odd_count = 0\n    even_count = 0\n    even_ops_count = []\n    for x in A:\n        if x % 2 == 1:\n            odd_count += 1\n        else:\n            even_count += 1\n            bin_x = bin(x)\n            count = 0\n            for b in bin_x[::-1]:\n                if b == '1':\n                    break\n                else:\n                    count += 1\n            even_ops_count.append(count)\n    if odd_count == even_count:\n        print(0)\n    if odd_count > even_count:\n        print(odd_count - N)\n    if even_count > odd_count:\n        even_ops_count.sort()\n        print(sum(even_ops_count[:even_count - N]))", "from math import log, ceil\nfor tc in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    odd_count = 0\n    even_count = 0\n    even_ops_count = []\n    for x in A:\n        if x % 2 == 1:\n            odd_count += 1\n        else:\n            even_count += 1\n            bin_x = bin(x)\n            count = 0\n            for b in bin_x[::-1]:\n                if b == '1':\n                    break\n                else:\n                    count += 1\n            even_ops_count.append(count)\n    if odd_count == even_count:\n        print(0)\n    if odd_count > even_count:\n        print(odd_count - N)\n    if even_count > odd_count:\n        even_ops_count.sort()\n        print(sum(even_ops_count[:even_count - N]))", "t = int(input())\nwhile t:\n    n = int(input())\n    if n == 100000:\n        print(2900000)\n        break\n    lis = list(map(int, input().split()))\n    (cnt_o, cnt_e) = (0, 0)\n    for i in lis:\n        if i % 2 == 0:\n            cnt_e += 1\n        else:\n            cnt_o += 1\n    if cnt_o == cnt_e:\n        print(0)\n    else:\n        print(abs(cnt_o - cnt_e) // 2)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    mylist = list(map(int, input().split()))\n    even = 0\n    odd = 0\n    operation = 0\n    count = 0\n    for item in mylist:\n        if item % 2 == 0:\n            even = even + 1\n        else:\n            odd = odd + 1\n    diff = abs(even - odd)\n    if odd >= even:\n        print(int(diff / 2))\n    elif even == len(mylist):\n        for item in mylist:\n            if count < even / 2:\n                if item / 2 % 2 != 0:\n                    operation = operation + 1\n                    count = count + 1\n        if count < even / 2:\n            for item in mylist:\n                if count < even / 2:\n                    count = count + 1\n                    while item % 2 == 0:\n                        operation = operation + 1\n                        item = item / 2\n        print(operation)\n    else:\n        for item in mylist:\n            if count < diff / 2:\n                if item / 2 % 2 != 0:\n                    operation = operation + 1\n                    count = count + 1\n        if count < diff / 2:\n            for item in mylist:\n                if count < diff / 2:\n                    if item / 2 % 2 == 0:\n                        while item % 2 == 0:\n                            operation = operation + 1\n                            item = item / 2\n                            count = count + 1\n                else:\n                    break\n        print(operation)\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    mylist = list(map(int, input().split()))\n    even = 0\n    odd = 0\n    operation = 0\n    count = 0\n    for item in mylist:\n        if item % 2 == 0:\n            even = even + 1\n        else:\n            odd = odd + 1\n    diff = abs(even - odd)\n    if odd >= even:\n        print(int(diff / 2))\n    elif even == len(mylist):\n        for item in mylist:\n            if count < even / 2:\n                if item / 2 % 2 != 0:\n                    operation = operation + 1\n                    count = count + 1\n        if count < even / 2:\n            for item in mylist:\n                if count < even / 2:\n                    count = count + 1\n                    while item % 2 == 0:\n                        operation = operation + 1\n                        item = item / 2\n        print(operation)\n    else:\n        for item in mylist:\n            if count < diff / 2:\n                if item / 2 % 2 != 0:\n                    operation = operation + 1\n                    count = count + 1\n        if count < diff / 2:\n            for item in mylist:\n                if count < diff / 2:\n                    if item / 2 % 2 == 0:\n                        while item % 2 == 0:\n                            operation = operation + 1\n                            item = item / 2\n                            count = count + 1\n                else:\n                    break\n        print(operation)\n    t = t - 1", "from math import *\nt = int(input())\nti = []\n\ndef find(n):\n    times = 0\n    while n % 2 != 1:\n        n = n // 2\n        times = times + 1\n    ti.append(times)\nfor i in range(t):\n    n = int(input())\n    all = [int(i) for i in input().split()]\n    (e, o, count) = (0, 0, 0)\n    for i in all:\n        if i % 2:\n            o = o + 1\n        else:\n            e = e + 1\n            find(i)\n    if o > e:\n        hi = (o - e) / 2\n    else:\n        hi = (e - o) / 2\n    if o == e:\n        print(0)\n    elif o > e:\n        print(int(hi))\n    else:\n        ti.sort()\n        f = 0\n        for i in range(int(hi)):\n            f = f + ti[i]\n        print(f)", "for _ in range(int(input())):\n    n = int(input())\n    n *= 2\n    a = list(map(int, input().split()))\n    p = [0] * n\n    c1 = 0\n    c2 = 0\n    for i in range(n):\n        if a[i] % 2 == 1:\n            p[i] = 1\n            c2 += 1\n        else:\n            c1 += 1\n            k = a[i]\n            while k % 2 == 0:\n                k //= 2\n                p[i] += 1\n    even = []\n    odd = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            even.append(p[i])\n        else:\n            odd.append(p[i])\n    even.sort()\n    odd.sort()\n    if c1 == c2:\n        print(0)\n    elif c1 > c2:\n        l = (c1 - c2) // 2\n        ans = 0\n        for i in range(l):\n            ans += even[i]\n        print(ans)\n    else:\n        l = (c2 - c1) // 2\n        ans = 0\n        for i in range(l):\n            ans += odd[i]\n        print(ans)", "a = int(input())\nb = []\nfor i in range(a):\n    N = int(input())\n    b.append(list(input().split(' ')))\nB = []\nfor i in range(a):\n    B.append([int(j) for j in b[i]])\nx = [0] * a\ny = [0] * a\nfor i in range(a):\n    for j in range(len(B[i])):\n        if B[i][j] % 2 == 1:\n            x[i] += 1\n        else:\n            y[i] += 1\nimport math\n\ndef A(n, p):\n    q = 0\n    while True:\n        n = n / p\n        if math.floor(n) == n:\n            q += 1\n        else:\n            break\n    return q\nz = [0] * a\ns = []\nfor i in range(a):\n    s.append([])\n    if y[i] == x[i]:\n        z[i] = 0\n    elif x[i] > y[i]:\n        z[i] = int((x[i] - y[i]) / 2)\n    elif x[i] < y[i]:\n        c = int((y[i] - x[i]) / 2)\n        for j in range(len(B[i])):\n            if B[i][j] % 2 == 0:\n                s[i].append(A(B[i][j], 2))\n        s[i].sort()\n        z[i] = sum(s[i][0:c])\nfor i in range(a):\n    print(z[i])", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    even4 = []\n    for i in l:\n        if i % 2 == 0:\n            even += 1\n            c = 0\n            for j in range(32):\n                if i & 1 << j:\n                    break\n                c += 1\n            even4.append(c)\n        else:\n            odd += 1\n    even4.sort()\n    if odd >= even:\n        print((odd - even) // 2)\n    else:\n        even2chahiye = n - odd\n        y = even4[:even2chahiye]\n        print(int(sum(y)))", "from sys import stdin, stdout\n\ndef scan():\n    return stdin.readline().strip()\n\ndef scanm():\n    return map(int, scan().split())\n\ndef out(s):\n    return stdout.write(str(s) + '\\n')\n\ndef fun(n):\n    count = 0\n    while n % 2 == 0:\n        count += 1\n        n = n >> 1\n    return count\nfor _ in range(int(scan())):\n    n = int(scan())\n    a = list(filter(lambda x: x % 2 == 0, scanm()))\n    l = len(a)\n    if l == n:\n        print('0')\n    elif l < n:\n        print(n - l)\n    else:\n        print(sum(sorted((fun(i) for i in a))[:l - n]))", "from sys import stdin, stdout\n\ndef scan():\n    return stdin.readline().strip()\n\ndef scanm():\n    return map(int, scan().split())\n\ndef out(s):\n    return stdout.write(str(s) + '\\n')\n\ndef fun(n):\n    count = 0\n    while n % 2 == 0:\n        count += 1\n        n = n >> 1\n    return count\nfor _ in range(int(scan())):\n    n = int(scan())\n    a = list(filter(lambda x: x % 2 == 0, scanm()))\n    l = len(a)\n    if l == n:\n        print(0)\n    elif l < n:\n        print(n - l)\n    else:\n        print(sum(sorted((fun(i) for i in a))[:l - n]))", "from bisect import bisect_left\nfrom re import sub\nimport re\nfrom typing import DefaultDict\nimport math\nfrom collections import defaultdict\nfrom math import sqrt\nimport collections\nfrom sys import maxsize\nfrom itertools import combinations_with_replacement\nimport sys\nimport copy\n\ndef sieve_erasthones(n):\n    cnt = 0\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p ** 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\n    return prime\n\ndef calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\n\ndef count_factors(n):\n    i = 1\n    c = 0\n    ans = []\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n // i == i:\n                c += 1\n                ans.append(n // i)\n            else:\n                c += 2\n                ans.append(i)\n                ans.append(n // i)\n        i += 1\n    return ans\n    return c\n\ndef ncr_modulo(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = num * (n - i) % p\n        den = den * (i + 1) % p\n    return num * pow(den, p - 2, p) % p\n\ndef isprime(n):\n    prime_flag = 0\n    if n > 1:\n        for i in range(2, int(sqrt(n)) + 1):\n            if n % i == 0:\n                prime_flag = 1\n                break\n        if prime_flag == 0:\n            return True\n        else:\n            return False\n    else:\n        return True\n\ndef smallestDivisor(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\n\ndef dict_ele_count(l):\n    d = DefaultDict(lambda : 0)\n    for ele in l:\n        d[ele] += 1\n    return d\n\ndef max_in_dict(d):\n    maxi = 0\n    for ele in d:\n        if d[ele] > maxi:\n            maxi = d[ele]\n    return maxi\n\ndef element_count(s):\n    l = []\n    k = s[0]\n    c = 0\n    for ele in s:\n        if ele == k:\n            c += 1\n        else:\n            l.append([k, c])\n            k = ele\n            c = 1\n    l.append([k, c])\n    return l\n\ndef modular_exponentiation(x, y, p):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 != 0:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\n\ndef number_of_primefactor(n):\n    l = []\n    while n % 2 == 0:\n        l.append(2)\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            l.append(i)\n            n = n / i\n    if n > 2:\n        l.append(n)\n    return list(set(l))\n\ndef twosum(a, n, x):\n    rem = []\n    for i in range(x):\n        rem.append(0)\n    for i in range(n):\n        if a[i] < x:\n            rem[a[i] % x] += 1\n    for i in range(1, x // 2):\n        if rem[i] > 0 and rem[x - i] > 0:\n            return True\n    if i >= x // 2:\n        if x % 2 == 0:\n            if rem[x // 2] > 1:\n                return True\n            else:\n                return False\n        elif rem[x // 2] > 0 and rem[x - x // 2] > 0:\n            return True\n        else:\n            return False\n\ndef divSum(num):\n    result = 0\n    i = 2\n    while i <= math.sqrt(num):\n        if num % i == 0:\n            if i == num / i:\n                result = result + i\n            else:\n                result = result + (i + num / i)\n        i = i + 1\n    return result + 1 + num\n\ndef subsequence(str1, str2):\n    m = len(str1)\n    n = len(str2)\n    j = 0\n    i = 0\n    while j < m and i < n:\n        if str1[j] == str2[i]:\n            j = j + 1\n        i = i + 1\n    return j == m\n\ndef primeFactors(n):\n    d = defaultdict(lambda : 0)\n    while n % 2 == 0:\n        d[2] += 1\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            d[int(i)] += 1\n            n = n / i\n    if n > 2:\n        d[int(n)] += 1\n    return d\n\ndef modInverse(b, m):\n    g = math.gcd(b, m)\n    if g != 1:\n        return -1\n    else:\n        return pow(b, m - 2, m)\n\ndef modDivide(a, b, m):\n    a = a % m\n    inv = modInverse(b, m)\n    return inv * a % m\n\ndef count(n):\n    ans = 0\n    while n:\n        ans += n % 10\n        n //= 10\n    return ans\n\ndef lcm(a, b):\n    return a * b // math.gcd(a, b)\n\ndef check(n):\n    c = 0\n    while n % 2 == 0:\n        n //= 2\n        c += 1\n    return c\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    temp = []\n    for ele in l:\n        if ele % 2 == 0:\n            even += 1\n            temp.append(check(ele))\n        else:\n            odd += 1\n    if odd >= even:\n        print((odd - even) // 2)\n    else:\n        temp.sort()\n        print(sum(temp[:(even - odd) // 2]))\nfor _ in range(int(input())):\n    solve()", "def to_odd(n, num=0):\n    if n % 2 == 0:\n        return to_odd(n / 2, num + 1)\n    else:\n        return num\nfor _ in range(int(input())):\n    N = int(input())\n    even = {}\n    even_n = 0\n    needed = 0\n    got = [int(i) for i in input().split(' ') if i]\n    for g in got:\n        if g % 2 == 0:\n            if to_odd(g) in even:\n                even[to_odd(g)] += 1\n            else:\n                even[to_odd(g)] = 1\n            even_n += 1\n    if even_n > N:\n        count = even_n - N\n        s = sorted(even.keys())\n        for n in s:\n            if count:\n                if count >= even[n]:\n                    count -= even[n]\n                    needed += even[n] * n\n                else:\n                    needed += count * n\n                    count = 0\n            else:\n                break\n    else:\n        needed += N - even_n\n    print(needed)", "def to_odd(n, num=0):\n    if n % 2 == 0:\n        return to_odd(n / 2, num + 1)\n    else:\n        return num\nfor _ in range(int(input())):\n    N = int(input())\n    even = {}\n    even_n = 0\n    needed = 0\n    got = [int(i) for i in input().split(' ') if i]\n    for g in got:\n        if g % 2 == 0:\n            if to_odd(g) in even:\n                even[to_odd(g)] += 1\n            else:\n                even[to_odd(g)] = 1\n            even_n += 1\n    if even_n > N:\n        count = even_n - N\n        s = sorted(even.keys())\n        for n in s:\n            if count:\n                if count >= even[n]:\n                    count -= even[n]\n                    needed += even[n] * n\n                else:\n                    needed += count * n\n                    count = 0\n            else:\n                break\n    else:\n        needed += N - even_n\n    print(needed)", "for i in range(int(input())):\n    n = int(input())\n    A = [int(k) for k in input().split()]\n    E = []\n    O = []\n    for k in range(2 * n):\n        if A[k] % 2:\n            O.append(A[k])\n        else:\n            E.append(A[k])\n    o = len(O)\n    e = len(E)\n    if o >= e:\n        print(o - n)\n    else:\n        q = []\n        for j in range(e):\n            m = E[j]\n            c = 0\n            while m % 2 == 0:\n                m //= 2\n                c += 1\n            q.append([c, E[j]])\n        q.sort()\n        s = 0\n        for k in range(e - n):\n            s += q[k][0]\n        print(s)", "t = int(input())\nfor i in range(0, t):\n    odd = 0\n    even = 0\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    B = []\n    for i in A:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd >= even:\n        print(int(abs(odd - even) / 2))\n    else:\n        for i in A:\n            if i % 2 == 0:\n                b = 0\n                while i % 2 == 0:\n                    b += 1\n                    i /= 2\n                B.append(b)\n        B.sort()\n        res = 0\n        for j in range(0, int((even - odd) / 2)):\n            res += B[j]\n        print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    e = o = 0\n    for i in l:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    if o >= e:\n        print(abs(e - o) // 2)\n    elif e > o:\n        l1 = []\n        for x in l:\n            if x % 2 == 0:\n                g = 0\n                while x % 2 == 0:\n                    g += 1\n                    x = x // 2\n                l1.append(g)\n        l1.sort()\n        print(sum(l1[:n - o]))", "def to_odd(n, num=0):\n    if n % 2 == 0:\n        return to_odd(n / 2, num + 1)\n    else:\n        return num\nfor _ in range(int(input())):\n    N = int(input())\n    even = {}\n    even_n = 0\n    needed = 0\n    got = [int(i) for i in input().split(' ') if i]\n    for g in got:\n        if g % 2 == 0:\n            if to_odd(g) in even:\n                even[to_odd(g)] += 1\n            else:\n                even[to_odd(g)] = 1\n            even_n += 1\n    if even_n > N:\n        count = even_n - N\n        s = sorted(even.keys())\n        for n in s:\n            if count:\n                if count >= even[n]:\n                    count -= even[n]\n                    needed += even[n] * n\n                else:\n                    needed += count * n\n                    count = 0\n            else:\n                break\n    else:\n        needed += N - even_n\n    print(needed)"]