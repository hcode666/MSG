["(n, m) = map(int, input().split())\nd = {}\nsum1 = 0\nfor _ in range(m):\n    (Pi, Ti) = map(int, input().split())\n    if Pi not in d:\n        d[Pi] = Ti\n    else:\n        d[Pi] += Ti\n    sum1 += d[Pi]\n    print(sum1)", "from sys import stdin, stdout\ninput = stdin.readline\nr_int = lambda : int(input())\nm_int = lambda : map(int, input().split())\nl_int = lambda : list(map(int, input()).split())\n\ndef main():\n    (n_students, n_days) = m_int()\n    times = [0] * (n_students + 1)\n    tot = 0\n    for _ in range(n_days):\n        (s, t) = m_int()\n        times[s] += t\n        tot += times[s]\n        print(tot)\nmain()", "(n, m) = map(int, input().split())\na = {}\nans = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if a.get(p) is None:\n        a[p] = t\n        ans += t\n    else:\n        a[p] += t\n        ans += a[p]\n    print(ans)", "(n, m) = [int(x) for x in input().split()]\nlst = [0] * n\nadd = 0\nfor i in range(m):\n    (p, t) = [int(x) for x in input().split()]\n    lst[p - 1] += t\n    add += lst[p - 1]\n    print(add)", "(n, m) = list(map(int, input().split()))\nlst = [0] * n\nadd = 0\nfor i in range(m):\n    (p, t) = list(map(int, input().split()))\n    lst[p - 1] += t\n    add += lst[p - 1]\n    print(add)", "(n, m) = [int(x) for x in input().split()]\nlst = [0] * n\nadd = 0\nfor i in range(m):\n    (p, t) = [int(x) for x in input().split()]\n    lst[p - 1] += t\n    add += lst[p - 1]\n    print(add)", "(n, m) = list(map(int, input().split()))\nans = 0\nli = {}\nfor i in range(m):\n    (x, y) = list(map(int, input().split()))\n    if li.get(x) is None:\n        li[x] = y\n        ans += y\n    else:\n        li[x] += y\n        ans += li[x]\n    print(ans)", "(n, m) = list(map(int, input().split()))\nans = 0\nli = {}\nfor i in range(m):\n    (x, y) = list(map(int, input().split()))\n    if li.get(x) is None:\n        li[x] = y\n        ans += y\n    else:\n        li[x] += y\n        ans += li[x]\n    print(ans)", "(n, m) = map(int, input().split())\na = {}\nans = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if a.get(p) is None:\n        a[p] = t\n        ans += t\n    else:\n        a[p] += t\n        ans += a[p]\n    print(ans)", "(n, m) = map(int, input().split())\na = {}\nans = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if p not in a:\n        a[p] = t\n        ans += t\n    else:\n        a[p] += t\n        ans += a[p]\n    print(ans)", "(n, m) = map(int, input().split())\na = {}\nans = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if a.get(p) is None:\n        a[p] = t\n        ans += t\n    else:\n        a[p] += t\n        ans += a[p]\n    print(ans)", "(n, m) = map(int, input().split())\na = {}\nans = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if a.get(p) is None:\n        a[p] = t\n        ans += t\n    else:\n        a[p] += t\n        ans += a[p]\n    print(ans)", "(n, m) = map(int, input().split())\na = {}\nans = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if a.get(p) is None:\n        a[p] = t\n        ans += t\n    else:\n        a[p] += t\n        ans += a[p]\n    print(ans)", "(n, m) = map(int, input().split())\ncnt = {}\nans = 0\nfor i in range(m):\n    (a, b) = map(int, input().split())\n    if cnt.get(a) == None:\n        ans += b\n        cnt[a] = b\n    else:\n        cnt[a] += b\n        ans += cnt[a]\n    print(ans)", "from collections import defaultdict\n(n, m) = map(int, input().split())\nprev = 0\nd = defaultdict(lambda : 0)\nfor i in range(m):\n    (k, v) = map(int, input().split())\n    d[k] += v\n    prev += d[k]\n    print(prev)", "(n, m) = list(map(int, input().split()))\nans = 0\nli = {}\nfor i in range(m):\n    (x, y) = list(map(int, input().split()))\n    if li.get(x) is None:\n        li[x] = y\n        ans += y\n    else:\n        li[x] += y\n        ans += li[x]\n    print(ans)", "(n, m) = map(int, input().split())\na = {}\nans = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if a.get(p) is None:\n        a[p] = t\n        ans += t\n    else:\n        a[p] += t\n        ans += a[p]\n    print(ans)", "(n, m) = map(int, input().split())\na = {}\nans = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if a.get(p) is None:\n        a[p] = t\n        ans += t\n    else:\n        a[p] += t\n        ans += a[p]\n    print(ans)", "(n, m) = map(int, input().split())\nans = 0\ndic = {}\nfor i in range(1, n + 1):\n    dic[i] = []\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if len(dic[p]) == 0:\n        dic[p].append(t)\n        ans = ans + dic[p][-1]\n        print(ans)\n    else:\n        dic[p].append(dic[p][-1] + t)\n        ans = ans + dic[p][-1]\n        print(ans)", "(n, m) = map(int, input().split())\na = {}\nans = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if a.get(p) is None:\n        a[p] = t\n        ans += t\n    else:\n        a[p] += t\n        ans += a[p]\n    print(ans)", "q = str(input())\nq = q + ' '\nw = ''\ne = []\nfor i in q:\n    if i == ' ':\n        e.append(int(w))\n        w = ''\n    else:\n        w = w + i\nt = {}\na = 0\nfor i in range(e[1]):\n    r = str(input())\n    r = r + ' '\n    y = ''\n    for j in range(len(r)):\n        if r[j] == ' ':\n            if y not in t:\n                t[y] = 0\n            t[y] = t[y] + int(r[j + 1:len(r)])\n            break\n        else:\n            y = y + r[j]\n    a = a + t[y]\n    print(a)", "(n, m) = map(int, input().split(' '))\narr = [0 for i in range(n + 1)]\nans = 0\nfor j in range(m):\n    (p, t) = map(int, input().split(' '))\n    arr[p] += t\n    ans += arr[p]\n    print(ans)", "(n, m) = map(int, input().split())\nans = 0\ndic = {}\nfor i in range(1, n + 1):\n    dic[i] = []\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if len(dic[p]) == 0:\n        dic[p].append(t)\n        ans = ans + dic[p][-1]\n        print(ans)\n    else:\n        dic[p].append(dic[p][-1] + t)\n        ans = ans + dic[p][-1]\n        print(ans)", "(n, m) = map(int, input().split())\na = {}\nans = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if a.get(p) is None:\n        a[p] = t\n        ans += t\n    else:\n        a[p] += t\n        ans += a[p]\n    print(ans)", "(a, b) = map(int, input().split())\nx = {}\nans = 0\nfor i in range(b):\n    (p, t) = map(int, input().split())\n    try:\n        x[p] += t\n    except:\n        x[p] = t\n    ans += x[p]\n    print(ans)", "a = [int(ele) for ele in input().split()]\n(sum2, sum1) = (0, 0)\nq = [0 for i in range(a[0] + 1)]\nfor i in range(0, a[1], 1):\n    p = [int(ele) for ele in input().split()]\n    q[p[0]] = q[p[0]] + p[1]\n    sum1 = sum1 + q[p[0]]\n    print(sum1)", "def SumOfSubset(a, n):\n    k = n\n    Sum = 0\n    for i in range(n):\n        Sum = Sum + a[i] * k\n        k -= 1\n    return Sum\n(N, M) = map(int, input().split(' '))\nd = {}\nfinal_ans = 0\nfor i in range(M):\n    (p, t) = map(int, input().split())\n    y = 0\n    try:\n        d[p][0] += t\n        d[p][1] += d[p][0]\n        final_ans += d[p][0]\n    except:\n        d[p] = [t, t]\n        final_ans += t\n    print(final_ans)", "(n, m) = map(int, input().split())\nd = {}\nres = 0\nfor _ in range(m):\n    (p, t) = map(int, input().split())\n    if d.get(p) is None:\n        d[p] = t\n        res += t\n    else:\n        d[p] += t\n        res += d[p]\n    print(res)", "(M, N) = map(int, input().split())\nArmy = {}\nFinal = 0\nfor T in range(N):\n    (k, l) = map(int, input().split())\n    Final += l\n    if Army.get(k) == None:\n        Army[k] = l\n    else:\n        Final += Army[k]\n        Army[k] += l\n    print(Final)", "(m, n) = map(int, input().split())\n(vk, d) = ([], 0)\nfor i in range(m + 1):\n    vk.append([0])\nwhile n:\n    (a, b) = map(int, input().split())\n    vk[a].append(vk[a][-1] + b)\n    print(vk[a][-1] + d)\n    d += vk[a][-1]\n    n -= 1", "(m, n) = map(int, input().split())\na = []\nfor i in range(m + 1):\n    a.append([0])\ns = 0\nwhile n:\n    (i, j) = map(int, input().split())\n    a[i].append(a[i][-1] + j)\n    s += a[i][-1]\n    print(s)\n    n -= 1", "(n, m) = map(int, input().split())\ndp = [0] * (n + 1)\ncount = 0\nfor _ in range(m):\n    (P, T) = map(int, input().split())\n    count = count + dp[P] + T\n    print(count)\n    dp[P] += T", "(N, M) = map(int, input().split())\nansw = 0\nt = [0] * N\nfor i in range(M):\n    (a, b) = map(int, input().split())\n    t[a - 1] += b\n    answ += t[a - 1]\n    print(answ)", "(n, m) = map(int, input().split())\na = {}\nans = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if a.get(p) is None:\n        a[p] = t\n        ans += t\n    else:\n        a[p] += t\n        ans += a[p]\n    print(ans)", "from collections import defaultdict\n(n, m) = map(int, input().split())\nmx = 0\nans = 0\ncnt = defaultdict(int)\nfor _ in range(m):\n    (x, y) = map(int, input().split())\n    cnt[x] += y\n    if cnt[x] > mx:\n        ans += cnt[x]\n        mx = cnt[x]\n    else:\n        ans += cnt[x]\n    print(ans)", "from collections import defaultdict\n\ndef solve():\n    (n, m) = map(int, input().split())\n    mx = 0\n    ans = 0\n    cnt = defaultdict(int)\n    for _ in range(m):\n        (x, y) = map(int, input().split())\n        cnt[x] += y\n        if cnt[x] > mx:\n            ans += cnt[x]\n            mx = cnt[x]\n        else:\n            ans += cnt[x]\n        print(ans)\nsolve()", "(n, m) = map(int, input().split())\ndic = [0] * (n + 1)\nres = 0\nwhile m:\n    (P, T) = map(int, input().split())\n    dic[P] += T\n    res += dic[P]\n    print(res)\n    m -= 1", "(N, M) = map(int, input().split())\nA = [0 for i in range(N + 1)]\nx = 0\nfor i in range(M):\n    (P, T) = map(int, input().split())\n    A[P] += T\n    x += A[P]\n    print(x)", "(n, m) = input().split()\nn = int(n)\nm = int(m)\nd = {}\nfor i in range(1, n + 1):\n    d[i] = 0\ns = 0\nwhile m:\n    (p, t) = input().split()\n    p = int(p)\n    t = int(t)\n    d[p] += t\n    s += d[p]\n    print(s)\n    m -= 1", "(n, m) = map(int, input().split())\narr = [0 for i in range(n + 1)]\nans = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    arr[p] += t\n    ans += arr[p]\n    print(ans)", "(n, m) = map(int, input().split())\nrr = []\nhash_map = {}\nans = 0\nfor i in range(m):\n    (a, b) = map(int, input().split())\n    if a in hash_map:\n        ans += hash_map[a] + b\n        hash_map[a] = hash_map[a] + b\n    else:\n        ans += b\n        hash_map[a] = b\n    rr.append(ans)\nfor i in rr:\n    print(i)", "def solve(army, a, b):\n    army[a - 1] += b\n    return army[a - 1]\n(n, m) = map(int, input().split())\n(army, ans) = ([0 for _ in range(n)], 0)\nfor _ in range(m):\n    ans += solve(army, *map(int, input().split()))\n    print(ans)", "def solve(army, ans, a, b):\n    army[a - 1] += b\n    return army[a - 1]\n(n, m) = map(int, input().split())\n(army, ans) = ([0 for _ in range(n)], 0)\nfor _ in range(m):\n    ans += solve(army, ans, *map(int, input().split()))\n    print(ans)", "(n, m) = map(int, input().split())\nd = {}\ns = 0\nfor ki in range(m):\n    (a, b) = map(int, input().split())\n    if a not in d:\n        d[a] = 0\n    d[a] += b\n    s += d[a]\n    print(s)", "(n, m) = map(int, input().split())\nd = {}\ntot = 0\nfor i in range(m):\n    (pi, ti) = map(int, input().split())\n    if pi not in d:\n        tot += ti\n        d[pi] = ti\n        print(tot)\n    else:\n        d[pi] += ti\n        print(d[pi] + tot)\n        tot += d[pi]", "(n, m) = map(int, input().split())\nd = {}\nans = 0\nfor _ in range(m):\n    (p, t) = map(int, input().split())\n    if p not in d:\n        d[p] = t\n    else:\n        d[p] = d[p] + t\n    ans += d[p]\n    print(ans)", "(n, m) = map(int, input().split())\ns = 0\nd = {}\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if p not in d:\n        d[p] = t\n    else:\n        d[p] += t\n    s += d[p]\n    print(s)", "(n1, t1) = map(int, input().split())\nayush = [0] * (n1 + 1)\nsum = 0\nfor _ in range(t1):\n    (i, v) = map(int, input().split())\n    ayush[i] += v\n    sum += ayush[i]\n    print(sum)", "(n, m) = list(map(int, input().split()))\nC = [0 for _ in range(n + 1)]\nres = 0\nfor _ in range(m):\n    (p, t) = list(map(int, input().split()))\n    C[p] += t\n    res += C[p]\n    print(res)", "(n, m) = map(int, input().split())\nans = 0\nli = {}\nfor i in range(m):\n    (pi, ti) = map(int, input().split())\n    if pi in li.keys():\n        li[pi] = li[pi] + ti\n        ans = ans + li[pi]\n    else:\n        li[pi] = ti\n        ans = ans + li[pi]\n    print(ans)", "(n, m) = map(int, input().split())\nans = 0\nli = {}\nfor i in range(m):\n    (pi, ti) = map(int, input().split())\n    if pi in li.keys():\n        li[pi] = li[pi] + ti\n        ans = ans + li[pi]\n    else:\n        li[pi] = ti\n        ans = ans + li[pi]\n    print(ans)", "(n, m) = map(int, input().split())\nl = [0] * n\nsum = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if l[p - 1] == 0:\n        l[p - 1] += t\n        sum += t\n        print(sum)\n    else:\n        l[p - 1] += t\n        sum += l[p - 1]\n        print(sum)", "(a, b) = map(int, input().split())\nd = {}\nc = 0\nfor i in range(b):\n    (x, y) = map(int, input().split())\n    if x in d:\n        d[x] += y\n    else:\n        d[x] = y\n    c = c + d[x]\n    print(c)", "(a, b) = map(int, input().split())\ndic = {}\nres = 0\nfor _ in range(b):\n    (p, t) = map(int, input().split())\n    if p not in dic.keys():\n        dic[p] = 0\n    dic[p] += t\n    res += dic[p]\n    print(res)", "(n, m) = map(int, input().split())\n(p, t) = ([], [])\nfor _ in range(m):\n    (a, b) = map(int, input().split())\n    p.append(a)\n    t.append(b)\nd = {}\nfor i in range(m):\n    if p[i] in d:\n        d[p[i]] += t[i]\n    else:\n        d[p[i]] = t[i]\n    if i == 0:\n        t[i] = t[i]\n    else:\n        t[i] = t[i - 1] + d[p[i]]\nprint(*t, sep='\\n')", "from collections import defaultdict\n(n, m) = map(int, input().split(' '))\nres = 0\ntasks = defaultdict(lambda : 0)\nfor _ in range(m):\n    (p, t) = map(int, input().split(' '))\n    res += tasks[p] + t\n    print(res)\n    tasks[p] += t", "(n, T) = map(int, input().split())\nwaiting = [0] * n\nans = 0\nfor _ in range(T):\n    (p, t) = map(int, input().split())\n    ans = ans + t + waiting[p - 1]\n    print(ans)\n    waiting[p - 1] += t", "(n, m) = map(int, input().split())\nd = {}\nres = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if p not in d:\n        d[p] = t\n    else:\n        d[p] += t\n    res += d[p]\n    print(res)", "def main():\n    (n, m) = map(int, input().split())\n    task = {}\n    curr = 0\n    for i in range(m):\n        (u, v) = map(int, input().split())\n        if u not in task:\n            task[u] = v\n            curr += v\n        else:\n            task[u] += v\n            curr += task[u]\n        print(curr)\n    return\nmain()", "try:\n    obj = {}\n    (n, m) = map(int, input().split())\n    ans = 0\n    for i in range(m):\n        (a, b) = map(int, input().split())\n        if a in obj.keys():\n            obj[a] += b\n            ans += obj[a]\n            print(ans)\n        else:\n            obj[a] = b\n            ans += b\n            print(ans)\nexcept:\n    pass", "(n, m) = map(int, input().split())\nT = [0] * int(1000000.0 + 1)\nans = 0\nfor _ in range(m):\n    (x, y) = map(int, input().split())\n    T[x] += y\n    ans += T[x]\n    print(ans)", "(n1, t1) = map(int, input().split())\nayush = [0] * (n1 + 1)\nsum = 0\nfor _ in range(t1):\n    (i, v) = map(int, input().split())\n    ayush[i] += v\n    sum += ayush[i]\n    print(sum)", "(n, m) = map(int, input().split())\ns = 0\nd = {}\nfor i in range(m):\n    (k, l) = map(int, input().split())\n    if k not in d:\n        d[k] = l\n        s += l\n    else:\n        d[k] += l\n        s += d[k]\n    print(s)", "(N, M) = [int(i) for i in input().split()]\nlist1 = []\nfor i in range(N):\n    list1.append(0)\ntrain = 0\nfor j in range(M):\n    (a, b) = [int(x) for x in input().split()]\n    for j in range(20):\n        j = 9\n    list1[a - 1] = list1[a - 1] + b\n    for j in range(20):\n        j = 9\n    train = train + list1[a - 1]\n    for j in range(20):\n        j = 9\n    print(train)", "(m, t) = map(int, input().split())\ndi = {}\ns = 0\nfor i in range(0, t):\n    (a, b) = map(int, input().split())\n    if a not in di:\n        di[a] = b\n        s += b\n        print(s)\n    else:\n        di[a] += b\n        s += di[a]\n        print(s)", "(n, m) = input().split()\n(n, m) = (int(n), int(m))\nd = [0 for i in range(n + 1)]\ns = 0\nfor i in range(m):\n    (p, t) = input().split()\n    (p, t) = (int(p), int(t))\n    d[p] += t\n    s += d[p]\n    print(s)", "(n, m) = [int(x) for x in input().split(' ')]\nA = []\nfor i in range(m):\n    a = [int(x) for x in input().split(' ')]\n    A.append(a)\nd = dict()\nans = 0\nfor i in range(m):\n    v = A[i][0]\n    t = A[i][1]\n    if d.get(v, -1) == -1:\n        ans += t\n        d[v] = t\n        print(ans)\n    else:\n        d[v] = d.get(v) + t\n        ans += d.get(v)\n        print(ans)", "def Answer_here():\n    (n, m) = map(int, input().split())\n    halfy = 1000000 + 1\n    ttt = [0] * halfy\n    fully = ttt\n    soln = 0\n    for i in range(m):\n        (a, b) = map(int, input().split())\n        fully[a] = fully[a] + b\n        nnn = fully[a]\n        soln = soln + nnn\n        print(soln)\nAnswer_here()", "for _ in range(1):\n    (n, m) = map(int, input().split())\n    total = [0] * (int(1000000.0) + 1)\n    ans = 0\n    for i in range(m):\n        (a, b) = map(int, input().split())\n        total[a] += b\n        ans += total[a]\n        print(ans)", "(n, m) = map(int, input().split())\nmi = [0] * (n + 1)\ntim = 0\nfor i in range(m):\n    (a, b) = map(int, input().split())\n    tim += b + mi[a]\n    mi[a] += b\n    print(tim)", "(n, m) = map(int, input().split())\ntotal = [0] * int(1000000.0 + 1)\nans = 0\nfor _ in range(m):\n    (a, b) = map(int, input().split())\n    total[a] += b\n    ans += total[a]\n    print(ans)", "(n, m) = map(int, input().split())\nans = 0\nd = {}\nwhile m:\n    (a, b) = map(int, input().split())\n    if a not in d:\n        d[a] = b\n    else:\n        d[a] += b\n    ans += d[a]\n    print(ans)\n    m -= 1", "(a, b) = map(int, input().split())\nanswer = 0\na = {}\nfor i in range(b):\n    (p, q) = map(int, input().split())\n    t = 0\n    if a.get(p):\n        t = a[p]\n    answer += q + t\n    print(answer)\n    if a.get(p):\n        a[p] += q\n    else:\n        a[p] = q", "(n, m) = map(int, input().split())\nd = {}\nt = 0\nfor i in range(m):\n    (a, b) = map(int, input().split())\n    if a not in d:\n        d[a] = b\n    else:\n        d[a] = d.get(a) + b\n    t += d[a]\n    print(t)", "(a, b) = [int(x) for x in input().split()]\nx = {}\na = 0\nfor _ in range(b):\n    (n, m) = [int(x) for x in input().split()]\n    if n not in x:\n        x[n] = m\n        a += m\n    else:\n        x[n] = x[n] + m\n        a += x[n]\n    print(a)", "(n, m) = map(int, input().split())\nd = {}\ns = 0\nfor _ in range(m):\n    (p, t) = map(int, input().split())\n    try:\n        d[p] += t\n        s += d[p]\n    except:\n        d[p] = t\n        s += t\n    print(s)", "(s, n) = map(int, input().split())\nl = []\nc = 0\nr = []\nd = {}\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a not in d:\n        d[a] = b\n    else:\n        d[a] += b\n    r.append(d[a] + c)\n    c = d[a] + c\nfor i in r:\n    print(i)", "(n, m) = map(int, input().split())\nsol = 0\narr = {}\nfor _ in range(m):\n    (p, t) = map(int, input().split())\n    sol += arr.get(p, 0) + t\n    print(sol)\n    arr[p] = arr.get(p, 0) + t", "(n, m) = [int(x) for x in input().rstrip().split()]\nans = 0\nl = [0] * 99999999\nfor i in range(0, m):\n    (a, b) = [int(x) for x in input().rstrip().split()]\n    l[a] += b\n    ans += l[a]\n    print(ans)", "(m, n) = map(int, input().split())\nl = []\nfor _ in range(n):\n    a = list(map(int, input().split()))\n    l.append(a)\nw = {}\ns = 0\nfor i in l:\n    if i[0] not in w:\n        w[i[0]] = i[1]\n        s += i[1]\n        print(s)\n    else:\n        w[i[0]] += i[1]\n        s += w[i[0]]\n        print(s)", "(n, m) = map(int, input().split())\nd1 = {}\nnet1 = 0\nfor i in range(m):\n    (me, t) = map(int, input().split())\n    d1.setdefault(me, 0)\n    d1[me] += t\n    net1 += d1[me]\n    print(net1)", "(a, b) = map(int, input().split())\nd = {}\nfor i in range(1, a + 1):\n    d[i] = d.get(i, 0)\nc = 0\nfor i in range(b):\n    (p, t) = map(int, input().split())\n    d[p] += t\n    c += d[p]\n    print(c)", "def solve():\n    (n, m) = map(int, input().split())\n    total = [0] * (int(1000000.0) + 1)\n    ans = 0\n    for i in range(m):\n        (a, b) = map(int, input().split())\n        total[a] = total[a] + b\n        ans = ans + total[a]\n        print(ans)\nT = 1\nwhile T:\n    solve()\n    T = T - 1", "(n, m) = [int(x) for x in input().split()]\nl = [0] * (10 ** 6 + 1)\nans = 0\nfor i in range(m):\n    (a, b) = [int(x) for x in input().split()]\n    l[a] += b\n    ans += l[a]\n    print(ans)", "import collections\n(n, m) = map(int, input().split())\na = {}\nt1 = []\nsum = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    sum += t\n    if p not in a:\n        a[p] = t\n    else:\n        sum += a[p]\n        a[p] += t\n    t1.append(sum)\nprint(*t1, sep='\\n')", "(n, m) = (int(x) for x in input().split())\nd = {}\ns = 0\nfor _ in range(m):\n    (a, b) = (int(x) for x in input().split())\n    if a not in d:\n        d[a] = b\n    else:\n        d[a] += b\n    s += d[a]\n    print(s)", "vals = input().split()\nN = int(vals[0])\nM = int(vals[1])\nu_m = {}\nsum = 0\nfor i in range(M):\n    vals = input().split()\n    P = int(vals[0])\n    T = int(vals[1])\n    if P not in u_m:\n        u_m[P] = T\n    else:\n        u_m[P] += T\n    sum += u_m[P]\n    print(sum)", "from sys import stdin\ninput = stdin.readline\nfrom collections import defaultdict\nimport heapq\n\ndef solve(N, M, tasks):\n    participants = defaultdict(lambda : 0)\n    ans = 0\n    for task in tasks:\n        participants[task[0]] += task[1]\n        ans += participants[task[0]]\n        print(ans)\n    return 0\n(n, k) = map(int, input().split())\nt = []\nfor i in range(k):\n    a = tuple(map(int, input().split()))\n    t.append(a)\nsolve(n, k, t)", "(a, b) = map(int, input().split())\nd = {}\nt = 0\nfor _ in range(b):\n    (x, y) = map(int, input().split())\n    if x not in d:\n        d[x] = y\n        t += y\n        print(t)\n    else:\n        d[x] += y\n        t += d[x]\n        print(t)", "def solve():\n    (n, m) = map(int, input().split())\n    total = [0] * int(1000000.0 + 1)\n    ans = 0\n    for i in range(m):\n        (a, b) = map(int, input().split())\n        total[a] += b\n        ans += total[a]\n        print(ans)\nsolve()", "(n, m) = [int(x) for x in input().split()]\nlst = []\nfor i in range(n):\n    lst.append(0)\ns = 0\nfor i in range(m):\n    (a, b) = [int(x) for x in input().split()]\n    lst[a - 1] = lst[a - 1] + b\n    s += lst[a - 1]\n    print(s)", "(n, m) = map(int, input().split())\nr = {}\nres = 0\nfor i in range(m):\n    (p, t) = map(int, input().split())\n    if p not in r:\n        r[p] = t\n    else:\n        r[p] += t\n    res += r[p]\n    print(res)", "(a, b) = map(int, input().split())\ndic = {}\nz = 0\nfor i in range(b):\n    (y, x) = map(int, input().split())\n    if y not in dic:\n        dic[y] = x\n        z += x\n        print(z)\n    else:\n        dic[y] += x\n        z += dic[y]\n        print(z)", "(n, m) = map(int, input().split())\nans = 0\nmp = {}\nfor _ in range(m):\n    (p, t) = map(int, input().split())\n    ans += mp.get(p, 0) + t\n    print(ans)\n    mp[p] = mp.get(p, 0) + t", "(n, m) = map(int, input().split())\narray = [0] * 1000001\ns = 0\nfor i in range(m):\n    (a, b) = map(int, input().split())\n    array[a - 1] += b\n    s += array[a - 1]\n    print(s)", "(h, j) = map(int, input().split())\ndic = {}\nu = 0\nfor i in range(j):\n    (t, r) = map(int, input().split())\n    if t not in dic:\n        dic[t] = r\n        u += r\n        print(u)\n    else:\n        dic[t] += r\n        u += dic[t]\n        print(u)", "(n, m) = map(int, input().strip().split())\nsumm = [0] * (int(1000000.0) + 1)\nres = 0\nfor i in range(m - m + m - 23 + 23):\n    (a, b) = map(int, input().strip().split())\n    summ[a] += b\n    res += summ[a]\n    print(res)", "(x, y) = map(int, input().split())\ntime = 0\nl = {}\nfor i in range(y):\n    (n, t) = map(int, input().split())\n    if n not in l.keys():\n        time += t\n        l[n] = t\n    else:\n        l[n] += t\n        time += l[n]\n    print(time)", "(n, m) = map(int, input().split())\ng = {i: 0 for i in range(1, n + 1)}\ncount = 0\nfor _ in range(m):\n    (x, y) = map(int, input().split())\n    g[x] += y\n    count += g[x]\n    print(count)", "(n, m) = map(int, input().split())\ns = 0\ndic = {}\nfor i in range(m):\n    (a, b) = map(int, input().split())\n    if a not in dic:\n        dic[a] = b\n        s += b\n    else:\n        dic[a] += b\n        s += dic[a]\n    print(s)"]