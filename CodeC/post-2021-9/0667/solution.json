["import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    (x, a, b) = [[*map(int, input().split())] for i in range(3)]\n    d = defaultdict(int)\n    gap = r - l\n    for i in range(n):\n        (d1, d2) = divmod(a[i], b[i])\n        if d2:\n            d[x[i] - d1 - 1 - gap] += d2\n            d[x[i] + d1 + 1] += d2\n        d[x[i] - d1 - gap] += b[i] - d2\n        d[x[i] - gap] -= b[i]\n        d[x[i]] -= b[i]\n        d[x[i] + d1] -= d2 - b[i]\n    (ans, now, rate, t) = (0, 0, 0, sorted(d.keys()))\n    for i in range(len(t) - 1):\n        (d0, d1, d2) = (t[i + 1], t[i], d[t[i]])\n        rate += d2\n        m = now + rate if d1 - r & 1 else 0\n        now += (d0 - d1) * rate\n        m = max(m, now - rate) if d0 - r & 1 else max(m, now)\n        ans = max(ans, m)\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    (x, a, b) = [[*map(int, input().split())] for i in range(3)]\n    d = defaultdict(int)\n    gap = r - l\n    for i in range(n):\n        (d1, d2) = divmod(a[i], b[i])\n        if d2:\n            d[x[i] - d1 - 1 - gap] += d2\n            d[x[i] + d1 + 1] += d2\n        d[x[i] - d1 - gap] += b[i] - d2\n        d[x[i] - gap] -= b[i]\n        d[x[i]] -= b[i]\n        d[x[i] + d1] -= d2 - b[i]\n    (ans, now, rate, t) = (0, 0, 0, sorted(d.keys()))\n    for i in range(len(t) - 1):\n        (d0, d1, d2) = (t[i + 1], t[i], d[t[i]])\n        rate += d2\n        m = now + rate if d1 - r & 1 else 0\n        now += (d0 - d1) * rate\n        m = max(m, now - rate) if d0 - r & 1 else max(m, now)\n        ans = max(ans, m)\n    print(ans)"]