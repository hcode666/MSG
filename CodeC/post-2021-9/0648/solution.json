["from bisect import bisect_right\n\ndef lis(a):\n    n = len(a)\n    INF = float('inf')\n    d = [INF] * (n + 1)\n    d[0] = -INF\n    for i in range(n):\n        j = bisect_right(d, a[i])\n        if d[j - 1] <= a[i] < d[j]:\n            d[j] = a[i]\n    ans = 0\n    for i in range(n + 1):\n        if d[i] < INF:\n            ans = i\n    return ans\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    c = a[:k]\n    for i in range(k, n):\n        for j in reversed(range(len(c))):\n            b = c[:j] + [a[i]] + c[j:]\n            if lis(b) == k:\n                c = b\n                break\n    print(-1) if lis(c) != k or sorted(c) != a else print(*c)"]