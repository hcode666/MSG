["def switch(d):\n    if d == 'a':\n        return 'b'\n    elif d == 'b':\n        return 'a'\nt = int(input())\nfor _ in range(t):\n    (n, p, q) = map(int, input().split())\n    s = str(input())\n    d = 'a'\n    dist = {'a': 0, 'b': 0}\n    for i in range(n):\n        if s[i] == '0':\n            d = switch(d)\n            dist[d] += 1\n        elif s[i] == '1':\n            dist[d] += 1\n    a = dist['a']\n    b = dist['b']\n    if abs(p) <= a and (a - abs(p)) % 2 == 0 and (abs(q) <= b) and ((b - abs(q)) % 2 == 0) or (abs(p) <= b and (b - abs(p)) % 2 == 0 and (abs(q) <= a) and ((a - abs(q)) % 2 == 0)):\n        print('YES')\n    else:\n        print('NO')", "def switch(d):\n    if d == 'a':\n        return 'b'\n    elif d == 'b':\n        return 'a'\nt = int(input())\nfor _ in range(t):\n    (n, p, q) = map(int, input().split())\n    s = str(input())\n    d = 'a'\n    dist = {'a': 0, 'b': 0}\n    for i in range(n):\n        if s[i] == '0':\n            d = switch(d)\n            dist[d] += 1\n        elif s[i] == '1':\n            dist[d] += 1\n    a = dist['a']\n    b = dist['b']\n    if abs(p) <= a and (a - abs(p)) % 2 == 0 and (abs(q) <= b) and ((b - abs(q)) % 2 == 0) or (abs(p) <= b and (b - abs(p)) % 2 == 0 and (abs(q) <= a) and ((a - abs(q)) % 2 == 0)):\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    (p, q) = (abs(p), abs(q))\n    s = input().strip()\n    x = [0, 0]\n    for i in s:\n        if i == '0':\n            x = x[::-1]\n        x[1] += 1\n    if x[0] >= p and x[1] >= q and ((x[0] - p) % 2 == 0) and ((x[1] - q) % 2 == 0) or (x[1] >= p and x[0] >= q and ((x[1] - p) % 2 == 0) and ((x[0] - q) % 2 == 0)):\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    (p, q) = (abs(p), abs(q))\n    s = input().strip()\n    x = [0, 0]\n    for i in s:\n        if i == '0':\n            x = x[::-1]\n        x[1] += 1\n    if x[0] >= p and x[1] >= q and ((x[0] - p) % 2 == 0) and ((x[1] - q) % 2 == 0) or (x[1] >= p and x[0] >= q and ((x[1] - p) % 2 == 0) and ((x[0] - q) % 2 == 0)):\n        print('YES')\n    else:\n        print('NO')", "def solve(n, p, q, s, a):\n    l = [0, 0]\n    for i in range(n):\n        if s[i] == '0':\n            a = a ^ 1\n            l[a] += 1\n        else:\n            l[a] += 1\n    p = abs(p)\n    q = abs(q)\n    if p <= l[0] and q <= l[1]:\n        r1 = l[0] - p\n        r2 = l[1] - q\n        if r1 % 2 == 0 and r2 % 2 == 0:\n            return True\n        else:\n            return False\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    a1 = solve(n, p, q, s, 0)\n    a2 = solve(n, p, q, s, 1)\n    print('YES' if a1 or a2 else 'NO')", "def solve(n, p, q, s, a):\n    l = [0, 0]\n    for i in range(n):\n        if s[i] == '0':\n            a = a ^ 1\n            l[a] += 1\n        else:\n            l[a] += 1\n    p = abs(p)\n    q = abs(q)\n    if p <= l[0] and q <= l[1]:\n        r1 = l[0] - p\n        r2 = l[1] - q\n        if r1 % 2 == 0 and r2 % 2 == 0:\n            return True\n        else:\n            return False\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    a1 = solve(n, p, q, s, 0)\n    a2 = solve(n, p, q, s, 1)\n    print('YES' if a1 or a2 else 'NO')", "def solve(n, p, q, s, axes):\n    arr = [0, 0]\n    for i in range(n):\n        if s[i] == '0':\n            axes = axes ^ 1\n            arr[axes] += 1\n        else:\n            arr[axes] += 1\n    p = abs(p)\n    q = abs(q)\n    if p <= arr[0] and q <= arr[1]:\n        rem_x = arr[0] - p\n        rem_y = arr[1] - q\n        if rem_x % 2 == 0 and rem_y % 2 == 0:\n            return True\n        else:\n            return False\n    else:\n        return False\nfor _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    a1 = solve(n, p, q, s, 0)\n    a2 = solve(n, p, q, s, 1)\n    if a1 or a2:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\n\ndef ans(s, z1):\n    arr = []\n    c = 0\n    for i in s:\n        if i == '0':\n            if c:\n                arr.append(c)\n            c = 1\n        else:\n            c += 1\n    if c:\n        arr.append(c)\n    (x, y, z) = (0, 0, 1)\n    for i in arr:\n        if z:\n            x += i\n            z = 0\n        else:\n            y += i\n            z = 1\n    (p, q) = (z1[1], z1[2])\n    if p >= -x and p <= x and ((p - x) % 2 == 0) and (q >= -y) and (q <= y) and ((q - y) % 2 == 0):\n        print('YES')\n        return\n    if p >= -y and p <= y and ((p - y) % 2 == 0) and (q >= -x) and (q <= x) and ((q - x) % 2 == 0):\n        print('YES')\n        return\n    print('NO')\n    return\nfor i in range(0, n):\n    z = [int(i) for i in input().split()]\n    s = input()\n    ans(s, z)", "t = int(input())\nfor _ in range(t):\n    (n, p, q) = map(int, input().split())\n    p = abs(p)\n    q = abs(q)\n    s = input()\n    arr = [0] * 2\n    curr = 0\n    for x in s:\n        if x == '0':\n            curr = 1 - curr\n        arr[curr] += 1\n    flag = 0\n    if arr[0] >= p and arr[1] >= q:\n        if abs(p - arr[0]) % 2 == 0 and abs(q - arr[1]) % 2 == 0:\n            flag = 1\n    if arr[0] >= q and arr[1] >= p:\n        if abs(p - arr[1]) % 2 == 0 and abs(q - arr[0]) % 2 == 0:\n            flag = 1\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "def Convert(string):\n    list1 = []\n    list1[:0] = string\n    return list1\nfor _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    a = input()\n    a1 = Convert(a)\n    op1 = op2 = cnt = 0\n    lst = []\n    for i in a1:\n        if i != '0':\n            cnt += 1\n        else:\n            lst.append(cnt)\n            cnt = 1\n    lst.append(cnt)\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            op1 += lst[i]\n        else:\n            op2 += lst[i]\n    lst1 = list(range(-op1, op1 + 1, 2))\n    lst2 = list(range(-op2, op2 + 1, 2))\n    if p in lst1 and q in lst2:\n        print('YES')\n    elif q in lst1 and p in lst2:\n        print('YES')\n    else:\n        print('NO')", "def getDestCoord(start, dest, axis, inst):\n    if i == '0':\n        axis[0] ^= 1\n    start[axis[0]] += 1 if start[axis[0]] < dest[axis[0]] else -1\nfor _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    inst = input()\n    dest = [p, q]\n    (start_x, start_y) = ([0, 0], [0, 0])\n    (axis_x, axis_y) = ([0], [1])\n    for i in inst:\n        getDestCoord(start_x, dest, axis_x, i)\n        getDestCoord(start_y, dest, axis_y, i)\n    print('YES') if start_x == dest or start_y == dest else print('NO')", "def getDestCoord(start, dest, axis, inst):\n    if i == '0':\n        axis[0] = axis[0] ^ 1\n    start[axis[0]] += 1 if start[axis[0]] < dest[axis[0]] else -1\nfor _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    inst = input()\n    dest = [p, q]\n    (start_x, start_y) = ([0, 0], [0, 0])\n    (axis_x, axis_y) = ([0], [1])\n    for i in inst:\n        getDestCoord(start_x, dest, axis_x, i)\n        getDestCoord(start_y, dest, axis_y, i)\n    if start_x == dest or start_y == dest:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, p, q) = map(int, input().split(' '))\n    s = input()\n    (p, q) = (abs(p), abs(q))\n    (a, b) = (0, 0)\n    d = {0: 0, 1: 0}\n    curr = 0\n    for i in range(n):\n        if s[i] == '1':\n            d[curr] += 1\n        else:\n            curr = abs(curr - 1)\n            d[curr] += 1\n    (a, b) = (d[0], d[1])\n    (t1, q1) = (a - p, b - q)\n    c1 = (t1 >= 0 and t1 % 2 == 0) and (q1 >= 0 and q1 % 2 == 0)\n    (t2, q2) = (a - q, b - p)\n    c2 = (t2 >= 0 and t2 % 2 == 0) and (q2 >= 0 and q2 % 2 == 0)\n    if c1 or c2:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\n\ndef check(f, s):\n    x = 0\n    y = 0\n    for v in s:\n        if v == '0':\n            f = not f\n        if f:\n            if x > p:\n                x -= 1\n            else:\n                x += 1\n        elif y > q:\n            y -= 1\n        else:\n            y += 1\n    return x == p and y == q\nt = int(input())\nfor _ in range(t):\n    (n, p, q) = [int(x) for x in input().split()]\n    s = input().rstrip()\n    if check(False, s) or check(True, s):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    p = abs(p)\n    q = abs(q)\n    (x, y) = (0, 0)\n    r = 'X'\n    for j in range(n):\n        if s[j] == '0':\n            if r == 'X':\n                r = 'Y'\n                y += 1\n            else:\n                r = 'X'\n                x += 1\n        elif r == 'X':\n            x += 1\n        else:\n            y += 1\n    flag = 0\n    if x >= p and y >= q:\n        if abs(p - x) % 2 == 0 and abs(q - y) % 2 == 0:\n            flag = 1\n    if x >= q and y >= p:\n        if abs(p - y) % 2 == 0 and abs(q - x) % 2 == 0:\n            flag = 1\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    (x1, x2, y1, y2) = (0, 0, 0, 0)\n    (p, q) = (abs(p), abs(q))\n    (x, y) = (True, True)\n    (x1, x2, y1, y2) = (0, 0, 0, 0)\n    for i in s:\n        if i == '0':\n            x = not x\n            y = not y\n        if x:\n            x1 += 1\n        else:\n            y1 += 1\n        if y:\n            y2 += 1\n        else:\n            x2 += 1\n    if x1 >= p and y1 >= q and ((x1 - p) % 2 == 0) and ((y1 - q) % 2 == 0) or (x2 >= p and y2 >= q and ((x2 - p) % 2 == 0) and ((y2 - q) % 2 == 0)):\n        print('YES')\n    else:\n        print('NO')", "nums = int(input())\nfor i in range(nums):\n    arr = [int(i) for i in input().split()]\n    x = abs(arr[1])\n    y = abs(arr[2])\n    track = input()\n    tracklst = [i for i in str(track)]\n    curr = 0\n    currx = 0\n    curry = 0\n    for i in tracklst:\n        i = int(i)\n        if i == 1:\n            if curr == 0:\n                currx += 1\n            else:\n                curry += 1\n        elif curr == 0:\n            curry += 1\n            curr = 1\n        else:\n            currx += 1\n            curr = 0\n    if currx >= x and (currx - x) % 2 == 0 and (curry >= y) and ((curry - y) % 2 == 0):\n        print('YES')\n    elif curry >= x and (curry - x) % 2 == 0 and (currx >= y) and ((currx - y) % 2 == 0):\n        print('YES')\n    else:\n        print('NO')", "nums = int(input())\nfor i in range(nums):\n    arr = [int(i) for i in input().split()]\n    x = abs(arr[1])\n    y = abs(arr[2])\n    track = input()\n    tracklst = [i for i in str(track)]\n    curr = 0\n    currx = 0\n    curry = 0\n    for i in tracklst:\n        i = int(i)\n        if i == 1:\n            if curr == 0:\n                currx += 1\n            else:\n                curry += 1\n        else:\n            if curr == 0:\n                curr = 1\n            else:\n                curr = 0\n            if curr == 0:\n                currx += 1\n            else:\n                curry += 1\n    if currx >= x and (currx - x) % 2 == 0 and (curry >= y) and ((curry - y) % 2 == 0):\n        print('YES')\n    elif curry >= x and (curry - x) % 2 == 0 and (currx >= y) and ((currx - y) % 2 == 0):\n        print('YES')\n    else:\n        print('NO')", "def test(p, q):\n    (a, b) = (p, q)\n    (x, y) = (0, 0)\n    for j in s:\n        if j == '0':\n            (x, y) = (y, x)\n            (a, b) = (b, a)\n            if x < a:\n                x += 1\n            else:\n                x -= 1\n        elif x < a:\n            x += 1\n        else:\n            x -= 1\n    return (x, y) == (p, q) or (y, x) == (p, q)\nfor i in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    s = str(input())\n    if test(p, q) or test(q, p):\n        print('YES')\n    else:\n        print('NO')", "def calculate(p, q, flag_a, flag_b):\n    if flag_a >= abs(p) and abs(flag_a - p) % 2 == 0:\n        if flag_b >= abs(q) and abs(flag_b - q) % 2 == 0:\n            return True\n    return False\n\ndef _func(n, p, q, a):\n    flag_a = 0\n    flag_b = 0\n    change = False\n    for _a in a:\n        if _a == '0':\n            change = not change\n        if change != True:\n            flag_a += 1\n        else:\n            flag_b += 1\n    if calculate(p, q, flag_a, flag_b):\n        return 'YES'\n    elif calculate(p, q, flag_b, flag_a):\n        return 'YES'\n    else:\n        return 'NO'\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, p, q) = map(int, input().split())\n        a = input()\n        print(_func(n, p, q, a))\nmain()", "for _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    b = 0\n    x = 0\n    y = 0\n    for i in s:\n        if i == '1' and b == 0:\n            x += 1\n        elif i == '1' and b == 1:\n            y += 1\n        elif i == '0' and b == 0:\n            y += 1\n            b = 1\n        elif i == '0' and b == 1:\n            x += 1\n            b = 0\n    if x >= abs(p) and (x - abs(p)) % 2 == 0 and (y >= abs(q)) and ((y - abs(q)) % 2 == 0) or (y >= abs(p) and (y - abs(p)) % 2 == 0 and (x >= abs(q)) and ((x - abs(q)) % 2 == 0)):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    c = max(abs(p), abs(q))\n    d = min(abs(p), abs(q))\n    b = 0\n    x = 0\n    y = 0\n    for i in s:\n        if i == '1' and b == 0:\n            x += 1\n        elif i == '1' and b == 1:\n            y += 1\n        elif i == '0' and b == 0:\n            y += 1\n            b = 1\n        elif i == '0' and b == 1:\n            x += 1\n            b = 0\n    e = max(x, y)\n    f = min(x, y)\n    if d > f or c > e:\n        print('NO')\n    elif d == f and c == e:\n        print('YES')\n    elif d == f and c < e:\n        if (e - c) % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif d < f and c == e:\n        if (f - d) % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif d < f and c < e and (c > f):\n        if (f - d) % 2 == 0 and (e - c) % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif d < f and c < e and (c < f):\n        if (f - d) % 2 == 0 and (e - c) % 2 == 0 or ((e - d) % 2 == 0 and (f - c) % 2 == 0):\n            print('YES')\n        else:\n            print('NO')\n    elif c == f:\n        if (e - d) % 2 == 0:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, p, q) = map(int, input().split())\n    p = abs(p)\n    q = abs(q)\n    s = input()\n    arr = [0] * 2\n    curr = 0\n    for x in s:\n        if x == '0':\n            curr = 1 - curr\n        arr[curr] += 1\n    flag = 0\n    if arr[0] >= p and arr[1] >= q:\n        if abs(p - arr[0]) % 2 == 0 and abs(q - arr[1]) % 2 == 0:\n            flag = 1\n    if arr[0] >= q and arr[1] >= p:\n        if abs(p - arr[1]) % 2 == 0 and abs(q - arr[0]) % 2 == 0:\n            flag = 1\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, p, q) = map(int, input().split())\n    p = abs(p)\n    q = abs(q)\n    s = input()\n    arr = [0] * 2\n    curr = 0\n    for x in s:\n        if x == '0':\n            curr = 1 - curr\n        arr[curr] += 1\n    flag = 0\n    if arr[0] >= p and arr[1] >= q:\n        if abs(p - arr[0]) % 2 == 0 and abs(q - arr[1]) % 2 == 0:\n            flag = 1\n    if arr[0] >= q and arr[1] >= p:\n        if abs(p - arr[1]) % 2 == 0 and abs(q - arr[0]) % 2 == 0:\n            flag = 1\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    x = 0\n    cx = 0\n    cy = 0\n    for j in s:\n        if j == '1':\n            if x % 2 == 0:\n                cx += 1\n            else:\n                cy += 1\n        elif x % 2 == 0:\n            x += 1\n            cy += 1\n        else:\n            x += 1\n            cx += 1\n    if (abs(p) <= cx and (cx - abs(p)) % 2 == 0) and (abs(q) <= cy and (cy - abs(q)) % 2 == 0):\n        print('YES')\n    else:\n        y = 0\n        cx = 0\n        cy = 0\n        for j in s:\n            if j == '1':\n                if y % 2 == 0:\n                    cy += 1\n                else:\n                    cx += 1\n            elif y % 2 == 0:\n                y += 1\n                cx += 1\n            else:\n                y += 1\n                cy += 1\n        if (abs(p) <= cx and (cx - abs(p)) % 2 == 0) and (abs(q) <= cy and (cy - abs(q)) % 2 == 0):\n            print('YES')\n        else:\n            print('NO')", "from typing import DefaultDict\nfrom math import sqrt\nimport math\n\ndef calculate(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\n\ndef prime(n):\n    prime_flag = 0\n    if n > 1:\n        for i in range(2, int(sqrt(n)) + 1):\n            if n % i == 0:\n                prime_flag = 1\n                break\n        if prime_flag == 0:\n            return True\n        else:\n            return False\n    else:\n        return True\n\ndef smallestDivisor(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\nfor _ in range(int(input())):\n    bool = True\n    flag = True\n    ans = 1\n    (n, p, q) = map(int, input().split())\n    s = input()\n    x = 0\n    y = 0\n    for ele in s:\n        if ele == '1':\n            if bool:\n                x += 1\n            else:\n                y += 1\n        else:\n            bool = not bool\n            if flag:\n                y += 1\n            else:\n                x += 1\n            flag = not flag\n    if abs(p) <= x and abs(p) % 2 == x % 2 and (abs(q) <= y) and (abs(q) % 2 == y % 2):\n        print('YES')\n    elif abs(p) <= y and abs(p) % 2 == y % 2 and (abs(q) <= x) and (abs(q) % 2 == x % 2):\n        print('YES')\n    else:\n        print('NO')", "tc = int(input())\n\ndef walk(commands, axis):\n    (x, y) = (0, 0)\n    current = axis\n    for i in bin:\n        if i == 1 and current == 'x':\n            x += 1\n        elif i == 1 and current == 'y':\n            y += 1\n        elif i == 0 and current == 'x':\n            y += 1\n            current = 'y'\n        elif i == 0 and current == 'y':\n            x += 1\n            current = 'x'\n    return (x, y)\n\ndef check(x, y, p, q):\n    flag = False\n    if x >= p and y >= q:\n        (xsteps, ysteps) = (p - x, q - y)\n        if xsteps % 2 == 0 and ysteps % 2 == 0:\n            flag = True\n        else:\n            flag = False\n    else:\n        flag = False\n    return flag\nwhile tc > 0:\n    tc -= 1\n    (n, p, q) = map(int, input().split())\n    binary = input()\n    bin = []\n    for i in range(n):\n        bin.append(int(binary[i]))\n    (x, y) = walk(bin, 'x')\n    flag = check(x, y, abs(p), abs(q))\n    flag2 = check(y, x, abs(p), abs(q))\n    if flag or flag2:\n        print('YES')\n    else:\n        print('NO')", "def helper(s):\n    x = 0\n    y = 0\n    for c in s:\n        if c == '1':\n            x += 1\n        else:\n            (x, y) = (y, x)\n            x += 1\n    return (x, y)\nfor _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    (p, q) = (abs(p), abs(q))\n    (a, b) = helper(s)\n    if a >= p and b >= q and (abs(a - p) % 2 == 0 and abs(b - q) % 2 == 0):\n        print('YES')\n    elif b >= p and a >= q and (abs(b - p) % 2 == 0 and abs(a - q) % 2 == 0):\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport pprint\nimport logging\nfrom logging import getLogger\nimport array\nimport collections\nimport io\nimport os\nimport heapq\nimport bisect\ninf = float('inf')\n\ndef solve():\n    for _ in range(*linp()):\n        (n, p, q) = map(lambda x: abs(int(x)), input().split())\n        s = input()\n        ok = False\n        for curr in range(2):\n            x = y = 0\n            for i in s:\n                if i == '1':\n                    if curr == 0:\n                        x += 1\n                    else:\n                        y += 1\n                else:\n                    curr ^= 1\n                    if curr == 0:\n                        x += 1\n                    else:\n                        y += 1\n            if x >= p and y >= q and ((x - p) % 2 == 0) and ((y - q) % 2 == 0):\n                ok = True\n        print('YES' if ok else 'NO')\n\ndef linp():\n    return [int(i) for i in input().split()]\nlogging.basicConfig(format='%(message)s', level=logging.WARNING)\nlogger = getLogger(__name__)\nlogger.setLevel(logging.INFO)\n\ndef debug(msg, *args):\n    logger.info(f'{msg}={pprint.pformat(args)}')\nsolve()", "for i in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    p = abs(p)\n    q = abs(q)\n    x = 0\n    y = 0\n    count = 0\n    for i in range(n):\n        if s[i] == '1' and count == 0:\n            x += 1\n        elif s[i] == '1' and count == 1:\n            y += 1\n        elif s[i] == '0' and count == 0:\n            y += 1\n            count = 1\n        elif s[i] == '0' and count == 1:\n            x += 1\n            count = 0\n    count0 = 0\n    if abs(p) % 2 == 0 and abs(q) % 2 == 0 and (x % 2 == 0) and (y % 2 == 0):\n        if x >= p and y >= q:\n            count0 += 1\n    if abs(p) % 2 != 0 and abs(q) % 2 == 0 and (x % 2 != 0) and (y % 2 == 0):\n        if x >= p and y >= q:\n            count0 += 1\n    if abs(q) % 2 != 0 and abs(p) % 2 == 0 and (x % 2 == 0) and (y % 2 != 0):\n        if x >= p and y >= q:\n            count0 += 1\n    if abs(q) % 2 != 0 and abs(p) % 2 != 0 and (x % 2 != 0) and (y % 2 != 0):\n        if x >= p and y >= q:\n            count0 += 1\n    if abs(q) % 2 == 0 and abs(p) % 2 == 0 and (x % 2 == 0) and (y % 2 == 0):\n        if x >= q and y >= p:\n            count0 += 1\n    if abs(q) % 2 != 0 and abs(p) % 2 == 0 and (x % 2 != 0) and (y % 2 == 0):\n        if x >= q and y >= p:\n            count0 += 1\n    if abs(p) % 2 != 0 and abs(q) % 2 == 0 and (x % 2 == 0) and (y % 2 != 0):\n        if x >= q and y >= p:\n            count0 += 1\n    if abs(p) % 2 != 0 and abs(q) % 2 != 0 and (x % 2 != 0) and (y % 2 != 0):\n        if x >= q and y >= p:\n            count0 += 1\n    if count0 > 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, k, z) = map(int, input().split())\n    k = abs(k)\n    z = abs(z)\n    s = input()\n    ls = list(s)\n    l = 'NO'\n    for dir in range(0, 2):\n        p = k\n        q = z\n        for i in ls:\n            if int(i) == 0:\n                if dir == 1:\n                    if q > 0:\n                        q = q - 1\n                    else:\n                        q = q + 1\n                    dir = 0\n                else:\n                    dir = 1\n                    if p > 0:\n                        p = p - 1\n                    else:\n                        p = p + 1\n            elif dir == 1:\n                if p > 0:\n                    p = p - 1\n                else:\n                    p = p + 1\n            elif q > 0:\n                q = q - 1\n            else:\n                q = q + 1\n        if p == 0 and q == 0:\n            l = 'YES'\n            break\n        else:\n            l = 'NO'\n    print(l)", "n = int(input())\ni = 0\nwhile i < n:\n    i = i + 1\n    (x, u, v) = map(int, input().split())\n    a = input()\n    t = a + '-'\n    g = []\n    s = 0\n    p = 0\n    while p <= len(a):\n        if t[p] == '1':\n            s = s + 1\n        if t[p] == '0':\n            g.append(s)\n            s = 1\n        if t[p] == '-':\n            g.append(s)\n        p = p + 1\n    s1 = 0\n    s2 = 0\n    e = 0\n    while e < len(g):\n        if e % 2 == 0:\n            s1 = s1 + g[e]\n        else:\n            s2 = s2 + g[e]\n        e = e + 1\n    r = []\n    t1 = -s1\n    t2 = -s2\n    while s1 >= t1:\n        r.append(s1)\n        s1 = s1 - 2\n    k = []\n    while s2 >= t2:\n        k.append(s2)\n        s2 = s2 - 2\n    if u in k and v in r:\n        print('YES')\n    elif v in k and u in r:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    l = input()\n    a = 0\n    f = 0\n    b = 0\n    for i in range(n):\n        if f == 0:\n            if l[i] == '0':\n                b += 1\n                f = 1\n            else:\n                a += 1\n        elif l[i] == '0':\n            a += 1\n            f = 0\n        else:\n            b += 1\n    x = abs(x)\n    y = abs(y)\n    if a >= x and b >= y and (a % 2 == x % 2) and (b % 2 == y % 2):\n        print('YES')\n    elif a >= y and b >= x and (a % 2 == y % 2) and (b % 2 == x % 2):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    l = input()\n    a = 0\n    f = 0\n    b = 0\n    for i in range(n):\n        if f == 0:\n            if l[i] == '0':\n                b += 1\n                f = 1\n            else:\n                a += 1\n        elif l[i] == '0':\n            a += 1\n            f = 0\n        else:\n            b += 1\n    x = abs(x)\n    y = abs(y)\n    if a >= x and b >= y and (a % 2 == x % 2) and (b % 2 == y % 2):\n        print('YES')\n    elif a >= y and b >= x and (a % 2 == y % 2) and (b % 2 == x % 2):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    bi = list(input())\n    curr = 0\n    arr = [0] * 2\n    for x in bi:\n        if x == '0':\n            curr = 1 - curr\n        arr[curr] += 1\n    p = abs(p)\n    q = abs(q)\n    if arr[0] >= p and arr[1] >= q and ((arr[0] - p) % 2 == 0) and ((arr[1] - q) % 2 == 0):\n        print('YES')\n    elif arr[0] >= q and arr[1] >= p and ((arr[1] - p) % 2 == 0) and ((arr[0] - q) % 2 == 0):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, p, q) = list(map(int, input().split()))\n    s = input()\n    possible = False\n    for j in range(2):\n        axis = j\n        x = y = 0\n        for i in s:\n            if i == '0':\n                axis ^= 1\n            if axis == 0:\n                if x < p:\n                    x = x + 1\n                else:\n                    x = x - 1\n            elif y < q:\n                y = y + 1\n            else:\n                y = y - 1\n        if (x, y) == (p, q):\n            possible = True\n    if possible == True:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, p, q) = list(map(int, input().split()))\n    s = input()\n    possible = False\n    axes = ['x', 'y']\n    for j in range(len(axes)):\n        axis = axes[j]\n        x = y = 0\n        for i in s:\n            if i == '0':\n                if axis == 'x':\n                    axis = 'y'\n                else:\n                    axis = 'x'\n            if axis == 'x':\n                if x < p:\n                    x = x + 1\n                else:\n                    x = x - 1\n            elif y < q:\n                y = y + 1\n            else:\n                y = y - 1\n        if (x, y) == (p, q):\n            possible = True\n    if possible == True:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, p, q) = list(map(int, input().split()))\n    s = input()\n    possible = False\n    axes = ['x', 'y']\n    for j in range(len(axes)):\n        axis = axes[j]\n        x = y = 0\n        for i in s:\n            if i == '1':\n                if axis == 'x':\n                    if x < p:\n                        x = x + 1\n                    else:\n                        x = x - 1\n                elif y < q:\n                    y = y + 1\n                else:\n                    y = y - 1\n            elif axis == 'x':\n                axis = 'y'\n                if y < q:\n                    y = y + 1\n                else:\n                    y = y - 1\n            else:\n                axis = 'x'\n                if x < p:\n                    x = x + 1\n                else:\n                    x = x - 1\n        if (x, y) == (p, q):\n            possible = True\n    if possible == True:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    s = input()\n    p = 0\n    q = 0\n    xx = 1\n    for i in range(n):\n        if xx:\n            if s[i] == '1':\n                p = p + 1\n            else:\n                q = q + 1\n                xx = 0\n        elif s[i] == '1':\n            q = q + 1\n        else:\n            p = p + 1\n            xx = 1\n    if ((p + x) / 2).is_integer() and ((p - x) / 2).is_integer() and ((q + y) / 2).is_integer() and ((q - y) / 2).is_integer() and ((p + x) / 2 >= 0) and ((p - x) / 2 >= 0) and ((q + y) / 2 >= 0) and ((q - y) / 2 >= 0):\n        print('YES')\n    elif ((q + x) / 2).is_integer() and ((q - x) / 2).is_integer() and ((p + y) / 2).is_integer() and ((p - y) / 2).is_integer() and ((q + x) / 2 >= 0) and ((q - x) / 2 >= 0) and ((p + y) / 2 >= 0) and ((p - y) / 2 >= 0):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    s = input()\n    p = 0\n    q = 0\n    xx = 1\n    for i in range(n):\n        if xx:\n            if s[i] == '1':\n                p = p + 1\n            else:\n                q = q + 1\n                xx = 0\n        elif s[i] == '1':\n            q = q + 1\n        else:\n            p = p + 1\n            xx = 1\n    if ((p + x) / 2).is_integer() and ((p - x) / 2).is_integer() and ((q + y) / 2).is_integer() and ((q - y) / 2).is_integer() and ((p + x) / 2 >= 0) and ((p - x) / 2 >= 0) and ((q + y) / 2 >= 0) and ((q - y) / 2 >= 0):\n        print('YES')\n    elif ((q + x) / 2).is_integer() and ((q - x) / 2).is_integer() and ((p + y) / 2).is_integer() and ((p - y) / 2).is_integer() and ((q + x) / 2 >= 0) and ((q - x) / 2 >= 0) and ((p + y) / 2 >= 0) and ((p - y) / 2 >= 0):\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom itertools import islice\ni = iter(sys.stdin)\nnext(i)\nfor (t, s) in zip(i, i):\n    (n, p, q) = map(abs, map(int, t.split()))\n    a = [0, 0]\n    i = 0\n    for x in islice(s, n):\n        if x == '0':\n            i ^= 1\n        a[i] += 1\n    r = all((p > l[0] or q > l[1] or (p ^ l[0] | q ^ l[1]) & 1 for l in (a, a[::-1])))\n    print('YNEOS'[r::2])", "def solve(p, q, n, s):\n    p = abs(p)\n    q = abs(q)\n    arr = [0, 0]\n    i = 0\n    for char in s:\n        if char == '0':\n            i = i ^ 1\n        arr[i] += 1\n    if arr[0] >= p and arr[1] >= q:\n        if (arr[0] - p) % 2 == 0 and (arr[1] - q) % 2 == 0:\n            return 'YES'\n    if arr[1] >= p and arr[0] >= q:\n        if (arr[0] - q) % 2 == 0 and (arr[1] - p) % 2 == 0:\n            return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    print(solve(p, q, n, s))", "import sys\nimport pprint\nimport logging\nfrom logging import getLogger\nimport array\nimport collections\nimport io\nimport os\nimport heapq\nimport bisect\ninf = float('inf')\n\ndef solve():\n    for _ in range(*linp()):\n        (n, p, q) = linp()\n        s = input()\n        p = abs(p)\n        q = abs(q)\n        idx = 0\n        arr = [0, 0]\n        for x in s:\n            if x == '0':\n                idx ^= 1\n            arr[idx] += 1\n        ok = False\n        if arr[0] >= p and arr[1] >= q:\n            if (arr[0] - p) % 2 == 0 and (arr[1] - q) % 2 == 0:\n                ok = True\n        if arr[1] >= p and arr[0] >= q:\n            if (arr[0] - q) % 2 == 0 and (arr[1] - p) % 2 == 0:\n                ok = True\n        if ok:\n            print('YES')\n        else:\n            print('NO')\n\ndef linp():\n    return [int(i) for i in input().split()]\nlogging.basicConfig(format='%(message)s', level=logging.WARNING)\nlogger = getLogger(__name__)\nlogger.setLevel(logging.INFO)\n\ndef debug(msg, *args):\n    logger.info(f'{msg}={pprint.pformat(args)}')\nsolve()", "t = int(input())\nfor z in range(t):\n    (n, p, q) = map(int, input().split())\n    a = input()\n    x1 = y1 = x2 = y2 = 0\n    f1 = True\n    f2 = True\n    for i in range(n):\n        if a[i] == '0':\n            f1 = not f1\n            f2 = not f2\n        if f1:\n            x1 += 1\n        else:\n            y1 += 1\n        if f2:\n            y2 += 1\n        else:\n            x2 += 1\n    if x1 >= p >= -x1 and (p + x1) % 2 == 0 and (y1 >= q >= -y1) and ((q + y1) % 2 == 0):\n        print('YES')\n        continue\n    if x2 >= p >= -x2 and (p + x2) % 2 == 0 and (y2 >= q >= -y2) and ((q + y2) % 2 == 0):\n        print('YES')\n        continue\n    print('NO')", "t = int(input())\nfor i in range(t):\n    (n, p, q) = [int(i) for i in input().split()]\n    s = input()\n    evenone = oddone = 0\n    even = True\n    for i in s:\n        if i == '0':\n            if even:\n                even = False\n            else:\n                even = True\n        if even:\n            evenone += 1\n        else:\n            oddone += 1\n    p = abs(p)\n    q = abs(q)\n    if evenone - p >= 0 and oddone - q >= 0:\n        if (evenone - p) % 2 == 0 and (oddone - q) % 2 == 0:\n            print('YES')\n            continue\n    if evenone - q >= 0 and oddone - p >= 0:\n        if (evenone - q) % 2 == 0 and (oddone - p) % 2 == 0:\n            print('YES')\n            continue\n    print('NO')", "def func(arr, P, Q):\n    if arr[0] >= P and arr[1] >= Q:\n        if (arr[0] - P) % 2 == 0 and (arr[1] - Q) % 2 == 0:\n            return 'YES'\n    if arr[1] >= P and arr[0] >= Q:\n        if (arr[0] - Q) % 2 == 0 and (arr[1] - P) % 2 == 0:\n            return 'YES'\n    return 'NO'\nfor t in range(int(input())):\n    (N, P, Q) = map(int, input().split())\n    S = input()\n    (P, Q) = (abs(P), abs(Q))\n    arr = [0 for i in range(2)]\n    idx = 0\n    for i in S:\n        if i == '0':\n            idx ^= 1\n        arr[idx] += 1\n    print(func(arr, P, Q))", "t = int(input())\nfor _ in range(t):\n    (n, p, q) = map(int, input().split())\n    p = abs(p)\n    q = abs(q)\n    s = input()\n    arr = [0] * 2\n    curr = 0\n    for x in s:\n        if x == '0':\n            curr = 1 - curr\n        arr[curr] += 1\n    flag = 0\n    if arr[0] >= p and arr[1] >= q:\n        if abs(p - arr[0]) % 2 == 0 and abs(q - arr[1]) % 2 == 0:\n            flag = 1\n    if arr[0] >= q and arr[1] >= p:\n        if abs(p - arr[1]) % 2 == 0 and abs(q - arr[0]) % 2 == 0:\n            flag = 1\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "def func(arr, P, Q):\n    if arr[0] >= P and arr[1] >= Q:\n        if (arr[0] - P) % 2 == 0 and (arr[1] - Q) % 2 == 0:\n            return 'YES'\n    if arr[1] >= P and arr[0] >= Q:\n        if (arr[0] - Q) % 2 == 0 and (arr[1] - P) % 2 == 0:\n            return 'YES'\n    return 'NO'\nfor t in range(int(input())):\n    (N, P, Q) = map(int, input().split())\n    S = input()\n    (P, Q) = (abs(P), abs(Q))\n    arr = [0 for i in range(2)]\n    idx = 0\n    for i in S:\n        if i == '0':\n            idx ^= 1\n        arr[idx] += 1\n    print(func(arr, P, Q))", "def helper(p, q, o, z):\n    if p == o and q == z:\n        return True\n    d1 = o - p\n    d2 = z - q\n    if d1 < 0 or d2 < 0:\n        return False\n    if d1 % 2 == 0 and d2 % 2 == 0:\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    x = list(map(int, input().strip().split()))\n    n = x[0]\n    p = abs(x[1])\n    q = abs(x[2])\n    s = input()\n    (x, y, flag) = (0, 0, 1)\n    for e in s:\n        if e == '0':\n            flag *= -1\n        if flag == 1:\n            x += 1\n        else:\n            y += 1\n    if helper(p, q, x, y) or helper(q, p, x, y):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    val1 = 0\n    val2 = 0\n    present = 1\n    for i in s:\n        if i == '0':\n            if present == 1:\n                present = 2\n                val2 += 1\n            else:\n                present = 1\n                val1 += 1\n        elif present == 1:\n            val1 += 1\n        else:\n            val2 += 1\n    p = abs(p)\n    q = abs(q)\n    ans = 0\n    if val1 >= p:\n        if val2 >= q:\n            if (val1 - p) % 2 == 0 and (val2 - q) % 2 == 0:\n                ans = 1\n    if val2 >= p:\n        if val1 >= q:\n            if (val2 - p) % 2 == 0 and (val1 - q) % 2 == 0:\n                ans = 1\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    path = input()\n    flg = True\n    x = y = 0\n    for b in path:\n        if b == '0':\n            flg = not flg\n        if flg:\n            x += 1\n        else:\n            y += 1\n    (m, n) = (abs(p), abs(q))\n    if min(x, y) >= max(m, n):\n        (max_p, min_p) = (max(x, y), min(x, y))\n        if (max_p - m) % 2 != 0 and (min_p - m) % 2 != 0 or ((max_p - n) % 2 != 0 and (min_p - n) % 2 != 0):\n            print('NO')\n        elif (max_p - m) % 2 != 0 and (max_p - n) % 2 != 0 or ((min_p - m) % 2 != 0 and (min_p - n) % 2 != 0):\n            print('NO')\n        else:\n            print('YES')\n    elif min(x, y) < min(m, n) or max(x, y) < max(m, n):\n        print('NO')\n    else:\n        (max_p, min_p) = (max(x, y), min(x, y))\n        (max_dist, min_dist) = (max(m, n), min(m, n))\n        if (max_p - max_dist) % 2 != 0 or (min_p - min_dist) % 2 != 0:\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\nfor i in range(t):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    p = abs(p)\n    q = abs(q)\n    s2 = ''\n    x = 0\n    y = 0\n    a = 0\n    for j in s:\n        if j == '1':\n            if a & 1 == 0:\n                x += 1\n                s2 += 'x'\n            else:\n                y += 1\n                s2 += 'y'\n        else:\n            a += 1\n            if a & 1 == 0:\n                x += 1\n                s2 += 'x'\n            else:\n                y += 1\n                s2 += 'y'\n    if x >= p and y >= q and (x - p & 1 == 0) and (y - q & 1 == 0) or (x >= q and y >= p and (x - q & 1 == 0) and (y - p & 1 == 0)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    a = 0\n    b = 0\n    temp = 1\n    for i in range(n):\n        if s[i] == '0':\n            if temp == 1:\n                temp = 0\n            else:\n                temp = 1\n        if temp == 1:\n            a += 1\n        else:\n            b += 1\n    p = abs(p)\n    q = abs(q)\n    if min([a, b]) >= max([p, q]):\n        maxp = max([a, b])\n        minp = min([a, b])\n        if (maxp - p) % 2 != 0 and (minp - p) % 2 != 0 or ((maxp - q) % 2 != 0 and (minp - q) % 2 != 0):\n            print('NO')\n        elif (maxp - p) % 2 != 0 and (maxp - q) % 2 != 0 or ((minp - p) % 2 != 0 and (minp - q) % 2 != 0):\n            print('NO')\n        else:\n            print('YES')\n    elif min([a, b]) < min([p, q]) or max([a, b]) < max([p, q]):\n        print('NO')\n    else:\n        maxp = max([a, b])\n        minp = min([a, b])\n        maxd = max([p, q])\n        mind = min([p, q])\n        if (maxp - maxd) % 2 != 0 or (minp - mind) % 2 != 0:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (n, x, y) = [int(i) for i in input().split()]\n    f = False\n    s = input()\n    c = [0, 0]\n    j = 0\n    for i in s:\n        if i == '1':\n            c[j] += 1\n        elif i == '0':\n            if j == 0:\n                j = 1\n            else:\n                j = 0\n            c[j] += 1\n    if (c[0] - x >= 0 and (c[0] - x) % 2 == 0) and (c[1] - y >= 0 and (c[1] - y) % 2 == 0) and (c[0] + x >= 0 and (c[0] + x) % 2 == 0) and (c[1] + y >= 0 and (c[1] + y) % 2 == 0):\n        f = True\n    if (c[1] - x >= 0 and (c[1] - x) % 2 == 0) and (c[0] - y >= 0 and (c[0] - y) % 2 == 0) and (c[1] + x >= 0 and (c[1] + x) % 2 == 0) and (c[0] + y >= 0 and (c[0] + y) % 2 == 0):\n        f = True\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for u in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    s = list(input())\n    (x, y) = (abs(x), abs(y))\n    (a, b) = (0, 0)\n    f = 0\n    for i in range(n):\n        if s[i] == '0':\n            f = 1 - f\n        if f == 0:\n            a += 1\n        else:\n            b += 1\n    if a >= x and b >= y and (abs(a - x) % 2 == 0 and abs(b - y) % 2 == 0):\n        print('YES')\n    elif b >= x and a >= y and (abs(b - x) % 2 == 0 and abs(a - y) % 2 == 0):\n        print('YES')\n    else:\n        print('NO')", "try:\n    for _ in range(int(input())):\n        (n, p, q) = map(int, input().split())\n        s = list(input())\n        check = 0\n        for i in range(1, n):\n            if s[i - 1] == '0':\n                if s[i] == '0':\n                    s[i] = '1'\n                else:\n                    s[i] = '0'\n        c1 = s.count('0')\n        c2 = s.count('1')\n        if (c1 >= abs(p) and c1 % 2 == abs(p) % 2) and (c2 >= abs(q) and c2 % 2 == abs(q) % 2):\n            print('YES')\n        elif (c1 >= abs(q) and c1 % 2 == abs(q) % 2) and (c2 >= abs(p) and c2 % 2 == abs(p) % 2):\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, p, q) = list(map(int, input().split()))\n    arr = list(map(int, input()))\n    (a, b) = (0, 0)\n    flag = 1\n    for i in arr:\n        if i == 0:\n            if flag == 0:\n                flag = 1\n            else:\n                flag = 0\n        if flag == 1:\n            a += 1\n        else:\n            b += 1\n    p = abs(p)\n    q = abs(q)\n    if min(a, b) >= max(p, q):\n        maxp = max(a, b)\n        minp = min(a, b)\n        if (maxp - p) % 2 != 0 and (minp - p) % 2 != 0 or ((maxp - q) % 2 != 0 and (minp - q) % 2 != 0):\n            print('NO')\n        elif (maxp - p) % 2 != 0 and (maxp - q) % 2 != 0 or ((minp - p) % 2 != 0 and (minp - q) % 2 != 0):\n            print('NO')\n        else:\n            print('YES')\n    elif min(a, b) < min(p, q) or max(a, b) < max(p, q):\n        print('NO')\n    else:\n        maxp = max(a, b)\n        minp = min(a, b)\n        maxd = max(p, q)\n        mind = min(p, q)\n        if (maxp - maxd) % 2 != 0 or (minp - mind) % 2 != 0:\n            print('NO')\n        else:\n            print('YES')", "from math import ceil, log2, floor, sqrt, gcd\nfrom collections import defaultdict, deque\nfrom bisect import bisect_left\nimport sys\nimport os.path\nsys.setrecursionlimit(200000)\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r+')\n    sys.stdout = open('output.txt', 'w')\n\ndef MI():\n    return map(int, input().split())\nmod = 10 ** 9 + 7\n\ndef solve(testcase):\n    (n, p, q) = MI()\n    s = input()\n    p = abs(p)\n    q = abs(q)\n    x = 0\n    y = 0\n    cur = 'x'\n    for i in range(n):\n        if s[i] == '0':\n            if cur == 'x':\n                cur = 'y'\n                y += 1\n            else:\n                x += 1\n                cur = 'x'\n        elif cur == 'x':\n            x += 1\n        else:\n            y += 1\n    if x >= p and y >= q and ((x - p) % 2 == 0) and ((y - q) % 2 == 0):\n        print('YES')\n        return\n    x = 0\n    y = 0\n    cur = 'y'\n    for i in range(n):\n        if s[i] == '0':\n            if cur == 'x':\n                cur = 'y'\n                y += 1\n            else:\n                x += 1\n                cur = 'x'\n        elif cur == 'x':\n            x += 1\n        else:\n            y += 1\n    if x >= p and y >= q and ((x - p) % 2 == 0) and ((y - q) % 2 == 0):\n        print('YES')\n        return\n    print('NO')\nt = int(input())\nfor _ in range(t):\n    solve(_ + 1)", "t = int(input())\nfor _ in range(t):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    state = 1\n    count1 = 0\n    count2 = 0\n    for i in range(n):\n        if s[i] == '0':\n            state *= -1\n        if state == 1:\n            count1 += 1\n        elif state == -1:\n            count2 += 1\n    if -count1 <= p <= count1 and -count2 <= q <= count2 and ((p + count1) % 2 == 0) and ((q + count2) % 2 == 0) or (-count2 <= p <= count2 and -count1 <= q <= count1 and ((p + count2) % 2 == 0) and ((q + count1) % 2 == 0)):\n        print('YES')\n    else:\n        print('NO')", "try:\n    for i in range(int(input())):\n        (n, x, y) = list(map(int, input().split()))\n        coor = [x, y]\n        st = input()\n        ans1 = [0, 0]\n        presentsent = 0\n        for j in st:\n            if j == '0':\n                presentsent = presentsent ^ 1\n            if ans1[presentsent] < coor[presentsent]:\n                ans1[presentsent] += 1\n            else:\n                ans1[presentsent] -= 1\n        ans2 = [0, 0]\n        presentsent = 1\n        for j in st:\n            if j == '0':\n                presentsent = presentsent ^ 1\n            if ans2[presentsent] < coor[presentsent]:\n                ans2[presentsent] += 1\n            else:\n                ans2[presentsent] -= 1\n        if coor == ans1 or coor == ans2:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    (p, q) = (abs(p), abs(q))\n    one = 0\n    zero = 0\n    f1 = True\n    f2 = False\n    for i in range(n):\n        if f1 and s[i] == '1':\n            one += 1\n        elif f2 and s[i] == '1':\n            zero += 1\n        elif f1:\n            f1 = False\n            f2 = True\n            zero += 1\n        else:\n            f2 = False\n            f1 = True\n            one += 1\n    if one >= p and p & 1 == one & 1 and (zero >= q) and (zero & 1 == q & 1):\n        print('YES')\n    elif zero >= p and p & 1 == zero & 1 and (one >= q) and (one & 1 == q & 1):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, p, q) = map(int, input().strip().split(' '))\n    s = list(map(int, list(str(input()))))\n    (x, y) = (0, 0)\n    flag = 'x'\n    for i in range(n):\n        if flag == 'x':\n            if s[i] == 1:\n                if x <= p:\n                    x += 1\n                else:\n                    x -= 1\n            else:\n                flag = 'y'\n                if y <= q:\n                    y += 1\n                else:\n                    y -= 1\n        elif s[i] == 1:\n            if y <= q:\n                y += 1\n            else:\n                y -= 1\n        else:\n            flag = 'x'\n            if x <= p:\n                x += 1\n            else:\n                x -= 1\n    if x == p and y == q:\n        print('YES')\n    else:\n        (x, y) = (0, 0)\n        flag = 'y'\n        for i in range(n):\n            if flag == 'x':\n                if s[i] == 1:\n                    if x <= p:\n                        x += 1\n                    else:\n                        x -= 1\n                else:\n                    flag = 'y'\n                    if y <= q:\n                        y += 1\n                    else:\n                        y -= 1\n            elif s[i] == 1:\n                if y <= q:\n                    y += 1\n                else:\n                    y -= 1\n            else:\n                flag = 'x'\n                if x <= p:\n                    x += 1\n                else:\n                    x -= 1\n        if x == p and y == q:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor tt in range(t):\n    (n, p, q) = map(int, input().split())\n    a = input()\n    pp = ''\n    x = 0\n    y = 0\n    if p < 0:\n        p *= -1\n    if q < 0:\n        q *= -1\n    s = 0\n    for r in a:\n        if r == '1':\n            if s & 1 == 0:\n                x += 1\n                pp += 'x'\n            else:\n                y += 1\n                pp += 'y'\n        else:\n            s += 1\n            if s & 1 == 0:\n                x += 1\n                pp += 'x'\n            else:\n                y += 1\n                pp += 'y'\n    if x >= p and y >= q and (x - p & 1 == 0) and (y - q & 1 == 0) or (x >= q and y >= p and (x - q & 1 == 0) and (y - p & 1 == 0)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    x1 = 0\n    y1 = 0\n    x2 = 0\n    y2 = 0\n    axis1 = 'x'\n    axis2 = 'y'\n    for i in s:\n        if i == '1':\n            if axis1 == 'x':\n                if x1 < p:\n                    x1 += 1\n                else:\n                    x1 -= 1\n            elif y1 < q:\n                y1 += 1\n            else:\n                y1 -= 1\n        elif axis1 == 'x':\n            axis1 = 'y'\n            if y1 < q:\n                y1 += 1\n            else:\n                y1 -= 1\n        else:\n            axis1 = 'x'\n            if x1 < p:\n                x1 += 1\n            else:\n                x1 -= 1\n    for i in s:\n        if i == '1':\n            if axis2 == 'x':\n                if x2 < p:\n                    x2 += 1\n                else:\n                    x2 -= 1\n            elif y2 < q:\n                y2 += 1\n            else:\n                y2 -= 1\n        elif axis2 == 'x':\n            axis2 = 'y'\n            if y2 < q:\n                y2 += 1\n            else:\n                y2 -= 1\n        else:\n            axis2 = 'x'\n            if x2 < p:\n                x2 += 1\n            else:\n                x2 -= 1\n    if x1 == p and y1 == q or (x2 == p and y2 == q):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    (x, y) = (0, 0)\n    (x1, y1) = (0, 0)\n    t = True\n    for val in s:\n        if val == '1':\n            if t:\n                if p >= x:\n                    x += 1\n                else:\n                    x -= 1\n                if q >= y1:\n                    y1 += 1\n                else:\n                    y1 -= 1\n            else:\n                if p >= x1:\n                    x1 += 1\n                else:\n                    x1 -= 1\n                if q >= y:\n                    y += 1\n                else:\n                    y -= 1\n        else:\n            if t:\n                if p >= x1:\n                    x1 += 1\n                else:\n                    x1 -= 1\n                if q >= y:\n                    y += 1\n                else:\n                    y -= 1\n            else:\n                if p >= x:\n                    x += 1\n                else:\n                    x -= 1\n                if q >= y1:\n                    y1 += 1\n                else:\n                    y1 -= 1\n            t ^= True\n    if x == p and y == q or (x1 == p and y1 == q):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, p, q) = list(map(int, input().split()))\n    s = input()\n    a = [0, 0]\n    cur = 0\n    for i in s:\n        if i == '1':\n            a[cur] += 1\n        else:\n            cur = cur ^ 1\n            a[cur] += 1\n    p = abs(p)\n    q = abs(q)\n    if p < q:\n        (p, q) = (q, p)\n    d1 = max(a)\n    d2 = min(a)\n    if d1 >= p and d2 >= q:\n        if (d1 - p) % 2 == 0 and (d2 - q) % 2 == 0:\n            print('YES')\n            continue\n    if d2 >= p and d1 >= q:\n        if (d2 - p) % 2 == 0 and (d1 - q) % 2 == 0:\n            print('YES')\n            continue\n    print('NO')", "def fn(cnt, p, q):\n    if p <= cnt[0] and (cnt[0] - p) % 2 == 0 and (q <= cnt[1]) and ((cnt[1] - q) % 2 == 0):\n        return 'YES'\n    if q <= cnt[0] and (cnt[0] - q) % 2 == 0 and (p <= cnt[1]) and ((cnt[1] - p) % 2 == 0):\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    l = list(map(int, input().split(' ')))\n    p = abs(l[1])\n    q = abs(l[2])\n    s = input()\n    cnt = [0, 0]\n    axis = 0\n    for i in s:\n        if i == '1':\n            cnt[axis] += 1\n        else:\n            axis = 1 - axis\n            cnt[axis] += 1\n    res = fn(cnt, p, q)\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (n, p, q) = map(int, input().split())\n    s = input()\n    dir = [0, 0]\n    x = 0\n    for ele in s:\n        if ele == '1':\n            dir[x] += 1\n        else:\n            x = 1 - x\n            dir[x] += 1\n    (p, q) = (abs(p), abs(q))\n    if dir[0] >= p and dir[1] >= q and (not (dir[0] + p) % 2) and (not (dir[1] + q) % 2):\n        print('YES')\n    elif dir[1] >= p and dir[0] >= q and (not (dir[1] + p) % 2) and (not (dir[0] + q) % 2):\n        print('YES')\n    else:\n        print('NO')", "try:\n    for i in range(int(input())):\n        (n, x, y) = list(map(int, input().split()))\n        lis = [x, y]\n        st = input()\n        x1 = [0, 0]\n        pre = 0\n        for j in st:\n            if j == '0':\n                pre = pre ^ 1\n            if x1[pre] < lis[pre]:\n                x1[pre] += 1\n            else:\n                x1[pre] -= 1\n        x2 = [0, 0]\n        pre = 1\n        for j in st:\n            if j == '0':\n                pre = pre ^ 1\n            if x2[pre] < lis[pre]:\n                x2[pre] += 1\n            else:\n                x2[pre] -= 1\n        if lis == x1 or lis == x2:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    s = input()\n    c = [0, 0]\n    i = 0\n    x = abs(x)\n    y = abs(y)\n    for j in s:\n        if j == '0':\n            i = 1 - i\n        c[i] += 1\n    if c[0] >= x and c[1] >= y:\n        r_x = c[0] - x\n        r_y = c[1] - y\n        if r_x % 2 == 0 and r_y % 2 == 0:\n            print('YES')\n            continue\n    if c[0] >= y and c[1] >= x:\n        r_x = c[1] - x\n        r_y = c[0] - y\n        if r_x % 2 == 0 and r_y % 2 == 0:\n            print('YES')\n            continue\n    print('NO')", "try:\n    for i in range(int(input())):\n        (n, x, y) = list(map(int, input().split()))\n        arr = [x, y]\n        st = input()\n        x1 = [0, 0]\n        now = 0\n        for j in st:\n            if j == '0':\n                now = now ^ 1\n            if x1[now] < arr[now]:\n                x1[now] += 1\n            else:\n                x1[now] -= 1\n        x2 = [0, 0]\n        now = 1\n        for j in st:\n            if j == '0':\n                now = now ^ 1\n            if x2[now] < arr[now]:\n                x2[now] += 1\n            else:\n                x2[now] -= 1\n        if arr == x1 or arr == x2:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass", "from collections import Counter\nfor _ in range(int(input())):\n    (n, p, q) = map(int, input().split())\n    s = input().strip()\n    (a, b) = (0, 0)\n    k = 1\n    for i in range(n):\n        if s[i] == '1':\n            if k == 1:\n                if p >= a:\n                    a += 1\n                else:\n                    a -= 1\n            elif q >= b:\n                b += 1\n            else:\n                b -= 1\n        elif k == 1:\n            if q >= b:\n                b += 1\n            else:\n                b -= 1\n            k = 2\n        else:\n            k = 1\n            if p >= a:\n                a += 1\n            else:\n                a -= 1\n    if [a, b] == [p, q]:\n        print('YES')\n    else:\n        k = 2\n        (a, b) = (0, 0)\n        for i in range(n):\n            if s[i] == '1':\n                if k == 1:\n                    if p >= a:\n                        a += 1\n                    else:\n                        a -= 1\n                elif q >= b:\n                    b += 1\n                else:\n                    b -= 1\n            elif k == 1:\n                if q >= b:\n                    b += 1\n                else:\n                    b -= 1\n                k = 2\n            else:\n                k = 1\n                if p >= a:\n                    a += 1\n                else:\n                    a -= 1\n        if [a, b] == [p, q]:\n            print('YES')\n        else:\n            print('NO')", "def Test(p, q, S):\n    x = y = 0\n    flag = 0\n    for i in S:\n        if i == '1':\n            if flag == 0:\n                x += 1\n            else:\n                y += 1\n        else:\n            if flag == 0:\n                y += 1\n            else:\n                x += 1\n            flag = flag ^ 1\n    if (x >= p and (x - p) % 2 == 0) and (y >= q and (y - q) % 2 == 0):\n        return 'YES'\n    flag = 1\n    x = y = 0\n    for i in S:\n        if i == '1':\n            if flag == 0:\n                x += 1\n            else:\n                y += 1\n        else:\n            if flag == 0:\n                y += 1\n            else:\n                x += 1\n            flag = flag ^ 1\n    if (x >= p and (x - p) % 2 == 0) and (y >= q and (y - q) % 2 == 0):\n        return 'YES'\n    else:\n        return 'NO'\ntry:\n    t = int(input())\n    for _ in range(t):\n        (n, p, q) = map(int, input().split())\n        S = input()\n        print(Test(abs(p), abs(q), S))\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, p, q) = map(int, input().split(' '))\n    s = str(input())\n    t = 0\n    a = [1, 0]\n    x = y = 0\n    for i in range(n):\n        if s[i] == '0':\n            a[0] = (a[0] + 1) % 2\n            a[1] = (a[1] + 1) % 2\n        if x <= p:\n            x += a[0]\n        else:\n            x -= a[0]\n        if y <= q:\n            y += a[1]\n        else:\n            y -= a[1]\n    if x == p and y == q:\n        t = 1\n    a = [0, 1]\n    x = y = 0\n    for i in range(n):\n        if s[i] == '0':\n            a[0] = (a[0] + 1) % 2\n            a[1] = (a[1] + 1) % 2\n        if x <= p:\n            x += a[0]\n        else:\n            x -= a[0]\n        if y <= q:\n            y += a[1]\n        else:\n            y -= a[1]\n    if x == p and y == q:\n        t = 1\n    if t == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    s = input()\n    c = [0, 0]\n    i = 0\n    x = abs(x)\n    y = abs(y)\n    for j in s:\n        if j == '0':\n            i = 1 - i\n        c[i] += 1\n    if c[0] >= x and c[1] >= y:\n        r_x = c[0] - x\n        r_y = c[1] - y\n        if r_x % 2 == 0 and r_y % 2 == 0:\n            print('YES')\n            continue\n    if c[0] >= y and c[1] >= x:\n        r_x = c[1] - x\n        r_y = c[0] - y\n        if r_x % 2 == 0 and r_y % 2 == 0:\n            print('YES')\n            continue\n    print('NO')", "def wedding(n, p, q, s):\n    units = [0, 0]\n    direction = 0\n    for i in s:\n        if i == '0':\n            if direction == 0:\n                direction = 1\n            else:\n                direction = 0\n            units[direction] += 1\n        else:\n            units[direction] += 1\n    if units[0] >= abs(p) and units[1] >= abs(q):\n        extra_x = units[0] - abs(p)\n        extra_y = units[1] - abs(q)\n        if extra_x % 2 == 0 and extra_y % 2 == 0:\n            return 'YES'\n    if units[0] >= abs(q) and units[1] >= abs(p):\n        extra_y = units[0] - abs(q)\n        extra_x = units[1] - abs(p)\n        if extra_x % 2 == 0 and extra_y % 2 == 0:\n            return 'YES'\n    return 'NO'\nt = int(input())\nfor i in range(t):\n    (N, P, Q) = map(int, input().split())\n    S = input()\n    print(wedding(N, P, Q, S))"]