["t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = 0\n    if n == 1:\n        print(x)\n    else:\n        print(x * pow(2, n - 1, 10 ** 9 + 7) % (10 ** 9 + 7))", "t = int(input())\nl = []\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    if n == 1:\n        print(x)\n    else:\n        print(x * pow(2, n - 1, 10 ** 9 + 7) % (10 ** 9 + 7))", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = 0\n    if n == 1:\n        print(x)\n    else:\n        print(x * pow(2, n - 1, 10 ** 9 + 7) % (10 ** 9 + 7))", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    c = 0\n    a = pow(10, 9) + 7\n    b = int(pow(2, n - 1, a) % a)\n    print(int(b * x % a))", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 1:\n        print(k)\n    else:\n        print(k * pow(2, n - 1, 10 ** 9 + 7) % (10 ** 9 + 7))", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "for i in range(int(input())):\n    m = 1000000007\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, m) * x % m)", "for i in range(int(input())):\n    m = 1000000007\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, m) * x % m)", "for i in range(int(input())):\n    m = 1000000007\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, m) * x % m)", "for _ in range(int(input())):\n    (n, x) = [int(i) for i in input().split()]\n    print(x * pow(2, n - 1, 10 ** 9 + 7) % (10 ** 9 + 7))", "for i in range(int(input())):\n    m = 10 ** 9 + 7\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, m) * x % m)", "for i in range(int(input())):\n    m = 10 ** 9 + 7\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, m) * x % m)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split(' '))\n    print(pow(2, n - 1, 1000000007) * x % 1000000007)", "import math\ns = 1000000007\n\ndef PowerOf2(a, n):\n    (ans, x) = (1, a)\n    while n != 0:\n        if n & 1 == 1:\n            ans = ans * x % s\n        x = x * x % s\n        n = n >> 1\n    return ans % s\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    if n == 1:\n        print(x)\n    else:\n        ans = PowerOf2(2, n - 1) - 1\n        ans = ans * x % s\n        ans = (ans + x) % s\n        print(ans)", "import math\ns = 1000000007\n\ndef PowerOf2(a, n):\n    (ans, x) = (1, a)\n    while n != 0:\n        if n & 1 == 1:\n            ans = ans * x % s\n        x = x * x % s\n        n = n >> 1\n    return ans % s\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    if n == 1:\n        print(x)\n    else:\n        ans = PowerOf2(2, n - 1) - 1\n        ans = ans * x % s\n        ans = (ans + x) % s\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, 1000000007) * x % 1000000007)", "T = int(input())\nfor _ in range(T):\n    (N, X) = map(int, input().split())\n    print(pow(2, N - 1, 1000000007) * X % 1000000007)", "T = int(input())\nfor _ in range(T):\n    (N, X) = map(int, input().split())\n    print(pow(2, N - 1, 1000000007) * X % 1000000007)", "tests = int(input())\nfor i in range(tests):\n    (n, x) = map(int, input().split())\n    ans = x * pow(2, n - 1, 1000000007) % 1000000007\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    (n, x) = map(int, input().split())\n    ans = (x + x * (pow(2, n - 1, 1000000007) - 1)) % 1000000007\n    print(ans)", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (k, x) = map(int, input().split())\n    print(pow(2, k - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (k, x) = map(int, input().split())\n    print(pow(2, k - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "a = int(input())\nfor i in range(a):\n    l = list(map(int, input().split()))\n    c = 10 ** 9 + 7\n    print(pow(2, l[0] - 1, c) * l[1] % c)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    if n == 1:\n        print(x)\n    else:\n        ans = pow(2, n - 1, 1000000007) * x\n        print(ans % 1000000007)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "t = int(input())\nfor _ in range(t):\n    a = input().split()\n    n = int(a[0])\n    x = int(a[1])\n    if n > 1:\n        summ = x * pow(2, n - 1, 1000000007) % 1000000007\n        print(summ)\n    else:\n        print(x)", "mod = 1000000007\nT = int(input())\nfor i in range(T):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nT = int(input())\nfor i in range(T):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "from sys import stdin, stdout\nfrom collections import defaultdict\ninput = stdin.readline\nfrom random import randint\nimport math\nimport sys\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(x * pow(2, n - 1, mod) % mod)", "from sys import stdin, stdout\nfrom collections import defaultdict\ninput = stdin.readline\nfrom random import randint\nimport math\nimport sys\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(x * pow(2, n - 1, 10 ** 9 + 7) % (10 ** 9 + 7))", "t = int(input())\nwhile t > 0:\n    (n, x) = map(int, input().split(' '))\n    print(pow(2, n - 1, 1000000007) * x % 1000000007)\n    t -= 1", "def fastpower(b, e):\n    ans = 1\n    while e > 0:\n        if e % 2 == 1:\n            ans = ans * b % 1000000007\n        b = b * b % 1000000007\n        e = e // 2 % 1000000007\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    q = x * fastpower(2, n - 1)\n    print(q % 1000000007)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    sum = x * pow(2, n - 1, 1000000007)\n    print(sum % 1000000007)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    sum = x * pow(2, n - 1, 1000000007)\n    print(sum % 1000000007)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, 10 ** 9 + 7) * x % (10 ** 9 + 7))", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, 1000000007) * x % 1000000007)", "n = int(input())\nfor i in range(n):\n    (x, y) = map(int, input().split())\n    print(pow(2, x - 1, 1000000007) * y % 1000000007)", "mod = 10 ** 9 + 7\nt = int(input())\nfor i in range(t):\n    (n, x) = [int(x) for x in input().split()]\n    print(pow(2, n - 1, mod) * x % mod)", "T = int(input())\nfor _ in range(T):\n    (N, X) = map(int, input().split(' '))\n    mod_val = 10 ** 9 + 7\n    val = pow(2, N - 1, mod_val)\n    ans = val * X % 1000000007\n    print(ans)", "def calc_fib(x, y):\n    if x == 1:\n        return y\n    elif x > 1:\n        x = x - 1\n        z = pow(2, x, 1000000007)\n        return z * y % 1000000007\nn = int(input(''))\nfor i in range(n):\n    (x, y) = map(int, input('').split())\n    print(calc_fib(x, y))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, 1000000007) * x % 1000000007)", "for tc in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, 1000000007) * x % 1000000007)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, 1000000007) * x % 1000000007)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "import math\nt = int(input())\nfor i in range(0, t):\n    (a, b) = map(int, input().split())\n    print(pow(2, a - 1, 1000000007) * b % 1000000007)", "import math\nt = int(input())\nfor i in range(0, t):\n    (a, b) = map(int, input().split())\n    print(pow(2, a - 1, 1000000007) * b % 1000000007)", "import sys\ninput = sys.stdin.readline\nM = int(1000000000.0) + 7\npow2 = [1] * int(1000000.0 + 5)\nfor i in range(1, len(pow2)):\n    pow2[i] = pow2[i - 1] * 2 % M\n\ndef solve():\n    (n, x) = map(int, input().split())\n    return x * pow2[n - 1] % M\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\nfor i in range(t):\n    mod = 10 ** 9 + 7\n    (n, x) = map(int, input().split())\n    if n == 1:\n        print(x)\n    elif n == 2:\n        print(x * 2)\n    else:\n        print(x * 2 * pow(2, n - 2, mod) % mod)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, 1000000007) * x % 1000000007)", "mod = 10 ** 9 + 7\nn = int(input())\nfor i in range(n):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nn = int(input())\nfor i in range(n):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (N, X) = map(int, input().split())\n    print(pow(2, N - 1, mod) * X % mod)", "T = int(input())\nmod = 1000000007\nfor i in range(T):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "T = int(input())\nmod = 1000000007\nfor i in range(T):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "T = int(input())\nmod = 1000000007\nfor i in range(T):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    n = 1000000007\n    print(y * pow(2, x - 1, n) % n)", "for i in range(int(input())):\n    (N, X) = map(int, input().split())\n    M = 1000000007\n    print(X * pow(2, N - 1, M) % M)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    ans = x * pow(2, n - 1, 1000000007)\n    print(ans % 1000000007)", "t = int(input())\nfor i in range(t):\n    s = input()\n    (n, x) = map(int, s.split())\n    ans = x * pow(2, n - 1, 1000000007)\n    print(ans % 1000000007)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = x * pow(2, n - 1, 1000000007)\n    print(s % 1000000007)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = x * pow(2, n - 1, 1000000007)\n    print(s % 1000000007)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = x * pow(2, n - 1, 1000000007)\n    print(s % 1000000007)", "def jogging(N, X):\n    mod = 10 ** 9 + 7\n    print(pow(2, N - 1, mod) * X % mod)\nt = int(input())\nfor _ in range(t):\n    (N, X) = map(int, input().split())\n    jogging(N, X)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    mod = 1000000007\n    if n == 1:\n        print(x)\n    else:\n        print(pow(2, n - 1, mod) * x % mod)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, 1000000007) * x % 1000000007)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split(' '))\n    if n == 1:\n        print(x)\n    else:\n        print(pow(2, n - 1, 1000000007) * x % 1000000007)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, mod) * x % mod)", "from sys import stdin\nfrom sys import stdout\nT = int(stdin.readline())\nfor i in range(0, T):\n    Z = list(map(int, stdin.readline().split()))\n    N = Z[0]\n    X = Z[1]\n    M = 100000007\n    if N == 1:\n        ans = X\n    elif N == 2:\n        ans = 2 * X\n    else:\n        ans = pow(2, N - 1, 1000000007) * X\n    print(ans % 1000000007)", "t = int(input())\nmod = 10 ** 9 + 7\nwhile t > 0:\n    t -= 1\n    (n, x) = map(int, input().split())\n    print(x * pow(2, n - 1, mod) % mod)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(x * pow(2, n - 1, mod) % mod)", "T = int(input())\nfor i in range(T):\n    (N, X) = map(int, input().split())\n    ans = pow(2, N - 1, 1000000007) * X\n    print(ans % 1000000007)", "def main():\n    T = int(input())\n    mod = 1000000007\n    for _ in range(T):\n        (N, X) = map(int, input().split())\n        print(X % mod * pow(2, N - 1, mod) % mod)\nmain()", "T = int(input())\nfor i in range(T):\n    (N, X) = map(int, input().split())\n    ans = pow(2, N - 1, 1000000007) * X\n    print(ans % 1000000007)", "T = int(input())\nmyval = []\nfor t in range(T):\n    NX = input().split()\n    N = int(NX[0])\n    X = int(NX[1])\n    val = 0\n    m = 1000000007\n    val = X * pow(2, N - 1, m) % m\n    myval.append(val)\nfor t in range(T):\n    print(myval[t])", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(pow(2, n - 1, 1000000007) * x % 1000000007)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(pow(2, a - 1, 1000000007) * b % 1000000007)", "def findCalories(N, X):\n    if N == 1:\n        return 1 * X\n    return pow(2, N - 1) % 1000000007 * X\nT = int(input())\nfor testcase in range(T):\n    (N, X) = list(map(int, input().split()))\n    if N == 1:\n        print(1 * X)\n    else:\n        print(pow(2, N - 1, 1000000007) * X % 1000000007)", "def findCalories(N, X):\n    if N == 1:\n        return 1 * X\n    return pow(2, N - 1) % 1000000007 * X\nT = int(input())\nfor testcase in range(T):\n    (N, X) = list(map(int, input().split()))\n    if N == 1:\n        print(1 * X)\n    else:\n        print(pow(pow(2, N - 1, 1000000007) * X, 1, 1000000007))", "def findCalories(N, X):\n    if N == 1:\n        return 1 * X\n    return pow(2, N - 1) % 1000000007 * X\nT = int(input())\nfor testcase in range(T):\n    (N, X) = list(map(int, input().split()))\n    if N == 1:\n        print(1 * X)\n    else:\n        print(pow(2, N - 1, 1000000007) * X % 1000000007)", "def findCalories(N, X):\n    if N == 1:\n        return 1 * X\n    return pow(2, N - 1) % 1000000007 * X\nT = int(input())\nfor testcase in range(T):\n    (N, X) = list(map(int, input().split()))\n    if N == 1:\n        print(1 * X)\n    else:\n        print(pow(2, N - 1, 1000000007) * X % 1000000007)"]