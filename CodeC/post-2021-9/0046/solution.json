["from statistics import mode\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    m = mode(a)\n    for i in range(n):\n        if a[i] != m:\n            count += 1\n    print(count)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n - max(Counter(l).values()))", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    lst = [int(i) for i in input().split()][0:N]\n    set_lst = set(lst)\n    dict_count = {}\n    for e in set_lst:\n        dict_count[e] = lst.count(e)\n    sorted_value = sorted(dict_count.items(), key=lambda x: x[1])\n    max_freq = sorted_value[len(set_lst) - 1][1]\n    count = len(lst) - max_freq\n    print(count)", "T = int(input())\nfor z in range(T):\n    N = int(input())\n    A = list(map(int, input().strip().split()))\n    li = []\n    for i in A:\n        s = A.count(i)\n        li.append(s)\n    print(N - max(li))", "T = int(input())\nfor z in range(T):\n    N = int(input())\n    A = list(map(int, input().strip().split()))\n    li = []\n    for i in A:\n        s = A.count(i)\n        li.append(s)\n    print(N - max(li))", "from statistics import mode\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    m = mode(a)\n    for k in range(n):\n        if a[k] != m:\n            count = count + 1\n    print(count)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    l1 = []\n    for i in A:\n        a = A.count(i)\n        l1.append(a)\n    print(N - max(l1))", "def maeuP(arr, n):\n    dct = dict()\n    for _ in arr:\n        if _ in dct:\n            dct[_] += 1\n        else:\n            dct[_] = 1\n    max_r = max(dct.values())\n    print(n - max_r)\nfor i in range(int(input())):\n    N = int(input())\n    array = list(map(int, input().split()))[:N]\n    maeuP(array, N)", "from collections import Counter\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    v = max(d.values())\n    print(n - v)", "from statistics import mode\nn = int(input())\nfor _ in range(n):\n    N = int(input())\n    ARR = list(map(int, input().split()))\n    m = mode(ARR)\n    print(N - ARR.count(m))", "n = int(input())\nfor _ in range(n):\n    m = []\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    for i in a:\n        s = a.count(i)\n        m.append(s)\n    print(n - max(m))", "t = int(input())\nfor i in range(t):\n    m = []\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in l:\n        a = l.count(i)\n        m.append(a)\n    print(n - max(m))", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = mode(a)\n    print(len(a) - a.count(m))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = map(int, input().split())\n    dict = {}\n    for j in a:\n        if j in dict:\n            dict[j] += 1\n        else:\n            dict[j] = 1\n    value = max(dict.values())\n    print(n - value)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = map(int, input().split())\n    dict = {}\n    for j in a:\n        if j in dict:\n            dict[j] += 1\n        else:\n            dict[j] = 1\n    value = max(dict.values())\n    print(n - value)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = map(int, input().split())\n    dict = {}\n    for j in a:\n        if j in dict:\n            dict[j] += 1\n        else:\n            dict[j] = 1\n    value = max(dict.values())\n    print(n - value)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    maxn = max(Counter(ls).values())\n    print(n - maxn)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n - max(Counter(l).values()))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    l1 = []\n    for i in l:\n        l1.append(l.count(i))\n    a = l1.index(max(l1))\n    c = l.count(l[a])\n    print(n - c)", "from collections import Counter\nn = int(input())\nfor _ in range(n):\n    l = int(input())\n    s = map(int, input().split())\n    print(l - max(Counter(s).values()))", "for _ in range(int(input())):\n    m = []\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in l:\n        s = l.count(i)\n        m.append(s)\n    print(n - max(m))", "from statistics import mode\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(N - A.count(mode(A)))", "from statistics import mode\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(N - A.count(mode(A)))", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = mode(a)\n    print(len(a) - a.count(m))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    freq = {}\n    for elem in x:\n        if elem in freq:\n            freq[elem] += 1\n        else:\n            freq[elem] = 1\n    max_freq = max(freq.values())\n    print(n - max_freq)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    most_common = max(set(a), key=a.count)\n    count = sum((1 for elem in a if elem != most_common))\n    print(count)", "from collections import Counter\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    list1 = input().split()\n    a = max(Counter(list1).values())\n    print(N - a)", "from collections import Counter\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    list1 = input().split()\n    a = max(Counter(list1).values())\n    print(N - a)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n - max(Counter(l).values()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    l = []\n    for i in lst:\n        c = lst.count(i)\n        if c == n:\n            print(0)\n            break\n        else:\n            l.append(c)\n    if len(l) != 0:\n        max_value = max(l)\n        print(n - max_value)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    c = []\n    for i in range(n):\n        c = [a.count(a[i])] + c\n    z = str(c)\n    p = int(max(c))\n    print(n - p)\n    t = t - 1", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    N = int(input())\n    list1 = input().split()\n    a = max(Counter(list1).values())\n    print(N - a)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n - max(Counter(l).values()))", "t = int(input())\nfor i in range(t):\n    k = []\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    for i in a:\n        s = a.count(i)\n        k.append(s)\n    print(n - max(k))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    l = []\n    for i in lst:\n        c = lst.count(i)\n        if c == n:\n            print(0)\n            break\n        else:\n            l.append(c)\n    if len(l) != 0:\n        max_value = max(l)\n        print(n - max_value)", "for i in range(0, int(input())):\n    x = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    for i in range(0, len(a)):\n        y = a.count(a[i])\n        l.append(y)\n    c = max(l)\n    print(len(a) - c)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = []\n    for i in a:\n        s = a.count(i)\n        m.append(s)\n    print(n - max(m))", "from statistics import mode\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n - a.count(mode(a)))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n - max(Counter(l).values()))", "n = int(input())\nwhile n != 0:\n    x = int(input())\n    l = list(map(int, input().split()))\n    m = []\n    for i in range(0, len(l)):\n        c = l.count(l[i])\n        m.append(c)\n    m.sort()\n    k = len(m)\n    s = m[k - 1]\n    print(k - s)\n    n = n - 1", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for j in l:\n        ans = max(ans, l.count(j))\n    print(n - ans)", "from collections import Counter\nn = int(input())\na = []\nfor i in range(n):\n    count = 0\n    q = int(input())\n    w = list(map(int, input().split()))\n    cout = Counter(w)\n    m = cout.most_common(1)[0][0]\n    for j in range(len(w)):\n        if w[j] != m:\n            count += 1\n    print(count)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    l = list(map(int, input().split()))\n    d = []\n    for j in range(a):\n        c = l.count(l[j])\n        d.append(c)\n    print(a - max(d))", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    ans = 0\n    for j in s:\n        ans = max(ans, s.count(j))\n    print(n - ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    m = 0\n    for i in l:\n        m = max(m, l.count(i))\n    print(len(l) - m)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    C = Counter(arr)\n    maxi = max(C.values())\n    print(n - maxi)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n - max(Counter(l).values()))", "from collections import Counter\ncases = int(input())\nfor i in range(cases):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    result = n - max(Counter(arr).values())\n    print(result)", "T = int(input())\nfor j in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    List1 = []\n    c = 0\n    for i in range(N):\n        if A[i] == A[i - 1]:\n            continue\n        counter = A.count(A[i])\n        List1.append(counter)\n    if List1 == []:\n        print(0)\n    else:\n        print(N - max(List1))", "T = int(input())\nfor j in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    List1 = []\n    c = 0\n    for i in range(N):\n        if A[i] == A[i - 1]:\n            continue\n        counter = A.count(A[i])\n        List1.append(counter)\n    if List1 == []:\n        print(0)\n    else:\n        print(N - max(List1))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n - max(Counter(l).values()))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n - max(Counter(l).values()))", "import statistics as st\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = st.mode(arr)\n    print(len(arr) - arr.count(m))", "t = int(input())\nfor i in range(t):\n    z = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    ls = max(set(l), key=l.count)\n    z = l.count(ls)\n    m = len(l)\n    print(m - z)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dic = {}\n    i = 0\n    m = 0\n    while i < n:\n        if arr[i] not in dic:\n            dic[arr[i]] = 1\n        else:\n            dic[arr[i]] += 1\n        i += 1\n    for (k, v) in dic.items():\n        if v >= m:\n            m = v\n    print(n - m)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    count = Counter(a)\n    max1 = max(count.values())\n    print(n - max1)", "from collections import Counter\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(N - max(Counter(A).values()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input().split()\n    d = {}\n    for j in a:\n        if j not in d:\n            d[j] = 0\n        d[j] += 1\n    lst = list(d.values())\n    lst.sort()\n    print(n - lst[-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    mydict = {}\n    for num in A:\n        if num in mydict:\n            mydict[num] += 1\n        else:\n            mydict[num] = 1\n    maxv = max(mydict.values())\n    print(n - maxv)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = []\n    for j in a:\n        x.append(a.count(j))\n    m = max(x)\n    print(len(a) - m)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = set(a)\n    count = 1\n    maxc = 1\n    for i in p:\n        count = a.count(i)\n        if count > maxc:\n            maxc = count\n    print(n - maxc)", "from collections import Counter\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    N1 = list(map(int, input().split()))\n    print(N - max(Counter(N1).values()))", "T = int(input())\nfor z in range(T):\n    N = int(input())\n    A = list(map(int, input().strip().split()))\n    li = []\n    for i in A:\n        s = A.count(i)\n        li.append(s)\n    print(N - max(li))", "T = int(input())\nfor z in range(T):\n    N = int(input())\n    A = list(map(int, input().strip().split()))\n    li = []\n    for i in A:\n        s = A.count(i)\n        li.append(s)\n    print(N - max(li))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    arr = list(map(int, input().split()))\n    for k in arr:\n        a = arr.count(k)\n        l.append(a)\n    print(n - max(l))", "for _ in range(int(input())):\n    m = []\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    for i in a:\n        s = a.count(i)\n        m.append(s)\n    print(n - max(m))", "for _ in range(int(input())):\n    m = []\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    for i in a:\n        s = a.count(i)\n        m.append(s)\n    print(n - max(m))", "for _ in range(int(input())):\n    int(input())\n    ls = list(map(int, input().split()))\n    max_count = 0\n    for i in ls:\n        ct = ls.count(i)\n        if ct > max_count:\n            max_count = ct\n    swaps = len(ls) - max_count\n    print(swaps)", "from statistics import mode\nn = eval(input())\nfor i in range(n):\n    a = eval(input())\n    b = list(map(int, input().split()))\n    x = mode(b)\n    y = len(b) - b.count(x)\n    print(y)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = []\n    for i in l:\n        m.append(l.count(i))\n    print(n - max(m))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n - max(Counter(a).values()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = {}\n    for num in a:\n        freq[num] = freq.get(num, 0) + 1\n    max_freq = max(freq.values())\n    operations = n - max_freq\n    print(operations)", "from statistics import mode\nfor _ in range(int(input())):\n    i_p = int(input())\n    lis = list(map(int, input().split()))\n    most = mode(lis)\n    print(len(lis) - lis.count(most))", "from statistics import mode\nfor i in range(int(input())):\n    a = int(input())\n    x = list(map(int, input().split()))\n    print(a - x.count(mode(x)))", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    a = input().split()\n    uni = {}\n    for x in a:\n        if x not in uni:\n            uni[x] = 1\n        else:\n            uni[x] += 1\n    print(len(a) - max(uni.values()))", "t = int(input())\nfor i in range(t):\n    size = int(input())\n    n = list(map(int, input().split()))\n    if len(set(n)) == 1:\n        print(0)\n    else:\n        mx = 0\n        for j in n:\n            mx = max(mx, n.count(j))\n        print(len(n) - mx)", "from statistics import mode\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = mode(a)\n    print(len(a) - a.count(m))", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if len(set(arr)) == 1:\n        print(0)\n    else:\n        mx = 0\n        for a in arr:\n            mx = max(mx, arr.count(a))\n        print(len(arr) - mx)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    unique = set(a)\n    freq = dict()\n    for val in unique:\n        freq[val] = 0\n    for val in a:\n        freq[val] += 1\n    max_ = max(freq.values())\n    print(n - max_)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = []\n    for j in a:\n        s = a.count(j)\n        m.append(s)\n    print(n - max(m))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    print(n - max(Counter(ar).values()))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    l1 = []\n    for j in A:\n        a = A.count(j)\n        l1.append(a)\n        c = len(A)\n    l1.sort()\n    if l1[-1] > 1:\n        print(c - l1[-1])\n    elif l1[-1] == 1:\n        print(c - 1)", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    sum = 1\n    l = list(map(int, input().split()))\n    for i in l:\n        b = l.count(i)\n        if b > sum:\n            sum = b\n    print(a - sum)", "for _ in range(int(input())):\n    m = []\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    for i in a:\n        s = a.count(i)\n        m.append(s)\n    print(n - max(m))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n - max(Counter(l).values()))", "from statistics import mode\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = mode(a)\n    print(len(a) - a.count(m))", "for _ in range(int(input())):\n    m = []\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    for i in a:\n        s = a.count(i)\n        m.append(s)\n    print(n - max(m))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = []\n    g = len(l)\n    for i in l:\n        s = l.count(i)\n        m.append(s)\n    print(g - max(m))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    count_no = []\n    for j in range(n):\n        a = arr.count(arr[j])\n        count_no.append(a)\n    no = max(count_no)\n    print(n - no)", "for i in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    c = l.count(l[0])\n    for i in l:\n        if c < l.count(i):\n            c = l.count(i)\n    print(a - c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = []\n    for i in a:\n        b = a.count(i)\n        c.append(b)\n    print(n - max(c))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    counts = {}\n    for j in a:\n        if j in counts:\n            counts[j] += 1\n        else:\n            counts[j] = 1\n    print(n - max(counts.values()))", "for _ in range(int(input())):\n    m = []\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    for i in a:\n        s = a.count(i)\n        m.append(s)\n    print(n - max(m))", "for i in range(int(input())):\n    l = int(input())\n    l1 = list(map(int, input().split()))\n    m = []\n    for i in l1:\n        a = l1.count(i)\n        m.append(a)\n    print(l - max(m))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = []\n    for i in a:\n        z.append(a.count(i))\n    print(n - max(z))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = []\n    for j in l:\n        a.append(l.count(j))\n    print(n - max(a))", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = mode(a)\n    print(len(a) - a.count(m))", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n - max(Counter(l).values()))", "import numpy\nfrom collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = numpy.array(input().split())\n    p = Counter(arr)\n    x = max(p.values())\n    print(n - x)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n - max(Counter(l).values()))"]