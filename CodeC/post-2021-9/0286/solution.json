["for i in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    n -= 1\n    diff = a ^ b\n    bits = len(bin(diff)[2:])\n    pwr = pow(2, bits - 1)\n    if a == b:\n        print(0)\n    elif diff <= n:\n        print(1)\n    elif pwr <= n:\n        print(2)\n    else:\n        print(-1)", "t = int(input())\n\ndef fun(a, b, n):\n    diff = bin(b ^ a)[2:]\n    pr = pow(2, len(diff) - 1)\n    if n >= pr:\n        vl = a ^ b\n        if vl <= n:\n            return 1\n        else:\n            return 2\n    else:\n        return -1\nfor _ in range(t):\n    (a, b, n) = map(int, input().split())\n    dif = b - a\n    if dif == 0:\n        print(0)\n    else:\n        x = fun(a, b, n - 1)\n        print(x)", "t = int(input())\n\ndef fun(a, b, n):\n    diff = bin(b ^ a)[2:]\n    pr = pow(2, len(diff) - 1)\n    if n >= pr:\n        vl = a ^ b\n        if vl <= n:\n            return 1\n        else:\n            return 2\n    else:\n        return -1\nfor _ in range(t):\n    (a, b, n) = map(int, input().split())\n    dif = b - a\n    if dif == 0:\n        print(0)\n    else:\n        x = fun(a, b, n - 1)\n        print(x)", "import math\nfor _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    k = a ^ b\n    if k != 0:\n        c = int(math.log(k, 2))\n        s = int(pow(2, c))\n    if a == b:\n        print(0)\n    elif n > k:\n        print(1)\n    elif n > s and n <= k:\n        print(2)\n    else:\n        print(-1)", "def sz(n):\n    if n == 0:\n        return -1\n    else:\n        count = 0\n        while n != 1:\n            count += 1\n            n = int(n / 2)\n        return count\nfor _ in range(int(input())):\n    (A, B, N) = [int(x) for x in input().split()]\n    if A == 0 and B == 0:\n        print(0)\n        continue\n    sza = sz(A) + 1\n    szb = sz(B) + 1\n    mx = max(sza, szb)\n    a = [0 for _ in range(mx)]\n    for i in reversed(range(sza)):\n        if A - pow(2, i) >= 0:\n            a[i] = 1\n            A -= pow(2, i)\n    b = [0 for _ in range(mx)]\n    for i in reversed(range(szb)):\n        if B - pow(2, i) >= 0:\n            b[i] = 1\n            B -= pow(2, i)\n    (mx1, sm) = (-1, 0)\n    for i in range(mx):\n        if a[i] != b[i]:\n            sm += pow(2, i)\n            mx1 = i\n    if mx1 == -1:\n        print(0)\n    elif N <= pow(2, mx1):\n        print(-1)\n    elif N > pow(2, mx1) and N <= sm:\n        print(2)\n    else:\n        print(1)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        d = a ^ b\n        m = math.floor(math.log(d, 2))\n        m = pow(2, m)\n        if m >= c:\n            print(-1)\n        elif c > d:\n            print(1)\n        else:\n            print(2)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        d = a ^ b\n        m = math.floor(math.log(d, 2))\n        m = pow(2, m)\n        if m >= c:\n            print(-1)\n        elif c > d:\n            print(1)\n        else:\n            print(2)", "import math\nfor _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    x = a ^ b\n    n -= 1\n    if x == 0:\n        print(0)\n    elif x <= n:\n        print(1)\n    elif n > 0 and int(math.log2(x)) == int(math.log2(n)):\n        print(2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n        continue\n    val = a ^ b\n    if val < n:\n        print(1)\n        continue\n    while val >= n:\n        val = val - (val & -val)\n    if val:\n        print(2)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    x = a ^ b\n    n -= 1\n    if x == 0:\n        print(0)\n    elif x <= n:\n        print(1)\n    elif n > 0 and int(math.log2(x)) == int(math.log2(n)):\n        print(2)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n        continue\n    val = a ^ b\n    if val < n:\n        print(1)\n        continue\n    while val >= n:\n        val = val - (val & -val)\n    if val:\n        print(2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n        continue\n    val = a ^ b\n    if val < n:\n        print(1)\n        continue\n    while val >= n:\n        val = val - (val & -val)\n    if val:\n        print(2)\n    else:\n        print(-1)", "import math\ntc = int(input().strip())\nfor t in range(tc):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        x = a ^ b\n        if x < n:\n            print(1)\n        else:\n            while x >= n:\n                x -= x & -x\n            if x:\n                print(2)\n            else:\n                print(-1)", "import math\ntc = int(input().strip())\nfor t in range(tc):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        x = a ^ b\n        if x < n:\n            print(1)\n        else:\n            while x >= n:\n                x -= x & -x\n            if x:\n                print(2)\n            else:\n                print(-1)", "test = int(input())\nfor _ in range(test):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n        continue\n    val = a ^ b\n    if val < n:\n        print(1)\n        continue\n    while val >= n:\n        val = val - (val & -val)\n    if val:\n        print(2)\n    else:\n        print(-1)", "import math\ntc = int(input().strip())\nfor t in range(tc):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        x = a ^ b\n        if x < n:\n            print(1)\n        else:\n            while x >= n:\n                x -= x & -x\n            if x:\n                print(2)\n            else:\n                print(-1)", "n = int(input())\nwhile n:\n    n -= 1\n    (a, b, N) = map(int, input().split())\n    if a == b:\n        print(0)\n        continue\n    x = a ^ b\n    b = len(bin(x)[2:]) - 1\n    if x < N:\n        print(1)\n    elif N <= x and N >= 2 ** b + 1:\n        print(2)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    (A, B, N) = map(int, input().split())\n    X = A ^ B\n    N -= 1\n    if X == 0:\n        print(0)\n    elif X <= N:\n        print(1)\n    elif N > 0 and int(math.log2(X)) == int(math.log2(N)):\n        print(2)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    (A, B, N) = map(int, input().split())\n    X = A ^ B\n    N -= 1\n    if X == 0:\n        print(0)\n    elif X <= N:\n        print(1)\n    elif N > 0 and int(math.log2(X)) == int(math.log2(N)):\n        print(2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n        continue\n    t = a ^ b\n    b = len(bin(t)[2:]) - 1\n    if n > t:\n        print(1)\n    elif n <= t and n >= 2 ** b + 1:\n        print(2)\n    else:\n        print('-1')", "T = int(input())\nfor x in range(T):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n        continue\n    v = a ^ b\n    if v < n:\n        print(1)\n        continue\n    while v >= n:\n        v = v - (v & -v)\n    if v:\n        print(2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    p = a ^ b\n    if p == 0:\n        print(0)\n    elif p < n:\n        print(1)\n    elif 2 ** (len(bin(p)) - 3) < n:\n        print(2)\n    else:\n        print(-1)", "def solve(a, b, n):\n    if a == b:\n        print(0)\n        return\n    x = a ^ b\n    if x < n:\n        print(1)\n    elif 2 ** (len(bin(x)) - 3) < n:\n        print(2)\n    else:\n        print(-1)\nt = int(input())\nfor _ in range(t):\n    (a, b, n) = list(map(int, input().split()))\n    solve(a, b, n)", "for _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        x = a ^ b\n        if x < n:\n            print(1)\n        elif 2 ** (len(bin(x)) - 3) < n:\n            print(2)\n        else:\n            print(-1)", "for q in range(int(input())):\n    (a, b, n) = [int(x) for x in input().split()]\n    if a == b:\n        print(0)\n        continue\n    x = a ^ b\n    if x < n:\n        print(1)\n    elif 2 ** (len(bin(x)) - 3) < n:\n        print(2)\n    else:\n        print(-1)", "def op(a, b, n):\n    arra = [0 for i in range(30)]\n    arrb = [0 for i in range(30)]\n    j = 29\n    while a > 0 or b > 0:\n        arra[j] = a & 1\n        arrb[j] = b & 1\n        a >>= 1\n        b >>= 1\n        j -= 1\n    j = 29\n    val = 0\n    res = 0\n    countbits = 0\n    while j >= 0:\n        if arra[j] == arrb[j]:\n            val += pow(2, 29 - j) * 0\n        else:\n            val += pow(2, 29 - j) * 1\n            countbits += 1\n        if val >= n:\n            if countbits > 1:\n                res += 1\n                countbits = 0\n                val = 0\n                continue\n            else:\n                return -1\n        j -= 1\n    if countbits > 0 and val < n:\n        res += 1\n    return res\ncase = int(input())\nfor i in range(case):\n    (a, b, n) = map(int, input().split(' '))\n    ans = op(a, b, n)\n    print(ans)", "from math import log, pow\nfor _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    c = a ^ b\n    if c == 0:\n        print(0)\n    elif c < n:\n        print(1)\n    elif pow(2, int(log(c, 2))) < n:\n        print(2)\n    else:\n        print(-1)", "import math\ntests = int(input())\nfor i in range(tests):\n    (a, b, n) = map(int, input().split())\n    required = a ^ b\n    if required == 0:\n        print(0)\n    elif n - 1 <= 0 or math.floor(math.log(required, 2)) > math.floor(math.log(n - 1, 2)):\n        print(-1)\n    elif n > required:\n        print(1)\n    else:\n        print(2)", "from math import log\nfor _ in range(int(input())):\n    (a, b, n) = map(int, input().split(' '))\n    x = a ^ b\n    if a ^ b == 0:\n        print(0)\n        continue\n    if a ^ b < n:\n        print(1)\n    elif int(log(x, 2)) == int(log(n, 2)):\n        if n & n - 1:\n            print(2)\n        else:\n            print(-1)\n    else:\n        print(-1)", "from math import log, pow\nt = int(input())\nfor _ in range(t):\n    (a, b, n) = map(int, input().split())\n    c = a ^ b\n    if c == 0:\n        print(0)\n    elif c < n:\n        print(1)\n    elif pow(2, int(log(c, 2))) < n:\n        print(2)\n    else:\n        print(-1)", "from math import log, pow\nt = int(input())\nfor _ in range(t):\n    (a, b, n) = map(int, input().split())\n    c = a ^ b\n    if c == 0:\n        print(0)\n    elif c < n:\n        print(1)\n    elif pow(2, int(log(c, 2))) < n:\n        print(2)\n    else:\n        print(-1)", "from math import log\nfor t in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        x = a ^ b\n        if x < n:\n            print(1)\n        elif int(log(x, 2)) == int(log(n, 2)):\n            if n & n - 1:\n                print(2)\n            else:\n                print(-1)\n        else:\n            print(-1)", "from math import log, pow\nfor _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    c = a ^ b\n    if c == 0:\n        print(0)\n    elif c < n:\n        print(1)\n    elif pow(2, int(log(c, 2))) < n:\n        print(2)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    c = a ^ b\n    if c == 0:\n        print(0)\n    elif c < n:\n        print(1)\n    elif pow(2, int(math.log(c, 2))) < n:\n        print(2)\n    else:\n        print(-1)", "import math\ntests = int(input())\nfor i in range(tests):\n    (a, b, n) = map(int, input().split())\n    required = a ^ b\n    if required == 0:\n        print(0)\n    elif n - 1 <= 0 or math.floor(math.log(required, 2)) > math.floor(math.log(n - 1, 2)):\n        print(-1)\n    elif n > required:\n        print(1)\n    else:\n        print(2)", "for i in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    x = a ^ b\n    if x == 0:\n        print(0)\n    elif x < n:\n        print(1)\n    elif x > 1 and len(bin(x)) == len(bin(n - 1)):\n        print(2)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    x = a ^ b\n    if x == 0:\n        print(0)\n    elif x < n:\n        print(1)\n    elif x > 1 and len(bin(x)) == len(bin(n - 1)):\n        print(2)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    x = a ^ b\n    if x == 0:\n        print(0)\n    elif x < n:\n        print(1)\n    elif x > 1 and len(bin(x)) == len(bin(n - 1)):\n        print(2)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    x = a ^ b\n    if x == 0:\n        print(0)\n    elif x < n:\n        print(1)\n    elif x > 1 and len(bin(x)) == len(bin(n - 1)):\n        print(2)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    x = a ^ b\n    if x == 0:\n        print(0)\n    elif x < n:\n        print(1)\n    elif x > 1 and len(bin(x)) == len(bin(n - 1)):\n        print(2)\n    else:\n        print(-1)", "T = int(input())\n\ndef check(N):\n    l = len(bin(N)) - 2\n    temp = 2 ** (l - 1)\n    if temp == N:\n        return False\n    return True\nfor i in range(0, T):\n    (A, B, N) = map(int, input().split())\n    C = A ^ B\n    if A == B:\n        print(0)\n    elif C < N:\n        print(1)\n    elif C > N and len(bin(C)) == len(bin(N)) and check(N):\n        print(2)\n    elif C == N:\n        if check(N):\n            print(2)\n        else:\n            print(-1)\n    else:\n        print(-1)", "import math\nfor i in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    res = a ^ b\n    if res == 0:\n        print(0)\n    elif res < n:\n        print(1)\n    elif res > 1 and len(bin(res)) == len(bin(n - 1)):\n        print(2)\n    else:\n        print(-1)", "import math\nfor i in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    res = a ^ b\n    if res == 0:\n        print(0)\n    elif res < n:\n        print(1)\n    elif res == 1:\n        print(-1)\n    elif len(bin(res)) == len(bin(n - 1)):\n        print(2)\n    else:\n        print(-1)", "import math\nfor i in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    res = a ^ b\n    if res == 0:\n        print(0)\n    elif res < n:\n        print(1)\n    elif res - 1 > 0 and len(bin(res)) == len(bin(n - 1)):\n        print(2)\n    else:\n        print(-1)", "def countbit(n):\n    count = 0\n    while n > 0:\n        n >>= 1\n        count += 1\n    return count\nT = int(input())\nwhile T > 0:\n    (a, b, n) = map(int, input().split())\n    t = a ^ b\n    if t == 0:\n        print(0)\n    elif 0 < t < n:\n        print(1)\n    elif countbit(t) == countbit(n - 1):\n        print(2)\n    else:\n        print(-1)\n    T -= 1", "from bisect import bisect_left\nfrom code import interact\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nfrom pydoc import plain\nfrom re import X\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor _ in range(ii()):\n    (a, b, n) = il()\n    a = bin(a)[2:]\n    b = bin(b)[2:]\n    if len(a) > len(b):\n        b = '0' * (len(a) - len(b)) + b\n    if len(b) > len(a):\n        a = '0' * (len(b) - len(a)) + a\n    cost = 0\n    flag = True\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            if 2 ** (len(a) - i - 1) > n - 1:\n                print(-1)\n                flag = False\n                break\n            else:\n                cost += 2 ** (len(a) - i - 1)\n    if flag:\n        if cost == 0:\n            print(0)\n        elif cost <= n - 1:\n            print(1)\n        else:\n            print(2)", "import math\nT = int(input())\nfor _ in range(T):\n    (A, B, N) = map(int, input().split())\n    X = A ^ B\n    if A == B:\n        print(0)\n    elif X < N:\n        print(1)\n    else:\n        A = 2 ** int(math.log2(X))\n        if A < N:\n            print(2)\n        else:\n            print(-1)", "import math\nT = int(input())\nfor _ in range(T):\n    (A, B, N) = map(int, input().split())\n    X = A ^ B\n    if A == B:\n        print(0)\n    elif X < N:\n        print(1)\n    else:\n        A = 2 ** int(math.log2(X))\n        if A < N:\n            print(2)\n        else:\n            print(-1)", "import math\nfor _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    c = a ^ b\n    if n == 1 and c != 0:\n        print(-1)\n    elif c == 0:\n        print(0)\n    elif c < n:\n        print(1)\n    elif math.floor(math.log(n - 1, 2)) == math.floor(math.log(c, 2)):\n        print(2)\n    else:\n        print(-1)", "from bisect import bisect_left\nfrom code import interact\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nfrom pydoc import plain\nfrom re import X\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor _ in range(ii()):\n    (a, b, n) = il()\n    a = bin(a)[2:]\n    b = bin(b)[2:]\n    if len(a) > len(b):\n        b = '0' * (len(a) - len(b)) + b\n    if len(b) > len(a):\n        a = '0' * (len(b) - len(a)) + a\n    cost = 0\n    flag = True\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            if 2 ** (len(a) - i - 1) > n - 1:\n                print(-1)\n                flag = False\n                break\n            else:\n                cost += 2 ** (len(a) - i - 1)\n    if flag:\n        if cost == 0:\n            print(0)\n        elif cost <= n - 1:\n            print(1)\n        else:\n            print(2)", "def function(A, B, N):\n    if A == B:\n        return 0\n    val = A ^ B\n    if val < N:\n        return 1\n    else:\n        c1 = 0\n        c2 = 0\n        N = N - 1\n        while val:\n            if N:\n                c1 += 1\n                N = N >> 1\n            c2 += 1\n            val = val >> 1\n        if c1 == c2:\n            return 2\n        else:\n            return -1\n\ndef main():\n    T = int(input())\n    for _ in range(T):\n        (A, B, N) = list(map(int, input().split(' ')))\n        val = function(A, B, N)\n        print(val)\nmain()", "import math\nT = int(input())\nfor _ in range(T):\n    (A, B, N) = map(int, input().split())\n    N = N - 1\n    X = A ^ B\n    if X == 0:\n        print(0)\n    elif X <= N:\n        print(1)\n    elif N != 0 and int(math.log2(X)) == int(math.log2(N)):\n        print(2)\n    else:\n        print(-1)", "import math\nT = int(input())\nfor _ in range(T):\n    (A, B, N) = map(int, input().split())\n    N = N - 1\n    X = A ^ B\n    if X == 0:\n        print(0)\n    elif X <= N:\n        print(1)\n    elif N != 0 and int(math.log2(X)) == int(math.log2(N)):\n        print(2)\n    else:\n        print(-1)", "def answer(a, b, n):\n    if a == b:\n        return 0\n    xor = a ^ b\n    if xor < n:\n        return 1\n    z = 1\n    while z < n:\n        z *= 2\n    if xor < z:\n        return 2\n    return -1\nfor T in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    print(answer(a, b, n))", "for i in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n        continue\n    if a ^ b < n:\n        print(1)\n        continue\n    if len(bin(a ^ b)) == len(bin(n - 1)) and n > 1:\n        print(2)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    c = x ^ y\n    z = 1\n    while z < n:\n        z *= 2\n    if c == 0:\n        print(0)\n    elif c < n:\n        print(1)\n    elif c < z:\n        print(2)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    c = x ^ y\n    z = 1\n    while z < n:\n        z *= 2\n    if c == 0:\n        print(0)\n    elif c < n:\n        print(1)\n    elif c < z:\n        print(2)\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    li = [int(x) for x in input().split()]\n    a = li[0]\n    b = li[1]\n    n = li[2]\n    c = a ^ b\n    z = 1\n    while z < n:\n        z *= 2\n    if c == 0:\n        print(0)\n    elif c < n:\n        print(1)\n    elif c < z:\n        print(2)\n    else:\n        print(-1)\n    t -= 1", "import math\nfor _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    c = a ^ b\n    z = 1\n    while z < n:\n        z *= 2\n    if c == 0:\n        print(0)\n    elif c < n:\n        print(1)\n    elif c < z:\n        print(2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (A, B, N) = map(int, input().split())\n    X = A ^ B\n    if X == 0:\n        print(0)\n    elif 1 <= X < N:\n        print(1)\n    elif N != 1 and len(str(bin(X))) == len(str(bin(N - 1))):\n        print(2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (A, B, N) = map(int, input().split())\n    X = A ^ B\n    if X == 0:\n        print(0)\n    elif 1 <= X < N:\n        print(1)\n    elif N != 1 and len(str(bin(X))) == len(str(bin(N - 1))):\n        print(2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (A, B, N) = map(int, input().split())\n    X = A ^ B\n    if A == B:\n        print(0)\n    elif 1 <= X < N:\n        print(1)\n    elif N != 1 and len(str(bin(X))) == len(str(bin(N - 1))):\n        print(2)\n    else:\n        print(-1)", "from math import log\nfor t in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        x = a ^ b\n        if x < n:\n            print(1)\n        elif int(log(x, 2)) == int(log(n, 2)):\n            if n & n - 1:\n                print(2)\n            else:\n                print(-1)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = 1\n        while c < n:\n            c *= 2\n        if a ^ b < n:\n            print(1)\n        elif a ^ b < c:\n            print(2)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = 1\n        while c < n:\n            c *= 2\n        if a ^ b < n:\n            print(1)\n        elif a ^ b < c:\n            print(2)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = 1\n        while c < n:\n            c *= 2\n        if a ^ b < n:\n            print(1)\n        elif a ^ b < c:\n            print(2)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = 1\n        while c < n:\n            c *= 2\n        if a ^ b < n:\n            print(1)\n        elif a ^ b < c:\n            print(2)\n        else:\n            print(-1)", "import math\nfor _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    xor = a ^ b\n    n -= 1\n    if xor == 0:\n        print(0)\n    elif xor <= n:\n        print(1)\n    elif n != 0 and int(math.log2(xor)) == int(math.log2(n)):\n        print(2)\n    else:\n        print(-1)", "for t in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n        continue\n    (bina, binb) = (bin(a)[:1:-1], bin(b)[:1:-1])\n    (la, lb) = (len(bina), len(binb))\n    diff = ''\n    for i in range(min(la, lb)):\n        if bina[i] == binb[i]:\n            diff += '0'\n        else:\n            diff += '1'\n    if la > lb:\n        diff += bina[lb:]\n    if la < lb:\n        diff += binb[la:]\n    diff = diff[::-1].lstrip('0')\n    if int(diff, 2) < n:\n        print(1)\n        continue\n    newdiff = diff[0] + '0' * (len(diff) - 1)\n    if int(newdiff, 2) < n:\n        print(2)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    x = a ^ b\n    c -= 1\n    if x == 0:\n        print(0)\n    elif x <= c:\n        print(1)\n    elif c != 0 and int(math.log2(x)) == int(math.log2(c)):\n        print(2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    x = a ^ b\n    z = 1\n    while z < c:\n        z *= 2\n    if x == 0:\n        print(0)\n    elif x < c:\n        print(1)\n    elif x < z:\n        print(2)\n    else:\n        print(-1)", "from math import sqrt, ceil, floor, gcd, log2\nimport sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import combinations, groupby\nfrom time import time\nfrom heapq import heappop, heappush, heapify\nt = int(input())\nfor _ in range(t):\n    (a, b, n) = map(int, input().split())\n    z = 1\n    while z < n:\n        z *= 2\n    if a == b:\n        print(0)\n    elif a ^ b < n:\n        print(1)\n    elif a ^ b < z:\n        print(2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (a, b, n) = (int(i) for i in input().split())\n    c = a ^ b\n    if a == b:\n        print(0)\n        continue\n    if c < n:\n        print(1)\n    elif 2 ** (len(bin(c)) - 3) < n:\n        print(2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (a, b, n) = list(map(int, input().split()))\n    s = 1\n    while s < n:\n        s *= 2\n    if a == b:\n        print(0)\n    elif a ^ b < n:\n        print(1)\n    elif a ^ b < s:\n        print(2)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    lis = list(map(int, input().split()))\n    s = bin(lis[0]).replace('0b', '')\n    t = bin(lis[1]).replace('0b', '')\n    n = lis[2]\n    c = 0\n    s = s[::-1]\n    t = t[::-1]\n    l1 = [0] * 32\n    l2 = [0] * 32\n    for i in range(len(s)):\n        if s[i] == '1':\n            l1[i] = 1\n    for i in range(len(t)):\n        if t[i] == '1':\n            l2[i] = 1\n    l3 = []\n    k = True\n    for i in range(32):\n        if l1[i] != l2[i]:\n            if math.pow(2, i) >= n:\n                k = False\n            else:\n                l3.append(int(math.pow(2, i)))\n    i = 0\n    if k == True:\n        c = 0\n        while i < len(l3):\n            ss = 0\n            j = i\n            while j < len(l3) and ss + l3[j] < n:\n                ss += l3[j]\n                j += 1\n            ss = 0\n            c += 1\n            i = j\n        print(c)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (a, b, n) = list(map(int, input().split()))\n    s = 1\n    while s < n:\n        s *= 2\n    if a == b:\n        print(0)\n    elif a ^ b < n:\n        print(1)\n    elif a ^ b < s:\n        print(2)\n    else:\n        print(-1)", "ans = []\nfor _ in range(int(input())):\n    (A, B, N) = [int(x) for x in input().split()]\n    AexorB = A ^ B\n    (binAexorB, binN) = (bin(AexorB)[2:], bin(N - 1)[2:])\n    if A == B:\n        an = 0\n    elif AexorB < N:\n        an = 1\n    elif N != 1 and len(binAexorB) == len(binN):\n        an = 2\n    else:\n        an = -1\n    ans.append(an)\nprint(*ans, sep='\\n')", "t = int(input())\nfor _ in range(t):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        z = 1\n        while z < n:\n            z *= 2\n        if a ^ b < n:\n            print(1)\n        elif a ^ b < z:\n            print(2)\n        else:\n            print(-1)", "t = int(input())\nfor _ in range(t):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        z = 1\n        while z < n:\n            z *= 2\n        if a ^ b < n:\n            print(1)\n        elif a ^ b < z:\n            print(2)\n        else:\n            print(-1)", "t = int(input())\nfor i in range(0, t):\n    abn = input()\n    abn = abn.split(' ')\n    a = int(abn[0])\n    b = int(abn[1])\n    n = int(abn[2])\n    ai = bin(a)\n    ai = ai.replace('0b', '')\n    bi = bin(b)\n    bi = bi.replace('0b', '')\n    mi = bin(n - 1)\n    mi = mi.replace('0b', '')\n    l = max(len(ai), len(bi), len(mi))\n    ai = (l - len(ai)) * '0' + ai\n    bi = (l - len(bi)) * '0' + bi\n    mi = (l - len(mi)) * '0' + mi\n    x = ''\n    for i2 in range(0, l):\n        k = int(str(ai)[i2]) ^ int(str(bi)[i2])\n        x = x + str(k)\n    tr = 0\n    for i3 in range(0, l):\n        k2 = (mi[i3], x[i3])\n        if a == b:\n            tr = 0\n            break\n        if k2 == ('0', '0'):\n            continue\n        if k2 == ('1', '0'):\n            tr = 1\n            break\n        if k2 == ('1', '1'):\n            tr = 1\n            continue\n        if k2 == ('0', '1'):\n            if tr == 0:\n                tr = -1\n                break\n            else:\n                tr = 2\n                break\n    print(tr)", "for _ in range(int(input())):\n    (a, b, n) = (int(i) for i in input().split())\n    c = a ^ b\n    if a == b:\n        print(0)\n        continue\n    if c < n:\n        print(1)\n    elif 2 ** (len(bin(c)) - 3) < n:\n        print(2)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (a, b, n) = list(map(int, input().split()))\n    s = 1\n    while s < n:\n        s = s * 2\n    if a == b:\n        print(0)\n    elif a ^ b < n:\n        print(1)\n    elif a ^ b < s:\n        print(2)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (a, b, n) = list(map(int, input().split()))\n    s = 1\n    while s < n:\n        s = s * 2\n    if a == b:\n        print(0)\n    elif a ^ b < n:\n        print(1)\n    elif a ^ b < s:\n        print(2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    z = 1\n    while z < n:\n        z = z * 2\n    if a ^ b == 0:\n        print('0')\n    elif a ^ b < n:\n        print('1')\n    elif a ^ b < z:\n        print('2')\n    else:\n        print('-1')", "t = int(input())\n\ndef fun(a, b, n):\n    if a == b:\n        return 0\n    x = a ^ b\n    if x < n:\n        return 1\n    c = 0\n    while x > 0:\n        x = x >> 1\n        c = c + 1\n    if 2 ** (c - 1) < n:\n        return 2\n    return -1\nwhile t > 0:\n    (a, b, n) = [int(i) for i in input().split()]\n    print(fun(a, b, n))\n    t = t - 1", "from math import log2\nfor _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n        continue\n    req = 0\n    for i in range(30):\n        if a & 1 << i != b & 1 << i:\n            req += 1 << i\n    if req < n:\n        print(1)\n    elif 1 << int(log2(req)) < n:\n        print(2)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (a, b, n) = map(int, input().split())\n    x = a ^ b\n    if a == b:\n        print('0')\n    elif x < n:\n        print('1')\n    elif x ^ n - 1 < n:\n        print('2')\n    else:\n        print('-1')", "ans = ''\nfor _ in range(int(input())):\n    (a, b, n) = list(map(int, input().split()))\n    count = 0\n    poss = True\n    if a == b:\n        count = 0\n    elif a ^ b < n:\n        count = 1\n    else:\n        for i in range(31, -1, -1):\n            if (a ^ b) & 1 << i >= n:\n                poss = False\n                break\n        if not poss:\n            ans += '-1\\n'\n            continue\n        else:\n            count = 2\n    ans += str(count) + '\\n'\nprint(ans)", "from math import log, floor\ntest = int(input())\nwhile test:\n    (a, b, n) = map(int, input().split())\n    n -= 1\n    if a == b:\n        print(0)\n    elif a ^ b <= n:\n        print(1)\n    elif n != 0 and floor(log(a ^ b, 2)) == floor(log(n, 2)):\n        print(2)\n    else:\n        print(-1)\n    test -= 1", "from math import log, floor\ntest = int(input())\nwhile test:\n    (a, b, n) = map(int, input().split())\n    n -= 1\n    if a == b:\n        print(0)\n    elif a ^ b <= n:\n        print(1)\n    elif n != 0 and floor(log(a ^ b, 2)) == floor(log(n, 2)):\n        print(2)\n    else:\n        print(-1)\n    test -= 1", "import math\nt = int(input())\nfor _ in range(t):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n        continue\n    x = a ^ b\n    z = 1\n    while z < n:\n        z *= 2\n    if x == 0:\n        print(0)\n    elif x < n:\n        print(1)\n    elif x < z:\n        print(2)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    li = list(map(int, input().split()))\n    a = li[0]\n    b = li[1]\n    n = li[2]\n    n -= 1\n    if a == b:\n        print(0)\n        continue\n    q = a ^ b\n    temp = q\n    res = 0\n    while temp:\n        if res:\n            res *= 2\n        else:\n            res = 1\n        temp = temp >> 1\n    if n < res:\n        print(-1)\n    elif n >= q:\n        print(1)\n    else:\n        print(2)", "import math\nfor _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a == b:\n        print(0)\n        continue\n    ans = a ^ b\n    z = 1\n    while z < n:\n        z *= 2\n    if ans < n:\n        print(1)\n    elif ans < z:\n        print(2)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    (x, y, N) = map(int, input().split())\n    d = x ^ y\n    if d == 0:\n        print(0)\n    elif d in range(1, N):\n        print(1)\n    elif 2 ** (len(bin(d)) - 3) >= N:\n        print(-1)\n    else:\n        print(2)", "t = int(input())\nwhile t:\n    (a, b, n) = map(int, input().split(' '))\n    num = 0\n    count = 0\n    flag = False\n    for i in range(29, -1, -1):\n        val = 1 << i\n        if a & val and (not b & val):\n            if val >= n:\n                print(-1)\n                break\n            else:\n                if num + val >= n:\n                    count += 1\n                    a ^= num\n                    num = val\n                else:\n                    num += val\n                flag = True\n    else:\n        for i in range(30):\n            val = 1 << i\n            if b & val and (not a & val):\n                if val >= n:\n                    print(-1)\n                    break\n                elif num + val >= n:\n                    count += 1\n                    a ^= num\n                    num = val\n                else:\n                    num += val\n                flag = True\n        else:\n            if flag:\n                count += 1\n            print(count)\n    t -= 1", "T = int(input())\n\ndef algo():\n    (x, y, N) = map(int, input().split())\n    d = x ^ y\n    if d == 0:\n        print(0)\n    elif d in range(1, N):\n        print(1)\n    elif 2 ** (len(bin(d)) - 3) >= N:\n        print(-1)\n    else:\n        print(2)\nfor i in range(T):\n    algo()"]