["def find(x, y):\n    (l, r) = (1, b - a + 1)\n    while l <= r:\n        mid = (l + r) // 2\n        n = mid + a - 1\n        n = n * (n + 1) // 2 - u\n        if n < x:\n            m = b - mid\n            m = v - m * (m + 1) // 2\n            if m >= x:\n                return True\n            l = mid + 1\n        if n >= x and n <= y:\n            return True\n        if n > y:\n            r = mid - 1\n    return False\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (l, r) = ([], [])\n    for _ in range(n):\n        (x, y) = map(int, input().split())\n        l.append(x)\n        r.append(y)\n    l.sort()\n    r.sort()\n    ans = 0\n    (u, v) = (a * (a - 1) // 2, b * (b + 1) // 2)\n    (temp, j) = (0, 0)\n    t = []\n    for i in l:\n        while i > r[j]:\n            q = t.pop()\n            if ans < temp:\n                if find(q, r[j]):\n                    ans = temp\n            j = j + 1\n            temp = temp - 1\n        temp = temp + 1\n        t.append(i)\n        if ans < temp:\n            if find(i, r[j]):\n                ans = temp\n    while len(t):\n        if ans < len(t):\n            if find(t.pop(), r[j]):\n                ans = len(t) + 1\n            j = j + 1\n            continue\n        break\n    print(ans)", "def find(x, y):\n    (l, r) = (1, b - a + 1)\n    while l <= r:\n        mid = (l + r) // 2\n        n = mid + a - 1\n        n = n * (n + 1) // 2 - u\n        if n < x:\n            m = b - mid\n            m = v - m * (m + 1) // 2\n            if m >= x:\n                return True\n            l = mid + 1\n        if n >= x and n <= y:\n            return True\n        if n > y:\n            r = mid - 1\n    return False\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (l, r) = ([], [])\n    for _ in range(n):\n        (x, y) = map(int, input().split())\n        l.append(x)\n        r.append(y)\n    l.sort()\n    r.sort()\n    ans = 0\n    (u, v) = (a * (a - 1) // 2, b * (b + 1) // 2)\n    (temp, j) = (0, 0)\n    t = []\n    for i in l:\n        while i > r[j]:\n            q = t.pop()\n            if ans < temp:\n                if find(q, r[j]):\n                    ans = temp\n            j = j + 1\n            temp = temp - 1\n        temp = temp + 1\n        t.append(i)\n        if ans < temp:\n            if find(i, r[j]):\n                ans = temp\n    while len(t):\n        if ans < len(t):\n            if find(t.pop(), r[j]):\n                ans = len(t) + 1\n            j = j + 1\n            continue\n        break\n    print(ans)", "def find(x, y):\n    (l, r) = (1, b - a + 1)\n    while l <= r:\n        mid = (l + r) // 2\n        n = mid + a - 1\n        n = n * (n + 1) // 2 - u\n        if n < x:\n            m = b - mid\n            m = v - m * (m + 1) // 2\n            if m >= x:\n                return True\n            l = mid + 1\n        if n >= x and n <= y:\n            return True\n        if n > y:\n            r = mid - 1\n    return False\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (l, r) = ([], [])\n    for _ in range(n):\n        (x, y) = map(int, input().split())\n        l.append(x)\n        r.append(y)\n    l.sort()\n    r.sort()\n    ans = 0\n    (u, v) = (a * (a - 1) // 2, b * (b + 1) // 2)\n    (temp, j) = (0, 0)\n    t = []\n    for i in l:\n        while i > r[j]:\n            q = t.pop()\n            if ans < temp:\n                if find(q, r[j]):\n                    ans = temp\n            j = j + 1\n            temp = temp - 1\n        temp = temp + 1\n        t.append(i)\n        if ans < temp:\n            if find(i, r[j]):\n                ans = temp\n    while len(t):\n        if ans < len(t):\n            if find(t.pop(), r[j]):\n                ans = len(t) + 1\n            j = j + 1\n            continue\n        break\n    print(ans)", "def find(x, y):\n    (l, r) = (1, b - a + 1)\n    while l <= r:\n        mid = (l + r) // 2\n        n = mid + a - 1\n        n = n * (n + 1) // 2 - u\n        if n < x:\n            m = b - mid\n            m = v - m * (m + 1) // 2\n            if m >= x:\n                return True\n            l = mid + 1\n        if n >= x and n <= y:\n            return True\n        if n > y:\n            r = mid - 1\n    return False\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (l, r) = ([], [])\n    for _ in range(n):\n        (x, y) = map(int, input().split())\n        l.append(x)\n        r.append(y)\n    l.sort()\n    r.sort()\n    ans = 0\n    (u, v) = (a * (a - 1) // 2, b * (b + 1) // 2)\n    (temp, j) = (0, 0)\n    t = []\n    for i in l:\n        while i > r[j]:\n            q = t.pop()\n            if ans < temp:\n                if find(q, r[j]):\n                    ans = temp\n            j = j + 1\n            temp = temp - 1\n        temp = temp + 1\n        t.append(i)\n        if ans < temp:\n            if find(i, r[j]):\n                ans = temp\n    while len(t):\n        if ans < len(t):\n            if find(t.pop(), r[j]):\n                ans = len(t) + 1\n            j = j + 1\n            continue\n        break\n    print(ans)", "import sys\nreadline = sys.stdin.readline\nns = lambda : readline().rstrip()\nni = lambda : int(readline().rstrip())\nnm = lambda : map(int, readline().split())\nnl = lambda : list(map(int, readline().split()))\n\ndef solve():\n    (n, a, b) = nm()\n    lr = [tuple(nm()) for _ in range(n)]\n    event = [(l, 1) for (l, r) in lr] + [(r + 1, -1) for (l, r) in lr] + [(10 ** 20, 0)]\n    event.sort()\n    ans = cur = 0\n    bef = 0\n    for (t, v) in event:\n        (l, r, c) = (bef, t - 1, cur)\n        bef = t\n        cur += v\n        if ans >= c:\n            continue\n        ok = 0\n        ng = b - a + 2\n        while ng - ok > 1:\n            mid = (ok + ng) // 2\n            if (b + b - mid + 1) * mid // 2 < l:\n                ok = mid\n            else:\n                ng = mid\n        if ok < b - a + 1 and (a + a + ok) * (ok + 1) // 2 <= r:\n            ans = c\n    print(ans)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "import sys\nreadline = sys.stdin.readline\nns = lambda : readline().rstrip()\nni = lambda : int(readline().rstrip())\nnm = lambda : map(int, readline().split())\nnl = lambda : list(map(int, readline().split()))\n\ndef solve():\n    (n, a, b) = nm()\n    lr = [tuple(nm()) for _ in range(n)]\n    event = [(l, 1) for (l, r) in lr] + [(r + 1, -1) for (l, r) in lr] + [(10 ** 20, 0)]\n    event.sort()\n    ans = cur = 0\n    bef = 0\n    for (t, v) in event:\n        (l, r, c) = (bef, t - 1, cur)\n        bef = t\n        cur += v\n        if ans >= c:\n            continue\n        ok = 0\n        ng = b - a + 2\n        while ng - ok > 1:\n            mid = (ok + ng) // 2\n            if (b + b - mid + 1) * mid // 2 < l:\n                ok = mid\n            else:\n                ng = mid\n        if ok < b - a + 1 and (a + a + ok) * (ok + 1) // 2 <= r:\n            ans = c\n    print(ans)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()"]