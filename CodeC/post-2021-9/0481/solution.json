["for _ in range(int(input())):\n    S = input()\n    if '1' not in S:\n        print(S)\n        continue\n    k = S.rfind('1')\n    suf = S[k:]\n    S = S[:k]\n    k = S.count('0')\n    if k & 1:\n        if '0' in suf:\n            print(S.replace('0', '') + suf[:-1])\n        elif S[-1] == '1':\n            print(S.replace('0', ''))\n        elif S[-2] == '0':\n            print(S.replace('0', '') + '01')\n        elif S.rfind('0', 0, -1) - S.find('0') + 1 != k - 1:\n            print(S.replace('0', '') + '01')\n        else:\n            print(S.replace('0', ''))\n    elif S.rfind('0') - S.find('0') + 1 != k:\n        print(S.replace('0', '') + suf)\n    elif len(suf) >= 3:\n        print(S.replace('0', '') + suf[:-2])\n    elif len(suf) == 2:\n        if S[-1] == '1':\n            print(S.replace('0', ''))\n        else:\n            print(S.replace('0', '') + '01')\n    elif S.endswith('11'):\n        print(S.replace('0', '')[:-1])\n    elif S[-1] == '1':\n        print(S.replace('0', '')[:-1] + '01')\n    else:\n        print(S.replace('0', '') + '001')", "for _ in range(int(input())):\n    S = input()\n    if '1' not in S:\n        print(S)\n        continue\n    k = S.rfind('1')\n    suf = S[k:]\n    S = S[:k]\n    k = S.count('0')\n    if k & 1:\n        if '0' in suf:\n            print(S.replace('0', '') + suf[:-1])\n        elif S[-1] == '1':\n            print(S.replace('0', ''))\n        elif S[-2] == '0':\n            print(S.replace('0', '') + '01')\n        elif S.rfind('0', 0, -1) - S.find('0') + 1 != k - 1:\n            print(S.replace('0', '') + '01')\n        else:\n            print(S.replace('0', ''))\n    elif S.rfind('0') - S.find('0') + 1 != k:\n        print(S.replace('0', '') + suf)\n    elif len(suf) >= 3:\n        print(S.replace('0', '') + suf[:-2])\n    elif len(suf) == 2:\n        if S[-1] == '1':\n            print(S.replace('0', ''))\n        else:\n            print(S.replace('0', '') + '01')\n    elif S.endswith('11'):\n        print(S.replace('0', '')[:-1])\n    elif S[-1] == '1':\n        print(S.replace('0', '')[:-1] + '01')\n    else:\n        print(S.replace('0', '') + '001')", "for _ in range(int(input())):\n    S = input()\n    if '1' not in S:\n        print(S)\n        continue\n    k = S.rfind('1')\n    suf = S[k:]\n    S = S[:k]\n    k = S.count('0')\n    if k & 1:\n        if '0' in suf:\n            print(S.replace('0', '') + suf[:-1])\n        elif S[-1] == '1':\n            print(S.replace('0', ''))\n        elif S[-2] == '0':\n            print(S.replace('0', '') + '01')\n        elif S.rfind('0', 0, -1) - S.find('0') + 1 != k - 1:\n            print(S.replace('0', '') + '01')\n        else:\n            print(S.replace('0', ''))\n    elif S.rfind('0') - S.find('0') + 1 != k:\n        print(S.replace('0', '') + suf)\n    elif len(suf) >= 3:\n        print(S.replace('0', '') + suf[:-2])\n    elif len(suf) == 2:\n        if S[-1] == '1':\n            print(S.replace('0', ''))\n        else:\n            print(S.replace('0', '') + '01')\n    elif S.endswith('11'):\n        print(S.replace('0', '')[:-1])\n    elif S[-1] == '1':\n        print(S.replace('0', '')[:-1] + '01')\n    else:\n        print(S.replace('0', '') + '001')", "for _ in range(int(input())):\n    S = input()\n    if '1' not in S:\n        print(S)\n        continue\n    k = S.rfind('1')\n    suf = S[k:]\n    S = S[:k]\n    k = S.count('0')\n    if k & 1:\n        if '0' in suf:\n            print(S.replace('0', '') + suf[:-1])\n        elif S[-1] == '1':\n            print(S.replace('0', ''))\n        elif S[-2] == '0':\n            print(S.replace('0', '') + '01')\n        elif S.rfind('0', 0, -1) - S.find('0') + 1 != k - 1:\n            print(S.replace('0', '') + '01')\n        else:\n            print(S.replace('0', ''))\n    elif S.rfind('0') - S.find('0') + 1 != k:\n        print(S.replace('0', '') + suf)\n    elif len(suf) >= 3:\n        print(S.replace('0', '') + suf[:-2])\n    elif len(suf) == 2:\n        if S[-1] == '1':\n            print(S.replace('0', ''))\n        else:\n            print(S.replace('0', '') + '01')\n    elif S.endswith('11'):\n        print(S.replace('0', '')[:-1])\n    elif S[-1] == '1':\n        print(S.replace('0', '')[:-1] + '01')\n    else:\n        print(S.replace('0', '') + '001')", "def dell(a):\n    z = ''\n    if len(a) >= 3 and a[-1] == '1' and (a[-2] == '1'):\n        a[-1] = '$'\n        for i in range(len(a)):\n            if a[i] == '0':\n                a[i] = '$'\n                break\n        for i in range(len(a)):\n            if a[i] != '$':\n                z += a[i]\n        return [x for x in z]\n    else:\n        return a\n\ndef calc(s):\n    T = []\n    for (j, i) in enumerate(s):\n        if i == '0':\n            T.append(j)\n    if len(T) == 1:\n        return 1\n    if T[-1] == T[-2]:\n        return 1\n    for i in range(T[0], T[-2]):\n        if s[i] == '1':\n            return 1\n    return 2\n\ndef solve():\n    ans = ''\n    banana = input()\n    s = [x for x in banana]\n    a = ''\n    (t, p) = (0, 0)\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '1':\n            for j in range(i + 1):\n                a += s[j]\n            break\n        else:\n            t += 1\n    if t == len(s):\n        print(''.join(s))\n        return\n    s = [x for x in a]\n    for i in s:\n        if i == '0':\n            p += 1\n    if p == 0:\n        ans += ''.join(s)\n        for i in range(t):\n            ans += '0'\n        print(ans)\n        return\n    if p % 2 == 0:\n        (l, r) = (2147482647, -2147482647)\n        for (j, i) in enumerate(s):\n            if i == '0':\n                l = min(l, j)\n                r = max(r, j)\n        for i in s[l:r + 1]:\n            if i == '1':\n                for j in s:\n                    if j == '1':\n                        ans += '1'\n                for k in range(t):\n                    ans += '0'\n                print(ans)\n                return\n        if t >= 2:\n            for i in s:\n                if i == '1':\n                    ans += '1'\n            for i in range(t - 2):\n                ans += '0'\n            print(ans)\n            return\n        if t == 1:\n            a = ''\n            for i in range(len(s) - 1, -1, -1):\n                if s[i] == '0':\n                    s[i] = '$'\n                    break\n            for i in range(len(s)):\n                if s[i] == '$':\n                    a += '0'\n                elif s[i] == '1':\n                    a += '1'\n            s = [x for x in a]\n            print(''.join(dell(s)))\n            return\n        if t == 0:\n            lol = 0\n            a = ''\n            for i in range(len(s) - 1, -1, -1):\n                if s[i] == '0':\n                    s[i] = '$'\n                    lol += 1\n                    if lol == 2:\n                        break\n            for i in s:\n                if i == '$':\n                    a += '0'\n                elif i == '1':\n                    a += '1'\n            s = [x for x in a]\n            print(''.join(dell(dell(s))))\n            return\n    T = 0\n    L = calc(s)\n    a = ''\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '0':\n            T += 1\n            if T == L:\n                s[i] = '$'\n    for i in s:\n        if i == '1':\n            a += '1'\n        elif i == '$':\n            a += '0'\n    s = [x for x in a]\n    if t != 0:\n        for i in s:\n            if i == '1':\n                print('1', end='')\n        for i in range(t - 1):\n            print('0', end='')\n        return\n    print(''.join(dell([x for x in a])))\nfor _ in range(int(input())):\n    solve()\n    print()", "for _ in range(int(input())):\n    S = input()\n    if '1' not in S:\n        print(S)\n        continue\n    k = S.rfind('1')\n    suf = S[k:]\n    S = S[:k]\n    k = S.count('0')\n    if k & 1:\n        if '0' in suf:\n            print(S.replace('0', '') + suf[:-1])\n        elif S[-1] == '1':\n            print(S.replace('0', ''))\n        elif S[-2] == '0':\n            print(S.replace('0', '') + '01')\n        elif S.rfind('0', 0, -1) - S.find('0') + 1 != k - 1:\n            print(S.replace('0', '') + '01')\n        else:\n            print(S.replace('0', ''))\n    elif S.rfind('0') - S.find('0') + 1 != k:\n        print(S.replace('0', '') + suf)\n    elif len(suf) >= 3:\n        print(S.replace('0', '') + suf[:-2])\n    elif len(suf) == 2:\n        if S[-1] == '1':\n            print(S.replace('0', ''))\n        else:\n            print(S.replace('0', '') + '01')\n    elif S.endswith('11'):\n        print(S.replace('0', '')[:-1])\n    elif S[-1] == '1':\n        print(S.replace('0', '')[:-1] + '01')\n    else:\n        print(S.replace('0', '') + '001')", "for _ in range(int(input())):\n    S = input()\n    if '1' not in S:\n        print(S)\n        continue\n    k = S.rfind('1')\n    suf = S[k:]\n    S = S[:k]\n    k = S.count('0')\n    if k & 1:\n        if '0' in suf:\n            print(S.replace('0', '') + suf[:-1])\n        elif S[-1] == '1':\n            print(S.replace('0', ''))\n        elif S[-2] == '0':\n            print(S.replace('0', '') + '01')\n        elif S.rfind('0', 0, -1) - S.find('0') + 1 != k - 1:\n            print(S.replace('0', '') + '01')\n        else:\n            print(S.replace('0', ''))\n    elif S.rfind('0') - S.find('0') + 1 != k:\n        print(S.replace('0', '') + suf)\n    elif len(suf) >= 3:\n        print(S.replace('0', '') + suf[:-2])\n    elif len(suf) == 2:\n        if S[-1] == '1':\n            print(S.replace('0', ''))\n        else:\n            print(S.replace('0', '') + '01')\n    elif S.endswith('11'):\n        print(S.replace('0', '')[:-1])\n    elif S[-1] == '1':\n        print(S.replace('0', '')[:-1] + '01')\n    else:\n        print(S.replace('0', '') + '001')", "for _ in range(int(input())):\n    S = input()\n    if '1' not in S:\n        print(S)\n        continue\n    k = S.rfind('1')\n    suf = S[k:]\n    S = S[:k]\n    k = S.count('0')\n    if k & 1:\n        if '0' in suf:\n            print(S.replace('0', '') + suf[:-1])\n        elif S[-1] == '1':\n            print(S.replace('0', ''))\n        elif S[-2] == '0':\n            print(S.replace('0', '') + '01')\n        elif S.rfind('0', 0, -1) - S.find('0') + 1 != k - 1:\n            print(S.replace('0', '') + '01')\n        else:\n            print(S.replace('0', ''))\n    elif S.rfind('0') - S.find('0') + 1 != k:\n        print(S.replace('0', '') + suf)\n    elif len(suf) >= 3:\n        print(S.replace('0', '') + suf[:-2])\n    elif len(suf) == 2:\n        if S[-1] == '1':\n            print(S.replace('0', ''))\n        else:\n            print(S.replace('0', '') + '01')\n    elif S.endswith('11'):\n        print(S.replace('0', '')[:-1])\n    elif S[-1] == '1':\n        print(S.replace('0', '')[:-1] + '01')\n    else:\n        print(S.replace('0', '') + '001')", "def x(n):\n    if not n:\n        return n\n    if n % 2 == 0:\n        return 2\n    else:\n        return 1\nfor _ in range(int(input())):\n    a = list(input())\n    l = len(a)\n    a1 = []\n    a2 = []\n    count = 0\n    count1 = 0\n    c = 0\n    for (i, item) in enumerate(a):\n        if item == '0':\n            count += 1\n            if i == l - 1:\n                a1.append(count)\n            if count1 > 0:\n                a2.append(count1)\n                count1 = 0\n        else:\n            count1 += 1\n            if count > 0:\n                a1.append(count)\n                count = 0\n                c += 1\n            if not a1:\n                a1.append(0)\n            if i == l - 1:\n                a1.append(count)\n                a2.append(count1)\n    index = 0\n    l1 = len(a1)\n    pre = 0\n    if not a2:\n        s = ''\n        for i in range(l1):\n            s += '0' * a1[i]\n            try:\n                s += '1' * a2[i]\n            except:\n                pass\n        print(s)\n        continue\n    su = sum(a1[:l1 - 1])\n    for i in range(l1 - 2, -1, -1):\n        if a1[i] != 0:\n            pre = i\n            break\n    if x(su) == 2:\n        if c > 1:\n            for i in range(l1 - 1):\n                a1[i] = 0\n        else:\n            a1[pre] = 2\n    if x(su) == 1:\n        if c == 2 and x(a1[pre - 1]) > a1[pre] and (x(a1[pre]) == 1):\n            a1[pre - 1] = 1\n            a1[pre] = 0\n            pre -= 1\n        else:\n            for i in range(pre):\n                a1[i] = 0\n            a1[pre] = 1\n    if a1[pre] > a1[-1]:\n        a1[pre] -= a1[-1]\n        a1[-1] = 0\n    else:\n        a1[-1] -= a1[pre]\n        a1[pre] = 0\n    index = len(a2) - 1\n    while a1[pre]:\n        if a2[index] == 1 and pre == index:\n            break\n        else:\n            a2[index] -= 1\n            a1[pre] -= 1\n    s = ''\n    for i in range(l1):\n        s += '0' * a1[i]\n        try:\n            s += '1' * a2[i]\n        except:\n            pass\n    print(s)", "def res(s):\n    n = len(s)\n    z = ''\n    if n >= 3 and s[n - 1] == '1' and (s[n - 2] == '1'):\n        s = s[:n - 1] + '$'\n        for i in range(0, n, 1):\n            if s[i] == '0':\n                s = s[:i] + '$' + s[i + 1:]\n                break\n        for i in range(0, n, 1):\n            if s[i] != '$':\n                z += s[i]\n        return z\n    else:\n        return s\n\ndef calc(s):\n    n = len(s)\n    T = []\n    for i in range(0, n, 1):\n        if s[i] == '0':\n            T.append(i)\n    n2 = len(T)\n    if n2 == 1:\n        return 1\n    if T[n2 - 1] == T[n2 - 2]:\n        return 1\n    for i in range(T[0], T[n2 - 2], 1):\n        if s[i] == '1':\n            return 1\n    return 2\n\ndef solve():\n    t = 0\n    p = 0\n    m = ''\n    s = input()\n    n = len(s)\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            for j in range(0, i + 1, 1):\n                m += s[j]\n            break\n        else:\n            t += 1\n    if t == n:\n        print(s)\n        return 0\n    s = m\n    n = len(s)\n    for i in range(0, n, 1):\n        if s[i] == '0':\n            p += 1\n    if p == 0:\n        print(s, end='')\n        for j in range(0, t, 1):\n            print(0, end='')\n        print()\n        return 0\n    if p % 2 == 0:\n        l = 2147482647\n        r = -2147483648\n        for i in range(0, n, 1):\n            if s[i] == '0':\n                l = min(l, i)\n                r = max(r, i)\n        for i in range(l, r + 1, 1):\n            if s[i] == '1':\n                for j in range(0, n, 1):\n                    if s[j] == '1':\n                        print(1, end='')\n                for k in range(0, t, 1):\n                    print(0, end='')\n                print()\n                return 0\n        if t >= 2:\n            for i in range(0, n, 1):\n                if s[i] == '1':\n                    print(1, end='')\n            for i in range(0, t - 2, 1):\n                print(0, end='')\n            print()\n            return 0\n        if t == 1:\n            m = ''\n            for i in range(n - 1, -1, -1):\n                if s[i] == '0':\n                    s = s[:i] + '$' + s[i + 1:]\n                    break\n            for i in range(0, n, 1):\n                if s[i] == '$':\n                    m += '0'\n                elif s[i] == '1':\n                    m += '1'\n            s = m\n            n = len(s)\n            print(res(s))\n            return 0\n        if t == 0:\n            k = 0\n            m = ''\n            for i in range(n - 1, -1, -1):\n                if s[i] == '0':\n                    s = s[:i] + '$' + s[i + 1:]\n                    k += 1\n                    if k == 2:\n                        break\n            for i in range(0, n, 1):\n                if s[i] == '$':\n                    m += '0'\n                elif s[i] == '1':\n                    m += '1'\n            s = m\n            n = len(s)\n            print(res(res(s)))\n            return 0\n    T = 0\n    L = calc(s)\n    m = ''\n    for i in range(n - 1, -1, -1):\n        if s[i] == '0':\n            T += 1\n            if T == L:\n                s = s[:i] + '$' + s[i + 1:]\n    for i in range(0, n, 1):\n        if s[i] == '1':\n            m += '1'\n        elif s[i] == '$':\n            m += '0'\n    s = m\n    n = len(s)\n    if t != 0:\n        for i in range(0, n, 1):\n            if s[i] == '1':\n                print(1, end='')\n        for i in range(0, t - 1, 1):\n            print(0, end='')\n        print()\n        return 0\n    print(res(m))\nT = int(input())\nfor i in range(T):\n    solve()", "def detect_zero(arg_str):\n    fun_str = ''\n    arg_str = list(arg_str)\n    if len(arg_str) >= 3 and arg_str[len(arg_str) - 1] == '1' and (arg_str[len(arg_str) - 2] == '1'):\n        arg_str[len(arg_str) - 1] = '$'\n        for i in range(len(arg_str)):\n            if arg_str[i] == '0':\n                arg_str[i] = '$'\n                break\n        for i in range(len(arg_str)):\n            if arg_str[i] != '$':\n                fun_str += arg_str[i]\n        return fun_str\n    else:\n        return ''.join(map(str, arg_str))\n\ndef calculation(arg_str):\n    temp_arr = []\n    for i in range(len(arg_str)):\n        if arg_str[i] == '0':\n            temp_arr.append(i)\n    if len(temp_arr) == 1:\n        return 1\n    if temp_arr[len(temp_arr) - 1] == temp_arr[len(temp_arr) - 2]:\n        return 1\n    for i in range(temp_arr[0], temp_arr[len(temp_arr) - 2]):\n        if arg_str[i] == '1':\n            return 1\n    return 2\n\ndef solution():\n    user_str = input()\n    temp_str = ''\n    temp_count = 0\n    var_count = 0\n    for i in range(len(user_str) - 1, -1, -1):\n        if user_str[i] == '1':\n            for j in range(i + 1):\n                temp_str += user_str[j]\n            break\n        else:\n            temp_count += 1\n    if temp_count == len(user_str):\n        print(user_str)\n        return\n    user_str = temp_str\n    for i in range(len(user_str)):\n        if user_str[i] == '0':\n            var_count += 1\n    if var_count == 0:\n        print(user_str, end='')\n        for i in range(temp_count):\n            print('0', end='')\n        print()\n        return\n    if var_count % 2 == 0:\n        low_range = 2147483647\n        run_range = -2147483648\n        for i in range(len(user_str)):\n            if user_str[i] == '0':\n                low_range = min(low_range, i)\n                run_range = max(run_range, i)\n        for i in range(low_range, run_range + 1):\n            if user_str[i] == '1':\n                for j in range(len(user_str)):\n                    if user_str[j] == '1':\n                        print('1', end='')\n                for j in range(temp_count):\n                    print('0', end='')\n                print()\n                return\n        if temp_count >= 2:\n            for i in range(len(user_str)):\n                if user_str[i] == '1':\n                    print('1', end='')\n            for i in range(temp_count - 2):\n                print('0', end='')\n            print()\n            return\n        if temp_count == 1:\n            temp_str = ''\n            user_str = list(user_str)\n            for i in range(len(user_str) - 1, -1, -1):\n                if user_str[i] == '0':\n                    user_str[i] = '$'\n                    break\n            for i in range(len(user_str)):\n                if user_str[i] == '$':\n                    temp_str += '0'\n                elif user_str[i] == '1':\n                    temp_str += '1'\n            user_str = temp_str\n            print(detect_zero(user_str))\n            print()\n            return\n        if temp_count == 0:\n            _ = 0\n            temp_str = ''\n            user_str = list(user_str)\n            for i in range(len(user_str) - 1, -1, -1):\n                if user_str[i] == '0':\n                    user_str[i] = '$'\n                    _ += 1\n                    if _ == 2:\n                        break\n            for i in range(len(user_str)):\n                if user_str[i] == '$':\n                    temp_str += '0'\n                elif user_str[i] == '1':\n                    temp_str += '1'\n            user_str = temp_str\n            print(detect_zero(detect_zero(user_str)))\n            print()\n            return\n    temp = 0\n    t_temp = calculation(user_str)\n    temp_str = ''\n    user_str = list(user_str)\n    for i in range(len(user_str) - 1, -1, -1):\n        if user_str[i] == '0':\n            temp += 1\n            if temp == t_temp:\n                user_str[i] = '$'\n    for i in range(len(user_str)):\n        if user_str[i] == '1':\n            temp_str += '1'\n        elif user_str[i] == '$':\n            temp_str += '0'\n    user_str = temp_str\n    if temp_count != 0:\n        for i in range(len(user_str)):\n            if user_str[i] == '1':\n                print('1', end='')\n        for i in range(temp_count - 1):\n            print('0', end='')\n        print()\n        return\n    print(detect_zero(temp_str))\n    print()\nfor tries in range(int(input())):\n    solution()", "def detect_zero(arg_str):\n    fun_str = ''\n    arg_str = list(arg_str)\n    if len(arg_str) >= 3 and arg_str[len(arg_str) - 1] == '1' and (arg_str[len(arg_str) - 2] == '1'):\n        arg_str[len(arg_str) - 1] = '$'\n        for i in range(len(arg_str)):\n            if arg_str[i] == '0':\n                arg_str[i] = '$'\n                break\n        for i in range(len(arg_str)):\n            if arg_str[i] != '$':\n                fun_str += arg_str[i]\n        return fun_str\n    else:\n        return ''.join(map(str, arg_str))\n\ndef calculation(arg_str):\n    temp_arr = []\n    for i in range(len(arg_str)):\n        if arg_str[i] == '0':\n            temp_arr.append(i)\n    if len(temp_arr) == 1:\n        return 1\n    if temp_arr[len(temp_arr) - 1] == temp_arr[len(temp_arr) - 2]:\n        return 1\n    for i in range(temp_arr[0], temp_arr[len(temp_arr) - 2]):\n        if arg_str[i] == '1':\n            return 1\n    return 2\n\ndef solution():\n    user_str = input()\n    temp_str = ''\n    temp_count = 0\n    var_count = 0\n    for i in range(len(user_str) - 1, -1, -1):\n        if user_str[i] == '1':\n            for j in range(i + 1):\n                temp_str += user_str[j]\n            break\n        else:\n            temp_count += 1\n    if temp_count == len(user_str):\n        print(user_str)\n        return\n    user_str = temp_str\n    for i in range(len(user_str)):\n        if user_str[i] == '0':\n            var_count += 1\n    if var_count == 0:\n        print(user_str, end='')\n        for i in range(temp_count):\n            print('0', end='')\n        print()\n        return\n    if var_count % 2 == 0:\n        low_range = 2147483647\n        run_range = -2147483648\n        for i in range(len(user_str)):\n            if user_str[i] == '0':\n                low_range = min(low_range, i)\n                run_range = max(run_range, i)\n        for i in range(low_range, run_range + 1):\n            if user_str[i] == '1':\n                for j in range(len(user_str)):\n                    if user_str[j] == '1':\n                        print('1', end='')\n                for j in range(temp_count):\n                    print('0', end='')\n                print()\n                return\n        if temp_count >= 2:\n            for i in range(len(user_str)):\n                if user_str[i] == '1':\n                    print('1', end='')\n            for i in range(temp_count - 2):\n                print('0', end='')\n            print()\n            return\n        if temp_count == 1:\n            temp_str = ''\n            user_str = list(user_str)\n            for i in range(len(user_str) - 1, -1, -1):\n                if user_str[i] == '0':\n                    user_str[i] = '$'\n                    break\n            for i in range(len(user_str)):\n                if user_str[i] == '$':\n                    temp_str += '0'\n                elif user_str[i] == '1':\n                    temp_str += '1'\n            user_str = temp_str\n            print(detect_zero(user_str))\n            print()\n            return\n        if temp_count == 0:\n            _ = 0\n            temp_str = ''\n            user_str = list(user_str)\n            for i in range(len(user_str) - 1, -1, -1):\n                if user_str[i] == '0':\n                    user_str[i] = '$'\n                    _ += 1\n                    if _ == 2:\n                        break\n            for i in range(len(user_str)):\n                if user_str[i] == '$':\n                    temp_str += '0'\n                elif user_str[i] == '1':\n                    temp_str += '1'\n            user_str = temp_str\n            print(detect_zero(detect_zero(user_str)))\n            print()\n            return\n    temp = 0\n    t_temp = calculation(user_str)\n    temp_str = ''\n    user_str = list(user_str)\n    for i in range(len(user_str) - 1, -1, -1):\n        if user_str[i] == '0':\n            temp += 1\n            if temp == t_temp:\n                user_str[i] = '$'\n    for i in range(len(user_str)):\n        if user_str[i] == '1':\n            temp_str += '1'\n        elif user_str[i] == '$':\n            temp_str += '0'\n    user_str = temp_str\n    if temp_count != 0:\n        for i in range(len(user_str)):\n            if user_str[i] == '1':\n                print('1', end='')\n        for i in range(temp_count - 1):\n            print('0', end='')\n        print()\n        return\n    print(detect_zero(temp_str))\n    print()\nfor tries in range(int(input())):\n    solution()", "def split(s):\n    i = len(s) - 1\n    while i > -1 and s[i] == '0':\n        i -= 1\n    i += 1\n    return (s[:i], s[i:])\n\ndef get_groups(s):\n    res = []\n    if len(s) == 0:\n        return res\n    current = s[0]\n    for i in range(1, len(s)):\n        if s[i] == current[0]:\n            current += s[i]\n        else:\n            res.append(current)\n            current = s[i]\n    res.append(current)\n    return res\n\ndef get_updated_sl(gs):\n    groups = gs[:]\n    res = []\n    zeroes_indices = []\n    even_zeroes_indices = []\n    odd_zeroes_indices = []\n    for (i, g) in enumerate(groups):\n        if g[0] == '0':\n            zeroes_indices.append(i)\n            if len(g) % 2 == 0:\n                even_zeroes_indices.append(i)\n            else:\n                odd_zeroes_indices.append(i)\n    if len(zeroes_indices) > 0:\n        if len(even_zeroes_indices) % 2 == 0:\n            if len(odd_zeroes_indices) % 2 == 0:\n                for i in zeroes_indices:\n                    groups[i] = ''\n            else:\n                for i in zeroes_indices[:-1]:\n                    groups[i] = ''\n                groups[zeroes_indices[-1]] = '0'\n        else:\n            i = even_zeroes_indices[-1]\n            if i != zeroes_indices[0]:\n                if (len(zeroes_indices) - 1) % 2 == 0:\n                    for i in zeroes_indices:\n                        groups[i] = ''\n                else:\n                    for i in zeroes_indices[:-1]:\n                        groups[i] = ''\n                    groups[zeroes_indices[-1]] = '0'\n            elif len(zeroes_indices) > 1 and len(groups[zeroes_indices[1]]) > 2 or len(zeroes_indices) > 2:\n                if (len(zeroes_indices) - 1) % 2 == 0:\n                    for i in zeroes_indices:\n                        groups[i] = ''\n                else:\n                    for i in zeroes_indices[:-1]:\n                        groups[i] = ''\n                    groups[zeroes_indices[-1]] = '0'\n            elif len(zeroes_indices) > 1:\n                groups[zeroes_indices[1]] = ''\n                groups[zeroes_indices[0]] = '0'\n            else:\n                groups[zeroes_indices[0]] = '00'\n    res = ''.join(groups)\n    return res\n\ndef f(s):\n    (sl, sr) = split(s)\n    if len(sl) == 0:\n        return s\n    groups = get_groups(sl)\n    sl = get_updated_sl(groups)\n    if len(sr) > 0:\n        sl_zeroes_indices = []\n        deleted_indices = []\n        for (i, c) in enumerate(sl):\n            if c == '0':\n                sl_zeroes_indices.append(i)\n        assert len(sl_zeroes_indices) < 3\n        count = len(sr)\n        for j in sl_zeroes_indices:\n            if count > 0:\n                deleted_indices.append(j)\n                count -= 1\n        sl = ''.join([c for (z, c) in enumerate(sl) if z not in deleted_indices])\n        sr = sr[:len(sr) - len(deleted_indices)]\n    sl_zeroes_indices = []\n    for (i, c) in enumerate(sl):\n        if c == '0':\n            sl_zeroes_indices.append(i)\n    assert len(sl_zeroes_indices) < 3, (s, sl, sr)\n    if len(sl_zeroes_indices) == 1:\n        i = sl_zeroes_indices[0]\n        if len(sl[i + 1:]) > 1:\n            sl = ''.join([c for (z, c) in enumerate(sl) if z != i and z != i + 2])\n    if len(sl_zeroes_indices) == 2:\n        i = sl_zeroes_indices[0]\n        if len(sl[i + 1:]) > 3:\n            sl = ''.join([c for (z, c) in enumerate(sl) if z != i and z != i + 1 and (z != i + 2) and (z != i + 4)])\n        elif len(sl[i + 1:]) > 2:\n            sl = ''.join([c for (z, c) in enumerate(sl) if z != i and z != i + 2])\n    return sl + sr\nt = int(input())\nfor i in range(t):\n    s = input()\n    print(f(s))", "def dell(a):\n    z = ''\n    if len(a) >= 3 and a[-1] == '1' and (a[-2] == '1'):\n        a[-1] = '$'\n        for i in range(len(a)):\n            if a[i] == '0':\n                a[i] = '$'\n                break\n        for i in range(len(a)):\n            if a[i] != '$':\n                z += a[i]\n        return [x for x in z]\n    else:\n        return a\n\ndef calc(s):\n    T = []\n    for (j, i) in enumerate(s):\n        if i == '0':\n            T.append(j)\n    if len(T) == 1:\n        return 1\n    if T[-1] == T[-2]:\n        return 1\n    for i in range(T[0], T[-2]):\n        if s[i] == '1':\n            return 1\n    return 2\n\ndef solve():\n    ans = ''\n    banana = input()\n    s = [x for x in banana]\n    a = ''\n    (t, p) = (0, 0)\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '1':\n            for j in range(i + 1):\n                a += s[j]\n            break\n        else:\n            t += 1\n    if t == len(s):\n        print(''.join(s))\n        return\n    s = [x for x in a]\n    for i in s:\n        if i == '0':\n            p += 1\n    if p == 0:\n        ans += ''.join(s)\n        for i in range(t):\n            ans += '0'\n        print(ans)\n        return\n    if p % 2 == 0:\n        (l, r) = (2147482647, -2147482647)\n        for (j, i) in enumerate(s):\n            if i == '0':\n                l = min(l, j)\n                r = max(r, j)\n        for i in s[l:r + 1]:\n            if i == '1':\n                for j in s:\n                    if j == '1':\n                        ans += '1'\n                for k in range(t):\n                    ans += '0'\n                print(ans)\n                return\n        if t >= 2:\n            for i in s:\n                if i == '1':\n                    ans += '1'\n            for i in range(t - 2):\n                ans += '0'\n            print(ans)\n            return\n        if t == 1:\n            a = ''\n            for i in range(len(s) - 1, -1, -1):\n                if s[i] == '0':\n                    s[i] = '$'\n                    break\n            for i in range(len(s)):\n                if s[i] == '$':\n                    a += '0'\n                elif s[i] == '1':\n                    a += '1'\n            s = [x for x in a]\n            print(''.join(dell(s)))\n            return\n        if t == 0:\n            lol = 0\n            a = ''\n            for i in range(len(s) - 1, -1, -1):\n                if s[i] == '0':\n                    s[i] = '$'\n                    lol += 1\n                    if lol == 2:\n                        break\n            for i in s:\n                if i == '$':\n                    a += '0'\n                elif i == '1':\n                    a += '1'\n            s = [x for x in a]\n            print(''.join(dell(dell(s))))\n            return\n    T = 0\n    L = calc(s)\n    a = ''\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '0':\n            T += 1\n            if T == L:\n                s[i] = '$'\n    for i in s:\n        if i == '1':\n            a += '1'\n        elif i == '$':\n            a += '0'\n    s = [x for x in a]\n    if t != 0:\n        for i in s:\n            if i == '1':\n                ans += '1'\n        for i in range(t - 1):\n            ans += '0'\n        print(ans)\n        return\n    print(''.join(dell([x for x in a])))\nfor _ in range(int(input())):\n    solve()", "def dell(a):\n    z = ''\n    if len(a) >= 3 and a[-1] == '1' and (a[-2] == '1'):\n        a[-1] = '$'\n        for i in range(len(a)):\n            if a[i] == '0':\n                a[i] = '$'\n                break\n        for i in range(len(a)):\n            if a[i] != '$':\n                z += a[i]\n        return [x for x in z]\n    else:\n        return a\n\ndef calc(s):\n    T = []\n    for (j, i) in enumerate(s):\n        if i == '0':\n            T.append(j)\n    if len(T) == 1:\n        return 1\n    if T[-1] == T[-2]:\n        return 1\n    for i in range(T[0], T[-2]):\n        if s[i] == '1':\n            return 1\n    return 2\n\ndef solve():\n    ans = ''\n    banana = input()\n    s = [x for x in banana]\n    a = ''\n    (t, p) = (0, 0)\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '1':\n            for j in range(i + 1):\n                a += s[j]\n            break\n        else:\n            t += 1\n    if t == len(s):\n        print(''.join(s))\n        return\n    s = [x for x in a]\n    for i in s:\n        if i == '0':\n            p += 1\n    if p == 0:\n        ans += ''.join(s)\n        for i in range(t):\n            ans += '0'\n        print(ans)\n        return\n    if p % 2 == 0:\n        (l, r) = (2147482647, -2147482647)\n        for (j, i) in enumerate(s):\n            if i == '0':\n                l = min(l, j)\n                r = max(r, j)\n        for i in s[l:r + 1]:\n            if i == '1':\n                for j in s:\n                    if j == '1':\n                        ans += '1'\n                for k in range(t):\n                    ans += '0'\n                print(ans)\n                return\n        if t >= 2:\n            for i in s:\n                if i == '1':\n                    ans += '1'\n            for i in range(t - 2):\n                ans += '0'\n            print(ans)\n            return\n        if t == 1:\n            a = ''\n            for i in range(len(s) - 1, -1, -1):\n                if s[i] == '0':\n                    s[i] = '$'\n                    break\n            for i in range(len(s)):\n                if s[i] == '$':\n                    a += '0'\n                elif s[i] == '1':\n                    a += '1'\n            s = [x for x in a]\n            print(''.join(dell(s)))\n            return\n        if t == 0:\n            lol = 0\n            a = ''\n            for i in range(len(s) - 1, -1, -1):\n                if s[i] == '0':\n                    s[i] = '$'\n                    lol += 1\n                    if lol == 2:\n                        break\n            for i in s:\n                if i == '$':\n                    a += '0'\n                elif i == '1':\n                    a += '1'\n            s = [x for x in a]\n            print(''.join(dell(dell(s))))\n            return\n    T = 0\n    L = calc(s)\n    a = ''\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '0':\n            T += 1\n            if T == L:\n                s[i] = '$'\n    for i in s:\n        if i == '1':\n            a += '1'\n        elif i == '$':\n            a += '0'\n    s = [x for x in a]\n    if t != 0:\n        for i in s:\n            if i == '1':\n                ans += '1'\n        for i in range(t - 1):\n            ans += '0'\n        print(ans)\n        return\n    print(''.join(dell([x for x in a])))\nfor _ in range(int(input())):\n    solve()", "def dell(a):\n    z = ''\n    if len(a) >= 3 and a[-1] == '1' and (a[-2] == '1'):\n        a[-1] = '$'\n        for i in range(len(a)):\n            if a[i] == '0':\n                a[i] = '$'\n                break\n        for i in range(len(a)):\n            if a[i] != '$':\n                z += a[i]\n        return [x for x in z]\n    else:\n        return a\n\ndef calc(s):\n    T = []\n    for (j, i) in enumerate(s):\n        if i == '0':\n            T.append(j)\n    if len(T) == 1:\n        return 1\n    if T[-1] == T[-2]:\n        return 1\n    for i in range(T[0], T[-2]):\n        if s[i] == '1':\n            return 1\n    return 2\n\ndef solve():\n    ans = ''\n    banana = input()\n    s = [x for x in banana]\n    a = ''\n    (t, p) = (0, 0)\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '1':\n            for j in range(i + 1):\n                a += s[j]\n            break\n        else:\n            t += 1\n    if t == len(s):\n        print(''.join(s))\n        return\n    s = [x for x in a]\n    for i in s:\n        if i == '0':\n            p += 1\n    if p == 0:\n        ans += ''.join(s)\n        for i in range(t):\n            ans += '0'\n        print(ans)\n        return\n    if p % 2 == 0:\n        (l, r) = (2147482647, -2147482647)\n        for (j, i) in enumerate(s):\n            if i == '0':\n                l = min(l, j)\n                r = max(r, j)\n        for i in s[l:r + 1]:\n            if i == '1':\n                for j in s:\n                    if j == '1':\n                        ans += '1'\n                for k in range(t):\n                    ans += '0'\n                print(ans)\n                return\n        if t >= 2:\n            for i in s:\n                if i == '1':\n                    ans += '1'\n            for i in range(t - 2):\n                ans += '0'\n            print(ans)\n            return\n        if t == 1:\n            a = ''\n            for i in range(len(s) - 1, -1, -1):\n                if s[i] == '0':\n                    s[i] = '$'\n                    break\n            for i in range(len(s)):\n                if s[i] == '$':\n                    a += '0'\n                elif s[i] == '1':\n                    a += '1'\n            s = [x for x in a]\n            print(''.join(dell(s)))\n            return\n        if t == 0:\n            lol = 0\n            a = ''\n            for i in range(len(s) - 1, -1, -1):\n                if s[i] == '0':\n                    s[i] = '$'\n                    lol += 1\n                    if lol == 2:\n                        break\n            for i in s:\n                if i == '$':\n                    a += '0'\n                elif i == '1':\n                    a += '1'\n            s = [x for x in a]\n            print(''.join(dell(dell(s))))\n            return\n    T = 0\n    L = calc(s)\n    a = ''\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '0':\n            T += 1\n            if T == L:\n                s[i] = '$'\n    for i in s:\n        if i == '1':\n            a += '1'\n        elif i == '$':\n            a += '0'\n    s = [x for x in a]\n    if t != 0:\n        for i in s:\n            if i == '1':\n                print('1', end='')\n        for i in range(t - 1):\n            print('0', end='')\n        return\n    print(''.join(dell([x for x in a])))\nfor _ in range(int(input())):\n    solve()\n    print()", "def T(S, N, x):\n    if x == 0:\n        return 0\n    else:\n        x1 = S.rfind('0')\n        x2 = S.index('0')\n        if x % 2 == 0:\n            if x1 - x2 + 1 == x:\n                return 2\n            else:\n                return 0\n        else:\n            return 1\na = int(input())\nfor i in range(a):\n    S = input()\n    k = S.rfind('1')\n    x = S.count('0')\n    N = len(S)\n    if x == 0:\n        B = '1' * N\n    elif x == N:\n        B = '0' * N\n    elif N <= 2:\n        B = S\n    else:\n        x1 = S.rfind('0')\n        x2 = S.index('0')\n        C = S[:k + 1]\n        p = x - (N - 1 - k)\n        q = T(C, k + 1, p)\n        if N - 1 - k >= q:\n            B = '1' * (N - x)\n            B += '0' * (N - 1 - k - q)\n        elif N - 1 - k == 1:\n            if N - x2 - x >= 2:\n                B = '1' * (N - x - 1)\n            else:\n                B = '1' * x2\n                B += '01'\n        elif q == 2:\n            if N - x2 - x >= 3:\n                B = '1' * (N - x - 2)\n            elif N - x2 - x <= 1:\n                B = '1' * x2\n                B += '00'\n                B += '1' * (N - x2 - x)\n            else:\n                B = '1' * x2\n                B += '0'\n                B += '1' * (N - x - 1 - x2)\n        else:\n            D = S[:x1]\n            t = T(D, x1, x - 1)\n            if t == 0:\n                if x1 == N - 2:\n                    B = '1' * (N - x - 1)\n                    B += '01'\n                else:\n                    B = '1' * (N - x - 1)\n            elif D[x1 - 1] == '1':\n                B = '1' * (N - x - 1)\n            elif x1 == N - 2:\n                B = '1' * (N - x - 1)\n                B += '01'\n            else:\n                B = '1' * (N - x - 1)\n    print(B)", "t = int(input())\n\ndef display(n):\n    tmp = '1' * n\n    print(tmp, end='')\n\ndef cnt1(s, start, end):\n    ss = s[start:end]\n    return ss.count('1')\n\ndef cnt2(s, start, end):\n    ss = s[start:end]\n    return ss.count('0')\n\ndef test(s):\n    x = s.rfind('0')\n    y = s.rfind('1')\n    if x > y:\n        display(cnt1(s, 0, len(s)))\n        print('0')\n    elif y > x and s[y] != s[y - 1]:\n        display(cnt1(s, 0, len(s)) - 1)\n        print('01')\n    else:\n        display(cnt1(s, 0, len(s)) - 1)\n        print()\n\ndef test3(s):\n    x = s.rfind('0')\n    y = s.rfind('1')\n    if x > y:\n        display(cnt1(s, 0, len(s)))\n        print('0')\n    elif y > x and s[y] != s[y - 1]:\n        display(cnt1(s, 0, len(s)) - 1)\n        print('01')\n    else:\n        display(cnt1(s, 0, len(s)) - 1)\n        print()\n\ndef test2(s, c1, c2):\n    x = s.rfind('0')\n    y = s.rfind('1')\n    l = len(s)\n    if y > x and s[y] == s[y - 1]:\n        display(cnt1(s, 0, l) - 1)\n        print()\n    elif c1 > 1 and c2 > 1:\n        test3(s)\n    elif c1 == 1:\n        test3(s)\n    else:\n        i = s.find('0')\n        display(cnt1(s, 0, i))\n        if cnt1(s, i, l) > 1:\n            display(cnt1(s, i, l) - 1)\n        else:\n            print('0', end='')\n            display(cnt1(s, i, l))\n        print()\n\ndef solve3(s):\n    (x, l) = (0, len(s))\n    (cc1, cc2) = (0, 0)\n    while x < l and s[x] != '0':\n        x += 1\n    while x < l and s[x] == '0':\n        x += 1\n        cc1 += 1\n    while x < l and s[x] != '0':\n        x += 1\n    tt = x\n    while x < l and s[x] == '0':\n        x += 1\n        cc2 += 1\n    while x < l and s[x] != '0':\n        x += 1\n    if tt == l:\n        test(s)\n    elif x == l:\n        test2(s, cc1, cc2)\n    else:\n        test3(s)\n\ndef solve2(s, z):\n    x = 0\n    tt = x\n    while x < z and s[x] == '1':\n        x += 1\n    tt = x\n    while x < z and s[x] == '0':\n        x += 1\n    uu = x\n    while x < z and s[x] == '1':\n        x += 1\n    if x == z:\n        display(cnt1(s, 0, tt))\n        if cnt1(s, uu, z) <= 1:\n            print('00', end='')\n            display(cnt1(s, uu, z))\n        elif cnt1(s, uu, z) == 2:\n            print('0', end='')\n            display(cnt1(s, uu, z) - 1)\n        else:\n            display(cnt1(s, uu, z) - 2)\n        print()\n    else:\n        display(cnt1(s, 0, z))\n        print()\n\ndef solve1(s, x):\n    display(cnt1(s, 0, x + 1))\n    l = len(s)\n    if cnt2(s, 0, x + 1) % 2 == 1:\n        for m in range(x + 1, l - 1):\n            print(s[m], end='')\n    else:\n        kk = x\n        while kk >= 0 and s[kk] != '0':\n            kk -= 1\n        while kk >= 0 and s[kk] == '0':\n            kk -= 1\n        while kk >= 0 and s[kk] != '0':\n            kk -= 1\n        if cnt2(s, 0, x + 1) == 0:\n            for m in range(x + 1, l):\n                print(s[m], end='')\n        elif kk == -1:\n            for m in range(x + 1, l - 2):\n                print(s[m], end='')\n        else:\n            for m in range(x + 1, l):\n                print(s[m], end='')\n    print()\nfor _ in range(t):\n    s = input()\n    l = len(s)\n    ones = s.count('1')\n    zeroes = l - ones\n    i = l - 1\n    while i >= 0 and s[i] == '0':\n        i -= 1\n    if zeroes == 0 or zeroes == l:\n        print(s)\n    elif l - i - 1 > 1:\n        solve1(s, i)\n    elif zeroes % 2 == 0:\n        solve2(s, l)\n    else:\n        solve3(s)", "from sys import stdin\ninput = stdin.readline\n\ndef almostsolve(S):\n    zeros = [i for i in range(len(S)) if S[i] == '0']\n    if len(zeros) == 0 or len(S) - len(zeros) == 0 or len(S) < 3:\n        return S\n    zones = []\n    rightmost = None\n    i = 0\n    while i < len(zeros):\n        start = i\n        while i + 1 < len(zeros) and zeros[i + 1] == zeros[i] + 1:\n            i += 1\n        i += 1\n        zones.append(i - start)\n        if (i - start) % 2 == 0:\n            rightmost = zeros[i - 1]\n    assert sum(zones) == len(zeros)\n    if S[-1] == '0':\n        if len(zones) == 1:\n            return S\n        elif len(zones) == 2:\n            if zones[0] % 2 == 0:\n                count = 2\n            else:\n                count = 1\n            if count == 1:\n                return '1' * (len(S) - len(zeros)) + '0' * (zones[-1] - 1)\n            elif count == 2 and zones[-1] >= 2:\n                return '1' * (len(S) - len(zeros)) + '0' * (zones[-1] - 2)\n            else:\n                before = sum((1 for i in range(rightmost) if S[i] == '1'))\n                after = len(S) - len(zeros) - before\n                v1 = '1' * before + '0' + '1' * after\n                v2 = v1\n                if before >= 2 or after >= 2:\n                    v2 = '1' * (before + after - 1)\n                return max(v1, v2)\n        else:\n            even = sum((1 for zone in zones[:-1] if zone % 2 == 0))\n            odd = sum((1 for zone in zones[:-1] if zone % 2 == 1))\n            if odd % 2 == 0 and (not (even == 1 and odd == 0)):\n                return '1' * (len(S) - len(zeros)) + '0' * zones[-1]\n            else:\n                return '1' * (len(S) - len(zeros)) + '0' * (zones[-1] - 1)\n    elif len(zones) == 1:\n        if len(zeros) % 2 == 0:\n            count = 2\n        else:\n            count = 1\n        before = zeros[0]\n        after = len(S) - len(zeros) - zeros[0]\n        v1 = '1' * before + '0' * count + '1' * after\n        v2 = v1\n        if count == 2:\n            if before >= 3 or (before >= 2 and after >= 1) or (before >= 1 and after >= 2) or (after >= 3):\n                v2 = '1' * (before + after - 2)\n        v3 = v1\n        if count == 2:\n            if after >= 1:\n                v3 = '1' * before + '0' + '1' * (after - 1)\n            elif before >= 1:\n                v3 = '1' * (before - 1) + '0' + '1' * after\n        elif before >= 2 or after >= 2:\n            v3 = '1' * (before + after - 1)\n        return max(v1, v2, v3)\n    else:\n        even = sum((1 for zone in zones if zone % 2 == 0))\n        odd = sum((1 for zone in zones if zone % 2 == 1))\n        if odd % 2 == 0 and (not (even == 1 and odd == 0)):\n            return '1' * (len(S) - len(zeros))\n        elif odd == 1 and even == 1:\n            before = sum((1 for i in range(rightmost) if S[i] == '1'))\n            after = len(S) - len(zeros) - before\n            v1 = '1' * before + '0' + '1' * after\n            v2 = v1\n            if before >= 2 or after >= 2:\n                v2 = '1' * (before + after - 1)\n            return max(v1, v2)\n        else:\n            before = zeros[-1] - len(zeros) + 1\n            after = len(S) - len(zeros) - before\n            v1 = '1' * before + '0' + '1' * after\n            v2 = v1\n            if before >= 2 or after >= 2:\n                v2 = '1' * (before + after - 1)\n            return max(v1, v2)\n\ndef solve(S):\n    if len(S) < 3:\n        return S\n    S1 = almostsolve(S)\n    S2 = S1\n    if S[-1] == '1' and S[-2] == '0':\n        S2 = almostsolve(S[:-1]) + '1'\n        S2 = almostsolve(S2)\n    return max(S1, S2)\nT = int(input().strip())\nfor problem in range(1, T + 1):\n    S = input().strip()\n    print(solve(S))", "t = int(input())\n\ndef allsame(s):\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            return False\n    return True\n\ndef downsize(s):\n    i = 0\n    count = 0\n    news = []\n    patches = [0, 0, 0]\n    for i in range(len(s)):\n        if s[i] == '0':\n            count += 1\n        elif count != 0 and count % 2 == 0:\n            news += ['0', '0', '1']\n            count = 0\n            patches[2] += 1\n        elif count != 0 and count % 2 == 1:\n            news += ['0', '1']\n            count = 0\n            patches[1] += 1\n        else:\n            news.append('1')\n            count = 0\n    if count != 0:\n        news += ['0' for _ in range(count)]\n        patches[0] = count\n    return (''.join(news), patches)\n\ndef onepatcharray(s, patchsize, convertedonepatch):\n    news = [0, 0, 0]\n    patchinserted = False\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '0':\n            if patchinserted:\n                continue\n            if convertedonepatch:\n                if s[i - 1] == '0':\n                    news[1] = patchsize\n                    patchinserted = True\n            else:\n                news[1] = patchsize\n                patchinserted = True\n        elif patchinserted:\n            news[0] += 1\n        else:\n            news[2] += 1\n    return news\n\ndef removelastpatch(arr):\n    if arr[-1] == 0:\n        return '1' * arr[0] + '0' * arr[1]\n    elif arr[2] > arr[1]:\n        return '1' * (arr[0] + arr[2] - arr[1])\n    elif arr[2] == arr[1]:\n        return '1' * arr[0] + '0' + '1' * (arr[2] - arr[1] + 1)\n    else:\n        return '1' * arr[0] + '0' * arr[1] + '1' * arr[2]\nwhile t > 0:\n    t -= 1\n    s = input()\n    copy = s\n    if allsame(s):\n        print(s)\n        continue\n    (s, patches) = downsize(s)\n    if len(s) == 2:\n        print(s)\n        continue\n    i = 0\n    j = 1\n    convertedonepatch = False\n    if patches[2] > 1:\n        patches[2] = 0\n    elif patches[2] == 1:\n        if patches[1] == 1 and s[::-1].index('0') < s[::-1].index('00'):\n            passed = False\n            l = 0\n            for i in range(len(copy) - 1, -1, -1):\n                if copy[i] == '0':\n                    passed = True\n                    l += 1\n                elif passed:\n                    break\n            if l > 1:\n                patches[2] = 0\n    if patches[2] == 1:\n        if patches[0] + patches[1] >= 2:\n            patches[2] = 0\n            rem = min(2, patches[1])\n            patches[1] -= rem\n            patches[0] -= 2 - rem\n        else:\n            patches[2] -= patches[0] + patches[1]\n            if patches[1] == 1 or patches[0] == 1:\n                convertedonepatch = True\n                patches[1] = 1\n            patches[0] = 0\n    else:\n        pass\n    patches[1] %= 2\n    if patches[1] == 1 and patches[0] > 0:\n        patches[1] = 0\n        patches[0] -= 1\n    patchsize = patches[0] + patches[1] + patches[2] * 2\n    arr = onepatcharray(s, patchsize, convertedonepatch)\n    if patchsize == 0:\n        print('1' * (arr[0] + arr[2]))\n        continue\n    s = removelastpatch(arr)\n    print(s)", "def f1(s):\n    x = ''\n    if len(s) >= 3 and s[-1] == 1 and (s[-2] == 1):\n        s[-1] = 9\n        for i in range(len(s)):\n            if s[i] == 0:\n                s[i] = 9\n                break\n        for i in range(len(s)):\n            if s[i] != 9:\n                x += str(s[i])\n        return list((int(i) for i in x))\n    else:\n        return s\n\ndef f2(s):\n    l = []\n    for i in range(len(s)):\n        if s[i] == 0:\n            l.append(i)\n    if len(l) == 1:\n        return 1\n    if l[-1] == l[-2]:\n        return 1\n    for i in range(l[0], l[-2]):\n        if s[i] == 1:\n            return 1\n    return 2\n\ndef f(s):\n    (t, p, a) = (0, 0, '')\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == 1:\n            for j in range(i + 1):\n                a += str(s[j])\n            break\n        else:\n            t += 1\n    if t == len(s):\n        print(''.join((str(i) for i in s)))\n        return\n    s = list((int(i) for i in a))\n    for i in range(len(s)):\n        if s[i] == 0:\n            p += 1\n    if p == 0:\n        print(''.join((str(i) for i in s)) + '0' * t)\n        return\n    if p % 2 == 0:\n        (l, r) = (int(3000000000.0), -1 * int(3000000000.0))\n        for i in range(len(s)):\n            if s[i] == 0:\n                (l, r) = (min(l, i), max(r, i))\n        for i in range(l, r + 1):\n            if s[i] == 1:\n                x = ''\n                for j in range(len(s)):\n                    if s[j] == 1:\n                        x += str(s[j])\n                print(x + '0' * t)\n                return\n        if t >= 2:\n            x = ''\n            for i in range(len(s)):\n                if s[i] == 1:\n                    x += str(s[i])\n            print(x + '0' * (t - 2))\n            return\n        if t == 1:\n            a = ''\n            for i in range(len(s) - 1, -1, -1):\n                if s[i] == 0:\n                    s[i] = 9\n                    break\n            for i in range(len(s)):\n                if s[i] == 9:\n                    a += '0'\n                elif s[i] == 1:\n                    a += '1'\n            s = list((int(i) for i in a))\n            print(''.join((str(i) for i in f1(s))))\n            return\n        if t == 0:\n            (c, a) = (0, '')\n            for i in range(len(s) - 1, -1, -1):\n                if s[i] == 0:\n                    s[i] = 9\n                    c += 1\n                    if c == 2:\n                        break\n            for i in range(len(s)):\n                if s[i] == 9:\n                    a += '0'\n                elif s[i] == 1:\n                    a += '1'\n            s = list((int(i) for i in a))\n            print(''.join((str(i) for i in f1(f1(s)))))\n            return\n    (w, h, a) = (0, f2(s), '')\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == 0:\n            w += 1\n            if w == h:\n                s[i] = 9\n    for i in range(len(s)):\n        if s[i] == 1:\n            a += '1'\n        elif s[i] == 9:\n            a += '0'\n    s = list((int(i) for i in a))\n    if t != 0:\n        x = ''\n        for i in range(len(s)):\n            if s[i] == 1:\n                x += str(s[i])\n        print(x + '0' * (t - 1))\n        return\n    a = list((int(i) for i in a))\n    print(''.join((str(i) for i in f1(a))))\n    return\nfor _ in range(int(input())):\n    s = list((int(i) for i in input()))\n    f(s)"]