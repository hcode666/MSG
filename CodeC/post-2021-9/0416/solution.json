["import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < mn:\n                mn = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n        if mn == 0:\n            break\n    print(mn)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < mn:\n                mn = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n        if mn == 0:\n            break\n    print(mn)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            v1 = abs(dcb - dba)\n            if v1 < mn:\n                mn = v1\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n        if mn == 0:\n            break\n    print(mn)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < mn:\n                mn = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n        if mn == 0:\n            break\n    print(mn)", "def T(A, N, k):\n    i = 0\n    j = N - 1\n    min1 = abs(A[i] + A[j] - 2 * A[k])\n    while i < k and k < j:\n        if A[i] + A[j] - 2 * A[k] == 0:\n            return 0\n        elif A[i] + A[j] > 2 * A[k]:\n            min1 = min(min1, A[i] + A[j] - 2 * A[k])\n            j -= 1\n        else:\n            min1 = min(min1, 2 * A[k] - A[i] - A[j])\n            i += 1\n    return min1\na = int(input())\nfor i in range(a):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    ans1 = A[2] - A[0]\n    ans2 = A[-1] - A[-3]\n    ans = T(A, N, 1)\n    if ans == 0:\n        print(ans)\n    else:\n        for k in range(1, N - 1):\n            ans = min(ans, T(A, N, k))\n            if ans == 0:\n                break\n        if A[0] == A[1]:\n            for k in range(2, N):\n                ans1 = min(ans1, A[k] - A[0])\n            ans = min(ans, ans1)\n        if A[-1] == A[-2]:\n            for k in range(0, N - 2):\n                ans2 = min(ans2, A[-1] - A[k])\n            ans = min(ans, ans2)\n        print(ans)", "def T(A, N, k):\n    i = 0\n    j = N - 1\n    min1 = abs(A[i] + A[j] - 2 * A[k])\n    while i < k and k < j:\n        if A[i] + A[j] - 2 * A[k] == 0:\n            return 0\n        elif A[i] + A[j] > 2 * A[k]:\n            min1 = min(min1, A[i] + A[j] - 2 * A[k])\n            j -= 1\n        else:\n            min1 = min(min1, 2 * A[k] - A[i] - A[j])\n            i += 1\n    return min1\na = int(input())\nfor i in range(a):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    ans1 = A[2] - A[0]\n    ans2 = A[-1] - A[-3]\n    ans = T(A, N, 1)\n    if ans == 0:\n        print(ans)\n    else:\n        for k in range(1, N - 1):\n            ans = min(ans, T(A, N, k))\n            if ans == 0:\n                break\n        if A[0] == A[1]:\n            for k in range(2, N):\n                ans1 = min(ans1, A[k] - A[0])\n            ans = min(ans, ans1)\n        if A[-1] == A[-2]:\n            for k in range(0, N - 2):\n                ans2 = min(ans2, A[-1] - A[k])\n            ans = min(ans, ans2)\n        print(ans)", "n = int(input())\nwhile n:\n    x = int(input())\n    lis = list(map(int, input().split()))\n    lis.sort()\n    ans = 10000000000.0\n    for b in range(1, x - 1):\n        a = b - 1\n        c = b + 1\n        while a >= 0 and c <= x - 1:\n            ans = min(ans, abs(lis[a] + lis[c] - 2 * lis[b]))\n            if lis[c] - lis[b] > lis[b] - lis[a]:\n                a -= 1\n            else:\n                c += 1\n        if ans == 0:\n            break\n    print(ans)\n    n -= 1", "n = int(input())\nwhile n:\n    x = int(input())\n    lis = list(map(int, input().split()))\n    lis.sort()\n    ans = 10000000000.0\n    for b in range(1, x - 1):\n        a = b - 1\n        c = b + 1\n        while a >= 0 and c <= x - 1:\n            ans = min(ans, abs(lis[a] + lis[c] - 2 * lis[b]))\n            if lis[c] - lis[b] > lis[b] - lis[a]:\n                a -= 1\n            else:\n                c += 1\n        if ans == 0:\n            break\n    print(ans)\n    n -= 1", "import math\n\ndef bvalue(arr, i, k, j):\n    return abs(arr[i] + arr[j] - 2 * arr[k])\ncase = int(input())\nfor _ in range(case):\n    n = int(input())\n    arr = sorted(list(map(int, input().split(' '))))\n    res = math.inf\n    for i in range(n):\n        k = i + 1\n        for j in range(i + 2, n):\n            while k + 1 < j:\n                if bvalue(arr, i, k, j) > bvalue(arr, i, k + 1, j):\n                    k += 1\n                    continue\n                break\n            res = min(res, bvalue(arr, i, k, j))\n            if res == 0:\n                break\n    print(res)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < mn:\n                mn = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n        if mn == 0:\n            break\n    print(mn)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < mn:\n                mn = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n        if mn == 0:\n            break\n    print(mn)", "import math\n\ndef bvalue(arr, i, k, j):\n    return abs(arr[i] + arr[j] - 2 * arr[k])\ncase = int(input())\nfor _ in range(case):\n    n = int(input())\n    arr = sorted(list(map(int, input().split(' '))))\n    res = math.inf\n    for i in range(n):\n        k = i + 1\n        for j in range(i + 2, n):\n            while k + 1 < j:\n                if bvalue(arr, i, k, j) > bvalue(arr, i, k + 1, j):\n                    k += 1\n                    continue\n                break\n            res = min(res, bvalue(arr, i, k, j))\n            if res == 0:\n                break\n    print(res)", "import math\n\ndef bvalue(arr, i, k, j):\n    return abs(arr[i] + arr[j] - 2 * arr[k])\ncase = int(input())\nfor _ in range(case):\n    n = int(input())\n    arr = sorted(list(map(int, input().split(' '))))\n    res = math.inf\n    for i in range(n):\n        k = i + 1\n        for j in range(i + 2, n):\n            while k + 1 < j:\n                if bvalue(arr, i, k, j) > bvalue(arr, i, k + 1, j):\n                    k += 1\n                    continue\n                break\n            res = min(res, bvalue(arr, i, k, j))\n            if res == 0:\n                break\n    print(res)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ar.sort()\n    m = math.inf\n    for i in range(1, n - 1):\n        x = ar[i]\n        j = i + 1\n        k = i - 1\n        c = ar[j] - x\n        d = x - ar[k]\n        while True:\n            val = abs(c - d)\n            if val < m:\n                m = val\n            if c == d:\n                break\n            elif c < d:\n                j += 1\n                if j >= n:\n                    break\n                c = ar[j] - x\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                d = x - ar[k]\n        if m == 0:\n            break\n    print(m)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < mn:\n                mn = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n        if mn == 0:\n            break\n    print(mn)", "import math\nfor t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    m = math.inf\n    for j in range(1, n - 1):\n        b = l[j]\n        k = j + 1\n        i = j - 1\n        while True:\n            a = l[i]\n            c = l[k]\n            val = abs(a + c - 2 * b)\n            m = min(m, val)\n            if c - b == b - a:\n                break\n            elif c - b > b - a:\n                i -= 1\n                if i < 0:\n                    break\n            else:\n                k += 1\n                if k >= n:\n                    break\n        if m == 0:\n            break\n    print(m)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    l = math.inf\n    for j in range(1, n - 1):\n        b = a[j]\n        k = j + 1\n        m = j - 1\n        dcb = a[k] - b\n        dba = b - a[m]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < l:\n                l = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                k += 1\n                if k >= n:\n                    break\n                dcb = a[k] - b\n            else:\n                m -= 1\n                if m < 0:\n                    break\n                dba = b - a[m]\n        if l == 0:\n            break\n    print(l)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < mn:\n                mn = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n        if mn == 0:\n            break\n    print(mn)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < mn:\n                mn = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n        if mn == 0:\n            break\n    print(mn)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    res = float('inf')\n    for i in range(1, n - 1):\n        x = A[i]\n        L = []\n        for j in range(i - 1, -1, -1):\n            L.append(x - A[j])\n        k = 0\n        for j in range(i + 1, n):\n            v = A[j] - x\n            while k < len(L) and v >= L[k]:\n                k += 1\n            if k < len(L):\n                res = min(res, abs(v - L[k]))\n            if k > 0:\n                res = min(res, abs(v - L[k - 1]))\n            if res == 0:\n                break\n        if res == 0:\n            break\n    print(res)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < mn:\n                mn = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n        if mn == 0:\n            break\n    print(mn)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    m = math.inf\n    l.sort()\n    for i in range(1, n - 1):\n        v = l[i]\n        j = i + 1\n        k = i - 1\n        cb = l[j] - v\n        ab = v - l[k]\n        while True:\n            if abs(cb - ab) < m:\n                m = abs(cb - ab)\n            if cb == ab:\n                break\n            elif cb < ab:\n                j += 1\n                if j >= n:\n                    break\n                cb = l[j] - v\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                ab = v - l[k]\n        if m == 0:\n            break\n    print(m)", "import bisect, math\n\ndef solve(n, arr):\n    mini = 10 ** 9\n    for i in range(n):\n        for j in range(i + 2, n):\n            if arr[i] == arr[j] or mini == 0:\n                return 0\n            avg = math.ceil((arr[i] + arr[j]) / 2)\n            pos = bisect.bisect_left(arr, avg, i, j)\n            mini = min(mini, abs(arr[i] + arr[j] - 2 * arr[pos]), abs(arr[i] + arr[j] - 2 * arr[pos - 1]))\n    return mini\nfor _ in range(int(input())):\n    print(solve(int(input()), sorted(list(map(int, input().split())))))", "import sys, math, cmath, time\nfrom bisect import bisect_left\nstart_time = time.time()\n\ndef solve():\n    n = inp()\n    a = [int(k) for k in inps()]\n    a.sort()\n    ans = 1000000000000.0\n    for i in range(1, n - 1):\n        k = a[i]\n        l = i - 1\n        r = i + 1\n        while l < i and l >= 0 and (r > i) and (r < n):\n            avg = a[l] + a[i] + a[r]\n            ans = min(ans, abs(avg - 3 * k))\n            if avg == k:\n                ans = 0\n                break\n            if avg < 3 * k:\n                r += 1\n            else:\n                l -= 1\n    print(int(ans))\n\ndef main():\n    testcases = 1\n    testcases = inp()\n    for each_testcase in range(testcases):\n        solve()\n\ndef inp():\n    return int(input())\n\ndef inps():\n    return input().split()\nONLINE_JUDGE = __debug__\nif ONLINE_JUDGE:\n    input = sys.stdin.readline\nmain()", "from bisect import bisect_left\nimport math\nfor tt in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = float('inf')\n    arr.sort()\n    chk = False\n    for i in range(n):\n        for j in range(i + 2, n):\n            if arr[i] == arr[j] or ans == 0:\n                ans = 0\n                chk = True\n                break\n            pos = bisect_left(arr, math.ceil((arr[i] + arr[j]) / 2), i + 1, j - 1)\n            ans = min(ans, abs(arr[i] + arr[j] - 2 * arr[pos]), abs(arr[i] + arr[j] - 2 * arr[pos - 1]))\n        if chk:\n            break\n    print(ans)", "from bisect import bisect_left\nimport math\nfor tt in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = float('inf')\n    arr.sort()\n    chk = False\n    for i in range(n):\n        for j in range(i + 2, n):\n            if arr[i] == arr[j] or ans == 0:\n                ans = 0\n                chk = True\n                break\n            pos = bisect_left(arr, math.ceil((arr[i] + arr[j]) / 2), i, j)\n            ans = min(ans, abs(arr[i] + arr[j] - 2 * arr[pos]), abs(arr[i] + arr[j] - 2 * arr[pos - 1]))\n        if chk:\n            break\n    print(ans)", "import bisect, math\n\ndef solve(n, arr):\n    mini = 10 ** 9\n    for i in range(n):\n        for j in range(i + 2, n):\n            if arr[i] == arr[j] or mini == 0:\n                return 0\n            pos = bisect.bisect_left(arr, math.ceil((arr[i] + arr[j]) / 2), i, j)\n            mini = min(mini, abs(arr[i] + arr[j] - 2 * arr[pos]), abs(arr[i] + arr[j] - 2 * arr[pos - 1]))\n    return mini\nfor _ in range(int(input())):\n    print(solve(int(input()), sorted(list(map(int, input().split())))))", "import bisect, math\n\ndef solve(n, arr):\n    mini = 10 ** 9\n    for i in range(n):\n        for j in range(i + 2, n):\n            if arr[i] == arr[j] or mini == 0:\n                return 0\n            pos = bisect.bisect_left(arr, math.ceil((arr[i] + arr[j]) / 2), i, j)\n            mini = min(mini, abs(arr[i] + arr[j] - 2 * arr[pos]), abs(arr[i] + arr[j] - 2 * arr[pos - 1]))\n    return mini\nfor _ in range(int(input())):\n    print(solve(int(input()), sorted(list(map(int, input().split())))))", "import bisect, math\n\ndef solve(n, arr):\n    mini = 10 ** 9\n    for i in range(n):\n        for j in range(i + 2, n):\n            if arr[i] == arr[j] or mini == 0:\n                return 0\n            avg = math.ceil((arr[i] + arr[j]) / 2)\n            pos = bisect.bisect_left(arr, avg, i, j)\n            mini = min(mini, abs(arr[i] + arr[j] - 2 * arr[pos]), abs(arr[i] + arr[j] - 2 * arr[pos - 1]))\n    return mini\nfor _ in range(int(input())):\n    print(solve(int(input()), sorted(list(map(int, input().split())))))", "def beauty(l1, l2, a):\n    l1.sort(reverse=True)\n    l2.sort()\n    i = 0\n    j = 0\n    ans = 10000000000000\n    while i < len(l1) and j < len(l2):\n        ans = min(ans, abs(a - l1[i] - l2[j]))\n        if l1[i] + l2[j] > a:\n            i += 1\n        else:\n            j += 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = 10000000001\n    for i in range(1, n - 1):\n        if beauty(a[:i], a[i + 1:], a[i] * 2) < b:\n            b = beauty(a[:i], a[i + 1:], a[i] * 2)\n    print(b)", "from sys import stdin\n\ndef solve():\n    n = int(stdin.readline())\n    arr = sorted(map(int, stdin.readline().split()))\n    best = 10 ** 10\n    for left in range(n):\n        i = left + 1\n        for right in range(left + 2, n):\n            s = arr[left] + arr[right]\n            x = arr[i]\n            while 2 * x < s:\n                i += 1\n                x = arr[i]\n            if i == left + 1:\n                score = abs(s - 2 * x)\n            elif i == right:\n                score = abs(s - 2 * arr[i - 1])\n            else:\n                s1 = abs(s - 2 * x)\n                s2 = abs(s - 2 * arr[i - 1])\n                if s1 < s2:\n                    score = s1\n                else:\n                    score = s2\n            if score < best:\n                best = score\n    print(best)\n\ndef main():\n    for _ in range(int(stdin.readline())):\n        solve()\nmain()", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    m = []\n    mi = []\n    for k in range(1, n - 1):\n        i = k - 1\n        j = k + 1\n        x = l[i] - l[k]\n        y = l[j] - l[k]\n        s = x + y\n        m.append(abs(s))\n        while i > 0 or j < n - 1:\n            if s > 0 and i > 0:\n                i = i - 1\n                s = s + l[i] - l[i + 1]\n                m.append(abs(s))\n            elif s < 0 and j < n - 1:\n                j = j + 1\n                s = s + l[j] - l[j - 1]\n                m.append(abs(s))\n            else:\n                break\n        mi.append(min(m))\n        m = []\n    print(min(mi))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    ans = math.inf\n    for mid in range(1, len(arr) - 1):\n        left = mid - 1\n        right = mid + 1\n        while True:\n            left_difference = arr[mid] - arr[left]\n            right_difference = arr[right] - arr[mid]\n            difference = abs(left_difference - right_difference)\n            if difference < ans:\n                ans = difference\n            if left_difference == right_difference:\n                ans = 0\n                break\n            elif left_difference > right_difference:\n                right += 1\n                if right == len(arr):\n                    break\n            else:\n                left -= 1\n                if left == -1:\n                    break\n        if ans == 0:\n            break\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < mn:\n                mn = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n        if mn == 0:\n            break\n    print(mn)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < mn:\n                mn = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n        if mn == 0:\n            break\n    print(mn)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        dcb = aa[j] - b\n        dba = b - aa[k]\n        while True:\n            vl = abs(dcb - dba)\n            if vl < mn:\n                mn = vl\n            if dcb == dba:\n                break\n            elif dcb < dba:\n                j += 1\n                if j >= n:\n                    break\n                dcb = aa[j] - b\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                dba = b - aa[k]\n    print(mn)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    assert len(aa) == n\n    aa.sort()\n    mn = math.inf\n    for i in range(1, n - 1):\n        b = aa[i]\n        j = i + 1\n        k = i - 1\n        c = aa[j]\n        a = aa[k]\n        while True:\n            v1 = c - b\n            v2 = b - a\n            vl = abs(v1 - v2)\n            if vl < mn:\n                mn = vl\n            if v1 == v2:\n                break\n            elif v1 < v2:\n                j += 1\n                if j >= n:\n                    break\n                c = aa[j]\n            else:\n                k -= 1\n                if k < 0:\n                    break\n                a = aa[k]\n    print(mn)", "def min_beauty(a):\n    min_mean = float('inf')\n    a.sort()\n    n = len(a)\n    res = float('inf')\n    for i in range(1, n - 1):\n        (l, r) = (0, n - 1)\n        while l < i and i < r:\n            sum = a[l] + a[r]\n            if sum == 2 * a[i]:\n                return 0\n            if sum > 2 * a[i]:\n                r -= 1\n            else:\n                l += 1\n            min_mean = min(min_mean, abs(sum - 2 * a[i]))\n        res = min(res, min_mean)\n    return res\nfor z in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(min_beauty(l))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    mini = 10000000000.0\n    for i in range(1, n - 1):\n        a = 0\n        b = 2 * arr[i]\n        c = n - 1\n        while a < i and c > i:\n            new = arr[a] + arr[c] - b\n            if new < 0:\n                a += 1\n            else:\n                c -= 1\n            mini = min(mini, abs(new))\n            if mini == 0:\n                break\n        else:\n            continue\n        break\n    print(mini)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = sorted(list(map(int, input().split())))\n    i = 1\n    main = 10000000000\n    while i < n - 1:\n        j = i - 1\n        k = i + 1\n        while j >= 0 and k < n:\n            if main > abs(A[j] + A[k] - 2 * A[i]):\n                main = abs(A[j] + A[k] - 2 * A[i])\n            if A[j] + A[k] >= 2 * A[i]:\n                j = j - 1\n            else:\n                k = k + 1\n        if main == 0:\n            break\n        i = i + 1\n    print(main)", "from sys import stdin\n\ndef solve():\n    n = int(stdin.readline())\n    arr = sorted(map(int, stdin.readline().split()))\n    best = 10 ** 10\n    for left in range(n):\n        i = left + 1\n        for right in range(left + 2, n):\n            s = arr[left] + arr[right]\n            x = arr[i]\n            while 2 * x < s:\n                i += 1\n                x = arr[i]\n            if i == left + 1:\n                score = abs(s - 2 * x)\n            elif i == right:\n                score = abs(s - 2 * arr[i - 1])\n            else:\n                s1 = abs(s - 2 * x)\n                s2 = abs(s - 2 * arr[i - 1])\n                if s1 < s2:\n                    score = s1\n                else:\n                    score = s2\n            if score < best:\n                best = score\n    print(best)\n\ndef main():\n    for _ in range(int(stdin.readline())):\n        solve()\nmain()"]