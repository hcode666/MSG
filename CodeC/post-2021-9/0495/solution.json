["def loop(n, p, flag, a):\n    for i in range(n):\n        count = 0\n        if p[-1] < p[-2]:\n            count += 1\n        count1 = count2 = count3 = count\n        count2 += 2\n        count3 += 1\n        if count1 == a[i]:\n            p.append(max(p[-1], p[-2]) + 1)\n        elif count2 == a[i]:\n            p.append(min(p[-1], p[-2]) - 1)\n        elif count3 == a[i]:\n            p.append((p[-1] + p[-2]) / 2)\n        else:\n            flag[0] = 0\n            break\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = [1, 2]\n    flag = [1]\n    loop(n, p, flag, a)\n    if flag[0] == 1:\n        print('YES')\n    else:\n        flag[0] = 1\n        p = [2, 1]\n        loop(n, p, flag, a)\n        if flag[0] == 1:\n            print('YES')\n        else:\n            print('NO')", "def loop(n, p, flag, a):\n    for i in range(n):\n        count = 0\n        if p[-1] < p[-2]:\n            count += 1\n        count1 = count2 = count3 = count\n        count2 += 2\n        count3 += 1\n        if count1 == a[i]:\n            p.append(max(p[-1], p[-2]) + 1)\n        elif count2 == a[i]:\n            p.append(min(p[-1], p[-2]) - 1)\n        elif count3 == a[i]:\n            p.append((p[-1] + p[-2]) / 2)\n        else:\n            flag[0] = 0\n            break\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = [1, 2]\n    flag = [1]\n    loop(n, p, flag, a)\n    if flag[0] == 1:\n        print('YES')\n    else:\n        flag[0] = 1\n        p = [2, 1]\n        loop(n, p, flag, a)\n        if flag[0] == 1:\n            print('YES')\n        else:\n            print('NO')", "def loop(n, p, flag, a):\n    for i in range(n):\n        t1 = p[-1]\n        t2 = p[-2]\n        nxt = max(t1, t2) + 1\n        count1 = 0\n        if t1 < t2:\n            count1 += 1\n        if nxt < t1:\n            count1 += 1\n        if nxt < t2:\n            count1 += 1\n        if count1 == a[i]:\n            p.append(nxt)\n        nxt = min(t1, t2) - 1\n        count2 = 0\n        if t1 < t2:\n            count2 += 1\n        if nxt < t1:\n            count2 += 1\n        if nxt < t2:\n            count2 += 1\n        if count2 == a[i]:\n            p.append(nxt)\n        nxt = (t1 + t2) / 2\n        count3 = 0\n        if t1 < t2:\n            count3 += 1\n        if nxt < t1:\n            count3 += 1\n        if nxt < t2:\n            count3 += 1\n        if count3 == a[i]:\n            p.append(nxt)\n        if count1 != a[i] and count2 != a[i] and (count3 != a[i]):\n            flag[0] = 0\n            break\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = [1, 2]\n    flag = [1]\n    loop(n, p, flag, a)\n    if flag[0] == 1:\n        print('YES')\n    else:\n        flag[0] = 1\n        p = [2, 1]\n        loop(n, p, flag, a)\n        if flag[0] == 1:\n            print('YES')\n        else:\n            print('NO')", "lookup = {}\nlookup[0] = ['UU']\nlookup[1] = ['UD', 'DU']\nlookup[2] = ['DU', 'UD']\nlookup[3] = ['DD']\ncomb = {}\nfor i in range(4):\n    for j in range(4):\n        key = (i, j)\n        comb[key] = []\n        for num1 in lookup[i]:\n            for num2 in lookup[j]:\n                if num1[1] == num2[0]:\n                    comb[key].append(num2)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    if n == 1:\n        print('YES')\n        continue\n    ini = (arr[0], arr[1])\n    if not comb[ini]:\n        print('NO')\n    else:\n        if n == 2:\n            print('YES')\n            continue\n        ans = 'NO'\n        for pos in comb[ini]:\n            pref = True\n            curr = pos[1]\n            for i in range(2, n):\n                found = False\n                local_key = (arr[i - 1], arr[i])\n                for num in comb[local_key]:\n                    if num[0] == curr:\n                        curr = num[1]\n                        found = True\n                        break\n                if not found:\n                    pref = False\n                    break\n            if pref:\n                ans = 'YES'\n                break\n        print(ans)", "def mgc(arr):\n    if arr[0] == 0:\n        temp1 = [1, 2, 3]\n        temp2 = None\n    elif arr[0] == 1:\n        temp1 = [1, 3, 2]\n        temp2 = [2, 1, 3]\n    elif arr[0] == 2:\n        temp1 = [3, 1, 2]\n        temp2 = [2, 3, 1]\n    else:\n        temp1 = [3, 2, 1]\n        temp2 = None\n    for i in arr[1:]:\n        if i == 0:\n            if temp2:\n                temp2 = None\n            elif temp1[1] > temp1[2]:\n                return False\n            temp1 = [1, 2, 3]\n        elif i == 1:\n            if temp2:\n                temp1 = [1, 3, 2]\n                temp2 = [2, 1, 3]\n            elif temp1[1] > temp1[2]:\n                temp1 = [2, 1, 3]\n            else:\n                temp1 = [1, 3, 2]\n        elif i == 2:\n            if temp2:\n                temp1 = [3, 1, 2]\n                temp2 = [2, 3, 1]\n            elif temp1[1] > temp1[2]:\n                temp1 = [3, 1, 2]\n            else:\n                temp1 = [2, 3, 1]\n        else:\n            if temp2:\n                temp2 = None\n            elif temp1[1] < temp1[2]:\n                return False\n            temp1 = [3, 2, 1]\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = mgc(arr)\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "def answer():\n    (what, prev) = (-1, -1)\n    for i in range(n):\n        if a[i] == 0 or a[i] == 3:\n            if what == a[i]:\n                if i - prev & 1 == 0:\n                    return 'NO'\n            elif what != -1:\n                if i - prev & 1:\n                    return 'NO'\n            (what, prev) = (a[i], i)\n    return 'YES'\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "def solve(ar, n):\n    l = []\n    for i in range(n):\n        if ar[i] == 0 or ar[i] == 3:\n            l.append([ar[i], i])\n            if len(l) == 1:\n                continue\n            if l[0][0] == l[1][0]:\n                if (l[1][1] - l[0][1]) % 2 == 0:\n                    return False\n            elif (l[1][1] - l[0][1]) % 2 == 1:\n                return False\n            l.pop(0)\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if solve(l, n):\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 'YES'\n    f = 0\n    if a[0] == 0:\n        f = 1\n    if a[0] == 3:\n        f = 2\n    for i in range(1, n):\n        if a[i] == 0:\n            if f == 2:\n                res = 'NO'\n                break\n            else:\n                f = 1\n        elif a[i] == 3:\n            if f == 1:\n                res = 'NO'\n                break\n            else:\n                f = 2\n        elif a[i] == 1:\n            if f == 1:\n                f = 2\n            elif f == 2:\n                f = 1\n        elif f == 1:\n            f = 2\n        elif f == 2:\n            f = 1\n    print(res)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = []\n    for i in range(N):\n        if A[i] == 0 or A[i] == 3:\n            B.append((A[i], i))\n    stat = 1\n    for i in range(len(B) - 1):\n        steps = B[i + 1][1] - B[i][1]\n        if B[i + 1][0] != B[i][0]:\n            if steps % 2 != 0:\n                stat = 0\n                break\n        elif steps % 2 == 0:\n            stat = 0\n            break\n    if stat:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    arr = []\n    for i in range(len(nums)):\n        if nums[i] == 0 or nums[i] == 3:\n            arr.append((nums[i], i))\n    flag = 0\n    for i in range(len(arr) - 1):\n        steps = arr[i + 1][1] - arr[i][1]\n        if arr[i][0] == arr[i + 1][0]:\n            if steps % 2 == 0:\n                flag = 1\n                break\n        elif steps % 2 != 0:\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "from math import inf\nfrom collections import *\nimport math, os, sys, heapq, bisect, random, threading\nfrom functools import lru_cache\nfrom itertools import *\n\ndef inp():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef out(var):\n    sys.stdout.write(str(var))\n\ndef inpu():\n    return int(inp())\n\ndef lis():\n    return list(map(int, inp().split()))\n\ndef stringlis():\n    return list(map(str, inp().split()))\n\ndef sep():\n    return map(int, inp().split())\n\ndef strsep():\n    return map(str, inp().split())\n\ndef fsep():\n    return map(float, inp().split())\n(M, M1) = (1000000007, 998244353)\n\ndef main():\n    how_much_noob_I_am = 1\n    how_much_noob_I_am = inpu()\n    for _ in range(1, how_much_noob_I_am + 1):\n        n = inpu()\n        arr = lis()\n        ans = []\n        for i in range(n):\n            if arr[i] in [0, 3]:\n                ans.append([arr[i], i])\n        ok = True\n        for i in range(len(ans) - 1):\n            if ans[i + 1][0] - ans[i][0] == 0:\n                if (ans[i + 1][1] - ans[i][1]) % 2 != 0:\n                    ok &= True\n                else:\n                    ok &= False\n            elif (ans[i + 1][1] - ans[i][1]) % 2 == 0:\n                ok &= True\n            else:\n                ok &= False\n        if ok:\n            print('YES')\n        else:\n            print('NO')\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = input().split()\n    k = 0\n    for i in a:\n        if i == '3':\n            if k == 2:\n                print('NO')\n                break\n            k = 1\n        elif i == '0':\n            if k == 1:\n                print('NO')\n                break\n            k = 2\n        elif k == 2:\n            k = 1\n        elif k == 1:\n            k = 2\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = True\n    i = 0\n    while i < n:\n        if arr[i] != 1 or arr[i] == 2:\n            break\n        i += 1\n    while i < n:\n        c = 0\n        j = i + 1\n        while j < n:\n            if arr[j] == 1 or arr[j] == 2:\n                c += 1\n                j += 1\n            else:\n                break\n        if j == n:\n            break\n        if c % 2 == 0:\n            if arr[i] == 0:\n                if arr[j] == 3:\n                    ans = False\n                    break\n            if arr[i] == 3 and arr[j] == 0:\n                ans = False\n                break\n        else:\n            if arr[i] == 0:\n                if arr[j] == 0:\n                    ans = False\n                    break\n            if arr[i] == 3 and arr[j] == 3:\n                ans = False\n                break\n        i = j\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 'YES'\n    f = 0\n    if a[0] == 0:\n        f = 1\n    if a[0] == 3:\n        f = 2\n    for i in range(1, n):\n        if a[i] == 0:\n            if f == 2:\n                res = 'NO'\n                break\n            else:\n                f = 1\n        elif a[i] == 3:\n            if f == 1:\n                res = 'NO'\n                break\n            else:\n                f = 2\n        elif a[i] == 1:\n            if f == 1:\n                f = 2\n            elif f == 2:\n                f = 1\n        elif f == 1:\n            f = 2\n        elif f == 2:\n            f = 1\n    print(res)", "addy = int(input())\nfor t in range(addy):\n    n = int(input())\n    l = list(map(int, input().split()))\n    temp = 0\n    f = 1\n    for i in range(n):\n        if i == 0:\n            if l[i] == 0:\n                temp = 0\n            elif l[i] == 1 or l[i] == 2:\n                temp = 0\n            else:\n                temp = 1\n        elif temp:\n            if l[i] == 0:\n                f = 0\n                break\n            elif l[i] == 1 or l[i] == 2:\n                temp = 0\n            else:\n                temp = 1\n        elif l[i] == 0:\n            temp = 0\n        elif l[i] == 1 or l[i] == 2:\n            temp = 1\n        else:\n            f = 0\n            break\n    g = 1\n    for i in range(n):\n        if i == 0:\n            if l[i] == 0:\n                temp = 0\n            elif l[i] == 1 or l[i] == 2:\n                temp = 1\n            else:\n                temp = 1\n        elif temp:\n            if l[i] == 0:\n                g = 0\n                break\n            elif l[i] == 1 or l[i] == 2:\n                temp = 0\n            else:\n                temp = 1\n        elif l[i] == 0:\n            temp = 0\n        elif l[i] == 1 or l[i] == 2:\n            temp = 1\n        else:\n            g = 0\n            break\n    if f | g:\n        print('YES')\n    else:\n        print('NO')", "import sys\nsys.setrecursionlimit(10 ** 5)\nmaxN = 10 ** 5 + 5\nA = [None] * 4\nB = [None] * 4\nA[0] = [[1, 1], [2, 0], [0, 0]]\nA[1] = [[0, 0], [2, 0], [1, 1]]\nB[1] = [[2, 1], [3, 0], [1, 0]]\nA[2] = [[1, 0], [3, 0], [2, 1]]\nB[2] = [[0, 0], [1, 1], [2, 0]]\nA[3] = [[1, 0], [2, 1], [3, 0]]\n\ndef solve(data, pos, idx, n, accum):\n    poss = True\n    for i in range(n - 1):\n        if pos[1] == 0:\n            num = data[i + 1]\n            p = None\n            found = False\n            for j in A[pos[0]]:\n                if j[0] == num:\n                    p = j\n                    found = True\n                    break\n            if found:\n                pos = p\n            else:\n                poss = False\n                break\n        elif pos[1] == 1:\n            num = data[i + 1]\n            p = None\n            found = False\n            for j in B[pos[0]]:\n                if j[0] == num:\n                    p = j\n                    found = True\n                    break\n            if found:\n                pos = p\n            else:\n                poss = False\n                break\n    accum[0] = poss\n\ndef main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n = int(input())\n        data = list(map(int, input().split()))\n        if data[0] == 0 or data[0] == 3:\n            accum = [True]\n            solve(data, [data[0], 0], 0, n, accum)\n            b = accum[0]\n            if b:\n                print('YES')\n            else:\n                print('NO')\n        else:\n            accum = [True]\n            solve(data, [data[0], 0], 0, n, accum)\n            b = accum[0]\n            solve(data, [data[0], 1], 0, n, accum)\n            b = b or accum[0]\n            if b:\n                print('YES')\n            else:\n                print('NO')\nmain()", "lookup = {}\nlookup[0] = ['UU']\nlookup[1] = ['UD', 'DU']\nlookup[2] = ['DU', 'UD']\nlookup[3] = ['DD']\ncomb = {}\nfor i in range(4):\n    for j in range(4):\n        key = (i, j)\n        comb[key] = []\n        for num1 in lookup[i]:\n            for num2 in lookup[j]:\n                if num1[1] == num2[0]:\n                    comb[key].append(num2)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    if n == 1:\n        print('YES')\n        continue\n    ini = (arr[0], arr[1])\n    if not comb[ini]:\n        print('NO')\n    else:\n        if n == 2:\n            print('YES')\n            continue\n        ans = 'NO'\n        for pos in comb[ini]:\n            pref = True\n            curr = pos[1]\n            for i in range(2, n):\n                found = False\n                local_key = (arr[i - 1], arr[i])\n                for num in comb[local_key]:\n                    if num[0] == curr:\n                        curr = num[1]\n                        found = True\n                        break\n                if not found:\n                    pref = False\n                    break\n            if pref:\n                ans = 'YES'\n                break\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (z, fail, c) = (0, False, 0)\n    for i in range(len(arr)):\n        item = arr[i]\n        if item in [0, 3]:\n            z = i\n            break\n    for i in arr[z + 1:]:\n        if i == 0:\n            if item == 3 and c % 2 == 0 or (item == 0 and c % 2 == 1):\n                fail = True\n                break\n            (item, c) = (0, 0)\n        elif i == 3:\n            if item == 0 and c % 2 == 0 or (item == 3 and c % 2 == 1):\n                fail = True\n                break\n            (item, c) = (3, 0)\n        else:\n            c += 1\n    if fail:\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 'YES'\n    f = 0\n    if a[0] == 0:\n        f = 1\n    if a[0] == 3:\n        f = 2\n    for i in range(1, n):\n        if a[i] == 0:\n            if f == 2:\n                res = 'NO'\n                break\n            else:\n                f = 1\n        elif a[i] == 3:\n            if f == 1:\n                res = 'NO'\n                break\n            else:\n                f = 2\n        elif a[i] == 1:\n            if f == 1:\n                f = 2\n            elif f == 2:\n                f = 1\n        elif f == 1:\n            f = 2\n        elif f == 2:\n            f = 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mp = [[] for _ in range(4)]\n    mp[0].append('gg')\n    mp[1].append('gl')\n    mp[1].append('lg')\n    mp[2].append('gl')\n    mp[2].append('lg')\n    mp[3].append('ll')\n    q = []\n    for i in range(len(mp[arr[0]])):\n        q.append(mp[arr[0]][i])\n    j = 1\n    flagg = False\n    while len(q):\n        nn = len(q)\n        if n == j:\n            flagg = True\n            print('YES')\n            break\n        z = arr[j]\n        j += 1\n        for i in range(nn):\n            s = q[0]\n            q = q[1:]\n            for k in range(len(mp[z])):\n                st = mp[z][k]\n                if s[1] == st[0]:\n                    q.append(st)\n    if flagg:\n        continue\n    print('NO')", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[False] == True or l[False] == 2:\n        a = [False, True]\n    elif l[False] == 3:\n        a = [True]\n    else:\n        a = [False]\n    for i in a:\n        for j in range(n):\n            if l[j] == 1 or l[j] == 2:\n                i = not i\n            elif l[j] == 3:\n                if i == False:\n                    break\n            elif i == True:\n                break\n        else:\n            print('YES')\n            break\n    else:\n        print('NO')\ntest_case = int(input())\nwhile test_case > 0:\n    solve()\n    test_case -= 1", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (z, mode) = (0, -1)\n    for t in range(len(arr)):\n        i = arr[t]\n        if i == 0 or i == 3:\n            z = t\n            if i == 0:\n                mode = 1\n            else:\n                mode = 0\n            break\n    (wrong, count) = (False, 0)\n    for i in arr[z + 1:]:\n        if i == 0:\n            if mode == 0 and count % 2 == 0 or (mode == 1 and count % 2 == 1):\n                wrong = True\n                break\n            mode = 1\n            count = 0\n        elif i == 3:\n            if mode == 1 and count % 2 == 0 or (mode == 0 and count % 2 == 1):\n                wrong = True\n                break\n            mode = 0\n            count = 0\n        else:\n            count += 1\n    if wrong:\n        print('NO')\n    else:\n        print('YES')", "def process(curr, l):\n    for k in range(1, len(l)):\n        if l[k] == 0:\n            if curr == 'u':\n                return 'NO'\n            else:\n                curr = 's'\n        if l[k] == 1:\n            if curr == 'u':\n                curr = 's'\n            else:\n                curr = 'u'\n        if l[k] == 2:\n            if curr == 'u':\n                curr = 's'\n            else:\n                curr = 'u'\n        if l[k] == 3:\n            if curr == 's':\n                return 'NO'\n            else:\n                curr = 'u'\n    return 'YES'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    j = 0\n    l = list(map(int, input().split(' ')))\n    curr = True\n    if l[0] == 0:\n        curr = 's'\n        print(process(curr, l))\n    elif l[0] == 3:\n        curr = 'u'\n        print(process(curr, l))\n    elif process('s', l) == 'NO' and process('u', l) == 'NO':\n        print('NO')\n    else:\n        print('YES')", "tc = int(input())\nfor case in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == 1 or a[0] == 2:\n        prev = [0, 1]\n    elif a[0] == 3:\n        prev = [1]\n    else:\n        prev = [0]\n    for pr in prev:\n        for i in range(n):\n            if a[i] == 1 or a[i] == 2:\n                if pr == 0:\n                    pr = 1\n                else:\n                    pr = 0\n            elif a[i] == 3:\n                if pr == 1:\n                    pr = 1\n                else:\n                    break\n            elif pr == 0:\n                pr = 0\n            else:\n                break\n        else:\n            print('YES')\n            break\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 0\n    order = [[-1] * 4 for x in range(n + 2)]\n    if a[0] == 0:\n        order[1][2] = order[2][1] = 0\n    if a[0] == 1 or a[0] == 2:\n        order[1][2] = order[2][1] = 11\n    if a[0] == 3:\n        order[1][2] = order[2][1] = 3\n    for x in range(1, n):\n        b = order[x][2]\n        if b == 0 and a[x] == 3:\n            flag = 1\n            break\n        if b == 3 and a[x] == 0:\n            flag = 1\n            break\n        if a[x] == 1 and b == 0:\n            order[x + 1][2] = 3\n        elif a[x] == 1 and b == 3:\n            order[x + 1][2] = 0\n        elif a[x] == 1:\n            order[x + 1][2] = 11\n        if a[x] == 2 and b == 0:\n            order[x + 1][2] = 3\n        elif a[x] == 2 and b == 3:\n            order[x + 1][2] = 0\n        elif a[x] == 2:\n            order[x + 1][2] = 11\n        if a[x] == 3:\n            order[x + 1][2] = 3\n        if a[x] == 0:\n            order[x + 1][2] = 0\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    yesval = 'YES'\n    lp = 0\n    while lp < N and A[lp] != 0 and (A[lp] != 3):\n        lp += 1\n    rp = N - 1\n    while rp > -1 and A[rp] != 0 and (A[rp] != 3):\n        rp -= 1\n    if rp >= lp and N != 1:\n        cur = str(A[lp])\n        for theta in range(lp + 1, rp + 1):\n            arr_val = A[theta]\n            if cur == '0' or cur == '1b' or cur == '2b':\n                if arr_val == 0:\n                    cur = '0'\n                elif arr_val == 1:\n                    cur = '1a'\n                elif arr_val == 2:\n                    cur = '2a'\n                elif arr_val == 3:\n                    yesval = 'NO'\n                    break\n            elif cur == '3' or cur == '1a' or cur == '2a':\n                if arr_val == 3:\n                    cur = '3'\n                if arr_val == 1:\n                    cur = '1b'\n                elif arr_val == 2:\n                    cur = '2b'\n                elif arr_val == 0:\n                    yesval = 'NO'\n                    break\n        print(yesval)\n    else:\n        print('YES')", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {'00': ['00', '10', '21', '-1'], '11': ['00', '10', '21', '-1'], '20': ['00', '10', '21', '-1'], '10': ['-1', '11', '20', '30'], '21': ['-1', '11', '20', '30'], '30': ['-1', '11', '20', '30'], '01': ['-1', '-1', '-1', '-1'], '31': ['-1', '-1', '-1', '-1']}\n    o = 0\n    for c in '01':\n        ok = True\n        curr = str(l[0]) + c\n        for i in range(n - 1):\n            curr = d[curr][l[i + 1]]\n            if curr == '-1':\n                ok = False\n                break\n        if ok:\n            print('YES')\n            o = 1\n            break\n    if o == 0:\n        print('NO')", "adj_list = [[0, 1, 3], [2, 4, 5], [0, 1, 3], [2, 4, 5], [0, 1, 3], [2, 4, 5]]\n\ndef check_possible(arr, adj, start):\n    for i in range(1, len(arr)):\n        if arr[i] == 0:\n            next1 = {0}\n        elif arr[i] == 3:\n            next1 = {5}\n        elif arr[i] == 1:\n            next1 = {1, 2}\n        else:\n            next1 = {3, 4}\n        for ele in next1:\n            if ele in adj_list[start]:\n                start = ele\n                break\n        else:\n            return False\n    return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == 1:\n        check1 = check_possible(a, adj_list, 1)\n        check2 = check_possible(a, adj_list, 2)\n        if check1 == True or check2 == True:\n            print('YES')\n        else:\n            print('NO')\n    elif a[0] == 2:\n        check1 = check_possible(a, adj_list, 3)\n        check2 = check_possible(a, adj_list, 4)\n        if check1 == True or check2 == True:\n            print('YES')\n        else:\n            print('NO')\n    elif a[0] == 0:\n        check1 = check_possible(a, adj_list, 0)\n        if check1 == True:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        check1 = check_possible(a, adj_list, 5)\n        if check1 == True:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    f = True\n    stack = []\n    if arr[0] == 0:\n        stack.append(1)\n    elif arr[0] == 1:\n        pass\n    elif arr[0] == 2:\n        pass\n    else:\n        stack.append(-1)\n    for el in arr[1:]:\n        if el == 0:\n            if not stack or stack[-1] == 1:\n                stack.append(1)\n            else:\n                f = False\n                break\n        elif el == 3:\n            if not stack or stack[-1] == -1:\n                stack.append(-1)\n            else:\n                f = False\n                break\n        elif el == 2:\n            if not stack:\n                pass\n            elif stack[-1] == 1:\n                stack.append(-1)\n            elif stack[-1] == -1:\n                stack.append(1)\n        elif el == 1:\n            if not stack:\n                pass\n            elif stack[-1] == 1:\n                stack.append(-1)\n            elif stack[-1] == -1:\n                stack.append(1)\n    if f:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom math import sqrt, gcd, factorial, ceil, floor\nfrom collections import deque, Counter, OrderedDict\nfrom heapq import heapify, heappush, heappop\ninput = lambda : sys.stdin.readline()\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    n = I()\n    a = L()\n    ans = 'YES'\n    if a[0] == 0:\n        v = 1\n    elif a[0] == 3:\n        v = -1\n    else:\n        v = 0\n    for i in range(1, n):\n        if a[i] == 0:\n            if v == -1:\n                ans = 'NO'\n                break\n            else:\n                v = 1\n        elif a[i] == 3:\n            if v == 1:\n                ans = 'NO'\n                break\n            else:\n                v = -1\n        elif a[i] == 1:\n            if v == 1:\n                v = -1\n            elif v == -1:\n                v = 1\n        elif v == 1:\n            v = -1\n        elif v == -1:\n            v = 1\n    print(ans)"]