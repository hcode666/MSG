["from math import log2\n\ndef calc(num):\n    cur = log2(num + 1)\n    return cur == int(cur)\n\ndef soln(n: int) -> int:\n    if calc(n):\n        return n + 1\n    return 1 << int(log2(n))\nfor _ in range(int(input())):\n    n = int(input())\n    print(soln(n))", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    if x == 0:\n        print(1)\n    elif x == 1 or x == 2:\n        print(2)\n    else:\n        po = 1\n        while 2 * po <= x:\n            po *= 2\n        if x == 2 * po - 1:\n            print(x + 1)\n        else:\n            print(po)", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    if x == 0:\n        print(1)\n    elif x == 1 or x == 2:\n        print(2)\n    else:\n        po = 1\n        while 2 * po <= x:\n            po *= 2\n        if x == 2 * po - 1:\n            print(x + 1)\n        else:\n            print(po)", "for t in range(int(input())):\n    a = int(input())\n    if a > 4:\n        k = 0\n        l = a\n        while a // 2:\n            a //= 2\n            k += 1\n        if 2 * 2 ** k - 1 == l:\n            print(l + 1)\n        else:\n            print(2 ** k)\n    else:\n        k = 0\n        l = 0\n        while a >= k:\n            l += 1\n            k |= l\n        print(l)", "import math\nfor _ in range(int(input())):\n    x = int(input())\n    if x == 0:\n        print(1)\n    elif x == 1 or x == 2:\n        print(2)\n    else:\n        y = int(math.log2(x + 1))\n        print(2 ** y)", "import math\nfor _ in range(int(input())):\n    x = int(input())\n    if x == 0:\n        print(1)\n    elif x == 1 or x == 2:\n        print(2)\n    else:\n        y = int(math.log2(x + 1))\n        print(2 ** y)", "import math\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    if x == 0:\n        print(1)\n        continue\n    mex = 1\n    orArray = 0\n    i = 1\n    while i <= 2 ** int(math.log2(x) + 1):\n        orArray |= i\n        if orArray > x:\n            mex = i\n            break\n        i *= 2\n    print(mex)", "import math\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    if x == 0:\n        print(1)\n        continue\n    mex = 1\n    orArray = 0\n    i = 1\n    while i <= 2 ** int(math.log2(x) + 1):\n        orArray |= i\n        if orArray > x:\n            mex = i\n            break\n        i *= 2\n    print(mex)", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    x += 1\n    cnt = -1\n    while x:\n        x = x >> 1\n        cnt += 1\n    print(2 ** cnt)", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    x += 1\n    cnt = -1\n    while x:\n        x = x >> 1\n        cnt += 1\n    print(2 ** cnt)", "from math import floor, log\n\ndef inp():\n    return int(input())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\ntcs = inp()\nfor i in range(tcs):\n    X = inp()\n    X += 1\n    count = -1\n    while X:\n        X = X >> 1\n        count += 1\n    MEX = 2 ** count\n    print(MEX)", "from math import floor, log\n\ndef inp():\n    return int(input())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\ntcs = inp()\nfor i in range(tcs):\n    X = inp()\n    X += 1\n    count = -1\n    while X:\n        X = X >> 1\n        count += 1\n    MEX = 2 ** count\n    print(MEX)", "import math\nfor z in range(int(input())):\n    x = int(input())\n    i = int(math.log(x + 1, 2))\n    print(2 ** i)", "from bisect import bisect_left, bisect_right\nimport math\nfrom bisect import bisect_left\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\nfrom collections import deque, defaultdict\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor i in range(ii()):\n    N = ii()\n    if N == 0:\n        print(1)\n    elif N == 1 or N == 2:\n        print(2)\n    else:\n        ans = 1\n        f = False\n        while ans * 2 <= N:\n            ans *= 2\n            if ans == N:\n                f = True\n                print(N)\n            elif N == 2 * ans - 1:\n                f = True\n                print(N + 1)\n        if f == False:\n            print(ans)", "from bisect import bisect_left, bisect_right\nimport math\nfrom bisect import bisect_left\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\nfrom collections import deque, defaultdict\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor i in range(ii()):\n    N = ii()\n    if N == 0:\n        print(1)\n    elif N == 1 or N == 2:\n        print(2)\n    else:\n        ans = 1\n        f = False\n        while ans * 2 <= N:\n            ans *= 2\n            if ans == N:\n                f = True\n                print(N)\n            elif N == 2 * ans - 1:\n                f = True\n                print(N + 1)\n        if f == False:\n            print(ans)", "def listin():\n    a = list(map(int, input().split()))\n    return a\nfor tastcas in range(int(input())):\n    n = int(input())\n    x = bin(n)[2:]\n    if '0' in x:\n        print(int('1' + '0' * (len(x) - 1), 2))\n    else:\n        print(n + 1)", "import math\n\ndef main():\n    if x == 0:\n        print(1)\n    elif x == 1:\n        print(2)\n    else:\n        bits = int(math.log2(x))\n        if 2 ** (bits + 1) - 1 == x:\n            print(2 ** (bits + 1))\n        else:\n            print(2 ** bits)\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    main()", "mod = 1000000007\n\ndef integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\nimport math\nimport sys\nfrom collections import Counter\nfrom decimal import Decimal\n\ndef main():\n    if x == 0:\n        print(1)\n    elif x == 1:\n        print(2)\n    else:\n        bits = int(math.log2(x))\n        if 2 ** (bits + 1) - 1 == x:\n            print(2 ** (bits + 1))\n        else:\n            print(2 ** bits)\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    main()", "T = int(input(''))\nfor i in range(T):\n    X = int(input(''))\n    a = 1\n    while a * 2 <= X + 1:\n        a *= 2\n    print(a)", "T = int(input(''))\nfor i in range(T):\n    X = int(input(''))\n    a = 1\n    while a * 2 <= X + 1:\n        a *= 2\n    print(a)", "T = int(input(''))\nfor i in range(T):\n    X = int(input(''))\n    a = 1\n    while a * 2 <= X + 1:\n        a *= 2\n    print(a)", "import math\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    if x == 0:\n        print(1)\n    elif x == 1:\n        print(2)\n    else:\n        y = int(math.log2(x + 1))\n        print(2 ** y)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 0:\n        print(1)\n    else:\n        n2 = int(math.log2(n + 1))\n        print(2 ** n2)", "import math\n\ndef mexor(n):\n    p1 = int(math.log(n + 1) / math.log(2))\n    p2 = 1 << p1\n    print(p2)\nq = int(input())\nfor i in range(q):\n    n = int(input())\n    mexor(n)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 0:\n        print(1)\n    else:\n        n2 = int(math.log2(n + 1))\n        print(2 ** n2)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 0:\n        print(1)\n    else:\n        n2 = int(math.log2(n + 1))\n        print(2 ** n2)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 0:\n        print(1)\n    else:\n        n2 = int(math.log2(n + 1))\n        print(2 ** n2)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 0:\n        print(1)\n    else:\n        n2 = int(math.log2(n + 1))\n        print(2 ** n2)", "import math\nfor _ in range(int(input())):\n    x = int(input())\n    if x == 0 or x == 1:\n        print(x + 1)\n    elif x & x - 1 == 0:\n        print(x)\n    else:\n        p = int(math.log(x + 1, 2))\n        print(int(pow(2, p)))", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        print(1)\n    elif n == 1 or n == 2:\n        print(2)\n    else:\n        log2 = math.log2(n)\n        power2_ = 2 ** int(log2)\n        power2 = 2 ** int(log2 + 1)\n        if n == power2 - 1:\n            print(power2)\n        else:\n            print(power2_)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        print(1)\n    elif n == 1 or n == 2:\n        print(2)\n    else:\n        log2 = math.log2(n)\n        power2_ = 2 ** int(log2)\n        power2 = 2 ** int(log2 + 1)\n        if n == power2 - 1:\n            print(power2)\n        else:\n            print(power2_)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    i = 1\n    sum = 1\n    while sum + i * 2 <= n:\n        sum = sum + i * 2\n        i = i * 2\n    if n == 0:\n        print(1)\n    else:\n        print(sum + 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "import math\n\ndef mexOr(x):\n    if x & x + 1 == 0:\n        return x + 1\n    nearestPower = int(math.log(x, 2))\n    minAns = 2 ** nearestPower\n    return minAns\ntestCase = int(input())\nfor i in range(testCase):\n    x = int(input())\n    print(mexOr(x))", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    ans = -1\n    for i in range(60):\n        if 1 << i & n:\n            ans = pow(2, i)\n    val = '{0:b}'.format(int(n))\n    val = val[::-1]\n    idx = -1\n    for i in range(len(val)):\n        if val[i] == '0':\n            idx = i\n            break\n    if n == 0:\n        print(1)\n        continue\n    if n == 1:\n        print(2)\n        continue\n    if idx == -1:\n        print(n + 1)\n    else:\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "def check(N):\n    if N == 0:\n        return 1\n    if N == 1:\n        return 2\n    pe = 1\n    while pe * 2 <= N:\n        pe = pe * 2\n    if pe == N:\n        return N\n    if N == pe * 2 - 1:\n        return N + 1\n    return pe\nfor _ in range(int(input())):\n    N = int(input())\n    print(check(N))", "def check(N):\n    if N == 0:\n        return 1\n    if N == 1:\n        return 2\n    pe = 1\n    while pe * 2 <= N:\n        pe = pe * 2\n    if pe == N:\n        return N\n    if N == pe * 2 - 1:\n        return N + 1\n    return pe\nfor _ in range(int(input())):\n    N = int(input())\n    print(check(N))", "def check(N):\n    if N == 0:\n        return 1\n    if N == 1:\n        return 2\n    pe = 1\n    while pe * 2 <= N:\n        pe = pe * 2\n    if pe == N:\n        return N\n    if N == pe * 2 - 1:\n        return N + 1\n    return pe\nfor _ in range(int(input())):\n    N = int(input())\n    print(check(N))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    a = True\n    c = 0\n    x = 0\n    x += m\n    if x == 0:\n        print(1)\n    else:\n        while x:\n            if x % 2 == 0:\n                a = False\n            x = x // 2\n            c += 1\n        if a:\n            print(m + 1)\n        else:\n            s = 0\n            c = c - 1\n            while c:\n                c = c - 1\n                s = s + 2 ** c\n            print(s + 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    p = int(math.log2(n + 1))\n    print(2 ** p)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        print(1)\n    elif n == 1:\n        print(2)\n    else:\n        li = int(math.log(n, 2))\n        if pow(2, li + 1) - 1 == n:\n            print(n + 1)\n        else:\n            print(pow(2, li))", "import math\n\ndef solve(n):\n    return 2 ** int(math.log2(n + 1))\nT = int(input())\nfor _ in range(T):\n    n = list(map(int, input().strip().split()))\n    print(solve(n[0]))", "import math\n\ndef solve(n):\n    return 2 ** int(math.log2(n + 1))\nT = int(input())\nfor _ in range(T):\n    n = list(map(int, input().strip().split()))\n    print(solve(n[0]))", "def chk(n):\n    s = 1\n    res = 0\n    while 2 * s <= n:\n        s *= 2\n        if s == n:\n            res = n\n        elif n == s * 2 - 1:\n            res = n + 1\n        else:\n            res = s\n    return res\nfor i in range(int(input())):\n    n = int(input())\n    if n <= 0:\n        res = 1\n    elif n < 3:\n        res = 2\n    else:\n        res = chk(n)\n    print(res)", "for t in range(int(input())):\n    x = int(input())\n    if x == 0:\n        print(1)\n        pass\n    elif x == 1 or x == 2:\n        print(2)\n        pass\n    else:\n        a = 2\n        while a | a - 1 <= x:\n            a = a * 2\n        print(a)", "for _ in range(int(input())):\n    x = int(input())\n    y = bin(x)[2:]\n    if x == 0:\n        ans = 1\n    elif '0' not in y:\n        ans = x + 1\n    else:\n        L = len(y)\n        ans = 2 ** (L - 1)\n    print(ans)", "dict1 = {0: 0, 1: 1, 2: 3, 4: 7, 8: 15, 16: 31, 32: 63, 64: 127, 128: 255, 256: 511, 512: 1023, 1024: 2047, 2048: 4095, 4096: 8191, 8192: 16383, 16384: 32767, 32768: 65535, 65536: 131071, 131072: 262143, 262144: 524287, 524288: 1048575, 1048576: 2097151, 2097152: 4194303, 4194304: 8388607, 8388608: 16777215, 16777216: 33554431, 33554432: 67108863, 67108864: 134217727, 134217728: 268435455, 268435456: 536870911, 536870912: 1073741823, 1073741824: 2147483647}\nfor _ in range(int(input())):\n    x = int(input())\n    for key in dict1:\n        if dict1[key] > x:\n            print(key)\n            break", "import math\ndict1 = {0: 0, 1: 1, 2: 3, 4: 7, 8: 15, 16: 31, 32: 63, 64: 127, 128: 255, 256: 511, 512: 1023, 1024: 2047, 2048: 4095, 4096: 8191, 8192: 16383, 16384: 32767, 32768: 65535, 65536: 131071, 131072: 262143, 262144: 524287, 524288: 1048575, 1048576: 2097151, 2097152: 4194303, 4194304: 8388607, 8388608: 16777215, 16777216: 33554431, 33554432: 67108863, 67108864: 134217727, 134217728: 268435455, 268435456: 536870911, 536870912: 1073741823, 1073741824: 2147483647}\ntests = int(input())\nfor t0 in range(tests):\n    x = int(input())\n    for key in dict1:\n        if dict1[key] > x:\n            print(key)\n            break", "for _ in range(int(input())):\n    n = int(input())\n    c = 1\n    q = 2\n    while n >= q:\n        q = q * 2\n    p = q // 2\n    if n == q - 1:\n        print(q)\n    else:\n        print(p)", "for i in range(int(input())):\n    X = int(input())\n    cur_pow = 1\n    while 2 * cur_pow - 1 <= X:\n        cur_pow *= 2\n    print(cur_pow)", "for i in range(int(input())):\n    x = int(input())\n    if x in [0, 1]:\n        print(x + 1)\n    else:\n        l = 0\n        for j in range(1, 34):\n            if 2 ** j - 1 > x:\n                print(l + 1)\n                break\n            l = 2 ** j - 1", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    ans = 1\n    s = 1\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        while s * 2 <= n:\n            s *= 2\n        if s == n:\n            ans = n\n        elif n == 2 * s - 1:\n            ans = n + 1\n        else:\n            ans = s\n    print(ans)", "for i in range(int(input())):\n    x = int(input())\n    if x == 0:\n        mex = 1\n    ans = 1\n    j = 0\n    while ans * 2 <= x:\n        ans *= 2\n        j += 1\n    a = ans - 1\n    b = 2 ** (j + 1)\n    if x in range(a, b - 1):\n        mex = ans\n    elif x == b - 1:\n        mex = b\n    print(mex)", "for i in range(int(input())):\n    x = int(input())\n    if x == 0:\n        mex = 1\n    ans = 1\n    j = 0\n    while ans * 2 <= x:\n        ans *= 2\n        j += 1\n    a = ans - 1\n    b = 2 ** (j + 1) - 1\n    if x in range(a, b):\n        mex = ans\n    elif x == b:\n        mex = b + 1\n    print(mex)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    p = int(math.log2(n + 1))\n    print(2 ** p)", "for _ in range(int(input())):\n    x = int(input())\n    if x == 0:\n        print(1)\n        continue\n    if x == 1 or x == 2:\n        print(2)\n        continue\n    temp = 1\n    while temp * 2 <= x:\n        temp = temp * 2\n    if temp == x:\n        print(temp)\n    elif x == 2 * temp - 1:\n        print(x + 1)\n    else:\n        print(temp)", "try:\n\n    def mex(n):\n        if n == 0:\n            return 1\n        if n == 1:\n            return 2\n        bitN = bin(n).replace('0b', '')\n        l = len(bitN)\n        bound_num = '1' * l\n        while int(bound_num, 2) <= n:\n            bound_num += '1'\n        return 2 ** (len(bound_num) - 1)\n    for _ in range(int(input())):\n        print(mex(int(input())))\nexcept:\n    pass", "import math\na = [0]\nx = 0\ni = 1\nwhile x <= int(1000000000.0 + 1):\n    x |= i\n    a.append(x)\n    i *= 2\nfor _ in range(int(input())):\n    x = int(input())\n    for i in range(len(a)):\n        if a[i] > x:\n            print(2 ** (i - 1))\n            break", "from math import log2\nfor _ in range(int(input())):\n    n = int(input())\n    pow = int(log2(n + 1))\n    powerof2 = 1 << pow\n    print(powerof2)", "for _ in range(int(input())):\n    x = int(input())\n    b = bin(x)[2:]\n    c = '1' + '0' * (len(b) - 1)\n    if x == 0:\n        print(1)\n    elif x == 1:\n        print(2)\n    elif all([b[i] == '1' for i in range(len(b))]):\n        print(x + 1)\n    else:\n        print(int(c, 2))", "def check(N):\n    if N == 0:\n        return 1\n    if N == 1:\n        return 2\n    pe = 1\n    while pe * 2 <= N:\n        pe = pe * 2\n    if pe == N:\n        return N\n    if N == pe * 2 - 1:\n        return N + 1\n    return pe\nfor _ in range(int(input())):\n    N = int(input())\n    print(check(N))", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        ans = 1\n    elif n == 1 or n == 2:\n        ans = 2\n    else:\n        sum = 1\n        while 2 * sum <= n:\n            sum = sum * 2\n            if sum == n:\n                ans = n\n            elif n == 2 * sum - 1:\n                ans = n + 1\n            else:\n                ans = sum\n    print(ans)", "def check(N):\n    if N == 0:\n        return 1\n    if N == 1:\n        return 2\n    pe = 1\n    while pe * 2 <= N:\n        pe = pe * 2\n    if pe == N:\n        return N\n    if N == pe * 2 - 1:\n        return N + 1\n    return pe\nfor _ in range(int(input())):\n    N = int(input())\n    print(check(N))", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    a = True\n    c = 0\n    x = 0\n    x += m\n    if x == 0:\n        print(1)\n    else:\n        while x:\n            if x % 2 == 0:\n                a = False\n            x = x // 2\n            c += 1\n        if a:\n            print(m + 1)\n        else:\n            s = 0\n            c = c - 1\n            while c:\n                c = c - 1\n                s = s + 2 ** c\n            print(s + 1)", "for i in range(int(input())):\n    x = int(input())\n    s = 1\n    u = 2\n    while s | u <= x:\n        s = s | u\n        u = u * 2\n    print(1 if not x else u)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    a = True\n    c = 0\n    x = 0\n    x += m\n    if x == 0:\n        print(1)\n    else:\n        while x:\n            if x % 2 == 0:\n                a = False\n            x = x // 2\n            c += 1\n        if a:\n            print(m + 1)\n        else:\n            s = 0\n            c = c - 1\n            while c:\n                c = c - 1\n                s = s + 2 ** c\n            print(s + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = 1\n    b = 2\n    while n >= b | a:\n        a = a | b\n        b = b << 1\n    if n:\n        print(b)\n    else:\n        print('1')", "from math import log2\nfor _ in range(int(input())):\n    n = int(input())\n    pow = int(log2(n + 1))\n    powerof2 = 1 << pow\n    print(powerof2)", "def sol():\n    return needed()\n\ndef needed():\n    return\n\ndef mat(X):\n    if X:\n        low = 2 ** int(log(X, 2))\n        if X == low * 2 - 1:\n            return 2 * low\n        else:\n            return low\n    else:\n        return 1\nfrom math import log\nsol()\nsol()\nsol()\nfor _ in range(int(input())):\n    print(mat(int(input())))", "n = int(input())\nfor i in range(1, n + 1):\n    a = int(input())\n    if a == 0:\n        print(1)\n    elif a == 1 or a == 2:\n        print(2)\n    else:\n        temp = 1\n        while temp * 2 <= a:\n            temp = temp * 2\n        if temp == a:\n            print(a)\n        elif a == 2 * temp - 1:\n            print(a + 1)\n        else:\n            print(temp)", "for _ in range(int(input())):\n    x = int(input())\n    i = 1\n    if x == 0:\n        print(1)\n    elif x == 1 or x == 2:\n        print(2)\n    else:\n        while i * 2 <= x:\n            i = i * 2\n        if i * 2 - 1 == x:\n            print(x + 1)\n        elif i == x:\n            print(x)\n        else:\n            print(i)", "for i in range(int(input())):\n    x = int(input())\n    ans = 1\n    if x == 0:\n        print('1')\n    elif x == 1 or x == 2:\n        print('2')\n    else:\n        while ans * 2 <= x:\n            ans *= 2\n        if ans == x:\n            print(x)\n        elif x == 2 * ans - 1:\n            print(x + 1)\n        else:\n            print(ans)", "for i in range(int(input())):\n    (n, a, b) = (int(input()), 1, 2)\n    while a | b <= n:\n        a |= b\n        b *= 2\n    print(1 if not n else b)", "for i in range(int(input())):\n    x = int(input())\n    s = 1\n    u = 2\n    while s | u <= x:\n        s = s | u\n        u = u * 2\n    print(1 if not x else u)", "for i in range(int(input())):\n    x = int(input())\n    s = 1\n    u = 2\n    while s | u <= x:\n        s = s | u\n        u = u * 2\n    print(1 if not x else u)", "for t in range(int(input())):\n    n = int(input())\n    a = bin(n).replace('0b', '')\n    l = len(a)\n    p = 2 ** l\n    if n & n - 1 == 0 and n != 1 and (n != 0):\n        print(n)\n    elif n & n + 1 == 0:\n        print(n + 1)\n    elif n == 1 or n == 0:\n        print(n + 1)\n    else:\n        print(p // 2)", "inp = int(input())\nfor _ in range(inp):\n    num = int(input())\n    numb = f'{num:32b}'.strip()\n    length = len(numb) - 1\n    if '0' in numb:\n        print(2 ** length)\n    else:\n        print(num + 1)", "a = [0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215, 33554431, 67108863, 134217727, 268435455, 536870911, 1073741823, 2147483647, 4294967295, 8589934591, 17179869183, 34359738367, 68719476735, 137438953471, 274877906943, 549755813887, 1099511627775, 2199023255551, 4398046511103, 8796093022207, 17592186044415, 35184372088831, 70368744177663, 140737488355327, 281474976710655, 562949953421311]\nfor i in range(int(input())):\n    x = int(input())\n    i = 0\n    while a[i] <= x:\n        i += 1\n    print(a[i - 1] + 1)", "for q in range(int(input())):\n    x = int(input())\n    s = bin(x).replace('0b', '')\n    if 2 ** len(s) == x:\n        print(x)\n    elif 2 ** len(s) - 1 == x:\n        print(x + 1)\n    else:\n        print(2 ** (len(s) - 1))", "for _ in range(int(input())):\n    (n, a, b) = (int(input()), 1, 2)\n    while a | b <= n:\n        a |= b\n        b *= 2\n    print(1 if not n else b)", "for i in range(int(input())):\n    x = int(input())\n    s = 1\n    u = 2\n    while s | u <= x:\n        s = s | u\n        u = u * 2\n    print(1 if not x else u)", "import math as mt\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    y = int(mt.log2(x + 1))\n    rs = 1 << y\n    print(rs)"]