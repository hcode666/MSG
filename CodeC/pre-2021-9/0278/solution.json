["from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    dic = Counter(s)\n    for i in range(q):\n        p = 0\n        ic = int(input())\n        for j in dic:\n            if dic[j] > ic:\n                p += dic[j] - ic\n        print(p)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = list(input())\n    s1 = [s.count(i) for i in set(s)]\n    for i in range(q):\n        v = 0\n        c = int(input())\n        for i in s1:\n            if i > c:\n                v += i - c\n        print(v)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    dic = Counter(s)\n    for i in range(q):\n        p = 0\n        ic = int(input())\n        for j in dic:\n            if dic[j] > ic:\n                p += dic[j] - ic\n        print(p)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split(' '))\n    s = Counter(input())\n    for i in range(q):\n        p = 0\n        ic = int(input())\n        for j in s:\n            if s[j] > ic:\n                p += s[j] - ic\n        print(p)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split(' '))\n    s = input()\n    sd = Counter(s)\n    for i in range(q):\n        p = 0\n        ic = int(input())\n        for j in sd:\n            if sd[j] > ic:\n                p += sd[j] - ic\n        print(p)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    ds = dict(Counter(s))\n    for __ in range(q):\n        c = int(input())\n        ans = 0\n        for (x, y) in ds.items():\n            ans += max([0, y - c])\n        print(ans)", "import collections\nfor _ in range(int(input())):\n    (n, q) = [int(k) for k in input().split()]\n    s = input()\n    d = collections.Counter(s)\n    values = list(d.values())\n    for j in range(q):\n        cnt = 0\n        c = int(input())\n        for l in values:\n            if l > c:\n                cnt += l - c\n        print(cnt)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    dic = {}\n    for i in range(len(s)):\n        dic[s[i]] = dic.get(s[i], 0) + 1\n    for i in range(q):\n        c = int(input())\n        count = 0\n        for i in dic:\n            if dic[i] > c:\n                count += dic[i] - c\n        print(count)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    dic = {}\n    for i in range(len(s)):\n        dic[s[i]] = dic.get(s[i], 0) + 1\n    for i in range(q):\n        c = int(input())\n        count = 0\n        for i in dic:\n            if dic[i] > c:\n                count += dic[i] - c\n        print(count)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    dic = {}\n    for i in range(len(s)):\n        dic[s[i]] = dic.get(s[i], 0) + 1\n    for i in range(q):\n        c = int(input())\n        count = 0\n        for i in dic:\n            if dic[i] > c:\n                count += dic[i] - c\n        print(count)", "for i in range(int(input())):\n    from collections import Counter\n    (n, c) = map(int, input().split())\n    s = input()\n    t = list(Counter(s).values())\n    for i in range(c):\n        total = 0\n        x_i = int(input())\n        if x_i >= max(t):\n            print(0)\n        else:\n            for j in range(len(t)):\n                if x_i < t[j]:\n                    total += t[j] - x_i\n            print(total)", "for i in range(int(input())):\n    from collections import Counter\n    (n, c) = map(int, input().split())\n    s = input()\n    t = list(Counter(s).values())\n    for i in range(c):\n        total = 0\n        x_i = int(input())\n        if x_i >= max(t):\n            print(0)\n        else:\n            for j in range(len(t)):\n                if x_i < t[j]:\n                    total += t[j] - x_i\n            print(total)", "x = int(input())\nfinal = []\nfor ij in range(0, x):\n    yui = str(input())\n    yre = yui.split(' ')\n    jew = []\n    for ix in yre:\n        jew.append(int(ix))\n    b = str(input())\n    cfr = [b]\n    for llp in range(0, jew[-1]):\n        gxz = int(input())\n        cfr.append(gxz)\n    final.append(cfr)\nfor bbv in final:\n    w = bbv[0]\n    bbv.pop(0)\n    kl = {}\n    for mmu in w:\n        if mmu in list(kl.keys()):\n            kl[mmu] += 1\n        else:\n            kl[mmu] = 1\n    for yyy in bbv:\n        pend = 0\n        for hte in list(kl.keys()):\n            ip = kl[hte]\n            if ip > yyy:\n                pend += ip - yyy\n        print(pend)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = list(input())\n    s1 = [s.count(i) for i in set(s)]\n    for i in range(q):\n        v = 0\n        temp = int(input())\n        for i in s1:\n            if i > temp:\n                v += i - temp\n        print(v)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = list(input())\n    s1 = [s.count(i) for i in set(s)]\n    for i in range(q):\n        v = 0\n        temp = int(input())\n        for i in s1:\n            if i > temp:\n                v += i - temp\n        print(v)", "for i in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = list(input())\n    freq = [0] * 26\n    for ele in s:\n        freq[ord(ele) - 97] += 1\n    for i in range(q):\n        m = int(input())\n        count = 0\n        for j in range(26):\n            if freq[j] > m:\n                count += freq[j] - m\n        print(count)", "M = int(input())\nwhile M > 0:\n    (n, q) = map(int, input().split(' '))\n    s = input()\n    freq = {}\n    for i in s:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    li = list(freq.values())\n    max1 = max(li)\n    for i in range(q):\n        count = 0\n        c = int(input())\n        for j in li:\n            if j > c:\n                l = j - c\n                count += l\n        print(count)\n    M = M - 1", "from collections import Counter\nfor tc in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    a = Counter(s)\n    c = 0\n    for i in range(q):\n        pend = 0\n        c = int(input())\n        for j in a.values():\n            if j > c:\n                pend += j - c\n        print(pend)", "from collections import Counter\nfor tc in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    a = Counter(s)\n    c = 0\n    for i in range(q):\n        pend = 0\n        c = int(input())\n        for j in a.values():\n            if j > c:\n                pend += j - c\n        print(pend)", "t = int(input())\nwhile t > 0:\n    (n, q) = map(int, input().split())\n    s = list(input())\n    freq = [0] * 26\n    for ele in s:\n        freq[ord(ele) - 97] += 1\n    for i in range(q):\n        c = int(input())\n        count = 0\n        for j in freq:\n            if j > c:\n                count += j - c\n        print(count)\n    t -= 1", "import collections\nt = int(input())\nfor i in range(t):\n    (n, q) = [int(k) for k in input().split()]\n    s = input()\n    d = collections.Counter(s)\n    values = list(d.values())\n    for j in range(q):\n        cnt = 0\n        c = int(input())\n        for l in values:\n            if l > c:\n                cnt += l - c\n        print(cnt)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for __ in range(q):\n        total = 0\n        c = int(input())\n        for (i, j) in d.items():\n            if j > c:\n                total += j - c\n        print(total)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for __ in range(q):\n        total = 0\n        c = int(input())\n        for (i, j) in d.items():\n            if j > c:\n                total += j - c\n        print(total)", "from collections import Counter\nfor t in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    c = Counter(s)\n    for i in range(q):\n        d = int(input())\n        co = 0\n        for val in c.values():\n            if val > d:\n                co += val - d\n        print(co)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    d1 = {ele: s.count(ele) for ele in s}\n    l1 = list(d1.values())\n    for i in range(q):\n        ans = 0\n        c = int(input())\n        for z in l1:\n            if z > c:\n                ans += z - c\n        print(ans)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    d1 = {ele: s.count(ele) for ele in s}\n    l1 = list(d1.values())\n    for i in range(q):\n        ans = 0\n        c = int(input())\n        for z in l1:\n            if z > c:\n                ans += z - c\n        print(ans)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    (n, q) = list(map(int, input().split(' ')))\n    string = input()\n    letter_dict = dict(Counter(string))\n    for j in range(q):\n        c = int(input())\n        result = 0\n        for key in list(letter_dict.values()):\n            if key > c:\n                result += key - c\n        print(result)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = str(input())\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n    for i in range(q):\n        c = int(input())\n        s = 0\n        for j in list(d.keys()):\n            if d[j] - c > 0:\n                s += d[j] - c\n        print(s)", "testcases = int(input())\nfor i in range(testcases):\n    (n, q) = map(int, input().split())\n    s = str(input())\n    freq = {}\n    data = []\n    count = 0\n    for i in s:\n        if i not in freq:\n            freq[i] = 1\n        else:\n            freq[i] += 1\n    for i in range(q):\n        val = int(input())\n        if val == 1:\n            temp = []\n            for key in freq:\n                if freq[key] > 1:\n                    temp.append(freq[key] - 1)\n            if len(temp) == 0:\n                print(0)\n            else:\n                print(sum(temp))\n        else:\n            temp = []\n            for key in freq:\n                if freq[key] > val:\n                    diff = freq[key] - val\n                    temp.append(diff)\n            print(sum(temp))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    count = [0] * 26\n    for ch in s:\n        count[ord(ch) - 97] += 1\n    for i in range(q):\n        c = int(input())\n        queued = 0\n        for val in count:\n            if val > c:\n                queued += val - c\n        print(queued)", "t = int(input())\nfor _ in range(t):\n    (n, q) = list(map(int, input().split()))\n    s = input()\n    lis = []\n    for i in range(q):\n        c = int(input())\n        lis.append(c)\n    myd = {}\n    for i in range(len(s)):\n        myd.update({s[i]: s.count(s[i])})\n    v = list(myd.values())\n    sm = 0\n    lis1 = []\n    for i in range(len(lis)):\n        for j in range(len(v)):\n            if v[j] > lis[i]:\n                x = v[j] - lis[i]\n                sm += x\n        lis1.append(str(sm))\n        sm = 0\n    print('\\n'.join(lis1))", "from collections import Counter\nfor i in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    c = [int(input()) for i in range(q)]\n    s = Counter(s)\n    for i in c:\n        if i >= max(s.values()):\n            print(0)\n        else:\n            res = 0\n            for k in s.keys():\n                res += max(s.get(k, 0) - i, 0)\n            print(res)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    t = Counter(s).values()\n    for i in range(q):\n        count = 0\n        c = int(input())\n        for j in t:\n            if j > c:\n                count += j - c\n        print(count)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    t = Counter(s).values()\n    for i in range(q):\n        count = 0\n        c = int(input())\n        for j in t:\n            if j > c:\n                count += j - c\n        print(count)", "from collections import Counter\ntestcase = int(input())\nfor i in range(testcase):\n    (n, q) = map(int, input().split())\n    temp_str = str(input())\n    patient_str = [x for x in temp_str]\n    lst = Counter(patient_str)\n    for cq in range(0, q):\n        cq = int(input())\n        res = 0\n        for a in lst:\n            if lst[a] > cq:\n                res += lst[a] - cq\n        print(res)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    count = [0] * 26\n    for ch in s:\n        count[ord(ch) - 97] += 1\n    for i in range(q):\n        c = int(input())\n        queued = 0\n        for val in count:\n            if val > c:\n                queued += val - c\n        print(queued)", "for _ in range(int(input())):\n    from collections import Counter\n    (n, q) = map(int, input().split())\n    s = input()\n    c = Counter(s).values()\n    for i in range(q):\n        k = 0\n        w = int(input())\n        for i in c:\n            if i > w:\n                k += i - w\n        print(k)", "from collections import Counter\nfor i in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    cc = Counter(s).values()\n    for i in range(q):\n        k = 0\n        c = int(input())\n        for i in cc:\n            if i > c:\n                k += i - c\n        print(k)", "from collections import Counter\nfor i in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    x = Counter(s)\n    y = x.values()\n    for j in range(q):\n        s = 0\n        c = int(input())\n        for i in y:\n            if i > c:\n                s += i - c\n        print(s)", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    s = input()\n    d = dict()\n    for i in set(s):\n        d[i] = s.count(i)\n    for i in range(q):\n        c = int(input())\n        r = 0\n        for j in d.values():\n            if j - c > 0:\n                r = r + (j - c)\n        print(r)", "from collections import Counter\nfor i in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    c = [int(input()) for i in range(q)]\n    s = Counter(s)\n    for i in c:\n        if i >= max(s.values()):\n            print(0)\n        else:\n            res = 0\n            for k in s.keys():\n                res += max(s.get(k, 0) - i, 0)\n            print(res)", "from collections import Counter\nfor i in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    c = [int(input()) for i in range(q)]\n    s = Counter(s)\n    for i in c:\n        if i >= max(s.values()):\n            print(0)\n        else:\n            res = 0\n            for k in s.keys():\n                res += max(s.get(k, 0) - i, 0)\n            print(res)", "from collections import Counter\nalphabetOrd = [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]\nalphabet = list('abcdefghijklmnopqrstuvwxyz')\nr2 = lambda n: range(1, n + 1)\nalph = lambda s: s.isalpha()\nmod = lambda n: n % (10 ** 9 + 7)\nsl = lambda l: list(set(l))\nsoi = lambda : sorted(input())\nii = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nsi = lambda : input()\nlsi = lambda : list(input())\nsepi = lambda : map(int, input().split())\nseti = lambda : set(map(int, input().split()))\nfor t in range(int(input())):\n    (numOfPeople, numOfQueries) = sepi()\n    virusTypes = soi()\n    virusCount = Counter(virusTypes).values()\n    for i in range(numOfQueries):\n        pendingQueue = 0\n        isolationCenters = ii()\n        for i in virusCount:\n            pendingQueue += max(0, i - isolationCenters)\n        print(pendingQueue)", "from collections import Counter\nT = int(input())\nfor _ in range(T):\n    (N, Q) = list(map(int, input().split()))\n    S = input()\n    virus_count = Counter(S).values()\n    for _ in range(Q):\n        isolation_center = int(input())\n        pending_count = 0\n        for count in virus_count:\n            if count > isolation_center:\n                pending_count += count - isolation_center\n        print(pending_count)", "from collections import Counter\nfor test in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    c = [int(input()) for i in range(q)]\n    s = Counter(s)\n    for i in c:\n        if i >= max(s.values()):\n            print(0)\n        else:\n            res = 0\n            for key in s.keys():\n                res += max(s.get(key, 0) - i, 0)\n            print(res)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    freq = Counter(s)\n    key = list(freq.keys())\n    value = list(freq.values())\n    len_value = len(value)\n    max_value = max(value)\n    for i in range(q):\n        c = int(input())\n        if c >= max_value:\n            print(0)\n        elif c == 0:\n            print(sum(value))\n        else:\n            cp = 0\n            for it in value:\n                if it > c:\n                    cp += it - c\n            print(cp)", "import collections\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    virus = input()\n    v = collections.Counter(virus)\n    mem = v.values()\n    for j in range(q):\n        iso = int(input())\n        pend_q = 0\n        for i in mem:\n            if i > iso:\n                pend_q += i - iso\n        print(pend_q)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    st = input()\n    st_set = set(st)\n    li = [st.count(i) for i in st_set]\n    for _ in range(q):\n        size = int(input())\n        cli = [j - size for j in li if j > size]\n        print(sum(cli))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    st = input()\n    st_set = set(st)\n    li = []\n    for i in st_set:\n        li.append(st.count(i))\n    for i in range(q):\n        size = int(input())\n        cli = [i - size for i in li if i > size]\n        print(sum(cli))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    l = [0] * 27\n    for i in s:\n        l[ord(i) - 96] = l[ord(i) - 96] + 1\n    for j in range(q):\n        v = int(input())\n        cnt = 0\n        for k in l:\n            if k > v:\n                cnt = cnt + abs(k - v)\n        print(cnt)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    l = [0] * 27\n    for i in s:\n        l[ord(i) - 96] = l[ord(i) - 96] + 1\n    for j in range(q):\n        v = int(input())\n        cnt = 0\n        for k in l:\n            if k > v:\n                cnt = cnt + abs(k - v)\n        print(cnt)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    a = [0] * 26\n    for i in s:\n        a[ord(i) - 97] += 1\n    for _ in range(q):\n        m = int(input())\n        sums = sum(a)\n        for i in range(26):\n            if a[i] >= m:\n                sums -= m\n            else:\n                sums -= a[i]\n        print(sums)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    a = Counter(s)\n    ob = a.values()\n    for _ in range(q):\n        c = int(input())\n        pending = 0\n        for i in ob:\n            if i > c:\n                pending += i - c\n        print(pending)", "for i in range(int(input())):\n    (n, q) = map(int, input().split())\n    sit = input()\n    list1 = [0 for x in range(26)]\n    for y in sit:\n        list1[ord(y) - 97] += 1\n    for j in range(q):\n        count1 = 0\n        c = int(input())\n        for z in list1:\n            if z > c:\n                count1 += z - c\n        print(count1)", "T = int(input())\nfor i in range(T):\n    (N, Q) = map(int, input().split())\n    S = input()\n    S.lower()\n    A = []\n    for j in S:\n        A.append(j)\n    A = list(set(A))\n    c = []\n    for k in range(len(A)):\n        m = 0\n        for j in S:\n            if j == A[k]:\n                m = m + 1\n        c.append(m)\n    for i in range(Q):\n        l = 0\n        C = int(input())\n        for i in range(len(c)):\n            if c[i] > C:\n                l = l + c[i] - C\n        print(l)", "import string\nt = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    s = input()\n    l = list(string.ascii_lowercase)\n    c = []\n    for i in range(26):\n        c.append(0)\n    for i in range(len(s)):\n        for j in range(26):\n            if s[i] == l[j]:\n                c[j] = c[j] + 1\n    for j in range(q):\n        sum = 0\n        p = int(input())\n        for i in range(26):\n            if c[i] > p:\n                sum = sum + (c[i] - p)\n        print(sum)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    j = set(s)\n    l = []\n    for i in j:\n        l.append(s.count(i))\n    for _ in range(q):\n        c = int(input())\n        k = 0\n        for i in l:\n            if i - c > 0:\n                k += i - c\n        print(k)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    arr = []\n    l = []\n    for e in s:\n        if e not in arr:\n            arr.append(e)\n    for j in arr:\n        l.append(s.count(j))\n    for i in range(q):\n        count = 0\n        c = int(input())\n        for item in l:\n            if item > c:\n                count += item - c\n        print(count)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    l = list(input())\n    l1 = []\n    for _ in range(y):\n        l1.append(int(input()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    l2 = [v for (k, v) in d.items()]\n    for i in l1:\n        s = 0\n        for j in l2:\n            if j > i:\n                s = s + j - i\n        print(s)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    string = input()\n    freq = dict(Counter(string))\n    while q:\n        centers = int(input())\n        ans = 0\n        for cnt in freq.values():\n            ans += max(cnt - centers, 0)\n        print(ans)\n        q -= 1", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    l = []\n    for _ in range(q):\n        l.append(int(input()))\n    dt = {}\n    count = 0\n    for i in range(n):\n        if s[i] in dt:\n            dt[s[i]] = dt.get(s[i]) + 1\n            count += 1\n        else:\n            dt[s[i]] = 1\n    for qi in l:\n        sum = 0\n        for value in dt.values():\n            if value - qi > 0:\n                sum += value - qi\n        print(sum)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    f = {}\n    for i in s:\n        if i in f:\n            f[i] += 1\n        else:\n            f[i] = 1\n    for i in range(q):\n        a = int(input())\n        count = 0\n        for i in f:\n            if f[i] > a:\n                count += f[i] - a\n        print(count)", "n = int(input())\nfor i in range(n):\n    (x, y) = (int(i) for i in input().split())\n    s = input()\n    a = set(s)\n    l = []\n    j = []\n    for i in a:\n        l.append(s.count(i))\n    for i in range(y):\n        c = 0\n        k = int(input())\n        for i in range(len(a)):\n            h = l[i] - k\n            if h > 0:\n                c += h\n        print(c)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    string = input()\n    freq = dict(Counter(string))\n    while q:\n        centers = int(input())\n        ans = 0\n        for cnt in freq.values():\n            ans += max(cnt - centers, 0)\n        print(ans)\n        q -= 1", "for _ in range(int(input())):\n    (n, q) = [int(x) for x in input().split(' ')]\n    s1 = input()\n    arr = [0] * 26\n    for i in range(26):\n        arr[i] = s1.count(chr(i + 97))\n    for __ in range(q):\n        sum1 = 0\n        c = int(input())\n        for i in range(26):\n            if arr[i] - c > 0:\n                sum1 += arr[i] - c\n        print(sum1)", "for _ in range(int(input())):\n    (n, q) = [int(x) for x in input().split(' ')]\n    s1 = input()\n    arr = [0] * 26\n    for i in range(26):\n        arr[i] = s1.count(chr(i + 97))\n    for __ in range(q):\n        sum1 = 0\n        c = int(input())\n        for i in range(26):\n            if arr[i] - c > 0:\n                sum1 += arr[i] - c\n        print(sum1)", "tests = int(input())\nfor i in range(tests):\n    (n, q) = map(int, input().split())\n    string = input()\n    unique_char = {}\n    for x in string:\n        if x in unique_char:\n            unique_char[x] += 1\n        else:\n            unique_char[x] = 1\n    for x in range(q):\n        ans = 0\n        centers = int(input())\n        for y in unique_char.keys():\n            addition = unique_char[y] - centers\n            if addition > 0:\n                ans += addition\n        print(ans)", "for _ in range(int(input().strip())):\n    (n, q) = list(map(int, input().strip().split()))\n    s = input().strip()\n    hash = {}\n    for c in s:\n        hash[c] = hash.get(c, 0) + 1\n    R = []\n    for _ in range(q):\n        t = int(input().strip())\n        ans = 0\n        for k in hash.keys():\n            ans += max(hash[k] - t, 0)\n        R.append(ans)\n    for r in R:\n        print(r)", "from collections import Counter\nt = input()\nfor x in range(0, int(t)):\n    (n, q) = map(int, input().split())\n    s = input()\n    d = Counter(s)\n    for i in range(q):\n        count = 0\n        m = int(input())\n        for j in d.values():\n            if j > m:\n                count += j - m\n        print(count)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    d = Counter(s)\n    for i in range(q):\n        count = 0\n        m = int(input())\n        for j in d.values():\n            if j > m:\n                count += j - m\n        print(count)", "from collections import Counter\nfor _ in range(int(input())):\n    (N, Q) = map(int, input().split())\n    S = input().strip()\n    S = list(S)\n    dct = Counter(S)\n    for i101 in range(Q):\n        C = int(input())\n        pending = 0\n        for i in dct.values():\n            if i > C:\n                pending += i - C\n        print(pending)", "t = int(input())\nwhile t > 0:\n    (n, q) = map(int, input().split(' '))\n    s = input()\n    freq = {}\n    for i in s:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    li = list(freq.values())\n    max1 = max(li)\n    for i in range(q):\n        count = 0\n        c = int(input())\n        for j in li:\n            if j > c:\n                l = j - c\n                count += l\n        print(count)\n    t = t - 1", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    s = input()\n    temp = Counter(s)\n    res = 0\n    for i in range(q):\n        c = int(input())\n        for j in temp:\n            if temp[j] > c:\n                res += abs(temp[j] - c)\n        print(res)\n        res = 0", "from collections import Counter\nfor t in range(int(input())):\n    (n, q) = [int(i) for i in input().split(' ')]\n    s = input()\n    count = list(dict(Counter(s)).values())\n    for i in range(q):\n        c = int(input())\n        penQ = 0\n        for i in count:\n            if i > c:\n                penQ += i - c\n        print(penQ)", "for tc in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    for j in range(q):\n        a = 0\n        c = int(input())\n        for k in d.values():\n            if k > c:\n                a += k - c\n        print(a)", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    l = input()\n    l1 = {}\n    q1 = []\n    for j in range(q):\n        q1.append(int(input()))\n    for j in l:\n        l1.update({j: l.count(j)})\n    for k in range(q):\n        c = 0\n        for j in l1.values():\n            if j > q1[k]:\n                c += j - q1[k]\n            else:\n                continue\n        print(c)", "for tc in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    for j in range(q):\n        a = 0\n        c = int(input())\n        for k in d.values():\n            if k > c:\n                a += k - c\n        print(a)", "T = int(input())\nfor _ in range(T):\n    (N, Q) = map(int, input().split())\n    S = input()\n    D = {}\n    for x in S:\n        if x in D:\n            D[x] += 1\n        else:\n            D[x] = 1\n    for _ in range(Q):\n        a = 0\n        C = int(input())\n        for y in D.values():\n            if y > C:\n                a += y - C\n        print(a)", "for tc in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    for j in range(q):\n        a = 0\n        c = int(input())\n        for k in d.values():\n            if k > c:\n                a += k - c\n        print(a)", "t = int(input())\nwhile t > 0:\n    (n, q) = map(int, input().split())\n    s = input()\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for j in range(q):\n        ans = 0\n        c = int(input())\n        for k in d.values():\n            if k > c:\n                ans += k - c\n        print(ans)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, q) = map(int, input().split())\n    s = input()\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for j in range(q):\n        ans = 0\n        c = int(input())\n        for k in d.values():\n            if k - c > 0:\n                ans += k - c\n        print(ans)\n    t -= 1", "tests = int(input())\nfor i in range(tests):\n    (n, q) = map(int, input().split())\n    string = input()\n    unique_char = {}\n    for x in string:\n        if x in unique_char:\n            unique_char[x] += 1\n        else:\n            unique_char[x] = 1\n    for x in range(q):\n        ans = 0\n        centers = int(input())\n        for y in unique_char.keys():\n            addition = unique_char[y] - centers\n            if addition > 0:\n                ans += addition\n        print(ans)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    count = []\n    s = list(s)\n    s1 = list(set(s))\n    for i in s1:\n        count.append(s.count(i))\n    c = []\n    for i in range(q):\n        a = int(input())\n        c.append(a)\n        ans = 0\n        for i in count:\n            if i > a:\n                ans += abs(i - a)\n        print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    s = Counter(s)\n    while q > 0:\n        c = 0\n        m = int(input())\n        for (k, v) in s.items():\n            if v > m:\n                c += abs(v - m)\n        print(c)\n        q -= 1", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    c = []\n    s = list(s)\n    s1 = list(set(s))\n    for i in s1:\n        c1 = s.count(i)\n        c.append(c1)\n    q1 = []\n    for i in range(q):\n        a = int(input())\n        q1.append(a)\n        v = 0\n        for i in c:\n            if i > a:\n                v += abs(i - a)\n        print(v)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    w = input()\n    d = {}\n    for i in w:\n        d[i] = d.get(i, 0) + 1\n    for i in range(q):\n        p = 0\n        c = int(input())\n        for v in d.values():\n            if v > c:\n                p += v - c\n        print(p)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    c = []\n    s = list(s)\n    s1 = list(set(s))\n    for i in s1:\n        c1 = s.count(i)\n        c.append(c1)\n    q1 = []\n    for i in range(q):\n        a = int(input())\n        q1.append(a)\n        v = 0\n        for i in c:\n            if i > a:\n                v += abs(i - a)\n        print(v)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    d = {}\n    for i in s:\n        d[i] = d.get(i, 0) + 1\n    for i in range(q):\n        p = 0\n        c = int(input())\n        for v in d.values():\n            if v > c:\n                p += v - c\n        print(p)", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    s = input()\n    d = {}\n    for k in s:\n        if k in d:\n            d[k] += 1\n        else:\n            d[k] = 1\n    for j in range(q):\n        c = int(input())\n        ans = 0\n        for k in d:\n            if d[k] > c:\n                ans += d[k] - c\n        print(ans)", "def main():\n    try:\n        n = int(input())\n        while n > 0:\n            (a, b) = map(int, input().split())\n            s = list(input())\n            freq = [0] * 26\n            for ele in s:\n                freq[ord(ele) - 97] += 1\n            for i in range(b):\n                m = int(input())\n                count = 0\n                for j in range(26):\n                    if freq[j] > m:\n                        count += freq[j] - m\n                print(count)\n            n = n - 1\n    except:\n        return\nmain()", "def main():\n    try:\n        n = int(input())\n        while n > 0:\n            (a, b) = map(int, input().split())\n            s = list(input())\n            freq = [0] * 26\n            for ele in s:\n                freq[ord(ele) - 97] += 1\n            for i in range(b):\n                m = int(input())\n                count = 0\n                for j in range(26):\n                    if freq[j] > m:\n                        count += freq[j] - m\n                print(count)\n            n = n - 1\n    except:\n        return\nmain()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    s = input()\n    d = {}\n    for i in s:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    for i in range(b):\n        s1 = 0\n        t = int(input())\n        for i in d:\n            if d[i] > t:\n                s1 += d[i] - t\n        print(s1)", "from collections import Counter as co\nfor i in range(int(input())):\n    (n, q) = map(int, input().split())\n    s = input()\n    query = [int(input()) for i in range(q)]\n    dic = dict(co(s))\n    for i in query:\n        count = 0\n        for (key, value) in dic.items():\n            if value > i:\n                count += value - i\n        print(count)", "T = int(input())\nfor _ in range(T):\n    (N, Q) = map(int, input().split())\n    S = input()\n    Z = [0 for i in range(26)]\n    for i in S:\n        Z[ord(i) - 97] = Z[ord(i) - 97] + 1\n    for i in range(Q):\n        C = int(input())\n        ql = 0\n        for j in Z:\n            ql = ql + max(j - C, 0)\n        print(ql)", "from sys import stdin\nfrom collections import Counter\nfor _ in range(int(stdin.readline())):\n    (n, q) = map(int, stdin.readline().split())\n    s = stdin.readline().strip()\n    f = Counter(s)\n    for _ in range(q):\n        c = int(stdin.readline())\n        t = sum((max(0, f[k] - c) for k in f))\n        print(t)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, q) = map(int, stdin.readline().split())\n    s = stdin.readline().strip()\n    f = {si: s.count(si) for si in s}\n    for _ in range(q):\n        c = int(stdin.readline())\n        t = sum((max(0, f[k] - c) for k in f))\n        print(t)", "from sys import stdin\nfrom collections import Counter\nfor _ in range(int(stdin.readline())):\n    (n, q) = map(int, stdin.readline().split())\n    s = stdin.readline().strip()\n    f = Counter(s)\n    for _ in range(q):\n        t = 0\n        c = int(stdin.readline())\n        for k in f:\n            t += max(0, f[k] - c)\n        print(t)", "t = int(input())\nfor i in range(t):\n    n_q = input().split()\n    n = int(n_q[0])\n    q = int(n_q[1])\n    ip = input()\n    d = dict()\n    for i in ip:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for k in range(q):\n        c = int(input())\n        sum = 0\n        for val in d.values():\n            if val > c:\n                sum = sum + val - c\n        print(sum)"]