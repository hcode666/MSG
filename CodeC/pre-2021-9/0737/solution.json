["for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (b, w) = (n, 1)\n    for i in range(n):\n        a = [0] * n\n        a[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                a[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                a[j] = 1\n        for j in range(i):\n            if a[j] == 1:\n                for z in range(i, n):\n                    if l[z] < l[j]:\n                        a[z] = 1\n        for j in range(i + 1, n):\n            if a[j] == 1:\n                for y in range(i):\n                    if l[j] < l[y]:\n                        a[y] = 1\n        f = a.count(1)\n        w = max(f, w)\n        b = min(f, b)\n    print(b, w)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (b, w) = (n, 1)\n    for i in range(n):\n        a = [0] * n\n        a[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                a[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                a[j] = 1\n        for j in range(i):\n            if a[j] == 1:\n                for z in range(i, n):\n                    if l[z] < l[j]:\n                        a[z] = 1\n        for j in range(i + 1, n):\n            if a[j] == 1:\n                for y in range(i):\n                    if l[j] < l[y]:\n                        a[y] = 1\n        f = a.count(1)\n        w = max(f, w)\n        b = min(f, b)\n    print(b, w)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (b, w) = (n, 1)\n    for i in range(n):\n        a = [0] * n\n        a[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                a[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                a[j] = 1\n        for j in range(i):\n            if a[j] == 1:\n                for z in range(i, n):\n                    if l[z] < l[j]:\n                        a[z] = 1\n        for j in range(i + 1, n):\n            if a[j] == 1:\n                for y in range(i):\n                    if l[j] < l[y]:\n                        a[y] = 1\n        f = a.count(1)\n        w = max(f, w)\n        b = min(f, b)\n    print(b, w)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (b, w) = (n, 1)\n    for i in range(n):\n        a = [0] * n\n        a[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                a[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                a[j] = 1\n        for j in range(i):\n            if a[j] == 1:\n                for z in range(i, n):\n                    if l[z] < l[j]:\n                        a[z] = 1\n        for j in range(i + 1, n):\n            if a[j] == 1:\n                for y in range(i):\n                    if l[j] < l[y]:\n                        a[y] = 1\n        f = a.count(1)\n        w = max(f, w)\n        b = min(f, b)\n    print(b, w)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (b, w) = (n, 1)\n    for i in range(n):\n        a = [0] * n\n        a[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                a[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                a[j] = 1\n        for j in range(i):\n            if a[j] == 1:\n                for z in range(i, n):\n                    if l[z] < l[j]:\n                        a[z] = 1\n        for j in range(i + 1, n):\n            if a[j] == 1:\n                for y in range(i):\n                    if l[j] < l[y]:\n                        a[y] = 1\n        f = a.count(1)\n        w = max(f, w)\n        b = min(f, b)\n    print(b, w)", "import sys\nfrom collections import Counter, defaultdict, deque\nfrom math import gcd, sqrt, ceil\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(sys.stdin.readline())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    n = ii()\n    l = li()\n    b = n\n    w = 1\n    for i in range(n):\n        a = [0] * n\n        a[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                a[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                a[j] = 1\n        for j in range(i):\n            if a[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        a[k] = 1\n        for j in range(i + 1, n):\n            if a[j] == 1:\n                for y in range(i):\n                    if l[j] < l[y]:\n                        a[y] = 1\n        f = a.count(1)\n        w = max(f, w)\n        b = min(f, b)\n    print(b, w)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (b, w) = (n, 1)\n    for i in range(n):\n        a = [0] * n\n        a[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                a[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                a[j] = 1\n        for j in range(i):\n            if a[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        a[k] = 1\n        for j in range(i + 1, n):\n            if a[j] == 1:\n                for y in range(i):\n                    if l[j] < l[y]:\n                        a[y] = 1\n        f = a.count(1)\n        w = max(f, w)\n        b = min(f, b)\n    print(b, w)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (b, w) = (n, 1)\n    for i in range(n):\n        a = [0] * n\n        a[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                a[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                a[j] = 1\n        for j in range(i):\n            if a[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        a[k] = 1\n        for j in range(i + 1, n):\n            if a[j] == 1:\n                for y in range(i):\n                    if l[j] < l[y]:\n                        a[y] = 1\n        f = a.count(1)\n        w = max(f, w)\n        b = min(f, b)\n    print(b, w)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (b, w) = (n, 1)\n    for i in range(n):\n        a = [0] * n\n        a[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                a[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                a[j] = 1\n        for j in range(i):\n            if a[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        a[k] = 1\n        for j in range(i + 1, n):\n            if a[j] == 1:\n                for y in range(i):\n                    if l[j] < l[y]:\n                        a[y] = 1\n        f = a.count(1)\n        w = max(f, w)\n        b = min(f, b)\n    print(b, w)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (b, w) = (n, 1)\n    for i in range(n):\n        a = [0] * n\n        a[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                a[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                a[j] = 1\n        for j in range(i):\n            if a[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        a[k] = 1\n        for j in range(i + 1, n):\n            if a[j] == 1:\n                for y in range(i):\n                    if l[j] < l[y]:\n                        a[y] = 1\n        f = a.count(1)\n        w = max(f, w)\n        b = min(f, b)\n    print(b, w)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (b, w) = (n, 1)\n    for j in range(n):\n        a = [0] * n\n        a[j] = 1\n        for k in range(j):\n            if l[k] > l[j]:\n                a[k] = 1\n        for k in range(j + 1, n):\n            if l[k] < l[j]:\n                a[k] = 1\n        for k in range(j):\n            if a[k] == 1:\n                for z in range(j, n):\n                    if l[z] < l[k]:\n                        a[z] = 1\n        for k in range(j + 1, n):\n            if a[k] == 1:\n                for y in range(j):\n                    if l[k] < l[y]:\n                        a[y] = 1\n        f = a.count(1)\n        w = max(f, w)\n        b = min(f, b)\n    print(b, w)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (b, w) = (n, 1)\n    for j in range(n):\n        a = [0] * n\n        a[j] = 1\n        for k in range(j):\n            if l[k] > l[j]:\n                a[k] = 1\n        for k in range(j + 1, n):\n            if l[k] < l[j]:\n                a[k] = 1\n        for k in range(j):\n            if a[k] == 1:\n                for z in range(j, n):\n                    if l[z] < l[k]:\n                        a[z] = 1\n        for k in range(j + 1, n):\n            if a[k] == 1:\n                for y in range(j):\n                    if l[k] < l[y]:\n                        a[y] = 1\n        f = a.count(1)\n        w = max(f, w)\n        b = min(f, b)\n    print(b, w)", "for _ in range(int(input())):\n    num = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (num, 1)\n    for i in range(num):\n        temp = [0] * num\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, num):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, num):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, num):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        cnt = temp.count(1)\n        worst = max(cnt, worst)\n        best = min(cnt, best)\n    print(best, worst)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    v = list(map(int, input().split()))\n    mp = defaultdict(list)\n    best = n\n    worst = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if v[i] > v[j]:\n                t = (j - i) / (v[i] - v[j])\n                x = i + v[i] * t\n                mp[t, x].append(i)\n                mp[t, x].append(j)\n    for i in range(n):\n        infected = [False] * n\n        infected[i] = True\n        for p in sorted(mp.keys(), key=lambda x: x[0]):\n            spread = False\n            for el in mp[p]:\n                spread |= infected[el]\n            if spread:\n                for el in mp[p]:\n                    infected[el] = True\n        count = 0\n        for el in infected:\n            count += el\n        best = min(best, count)\n        worst = max(worst, count)\n    print(best, worst)", "for _ in range(int(input())):\n    n = int(input())\n    vloc = list(map(int, input().strip().split()))\n    covid = []\n    for i in range(n):\n        for j in range(i):\n            v = vloc[i] - vloc[j]\n            if v < 0:\n                t = (j - i) / v\n                covid.append((t, j, i))\n    covid.sort()\n    maxv = -1\n    minv = n + 1\n    for i in range(n):\n        infected = {i: 1}\n        for (t, a, b) in covid:\n            if a in infected:\n                infected[b] = 1\n            if b in infected:\n                infected[a] = 1\n        maxv = max(maxv, len(infected))\n        minv = min(minv, len(infected))\n    print(minv, maxv)", "from collections import defaultdict\nfor _ in range(int(input())):\n    N = int(input())\n    velocity = list(map(int, input().split()))\n    d = defaultdict(set)\n    for i in range(N):\n        for j in range(i + 1, N):\n            if j > i and velocity[i] > velocity[j]:\n                x = velocity[i] - velocity[j]\n                y = j - i\n                t = round(y / x, 2)\n                x = i + velocity[i] * t\n                d[t, x].add(i)\n                d[t, x].add(j)\n    mini = 9999999999999\n    maxi = -1\n    for i in range(N):\n        infected = [False] * N\n        infected[i] = True\n        for key in sorted(d.keys()):\n            spread = False\n            for val in d[key]:\n                spread |= infected[val]\n            if spread:\n                for val in d[key]:\n                    infected[val] = True\n        Tval = 0\n        for value in infected:\n            if value:\n                Tval += 1\n        maxi = max(Tval, maxi)\n        mini = min(Tval, mini)\n    print(mini, maxi, end=' ')\n    print()", "def getAllPositive(matrix, inf, n, p, t):\n    for i in range(n):\n        if matrix[p][i] > t:\n            inf.add(i)\n            getAllPositive(matrix, inf, n, i, matrix[p][i])\nfor _ in range(int(input())):\n    n = int(input())\n    S = list(map(int, input().split()))\n    T = []\n    for i in range(n):\n        flag = [0] * n\n        for j in range(n):\n            if i == j or S[i] == S[j]:\n                flag[j] = -1\n            else:\n                time = (i - j) / (S[j] - S[i])\n                if time < 0:\n                    flag[j] = -1\n                else:\n                    flag[j] = time\n        T.append(flag)\n    positive = []\n    for i in range(n):\n        inf = set()\n        inf.add(i)\n        getAllPositive(T, inf, n, i, 0)\n        positive.append(len(inf))\n    print(min(positive), max(positive))", "import sys\n\ndef ammala(i, t0, malati):\n    for j in range(n):\n        if j not in malati:\n            if vel[i] != vel[j]:\n                t = (j - i) / (vel[i] - vel[j])\n                if t >= t0:\n                    malati.append(j)\n                    malati = ammala(j, t, malati)\n    return malati\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    vel = []\n    vel[:] = map(int, input().strip().split())\n    massimo = 0\n    minimo = 10\n    for i in range(n):\n        malati = ammala(i, 0, [i])\n        massimo = max(massimo, len(malati))\n        minimo = min(minimo, len(malati))\n    print(minimo, massimo)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = list(map(int, input().strip().split()))\n    ans = []\n    for i in range(n):\n        speed = list1[i]\n        max_speed = -1000\n        min_speed = 1000\n        count = 1\n        for j in range(0, i):\n            if list1[j] > speed:\n                count += 1\n                if list1[j] > max_speed:\n                    max_speed = list1[j]\n        for j in range(i + 1, n):\n            if list1[j] < speed:\n                count += 1\n                if list1[j] < min_speed:\n                    min_speed = list1[j]\n        for j in range(0, i):\n            if list1[j] <= speed and list1[j] > min_speed:\n                count += 1\n        for j in range(i + 1, n):\n            if list1[j] >= speed and list1[j] < max_speed:\n                count += 1\n        ans.append(count)\n    print(min(ans), max(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)", "from collections import defaultdict\ntry:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        v = list(map(int, input().split()))\n        best = n\n        worst = 0\n        mp = defaultdict(list)\n        for i in range(0, n):\n            for j in range(i + 1, n):\n                if v[i] > v[j]:\n                    t = (j - i) / (v[i] - v[j])\n                    x = i + v[i] * t\n                    mp[t, x].append(i)\n                    mp[t, x].append(j)\n        for i in range(n):\n            infected = [False for j in range(n)]\n            infected[i] = True\n            for p in sorted(mp.keys(), key=lambda x: x[0]):\n                spread = False\n                for el in mp[p]:\n                    if infected[el] == True:\n                        spread = True\n                if spread == True:\n                    for el in mp[p]:\n                        infected[el] = True\n            count = 0\n            for i in range(n):\n                if infected[i] == True:\n                    count += 1\n            best = min(best, count)\n            worst = max(worst, count)\n        print(best, worst)\nexcept EOFError as t:\n    pass", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    max1 = 1\n    min1 = n\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for k in range(i):\n            if l[k] > l[i]:\n                temp[k] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        max1 = max(max1, temp.count(1))\n        min1 = min(min1, temp.count(1))\n    print(min1, max1)", "from collections import defaultdict\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mi = 1000000000.0\n    ma = 1\n    temp = defaultdict(list)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] > arr[j]:\n                t = (j - i) / (arr[i] - arr[j])\n                x = arr[i] * t + i\n                temp[t, x].append(i)\n                temp[t, x].append(j)\n    for i in range(n):\n        caught = [False] * n\n        caught[i] = True\n        for j in sorted(temp.keys(), key=lambda x: x[0]):\n            flag = 0\n            for k in temp[j]:\n                if caught[k] == True:\n                    flag = 1\n                    break\n            if flag == 1:\n                for k in temp[j]:\n                    caught[k] = True\n        count = 0\n        for j in caught:\n            if j == True:\n                count += 1\n        mi = min(mi, count)\n        ma = max(ma, count)\n    print(mi, ma)\ntry:\n    for _ in range(int(input())):\n        solve()\nexcept:\n    pass", "import collections\ntc = int(input())\nwhile tc > 0:\n    tc = tc - 1\n    n = int(input())\n    arr = []\n    max = 1\n    min = n\n    temp = 1\n    arr = [int(i) for i in input().split()]\n    dict = collections.defaultdict(list)\n    for i in range(0, n):\n        for j in range(0, n):\n            if arr[i] > arr[j] and j > i:\n                t = (j - i) / (arr[i] - arr[j])\n                x = i + arr[i] * t\n                dict[t, x].append(i)\n                dict[t, x].append(j)\n    for i in range(n):\n        infected = [False for j in range(n)]\n        infected[i] = True\n        for p in sorted(dict.keys(), key=lambda x: x[0]):\n            spread = False\n            for el in dict[p]:\n                if infected[el] == True:\n                    spread = True\n            if spread == True:\n                for el in dict[p]:\n                    infected[el] = True\n        count = 0\n        for i in range(n):\n            if infected[i] == True:\n                count += 1\n        if count > max:\n            max = count\n        if count < min:\n            min = count\n    print(min, max)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    v = list(map(int, input().split()))\n    mp = defaultdict(list)\n    worst = 0\n    best = n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if v[i] > v[j]:\n                t = (j - i) / (v[i] - v[j])\n                x = i + v[i] * t\n                mp[t, x].append(i)\n                mp[t, x].append(j)\n    for i in range(n):\n        infected = [False for i in range(n)]\n        infected[i] = True\n        for p in sorted(mp):\n            spread = False\n            for players in mp[p]:\n                if infected[players] == True:\n                    spread = True\n            if spread == True:\n                for players in mp[p]:\n                    infected[players] = True\n        count = 0\n        for players in range(n):\n            if infected[players] == True:\n                count += 1\n        best = min(best, count)\n        worst = max(worst, count)\n    print(best, worst)", "from array import *\ntc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    v = list(map(int, input().split()))[:n]\n    pos_time = [[False] * n for _ in range(n)]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if v[i] > v[j]:\n                t = (j - i) / (v[i] - v[j])\n                x = (i + v[i] * t, t)\n                pos_time[i][j] = x\n    pos_time_dict = dict()\n    dict_keys = []\n    for i in range(n):\n        for j in range(n):\n            if pos_time[i][j] != False:\n                pos_time_dict[pos_time[i][j]] = set()\n                dict_keys.append(pos_time[i][j])\n    for i in range(n):\n        for j in range(n):\n            if pos_time[i][j] != False:\n                pos_time_dict[pos_time[i][j]].add(i)\n                pos_time_dict[pos_time[i][j]].add(j)\n    dict_keys.sort(key=lambda tup: tup[1])\n    max_affected = -1\n    min_affected = n + 1\n    for i in range(n):\n        affected = [False for _ in range(n)]\n        affected[i] = True\n        for k in dict_keys:\n            for m in range(len(affected)):\n                if m in pos_time_dict[k] and affected[m] == True:\n                    for p in pos_time_dict[k]:\n                        affected[p] = True\n        aff = affected.count(True)\n        if aff > max_affected:\n            max_affected = aff\n        if aff < min_affected:\n            min_affected = aff\n    print(min_affected, max_affected)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = []\n    for i in range(n):\n        speed = l[i]\n        tans = set()\n        tans.add(i)\n        mx = speed\n        mn = speed\n        for j in range(i):\n            if l[j] > speed:\n                tans.add(j)\n            mx = max(mx, l[j])\n        for j in range(i + 1, n):\n            if l[j] < mx:\n                tans.add(j)\n            mn = min(mn, l[j])\n        for j in range(i):\n            if l[j] > mn:\n                tans.add(j)\n        ans.append(len(tans))\n    print(min(ans), max(ans))", "from collections import defaultdict\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    v = list(map(int, input().split()))\n    (best, worst) = (n, 0)\n    mp = defaultdict(list)\n    for i in range(0, n - 1):\n        for j in range(i + 1, n):\n            if v[i] > v[j]:\n                t = (j - i) / (v[i] - v[j])\n                x = i + v[i] * T\n                mp[t, x].append(i)\n                mp[t, x].append(j)\n    for i in range(n):\n        infected = [False for k in range(n)]\n        infected[i] = True\n        for j in sorted(mp.keys(), key=lambda x: x[0]):\n            spread = False\n            for el in mp[j]:\n                if infected[el] == True:\n                    spread = True\n                if spread == True:\n                    for b in mp[j]:\n                        infected[b] = True\n        ct = 0\n        for j in range(n):\n            if infected[j] == True:\n                ct += 1\n        best = min(ct, best)\n        worst = max(ct, worst)\n    print(best, worst)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    upi = [l[0]] * n\n    if upi == l:\n        print('1 1')\n        continue\n    dp = []\n    for i in range(n):\n        j = [0] * (n + 1)\n        dp.append(j)\n    dp[0][0] = 1\n    for i in range(n):\n        afc = []\n        besa = []\n        for j in range(0, n):\n            if i != j and l[i] < l[j]:\n                if i > j:\n                    if j == 0:\n                        dp[i][j] = 1\n                    else:\n                        dp[i][j] = dp[i][j - 1] + 1\n                elif j != 0:\n                    dp[i][j] = dp[i][j - 1]\n            elif i != j and l[i] > l[j]:\n                if i < j:\n                    if j == 0:\n                        dp[i][j] = 1\n                    else:\n                        dp[i][j] = dp[i][j - 1] + 1\n                elif j != 0:\n                    dp[i][j] = dp[i][j - 1]\n            elif i == j:\n                if j == 0 and i == 0:\n                    dp[i][j] = 1\n                else:\n                    dp[i][j] = dp[i][j - 1] + 1\n            else:\n                dp[i][j] = dp[i][j - 1]\n        for uio in range(0, n):\n            if uio != i:\n                if uio != 0 and dp[i][uio] == dp[i][uio - 1] or (uio == 0 and dp[i][uio] == 0):\n                    if l[uio] <= l[i] and uio < i:\n                        for tio in range(i + 1, n):\n                            if l[tio] < l[uio] and l[uio] <= l[i]:\n                                dp[i][n] += 1\n                                break\n                    if uio > i and l[uio] >= l[i]:\n                        for tio in range(0, i):\n                            if l[tio] > l[uio] and l[uio] >= l[i]:\n                                dp[i][n] += 1\n                                break\n    k = []\n    for _ in range(n):\n        k.append(dp[_][n - 1] + dp[_][n])\n    print(min(k), max(k))", "def rec(mat, s, p, n, t):\n    for i in range(n):\n        if mat[i][p] > t:\n            s.add(i)\n            rec(mat, s, i, n, mat[i][p])\n\ndef covid(l):\n    mat = []\n    for i in range(len(l)):\n        temp = []\n        for j in range(len(l)):\n            if l[i] == l[j]:\n                temp.append(-1)\n            else:\n                t = (i - j) / (l[j] - l[i])\n                if t <= 0:\n                    temp.append(-1)\n                else:\n                    temp.append(t)\n        mat.append(temp)\n    s = set()\n    v = []\n    for i in range(len(l)):\n        s.add(i)\n        rec(mat, s, i, len(l), 0)\n        v.append(len(s))\n        s.clear()\n    print(min(v), max(v))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    covid(l)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "for i in range(int(input())):\n    item = int(input())\n    size = []\n    st = list(map(int, input().split()))\n    for j in range(len(st)):\n        flip = 1\n        fmn = st[j]\n        fmx = st[j]\n        for k in range(j + 1, item):\n            if st[j] > st[k]:\n                if fmn > st[k]:\n                    fmn = st[k]\n        for a in range(0, j):\n            if st[a] > st[j]:\n                if fmx < st[a]:\n                    fmx = st[a]\n            if st[a] > fmn:\n                flip = flip + 1\n        for x in range(j + 1, item):\n            if st[x] < fmx:\n                flip = flip + 1\n        size.append(flip)\n    print(min(size), max(size))", "for i in range(int(input())):\n    item = int(input())\n    size = []\n    st = list(map(int, input().split()))\n    for j in range(len(st)):\n        flip = 1\n        fmn = st[j]\n        fmx = st[j]\n        for k in range(j + 1, item):\n            if st[j] > st[k]:\n                if fmn > st[k]:\n                    fmn = st[k]\n        for a in range(0, j):\n            if st[a] > st[j]:\n                if fmx < st[a]:\n                    fmx = st[a]\n            if st[a] > fmn:\n                flip = flip + 1\n        for x in range(j + 1, item):\n            if st[x] < fmx:\n                flip = flip + 1\n        size.append(flip)\n    print(min(size), max(size))", "for i in range(int(input())):\n    item = int(input())\n    size = []\n    st = list(map(int, input().split()))\n    for j in range(len(st)):\n        con = 1\n        fmn = st[j]\n        fmx = st[j]\n        for k in range(j + 1, item):\n            if st[j] > st[k]:\n                if fmn > st[k]:\n                    fmn = st[k]\n        for a in range(0, j):\n            if st[a] > st[j]:\n                if fmx < st[a]:\n                    fmx = st[a]\n            if st[a] > fmn:\n                con = con + 1\n        for x in range(j + 1, item):\n            if st[x] < fmx:\n                con = con + 1\n        size.append(con)\n    print(min(size), max(size))", "for i in range(int(input())):\n    item = int(input())\n    size = []\n    st = list(map(int, input().split()))\n    for j in range(len(st)):\n        con = 1\n        minn = st[j]\n        maxx = st[j]\n        for k in range(j + 1, item):\n            if st[j] > st[k]:\n                if minn > st[k]:\n                    minn = st[k]\n        for a in range(0, j):\n            if st[a] > st[j]:\n                if maxx < st[a]:\n                    maxx = st[a]\n            if st[a] > minn:\n                con = con + 1\n        for x in range(j + 1, item):\n            if st[x] < maxx:\n                con = con + 1\n        size.append(con)\n    print(min(size), max(size))", "for i in range(int(input())):\n    num = int(input())\n    N = []\n    li = list(map(int, input().split()))\n    for j in range(len(li)):\n        con = 1\n        minn = li[j]\n        maxx = li[j]\n        for k in range(j + 1, num):\n            if li[j] > li[k]:\n                if minn > li[k]:\n                    minn = li[k]\n        for a in range(0, j):\n            if li[a] > li[j]:\n                if maxx < li[a]:\n                    maxx = li[a]\n            if li[a] > minn:\n                con = con + 1\n        for x in range(j + 1, num):\n            if li[x] < maxx:\n                con = con + 1\n        N.append(con)\n    print(min(N), max(N))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    d = {}\n    best = n\n    worst = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lst[i] > lst[j]:\n                t = (j - i) / (lst[i] - lst[j])\n                x = i + lst[i] * t\n                if (t, x) in d:\n                    d[t, x].append(i)\n                    d[t, x].append(j)\n                else:\n                    d[t, x] = [i, j]\n    for i in range(n):\n        arr = [0] * n\n        arr[i] = 1\n        for j in sorted(d.keys()):\n            flag = 0\n            for k in d[j]:\n                if arr[k] == 1:\n                    flag = 1\n            if flag:\n                for k in d[j]:\n                    arr[k] = 1\n        ctr = 0\n        for k in range(n):\n            if arr[k] == 1:\n                ctr += 1\n        best = min(best, ctr)\n        worst = max(worst, ctr)\n    print(best, worst)", "def do_infect(a, b, x, y):\n    k = b - a\n    if k != 0:\n        t = (x - y) / k\n        if t > 0:\n            return True\n        else:\n            return False\n    else:\n        return False\n\ndef met_time(a, b, x, y):\n    k = b - a\n    if k != 0:\n        t = (x - y) / k\n        if t > 0:\n            return t\n        else:\n            return 0\n    else:\n        return 0\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = []\n    for i in range(n):\n        x = [0] * n\n        x[i] = 1\n        time = [0] * n\n        for j in range(n):\n            if i == j:\n                continue\n            elif do_infect(a[i], a[j], i + 1, j + 1):\n                x[j] = 1\n                time[j] = met_time(a[i], a[j], i + 1, j + 1)\n        for j in range(n):\n            if i == j:\n                continue\n            elif x[j] == 1:\n                for l in range(n):\n                    if l == j or l == i:\n                        continue\n                    elif do_infect(a[j], a[l], j + 1, l + 1) and met_time(a[j], a[l], j + 1, l + 1) >= time[j]:\n                        x[l] = 1\n                        time[l] = met_time(a[j], a[l], j + 1, l + 1)\n        ans.append(x.count(1))\n    print(min(ans), max(ans))", "def rec(g, s, i, n, t):\n    for k in range(0, n):\n        if g[i][k] > t:\n            s.add(k)\n            rec(g, s, k, n, g[i][k])\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    g = [[0] * n for i in range(n)]\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                g[i][j] = -1\n            elif arr[i] == arr[j]:\n                g[i][j] = -1\n            else:\n                d1 = (i - j) / (arr[j] - arr[i])\n                if d1 <= 0:\n                    g[i][j] = -1\n                else:\n                    g[i][j] = d1\n    s = set()\n    v = []\n    for i in range(n):\n        s.add(i)\n        rec(g, s, i, n, 0)\n        v.append(len(s))\n        s.clear()\n    print(min(v), max(v))", "for _ in range(int(input())):\n    n = int(input())\n    best = n\n    worst = 1\n    a = list(map(int, input().split()))\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if a[j] > a[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if a[j] < a[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if a[k] < a[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if a[k] > a[j]:\n                        temp[k] = 1\n        c = temp.count(1)\n        best = min(c, best)\n        worst = max(c, worst)\n    print(best, worst)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    vels = [int(i) for i in input().split()]\n    timeCount = {}\n    for i in range(n):\n        for j in range(i + 1, n):\n            if vels[i] > vels[j]:\n                equalTime = (j - i) / (vels[i] - vels[j])\n                equalDist = i + vels[i] * equalTime\n                try:\n                    timeCount[equalTime, equalDist].update([i, j])\n                except:\n                    timeCount[equalTime, equalDist] = set([i, j])\n    minVal = None\n    maxVal = None\n    timeKeys = sorted(timeCount.keys())\n    for i in range(n):\n        infected = set([i])\n        for j in timeKeys:\n            if len(infected.intersection(timeCount[j])) != 0:\n                infected.update(timeCount[j])\n        if minVal == None or len(infected) < minVal:\n            minVal = len(infected)\n        if maxVal == None or len(infected) > maxVal:\n            maxVal = len(infected)\n    print(minVal, maxVal)", "for _ in range(int(input())):\n    n = int(input())\n    mx = 0\n    mn = n + 1\n    v = list(map(int, input().split()))\n    for i in range(n):\n        tmp = [0] * n\n        tmp[i] = 1\n        for j in range(i):\n            if v[j] > v[i]:\n                tmp[j] = 1\n        for j in range(i + 1, n):\n            if v[j] < v[i]:\n                tmp[j] = 1\n        for j in range(i):\n            if tmp[j]:\n                for k in range(i, n):\n                    if v[j] > v[k]:\n                        tmp[k] = 1\n        for j in range(i + 1, n):\n            if tmp[j]:\n                for k in range(i):\n                    if v[k] > v[j]:\n                        tmp[k] = 1\n        cnt = tmp.count(1)\n        mx = max(cnt, mx)\n        mn = min(cnt, mn)\n    print(mn, mx)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    v = list(map(int, input().split()))\n    best = n\n    worst = 0\n    mp = defaultdict(list)\n    for i in range(0, n):\n        for j in range(i + 1, n):\n            if v[i] > v[j]:\n                t = (j - i) / (v[i] - v[j])\n                x = i + v[i] * t\n                mp[t, x].append(i)\n                mp[t, x].append(j)\n    for i in range(n):\n        infected = [False for j in range(n)]\n        infected[i] = True\n        for p in sorted(mp.keys(), key=lambda x: x[0]):\n            spread = False\n            for el in mp[p]:\n                if infected[el] == True:\n                    spread = True\n            if spread == True:\n                for el in mp[p]:\n                    infected[el] = True\n        count = 0\n        for i in range(n):\n            if infected[i] == True:\n                count += 1\n        best = min(best, count)\n        worst = max(worst, count)\n    print(best, worst)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    v = list(map(int, input().split()))\n    best = n\n    worst = 0\n    mp = defaultdict(list)\n    for i in range(0, n):\n        for j in range(i + 1, n):\n            if v[i] > v[j]:\n                t = (j - i) / (v[i] - v[j])\n                x = i + v[i] * t\n                mp[t, x].append(i)\n                mp[t, x].append(j)\n    for i in range(n):\n        infected = [False for j in range(n)]\n        infected[i] = True\n        for p in sorted(mp.keys(), key=lambda x: x[0]):\n            spread = False\n            for el in mp[p]:\n                if infected[el] == True:\n                    spread = True\n            if spread == True:\n                for el in mp[p]:\n                    infected[el] = True\n        count = 0\n        for i in range(n):\n            if infected[i] == True:\n                count += 1\n        best = min(best, count)\n        worst = max(worst, count)\n    print(best, worst)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "def prog():\n    v = list(map(int, input().split()))\n    affected = []\n    for i in range(0, n):\n        nmore = 0\n        nless = 0\n        maxv = v[i]\n        minv = v[i]\n        for j in range(0, i):\n            if v[j] > v[i]:\n                nmore += 1\n                if v[j] > maxv:\n                    maxv = v[j]\n        for k in range(i + 1, n):\n            if v[k] < maxv:\n                nless += 1\n            if v[k] < minv:\n                minv = v[k]\n        for l in range(0, i):\n            if v[l] > minv and v[l] <= v[i]:\n                nmore += 1\n        total = nmore + nless + 1\n        affected.append(total)\n    print(min(affected), max(affected))\ntest = int(input())\nfor _ in range(0, test):\n    n = int(input())\n    prog()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        y = temp.count(1)\n        worst = max(y, worst)\n        best = min(y, best)\n    print(best, worst)\n    t -= 1", "from collections import defaultdict\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    V = list(map(int, input().split()))\n    min_infections = float('inf')\n    max_infections = 1\n    infections = defaultdict(list)\n    for i in range(N - 1):\n        for j in range(i + 1, N):\n            if V[i] > V[j]:\n                t = (j - i) * 60 / (V[i] - V[j])\n                x = i * 60 + V[i] * t\n                infections[t, x].append(i)\n                infections[t, x].append(j)\n    for i in range(N):\n        infected = [False] * N\n        infected[i] = True\n        for key in sorted(infections.keys()):\n            if any(map(lambda i: infected[i], infections[key])):\n                for athlete in infections[key]:\n                    infected[athlete] = True\n        total_infections = sum(infected)\n        min_infections = min(min_infections, total_infections)\n        max_infections = max(max_infections, total_infections)\n    print(min_infections, max_infections)", "from collections import defaultdict\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    V = list(map(int, input().split()))\n    min_infections = float('inf')\n    max_infections = 1\n    infections = defaultdict(list)\n    for i in range(N - 1):\n        for j in range(i + 1, N):\n            if V[i] > V[j]:\n                t = (j - i) * 60 / (V[i] - V[j])\n                x = i * 60 + V[i] * t\n                infections[t, x].append(i)\n                infections[t, x].append(j)\n    for i in range(N):\n        infected = [False] * N\n        infected[i] = True\n        for key in sorted(infections.keys()):\n            spread = any(map(lambda i: infected[i], infections[key]))\n            if spread:\n                for athlete in infections[key]:\n                    infected[athlete] = True\n        total_infections = sum(infected)\n        min_infections = min(min_infections, total_infections)\n        max_infections = max(max_infections, total_infections)\n    print(min_infections, max_infections)", "from collections import defaultdict\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    V = list(map(int, input().split()))\n    min_infections = float('inf')\n    max_infections = 1\n    infections = defaultdict(list)\n    for i in range(N - 1):\n        for j in range(i + 1, N):\n            if V[i] > V[j]:\n                t = (j - i) * 60 / (V[i] - V[j])\n                x = i * 60 + V[i] * t\n                infections[t, x].append(i)\n                infections[t, x].append(j)\n    for i in range(N):\n        infected = [False] * N\n        infected[i] = True\n        for key in sorted(infections.keys()):\n            spread = any(map(lambda i: infected[i], infections[key]))\n            if spread:\n                for athlete in infections[key]:\n                    infected[athlete] = True\n        total_infections = sum(infected)\n        min_infections = min(min_infections, total_infections)\n        max_infections = max(max_infections, total_infections)\n    print(min_infections, max_infections)", "from collections import defaultdict\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    V = list(map(int, input().split()))\n    min_infections = float('inf')\n    max_infections = 1\n    infections = defaultdict(list)\n    for i in range(N - 1):\n        for j in range(i + 1, N):\n            if V[i] > V[j]:\n                t = (j - i) * 60 / (V[i] - V[j])\n                x = i * 60 + V[i] * t\n                infections[t, x].append(i)\n                infections[t, x].append(j)\n    for i in range(N):\n        infected = [False] * N\n        infected[i] = True\n        for key in sorted(infections.keys()):\n            spread = any(map(lambda i: infected[i], infections[key]))\n            if spread:\n                for athlete in infections[key]:\n                    infected[athlete] = True\n        total_infections = sum(infected)\n        min_infections = min(min_infections, total_infections)\n        max_infections = max(max_infections, total_infections)\n    print(min_infections, max_infections)", "def solve(i, v, n, v1):\n    ans = 1\n    inf = 1\n    for j in range(n):\n        if v[j] == v[i] or j == i:\n            continue\n        t = float(i - j) / float(v[j] - v[i])\n        if t >= v2[i] and v1[j] == 0:\n            inf += 1\n            v1[j] = 1\n            v2[j] = t\n            ans += solve(j, v, n, v1)\n    return ans\n\ndef iList(l, n):\n    for i in range(n + 1):\n        l[i] = 0\n    for j in range(12):\n        pass\nfor _ in range(int(input())):\n    cmin = 1000000000\n    cmax = -1000000000\n    n = int(input())\n    v = [int(x) for x in input().split()]\n    v1 = []\n    v2 = []\n    v1 = [0] * (n + 1)\n    v2 = [0] * (n + 1)\n    for i in range(n):\n        iList(v1, n)\n        iList(v2, n)\n        v1[i] = 1\n        time = solve(i, v, n, v1)\n        if cmin > time:\n            cmin = time\n        cmax = max(cmax, time)\n    print(cmin, cmax)", "for _ in range(int(input())):\n    n = int(input())\n    v = [int(i) for i in input().split()]\n    a = 6\n    b = -1\n    for i in range(n):\n        if i == 0:\n            t = 0\n            for j in range(i + 1, n):\n                if v[j] < v[i]:\n                    t += 1\n            a = min(a, t)\n            b = max(b, t)\n        elif i == n - 1:\n            t = 0\n            for j in range(n - 2, -1, -1):\n                if v[j] > v[i]:\n                    t += 1\n            a = min(a, t)\n            b = max(b, t)\n        else:\n            t = 0\n            ma = max(v[:i + 1])\n            mi = min(v[i:])\n            for j in range(i + 1, n):\n                if v[j] < ma:\n                    t += 1\n            for j in range(i - 1, -1, -1):\n                if v[j] > mi:\n                    t += 1\n            a = min(a, t)\n            b = max(b, t)\n    print(a + 1, b + 1)", "for _ in range(int(input())):\n    n = int(input())\n    v = [int(i) for i in input().split()]\n    a = 6\n    b = -1\n    for i in range(n):\n        if i == 0:\n            t = 0\n            for j in range(i + 1, n):\n                if v[j] < v[i]:\n                    t += 1\n            a = min(a, t)\n            b = max(b, t)\n        elif i == n - 1:\n            t = 0\n            for j in range(n - 2, -1, -1):\n                if v[j] > v[i]:\n                    t += 1\n            a = min(a, t)\n            b = max(b, t)\n        else:\n            t = 0\n            ma = max(v[:i + 1])\n            mi = min(v[i:])\n            for j in range(i + 1, n):\n                if v[j] < ma:\n                    t += 1\n            for j in range(i - 1, -1, -1):\n                if v[j] > mi:\n                    t += 1\n            a = min(a, t)\n            b = max(b, t)\n    print(a + 1, b + 1)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    v = list(map(int, input().split()))\n    (worst, best) = (1 + n, 1)\n    for i in range(n):\n        infected = set()\n        infected.add(i)\n        for j in range(i + 1, n):\n            if v[j] < v[i]:\n                infected.add(j)\n        for j in range(i):\n            if v[j] > v[i]:\n                infected.add(j)\n        for j in range(i + 1, n):\n            if j in infected:\n                for k in range(i):\n                    if v[k] > v[j]:\n                        infected.add(k)\n        for j in range(i):\n            if j in infected:\n                for k in range(i + 1, n):\n                    if v[k] < v[j]:\n                        infected.add(k)\n        worst = min(worst, len(infected))\n        best = max(best, len(infected))\n    print(worst, best)", "for _ in range(int(input())):\n    N = int(input())\n    _list = list(map(int, input().split()))\n    infected = [1] * N\n    for i in range(N):\n        for j in range(N):\n            if j < i:\n                if _list[j] > _list[i]:\n                    infected[i] += 1\n                elif _list[j] <= _list[i] and any((x < _list[j] for x in _list[i:])):\n                    infected[i] += 1\n            if j > i:\n                if _list[j] < _list[i]:\n                    infected[i] += 1\n                elif _list[j] >= _list[i] and any((x > _list[j] for x in _list[:i])):\n                    infected[i] += 1\n    print(min(infected), max(infected))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(0, n):\n        vis = [0] * n\n        vis[i] = 1\n        mx = mi = a[i]\n        for j in range(i):\n            if vis[j] == 0 and a[j] > a[i]:\n                mx = max(mx, a[j])\n                vis[j] = 1\n        for j in range(i + 1, n):\n            if vis[j] == 0 and a[j] < mx:\n                mi = min(mi, a[j])\n                vis[j] = 1\n        for j in range(i):\n            if vis[j] == 0 and a[j] > mi:\n                vis[j] = 1\n        for j in range(0, n):\n            if vis[j] == 1:\n                ans[i] += 1\n    print(min(ans), max(ans))", "for _ in range(int(input())):\n    num = int(input())\n    res = []\n    lis = list(map(int, input().split()))\n    for j in range(num):\n        c = 1\n        min_infected = lis[j]\n        max_infected = lis[j]\n        for k in range(j + 1, num):\n            if lis[j] > lis[k]:\n                if min_infected > lis[k]:\n                    min_infected = lis[k]\n        for i in range(0, j):\n            if lis[i] > lis[j]:\n                if max_infected < lis[i]:\n                    max_infected = lis[i]\n            if lis[i] > min_infected:\n                c += 1\n        for x in range(j + 1, num):\n            if lis[x] < max_infected:\n                c += 1\n        res.append(c)\n    print(min(res), max(res))", "def check(i, t):\n    inf[i] = 1\n    for k in range(i + 1, n):\n        if v[i] > v[k] and inf[k] == 0 and ((k - i) / (v[i] - v[k]) > t):\n            inf[k] = 1\n            check(k, (k - i) / (v[i] - v[k]))\n    for k in range(i):\n        if v[k] > v[i] and inf[k] == 0 and ((i - k) / (v[k] - v[i]) > t):\n            inf[k] = 1\n            check(k, (k - i) / (v[i] - v[k]))\n    return inf.count(1)\nte = int(input())\nfor j in range(te):\n    n = int(input())\n    v = list(map(int, input().split()))\n    (min, max) = (10, 1)\n    t = 0\n    for i in range(n):\n        inf = [0] * n\n        cnt = check(i, t)\n        if cnt < min:\n            min = cnt\n        if cnt > max:\n            max = cnt\n    print(min, max)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    v = list(map(int, input().split()))\n    t = []\n    for i in range(len(v)):\n        for j in range(i + 1, len(v)):\n            if v[j] < v[i]:\n                t.append(((j - i) / (v[i] - v[j]), i, j))\n    t.sort()\n    (mx, mn) = (1, n)\n    for k in range(len(v)):\n        s = set([k])\n        for (ti, i, j) in t:\n            if i in s or j in s:\n                s.add(i)\n                s.add(j)\n        mx = max(mx, len(s))\n        mn = min(mn, len(s))\n    print(mn, mx)", "def recursion(a, s, p, n, t):\n    for i in range(n):\n        if a[p][i] > t:\n            s.add(i)\n            recursion(a, s, i, n, a[p][i])\n\ndef solve(n, v):\n    time = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        for j in range(n):\n            if v[i] == v[j]:\n                time[i][j] = -1\n            else:\n                t = (i - j) / (v[j] - v[i])\n                if t <= 0:\n                    time[i][j] = -1\n                else:\n                    time[i][j] = t\n    ss = []\n    for i in range(n):\n        s = set([i])\n        recursion(time, s, i, n, 0)\n        ss.append(len(s))\n    print(min(ss), max(ss))\nfor _ in range(int(input())):\n    n = int(input())\n    v = list(map(int, input().split()))\n    solve(n, v)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    M = [[-1 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        for j in range(n):\n            if i != j and a[i] != a[j]:\n                if (j - i) / (a[i] - a[j]) >= 0:\n                    M[i][j] = (j - i) / (a[i] - a[j])\n    minimum = float('inf')\n    maximum = 0\n    for i in range(n):\n        c = 0\n        visited = [False for j in range(n)]\n        Q = list()\n        TQ = list()\n        Q.append(i)\n        visited[i] = True\n        TQ.append(0)\n        c += 1\n        while Q:\n            node = Q.pop(0)\n            timenode = TQ.pop(0)\n            for k in range(n):\n                if M[node][k] >= timenode:\n                    if not visited[k]:\n                        Q.append(k)\n                        TQ.append(M[node][k])\n                        c += 1\n                        visited[k] = True\n        minimum = min(minimum, c)\n        maximum = max(maximum, c)\n    print(minimum, maximum)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (b, w) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        w = max(c, w)\n        b = min(c, b)\n    print(b, w)\n    t -= 1", "tc = int(input())\nfor TESTcases in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(n):\n        temp = []\n        for j in range(n):\n            if i == j or a[i] == a[j]:\n                temp.append(-1)\n            else:\n                t = (i - j) / (a[j] - a[i])\n                temp.append(t)\n        b.append(temp)\n    ans = []\n    for i in range(n):\n        arr = []\n        booll = [0] * (n + 1)\n        booll[i] = 1\n        for j in range(n):\n            if b[i][j] > 0:\n                arr_temp = []\n                booll[j] = 1\n                arr_temp.append(j)\n                arr_temp.append(b[i][j])\n                arr.append(arr_temp)\n        while 1:\n            temp = {}\n            for j in arr:\n                for k in range(n):\n                    if b[j[0]][k] >= j[1] and booll[k] == 0:\n                        booll[k] = 1\n                        arr_temp = []\n                        arr_temp.append(k)\n                        arr_temp.append(b[j[0]][k])\n                        if k in temp.keys():\n                            if temp[k] > b[j[0]][k]:\n                                temp[k] = b[j[0]][k]\n                        else:\n                            temp[k] = b[j[0]][k]\n            temp2 = []\n            for i in temp.keys():\n                array = []\n                array.append(i)\n                array.append(temp[i])\n                temp2.append(array)\n            if len(temp2) == 0:\n                ans.append(booll.count(1))\n                break\n            arr = temp2\n    print(min(ans), max(ans))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    v = list(map(int, input().split()))\n    ans = [1 for i in range(n)]\n    for i in range(n):\n        minimum = min(v[i:])\n        maximum = max(v[:i + 1])\n        for j in range(i):\n            if v[j] > minimum:\n                ans[i] += 1\n        for j in range(i + 1, n):\n            if v[j] < maximum:\n                ans[i] += 1\n    print(min(ans), max(ans))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "t1 = int(input())\nwhile t1 > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best1, worst1) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst1 = max(c, worst1)\n        best1 = min(c, best1)\n    print(best1, worst1)\n    t1 -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "def fi(i, v, n, ied):\n    answer = 1\n    inf = 1\n    for j in range(n):\n        if v[j] == v[i] or j == i:\n            continue\n        tm = float(i - j) / float(v[j] - v[i])\n        if tm >= mm[i] and ied[j] == 0:\n            inf += 1\n            ied[j] = 1\n            mm[j] = tm\n            answer += fi(j, v, n, ied)\n    return answer\n\ndef sz(l, n):\n    for i in range(n + 1):\n        l[i] = 0\n    for j in range(12):\n        pass\nt = int(input())\nfor _ in range(t):\n    minimm = 1000000000\n    maximm = -1000000000\n    n = int(input())\n    v = [int(x) for x in input().split()]\n    ied = []\n    mm = []\n    ied = [0] * (n + 1)\n    mm = [0] * (n + 1)\n    for i in range(n):\n        sz(ied, n)\n        sz(mm, n)\n        ied[i] = 1\n        res = fi(i, v, n, ied)\n        if minimm > res:\n            minimm = res\n        maximm = max(maximm, res)\n    print(minimm, end=' ')\n    print(maximm)", "poorna = int(input())\nwhile poorna > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    poorna -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "test = int(input())\nfor i in range(test):\n    N = int(input())\n    vel = list(map(int, input().split()))\n    res = list()\n    for j in range(N):\n        d = [vel[j]]\n        x = vel[j]\n        c = 1\n        for k in range(j + 1, N):\n            if x > vel[k]:\n                d.append(vel[k])\n                c += 1\n        w = min(d)\n        z = 0\n        for p in range(j):\n            if vel[p] > w:\n                c += 1\n            if vel[p] > z:\n                z = vel[p]\n        for qq in range(j + 1, N):\n            if vel[qq] >= vel[j] and vel[qq] < z:\n                c += 1\n        res.append(c)\n    print(min(res), max(res))", "test = int(input())\nwhile test > 0:\n    n = int(input())\n    list1 = [int(x) for x in input().split()]\n    w = 1\n    be = n\n    for j in range(n):\n        t = [0] * n\n        t[j] = 1\n        for i in range(j):\n            if list1[i] > list1[j]:\n                t[i] = 1\n        for i in range(j + 1, n):\n            if list1[i] < list1[j]:\n                t[i] = 1\n        for i in range(j):\n            if t[i] == 1:\n                for k in range(j, n):\n                    if list1[k] < list1[i]:\n                        t[k] = 1\n        for i in range(j + 1, n):\n            if t[i] == 1:\n                for k in range(j):\n                    if list1[i] < list1[k]:\n                        t[k] = 1\n        count = t.count(1)\n        w = max(count, w)\n        be = min(count, be)\n    print(be, w)\n    test -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "def fi(i, v, n, ied):\n    answer = 1\n    inf = 1\n    for j in range(n):\n        if v[j] == v[i] or j == i:\n            continue\n        tm = float(i - j) / float(v[j] - v[i])\n        if tm >= mm[i] and ied[j] == 0:\n            inf += 1\n            ied[j] = 1\n            mm[j] = tm\n            answer += fi(j, v, n, ied)\n    return answer\n\ndef sz(l, n):\n    for i in range(n + 1):\n        l[i] = 0\n    for j in range(12):\n        pass\nt = int(input())\nfor _ in range(t):\n    minimm = 1000000000\n    maximm = -1000000000\n    n = int(input())\n    v = [int(x) for x in input().split()]\n    ied = []\n    mm = []\n    ied = [0] * (n + 1)\n    mm = [0] * (n + 1)\n    for i in range(n):\n        sz(ied, n)\n        sz(mm, n)\n        ied[i] = 1\n        res = fi(i, v, n, ied)\n        if minimm > res:\n            minimm = res\n        maximm = max(maximm, res)\n    print(minimm, end=' ')\n    print(maximm)", "def fun(b, n, t, k):\n    c = 1\n    for (key, value) in b[n - 1].items():\n        if value > t and key not in k:\n            k.add(key)\n            c += fun(b, key, value, k)\n    return c\nfor t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [{}, {}, {}, {}, {}]\n    for i in range(1, n):\n        d = {}\n        for j in range(i + 1, n + 1):\n            if a[i - 1] - a[j - 1] <= 0:\n                continue\n            t = (j - i) / (a[i - 1] - a[j - 1])\n            b[i - 1][j] = t\n            b[j - 1][i] = t\n    res = []\n    for i in range(n):\n        k = set()\n        k.add(i + 1)\n        res.append(fun(b, i + 1, 0, k))\n    print(min(res), max(res))", "Sa = int(input())\nwhile Sa > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    Sa -= 1", "for i in range(int(input())):\n    num = int(input())\n    N = []\n    li = list(map(int, input().split()))\n    for j in range(len(li)):\n        con = 1\n        minn = li[j]\n        maxx = li[j]\n        for k in range(j + 1, num):\n            if li[j] > li[k]:\n                if minn > li[k]:\n                    minn = li[k]\n        for a in range(0, j):\n            if li[a] > li[j]:\n                if maxx < li[a]:\n                    maxx = li[a]\n            if li[a] > minn:\n                con = con + 1\n        for x in range(j + 1, num):\n            if li[x] < maxx:\n                con = con + 1\n        N.append(con)\n    print(min(N), max(N))", "def fi(i, v, n, ied):\n    answer = 1\n    inf = 1\n    for j in range(n):\n        if v[j] == v[i] or j == i:\n            continue\n        tm = float(i - j) / float(v[j] - v[i])\n        if tm >= mm[i] and ied[j] == 0:\n            inf += 1\n            ied[j] = 1\n            mm[j] = tm\n            answer += fi(j, v, n, ied)\n    return answer\n\ndef sz(l, n):\n    for i in range(n + 1):\n        l[i] = 0\n    for j in range(12):\n        pass\nt = int(input())\nfor _ in range(t):\n    minimm = 1000000000\n    maximm = -1000000000\n    n = int(input())\n    v = [int(x) for x in input().split()]\n    ied = []\n    mm = []\n    ied = [0] * (n + 1)\n    mm = [0] * (n + 1)\n    for i in range(n):\n        sz(ied, n)\n        sz(mm, n)\n        ied[i] = 1\n        res = fi(i, v, n, ied)\n        if minimm > res:\n            minimm = res\n        maximm = max(maximm, res)\n    print(minimm, end=' ')\n    print(maximm)", "import sys\n\ndef corona(i, a, t, n, v):\n    for j in range(n):\n        if v[j] == v[i]:\n            continue\n        x = i - j\n        y = v[j] - v[i]\n        z = x / y\n        if z > t and (not a[j]):\n            a[j] = 1\n            corona(j, a, z, n, v)\nt = int(input())\nwhile t != 0:\n    t = t - 1\n    n = int(input())\n    v = list(map(float, input().split()))\n    min = sys.maxsize\n    max = -sys.maxsize - 1\n    a = []\n    for i in range(n):\n        k = 0\n        a = [0] * (n + 1)\n        a[i] = 1\n        corona(i, a, 0, n, v)\n        for j in range(n):\n            if a[j]:\n                k += 1\n        if min > k:\n            min = k\n        if max < k:\n            max = k\n    print(min, end=' ')\n    print(max)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(y) for y in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        m = temp.count(1)\n        worst = max(m, worst)\n        best = min(m, best)\n    print(best, worst)\n    t -= 1", "tc = int(input())\nwhile tc > 0:\n    num = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (num, 1)\n    for i in range(num):\n        temp = [0] * num\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, num):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, num):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, num):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        cnt = temp.count(1)\n        worst = max(cnt, worst)\n        best = min(cnt, best)\n    print(best, worst)\n    tc -= 1\nmod = 1000000007\n\ndef power(a, b):\n    if b == 0:\n        return 1\n    ret = power(a, b // 2) % mod\n    ret = ret * ret % mod\n    if b % 2 != 0:\n        ret = ret * a % mod\n    return ret\n\ndef divide(a, b):\n    return a % mod * (power(b, mod - 2) % mod) % mod\n\ndef comb(num, res):\n    ret = 1\n    k = min(res, num - res)\n    for i in range(k):\n        ret = ret % mod * (num - i) % mod % mod\n        ret = divide(ret, i + 1)\n    return ret % mod", "for i in range(int(input())):\n    num = int(input())\n    N = []\n    li = list(map(int, input().split()))\n    for j in range(len(li)):\n        con = 1\n        minn = li[j]\n        maxx = li[j]\n        for k in range(j + 1, num):\n            if li[j] > li[k]:\n                if minn > li[k]:\n                    minn = li[k]\n        for a in range(0, j):\n            if li[a] > li[j]:\n                if maxx < li[a]:\n                    maxx = li[a]\n            if li[a] > minn:\n                con = con + 1\n        for x in range(j + 1, num):\n            if li[x] < maxx:\n                con = con + 1\n        N.append(con)\n    print(min(N), max(N))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "t1 = int(input())\nwhile t1 > 0:\n    n1 = int(input())\n    l1 = [int(x1) for x1 in input().split()]\n    (best, worst) = (n1, 1)\n    for i1 in range(n1):\n        temp = [0] * n1\n        temp[i1] = 1\n        for j1 in range(i1):\n            if l1[j1] > l1[i1]:\n                temp[j1] = 1\n        for j1 in range(i1 + 1, n1):\n            if l1[j1] < l1[i1]:\n                temp[j1] = 1\n        for j1 in range(i1):\n            if temp[j1] == 1:\n                for k1 in range(i1, n1):\n                    if l1[k1] < l1[j1]:\n                        temp[k1] = 1\n        for j1 in range(i1 + 1, n1):\n            if temp[j1] == 1:\n                for k1 in range(i1):\n                    if l1[j1] < l1[k1]:\n                        temp[k1] = 1\n        c1 = temp.count(1)\n        worst = max(c1, worst)\n        best = min(c1, best)\n    print(best, worst)\n    t1 -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1\nmod = 1000000007\n\ndef power(a, b):\n    if b == 0:\n        return 1\n    ret = power(a, b // 2) % mod\n    ret = ret * ret % mod\n    if b % 2 != 0:\n        ret = ret * a % mod\n    return ret\n\ndef divide(a, b):\n    return a % mod * (power(b, mod - 2) % mod) % mod\n\ndef comb(n, r):\n    ret = 1\n    k = min(r, n - r)\n    for i in range(k):\n        ret = ret % mod * (n - i) % mod % mod\n        ret = divide(ret, i + 1)\n    return ret % mod", "r = int(input())\nwhile r > 0:\n    a = int(input())\n    m = [int(x) for x in input().split()]\n    (best, worst) = (a, 1)\n    for i in range(a):\n        temp = [0] * a\n        temp[i] = 1\n        for j in range(i):\n            if m[j] > m[i]:\n                temp[j] = 1\n        for j in range(i + 1, a):\n            if m[j] < m[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, a):\n                    if m[k] < m[j]:\n                        temp[k] = 1\n        for j in range(i + 1, a):\n            if temp[j] == 1:\n                for k in range(i):\n                    if m[j] < m[k]:\n                        temp[k] = 1\n        s = temp.count(1)\n        worst = max(s, worst)\n        best = min(s, best)\n    print(best, worst)\n    r -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    t -= 1", "tempe = int(input())\nwhile tempe > 0:\n    numbs = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (numbs, 1)\n    for i in range(numbs):\n        temp = [0] * numbs\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, numbs):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, numbs):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, numbs):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    tempe -= 1", "q = int(input())\nwhile q > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (best, worst) = (n, 1)\n    for i in range(n):\n        temp = [0] * n\n        temp[i] = 1\n        for j in range(i):\n            if l[j] > l[i]:\n                temp[j] = 1\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                temp[j] = 1\n        for j in range(i):\n            if temp[j] == 1:\n                for k in range(i, n):\n                    if l[k] < l[j]:\n                        temp[k] = 1\n        for j in range(i + 1, n):\n            if temp[j] == 1:\n                for k in range(i):\n                    if l[j] < l[k]:\n                        temp[k] = 1\n        c = temp.count(1)\n        worst = max(c, worst)\n        best = min(c, best)\n    print(best, worst)\n    q -= 1\nmod = 1000000007\n\ndef power(a, b):\n    if b == 0:\n        return 1\n    ret = power(a, b // 2) % mod\n    ret = ret * ret % mod\n    if b % 2 != 0:\n        ret = ret * a % mod\n    return ret\n\ndef divide(a, b):\n    return a % mod * (power(b, mod - 2) % mod) % mod\n\ndef comb(n, r):\n    ret = 1\n    k = min(r, n - r)\n    for i in range(k):\n        ret = ret % mod * (n - i) % mod % mod\n        ret = divide(ret, i + 1)\n    return ret % mod", "import sys\n\ndef corona(i, a, t, n, v):\n    for j in range(n):\n        if v[j] == v[i]:\n            continue\n        x = i - j\n        y = v[j] - v[i]\n        z = x / y\n        if z > t and (not a[j]):\n            a[j] = 1\n            corona(j, a, z, n, v)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    v = list(map(float, input().split()))\n    min = sys.maxsize\n    max = -sys.maxsize - 1\n    a = []\n    for i in range(n):\n        k = 0\n        a = [0] * (n + 1)\n        a[i] = 1\n        corona(i, a, 0, n, v)\n        for j in range(n):\n            if a[j]:\n                k += 1\n        if min > k:\n            min = k\n        if max < k:\n            max = k\n    print(min, end=' ')\n    print(max)"]