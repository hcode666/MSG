["for _ in range(int(input())):\n    input()\n    cs = [int(x) - 1 for x in input().split()]\n    first = {0: 0}\n    last = {}\n    v = 0\n    for (i, c) in enumerate(cs):\n        v ^= 1 << c\n        if v not in first:\n            first[v] = i + 1\n        last[v] = i + 1\n    ans = max((last.get(v ^ 1 << c, 0) - i for c in range(max(cs) + 1) for (v, i) in first.items()))\n    assert ans % 2 == 1\n    print(ans // 2)", "for _ in range(int(input())):\n    input()\n    cs = [int(x) - 1 for x in input().split()]\n    first = {0: 0}\n    last = {}\n    v = 0\n    for (i, c) in enumerate(cs):\n        v ^= 1 << c\n        if v not in first:\n            first[v] = i + 1\n        last[v] = i + 1\n    ans = max((last.get(v ^ 1 << c, 0) - i for c in range(max(cs) + 1) for (v, i) in first.items()))\n    assert ans % 2 == 1\n    print(ans // 2)", "for _ in range(int(input())):\n    input()\n    cs = [int(x) - 1 for x in input().split()]\n    first = {0: 0}\n    last = {}\n    v = 0\n    for (i, c) in enumerate(cs):\n        v ^= 1 << c\n        if v not in first:\n            first[v] = i + 1\n        last[v] = i + 1\n    ans = max((last.get(v ^ 1 << c, 0) - i for c in range(max(cs) + 1) for (v, i) in first.items()))\n    assert ans % 2 == 1\n    print(ans // 2)", "for _ in range(int(input())):\n    input()\n    cs = [int(x) - 1 for x in input().split()]\n    first = {0: 0}\n    last = {}\n    v = 0\n    for (i, c) in enumerate(cs):\n        v ^= 1 << c\n        if v not in first:\n            first[v] = i + 1\n        last[v] = i + 1\n    ans = max((last.get(v ^ 1 << c, 0) - i for c in range(max(cs) + 1) for (v, i) in first.items()))\n    assert ans % 2 == 1\n    print(ans // 2)", "for t in range(int(input())):\n    n = int(input())\n    l = [int(j) - 1 for j in input().split()]\n    d = dict()\n    st = 0\n    d[st] = -1\n    ans = 1\n    for i in range(n):\n        st = st ^ 1 << l[i]\n        for j in range(30):\n            st1 = st\n            st1 = st1 ^ 1 << j\n            if st1 in d and d[st1] != i - 1:\n                ans = max(ans, i - d[st1])\n        if st not in d:\n            d[st] = i\n    print(ans // 2)", "def answers():\n    (answ, x) = (0, 0)\n    e = dict()\n    e[x] = -1\n    for i in range(n):\n        x ^= 1 << a[i] - 1\n        if x not in e.keys():\n            e[x] = i\n        for j in range(30):\n            answ = max(answ, i - e.get(x ^ 1 << j, i))\n    return answ // 2\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answers())", "def answers():\n    (answ, x) = (0, 0)\n    e = dict()\n    e[x] = -1\n    for i in range(n):\n        x ^= 1 << a[i] - 1\n        if x not in e.keys():\n            e[x] = i\n        for j in range(30):\n            answ = max(answ, i - e.get(x ^ 1 << j, i))\n    return answ // 2\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answers())", "def answer():\n    (ans, x) = (0, 0)\n    d = dict()\n    d[x] = -1\n    for i in range(n):\n        x ^= 1 << a[i] - 1\n        if x not in d.keys():\n            d[x] = i\n        for j in range(30):\n            ans = max(ans, i - d.get(x ^ 1 << j, i))\n    return ans // 2\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "def answer():\n    (ans, x) = (0, 0)\n    d = dict()\n    d[x] = -1\n    for i in range(n):\n        x ^= 1 << a[i] - 1\n        if x not in d.keys():\n            d[x] = i\n        for j in range(30):\n            ans = max(ans, i - d.get(x ^ 1 << j, i))\n    return ans // 2\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "def answer():\n    d = dict()\n    (v, ans) = (0, 0)\n    d[v] = -1\n    for i in range(n):\n        v ^= 1 << a[i] - 1\n        for j in range(30):\n            vd = v\n            vd ^= 1 << j\n            if vd in d.keys():\n                ans = max(ans, i - d[vd])\n        if v not in d.keys():\n            d[v] = i\n    return ans // 2\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "def answer():\n    d = dict()\n    (v, ans) = (0, 0)\n    d[v] = -1\n    for i in range(n):\n        v ^= 1 << a[i] - 1\n        for j in range(30):\n            vd = v\n            vd ^= 1 << j\n            if vd in d.keys():\n                ans = max(ans, i - d[vd])\n        if v not in d.keys():\n            d[v] = i\n    return ans // 2\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "def answer():\n    d = dict()\n    (v, ans) = (0, 0)\n    d[v] = -1\n    for i in range(n):\n        v ^= 1 << a[i] - 1\n        for j in range(30):\n            vd = v\n            vd ^= 1 << j\n            if vd in d.keys():\n                ans = max(ans, i - d[vd])\n        if v not in d.keys():\n            d[v] = i\n    return ans // 2\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "import numpy as np\ntests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    nums = [int(j) - 1 for j in input().split()]\n    pow_2 = [1 for _ in range(30)]\n    for i in range(1, 30):\n        pow_2[i] = 2 * pow_2[i - 1]\n    colors = [-1 for _ in range(30)]\n    seen = dict()\n    seen[0] = -1\n    max_height = 0\n    num = 0\n    for i in range(n):\n        colors[nums[i]] = -colors[nums[i]]\n        num += pow_2[nums[i]] * colors[nums[i]]\n        for j in range(30):\n            new_num = num + pow_2[j] * -colors[j]\n            if new_num in seen:\n                max_height = max(max_height, (i - seen[new_num]) // 2)\n        if num not in seen:\n            seen[num] = i\n    print(max_height)", "import numpy as np\ntests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    nums = [int(j) - 1 for j in input().split()]\n    pow_2 = [1 for _ in range(30)]\n    for i in range(1, 30):\n        pow_2[i] = 2 * pow_2[i - 1]\n    colors = [-1 for _ in range(30)]\n    seen = dict()\n    seen[0] = -1\n    max_height = 0\n    num = 0\n    for i in range(n):\n        colors[nums[i]] = -colors[nums[i]]\n        num += pow_2[nums[i]] * colors[nums[i]]\n        for j in range(30):\n            new_num = num + pow_2[j] * -colors[j]\n            if new_num in seen:\n                max_height = max(max_height, (i - seen[new_num]) // 2)\n        if num not in seen:\n            seen[num] = i\n    print(max_height)", "for i in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    d = {}\n    d[0] = -1\n    parity = 0\n    ans = 0\n    for i in range(n):\n        parity ^= 1 << c[i] - 1\n        for t in range(30):\n            x = parity ^ 1 << t\n            if x in d.keys():\n                ans = max(ans, i - d[x])\n        if parity not in d.keys():\n            d[parity] = i\n    print(ans // 2)", "for t in range(int(input())):\n    n = int(input())\n    l = [int(j) - 1 for j in input().split()]\n    d = dict()\n    st = 0\n    d[st] = -1\n    ans = 1\n    for i in range(n):\n        st = st ^ 1 << l[i]\n        for j in range(30):\n            st1 = st\n            st1 = st1 ^ 1 << j\n            if st1 in d and d[st1] != i - 1:\n                ans = max(ans, i - d[st1])\n        if st not in d:\n            d[st] = i\n    print(ans // 2)", "for t in range(int(input())):\n    n = int(input())\n    l = [int(j) - 1 for j in input().split()]\n    d = dict()\n    st = 0\n    d[st] = -1\n    ans = 1\n    for i in range(n):\n        st = st ^ 1 << l[i]\n        for j in range(30):\n            st1 = st\n            st1 = st1 ^ 1 << j\n            if st1 in d and d[st1] != i - 1:\n                ans = max(ans, i - d[st1])\n        if st not in d:\n            d[st] = i\n    print(ans // 2)", "for t in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    dictionary = {0: 0}\n    parity = 0\n    k = 0\n    for i in range(n):\n        parity ^= 1 << c[i] - 1\n        if parity not in dictionary:\n            dictionary[parity] = i + 1\n        for j in range(30):\n            x = parity ^ 1 << j\n            if x in dictionary:\n                k = max(k, i - dictionary[x])\n    print(k // 2)", "for t in range(int(input())):\n    n = int(input())\n    l = [int(j) - 1 for j in input().split()]\n    d = dict()\n    st = 0\n    d[st] = -1\n    ans = 1\n    for i in range(n):\n        st = st ^ 1 << l[i]\n        for j in range(30):\n            st1 = st\n            st1 = st1 ^ 1 << j\n            if st1 in d and d[st1] != i - 1:\n                ans = max(ans, i - d[st1])\n        if st not in d:\n            d[st] = i\n    print(ans // 2)", "for t in range(int(input())):\n    n = int(input())\n    l = [int(j) - 1 for j in input().split()]\n    d = dict()\n    st = 0\n    d[st] = -1\n    ans = 1\n    for i in range(n):\n        st = st ^ 1 << l[i]\n        for j in range(30):\n            st1 = st\n            st1 = st1 ^ 1 << j\n            if st1 in d and d[st1] != i - 1:\n                ans = max(ans, i - d[st1])\n        if st not in d:\n            d[st] = i\n    print(ans // 2)", "for t in range(int(input())):\n    n = int(input())\n    l = [int(j) - 1 for j in input().split()]\n    d = dict()\n    st = 0\n    d[st] = -1\n    ans = 1\n    for i in range(n):\n        st = st ^ 1 << l[i]\n        for j in range(30):\n            st1 = st\n            st1 = st1 ^ 1 << j\n            if st1 in d and d[st1] != i - 1:\n                ans = max(ans, i - d[st1])\n        if st not in d:\n            d[st] = i\n    print(ans // 2)", "for t in range(int(input())):\n    n = int(input())\n    l = [int(j) - 1 for j in input().split()]\n    d = dict()\n    st = 0\n    d[st] = -1\n    ans = 1\n    for i in range(n):\n        st = st ^ 1 << l[i]\n        for j in range(30):\n            st1 = st\n            st1 = st1 ^ 1 << j\n            if st1 in d and d[st1] != i - 1:\n                ans = max(ans, i - d[st1])\n        if st not in d:\n            d[st] = i\n    print(ans // 2)"]