["import itertools\n\ndef isGood(S):\n    Len = len(S) - 1\n    d = 1\n    while Len - 2 * d >= 0:\n        if S[Len] == S[Len - d] and S[Len] == S[Len - 2 * d]:\n            return 0\n        d += 1\n    return 1\n\ndef isOK(S):\n    Len = len(S)\n    for i in range(0, Len):\n        for j in range(i + 1, Len):\n            if S[i] == S[j]:\n                if 2 * j - i < Len and S[i] == S[2 * j - i]:\n                    return 0\n    return 1\n\ndef Haming(Str1, Str2, K):\n    Len = len(Str1)\n    Count = 0\n    for i in range(0, Len):\n        if Str1[i] != Str2[i]:\n            Count += 1\n    if Count <= K:\n        return 1\n    return 0\nGoodStr = []\n\ndef CREATE_LIST():\n    for i in range(0, 55):\n        GoodStr.append([])\n\ndef DEVGOSTR(Pos, N, Str):\n    global Count\n    if Pos > N:\n        return\n    if isGood(Str) == 0:\n        return\n    GoodStr[len(Str)].append(Str)\n    DEVGOSTR(Pos + 1, N, Str + 'a')\n    DEVGOSTR(Pos + 1, N, Str + 'b')\n    DEVGOSTR(Pos + 1, N, Str + 'c')\nCREATE_LIST()\nDEVGOSTR(0, 50, '')\nfor T in range(0, int(input())):\n    (A, K) = map(int, input().split())\n    Str = input()\n    Count = 0\n    if A == 1:\n        p = 'a'\n    elif A == 2:\n        p = 'ab'\n    else:\n        p = 'abc'\n    if A == 1 and len(Str) <= 2:\n        print('1')\n    elif A == 1 and len(Str) > 2:\n        print('0')\n    elif A == 2 and len(Str) > 8:\n        print('0')\n    elif A == 2 and len(Str) <= 8:\n        for per in itertools.product(p, repeat=len(Str)):\n            if isOK(per) and Haming(Str, per, K):\n                Count += 1\n        print(Count)\n    else:\n        for i in range(0, len(GoodStr[len(Str)])):\n            if Haming(GoodStr[len(Str)][i], Str, K) == 1:\n                Count += 1\n        print(Count)", "import itertools\n\ndef isGood(S):\n    Len = len(S) - 1\n    d = 1\n    while Len - 2 * d >= 0:\n        if S[Len] == S[Len - d] and S[Len] == S[Len - 2 * d]:\n            return 0\n        d += 1\n    return 1\n\ndef isOK(S):\n    Len = len(S)\n    for i in range(0, Len):\n        for j in range(i + 1, Len):\n            if S[i] == S[j]:\n                if 2 * j - i < Len and S[i] == S[2 * j - i]:\n                    return 0\n    return 1\n\ndef Haming(Str1, Str2, K):\n    Len = len(Str1)\n    Count = 0\n    for i in range(0, Len):\n        if Str1[i] != Str2[i]:\n            Count += 1\n    if Count <= K:\n        return 1\n    return 0\nGoodStr = []\n\ndef CREATE_LIST():\n    for i in range(0, 55):\n        GoodStr.append([])\n\ndef DEVGOSTR(Pos, N, Str):\n    global Count\n    if Pos > N:\n        return\n    if isGood(Str) == 0:\n        return\n    GoodStr[len(Str)].append(Str)\n    DEVGOSTR(Pos + 1, N, Str + 'a')\n    DEVGOSTR(Pos + 1, N, Str + 'b')\n    DEVGOSTR(Pos + 1, N, Str + 'c')\nCREATE_LIST()\nDEVGOSTR(0, 50, '')\nfor T in range(0, int(input())):\n    (A, K) = map(int, input().split())\n    Str = input()\n    Count = 0\n    if A == 1:\n        p = 'a'\n    elif A == 2:\n        p = 'ab'\n    else:\n        p = 'abc'\n    if A == 1 and len(Str) <= 2:\n        print('1')\n    elif A == 1 and len(Str) > 2:\n        print('0')\n    elif A == 2 and len(Str) > 8:\n        print('0')\n    elif A == 2 and len(Str) <= 8:\n        for per in itertools.product(p, repeat=len(Str)):\n            if isOK(per) and Haming(Str, per, K):\n                Count += 1\n        print(Count)\n    else:\n        for i in range(0, len(GoodStr[len(Str)])):\n            if Haming(GoodStr[len(Str)][i], Str, K) == 1:\n                Count += 1\n        print(Count)", "import itertools\n\ndef isGood(S):\n    Len = len(S) - 1\n    d = 1\n    while Len - 2 * d >= 0:\n        if S[Len] == S[Len - d] and S[Len] == S[Len - 2 * d]:\n            return 0\n        d += 1\n    return 1\n\ndef isOK(S):\n    Len = len(S)\n    for i in range(0, Len):\n        for j in range(i + 1, Len):\n            if S[i] == S[j]:\n                if 2 * j - i < Len and S[i] == S[2 * j - i]:\n                    return 0\n    return 1\n\ndef Haming(Str1, Str2, K):\n    Len = len(Str1)\n    Count = 0\n    for i in range(0, Len):\n        if Str1[i] != Str2[i]:\n            Count += 1\n    if Count <= K:\n        return 1\n    return 0\nGoodStr = []\n\ndef CREATE_LIST():\n    for i in range(0, 55):\n        GoodStr.append([])\n\ndef DEVGOSTR(Pos, N, Str):\n    global Count\n    if Pos > N:\n        return\n    if isGood(Str) == 0:\n        return\n    GoodStr[len(Str)].append(Str)\n    DEVGOSTR(Pos + 1, N, Str + 'a')\n    DEVGOSTR(Pos + 1, N, Str + 'b')\n    DEVGOSTR(Pos + 1, N, Str + 'c')\nCREATE_LIST()\nDEVGOSTR(0, 50, '')\nfor T in range(0, int(input())):\n    (A, K) = map(int, input().split())\n    Str = input()\n    Count = 0\n    if A == 1:\n        p = 'a'\n    elif A == 2:\n        p = 'ab'\n    else:\n        p = 'abc'\n    if A == 1 and len(Str) <= 2:\n        print('1')\n    elif A == 1 and len(Str) > 2:\n        print('0')\n    elif A == 2 and len(Str) > 8:\n        print('0')\n    elif A == 2 and len(Str) <= 8:\n        for per in itertools.product(p, repeat=len(Str)):\n            if isOK(per) and Haming(Str, per, K):\n                Count += 1\n        print(Count)\n    else:\n        for i in range(0, len(GoodStr[len(Str)])):\n            if Haming(GoodStr[len(Str)][i], Str, K) == 1:\n                Count += 1\n        print(Count)"]