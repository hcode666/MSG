["for _ in range(int(input())):\n    n = int(input())\n    col = set()\n    row = []\n    flag = 1\n    for i in range(n):\n        row.append(list(map(int, input().split())))\n    for i in range(n):\n        if flag:\n            flag = 0\n            for j in range(n):\n                if row[i][j] == 0:\n                    col.add(j + 1)\n                    flag = 1\n        else:\n            break\n    print('YES' if flag and sum(list(col)) == n * (n + 1) // 2 else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    rows = []\n    for i in range(n):\n        rows.append([int(x) for x in input().split()])\n    columns = []\n    for i in range(n):\n        col = []\n        for j in range(n):\n            col.append(rows[j][i])\n        columns.append(col)\n    p = True\n    for i in rows:\n        if 0 not in i:\n            p = False\n            break\n    for i in columns:\n        if 0 not in i:\n            p = False\n            break\n    print('YES' if p else 'NO')", "for tc in range(int(input())):\n    poss = True\n    n = int(input())\n    rows = []\n    cols = []\n    for i in range(n):\n        rows.append(list(map(int, input().split())))\n    for j in range(n):\n        col = [rows[i][j] for i in range(n)]\n        cols.append(col)\n    for row in rows:\n        if 0 not in row:\n            poss = False\n    for col in cols:\n        if 0 not in col:\n            poss = False\n    print('YES' if poss else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    column = []\n    for i in range(n):\n        arr.append([int(m) for m in input().split()])\n    for k in range(n):\n        column.append([arr[j][k] for j in range(n)])\n    flag = 1\n    for a in arr:\n        if 0 not in a:\n            flag = 0\n            break\n        else:\n            continue\n    if flag == 1:\n        for c in column:\n            if 0 not in c:\n                flag = 0\n            else:\n                continue\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor t in range(t):\n    n = int(input())\n    arr = []\n    column = []\n    for i in range(n):\n        arr.append([int(m) for m in input().split()])\n    for k in range(n):\n        column.append([arr[j][k] for j in range(n)])\n    flag = 1\n    for a in arr:\n        if 0 not in a:\n            flag = 0\n            break\n        else:\n            continue\n    if flag == 1:\n        for c in column:\n            if 0 not in c:\n                flag = 0\n            else:\n                continue\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    llst = []\n    flagr = 1\n    cc = []\n    for i in range(n):\n        lst = list(map(int, input().split()))\n        if flagr:\n            if 0 not in lst:\n                flagr = 0\n        llst.append(lst)\n        if len(cc) == 0:\n            for j in lst:\n                cc.append([j])\n        else:\n            for j in range(n):\n                cc[j].append(lst[j])\n    flagc = 1\n    for i in cc:\n        if 0 not in i:\n            flagc = 0\n            break\n    if flagr and flagc:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor t in range(t):\n    n = int(input())\n    arr = []\n    column = []\n    for i in range(n):\n        arr.append([int(m) for m in input().split()])\n    for k in range(n):\n        column.append([arr[j][k] for j in range(n)])\n    flag = 1\n    for a in arr:\n        if 0 not in a:\n            flag = 0\n            break\n        else:\n            continue\n    if flag == 1:\n        for c in column:\n            if 0 not in c:\n                flag = 0\n            else:\n                continue\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    l = []\n    flag = 0\n    for x in range(n):\n        a = list(map(int, input().split()))\n        l.append(a)\n        for i in l[x]:\n            if i == 0:\n                flag += 1\n                break\n    s = []\n    for x in range(n):\n        for y in range(n):\n            if l[x][y] == 0:\n                s.append(y)\n    if len(set(s)) == n and flag == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    lst = []\n    for _ in range(int(input())):\n        lst.append(list(map(int, input().split(' '))))\n    lst1 = []\n    for ele in lst:\n        a = min(ele)\n        lst1.append([i - a for i in ele])\n    for i in range(len(lst1)):\n        m = 10 ** 3\n        for ele in lst1:\n            if ele[i] < m:\n                m = ele[i]\n        for ele in lst1:\n            ele[i] = ele[i] - m\n    if lst == lst1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    col = set()\n    row = []\n    flag = 1\n    for i in range(n):\n        row.append(list(map(int, input().split())))\n    for i in range(n):\n        if flag:\n            flag = 0\n            for j in range(n):\n                if row[i][j] == 0:\n                    col.add(j + 1)\n                    flag = 1\n        else:\n            break\n    print('YES' if flag and sum(list(col)) == n * (n + 1) // 2 else 'NO')", "t = input()\nfor c in range(0, int(t)):\n    n = int(input())\n    mat = []\n    z = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        mat.append(a)\n        if 0 not in mat[i]:\n            z = 1\n    f = 0\n    if z == 0:\n        for j in range(n):\n            f = 0\n            for i in range(n):\n                if mat[i][j] == 0:\n                    f = 1\n                    break\n            if f == 0:\n                break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    flag = 1\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    for row in matrix:\n        if 0 not in row:\n            print('NO')\n            flag = 0\n            break\n    if flag == 0:\n        continue\n    trans = [[0] * n for _ in range(n)]\n    for i in range(n):\n        for j in range(n):\n            trans[i][j] = matrix[j][i]\n    for row in trans:\n        if 0 not in row:\n            print('NO')\n            flag = 0\n            break\n    if flag == 1:\n        print('YES')", "t = input()\nfor c in range(0, int(t)):\n    n = int(input())\n    mat = []\n    z = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        mat.append(a)\n        if 0 not in mat[i]:\n            z = 1\n    f = 0\n    if z == 0:\n        for j in range(n):\n            f = 0\n            for i in range(n):\n                if mat[i][j] == 0:\n                    f = 1\n                    break\n            if f == 0:\n                break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "t = input()\nfor c in range(0, int(t)):\n    n = int(input())\n    mat = []\n    z = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        mat.append(a)\n        if 0 not in mat[i]:\n            z = 1\n    f = 0\n    if z == 0:\n        for j in range(n):\n            f = 0\n            for i in range(n):\n                if mat[i][j] == 0:\n                    f = 1\n                    break\n            if f == 0:\n                break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    mat = []\n    z = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        mat.append(a)\n        if 0 not in mat[i]:\n            z = 1\n    f = 0\n    if z == 0:\n        for j in range(n):\n            f = 0\n            for i in range(n):\n                if mat[i][j] == 0:\n                    f = 1\n                    break\n            if f == 0:\n                break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    mat = []\n    z = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        mat.append(a)\n        if 0 not in mat[i]:\n            z = 1\n    f = 0\n    if z == 0:\n        for j in range(n):\n            f = 0\n            for i in range(n):\n                if mat[i][j] == 0:\n                    f = 1\n                    break\n            if f == 0:\n                break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    mat = []\n    z = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        mat.append(a)\n        if 0 not in mat[i]:\n            z = 1\n    f = 0\n    if z == 0:\n        for j in range(n):\n            f = 0\n            for i in range(n):\n                if mat[i][j] == 0:\n                    f = 1\n                    break\n            if f == 0:\n                break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    flag = 0\n    n = int(input())\n    mat = []\n    for i in range(n):\n        a = list(map(int, input().split()))\n        mat.append(a)\n        for i in mat[i]:\n            if i == 0:\n                flag += 1\n                break\n    b = []\n    for i in range(n):\n        for j in range(n):\n            if mat[i][j] == 0:\n                b.append(j)\n    if len(set(b)) == n and flag == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    flag = 0\n    n = int(input())\n    mat = []\n    for i in range(n):\n        a = list(map(int, input().split()))\n        mat.append(a)\n        for i in mat[i]:\n            if i == 0:\n                flag += 1\n                break\n    b = []\n    for i in range(n):\n        for j in range(n):\n            if mat[i][j] == 0:\n                b.append(j)\n    newl = list(set(b))\n    if len(newl) == n and flag == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    mat = []\n    z = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        mat.append(a)\n        if 0 not in mat[i]:\n            z = 1\n    f = 0\n    if z == 0:\n        for j in range(n):\n            f = 0\n            for i in range(n):\n                if mat[i][j] == 0:\n                    f = 1\n                    break\n            if f == 0:\n                break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    N = int(input())\n    lst = []\n    for j in range(N):\n        k = input()\n        kk = k.split()\n        small = []\n        for m in range(N):\n            small.append(int(kk[m]))\n        lst.append(small.copy())\n    valid = True\n    for n in range(N):\n        count = 0\n        for t in range(N):\n            if lst[n][t] == 0:\n                count += 1\n        if count == 0:\n            valid = False\n            break\n    for n in range(N):\n        count = 0\n        for t in range(N):\n            if lst[t][n] == 0:\n                count += 1\n        if count == 0:\n            valid = False\n            break\n    if valid == True:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    c = 0\n    c1 = 0\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    for i in range(n):\n        if min(a[i]) == 0:\n            c += 1\n    for i in range(n):\n        b = []\n        for j in range(n):\n            b.append(a[j][i])\n        if min(b) == 0:\n            c1 += 1\n    if c == n and c1 == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    (cntRow, cntCol) = (set(), set())\n    mat = []\n    for _ in range(n):\n        mat.append(list(map(int, input().split())))\n    for i in range(n):\n        for j in range(n):\n            if not mat[i][j]:\n                cntRow.add(i)\n                cntCol.add(j)\n    if cntRow == cntCol and len(cntRow) == n:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor x in range(T):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    row = set()\n    col = set()\n    for i in range(len(a)):\n        for j in range(len(a)):\n            if a[i][j] == 0:\n                row.add(i)\n                col.add(j)\n    if len(row) == n and len(col) == n:\n        print('YES')\n    else:\n        print('NO')", "def column(matrix, p):\n    return [row[p] for row in matrix]\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    entries = []\n    flag = True\n    for j in range(n):\n        entries.append(list(map(int, input().split())))\n    for row in entries:\n        if 0 in row:\n            continue\n        else:\n            flag = False\n            break\n    for k in range(n):\n        if 0 in column(entries, k):\n            continue\n        else:\n            flag = False\n            break\n    if flag is False:\n        print('NO')\n    else:\n        print('YES')", "def solve(matrix, num):\n    rw = set()\n    cl = set()\n    for i in range(num):\n        for j in range(num):\n            if matrix[i][j] == 0:\n                rw.add(i)\n                cl.add(j)\n    if len(rw) == num and len(cl) == num:\n        return 'YES'\n    else:\n        return 'NO'\nfor i in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        rw = list(map(int, input().split()))\n        a.append(rw)\n    print(solve(a, n))", "def checkHungarian(m, n):\n    column = []\n    row = []\n    for i in range(n):\n        for j in range(n):\n            if m[i][j] == 0:\n                if i not in row:\n                    row.append(i)\n                if j not in column:\n                    column.append(j)\n    if len(column) == n and len(row) == n:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    n = int(input())\n    ls = [1] * n\n    for i in range(n):\n        a = list(map(int, input().split()))[:n]\n        ls[i] = a\n    checkHungarian(ls, n)", "def solve(num, matrix):\n    col = []\n    row = []\n    ans = None\n    for i in range(num):\n        for j in range(num):\n            if matrix[i][j] == 0:\n                if i not in col:\n                    col.append(i)\n                if j not in row:\n                    row.append(j)\n    if len(col) == num and len(row) == num:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    matrix = []\n    for _ in range(n):\n        columns = list(map(int, input().split()))\n        matrix.append(columns)\n    print(solve(n, matrix))", "for x in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    row = set()\n    col = set()\n    for i in range(len(a)):\n        for j in range(len(a)):\n            if a[i][j] == 0:\n                row.add(i)\n                col.add(j)\n    if len(row) == n and len(col) == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    for k in range(n):\n        row = list(map(int, input().split()))\n        a.append(row)\n    col = []\n    row = []\n    for i in range(n):\n        for j in range(n):\n            if a[i][j] == 0:\n                if i not in col:\n                    col.append(i)\n                if j not in row:\n                    row.append(j)\n    if len(col) == n and len(row) == n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = []\n    for k in range(n):\n        row = list(map(int, input().split()))\n        a.append(row)\n    col = []\n    row = []\n    for i in range(n):\n        for j in range(n):\n            if a[i][j] == 0:\n                if i not in col:\n                    col.append(i)\n                if j not in row:\n                    row.append(j)\n    if len(col) == n and len(row) == n:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "def solve(num, matrix):\n    col = []\n    row = []\n    ans = None\n    for i in range(num):\n        for j in range(num):\n            if matrix[i][j] == 0:\n                if i not in col:\n                    col.append(i)\n                if j not in row:\n                    row.append(j)\n    if len(col) == num and len(row) == num:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    matrix = []\n    for _ in range(n):\n        columns = list(map(int, input().split()))\n        matrix.append(columns)\n    print(solve(n, matrix))", "def solve(num, matrix):\n    col = set()\n    row = set()\n    ans = None\n    for i in range(num):\n        for j in range(num):\n            if matrix[i][j] == 0:\n                col.add(i)\n                row.add(j)\n    if len(col) == num and len(row) == num:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    matrix = []\n    for _ in range(n):\n        columns = list(map(int, input().split()))\n        matrix.append(columns)\n    print(solve(n, matrix))", "T = int(input())\nfor x in range(T):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    row = set()\n    col = set()\n    for i in range(len(a)):\n        for j in range(len(a)):\n            if a[i][j] == 0:\n                row.add(i)\n                col.add(j)\n    if len(row) == n and len(col) == n:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter, UserString\nmod = lambda n: n % (10 ** 9 + 7)\nfc_ = [1]\nfor i in range(1, 1000001):\n    fc_.append(i * fc_[i - 1])\n    fc_[i] = mod(fc_[i])\n\ndef fact(n):\n    return fc_[n]\n\ndef printm(n):\n    print(mod(n))\n\ndef isPrime(n):\n    if n > 1:\n        for i in range(2, int(n ** 0.5) + 1):\n            if not n % i:\n                return False\n        else:\n            return True\n    return True\n\nclass mutableStr(UserString):\n\n    def ins(self, n, s):\n        if n < 0:\n            self.data = self.data = ''.join(list(self.data)[:n + 1]) + s + ''.join(list(self.data)[n + 1:])\n        else:\n            self.data = ''.join(list(self.data)[:n]) + s + ''.join(list(self.data)[n:])\n\n    def rem(self, s):\n        self.data = self.data.replace(s, '')\nalphabetOrd = [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]\nalphabet = list('abcdefghijklmnopqrstuvwxyz')\nr1 = lambda n: range(n)\nr2 = lambda n: range(1, n + 1)\nalph = lambda s: s.isalpha()\nsl = lambda l: list(set(l))\ninf = float('inf')\nsoi = lambda : sorted(input())\nii = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nsi = lambda : mutableStr(input())\nlsi = lambda : list(input())\nsepi = lambda : map(int, input().split())\nseti = lambda : set(map(int, input().split()))\nfor t in range(int(input())):\n    n = ii()\n    l = []\n    a = set()\n    b = set()\n    for i in r1(n):\n        m = li()\n        l.append(m)\n        c = 0\n        for (ind, j) in enumerate(m):\n            if j == 0:\n                a.add(i)\n                b.add(ind)\n    if len(a) == n and len(b) == n:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter, UserString\nmod = lambda n: n % (10 ** 9 + 7)\nfc_ = [1]\nfor i in range(1, 1000001):\n    fc_.append(i * fc_[i - 1])\n    fc_[i] = mod(fc_[i])\n\ndef fact(n):\n    return fc_[n]\n\ndef printm(n):\n    print(mod(n))\n\ndef isPrime(n):\n    if n > 1:\n        for i in range(2, int(n ** 0.5) + 1):\n            if not n % i:\n                return False\n        else:\n            return True\n    return True\n\nclass mutableStr(UserString):\n\n    def ins(self, n, s):\n        if n < 0:\n            self.data = self.data = ''.join(list(self.data)[:n + 1]) + s + ''.join(list(self.data)[n + 1:])\n        else:\n            self.data = ''.join(list(self.data)[:n]) + s + ''.join(list(self.data)[n:])\n\n    def rem(self, s):\n        self.data = self.data.replace(s, '')\nalphabetOrd = [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]\nalphabet = list('abcdefghijklmnopqrstuvwxyz')\nr1 = lambda n: range(n)\nr2 = lambda n: range(1, n + 1)\nalph = lambda s: s.isalpha()\nsl = lambda l: list(set(l))\ninf = float('inf')\nsoi = lambda : sorted(input())\nii = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nsi = lambda : mutableStr(input())\nlsi = lambda : list(input())\nsepi = lambda : map(int, input().split())\nseti = lambda : set(map(int, input().split()))\nfor t in range(int(input())):\n    n = ii()\n    l = []\n    a = set()\n    b = set()\n    for i in r1(n):\n        m = li()\n        l.append(m)\n        c = 0\n        for (ind, j) in enumerate(m):\n            if j == 0:\n                a.add(i)\n                b.add(ind)\n    if len(a) == n and len(b) == n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    r = set()\n    c = set()\n    for i in range(n):\n        l1 = list(map(int, input().split()))\n        for j in range(len(l1)):\n            if l1[j] == 0:\n                r.add(i)\n                c.add(j)\n    if len(r) == n and len(c) == n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    r = set()\n    c = set()\n    for i in range(n):\n        l1 = list(map(int, input().split()))\n        for j in range(len(l1)):\n            if l1[j] == 0:\n                r.add(i)\n                c.add(j)\n    if len(r) == n and len(c) == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    r = set()\n    c = set()\n    for i in range(n):\n        l1 = list(map(int, input().split()))\n        for j in range(len(l1)):\n            if l1[j] == 0:\n                r.add(i)\n                c.add(j)\n    if len(r) == n and len(c) == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    r = set()\n    c = set()\n    for i in range(n):\n        l1 = list(map(int, input().split()))\n        for j in range(len(l1)):\n            if l1[j] == 0:\n                r.add(i)\n                c.add(j)\n    if len(r) == n and len(c) == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    (q, r) = ([], [])\n    l = 0\n    for i in range(n):\n        s = list(map(int, input().split()))\n        arr.append(s)\n    for i in range(n):\n        m = 1\n        x = list(arr[i])\n        for i in range(n):\n            if x[i] == 0:\n                q.append(i)\n                m = m * 0\n        l = l + m\n    for i in range(n):\n        r.append(i)\n    q = list(set(q))\n    q.sort()\n    if q == r and l == 0:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    b = []\n    c = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        if 0 in a:\n            c += 1\n        for j in range(n):\n            if a[j] == 0 and j + 1 not in b:\n                b.append(j + 1)\n    b.sort()\n    if c == n and b == [i + 1 for i in range(n)]:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    b = []\n    c = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        if 0 in a:\n            c += 1\n        for j in range(n):\n            if a[j] == 0 and j + 1 not in b:\n                b.append(j + 1)\n    b.sort()\n    if c == n and b == [i + 1 for i in range(n)]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    ans = []\n    for i in range(1, n + 1):\n        l = list(map(int, input().split()))\n        for j in range(1, n + 1):\n            x = l[j - 1]\n            if x == 0:\n                if ans.count(i) == 0:\n                    ans.append(i)\n                if ans.count(-1 * j) == 0:\n                    ans.append(-1 * j)\n    if len(ans) == 2 * n:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = []\n    q = []\n    r = []\n    l = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        p.append(a)\n    for i in range(n):\n        m = 1\n        x = list(p[i])\n        for i in range(n):\n            if x[i] == 0:\n                q.append(i)\n                m = m * 0\n        l = l + m\n    for i in range(n):\n        r.append(i)\n    q = list(set(q))\n    q.sort()\n    if q == r and l == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = []\n    row = []\n    col = []\n    for i in range(n):\n        list2 = list(map(int, input().split()))\n        list1.append(list2)\n        for j in range(n):\n            if list1[i][j] == 0:\n                row.append(i)\n                col.append(j)\n    if len(set(row)) == n and len(set(col)) == n:\n        print('YES')\n    else:\n        print('NO')", "import numpy as np\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    mat = [list(map(int, input().split())) for i in range(n)]\n    a = True\n    c = []\n    for i in range(n):\n        b = []\n        for j in range(n):\n            b.append(mat[j][i])\n        c.append(b)\n    for i in range(n):\n        if 0 not in mat[i]:\n            a = False\n            break\n    for i in range(n):\n        if 0 not in c[i]:\n            a = False\n    if a:\n        print('YES')\n    else:\n        print('NO')", "def hung(a, n):\n    for i in range(n):\n        if 0 not in a[i]:\n            return 'NO'\n    for i in range(n):\n        mn = a[0][i]\n        for j in range(n):\n            mn = min(mn, a[j][i])\n        if mn != 0:\n            return 'NO'\n    return 'YES'\nfor i in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        s = list(map(int, input().split()))\n        a.append(s)\n    print(hung(a, n))", "tests = int(input())\nfor i in range(tests):\n    n = int(input())\n    ans = 'YES'\n    arr = []\n    for j in range(n):\n        sub_arr = list(map(int, input().split()))\n        arr.append(sub_arr)\n        minimum = min(sub_arr)\n        if minimum:\n            ans = 'NO'\n    col = 0\n    while ans == 'YES' and col < n:\n        minimum = arr[0][col]\n        for j in range(n):\n            minimum = min(minimum, arr[j][col])\n        if minimum:\n            ans = 'NO'\n        col += 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    matrix = [[] for i in range(n)]\n    flag = True\n    for i in range(n):\n        li = list(map(int, input().split(' ')))\n        a = 0\n        for j in li:\n            matrix[a].append(j)\n            a += 1\n        if 0 not in li:\n            flag = False\n    if flag == False:\n        print('NO')\n    else:\n        for i in matrix:\n            if 0 not in i:\n                flag = False\n        if flag:\n            print('YES')\n        else:\n            print('NO')", "def tranpose(a, n):\n    b = []\n    for i in range(n):\n        r = []\n        for j in range(n):\n            r.append(a[j][i])\n        b.append(r)\n    for i in range(n):\n        if 0 not in a[i]:\n            return False\n    for i in range(n):\n        if 0 not in b[i]:\n            return False\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        r = list(map(int, input().split()))\n        a.append(r)\n    if tranpose(a, n):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    list2 = [[] for x in range(n)]\n    okay = 1\n    for j in range(n):\n        list1 = list(map(int, input().split()))\n        z = 0\n        for s in list1:\n            list2[z].append(s)\n            z += 1\n        if 0 not in list1:\n            okay = 0\n    if okay == 0:\n        print('NO')\n    else:\n        for y in list2:\n            if 0 not in y:\n                okay = 0\n        if okay == 0:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l1 = []\n    for i in range(n):\n        l1.append([int(x) for x in input().split(' ')])\n    flag = 1\n    for i in range(n):\n        for j in range(n):\n            if l1[i][j] == 0:\n                break\n            if j == n - 1 and l1[i][j] != 0:\n                flag = 0\n        if flag == 0:\n            break\n    if flag == 1:\n        for i in range(n):\n            for j in range(n):\n                if l1[j][i] == 0:\n                    break\n                if j == n - 1 and l1[j][i] != 0:\n                    flag = 0\n            if flag == 0:\n                break\n    if flag == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    count = 0\n    col = [[arr[j][i] for j in range(n)] for i in range(n)]\n    for i in range(n):\n        if 0 in arr[i] and 0 in col[i]:\n            count += 1\n    if n == count:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = []\n    q = []\n    r = []\n    l = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        p.append(a)\n    for i in range(n):\n        m = 1\n        x = list(p[i])\n        for i in range(n):\n            if x[i] == 0:\n                q.append(i)\n                m = m * 0\n        l = l + m\n    for i in range(n):\n        r.append(i)\n    q = list(set(q))\n    q.sort()\n    if q == r and l == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = []\n    q = []\n    r = []\n    l = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        p.append(a)\n    for i in range(n):\n        m = 1\n        x = list(p[i])\n        for i in range(n):\n            if x[i] == 0:\n                q.append(i)\n                m = m * 0\n        l = l + m\n    for i in range(n):\n        r.append(i)\n    q = list(set(q))\n    q.sort()\n    if q == r and l == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    count = 0\n    col = [[arr[j][i] for j in range(n)] for i in range(n)]\n    for i in range(n):\n        if 0 in arr[i] and 0 in col[i]:\n            count += 1\n    if n == count:\n        print('YES')\n    else:\n        print('NO')", "import numpy as np\nimport math as m\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    arr = []\n    for i in range(x):\n        lis = list(map(int, input().split(' ')))\n        arr.append(lis)\n    arr = np.array(arr)\n    bool = True\n    for i in arr:\n        if 0 not in i:\n            bool = False\n            break\n    arr = np.transpose(arr)\n    for i in arr:\n        if 0 not in i:\n            bool = False\n            break\n    if bool == True:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split()))[:n])\n    row = set()\n    col = set()\n    for i in range(len(a)):\n        for j in range(len(a)):\n            if a[i][j] == 0:\n                row.add(i)\n                col.add(j)\n    if len(row) == n and len(col) == n:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    n = int(input())\n    a = [0] * n\n    for i in range(n):\n        a[i] = [int(_) for _ in input().split()]\n    row = [10000] * n\n    col = [10000] * n\n    for i in range(n):\n        for j in range(n):\n            row[i] = min(row[i], a[i][j])\n            col[j] = min(col[j], a[i][j])\n    for i in range(n):\n        if row[i] != 0 or col[i] != 0:\n            return 'NO'\n    return 'YES'\nt = int(input())\nwhile t:\n    t -= 1\n    print(solve())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    zero = 'YES'\n    count = []\n    for j in range(n):\n        s = [int(x) for x in input().split()]\n        c = s.count(0)\n        if c == 0:\n            zero = 'NO'\n        for i in range(c):\n            count.append(s.index(0) + i)\n            s.remove(0)\n    if zero == 'NO':\n        print('NO')\n    elif len(set(count)) == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    b = []\n    for i in range(n):\n        b.append([0] * n)\n    for i in range(n):\n        for j in range(n):\n            b[j][i] = a[i][j]\n    t = True\n    for i in a:\n        if min(i) == 0:\n            pass\n        else:\n            t = False\n            break\n    for i in b:\n        if min(i) == 0:\n            pass\n        else:\n            t = False\n            break\n    if t:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    N = int(input())\n    A = []\n    invalidated = False\n    for _ in range(N):\n        if invalidated:\n            input()\n            continue\n        T = [int(s) for s in input().split()]\n        if 0 not in T:\n            invalidated = True\n            continue\n        A.append(T)\n    if not invalidated:\n        for i in range(N):\n            if all((A[j][i] for j in range(N))):\n                invalidated = True\n                break\n    print('NO' if invalidated else 'YES')", "for _ in range(int(input())):\n    N = int(input())\n    A = []\n    invalidated = False\n    for _ in range(N):\n        if invalidated:\n            input()\n            continue\n        T = [int(s) for s in input().split()]\n        if 0 not in T:\n            invalidated = True\n            continue\n        A.append(T)\n    if not invalidated:\n        for i in range(N):\n            if all((A[j][i] for j in range(N))):\n                invalidated = True\n                break\n    print('NO' if invalidated else 'YES')", "for _ in range(int(input())):\n    N = int(input())\n    A = []\n    invalidated = False\n    for _ in range(N):\n        if invalidated:\n            input()\n            continue\n        T = [int(s) for s in input().split()]\n        if 0 not in T:\n            invalidated = True\n            continue\n        A.append(T)\n    if not invalidated:\n        for i in range(N):\n            if all((A[j][i] for j in range(N))):\n                invalidated = True\n                break\n    print('NO' if invalidated else 'YES')", "n = int(input())\nwhile n > 0:\n    x = int(input())\n    a = []\n    for i in range(0, x):\n        w = input()\n        w = w.split(' ')\n        a.append(w)\n    z = 0\n    y = 0\n    u = 0\n    v = 0\n    for i in range(0, x):\n        for j in range(0, x):\n            if a[i][j] == '0':\n                z = z + 1\n                break\n    for i in range(0, x):\n        for j in range(0, x):\n            if a[j][i] == '0':\n                u = u + 1\n                break\n    if z + u == 2 * x:\n        print('YES')\n    else:\n        print('NO')\n    n = n - 1", "for _ in range(int(input())):\n    n = int(input())\n    mat = []\n    for ___ in range(n):\n        temp = list(map(int, input().split()))\n        mat.append(temp)\n    ans = True\n    for i in range(n):\n        (row, col) = (False, False)\n        if not ans:\n            break\n        for j in range(n):\n            if mat[i][j] == 0:\n                row = True\n            if mat[j][i] == 0:\n                col = True\n        if not (row and col):\n            ans = False\n            break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(1, 1 + t):\n    n = int(input())\n    mat = []\n    for _ in range(n):\n        temp = list(map(int, input().split()))\n        mat.append(temp)\n    ans = True\n    for i in range(n):\n        (row, col) = (False, False)\n        if not ans:\n            break\n        for j in range(n):\n            if mat[i][j] == 0:\n                row = True\n            if mat[j][i] == 0:\n                col = True\n        if not (row and col):\n            ans = False\n            break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    zero = 'YES'\n    count = []\n    for j in range(n):\n        s = [int(x) for x in input().split()]\n        c = s.count(0)\n        if c == 0:\n            zero = 'NO'\n        for i in range(c):\n            count.append(s.index(0) + i)\n            s.remove(0)\n    if zero == 'NO':\n        print('NO')\n    elif len(set(count)) == n:\n        print('YES')\n    else:\n        print('NO')", "tc = int(input())\nfor _ in range(1, 1 + tc):\n    n = int(input())\n    mat = []\n    for ___ in range(n):\n        temp = list(map(int, input().split()))\n        mat.append(temp)\n    ans = True\n    for i in range(n):\n        (row, col) = (False, False)\n        if not ans:\n            break\n        for j in range(n):\n            if mat[i][j] == 0:\n                row = True\n            if mat[j][i] == 0:\n                col = True\n        if not (row and col):\n            ans = False\n            break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor i in range(0, T):\n    a = int(input())\n    mt = []\n    for j in range(0, a):\n        b = input().split()\n        mt.append(b)\n    doit = True\n    for j in range(0, a):\n        for k in range(0, a):\n            if mt[j][k] == '0':\n                break\n        else:\n            doit = False\n            break\n    if doit:\n        for j in range(0, a):\n            for k in range(0, a):\n                if mt[k][j] == '0':\n                    break\n            else:\n                doit = False\n                break\n    if doit:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    row = []\n    c = 0\n    n = int(input())\n    for i in range(n):\n        row.append(list(map(int, input().split())))\n    col = [[row[k][j] for k in range(n)] for j in range(n)]\n    for i in range(n):\n        if 0 in row[i] and 0 in col[i]:\n            c += 1\n    if c == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    matrix = list()\n    flag = 0\n    for i in range(n):\n        li = list(map(int, input().split()))\n        if 0 not in li:\n            flag = -1\n        res = [i for (i, value) in enumerate(li) if i not in matrix and value == 0]\n        if len(res) > 0:\n            matrix.extend(res)\n    if len(matrix) == n and flag == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    count = 0\n    col = [[arr[j][i] for j in range(n)] for i in range(n)]\n    for i in range(n):\n        if 0 in arr[i] and 0 in col[i]:\n            count += 1\n    if n == count:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    row = []\n    c = 0\n    n = int(input())\n    for i in range(n):\n        row.append(list(map(int, input().split())))\n    col = [[row[k][j] for k in range(n)] for j in range(n)]\n    for i in range(n):\n        if 0 in row[i] and 0 in col[i]:\n            c += 1\n    if c == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    row = []\n    c = 0\n    n = int(input())\n    for i in range(n):\n        row.append(list(map(int, input().split())))\n    col = [[row[k][j] for k in range(n)] for j in range(n)]\n    for i in range(n):\n        if 0 in row[i] and 0 in col[i]:\n            c += 1\n    if c == n:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    b = []\n    cnt = 0\n    a = int(input())\n    for i in range(a):\n        c = list(map(int, input().split()))\n        b.append(c)\n    d = [[b[k][j] for k in range(a)] for j in range(a)]\n    for i in range(a):\n        if 0 in b[i] and 0 in d[i]:\n            cnt += 1\n        else:\n            cnt = 0\n    if cnt == a:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    (rows, cols) = ([0] * n, [0] * n)\n    for r in range(n):\n        arr = list(map(int, input().split(' ')))\n        for (index, item) in enumerate(arr):\n            if item == 0:\n                rows[r] = 1\n                cols[index] = 1\n    if 0 not in rows and 0 not in cols:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    invalid = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        l.append(a)\n        if 0 not in a:\n            invalid = 1\n    for row in range(n):\n        val = 0\n        for col in range(n):\n            if l[col][row] == 0:\n                val = 1\n        if val == 0:\n            invalid = 1\n            break\n    if invalid == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    invalid = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        l.append(a)\n        if 0 not in a:\n            invalid = 1\n    for row in range(n):\n        val = 0\n        for col in range(n):\n            if l[col][row] == 0:\n                val = 1\n        if val == 0:\n            invalid = 1\n            break\n    if invalid == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    invalid = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        l.append(a)\n        if 0 not in a:\n            invalid = 1\n    for row in range(n):\n        val = 0\n        for col in range(n):\n            if l[col][row] == 0:\n                val = 1\n        if val == 0:\n            invalid = 1\n            break\n    if invalid == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    invalid = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        l.append(a)\n        if 0 not in a:\n            invalid = 1\n    for row in range(n):\n        val = 0\n        for col in range(n):\n            if l[col][row] == 0:\n                val = 1\n        if val == 0:\n            invalid = 1\n            break\n    if invalid == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    invalid = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        l.append(a)\n        if 0 not in a:\n            invalid = 1\n    for row in range(n):\n        val = 0\n        for col in range(n):\n            if l[col][row] == 0:\n                val = 1\n        if val == 0:\n            invalid = 1\n            break\n    if invalid == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    c = []\n    d = 0\n    for k in range(n):\n        a = list(map(int, input().split()))\n        c.append(a)\n        if 0 not in a:\n            d = 1\n    for l in range(n):\n        v = 0\n        for m in range(n):\n            if c[m][l] == 0:\n                v = 1\n        if v == 0:\n            d = 1\n            break\n    if d == 1:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    n_rows = int(input())\n    matrix = list()\n    for j in range(n_rows):\n        row = list(map(int, input().split(' ')))\n        matrix.append(row)\n    count = 0\n    for j in range(n_rows):\n        (flag1, flag2) = (1, 1)\n        for k in range(n_rows):\n            flag1 *= matrix[j][k]\n            flag2 *= matrix[k][j]\n        if flag1 == 0 and flag2 == 0:\n            count += 1\n    if count == n_rows:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = []\n    for i in range(0, n):\n        b = [int(x) for x in input().split()]\n        a.append(b)\n    flag = 0\n    col = 0\n    for i in range(0, n):\n        prod = 1\n        for j in range(0, n):\n            prod = prod * a[i][j]\n        if prod != 0:\n            flag = 1\n            break\n    for j in range(0, n):\n        prod_col = 1\n        for i in range(0, n):\n            prod_col = prod_col * a[i][j]\n        if prod_col != 0:\n            col += 1\n            break\n    if flag == 0 and col == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    t = int(input())\n    c = 0\n    grid = []\n    for i in range(t):\n        l = list(map(int, input().split()))\n        grid.append(l)\n        if 0 not in l:\n            c = 1\n    for i in range(t):\n        v = 0\n        for j in range(t):\n            if grid[j][i] == 0:\n                v = 1\n                break\n        if v == 0:\n            c = 1\n            break\n    if c == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    t = int(input())\n    c = 0\n    grid = []\n    for i in range(t):\n        l = list(map(int, input().split()))\n        grid.append(l)\n        if 0 not in l:\n            c = 1\n    for i in range(t):\n        v = 0\n        for j in range(t):\n            if grid[j][i] == 0:\n                v = 1\n                break\n        if v == 0:\n            c = 1\n            break\n    if c == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    t = int(input())\n    c = 0\n    grid = []\n    for i in range(t):\n        l = list(map(int, input().split()))\n        grid.append(l)\n        if 0 not in l:\n            c = 1\n    for i in range(t):\n        v = 0\n        for j in range(t):\n            if grid[j][i] == 0:\n                v = 1\n                break\n        if v == 0:\n            c = 1\n            break\n    if c == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    t = int(input())\n    c = 0\n    grid = []\n    for i in range(t):\n        l = list(map(int, input().split()))\n        grid.append(l)\n        if 0 not in l:\n            c = 1\n    for i in range(t):\n        v = 0\n        for j in range(t):\n            if grid[j][i] == 0:\n                v = 1\n                break\n        if v == 0:\n            c = 1\n            break\n    if c == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    t = int(input())\n    c = 0\n    grid = []\n    for i in range(t):\n        l = list(map(int, input().split()))\n        grid.append(l)\n        if 0 not in l:\n            c = 1\n    for i in range(t):\n        v = 0\n        for j in range(t):\n            if grid[j][i] == 0:\n                v = 1\n                break\n        if v == 0:\n            c = 1\n            break\n    if c == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    t = int(input())\n    c = 0\n    grid = []\n    for i in range(t):\n        l = list(map(int, input().split()))\n        grid.append(l)\n        if 0 not in l:\n            c = 1\n    for i in range(t):\n        v = 0\n        for j in range(t):\n            if grid[j][i] == 0:\n                v = 1\n                break\n        if v == 0:\n            c = 1\n            break\n    if c == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    t = int(input())\n    c = 0\n    grid = []\n    for i in range(t):\n        l = list(map(int, input().split()))\n        grid.append(l)\n        if 0 not in l:\n            c = 1\n    for i in range(t):\n        v = 0\n        for j in range(t):\n            if grid[j][i] == 0:\n                v = 1\n                break\n        if v == 0:\n            c = 1\n            break\n    if c == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    t = int(input())\n    c = 0\n    grid = []\n    for i in range(t):\n        l = list(map(int, input().split()))\n        grid.append(l)\n        if 0 not in l:\n            c = 1\n    for i in range(t):\n        v = 0\n        for j in range(t):\n            if grid[j][i] == 0:\n                v = 1\n                break\n        if v == 0:\n            c = 1\n            break\n    if c == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    matrix = [0 for i in range(n)]\n    count = [0 for i in range(n)]\n    for i in range(n):\n        row = list(map(int, input().split()))\n        for (j, e) in enumerate(row):\n            if e == 0:\n                matrix[j] = 1\n                count[i] = 1\n    print('YES' if sum(matrix) == sum(count) == n else 'NO')", "def check_column(m, temp):\n    f = True\n    for i in range(temp):\n        k = False\n        for j in range(temp):\n            if m[j][i] == 0:\n                k = True\n        if not k:\n            f = False\n            break\n    return f\nfor _ in range(int(input())):\n    n = int(input())\n    m = []\n    flag = True\n    for i in range(n):\n        a = list(map(int, input().split()))\n        if 0 not in a:\n            flag = False\n        m.append(a)\n    if not flag:\n        print('NO')\n    elif check_column(m, n):\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\nsuccess = 'YES'\nfailure = 'NO'\n\ndef solve(*args):\n    (n, matx) = args\n    cols = [1] * n\n    for l in matx:\n        try:\n            ll = l.index(0)\n            cols = [min(x, y) for (x, y) in zip(cols, l)]\n        except ValueError:\n            return failure\n    return success if max(cols) == 0 else failure\n\ndef do_codechef():\n    for t in rii():\n        n = ii()\n        matx = list()\n        for _ in range(n):\n            a = lmii()\n            matx.append(a)\n        print(solve(n, matx))\ndo_codechef()\nexit()", "import sys\ninput = sys.stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\nsuccess = 'YES'\nfailure = 'NO'\n\ndef solve(*args):\n    (n, matx) = args\n    cols = [1] * n\n    for l in matx:\n        try:\n            ll = l.index(0)\n            cols = [min(x, y) for (x, y) in zip(cols, l)]\n        except ValueError:\n            return failure\n    return success if max(cols) == 0 else failure\n\ndef do_codechef():\n    for t in rii():\n        n = ii()\n        matx = list()\n        for _ in range(n):\n            a = lmii()\n            matx.append(a)\n        print(solve(n, matx))\ndo_codechef()\nexit()"]