["t = int(input())\nfor _ in range(t):\n    N = int(input())\n    array = list(map(int, input().split()))\n    sumx = 0\n    sumxIndex = {}\n    for i in range(0, N):\n        sumx = (sumx + array[i]) % N\n        if sumx == 0:\n            left = 0\n            right = i\n            break\n        if sumx in sumxIndex.keys():\n            left = sumxIndex[sumx] + 1\n            right = i\n            break\n        sumxIndex[sumx] = i\n    print(right - left + 1)\n    for index in range(left, right + 1):\n        print(index + 1, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    array = list(map(int, input().split()))\n    sumx = 0\n    sumxIndex = {}\n    for i in range(0, N):\n        sumx = (sumx + array[i]) % N\n        if sumx == 0:\n            left = 0\n            right = i\n            break\n        if sumx in sumxIndex.keys():\n            left = sumxIndex[sumx] + 1\n            right = i\n            break\n        sumxIndex[sumx] = i\n    print(right - left + 1)\n    for index in range(left, right + 1):\n        print(index + 1, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    store = {0: 0}\n    s = 0\n    for i in range(n):\n        s = (s + a[i]) % n\n        if s in store:\n            ans = range(store[s] + 1, i + 2)\n            break\n        store[s] = i + 1\n    print(len(ans))\n    print(*ans)", "t = int(input())\nimport collections\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    d = {}\n    for i in range(n):\n        s = (s + a[i]) % n\n        if s == 0:\n            print(i + 1)\n            for j in range(i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        elif s in d:\n            print(i - d[s])\n            for j in range(d[s] + 1, i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        else:\n            d[s] = i", "def sol():\n    n = int(input())\n    a = list(map(int, input().split()))\n    pre = [0] * n\n    pre[0] = a[0]\n    for i in range(1, n):\n        pre[i] = pre[i - 1] + a[i]\n    a = [i % n for i in pre]\n    hsh = {}\n    ans = []\n    ans1 = []\n    for i in range(n):\n        if a[i] == 0:\n            for j in range(i + 1):\n                ans1.append(j + 1)\n            break\n        elif hsh.get(a[i]) == None:\n            hsh[a[i]] = i\n        elif hsh.get(a[i]) != None:\n            for k in range(hsh[a[i]] + 1, i + 1):\n                ans.append(k + 1)\n            break\n    if ans:\n        print(len(ans))\n        print(*ans)\n    else:\n        print(len(ans1))\n        print(*ans1)\n\ndef main():\n    for _ in range(int(input())):\n        sol()\nmain()", "for _ in range(int(input())):\n    (n, s, d) = (int(input()), 0, {})\n    for (i, j) in enumerate(map(int, input().split())):\n        s = (s + j) % n\n        if s == 0:\n            print(i + 1)\n            print(*range(1, i + 2))\n            break\n        elif s in d:\n            print(i - d[s])\n            print(*range(d[s] + 2, i + 2))\n            break\n        d[s] = i", "for _ in range(int(input())):\n    (n, s, d) = (int(input()), 0, {})\n    for (i, j) in enumerate(map(int, input().split())):\n        s = (s + j) % n\n        if s == 0:\n            print(i + 1)\n            print(*range(1, i + 2))\n            break\n        elif s in d:\n            print(i - d[s])\n            print(*range(d[s] + 2, i + 2))\n            break\n        d[s] = i", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    array = list(map(int, input().split()))\n    sumx = 0\n    sumxIndex = {}\n    for i in range(0, N):\n        sumx = (sumx + array[i]) % N\n        if sumx == 0:\n            left = 0\n            right = i\n            break\n        if sumx in sumxIndex.keys():\n            left = sumxIndex[sumx] + 1\n            right = i\n            break\n        sumxIndex[sumx] = i\n    print(right - left + 1)\n    for index in range(left, right + 1):\n        print(index + 1, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, s, d) = (int(input()), 0, {})\n    for (i, j) in enumerate(map(int, input().split())):\n        s = (s + j) % n\n        if s == 0:\n            print(i + 1)\n            print(*range(1, i + 2))\n            break\n        elif s in d:\n            print(i - d[s])\n            print(*range(d[s] + 2, i + 2))\n            break\n        d[s] = i", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    d = {}\n    for i in range(n):\n        s = (s + l[i]) % n\n        if s == 0:\n            print(i + 1)\n            for j in range(i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        elif s in d:\n            print(i - d[s])\n            for j in range(d[s] + 1, i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        else:\n            d[s] = i", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    d = {}\n    for i in range(n):\n        s = (s + l[i]) % n\n        if s == 0:\n            print(i + 1)\n            for j in range(i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        elif s in d:\n            print(i - d[s])\n            for j in range(d[s] + 1, i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        else:\n            d[s] = i\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    d = {}\n    for i in range(n):\n        s = (s + l[i]) % n\n        if s == 0:\n            print(i + 1)\n            for j in range(i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        elif s in d:\n            print(i - d[s])\n            for j in range(d[s] + 1, i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        else:\n            d[s] = i\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    d = {}\n    for i in range(n):\n        s = (s + l[i]) % n\n        if s == 0:\n            print(i + 1)\n            for j in range(i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        elif s in d:\n            print(i - d[s])\n            for j in range(d[s] + 1, i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        else:\n            d[s] = i\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    d = {}\n    for i in range(n):\n        s = (s + l[i]) % n\n        if s == 0:\n            print(i + 1)\n            for j in range(i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        elif s in d:\n            print(i - d[s])\n            for j in range(d[s] + 1, i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        else:\n            d[s] = i\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(i) for i in input().strip().split()]\n    curr = 0\n    d = {}\n    for i in range(n):\n        curr += l[i]\n        t = curr % n\n        if t == 0:\n            print(i + 1)\n            print(*[j for j in range(1, i + 2)])\n            break\n        elif t in d:\n            st = d[t]\n            le = i - st\n            print(le)\n            print(*[j for j in range(st + 2, st + le + 2)])\n            break\n        else:\n            d[t] = i", "for i in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    freq = [0] * (n + 1)\n    summ = 0\n    dic = {0: 1}\n    for i in range(n):\n        summ += arr[i]\n        mod = summ % n\n        freq[i + 1] = mod\n        if mod in dic:\n            dic[mod] += 1\n        else:\n            dic[mod] = 1\n    if sum(dic.values()) == n:\n        print(-1)\n    else:\n        ans = []\n        key = -1\n        for i in dic:\n            if dic[i] > 1:\n                key = i\n                break\n        count = 0\n        for i in range(n + 1):\n            if count == 2:\n                break\n            elif freq[i] == key and count == 0:\n                count += 1\n            elif count == 1:\n                ans.append(i)\n                if freq[i] == key:\n                    count += 1\n                    break\n        print(len(ans))\n        print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(i) for i in input().strip().split()]\n    curr = 0\n    d = {}\n    for i in range(n):\n        curr += l[i]\n        l[i] = curr % n\n        if l[i] == 0:\n            print(i + 1)\n            print(*[j for j in range(1, i + 2)])\n            break\n        elif l[i] in d:\n            st = d[l[i]]\n            le = i - st\n            print(le)\n            print(*[j for j in range(st + 2, st + le + 2)])\n            break\n        else:\n            d[l[i]] = i", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    ids = [-1 for x in range(0, n, 1)]\n    sum = 0\n    exit = False\n    for i in range(len(array)):\n        sum = sum + array[i]\n        r = sum % n\n        if r == 0:\n            print(i + 1)\n            l = [x + 1 for x in range(i, -1, -1)]\n            print(*l)\n            exit = True\n            break\n        elif ids[r] != -1:\n            print(i - ids[r])\n            l = [x + 1 for x in range(i, ids[r], -1)]\n            print(*reversed(l))\n            exit = True\n            break\n        ids[r] = i\n    if exit == False:\n        print(-1)", "from numpy import ma\nT = int(input())\n\ndef solve(N: int, input_set: list):\n    compounded = []\n    curr_sum = 0\n    for (i, x) in enumerate(input_set):\n        curr_sum = (curr_sum + x) % N\n        if curr_sum == 0:\n            print(i + 1)\n            print(' '.join(map(str, range(1, i + 2))))\n            return\n        compounded.append((curr_sum, i + 1))\n    compounded = sorted(compounded)\n    prev_x = -1\n    prev_y = None\n    for (x, y) in compounded:\n        if x == prev_x:\n            print(y - prev_y)\n            print(' '.join(map(str, range(prev_y + 1, y + 1))))\n            return\n        prev_x = x\n        prev_y = y\n    raise ValueError('Did not find matching moduli')\nfor _ in range(T):\n    N = int(input())\n    input_set = [int(x) for x in input().split()]\n    solve(N, input_set)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    d = {}\n    for i in range(n):\n        s = (s + l[i]) % n\n        if s == 0:\n            print(i + 1)\n            for j in range(i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        elif s in d:\n            print(i - d[s])\n            for j in range(d[s] + 1, i):\n                print(j + 1, end=' ')\n            print(i + 1)\n            break\n        else:\n            d[s] = i\n    t -= 1", "def getModulo(a, n):\n    if a < 0:\n        return -a % n\n    else:\n        return a % n\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(c) for c in input().split()]\n    p = []\n    s = 0\n    for i in arr:\n        s += i\n        p.append(getModulo(s, n))\n    dic = {0: -1}\n    for i in range(len(p)):\n        if p[i] not in dic:\n            dic[p[i]] = i\n        else:\n            ans = range(dic[p[i]] + 1, i + 1)\n            break\n    print(len(ans))\n    print(*[i + 1 for i in ans])", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    cumm_sum = []\n    curr_sum = 0\n    for i in a:\n        curr_sum += i\n        cumm_sum.append((curr_sum + n) % n)\n    index_arr = [[] for i in range(n)]\n    for i in range(n):\n        index_arr[cumm_sum[i]].append(i)\n    if len(index_arr[0]) >= 1:\n        print(index_arr[0][0] + 1)\n        for i in range(index_arr[0][0] + 1):\n            print(i + 1, end=' ')\n    else:\n        for i in range(1, n):\n            if len(index_arr[i]) > 1:\n                st_idx = index_arr[i][0]\n                end_idx = index_arr[i][1]\n                size = end_idx - st_idx\n                print(size)\n                for j in range(st_idx + 1, end_idx + 1):\n                    print(j + 1, end=' ')\n                break\n    print()", "for t in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    store = {0: 0}\n    s = 0\n    for i in range(n):\n        s = (s + a[i]) % n\n        if s in store:\n            ans = range(store[s] + 1, i + 2)\n            break\n        store[s] = i + 1\n    print(len(ans))\n    print(*ans)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    freq = {}\n    acc = 0\n    (l, r) = (-1, -1)\n    for i in range(n):\n        acc += arr[i]\n        acc %= n\n        if acc == 0:\n            (l, r) = (1, i + 1)\n            break\n        elif acc in freq:\n            (l, r) = (freq[acc] + 1, i + 1)\n            break\n        freq[acc] = i + 1\n    print(r - l + 1)\n    for i in range(l, r + 1):\n        print(i, end=' ')\n    print()\nfor t in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    freq = {}\n    acc = 0\n    (l, r) = (-1, -1)\n    for i in range(n):\n        acc += arr[i]\n        acc %= n\n        if acc == 0:\n            (l, r) = (1, i + 1)\n            break\n        elif acc in freq:\n            (l, r) = (freq[acc] + 1, i + 1)\n            break\n        freq[acc] = i + 1\n    print(r - l + 1)\n    for i in range(l, r + 1):\n        print(i, end=' ')\n    print()\nfor t in range(int(input())):\n    solve()", "for t in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    store = {0: 0}\n    s = 0\n    for i in range(n):\n        s = (s + a[i]) % n\n        if s in store:\n            ans = range(store[s] + 1, i + 2)\n            break\n        store[s] = i + 1\n    print(len(ans))\n    print(*ans)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    store = {0: 0}\n    s = 0\n    for i in range(n):\n        s = (s + a[i]) % n\n        if s in store:\n            ans = range(store[s] + 1, i + 2)\n            break\n        store[s] = i + 1\n    print(len(ans))\n    print(*ans)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    store = {0: 0}\n    s = 0\n    for i in range(n):\n        s = (s + a[i]) % n\n        if s in store:\n            ans = range(store[s] + 1, i + 2)\n            break\n        store[s] = i + 1\n    print(len(ans))\n    print(*ans)", "def find(n, arr):\n    s = [None] * (n + 1)\n    s[0] = 0\n    su = 0\n    for i in range(1, n + 1):\n        su = (su + arr[i - 1]) % n\n        if s[su] is not None:\n            print(i - s[su])\n            print(' '.join((str(j + 1) for j in range(s[su], i))))\n            return 0\n        else:\n            s[su] = i\n    print(-1)\nfor _ in range(int(input())):\n    find(int(input()), list(map(int, input().split())))", "def find(n, arr):\n    s = [None] * (n + 1)\n    s[0] = 0\n    su = 0\n    for i in range(1, n + 1):\n        su = (su + arr[i - 1]) % n\n        if s[su] is not None:\n            print(i - s[su])\n            print(' '.join((str(j + 1) for j in range(s[su], i))))\n            return 0\n        else:\n            s[su] = i\n    print(-1)\nfor _ in range(int(input())):\n    find(int(input()), list(map(int, input().split())))", "import sys\n\ndef find(arr, n):\n    s = [None] * (n + 1)\n    s[0] = 0\n    su = 0\n    for i in range(1, n + 1):\n        su = (su + arr[i - 1]) % n\n        if s[su] is not None:\n            print(i - s[su])\n            for j in range(s[su], i):\n                sys.stdout.write(str(j + 1) + ' ')\n            sys.stdout.write('\\n')\n            return 0\n        else:\n            s[su] = i\n    print(-1)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    find(arr, n)", "from math import ceil, sqrt, log, gcd\nfrom collections import deque, defaultdict as dd\nfrom os import path\nimport sys\nt = int(input())\nfor f in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = dict()\n    d[0] = 0\n    s = 0\n    for i in range(1, n + 1):\n        s += a[i - 1]\n        if s % n not in d:\n            d[s % n] = i\n        else:\n            print(i - d[s % n])\n            for j in range(d[s % n], i):\n                print(j + 1, end=' ')\n            print('')\n            break", "from math import ceil, sqrt, log, gcd\nfrom collections import deque, defaultdict as dd\nfrom os import path\nimport sys\nt = int(input())\nfor f in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = dict()\n    d[0] = 0\n    s = 0\n    for i in range(1, n + 1):\n        s += a[i - 1]\n        s %= n\n        if s not in d:\n            d[s] = i\n        else:\n            print(i - d[s])\n            for j in range(d[s], i):\n                print(j + 1, end=' ')\n            print('')\n            break", "from math import ceil, sqrt, log, gcd\nfrom collections import deque, defaultdict as dd\nfrom os import path\nimport sys\nt = int(input())\nfor f in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = dict()\n    d[0] = 0\n    s = 0\n    for i in range(1, n + 1):\n        s += a[i - 1]\n        s %= n\n        if s not in d:\n            d[s] = i\n        else:\n            print(i - d[s])\n            for j in range(d[s], i):\n                print(j + 1, end=' ')\n            print('')\n            break", "from collections import Counter, defaultdict\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        d = defaultdict(lambda : [])\n        l = [a[0]]\n        for i in range(1, n):\n            l.append(l[-1] + a[i])\n        for i in range(n):\n            l[i] %= n\n            d[l[i]].append(i)\n        for i in d:\n            if i == 0:\n                print(d[i][0] + 1)\n                print(*list(range(1, d[i][0] + 2)))\n                break\n            if len(d[i]) > 1:\n                print(d[i][1] - d[i][0])\n                print(*list(range(d[i][0] + 2, d[i][1] + 2)))\n                break\nmain()", "from collections import defaultdict\n\ndef printlist(key, l, h):\n    if key == 0:\n        for i in range(l, h + 1):\n            print(i + 1, end=' ')\n    else:\n        for i in range(l + 1, h + 1):\n            print(i + 1, end=' ')\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    dit = defaultdict(list)\n    sum_ = 0\n    for i in range(n):\n        sum_ += x[i]\n        sum_ = sum_ % n\n        dit[sum_] += [i]\n    for (k, v) in dit.items():\n        if k == 0:\n            print(v[0] + 1)\n            printlist(k, 0, v[0])\n            break\n        elif k != 0 and len(v) > 1:\n            print(v[1] - v[0])\n            printlist(k, v[0], v[1])\n            break\n    t -= 1", "import sys\nfrom collections import Counter\nimport numpy as np\nimport math\ntest = False\nT = int(input().strip())\nfor i in range(T):\n    N = int(input().strip())\n    A = list(map(int, input().strip().split(' ')))\n    B = [0]\n    for j in range(N):\n        B.append((B[-1] + A[j]) % N)\n    if test:\n        print('B = ', B)\n    C = Counter(B)\n    if test:\n        print('C = ', C)\n    D = sorted(C.items(), key=lambda x: x[1], reverse=True)\n    if test:\n        print('D = ', D)\n    common = D[0][0]\n    if test:\n        print('common = ', common)\n    start = B.index(common) + 1\n    end = B[start:].index(common) + start\n    if test:\n        print('start, end = ', start, end)\n    answer1 = end - start + 1\n    answer2 = ' '.join([str(x) for x in range(start, end + 1)])\n    print(answer1)\n    print(answer2)\n    if test:\n        print(' ')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    list = [int(x) for x in input().split()]\n    pre = 0\n    r = 0\n    l = 1\n    from collections import defaultdict\n    hash = dict()\n    for i in range(n):\n        pre = int(pre + list[i]) % n\n        if pre == 0:\n            r = i\n            l = -1\n            break\n        elif pre in hash:\n            r = i\n            l = hash[pre]\n            break\n        else:\n            hash[pre] = i\n    print(r - l)\n    for k in range(l + 1, r + 1):\n        print(k + 1, end=' ')", "try:\n\n    def find():\n        n = int(input())\n        dictk = {0: -1}\n        sumk = 0\n        nums = list(map(int, input().split()))\n        for i in range(n):\n            k = nums[i]\n            if k % n == 0:\n                print(1)\n                print(i + 1)\n                return\n            sumk = (sumk + k) % n\n            if sumk in dictk:\n                print(i - dictk[sumk])\n                print(*list(range(dictk[sumk] + 2, i + 2)))\n                return\n            dictk[sumk] = i\n    t = int(input())\n    for _ in range(t):\n        find()\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    s = 0\n    ans = {}\n    f = 1\n    for i in range(n):\n        s += ar[i]\n        p = s % n\n        if p == 0:\n            print(i + 1)\n            for j in range(1, i + 2):\n                print(j, end=' ')\n            print()\n            break\n        elif p not in ans:\n            ans[p] = i\n        else:\n            print(i - ans[p])\n            for j in range(ans[p] + 2, i + 2):\n                print(j, end=' ')\n            print()\n            f = 0\n            break", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    s = 0\n    ans = {}\n    f = 1\n    for i in range(n):\n        s += ar[i]\n        p = s % n\n        if p == 0:\n            print(i + 1)\n            for j in range(1, i + 2):\n                print(j, end=' ')\n            print()\n            break\n        elif p not in ans:\n            ans[p] = i\n        else:\n            print(i - ans[p])\n            for j in range(ans[p] + 2, i + 2):\n                print(j, end=' ')\n            print()\n            f = 0\n            break", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    d[0] = 0\n    s = 0\n    for i in range(1, n + 1):\n        s += a[i - 1]\n        s %= n\n        if s not in d:\n            d[s] = i\n        else:\n            print(i - d[s])\n            for j in range(d[s], i):\n                print(j + 1, end=' ')\n            print()\n            break\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(n):\n        if i == 0:\n            b.append(a[i] % n)\n        else:\n            b.append((b[-1] + a[i]) % n)\n    d = {}\n    for (idx, i) in enumerate(b):\n        if i == 0:\n            res = list(range(1, idx + 2))\n            print(len(res))\n            print(*res)\n            break\n        if i not in d:\n            d[i] = idx\n        else:\n            res = list(range(d[i] + 2, idx + 2))\n            print(len(res))\n            print(*res)\n            break", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dd = dict()\n    dd[0] = 0\n    s = 0\n    for i in range(1, n + 1):\n        s += arr[i - 1]\n        s %= n\n        if s not in dd:\n            dd[s] = i\n        else:\n            print(i - dd[s])\n            for j in range(dd[s], i):\n                print(j + 1, end=' ')\n            print('')\n            break", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dd = dict()\n    dd[0] = 0\n    s = 0\n    for i in range(1, n + 1):\n        s += arr[i - 1]\n        s %= n\n        if s not in dd:\n            dd[s] = i\n        else:\n            print(i - dd[s])\n            for j in range(dd[s], i):\n                print(j + 1, end=' ')\n            print('')\n            break", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    prefix = [0] * (len(arr) + 1)\n    for (i, ele) in enumerate(arr):\n        prefix[i + 1] = prefix[i] + ele\n    mod_arr = [0] * (n + 1)\n    mod_loc = {}\n    for (i, ele) in enumerate(prefix):\n        mod_arr[i] = prefix[i] % n\n        if mod_arr[i] in mod_loc.keys():\n            diff = i - mod_loc[mod_arr[i]]\n            print(diff)\n            for counter in range(mod_loc[mod_arr[i]] + 1, i + 1, 1):\n                print(counter, end=' ')\n            print()\n            break\n        else:\n            mod_loc[mod_arr[i]] = i", "for T in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    mem = [-1 for i in range(n)]\n    mod = [0] * (n + 1)\n    sum = 0\n    mem[0] = 0\n    for i in range(1, n + 1):\n        sum += arr[i - 1]\n        sum %= n\n        if mem[sum] == -1:\n            mem[sum] = i\n        else:\n            print(i - mem[sum])\n            for j in range(mem[sum], i):\n                print(j + 1, end=' ')\n            print('\\n')\n            break", "for T in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    mem = [-1 for i in range(n)]\n    mod = [0] * (n + 1)\n    sum = 0\n    mem[0] = 0\n    for i in range(1, n + 1):\n        sum += arr[i - 1]\n        sum %= n\n        if mem[sum] == -1:\n            mem[sum] = i\n        else:\n            print(i - mem[sum])\n            for j in range(mem[sum], i):\n                print(j + 1, end=' ')\n            print('\\n')\n            break", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    d[0] = 0\n    s = 0\n    for i in range(1, n + 1):\n        s += a[i - 1]\n        s %= n\n        if s not in d:\n            d[s] = i\n        else:\n            print(i - d[s])\n            for j in range(d[s], i):\n                print(j + 1, end=' ')\n            print()\n            break\n    t -= 1", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    cumm_sum = []\n    curr_sum = 0\n    for i in a:\n        curr_sum += i\n        cumm_sum.append((curr_sum + n) % n)\n    index_arr = [[] for i in range(n)]\n    for i in range(n):\n        index_arr[cumm_sum[i]].append(i)\n    if len(index_arr[0]) >= 1:\n        print(index_arr[0][0] + 1)\n        for i in range(index_arr[0][0] + 1):\n            print(i + 1, end=' ')\n    else:\n        for i in range(1, n):\n            if len(index_arr[i]) > 1:\n                st_idx = index_arr[i][0]\n                end_idx = index_arr[i][1]\n                size = end_idx - st_idx\n                print(size)\n                for j in range(st_idx + 1, end_idx + 1):\n                    print(j + 1, end=' ')\n                break\n    print()", "def solve():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        if arr[0] % n == 0:\n            print(1)\n            print(1)\n            continue\n        freq = []\n        for j in range(n):\n            freq.append([])\n            freq[j].append(0)\n        freq[0][0] = 1\n        freq[0].append(-1)\n        cum_sum = 0\n        for j in range(n):\n            cum_sum = (cum_sum + arr[j] % n) % n\n            freq[cum_sum][0] += 1\n            freq[cum_sum].append(j)\n        for j in range(len(freq)):\n            if freq[j][0] >= 2:\n                print(freq[j][2] - freq[j][1])\n                for k in range(freq[j][1] + 1, freq[j][2] + 1):\n                    print(k + 1, end=' ')\n                break\nsolve()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    d[0] = 0\n    s = 0\n    for i in range(1, n + 1):\n        s += a[i - 1]\n        s %= n\n        if s not in d:\n            d[s] = i\n        else:\n            print(i - d[s])\n            for j in range(d[s], i):\n                print(j + 1, end=' ')\n            print()\n            break\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    d[0] = 0\n    s = 0\n    for i in range(1, n + 1):\n        s += a[i - 1]\n        s %= n\n        if s not in d:\n            d[s] = i\n        else:\n            print(i - d[s])\n            for j in range(d[s], i):\n                print(j + 1, end=' ')\n            print()\n            break\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    s = 0\n    d[0] = 0\n    f = 0\n    for i in range(1, n + 1):\n        s += a[i - 1]\n        s = s % n\n        if s not in d:\n            d[s] = i\n        else:\n            f = 1\n            print(i - d[s])\n            for j in range(d[s], i):\n                print(j + 1, end=' ')\n            print()\n            break\n    if f == 0:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sm = 0\n    mp = {0: 0}\n    for i in range(n):\n        sm += arr[i]\n        r = sm % n\n        if r in mp:\n            print(i - mp[r] + 1)\n            print(*range(mp[r] + 1, i + 1 + 1), sep=' ')\n            break\n        else:\n            mp[r] = i + 1\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    _map = {0: 0}\n    _sum = 0\n    for i in range(len(arr)):\n        _sum += arr[i]\n        r = _sum % n\n        if r in _map:\n            print(i - _map[r] + 1)\n            print(*range(_map[r] + 1, i + 1 + 1), sep=' ')\n            break\n        else:\n            _map[r] = i + 1\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 0\n    mapper = {}\n    for i in range(len(a)):\n        res = (res + a[i]) % n\n        if res % n == 0:\n            print(i + 1)\n            for j in range(1, i + 2):\n                print(j, end=' ')\n            print()\n            break\n        elif res in mapper:\n            print(i - mapper[res])\n            for j in range(mapper[res] + 2, i + 2):\n                print(j, end=' ')\n            print()\n            break\n        else:\n            mapper[res] = i", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = {}\n    s = 0\n    for i in range(n):\n        s = (s + a[i]) % n\n        if s % n == 0:\n            print(i + 1)\n            for j in range(1, i + 2):\n                print(j, end=' ')\n            print()\n            break\n        elif s in b:\n            print(i - b[s])\n            for j in range(b[s] + 2, i + 2):\n                print(j, end=' ')\n            print()\n            break\n        else:\n            b[s] = i", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = {}\n    s = 0\n    for i in range(n):\n        s = (s + a[i]) % n\n        if s % n == 0:\n            print(i + 1)\n            for j in range(1, i + 2):\n                print(j, end=' ')\n            print()\n            break\n        elif s in b:\n            print(i - b[s])\n            for j in range(b[s] + 2, i + 2):\n                print(j, end=' ')\n            print()\n            break\n        else:\n            b[s] = i", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = []\n    ps = 0\n    L = []\n    d = {}\n    c = 0\n    for i in range(n):\n        ps += l[i]\n        if ps % n == 0:\n            print(i + 1)\n            ans = range(1, i + 2)\n            c = 1\n            break\n        try:\n            m = d[ps % n][0]\n            print(i + 1 - (m + 1))\n            ans = range(m + 2, i + 2)\n            c = 1\n            break\n        except:\n            d[ps % n] = [i]\n    a = map(str, ans)\n    print(' '.join(a))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    s = 0\n    d[0] = 0\n    f = 0\n    for i in range(1, n + 1):\n        s += a[i - 1]\n        s = s % n\n        if s not in d:\n            d[s] = i\n        else:\n            f = 1\n            print(i - d[s])\n            for j in range(d[s], i):\n                print(j + 1, end=' ')\n            print()\n            break\n    if f == 0:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    seen = [-1] * (n + 1)\n    sm = 0\n    f = 0\n    seen[0] = 0\n    for i in range(1, n + 1):\n        sm += l[i - 1]\n        sm = sm % n\n        if seen[sm] == -1:\n            seen[sm] = i\n        else:\n            f = 1\n            print(i - seen[sm])\n            for j in range(seen[sm], i):\n                print(j + 1, end=' ')\n            print()\n            break", "import sys\nP = [0] * 100010\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().split()))\n    (p1, p2) = (0, 0)\n    P[0] = 1\n    S = 0\n    for i in range(1, n + 1):\n        S += arr[i - 1]\n        if P[S % n]:\n            p1 = P[S % n]\n            p2 = i + 1\n        P[S % n] = i + 1\n    if not p2:\n        print(-1)\n    else:\n        print(p2 - p1)\n        print(*[i for i in range(p1, p2)])\n    for i in range(1, n + 1):\n        P[i] = 0", "import sys\nP = [0] * 100010\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().split()))\n    (p1, p2) = (0, 0)\n    P[0] = 1\n    S = 0\n    for i in range(1, n + 1):\n        S += arr[i - 1]\n        if P[S % n]:\n            p1 = P[S % n]\n            p2 = i\n        P[S % n] = i + 1\n    if not p2:\n        print(-1)\n    else:\n        print(p2 - p1 + 1)\n        print(*[i for i in range(p1, p2 + 1)])\n    for i in range(1, n + 1):\n        P[i] = 0", "for i in range(int(input())):\n    n = int(input())\n    arr = [int(k) for k in input().split()]\n    mem = [-1 for j in range(n)]\n    mem[0] = 0\n    sum = 0\n    for l in range(1, n + 1):\n        sum = sum + arr[l - 1]\n        sum %= n\n        if mem[sum] == -1:\n            mem[sum] = l\n        else:\n            print(l - mem[sum])\n            for m in range(mem[sum], l):\n                print(m + 1, end=' ')\n            print('\\n')\n            break", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    nos = [int(x) for x in input().split()]\n    copy = nos[:]\n    nos[0] = copy[0] % n\n    if nos[0] == 0:\n        print(1)\n        print(1)\n        continue\n    flag = 0\n    for i in range(1, n):\n        nos[i] = nos[i - 1] + copy[i]\n        nos[i] = nos[i] % n\n        if nos[i] == 0:\n            print(i + 1)\n            print(*[x + 1 for x in range(i + 1)])\n            flag = 1\n            break\n    if flag == 1:\n        continue\n    flag = 0\n    index = [x for x in range(n)]\n    temp = [x for (_, x) in sorted(zip(nos, index))]\n    for i in range(n - 1):\n        if nos[temp[i]] == nos[temp[i + 1]]:\n            a = min(temp[i + 1], temp[i])\n            b = max(temp[i + 1], temp[i])\n            print(b - a)\n            print(*[x + 1 for x in range(a + 1, b + 1)])\n            break", "from sys import stdin\nt = int(stdin.readline())\nfor case in range(t):\n    flag = 0\n    n = int(stdin.readline())\n    n_arr = [int(x) for x in stdin.readline().split()]\n    n_sum = [-1 for x in range(n)]\n    n_rem = [-1 for x in range(n)]\n    n_rem_arr = [-1 for x in range(n)]\n    n_sum[0] = n_arr[0]\n    n_rem[0] = n_arr[0] % n\n    for i in range(1, n):\n        n_sum[i] = n_sum[i - 1] + n_arr[i]\n        n_rem[i] = n_sum[i] % n\n    diff_rl = 1000000\n    if n == 1:\n        print(1)\n        print(0)\n        continue\n    for i in range(n):\n        if n_arr[i] % n == 0:\n            print(1)\n            print(i + 1)\n            flag = 1\n            break\n    if flag == 1:\n        continue\n    for i in range(n):\n        if n_rem[i] == 0:\n            min_r = i\n            min_l = 0\n            diff_rl = min_r - min_l + 1\n            break\n    for i in range(n):\n        temp = n_rem[i]\n        if n_rem_arr[temp] == -1:\n            n_rem_arr[temp] = i\n        elif i - n_rem_arr[temp] < diff_rl:\n            min_r = i\n            min_l = n_rem_arr[temp]\n            diff_rl = min_r - min_l\n            min_l += 1\n            n_rem_arr[temp] = i\n    print(diff_rl)\n    for i in range(min_l, min_r + 1):\n        print(i + 1, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    mem = [-1 for i in range(n)]\n    mod = [0] * (n + 1)\n    sum = 0\n    mem[0] = 0\n    for i in range(1, n + 1):\n        sum += arr[i - 1]\n        sum %= n\n        if mem[sum] == -1:\n            mem[sum] = i\n        else:\n            print(i - mem[sum])\n            for j in range(mem[sum], i):\n                print(j + 1, end=' ')\n            print('\\n')\n            break", "test = int(input())\nfor i in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = dict()\n    d[0] = [0]\n    s = 0\n    for i in range(n):\n        s = (s + arr[i]) % n\n        if not d.get(s, False):\n            d[s] = [i + 1]\n        else:\n            start = d[s][0]\n            end = i + 1\n            print(end - start)\n            print(*list(range(start + 1, end + 1)))\n            break\n    else:\n        print(-1)", "import sys\ndata = sys.stdin.read().split()\ndata.reverse()\n\ndef read():\n    return int(data.pop())\n\ndef readStr():\n    return data.pop()\nT = read()\nfor test in range(T):\n    n = read()\n    A = [0] + [read() for i in range(n)]\n    F = [0] + [-1 for i in range(n - 1)]\n    for i in range(1, n + 1):\n        A[i] = (A[i - 1] + A[i]) % n\n        if F[A[i]] == -1:\n            F[A[i]] = i\n        else:\n            ans = [str(j) for j in range(F[A[i]] + 1, i + 1)]\n            break\n    print(len(ans))\n    print('\\n'.join(ans))", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().strip().split(' ')))\n    N = len(A)\n    B = [i + 1 for i in range(len(A))]\n    red = [0 for i in range(len(A))]\n    post = {}\n    temp = 0\n    L = 0\n    R = N - 1\n    for i in range(len(A)):\n        temp += A[i]\n        temp %= N\n        if temp == 0:\n            L = 0\n            R = i\n            break\n        if red[temp] == 0:\n            post[temp] = i\n            red[temp] = 1\n        else:\n            L = post[temp] + 1\n            R = i\n            break\n    num = R - L + 1\n    print(num)\n    print(*B[L:R + 1])"]