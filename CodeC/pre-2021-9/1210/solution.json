["T = 0\ntry:\n    T = int(input())\nexcept:\n    pass\nwhile T > 0:\n    (n, m) = map(int, input().split())\n    contiguous_sum = [0] * m\n    max_sum = 0\n    while n > 0:\n        row_vector = list(reversed(list(map(int, input().split()))))\n        row_sum = 0\n        for (i, k) in enumerate(row_vector):\n            row_sum += k\n            max_sum = max(max_sum, row_sum + contiguous_sum[i])\n            contiguous_sum[i] = max(row_sum, k + contiguous_sum[i])\n        n = n - 1\n    print(max_sum)\n    T = T - 1", "T = 0\ntry:\n    T = int(input())\nexcept:\n    pass\nwhile T > 0:\n    (n, m) = map(int, input().split())\n    contiguous_sum = [0] * m\n    max_sum = 0\n    while n > 0:\n        row_vector = list(reversed(list(map(int, input().split()))))\n        row_sum = 0\n        for (i, k) in enumerate(row_vector):\n            row_sum += k\n            max_sum = max(max_sum, row_sum + contiguous_sum[i])\n            contiguous_sum[i] = max(row_sum, k + contiguous_sum[i])\n        n = n - 1\n    print(max_sum)\n    T = T - 1", "for _ in range(int(input())):\n    (r, c) = list(map(int, input().split()))\n    (a, c1, msum) = ([], [0] * c, 0)\n    for i in range(r):\n        a = list(reversed(list(map(int, input().split()))))\n        s = 0\n        for (j, k) in enumerate(a):\n            s += k\n            msum = max(msum, s + c1[j])\n            c1[j] = max(s, k + c1[j])\n    print(msum)", "T = int(input())\nwhile T > 0:\n    (n, m) = map(int, input().split())\n    contiguous_sum = [0] * m\n    max_sum = 0\n    while n > 0:\n        row_vector = list(reversed(list(map(int, input().split()))))\n        row_sum = 0\n        for (i, k) in enumerate(row_vector):\n            row_sum += k\n            max_sum = max(max_sum, row_sum + contiguous_sum[i])\n            contiguous_sum[i] = max(row_sum, k + contiguous_sum[i])\n        n = n - 1\n    print(max_sum)\n    T = T - 1", "a = int(input())\nfor i in range(a):\n    cc = list(map(int, input().split()))\n    prr = []\n    for i in range(cc[0]):\n        prr.append(list(map(int, input().split())))\n    lrr = [[[0, 0] for i in range(cc[1])] for j in range(cc[0])]\n    for i in range(cc[0]):\n        trr = 0\n        for j in range(cc[1] - 1, -1, -1):\n            trr += prr[i][j]\n            if i == 0:\n                lrr[i][j][0] = trr\n                lrr[i][j][1] = 0\n            elif trr < lrr[i - 1][j][0] + prr[i][j]:\n                lrr[i][j][0] = lrr[i - 1][j][0] + prr[i][j]\n                lrr[i][j][1] = 0\n            else:\n                lrr[i][j][0] = trr\n                lrr[i][j][1] = 1\n    maxs = 0\n    for i in range(1, cc[0]):\n        trr = 0\n        for j in range(cc[1] - 1, -1, -1):\n            if lrr[i][j][1] == 0:\n                if maxs < trr + lrr[i][j][0]:\n                    maxs = lrr[i][j][0] + trr\n            elif maxs < trr + lrr[i - 1][j][0]:\n                maxs = trr + lrr[i - 1][j][0] + prr[i][j]\n            trr += prr[i][j]\n    print(maxs)", "import copy\nfor _ in range(int(input())):\n    (n, m) = map(int, input().strip().split())\n    s = []\n    for __ in range(n):\n        s.append(list(map(int, input().strip().split())))\n    from_left = copy.deepcopy(s)\n    from_right = copy.deepcopy(s)\n    for i in range(n - 1, -1, -1):\n        for j in range(m - 2, -1, -1):\n            from_left[i][j] += from_left[i][j + 1]\n    for i in range(n):\n        for j in range(1, m):\n            from_right[i][j] += from_right[i][j - 1]\n    result = []\n    for i in range(0, n):\n        result.append([[0, 0]] * m)\n        for j in range(m - 1, -1, -1):\n            if i == 0:\n                if j == m - 1:\n                    result[i][j] = [s[i][j], s[i][j]]\n                else:\n                    result[i][j] = [s[i][j] + result[i][j + 1][1], s[i][j] + result[i][j + 1][1]]\n            else:\n                result[i][j] = [max(result[i - 1][j]) + s[i][j], from_left[i][j]]\n    res = []\n    for i in range(0, n):\n        res.append([0] * m)\n        for j in range(m - 1):\n            res[i][j] = result[i][j][0] + from_left[i][j + 1]\n    print(max((max(x) for x in res)))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    u = [0] * m\n    r = 0\n    for _ in range(n):\n        vv = list(reversed(list(map(int, input().split()))))\n        s = 0\n        for (i, v) in enumerate(vv):\n            s += v\n            r = max(r, s + u[i])\n            u[i] = max(s, v + u[i])\n    print(r)", "def T(x, y, d, n):\n    try:\n        f = lut[x, y, d]\n    except KeyError:\n        g = 0\n    else:\n        return f\n    if d == 2:\n        if y == n - 1:\n            return a[x][y]\n        else:\n            k = a[x][y] + T(x, y + 1, 2, n)\n            lut[x, y, d] = k\n            return k\n    elif d == 1:\n        if x == 0:\n            k = a[x][y] + T(x, y + 1, 2, n)\n            lut[x, y, d] = k\n            return k\n        else:\n            k = a[x][y] + max(T(x, y + 1, 2, n), T(x - 1, y, 1, n))\n            lut[x, y, d] = k\n            return k\n    elif y == n - 1:\n        k = a[x][y] + T(x, y - 1, 0, n)\n        lut[x, y, d] = k\n        return k\n    elif y == 0:\n        k = a[x][y] + T(x - 1, y, 1, n)\n        lut[x, y, d] = k\n        return k\n    else:\n        k = a[x][y] + max(T(x - 1, y, 1, n), T(x, y - 1, 0, n))\n        lut[x, y, d] = k\n        return k\nfor _ in range(int(input())):\n    lut = {}\n    (N, M) = [int(x) for x in input().split()]\n    a = []\n    for i in range(N):\n        a += [[int(x) for x in input().split()]]\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, T(i, M - 1, 0, M))\n    print(ans)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    f1l = [[]] * n\n    f2l = [[]] * n\n    f3l = [[]] * n\n    mat = [None] * n\n    for i in range(n):\n        f1l[i] = [0] * m\n        f2l[i] = [0] * m\n        f3l[i] = [0] * m\n        mat[i] = list(map(int, input().split()))\n\n    def f3(a, b):\n        if a < n and a >= 0 and (b < m) and (b >= 0):\n            if f3l[a][b] == 0:\n                f3l[a][b] = mat[a][b] + f3(a, b + 1)\n            return f3l[a][b]\n        return 0\n\n    def f2(a, b):\n        if a < n and a >= 0 and (b < m) and (b >= 0):\n            if f2l[a][b] == 0:\n                f2l[a][b] = max(f2(a + 1, b) + mat[a][b], f3(a, b))\n            return f2l[a][b]\n        return 0\n\n    def f1(a, b):\n        if a < n and a >= 0 and (b < m) and (b >= 0):\n            if f1l[a][b] == 0:\n                f1l[a][b] = max(f1(a, b - 1) + mat[a][b], f2(a + 1, b) + mat[a][b])\n            return f1l[a][b]\n        return 0\n    for i in range(n):\n        x = f3(i, 0)\n    for i in range(m):\n        x = f2(0, i)\n    (x, mx) = (0, 0)\n    for i in range(n):\n        x = f1(i, m - 1)\n        if x > mx:\n            mx = x\n    print(mx)", "from sys import stdin\nfor i in range(int(stdin.readline())):\n    (n, m) = map(int, stdin.readline().split())\n    f1l = [[]] * n\n    f2l = [[]] * n\n    f3l = [[]] * n\n    mat = [None] * n\n    for i in range(n):\n        f1l[i] = [0] * m\n        f2l[i] = [0] * m\n        f3l[i] = [0] * m\n        mat[i] = list(map(int, stdin.readline().split()))\n\n    def f3(a, b):\n        if a < n and a >= 0 and (b < m) and (b >= 0):\n            if f3l[a][b] == 0:\n                f3l[a][b] = mat[a][b] + f3(a, b + 1)\n            return f3l[a][b]\n        return 0\n\n    def f2(a, b):\n        if a < n and a >= 0 and (b < m) and (b >= 0):\n            if f2l[a][b] == 0:\n                f2l[a][b] = max(f2(a + 1, b) + mat[a][b], f3(a, b))\n            return f2l[a][b]\n        return 0\n\n    def f1(a, b):\n        if a < n and a >= 0 and (b < m) and (b >= 0):\n            if f1l[a][b] == 0:\n                f1l[a][b] = max(f1(a, b - 1) + mat[a][b], f2(a + 1, b) + mat[a][b])\n            return f1l[a][b]\n        return 0\n    for i in range(n):\n        x = f3(i, 0)\n    for i in range(m):\n        x = f2(0, i)\n    (x, mx) = (0, 0)\n    for i in range(n):\n        x = f1(i, m - 1)\n        if x > mx:\n            mx = x\n    print(mx)"]