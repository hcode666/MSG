["for _ in range(int(input())):\n    n = int(input())\n    listland = list(map(int, input().split()))\n    listbad = list(map(int, input().split()))\n    sumland = sum(listland)\n    sumbad = sum(listbad)\n    l = []\n    sweepland = 0\n    sweepbad = sumbad\n    for i in range(n):\n        l.append(sweepland + sweepbad)\n        sweepland += listland[i]\n        sweepbad -= listbad[i]\n        l.append(sweepland + sweepbad)\n    print(max(l))", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst1 = list(map(int, input().split()))\n    a = sum(lst)\n    b = sum(lst1)\n    max1 = max(a, b)\n    (f, s, k, l) = (0, 0, 0, 0)\n    for j in range(n):\n        f += lst[j]\n        s += lst1[j]\n        l = b - s\n        if max1 < l + f:\n            max1 = l + f\n    print(max1)", "import sys\nimport math\nimport random\nfrom collections import defaultdict\nfrom queue import PriorityQueue\nfrom itertools import permutations\nfrom bisect import bisect_left, bisect_right\nfrom math import ceil, floor, sqrt\nfrom typing import List, Tuple\nfrom functools import cmp_to_key\nfrom collections import deque\nfrom queue import Queue\nfrom heapq import heapify, heappush, heappop\nfrom random import randint\n\ndef max(a: int, b: int) -> int:\n    return a if a > b else b\n\ndef min(a: int, b: int) -> int:\n    return a if a < b else b\n\ndef sol():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (pre, suf) = ([0] * (n + 1), [0] * (n + 1))\n    pre[0] = a[0]\n    for i in range(1, n):\n        pre[i] = pre[i - 1] + a[i]\n    suf[n - 1] = b[n - 1]\n    for i in range(n - 2, -1, -1):\n        suf[i] = suf[i + 1] + b[i]\n    ans = max(pre[n - 1], suf[0])\n    for i in range(n - 1):\n        ans = max(pre[i] + suf[i + 1], ans)\n    print(ans)\n\ndef main():\n    test = int(input())\n    for i in range(test):\n        sol()\nmain()", "tc = int(input())\n\ndef profit_max(N, A, B):\n    (A_profit, B_profit) = (sum(A), sum(B))\n    result = max(A_profit, B_profit)\n    (A_curr_sum, B_curr_sum) = (0, 0)\n    for i in range(N):\n        A_curr_sum += A[i]\n        B_curr_sum += B[i]\n        poss_sum = B_profit - B_curr_sum + A_curr_sum\n        result = max(result, poss_sum)\n    return result\nfor i in range(tc):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print(profit_max(N, A, B))", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst1 = list(map(int, input().split()))\n    a = sum(lst)\n    b = sum(lst1)\n    max1 = max(a, b)\n    (f, s, k, l) = (0, 0, 0, 0)\n    for j in range(n):\n        f += lst[j]\n        s += lst1[j]\n        l = b - s\n        if max1 < l + f:\n            max1 = l + f\n    print(max1)", "for i in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l = []\n    s1 = 0\n    s2act = 0\n    for i in range(n):\n        s2act += l2[i]\n    l.append(s2act)\n    for i in range(n):\n        s1 += l1[i]\n        s2act = s2act - l2[i]\n        l.append(s1 + s2act)\n    print(max(l))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    rst = [0] * n\n    B = sum(b)\n    A = sum(a)\n    sm = B\n    for i in range(n):\n        sm += a[i]\n        sm -= b[i]\n        rst[i] = sm\n    ans = max(rst)\n    ans = max(max(A, B), ans)\n    print(ans)", "for i in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = 0\n    s2 = sum(b)\n    ans = []\n    for i in range(n):\n        ans.append(s + s2)\n        s += a[i]\n        s -= b[i]\n    ans.append(sum(a))\n    print(max(ans))", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    s1 = 0\n    s2 = sum(arr2)\n    ans = []\n    for i in range(n):\n        ans.append(s1 + s2)\n        s1 += arr1[i]\n        s2 -= arr2[i]\n    ans.append(sum(arr1))\n    ans.append(sum(arr2))\n    print(max(ans))", "for j in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    s1 = 0\n    s2 = sum(arr2)\n    ans = []\n    for i in range(n):\n        ans.append(s1 + s2)\n        s1 += arr1[i]\n        s2 -= arr2[i]\n    ans.append(sum(arr1))\n    ans.append(sum(arr2))\n    print(max(ans))", "for j in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    s1 = 0\n    s2 = sum(arr2)\n    ans = []\n    for i in range(n):\n        ans.append(s1 + s2)\n        s1 += arr1[i]\n        s2 -= arr2[i]\n    ans.append(sum(arr1))\n    ans.append(sum(arr2))\n    print(max(ans))", "for j in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    s1 = 0\n    s2 = sum(arr2)\n    ans = []\n    for i in range(n):\n        ans.append(s1 + s2)\n        s1 += arr1[i]\n        s2 -= arr2[i]\n    ans.append(sum(arr1))\n    ans.append(sum(arr2))\n    print(max(ans))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    g = sum(b)\n    s = [g]\n    for i in range(n):\n        g = g + a[i] - b[i]\n        s.append(g)\n    print(max(s))", "for _ in range(int(input())):\n    n = int(input())\n    a1 = list(map(int, input().split()))\n    b1 = list(map(int, input().split()))\n    earn_chefland = 0\n    earn_chefabad = 0\n    for i in range(n):\n        earn_chefland += a1[i]\n        earn_chefabad += b1[i]\n        if earn_chefland > earn_chefabad:\n            earn_chefabad = earn_chefland\n    print(earn_chefabad)", "def soln(n, arr, brr):\n    b_sum = sum(brr)\n    res = b_sum\n    cur = b_sum\n    for i in range(n):\n        cur += arr[i]\n        cur -= brr[i]\n        res = max(res, cur)\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    print(soln(n, arr, brr))", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    sum1 = 0\n    B = list(map(int, input().split()))\n    sum2 = sum(B)\n    res = sum2\n    for i in range(N):\n        sum1 += A[i]\n        sum2 -= B[i]\n        res = max(sum1 + sum2, res)\n    print(res)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    sum1 = 0\n    B = list(map(int, input().split()))\n    sum2 = sum(B)\n    res = sum2\n    for i in range(N):\n        sum1 += A[i]\n        sum2 -= B[i]\n        res = max(sum1 + sum2, res)\n    print(res)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    sum1 = 0\n    B = list(map(int, input().split()))\n    sum2 = sum(B)\n    res = sum2\n    for i in range(N):\n        sum1 += A[i]\n        sum2 -= B[i]\n        res = max(sum1 + sum2, res)\n    print(res)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    sum1 = 0\n    B = list(map(int, input().split()))\n    sum2 = sum(B)\n    res = sum2\n    for i in range(N):\n        sum1 += A[i]\n        sum2 -= B[i]\n        res = max(sum1 + sum2, res)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split())) + [0]\n    b = list(map(int, input().split())) + [0]\n    marka = sum(a)\n    markb = sum(b)\n    m = 0\n    track = 0\n    for i in range(n + 1):\n        m1 = max(track + marka, track + markb)\n        marka -= a[i]\n        markb -= b[i]\n        track += a[i]\n        if m1 > m:\n            m = m1\n    print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    res = sum(b)\n    temp = res\n    for i in range(n):\n        temp += a[i]\n        temp -= b[i]\n        res = max(res, temp)\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    res = sum(b)\n    temp = res\n    for i in range(n):\n        temp += a[i]\n        temp -= b[i]\n        res = max(res, temp)\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = sum(b)\n    temp = ans\n    for j in range(n):\n        temp += a[j]\n        temp -= b[j]\n        ans = max(ans, temp)\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    chefland = list(map(int, input().split()))\n    chefabad = list(map(int, input().split()))\n    ans = sum(chefabad)\n    temp = ans\n    for j in range(length):\n        temp += chefland[j]\n        temp -= chefabad[j]\n        ans = max(ans, temp)\n    print(ans)", "from sys import stdin\nip = stdin.readline\nfor _ in range(int(ip())):\n    n = int(ip())\n    ar = list(map(int, ip().split()))\n    br = list(map(int, ip().split()))\n    sm = cSm = sum(br)\n    for i in range(n):\n        cSm = cSm - br[i] + ar[i]\n        sm = max(sm, cSm)\n    print(sm)", "for _ in range(int(input())):\n    n = int(input())\n    chefland = list(map(int, input().split()))\n    chefband = list(map(int, input().split()))\n    for i in range(1, n):\n        chefland[i] = chefland[i] + chefland[i - 1]\n    for i in range(n - 2, -1, -1):\n        chefband[i] += chefband[i + 1]\n    m = 0\n    for i in range(n - 1):\n        if m < chefland[i] + chefband[i + 1]:\n            m = chefland[i] + chefband[i + 1]\n    if m < chefland[-1]:\n        m = chefland[-1]\n    if m < chefband[0]:\n        m = chefband[0]\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    chefland = list(map(int, input().split()))\n    chefband = list(map(int, input().split()))\n    for i in range(1, n):\n        chefland[i] = chefland[i] + chefland[i - 1]\n    for i in range(n - 2, -1, -1):\n        chefband[i] += chefband[i + 1]\n    m = 0\n    for i in range(n - 1):\n        if m < chefland[i] + chefband[i + 1]:\n            m = chefland[i] + chefband[i + 1]\n    if m < chefland[-1]:\n        m = chefland[-1]\n    if m < chefband[0]:\n        m = chefband[0]\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    Ai = list(map(int, input().split()))\n    Bi = list(map(int, input().split()))\n    sumeA = 0\n    current = 0\n    for i in range(n):\n        sumeA += Ai[i]\n        current += Bi[i]\n        if sumeA > current:\n            current = sumeA\n    print(current)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    i = 0\n    c = []\n    while i < n:\n        c.append(b[i] - a[i])\n        i += 1\n    s = 0\n    for i in c:\n        s = s + i\n    z = [s]\n    for i in c:\n        z.append(s - i)\n        s = s - i\n    v = max(z)\n    l = 0\n    for i in a:\n        l = l + i\n    print(l + v)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    i = 0\n    c = []\n    while i < n:\n        c.append(b[i] - a[i])\n        i += 1\n    s = 0\n    for i in c:\n        s = s + i\n    z = [s]\n    for i in c:\n        z.append(s - i)\n        s = s - i\n    v = max(z)\n    l = 0\n    for i in a:\n        l = l + i\n    print(l + v)", "for _ in range(int(input())):\n    n = int(input())\n    Ai = list(map(int, input().split()))\n    Bi = list(map(int, input().split()))\n    sumeA = 0\n    current = 0\n    for i in range(n):\n        sumeA += Ai[i]\n        current += Bi[i]\n        if sumeA > current:\n            current = sumeA\n    print(current)", "testCases = int(input())\nfor testCase in range(testCases):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    preSum = []\n    ps = 0\n    sufSum = []\n    ss = 0\n    profit = []\n    for i in range(n):\n        ps += a[i]\n        preSum.append(ps)\n        ss += b[n - i - 1]\n        sufSum.append(ss)\n    sufSum.reverse()\n    sufSum.append(0)\n    preSum.insert(0, 0)\n    print(max([i + j for (i, j) in zip(preSum, sufSum)]))", "for _ in range(int(input())):\n    n = int(input())\n    Ai = list(map(int, input().split()))\n    Bi = list(map(int, input().split()))\n    s = 0\n    (li1, li2) = ([], [])\n    ans = []\n    ans.append(sum(Bi))\n    tot = sum(Bi)\n    for i in range(n):\n        s += Ai[i]\n        li1.append(s)\n    for j in range(n):\n        tot -= Bi[j]\n        li2.append(tot)\n    for i in range(n):\n        ans.append(li1[i] + li2[i])\n    print(max(ans))", "for _ in range(int(input())):\n    n = int(input())\n    Ai = list(map(int, input().split()))\n    Bi = list(map(int, input().split()))\n    sumeA = 0\n    current = 0\n    for i in range(n):\n        sumeA += Ai[i]\n        current += Bi[i]\n        if sumeA > current:\n            current = sumeA\n    print(current)", "from math import gcd, sqrt, ceil, floor, log10, log2\nfrom heapq import heapify, heappop, heappush, nsmallest, nlargest\nfrom collections import Counter, deque, OrderedDict, defaultdict\nfrom itertools import combinations, permutations, zip_longest\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache, reduce\nimport sys\nimport time\nimport string\nimport operator\nRECURSION_LIMIT = int(10000000.0)\nINT_MAX = float('inf')\nINT_MIN = float('-inf')\nMOD = int(1000000000.0) + 7\nNEWLINE = '\\n'\nSPACE = ' '\nsys.setrecursionlimit(RECURSION_LIMIT)\ninp = lambda fn: fn(input())\ninp_vars = lambda fn, delim, convert_to=list: convert_to(map(fn, input().split(delim)))\nenum = lambda itr: enumerate(itr)\n\ndef toposort(graph, n):\n    degree = [0] * n\n    for node in graph:\n        for adj in graph[node]:\n            degree[adj] += 1\n    bfs_queue = [node for node in range(n) if not degree[node]]\n    for node in bfs_queue:\n        for adj in graph[node]:\n            degree[adj] -= 1\n            if not degree[adj]:\n                bfs_queue.append(adj)\n    return (bfs_queue, degree)\n\ndef dfs(graph, node, visited):\n    visited.add(node)\n    for adj in graph[node]:\n        if adj in visited:\n            continue\n        dfs(graph, adj, visited)\n\ndef solve(*args, **kwargs):\n    (n, arr1, arr2) = args\n    (prefix1, prefix2) = ([arr1[0]], deque([arr2[-1]]))\n    for ele in arr1[1:]:\n        prefix1.append(prefix1[-1] + ele)\n    for ele in arr2[:-1][::-1]:\n        prefix2.appendleft(prefix2[0] + ele)\n    res = max((prefix1[i] + prefix2[i + 1] for i in range(n - 1)))\n    return max(res, prefix1[-1], prefix2[0])\n\ndef main(*args, **kwargs):\n    for _ in range(int(input())):\n        arg1 = inp(int)\n        arg2 = inp_vars(int, SPACE)\n        arg3 = inp_vars(int, SPACE)\n        res = solve(*(arg1, arg2, arg3))\n        if type(res) in {list, tuple, set}:\n            print(*res, sep=' ')\n        else:\n            print(res)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list2 = list(map(int, input().split()))\n    sum2 = 0\n    sum1 = 0\n    for l2 in list2:\n        sum2 += l2\n    for l1 in list1:\n        sum1 += l1\n    list3 = []\n    list3.append(sum1)\n    list3.append(sum2)\n    l3 = 0\n    while l3 < n:\n        sum2 -= list2[l3]\n        sum2 += list1[l3]\n        l3 += 1\n        list3.append(sum2)\n    max = list3[0]\n    for z in list3:\n        if z > max:\n            max = z\n    print(max)", "for _ in range(int(input())):\n    n = int(input())\n    cl = list(map(int, input().split()))\n    cb = list(map(int, input().split()))\n    for i in range(1, n):\n        cl[i] += cl[i - 1]\n    for j in range(n - 2, -1, -1):\n        cb[j] += cb[j + 1]\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, cl[i] + cb[i + 1])\n    ans = max(ans, cl[n - 1])\n    ans = max(ans, cb[0])\n    print(ans)", "N = int(input())\nfor i in range(N):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    prev = 0\n    A1 = []\n    B1 = []\n    for j in range(n):\n        A1.append(prev + A[j])\n        prev = A1[j]\n    prev = 0\n    for j in reversed(range(n)):\n        B1.append(prev + B[j])\n        prev = B1[n - j - 1]\n    B1.reverse()\n    Sum = []\n    Sum.append(sum(A))\n    Sum.append(sum(B))\n    for k in range(len(A) - 1):\n        Sum.append(A1[k] + B1[k + 1])\n    print(max(Sum))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        a[i] += a[i - 1]\n    for i in range(n - 2, -1, -1):\n        b[i] += b[i + 1]\n    for i in range(n - 1):\n        ans = max(ans, a[i] + b[i + 1])\n    ans = max(ans, a[n - 1])\n    ans = max(ans, b[0])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        a[i] += a[i - 1]\n    for i in range(n - 2, -1, -1):\n        b[i] += b[i + 1]\n    for i in range(n - 1):\n        ans = max(ans, a[i] + b[i + 1])\n    ans = max(ans, a[n - 1])\n    ans = max(ans, b[0])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    sum1 = 0\n    count = 0\n    z = []\n    w = []\n    count = []\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    k = sum(y)\n    l = sum(x)\n    count.append(l)\n    count.append(k)\n    s = 0\n    for j in x:\n        s += j\n        z.append(s)\n    for j in y:\n        k -= j\n        w.append(k)\n    for j in range(len(w)):\n        count.append(w[j] + z[j])\n    print(max(count))", "for _ in range(int(input())):\n    n = int(input())\n    Ai = list(map(int, input().split()))\n    Bi = list(map(int, input().split()))\n    s = 0\n    (li1, li2) = ([], [])\n    ans = []\n    ans.append(sum(Bi))\n    tot = sum(Bi)\n    for i in range(n):\n        s += Ai[i]\n        li1.append(s)\n    for j in range(n):\n        tot -= Bi[j]\n        li2.append(tot)\n    for i in range(n):\n        ans.append(li1[i] + li2[i])\n    print(max(ans))", "for _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list2 = list(map(int, input().split()))\n    sum1 = 0\n    sum2 = sum(list2)\n    list3 = []\n    list3.append(sum2)\n    for i in range(n):\n        sum1 += list1[i]\n        sum2 -= list2[i]\n        list3.append(sum1 + sum2)\n    print(max(list3))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(1, n):\n        a[i] += a[i - 1]\n    for i in range(n - 2, -1, -1):\n        b[i] += b[i + 1]\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, a[i] + b[i + 1])\n    ans = max(ans, a[-1])\n    ans = max(ans, b[0])\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "T = int(input())\nfor test in range(T):\n    N = int(input())\n    s = input().split()\n    A = []\n    for i in range(N):\n        A.append(int(s[i]))\n    s = input().split()\n    B = []\n    profit = 0\n    for i in range(N):\n        B.append(int(s[i]))\n        profit += B[i]\n    maxprofit = profit\n    for i in range(N):\n        profit = profit - B[i] + A[i]\n        if profit > maxprofit:\n            maxprofit = profit\n    print(maxprofit)", "for _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list2 = list(map(int, input().split()))\n    sum1 = 0\n    sum2 = sum(list2)\n    list3 = []\n    list3.append(sum2)\n    for i in range(n):\n        sum1 += list1[i]\n        sum2 -= list2[i]\n        list3.append(sum1 + sum2)\n    print(max(list3))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    for i in range(1, n):\n        arr1[i] = arr1[i] + arr1[i - 1]\n    for i in range(n - 2, -1, -1):\n        arr2[i] = arr2[i] + arr2[i + 1]\n    maxi = 0\n    for i in range(n - 1):\n        value = max(arr2[i + 1] + arr1[i], arr2[i])\n        maxi = max(maxi, value)\n    maxi = max(maxi, arr1[-1])\n    print(maxi)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    for i in range(1, n):\n        arr1[i] = arr1[i] + arr1[i - 1]\n    for i in range(n - 2, -1, -1):\n        arr2[i] = arr2[i] + arr2[i + 1]\n    maxi = 0\n    for i in range(n - 1):\n        value = max(arr2[i + 1] + arr1[i], arr2[i])\n        maxi = max(maxi, value)\n    maxi = max(maxi, arr1[-1])\n    print(maxi)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    pa = [0 for i in range(n)]\n    pb = [0 for i in range(n)]\n    pa[0] = a[0]\n    pb[n - 1] = b[n - 1]\n    for i in range(1, n):\n        pa[i] = pa[i - 1] + a[i]\n        pb[n - i - 1] = pb[n - i] + b[n - i - 1]\n    m = pa[n - 1]\n    for i in range(n):\n        if m < pa[i] - a[i] + pb[i]:\n            m = pa[i] - a[i] + pb[i]\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    pa = [0 for i in range(n)]\n    pb = [0 for i in range(n)]\n    pa[0] = a[0]\n    pb[n - 1] = b[n - 1]\n    for i in range(1, n):\n        pa[i] = pa[i - 1] + a[i]\n        pb[n - i - 1] = pb[n - i] + b[n - i - 1]\n    m = pa[n - 1]\n    for i in range(n):\n        if m < pa[i] - a[i] + pb[i]:\n            m = pa[i] - a[i] + pb[i]\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    ali = list(map(int, input().split()))\n    bli = list(map(int, input().split()))\n    sm = sum(bli)\n    mx = sm\n    for i in range(n):\n        sm += ali[i] - bli[i]\n        mx = max(mx, sm)\n    print(mx)", "def function(Input):\n    for _ in range(Input):\n        N = int(input())\n        A = list(map(int, input().split()))\n        B = list(map(int, input().split()))\n        sum = 0\n        for i in range(1, N):\n            A[i] += A[i - 1]\n        for i in range(N - 2, -1, -1):\n            B[i] += B[i + 1]\n        for i in range(0, N - 1):\n            sum = max(sum, A[i] + B[i + 1])\n        sum = max(sum, A[N - 1])\n        sum = max(sum, B[0])\n        print(sum)\n    return ' '\nInput = int(input())\na = function(Input)\nprint(a)", "t = int(input())\nfor h in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    aSum = 0\n    bSum = 0\n    aArr = []\n    bArr = [0] * n\n    for k in range(n):\n        aSum += A[k]\n        aArr.append(aSum)\n        bSum += B[n - 1 - k]\n        bArr[n - 1 - k] = bSum\n    arr = []\n    ans1 = bArr[0]\n    ans2 = aArr[n - 1]\n    ans = 0\n    for i in range(0, n - 1):\n        ans = max(ans1, ans2, aArr[i] + bArr[i + 1], ans)\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\nfrom itertools import accumulate\n\ndef solve(*args):\n    (n, chefland, chefabad) = args\n    advantage = [b - l for (l, b) in zip(chefland, chefabad)]\n    ans = [x for x in sorted(enumerate(list(accumulate(advantage[::-1]))[::-1]), key=lambda y: -y[1])][0]\n    if ans[1] < 0:\n        return sum(chefland)\n    else:\n        return sum(chefland[:ans[0]] + chefabad[ans[0]:])\n\ndef do_codechef():\n    for t in rii():\n        n = ii()\n        a = lmii()\n        b = lmii()\n        print(solve(n, a, b))\ndo_codechef()\nexit()", "for _ in range(int(input())):\n    n = int(input())\n    arr = [0] + [int(a) for a in input().split()]\n    brr = [0] + [int(a) for a in input().split()]\n    for l in range(1, n + 1):\n        arr[l] = arr[l - 1] + arr[l]\n        brr[l] = brr[l - 1] + brr[l]\n    val = -float('inf')\n    for l in range(1, n + 1):\n        c1 = arr[l - 1]\n        c2 = brr[-1] - brr[l - 1]\n        val = max(val, c1 + c2)\n    val = max(val, arr[-1])\n    print(val)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        A = list(map(int, input().split(' ')))\n        B = list(map(int, input().split(' ')))\n        prefix_A = [0 for _ in range(n)]\n        suffix_B = [0 for _ in range(n)]\n        prefix_A[0] = A[0]\n        suffix_B[n - 1] = B[n - 1]\n        for i in range(1, n):\n            prefix_A[i] = prefix_A[i - 1] + A[i]\n        for i in range(n - 2, -1, -1):\n            suffix_B[i] = B[i] + suffix_B[i + 1]\n        ans = 0\n        for i in range(n - 1):\n            s = prefix_A[i] + suffix_B[i + 1]\n            if s > ans:\n                ans = s\n        if ans < prefix_A[n - 1]:\n            ans = prefix_A[n - 1]\n        if ans < suffix_B[0]:\n            ans = suffix_B[0]\n        print(ans)\nexcept Exception:\n    pass", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        A = list(map(int, input().split(' ')))\n        B = list(map(int, input().split(' ')))\n        prefix_A = [0 for _ in range(n)]\n        suffix_B = [0 for _ in range(n)]\n        prefix_A[0] = A[0]\n        suffix_B[n - 1] = B[n - 1]\n        for i in range(1, n):\n            prefix_A[i] = prefix_A[i - 1] + A[i]\n        for i in range(n - 2, -1, -1):\n            suffix_B[i] = B[i] + suffix_B[i + 1]\n        ans = 0\n        for i in range(n - 1):\n            s = prefix_A[i] + suffix_B[i + 1]\n            if s > ans:\n                ans = s\n        if ans < prefix_A[n - 1]:\n            ans = prefix_A[n - 1]\n        if ans < suffix_B[0]:\n            ans = suffix_B[0]\n        print(ans)\nexcept Exception:\n    pass", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        s = 0\n        for i in range(1, n):\n            a[i] += a[i - 1]\n        for i in range(n - 2, -1, -1):\n            b[i] += b[i + 1]\n        for i in range(0, n - 1):\n            s = max(s, a[i] + b[i + 1])\n        s = max(s, a[n - 1])\n        s = max(s, b[0])\n        print(s)\nexcept:\n    pass", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = sum(b)\n    h = s\n    for j in range(n):\n        h += a[j] - b[j]\n        if h > s:\n            s = h\n    print(s)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = sum(b)\n    h = s\n    for j in range(n):\n        h += a[j] - b[j]\n        if h > s:\n            s = h\n    print(s)", "for w in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = sum(b)\n    k = s\n    for i in range(n):\n        k += a[i] - b[i]\n        if k > s:\n            s = k\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    b = [int(k) for k in input().split()]\n    s = sum(b)\n    h = s\n    for i in range(n):\n        h += a[i] - b[i]\n        if h > s:\n            s = h\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = sum(b)\n    h = s\n    for i in range(n):\n        h += a[i] - b[i]\n        if h > s:\n            s = h\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    z = sum(l2)\n    p = z\n    for i in range(n):\n        z += l1[i] - l2[i]\n        if z > p:\n            p = z\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    (res, sum1, sum2) = (0, 0, sum(l2))\n    sum3 = sum2\n    for i in range(n):\n        sum1 += l1[i]\n        sum2 -= l2[i]\n        res = max(res, sum1 + sum2)\n    print(max(res, sum3))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    m = sum(b)\n    s = m\n    for j in range(n):\n        s = s + a[j] - b[j]\n        if s > m:\n            m = s\n    print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    m = sum(b)\n    s = m\n    for j in range(n):\n        s += a[j] - b[j]\n        if s > m:\n            m = s\n    print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    max_profit = sum(b)\n    profit = max_profit\n    for i in range(n):\n        profit += a[i] - b[i]\n        if profit > max_profit:\n            max_profit = profit\n    print(max_profit)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l3 = [0]\n    l4 = [0] * (n + 1)\n    for i in range(n):\n        l3.append(l3[-1] + l1[i])\n    ans = max(l3)\n    for i in range(n - 1, -1, -1):\n        l4[i] = l4[i + 1] + l2[i]\n        ans = max(ans, l4[i] + l3[i])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    max_profit = sum(b)\n    profit = max_profit\n    for i in range(n):\n        profit += a[i] - b[i]\n        if profit > max_profit:\n            max_profit = profit\n    print(max_profit)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lis1 = list(map(int, input().split()))\n    lis2 = list(map(int, input().split()))\n    temp1 = [0]\n    for j in lis1:\n        x = temp1[-1] + j\n        temp1.append(x)\n    temp1.append(0)\n    temp2 = [0]\n    lis2.reverse()\n    for j in lis2:\n        x = temp2[-1] + j\n        temp2.append(x)\n    temp2.append(0)\n    temp2.reverse()\n    maxi = -1\n    for j in range(n + 1):\n        if temp1[j] + temp2[j + 1] > maxi:\n            maxi = temp1[j] + temp2[j + 1]\n    print(maxi)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    (res, sum1, sum2) = (0, 0, sum(l2))\n    sum3 = sum2\n    for i in range(n):\n        sum1 += l1[i]\n        sum2 -= l2[i]\n        res = max(res, sum1 + sum2)\n    print(max(res, sum3))", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    (res, sum1, sum2) = (0, 0, sum(l2))\n    sum3 = sum2\n    for i in range(n):\n        sum1 += l1[i]\n        sum2 -= l2[i]\n        res = max(res, sum1 + sum2)\n    print(max(res, sum3))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = []\n    a.append(0)\n    sum = 0\n    for i in input().split():\n        sum += int(i)\n        a.append(sum)\n    b = [int(x) for x in input().split()]\n    b.append(0)\n    for i in range(n - 1, -1, -1):\n        b[i] += b[i + 1]\n    ans = 0\n    for i in range(0, n + 1):\n        temp = a[i] + b[i]\n        if temp > ans:\n            ans = temp\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    a.append(0)\n    sum = 0\n    for i in input().split():\n        sum += int(i)\n        a.append(sum)\n    b = [int(x) for x in input().split()]\n    b.append(0)\n    for i in range(n - 1, -1, -1):\n        b[i] += b[i + 1]\n    ans = 0\n    for i in range(0, n + 1):\n        temp = a[i] + b[i]\n        if temp > ans:\n            ans = temp\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    e = 0\n    g = 0\n    d = sum(b)\n    f = []\n    f.append(d)\n    for i in range(n):\n        e += a[i]\n        g += b[i]\n        f.append(d - g + e)\n    print(max(f))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    e = 0\n    g = 0\n    d = sum(b)\n    f = []\n    f.append(d)\n    for i in range(n):\n        e += a[i]\n        g += b[i]\n        f.append(d - g + e)\n    print(max(f))", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    (s1, s2, i, m) = (sum(l1), sum(l2), 0, 0)\n    (m, a) = (s2, s2)\n    for i in range(n):\n        a += l1[i]\n        a -= l2[i]\n        if a > m:\n            m = a\n    print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    o_s = list(map(int, input().split()))\n    n_s = list(map(int, input().split()))\n    sum_n_s = sum(n_s)\n    profit = sum_n_s\n    for k in range(n):\n        sum_n_s += o_s[k] - n_s[k]\n        if sum_n_s > profit:\n            profit = sum_n_s\n    print(profit)", "test_cases = int(input())\nfor i in range(test_cases):\n    num_con_day = int(input())\n    old_shop = list(map(int, input().split()))\n    new_shop = list(map(int, input().split()))\n    sum_new_shop = sum(new_shop)\n    profit = sum_new_shop\n    for k in range(num_con_day):\n        sum_new_shop += old_shop[k] - new_shop[k]\n        if sum_new_shop > profit:\n            profit = sum_new_shop\n    print(profit)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    prefixa = [0] * n\n    prefixb = [0] * n\n    prefixa[0] = a[0]\n    for i in range(1, n):\n        prefixa[i] = prefixa[i - 1] + a[i]\n    prefixb[n - 1] = b[n - 1]\n    for i in range(n - 2, -1, -1):\n        prefixb[i] = prefixb[i + 1] + b[i]\n    maxi = 0\n    for i in range(n + 1):\n        if i == 0:\n            temp = prefixb[0]\n        elif i == n:\n            temp = prefixa[n - 1]\n        else:\n            temp = prefixa[i - 1] + prefixb[i]\n        if temp > maxi:\n            maxi = temp\n    print(maxi)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    bsum = 0\n    for i in b:\n        bsum += i\n    c = bsum\n    for i in range(n):\n        c += a[i] - b[i]\n        if c > bsum:\n            bsum = c\n    print(bsum)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = sum(b)\n    c = d\n    for i in range(n):\n        c += a[i] - b[i]\n        if c > d:\n            d = c\n    print(d)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    f = 0\n    d = sum(b)\n    c = d\n    for i in range(n):\n        f += a[i] - b[i]\n        if d + f > c:\n            c = d + f\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    e = 0\n    g = 0\n    d = sum(b)\n    c = d\n    for i in range(n):\n        e += a[i]\n        g += b[i]\n        if d + e - g > c:\n            c = d + e - g\n    print(c)", "for _ in range(int(input())):\n    N = int(input())\n    lstA = list(map(int, input().split()))\n    lstB = list(map(int, input().split()))\n    profit = sum(lstB)\n    ans = profit\n    for i in range(N):\n        ans += lstA[i] - lstB[i]\n        if ans > profit:\n            profit = ans\n    print(profit)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    e = 0\n    g = 0\n    d = sum(b)\n    f = []\n    f.append(d)\n    for i in range(n):\n        e += a[i]\n        g += b[i]\n        f.append(d - g + e)\n    print(max(f))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = sum(a)\n    d = sum(b)\n    e = 0\n    g = 0\n    f = []\n    f.append(d)\n    for i in range(n):\n        e += a[i]\n        g += b[i]\n        f.append(d - g + e)\n    print(max(f))", "T = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    A = [int(i) for i in input().split()]\n    B = [int(i) for i in input().split()]\n    prefixa = []\n    suffixb = []\n    suma = 0\n    for i in range(N):\n        suma += A[i]\n        prefixa.append(suma)\n    sumb = 0\n    for i in range(N - 1, -1, -1):\n        sumb += B[i]\n        suffixb.append(sumb)\n    suffixb.reverse()\n    maxi = -float('inf')\n    for i in range(N - 1):\n        if prefixa[i] + suffixb[i + 1] > maxi:\n            maxi = prefixa[i] + suffixb[i + 1]\n    ans.append(max(maxi, prefixa[-1], suffixb[0]))\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    x = 0\n    y = sum(b)\n    mg = y\n    for i in range(n):\n        x += a[i]\n        y -= b[i]\n        if x + y > mg:\n            mg = x + y\n    print(mg)", "try:\n    for i in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        max_profit = sum(b)\n        profit = max_profit\n        for i in range(n):\n            profit += a[i] - b[i]\n            if profit > max_profit:\n                max_profit = profit\n        print(max_profit)\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    a = 0\n    sum_l2 = sum(l2)\n    ans = sum_l2\n    for i in range(n):\n        a += l1[i]\n        b = a + sum_l2 - l2[i]\n        sum_l2 = sum_l2 - l2[i]\n        ans = max(b, ans)\n    print(ans)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    day_f = sum(a)\n    day_l = sum(b)\n    pref = [0] * len(a)\n    pref[0] = a[0]\n    suf = [0] * len(b)\n    suf[-1] = b[-1]\n    for i in range(1, len(pref)):\n        pref[i] = a[i] + pref[i - 1]\n    for i in range(len(suf) - 2, -1, -1):\n        suf[i] = b[i] + suf[i + 1]\n    pref.pop(-1)\n    suf.pop(0)\n    mx = -1000000000.0\n    for (x, y) in zip(pref, suf):\n        mx = max(mx, x + y)\n    print(max(day_f, day_l, mx))"]