["from sys import stdin\ninput = stdin.readline\n(n, k) = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nif k < n // 2:\n    print(*sorted(a))\n    exit()\nl = n - k - 1\nr = n - (n - k - 1)\nrem = []\nfor i in range(n - k - 1):\n    rem.append(a[i])\nfor i in range(r, n):\n    rem.append(a[i])\nrem.sort()\nans = []\nj = 0\nfor i in range(n):\n    if i < l or i >= r:\n        ans.append(rem[j])\n        j += 1\n    else:\n        ans.append(a[i])\nprint(*ans)", "from sys import stdin\ninput = stdin.readline\n(n, k) = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nif k < n // 2:\n    print(*sorted(a))\n    exit()\nl = n - k - 1\nr = n - (n - k - 1)\nrem = []\nfor i in range(n - k - 1):\n    rem.append(a[i])\nfor i in range(r, n):\n    rem.append(a[i])\nrem.sort()\nans = []\nj = 0\nfor i in range(n):\n    if i < l or i >= r:\n        ans.append(rem[j])\n        j += 1\n    else:\n        ans.append(a[i])\nprint(*ans)", "from sys import stdin\ninput = stdin.readline\n(n, k) = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nif k < n // 2:\n    print(*sorted(a))\n    exit()\nl = n - k - 1\nr = n - (n - k - 1)\nrem = []\nfor i in range(n - k - 1):\n    rem.append(a[i])\nfor i in range(r, n):\n    rem.append(a[i])\nrem.sort()\nans = []\nj = 0\nfor i in range(n):\n    if i < l or i >= r:\n        ans.append(rem[j])\n        j += 1\n    else:\n        ans.append(a[i])\nprint(*ans)", "from sys import stdin\ninput = stdin.readline\n(n, k) = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nif k < n // 2:\n    print(*sorted(a))\n    exit()\nl = n - k - 1\nr = n - (n - k - 1)\nrem = []\nfor i in range(n - k - 1):\n    rem.append(a[i])\nfor i in range(r, n):\n    rem.append(a[i])\nrem.sort()\nans = []\nj = 0\nfor i in range(n):\n    if i < l or i >= r:\n        ans.append(rem[j])\n        j += 1\n    else:\n        ans.append(a[i])\nprint(*ans)", "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nl = -1\nr = -1\nif k >= n - 1:\n    for i in range(n):\n        print(a[i], end=' ')\n    print()\nelif k >= n // 2:\n    r = k\n    l = n - k - 1\n    al = []\n    al = a[:l] + a[r + 1:]\n    am = a[l:r + 1]\n    al.sort()\n    for i in range(l):\n        print(al[i], end=' ')\n    for i in range(r - l + 1):\n        print(am[i], end=' ')\n    for i in range(l, len(al)):\n        print(al[i], end=' ')\n    print()\nelse:\n    a.sort()\n    for i in range(n):\n        print(a[i], end=' ')\n    print()", "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nl1 = []\ncan_swap = [0] * n\nfor i in range(n):\n    if i + k < n - 1 or i - k > 0:\n        can_swap[i] = 1\n        l1.append(l[i])\nl1.sort()\nx = 0\nfor i in range(n):\n    if can_swap[i] == 1:\n        l[i] = l1[x]\n        x += 1\nprint(*l)", "import math\n(a, b) = map(int, input().split())\nc = list(map(int, input().split()))\nd = []\nfor i in range(a):\n    if i + b + 1 < a:\n        d.append(c[i])\n        d.append(c[i + b + 1])\n        c[i] = -1\n        c[i + b + 1] = -1\nd.sort()\nx = 0\nfor i in range(a):\n    if c[i] == -1:\n        c[i] = d[x]\n        x += 1\nprint(*c)", "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nif k < n // 2:\n    a = sorted(a)\n    for x in a:\n        print(x, end=' ')\nelif k < n:\n    temp = a[:n - k - 1] + a[k + 1:]\n    temp = sorted(temp)\n    for i in range(n - k - 1):\n        print(temp[i], end=' ')\n    i += 1\n    for j in range(n - k - 1, k + 1):\n        print(a[j], end=' ')\n    for j in range(k + 1, n):\n        print(temp[i], end=' ')\n        i += 1\nelse:\n    for x in a:\n        print(x, end=' ')", "(N, K) = map(int, input().split())\nL = list(map(int, input().split()))\nB = [i for i in L]\nfor i in range(N):\n    if i + K + 1 < N:\n        B[i] = -1\n        B[i + K + 1] = -1\n    else:\n        break\nvals = []\nfor i in range(N):\n    if B[i] == -1:\n        vals.append(L[i])\nvals.sort()\nj = 0\nfor i in range(N):\n    if B[i] == -1:\n        B[i] = vals[j]\n        j += 1\nprint(*B)", "def ii():\n    return int(input())\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n(N, K) = mi()\nK += 1\nA = li()\nB = []\nfor i in range(N):\n    if i - K >= 0 or i + K < N:\n        B.append(A[i])\nB.sort(reverse=True)\nfor i in range(N):\n    if i - K >= 0 or i + K < N:\n        A[i] = B.pop()\nprint(*A)", "(N, K) = map(int, input().split())\nl = list(map(int, input().split()))\nl1 = []\ncan_swap = [0] * N\nfor i in range(N):\n    if i + K < N - 1 or i - K > 0:\n        can_swap[i] = 1\n        l1.append(l[i])\nl1.sort()\nx = 0\nfor i in range(N):\n    if can_swap[i]:\n        l[i] = l1[x]\n        x += 1\nprint(*l)"]