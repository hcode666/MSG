["for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    k = int(input())\n    maxy = max(a, b, c)\n    print(k + min(k - 1, a) + min(k - 1, b) + min(k - 1, c) - min(k - 1, maxy))", "T = int(input())\nfor _ in range(T):\n    (R, G, B) = map(int, input().split())\n    K = int(input())\n    result = min(R, K - 1) + min(G, K - 1) + min(B, K - 1) + 1\n    print(result)", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    a.sort()\n    k = int(input())\n    if a[0] >= k:\n        print((k - 1) * 3 + 1)\n    elif a[0] < k <= a[1]:\n        print(a[0] + (k - 1) * 2 + 1)\n    else:\n        print(a[0] + a[1] + k)", "n = int(input())\nfor i in range(n):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    count = min(r, k - 1)\n    count += min(g, k - 1)\n    count += min(b, k - 1)\n    print(count + 1)", "T = int(input())\nwhile T > 0:\n    T -= 1\n    (R, G, B) = [int(i) for i in input().split()]\n    k = int(input())\n    count = min(R, k - 1)\n    count += min(G, k - 1)\n    count += min(B, k - 1)\n    print(count + 1)", "T = int(input())\nfor i in range(T):\n    rgb = list(map(int, input().split()))\n    k = int(input())\n    s = 0\n    for j in sorted(rgb)[:-1]:\n        if j >= k:\n            s += k - 1\n        else:\n            s += j\n    s += k\n    print(s)", "t = int(input())\nfor bunny in range(t):\n    colors = list(map(int, input().split()))\n    k = int(input())\n    count = 0\n    for i in colors:\n        count += i if i < k else k - 1\n    count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    colors = [int(x) for x in input().split()]\n    k = int(input())\n    finalcount = 0\n    for i in colors:\n        if i < k:\n            finalcount += i\n        elif i >= k:\n            finalcount += k - 1\n    finalcount += 1\n    print(finalcount)", "t = int(input())\nfor i in range(t):\n    colors = [int(x) for x in input().split()]\n    k = int(input())\n    finalcount = 0\n    for i in colors:\n        if i < k:\n            finalcount += i\n        elif i >= k:\n            finalcount += k - 1\n    finalcount += 1\n    print(finalcount)", "t = int(input())\nfor i in range(t):\n    colors = [int(x) for x in input().split()]\n    k = int(input())\n    sorted_color = sorted(colors)\n    finalcount = 0\n    for i in sorted_color:\n        if i < k:\n            finalcount += i\n        elif i >= k:\n            finalcount += k - 1\n    finalcount += 1\n    print(finalcount)", "ntc = int(input())\nfor i in range(ntc):\n    (r, g, b) = (int(x) for x in input().split())\n    k = int(input())\n    t = [r, g, b]\n    if r < k or b < k or g < k:\n        var_2 = [var_1 for var_1 in t if var_1 < k]\n        if len(var_2) > 1:\n            print(sum(var_2) + k)\n        else:\n            print(sum(var_2) + k - 1 + k)\n    else:\n        print(k - 1 + k - 1 + k)", "trials = int(input())\nfor i in range(trials):\n    balloons = [int(x) for x in input().split()]\n    minimum = int(input())\n    pulls = 0\n    for i in balloons:\n        pulls += i if i < minimum else minimum - 1\n    pulls += 1\n    print(pulls)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    k = int(input())\n    c = 0\n    for i in l:\n        c += min(i, k - 1)\n    print(c + 1)", "for t in range(int(input())):\n    rgb = [int(i) for i in input().split()]\n    k = int(input()) - 1\n    tot = 1\n    for i in range(3):\n        tot += min(k, rgb[i])\n    print(tot)", "for i in range(int(input())):\n    balloons = [int(s) for s in str(input()).split()]\n    min_number = int(input())\n    res = 0\n    for b in balloons:\n        if b < min_number:\n            res += b\n        else:\n            res += min_number - 1\n    print(res + 1)", "t = int(input())\nwhile t > 0:\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    k1 = k - 1\n    tb = 0\n    if k <= min(r, g, b):\n        print(k1 * 3 + 1)\n    else:\n        co = list((r, g, b))\n        co.sort()\n        i = 0\n        mb = 3\n        while i <= 3:\n            if k == 1:\n                print(tb + 1)\n                break\n            else:\n                if k <= co[i]:\n                    print((k - 1) * mb + tb + 1)\n                    break\n                tb = tb + co[i] * mb\n                k = k - co[i]\n                for j in range(i + 1, 3):\n                    co[j] = co[j] - co[i]\n                mb = mb - 1\n                i += 1\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    k1 = k - 1\n    tb = 0\n    if k <= min(r, g, b):\n        print(k1 * 3 + 1)\n    else:\n        co = list((r, g, b))\n        co.sort()\n        i = 0\n        mb = 3\n        while i <= 3:\n            if k == 1:\n                print(tb + 1)\n                break\n            else:\n                if k <= co[i]:\n                    print((k - 1) * mb + tb + 1)\n                    break\n                tb = tb + co[i] * mb\n                k = k - co[i]\n                for j in range(i + 1, 3):\n                    co[j] = co[j] - co[i]\n                mb = mb - 1\n                i += 1\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    ls = list(map(int, input().split()))\n    k = int(input())\n    ls.sort()\n    ans = 3 * (k - 1) + 1\n    if ls[0] < k - 1:\n        ans = ans - (k - 1 - ls[0])\n    if ls[1] < k - 1:\n        ans = ans - (k - 1 - ls[1])\n    if ls[2] < k - 1:\n        ans = ans - (k - 1 - ls[2])\n    print(ans)", "t = int(input())\nfor kyg in range(t):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    bal = [r, g, b]\n    bal.sort()\n    if k > bal[0]:\n        if k > bal[1]:\n            print(bal[0] + bal[1] + k)\n        else:\n            print(bal[0] + 2 * k - 1)\n    else:\n        print(3 * k - 2)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    k = int(input())\n    r = k - 1 if a >= k else a\n    g = k - 1 if b >= k else b\n    b_ = k - 1 if c >= k else c\n    print(r + g + b_ + 1)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    rgb = list(map(int, input().split()))\n    k = int(input())\n    r = 0\n    for i in rgb:\n        r += min(i, k - 1)\n    print(r + 1)", "testcases = int(input())\nfor _ in range(testcases):\n    colors = list(map(int, input().split()))\n    k = int(input())\n    colors.sort()\n    s = 0\n    if k <= colors[0]:\n        s += (k - 1) * 3 + 1\n    elif k <= colors[1]:\n        s += colors[0] * 3\n        k -= colors[0]\n        s += (k - 1) * 2 + 1\n    else:\n        s += colors[0] * 3\n        s += (colors[1] - colors[0]) * 2\n        k -= colors[1]\n        s += k\n    print(s)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    k = int(input())\n    if a >= k:\n        r = k - 1\n    else:\n        r = a\n    if b >= k:\n        g = k - 1\n    else:\n        g = b\n    if c >= k:\n        bb = k - 1\n    else:\n        bb = c\n    print(r + g + bb + 1)", "testcase = int(input())\nwhile testcase:\n    (r, g, b) = map(lambda x: int(x), input().split())\n    k = int(input())\n    print(min(k - 1, r) + min(k - 1, g) + min(k - 1, b) + 1)\n    testcase -= 1", "for i in range(int(input())):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    c = [r, g, b, k]\n    c.sort()\n    if c[0] == k:\n        print(3 * (k - 1) + 1)\n    elif c[1] == k:\n        print(c[0] + 2 * (k - 1) + 1)\n    elif c[2] == k:\n        print(c[0] + c[1] + k)\n    else:\n        pass", "def main():\n    for _ in range(int(input())):\n        rgb = [int(x) for x in input().split()]\n        k = int(input())\n        ans = 0\n        for i in range(3):\n            ans += min(rgb[i], k - 1)\n        print(ans + 1)\nmain()", "a = int(input())\nfor i in range(a):\n    b = list(map(int, input().split()))\n    k = int(input())\n    l = len(b)\n    e = 0\n    for i in b:\n        if i >= k - 1:\n            e = e + k - 1\n        else:\n            e = e + i\n    print(e + 1)", "def main():\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    min1 = min(r, g, b)\n    ans = 0\n    if min1 >= k:\n        ans = 3 * (k - 1) + 1\n    else:\n        ans = min1 * 3\n        r = r - min1\n        g = g - min1\n        b = b - min1\n        k = k - min1\n        min1 = int(1000000000.0)\n        count = 0\n        if r != 0:\n            min1 = min(r, min1)\n            count += 1\n        if g != 0:\n            min1 = min(g, min1)\n            count += 1\n        if b != 0:\n            min1 = min(b, min1)\n            count += 1\n        if min1 >= k:\n            ans += 2 * (k - 1) + 1 if count == 2 else k\n        else:\n            ans += min1 * 2\n            r = r - min1\n            g = g - min1\n            b = b - min1\n            k = k - min1\n            ans += k\n    print(ans)\nfor _ in range(int(input())):\n    main()", "def main():\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    min1 = min(r, g, b)\n    ans = 0\n    if min1 >= k:\n        ans = 3 * (k - 1) + 1\n    else:\n        ans = min1 * 3\n        r = r - min1\n        g = g - min1\n        b = b - min1\n        k = k - min1\n        min1 = int(1000000000.0)\n        count = 0\n        if r != 0:\n            min1 = min(r, min1)\n            count += 1\n        if g != 0:\n            min1 = min(g, min1)\n            count += 1\n        if b != 0:\n            min1 = min(b, min1)\n            count += 1\n        if min1 >= k:\n            ans += 2 * (k - 1) + 1 if count == 2 else k\n        else:\n            ans += min1 * 2\n            r = r - min1\n            g = g - min1\n            b = b - min1\n            k = k - min1\n            ans += k\n    print(ans)\nfor _ in range(int(input())):\n    main()", "for _ in range(int(input())):\n    stuff = list(map(int, input().split()))\n    required = int(input())\n    pulled = 0\n    for times in range(3):\n        pulled += min(stuff[times], required - 1)\n    print(pulled + 1)", "n = int(input())\nfor _ in range(n):\n    l = list(map(int, input().split()))\n    k = int(input())\n    k = k - 1\n    s = 0\n    l.sort()\n    o = len(l)\n    for i in range(o):\n        if l[i] > k:\n            s = s + k * (o - i)\n            break\n        else:\n            s = s + l[i]\n    print(s + 1)", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    ls = [a, b, c]\n    ls.sort()\n    k = int(input())\n    if k == 1:\n        print(1)\n        continue\n    if k <= min(ls):\n        print(3 * k - 2)\n    elif k <= ls[1]:\n        print(ls[0] + 2 * k - 1)\n    else:\n        print(ls[0] + ls[1] + k)", "t = int(input())\nfor v in range(0, t, 1):\n    rgb = input()\n    rgb = list(map(int, rgb.split(' ')))\n    k = int(input())\n    rgb.sort(reverse=True)\n    if rgb[1] < k and rgb[2] < k:\n        print(rgb[1] + rgb[2] + k)\n    elif rgb[2] < k:\n        print(rgb[2] + 2 * k - 1)\n    else:\n        print(3 * k - 2)", "t = int(input())\nfor i in range(t):\n    (R, G, B) = map(int, input().split())\n    K = int(input())\n    if R >= K:\n        r = K - 1\n    else:\n        r = R\n    if G >= K:\n        g = K - 1\n    else:\n        g = G\n    if B >= K:\n        b = K - 1\n    else:\n        b = B\n    print(r + g + b + 1)", "t = int(input())\nfor i in range(t):\n    (R, G, B) = map(int, input().split())\n    K = int(input())\n    if R >= K:\n        r = K - 1\n    else:\n        r = R\n    if G >= K:\n        g = K - 1\n    else:\n        g = G\n    if B >= K:\n        b = K - 1\n    else:\n        b = B\n    print(r + g + b + 1)", "t = int(input())\nfor i in range(t):\n    l = [int(x) for x in input().split()]\n    k = int(input())\n    ans = 0\n    for i in range(3):\n        ans = ans + min(l[i], k - 1)\n    print(ans + 1)", "t = int(input())\nfor i in range(t):\n    (r, g, b) = map(int, input().split())\n    num = 0\n    k = int(input())\n    if r >= k:\n        num += k - 1\n    else:\n        num += r\n    if g >= k:\n        num += k - 1\n    else:\n        num += g\n    if b >= k:\n        num += k - 1\n    else:\n        num += b\n    print(num + 1)", "t = int(input())\nfor i in range(t):\n    (R, G, B) = map(int, input().split())\n    K = int(input())\n    if R >= K:\n        r = K - 1\n    else:\n        r = R\n    if G >= K:\n        g = K - 1\n    else:\n        g = G\n    if B >= K:\n        b = K - 1\n    else:\n        b = B\n    print(r + g + b + 1)", "for _ in range(int(input())):\n    arr = [int(i) for i in input().split()]\n    k = int(input())\n    f = 0\n    for i in range(3):\n        f = f + min(arr[i], k - 1)\n    print(f + 1)", "t = int(input())\nfor i in range(t):\n    (R, G, B) = map(int, input().split())\n    K = int(input())\n    if R >= K:\n        r = K - 1\n    else:\n        r = R\n    if G >= K:\n        g = K - 1\n    else:\n        g = G\n    if B >= K:\n        b = K - 1\n    else:\n        b = B\n    print(r + g + b + 1)", "t = int(input())\nfor i in range(t):\n    (r, g, b) = [int(x) for x in input().split()]\n    k = int(input())\n    list1 = [r, g, b]\n    if r >= k - 1 and g >= k - 1 and (b >= k - 1):\n        print(k - 1 + k - 1 + k - 1 + 1)\n    less = 0\n    if r < k - 1:\n        less = less + 1\n    if g < k - 1:\n        less = less + 1\n    if b < k - 1:\n        less = less + 1\n    if less == 1:\n        list1.sort()\n        small = list1[0]\n        print(small + k - 1 + k - 1 + 1)\n    if less == 2:\n        list1.sort()\n        print(list1[0] + list1[1] + k)", "t = int(input())\nfor i in range(t):\n    (R, G, B) = map(int, input().split())\n    K = int(input())\n    if R >= K:\n        r = K - 1\n    else:\n        r = R\n    if G >= K:\n        g = K - 1\n    else:\n        g = G\n    if B >= K:\n        b = K - 1\n    else:\n        b = B\n    print(r + g + b + 1)", "t = int(input())\nfor i in range(t):\n    (R, G, B) = map(int, input().split())\n    K = int(input())\n    (11 > R, G, B > 0)\n    if R >= K:\n        r = K - 1\n    else:\n        r = R\n    if G >= K:\n        g = K - 1\n    else:\n        g = G\n    if B >= K:\n        b = K - 1\n    else:\n        b = B\n    print(r + g + b + 1)", "t = int(input())\nfor i in range(t):\n    (R, G, B) = map(int, input().split())\n    K = int(input())\n    if R >= K:\n        r = K - 1\n    else:\n        r = R\n    if G >= K:\n        g = K - 1\n    else:\n        g = G\n    if B >= K:\n        b = K - 1\n    else:\n        b = B\n    print(r + g + b + 1)", "t = int(input())\nfor i in range(t):\n    ins = list(map(int, input().split(' ')))\n    k = int(input())\n    real = []\n    extra = 0\n    for i in range(len(ins)):\n        if ins[i] >= k:\n            real.append(ins[i])\n        else:\n            extra += ins[i]\n    print((k - 1) * len(real) + 1 + extra)", "T = int(input())\nfor i in range(T):\n    (R, G, B) = input().split(' ')\n    R = int(R)\n    G = int(G)\n    B = int(B)\n    K = int(input())\n    [mini, mede, maxi] = sorted([R, G, B])\n    if K <= mini:\n        print(3 * (K - 1) + 1)\n    elif K <= mede:\n        print(3 * mini + 2 * (K - mini - 1) + 1)\n    elif K <= maxi:\n        print(3 * mini + 2 * (mede - mini) + (K - mede))\n    else:\n        print('Not Possible')", "for _ in range(int(input())):\n    (R, G, B) = map(int, input().split())\n    lis = [R, G, B]\n    lis.sort()\n    k = int(input())\n    s = min(lis[0], k - 1) + min(lis[1], k - 1) + k\n    print(s)", "for x in range(int(input())):\n    stuff = list(map(int, input().split()))\n    required = int(input())\n    pulled = 0\n    for times in range(3):\n        pulled += min(stuff[times], required - 1)\n    print(pulled + 1)", "t = int(input())\nfor i in range(t):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    print(min(k - 1, r) + min(k - 1, g) + min(k - 1, b) + 1)", "n = int(input())\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    l = [a, b, c]\n    l.sort()\n    k = int(input())\n    s = min(l[0], k - 1) + min(l[1], k - 1) + k\n    print(s)", "n = int(input())\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    l = [a, b, c]\n    l.sort()\n    k = int(input())\n    s = min(l[0], k - 1) + min(l[1], k - 1) + k\n    print(s)", "n = int(input())\noutput = ''\nfor i in range(0, n):\n    num_list = sorted(map(int, input().split(' ')))\n    K = int(input())\n    if K <= num_list[0]:\n        output += f'{3 * K - 2}\\n'\n    elif num_list[0] < K <= num_list[1]:\n        output += f'{num_list[0] + 2 * K - 1}\\n'\n    else:\n        output += f'{num_list[0] + num_list[1] + K}\\n'\nprint(output)", "t = int(input())\nfor x in range(t):\n    l = list(map(int, input().split()))\n    l.sort()\n    k = int(input())\n    if l[0] < k:\n        if l[1] < k:\n            print(k * 3 - (k - l[0]) - (k - l[1]))\n        else:\n            print(k * 3 - (k - l[0]) - 1)\n    else:\n        print(k * 3 - 2)", "def n_balloons(r, g, b, k):\n    return sum((min(x, k - 1) for x in [r, g, b])) + 1\nn_cases = int(input())\nfor _ in range(n_cases):\n    (r, g, b) = (int(x) for x in input().split())\n    k = int(input())\n    print(n_balloons(r, g, b, k))", "T = int(input())\nfor _ in range(T):\n    (R, G, B) = map(int, input().split())\n    K = int(input())\n    mini_number = min(R, K - 1) + min(G, K - 1) + min(B, K - 1) + 1\n    print(mini_number)", "t = int(input())\nfor i in range(t):\n    rgb = list(map(int, input().split()))\n    k = int(input())\n    num = min(rgb[0], k - 1) + min(rgb[1], k - 1) + min(rgb[2], k - 1) + 1\n    print(num)", "t = int(input())\nfor i in range(t):\n    l = input().split(' ')\n    k = int(input())\n    l[0] = int(l[0])\n    l[1] = int(l[1])\n    l[2] = int(l[2])\n    l.sort()\n    if k == 1:\n        print(1)\n    elif l[1] < k:\n        print(l[0] + l[1] + k)\n    elif l[0] < k:\n        print(2 * k - 1 + l[0])\n    else:\n        print(3 * k - 2)", "t = int(input())\nfor t in range(t):\n    arr = [int(i) for i in input().split()]\n    k = int(input())\n    minm = 0\n    for i in range(3):\n        minm += min(arr[i], k - 1)\n    print(minm + 1)", "t = int(input())\nfor _ in range(t):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    ans = 0\n    flag = False\n    if r - k < 0:\n        ans += r\n    else:\n        ans += k\n        flag = True\n    if g - k < 0:\n        ans += g\n    else:\n        ans += k\n        if flag:\n            ans -= 1\n        flag = True\n    if b - k < 0:\n        ans += b\n    else:\n        ans += k\n        if flag:\n            ans -= 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    ans = 0\n    flag = False\n    if r - k < 0:\n        ans += r\n    else:\n        ans += k\n        flag = True\n    if g - k < 0:\n        ans += g\n    else:\n        ans += k\n        if flag:\n            ans -= 1\n        flag = True\n    if b - k < 0:\n        ans += b\n    else:\n        ans += k\n        if flag:\n            ans -= 1\n    print(ans)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    n = int(input())\n    re = 0\n    for i in range(3):\n        re += min(l[i], n - 1)\n    print(re + 1)", "for _ in range(int(input())):\n    color = list(map(int, input().split()))\n    k = int(input())\n    c = 0\n    for i in range(3):\n        c += min(color[i], k - 1)\n    print(c + 1)", "for _ in range(int(input())):\n    stuff = list(map(int, input().split()))\n    required = int(input())\n    pulled = 0\n    for times in range(3):\n        pulled += min(stuff[times], required - 1)\n    print(pulled + 1)", "for _ in range(int(input())):\n    l = sorted([int(x) for x in input().split()])\n    k = int(input())\n    total = min(l[0], k - 1) + min(l[1], k - 1) + min(l[2], k - 1) + 1\n    print(total)", "for _ in range(int(input())):\n    l = sorted([int(x) for x in input().split()])\n    k = int(input())\n    total = min(l[0], k - 1) + min(l[1], k - 1) + min(l[2], k - 1) + 1\n    print(total)", "for _ in range(int(input())):\n    l = sorted([int(x) for x in input().split()])\n    k = int(input())\n    total = min(l[0], k - 1) + min(l[1], k - 1) + min(l[2], k - 1) + 1\n    print(total)", "for _ in range(int(input())):\n    l = sorted([int(x) for x in input().split()])\n    k = int(input())\n    total = min(l[0], k - 1) + min(l[1], k - 1) + min(l[2], k - 1) + 1\n    print(total)", "def check_condition(count, k):\n    return count == k\nT = int(input())\nif T < 1 or T > 1000:\n    print('error')\nelse:\n    for i in range(0, T):\n        (r, g, b) = map(int, input().split())\n        K = int(input())\n        if r < 1 or r > 1000000000 or g < 1 or (g > 1000000000) or (b < 1) or (b > 1000000000):\n            print('error')\n        elif max([r, g, b]) < K or K < 1:\n            print('error')\n        else:\n            minimum = min(r, g, b)\n            if K <= minimum:\n                print(3 * (K - 1) + 1)\n            else:\n                draws = 3 * minimum\n                K = K - minimum\n                r = r - minimum\n                g = g - minimum\n                b = b - minimum\n                l = []\n                if r != 0:\n                    l.append(r)\n                if g != 0:\n                    l.append(g)\n                if b != 0:\n                    l.append(b)\n                minimum = min(l)\n                if K <= minimum:\n                    draws = draws + len(l) * (K - 1) + 1\n                else:\n                    draws = draws + len(l) * minimum\n                    K = K - minimum\n                    draws = draws + K\n                print(draws)", "def check_condition(count, k):\n    return count == k\nT = int(input())\nif T < 1 or T > 1000:\n    print('error')\nelse:\n    for i in range(0, T):\n        (r, g, b) = map(int, input().split())\n        K = int(input())\n        if r < 1 or r > 1000000000 or g < 1 or (g > 1000000000) or (b < 1) or (b > 1000000000):\n            print('error')\n        elif max([r, g, b]) < K or K < 1:\n            print('error')\n        else:\n            minimum = min(r, g, b)\n            draws = 0\n            if K <= minimum:\n                print(3 * (K - 1) + 1)\n            else:\n                draws = draws + 3 * minimum\n                K = K - minimum\n                r = r - minimum\n                g = g - minimum\n                b = b - minimum\n                l = []\n                if r != 0:\n                    l.append(r)\n                if g != 0:\n                    l.append(g)\n                if b != 0:\n                    l.append(b)\n                minimum = min(l)\n                if K <= minimum:\n                    draws = draws + len(l) * (K - 1) + 1\n                else:\n                    draws = draws + len(l) * minimum\n                    K = K - minimum\n                    draws = draws + K\n                print(draws)", "for _ in range(int(input())):\n    (R, G, B) = map(int, input().split())\n    K = int(input())\n    count = 0\n    if R >= K:\n        count += K - 1\n    else:\n        count += R\n    if G >= K:\n        count += K - 1\n    else:\n        count += G\n    if B >= K:\n        count += K - 1\n    else:\n        count += B\n    print(count + 1)", "for t in range(int(input())):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    count = 0\n    if r >= k - 1:\n        count += k - 1\n    else:\n        count += r\n    if g >= k - 1:\n        count += k - 1\n    else:\n        count += g\n    if b >= k - 1:\n        count += k - 1\n    else:\n        count += b\n    print(count + 1)", "for t in range(int(input())):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    count = 0\n    if r >= k:\n        count += k - 1\n    else:\n        count += r\n    if g >= k:\n        count += k - 1\n    else:\n        count += g\n    if b >= k:\n        count += k - 1\n    else:\n        count += b\n    print(count + 1)", "for i in range(int(input())):\n    bag = list(map(int, input().split()))\n    bag.sort()\n    k = int(input())\n    if bag[0] >= k:\n        balls = 3 * k - 2\n    elif bag[1] >= k:\n        balls = bag[0] + 2 * k - 1\n    elif bag[2] >= k:\n        balls = bag[0] + bag[1] + k\n    else:\n        pass\n    print(balls)", "T = int(input())\nfor i in range(0, T, 1):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    print(1 + min(k - 1, r) + min(k - 1, g) + min(k - 1, b))", "t = int(input())\nwhile t != 0:\n    (a, b, c) = [int(i) for i in input().split()]\n    n = int(input())\n    print(1 + min(n - 1, a) + min(n - 1, b) + min(n - 1, c))\n    t = t - 1", "n = int(input())\nfor i in range(0, n):\n    (a, b, c) = map(int, input().split())\n    k = int(input())\n    print(1 + min(k - 1, a) + min(k - 1, b) + min(k - 1, c))", "n = int(input())\nfor i in range(n):\n    l = sorted(list(map(int, input().split())))\n    (x, y, z) = l\n    k = int(input())\n    print(min(x, k - 1) + min(y, k - 1) + min(z, k - 1) + 1)", "num = int(input())\ncases = [[input().split() for j in range(2)] for i in range(num)]\nfor case in cases:\n    arr = map(int, case[0])\n    arr = sorted(arr)\n    color = int(case[1][0])\n    r = min(arr[0], color - 1)\n    g = min(arr[1], color - 1)\n    b = min(arr[2], color - 1)\n    print(r + g + b + 1)", "t = int(input())\nfor t in range(t):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    print(min(k - 1, r) + min(k - 1, g) + min(k - 1, b) + 1)", "n = int(input())\nfor i in range(0, n):\n    (a, b, c) = map(int, input().split())\n    k = int(input())\n    print(1 + min(k - 1, a) + min(k - 1, b) + min(k - 1, c))", "t = int(input())\nfor t in range(t):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    print(min(k - 1, r) + min(k - 1, g) + min(k - 1, b) + 1)", "for i in range(int(input())):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    print(min(k - 1, r) + min(k - 1, g) + min(k - 1, b) + 1)", "for i in range(int(input())):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    print(min(k - 1, r) + min(k - 1, g) + min(k - 1, b) + 1)", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    k = int(input())\n    l.sort()\n    ans = 0\n    cnt = 0\n    for i in l:\n        if k > i:\n            ans += i\n        else:\n            cnt += 1\n    print(ans + cnt * (k - 1) + 1)", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    k = int(input())\n    l.sort()\n    ans = 0\n    cnt = 0\n    for i in l:\n        if k > i:\n            ans += i\n        else:\n            cnt += 1\n    print(ans + cnt * (k - 1) + 1)", "a = int(input())\nfor i in range(a):\n    l = list(map(int, input().split()))\n    r = int(input())\n    l.sort()\n    cnt = 0\n    need = 0\n    for j in l:\n        if j < r:\n            need = need + j\n        else:\n            cnt = cnt + 1\n    print(need + cnt * (r - 1) + 1)", "for i in range(int(input())):\n    L = list(map(int, input().split()))\n    N = int(input())\n    SUM = 0\n    for i in L:\n        if i < N:\n            SUM += i\n        else:\n            SUM += N - 1\n    print(SUM + 1)", "for _ in range(int(input())):\n    l = list(map(int, input().strip().split()))\n    n = int(input())\n    ans = 0\n    for i in l:\n        if i < n:\n            ans += i\n        else:\n            ans += n - 1\n    print(ans + 1)", "tries = int(input(''))\nfor i in range(1, tries + 1):\n    (red, blue, green) = [int(x) for x in input('').split()]\n    n = int(input(''))\n    l1 = [red, blue, green]\n    max = red\n    for a in l1:\n        if max < a:\n            max = a\n    l1.remove(max)\n    if n == 1:\n        attempts = 1\n    elif l1[0] > l1[1]:\n        secondmax = l1[0]\n        if l1[0] >= n:\n            if l1[1] >= n:\n                attempts = 3 * n - 2\n            else:\n                attempts = 2 * n - 1 + l1[1]\n        else:\n            attempts = n + l1[0] + l1[1]\n    else:\n        secondmax = l1[1]\n        if l1[1] >= n:\n            if l1[0] >= n:\n                attempts = 3 * n - 2\n            else:\n                attempts = 2 * n - 1 + l1[0]\n        else:\n            attempts = n + l1[0] + l1[1]\n    print(attempts)", "for i in range(int(input())):\n    balls = list(map(int, input().split()))\n    n = int(input())\n    total = 1\n    for x in balls:\n        if x < n:\n            total += x\n        else:\n            total += n - 1\n    print(total)", "for _ in range(int(input())):\n    (R, G, B) = map(int, input().split())\n    K = int(input())\n    ans = 3 * K - 2\n    if R < K - 1:\n        ans -= K - R - 1\n    if G < K - 1:\n        ans -= K - G - 1\n    if B < K - 1:\n        ans -= K - B - 1\n    print(ans)", "for _ in range(int(input())):\n    (R, G, B) = map(int, input().split())\n    K = int(input())\n    ans = 3 * K - 2\n    if R < K - 1:\n        ans -= K - R - 1\n    if G < K - 1:\n        ans -= K - G - 1\n    if B < K - 1:\n        ans -= K - B - 1\n    print(ans)", "for i in range(int(input())):\n    co = list(map(int, input().split()))\n    k = int(input())\n    s = 0\n    if k == 1:\n        print(1)\n    else:\n        for i in co:\n            if i >= k:\n                s += k - 1\n            else:\n                s += i\n        print(s + 1)", "def min(a, b, c):\n    if a <= b and a <= c:\n        m = a\n    elif b <= a and b <= c:\n        m = b\n    elif c <= a and c <= b:\n        m = c\n    return m\n\ndef min2(a, b):\n    if a <= b:\n        k = a\n    else:\n        k = b\n    return k\nT = int(input())\nfor i in range(T):\n    x = input()\n    k = int(input())\n    x = x.split(' ')\n    (r, g, b) = (int(x[0]), int(x[1]), int(x[2]))\n    n = r + g + b\n    m = min(r, g, b)\n    if m == r:\n        w = min2(g, b)\n    elif m == g:\n        w = min2(r, b)\n    else:\n        w = min2(r, g)\n    if m >= k - 1:\n        a = 3 * k - 2\n    elif w >= k - 1:\n        a = 3 * m + 2 * (k - m) - 1\n    else:\n        a = 3 * m + 2 * (w - m) + (k - w)\n    print(a)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    n = int(input())\n    if n > 1:\n        l.sort()\n    if n == 1:\n        print(1)\n    elif l[0] >= n:\n        print((n - 1) * 3 + 1)\n    elif l[1] >= n:\n        print((n - 1 - l[0]) * 2 + l[0] * 3 + 1)\n    else:\n        print(l[0] + l[1] + n)", "for t in range(int(input())):\n    x = list(map(int, input().split()))\n    x.sort()\n    k = int(input())\n    s = sum(x)\n    if k == 1:\n        print(1)\n    elif k <= x[0]:\n        print(3 * k - 2)\n    elif k <= x[1]:\n        print(3 * x[0] + 2 * (k - x[0]) - 1)\n    else:\n        print(x[0] + x[1] + k)", "for t in range(int(input())):\n    x = list(map(int, input().split()))\n    x.sort()\n    k = int(input())\n    s = sum(x)\n    if k == 1:\n        print(1)\n    elif k <= x[0]:\n        print(3 * k - 2)\n    elif k <= x[1]:\n        print(3 * x[0] + 2 * (k - x[0]) - 1)\n    else:\n        print(x[0] + x[1] + k)", "for i in range(int(input())):\n    a = list(map(int, input().split()))\n    k = int(input())\n    a.sort()\n    if k == 1:\n        print(1)\n        continue\n    elif k <= a[0]:\n        print(3 * (k - 1) + 1)\n    elif k <= a[1]:\n        print(a[0] * 3 + (k - 1 - a[0]) * 2 + 1)\n    else:\n        print(a[0] + a[1] + k)", "t = int(input())\nfor _ in range(t):\n    (ri, gj, bo) = map(int, input().split())\n    kf = int(input())\n    print(min(ri, kf - 1) + min(gj, kf - 1) + min(bo, kf - 1) + 1)", "for _ in range(int(input())):\n    (r, g, b) = map(int, input().split())\n    k = int(input())\n    print(min(r, k - 1) + min(g, k - 1) + min(b, k - 1) + 1)"]