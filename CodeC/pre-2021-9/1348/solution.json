["from sys import stdin, stdout\nT = int(stdin.readline())\n\ndef presuf(pre, suf):\n    for s in bts:\n        for i in range(len(s) - 1):\n            (pre[s[:i + 1]], suf[s[len(s) - i - 1:]]) = (True, True)\n    return (pre, suf)\nfor _ in range(T):\n    a = stdin.readline().strip('\\n')\n    na = len(a)\n    b = stdin.readline().strip('\\n')\n    nb = len(b)\n    A = [0] * (na + 1)\n    B = [0] * (nb + 1)\n    (n, bts, AB) = (int(stdin.readline()), {}, [[0 for i in range(nb + 1)] for j in range(na + 1)])\n    for i in range(n):\n        (s, bt) = stdin.readline().split(' ')\n        bt = int(bt)\n        bts[s] = bt\n    (pre, suf) = presuf({}, {})\n    As = {}\n    done = {}\n    for k in range(min(26, na), 0, -1):\n        for i in range(na, k - 1, -1):\n            s = a[i - k:i]\n            if s in bts:\n                A[i] += bts[s]\n            if s not in pre:\n                continue\n            if i in done:\n                del pre[s]\n                continue\n            for j in range(k):\n                if s[k - j - 1:] not in As:\n                    As[s[k - j - 1:]] = []\n                As[s[k - j - 1:]].append(i)\n                done[i] = True\n            del pre[s]\n    (Bs, done, mx) = ({}, {}, 0)\n    for k in range(min(26, nb), 0, -1):\n        for i in range(nb - k + 1):\n            s = b[i:i + k]\n            if s in bts:\n                B[i + 1] += bts[s]\n            if s not in suf:\n                continue\n            if i in done:\n                del suf[s]\n                continue\n            for j in range(k):\n                if s[:j + 1] not in Bs:\n                    Bs[s[:j + 1]] = []\n                Bs[s[:j + 1]].append(i + 1)\n                done[i] = True\n            del suf[s]\n    for i in range(1, na + 1, 1):\n        A[i] = A[i] + A[i - 1]\n    for i in range(nb - 1, -1, -1):\n        B[i] = B[i] + B[i + 1]\n    for s in bts:\n        for i in range(1, len(s)):\n            st = s[:i]\n            en = s[i:]\n            bt = bts[s]\n            if st in As and en in Bs:\n                for x in As[st]:\n                    for y in Bs[en]:\n                        AB[x][y] += bt\n    for i in range(na + 1):\n        for j in range(nb + 1):\n            mx = max(A[i] + B[j] + AB[i][j], mx)\n    print(mx)", "from sys import stdin, stdout\nT = int(stdin.readline())\n\ndef presuf(pre, suf):\n    for s in bts:\n        for i in range(len(s) - 1):\n            (pre[s[:i + 1]], suf[s[len(s) - i - 1:]]) = (True, True)\n    return (pre, suf)\nfor _ in range(T):\n    a = stdin.readline().strip('\\n')\n    na = len(a)\n    b = stdin.readline().strip('\\n')\n    nb = len(b)\n    A = [0] * (na + 1)\n    B = [0] * (nb + 1)\n    (n, bts, AB) = (int(stdin.readline()), {}, [[0 for i in range(nb + 1)] for j in range(na + 1)])\n    for i in range(n):\n        (s, bt) = stdin.readline().split(' ')\n        bt = int(bt)\n        bts[s] = bt\n    (pre, suf) = presuf({}, {})\n    As = {}\n    done = {}\n    for k in range(min(26, na), 0, -1):\n        for i in range(na, k - 1, -1):\n            s = a[i - k:i]\n            if s in bts:\n                A[i] += bts[s]\n            if s not in pre:\n                continue\n            if i in done:\n                del pre[s]\n                continue\n            for j in range(k):\n                if s[k - j - 1:] not in As:\n                    As[s[k - j - 1:]] = []\n                As[s[k - j - 1:]].append(i)\n                done[i] = True\n            del pre[s]\n    (Bs, done, mx) = ({}, {}, 0)\n    for k in range(min(26, nb), 0, -1):\n        for i in range(nb - k + 1):\n            s = b[i:i + k]\n            if s in bts:\n                B[i + 1] += bts[s]\n            if s not in suf:\n                continue\n            if i in done:\n                del suf[s]\n                continue\n            for j in range(k):\n                if s[:j + 1] not in Bs:\n                    Bs[s[:j + 1]] = []\n                Bs[s[:j + 1]].append(i + 1)\n                done[i] = True\n            del suf[s]\n    for i in range(1, na + 1, 1):\n        A[i] = A[i] + A[i - 1]\n    for i in range(nb - 1, -1, -1):\n        B[i] = B[i] + B[i + 1]\n    for s in bts:\n        for i in range(1, len(s)):\n            st = s[:i]\n            en = s[i:]\n            bt = bts[s]\n            if st in As and en in Bs:\n                for x in As[st]:\n                    for y in Bs[en]:\n                        AB[x][y] += bt\n    for i in range(na + 1):\n        for j in range(nb + 1):\n            mx = max(A[i] + B[j] + AB[i][j], mx)\n    print(mx)", "from sys import stdin, stdout\nT = int(stdin.readline())\n\ndef presuf(pre, suf):\n    for s in bts:\n        for i in range(len(s) - 1):\n            (pre[s[:i + 1]], suf[s[len(s) - i - 1:]]) = (True, True)\n    return (pre, suf)\nfor _ in range(T):\n    a = stdin.readline().strip('\\n')\n    na = len(a)\n    b = stdin.readline().strip('\\n')\n    nb = len(b)\n    A = [0] * (na + 1)\n    B = [0] * (nb + 1)\n    (n, bts, AB) = (int(stdin.readline()), {}, [[0 for i in range(nb + 1)] for j in range(na + 1)])\n    for i in range(n):\n        (s, bt) = stdin.readline().split(' ')\n        bt = int(bt)\n        bts[s] = bt\n    (pre, suf) = presuf({}, {})\n    As = {}\n    done = {}\n    for k in range(min(26, na), 0, -1):\n        for i in range(na, k - 1, -1):\n            s = a[i - k:i]\n            if s in bts:\n                A[i] += bts[s]\n            if s not in pre:\n                continue\n            if i in done:\n                del pre[s]\n                continue\n            for j in range(k):\n                if s[k - j - 1:] not in As:\n                    As[s[k - j - 1:]] = []\n                As[s[k - j - 1:]].append(i)\n                done[i] = True\n            del pre[s]\n    (Bs, done, mx) = ({}, {}, 0)\n    for k in range(min(26, nb), 0, -1):\n        for i in range(nb - k + 1):\n            s = b[i:i + k]\n            if s in bts:\n                B[i + 1] += bts[s]\n            if s not in suf:\n                continue\n            if i in done:\n                del suf[s]\n                continue\n            for j in range(k):\n                if s[:j + 1] not in Bs:\n                    Bs[s[:j + 1]] = []\n                Bs[s[:j + 1]].append(i + 1)\n                done[i] = True\n            del suf[s]\n    for i in range(1, na + 1, 1):\n        A[i] = A[i] + A[i - 1]\n    for i in range(nb - 1, -1, -1):\n        B[i] = B[i] + B[i + 1]\n    for s in bts:\n        for i in range(1, len(s)):\n            st = s[:i]\n            en = s[i:]\n            bt = bts[s]\n            if st in As and en in Bs:\n                for x in As[st]:\n                    for y in Bs[en]:\n                        AB[x][y] += bt\n    for i in range(na + 1):\n        for j in range(nb + 1):\n            mx = max(A[i] + B[j] + AB[i][j], mx)\n    print(mx)", "from sys import stdin, stdout\nT = int(stdin.readline())\n\ndef presuf(pre, suf):\n    for s in bts:\n        for i in range(len(s) - 1):\n            (pre[s[:i + 1]], suf[s[len(s) - i - 1:]]) = (True, True)\n    return (pre, suf)\nfor _ in range(T):\n    a = stdin.readline().strip('\\n')\n    na = len(a)\n    b = stdin.readline().strip('\\n')\n    nb = len(b)\n    A = [0] * (na + 1)\n    B = [0] * (nb + 1)\n    (n, bts, AB) = (int(stdin.readline()), {}, [[0 for i in range(nb + 1)] for j in range(na + 1)])\n    for i in range(n):\n        (s, bt) = stdin.readline().split(' ')\n        bt = int(bt)\n        bts[s] = bt\n    (pre, suf) = presuf({}, {})\n    As = {}\n    done = {}\n    for k in range(min(26, na), 0, -1):\n        for i in range(na, k - 1, -1):\n            s = a[i - k:i]\n            if s in bts:\n                A[i] += bts[s]\n            if s not in pre:\n                continue\n            if i in done:\n                del pre[s]\n                continue\n            for j in range(k):\n                if s[k - j - 1:] not in As:\n                    As[s[k - j - 1:]] = []\n                As[s[k - j - 1:]].append(i)\n                done[i] = True\n            del pre[s]\n    (Bs, done, mx) = ({}, {}, 0)\n    for k in range(min(26, nb), 0, -1):\n        for i in range(nb - k + 1):\n            s = b[i:i + k]\n            if s in bts:\n                B[i + 1] += bts[s]\n            if s not in suf:\n                continue\n            if i in done:\n                del suf[s]\n                continue\n            for j in range(k):\n                if s[:j + 1] not in Bs:\n                    Bs[s[:j + 1]] = []\n                Bs[s[:j + 1]].append(i + 1)\n                done[i] = True\n            del suf[s]\n    for i in range(1, na + 1, 1):\n        A[i] = A[i] + A[i - 1]\n    for i in range(nb - 1, -1, -1):\n        B[i] = B[i] + B[i + 1]\n    for s in bts:\n        for i in range(1, len(s)):\n            st = s[:i]\n            en = s[i:]\n            bt = bts[s]\n            if st in As and en in Bs:\n                for x in As[st]:\n                    for y in Bs[en]:\n                        AB[x][y] += bt\n    for i in range(na + 1):\n        for j in range(nb + 1):\n            mx = max(A[i] + B[j] + AB[i][j], mx)\n    print(mx)", "from sys import stdin, stdout\nT = int(stdin.readline())\n\ndef presuf():\n    (pre, suf) = ({}, {})\n    for s in bts:\n        for i in range(len(s) - 1):\n            (pre[s[:i + 1]], suf[s[len(s) - i - 1:]]) = (True, True)\n    return (pre, suf)\nfor _ in range(T):\n    a = stdin.readline().strip('\\n')\n    na = len(a)\n    b = stdin.readline().strip('\\n')\n    nb = len(b)\n    A = [0] * (na + 1)\n    B = [0] * (nb + 1)\n    n = int(stdin.readline())\n    bts = {}\n    for i in range(n):\n        (s, bt) = stdin.readline().split(' ')\n        bt = int(bt)\n        bts[s] = bt\n    AB = [[0 for i in range(nb + 1)] for j in range(na + 1)]\n    (pre, suf) = presuf()\n    As = {}\n    done = {}\n    for k in range(min(26, na), 0, -1):\n        for i in range(na, k - 1, -1):\n            s = a[i - k:i]\n            if s in bts:\n                A[i] += bts[s]\n            if s not in pre:\n                continue\n            if i in done:\n                del pre[s]\n                continue\n            for j in range(k):\n                if s[k - j - 1:] not in As:\n                    As[s[k - j - 1:]] = []\n                As[s[k - j - 1:]].append(i)\n                done[i] = True\n            del pre[s]\n    Bs = {}\n    done = {}\n    for k in range(min(26, nb), 0, -1):\n        for i in range(nb - k + 1):\n            s = b[i:i + k]\n            if s in bts:\n                B[i + 1] += bts[s]\n            if s not in suf:\n                continue\n            if i in done:\n                del suf[s]\n                continue\n            for j in range(k):\n                if s[:j + 1] not in Bs:\n                    Bs[s[:j + 1]] = []\n                Bs[s[:j + 1]].append(i + 1)\n                done[i] = True\n            del suf[s]\n    for i in range(1, na + 1, 1):\n        A[i] = A[i] + A[i - 1]\n    for i in range(nb - 1, -1, -1):\n        B[i] = B[i] + B[i + 1]\n    for s in bts:\n        for i in range(1, len(s)):\n            st = s[:i]\n            en = s[i:]\n            bt = bts[s]\n            if st in As and en in Bs:\n                for x in As[st]:\n                    for y in Bs[en]:\n                        AB[x][y] += bt\n    mx = 0\n    for i in range(na + 1):\n        for j in range(nb + 1):\n            sm = A[i] + B[j] + AB[i][j]\n            if sm > mx:\n                mx = sm\n    print(mx)", "import math\nimport collections\nfrom sys import stdin, stdout\nT = int(stdin.readline())\n\ndef presuf():\n    pre = {}\n    suf = {}\n    for s in bts:\n        for i in range(len(s) - 1):\n            pre[s[:i + 1]] = True\n            suf[s[len(s) - i - 1:]] = True\n    return (pre, suf)\nfor _ in range(T):\n    a = stdin.readline().strip('\\n')\n    na = len(a)\n    b = stdin.readline().strip('\\n')\n    nb = len(b)\n    A = [0] * (na + 1)\n    B = [0] * (nb + 1)\n    n = int(stdin.readline())\n    bts = {}\n    for i in range(n):\n        (s, bt) = stdin.readline().split(' ')\n        bt = int(bt)\n        bts[s] = bt\n    AB = [[0 for i in range(nb + 1)] for j in range(na + 1)]\n    (pre, suf) = presuf()\n    As = {}\n    done = {}\n    for k in range(min(26, na), 0, -1):\n        for i in range(na, k - 1, -1):\n            s = a[i - k:i]\n            if s in bts:\n                A[i] += bts[s]\n            if s not in pre:\n                continue\n            if i in done:\n                del pre[s]\n                continue\n            for j in range(k):\n                if s[k - j - 1:] not in As:\n                    As[s[k - j - 1:]] = []\n                As[s[k - j - 1:]].append(i)\n                done[i] = True\n            del pre[s]\n    Bs = {}\n    done = {}\n    for k in range(min(26, nb), 0, -1):\n        for i in range(nb - k + 1):\n            s = b[i:i + k]\n            if s in bts:\n                B[i + 1] += bts[s]\n            if s not in suf:\n                continue\n            if i in done:\n                del suf[s]\n                continue\n            for j in range(k):\n                if s[:j + 1] not in Bs:\n                    Bs[s[:j + 1]] = []\n                Bs[s[:j + 1]].append(i + 1)\n                done[i] = True\n            del suf[s]\n    for i in range(1, na + 1, 1):\n        A[i] = A[i] + A[i - 1]\n    for i in range(nb - 1, -1, -1):\n        B[i] = B[i] + B[i + 1]\n    for s in bts:\n        for i in range(1, len(s)):\n            st = s[:i]\n            en = s[i:]\n            bt = bts[s]\n            if st in As and en in Bs:\n                for x in As[st]:\n                    for y in Bs[en]:\n                        AB[x][y] += bt\n    mx = 0\n    for i in range(na + 1):\n        for j in range(nb + 1):\n            sm = A[i] + B[j] + AB[i][j]\n            if sm > mx:\n                mx = sm\n    print(mx)"]