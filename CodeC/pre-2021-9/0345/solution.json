["for x in range(int(input())):\n    n = int(input())\n    l = [*input()]\n    i = 0\n    c1 = l.count('P')\n    c = l.count('P')\n    c2 = len(l)\n    if c1 / c2 >= 0.75:\n        print(0)\n    else:\n        for y in range(2, len(l) - 2):\n            if l[y] == 'A':\n                if (l[y - 1] == 'P' or l[y - 2] == 'P') and (l[y + 1] == 'P' or l[y + 2] == 'P'):\n                    c1 = c1 + 1\n                    if c1 / c2 >= 0.75:\n                        print(c1 - c)\n                        break\n        else:\n            print(-1)", "def solve(n, s):\n    p = s.count('P')\n    ans = 0\n    i = 2\n    while i < n - 2 and 4 * p < 3 * n:\n        if 'P' in {s[i - 1], s[i - 2]} and 'P' in {s[i + 1], s[i + 2]} and (s[i] != 'P'):\n            ans += 1\n            p += 1\n        i += 1\n    if 4 * p < 3 * n:\n        return -1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(solve(n, s))", "t = int(input())\nfor i in range(t):\n    d = int(input())\n    l = input()\n    count = 0\n    for i in l:\n        if i == 'P':\n            count += 1\n    perc = count / d\n    num = 0\n    pr = 0\n    if perc < 0.75:\n        for i in range(2, d - 2):\n            if l[i] == 'A':\n                if (l[i - 1] == 'P' or l[i - 2] == 'P') and (l[i + 1] == 'P' or l[i + 2] == 'P'):\n                    pr = pr + 1\n    while perc < 0.75 and pr > 0:\n        pr = pr - 1\n        count = count + 1\n        num = num + 1\n        perc = count / d\n    if perc < 0.75:\n        print(-1)\n    else:\n        print(num)", "import math\nt = int(input())\nfor t in range(t):\n    d = int(input())\n    s = input()\n    present = s.count('P')\n    if present / len(s) >= 0.75:\n        print(0)\n    else:\n        i = 2\n        count = 0\n        while i < len(s) - 2:\n            if s[i] == 'A':\n                if (s[i - 2] == 'P' or s[i - 1] == 'P') and (s[i + 2] == 'P' or s[i + 1] == 'P'):\n                    count += 1\n            i += 1\n        if (present + count) / len(s) < 0.75:\n            print(-1)\n        else:\n            ans = math.ceil(len(s) * 0.75) - present\n            print(ans)", "import math\nfor _ in range(int(input())):\n    d = int(input())\n    s = input()\n    half = math.ceil(d / 2)\n    m_c = half + math.ceil((d - half) / 2)\n    p_c = s.count('P')\n    proxcy_count = 0\n    possible_flag = 0\n    if p_c >= m_c:\n        print(0)\n    else:\n        for i in range(2, d - 2):\n            if s[i] == 'A' and 'P' in (s[i - 2], s[i - 1]) and ('P' in (s[i + 1], s[i + 2])):\n                proxcy_count = proxcy_count + 1\n            if p_c + proxcy_count == m_c:\n                print(proxcy_count)\n                possible_flag = 1\n                break\n            possible_flag = 0\n        if possible_flag == 0:\n            print(-1)", "t = int(input())\nimport math\nfor _ in range(t):\n    n = int(input())\n    inp = input()\n    p = inp.count('P')\n    if p / n * 100 >= 75:\n        print(0)\n    else:\n        d = 2\n        xd = 0\n        while d < n - 2:\n            if inp[d] == 'A':\n                if (inp[d - 2] == 'P' or inp[d - 1] == 'P') and (inp[d + 1] == 'P' or inp[d + 2] == 'P'):\n                    xd += 1\n            d = d + 1\n        if (p + xd) / n * 100 >= 75:\n            print(math.ceil(len(inp) * 0.75) - p)\n        else:\n            print(-1)", "import math\nt = int(input())\nfor i in range(t):\n    d = int(input())\n    s = input()\n    present = s.count('P')\n    if present / len(s) >= 0.75:\n        print(0)\n    else:\n        i = 2\n        count = 0\n        while i < len(s) - 2:\n            if s[i] == 'A':\n                if (s[i - 2] == 'P' or s[i - 1] == 'P') and (s[i + 2] == 'P' or s[i + 1] == 'P'):\n                    count = count + 1\n            i = i + 1\n        if (present + count) / len(s) < 0.75:\n            print(-1)\n        else:\n            print(math.ceil(len(s) * 0.75) - present)", "import math\nt = int(input())\nfor i in range(t):\n    d = int(input())\n    s = input()\n    present = s.count('P')\n    if present / len(s) >= 0.75:\n        print(0)\n    else:\n        i = 2\n        count = 0\n        while i < len(s) - 2:\n            if s[i] == 'A':\n                if (s[i - 2] == 'P' or s[i - 1] == 'P') and (s[i + 2] == 'P' or s[i + 1] == 'P'):\n                    count = count + 1\n            i = i + 1\n        if (present + count) / len(s) < 0.75:\n            print(-1)\n        else:\n            print(math.ceil(len(s) * 0.75) - present)", "import math\nt = int(input())\nfor i in range(t):\n    d = int(input())\n    s = input()\n    present = s.count('P')\n    if present / len(s) >= 0.75:\n        print(0)\n    else:\n        i = 2\n        count = 0\n        while i < len(s) - 2:\n            if s[i] == 'A':\n                if (s[i - 2] == 'P' or s[i - 1] == 'P') and (s[i + 2] == 'P' or s[i + 1] == 'P'):\n                    count = count + 1\n            i = i + 1\n        if (present + count) / len(s) < 0.75:\n            print(-1)\n        else:\n            print(math.ceil(len(s) * 0.75) - present)", "import math\nt = int(input())\nfor i in range(t):\n    d = int(input())\n    attendence = input()\n    num = attendence.count('P')\n    maxattendence = math.ceil(0.75 * d)\n    if maxattendence <= num:\n        print('0')\n    else:\n        totalproxy = 0\n        for j in range(2, len(attendence) - 2):\n            if attendence[j] == 'A':\n                before = attendence[j - 1:j - 3:-1]\n                if j == 2:\n                    before = attendence[0:j]\n                after = attendence[j + 1:j + 3]\n                if 'P' in after and 'P' in before:\n                    totalproxy += 1\n        if maxattendence - num <= totalproxy:\n            print(maxattendence - num)\n        else:\n            print('-1')", "import math\nt = int(input())\nfor i in range(t):\n    d = int(input())\n    attendence = input()\n    num = attendence.count('P')\n    maxattendence = math.ceil(0.75 * d)\n    if maxattendence <= num:\n        print('0')\n    else:\n        totalproxy = 0\n        for j in range(2, len(attendence) - 2):\n            if attendence[j] == 'A':\n                before = attendence[j - 1:j - 3:-1]\n                if j == 2:\n                    before = attendence[0:j]\n                after = attendence[j + 1:j + 3]\n                if 'P' in after and 'P' in before:\n                    totalproxy += 1\n        if maxattendence - num <= totalproxy:\n            print(maxattendence - num)\n        else:\n            print('-1')", "import math\nt = int(input())\nfor i in range(t):\n    d = int(input())\n    attendence = input()\n    num = attendence.count('P')\n    maxattendence = math.ceil(0.75 * d)\n    if maxattendence <= num:\n        print('0')\n    else:\n        totalproxy = 0\n        for j in range(2, len(attendence) - 2):\n            if attendence[j] == 'A':\n                before = attendence[j - 1:j - 3:-1]\n                if j == 2:\n                    before = attendence[0:j]\n                after = attendence[j + 1:j + 3]\n                if 'P' in after and 'P' in before:\n                    totalproxy += 1\n        if maxattendence - num <= totalproxy:\n            print(maxattendence - num)\n        else:\n            print('-1')", "for x in range(int(input())):\n    n = int(input())\n    l = [*input()]\n    i = 0\n    c1 = l.count('P')\n    c = l.count('P')\n    c2 = len(l)\n    if c1 / c2 >= 0.75:\n        print(0)\n    else:\n        for y in range(len(l)):\n            if y != 0 and y != 1 and (y != len(l) - 1) and (y != len(l) - 2):\n                if l[y] == 'A':\n                    if (l[y - 1] == 'P' or l[y - 2] == 'P') and (l[y + 1] == 'P' or l[y + 2] == 'P'):\n                        c1 = c1 + 1\n                        if c1 / c2 >= 0.75:\n                            print(c1 - c)\n                            break\n        else:\n            print(-1)", "for t in range(int(input())):\n    d = int(input())\n    s = input()\n    a = 0\n    p = 0\n    for i in range(d):\n        if i <= 2 or i >= d - 2:\n            if s[i] == 'P':\n                a += 1\n        elif s[i] == 'P':\n            a += 1\n        elif (s[i - 2] == 'P' or s[i - 1] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n            p += 1\n    if a / d >= 0.75:\n        print(0)\n    elif (a + p) / d >= 0.75:\n        j = 1\n        while (a + j) / d < 0.75:\n            j += 1\n        print(j)\n    else:\n        print(-1)", "for x in range(int(input())):\n    n = int(input())\n    l = [*input()]\n    i = 0\n    c1 = l.count('P')\n    c = l.count('P')\n    c2 = len(l)\n    if c1 / c2 >= 0.75:\n        print(0)\n    else:\n        for y in range(len(l)):\n            if y != 0 and y != 1 and (y != len(l) - 1) and (y != len(l) - 2):\n                if l[y] == 'A':\n                    if (l[y - 1] == 'P' or l[y - 2] == 'P') and (l[y + 1] == 'P' or l[y + 2] == 'P'):\n                        c1 = c1 + 1\n                        if c1 / c2 >= 0.75:\n                            print(c1 - c)\n                            break\n        else:\n            print(-1)", "for x in range(int(input())):\n    n = int(input())\n    l = [*input()]\n    i = 0\n    c1 = l.count('P')\n    c = l.count('P')\n    c2 = len(l)\n    if c1 / c2 >= 0.75:\n        print(0)\n    else:\n        for y in range(2, len(l) - 2):\n            if l[y] == 'A':\n                if (l[y - 1] == 'P' or l[y - 2] == 'P') and (l[y + 1] == 'P' or l[y + 2] == 'P'):\n                    c1 = c1 + 1\n                    if c1 / c2 >= 0.75:\n                        print(c1 - c)\n                        break\n        else:\n            print(-1)", "for t in range(int(input())):\n    d = int(input())\n    s = input()\n    count = 0\n    present = s.count('P')\n    if present / d > 0.75:\n        print(0)\n    else:\n        for i in range(2, d - 2):\n            if s[i] == 'A':\n                if (s[i - 2] == 'P' or s[i - 1] == 'P') and (s[i + 2] == 'P' or s[i + 1] == 'P'):\n                    present += 1\n                    count = count + 1\n                    if present / d >= 0.75:\n                        print(count)\n                        break\n        else:\n            print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = s.count('A')\n    b = s.count('P')\n    c = 0\n    d = 0\n    if b / n >= 0.75:\n        print(0)\n    else:\n        while b / n < 0.75:\n            b = b + 1\n            c = c + 1\n        for j in range(2, n - 2):\n            if s[j] == 'A' and ((s[j - 1] == 'P' or s[j - 2] == 'P') and (s[j + 1] == 'P' or s[j + 2] == 'P')):\n                d = d + 1\n        if c > d:\n            print(-1)\n        else:\n            print(c)", "def Solve(l, n):\n    (cnt, present) = (0, 0)\n    for i in range(n):\n        if l[i] == 'A':\n            if i - 2 >= 0 and i + 2 < n:\n                if (l[i - 1] == 'P' or l[i - 2] == 'P') and (l[i + 1] == 'P' or l[i + 2] == 'P'):\n                    cnt = cnt + 1\n        else:\n            present += 1\n    pre = present / n\n    k = 0\n    while cnt != 0 and pre < 0.75:\n        k += 1\n        present += 1\n        cnt -= 1\n        pre = present / n\n    if pre < 0.75:\n        print(-1)\n    else:\n        print(k)\nfor _ in range(int(input())):\n    n = int(input())\n    l = input()\n    Solve(l, n)", "def Solve(l, n):\n    (cnt, present) = (0, 0)\n    for i in range(n):\n        if l[i] == 'A':\n            if i - 2 >= 0 and i + 2 < n:\n                if (l[i - 1] == 'P' or l[i - 2] == 'P') and (l[i + 1] == 'P' or l[i + 2] == 'P'):\n                    cnt = cnt + 1\n        else:\n            present += 1\n    pre = present / n\n    k = 0\n    while cnt != 0 and pre < 0.75:\n        k += 1\n        present += 1\n        cnt -= 1\n        pre = present / n\n    if pre < 0.75:\n        print(-1)\n    else:\n        print(k)\nfor _ in range(int(input())):\n    n = int(input())\n    l = input()\n    Solve(l, n)", "def Solve(l, n):\n    (cnt, present) = (0, 0)\n    for i in range(n):\n        if l[i] == 'A':\n            if i - 2 >= 0 and i + 2 < n:\n                if (l[i - 1] == 'P' or l[i - 2] == 'P') and (l[i + 1] == 'P' or l[i + 2] == 'P'):\n                    cnt = cnt + 1\n        else:\n            present += 1\n    pre = present / n\n    k = 0\n    while cnt != 0 and pre < 0.75:\n        k += 1\n        present += 1\n        cnt -= 1\n        pre = present / n\n    if pre < 0.75:\n        print(-1)\n    else:\n        print(k)\nfor _ in range(int(input())):\n    n = int(input())\n    l = input()\n    Solve(l, n)", "def Solve(l, n):\n    (cnt, present) = (0, l.count('P'))\n    if present / n >= 0.75:\n        print(0)\n        return\n    for i in range(2, n - 1):\n        if l[i] == 'A':\n            if i - 2 > -1 and i + 2 < n:\n                if (l[i - 1] == 'P' or l[i - 2] == 'P') and (l[i + 1] == 'P' or l[i + 2] == 'P'):\n                    cnt = cnt + 1\n                    present += 1\n                    if present / n >= 0.75:\n                        print(cnt)\n                        return\n    if present / n >= 0.75:\n        print(cnt)\n        return\n    else:\n        print(-1)\nfor _ in range(int(input())):\n    n = int(input())\n    l = input()\n    Solve(l, n)", "def Solve(l, n):\n    (cnt, present) = (0, 0)\n    for i in range(n):\n        if l[i] == 'A':\n            if i - 2 >= 0 and i + 2 < n:\n                if (l[i - 1] == 'P' or l[i - 2] == 'P') and (l[i + 1] == 'P' or l[i + 2] == 'P'):\n                    cnt = cnt + 1\n        else:\n            present += 1\n    pre = present / n\n    k = 0\n    while cnt != 0 and pre < 0.75:\n        k += 1\n        present += 1\n        cnt -= 1\n        pre = present / n\n    if pre < 0.75:\n        print(-1)\n    else:\n        print(k)\nfor _ in range(int(input())):\n    n = int(input())\n    l = input()\n    Solve(l, n)", "t = input()\nfor c in range(0, int(t)):\n    bp = 0\n    d = int(input())\n    s = input()\n    a = s.count('A')\n    p = s.count('P')\n    if p / d >= 0.75:\n        print('0')\n        continue\n    for j in range(2, d - 2):\n        if s[j] == 'A':\n            if (s[j - 1] == 'P' or s[j - 2] == 'P') and (s[j + 1] == 'P' or s[j + 2] == 'P'):\n                bp += 1\n                p += 1\n                if p / d >= 0.75:\n                    print('\\n', bp)\n                    break\n                else:\n                    continue\n    if p / d >= 0.75:\n        continue\n    else:\n        print('-1')", "t = int(input(''))\nfor i in range(t):\n    bp = 0\n    d = int(input(''))\n    s = input('\\n')\n    a = s.count('A')\n    p = s.count('P')\n    if p / d >= 0.75:\n        print('0')\n        continue\n    for j in range(2, d - 2):\n        if s[j] == 'A':\n            if (s[j - 1] == 'P' or s[j - 2] == 'P') and (s[j + 1] == 'P' or s[j + 2] == 'P'):\n                bp += 1\n                p += 1\n                if p / d >= 0.75:\n                    print('\\n', bp)\n                    break\n                else:\n                    continue\n    if p / d >= 0.75:\n        continue\n    else:\n        print('-1')", "for _ in range(int(input())):\n    d = int(input())\n    s = input()\n    count = 0\n    prox = 0\n    for i in range(d):\n        if i <= 1 or i >= d - 2:\n            if s[i] == 'P':\n                count += 1\n        elif s[i] == 'P':\n            count += 1\n        elif (s[i - 2] == 'P' or s[i - 1] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n            prox += 1\n    if count / d >= 0.75:\n        print(0)\n    elif (prox + count) / d >= 0.75:\n        j = 1\n        while (count + j) / d < 0.75:\n            j += 1\n        print(j)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    le = int(input())\n    n = input()\n    prox = 0\n    for i in range(2, len(n) - 2):\n        if n[i - 1] == 'P' or n[i - 2] == 'P':\n            if n[i + 1] == 'P' or n[i + 2] == 'P':\n                if n[i] == 'A':\n                    prox += 1\n    if n.count('P') / le < 0.75:\n        prox_min = -(le * 0.75 // -1) - n.count('P')\n        if prox_min <= prox:\n            print(int(prox_min))\n        else:\n            print(-1)\n    else:\n        print(0)", "import math\nfor _ in range(int(input())):\n    le = int(input())\n    n = input()\n    prox = 0\n    for i in range(2, len(n) - 2):\n        if n[i - 1] == 'P' or n[i - 2] == 'P':\n            if n[i + 1] == 'P' or n[i + 2] == 'P':\n                if n[i] == 'A':\n                    prox += 1\n    if n.count('P') / le < 0.75:\n        prox_min = math.ceil(le * 0.75) - n.count('P')\n        if prox_min <= prox:\n            print(int(prox_min))\n        else:\n            print(-1)\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    d = int(input())\n    s = input()\n    count = 0\n    c = 0\n    for i in range(d):\n        if i <= 1 or i >= d - 2:\n            if s[i] == 'P':\n                count += 1\n        elif s[i] == 'P':\n            count += 1\n        elif (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n            c += 1\n    if count / d >= 0.75:\n        print(0)\n    elif (count + c) / d >= 0.75:\n        i = 1\n        while (count + i) / d < 0.75:\n            i += 1\n        print(i)\n    else:\n        print(-1)", "import math\ntests = int(input())\nfor i in range(tests):\n    length = int(input())\n    att_arr = list(input())\n    required_att = math.ceil(length * 3 / 4)\n    required_proxy = required_att - att_arr.count('P')\n    if required_proxy < 0:\n        required_proxy = 0\n    possible_proxy = 0\n    for j in range(2, length - 2):\n        if att_arr[j] == 'A' and ('P' in att_arr[j - 2:j] and 'P' in att_arr[j + 1:j + 3]):\n            possible_proxy += 1\n        if possible_proxy > required_proxy:\n            break\n    if possible_proxy < required_proxy:\n        print(-1)\n    else:\n        print(required_proxy)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    attendence = n * 75 / 100\n    present = s.count('P')\n    count = 0\n    if present >= attendence:\n        print(count)\n    else:\n        for i in range(2, n - 2):\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                count += 1\n            if present + count >= attendence:\n                print(count)\n                break\n        else:\n            print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    present_days = n * 75 / 100\n    d = input()\n    (pre, k) = (d.count('P'), 0)\n    if pre >= present_days:\n        print(k)\n    else:\n        for i in range(2, n - 2):\n            if d[i] == 'A' and (d[i - 1] == 'P' or d[i - 2] == 'P') and (d[i + 1] == 'P' or d[i + 2] == 'P'):\n                k += 1\n            if pre + k >= present_days:\n                print(k)\n                break\n        else:\n            print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    present_days = n * 75 / 100\n    d = input()\n    (pre, k) = (d.count('P'), 0)\n    if pre >= present_days:\n        print(k)\n    else:\n        for i in range(2, n - 2):\n            if d[i] == 'A' and (d[i - 1] == 'P' or d[i - 2] == 'P') and (d[i + 1] == 'P' or d[i + 2] == 'P'):\n                k += 1\n            if pre + k >= present_days:\n                print(k)\n                break\n        else:\n            print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    present_days = n * 75 / 100\n    d = input()\n    (pre, k) = (d.count('P'), 0)\n    if pre >= present_days:\n        print(k)\n    else:\n        for i in range(2, n - 2):\n            if d[i] == 'A' and (d[i - 1] == 'P' or d[i - 2] == 'P') and (d[i + 1] == 'P' or d[i + 2] == 'P'):\n                k += 1\n            if pre + k >= present_days:\n                print(k)\n                break\n        else:\n            print(-1)", "import math\nfor _ in range(int(input())):\n    d = int(input())\n    s = input()\n    half = math.ceil(d / 2)\n    m_c = half + math.ceil((d - half) / 2)\n    p_c = s.count('P')\n    proxcy_count = 0\n    possible_flag = 0\n    if p_c >= m_c:\n        print(0)\n    else:\n        for i in range(2, d - 2):\n            if s[i] == 'A' and 'P' in (s[i - 2], s[i - 1]) and ('P' in (s[i + 1], s[i + 2])):\n                proxcy_count = proxcy_count + 1\n            if p_c + proxcy_count == m_c:\n                print(proxcy_count)\n                possible_flag = 1\n                break\n            possible_flag = 0\n        if possible_flag == 0:\n            print(-1)", "import math\nfor _ in range(int(input())):\n    d = int(input())\n    s = input()\n    half = math.ceil(d / 2)\n    m_c = half + math.ceil((d - half) / 2)\n    p_c = s.count('P')\n    proxcy_count = 0\n    possible_flag = 0\n    if p_c >= m_c:\n        print(0)\n    else:\n        for i in range(2, d - 2):\n            if s[i] == 'A' and 'P' in (s[i - 2], s[i - 1]) and ('P' in (s[i + 1], s[i + 2])):\n                proxcy_count = proxcy_count + 1\n            if p_c + proxcy_count == m_c:\n                print(proxcy_count)\n                possible_flag = 1\n                break\n            possible_flag = 0\n        if possible_flag == 0:\n            print(-1)", "import math\nfor _ in range(int(input())):\n    d = int(input())\n    s = input()\n    l = list(s)\n    days = math.ceil(0.75 * d)\n    lp = l.count('P')\n    if lp >= days:\n        print('0')\n    else:\n        count = 0\n        for j in range(2, d - 2):\n            if l[j] == 'A':\n                if l[j - 2] == 'P' or l[j - 1] == 'P':\n                    if l[j + 1] == 'P' or l[j + 2] == 'P':\n                        count += 1\n                        if count == days - lp:\n                            print(count)\n                            break\n        else:\n            print('-1')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    count = 0\n    proxy = 0\n    if len(s) <= 4:\n        for i in range(len(s)):\n            if s[i] == 'P':\n                count += 1\n        if count / len(s) * 100 >= 75:\n            print(proxy)\n        else:\n            print(-1)\n    else:\n        for j in range(len(s)):\n            if s[j] == 'P':\n                count += 1\n        if count / len(s) * 100 > 75:\n            print(proxy)\n        else:\n            for k in range(2, len(s) - 2):\n                if s[k] == 'A' and (s[k - 1] == 'P' or s[k - 2] == 'P') and (s[k + 1] == 'P' or s[k + 2] == 'P'):\n                    proxy += 1\n                    if (count + proxy) / len(s) * 100 >= 75:\n                        print(proxy)\n                        break\n            else:\n                print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    x = n * 0.75\n    p = int(x) if x == int(x) else int(x + 1)\n    l = input()\n    pre = 0\n    for i in l:\n        if i == 'P':\n            pre += 1\n    if pre >= p:\n        print(0)\n    else:\n        proxy = 0\n        for i in range(2, n - 2):\n            if l[i] == 'A' and (l[i - 1] == 'P' or l[i - 2] == 'P') and (l[i + 1] == 'P' or l[i + 2] == 'P'):\n                proxy += 1\n            if pre + proxy == p:\n                break\n        if pre + proxy == p:\n            print(proxy)\n        else:\n            print(-1)", "t = int(input())\nfor _ in range(t):\n    d = int(input())\n    s = input()\n    count = 0\n    c = 0\n    for i in range(d):\n        if i <= 1 or i >= d - 2:\n            if s[i] == 'P':\n                count += 1\n        elif s[i] == 'P':\n            count += 1\n        elif (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n            c += 1\n    if count / d >= 0.75:\n        print(0)\n    elif (count + c) / d >= 0.75:\n        i = 1\n        while (count + i) / d < 0.75:\n            i += 1\n        print(i)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    d = int(input())\n    s = list(input())\n    tp = s.count('P')\n    if tp / d >= 0.75:\n        print(0)\n    else:\n        count = 0\n        for i in range(2, d - 2):\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                count += 1\n            if (tp + count) / d * 100 >= 75:\n                print(count)\n                break\n        if (tp + count) / d * 100 < 75:\n            print(-1)", "from collections import Counter\nimport math\nt = int(input())\nfor _ in range(t):\n    d = int(input())\n    s = list(input())\n    dic = Counter(s)\n    req = int(math.ceil(d * 0.75))\n    if dic['P'] >= req:\n        print(0)\n    else:\n        flag = True\n        if d <= 4:\n            print(-1)\n        elif d > 4:\n            k = req - dic['P']\n            p = 0\n            for i in range(2, d - 2):\n                if s[i] == 'A' and 'P' in [s[i - 1], s[i - 2]] and ('P' in [s[i + 1], s[i + 2]]):\n                    p += 1\n                if p == k:\n                    flag = False\n                    break\n            if flag:\n                print(-1)\n            else:\n                print(p)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(input())\n    c = l.count('P')\n    p = c / n * 100\n    if p >= 75:\n        print('0')\n    else:\n        count = 0\n        q = []\n        for j in l:\n            q.append(j)\n        for j in range(2, n - 2, 1):\n            if (l[j - 2] == 'P' or l[j - 1] == 'P') and (l[j + 2] == 'P' or l[j + 1] == 'P') and (l[j] != 'P'):\n                q[j] = 'P'\n                count += 1\n            c = q.count('P')\n            p = c / n * 100\n            if p >= 75:\n                break\n        c = q.count('P')\n        p = c / n * 100\n        if p >= 75:\n            print(count)\n        else:\n            print('-1')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(input())\n    c = l.count('P')\n    p = c / n * 100\n    if p >= 75:\n        print('0')\n    else:\n        count = 0\n        q = []\n        for j in range(n):\n            q.append(l[j])\n        for j in range(2, n - 2, 1):\n            if (l[j - 2] == 'P' or l[j - 1] == 'P') and (l[j + 2] == 'P' or l[j + 1] == 'P') and (l[j] != 'P'):\n                q[j] = 'P'\n                count += 1\n            c = q.count('P')\n            p = c / n * 100\n            if p >= 75:\n                break\n        c = q.count('P')\n        p = c / n * 100\n        if p >= 75:\n            print(count)\n        else:\n            print('-1')", "n = int(input())\nfor i in range(n):\n    D = int(input())\n    S = input()\n    count = 0\n    countA = S.count('A')\n    countP = S.count('P')\n    if D <= 4 and countP <= countA:\n        print(-1)\n    elif countP / D >= 0.75:\n        print(count)\n    else:\n        f = 0\n        for i1 in range(2, len(S) - 2):\n            if S[i1] == 'A' and (S[i1 - 2] == 'P' or S[i1 - 1] == 'P') and (S[i1 + 1] == 'P' or S[i1 + 2] == 'P'):\n                count += 1\n                countP += 1\n                if countP / D >= 0.75:\n                    f = 1\n                    break\n        if f == 1:\n            print(count)\n        else:\n            print(-1)", "n = int(input())\nfor i in range(n):\n    D = int(input())\n    S = input()\n    count = 0\n    countA = S.count('A')\n    countP = S.count('P')\n    if D <= 4 and countP <= countA:\n        print(-1)\n    elif countP / D >= 0.75:\n        print(count)\n    else:\n        f = 0\n        for i1 in range(2, len(S) - 2):\n            if S[i1] == 'A' and (S[i1 - 2] == 'P' or S[i1 - 1] == 'P') and (S[i1 + 1] == 'P' or S[i1 + 2] == 'P'):\n                count += 1\n                countP += 1\n                if countP / D >= 0.75:\n                    f = 1\n                    break\n        if f == 1:\n            print(count)\n        else:\n            print(-1)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = list(input())\n    ap = L.count('P')\n    l = 0.75 * n\n    if ap >= l:\n        print(0)\n    else:\n        if l % 1 == 0:\n            req = (l // 1 - ap) // 1\n        else:\n            req = (l // 1 - ap + 1) // 1\n        ans = 0\n        for i in range(2, n - 2):\n            if L[i] == 'A':\n                if (L[i - 1] == 'P' or L[i - 2] == 'P') and (L[i + 1] == 'P' or L[i + 2] == 'P'):\n                    ans += 1\n        if ans >= req:\n            print(int(req))\n        else:\n            print(-1)", "n = int(input())\nfor i in range(n):\n    D = int(input())\n    S = input()\n    count = 0\n    countA = S.count('A')\n    countP = S.count('P')\n    if D <= 4 and countP <= countA:\n        print(-1)\n    elif countP / D >= 0.75:\n        print(count)\n    else:\n        f = 0\n        for i1 in range(2, len(S) - 2):\n            if S[i1] == 'A' and (S[i1 - 2] == 'P' or S[i1 - 1] == 'P') and (S[i1 + 1] == 'P' or S[i1 + 2] == 'P'):\n                count += 1\n                countP += 1\n                if countP / D >= 0.75:\n                    f = 1\n                    break\n        if f == 1:\n            print(count)\n        else:\n            print(-1)", "n = int(input())\nfor i in range(n):\n    D = int(input())\n    S = input()\n    count = 0\n    countA = S.count('A')\n    countP = S.count('P')\n    if D <= 4 and countP <= countA:\n        print(-1)\n    elif countP / D >= 0.75:\n        print(count)\n    else:\n        f = 0\n        for i1 in range(2, len(S) - 2):\n            if S[i1] == 'A' and (S[i1 - 2] == 'P' or S[i1 - 1] == 'P') and (S[i1 + 1] == 'P' or S[i1 + 2] == 'P'):\n                count += 1\n                countP += 1\n                if countP / D >= 0.75:\n                    f = 1\n                    break\n        if f == 1:\n            print(count)\n        else:\n            print(-1)", "n = int(input())\nfor i in range(n):\n    D = int(input())\n    S = input()\n    count = 0\n    countA = S.count('A')\n    countP = S.count('P')\n    if D <= 4 and countP <= countA:\n        print(-1)\n    elif countP / D >= 0.75:\n        print(count)\n    else:\n        f = 0\n        for i1 in range(2, len(S) - 2):\n            if S[i1] == 'A' and (S[i1 - 2] == 'P' or S[i1 - 1] == 'P') and (S[i1 + 1] == 'P' or S[i1 + 2] == 'P'):\n                count += 1\n                countP += 1\n                if countP / D >= 0.75:\n                    f = 1\n                    break\n        if f == 1:\n            print(count)\n        else:\n            print(-1)", "for i in range(int(input())):\n    n = int(input())\n    l = [x.lower() for x in input()]\n    p = l.count('p')\n    printed = False\n    c = 0\n    if n > 3:\n        for i in range(2, n - 2):\n            if p >= 0.75 * n:\n                print(c)\n                printed = True\n                break\n            if (l[i - 1] == 'p' or l[i - 2] == 'p') and (l[i + 1] == 'p' or l[i + 2] == 'p') and (l[i] == 'a'):\n                p += 1\n                c += 1\n    if p >= 0.75 * n and (not printed):\n        print(c)\n    elif not printed:\n        print(-1)", "for _ in range(int(input())):\n    d = int(input())\n    ip = input()\n    var1 = ip.count('P')\n    var2 = ip.count('A')\n    count = 0\n    if d <= 4 and var1 <= var2:\n        print(-1)\n    elif var1 / d >= 0.75:\n        print(0)\n    else:\n        flag = False\n        for i in range(2, d - 2):\n            if ip[i] == 'A' and (ip[i - 1] == 'P' or ip[i - 2] == 'P') and (ip[i + 1] == 'P' or ip[i + 2] == 'P'):\n                count += 1\n                var1 += 1\n            if var1 / d >= 0.75:\n                flag = True\n                break\n        if flag is True:\n            print(count)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    d = int(input())\n    ip = input()\n    var1 = ip.count('P')\n    var2 = ip.count('A')\n    count = 0\n    if d <= 4 and var1 <= var2:\n        print(-1)\n    elif var1 / d >= 0.75:\n        print(0)\n    else:\n        flag = False\n        for i in range(2, d - 2):\n            if ip[i] == 'A' and (ip[i - 1] == 'P' or ip[i - 2] == 'P') and (ip[i + 1] == 'P' or ip[i + 2] == 'P'):\n                count += 1\n                var1 += 1\n            if var1 / d >= 0.75:\n                flag = True\n                break\n        if flag is True:\n            print(count)\n        else:\n            print(-1)", "n = int(input())\nfor i in range(n):\n    D = int(input())\n    S = input()\n    count = 0\n    countA = S.count('A')\n    countP = S.count('P')\n    if D <= 4 and countP <= countA:\n        print(-1)\n    elif countP / D >= 0.75:\n        print(count)\n    else:\n        f = 0\n        for i1 in range(2, len(S) - 2):\n            if S[i1] == 'A' and (S[i1 - 2] == 'P' or S[i1 - 1] == 'P') and (S[i1 + 1] == 'P' or S[i1 + 2] == 'P'):\n                count += 1\n                countP += 1\n                if countP / D >= 0.75:\n                    f = 1\n                    break\n        if f == 1:\n            print(count)\n        else:\n            print(-1)", "n = int(input())\nfor i in range(n):\n    D = int(input())\n    S = input()\n    count = 0\n    countA = S.count('A')\n    countP = S.count('P')\n    if D <= 4 and countP <= countA:\n        print(-1)\n    elif countP / D >= 0.75:\n        print(count)\n    else:\n        f = 0\n        for i1 in range(2, len(S) - 2):\n            if S[i1] == 'A' and (S[i1 - 2] == 'P' or S[i1 - 1] == 'P') and (S[i1 + 1] == 'P' or S[i1 + 2] == 'P'):\n                count += 1\n                countP += 1\n                if countP / D >= 0.75:\n                    f = 1\n                    break\n        if f == 1:\n            print(count)\n        else:\n            print(-1)", "def abc(l, l1):\n    x = l1.count('P')\n    tp = x / l\n    cp = x / l\n    rp = x\n    c = 0\n    mt = 0\n    if tp >= 0.75:\n        return 0\n    if tp < 0.75 and l <= 4:\n        return -1\n    elif l > 4 and tp < 0.75:\n        while rp / l < 0.75:\n            rp = rp + 1\n            mt += 1\n        for j in range(2, len(l1) - 2):\n            if l1[j] == 'A' and (l1[j - 1] == 'P' or l1[j - 2] == 'P') and (l1[j + 1] == 'P' or l1[j + 2] == 'P'):\n                l1[j] = 'p'\n                c = c + 1\n                if c >= mt:\n                    return c\n        if c < rp:\n            return -1\nt = int(input())\nfor i in range(t):\n    l = int(input())\n    s = input()\n    l1 = list(s)\n    print(abc(l, l1))", "for _ in range(int(input())):\n    n = int(input())\n    x = input()\n    xd = x.count('P')\n    ans = 0\n    for i in range(2, n - 2):\n        if xd / n < 0.75:\n            if x[i] == 'A':\n                if (x[i - 1] == 'P' or x[i - 2] == 'P') and (x[i + 1] == 'P' or x[i + 2] == 'P'):\n                    xd += 1\n                    ans += 1\n                    if xd / n >= 0.75:\n                        break\n        else:\n            break\n    if xd / n < 0.75:\n        print(-1)\n    else:\n        print(ans)", "T = int(input())\nwhile T:\n    d = int(input())\n    S = input().strip()\n    PList = ''\n    count = 0\n    flag = False\n    for i in range(d):\n        PList += 'P' if S[i] == 'P' else ''\n    if len(PList) / d * 100 >= 75:\n        print(0)\n    else:\n        for i in range(2, d - 2):\n            if S[i] == 'A':\n                if (S[i - 1] == 'P' or S[i - 2] == 'P') and (S[i + 1] == 'P' or S[i + 2] == 'P'):\n                    PList += 'P'\n                    count += 1\n            if len(PList) / d * 100 >= 75:\n                print(count)\n                flag = True\n                break\n        else:\n            print(-1)\n    T -= 1", "T = int(input())\nwhile T:\n    d = int(input())\n    S = input().strip()\n    PList = ''\n    count = 0\n    flag = False\n    for i in range(d):\n        PList += 'P' if S[i] == 'P' else ''\n    if len(PList) / d * 100 >= 75:\n        print(0)\n    else:\n        for i in range(2, d - 2):\n            if S[i] == 'A':\n                if (S[i - 1] == 'P' or S[i - 2] == 'P') and (S[i + 1] == 'P' or S[i + 2] == 'P'):\n                    PList += 'P'\n                    count += 1\n            if len(PList) / d * 100 >= 75:\n                print(count)\n                flag = True\n                break\n        else:\n            print(-1)\n    T -= 1", "t = int(input())\nfor i in range(t):\n    d = int(input())\n    s = input()\n    x = 0\n    proxyCount = 0\n    for z in s:\n        if z == 'P':\n            x += 1\n    if x / d >= 0.75:\n        print(proxyCount)\n        continue\n    for i in range(2, len(s) - 2):\n        if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n            proxyCount += 1\n            if (x + proxyCount) / d >= 0.75:\n                print(proxyCount)\n                break\n    if (x + proxyCount) / d < 0.75:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    d = int(input())\n    s = input()\n    x = 0\n    proxyCount = 0\n    for z in s:\n        if z == 'P':\n            x += 1\n    if x / d >= 0.75:\n        print(proxyCount)\n        continue\n    for i in range(2, len(s) - 2):\n        if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n            proxyCount += 1\n            if (x + proxyCount) / d >= 0.75:\n                print(proxyCount)\n                break\n    if (x + proxyCount) / d < 0.75:\n        print(-1)", "T = int(input())\nwhile T:\n    d = int(input())\n    S = input().strip()\n    PList = ''\n    count = 0\n    flag = False\n    for i in range(d):\n        PList += 'P' if S[i] == 'P' else ''\n    if len(PList) / d * 100 >= 75:\n        print(0)\n    else:\n        for i in range(2, d - 2):\n            if S[i] == 'A':\n                if (S[i - 1] == 'P' or S[i - 2] == 'P') and (S[i + 1] == 'P' or S[i + 2] == 'P'):\n                    PList += 'P'\n                    count += 1\n            if len(PList) / d * 100 >= 75:\n                print(count)\n                flag = True\n                break\n        else:\n            print(-1)\n    T -= 1", "t = int(input())\nfor i in range(0, t):\n    d = int(input())\n    s = str(input())\n    a = len(s)\n    n = 0.75 * a\n    m = 0\n    count = 0\n    for j in range(0, len(s)):\n        if s[j] == 'P':\n            m = m + 1\n    for j in range(2, len(s) - 2):\n        if m >= n:\n            break\n        if s[j] == 'A':\n            if s[j - 1] == 'P' or s[j - 2] == 'P':\n                if s[j + 1] == 'P' or s[j + 2] == 'P':\n                    m = m + 1\n                    count = count + 1\n    if m < n:\n        print('-1')\n    else:\n        print(count)", "t = int(input())\nfor i in range(0, t):\n    d = int(input())\n    s = str(input())\n    a = len(s)\n    n = 0.75 * a\n    m = 0\n    count = 0\n    for j in range(0, len(s)):\n        if s[j] == 'P':\n            m = m + 1\n    for j in range(2, len(s) - 2):\n        if m >= n:\n            break\n        if s[j] == 'A':\n            if s[j - 1] == 'P' or s[j - 2] == 'P':\n                if s[j + 1] == 'P' or s[j + 2] == 'P':\n                    m = m + 1\n                    count = count + 1\n    if m < n:\n        print('-1')\n    else:\n        print(count)", "t = int(input())\nfor i in range(0, t):\n    d = int(input())\n    s = str(input())\n    a = len(s)\n    n = 0.75 * a\n    m = 0\n    count = 0\n    for j in range(0, len(s)):\n        if s[j] == 'P':\n            m = m + 1\n    for j in range(2, len(s) - 2):\n        if m >= n:\n            break\n        if s[j] == 'A':\n            if s[j - 1] == 'P' or s[j - 2] == 'P':\n                if s[j + 1] == 'P' or s[j + 2] == 'P':\n                    m = m + 1\n                    count = count + 1\n    if m < n:\n        print('-1')\n    else:\n        print(count)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    p1 = s.count('P')\n    ext = 0\n    if n * 0.75 <= p1:\n        print(ext)\n        continue\n    for i in range(2, n - 2):\n        if 'P' in s[i - 1] + s[i - 2] and 'P' in s[i + 1] + s[i + 2] and (s[i] == 'A'):\n            p1 += 1\n            ext += 1\n            if n * 0.75 <= p1:\n                print(ext)\n                break\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    d = int(input())\n    s = input()\n    x = 0\n    proxyCount = 0\n    for z in s:\n        if z == 'P':\n            x += 1\n    if x / d >= 0.75:\n        print(proxyCount)\n        continue\n    for i in range(2, len(s) - 2):\n        if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n            proxyCount += 1\n            if (x + proxyCount) / d >= 0.75:\n                print(proxyCount)\n                break\n    if (x + proxyCount) / d < 0.75:\n        print(-1)", "for _ in range(int(input())):\n    D = int(input())\n    S = input()\n    totalP = S.count('P')\n    addedP = 0\n    if totalP / D >= 0.75:\n        print(0)\n    else:\n        for j in range(2, D - 2):\n            if S[j] == 'A' and (S[j - 1] == 'P' or S[j - 2] == 'P') and (S[j + 1] == 'P' or S[j + 2] == 'P'):\n                addedP += 1\n                totalP += 1\n                if totalP / D >= 0.75:\n                    print(addedP)\n                    break\n        if totalP / D < 0.75:\n            print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    x = input()\n    xd = x.count('P')\n    ans = 0\n    for i in range(2, n - 2):\n        if xd / n < 0.75:\n            if x[i] == 'A':\n                if (x[i - 1] == 'P' or x[i - 2] == 'P') and (x[i + 1] == 'P' or x[i + 2] == 'P'):\n                    xd += 1\n                    ans += 1\n                    if xd / n >= 0.75:\n                        break\n        else:\n            break\n    if xd / n < 0.75:\n        print(-1)\n    else:\n        print(ans)", "T = int(input())\nfor i in range(T):\n    D = int(input())\n    S = list(input())\n    p = S.count('P')\n    time = 0\n    for j in range(2, D - 2):\n        if p / D < 0.75:\n            if S[j] == 'A' and (S[j - 1] == 'P' or S[j - 2] == 'P') and (S[j + 1] == 'P' or S[j + 2] == 'P'):\n                p = p + 1\n                time = time + 1\n                if p / D >= 0.75:\n                    print(time)\n                    break\n        else:\n            print(0)\n            break\n    if p / D < 0.75:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    s = input()\n    k = int(s.count('P') / len(s) * 100)\n    if k >= 75:\n        print(0)\n    else:\n        for j in range(2, len(s) - 2):\n            if s[j] == 'A':\n                if (s[j - 1] == 'P' or s[j - 2] == 'P') and (s[j + 1] == 'P' or s[j + 2] == 'P'):\n                    c += 1\n            k = int((s.count('P') + c) / len(s) * 100)\n            if k >= 75:\n                print(c)\n                break\n        if k < 75:\n            print(-1)", "n = int(input())\nfor i in range(n):\n    c = 0\n    n = int(input())\n    x = input()\n    count = int(x.count('P') / len(x) * 100)\n    if count >= 75:\n        print(0)\n    else:\n        for a in range(2, len(x) - 2):\n            if x[a] == 'A':\n                if (x[a - 1] == 'P' or x[a - 2] == 'P') and (x[a + 1] == 'P' or x[a + 2] == 'P'):\n                    c = c + 1\n            count = int((x.count('P') + c) / len(x) * 100)\n            if count >= 75:\n                print(c)\n                break\n        if count < 75:\n            print(-1)", "n = int(input())\nfor i in range(n):\n    c = 0\n    n = int(input())\n    x = input()\n    count = int(x.count('P') / len(x) * 100)\n    if count >= 75:\n        print(0)\n    else:\n        for a in range(2, len(x) - 2):\n            if x[a] == 'A':\n                if (x[a - 1] == 'P' or x[a - 2] == 'P') and (x[a + 1] == 'P' or x[a + 2] == 'P'):\n                    c = c + 1\n            count = int((x.count('P') + c) / len(x) * 100)\n            if count >= 75:\n                print(c)\n                break\n        if count < 75:\n            print(-1)", "n = int(input())\nfor i in range(n):\n    c = 0\n    n = int(input())\n    x = input()\n    count = int(x.count('P') / len(x) * 100)\n    if count >= 75:\n        print(0)\n    else:\n        for a in range(2, len(x) - 2):\n            if x[a] == 'A':\n                if (x[a - 1] == 'P' or x[a - 2] == 'P') and (x[a + 1] == 'P' or x[a + 2] == 'P'):\n                    c = c + 1\n            count = int((x.count('P') + c) / len(x) * 100)\n            if count >= 75:\n                print(c)\n                break\n        if count < 75:\n            print(-1)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    count = s.count('P')\n    req = math.ceil(n * 75 / 100) - count\n    if req <= 0:\n        print(0)\n        continue\n    else:\n        c = 0\n        for i in range(2, len(s) - 2):\n            if s[i - 2:i].count('P') >= 1 and s[i] == 'A' and (s[i + 1:i + 3].count('P') >= 1):\n                c += 1\n    if c >= req:\n        print(req)\n    else:\n        print(-1)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    count = s.count('P')\n    req = math.ceil(n * 75 / 100) - count\n    if req <= 0:\n        print(0)\n        continue\n    else:\n        c = 0\n        for i in range(2, len(s) - 2):\n            if s[i - 2:i].count('P') >= 1 and s[i] == 'A' and (s[i + 1:i + 3].count('P') >= 1):\n                c += 1\n    if c >= req:\n        print(req)\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    s = input()\n    pcount = 0\n    for i in range(n):\n        if s[i] == 'P':\n            pcount += 1\n    per = pcount * 100 / n\n    if per >= 75:\n        print('0')\n        continue\n    acount = 0\n    f = 0\n    for i in range(2, n - 2):\n        if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n            pcount += 1\n            acount += 1\n            per = pcount * 100 / n\n            if per >= 75:\n                f = 1\n                print(acount)\n                break\n    if f == 1:\n        continue\n    per = pcount * 100 / n\n    if per >= 75:\n        print(acount)\n    else:\n        print('-1')", "for i in range(int(input())):\n    n = int(input())\n    s = str(input())\n    p = s.count('P')\n    a = n - p\n    count = 0\n    for i in range(2, n - 2):\n        if p / n < 0.75:\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                p = p + 1\n                count = count + 1\n                if p / n >= 0.75:\n                    print(count)\n                    break\n        else:\n            print(0)\n            break\n    if p / n < 0.75:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    p = s.count('P')\n    a = n - p\n    count = 0\n    for i in range(2, n - 2):\n        if p / n < 0.75:\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                p = p + 1\n                count = count + 1\n                if p / n >= 0.75:\n                    print(count)\n                    break\n        else:\n            print(0)\n            break\n    if p / n < 0.75:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    p = s.count('P')\n    a = n - p\n    count = 0\n    for i in range(2, n - 2):\n        if p / n < 0.75:\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                p = p + 1\n                count = count + 1\n                if p / n >= 0.75:\n                    print(count)\n                    break\n        else:\n            print(0)\n            break\n    if p / n < 0.75:\n        print(-1)", "for i in range(int(input())):\n    l = int(input())\n    s = input()\n    ind = 2\n    times = 0\n    sc = s.count('P')\n    for i in range(2, l - 2):\n        if sc / l < 0.75:\n            if s[i] == 'A':\n                if (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                    sc += 1\n                    times += 1\n                    if sc / l >= 0.75:\n                        print(times)\n                        break\n        else:\n            print(times)\n            break\n    if sc / l < 0.75:\n        print(-1)", "try:\n    t = int(input())\n    for _ in range(t):\n        l = int(input())\n        s = list(input())\n        ind = 2\n        times = 0\n        sc = s.count('P')\n        for i in range(2, l - 2):\n            if sc / l < 0.75:\n                if s[i] == 'A':\n                    if (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                        sc += 1\n                        times += 1\n                        if sc / l >= 0.75:\n                            print(times)\n                            break\n            else:\n                print(times)\n                break\n        if sc / l < 0.75:\n            print(-1)\nexcept:\n    pass", "T = int(input())\nfor i in range(T):\n    D = int(input())\n    S = list(input())\n    p = S.count('P')\n    time = 0\n    for j in range(2, D - 2):\n        if p / D < 0.75:\n            if S[j] == 'A' and (S[j - 1] == 'P' or S[j - 2] == 'P') and (S[j + 1] == 'P' or S[j + 2] == 'P'):\n                p = p + 1\n                time = time + 1\n                if p / D >= 0.75:\n                    print(time)\n                    break\n        else:\n            print(0)\n            break\n    if p / D < 0.75:\n        print(-1)", "for _ in range(int(input())):\n    d = int(input())\n    s = list(input())\n    c = s.count('P')\n    a = 0\n    for i in range(2, d - 2):\n        if c / d < 0.75:\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                a += 1\n                c += 1\n                if c / d >= 0.75:\n                    print(a)\n                    break\n        else:\n            print(0)\n            break\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    d = int(input())\n    s = list(input())\n    c = s.count('P')\n    a = 0\n    for i in range(2, d - 2):\n        if c / d < 0.75:\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                a += 1\n                c += 1\n                if c / d >= 0.75:\n                    print(a)\n                    break\n        else:\n            print(0)\n            break\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    d = int(input())\n    s = list(input())\n    c = s.count('P')\n    a = 0\n    for i in range(2, d - 2):\n        if c / d < 0.75:\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                a += 1\n                c += 1\n                if c / d >= 0.75:\n                    print(a)\n                    break\n        else:\n            print(0)\n            break\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    d = int(input())\n    s = list(input())\n    c = s.count('P')\n    a = 0\n    for i in range(2, d - 2):\n        if c / d < 0.75:\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                a += 1\n                c += 1\n                if c / d >= 0.75:\n                    print(a)\n                    break\n        elif c / d >= 0.75:\n            print(0)\n            break\n    else:\n        print(-1)", "try:\n    t = int(input())\n    for i in range(t):\n        d = int(input())\n        s = list(input())\n        p = 0\n        a = 0\n        for i in range(d):\n            if s[i] == 'P':\n                a = a + 1\n        for i in range(2, d - 2):\n            if a / d < 0.75:\n                if s[i] == 'A':\n                    if (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                        p = p + 1\n                        a = a + 1\n            else:\n                break\n        if a / d >= 0.75:\n            print(p)\n        else:\n            print(-1)\nexcept:\n    pass", "try:\n    t = int(input())\n    for i in range(t):\n        d = int(input())\n        s = list(input())\n        p = 0\n        a = 0\n        for i in range(d):\n            if s[i] == 'P':\n                a = a + 1\n        for i in range(2, d - 2):\n            if a / d < 0.75:\n                if s[i] == 'A':\n                    if (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                        p = p + 1\n                        a = a + 1\n            else:\n                break\n        if a / d >= 0.75:\n            print(p)\n        else:\n            print(-1)\nexcept:\n    pass", "import math\nfor h in range(int(input())):\n    n = int(input())\n    mind = 75 * n / 100\n    mind = math.ceil(mind)\n    s = input()\n    ans = s.count('P')\n    ans1 = 0\n    f = 0\n    if ans >= mind:\n        print(0)\n    else:\n        for i in range(2, len(s) - 2):\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                ans1 += 1\n            if ans1 + ans >= mind:\n                print(ans1)\n                f = 1\n                break\n        if f == 0:\n            print(-1)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    p = s.count('P')\n    a = math.ceil(0.75 * n)\n    c = 0\n    if p >= a:\n        print('0')\n    else:\n        for i in range(2, n - 2):\n            if s[i] == 'A' and (s[i - 2] == 'P' or s[i - 1] == 'P') and (s[i + 2] == 'P' or s[i + 1] == 'P'):\n                c += 1\n        if c + p >= a:\n            print(a - p)\n        else:\n            print('-1')", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(input())\n    p = s.count('P')\n    count = p\n    n75 = math.ceil(n * 3 / 4)\n    for i in range(2, n - 2):\n        if s[i] == 'A':\n            if (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                count += 1\n    if p >= n75:\n        print('0')\n    elif count >= n75:\n        print(math.ceil(n75 - p))\n    else:\n        print(-1)", "import math\nfor i in range(int(input())):\n    l = int(input())\n    a = input()\n    p = math.ceil(len(a) * 3 / 4)\n    ctp = a.count('P')\n    if p - ctp >= 0:\n        res = p - ctp\n    else:\n        res = 0\n    for x in range(2, l - 2):\n        if ctp < p:\n            if a[x] == 'A' and (a[x - 1] == 'P' or a[x - 2] == 'P') and (a[x + 1] == 'P' or a[x + 2] == 'P'):\n                ctp += 1\n    if ctp < p:\n        print(-1)\n    else:\n        print(res)", "for _ in range(int(input())):\n    n = int(input())\n    output = []\n    days = input()\n    for day in days:\n        output.append(day)\n    count = 0\n    for i in range(2, n - 1):\n        if output.count('P') / n >= 0.75:\n            print(count)\n            break\n        if days[i] == 'A':\n            if 'P' in days[i + 1:i + 3] and 'P' in days[i - 2:i]:\n                output[i] = 'P'\n                count += 1\n    else:\n        print(-1)", "from math import ceil\nfor _ in range(int(input())):\n    d = int(input())\n    att = input()\n    count_abs = 0\n    count_proxy = 0\n    for i in range(d):\n        if att[i] == 'A':\n            count_abs += 1\n            if i not in [0, 1, d - 2, d - 1] and (att[i - 1] == 'P' or att[i - 2] == 'P') and (att[i + 1] == 'P' or att[i + 2] == 'P'):\n                count_proxy += 1\n    req_proxy = count_abs - d + ceil(d * 0.75)\n    if req_proxy < 0:\n        req_proxy = 0\n    if req_proxy <= count_proxy:\n        print(req_proxy)\n    else:\n        print('-1')", "T = int(input())\nfor i in range(T):\n    d = int(input())\n    s = input()\n    ad = 3 * d / 4\n    cou = s.count('P')\n    if cou >= ad:\n        print(0)\n    else:\n        proxy = 0\n        i = 2\n        while cou < ad and i < len(s) - 2:\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                cou += 1\n                proxy += 1\n            i += 1\n        if ad > cou:\n            print(-1)\n        else:\n            print(proxy)", "T = int(input())\nfor i in range(T):\n    d = int(input())\n    s = input()\n    ad = 3 * d / 4\n    cou = s.count('P')\n    if cou >= ad:\n        print(0)\n    else:\n        proxy = 0\n        i = 2\n        while cou < ad and i < len(s) - 2:\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                cou += 1\n                proxy += 1\n            i += 1\n        if ad > cou:\n            print(-1)\n        else:\n            print(proxy)", "t = int(input())\nwhile t > 0:\n    d = int(input())\n    s = input()\n    ad = 3 * d / 4\n    cou = s.count('P')\n    if cou >= ad:\n        print(0)\n    else:\n        proxy = 0\n        i = 2\n        while cou < ad and i < len(s) - 2:\n            if s[i] == 'A' and (s[i - 1] == 'P' or s[i - 2] == 'P') and (s[i + 1] == 'P' or s[i + 2] == 'P'):\n                cou += 1\n                proxy += 1\n            i += 1\n        if ad > cou:\n            print(-1)\n        else:\n            print(proxy)\n    t -= 1"]