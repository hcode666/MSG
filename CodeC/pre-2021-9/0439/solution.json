["def solve():\n    num = int(input())\n    tmp = bin(num)[2:]\n    a = ''\n    b = ''\n    flag = True\n    for i in tmp:\n        if i == '1':\n            if flag:\n                a += '1'\n                b += '0'\n                flag = False\n            else:\n                a += '0'\n                b += '1'\n        else:\n            a += '1'\n            b += '1'\n    print(int(a, 2) * int(b, 2))\nt = int(input())\nwhile t != 0:\n    t -= 1\n    solve()", "def largest(i):\n    k = 2\n    while k <= i:\n        k = k * 2\n    return k\ni = int(input())\nlistk = []\nfor _ in range(i):\n    listno = []\n    kk = int(input())\n    max = 0\n    ls = largest(kk)\n    no = ''\n    for k in range(len(format(kk, 'b'))):\n        if k == 0:\n            no = '1'\n        elif str(format(kk, 'b'))[k] == '0':\n            no = no + '1'\n        elif str(format(kk, 'b'))[k] == '1':\n            no = no + '0'\n    max = int(no, 2) * (int(no, 2) ^ kk)\n    listk.append(max)\nfor ele in listk:\n    print(ele)", "def Power(n):\n    (ans, x) = (1, 2)\n    while n != 0:\n        if n & 1 == 1:\n            ans = ans * x\n        n = n >> 1\n        x = x * x\n    return ans\nfor _ in range(int(input())):\n    c = int(input())\n    (s1, s2, d) = (0, 0, 0)\n    for i in range(31, -1, -1):\n        if c >> i & 1 == 1 and s1 == 0:\n            s1 = s1 + Power(i)\n            d = i\n        elif c >> i & 1 == 1 and s1 != 0:\n            s2 = s2 + Power(i)\n        if c >> i & 1 == 0 and s1 != 0:\n            s1 = s1 + Power(i)\n            s2 = s2 + Power(i)\n    if s1 >= Power(d + 1):\n        s1 = s1 - 1\n    if s2 >= Power(d + 1):\n        s2 = s2 - 1\n    print(s1 * s2)", "def solve():\n    num = int(input())\n    tmp = bin(num)[2:]\n    a = ''\n    b = ''\n    flag = True\n    for i in tmp:\n        if i == '1':\n            if flag:\n                a += '1'\n                b += '0'\n                flag = False\n            else:\n                a += '0'\n                b += '1'\n        else:\n            a += '1'\n            b += '1'\n    print(int(a, 2) * int(b, 2))\nt = int(input())\nwhile t != 0:\n    t -= 1\n    solve()", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nt = int(input())\nwhile t:\n    t -= 1\n    c = int(input())\n    i = 0\n    while 1 << i <= c:\n        i += 1\n    a = 0\n    b = 0\n    flag = True\n    for j in range(i - 1, -1, -1):\n        if c & 1 << j == 0:\n            a |= 1 << j\n            b |= 1 << j\n        elif flag:\n            b |= 1 << j\n            flag = False\n        else:\n            a |= 1 << j\n    print(a * b)", "for i in range(int(input())):\n    n = int(input())\n    b = bin(n)[2:]\n    p = ''\n    q = ''\n    i = 0\n    t = 'p'\n    while i < len(b):\n        if b[i] == '1':\n            p1 = p + '1'\n            q1 = q + '0'\n            p2 = p + '0'\n            q2 = q + '1'\n            if int(p1, 2) * int(q1, 2) > int(p2, 2) * int(q2, 2):\n                p = p1\n                q = q1\n            else:\n                p = p2\n                q = q2\n        else:\n            p += '1'\n            q += '1'\n        i += 1\n    print(int(p, 2) * int(q, 2))", "def Power(n):\n    (ans, x) = (1, 2)\n    while n != 0:\n        if n & 1 == 1:\n            ans = ans * x\n        n = n >> 1\n        x = x * x\n    return ans\nfor _ in range(int(input())):\n    c = int(input())\n    (s1, s2, d) = (0, 0, 0)\n    for i in range(31, -1, -1):\n        if c >> i & 1 == 1 and s1 == 0:\n            s1 = s1 + Power(i)\n            d = i\n        elif c >> i & 1 == 1 and s1 != 0:\n            s2 = s2 + Power(i)\n        if c >> i & 1 == 0 and s1 != 0:\n            s1 = s1 + Power(i)\n            s2 = s2 + Power(i)\n    if s1 >= Power(d + 1):\n        s1 = s1 - 1\n    if s2 >= Power(d + 1):\n        s2 = s2 - 1\n    print(s1 * s2)", "import math\nfor _ in range(int(input())):\n    c = int(input())\n    d = int(math.log(c, 2))\n    a = 2 ** d - 1\n    b = c ^ a\n    print(b * a)", "from math import log\nfor _ in range(int(input())):\n    c = int(input())\n    k = int(log(c, 2))\n    a = pow(2, k) - 1\n    b = c ^ a\n    print(a * b)", "from math import log\nfor _ in range(int(input())):\n    c = int(input())\n    k = int(log(c, 2))\n    a = pow(2, k) - 1\n    b = c ^ a\n    print(a * b)", "T = int(input())\nfor t in range(T):\n    C = bin(int(input()))\n    if C == '0b1':\n        print(0)\n    else:\n        A = '0b1'\n        B = '0b'\n        for i in range(3, len(C)):\n            B += '1'\n            if C[i] == '1':\n                A += '0'\n            else:\n                A += '1'\n        print(int(A, 2) * int(B, 2))", "t = int(input())\nfor u in range(t):\n    n = int(input())\n    a = b = 0\n    i = 0\n    while n > 1:\n        r = n % 2\n        if r:\n            b += 2 ** i\n        else:\n            a += 2 ** i\n            b += 2 ** i\n        n //= 2\n        i += 1\n    a += 2 ** i\n    print(a * b)", "def Power(n):\n    (ans, x) = (1, 2)\n    while n != 0:\n        if n & 1 == 1:\n            ans = ans * x\n        n = n >> 1\n        x = x * x\n    return ans\nfor _ in range(int(input())):\n    c = int(input())\n    (s1, s2, d) = (0, 0, 0)\n    for i in range(31, -1, -1):\n        if c >> i & 1 == 1 and s1 == 0:\n            s1 = s1 + Power(i)\n            d = i\n        elif c >> i & 1 == 1 and s1 != 0:\n            s2 = s2 + Power(i)\n        if c >> i & 1 == 0 and s1 != 0:\n            s1 = s1 + Power(i)\n            s2 = s2 + Power(i)\n    if s1 >= Power(d + 1):\n        s1 = s1 - 1\n    if s2 >= Power(d + 1):\n        s2 = s2 - 1\n    print(s1 * s2)", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    c = int(input())\n    n = int(math.log(c) / math.log(2))\n    n += 1\n    j = 1\n    k = -1\n    a = 0\n    b = 0\n    for i in range(n):\n        if c % 2:\n            b += j\n            k = j\n        else:\n            a += j\n            b += j\n        j *= 2\n        c //= 2\n    if k != -1:\n        b -= k\n        a += k\n    print(a * b)", "def Power(n):\n    (ans, x) = (1, 2)\n    while n != 0:\n        if n & 1 == 1:\n            ans = ans * x\n        n = n >> 1\n        x = x * x\n    return ans\nfor _ in range(int(input())):\n    c = int(input())\n    (s1, s2, d) = (0, 0, 0)\n    for i in range(31, -1, -1):\n        if c >> i & 1 == 1 and s1 == 0:\n            s1 = s1 + Power(i)\n            d = i\n        elif c >> i & 1 == 1 and s1 != 0:\n            s2 = s2 + Power(i)\n        if c >> i & 1 == 0 and s1 != 0:\n            s1 = s1 + Power(i)\n            s2 = s2 + Power(i)\n    if s1 >= Power(d + 1):\n        s1 = s1 - 1\n    if s2 >= Power(d + 1):\n        s2 = s2 - 1\n    print(s1 * s2)", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    c = int(input())\n    n = int(math.log(c) / math.log(2))\n    n += 1\n    j = 1\n    k = -1\n    a = 0\n    b = 0\n    for i in range(n):\n        if c % 2:\n            b += j\n            k = j\n        else:\n            a += j\n            b += j\n        j *= 2\n        c //= 2\n    if k != -1:\n        b -= k\n        a += k\n    print(a * b)", "def toBin(n):\n    return bin(n).replace('0b', ' ')\n\ndef solve(n):\n    s = str(toBin(n))\n    a = []\n    b = []\n    for i in range(len(s)):\n        if s[i] == '1':\n            if a.count('1') == 0:\n                a.append('1')\n                b.append('0')\n            else:\n                b.append('1')\n                a.append('0')\n        elif s[i] == '0':\n            a.append('1')\n            b.append('1')\n    a = ''.join(a)\n    b = ''.join(b)\n    a = int(a, 2)\n    b = int(b, 2)\n    return a * b\nfor _ in range(int(input())):\n    c = int(input())\n    print(solve(c))", "from math import log\nfor _ in range(int(input())):\n    A = B = 0\n    C = int(input())\n    bits = int(log(C) / log(2)) + 1\n    bin_str = ''\n    for _ in range(bits):\n        remainder = str(C % 2)\n        bin_str += remainder\n        C = int(C / 2)\n    bin_str = bin_str[::-1]\n    taken = False\n    for i in range(bits):\n        if bin_str[i] == '0':\n            A += 2 ** (bits - 1 - i)\n            B += 2 ** (bits - 1 - i)\n        elif taken is False:\n            taken = True\n            A += 2 ** (bits - 1 - i)\n        else:\n            B += 2 ** (bits - 1 - i)\n    print(A * B)", "for _ in range(int(input())):\n    n = int(input())\n    x = bin(n).replace('0b', '')\n    res = pow(2, len(x))\n    res //= 2\n    print((res - 1) * (n ^ res - 1))", "t = int(input())\nfor _ in range(t):\n    num = int(input())\n    a = 0\n    b = 0\n    count = 0\n    while num != 0:\n        if num & 1:\n            if num >> 1 == 0:\n                a |= 1 << count\n            else:\n                b |= 1 << count\n        else:\n            a |= 1 << count\n            b |= 1 << count\n        num >>= 1\n        count += 1\n    print(a * b)", "import math\ntests = int(input())\nfor i in range(tests):\n    num = int(input())\n    a = 0\n    b = 0\n    count = 0\n    while num != 0:\n        if num & 1:\n            if num >> 1 == 0:\n                a |= 1 << count\n            else:\n                b |= 1 << count\n        else:\n            a |= 1 << count\n            b |= 1 << count\n        num >>= 1\n        count += 1\n    print(a * b)", "import sys\nimport math\nfrom functools import cmp_to_key\nfrom collections import OrderedDict\nsys.setrecursionlimit(10 ** 9)\n\ndef solve():\n    for t in range(int(input())):\n        c = int(input())\n        n = int(math.log2(c))\n        a = 0\n        b = 0\n        flag = True\n        for i in range(n, -1, -1):\n            if c & 1 << i == 0:\n                a += 1 << i\n                b += 1 << i\n            elif flag:\n                a += 1 << i\n                flag = False\n            else:\n                b += 1 << i\n        print(a * b)\nsolve()", "for _ in range(int(input())):\n    s = int(input())\n    s = bin(s).replace('0b', '')\n    a = ''\n    b = ''\n    count = 0\n    for i in s:\n        if i == '0':\n            a += '1'\n            b += '1'\n        elif i == '1':\n            if count == 0:\n                a += '1'\n                b += '0'\n                count += 1\n            else:\n                b += '1'\n                a += '0'\n    print(int(a, 2) * int(b, 2))", "t = int(input())\nwhile t > 0:\n    c = 0\n    n = int(input())\n    m = n\n    while m != 0:\n        m = m >> 1\n        c += 1\n    a_ = 0\n    b_ = 0\n    flag = False\n    for i in range(c - 1, -1, -1):\n        mask = 1 << i\n        val = n & mask\n        if val == 0:\n            a_ = a_ | 1 << i\n            b_ = b_ | 1 << i\n        elif flag == False:\n            a_ = a_ | 1 << i\n            flag = True\n        else:\n            b_ = b_ | 1 << i\n    print(a_ * b_)\n    t -= 1", "for _ in range(int(input())):\n    c = int(input())\n    d = len(bin(c)) - 2\n    x = 2 ** (d - 1) - 1\n    print(x * (c ^ x))", "for _ in range(int(input())):\n    n = int(input())\n    x = bin(n).replace('0b', '')\n    p = 1 << len(x) + 1 - 1\n    p //= 2\n    print((p - 1) * (n ^ p - 1))", "for _ in range(int(input())):\n    n = int(input())\n    x = bin(n).replace('0b', '')\n    p = pow(2, len(x))\n    p //= 2\n    print((p - 1) * (n ^ p - 1))", "import math\n\ndef function(C, A, B, index, hashTable):\n    n = math.floor(math.log2(C))\n    z = (1 << n) - 1\n    return z * (z ^ C)\n\ndef main():\n    T = int(input())\n    for _ in range(T):\n        C = int(input())\n        val = function(C, 0, 0, 0, {})\n        print(val)\nmain()", "def main():\n    T = int(input())\n    for counter in range(T):\n        ans = 0\n        a = ''\n        b = ''\n        c = int(input())\n        cbin = bin(c)[2:]\n        d = len(cbin)\n        cbin = str(cbin)\n        countera = 0\n        counterb = 0\n        for i in range(len(cbin)):\n            if cbin[i] == '0':\n                a += '1'\n                b += '1'\n            elif countera > counterb:\n                a += '0'\n                b += '1'\n                counterb += 2 ** (d - i)\n            else:\n                a += '1'\n                b += '0'\n                countera += 2 ** (d - i)\n        ans = int(a, 2) * int(b, 2)\n        print(ans)\nmain()", "from math import *\nfor _ in range(int(input())):\n    c = int(input())\n    k = 1 << int(log2(c))\n    e = (k << 1) - 1\n    print((e ^ k) * (e ^ k ^ c))", "try:\n    for i in range(int(input())):\n        n = int(input())\n        bi = bin(n).replace('0b', '')\n        a = 2 ** len(bi) // 2\n        l = 2 ** len(bi) - 1\n        b = l - (n - a)\n        a -= 1\n        print(a * b)\nexcept Exception as e:\n    print(e)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = ''\n    while n >= 1:\n        a = str(n % 2) + a\n        n = n // 2\n    c = 1\n    p = ''\n    q = ''\n    for i in a:\n        if i == '1':\n            if c == 1:\n                p = p + '1'\n                q = q + '0'\n                c = c + 1\n            else:\n                q = q + '1'\n                p = p + '0'\n        else:\n            p = p + '1'\n            q = q + '1'\n    i = 0\n    x = 0\n    while True:\n        if p == '':\n            break\n        else:\n            x = x + int(p[-1]) * 2 ** i\n            p = p[0:-1]\n            i = i + 1\n    j = 0\n    y = 0\n    while True:\n        if q == '':\n            break\n        else:\n            y = y + int(q[-1]) * 2 ** j\n            q = q[0:-1]\n            j = j + 1\n    print(x * y)", "for _ in range(int(input())):\n    n = int(input())\n    binary = bin(n)\n    binary = binary[2:]\n    a = '1'\n    b = '0'\n    for i in range(1, len(binary)):\n        if binary[i] == '1':\n            b += '1'\n            a += '0'\n        else:\n            a += '1'\n            b += '1'\n    print(int(a, 2) * int(b, 2))", "for _ in range(int(input())):\n    n = int(input())\n    binary = bin(n)\n    binary = binary[2:]\n    a = ''\n    b = ''\n    for i in range(len(binary)):\n        if binary[i] == '1':\n            temp_1 = a + '1'\n            temp_2 = b + '0'\n            temp_3 = a + '0'\n            temp_4 = b + '1'\n            if int(temp_1, 2) * int(temp_2, 2) > int(temp_3, 2) * int(temp_4, 2):\n                a = temp_1\n                b = temp_2\n            else:\n                a = temp_3\n                b = temp_4\n        else:\n            a += '1'\n            b += '1'\n    print(int(a, 2) * int(b, 2))", "import math\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    c = bin(x).replace('0b', ' ')\n    a = int(math.log2(x)) + 1\n    b = '1' * a\n    b = int(b, 2)\n    c = int(c, 2)\n    d = b ^ c\n    d = d | 1 << a - 1\n    b = b & ~(1 << a - 1)\n    print(b * d)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = '{0:b}'.format(n)\n    b = list(b)\n    x = ''\n    y = ''\n    flag = False\n    for i in range(len(b)):\n        if not flag and b[i] == '1':\n            x += '1'\n            y += '0'\n            flag = True\n        elif b[i] == '1':\n            x += '0'\n            y += '1'\n        else:\n            x += '1'\n            y += '1'\n    res_1 = 0\n    res_2 = 0\n    for i in range(len(x)):\n        res_1 += int(x[i]) * 2 ** (len(x) - (i + 1))\n        res_2 += int(y[i]) * 2 ** (len(y) - (i + 1))\n    print(res_1 * res_2)", "for _ in range(int(input())):\n    n = int(input())\n    bi = bin(n)[2:]\n    f = False\n    a = ''\n    b = ''\n    for i in range(len(bi)):\n        if not f and bi[i] == '1':\n            a += '1'\n            b += '0'\n            f = True\n        elif bi[i] == '1':\n            a += '0'\n            b += '1'\n        else:\n            a += '1'\n            b += '1'\n    print(int(a, 2) * int(b, 2))", "for _ in range(int(input())):\n    c = int(input())\n    b = bin(c)[2:]\n    o = []\n    for i in range(len(b)):\n        if i == 0:\n            o.append('1')\n        elif b[i] == '1':\n            o.append('0')\n        else:\n            o.append('1')\n    n1 = int(''.join(o), 2)\n    n2 = c ^ n1\n    print(n1 * n2)", "for _ in range(int(input())):\n    c = int(input())\n    b = bin(c)[2:]\n    o = []\n    for i in range(len(b)):\n        if i == 0:\n            o.append('1')\n        elif b[i] == '1':\n            o.append('0')\n        else:\n            o.append('1')\n    n1 = int(''.join(o), 2)\n    n2 = c ^ n1\n    print(n1 * n2)", "for _ in range(int(input())):\n    c = int(input())\n    b = bin(c)[2:]\n    o = []\n    for i in range(len(b)):\n        if i == 0:\n            o.append('1')\n        elif b[i] == '1':\n            o.append('0')\n        else:\n            o.append('1')\n    n1 = int(''.join(o), 2)\n    n2 = c ^ n1\n    print(n1 * n2)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    c = bin(n).replace('0b', ' ')\n    a = int(math.log2(n)) + 1\n    b = '1' * a\n    b = int(b, 2)\n    c = int(c, 2)\n    d = b ^ c\n    d = d | 1 << a - 1\n    b = b & ~(1 << a - 1)\n    print(b * d)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    c = bin(n).replace('0b', '')\n    a = int(math.log2(n)) + 1\n    b = '1' * a\n    b = int(b, 2)\n    c = int(c, 2)\n    d = b ^ c\n    d = d | 1 << a - 1\n    b = b & ~(1 << a - 1)\n    print(b * d)", "try:\n    for i in range(int(input())):\n        n = int(input())\n        bi = bin(n).replace('0b', '')\n        a = 2 ** len(bi) // 2\n        l = 2 ** len(bi) - 1\n        b = l - (n - a)\n        a -= 1\n        print(a * b)\nexcept Exception as e:\n    print(e)", "try:\n    for i in range(int(input())):\n        n = int(input())\n        bi = bin(n).replace('0b', '')\n        a = 2 ** len(bi) // 2\n        l = 2 ** len(bi) - 1\n        b = l - (n - a)\n        a -= 1\n        print(a * b)\nexcept Exception as e:\n    print(e)", "t = int(input())\nfor i in range(t):\n    c = int(input())\n    msb = 0\n    for i in range(32, -1, -1):\n        if 1 << i & c:\n            msb = i\n            break\n    (a, b) = (0, 0)\n    f = 1\n    for i in range(msb, -1, -1):\n        if 1 << i & c:\n            if f:\n                a |= 1 << i\n                f = 0\n            else:\n                b |= 1 << i\n        else:\n            a |= 1 << i\n            b |= 1 << i\n    print(a * b)", "p = int(input())\nfor i in range(p):\n    c = int(input())\n    w = bin(c)[2:]\n    a = ''\n    b = ''\n    se = False\n    for i in range(len(w)):\n        if not se and w[i] == '1':\n            a += '1'\n            b += '0'\n            se = True\n        elif w[i] == '1':\n            a += '0'\n            b += '1'\n        else:\n            a += '1'\n            b += '1'\n    print(int(a, 2) * int(b, 2))", "import math\nfor i in range(int(input())):\n    n = int(input())\n    r = bin(n)\n    x = len(r) - 2\n    z = math.pow(2, x)\n    g = math.pow(2, x - 1)\n    z = int(z)\n    g = int(g)\n    d = n - (g - 1)\n    b = z - d\n    a = g - 1\n    print(a * b)", "p = int(input())\nfor i in range(p):\n    c = int(input())\n    w = bin(c)[2:]\n    a = ''\n    b = ''\n    se = False\n    for i in range(len(w)):\n        if not se and w[i] == '1':\n            a += '1'\n            b += '0'\n            se = True\n        elif w[i] == '1':\n            a += '0'\n            b += '1'\n        else:\n            a += '1'\n            b += '1'\n    print(int(a, 2) * int(b, 2))", "t = int(input())\nfor i in range(t):\n    c = int(input())\n    w = bin(c)[2:]\n    a = ''\n    b = ''\n    se = False\n    for i in range(len(w)):\n        if not se and w[i] == '1':\n            a += '1'\n            b += '0'\n            se = True\n        elif w[i] == '1':\n            a += '0'\n            b += '1'\n        else:\n            a += '1'\n            b += '1'\n    print(int(a, 2) * int(b, 2))", "for _ in range(int(input())):\n    c = int(input())\n    binary = bin(c).replace('0b', '')\n    a = 0\n    b = 0\n    for i in range(len(binary)):\n        if binary[i] == '0':\n            a += 2 ** (len(binary) - i - 1)\n            b += 2 ** (len(binary) - i - 1)\n        elif i == 0:\n            a += 2 ** (len(binary) - 1)\n        else:\n            b += 2 ** (len(binary) - 1 - i)\n    print(a * b)", "for _ in range(int(input())):\n    c = int(input())\n    binary = bin(c).replace('0b', '')\n    a = 0\n    b = 0\n    for i in range(len(binary)):\n        if binary[i] == '0':\n            a += 2 ** (len(binary) - i - 1)\n            b += 2 ** (len(binary) - i - 1)\n        elif i == 0:\n            a += 2 ** (len(binary) - 1)\n        else:\n            b += 2 ** (len(binary) - 1 - i)\n    print(a * b)", "T = int(input())\nfor _ in range(T):\n    C = int(input())\n    (A, B) = ('1', '0')\n    for i in bin(C)[3:]:\n        if i == '0':\n            A += '1'\n            B += '1'\n        else:\n            B += '1'\n            A += '0'\n    print(int(A, 2) * int(B, 2))", "for _ in range(int(input())):\n    c = int(input())\n    binary = bin(c).replace('0b', '')\n    a = 0\n    b = 0\n    for i in range(len(binary)):\n        if binary[i] == '0':\n            a += 2 ** (len(binary) - i - 1)\n            b += 2 ** (len(binary) - i - 1)\n        elif i == 0:\n            a += 2 ** (len(binary) - 1)\n        else:\n            b += 2 ** (len(binary) - i - 1)\n    print(a * b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    n = bin(n).replace('0b', '')\n    leng = len(n)\n    a = str()\n    b = str()\n    a1 = 1\n    for i in range(leng):\n        if n[i] == '1' and a1 == 1:\n            a = a + '1'\n            b = b + '0'\n            a1 = 0\n        elif n[i] == '0':\n            a = a + '1'\n            b = b + '1'\n        elif n[i] == '1':\n            a = a + '0'\n            b = b + '1'\n    a = '0b' + a\n    b = '0b' + b\n    a = int(a, 2)\n    b = int(b, 2)\n    print(a * b)", "def decimalToBinary(n):\n    return bin(n).replace('0b', '')\nfor i in range(int(input())):\n    n = int(input())\n    binary = decimalToBinary(n)\n    a1 = 0\n    a2 = 0\n    for i in range(len(binary)):\n        if binary[i] == '0':\n            a1 = a1 * 2 + 1\n            a2 = a2 * 2 + 1\n        if binary[i] == '1':\n            if i == 0:\n                a1 = a1 * 2 + 1\n                a2 = a2 * 2\n            elif a1 > a2:\n                a1 = a1 * 2\n                a2 = a2 * 2 + 1\n            else:\n                a1 = a1 * 2 + 1\n                a2 = a2 * 2\n    print(a1 * a2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    n = bin(n).replace('0b', '')\n    leng = len(n)\n    a = str()\n    b = str()\n    a1 = 1\n    for i in range(leng):\n        if n[i] == '1' and a1 == 1:\n            a = a + '1'\n            b = b + '0'\n            a1 = 0\n        elif n[i] == '0':\n            a = a + '1'\n            b = b + '1'\n        elif n[i] == '1':\n            a = a + '0'\n            b = b + '1'\n    a = '0b' + a\n    b = '0b' + b\n    a = int(a, 2)\n    b = int(b, 2)\n    print(a * b)", "for _ in range(int(input())):\n    y = int(input())\n    b = bin(y).replace('0b', '')\n    b = str(b)\n    ans = ['1']\n    for j in range(1, len(b)):\n        if b[j] == '0':\n            ans.append('1')\n        else:\n            ans.append('0')\n    a = ''.join(ans)\n    a = int(a, 2)\n    b = int(b, 2)\n    r = a ^ b\n    print(a * r)", "for _ in range(int(input())):\n    y = int(input())\n    b = bin(y).replace('0b', '')\n    b = str(b)\n    ans = ['1']\n    for j in range(1, len(b)):\n        if b[j] == '0':\n            ans.append('1')\n        else:\n            ans.append('0')\n    a = ''.join(ans)\n    a = int(a, 2)\n    b = int(b, 2)\n    r = a ^ b\n    print(a * r)", "x = int(input())\nfor _ in range(x):\n    y = int(input())\n    b = bin(y).replace('0b', '')\n    b = str(b)\n    ans = ['1']\n    for j in range(1, len(b)):\n        if b[j] == '0':\n            ans.append('1')\n        else:\n            ans.append('0')\n    a = ''.join(ans)\n    a = int(a, 2)\n    b = int(b, 2)\n    r = a ^ b\n    print(a * r)", "for i in range(int(input())):\n    c = int(input())\n    b = bin(c).replace('0b', '')\n    b = str(b)\n    ans = ['1']\n    for j in range(1, len(b)):\n        if b[j] == '0':\n            ans.append('1')\n        else:\n            ans.append('0')\n    a = ''.join(ans)\n    a = int(a, 2)\n    b = int(b, 2)\n    r = a ^ b\n    print(a * r)", "for i in range(int(input())):\n    c = int(input())\n    b = bin(c).replace('0b', '')\n    b = str(b)\n    a = '1'\n    r = '0'\n    for j in range(1, len(b)):\n        if b[j] == '0':\n            a += '1'\n            r += '1'\n        else:\n            a += '0'\n            r += '1'\n    a = int(a, 2)\n    b = int(b, 2)\n    r = int(r, 2)\n    print(a * r)", "for i in range(int(input())):\n    c = int(input())\n    b = bin(c).replace('0b', '')\n    b = str(b)\n    a = '1'\n    for j in range(1, len(b)):\n        if b[j] == '0':\n            a += '1'\n        else:\n            a += '0'\n    a = int(a, 2)\n    b = int(b, 2)\n    r = a ^ b\n    print(a * r)", "for _ in range(int(input())):\n    n = int(input())\n    s = bin(n)[2:]\n    l = len(s)\n    (x, y) = ('', '')\n    for i in range(l):\n        if i == 0:\n            if s[i] == '1':\n                x += '1'\n                y += '0'\n            else:\n                x += '1'\n                y += '1'\n        elif s[i] == '1':\n            x += '0'\n            y += '1'\n        else:\n            x += '1'\n            y += '1'\n    x = int(x, 2)\n    y = int(y, 2)\n    print(x * y)", "for t in range(int(input())):\n    c = int(input())\n    a = 0\n    b = 0\n    msbc = 0\n    for i in range(31, -1, -1):\n        if 1 << i & c:\n            msbc = i\n            break\n    flag = True\n    for i in range(msbc, -1, -1):\n        if 1 << i & c:\n            if flag:\n                a |= 1 << i\n                flag = False\n            else:\n                b |= 1 << i\n        else:\n            a |= 1 << i\n            b |= 1 << i\n    print(a * b)", "for _ in range(int(input())):\n    n = int(input())\n    c = bin(n).replace('0b', '')\n    a = ''\n    b = ''\n    c = list(c)\n    f = 1\n    for i in range(len(c)):\n        if c[i] == '1' and f == 1:\n            a += '1'\n            b += '0'\n            f = 0\n        elif c[i] == '1' and f == 0:\n            b += '1'\n            a += '0'\n        elif c[i] == '0':\n            a += '1'\n            b += '1'\n    print(int(a, 2) * int(b, 2))", "t = int(input())\nfor _ in range(t):\n    C = int(input())\n    d = len(bin(C)) - 2\n    A = 2 ** d - 1 ^ C\n    B = A\n    A |= 2 ** (d - 1)\n    C ^= 2 ** (d - 1)\n    B = B | C\n    print(A * B)", "import math\nfor i in range(int(input())):\n    N = int(input())\n    p = math.floor(math.log2(N))\n    p = 2 ** p - 1\n    k = p ^ N\n    print(k * p)", "import math\nfor i in range(int(input())):\n    N = int(input())\n    p = math.floor(math.log2(N))\n    p = 2 ** p - 1\n    k = p ^ N\n    print(k * p)", "for i in range(int(input())):\n    c = int(input())\n    a = 0\n    b = 0\n    t = 0\n    for j in range(32, -1, -1):\n        r = c & 1 << j\n        if r > 0:\n            if t == 0:\n                t = 1\n            if a < b:\n                a += r\n            else:\n                b += r\n        elif t != 0:\n            a += 1 << j\n            b += 1 << j\n    print(a * b)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    s = bin(n)[2:]\n    p = 0\n    sec = 0\n    x = 0\n    for z in range(len(s) - 1, -1, -1):\n        if s[z] == '0':\n            p = p + 2 ** x\n            sec = sec + 2 ** x\n            x += 1\n        else:\n            if z == 0:\n                p = p + 2 ** x\n            else:\n                sec = sec + 2 ** x\n            x += 1\n    print(p * sec)", "def decimalToBinary(n):\n    return bin(n).replace('0b', '')\ncase = int(input())\nfor i in range(case):\n    c = int(input())\n    n = str(decimalToBinary(c))\n    a = [0] * len(n)\n    b = [0] * len(n)\n    a[0] = 1\n    for i in range(1, len(n)):\n        if n[i] == '0':\n            a[i] = 1\n            b[i] = 1\n        else:\n            b[i] = 1\n    k = len(n) - 1\n    A = 0\n    B = 0\n    i = 0\n    while k >= 0:\n        A += 2 ** k * a[i]\n        B += 2 ** k * b[i]\n        i += 1\n        k -= 1\n    print(A * B)", "import sys\nimport math\nfrom collections import defaultdict, Counter, deque\nfrom heapq import heapify, heappop, heappush\n\nclass Solution:\n\n    def __init__(self, n):\n        self.n = n\n\n    def numOfDigits(self, n):\n        d = 0\n        while n:\n            (d, n) = (d + 1, n >> 1)\n        return d\n\n    def exec(self):\n        a = b = 0\n        d = self.numOfDigits(self.n)\n        for i in range(d - 1, -1, -1):\n            if self.n & 1 << i:\n                c = a | 1 << i\n                d = b | 1 << i\n                if c * b > a * d:\n                    a = c\n                else:\n                    b = d\n            else:\n                a |= 1 << i\n                b |= 1 << i\n        print(a * b)\ntest_cases = int(input())\nfor t in range(1, test_cases + 1):\n    n = int(input())\n    Solution(n).exec()", "import math\nfor _ in range(int(input())):\n    p = int(input())\n    q = int(math.log(p, 2))\n    a = 2 ** q - 1\n    b = p ^ a\n    print(a * b)", "import math\nfor _ in range(int(input())):\n    p = int(input())\n    q = int(math.log(p, 2))\n    a = 2 ** q - 1\n    b = p ^ a\n    print(a * b)", "import math\nfor _ in range(int(input())):\n    x = int(input())\n    t = int(math.log(x, 2))\n    a = 2 ** t - 1\n    b = x ^ a\n    print(a * b)", "for _ in range(int(input())):\n    x = int(input())\n    a = '1'\n    b = '0'\n    x = bin(x)[2:]\n    for i in x[1:]:\n        if i == '0':\n            a += '1'\n            b += '1'\n        else:\n            b += '1'\n            a += '0'\n    print(int(a, 2) * int(b, 2))", "for _ in range(int(input())):\n    c = int(input())\n    id = 0\n    a = 0\n    b = 0\n    flag = 1\n    for i in range(31, -1, -1):\n        if c & 1 << i:\n            id = i\n            break\n    for i in range(id, -1, -1):\n        if c & 1 << i:\n            if flag == 1:\n                a = a | 1 << i\n                flag = 0\n            else:\n                b = b | 1 << i\n        else:\n            a = a | 1 << i\n            b = b | 1 << i\n    print(a * b)", "t = int(input())\nfor i in range(t):\n    c = int(input())\n    a = 0\n    b = 0\n    f = 1\n    id = 0\n    for i in range(31, -1, -1):\n        if c & 1 << i:\n            id = i\n            break\n    for i in range(id, -1, -1):\n        if c & 1 << i:\n            if f == 1:\n                a = a | 1 << i\n                f = 0\n            else:\n                b = b | 1 << i\n        else:\n            a = a | 1 << i\n            b = b | 1 << i\n    print(a * b)", "testcases = int(input())\nfor i in range(testcases):\n    C = int(input())\n    temp = bin(C).replace('0b', '')\n    x = '0'\n    y = '1'\n    z = len(temp)\n    for k in range(1, z):\n        if temp[k] == '1':\n            x = x + '1'\n            y = y + '0'\n        else:\n            x = x + '1'\n            y = y + '1'\n    A = int(x, 2)\n    B = int(y, 2)\n    print(A * B)", "for _ in range(int(input().strip())):\n    C = int(input().strip())\n    bin_c = bin(C)[2:]\n    out_bin_A = ['1'] + ['0'] * (len(bin_c) - 1)\n    out_bin_B = ['0'] * len(bin_c)\n    for (idx, bit) in enumerate(bin_c[1:], 1):\n        if bit == '0':\n            out_bin_A[idx] = '1'\n            out_bin_B[idx] = '1'\n        elif bit == '1':\n            out_bin_B[idx] = '1'\n    print(int(''.join(out_bin_A), 2) * int(''.join(out_bin_B), 2))", "import math\nfor _ in range(int(input())):\n    c = int(input())\n    d = int(math.log2(c)) + 1\n    a = 2 ** (d - 1) - 1\n    b = a ^ c\n    print(a * b)", "from math import log\n\ndef solve(n):\n    width = int(log(n, 2)) + 1\n    a = 2 ** (width - 1) - 1\n    b = a ^ n\n    return a * b\nfor _ in range(int(input())):\n    c = int(input())\n    print(solve(c))", "ass = int(input())\nfor i in range(ass):\n    bn = int(input())\n    bn = bin(bn)[2:]\n    r = len(bn)\n    bn = bn[1:]\n    a = ['1'] + ['0' if i == '1' else '1' for i in bn]\n    b = ['0'] + ['1'] * (r - 1)\n    a = ''.join(a)\n    b = ''.join(b)\n    c = int(a, 2) * int(b, 2)\n    print(c)", "ass = int(input())\nfor i in range(ass):\n    bn = int(input())\n    bn = bin(bn)[2:]\n    r = len(bn)\n    a = ['1']\n    b = ['0'] + ['1'] * (r - 1)\n    for i in bn[1:]:\n        if i == '1':\n            a += '0'\n        else:\n            a += '1'\n    a = ''.join(a)\n    b = ''.join(b)\n    c = int(a, 2) * int(b, 2)\n    print(c)", "ass = int(input())\nfor i in range(ass):\n    bn = int(input())\n    bn = bin(bn)[2:]\n    r = len(bn)\n    bn = bn[1:]\n    a = ['1']\n    b = ['0'] + ['1'] * (r - 1)\n    for i in bn:\n        if i == '1':\n            a += '0'\n        else:\n            a += '1'\n    a = ''.join(a)\n    b = ''.join(b)\n    c = int(a, 2) * int(b, 2)\n    print(c)", "ass = int(input())\nfor i in range(ass):\n    bn = int(input())\n    bn = bin(bn)[2:]\n    bn = bn[1:]\n    r = len(bn)\n    a = ['1']\n    b = ['0']\n    for i in bn:\n        if i == '1':\n            a += '0'\n        else:\n            a += '1'\n        b += '1'\n    a = ''.join(a)\n    b = ''.join(b)\n    c = int(a, 2) * int(b, 2)\n    print(c)", "for _ in range(int(input())):\n    c = int(input())\n    s = str(bin(c))[2:]\n    (s1, s2) = ('', '')\n    k = True\n    for i in s:\n        if i == '0':\n            s1 += '1'\n            s2 += '1'\n        elif k:\n            s1 += '1'\n            s2 += '0'\n            k = False\n        else:\n            s1 += '0'\n            s2 += '1'\n    a = 0\n    for i in range(len(s1)):\n        a += int(s1[::-1][i]) * 2 ** i\n    b = 0\n    for i in range(len(s2)):\n        b += int(s2[::-1][i]) * 2 ** i\n    print(a * b)", "for _ in range(int(input())):\n    c = int(input())\n    s = str(bin(c))[2:]\n    (s1, s2) = ('', '')\n    k = True\n    for i in s:\n        if i == '0':\n            s1 += '1'\n            s2 += '1'\n        elif k:\n            s1 += '1'\n            s2 += '0'\n            k = False\n        else:\n            s1 += '0'\n            s2 += '1'\n    a = 0\n    for i in range(len(s1)):\n        a += int(s1[::-1][i]) * 2 ** i\n    b = 0\n    for i in range(len(s2)):\n        b += int(s2[::-1][i]) * 2 ** i\n    print(a * b)", "from math import log\n\ndef solve(n):\n    width = int(log(n, 2)) + 1\n    a = 2 ** (width - 1) - 1\n    b = a ^ n\n    return a * b\n\ndef main():\n    for _ in range(int(input())):\n        c = int(input())\n        print(solve(c))\nmain()", "for _ in range(int(input())):\n    c = int(input())\n    a = b = 0\n    flag = False\n    for i in range(32, -1, -1):\n        if flag:\n            if c & 1 << i > 0:\n                a |= 1 << i\n            else:\n                a |= 1 << i\n                b |= 1 << i\n        elif c & 1 << i > 0:\n            flag = True\n            b = 1 << i\n    print(a * b)", "def decimalToBinary(n):\n    return bin(n).replace('0b', '')\nt = int(input())\nfor z in range(t):\n    n = int(input())\n    l = list(decimalToBinary(n))\n    s = ''\n    s1 = ''\n    for i in range(len(l) - 1, 0, -1):\n        if l[i] == '1':\n            s = s + '1'\n            s1 = s1 + '0'\n        else:\n            s += '1'\n            s1 = s1 + '1'\n    if l[0] == '1':\n        s += '0'\n        s1 += '1'\n    else:\n        s += '0'\n        s1 += '0'\n    print(int(s[::-1], 2) * int(s1[::-1], 2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    bi_num = bin(n)[2:]\n    (a, b) = (1, 0)\n    for i in bi_num[1:]:\n        if i == '1':\n            (a, b) = (2 * a, 2 * b + 1)\n        else:\n            (a, b) = (2 * a + 1, 2 * b + 1)\n    print(a * b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    bi_num = bin(n)[2:]\n    (a, b) = (1, 0)\n    for i in bi_num[1:]:\n        if i == '1':\n            a = 2 * a\n            b = 2 * b + 1\n        else:\n            a = 2 * a + 1\n            b = 2 * b + 1\n    print(a * b)"]