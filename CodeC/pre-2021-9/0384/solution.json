["def opposite(x):\n    if x == 'Right':\n        return 'Left'\n    else:\n        return 'Right'\nfor _ in range(int(input())):\n    n = int(input())\n    routes = [input() for __ in range(n)]\n    routes = routes[::-1]\n    print('Begin' + routes[0][routes[0].index(' '):])\n    for i in range(1, n):\n        print(opposite(routes[i - 1][:routes[i - 1].index(' ')]) + routes[i][routes[i].index(' '):])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    k = []\n    for j in range(n):\n        s = input()\n        l = list(s.split(' '))\n        k.append(l)\n    t = []\n    for j in k:\n        t.append(j[0])\n    val = t.pop(0)\n    t.append(val)\n    nt = []\n    for j in t:\n        if j == 'Right':\n            nt.append('Left')\n        elif j == 'Left':\n            nt.append('Right')\n        else:\n            nt.append(j)\n    for j in range(len(nt)):\n        k[j][0] = nt[j]\n    for j in k[::-1]:\n        print(' '.join(j))", "for _ in range(int(input())):\n    n = int(input())\n    place = []\n    direction = []\n    for i in range(n):\n        a = input().split(' on ')\n        direction.append(a[0])\n        place.append(a[1])\n    print(f'Begin on {place[-1]}')\n    i = n - 1\n    while i:\n        current_direction = 'Right' if direction[i] == 'Left' else 'Left'\n        print(f'{current_direction} on {place[i - 1]}')\n        i -= 1", "for tc in range(int(input())):\n    n = int(input())\n    roads = []\n    turns = []\n    for i in range(n):\n        dire = input()\n        if dire[0] == 'L':\n            r = dire[8:]\n            roads.append(r)\n            turns.append('Right on')\n        elif dire[0] == 'R':\n            r = dire[9:]\n            roads.append(r)\n            turns.append('Left on')\n        else:\n            t = dire[:8]\n            r = dire[9:]\n            roads.append(r)\n            turns.append(t)\n    n = len(roads)\n    p = n\n    while p:\n        t = turns[p % n]\n        r = roads[(p - 1) % n]\n        print(t, r)\n        p -= 1", "for _ in range(int(input())):\n    x = int(input())\n    l = []\n    for j in range(x):\n        l.append(input().split())\n    for a in range(x - 1):\n        if l[a + 1][0] == 'Right':\n            l[a][0] = 'Left'\n        else:\n            l[a][0] = 'Right'\n    l[-1][0] = 'Begin'\n    for a in range(x - 1, -1, -1):\n        print(' '.join(l[a]))", "t = int(input())\nwhile t:\n    n = int(input())\n    l = []\n    for i in range(n):\n        a = list(input().split())\n        l.append(a)\n    l.append(['Begin'])\n    l.reverse()\n    for i in range(n):\n        k = ' '.join(l[i + 1][1:])\n        if l[i][0] == 'Begin':\n            print('Begin ' + k)\n        elif l[i][0] == 'Left':\n            print('Right ' + k)\n        elif l[i][0] == 'Right':\n            print('Left ' + k)\n    t -= 1", "t = int(input())\n\ndef change(di):\n    if di == 'Left':\n        di = 'Right'\n    else:\n        di = 'Left'\n    return di\nfor _ in range(t):\n    n = int(input())\n    xpath = []\n    xx = []\n    for i in range(n):\n        ax = input().split()\n        xpath.append(ax[1:])\n        xx.append(ax[0])\n    path = []\n    x = []\n    for i in range(n - 1, -1, -1):\n        path.append(xpath[i])\n        x.append(xx[i])\n    for i in range(n):\n        pt = path[i]\n        if i == 0:\n            fi = ['Begin'] + pt\n        else:\n            di = x[i - 1]\n            di = change(di)\n            fi = [di] + pt\n        print(*fi)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = []\n    for i in range(n):\n        a = list(input().split())\n        l.append(a)\n    l.append(['Begin'])\n    l.reverse()\n    for i in range(n):\n        k = ' '.join(l[i + 1][1:])\n        if l[i][0] == 'Begin':\n            print('Begin ' + k)\n        elif l[i][0] == 'Left':\n            print('Right ' + k)\n        elif l[i][0] == 'Right':\n            print('Left ' + k)\n    t -= 1", "g = int(input())\npo = []\nfor kku in range(0, g):\n    kl = int(input())\n    tr = []\n    for hh in range(0, kl):\n        ppe = str(input())\n        tr.append(ppe)\n    po.append(tr)\nfor nbv in po:\n    gte = list(nbv)\n    gte.reverse()\n    final = []\n    ujk = ''\n    for mmk in gte:\n        opl = mmk.split(' ')\n        if ujk == '':\n            ujk = opl[0]\n            opl.pop(0)\n            opl.insert(0, 'Begin')\n            lpy = ' '.join(opl)\n            final.append(lpy)\n        elif ujk == 'Left':\n            ujk = opl[0]\n            opl.pop(0)\n            opl.insert(0, 'Right')\n            lptr = ' '.join(opl)\n            final.append(lptr)\n        else:\n            ujk = opl[0]\n            opl.pop(0)\n            opl.insert(0, 'Left')\n            otre = ' '.join(opl)\n            final.append(otre)\n    for mkre in final:\n        print(mkre)", "t = int(input(''))\nfor _ in range(t):\n    n = int(input(''))\n    a = []\n    for i in range(n):\n        st = input().split()\n        a.append(st)\n    for j in range(n):\n        if j == 0:\n            print('Begin on', end=' ')\n            for x in a[n - j - 1][2:]:\n                print(x, end=' ')\n            print()\n        elif a[n - j][0] == 'Left':\n            print('Right on', end=' ')\n            for x in a[n - j - 1][2:]:\n                print(x, end=' ')\n            print()\n        elif a[n - j][0] == 'Right':\n            print('Left on', end=' ')\n            for x in a[n - j - 1][2:]:\n                print(x, end=' ')\n            print()", "def cnv(a):\n    if a == 'Right':\n        return 'Left'\n    if a == 'Left':\n        return 'Right'\n    return a\nfor _ in range(int(input())):\n    m = int(input())\n    l = []\n    for i in range(m):\n        l.append(input().split())\n    k = list(l)\n    k = k[1:] + k[:1]\n    n = []\n    z = []\n    for i in range(m):\n        n.append(cnv(k[i][0]))\n        z.append([cnv(k[i][0])] + l[i][1:])\n    z = z[::-1]\n    for i in range(m):\n        print(' '.join(z[i]))", "for i in range(int(input())):\n    n = int(input())\n    st1 = ''\n    list2 = []\n    list1 = []\n    for x in range(n):\n        st = list(map(str, input().split()))\n        if st[0] == 'Left':\n            list1.insert(0, 'Right')\n        elif st[0] == 'Right':\n            list1.insert(0, 'Left')\n        for z in st[1:]:\n            st1 += z\n            st1 += ' '\n        length = len(st1)\n        list2.insert(0, st1[:length - 1])\n        st1 = ''\n    list1.insert(0, 'Begin')\n    j = 0\n    while j < len(list2):\n        print(list1[j] + ' ' + list2[j])\n        j += 1", "def cnv(a):\n    if a == 'Right':\n        return 'Left'\n    if a == 'Left':\n        return 'Right'\n    return a\nfor _ in range(int(input())):\n    m = int(input())\n    l = []\n    for i in range(m):\n        l.append(input().split())\n    k = list(l)\n    k = k[1:] + k[:1]\n    n = []\n    z = []\n    for i in range(m):\n        n.append(cnv(k[i][0]))\n        z.append([cnv(k[i][0])] + l[i][1:])\n    z = z[::-1]\n    for i in range(m):\n        print(' '.join(z[i]))", "def cnv(a):\n    if a == 'Right':\n        return 'Left'\n    if a == 'Left':\n        return 'Right'\n    return a\nfor _ in range(int(input())):\n    m = int(input())\n    l = []\n    for i in range(m):\n        l.append(input().split())\n    k = list(l)\n    k = k[1:] + k[:1]\n    n = []\n    z = []\n    for i in range(m):\n        n.append(cnv(k[i][0]))\n        z.append([cnv(k[i][0])] + l[i][1:])\n    z = z[::-1]\n    for i in range(m):\n        print(' '.join(z[i]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    list_a = []\n    for i in range(n):\n        s = input().split()\n        list_a.append(s)\n    list_a = list_a[::-1]\n    new_list = []\n    for i in range(n - 1):\n        if i == 0:\n            new_list.append(list_a[0][0])\n            list_a[0][0] = 'Begin'\n        else:\n            new_list.append(list_a[i][0])\n    for i in range(len(new_list)):\n        if new_list[i] == 'Left':\n            new_list[i] = 'Right'\n        elif new_list[i] == 'Right':\n            new_list[i] = 'Left'\n    for i in range(1, n):\n        list_a[i][0] = new_list[i - 1]\n    for char in list_a:\n        print(' '.join(char))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    list_a = []\n    for i in range(n):\n        s = input().split()\n        list_a.append(s)\n    list_a = list_a[::-1]\n    new_list = []\n    for i in range(n - 1):\n        if i == 0:\n            new_list.append(list_a[0][0])\n            list_a[0][0] = 'Begin'\n        else:\n            new_list.append(list_a[i][0])\n    for i in range(len(new_list)):\n        if new_list[i] == 'Left':\n            new_list[i] = 'Right'\n        elif new_list[i] == 'Right':\n            new_list[i] = 'Left'\n    for i in range(1, n):\n        list_a[i][0] = new_list[i - 1]\n    for char in list_a:\n        print(' '.join(char))", "for i in range(int(input())):\n    m = int(input())\n    List = []\n    for i in range(m):\n        List.append(input().split())\n    towars_res = []\n    for i in List:\n        towars_res.append(i[0])\n    towars_home = []\n    for i in towars_res:\n        if i == 'Right':\n            towars_home.append('Left')\n        elif i == 'Left':\n            towars_home.append('Right')\n    towars_home.append('Begin')\n    towars_home = towars_home[::-1]\n    reversed_list = List[::-1]\n    new_List = []\n    for i in reversed_list:\n        new_List.append(i[1:])\n    for i in range(m):\n        s = ' '.join(new_List[i])\n        s = towars_home[i] + ' ' + s\n        print(s)", "for _ in range(int(input())):\n    n = int(input())\n    s = []\n    for i in range(n):\n        s.append(list(map(str, input().split(' on '))))\n    print('Begin on {}'.format(s[-1][-1]))\n    for i in range(n - 1, 0, -1):\n        if s[i][0] == 'Left':\n            print('Right on {}'.format(s[i - 1][-1]))\n        else:\n            print('Left on {}'.format(s[i - 1][-1]))", "for _ in range(int(input())):\n    n = int(input())\n    s = []\n    for i in range(n):\n        s.append(list(map(str, input().split(' on '))))\n    print('Begin on {}'.format(s[-1][-1]))\n    for i in range(n - 1, 0, -1):\n        if s[i][0] == 'Left':\n            print('Right on {}'.format(s[i - 1][-1]))\n        else:\n            print('Left on {}'.format(s[i - 1][-1]))", "for i in range(int(input())):\n    k = int(input())\n    l1 = []\n    for i in range(k):\n        l = list(map(str, input().split(' ')))\n        l1.append(l)\n    c = len(l1) - 1\n    l2 = []\n    b = l1[c][1:]\n    b.insert(0, 'Begin')\n    d = ' '.join(b)\n    l2.append(d)\n    for i in range(c):\n        if l1[c][0] == 'Right':\n            a = l1[c - 1][1:]\n            a.insert(0, 'Left')\n            e = ' '.join(a)\n            l2.append(e)\n        elif l1[c][0] == 'Left':\n            a = l1[c - 1][1:]\n            a.insert(0, 'Right')\n            e = ' '.join(a)\n            l2.append(e)\n        c -= 1\n    for i in l2:\n        print(i)", "for i in range(int(input())):\n    k = int(input())\n    l1 = []\n    for i in range(k):\n        l = list(map(str, input().split(' ')))\n        l1.append(l)\n    c = len(l1) - 1\n    l2 = []\n    b = l1[c][1:]\n    b.insert(0, 'Begin')\n    d = ' '.join(b)\n    l2.append(d)\n    for i in range(c):\n        if l1[c][0] == 'Right':\n            a = l1[c - 1][1:]\n            a.insert(0, 'Left')\n            e = ' '.join(a)\n            l2.append(e)\n        elif l1[c][0] == 'Left':\n            a = l1[c - 1][1:]\n            a.insert(0, 'Right')\n            e = ' '.join(a)\n            l2.append(e)\n        c -= 1\n    for i in l2:\n        print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = []\n    for i in range(n):\n        (direction, road) = map(str, input().split(' on '))\n        lst.append([direction, road])\n    for i in range(len(lst) - 1, -1, -1):\n        if i == len(lst) - 1:\n            print('Begin on ' + lst[i][1])\n        elif lst[i + 1][0] == 'Right':\n            print('Left on ' + lst[i][1])\n        else:\n            print('Right on ' + lst[i][1])", "for _ in range(int(input())):\n    xx = []\n    x = []\n    for __ in range(int(input())):\n        x.append(list(map(str, input().split())))\n    print(x[0][0], x[0][1], ' '.join(x[-1][2:]))\n    for (i, j) in zip(x[::-1], x[::-1][1:]):\n        print('Left' if i[0] == 'Right' else 'Right', 'on', ' '.join(j[2:]))", "for t in range(int(input())):\n    n = int(input())\n    a = list()\n    for i in range(n):\n        b = list(map(str, input().split()))\n        a.append((b[0], b[2:]))\n    print('Begin on', *a[n - 1][1])\n    for i in range(n - 2, -1, -1):\n        c = ''\n        d = a[i + 1][0]\n        if d == 'Left':\n            c = 'Right'\n        else:\n            c = 'Left'\n        print(c, 'on', *a[i][1])", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    s = []\n    for j in range(l):\n        s.append(input())\n    for k in range(l - 1, -1, -1):\n        if k == l - 1:\n            print(f\"Begin {' '.join(s[k].split(' ')[1:])}\")\n        else:\n            if s[k + 1].split(' ')[0] == 'Right':\n                z = 'Left'\n            else:\n                z = 'Right'\n            print(f\"{z} {' '.join(s[k].split(' ')[1:])}\")", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    s = []\n    for j in range(l):\n        s.append(input())\n    for k in range(l - 1, -1, -1):\n        if k == l - 1:\n            print(f\"Begin {' '.join(s[k].split(' ')[1:])}\")\n        else:\n            if s[k + 1].split(' ')[0] == 'Right':\n                z = 'Left'\n            else:\n                z = 'Right'\n            print(f\"{z} {' '.join(s[k].split(' ')[1:])}\")", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    lst = []\n    for i in range(n):\n        (direction, road) = map(str, input().split(' on '))\n        lst.append([direction, road])\n    for i in range(len(lst) - 1, -1, -1):\n        if i == len(lst) - 1:\n            print('Begin on ' + lst[i][1])\n        elif lst[i + 1][0] == 'Right':\n            print('Left on ' + lst[i][1])\n        else:\n            print('Right on ' + lst[i][1])\n    t = t - 1", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nfor _ in range(get_int()):\n    N = get_int()\n    (directions, roads) = ([], [])\n    for _ in range(N):\n        (d, r) = input().split(' on ')\n        if d == 'Left':\n            directions.append('Right on')\n        elif d == 'Right':\n            directions.append('Left on')\n        roads.append(r)\n    directions.append('Begin on')\n    for _ in range(N):\n        print(directions.pop(), roads.pop())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ins = []\n    nams = []\n    for i in range(n):\n        (a, b) = input().split(' on ')\n        ins.append(a)\n        nams.append(b)\n    nams.reverse()\n    ins.reverse()\n    print('Begin on', nams[0])\n    ins.pop(n - 1)\n    nams.pop(0)\n    for i in range(n - 1):\n        if ins[i] == 'Right':\n            print('Left on', nams[i])\n        else:\n            print('Right on', nams[i])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ins = []\n    nams = []\n    for i in range(n):\n        (a, b) = input().split(' on ')\n        ins.append(a)\n        nams.append(b)\n    nams.reverse()\n    ins.reverse()\n    print('Begin on', nams[0])\n    ins.pop(n - 1)\n    nams.pop(0)\n    for i in range(n - 1):\n        if ins[i] == 'Right':\n            print('Left on', nams[i])\n        else:\n            print('Right on', nams[i])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ins = []\n    nams = []\n    for i in range(n):\n        (a, b) = input().split(' on ')\n        ins.append(a)\n        nams.append(b)\n    nams.reverse()\n    ins.reverse()\n    print('Begin on', nams[0])\n    ins.pop(n - 1)\n    nams.pop(0)\n    for i in range(n - 1):\n        if ins[i] == 'Right':\n            print('Left on', nams[i])\n        else:\n            print('Right on', nams[i])", "t = input()\nfor c in range(0, int(t)):\n    n = input()\n    direct = []\n    place = []\n    for x in range(0, int(n)):\n        s = input().split()\n        direct.append(s[0])\n        place.append(s[2:])\n    out = ''\n    for y in range(int(n) - 1, -1, -1):\n        out = ''\n        if y == int(n) - 1:\n            out = out + 'Begin on '\n        elif direct[y + 1] == 'Right':\n            out = out + 'Left on '\n        else:\n            out = out + 'Right on '\n        temp = place[y]\n        for z in range(0, len(temp)):\n            out = out + temp[z] + ' '\n        print(out)", "for _ in range(int(input())):\n    N = int(input())\n    directions = []\n    streetnames = []\n    for i in range(N):\n        x = input().split()\n        streetnames.append(' '.join(x[2:]))\n        if x[0] != 'Begin':\n            directions.append(x[0])\n    directions = directions[::-1]\n    directions = ['Left' if i == 'Right' else 'Right' for i in directions]\n    streetnames = streetnames[::-1]\n    for i in range(N):\n        if i == 0:\n            print('{0} on {1}'.format('Begin', streetnames[i]))\n            continue\n        print('{0} on {1}'.format(directions[i - 1], streetnames[i]))", "for _ in range(int(input())):\n    dirct = []\n    n = int(input())\n    for i in range(n):\n        dirct.append(input())\n    for j in range(n - 1):\n        if 'Right' in dirct[j + 1]:\n            if j == 0:\n                dirct[j] = dirct[j].replace('Begin', 'Left')\n            else:\n                dirct[j] = dirct[j].replace('Right', 'Left')\n        elif j == 0:\n            dirct[j] = dirct[j].replace('Begin', 'Right')\n        else:\n            dirct[j] = dirct[j].replace('Left', 'Right')\n    if 'Right' in dirct[-1]:\n        dirct[-1] = dirct[-1].replace('Right', 'Begin')\n    else:\n        dirct[-1] = dirct[-1].replace('Left', 'Begin')\n    for k in dirct[::-1]:\n        print(k)", "for _ in range(int(input())):\n    n = int(input())\n    lst = []\n    l = []\n    for i in range(n):\n        st = input()\n        lst.append(st)\n        if st[0] == 'L':\n            l.append('Right')\n        elif st[0] == 'R':\n            l.append('Left')\n    l.append('Begin')\n    st = lst[-1]\n    if st[0] == 'L':\n        st = st.replace('Left', 'Begin')\n        lst[-1] = st\n    else:\n        st = st.replace('Right', 'Begin')\n        lst[-1] = st\n    print(lst[-1])\n    for i in range(n - 2, -1, -1):\n        st = lst[i]\n        if st[0] == 'L':\n            st = st.replace('Left', l[i])\n            lst[i] = st\n        elif st[0] == 'R':\n            st = st.replace('Right', l[i])\n            lst[i] = st\n        else:\n            st = st.replace('Begin', l[i])\n            lst[i] = st\n        print(lst[i])", "for _ in range(int(input())):\n    n = int(input())\n    lst = []\n    l = []\n    for i in range(n):\n        st = input()\n        lst.append(st)\n        if st[0] == 'L':\n            l.append('Right')\n        elif st[0] == 'R':\n            l.append('Left')\n    l.append('Begin')\n    st = lst[-1]\n    if st[0] == 'L':\n        st = st.replace('Left', 'Begin')\n        lst[-1] = st\n    else:\n        st = st.replace('Right', 'Begin')\n        lst[-1] = st\n    print(lst[-1])\n    for i in range(n - 2, -1, -1):\n        st = lst[i]\n        if st[0] == 'L':\n            st = st.replace('Left', l[i])\n            lst[i] = st\n        elif st[0] == 'R':\n            st = st.replace('Right', l[i])\n            lst[i] = st\n        else:\n            st = st.replace('Begin', l[i])\n            lst[i] = st\n        print(lst[i])", "import copy\nimport re\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(n):\n        l.append(input())\n    s = copy.deepcopy(l)\n    s[-1] = re.sub('Begin|Left|Right', 'Begin', s[-1])\n    for j in range(n - 1):\n        if re.search('Left', l[j + 1]):\n            s[j] = re.sub('Begin|Left|Right', 'Right', s[j])\n        elif re.search('Right', l[j + 1]):\n            s[j] = re.sub('Begin|Left|Right', 'Left', s[j])\n    s.reverse()\n    for x in s:\n        print(x)", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nfor _ in range(get_int()):\n    N = get_int()\n    (directions, roads) = ([], [])\n    for _ in range(N):\n        (d, r) = input().split(' on ')\n        if d == 'Left':\n            directions.append('Right on')\n        elif d == 'Right':\n            directions.append('Left on')\n        roads.append(r)\n    directions.append('Begin on')\n    for _ in range(N):\n        print(directions.pop(), roads.pop())", "import copy\nfor i in range(int(input())):\n    n = int(input())\n    L = []\n    for i in range(n):\n        inst = list(map(str, input().split()))\n        L.append(inst)\n    L.reverse()\n    import copy\n    a = copy.deepcopy(L)\n    for i in range(len(L)):\n        if i == 0:\n            L[i][0] = 'Begin'\n        elif a[i - 1][0] == 'Right':\n            L[i][0] = 'Left'\n        elif a[i - 1][0] == 'Left':\n            L[i][0] = 'Right'\n    for i in L:\n        print(*i)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\ncode = {'Left': 'Right', 'Right': 'Left'}\nans = []\nfor _ in range(inp()):\n    N = inp()\n    A = [insr() for x in range(N)]\n    old = A[-1].split()\n    ans.append('Begin ' + ' '.join(old[1:]))\n    for a in A[-2:-N - 1:-1]:\n        new = a.split()\n        ans.append(code[old[0]] + ' ' + ' '.join(new[1:]))\n        old = new\noutplt(ans)", "for _ in range(int(input())):\n    (direction, locs) = ([], [])\n    n = int(input())\n    for _ in range(n):\n        inpt = input().split()\n        direction.append(inpt[0])\n        locs.append(' '.join(inpt[2:]))\n    direction.reverse()\n    direction = ['Begin'] + direction\n    for i in range(n):\n        if direction[i] == 'Begin':\n            pass\n        elif direction[i] == 'Right':\n            direction[i] = 'Left'\n        else:\n            direction[i] = 'Right'\n    locs.reverse()\n    for i in range(n):\n        print(direction[i] + ' on ' + locs[i])", "for _ in range(int(input())):\n    n = int(input())\n    lst = []\n    for _ in range(n):\n        lst.insert(0, input().split())\n    d = {'Left': 'Right', 'Right': 'Left'}\n    for i in range(n - 1, 0, -1):\n        lst[i][0] = d[lst[i - 1][0]]\n    lst[0][0] = 'Begin'\n    for i in range(n):\n        print(' '.join(lst[i]))", "def change(st):\n    if st == 'Begin':\n        return st\n    elif st == 'Right':\n        return 'Left'\n    return 'Right'\nfor i in range(int(input())):\n    no = int(input())\n    root = []\n    add = []\n    for j in range(no):\n        st = input().split(' on ')\n        root.append(st[0])\n        add.append(st[1])\n    root = root[1:] + root[:1]\n    for i in range(no):\n        print(change(root.pop()) + ' on ' + add.pop())", "for t in range(int(input())):\n    dict = []\n    answer = ''\n    steps = int(input())\n    for n in range(steps):\n        dict.append(input().split())\n    print('Begin on', end='')\n    for i in range(2, len(dict[steps - 1])):\n        print('', dict[steps - 1][i], end='')\n    print('')\n    for i in range(steps - 2, -1, -1):\n        if dict[i + 1][0] == 'Left':\n            answer = 'Right'\n        else:\n            answer = 'Left'\n        print(answer, 'on', end='')\n        for j in range(2, len(dict[i])):\n            print('', dict[i][j], end='')\n        print('')", "for x in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    nd = []\n    for i in range(n):\n        s = input().split(' on ')\n        a.append(s[0])\n        b.append(s[1])\n    for i in range(1, n):\n        if a[i] == 'Left':\n            nd.append('Right')\n        else:\n            nd.append('Left')\n    nd.append('Begin')\n    for i in range(n):\n        print(nd[n - 1 - i] + ' on ' + b[n - 1 - i])", "for t in range(int(input())):\n    directions = []\n    answer = ''\n    steps = int(input())\n    for n in range(steps):\n        directions.append(input().split())\n    print('Begin on', end='')\n    for i in range(2, len(directions[steps - 1])):\n        print('', directions[steps - 1][i], end='')\n    print('')\n    for i in range(steps - 2, -1, -1):\n        if directions[i + 1][0] == 'Left':\n            answer = 'Right'\n        else:\n            answer = 'Left'\n        print(answer, 'on', end='')\n        for j in range(2, len(directions[i])):\n            print('', directions[i][j], end='')\n        print('')", "for i in range(int(input())):\n    n = int(input())\n    a = []\n    s = []\n    for i in range(n):\n        a.append(input())\n    while a:\n        t = a.pop()\n        if len(a) == n - 1:\n            if t[0] == 'L':\n                s.append('Right')\n            else:\n                s.append('Left')\n            t = t.replace('Left', 'Begin').replace('Right', 'Begin')\n        else:\n            d = s.pop()\n            if t[0] == 'L':\n                s.append('Right')\n            else:\n                s.append('Left')\n            t = t.replace('Left', d).replace('Right', d).replace('Begin', d)\n        print(t)", "for i in range(int(input())):\n    n = int(input())\n    a = []\n    s = []\n    for i in range(n):\n        a.append(input())\n    while a:\n        t = a.pop()\n        if len(a) == n - 1:\n            if t[0] == 'L':\n                s.append('Right')\n            else:\n                s.append('Left')\n            t = t.replace('Left', 'Begin').replace('Right', 'Begin')\n        else:\n            d = s.pop()\n            if t[0] == 'L':\n                s.append('Right')\n            else:\n                s.append('Left')\n            t = t.replace('Left', d).replace('Right', d).replace('Begin', d)\n        print(t)", "listInput = lambda : list(map(int, input().split(' ')))\nmapInput = lambda : map(int, input().split(' '))\nfor _ in range(int(input())):\n    n = int(input())\n    L = []\n    for _ in range(n):\n        L.append(list(input().split()))\n    L = L[::-1]\n    for i in range(n - 1, 0, -1):\n        if L[i - 1][0] == 'Left':\n            L[i][0] = 'Right'\n        elif L[i - 1][0] == 'Right':\n            L[i][0] = 'Left'\n    L[0][0] = 'Begin'\n    for each in L:\n        print(' '.join(each))", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        s = input()\n        l.append(s)\n    for j in range(1, n + 1):\n        if j == 1:\n            p = list(l[-1].split(' '))\n            p[0] = 'Begin'\n            print(' '.join(p))\n        if j != 1:\n            p = list(l.pop().split(' '))\n            q = list(l[-1].split(' '))\n            if p[0] == 'Right':\n                q[0] = 'Left'\n                print(' '.join(q))\n            else:\n                q[0] = 'Right'\n                print(' '.join(q))", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        s = input()\n        l.append(s)\n    for j in range(1, n + 1):\n        if j == 1:\n            p = list(l[-1].split(' '))\n            p[0] = 'Begin'\n            print(' '.join(p))\n        if j != 1:\n            p = list(l.pop().split(' '))\n            q = list(l[-1].split(' '))\n            if p[0] == 'Right':\n                q[0] = 'Left'\n                print(' '.join(q))\n            else:\n                q[0] = 'Right'\n                print(' '.join(q))", "for a in range(int(input())):\n    N = int(input())\n    l = []\n    for i in range(N):\n        s = str(input())\n        l.append(s)\n    for j in range(1, N + 1):\n        if j == 1:\n            output = list(l[-1].split(' '))\n            output[0] = 'Begin'\n            print(' '.join(output))\n        if j != 1:\n            output = list(l.pop().split(' '))\n            output1 = list(l[-1].split(' '))\n            if output[0] == 'Right':\n                output1[0] = 'Left'\n                print(' '.join(output1))\n            else:\n                output1[0] = 'Right'\n                print(' '.join(output1))", "for _ in range(int(input())):\n    n = int(input())\n    di_li = []\n    words = []\n    for _ in range(n):\n        li = list(input().split())\n        dire = li[0]\n        words.append(' '.join(li[1:]))\n        if dire == 'Left':\n            di_li.insert(1, 'Right')\n        elif dire == 'Right':\n            di_li.insert(1, 'Left')\n        else:\n            di_li.insert(0, dire)\n    together = list(zip(di_li, words[::-1]))\n    for i in together:\n        print(i[0] + ' ' + i[1])", "for _ in range(int(input())):\n    n = int(input())\n    di_li = []\n    words = []\n    for _ in range(n):\n        li = list(input().split())\n        dire = li[0]\n        words.append(' '.join(li[1:]))\n        if dire == 'Left':\n            di_li.insert(1, 'Right')\n        elif dire == 'Right':\n            di_li.insert(1, 'Left')\n        else:\n            di_li.insert(0, dire)\n    together = list(zip(di_li, words[::-1]))\n    for i in together:\n        print(i[0] + ' ' + i[1])", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for __ in range(n):\n        s = input()\n        s = s.split(' on ')\n        l.append(s)\n    for i in range(int(n / 2)):\n        temp = l[i][1]\n        l[i][1] = l[n - i - 1][1]\n        l[n - i - 1][1] = temp\n    for i in range(1, n):\n        if l[i][0] == 'Left':\n            l[i][0] = 'Right'\n        elif l[i][0] == 'Right':\n            l[i][0] = 'Left'\n    for i in range(1, int((n + 1) / 2)):\n        temp = l[i][0]\n        l[i][0] = l[n - i][0]\n        l[n - i][0] = temp\n    for i in l:\n        s = ''\n        s += i[0] + ' on ' + i[1]\n        print(s)", "for t in range(int(input())):\n    n = int(input())\n    a = [''] * n\n    for i in range(n):\n        a[i] += input()\n    for i in range(n - 1):\n        if a[i + 1].startswith('Left'):\n            a[i] = a[i].replace('Begin', 'Right')\n            a[i] = a[i].replace('Left', 'Right')\n        else:\n            a[i] = a[i].replace('Begin', 'Left')\n            a[i] = a[i].replace('Right', 'Left')\n    a[-1] = a[-1].replace('Right', 'Begin')\n    a[-1] = a[-1].replace('Left', 'Begin')\n    for i in range(n):\n        print(a[n - 1 - i])", "for _ in range(int(input())):\n    n = int(input())\n    direction = []\n    place = []\n    for i in range(n):\n        s = input()\n        place.append(s)\n    for i in place[::-1]:\n        if direction == []:\n            direction.append(i.replace('Right', 'Begin') if i[0] == 'R' else i.replace('Left', 'Begin'))\n        elif i[0] == 'R':\n            direction.append(i.replace('Right', direc))\n        elif i[0] == 'L':\n            direction.append(i.replace('Left', direc))\n        else:\n            direction.append(i.replace('Begin', direc))\n        direc = 'Left' if i[0] == 'R' else 'Right'\n    print(*direction, sep='\\n')", "for i in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    for j in range(n):\n        x = input().split(' on ')\n        a.append(x[0])\n        b.append(x[1])\n    newa = []\n    for j in range(1, n):\n        if a[j] == 'Right':\n            newa.append('Left')\n        else:\n            newa.append('Right')\n    newa.append('Begin')\n    for j in range(n - 1, -1, -1):\n        print(newa[j] + ' on ' + b[j])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = []\n    for i in range(n):\n        l.append(input().split(' ', 2))\n    res = 'Begin'\n    for i in range(n - 1, -1, -1):\n        res = res + ' ' + l[i][1] + ' ' + l[i][2]\n        print(res)\n        res = 'Right' if l[i][0] == 'Left' else 'Left'", "n = int(input())\nfor i in range(0, n):\n    a = input()\n    list1 = []\n    for j in range(0, int(a)):\n        list1.append(input().split())\n    word = list1[0][0]\n    for k in range(0, int(a)):\n        if k == int(a) - 1:\n            list1[k][0] = word\n        else:\n            list1[k][0] = list1[k + 1][0]\n            if list1[k][0] == 'Right':\n                list1[k][0] = 'Left'\n            else:\n                list1[k][0] = 'Right'\n    list1 = list1[::-1]\n    for b in list1:\n        for c in b:\n            print(c, end=' ')\n        print('\\n')", "n = int(input())\nfor i in range(0, n):\n    a = input()\n    list1 = []\n    for j in range(0, int(a)):\n        list1.append(input().split())\n    word = list1[0][0]\n    for k in range(0, int(a)):\n        if k == int(a) - 1:\n            list1[k][0] = word\n        else:\n            list1[k][0] = list1[k + 1][0]\n            if list1[k][0] == 'Right':\n                list1[k][0] = 'Left'\n            else:\n                list1[k][0] = 'Right'\n    list1 = list1[::-1]\n    for b in list1:\n        for c in b:\n            print(c, end=' ')\n        print('\\n')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = []\n    list2 = []\n    for i in range(n):\n        s = input()\n        if s[4] == ' ':\n            list1.append(s[4:])\n        else:\n            list1.append(s[5:])\n        list2.append(s[0])\n    print('Begin' + list1[n - 1])\n    for i in reversed(range(n - 1)):\n        if list2[i + 1][0] == list2[i][0]:\n            if list2[i][0] == 'R':\n                print('Left' + list1[i])\n            elif list2[i][0] == 'L':\n                print('Right' + list1[i])\n        elif list2[i][0] == 'B':\n            if list2[i + 1][0] == 'R':\n                print('Left' + list1[i])\n            elif list2[i + 1][0] == 'L':\n                print('Right' + list1[i])\n        elif list2[i][0] == 'R':\n            print('Right' + list1[i])\n        elif list2[i][0] == 'L':\n            print('Left' + list1[i])", "for i in range(int(input())):\n    n = int(input())\n    b = []\n    for i in range(n):\n        a = list(input().split())\n        b.append(a)\n    for i in range(n - 1):\n        if b[i + 1][0] == 'Right':\n            b[i][0] = 'Left'\n        else:\n            b[i][0] = 'Right'\n    b[n - 1][0] = 'Begin'\n    for i in range(n - 1, -1, -1):\n        print(*b[i])", "for i in range(int(input())):\n    n = int(input())\n    b = []\n    for i in range(n):\n        a = list(input().split())\n        b.append(a)\n    for i in range(n - 1):\n        if b[i + 1][0] == 'Right':\n            b[i][0] = 'Left'\n        else:\n            b[i][0] = 'Right'\n    b[n - 1][0] = 'Begin'\n    final = b[::-1]\n    for i in final:\n        print(*i)", "for _ in range(int(input())):\n    n = int(input())\n    b = []\n    for i in range(n):\n        a = list(input().split())\n        b.append(a)\n    for i in range(n - 1):\n        if b[i + 1][0] == 'Right':\n            b[i][0] = 'Left'\n        else:\n            b[i][0] = 'Right'\n    b[n - 1][0] = 'Begin'\n    for i in range(n - 1, -1, -1):\n        print(*b[i])", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    dir_arr = []\n    for j in range(length):\n        dir_arr.append(input().split())\n    append = 'Begin'\n    for j in range(length - 1, -1, -1):\n        temp = dir_arr[j][0]\n        dir_arr[j][0] = append\n        print(' '.join(dir_arr[j]))\n        if temp == 'Right':\n            append = 'Left'\n        else:\n            append = 'Right'", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    a = [0] * n\n    for i in range(0, n):\n        a[i] = input()\n    r = []\n    d = []\n    for i in a:\n        r.append(i[i.index('on') + 3:])\n        d.append(i[:i.index('on') - 1])\n    print('Begin on', r[n - 1])\n    for i in range(1, n):\n        if d[n - i] == 'Right':\n            m = 'Left'\n        elif d[n - i] == 'Left':\n            m = 'Right'\n        print(m, 'on', r[n - i - 1])", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    a = [0] * n\n    for i in range(0, n):\n        a[i] = input()\n    r = []\n    d = []\n    for i in a:\n        r.append(i[i.index('on') + 3:])\n        d.append(i[:i.index('on') - 1])\n    print('Begin on', r[n - 1])\n    for i in range(1, n):\n        m = ''\n        if d[n - i] == 'Right':\n            m = 'Left'\n        elif d[n - i] == 'Left':\n            m = 'Right'\n        print(m, 'on', r[n - i - 1])", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    a = [0] * n\n    for i in range(0, n):\n        a[i] = input()\n    r = []\n    d = []\n    for i in a:\n        r.append(i[i.index('on') + 3:])\n        d.append(i[:i.index('on') - 1])\n    print('Begin on', r[n - 1])\n    for i in range(1, n):\n        m = ''\n        if d[n - i] == 'Right':\n            m = 'Left'\n        elif d[n - i] == 'Left':\n            m = 'Right'\n        print(m, 'on', r[n - i - 1])", "for _ in range(int(input())):\n    n = int(input())\n    s1 = []\n    for i in range(n):\n        s1.append(input())\n    if s1[n - 1][0] == 'R':\n        print('Begin ' + s1[i][6:])\n        prev = 'R'\n    elif s1[n - 1][0] == 'L':\n        print('Begin ' + s1[i][5:])\n        prev = 'L'\n    for i in range(n - 2, -1, -1):\n        if prev == 'R' and s1[i][0] == 'L':\n            print('Left ' + s1[i][5:])\n            prev = 'L'\n        elif prev == 'R' and s1[i][0] != 'L':\n            print('Left ' + s1[i][6:])\n            prev = 'R'\n        elif prev == 'L' and s1[i][0] == 'L':\n            print('Right ' + s1[i][5:])\n            prev = 'L'\n        else:\n            print('Right ' + s1[i][6:])\n            prev = 'R'", "for _ in range(int(input())):\n    n = int(input())\n    s1 = []\n    for i in range(n):\n        s1.append(input())\n    if s1[n - 1][0] == 'R':\n        print('Begin ' + s1[i][6:])\n        prev = 'R'\n    elif s1[n - 1][0] == 'L':\n        print('Begin ' + s1[i][5:])\n        prev = 'L'\n    for i in range(n - 2, -1, -1):\n        if prev == 'R' and s1[i][0] == 'L':\n            print('Left ' + s1[i][5:])\n            prev = 'L'\n        elif prev == 'R' and s1[i][0] != 'L':\n            print('Left ' + s1[i][6:])\n            prev = 'R'\n        elif prev == 'L' and s1[i][0] == 'L':\n            print('Right ' + s1[i][5:])\n            prev = 'L'\n        else:\n            print('Right ' + s1[i][6:])\n            prev = 'R'", "x = int(input())\nfor i in range(x):\n    y = int(input())\n    dir = []\n    block = []\n    dir2 = []\n    for i in range(y):\n        x = input().split()\n        dir.append(x[0])\n        block.append(x[2:])\n    dir.reverse()\n    block.reverse()\n    dir2.append('Begin')\n    for i in range(len(dir) - 1):\n        if dir[i] == 'Right':\n            dir2.append('Left')\n        else:\n            dir2.append('Right')\n    for i in range(y):\n        print(str(dir2[i]) + ' on ' + ' '.join([str(elem) for elem in block[i]]))", "x = int(input())\nfor i in range(x):\n    y = int(input())\n    dir = []\n    block = []\n    dir2 = []\n    for i in range(y):\n        x = input().split()\n        dir.append(x[0])\n        block.append(x[2:])\n    dir.reverse()\n    block.reverse()\n    dir2.append('Begin')\n    for i in range(len(dir) - 1):\n        if dir[i] == 'Right':\n            dir2.append('Left')\n        else:\n            dir2.append('Right')\n    for i in range(y):\n        print(str(dir2[i]) + ' on ' + ' '.join([str(elem) for elem in block[i]]))", "for i in range(int(input())):\n    N = int(input())\n    A = []\n    B = []\n    for j in range(N):\n        x = input().split(' on ')\n        A.append(x[0])\n        B.append(x[1])\n    newa = []\n    for j in range(1, N):\n        if A[j] == 'Right':\n            newa.append('Left')\n        else:\n            newa.append('Right')\n    newa.append('Begin')\n    for j in range(N - 1, -1, -1):\n        print(newa[j] + ' on ' + B[j])", "for i in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    for j in range(n):\n        x = input().split(' on ')\n        a.append(x[0])\n        b.append(x[1])\n    newa = []\n    for j in range(1, n):\n        if a[j] == 'Right':\n            newa.append('Left')\n        else:\n            newa.append('Right')\n    newa.append('Begin')\n    for j in range(n - 1, -1, -1):\n        print(newa[j] + ' on ' + b[j])", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = []\n    b = []\n    for i in range(n):\n        x = input().split(' on ')\n        a.append(x[0])\n        b.append(x[1])\n    newa = []\n    for i in range(1, n):\n        if a[i] == 'Right':\n            newa.append('Left')\n        else:\n            newa.append('Right')\n    newa.append('Begin')\n    for i in range(n - 1, -1, -1):\n        print(newa[i] + ' on ' + b[i])", "T = int(input())\nfor x in range(T):\n    n = int(input())\n    a = []\n    b = []\n    nd = []\n    for i in range(n):\n        s = input().split(' on ')\n        a.append(s[0])\n        b.append(s[1])\n    for i in range(1, n):\n        if a[i] == 'Left':\n            nd.append('Right')\n        else:\n            nd.append('Left')\n    nd.append('Begin')\n    for i in range(n):\n        print(nd[n - 1 - i] + ' on ' + b[n - 1 - i])", "for x in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    nd = []\n    for i in range(n):\n        s = input().split(' on ')\n        a.append(s[0])\n        b.append(s[1])\n    for i in range(1, n):\n        if a[i] == 'Left':\n            nd.append('Right')\n        else:\n            nd.append('Left')\n    nd.append('Begin')\n    for i in range(n):\n        print(nd[n - 1 - i] + ' on ' + b[n - 1 - i])", "for _ in range(int(input())):\n    n = int(input())\n    d = [0] * n\n    p = [0] * n\n    nd = []\n    for i in range(n):\n        (d[i], p[i]) = input().split(' on ')\n    for i in range(1, n):\n        if d[i] == 'Left':\n            nd.append('Right')\n        else:\n            nd.append('Left')\n    nd.append('Begin')\n    for i in range(n):\n        print(nd[n - 1 - i] + ' on ' + p[n - 1 - i])", "d = {'Left': 'Right', 'Right': 'Left'}\nfor _ in range(int(input())):\n    n = int(input())\n    road = list()\n    for i in range(n):\n        s = list(map(str, input().split(' ')))\n        road.append(s)\n    k = road[n - 1][0]\n    print('Begin', *road[n - 1][1:])\n    for i in range(n - 2, -1, -1):\n        print(d[k], *road[i][1:])\n        k = road[i][0]", "for _ in range(int(input())):\n    n = int(input())\n    x = [input() for _ in range(n)]\n    last = ''\n    for i in range(n - 1, -1, -1):\n        a = x[i]\n        j = list(map(str, a.split()))\n        if last == '':\n            last = j[0]\n            j[0] = 'Begin'\n        elif last == 'Right':\n            last = j[0]\n            j[0] = 'Left'\n        else:\n            last = j[0]\n            j[0] = 'Right'\n        print(' '.join(j))", "for _ in range(int(input())):\n    l = []\n    for i in range(int(input())):\n        s = input()\n        l.append(s)\n    d = l[1:]\n    d = d[::-1]\n    d.insert(0, l[0])\n    c = l[::-1]\n    c[0] = c[0].replace(c[0][:c[0].index(' ')], d[0][:d[0].index(' ')])\n    print(c[0])\n    for i in range(1, len(c)):\n        c[i] = c[i].replace(c[i][:c[i].index(' ')], d[i][:d[i].index(' ')])\n        c[i] = c[i].replace('Right', '@')\n        c[i] = c[i].replace('Left', 'Right')\n        c[i] = c[i].replace('@', 'Left')\n        print(c[i])", "for _ in range(int(input())):\n    n = int(input())\n    ar = []\n    for i in range(n):\n        ar.append(input())\n    d = {'Left': 'Right', 'Right': 'Left'}\n    for i in range(n - 1, -1, -1):\n        if i == n - 1:\n            st = 'Begin '\n        else:\n            st = d[ar[i + 1].split()[0]] + ' '\n        st += ' '.join(ar[i].split()[1:])\n        print(st)", "for _ in range(int(input())):\n    n = int(input())\n    ar = []\n    for i in range(n):\n        ar.append(input())\n    d = {'Left': 'Right', 'Right': 'Left'}\n    for i in range(n - 1, -1, -1):\n        if i == n - 1:\n            st = 'Begin '\n        else:\n            st = d[ar[i + 1].split()[0]] + ' '\n        st += ' '.join(ar[i].split()[1:])\n        print(st)", "n = int(input())\nwhile n > 0:\n    direction = []\n    rest = []\n    a = int(input())\n    for i in range(a):\n        s = input()\n        ind = s.find(' ')\n        direction.append(s[:ind])\n        rest.append(s[ind:])\n    print('Begin' + rest[a - 1])\n    for i in range(a - 1, 0, -1):\n        if direction[i] == 'Left':\n            print('Right' + rest[i - 1])\n        else:\n            print('Left' + rest[i - 1])\n    n -= 1", "t = int(input())\nwhile t != 0:\n    d = int(input())\n    l = []\n    c = []\n    for i in range(d):\n        l.append(input())\n        if i != 0:\n            c.append(l[i][0])\n    l.reverse()\n    c.reverse()\n    for i in range(len(l)):\n        l[i] = l[i].split()\n        if i == 0:\n            l[i][0] = 'Begin'\n        elif c[i - 1] == 'L':\n            l[i][0] = 'Right'\n        else:\n            l[i][0] = 'Left'\n        l[i] = ' '.join(l[i])\n    for i in l:\n        print(i)\n    t -= 1", "for _ in range(int(input())):\n    N = int(input())\n    D = []\n    R = []\n    for _ in range(N):\n        S = input()\n        if S.startswith('Left'):\n            D.append('Right on')\n            R.append(S[8:])\n        elif S.startswith('Right'):\n            D.append('Left on')\n            R.append(S[9:])\n        else:\n            R.append(S[9:])\n    D.append('Begin on')\n    for (d, r) in zip(reversed(D), reversed(R)):\n        print(d, r)", "for _ in range(int(input())):\n    n = int(input())\n    direction = []\n    place = []\n    output = []\n    for _ in range(n):\n        inst = str(input())\n        temp = inst.find(' on ')\n        direction.append(inst[:temp])\n        place.append(inst[temp:])\n    print('Begin' + place[-1])\n    for i in range(n - 1, 0, -1):\n        if direction[i] == 'Left':\n            print('Right' + place[i - 1])\n        else:\n            print('Left' + place[i - 1])", "T = int(input())\nfor tests in range(T):\n    n = int(input())\n    arr = []\n    direction = []\n    rest = []\n    for _ in range(n):\n        arr = input()\n        ind = arr.find(' ')\n        direction.append(arr[:ind])\n        rest.append(arr[ind:])\n    print('Begin' + rest[n - 1])\n    for index in range(n - 1, 0, -1):\n        if direction[index] == 'Left':\n            print('Right' + rest[index - 1])\n        else:\n            print('Left' + rest[index - 1])", "from collections import *\ntc = int(input())\nfor _ in range(1, 1 + tc):\n    n = int(input())\n    dir = deque()\n    area = deque()\n    for i in range(n):\n        temp = input().split()\n        area.append(temp[1:])\n        if temp[0] == 'Right':\n            dir.append('Left')\n        if temp[0] == 'Left':\n            dir.append('Right')\n    dir.append('Begin')\n    while len(dir) > 0:\n        s = ' '.join(area.pop())\n        print(f'{dir.pop()} {s}')", "from collections import *\ntc = int(input())\nfor _ in range(1, 1 + tc):\n    n = int(input())\n    dir = deque()\n    area = deque()\n    for i in range(n):\n        temp = input().split()\n        area.append(temp[1:])\n        if temp[0] == 'Right':\n            dir.append('Left')\n        if temp[0] == 'Left':\n            dir.append('Right')\n    dir.append('Begin')\n    while len(dir) > 0:\n        s = ' '.join(area.pop())\n        print(f'{dir.pop()} {s}')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    for j in range(n):\n        x = [str(X) for X in input().split()]\n        a.append(x)\n    b = []\n    for k in range(0, n - 1):\n        if a[k + 1][0] == 'Right':\n            a[k][0] = 'Left'\n            b.append(a[k])\n        elif a[k + 1][0] == 'Left':\n            a[k][0] = 'Right'\n            b.append(a[k])\n    a[n - 1][0] = 'Begin'\n    print(*a[n - 1])\n    for l in range(n - 1):\n        print(*b[n - 2 - l])"]