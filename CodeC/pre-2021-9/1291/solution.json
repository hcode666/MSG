["for _ in range(int(input())):\n    (n, s) = (int(input()), input().strip())\n    (previ, num, _s, dic) = (s[0], 0, [], {})\n    for i in s:\n        if previ == i:\n            num += 1\n            continue\n        _s.append((previ, num))\n        if previ not in dic or dic[previ] < num:\n            dic[previ] = num\n        (previ, num) = (i, 1)\n    _s.append((previ, num))\n    if previ not in dic or dic[previ] < num:\n        dic[previ] = num\n    sum1 = sum(dic.values())\n    del dic, s\n    (l, dicc) = ([i for (i, j) in _s], {})\n    congr = [(l[i], l[i + 1]) for i in range(len(l) - 1)]\n    for i in range(len(congr)):\n        if congr[i] not in dicc:\n            dicc[congr[i]] = set()\n        dicc[congr[i]].add((_s[i][1], _s[i + 1][1]))\n    (sum2, ll) = (0, [])\n    for i in dicc.keys():\n        (sortedset, deleted) = (sorted(list(dicc[i])), [])\n        for k in range(1, len(sortedset)):\n            j = sortedset[k]\n            if j[1] > sortedset[k - 1][1]:\n                ind = k - 1\n                while ind >= 0 and j[1] >= sortedset[ind][1]:\n                    deleted.append(ind)\n                    ind = ind - 1\n            elif j[1] == sortedset[k - 1][1]:\n                deleted.append(k - 1)\n            elif j[0] == sortedset[k - 1][0] and j[1] < sortedset[k - 1][1]:\n                deleted.append(k)\n        (dicc[i], prevx, thissum) = (sorted(list(set(sortedset) - {sortedset[i] for i in deleted}), key=lambda x: x[0]), 0, 0)\n        for j in dicc[i]:\n            (x, y) = j\n            thissum += (x - prevx) * y\n            prevx = x\n        sum2 += thissum\n        ll.append((i, thissum))\n    ll.sort(key=lambda x: x[0])\n    print(sum1 + sum2)", "for _ in range(int(input())):\n    (n, s) = (int(input()), input().strip())\n    (previ, num, _s, dic) = (s[0], 0, [], {})\n    for i in s:\n        if previ == i:\n            num += 1\n            continue\n        _s.append((previ, num))\n        if previ not in dic or dic[previ] < num:\n            dic[previ] = num\n        (previ, num) = (i, 1)\n    _s.append((previ, num))\n    if previ not in dic or dic[previ] < num:\n        dic[previ] = num\n    sum1 = sum(dic.values())\n    del dic, s\n    (l, dicc) = ([i for (i, j) in _s], {})\n    congr = [(l[i], l[i + 1]) for i in range(len(l) - 1)]\n    for i in range(len(congr)):\n        if congr[i] not in dicc:\n            dicc[congr[i]] = set()\n        dicc[congr[i]].add((_s[i][1], _s[i + 1][1]))\n    (sum2, ll) = (0, [])\n    for i in dicc.keys():\n        (sortedset, deleted) = (sorted(list(dicc[i])), [])\n        for k in range(1, len(sortedset)):\n            j = sortedset[k]\n            if j[1] > sortedset[k - 1][1]:\n                ind = k - 1\n                while ind >= 0 and j[1] >= sortedset[ind][1]:\n                    deleted.append(ind)\n                    ind = ind - 1\n            elif j[1] == sortedset[k - 1][1]:\n                deleted.append(k - 1)\n            elif j[0] == sortedset[k - 1][0] and j[1] < sortedset[k - 1][1]:\n                deleted.append(k)\n        (dicc[i], prevx, thissum) = (sorted(list(set(sortedset) - {sortedset[i] for i in deleted}), key=lambda x: x[0]), 0, 0)\n        for j in dicc[i]:\n            (x, y) = j\n            thissum += (x - prevx) * y\n            prevx = x\n        sum2 += thissum\n        ll.append((i, thissum))\n    ll.sort(key=lambda x: x[0])\n    print(sum1 + sum2)", "for _ in range(int(input())):\n    (n, s) = (int(input()), input().strip())\n    (previ, num, _s, dic) = (s[0], 0, [], {})\n    for i in s:\n        if previ == i:\n            num += 1\n            continue\n        _s.append((previ, num))\n        if previ not in dic or dic[previ] < num:\n            dic[previ] = num\n        (previ, num) = (i, 1)\n    _s.append((previ, num))\n    if previ not in dic or dic[previ] < num:\n        dic[previ] = num\n    sum1 = sum(dic.values())\n    del dic, s\n    (l, dicc) = ([i for (i, j) in _s], {})\n    congr = [(l[i], l[i + 1]) for i in range(len(l) - 1)]\n    for i in range(len(congr)):\n        if congr[i] not in dicc:\n            dicc[congr[i]] = set()\n        dicc[congr[i]].add((_s[i][1], _s[i + 1][1]))\n    (sum2, ll) = (0, [])\n    for i in dicc.keys():\n        (sortedset, deleted) = (sorted(list(dicc[i])), [])\n        for k in range(1, len(sortedset)):\n            j = sortedset[k]\n            if j[1] > sortedset[k - 1][1]:\n                ind = k - 1\n                while ind >= 0 and j[1] >= sortedset[ind][1]:\n                    deleted.append(ind)\n                    ind = ind - 1\n            elif j[1] == sortedset[k - 1][1]:\n                deleted.append(k - 1)\n            elif j[0] == sortedset[k - 1][0] and j[1] < sortedset[k - 1][1]:\n                deleted.append(k)\n        (dicc[i], prevx, thissum) = (sorted(list(set(sortedset) - {sortedset[i] for i in deleted}), key=lambda x: x[0]), 0, 0)\n        for j in dicc[i]:\n            (x, y) = j\n            thissum += (x - prevx) * y\n            prevx = x\n        sum2 += thissum\n        ll.append((i, thissum))\n    ll.sort(key=lambda x: x[0])\n    print(sum1 + sum2)", "for _ in range(int(input())):\n    (n, s) = (int(input()), input().strip())\n    (previ, num, _s, dic) = (s[0], 0, [], {})\n    for i in s:\n        if previ == i:\n            num += 1\n            continue\n        _s.append((previ, num))\n        if previ not in dic or dic[previ] < num:\n            dic[previ] = num\n        (previ, num) = (i, 1)\n    _s.append((previ, num))\n    if previ not in dic or dic[previ] < num:\n        dic[previ] = num\n    sum1 = sum(dic.values())\n    del dic, s\n    (l, dicc) = ([i for (i, j) in _s], {})\n    congr = [(l[i], l[i + 1]) for i in range(len(l) - 1)]\n    for i in range(len(congr)):\n        if congr[i] not in dicc:\n            dicc[congr[i]] = set()\n        dicc[congr[i]].add((_s[i][1], _s[i + 1][1]))\n    (sum2, ll) = (0, [])\n    for i in dicc.keys():\n        (sortedset, deleted) = (sorted(list(dicc[i])), [])\n        for k in range(1, len(sortedset)):\n            j = sortedset[k]\n            if j[1] > sortedset[k - 1][1]:\n                ind = k - 1\n                while ind >= 0 and j[1] >= sortedset[ind][1]:\n                    deleted.append(ind)\n                    ind = ind - 1\n            elif j[1] == sortedset[k - 1][1]:\n                deleted.append(k - 1)\n            elif j[0] == sortedset[k - 1][0] and j[1] < sortedset[k - 1][1]:\n                deleted.append(k)\n        (dicc[i], prevx, thissum) = (sorted(list(set(sortedset) - {sortedset[i] for i in deleted}), key=lambda x: x[0]), 0, 0)\n        for j in dicc[i]:\n            (x, y) = j\n            thissum += (x - prevx) * y\n            prevx = x\n        sum2 += thissum\n        ll.append((i, thissum))\n    ll.sort(key=lambda x: x[0])\n    print(sum1 + sum2)", "for _ in range(int(input())):\n    (n, s) = (int(input()), input().strip())\n    (previ, num, _s, dic) = (s[0], 0, [], {})\n    for i in s:\n        if previ == i:\n            num += 1\n            continue\n        _s.append((previ, num))\n        if previ not in dic or dic[previ] < num:\n            dic[previ] = num\n        (previ, num) = (i, 1)\n    _s.append((previ, num))\n    if previ not in dic or dic[previ] < num:\n        dic[previ] = num\n    sum1 = sum(dic.values())\n    del dic, s\n    (l, dicc) = ([i for (i, j) in _s], {})\n    congr = [(l[i], l[i + 1]) for i in range(len(l) - 1)]\n    for i in range(len(congr)):\n        if congr[i] not in dicc:\n            dicc[congr[i]] = set()\n        dicc[congr[i]].add((_s[i][1], _s[i + 1][1]))\n    (sum2, ll) = (0, [])\n    for i in dicc.keys():\n        (sortedset, deleted) = (sorted(list(dicc[i])), [])\n        for k in range(1, len(sortedset)):\n            j = sortedset[k]\n            if j[1] > sortedset[k - 1][1]:\n                ind = k - 1\n                while ind >= 0 and j[1] >= sortedset[ind][1]:\n                    deleted.append(ind)\n                    ind = ind - 1\n            elif j[1] == sortedset[k - 1][1]:\n                deleted.append(k - 1)\n            elif j[0] == sortedset[k - 1][0] and j[1] < sortedset[k - 1][1]:\n                deleted.append(k)\n        (dicc[i], prevx, thissum) = (sorted(list(set(sortedset) - {sortedset[i] for i in deleted}), key=lambda x: x[0]), 0, 0)\n        for j in dicc[i]:\n            (x, y) = j\n            thissum += (x - prevx) * y\n            prevx = x\n        sum2 += thissum\n        ll.append((i, thissum))\n    ll.sort(key=lambda x: x[0])\n    print(sum1 + sum2)", "for _ in range(int(input())):\n    (n, s) = (int(input()), input().strip())\n    (previ, num, _s, dic) = (s[0], 0, [], {})\n    for i in s:\n        if previ == i:\n            num += 1\n            continue\n        _s.append((previ, num))\n        if previ not in dic or dic[previ] < num:\n            dic[previ] = num\n        (previ, num) = (i, 1)\n    _s.append((previ, num))\n    if previ not in dic or dic[previ] < num:\n        dic[previ] = num\n    sum1 = sum(dic.values())\n    del dic, s\n    (l, dicc) = ([i for (i, j) in _s], {})\n    congr = [(l[i], l[i + 1]) for i in range(len(l) - 1)]\n    for i in range(len(congr)):\n        if congr[i] not in dicc:\n            dicc[congr[i]] = set()\n        dicc[congr[i]].add((_s[i][1], _s[i + 1][1]))\n    (sum2, ll) = (0, [])\n    for i in dicc.keys():\n        (sortedset, deleted) = (sorted(list(dicc[i])), [])\n        for k in range(1, len(sortedset)):\n            j = sortedset[k]\n            if j[1] > sortedset[k - 1][1]:\n                ind = k - 1\n                while ind >= 0 and j[1] >= sortedset[ind][1]:\n                    deleted.append(ind)\n                    ind = ind - 1\n            elif j[1] == sortedset[k - 1][1]:\n                deleted.append(k - 1)\n            elif j[0] == sortedset[k - 1][0] and j[1] < sortedset[k - 1][1]:\n                deleted.append(k)\n        (dicc[i], prevx, thissum) = (sorted(list(set(sortedset) - {sortedset[i] for i in deleted}), key=lambda x: x[0]), 0, 0)\n        for j in dicc[i]:\n            (x, y) = j\n            thissum += (x - prevx) * y\n            prevx = x\n        sum2 += thissum\n        ll.append((i, thissum))\n    ll.sort(key=lambda x: x[0])\n    print(sum1 + sum2)", "for _ in range(int(input())):\n    (n, s) = (int(input()), input().strip())\n    (previ, num, _s, dic) = (s[0], 0, [], {})\n    for i in s:\n        if previ == i:\n            num += 1\n            continue\n        _s.append((previ, num))\n        if previ not in dic or dic[previ] < num:\n            dic[previ] = num\n        (previ, num) = (i, 1)\n    _s.append((previ, num))\n    if previ not in dic or dic[previ] < num:\n        dic[previ] = num\n    sum1 = sum(dic.values())\n    del dic, s\n    (l, dicc) = ([i for (i, j) in _s], {})\n    congr = [(l[i], l[i + 1]) for i in range(len(l) - 1)]\n    for i in range(len(congr)):\n        if congr[i] not in dicc:\n            dicc[congr[i]] = set()\n        dicc[congr[i]].add((_s[i][1], _s[i + 1][1]))\n    (sum2, ll) = (0, [])\n    for i in dicc.keys():\n        (sortedset, deleted) = (sorted(list(dicc[i])), [])\n        for k in range(1, len(sortedset)):\n            j = sortedset[k]\n            if j[1] > sortedset[k - 1][1]:\n                ind = k - 1\n                while ind >= 0 and j[1] >= sortedset[ind][1]:\n                    deleted.append(ind)\n                    ind = ind - 1\n            elif j[1] == sortedset[k - 1][1]:\n                deleted.append(k - 1)\n            elif j[0] == sortedset[k - 1][0] and j[1] < sortedset[k - 1][1]:\n                deleted.append(k)\n        (dicc[i], prevx, thissum) = (sorted(list(set(sortedset) - {sortedset[i] for i in deleted}), key=lambda x: x[0]), 0, 0)\n        for j in dicc[i]:\n            (x, y) = j\n            thissum += (x - prevx) * y\n            prevx = x\n        sum2 += thissum\n        ll.append((i, thissum))\n    ll.sort(key=lambda x: x[0])\n    print(sum1 + sum2)", "for _ in range(int(input())):\n    (n, s) = (int(input()), input().strip())\n    (previ, num, _s, dic) = (s[0], 0, [], {})\n    for i in s:\n        if previ == i:\n            num += 1\n            continue\n        _s.append((previ, num))\n        if previ not in dic or dic[previ] < num:\n            dic[previ] = num\n        (previ, num) = (i, 1)\n    _s.append((previ, num))\n    if previ not in dic or dic[previ] < num:\n        dic[previ] = num\n    sum1 = sum(dic.values())\n    del dic, s\n    (l, dicc) = ([i for (i, j) in _s], {})\n    congr = [(l[i], l[i + 1]) for i in range(len(l) - 1)]\n    for i in range(len(congr)):\n        if congr[i] not in dicc:\n            dicc[congr[i]] = set()\n        dicc[congr[i]].add((_s[i][1], _s[i + 1][1]))\n    (sum2, ll) = (0, [])\n    for i in dicc.keys():\n        (sortedset, deleted) = (sorted(list(dicc[i])), [])\n        for k in range(1, len(sortedset)):\n            j = sortedset[k]\n            if j[1] > sortedset[k - 1][1]:\n                ind = k - 1\n                while ind >= 0 and j[1] >= sortedset[ind][1]:\n                    deleted.append(ind)\n                    ind = ind - 1\n            elif j[1] == sortedset[k - 1][1]:\n                deleted.append(k - 1)\n            elif j[0] == sortedset[k - 1][0] and j[1] < sortedset[k - 1][1]:\n                deleted.append(k)\n        (dicc[i], prevx, thissum) = (sorted(list(set(sortedset) - {sortedset[i] for i in deleted}), key=lambda x: x[0]), 0, 0)\n        for j in dicc[i]:\n            (x, y) = j\n            thissum += (x - prevx) * y\n            prevx = x\n        sum2 += thissum\n        ll.append((i, thissum))\n    ll.sort(key=lambda x: x[0])\n    print(sum1 + sum2)", "for _ in range(int(input())):\n    (n, s) = (int(input()), input().strip())\n    (previ, num, _s, dic) = (s[0], 0, [], {})\n    for i in s:\n        if previ == i:\n            num += 1\n            continue\n        _s.append((previ, num))\n        if previ not in dic or dic[previ] < num:\n            dic[previ] = num\n        (previ, num) = (i, 1)\n    _s.append((previ, num))\n    if previ not in dic or dic[previ] < num:\n        dic[previ] = num\n    sum1 = sum(dic.values())\n    del dic, s\n    (l, dicc) = ([i for (i, j) in _s], {})\n    congr = [(l[i], l[i + 1]) for i in range(len(l) - 1)]\n    for i in range(len(congr)):\n        if congr[i] not in dicc:\n            dicc[congr[i]] = set()\n        dicc[congr[i]].add((_s[i][1], _s[i + 1][1]))\n    (sum2, ll) = (0, [])\n    for i in dicc.keys():\n        (sortedset, deleted) = (sorted(list(dicc[i])), [])\n        for k in range(1, len(sortedset)):\n            j = sortedset[k]\n            if j[1] > sortedset[k - 1][1]:\n                ind = k - 1\n                while ind >= 0 and j[1] >= sortedset[ind][1]:\n                    deleted.append(ind)\n                    ind = ind - 1\n            elif j[1] == sortedset[k - 1][1]:\n                deleted.append(k - 1)\n            elif j[0] == sortedset[k - 1][0] and j[1] < sortedset[k - 1][1]:\n                deleted.append(k)\n        (dicc[i], prevx, thissum) = (sorted(list(set(sortedset) - {sortedset[i] for i in deleted}), key=lambda x: x[0]), 0, 0)\n        for j in dicc[i]:\n            (x, y) = j\n            thissum += (x - prevx) * y\n            prevx = x\n        sum2 += thissum\n        ll.append((i, thissum))\n    ll.sort(key=lambda x: x[0])\n    print(sum1 + sum2)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = input().strip()\n    previ = s[0]\n    num = 0\n    _s = []\n    dic = {}\n    for i in s:\n        if previ == i:\n            num += 1\n            continue\n        _s.append((previ, num))\n        if previ not in dic or dic[previ] < num:\n            dic[previ] = num\n        previ = i\n        num = 1\n    _s.append((previ, num))\n    if previ not in dic or dic[previ] < num:\n        dic[previ] = num\n    sum1 = sum(dic.values())\n    del dic, s\n    l = [i for (i, j) in _s]\n    congr = [(l[i], l[i + 1]) for i in range(len(l) - 1)]\n    dicc = {}\n    for i in range(len(congr)):\n        if congr[i] not in dicc:\n            dicc[congr[i]] = set()\n        dicc[congr[i]].add((_s[i][1], _s[i + 1][1]))\n    sum2 = 0\n    ll = []\n    for i in dicc.keys():\n        theset = dicc[i]\n        sortedset = sorted(list(theset))\n        deleted = []\n        for k in range(1, len(sortedset)):\n            j = sortedset[k]\n            if j[1] > sortedset[k - 1][1]:\n                ind = k - 1\n                while ind >= 0 and j[1] >= sortedset[ind][1]:\n                    deleted.append(ind)\n                    ind = ind - 1\n            elif j[1] == sortedset[k - 1][1]:\n                deleted.append(k - 1)\n            elif j[0] == sortedset[k - 1][0] and j[1] < sortedset[k - 1][1]:\n                deleted.append(k)\n        dicc[i] = sorted(list(set(sortedset) - {sortedset[i] for i in deleted}), key=lambda x: x[0])\n        prevx = 0\n        thissum = 0\n        for j in dicc[i]:\n            (x, y) = j\n            thissum += (x - prevx) * y\n            prevx = x\n        sum2 += thissum\n        ll.append((i, thissum))\n    ll.sort(key=lambda x: x[0])\n    thesum = sum1 + sum2\n    print(thesum)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = input().strip()\n    previ = s[0]\n    num = 0\n    _s = []\n    dic = {}\n    for i in s:\n        if previ == i:\n            num += 1\n            continue\n        _s.append((previ, num))\n        if previ not in dic or dic[previ] < num:\n            dic[previ] = num\n        previ = i\n        num = 1\n    _s.append((previ, num))\n    if previ not in dic or dic[previ] < num:\n        dic[previ] = num\n    sum1 = sum(dic.values())\n    del dic, s\n    l = [i for (i, j) in _s]\n    congr = [(l[i], l[i + 1]) for i in range(len(l) - 1)]\n    dicc = {}\n    for i in range(len(congr)):\n        if congr[i] not in dicc:\n            dicc[congr[i]] = set()\n        dicc[congr[i]].add((_s[i][1], _s[i + 1][1]))\n    sum2 = 0\n    ll = []\n    for i in dicc.keys():\n        theset = dicc[i]\n        sortedset = sorted(list(theset))\n        deleted = []\n        for k in range(1, len(sortedset)):\n            j = sortedset[k]\n            if j[1] > sortedset[k - 1][1]:\n                ind = k - 1\n                while ind >= 0 and j[1] >= sortedset[ind][1]:\n                    deleted.append(ind)\n                    ind = ind - 1\n            elif j[1] == sortedset[k - 1][1]:\n                deleted.append(k - 1)\n            elif j[0] == sortedset[k - 1][0] and j[1] < sortedset[k - 1][1]:\n                deleted.append(k)\n        dicc[i] = sorted(list(set(sortedset) - {sortedset[i] for i in deleted}), key=lambda x: x[0])\n        prevx = 0\n        thissum = 0\n        for j in dicc[i]:\n            (x, y) = j\n            thissum += (x - prevx) * y\n            prevx = x\n        sum2 += thissum\n        ll.append((i, thissum))\n    ll.sort(key=lambda x: x[0])\n    thesum = sum1 + sum2\n    print(thesum)"]