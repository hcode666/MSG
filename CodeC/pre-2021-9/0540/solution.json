["for t in range(int(input())):\n    n = int(input())\n    l = [int(k) for k in input().split()]\n    arr = []\n    for i in range(n):\n        arr.append([])\n    ans = 'Poor Chef'\n    for i in range(n):\n        arr[l[i] - 1].append(i + 1)\n    for i in range(n):\n        ctr = 0\n        for j in arr[i]:\n            if len(arr[j - 1]) > 0:\n                ctr = ctr + 1\n        if ctr >= 2:\n            ans = 'Truly Happy'\n            break\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    l = [int(k) for k in input().split()]\n    arr = []\n    for i in range(n):\n        arr.append([])\n    ans = 'Poor Chef'\n    for i in range(n):\n        arr[l[i] - 1].append(i + 1)\n    for i in range(n):\n        ctr = 0\n        for j in arr[i]:\n            if len(arr[j - 1]) > 0:\n                ctr = ctr + 1\n        if ctr >= 2:\n            ans = 'Truly Happy'\n            break\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    l = [int(k) for k in input().split()]\n    arr = []\n    for i in range(n):\n        arr.append([])\n    ans = 'Poor Chef'\n    for i in range(n):\n        arr[l[i] - 1].append(i + 1)\n    for i in range(n):\n        ctr = 0\n        for j in arr[i]:\n            if len(arr[j - 1]) > 0:\n                ctr = ctr + 1\n        if ctr >= 2:\n            ans = 'Truly Happy'\n            break\n    print(ans)", "from collections import defaultdict\nnumTest = int(input())\nfor _ in range(numTest):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    db = defaultdict(int)\n    uniq = set(arr)\n    for (idx, num) in enumerate(arr):\n        if idx + 1 in uniq:\n            db[num] += 1\n            if db[num] == 2:\n                print('Truly Happy')\n                break\n    else:\n        print('Poor Chef')", "from collections import defaultdict\nnumTest = int(input())\nfor _ in range(numTest):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    db = defaultdict(int)\n    uniq = [0] * n\n    for i in arr:\n        uniq[i - 1] = 1\n    for (idx, num) in enumerate(arr):\n        if uniq[idx] == 1:\n            db[num] += 1\n    for n in db.values():\n        if n >= 2:\n            print('Truly Happy')\n            break\n    else:\n        print('Poor Chef')", "from collections import defaultdict\nnumTest = int(input())\nfor _ in range(numTest):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    db = defaultdict(int)\n    uniq = set(arr)\n    for (idx, num) in enumerate(arr):\n        if idx + 1 in uniq:\n            db[num] += 1\n    for n in db.values():\n        if n >= 2:\n            print('Truly Happy')\n            break\n    else:\n        print('Poor Chef')", "from collections import defaultdict\nnumTest = int(input())\nfor _ in range(numTest):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    db = defaultdict(list)\n    uniq = set(arr)\n    for (idx, num) in enumerate(arr):\n        db[num].append(idx + 1)\n    for idxl in db.values():\n        c = 0\n        for i in idxl:\n            if i in uniq:\n                c += 1\n            if c == 2:\n                print('Truly Happy')\n                break\n        else:\n            continue\n        break\n    else:\n        print('Poor Chef')", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = set(arr)\n    m = {}\n    for (i, a) in enumerate(arr):\n        if a not in m:\n            m[a] = []\n        m[a].append(i + 1)\n    for a in m:\n        count = 0\n        for i in m[a]:\n            if i in s:\n                count += 1\n            if count == 2:\n                return 'Truly Happy'\n    return 'Poor Chef'\ntc = int(input())\nfor t in range(tc):\n    print(solve())", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = set(arr)\n    m = {}\n    for (i, a) in enumerate(arr):\n        if a not in m:\n            m[a] = []\n        m[a].append(i + 1)\n    for a in m:\n        count = 0\n        for i in m[a]:\n            if i in s:\n                count += 1\n            if count == 2:\n                return 'Truly Happy'\n    return 'Poor Chef'\ntc = int(input())\nfor t in range(tc):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    f = [0] * (n + 1)\n    l.insert(0, 0)\n    flag = True\n    for i in range(1, n + 1, 1):\n        src = l[i]\n        tar = l[src]\n        if f[tar] == 0:\n            f[tar] = src\n        elif f[tar] != src:\n            flag = False\n    if flag:\n        print('Poor Chef')\n    else:\n        print('Truly Happy')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    seti1 = set(arr)\n    l = [arr[i - 1] for i in arr]\n    seti2 = set(l)\n    if len(seti1) <= len(seti2):\n        print('Poor Chef')\n    else:\n        print('Truly Happy')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    seti1 = set(arr)\n    l = [arr[i - 1] for i in arr]\n    seti2 = set(l)\n    if len(seti1) <= len(seti2):\n        print('Poor Chef')\n    else:\n        print('Truly Happy')", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    hsh = set()\n    hsh1 = set(arr)\n    f = 0\n    for i in range(1, n + 1):\n        if i in hsh1:\n            if arr[i - 1] in hsh:\n                print('Truly Happy')\n                f = 1\n                break\n            else:\n                hsh.add(arr[i - 1])\n    if not f:\n        print('Poor Chef')\n    t -= 1", "ans = ['Poor Chef', 'Truly Happy']\nfor ti in range(int(input())):\n    n = int(input())\n    ays = list(map(int, input().split()))\n    unq = set(ays)\n    aas = set((ays[a - 1] for a in unq))\n    print(ans[len(aas) < len(unq)])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    seti1 = set(arr)\n    l = [arr[i - 1] for i in arr]\n    seti2 = set(l)\n    if len(seti1) <= len(seti2):\n        print('Poor Chef')\n    else:\n        print('Truly Happy')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ln1 = len(set(l))\n    l1 = []\n    for i in l:\n        l1.append(l[i - 1])\n    ln2 = len(set(l1))\n    if ln1 == ln2:\n        print('Poor Chef')\n    else:\n        print('Truly Happy')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 'Poor Chef'\n    sa = set(a)\n    l = [a[i - 1] for i in a]\n    sb = set(l)\n    if len(sa) > len(sb):\n        ans = 'Truly Happy'\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    dict1 = {}\n    flag = False\n    S = [int(x) for x in input().split()]\n    for i in range(N):\n        if S[i] in dict1.keys():\n            dict1[S[i]].append(i + 1)\n        else:\n            dict1[S[i]] = [i + 1]\n    for (key, val) in dict1.items():\n        if len(val) == 1:\n            continue\n        count = 0\n        for e in val:\n            if e in dict1.keys():\n                count += 1\n            if count == 2:\n                flag = True\n                break\n        if flag == True:\n            break\n    if flag == True:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "def f(rec, only_these):\n    temp = list(only_these.keys())\n    for i in temp:\n        c = 0\n        for j in only_these[i]:\n            if rec[j]:\n                c += 1\n                if c > 1:\n                    return 'Truly Happy'\n    return 'Poor Chef'\nfor tt in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    li.insert(0, 'anything')\n    n += 1\n    rec = {i: [] for i in range(n + 1)}\n    c = 0\n    u = 0\n    if u > 100:\n        c = 0\n    for i in li[1:]:\n        c += 1\n        rec[i].append(c)\n    only_these = {i: rec[i] for i in rec.keys() if len(rec[i]) > 1}\n    print(f(rec, only_these))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    d = {}\n    k = {}\n    for i in a:\n        k[i] = 1\n    flag = 0\n    for i in range(len(a)):\n        if d.get(a[i], 0) == 0:\n            d[a[i]] = [i + 1]\n        else:\n            d[a[i]].append(i + 1)\n    for i in list(d.keys()):\n        c = 0\n        for j in d[i]:\n            if k.get(j, 0) == 1:\n                c += 1\n        if c >= 2:\n            flag = 1\n            break\n    if flag == 1:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    A = set(arr)\n    B = set((arr[i - 1] for i in A))\n    if A == B:\n        print('Poor Chef')\n    else:\n        print('Truly Happy')", "from collections import defaultdict\nx = int(input())\nfor __ in range(x):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = defaultdict(list)\n    for i in range(n):\n        d[a[i]].append(i)\n    b = set(a)\n    for i in b:\n        c = 0\n        if len(d[i]) > 1:\n            for j in d[i]:\n                if len(d[j + 1]) > 0:\n                    c += 1\n                if c == 2:\n                    break\n        if c == 2:\n            break\n    if c == 2:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "test = int(input())\nwhile test != 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a1 = []\n    for i in a:\n        a1.append(a[i - 1])\n    l1 = set(a)\n    l2 = set(a1)\n    if len(l1) > len(l2):\n        print('Truly Happy')\n    else:\n        print('Poor Chef')\n    test = test - 1", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    flag = 0\n    d = {}\n    for i in range(n):\n        if a[i] in d.keys():\n            d[a[i]].append(i + 1)\n        else:\n            d[a[i]] = [i + 1]\n    for x in d.values():\n        if flag == 1:\n            break\n        elif len(x) != 1:\n            y = len(x)\n            for i in range(y - 1):\n                if x[i] in d.keys():\n                    for j in range(i + 1, y):\n                        if x[j] in d.keys():\n                            print('Truly Happy')\n                            flag = 1\n                            break\n                if flag == 1:\n                    break\n    if flag == 0:\n        print('Poor Chef')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    fl = 0\n    s = set(a)\n    y = set((a[h - 1] for h in s))\n    if len(y) < len(s):\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    b = list(map(int, input().split()))\n    a1 = []\n    for i in b:\n        a1.append(b[i - 1])\n    if len(set(b)) > len(set(a1)):\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "test = int(input())\nfor k in range(test):\n    N = int(input())\n    A1 = list(map(int, input().split()))\n    A2 = []\n    for item in A1:\n        A2.append(A1[item - 1])\n    l1 = set(A1)\n    l2 = set(A2)\n    if len(l1) > len(l2):\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "ans = ['Poor Chef', 'Truly Happy']\nfor ti in range(int(input())):\n    n = int(input())\n    ays = list(map(int, input().split()))\n    unq = set(ays)\n    aas = set((ays[a - 1] for a in unq))\n    print(ans[len(aas) < len(unq)])", "T = int(input())\nwhile T > 0:\n    N = int(input())\n    Dict = {}\n    CopyDict = {}\n    L = list(map(int, input().split()))\n    O = set([])\n    for i in range(0, len(L)):\n        if L[i] not in O:\n            O.add(L[i])\n        if L[i] in Dict:\n            if i + 1 in Dict[L[i]]:\n                Dict[L[i]].remove(i + 1)\n            else:\n                Dict[L[i]].add(i + 1)\n                CopyDict[L[i]].add(i + 1)\n        else:\n            Dict[L[i]] = set([i + 1])\n            CopyDict[L[i]] = set([i + 1])\n    for i in Dict:\n        if len(CopyDict[i]) < 2:\n            CopyDict.pop(i)\n    flag = -1\n    for i in CopyDict:\n        count = 0\n        for j in CopyDict[i]:\n            if j in O:\n                count += 1\n                if count >= 2:\n                    flag = 0\n                    break\n    if flag == -1:\n        print('Poor Chef')\n    else:\n        print('Truly Happy')\n    T -= 1", "ans = ['Poor Chef', 'Truly Happy']\nfor ti in range(int(input())):\n    n = int(input())\n    ays = list(map(int, input().split()))\n    unq = set(ays)\n    aas = set((ays[a - 1] for a in unq))\n    print(ans[len(aas) < len(unq)])", "ans = ['Poor Chef', 'Truly Happy']\nfor ti in range(int(input())):\n    n = int(input())\n    ays = list(map(int, input().split()))\n    unq = set(ays)\n    aas = set((ays[a - 1] for a in unq))\n    print(ans[len(aas) < len(unq)])", "ans = ['Poor Chef', 'Truly Happy']\nfor ti in range(int(input())):\n    n = int(input())\n    ays = list(map(int, input().split()))\n    unq = set(ays)\n    aas = set((ays[a - 1] for a in unq))\n    print(ans[len(aas) < len(unq)])", "t = int(input())\nwhile t != 0:\n    flag = False\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    position = [0] * n\n    for (i, element) in enumerate(a):\n        if position[a[element - 1] - 1] == 0:\n            position[a[element - 1] - 1] = element\n        elif position[a[element - 1] - 1] != element:\n            flag = True\n            break\n    if flag:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    r = int(input())\n    a = [int(x) for x in input().split()]\n    a.insert(0, 0)\n    b = [[0] for x in range(r + 1)]\n    (ind, flag) = (0, 0)\n    for i in a:\n        b[i][0] = b[i][0] + 1\n        b[i].append(ind)\n        ind = ind + 1\n    for i in range(r + 1):\n        if b[i][0] >= 2:\n            flag = 0\n            for j in b[i][1:]:\n                if b[j][0] != 0:\n                    flag = flag + 1\n                if flag >= 2:\n                    print('Truly Happy')\n                    break\n        if flag >= 2:\n            break\n    if flag <= 1:\n        print('Poor Chef')", "t = int(input())\nfor i in range(t):\n    r = int(input())\n    a = [int(x) for x in input().split()]\n    a.insert(0, 0)\n    b = [[0] for x in range(r + 1)]\n    (ind, flag) = (0, 0)\n    for i in a:\n        b[i][0] = b[i][0] + 1\n        b[i].append(ind)\n        ind = ind + 1\n    for i in range(r + 1):\n        if b[i][0] >= 2:\n            flag = 0\n            for j in b[i][1:]:\n                if b[j][0] != 0:\n                    flag = flag + 1\n                if flag >= 2:\n                    print('Truly Happy')\n                    break\n        if flag >= 2:\n            break\n    if flag <= 1:\n        print('Poor Chef')", "from collections import defaultdict\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().strip().split(' ')))\n    d = defaultdict(set)\n    for i in range(n):\n        d[l[l[i] - 1]].add(l[i])\n    f = 0\n    for k in d.keys():\n        if len(d[k]) > 1:\n            print('Truly Happy')\n            f = 1\n            break\n    if f == 0:\n        print('Poor Chef')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    lst = []\n    for i in range(n):\n        lst.append([a[a[i] - 1], a[i]])\n    lst.sort()\n    f = 0\n    for i in range(0, n - 1):\n        if lst[i][0] == lst[i + 1][0] and lst[i][1] != lst[i + 1][1]:\n            f = 1\n            break\n    if f == 0:\n        print('Poor Chef')\n    else:\n        print('Truly Happy')", "for _ in range(0, int(input())):\n    t = int(input())\n    li = list(map(int, input().split()))\n    l = list(set(li))\n    l1 = []\n    l2 = [0] * t\n    flag = 1\n    for i in range(0, len(l)):\n        l1.append(li[l[i] - 1])\n    for i in range(0, len(l1)):\n        l2[l1[i] - 1] += 1\n        if l2[l1[i] - 1] >= 2:\n            print('Truly Happy')\n            flag = 0\n            break\n        else:\n            flag = 1\n    if flag == 1:\n        print('Poor Chef')", "for _ in range(0, int(input())):\n    t = int(input())\n    li = list(map(int, input().split()))\n    l = list(set(li))\n    l1 = []\n    l2 = [0] * t\n    flag = 1\n    for i in range(0, len(l)):\n        l1.append(li[l[i] - 1])\n    for i in range(0, len(l1)):\n        l2[l1[i] - 1] += 1\n        if l2[l1[i] - 1] >= 2:\n            print('Truly Happy')\n            flag = 0\n            break\n        else:\n            flag = 1\n    if flag == 1:\n        print('Poor Chef')", "t = int(input())\nfor i in range(t):\n    d = {}\n    n = int(input())\n    l = list(map(int, input().strip().split(' ')))\n    for j in range(1, len(l) + 1):\n        if l[j - 1] in d:\n            d[l[j - 1]].append(j)\n        else:\n            d[l[j - 1]] = [j]\n    f = 0\n    for k in d:\n        if len(d[k]) < 2:\n            continue\n        av = list(set(d[k]) - (set(d[k]) - set(d.keys())))\n        if len(av) >= 2:\n            print('Truly Happy')\n            f = 1\n            break\n    if f == 0:\n        print('Poor Chef')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    aur = set(arr)\n    aaur = set((arr[x - 1] for x in arr))\n    if len(aaur) < len(aur):\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "t = int(input())\nfor ty in range(t):\n    n = int(input())\n    arr1 = [int(x) for x in input().split()]\n    grap = {}\n    for i in range(n):\n        if arr1[i] not in grap:\n            grap[arr1[i]] = []\n            grap[arr1[i]].append(i + 1)\n        else:\n            grap[arr1[i]].append(i + 1)\n    flag = 0\n    for key in grap:\n        cnt = 0\n        for i in range(len(grap[key])):\n            if grap[key][i] in grap:\n                cnt += 1\n            if cnt == 2:\n                flag = 1\n                break\n        if flag == 1:\n            break\n    if flag == 1:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = dict()\n    l = list()\n    for x in input().split():\n        x = int(x)\n        arr[x] = 1\n        l.append(x)\n    keys = list(arr)\n    freq = dict()\n    flag = 0\n    for i in keys:\n        if i <= len(l):\n            if l[i - 1] not in freq:\n                freq[l[i - 1]] = 1\n            else:\n                flag = 1\n                break\n    if flag == 0:\n        print('Poor Chef')\n    else:\n        print('Truly Happy')", "count = int(input())\nwhile count > 0:\n    count = count - 1\n    n = int(input())\n    h1 = {}\n    h2 = {}\n    arr = list(map(int, input().split()))\n    suc = False\n    for x in arr:\n        h1[x] = 1\n    for (counter, x) in enumerate(arr):\n        if x in h2 and counter + 1 in h1:\n            suc = True\n            break\n        elif counter + 1 in h1:\n            h2[x] = 1\n    if suc is True:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "for _ in range(int(input())):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    d = {}\n    for i in range(n):\n        if A[i] in d:\n            d[A[i]].append(i + 1)\n        else:\n            d[A[i]] = [i + 1]\n    (flag1, flag2) = (False, False)\n    for i in d:\n        (flag1, flag2) = (False, False)\n        if len(d[i]) > 1:\n            for j in d[i]:\n                if j in d:\n                    if flag1:\n                        flag2 = True\n                    else:\n                        flag1 = True\n                if flag1 and flag2:\n                    break\n        if flag1 and flag2:\n            break\n    if flag1 and flag2:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.insert(0, -1)\n    dict = {}\n    for i in range(1, n + 1):\n        if a[i] in dict:\n            dict[a[i]].append(i)\n        else:\n            dict[a[i]] = [i]\n    fl = False\n    for x in dict.keys():\n        if len(dict[x]) == 1:\n            continue\n        l = dict[x]\n        for j in range(len(l)):\n            if l[j] in dict:\n                for k in range(j + 1, len(l)):\n                    if l[k] in dict:\n                        print('Truly Happy')\n                        fl = True\n                        break\n                else:\n                    break\n            if fl:\n                break\n        if fl:\n            break\n    else:\n        print('Poor Chef')", "from sys import stdin\nhappy = compile('print(\"Truly Happy\")', '<string>', 'exec')\nsad = compile('print(\"Poor Chef\")', '<string>', 'exec')\nfor test_case in range(int(stdin.readline())):\n    stdin.readline()\n    l = list(map(int, stdin.readline().split(' ')))\n    _set = set(l)\n    dict = {}\n    for i in _set:\n        dict.setdefault(l[i - 1], 0)\n        dict[l[i - 1]] += 1\n    temp = list(filter(lambda x: x > 1, dict.values()))\n    if len(temp) == 0:\n        exec(sad)\n    else:\n        exec(happy)", "from sys import stdin\nfor test_case in range(int(stdin.readline())):\n    stdin.readline()\n    l = list(map(int, stdin.readline().split(' ')))\n    _set = set(l)\n    dict = {}\n    for i in _set:\n        dict.setdefault(l[i - 1], 0)\n        dict[l[i - 1]] += 1\n    temp = list(filter(lambda x: x > 1, list(dict.values())))\n    if len(temp) == 0:\n        print('Poor Chef')\n    else:\n        print('Truly Happy')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = [int(o) for o in input().split()]\n    b = list(set(a))\n    subarr = [0] * len(b)\n    for i in range(len(b)):\n        subarr[i] = a[b[i] - 1]\n    flag = 0\n    if len(subarr) != len(set(subarr)):\n        flag = 1\n    if flag == 1:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')\n    t -= 1", "ans = ['Poor Chef', 'Truly Happy']\nfor ti in range(int(input())):\n    n = int(input())\n    ays = list(map(int, input().split()))\n    unq = set(ays)\n    aas = set((ays[a - 1] for a in unq))\n    print(ans[len(aas) < len(unq)])", "ans = ['Poor Chef', 'Truly Happy']\nfor ti in range(int(input())):\n    n = int(input())\n    ays = list(map(int, input().split()))\n    unq = set(ays)\n    aas = set((ays[a - 1] for a in unq))\n    print(ans[len(aas) < len(unq)])", "for i in range(int(input())):\n    input()\n    l = list(map(int, input().split(' ')))\n    dict = {}\n    for (indx, val) in enumerate(l):\n        dict.setdefault(val, []).append(indx + 1)\n    found = False\n    for v in dict.values():\n        if found:\n            break\n        if len(v) > 1:\n            c = 0\n            for y in v:\n                if y in dict:\n                    c += 1\n            if c >= 2:\n                found = True\n                break\n    if found:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    dict = {}\n    for (indx, val) in enumerate(l):\n        dict.setdefault(val, []).append(indx + 1)\n    found = False\n    for v in dict.values():\n        if found:\n            break\n        if len(v) > 1:\n            c = 0\n            for y in v:\n                if y in dict:\n                    c += 1\n            if c >= 2:\n                found = True\n                break\n    if found:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "ans = ['Poor Chef', 'Truly Happy']\nfor ti in range(int(input())):\n    dic = {}\n    n = int(input())\n    ays = list(map(int, input().split()))\n    uniq = set(ays)\n    throw = set([ays[i - 1] for i in uniq])\n    print(ans[len(throw) < len(uniq)])", "for _ in range(int(input())):\n    input()\n    a = [-1] + list(map(int, input().split()))\n    uni = set(a)\n    maxi = max(uni)\n    hash = [False] * (maxi + 1)\n    flag = False\n    for ele in (ele for ele in uni if ele != -1):\n        if hash[a[ele]] is False:\n            hash[a[ele]] = True\n        else:\n            flag = True\n            break\n    if flag is True:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "for _ in range(int(input())):\n    size = int(input())\n    numbers = list(map(int, input().split()))\n    ind = {}\n    for (i, j) in enumerate(numbers):\n        if j in ind:\n            ind[j].append(i + 1)\n        else:\n            ind[j] = [i + 1]\n    ans = 'Poor Chef'\n    set_keys = set(ind.keys())\n    for (i, indexes) in ind.items():\n        cnt = 0\n        for j in indexes:\n            if j in set_keys:\n                cnt += 1\n                if cnt == 2:\n                    ans = 'Truly Happy'\n                    break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = 0\n    l = [int(y) for y in input().split()]\n    s = set(l)\n    s1 = list(s)\n    if len(s1) == len(l):\n        print('Poor Chef')\n        continue\n    for i in range(len(s1)):\n        for j in range(i + 1, len(s1)):\n            if l[s1[i] - 1] == l[s1[j] - 1]:\n                p = 1\n                break\n        if p == 1:\n            break\n    if p == 1:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    t = t - 1\n    flag = 0\n    b = set(a)\n    b = list(b)\n    if len(b) == len(a):\n        print('Poor Chef')\n        continue\n    for i in range(len(b)):\n        for j in range(i + 1, len(b)):\n            if a[b[i] - 1] == a[b[j] - 1]:\n                print('Truly Happy')\n                flag = 1\n                break\n        if flag == 1:\n            break\n    if flag != 1:\n        print('Poor Chef')", "t = int(input())\nwhile t:\n    t -= 1\n    check = 0\n    N = int(input())\n    A = [None] * (N + 1)\n    s = 0\n    move = dict()\n    A = [int(x) for x in input().split()]\n    for i in range(len(A)):\n        s = A[A[i] - 1]\n        move_v = move.get(s)\n        if move_v == None:\n            move_v = move.update({s: i})\n        elif A[move_v] != A[i]:\n            check = 1\n    if check == 1:\n        print('Truly Happy')\n    elif check == 0:\n        print('Poor Chef')\n    else:\n        pass", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    L = [int(i) - 1 for i in input().split()]\n    d = {}\n    for i in range(n):\n        d[L[i]] = L[L[i]]\n    f = [0] * (max(L) + 1)\n    a = sorted(d.values())\n    fl = 0\n    for i in range(1, len(a)):\n        if a[i] == a[i - 1]:\n            fl = 1\n            break\n    if fl:\n        print('Truly Happy')\n    elif fl == 0:\n        print('Poor Chef')", "for z in range(int(input())):\n    n = int(input())\n    inpar = [int(x) for x in input().split(' ')]\n    inpar = [0] + inpar\n    ar = [[] for j in range(n + 1)]\n    for j in range(1, n + 1):\n        k = inpar[j]\n        m = inpar[k]\n        ar[m].append(k)\n    flag = 0\n    for i in range(1, n + 1):\n        if ar[i]:\n            for j in range(1, len(ar[i])):\n                if ar[i][0] != ar[i][j]:\n                    flag = 1\n            if flag == 1:\n                break\n    if flag == 1:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    t = t - 1\n    flag = 0\n    b = set(a)\n    b = list(b)\n    if len(b) == len(a):\n        print('Poor Chef')\n        continue\n    for i in b:\n        for j in b:\n            if a[i - 1] == a[j - 1] and i != j:\n                print('Truly Happy')\n                flag = 1\n                break\n        if flag == 1:\n            break\n    if flag != 1:\n        print('Poor Chef')", "y = int(input())\nwhile y:\n    n = int(input())\n    li = list(map(int, input().split()))\n    d = {key + 1: set() for key in range(n)}\n    a = [0] * n\n    for i in range(0, n):\n        d[li[i]].add(i + 1)\n        a[li[i] - 1] += 1\n    z = 'u'\n    for i in range(n):\n        if a[i] > 1:\n            c = d[i + 1]\n            count = 0\n            for i in c:\n                if a[i - 1] != 0:\n                    count += 1\n                if count >= 2:\n                    print('Truly Happy')\n                    z = 'done'\n                    break\n        if z == 'done':\n            break\n    else:\n        print('Poor Chef')\n    y -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    dp = {}\n    for i in range(n):\n        if dp.get(a[i]):\n            dp[a[i]].append(i + 1)\n        else:\n            dp[a[i]] = [i + 1]\n    flag = 0\n    for i in dp:\n        count = 0\n        for j in dp[i]:\n            if dp.get(j):\n                count += 1\n        if count > 1:\n            flag = 1\n            break\n    print('Truly Happy') if flag == 1 else print('Poor Chef')", "for _ in range(int(input())):\n    input()\n    array = [int(_) for _ in input().split()]\n    map_array = dict()\n    for (index, elememt) in enumerate(array):\n        if array[elememt - 1] in map_array:\n            map_array[array[elememt - 1]].append((index, elememt - 1))\n        else:\n            map_array[array[elememt - 1]] = [(index, elememt - 1)]\n    (ans, a, b) = (False, 0, 0)\n    for dist in map_array:\n        (index, elememt) = map_array[dist][0]\n        (f, a) = (False, index)\n        for (index_, e_) in map_array[dist][1:]:\n            if elememt != e_:\n                (f, b) = (True, index_)\n                break\n        if f == True:\n            ans = True\n            break\n    print('Truly Happy' if ans else 'Poor Chef')", "for _ in range(int(input())):\n    (size, count, ans) = (int(input()), 0, False)\n    arr = list(map(int, input().split()))\n    if len(set(arr)) == len(arr):\n        count = 1\n    if count == 1:\n        print('Poor Chef')\n    if count == 0:\n        arr.insert(1, arr[0])\n        for i in range(1, max(arr) + 1):\n            for j in range(1, max(arr) + 1):\n                if i == j:\n                    continue\n                elif arr[i] == arr[j]:\n                    if i in arr and j in arr:\n                        ans = True\n                        break\n            if ans == True:\n                break\n        print('Truly Happy') if ans == True else print('Poor Chef')", "for subodh in range(int(input())):\n    (latkar, ho) = (int(input()), 0)\n    lst = list(map(int, input().split()))\n    maxindx = max(lst)\n    if len(set(lst)) == len(lst):\n        print('Poor Chef')\n    else:\n        lst.insert(1, lst[0])\n        for i in range(1, maxindx + 1):\n            for j in range(1, maxindx):\n                if i == j:\n                    continue\n                elif lst[i] == lst[j]:\n                    if i in lst and j in lst:\n                        ho = 1\n                        break\n            if ho == 1:\n                break\n        print('Truly Happy') if ho == 1 else print('Poor Chef')", "def f(rec, only_these):\n    temp = list(only_these.keys())\n    for i in temp:\n        c = 0\n        for j in only_these[i]:\n            if rec[j]:\n                c += 1\n                if c > 1:\n                    return 'Truly Happy'\n    return 'Poor Chef'\nfor tt in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    li.insert(0, 'anything')\n    n += 1\n    rec = {i: [] for i in range(n + 1)}\n    c = 0\n    u = 0\n    if u > 100:\n        c = 0\n    for i in li[1:]:\n        c += 1\n        rec[i].append(c)\n    only_these = {i: rec[i] for i in rec.keys() if len(rec[i]) > 1}\n    print(f(rec, only_these))", "for _ in range(int(input())):\n    z = int(input())\n    arr1 = list(map(int, input().split()))\n    arr = [arr1[arr1[j] - 1] for j in range(len(arr1))]\n    t1 = list(set(arr1))\n    t2 = list(set(arr))\n    if len(t1) != len(t2):\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "for _case in range(int(input())):\n    N = int(input())\n    seqx = ['h'] + [int(x) for x in input().split()]\n    dicx = {}\n    for (idx, val) in enumerate(seqx):\n        dicx.setdefault(val, []).append(idx)\n    dicx.pop('h')\n    found = False\n    for v in dicx.values():\n        if found:\n            break\n        if len(v) > 1:\n            countw = 0\n            for y in v:\n                if y in dicx:\n                    countw += 1\n            if countw >= 2:\n                found = True\n                break\n    if found:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count1 = len(set(l))\n    l1 = []\n    for j in l:\n        l1.append(l[j - 1])\n    count2 = len(set(l1))\n    if count1 == count2:\n        print('Poor Chef')\n    else:\n        print('Truly Happy')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    ar = [int(i) for i in input().split()]\n    m = {}\n    for i in range(len(ar)):\n        if ar[i] not in m:\n            m[ar[i]] = []\n        m[ar[i]].append(i + 1)\n    s = set(ar)\n    for i in m:\n        indices = m[i]\n        countPresent = 0\n        for j in indices:\n            if j in s:\n                countPresent += 1\n        if countPresent >= 2:\n            print('Truly Happy')\n            break\n    else:\n        print('Poor Chef')\n    t -= 1", "n = int(input())\nfor k in range(0, n):\n    h = int(input())\n    a = [int(x) for x in input().split()]\n    s = list(set(a))\n    l = 0\n    if len(s) == len(a):\n        print('Poor Chef')\n    else:\n        for i in range(0, len(s)):\n            if l == 1:\n                break\n            else:\n                for j in range(i + 1, len(s)):\n                    if a[s[i] - 1] == a[s[j] - 1]:\n                        l = 1\n                        break\n        if l == 1:\n            print('Truly Happy')\n        else:\n            print('Poor Chef')", "for _ in range(int(input())):\n    flag = 0\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = [[] for _ in range(n + 1)]\n    for i in range(n):\n        q = a[i]\n        b[q].append(i + 1)\n    for i in range(1, n + 1):\n        if flag == 2:\n            break\n        r = len(b[i])\n        if r >= 2:\n            flag = 0\n            for j in b[i]:\n                if len(b[j]) >= 1:\n                    flag += 1\n                if flag == 2:\n                    break\n    if flag == 2:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = [0] * (n + 1)\n    for i in a:\n        m[i] = 1\n    c = [0] * (n + 1)\n    flag = False\n    for i in range(n):\n        if m[i + 1] == 1:\n            if c[a[i]] != 0:\n                flag = True\n                break\n            c[a[i]] = i + 1\n    if flag:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    rev = {}\n    for i in range(1, n + 1):\n        if li[i - 1] not in rev:\n            rev[li[i - 1]] = [i]\n        else:\n            rev[li[i - 1]].append(i)\n    flag = 0\n    for i in rev:\n        if len(rev[i]) >= 2:\n            co = 0\n            for j in rev[i]:\n                if j in rev:\n                    co = co + 1\n                if co >= 2:\n                    flag = 1\n                    break\n        if flag == 1:\n            break\n    if flag == 1:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "t = int(input())\n\ndef search(a, n, item):\n    l = 0\n    r = n - 1\n    found = False\n    while not found and l <= r:\n        m = l + r >> 1\n        if a[m] == item:\n            found = True\n        elif a[m] > item:\n            r = m - 1\n        else:\n            l = m + 1\n    return found\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    yes = 'Truly Happy'\n    no = 'Poor Chef'\n    check = []\n    d = {}\n    for i in range(n):\n        d[i + 1] = []\n    for i in range(n):\n        d[a[i]].append(i + 1)\n        if len(d[a[i]]) == 2:\n            check.append(a[i])\n    sa = sorted(a)\n    for i in check:\n        count = 0\n        done = False\n        for j in d[i]:\n            if search(sa, n, j):\n                count += 1\n            if count == 2:\n                done = True\n                break\n        if done:\n            print(yes)\n            break\n    else:\n        print(no)", "def success(l):\n    d = {}\n    d1 = {}\n    for i in l:\n        d1[i] = 1\n    c = 0\n    for i in l:\n        c += 1\n        if c in d1:\n            d[i] = d.get(i, 0) + 1\n            if d[i] == 2:\n                return 'Truly Happy'\n    return 'Poor Chef'\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(success(l))", "from collections import defaultdict\n\ndef duplicates(a):\n    dup = defaultdict(list)\n    for (i, item) in enumerate(a):\n        dup[item].append(i)\n    return (locs for (key, locs) in dup.items() if len(locs) > 1)\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.insert(0, 0)\n    f = 0\n    for j in duplicates(a):\n        if len(list(set(a).intersection(j))) >= 2:\n            f = 1\n            print('Truly Happy')\n            break\n    if f == 0:\n        print('Poor Chef')", "for _ in range(int(input())):\n    n = int(input())\n    a = [0]\n    a.extend(list(map(int, input().split())))\n    count = 0\n    ai = {}\n    aai = {}\n    for i in range(n + 1):\n        if a[a[i]] in aai:\n            if a[i] in ai:\n                continue\n            else:\n                count += 1\n        else:\n            aai[a[a[i]]] = 1\n            ai[a[i]] = 1\n    if count > 0:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "t = int(input())\nres = []\nfor _ in range(t):\n    d = {}\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in a:\n        el = a[i - 1]\n        if el in d:\n            if d[el] != i:\n                res.append('Truly Happy')\n                break\n        else:\n            d[el] = i\n    else:\n        res.append('Poor Chef')\nfor i in res:\n    print(i)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(len(a)):\n        d[a[i]] = 0\n    for i in range(len(a)):\n        if i + 1 in d:\n            if d[a[i]] == 1:\n                print('Truly Happy')\n                break\n            else:\n                d[a[i]] = 1\n    else:\n        print('Poor Chef')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = [0] + l\n    temp = [-1] * 10 ** 5\n    for i in l[1:]:\n        f = 0\n        if temp[l[i]] == -1:\n            temp[l[i]] = i\n        elif temp[l[i]] != i:\n            f = 1\n            print('Truly Happy')\n            break\n    if f == 0:\n        print('Poor Chef')", "t = int(input())\nwhile t > 0:\n    n = input()\n    prev = dict()\n    arr = list(map(int, input().split()))\n    ans = 'Poor Chef'\n    for i in range(len(arr)):\n        curr = arr[arr[i] - 1]\n        j = prev.get(curr)\n        if j == None:\n            prev.update({curr: i})\n        elif arr[j] != arr[i]:\n            ans = 'Truly Happy'\n    print(ans)\n    t = t - 1", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    index_dict = defaultdict(list)\n    flag = False\n    for i in range(n):\n        index_dict[a[i]].append(i + 1)\n    for (k, v) in index_dict.items():\n        count = 0\n        if len(v) >= 2:\n            for i in v:\n                if i in index_dict.keys():\n                    count += 1\n                if count == 2:\n                    flag = True\n                    break\n        if flag == True:\n            break\n    if flag:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "import numpy as np\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    lst = np.array([int(x) for x in input().split()])\n    s = set(lst)\n    for i in s:\n        ind = np.where(lst == i)[0]\n        count = 0\n        if len(ind) > 1:\n            for j in ind:\n                if j + 1 in s:\n                    count = count + 1\n                    if count == 2:\n                        break\n        if count == 2:\n            break\n    if count == 2:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')\n    t = t - 1", "for _ in range(int(input())):\n    n1 = int(input())\n    a = list(map(int, input().split()))\n    sep = {}\n    if n1 < 10000:\n        fnd = 0\n        l = [0]\n        l.extend(a)\n        for i in range(1, n1 + 1):\n            for j in range(i + 1, n1 + 1):\n                if l[i] != l[j]:\n                    if l[l[i]] == l[l[j]]:\n                        fnd = 1\n                        break\n        if fnd:\n            print('Truly Happy')\n        else:\n            print('Poor Chef')\n    elif n1 >= 10000:\n        for i in range(n1):\n            if a[i] not in sep.keys():\n                sep[a[i]] = [i + 1]\n            else:\n                sep[a[i]].append(i + 1)\n        fnd = 0\n        for i in sep.keys():\n            for j in range(1, len(sep[i])):\n                if sep[i][j] in sep and i not in sep[sep[i][j]]:\n                    fnd = 1\n                    break\n        if fnd:\n            print('Truly Happy')\n        else:\n            print('Poor Chef')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    f = 1\n    s = list(set(a))\n    p = []\n    for i in s:\n        p.append(a[i - 1])\n    if len(set(p)) == len(s):\n        print('Poor Chef')\n    else:\n        print('Truly Happy')", "for _ in range(int(input())):\n    d = {}\n    n = int(input())\n    l = [0]\n    l += list(map(int, input().split()))\n    for i in range(1, n + 1):\n        if l[i] in d:\n            d[l[i]].append(i)\n        else:\n            d[l[i]] = [i]\n    for key in d:\n        c = 0\n        if len(d[key]) > 1:\n            for j in range(len(d[key])):\n                if d[key][j] in d:\n                    c += 1\n                if c >= 2:\n                    break\n        if c >= 2:\n            break\n    if c >= 2:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "for _ in range(int(input())):\n    d = {}\n    n = int(input())\n    l = [0]\n    l += list(map(int, input().split()))\n    for i in range(1, n + 1):\n        if l[i] in d:\n            d[l[i]].append(i)\n        else:\n            d[l[i]] = [i]\n    for key in d:\n        c = 0\n        if len(d[key]) > 1:\n            for j in range(len(d[key])):\n                if d[key][j] in d:\n                    c += 1\n                if c >= 2:\n                    break\n        if c >= 2:\n            break\n    if c >= 2:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = map(int, input().split())\n    a_l = list(a)\n    flag = False\n    a_map = {}\n    for (i, v) in enumerate(a_l):\n        if v in a_map.keys():\n            a_map[v][0] += 1\n            a_map[v][1].append(i + 1)\n        else:\n            a_map[v] = [1, [i + 1]]\n    for (k, v) in a_map.items():\n        if v[0] == 1:\n            continue\n        else:\n            indexes = v[1]\n            count = 0\n            for ind in indexes:\n                if ind in a_map.keys():\n                    count += 1\n                    if count == 2:\n                        flag = True\n                        break\n            if flag:\n                break\n    if flag:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')\nexit(0)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    x = [int(y) for y in input().split()]\n    s = set(x)\n    l1 = list(s)\n    le = len(l1)\n    c = 0\n    if len(x) == le:\n        print('Poor Chef')\n    else:\n        for i in range(0, le):\n            for j in range(i + 1, le):\n                if x[l1[i] - 1] == x[l1[j] - 1]:\n                    c = 1\n                    break\n            if c == 1:\n                break\n        if c == 1:\n            print('Truly Happy')\n        else:\n            print('Poor Chef')", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    ls = list(map(int, input().strip().split()))\n    ls1 = dict()\n    ls2 = dict()\n    ans = 'Poor Chef'\n    for i in ls:\n        add = 0\n        if i not in ls2:\n            ls2[i] = 1\n            add = 1\n        if ls[i - 1] not in ls1:\n            ls1[ls[i - 1]] = 1\n        elif add == 1:\n            ans = 'Truly Happy'\n            break\n    print(ans)", "n = int(input())\nIncorrect = 'Poor Chef'\nCorrect = 'Truly Happy'\nfor i in range(n):\n    input0 = int(input())\n    e = []\n    input1 = [int(i) for i in input().split()]\n    d1 = set(input1)\n    input2 = list(set(input1))\n    for i in range(len(input2)):\n        e.append(input1[input2[i] - 1])\n    f1 = set(e)\n    f = list(f1)\n    count1 = len(f)\n    count2 = len(e)\n    if count1 == count2:\n        print(Incorrect)\n    else:\n        print(Correct)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]].append(i + 1)\n        else:\n            d[a[i]] = [i + 1]\n    f = 1\n    for j in d.keys():\n        c = 0\n        for k in range(len(d[j])):\n            if d[j][k] in d.keys():\n                c += 1\n        if c >= 2:\n            print('Truly Happy')\n            f = 0\n            break\n    if f == 1:\n        print('Poor Chef')", "from sys import stdin\nchefs_happiness = {True: 'Truly Happy', False: 'Poor Chef'}\noutputs = []\nfor tc in range(int(stdin.readline())):\n    N = int(stdin.readline())\n    A = list(map(int, stdin.readline().strip().split(' ')))[:N]\n    A_a_i = map(lambda x: A[x - 1], A)\n    lookup = {}\n    answer = False\n    for (index, number) in enumerate(A_a_i):\n        if number in lookup:\n            if A[lookup[number]] != A[index]:\n                answer = True\n                break\n            else:\n                lookup[number] = index\n        else:\n            lookup[number] = index\n    outputs.append(chefs_happiness[answer])\nfor _ in outputs:\n    print(_)", "t = int(input())\nfor i in range(t):\n    z = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.insert(0, 0)\n    k = []\n    for i in range(1, len(l)):\n        k.append((l[l[i]], l[i]))\n    m = []\n    k = set(k)\n    for i in k:\n        m.append(i[0])\n    if len(m) - len(set(m)) > 0:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = sorted(a)\n    b = [0] * 100001\n    c = [0] * 100001\n    for j in range(n):\n        b[a[j]] = b[a[j]] + 1\n\n        def bin(d, a, b, c):\n            if b >= a:\n                m = a + int((b - a) / 2)\n                if d[m] == c:\n                    return 1\n                elif d[m] > c:\n                    return bin(d, a, m - 1, c)\n                else:\n                    return bin(d, m + 1, b, c)\n            else:\n                return 0\n        bi = bin(d, 0, n - 1, j + 1)\n        if bi == 1:\n            c[a[j]] = c[a[j]] + 1\n    r = 0\n    for j in range(n):\n        if b[a[j]] >= 2 and c[a[j]] >= 2:\n            r = 1\n            break\n    if r == 1:\n        print('Truly Happy')\n    else:\n        print('Poor Chef')", "import numpy as np\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    appearances = [0] * N\n    lst = [int(x) for x in input().split()]\n    l = np.array(lst)\n    unique = set(lst)\n    for i in lst:\n        appearances[i - 1] += 1\n    cnt = False\n    for i in range(N):\n        if appearances[i] > 1:\n            val = i + 1\n            temp = np.where(l == val)[0]\n            temp += 1\n            if len(np.intersect1d(temp, l)) >= 2:\n                print('Truly Happy')\n                cnt = True\n                break\n    if cnt == False:\n        print('Poor Chef')"]