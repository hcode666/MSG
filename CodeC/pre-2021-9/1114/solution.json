["t = int(input())\nfor i in range(t):\n    (x, y, z, a, b, c) = list(map(int, input().strip().split(' ')))\n    ans = 10 ** 18\n    (x, y, z) = sorted([x, y, z])\n    ans = min(ans, (x + y + z) * a)\n    if (x + y + z) % 2 == 0 and x + y >= z:\n        ans = min(ans, (x + y + z) // 2 * b)\n    if x == y and y == z:\n        ans = min(ans, x * c)\n    if x + y < z:\n        ans = min(ans, (x + y) * b + (z - x - y) * a)\n    elif (x + y + z) % 2 == 1:\n        ans = min(ans, a + (x + y + z) // 2 * b)\n    ans = min(ans, x * c + (y + z - 2 * x) * a)\n    if (x + y + z) % 2 != 0 and x + y > z:\n        ans = min(ans, c + (x + y + z - 3) // 2 * b)\n    common = min(x, z - y)\n    if a + c <= 2 * b:\n        ans = min(ans, common * (a + c) + (x - common) * c + (z - y - common) * a + (y - x) * b)\n    else:\n        ans = min(ans, common * (2 * b) + (x - common) * c + (z - y - common) * a + (y - x) * b)\n    print(int(ans))", "t = int(input())\nfor i in range(t):\n    (x, y, z, a, b, c) = list(map(int, input().strip().split(' ')))\n    ans = 10 ** 18\n    (x, y, z) = sorted([x, y, z])\n    ans = min(ans, (x + y + z) * a)\n    if (x + y + z) % 2 == 0 and x + y >= z:\n        ans = min(ans, (x + y + z) // 2 * b)\n    if x == y and y == z:\n        ans = min(ans, x * c)\n    if x + y < z:\n        ans = min(ans, (x + y) * b + (z - x - y) * a)\n    elif (x + y + z) % 2 == 1:\n        ans = min(ans, a + (x + y + z) // 2 * b)\n    ans = min(ans, x * c + (y + z - 2 * x) * a)\n    if (x + y + z) % 2 != 0 and x + y > z:\n        ans = min(ans, c + (x + y + z - 3) // 2 * b)\n    common = min(x, z - y)\n    if a + c <= 2 * b:\n        ans = min(ans, common * (a + c) + (x - common) * c + (z - y - common) * a + (y - x) * b)\n    else:\n        ans = min(ans, common * (2 * b) + (x - common) * c + (z - y - common) * a + (y - x) * b)\n    print(int(ans))", "for t in range(int(input())):\n    (x, y, z, a, b, c) = map(int, input().split())\n    addition = x + y + z\n    maximum = max(x, y, z)\n    minimum = min(x, y, z)\n    if 3 * a <= 1.5 * b:\n        if 3 * a <= c:\n            print(addition * a)\n            continue\n        else:\n            price = minimum * c + (addition - 3 * minimum) * a\n            print(price)\n            continue\n    elif 1.5 * b <= c:\n        if 3 * a <= c:\n            if addition - maximum >= maximum:\n                z = maximum + (addition - 2 * maximum) // 2\n                f = addition - 2 * z\n                c2 = z * b + f * a\n            else:\n                z = addition - maximum\n                f = addition - 2 * z\n                c2 = z * b + f * a\n            print(c2)\n            continue\n        else:\n            if addition - maximum >= maximum:\n                z = maximum + (addition - 2 * maximum) // 2\n                f = addition - 2 * z\n                c2 = f * c + (z - f) * b\n                c3 = z * b + f * a\n                if c3 < c2:\n                    c2 = c3\n            else:\n                z = addition - maximum\n                f = addition - 2 * z\n                c2 = z * b + f * a\n            print(c2)\n            continue\n    elif addition - maximum >= maximum:\n        z = minimum\n        f = addition - maximum - z * 2\n        g = addition - 2 * f - 3 * z\n        c3 = z * c + f * b + g * a\n        f = 3 * maximum - addition\n        z = addition - 2 * maximum\n        price = z * c + f * b\n        print(min(price, c3))\n        continue\n    else:\n        z = minimum\n        f = addition - maximum - z * 2\n        g = addition - 2 * f - 3 * z\n        c3 = z * c + f * b + g * a\n        z = addition - maximum\n        f = addition - 2 * z\n        c2 = z * b + f * a\n        print(min(c2, c3))", "for t in range(int(input())):\n    (x, y, z, a, b, c) = map(int, input().split())\n    addition = x + y + z\n    maximum = max(x, y, z)\n    minimum = min(x, y, z)\n    if 3 * a <= 1.5 * b:\n        if 3 * a <= c:\n            print(addition * a)\n            continue\n        else:\n            price = minimum * c + (addition - 3 * minimum) * a\n            print(price)\n            continue\n    elif 1.5 * b <= c:\n        if 3 * a <= c:\n            if addition - maximum >= maximum:\n                z = maximum + (addition - 2 * maximum) // 2\n                f = addition - 2 * z\n                c2 = z * b + f * a\n            else:\n                z = addition - maximum\n                f = addition - 2 * z\n                c2 = z * b + f * a\n            print(c2)\n            continue\n        else:\n            if addition - maximum >= maximum:\n                z = maximum + (addition - 2 * maximum) // 2\n                f = addition - 2 * z\n                c2 = f * c + (z - f) * b\n                c3 = z * b + f * a\n                if c3 < c2:\n                    c2 = c3\n            else:\n                z = addition - maximum\n                f = addition - 2 * z\n                c2 = z * b + f * a\n            print(c2)\n            continue\n    elif addition - maximum >= maximum:\n        z = minimum\n        f = addition - maximum - z * 2\n        g = addition - 2 * f - 3 * z\n        c3 = z * c + f * b + g * a\n        f = 3 * maximum - addition\n        z = addition - 2 * maximum\n        price = z * c + f * b\n        print(min(price, c3))\n        continue\n    else:\n        z = minimum\n        f = addition - maximum - z * 2\n        g = addition - 2 * f - 3 * z\n        c3 = z * c + f * b + g * a\n        z = addition - maximum\n        f = addition - 2 * z\n        c2 = z * b + f * a\n        print(min(c2, c3))", "from sys import stdin\nT = 1\nT = int(stdin.readline().strip())\nfor _ in range(T):\n    (x, y, z, a, b, c) = map(int, stdin.readline().split())\n    small = min(x, y, z)\n    big = max(x, y, z)\n    big2 = x + y + z - (big + small)\n    mini = small\n    ans = []\n    sm = small + big2 + big\n    if 2 * a > b:\n        if big2 + mini < big:\n            localans = (big2 + mini) * b + (big - big2 - mini) * a\n        elif sm % 2 == 0:\n            localans = int(sm / 2 * b)\n        else:\n            localans = int((sm - 1) / 2 * b + a)\n    else:\n        localans = sm * a\n    ans.append(localans)\n    if small >= 1 and big2 >= 1 and (big >= 1):\n        localans = c\n        small1 = small - 1\n        big1 = big - 1\n        big21 = big2 - 1\n        sm = small1 + big1 + big21\n        if 2 * a > b:\n            if big21 + small1 < big:\n                localans += (big21 + small1) * b + (big1 - big21 - small1) * a\n            elif sm % 2 == 0:\n                localans += int(sm / 2 * b)\n            else:\n                localans += int((sm - 1) / 2 * b + a)\n        else:\n            localans += sm * a\n        ans.append(localans)\n    localans = c * small\n    small1 = 0\n    big21 = big2 - small\n    big1 = big - small\n    sm = small1 + big21 + big1\n    if 2 * a > b:\n        if big21 + small1 < big:\n            localans += (big21 + small1) * b + (big1 - big21 - small1) * a\n        elif sm % 2 == 0:\n            localans += int(sm / 2 * b)\n        else:\n            localans += int((sm - 1) / 2 * b + a)\n    else:\n        localans += sm * a\n    ans.append(localans)\n    if big2 + small > big:\n        var = abs(big - small - big2)\n        localans = var * c\n        small1 = small - var\n        big21 = big2 - var\n        big1 = big - var\n        sm = small1 + big21 + big1\n        if 2 * a > b:\n            if big21 + small1 < big:\n                localans += (big21 + small1) * b + (big1 - big21 - small1) * a\n            elif sm % 2 == 0:\n                localans += int(sm / 2 * b)\n            else:\n                localans += int((sm - 1) / 2 * b + a)\n        else:\n            localans += sm * a\n        ans.append(localans)\n    finalans = min(ans)\n    print(finalans)", "def find(dubli, other, a, b, c, flag):\n    count = 0\n    if flag == 1:\n        b = 2 * a\n    elif flag == 2:\n        c = 3 * a\n    if dubli > other:\n        diff = dubli - other\n        count += diff * b\n        if 2 * c <= 3 * b:\n            count += other * c\n        elif other % 2 == 0:\n            x = other // 2\n            x *= 3\n            count += x * b\n        else:\n            x = other - 1\n            x = x // 2\n            x *= 3\n            count += min(x * b + c, x * b + b + a)\n    elif other > 2 * dubli:\n        count = min(2 * dubli * b + (other - 2 * dubli) * a, dubli * c + (other - dubli) * a)\n    else:\n        x = 2 * (other - dubli)\n        y = other - x\n        l = x * b\n        if 2 * c <= 3 * b:\n            l += y * c\n        elif y % 2 == 0:\n            y = y // 2\n            y *= 3\n            l += y * b\n        else:\n            y = y - 1\n            y = y // 2\n            y *= 3\n            l += min(y * b + c, y * b + b + a)\n        m = 0\n        m += dubli * c + (other - dubli) * a\n        count += min(l, m)\n    return count\nt = int(input())\nfor i in range(t):\n    (x, y, z, a, b, c) = map(int, input().split())\n    min1 = 0\n    midd = 0\n    max1 = 0\n    max1 = max(x, y)\n    max1 = max(max1, z)\n    min1 = min(x, y)\n    min1 = min(min1, z)\n    midd = x + y + z - min1 - max1\n    count = 0\n    d = 0\n    x = 0\n    other = 0\n    if 2 * a <= b and 3 * a <= c:\n        print((max1 + midd + min1) * a)\n    elif b >= 2 * a and c <= 3 * a:\n        count += (midd - min1) * b\n        m2 = max1\n        m2 = m2 - (midd - min1)\n        count += find(min1, m2, a, b, c, 1)\n        print(min(count, min1 * c + (midd - min1 + max1 - min1) * a))\n    elif b <= 2 * a and c > 3 * a:\n        count += (midd - min1) * b\n        m2 = max1\n        m2 = m2 - (midd - min1)\n        count += find(min1, m2, a, b, c, 2)\n        print(min(count, min1 * b + (midd - min1) * b + (max1 - (midd - min1)) * a))\n    elif b <= 2 * a and c <= 3 * a:\n        if max1 == min1 and max1 == midd:\n            if 2 * c <= 3 * b:\n                print(c * max1)\n            elif max1 % 2 == 0:\n                x = max1 // 2\n                x *= 3\n                print(b * x)\n            else:\n                x = max1 - 1\n                x = x // 2\n                x *= 3\n                print(min(b * x + c, b * x + b + a))\n        elif max1 == midd or max1 == min1 or min1 == midd:\n            if max1 == midd:\n                d = max1\n                other = min1\n            elif max1 == min1:\n                d = max1\n                other = midd\n            else:\n                d = midd\n                other = max1\n            print(find(d, other, a, b, c, 0))\n        else:\n            l = 0\n            l += (midd - min1) * b\n            m2 = max1\n            max1 = max1 - (midd - min1)\n            l += find(min1, max1, a, b, c, 0)\n            m = 0\n            m += min1 * c + (midd - min1) * b + (m2 - midd) * a\n            print(min(l, m))", "for t in range(int(input())):\n    (x, y, z, a, b, c) = map(int, input().split())\n    sum1 = x + y + z\n    max1 = max(x, y, z)\n    min1 = min(x, y, z)\n    if 3 * a <= 1.5 * b:\n        if 3 * a <= c:\n            print(sum1 * a)\n            continue\n        else:\n            cost = min1 * c + (sum1 - 3 * min1) * a\n            print(cost)\n            continue\n    elif 1.5 * b <= c:\n        if 3 * a <= c:\n            if sum1 - max1 >= max1:\n                e = max1 + (sum1 - 2 * max1) // 2\n                f = sum1 - 2 * e\n                c2 = e * b + f * a\n            else:\n                e = sum1 - max1\n                f = sum1 - 2 * e\n                c2 = e * b + f * a\n            print(c2)\n            continue\n        else:\n            if sum1 - max1 >= max1:\n                e = max1 + (sum1 - 2 * max1) // 2\n                f = sum1 - 2 * e\n                c2 = f * c + (e - f) * b\n                c3 = e * b + f * a\n                if c3 < c2:\n                    c2 = c3\n            else:\n                e = sum1 - max1\n                f = sum1 - 2 * e\n                c2 = e * b + f * a\n            print(c2)\n            continue\n    elif sum1 - max1 >= max1:\n        e = min1\n        f = sum1 - max1 - e * 2\n        g = sum1 - 2 * f - 3 * e\n        c3 = e * c + f * b + g * a\n        f = 3 * max1 - sum1\n        e = sum1 - 2 * max1\n        cost = e * c + f * b\n        print(min(cost, c3))\n        continue\n    else:\n        e = min1\n        f = sum1 - max1 - e * 2\n        g = sum1 - 2 * f - 3 * e\n        c3 = e * c + f * b + g * a\n        e = sum1 - max1\n        f = sum1 - 2 * e\n        c2 = e * b + f * a\n        print(min(c2, c3))", "import sys\nf = sys.stdin\nt = int(f.readline())\nfor i in range(t):\n    (x, y, z, a, b, c) = map(int, f.readline().split())\n    if 2 * a <= b and 3 * a <= c:\n        print((x + y + z) * a)\n    elif 2 * a <= b and 3 * a >= c:\n        mi = min(x, y, z)\n        tb = mi * c\n        x -= mi\n        y -= mi\n        z -= mi\n        tb += (x + y + z) * a\n        print(tb)\n    elif b <= 2 * a and c >= 3 * a:\n        n1 = min(x, y, z)\n        n3 = max(x, y, z)\n        n2 = x + y + z - n1 - n3\n        tb2 = (n2 - n1) * b\n        n3 -= n2 - n1\n        n2 -= n2 - n1\n        if n3 <= 2 * n1:\n            while n1 != n2 or n1 != n3 or n2 != n3:\n                if n1 != 0 and n2 != 0 and (n3 != 0):\n                    z = n3 - n1\n                    if z % 2 != 0:\n                        z += 1\n                    n3 -= z\n                    tb2 += z * b\n                    z = z // 2\n                    n2 -= z\n                    n1 -= z\n                else:\n                    tb2 += n2 * b\n                    tb2 += (n3 - n2) * a\n                    (n1, n2, n3) = (0, 0, 0)\n        else:\n            n3 -= 2 * n1\n            tb2 += 2 * n1 * b\n            tb2 += n3 * a\n            (n1, n2, n3) = (0, 0, 0)\n        if n1 % 2 != 0:\n            z = min(c, b + a, 3 * a)\n            tb2 += z\n            n1 -= 1\n        z = min(2 * b + 2 * a, b + c + a, 3 * b, b + 4 * a, 2 * c, c + 3 * a, 6 * a)\n        tb2 += n1 // 2 * z\n        print(tb2)\n    else:\n        n1 = min(x, y, z)\n        n3 = max(x, y, z)\n        n2 = x + y + z - n1 - n3\n        ans = n1 * c\n        n2 -= n1\n        n3 -= n1\n        ans += n2 * b\n        n3 -= n2\n        ans += n3 * a\n        n1 = min(x, y, z)\n        n3 = max(x, y, z)\n        n2 = x + y + z - n1 - n3\n        tb2 = (n2 - n1) * b\n        n3 -= n2 - n1\n        n2 -= n2 - n1\n        if n3 <= 2 * n1:\n            while n1 != n2 or n1 != n3 or n2 != n3:\n                if n1 != 0 and n2 != 0 and (n3 != 0):\n                    z = n3 - n1\n                    if z % 2 != 0:\n                        z += 1\n                    n3 -= z\n                    tb2 += z * b\n                    z = z // 2\n                    n2 -= z\n                    n1 -= z\n                else:\n                    tb2 += n2 * b\n                    tb2 += (n3 - n2) * a\n                    (n1, n2, n3) = (0, 0, 0)\n        else:\n            n3 -= 2 * n1\n            tb2 += 2 * n1 * b\n            tb2 += n3 * a\n            (n1, n2, n3) = (0, 0, 0)\n        if n1 % 2 != 0:\n            z = min(c, b + a, 3 * a)\n            tb2 += z\n            n1 -= 1\n        z = min(2 * b + 2 * a, b + c + a, 3 * b, b + 4 * a, 2 * c, c + 3 * a, 6 * a)\n        tb2 += n1 // 2 * z\n        print(min(ans, tb2))", "t = int(input())\nfor i in range(t):\n    (x, y, z, a, b, c) = map(int, input().split())\n    cost = [[6 * a, 1], [3 * b, 2], [2 * c, 3]]\n    cost.sort()\n    (x, y, z) = sorted([x, y, z])\n    if cost[0][1] == 1:\n        s = x + y + z\n        ans = s * a\n    elif cost[1][1] == 1:\n        if cost[0][1] == 2:\n            (lx, ly, lz) = (x, y, z)\n            count = 0\n            count += ly - lx\n            lz -= count\n            ly -= count\n            diff = lz - lx\n            if diff > lx:\n                count += 2 * lx\n                lz -= 2 * lx\n                lx = 0\n                ly = 0\n            else:\n                count += 2 * diff\n                lx = lx - diff\n                ly = lx\n                lz = lx\n                count += 3 * (lx // 2)\n                lx = 0\n                ly = 0\n                if lz % 2 == 0:\n                    lz = 0\n                else:\n                    count += 1\n                    lz = 1\n            ans = count * b + lz * a\n        else:\n            s = x + y + z\n            ans = x * c + (s - 3 * x) * a\n    else:\n        (lx, ly, lz) = (x, y, z)\n        count = 0\n        count += ly - lx\n        lz -= count\n        ly -= count\n        diff = lz - lx\n        if diff > lx:\n            count += 2 * lx\n            lz -= 2 * lx\n            lx = 0\n            ly = 0\n        else:\n            count += 2 * diff\n            lx = lx - diff\n            ly = lx\n            lz = lx\n            count += 3 * (lx // 2)\n            lx = 0\n            ly = 0\n            if lz % 2 == 0:\n                lz = 0\n            else:\n                count += 1\n                lz = 1\n        ans = count * b + lz * a\n        if x > 0 and y > 0 and (z > 0):\n            (lx, ly, lz) = (x - 1, y - 1, z - 1)\n            count = 0\n            count += ly - lx\n            lz -= count\n            ly -= count\n            diff = lz - lx\n            if diff > lx:\n                count += 2 * lx\n                lz -= 2 * lx\n                lx = 0\n                ly = 0\n            else:\n                count += 2 * diff\n                lx = lx - diff\n                ly = lx\n                lz = lx\n                count += 3 * (lx // 2)\n                lx = 0\n                ly = 0\n                if lz % 2 == 0:\n                    lz = 0\n                else:\n                    count += 1\n                    lz = 1\n            ans1 = count * b + lz * a + c\n            ans = min(ans, ans1)\n        ans1 = x * c + (y - x) * b\n        cd = 2 * b - c\n        if cd < a:\n            if z - y > x:\n                ans1 += x * cd + (z - y - x) * a\n            else:\n                ans1 += (z - y) * cd\n        else:\n            ans1 += (z - y) * a\n        ans = min(ans, ans1)\n    print(ans)", "from math import inf\nT = int(input())\nfor _ in range(T):\n    (X, Y, Z, A, B, C) = [int(x) for x in input().split()]\n    (X, Y, Z) = sorted([X, Y, Z], reverse=True)\n    valueOrder = ''.join([i[1] for i in sorted([(6 * A, 'A'), (3 * B, 'B'), (2 * C, 'C')])])\n    (singles, doubles, triples) = (0, 0, 0)\n    if valueOrder == 'ABC' or valueOrder == 'ACB':\n        singles += X + Y + Z\n        X = 0\n        Y = 0\n        Z = 0\n    elif valueOrder == 'BAC':\n        if X >= Y + Z:\n            doubles = Y + Z\n            X -= doubles\n            Y = 0\n            Z = 0\n            singles += X\n            X -= singles\n        elif X < Y + Z:\n            if (X + Y + Z) % 2 == 1:\n                X -= 1\n                singles += 1\n                (X, Y, Z) = sorted([X, Y, Z], reverse=True)\n            doubles += (X + Y + Z) // 2\n            X = 0\n            Y = 0\n            Z = 0\n    elif valueOrder == 'BCA':\n        if (X + Y + Z) % 2 == 0 and X < Y + Z:\n            doubles += (X + Y + Z) // 2\n            X = 0\n            Y = 0\n            Z = 0\n        elif (X + Y + Z) % 2 == 1 and X < Y + Z:\n            if C <= B + A:\n                doubles += (X + Y + Z - 3) // 2\n                (X, Y, Z) = (1, 1, 1)\n                triples += 1\n                X -= 1\n                Y -= 1\n                Z -= 1\n            else:\n                doubles += (X + Y + Z - 1) // 2\n                (X, Y, Z) = (1, 0, 0)\n                singles += 1\n                X -= 1\n        elif X >= Y + Z:\n            doubles += Y + Z\n            X -= Y + Z\n            Y = 0\n            Z = 0\n            singles += X\n            X = 0\n    elif valueOrder == 'CAB':\n        triples += Z\n        X -= triples\n        Y -= triples\n        Z -= triples\n        singles += X + Y\n        X = 0\n        Y = 0\n    elif valueOrder == 'CBA':\n        if X >= Y + Z:\n            if A + C >= 2 * B:\n                doubles += Y + Z\n                X -= doubles\n                Y = 0\n                Z = 0\n                singles += X\n                X -= singles\n            else:\n                triples += Z\n                X -= triples\n                Y -= triples\n                Z -= triples\n                doubles += Y\n                X -= doubles\n                Y -= doubles\n                singles += X\n                X -= singles\n        elif X < Y + Z:\n            (X_A, Y_A, Z_A) = (X, Y, Z)\n            (singles, doubles, triples) = (0, 0, 0)\n            triples += Z_A\n            X_A -= triples\n            Y_A -= triples\n            Z_A -= triples\n            doubles += Y_A\n            X_A -= doubles\n            Y_A -= doubles\n            singles += X_A\n            X_A -= singles\n            energyA = C * triples + B * doubles + A * singles\n            (X_B, Y_B, Z_B) = (X, Y, Z)\n            (singles, doubles, triples) = (0, 0, 0)\n            triples += Y_B + Z_B - X_B\n            X_B -= triples\n            Y_B -= triples\n            Z_B -= triples\n            doubles += (X_B + Y_B + Z_B) // 2\n            energyB = C * triples + B * doubles + A * singles\n            print(min(energyA, energyB))\n            continue\n    energyUsed = C * triples + B * doubles + A * singles\n    print(energyUsed)", "T = int(input())\nfor case in range(T):\n    (X, Y, Z, A, B, C) = [int(val) for val in input().split()]\n    if 2 * A <= B and 3 * A <= C:\n        print(A * (X + Y + Z))\n        continue\n    (X, Y, Z) = sorted([X, Y, Z])\n    if B <= 2 * A and 3 * B <= 2 * C:\n        if Z > X + Y:\n            print(A * (Z - X - Y) + B * (X + Y))\n            continue\n        elif X + Y + Z & 1 and A + B > C:\n            print(B * ((X + Y + Z) // 2 - 1) + C)\n            continue\n        else:\n            print(B * ((X + Y + Z) // 2) + A * (X + Y + Z & 1))\n            continue\n    elif 2 * A <= B:\n        print(C * X + A * (Y + Z - 2 * X))\n        continue\n    elif 2 * B < A + C:\n        if Z > X + Y:\n            print(A * (Z - X - Y) + B * (X + Y))\n            continue\n        else:\n            ones = Z - Y\n            pairs = min(ones, X)\n            print(B * (2 * pairs + Y - X) + A * (ones - pairs) + C * (X - pairs))\n            continue\n    else:\n        print(C * X + B * (Y - X) + A * (Z - Y))\n        continue", "for iiiiiiiiiiiiiiii in range(int(input())):\n    (x, y, z, a, b, c) = map(int, input().strip().split(' '))\n    aa = [x, y, z]\n    aa.sort()\n    x = aa[0]\n    y = aa[1]\n    z = aa[2]\n    n = x\n    m = y - x\n    o = z - y\n    cost = min(3 * b, 2 * c, 2 * b + 2 * a, 6 * a, b + 4 * a)\n    ans1 = o * a + m * min(2 * a, b)\n    if n % 2 == 1:\n        ans1 += min(c, 3 * a, b + a)\n    ans1 = ans1 + cost * (n // 2)\n    ans2 = 0\n    t = min(n, o)\n    n -= t\n    o -= t\n    m += 2 * t\n    ans2 = o * a + m * min(2 * a, b)\n    if n % 2 == 1:\n        ans2 += min(c, 3 * a, b + a)\n    ans2 = ans2 + cost * (n // 2)\n    print(min(ans1, ans2))", "for iiiiiiiiiiiiiiii in range(int(input())):\n    (x, y, z, a, b, c) = map(int, input().strip().split(' '))\n    aa = [x, y, z]\n    aa.sort()\n    x = aa[0]\n    y = aa[1]\n    z = aa[2]\n    n = x\n    m = y - x\n    o = z - y\n    cost = min(3 * b, 2 * c, 2 * b + 2 * a, 6 * a)\n    ans1 = o * a + m * min(2 * a, b)\n    if n % 2 == 1:\n        ans1 += min(c, 3 * a, b + a)\n    ans1 = ans1 + cost * (n // 2)\n    ans2 = 0\n    t = min(n, o)\n    n -= t\n    o -= t\n    m += 2 * t\n    ans2 = o * a + m * min(2 * a, b)\n    if n % 2 == 1:\n        ans2 += min(c, 3 * a, b + a)\n    ans2 = ans2 + cost * (n // 2)\n    print(min(ans1, ans2))", "t = int(input())\nfor i in range(t):\n    x = [-1, -1, -1]\n    (x[0], x[1], x[2], a, b, c) = map(int, input().split())\n    x.sort(reverse=True)\n    b = min(b, 2 * a)\n    c = min(c, 3 * a)\n    c = min(c, b + a)\n    na = x[0] - x[1]\n    nb = x[1] - x[2]\n    nc = x[2]\n    NA = na\n    NB = nb\n    NC = nc\n    cost1 = 0\n    cost2 = 0\n    if c + a > 2 * b:\n        temp = min(nc, na)\n        nc -= temp\n        na -= temp\n        nb += 2 * temp\n    if 3 * b < 2 * c:\n        nb += 3 * (nc // 2)\n        nc = nc % 2\n    cost1 = na * a + nb * b + nc * c\n    na = NA\n    nb = NB\n    nc = NC\n    if 3 * b < 2 * c:\n        nb += 3 * (nc // 2)\n        nc = nc % 2\n    if c + a > 2 * b:\n        temp = min(nc, na)\n        nc -= temp\n        na -= temp\n        nb += 2 * temp\n    cost2 = na * a + nb * b + nc * c\n    print(min(cost1, cost2))", "t = int(input())\nfor _ in range(t):\n    (x_, y_, z_, a, b, c) = map(int, input().split())\n    s = x_ + y_ + z_\n    x = min(x_, y_, z_)\n    z = max(x_, y_, z_)\n    y = s - x - z\n    if b >= a + a:\n        if c < a + a + a:\n            e = x * c + (y - x + z - x) * a\n        else:\n            e = s * a\n    elif c + a < b + b:\n        e = x * c + (y - x) * b + (z - y) * a\n    elif c + c < b + b + b:\n        if x + y <= z:\n            e = (x + y) * b + (z - x - y) * a\n        else:\n            d = x + y - z\n            e = d * c + (z - d) * b\n    else:\n        if x + y <= z:\n            e0 = (x + y) * b + (z - x - y) * a\n        else:\n            e0 = s // 2 * b + s % 2 * a\n        if x == 0:\n            e1 = e0\n        elif x - 1 + y - 1 <= z - 1:\n            e1 = c + (x - 1 + y - 1) * b + (z - 1 - x + 1 - y + 1) * a\n        else:\n            e1 = c + (s - 3) // 2 * b + (s - 3) % 2 * a\n        e = min(e1, e0)\n    print(e)", "def solve1(x, a, b, c):\n    if 3 * b >= 2 * c:\n        return x * c\n    return x // 2 * (3 * b) + x % 2 * c\n\ndef solve2(x, z, a, b, c):\n    if x == z:\n        return solve1(x, a, b, c)\n    if x == 0:\n        return a * z\n    ret = 0\n    if z > 2 * x:\n        ret = (z - 2 * x) * a\n        z = 2 * x\n    if a + c <= 2 * b:\n        return ret + c * x + a * (z - x)\n    q = min(x, z - x)\n    ret += (z - x) * 2 * b\n    return ret + solve1(2 * x - z, a, b, c)\n\ndef solve(x, y, z, a, b, c):\n    (x, y, z) = sorted([x, y, z])\n    b = min(b, 2 * a)\n    c = min(c, a + b)\n    if b >= a * 2:\n        return (z + y - 2 * x) * a + solve1(x, a, b, c)\n    elif x == y:\n        return solve2(x, z, a, b, c)\n    else:\n        return (y - x) * b + solve2(x, z - (y - x), a, b, c)\nimport sys\nf = sys.stdin\nt = int(f.readline())\nfor i in range(t):\n    z = list(map(int, f.readline().split()))\n    print(solve(*z))"]