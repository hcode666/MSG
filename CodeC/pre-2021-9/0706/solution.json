["import sys\n\ndef main():\n    for line in sys.stdin:\n        f = int(line.strip())\n        while f > 0:\n            n = 0\n            count1 = 0\n            count2 = 0\n            count = 0\n            sum = 0\n            flag = 0\n            tempcount = 0\n            (s, n) = input().split()\n            n = int(n)\n            for i in range(n):\n                tempcount = 0\n                for j in range(len(s)):\n                    if s[j] == 'a':\n                        count1 += 1\n                    elif s[j] == 'b':\n                        count2 += 1\n                    if count1 > count2:\n                        count += 1\n                        tempcount += 1\n                if count1 == count2:\n                    flag = 1\n                    break\n                if tempcount == len(s):\n                    flag = 2\n                    break\n                if tempcount == 0:\n                    break\n            if flag == 1:\n                sum = count * n\n            elif flag == 2:\n                sum = count + (n - 1 - i) * len(s)\n            else:\n                sum = count\n            print(sum)\n            f -= 1\nmain()", "t = int(input())\nfor i in range(t):\n    e = input().split()\n    s = e[0]\n    n = int(e[1])\n    c1 = 0\n    c2 = 0\n    f = 0\n    for j in range(len(s)):\n        if s[j] == 'a':\n            c1 += 1\n        else:\n            c2 += 1\n        if c1 > c2:\n            f += 1\n    if n == 1:\n        print(f)\n    else:\n        a = ['rand', f]\n        for j in range(2, 1050):\n            for k in range(len(s)):\n                if s[k] == 'a':\n                    c1 += 1\n                else:\n                    c2 += 1\n                if c1 > c2:\n                    f += 1\n            a.append(f)\n            if j == n:\n                print(f)\n                break\n            if j - 2 >= 1 and a[j] - a[j - 1] == a[j - 1] - a[j - 2]:\n                d = a[j] - a[j - 1]\n                v = f + (n - j) * d\n                print(v)\n                break", "t = int(input())\nfor i in range(t):\n    e = input().split()\n    s = e[0]\n    n = int(e[1])\n    c1 = 0\n    c2 = 0\n    f = 0\n    for j in range(len(s)):\n        if s[j] == 'a':\n            c1 += 1\n        else:\n            c2 += 1\n        if c1 > c2:\n            f += 1\n    if n == 1:\n        print(f)\n    else:\n        a = ['rand', f]\n        for j in range(2, 1050):\n            for k in range(len(s)):\n                if s[k] == 'a':\n                    c1 += 1\n                else:\n                    c2 += 1\n                if c1 > c2:\n                    f += 1\n            a.append(f)\n            if j == n:\n                print(f)\n                break\n            if j - 2 >= 1 and a[j] - a[j - 1] == a[j - 1] - a[j - 2]:\n                d = a[j] - a[j - 1]\n                v = f + (n - j) * d\n                print(v)\n                break", "t = input()\nfor _ in range(int(t)):\n    temp = input().split()\n    s = temp[0]\n    n = int(temp[1])\n    ca = 0\n    cb = 0\n    pref = 0\n    for i in range(len(s)):\n        if s[i] == 'a':\n            ca += 1\n        else:\n            cb += 1\n        if ca > cb:\n            pref += 1\n    if n == 1:\n        print(pref)\n    else:\n        a = ['rand', pref]\n        for i in range(2, 1050):\n            for j in range(len(s)):\n                if s[j] == 'a':\n                    ca += 1\n                else:\n                    cb += 1\n                if ca > cb:\n                    pref += 1\n            a.append(pref)\n            if i == n:\n                print(pref)\n                break\n            if i - 2 >= 1 and a[i] - a[i - 1] == a[i - 1] - a[i - 2]:\n                diff = a[i] - a[i - 1]\n                val = pref + (n - i) * diff\n                print(val)\n                break", "t = input()\nfor _ in range(int(t)):\n    temp = input().split()\n    s = temp[0]\n    n = int(temp[1])\n    ca = 0\n    cb = 0\n    pref = 0\n    for i in range(len(s)):\n        if s[i] == 'a':\n            ca += 1\n        else:\n            cb += 1\n        if ca > cb:\n            pref += 1\n    if n == 1:\n        print(pref)\n    else:\n        a = ['rand', pref]\n        for i in range(2, 1050):\n            for j in range(len(s)):\n                if s[j] == 'a':\n                    ca += 1\n                else:\n                    cb += 1\n                if ca > cb:\n                    pref += 1\n            a.append(pref)\n            if i == n:\n                print(pref)\n                break\n            if i - 2 >= 1 and a[i] - a[i - 1] == a[i - 1] - a[i - 2]:\n                diff = a[i] - a[i - 1]\n                val = pref + (n - i) * diff\n                print(val)\n                break", "for i in range(int(input())):\n    (string, n) = input().split(' ')\n    n = int(n)\n    a = 0\n    b = 0\n    count = 0\n    for i in string:\n        if i == 'a':\n            a += 1\n        else:\n            b += 1\n        if a > b:\n            count += 1\n    if a == b:\n        print(count * n)\n    if a > b:\n        m = int(b / (a - b))\n        m += 1\n        a_1 = 0\n        b_1 = 0\n        count_1 = 0\n        if n > m:\n            for i in string * m:\n                if i == 'a':\n                    a_1 += 1\n                else:\n                    b_1 += 1\n                if a_1 > b_1:\n                    count_1 += 1\n            count_1 += (n - m) * len(string)\n            print(count_1)\n        if m >= n:\n            a_1 = 0\n            b_1 = 0\n            count_1 = 0\n            for i in string * n:\n                if i == 'a':\n                    a_1 += 1\n                else:\n                    b_1 += 1\n                if a_1 > b_1:\n                    count_1 += 1\n            print(count_1)\n    if a < b:\n        m = int(a / (b - a))\n        m += 1\n        a_1 = 0\n        b_1 = 0\n        count_1 = 0\n        if n > m:\n            for j in string * m:\n                if j == 'a':\n                    a_1 += 1\n                else:\n                    b_1 += 1\n                if a_1 > b_1:\n                    count_1 += 1\n            print(count_1)\n        if m >= n:\n            a_1 = 0\n            b_1 = 0\n            count_1 = 0\n            for i in string * n:\n                if i == 'a':\n                    a_1 += 1\n                else:\n                    b_1 += 1\n                if a_1 > b_1:\n                    count_1 += 1\n            print(count_1)", "T = int(input())\n\ndef f(m, st):\n    v = 0\n    k = m\n    for i in st:\n        if i == 'a':\n            k += 1\n        else:\n            k -= 1\n        if k > 0:\n            v += 1\n    return v\nfor something in range(T):\n    (s, n) = input().split(' ')\n    n = int(n)\n    d = 0\n    for i in s:\n        if i == 'a':\n            d += 1\n        else:\n            d -= 1\n    ans = 0\n    if d == 0:\n        ans = f(0, s) * n\n    elif d > 0:\n        p = min(n, len(s) // (2 * abs(d)) + 3)\n        for i in range(p):\n            ans += f(i * d, s)\n        ans += len(s) * (n - p)\n    else:\n        p = min(n, len(s) // (2 * abs(d)) + 3)\n        for i in range(p):\n            ans += f(i * d, s)\n    print(ans)", "from math import ceil\nfor _ in range(int(input())):\n    (s, n) = input().split()\n    n = int(n)\n    slen = len(s)\n    pre = [0] * slen\n    ans = 0\n    cnta = 0\n    cntb = 0\n    for i in range(slen):\n        if s[i] == 'a':\n            cnta += 1\n        else:\n            cntb += 1\n        pre[i] = cnta - cntb\n        if cnta > cntb:\n            ans += 1\n    diff = cnta - cntb\n    if diff == 0:\n        print(ans * n)\n    elif diff > 0:\n        ans = ans * n\n        for i in range(slen):\n            if pre[i] <= 0:\n                canstop = ceil((-pre[i] + 1) / diff)\n                ans += max(n - canstop, 0)\n        print(ans)\n    else:\n        ans = 0\n        for i in range(slen):\n            if pre[i] > 0:\n                canpropagate = ceil(-pre[i] / diff)\n                ans += min(canpropagate, n)\n        print(ans)", "t = int(input())\n\ndef count(s, n=1):\n    a = 0\n    b = 0\n    c = 0\n    for j in range(n):\n        for i in range(len(s)):\n            if s[i] == 'a':\n                a += 1\n            elif s[i] == 'b':\n                b += 1\n            if a > b:\n                c += 1\n    return (c, a, b)\nfor x in range(t):\n    temp = input().split(' ')\n    (n, s) = (int(temp[1]), temp[0])\n    size = len(s)\n    (_, a, b) = count(s)\n    if b > a:\n        n1 = int((1 + b) / (b - a) + 1) + 1\n        n1 = min(n1, n)\n        (c, _, _) = count(s, n1)\n        print(c)\n    elif a > b:\n        n1 = int((1 + b) / (a - b) + 1) + 1\n        n1 = min(n1, n)\n        (c, _, _) = count(s, n1)\n        ans = c + size * (n - n1)\n        print(ans)\n    else:\n        (init, _, _) = count(s)\n        ans = init * n\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    ns = len(s)\n    n = int(n)\n    na = 0\n    nb = 0\n    total = 0\n    while n:\n        count = 0\n        for i in s:\n            if i == 'a':\n                na += 1\n            else:\n                nb += 1\n            if na > nb:\n                count += 1\n        total += count\n        if na == nb:\n            total = n * count\n            break\n        if count == 0:\n            break\n        n -= 1\n        if count == ns:\n            total += n * ns\n            break\n    print(total)", "t = int(input())\nfor _ in range(t):\n    li = list(map(str, input().split()))\n    s = li[0]\n    n = int(li[1])\n    l = len(s)\n    (a, b) = (0, 0)\n    total = 0\n    while n > 0:\n        count = 0\n        for i in s:\n            if i == 'a':\n                a += 1\n            else:\n                b += 1\n            if a > b:\n                count += 1\n        total += count\n        if a == b:\n            total = n * count\n            break\n        if count == 0:\n            break\n        n -= 1\n        if count == l:\n            total += n * l\n            break\n    print(total)", "t = int(input())\nfor _ in range(t):\n    li = list(map(str, input().split()))\n    s = li[0]\n    n = int(li[1])\n    l = len(s)\n    (a, b) = (0, 0)\n    total = 0\n    while n > 0:\n        count = 0\n        for i in s:\n            if i == 'a':\n                a += 1\n            else:\n                b += 1\n            if a > b:\n                count += 1\n        total += count\n        if a == b:\n            total = n * count\n            break\n        if count == 0:\n            break\n        n -= 1\n        if count == l:\n            total += n * l\n            break\n    print(total)", "t = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    s = str(s)\n    l = len(s)\n    freqa = 0\n    freqb = 0\n    freq = 0\n    f1 = 0\n    f2 = 0\n    for i in range(n):\n        tempfreq = 0\n        for j in range(len(s)):\n            if s[j] == 'a':\n                freqa += 1\n            elif s[j] == 'b':\n                freqb += 1\n            if freqa > freqb:\n                freq += 1\n                tempfreq += 1\n        if freqa == freqb:\n            f1 = 1\n            break\n        if tempfreq == len(s):\n            f2 = 1\n            break\n        if tempfreq == 0:\n            break\n    if f1:\n        print(freq * n)\n    elif f2:\n        print(freq + (n - i - 1) * len(s))\n    else:\n        print(freq)", "def fun():\n    n = int(input())\n    for a0 in range(n):\n        a = list(input().split())\n        s = a[0]\n        m = int(a[1])\n        l = len(s)\n        arr = [0 for i in range(l)]\n        count = 0\n        for i in range(l):\n            if s[i] == 'a':\n                count += 1\n            else:\n                count -= 1\n            arr[i] = count\n        tot = count\n        num = 0\n        if tot == 0:\n            for i in range(l):\n                if arr[i] > 0:\n                    num += m\n            print(num)\n            continue\n        elif tot < 0:\n            for i in range(l):\n                if arr[i] > 0:\n                    mi = arr[i]\n                    if mi % tot == 0:\n                        mi = mi // -tot\n                    else:\n                        mi = mi // -tot\n                        mi += 1\n                    if mi <= m:\n                        num = num + mi\n                    else:\n                        num = num + m\n            print(num)\n        else:\n            for i in range(l):\n                if arr[i] > 0:\n                    num = num + m\n                else:\n                    mi = -arr[i]\n                    mi //= tot\n                    mi += 1\n                    mi = m - mi\n                    if mi > 0:\n                        num += mi\n            print(num)\nfun()", "T = int(input())\nfor _ in range(T):\n    (s, n) = input().strip().split()\n    n = int(n)\n    v = []\n    p = 0\n    tot = 0\n    for c in s:\n        if c == 'a':\n            tot += 1\n        else:\n            tot -= 1\n        v.append(tot)\n        if tot > 0:\n            p += 1\n    vs = sorted(v)\n    seuil = []\n    prev = vs[0] - 1\n    for i in range(len(vs)):\n        if vs[i] != prev:\n            seuil.append(len(vs) - i)\n            prev = vs[i]\n    seuil.append(0)\n    if v[-1] == 0:\n        print(p * n)\n    else:\n        fin = v[-1]\n        deb = vs[0] - 1\n        for i in range(n - 1):\n            idx = -deb - fin\n            if idx < 0:\n                idx = 0\n            elif idx >= len(seuil):\n                idx = -1\n            p = p + seuil[idx]\n            if idx == -1 or idx == 0:\n                break\n            fin += v[-1]\n        if idx == 0 and i < n - 2:\n            p = p + (n - 2 - i) * seuil[idx]\n        print(p)", "T = int(input())\nfor t in range(T):\n    (S, N) = input().split(' ')\n    N = int(N)\n    l = len(S)\n    (count, countA, countB) = (0, 0, 0)\n    answer = 0\n    for n in range(N):\n        count = 0\n        for i in range(l):\n            if S[i] == 'a':\n                countA += 1\n            else:\n                countB += 1\n            if countA > countB:\n                count += 1\n        if count == 0:\n            break\n        elif count == l or countA == countB:\n            answer += (N - n) * count\n            break\n        else:\n            answer += count\n    print(answer)", "t = int(input())\nfor i in range(t):\n    (a, k) = map(str, input().split(' '))\n    hash1 = [0, 0]\n    k = int(k)\n    ans = 0\n    a1 = 0\n    b1 = 0\n    for j in range(k):\n        count = 0\n        for l in range(len(a)):\n            if a[l] == 'a':\n                a1 += 1\n            else:\n                b1 += 1\n            if a1 > b1:\n                count += 1\n        if count == 0:\n            break\n        elif count == len(a):\n            ans = ans + (k - j) * count\n            break\n        elif a1 == b1:\n            ans += (k - j) * count\n            break\n        else:\n            ans += count\n    print(ans)", "from sys import stdin\nfrom math import ceil\nfor _ in range(int(stdin.readline().strip())):\n    (s, n) = stdin.readline().split()\n    n = int(n)\n    score = 0\n    arr = []\n    for ch in s:\n        if ch == 'a':\n            score += 1\n        else:\n            score -= 1\n        arr.append(score)\n    single = arr[-1]\n    if single == 0:\n        positives = 0\n        for i in arr:\n            if i > 0:\n                positives += 1\n        print(n * positives)\n    elif single < 0:\n        rounds_positive = []\n        for i in arr:\n            if i > 0:\n                num = ceil(i / -single)\n                if num > n:\n                    num = n\n            else:\n                num = 0\n            rounds_positive.append(num)\n        print(sum(rounds_positive))\n    else:\n        rounds_positive = []\n        for i in arr:\n            if i > 0:\n                num = n\n            else:\n                num = n - 1 - -i // single\n                if num < 0:\n                    num = 0\n            rounds_positive.append(num)\n        print(sum(rounds_positive))", "t = int(input())\nfor i in range(t):\n    (a, k) = map(str, input().split(' '))\n    hash1 = [0, 0]\n    k = int(k)\n    ans = 0\n    a1 = 0\n    b1 = 0\n    for j in range(k):\n        count = 0\n        for l in range(len(a)):\n            if a[l] == 'a':\n                a1 += 1\n            else:\n                b1 += 1\n            if a1 > b1:\n                count += 1\n        if count == 0:\n            break\n        elif count == len(a):\n            ans = ans + (k - j) * count\n            break\n        elif a1 == b1:\n            ans += (k - j) * count\n            break\n        else:\n            ans += count\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (a, k) = map(str, input().split(' '))\n    hash1 = [0, 0]\n    k = int(k)\n    ans = 0\n    a1 = 0\n    b1 = 0\n    for j in range(k):\n        count = 0\n        for l in range(len(a)):\n            if a[l] == 'a':\n                a1 += 1\n            else:\n                b1 += 1\n            if a1 > b1:\n                count += 1\n        if count == 0:\n            break\n        elif count == len(a):\n            ans = ans + (k - j) * count\n            break\n        elif a1 == b1:\n            ans += (k - j) * count\n            break\n        else:\n            ans += count\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (a, k) = map(str, input().split(' '))\n    hash1 = [0, 0]\n    k = int(k)\n    ans = 0\n    a1 = 0\n    b1 = 0\n    for j in range(k):\n        count = 0\n        for l in range(len(a)):\n            if a[l] == 'a':\n                a1 += 1\n            else:\n                b1 += 1\n            if a1 > b1:\n                count += 1\n        if count == 0:\n            break\n        elif count == len(a):\n            ans = ans + (k - j) * count\n            break\n        elif a1 == b1:\n            ans += (k - j) * count\n            break\n        else:\n            ans += count\n    print(ans)", "pr = int(input())\nfor kui in range(0, pr):\n    (s, n) = map(str, input().strip().split(' '))\n    mi = int(n)\n    oi = mi\n    p = len(s)\n    j = s\n    k = [0]\n    (c, x, y, w, v, z) = (0, 0, 0, 0, 0, 0)\n    while v != 1:\n        for i in range(z, len(s)):\n            t = s[i]\n            if t == 'a':\n                x = x + 1\n            else:\n                y = y + 1\n            if x > y:\n                c = c + 1\n            p = p - 1\n            if p == 0:\n                if c == k[len(k) - 1]:\n                    v = 1\n                    break\n                k.append(c)\n                w = w + 1\n                c = 0\n                p = len(j)\n        mi = mi - 1\n        if mi != 0:\n            z = len(s)\n            s = s + j\n        else:\n            v = 1\n    oi = oi - w\n    f = c * oi + sum(k)\n    print(f)", "def ans(s):\n    ca = s.count('a')\n    cb = s.count('b')\n    count = 0\n    for j in range(len(s) - 1, -1, -1):\n        if s[j] == 'a':\n            ca -= 1\n        if s[j] == 'b':\n            cb -= 1\n        if ca > cb:\n            count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    ca = s.count('a')\n    cb = s.count('b')\n    if ca == cb:\n        print(ans(s) * n)\n    elif ca < cb:\n        a = ca\n        b = cb\n        k = 2\n        while cb / b < n:\n            if cb - ca > a:\n                break\n            else:\n                ca = a * k\n                cb = b * k\n                k += 1\n        x = cb // b\n        if x > n:\n            x = n\n        temp = s\n        for j in range(1, x):\n            s += temp\n        print(ans(s))\n    elif ca > cb:\n        if n > 1:\n            a = ca\n            b = cb\n            k = 2\n            while ca // a < n:\n                if ca - cb > b:\n                    break\n                else:\n                    ca = a * k\n                    cb = b * k\n                    k += 1\n            x = ca // a\n            if x > n:\n                x = n\n            temp = s\n            for j in range(1, x):\n                s += temp\n            print((n - x) * len(temp) + ans(s) + 1)\n        else:\n            print(ans(s) + 1)", "for _ in range(int(input())):\n    (s, n) = input().split()\n    n = int(n)\n    good_prefix_count = 0\n    a_count = 0\n    s_score = 2 * s.count('a') - len(s)\n    for c in s:\n        if c == 'a':\n            a_count += 1\n        else:\n            a_count -= 1\n        if s_score < 0:\n            good_prefix_count += min(n, max(0, (1 - a_count) // s_score + 1))\n        elif s_score > 0:\n            good_prefix_count += min(n, max(0, (a_count - 1) // s_score + n))\n        elif a_count > 0:\n            good_prefix_count += n\n    print(good_prefix_count)", "t = int(input())\nwhile t > 0:\n    (string, n) = input().split()\n    n = int(n)\n    counta = 0\n    countb = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == 'a':\n            counta += 1\n        elif string[i] == 'b':\n            countb += 1\n        if counta > countb:\n            count += 1\n    if countb == counta:\n        count = count * n\n    elif counta > countb:\n        length = len(string)\n        prevcount = count\n        individualcount = count\n        num = 1\n        while length != individualcount:\n            if num == n:\n                break\n            for i in range(len(string)):\n                if string[i] == 'a':\n                    counta += 1\n                elif string[i] == 'b':\n                    countb += 1\n                if counta > countb:\n                    count += 1\n            individualcount = count - prevcount\n            prevcount = count\n            num += 1\n        count = count + (n - num) * length\n    else:\n        prevcount = count\n        individualcount = count\n        m = n - 1\n        while individualcount != 0:\n            if m == 0:\n                break\n            for i in range(len(string)):\n                if string[i] == 'a':\n                    counta += 1\n                elif string[i] == 'b':\n                    countb += 1\n                if counta > countb:\n                    count += 1\n            individualcount = count - prevcount\n            prevcount = count\n            m -= 1\n    print(count)\n    t -= 1", "T = int(input())\nwhile T > 0:\n    (s, m) = input().split()\n    m = int(m)\n    ca = 0\n    cb = 0\n    w = 0\n    yes = 0\n    caa = 0\n    cap = 0\n    we = 0\n    for j in range(m):\n        cap = caa\n        caa = 0\n        wee = we\n        we = 0\n        for i in range(len(s)):\n            if s[i] == 'a':\n                ca += 1\n                caa += 1\n            else:\n                cb += 1\n            if ca > cb:\n                w += 1\n                we += 1\n        if we == wee:\n            yes = 1\n            break\n    if yes == 0:\n        print(w)\n    else:\n        print(w + we * (m - j - 1))\n    T -= 1", "d = {'a': 1, 'b': -1}\nT = int(input())\nfor t in range(T):\n    (s, n) = input().split()\n    n = int(n)\n    cur = 0\n    cnt = []\n    for ch in s:\n        cur += d[ch]\n        cnt.append(cur)\n    delta = cnt[-1]\n    res = 0\n    if delta == 0:\n        res = n * sum(map(lambda x: x > 0, cnt))\n    elif delta < 0:\n        for v in cnt:\n            if v > 0:\n                res -= max(-n, v // delta)\n    else:\n        for v in cnt:\n            res += n\n            if v <= 0:\n                res -= min(n, -v // delta + 1)\n    print(res)", "for _ in range(int(input())):\n    (s, n) = input().split()\n    n = int(n)\n    l = []\n    length = len(s)\n    (actr, pos_ctr, ans) = (0, 0, 0)\n    (po_ctr, ne_ctr) = (0, 0)\n    for i in range(length):\n        if s[i] == 'a':\n            actr += 1\n        else:\n            actr -= 1\n        l.append(actr)\n        if actr > 0:\n            pos_ctr += 1\n    rem_count = 0\n    if l[-1] == 0 or pos_ctr == length:\n        print(pos_ctr * n)\n    else:\n        while po_ctr != length and ne_ctr != length:\n            (po_ctr, ne_ctr) = (0, 0)\n            rem_count += 1\n            temp = l[-1]\n            for i in range(length):\n                if s[i] == 'a':\n                    temp += 1\n                else:\n                    temp -= 1\n                l.append(temp)\n                if temp > 0:\n                    po_ctr += 1\n                else:\n                    ne_ctr += 1\n        if po_ctr == length:\n            if rem_count + 1 < n:\n                ans = (n - rem_count) * length\n                for i in range(len(l) - length):\n                    if l[i] > 0:\n                        ans += 1\n            elif rem_count + 1 == n:\n                ans = pos_ctr\n                for i in range(length, len(l)):\n                    if l[i] > 0:\n                        ans += 1\n            else:\n                ans = 0\n                for i in range(n * length):\n                    if l[i] > 0:\n                        ans += 1\n        elif ne_ctr == length:\n            if rem_count + 1 < n:\n                ans = 0\n                for i in range(len(l) - length):\n                    if l[i] > 0:\n                        ans += 1\n            elif rem_count + 1 == n:\n                ans = pos_ctr\n                for i in range(length, len(l) - length):\n                    if l[i] > 0:\n                        ans += 1\n            else:\n                for i in range(n * length):\n                    if l[i] > 0:\n                        ans += 1\n        print(ans)", "def countpre(s, n, l):\n    a0 = 0\n    b0 = 0\n    a = 0\n    b = 0\n    c = 0\n    for i in s:\n        if i == 'a':\n            a += 1\n            a0 += 1\n        else:\n            b += 1\n            b0 += 1\n        if a > b:\n            c += 1\n    if a0 == b0:\n        return c * n\n    for j in range(1, n):\n        for i in s:\n            if i == 'a':\n                a += 1\n            else:\n                b += 1\n            if a > b:\n                c += 1\n        if a > b + b0:\n            return c + l * (n - 1 - j)\n        elif b > a + a0:\n            return c\n    return c\nT = int(input())\nwhile T:\n    T -= 1\n    (s, n) = input().split()\n    print(countpre(s, int(n), len(s)))", "z = int(input())\nwhile z:\n    z -= 1\n    x = input().split()\n    s = x[0]\n    n = int(x[1])\n    (ca, cb, p, ga, gb, res, t) = (0, 0, 0, 0, 0, 0, 0)\n    for c in s:\n        if c == 'a':\n            ca = ca + 1\n        else:\n            cb = cb + 1\n    diff = ca - cb\n    if diff > 0:\n        for q in range(n):\n            p = 0\n            for c in s:\n                if c == 'a':\n                    ga = ga + 1\n                else:\n                    gb = gb + 1\n                if ga > gb:\n                    p += 1\n            if p == len(s):\n                t = q + 1\n                res = res + p\n                break\n            res = res + p\n        if t != 0:\n            total = res + (n - t) * len(s)\n        else:\n            total = res\n    elif diff < 0:\n        for q in range(n):\n            p = 0\n            for c in s:\n                if c == 'a':\n                    ga = ga + 1\n                else:\n                    gb = gb + 1\n                if ga > gb:\n                    p += 1\n            if p == 0:\n                res = res + p\n                break\n            res = res + p\n        total = res\n    else:\n        for c in s:\n            if c == 'a':\n                ga = ga + 1\n            else:\n                gb = gb + 1\n            if ga > gb:\n                p += 1\n        total = p * n\n    print(total)", "def mp():\n    return map(str, input().split(' '))\n\ndef lst():\n    return list(mp())\nfor w in range(int(input())):\n    (s, k) = mp()\n    k = int(k)\n    c = p = ans = 0\n    b = []\n    for i in range(len(s)):\n        if s[i] == 'a':\n            c += 1\n            b.append(c)\n            if c > 0:\n                p += 1\n        else:\n            c -= 1\n            b.append(c)\n            if c > 0:\n                p += 1\n    if c > 0 and p == len(s):\n        ans = len(s) * k\n        print(ans)\n    elif c <= 0 and p == 0:\n        print(0)\n    elif c > 0:\n        j = m = 0\n        for i in range(len(b)):\n            if b[i] <= 0:\n                m = 1 + abs(b[i]) // c\n                if m > k:\n                    m = k\n                j += m\n        ans = k * len(b) - j\n        print(ans)\n    elif c < 0:\n        j = m = 0\n        c = abs(c)\n        for i in range(len(b)):\n            if b[i] > 0 and b[i] % c == 0:\n                m = b[i] // c\n                if m > k:\n                    m = k\n                j += m\n            elif b[i] > 0 and b[i] % c != 0:\n                m = 1 + b[i] // c\n                if m > k:\n                    m = k\n                j += m\n        print(j)\n    elif c == 0:\n        print(p * k)", "import math\nt = int(input())\nwhile t:\n    t = t - 1\n    (s, n) = input().split()\n    slen = len(s)\n    score = [0] * slen\n    n = int(n)\n    noa = 0\n    nob = 0\n    iterate = 0\n    temp_iterate = 0\n    for i in s:\n        if i == 'a':\n            noa = noa + 1\n            score[iterate] = temp_iterate + 1\n            temp_iterate = score[iterate]\n            iterate = iterate + 1\n        elif i == 'b':\n            nob = nob + 1\n            score[iterate] = temp_iterate - 1\n            temp_iterate = score[iterate]\n            iterate = iterate + 1\n    diff = noa - nob\n    count = 0\n    for i in score:\n        if diff > 0:\n            if i <= 0:\n                diff_zero = 0 - i\n                rep = diff_zero // diff + 1\n                if n > rep:\n                    count = count - rep + n\n            if i > 0:\n                count = count + n\n        elif diff < 0:\n            if i > 0:\n                rep = math.ceil(i / (0 - diff))\n                if rep < n:\n                    count = count + rep\n                else:\n                    count = count + n\n        elif i > 0:\n            count = count + n\n    print(count)", "import math\nt = int(input())\nfor _ in range(t):\n    (s, n) = input().strip().split(' ')\n    n = int(n)\n    size = len(s)\n    a = [0] * size\n    summ = 0\n    ans = 0\n    for i in range(size):\n        if s[i] == 'a':\n            summ += 1\n        else:\n            summ -= 1\n        a[i] = summ\n    if summ > 0:\n        for i in a:\n            if i > 0:\n                ans += n\n            else:\n                ans += max(0, n - int(math.ceil((1 - i) / summ)))\n    elif summ < 0:\n        for i in a:\n            if i > 0:\n                ans += min(max(0, int(math.ceil((0 - i) / summ))), n)\n    else:\n        for i in a:\n            if i > 0:\n                ans += n\n    print(ans)", "test = int(input())\nfor i in range(test):\n    res = input().split()\n    les = len(res[0])\n    dic = {}\n    dic['a'] = 0\n    dic['b'] = 0\n    m = 0\n    for i in res[0]:\n        if i == 'a':\n            dic['a'] = dic['a'] + 1\n            if dic['a'] > dic['b']:\n                m = m + 1\n        else:\n            dic['b'] = dic['b'] + 1\n            if dic['a'] > dic['b']:\n                m = m + 1\n    k = dic['a'] - dic['b']\n    j = 0\n    l = 0\n    while j < int(res[1]) - 1:\n        count = 0\n        for i in res[0]:\n            if i == 'a':\n                k = k + 1\n                if k > 0:\n                    count = count + 1\n            else:\n                k = k - 1\n                if k > 0:\n                    count = count + 1\n        if k == 0:\n            l = count\n            break\n        elif count == les:\n            break\n        elif count == 0:\n            break\n        else:\n            l = l + count\n            j = j + 1\n    if dic['a'] < dic['b']:\n        print(m + l)\n    elif dic['a'] == dic['b']:\n        print(m + l * (int(res[1]) - 1))\n    else:\n        print(m + l + les * (int(res[1]) - 1 - j))", "t = int(input())\nfor i in range(t):\n    (s, w) = input().split()\n    w = int(w)\n    temp = w\n    total = 0\n    co = 0\n    nc = 0\n    pco = 0\n    j = 0\n    while j <= len(s):\n        if j == len(s):\n            w = w - 1\n            diff = co - pco\n            pco = co\n            co = nc\n            if temp - w >= 3:\n                if diff == co - pco:\n                    break\n            j = 0\n        if w == 0:\n            break\n        if s[j] == 'a':\n            total = total + 1\n        elif s[j] == 'b':\n            total = total - 1\n        if total > 0:\n            nc = nc + 1\n        j = j + 1\n    nc = nc + diff * w\n    print(nc)", "T = int(input())\nfor t in range(T):\n    (s, K) = input().split()\n    pomd = len(s)\n    K = int(K)\n    pom = True\n    pa = 0\n    pb = 0\n    p = 0\n    pomk = 0\n    pomp = 0\n    while pom:\n        for z in s:\n            if z == 'a':\n                pa += 1\n            else:\n                pb += 1\n            if pa > pb:\n                p += 1\n                pomp += 1\n        pomk += 1\n        if pa == pb:\n            pom = False\n            p = p * K\n        if pomp == pomd:\n            pom = False\n            p = p + (K - pomk) * pomd\n        if pomp == 0:\n            pom = False\n        if pomk == K:\n            pom = False\n        pomp = 0\n    print(p)", "T = int(input())\nans = []\nfor xx in range(T):\n    c = 0\n    d = dict({'a': 0, 'b': 0})\n    (s, zz) = map(str, input().split())\n    n = int(zz)\n    i = 0\n    c1 = 0\n    c2 = 0\n    flag = 1\n    while i < n:\n        c2 = c1\n        c1 = 0\n        for k in s:\n            d[k] = d[k] + 1\n            if d['a'] > d['b']:\n                c1 = c1 + 1\n        if c1 == 0:\n            break\n        if c1 == c2:\n            flag = 0\n            break\n        c = c + c1\n        i = i + 1\n    if flag == 0:\n        c = c + (n - i) * c2\n    ans.append(c)\nfor k in ans:\n    print(k)", "t = int(input())\nfor idx in range(t):\n    ans = 0\n    e = 0\n    a = input().split()\n    n = int(a[1])\n    s = a[0]\n    i = 0\n    dif = 0\n    co = 0\n    pco = 0\n    temp = n\n    while i >= 0:\n        if i == len(s):\n            n = n - 1\n            dif = co - pco\n            pco = co\n            co = ans\n            if temp - n >= 3:\n                if dif == co - pco:\n                    break\n            i = 0\n        if n == 0:\n            break\n        if s[i] == 'a':\n            e = e + 1\n        else:\n            e = e - 1\n        if e > 0:\n            ans = ans + 1\n        i = i + 1\n    print(ans + dif * n)", "for z in range(int(input())):\n    (s, n) = [x for x in input().split()]\n    n = int(n)\n    np = n\n    k = 0\n    l = 0\n    ca = 0\n    cb = 0\n    agg = 0\n    prev = -1\n    flag = 0\n    while n != 0:\n        cp = 0\n        k += 1\n        for i in range(len(s)):\n            if s[i] == 'a':\n                ca += 1\n            else:\n                cb += 1\n            if ca > cb:\n                cp += 1\n        if prev == cp:\n            break\n        else:\n            agg += cp\n            prev = cp\n        n -= 1\n    if n == 0:\n        print(agg)\n    else:\n        l = (np - (k - 1)) * cp\n        print(agg + l)", "t = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    l = len(s)\n    c = [0] * l\n    b = [0] * l\n    s1 = 0\n    s2 = 0\n    for i in range(l):\n        if s[i] == 'a':\n            s1 += 1\n        else:\n            s1 -= 1\n        if s1 > 0:\n            c[i] = 1\n        b[i] = s1\n    last = b[-1]\n    if last == 0:\n        s2 = sum(c) * n\n    elif last > 0:\n        for i in b:\n            if i > 0:\n                s2 += n\n            elif i == 0:\n                s2 += n - 1\n            else:\n                s2 += max(0, n - (-i // last + 1))\n    else:\n        for i in b:\n            if i <= 0:\n                s2 += 0\n            else:\n                s2 += 1\n                m1 = -i / last\n                m = -i // last\n                if m == m1:\n                    m -= 1\n                s2 += min(n - 1, m)\n    print(s2)", "from itertools import accumulate\nfrom bisect import bisect_left\nt = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    a = list(accumulate(((c == 'b') - (c == 'a') for c in s)))\n    t = -a[-1]\n    a.sort()\n    if t == 0:\n        print(n * bisect_left(a, 0))\n    else:\n        m = max(0, min(n, a[(0, -1)[t > 0]] // t + 1))\n        ans = sum((bisect_left(a, t * i) for i in range(m)))\n        if t > 0:\n            ans += len(s) * (n - m)\n        print(ans)", "from itertools import accumulate\nfrom bisect import bisect_left\nt = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    a = list(accumulate(((c == 'b') - (c == 'a') for c in s)))\n    t = -a[-1]\n    a.sort()\n    if t == 0:\n        print(n * bisect_left(a, 0))\n    else:\n        m = max(0, min(n, a[-1 if t > 0 else 0] // t + 1))\n        ans = sum((bisect_left(a, t * i) for i in range(m)))\n        if t > 0:\n            ans += len(s) * (n - m)\n        print(ans)", "from itertools import accumulate\nfrom bisect import bisect_left\nt = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    a = list(accumulate(((c == 'b') - (c == 'a') for c in s)))\n    t = -a[-1]\n    a.sort()\n    if t == 0:\n        print(n * bisect_left(a, 0))\n    else:\n        m = min(n, len(s) // abs(t))\n        ans = sum((bisect_left(a, t * i) for i in range(m)))\n        if t > 0:\n            ans += len(s) * (n - m)\n        print(ans)", "from math import *\nt = int(input())\nfor test in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    s_len = len(s)\n    a = [0] * s_len\n    b = [0] * s_len\n    if s[0] == 'a':\n        a[0] = 1\n    else:\n        b[0] = 1\n    for i in range(1, s_len):\n        if s[i] == 'a':\n            a[i] = a[i - 1] + 1\n            b[i] = b[i - 1]\n        else:\n            a[i] = a[i - 1]\n            b[i] = b[i - 1] + 1\n    ans = 0\n    if a[s_len - 1] < b[s_len - 1]:\n        for i in range(s_len):\n            if a[i] > b[i]:\n                ans += max(min(ceil((a[i] - b[i]) / (b[s_len - 1] - a[s_len - 1])) - 1, n - 1), -1) + 1\n    elif a[s_len - 1] > b[s_len - 1]:\n        for i in range(s_len):\n            ans += n - min(max(floor((b[i] - a[i]) / (a[s_len - 1] - b[s_len - 1])) + 1, 0), n)\n    elif a[s_len - 1] == b[s_len - 1]:\n        for i in range(s_len):\n            if a[i] > b[i]:\n                ans += n\n    print(ans)", "import numpy as np\nt = int(input())\nfor _ in range(t):\n    (s, s2) = input().split()\n    n = int(s2)\n    A = np.array([1 if c == 'a' else -1 for c in s], dtype=np.int64)\n    B = np.cumsum(A, dtype=np.int64)\n    x = np.sum(B > 0)\n    (minB, maxB, last) = (min(B), max(B), B[-1])\n    if last == 0:\n        print(x * n)\n    elif last < 0:\n        if maxB <= 0:\n            print(0)\n        else:\n            first_cnt = maxB // -last + 1\n            if first_cnt > n:\n                first_cnt = n\n            A = np.array(list(A) * first_cnt, dtype=np.float64)\n            B = np.cumsum(A, dtype=np.float64)\n            print('%d' % np.sum(B > 0))\n    elif minB > 0:\n        print(len(s) * n)\n    elif minB == 0:\n        print(x + len(s) * (n - 1))\n    else:\n        first_cnt = -minB // last + 1\n        if first_cnt > n:\n            first_cnt = n\n        A = np.array(list(A) * first_cnt, dtype=np.float64)\n        B = np.cumsum(A, dtype=np.float64)\n        x = np.sum(B > 0, dtype=np.float64)\n        x += float(n - first_cnt) * len(s)\n        print('%d' % x)", "from itertools import accumulate\nfrom bisect import bisect_left\nt = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    a = list(accumulate(((c == 'b') - (c == 'a') for c in s)))\n    t = -a[-1]\n    a.sort()\n    if t == 0:\n        print(n * bisect_left(a, 0))\n    else:\n        m = max(0, min(n, a[-1 if t > 0 else 0] // t + 1))\n        ans = sum((bisect_left(a, t * i) for i in range(m)))\n        if t > 0:\n            ans += len(s) * (n - m)\n        print(ans)", "from itertools import accumulate\nfrom bisect import bisect_left\nt = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    a = list(accumulate(((c == 'b') - (c == 'a') for c in s)))\n    t = -a[-1]\n    a.sort()\n    if t == 0:\n        print(n * bisect_left(a, 0))\n    else:\n        (m1, m2) = (max(0, min(n, a[i] // t + 1)) for i in (0, -1))\n        if m1 > m2:\n            (m1, m2) = (m2, m1)\n        ans = sum((bisect_left(a, t * i) for i in range(m1, m2)))\n        ans += len(s) * (n - m2 if t > 0 else m1)\n        print(ans)", "from math import *\nfor i in range(int(input())):\n    (s, n) = list(map(str, input().split()))\n    k = int(n)\n    tem = []\n    tum = []\n    (a, count) = (0, 0)\n    for i in s:\n        if i == 'a':\n            a += 1\n            tem.append(1)\n        else:\n            a -= 1\n            tem.append(-1)\n        tum.append(a)\n        if a >= 1:\n            count += 1\n    ma = max(tum)\n    mi = min(tum)\n    if a == 0:\n        ans = count * k\n    elif a > 0:\n        if mi > 0:\n            ans = count * k\n        else:\n            cd = a\n            for j in range(len(s), k * len(s)):\n                if j % len(s) == 0:\n                    mi = mi + cd\n                a = a + tem[j % len(s)]\n                if a > 0:\n                    count += 1\n                if mi > 0:\n                    break\n            if k != 1:\n                ans = count + k * len(s) - j - 1\n            else:\n                ans = count\n    elif ma < 1:\n        ans = count\n    else:\n        cd = a\n        for j in range(len(s), k * len(s)):\n            if j % len(s) == 0:\n                ma = ma + cd\n            a = a + tem[j % len(s)]\n            if a > 0:\n                count += 1\n            if ma <= 0:\n                break\n        ans = count\n    print(ans)", "from math import *\nfor i in range(int(input())):\n    (s, n) = list(map(str, input().split()))\n    k = int(n)\n    tem = []\n    tum = []\n    (a, count) = (0, 0)\n    for i in s:\n        if i == 'a':\n            a += 1\n            tem.append(1)\n        else:\n            a -= 1\n            tem.append(-1)\n        tum.append(a)\n        if a >= 1:\n            count += 1\n    ma = max(tum)\n    mi = min(tum)\n    if a == 0:\n        ans = count * k\n    elif a > 0:\n        if mi > 0:\n            ans = count * k\n        else:\n            cd = a\n            for j in range(len(s), k * len(s)):\n                if j % len(s) == 0:\n                    mi = mi + cd\n                a = a + tem[j % len(s)]\n                if a > 0:\n                    count += 1\n                if mi > 0:\n                    break\n            if k != 1:\n                ans = count + k * len(s) - j - 1\n            else:\n                ans = count\n    elif ma < 1:\n        ans = count\n    else:\n        cd = a\n        for j in range(len(s), k * len(s)):\n            if j % len(s) == 0:\n                ma = ma + cd\n            a = a + tem[j % len(s)]\n            if a > 0:\n                count += 1\n            if ma <= 0:\n                break\n        ans = count\n    print(ans)", "from itertools import accumulate\nfrom bisect import bisect_left\nt = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    a = list(accumulate(((c == 'b') - (c == 'a') for c in s)))\n    t = -a[-1]\n    a.sort()\n    if t == 0:\n        print(n * bisect_left(a, 0))\n    else:\n        m = max(0, min(n, a[-1 if t > 0 else 0] // t + 1))\n        ans = sum((bisect_left(a, t * i) for i in range(m)))\n        if t > 0:\n            ans += len(s) * (n - m)\n        print(ans)", "from itertools import accumulate\nfrom bisect import bisect_left\nt = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    a = list(accumulate(((c == 'b') - (c == 'a') for c in s)))\n    t = -a[-1]\n    a.sort()\n    if t == 0:\n        print(n * bisect_left(a, 0))\n    else:\n        m = min(n, len(s) // abs(t))\n        ans = sum((bisect_left(a, t * i) for i in range(m)))\n        if t > 0:\n            ans += len(s) * (n - m)\n        print(ans)", "prt = int(input())\nfor i in range(0, prt):\n    (s, n) = map(str, input().strip().split(' '))\n    mi = int(n)\n    oi = mi\n    p = len(s)\n    j = s\n    k = [0]\n    (c, x, y, w, v, z) = (0, 0, 0, 0, 0, 0)\n    while v != 1:\n        for i in range(z, len(s)):\n            t = s[i]\n            if t == 'a':\n                x = x + 1\n            else:\n                y = y + 1\n            if x > y:\n                c = c + 1\n            p = p - 1\n            if p == 0:\n                if c == k[len(k) - 1]:\n                    v = 1\n                    break\n                k.append(c)\n                w = w + 1\n                c = 0\n                p = len(j)\n        mi = mi - 1\n        if mi != 0:\n            z = len(s)\n            s = s + j\n        else:\n            v = 1\n    oi = oi - w\n    f = c * oi + sum(k)\n    print(f)", "T = int(input())\nfor i in range(T):\n    arr = []\n    (arr, N) = input().split()\n    arr = list(arr)\n    N = int(N)\n    countA = 0\n    countB = 0\n    count = 0\n    length = len(arr)\n    if N <= 3:\n        flag = 0\n        for j in range(N):\n            for k in range(length):\n                if arr[k] == 'a':\n                    countA += 1\n                else:\n                    countB += 1\n                if countA > countB:\n                    count += 1\n        print(count)\n    else:\n        flag = 0\n        countT = 0\n        for j in range(N):\n            c = 0\n            for k in range(length):\n                if arr[k] == 'a':\n                    countA += 1\n                else:\n                    countB += 1\n                if countA > countB:\n                    count += 1\n                    c += 1\n            if countT == c:\n                print(count + c * (N - j - 1))\n                flag = 1\n                break\n            countT = c\n        if flag == 0:\n            print(count)", "def func(string, n):\n    lensum = 0\n    a = 0\n    b = 0\n    aup = []\n    adn = []\n    arr = [0] * len(string)\n    cp = 0\n    count = 0\n    for i in range(0, len(string)):\n        if string[i] == 'a':\n            lensum = lensum + 1\n            a += 1\n        if string[i] == 'b':\n            lensum = lensum - 1\n            b += 1\n        arr[i] = lensum\n    for i in range(0, len(arr)):\n        if arr[i] > 0:\n            cp += 1\n    if a > b:\n        for i in range(0, len(string)):\n            itr = int(1 - arr[i] / lensum)\n            itr = max(itr, 0)\n            while itr > 0:\n                if (itr - 1) * lensum + arr[i] > 0:\n                    itr = itr - 1\n                else:\n                    break\n            aup.append(itr)\n        answer = [max(n - x, 0) for x in aup]\n        for i in range(0, len(string)):\n            if answer[i] > 0:\n                count = count + min(n, answer[i])\n        return count\n    if b > a:\n        for i in range(0, len(string)):\n            itr = int(1 - arr[i] / lensum) - 1\n            itr = max(itr, 0)\n            while itr + 1 <= n:\n                if itr * lensum + arr[i] > 0:\n                    itr = itr + 1\n                else:\n                    break\n            adn.append(max(0, itr))\n        for i in range(0, len(string)):\n            count += min(n, adn[i])\n        return count\n    if b == a:\n        answer = cp * n\n        return answer\nt = int(input())\nfor q in range(0, t):\n    (s, n) = input().split()\n    n = int(n)\n    print(func(s, n))", "for _ in range(int(input())):\n    a = [x for x in input().split()]\n    (co, b, char_a) = (0, [0] * len(a[0]), 0)\n    for i in range(len(a[0])):\n        char_a += 1 if a[0][i] == 'a' else -1\n        b[i] = char_a\n    if char_a > 0:\n        for i in range(len(a[0])):\n            temp = 0\n            while b[i] <= 0 and temp < int(a[1]):\n                b[i] += char_a\n                temp += 1\n            co += int(a[1]) - temp\n    elif char_a < 0:\n        for i in range(len(a[0])):\n            temp = 0\n            while b[i] > 0 and temp < int(a[1]):\n                b[i] += char_a\n                temp += 1\n            co += temp\n    else:\n        for i in range(len(a[0])):\n            if b[i] > 0:\n                co += int(a[1])\n    print(co)", "for i in range(int(input())):\n    s = list(map(str, input().split()))\n    s[1] = float(s[1])\n    length = len(s[0])\n    arr = []\n    a = 0\n    b = 0\n    ans = 0\n    for j in range(length):\n        if s[0][j] == 'a':\n            a = a + 1\n        else:\n            a = a - 1\n        if a > 0:\n            b = b + 1\n        arr.append(a)\n    if arr[length - 1] < 0:\n        for k in range(length):\n            if arr[k] <= 0:\n                ans = ans + 0\n            else:\n                x = -arr[k] / arr[length - 1] + 1\n                if x > s[1]:\n                    ans = ans + s[1]\n                elif x > int(x):\n                    x = int(x) + 1\n                    ans = ans + x - 1\n                else:\n                    ans = ans + x - 1\n    elif arr[length - 1] == 0:\n        ans = b * s[1]\n    else:\n        for k in range(length):\n            if arr[k] > 0:\n                ans = ans + s[1]\n            else:\n                x = (1 - arr[k]) / arr[length - 1] + 1\n                if x > s[1]:\n                    ans = ans + 0\n                elif x > int(x):\n                    x = int(x) + 1\n                    ans = ans + s[1] - x + 1\n                else:\n                    ans = ans + s[1] - x + 1\n    print(int(ans))", "from math import *\nt = int(input().strip())\nfor i in range(t):\n    (s, n) = input().strip().split(' ')\n    n = int(n)\n    l = list(s)\n    c = l.count('a')\n    b = l.count('b')\n    d = c - b\n    l1 = []\n    v = 0\n    sum = 0\n    k = 0\n    for i in s:\n        if i == 'a':\n            sum += 1\n        else:\n            sum -= 1\n        if sum > 0:\n            v += 1\n        l1.append(sum)\n    if c == b:\n        print(v * n)\n    elif b > c:\n        if v > 0:\n            for i in l1:\n                if i > 0:\n                    j = i + (n - 1) * (c - b)\n                    if j < 1:\n                        k += ceil(i / (b - c))\n                    else:\n                        k += int((i - j) / (b - c)) + 1\n            print(k)\n        else:\n            print('0')\n    else:\n        for i in range(len(l1)):\n            if l1[i] >= 1:\n                k += n\n            else:\n                l[i] = l1[i] + (n - 1) * d\n                if l[i] >= 1:\n                    k += ceil(l[i] / d)\n        print(k)", "for i in range(int(input())):\n    (x, y) = input().split()\n    d = {}\n    a = 0\n    b = 0\n    l = 0\n    for i in range(len(x)):\n        if x[i] == 'a':\n            a += 1\n        else:\n            b += 1\n        if a - b > 0:\n            l += 1\n        if b - a in d:\n            d[b - a] += 1\n        else:\n            d[b - a] = 1\n    v = list(d.items())\n    max = 0\n    min = 0\n    sum = l\n    m = l\n    g = 0\n    q = 0\n    n = a - b\n    for i in range(len(v)):\n        if v[i][0] > max:\n            max = v[i][0]\n        if min == 0:\n            min = v[i][0]\n        if min != 0 and v[i][0] < min:\n            min = v[i][0]\n    if a - b != 0:\n        z = max / n\n        h = min / n\n    if l == 0:\n        print(0)\n    elif n == 0:\n        print(l * int(y))\n    elif n > 0:\n        for i in range(1, int(y)):\n            if i <= z:\n                for j in range(len(v)):\n                    if v[j][0] < i * n and v[j][0] >= (i - 1) * n:\n                        m += v[j][1]\n            elif i > z:\n                g = (int(y) - i) * len(x)\n                sum += g\n                break\n            sum += m\n        print(sum)\n    elif n < 0:\n        for i in range(1, int(y)):\n            if i <= h:\n                for j in range(len(v)):\n                    if v[j][0] >= i * n and v[j][0] < (i - 1) * n:\n                        m -= v[j][1]\n            elif i > h:\n                break\n            sum += m\n        print(sum)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (s, n) = input().split()\n    n = int(n)\n    le = len(s)\n    a = []\n    b = []\n    x = 0\n    y = 0\n    d = 0\n    c = 0\n    ans = 0\n    for i in range(le):\n        if s[i] == 'a':\n            x = x + 1\n        elif s[i] == 'b':\n            y = y + 1\n        if y - x >= 0:\n            a.append(y - x)\n        else:\n            b.append(x - y)\n    d1 = x - y\n    d2 = y - x\n    if n == 1:\n        print(le - len(a))\n    elif d1 == 0:\n        print(n * (le - len(a)))\n    elif d1 < 0:\n        for i in range(len(b)):\n            c = int(b[i] / d2)\n            if c * d2 == b[i]:\n                c = c - 1\n            if c < n:\n                d = d + c\n            else:\n                d = d + n - 1\n        print(d + len(b))\n    else:\n        for i in range(len(a)):\n            c = int(a[i] / d1)\n            if c < n:\n                ans = ans + c\n            else:\n                ans = ans + n - 1\n        print(n * le - ans - len(a))", "from itertools import accumulate\nfrom bisect import bisect_left\nt = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    a = list(accumulate(((c == 'b') - (c == 'a') for c in s)))\n    t = -a[-1]\n    a.sort()\n    if t == 0:\n        print(n * bisect_left(a, 0))\n    else:\n        m = min(n, len(s))\n        ans = sum((bisect_left(a, t * i) for i in range(m)))\n        if t > 0:\n            ans += len(s) * (n - m)\n        print(ans)", "from itertools import accumulate\nfrom bisect import bisect_left\nt = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    a = list(accumulate(((c == 'b') - (c == 'a') for c in s)))\n    t = -a[-1]\n    a.sort()\n    if t == 0:\n        print(n * bisect_left(a, 0))\n    else:\n        m = min(n, len(s))\n        ans = sum((bisect_left(a, t * i) for i in range(m)))\n        if t > 0 and m < n:\n            ans += len(s) * (n - m)\n        print(ans)", "from itertools import accumulate\nfrom bisect import bisect_left\nt = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    a = list(accumulate(((c == 'b') - (c == 'a') for c in s)))\n    t = -a[-1]\n    a.sort()\n    if t == 0:\n        print(n * bisect_left(a, 0))\n    else:\n        m = min(n, len(s) + 1)\n        ans = sum((bisect_left(a, t * i) for i in range(m)))\n        if t > 0 and m < n:\n            ans += len(s) * (n - m)\n        print(ans)", "from math import ceil\nT = int(input())\nfor test_case in range(T):\n    (s, n) = input().split()\n    n = int(n)\n    dn = dict()\n    dp = dict()\n    offset = 0\n    ans = 0\n    for i in s:\n        if i == 'a':\n            offset += 1\n        else:\n            offset -= 1\n        if offset > 0:\n            ans += 1\n            try:\n                dp[offset] += 1\n            except KeyError:\n                dp[offset] = 1\n        else:\n            try:\n                dn[offset] += 1\n            except KeyError:\n                dn[offset] = 1\n    ans *= n\n    if offset > 0:\n        for i in dn:\n            n1 = n - 1 - int(abs(i) / offset)\n            if n1 > 0:\n                ans += n1 * dn[i]\n    elif offset < 0:\n        for i in dp:\n            n1 = n - ceil(i / abs(offset))\n            if n1 > 0:\n                ans -= n1 * dp[i]\n    print(ans)", "t = int(input())\nfor i in range(0, t):\n    (s, n) = map(str, input().strip().split(' '))\n    m = int(n)\n    o = m\n    p = len(s)\n    j = s\n    k = [0]\n    (c, x, y, w, v, z) = (0, 0, 0, 0, 0, 0)\n    while v != 1:\n        for i in range(z, len(s)):\n            t = s[i]\n            if t == 'a':\n                x = x + 1\n            else:\n                y = y + 1\n            if x > y:\n                c = c + 1\n            p = p - 1\n            if p == 0:\n                if c == k[len(k) - 1]:\n                    v = 1\n                    break\n                k.append(c)\n                w = w + 1\n                c = 0\n                p = len(j)\n        m = m - 1\n        if m != 0:\n            z = len(s)\n            s = s + j\n        else:\n            v = 1\n    o = o - w\n    f = c * o + sum(k)\n    print(f)", "t = int(input())\nfor z in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    los = len(s)\n    AuxArr = [0] * los\n    DiffArr = [0] * los\n    AuxArr[0] = 1\n    if s[0] == 'b':\n        AuxArr[0] = -1\n    for i in range(1, los):\n        if s[i] == 'a':\n            AuxArr[i] = AuxArr[i - 1] + 1\n        else:\n            AuxArr[i] = AuxArr[i - 1] - 1\n    cArr = [0] * los\n    director = AuxArr[-1]\n    ans = 0\n    if director == 0:\n        for e in AuxArr:\n            if e > 0:\n                ans += 1\n        ans = ans * n\n    elif director > 0:\n        for i in range(los):\n            if AuxArr[i] <= 0:\n                cArr[i] = abs(AuxArr[i]) // director + 1\n        for i in range(los):\n            ans += max(0, n - cArr[i])\n    else:\n        director = -director\n        for i in range(los):\n            if AuxArr[i] > 0:\n                cArr[i] = (AuxArr[i] - 1) // director + 1\n        for i in range(los):\n            ans += min(n, cArr[i])\n    print(ans)", "t = int(input())\nans = []\nwhile t > 0:\n    sn = input().split()\n    s = sn[0]\n    n = int(sn[1])\n    count_a = 0\n    count_b = 0\n    count = 0\n    pattern = 0\n    pattern_count = 0\n    iteration = 0\n    while True and iteration < n:\n        iteration = iteration + 1\n        single_count = 0\n        for x in s:\n            if x == 'a':\n                count_a = count_a + 1\n            elif x == 'b':\n                count_b = count_b + 1\n            if count_a > count_b:\n                count = count + 1\n                single_count = single_count + 1\n        if pattern == single_count:\n            count = count + (n - iteration) * single_count\n            break\n        else:\n            pattern = single_count\n    ans.append(count)\n    t = t - 1\nfor x in ans:\n    print(x)", "t = int(input())\nwhile t:\n    s = input()\n    given_string = s.split()[0]\n    n = int(s.split()[1])\n    la = 0\n    lb = 0\n    c1 = 0\n    for i in given_string:\n        if i == 'a':\n            la = la + 1\n        else:\n            lb = lb + 1\n        if la > lb:\n            c1 += 1\n    c2 = c1\n    for i in given_string:\n        if i == 'a':\n            la = la + 1\n        else:\n            lb = lb + 1\n        if la > lb:\n            c2 = c2 + 1\n    diff = c2 - c1\n    pre = c2\n    n1 = 2\n    if n > n1:\n        while n1 <= n:\n            n1 += 1\n            for i in given_string:\n                if i == 'a':\n                    la = la + 1\n                else:\n                    lb = lb + 1\n                if la > lb:\n                    c2 = c2 + 1\n            if c2 - pre == diff:\n                break\n            diff = c2 - pre\n            pre = c2\n        print(c2 + (n - n1) * diff)\n    elif n == 1:\n        print(c1)\n    else:\n        print(c2)\n    t = t - 1", "for t in range(int(input())):\n    (s, n) = input().split()\n    n = int(n)\n    a_count = s.count('a')\n    b_count = s.count('b')\n    a_temp = 0\n    b_temp = 0\n    count = 0\n    if a_count == b_count:\n        for i in s:\n            if i == 'a':\n                a_temp += 1\n            else:\n                b_temp += 1\n            if a_temp > b_temp:\n                count += 1\n        count = count * n\n        print(count)\n    elif a_count > b_count:\n        con = 0\n        count_temp = 0\n        l = []\n        while a_temp - b_temp <= a_count:\n            con += 1\n            for i in s:\n                if i == 'a':\n                    a_temp += 1\n                else:\n                    b_temp += 1\n                if a_temp > b_temp:\n                    count_temp += 1\n            l.append(count_temp)\n            if n == con:\n                break\n        if len(l) == 1:\n            print(count_temp)\n        else:\n            count = count_temp + (l[-1] - l[-2]) * (n - con)\n            print(count)\n    else:\n        con = 0\n        count_temp = 0\n        l = []\n        while b_temp - a_temp <= b_count:\n            con += 1\n            for i in s:\n                if i == 'a':\n                    a_temp += 1\n                else:\n                    b_temp += 1\n                if a_temp > b_temp:\n                    count_temp += 1\n            l.append(count_temp)\n            if n == con:\n                break\n        count = count_temp\n        print(count)", "t = int(input())\nwhile t:\n    t -= 1\n    (s, n) = input().split()\n    n = int(n)\n    acount = s.count('a')\n    bcount = s.count('b')\n    total = 0\n    c = 0\n    if acount == bcount:\n        for x in s:\n            if x == 'a':\n                c += 1\n            else:\n                c -= 1\n            if c > 0:\n                total += 1\n        print(total * n)\n    elif acount > bcount:\n        scount = 1\n        while c <= bcount and scount <= n:\n            scount += 1\n            for x in s:\n                if x == 'a':\n                    c += 1\n                else:\n                    c -= 1\n                if c > 0:\n                    total += 1\n        total += (n - scount + 1) * len(s)\n        print(total)\n    else:\n        scount = 1\n        while c + acount >= 0 and scount <= n:\n            scount += 1\n            for x in s:\n                if x == 'a':\n                    c += 1\n                else:\n                    c -= 1\n                if c > 0:\n                    total += 1\n        print(total)", "t = int(input())\nfor _ in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    k = len(s)\n    count = locale_count = a = b = 0\n    m = 0\n    for j in range(n):\n        locale_count = 0\n        for i in s:\n            if i == 'a':\n                a += 1\n            else:\n                b += 1\n            if a > b:\n                locale_count += 1\n        count += locale_count\n        if a == b:\n            count += (n - 1) * locale_count\n            break\n        if locale_count == k or locale_count == 0:\n            count += locale_count * (n - j - 1)\n            break\n    print(count)", "for i in range(int(input())):\n    (s, n) = input().split()\n    n = int(n)\n    a = []\n    if s[0] == 'a':\n        a.append(1)\n    else:\n        a.append(-1)\n    for i in range(1, len(s)):\n        if s[i] == 'a':\n            a.append(1 + a[i - 1])\n        else:\n            a.append(-1 + a[i - 1])\n    l = len(a)\n    y = a[l - 1]\n    if y == 0:\n        res = len([x for x in a if x > 0])\n        print(res * n)\n    elif y < 0:\n        res = len([x for x in a if x > 0])\n        s1 = list(filter(lambda x: x + y > 0, a))\n        c = 2\n        m = n - 1\n        while len(s1) > 0 and m > 0:\n            res += len(s1)\n            s1 = list(filter(lambda x: x + c * y > 0, s1))\n            c += 1\n            m -= 1\n        print(res)\n    elif y > 0:\n        res = len([x for x in a if x <= 0])\n        s1 = list(filter(lambda x: x + y <= 0, a))\n        c = 2\n        m = n - 1\n        while len(s1) > 0 and m > 0:\n            res += len(s1)\n            s1 = list(filter(lambda x: x + c * y <= 0, s1))\n            c += 1\n            m -= 1\n        print(n * len(s) - res)", "for _ in range(int(input())):\n    (s, n) = input().split()\n    l = len(s)\n    A = s.count('a')\n    B = l - A\n    ans = 0\n    n = int(n)\n    if A == B:\n        a = 0\n        b = 0\n        for i in range(l):\n            if s[i] == 'a':\n                a += 1\n                if a > b:\n                    ans += 1\n            else:\n                b += 1\n                if a > b:\n                    ans += 1\n        ans = ans * n\n    else:\n        a = 0\n        b = 0\n        ans = 0\n        for i in range(n):\n            for j in range(l):\n                if s[j] == 'a':\n                    a += 1\n                    if a > b:\n                        ans += 1\n                else:\n                    b += 1\n                    if a > b:\n                        ans += 1\n            if a - b > B:\n                ans += (n - i - 1) * l\n                break\n            elif b - a > A:\n                break\n    print(ans)", "t = int(input())\nfor i in range(t):\n    temp = input().strip().split()\n    s = temp[0]\n    l = len(s)\n    n = int(temp[1])\n    freq = {'a': 0, 'b': 0}\n    count = 0\n    i = 0\n    constancy_check = [0]\n    counts_tracker = [0]\n    index = -1\n    cycles = 0\n    while index < l:\n        if cycles == n:\n            break\n        index = index + 1\n        c = s[index]\n        freq[c] += 1\n        if freq['a'] > freq['b']:\n            count = count + 1\n        if i == l - 1:\n            i = 0\n            cycles = cycles + 1\n            index = -1\n            constancy_check.append(count - counts_tracker[-1])\n            counts_tracker.append(count)\n            if constancy_check[-1] == constancy_check[-2]:\n                break\n        else:\n            i = i + 1\n    count = count + (n - len(constancy_check) + 1) * constancy_check[-1]\n    print(count)", "import math\nt = int(input())\nfor i in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    inc = 0\n    lol = []\n    ans = 0\n    for j in range(len(s)):\n        if s[j] == 'a':\n            inc += 1\n        else:\n            inc -= 1\n        lol.append(inc)\n    if inc == 0:\n        for j in range(len(s)):\n            if lol[j] > 0:\n                ans += n\n    elif inc > 0:\n        for j in range(len(s)):\n            if lol[j] > 0:\n                ans += n\n            elif lol[j] == 0:\n                ans += n - 1\n            else:\n                wasted = -lol[j] // inc + 1\n                if wasted < n:\n                    ans += n - wasted\n    else:\n        for j in range(len(s)):\n            if lol[j] > 0:\n                safe = math.ceil(lol[j] / -inc)\n                if safe <= n:\n                    ans += safe\n                else:\n                    ans += n\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (s, n) = input().split()\n    n = int(n)\n    x = 0\n    w = []\n    for i in range(0, len(s)):\n        if s[i] == 'a':\n            x += 1\n        else:\n            x -= 1\n        w.append(x)\n    ans = 0\n    if x == 0:\n        for i in range(0, len(s)):\n            if w[i] > 0:\n                ans += n\n    elif x < 0:\n        for i in range(0, len(s)):\n            temp = 0\n            if w[i] > 0:\n                temp = int(w[i] / -x)\n                if w[i] % -x != 0:\n                    temp += 1\n            ans += min(temp, n)\n    else:\n        for i in range(0, len(s)):\n            temp = 0\n            if w[i] <= 0:\n                temp = int(-w[i] / x) + 1\n            ans += max(n - temp, 0)\n    print(ans)\n    t -= 1", "import math\nT = int(input())\nfor t in range(T):\n    (s1, s2) = list(input().split())\n    s = s1\n    n = int(s2)\n    c = 0\n    cc = 0\n    x = len(s)\n    freq = [[0, 0] for i in range(len(s))]\n    if s[0] == 'a':\n        freq[0][0] = 1\n    if s[0] == 'b':\n        freq[0][1] = 1\n    for i in range(1, len(s)):\n        if s[i] == 'a':\n            freq[i][0] = 1\n        else:\n            freq[i][1] = 1\n        freq[i][0] += freq[i - 1][0]\n        freq[i][1] += freq[i - 1][1]\n    x = freq[len(s) - 1][0] - freq[len(s) - 1][1]\n    for i in range(0, len(s)):\n        d = x\n        a = freq[i][0] - freq[i][1]\n        if d > 0:\n            if a > 0:\n                c += n\n            elif a < 0:\n                h = 1 + math.ceil(abs(a) / d)\n                if h <= n:\n                    if a + (h - 1) * d == 0:\n                        c += n - h\n                    else:\n                        c += n - (h - 1)\n            elif a == 0:\n                c += n - 1\n        elif d < 0:\n            if a > 0:\n                h = 1 + math.ceil(a / abs(d))\n                if h <= n:\n                    c += h - 1\n                else:\n                    c += n\n        elif d == 0:\n            if a > 0:\n                c += n\n    print(c)", "def function(s, n):\n    prev = 0\n    a = b = c = f = 0\n    while n != 0:\n        current = 0\n        for i in range(len(s)):\n            if s[i] == 'a':\n                a += 1\n            else:\n                b += 1\n            if a > b:\n                current += 1\n        if current == prev:\n            f = 1\n            break\n        else:\n            prev = current\n            c += current\n        n -= 1\n    if f:\n        return c + current * n\n    else:\n        return c\nfor _ in range(int(input())):\n    (s, n) = map(str, input().split())\n    n = int(n)\n    result = function(s, n)\n    print(result)", "t = int(input())\nfor i in range(t):\n    (s, n) = list(input().split())\n    n = int(n)\n    count = 0\n    ano = 0\n    bno = 0\n    for j in s:\n        if j == 'a':\n            ano = ano + 1\n        if j == 'b':\n            bno = bno + 1\n    if ano == bno:\n        tempa = 0\n        tempb = 0\n        for y in s:\n            if y == 'a':\n                tempa = tempa + 1\n            elif y == 'b':\n                tempb = tempb + 1\n            if tempa > tempb:\n                count = count + 1\n        print(count * n, end='\\n')\n    elif ano > bno:\n        temp1 = ano - bno\n        temp1 = 500 // temp1\n        temp2 = min(temp1, n)\n        tempa = 0\n        tempb = 0\n        for x in range(temp2):\n            for y in s:\n                if y == 'a':\n                    tempa = tempa + 1\n                elif y == 'b':\n                    tempb = tempb + 1\n                if tempa > tempb:\n                    count = count + 1\n        if temp2 < n:\n            print(count + (n - temp2) * len(s), end='\\n')\n        else:\n            print(count, end='\\n')\n    else:\n        temp1 = bno - ano\n        temp1 = 500 // temp1\n        temp2 = min(temp1, n)\n        tempa = 0\n        tempb = 0\n        for x in range(temp2):\n            for y in s:\n                if y == 'a':\n                    tempa = tempa + 1\n                elif y == 'b':\n                    tempb = tempb + 1\n                if tempa > tempb:\n                    count = count + 1\n        print(count, end='\\n')", "test_cases = int(input())\nfor i in range(test_cases):\n    (string, n) = input().split(' ')\n    n = int(n)\n    temp = 0\n    length = len(string)\n    valid_prefixes = 0\n    a_bef_b = []\n    for s in string:\n        if s == 'a':\n            temp += 1\n            a_bef_b.append(temp)\n        else:\n            temp -= 1\n            a_bef_b.append(temp)\n    act_diff = a_bef_b[-1]\n    min_element = min(a_bef_b)\n    max_element = max(a_bef_b)\n    if act_diff > 0:\n        times_loop = int(abs(min_element / act_diff)) + 1\n        if times_loop <= n:\n            for num in a_bef_b:\n                if num <= 0:\n                    valid_prefixes += times_loop - int(abs(num / act_diff)) - 1\n                else:\n                    valid_prefixes += times_loop\n            valid_prefixes += (n - times_loop) * length\n        else:\n            for num in a_bef_b:\n                if num <= 0:\n                    val = int(abs(num / act_diff))\n                    if n > val + 1:\n                        valid_prefixes += n - val - 1\n                else:\n                    valid_prefixes += n\n    elif act_diff == 0:\n        times_loop = 1\n        for num in a_bef_b:\n            if num > 0:\n                valid_prefixes += times_loop\n        temp = valid_prefixes\n        valid_prefixes += (n - times_loop) * temp\n    else:\n        times_loop = int(abs(max_element / act_diff)) + 1\n        if times_loop < n:\n            for num in a_bef_b:\n                if num > 0:\n                    if num % abs(act_diff) == 0:\n                        valid_prefixes += int(abs(num / act_diff))\n                    else:\n                        valid_prefixes += int(abs(num / act_diff)) + 1\n        else:\n            for num in a_bef_b:\n                if num > 0:\n                    val = int(abs(num / act_diff))\n                    if num % abs(act_diff) == 0:\n                        if val > n:\n                            valid_prefixes += n\n                        else:\n                            valid_prefixes += val\n                    elif val >= n:\n                        valid_prefixes += n\n                    else:\n                        valid_prefixes += val + 1\n    print(valid_prefixes)", "import numpy as np\nT = int(input())\nfor _ in range(T):\n    (s, n) = input().split()\n    n = int(n)\n    ms = len(s)\n    vals = [0 for i in range(ms)]\n    c = 0\n    for i in range(ms):\n        if s[i] == 'a':\n            c += 1\n        else:\n            c -= 1\n        vals[i] = c\n    vals = np.array(vals)\n    dv = vals[-1]\n    if dv == 0:\n        count = (vals > 0).sum() * n\n    elif dv > 0:\n        count = 0\n        for i in range(n):\n            dp = (vals > 0).sum()\n            count += dp\n            if dp == ms:\n                break\n            vals += dv\n        if i < n:\n            count += (n - i - 1) * ms\n    else:\n        count = 0\n        for i in range(n):\n            dp = (vals > 0).sum()\n            count += dp\n            if dp == 0:\n                break\n            vals += dv\n    print(count)", "t = int(input())\nwhile t:\n    t -= 1\n    (s, n) = input().split()\n    n = int(n)\n    x = int(s.count('a') - s.count('b'))\n    noofbees = s.count('b')\n    noofas = s.count('a')\n    if x == 0:\n        abcount = 0\n        count = 0\n        for c in s:\n            if c == 'a':\n                abcount += 1\n            else:\n                abcount -= 1\n            if abcount > 0:\n                count += 1\n        print(count * n)\n    elif x > 0:\n        count = 0\n        abcount = 0\n        strcount = 1\n        extra = 0\n        while abcount <= noofbees and strcount <= n:\n            for c in s:\n                if c == 'a':\n                    abcount += 1\n                else:\n                    abcount -= 1\n                if abcount > 0:\n                    count += 1\n            strcount += 1\n        if strcount <= n:\n            extra = (n - strcount + 1) * len(s)\n        print(count + extra)\n    else:\n        count = 0\n        abcount = 0\n        strcount = 1\n        while abcount + noofas >= 0 and strcount <= n:\n            for c in s:\n                if c == 'a':\n                    abcount += 1\n                else:\n                    abcount -= 1\n                if abcount > 0:\n                    count += 1\n            strcount += 1\n        print(count)", "for i in range(int(input())):\n    (s, n) = map(str, input().split())\n    n = int(n)\n    (k, na, nb, c, m, t) = (0, 0, 0, 0, 0, 1)\n    for i in range(len(s)):\n        if s[i] == 'a':\n            na += 1\n        else:\n            nb += 1\n        if na > nb:\n            k += 1\n    c += k\n    if n == 1:\n        print(c)\n    else:\n        while k != m and t < n:\n            k = m\n            m = 0\n            for i in range(len(s)):\n                if s[i] == 'a':\n                    na += 1\n                else:\n                    nb += 1\n                if na > nb:\n                    m += 1\n            c += m\n            t += 1\n        c += (n - t) * m\n        print(c)", "for i in range(int(input())):\n    (s, n) = map(str, input().split())\n    n = int(n)\n    (k, na, nb, c, m, t) = (0, 0, 0, 0, 0, 1)\n    for i in range(len(s)):\n        if s[i] == 'a':\n            na += 1\n        else:\n            nb += 1\n        if na > nb:\n            k += 1\n    c += k\n    if n == 1:\n        print(c)\n    else:\n        while k != m and t < n:\n            k = m\n            m = 0\n            for i in range(len(s)):\n                if s[i] == 'a':\n                    na += 1\n                else:\n                    nb += 1\n                if na > nb:\n                    m += 1\n            c += m\n            t += 1\n        c += (n - t) * m\n        print(c)", "for _ in range(int(input())):\n    (data, n) = input().split()\n    n = int(n)\n    data = list(data)\n    a_count = [0] * (len(data) + 1)\n    b_count = [0] * (len(data) + 1)\n    diff = [0] * (len(data) + 1)\n    ans = 0\n    for i in range(len(data)):\n        if data[i] == 'a':\n            a_count[i + 1] = a_count[i] + 1\n        else:\n            a_count[i + 1] = a_count[i]\n        if data[i] == 'b':\n            b_count[i + 1] = b_count[i] + 1\n        else:\n            b_count[i + 1] = b_count[i]\n        diff[i + 1] = a_count[i + 1] - b_count[i + 1]\n        if diff[i + 1] > 0:\n            ans += 1\n    if diff[-1] == 0:\n        print(ans * n)\n        continue\n    if diff[-1] < 0:\n        ans_for_1 = 0\n        for x in diff:\n            if x > 0:\n                ans_for_1 += 1\n        n_index = 1\n        temp_ans = ans_for_1\n        main_ans = ans_for_1\n        z = diff[-1]\n        while n_index < n and temp_ans != 0:\n            temp_ans = 0\n            for each in range(1, len(diff)):\n                diff[each] += z\n                if diff[each] > 0:\n                    temp_ans += 1\n            main_ans += temp_ans\n            n_index += 1\n        print(main_ans)\n        continue\n    if diff[-1] > 0:\n        ans_for_1 = 0\n        for x in diff:\n            if x > 0:\n                ans_for_1 += 1\n        n_index = 1\n        temp_ans = ans_for_1\n        main_ans = ans_for_1\n        z = diff[-1]\n        while n_index < n and temp_ans != len(data):\n            temp_ans = 0\n            for each in range(1, len(diff)):\n                diff[each] += z\n                if diff[each] > 0:\n                    temp_ans += 1\n            main_ans += temp_ans\n            n_index += 1\n        if n == n_index:\n            print(main_ans)\n        else:\n            print(main_ans + len(data) * (n - n_index))", "t = int(input())\nfor i in range(t):\n    (s, n) = input().split(' ')\n    n = int(n)\n    length = len(s)\n    a = 0\n    b = 0\n    satisfied = 0\n    notSatisfied = 0\n    for j in range(0, length):\n        if s[j] == 'a':\n            a += 1\n        else:\n            b += 1\n        if a > b:\n            satisfied += 1\n    if a > b:\n        ans = satisfied\n        n -= 1\n        while n != 0 and satisfied != length:\n            n -= 1\n            satisfied = 0\n            notSatisfied = 0\n            for j in range(0, length):\n                if s[j] == 'a':\n                    a += 1\n                else:\n                    b += 1\n                if a > b:\n                    satisfied += 1\n            ans += satisfied\n        ans += n * length\n        print(ans)\n    elif a < b:\n        ans = satisfied\n        n -= 1\n        while n != 0 and satisfied != 0:\n            n -= 1\n            satisfied = 0\n            for j in range(0, length):\n                if s[j] == 'a':\n                    a += 1\n                else:\n                    b += 1\n                if a > b:\n                    satisfied += 1\n            ans += satisfied\n        print(ans)\n    else:\n        ans = satisfied * n\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (s, n) = input().split(' ')\n    n = int(n)\n    length = len(s)\n    a = 0\n    b = 0\n    satisfied = 0\n    notSatisfied = 0\n    for j in range(0, length):\n        if s[j] == 'a':\n            a += 1\n        else:\n            b += 1\n        if a > b:\n            satisfied += 1\n    if a > b:\n        ans = satisfied\n        n -= 1\n        while n != 0 and satisfied != length:\n            n -= 1\n            satisfied = 0\n            notSatisfied = 0\n            for j in range(0, length):\n                if s[j] == 'a':\n                    a += 1\n                else:\n                    b += 1\n                if a > b:\n                    satisfied += 1\n            ans += satisfied\n        ans += n * length\n        print(ans)\n    elif a < b:\n        ans = satisfied\n        n -= 1\n        while n != 0 and satisfied != 0:\n            n -= 1\n            satisfied = 0\n            for j in range(0, length):\n                if s[j] == 'a':\n                    a += 1\n                else:\n                    b += 1\n                if a > b:\n                    satisfied += 1\n            ans += satisfied\n        print(ans)\n    else:\n        ans = satisfied * n\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (s, n) = input().split(' ')\n    n = int(n)\n    length = len(s)\n    a = 0\n    b = 0\n    satisfied = 0\n    notSatisfied = 0\n    for j in range(0, length):\n        if s[j] == 'a':\n            a += 1\n        else:\n            b += 1\n        if a > b:\n            satisfied += 1\n    if a > b:\n        ans = satisfied\n        n -= 1\n        while n != 0 and satisfied != length:\n            n -= 1\n            satisfied = 0\n            notSatisfied = 0\n            for j in range(0, length):\n                if s[j] == 'a':\n                    a += 1\n                else:\n                    b += 1\n                if a > b:\n                    satisfied += 1\n            ans += satisfied\n        ans += n * length\n        print(ans)\n    elif a < b:\n        ans = satisfied\n        n -= 1\n        while n != 0 and satisfied != 0:\n            n -= 1\n            satisfied = 0\n            for j in range(0, length):\n                if s[j] == 'a':\n                    a += 1\n                else:\n                    b += 1\n                if a > b:\n                    satisfied += 1\n            ans += satisfied\n        print(ans)\n    else:\n        ans = satisfied * n\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (s, n) = input().split(' ')\n    n = int(n)\n    length = len(s)\n    a = 0\n    b = 0\n    satisfied = 0\n    notSatisfied = 0\n    for j in range(0, length):\n        if s[j] == 'a':\n            a += 1\n        else:\n            b += 1\n        if a > b:\n            satisfied += 1\n    if a > b:\n        ans = satisfied\n        n -= 1\n        while n != 0 and satisfied != length:\n            n -= 1\n            satisfied = 0\n            notSatisfied = 0\n            for j in range(0, length):\n                if s[j] == 'a':\n                    a += 1\n                else:\n                    b += 1\n                if a > b:\n                    satisfied += 1\n            ans += satisfied\n        ans += n * length\n        print(ans)\n    elif a < b:\n        ans = satisfied\n        n -= 1\n        while n != 0 and satisfied != 0:\n            n -= 1\n            satisfied = 0\n            for j in range(0, length):\n                if s[j] == 'a':\n                    a += 1\n                else:\n                    b += 1\n                if a > b:\n                    satisfied += 1\n            ans += satisfied\n        print(ans)\n    else:\n        ans = satisfied * n\n        print(ans)", "T = int(input())\nfor t in range(0, T):\n    st = input()\n    (s, e) = st.split()\n    n = int(e)\n    l1 = len(s)\n    n = int(e)\n    d1 = 0\n    d2 = 0\n    d3 = 0\n    a = [0] * l1\n    for j in range(0, l1):\n        if s[j] == 'a':\n            a[j] = 1\n            d1 += 1\n        else:\n            a[j] = -1\n            d2 += 1\n    for j in range(1, l1):\n        a[j] = a[j] + a[j - 1]\n        if a[j] > 0:\n            d3 += 1\n    if a[0] > 0:\n        d3 += 1\n    count = 0\n    if d2 == d1:\n        count = d3 * n\n        print(count)\n    elif d1 < d2:\n        for k in range(0, l1):\n            if a[k] > 0:\n                if a[k] < n:\n                    if a[k] % (d2 - d1) == 0:\n                        count += a[k] // (d2 - d1)\n                    else:\n                        count += a[k] // (d2 - d1) + 1\n                elif a[k] % (d2 - d1) == 0:\n                    if a[k] // (d2 - d1) < n:\n                        count += a[k] // (d2 - d1)\n                    else:\n                        count += n\n                elif a[k] // (d2 - d1) + 1 > n:\n                    count += n\n                else:\n                    count += a[k] // (d2 - d1) + 1\n        print(int(count))\n    else:\n        c1 = 0\n        count = n * l1\n        for k in range(0, l1):\n            if a[k] < 1:\n                c1 = 1 - a[k]\n                if c1 < n:\n                    if c1 % (d1 - d2) == 0:\n                        count -= c1 // (d1 - d2)\n                    else:\n                        count -= c1 // (d1 - d2) + 1\n                elif c1 % (d1 - d2) == 0:\n                    if c1 // (d1 - d2) < n:\n                        count -= c1 // (d1 - d2)\n                    else:\n                        count -= n\n                elif c1 // (d1 - d2) < n:\n                    count -= c1 // (d1 - d2) + 1\n                else:\n                    count -= n\n        print(int(count))", "T = int(input())\nfor _ in range(T):\n    (s, r) = input().split()\n    r = int(r)\n    total = 0\n    count_prev = 0\n    count_curr = 0\n    count_a = 0\n    count_b = 0\n    count = 0\n    for i in range(len(s)):\n        if s[i] == 'a':\n            count_a += 1\n        else:\n            count_b += 1\n        if count_a > count_b:\n            count += 1\n    if count == 0:\n        print(0)\n    else:\n        count_prev = count\n        total = count\n        n = 1\n        while n != r:\n            count = 0\n            for i in range(len(s)):\n                if s[i] == 'a':\n                    count_a += 1\n                else:\n                    count_b += 1\n                if count_a > count_b:\n                    count += 1\n            count_curr = count\n            total += count_curr\n            n += 1\n            if count_curr == count_prev:\n                break\n            count_prev = count_curr\n        total += (r - n) * count_prev\n        print(total)", "from math import ceil\nfor _ in range(int(input())):\n    (s, n) = input().split()\n    n = int(n)\n    dp = [1 if c == 'a' else -1 for c in s]\n    for i in range(1, len(s)):\n        dp[i] += dp[i - 1]\n    diff = dp[-1]\n    res = 0\n    for val in dp:\n        if diff > 0:\n            start = int(ceil(max(0, 1 - val) / diff))\n            res += max(n - start, 0)\n        elif diff < 0:\n            end = int(ceil(max(0, val) / -diff))\n            res += min(n, end)\n        elif val > 0:\n            res += n\n    print(res)", "for _ in range(int(input())):\n    (s, m) = [x for x in input().split()]\n    m = int(m)\n    (ta, tb, h) = (0, 0, 0)\n    for i in s:\n        if i == 'a':\n            ta += 1\n        else:\n            tb += 1\n        if ta > tb:\n            h += 1\n    if ta == tb:\n        print(h * m)\n        continue\n    m -= 1\n    cnt = h\n    while m:\n        h = 0\n        for i in s:\n            if i == 'a':\n                ta += 1\n            else:\n                tb += 1\n            if ta > tb:\n                h += 1\n        m -= 1\n        cnt += h\n        if h >= len(s) or h == 0:\n            break\n    if h:\n        cnt += m * len(s)\n    print(cnt)", "def prefixcount(string):\n    (counta, prefixcount) = (0, 0)\n    for x in string:\n        if x == 'a':\n            counta += 1\n            if counta > 0:\n                prefixcount += 1\n        else:\n            counta -= 1\n            if counta > 0:\n                prefixcount += 1\n    return prefixcount\nfor t in range(int(input())):\n    (text, period) = input().split()\n    p = int(period)\n    numA = text.count('a')\n    numB = len(text) - numA\n    if numA == numB:\n        print(prefixcount(text) * p)\n    elif numA > numB:\n        tsjop = 0\n        check = numB // (numA - numB) + 1\n        if check > p:\n            check = p\n        else:\n            tsjop = 1\n        prefix = prefixcount(text * check)\n        if tsjop:\n            print(prefix + len(text) * (p - check))\n        else:\n            print(prefix)\n    elif numB > numA:\n        check = numA // (numB - numA) + 1\n        if check > p:\n            check = p\n        print(prefixcount(text * check))", "from math import *\nt = int(input())\nfor i in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    y = 10000\n    sumx = 0\n    total = 0\n    a = []\n    for j in range(len(s)):\n        if s[j] == 'a':\n            sumx += 1\n        else:\n            sumx -= 1\n        if sumx > 0:\n            total += 1\n        a.append(sumx)\n    y = min(a)\n    if sumx < 0 and y < 0:\n        for j in range(len(s)):\n            if a[j] > 0:\n                total += min(ceil(a[j] / abs(sumx)) - 1, n - 1)\n    elif sumx == 0:\n        for j in range(len(s)):\n            if a[j] > 0:\n                total += n - 1\n    elif sumx > 0 and y < 0:\n        for j in range(len(s)):\n            if a[j] > 0:\n                total += n - 1\n            else:\n                x = floor(abs(a[j]) / sumx)\n                if n - 1 - x >= 0:\n                    total += n - 1 - x\n    else:\n        total += (n - 1) * len(s)\n    print(total)", "def countSubStrings(s):\n    a = 0\n    b = 0\n    count = 0\n    for i in range(len(s)):\n        if s[i] == 'a':\n            a += 1\n        elif s[i] == 'b':\n            b += 1\n        if a > b:\n            count += 1\n    return count\n\ndef countSubStringAfter(s, ta, tb, prev):\n    a = ta\n    b = tb\n    count = 0\n    for i in range(len(s)):\n        if s[i] == 'a':\n            a += 1\n        elif s[i] == 'b':\n            b += 1\n        if a > b:\n            count += 1\n    return count + prev\nT = int(input())\nfor i in range(T):\n    line = input()\n    s = line.split()[0]\n    n = int(line.split()[1])\n    noOfA = s.count('a')\n    noOfB = s.count('b')\n    ans = countSubStrings(s)\n    x = s\n    ans2 = countSubStrings(x + s)\n    ta = noOfA\n    tb = noOfB\n    if noOfA == noOfB:\n        ans *= n\n    elif noOfA > noOfB:\n        i = 1\n        while ans2 - ans < len(s) and i < n:\n            i += 1\n            x += s\n            ans = ans2\n            ta += noOfA\n            tb += noOfB\n            ans2 = countSubStringAfter(s, ta, tb, ans)\n        if i < n:\n            ans += (n - i) * len(s)\n    elif noOfB > noOfA:\n        i = 1\n        while ans2 - ans > 0 and i < n:\n            i += 1\n            x += s\n            ans = ans2\n            ta += noOfA\n            tb += noOfB\n            ans2 = countSubStringAfter(s, ta, tb, ans)\n    print(ans)", "from math import ceil\nt = int(input())\nwhile t > 0:\n    st = input().split()\n    n = int(st[-1])\n    times = 0\n    if n == 1:\n        a = 0\n        b = 0\n        counter = 0\n        for i in st[0]:\n            if i == 'a':\n                a += 1\n            if i == 'b':\n                b += 1\n            if a > b:\n                counter += 1\n            times += 1\n        print(counter)\n    else:\n        length = len(st[0])\n        count_1 = [-1] * length\n        count_2 = [-1] * length\n        ans = 0\n        for i in range(length):\n            times += 1\n            if i == 0:\n                if st[0][i] == 'a':\n                    count_1[i] = 1\n                else:\n                    count_1[i] = -1\n            elif st[0][i] == 'a':\n                count_1[i] = count_1[i - 1] + 1\n            else:\n                count_1[i] = count_1[i - 1] - 1\n        idx = 0\n        for i in range(length - 1, -1, -1):\n            if idx == 0:\n                if st[0][idx] == 'a':\n                    count_2[idx] = count_1[i] + 1\n                if st[0][idx] == 'b':\n                    count_2[idx] = count_1[i] - 1\n            elif st[0][idx] == 'a':\n                count_2[idx] = count_2[idx - 1] + 1\n            else:\n                count_2[idx] = count_2[idx - 1] - 1\n            idx += 1\n        if count_1[0] == count_2[0]:\n            for i in count_1:\n                if i > 0:\n                    ans += 1\n                times += 1\n            print(ans * n)\n        elif count_1[0] < count_2[0]:\n            diff = [-1] * length\n            for i in range(length):\n                diff[i] = abs(count_2[i] - count_1[i])\n                times += 1\n            for i in count_1:\n                if i > 0:\n                    ans += 1\n                times += 1\n            for i in count_2:\n                if i > 0:\n                    ans += 1\n                times += 1\n            exc = 0\n            for i in range(length):\n                if count_2[i] >= 0:\n                    ans += n - 2\n                else:\n                    rem = n - 2\n                    if abs(count_2[i]) < diff[i]:\n                        ans += rem\n                    elif abs(count_2[i]) == diff[i]:\n                        ans += max(rem - 1, 0)\n                    else:\n                        ans += max(rem - abs(count_2[i]) // diff[i], 0)\n                times += 1\n            print(ans)\n        else:\n            diff = [-1] * length\n            for i in range(length):\n                diff[i] = abs(count_2[i] - count_1[i])\n                times += 1\n            for i in count_1:\n                if i > 0:\n                    ans += 1\n                times += 1\n            for i in count_2:\n                if i > 0:\n                    ans += 1\n                times += 1\n            rem = n - 2\n            for i in range(length):\n                times += 1\n                if count_2[i] > 0:\n                    if count_2[i] % diff[i] == 0:\n                        ans += min(count_2[i] // diff[i] - 1, rem)\n                    else:\n                        ans += count_2[i] // diff[i]\n            print(ans)\n    t -= 1", "def numg0(ls):\n    count = 0\n    for i in ls:\n        if i > 0:\n            count += 1\n    return count\n\ndef allg0(ls, limiter=float('inf')):\n    count = 0\n    counter = 0\n    numg = numg0(ls)\n    numg_in = numg\n    the_last = ls[-1]\n    while numg != len(ls) and numg != 0 and (counter != limiter):\n        count += numg\n        counter += 1\n        ls = [x + the_last for x in ls]\n        numg = numg0(ls)\n        if numg == numg_in:\n            break\n    if numg == 0:\n        charic = 0\n    elif numg == len(ls):\n        charic = len(ls)\n    else:\n        charic = numg\n    return (count, counter, charic)\nT = int(input())\nfor kappa in range(T):\n    (s, n) = list(input().split())\n    n = int(n)\n    if s[0] == 'a':\n        ls = [1]\n    else:\n        ls = [-1]\n    for i in s[1:]:\n        if i == 'a':\n            ls.append(ls[-1] + 1)\n        else:\n            ls.append(ls[-1] - 1)\n    allg = allg0(ls)\n    count = allg[0]\n    counter = allg[1]\n    charic = allg[2]\n    if n > counter:\n        print((n - counter) * charic + count)\n    else:\n        allg = allg0(ls, n)\n        print(allg[0])", "def solve(s, n):\n    orig = len(s)\n    (a, b) = (s.count('a'), s.count('b'))\n    if n == 1:\n        (co, c1, c2) = (0, 0, 0)\n        for i in range(orig):\n            if s[i] == 'a':\n                c1 = c1 + 1\n            else:\n                c2 = c2 + 1\n            if c1 > c2:\n                co = co + 1\n        print(co)\n    else:\n        if a > b:\n            (co, c1, c2) = (0, 0, 0)\n            x = min(b // (a - b) + 1, n)\n            k = s * x\n            for i in range(len(k)):\n                if k[i] == 'a':\n                    c1 = c1 + 1\n                else:\n                    c2 = c2 + 1\n                if c1 > c2:\n                    co = co + 1\n            co = co + orig * (n - x)\n        elif b > a:\n            (co, c1, c2) = (0, 0, 0)\n            x = min(a // (b - a) + 1, n)\n            k = s * x\n            for i in range(len(k)):\n                if k[i] == 'a':\n                    c1 = c1 + 1\n                else:\n                    c2 = c2 + 1\n                if c1 > c2:\n                    co = co + 1\n        else:\n            (co, c1, c2) = (0, 0, 0)\n            for i in range(orig):\n                if s[i] == 'a':\n                    c1 = c1 + 1\n                else:\n                    c2 = c2 + 1\n                if c1 > c2:\n                    co = co + 1\n            co = co * n\n        print(co)\nfor inm in range(int(input())):\n    (a, b) = map(str, input().split())\n    solve(a, int(b))", "from math import *\nt = int(input())\nfor i in range(t):\n    (s, n) = input().split()\n    n = int(n)\n    if n * len(s) <= 900000:\n        q = s * n\n        sumy = 0\n        totaly = 0\n        for j in range(len(q)):\n            if q[j] == 'a':\n                sumy += 1\n            else:\n                sumy -= 1\n            if sumy > 0:\n                totaly += 1\n        print(totaly)\n    else:\n        y = 10000\n        sumx = 0\n        total = 0\n        a = []\n        for j in range(len(s)):\n            if s[j] == 'a':\n                sumx += 1\n            else:\n                sumx -= 1\n            y = min(y, sumx)\n            if sumx > 0:\n                total += 1\n            a.append(sumx)\n        if sumx < 0 and y < 0:\n            for j in range(len(s)):\n                if a[j] > 0:\n                    total += ceil(a[j] / abs(sumx)) - 1\n        elif sumx == 0:\n            for j in range(len(s)):\n                if a[j] > 0:\n                    total += n - 1\n        elif sumx > 0 and y < 0:\n            for j in range(len(s)):\n                if a[j] > 0:\n                    total += n - 1\n                else:\n                    x = floor(abs(a[j]) / sumx)\n                    if n - 1 - x >= 0:\n                        total += n - 1 - x\n        else:\n            total += (n - 1) * len(s)\n        print(total)"]