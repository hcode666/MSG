["def rotL(n):\n    x = str(n)\n    return int(x[1:] + x[0])\n\ndef rotR(n):\n    x = str(n)\n    m = len(x)\n    return int(x[m - 1] + x[0:m - 1])\nfor i in range(int(input())):\n    n = int(input())\n    s = len(str(n))\n    m = -1\n    (l, r, c) = (n, n, n)\n    for j in range(s - 1):\n        l = rotL(l)\n        r = rotR(r)\n        m = max(m, l)\n        m = max(m, r)\n    c = rotL(c)\n    c = rotR(c)\n    m = max(m, c)\n    c = n\n    c = rotR(c)\n    c = rotL(c)\n    m = max(m, c)\n    print(m)", "def rotL(n):\n    x = str(n)\n    return int(x[1:] + x[0])\n\ndef rotR(n):\n    x = str(n)\n    m = len(x)\n    return int(x[m - 1] + x[0:m - 1])\nfor i in range(int(input())):\n    n = int(input())\n    s = len(str(n))\n    m = -1\n    (l, r, c) = (n, n, n)\n    for j in range(s - 1):\n        l = rotL(l)\n        r = rotR(r)\n        m = max(m, l)\n        m = max(m, r)\n    c = rotL(c)\n    c = rotR(c)\n    m = max(m, c)\n    c = n\n    c = rotR(c)\n    c = rotL(c)\n    m = max(m, c)\n    print(m)", "def rotL(n):\n    x = str(n)\n    return int(x[1:] + x[0])\n\ndef rotR(n):\n    x = str(n)\n    return int(x[-1] + x[0:-1])\nfor i in range(int(input())):\n    n = int(input())\n    s = len(str(n))\n    m = -1\n    (l, r, c) = (n, n, n)\n    for j in range(s - 1):\n        l = rotL(l)\n        r = rotR(r)\n        m = max(m, l)\n        m = max(m, r)\n    c = rotL(c)\n    c = rotR(c)\n    m = max(m, c)\n    c = n\n    c = rotR(c)\n    c = rotL(c)\n    m = max(m, c)\n    print(m)", "def rotL(n):\n    x = str(n)\n    return int(x[1:] + x[0])\n\ndef rotR(n):\n    x = str(n)\n    return int(x[-1] + x[0:-1])\n\ndef solve():\n    n = int(input())\n    s = len(str(n))\n    m = -1\n    (l, r, c) = (n, n, n)\n    for j in range(s - 1):\n        l = rotL(l)\n        r = rotR(r)\n        m = max(m, l)\n        m = max(m, r)\n    c = rotL(c)\n    c = rotR(c)\n    m = max(m, c)\n    c = n\n    c = rotR(c)\n    c = rotL(c)\n    m = max(m, c)\n    print(m)\nfor i in range(int(input())):\n    solve()", "def leftRotation(num):\n    strNum = str(num)\n    return int(strNum[1:] + strNum[0])\n\ndef rightRotation(num):\n    strNum = str(num)\n    l = len(strNum)\n    return int(strNum[l - 1] + strNum[0:l - 1])\nt = int(input())\nfor _ in range(t):\n    num = int(input())\n    noOfDigits = len(str(num))\n    maximum = -1\n    lnum = num\n    rnum = num\n    copyNum = num\n    for i in range(noOfDigits - 1):\n        lnum = leftRotation(lnum)\n        rnum = rightRotation(rnum)\n        maximum = max(maximum, lnum)\n        maximum = max(maximum, rnum)\n    copyNum = leftRotation(copyNum)\n    copyNum = rightRotation(copyNum)\n    maximum = max(maximum, copyNum)\n    copyNum = num\n    copyNum = rightRotation(copyNum)\n    copyNum = leftRotation(copyNum)\n    maximum = max(maximum, copyNum)\n    print(maximum)", "def leftRotation(num):\n    strNum = str(num)\n    return int(strNum[1:] + strNum[0])\n\ndef rightRotation(num):\n    strNum = str(num)\n    l = len(strNum)\n    return int(strNum[l - 1] + strNum[0:l - 1])\nt = int(input())\nfor _ in range(t):\n    num = int(input())\n    noOfDigits = len(str(num))\n    maximum = -1\n    lnum = num\n    rnum = num\n    copyNum = num\n    for i in range(noOfDigits - 1):\n        lnum = leftRotation(lnum)\n        rnum = rightRotation(rnum)\n        maximum = max(maximum, lnum)\n        maximum = max(maximum, rnum)\n    copyNum = leftRotation(copyNum)\n    copyNum = rightRotation(copyNum)\n    maximum = max(maximum, copyNum)\n    copyNum = num\n    copyNum = rightRotation(copyNum)\n    copyNum = leftRotation(copyNum)\n    maximum = max(maximum, copyNum)\n    print(maximum)", "def leftRotation(num):\n    strNum = str(num)\n    return int(strNum[1:] + strNum[0])\n\ndef rightRotation(num):\n    strNum = str(num)\n    l = len(strNum)\n    return int(strNum[l - 1] + strNum[0:l - 1])\nt = int(input())\nfor _ in range(t):\n    num = int(input())\n    noOfDigits = len(str(num))\n    maximum = -1\n    lnum = num\n    rnum = num\n    copyNum = num\n    for i in range(noOfDigits - 1):\n        lnum = leftRotation(lnum)\n        rnum = rightRotation(rnum)\n        maximum = max(maximum, lnum)\n        maximum = max(maximum, rnum)\n    copyNum = leftRotation(copyNum)\n    copyNum = rightRotation(copyNum)\n    maximum = max(maximum, copyNum)\n    copyNum = num\n    copyNum = rightRotation(copyNum)\n    copyNum = leftRotation(copyNum)\n    maximum = max(maximum, copyNum)\n    print(maximum)", "def snek1(n):\n    x = str(n)\n    return int(x[1:] + x[0])\n\ndef snek2(n):\n    x = str(n)\n    z = len(x)\n    return int(x[z - 1] + x[0:z - 1])\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = len(str(n))\n    m = -1\n    (l, r, c) = (n, n, n)\n    for j in range(s - 1):\n        l = snek1(l)\n        r = snek2(r)\n        m = max(m, l)\n        m = max(m, r)\n    c = snek1(c)\n    c = snek2(c)\n    m = max(m, c)\n    c = n\n    c = snek2(c)\n    c = snek1(c)\n    m = max(m, c)\n    print(m)", "def snek1(n):\n    x = str(n)\n    return int(x[1:] + x[0])\n\ndef snek2(n):\n    x = str(n)\n    z = len(x)\n    return int(x[z - 1] + x[0:z - 1])\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = len(str(n))\n    m = -1\n    (l, r, c) = (n, n, n)\n    for j in range(s - 1):\n        l = snek1(l)\n        r = snek2(r)\n        m = max(m, l)\n        m = max(m, r)\n    c = snek1(c)\n    c = snek2(c)\n    m = max(m, c)\n    c = n\n    c = snek2(c)\n    c = snek1(c)\n    m = max(m, c)\n    print(m)", "def snek1(n):\n    x = str(n)\n    return int(x[1:] + x[0])\n\ndef snek2(n):\n    x = str(n)\n    z = len(x)\n    return int(x[z - 1] + x[0:z - 1])\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = len(str(n))\n    m = -1\n    (l, r, c) = (n, n, n)\n    for j in range(s - 1):\n        l = snek1(l)\n        r = snek2(r)\n        m = max(m, l)\n        m = max(m, r)\n    c = snek1(c)\n    c = snek2(c)\n    m = max(m, c)\n    c = n\n    c = snek2(c)\n    c = snek1(c)\n    m = max(m, c)\n    print(m)", "def leftRotation(num):\n    strNum = str(num)\n    return int(strNum[1:] + strNum[0])\n\ndef rightRotation(num):\n    strNum = str(num)\n    l = len(strNum)\n    return int(strNum[l - 1] + strNum[0:l - 1])\nt = int(input())\nfor _ in range(t):\n    num = int(input())\n    noOfDigits = len(str(num))\n    maximum = -1\n    lnum = num\n    rnum = num\n    copyNum = num\n    for i in range(noOfDigits - 1):\n        lnum = leftRotation(lnum)\n        rnum = rightRotation(rnum)\n        maximum = max(maximum, lnum)\n        maximum = max(maximum, rnum)\n    copyNum = leftRotation(copyNum)\n    copyNum = rightRotation(copyNum)\n    maximum = max(maximum, copyNum)\n    copyNum = num\n    copyNum = rightRotation(copyNum)\n    copyNum = leftRotation(copyNum)\n    maximum = max(maximum, copyNum)\n    print(maximum)", "def leftRotation(num):\n    strNum = str(num)\n    return int(strNum[1:] + strNum[0])\n\ndef rightRotation(num):\n    strNum = str(num)\n    l = len(strNum)\n    return int(strNum[l - 1] + strNum[0:l - 1])\nt = int(input())\nfor _ in range(t):\n    num = int(input())\n    noOfDigits = len(str(num))\n    maximum = -1\n    lnum = num\n    rnum = num\n    copyNum = num\n    for i in range(noOfDigits - 1):\n        lnum = leftRotation(lnum)\n        rnum = rightRotation(rnum)\n        maximum = max(maximum, lnum)\n        maximum = max(maximum, rnum)\n    copyNum = leftRotation(copyNum)\n    copyNum = rightRotation(copyNum)\n    maximum = max(maximum, copyNum)\n    copyNum = num\n    copyNum = rightRotation(copyNum)\n    copyNum = leftRotation(copyNum)\n    maximum = max(maximum, copyNum)\n    print(maximum)", "def rotateLeft(n):\n    n = str(n)\n    n = n[1:] + n[0]\n    return int(n)\n\ndef rotateRight(n):\n    n = str(n)\n    n = n[-1] + n[:-1]\n    return int(n)\n\ndef bestRotation(n):\n    visited.add(n)\n    (leftChild, rightChild) = (rotateLeft(n), rotateRight(n))\n    if leftChild not in visited:\n        bestRotation(leftChild)\n    if rightChild not in visited:\n        bestRotation(rightChild)\ntestCases = int(input())\nfor case in range(testCases):\n    visited = set()\n    source = int(input())\n    bestRotation(rotateLeft(source))\n    bestRotation(rotateRight(source))\n    print(max(visited))", "t = int(input())\nfor i in range(t):\n    num = int(input().strip())\n    num = str(num)\n    orgNum = num\n    temp = []\n    numLeft = num[1:] + num[0]\n    num = str(int(numLeft))\n    numRight = num[-1] + num[:-1]\n    num = str(int(numRight))\n    temp += [int(num)]\n    num = orgNum\n    numRight = num[-1] + num[:-1]\n    num = str(int(numRight))\n    numLeft = num[1:] + num[0]\n    num = str(int(numLeft))\n    temp += [int(num)]\n    num = orgNum\n    for j in range(len(num)):\n        numLeft = num[1:] + num[0]\n        num = str(int(numLeft))\n        temp += [int(num)]\n    num = orgNum\n    for j in range(len(num)):\n        numRight = num[-1] + num[:-1]\n        num = str(int(numRight))\n        temp += [int(num)]\n    print(max(temp))"]