["t = int(input())\nfor _ in range(t):\n    a = input() + '00'\n    b = input() + '00'\n    b1 = False\n    b2 = False\n    c = 0\n    for i in range(len(a)):\n        if i % 2 == 0:\n            if int(a[i]) ^ int(b[i]) == 1:\n                b1 = True\n            else:\n                if b1:\n                    c += 1\n                b1 = False\n        elif int(a[i]) ^ int(b[i]) == 1:\n            b2 = True\n        else:\n            if b2:\n                c += 1\n            b2 = False\n    print(c)", "t = int(input())\nfor _ in range(t):\n    a = input() + '00'\n    b = input() + '00'\n    b1 = False\n    b2 = False\n    c = 0\n    for i in range(len(a)):\n        if i % 2 == 0:\n            if int(a[i]) ^ int(b[i]) == 1:\n                b1 = True\n            else:\n                if b1:\n                    c += 1\n                b1 = False\n        elif int(a[i]) ^ int(b[i]) == 1:\n            b2 = True\n        else:\n            if b2:\n                c += 1\n            b2 = False\n    print(c)", "t = int(input())\nfor _ in range(t):\n    a = input() + '00'\n    b = input() + '00'\n    b1 = False\n    b2 = False\n    c = 0\n    for i in range(len(a)):\n        if i % 2 == 0:\n            if int(a[i]) ^ int(b[i]) == 1:\n                b1 = True\n            else:\n                if b1:\n                    c += 1\n                b1 = False\n        elif int(a[i]) ^ int(b[i]) == 1:\n            b2 = True\n        else:\n            if b2:\n                c += 1\n            b2 = False\n    print(c)", "t = int(input())\nfor _ in range(t):\n    a = input() + '00'\n    b = input() + '00'\n    b1 = False\n    b2 = False\n    c = 0\n    for i in range(len(a)):\n        if i % 2 == 0:\n            if int(a[i]) ^ int(b[i]) == 1:\n                b1 = True\n            else:\n                if b1:\n                    c += 1\n                b1 = False\n        elif int(a[i]) ^ int(b[i]) == 1:\n            b2 = True\n        else:\n            if b2:\n                c += 1\n            b2 = False\n    print(c)", "t = int(input())\nfor _ in range(t):\n    a = input() + '00'\n    b = input() + '00'\n    b1 = False\n    b2 = False\n    c = 0\n    for i in range(len(a)):\n        if i % 2 == 0:\n            if int(a[i]) ^ int(b[i]) == 1:\n                b1 = True\n            else:\n                if b1:\n                    c += 1\n                b1 = False\n        elif int(a[i]) ^ int(b[i]) == 1:\n            b2 = True\n        else:\n            if b2:\n                c += 1\n            b2 = False\n    print(c)", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    count = 0\n    odd = 0\n    even = 0\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            if i % 2 == 0 and even == 0:\n                count = count + 1\n                even = 1\n            elif i % 2 != 0 and odd == 0:\n                count = count + 1\n                odd = 1\n        elif i % 2 == 0:\n            even = 0\n        else:\n            odd = 0\n    print(count)", "T = int(input())\nfor t in range(T):\n    s1 = input()\n    s2 = input()\n    l = len(s1)\n    odd = False\n    even = False\n    count = 0\n    for i in range(l):\n        if s1[i] != s2[i]:\n            if i % 2 == 0 and even == False:\n                count += 1\n                even = True\n            elif i % 2 != 0 and odd == False:\n                count += 1\n                odd = True\n        elif i % 2 == 0:\n            even = False\n        else:\n            odd = False\n    print(count)", "T = int(input())\nfor t in range(T):\n    s1 = input()\n    s2 = input()\n    l = len(s1)\n    odd = False\n    even = False\n    count = 0\n    for i in range(l):\n        if s1[i] != s2[i]:\n            if i % 2 == 0 and even == False:\n                count += 1\n                even = True\n            elif i % 2 != 0 and odd == False:\n                count += 1\n                odd = True\n        elif i % 2 == 0:\n            even = False\n        else:\n            odd = False\n    print(count)", "for _ in range(int(input())):\n    a = input() + '00'\n    b = input() + '00'\n    b1 = False\n    b2 = False\n    c = 0\n    for i in range(len(a)):\n        if i % 2 == 0:\n            if int(a[i]) ^ int(b[i]) == 1:\n                b1 = True\n            else:\n                if b1:\n                    c += 1\n                b1 = False\n        elif int(a[i]) ^ int(b[i]) == 1:\n            b2 = True\n        else:\n            if b2:\n                c += 1\n            b2 = False\n    print(c)", "for _ in range(int(input())):\n    a = input() + '00'\n    b = input() + '00'\n    b1 = False\n    b2 = False\n    c = 0\n    for i in range(len(a)):\n        if i % 2 == 0:\n            if int(a[i]) ^ int(b[i]) == 1:\n                b1 = True\n            else:\n                if b1:\n                    c += 1\n                b1 = False\n        elif int(a[i]) ^ int(b[i]) == 1:\n            b2 = True\n        else:\n            if b2:\n                c += 1\n            b2 = False\n    print(c)", "for _ in range(int(input())):\n    a = input() + '00'\n    b = input() + '00'\n    b1 = False\n    b2 = False\n    c = 0\n    for i in range(len(a)):\n        if i % 2 == 0:\n            if int(a[i]) ^ int(b[i]) == 1:\n                b1 = True\n            else:\n                if b1:\n                    c += 1\n                b1 = False\n        elif int(a[i]) ^ int(b[i]) == 1:\n            b2 = True\n        else:\n            if b2:\n                c += 1\n            b2 = False\n    print(c)", "for i in range(int(input())):\n    a = input() + '00'\n    b = input() + '00'\n    ans = 0\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            if a[i + 2] == b[i + 2]:\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    a = input() + '00'\n    b = input() + '00'\n    b1 = False\n    b2 = False\n    c = 0\n    for i in range(len(a)):\n        if i % 2 == 0:\n            if int(a[i]) ^ int(b[i]) == 1:\n                b1 = True\n            else:\n                if b1:\n                    c += 1\n                b1 = False\n        elif int(a[i]) ^ int(b[i]) == 1:\n            b2 = True\n        else:\n            if b2:\n                c += 1\n            b2 = False\n    print(c)", "for _ in range(int(input())):\n    a = int(input(), 2)\n    b = int(input(), 2)\n    c = a ^ b\n    xor = list(bin(c)[2:])\n    count = 0\n    for i in range(len(xor)):\n        if xor[i] == '1':\n            count += 1\n            while i < len(xor):\n                if xor[i] == '0':\n                    break\n                xor[i] = '0'\n                i += 2\n    print(count)", "tests = int(input())\nfor i in range(tests):\n    string1 = input()\n    string2 = input()\n    length = len(string1)\n    is_same = True\n    ans = 0\n    for j in range(0, length, 2):\n        if string1[j] != string2[j]:\n            if is_same == True:\n                ans += 1\n            is_same = False\n        else:\n            is_same = True\n    is_same = True\n    for j in range(1, length, 2):\n        if string1[j] != string2[j]:\n            if is_same == True:\n                ans += 1\n            is_same = False\n        else:\n            is_same = True\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    string1 = input()\n    string2 = input()\n    length = len(string1)\n    is_same = True\n    ans = 0\n    for j in range(0, length, 2):\n        if string1[j] != string2[j]:\n            if is_same == True:\n                ans += 1\n            is_same = False\n        else:\n            is_same = True\n    is_same = True\n    for j in range(1, length, 2):\n        if string1[j] != string2[j]:\n            if is_same == True:\n                ans += 1\n            is_same = False\n        else:\n            is_same = True\n    print(ans)", "def soln(a, b):\n    if a == b:\n        return 0\n    res = 0\n    cont = 0\n    for i in range(0, len(a), 2):\n        if a[i] == b[i]:\n            res += cont\n            cont = 0\n        else:\n            cont = 1\n    res += cont\n    cont = 0\n    for i in range(1, len(a), 2):\n        if a[i] == b[i]:\n            res += cont\n            cont = 0\n        else:\n            cont = 1\n    res += cont\n    return res\nfor _ in range(int(input())):\n    a = input()\n    b = input()\n    print(soln(a, b))", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    n = len(a)\n    a += '00'\n    b += '00'\n    ans = 0\n    for i in range(n):\n        if a[i] != b[i]:\n            if a[i + 2] == b[i + 2]:\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    n = len(a)\n    x = ''\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            x += '0'\n        else:\n            x += '1'\n    odd = x[0:n:2]\n    even = x[1:n:2]\n    c = 0\n    flag = 0\n    for i in range(len(odd)):\n        if odd[i] == '1' and flag == 0:\n            flag = 1\n            c += 1\n        elif odd[i] == '0':\n            flag = 0\n    flag = 0\n    for i in range(len(even)):\n        if even[i] == '1' and flag == 0:\n            flag = 1\n            c += 1\n        elif even[i] == '0':\n            flag = 0\n    print(c)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    n = len(a)\n    x = ''\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            x += '0'\n        else:\n            x += '1'\n    odd = x[0:n:2]\n    even = x[1:n:2]\n    c = 0\n    flag = 0\n    for i in range(len(odd)):\n        if odd[i] == '1' and flag == 0:\n            flag = 1\n            c += 1\n        elif odd[i] == '0':\n            flag = 0\n    flag = 0\n    for i in range(len(even)):\n        if even[i] == '1' and flag == 0:\n            flag = 1\n            c += 1\n        elif even[i] == '0':\n            flag = 0\n    print(c)", "for _ in range(int(input())):\n    a = input() + '00'\n    b = input() + '00'\n    ans = 0\n    i = 0\n    while i < len(a):\n        if a[i] != b[i]:\n            if a[i + 2] == b[i + 2]:\n                ans += 1\n        i += 1\n    print(ans)", "from math import gcd, sqrt, ceil, floor, log10, log2\nfrom heapq import heapify, heappop, heappush, nsmallest, nlargest\nfrom collections import Counter, deque, OrderedDict, defaultdict\nfrom itertools import combinations, permutations, zip_longest\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache, reduce\nimport sys\nimport time\nimport string\nimport operator\nRECURSION_LIMIT = int(10000000.0)\nINT_MAX = float('inf')\nINT_MIN = float('-inf')\nMOD = int(10000000.0) + 9\nNEWLINE = '\\n'\nSPACE = ' '\nsys.setrecursionlimit(RECURSION_LIMIT)\ninp = lambda fn: fn(input())\ninp_vars = lambda fn, delim, convert_to=list: convert_to(map(fn, input().split(delim)))\nenum = lambda itr: enumerate(itr)\n\ndef toposort(graph, n):\n    degree = [0] * n\n    for node in graph:\n        for adj in graph[node]:\n            degree[adj] += 1\n    bfs_queue = [node for node in range(n) if not degree[node]]\n    for node in bfs_queue:\n        for adj in graph[node]:\n            degree[adj] -= 1\n            if not degree[adj]:\n                bfs_queue.append(adj)\n    return (bfs_queue, degree)\n\ndef dfs(graph, node, visited):\n    visited.add(node)\n    for adj in graph[node]:\n        if adj in visited:\n            continue\n        dfs(graph, adj, visited)\n\ndef solve(*args, **kwargs):\n    (a, b) = args\n    tmp = ''\n    res = 0\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            continue\n        res += 1\n        j = i\n        while j < len(a):\n            if a[j] == b[j]:\n                break\n            if a[j] == '0':\n                a[j] = '1'\n            else:\n                a[j] = '0'\n            j += 2\n    return res\n\ndef main(*args, **kwargs):\n    for _ in range(int(input())):\n        arg1 = inp(list)\n        arg2 = inp(list)\n        res = solve(*(arg1, arg2))\n        if type(res) in {list, tuple, set}:\n            print(*res, sep='\\n')\n        else:\n            print(res)\nmain()", "from math import gcd, sqrt, ceil, floor, log10, log2\nfrom heapq import heapify, heappop, heappush, nsmallest, nlargest\nfrom collections import Counter, deque, OrderedDict, defaultdict\nfrom itertools import combinations, permutations, zip_longest\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache, reduce\nimport sys\nimport time\nimport string\nimport operator\nRECURSION_LIMIT = int(10000000.0)\nINT_MAX = float('inf')\nINT_MIN = float('-inf')\nMOD = int(10000000.0) + 9\nNEWLINE = '\\n'\nSPACE = ' '\nsys.setrecursionlimit(RECURSION_LIMIT)\ninp = lambda fn: fn(input())\ninp_vars = lambda fn, delim, convert_to=list: convert_to(map(fn, input().split(delim)))\nenum = lambda itr: enumerate(itr)\n\ndef toposort(graph, n):\n    degree = [0] * n\n    for node in graph:\n        for adj in graph[node]:\n            degree[adj] += 1\n    bfs_queue = [node for node in range(n) if not degree[node]]\n    for node in bfs_queue:\n        for adj in graph[node]:\n            degree[adj] -= 1\n            if not degree[adj]:\n                bfs_queue.append(adj)\n    return (bfs_queue, degree)\n\ndef dfs(graph, node, visited):\n    visited.add(node)\n    for adj in graph[node]:\n        if adj in visited:\n            continue\n        dfs(graph, adj, visited)\n\ndef solve(*args, **kwargs):\n    (a, b) = args\n    tmp = ''\n    res = 0\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            continue\n        res += 1\n        j = i\n        while j < len(a):\n            if a[j] == b[j]:\n                break\n            if a[j] == '0':\n                a[j] = '1'\n            else:\n                a[j] = '0'\n            j += 2\n    return res\n\ndef main(*args, **kwargs):\n    for _ in range(int(input())):\n        arg1 = inp(list)\n        arg2 = inp(list)\n        res = solve(*(arg1, arg2))\n        if type(res) in {list, tuple, set}:\n            print(*res, sep='\\n')\n        else:\n            print(res)\nmain()", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    temp = []\n    for i in range(len(a)):\n        temp.append(abs(int(a[i]) - int(b[i])))\n    s = 0\n    x = temp.count(1)\n    for i in range(len(a) - 2):\n        if temp[i] == 1 and temp[i + 2] == 1:\n            s += 1\n    print(x - s)", "def solve(a, b):\n    n = len(a)\n    count = 0\n    if a == b:\n        return 0\n    for i in range(n):\n        if a[i] != b[i]:\n            a[i] = b[i]\n            count += 1\n            for j in range(i + 2, n, 2):\n                if a[j] != b[j]:\n                    a[j] = b[j]\n                else:\n                    break\n            if a == b:\n                return count\nt = int(input())\nfor _ in range(t):\n    a = list(str(input()))\n    b = list(str(input()))\n    print(solve(a, b))", "for _ in range(int(input())):\n    n = input()\n    n1 = input()\n    check = 1\n    check1 = 1\n    ans = 0\n    for i in range(0, len(n), 2):\n        if n[i] != n1[i] and check == 1:\n            ans += 1\n            check = 0\n        elif n[i] == n1[i]:\n            check = 1\n    for i in range(1, len(n), 2):\n        if n[i] != n1[i] and check1 == 1:\n            ans += 1\n            check1 = 0\n        elif n[i] == n1[i]:\n            check1 = 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s1 = input()\n    s2 = input()\n    n = len(s1)\n    count = 0\n    odd = None\n    even = None\n    for i in range(n):\n        if i % 2 == 0:\n            if s1[i] != s2[i]:\n                even = i\n            else:\n                if even != None:\n                    count += 1\n                even = None\n        elif s1[i] != s2[i]:\n            odd = i\n        else:\n            if odd != None:\n                count += 1\n            odd = None\n    if odd != None:\n        count += 1\n    if even != None:\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    n = input()\n    n1 = input()\n    check = 1\n    check1 = 1\n    ans = 0\n    for i in range(0, len(n), 2):\n        if n[i] != n1[i] and check == 1:\n            ans += 1\n            check = 0\n        elif n[i] == n1[i]:\n            check = 1\n    for i in range(1, len(n), 2):\n        if n[i] != n1[i] and check1 == 1:\n            ans += 1\n            check1 = 0\n        elif n[i] == n1[i]:\n            check1 = 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s1 = input()\n    s2 = input()\n    n = len(s1)\n    count = 0\n    odd = None\n    even = None\n    for i in range(n):\n        if i % 2 == 0:\n            if s1[i] != s2[i]:\n                even = i\n            else:\n                if even != None:\n                    count += 1\n                even = None\n        elif s1[i] != s2[i]:\n            odd = i\n        else:\n            if odd != None:\n                count += 1\n            odd = None\n    if odd != None:\n        count += 1\n    if even != None:\n        count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    s1 = input()\n    s2 = input()\n    n = len(s1)\n    count = 0\n    odd = None\n    even = None\n    for i in range(n):\n        if i % 2 == 0:\n            if s1[i] != s2[i]:\n                even = i\n            else:\n                if even != None:\n                    count += 1\n                even = None\n        elif s1[i] != s2[i]:\n            odd = i\n        else:\n            if odd != None:\n                count += 1\n            odd = None\n    if odd != None:\n        count += 1\n    if even != None:\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    ans = 0\n    flag = 0\n    for i in range(0, len(a), 2):\n        if a[i] != b[i] and flag == 0:\n            ans += 1\n            flag = 1\n        elif a[i] == b[i]:\n            flag = 0\n    flag = 0\n    for i in range(1, len(a), 2):\n        if a[i] != b[i] and flag == 0:\n            ans += 1\n            flag = 1\n        elif a[i] == b[i]:\n            flag = 0\n    print(ans)", "def invert(string, char, position):\n    if char == '1':\n        new_character = '0'\n    elif char == '0':\n        new_character = '1'\n    string = string[:position] + new_character + string[position + 1:]\n    return string\nfor _ in range(int(input())):\n    a = input()\n    b = input()\n    c = 0\n    i = 0\n    while i < len(a):\n        d = 0\n        if a[i] != b[i]:\n            for j in range(i, len(a), +2):\n                if a[j] != b[j]:\n                    a = invert(a, a[j], j)\n                    d = d + 1\n                else:\n                    break\n            i = i + 1\n        else:\n            i = i + 1\n        if d >= 1:\n            c = c + 1\n    print(c)", "def solve():\n    a = input()\n    b = input()\n    ans = 0\n    n = len(a)\n    i = 0\n    while i < n:\n        if a[i] != b[i]:\n            while i < n and a[i] != b[i]:\n                i += 2\n            ans += 1\n        i += 2\n    i = 1\n    while i < n:\n        if a[i] != b[i]:\n            while i < n and a[i] != b[i]:\n                i += 2\n            ans += 1\n        else:\n            i += 2\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    a = input()\n    b = input()\n    ans = 0\n    n = len(a)\n    i = 0\n    while i < n:\n        if a[i] != b[i]:\n            while i < n and a[i] != b[i]:\n                i += 2\n            ans += 1\n        i += 2\n    i = 1\n    while i < n:\n        if a[i] != b[i]:\n            while i < n and a[i] != b[i]:\n                i += 2\n            ans += 1\n        else:\n            i += 2\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    a = input()\n    b = input()\n    ans = 0\n    n = len(a)\n    i = 0\n    while i < n:\n        if a[i] != b[i]:\n            while i < n and a[i] != b[i]:\n                i += 2\n            ans += 1\n        i += 2\n    i = 1\n    while i < n:\n        if a[i] != b[i]:\n            while i < n and a[i] != b[i]:\n                i += 2\n            ans += 1\n        else:\n            i += 2\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    a = input()\n    b = input()\n    ans = 0\n    n = len(a)\n    i = 0\n    while i < n:\n        if a[i] != b[i]:\n            while i < n and a[i] != b[i]:\n                i += 2\n            ans += 1\n        i += 2\n    i = 1\n    while i < n:\n        if a[i] != b[i]:\n            while i < n and a[i] != b[i]:\n                i += 2\n            ans += 1\n        else:\n            i += 2\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    temp = []\n    for i in range(len(a)):\n        temp.append(abs(int(a[i]) - int(b[i])))\n    s = 0\n    x = temp.count(1)\n    for i in range(len(a) - 2):\n        if temp[i] == 1 and temp[i + 2] == 1:\n            s += 1\n    print(x - s)", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    nu = []\n    s = 0\n    for i in range(len(a)):\n        nu.append(abs(int(a[i]) - int(b[i])))\n    x = nu.count(1)\n    for i in range(len(a) - 2):\n        if nu[i] == 1 and nu[i + 2] == 1:\n            s += 1\n    print(x - s)", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    arr = []\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            arr.append(True)\n        else:\n            arr.append(False)\n    mx = 0\n    for i in arr:\n        if i == False:\n            mx += 1\n    x = 0\n    ans = 0\n    while x < len(a) and False in arr:\n        while x < len(a) and arr[x]:\n            x += 1\n        leng = 1\n        y = x\n        z = x\n        while y + 2 < len(a) and arr[y + 2] == False:\n            leng += 2\n            y += 2\n        while x < len(a):\n            arr[x] = True\n            x += 2\n            if x > y:\n                ans += 1\n                break\n        x = z + 1\n    print(min(ans, mx))", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    arr = []\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            arr.append(True)\n        else:\n            arr.append(False)\n    mx = 0\n    for i in arr:\n        if i == False:\n            mx += 1\n    x = 0\n    ans = 0\n    while x < len(a) and False in arr:\n        while x < len(a) and arr[x]:\n            x += 1\n        leng = 1\n        y = x\n        z = x\n        while y + 2 < len(a) and arr[y + 2] == False:\n            leng += 2\n            y += 2\n        while x < len(a):\n            arr[x] = True\n            x += 2\n            if x > y:\n                ans += 1\n                break\n        x = z + 1\n    print(min(ans, mx))", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    arr = []\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            arr.append(True)\n        else:\n            arr.append(False)\n    mx = 0\n    for i in arr:\n        if i == False:\n            mx += 1\n    x = 0\n    ans = 0\n    while x < len(a) and False in arr:\n        while x < len(a) and arr[x]:\n            x += 1\n        leng = 1\n        y = x\n        z = x\n        while y + 2 < len(a) and arr[y + 2] == False:\n            leng += 2\n            y += 2\n        while x < len(a):\n            arr[x] = True\n            x += 2\n            if x > y:\n                ans += 1\n                break\n        x = z + 1\n    print(min(ans, mx))", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    arr = []\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            arr.append(True)\n        else:\n            arr.append(False)\n    mx = 0\n    for i in arr:\n        if i == False:\n            mx += 1\n    x = 0\n    ans = 0\n    while x < len(a) and False in arr:\n        while x < len(a) and arr[x]:\n            x += 1\n        leng = 1\n        y = x\n        z = x\n        while y + 2 < len(a) and arr[y + 2] == False:\n            leng += 2\n            y += 2\n        while x < len(a):\n            arr[x] = True\n            x += 2\n            if x > y:\n                ans += 1\n                break\n        x = z + 1\n    print(min(ans, mx))", "tsc = int(input())\nfor i in range(tsc):\n    string1 = input()\n    string2 = input()\n    y = len(string1)\n    List = []\n    for i in range(0, y):\n        a = int(string1[i]) - int(string2[i])\n        List.append(abs(a))\n    count = List.count(1)\n    s = 0\n    for i in range(0, y - 2):\n        if List[i] == 1 and List[i + 2] == 1:\n            s += 1\n    print(count - s)", "t = int(input())\n\ndef count_distinct_groups(a, b, n) -> int:\n    i = n\n    groups = 0\n    while i < len(a):\n        if a[i] != b[i]:\n            groups += 1\n            while i < len(a) and a[i] != b[i]:\n                i += 2\n        i += 2\n    return groups\nfor i in range(t):\n    (a, b) = (input(), input())\n    print(count_distinct_groups(a, b, 0) + count_distinct_groups(a, b, 1))", "for _ in range(int(input())):\n    s1 = list(input())\n    s2 = list(input())\n    cnt = 0\n    for i in range(len(s1)):\n        bl = 0\n        j = i\n        while j < len(s1) and s1[j] != s2[j]:\n            s1[j] = s2[j]\n            j += 2\n            bl = 1\n        if bl:\n            cnt += 1\n    print(cnt)", "try:\n    for _ in range(int(input())):\n        a = input()\n        b = input()\n        cnt = 0\n        i = 0\n        while i < len(a):\n            if int(a[i]) ^ int(b[i]):\n                cnt += 1\n                while i < len(a) and int(a[i]) ^ int(b[i]):\n                    i += 2\n            i += 2\n        i = 1\n        while i < len(a):\n            if int(a[i]) ^ int(b[i]):\n                cnt += 1\n                while i < len(a) and int(a[i]) ^ int(b[i]):\n                    i += 2\n            i += 2\n        print(cnt)\nexcept:\n    pass", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    l = len(a)\n    ans = 0\n    i = 0\n    while i < l:\n        if a[i] != b[i]:\n            while i < l:\n                if a[i] == b[i]:\n                    break\n                i += 2\n            ans += 1\n        else:\n            i += 2\n    i = 1\n    while i < l:\n        if a[i] != b[i]:\n            while i < l:\n                if a[i] == b[i]:\n                    break\n                i += 2\n            ans += 1\n        else:\n            i += 2\n    print(ans)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    l = len(a)\n    ans = 0\n    i = 0\n    while i < l:\n        if a[i] != b[i]:\n            while i < l:\n                if a[i] == b[i]:\n                    break\n                i += 2\n            ans += 1\n        else:\n            i += 2\n    i = 1\n    while i < l:\n        if a[i] != b[i]:\n            while i < l:\n                if a[i] == b[i]:\n                    break\n                i += 2\n            ans += 1\n        else:\n            i += 2\n    print(ans)", "for _ in range(int(input())):\n    a = str(input())\n    b = str(input())\n    ali = list(a)\n    bli = list(b)\n    fnd = False\n    ans = 0\n    for i in range(0, len(ali), 2):\n        if ali[i] != bli[i]:\n            fnd = True\n        elif fnd:\n            ans += 1\n            fnd = False\n    if fnd:\n        ans += 1\n        fnd = False\n    for i in range(1, len(ali), 2):\n        if ali[i] != bli[i]:\n            fnd = True\n        elif fnd:\n            ans += 1\n            fnd = False\n    if fnd:\n        ans += 1\n        fnd = False\n    print(ans)", "T = int(input())\nfor tj in range(T):\n    s = input()\n    t = input()\n    if s == t:\n        print(0)\n        continue\n    else:\n        k = []\n        for i in range(len(s)):\n            if s[i] != t[i]:\n                k.append(1)\n            else:\n                k.append(0)\n    coun = 0\n    for i in range(len(k)):\n        if k[i] == 1:\n            k[i] = 0\n            coun += 1\n            if i + 2 < len(k):\n                for j in range(i + 2, len(k), 2):\n                    if k[j] == 1:\n                        k[j] = 0\n                    else:\n                        break\n    print(coun)", "T = int(input())\nfor tj in range(T):\n    s = input()\n    t = input()\n    if s == t:\n        print(0)\n        continue\n    else:\n        k = []\n        for i in range(len(s)):\n            if s[i] != t[i]:\n                k.append(1)\n            else:\n                k.append(0)\n    coun = 0\n    for i in range(len(k)):\n        if k[i] == 1:\n            k[i] = 0\n            coun += 1\n            if i + 2 < len(k):\n                for j in range(i + 2, len(k), 2):\n                    if k[j] == 1:\n                        k[j] = 0\n                    else:\n                        break\n    print(coun)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    n = len(a)\n    f = False\n    cnt = 0\n    for i in range(0, n, 2):\n        if a[i] != b[i]:\n            f = True\n        elif f:\n            cnt += 1\n            f = False\n    if f:\n        cnt += 1\n        f = False\n    f = False\n    for i in range(1, n, 2):\n        if a[i] != b[i]:\n            f = True\n        elif f:\n            cnt += 1\n            f = False\n    if f:\n        cnt += 1\n        f = False\n    print(cnt)", "def solve(a, b):\n    res = []\n    (iseven, isodd) = (False, False)\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            res.append(i)\n        if i % 2 == 0:\n            iseven = True\n        if i % 2 != 0:\n            isodd = True\n    if len(res) == 0:\n        print(0)\n        return\n    a_even = []\n    a_odd = []\n    for i in res:\n        if i % 2 == 0:\n            a_even.append(i)\n        else:\n            a_odd.append(i)\n    curr = -1\n    count = 0\n    for i in range(len(a_even)):\n        if curr == -1:\n            curr = a_even[i]\n            count += 1\n        elif curr + 2 == a_even[i]:\n            curr = a_even[i]\n        else:\n            curr = a_even[i]\n            count += 1\n    curr = -1\n    for i in range(len(a_odd)):\n        if curr == -1:\n            curr = a_odd[i]\n            count += 1\n        elif curr + 2 == a_odd[i]:\n            curr = a_odd[i]\n        else:\n            curr = a_odd[i]\n            count += 1\n    print(count)\nt = int(input())\nfor i in range(t):\n    a = input()\n    b = input()\n    solve(a, b)", "def solve(a, b):\n    res = []\n    (iseven, isodd) = (False, False)\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            res.append(i)\n        if i % 2 == 0:\n            iseven = True\n        if i % 2 != 0:\n            isodd = True\n    if len(res) == 0:\n        print(0)\n        return\n    a_even = []\n    a_odd = []\n    for i in res:\n        if i % 2 == 0:\n            a_even.append(i)\n        else:\n            a_odd.append(i)\n    curr = -1\n    count = 0\n    for i in range(len(a_even)):\n        if curr == -1:\n            curr = a_even[i]\n            count += 1\n        elif curr + 2 == a_even[i]:\n            curr = a_even[i]\n        else:\n            curr = a_even[i]\n            count += 1\n    curr = -1\n    for i in range(len(a_odd)):\n        if curr == -1:\n            curr = a_odd[i]\n            count += 1\n        elif curr + 2 == a_odd[i]:\n            curr = a_odd[i]\n        else:\n            curr = a_odd[i]\n            count += 1\n    print(count)\nt = int(input())\nfor i in range(t):\n    a = input()\n    b = input()\n    solve(a, b)", "def solve(a, b):\n    res = []\n    (iseven, isodd) = (False, False)\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            res.append(i)\n        if i % 2 == 0:\n            iseven = True\n        if i % 2 != 0:\n            isodd = True\n    if len(res) == 0:\n        print(0)\n        return\n    a_even = []\n    a_odd = []\n    for i in res:\n        if i % 2 == 0:\n            a_even.append(i)\n        else:\n            a_odd.append(i)\n    curr = -1\n    count = 0\n    for i in range(len(a_even)):\n        if curr == -1:\n            curr = a_even[i]\n            count += 1\n        elif curr + 2 == a_even[i]:\n            curr = a_even[i]\n        else:\n            curr = a_even[i]\n            count += 1\n    curr = -1\n    for i in range(len(a_odd)):\n        if curr == -1:\n            curr = a_odd[i]\n            count += 1\n        elif curr + 2 == a_odd[i]:\n            curr = a_odd[i]\n        else:\n            curr = a_odd[i]\n            count += 1\n    print(count)\nt = int(input())\nfor i in range(t):\n    a = input()\n    b = input()\n    solve(a, b)", "T = int(input())\nfor jj in range(T):\n    A = input()\n    B = input()\n    Ln = len(A)\n    (q1, q2) = (-1, -1)\n    tm = 0\n    (r1, r2) = (0, 0)\n    for i in range(Ln):\n        (a, b) = (A[i], B[i])\n        if a != b:\n            if i % 2:\n                if q1 == -1:\n                    q1 = i\n                    r1 = 1\n                elif i - q1 == 2:\n                    q1 = i\n                else:\n                    q1 = i\n                    tm += 1\n            elif q2 == -1:\n                q2 = i\n                r2 = 1\n            elif i - q2 == 2:\n                q2 = i\n            else:\n                tm += 1\n                q2 = i\n    print(tm + r1 + r2)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    e = []\n    o = []\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            if (i + 1) % 2 == 0:\n                e.append(i)\n            else:\n                o.append(i)\n    a = 0\n    for i in range(len(e) - 1):\n        if e[i + 1] - e[i] > 2:\n            a = a + 1\n    if len(e) != 0:\n        a = a + 1\n    for i in range(len(o) - 1):\n        if o[i + 1] - o[i] > 2:\n            a = a + 1\n    if len(o) != 0:\n        a = a + 1\n    print(a)", "mod = 1000000007\nfrom math import factorial, ceil, pow, sqrt, floor\nfrom sys import stdin, stdout\nfrom collections import defaultdict, Counter, deque\nfor _ in range(int(stdin.readline())):\n    a = list(stdin.readline().strip('\\n'))\n    b = list(stdin.readline().strip('\\n'))\n    (ans, n, c, i) = (0, len(a), 0, 0)\n    while i < n:\n        if a[i] != b[i]:\n            j = i\n            while j < n and a[j] != b[j]:\n                b[j] = a[j]\n                j += 2\n            ans += 1\n        i += 1\n    print(ans)", "mod = 1000000007\nfrom math import factorial, ceil, pow, sqrt, floor\nfrom sys import stdin, stdout\nfrom collections import defaultdict, Counter, deque\nfor _ in range(int(stdin.readline())):\n    a = list(stdin.readline().strip('\\n'))\n    b = list(stdin.readline().strip('\\n'))\n    (ans, n) = (0, len(a))\n    c = 0\n    i = 0\n    while i < n:\n        if a[i] != b[i]:\n            j = i\n            while j < n and a[j] != b[j]:\n                b[j] = a[j]\n                j += 2\n            ans += 1\n            i += 1\n        else:\n            i += 1\n    print(ans)", "def atoB():\n    t = int(input())\n    for _ in range(t):\n        a = list(input())\n        b = list(input())\n        n = len(a)\n        ans = 0\n        for i in range(n):\n            if a[i] != b[i]:\n                p = i\n                while p < n and a[p] != b[p]:\n                    a[p] = b[p]\n                    p += 2\n                ans += 1\n        print(ans)\natoB()", "for _ in range(int(input())):\n    a = list(input())\n    b = list(input())\n    c = 0\n    i = 0\n    while i < len(a):\n        if a[i] != b[i]:\n            j = i\n            while j < len(a) and a[j] != b[j]:\n                a[j] = b[j]\n                j += 2\n            c += 1\n        i += 1\n    print(c)", "import sys\nfor i in range(int(input())):\n    x = input()\n    y = input()\n    a = []\n    for i in x:\n        a.append(i)\n    b = []\n    for i in y:\n        b.append(i)\n    c = 0\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            continue\n        p = i\n        while p < len(a) and a[p] != b[p]:\n            a[p] = b[p]\n            p = p + 2\n        c = c + 1\n    print(c)", "for _ in range(int(input())):\n    a = list(input())\n    b = list(input())\n    c = 0\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            t = i\n            while t < len(a) and a[t] != b[t]:\n                a[t] = b[t]\n                t += 2\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    a = list(input())\n    b = list(input())\n    c = 0\n    li = []\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            t = i\n            while t < len(a) and a[t] != b[t]:\n                a[t] = b[t]\n                t += 2\n            c += 1\n    print(c)", "for i in range(int(input())):\n    a = list(input())\n    b = list(input())\n    c = 0\n    while len(a) > 0:\n        if a[0] == b[0]:\n            a.pop(0)\n            b.pop(0)\n        else:\n            c += 1\n            for i in range(0, len(a), 2):\n                if a[i] == b[i]:\n                    break\n                else:\n                    a[i] = b[i]\n    print(c)", "t = int(input())\nfor _ in range(t):\n    a = list(input())\n    b = list(input())\n    c = 0\n    while len(a) > 0:\n        if a[0] == b[0]:\n            a.pop(0)\n            b.pop(0)\n        else:\n            c += 1\n            for i in range(0, len(a), 2):\n                if a[i] == b[i]:\n                    break\n                else:\n                    a[i] = b[i]\n    print(c)", "for _ in range(int(input())):\n    a = list(input())\n    b = list(input())\n    c = 0\n    while len(a) > 0:\n        if a[0] == b[0]:\n            a.pop(0)\n            b.pop(0)\n        else:\n            c += 1\n            for i in range(0, len(a), 2):\n                if a[i] == b[i]:\n                    break\n                else:\n                    a[i] = b[i]\n    print(c)", "from collections import deque\nfor _ in range(int(input())):\n    a = deque(input())\n    b = deque(input())\n    count = 0\n    while len(a) > 0:\n        if a[0] == b[0]:\n            a.popleft()\n            b.popleft()\n        else:\n            count += 1\n            for i in range(0, len(a), 2):\n                if a[i] == b[i]:\n                    break\n                else:\n                    a[i] = b[i]\n    print(count)", "from collections import deque\nfor _ in range(int(input())):\n    a = deque(input())\n    b = deque(input())\n    count = 0\n    while len(a) > 0:\n        if a[0] == b[0]:\n            a.popleft()\n            b.popleft()\n        else:\n            count += 1\n            for i in range(0, len(a), 2):\n                if a[i] == b[i]:\n                    break\n                else:\n                    a[i] = b[i]\n    print(count)", "for _ in range(int(input())):\n    s = input()\n    s1 = input()\n    c = 0\n    for i in range(len(s)):\n        if s[i] != s1[i]:\n            j = i\n            while s[j] != s1[j] and j < len(s):\n                s = s[:j] + s1[j] + s[j + 1:]\n                j = j + 2\n                if j >= len(s):\n                    break\n            c = c + 1\n    print(c)", "T = int(input())\nfor i in range(T):\n    a = list(input())\n    b = list(input())\n    count = 0\n    while len(a) > 0:\n        if a[0] == b[0]:\n            a.pop(0)\n            b.pop(0)\n        else:\n            count += 1\n            for i in range(0, len(a), 2):\n                if a[i] == b[i]:\n                    break\n                else:\n                    a[i] = b[i]\n    print(count)", "import sys\nins = lambda : sys.stdin.readline().strip()\ninarr = lambda s: list(map(s, sys.stdin.readline().strip().split()))\nouts = lambda n: sys.stdout.write(str(n) + '\\n')\noutarr = lambda li: sys.stdout.write(' '.join(map(str, li)) + '\\n')\ngcd = lambda a, b: b if a == 0 else gcd(b % a, a)\n\ndef solve(a, b):\n    n = len(a)\n    ans = 0\n    for i in range(n):\n        if a[i] == b[i]:\n            pass\n        else:\n            j = i\n            while j < n and a[j] != b[j]:\n                a[j] = b[j]\n                j += 2\n            ans += 1\n    outs(ans)\n    return\nt = int(ins())\nfor _ in range(t):\n    a = ins()\n    b = ins()\n    a = list(a)\n    b = list(b)\n    solve(a, b)", "try:\n    for _ in range(int(input())):\n        A = input()\n        B = input()\n        count = 0\n        i = 0\n        while i < len(A):\n            if A[i] != B[i]:\n                while i < len(A) and A[i] != B[i]:\n                    i += 2\n                count += 1\n            i = i + 2\n        i = 1\n        while i < len(A):\n            if A[i] != B[i]:\n                while i < len(A) and A[i] != B[i]:\n                    i = i + 2\n                count += 1\n            i = i + 2\n        print(count)\nexcept:\n    exit(0)", "try:\n    for _ in range(int(input())):\n        a = [int(i) for i in input()]\n        b = [int(i) for i in input()]\n        n = len(a)\n        i = 0\n        ans = 0\n        for y in range(2):\n            t = 0\n            while i <= n - 1:\n                if a[i] == b[i] and t > 0:\n                    ans += 1\n                    t = 0\n                t += 1\n                if a[i] == b[i] and t == 1:\n                    t = 0\n                i += 2\n            if t > 0:\n                ans += 1\n            i = 1\n        print(ans)\nexcept:\n    pass", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    n = len(a)\n    if a == b:\n        print(0)\n    else:\n        (s, i) = (0, 0)\n        while i < n:\n            if a[i] != b[i]:\n                while i < n and a[i] != b[i]:\n                    i += 2\n                s += 1\n            i += 2\n        i = 1\n        while i < n:\n            if a[i] != b[i]:\n                while i < n and a[i] != b[i]:\n                    i += 2\n                s += 1\n            i += 2\n        print(s)", "t = int(input())\nfor _ in range(t):\n    a = list(input())\n    b = list(input())\n    count = 0\n    while len(a) > 0:\n        if a[0] == b[0]:\n            a.pop(0)\n            b.pop(0)\n        else:\n            count += 1\n            for i in range(0, len(a), 2):\n                if a[i] == b[i]:\n                    break\n                else:\n                    a[i] = b[i]\n    print(count)", "t = int(input())\nfor _ in range(0, t):\n    a = input()\n    b = input()\n    m = len(a)\n    cnt = 0\n    i = 0\n    while i < m:\n        if a[i] != b[i]:\n            cnt += 1\n            while i + 2 < m and a[i + 2] != b[i + 2]:\n                i += 2\n        i += 2\n    i = 1\n    while i < m:\n        if a[i] != b[i]:\n            cnt += 1\n            while i + 2 < m and a[i + 2] != b[i + 2]:\n                i += 2\n        i += 2\n    print(cnt)", "for _ in range(int(input())):\n    s = list(input())\n    k = list(input())\n    count = 0\n    while len(s) > 0:\n        if s[0] == k[0]:\n            s.pop(0)\n            k.pop(0)\n        else:\n            count += 1\n            for i in range(0, len(s), 2):\n                if s[i] == k[i]:\n                    break\n                else:\n                    s[i] = k[i]\n    print(count)", "try:\n    t = int(input())\n    for i in range(0, t):\n        a = input()\n        b = input()\n        (o1, e1) = ('', '')\n        (o2, e2) = ('', '')\n        (s1, s2) = (0, 0)\n        for i in range(0, len(a)):\n            if i % 2 == 0:\n                o1 += a[i]\n                o2 += b[i]\n            else:\n                e1 += a[i]\n                e2 += b[i]\n        (op1, op2) = ('', '')\n        for i in range(0, len(o1)):\n            if o1[i] != o2[i]:\n                op1 += '1'\n            else:\n                op1 += '0'\n        from itertools import groupby\n        q = [(len(list(c)), str(k)) for (k, c) in groupby(op1)]\n        for i in range(0, len(q)):\n            if q[i][1] == '1':\n                s1 += 1\n        for i in range(0, len(e1)):\n            if e1[i] != e2[i]:\n                op2 += '1'\n            else:\n                op2 += '0'\n        from itertools import groupby\n        q1 = [(len(list(c)), str(k)) for (k, c) in groupby(op2)]\n        for i in range(0, len(q1)):\n            if q1[i][1] == '1':\n                s2 += 1\n        print(s1 + s2)\nexcept:\n    pass", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    n = len(a)\n    even_lis = []\n    odd_lis = []\n    for i in range(n):\n        if i % 2 == 0:\n            if a[i] == b[i]:\n                even_lis.append(0)\n            else:\n                even_lis.append(1)\n        elif a[i] == b[i]:\n            odd_lis.append(0)\n        else:\n            odd_lis.append(1)\n    count = 0\n    if 1 in even_lis:\n        init_i = even_lis.index(1)\n        flag = 1\n        for i in range(init_i, len(even_lis)):\n            if even_lis[i] == 0 and flag == 1:\n                count += 1\n                flag = 0\n            elif even_lis[i] == 1 and flag == 0:\n                flag = 1\n        if even_lis[-1] == 1:\n            count += 1\n    even_lis = odd_lis[:]\n    if 1 in even_lis:\n        init_i = even_lis.index(1)\n        flag = 1\n        for i in range(init_i, len(even_lis)):\n            if even_lis[i] == 0 and flag == 1:\n                count += 1\n                flag = 0\n            elif even_lis[i] == 1 and flag == 0:\n                flag = 1\n        if even_lis[-1] == 1:\n            count += 1\n    print(count)", "for i in range(int(input())):\n    flag = 0\n    n = list(input())\n    k = list(input())\n    for i in range(len(n)):\n        if n[i] == k[i]:\n            continue\n        else:\n            flag = flag + 1\n            j = i\n            while j < len(n) and n[j] != k[j]:\n                n[j] = k[j]\n                if j + 2 < len(n) and n[j + 2] != k[j + 2]:\n                    j += 2\n                else:\n                    break\n    if flag == 0:\n        print(flag)\n        continue\n    print(flag)", "def check(A, B):\n    ans = i = 0\n    while i < len(A):\n        if A[i] != B[i]:\n            while i < len(A) and A[i] != B[i]:\n                i += 2\n            ans += 1\n        i += 2\n    i = 1\n    while i < len(A):\n        if A[i] != B[i]:\n            while i < len(A) and A[i] != B[i]:\n                i += 2\n            ans += 1\n        i += 2\n    return ans\nT = int(input())\nfor i in range(T):\n    (A, B) = (input().strip(), input().strip())\n    print(check(A, B))", "def arrIn():\n    return list(map(int, input().split()))\n\ndef mapIn():\n    return map(int, input().split())\nfor tests in range(int(input())):\n    a = input()\n    b = input()\n    n = len(a)\n    c = 0\n    c1 = 0\n    for i in range(1, n, 2):\n        if a[i] == b[i]:\n            c += c1\n            c1 = 0\n        else:\n            c1 = 1\n    c += c1\n    c1 = 0\n    for i in range(0, n, 2):\n        if a[i] == b[i]:\n            c += c1\n            c1 = 0\n        else:\n            c1 = 1\n    c += c1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    x = []\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            x.append(i + 1)\n    if x:\n        ans = 0\n        v = {i: 0 for i in x}\n        for i in x:\n            if v[i] == 0:\n                while i in v:\n                    v[i] = 1\n                    i += 2\n                ans += 1\n        print(ans)\n    else:\n        print(0)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    aEven = ''\n    bEven = ''\n    aOdd = ''\n    bOdd = ''\n    for i in range(len(a)):\n        if i % 2 == 0:\n            aOdd += a[i]\n            bOdd += b[i]\n        else:\n            aEven += a[i]\n            bEven += b[i]\n    count = 0\n    switch = False\n    for i in range(len(aEven)):\n        if aEven[i] != bEven[i]:\n            switch = True\n        else:\n            if switch == True:\n                count += 1\n            switch = False\n    if switch == True:\n        count += 1\n    switch = False\n    for i in range(len(aOdd)):\n        if aOdd[i] != bOdd[i]:\n            switch = True\n        else:\n            if switch == True:\n                count += 1\n            switch = False\n    if switch == True:\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    i = 0\n    count = 0\n    while i < len(a):\n        if a[i] != b[i]:\n            while i < len(a) and a[i] != b[i]:\n                i += 2\n            count += 1\n        i += 2\n    i = 1\n    while i < len(a):\n        if a[i] != b[i]:\n            while i < len(a) and a[i] != b[i]:\n                i += 2\n            count += 1\n        i += 2\n    print(count)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    a__even = ''\n    a__odd = ''\n    b__even = ''\n    b__odd = ''\n    for i in range(len(a)):\n        if i % 2 == 1:\n            a__even += a[i]\n            b__even += b[i]\n        else:\n            a__odd += a[i]\n            b__odd += b[i]\n    cnt = 0\n    j = 0\n    for i in range(len(a__even)):\n        if a__even[i] != b__even[i]:\n            j += 1\n        else:\n            if j > 0:\n                cnt += 1\n            j = 0\n    if j > 0:\n        cnt += 1\n    j = 0\n    for i in range(len(a__odd)):\n        if a__odd[i] != b__odd[i]:\n            j += 1\n        else:\n            if j > 0:\n                cnt += 1\n            j = 0\n    if j > 0:\n        cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    a__even = ''\n    a__odd = ''\n    b__even = ''\n    b__odd = ''\n    for i in range(len(a)):\n        if i % 2 == 1:\n            a__even += a[i]\n            b__even += b[i]\n        else:\n            a__odd += a[i]\n            b__odd += b[i]\n    cnt = 0\n    j = 0\n    for i in range(len(a__even)):\n        if a__even[i] != b__even[i]:\n            j += 1\n        else:\n            if j > 0:\n                cnt += 1\n            j = 0\n    if j > 0:\n        cnt += 1\n    j = 0\n    for i in range(len(a__odd)):\n        if a__odd[i] != b__odd[i]:\n            j += 1\n        else:\n            if j > 0:\n                cnt += 1\n            j = 0\n    if j > 0:\n        cnt += 1\n    print(cnt)", "t = int(input())\noutput = []\nfor _ in range(t):\n    a = list(map(int, input()))\n    b = list(map(int, input()))\n    if a == b:\n        output.append('0')\n    else:\n        indices = []\n        for (index, (num1, num2)) in enumerate(zip(a, b)):\n            if num1 != num2:\n                indices.append(index + 1)\n        count = 0\n        while indices:\n            curr = indices[0]\n            while True:\n                if curr in indices:\n                    indices.remove(curr)\n                    curr += 2\n                else:\n                    break\n            count += 1\n        output.append(str(count))\nprint('\\n'.join(output))", "t = int(input())\noutput = []\nfor _ in range(t):\n    a = list(map(int, input()))\n    b = list(map(int, input()))\n    if a == b:\n        output.append('0')\n    else:\n        indices = []\n        for (index, (num1, num2)) in enumerate(zip(a, b)):\n            if num1 != num2:\n                indices.append(index + 1)\n        count = 0\n        while indices:\n            curr = indices[0]\n            while True:\n                if curr in indices:\n                    indices.remove(curr)\n                    curr += 2\n                else:\n                    break\n            count += 1\n        output.append(str(count))\nprint('\\n'.join(output))", "t = int(input())\noutput = []\nfor _ in range(t):\n    a = list(map(int, input()))\n    b = list(map(int, input()))\n    if a == b:\n        output.append('0')\n    else:\n        indices = []\n        for (index, (num1, num2)) in enumerate(zip(a, b)):\n            if num1 != num2:\n                indices.append(index + 1)\n        count = 0\n        while indices:\n            curr = indices[0]\n            while True:\n                if curr in indices:\n                    indices.remove(curr)\n                    curr += 2\n                else:\n                    break\n            count += 1\n        output.append(str(count))\nprint('\\n'.join(output))", "for _ in range(int(input())):\n    s = list(input())\n    k = list(input())\n    ans = 0\n    while s:\n        if s[0] == k[0]:\n            s.pop(0)\n            k.pop(0)\n        else:\n            ans += 1\n            for i in range(0, len(s), 2):\n                if s[i] != k[i]:\n                    s[i] = k[i]\n                else:\n                    break\n    print(ans)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    ans = 0\n    i = 0\n    while i < len(a):\n        if a[i] != b[i]:\n            while i + 2 < len(a) and a[i + 2] != b[i + 2]:\n                i += 2\n            ans += 1\n        i += 2\n    i = 1\n    while i < len(a):\n        if a[i] != b[i]:\n            while i + 2 < len(a) and a[i + 2] != b[i + 2]:\n                i += 2\n            ans += 1\n        i += 2\n    print(ans)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    ans = 0\n    i = 0\n    while i < len(a):\n        if a[i] != b[i]:\n            while i < len(a) and a[i] != b[i]:\n                i += 2\n            ans += 1\n        i += 2\n    i = 1\n    while i < len(a):\n        if a[i] != b[i]:\n            while i < len(a) and a[i] != b[i]:\n                i += 2\n            ans += 1\n        i += 2\n    print(ans)", "for _ in range(int(input())):\n    s = list(input())\n    k = list(input())\n    count = 0\n    while len(s) > 0:\n        if s[0] == k[0]:\n            s.pop(0)\n            k.pop(0)\n        else:\n            count += 1\n            for i in range(0, len(s), 2):\n                if s[i] == k[i]:\n                    break\n                else:\n                    s[i] = k[i]\n    print(count)"]