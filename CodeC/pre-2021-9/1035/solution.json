["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    k = int(input())\n    x = int(input())\n    ans1 = sum(a)\n    if k == n:\n        ans2 = 0\n        for i in a:\n            ans2 += i ^ x\n        print(max(ans1, ans2))\n        continue\n    delta = 0\n    diff = []\n    eles = 0\n    for i in a:\n        val = (i ^ x) - i\n        if val > 0:\n            delta += val\n            eles += 1\n        diff.append(val)\n    if eles % 2 and k % 2 == 0:\n        x = float('inf')\n        for i in diff:\n            x = min(x, abs(i))\n        delta -= x\n    print(ans1 + delta)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    k = int(input())\n    x = int(input())\n    ans1 = sum(a)\n    if k == n:\n        ans2 = 0\n        for i in a:\n            ans2 += i ^ x\n        print(max(ans1, ans2))\n        continue\n    delta = 0\n    diff = []\n    eles = 0\n    for i in a:\n        val = (i ^ x) - i\n        if val > 0:\n            delta += val\n            eles += 1\n        diff.append(val)\n    if eles % 2 and k % 2 == 0:\n        x = float('inf')\n        for i in diff:\n            x = min(x, abs(i))\n        delta -= x\n    print(ans1 + delta)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    k = int(input())\n    x = int(input())\n    ans1 = sum(a)\n    if k == n:\n        ans2 = 0\n        for i in a:\n            ans2 += i ^ x\n        print(max(ans1, ans2))\n        continue\n    delta = 0\n    diff = []\n    eles = 0\n    for i in a:\n        val = (i ^ x) - i\n        if val > 0:\n            delta += val\n            eles += 1\n        diff.append(val)\n    if eles % 2 and k % 2 == 0:\n        x = float('inf')\n        for i in diff:\n            x = min(x, abs(i))\n        delta -= x\n    print(ans1 + delta)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    val = 0\n    summation = 0\n    if k == n or x == 0:\n        for v in a:\n            val += v ^ x\n            summation += v\n        print(max(val, summation))\n        continue\n    cnt = 0\n    ans = 0\n    for v in a:\n        ans += max(v ^ x, v)\n        if v ^ x >= v:\n            cnt += 1\n    if k % 2 == 0 and cnt % 2 == 1:\n        mi = 10 ** 18\n        for v in a:\n            temp = (v ^ x) - v\n            if temp >= 0:\n                mi = min(mi, temp)\n        mx = -10 ** 18\n        for v in a:\n            temp = (v ^ x) - v\n            if temp <= 0:\n                mx = max(mx, temp)\n        print(max(ans - mi, ans + mx))\n        continue\n    print(ans)", "def test():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = sum(a)\n    k = int(input())\n    x = int(input())\n    d = [(a[i] ^ x) - a[i] for i in range(n)]\n    d.sort(reverse=True)\n    pre = [0 for i in range(n + 1)]\n    pre[0] = 0\n    for i in range(1, n + 1):\n        pre[i] = pre[i - 1] + d[i - 1]\n    c = 0\n    for i in range(n):\n        if d[i] > 0:\n            c += 1\n    i = 0\n    j = k\n    sm = 0\n    while i < j:\n        dd = j - i\n        kk = c // dd\n        kk = kk * dd\n        sm = max(sm, pre[kk])\n        if dd + kk <= n:\n            sm = max(sm, pre[dd + kk])\n        i += 1\n        j -= 1\n        if k == n:\n            break\n    ans += sm\n    print(ans)\ntt = int(input())\nfor _ in range(tt):\n    test()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    a.sort(key=lambda i: i - (i ^ x))\n    if k == n:\n        print(max(sum(a), sum((i ^ x for i in a))))\n        continue\n    if k % 2 == 0:\n        r = 0\n        i = 0\n        while 2 * i + 1 < n:\n            p = (a[2 * i] ^ x) + (a[2 * i + 1] ^ x)\n            q = a[2 * i] + a[2 * i + 1]\n            r += max(p, q)\n            i += 1\n        if n % 2 == 1:\n            r += a[-1]\n        print(r)\n    else:\n        print(sum((max(i, i ^ x) for i in a)))", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(n) for n in input().split()]\n    s1 = sum(l)\n    k = int(input())\n    x = int(input())\n    c = 0\n    lp = []\n    ln = []\n    for i in l:\n        r = (x ^ i) - i\n        if r >= 0:\n            c += 1\n            lp.append(r)\n        else:\n            ln.append(r)\n    nm = 0\n    pm = 0\n    sp = 0\n    sn = 0\n    if len(lp) > 0:\n        sp = sum(lp)\n        pm = min(lp)\n    if len(ln) > 0:\n        sn = sum(ln)\n        nm = max(ln)\n    if k == n:\n        print(max(s1, s1 + sp + sn))\n    elif k % 2 == 1:\n        print(max(sp + s1, s1))\n    elif c % 2 == 0:\n        print(sp + s1)\n    elif c < n:\n        print(max(s1 + sp - pm, s1 + sp + nm, s1))\n    else:\n        print(max(s1 + sp - pm, s1))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    if n == k:\n        s1 = 0\n        s2 = 0\n        for i in range(n):\n            s1 += a[i]\n            s2 += a[i] ^ x\n        print(max(s1, s2))\n        continue\n    if k % 2 == 1:\n        s1 = 0\n        for i in range(n):\n            s1 += max(a[i], a[i] ^ x)\n        print(s1)\n    else:\n        l = []\n        for i in range(n):\n            l.append((a[i] ^ x) - a[i])\n        l.sort(reverse=True)\n        s1 = sum(a)\n        best = 0\n        diff = 0\n        for i in range(n):\n            diff += l[i]\n            if i % 2 == 1 and diff > best:\n                best = diff\n        print(s1 + best)", "def func(x):\n    return x - (x ^ g)\ng = -1\nm = 0\nt = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    g = x\n    m = 0\n    a = sorted(l, key=func)\n    b = list()\n    for i in range(0, n):\n        b.append(a[i] ^ x)\n    s = 0\n    c = 0\n    if k == n:\n        print(max(sum(a), sum(b)))\n        continue\n    elif k % 2 == 0:\n        i = 0\n        while i + 1 < n:\n            if b[i] + b[i + 1] > a[i] + a[i + 1]:\n                s = s + b[i] + b[i + 1]\n                c = i + 2\n            i = i + 2\n        s = s + sum(a[c:])\n        print(s)\n    else:\n        i = 0\n        while i < n:\n            if b[i] > a[i]:\n                s = s + b[i]\n            else:\n                s = s + a[i]\n            i = i + 1\n        print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    val = 0\n    summation = 0\n    if k == n or x == 0:\n        for v in a:\n            val += v ^ x\n            summation += v\n        print(max(val, summation))\n        continue\n    cnt = 0\n    ans = 0\n    for v in a:\n        ans += max(v ^ x, v)\n        if v ^ x >= v:\n            cnt += 1\n    if k % 2 == 0 and cnt % 2 == 1:\n        mi = 10 ** 18\n        for v in a:\n            temp = (v ^ x) - v\n            if temp >= 0:\n                mi = min(mi, temp)\n        mx = -10 ** 18\n        for v in a:\n            temp = (v ^ x) - v\n            if temp <= 0:\n                mx = max(mx, temp)\n        print(max(ans - mi, ans + mx))\n        continue\n    print(ans)", "tcase = int(input())\nwhile tcase > 0:\n    tcase -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    s = sum(l)\n    if k == n:\n        s1 = 0\n        for i in range(n):\n            value = x ^ l[i]\n            s1 += value\n        if s1 > s:\n            print(s1)\n        else:\n            print(s)\n    else:\n        (diff_list, cnt_inc) = ([], 0)\n        for i in range(n):\n            value = x ^ l[i]\n            if value > l[i]:\n                s += value - l[i]\n                cnt_inc += 1\n            diff_list.append(int(abs(value - l[i])))\n        if k % 2 == 0 and cnt_inc % 2 == 1:\n            s -= min(diff_list)\n        print(s)", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(y) for y in input().split()]\n    k = int(input())\n    x = int(input())\n    if x == 0:\n        print(sum(a))\n        continue\n    b = [y ^ x for y in a]\n    if k == n:\n        print(max(sum(b), sum(a)))\n        continue\n    s = 0\n    dif = [0] * n\n    mi = sys.maxsize\n    ma = -mi - 1\n    pos = 0\n    for i in range(n):\n        dif[i] = b[i] - a[i]\n        s += a[i]\n        if dif[i] < 0:\n            if dif[i] > ma:\n                ma = dif[i]\n        else:\n            pos += 1\n            s += dif[i]\n            if dif[i] < mi:\n                mi = dif[i]\n    if k % 2 == 0 and pos % 2 != 0:\n        if ma + mi > 0:\n            s += ma\n        else:\n            s -= mi\n    print(s)", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    k = int(input())\n    x = int(input())\n    s1 = sum(arr)\n    jt = []\n    if n != k:\n        count = 0\n        for i in arr:\n            xor = i ^ x\n            if xor - i > 0:\n                s1 = s1 + (xor - i)\n                count += 1\n            jt.append(abs(xor - i))\n        if k % 2 == 0:\n            if count % 2 != 0:\n                print(s1 - min(jt))\n            else:\n                print(s1)\n        else:\n            print(s1)\n    else:\n        for i in range(0, len(arr)):\n            jt.append(arr[i] ^ x)\n        s2 = sum(jt)\n        if s2 > s1:\n            print(s2)\n        else:\n            print(s1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    k = int(input())\n    x = int(input())\n    m = []\n    notm = []\n    for ele in arr:\n        if ele ^ x > ele:\n            m.append(ele)\n        else:\n            notm.append(ele)\n    temp = sum(notm)\n    for ele in m:\n        temp += ele ^ x\n    if n == k:\n        sum1 = 0\n        for ele in arr:\n            sum1 += ele ^ x\n        print(max(sum1, sum(arr)))\n    elif len(m) % 2 == 1 and k % 2 == 0:\n        profitdiff = 10 ** 100\n        errordiff = 10 ** 100\n        for ele in m:\n            if abs(ele - (ele ^ x)) < profitdiff:\n                profitdiff = abs(ele - (ele ^ x))\n        for ele in notm:\n            if abs(ele - (ele ^ x)) < errordiff:\n                errordiff = abs(ele - (ele ^ x))\n        print(max(temp - errordiff, temp - profitdiff))\n    else:\n        print(temp)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    k = int(input())\n    x = int(input())\n    m = []\n    notm = []\n    for ele in arr:\n        if ele ^ x > ele:\n            m.append(ele)\n        else:\n            notm.append(ele)\n    temp = sum(notm)\n    for ele in m:\n        temp += ele ^ x\n    if n == k:\n        sum1 = 0\n        for ele in arr:\n            sum1 += ele ^ x\n        print(max(sum1, sum(arr)))\n    elif len(m) % 2 == 1 and k % 2 == 0:\n        profitdiff = 10 ** 100\n        errordiff = 10 ** 100\n        for ele in m:\n            if abs(ele - (ele ^ x)) < profitdiff:\n                profitdiff = abs(ele - (ele ^ x))\n        for ele in notm:\n            if abs(ele - (ele ^ x)) < errordiff:\n                errordiff = abs(ele - (ele ^ x))\n        print(max(temp - errordiff, temp - profitdiff))\n    else:\n        print(temp)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    l = []\n    for i in a:\n        xx = i ^ x\n        l.append(xx - i)\n    if k == n:\n        print(max(sum(a), sum(a) + sum(l)))\n        continue\n    ans = sum(a)\n    count = 0\n    for j in l:\n        if j > 0:\n            ans += j\n            count += 1\n    if k % 2 == 0 and count % 2 == 1:\n        r = 10000000000000\n        for j in l:\n            r = min(r, abs(j))\n        ans -= r\n    print(ans)", "def debug(A, X):\n    for i in A:\n        print(i, '--', i ^ X)\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    k = int(input())\n    X = int(input())\n    P = []\n    N = []\n    for i in A:\n        if i ^ X > i:\n            P.append(i)\n        else:\n            N.append(i)\n    m = len(P)\n    temp = sum(N)\n    for i in P:\n        temp += i ^ X\n    if n == k:\n        temp = 0\n        for i in A:\n            temp += i ^ X\n        print(max(temp, sum(A)))\n    elif m % 2 == 1 and k % 2 == 0:\n        mn = 999999999999\n        mp = 999999999999\n        for i in N:\n            if mn > i - (i ^ X):\n                mn = i - (i ^ X)\n        for i in P:\n            if mp > (i ^ X) - i:\n                mp = (i ^ X) - i\n        print(max(temp - mn, temp - mp))\n    else:\n        print(temp)", "from collections import defaultdict\nT = int(input())\nfor test in range(T):\n    N = int(input())\n    A = [int(v) for v in input().split()]\n    K = int(input())\n    X = int(input())\n    smallest_gain = float('inf')\n    smallest_loss = -float('inf')\n    base = 0\n    total_gain = 0\n    total_loss = 0\n    pos_count = 0\n    for m in A:\n        base += m\n        change = X - 2 * (m & X)\n        if change > 0:\n            total_gain += change\n            pos_count += 1\n            if change < smallest_gain:\n                smallest_gain = change\n        else:\n            total_loss += change\n            if change > smallest_loss:\n                smallest_loss = change\n    if K == N:\n        print(max(base + total_gain + total_loss, base))\n        continue\n    if K & 1 or pos_count % 2 == 0:\n        print(base + total_gain)\n        continue\n    elif smallest_loss + smallest_gain > 0:\n        print(base + total_gain + smallest_loss)\n    else:\n        print(base + total_gain - smallest_gain)", "import sys\n\ndef read_line():\n    return sys.stdin.readline()[:-1]\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_int_line():\n    return [int(v) for v in sys.stdin.readline().split()]\nT = read_int()\nfor _test in range(T):\n    N = read_int()\n    A = read_int_line()\n    K = read_int()\n    X = read_int()\n    if X == 0 or K == N:\n        ans1 = 0\n        ans2 = 0\n        for v in A:\n            ans1 += v\n            ans2 += v ^ X\n        print(max(ans1, ans2))\n        continue\n    K %= 2\n    ans = 0\n    cnt = 0\n    for v in A:\n        val = max(v, v ^ X)\n        ans += val\n        if val == v ^ X:\n            cnt += 1\n    if K == 0 and cnt % 2 == 1:\n        rem = 10 ** 18\n        for x in A:\n            v = (x ^ X) - x\n            if v >= 0:\n                rem = min(rem, v)\n        add = -10 ** 18\n        for x in A:\n            v = (x ^ X) - x\n            if v <= 0:\n                add = max(add, v)\n        ans = max(ans - rem, ans + add)\n    print(ans)", "t = int(input())\nfor T in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    k = int(input())\n    x = int(input())\n    (s1, s2) = (0, 0)\n    l = []\n    if k == n:\n        for i in range(n):\n            s1 += a[i]\n            s2 += a[i] ^ x\n        print(max(s1, s2))\n    elif k % 2 != 0:\n        for i in range(n):\n            s1 += max(a[i], a[i] ^ x)\n        print(s1)\n    else:\n        for i in range(n):\n            l.append((a[i] ^ x) - a[i])\n        l.sort(reverse=True)\n        s1 = sum(a)\n        (h, diff) = (0, 0)\n        for i in range(n):\n            diff += l[i]\n            if i % 2 == 1 and diff > h:\n                h = diff\n        print(s1 + h)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    s = sum(a)\n    if k == n:\n        b = [i ^ x for i in a]\n        s = max(s, sum(b))\n    else:\n        d = [(i ^ x) - i for i in a]\n        d.sort(reverse=True)\n        if k % 2 == 1:\n            for i in d:\n                if i > 0:\n                    s += i\n        else:\n            for i in range(0, n - 1, 2):\n                ss = d[i] + d[i + 1]\n                if ss > 0:\n                    s += ss\n    print(s)", "try:\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        ls = list(map(int, input().split(' ')))\n        k = int(input())\n        x = int(input())\n        s = sum(ls)\n        xor_list = []\n        for j in ls:\n            xor_list.append((j ^ x) - j)\n        xor_list = sorted(xor_list)\n        pos = 0\n        index = len(xor_list) - 1\n        while index >= 0 and xor_list[index] > 0:\n            pos += 1\n            index -= 1\n        mainls = []\n        if k % 2 == 0 and pos % 2 != 0:\n            if n >= k + 1:\n                if pos + 1 <= n:\n                    mainls = [pos - 1, pos + 1]\n                else:\n                    mainls = [pos - 1]\n            else:\n                mainls = [0, n]\n        elif n >= k + 1:\n            mainls = [pos]\n        else:\n            mainls = [0, n]\n        possible_answers = []\n        for j in mainls:\n            start_index = n - j\n            num = 0\n            for k in range(start_index, n):\n                num += xor_list[k]\n            possible_answers.append(num)\n        possible_answers.append(0)\n        print(s + max(possible_answers))\nexcept Exception as e:\n    pass", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    b = []\n    for j in range(n):\n        b.append((a[j] ^ x) - a[j])\n    b.sort()\n    ptr = 0\n    while ptr < n and b[ptr] <= 0:\n        ptr += 1\n    c = n - ptr\n    val = 0\n    for i in range(ptr, n):\n        val += b[i]\n    if k == n:\n        print(max(sum(a) + sum(b), sum(a)))\n    elif c == n:\n        if c % 2 == 0 or k % 2 != 0:\n            print(sum(a) + val)\n        else:\n            print(sum(a) + val - b[ptr])\n    elif k % 2 == 0:\n        if c % 2 == 0:\n            print(sum(a) + val)\n        else:\n            print(max(sum(a) + val - b[ptr], sum(a) + val + b[ptr - 1]))\n    else:\n        print(sum(a) + val)", "testcase = int(input())\nfor _ in range(testcase):\n    N = int(input())\n    l1 = [int(x) for x in input().split()]\n    k = int(input())\n    x = int(input())\n    if k == N:\n        s1 = s2 = 0\n        for i in l1:\n            s1 += i\n            s2 += i ^ x\n        print(max(s1, s2))\n    elif k % 2 == 0:\n        l2 = [(i ^ x) - i for i in l1]\n        l2.sort(reverse=True)\n        diff = best = 0\n        for i in range(N):\n            diff += l2[i]\n            if i % 2 == 1 and diff > best:\n                best = diff\n        print(sum(l1) + best)\n    else:\n        s = 0\n        for i in l1:\n            s += max(i, i ^ x)\n        print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    diff = []\n    xor = []\n    count = 0\n    ans = sum(a)\n    for i in range(n):\n        if (a[i] ^ x) - a[i] > 0:\n            count += 1\n            ans += (a[i] ^ x) - a[i]\n        diff.append((a[i] ^ x) - a[i])\n        xor.append(a[i] ^ x)\n    diff.sort(reverse=True)\n    mval = 100000000000\n    for i in diff:\n        mval = min(mval, abs(i))\n    if k < n:\n        if count % 2 != 0 and k % 2 == 0:\n            print(ans - mval)\n        else:\n            print(ans)\n    else:\n        print(max(sum(a), sum(xor)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    k = int(input())\n    x = int(input())\n    count = 0\n    add_arr = sum(arr)\n    profit = [0] * n\n    for (index, i) in enumerate(arr):\n        c = (i ^ x) - i\n        profit[index] = c\n        if c > 0:\n            count += 1\n    profit = sorted(profit, reverse=True)\n    add_profit = sum(profit)\n    if k == n:\n        print(max(add_arr, add_arr + add_profit))\n    elif count % 2 == 0 or k % 2 == 1:\n        print(add_arr + sum(profit[:count]))\n    else:\n        increment = 0\n        if count < n:\n            increment = profit[count - 1] + profit[count]\n        print(max(add_arr + sum(profit[:count - 1]), add_arr + sum(profit[:count - 1]) + increment))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    s = sum(l)\n    d = list()\n    k = int(input())\n    x = int(input())\n    d = [(j ^ x) - j for j in l]\n    d.sort(reverse=True)\n    sd = sum(d)\n    if n == k:\n        if sd > 0:\n            s += sd\n    elif k % 2 == 0:\n        for j in range(0, n - 1, 2):\n            ss = sum(d[j:j + 2])\n            if ss > 0:\n                s += ss\n    else:\n        for j in range(n):\n            if d[j] > 0:\n                s += d[j]\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    s = sum(l)\n    d = list()\n    k = int(input())\n    x = int(input())\n    d = [(j ^ x) - j for j in l]\n    d.sort(reverse=True)\n    sd = sum(d)\n    if n == k:\n        if sd > 0:\n            s += sd\n    elif k % 2 == 0:\n        for j in range(0, n - 1, 2):\n            ss = d[j] + d[j + 1]\n            if ss > 0:\n                s += ss\n    else:\n        for j in range(n):\n            if d[j] > 0:\n                s += d[j]\n    print(s)", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = []\n    arr = []\n    b = []\n    sum1 = 0\n    sum2 = 0\n    sum = 0\n    arr = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    for i in range(n):\n        sum = sum + arr[i]\n    dict1 = []\n    dict2 = []\n    for i in range(n):\n        d = []\n        x1 = x ^ arr[i]\n        if x1 >= arr[i]:\n            d.append(x1)\n            d.append(i)\n            dict1.append(d)\n        else:\n            d.append(x1)\n            d.append(i)\n            dict2.append(d)\n    l1 = len(dict1)\n    l2 = len(dict2)\n    for i in range(l1):\n        a.append(dict1[i][0] - arr[dict1[i][1]])\n    for i in range(l2):\n        b.append(arr[dict2[i][1]] - dict2[i][0])\n    a.sort()\n    b.sort()\n    if l1 == 0:\n        print(sum)\n    elif k == n:\n        for i in range(l1):\n            sum1 = sum1 + a[i]\n        for i in range(l2):\n            sum2 = sum2 + b[i]\n        if sum1 >= sum2:\n            for i in range(l1):\n                sum = sum + dict1[i][0] - arr[dict1[i][1]]\n            for i in range(l2):\n                sum = sum - arr[dict2[i][1]] + dict2[i][0]\n            print(sum)\n        else:\n            print(sum)\n    elif k % 2 == 0:\n        if n > k:\n            if l1 % 2 == 0 or l1 % k == 0:\n                for i in range(l1):\n                    sum = sum + dict1[i][0] - arr[dict1[i][1]]\n                print(sum)\n            elif l2 == 0:\n                for i in range(l1):\n                    sum = sum + dict1[i][0] - arr[dict1[i][1]]\n                print(sum - a[0])\n            elif a[0] >= b[0]:\n                for i in range(l1):\n                    sum = sum + dict1[i][0] - arr[dict1[i][1]]\n                print(sum - b[0])\n            else:\n                for i in range(l1):\n                    sum = sum + dict1[i][0] - arr[dict1[i][1]]\n                print(sum - a[0])\n    else:\n        for i in range(l1):\n            sum = sum + dict1[i][0] - arr[dict1[i][1]]\n        print(sum)", "T = int(input())\nfor ieq in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    K = int(input())\n    X = int(input())\n    xored = []\n    diffs = []\n    for a in A:\n        xored.append(a ^ X)\n    sum1 = sum(A)\n    for i in range(N):\n        diffs.append(xored[i] - A[i])\n    if N == K:\n        print(max(sum1, sum(xored)))\n        continue\n    if K % 2 == 1:\n        s1 = 0\n        for i in range(N):\n            s1 += max(A[i], A[i] ^ X)\n        print(s1)\n    else:\n        diffs.sort(reverse=True)\n        best = 0\n        diff = 0\n        for i in range(N):\n            diff += diffs[i]\n            if i % 2 == 1 and diff > best:\n                best = diff\n        print(sum1 + best)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    sum = 0\n    sum1 = 0\n    sum2 = 0\n    for i in a:\n        sum2 = sum2 + i\n    if n == k:\n        for i in a:\n            sum = sum + i\n            sum1 = sum1 + (x ^ i)\n        print(max(sum, sum1))\n    elif k % 2 != 0:\n        for i in a:\n            sum = sum + max(i, x ^ i)\n        print(max(sum, sum2))\n    else:\n        defe = 0\n        best = 0\n        d = []\n        for i in a:\n            d.append((x ^ i) - i)\n        d.sort()\n        d.reverse()\n        for i in range(0, len(d)):\n            j = d[i]\n            defe = defe + j\n            if i % 2 == 1:\n                best = max(best, defe)\n        for i in a:\n            best = best + i\n        print(max(best, sum2))", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    pos = []\n    neg = []\n    ans = sum(arr)\n    for i in range(n):\n        xx = (arr[i] ^ x) - arr[i]\n        if xx >= 0:\n            pos.append(xx)\n        else:\n            neg.append(xx)\n    if k == n:\n        temp = 0\n        for i in range(n):\n            temp += (arr[i] ^ x) - arr[i]\n        if temp > 0:\n            ans += temp\n        print(ans)\n        continue\n    elif k % 2 == 1:\n        print(ans + sum(pos))\n        continue\n    else:\n        pos = sorted(pos, reverse=True)\n        neg = sorted(neg, reverse=True)\n        temp = 0\n        if len(pos) % 2:\n            temp += sum(pos[0:len(pos) - 1])\n            if len(neg) > 0:\n                yy = pos[-1] + neg[0]\n                if yy > 0:\n                    temp += yy\n        else:\n            temp += sum(pos)\n        print(ans + temp)", "t = int(input())\nwhile t:\n    n = int(input())\n    ar = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    change = []\n    for i in range(n):\n        temp = (ar[i] ^ x) - ar[i]\n        change.append(temp)\n    change.sort(reverse=True)\n    summ = 0\n    i = 0\n    if k == n:\n        summ = max(0, sum(change))\n    elif k % 2 == 0:\n        step = 2\n        while i <= n - step:\n            if sum(change[i:i + step]) > 0:\n                summ += sum(change[i:i + step])\n                for z in range(i, i + step):\n                    change[z] = -1 * change[z]\n            i += step\n        change.sort(reverse=True)\n        while i <= n - step:\n            if sum(change[i:i + step]) > 0:\n                summ += sum(change[i:i + step])\n                for z in range(i, i + step):\n                    change[z] = -1 * change[z]\n            i += step\n    else:\n        step = 1\n        while i <= n - step:\n            if sum(change[i:i + step]) > 0:\n                summ += sum(change[i:i + step])\n            else:\n                break\n            i += step\n    print(sum(ar) + summ)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    sum1 = 0\n    sum2 = 0\n    if n == k:\n        sum1 = sum(arr)\n        for i in range(n):\n            sum2 += arr[i] ^ x\n        ans = max(sum1, sum2)\n    elif k % 2 == 1:\n        for i in range(n):\n            sum1 += max(arr[i], arr[i] ^ x)\n        ans = sum1\n    else:\n        differnece_arr = []\n        for i in range(n):\n            differnece_arr.append((arr[i] ^ x) - arr[i])\n        differnece_arr.sort(reverse=True)\n        sum1 = sum(arr)\n        greatest = 0\n        difference = 0\n        for i in range(n):\n            difference += differnece_arr[i]\n            if i % 2 == 1 and difference > greatest:\n                greatest = difference\n        ans = sum1 + greatest\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    if n == k:\n        s1 = 0\n        s2 = 0\n        for i in range(n):\n            s1 += a[i]\n            s2 += a[i] ^ x\n        print(max(s1, s2))\n        continue\n    if k % 2 == 1:\n        s1 = 0\n        for i in range(n):\n            s1 += max(a[i], a[i] ^ x)\n        print(s1)\n    else:\n        l = []\n        for i in range(n):\n            l.append((a[i] ^ x) - a[i])\n        l.sort(reverse=True)\n        s1 = sum(a)\n        best = 0\n        diff = 0\n        for i in range(n):\n            diff += l[i]\n            if i % 2 == 1 and diff > best:\n                best = diff\n        print(s1 + best)", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    b = [int(i) for i in input().split()]\n    k = int(input())\n    x = int(input())\n    c = [0] * len(b)\n    d = [0] * len(b)\n    for i in range(len(b)):\n        c[i] = (b[i] ^ x) - b[i]\n    for i in range(len(b)):\n        d[i] = b[i] ^ x\n    c.sort(reverse=True)\n    ctr1 = 0\n    ctr2 = 0\n    for i in range(len(c)):\n        if c[i] > 0:\n            ctr1 += 1\n        else:\n            ctr2 += 1\n    hold = 0\n    for j in range(ctr1):\n        hold += c[j]\n    if k % 2 == 0 and ctr1 % 2 == 0 and (k < n):\n        print(sum(b) + hold)\n    elif k % 2 == 0 and ctr1 % 2 == 1 and (k < n):\n        if ctr1 < len(c):\n            print(sum(b) + max(hold - c[ctr1 - 1], hold + c[ctr1]))\n        else:\n            print(sum(b) + hold - c[ctr1 - 1])\n    elif k % 2 == 1 and ctr1 % 2 == 0 and (k < n):\n        print(sum(b) + hold)\n    elif k % 2 == 1 and ctr1 % 2 == 1 and (k < n):\n        print(sum(b) + hold)\n    elif k == n:\n        print(max(sum(b), sum(b) + sum(c)))", "for t in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    j = int(input())\n    x = int(input())\n    d = []\n    summ = cnt = 0\n    for i in l:\n        d.append((i ^ x) - i)\n    d.sort(reverse=True)\n    for i in d:\n        if i >= 0:\n            cnt += 1\n        else:\n            break\n    if j == n:\n        s1 = sum(d)\n        s2 = sum(l)\n        if s1 > 0:\n            print(s1 + s2)\n        else:\n            print(s2)\n    elif j % 2 == 0:\n        if cnt % 2 == 0:\n            summ += sum(d[:cnt])\n        else:\n            summ += sum(d[:cnt - 1])\n            if cnt + 1 <= n:\n                if summ + d[cnt - 1] + d[cnt] > summ:\n                    summ += d[cnt - 1] + d[cnt]\n        print(summ + sum(l))\n    elif j % 2 == 1:\n        for i in d:\n            if i >= 0:\n                summ += i\n            else:\n                break\n        print(summ + sum(l))", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    if k == n:\n        sm = xsum = 0\n        for i in range(n):\n            sm += a[i]\n            xsum += a[i] ^ x\n        print(max(sm, xsum))\n        continue\n    mdec = minc = 10 ** 15\n    sm = 0\n    xsum = 0\n    linc = 0\n    for i in range(n):\n        if a[i] < a[i] ^ x:\n            minc = min(minc, (a[i] ^ x) - a[i])\n            xsum += a[i] ^ x\n            linc += 1\n        else:\n            mdec = min(mdec, a[i] - (a[i] ^ x))\n            sm += a[i]\n    if linc % 2 == 0 or (linc + k) % 2 == 0:\n        print(sm + xsum)\n    elif linc != n:\n        print(xsum + sm - min(mdec, minc))\n    else:\n        print(xsum - minc)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    if n == k:\n        s1 = 0\n        s2 = 0\n        for i in range(n):\n            s1 += a[i]\n            s2 += a[i] ^ x\n        print(max(s1, s2))\n        continue\n    if k % 2 == 1:\n        s1 = 0\n        for i in range(n):\n            s1 += max(a[i], a[i] ^ x)\n        print(s1)\n    else:\n        l = []\n        for i in range(n):\n            l.append((a[i] ^ x) - a[i])\n        l.sort(reverse=True)\n        s1 = sum(a)\n        best = 0\n        diff = 0\n        for i in range(n):\n            diff += l[i]\n            if i % 2 == 1 and diff > best:\n                best = diff\n        print(s1 + best)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    if n == k:\n        s1 = 0\n        s2 = 0\n        for i in range(n):\n            s1 += a[i]\n            s2 += a[i] ^ x\n        print(max(s1, s2))\n        continue\n    if k % 2 == 1:\n        s1 = 0\n        for i in range(n):\n            s1 += max(a[i], a[i] ^ x)\n        print(s1)\n    else:\n        l = []\n        for i in range(n):\n            l.append((a[i] ^ x) - a[i])\n        l.sort(reverse=True)\n        s1 = sum(a)\n        best = 0\n        diff = 0\n        for i in range(n):\n            diff += l[i]\n            if i % 2 == 1 and diff > best:\n                best = diff\n        print(s1 + best)", "for t in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    j = int(input())\n    x = int(input())\n    d = []\n    summ = cnt = 0\n    for i in l:\n        d.append((i ^ x) - i)\n    d.sort(reverse=True)\n    for i in d:\n        if i >= 0:\n            cnt += 1\n        else:\n            break\n    if j == n:\n        s1 = sum(d)\n        s2 = sum(l)\n        if s1 > 0:\n            print(s1 + s2)\n        else:\n            print(s2)\n    elif j % 2 == 0:\n        if cnt % 2 == 0:\n            summ += sum(d[:cnt])\n        else:\n            summ += sum(d[:cnt - 1])\n            if cnt + 1 <= n:\n                if summ + d[cnt - 1] + d[cnt] > summ:\n                    summ += d[cnt - 1] + d[cnt]\n        print(summ + sum(l))\n    elif j % 2 == 1:\n        for i in d:\n            if i >= 0:\n                summ += i\n            else:\n                break\n        print(summ + sum(l))", "t = int(input())\n\ndef solve(n, lista, k, x):\n    suma = sum(lista)\n    listb = [i ^ x for i in lista]\n    sumb = sum(listb)\n    (diffarr, cnt) = ([], 0)\n    for i in range(n):\n        diffarr.append(lista[i] - listb[i])\n        if lista[i] - listb[i] < 0:\n            cnt += 1\n    if n == k:\n        if suma > sumb:\n            print(suma)\n        else:\n            print(sumb)\n    else:\n        (syssum, val) = (0, 9999999999999999999999999)\n        for i in range(n):\n            val = min(val, abs(diffarr[i]))\n            if diffarr[i] > 0:\n                syssum += lista[i]\n            else:\n                syssum += listb[i]\n        if k % 2 == 1:\n            print(syssum)\n        elif cnt % 2 == 1:\n            print(syssum - val)\n        else:\n            print(syssum)\nfor test in range(t):\n    n = int(input())\n    lista = [int(i) for i in input().split()]\n    k = int(input())\n    x = int(input())\n    solve(n, lista, k, x)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    if x == 0:\n        print(sum(arr))\n    elif n == k:\n        sum1 = sum(arr)\n        brr = [h ^ x for h in arr]\n        sum2 = sum(brr)\n        print(max(sum1, sum2))\n    else:\n        pr = []\n        mr = []\n        for q in arr:\n            w = (q ^ x) - q\n            if w > 0:\n                pr.append(w)\n            else:\n                mr.append(w)\n        ml = len(mr)\n        pl = len(pr)\n        sm = 0\n        if pl > 0:\n            if pl % 2 == 0 or k % 2 == 1:\n                sm += sum(pr)\n            else:\n                temp1 = min(pr)\n                sm += sum(pr) - temp1\n                if ml > 0:\n                    temp2 = max(mr)\n                    if temp1 + temp2 >= 0:\n                        sm += temp2 + temp1\n        print(sum(arr) + sm)", "t = input()\nt = int(t)\nfor i in range(t):\n    n = input()\n    n = int(n)\n    A = list(map(int, input().split()))\n    k = input()\n    k = int(k)\n    x = input()\n    x = int(x)\n    A_sum = sum(A)\n    if n == k:\n        tempSum = 0\n        for j in range(n):\n            temp = A[j] ^ x\n            tempSum += temp\n        if A_sum < tempSum:\n            print(tempSum)\n        else:\n            print(A_sum)\n    else:\n        times = 0\n        tempSum = A_sum\n        Min = 9999999999999\n        for j in range(n):\n            temp = A[j] ^ x\n            if temp - A[j] > 0:\n                tempSum += temp - A[j]\n                times += 1\n            if abs(temp - A[j]) < Min:\n                Min = abs(temp - A[j])\n        if k % 2 == 0 and times % 2 != 0:\n            print(tempSum - Min)\n        else:\n            print(tempSum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    dx = []\n    k = int(input())\n    x = int(input())\n    dx = [(j ^ x) - j for j in l]\n    dx.sort(reverse=True)\n    sd = int(sum(dx))\n    s = int(sum(l))\n    if n == k:\n        if sd > 0:\n            s += sd\n    elif k % 2 == 0:\n        s1 = s\n        s2 = s\n        s3 = s\n        v = 0\n        for j in range(n):\n            if dx[j] > 0:\n                v += 1\n        if v % 2 != 0:\n            r = 0\n            while r < v - 1:\n                s1 += dx[r]\n                r += 1\n                s2 = s1\n            if v + 1 <= n:\n                while r < v + 1:\n                    s2 += dx[r]\n                    r += 1\n            s = max(s1, s2, s3)\n        else:\n            r = 0\n            while r < v:\n                s += dx[r]\n                r += 1\n    else:\n        r = 0\n        while r < n and dx[r] > 0:\n            s += dx[r]\n            r += 1\n    print(s)", "def solve():\n    n = int(input())\n    A = [int(a) for a in input().split()]\n    k = int(input())\n    x = int(input())\n    ans = 0\n    B = []\n    for i in range(n):\n        B.append((x ^ A[i]) - A[i])\n        ans += A[i]\n    if k == n:\n        t = 0\n        for i in range(n):\n            t += B[i]\n        return max(ans, ans + t)\n    B.sort(reverse=True)\n    m = n\n    for i in range(n):\n        if B[i] < 0:\n            m = i\n            break\n        else:\n            ans += B[i]\n    if m % k == 0 or m % 2 == 0 or k % 2 == 1:\n        return ans\n    if m == n:\n        return ans - B[m - 1]\n    return max(ans - B[m - 1], ans + B[m])\nt = int(input())\nfor x in range(t):\n    print(solve())", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    l = list(map(int, input().split()))\n    K = int(input())\n    X = int(input())\n    l2 = []\n    for j in range(N):\n        l2.append((X ^ l[j]) - l[j])\n    l2.sort()\n    l2.reverse()\n    count = 0\n    if N == K:\n        if count < sum(l2[:K]):\n            count = sum(l2[:K])\n    else:\n        d = len(l2)\n        for j in range(len(l2)):\n            if l2[j] < 0:\n                d = j\n                break\n        if K % 2 == 0:\n            c = d // 2\n            if 2 * c + 2 <= N:\n                count = max(count, sum(l2[:2 * c]), sum(l2[:2 * c + 2]))\n            else:\n                count = max(count, sum(l2[:2 * c]))\n        elif sum(l2[:d]) > count:\n            count = sum(l2[:d])\n    print(count + sum(l))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    (count, ans1, ans2, ans, neg) = (0, 0, 0, 0, 44)\n    (diff, countp) = ([], 0)\n    for i in range(n):\n        count += arr[i]\n        if x ^ arr[i] > arr[i]:\n            diff.append((x ^ arr[i]) - arr[i])\n            countp += 1\n        elif neg == 44:\n            neg = (x ^ arr[i]) - arr[i]\n        elif (x ^ arr[i]) - arr[i] > neg:\n            neg = (x ^ arr[i]) - arr[i]\n    diff.sort(reverse=True)\n    if k == n:\n        ans1 = count\n        for i in range(n):\n            ans1 += (x ^ arr[i]) - arr[i]\n        if ans1 > count:\n            ans = ans1\n        else:\n            ans = count\n    elif k % 2 == 0:\n        if countp % 2:\n            for i in range(len(diff) - 1):\n                ans1 += diff[i]\n            if neg != 44:\n                ans2 = ans1 + diff[len(diff) - 1] + neg\n            if ans1 > ans2:\n                count += ans1\n            else:\n                count += ans2\n            ans = count\n        else:\n            for i in range(len(diff)):\n                count += diff[i]\n            ans = count\n    else:\n        for i in range(len(diff)):\n            count += diff[i]\n        ans = count\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    diff_negative = []\n    dif_positive = []\n    c = 0\n    SALSAL = 0\n    sn = 0\n    if k == n:\n        fir = sum(l)\n        sec = 0\n        for i in l:\n            sec = sec + (i ^ x)\n        print(max(fir, sec))\n    if k < n:\n        for i in l:\n            xo = i - (i ^ x)\n            SALSAL = SALSAL + i\n            if xo < 0:\n                diff_negative.append(xo)\n                dif_positive.append(-xo)\n                c = c + 1\n                sn = sn - xo\n            else:\n                dif_positive.append(xo)\n        mi = min(dif_positive)\n        if k % 2 == 0:\n            if (c + k) % 2 == 0:\n                ANSWER = SALSAL + sn\n            else:\n                ANSWER = SALSAL + sn\n                ANSWER = ANSWER - mi\n        else:\n            ANSWER = sn + SALSAL\n        print(ANSWER)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    l = input()\n    l = list(map(int, l.split(' ')))\n    k = int(input())\n    x = int(input())\n    s = sum(l)\n    num0 = 0\n    mlist = []\n    xlist = []\n    mindiff = 1000000000\n    for i in range(n):\n        mlist.append(max(l[i] ^ x, l[i]))\n        xlist.append(l[i] ^ x)\n        if l[i] ^ x > l[i]:\n            num0 += 1\n        if mindiff > abs((l[i] ^ x) - l[i]):\n            mindiff = abs((l[i] ^ x) - l[i])\n    if k == n:\n        print(max(sum(l), sum(xlist)))\n    elif k % 2 == 1:\n        print(sum(mlist))\n    elif num0 % 2 == 0:\n        print(sum(mlist))\n    else:\n        print(sum(mlist) - mindiff)", "t = int(input())\nfor zxc in range(t):\n    a = int(input())\n    l = list(map(int, input().split()))\n    m = int(input())\n    b = int(input())\n    s = sum(l)\n    l1 = []\n    if a != m:\n        count = 0\n        for i in l:\n            p = i ^ b\n            if p - i > 0:\n                s = s + (p - i)\n                count += 1\n            l1.append(abs(p - i))\n        if m % 2 == 0 and count % 2 != 0:\n            print(s - min(l1))\n        else:\n            print(s)\n    else:\n        x = []\n        for i in range(0, len(l)):\n            x.append(l[i] ^ b)\n        sum1 = sum(x)\n        if sum1 > s:\n            print(sum1)\n        else:\n            print(s)", "for i in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    k = int(input())\n    x = int(input())\n    arr1 = []\n    arr2 = []\n    for i in arr:\n        arr1.append(i ^ x)\n    for i in range(len(arr)):\n        arr2.append(arr1[i] - arr[i])\n    arr3 = sorted(arr2, reverse=True)\n    if k == n:\n        if sum(arr3) > 0:\n            x = sum(arr3) + sum(arr)\n            print(x)\n        else:\n            print(sum(arr))\n    if k % 2 == 0 and k != n:\n        sum1 = 0\n        for i in range(0, len(arr) - 1, 2):\n            sum2 = 0\n            sum2 += arr3[i] + arr3[i + 1]\n            if sum2 > 0:\n                sum1 += sum2\n        print(sum1 + sum(arr))\n    if k % 2 != 0 and k != n:\n        sum1 = sum(arr)\n        for i in arr3:\n            if i > 0:\n                sum1 += i\n        print(sum1)", "T = int(input())\nfor j in range(T):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    K = int(input())\n    X = int(input())\n    B = []\n    C = []\n    countit = 0\n    diffarr = []\n    for i in A:\n        B.append(i ^ X)\n        if i ^ X > i:\n            C.append(i ^ X)\n            countit += 1\n        else:\n            C.append(i)\n    for i in range(len(A)):\n        diffarr.append(abs(A[i] - B[i]))\n    if N != K:\n        if countit % 2 != 0 and K % 2 == 0:\n            print(sum(C) - min(diffarr))\n        else:\n            print(sum(C))\n    else:\n        print(max(sum(A), sum(B)))", "for _ in range(int(input())):\n    (mx, s1, s2, s3) = (0, 0, 0, 0)\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    s1 = sum(l)\n    k = int(input())\n    xor = int(input())\n    l1 = [i ^ xor for i in l]\n    l2 = [l1[i] - l[i] for i in range(n)]\n    l2.sort()\n    l2 = l2[::-1]\n    if n == k:\n        print(max(sum(l1), sum(l)))\n    else:\n        if k % 2 == 0:\n            for i in range(n):\n                s2 += l2[i]\n                if i % 2 == 1:\n                    mx = max(mx, s2)\n        else:\n            for i in range(n):\n                s3 += l2[i]\n                mx = max(mx, s3)\n        print(sum(l) + mx)", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    k = int(input())\n    x = int(input())\n    s1 = sum(arr)\n    jt = []\n    if n != k:\n        count = 0\n        for i in arr:\n            xor = i ^ x\n            if xor - i > 0:\n                s1 = s1 + (xor - i)\n                count += 1\n            jt.append(abs(xor - i))\n        if k % 2 == 0:\n            if count % 2 != 0:\n                print(s1 - min(jt))\n            else:\n                print(s1)\n        else:\n            print(s1)\n    else:\n        for i in range(0, len(arr)):\n            jt.append(arr[i] ^ x)\n        s2 = sum(jt)\n        if s2 > s1:\n            print(s2)\n        else:\n            print(s1)", "def solve5(a, n, m, k, x):\n    sol1 = 0\n    if len(m) < k:\n        if len(m) % 2 == 0:\n            dp = [0] * n\n            for i in range(len(m)):\n                dp[m[i][1]] = 1\n            for i in range(n):\n                if dp[i] == 1:\n                    sol1 += a[i] ^ x\n                else:\n                    sol1 += a[i]\n            return max(sol1, 0)\n        else:\n            m.sort(key=lambda q: q[0], reverse=True)\n            dp = [0] * n\n            for i in range(len(m) - 1):\n                dp[m[i][1]] = 1\n            for i in range(n):\n                if dp[i] == 1:\n                    sol1 += a[i] ^ x\n                else:\n                    sol1 += a[i]\n            ans = sol1\n            sol1 = 0\n            m.sort(key=lambda q: q[0], reverse=True)\n            dp = [0] * n\n            for i in range(len(m)):\n                dp[m[i][1]] = 1\n            gg = []\n            for i in range(n):\n                if dp[i] == 1:\n                    sol1 += a[i] ^ x\n                else:\n                    gg.append((a[i] - (a[i] ^ x), i))\n                    sol1 += a[i]\n            gg.sort(key=lambda q: q[0])\n            if len(gg) > 0:\n                sol1 += (a[gg[0][1]] ^ x) - a[gg[0][1]]\n                return max(sol1, ans)\n            else:\n                return max(ans, 0)\n    if len(m) >= k:\n        if len(m) % 2 == 1 and k % 2 == 0:\n            m.sort(key=lambda q: q[0], reverse=True)\n            dp = [0] * n\n            for i in range(len(m) - 1):\n                dp[m[i][1]] = 1\n            sum1 = 0\n            for i in range(n):\n                if dp[i] == 1:\n                    sum1 += a[i] ^ x\n                else:\n                    sum1 += a[i]\n            sol1 = 0\n            m.sort(key=lambda q: q[0], reverse=True)\n            dp = [0] * n\n            for i in range(len(m)):\n                dp[m[i][1]] = 1\n            gg = []\n            for i in range(n):\n                if dp[i] == 1:\n                    sol1 += a[i] ^ x\n                else:\n                    gg.append((a[i] - (a[i] ^ x), i))\n                    sol1 += a[i]\n            gg.sort(key=lambda q: q[0])\n            if len(gg) > 0:\n                sol1 += (a[gg[0][1]] ^ x) - a[gg[0][1]]\n                return max(sum1, sol1)\n            else:\n                return max(sum1, 0)\n        else:\n            full = 0\n            dp = [0] * n\n            for i in range(len(m)):\n                dp[m[i][1]] = 1\n            for i in range(n):\n                if dp[i] == 1:\n                    full += a[i] ^ x\n                else:\n                    full += a[i]\n            return max(full, 0)\nt = int(input())\nfor cc in range(t):\n    n = int(input())\n    a = list(map(int, input().rstrip().split()))\n    k = int(input())\n    x = int(input())\n    if k == n:\n        sum1 = 0\n        for i in range(n):\n            sum1 += a[i] ^ x\n        print(max(sum1, sum(a)))\n        continue\n    else:\n        m = []\n        meow = []\n        sum3 = 0\n        for i in range(n):\n            if a[i] < a[i] ^ x:\n                m.append(((a[i] ^ x) - a[i], i))\n                sum3 += (a[i] ^ x) - a[i]\n            if a[i] <= a[i] ^ x:\n                meow.append(((a[i] ^ x) - a[i], i))\n        if len(m) == 0:\n            print(sum(a))\n            continue\n        elif len(m) % k == 0:\n            dp = [0] * n\n            sum1 = 0\n            for i in range(len(m)):\n                dp[m[i][1]] = 1\n            for i in range(n):\n                if dp[i] == 1:\n                    sum1 += a[i] ^ x\n                else:\n                    sum1 += a[i]\n            print(max(sum1, sum(a)))\n        elif len(meow) % k == 0:\n            dp = [0] * n\n            sum1 = 0\n            for i in range(len(meow)):\n                dp[meow[i][1]] = 1\n            for i in range(n):\n                if dp[i] == 1:\n                    sum1 += a[i] ^ x\n                else:\n                    sum1 += a[i]\n            print(max(sum1, sum(a)))\n        elif len(m) < k:\n            b = []\n            c = []\n            for i in range(n):\n                if a[i] ^ x > a[i]:\n                    b.append(a[i])\n                else:\n                    c.append(a[i])\n            b = b + c\n            for i in range(k):\n                b[i] = b[i] ^ x\n            mota = []\n            for i in range(n):\n                if b[i] ^ x > b[i]:\n                    mota.append(((b[i] ^ x) - b[i], i))\n            ans3 = solve5(b, n, mota, k, x)\n            ans5 = solve5(a, n, m, k, x)\n            ans6 = solve5(a, n, meow, k, x)\n            print(max(sum(a), ans5, ans6, ans3))\n        else:\n            b = []\n            c = []\n            mota = []\n            for i in range(n):\n                if a[i] ^ x > a[i]:\n                    b.append(a[i])\n                else:\n                    c.append(a[i])\n            b = b + c\n            for i in range(k):\n                b[i] = b[i] ^ x\n            for i in range(n):\n                if b[i] ^ x > b[i]:\n                    mota.append(((b[i] ^ x) - b[i], i))\n            ans3 = solve5(b, n, mota, k, x)\n            ans5 = solve5(a, n, m, k, x)\n            ans6 = solve5(a, n, meow, k, x)\n            print(max(sum(a), ans5, ans6, ans3))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    k = int(input())\n    x = int(input())\n    xorpos = []\n    xorneg = []\n    for i in l:\n        a = (i ^ x) - i\n        if a > 0:\n            xorpos.append(a)\n        else:\n            xorneg.append(a)\n    p = xorpos.__len__()\n    neg = xorneg.__len__()\n    if k == 1:\n        print(sum(l) + sum(xorpos))\n    elif k == n:\n        q = sum(l) + sum(xorpos) + sum(xorneg)\n        print(max(sum(l), q))\n    elif k % 2 == 0:\n        if p % 2 == 0:\n            print(sum(l) + sum(xorpos))\n        else:\n            z = sum(xorpos) - min(xorpos)\n            if neg > 0:\n                x = sum(xorpos) + max(xorneg)\n            else:\n                x = 0\n            print(sum(l) + max(z, x))\n    else:\n        print(sum(l) + sum(xorpos))\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    k = int(input())\n    x = int(input())\n    xorpos = []\n    xorneg = []\n    for i in l:\n        a = (i ^ x) - i\n        if a > 0:\n            xorpos.append(a)\n        else:\n            xorneg.append(a)\n    p = xorpos.__len__()\n    neg = xorneg.__len__()\n    if x == 0:\n        print(sum(l) + sum(xorpos))\n    elif k == 1:\n        print(sum(l) + sum(xorpos))\n    elif k == n:\n        q = sum(l) + sum(xorpos) + sum(xorneg)\n        print(max(sum(l), q))\n    elif k % 2 == 0:\n        if p % 2 == 0:\n            print(sum(l) + sum(xorpos))\n        else:\n            z = sum(xorpos) - min(xorpos)\n            if neg > 0:\n                x = sum(xorpos) + max(xorneg)\n            else:\n                x = 0\n            print(sum(l) + max(z, x))\n    else:\n        print(sum(l) + sum(xorpos))\n    t = t - 1", "def main():\n    tstr = input()\n    t = int(tstr)\n    while t:\n        t -= 1\n        nstr = input()\n        n = int(nstr)\n        a = list(map(int, input().split()))\n        ans = sum(a)\n        kstr = input()\n        xstr = input()\n        k = int(kstr)\n        x = int(xstr)\n        d = []\n        for ae in a:\n            d.append((ae ^ x) - ae)\n        d.sort(reverse=True)\n        positive = 0\n        for i in d:\n            if i > 0:\n                positive += 1\n            else:\n                break\n        if k != n:\n            if positive % 2 == 0 or k % 2 == 1:\n                for i in d:\n                    if i > 0:\n                        ans += i\n                    else:\n                        break\n            else:\n                prev_positive = 0\n                min_negative = 0\n                for i in range(n):\n                    if d[i] > 0:\n                        ans += d[i]\n                    else:\n                        min_negative = d[i]\n                        prev_positive = d[i - 1]\n                        break\n                if positive == n:\n                    ans = ans - d[-1]\n                elif ans + min_negative > ans - prev_positive:\n                    ans = ans + min_negative\n                else:\n                    ans = ans - prev_positive\n        elif sum(d) >= 0:\n            ans += sum(d)\n        print(ans)\nmain()", "def max_sum(pos, neg, n, orig_sum, count, k):\n    m = 0\n    j = 0\n    o = 0\n    p = 0\n    d = len(pos)\n    e = len(neg)\n    if d > 0:\n        o = sum(pos)\n        j = min(pos)\n    if e > 0:\n        p = sum(neg)\n        m = max(neg)\n    if k == n:\n        print(str(max(orig_sum, orig_sum + o + p)))\n    elif k % 2 == 1:\n        print(max(o + orig_sum, orig_sum))\n    elif count % 2 == 0:\n        print(o + orig_sum)\n    elif count < n:\n        print(max(orig_sum + o - j, orig_sum + o + m, orig_sum))\n    else:\n        print(max(orig_sum + o - j, orig_sum))\nt = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    SUM = sum(l)\n    k = int(input())\n    x = int(input())\n    counter = 0\n    pos = []\n    neg = []\n    for a in l:\n        diff = (x ^ a) - a\n        if diff > 0:\n            counter += 1\n            pos.append(diff)\n        else:\n            neg.append(diff)\n    max_sum(pos, neg, n, SUM, counter, k)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    minv = 10000000000\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    k = int(input())\n    x = int(input())\n    xorpos = []\n    xorneg = []\n    for i in l:\n        a = (i ^ x) - i\n        if abs(a) < minv:\n            minv = abs(a)\n        if a > 0:\n            xorpos.append(a)\n        else:\n            xorneg.append(a)\n    p = xorpos.__len__()\n    neg = xorneg.__len__()\n    if x == 0:\n        print(sum(l) + sum(xorpos))\n    elif k == 1:\n        print(sum(l) + sum(xorpos))\n    elif k == n:\n        q = sum(l) + sum(xorpos) + sum(xorneg)\n        print(max(sum(l), q))\n    elif k % 2 == 0:\n        if p % 2 == 0:\n            print(sum(l) + sum(xorpos))\n        else:\n            print(sum(l) + sum(xorpos) - minv)\n    else:\n        print(sum(l) + sum(xorpos))\n    t = t - 1", "for i in range(int(input())):\n    N = int(input())\n    arr = [int(i) for i in input().split()]\n    K = int(input())\n    X = int(input())\n    arr1 = []\n    arr2 = []\n    for i in arr:\n        arr1.append(i ^ X)\n    for i in range(len(arr)):\n        arr2.append(arr1[i] - arr[i])\n    arr3 = sorted(arr2, reverse=True)\n    if K == N:\n        if sum(arr3) > 0:\n            x = sum(arr3) + sum(arr)\n            print(x)\n        else:\n            print(sum(arr))\n    if K % 2 == 0 and K != N:\n        sum1 = 0\n        for i in range(0, len(arr) - 1, 2):\n            sum2 = 0\n            sum2 += arr3[i] + arr3[i + 1]\n            if sum2 > 0:\n                sum1 += sum2\n        print(sum1 + sum(arr))\n    if K % 2 != 0 and K != N:\n        sum1 = sum(arr)\n        for i in arr3:\n            if i > 0:\n                sum1 += i\n        print(sum1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    li = []\n    for i in l:\n        li.append((i ^ x) - i)\n    sum_ = sum(l)\n    sum_li = sum(li)\n    li.sort(reverse=True)\n    if n == k:\n        if sum_li > 0:\n            sum_ += sum_li\n    else:\n        sum_3 = 0\n        if k % 2 == 0:\n            for i in range(0, len(li) - 1, 2):\n                if li[i] + li[i + 1] > 0:\n                    sum_3 += li[i] + li[i + 1]\n                else:\n                    break\n            sum_ += sum_3\n        else:\n            sum_3 = 0\n            for i in range(len(li)):\n                if li[i] > 0:\n                    sum_3 += li[i]\n                else:\n                    break\n            sum_ += sum_3\n    print(sum_)", "t = int(input())\nfor i in range(t):\n    diff = []\n    xed = []\n    flag = False\n    n = int(input())\n    org = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    s_org = sum(org)\n    if x == 0:\n        print(s_org)\n    else:\n        for j in org:\n            xed.append(j ^ x)\n        for j in range(n):\n            temp = xed[j] ^ x\n            while xed[j] < temp and temp != org[j]:\n                xed[j] = temp\n                temp = temp ^ x\n        if k == n:\n            s2 = sum(xed)\n            print(max(s_org, s2))\n        else:\n            nc = 0\n            for j in range(n):\n                diff.append([xed[j] - org[j], j])\n                if xed[j] - org[j] >= 0:\n                    nc += 1\n            if nc % 2 == 0:\n                Sum = 0\n                for j in range(n):\n                    if xed[j] > org[j]:\n                        Sum += xed[j]\n                    else:\n                        Sum += org[j]\n                print(Sum)\n            elif nc % 2 != 0 and k % 2 != 0:\n                Sum = 0\n                for j in range(n):\n                    if xed[j] > org[j]:\n                        Sum += xed[j]\n                    else:\n                        Sum += org[j]\n                print(Sum)\n            elif nc % 2 != 0 and k % 2 == 0:\n                mini = abs(diff[j][0])\n                for j in range(n):\n                    if abs(diff[j][0]) < mini:\n                        mini = abs(diff[j][0])\n                Sum = 0\n                for j in range(n):\n                    if xed[j] > org[j]:\n                        Sum += xed[j]\n                    else:\n                        Sum += org[j]\n                print(Sum - mini)", "for i in range(int(input())):\n    N = int(input())\n    arr = [int(i) for i in input().split()]\n    K = int(input())\n    X = int(input())\n    arr1 = []\n    arr2 = []\n    for i in arr:\n        arr1.append(i ^ X)\n    for i in range(len(arr)):\n        arr2.append(arr1[i] - arr[i])\n    arr3 = sorted(arr2, reverse=True)\n    if K == N:\n        if sum(arr3) > 0:\n            x = sum(arr3) + sum(arr)\n            print(x)\n        else:\n            print(sum(arr))\n    if K % 2 == 0 and K != N:\n        sum1 = 0\n        for i in range(0, len(arr) - 1, 2):\n            sum2 = 0\n            sum2 += arr3[i] + arr3[i + 1]\n            if sum2 > 0:\n                sum1 += sum2\n        print(sum1 + sum(arr))\n    if K % 2 != 0 and K != N:\n        sum1 = sum(arr)\n        for i in arr3:\n            if i > 0:\n                sum1 += i\n        print(sum1)", "for i in range(int(input())):\n    N = int(input())\n    arr = [int(i) for i in input().split()]\n    K = int(input())\n    X = int(input())\n    arr1 = []\n    arr2 = []\n    for i in arr:\n        arr1.append(i ^ X)\n    for i in range(len(arr)):\n        arr2.append(arr1[i] - arr[i])\n    arr3 = sorted(arr2, reverse=True)\n    if K == N:\n        if sum(arr3) > 0:\n            x = sum(arr3) + sum(arr)\n            print(x)\n        else:\n            print(sum(arr))\n    if K % 2 == 0 and K != N:\n        sum1 = 0\n        for i in range(0, len(arr) - 1, 2):\n            sum2 = 0\n            sum2 += arr3[i] + arr3[i + 1]\n            if sum2 > 0:\n                sum1 += sum2\n        print(sum1 + sum(arr))\n    if K % 2 != 0 and K != N:\n        sum1 = sum(arr)\n        for i in arr3:\n            if i > 0:\n                sum1 += i\n        print(sum1)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(n) for n in input().split()]\n    s1 = sum(l)\n    k = int(input())\n    x = int(input())\n    c = 0\n    lp = []\n    ln = []\n    for i in l:\n        r = (x ^ i) - i\n        if r >= 0:\n            c += 1\n            lp.append(r)\n        else:\n            ln.append(r)\n    nm = 0\n    pm = 0\n    sp = 0\n    sn = 0\n    if len(lp) > 0:\n        sp = sum(lp)\n        pm = min(lp)\n    if len(ln) > 0:\n        sn = sum(ln)\n        nm = max(ln)\n    if k == n:\n        print(max(s1, s1 + sp + sn))\n    elif k % 2 == 1:\n        print(max(sp + s1, s1))\n    elif c % 2 == 0:\n        print(sp + s1)\n    elif c < n:\n        print(max(s1 + sp - pm, s1 + sp + nm, s1))\n    else:\n        print(max(s1 + sp - pm, s1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    k = int(input())\n    x = int(input())\n    flipped = []\n    increase = []\n    count = 0\n    for i in range(n):\n        flipped.append(a[i] ^ x)\n        increase.append([a[i], flipped[i] - a[i]])\n        if flipped[i] - a[i] > 0:\n            count += 1\n    increase.sort(key=lambda x: x[1])\n    if k == n:\n        print(max(sum(a), sum(flipped)))\n    elif k % 2 != 0:\n        max_ = []\n        for i in range(n):\n            if a[i] > flipped[i]:\n                max_.append(a[i])\n            else:\n                max_.append(flipped[i])\n        print(sum(max_))\n    elif count % 2 == 0:\n        max_ = []\n        for i in range(n):\n            if a[i] > flipped[i]:\n                max_.append(a[i])\n            else:\n                max_.append(flipped[i])\n        print(sum(max_))\n    else:\n        max_ = []\n        for i in range(n):\n            if a[i] > flipped[i]:\n                max_.append(a[i])\n            else:\n                max_.append(flipped[i])\n        min_ = 1000000001\n        for i in range(n):\n            if abs(a[i] - flipped[i]) < min_:\n                min_ = abs(a[i] - flipped[i])\n        if min_ == 1000000001:\n            print(sum(max_))\n        else:\n            ans = sum(max_) - min_\n            print(ans)", "for T in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    K = int(input())\n    X = int(input())\n    valueIncreases = {}\n    valueDecreases = {}\n    list_valueIncreases = []\n    list_valueDecreases = []\n    for a in A:\n        d = (a ^ X) - a\n        if d > 0:\n            valueIncreases[a] = d\n            list_valueIncreases.append(a)\n        else:\n            valueDecreases[a] = d\n            list_valueDecreases.append(a)\n    s1 = sorted(list_valueIncreases, key=valueIncreases.get)\n    s2 = sorted(list_valueDecreases, key=valueDecreases.get)\n    sum_valIncreases = 0\n    for val in s1:\n        sum_valIncreases += valueIncreases[val]\n    if len(s1) == 0:\n        totalMoney = sum(s2)\n    if K == N:\n        s2b = s2.copy()\n        q = K - len(s1)\n        t = 0\n        for i in range(q):\n            t += valueDecreases[s2b.pop()]\n        if t + sum_valIncreases > 0:\n            totalMoney = t + sum(s2) + sum(s1) + sum_valIncreases\n        else:\n            totalMoney = sum(s1) + sum(s2)\n    elif K % 2 != 0 or (K % 2 == 0 and len(s1) % 2 == 0):\n        totalMoney = sum_valIncreases + sum(s1) + sum(s2)\n    else:\n        val2 = s1[0]\n        if len(s2) == 0:\n            totalMoney = sum_valIncreases + sum(s1) + sum(s2) - valueIncreases[val2]\n        else:\n            val1 = s2[-1]\n            if valueDecreases[val1] + valueIncreases[val2] > 0:\n                totalMoney = sum_valIncreases + sum(s1) + sum(s2) + valueDecreases[val1]\n            else:\n                totalMoney = sum_valIncreases + sum(s1) + sum(s2) - valueIncreases[val2]\n    print(totalMoney)", "import array as money\ntcases = int(input())\nwhile tcases != 0:\n    noe = int(input())\n    money = [int(m) for m in input().split()]\n    k = int(input())\n    x = int(input())\n    totalmoney = 0\n    i = 0\n    while i < len(money):\n        totalmoney += money[i]\n        i = i + 1\n    if x == 0:\n        result = totalmoney\n        print(result)\n    elif k == noe:\n        maxamount = 0\n        j = 0\n        while j < len(money):\n            val = money[j] ^ x\n            maxamount += val\n            j = j + 1\n        if maxamount >= totalmoney:\n            result = maxamount\n            print(result)\n        else:\n            result = totalmoney\n            print(result)\n    else:\n        counter = 0\n        totalmoney = 0\n        bags = []\n        for amount in money:\n            xorval = amount ^ x\n            value = xorval - amount\n            if value <= 0:\n                value *= -1\n            else:\n                value = value\n            bags.append(value)\n            if amount >= xorval:\n                totalmoney = totalmoney + amount\n            else:\n                counter = counter + 1\n                totalmoney = totalmoney + xorval\n        bags.sort()\n        if k % 2 == 0:\n            if counter % 2 == 0:\n                result = totalmoney\n                print(result)\n            else:\n                mindiff = totalmoney - bags[0]\n                result = mindiff\n                print(result)\n        else:\n            result = totalmoney\n            print(result)\n    tcases = tcases - 1", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    k = int(input())\n    x = int(input())\n    ss = sum(a)\n    arr = list(map(lambda y: (y ^ x) - y, a))\n    arr = sorted(arr, reverse=True)\n    count = 0\n    for i in arr:\n        if i > 0:\n            count += 1\n    kek = sum(arr)\n    if n == k:\n        print(ss + max(sum(arr), 0))\n        continue\n    elif k % 2 == 1:\n        pig = 0\n    else:\n        pig = count % 2\n    armod = []\n    for i in range(len(arr)):\n        armod.append(abs(arr[i]))\n    arc = sorted(armod)\n    for i in range(pig, len(arr)):\n        arc[i] = -arc[i]\n    ss += (sum(arr) - sum(arc)) // 2\n    count1 = 0\n    arr = sorted(arr, reverse=True)\n    print(ss)", "import sys\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    K = int(input())\n    X = int(input())\n    L = 0\n    H = 0\n    mini = sys.maxsize\n    lowhighs = 0\n    lowlows = 0\n    highhighs = 0\n    highlows = 0\n    totalhighs = 0\n    for i in A:\n        xor = X ^ i\n        if xor > i:\n            L += 1\n            lowhighs += xor\n            lowlows += i\n            totalhighs += xor\n        else:\n            H += 1\n            highhighs += i\n            highlows += xor\n            totalhighs += i\n        if abs(xor - i) < mini:\n            mini = abs(xor - i)\n    if N > K:\n        if K % 2 == 1:\n            print(totalhighs)\n        elif L % 2 == 1:\n            print(totalhighs - mini)\n        else:\n            print(totalhighs)\n    else:\n        a = highhighs + lowlows\n        b = lowhighs + highlows\n        if a > b:\n            print(a)\n        else:\n            print(b)", "import array as money\ntcases = int(input())\nwhile tcases != 0:\n    noe = int(input())\n    money = [int(m) for m in input().split()]\n    k = int(input())\n    x = int(input())\n    totalmoney = 0\n    i = 0\n    while i < len(money):\n        totalmoney += money[i]\n        i = i + 1\n    if x == 0:\n        result = totalmoney\n        print(result)\n    elif k == noe:\n        maxamount = 0\n        j = 0\n        while j < len(money):\n            val = money[j] ^ x\n            maxamount += val\n            j = j + 1\n        if maxamount >= totalmoney:\n            result = maxamount\n            print(result)\n        else:\n            result = totalmoney\n            print(result)\n    else:\n        counter = 0\n        totalmoney = 0\n        bags = []\n        for amount in money:\n            xorval = amount ^ x\n            value = xorval - amount\n            if value <= 0:\n                value *= -1\n            else:\n                value = value\n            bags.append(value)\n            if amount >= xorval:\n                totalmoney = totalmoney + amount\n            else:\n                counter = counter + 1\n                totalmoney = totalmoney + xorval\n        if k % 2 == 0:\n            if counter % 2 == 0:\n                result = totalmoney\n                print(result)\n            else:\n                mindiff = totalmoney - min(bags)\n                result = mindiff\n                print(result)\n        else:\n            result = totalmoney\n            print(result)\n    tcases = tcases - 1", "for _ in range(int(input())):\n    n = int(input())\n    ll = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    xor = []\n    pos = 0\n    neg = 0\n    mm = 10 ** 18\n    ans = 0\n    for i in range(n):\n        temp = []\n        al = ll[i] ^ x\n        al = al - ll[i]\n        temp.append(ll[i])\n        temp.append(al)\n        xor.append(temp)\n        if xor[i][1] < 0:\n            neg += 1\n            ans += ll[i]\n        else:\n            pos += 1\n            ans += ll[i] ^ x\n        if abs(ll[i] - (ll[i] ^ x)) < mm:\n            mm = abs(ll[i] - (ll[i] ^ x))\n    if x == 0 or k == n:\n        (summa, summb) = (0, 0)\n        for i in range(n):\n            summa += xor[i][1] + xor[i][0]\n            summb += xor[i][0]\n        ans = max(summa, summb)\n    elif k % 2 != 0:\n        pass\n    elif n % 2 != 0:\n        if neg % 2 == 0:\n            ans -= mm\n    elif neg % 2 != 0:\n        ans -= mm\n    print(ans)", "def func(n, arr, k, x):\n    a = [0 for i in range(n)]\n    for i in range(n):\n        a[i] = arr[i] ^ x\n    if n == k:\n        return max(sum(a), sum(arr))\n    elif k % 2 == 1:\n        ans = 0\n        for i in range(n):\n            ans += max(arr[i], a[i])\n        return ans\n    else:\n        count = 0\n        ans = 0\n        for i in range(n):\n            if arr[i] < a[i]:\n                count += 1\n            ans += max(arr[i], a[i])\n        if count % k % 2 == 0:\n            return ans\n        else:\n            mini = ans\n            for i in range(n):\n                mini = min(abs(arr[i] - a[i]), mini)\n            return ans - mini\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    k = int(input())\n    x = int(input())\n    print(func(n, arr, k, x))", "def sol():\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    s = 0\n    z = 0\n    o = 0\n    if n == k:\n        temp1 = 0\n        temp = 0\n        for i in a:\n            temp += i\n            temp1 += i ^ x\n        if temp > temp1:\n            print(temp)\n        else:\n            print(temp1)\n        return\n    for i in a:\n        if (i ^ x) - i > 0:\n            z += 1\n        else:\n            o += 1\n    if k % 2 != 0:\n        for i in a:\n            if (i ^ x) - i >= 0:\n                s += i ^ x\n            else:\n                s += i\n    elif z % 2 == 0:\n        for i in a:\n            if (i ^ x) - i > 0:\n                s += i ^ x\n            else:\n                s += i\n    else:\n        mindiff = 9999999999\n        ind = -1\n        for i in range(n):\n            temp = abs((a[i] ^ x) - a[i])\n            if mindiff > temp:\n                mindiff = temp\n                ind = i\n        for i in range(n):\n            temp = (a[i] ^ x) - a[i]\n            if i == ind:\n                if temp >= 0:\n                    s += a[i]\n                else:\n                    s += a[i] ^ x\n            elif temp <= 0:\n                s += a[i]\n            else:\n                s += a[i] ^ x\n    print(s)\nt = int(input())\nfor i in range(t):\n    sol()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    if n == k:\n        sum1 = 0\n        sum2 = 0\n        for j in range(n):\n            sum1 = sum1 + arr[j]\n            sum2 = sum2 + (arr[j] ^ x)\n        print(max(sum1, sum2))\n    else:\n        sum1 = 0\n        count = 0\n        min1 = abs((arr[0] ^ x) - arr[0])\n        for j in range(n):\n            r = arr[j] ^ x\n            if r > arr[j]:\n                sum1 = sum1 + r\n                count += 1\n            else:\n                sum1 = sum1 + arr[j]\n            z = abs(r - arr[j])\n            if z < min1:\n                min1 = z\n        if count % 2 != 0:\n            if k % 2 == 0:\n                print(sum1 - min1)\n            else:\n                print(sum1)\n        else:\n            print(sum1)", "for q in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    k = int(input())\n    x = int(input())\n    sumyet = 0\n    posi = 0\n    xor = []\n    for i in range(n):\n        xor.append(arr[i] ^ x)\n    if k == n:\n        if sum(xor) > sum(arr):\n            print(sum(xor))\n        else:\n            print(sum(arr))\n    else:\n        for i in range(n):\n            sumyet += max(xor[i], arr[i])\n            if xor[i] > arr[i]:\n                posi += 1\n            arr[i] = abs(arr[i] - xor[i])\n        if not k & 1 and posi & 1:\n            sumyet -= min(arr)\n        print(sumyet)", "def myXOR(x, y):\n    return (x | y) & (~x | ~y)\nt = int(input())\nfor ij in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = int(input())\n    xd = int(input())\n    high = []\n    low = []\n    for i in range(len(l)):\n        if myXOR(l[i], xd) >= l[i]:\n            low.append(l[i])\n        else:\n            high.append(l[i])\n    d = 0\n    x = 0\n    y = 0\n    if k % 2 == 0:\n        d = 2\n        x = k // 2 - 1\n        y = x + 2\n    else:\n        d = 1\n        x = k // 2\n        y = x + 1\n    a = len(low)\n    b = len(high)\n    b += a - a % k\n    a = a % k\n    while b >= y and a < k:\n        b -= d\n        a += d\n    b += a - a % k\n    a = a % k\n    gain = []\n    for i in range(len(low)):\n        t = myXOR(low[i], xd) - low[i]\n        gain.append(t)\n    for i in range(len(high)):\n        t = high[i] - myXOR(high[i], xd)\n        gain.append(t)\n    gain.sort()\n    i = a\n    s = 0\n    while i < len(gain):\n        s += gain[i]\n        i += 1\n    sm = 0\n    if n == k:\n        for i in low:\n            sm += i\n        for i in high:\n            sm += i\n        sm1 = 0\n        for i in high:\n            sm1 += myXOR(i, xd)\n        for i in low:\n            sm1 += myXOR(i, xd)\n        print(max(sm, sm1))\n    elif k % 2 != 0:\n        sm = 0\n        for i in low:\n            sm += myXOR(i, xd)\n        for i in high:\n            sm += i\n        print(sm)\n    elif len(low) % 2 == 0:\n        sm = 0\n        for i in low:\n            sm += myXOR(i, xd)\n        for i in high:\n            sm += i\n        print(sm)\n    else:\n        sm = 0\n        for i in low:\n            sm += myXOR(i, xd)\n        for i in high:\n            sm += i\n        print(sm - gain[0])", "def optimal_operation_sum(N, A, K, X):\n    xor = [X ^ y for y in A]\n    diff = [xor[i] - A[i] for i in range(N)]\n    improvment_cnt = sum((y > 0 for y in diff))\n    A_sum = sum(A)\n    if K == N:\n        return max(A_sum, A_sum + sum(diff))\n    pos_improvement = [y for y in diff if y > 0]\n    non_improvement = [y for y in diff if y <= 0]\n    max_improvement = sum(pos_improvement)\n    if improvment_cnt % 2 == 0 or K % 2 == 1:\n        return A_sum + max_improvement\n    else:\n        under = over = A_sum\n        if pos_improvement:\n            under = A_sum + max_improvement - min(pos_improvement)\n        if non_improvement:\n            over = A_sum + max_improvement + max(non_improvement)\n        return max(under, over)\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    K = int(input())\n    X = int(input())\n    print(optimal_operation_sum(N, A, K, X))", "t = int(input())\nmod = 10 ** 9 + 7\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    profits = [(i ^ x) - i for i in a]\n    profits.sort()\n    profits = profits[::-1]\n    pr = 0\n    pos = 0\n    for i in range(n):\n        if profits[i] >= 0:\n            pos = i\n        else:\n            break\n    pos += 1\n    if n == k:\n        if sum(profits) > 0:\n            pr += sum(profits)\n    elif pos % 2 == 0:\n        for i in profits:\n            if i > 0:\n                pr += i\n    elif k % 2:\n        for i in profits:\n            if i > 0:\n                pr += i\n    else:\n        for i in range(n // 2):\n            if profits[2 * i] + profits[2 * i + 1] > 0:\n                pr += profits[2 * i] + profits[2 * i + 1]\n    print(sum(a) + pr)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    k = int(input())\n    x = int(input())\n    s = sum(l)\n    ldiff = []\n    if n == k:\n        xorarr = []\n        for i in range(0, len(l)):\n            xorarr.append(l[i] ^ x)\n        sum1 = sum(xorarr)\n        if sum1 > s:\n            print(sum1)\n        else:\n            print(s)\n    else:\n        count = 0\n        for i in l:\n            p = i ^ x\n            if p - i > 0:\n                s = s + (p - i)\n                count += 1\n            ldiff.append(abs(p - i))\n        if k % 2 == 0 and count % 2 != 0:\n            print(s - min(ldiff))\n        else:\n            print(s)", "from math import inf\nt = int(input())\nfor w in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    barr = []\n    for i in arr:\n        barr.append(i ^ x)\n    if k == n:\n        print(max(sum(arr), sum(barr)))\n    elif k % 2 == 1:\n        for i in range(n):\n            barr[i] = max(barr[i], arr[i])\n        print(sum(barr))\n    else:\n        count = 0\n        for i in range(n):\n            if arr[i] < barr[i]:\n                count += 1\n        count = count % k\n        if count % 2 == 0:\n            for i in range(n):\n                barr[i] = max(barr[i], arr[i])\n            print(sum(barr))\n        else:\n            flag = 0\n            diff = inf\n            for i in range(n):\n                diff = min(diff, abs(arr[i] - barr[i]))\n            for i in range(n):\n                barr[i] = max(barr[i], arr[i])\n            print(sum(barr) - diff)", "for jqw in range(int(input())):\n    n = int(input())\n    a = [int(yu) for yu in input().split(' ')]\n    k = int(input())\n    x = int(input())\n    l = []\n    s = sum(a)\n    for j in a:\n        l.append((j ^ x) - j)\n    l.sort(reverse=True)\n    if k == n:\n        s = max(s, s + sum(l))\n        print(s)\n        continue\n    if k % 2 == 0:\n        for j in range(0, len(l), 2):\n            if j + 1 < len(l):\n                ans = l[j] + l[j + 1]\n                if ans > 0:\n                    s = s + ans\n    else:\n        for j in l:\n            if j > 0:\n                s = s + j\n            else:\n                break\n    print(s)", "t = int(input())\n\nclass money:\n\n    def __init__(self, original, xor):\n        self.original = original\n        self.xor = xor\nfor iii in range(t):\n    n = int(input())\n    a = input()\n    a = list(map(int, a.split(' ')))\n    k = int(input())\n    x = int(input())\n    if n == k:\n        summ = 0\n        summ_xor = 0\n        for i in range(len(a)):\n            summ += a[i]\n            summ_xor += a[i] ^ x\n        print(max(summ, summ_xor))\n        continue\n    xor_list = []\n    for i in range(len(a)):\n        xor_list.append(money(a[i], a[i] ^ x))\n    summ = 0\n    number_inc = 0\n    for i in range(len(a)):\n        if xor_list[i].original > xor_list[i].xor:\n            summ += xor_list[i].original\n        else:\n            summ += xor_list[i].xor\n            number_inc += 1\n    if k % 2 == 1:\n        print(summ)\n        continue\n    elif number_inc % 2 == 0 and k % 2 == 0:\n        print(summ)\n        continue\n    diff = []\n    for i in range(len(a)):\n        diff.append(abs(xor_list[i].original - xor_list[i].xor))\n    min_difference = min(diff)\n    print(summ - min_difference)", "import numpy as np\nt = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    l = []\n    suma = suml = z = 0\n    possum = []\n    negsum = []\n    for i in range(0, n):\n        l.append(np.bitwise_xor(a[i], x))\n        suma += a[i]\n        suml += l[i]\n        if l[i] > a[i]:\n            z += 1\n            possum.append(l[i] - a[i])\n        else:\n            negsum.append(l[i] - a[i])\n    if n == k:\n        print(max(suma, suml))\n    elif z % 2 == 0 or (z - k) % 2 == 0:\n        print(suma + sum(possum))\n    elif z != n:\n        print(max(suma + sum(possum) - min(possum), suma + sum(possum) + max(negsum)))\n    else:\n        print(suma + sum(possum) - min(possum))\n    t -= 1", "import math\nt = int(input())\nfor T in range(t):\n    n = int(input())\n    s = input()\n    a = []\n    k = int(input())\n    x = int(input())\n    a = s.split(' ')\n    for i in range(n):\n        a[i] = int(a[i])\n    sum_f = sum(a)\n    (xor, diff) = ([], [])\n    (pos_diff, neg_diff) = ([], [])\n    for i in range(n):\n        xor.append(a[i] ^ x)\n        diff.append(xor[i] - a[i])\n        if diff[i] >= 0:\n            pos_diff.append(diff[i])\n        else:\n            neg_diff.append(diff[i])\n    if x == 0:\n        print(sum_f)\n    elif k == n:\n        if sum(pos_diff) > -1 * sum(neg_diff):\n            print(sum_f + sum(pos_diff) + sum(neg_diff))\n        else:\n            print(sum_f)\n    elif k % 2 == 0 and len(pos_diff) % 2 != 0:\n        if len(pos_diff) == 0:\n            print(sum_f)\n        elif len(neg_diff) == 0:\n            print(sum_f + sum(pos_diff) - min(pos_diff))\n        else:\n            print(sum_f + sum(pos_diff) - min(min(pos_diff), -1 * max(neg_diff)))\n    else:\n        print(sum_f + sum(pos_diff))", "def sortSecond(val):\n    return val[0]\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = input().split()\n    k = int(input())\n    x = int(input())\n    a = []\n    ma = 0\n    suma = 0\n    sumb = 0\n    for j in range(len(l)):\n        l[j] = int(l[j])\n        change = (l[j] ^ x) - l[j]\n        a.append((change, l[j]))\n    a.sort(key=sortSecond, reverse=True)\n    if k % 2 == 0:\n        sa = 0\n        for j in range(n):\n            sa = sa + a[j][0]\n            if j % 2 == 1:\n                ma = max(ma, sa)\n            suma = suma + a[j][1]\n            sumb = sumb + a[j][0]\n    else:\n        sa = 0\n        for j in range(n):\n            sa = sa + a[j][0]\n            ma = max(ma, sa)\n            suma = suma + a[j][1]\n            sumb = sumb + a[j][0]\n    if k == n:\n        print(max(suma + sumb, suma))\n    else:\n        print(suma + ma)", "def radix_sort(alist, base=10):\n    if alist == []:\n        return\n\n    def key_factory(digit, base):\n\n        def key(alist, index):\n            return alist[index] // base ** digit % base\n        return key\n    largest = max(alist)\n    exp = 0\n    while base ** exp <= largest:\n        alist = counting_sort(alist, base - 1, key_factory(exp, base))\n        exp = exp + 1\n    return alist\n\ndef counting_sort(alist, largest, key):\n    c = [0] * (largest + 1)\n    for i in range(len(alist)):\n        c[key(alist, i)] = c[key(alist, i)] + 1\n    c[0] = c[0] - 1\n    for i in range(1, largest + 1):\n        c[i] = c[i] + c[i - 1]\n    result = [None] * len(alist)\n    for i in range(len(alist) - 1, -1, -1):\n        result[c[key(alist, i)]] = alist[i]\n        c[key(alist, i)] = c[key(alist, i)] - 1\n    return result\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    L1 = list(map(int, input().split()))\n    K = int(input())\n    X = int(input())\n    error = 0.0\n    err = 0\n    a = 0\n    for i in range(N):\n        a = a + L1[i]\n    b = 0\n    L2 = []\n    res = []\n    for i in range(N):\n        L2.append(L1[i] ^ X)\n        b = b + L2[i]\n        res.append(L2[i] - L1[i])\n    res.sort(reverse=True)\n    req = 0\n    c = 0\n    d = 0\n    if N == K:\n        a = max(a, b)\n    elif K % 2 == 1:\n        for i in range(N):\n            d = d + res[i]\n            req = max(req, d)\n    elif 0 < K % 2 < 1:\n        error = error + 1\n    else:\n        for i in range(N):\n            c = c + res[i]\n            if i % 2 == 1:\n                req = max(req, c)\n    for i in range(req % 2):\n        err = err + 1\n    print(a + req)", "test = int(input())\nfor _ in range(test):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    K = int(input())\n    X = int(input())\n    diffs = []\n    positives = []\n    pos_count = 0\n    for i in A:\n        diffs.append((i ^ X) - i)\n    diffs.sort(reverse=True)\n    for i in range(N):\n        if diffs[i] > 0:\n            pos_count += 1\n    sum_all = sum(A)\n    sum_positive = sum(diffs[:pos_count])\n    if N == K:\n        ans = max(sum_all, sum_all + sum(diffs))\n    elif pos_count % 2 == 0:\n        ans = sum_all + sum_positive\n    elif pos_count == N:\n        if K % 2 == 0:\n            ans = sum_all + sum_positive - diffs[N - 1]\n        else:\n            ans = sum_all + sum_positive\n    elif K % 2 == 0:\n        ans1 = sum_all + sum_positive - diffs[pos_count - 1]\n        ans2 = sum_all + sum_positive + diffs[pos_count]\n        ans = max(ans1, ans2)\n    else:\n        ans = sum_all + sum_positive\n    print(ans)", "t = int(input())\nfor c in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    g = []\n    l = []\n    for i in range(n):\n        if (arr[i] ^ x) - arr[i] > 0:\n            g.append((arr[i] ^ x) - arr[i])\n        else:\n            l.append((arr[i] ^ x) - arr[i])\n    p = len(g)\n    neg = len(l)\n    ans = sum(arr)\n    if x == 0:\n        print(ans)\n    elif k == p and x != 0:\n        ans += sum(g)\n        print(ans)\n    elif k == n:\n        if k == p:\n            ans += sum(g)\n            print(ans)\n        elif k != p:\n            t = ans + sum(g) + sum(l)\n            if t > ans:\n                ans = t\n            print(ans)\n    else:\n        ans += sum(g)\n        if p % 2 == 1 and k % 2 == 0:\n            if neg > 0:\n                ans = max(ans + max(l), ans - min(g))\n            else:\n                ans -= min(g)\n        print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    A = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    mini = abs(A[0] - (A[0] ^ x))\n    maxsum = 0\n    sumkn = 0\n    count = 0\n    for i in range(len(A)):\n        maxsum = maxsum + max(A[i], A[i] ^ x)\n        sumkn += A[i] ^ x\n        if A[i] ^ x > A[i]:\n            count += 1\n        mini = min(mini, abs(A[i] - (A[i] ^ x)))\n    answer = maxsum\n    if k != n and count % 2 == 1 and (k % 2 == 0):\n        answer = answer - mini\n    if k == n:\n        answer = max(sumkn, sum(A))\n    print(answer)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    if x == 0:\n        print(sum(a))\n    elif n == k:\n        s1 = sum(a)\n        b = [h ^ x for h in a]\n        s2 = sum(b)\n        print(max(s1, s2))\n    else:\n        p = []\n        m = []\n        for y in a:\n            d = (y ^ x) - y\n            if d >= 0:\n                p.append(d)\n            else:\n                m.append(d)\n        m1 = len(m)\n        p1 = len(p)\n        s = 0\n        if p1 > 0:\n            if p1 % 2 == 0 or k % 2 == 1:\n                s += sum(p)\n            else:\n                t1 = min(p)\n                s += sum(p) - t1\n                if m1 > 0:\n                    t2 = max(m)\n                    if t1 + t2 >= 0:\n                        s += t2 + t1\n        print(sum(a) + s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = []\n    a = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    b = [(a[i] ^ x) - a[i] for i in range(n)]\n    if k == len(a):\n        print(max(sum(a), sum(a) + sum(b)))\n    elif k % 2 == 0:\n        k = 2\n        b.sort()\n        count = 0\n        ans = 0\n        i = len(b) - 1\n        while i >= 0 and b[i] > 0:\n            count += 1\n            ans += b[i]\n            store = i\n            i -= 1\n        if count == len(b) and count % 2 == 0:\n            print(sum(a) + sum(b))\n        elif count == len(b) and count % 2 == 1:\n            print(sum(a) + sum(b) - b[0])\n        elif count % 2 == 0:\n            print(sum(a) + ans)\n        else:\n            ans1 = 0\n            for i in range(n - 1, store, -1):\n                ans1 += b[i]\n            print(sum(a) + max(ans1, ans1 + b[store] + b[store - 1]))\n    elif k % 2 == 1:\n        k = 1\n        ans = 0\n        for i in range(n):\n            if b[i] > 0:\n                ans += b[i]\n        print(sum(a) + ans)", "T = int(input())\nwhile T > 0:\n    T -= 1\n    N = int(input())\n    L = list(map(int, input().split()))\n    SS = sum(L)\n    K = int(input())\n    X = int(input())\n    Q = []\n    SumQ = 0\n    NooS = 0\n    for i in L:\n        KK = X ^ i\n        Q.append(KK)\n        SumQ += KK\n        if KK > i:\n            NooS += 1\n    MSum = 0\n    for i in range(0, N):\n        if Q[i] > L[i]:\n            MSum += Q[i]\n        else:\n            MSum += L[i]\n    Diff = 10 ** 9 + 1\n    for i in range(0, N):\n        GG = abs(Q[i] - L[i])\n        if GG < Diff:\n            Diff = GG\n    if K != N:\n        if K % 2 != 0:\n            print(MSum)\n        elif NooS % 2 != 0:\n            print(MSum - Diff)\n        else:\n            print(MSum)\n    elif SumQ > SS:\n        print(SumQ)\n    else:\n        print(SS)", "t = int(input())\nfor asd in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    pos = []\n    neg = []\n    for i in range(n):\n        ch = ar[i] ^ x\n        if ch > ar[i]:\n            pos.append((ch - ar[i], ar[i]))\n        else:\n            neg.append((ar[i] - ch, ar[i]))\n    if k == 0:\n        sum = 0\n        for i in range(n):\n            sum += ar[i]\n        print(sum)\n        continue\n    if k == n:\n        sum = 0\n        sum1 = 0\n        sum2 = 0\n        for i in range(n):\n            sum1 += ar[i]\n            sum2 += ar[i] ^ x\n        sum = max(sum1, sum2)\n        print(sum)\n        continue\n    if k % 2 == 1:\n        sum = 0\n        for i in range(n):\n            sum += max(ar[i], ar[i] ^ x)\n        print(sum)\n        continue\n    if k % 2 == 0:\n        sum = 0\n        if len(pos) == n:\n            pos.sort()\n            i = len(pos) - 1\n            while i - 1 >= 0:\n                sum += pos[i][1] ^ x\n                sum += pos[i - 1][1] ^ x\n                i -= 2\n            if i >= 0:\n                sum += pos[i][1]\n        elif len(pos) % 2 == 0:\n            for i in range(len(pos)):\n                sum += pos[i][1] ^ x\n            for i in range(len(neg)):\n                sum += neg[i][1]\n        elif len(pos) % 2 == 1:\n            pos.sort()\n            neg.sort()\n            if pos[0][0] >= neg[0][0]:\n                for i in range(len(pos)):\n                    sum += pos[i][1] ^ x\n                sum += neg[0][1] ^ x\n                for i in range(1, len(neg)):\n                    sum += neg[i][1]\n            else:\n                sum = pos[0][1]\n                for i in range(1, len(pos)):\n                    sum += pos[i][1] ^ x\n                for i in range(len(neg)):\n                    sum += neg[i][1]\n        print(sum)\n        continue", "for t in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    list2 = [i ^ x for i in list1]\n    list3 = [j - i for (i, j) in zip(list1, list2)]\n    if n == 1:\n        print(max(list1[0], list2[0]))\n        continue\n    if k == n:\n        print(max(sum(list1), sum(list2)))\n        continue\n    pos_min = max(list3)\n    neg_max = min(list3)\n    sum1 = 0\n    count1 = 0\n    for i in range(n):\n        if list3[i] > 0:\n            sum1 = sum1 + list2[i]\n            count1 = count1 + 1\n            if list3[i] < pos_min:\n                pos_min = list3[i]\n        else:\n            sum1 = sum1 + list1[i]\n            if list3[i] > neg_max:\n                neg_max = list3[i]\n    if count1 % 2 == 0 or k % 2 == 1 or count1 % k == 0:\n        print(sum1)\n    elif count1 == n:\n        print(sum1 - pos_min)\n    else:\n        print(max(sum1 + neg_max, sum1 - pos_min))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().rstrip().split()))\n    k = int(input())\n    x = int(input())\n    xo = []\n    for x1 in l:\n        xo.append(x1 ^ x)\n    diff = []\n    for x in range(n):\n        diff.append(xo[x] - l[x])\n    z = list(zip(diff, xo, l))\n    cp = 0\n    for x in diff:\n        if x > 0:\n            cp += 1\n    if k == n:\n        print(max(sum(l), sum(xo)))\n    elif k % 2 != 0:\n        s = 0\n        for x in z:\n            if x[0] > 0:\n                s += x[1]\n            else:\n                s += x[2]\n        print(s)\n    elif k % 2 == 0:\n        if cp % 2 == 0:\n            s = 0\n            for x in z:\n                if x[0] > 0:\n                    s += x[1]\n                else:\n                    s += x[2]\n            print(s)\n        elif cp == n:\n            q1 = cp - 1\n            z.sort(key=lambda x: x[0], reverse=True)\n            s1 = 0\n            for x in range(n):\n                if x < q1:\n                    s1 += z[x][1]\n                else:\n                    s1 += z[x][2]\n            print(s1)\n        else:\n            q1 = cp - 1\n            q2 = cp + 1\n            z.sort(key=lambda x: x[0], reverse=True)\n            s1 = 0\n            s2 = 0\n            for x in range(n):\n                if x < q1:\n                    s1 += z[x][1]\n                else:\n                    s1 += z[x][2]\n                if x < q2:\n                    s2 += z[x][1]\n                else:\n                    s2 += z[x][2]\n            print(max(s1, s2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = int(input())\n    x = int(input())\n    r = [0] * n\n    for i in range(n):\n        r[i] = l[i] ^ x\n    sum1 = sum(l)\n    p = [0] * n\n    for i in range(n):\n        p[i] = r[i] - l[i]\n    x = sorted(p, reverse=True)\n    sum2 = sum1\n    count = 0\n    if k == n:\n        sum2 = sum1 + sum(x)\n        if sum2 > sum1:\n            print(sum2)\n        else:\n            print(sum1)\n        continue\n    if k % 2 == 0:\n        i = 0\n        while i < n - 1:\n            sum2 += x[i] + x[i + 1]\n            i += 2\n            if sum2 > sum1:\n                sum1 = sum2\n            else:\n                break\n    if k % 2 == 1:\n        for i in range(n):\n            sum2 += x[i]\n            if sum2 > sum1:\n                sum1 = sum2\n            else:\n                break\n    print(sum1)"]