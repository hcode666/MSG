["for _ in range(int(input())):\n    (l, c) = map(int, input().split(' '))\n    s = input()\n    mgap = 0\n    curr = 0\n    gaps = []\n    i = 0\n    while i < l:\n        while i < l and s[i] == '0':\n            curr += 1\n            i += 1\n        gaps.append(curr)\n        i += 1\n        curr = 0\n    if s[-1] == '1':\n        gaps.append(curr)\n    gaps[0] += gaps[-1]\n    gaps.pop()\n    count = 0\n    for j in gaps:\n        if j > c:\n            count += 1\n    print('YES' if count < 2 else 'NO')", "for _ in range(int(input())):\n    (l, c) = map(int, input().split(' '))\n    s = input()\n    mgap = 0\n    curr = 0\n    gaps = []\n    i = 0\n    while i < l:\n        while i < l and s[i] == '0':\n            curr += 1\n            i += 1\n        gaps.append(curr)\n        i += 1\n        curr = 0\n    if s[-1] == '1':\n        gaps.append(curr)\n    gaps[0] += gaps[-1]\n    gaps.pop()\n    count = 0\n    for j in gaps:\n        if j > c:\n            count += 1\n    print('YES' if count < 2 else 'NO')", "for _ in range(int(input())):\n    (l, c) = map(int, input().split(' '))\n    s = input()\n    mgap = 0\n    curr = 0\n    gaps = []\n    i = 0\n    while i < l:\n        while i < l and s[i] == '0':\n            curr += 1\n            i += 1\n        gaps.append(curr)\n        i += 1\n        curr = 0\n    if s[-1] == '1':\n        gaps.append(curr)\n    gaps[0] += gaps[-1]\n    gaps.pop()\n    count = 0\n    for j in gaps:\n        if j > c:\n            count += 1\n    print('YES' if count < 2 else 'NO')", "T = int(input())\nfor i in range(T):\n    (n, c) = map(int, input().split())\n    s = input()\n    s1 = s.split('1')\n    l1 = []\n    if s.count('1') == 0 or s.count('1') == 1:\n        print('YES')\n    else:\n        for i in s1:\n            l1.append(len(i))\n        if s[0] == '0' and s[-1] == '0':\n            l1[0] = l1[-1] + l1[0]\n            l1.pop()\n        l1.sort()\n        l1.pop()\n        if c < max(l1):\n            print('NO')\n        else:\n            print('YES')", "for T in range(int(input())):\n    (N, C) = map(int, input().split())\n    A = input()\n    S = A.split('1')\n    a = []\n    if A.count('1') == 1 or A.count('1') == 0:\n        print('YES')\n    else:\n        for i in S:\n            a.append(len(i))\n        if A[0] == '0' and A[-1] == '0':\n            a[0] = a[-1] + a[0]\n            a.pop()\n        a.sort()\n        a.pop()\n        if C < max(a):\n            print('NO')\n        else:\n            print('YES')", "import math\nfor _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = list(map(str, input().strip('')))\n    gaps = 0\n    i = 0\n    ind1 = 0\n    if s[0] == '0':\n        while ind1 < n and s[ind1] != '1':\n            i += 1\n            ind1 += 1\n    j = 0\n    ind2 = n - 1\n    if s[n - 1] == '0':\n        while ind2 >= 0 and s[ind2] != '1':\n            j += 1\n            ind2 -= 1\n    if i + j == 2 * n:\n        print('YES')\n    else:\n        if i + j > c:\n            gaps += 1\n        ind = ind1\n        while ind <= ind2:\n            if s[ind] == '0':\n                y = 0\n                while ind <= ind2 and s[ind] == '0':\n                    y += 1\n                    ind += 1\n                if y > c:\n                    gaps += 1\n            else:\n                ind += 1\n                y = 0\n        if gaps >= 2:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = str(input())\n    posArr = []\n    for i in range(n):\n        if s[i] == '1':\n            posArr.append(i)\n    cnt = 0\n    for i in range(len(posArr) - 1):\n        x = posArr[i + 1] - posArr[i] - 1\n        if x > c:\n            cnt += 1\n    if posArr and n - 1 - posArr[-1] + posArr[0] > c:\n        cnt += 1\n    if cnt <= 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, c) = map(int, input().strip().split())\n    l = input()\n    l1 = []\n    for i in range(len(l)):\n        if l[i] == '1':\n            l1.append(i)\n    count = 0\n    for i in range(len(l1) - 1):\n        if l1[i + 1] - l1[i] - 1 > c:\n            count += 1\n    if l1 and n - 1 - l1[-1] + l1[0] > c:\n        count += 1\n    if count <= 1:\n        print('YES')\n    else:\n        print('NO')", "N = int(input())\nfor _ in range(N):\n    (n, c) = map(int, input().split())\n    s = input()\n    pos = [i for (i, p) in enumerate(s) if p == '1']\n    if len(pos) == 0:\n        print('YES')\n        continue\n    nd = 0\n    for j in range(len(pos) - 1):\n        d = pos[j + 1] - pos[j] - 1\n        if d > c:\n            nd += 1\n    if nd == 0:\n        print('YES')\n    elif nd > 1:\n        print('NO')\n    elif n - pos[-1] + pos[0] - 1 > c:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, c) = map(int, input().split())\n    s = input()\n    gapc = 0\n    try:\n        ind = s.index('1')\n    except:\n        print('YES')\n        continue\n    f = ind\n    ans = 'YES'\n    for i in range(ind + 1, n):\n        if s[i] == '1':\n            if i - f > c + 1:\n                gapc += 1\n                if gapc > 1:\n                    ans = 'NO'\n                    f = i\n                    break\n            f = i\n    if n - (f + 1) + ind > c and gapc >= 1:\n        gapc += 1\n        print('NO')\n        continue\n    print(ans)", "import sys\ninp = sys.stdin.readline()\ntest = int(inp.strip('\\n'))\nresult = ''\nfor _ in range(test):\n    inp = sys.stdin.readline()\n    l = list(map(int, inp.strip('\\n').split()))\n    (n, c) = l\n    inp = sys.stdin.readline()\n    arr = inp.strip('\\n')\n    start = dist = count = last = 0\n    first = True\n    for i in range(n):\n        if arr[i] == '1':\n            if first:\n                start = i\n                first = False\n                dist = 0\n            if dist > c:\n                count += 1\n            dist = 0\n        else:\n            dist += 1\n    if dist + start > c:\n        count += 1\n    if count > 1:\n        sys.stdout.write('NO\\n')\n    else:\n        sys.stdout.write('YES\\n')", "def greater_dist_count(s, c):\n    (count, last_index) = (0, 0)\n    for i in range(1, len(s)):\n        if s[i] == '1':\n            dist = i - last_index - 1\n            if dist > c:\n                count += 1\n            last_index = i\n    if len(s) - s.rfind('1') - 1 > c:\n        count += 1\n    return count\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, c) = list(map(int, input().split(' ')))\n    s = input()\n    if s.find('1') == -1:\n        print('YES')\n    else:\n        s = s[s.find('1'):] + s[:s.find('1')]\n        if greater_dist_count(s, c) > 1:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    pos = []\n    for i in range(n):\n        if s[i] == '1':\n            pos.append(i)\n    cnt = 0\n    for i in range(len(pos) - 1):\n        if pos[i + 1] - pos[i] - 1 > c:\n            cnt += 1\n    if len(pos) != 0 and n - pos[-1] - 1 + pos[0] > c:\n        cnt += 1\n    if cnt <= 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    st = input()\n    idx = []\n    for i in range(n):\n        if st[i] == '1':\n            idx.append(i)\n    cnt = 0\n    in_idx = len(idx)\n    for i in range(in_idx - 1):\n        if idx[i + 1] - idx[i] - 1 > c:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n    elif cnt == 1 and n - 1 - idx[in_idx - 1] + idx[0] > c:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    st = input()\n    idx = []\n    for i in range(n):\n        if st[i] == '1':\n            idx.append(i)\n    cnt = 0\n    in_idx = len(idx)\n    for i in range(in_idx - 1):\n        if idx[i + 1] - idx[i] - 1 > c:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n    elif cnt == 1 and n - 1 - idx[in_idx - 1] + idx[0] > c:\n        print('NO')\n    else:\n        print('YES')", "try:\n    t = int(input())\n    for _ in range(t):\n        (n, c) = map(int, input().split())\n        st = input()\n        idx = []\n        for i in range(n):\n            if st[i] == '1':\n                idx.append(i)\n        cnt = 0\n        in_idx = len(idx)\n        for i in range(in_idx - 1):\n            if idx[i + 1] - idx[i] - 1 > c:\n                cnt += 1\n        if cnt > 1:\n            print('NO')\n        elif cnt == 1 and n - 1 - idx[in_idx - 1] + idx[0] > c:\n            print('NO')\n        else:\n            print('YES')\nexcept:\n    pass", "try:\n    t = int(input())\n    for _ in range(t):\n        (n, c) = map(int, input().split())\n        st = input()\n        idx = []\n        for i in range(n):\n            if st[i] == '1':\n                idx.append(i)\n        cnt = 0\n        in_idx = len(idx)\n        for i in range(in_idx - 1):\n            if idx[i + 1] - idx[i] - 1 > c:\n                cnt += 1\n        if cnt > 1:\n            print('NO')\n        elif cnt == 1 and n - 1 - idx[in_idx - 1] + idx[0] > c:\n            print('NO')\n        else:\n            print('YES')\nexcept:\n    pass", "try:\n    t = int(input())\n    for _ in range(t):\n        (n, c) = map(int, input().split())\n        s = input()\n        res = []\n        count = 0\n        for i in range(len(s)):\n            if s[i] == '1':\n                res.append(i)\n        for i in range(len(res) - 1):\n            if res[i + 1] - res[i] - 1 > c:\n                count += 1\n        if count > 1:\n            print('NO')\n            continue\n        if count == 1 and n - 1 - res[-1] + res[0] > c:\n            print('NO')\n        else:\n            print('YES')\nexcept:\n    pass", "def prog_name():\n    (n, c) = map(int, input().split())\n    s = input()\n    l = []\n    cc = 0\n    for x in range(len(s)):\n        if s[x] == '1':\n            l.append(x)\n    for y in range(len(l) - 1):\n        if l[y + 1] - l[y] - 1 > c:\n            cc += 1\n    if cc > 1:\n        print('NO')\n    elif cc == 1 and n - 1 - l[-1] + l[0] > c:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor unique in range(t):\n    prog_name()", "t = int(input())\nfor _ in range(t):\n    (n, c) = map(int, input().split())\n    s = input()\n    count = 0\n    i = 0\n    f = 0\n    arr = []\n    while i < n:\n        if s[i] == '1':\n            arr.append(i)\n        i = i + 1\n    for i in range(1, len(arr)):\n        if arr[i] - arr[i - 1] - 1 > c:\n            count = count + 1\n    if count > 1:\n        print('NO')\n        continue\n    if count == 1 and n - 1 - arr[-1] + arr[0] > c:\n        print('NO')\n    else:\n        print('YES')", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfrom collections import deque\nfor _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    arr = []\n    for i in range(n):\n        if s[i] == '1':\n            arr.append(i)\n    cnt = 0\n    for i in range(1, len(arr)):\n        if arr[i] - arr[i - 1] - 1 > c:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n        continue\n    if cnt == 1 and n - 1 - arr[-1] + arr[0] > c:\n        print('NO')\n    else:\n        print('YES')", "for tc in range(int(input())):\n    ls = list(map(int, input().split()))\n    n = ls[0]\n    c = ls[1]\n    st = input()\n    arr = []\n    for i in range(n):\n        if st[i] == '1':\n            arr.append(i)\n    cnt = 0\n    for i in range(1, len(arr)):\n        if arr[i] - arr[i - 1] - 1 > c:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n        continue\n    if cnt == 1 and n - 1 - arr[-1] + arr[0] > c:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    l = []\n    for i in range(n):\n        if s[i] == '1':\n            l.append(i)\n    count = 0\n    for i in range(len(l) - 1):\n        if l[i + 1] - l[i] - 1 > c:\n            count += 1\n    if count > 1:\n        print('NO')\n        continue\n    elif count == 1 and n - 1 - l[-1] + l[0] > c:\n        print('NO')\n        continue\n    print('YES')", "from sys import stdin, stdout\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import *\ninput = stdin.readline\nprin = stdout.write\nfrom random import sample\nt = int(input())\nfrom collections import Counter, deque\nfrom math import sqrt, ceil, log2, gcd\n\nclass DisjSet:\n\n    def __init__(self, n):\n        self.rank = [1] * n\n        self.parent = [i for i in range(n)]\n\n    def find(self, x):\n        if self.parent[x] != x:\n            self.parent[x] = self.find(self.parent[x])\n        return self.parent[x]\n\n    def union(self, x, y):\n        xset = self.find(x)\n        yset = self.find(y)\n        if xset == yset:\n            return\n        if self.rank[xset] < self.rank[yset]:\n            self.parent[xset] = yset\n        elif self.rank[xset] > self.rank[yset]:\n            self.parent[yset] = xset\n        else:\n            self.parent[yset] = xset\n            self.rank[xset] = self.rank[xset] + 1\n\ndef f(arr, i, j, d, dist):\n    if i == j:\n        return\n    nn = max(arr[i:j])\n    for tl in range(i, j):\n        if arr[tl] == nn:\n            dist[tl] = d\n            f(arr, i, tl, d + 1, dist)\n            f(arr, tl + 1, j, d + 1, dist)\n\ndef ps(n):\n    cp = 0\n    while n % 2 == 0:\n        n = n // 2\n        cp += 1\n    for ps in range(3, ceil(sqrt(n)) + 1, 2):\n        while n % ps == 0:\n            n = n // ps\n            cp += 1\n    if n != 1:\n        return False\n    return True\n\ndef find_gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef factorials(n, r):\n    slr = n\n    dpr = r\n    qlr = 1\n    qs = 1\n    mod = 10 ** 9 + 7\n    for ip in range(n - r + 1, n + 1):\n        qlr = qlr * ip % mod\n    for ij in range(1, r + 1):\n        qs = qs * ij % mod\n    ans = qlr * modInverse(qs) % mod\n    return ans\n\ndef modInverse(b):\n    qr = 10 ** 9 + 7\n    return pow(b, qr - 2, qr)\ntt = [xa ** 3 for xa in range(0, 10 ** 4 + 1)]\nqq = set(tt)\n\ndef digits(k, rp):\n    n = len(k)\n    pq = k[::-1]\n    jq = ''\n    for ij in pq:\n        if ij == '1':\n            jq += '1'\n        elif ij == '2':\n            jq += '5'\n        elif ij == '4' or ij == '7' or ij == '3' or (ij == '6') or (ij == '9'):\n            jq += '-'\n        elif ij == '5':\n            jq += '2'\n        elif ij == '8':\n            jq += '8'\n        elif ij == '0':\n            jq += '0'\n    if jq.find('-') != -1:\n        return -1\n    else:\n        jl = int(jq)\n        if jl >= rp:\n            return -1\n        else:\n            return jq\n\ndef fr(a, b, h, m):\n    kl = int(b)\n    kl = (kl + 1) % m\n    b = '0' * (2 - len(str(kl))) + str(kl)\n    if b == '0' * 2:\n        kj = (int(a) + 1) % h\n        a = '0' * (2 - len(str(kj))) + str(kj)\n    return [a, b]\n\ndef ilist():\n    return [int(x) for x in input().strip().split()]\n\ndef outstrlist(array: list) -> str:\n    array = [str(x) for x in array]\n    return ' '.join(array)\n\ndef islist():\n    return list(map(str, input().split().rstrip()))\n\ndef outfast(arr: list) -> str:\n    ss = ''\n    for ip in arr:\n        ss += str(ip) + ' '\n    return prin.write(ss)\nfrom types import GeneratorType\n\ndef iterative(f, stack=[]):\n\n    def wrapped_func(*args, **kwargs):\n        if stack:\n            return f(*args, **kwargs)\n        to = f(*args, **kwargs)\n        while True:\n            if type(to) is GeneratorType:\n                stack.append(to)\n                to = next(to)\n                continue\n            stack.pop()\n            if not stack:\n                break\n            to = stack[-1].send(to)\n        return to\n    return wrapped_func\nfor jj in range(t):\n    (n, c) = ilist()\n    kp = input()\n    arr = []\n    for ij in range(n):\n        if kp[ij] == '1':\n            arr.append(ij)\n    brr = []\n    ones = len(arr)\n    if len(arr) == 0 or len(arr) == 1:\n        print('YES')\n        continue\n    for i in range(ones):\n        if i != ones - 1:\n            brr.append(arr[i + 1] - arr[i] - 1)\n        else:\n            brr.append(n - 1 - arr[ones - 1] + arr[0] - 0)\n    brr = sorted(brr)\n    if brr[-2] > c:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, c) = [int(x) for x in input().split(' ')]\n    s = input()\n    if len(set(s)) == 1 and s[0] == '0':\n        print('YES')\n        continue\n    index_of_ones = [i for i in range(n) if s[i] == '1']\n    count = 0\n    for i in range(len(index_of_ones) - 1):\n        if index_of_ones[i + 1] - index_of_ones[i] - 1 > c:\n            count += 1\n    zeroes_at_end = s[index_of_ones[len(index_of_ones) - 1]:].count('0')\n    zeroes_at_beg = s[:index_of_ones[0] + 1].count('0')\n    if zeroes_at_beg + zeroes_at_end > c:\n        count += 1\n    if count <= 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfrom collections import deque\nfor _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    arr = []\n    for i in range(n):\n        if s[i] == '1':\n            arr.append(i)\n    cnt = 0\n    for i in range(1, len(arr)):\n        if arr[i] - arr[i - 1] - 1 > c:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n        continue\n    if cnt == 1 and n - 1 - arr[-1] + arr[0] > c:\n        print('NO')\n    else:\n        print('YES')", "def solve(c, n, bs):\n    errstr = '0' * (c + 1) + '1'\n    if int(bs.count(errstr)) > 2:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor _ in range(t):\n    (n, c) = map(int, input().split())\n    bs = input()\n    solve(c, n, bs * 2)", "t = int(input())\nfor _ in range(t):\n    (n, c) = map(int, input().split())\n    l = []\n    s = input()\n    cnt = 0\n    for x in range(len(s)):\n        if s[x] == '1':\n            l.append(x)\n    for x in range(1, len(l)):\n        if l[x] - l[x - 1] - 1 > c:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n        continue\n    if cnt == 1 and n - 1 - l[len(l) - 1] + l[0] > c:\n        print('NO')\n    else:\n        print('YES')", "for test in range(int(input())):\n    (N, C) = map(int, input().split())\n    S = input()\n    lis = []\n    c = 0\n    lis[:] = S\n    count = 0\n    one = []\n    l = len(lis)\n    for i in range(l):\n        if lis[i] == '1':\n            one.append(i + 1)\n    l1 = len(one)\n    if l1 < 2:\n        print('YES')\n        continue\n    for i in range(1, l1):\n        if one[i] - one[i - 1] - 1 > C:\n            count += 1\n    if N - one[l1 - 1] + one[0] - 1 > C:\n        count += 1\n    if count > 1:\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\nfor _ in range(T):\n    (N, C) = map(int, input().split())\n    S = input()\n    pos = []\n    for i in range(N):\n        if S[i] != '0':\n            pos.append(i)\n    cnt = 0\n    for i in range(len(pos) - 1):\n        if pos[i + 1] - pos[i] - 1 > C:\n            cnt += 1\n    if len(pos) != 0 and N - pos[-1] + pos[0] - 1 > C:\n        cnt += 1\n    if cnt <= 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef solve():\n    (n, tmp) = map(int, input().split())\n    a = str(input())\n    b = [0, 0]\n    count = 0\n    st = 0\n    j = 0\n    for i in range(n):\n        if a[i] == '1':\n            j = i + 1\n            break\n        else:\n            st += 1\n    for i in range(j, n):\n        if a[i] == '0':\n            count += 1\n        else:\n            b.append(count)\n            count = 0\n    b.append(count + st)\n    b.sort()\n    if b[len(b) - 2] <= tmp:\n        print('YES')\n    else:\n        print('NO')\n\ndef main():\n    test_case = int(input())\n    for test in range(test_case):\n        solve()\nmain()", "def isPrime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i = i + 6\n    return True\nt = int(input())\nwhile t > 0:\n    (n, c) = map(int, input().split())\n    s = input()\n    for i in range(n):\n        if s[i] == '1':\n            break\n    a = i\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            break\n    b = i\n    dd = a + (n - b - 1)\n    if a == b:\n        print('YES')\n    else:\n        k = 0\n        d = 0\n        for i in range(a + 1, b + 1):\n            if s[i] == '0':\n                d += 1\n            else:\n                if d > c:\n                    k += 1\n                d = 0\n        if dd > c:\n            if k > 0:\n                print('NO')\n            else:\n                print('YES')\n        elif k > 1:\n            print('NO')\n        else:\n            print('YES')\n    t -= 1", "for i in range(int(input())):\n    (n, c) = map(int, input().split())\n    l = input()\n    idx = []\n    d = 0\n    for j in range(len(l)):\n        if l[j] == '1':\n            idx.append(j)\n    print\n    for j in range(len(idx) - 1):\n        if idx[j + 1] - idx[j] - 1 > c:\n            d += 1\n    if idx and n - idx[-1] - 1 + idx[0] > c:\n        d += 1\n    if d > 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    arr = []\n    for i in range(n):\n        if s[i] == '1':\n            arr.append(i)\n    cnt = 0\n    for i in range(1, len(arr)):\n        if arr[i] - arr[i - 1] - 1 > c:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n        continue\n    if cnt == 1 and n - 1 - arr[-1] + arr[0] > c:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    stack = []\n    (n, c) = map(int, input().split())\n    l = input().strip()\n    co = 0\n    stack = []\n    for i in range(n):\n        if l[i] == '1':\n            stack.append(i)\n    for i in range(len(stack) - 1):\n        if stack[i + 1] - stack[i] - 1 > c:\n            co += 1\n    if stack and n - stack[-1] - 1 + stack[0] > c:\n        co += 1\n    if co <= 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfrom collections import deque\nfor _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    arr = []\n    for i in range(n):\n        if s[i] == '1':\n            arr.append(i)\n    cnt = 0\n    for i in range(1, len(arr)):\n        if arr[i] - arr[i - 1] - 1 > c:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n        continue\n    if cnt == 1 and n - 1 - arr[-1] + arr[0] > c:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = list(input())\n    s = list(map(int, s))\n    one_index = []\n    if n == 1 and c == 0:\n        print('YES')\n    elif n == 1 and c > 0:\n        print('NO')\n    elif n > 1:\n        for i in range(len(s)):\n            if s[i] == 1:\n                one_index.append(i)\n        temp = []\n        if len(one_index) >= 2:\n            for i in range(1, len(one_index)):\n                temp.append(one_index[i] - one_index[i - 1] - 1)\n            temp.append(n - 1 - one_index[-1] + one_index[0])\n        else:\n            print('YES')\n            continue\n        ans = 0\n        for i in temp:\n            if i > c:\n                ans += 1\n        print('NO') if ans > 1 else print('YES')", "t = int(input())\nfor i in range(t):\n    (n, c) = map(int, input().split())\n    s = input()\n    s += s\n    n = 2 * n\n    count = 0\n    ans = 0\n    for j in range(n):\n        if s[j] == '1':\n            if count > c:\n                ans += 1\n            count = 0\n        else:\n            count += 1\n    if ans > 2:\n        print('NO')\n    else:\n        print('YES')", "def valid_string():\n    T = int(input())\n    for _ in range(0, T):\n        (N, C) = input().split()\n        C = int(C)\n        N = int(N)\n        S = input()\n        pos = [i for (i, d) in enumerate(S) if d == '1']\n        ct = 0\n        for (i, value) in enumerate(pos[0:-1]):\n            if pos[i + 1] - pos[i] - 1 > C:\n                ct += 1\n        if len(pos) > 0 and N - pos[-1] - 1 + pos[0] > C:\n            ct += 1\n        if ct > 1:\n            print('NO')\n        else:\n            print('YES')\nvalid_string()", "t = int(input())\nwhile t > 0:\n    (n, c) = [int(x) for x in input().split()]\n    s = input()\n    index = s.find('1')\n    s = s[index + 1:] + s[:index + 1]\n    (count, prob) = (0, 0)\n    for i in s:\n        if i == '1':\n            if count > c:\n                prob += 1\n            count = 0\n        else:\n            count += 1\n    if prob > 1:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, c) = map(int, input().split())\n    s = input()\n    s += s\n    n = 2 * n\n    count = 0\n    ans = 0\n    for j in range(n):\n        if s[j] == '1':\n            if count > c:\n                ans += 1\n            count = 0\n        else:\n            count += 1\n    if ans > 2:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, c) = map(int, input().split())\n    s = input()\n    count = 0\n    dummy = s[:]\n    dummy = dummy.strip('0')\n    if n - len(dummy) > c:\n        count += 1\n    start = 0\n    for i in range(1, len(dummy)):\n        if dummy[i] == '1':\n            if i - start - 1 > c:\n                count += 1\n            start = i\n    if count > 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, c) = map(int, input().split())\n    s = input()\n    count = 0\n    dummy = s[:]\n    dummy = dummy.strip('0')\n    if n - len(dummy) > c:\n        count += 1\n    start = 0\n    for i in range(1, len(dummy)):\n        if dummy[i] == '1':\n            if i - start - 1 > c:\n                count += 1\n            start = i\n    if count > 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    flag = 0\n    index = -1\n    for i in range(n):\n        if s[i] == '1':\n            if index == -1:\n                index = i\n            else:\n                if i - index - 1 > k:\n                    flag += 1\n                index = i\n    if flag > 1:\n        print('NO')\n    elif flag == 0:\n        print('YES')\n    else:\n        e = 0\n        i = n - 1\n        while i >= 0 and s[i] == '0':\n            i -= 1\n            e += 1\n        i = 0\n        while i < n and s[i] == '0':\n            i += 1\n            e += 1\n        if e <= k:\n            print('YES')\n        else:\n            print('NO')", "T = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    s = input()\n    l = []\n    c = 0\n    f = 0\n    st = 0\n    lt = 0\n    for i in s:\n        if i == '1':\n            if f:\n                l.append(c)\n                c = 0\n            else:\n                f = 1\n                st = c\n                c = 0\n        else:\n            c += 1\n    lt = c\n    if st and lt:\n        l.append(st + lt)\n    else:\n        l.append(max(st, lt))\n    cc = 0\n    for i in l:\n        if i > m:\n            cc += 1\n    if cc > 1:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (n, c1) = list(map(int, input().split()))\n    s = input()\n    c = 0\n    i = 0\n    a = []\n    while i < n:\n        if s[i] == '0':\n            c += 1\n        else:\n            if c != 0:\n                a.append(c)\n            c = 0\n        i += 1\n    if c != 0:\n        a.append(c)\n    if s[0] == '0':\n        if s[len(s) - 1] == '0':\n            a[0] += a[len(a) - 1]\n            a = a[0:len(a) - 1]\n    if len(a) == 0:\n        print('YES')\n    else:\n        count = 0\n        for i in range(len(a)):\n            if a[i] > c1:\n                count += 1\n        if count <= 1:\n            print('YES')\n        else:\n            print('NO')", "T = int(input())\nfor i in range(T):\n    Arr = list(map(int, input().split()))\n    N = Arr[0]\n    C = Arr[1]\n    cnt1 = 0\n    cnt2 = 0\n    cnt3 = 0\n    flag = 0\n    A = list(input())\n    for j in range(N):\n        if A[j] == '1':\n            if cnt1 > C:\n                cnt2 += 1\n            cnt1 = 0\n            flag = 1\n        elif A[j] == '0' and flag == 1:\n            cnt1 += 1\n    for j in range(N):\n        if A[j] == '1':\n            break\n        elif A[j] == '0':\n            cnt3 += 1\n    for j in range(N - 1, -1, -1):\n        if A[j] == '1':\n            break\n        elif A[j] == '0':\n            cnt3 += 1\n    if cnt3 > C:\n        cnt2 += 1\n    if cnt2 > 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n, c) = map(int, input().split())\n    s = input()\n    l = []\n    for j in range(n):\n        if s[j] == '1':\n            l.append(j)\n    m = len(l)\n    if m == 0:\n        print('YES')\n        continue\n    ans = 0\n    for j in range(m - 1):\n        if l[j + 1] - l[j] - 1 > c:\n            ans += 1\n        if ans > 1:\n            break\n    if n - l[m - 1] + l[0] - 1 > c:\n        ans += 1\n    if ans > 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, c) = map(int, input().split())\n    s = str(input())\n    li = []\n    cnt = 0\n    for i in range(0, len(s)):\n        if s[i] == '1':\n            li.append(i)\n    for i in range(1, len(li)):\n        if li[i] - li[i - 1] - 1 > c:\n            cnt += 1\n    if len(li) != 0 and n - li[len(li) - 1] + li[0] - 1 > c:\n        cnt += 1\n    if cnt <= 1:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    s = str(input())\n    pos1 = []\n    for j in range(a):\n        if s[j] == '1':\n            pos1.append(j)\n    sets = 0\n    for j in range(1, len(pos1)):\n        if pos1[j] - pos1[j - 1] - 1 > b:\n            sets += 1\n    if sets > 1:\n        print('NO')\n    elif sets == 1 and a - pos1[-1] - 1 + pos1[0] > b:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input().strip()\n    p = [0 for i in range(n)]\n    cc = 0\n    k = 1\n    d = {}\n    for i in range(n):\n        if s[i] == '0':\n            cc += 1\n        else:\n            d[k] = cc\n            k += 1\n            cc = 0\n    k = len(d)\n    if k == 1 or k == 0:\n        print('YES')\n        continue\n    f = 0\n    for i in range(2, k):\n        if d[i] > c:\n            f += 1\n    if f > 1:\n        print('NO')\n        continue\n    elif f == 1 and d[k] > c:\n        print('NO')\n        continue\n    i = n - 1\n    g = 0\n    while i >= 0 and s[i] != '1':\n        i -= 1\n        g += 1\n    if f == 1 and g + d[1] > c:\n        print('NO')\n    elif d[k] > c and d[1] + g > c:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    one_index = []\n    for i in range(len(s)):\n        if s[i] == '1':\n            one_index.append(i)\n    res = []\n    for i in range(len(one_index) - 1):\n        res.append(abs(one_index[i] - one_index[i + 1]) - 1)\n    zc = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            break\n        zc += 1\n    for j in range(len(s) - 1, -1, -1):\n        if s[j] == '1':\n            break\n        zc += 1\n    res.append(zc)\n    count = 0\n    for i in res:\n        if i > c:\n            count += 1\n    if count <= 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, c) = list(map(int, input().split()))\n    s = input()\n    pos = []\n    cnt = 0\n    for i in range(n):\n        if s[i] == '1':\n            pos.append(i)\n    for i in range(0, len(pos) - 1):\n        if pos[i + 1] - pos[i] - 1 > c:\n            cnt += 1\n    if len(pos) > 0 and n - pos[-1] - 1 + pos[0] > c:\n        cnt += 1\n    if cnt > 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    (n, c) = map(int, input().split())\n    s = input()\n    i = []\n    ans = 0\n    for j in range(0, n):\n        if s[j] == '1':\n            i.append(j)\n    for k in range(0, len(i) - 1):\n        if i[k + 1] - i[k] - 1 > c:\n            ans = ans + 1\n    if len(i) != 0 and n - 1 - i[-1] + i[0] > c:\n        ans = ans + 1\n    if ans <= 1:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    (n, c) = map(int, input().split())\n    s = input()\n    i = []\n    ans = 0\n    for j in range(0, n):\n        if s[j] == '1':\n            i.append(j)\n    for k in range(0, len(i) - 1):\n        if i[k + 1] - i[k] - 1 > c:\n            ans = ans + 1\n    if len(i) != 0 and n - 1 - i[-1] + i[0] > c:\n        ans = ans + 1\n    if ans <= 1:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfrom collections import deque\nfor _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    arr = []\n    for i in range(n):\n        if s[i] == '1':\n            arr.append(i)\n    cnt = 0\n    for i in range(1, len(arr)):\n        if arr[i] - arr[i - 1] - 1 > c:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n        continue\n    if cnt == 1 and n - 1 - arr[-1] + arr[0] > c:\n        print('NO')\n    else:\n        print('YES')", "def solve(n, c, s):\n    diff = []\n    for i in range(n):\n        if s[i] == '1':\n            diff.append(i + 1)\n    cnt = 0\n    for i in range(len(diff) - 1):\n        if diff[i + 1] - diff[i] - 1 > c:\n            cnt += 1\n    if len(diff) != 0 and n - diff[-1] - 1 + diff[0] > c:\n        cnt += 1\n    if cnt <= 1:\n        return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    print(solve(n, c, s))", "t = int(input())\nwhile t:\n    (n, c) = map(int, input().split())\n    b = input()\n    ind = 0\n    l = []\n    for i in b:\n        if i == '1':\n            l.append(ind)\n        ind += 1\n    l2 = []\n    x = 0\n    if l == []:\n        pass\n    else:\n        for i in range(len(l) - 1):\n            l2.append(l[x + 1] - l[x] - 1)\n            x += 1\n        l2.append(n - (l[-1] - l[0] + 1))\n    say = 0\n    for i in l2:\n        if i > c:\n            say += 1\n    if say > 1:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "from sys import stdin\ninput = stdin.readline\nit = lambda : int(input())\nmp = lambda : map(int, input().split())\nfor _ in range(it()):\n    (a, b) = mp()\n    k = input().strip()\n    from itertools import groupby\n    l = k.strip('0')\n    tot = 0\n    if len(k) - len(l) > b:\n        tot += 1\n    rem = list(l)\n    cnt = 0\n    while rem:\n        cur = rem.pop()\n        if cur == '0':\n            cnt += 1\n        else:\n            if cnt > b:\n                tot += 1\n            cnt = 0\n        if tot > 1:\n            break\n    if tot <= 1:\n        print('YES')\n    else:\n        print('NO')", "def string(c, s):\n    pos1 = []\n    for i in range(len(s)):\n        if s[i] == '1':\n            pos1.append(i)\n    cnt = 0\n    for i in range(len(pos1) - 1):\n        if pos1[i + 1] - pos1[i] - 1 > c:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n    elif cnt == 1 and pos1[0] + len(s) - 1 - pos1[-1] > c:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nwhile t:\n    (n, c) = map(int, input().split())\n    s = input()\n    string(c, s)\n    t -= 1", "def work():\n    (d, c) = map(int, input().split())\n    a = list(map(int, list(input())))\n    xx = check(a, c)\n    if xx > 1:\n        print('NO')\n    else:\n        print('YES')\n\ndef check(a, c):\n    i = 0\n    while i < len(a):\n        if a[i] == 1:\n            break\n        i += 1\n    s = i\n    t = 0\n    ocu = 0\n    while i < len(a):\n        if a[i] == 1:\n            if t > c:\n                ocu += 1\n            t = 0\n        else:\n            t += 1\n        i += 1\n    if s + t > c:\n        ocu += 1\n    return ocu\nt = int(input())\nwhile t > 0:\n    t -= 1\n    work()", "def main1():\n    output = ''\n    t = int(input())\n    for i in range(t):\n        (n, c) = tuple(map(int, input().split()))\n        assert 1 <= n <= 500000 and 0 <= c <= max(0, n - 2)\n        string = input()\n        start = 0\n        offset = 1\n        number_of_zero = 0\n        for _ in range(2 * n):\n            if start >= n:\n                break\n            if string[start] == '1':\n                if string[(start + offset) % n] == '1':\n                    if number_of_zero > c:\n                        start = start + offset\n                        offset = 0\n                    number_of_zero = 0\n                else:\n                    number_of_zero += 1\n                offset += 1\n                if offset == n:\n                    break\n            else:\n                start += 1\n        output += '{}\\n'.format('YES' if offset == n else 'NO')\n    print(output)\n\ndef main():\n    output = ''\n    t = int(input())\n    Sum = 0\n    for i in range(t):\n        (n, c) = tuple(map(int, input().split()))\n        assert 1 <= n <= 500000 and 0 <= c <= max(0, n - 2)\n        Sum += n\n        assert Sum <= 1000000\n        string = input()\n        count = 0\n        start = 0\n        for _ in range(n):\n            if string[start] != '1':\n                start += 1\n            else:\n                break\n        buffer = 0\n        for j in range(1, n):\n            if count == 2:\n                break\n            if string[(j + start) % n] == '1':\n                count += buffer > c\n                buffer = 0\n            else:\n                buffer += 1\n        count += buffer > c\n        output += '{}\\n'.format('YES' if count < 2 else 'NO')\n    print(output)\nmain()", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    binary = input()\n    lst = []\n    count = 0\n    for i in range(len(binary)):\n        if binary[i] == '1':\n            lst.append(i)\n    for i in range(len(lst) - 1):\n        if lst[i + 1] - lst[i] - 1 > c:\n            count += 1\n    if lst and n - lst[-1] - 1 + lst[0] > c:\n        count += 1\n    if count <= 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = list(input())\n    ones = [i + 1 for i in range(n) if s[i] == '1']\n    l = len(ones)\n    if l < 2:\n        print('YES')\n    else:\n        c = 0\n        for j in range(1, l):\n            if ones[j] - ones[j - 1] - 1 > k:\n                c += 1\n        if n - ones[l - 1] + ones[0] - 1 > k:\n            c += 1\n        if c > 1:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    ans = []\n    for i in range(len(s)):\n        if s[i] == '1':\n            ans += [i]\n    if len(ans) > 1:\n        l = len(s) - 1 - ans[-1] + ans[0]\n        ans.append(ans[-1] + l + 1)\n        cnt = 0\n        for i in range(1, len(ans)):\n            if ans[i] - ans[i - 1] - 1 > c:\n                cnt += 1\n        if cnt < 2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, c) = map(int, input().split())\n    s = str(input())\n    li = []\n    cnt = 0\n    for i in range(0, len(s)):\n        if s[i] == '1':\n            li.append(i)\n    for i in range(1, len(li)):\n        if li[i] - li[i - 1] - 1 > c:\n            cnt += 1\n    if len(li) != 0 and n - li[len(li) - 1] + li[0] - 1 > c:\n        cnt += 1\n    if cnt <= 1:\n        print('YES')\n    else:\n        print('NO')", "def gcd(a, b):\n    while b:\n        (a, b) = (b, a % b)\n    return a\n\ndef prime(n):\n    arr = [True] * (n + 1)\n    arr[0] = False\n    arr[1] = False\n    for i in range(n + 1):\n        if arr[i]:\n            for j in range(i * i, n + 1, i):\n                arr[j] = False\n    return arr[n]\nfor _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    ans = []\n    for i in range(len(s)):\n        if s[i] == '1':\n            ans += [i]\n    if len(ans) > 1:\n        l = len(s) - 1 - ans[-1] + ans[0]\n        ans.append(ans[-1] + l + 1)\n        cnt = 0\n        for i in range(1, len(ans)):\n            if ans[i] - ans[i - 1] - 1 > c:\n                cnt += 1\n        if cnt < 2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input()))\n    diff = []\n    start = True\n    end = -1\n    first = 0\n    for i in range(n):\n        if s[i] == 1:\n            if start:\n                first = i\n                end = 0\n                start = False\n            else:\n                diff.append(end)\n                end = 0\n        else:\n            end += 1\n    diff.append(first + end)\n    ans = 0\n    for i in diff:\n        if i > k:\n            ans += 1\n    if ans <= 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, c) = list(map(int, input().split()))\n    a = list(input())\n    b = []\n    for i in range(n):\n        if a[i] == '1':\n            b.append(i)\n    x = 0\n    for i in range(len(b) - 1):\n        if b[i + 1] - b[i] - 1 > c:\n            x += 1\n    if x > 1:\n        print('NO')\n    elif x == 1 and b[0] + n - 1 - b[-1] > c:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = list(input())\n    ones = [i + 1 for i in range(n) if s[i] == '1']\n    l = len(ones)\n    if l < 2:\n        print('YES')\n    else:\n        c = 0\n        for j in range(1, l):\n            if ones[j] - ones[j - 1] - 1 > k:\n                c += 1\n        if n - ones[l - 1] + ones[0] - 1 > k:\n            c += 1\n        if c > 1:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    string = input()\n    starting_zero = 0\n    zero = 0\n    check = 0\n    for a in range(n):\n        if string[a] == '1':\n            starting_zero = a\n            break\n    for a in range(starting_zero, n):\n        if string[a] == '1':\n            if zero > c:\n                check += 1\n            zero = 0\n        else:\n            zero += 1\n        if check > 1:\n            break\n    if starting_zero + zero > c:\n        check += 1\n    if check > 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = list(input())\n    ones = [i + 1 for i in range(n) if s[i] == '1']\n    l = len(ones)\n    if l < 2:\n        print('YES')\n    else:\n        c = 0\n        for j in range(1, l):\n            if ones[j] - ones[j - 1] - 1 > k:\n                c += 1\n        if n - ones[l - 1] + ones[0] - 1 > k:\n            c += 1\n        if c > 1:\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\nfor k in range(t):\n    (n, c) = input().split(' ')\n    n = int(n)\n    c = int(c)\n    s = input()\n    left_end = 0\n    right_end = 0\n    i = 0\n    if s[i] == '0':\n        while i < len(s) and s[i] == '0':\n            i += 1\n            left_end += 1\n    i = len(s) - 1\n    if s[i] == '0':\n        while i > 0 and s[i] == '0':\n            i -= 1\n            right_end += 1\n    i = 0\n    while i < len(s) and s[i] != '1':\n        i += 1\n    i += 1\n    count = 0\n    violations = 0\n    while i < len(s):\n        while i < len(s) and s[i] == '0':\n            i += 1\n            count += 1\n        if i < len(s) and count > c:\n            violations += 1\n        count = 0\n        while i < len(s) and s[i] == '1':\n            i += 1\n    if left_end + right_end > c:\n        violations += 1\n    if violations > 1:\n        print('NO')\n    else:\n        print('YES')", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfrom collections import deque\nfor _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    arr = []\n    for i in range(n):\n        if s[i] == '1':\n            arr.append(i)\n    cnt = 0\n    for i in range(1, len(arr)):\n        if arr[i] - arr[i - 1] - 1 > c:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n        continue\n    if cnt == 1 and n - 1 - arr[-1] + arr[0] > c:\n        print('NO')\n    else:\n        print('YES')", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfrom collections import deque\nfor _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    arr = []\n    for i in range(n):\n        if s[i] == '1':\n            arr.append(i)\n    cnt = 0\n    for i in range(1, len(arr)):\n        if arr[i] - arr[i - 1] - 1 > c:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n        continue\n    if cnt == 1 and n - 1 - arr[-1] + arr[0] > c:\n        print('NO')\n    else:\n        print('YES')", "st = int(input())\narr = []\nstrarr = []\nfor i in range(0, st):\n    l = list(map(int, input().split(' ')[:2]))\n    arr.append(l)\n    str1 = input()\n    strarr.append(str1[:l[0]])\n\ndef printAns(arr, strarr):\n    for i in range(0, len(arr)):\n        nc = arr[i]\n        first1 = False\n        string1 = strarr[i]\n        countarr = []\n        for lp2 in range(0, len(string1)):\n            if string1[lp2] == '1' and (not first1):\n                first1 = True\n                count = 0\n            elif string1[lp2] == '0' and first1:\n                count += 1\n            elif string1[lp2] == '1' and first1:\n                countarr.append(count)\n                count = 0\n        key = 0\n        count2 = 0\n        key2 = len(string1) - 1\n        while string1[key] != '1' and key < len(string1) - 1:\n            count2 += 1\n            key += 1\n        while string1[key2] != '1' and key2 >= 0:\n            count2 += 1\n            key2 -= 1\n        countarr.append(count2)\n        if len(countarr) > 1:\n            max1 = countarr[0]\n            maxind = 0\n            for i in range(0, len(countarr)):\n                if max1 < countarr[i]:\n                    max1 = countarr[i]\n                    maxind = i\n            (countarr[0], countarr[maxind]) = (countarr[maxind], countarr[0])\n            max2 = countarr[1]\n            for i in range(1, len(countarr)):\n                if max2 < countarr[i]:\n                    max2 = countarr[i]\n            if max2 > nc[1]:\n                print('NO')\n            else:\n                print('YES')\n        else:\n            print('YES')\nprintAns(arr, strarr)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = list(input())\n    ones = [i + 1 for i in range(n) if s[i] == '1']\n    l = len(ones)\n    if l < 2:\n        print('YES')\n    else:\n        c = 0\n        for j in range(1, l):\n            if ones[j] - ones[j - 1] - 1 > k:\n                c += 1\n        if n - ones[l - 1] + ones[0] - 1 > k:\n            c += 1\n        if c > 1:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    flag = 0\n    for i in s:\n        if i == '1':\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n        continue\n    a = [len(i) for i in s.split('1')]\n    qu = wu = 0\n    for i in range(n):\n        if s[i] == '1':\n            break\n        qu += 1\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            break\n        wu += 1\n    x = qu + wu\n    if wu != 0 and len(a) > 0:\n        del a[-1]\n    if qu != 0 and len(a) > 0:\n        del a[0]\n    if len(a) == 0:\n        print('YES')\n        continue\n    if max(a) <= c:\n        print('YES')\n        continue\n    if x > c:\n        print('NO')\n        continue\n    a.sort()\n    del a[-1]\n    if len(a) > 0 and a[-1] > c:\n        print('NO')\n        continue\n    print('YES')", "def cal_violations():\n    z = S.split('1')\n    if len(z) > 2:\n        a = z.pop(0)\n        b = z.pop(-1)\n        nz = [1 for f in z if len(f) > C]\n        return (sum(nz), len(a), len(b))\n    else:\n        return (0, 0, 0)\nfor _ in range(int(input())):\n    (N, C) = list(map(int, input().split()))\n    S = input()\n    (violations, a, b) = cal_violations()\n    if violations == 0:\n        print('YES')\n    elif violations > 1:\n        print('NO')\n    elif a + b > C:\n        print('NO')\n    else:\n        print('YES')", "for z in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input().strip()\n    end = -1\n    l = []\n    for i in range(n):\n        if s[i] == '1':\n            if end != -1:\n                l.append(i - end - 1)\n            else:\n                start = i\n            end = i\n    count = 0\n    if l:\n        l.append(n - end - 1 + start)\n    for i in range(len(l) - 1):\n        if l[i] > c:\n            count += 1\n            ind = i\n    if count == 0 or (count == 1 and (i + 2 != len(l) or l[-1] <= c)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nN = [0] * t\nC = [0] * t\narr = [''] * t\nfor i in range(t):\n    (N[i], C[i]) = list(map(int, input().split()))\n    arr[i] = input()\nfor i in range(t):\n    flagg = True\n    count = 0\n    k = 0\n    while k < len(arr[i]) and arr[i][k] == '0':\n        count += 1\n        k += 1\n    k = len(arr[i]) - 1\n    while k > 0 and arr[i][k] == '0':\n        count += 1\n        k -= 1\n    if count > C[i]:\n        flag = True\n    else:\n        flag = False\n    count = 0\n    for j in arr[i].strip('0'):\n        if j == '0':\n            count += 1\n            continue\n        if count > C[i] and flag == True:\n            print('NO')\n            flagg = False\n            break\n        if count > C[i] and flag == False:\n            flag = True\n        count = 0\n    if flagg:\n        print('YES')", "for t in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    zerogroup = 0\n    c0 = 0\n    c1 = 0\n    i = 0\n    j = n - 1\n    while (s[i] != '1' or s[j] != '1') and i != n - 1:\n        if s[i] == '0':\n            c0 += 1\n            i += 1\n        if s[j] == '0':\n            c0 += 1\n            j -= 1\n    if c0 > c:\n        zerogroup += 1\n    for p in range(i + 1, j + 1):\n        if s[p] == '1':\n            if c1 > c:\n                zerogroup += 1\n            c1 = 0\n        elif s[p] == '0':\n            c1 += 1\n    if zerogroup > 1:\n        print('NO')\n    else:\n        print('YES')", "for t in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    zerogroup = 0\n    c0 = 0\n    c1 = 0\n    i = 0\n    j = n - 1\n    while (s[i] != '1' or s[j] != '1') and i != n - 1:\n        if s[i] == '0':\n            c0 += 1\n            i += 1\n        if s[j] == '0':\n            c0 += 1\n            j -= 1\n    if c0 > c:\n        zerogroup += 1\n    for p in range(i + 1, j + 1):\n        if s[p] == '1':\n            if c1 > c:\n                zerogroup += 1\n            c1 = 0\n        elif s[p] == '0':\n            c1 += 1\n    if zerogroup > 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, c) = map(int, input().split())\n    s = input()\n    e = 0\n    (l, m, bc, ac) = (0, 0, 0, 0)\n    for i in range(len(s)):\n        if s[i] == '0':\n            if l != 0:\n                m += 1\n            else:\n                ac += 1\n        elif l != 0:\n            if m > c:\n                if bc == 1:\n                    e = 1\n                    break\n                else:\n                    bc = 1\n                    m = 0\n            else:\n                m = 0\n        else:\n            l = 1\n    if e == 1:\n        print('NO')\n    elif ac + m > c and bc == 1 and (l == 1):\n        print('NO')\n    else:\n        print('YES')", "for rk in range(int(input())):\n    (n, c) = [int(i) for i in input().split()]\n    s = input()\n    case = True\n    se = {}\n    p = 1\n    for i in range(n):\n        if s[i] == '1':\n            se[p] = i\n            p += 1\n    diff = []\n    for i in range(1, p):\n        if i == p - 1:\n            sun = n - (se[i] + 1) + se[1]\n            diff.append(sun)\n        else:\n            sun = se[i + 1] - (se[i] + 1)\n            diff.append(sun)\n    time = 0\n    for i in diff:\n        if i <= c:\n            case = True\n        elif i > c and time == 0:\n            time += 1\n        else:\n            case = False\n            break\n    if case == True:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom collections import defaultdict, deque\nimport math\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp = lambda : list(map(int, sys.stdin.readline().rstrip('\\r\\n').split()))\nINF = float('inf')\nMOD = 998244353\nt = 1\nt = int(input())\nfor _ in range(t):\n    (n, c) = inp()\n    s = input()\n    aux = []\n    i = 0\n    while i < n:\n        if s[i] == '0':\n            count = 1\n            while i < n - 1 and s[i] == s[i + 1]:\n                count += 1\n                i += 1\n            aux.append(count)\n        i += 1\n    if s[0] == '0' and s[n - 1] == '0':\n        if len(aux) >= 2:\n            f = aux.pop(0)\n            l = aux.pop(len(aux) - 1)\n            aux.append(f + l)\n    cnt = 0\n    for i in range(len(aux)):\n        if aux[i] > c:\n            cnt += 1\n    if cnt <= 1:\n        print('YES')\n    else:\n        print('NO')", "def solve(c, n, bs):\n    errstr = '0' * (c + 1) + '1'\n    if int(bs.count(errstr)) > 2:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor _ in range(t):\n    (n, c) = map(int, input().split())\n    bs = input()\n    solve(c, n, bs * 2)"]