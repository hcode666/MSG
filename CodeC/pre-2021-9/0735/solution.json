["import sys\nimport math\n\ndef main(arr):\n    for e in arr:\n        e[0] = int(e[0])\n        e[2] = int(e[2])\n        e[1] = int(e[1])\n        e[3] = int(e[3])\n        e += [True]\n    ans = ['wait']\n    for i in range(1, len(arr)):\n        p1 = arr[i]\n        for j in range(0, i):\n            p2 = arr[j]\n            if p2[-1]:\n                if p2[1] <= p1[0] and p1[0] <= p2[2] and (p1[1] <= p2[0]) and (p2[0] <= p1[2]):\n                    if p2[3] == p1[3] and p2[4] == p1[4]:\n                        if p1[5] == 'random' and p2[5] == 'random' or (p1[5] == 'black' and p2[5] == 'white') or (p2[5] == 'black' and p1[5] == 'white'):\n                            ans += [j + 1]\n                            p1[-1] = False\n                            p2[-1] = False\n                            break\n            if j == i - 1:\n                ans += ['wait']\n    for e in ans:\n        print(e)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(str, input().split())))\n    main(arr)", "import sys\nimport math\n\ndef main(arr):\n    for e in arr:\n        e[0] = int(e[0])\n        e[2] = int(e[2])\n        e[1] = int(e[1])\n        e[3] = int(e[3])\n        e += [True]\n    ans = ['wait']\n    for i in range(1, len(arr)):\n        p1 = arr[i]\n        for j in range(0, i):\n            p2 = arr[j]\n            if p2[-1]:\n                if p2[1] <= p1[0] and p1[0] <= p2[2] and (p1[1] <= p2[0]) and (p2[0] <= p1[2]):\n                    if p2[3] == p1[3] and p2[4] == p1[4]:\n                        if p1[5] == 'random' and p2[5] == 'random' or (p1[5] == 'black' and p2[5] == 'white') or (p2[5] == 'black' and p1[5] == 'white'):\n                            ans += [j + 1]\n                            p1[-1] = False\n                            p2[-1] = False\n                            break\n            if j == i - 1:\n                ans += ['wait']\n    for e in ans:\n        print(e)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(str, input().split())))\n    main(arr)", "import sys\nimport math\n\ndef main(arr):\n    for e in arr:\n        e[0] = int(e[0])\n        e[2] = int(e[2])\n        e[1] = int(e[1])\n        e[3] = int(e[3])\n        e += [True]\n    ans = ['wait']\n    for i in range(1, len(arr)):\n        p1 = arr[i]\n        for j in range(0, i):\n            p2 = arr[j]\n            if p2[-1]:\n                if p2[1] <= p1[0] and p1[0] <= p2[2] and (p1[1] <= p2[0]) and (p2[0] <= p1[2]):\n                    if p2[3] == p1[3] and p2[4] == p1[4]:\n                        if p1[5] == 'random' and p2[5] == 'random' or (p1[5] == 'black' and p2[5] == 'white') or (p2[5] == 'black' and p1[5] == 'white'):\n                            ans += [j + 1]\n                            p1[-1] = False\n                            p2[-1] = False\n                            break\n            if j == i - 1:\n                ans += ['wait']\n    for e in ans:\n        print(e)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(str, input().split())))\n    main(arr)", "import sys\nimport math\n\ndef main(arr):\n    for e in arr:\n        e[0] = int(e[0])\n        e[2] = int(e[2])\n        e[1] = int(e[1])\n        e[3] = int(e[3])\n        e += [True]\n    ans = ['wait']\n    for i in range(1, len(arr)):\n        p1 = arr[i]\n        for j in range(0, i):\n            p2 = arr[j]\n            if p2[-1]:\n                if p2[1] <= p1[0] and p1[0] <= p2[2] and (p1[1] <= p2[0]) and (p2[0] <= p1[2]):\n                    if p2[3] == p1[3] and p2[4] == p1[4]:\n                        if p1[5] == 'random' and p2[5] == 'random' or (p1[5] == 'black' and p2[5] == 'white') or (p2[5] == 'black' and p1[5] == 'white'):\n                            ans += [j + 1]\n                            p1[-1] = False\n                            p2[-1] = False\n                            break\n            if j == i - 1:\n                ans += ['wait']\n    for e in ans:\n        print(e)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(str, input().split())))\n    main(arr)", "import sys\nimport math\n\ndef main(arr):\n    for e in arr:\n        e[0] = int(e[0])\n        e[2] = int(e[2])\n        e[1] = int(e[1])\n        e[3] = int(e[3])\n        e += [True]\n    ans = ['wait']\n    for i in range(1, len(arr)):\n        p1 = arr[i]\n        for j in range(0, i):\n            p2 = arr[j]\n            if p2[-1]:\n                if p2[1] <= p1[0] and p1[0] <= p2[2] and (p1[1] <= p2[0]) and (p2[0] <= p1[2]):\n                    if p2[3] == p1[3] and p2[4] == p1[4]:\n                        if p1[5] == 'random' and p2[5] == 'random' or (p1[5] == 'black' and p2[5] == 'white') or (p2[5] == 'black' and p1[5] == 'white'):\n                            ans += [j + 1]\n                            p1[-1] = False\n                            p2[-1] = False\n                            break\n            if j == i - 1:\n                ans += ['wait']\n    for e in ans:\n        print(e)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(str, input().split())))\n    main(arr)", "import sys\nimport math\n\ndef main(arr):\n    for e in arr:\n        e[0] = int(e[0])\n        e[2] = int(e[2])\n        e[1] = int(e[1])\n        e[3] = int(e[3])\n        e += [True]\n    ans = ['wait']\n    for i in range(1, len(arr)):\n        p1 = arr[i]\n        for j in range(0, i):\n            p2 = arr[j]\n            if p2[-1]:\n                if p2[1] <= p1[0] and p1[0] <= p2[2] and (p1[1] <= p2[0]) and (p2[0] <= p1[2]):\n                    if p2[3] == p1[3] and p2[4] == p1[4]:\n                        if p1[5] == 'random' and p2[5] == 'random' or (p1[5] == 'black' and p2[5] == 'white') or (p2[5] == 'black' and p1[5] == 'white'):\n                            ans += [j + 1]\n                            p1[-1] = False\n                            p2[-1] = False\n                            break\n            if j == i - 1:\n                ans += ['wait']\n    for e in ans:\n        print(e)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(str, input().split())))\n    main(arr)", "def solve():\n    n = int(input())\n    arr = []\n    for j in range(n):\n        a = list(input().split())\n        a[0] = int(a[0])\n        a[1] = int(a[1])\n        a[2] = int(a[2])\n        a[3] = int(a[3])\n        arr.append(a)\n    res = ['wait']\n    c = 0\n    for j in range(1, n):\n        for k in range(0, j):\n            if arr[k][0] != 0 and arr[j][1] <= arr[k][0] <= arr[j][2] and (arr[k][1] <= arr[j][0] <= arr[k][2]) and (arr[k][3] == arr[j][3]) and (arr[k][4] == arr[j][4]) and (arr[j][5] == arr[k][5] == 'random' or (arr[j][5] == 'white' and arr[k][5] == 'black') or (arr[j][5] == 'black' and arr[k][5] == 'white')):\n                c = 1\n                res.append(k + 1)\n                arr[k][0] = 0\n                arr[j][0] = 0\n                break\n        if c == 0:\n            res.append('wait')\n        c = 0\n    print(*res, sep='\\n')\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        a = list(input().split())\n        a[0] = int(a[0])\n        a[1] = int(a[1])\n        a[2] = int(a[2])\n        a[3] = int(a[3])\n        arr.append(a)\n    res = ['wait']\n    c = 0\n    for j in range(1, n):\n        for k in range(0, j):\n            if arr[k][0] != 0 and arr[j][1] <= arr[k][0] <= arr[j][2] and (arr[k][1] <= arr[j][0] <= arr[k][2]) and (arr[k][3] == arr[j][3]) and (arr[k][4] == arr[j][4]) and (arr[j][5] == arr[k][5] == 'random' or (arr[j][5] == 'white' and arr[k][5] == 'black') or (arr[j][5] == 'black' and arr[k][5] == 'white')):\n                c = 1\n                res.append(k + 1)\n                arr[k][0] = 0\n                arr[j][0] = 0\n                break\n        if c == 0:\n            res.append('wait')\n        c = 0\n    print(*res, sep='\\n')", "def solve():\n    n = int(input())\n    arr = []\n    for j in range(n):\n        a = list(input().split())\n        a[0] = int(a[0])\n        a[1] = int(a[1])\n        a[2] = int(a[2])\n        a[3] = int(a[3])\n        arr.append(a)\n    res = ['wait']\n    c = 0\n    for j in range(1, n):\n        for k in range(0, j):\n            if arr[k][0] != 0 and arr[j][1] <= arr[k][0] <= arr[j][2] and (arr[k][1] <= arr[j][0] <= arr[k][2]) and (arr[k][3] == arr[j][3]) and (arr[k][4] == arr[j][4]) and (arr[j][5] == arr[k][5] == 'random' or (arr[j][5] == 'white' and arr[k][5] == 'black') or (arr[j][5] == 'black' and arr[k][5] == 'white')):\n                c = 1\n                res.append(k + 1)\n                arr[k][0] = 0\n                arr[j][0] = 0\n                break\n        if c == 0:\n            res.append('wait')\n        c = 0\n    print(*res, sep='\\n')\nfor _ in range(int(input())):\n    solve()", "import sys\nimport math\n\ndef main(arr):\n    for e in arr:\n        e[0] = int(e[0])\n        e[2] = int(e[2])\n        e[1] = int(e[1])\n        e[3] = int(e[3])\n        e += [True]\n    ans = ['wait']\n    for i in range(1, len(arr)):\n        p1 = arr[i]\n        for j in range(0, i):\n            p2 = arr[j]\n            if p2[-1]:\n                if p2[1] <= p1[0] and p1[0] <= p2[2] and (p1[1] <= p2[0]) and (p2[0] <= p1[2]):\n                    if p2[3] == p1[3] and p2[4] == p1[4]:\n                        if p1[5] == 'random' and p2[5] == 'random' or (p1[5] == 'black' and p2[5] == 'white') or (p2[5] == 'black' and p1[5] == 'white'):\n                            ans += [j + 1]\n                            p1[-1] = False\n                            p2[-1] = False\n                            break\n            if j == i - 1:\n                ans += ['wait']\n    for e in ans:\n        print(e)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(str, input().split())))\n    main(arr)", "import sys\nimport math\n\ndef main(arr):\n    for e in arr:\n        e[0] = int(e[0])\n        e[2] = int(e[2])\n        e[1] = int(e[1])\n        e[3] = int(e[3])\n        e += [True]\n    ans = ['wait']\n    for i in range(1, len(arr)):\n        p1 = arr[i]\n        for j in range(0, i):\n            p2 = arr[j]\n            if p2[-1]:\n                if p2[1] <= p1[0] and p1[0] <= p2[2] and (p1[1] <= p2[0]) and (p2[0] <= p1[2]):\n                    if p2[3] == p1[3] and p2[4] == p1[4]:\n                        if p1[5] == 'random' and p2[5] == 'random' or (p1[5] == 'black' and p2[5] == 'white') or (p2[5] == 'black' and p1[5] == 'white'):\n                            ans += [j + 1]\n                            p1[-1] = False\n                            p2[-1] = False\n                            break\n            if j == i - 1:\n                ans += ['wait']\n    for e in ans:\n        print(e)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(str, input().split())))\n    main(arr)", "import sys\nimport math\n\ndef main(arr):\n    for e in arr:\n        e[0] = int(e[0])\n        e[2] = int(e[2])\n        e[1] = int(e[1])\n        e[3] = int(e[3])\n        e += [True]\n    ans = ['wait']\n    for i in range(1, len(arr)):\n        p1 = arr[i]\n        for j in range(0, i):\n            p2 = arr[j]\n            if p2[-1]:\n                if p2[1] <= p1[0] and p1[0] <= p2[2] and (p1[1] <= p2[0]) and (p2[0] <= p1[2]):\n                    if p2[3] == p1[3] and p2[4] == p1[4]:\n                        if p1[5] == 'random' and p2[5] == 'random' or (p1[5] == 'black' and p2[5] == 'white') or (p2[5] == 'black' and p1[5] == 'white'):\n                            ans += [j + 1]\n                            p1[-1] = False\n                            p2[-1] = False\n                            break\n            if j == i - 1:\n                ans += ['wait']\n    for e in ans:\n        print(e)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(str, input().split())))\n    main(arr)", "import sys\nimport math\n\ndef main(arr):\n    for e in arr:\n        e[0] = int(e[0])\n        e[2] = int(e[2])\n        e[1] = int(e[1])\n        e[3] = int(e[3])\n        e += [True]\n    ans = ['wait']\n    for i in range(1, len(arr)):\n        p1 = arr[i]\n        for j in range(0, i):\n            p2 = arr[j]\n            if p2[-1]:\n                if p2[1] <= p1[0] and p1[0] <= p2[2] and (p1[1] <= p2[0]) and (p2[0] <= p1[2]):\n                    if p2[3] == p1[3] and p2[4] == p1[4]:\n                        if p1[5] == 'random' and p2[5] == 'random' or (p1[5] == 'black' and p2[5] == 'white') or (p2[5] == 'black' and p1[5] == 'white'):\n                            ans += [j + 1]\n                            p1[-1] = False\n                            p2[-1] = False\n                            break\n            if j == i - 1:\n                ans += ['wait']\n    for e in ans:\n        print(e)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(str, input().split())))\n    main(arr)", "import sys\nimport math\n\ndef main(arr):\n    for e in arr:\n        e[0] = int(e[0])\n        e[2] = int(e[2])\n        e[1] = int(e[1])\n        e[3] = int(e[3])\n        e += [True]\n    ans = ['wait']\n    for i in range(1, len(arr)):\n        p1 = arr[i]\n        for j in range(0, i):\n            p2 = arr[j]\n            if p2[-1]:\n                if p2[1] <= p1[0] and p1[0] <= p2[2] and (p1[1] <= p2[0]) and (p2[0] <= p1[2]):\n                    if p2[3] == p1[3] and p2[4] == p1[4]:\n                        if p1[5] == 'random' and p2[5] == 'random' or (p1[5] == 'black' and p2[5] == 'white') or (p2[5] == 'black' and p1[5] == 'white'):\n                            ans += [j + 1]\n                            p1[-1] = False\n                            p2[-1] = False\n                            break\n            if j == i - 1:\n                ans += ['wait']\n    for e in ans:\n        print(e)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(str, input().split())))\n    main(arr)", "import sys\nimport math\n\ndef main(arr):\n    for e in arr:\n        e[0] = int(e[0])\n        e[2] = int(e[2])\n        e[1] = int(e[1])\n        e[3] = int(e[3])\n        e += [True]\n    ans = ['wait']\n    for i in range(1, len(arr)):\n        p1 = arr[i]\n        for j in range(0, i):\n            p2 = arr[j]\n            if p2[-1]:\n                if p2[1] <= p1[0] and p1[0] <= p2[2] and (p1[1] <= p2[0]) and (p2[0] <= p1[2]):\n                    if p2[3] == p1[3] and p2[4] == p1[4]:\n                        if p1[5] == 'random' and p2[5] == 'random' or (p1[5] == 'black' and p2[5] == 'white') or (p2[5] == 'black' and p1[5] == 'white'):\n                            ans += [j + 1]\n                            p1[-1] = False\n                            p2[-1] = False\n                            break\n            if j == i - 1:\n                ans += ['wait']\n    for e in ans:\n        print(e)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(str, input().split())))\n    main(arr)", "def fun():\n    test = int(input())\n    for i in range(test):\n        arr = []\n        n = int(input())\n        for i in range(n):\n            done = [0] * n\n            (r, mini, maxi, time, rated, color) = input().split()\n            (r, mini, maxi, time) = (int(r), int(mini), int(maxi), int(time))\n            if color == 'black':\n                color = 1\n            elif color == 'white':\n                color = 2\n            elif color == 'random':\n                color = 0\n            rated = int(rated == 'rated')\n            arr.append([r, mini, maxi, time, rated, color])\n        print('wait')\n        for i in range(1, n):\n            for j in range(0, i):\n                if done[j] == 0 and done[i] == 0:\n                    if arr[i][3] == arr[j][3] and arr[i][4] == arr[j][4]:\n                        if arr[i][5] + arr[j][5] in [0, 3]:\n                            if arr[j][1] <= arr[i][0] <= arr[j][2] and arr[i][1] <= arr[j][0] <= arr[i][2]:\n                                done[i] = 1\n                                done[j] = 1\n                                print(j + 1)\n                                break\n            else:\n                print('wait')\nfun()", "def fun():\n    test = int(input())\n    for i in range(test):\n        arr = []\n        n = int(input())\n        for i in range(n):\n            done = [0] * n\n            (r, mini, maxi, time, rated, color) = input().split()\n            (r, mini, maxi, time) = (int(r), int(mini), int(maxi), int(time))\n            if color == 'black':\n                color = 1\n            elif color == 'white':\n                color = 2\n            elif color == 'random':\n                color = 0\n            rated = int(rated == 'rated')\n            arr.append([r, mini, maxi, time, rated, color])\n        print('wait')\n        for i in range(1, n):\n            for j in range(0, i):\n                if done[j] == 0 and done[i] == 0:\n                    if arr[i][3] == arr[j][3] and arr[i][4] == arr[j][4]:\n                        if arr[i][5] + arr[j][5] in [0, 3]:\n                            if arr[j][1] <= arr[i][0] <= arr[j][2] and arr[i][1] <= arr[j][0] <= arr[i][2]:\n                                done[i] = 1\n                                done[j] = 1\n                                print(j + 1)\n                                break\n            else:\n                print('wait')\nfun()", "def fun():\n    test = int(input())\n    for i in range(test):\n        arr = []\n        n = int(input())\n        for i in range(n):\n            done = [0] * n\n            (r, mini, maxi, time, rated, color) = input().split()\n            (r, mini, maxi, time) = (int(r), int(mini), int(maxi), int(time))\n            if color == 'black':\n                color = 1\n            elif color == 'white':\n                color = 2\n            elif color == 'random':\n                color = 0\n            rated = int(rated == 'rated')\n            arr.append([r, mini, maxi, time, rated, color])\n        print('wait')\n        for i in range(1, n):\n            for j in range(0, i):\n                if done[j] == 0 and done[i] == 0:\n                    if arr[i][3] == arr[j][3] and arr[i][4] == arr[j][4]:\n                        if arr[i][5] + arr[j][5] in [0, 3]:\n                            if arr[j][1] <= arr[i][0] <= arr[j][2] and arr[i][1] <= arr[j][0] <= arr[i][2]:\n                                done[i] = 1\n                                done[j] = 1\n                                print(j + 1)\n                                break\n            else:\n                print('wait')\nfun()", "for _ in range(int(input())):\n    n = int(input())\n    w = []\n    for i in range(n):\n        a = list(input().split())\n        (a[0], a[1], a[2], a[3]) = (int(a[0]), int(a[1]), int(a[2]), int(a[3]))\n        f = 0\n        if len(w) == 0:\n            print('wait')\n            w.append([i + 1, a])\n            continue\n        for j in range(len(w)):\n            b = w[j][1]\n            if (a[0] >= b[1] and a[0] <= b[2] and (b[0] >= a[1]) and (b[0] <= a[2])) and b[3] == a[3] and (b[4] == a[4]) and (a[5] == 'white' and b[5] == 'black' or (b[5] == 'white' and a[5] == 'black') or (a[5] == 'random' and b[5] == 'random')):\n                print(w[j][0])\n                del w[j]\n                f = 1\n                break\n        if f == 0:\n            print('wait')\n            w.append([i + 1, a])", "for i in range(int(input())):\n    n = int(input())\n    l1 = []\n    for i in range(n):\n        l1.append(list(map(str, input().split())))\n    l2 = []\n    for i in range(n):\n        f = 0\n        for j in range(i):\n            if j not in l2:\n                if int(l1[j][1]) <= int(l1[i][0]) <= int(l1[j][2]) and int(l1[i][1]) <= int(l1[j][0]) <= int(l1[i][2]) and (l1[i][3] == l1[j][3]) and (l1[i][4] == l1[j][4]) and (l1[i][5] == 'random' and l1[j][5] == 'random' or (l1[i][5] == 'white' and l1[j][5] == 'black') or (l1[j][5] == 'white' and l1[i][5] == 'black')):\n                    print(j + 1)\n                    f = 1\n                    l2.append(j)\n                    l2.append(i)\n                    break\n        if f == 0:\n            print('wait')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    r = []\n    for j in range(n):\n        r.append(input().split())\n        (r[j][0], r[j][1], r[j][2], r[j][3]) = (int(r[j][0]), int(r[j][1]), int(r[j][2]), int(r[j][3]))\n    w = []\n    for j in range(n):\n        flag = 0\n        for k in range(len(w)):\n            if w[k] == 'wait':\n                c1 = r[k][1] <= r[j][0] <= r[k][2] and r[j][1] <= r[k][0] <= r[j][2]\n                c2 = r[j][3] == r[k][3]\n                c3 = r[j][4] == r[k][4]\n                c4 = r[j][5] == r[k][5] == 'random' or (r[j][5] != r[k][5] and r[j][5] != 'random' and (r[k][5] != 'random'))\n                if c1 and c2 and c3 and c4:\n                    flag = 1\n                    print(k + 1)\n                    w.append(k)\n                    w[k] = j\n                    break\n        if flag == 0:\n            w.append('wait')\n            print('wait')", "for case in range(int(input())):\n    N = int(input())\n    print('wait')\n    (R, Min, Max, color, rated, Time, match) = ([0] * N, [0] * N, [0] * N, [0] * N, [0] * N, [0] * N, [0] * N)\n    for i in range(N):\n        p = input().split()\n        (R[i], Min[i], Max[i], Time[i], rated[i]) = (int(p[0]), int(p[1]), int(p[2]), int(p[3]), p[4])\n        if p[5][0] == 'w':\n            color[i] = 1\n        elif p[5][0] == 'b':\n            color[i] = -1\n        else:\n            color[i] = 0\n        match[i] = 0\n    for i in range(1, N):\n        for j in range(i):\n            if match[i] + match[j] == 0:\n                if (Min[j] <= R[i] and R[i] <= Max[j]) and (Min[i] <= R[j] and R[j] <= Max[i]):\n                    if rated[i] == rated[j]:\n                        if Time[i] == Time[j]:\n                            if color[i] + color[j] == 0:\n                                match[i] = match[j] = 1\n                                print(j + 1)\n                                break\n        else:\n            print('wait')", "def chkRated(r):\n    if r == 'rated':\n        return True\n    else:\n        return False\n\ndef chkColor(c):\n    if c == 'white':\n        return -1\n    elif c == 'black':\n        return 1\n    else:\n        return 0\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    R = [0] * n\n    Min = [0] * n\n    Max = [0] * n\n    Time = [0] * n\n    isRated = [False] * n\n    Color = [0] * n\n    isMatched = [False] * n\n    tmpRated = 0\n    tmpColor = 0\n    for i in range(n):\n        (R[i], Min[i], Max[i], Time[i], tmpRated, tmpColor) = input().split()\n        R[i] = int(R[i])\n        Min[i] = int(Min[i])\n        Max[i] = int(Max[i])\n        Time[i] = int(Time[i])\n        isRated[i] = chkRated(tmpRated)\n        Color[i] = chkColor(tmpColor)\n    for i in range(n):\n        flag = 0\n        for j in range(i):\n            if not isMatched[j]:\n                if (R[i] <= Max[j] and R[i] >= Min[j]) and (R[j] <= Max[i] and R[j] >= Min[i]):\n                    if isRated[i] == isRated[j] and Time[i] == Time[j]:\n                        if Color[i] == Color[j] == 0 or Color[i] * Color[j] == -1:\n                            flag = 1\n                            isMatched[i] = True\n                            isMatched[j] = True\n                            print(j + 1)\n                            break\n        if flag == 0:\n            print('wait')", "for i in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    c = 0\n    for j in range(n):\n        l = input().split()\n        f = 0\n        for k in range(c):\n            if int(l[1]) <= int(a[k][0]) <= int(l[2]) and int(a[k][1]) <= int(l[0]) <= int(a[k][2]) and (a[k][3] == l[3]) and (a[k][4] == l[4]) and (a[k][5] == l[5] and l[5] == 'random' or (a[k][5] != l[5] and l[5] != 'random' and (a[k][5] != 'random'))):\n                f = 1\n                x = b[k]\n                del a[k]\n                del b[k]\n                break\n        if f == 0:\n            print('wait')\n            a.append(l)\n            b.append(j + 1)\n            c += 1\n        else:\n            print(x)\n            c -= 1", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        g = list(input().split())\n        g[0] = int(g[0])\n        g[1] = int(g[1])\n        g[2] = int(g[2])\n        g[3] = int(g[3])\n        arr.append(g)\n    ans = ['wait']\n    c = 0\n    for j in range(1, n):\n        for k in range(0, j):\n            if arr[k][0] != 0 and arr[j][1] <= arr[k][0] <= arr[j][2] and (arr[k][1] <= arr[j][0] <= arr[k][2]) and (arr[k][3] == arr[j][3]) and (arr[k][4] == arr[j][4]) and (arr[j][5] == arr[k][5] == 'random' or (arr[j][5] == 'white' and arr[k][5] == 'black') or (arr[j][5] == 'black' and arr[k][5] == 'white')):\n                c = 1\n                ans.append(k + 1)\n                arr[k][0] = 0\n                arr[j][0] = 0\n                break\n        if c == 0:\n            ans.append('wait')\n        c = 0\n    print(*ans, sep='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        g = list(input().split())\n        g[0] = int(g[0])\n        g[1] = int(g[1])\n        g[2] = int(g[2])\n        g[3] = int(g[3])\n        arr.append(g)\n    ans = ['wait']\n    c = 0\n    for j in range(1, n):\n        for k in range(0, j):\n            if arr[k][0] != 0 and arr[j][1] <= arr[k][0] <= arr[j][2] and (arr[k][1] <= arr[j][0] <= arr[k][2]) and (arr[k][3] == arr[j][3]) and (arr[k][4] == arr[j][4]) and (arr[j][5] == arr[k][5] == 'random' or (arr[j][5] == 'white' and arr[k][5] == 'black') or (arr[j][5] == 'black' and arr[k][5] == 'white')):\n                c = 1\n                ans.append(k + 1)\n                arr[k][0] = 0\n                arr[j][0] = 0\n                break\n        if c == 0:\n            ans.append('wait')\n        c = 0\n    print(*ans, sep='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        g = list(input().split())\n        g[0] = int(g[0])\n        g[1] = int(g[1])\n        g[2] = int(g[2])\n        g[3] = int(g[3])\n        arr.append(g)\n    ans = ['wait']\n    c = 0\n    for j in range(1, n):\n        for k in range(0, j):\n            if arr[k][0] != 0 and arr[j][1] <= arr[k][0] <= arr[j][2] and (arr[k][1] <= arr[j][0] <= arr[k][2]) and (arr[k][3] == arr[j][3]) and (arr[k][4] == arr[j][4]) and (arr[j][5] == arr[k][5] == 'random' or (arr[j][5] == 'white' and arr[k][5] == 'black') or (arr[j][5] == 'black' and arr[k][5] == 'white')):\n                c = 1\n                ans.append(k + 1)\n                arr[k][0] = 0\n                arr[j][0] = 0\n                break\n        if c == 0:\n            ans.append('wait')\n        c = 0\n    print(*ans, sep='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        g = list(input().split())\n        g[0] = int(g[0])\n        g[1] = int(g[1])\n        g[2] = int(g[2])\n        g[3] = int(g[3])\n        arr.append(g)\n    ans = ['wait']\n    c = 0\n    for j in range(1, n):\n        for k in range(0, j):\n            if arr[k][0] != 0 and arr[j][1] <= arr[k][0] <= arr[j][2] and (arr[k][1] <= arr[j][0] <= arr[k][2]) and (arr[k][3] == arr[j][3]) and (arr[k][4] == arr[j][4]) and (arr[j][5] == arr[k][5] == 'random' or (arr[j][5] == 'white' and arr[k][5] == 'black') or (arr[j][5] == 'black' and arr[k][5] == 'white')):\n                c = 1\n                ans.append(k + 1)\n                arr[k][0] = 0\n                arr[j][0] = 0\n                break\n        if c == 0:\n            ans.append('wait')\n        c = 0\n    print(*ans, sep='\\n')", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    arr = [0] * N\n    for i in range(N):\n        arr[i] = [0] + list(input().strip().split())\n        (arr[i][1], arr[i][2], arr[i][3], arr[i][4]) = (int(arr[i][1]), int(arr[i][2]), int(arr[i][3]), int(arr[i][4]))\n        flag = 0\n        for j in range(i):\n            if arr[j][0] != 1:\n                c1 = arr[i][2] <= arr[j][1] and arr[j][1] <= arr[i][3]\n                c2 = arr[j][2] <= arr[i][1] and arr[i][1] <= arr[j][3]\n                c3 = arr[j][4] == arr[i][4]\n                c4 = arr[j][5] == arr[i][5]\n                c5 = arr[j][-1] + arr[i][-1] in {'randomrandom', 'blackwhite', 'whiteblack'}\n                if c1 and c2 and c3 and c4 and c5:\n                    flag = 1\n                    (arr[i][0], arr[j][0]) = (1, 1)\n                    print(j + 1)\n                    break\n        if flag == 0:\n            print('wait')", "def fun():\n    n = int(input())\n    actual = []\n    time = [5, 15, 30, 60]\n    for i in range(n):\n        val = 0\n        a = list(map(str, input().split()))\n        if int(a[3]) in time:\n            arr = [int(a[0]), int(a[1]), int(a[2]), int(a[3]), a[4], a[5], i]\n            if len(actual) == 0:\n                print('wait')\n            else:\n                for a in actual:\n                    if arr[0] in range(a[1], a[2] + 1) and a[0] in range(arr[1], arr[2] + 1) and (arr[3] == a[3]) and (a[4] == arr[4]) and (arr[5] == 'white' and a[5] == 'black' or (arr[5] == 'black' and a[5] == 'white') or (arr[5] == 'random' and a[5] == 'random')):\n                        print(a[6] + 1)\n                        actual.remove(a)\n                        val = 1\n                        break\n                if val == 0:\n                    print('wait')\n            if val == 0:\n                actual.append(arr)\nfor _ in range(int(input())):\n    fun()", "def condition(i, j, hmap):\n    flag = 0\n    if hmap[j][-1] == 1:\n        flag = 1\n    if int(hmap[j][0]) < int(hmap[i][1]) or int(hmap[j][0]) > int(hmap[i][2]) or int(hmap[i][0]) < int(hmap[j][1]) or (int(hmap[i][0]) > int(hmap[j][2])):\n        flag = 1\n    if int(hmap[i][3]) != int(hmap[j][3]):\n        flag = 1\n    if hmap[i][4] != hmap[j][4]:\n        flag = 1\n    if hmap[i][5] != 'random' and hmap[j][5] == 'random' or (hmap[j][5] != 'random' and hmap[i][5] == 'random'):\n        flag = 1\n    if hmap[i][5] == 'black' and hmap[j][5] == 'black' or (hmap[i][5] == 'white' and hmap[j][5] == 'white'):\n        flag = 1\n    if flag == 1:\n        return False\n    return True\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    hmap = {}\n    for i in range(N):\n        hmap[i] = list(map(str, input().split())) + [0]\n    for i in range(N):\n        flag = 0\n        for j in range(i):\n            if condition(i, j, hmap):\n                print(j + 1)\n                flag = 1\n                hmap[j][-1] = 1\n                hmap[i][-1] = 1\n                break\n        if flag == 0:\n            print('wait')", "class jamal:\n\n    def __init__(self, a, i):\n        self.my = int(a[0])\n        self.mi = int(a[1])\n        self.ma = int(a[2])\n        self.t = int(a[3])\n        self.israt = a[4]\n        self.col = a[5]\n        self.ismatched = 0\n        self.ind = i\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = []\n    a = list(input().split())\n    print('wait')\n    playa = jamal(a, 1)\n    li.append(playa)\n    for i in range(1, n):\n        a = list(input().split())\n        playa = jamal(a, i + 1)\n        l = len(li)\n        for j in range(l):\n            if playa.mi <= li[j].my <= playa.ma and li[j].mi <= playa.my <= li[j].ma and (playa.israt == li[j].israt) and (playa.t == li[j].t) and (playa.col == li[j].col == 'random' or (playa.col == 'black' and li[j].col == 'white') or (playa.col == 'white' and li[j].col == 'black')) and (not li[j].ismatched):\n                playa.ismatched = 1\n                li[j].ismatched = 1\n                print(li[j].ind)\n                break\n        if not playa.ismatched:\n            print('wait')\n            li.append(playa)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    nn = n\n    inp = []\n    flag = []\n    flagg = []\n    while n > 0:\n        flag.append('wait')\n        flagg.append(0)\n        a = list(input().split())\n        inp.append(a)\n        n -= 1\n    for i in range(nn):\n        for j in range(0, i):\n            if flagg[j] == 0:\n                r1 = int(inp[i][0])\n                r2 = int(inp[j][0])\n                mi1 = int(inp[i][1])\n                mi2 = int(inp[j][1])\n                ma1 = int(inp[i][2])\n                ma2 = int(inp[j][2])\n                ti = int(inp[i][3])\n                tj = int(inp[j][3])\n                if r1 >= mi2 and r1 <= ma2:\n                    if r2 >= mi1 and r2 <= ma1:\n                        if ti == tj:\n                            if inp[i][4] == inp[j][4]:\n                                if inp[i][5] == inp[j][5] and inp[i][5] == 'random' or (inp[i][5] != inp[j][5] and inp[i][5] != 'random' and (inp[j][5] != 'random')):\n                                    flag[i] = j + 1\n                                    flagg[i] = -1\n                                    flagg[j] = -1\n                                    break\n    for i in flag:\n        print(i)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        g = list(input().split())\n        g[0] = int(g[0])\n        g[1] = int(g[1])\n        g[2] = int(g[2])\n        g[3] = int(g[3])\n        arr.append(g)\n    ans = ['wait']\n    c = 0\n    for j in range(1, n):\n        for k in range(0, j):\n            if arr[k][0] != 0 and arr[j][1] <= arr[k][0] <= arr[j][2] and (arr[k][1] <= arr[j][0] <= arr[k][2]) and (arr[k][3] == arr[j][3]) and (arr[k][4] == arr[j][4]) and (arr[j][5] == arr[k][5] == 'random' or (arr[j][5] == 'white' and arr[k][5] == 'black') or (arr[j][5] == 'black' and arr[k][5] == 'white')):\n                c = 1\n                ans.append(k + 1)\n                arr[k][0] = 0\n                arr[j][0] = 0\n                break\n        if c == 0:\n            ans.append('wait')\n        c = 0\n    print(*ans, sep='\\n')", "def fun():\n    n = int(input())\n    actual = []\n    time = [5, 15, 30, 60]\n    for i in range(n):\n        val = 0\n        a = list(map(str, input().split()))\n        if int(a[3]) in time:\n            arr = [int(a[0]), int(a[1]), int(a[2]), int(a[3]), a[4], a[5], i]\n            if len(actual) == 0:\n                print('wait')\n            else:\n                for a in actual:\n                    if arr[0] in range(a[1], a[2] + 1) and a[0] in range(arr[1], arr[2] + 1) and (arr[3] == a[3]) and (a[4] == arr[4]) and (arr[5] == 'white' and a[5] == 'black' or (arr[5] == 'black' and a[5] == 'white') or (arr[5] == 'random' and a[5] == 'random')):\n                        print(a[6] + 1)\n                        actual.remove(a)\n                        val = 1\n                        break\n                if val == 0:\n                    print('wait')\n            if val == 0:\n                actual.append(arr)\nfor _ in range(int(input())):\n    fun()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lis = [[0 for j in range(6)] for k in range(n)]\n    ans = list()\n    oth = list()\n    for j in range(n):\n        d = list(map(str, input().split()))\n        lis[j] = d\n    ans.append('wait')\n    for j in range(1, n, 1):\n        f = 0\n        for k in range(0, j, 1):\n            if k not in ans and k not in oth:\n                if int(lis[k][0]) >= int(lis[j][1]) and int(lis[k][0]) <= int(lis[j][2]) and (int(lis[j][0]) >= int(lis[k][1])) and (int(lis[j][0]) <= int(lis[k][2])):\n                    if lis[k][3] == lis[j][3]:\n                        if lis[k][4] == lis[j][4]:\n                            if lis[k][5] == 'random' and lis[j][5] == 'random' or (lis[k][5] == 'white' and lis[j][5] == 'black') or (lis[k][5] == 'black' and lis[j][5] == 'white'):\n                                f = 1\n                                break\n        if f == 0:\n            ans.append('wait')\n        else:\n            ans.append(k)\n            oth.append(j)\n    for j in range(len(ans)):\n        if ans[j] != 'wait':\n            print(ans[j] + 1)\n        else:\n            print(ans[j])", "for _ in range(int(input())):\n    x = []\n    n = int(input())\n    for i in range(n):\n        a = list(input().split())\n        a.append('av')\n        x.append(a)\n        flag = 0\n    print('wait')\n    for i in range(1, n):\n        for j in range(0, i):\n            flag = 0\n            if int(x[j][0]) >= int(x[i][1]) and int(x[j][0]) <= int(x[i][2]) and (int(x[i][0]) >= int(x[j][1])) and (int(x[i][0]) <= int(x[j][2])) and int(x[j][3] == x[i][3]) and (x[j][4] == x[i][4]) and (x[j][6] == 'av'):\n                if x[j][5] == 'random' and x[i][5] == 'random':\n                    x[j][6] = 'xxx'\n                    x[i][6] = 'xxx'\n                    flag = 1\n                    break\n                elif x[j][5] == 'white' and x[i][5] == 'black':\n                    flag = 1\n                    x[j][6] = 'xxx'\n                    x[i][6] = 'xxx'\n                    break\n                elif x[j][5] == 'black' and x[i][5] == 'white':\n                    flag = 1\n                    x[j][6] = 'xxx'\n                    x[i][6] = 'xxx'\n                    break\n        if flag == 0:\n            print('wait')\n        else:\n            print(j + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    l = []\n    for i in range(n):\n        f = 0\n        b = list(map(str, input().split()))\n        a.append(b)\n        for j in range(0, i):\n            if f == 0 and int(a[i][0]) >= int(a[j][1]) and (int(a[i][0]) <= int(a[j][2])) and (int(a[j][0]) >= int(a[i][1])) and (int(a[j][0]) <= int(a[i][2])) and (int(a[j][3]) == int(a[i][3])) and (a[j][4] == a[i][4]):\n                if a[i][5] == 'random' and a[j][5] == 'random' or (a[i][5] == 'white' and a[j][5] == 'black') or (a[i][5] == 'black' and a[j][5] == 'white'):\n                    if not int(j) in l:\n                        f = 1\n                        print(int(j) + 1)\n                        l.append(int(j))\n                        l.append(int(i))\n        if f == 0:\n            print('wait')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [None for j in range(n)]\n    for j in range(n):\n        a[j] = input().split()\n        a[j][0] = int(a[j][0])\n        a[j][1] = int(a[j][1])\n        a[j][2] = int(a[j][2])\n        a[j][3] = int(a[j][3])\n        a[j].append(j + 1)\n    b = list()\n    b.append(a[0])\n    print('wait')\n    for j in range(1, n):\n        c = 2\n        for k in range(len(b)):\n            c = 1\n            if a[j][0] >= b[k][1] and a[j][0] <= b[k][2] and (b[k][0] >= a[j][1]) and (b[k][0] <= a[j][2]) and (a[j][3] == b[k][3]) and (a[j][4] == b[k][4]):\n                if a[j][5] == b[k][5] == 'random' or (a[j][5] == 'white' and b[k][5] == 'black') or (a[j][5] == 'black' and b[k][5] == 'white'):\n                    print(b[k][6])\n                    b.pop(k)\n                    c = 0\n                    break\n        if c == 1 or c == 2:\n            b.append(a[j])\n            print('wait')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = []\n    aa = []\n    for ans in range(1, n + 1):\n        found = False\n        x = list(input().split())\n        a.append([int(x[0]), int(x[1]), int(x[2]), int(x[3]), x[4], x[5]])\n        aa.append([int(x[0]), int(x[1]), int(x[2]), int(x[3]), x[4], x[5]])\n        for i in a[:-1]:\n            j = a[-1]\n            if i[4] == j[4] and i[3] == j[3]:\n                if i[5] == j[5] == 'random':\n                    if i[0] >= j[1] and i[0] <= j[2] and (j[0] >= i[1]) and (j[0] <= i[2]):\n                        found = True\n                        print(aa.index(i) + 1)\n                        a.remove(i)\n                        a.remove(j)\n                        break\n                elif i[5] != j[5] and i[5] in ['black', 'white'] and (j[5] in ['black', 'white']):\n                    if i[0] >= j[1] and i[0] <= j[2] and (j[0] >= i[1]) and (j[0] <= i[2]):\n                        found = True\n                        print(aa.index(i) + 1)\n                        a.remove(i)\n                        a.remove(j)\n                        break\n                else:\n                    continue\n            else:\n                continue\n        if not found:\n            print('wait')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    Ans = []\n    for i in range(n):\n        l = input().split()\n        R = int(l[0])\n        Min = int(l[1])\n        Max = int(l[2])\n        T = int(l[3])\n        Ra = l[4]\n        Co = l[5]\n        l.append(0)\n        flg = False\n        for j in range(len(Ans)):\n            if R >= int(Ans[j][1]) and R <= int(Ans[j][2]) and (int(Ans[j][0]) >= Min) and (int(Ans[j][0]) <= Max) and (Ra == Ans[j][4]) and (T == int(Ans[j][3])) and (Co == Ans[j][5] and Co == 'random' or (Co == 'white' and Ans[j][5] == 'black') or (Co == 'black' and Ans[j][5] == 'white')) and (not Ans[j][6]):\n                flg = True\n                Ans[j][6] = 1\n                l[6] = 1\n                print(j + 1)\n                break\n        if not flg:\n            print('wait')\n        else:\n            pass\n        Ans.append(l)", "for j in range(int(input())):\n    (n, arr, done) = (int(input()), [], [])\n    for k in range(0, n):\n        p = -1\n        arr.append(input().split())\n        for i in range(k):\n            if i not in done:\n                if int(arr[i][3]) != int(arr[k][3]) or arr[i][4] != arr[k][4]:\n                    continue\n                if int(arr[i][0]) not in range(int(arr[k][1]), int(arr[k][2]) + 1) or int(arr[k][0]) not in range(int(arr[i][1]), int(arr[i][2]) + 1):\n                    continue\n                if arr[i][-1] == 'random':\n                    if arr[k][-1] != 'random':\n                        continue\n                elif arr[i][-1] == 'white':\n                    if arr[k][-1] != 'black':\n                        continue\n                elif arr[i][-1] == 'black':\n                    if arr[k][-1] != 'white':\n                        continue\n                p = i\n                done.append(i)\n                done.append(k)\n                break\n        if p == -1:\n            print('wait')\n        else:\n            print(p + 1)", "def match(a, b):\n    if a[0] >= b[1] and a[0] <= b[2] and (b[0] >= a[1]) and (b[0] <= a[2]):\n        if a[3] == b[3] and a[4] == b[4]:\n            if a[5] == 'white' and b[5] == 'black' or (a[5] == 'black' and b[5] == 'white') or (a[5] == 'random' and b[5] == 'random'):\n                return 1\n    return 0\nt = int(input())\na = []\nleft = []\nfor z in range(t):\n    left.clear()\n    a.clear()\n    n = int(input())\n    for y in range(n):\n        left.append(y)\n        b = input().split(' ')\n        a.append([int(b[0]), int(b[1]), int(b[2]), int(b[3]), b[4], b[5]])\n        found = 0\n        for x in left[:-1]:\n            if match(a[x], a[y]):\n                found = 1\n                print(x + 1)\n                left.remove(x)\n                left.remove(y)\n                break\n        if not found:\n            print('wait')", "class player:\n\n    def __init__(self):\n        self.rat = 0\n        self.minrate = 0\n        self.maxrate = 0\n        self.tim = 0\n        self.rated = -3\n        self.color = -1\n        self.num = 0\n        self.done = -1\n        self.match = -2\n\n    def __repr__(self):\n        return str(self.rat) + ' ' + str(self.minrate) + ' ' + str(self.maxrate) + ' ' + str(self.tim) + ' ' + str(self.rated) + ' ' + str(self.color) + ' ' + str(self.done)\n\ndef func():\n    n = int(input())\n    pla_lst = []\n    for i in range(n):\n        da = input().split()\n        z = player()\n        z.rat = int(da[0])\n        z.minrate = int(da[1])\n        z.maxrate = int(da[2])\n        z.tim = int(da[3])\n        if da[4] == 'rated':\n            z.rated = 1\n        else:\n            z.rated = 0\n        if da[5] == 'random':\n            z.color = 1\n        elif da[5] == 'white':\n            z.color = 2\n        else:\n            z.color = 3\n        z.num = i + 1\n        pla_lst.append(z)\n    for i in range(n):\n        if pla_lst[i].done == 1:\n            continue\n        for j in range(i):\n            if i == j or pla_lst[j].done == 1:\n                continue\n            if pla_lst[i].rated != pla_lst[j].rated:\n                continue\n            if (pla_lst[i].color == 1 and pla_lst[j].color == 1 or (pla_lst[i].color == 2 and pla_lst[j].color == 3) or (pla_lst[i].color == 3 and pla_lst[j].color == 2)) == False:\n                continue\n            if pla_lst[i].tim != pla_lst[j].tim:\n                continue\n            if pla_lst[i].rat >= pla_lst[j].minrate and pla_lst[i].rat <= pla_lst[j].maxrate and (pla_lst[j].rat >= pla_lst[i].minrate) and (pla_lst[j].rat <= pla_lst[i].maxrate):\n                pla_lst[i].done = 1\n                pla_lst[i].match = j + 1\n                pla_lst[j].done = 1\n                break\n        if pla_lst[i].match != -2:\n            print(pla_lst[i].match)\n        else:\n            print('wait')\nt = int(input())\nfor i in range(t):\n    func()", "class player:\n\n    def __init__(self):\n        self.rat = 0\n        self.minrate = 0\n        self.maxrate = 0\n        self.tim = 0\n        self.rated = -3\n        self.color = -1\n        self.num = 0\n        self.done = -1\n        self.match = -2\n\n    def __repr__(self):\n        return str(self.rat) + ' ' + str(self.minrate) + ' ' + str(self.maxrate) + ' ' + str(self.tim) + ' ' + str(self.rated) + ' ' + str(self.color) + ' ' + str(self.done)\n\ndef func():\n    n = int(input())\n    pla_lst = []\n    for i in range(n):\n        da = input().split()\n        z = player()\n        z.rat = int(da[0])\n        z.minrate = int(da[1])\n        z.maxrate = int(da[2])\n        z.tim = int(da[3])\n        if da[4] == 'rated':\n            z.rated = 1\n        else:\n            z.rated = 0\n        if da[5] == 'random':\n            z.color = 1\n        elif da[5] == 'white':\n            z.color = 2\n        else:\n            z.color = 3\n        z.num = i + 1\n        pla_lst.append(z)\n    for i in range(n):\n        if pla_lst[i].done == 1:\n            continue\n        for j in range(i):\n            if i == j or pla_lst[j].done == 1:\n                continue\n            if pla_lst[i].rated != pla_lst[j].rated:\n                continue\n            if (pla_lst[i].color == 1 and pla_lst[j].color == 1 or (pla_lst[i].color == 2 and pla_lst[j].color == 3) or (pla_lst[i].color == 3 and pla_lst[j].color == 2)) == False:\n                continue\n            if pla_lst[i].tim != pla_lst[j].tim:\n                continue\n            if pla_lst[i].rat >= pla_lst[j].minrate and pla_lst[i].rat <= pla_lst[j].maxrate and (pla_lst[j].rat >= pla_lst[i].minrate) and (pla_lst[j].rat <= pla_lst[i].maxrate):\n                pla_lst[i].done = 1\n                pla_lst[i].match = j + 1\n                pla_lst[j].done = 1\n                break\n        if pla_lst[i].match != -2:\n            print(pla_lst[i].match)\n        else:\n            print('wait')\nt = int(input())\nfor i in range(t):\n    func()", "tc = int(input())\nwhile tc > 0:\n    l = []\n    occupied = {}\n    n = int(input())\n    for i in range(n):\n        inp = input()\n        inp_list = inp.split()\n        l.append(inp_list)\n    if n == 1:\n        print('wait')\n    else:\n        i = 0\n        while i < n:\n            j = 0\n            flag = 0\n            while j < i:\n                if j not in occupied.keys():\n                    tlist = [5, 15, 30, 60]\n                    (r1, min1, max1, t1, rated1, color1) = (l[i][0], l[i][1], l[i][2], l[i][3], l[i][4], l[i][5])\n                    (r2, min2, max2, t2, rated2, color2) = (l[j][0], l[j][1], l[j][2], l[j][3], l[j][4], l[j][5])\n                    if (int(r2) >= int(min1) and int(r2) <= int(max1) and (int(r1) >= int(min2)) and (int(r1) <= int(max2))) and (rated1 == rated2 and int(t1) == int(t2)) and (color1 == color2 == 'random' or (color1 == 'white' and color2 == 'black') or (color2 == 'white' and color1 == 'black')):\n                        if int(t1) in tlist and int(t2) in tlist:\n                            print(j + 1)\n                            occupied[j] = 1\n                            occupied[i] = 1\n                            flag = 1\n                if flag == 1:\n                    break\n                j += 1\n            i += 1\n            if flag == 0:\n                print('wait')\n    tc -= 1", "def foo(a, b):\n    return b[-1] != -100 and b[1] <= a[0] <= b[2] and (a[3] == b[3]) and (a[1] <= b[0] <= a[2]) and (a[-3] + b[-3] != 0) and (a[-2] + b[-2] == 0)\nr = {'rated': 1, 'unrated': -1, 'black': -1, 'random': 0, 'white': 1}\nfor _ in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        x = input().split()\n        a.append(list(map(int, x[:4])) + [r[x[4]], r[x[5]], i])\n    print('wait')\n    if n == 1:\n        continue\n    for j in range(1, n):\n        w = list(filter(lambda k: foo(a[j], k), a[:j]))\n        if len(w):\n            print(w[0][-1] + 1)\n            a[w[0][-1]][-1] = -100\n            a[j][-1] = -100\n        else:\n            print('wait')", "from collections import OrderedDict\nfor _ in range(int(input())):\n    n = int(input())\n    a = [input().split() for i in range(n)]\n    temp_a = {a[i][0]: i for i in range(n)}\n    temp = OrderedDict()\n    for i in a:\n        result = False\n        (r, minn, maxx, time, rate, col) = i\n        for j in temp:\n            (temp_r, temp_minn, temp_maxx, temp_time, temp_rate, temp_col) = temp[j]\n            if int(minn) <= int(temp_r) <= int(maxx) and int(temp_minn) <= int(r) <= int(temp_maxx) and (time == temp_time) and (rate == temp_rate) and (col == 'white' and temp_col == 'black' or (temp_col == 'white' and col == 'black') or col == temp_col == 'random'):\n                print(temp_a[temp_r] + 1)\n                del temp[temp_r]\n                result = True\n                break\n            else:\n                result = False\n        if result == False:\n            temp[r] = i\n            print('wait')", "for t in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        (r, min1, max1, time, israted, color) = map(str, input().split())\n        r = int(r)\n        min1 = int(min1)\n        max1 = int(max1)\n        time = int(time)\n        used = 0\n        b = [r, min1, max1, time, israted, color, used]\n        flag = 0\n        for j in range(i):\n            if b[0] >= a[j][1] and b[0] <= a[j][2] and (a[j][0] >= b[1]) and (a[j][0] <= b[2]) and (b[3] == a[j][3]) and (a[j][4] == b[4]) and (a[j][5] == b[5] or (a[j][5] == 'white' and b[5] == 'black') or (a[j][5] == 'black' and b[5] == 'white')) and (a[j][6] == 0):\n                flag = j + 1\n                a[j][6] = 1\n                b[6] = 1\n                break\n        a.append(b)\n        if flag != 0:\n            print(flag)\n        else:\n            print('wait')", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    player = []\n    for n in range(N):\n        s = input().strip().split()\n        player.append([int(s[0]), int(s[1]), int(s[2]), int(s[3]), s[4], s[5], 0])\n    for i in range(N):\n        p = player[i]\n        ans = 'wait'\n        for j in range(i):\n            opp = player[j]\n            if opp[6] == 1:\n                continue\n            if opp[1] <= p[0] <= opp[2] and p[1] <= opp[0] <= p[2]:\n                if p[4] == opp[4]:\n                    if p[3] == opp[3]:\n                        if p[5] == 'random' and opp[5] == 'random' or (p[5] == 'black' and opp[5] == 'white') or (p[5] == 'white' and opp[5] == 'black'):\n                            ans = j + 1\n                            opp[6] = 1\n                            p[6] = 1\n                            break\n        print(ans)", "import math\nt = int(input())\nfor i in range(t):\n    s1 = int(input())\n    s = []\n    c = 0\n    for j in range(s1):\n        s2 = input()\n        s2 = s2.split()\n        if len(s) == 0:\n            print('wait')\n            s.append(s2)\n        else:\n            c = 0\n            for k in range(len(s)):\n                if int(s2[0]) <= int(s[k][2]) and int(s2[0]) >= int(s[k][1]) and (int(s[k][0]) <= int(s2[2])) and (int(s[k][0]) >= int(s2[1])):\n                    if int(s2[3]) == int(s[k][3]) and s2[4] == s[k][4]:\n                        if s2[5] == s[k][5] and s2[5] == 'random' or (s2[5] == 'white' and s[k][5] == 'black') or (s[k][5] == 'white' and s2[5] == 'black'):\n                            c = c + 1\n                            print(k + 1)\n                            s[k] = [0, 0, 0, 0, 0]\n                            k = math.inf\n                            break\n                else:\n                    c = c\n            if c == 0:\n                print('wait')\n                s.append(s2)\n            else:\n                st = [0, 0, 0, 0, 0]\n                s.append(st)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    t = [0] * n\n    for j in range(n):\n        temp = input().split()\n        a.append(temp)\n        c = len(a) - 1\n        s = 0\n        f = 0\n        for i in range(c):\n            if t[i] == 0:\n                if (int(a[i][0]) >= int(a[c][1]) and int(a[i][0]) <= int(a[c][2])) and int(a[c][0]) >= int(a[i][1]) and (int(a[c][0]) <= int(a[i][2])):\n                    s += 1\n                if a[i][4] == a[c][4]:\n                    s += 1\n                if a[i][3] == a[c][3]:\n                    s += 1\n                if a[i][5] == a[c][5] or (a[i][5] == 'white' and a[c][5] == 'black') or (a[c][5] == 'white' and a[i][5] == 'black'):\n                    s += 1\n                if s == 4:\n                    print(i + 1)\n                    t[c] = 1\n                    t[i] = 1\n                    f = 1\n                    break\n                else:\n                    s = 0\n        if f == 0:\n            print('wait')", "t = int(input())\nwhile t:\n    i = 1\n    players = []\n    t -= 1\n    N = int(input())\n    flag = 0\n    wait = []\n    while i <= N:\n        flag = 0\n        line = input()\n        rating = int(line.split()[0])\n        minrating = int(line.split()[1])\n        maxrating = int(line.split()[2])\n        time = int(line.split()[3])\n        rate = line.split()[4]\n        color = line.split()[5]\n        if i == 1 or len(players) == 0:\n            wait.append(i)\n            flag = 0\n        else:\n            for p in players:\n                if rating <= p[2] and rating >= p[1] and (p[0] >= minrating) and (p[0] <= maxrating) and (time == p[3]) and (rate == p[4]):\n                    if p[5] == 'random' and color == 'random':\n                        print(p[6])\n                        flag = 1\n                        players.remove(p)\n                        break\n                    elif p[5] == 'black' and color == 'white' or (p[5] == 'white' and color == 'black'):\n                        print(p[6])\n                        flag = 1\n                        players.remove(p)\n                        break\n                else:\n                    flag = 0\n        if flag == 0:\n            players.append([rating, minrating, maxrating, time, rate, color, i])\n            print('wait')\n        i += 1", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    playerslist = [list(input().split())]\n    playerslist[0][0] = int(playerslist[0][0])\n    playerslist[0][1] = int(playerslist[0][1])\n    playerslist[0][2] = int(playerslist[0][2])\n    playerslist[0][3] = int(playerslist[0][3])\n    print('wait')\n    while len(playerslist) < n:\n        l = list(input().split())\n        l[0] = int(l[0])\n        l[1] = int(l[1])\n        l[2] = int(l[2])\n        l[3] = int(l[3])\n        playerslist.append(l)\n        z = 0\n        for i in range(len(playerslist) - 1):\n            if l[0] >= playerslist[i][1] and l[0] <= playerslist[i][2] and (playerslist[i][0] >= l[1]) and (playerslist[i][0] <= l[2]) and (l[3] == playerslist[i][3]) and (l[4] == playerslist[i][4]):\n                if l[5] == playerslist[i][5] == 'random' or (l[5] == 'white' and playerslist[i][5] == 'black') or (l[5] == 'black' and playerslist[i][5] == 'white'):\n                    print(i + 1)\n                    z = 1\n                    playerslist[i] = [0, 0, 0, 0, 0, 0]\n                    playerslist[len(playerslist) - 1] = [0, 0, 0, 0, 0, 0]\n                    break\n        if z == 0:\n            print('wait')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    l = []\n    while n > 0:\n        n -= 1\n        l1 = input().split()\n        l1.append(1)\n        l1[0] = int(l1[0])\n        l1[1] = int(l1[1])\n        l1[2] = int(l1[2])\n        l1[3] = int(l1[3])\n        l.append(l1)\n        c = 0\n        for i in range(len(l) - 1):\n            if l[i][6] == 1:\n                if l1[0] <= l[i][2] and l1[0] >= l[i][1] and (l1[2] >= l[i][0]) and (l1[1] <= l[i][0]):\n                    if l1[3] == l[i][3] and l1[4] == l[i][4]:\n                        if l1[5] == l[i][5] and l1[5] == 'random' or (l1[5] != 'random' != l[i][5] and l1[5] != l[i][5]):\n                            l1[6] = 0\n                            l[i][6] = 0\n                            print(i + 1)\n                            c = 1\n                            break\n        if c == 0:\n            print('wait')", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        b = [i for i in input().split()]\n        (b[0], b[1], b[2], b[3]) = (int(b[0]), int(b[1]), int(b[2]), int(b[3]))\n        a.append(b)\n    visit = [0 for i in range(n)]\n    ans = ['wait']\n    for i in range(1, n):\n        for j in range(i):\n            if visit[j] == 0 and a[j][0] >= a[i][1] and (a[j][0] <= a[i][2]) and (a[i][0] >= a[j][1]) and (a[i][0] <= a[j][2]) and (a[j][3] == a[i][3]) and (a[j][4] == a[i][4]):\n                if a[j][5] == 'random' and a[i][5] == 'random' or (a[j][5] == 'white' and a[i][5] == 'black') or (a[j][5] == 'black' and a[i][5] == 'white'):\n                    visit[i] = 1\n                    visit[j] = 1\n                    ans.append(j + 1)\n                    break\n        else:\n            ans.append('wait')\n    for i in ans:\n        print(i)", "def chk(a, b):\n    if int(a[0]) < int(b[1]) or int(a[0]) > int(b[2]):\n        return False\n    if int(b[0]) < int(a[1]) or int(b[0]) > int(a[2]):\n        return False\n    if b[3] != a[3]:\n        return False\n    if b[4] != a[4]:\n        return False\n    if b[5] != a[5]:\n        if b[5] == 'random' or a[5] == 'random':\n            return False\n    elif b[5] != 'random':\n        return False\n    return True\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = [[i for i in input().split()] for j in range(n)]\n    b = ['wait']\n    c = [-1] * n\n    for i in range(1, n):\n        for j in range(i):\n            if chk(a[i], a[j]) and c[j] == -1:\n                c[j] = 1\n                c[i] = 1\n                b.append(j + 1)\n                break\n        if len(b) != i + 1:\n            b.append('wait')\n    for i in range(n):\n        print(b[i])\n    t -= 1", "colour = {'random': 'random', 'black': 'white', 'white': 'black'}\nfor _ in range(int(input())):\n    stack = []\n    n = int(input())\n    for k in range(n):\n        desc = input().split()\n        R = int(desc[0])\n        low = int(desc[1])\n        high = int(desc[2])\n        times = int(desc[3])\n        rate = desc[4]\n        clr = desc[5]\n        for i in range(len(stack)):\n            if stack[i] == 0:\n                continue\n            if stack[i][0] < low or stack[i][0] > high or stack[i][1] > R or (stack[i][2] < R) or (stack[i][3] != times) or (stack[i][4] != rate) or (stack[i][5] != colour[clr]):\n                continue\n            print(i + 1)\n            stack[i] = 0\n            stack.append(0)\n            break\n        else:\n            print('wait')\n            stack.append([R, low, high, times, rate, clr])", "import io\nimport sys\n\ndef test_data():\n    return io.StringIO('1\\n7\\n5 1 10 15 rated random\\n11 1 20 15 rated random\\n10 3 30 15 rated random\\n2 5 15 15 rated random\\n30 20 60 60 unrated white\\n50 20 40 60 unrated random\\n50 20 40 60 unrated black')\n\ndef get_input(source):\n    with source as lines:\n        t = int(next(lines))\n        for _ in range(t):\n            p = []\n            n = int(next(lines))\n            for _ in range(n):\n                (r, mi, ma, t, ranked, colour) = next(lines).strip().split(' ')\n                p.append((int(r), int(mi), int(ma), int(t), ranked, colour))\n            yield (n, p)\n\ndef calc(n, p):\n    waiting = []\n    for (i, person) in enumerate(p):\n        found = False\n        for (pos_j, j) in enumerate(waiting):\n            other = p[j]\n            if other[1] <= person[0] and person[0] <= other[2] and (person[1] <= other[0]) and (other[0] <= person[2]) and (other[3] == person[3]) and (other[4] == person[4]) and (other[5] == 'black' and person[5] == 'white' or (other[5] == 'white' and person[5] == 'black') or (other[5] == 'random' and person[5] == 'random')):\n                yield (j + 1)\n                del waiting[pos_j]\n                found = True\n                break\n        if not found:\n            yield 'wait'\n            waiting.append(i)\ninp = test_data() if '-test' in sys.argv else sys.stdin\nfor args in get_input(inp):\n    for state in calc(*args):\n        print(state)", "for jjjj in range(int(input())):\n    n = int(input())\n    c = []\n    rr = 'random'\n    bb = 'black'\n    cc = 'white'\n    visited = [0 for i in range(n)]\n    ans = []\n    for i in range(n):\n        a = list(map(str, input().strip().split(' ')))\n        u = -1\n        for j in range(i - 1, -1, -1):\n            if visited[j] == 1:\n                continue\n            b = c[j]\n            rating = int(b[0])\n            rating1 = int(a[0])\n            if rating >= int(a[1]) and rating <= int(a[2]) and (rating1 >= int(b[1])) and (rating1 <= int(b[2])) and (a[3] == b[3]) and (a[4] == b[4]):\n                if a[5] == rr and b[5] == rr or (a[5] == bb and b[5] == cc) or (a[5] == cc and b[5] == bb):\n                    u = j\n        if u == -1:\n            ans.append('wait')\n        else:\n            visited[u] = 1\n            visited[i] = 1\n            ans.append(str(u + 1))\n        c.append(a)\n    for i in ans:\n        print(i)", "def match(a, b):\n    if a == 'random' or b == 'random':\n        return a == b\n    return a != b\n\ndef solve(x):\n    pp = []\n    for (j, y) in enumerate(x):\n        y = [j + 1] + list(map(int, y[:4])) + y[4:]\n        for (i, p) in enumerate(pp):\n            if not match(p[-1], y[-1]):\n                continue\n            if p[-2] != y[-2]:\n                continue\n            if p[-3] != y[-3]:\n                continue\n            if y[1] < p[2] or y[1] > p[3]:\n                continue\n            if p[1] < y[2] or p[1] > y[3]:\n                continue\n            print(p[0])\n            pp = pp[:i] + pp[i + 1:]\n            break\n        else:\n            print('wait')\n            pp += [y]\nimport sys\nf = sys.stdin\nt = int(f.readline())\nfor i in range(t):\n    n = int(f.readline())\n    x = []\n    for j in range(n):\n        x += [f.readline().split()]\n    solve(x)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    vis = [0] * n\n    a = []\n    for i in range(n):\n        temp = input().split()\n        (temp[0], temp[1], temp[2], temp[3]) = (int(temp[0]), int(temp[1]), int(temp[2]), int(temp[3]))\n        f = 1\n        for j in range(len(a)):\n            if vis[j] == 0:\n                matching = 1\n                if not (temp[4] == a[j][4] and (temp[5] == a[j][5] and temp[5] == 'random' or (temp[5] == 'white' and a[j][5] == 'black') or (a[j][5] == 'white' and temp[5] == 'black'))):\n                    matching = 0\n                if not (temp[3] == a[j][3] and temp[0] >= a[j][1] and (temp[0] <= a[j][2]) and (a[j][0] >= temp[1]) and (a[j][0] <= temp[2])):\n                    matching = 0\n                if matching:\n                    vis[i] = vis[j] = 1\n                    print(j + 1)\n                    f = 0\n                    break\n        if f:\n            print('wait')\n        a.append(temp)", "class Game(object):\n\n    def __init__(self, rating, minRating, maxRating, thinkingTime, isMatchRated, colour, index):\n        self.rating = rating\n        self.minRating = minRating\n        self.maxRating = maxRating\n        self.isMatchRated = isMatchRated\n        self.thinkingTime = thinkingTime\n        self.colour = colour\n        self.index = index\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    gamesReadyToStart = []\n    for player in range(1, N + 1):\n        (rating, minRating, maxRating, thinkingTime, isMatchRated, colour) = input().split()\n        (rating, minRating, maxRating, thinkingTime) = (int(rating), int(minRating), int(maxRating), int(thinkingTime))\n        playerMatched = False\n        for gameI in range(len(gamesReadyToStart)):\n            game = gamesReadyToStart[gameI]\n            suitableMatch = True\n            if game.rating < minRating:\n                suitableMatch = False\n            if game.rating > maxRating:\n                suitableMatch = False\n            if rating < game.minRating:\n                suitableMatch = False\n            if rating > game.maxRating:\n                suitableMatch = False\n            if game.isMatchRated != isMatchRated:\n                suitableMatch = False\n            if game.thinkingTime != thinkingTime:\n                suitableMatch = False\n            if game.colour == 'black' and colour == 'black':\n                suitableMatch = False\n            if game.colour == 'black' and colour == 'random':\n                suitableMatch = False\n            if game.colour == 'white' and colour == 'white':\n                suitableMatch = False\n            if game.colour == 'white' and colour == 'random':\n                suitableMatch = False\n            if game.colour == 'random' and colour == 'black':\n                suitableMatch = False\n            if game.colour == 'random' and colour == 'white':\n                suitableMatch = False\n            if suitableMatch == True:\n                playerMatched = True\n                break\n        if playerMatched:\n            print(game.index)\n            gamesReadyToStart.pop(gameI)\n        if not playerMatched:\n            index = player\n            newGame = Game(rating, minRating, maxRating, thinkingTime, isMatchRated, colour, index)\n            gamesReadyToStart.append(newGame)\n            print('wait')", "for t in range(int(input())):\n    n = int(input())\n    li = []\n    for i in range(n):\n        l = input().split()\n        l[0] = int(l[0])\n        l[1] = int(l[1])\n        l[2] = int(l[2])\n        l[3] = int(l[3])\n        li.append(l)\n    ans = [] * n\n    ans.append('wait')\n    table = [0] * n\n    for i in range(1, n):\n        f = 0\n        for j in range(0, i):\n            if i == j:\n                continue\n            if table[j] == 0 and li[i][0] in range(li[j][1], li[j][2] + 1) and (li[j][0] in range(li[i][1], li[i][2] + 1)):\n                if li[i][3] == li[j][3] and li[i][4] == li[j][4]:\n                    if li[i][5] == 'random' and li[j][5] == 'random' or (li[i][5] != 'random' and li[i][5] != li[j][5] and (li[j][5] != 'random')):\n                        ans.append(j + 1)\n                        table[i] = 1\n                        table[j] = 1\n                        f = 0\n                        break\n                    else:\n                        f = 1\n                else:\n                    f = 1\n            else:\n                f = 1\n        if f == 1:\n            ans.append('wait')\n    for i in ans:\n        print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    (R, Minn, Maxx, Time, isRated, colour) = ([], [], [], [], [], [])\n    flag = []\n    for j in range(n):\n        arr = list(input().strip().split(' '))\n        R.append(int(arr[0]))\n        Minn.append(int(arr[1]))\n        Maxx.append(int(arr[2]))\n        Time.append(int(arr[3]))\n        isRated.append(arr[4])\n        colour.append(arr[5])\n        flag.append(1)\n    ans = ['wait']\n    for j in range(n):\n        for k in range(j):\n            if isRated[j] == isRated[k]:\n                if Time[j] == Time[k]:\n                    if R[j] >= Minn[k] and R[j] <= Maxx[k] and (R[k] <= Maxx[j]) and (R[k] >= Minn[j]):\n                        if colour[j] == colour[k] and colour[j] == 'random' or (colour[j] == 'white' and colour[k] == 'black') or (colour[k] == 'white' and colour[j] == 'black'):\n                            if flag[k]:\n                                ans.append(k + 1)\n                                flag[k] = 0\n                                flag[j] = 0\n                                break\n            if k == j - 1:\n                ans.append('wait')\n    for j in ans:\n        print(j)", "class game:\n\n    def __init__(self, pos, rating, minrating, maxrating, timethink, israted, color):\n        self.pos = pos\n        self.rating = int(rating)\n        self.minrating = int(minrating)\n        self.maxrating = int(maxrating)\n        self.timethink = int(timethink)\n        self.israted = israted\n        self.color = color\n\ndef compat(game1, game2):\n    cons = []\n    cons.append(game2.minrating <= game1.rating <= game2.maxrating)\n    cons.append(game1.minrating <= game2.rating <= game1.maxrating)\n    cons.append(game1.timethink == game2.timethink)\n    cons.append(game1.israted == game2.israted)\n    cons.append(game1.color == 'random' and game2.color == 'random' or (game1.color == 'black' and game2.color == 'white') or (game1.color == 'white' and game2.color == 'black'))\n    if False in cons:\n        return False\n    else:\n        return True\nfor _ in range(int(input())):\n    n = int(input())\n    queue = []\n    for currpos in range(n):\n        currgame = game(currpos + 1, *input().strip().split(' '))\n        for (i, g) in enumerate(queue):\n            if compat(currgame, g):\n                print(g.pos)\n                queue.remove(queue[i])\n                break\n        else:\n            queue.append(currgame)\n            print('wait')", "test = int(input())\nfor _ in range(test):\n    r = []\n    mi = []\n    ma = []\n    ti = []\n    ir = []\n    co = []\n    wa = []\n    n = int(input())\n    for i in range(n):\n        temp = input().split()\n        r.append(int(temp[0]))\n        mi.append(int(temp[1]))\n        ma.append(int(temp[2]))\n        ti.append(int(temp[3]))\n        ir.append(temp[4])\n        co.append(temp[5])\n        wa.append(-1)\n    for i in range(n):\n        for j in range(i):\n            if wa[j] != -1:\n                continue\n            if r[i] >= mi[j] and r[i] <= ma[j] and (r[j] >= mi[i]) and (r[j] <= ma[i]) and (ti[i] == ti[j]) and (ir[i] == ir[j]):\n                if co[i] == 'random' and co[j] == 'random' or (co[i] == 'black' and co[j] == 'white') or (co[i] == 'white' and co[j] == 'black'):\n                    wa[j] = -2\n                    wa[i] = j + 1\n                    break\n        if wa[i] == -1:\n            print('wait')\n        else:\n            print(wa[i])", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = []\n    for i in range(n):\n        l = [num for num in input().strip().split()]\n        arr.append(l)\n    booked = [False] * n\n    ans = ['wait'] * n\n    for i in range(n):\n        for j in range(i):\n            if not booked[j]:\n                if arr[i][3] == arr[j][3] and arr[i][4] == arr[j][4]:\n                    if int(arr[j][1]) <= int(arr[i][0]) <= int(arr[j][2]) and int(arr[i][1]) <= int(arr[j][0]) <= int(arr[i][2]):\n                        if arr[i][5] == arr[j][5] == 'random' or (arr[i][5] == 'white' and arr[j][5] == 'black') or (arr[j][5] == 'white' and arr[i][5] == 'black'):\n                            booked[i] = booked[j] = True\n                            ans[i] = str(j + 1)\n                            break\n    for val in ans:\n        print(val)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    r = []\n    rmin = []\n    rmax = []\n    tim = []\n    rated = []\n    color = []\n    played = [False for i in range(n)]\n    for i in range(n):\n        a = input().split()\n        r.append(int(a[0]))\n        rmin.append(int(a[1]))\n        rmax.append(int(a[2]))\n        tim.append(int(a[3]))\n        rated.append(a[4])\n        color.append(a[5])\n        flag = 0\n        for j in range(i):\n            a1 = False\n            a2 = False\n            a3 = False\n            a4 = False\n            if played[j] == False:\n                if rmin[j] <= r[i] <= rmax[j] and rmin[i] <= r[j] <= rmax[i]:\n                    a1 = True\n                if rated[i] == rated[j]:\n                    a2 = True\n                if tim[i] == tim[j]:\n                    a3 = True\n                if color[i] == color[j] == 'random' or (color[i] == 'black' and color[j] == 'white') or (color[j] == 'black' and color[i] == 'white'):\n                    a4 = True\n                if a1 and a2 and a3 and a4:\n                    print(j + 1)\n                    played[i] = True\n                    played[j] = True\n                    flag = 1\n                    break\n        if flag == 0:\n            print('wait')\n    t -= 1"]