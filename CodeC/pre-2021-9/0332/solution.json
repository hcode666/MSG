["for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a = sorted(a, reverse=True)\n    c = a[0]\n    for i in range(1, n):\n        c = (c + a[i]) / 2\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    for j in range(len(l) - 1, 0, -1):\n        c = (l[j] + l[j - 1]) / 2\n        l[j - 1] = c\n    print('{:.8f}'.format(l[0]))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a = sorted(a, reverse=True)\n    c = a[0]\n    for i in range(1, n):\n        c = (c + a[i]) / 2\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    conc = sorted(list(map(float, input().split())), reverse=True)\n    index = 0\n    while n > 1:\n        mix_conc = (conc[index] + conc[index + 1]) / 2\n        conc.pop(index)\n        conc.pop(index)\n        conc.append(mix_conc)\n        conc = sorted(conc, reverse=True)\n        n -= 1\n    print('{:.8f}'.format(conc[0]))", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    a.reverse()\n    c = (a[0] + a[1]) / 2\n    for i in range(2, n):\n        c = c / 2 + a[i] / 2\n    print(c)", "for _ in range(int(input())):\n    flasks = int(input())\n    concentration = sorted(list(map(int, input().split())))\n    concentration.reverse()\n    newflask = (concentration[0] + concentration[1]) / 2\n    for i in range(2, len(concentration)):\n        newflask = newflask / 2 + concentration[i] / 2\n    print(newflask)", "for _ in range(int(input())):\n    n = int(input())\n    n_list = sorted(list(map(int, input().split())))\n    n_list.reverse()\n    concentration = (n_list[0] + n_list[1]) / 2\n    for i in range(2, len(n_list)):\n        concentration = concentration / 2 + n_list[i] / 2\n    print(concentration)", "for _ in range(int(input())):\n    n = int(input())\n    n_list = sorted(list(map(int, input().split())))\n    n_list.reverse()\n    concentration = (n_list[0] + n_list[1]) / 2\n    for i in range(2, len(n_list)):\n        concentration = concentration / 2 + n_list[i] / 2\n    print(concentration)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort(reverse=True)\n    for i in range(n - 1):\n        c = a.pop(0) + a.pop(0)\n        a.insert(0, c / 2)\n    print(f'{a[0]:.8f}')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort(reverse=True)\n    for i in range(n - 1):\n        c = a.pop(0) + a.pop(0)\n        a.insert(0, c / 2)\n    print(f'{a[0]:.8f}')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort(reverse=True)\n    for i in range(n - 1):\n        c = a.pop(0) + a.pop(0)\n        a.insert(0, c / 2)\n    print(f'{a[0]:.8f}')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort(reverse=True)\n    for i in range(n - 1):\n        c = a.pop(0) + a.pop(0)\n        a.insert(0, c / 2)\n    print(f'{a[0]:.8f}')", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    ans = a[-1]\n    for i in range(len(a) - 1):\n        ans = (ans + a[len(a) - i - 2]) / 2\n    zero = '0' * 7\n    print(str(ans) + zero)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if n == 1:\n        print(a[0] / 2)\n    else:\n        avg = (a[-1] + a[-2]) / 2\n        j = n - 3\n        while j >= 0:\n            avg = (a[j] + avg) / 2\n            j -= 1\n        print(avg)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if n == 1:\n        print(a[0] / 2)\n    else:\n        avg = (a[-1] + a[-2]) / 2\n        j = n - 3\n        while j >= 0:\n            avg = (a[j] + avg) / 2\n            j -= 1\n        print(avg)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if n == 1:\n        print(a[0] / 2)\n    else:\n        avg = (a[-1] + a[-2]) / 2\n        j = n - 3\n        while j >= 0:\n            avg = (a[j] + avg) / 2\n            j -= 1\n        print(avg)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    s = 0\n    s = (l[0] + l[1]) / 2\n    for i in range(2, n):\n        s = (s + l[i]) / 2\n    print(s)\n    t -= 1", "T = int(input())\nfor _ in range(0, T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    while len(a) > 1:\n        a[0] = (a[0] + a[1]) / 2\n        a.remove(a[1])\n    print(a[0])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    while len(l) != 1:\n        l.sort(reverse=True)\n        x = l[0] / 2 + l[1] / 2\n        l.remove(l[1])\n        l.remove(l[0])\n        l.append(x)\n    print(round(l[0], 6))", "for i in range(int(input())):\n    n = int(input())\n    p = [int(i) for i in input().split()]\n    p.sort()\n    o = 0\n    p.reverse()\n    for i in range(len(p) - 1):\n        o = (p[i] + p[i + 1] + o) * 0.5\n        p[i + 1] = 0\n    print('{0:.8f}'.format(o))", "n = int(input())\nfor i in range(n):\n    N = int(input())\n    fla = list(map(int, input().split(' ')))\n    fla.sort()\n    for j in range(N - 1):\n        a = fla.pop()\n        b = fla.pop()\n        fla.append((a + b) / 2)\n    print('%.8f' % fla.pop())", "def merge(A, B):\n    (C, i, j) = ([], 0, 0)\n    while len(C) < len(A) + len(B):\n        if A[i] < B[j]:\n            C.append(A[i])\n            i += 1\n            if i == len(A):\n                C.extend(B[j:])\n        else:\n            C.append(B[j])\n            j += 1\n            if j == len(B):\n                C.extend(A[i:])\n    return C\n\ndef mergesort(L):\n    n = len(L)\n    if n <= 1:\n        return L\n    A = mergesort(L[:n // 2])\n    B = mergesort(L[n // 2:])\n    C = merge(A, B)\n    return C\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    L = mergesort(l)\n    s = L[-1]\n    for k in range(n - 2, -1, -1):\n        s += L[k]\n        s = s / 2\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    cnt = arr[-1]\n    for i in range(1, n):\n        cnt = (cnt + arr[-i - 1]) / 2\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    cnt = arr[-1]\n    for i in range(1, n):\n        cnt = (cnt + arr[-i - 1]) / 2\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    for _ in range(n - 1):\n        avg = (a[-1] + a[-2]) / 2\n        a = a[:-2]\n        a.append(avg)\n    print('{0:.8f}'.format(avg))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = l[-1]\n    for i in range(n - 2, -1, -1):\n        ans = (ans + l[i]) / 2\n    print('%.8f' % ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    cnt = arr[-1]\n    for i in range(1, n):\n        cnt = (cnt + arr[-i - 1]) / 2\n    print(cnt)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    s = l[n - 1] + l[n - 2]\n    s = s / 2\n    for i in range(n - 3, -1, -1):\n        s = s + l[i]\n        s = s / 2\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    res = 0\n    while len(l) > 1:\n        n = len(l)\n        res = (l[n - 1] + l[n - 2]) / 2\n        l.pop()\n        l.pop()\n        l.append(res)\n    print(l[0])", "t = input()\nfor c in range(0, int(t)):\n    n = input()\n    a = input().split()\n    arr = []\n    for x in a:\n        arr.append(int(x))\n    arr.sort()\n    out = 0\n    for y in range(int(n) - 1, -1, -1):\n        if y < int(n) - 1:\n            arr[y] = (arr[y] + arr[y + 1]) / 2\n    print(arr[0])", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    x = sorted(list(map(int, input().split())))\n    for i in range(n - 1, 0, -1):\n        x[i - 1] = (x[i] + x[i - 1]) / 2\n    print(x[0])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    concs = list(map(int, input().split()))\n    avg = 0\n    avg = float(avg)\n    concs = sorted(concs)\n    concs = concs[::-1]\n    avg = (concs[0] + concs[1]) / 2\n    for i in range(n - 2):\n        avg = (concs[i + 2] + avg) / 2\n    print(avg)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    poison = (a[-1] + a[-2]) / 2\n    for i in range(n - 3, -1, -1):\n        poison = (poison + a[i]) / 2\n    print(poison)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    sl = sorted(l, reverse=True)\n    a = sl[0]\n    for i in range(1, n):\n        a = (a + sl[i]) / 2\n    print(a)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    num1 = list(map(int, input().split(' ')))\n    num1.sort(reverse=True)\n    val = num1[0]\n    for i in range(1, len(num1)):\n        val = (val + num1[i]) / 2\n        val = round(val, 9)\n    print(val)", "for i in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split(' ')))\n    li.sort(reverse=True)\n    a = (li[0] + li[1]) / 2\n    for i in range(2, n):\n        a = (a + li[i]) / 2\n    print(a)", "for _ in range(int(input())):\n    b = int(input())\n    inp = list(map(int, input().split()))\n    l = sorted(inp, reverse=True)\n    x = (l[0] + l[1]) / 2\n    for i in range(2, b):\n        y = l[i]\n        x = (x + y) / 2\n    print(x)", "for _ in range(int(input())):\n    b = int(input())\n    inp = list(map(int, input().split()))\n    l = sorted(inp, reverse=True)\n    x = (l[0] + l[1]) / 2\n    for i in range(2, b):\n        y = l[i]\n        x = (x + y) / 2\n    x = format(x, '.8f')\n    print(x)", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = arr[-1]\n    for j in range(length - 1, -1, -1):\n        ans = (ans + arr[j]) / 2\n    print(ans)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    c = list(map(int, input().split()))\n    c.sort(reverse=True)\n    sum1 = c[0]\n    flag = 1\n    if n == 1:\n        print(c[0])\n        flag = 0\n    if flag == 1:\n        for i in range(1, n):\n            sum1 = (sum1 + c[i]) / 2\n    print(str.format('{0:.8f}', sum1))", "for x in range(int(input())):\n    n = int(input())\n    a = [int(d) for d in input().split()]\n    a.sort(reverse=True)\n    i = 0\n    while i < len(a) - 1:\n        d = (a[i] + a[i + 1]) / 2\n        a[i + 1] = d\n        data = a[i + 1]\n        i += 1\n    print(str.format('{0:.8f}', data))", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    a = [int(x) for x in input().split()]\n    l = sorted(a, reverse=True)\n    x = l[0]\n    for i in range(1, N):\n        x = (x + l[i]) / 2\n    print(str.format('{0:.8f}', x))", "def solve(num, l):\n    l.sort()\n    mini = pow(10, 6)\n    i = len(l) - 1\n    while len(l) > 1:\n        n1 = l[i]\n        n2 = l[i - 1]\n        su = (n1 + n2) / 2\n        del l[i]\n        del l[i - 1]\n        l.append(su)\n        i = len(l) - 1\n    return l[0]\nn = int(input())\nresults = []\nfor i in range(0, n):\n    num = int(input())\n    l = list(map(int, input().split()))\n    out = solve(num, l)\n    results.append(out)\nfor j in results:\n    print(j)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(float, input().split()))\n    l.sort()\n    for i in range(len(l) - 1):\n        l[-2] = (l[-2] + l[-1]) / 2\n        l.pop()\n    print('{0:.8f}'.format(l[0]))", "def output(n, arr):\n    arr.sort(reverse=True)\n    poison = arr[0]\n    for i in range(1, n):\n        poison = poison / 2 + arr[i] / 2\n    print('{:.8f}'.format(poison))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    output(n, arr)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    for i in range(n - 1):\n        s = (a[i] + a[i + 1]) / 2\n        a[i:i + 2] = [0, s]\n    print(a[-1])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    for i in range(n - 1):\n        s = a[i] / 2 + a[i + 1] / 2\n        a[i:i + 2] = [0, s]\n    print(a[-1])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(sorted(map(int, input().split()), reverse=True))\n    s = l[0]\n    for i in range(1, n):\n        s = (s + l[i]) / 2\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(sorted(map(int, input().split()), reverse=True))\n    s = l[0]\n    for i in range(1, n):\n        s = (s + l[i]) / 2\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    cities = list(map(int, input().split()))\n    cities.sort(reverse=True)\n    s = cities[0]\n    for i in range(1, n):\n        s = (s + cities[i]) / 2\n    print('{:.8f}'.format(s))", "k = int(input())\nfor _ in range(k):\n    n = input()\n    arr = [int(x) for x in input().split(' ')]\n    arr.sort()\n    arr = arr[::-1]\n    init = arr[0]\n    for y in range(1, len(arr)):\n        init = (init + arr[y]) / 2\n    print('%.8f' % init)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = a[::-1]\n    sum = 0\n    for i in range(n):\n        sum += b[i]\n        if i >= 1:\n            sum = sum / 2\n    print(sum)", "for _ in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    while len(a) > 1:\n        (x, y) = (a.pop(), a.pop())\n        a.append((x + y) / 2)\n    print('{:.8f}'.format(a[0]))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    val = arr[0]\n    for i in arr[1:]:\n        val = (val + i) / 2\n    print(val)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    val = arr[0]\n    for i in arr[1:]:\n        val = (val + i) / 2\n    print(val)", "for t in range(int(input())):\n    n = int(input())\n    arr = [int(char) for char in input().split()]\n    arr.sort()\n    for i in range(n - 1):\n        l = (arr[-1] + arr[-2]) / 2\n        arr.pop()\n        arr.pop()\n        arr.append(l)\n    print(arr[0])", "for tc in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    c = (A[n - 1] + A[n - 2]) / 2\n    for i in range(n - 2):\n        c = (c + A[n - 3 - i]) / 2\n    print(format(c, '.8f'))", "def qsort(arr):\n    less = []\n    equal = []\n    great = []\n    if len(arr) > 1:\n        pivot = arr[0]\n        for i in arr:\n            if i < pivot:\n                less.append(i)\n            elif i == pivot:\n                equal.append(i)\n            elif i > pivot:\n                great.append(i)\n        return qsort(great) + equal + qsort(less)\n    else:\n        return arr\ntst = int(input())\nwhile tst > 0:\n    tst = tst - 1\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a = qsort(a)\n    l = len(a)\n    mean = a[0]\n    i = 1\n    while i < l:\n        mean = mean + a[i]\n        mean = mean / 2\n        i = i + 1\n    print(format(mean, '0.6f'))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    a = l[0]\n    for j in range(1, n):\n        a = (a + l[j]) / 2\n    print('{:.8f}'.format(a))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    a = l[0]\n    for j in range(1, n):\n        a = (a + l[j]) / 2\n    print('{:.8f}'.format(a))", "n = int(input())\nre = []\ntestCases = []\nfor i in range(n):\n    re.append(int(input()))\n    testCases.append(list(map(int, input().split())))\nfor tc in testCases:\n    tc.sort()\n    tc.reverse()\n    temp = (tc[0] + tc[1]) / 2\n    if len(tc) > 2:\n        for i in range(2, len(tc)):\n            temp = (temp + tc[i]) / 2\n    print(temp)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr.sort(reverse=True)\n    ans = arr[0]\n    for i in range(1, n):\n        ans = (ans + arr[i]) / 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    a = [int(x) for x in input().split()]\n    l = sorted(a, reverse=True)\n    x = l[0]\n    for i in range(1, N):\n        x = (x + l[i]) / 2\n    print(str.format('{0:.8f}', x))", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    a = [int(x) for x in input().split()]\n    l = sorted(a, reverse=True)\n    x = l[0]\n    for i in range(1, N):\n        x = (x + l[i]) / 2\n    print(str.format('{0:.8f}', x))", "T = int(input())\n\ndef algo():\n    N = int(input())\n    A = list(map(float, input().split()))\n    A.sort(reverse=True)\n    out = A[0]\n    for i in A:\n        out = (out + i) / 2\n    print(out)\nfor i in range(T):\n    algo()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    arr.reverse()\n    su = arr[0]\n    for i in range(1, n):\n        su = (su + arr[i]) / 2\n    print('%.8f' % su)", "a = int(input())\nfor i in range(a):\n    c = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    for i in range(c - 1):\n        arr[1] = (arr[0] + arr[1]) / 2\n        arr.pop(0)\n    print(arr[0])", "t = int(input())\n\ndef getHalf(a, b):\n    x = a / 2\n    y = b / 2\n    return x + y\nfor _ in range(t):\n    n = int(input())\n    n_list = list(sorted(map(int, input().split()), reverse=True))\n    value = n_list[0]\n    for i in range(n - 1):\n        value = getHalf(value, n_list[i + 1])\n    print(value)", "t = int(input())\n\ndef getHalf(a, b):\n    x = a / 2\n    y = b / 2\n    return x + y\nfor _ in range(t):\n    n = int(input())\n    n_list = list(sorted(map(int, input().split()), reverse=True))\n    value = n_list[0]\n    for i in range(n - 1):\n        value = getHalf(value, n_list[i + 1])\n    print(value)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort(reverse=True)\n    avg = (a[0] + a[1]) / 2\n    for i in range(2, n):\n        avg = (avg + a[i]) / 2\n    print(float(avg))", "for M in range(int(input())):\n    x = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if x == 1:\n        print(*a)\n        continue\n    avg = (a[-1] + a[-2]) / 2\n    for i in reversed(range(x - 2)):\n        avg = (avg + a[i]) / 2\n    print(avg)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    s = (l[0] + l[1]) / 2\n    for i in range(2, n):\n        s = (s + l[i]) / 2\n    print(format(s, '.6f'))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    while len(a) != 1:\n        a1 = a.pop()\n        a2 = a.pop()\n        a.append((a1 + a2) / 2)\n    ans = a[0]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    while len(a) != 1:\n        a1 = a.pop()\n        a2 = a.pop()\n        a.append((a1 + a2) / 2)\n    ans = a[0]\n    print(ans)", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    for j in range(0, len(l) - 1):\n        s = l[j] / 2 + l[j + 1] / 2\n        l[j + 1] = s\n    print(float(s))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    for j in range(0, len(l) - 1):\n        s = l[j] / 2 + l[j + 1] / 2\n        l[j + 1] = s\n    print(float(s))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    for j in range(0, len(l) - 1):\n        s = l[j] / 2 + l[j + 1] / 2\n        l[j + 1] = s\n    print(float(s))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    for j in range(0, len(l) - 1):\n        s = l[j] / 2 + l[j + 1] / 2\n        l[j + 1] = s\n    print(float(s))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l, reverse=True)\n    for j in range(len(l) - 1):\n        a = l[j] / 2 + l[j + 1] / 2\n        l[j + 1] = a\n    print('{0:.8f}'.format(a))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l, reverse=True)\n    for j in range(len(l) - 1):\n        a = l[j] / 2 + l[j + 1] / 2\n        l[j + 1] = a\n    print('{0:.8f}'.format(a))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l, reverse=True)\n    for i in range(0, len(l) - 1):\n        a = l[i] / 2 + l[i + 1] / 2\n        l[i + 1] = a\n    print('{0:.8f}'.format(a))", "for _ in range(int(input())):\n    n = int(input())\n    st = input().split()\n    A = []\n    for x in st:\n        A.append(int(x))\n    A.sort()\n    d = 1.0\n    r = 0\n    for k in range(n - 1):\n        d = 2 * d\n        r += A[k] / d\n    r += A[n - 1] / d\n    print(r)", "import sys\nimport math\n\ndef main(arr):\n    arr.sort(reverse=True)\n    for i in range(1, len(arr)):\n        arr[i] = 0.5 * (arr[i] + arr[i - 1])\n        arr[i - 1] = 0\n    return arr[-1]\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(main(arr))", "for i in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    l.sort()\n    k = n - 1\n    m = l[n - 1]\n    for j in range(n - 1):\n        m = (m + l[k - 1]) / 2\n        k = k - 1\n    print(m)", "for i in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    l.sort()\n    k = n - 1\n    m = l[n - 1]\n    for j in range(n - 1):\n        m = (m + l[k - 1]) / 2\n        k = k - 1\n    print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    N = list(map(int, input().split()))\n    N.sort()\n    k = n - 1\n    ave = N[k]\n    for j in range(n - 1):\n        ave = (ave + N[k - 1]) / 2\n        k = k - 1\n    print(ave)", "test = int(input())\nfor i in range(test):\n    N = int(input())\n    n = input()\n    a = list(n.split(' '))\n    for k in range(N):\n        a[k] = int(a[k])\n    a.sort(reverse=True)\n    sum = a[0] / 2 ** (N - 1)\n    for j in range(1, N):\n        sum += a[j] / 2 ** (N - j)\n    print(sum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    N = list(map(int, input().split()))\n    N.sort()\n    k = n - 1\n    ave = N[k]\n    for j in range(n - 1):\n        ave = (ave + N[k - 1]) / 2\n        k = k - 1\n    print(ave)", "for t in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    for i in range(n - 1):\n        lis.sort()\n        a = lis.pop(len(lis) - 1)\n        b = lis.pop(len(lis) - 1)\n        lis.append((a + b) / 2)\n    print(lis[0])", "for t in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    for i in range(n - 1):\n        lis.sort()\n        a = lis.pop(len(lis) - 1)\n        b = lis.pop(len(lis) - 1)\n        lis.append((a + b) / 2)\n    print(lis[0])", "ns = lambda : input()\nni = lambda : int(input())\nnm = lambda : map(int, input().split())\nnl = lambda : list(map(int, input().split()))\nfor _ in range(ni()):\n    n = ni()\n    a = nl()\n    a.sort()\n    ans = a[-1]\n    for i in range(1, n):\n        ans = (ans + a[n - 1 - i]) / 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    l.sort(reverse=True)\n    c = l[0] + l[1]\n    for i in range(2, n):\n        c += l[i] * 2 ** (i - 1)\n    c /= 2 ** (n - 1)\n    print(format(c, '.8f'))", "try:\n    T = int(input())\n    for i in range(T):\n        n = int(input())\n        path = [int(i) for i in input().strip().split(' ')]\n        path.sort(reverse=True)\n        count = 0\n        for i in range(n - 1):\n            res = (path[i] + path[i + 1]) / 2\n            count = count + res\n            path[i + 1] = res\n        print('%.8f' % res)\nexcept EOFError:\n    pass", "def average(a, b):\n    return (a + b) / 2\ntestCases = int(input())\nfor _ in range(testCases):\n    n = int(input())\n    concentration = list(map(int, input().split()))\n    concentration.sort(reverse=True)\n    while len(concentration) > 1:\n        concentration.insert(0, average(concentration.pop(0), concentration.pop(0)))\n    print(concentration[0])", "def average(a, b):\n    return (a + b) / 2\ntestCases = int(input())\nfor _ in range(testCases):\n    n = int(input())\n    concentration = list(map(int, input().split()))\n    concentration.sort(reverse=True)\n    while len(concentration) > 1:\n        concentration.insert(0, average(concentration.pop(0), concentration.pop(0)))\n    print(concentration[0])", "def Average(A, B):\n    return (A + B) / 2\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort(reverse=True)\n    while len(A) != 1:\n        A.insert(0, Average(A.pop(0), A.pop(0)))\n    print(A[0])", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort(reverse=True)\n    k = (a[0] + a[1]) / 2\n    for i in range(2, n):\n        k = (k + a[i]) / 2\n    print(k)", "testcase = int(input())\nfor z in range(testcase):\n    N = int(input())\n    arr = [int(d) for d in input().split()]\n    while N > 2:\n        arr = sorted(arr)\n        last_two_average = (arr[-1] + arr[-2]) / 2\n        arr = arr[:-2]\n        arr.append(last_two_average)\n        N = N - 1\n    print('{0:.8f}'.format((arr[0] + arr[1]) / 2))", "t = int(input())\nfor i in range(t):\n    n = input()\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    while len(arr) != 1:\n        w = arr[-1]\n        arr.pop()\n        e = arr[-1]\n        arr.pop()\n        arr.append((w + e) / 2)\n    print('%.6f' % arr[0])"]