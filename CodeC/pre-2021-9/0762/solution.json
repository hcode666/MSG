["import sys\nimport copy\nimport math\nimport heapq\nimport bisect\nimport random\nimport operator\nimport statistics\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom heapq import heapify, heappush, heappop\nfrom itertools import permutations, combinations\nfrom collections import Counter, OrderedDict, deque\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom functools import lru_cache, reduce\nsys.setrecursionlimit(100000000)\ninp = lambda : int(input())\nstrr = lambda : input().strip()\njl = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmuli = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nmod = 1000000007\nfor i in range(int(input())):\n    n = int(input())\n    d = list(map(int, input().split()))\n    (o1, o2, r1, r2) = ([], [], [], [])\n    (m1, m2, p1, p2) = (d[0], d[0], d[-1], d[-1])\n    (l1, l2, l3, l4) = (0, 0, 0, 0)\n    for j in range(n):\n        l1 += d[j]\n        l2 += d[j]\n        l3 += d[-j - 1]\n        l4 += d[-j - 1]\n        if l1 > m1:\n            m1 = l1\n        if l2 < m2:\n            m2 = l2\n        if l3 > p1:\n            p1 = l3\n        if l4 < p2:\n            p2 = l4\n        o1.append(m1)\n        o2.append(m2)\n        r1.append(p1)\n        r2.append(p2)\n        if l1 < 0:\n            l1 = 0\n        if l2 > 0:\n            l2 = 0\n        if l3 < 0:\n            l3 = 0\n        if l4 > 0:\n            l4 = 0\n    c = 0\n    for k in range(n - 1):\n        c = max(abs(o1[k] - r2[n - 2 - k]), abs(o2[k] - r1[n - 2 - k]), c)\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = [[0, 0] for i in range(n)]\n    b = [[0, 0] for i in range(n)]\n    x = arr[0]\n    y = arr[0]\n    for i in range(1, n):\n        a[i][0] = x\n        a[i][1] = y\n        if x < 0:\n            x = arr[i]\n        else:\n            x += arr[i]\n        if y > 0:\n            y = arr[i]\n        else:\n            y += arr[i]\n    x = 0\n    y = 0\n    for i in range(n - 1, -1, -1):\n        if x < 0:\n            x = arr[i]\n        else:\n            x += arr[i]\n        if y > 0:\n            y = arr[i]\n        else:\n            y += arr[i]\n        b[i][0] = x\n        b[i][1] = y\n    ans = 0\n    for i in range(1, n):\n        c = abs(a[i][0] - b[i][1])\n        d = abs(a[i][1] - b[i][0])\n        c = max(c, d)\n        ans = max(ans, c)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = [[0, 0] for i in range(n)]\n    b = [[0, 0] for i in range(n)]\n    x = arr[0]\n    y = arr[0]\n    for i in range(1, n):\n        a[i][0] = x\n        a[i][1] = y\n        if x < 0:\n            x = arr[i]\n        else:\n            x += arr[i]\n        if y > 0:\n            y = arr[i]\n        else:\n            y += arr[i]\n    x = 0\n    y = 0\n    for i in range(n - 1, -1, -1):\n        if x < 0:\n            x = arr[i]\n        else:\n            x += arr[i]\n        if y > 0:\n            y = arr[i]\n        else:\n            y += arr[i]\n        b[i][0] = x\n        b[i][1] = y\n    ans = 0\n    for i in range(1, n):\n        c = abs(a[i][0] - b[i][1])\n        d = abs(a[i][1] - b[i][0])\n        c = max(c, d)\n        ans = max(ans, c)\n    print(ans)", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    (max_lr, min_lr) = ([a[0]], [a[0]])\n    for i in range(1, n):\n        max_lr.append(max(max_lr[i - 1] + a[i], a[i]))\n        min_lr.append(min(min_lr[i - 1] + a[i], a[i]))\n    max_rl = [0 for i in range(n)]\n    min_rl = [0 for i in range(n)]\n    max_inc_rl = [0 for i in range(n)]\n    min_inc_rl = [0 for i in range(n)]\n    max_rl[n - 1] = a[n - 1]\n    min_rl[n - 1] = a[n - 1]\n    max_inc_rl[n - 1] = a[n - 1]\n    min_inc_rl[n - 1] = a[n - 1]\n    for i in range(n - 2, -1, -1):\n        max_inc_rl[i] = max(max_inc_rl[i + 1] + a[i], a[i])\n        max_rl[i] = max(max_inc_rl[i], max_rl[i + 1])\n        min_inc_rl[i] = min(min_inc_rl[i + 1] + a[i], a[i])\n        min_rl[i] = min(min_inc_rl[i], min_rl[i + 1])\n    dishes = [max(abs(max_lr[i] - min_rl[i + 1]), abs(min_lr[i] - max_rl[i + 1])) for i in range(n - 1)]\n    print(max(dishes))", "for _ in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))[::-1]\n    mxsfr = [0] * N\n    mv = float('-inf')\n    tmv = 0\n    for i in range(N):\n        tmv = tmv + a[i]\n        if mv < tmv:\n            mv = tmv\n        if tmv < 0:\n            tmv = 0\n        mxsfr[-i - 1] = mv\n    mn = float('inf')\n    tmn = 0\n    mnsfr = [0] * N\n    for i in range(N):\n        tmn = tmn + a[i]\n        if mn > tmn:\n            mn = tmn\n        if tmn > 0:\n            tmn = 0\n        mnsfr[-i - 1] = mn\n    a = a[::-1]\n    mn = float('inf')\n    tmn = 0\n    mnsf = [0] * N\n    for i in range(N):\n        tmn = tmn + a[i]\n        if mn > tmn:\n            mn = tmn\n        if tmn > 0:\n            tmn = 0\n        mnsf[i] = mn\n    mxsf = [0] * N\n    mv = float('-inf')\n    tmv = 0\n    for i in range(N):\n        tmv = tmv + a[i]\n        if mv < tmv:\n            mv = tmv\n        if tmv < 0:\n            tmv = 0\n        mxsf[i] = mv\n    ans = 0\n    for i in range(N - 1):\n        if abs(mnsf[i] - mxsfr[i + 1]) > ans:\n            ans = abs(mnsf[i] - mxsfr[i + 1])\n        if abs(mxsf[i] - mnsfr[i + 1]) > ans:\n            ans = abs(mxsf[i] - mnsfr[i + 1])\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    (o1, o2, r1, r2) = ([], [], [], [])\n    (m1, m2, p1, p2) = (d[0], d[0], d[-1], d[-1])\n    (l1, l2, l3, l4) = (0, 0, 0, 0)\n    for j in range(n):\n        l1 += d[j]\n        l2 += d[j]\n        l3 += d[-j - 1]\n        l4 += d[-j - 1]\n        if l1 > m1:\n            m1 = l1\n        if l2 < m2:\n            m2 = l2\n        if l3 > p1:\n            p1 = l3\n        if l4 < p2:\n            p2 = l4\n        o1.append(m1)\n        o2.append(m2)\n        r1.append(p1)\n        r2.append(p2)\n        if l1 < 0:\n            l1 = 0\n        if l2 > 0:\n            l2 = 0\n        if l3 < 0:\n            l3 = 0\n        if l4 > 0:\n            l4 = 0\n    c = 0\n    for k in range(n - 1):\n        c = max(abs(o1[k] - r2[n - 2 - k]), abs(o2[k] - r1[n - 2 - k]), c)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    (o1, o2, r1, r2) = ([], [], [], [])\n    (m1, m2, p1, p2) = (d[0], d[0], d[-1], d[-1])\n    (l1, l2, l3, l4) = (0, 0, 0, 0)\n    for j in range(n):\n        l1 += d[j]\n        l2 += d[j]\n        l3 += d[-j - 1]\n        l4 += d[-j - 1]\n        if l1 > m1:\n            m1 = l1\n        if l2 < m2:\n            m2 = l2\n        if l3 > p1:\n            p1 = l3\n        if l4 < p2:\n            p2 = l4\n        o1.append(m1)\n        o2.append(m2)\n        r1.append(p1)\n        r2.append(p2)\n        if l1 < 0:\n            l1 = 0\n        if l2 > 0:\n            l2 = 0\n        if l3 < 0:\n            l3 = 0\n        if l4 > 0:\n            l4 = 0\n    c = 0\n    for k in range(n - 1):\n        c = max(abs(o1[k] - r2[n - 2 - k]), abs(o2[k] - r1[n - 2 - k]), c)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    (o1, o2, r1, r2) = ([], [], [], [])\n    (m1, m2, p1, p2) = (d[0], d[0], d[-1], d[-1])\n    (l1, l2, l3, l4) = (0, 0, 0, 0)\n    for j in range(n):\n        l1 += d[j]\n        l2 += d[j]\n        l3 += d[-j - 1]\n        l4 += d[-j - 1]\n        if l1 > m1:\n            m1 = l1\n        if l2 < m2:\n            m2 = l2\n        if l3 > p1:\n            p1 = l3\n        if l4 < p2:\n            p2 = l4\n        o1.append(m1)\n        o2.append(m2)\n        r1.append(p1)\n        r2.append(p2)\n        if l1 < 0:\n            l1 = 0\n        if l2 > 0:\n            l2 = 0\n        if l3 < 0:\n            l3 = 0\n        if l4 > 0:\n            l4 = 0\n    c = 0\n    for k in range(n - 1):\n        c = max(abs(o1[k] - r2[n - 2 - k]), abs(o2[k] - r1[n - 2 - k]), c)\n    print(c)", "T = int(input())\nimport numpy as np\n\ndef max_sub_min(arr):\n    N = len(arr)\n    max_till_i = np.zeros(N)\n    min_from_i = np.zeros(N)\n    best_max_till_i = np.zeros(N)\n    best_min_from_i = np.zeros(N)\n    best_max = arr[0]\n    best_min = arr[-1]\n    for i in range(N):\n        if i == 0:\n            max_till_i[i] = arr[i]\n            min_from_i[-i - 1] = arr[-i - 1]\n        else:\n            max_till_i[i] = arr[i] + max(0, max_till_i[i - 1])\n            min_from_i[-i - 1] = arr[-i - 1] + min(0, min_from_i[-i])\n        best_max = max(best_max, max_till_i[i])\n        best_min = min(best_min, min_from_i[-i - 1])\n        best_max_till_i[i] = best_max\n        best_min_from_i[-i - 1] = best_min\n    best_diff = 0\n    for i in range(N - 1):\n        if best_max_till_i[i] - best_min_from_i[i + 1] > best_diff:\n            best_diff = best_max_till_i[i] - best_min_from_i[i + 1]\n    return int(best_diff)\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    print(max(max_sub_min(arr), max_sub_min(arr[::-1])))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    (o1, o2, r1, r2) = ([], [], [], [])\n    (m1, m2, p1, p2) = (d[0], d[0], d[-1], d[-1])\n    (l1, l2, l3, l4) = (0, 0, 0, 0)\n    for j in range(n):\n        l1 += d[j]\n        l2 += d[j]\n        l3 += d[-j - 1]\n        l4 += d[-j - 1]\n        if l1 > m1:\n            m1 = l1\n        if l2 < m2:\n            m2 = l2\n        if l3 > p1:\n            p1 = l3\n        if l4 < p2:\n            p2 = l4\n        o1.append(m1)\n        o2.append(m2)\n        r1.append(p1)\n        r2.append(p2)\n        if l1 < 0:\n            l1 = 0\n        if l2 > 0:\n            l2 = 0\n        if l3 < 0:\n            l3 = 0\n        if l4 > 0:\n            l4 = 0\n    c = 0\n    for k in range(n - 1):\n        c = max(abs(o1[k] - r2[n - 2 - k]), abs(o2[k] - r1[n - 2 - k]), c)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    (o1, o2, r1, r2) = ([], [], [], [])\n    (m1, m2, p1, p2) = (d[0], d[0], d[-1], d[-1])\n    (l1, l2, l3, l4) = (0, 0, 0, 0)\n    for j in range(n):\n        l1 += d[j]\n        l2 += d[j]\n        l3 += d[-j - 1]\n        l4 += d[-j - 1]\n        if l1 > m1:\n            m1 = l1\n        if l2 < m2:\n            m2 = l2\n        if l3 > p1:\n            p1 = l3\n        if l4 < p2:\n            p2 = l4\n        o1.append(m1)\n        o2.append(m2)\n        r1.append(p1)\n        r2.append(p2)\n        if l1 < 0:\n            l1 = 0\n        if l2 > 0:\n            l2 = 0\n        if l3 < 0:\n            l3 = 0\n        if l4 > 0:\n            l4 = 0\n    c = 0\n    for k in range(n - 1):\n        c = max(abs(o1[k] - r2[n - 2 - k]), abs(o2[k] - r1[n - 2 - k]), c)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    (o1, o2, r1, r2) = ([], [], [], [])\n    (m1, m2, p1, p2) = (d[0], d[0], d[-1], d[-1])\n    (l1, l2, l3, l4) = (0, 0, 0, 0)\n    for j in range(n):\n        l1 += d[j]\n        l2 += d[j]\n        l3 += d[-j - 1]\n        l4 += d[-j - 1]\n        if l1 > m1:\n            m1 = l1\n        if l2 < m2:\n            m2 = l2\n        if l3 > p1:\n            p1 = l3\n        if l4 < p2:\n            p2 = l4\n        o1.append(m1)\n        o2.append(m2)\n        r1.append(p1)\n        r2.append(p2)\n        if l1 < 0:\n            l1 = 0\n        if l2 > 0:\n            l2 = 0\n        if l3 < 0:\n            l3 = 0\n        if l4 > 0:\n            l4 = 0\n    c = 0\n    for k in range(n - 1):\n        c = max(abs(o1[k] - r2[n - 2 - k]), abs(o2[k] - r1[n - 2 - k]), c)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    (o1, o2, r1, r2) = ([], [], [], [])\n    (m1, m2, p1, p2) = (d[0], d[0], d[-1], d[-1])\n    (l1, l2, l3, l4) = (0, 0, 0, 0)\n    for j in range(n):\n        l1 += d[j]\n        l2 += d[j]\n        l3 += d[-j - 1]\n        l4 += d[-j - 1]\n        if l1 > m1:\n            m1 = l1\n        if l2 < m2:\n            m2 = l2\n        if l3 > p1:\n            p1 = l3\n        if l4 < p2:\n            p2 = l4\n        o1.append(m1)\n        o2.append(m2)\n        r1.append(p1)\n        r2.append(p2)\n        if l1 < 0:\n            l1 = 0\n        if l2 > 0:\n            l2 = 0\n        if l3 < 0:\n            l3 = 0\n        if l4 > 0:\n            l4 = 0\n    c = 0\n    for k in range(n - 1):\n        c = max(abs(o1[k] - r2[n - 2 - k]), abs(o2[k] - r1[n - 2 - k]), c)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    (o1, o2, r1, r2) = ([], [], [], [])\n    (m1, m2, p1, p2) = (d[0], d[0], d[-1], d[-1])\n    (l1, l2, l3, l4) = (0, 0, 0, 0)\n    for j in range(n):\n        l1 += d[j]\n        l2 += d[j]\n        l3 += d[-j - 1]\n        l4 += d[-j - 1]\n        if l1 > m1:\n            m1 = l1\n        if l2 < m2:\n            m2 = l2\n        if l3 > p1:\n            p1 = l3\n        if l4 < p2:\n            p2 = l4\n        o1.append(m1)\n        o2.append(m2)\n        r1.append(p1)\n        r2.append(p2)\n        if l1 < 0:\n            l1 = 0\n        if l2 > 0:\n            l2 = 0\n        if l3 < 0:\n            l3 = 0\n        if l4 > 0:\n            l4 = 0\n    c = 0\n    for k in range(n - 1):\n        c = max(abs(o1[k] - r2[n - 2 - k]), abs(o2[k] - r1[n - 2 - k]), c)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    (o1, o2, r1, r2) = ([], [], [], [])\n    (m1, m2, p1, p2) = (d[0], d[0], d[-1], d[-1])\n    (l1, l2, l3, l4) = (0, 0, 0, 0)\n    for j in range(n):\n        l1 += d[j]\n        l2 += d[j]\n        l3 += d[-j - 1]\n        l4 += d[-j - 1]\n        if l1 > m1:\n            m1 = l1\n        if l2 < m2:\n            m2 = l2\n        if l3 > p1:\n            p1 = l3\n        if l4 < p2:\n            p2 = l4\n        o1.append(m1)\n        o2.append(m2)\n        r1.append(p1)\n        r2.append(p2)\n        if l1 < 0:\n            l1 = 0\n        if l2 > 0:\n            l2 = 0\n        if l3 < 0:\n            l3 = 0\n        if l4 > 0:\n            l4 = 0\n    c = 0\n    for k in range(n - 1):\n        c = max(abs(o1[k] - r2[n - 2 - k]), abs(o2[k] - r1[n - 2 - k]), c)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    (o1, o2, r1, r2) = ([], [], [], [])\n    (m1, m2, p1, p2) = (d[0], d[0], d[-1], d[-1])\n    (l1, l2, l3, l4) = (0, 0, 0, 0)\n    for j in range(n):\n        l1 += d[j]\n        l2 += d[j]\n        l3 += d[-j - 1]\n        l4 += d[-j - 1]\n        if l1 > m1:\n            m1 = l1\n        if l2 < m2:\n            m2 = l2\n        if l3 > p1:\n            p1 = l3\n        if l4 < p2:\n            p2 = l4\n        o1.append(m1)\n        o2.append(m2)\n        r1.append(p1)\n        r2.append(p2)\n        if l1 < 0:\n            l1 = 0\n        if l2 > 0:\n            l2 = 0\n        if l3 < 0:\n            l3 = 0\n        if l4 > 0:\n            l4 = 0\n    c = 0\n    for k in range(n - 1):\n        c = max(abs(o1[k] - r2[n - 2 - k]), abs(o2[k] - r1[n - 2 - k]), c)\n    print(c)", "T = int(input())\nfor tc in range(T):\n    N = int(input())\n    D = list(map(int, input().split()))\n    Omaxlist = []\n    Ominlist = []\n    Rmaxlist = []\n    Rminlist = []\n    Omax = D[0]\n    Omin = D[0]\n    Rmax = D[-1]\n    Rmin = D[-1]\n    Olocalmax = 0\n    Olocalmin = 0\n    Rlocalmax = 0\n    Rlocalmin = 0\n    for i in range(N):\n        Olocalmax += D[i]\n        Olocalmin += D[i]\n        Rlocalmax += D[-i - 1]\n        Rlocalmin += D[-i - 1]\n        if Olocalmax > Omax:\n            Omax = Olocalmax\n        if Olocalmin < Omin:\n            Omin = Olocalmin\n        if Rlocalmax > Rmax:\n            Rmax = Rlocalmax\n        if Rlocalmin < Rmin:\n            Rmin = Rlocalmin\n        Omaxlist.append(Omax)\n        Ominlist.append(Omin)\n        Rmaxlist.append(Rmax)\n        Rminlist.append(Rmin)\n        if Olocalmax < 0:\n            Olocalmax = 0\n        if Olocalmin > 0:\n            Olocalmin = 0\n        if Rlocalmax < 0:\n            Rlocalmax = 0\n        if Rlocalmin > 0:\n            Rlocalmin = 0\n    dif = 0\n    for j in range(N - 1):\n        dif = max(abs(Omaxlist[j] - Rminlist[N - 2 - j]), abs(Ominlist[j] - Rmaxlist[N - 2 - j]), dif)\n    print(dif)", "T = int(input())\nfor tc in range(T):\n    N = int(input())\n    D = list(map(int, input().split()))\n    Omaxlist = []\n    Ominlist = []\n    Rmaxlist = []\n    Rminlist = []\n    Omax = D[0]\n    Omin = D[0]\n    Rmax = D[-1]\n    Rmin = D[-1]\n    Olocalmax = 0\n    Olocalmin = 0\n    Rlocalmax = 0\n    Rlocalmin = 0\n    for i in range(N):\n        Olocalmax += D[i]\n        Olocalmin += D[i]\n        Rlocalmax += D[-i - 1]\n        Rlocalmin += D[-i - 1]\n        if Olocalmax > Omax:\n            Omax = Olocalmax\n        if Olocalmin < Omin:\n            Omin = Olocalmin\n        if Rlocalmax > Rmax:\n            Rmax = Rlocalmax\n        if Rlocalmin < Rmin:\n            Rmin = Rlocalmin\n        Omaxlist.append(Omax)\n        Ominlist.append(Omin)\n        Rmaxlist.append(Rmax)\n        Rminlist.append(Rmin)\n        if Olocalmax < 0:\n            Olocalmax = 0\n        if Olocalmin > 0:\n            Olocalmin = 0\n        if Rlocalmax < 0:\n            Rlocalmax = 0\n        if Rlocalmin > 0:\n            Rlocalmin = 0\n    dif = 0\n    for j in range(N - 1):\n        dif = max(abs(Omaxlist[j] - Rminlist[N - 2 - j]), abs(Ominlist[j] - Rmaxlist[N - 2 - j]), dif)\n    print(dif)", "T = int(input())\nfor tc in range(T):\n    N = int(input())\n    D = list(map(int, input().split()))\n    Omaxlist = []\n    Ominlist = []\n    Rmaxlist = []\n    Rminlist = []\n    Omax = D[0]\n    Omin = D[0]\n    Rmax = D[-1]\n    Rmin = D[-1]\n    Olocalmax = 0\n    Olocalmin = 0\n    Rlocalmax = 0\n    Rlocalmin = 0\n    for i in range(N):\n        Olocalmax += D[i]\n        Olocalmin += D[i]\n        Rlocalmax += D[-i - 1]\n        Rlocalmin += D[-i - 1]\n        if Olocalmax > Omax:\n            Omax = Olocalmax\n        if Olocalmin < Omin:\n            Omin = Olocalmin\n        if Rlocalmax > Rmax:\n            Rmax = Rlocalmax\n        if Rlocalmin < Rmin:\n            Rmin = Rlocalmin\n        Omaxlist.append(Omax)\n        Ominlist.append(Omin)\n        Rmaxlist.append(Rmax)\n        Rminlist.append(Rmin)\n        if Olocalmax < 0:\n            Olocalmax = 0\n        if Olocalmin > 0:\n            Olocalmin = 0\n        if Rlocalmax < 0:\n            Rlocalmax = 0\n        if Rlocalmin > 0:\n            Rlocalmin = 0\n    dif = 0\n    for j in range(N - 1):\n        dif = max(abs(Omaxlist[j] - Rminlist[N - 2 - j]), abs(Ominlist[j] - Rmaxlist[N - 2 - j]), dif)\n    print(dif)", "for _ in range(int(input())):\n    n = int(input())\n    my = [int(i) for i in input().split()]\n    leftmax = [my[0]]\n    rightmax = [1000000]\n    rightmin = [1000000]\n    leftmin = [my[0]]\n    total = my[0]\n    totmin = my[0]\n    for i in range(1, n):\n        leftmax.append(0)\n        rightmax.append(0)\n        leftmin.append(1000000)\n        rightmin.append(1000000)\n    for i in range(1, len(my)):\n        leftmax[i] = max(total + my[i], max(my[i], leftmax[i - 1]))\n        leftmin[i] = min(totmin + my[i], min(my[i], leftmin[i - 1]))\n        total = max(my[i], total + my[i])\n        totmin = min(my[i], totmin + my[i])\n    total = my[n - 1]\n    totmin = my[n - 1]\n    rightmin[n - 1] = my[n - 1]\n    rightmax[n - 1] = my[n - 1]\n    for i in range(n - 2, -1, -1):\n        rightmax[i] = max(total + my[i], max(my[i], rightmax[i + 1]))\n        rightmin[i] = min(totmin + my[i], min(my[i], rightmin[i + 1]))\n        total = max(my[i], total + my[i])\n        totmin = min(my[i], totmin + my[i])\n    ans = 0\n    for i in range(1, n):\n        ans = max(leftmax[i - 1] - rightmin[i], max(rightmax[i] - leftmin[i - 1], ans))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    my = [int(i) for i in input().split()]\n    leftmax = [my[0]]\n    rightmax = [1000000]\n    rightmin = [1000000]\n    leftmin = [my[0]]\n    total = my[0]\n    totmin = my[0]\n    for i in range(1, n):\n        leftmax.append(0)\n        rightmax.append(0)\n        leftmin.append(1000000)\n        rightmin.append(1000000)\n    for i in range(1, len(my)):\n        leftmax[i] = max(total + my[i], max(my[i], leftmax[i - 1]))\n        leftmin[i] = min(totmin + my[i], min(my[i], leftmin[i - 1]))\n        total = max(my[i], total + my[i])\n        totmin = min(my[i], totmin + my[i])\n    total = my[n - 1]\n    totmin = my[n - 1]\n    rightmin[n - 1] = my[n - 1]\n    rightmax[n - 1] = my[n - 1]\n    for i in range(n - 2, -1, -1):\n        rightmax[i] = max(total + my[i], max(my[i], rightmax[i + 1]))\n        rightmin[i] = min(totmin + my[i], min(my[i], rightmin[i + 1]))\n        total = max(my[i], total + my[i])\n        totmin = min(my[i], totmin + my[i])\n    ans = 0\n    for i in range(1, n):\n        ans = max(leftmax[i - 1] - rightmin[i], max(rightmax[i] - leftmin[i - 1], ans))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    my = [int(i) for i in input().split()]\n    leftmax = [my[0]]\n    rightmax = [1000000]\n    rightmin = [1000000]\n    leftmin = [my[0]]\n    total = my[0]\n    totmin = my[0]\n    for i in range(1, n):\n        leftmax.append(0)\n        rightmax.append(0)\n        leftmin.append(1000000)\n        rightmin.append(1000000)\n    for i in range(1, len(my)):\n        leftmax[i] = max(total + my[i], max(my[i], leftmax[i - 1]))\n        leftmin[i] = min(totmin + my[i], min(my[i], leftmin[i - 1]))\n        total = max(my[i], total + my[i])\n        totmin = min(my[i], totmin + my[i])\n    total = my[n - 1]\n    totmin = my[n - 1]\n    rightmin[n - 1] = my[n - 1]\n    rightmax[n - 1] = my[n - 1]\n    for i in range(n - 2, -1, -1):\n        rightmax[i] = max(total + my[i], max(my[i], rightmax[i + 1]))\n        rightmin[i] = min(totmin + my[i], min(my[i], rightmin[i + 1]))\n        total = max(my[i], total + my[i])\n        totmin = min(my[i], totmin + my[i])\n    ans = 0\n    for i in range(1, n):\n        ans = max(leftmax[i - 1] - rightmin[i], max(rightmax[i] - leftmin[i - 1], ans))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    my = [int(i) for i in input().split()]\n    leftmax = [my[0]]\n    rightmax = [1000000]\n    rightmin = [1000000]\n    leftmin = [my[0]]\n    total = my[0]\n    totmin = my[0]\n    for i in range(1, n):\n        leftmax.append(0)\n        rightmax.append(0)\n        leftmin.append(1000000)\n        rightmin.append(1000000)\n    for i in range(1, len(my)):\n        leftmax[i] = max(total + my[i], max(my[i], leftmax[i - 1]))\n        leftmin[i] = min(totmin + my[i], min(my[i], leftmin[i - 1]))\n        total = max(my[i], total + my[i])\n        totmin = min(my[i], totmin + my[i])\n    total = my[n - 1]\n    totmin = my[n - 1]\n    rightmin[n - 1] = my[n - 1]\n    rightmax[n - 1] = my[n - 1]\n    for i in range(n - 2, -1, -1):\n        rightmax[i] = max(total + my[i], max(my[i], rightmax[i + 1]))\n        rightmin[i] = min(totmin + my[i], min(my[i], rightmin[i + 1]))\n        total = max(my[i], total + my[i])\n        totmin = min(my[i], totmin + my[i])\n    ans = 0\n    for i in range(1, n):\n        ans = max(leftmax[i - 1] - rightmin[i], max(rightmax[i] - leftmin[i - 1], ans))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    my = [int(i) for i in input().split()]\n    leftmax = [my[0]]\n    rightmax = [1000000]\n    rightmin = [1000000]\n    leftmin = [my[0]]\n    total = my[0]\n    totmin = my[0]\n    for i in range(1, n):\n        leftmax.append(0)\n        rightmax.append(0)\n        leftmin.append(1000000)\n        rightmin.append(1000000)\n    for i in range(1, len(my)):\n        leftmax[i] = max(total + my[i], max(my[i], leftmax[i - 1]))\n        leftmin[i] = min(totmin + my[i], min(my[i], leftmin[i - 1]))\n        total = max(my[i], total + my[i])\n        totmin = min(my[i], totmin + my[i])\n    total = my[n - 1]\n    totmin = my[n - 1]\n    rightmin[n - 1] = my[n - 1]\n    rightmax[n - 1] = my[n - 1]\n    for i in range(n - 2, -1, -1):\n        rightmax[i] = max(total + my[i], max(my[i], rightmax[i + 1]))\n        rightmin[i] = min(totmin + my[i], min(my[i], rightmin[i + 1]))\n        total = max(my[i], total + my[i])\n        totmin = min(my[i], totmin + my[i])\n    ans = 0\n    for i in range(1, n):\n        ans = max(leftmax[i - 1] - rightmin[i], max(rightmax[i] - leftmin[i - 1], ans))\n    print(ans)", "def maxSubArray(nums):\n    n = len(nums)\n    dp = [float('-inf')] * n\n    for i in range(n):\n        dp[i] = max((dp[i - 1] if i > 0 else 0) + nums[i], nums[i])\n    return dp\n\ndef minSubArray(nums):\n    n = len(nums)\n    dp = [float('inf')] * n\n    for i in range(n):\n        dp[i] = min((dp[i - 1] if i > 0 else 0) + nums[i], nums[i])\n    return dp\n\ndef solve(arr):\n    n = len(arr)\n    max_from_left = maxSubArray(arr)\n    max_from_right = maxSubArray(arr[::-1])[::-1]\n    min_from_left = minSubArray(arr)\n    min_from_right = minSubArray(arr[::-1])[::-1]\n    max_diff = float('-inf')\n    for split in range(n - 1):\n        max_diff = max(max_diff, max_from_left[split] - min_from_right[split + 1])\n        max_diff = max(max_diff, max_from_right[split + 1] - min_from_left[split])\n    return max_diff\nfor T in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(arr))", "def maxSubArray(nums):\n    n = len(nums)\n    dp = [float('inf')] * n\n    for i in range(n):\n        dp[i] = max((dp[i - 1] if i > 0 else 0) + nums[i], nums[i])\n    return dp\n\ndef minSubArray(nums):\n    n = len(nums)\n    dp = [float('-inf')] * n\n    for i in range(n):\n        dp[i] = min((dp[i - 1] if i > 0 else 0) + nums[i], nums[i])\n    return dp\n\ndef solve(arr):\n    n = len(arr)\n    max_from_left = maxSubArray(arr)\n    max_from_right = maxSubArray(arr[::-1])[::-1]\n    min_from_left = minSubArray(arr)\n    min_from_right = minSubArray(arr[::-1])[::-1]\n    max_diff = float('-inf')\n    for split in range(n - 1):\n        max_diff = max(max_diff, max_from_left[split] - min_from_right[split + 1])\n        max_diff = max(max_diff, max_from_right[split + 1] - min_from_left[split])\n    return max_diff\nfor T in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(arr))", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    (HardLeftMin, HardLeftMax, SoftLeftMax, SoftLeftMin, HardRightMax, HardRightMin) = ([0] * N, [0] * N, [0] * N, [0] * N, [0] * N, [0] * N)\n    for i in range(N):\n        HardLeftMin[i] = min((HardLeftMin[i - 1] if i - 1 >= 0 else 0) + arr[i], arr[i])\n        HardLeftMax[i] = max((HardLeftMax[i - 1] if i - 1 >= 0 else 0) + arr[i], arr[i])\n        SoftLeftMax[i] = max(HardLeftMax[i], SoftLeftMax[i - 1] if i - 1 >= 0 else HardLeftMax[i])\n        SoftLeftMin[i] = min(HardLeftMin[i], SoftLeftMin[i - 1] if i - 1 >= 0 else HardLeftMin[i])\n    for i in range(N - 1, -1, -1):\n        HardRightMin[i] = min((HardRightMin[i + 1] if i + 1 < N else 0) + arr[i], arr[i])\n        HardRightMax[i] = max((HardRightMax[i + 1] if i + 1 < N else 0) + arr[i], arr[i])\n    ans = 0\n    for i in range(N):\n        if i != N - 1:\n            ans = max(ans, SoftLeftMax[i] - HardRightMin[i + 1])\n        if i != 0:\n            ans = max(ans, HardRightMax[i] - SoftLeftMin[i - 1])\n    print(ans)", "def findMax(x):\n    c = x[0]\n    for i in range(1, len(x)):\n        if c < 0:\n            c = 0\n        c += x[i]\n        if c < x[i - 1]:\n            x[i] = x[i - 1]\n        else:\n            x[i] = c\nfor _ in range(int(input())):\n    N = int(input())\n    d = list(map(int, input().split()))\n    min1 = d.copy()\n    min2 = d.copy()\n    min2.reverse()\n    for i in range(N):\n        min1[i] = -min1[i]\n        min2[i] = -min2[i]\n    max1 = d.copy()\n    max2 = d.copy()\n    max2.reverse()\n    findMax(min1)\n    findMax(min2)\n    findMax(max1)\n    findMax(max2)\n    ans = 0\n    for i in range(N - 1):\n        d1 = -min1[i] - max2[N - i - 2]\n        if d1 < 0:\n            d1 = -d1\n        if ans < d1:\n            ans = d1\n        d1 = max1[i] + min2[N - i - 2]\n        if d1 < 0:\n            d1 = -d1\n        if ans < d1:\n            ans = d1\n    print(ans)", "def lrimax(n, l):\n    dplri = [0] * n\n    dplri[0] = l[0]\n    for i in range(1, n):\n        dplri[i] = max(dplri[i - 1] + l[i], l[i])\n    for i in range(1, n):\n        dplri[i] = max(dplri[i - 1], dplri[i])\n    return dplri\n\ndef lrimin(n, l):\n    dp = [999999999999999999999999999] * n\n    dp[0] = l[0]\n    for i in range(1, n):\n        dp[i] = min(l[i], l[i] + dp[i - 1])\n    for i in range(1, n):\n        dp[i] = min(dp[i - 1], dp[i])\n    return dp\n\ndef rlimax(n, l):\n    dp = [0] * n\n    dp[n - 1] = l[n - 1]\n    for i in range(n - 2, -1, -1):\n        dp[i] = max(dp[i + 1] + l[i], l[i])\n    for i in range(n - 2, -1, -1):\n        dp[i] = max(dp[i], dp[i + 1])\n    return dp\n\ndef rlimin(n, l):\n    dp = [9999999999999999999999999999] * n\n    dp[n - 1] = l[n - 1]\n    for i in range(n - 2, -1, -1):\n        dp[i] = min(dp[i + 1] + l[i], l[i])\n    for i in range(n - 2, -1, -1):\n        dp[i] = min(dp[i], dp[i + 1])\n    return dp\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    lrmax = lrimax(n, l)\n    rlmin = rlimin(n, l)\n    lrmin = lrimin(n, l)\n    rlmax = rlimax(n, l)\n    maxi = -9999999999999999999999999999999999999999\n    for i in range(n - 1):\n        maxi = max(abs(lrmax[i] - rlmin[i + 1]), abs(rlmax[i + 1] - lrmin[i]), maxi)\n    print(maxi)", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    lmax = [0 for i in range(n)]\n    lmin = [0 for i in range(n)]\n    rmax = [0 for i in range(n)]\n    rmin = [0 for i in range(n)]\n    (c1, c2) = (l[0], l[0])\n    (m1, m2) = (l[0], l[0])\n    (lmax[0], lmin[0]) = (l[0], l[0])\n    (rmax[-1], rmin[-1]) = (l[-1], l[-1])\n    for i in range(1, n):\n        c1 += l[i]\n        c2 += l[i]\n        c1 = max(c1, l[i])\n        c2 = min(c2, l[i])\n        m1 = max(m1, c1)\n        m2 = min(m2, c2)\n        lmax[i] = m1\n        lmin[i] = m2\n    (c1, c2) = (l[-1], l[-1])\n    (m1, m2) = (l[-1], l[-1])\n    for i in range(n - 2, -1, -1):\n        c1 += l[i]\n        c2 += l[i]\n        c1 = max(c1, l[i])\n        c2 = min(c2, l[i])\n        m1 = max(m1, c1)\n        m2 = min(m2, c2)\n        rmax[i] = m1\n        rmin[i] = m2\n    m = -sys.maxsize\n    for i in range(1, n):\n        m = max(m, abs(rmax[i] - lmin[i - 1]), abs(rmin[i] - lmax[i - 1]))\n    print(m)", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    (HardLeftMin, HardLeftMax, SoftLeftMax, SoftLeftMin, HardRightMax, HardRightMin) = ([0] * N, [0] * N, [0] * N, [0] * N, [0] * N, [0] * N)\n    for i in range(N):\n        HardLeftMin[i] = min((HardLeftMin[i - 1] if i - 1 >= 0 else 0) + arr[i], arr[i])\n        HardLeftMax[i] = max((HardLeftMax[i - 1] if i - 1 >= 0 else 0) + arr[i], arr[i])\n        SoftLeftMax[i] = max(HardLeftMax[i], SoftLeftMax[i - 1] if i - 1 >= 0 else HardLeftMax[i])\n        SoftLeftMin[i] = min(HardLeftMin[i], SoftLeftMin[i - 1] if i - 1 >= 0 else HardLeftMin[i])\n    for i in range(N - 1, -1, -1):\n        HardRightMin[i] = min((HardRightMin[i + 1] if i + 1 < N else 0) + arr[i], arr[i])\n        HardRightMax[i] = max((HardRightMax[i + 1] if i + 1 < N else 0) + arr[i], arr[i])\n    ans = 0\n    for i in range(N):\n        if i != N - 1:\n            ans = max(ans, SoftLeftMax[i] - HardRightMin[i + 1])\n        if i != 0:\n            ans = max(ans, HardRightMax[i] - SoftLeftMin[i - 1])\n    print(ans)", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    lmax = [0 for i in range(n)]\n    lmin = [0 for i in range(n)]\n    rmax = [0 for i in range(n)]\n    rmin = [0 for i in range(n)]\n    (c1, c2) = (l[0], l[0])\n    (m1, m2) = (l[0], l[0])\n    (lmax[0], lmin[0]) = (l[0], l[0])\n    (rmax[-1], rmin[-1]) = (l[-1], l[-1])\n    for i in range(1, n):\n        c1 += l[i]\n        c2 += l[i]\n        c1 = max(c1, l[i])\n        c2 = min(c2, l[i])\n        m1 = max(m1, c1)\n        m2 = min(m2, c2)\n        lmax[i] = m1\n        lmin[i] = m2\n    (c1, c2) = (l[-1], l[-1])\n    (m1, m2) = (l[-1], l[-1])\n    for i in range(n - 2, -1, -1):\n        c1 += l[i]\n        c2 += l[i]\n        c1 = max(c1, l[i])\n        c2 = min(c2, l[i])\n        m1 = max(m1, c1)\n        m2 = min(m2, c2)\n        rmax[i] = m1\n        rmin[i] = m2\n    m = -sys.maxsize\n    for i in range(1, n):\n        m = max(m, abs(rmax[i] - lmin[i - 1]), abs(rmin[i] - lmax[i - 1]))\n    print(m)", "T = int(input())\noutput = []\n(srmax, hlmin, hrmax) = ({}, {}, {})\n(slmax, hrmin, hlmax) = ({}, {}, {})\n\ndef hard_left_min(array, j):\n    if j == 0:\n        tmp = array[0]\n        hlmin[j] = tmp\n        return tmp\n    elif j in hlmin:\n        return hlmin[j]\n    else:\n        tmp = min(array[j], hard_left_min(array, j - 1) + array[j])\n        hlmin[j] = tmp\n        return tmp\n\ndef soft_right_max(array, j):\n    N = len(array)\n    if j == N - 1:\n        tmp = array[N - 1]\n        srmax[j] = tmp\n        return tmp\n    elif j in srmax:\n        return srmax[j]\n    else:\n        tmp = max(hard_right_max(array, j), soft_right_max(array, j + 1))\n        srmax[j] = tmp\n        return tmp\n\ndef hard_right_max(array, j):\n    N = len(array)\n    if j == N - 1:\n        tmp = array[N - 1]\n        hrmax[j] = tmp\n        return tmp\n    elif j in hrmax:\n        return hrmax[j]\n    else:\n        tmp = max(array[j], array[j] + hard_right_max(array, j + 1))\n        hrmax[j] = tmp\n        return tmp\n\ndef hard_right_min(array, j):\n    N = len(array)\n    if j == N - 1:\n        tmp = array[j]\n        hrmin[j] = tmp\n        return tmp\n    elif j in hrmin:\n        return hrmin[j]\n    else:\n        tmp = min(array[j], array[j] + hard_right_min(array, j + 1))\n        hrmin[j] = tmp\n        return tmp\n\ndef soft_left_max(array, j):\n    if j == 0:\n        tmp = array[0]\n        slmax[j] = tmp\n        return tmp\n    elif j in slmax:\n        return slmax[j]\n    else:\n        tmp = max(hard_left_max(array, j), soft_left_max(array, j - 1))\n        slmax[j] = tmp\n        return tmp\n\ndef hard_left_max(array, j):\n    if j == 0:\n        tmp = array[0]\n        hlmax[j] = tmp\n        return tmp\n    elif j in hlmax:\n        return hlmax[j]\n    else:\n        tmp = max(array[j], hard_left_max(array, j - 1) + array[j])\n        hlmax[j] = tmp\n        return tmp\nfor _ in range(T):\n    N = int(input())\n    D = list(map(int, input().split()))\n    for j in range(N):\n        hard_left_min(D, j)\n    for j in range(N - 1, -1, -1):\n        hard_right_max(D, j)\n    for j in range(N - 1, -1, -1):\n        soft_right_max(D, j)\n    for j in range(N - 1, -1, -1):\n        hard_right_min(D, j)\n    for j in range(N):\n        hard_left_max(D, j)\n    for j in range(N):\n        soft_left_max(D, j)\n    max_delish = -1\n    for j in range(N):\n        if j < N - 1:\n            a1 = srmax[j + 1]\n            b1 = hlmin[j]\n            a2 = slmax[j]\n            b2 = hrmin[j + 1]\n            max_delish = max(max_delish, srmax[j + 1] - hlmin[j], slmax[j] - hrmin[j + 1])\n    output.append(max_delish)\n    (srmax, hlmin, hrmax) = ({}, {}, {})\n    (slmax, hrmin, hlmax) = ({}, {}, {})\nfor o in output:\n    print(o)", "T = int(input())\noutput = []\n(srmax, hlmin, hrmax) = ({}, {}, {})\n(slmax, hrmin, hlmax) = ({}, {}, {})\n\ndef hard_left_min(array, j):\n    if j == 0:\n        return array[0]\n    elif j in hlmin:\n        return hlmin[j]\n    else:\n        tmp = min(array[j], hard_left_min(array, j - 1) + array[j])\n        hlmin[j] = tmp\n        return tmp\n\ndef soft_right_max(array, j):\n    N = len(array)\n    if j == N - 1:\n        return array[N - 1]\n    elif j in srmax:\n        return srmax[j]\n    else:\n        tmp = max(hard_right_max(array, j), soft_right_max(array, j + 1))\n        srmax[j] = tmp\n        return tmp\n\ndef hard_right_max(array, j):\n    N = len(array)\n    if j == N - 1:\n        return array[N - 1]\n    elif j in hrmax:\n        return hrmax[j]\n    else:\n        tmp = max(array[j], array[j] + hard_right_max(array, j + 1))\n        hrmax[j] = tmp\n        return tmp\n\ndef hard_right_min(array, j):\n    N = len(array)\n    if j == N - 1:\n        return array[j]\n    elif j in hrmin:\n        return hrmin[j]\n    else:\n        tmp = min(array[j], array[j] + hard_right_min(array, j + 1))\n        hrmin[j] = tmp\n        return tmp\n\ndef soft_left_max(array, j):\n    if j == 0:\n        return array[0]\n    elif j in slmax:\n        return slmax[j]\n    else:\n        tmp = max(hard_left_max(array, j), soft_left_max(array, j - 1))\n        slmax[j] = tmp\n        return tmp\n\ndef hard_left_max(array, j):\n    if j == 0:\n        return array[0]\n    elif j in hlmax:\n        return hlmax[j]\n    else:\n        tmp = max(array[j], hard_left_max(array, j - 1) + array[j])\n        hlmax[j] = tmp\n        return tmp\nfor _ in range(T):\n    N = int(input())\n    D = list(map(int, input().split()))\n    for j in range(N):\n        hard_left_min(D, j)\n    for j in range(N - 1, -1, -1):\n        hard_right_max(D, j)\n    for j in range(N - 1, -1, -1):\n        soft_right_max(D, j)\n    for j in range(N - 1, -1, -1):\n        hard_right_min(D, j)\n    for j in range(N):\n        hard_left_max(D, j)\n    for j in range(N):\n        soft_left_max(D, j)\n    max_delish = -1\n    for j in range(N):\n        if j < N - 1:\n            max_delish = max(max_delish, soft_right_max(D, j + 1) - hard_left_min(D, j), soft_left_max(D, j) - hard_right_min(D, j + 1))\n    output.append(max_delish)\n    (srmax, hlmin, hrmax) = ({}, {}, {})\n    (slmax, hrmin, hlmax) = ({}, {}, {})\nfor o in output:\n    print(o)", "def lrimax(n, l):\n    dplri = [0] * n\n    dplri[0] = l[0]\n    for i in range(1, n):\n        dplri[i] = max(dplri[i - 1] + l[i], l[i])\n    for i in range(1, n):\n        dplri[i] = max(dplri[i - 1], dplri[i])\n    return dplri\n\ndef lrimin(n, l):\n    dp = [999999999999999999999999999] * n\n    dp[0] = l[0]\n    for i in range(1, n):\n        dp[i] = min(l[i], l[i] + dp[i - 1])\n    for i in range(1, n):\n        dp[i] = min(dp[i - 1], dp[i])\n    return dp\n\ndef rlimax(n, l):\n    dp = [0] * n\n    dp[n - 1] = l[n - 1]\n    for i in range(n - 2, -1, -1):\n        dp[i] = max(dp[i + 1] + l[i], l[i])\n    for i in range(n - 2, -1, -1):\n        dp[i] = max(dp[i], dp[i + 1])\n    return dp\n\ndef rlimin(n, l):\n    dp = [9999999999999999999999999999] * n\n    dp[n - 1] = l[n - 1]\n    for i in range(n - 2, -1, -1):\n        dp[i] = min(dp[i + 1] + l[i], l[i])\n    for i in range(n - 2, -1, -1):\n        dp[i] = min(dp[i], dp[i + 1])\n    return dp\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    lrmax = lrimax(n, l)\n    rlmin = rlimin(n, l)\n    lrmin = lrimin(n, l)\n    rlmax = rlimax(n, l)\n    maxi = -9999999999999999999999999999999999999999\n    for i in range(n - 1):\n        maxi = max(abs(lrmax[i] - rlmin[i + 1]), abs(rlmax[i + 1] - lrmin[i]), maxi)\n    print(maxi)", "def solve(a, n):\n    prefix_max = [0] * n\n    prefix_min = [0] * n\n    suffix_max = [0] * n\n    suffix_min = [0] * n\n    for i in range(n):\n        if i == 0:\n            prefix_max[i] = a[i]\n            prefix_min[i] = a[i]\n            suffix_max[n - i - 1] = a[n - i - 1]\n            suffix_min[n - i - 1] = a[n - i - 1]\n        else:\n            prefix_max[i] = max(prefix_max[i - 1], 0) + a[i]\n            prefix_min[i] = min(prefix_min[i - 1], 0) + a[i]\n            suffix_max[n - i - 1] = max(suffix_max[n - i], 0) + a[n - i - 1]\n            suffix_min[n - i - 1] = min(suffix_min[n - i], 0) + a[n - i - 1]\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, max(abs(prefix_max[i] - suffix_min[i + 1]), abs(prefix_min[i] - suffix_max[i + 1])))\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    a = tuple(map(int, input().split()))\n    result = solve(a, n)\n    print(result)", "def solve(a, n):\n    prefix_max = [0] * n\n    prefix_min = [0] * n\n    suffix_max = [0] * n\n    suffix_min = [0] * n\n    for i in range(n):\n        if i == 0:\n            prefix_max[i] = a[i]\n            prefix_min[i] = a[i]\n            suffix_max[n - i - 1] = a[n - i - 1]\n            suffix_min[n - i - 1] = a[n - i - 1]\n        else:\n            prefix_max[i] = max(prefix_max[i - 1], 0) + a[i]\n            prefix_min[i] = min(prefix_min[i - 1], 0) + a[i]\n            suffix_max[n - i - 1] = max(suffix_max[n - i], 0) + a[n - i - 1]\n            suffix_min[n - i - 1] = min(suffix_min[n - i], 0) + a[n - i - 1]\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, max(abs(prefix_max[i] - suffix_min[i + 1]), abs(prefix_min[i] - suffix_max[i + 1])))\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    a = tuple(map(int, input().split()))\n    result = solve(a, n)\n    print(result)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    l = list(map(int, input().split()))\n    premin = [0] * n\n    premax = [0] * n\n    sufmin = [0] * n\n    sufmax = [0] * n\n    premin[0] = premax[0] = l[0]\n    sufmin[-1] = sufmax[-1] = l[-1]\n    for i in range(1, n):\n        premin[i] = min(premin[i - 1], 0) + l[i]\n        premax[i] = max(premax[i - 1], 0) + l[i]\n    for i in range(n - 2, -1, -1):\n        sufmin[i] = min(sufmin[i + 1], 0) + l[i]\n        sufmax[i] = max(sufmax[i + 1], 0) + l[i]\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, abs(premax[i] - sufmin[i + 1]))\n        ans = max(ans, abs(premin[i] - sufmax[i + 1]))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    Ar = A[::-1]\n    dpmax = [A[i] for i in range(n)]\n    dpmin = [Ar[i] for i in range(n)]\n    for i in range(1, n):\n        dpmax[i] = max(A[i], dpmax[i - 1] + A[i])\n    for i in range(1, n):\n        dpmin[i] = min(Ar[i], dpmin[i - 1] + Ar[i])\n    dpmin = dpmin[::-1]\n    for i in range(1, n):\n        dpmax[i] = max(dpmax[i - 1], dpmax[i])\n    ans = dpmax[0] - dpmin[1]\n    for i in range(n - 1):\n        ans = max(ans, dpmax[i] - dpmin[i + 1])\n    dpmax = [Ar[i] for i in range(n)]\n    dpmin = [A[i] for i in range(n)]\n    for i in range(1, n):\n        dpmax[i] = max(Ar[i], dpmax[i - 1] + Ar[i])\n    dpmax = dpmax[::-1]\n    for i in range(1, n):\n        dpmin[i] = min(A[i], dpmin[i - 1] + A[i])\n    for i in range(1, n):\n        dpmin[i] = min(dpmin[i - 1], dpmin[i])\n    for i in range(n - 1):\n        ans = max(ans, dpmax[i + 1] - dpmin[i])\n    print(ans)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    hardLeftMin = []\n    for i in range(n):\n        if i == 0:\n            hardLeftMin.append(arr[i])\n        else:\n            hardLeftMin.append(min(hardLeftMin[-1] + arr[i], arr[i]))\n    hardLeftMax = []\n    for i in range(n):\n        if i == 0:\n            hardLeftMax.append(arr[i])\n        else:\n            hardLeftMax.append(max(hardLeftMax[-1] + arr[i], arr[i]))\n    softLeftMin = []\n    for i in range(n):\n        if i == 0:\n            softLeftMin.append(hardLeftMin[i])\n        else:\n            softLeftMin.append(min(softLeftMin[-1], hardLeftMin[i]))\n    softLeftMax = []\n    for i in range(n):\n        if i == 0:\n            softLeftMax.append(hardLeftMax[i])\n        else:\n            softLeftMax.append(max(softLeftMax[-1], hardLeftMax[i]))\n    hardRightMin = []\n    for i in range(n - 1, -1, -1):\n        if i == n - 1:\n            hardRightMin.append(arr[i])\n        else:\n            hardRightMin.append(min(hardRightMin[-1] + arr[i], arr[i]))\n    hardRightMin = list(reversed(hardRightMin))\n    hardRightMax = []\n    for i in range(n - 1, -1, -1):\n        if i == n - 1:\n            hardRightMax.append(arr[i])\n        else:\n            hardRightMax.append(max(hardRightMax[-1] + arr[i], arr[i]))\n    hardRightMax = list(reversed(hardRightMax))\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, softLeftMax[i] - hardRightMin[i + 1])\n        ans = max(ans, hardRightMax[i + 1] - softLeftMin[i])\n    print(ans)\nfor t in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    premin = [0] * n\n    premax = [0] * n\n    sufmin = [0] * n\n    sufmax = [0] * n\n    premin[0] = premax[0] = l[0]\n    sufmin[-1] = sufmax[-1] = l[-1]\n    for i in range(1, n):\n        premin[i] = min(premin[i - 1], 0) + l[i]\n        premax[i] = max(premax[i - 1], 0) + l[i]\n    for i in range(n - 2, -1, -1):\n        sufmin[i] = min(sufmin[i + 1], 0) + l[i]\n        sufmax[i] = max(sufmax[i + 1], 0) + l[i]\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, abs(premax[i] - sufmin[i + 1]))\n        ans = max(ans, abs(premin[i] - sufmax[i + 1]))\n    print(ans)", "T = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    D = [int(i) for i in input().split()]\n    lmax = [D[0]] * N\n    lmin = [D[0]] * N\n    rmax = [D[-1]] * N\n    rmin = [D[-1]] * N\n    for i in range(1, N):\n        lmin[i] = min(lmin[i - 1] + D[i], D[i])\n        lmax[i] = max(lmax[i - 1] + D[i], D[i])\n    for i in range(N - 2, -1, -1):\n        rmin[i] = min(rmin[i + 1] + D[i], D[i])\n        rmax[i] = max(rmax[i + 1] + D[i], D[i])\n    s = 0\n    for i in range(N - 1):\n        s = max(lmax[i] - rmin[i + 1], rmax[i + 1] - lmin[i], s)\n    ans.append(s)\nfor i in ans:\n    print(i)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    min_p = [a[0]] * n\n    max_p = [a[0]] * n\n    for i in range(1, n):\n        min_p[i] = min(min_p[i - 1] + a[i], a[i])\n        max_p[i] = max(max_p[i - 1] + a[i], a[i])\n    min_s = [a[-1]] * n\n    max_s = [a[-1]] * n\n    for i in range(n - 2, -1, -1):\n        min_s[i] = min(min_s[i + 1] + a[i], a[i])\n        max_s[i] = max(max_s[i + 1] + a[i], a[i])\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, max_p[i] - min_s[i + 1], max_s[i + 1] - min_p[i])\n    print(ans)", "def calc(arr, n):\n    ans = -10 ** 20\n    dp = [0] * n\n    dp[0] = arr[0]\n    dp2 = [10 ** 20] * n\n    dp2[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        dp[i] = max(arr[i], arr[i] + dp[i - 1])\n    for i in range(n - 2, -1, -1):\n        dp2[i] = min(arr[i], arr[i] + dp2[i + 1])\n    maxPref = [0] * n\n    minSuff = [0] * n\n    maxPref[0] = dp[0]\n    minSuff[n - 1] = dp2[n - 1]\n    for i in range(1, n):\n        maxPref[i] = max(dp[i], maxPref[i - 1])\n    for i in range(n - 2, -1, -1):\n        minSuff[i] = min(dp2[i], minSuff[i + 1])\n    for i in range(n - 1):\n        ans = max(ans, abs(maxPref[i] - minSuff[i + 1]))\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = max(calc(arr, n), calc(arr[::-1], n))\n    print(res)", "def solve(arr, n):\n    ans = -10 ** 20\n    dp = [0] * n\n    dp[0] = arr[0]\n    dp2 = [10 ** 20] * n\n    dp2[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        dp[i] = max(arr[i], dp[i - 1] + arr[i])\n    for i in range(n - 2, -1, -1):\n        dp2[i] = min(arr[i], dp2[i + 1] + arr[i])\n    maxpref = [0] * n\n    minsuff = [0] * n\n    maxpref[0] = dp[0]\n    minsuff[n - 1] = dp2[n - 1]\n    for i in range(1, n):\n        maxpref[i] = max(maxpref[i - 1], dp[i])\n    for i in range(n - 2, -1, -1):\n        minsuff[i] = min(minsuff[i + 1], dp2[i])\n    for i in range(n - 1):\n        ans = max(ans, abs(maxpref[i] - minsuff[i + 1]))\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    print(max(solve(arr, n), solve(arr[::-1], n)))", "def kadane(a):\n    b = [a[0]]\n    b1 = [a[0]]\n    cs = a[0]\n    cs1 = a[0]\n    for i in range(1, len(a)):\n        cs = max(a[i], cs + a[i])\n        cs1 = min(a[i], cs1 + a[i])\n        b.append(max(cs, b[-1]))\n        b1.append(min(cs1, b1[-1]))\n    return (b, b1)\n\ndef kadane1(a):\n    (b, b1) = ([0] * len(a), [0] * len(a))\n    b[-1] = b1[-1] = a[-1]\n    cs = cs1 = a[-1]\n    for i in range(len(a) - 2, -1, -1):\n        cs = min(a[i], cs + a[i])\n        cs1 = max(a[i], cs1 + a[i])\n        b[i] = min(cs, b[i + 1])\n        b1[i] = max(cs1, b[i + 1])\n    return (b, b1)\nfor _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    (x, y) = kadane(a)\n    (z, w) = kadane1(a)\n    mx = 0\n    for i in range(n - 1):\n        mx = max(mx, abs(x[i] - z[i + 1]), abs(y[i] - w[i + 1]))\n    print(mx)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp1 = [0] * n\n    dp2 = [0] * n\n    dp3 = [0] * n\n    dp4 = [0] * n\n    cs = a[0]\n    gs = a[0]\n    dp1[0] = cs\n    for i in range(1, n):\n        cs = max(a[i], cs + a[i])\n        gs = max(cs, gs)\n        dp1[i] = gs\n    cs = gs = a[-1]\n    dp2[-1] = cs\n    for i in range(n - 2, -1, -1):\n        cs = max(a[i], cs + a[i])\n        gs = max(cs, gs)\n        dp2[i] = gs\n    cs = gs = a[0]\n    dp3[0] = cs\n    for i in range(1, n):\n        cs = min(a[i], cs + a[i])\n        gs = min(cs, gs)\n        dp3[i] = gs\n    cs = gs = a[-1]\n    dp4[-1] = cs\n    for i in range(n - 2, -1, -1):\n        cs = min(a[i], cs + a[i])\n        gs = min(cs, gs)\n        dp4[i] = gs\n    mx = 0\n    for i in range(n - 1):\n        mx = max(mx, abs(dp1[i] - dp4[i + 1]), abs(dp2[i + 1] - dp3[i]))\n    print(mx)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_p = [a[0]] * n\n    max_p = [a[0]] * n\n    for i in range(1, n):\n        min_p[i] = min(min_p[i - 1] + a[i], a[i])\n        max_p[i] = max(max_p[i - 1] + a[i], a[i])\n    min_s = [a[-1]] * n\n    max_s = [a[-1]] * n\n    for i in range(n - 2, -1, -1):\n        min_s[i] = min(min_s[i + 1] + a[i], a[i])\n        max_s[i] = max(max_s[i + 1] + a[i], a[i])\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, max_s[i + 1] - min_p[i], max_p[i] - min_s[i + 1])\n    print(ans)", "def leftMin(a, n):\n    r = []\n    minSum = a[0]\n    curSum = 0\n    i = 0\n    while i < n - 1:\n        if curSum >= 0:\n            curSum = a[i]\n        else:\n            curSum += a[i]\n        if minSum > curSum:\n            minSum = curSum\n        r.append(minSum)\n        i += 1\n    return r\n\ndef rightMin(a, n):\n    r = []\n    minSum = a[-1]\n    curSum = 0\n    i = n - 1\n    while i > 0:\n        if curSum >= 0:\n            curSum = a[i]\n        else:\n            curSum += a[i]\n        if minSum > curSum:\n            minSum = curSum\n        r.insert(0, minSum)\n        i -= 1\n    return r\n\ndef leftMax(a, n):\n    r = []\n    maxSum = a[0]\n    curSum = 0\n    i = 0\n    while i < n - 1:\n        if curSum <= 0:\n            curSum = 0\n        curSum += a[i]\n        if maxSum < curSum:\n            maxSum = curSum\n        r.append(maxSum)\n        i += 1\n    return r\n\ndef rightMax(a, n):\n    r = []\n    maxSum = a[-1]\n    curSum = 0\n    i = n - 1\n    while i > 0:\n        if curSum <= 0:\n            curSum = 0\n        curSum += a[i]\n        if maxSum < curSum:\n            maxSum = curSum\n        r.insert(0, maxSum)\n        i -= 1\n    return r\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    leftMinSeq = leftMin(a, n)\n    leftMaxSeq = leftMax(a, n)\n    rightMinSeq = rightMin(a, n)\n    rightMaxSeq = rightMax(a, n)\n    ans = [abs(leftMaxSeq[i] - rightMinSeq[i]) for i in range(n - 1)]\n    ans.extend([abs(leftMinSeq[i] - rightMaxSeq[i]) for i in range(n - 1)])\n    print(max(ans))", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    min_p = [a[0]] * n\n    max_p = [a[0]] * n\n    for i in range(1, n):\n        min_p[i] = min(min_p[i - 1] + a[i], a[i])\n        max_p[i] = max(max_p[i - 1] + a[i], a[i])\n    min_s = [a[-1]] * n\n    max_s = [a[-1]] * n\n    for i in range(n - 2, -1, -1):\n        min_s[i] = min(min_s[i + 1] + a[i], a[i])\n        max_s[i] = max(max_s[i + 1] + a[i], a[i])\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, max_p[i] - min_s[i + 1], max_s[i + 1] - min_p[i])\n    print(ans)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    min_p = [a[0]] * n\n    max_p = [a[0]] * n\n    for i in range(1, n):\n        min_p[i] = min(min_p[i - 1] + a[i], a[i])\n        max_p[i] = max(max_p[i - 1] + a[i], a[i])\n    min_s = [a[-1]] * n\n    max_s = [a[-1]] * n\n    for i in range(n - 2, -1, -1):\n        min_s[i] = min(min_s[i + 1] + a[i], a[i])\n        max_s[i] = max(max_s[i + 1] + a[i], a[i])\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, max_p[i] - min_s[i + 1], max_s[i + 1] - min_p[i])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    min_p = [a[0]] * n\n    max_p = [a[0]] * n\n    for i in range(1, n):\n        min_p[i] = min(min_p[i - 1] + a[i], a[i])\n        max_p[i] = max(max_p[i - 1] + a[i], a[i])\n    min_s = [a[-1]] * n\n    max_s = [a[-1]] * n\n    for i in range(n - 2, -1, -1):\n        min_s[i] = min(min_s[i + 1] + a[i], a[i])\n        max_s[i] = max(max_s[i + 1] + a[i], a[i])\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, max_p[i] - min_s[i + 1], max_s[i + 1] - min_p[i])\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (lmax, lmin, rmax, rmin) = ([0] * n, [0] * n, [0] * n, [0] * n)\n    lmax[0] = l[0]\n    lmin[0] = l[0]\n    rmax[-1] = l[-1]\n    rmin[-1] = l[-1]\n    for i in range(1, len(l)):\n        lmax[i] = max(lmax[i - 1] + l[i], l[i])\n        lmin[i] = min(lmin[i - 1] + l[i], l[i])\n    for i in range(n - 2, -1, -1):\n        rmax[i] = max(rmax[i + 1] + l[i], l[i])\n        rmin[i] = min(rmin[i + 1] + l[i], l[i])\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, max(abs(rmax[i + 1] - lmin[i]), abs(rmin[i + 1] - lmax[i])))\n    print(ans)", "class node:\n\n    def __init__(self, size, elements):\n        self.size = size\n        self.elements = elements\n\ndef solve(inputs, size):\n    maxr = [0] * size\n    maxl = [0] * size\n    minr = [0] * size\n    minl = [0] * size\n    maxl[0] = minl[0] = inputs[0]\n    maxr[size - 1] = minr[size - 1] = inputs[size - 1]\n    for i in range(1, size):\n        maxl[i] = max(maxl[i - 1] + inputs[i], inputs[i])\n        minl[i] = min(minl[i - 1] + inputs[i], inputs[i])\n    for i in range(size - 2, -1, -1):\n        maxr[i] = max(maxr[i + 1] + inputs[i], inputs[i])\n        minr[i] = min(minr[i + 1] + inputs[i], inputs[i])\n    result = []\n    for i in range(size - 1):\n        result.append(abs(maxl[i] - minr[i + 1]))\n        result.append(abs(minl[i] - maxr[i + 1]))\n    return max(result)\nt = int(input())\ninputs = []\nfor i in range(t):\n    inputs.append(node(int(input()), list(map(int, input().split()))))\nfor i in inputs:\n    print(solve(i.elements, i.size))", "class node:\n\n    def __init__(self, size, elements):\n        self.size = size\n        self.elements = elements\n\ndef solve(inputs, size):\n    maxr = [0] * size\n    maxl = [0] * size\n    minr = [0] * size\n    minl = [0] * size\n    maxl[0] = minl[0] = inputs[0]\n    maxr[size - 1] = minr[size - 1] = inputs[size - 1]\n    for i in range(1, size):\n        maxl[i] = max(maxl[i - 1] + inputs[i], inputs[i])\n        minl[i] = min(minl[i - 1] + inputs[i], inputs[i])\n    for i in range(size - 2, -1, -1):\n        maxr[i] = max(maxr[i + 1] + inputs[i], inputs[i])\n        minr[i] = min(minr[i + 1] + inputs[i], inputs[i])\n    result = []\n    for i in range(size - 1):\n        result.append(abs(maxl[i] - minr[i + 1]))\n        result.append(abs(minl[i] - maxr[i + 1]))\n    return max(result)\nt = int(input())\ninputs = []\nfor i in range(t):\n    inputs.append(node(int(input()), list(map(int, input().split()))))\nfor i in inputs:\n    print(solve(i.elements, i.size))", "for _ in range(int(input())):\n    n = int(input())\n    delish = list(map(int, input().split()))\n    (r_max, r_min) = ([0] * n, [0] * n)\n    (l_max, l_min) = ([0] * n, [0] * n)\n    (all_max, all_min, cur_max, cur_min) = (-10000000000, 10000000000, 0, 10000000000)\n    (all_maxb, all_minb, cur_maxb, cur_minb) = (-10000000000, 10000000000, 0, 10000000000)\n    for i in range(n):\n        cur_max += delish[i]\n        all_max = max(all_max, cur_max)\n        if cur_max < 0:\n            cur_max = 0\n        r_max[i] = all_max\n        if cur_min > 0:\n            cur_min = delish[i]\n        else:\n            cur_min += delish[i]\n        all_min = min(cur_min, all_min)\n        r_min[i] = all_min\n        cur_maxb += delish[n - i - 1]\n        all_maxb = max(all_maxb, cur_maxb)\n        if cur_maxb < 0:\n            cur_maxb = 0\n        l_max[n - i - 1] = all_maxb\n        if cur_minb > 0:\n            cur_minb = delish[n - i - 1]\n        else:\n            cur_minb += delish[n - i - 1]\n        all_minb = min(cur_minb, all_minb)\n        l_min[n - i - 1] = all_minb\n    print(max((max(abs(r_max[j] - l_min[j + 1]), abs(r_min[j] - l_max[j + 1])) for j in range(n - 1))))", "import math\n\ndef maxsumsub(l):\n    ans = []\n    mx_1 = -1 * math.inf\n    mx_2 = 0\n    for i in range(len(l)):\n        mx_2 += l[i]\n        if mx_1 < mx_2:\n            mx_1 = mx_2\n        if mx_2 < 0:\n            mx_2 = 0\n        ans.append(mx_1)\n    return ans\n\ndef minsumsub(l):\n    ans = []\n    mi_1 = math.inf\n    mi_2 = 0\n    for i in range(len(l)):\n        mi_2 += l[i]\n        if mi_1 > mi_2:\n            mi_1 = mi_2\n        if mi_2 > 0:\n            mi_2 = 0\n        ans.append(mi_1)\n    return ans\n\ndef maxsumsubrev(l):\n    ans = []\n    mx_1 = -1 * math.inf\n    mx_2 = 0\n    for i in range(len(l) - 1, -1, -1):\n        mx_2 += l[i]\n        if mx_1 < mx_2:\n            mx_1 = mx_2\n        if mx_2 < 0:\n            mx_2 = 0\n        ans.insert(0, mx_1)\n    return ans\n\ndef minsumsubrev(l):\n    ans = []\n    mi_1 = math.inf\n    mi_2 = 0\n    for i in range(len(l) - 1, -1, -1):\n        mi_2 += l[i]\n        if mi_1 > mi_2:\n            mi_1 = mi_2\n        if mi_2 > 0:\n            mi_2 = 0\n        ans.insert(0, mi_1)\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    max_i = maxsumsub(l)\n    i_max = maxsumsubrev(l)\n    min_i = minsumsub(l)\n    i_min = minsumsubrev(l)\n    ans = -1\n    for i in range(len(l) - 1):\n        t_1 = abs(max_i[i] - i_min[i + 1])\n        t_2 = abs(min_i[i] - i_max[i + 1])\n        t_3 = max(t_1, t_2)\n        if ans < t_3:\n            ans = t_3\n    print(ans)", "import math\n\ndef maxsumsub(l):\n    ans = []\n    mx_1 = -1 * math.inf\n    mx_2 = 0\n    for i in range(len(l)):\n        mx_2 += l[i]\n        if mx_1 < mx_2:\n            mx_1 = mx_2\n        if mx_2 < 0:\n            mx_2 = 0\n        ans.append(mx_1)\n    return ans\n\ndef minsumsub(l):\n    ans = []\n    mi_1 = math.inf\n    mi_2 = 0\n    for i in range(len(l)):\n        mi_2 += l[i]\n        if mi_1 > mi_2:\n            mi_1 = mi_2\n        if mi_2 > 0:\n            mi_2 = 0\n        ans.append(mi_1)\n    return ans\n\ndef maxsumsubrev(l):\n    ans = []\n    mx_1 = -1 * math.inf\n    mx_2 = 0\n    for i in range(len(l) - 1, -1, -1):\n        mx_2 += l[i]\n        if mx_1 < mx_2:\n            mx_1 = mx_2\n        if mx_2 < 0:\n            mx_2 = 0\n        ans.insert(0, mx_1)\n    return ans\n\ndef minsumsubrev(l):\n    ans = []\n    mi_1 = math.inf\n    mi_2 = 0\n    for i in range(len(l) - 1, -1, -1):\n        mi_2 += l[i]\n        if mi_1 > mi_2:\n            mi_1 = mi_2\n        if mi_2 > 0:\n            mi_2 = 0\n        ans.insert(0, mi_1)\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    max_i = maxsumsub(l)\n    i_max = maxsumsubrev(l)\n    min_i = minsumsub(l)\n    i_min = minsumsubrev(l)\n    ans = -1\n    for i in range(len(l) - 1):\n        t_1 = abs(max_i[i] - i_min[i + 1])\n        t_2 = abs(min_i[i] - i_max[i + 1])\n        t_3 = max(t_1, t_2)\n        if ans < t_3:\n            ans = t_3\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (lmax, lmin, rmax, rmin) = ([0] * n, [0] * n, [0] * n, [0] * n)\n    lmax[0] = l[0]\n    lmin[0] = l[0]\n    rmax[-1] = l[-1]\n    rmin[-1] = l[-1]\n    for i in range(1, len(l)):\n        lmax[i] = max(lmax[i - 1] + l[i], l[i])\n        lmin[i] = min(lmin[i - 1] + l[i], l[i])\n    for i in range(n - 2, -1, -1):\n        rmax[i] = max(rmax[i + 1] + l[i], l[i])\n        rmin[i] = min(rmin[i + 1] + l[i], l[i])\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, max(abs(rmax[i + 1] - lmin[i]), abs(rmin[i + 1] - lmax[i])))\n    print(ans)", "from math import inf\n\ndef left_max(n):\n    max_fa = -inf\n    max_end = 0\n    for i in range(n - 1):\n        max_end += arr[i]\n        if max_end > max_fa:\n            max_fa = max_end\n        if max_end < 0:\n            max_end = 0\n        left_arr[i] = max_fa\n\ndef right_max(n):\n    max_fa = -inf\n    max_end = 0\n    for i in range(n - 1, 0, -1):\n        max_end += arr[i]\n        if max_end > max_fa:\n            max_fa = max_end\n        if max_end < 0:\n            max_end = 0\n        right_arr[i - 1] = max_fa\n\ndef left_min(n):\n    max_fa = -inf\n    max_end = 0\n    for i in range(n - 1):\n        max_end += arr1[i]\n        if max_end > max_fa:\n            max_fa = max_end\n        if max_end < 0:\n            max_end = 0\n        left_minarr[i] = -max_fa\n\ndef right_min(n):\n    max_fa = -inf\n    max_end = 0\n    for i in range(n - 1, 0, -1):\n        max_end += arr1[i]\n        if max_end > max_fa:\n            max_fa = max_end\n        if max_end < 0:\n            max_end = 0\n        right_minarr[i - 1] = -max_fa\ntest = int(input())\nfor _ in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr1 = [-arr[i] for i in range(len(arr))]\n    left_arr = [0] * (n - 1)\n    right_arr = [0] * (n - 1)\n    left_minarr = [0] * (n - 1)\n    right_minarr = [0] * (n - 1)\n    left_max(n)\n    right_max(n)\n    left_min(n)\n    right_min(n)\n    ans = -1\n    for i in range(len(left_arr)):\n        ans = max(ans, abs(left_arr[i] - right_minarr[i]), abs(right_arr[i] - left_minarr[i]))\n    print(ans)", "from math import inf\n\ndef left_max(n):\n    max_fa = -inf\n    max_end = 0\n    for i in range(n - 1):\n        max_end += arr[i]\n        if max_end > max_fa:\n            max_fa = max_end\n        if max_end < 0:\n            max_end = 0\n        left_arr[i] = max_fa\n\ndef right_max(n):\n    max_fa = -inf\n    max_end = 0\n    for i in range(n - 1, 0, -1):\n        max_end += arr[i]\n        if max_end > max_fa:\n            max_fa = max_end\n        if max_end < 0:\n            max_end = 0\n        right_arr[i - 1] = max_fa\n\ndef left_min(n):\n    max_fa = -inf\n    max_end = 0\n    for i in range(n - 1):\n        max_end += arr1[i]\n        if max_end > max_fa:\n            max_fa = max_end\n        if max_end < 0:\n            max_end = 0\n        left_minarr[i] = -max_fa\n\ndef right_min(n):\n    max_fa = -inf\n    max_end = 0\n    for i in range(n - 1, 0, -1):\n        max_end += arr1[i]\n        if max_end > max_fa:\n            max_fa = max_end\n        if max_end < 0:\n            max_end = 0\n        right_minarr[i - 1] = -max_fa\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr1 = [-arr[i] for i in range(len(arr))]\n    left_arr = [0] * (n - 1)\n    right_arr = [0] * (n - 1)\n    left_minarr = [0] * (n - 1)\n    right_minarr = [0] * (n - 1)\n    left_max(n)\n    right_max(n)\n    left_min(n)\n    right_min(n)\n    ans = -1\n    for i in range(len(left_arr)):\n        ans = max(ans, abs(left_arr[i] - right_minarr[i]), abs(right_arr[i] - left_minarr[i]))\n    print(ans)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_left = a[:]\n    min_left = a[:]\n    min_right = a[:]\n    max_right = a[:]\n    max_diff = 0\n    for i in range(1, n):\n        max_left[i] = max(max_left[i - 1] + a[i], a[i])\n        min_left[i] = min(min_left[i - 1] + a[i], a[i])\n    for i in range(n - 2, -1, -1):\n        max_right[i] = max(max_right[i + 1] + a[i], a[i])\n        min_right[i] = min(min_right[i + 1] + a[i], a[i])\n    for i in range(n - 1):\n        max_diff = max(max_diff, abs(min_left[i] - max_right[i + 1]))\n        max_diff = max(max_diff, abs(max_left[i] - min_right[i + 1]))\n    print(max_diff)\n    t -= 1", "def mp():\n    return map(int, input().split(' '))\n\ndef lst():\n    return list(mp())\n\ndef subsm(el, e):\n    ms = el[0]\n    me = el[0]\n    nw = [el[0] * e]\n    for i in range(1, len(el)):\n        ms = max(el[i], ms + el[i])\n        me = max(me, ms)\n        nw.append(me * e)\n    return nw\nfor _ in range(int(input())):\n    n = int(input())\n    ar = lst()\n    nar = [-1 * ar[i] for i in range(n)]\n    pmxf = subsm(ar, 1)\n    pmxl = subsm(ar[::-1], 1)\n    pmnf = subsm(nar, -1)\n    pmnl = subsm(nar[::-1], -1)\n    pmxl = pmxl[::-1]\n    pmnl = pmnl[::-1]\n    print(max([max(abs(pmxf[i] - pmnl[i + 1]), abs(pmnf[i] - pmxl[i + 1])) for i in range(n - 1)]))", "t = int(input())\nfor rep in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    lmax = [0] * n\n    lmax[0] = d[0]\n    rmax = [0] * n\n    rmax[n - 1] = d[n - 1]\n    lmin = [0] * n\n    lmin[0] = d[0]\n    rmin = [0] * n\n    rmin[n - 1] = d[n - 1]\n    for i in range(1, n):\n        lmin[i] = min(lmin[i - 1] + d[i], d[i])\n        lmax[i] = max(lmax[i - 1] + d[i], d[i])\n    for i in range(n - 2, -1, -1):\n        rmin[i] = min(rmin[i + 1] + d[i], d[i])\n        rmax[i] = max(rmax[i + 1] + d[i], d[i])\n    maxi1 = 0\n    maxi2 = 0\n    for i in range(n - 1):\n        maxi1 = max(maxi1, abs(lmin[i] - rmax[i + 1]))\n        maxi2 = max(maxi2, abs(lmax[i] - rmin[i + 1]))\n    print(max(maxi1, maxi2))", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    minleft = n * [0]\n    maxleft = n * [0]\n    minleft[0] = maxleft[0] = ar[0]\n    for i in range(1, n):\n        minleft[i] = min(ar[i], minleft[i - 1] + ar[i])\n        maxleft[i] = max(ar[i], maxleft[i - 1] + ar[i])\n    minright = n * [0]\n    maxright = n * [0]\n    minright[n - 1] = maxright[n - 1] = ar[n - 1]\n    for i in range(n - 2, -1, -1):\n        minright[i] = min(ar[i], minright[i + 1] + ar[i])\n        maxright[i] = max(ar[i], maxright[i + 1] + ar[i])\n    maxdiff = 0\n    for i in range(n - 1):\n        maxdiff = max(maxdiff, abs(minleft[i] - maxright[i + 1]))\n        maxdiff = max(maxdiff, abs(maxleft[i] - minright[i + 1]))\n    print(maxdiff)", "def fix_one(max1_e, min1_e, max1_s, min1_s):\n    next_best = -10 ** 9 - 1\n    for x in range(0, len(max1_e) - 1):\n        next_best = max(abs(max1_e[x] - min1_s[x + 1]), abs(max1_s[x + 1] - min1_e[x]), next_best)\n    return next_best\nfrom sys import stdin\ntc = int(stdin.readline())\nfor i in range(tc):\n    n = int(stdin.readline())\n    list1 = list(map(int, stdin.readline().split()))\n    max1_e = [0] * n\n    min1_e = [0] * n\n    max_e = [0] * n\n    min_e = [0] * n\n    max1_e[0] = min1_e[0] = max_e[0] = max_until_now = min_e[0] = min_until_now = list1[0]\n    for j in range(1, n):\n        max1_e[j] = max(list1[j], max1_e[j - 1] + list1[j])\n        if max1_e[j] > max_until_now:\n            max_until_now = max1_e[j]\n        max_e[j] = max_until_now\n        min1_e[j] = min(list1[j], min1_e[j - 1] + list1[j])\n        if min1_e[j] < min_until_now:\n            min_until_now = min1_e[j]\n        min_e[j] = min_until_now\n    max1_s = [0] * n\n    min1_s = [0] * n\n    max_s = [0] * n\n    min_s = [0] * n\n    max1_s[n - 1] = min1_s[n - 1] = max_s[n - 1] = max_until_now = min_s[n - 1] = min_until_now = list1[n - 1]\n    for k in range(n - 2, -1, -1):\n        max1_s[k] = max(list1[k], max1_s[k + 1] + list1[k])\n        if max1_s[k] > max_until_now:\n            max_until_now = max1_s[k]\n        max_s[k] = max_until_now\n        min1_s[k] = min(list1[k], min1_s[k + 1] + list1[k])\n        if min1_s[k] < min_until_now:\n            min_until_now = min1_s[k]\n        min_s[k] = min_until_now\n    print(fix_one(max_e, min_e, max_s, min_s))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    minleft = [0] * n\n    maxleft = [0] * n\n    minright = [0] * n\n    maxright = [0] * n\n    minleft[0] = maxleft[0] = a[0]\n    for i in range(1, n):\n        minleft[i] = min(minleft[i - 1] + a[i], a[i])\n        maxleft[i] = max(maxleft[i - 1] + a[i], a[i])\n    minright[n - 1] = a[n - 1]\n    maxright[n - 1] = a[n - 1]\n    for i in range(n - 2, -1, -1):\n        minright[i] = min(minright[i + 1] + a[i], a[i])\n        maxright[i] = max(maxright[i + 1] + a[i], a[i])\n    max_diff = 0\n    for i in range(n - 1):\n        max_diff = max(max_diff, abs(minleft[i] - maxright[i + 1]))\n        max_diff = max(max_diff, abs(minleft[i] - minright[i + 1]))\n        max_diff = max(max_diff, abs(maxleft[i] - maxright[i + 1]))\n        max_diff = max(max_diff, abs(maxleft[i] - minright[i + 1]))\n    print(max_diff)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_left = a[:]\n    min_left = a[:]\n    min_right = a[:]\n    max_right = a[:]\n    max_diff = 0\n    for i in range(1, n):\n        max_left[i] = max(max_left[i - 1] + a[i], a[i])\n        min_left[i] = min(min_left[i - 1] + a[i], a[i])\n    for i in range(n - 2, -1, -1):\n        max_right[i] = max(max_right[i + 1] + a[i], a[i])\n        min_right[i] = min(min_right[i + 1] + a[i], a[i])\n    for i in range(n - 1):\n        max_diff = max(max_diff, abs(min_left[i] - max_right[i + 1]))\n        max_diff = max(max_diff, abs(max_left[i] - min_right[i + 1]))\n    print(max_diff)\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    max_left = a[:]\n    min_left = a[:]\n    min_right = a[:]\n    max_right = a[:]\n    max_diff = 0\n    for i in range(1, n):\n        max_left[i] = max(max_left[i - 1] + a[i], a[i])\n        min_left[i] = min(min_left[i - 1] + a[i], a[i])\n    for i in range(n - 2, -1, -1):\n        max_right[i] = max(max_right[i + 1] + a[i], a[i])\n        min_right[i] = min(min_right[i + 1] + a[i], a[i])\n    for i in range(n - 1):\n        max_diff = max(max_diff, abs(min_left[i] - max_right[i + 1]))\n        max_diff = max(max_diff, abs(max_left[i] - min_right[i + 1]))\n    print(max_diff)\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    max_left = a[:]\n    min_left = a[:]\n    min_right = a[:]\n    max_right = a[:]\n    max_diff = 0\n    for i in range(1, n):\n        max_left[i] = max(max_left[i - 1] + a[i], a[i])\n        min_left[i] = min(min_left[i - 1] + a[i], a[i])\n    for i in range(n - 2, -1, -1):\n        max_right[i] = max(max_right[i + 1] + a[i], a[i])\n        min_right[i] = min(min_right[i + 1] + a[i], a[i])\n    for i in range(n - 1):\n        max_diff = max(max_diff, abs(min_left[i] - max_right[i + 1]))\n        max_diff = max(max_diff, abs(max_left[i] - min_right[i + 1]))\n    print(max_diff)\n    t -= 1", "T = int(input())\nfor j in range(T):\n    N = int(input())\n    a = list(map(int, input().split()))\n    max1 = a[:]\n    max2 = a[:]\n    min1 = a[:]\n    min2 = a[:]\n    t = 0\n    for i in range(1, N):\n        max1[i] = max(max1[i - 1] + a[i], a[i])\n        min1[i] = min(min1[i - 1] + a[i], a[i])\n    for i in range(N - 2, -1, -1):\n        max2[i] = max(max2[i + 1] + a[i], a[i])\n        min2[i] = min(min2[i + 1] + a[i], a[i])\n    for i in range(N - 1):\n        t = max(t, abs(min1[i] - max2[i + 1]))\n        t = max(t, abs(max1[i] - min2[i + 1]))\n    print(t)", "t = int(input())\nfor u in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_left = a[:]\n    min_left = a[:]\n    min_right = a[:]\n    max_right = a[:]\n    for i in range(1, n):\n        max_left[i] = max(max_left[i - 1] + a[i], a[i])\n        min_left[i] = min(min_left[i - 1] + a[i], a[i])\n    for i in range(n - 2, -1, -1):\n        max_right[i] = max(max_right[i + 1] + a[i], a[i])\n        min_right[i] = min(min_right[i + 1] + a[i], a[i])\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, abs(min_left[i] - max_right[i + 1]))\n        ans = max(ans, abs(max_left[i] - min_right[i + 1]))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    min_left = [0] * n\n    max_left = [0] * n\n    min_right = [0] * n\n    max_right = [0] * n\n    min_left[0] = max_left[0] = l[0]\n    min_right[n - 1] = max_right[n - 1] = l[n - 1]\n    for i in range(1, n):\n        min_left[i] = min(l[i], l[i] + min_left[i - 1])\n        max_left[i] = max(l[i], l[i] + max_left[i - 1])\n    for i in range(n - 2, -1, -1):\n        min_right[i] = min(l[i], l[i] + min_right[i + 1])\n        max_right[i] = max(l[i], l[i] + max_right[i + 1])\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, abs(min_left[i] - max_right[i + 1]))\n        ans = max(ans, abs(max_left[i] - min_right[i + 1]))\n    print(ans)", "for case in range(int(input())):\n    N = int(input())\n    L = list(map(int, input().split()))\n    leftMaSum = [None] * N\n    leftMiSum = [None] * N\n    leftMa = [None] * N\n    leftMi = [None] * N\n    leftMaSum[0] = L[0]\n    leftMiSum[0] = L[0]\n    leftMa[0] = L[0]\n    leftMi[0] = L[0]\n    for i in range(1, N):\n        num = L[i]\n        leftMaSum[i] = max(num + leftMaSum[i - 1], num)\n        leftMiSum[i] = min(num + leftMiSum[i - 1], num)\n        leftMa[i] = max(leftMaSum[i], leftMa[i - 1])\n        leftMi[i] = min(leftMiSum[i], leftMi[i - 1])\n    rightMaSum = [None] * N\n    rightMiSum = [None] * N\n    rightMa = [None] * N\n    rightMi = [None] * N\n    rightMaSum[-1] = L[-1]\n    rightMiSum[-1] = L[-1]\n    rightMa[-1] = L[-1]\n    rightMi[-1] = L[-1]\n    for i in range(N - 2, -1, -1):\n        num = L[i]\n        rightMaSum[i] = max(num + rightMaSum[i + 1], num)\n        rightMiSum[i] = min(num + rightMiSum[i + 1], num)\n        rightMa[i] = max(rightMaSum[i], rightMa[i + 1])\n        rightMi[i] = min(rightMiSum[i], rightMi[i + 1])\n    v1 = abs(leftMa[0] - rightMa[1])\n    v2 = abs(leftMa[0] - rightMi[1])\n    v3 = abs(leftMi[0] - rightMa[1])\n    v4 = abs(leftMi[0] - rightMi[1])\n    ans = max(v1, v2, v3, v4)\n    for i in range(1, N - 1):\n        v1 = abs(leftMa[i] - rightMa[i + 1])\n        v2 = abs(leftMa[i] - rightMi[i + 1])\n        v3 = abs(leftMi[i] - rightMa[i + 1])\n        v4 = abs(leftMi[i] - rightMi[i + 1])\n        ans = max(ans, v1, v2, v3, v4)\n    print(ans)", "from sys import stdin\nn = int(stdin.readline())\nfor _ in range(n):\n    total = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n    rightmax = [0] * total\n    leftmax = [0] * total\n    rightmin = [0] * total\n    leftmin = [0] * total\n    rightmax[0] = arr[0]\n    leftmax[-1] = arr[-1]\n    rightmin[0] = arr[0]\n    leftmin[-1] = arr[-1]\n    for i in range(1, total):\n        rightmax[i] = max(arr[i], rightmax[i - 1] + arr[i])\n        rightmin[i] = min(arr[i], rightmin[i - 1] + arr[i])\n    for i in range(total - 2, -1, -1):\n        leftmax[i] = max(arr[i], leftmax[i + 1] + arr[i])\n        leftmin[i] = min(arr[i], leftmin[i + 1] + arr[i])\n    max1 = []\n    i = 0\n    for i in range(total - 1):\n        max1.append(abs(rightmax[i] - leftmin[i + 1]))\n        max1.append(abs(leftmax[i + 1] - rightmin[i]))\n    print(max(max1))", "from sys import stdin\nn = int(stdin.readline())\nfor _ in range(n):\n    total = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n    rightmax = [0] * total\n    leftmax = [0] * total\n    rightmin = [0] * total\n    leftmin = [0] * total\n    rightmax[0] = arr[0]\n    leftmax[-1] = arr[-1]\n    rightmin[0] = arr[0]\n    leftmin[-1] = arr[-1]\n    for i in range(1, total):\n        rightmax[i] = max(arr[i], rightmax[i - 1] + arr[i])\n        rightmin[i] = min(arr[i], rightmin[i - 1] + arr[i])\n    for i in range(total - 2, -1, -1):\n        leftmax[i] = max(arr[i], leftmax[i + 1] + arr[i])\n        leftmin[i] = min(arr[i], leftmin[i + 1] + arr[i])\n    max1 = []\n    i = 0\n    while i + 1 < total:\n        max1.append(abs(rightmax[i] - leftmin[i + 1]))\n        max1.append(abs(leftmax[i + 1] - rightmin[i]))\n        i += 1\n    print(max(max1))", "n = int(input())\nfor _ in range(n):\n    total = int(input())\n    arr = list(map(int, input().split()))\n    rightmax = [0] * total\n    leftmax = [0] * total\n    rightmin = [0] * total\n    leftmin = [0] * total\n    rightmax[0] = arr[0]\n    leftmax[-1] = arr[-1]\n    rightmin[0] = arr[0]\n    leftmin[-1] = arr[-1]\n    for i in range(1, total):\n        rightmax[i] = max(arr[i], rightmax[i - 1] + arr[i])\n        rightmin[i] = min(arr[i], rightmin[i - 1] + arr[i])\n    for i in range(total - 2, -1, -1):\n        leftmax[i] = max(arr[i], leftmax[i + 1] + arr[i])\n        leftmin[i] = min(arr[i], leftmin[i + 1] + arr[i])\n    max1 = []\n    i = 0\n    while i + 1 < total:\n        max1.append(abs(rightmax[i] - leftmin[i + 1]))\n        max1.append(abs(leftmax[i + 1] - rightmin[i]))\n        i += 1\n    print(max(max1))", "n = int(input())\nfor _ in range(n):\n    total = int(input())\n    arr = list(map(int, input().split()))\n    rightmax = [0] * total\n    leftmax = [0] * total\n    rightmin = [0] * total\n    leftmin = [0] * total\n    rightmax[0] = arr[0]\n    leftmax[-1] = arr[-1]\n    rightmin[0] = arr[0]\n    leftmin[-1] = arr[-1]\n    for i in range(1, total):\n        rightmax[i] = max(arr[i], rightmax[i - 1] + arr[i])\n        rightmin[i] = min(arr[i], rightmin[i - 1] + arr[i])\n    for i in range(total - 2, -1, -1):\n        leftmax[i] = max(arr[i], leftmax[i + 1] + arr[i])\n        leftmin[i] = min(arr[i], leftmin[i + 1] + arr[i])\n    max1 = float('-inf')\n    i = 0\n    while i + 1 < total:\n        diff = abs(rightmax[i] - leftmin[i + 1])\n        diff1 = abs(leftmax[i + 1] - rightmin[i])\n        max1 = max(max1, diff, diff1)\n        i += 1\n    print(max1)", "from sys import stdin\nn = int(stdin.readline())\nfor _ in range(n):\n    total = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n    rightmax = [0] * total\n    leftmax = [0] * total\n    rightmin = [0] * total\n    leftmin = [0] * total\n    rightmax[0] = arr[0]\n    leftmax[-1] = arr[-1]\n    rightmin[0] = arr[0]\n    leftmin[-1] = arr[-1]\n    for i in range(1, total):\n        rightmax[i] = max(arr[i], rightmax[i - 1] + arr[i])\n        rightmin[i] = min(arr[i], rightmin[i - 1] + arr[i])\n    for i in range(total - 2, -1, -1):\n        leftmax[i] = max(arr[i], leftmax[i + 1] + arr[i])\n        leftmin[i] = min(arr[i], leftmin[i + 1] + arr[i])\n    max1 = float('-inf')\n    i = 0\n    while i + 1 < total:\n        diff = abs(rightmax[i] - leftmin[i + 1])\n        diff1 = abs(leftmax[i + 1] - rightmin[i])\n        max1 = max(max1, diff, diff1)\n        i += 1\n    print(max1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    (rmax, rmin, lmax, lmin) = ([0] * n, [0] * n, [0] * n, [0] * n)\n    (rmax[-1], rmin[-1], lmax[0], lmin[0]) = (li[-1], li[-1], li[0], li[0])\n    for i in range(n - 2, -1, -1):\n        rmax[i] = max(rmax[i + 1] + li[i], li[i])\n        rmin[i] = min(rmin[i + 1] + li[i], li[i])\n    for i in range(1, n):\n        lmax[i] = max(lmax[i - 1] + li[i], li[i])\n        lmin[i] = min(lmin[i - 1] + li[i], li[i])\n    result = []\n    for i in range(n - 1):\n        result.append(abs(lmax[i] - rmin[i + 1]))\n        result.append(abs(lmin[i] - rmax[i + 1]))\n    print(max(result))", "for t in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    (rmx, rmn, lmx, lmn) = ([0] * n, [0] * n, [0] * n, [0] * n)\n    (rmx[-1], rmn[-1], lmx[0], lmn[0]) = (li[-1], li[-1], li[0], li[0])\n    for i in range(n - 2, -1, -1):\n        rmx[i] = max(rmx[i + 1] + li[i], li[i])\n        rmn[i] = min(rmn[i + 1] + li[i], li[i])\n    for i in range(1, n):\n        lmx[i] = max(lmx[i - 1] + li[i], li[i])\n        lmn[i] = min(lmn[i - 1] + li[i], li[i])\n    res = []\n    for i in range(n - 1):\n        res.append(abs(lmx[i] - rmn[i + 1]))\n        res.append(abs(lmn[i] - rmx[i + 1]))\n    print(max(res))", "def cal():\n    (maxdp1, maxdp1[0]) = ([0] * n, d[0])\n    (maxdp2, maxdp2[-1]) = ([0] * n, d[-1])\n    (mindp1, mindp1[0]) = ([0] * n, d[0])\n    (mindp2, mindp2[-1]) = ([0] * n, d[-1])\n    for i in range(n - 2, -1, -1):\n        if maxdp2[i + 1] + d[i] > d[i]:\n            maxdp2[i] = maxdp2[i + 1] + d[i]\n        else:\n            maxdp2[i] = d[i]\n        if mindp2[i + 1] + d[i] < d[i]:\n            mindp2[i] = mindp2[i + 1] + d[i]\n        else:\n            mindp2[i] = d[i]\n    for i in range(1, n):\n        if maxdp1[i - 1] + d[i] > d[i]:\n            maxdp1[i] = maxdp1[i - 1] + d[i]\n        else:\n            maxdp1[i] = d[i]\n        if mindp1[i - 1] + d[i] < d[i]:\n            mindp1[i] = mindp1[i - 1] + d[i]\n        else:\n            mindp1[i] = d[i]\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, abs(maxdp2[i] - mindp1[i - 1]), abs(mindp2[i] - maxdp1[i - 1]))\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    d = list(map(int, input().split()))\n    print(cal())", "def cal():\n\n    def max_delish2(idx):\n        nonlocal maxdp2\n        if idx == n - 1:\n            maxdp2[idx] = d[idx]\n            return maxdp2[idx]\n        temp = max_delish2(idx + 1)\n        if temp + d[idx] > d[idx]:\n            maxdp2[idx] = temp + d[idx]\n        else:\n            maxdp2[idx] = d[idx]\n        return maxdp2[idx]\n\n    def max_delish1(idx):\n        nonlocal maxdp1\n        if idx == 0:\n            maxdp1[idx] = d[idx]\n            return maxdp1[idx]\n        temp = max_delish1(idx - 1)\n        if temp + d[idx] > d[idx]:\n            maxdp1[idx] = temp + d[idx]\n        else:\n            maxdp1[idx] = d[idx]\n        return maxdp1[idx]\n\n    def min_delish2(idx):\n        nonlocal mindp2\n        if idx == n - 1:\n            mindp2[idx] = d[idx]\n            return mindp2[idx]\n        temp = min_delish2(idx + 1)\n        if temp + d[idx] < d[idx]:\n            mindp2[idx] = temp + d[idx]\n        else:\n            mindp2[idx] = d[idx]\n        return mindp2[idx]\n\n    def min_delish1(idx):\n        nonlocal mindp1\n        if idx == 0:\n            mindp1[idx] = d[idx]\n            return mindp1[idx]\n        temp = min_delish1(idx - 1)\n        if temp + d[idx] < d[idx]:\n            mindp1[idx] = temp + d[idx]\n        else:\n            mindp1[idx] = d[idx]\n        return mindp1[idx]\n    (maxdp1, maxdp1[0]) = ([0] * n, d[0])\n    (maxdp2, maxdp2[-1]) = ([0] * n, d[-1])\n    (mindp1, mindp1[0]) = ([0] * n, d[0])\n    (mindp2, mindp2[-1]) = ([0] * n, d[-1])\n    for i in range(n - 2, -1, -1):\n        if maxdp2[i + 1] + d[i] > d[i]:\n            maxdp2[i] = maxdp2[i + 1] + d[i]\n        else:\n            maxdp2[i] = d[i]\n        if mindp2[i + 1] + d[i] < d[i]:\n            mindp2[i] = mindp2[i + 1] + d[i]\n        else:\n            mindp2[i] = d[i]\n    for i in range(1, n):\n        if maxdp1[i - 1] + d[i] > d[i]:\n            maxdp1[i] = maxdp1[i - 1] + d[i]\n        else:\n            maxdp1[i] = d[i]\n        if mindp1[i - 1] + d[i] < d[i]:\n            mindp1[i] = mindp1[i - 1] + d[i]\n        else:\n            mindp1[i] = d[i]\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, abs(maxdp2[i] - mindp1[i - 1]), abs(mindp2[i] - maxdp1[i - 1]))\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    d = list(map(int, input().split()))\n    print(cal())", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    startmax = [0] * n\n    startmin = [0] * n\n    endmax = [0] * n\n    endmin = [0] * n\n    (startmax[n - 1], startmin[n - 1]) = (A[n - 1], A[n - 1])\n    (endmax[0], endmin[0]) = (A[0], A[0])\n    for i in range(n - 2, -1, -1):\n        startmax[i] = max(startmax[i + 1] + A[i], A[i])\n        startmin[i] = min(startmin[i + 1] + A[i], A[i])\n        j = n - 1 - i\n        endmax[j] = max(endmax[j - 1] + A[j], A[j])\n        endmin[j] = min(endmin[j - 1] + A[j], A[j])\n    for i in range(n - 2, -1, -1):\n        startmax[i] = max(startmax[i + 1], startmax[i])\n        startmin[i] = min(startmin[i + 1], startmin[i])\n        j = n - 1 - i\n        endmax[j] = max(endmax[j - 1], endmax[j])\n        endmin[j] = min(endmin[j - 1], endmin[j])\n    ans = -1\n    for i in range(n - 1):\n        ans = max(abs(startmax[i + 1] - endmin[i]), abs(startmin[i + 1] - endmax[i]), ans)\n    print(ans)", "import sys\nfor t in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    lma = [0 for i in range(n)]\n    lmi = [0 for i in range(n)]\n    rma = [0 for i in range(n)]\n    rmi = [0 for i in range(n)]\n    s1 = a[0]\n    s2 = a[-1]\n    ma = ma1 = -sys.maxsize\n    mi = mi1 = sys.maxsize\n    s = 0\n    o = 0\n    s1 = 0\n    o1 = 0\n    for i in range(0, n - 1):\n        j = n - i - 1\n        s += a[i]\n        o += a[i]\n        s1 += a[j]\n        o1 += a[j]\n        ma = max(ma, s)\n        mi = min(mi, o)\n        ma1 = max(ma1, s1)\n        mi1 = min(mi1, o1)\n        if s < 0:\n            s = 0\n        if o > 0:\n            o = 0\n        if s1 < 0:\n            s1 = 0\n        if o1 > 0:\n            o1 = 0\n        lmi[i] = mi\n        lma[i] = ma\n        rmi[j] = mi1\n        rma[j] = ma1\n    ans = max(abs(lmi[0] - rma[1]), abs(lma[0] - rmi[1]))\n    for i in range(n - 1):\n        y = max(abs(lmi[i] - rma[i + 1]), abs(lma[i] - rmi[i + 1]))\n        ans = ans if ans > y else y\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = [0] * n\n    i[0] = a[0]\n    j = [0] * n\n    j[0] = a[0]\n    k = [0] * n\n    k[-1] = a[-1]\n    l = [0] * n\n    l[-1] = a[-1]\n    for x in range(1, n):\n        i[x] = min(i[x - 1] + a[x], a[x])\n        j[x] = max(j[x - 1] + a[x], a[x])\n        k[-1 - x] = min(k[-x] + a[-1 - x], a[-1 - x])\n        l[-1 - x] = max(l[-x] + a[-1 - x], a[-1 - x])\n    ans = max(j[0] - k[1], l[-1] - i[-2])\n    for x in range(1, n - 1):\n        ans = max(ans, j[x] - k[x + 1], l[x] - i[x - 1])\n    print(ans)", "def delish(arr, n):\n    minpref = [0 for _ in range(n)]\n    maxpref = [0 for _ in range(n)]\n    minsuf = [0 for _ in range(n)]\n    maxsuf = [0 for _ in range(n)]\n    minpref[0] = maxpref[0] = arr[0]\n    (curmax, curmin) = (arr[0], arr[0])\n    for i in range(1, n):\n        curmax = max(curmax + arr[i], arr[i])\n        curmin = min(curmin + arr[i], arr[i])\n        maxpref[i] = max(maxpref[i - 1], curmax)\n        minpref[i] = min(minpref[i - 1], curmin)\n    minsuf[n - 1] = maxsuf[n - 1] = arr[n - 1]\n    (curmax, curmin) = (arr[n - 1], arr[n - 1])\n    for i in range(n - 2, -1, -1):\n        curmax = max(curmax + arr[i], arr[i])\n        curmin = min(curmin + arr[i], arr[i])\n        maxsuf[i] = max(maxsuf[i + 1], curmax)\n        minsuf[i] = min(minsuf[i + 1], curmin)\n    m = float('-inf')\n    for i in range(n - 1):\n        r = max(abs(maxpref[i] - minsuf[i + 1]), abs(minpref[i] - maxsuf[i + 1]))\n        if r > m:\n            m = r\n    return m\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(delish(arr, n))", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    startmax = [0] * n\n    startmin = [0] * n\n    endmax = [0] * n\n    endmin = [0] * n\n    (startmax[n - 1], startmin[n - 1]) = (A[n - 1], A[n - 1])\n    (endmax[0], endmin[0]) = (A[0], A[0])\n    for i in range(n - 2, -1, -1):\n        startmax[i] = max(startmax[i + 1] + A[i], A[i])\n        startmin[i] = min(startmin[i + 1] + A[i], A[i])\n        j = n - 1 - i\n        endmax[j] = max(endmax[j - 1] + A[j], A[j])\n        endmin[j] = min(endmin[j - 1] + A[j], A[j])\n    for i in range(n - 2, -1, -1):\n        startmax[i] = max(startmax[i + 1], startmax[i])\n        startmin[i] = min(startmin[i + 1], startmin[i])\n        j = n - 1 - i\n        endmax[j] = max(endmax[j - 1], endmax[j])\n        endmin[j] = min(endmin[j - 1], endmin[j])\n    ans = -1\n    for i in range(n - 1):\n        ans = max(abs(startmax[i + 1] - endmin[i]), abs(startmin[i + 1] - endmax[i]), ans)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (lmax, lmin, rmax, rmin) = ([0] * n, [0] * n, [0] * n, [0] * n)\n    lmax[0] = l[0]\n    lmin[0] = l[0]\n    rmax[-1] = l[-1]\n    rmin[-1] = l[-1]\n    for i in range(1, len(l)):\n        lmax[i] = max(lmax[i - 1] + l[i], l[i])\n        lmin[i] = min(lmin[i - 1] + l[i], l[i])\n    for i in range(n - 2, -1, -1):\n        rmax[i] = max(rmax[i + 1] + l[i], l[i])\n        rmin[i] = min(rmin[i + 1] + l[i], l[i])\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, max(abs(rmax[i + 1] - lmin[i]), abs(rmin[i + 1] - lmax[i])))\n    print(ans)", "for _ in range(int(input())):\n    num_ingredients = int(input())\n    delish_values = list(map(int, input().split()))\n    prefix_max = [0] * num_ingredients\n    prefix_max[0] = delish_values[0]\n    prefix_min = [0] * num_ingredients\n    prefix_min[0] = delish_values[0]\n    suffix_max = [0] * num_ingredients\n    suffix_max[-1] = delish_values[-1]\n    suffix_min = [0] * num_ingredients\n    suffix_min[-1] = delish_values[-1]\n    for i in range(1, num_ingredients):\n        prefix_max[i] = max(prefix_max[i - 1] + delish_values[i], delish_values[i])\n        prefix_min[i] = min(prefix_min[i - 1] + delish_values[i], delish_values[i])\n        suffix_max[num_ingredients - 1 - i] = max(suffix_max[num_ingredients - i] + delish_values[num_ingredients - 1 - i], delish_values[num_ingredients - 1 - i])\n        suffix_min[num_ingredients - 1 - i] = min(suffix_min[num_ingredients - i] + delish_values[num_ingredients - 1 - i], delish_values[num_ingredients - 1 - i])\n    for i in range(1, num_ingredients):\n        prefix_max[i] = max(prefix_max[i], prefix_max[i - 1])\n        prefix_min[i] = min(prefix_min[i], prefix_min[i - 1])\n        suffix_max[num_ingredients - 1 - i] = max(suffix_max[num_ingredients - 1 - i], suffix_max[num_ingredients - i])\n        suffix_min[num_ingredients - 1 - i] = min(suffix_min[num_ingredients - 1 - i], suffix_min[num_ingredients - i])\n    max_delish = max(prefix_max[0] - suffix_min[1], suffix_max[num_ingredients - 1] - prefix_min[num_ingredients - 2])\n    for i in range(1, num_ingredients - 1):\n        max_delish = max(max_delish, abs(prefix_max[i] - suffix_min[i + 1]), abs(suffix_max[i] - prefix_min[i - 1]))\n    print(max_delish)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    ln = [0] * n\n    ln[0] = a[0]\n    lx = [0] * n\n    lx[0] = a[0]\n    rn = [0] * n\n    rn[n - 1] = a[n - 1]\n    rx = [0] * n\n    rx[n - 1] = a[n - 1]\n    for i in range(1, n):\n        ln[i] = min(ln[i - 1] + a[i], a[i])\n        lx[i] = max(lx[i - 1] + a[i], a[i])\n        rn[n - 1 - i] = min(rn[n - i] + a[n - 1 - i], a[n - 1 - i])\n        rx[n - 1 - i] = max(rx[n - i] + a[n - 1 - i], a[n - 1 - i])\n    ans = max(lx[0] - rn[1], rx[n - 1] - ln[n - 2])\n    for i in range(1, n - 1):\n        ans = max(ans, lx[i] - rn[i + 1], rx[i] - ln[i - 1])\n    print(ans)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    m = input().strip().split()\n    a = []\n    for val in m:\n        a.append(int(val))\n    f = list()\n    b = list()\n    for i in range(n):\n        f.append([0, 0])\n        b.append([0, 0])\n    f[0][0] = a[0]\n    f[0][1] = a[0]\n    for i in range(1, n):\n        m1 = max(f[i - 1][0], 0) + a[i]\n        m2 = min(f[i - 1][1], 0) + a[i]\n        f[i][0] = m1\n        f[i][1] = m2\n    b[n - 1][0] = a[n - 1]\n    b[n - 1][1] = a[n - 1]\n    for i in range(n - 2, -1, -1):\n        b1 = max(b[i + 1][0], 0) + a[i]\n        b2 = min(b[i + 1][1], 0) + a[i]\n        b[i][0] = b1\n        b[i][1] = b2\n    ans = float('-inf')\n    for i in range(0, n - 1):\n        ans = max(ans, abs(f[i][0] - b[i + 1][1]))\n        ans = max(ans, abs(f[i][1] - b[i + 1][0]))\n    print(ans)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    m = input().strip().split()\n    a = []\n    for val in m:\n        a.append(int(val))\n    f = list()\n    b = list()\n    for i in range(n):\n        f.append([0, 0])\n        b.append([0, 0])\n    f[0][0] = a[0]\n    f[0][1] = a[0]\n    for i in range(1, n):\n        m1 = max(f[i - 1][0], 0) + a[i]\n        m2 = min(f[i - 1][1], 0) + a[i]\n        f[i][0] = m1\n        f[i][1] = m2\n    b[n - 1][0] = a[n - 1]\n    b[n - 1][1] = a[n - 1]\n    for i in range(n - 2, -1, -1):\n        b1 = max(b[i + 1][0], 0) + a[i]\n        b2 = min(b[i + 1][1], 0) + a[i]\n        b[i][0] = b1\n        b[i][1] = b2\n    ans = float('-inf')\n    for i in range(0, n - 1):\n        ans = max(ans, abs(f[i][0] - b[i + 1][1]))\n        ans = max(ans, abs(f[i][1] - b[i + 1][0]))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    leftdp = [[0 for i in range(n)] for j in range(2)]\n    rightdp = [[0 for i in range(n)] for j in range(2)]\n    leftdp[0][0] = a[0]\n    leftdp[1][0] = a[0]\n    for i in range(1, n):\n        leftdp[0][i] = max(leftdp[0][i - 1], 0) + a[i]\n        leftdp[1][i] = min(leftdp[1][i - 1], 0) + a[i]\n    rightdp[0][n - 1] = a[n - 1]\n    rightdp[1][n - 1] = a[n - 1]\n    for i in range(n - 2, -1, -1):\n        rightdp[0][i] = max(rightdp[0][i + 1], 0) + a[i]\n        rightdp[1][i] = min(rightdp[1][i + 1], 0) + a[i]\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, abs(leftdp[0][i] - rightdp[1][i + 1]))\n        ans = max(ans, abs(leftdp[1][i] - rightdp[0][i + 1]))\n    print(ans)", "for tests in range(int(input())):\n    N = int(input())\n    D = list(map(int, input().split()))\n    minL = []\n    minR = []\n    maxL = []\n    maxR = []\n    currentMax = currentMin = 0\n    for i in range(N - 1):\n        if i == 0:\n            if D[i] < 0:\n                currentMin = D[i]\n            else:\n                currentMax = D[i]\n            minL.append(D[i])\n            maxL.append(D[i])\n            continue\n        currentMax = max(currentMax + D[i], D[i])\n        currentMin = min(currentMin + D[i], D[i])\n        minL.append(min(currentMin, minL[-1]))\n        maxL.append(max(currentMax, maxL[-1]))\n    currentMax = currentMin = 0\n    for i in range(N - 1, 0, -1):\n        if i == N - 1:\n            if D[i] < 0:\n                currentMin = D[i]\n            else:\n                currentMax = D[i]\n            minR.append(D[i])\n            maxR.append(D[i])\n            continue\n        currentMax = max(currentMax + D[i], D[i])\n        currentMin = min(currentMin + D[i], D[i])\n        maxR.append(max(currentMax, maxR[-1]))\n        minR.append(min(currentMin, minR[-1]))\n    minR.reverse()\n    maxR.reverse()\n    maxAbs = 0\n    for i in range(N - 1):\n        maxAbs = max(max(abs(minL[i] - maxR[i]), abs(maxL[i] - minR[i])), maxAbs)\n    print(maxAbs)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ar = [int(x) for x in input().split()]\n    pos = [0] * n\n    neg = [0] * n\n    rpos = [0] * n\n    rneg = [0] * n\n    sm = 0\n    ng = 0\n    rsm = 0\n    rng = 0\n    pos[0] = ar[0]\n    neg[n - 1] = ar[n - 1]\n    rpos[n - 1] = ar[n - 1]\n    rneg[0] = ar[0]\n    for j in range(n):\n        sm += ar[j]\n        if sm <= 0:\n            sm = 0\n            if j > 0:\n                pos[j] = ar[j]\n        else:\n            pos[j] = sm\n        rng += ar[j]\n        if rng >= 0:\n            rng = 0\n            if j > 0:\n                rneg[j] = ar[j]\n        else:\n            rneg[j] = rng\n    for j in range(n - 1, -1, -1):\n        ng += ar[j]\n        if ng >= 0:\n            ng = 0\n            if j < n - 1:\n                neg[j] = ar[j]\n        else:\n            neg[j] = ng\n        rsm += ar[j]\n        if rsm <= 0:\n            rsm = 0\n            if j < n - 1:\n                rpos[j] = ar[j]\n        else:\n            rpos[j] = rsm\n    p = n - 1\n    mx = 0\n    mp = 0\n    for j in range(1, n):\n        pos[j] = max(pos[j - 1], pos[j])\n        neg[p - j] = min(neg[p - j], neg[p - j + 1])\n        rpos[p - j] = max(rpos[p - j], rpos[p - j + 1])\n        rneg[j] = min(rneg[j - 1], rneg[j])\n    for j in range(n - 1):\n        mx = max(mx, abs(pos[j] - neg[j + 1]))\n        mp = max(mp, abs(rneg[j] - rpos[j + 1]))\n    print(max(mp, mx))\nj", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ar = [int(x) for x in input().split()]\n    pos = [0] * n\n    neg = [0] * n\n    rpos = [0] * n\n    rneg = [0] * n\n    sm = 0\n    ng = 0\n    rsm = 0\n    rng = 0\n    pos[0] = ar[0]\n    neg[n - 1] = ar[n - 1]\n    rpos[n - 1] = ar[n - 1]\n    rneg[0] = ar[0]\n    for j in range(n):\n        sm += ar[j]\n        if sm <= 0:\n            sm = 0\n            if j > 0:\n                pos[j] = ar[j]\n        else:\n            pos[j] = sm\n        rng += ar[j]\n        if rng >= 0:\n            rng = 0\n            if j > 0:\n                rneg[j] = ar[j]\n        else:\n            rneg[j] = rng\n    for j in range(n - 1, -1, -1):\n        ng += ar[j]\n        if ng >= 0:\n            ng = 0\n            if j < n - 1:\n                neg[j] = ar[j]\n        else:\n            neg[j] = ng\n        rsm += ar[j]\n        if rsm <= 0:\n            rsm = 0\n            if j < n - 1:\n                rpos[j] = ar[j]\n        else:\n            rpos[j] = rsm\n    p = n - 1\n    mx = 0\n    mp = 0\n    for j in range(1, n):\n        pos[j] = max(pos[j - 1], pos[j])\n        neg[p - j] = min(neg[p - j], neg[p - j + 1])\n        rpos[p - j] = max(rpos[p - j], rpos[p - j + 1])\n        rneg[j] = min(rneg[j - 1], rneg[j])\n    for j in range(n - 1):\n        mx = max(mx, abs(pos[j] - neg[j + 1]))\n        mp = max(mp, abs(rneg[j] - rpos[j + 1]))\n    print(max(mp, mx))\nj"]