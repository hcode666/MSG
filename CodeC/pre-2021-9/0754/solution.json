["m = 10 ** 9 + 7\n\ndef solve(n, a):\n    return aid(n, a)\n\ndef mul(f, b):\n    if f == 1:\n        return b\n    else:\n        store = mul(f // 2, b)\n        if f % 2 == 0:\n            return store * store % m\n        else:\n            return store * store % m * b % m\n\ndef aid(n, a):\n    (b, c) = (a * a, a)\n    for i in range(1, n):\n        d = mul(2 * i + 1, b)\n        (b, c) = (d * b % m, (d + c) % m)\n    return c\nfor _ in range(int(input())):\n    print(solve(*map(int, input().split())))", "m = 10 ** 9 + 7\n\ndef solve(n, a):\n    return aid(n, a)\n\ndef mul(f, b):\n    if f == 1:\n        return b\n    else:\n        store = mul(f // 2, b)\n        if f % 2 == 0:\n            return store * store % m\n        else:\n            return store * store % m * b % m\n\ndef aid(n, a):\n    (b, c) = (a * a, a)\n    for i in range(1, n):\n        d = mul(2 * i + 1, b)\n        (b, c) = (d * b % m, (d + c) % m)\n    return c\nfor _ in range(int(input())):\n    print(solve(*map(int, input().split())))", "m = 10 ** 9 + 7\n\ndef solve(n, a):\n    return aid(n, a)\n\ndef mul(f, b):\n    if f == 1:\n        return b\n    else:\n        store = mul(f // 2, b)\n        if f % 2 == 0:\n            return store * store % m\n        else:\n            return store * store % m * b % m\n\ndef aid(n, a):\n    (b, c) = (a * a, a)\n    for i in range(1, n):\n        d = mul(2 * i + 1, b)\n        (b, c) = (d * b % m, (d + c) % m)\n    return c\nfor _ in range(int(input())):\n    print(solve(*map(int, input().split())))", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    ans = 0\n    for j in range(1, 2 * n, 2):\n        ans = (ans + pow(a, j, mod)) % mod\n        a = a * pow(a, j, mod) % mod\n    ans = ans % mod\n    print(ans)", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    ans = 0\n    for j in range(1, 2 * n, 2):\n        ans = (ans + pow(a, j, mod)) % mod\n        a = a * pow(a, j, mod) % mod\n    ans = ans % mod\n    print(ans)", "mod = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    ans = 0\n    for j in range(1, 2 * n, 2):\n        ans = (ans + pow(a, j, mod)) % mod\n        a = a * pow(a, j, mod) % mod\n    ans = ans % mod\n    print(ans)", "mod = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    L = []\n    ans2 = 0\n    for i in range(n):\n        ans = pow(a, 2 * i + 1, mod)\n        ans2 += ans\n        a *= ans\n        a %= mod\n    ans2 %= mod\n    print(ans2)", "mod = 10 ** 9 + 7\nt = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    ans = 0\n    for j in range(1, 2 * n, 2):\n        ans = (ans + pow(a, j, mod)) % mod\n        a = a * pow(a, j, mod) % mod\n    ans %= mod\n    print(ans)", "mod = 10 ** 9 + 7\nt = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    ans = 0\n    for j in range(1, 2 * n, 2):\n        ans = (ans + pow(a, j, mod)) % mod\n        a = a * pow(a, j, mod) % mod\n    ans %= mod\n    print(ans)", "mod = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    ans = 0\n    for i in range(1, 2 * n, 2):\n        ans = (ans + pow(a, i, mod)) % mod\n        a = a * pow(a, i, mod) % mod\n    ans = ans % mod\n    print(ans)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    sum = 0\n    for i in range(1, 2 * n, 2):\n        sum = (sum + pow(a, i, mod)) % mod\n        a = a * pow(a, i, mod) % mod\n    print(sum % mod)", "mod = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    ans = 0\n    for i in range(1, 2 * n, 2):\n        ans = (ans + pow(a, i, mod)) % mod\n        a = a * pow(a, i, mod) % mod\n    ans = ans % mod\n    print(ans)", "import math\n\ndef power(a, p, mod=math.inf):\n    if p == 0:\n        return 1\n    if p == 1:\n        return a\n    R = power(a, p // 2, mod) % mod\n    if p % 2 == 0:\n        return R * R % mod\n    else:\n        return R * R * a % mod\nmod = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (N, A) = map(int, input().split())\n    res = 0\n    prev = 1\n    curr = A\n    for i in range(N):\n        temp = power(prev * curr, 2 * i + 1, mod)\n        res += temp\n        res %= mod\n        prev *= curr\n        prev %= mod\n        curr = temp % mod\n    print(res % mod)", "t = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    (sum, p) = (0, a)\n    mod = 1000000007\n    for i in range(1, n + 1):\n        next = pow(p, 2 * i - 1, mod)\n        sum = (sum + next) % mod\n        p = p * next % mod\n    print(sum)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    mod = 1000000007\n    s = 0\n    for i in range(1, n + 1):\n        p = pow(k, 2 * i - 1, mod)\n        s = (s + p) % mod\n        k = p * k % mod\n    print(s)", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    mod = 1000000007\n    s = 0\n    for i in range(1, n + 1):\n        p = pow(k, 2 * i - 1, mod)\n        s = (s + p) % mod\n        k = p * k % mod\n    print(s)", "import sys, math, itertools, random, bisect\nfrom collections import defaultdict\nINF = 10 ** 18\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, a) = get_ints()\n    x = 1\n    tot = 0\n    p = 1\n    for i in range(n):\n        pp = pow(a * p % mod, x, mod)\n        x += 2\n        p = p * pp % mod\n        tot = (tot + pp) % mod\n    print(tot)", "import sys, math, itertools, random, bisect\nfrom collections import defaultdict\nINF = 10 ** 18\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, a) = get_ints()\n    num = 1\n    tot = 0\n    p = 1\n    for i in range(n):\n        pp = pow(a * p % mod, num, mod)\n        num += 2\n        p = p * pp % mod\n        tot = (tot + pp) % mod\n    print(tot)", "try:\n    import sys\n    sys.setrecursionlimit(1500)\n    N = 1000000007\n\n    def exponentiation(bas, exp):\n        if exp == 0:\n            return 1\n        if exp == 1:\n            return bas % N\n        t = exponentiation(bas, int(exp / 2))\n        t = t * t % N\n        if exp % 2 == 0:\n            return t\n        else:\n            return bas % N * t % N\n    t = int(input())\n    for i in range(0, t):\n        (n, a) = map(int, input().split(' '))\n        c = 0\n        l = 0\n        for i in range(1, n + 1):\n            k = 2 * i - 1\n            op = exponentiation(a, k)\n            l += op\n            l %= N\n            a *= op\n            a %= N\n        print(l % N)\nexcept:\n    pass", "try:\n    import sys\n    sys.setrecursionlimit(1500)\n    N = 1000000007\n\n    def exponentiation(bas, exp):\n        if exp == 0:\n            return 1\n        if exp == 1:\n            return bas % N\n        t = exponentiation(bas, int(exp / 2))\n        t = t * t % N\n        if exp % 2 == 0:\n            return t\n        else:\n            return bas % N * t % N\n    t = int(input())\n    for i in range(0, t):\n        (n, a) = map(int, input().split(' '))\n        c = 0\n        l = 0\n        for i in range(1, n + 1):\n            k = 2 * i - 1\n            op = exponentiation(a, k)\n            l += op\n            l %= N\n            a *= op\n            a %= N\n        print(l % N)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    mod = 10 ** 9 + 7\n    s = 0\n    for i in range(1, n + 1):\n        p = pow(k, 2 * i - 1, mod)\n        s = (s + p) % mod\n        k = p * k % mod\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    mod = 10 ** 9 + 7\n    s = 0\n    for i in range(1, n + 1):\n        p = pow(k, 2 * i - 1, mod)\n        s = (s + p) % mod\n        k = p * k % mod\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    mod = 1000000007\n    s = 0\n    for i in range(1, n + 1):\n        p = pow(k, 2 * i - 1, mod)\n        s = (s + p) % mod\n        k = p * k % mod\n    print(s)", "MOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    res = 0\n    base = a\n    for i in range(n):\n        curr = pow(base, 2 * i + 1, MOD)\n        res += curr\n        res %= MOD\n        base = base * curr\n        base %= MOD\n    print(res % MOD)", "def raise_to_power(value, a, m, D):\n    if a == 0:\n        return 1\n    elif a == 1:\n        return value\n    elif a in D:\n        return D[a]\n    else:\n        D[a] = raise_to_power(value, a // 2, m, D) % m * (raise_to_power(value, a - a // 2, m, D) % m) % m\n        return D[a]\nm = 10 ** 9 + 7\nT = int(input())\nans = []\nfor _ in range(T):\n    (N, A) = [int(i) for i in input().split()]\n    value = A\n    sum = 0\n    for i in range(N):\n        x = raise_to_power(value, 2 * i + 1, m, {})\n        sum = (sum % m + x) % m\n        value = value % m * x % m\n    ans.append(sum)\nfor i in ans:\n    print(i)", "mod = 1000000007\nfor _ in range(int(input())):\n    (n, a) = list(map(int, input().split()))\n    (p, ans) = (1, 0)\n    for i in range(n):\n        a1 = pow(a, p, mod)\n        ans = (ans + a1) % mod\n        a = a * a1 % mod\n        p += 2\n    print(ans)", "m = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    j = 1\n    ans = 0\n    for i in range(1, n + 1):\n        k = pow(a, 2 * i - 1, m)\n        ans += k\n        a = a * k % m\n    print(ans % m)", "mod = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = 0\n    for i in range(1, n + 1):\n        l = pow(k, 2 * i - 1, mod)\n        p = (p + l) % mod\n        k = k * l % mod\n    print(p)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    p = 0\n    m = int(1000000000.0 + 7)\n    for i in range(1, n + 1):\n        l = pow(k, 2 * i - 1, m)\n        p += l\n        p = p % m\n        k = k * l % m\n    print(p)", "z = int(1000000000.0 + 7)\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    x = 0\n    for j in range(n):\n        c = pow(a, 2 * j + 1, z)\n        x += c\n        x = x % z\n        a = a * c\n        a = a % z\n    print(x)", "n = int(input())\nfor i in range(n):\n    (k, l) = map(int, input().split())\n    bc = l\n    ans = 0\n    kp = 1000000007\n    for j in range(1, k + 1):\n        bc = pow(l, 2 * j - 1, kp)\n        ans = (bc + ans) % kp\n        l = l * bc % kp\n    print(ans)", "n = int(input())\nfor i in range(n):\n    (k, l) = map(int, input().split())\n    bc = l\n    ans = 0\n    kp = 1000000007\n    for j in range(1, k + 1):\n        l = pow(bc, 2 * j - 1, kp)\n        ans = (l + ans) % kp\n        bc = l * bc % kp\n    print(ans)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    ans = 0\n    prev = a\n    fact = 1\n    comeon = 1\n    for i in range(n):\n        comeon = comeon * prev % (10 ** 9 + 7)\n        prev = pow(comeon, fact, 10 ** 9 + 7)\n        ans = (ans + prev) % (10 ** 9 + 7)\n        fact = fact + 2\n    print(ans % (10 ** 9 + 7))", "def solve():\n    (N, K) = map(int, input().split())\n    mod = 10 ** 9 + 7\n    m = 0\n    for i in range(1, N + 1):\n        c = pow(K, 2 * i - 1, mod)\n        K *= c\n        K %= mod\n        m += c\n        m %= mod\n    print(m)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "MOD = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (m, num) = [int(i) for i in input().split()]\n    ans = num\n    perv_elee = num\n    prev_val = num\n    for i in range(3, 2 * m, 2):\n        curr_elee = prev_val * perv_elee % MOD\n        curr_val = pow(curr_elee, i, MOD)\n        ans = (ans + curr_val) % MOD\n        prev_val = curr_val % MOD\n        perv_elee = curr_elee % MOD\n    ans %= MOD\n    print(ans)", "for _ in range(int(input())):\n    (n, s) = list(map(int, input().split()))\n    (p, count) = (1, 0)\n    for i in range(1, n + 1):\n        c = pow(s, 2 * i - 1, 10 ** 9 + 7)\n        s *= c\n        s = s % (10 ** 9 + 7)\n        count = (count + c) % (10 ** 9 + 7)\n    print(count)", "def pingalapower(a, n, mod):\n    if n == 1:\n        return a\n    x = pingalapower(a, n // 2, mod)\n    if n % 2 == 0:\n        return x * x % mod\n    else:\n        return x * x * a % mod\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    c = 1\n    ans = 0\n    mod = 10 ** 9 + 7\n    for i in range(n):\n        t_1 = pingalapower(a, c, mod) % mod\n        ans = ans + t_1\n        a = a * t_1 % mod\n        c += 2\n    print(ans % mod)", "def pingalapower(a, n, mod):\n    if n == 1:\n        return a\n    x = pingalapower(a, n // 2, mod)\n    if n % 2 == 0:\n        return x * x % mod\n    else:\n        return x * x * a % mod\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    c = 1\n    ans = 0\n    mod = 10 ** 9 + 7\n    for i in range(n):\n        t_1 = pingalapower(a, c, mod) % mod\n        ans = (ans + t_1) % mod\n        a = a * t_1 % mod\n        c += 2\n    print(ans % mod)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    m = 10 ** 9 + 7\n    p = 1\n    f = 0\n    l = a\n    prev = 1\n    for i in range(1, n + 1):\n        a = l * prev\n        p = pow(a, 2 * i - 1, m)\n        prev = prev * p % m\n        f = (f + p) % m\n    print(f % m)", "test = int(input())\nm = pow(10, 9) + 7\nfor _ in range(test):\n    (n, a) = map(int, input().split())\n    p = 1\n    f = 0\n    l = a\n    prev = 1\n    for i in range(1, n + 1):\n        a = l * prev\n        p = pow(a, 2 * i - 1, m)\n        prev = prev * p % m\n        f = (f + p) % m\n    print(f % m)", "t = int(input())\nm = pow(10, 9) + 7\nwhile t > 0:\n    (n, a) = map(int, input().split())\n    p = 1\n    f = 0\n    l = a\n    prev = 1\n    for i in range(1, n + 1):\n        a = l * prev\n        p = pow(a, 2 * i - 1, m)\n        prev = prev * p % m\n        f = (f + p) % m\n    print(f % m)\n    t = t - 1", "def pow(base, exp):\n    if exp == 0:\n        return 1\n    half = pow(base, exp // 2) % MOD\n    ans = half ** 2\n    ans %= MOD\n    if exp % 2:\n        ans *= base\n        ans %= MOD\n    return ans\nt = int(input())\nMOD = 1000000007\nwhile t:\n    t -= 1\n    (n, a) = input().split()\n    (n, a) = (int(n), int(a))\n    base = a\n    ans = 0\n    for i in range(1, n + 1):\n        exp = 2 * i - 1\n        pi = pow(base, exp)\n        ans += pi\n        ans %= MOD\n        base *= pi\n        base %= MOD\n    print(ans)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    sum = 0\n    mod = 10 ** 9 + 7\n    a1 = a\n    for i in range(1, n + 1):\n        p = 2 * i - 1\n        a = pow(a, p, mod)\n        sum = (sum + a % mod) % mod\n        a = a1 * a\n        a = a % mod\n        a1 = a\n    print(sum)", "MOD = 10 ** 9 + 7\n\ndef powerLL(x, n):\n    result = 1\n    while n:\n        if n & 1:\n            result = result * x % MOD\n        n = int(n / 2)\n        x = x * x % MOD\n    return result\nt = int(input())\nfor _ in range(t):\n    (n, a) = [int(x) for x in input().split()]\n    p = a\n    ans = a\n    for i in range(n - 1):\n        p = powerLL(p, 2 * (i + 1))\n        ans = (ans + powerLL(p, 2 * (i + 2) - 1)) % MOD\n    print(ans % MOD)", "for _ in range(int(input())):\n    (N, A) = [int(_) for _ in input().split()]\n    x = 0\n    for _ in range(N):\n        c = pow(A, 2 * (_ + 1) - 1, 1000000007)\n        x += c\n        x %= 1000000007\n        A *= c\n        A %= 1000000007\n    print(x % 1000000007)", "m = 1000000007\nn = int(input())\nfor _ in range(n):\n    (a, p) = map(int, input().split())\n    add = 0\n    box = 1\n    for i in range(a):\n        q = pow(p, box, m)\n        add = (add + q) % m\n        p = p * q % m\n        box += 2\n    print(add % (m + 7))", "m = 1000000007\nn = int(input())\nfor _ in range(n):\n    (a, p) = map(int, input().split())\n    add = 0\n    box = 1\n    for i in range(a):\n        q = pow(p, box, m)\n        add += q\n        add = add % m\n        p = p * q % m\n        box += 2\n    print(add % (m + 7))", "m = 1000000007\nn = int(input())\nfor _ in range(n):\n    (a, p) = map(int, input().split())\n    add = 0\n    box = 1\n    for i in range(a):\n        q = pow(p, box, m)\n        add += q\n        add = add % m\n        p = p % m\n        p = p * q\n        box += 2\n    print(add % (m + 7))", "MOD = 1000000007\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    ans = 0\n    cou = 0\n    for i in range(a):\n        cou = pow(b, 2 * i + 1, MOD)\n        ans += cou\n        ans = ans % MOD\n        b = b % MOD\n        b = cou * b\n    print(ans % (MOD + 7))", "MOD = 1000000007\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    ans = 0\n    cou = 0\n    for i in range(a):\n        cou = pow(b, 2 * i + 1, MOD)\n        ans += cou\n        ans = ans % MOD\n        b = b % MOD\n        b = cou * b\n    print(ans % (MOD + 7))", "MOD = 1000000007\n\ndef fast_power(base, power):\n    result = 1\n    while power > 0:\n        if power % 2 == 1:\n            result = result * base % MOD\n        power = power // 2\n        base = base * base % MOD\n    return result\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    ans = 0\n    cou = 0\n    for i in range(a):\n        cou = fast_power(b, 2 * i + 1) % MOD\n        ans += cou\n        ans = ans % MOD\n        b = b % MOD\n        b = cou * b\n    print(ans % (MOD + 7))", "def fastExpo(base, expo):\n    res = 1\n    while expo:\n        if expo % 2 == 1:\n            res = res * base % mod\n        base = base * base % mod\n        expo //= 2\n    return res % mod\nT = int(input())\nfor case in range(1, T + 1):\n    (N, A) = map(int, input().split())\n    mod = 10 ** 9 + 7\n    tot = 0\n    num = 1\n    for i in range(N):\n        p = fastExpo(A, num)\n        num += 2\n        A = A * p % mod\n        tot = (tot + p) % mod\n    print(tot)", "def po(x, y, p):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\nm = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    i = 1\n    t = 1\n    s = 0\n    while n:\n        n -= 1\n        s += po(a, t, 10 ** 9 + 7)\n        s %= m\n        a = a * po(a, t, 10 ** 9 + 7)\n        a %= m\n        t += 2\n    print(s % m)", "t = int(input())\n\ndef pow_mod(x, y, z):\n    number = 1\n    while y:\n        if y & 1:\n            number = number * x % z\n        y >>= 1\n        x = x * x % z\n    return number\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    total = 0\n    for i in range(n):\n        rem = 2 * i + 1\n        mul = int(pow_mod(a, rem, 1000000007))\n        a = a * mul % 1000000007\n        total += mul\n        total = total % 1000000007\n    print(total)", "t = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    sum1 = 0\n    next1 = a\n    for i in range(n):\n        power = 2 * i + 1\n        prod = pow(a, power, 1000000007)\n        sum1 = sum1 + prod\n        a = a * prod\n        a = a % 1000000007\n    print(sum1 % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, v) = list(map(int, input().split()))\n    j = 1\n    product = 0\n    while j <= n:\n        c = pow(v, 2 * j - 1, 1000000007)\n        product = (product + c) % 1000000007\n        v = c * v\n        v %= 1000000007\n        j = j + 1\n    print(product % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, v) = list(map(int, input().split()))\n    j = 1\n    product = 0\n    while j <= n:\n        c = pow(v, 2 * j - 1, 1000000007)\n        product += c\n        product %= 1000000007\n        v = c * v\n        v %= 1000000007\n        j = j + 1\n    print(product % 1000000007)", "def power(b, e):\n    a = 1\n    while e > 0:\n        if e % 2 == 1:\n            a = a * b % 1000000007\n        b = b * b % 1000000007\n        e //= 2\n    return a\n\ndef matrix(N, A):\n    c = A\n    s = 0\n    for i in range(1, N + 1):\n        p = power(c, 2 * i - 1)\n        s += p\n        c *= p\n        if s > 1000000007:\n            s %= 1000000007\n        if c > 1000000007:\n            c %= 1000000007\n    return s\nt = int(input())\nfor _ in range(t):\n    (N, A) = map(int, input().split())\n    ans = matrix(N, A)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    sum1 = 0\n    for j in range(n):\n        p = pow(a, 2 * j + 1, 1000000007)\n        sum1 += p\n        sum1 %= 1000000007\n        a *= p\n        a %= 1000000007\n    print(sum1 % 1000000007)", "import sys\n\ndef getInt():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef getArray():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef getStr():\n    return sys.stdin.readline().strip()\n\ndef into():\n    return int(sys.stdin.readline().strip())\n\ndef power(base, power):\n    MOD = 1000000007\n    result = 1\n    while power > 0:\n        if power % 2 == 1:\n            result = result * base % MOD\n        power = power // 2\n        base = base * base % MOD\n    return result\nt = into()\nwhile t:\n    (N, A) = getInt()\n    currentValueMatrix = A\n    ans = 0\n    MOD = 1000000007\n    i = 1\n    while i <= N:\n        elementsToBeMultiplied = 2 * i - 1\n        multipliedElements = power(currentValueMatrix, elementsToBeMultiplied) % MOD\n        currentValueMatrix = currentValueMatrix * multipliedElements % MOD\n        ans = (ans + multipliedElements) % MOD\n        i += 1\n    print(ans % MOD)\n    t -= 1", "MOD = 1000000007\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    tot = 0\n    p = 1\n    for i in range(1, n + 1):\n        a *= p % MOD\n        a %= MOD\n        p = pow(a, 2 * i - 1, MOD)\n        tot += p % MOD\n    print(tot % MOD)", "def main():\n    (n, a) = map(int, input().split())\n    tot = 0\n    mod = 1000000007\n    a %= mod\n    p = 1\n    for i in range(1, n + 1):\n        a %= mod\n        a *= p % mod\n        p = pow(a, 2 * i - 1, mod) % mod\n        tot += p % mod\n    print(int(tot % mod))\nfor _ in range(int(input())):\n    main()", "def main():\n    (n, a) = map(int, input().split())\n    tot = 0\n    mod = 1000000007\n    a %= mod\n    p = 1\n    for i in range(1, n + 1):\n        a %= mod\n        p %= mod\n        a *= p % mod\n        p = pow(a, 2 * i - 1, mod) % mod\n        tot += p % mod\n    print(int(tot % mod))\nfor _ in range(int(input())):\n    main()", "mod = 1000000007\nt = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    hak = 0\n    for i in range(n):\n        temp = pow(a, 2 * i + 1, mod)\n        hak = (hak + temp) % mod\n        a = a * temp % mod\n    print(hak)", "MOD = 1000000007\n\ndef power(x, y):\n    res = 1\n    x = x % MOD\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x % MOD\n        y = y >> 1\n        x = x * x % MOD\n    return res\nfor _ in range(int(input())):\n    (N, A) = list(map(int, input().split()))\n    op = 0\n    if A == 1:\n        print(1)\n        continue\n    i = 1\n    for _ in range(N):\n        p = power(A, i)\n        i += 2\n        op = (op + p) % MOD\n        A = A * p % MOD\n    print(op)", "for testCase in range(int(input())):\n    (n, a) = list(map(int, input().split()))\n    p = 1\n    sump = 0\n    for i in range(1, n + 1):\n        p = pow(a, 2 * i - 1, 1000000007)\n        sump += p\n        a = a * p % 1000000007\n    print(sump % (10 ** 9 + 7))", "bigmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(1, n + 1):\n        a %= bigmod\n        a *= p\n        p = pow(a, 2 * i - 1, bigmod)\n        ans += p\n    print(ans % bigmod)", "bigmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(1, n + 1):\n        a %= bigmod\n        a *= p\n        p = pow(a, 2 * i - 1, bigmod)\n        ans += p\n    print(ans % bigmod)", "bigmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(1, N + 1):\n        A %= bigmod\n        A *= p\n        p = pow(A, 2 * i - 1, bigmod)\n        ans += p\n    print(ans % bigmod)", "bigmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(0, N):\n        A %= bigmod\n        A *= p\n        p = pow(A, 2 * i + 1, bigmod)\n        ans += p\n    print(ans % bigmod)", "bigmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(0, N):\n        A %= bigmod\n        A *= p\n        p = pow(A, 2 * i + 1, bigmod)\n        ans += p\n    print(ans % bigmod)", "for _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(0, N):\n        A %= 1000000007\n        A *= p\n        p = pow(A, 2 * i + 1, 1000000007)\n        ans += p\n    print(ans % 1000000007)", "for _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(0, N):\n        A %= 1000000007\n        A *= p\n        p = pow(A, 2 * i + 1, 1000000007)\n        ans += p\n    print(ans % 1000000007)", "for _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(0, N):\n        A %= 1000000007\n        A *= p\n        p = pow(A, 2 * i + 1, 1000000007)\n        ans += p\n    print(ans % 1000000007)", "for _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(0, N):\n        A %= 1000000007\n        A *= p\n        p = pow(A, 2 * i + 1, 1000000007)\n        ans += p\n    print(ans % 1000000007)", "for _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(0, N):\n        A = A % 1000000007 * p\n        p = pow(A, 2 * i + 1, 1000000007)\n        ans += p\n    print(ans % 1000000007)", "for x in range(int(input())):\n    (N, A) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(0, N):\n        A = A % 1000000007 * (p % 1000000007)\n        p = pow(A, 2 * i + 1, 1000000007)\n        ans += p\n    print(ans % 1000000007)", "for x in range(int(input())):\n    (N, A) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(0, N):\n        noElementsRemoved = 2 * i + 1\n        A = A % 1000000007 * p % 1000000007\n        p = pow(A, noElementsRemoved, 1000000007)\n        ans = ans + p\n    print(ans % 1000000007)", "for _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    p = 1\n    ans = 0\n    for i in range(0, N):\n        noElementsRemoved = 2 * i + 1\n        A = A % 1000000007 * (p % 1000000007)\n        p = pow(A, noElementsRemoved, 1000000007)\n        ans = ans + p\n    print(ans % 1000000007)", "f = 1000000007\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    t = 0\n    for i in range(0, n):\n        t = t + pow(m % f, (2 * i + 1) % f, 1000000007) % 1000000007\n        m = m * pow(m % f, (2 * i + 1) % f, 1000000007) % 1000000007\n    print(t % 1000000007)", "import math\nm = int(1000000000.0 + 7)\n\ndef power(x, y, p):\n    res = 1\n    x = x % p\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x\n        y = y >> 1\n        x = x * x % p\n    return res\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = k\n    l = k\n    for i in range(1, n):\n        s += power(power(l, 2 * i, m), 2 * i + 1, m)\n        s = s % m\n        l = power(l, 2 * i, m)\n    print(s)", "k = 1000000007\nt = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    s = a\n    x = a\n    c = a\n    for i in range(1, n):\n        c = x * c % k\n        x = c\n        c = pow(c, 2 * i + 1, k)\n        s = (s + c) % k\n    print(s)", "import math\nt = int(input())\nMOD = 10 ** 9 + 7\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    sums = 0\n    for j in range(1, n + 1):\n        prod = pow(a, 2 * j - 1, MOD)\n        sums = (sums + prod) % MOD\n        a = a * prod % MOD\n    print(sums)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    p = 0\n    mod = 10 ** 9 + 7\n    for i in range(1, n + 1):\n        p_i = pow(a, 2 * i - 1, mod)\n        p = (p + p_i) % mod\n        prod = p_i % mod\n        a = a * prod % mod\n    ans = p\n    print(ans)", "import math\n\ndef power(x, y, p):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\nt = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    s = 0\n    x = a\n    m = 1000000007\n    for j in range(1, n + 1):\n        x = power(a, 2 * j - 1, m)\n        a = a % m * x % m % m\n        s = (s % m + x % m) % m\n    print(s)", "def power(x, n, p):\n    res = 1\n    while n > 0:\n        if n & 1 == 1:\n            res = res % p * x % p % p\n        n >>= 1\n        x = x % p * x % p % p\n    return res % p\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    p = a\n    a *= a\n    for i in range(2, n + 1):\n        temp = power(a, 2 * i - 1, 10 ** 9 + 7)\n        a = a % (10 ** 9 + 7) * temp % (10 ** 9 + 7) % (10 ** 9 + 7)\n        p = (p % (10 ** 9 + 7) + temp % (10 ** 9 + 7)) % (10 ** 9 + 7)\n    print(p)", "mod = 1000000007\n\ndef power(x, y, p):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\nfor iq in range(int(input())):\n    (n, a) = list(map(int, input().split()))\n    result = 0\n    for i in range(1, n + 1):\n        p = power(a, 2 * i - 1, mod)\n        result = (result + p) % mod\n        a = a * p % mod\n    print(result)", "m = 10 ** 9 + 7\n\ndef power(x, y):\n    if y == 0:\n        return 1\n    temp = power(x, y // 2)\n    if y % 2 == 0:\n        return temp * temp % m\n    else:\n        return x * temp * temp % m\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    i = 1\n    res = 0\n    while i <= n:\n        p = power(a, 2 * i - 1)\n        res += p\n        a = a * p % m\n        i += 1\n    print(res % m)", "t = int(input())\nm = 1000000007\n\ndef power(x, n):\n    res = 1\n    while n > 0:\n        if n % 2 == 1:\n            res = res * x % m\n        x = x * x % m\n        n = n // 2\n    return res\nfor each_t in range(t):\n    (n, a) = input().split()\n    (n, a) = (int(n), int(a))\n    pro = a\n    res = 0\n    for i in range(1, 2 * n, 2):\n        temp = power(pro, i)\n        pro = pro % m * (temp % m) % m\n        res = (res % m + temp % m) % m\n    print(res)", "for _ in range(int(input())):\n    ans = 0\n    odd = 1\n    (a, b) = map(int, input().split())\n    for i in range(a):\n        x = pow(b, odd, 1000000007)\n        ans += x\n        b = b * x\n        b = b % 1000000007\n        odd += 2\n    print(ans % 1000000007)", "for _ in range(int(input())):\n    ans = 0\n    odd = 1\n    (a, b) = map(int, input().split())\n    for i in range(a):\n        x = pow(b, odd, 1000000007)\n        ans += x\n        b = b * x\n        b = b % 1000000007\n        odd += 2\n    print(ans % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    ans = 0\n    x = 1\n    y = 1000000007\n    for i in range(1, n + 1):\n        a = x * a % y\n        p = pow(a, 2 * i - 1, y)\n        ans = (ans + p) % y\n        x = p\n    print(ans % y)", "MOD = 1000000007\n\ndef moduloMultiplication(a, b, mod):\n    res = 0\n    a = a % mod\n    while b:\n        if b & 1:\n            res = (res + a) % mod\n        a = 2 * a % mod\n        b >>= 1\n    return res\nfor _ in range(int(input())):\n    (n, a) = list(map(int, input().split()))\n    total = 0\n    i = 1\n    for j in range(n):\n        temp = pow(a, i, MOD)\n        total = total + temp\n        a = moduloMultiplication(a, temp, MOD)\n        i = i + 2\n    print(total % (10 ** 9 + 7))", "MOD = 10 ** 9 + 7\n\ndef power(x, y):\n    if y == 0:\n        return 1\n    elif y == 1:\n        return x\n    else:\n        R = power(x, y // 2)\n        if y % 2 == 0:\n            return R * R % MOD\n        else:\n            return R * x * R % MOD\ntests = int(input())\nfor _ in range(tests):\n    inputs = list(map(int, input().split(' ')))\n    (n, a) = (inputs[0], inputs[1])\n    totalSum = 0\n    for i in range(n):\n        removed = 2 * i + 1\n        p = power(a, removed)\n        totalSum += p\n        a = power(a, removed + 1)\n    print(totalSum % MOD)", "md = 1000000007\n\ndef power(a, n):\n    a = a % md\n    ans = 1\n    while n > 0:\n        if n & 1:\n            ans = ans * a % md\n        a = a * a % md\n        n = n >> 1\n    return ans\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    assignment = [0 for i in range(20)]\n    l = [0 for i in range(n)]\n    j = 1\n    ans = 0\n    a = 1\n    l[0] = m\n    abba = 3\n    for i in range(1, n):\n        m = m * l[i - 1] % 1000000007\n        l[i] = pow(m, abba, md)\n        abba += 2\n        cid = [0 for i in range(10)]\n        j += 2\n    ans = 0\n    kilo = 10\n    for i in l:\n        kilo += 1\n        style = None\n        ans = (ans % 1000000007 + i % 1000000007) % 1000000007\n    print(ans % 1000000007)", "md = 1000000007\n\ndef power(a, n):\n    a = a % md\n    ans = 1\n    while n > 0:\n        if n & 1:\n            ans = ans * a % md\n        a = a * a % md\n        n = n >> 1\n    return ans\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    assignment = [0 for i in range(20)]\n    l = [0 for i in range(n)]\n    j = 1\n    ans = 0\n    a = 1\n    l[0] = m\n    abba = 3\n    for i in range(1, n):\n        m = m * l[i - 1] % 1000000007\n        l[i] = power(m, abba)\n        abba += 2\n        cid = [0 for i in range(10)]\n        j += 2\n    ans = 0\n    kilo = 10\n    for i in l:\n        kilo += 1\n        style = None\n        ans = (ans % 1000000007 + i % 1000000007) % 1000000007\n    print(ans % 1000000007)"]