["T = int(input())\nfor _ in range(T):\n    (N, M, K) = map(int, input().split())\n    res = 0\n    for j in range(1, M + 1):\n        if j <= N and j % 2 == 1:\n            res = res ^ K + j + 1\n        elif j > N and N % 2 == 1:\n            res = res ^ K + j + 1\n    for j in range(M + 1, N + M):\n        if j > N and (N + M - j) % 2 == 1:\n            res = res ^ K + j + 1\n        elif j <= N and M % 2 == 1:\n            res = res ^ K + j + 1\n    print(res)", "T = int(input())\nfor _ in range(T):\n    (N, M, K) = map(int, input().split())\n    res = 0\n    for j in range(1, M + 1):\n        if j <= N and j % 2 == 1:\n            res = res ^ K + j + 1\n        elif j > N and N % 2 == 1:\n            res = res ^ K + j + 1\n    for j in range(M + 1, N + M):\n        if j > N and (N + M - j) % 2 == 1:\n            res = res ^ K + j + 1\n        elif j <= N and M % 2 == 1:\n            res = res ^ K + j + 1\n    print(res)\n    pass", "T = int(input())\nfor _ in range(T):\n    (N, M, K) = map(int, input().split())\n    res = 0\n    for j in range(1, M + 1):\n        if j <= N and j % 2 == 1:\n            res = res ^ K + j + 1\n        elif j > N and N % 2 == 1:\n            res = res ^ K + j + 1\n    for j in range(M + 1, N + M):\n        if j > N and (N + M - j) % 2 == 1:\n            res = res ^ K + j + 1\n        elif j <= N and M % 2 == 1:\n            res = res ^ K + j + 1\n    print(res)\n    pass", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    e = 0\n    for i in range(2, a + 2):\n        d = min(i - 1, b)\n        if d % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    for i in range(a + 2, a + b + 1):\n        f = min(a, b - (i - a) + 1)\n        if f % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    print(e)", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    e = 0\n    for i in range(2, a + 2):\n        d = min(i - 1, b)\n        if d % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    for i in range(a + 2, a + b + 1):\n        f = min(a, b - (i - a) + 1)\n        if f % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    print(e)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    for i in range(1, n + 1 - n % 2):\n        if i & 1:\n            ans ^= k + i + 1\n        else:\n            ans ^= k + i + m\n    if n & 1:\n        for i in range(1, m + 1):\n            ans ^= k + n + i\n    print(ans)", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    e = 0\n    for i in range(2, a + 2):\n        d = min(i - 1, b)\n        if d % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    for i in range(a + 2, a + b + 1):\n        f = min(a, b - (i - a) + 1)\n        if f % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    print(e)", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    e = 0\n    for i in range(2, a + 2):\n        d = min(i - 1, b)\n        if d % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    for i in range(a + 2, a + b + 1):\n        f = min(a, b - (i - a) + 1)\n        if f % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    print(e)", "T = int(input())\n\ndef solve(N, M, K):\n    if N > M:\n        (N, M) = (M, N)\n    ans = 0\n    for k1 in range(2, N + M + 1):\n        if (min(k1 - 1, N) - max(1, k1 - M) + 1) % 2:\n            ans = ans ^ k1 + K\n    return ans\nfor _ in range(T):\n    (N, M, K) = [int(s) for s in input().split()]\n    print(solve(N, M, K))", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    e = 0\n    for i in range(2, a + 2):\n        d = min(i - 1, b)\n        if d % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    for i in range(a + 2, a + b + 1):\n        f = min(a, b - (i - a) + 1)\n        if f % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    print(e)", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    e = 0\n    for i in range(2, a + 2):\n        d = min(i - 1, b)\n        if d % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    for i in range(a + 2, a + b + 1):\n        f = min(a, b - (i - a) + 1)\n        if f % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    print(e)", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    e = 0\n    for i in range(2, a + 2):\n        d = min(i - 1, b)\n        if d % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    for i in range(a + 2, a + b + 1):\n        f = min(a, b - (i - a) + 1)\n        if f % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    print(e)", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    e = 0\n    for i in range(2, a + 2):\n        d = min(i - 1, b)\n        if d % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    for i in range(a + 2, a + b + 1):\n        f = min(a, b - (i - a) + 1)\n        if f % 2 == 0:\n            pass\n        else:\n            e ^= i + c\n    print(e)", "n = int(input())\nfor i in range(n):\n    (r, c, k) = list(map(int, input().split(' ')))\n    res = 0\n    for i in range(1, r + 1):\n        if min(i, c) % 2 != 0:\n            res = res ^ k + i + 1\n    for j in range(2, c + 1):\n        if min(r, c - j + 1) % 2 != 0:\n            res = res ^ k + r + j\n    print(res)", "n = int(input())\nfor i in range(n):\n    (r, c, k) = list(map(int, input().split(' ')))\n    res = 0\n    for i in range(1, r + 1):\n        if min(i, c) % 2 != 0:\n            res = res ^ k + i + 1\n    for j in range(2, c + 1):\n        if min(r, c - j + 1) % 2 != 0:\n            res = res ^ k + r + j\n    print(res)", "n = int(input())\nfor i in range(n):\n    (r, c, k) = list(map(int, input().split(' ')))\n    res = 0\n    for i in range(1, r + 1):\n        if min(i, c) % 2 != 0:\n            res = res ^ k + i + 1\n    for j in range(2, c + 1):\n        if min(r, c - j + 1) % 2 != 0:\n            res = res ^ k + r + j\n    print(res)", "n = int(input())\nfor i in range(n):\n    (r, c, k) = list(map(int, input().split(' ')))\n    res = 0\n    for i in range(1, r + 1):\n        if min(i, c) % 2 != 0:\n            res = res ^ k + i + 1\n    for j in range(2, c + 1):\n        if min(r, c - j + 1) % 2 != 0:\n            res = res ^ k + r + j\n    print(res)", "n = int(input())\nfor i in range(n):\n    (r, c, k) = list(map(int, input().split(' ')))\n    res = 0\n    for i in range(1, r + 1):\n        if min(i, c) % 2 != 0:\n            res = res ^ k + i + 1\n    for j in range(2, c + 1):\n        if min(r, c - j + 1) % 2 != 0:\n            res = res ^ k + r + j\n    print(res)", "n = int(input())\nfor i in range(n):\n    (r, c, k) = list(map(int, input().split(' ')))\n    res = 0\n    for i in range(1, r + 1):\n        if min(i, c) % 2 != 0:\n            res = res ^ k + i + 1\n    for j in range(2, c + 1):\n        if min(r, c - j + 1) % 2 != 0:\n            res = res ^ k + r + j\n    print(res)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 != 0:\n            ans ^= k + i + 1\n    for j in range(2, m + 1):\n        if min(n, m - j + 1) % 2 != 0:\n            ans ^= k + n + j\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 != 0:\n            ans ^= k + i + 1\n    for j in range(2, m + 1):\n        if min(n, m - j + 1) % 2 != 0:\n            ans ^= k + n + j\n    print(ans)", "for i in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    x = 0\n    r = 0\n    if n % 2 == 0:\n        r = n\n    else:\n        r = n - 1\n        for i in range(1, m + 1):\n            x ^= k + n + i\n    for i in range(1, r + 1):\n        if i % 2 == 1:\n            x ^= k + i + 1\n        else:\n            x ^= k + i + m\n    print(x)", "for i in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    x = 0\n    r = 0\n    if n % 2 == 0:\n        r = n\n    else:\n        r = n - 1\n        for i in range(1, m + 1):\n            x ^= k + n + i\n    for i in range(1, r + 1):\n        if i % 2 == 1:\n            x ^= k + i + 1\n        else:\n            x ^= k + i + m\n    print(x)", "for i in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    x = 0\n    r = 0\n    if n % 2 == 0:\n        r = n\n    else:\n        r = n - 1\n        for i in range(1, m + 1):\n            x ^= k + n + i\n    for i in range(1, r + 1):\n        if i % 2 == 1:\n            x ^= k + i + 1\n        else:\n            x ^= k + i + m\n    print(x)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    l = [i for i in range(2 + k, k + m + n + 1)]\n    l2 = [-1 for i in range(2 + k, k + m + n + 1)]\n    ans = 0\n    m = min(m, n)\n    for i in range(1, m + 1):\n        l2[i - 1] = i\n    for i in range(-1, -m - 1, -1):\n        l2[i] = -i\n    for i in range(len(l2)):\n        if l2[i] == -1:\n            l2[i] = m\n    for i in range(len(l2)):\n        if l2[i] % 2 == 1:\n            ans ^= l[i]\n    print(ans)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    l = [i for i in range(2 + k, k + m + n + 1)]\n    l2 = [-1 for i in range(2 + k, k + m + n + 1)]\n    ans = 0\n    m = min(m, n)\n    for i in range(1, m + 1):\n        l2[i - 1] = i\n    for i in range(-1, -m - 1, -1):\n        l2[i] = -i\n    for i in range(len(l2)):\n        if l2[i] == -1:\n            l2[i] = m\n    for i in range(len(l2)):\n        if l2[i] % 2 == 1:\n            ans ^= l[i]\n    print(ans)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\ninf = 10 ** 20\nfor _ in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    l = [i for i in range(2 + k, k + m + n + 1)]\n    l2 = [inf for i in range(2 + k, k + m + n + 1)]\n    ans = 0\n    m = min(m, n)\n    for i in range(1, m + 1):\n        l2[i - 1] = min(l2[i - 1], i)\n    for i in range(-1, -m - 1, -1):\n        l2[i] = min(l2[i], -i)\n    for i in range(len(l2)):\n        if l2[i] == inf:\n            l2[i] = m\n    for i in range(len(l2)):\n        if l2[i] % 2 == 1:\n            ans ^= l[i]\n    print(ans)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    if n == 1 or m == 1:\n        for i in range(max(n, m)):\n            ans ^= k + 2 + i\n    else:\n        for i in range((n + m) // 2):\n            if i < min(n, m):\n                if i % 2 == 0:\n                    ans ^= k + i + 2\n                    ans ^= k + n + m - i\n            elif min(n, m) % 2 == 1:\n                ans ^= k + i + 2\n                ans ^= k + n + m - i\n        if (n + m) % 2 == 0 and max(n, m) % 2 == 1:\n            ans ^= k + (n + m) // 2 + 1\n    print(ans)", "from operator import ixor\nT = int(input())\nfor i in range(T):\n    (N, M, K) = map(int, input().split(' '))\n    sum1 = 0\n    for j in range(1, N + 1):\n        if min(j, M) % 2 != 0:\n            sum1 = sum1 ^ K + j + 1\n    for j in range(2, M + 1):\n        if min(M - j + 1, N) % 2 != 0:\n            sum1 = sum1 ^ K + N + j\n    print(sum1)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    if n > m:\n        (n, m) = (m, n)\n    for i in range(2, n + 1, 2):\n        ans ^= i + k\n    for i in range(n + m, m, -2):\n        ans ^= i + k\n    for i in range(n + 1, m + 1):\n        if n % 2 != 0:\n            ans ^= i + k\n    print(ans)", "import math\nimport random as rd\nimport bisect\nimport collections\n\ndef combination(n, r):\n    return math.comb(n, r)\n\ndef listing():\n    return list(map(int, input().split()))\n\ndef intp():\n    return int(input())\n\ndef inp():\n    return input()\n\ndef inpspl():\n    return input().split()\n\ndef mapping():\n    return map(int, input().split(' '))\n\ndef sqrt(n):\n    return math.sqrt(n)\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef p(s):\n    print(f'{s}')\n\ndef lsetl(lst):\n    return list(set(lst))\n\ndef nCr(n, r):\n    f = math.factorial\n    return f(n) // f(r) // f(abs(n - r))\n\ndef frequencyofall(lst):\n    return dict(collections.Counter(lst))\n\ndef ispowerof2(n):\n    return n & n - 1 == 0\n\ndef ispowerof3(n):\n    return math.log10(n) / math.log10(3) % 1 == 0\n\ndef dictionarysort(d):\n    return collections.OrderedDict(sorted(d.items()))\n\ndef bintoint(s):\n    return int(s, 2)\n\ndef solve():\n    for _ in range(int(input())):\n        (n, m, k) = map(int, input().split())\n        ans = 0\n        for i in range(1, n + 1):\n            if min(i, m) % 2 == 1:\n                ans ^= k + i + 1\n        for i in range(2, m + 1):\n            if min(n, m - i + 1) % 2 == 1:\n                ans ^= k + n + i\n        print(ans)\nsolve()", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    while m or n:\n        for i in range(1, min(n, m) + 1):\n            ans = ans ^ k + i + i\n        if n < m:\n            m = m - n\n            k += n\n        elif n > m:\n            n = n - m\n            k += m\n        else:\n            break\n    print(ans)", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef solve():\n\n    def FIND(start, end):\n        if start == end and start % 2 == 0:\n            return start\n        xor_r = 2 * XOR(end // 2)\n        xor_l = 2 * XOR((start - 1) // 2)\n        return xor_l ^ xor_r\n\n    def XOR(n):\n        c = n\n        n %= 4\n        if n == 0:\n            return c\n        if n == 1:\n            return 1\n        if n == 2:\n            return c + 1\n        if n == 3:\n            return 0\n    (n, m, k) = mp()\n    if n == 1:\n        pr(XOR(m) ^ 1)\n        return\n    if m == 1:\n        pr(XOR(n) ^ 1)\n        return\n    ans = 0\n    if n % 2:\n        ans = XOR(k + n + m) ^ XOR(k + n)\n    start = k + 2\n    end = k + n // 2 * 2\n    if start % 2:\n        ans ^= XOR(end) ^ FIND(start, end) ^ XOR(start - 1)\n    else:\n        ans ^= FIND(start, end)\n    start = k + m + 2\n    end = k + m + 2 + (n - 2) // 2 * 2\n    if start % 2:\n        ans ^= XOR(end) ^ FIND(start, end) ^ XOR(start - 1)\n    else:\n        ans ^= FIND(start, end)\n    print(ans)\nfor _ in range(inp()):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = list(map(int, input().split()))\n    if n > m:\n        (m, n) = (n, m)\n    res = 0\n    for i in range(n):\n        if i % 2 == 0:\n            res ^= i + k + 2\n            if i != m - 1:\n                res ^= n + m - i + k\n    if n % 2 == 1:\n        for j in range(1, m - n):\n            res ^= n + j + k + 1\n    print(res)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    if min(m, n) == 1:\n        for i in range(1, max(m, n)):\n            ans ^= k + i + 1\n    else:\n        ans = 0\n        x = min(m, n)\n        y = max(m, n)\n        for i in range(1, x, 2):\n            ans ^= k + i + 1\n        if x & 1:\n            for i in range(x, y + 1):\n                ans ^= k + i + 1\n        for i in range(x + y - 1, y, -2):\n            ans ^= k + i + 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 == 1:\n            ans ^= i + 1 + k\n    for j in range(2, m + 1):\n        if min(n, m - j + 1) % 2 == 1:\n            ans ^= j + n + k\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 == 1:\n            ans ^= k + i + 1\n    for j in range(2, m + 1):\n        if min(n, m - j + 1) % 2 == 1:\n            ans ^= k + n + j\n    print(ans)", "for _ in range(int(input())):\n    (N, M, K) = map(int, input().strip().split())\n    last = 0\n    for i in range(1, N // 2 + 1):\n        last ^= K + i * 2\n        last ^= K + M + i * 2\n    if N % 2 != 0:\n        for i in range(K + N + 1, K + N + M + 1):\n            last ^= i\n    print(last)", "for _ in range(int(input())):\n    (N, M, K) = map(int, input().split())\n    last = 0\n    for i in range(1, N // 2 + 1):\n        last ^= K + i * 2\n        last ^= K + M + i * 2\n    if N % 2 != 0:\n        for i in range(K + N + 1, K + N + M + 1):\n            last ^= i\n    print(last)", "for _ in range(int(input())):\n    (N, M, K) = map(int, input().split())\n    last = 0\n    for i in range(1, N // 2 + 1):\n        last ^= K + i * 2\n        last ^= K + M + i * 2\n    if N % 2 != 0:\n        for i in range(K + N + 1, K + N + M + 1):\n            last ^= i\n    print(last)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    o = 0\n    for i in range(1, m + 1):\n        j = min(i, n)\n        if j % 2 == 1:\n            o ^= k + i + 1\n    for i in range(2, n + 1):\n        j = min(n - i + 1, m)\n        if j % 2 == 1:\n            o ^= k + m + i\n    print(o)", "for _ in range(int(input())):\n    (N, M, K) = map(int, input().strip().split())\n    last = 0\n    for i in range(1, N // 2 + 1):\n        last ^= K + i * 2\n        last ^= K + M + i * 2\n    if N % 2 != 0:\n        for i in range(K + N + 1, K + N + M + 1):\n            last ^= i\n    print(last)", "for _ in range(int(input())):\n    (N, M, K) = map(int, input().strip().split())\n    last = 0\n    for i in range(1, N // 2 + 1):\n        last ^= K + i * 2\n        last ^= K + M + i * 2\n    if N % 2 != 0:\n        for i in range(K + N + 1, K + N + M + 1):\n            last ^= i\n    print(last)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = 0\n    for i in range(2, m + n + 1):\n        l = max(1, i - m)\n        r = min(n, i - 1)\n        if r >= l and (r - l + 1) % 2 == 1:\n            a ^= k + i\n    print(a)", "def findxor(s):\n    if s % 4 == 0:\n        return s\n    elif s % 4 == 1:\n        return 1\n    elif s % 4 == 2:\n        return s + 1\n    elif s % 4 == 3:\n        return 0\nfor t in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    ans = findxor(k + 1) ^ findxor(k + m + 1)\n    for i in range(2, n + 1):\n        ans = ans ^ (findxor(k + i) ^ findxor(k + m + i))\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (x, y, k) = map(int, input().split())\n    if x > y:\n        (x, y) = (y, x)\n    ans = 0\n    for m in range(1, y + 1):\n        c = min(x, m)\n        if c & 1 == 1:\n            ans = ans ^ k + 1 + m\n    for n in range(2, x + 1):\n        c = x - n + 1\n        if c & 1 == 1:\n            ans = ans ^ k + n + m\n    print(ans)", "T = int(input())\n\ndef xor(T):\n    mod = T % 4\n    if mod == 0:\n        return T\n    if mod == 1:\n        return 1\n    if mod == 2:\n        return T + 1\n    if mod == 3:\n        return 0\nfor _ in range(T):\n    (N, M, K) = map(int, input().split())\n    s = xor(1 + K) ^ xor(1 + K + M)\n    for i in range(2, N + 1):\n        s = s ^ xor(i + K) ^ xor(i + M + K)\n    print(s)", "t = int(input())\nwhile t > 0:\n    (N, M, K) = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(1, N + 1):\n        if min(i, M) % 2 == 1:\n            ans ^= K + i + 1\n    for j in range(2, M + 1):\n        if min(N, M - j + 1) % 2 == 1:\n            ans ^= K + N + j\n    print(ans)\n    t -= 1", "T = int(input())\nfor i in range(T):\n    (n, m, k) = tuple(map(int, input().split()))\n    res = 0\n    n_v = 0\n    if n % 2 == 0:\n        n_v = n\n    else:\n        n_v = n - 1\n        for i in range(1, m + 1):\n            res ^= k + n + i\n    for i in range(1, n_v + 1):\n        if i % 2 == 1:\n            res ^= k + i + 1\n        else:\n            res ^= k + i + m\n    print(res)", "for _ in range(int(input())):\n    (n, m, k) = tuple(map(int, input().split()))\n    res = 0\n    n_v = 0\n    if n % 2 == 0:\n        n_v = n\n    else:\n        n_v = n - 1\n        for i in range(1, m + 1):\n            res ^= k + n + i\n    for i in range(1, n_v + 1):\n        if i % 2 == 1:\n            res ^= k + i + 1\n        else:\n            res ^= k + i + m\n    print(res)", "for _ in range(int(input())):\n    (n, m, k) = tuple(map(int, input().split()))\n    res = 0\n    n_v = 0\n    if n % 2 == 0:\n        n_v = n\n    else:\n        n_v = n - 1\n        for i in range(1, m + 1):\n            res ^= k + n + i\n    for i in range(1, n_v + 1):\n        if i % 2 == 1:\n            res ^= k + i + 1\n        else:\n            res ^= k + i + m\n    print(res)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    c = 0\n    x = 0\n    if n % 2 == 0:\n        x = n\n    else:\n        x = n - 1\n    for i in range(1, x + 1):\n        if i % 2 == 1:\n            c ^= k + i + 1\n        else:\n            c ^= k + m + i\n    if n % 2 == 1:\n        for j in range(1, m + 1):\n            c ^= n + j + k\n    print(c)", "def solve(n, m, k):\n    res = 0\n    for i in range(1, n):\n        if i % 2 == 0:\n            res ^= k + i + m\n        else:\n            res ^= k + i + 1\n    if n % 2 == 0:\n        res ^= k + n + m\n    else:\n        for j in range(1, m + 1):\n            res ^= k + j + n\n    return res\n\ndef main():\n    for _ in range(int(input())):\n        (n, m, k) = map(int, input().split())\n        ans = solve(n, m, k)\n        print(ans)\nmain()", "t = int(input())\nwhile t:\n    (n, m, k) = map(int, input().split())\n    v = k + 1 + 1\n    v = v ^ k + m + n\n    c = 2\n    for i in range(k + 3, k + n + 2):\n        y = min(c, m)\n        if y % 2 != 0:\n            v = v ^ i\n        c += 1\n    c = 2\n    for i in range(k + n + 2, k + n + m):\n        y = min(n, m - c + 1)\n        if y % 2 != 0:\n            v = v ^ i\n        c += 1\n    print(v)\n    t -= 1", "def xor(number):\n    if number % 4 == 0:\n        return number\n    elif number % 4 == 1:\n        return 1\n    elif number % 4 == 2:\n        return number + 1\n    else:\n        return 0\nT = int(input())\nfor _ in range(T):\n    (N, M, K) = map(int, input().split())\n    lst = [xor(K + i) ^ xor(K + i + M) for i in range(1, N + 1)]\n    res = 0\n    for e in lst:\n        res ^= e\n    print(res)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    sum = 0\n    for i in range(1, n):\n        count = min(m, i)\n        if count % 2 == 0:\n            pass\n        else:\n            sum = sum ^ i + 1 + k\n    for j in range(1, m + 1):\n        count1 = min(n, m - j + 1)\n        if count1 % 2 == 0:\n            pass\n        else:\n            sum = sum ^ j + n + k\n    print(sum)", "def solve():\n    (n, m, k) = inl()\n    ans = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 != 0:\n            ans ^= k + i + 1\n    for j in range(2, m + 1):\n        if min(n, m - j + 1) % 2 != 0:\n            ans ^= k + n + j\n    print(ans)\n\ndef inl():\n    return [int(i) for i in input().split()]\n\ndef inp():\n    return int(input())\nt = 1\nt = inp()\nwhile t:\n    solve()\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (m, n, k) = map(int, input().split())\n    ans = 0\n    for i in range(1, m + 1):\n        if min(i, n) & 1 == 1:\n            ans ^= k + i + 1\n    for j in range(2, n + 1):\n        if min(m, n - j + 1) & 1 == 1:\n            ans ^= k + j + m\n    print(ans)", "for t in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    c = 0\n    for i in range(1, n + 1):\n        x = min(i, m)\n        if x % 2 != 0:\n            c ^= i + k + 1\n    for j in range(2, m + 1):\n        x = min(n, m - j + 1)\n        if x % 2 != 0:\n            c ^= n + k + j\n    print(c)", "for _ in range(int(input())):\n    s = 0\n    (n, m, k) = map(int, input().split())\n    for i in range(1, n + 1):\n        if min(i, m) % 2 == 1:\n            s ^= k + i + 1\n    for j in range(2, m + 1):\n        if min(n, m - j + 1) % 2 == 1:\n            s ^= k + j + n\n    print(s)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 == 1:\n            a ^= i + 1 + k\n    for i in range(2, m + 1):\n        if min(n, m - i + 1) % 2 == 1:\n            a ^= i + n + k\n    print(a)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 == 1:\n            a ^= i + 1 + k\n    for i in range(2, m + 1):\n        if min(n, m - i + 1) % 2 == 1:\n            a ^= i + n + k\n    print(a)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = [0] * (1 + m + n)\n    for i in range(2, n + 1):\n        l[i] += 1\n        l[i + m - 1] -= 1\n    l[1] = 1\n    for i in range(2, n + m + 1):\n        l[i] += l[i - 1]\n    ans = 0\n    for i in range(1, n + m):\n        if l[i] % 2:\n            ans ^= i + 1 + k\n    print(ans)", "def prog_name():\n    (n, m, k) = map(int, input().split())\n    x = 0\n    c = 0\n    if n % 2 == 0:\n        x = n\n    else:\n        x = n - 1\n    for x in range(1, x + 1):\n        if x % 2 == 1:\n            c ^= k + x + 1\n        else:\n            c ^= k + m + x\n    if n % 2 == 1:\n        for y in range(1, m + 1):\n            c ^= k + y + n\n    print(c)\nt = int(input())\nfor unique in range(t):\n    prog_name()", "for _ in range(int(input())):\n    (N, M, K) = map(int, input().strip().split())\n    last = 0\n    for i in range(1, N // 2 + 1):\n        last ^= K + i * 2\n        last ^= K + M + i * 2\n    if N % 2 != 0:\n        for i in range(K + N + 1, K + N + M + 1):\n            last ^= i\n    print(last)", "test_case = int(input())\nfor n1 in range(test_case):\n    (n, m, k) = [int(i) for i in input().split(' ')]\n    l = list(range(1, min(n, m))) + [min(n, m)] * (abs(m - n) + 1) + list(range(1, min(n, m)))[::-1]\n    a = 0\n    for i in range(len(l)):\n        a ^= (k + 2 + i) * (l[i] % 2)\n    print(a)", "try:\n    t = int(input())\n    input_str = []\n    for i in range(t):\n        input_str.append(input())\n    for inputt in input_str:\n        (rows, cols, k) = [int(ele) for ele in inputt.split()]\n        res = 0\n        for i in range(1, rows + 1):\n            if min(i, cols) % 2 == 1:\n                res ^= k + i + 1\n        for j in range(2, cols + 1):\n            if min(rows, cols - j + 1) % 2 == 1:\n                res ^= k + rows + j\n        print(res)\nexcept:\n    pass", "try:\n    t = int(input())\n    for i in range(t):\n        instring = input()\n        (rows, cols, k) = [int(ele) for ele in instring.split()]\n        res = 0\n        for i in range(1, rows + 1):\n            if min(i, cols) % 2 == 1:\n                res ^= k + i + 1\n        for j in range(2, cols + 1):\n            if min(rows, cols - j + 1) % 2 == 1:\n                res ^= k + rows + j\n        print(res)\nexcept:\n    pass", "T = int(input())\nfor n1 in range(T):\n    (n, m, k) = [int(i) for i in input().split(' ')]\n    l = list(range(1, min(n, m))) + [min(n, m)] * (abs(m - n) + 1) + list(range(1, min(n, m)))[::-1]\n    a = 0\n    for i in range(len(l)):\n        a ^= (k + 2 + i) * (l[i] % 2)\n    print(a)", "for t in range(int(input())):\n    l = list(map(int, input().split()))\n    n = l[0]\n    m = l[1]\n    k = l[2]\n    r = []\n    for i in range(1, n + 1):\n        r.append((1 + i, i, 1))\n    for j in range(2, m + 1):\n        r.append((n + j, n, j))\n    ans = 0\n    for i in range(len(r)):\n        v = r[i]\n        if i < n:\n            if min(v[1], m) % 2 == 1:\n                ans = ans ^ k + v[0]\n        elif min(m - v[2] + 1, n) % 2 == 1:\n            ans = ans ^ k + v[0]\n    print(ans)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 == 1:\n            a ^= i + 1 + k\n    for i in range(2, m + 1):\n        if min(n, m - i + 1) % 2 == 1:\n            a ^= i + n + k\n    print(a)", "try:\n    t = int(input())\n    for _ in range(t):\n        (n, m, k) = map(int, input().split())\n        res = 0\n        for i in range(1, n + 1):\n            if min(i, m) % 2 != 0:\n                res ^= k + 1 + i\n        for j in range(2, m + 1):\n            if min(n, m - j + 1) % 2 != 0:\n                res ^= k + n + j\n        print(res)\nexcept:\n    pass", "try:\n    t = int(input())\n    for _ in range(t):\n        (n, m, k) = map(int, input().split())\n        res = 0\n        for i in range(1, n + 1):\n            if min(i, m) % 2 != 0:\n                res ^= k + 1 + i\n        for j in range(2, m + 1):\n            if min(n, m - j + 1) % 2 != 0:\n                res ^= k + n + j\n        print(res)\nexcept:\n    pass", "for _ in range(int(input())):\n    (r, c, k) = map(int, input().split())\n    ans = 0\n    for j in range(1, c + 1):\n        p = min(r - 1, j - 1) + 1\n        if p % 2:\n            ans ^= 1 + j + k\n    for i in range(2, r + 1):\n        p = min(c - 1, r - i) + 1\n        if p % 2:\n            ans ^= i + c + k\n    print(ans)", "import sys\nintinp = lambda : int(input())\n\ndef listinp(func=int):\n    return list(map(func, input().split()))\n\ndef nsepline(n, func=str):\n    return [func(input()) for _ in range(n)]\n\ndef printlist(li, glue=' '):\n    return glue.join(list(map(str, li)))\n\ndef fop(s, end='\\n'):\n    sys.stdout.write(str(s) + end)\n\ndef fip():\n    return sys.stdin.readline().strip()\nfintinp = lambda : int(fip())\n\ndef flistinp(func=int):\n    return list(map(func, fip().split()))\n\ndef fnsepline(n, func=str):\n    return [func(fip()) for _ in range(n)]\n\ndef inDifAr(a):\n    d = a[0:1] + [0] * len(a)\n    for i in range(1, len(a)):\n        d[i] = a[i] - a[i - 1]\n    return d\n\ndef update(l, r, x, d):\n    d[l] += x\n    d[r + 1] -= x\n\ndef updatedArr(a, d):\n    a[0] = d[0]\n    for i in range(1, len(a)):\n        a[i] = d[i] + a[i - 1]\ntest_cases = fintinp()\nfor _ in range(test_cases):\n    (n, m, k) = flistinp()\n    l = [0] * (n + m + 5)\n    D = inDifAr(l)\n    for i in range(n):\n        update(2 + i, 1 + i + m, 1, D)\n    updatedArr(l, D)\n    ans = 0\n    for i in range(2, n + m + 1):\n        if l[i] % 2 == 1:\n            ans ^= i + k\n    print(ans)", "T = int(input())\nans = []\nfor _ in range(T):\n    (N, M, K) = [int(i) for i in input().split()]\n    l = 1\n    a = None\n    X = min(N, M)\n    for i in range(K + 2, K + M + 1 + 1):\n        if a == None:\n            a = K + 2\n        elif l % 2 != 0:\n            a ^= i\n        l = min(l + 1, X)\n    l = 1\n    for i in range(K + N + M, K + M + 1, -1):\n        if l % 2 != 0:\n            a ^= i\n        l = min(l + 1, X)\n    ans.append(a)\nfor i in ans:\n    print(i)", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if n == m:\n        ans = k + 2\n        for i in range(2, n + 1):\n            ans ^= k + i + i\n        print(ans)\n        continue\n    ans = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 == 1:\n            ans = ans ^ i + 1 + k\n    for i in range(2, m + 1):\n        if min(n, m - i + 1) % 2 == 1:\n            ans = ans ^ i + n + k\n    print(ans)", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if n == m:\n        ans = k + 2\n        for i in range(2, n + 1):\n            ans ^= k + i + i\n        print(ans)\n        continue\n    ans = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 == 1:\n            ans = ans ^ i + 1 + k\n    for i in range(2, m + 1):\n        if min(n, m - i + 1) % 2 == 1:\n            ans = ans ^ i + n + k\n    print(ans)", "def solve(n, m, k):\n    res = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 == 1:\n            res = res ^ i + 1 + k\n    for i in range(2, m + 1):\n        if min(n, m - i + 1) % 2 == 1:\n            res = res ^ i + n + k\n    return res\nt = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    ans = solve(n, m, k)\n    print(ans)", "for t in range(int(input())):\n    (nr, nc, K) = map(int, input().split())\n    xor = 0\n    min_rc = min(nr, nc)\n    counts = [min_rc] * (nr + nc - 1)\n    for i in range(min_rc):\n        counts[i] = counts[-(i + 1)] = i + 1\n    for (i_plus_j, count) in zip(range(2, nc + nr + 1), counts):\n        if count % 2 != 0:\n            xor ^= K + i_plus_j\n    print(xor)", "import sys\ninput = sys.stdin.readline\nR = lambda : map(int, input().split())\nI = lambda : int(input())\nS = lambda : input().rstrip('\\n')\nL = lambda : list(R())\n\ndef solve():\n    (n, m, k) = R()\n    if m > n:\n        (n, m) = (m, n)\n    ans = 0\n    for i in range(1, n + 1):\n        t = min(i, m)\n        if t & 1:\n            ans ^= i + k + 1\n    for i in range(1, m):\n        t = m - i\n        if t & 1:\n            ans ^= n + i + 1 + k\n    print(ans)\nfor _ in range(I()):\n    solve()", "t = int(input())\nfor i in range(t):\n    a = 0\n    (n, m, k) = map(int, input().split())\n    for i in range(1, n + 1):\n        if min(i, m) % 2 == 1:\n            a ^= k + i + 1\n    for j in range(2, m + 1):\n        if min(n, m - j + 1) % 2 == 1:\n            a ^= k + n + j\n    print(a)", "def xor_calculator(n, m, k):\n    ans = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 != 0:\n            ans = ans ^ k + i + 1\n    for j in range(2, m + 1):\n        if min(n, m - j + 1) % 2 != 0:\n            ans = ans ^ n + j + k\n    return ans\nt = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    print(xor_calculator(n, m, k))", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    count = 1\n    ans = 0\n    for j in range(k + 2, k + m + 1):\n        if count >= n:\n            if n % 2 == 0:\n                break\n            else:\n                ans ^= j\n        elif count % 2 != 0:\n            ans ^= j\n        count += 1\n    count = 1\n    for j in range(k + m + n, k + m, -1):\n        if count >= m:\n            if m % 2 == 0:\n                break\n            else:\n                ans ^= j\n        elif count % 2 != 0:\n            ans ^= j\n        count += 1\n    print(ans)", "for t in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    dt = dict()\n    tp = k + 2\n    for i in range(1, n + 1):\n        dt[tp] = min(i, m)\n        tp += 1\n    for j in range(2, m + 1):\n        dt[tp] = min(n, m - j + 1)\n        tp += 1\n    ans = 0\n    for (key, value) in dt.items():\n        if value % 2:\n            ans = ans ^ key\n    print(ans)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    arr = [i for i in range(2, n + m + 1)]\n    diffarray = [0] * (n + m + 1)\n    for i in range(n):\n        diffarray[i] += 1\n        diffarray[i + m] -= 1\n    count = 0\n    ans = 0\n    for i in range(len(diffarray)):\n        count += diffarray[i]\n        if i <= len(arr):\n            if count % 2 != 0:\n                ans = ans ^ arr[i] + k\n    print(ans)", "try:\n    for i in range(int(input())):\n        (n, m, k) = map(int, input().split())\n        ans = 0\n        for i in range(1, n + 1):\n            if min(i, m) % 2 == 1:\n                ans ^= k + i + 1\n        for i in range(2, m + 1):\n            if min(n, m - i + 1) % 2 == 1:\n                ans ^= k + n + i\n        print(ans)\nexcept:\n    pass", "for _ in range(int(input())):\n    import numpy as np\n    (n, m, k) = map(int, input().split())\n    res = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 == 1:\n            res ^= k + i + 1\n    for j in range(2, m + 1):\n        if min(n, m - j + 1) % 2 == 1:\n            res ^= k + n + j\n    print(res)", "T = int(input())\nfor t in range(T):\n    (N, M, K) = [int(i) for i in input().split()]\n    ans = 0\n    j = 1\n    for i in range(K + 2, K + N + M + 1):\n        if j % 2 != 0:\n            ans = ans ^ i\n        if i <= min(N, M) + K:\n            j += 1\n        elif i >= K + max(N, M) + 1:\n            j -= 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    x = k + 2\n    y = k + n + m\n    sum1 = 0\n    for i in range(1, n + 1):\n        if min(i, m) % 2 != 0:\n            sum1 ^= k + i + 1\n    for i in range(2, m + 1):\n        if min(n, m - i + 1) % 2 != 0:\n            sum1 ^= k + n + i\n    print(sum1)", "t = int(input())\nr = []\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    rs = 0\n    xmax = max(n, m)\n    xmin = min(n, m)\n    for x in range(1, xmin // 2 + 1):\n        rs = rs ^ 2 * x + k\n        rs = rs ^ n + m - 2 * x + 2 + k\n    if xmin % 2 == 1:\n        for y in range(xmin // 2 + 1, xmax - xmin // 2 + 1):\n            rs = rs ^ xmin // 2 + 1 + y + k\n    r.append(rs)\nfor j in r:\n    print(j)", "for _ in range(int(input())):\n    x = 0\n    y = 0\n    (N, M, K) = map(int, input().split())\n    for i in range(1, N + 1):\n        if min(i, M) % 2 == 1:\n            x = x ^ K + i + 1\n    for j in range(2, M + 1):\n        if min(M - j + 1, N) % 2 == 1:\n            x = x ^ K + j + N\n    print(x)", "T = int(input())\nfor k in range(T):\n    (N, M, K) = [int(i) for i in input().split()]\n    an = 0\n    a = 1\n    for i in range(K + 2, K + N + M + 1):\n        if a % 2 != 0:\n            an = an ^ i\n        if i - K <= min(N, M):\n            a += 1\n        elif i - K + 1 >= max(N, M) + 2:\n            a -= 1\n    print(an)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    (n, m) = (min(n, m), max(n, m))\n    ans = 0\n    j = 2\n    for i in range(1, n):\n        if i % 2:\n            ans ^= j + k\n        j += 1\n    if n % 2:\n        while 1:\n            ans ^= j + k\n            j += 1\n            if j == m + n - n + 2:\n                break\n    j = m + n - n + 2\n    for i in range(n - 1, 0, -1):\n        if i % 2:\n            ans ^= j + k\n        j += 1\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (N, M, K) = map(int, input().split())\n    ans = 0\n    for i in range(1, N + 1):\n        if min(i, M) % 2 == 1:\n            ans ^= K + i + 1\n    for j in range(2, M + 1):\n        if min(N, M - j + 1) % 2 == 1:\n            ans ^= K + N + j\n    print(ans)", "t = int(input())\nfor x in range(t):\n    [n, m, k] = [int(y) for y in input().split()]\n    if m == n:\n        ans = 0\n        for i in range(1, m + 1):\n            ans ^= int(k + 2 * i)\n        print(ans)\n    elif m > n and n != 1:\n        ans = 0\n        if n % 2 == 0:\n            for i in range(1, int(n / 2) + 1):\n                ans ^= int(k + 2 * i) ^ int(k + m + 1 - i + n + 1 - i)\n        else:\n            for i in range(1, int((n + 1) / 2)):\n                ans ^= int(k + 2 * i) ^ int(k + m + 1 - i + n + 1 - i)\n            for i in range(int((n + 1) / 2), m - int((n - 1) / 2) + 1):\n                ans ^= int(k + (n + 1) / 2 + i)\n        print(ans)\n    elif n > m and m != 1:\n        temp = m\n        m = n\n        n = temp\n        ans = 0\n        if n % 2 == 0:\n            for i in range(1, int(n / 2) + 1):\n                ans ^= int(k + 2 * i) ^ int(k + m + 1 - i + n + 1 - i)\n        else:\n            for i in range(1, int((n + 1) / 2)):\n                ans ^= int(k + 2 * i) ^ int(k + m + 1 - i + n + 1 - i)\n            for i in range(int((n + 1) / 2), m - int((n - 1) / 2) + 1):\n                ans ^= int(k + (n + 1) / 2 + i)\n        print(ans)\n    elif m == 1:\n        ans = 0\n        for i in range(1, n + 1):\n            ans ^= int(k + i + m)\n        print(ans)\n    else:\n        ans = 0\n        for i in range(1, m + 1):\n            ans ^= int(k + n + i)\n        print(ans)"]