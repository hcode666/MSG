["test = int(input())\nfor i in range(test):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * (10 ** 5 + 1)\n    for i in range(n):\n        num = a[i]\n        b[num] += 1\n    maxi = max(b)\n    print(n - maxi)", "for _ in range(int(input())):\n    n = int(input())\n    lst = [int(x) for x in input().split()]\n    d = {}\n    for i in lst:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    l = list(d.values())\n    print(n - max(l))", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    a = list(d.values())\n    b = max(a)\n    print(x - b)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    m = max(c.values())\n    print(n - m)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = Counter(a)\n    d = max(d.values())\n    print(n - d)", "for i in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    n = list(d.values())\n    print(a - max(d.values()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    m = max(d.values())\n    c = 0\n    for v in d.values():\n        c += v\n    print(c - m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    d = {}\n    for i in li:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    k = d.keys()\n    f = list(d.values())\n    h = max(f)\n    l = len(li)\n    print(l - h)", "for i in range(int(input())):\n    a = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    for i in arr:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    n = list(d.values())\n    print(a - max(d.values()))", "for i in range(int(input())):\n    a = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    for i in arr:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    n = list(d.values())\n    print(a - max(d.values()))", "for i in range(int(input())):\n    a = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    for i in arr:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    n = list(d.values())\n    print(a - max(d.values()))", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    n = list(d.values())\n    print(k - max(d.values()))", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    d = {}\n    k = []\n    for i in lst:\n        if i not in d.keys():\n            d[i] = 1\n        else:\n            d[i] += 1\n    print(n - max(d.values()))", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    lis = list(map(int, input().split()))\n    d = {}\n    for i in lis:\n        if i not in d.keys():\n            d[i] = 1\n        else:\n            d[i] += 1\n    print(m - max(d.values()))", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    d = {}\n    k = []\n    for i in lst:\n        if i not in d.keys():\n            d[i] = 1\n        else:\n            d[i] += 1\n    print(n - max(d.values()))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dic = {}\n    for i in l:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    print(n - max(dic.values()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    d = {}\n    for i in lst:\n        if i not in d.keys():\n            d[i] = 1\n        else:\n            d[i] += 1\n    print(n - max(d.values()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    d = {}\n    for i in lst:\n        if i not in d.keys():\n            d[i] = 1\n        else:\n            d[i] += 1\n    print(n - max(d.values()))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    d = {}\n    for i in lst:\n        if i not in d.keys():\n            d[i] = 1\n        else:\n            d[i] += 1\n    print(n - max(d.values()))", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    d = {}\n    k = []\n    for i in lst:\n        if i not in d.keys():\n            d[i] = 1\n        else:\n            d[i] += 1\n    print(n - max(d.values()))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    dic = {}\n    for i in arr:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    print(N - max(dic.values()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = len(l)\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    m = max(d.values())\n    print(k - m)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dic = {}\n    for i in l:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    print(n - max(dic.values()))", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    d = {}\n    k = []\n    for i in lst:\n        if i not in d.keys():\n            d[i] = 1\n        else:\n            d[i] += 1\n    print(n - max(d.values()))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    dic = {}\n    for i in arr:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    print(N - max(dic.values()))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    dic = {}\n    for i in arr:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    print(N - max(dic.values()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    Dict = {}\n    for j in a:\n        if j in Dict:\n            Dict[j] += 1\n        else:\n            Dict[j] = 1\n    max_a = -1\n    for (key, value) in Dict.items():\n        if max_a < value:\n            max_a = value\n    print(len(a) - max_a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    freq = []\n    for i in range(n):\n        if l[i] not in d:\n            d[l[i]] = 1\n        else:\n            d[l[i]] += 1\n    for i in d:\n        freq.append(d[i])\n    print(n - max(freq))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    m1 = 0\n    for i in d.values():\n        m1 = max(m1, i)\n    print(n - m1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    freq = []\n    for i in range(n):\n        if l[i] not in d:\n            d[l[i]] = 1\n        else:\n            d[l[i]] += 1\n    for i in d:\n        freq.append(d[i])\n    print(n - max(freq))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = list(dict(Counter(a)).values())\n    print(n - max(l))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = list(dict(Counter(a)).values())\n    print(n - max(l))", "from collections import Counter\ntestcase = int(input())\nfor i in range(testcase):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = list(dict(Counter(l)).values())\n    print(n - max(k))", "from collections import Counter\ntestcase = int(input())\nfor i in range(testcase):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = list(dict(Counter(l)).values())\n    print(n - max(k))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    maxD = max(d.values())\n    print(n - maxD)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    d = list(map(int, input().split()))\n    l = len(d)\n    f = {}\n    for x in d:\n        if x in f:\n            f[x] += 1\n        else:\n            f[x] = 1\n    print(l - max(f.values()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    d = {}\n    for i in A:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    print(n - max(d.values()))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    d = list(map(int, input().split()))\n    l = len(d)\n    f = {}\n    for x in d:\n        if x in f:\n            f[x] += 1\n        else:\n            f[x] = 1\n    print(l - max(f.values()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    coin = list(map(int, input().split()))\n    dict_Coin = dict()\n    for ele in coin:\n        if ele in dict_Coin:\n            dict_Coin[ele] += 1\n        else:\n            dict_Coin[ele] = 1\n    max = 0\n    for key in dict_Coin:\n        if dict_Coin[key] > max:\n            max = dict_Coin[key]\n            pos = key\n    sum = 0\n    for key in dict_Coin:\n        if key != pos:\n            sum += dict_Coin[key]\n    print(sum)", "from collections import Counter\nfor x in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = list(dict(Counter(l)).values())\n    print(n - max(c))", "for _ in range(int(input())):\n    a = int(input())\n    n = list(map(int, input().split()))\n    dict1 = {}\n    for x in n:\n        if x in dict1:\n            dict1[x] += 1\n        else:\n            dict1[x] = 1\n    print(len(n) - max(dict1.values()))", "for _ in range(int(input())):\n    a = int(input())\n    n = list(map(int, input().split()))\n    dict1 = {}\n    for x in n:\n        if x in dict1:\n            dict1[x] += 1\n        else:\n            dict1[x] = 1\n    print(len(n) - max(dict1.values()))", "from statistics import mode\nt = int(input())\nfor i in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    m = mode(A)\n    ans = 0\n    for i in A:\n        if i == m:\n            ans += 1\n    print(N - ans)", "for _ in range(int(input())):\n    l = int(input())\n    arr = list(map(int, input().split()))\n    dict = {}\n    for a in arr:\n        if a in dict:\n            dict[a] += 1\n        else:\n            dict[a] = 1\n    print(len(arr) - max(dict.values()))", "for _ in range(int(input())):\n    a = int(input())\n    n = list(map(int, input().split()))\n    dict1 = {}\n    for x in n:\n        if x in dict1:\n            dict1[x] += 1\n        else:\n            dict1[x] = 1\n    print(len(n) - max(dict1.values()))", "from collections import Counter\nfor i in range(int(input())):\n    N = int(input())\n    A = [int(k) for k in input().split()]\n    A = Counter(A)\n    del A[A.most_common(1)[0][0]]\n    add = sum(A.values())\n    print(add)", "from collections import Counter\nfor i in range(int(input())):\n    N = int(input())\n    A = [int(k) for k in input().split()]\n    A = Counter(A)\n    del A[A.most_common(1)[0][0]]\n    add = sum(A.values())\n    print(add)", "from collections import Counter\nfor i in range(int(input())):\n    N = int(input())\n    A = [int(k) for k in input().split()]\n    A = Counter(A)\n    mst = dict(A.most_common())\n    del mst[next(iter(mst))]\n    add = sum(mst.values())\n    print(add)", "from collections import Counter\nfor x in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = list(dict(Counter(l)).values())\n    print(n - max(c))", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    countd = dict()\n    data = list(map(int, input().split()))\n    for d in data:\n        if d in countd:\n            countd[d] += 1\n        else:\n            countd[d] = 1\n    print(len(data) - max(countd.values()))", "for _ in range(int(input())):\n    a = int(input())\n    n = list(map(int, input().split()))\n    dict1 = {}\n    for x in n:\n        if x in dict1:\n            dict1[x] += 1\n        else:\n            dict1[x] = 1\n    print(len(n) - max(dict1.values()))", "import statistics\nfrom statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    m = mode(a)\n    print(n - a.count(m))", "for _ in range(int(input())):\n    a = int(input())\n    n = list(map(int, input().split()))\n    dict1 = {}\n    for x in n:\n        if x in dict1:\n            dict1[x] += 1\n        else:\n            dict1[x] = 1\n    print(len(n) - max(dict1.values()))", "import statistics\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (d, c) = ({}, 0)\n    for i in arr:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    temp = max(d, key=lambda x: d[x])\n    for i in arr:\n        if i == temp:\n            c += 1\n    print(n - c)", "import statistics\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    temp = statistics.mode(arr)\n    c = 0\n    for i in arr:\n        if i == temp:\n            c += 1\n    print(n - c)", "import statistics\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = statistics.mode(a)\n    c = 0\n    for i in a:\n        if i == m:\n            c += 1\n    print(n - c)", "from collections import Counter\nfor x in range(int(input())):\n    n = int(input())\n    a = [int(d) for d in input().split()]\n    d = dict(Counter(a))\n    m = max(list(d.values()))\n    print(n - m)", "n = int(input())\nfor i in range(n):\n    t = int(input())\n    lst = [int(i) for i in input().split(' ')][:t]\n    d = {}\n    for i in lst:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    m = max(d.values())\n    print(t - m)", "n = int(input())\nfor i in range(n):\n    t = int(input())\n    lst = [int(i) for i in input().split(' ')][:t]\n    d = {}\n    for i in lst:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    m = max(d.values())\n    print(t - m)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    m = max(d.values())\n    print(n - m)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    m = max(d.values())\n    print(n - m)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    m = max(d.values())\n    print(n - m)", "import collections\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    co = collections.Counter(arr)\n    mx = max(co.values())\n    print(n - mx)", "import collections\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    co = collections.Counter(arr)\n    mx = max(co.values())\n    print(n - mx)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = defaultdict(int)\n    for i in a:\n        d[i] += 1\n    ans = n - max(d.values())\n    print(ans)", "t = input()\nfor c in range(0, int(t)):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sets = {}\n    for i in arr:\n        if i not in sets:\n            sets[i] = 1\n        else:\n            sets[i] += 1\n    print(len(arr) - max(sets.values()))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sets = {}\n    for i in arr:\n        if i not in sets:\n            sets[i] = 1\n        else:\n            sets[i] += 1\n    print(len(arr) - max(sets.values()))", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    x = list(set(l))\n    for i in x:\n        d[i] = 0\n    for i in l:\n        d[i] += 1\n    max = None\n    for coin in d:\n        if max is None:\n            max = d[coin]\n        elif d[coin] > max:\n            max = d[coin]\n    print(n - max)\n    t -= 1", "def main():\n    testcases = int(input())\n    i = 0\n    while i < testcases:\n        N = int(input())\n        coins = input().split()\n        for j in range(len(coins)):\n            coins[j] = int(coins[j])\n        dic = make_zero(coins)\n        for coin in coins:\n            dic[coin] += 1\n        max = None\n        for coin in dic:\n            if max is None:\n                max = dic[coin]\n            elif dic[coin] > max:\n                max = dic[coin]\n        print(N - max)\n        i += 1\n\ndef make_zero(coins):\n    dic = {}\n    for coin in coins:\n        dic[coin] = 0\n    return dic\nmain()", "from statistics import mode\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = mode(a)\n    count = a.count(m)\n    print(len(a) - count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 1\n    f = {}\n    for i in a:\n        if i in f:\n            f[i] += 1\n            if m < f[i]:\n                m = f[i]\n        else:\n            f[i] = 1\n    print(n - m)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    dt = {}\n    for num in a:\n        dt[num] = dt.get(num, 0) + 1\n    print(n - max(list(dt.values())))", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))[:n]\n    dic = dict()\n    for i in lst:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    big = max(list(dic.values()))\n    print(n - big)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))[:n]\n    dic = dict()\n    for i in lst:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    big = max(list(dic.values()))\n    print(n - big)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mp = {}\n    res = 0\n    for i in a:\n        if i not in mp:\n            mp[i] = 1\n        else:\n            mp[i] += 1\n    for i in mp.values():\n        res = max(res, i)\n    print(n - res)", "testcases = int(input())\nfor i in range(testcases):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = {}\n    for c in arr:\n        if c not in count:\n            count[c] = 1\n        else:\n            count[c] += 1\n    print(len(arr) - max(count.values()))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    mp = {}\n    for i in range(n):\n        if arr[i] not in mp:\n            mp[arr[i]] = 1\n        else:\n            mp[arr[i]] += 1\n    res = []\n    for val in mp.values():\n        res.append(val)\n    print(n - max(res))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    mp = {}\n    for i in range(n):\n        if arr[i] not in mp:\n            mp[arr[i]] = 1\n        else:\n            mp[arr[i]] += 1\n    res = []\n    for val in mp.values():\n        res.append(val)\n    mx = max(res)\n    if mx == n:\n        print(n - 1)\n    else:\n        print(n - mx)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    mp = {}\n    for i in range(n):\n        if arr[i] not in mp:\n            mp[arr[i]] = 1\n        else:\n            mp[arr[i]] += 1\n    res = []\n    for val in mp.values():\n        res.append(val)\n    mx = max(res)\n    if mx == n:\n        print(n - 1)\n    else:\n        print(n - mx)", "for i in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split(' ')))\n    d = {}\n    for i in li:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    print(len(li) - max(d.values()))", "testcases = int(input())\nfor i in range(testcases):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = {}\n    for c in arr:\n        if c not in count:\n            count[c] = 1\n        else:\n            count[c] += 1\n    print(len(arr) - max(count.values()))", "T = int(input())\nfor i in range(0, T):\n    a = int(input())\n    b = input().split()\n    aa = 0\n    ab = {}\n    for j in b:\n        ab[j] = 0\n    for j in b:\n        ab[j] += 1\n    for j in b:\n        aa = max(ab[j], aa)\n    print(a - aa)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dic = Counter(a)\n    print(n - max(dic.values()))", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    piles_arr = list(map(int, input().split()))\n    piles_dict = {}\n    for count in piles_arr:\n        if count in piles_dict:\n            piles_dict[count] += 1\n        else:\n            piles_dict[count] = 1\n    print(length - max(piles_dict.values()))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    x = max(d, key=d.get)\n    print(len(a) - d[x])", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    d1 = {}\n    for i in arr:\n        if d1.get(i) is None:\n            d1[i] = 1\n        else:\n            d1[i] += 1\n    print(n - max(d1.values()))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = {}\n    count = 0\n    for i in a:\n        if c.get(i) is None:\n            c[i] = 1\n        else:\n            c[i] += 1\n    print(n - max(c.values()))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    d1 = {}\n    for i in arr:\n        if d1.get(i) is None:\n            d1[i] = 1\n        else:\n            d1[i] += 1\n    print(n - max(d1.values()))", "for testcases in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if l[i] in d:\n            d[l[i]] += 1\n        else:\n            d[l[i]] = 1\n    print(n - max(d.values()))", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    hash = {}\n    for m in a:\n        hash[m] = hash.get(m, 0) + 1\n    s = []\n    for m in hash.keys():\n        s.append((hash[m], m))\n    s.sort(reverse=True)\n    k = s[0][0]\n    print(n - k)", "for _ in range(int(input())):\n    n = int(input())\n    arr_no_of_coins = list(map(int, input().split()))\n    max_change_required = n\n    d = {}\n    for i in arr_no_of_coins:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    max_same = 0\n    for i in d:\n        if d[i] > max_same:\n            max_same = d[i]\n    print(n - max_same)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    listi = sorted(list(map(int, input().split())))\n    count_max = 0\n    count = 0\n    for i in range(len(listi)):\n        for j in range(i, len(listi)):\n            if listi[i] == listi[j]:\n                count = count + 1\n            else:\n                break\n        if count > count_max:\n            count_max = count\n            i = i + count - 1\n            count = 0\n        else:\n            i = i + count - 1\n            count = 0\n    print(n - count_max)\n    count = 0\n    count_max = 0", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    x = max(d, key=d.get)\n    print(len(a) - d[x])", "tt = int(input())\nfor i in range(tt):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    freq = [0] * int(100000.0 + 1)\n    for i in arr:\n        freq[i] += 1\n    print(n - max(freq))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    x = {}\n    for i in range(len(a)):\n        if a[i] in x:\n            x[a[i]] += 1\n        else:\n            x[a[i]] = 1\n    maxx = -9999\n    for (i, j) in x.items():\n        if j > maxx:\n            maxx = j\n    print(n - maxx)", "from collections import Counter\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n - max(Counter(a).values()))", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a = Counter(a)\n    print(n - max(list(a.values())))"]