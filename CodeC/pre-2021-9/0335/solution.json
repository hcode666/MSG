["for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = s = fv = sv = 0\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d in [f, s]:\n            if d == f:\n                fv = max(fv, v)\n            else:\n                sv = max(sv, v)\n                if sv > fv:\n                    (f, fv, s, sv) = (s, sv, f, fv)\n        elif v >= fv:\n            (f, s) = (d, f)\n            (fv, sv) = (v, fv)\n        elif v > sv:\n            sv = v\n            s = d\n    print(sv + fv)", "i = int(input())\nre = []\nfor _ in range(i):\n    k = input().split()\n    imp = []\n    for ele in range(int(k[0])):\n        imp.append(input().split())\n    dic = {}\n    for ele in imp:\n        if ele[0] in dic.keys():\n            if int(ele[1]) < int(dic[ele[0]]):\n                continue\n        dic[ele[0]] = ele[1]\n    fin = []\n    for ele in dic.values():\n        fin.append(int(ele))\n    fin.sort()\n    re.append(fin[-1] + fin[-2])\nfor ele in re:\n    print(ele)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = {}\n    for f in range(n):\n        (a, b) = map(int, input().split())\n        d[a] = max(d.get(a, 0), b)\n    e = sorted(d.values())\n    print(e[-1] + e[-2])", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    Food = dict()\n    for j in range(n):\n        (d, v) = list(map(int, input().split()))\n        if d in Food:\n            if Food[d] <= v:\n                Food[d] = v\n        else:\n            Food[d] = v\n    Max_food = sorted(list(Food.values()), reverse=1)\n    print(Max_food[0] + Max_food[1])", "t = int(input())\nfor t in range(t):\n    (n, m) = [int(i) for i in input().split()]\n    d = {}\n    for j in range(n):\n        s = [int(i) for i in input().split()]\n        if s[0] in d:\n            d[s[0]] = max(s[1], d[s[0]])\n        else:\n            d[s[0]] = s[1]\n    arr = sorted(d.items(), key=lambda x: -x[1])\n    print(arr[0][1] + arr[1][1])", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    di = {}\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d not in di.keys():\n            di[d] = v\n        else:\n            x = di[d]\n            di[d] = max(v, x)\n    l = []\n    for i in di:\n        l.append(di[i])\n    l.sort()\n    print(l[-1] + l[-2])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    day = {}\n    for i in range(n):\n        (d, t) = map(int, input().split())\n        if d not in day:\n            day[d] = t\n        elif t > day[d]:\n            day[d] = t\n    taste = sorted(day.values(), reverse=True)\n    print(taste[0] + taste[1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    day = {}\n    for i in range(n):\n        (d, t) = map(int, input().split())\n        if d not in day:\n            day[d] = t\n        elif t > day[d]:\n            day[d] = t\n    taste = sorted(day.values(), reverse=True)\n    print(taste[0] + taste[1])", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    D = {}\n    for __ in range(N):\n        (d, v) = map(int, input().split())\n        if d not in D:\n            D[d] = v\n        elif v > D[d]:\n            D[d] = v\n    L = sorted(D.values(), reverse=True)\n    print(L[0] + L[1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = []\n    v = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        d.append(a)\n        v.append(b)\n    m = {}\n    for i in range(n):\n        if d[i] not in m:\n            m[d[i]] = v[i]\n        elif v[i] > m[d[i]]:\n            m[d[i]] = v[i]\n    l = list(m.values())\n    l.sort(reverse=True)\n    s = l[0] + l[1]\n    print(s)", "T = int(input())\nfor _ in range(0, T):\n    (n, m) = map(int, input().split())\n    ld = {}\n    for i in range(0, n):\n        (d, v) = map(int, input().split())\n        if d not in ld:\n            ld[d] = v\n        elif ld[d] < v:\n            ld[d] = v\n    l = list(ld.values())\n    l = sorted(l)\n    print(l[-1] + l[-2])", "T = int(input())\nfor _ in range(0, T):\n    (n, m) = map(int, input().split())\n    ld = {}\n    for i in range(0, n):\n        (d, v) = map(int, input().split())\n        if d not in ld:\n            ld[d] = v\n        elif ld[d] < v:\n            ld[d] = v\n    l = list(ld.values())\n    l = sorted(l)\n    print(l[-1] + l[-2])", "T = int(input())\nfor _ in range(0, T):\n    (n, m) = map(int, input().split())\n    ld = {}\n    for i in range(0, n):\n        (d, v) = map(int, input().split())\n        if d not in ld:\n            ld[d] = v\n        elif ld[d] < v:\n            ld[d] = v\n    l = list(ld.values())\n    l = sorted(l)\n    print(l[-1] + l[-2])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = {}\n    for _ in range(n):\n        (d, v) = map(int, input().split())\n        if d not in x:\n            x[d] = v\n        elif x[d] > v:\n            pass\n        else:\n            x[d] = v\n    l = list(x.values())\n    l = sorted(l)\n    print(l[-1] + l[-2])", "T = int(input())\nfor i in range(T):\n    (n, m) = map(int, input().split())\n    f = s = fv = sv = 0\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d in [f, s]:\n            if d == f:\n                fv = max(fv, v)\n            else:\n                sv = max(sv, v)\n                if sv > fv:\n                    (f, fv, s, sv) = (s, sv, f, fv)\n        elif v >= fv:\n            (f, s) = (d, f)\n            (fv, sv) = (v, fv)\n        elif v > sv:\n            sv = v\n            s = d\n    print(sv + fv)", "T = int(input())\nfor i in range(T):\n    (n, m) = map(int, input().split())\n    f = s = fv = sv = 0\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d in [f, s]:\n            if d == f:\n                fv = max(fv, v)\n            else:\n                sv = max(sv, v)\n                if sv > fv:\n                    (f, fv, s, sv) = (s, sv, f, fv)\n        elif v >= fv:\n            (f, s) = (d, f)\n            (fv, sv) = (v, fv)\n        elif v > sv:\n            sv = v\n            s = d\n    print(sv + fv)", "T = int(input())\nfor i in range(T):\n    (n, m) = map(int, input().split())\n    f = s = fv = sv = 0\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d in [f, s]:\n            if d == f:\n                fv = max(fv, v)\n            else:\n                sv = max(sv, v)\n                if sv > fv:\n                    (f, fv, s, sv) = (s, sv, f, fv)\n        elif v >= fv:\n            (f, s) = (d, f)\n            (fv, sv) = (v, fv)\n        elif v > sv:\n            sv = v\n            s = d\n    print(sv + fv)", "(t, i) = (int(input()), 1)\n(j, d) = (1, {})\nwhile i <= t:\n    dishesdays = list(map(int, input().split()))\n    while j <= dishesdays[0]:\n        dv = list(map(int, input().split()))\n        if dv[0] not in d.keys():\n            d[dv[0]] = dv[1]\n        elif d[dv[0]] < dv[1]:\n            d[dv[0]] = dv[1]\n        j += 1\n    li = list(d.values())\n    li.sort(reverse=True)\n    print(li[0] + li[1])\n    j = 1\n    d = {}\n    i += 1", "(t, i) = (int(input()), 1)\n(j, d) = (1, {})\nwhile i <= t:\n    dishesdays = list(map(int, input().split()))\n    while j <= dishesdays[0]:\n        dv = list(map(int, input().split()))\n        if dv[0] not in d.keys():\n            d[dv[0]] = dv[1]\n        elif d[dv[0]] < dv[1]:\n            d[dv[0]] = dv[1]\n        j += 1\n    li = list(d.values())\n    li.sort(reverse=True)\n    print(li[0] + li[1])\n    j = 1\n    d = {}\n    i += 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = {}\n    for i in range(n):\n        (day, test) = map(int, input().split())\n        if day in d:\n            d[day] = max(d[day], test)\n        else:\n            d[day] = test\n    tests = list(d.values())\n    tests.sort()\n    print(tests[-1] + tests[-2])", "def solve(arr, n, m):\n    arr.sort(key=lambda x: x[1])\n    mp = {}\n    for i in range(n):\n        mp[arr[i][0]] = arr[i][1]\n    res = []\n    for val in mp.values():\n        res.append(val)\n    res.sort()\n    return res[-1] + res[-2]\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        new = [int(x) for x in input().split()]\n        arr.append(new)\n    print(solve(arr, n, m))", "t = int(input())\nfor k in range(t):\n    a = []\n    b = []\n    (c, d) = map(int, input().split())\n    for m in range(c):\n        (o, p) = map(int, input().split())\n        a.append(o)\n        b.append(p)\n    e = {}\n    for i in a:\n        e[i] = []\n    for j in range(len(b)):\n        e[a[j]].append(b[j])\n    f = []\n    for l in e:\n        f.append(max(e[l]))\n    f.sort()\n    print(f[len(f) - 1] + f[len(f) - 2])", "t = input()\nfor c in range(0, int(t)):\n    (n, m) = map(int, input().split())\n    lt = []\n    for i in range(n):\n        tempL = list(map(int, input().split()))\n        lt.append(tempL)\n    l = 0\n    sl = 0\n    d = {}\n    for i in lt:\n        d[i[0]] = 0\n    for i in lt:\n        d[i[0]] = max(d[i[0]], i[1])\n    lt = list(d.values())\n    for i in lt:\n        if i > l:\n            sl = l\n            l = i\n        elif i > sl:\n            sl = i\n    print(l + sl)", "t = int(input())\nfor _ in range(0, t):\n    (n, m) = map(int, input().split())\n    dct = dict()\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a not in dct:\n            dct[a] = b\n        elif b > dct[a]:\n            dct[a] = b\n    l = sorted(list(dct.values()))\n    sum1 = l[-1] + l[-2]\n    print(sum1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    lt = []\n    for i in range(n):\n        tempL = list(map(int, input().split()))\n        lt.append(tempL)\n    l = 0\n    sl = 0\n    d = {}\n    for i in lt:\n        d[i[0]] = 0\n    for i in lt:\n        d[i[0]] = max(d[i[0]], i[1])\n    lt = list(d.values())\n    for i in lt:\n        if i > l:\n            sl = l\n            l = i\n        elif i > sl:\n            sl = i\n    print(l + sl)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = [0] * n\n    v = [0] * n\n    for i in range(n):\n        (d[i], v[i]) = map(int, input().split())\n    f = {}\n    for i in range(len(d)):\n        if d[i] not in f:\n            f[d[i]] = v[i]\n        elif f[d[i]] < v[i]:\n            f[d[i]] = v[i]\n    m = 0\n    for i in f:\n        if f[i] > m:\n            m = f[i]\n    sum = m\n    for i in f:\n        if f[i] == m:\n            f[i] = 0\n            break\n    m = 0\n    for i in f:\n        if f[i] > m:\n            m = f[i]\n    print(sum + m)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    (day, taste) = ([], [])\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        day.append(a)\n        taste.append(b)\n    di = {}\n    for i in range(n):\n        if day[i] in di:\n            if di[day[i]] < taste[i]:\n                di[day[i]] = taste[i]\n        else:\n            di[day[i]] = taste[i]\n    final = list(di.values())\n    final.sort(reverse=True)\n    print(final[0] + final[1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    dc = {}\n    for x in range(n):\n        (di, vi) = map(int, input().split())\n        if di in dc:\n            if vi > dc[di]:\n                dc[di] = vi\n        else:\n            dc[di] = vi\n    ls = dc.values()\n    ls = sorted(ls, reverse=True)\n    print(ls[0] + ls[1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = {}\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a not in d:\n            d[a] = b\n        elif a in d and d[a] < b:\n            d[a] = b\n    l = []\n    for c in d.values():\n        l.append(c)\n    l.sort()\n    l.reverse()\n    print(l[0] + l[1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    di = {}\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        d = str(d)\n        if d not in di:\n            di.update({d: v})\n        else:\n            x = di[d]\n            if v > x:\n                di.update({d: v})\n    y = di.values()\n    y = sorted(list(y), reverse=True)\n    fi = y[0]\n    se = y[1]\n    ans = fi + se\n    if len(y) < 2:\n        ans = fi\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    (n, m) = map(int, input().split())\n    arr = [0] * m\n    max_day = 0\n    max_value = 0\n    next_max_day = 0\n    next_max_value = 0\n    for j in range(n):\n        (d, v) = map(int, input().split())\n        if v >= max_value:\n            if d != max_day:\n                next_max_day = max_day\n                next_max_value = max_value\n                max_day = d\n                max_value = v\n            else:\n                max_value = v\n        elif v >= next_max_value:\n            next_max_day = d\n            next_max_value = v\n        if max_value < next_max_value:\n            (next_max_value, max_value) = (max_value, next_max_value)\n            (next_max_day, max_day) = (max_day, next_max_day)\n    print(max_value + next_max_value)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    days = {}\n    taste = []\n    ds = 0\n    ts = 0\n    for i in range(n):\n        (d, t) = map(int, input().split())\n        if d in days:\n            if t > days[d]:\n                days[d] = t\n        else:\n            days[d] = t\n    for i in days:\n        taste.append(days[i])\n    taste = sorted(taste)\n    print(taste[len(taste) - 1] + taste[len(taste) - 2])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    li = [0] * (m + 1)\n    sum = 0\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        li[d] = max(li[d], v)\n    li.sort()\n    sum = li[-1] + li[-2]\n    print(sum)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    di = {}\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d in di:\n            if di[d] < v:\n                di[d] = v\n        else:\n            di[d] = v\n    li = []\n    for i in di.values():\n        li.append(i)\n    li.sort()\n    print(li[-1] + li[-2])", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    di = {}\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d in di:\n            if di[d] < v:\n                di[d] = v\n        else:\n            di[d] = v\n    li = []\n    for i in di.values():\n        li.append(i)\n    li.sort()\n    print(li[-1] + li[-2])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = {}\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a in d:\n            if d[a] < b:\n                d[a] = b\n        else:\n            d[a] = b\n    l = [i for i in d.values()]\n    l.sort()\n    print(l[-1] + l[-2])", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    d = {}\n    for _ in range(N):\n        (D, V) = map(int, input().split())\n        if D in d:\n            d[D] = max(d[D], V)\n        else:\n            d[D] = V\n    (largest, secondLargest) = (0, 0)\n    for i in d:\n        if d[i] > largest:\n            secondLargest = largest\n            largest = d[i]\n        elif d[i] > secondLargest:\n            secondLargest = d[i]\n    print(largest + secondLargest)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        l = list(map(int, input().split()))\n        arr.append(l)\n    arr = sorted(arr, key=lambda x: x[1], reverse=True)\n    cal = arr[0][1]\n    mon = [arr[0][0]]\n    tot = arr[0][0]\n    count = 1\n    for (i, j) in arr[1:]:\n        if i not in mon and count < 2:\n            cal += j\n            count += 1\n            if count >= 2:\n                break\n        mon.append(i)\n    print(cal)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append([int(i) for i in input().split()])\n    arr.sort(key=lambda x: -x[1])\n    sum = arr[0][1]\n    for i in range(1, n):\n        if arr[i][0] != arr[0][0]:\n            sum += arr[i][1]\n            break\n    print(sum)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append([int(i) for i in input().split()])\n    arr.sort(key=lambda x: -x[1])\n    sum = arr[0][1]\n    for i in range(1, n):\n        if arr[i][0] != arr[0][0]:\n            sum += arr[i][1]\n            break\n    print(sum)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append([int(i) for i in input().split()])\n    arr.sort(key=lambda x: -x[1])\n    sum = arr[0][1]\n    for i in range(1, n):\n        if arr[i][0] != arr[0][0]:\n            sum += arr[i][1]\n            break\n    print(sum)", "T = int(input())\n\ndef algo():\n    (N, M) = map(int, input().split(' '))\n    (a, b) = (0, 0)\n    (i, j) = (-1, -1)\n    for m in range(N):\n        (p, q) = map(int, input().split(' '))\n        if q > b:\n            if q > a:\n                if i != p:\n                    d = a\n                    a = q\n                    b = d\n                    d = i\n                    i = p\n                    j = d\n                else:\n                    a = q\n                    i = p\n            elif i != p:\n                b = q\n                j = p\n    print(a + b)\nfor i in range(T):\n    algo()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    my = {}\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d in my.keys():\n            if my[d] < v:\n                my[d] = v\n        else:\n            my[d] = v\n    m1 = 0\n    m2 = 0\n    for i in my.keys():\n        if my[i] > m1 and my[i] > m2:\n            m2 = m1\n            m1 = my[i]\n        elif my[i] > m2:\n            m2 = my[i]\n    print(m1 + m2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    my = {}\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d in my.keys():\n            if my[d] < v:\n                my[d] = v\n        else:\n            my[d] = v\n    m1 = 0\n    m2 = 0\n    for i in my.keys():\n        if my[i] > m1 and my[i] > m2:\n            m2 = m1\n            m1 = my[i]\n        elif my[i] > m2:\n            m2 = my[i]\n    print(m1 + m2)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = []\n    l = [0 for i in range(m + 2)]\n    v = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        d.append(x)\n        if l[x] < y:\n            l[x] = y\n        v.append(y)\n    m = 0\n    vm = max(v)\n    m += vm\n    l.sort()\n    print(m + l[-2])", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = []\n    l = [0 for i in range(m + 2)]\n    v = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        d.append(x)\n        if l[x] < y:\n            l[x] = y\n        v.append(y)\n    m = 0\n    vm = max(v)\n    ind = v.index(vm)\n    m += vm\n    l.sort()\n    print(m + l[-2])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = {}\n    a = 0\n    for i in range(n):\n        (k, v) = map(int, input().split())\n        if k not in d:\n            d[k] = v\n        elif d[k] < v:\n            d[k] = v\n    j = 0\n    for i in sorted(d.values(), reverse=True):\n        a += i\n        j += 1\n        if j == 2:\n            break\n    print(a)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = {}\n    a = 0\n    for i in range(n):\n        (k, v) = map(int, input().split())\n        if k not in d:\n            d[k] = v\n        elif d[k] < v:\n            d[k] = v\n    j = 0\n    for i in sorted(d.values(), reverse=True):\n        a += i\n        j += 1\n        if j == 2:\n            break\n    print(a)", "import operator\nt = int(input())\nwhile t != 0:\n    (n, m) = map(int, input().split())\n    s = {}\n    for i in range(n):\n        (di, vi) = map(int, input().split())\n        if di in s and s[di] < vi:\n            s[di] = vi\n        elif di not in s:\n            s[di] = vi\n    s = sorted(s.items(), key=operator.itemgetter(1), reverse=True)\n    print(s[0][1] + s[1][1])\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    l1 = [0] * x\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if l1[d - 1] < v:\n            l1[d - 1] = v\n    l1.sort()\n    print(l1[-1] + l1[-2])", "import math\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = [0 for j in range(m + 2)]\n    for j in range(n):\n        (day, taste) = map(int, input().split())\n        if d[day] < taste:\n            d[day] = taste\n    d.sort()\n    print(d[-1] + d[-2])", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    d = {}\n    for j in range(n):\n        (p, q) = list(map(int, input().split()))\n        if p not in d:\n            d[p] = q\n        elif d[p] < q:\n            d[p] = q\n    k = [x for x in d.values()]\n    m2 = max(k)\n    k.remove(m2)\n    m2 += max(k)\n    print(m2)", "for tc in range(int(input())):\n    (N, M) = list(map(int, input().split(' ')))\n    day_taste = {}\n    for i in range(N):\n        (P, Q) = list(map(int, input().split(' ')))\n        if P not in day_taste:\n            day_taste[P] = Q\n        elif day_taste[P] < Q:\n            day_taste[P] = Q\n    taste = [i for i in day_taste.values()]\n    max_tastiness = max(taste)\n    taste.remove(max_tastiness)\n    max_tastiness = max_tastiness + max(taste)\n    print(max_tastiness)", "t = int(input())\nfor tc in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for j in range(n):\n        (d, v) = map(int, input().split())\n        arr.append([v, d])\n    arr.sort(reverse=True)\n    res = 0\n    d = set()\n    k = 0\n    for i in range(n):\n        if arr[i][1] not in d:\n            res += arr[i][0]\n            d.add(arr[i][1])\n            k += 1\n        if k == 2:\n            break\n    print(res)", "import sys\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\nt = int(input())\nwhile t:\n    (n, m) = get_ints()\n    ar = [None] * m\n    for i in range(m):\n        ar[i] = 0\n    for i in range(n):\n        (a, b) = get_ints()\n        a = a - 1\n        ar[a] = max(ar[a], b)\n    ar.sort()\n    print(ar[-1] + ar[-2])\n    t = t - 1", "t = int(input())\nwhile t:\n    (n, m) = [int(x) for x in input().split()]\n    ar = [None] * m\n    for i in range(m):\n        ar[i] = 0\n    for i in range(n):\n        (a, b) = [int(x) for x in input().split()]\n        a = a - 1\n        ar[a] = max(ar[a], b)\n    ar.sort()\n    print(ar[-1] + ar[-2])\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    d = dict()\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        (day, v) = map(int, input().split())\n        try:\n            if v > d[day]:\n                d[day] = v\n        except KeyError:\n            d[day] = v\n    temp = []\n    for j in d:\n        temp.append(d[j])\n    temp.sort()\n    print(temp[len(temp) - 1] + temp[len(temp) - 2])", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 0\n    d = []\n    for j in range(n):\n        v = list(map(int, input().split()))\n        v.reverse()\n        d.append(v)\n    d.sort()\n    maxi = d[n - 1][0]\n    for j in range(n - 2, -1, -1):\n        if d[j][1] != d[-1][1]:\n            ans += d[j][0]\n            break\n    ans += maxi\n    print(ans)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 0\n    d = []\n    for j in range(n):\n        v = list(map(int, input().split()))\n        v.reverse()\n        d.append(v)\n    d.sort()\n    maxi = d[n - 1][0]\n    for j in range(n - 2, -1, -1):\n        if d[j][1] != d[-1][1]:\n            ans += d[j][0]\n            break\n    ans += maxi\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (dishes, num_days) = map(int, input().split())\n    taste_l = [0] * num_days\n    for _ in range(dishes):\n        (day, taste) = map(int, input().split())\n        if taste_l[day - 1] < taste:\n            taste_l[day - 1] = taste\n    a = max(taste_l)\n    taste_l.remove(a)\n    b = max(taste_l)\n    print(a + b)", "t = int(input())\nfor _ in range(t):\n    (dishes, num_days) = map(int, input().split())\n    taste_l = [0] * num_days\n    for _ in range(dishes):\n        (day, taste) = map(int, input().split())\n        taste_l[day - 1] = max(taste_l[day - 1], taste)\n    taste_l.sort()\n    print(taste_l[-1] + taste_l[-2])", "t = int(input())\nfor _ in range(t):\n    (dishes, num_days) = list(map(int, input().split()))\n    taste_l = [0] * num_days\n    for _ in range(dishes):\n        (day, taste) = list(map(int, input().split()))\n        taste_l[day - 1] = max(taste_l[day - 1], taste)\n    a = max(taste_l)\n    taste_l.remove(a)\n    b = max(taste_l)\n    print(a + b)", "T = int(input())\nfor i in range(T):\n    (n, m) = list(map(int, input().split()))\n    val = [0] * m\n    for i in range(n):\n        (d, v) = list(map(int, input().split()))\n        if val[d - 1] <= v:\n            val[d - 1] = v\n    val.sort()\n    print(val[-1] + val[-2])", "test = int(input())\nfor _ in range(test):\n    (n, m) = list(map(int, input().split()))\n    val = [0] * m\n    for i in range(n):\n        (d, v) = list(map(int, input().split()))\n        if val[d - 1] <= v:\n            val[d - 1] = v\n    val.sort()\n    print(val[-1] + val[-2])", "import math\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = [0 for j in range(m + 2)]\n    for j in range(n):\n        (day, tast) = map(int, input().split())\n        if d[day] < tast:\n            d[day] = tast\n    d.sort()\n    print(d[-1] + d[-2])", "import math\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = [0 for j in range(m + 2)]\n    for j in range(n):\n        (day, tast) = map(int, input().split())\n        if d[day] < tast:\n            d[day] = tast\n    d.sort()\n    print(d[-1] + d[-2])", "t = int(input())\nwhile t > 0:\n    t -= 1\n    tmpText1 = input()\n    n = int(tmpText1.split(' ')[0])\n    m = int(tmpText1.split(' ')[1])\n    arr = [0 for i in range(m)]\n    for i in range(n):\n        tmpText2 = input()\n        d = int(tmpText2.split(' ')[0])\n        v = int(tmpText2.split(' ')[1])\n        if arr[d - 1] < v:\n            arr[d - 1] = v\n    arr.sort()\n    tot = arr[m - 2] + arr[m - 1]\n    print(tot)", "tc = int(input())\nfor c in range(tc):\n    (n, m) = map(int, input().split())\n    arr = [-1] * (m + 1)\n    for _ in range(n):\n        (d, v) = map(int, input().split())\n        arr[d] = max(arr[d], v)\n    m = -1\n    sm = -1\n    for i in arr:\n        if i >= m:\n            sm = m\n            m = i\n        elif i > sm:\n            sm = i\n    print(m + sm)", "import math\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = [0 for j in range(m + 2)]\n    for j in range(n):\n        (day, tast) = map(int, input().split())\n        if d[day] < tast:\n            d[day] = tast\n    d.sort()\n    print(d[-1] + d[-2])", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    hash_map = {}\n    for j in range(n):\n        (days, tastiness) = map(int, input().split())\n        if days in hash_map:\n            if hash_map[days] < tastiness:\n                hash_map[days] = tastiness\n        else:\n            hash_map[days] = tastiness\n    taste = list(hash_map.values())\n    taste = sorted(taste, reverse=True)\n    print(taste[0] + taste[1])", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    d = defaultdict(int)\n    for i in range(n):\n        (g, v) = map(int, input().split())\n        if d[g] < v:\n            d[g] = v\n    l = sorted(d.values(), reverse=True)\n    print(l[0] + l[1])", "t = int(input())\nfor i in range(t):\n    arr = []\n    day = []\n    (n, m) = map(int, input().split())\n    sum = 0\n    for m in range(n):\n        (d, v) = map(int, input().split())\n        arr.append([d, v])\n    arr.sort(reverse=True, key=lambda x: x[1])\n    for k in range(n):\n        if arr[k][0] not in day:\n            sum += arr[k][1]\n            day.append(arr[k][0])\n        if len(day) == 2:\n            break\n    print(sum)", "t = int(input())\nfor i in range(t):\n    arr = []\n    day = []\n    (n, m) = map(int, input().split())\n    sum = 0\n    for m in range(n):\n        (d, v) = map(int, input().split())\n        arr.append([d, v])\n    arr.sort(reverse=True, key=lambda x: x[1])\n    for k in range(n):\n        if arr[k][0] not in day:\n            sum += arr[k][1]\n            day.append(arr[k][0])\n        if len(day) == 2:\n            break\n    print(sum)", "t = int(input())\nfor _ in range(t):\n    days_dist = {}\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d in days_dist:\n            if days_dist[d] < v:\n                days_dist[d] = v\n        else:\n            days_dist[d] = v\n    tot = 0\n    for a in range(2):\n        (max_1, val) = (0, 0)\n        for ele in days_dist:\n            if days_dist[ele] > max_1:\n                max_1 = days_dist[ele]\n                val = ele\n        tot += max_1\n        del days_dist[val]\n    print(tot)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = [-1] * (m + 1)\n    for _ in range(n):\n        (d, v) = map(int, input().split())\n        arr[d] = max(arr[d], v)\n    m = -1\n    sm = -1\n    for i in arr:\n        if i >= m:\n            sm = m\n            m = i\n        elif i > sm:\n            sm = i\n    print(m + sm)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 0\n    d = []\n    for j in range(n):\n        v = list(map(int, input().split()))\n        v.reverse()\n        d.append(v)\n    d.sort()\n    maxi = d[n - 1][0]\n    for j in range(n - 2, -1, -1):\n        if d[j][1] != d[-1][1]:\n            ans += d[j][0]\n            break\n    ans += maxi\n    print(ans)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 0\n    d = []\n    for j in range(n):\n        v = list(map(int, input().split()))\n        v.reverse()\n        d.append(v)\n    d.sort()\n    maxi = d[n - 1][0]\n    for j in range(n - 2, -1, -1):\n        if d[j][1] != d[-1][1]:\n            ans += d[j][0]\n            break\n    ans += maxi\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    mylist = []\n    for i in range(n):\n        (day, value) = map(int, input().split())\n        mylist.append((value, day))\n    mylist.sort(reverse=True)\n    value = mylist[0][0]\n    day = mylist[0][1]\n    index = 1\n    while mylist[index][1] == day:\n        index += 1\n    value += mylist[index][0]\n    print(value)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    mylist = []\n    for i in range(n):\n        (day, value) = map(int, input().split())\n        mylist.append((value, day))\n    mylist.sort(key=lambda x: -1 * x[0])\n    value = mylist[0][0]\n    day = mylist[0][1]\n    index = 1\n    while mylist[index][1] == day:\n        index += 1\n    value += mylist[index][0]\n    print(value)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    mylist = []\n    for i in range(n):\n        (day, value) = map(int, input().split())\n        mylist.append((value, day))\n    mylist.sort(key=lambda x: (-1 * x[0], x[1]))\n    value = mylist[0][0]\n    day = mylist[0][1]\n    index = 1\n    while mylist[index][1] == day:\n        index += 1\n    value += mylist[index][0]\n    print(value)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = {}\n    for i in range(n):\n        (a, v) = map(int, input().split())\n        if a not in d:\n            d[a] = v\n        else:\n            d[a] = max(d[a], v)\n    l = sorted(d.values())\n    print(l[-1] + l[-2])", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    arr = dict()\n    for i in range(N):\n        (d, v) = map(int, input().split())\n        if d not in arr:\n            arr[d] = v\n        else:\n            val = max(arr[d], v)\n            arr[d] = val\n    brr = sorted(arr.values())\n    print(brr[-1] + brr[-2])", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    arr = dict()\n    for i in range(N):\n        (d, v) = map(int, input().split())\n        if d not in arr:\n            arr[d] = v\n        else:\n            val = max(arr[d], v)\n            arr[d] = val\n    brr = sorted(arr.values())\n    print(brr[-1] + brr[-2])", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    mp = {}\n    for _ in range(n):\n        (d, v) = map(int, input().split())\n        if d <= m:\n            if d not in mp:\n                mp[d] = v\n            elif v > mp[d]:\n                mp[d] = v\n    mp = sorted(mp.items(), key=lambda x: x[1], reverse=True)\n    tastiness = 0\n    count = 0\n    for (x, y) in mp:\n        if count != 2:\n            tastiness += y\n            count += 1\n    print(tastiness)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    dict1 = dict()\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d not in dict1:\n            dict1[d] = v\n        else:\n            max1 = 0\n            max1 = max(dict1[d], v)\n            dict1[d] = max1\n    list1 = sorted(dict1.values())\n    print(list1[-1] + list1[-2])", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    dict1 = dict()\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d not in dict1:\n            dict1[d] = v\n        else:\n            max1 = max(dict1[d], v)\n            dict1[d] = max1\n    tastes = sorted(dict1.values())\n    print(tastes[-1] + tastes[-2])", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    dict1 = dict()\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d not in dict1:\n            dict1[d] = v\n        else:\n            max1 = max(dict1[d], v)\n            dict1[d] = max1\n    tastes = sorted(dict1.values())\n    print(tastes[-1] + tastes[-2])", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    dict1 = dict()\n    for i in range(n):\n        (d, v) = map(int, input().split())\n        if d not in dict1:\n            dict1[d] = v\n        else:\n            max1 = max(dict1[d], v)\n            dict1[d] = max1\n    tastes = sorted(dict1.values())\n    print(tastes[-1] + tastes[-2])", "try:\n    t = int(input())\n    for i in range(t):\n        (n, k) = map(int, input().split())\n        dict1 = dict()\n        for i in range(n):\n            (d, v) = map(int, input().split())\n            if d not in dict1:\n                dict1[d] = v\n            else:\n                max1 = max(dict1[d], v)\n                dict1[d] = max1\n        tastes = sorted(dict1.values())\n        print(tastes[-1] + tastes[-2])\nexcept:\n    pass", "try:\n    t = int(input())\n    for i in range(t):\n        (n, k) = map(int, input().rstrip().split())\n        dict1 = dict()\n        for i in range(n):\n            (d, v) = map(int, input().rstrip().split())\n            if d not in dict1:\n                dict1[d] = v\n            else:\n                max1 = max(dict1[d], v)\n                dict1[d] = max1\n        tastes = sorted(dict1.values())\n        print(tastes[-1] + tastes[-2])\nexcept:\n    pass", "try:\n    t = int(input())\n    for i in range(t):\n        (N, K) = map(int, input().rstrip().split())\n        dayDict = dict()\n        for i in range(N):\n            (day, tastiness) = map(int, input().rstrip().split())\n            if day not in dayDict:\n                dayDict[day] = tastiness\n            else:\n                maxTaste = max(dayDict[day], tastiness)\n                dayDict[day] = maxTaste\n        tastes = sorted(dayDict.values())\n        print(tastes[-1] + tastes[-2])\nexcept:\n    pass", "try:\n    t = int(input())\n    for i in range(t):\n        (N, K) = map(int, input().rstrip().split())\n        dayDict = dict()\n        for i in range(N):\n            (day, tastiness) = map(int, input().rstrip().split())\n            if day not in dayDict:\n                dayDict[day] = tastiness\n            else:\n                maxTaste = max(dayDict[day], tastiness)\n                dayDict[day] = maxTaste\n        tastes = sorted(dayDict.values())\n        print(tastes[-1] + tastes[-2])\nexcept:\n    pass", "try:\n    t = int(input())\n    for _ in range(t):\n        (N, K) = map(int, input().rstrip().split())\n        dayDict = dict()\n        for i in range(N):\n            (day, tastiness) = map(int, input().rstrip().split())\n            if day not in dayDict:\n                dayDict[day] = tastiness\n            else:\n                maxTaste = max(dayDict[day], tastiness)\n                dayDict[day] = maxTaste\n        tastes = sorted(dayDict.values())\n        print(tastes[-1] + tastes[-2])\nexcept:\n    pass", "try:\n    t = int(input())\n    for _ in range(t):\n        (N, K) = map(int, input().rstrip().split())\n        dayDict = dict()\n        for i in range(N):\n            (day, tastiness) = map(int, input().rstrip().split())\n            if day not in dayDict:\n                dayDict[day] = tastiness\n            else:\n                maxTaste = max(dayDict[day], tastiness)\n                dayDict[day] = maxTaste\n        tastes = sorted(dayDict.values())\n        print(tastes[-1] + tastes[-2])\nexcept:\n    pass", "from collections import defaultdict\nT = int(input())\nfor _ in range(T):\n    (N, M) = list(map(int, input().split()))\n    L = defaultdict(lambda : [])\n    for i in range(N):\n        (Day, Value) = list(map(int, input().split()))\n        L[Day].append(Value)\n    max = -1\n    for i in L:\n        for j in L[i]:\n            if max < j:\n                max = j\n                index = i\n    del L[index]\n    A = max\n    max = -1\n    for i in L:\n        for j in L[i]:\n            if max < j:\n                max = j\n    B = max\n    print(A + B)", "from sys import stdin\ntry:\n    t = eval(stdin.readline())\n    for _ in range(t):\n        (n, m) = [int(x) for x in stdin.readline().split()]\n        Dict = {x: 0 for x in range(1, m + 1)}\n        for _ in range(n):\n            (x, v) = [int(x) for x in stdin.readline().split()]\n            if v > Dict[x]:\n                Dict[x] = v\n        freq = list(Dict.values())\n        answer = max(freq)\n        freq.remove(answer)\n        answer += max(freq)\n        print(answer)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    res = []\n    for i in range(n):\n        a = list(map(int, input().split()))\n        res.append(a)\n    res.sort(key=lambda x: x[1])\n    ans = res[-1][1]\n    t = res[-1][0]\n    for i in range(n - 2, -1, -1):\n        if res[i][0] != t:\n            ans += res[i][1]\n            break\n    print(ans)"]