["inf = 100000000000\nt = int(input())\n\ndef cal(i, tr, ght, vis, st, mn):\n    if vis[i] == 0:\n        rtv = 0\n        vis[i] = 1\n        for j in tr[i]:\n            if vis[j] == 0:\n                rtv += cal(j, tr, ght, vis, st, min(mn, ght[i][j]))\n        if i != st:\n            rtv += mn\n        return rtv\nfor rr in range(t):\n    n = int(input())\n    g = []\n    s1 = 0\n    for i in range(n):\n        ip = list(map(int, input().strip().split(' ')))\n        g.append(ip)\n    for i in range(n):\n        for j in range(n):\n            s1 += g[i][j]\n    for i in range(n):\n        for j in range(n):\n            tm = max(g[i][j], g[j][i])\n            g[i][j] = tm\n            g[j][i] = tm\n    edj = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            if g[i][j] != 0:\n                edj.append([i, j, g[i][j]])\n    edj = sorted(edj, key=lambda x: x[2], reverse=True)\n    edgcnt = 0\n    dsu = [i for i in range(n)]\n    ght = [[0] * n for i in range(n)]\n    tr = [[] for i in range(n)]\n    while edgcnt < n - 1:\n        tm = edj[0]\n        i = tm[0]\n        j = tm[1]\n        if dsu[i] != dsu[j]:\n            mn = min(dsu[i], dsu[j])\n            mx = max(dsu[i], dsu[j])\n            for x in range(n):\n                if dsu[x] == mx:\n                    dsu[x] = mn\n            ght[i][j] = tm[2]\n            ght[j][i] = tm[2]\n            tr[i].append(j)\n            tr[j].append(i)\n            edgcnt += 1\n        edj.remove(tm)\n        if len(edj) == 0:\n            break\n    s2 = 0\n    for i in range(n):\n        vis = [0] * n\n        s2 += cal(i, tr, ght, vis, i, inf)\n    print(s2 - s1)", "inf = 100000000000\nt = int(input())\n\ndef cal(i, tr, ght, vis, st, mn):\n    if vis[i] == 0:\n        rtv = 0\n        vis[i] = 1\n        for j in tr[i]:\n            if vis[j] == 0:\n                rtv += cal(j, tr, ght, vis, st, min(mn, ght[i][j]))\n        if i != st:\n            rtv += mn\n        return rtv\nfor rr in range(t):\n    n = int(input())\n    g = []\n    s1 = 0\n    for i in range(n):\n        ip = list(map(int, input().strip().split(' ')))\n        g.append(ip)\n    for i in range(n):\n        for j in range(n):\n            s1 += g[i][j]\n    for i in range(n):\n        for j in range(n):\n            tm = max(g[i][j], g[j][i])\n            g[i][j] = tm\n            g[j][i] = tm\n    edj = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            if g[i][j] != 0:\n                edj.append([i, j, g[i][j]])\n    edj = sorted(edj, key=lambda x: x[2], reverse=True)\n    edgcnt = 0\n    dsu = [i for i in range(n)]\n    ght = [[0] * n for i in range(n)]\n    tr = [[] for i in range(n)]\n    while edgcnt < n - 1:\n        tm = edj[0]\n        i = tm[0]\n        j = tm[1]\n        if dsu[i] != dsu[j]:\n            mn = min(dsu[i], dsu[j])\n            mx = max(dsu[i], dsu[j])\n            for x in range(n):\n                if dsu[x] == mx:\n                    dsu[x] = mn\n            ght[i][j] = tm[2]\n            ght[j][i] = tm[2]\n            tr[i].append(j)\n            tr[j].append(i)\n            edgcnt += 1\n        edj.remove(tm)\n        if len(edj) == 0:\n            break\n    s2 = 0\n    for i in range(n):\n        vis = [0] * n\n        s2 += cal(i, tr, ght, vis, i, inf)\n    print(s2 - s1)", "T = int(input())\n\ndef root(x):\n    if p[x] == x:\n        return x\n    p[x] = y = root(p[x])\n    return y\n\ndef unite(x, y):\n    px = p[x]\n    py = p[y]\n    if px == py:\n        return -1\n    if px < py:\n        p[py] = px\n        return px\n    else:\n        p[px] = py\n        return py\nfor _ in range(T):\n    N = int(input())\n    A = [list(map(int, input().split())) for i in range(N)]\n    ans = 0\n    Q = []\n    for i in range(N):\n        Ai = A[i]\n        for j in range(i):\n            v = max(A[i][j], A[j][i])\n            ans += 2 * v - A[i][j] - A[j][i]\n            A[i][j] = A[j][i] = v\n            Q.append((v, i, j))\n    ids = [-1] * N\n    Q.sort(reverse=1)\n    (*p,) = range(N)\n    S = [{i} for i in range(N)]\n    for (v, i, j) in Q:\n        pi = root(i)\n        pj = root(j)\n        r = unite(i, j)\n        if r == -1:\n            continue\n        si = S[pi]\n        sj = S[pj]\n        for x in si:\n            for y in sj:\n                ans += 2 * (v - A[x][y])\n        if r == pi:\n            si |= sj\n            S[pj] = None\n        else:\n            sj |= si\n            S[pi] = None\n    print(ans)"]