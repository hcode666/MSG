["T = int(input())\nfor t in range(T):\n    (N, K) = input().split()\n    A = list(map(int, input().split()))\n    no_of_gifts = int(N)\n    no_of_turns = int(K) * 2\n    A.sort(reverse=True)\n    lst_1 = []\n    lst_2 = []\n    for i in range(no_of_gifts):\n        Popped_ele = A.pop(0)\n        lst_1.append(Popped_ele)\n        no_of_turns -= 1\n        if lst_1 != []:\n            Popped = A.pop(0)\n            lst_2.append(Popped)\n            no_of_turns -= 1\n            if no_of_turns == 0:\n                lst_2.append(A.pop(0))\n                A = sum(lst_1)\n                B = sum(lst_2)\n                print(max(A, B))\n                break", "T = int(input())\nfor t in range(T):\n    (N, K) = input().split()\n    A = list(map(int, input().split()))\n    no_of_gifts = int(N)\n    no_of_turns = int(K) * 2\n    A.sort(reverse=True)\n    lst_1 = []\n    lst_2 = []\n    for i in range(no_of_gifts):\n        Popped_ele = A.pop(0)\n        lst_1.append(Popped_ele)\n        no_of_turns -= 1\n        if lst_1 != []:\n            Popped = A.pop(0)\n            lst_2.append(Popped)\n            no_of_turns -= 1\n            if no_of_turns == 0:\n                lst_2.append(A.pop(0))\n                A = sum(lst_1)\n                B = sum(lst_2)\n                print(max(A, B))\n                break", "tc = int(input())\nfor _ in range(tc):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    chef1 = 0\n    twin1 = 0\n    while k > 0:\n        chef1 += max(a)\n        a.remove(max(a))\n        twin1 += max(a)\n        a.remove(max(a))\n        if k == 1:\n            twin1 += max(a)\n            a.remove(max(a))\n        k -= 1\n    print(max(chef1, twin1))", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l = sorted(l, reverse=True)\n    a = sum(l[:2 * k:2])\n    b = sum(l[1:2 * k:2]) + l[2 * k]\n    print(max(a, b))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    price = [int(x) for x in input().split()]\n    duplicate = price.copy()\n    duplicate.sort(reverse=True)\n    turn_first = 0\n    for i in range(k):\n        turn_first += duplicate[2 * i]\n    print(max(turn_first, sum(duplicate[:2 * k + 1]) - turn_first))", "for t in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort(reverse=1)\n    f = sum(a[0:2 * k - 1:2])\n    s = sum(a[1:2 * k:2]) + a[2 * k]\n    if f > s:\n        print(f)\n    else:\n        print(s)", "case = int(input())\nfor _ in range(case):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    arr.sort(reverse=True)\n    t1 = 0\n    t2 = 0\n    for i in range(n):\n        if k > 0:\n            if k == 1:\n                if i % 2 == 0:\n                    t1 += arr[i]\n                else:\n                    t2 += arr[i]\n                    t2 += arr[i + 1]\n                    k -= 1\n            elif i % 2 == 0:\n                t1 += arr[i]\n            else:\n                t2 += arr[i]\n                k -= 1\n        else:\n            break\n    print(max(t1, t2))", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = sorted(list(map(int, input().split())), reverse=True)\n    c1 = sum(arr[:2 * k:2])\n    c2 = sum(arr[1:2 * k:2]) + arr[2 * k]\n    print(max(c1, c2))", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = sorted(list(map(int, input().split())), reverse=True)\n    c1 = sum(arr[:2 * k:2])\n    c2 = sum(arr[1:2 * k:2]) + arr[2 * k]\n    print(max(c1, c2))", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = sorted(list(map(int, input().split())), reverse=True)\n    c1 = sum(arr[:2 * k:2])\n    c2 = sum(arr[1:2 * k:2]) + arr[2 * k]\n    print(max(c1, c2))", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = sorted(list(map(int, input().split())), reverse=True)\n    c1 = sum(arr[:2 * k:2])\n    c2 = sum(arr[1:2 * k:2]) + arr[2 * k]\n    print(max(c1, c2))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    j = 0\n    a.sort(reverse=True)\n    a1 = 0\n    a2 = 0\n    while k > 0 and j < n:\n        a1 += a[j]\n        a2 += a[j + 1]\n        if k == 1:\n            a2 += a[j + 2]\n        k -= 1\n        j += 2\n    print(max(a1, a2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    arr.sort(reverse=True)\n    rose = 0\n    chef = 0\n    i = 0\n    k = 2 * k\n    while i < n and 2 * k > 0:\n        if i % 2 == 0:\n            chef += arr[i]\n        else:\n            rose += arr[i]\n        k -= 1\n        i += 1\n    rose = rose + arr[i]\n    rose = max(chef, rose)\n    print(rose)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    s1 = 0\n    s2 = 0\n    change = 1\n    for i in range(n - 1, n - k - k - 1, -1):\n        if change:\n            change = 0\n            s1 += arr[i]\n        else:\n            change = 1\n            s2 += arr[i]\n    else:\n        s2 += arr[i - 1]\n        print(max(s1, s2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    first = []\n    second = []\n    a.sort(reverse=True)\n    counter = 0\n    for i in range(n):\n        if i % 2 == 0:\n            first.append(a[i])\n        else:\n            second.append(a[i])\n            counter += 1\n        if counter == k:\n            second.append(a[i + 1])\n            break\n    print(max(sum(first), sum(second)))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    z = list(map(int, input().split()))\n    z = sorted(z)[::-1]\n    l = 0\n    m = 0\n    for i in range(min(n, 2 * k)):\n        if i % 2 == 0:\n            l += z[i]\n        else:\n            m += z[i]\n    if min(n, 2 * k) % 2 == 1:\n        l += z[min(n, 2 * k)]\n    else:\n        m += z[min(n, 2 * k)]\n    print(max(l, m))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    z = list(map(int, input().split()))\n    z = sorted(z)[::-1]\n    l = 0\n    m = 0\n    for i in range(min(n, 2 * k)):\n        if i % 2 == 0:\n            l += z[i]\n        else:\n            m += z[i]\n    if min(n, 2 * k) % 2 == 1:\n        l += z[min(n, 2 * k)]\n    else:\n        m += z[min(n, 2 * k)]\n    print(max(l, m))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    z = list(map(int, input().split()))\n    z = sorted(z)[::-1]\n    l = 0\n    m = 0\n    for i in range(min(n, 2 * k)):\n        if i % 2 == 0:\n            l += z[i]\n        else:\n            m += z[i]\n    if min(n, 2 * k) % 2 == 1:\n        l += z[min(n, 2 * k)]\n    else:\n        m += z[min(n, 2 * k)]\n    print(max(l, m))", "for t in range(int(input())):\n    (N, K) = map(int, input().split(' '))\n    A = sorted(list(map(int, input().split(' '))), reverse=True)\n    p1 = A[::2][:K]\n    p2 = A[1::2][:K] + [A[K + K]]\n    print(max(sum(p1), sum(p2)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    person1 = 0\n    person2 = 0\n    for i in range(k):\n        person1 += a[2 * i]\n        person2 += a[2 * i + 1]\n    person2 += a[2 * k]\n    if person1 > person2:\n        print(person1)\n    else:\n        print(person2)", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    A.sort(reverse=True)\n    (p1, p2) = [0, A[2 * K]]\n    for i in range(2 * K):\n        if not bool(i % 2):\n            p1 += A[i]\n        else:\n            p2 += A[i]\n    print(max(p1, p2))", "t = int(input())\nfor i in range(t):\n    (N, K) = map(int, input().split())\n    inp = list(map(int, input().strip().split()))\n    chef = 0\n    twin = 0\n    while K > 0:\n        chef += max(inp)\n        inp.remove(max(inp))\n        twin += max(inp)\n        inp.remove(max(inp))\n        K -= 1\n    twin += max(inp)\n    inp.remove(max(inp))\n    ans = max(chef, twin)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (N, K) = map(int, input().split())\n    inp = list(map(int, input().strip().split()))\n    chef = 0\n    twin = 0\n    while K > 0:\n        chef += max(inp)\n        inp.remove(max(inp))\n        twin += max(inp)\n        inp.remove(max(inp))\n        K -= 1\n    twin += max(inp)\n    inp.remove(max(inp))\n    ans = max(chef, twin)\n    print(ans)", "def soln(n, k, arr):\n    arr.sort(reverse=True)\n    s1 = s2 = 0\n    for i in range(min(len(arr), k * 2)):\n        if i & 1:\n            s1 += arr[i]\n        else:\n            s2 += arr[i]\n    if i & 1:\n        s1 += arr[i + 1]\n    else:\n        s2 += arr[i + 1]\n    return max(s1, s2)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(soln(n, k, arr))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr, reverse=True)\n    x = 0\n    y = 0\n    for i in range(2 * k):\n        if i % 2 == 0:\n            x += arr[i]\n        else:\n            y += arr[i]\n    if 2 * k < n:\n        y += max(arr[2 * k:])\n    print(max(x, y))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr, reverse=True)\n    (a1, a2) = (0, 0)\n    for i in range(2 * k):\n        if i == 2 * k - 1:\n            a2 += arr[i] + arr[i + 1]\n        elif i % 2 == 0:\n            a1 += arr[i]\n        else:\n            a2 += arr[i]\n    print(max(a1, a2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr, reverse=True)\n    (a1, a2) = (0, 0)\n    for i in range(2 * k):\n        if i == 2 * k - 1:\n            a2 += arr[i] + arr[i + 1]\n        elif i % 2 == 0:\n            a1 += arr[i]\n        else:\n            a2 += arr[i]\n    print(max(a1, a2))", "for z in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    a.sort()\n    j = 1\n    p = 0\n    q = 0\n    for i in range(2 * k):\n        if i % 2 == 0:\n            p += a[n - j]\n        else:\n            q += a[n - j]\n        j += 1\n    q += a[n - j]\n    print(max(p, q))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [int(j) for j in input().split()]\n    a.sort(reverse=True)\n    print(max(sum(a[:m * 2:2]), sum(a[1:m * 2:2]) + a[m * 2]))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [int(j) for j in input().split()]\n    a.sort(reverse=True)\n    print(max(sum(a[:m * 2:2]), sum(a[1:m * 2:2]) + a[m * 2]))", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    a.sort(reverse=True)\n    first = []\n    second = []\n    for i in range(0, n, 2):\n        if i < 2 * k:\n            first.append(a[i])\n    for i in range(1, n, 2):\n        if i < 2 * k + 1:\n            second.append(a[i])\n    second.append(a[2 * k])\n    print(max(sum(first), sum(second)))", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    c = 0\n    d = a[2 * k]\n    for i in range(2 * k):\n        if i % 2 == 0:\n            c += a[i]\n        else:\n            d += a[i]\n    print(max(c, d))", "for p in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    s_1 = 0\n    s_2 = 0\n    i = 0\n    j = 0\n    while j < m:\n        s_1 += l[i]\n        i += 2\n        j += 1\n    i = 1\n    j = 0\n    while j < m - 1:\n        s_2 += l[i]\n        i += 2\n        j += 1\n    s_2 += l[i] + l[i + 1]\n    print(max(s_1, s_2))", "t = int(input())\nfor qw in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a_copy = a.copy()\n    chef = []\n    twin = []\n    chef_second = []\n    twin_second = []\n    c1 = 0\n    c2 = 0\n    for i in range(1, k * 2 + 1):\n        if i == k * 2 - 1:\n            z = max(a_copy)\n            chef.append(z)\n            a_copy.remove(z)\n            z = max(a_copy)\n            twin.append(z)\n            a_copy.remove(z)\n            z = max(a_copy)\n            twin.append(z)\n            a_copy.remove(z)\n            break\n        elif i % 2 != 0:\n            chef.append(max(a_copy))\n            a_copy.remove(max(a_copy))\n        else:\n            twin.append(max(a_copy))\n            a_copy.remove(max(a_copy))\n    for i in range(1, k * 2 + 1):\n        if i == k * 2 - 1:\n            z = max(a)\n            twin_second.append(z)\n            a.remove(z)\n            z = max(a)\n            chef_second.append(z)\n            a.remove(z)\n            z = max(a)\n            chef_second.append(z)\n            a.remove(z)\n            break\n        elif i % 2 != 0:\n            twin_second.append(max(a))\n            a.remove(max(a))\n        else:\n            chef_second.append(max(a))\n            a.remove(max(a))\n    c1 = sum(chef)\n    c2 = sum(chef_second)\n    if c1 >= c2:\n        print(c1)\n    else:\n        print(c2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    lis.sort(reverse=True)\n    (ans1, ans2) = (0, lis[2 * k])\n    for i in range(2 * k):\n        if not i % 2:\n            ans1 += lis[i]\n        else:\n            ans2 += lis[i]\n    print(max(ans1, ans2))", "import os.path\nfrom math import gcd, floor, ceil, log2\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input())):\n    (n, k) = mp()\n    a = li()\n    a.sort(reverse=True)\n    i = 0\n    a1 = 0\n    a2 = 0\n    while k:\n        if k == 1:\n            a1 += a[i]\n            i += 1\n            a2 += a[i] + a[i + 1]\n        else:\n            a1 += a[i]\n            i += 1\n            a2 += a[i]\n            i += 1\n        k -= 1\n    print(max(a1, a2))", "t = int(input())\nfor l in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    ans1 = 0\n    ans2 = 0\n    i = 0\n    while k:\n        if k == 1:\n            ans1 += arr[i]\n            i += 1\n            ans2 += arr[i] + arr[i + 1]\n        else:\n            ans1 += arr[i]\n            i += 1\n            ans2 += arr[i]\n            i += 1\n        k -= 1\n    print(max(ans1, ans2))", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    lis = list(map(int, input().split()))\n    lis = sorted(lis, reverse=True)\n    sum1 = sum([lis[2 * x] for x in range(0, k)])\n    sum2 = sum([lis[2 * x + 1] for x in range(0, k)])\n    sum2 += lis[2 * k]\n    print(max(sum1, sum2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    chef_goes = a.copy()\n    chef1 = chef2 = 0\n    i = 0\n    moves = 2 * k\n    while i <= moves - 1:\n        maxi = max(chef_goes)\n        ind = chef_goes.index(maxi)\n        if i % 2 == 0:\n            chef1 += chef_goes.pop(ind)\n        else:\n            chef2 += chef_goes.pop(ind)\n        i += 1\n    chef2 += max(chef_goes)\n    print(max(chef1, chef2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    chef_goes = a.copy()\n    chef1 = chef2 = 0\n    i = 0\n    moves = 2 * k\n    while i <= moves - 1:\n        maxi = max(chef_goes)\n        ind = chef_goes.index(maxi)\n        if i % 2 == 0:\n            chef1 += chef_goes.pop(ind)\n        else:\n            chef2 += chef_goes.pop(ind)\n        i += 1\n    chef2 += max(chef_goes)\n    print(max(chef1, chef2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    chef_goes = a.copy()\n    chef1 = chef2 = 0\n    i = 0\n    moves = 2 * k\n    while i <= moves - 1:\n        maxi = max(chef_goes)\n        ind = chef_goes.index(maxi)\n        if i % 2 == 0:\n            chef1 += chef_goes.pop(ind)\n        else:\n            chef2 += chef_goes.pop(ind)\n        i += 1\n    chef2 += max(chef_goes)\n    print(max(chef1, chef2))", "def main():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split(' '))\n        a = list(map(int, input().split(' ')))\n        chef_goes = a.copy()\n        chef1 = chef2 = 0\n        i = 0\n        moves = 2 * k\n        while i <= moves - 1:\n            maxi = max(chef_goes)\n            ind = chef_goes.index(maxi)\n            if i % 2 == 0:\n                chef1 += chef_goes.pop(ind)\n            else:\n                chef2 += chef_goes.pop(ind)\n            i += 1\n        chef2 += max(chef_goes)\n        print(max(chef1, chef2))\nmain()", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    c = 0\n    d = a[2 * k]\n    for i in range(2 * k):\n        if i % 2 == 0:\n            c += a[i]\n        else:\n            d += a[i]\n    print(max(c, d))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    p = []\n    q = []\n    for i in range(2 * k):\n        if i % 2 == 0:\n            p.append(a[i])\n        else:\n            q.append(a[i])\n    q.append(a[2 * k])\n    print(max(sum(p), sum(q)))", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    c = 0\n    d = a[2 * k]\n    for i in range(2 * k):\n        if i % 2 == 0:\n            c += a[i]\n        else:\n            d += a[i]\n    print(max(c, d))", "a = int(input())\nfor i in range(a):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    A.reverse()\n    x = 0\n    y = 0\n    for j in range(0, 2 * K - 1, 2):\n        x += A[j]\n    for j in range(1, 2 * K, 2):\n        y += A[j]\n    y += A[2 * K]\n    if x > y:\n        print(x)\n    else:\n        print(y)", "a = int(input())\nfor i in range(a):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    A.reverse()\n    x = 0\n    y = 0\n    for j in range(0, 2 * K - 1, 2):\n        x += A[j]\n    for j in range(1, 2 * K, 2):\n        y += A[j]\n    y += A[2 * K]\n    if x > y:\n        print(x)\n    else:\n        print(y)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    arr = list(map(int, input().strip().split()))\n    arr.sort(reverse=True)\n    (ans1, ans2) = (0, 0)\n    i = 0\n    while i < 2 * k:\n        ans1 += arr[i]\n        ans2 += arr[i + 1]\n        i += 2\n    ans2 += arr[i]\n    print(max(ans1, ans2))", "for x in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a = a[::-1]\n    a1 = 0\n    a2 = a[k * 2]\n    for xx in range(k * 2):\n        if xx % 2 == 0:\n            a1 += a[xx]\n        else:\n            a2 += a[xx]\n    print(max(a1, a2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted([int(i) for i in input().split()])\n    l.reverse()\n    (a, b) = (0, 0)\n    t = 2 * k + 1\n    for i in range(t):\n        if i == t - 2 and i % 2 == 0:\n            a += l[i] + l[i + 1]\n            break\n        elif i == t - 2 and i % 2 != 0:\n            b += l[i] + l[i + 1]\n            break\n        if i % 2 == 0:\n            a += l[i]\n        else:\n            b += l[i]\n    if a >= b:\n        print(a)\n    else:\n        print(b)", "def Solution(N, K, A):\n    if N <= 2:\n        return sum(A)\n    else:\n        s = 0\n        j = 0\n        while j < 2 * K:\n            s = s + A[j]\n            j += 2\n        L = A[:2 * K + 1]\n        p = sum(L) - s\n        if p >= s:\n            return p\n        else:\n            return s\nT = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A = sorted(A, reverse=True)\n    result = Solution(N, K, A)\n    print(result)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [int(j) for j in input().split()]\n    a.sort(reverse=True)\n    print(max(sum(a[:m * 2:2]), sum(a[1:m * 2:2]) + a[m * 2]))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [int(j) for j in input().split()]\n    a.sort(reverse=True)\n    print(max(sum(a[:m * 2:2]), sum(a[1:m * 2:2]) + a[m * 2]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    lst.sort(reverse=True)\n    a = 0\n    b = 0\n    moves = 2 * k\n    i = 0\n    while i < 2 * k - 2:\n        if i % 2 == 0:\n            a += lst[i]\n        else:\n            b += lst[i]\n        i = i + 1\n    a += lst[i]\n    b += lst[i + 1] + lst[i + 2]\n    print(max(a, b))", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    lst.sort(reverse=True)\n    a = 0\n    b = 0\n    moves = 2 * k\n    i = 0\n    while i < 2 * k - 2:\n        if i % 2 == 0:\n            a += lst[i]\n        else:\n            b += lst[i]\n        i = i + 1\n    a += lst[i]\n    b += lst[i + 1] + lst[i + 2]\n    print(max(a, b))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    s1 = 0\n    s2 = 0\n    for i in range(k):\n        s1 += arr.pop()\n        s2 += arr.pop()\n    s2 += arr.pop()\n    print(max(s1, s2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    sum1 = 0\n    sum2 = 0\n    for i in range(k):\n        sum1 += a.pop()\n        sum2 += a.pop()\n    sum2 += a[-1:][0]\n    print(max(sum1, sum2))", "for p in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    s_1 = 0\n    s_2 = 0\n    i = 0\n    j = 0\n    while j < m:\n        s_1 += l[i]\n        i += 2\n        j += 1\n    i = 1\n    j = 0\n    while j < m - 1:\n        s_2 += l[i]\n        i += 2\n        j += 1\n    s_2 += l[i] + l[i + 1]\n    print(max(s_1, s_2))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    s_1 = 0\n    s_2 = 0\n    i = 0\n    j = 0\n    while j < m:\n        s_1 += l[i]\n        i += 2\n        j += 1\n    i = 1\n    j = 0\n    while j < m - 1:\n        s_2 += l[i]\n        i += 2\n        j += 1\n    s_2 += l[i] + l[i + 1]\n    print(max(s_1, s_2))", "for _ in range(int(input())):\n    (n, k) = [int(a) for a in input().split()]\n    arr = [int(a) for a in input().split()]\n    s1 = 0\n    s2 = 0\n    arr.sort(reverse=True)\n    i = 0\n    while k > 0:\n        s1 = s1 + arr[i]\n        s2 = s2 + arr[i + 1]\n        i = i + 2\n        k = k - 1\n    s2 = s2 + arr[i]\n    print(max(s1, s2))", "for _ in range(int(input())):\n    (n, k) = [int(a) for a in input().split()]\n    arr = [int(a) for a in input().split()]\n    s1 = 0\n    s2 = 0\n    arr.sort()\n    while k > 0:\n        s1 = s1 + arr.pop()\n        s2 = s2 + arr.pop()\n        k = k - 1\n    s2 = s2 + arr[-1]\n    print(max(s1, s2))", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\nimport bisect\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        (n, k) = sm()\n        gifts_costs = ln()\n        gifts_costs.sort(reverse=True)\n        first_turn = 0\n        second_turn = 0\n        for i in range(k):\n            first_turn += gifts_costs[2 * i]\n            second_turn += gifts_costs[2 * i + 1]\n        second_turn += gifts_costs[2 * k]\n        print(max(first_turn, second_turn))\nmain()", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\nimport bisect\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        (n, k) = sm()\n        gifts_costs = ln()\n        gifts_costs.sort(reverse=True)\n        first_turn = 0\n        second_turn = 0\n        for i in range(k):\n            first_turn += gifts_costs.pop(0)\n            second_turn += gifts_costs.pop(0)\n        second_turn += gifts_costs.pop(0)\n        print(max(first_turn, second_turn))\nmain()", "try:\n    from debug import debug, timer\nexcept ImportError:\n    pass\nfrom sys import stdin\ninput = stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\n\ndef getvals():\n    while True:\n        yield from input().split()\n\ndef tri(n):\n    return n * (n + 1) // 2\n\ndef smallest_first(m, n):\n    return (min(m, n), max(m, n))\n\ndef solve(*args):\n    (n, k, a) = args\n    if n % 2 == 0:\n        a.pop()\n    go_first = a[0:2 * k:2]\n    go_second = a[1:2 * k + 1:2] + a[2 * k:2 * k + 1]\n    return max(sum(go_first), sum(go_second))\n\ndef do_codechef():\n    for t in rii():\n        (n, k) = mii()\n        a = sorted(lmii(), reverse=True)\n        print(solve(n, k, a))\ndo_codechef()\nexit()", "try:\n    for _ in range(int(input())):\n        (n, k) = list(map(int, input().split()))\n        arr = list(map(int, input().split()))\n        (t, c) = (0, 0)\n        i = 0\n        arr.sort()\n        arr = arr[::-1]\n        chances = 0\n        while i < n and chances < k:\n            if i % 2 == 0:\n                c += arr[i]\n            else:\n                t += arr[i]\n                if k - chances == 1 and i + 1 < n:\n                    t += arr[i + 1]\n                chances += 1\n            i += 1\n        print(max(t, c))\nexcept:\n    pass", "for x in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    li = sorted(li)[::-1]\n    count1 = 0\n    count2 = 0\n    for i in range(0, n, 2):\n        count1 += li[i]\n        count2 += li[i + 1]\n        k -= 1\n        if k == 0:\n            count2 += li[i + 2]\n            break\n    print(max(count1, count2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    chef = []\n    twins = []\n    for i in range(2 * k):\n        if i % 2 == 0:\n            chef.append(a[i])\n        elif i % 2 == 1:\n            twins.append(a[i])\n    print(max(sum(chef), sum(twins) + a[2 * k]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    chef = []\n    twins = []\n    for i in range(2 * k):\n        if i % 2 == 0:\n            chef.append(a[i])\n        elif i % 2 == 1:\n            twins.append(a[i])\n    print(max(sum(chef), sum(twins) + a[2 * k]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    chef = []\n    twins = []\n    for i in range(2 * k):\n        if i % 2 == 0:\n            chef.append(a[i])\n        elif i % 2 == 1:\n            twins.append(a[i])\n    print(max(sum(chef), sum(twins) + a[2 * k]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    chef = []\n    twins = []\n    for i in range(2 * k):\n        if i % 2 == 0:\n            chef.append(a[i])\n        elif i % 2 == 1:\n            twins.append(a[i])\n    print(max(sum(chef), sum(twins) + a[2 * k]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    chef = []\n    twins = []\n    for i in range(2 * k):\n        if i % 2 == 0:\n            chef.append(a[i])\n        elif i % 2 == 1:\n            twins.append(a[i])\n    print(max(sum(chef), sum(twins) + a[2 * k]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    chef = []\n    twins = []\n    for i in range(2 * k):\n        if i % 2 == 0:\n            chef.append(a[i])\n        elif i % 2 == 1:\n            twins.append(a[i])\n    print(max(sum(chef), sum(twins) + a[2 * k]))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    sor = list(reversed(sorted(arr)))\n    a = 0\n    b = 0\n    ind = 0\n    while k > 0 and ind < n:\n        if k == 1:\n            a += sor[ind]\n            b += sum(sor[ind + 1:ind + 3])\n        else:\n            a += sor[ind]\n            b += sor[ind + 1]\n        ind += 2\n        k -= 1\n    print(max(a, b))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted([int(i) for i in input().split()])\n    l.reverse()\n    (a, b) = (0, 0)\n    t = 2 * k + 1\n    for i in range(t):\n        if i == t - 2 and i % 2 == 0:\n            a += l[i] + l[i + 1]\n            break\n        elif i == t - 2 and i % 2 != 0:\n            b += l[i] + l[i + 1]\n            break\n        if i % 2 == 0:\n            a += l[i]\n        else:\n            b += l[i]\n    if a >= b:\n        print(a)\n    else:\n        print(b)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    listx = sorted(list(map(int, input().split())), reverse=True)\n    first = []\n    second = []\n    for i in range(2 * K):\n        if i % 2 == 0:\n            first.append(listx[i])\n        elif i % 2 == 1:\n            second.append(listx[i])\n    print(max(sum(first), sum(second) + listx[2 * K]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    b = [a[i] for i in range(2 * k) if i % 2 == 0]\n    c = [a[i] for i in range(2 * k) if i % 2 == 1] + [a[2 * k]]\n    print(max(sum(b), sum(c)))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().strip().split()))[:n]\n    l.sort(reverse=True)\n    p1 = 0\n    p2 = 0\n    for j in range(k):\n        p1 += l[2 * j]\n        p2 += l[2 * j + 1]\n    p2 += l[2 * k]\n    if p1 > p2:\n        print(p1)\n    else:\n        print(p2)", "T = int(input())\nfor tj in range(T):\n    (N, K) = map(int, input().split())\n    integers = list(map(int, input().split()))\n    integers.sort(reverse=True)\n    sum_first = 0\n    sum_second = 0\n    for i in range(2 * K + 1):\n        if i % 2 == 0 and i != 2 * K:\n            sum_first += integers[i]\n        else:\n            sum_second += integers[i]\n    print(max(sum_first, sum_second))", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    L = [int(x) for x in input().split()]\n    L.sort()\n    L1 = L[-1:-k * 2:-2]\n    L2 = L[-2:-k * 2 - 1:-2]\n    L2 += [L[-(k * 2) - 1]]\n    print(max(sum(L1), sum(L2)))", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    L = [int(x) for x in input().split()]\n    L.sort()\n    L1 = L[-1:-k * 2:-2]\n    L2 = L[-2:-k * 2 - 1:-2]\n    L2 += [L[-(k * 2) - 1]]\n    print(max(sum(L1), sum(L2)))", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    L = [int(x) for x in input().split()]\n    L.sort()\n    L1 = L[-1:-k * 2:-2]\n    L2 = L[-2:-k * 2 - 1:-2]\n    L2 += [L[-(k * 2) - 1]]\n    print(max(sum(L1), sum(L2)))", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    L = [int(x) for x in input().split()]\n    L.sort()\n    L1 = L[-1:-k * 2:-2]\n    L2 = L[-2:-k * 2 - 1:-2]\n    L2 += [L[-(k * 2) - 1]]\n    print(max(sum(L1), sum(L2)))", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l.sort()\n    l1 = l[-1:-k * 2:-2]\n    l2 = l[-2:-k * 2 - 1:-2]\n    l2 += [l[-(k * 2) - 1]]\n    print(max(sum(l1), sum(l2)))", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l.sort()\n    l1 = l[-1:-k * 2:-2]\n    l2 = l[-2:-k * 2 - 1:-2]\n    l2 += [l[-(k * 2) - 1]]\n    print(max(sum(l1), sum(l2)))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    b = [a[i] for i in range(2 * k) if i % 2 == 0]\n    c = [a[i] for i in range(2 * k) if i % 2 == 1] + [a[2 * k]]\n    print(max(sum(b), sum(c)))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    b = [a[i] for i in range(2 * k) if i % 2 == 0]\n    c = [a[i] for i in range(2 * k) if i % 2 == 1] + [a[2 * k]]\n    print(max(sum(b), sum(c)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    b = [a[i] for i in range(2 * k) if i % 2 == 0]\n    c = [a[i] for i in range(2 * k) if i % 2 == 1] + [a[2 * k]]\n    print(max(sum(b), sum(c)))", "for i in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    l = [int(i) for i in input().split()]\n    l = sorted(l, reverse=True)\n    s1 = 0\n    s2 = 0\n    i = 0\n    j = 2 * k\n    while j != 0:\n        if i == 0:\n            s1 += l[0]\n            i = 1\n            l.pop(0)\n        else:\n            s2 += l[0]\n            i = 0\n            l.pop(0)\n        j -= 1\n    s2 += l[0]\n    print(max(s1, s2))", "tc = int(input())\nwhile tc > 0:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    sum1 = 0\n    sum2 = 0\n    arr.sort(reverse=True)\n    for i in range(k):\n        sum1 += arr[2 * i]\n        sum2 += arr[2 * i + 1]\n    if n > 2 * k:\n        sum2 += arr[2 * k]\n    print(max(sum1, sum2))\n    tc -= 1", "tc = int(input())\nwhile tc > 0:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    sum1 = 0\n    sum2 = 0\n    arr.sort(reverse=True)\n    for i in range(k):\n        sum1 += arr[2 * i]\n        sum2 += arr[2 * i + 1]\n    if n > 2 * k:\n        sum2 += arr[2 * k]\n    print(max(sum1, sum2))\n    tc -= 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (c, d) = (0, 0)\n    k = list(map(int, input().split()))\n    g = len(k)\n    k.sort(reverse=True)\n    for i in range(b):\n        c += k[2 * i]\n        d += k[2 * i + 1]\n    if a >= 2 * b + 1:\n        d += k[2 * b]\n    print(max(c, d))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (c, d) = (0, 0)\n    k = list(map(int, input().split()))\n    g = len(k)\n    k.sort(reverse=True)\n    for i in range(b):\n        c += k[2 * i]\n        d += k[2 * i + 1]\n    if a >= 2 * b + 1:\n        d += k[2 * b]\n    print(max(c, d))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = sorted(list(map(int, input().split())), reverse=True)\n    a = b = 0\n    for i in range(k):\n        a += x[2 * i]\n        b += x[2 * i + 1]\n    if n >= 2 * k + 1:\n        b += x[2 * k]\n    print(max(a, b))", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    a.reverse()\n    first = 0\n    second = 0\n    for j in range(2 * k):\n        if j % 2 == 0:\n            first = first + a[j]\n        else:\n            second = second + a[j]\n    second = second + a[j + 1]\n    print(max(first, second))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a.reverse()\n    s1 = 0\n    s2 = 0\n    c1 = k\n    c2 = k\n    for i in range(0, len(a)):\n        if i % 2 == 0:\n            s1 += a[i]\n            c1 -= 1\n        if c1 == 0:\n            break\n    for i in range(len(a)):\n        if i % 2 != 0:\n            s2 += a[i]\n            c2 -= 1\n        if c2 == 0:\n            s2 += a[i + 1]\n            break\n    print(max(s1, s2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    a = a[:2 * k + 1]\n    r = 0\n    i = 0\n    s1 = 0\n    while r < k:\n        s1 += a[i]\n        i += 2\n        r += 1\n    print(max(s1, sum(a) - s1))", "for q in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = [int(i) for i in input().split()]\n    option1 = 0\n    option2 = 0\n    sum1 = 0\n    sum2 = 0\n    li.sort(reverse=True)\n    a = 0\n    for i in range(len(li)):\n        if i % 2 == 0 and option1 != k:\n            sum1 += li[i]\n            option1 += 1\n        elif i % 2 != 0:\n            sum2 += li[i]\n            option2 += 1\n        if option2 == k:\n            break\n    if i != n - 1:\n        sum2 += li[i + 1]\n    print(max(sum1, sum2))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    n_lst = list(map(int, input().split()))\n    n_lst.sort()\n    st = 0\n    nd = 0\n    n -= 1\n    for i in range(k):\n        st += n_lst[n]\n        if i + 1 == k:\n            nd += n_lst[n - 1] + n_lst[n - 2]\n        else:\n            nd += n_lst[n - 1]\n        n -= 2\n    print(max(st, nd))", "for i in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    nums.sort(reverse=True)\n    count = 0\n    count1 = 0\n    for j in range(k * 2):\n        if j == k * 2 - 1:\n            count1 += nums[j] + nums[j + 1]\n            break\n        if j % 2 == 0:\n            count += nums[j]\n        else:\n            count1 += nums[j]\n    print(max(count, count1))"]