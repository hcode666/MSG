["t = int(input())\nfor z in range(t):\n    (n, k) = map(int, input().split())\n    l = input().split()\n    for i in range(n):\n        l[i] = int(l[i])\n    i = 0\n    m = []\n    while i < n - 1:\n        s = i + 1\n        while s < n:\n            (x, y) = (l[i], l[s])\n            tot = x + y - k\n            if tot < 0:\n                tot = -tot\n            m.append(tot)\n            s = s + 1\n        i = i + 1\n    print(str(min(m)) + ' ' + str(m.count(min(m))))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    lst = sorted(list(map(int, input().split())), reverse=True)\n    prev = 5000\n    xv = []\n    for i in range(n):\n        for j in range(i, n):\n            if i == j:\n                continue\n            v = abs(lst[i] + lst[j] - k)\n            xv.append(v)\n    mn = min(xv)\n    print(mn, xv.count(mn))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = []\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            l.append(abs(a[i] + a[j] - k))\n    print(min(l), l.count(min(l)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = []\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            l.append(abs(a[i] + a[j] - k))\n    print(min(l), l.count(min(l)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = []\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            l.append(abs(a[i] + a[j] - k))\n    print(min(l), l.count(min(l)))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    minimum_diff = k\n    num_of_pairs = 0\n    sum_of_two_list = []\n    for j in range(n):\n        for l in range(j + 1, n):\n            sum_value = a[j] + a[l]\n            sum_of_two_list.append(abs(sum_value - k))\n    print(min(sum_of_two_list), sum_of_two_list.count(min(sum_of_two_list)))", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    lst1 = list()\n    lst = [int(x) for x in input().split()]\n    a = n - 1\n    a = a * (a + 1) / 2\n    for i in range(n):\n        for j in range(i + 1, n):\n            lst1.append(math.fabs(lst[i] + lst[j] - k))\n    print(int(min(lst1)), lst1.count(min(lst1)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    min = 2 ** 31 - 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            diff = abs(l[i] + l[j] - k)\n            if min > diff:\n                min = abs(l[i] + l[j] - k)\n            if diff in d:\n                d[diff] = d[diff] + 1\n            else:\n                d[diff] = 1\n    print(min, d[min])", "import sys\nimport collections\n\ndef lower_bound(A, first, last, value):\n    step = 0\n    count = last - first\n    index = 0\n    while count > 0:\n        index = first\n        step = count // 2\n        index += step\n        if A[index] < value:\n            index += 1\n            first = index\n            count -= step + 1\n        else:\n            count = step\n    return first\nfor _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    numbers_count = collections.Counter()\n    for a in A:\n        numbers_count[a] += 1\n    min_result = sys.maxsize\n    num_min_result = 0\n    for i in range(0, N - 1):\n        result = sys.maxsize\n        num_result = 0\n        numbers_count[A[i]] -= 1\n        if A[i] >= K:\n            result = abs(A[i] + A[i + 1] - K)\n            num_result = numbers_count[A[i + 1]]\n        else:\n            it = lower_bound(A, i + 1, len(A), K - A[i])\n            if it == len(A):\n                result = abs(A[i] + A[-1] - K)\n                num_result = numbers_count[A[-1]]\n            elif A[it] == K - A[i]:\n                result = 0\n                num_result = numbers_count[A[it]]\n            else:\n                result_prev = abs(A[i] + A[it - 1] - K) if it - 1 > i else sys.maxsize\n                result_it = abs(A[i] + A[it] - K)\n                if result_prev < result_it:\n                    result = result_prev\n                    num_result = numbers_count[A[it - 1]]\n                elif result_prev > result_it:\n                    result = result_it\n                    num_result = numbers_count[A[it]]\n                else:\n                    result = result_it\n                    num_result = numbers_count[A[it - 1]] + numbers_count[A[it]]\n        if result == min_result:\n            num_min_result += num_result\n        elif result < min_result:\n            min_result = result\n            num_min_result = num_result\n    print(str(min_result) + ' ' + str(num_min_result))", "import sys\nimport collections\n\ndef lower_bound(A, first, last, value):\n    step = 0\n    count = last - first\n    index = 0\n    while count > 0:\n        index = first\n        step = count // 2\n        index += step\n        if A[index] < value:\n            index += 1\n            first = index\n            count -= step + 1\n        else:\n            count = step\n    return first\nfor _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    numbers_count = collections.Counter()\n    for a in A:\n        numbers_count[a] += 1\n    min_result = sys.maxsize\n    num_min_result = 0\n    for i in range(0, N - 1):\n        result = sys.maxsize\n        num_result = 0\n        numbers_count[A[i]] -= 1\n        if A[i] >= K:\n            result = abs(A[i] + A[i + 1] - K)\n            num_result = numbers_count[A[i + 1]]\n        else:\n            it = lower_bound(A, i + 1, len(A), K - A[i])\n            if it == len(A):\n                result = abs(A[i] + A[-1] - K)\n                num_result = numbers_count[A[-1]]\n            elif A[it] == K - A[i]:\n                result = 0\n                num_result = numbers_count[A[it]]\n            else:\n                result_prev = abs(A[i] + A[it - 1] - K) if it - 1 > i else sys.maxsize\n                result_it = abs(A[i] + A[it] - K)\n                if result_prev < result_it:\n                    result = result_prev\n                    num_result = numbers_count[A[it - 1]]\n                elif result_prev > result_it:\n                    result = result_it\n                    num_result = numbers_count[A[it]]\n                else:\n                    result = result_it\n                    num_result = numbers_count[A[it - 1]] + numbers_count[A[it]]\n        if result == min_result:\n            num_min_result += num_result\n        elif result < min_result:\n            min_result = result\n            num_min_result = num_result\n    print(str(min_result) + ' ' + str(num_min_result))", "tests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    gap = 10 ** 11\n    count = 0\n    for j in range(n):\n        for l in range(j + 1, n):\n            temp = abs(arr[j] + arr[l] - k)\n            if temp < gap:\n                gap = temp\n                count = 1\n            elif temp == gap:\n                count += 1\n    print(gap, count)", "tests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    checked_numbers = set()\n    gap = abs(k - (arr[0] + arr[1]))\n    freq = {}\n    for j in range(n):\n        if arr[j] in freq:\n            freq[arr[j]] += 1\n        else:\n            freq[arr[j]] = 1\n        if arr[j] not in checked_numbers and gap != 0:\n            for l in range(j + 1, n):\n                gap = min(gap, abs(k - (arr[j] + arr[l])))\n            checked_numbers.add(arr[j])\n    ans = 0\n    used_combinations = set()\n    for j in freq.keys():\n        possiblities = [k + gap, k - gap]\n        for required in possiblities:\n            if required - j in freq and (j, required - j) not in used_combinations and ((required - j, j) not in used_combinations):\n                if required - j == j:\n                    ans += freq[j] * (freq[j] - 1) // 2\n                else:\n                    ans += freq[j] * freq[required - j]\n                    used_combinations.add((j, required - j))\n    print(gap, ans)", "tests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    checked_numbers = set()\n    gap = abs(k - (arr[0] + arr[1]))\n    freq = {}\n    for j in range(n):\n        if arr[j] in freq:\n            freq[arr[j]] += 1\n        else:\n            freq[arr[j]] = 1\n        if arr[j] not in checked_numbers:\n            for l in range(j + 1, n):\n                gap = min(gap, abs(k - (arr[j] + arr[l])))\n            checked_numbers.add(arr[j])\n    ans = 0\n    used_combinations = set()\n    for j in freq.keys():\n        possiblities = [k + gap, k - gap]\n        for required in possiblities:\n            if required - j in freq and (j, required - j) not in used_combinations and ((required - j, j) not in used_combinations):\n                if required - j == j:\n                    ans += freq[j] * (freq[j] - 1) // 2\n                else:\n                    ans += freq[j] * freq[required - j]\n                    used_combinations.add((j, required - j))\n    print(gap, ans)", "t = int(input())\nfor m in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = abs(a[0] + a[1] - k)\n    c = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            x = abs(a[i] + a[j] - k)\n            if x < ans:\n                ans = x\n                c = 1\n            elif x == ans:\n                c += 1\n    print(ans, c)", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    f = 0\n    l = []\n    for i in range(n + 1):\n        for j in range(i + 1, n):\n            f = abs(d[i] + d[j] - k)\n            l.append(f)\n    print(min(l), l.count(min(l)))", "n1 = int(input())\nfor i in range(n1):\n    (n, b) = map(int, input().split(' '))\n    l = list(map(int, input().split(' ')))\n    s = []\n    for j in range(0, n - 1):\n        for k in range(j + 1, n):\n            s.append(abs(l[j] + l[k] - b))\n    p = min(s)\n    c = 0\n    for j in s:\n        if j == p:\n            c = c + 1\n    print(p, c)", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    f = 0\n    l = []\n    for i in range(n + 1):\n        for j in range(i + 1, n):\n            f = abs(d[i] + d[j] - k)\n            l.append(f)\n    print(min(l), l.count(min(l)))", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    f = 0\n    l = []\n    for i in range(n + 1):\n        for j in range(i + 1, n):\n            f = abs(d[i] + d[j] - k)\n            l.append(f)\n    print(min(l), l.count(min(l)))", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    t -= 1\n    l = list(map(int, input().split()))\n    sum = 0\n    a = []\n    for i in range(0, n):\n        for j in range(i + 1, n):\n            x = l[i] + l[j] - k\n            x = abs(x)\n            a.append(x)\n    q = min(a)\n    z = a.count(q)\n    print(q, z)", "import math\ncase = int(input())\nfor i in range(case):\n    (N, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    curr_min = math.inf\n    count = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            min_value = abs(arr[i] + arr[j] - k)\n            if min_value == curr_min:\n                count += 1\n            if min_value < curr_min:\n                curr_min = min_value\n                count = 1\n    print(curr_min, count)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    minVal = float('infinity')\n    for i in range(n):\n        for j in range(i + 1, n):\n            diff = abs(arr[i] + arr[j] - k)\n            if minVal > diff:\n                count = 1\n                minVal = diff\n            elif diff == minVal:\n                count += 1\n    print(minVal, count)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    minVal = float('infinity')\n    for i in range(n):\n        for j in range(i + 1, n):\n            diff = abs(arr[i] + arr[j] - k)\n            if minVal > diff:\n                count = 1\n                minVal = diff\n            elif diff == minVal:\n                count += 1\n    print(minVal, count)", "t = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            z = abs(a[i] + a[j] - k)\n            c.append(z)\n    r = min(c)\n    s = c.count(r)\n    print(r, s)", "from array import array\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    vals = array('i', map(int, input().split()))\n    hmap = dict()\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            add = abs(vals[i] + vals[j] - k)\n            hmap[add] = hmap.get(add, 0) + 1\n    min_val = min(list(hmap.keys()))\n    freq = hmap[min_val]\n    print(min_val, ' ', freq)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    m = 100\n    d = []\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            m = abs(l[i] + l[j] - k)\n            d.append(m)\n    m = min(d)\n    c = d.count(m)\n    print(m, '', c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    m = 100\n    d = []\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            m = abs(l[i] + l[j] - k)\n            d.append(m)\n    m = min(d)\n    c = d.count(m)\n    print(m, '', c)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = []\n    for j in range(n - 1):\n        for z in range(j + 1, n):\n            v = abs(l[j] + l[z] - k)\n            d.append(v)\n    print(min(d), d.count(min(d)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    emp = []\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            var = abs(arr[i] + arr[j] - k)\n            emp.append(var)\n    print(min(emp), emp.count(min(emp)))", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    f = 0\n    l = []\n    for i in range(n + 1):\n        for j in range(i + 1, n):\n            f = abs(d[i] + d[j] - k)\n            l.append(f)\n    print(min(l), l.count(min(l)))", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    f = 0\n    l = []\n    for i in range(n + 1):\n        for j in range(i + 1, n):\n            f = abs(d[i] + d[j] - k)\n            l.append(f)\n    print(min(l), l.count(min(l)))", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    f = 0\n    l = []\n    for i in range(n + 1):\n        for j in range(i + 1, n):\n            f = abs(d[i] + d[j] - k)\n            l.append(f)\n    print(min(l), l.count(min(l)))", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    f = 0\n    l = []\n    for i in range(n + 1):\n        for j in range(i + 1, n):\n            f = abs(d[i] + d[j] - k)\n            l.append(f)\n    print(min(l), l.count(min(l)))", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    f = 0\n    l = []\n    for i in range(n + 1):\n        for j in range(i + 1, n):\n            f = abs(d[i] + d[j] - k)\n            l.append(f)\n    print(min(l), l.count(min(l)))", "def solution():\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    min_val = 10000000000.0\n    count = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            dif = abs(A[i] + A[j] - K)\n            if min_val > dif:\n                min_val = dif\n                count = 1\n            elif min_val == dif:\n                count += 1\n    print(min_val, end=' ')\n    print(count)\nT = int(input())\nwhile T > 0:\n    T = T - 1\n    solution()", "def solution():\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    min_val = 10000000000.0\n    count = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            dif = abs(A[i] + A[j] - K)\n            if min_val > dif:\n                min_val = dif\n                count = 1\n            elif min_val == dif:\n                count += 1\n    print(min_val, end=' ')\n    print(count)\nT = int(input())\nwhile T > 0:\n    T = T - 1\n    solution()", "def solution():\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    min_val = 10000000000.0\n    count = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            dif = abs(A[i] + A[j] - K)\n            if min_val > dif:\n                min_val = dif\n                count = 1\n            elif min_val == dif:\n                count += 1\n    print(min_val, end=' ')\n    print(count)\nT = int(input())\nwhile T > 0:\n    T = T - 1\n    solution()", "def solution():\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    min_val = 10000000000.0\n    count = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            dif = abs(A[i] + A[j] - K)\n            if min_val > dif:\n                min_val = dif\n                count = 1\n            elif min_val == dif:\n                count += 1\n    print(min_val, end=' ')\n    print(count)\nT = int(input())\nwhile T > 0:\n    T = T - 1\n    solution()", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    f = 0\n    l = []\n    for i in range(n + 1):\n        for j in range(i + 1, n):\n            f = abs(d[i] + d[j] - k)\n            l.append(f)\n    print(min(l), l.count(min(l)))", "a = int(input())\nfor i in range(a):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    f = 0\n    l = []\n    for i in range(n + 1):\n        for j in range(i + 1, n):\n            f = abs(d[i] + d[j] - k)\n            l.append(f)\n    print(min(l), l.count(min(l)))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    mn = abs(l[0] + l[1] - k)\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            temp = abs(l[i] + l[j] - k)\n            if temp == mn:\n                c += 1\n            elif temp < mn:\n                mn = temp\n                c = 1\n            elif l[i] + l[j] - k > mn:\n                break\n    print(mn, c)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    mn = abs(l[0] + l[1] - k)\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            temp = abs(l[i] + l[j] - k)\n            if temp == mn:\n                c += 1\n            elif temp < mn:\n                mn = temp\n                c = 1\n            elif l[i] + l[j] - k > mn:\n                break\n    print(mn, c)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            d.append(abs(l[i] + l[j] - k))\n    print(min(d), d.count(min(d)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    stack = []\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            stack.append(abs(arr[i] + arr[j] - k))\n    print(min(stack), stack.count(min(stack)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    aux = []\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            aux.append(abs(l[i] + l[j] - k))\n    m = min(aux)\n    t_1 = aux.count(m)\n    print(m, t_1)", "t = int(input())\nfor i in range(t):\n    l = []\n    mi = 99999999999\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for j in range(n - 1):\n        for k in range(j + 1, n):\n            a1 = a[j]\n            a2 = a[k]\n            b1 = a1 + a2 - m\n            b2 = abs(b1)\n            l.append(b2)\n            if mi > b2:\n                mi = b2\n    print(mi, l.count(mi))", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    x = 3 * 10 ** 9\n    a = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            a.append(abs(l[j] + l[i] - k))\n    m = min(a)\n    print(m, a.count(m))\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    x = 3 * 10 ** 9\n    c = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            y = abs(l[j] + l[i] - k)\n            if y < x:\n                x = y\n    for i in range(n):\n        for j in range(i + 1, n):\n            if abs(l[j] + l[i] - k) == x:\n                c += 1\n    print(x, c)\n    t -= 1", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ind = 1\n    m = float('inf')\n    for i in range(n):\n        for j in range(i + 1, n):\n            if m > abs(a[i] + a[j] - k):\n                m = abs(a[i] + a[j] - k)\n                ind = 1\n            elif m == abs(a[i] + a[j] - k):\n                ind += 1\n    print(m, ind)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    s = list(map(int, input().split()))\n    c = 0\n    t = float('inf')\n    for j in range(N):\n        for k in range(j + 1, N):\n            if abs(s[j] + s[k] - K) < t:\n                t = abs(s[j] + s[k] - K)\n                c = 1\n            elif abs(s[j] + s[k] - K) == t:\n                c += 1\n    print(t, c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    list1.sort()\n    min1 = 1000000000000001\n    maxsum = 0\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            temp = abs(list1[i] + list1[j] - k)\n            if temp < min1:\n                min1 = min(min1, temp)\n    if min1 != 0:\n        cand1 = k + min1\n        cand2 = k - min1\n        s = list()\n        cnt = 0\n        for i in list1:\n            t1 = cand1 - i\n            if t1 in s:\n                cnt += s.count(t1)\n            t2 = cand2 - i\n            if t2 in s:\n                cnt += s.count(t2)\n            s.append(i)\n        print(min1, cnt)\n    else:\n        cand = k + min1\n        s = list()\n        cnt = 0\n        for i in list1:\n            t1 = cand - i\n            if t1 in s:\n                cnt += s.count(t1)\n            s.append(i)\n        print(min1, cnt)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    list1.sort()\n    min1 = 1000000000000001\n    maxsum = 0\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            temp = abs(list1[i] + list1[j] - k)\n            if temp < min1:\n                min1 = min(min1, temp)\n    if min1 != 0:\n        cand1 = k + min1\n        cand2 = k - min1\n        s = list()\n        cnt = 0\n        for i in list1:\n            t1 = cand1 - i\n            if t1 in s:\n                cnt += s.count(t1)\n            t2 = cand2 - i\n            if t2 in s:\n                cnt += s.count(t2)\n            s.append(i)\n        print(min1, cnt)\n    else:\n        cand = k + min1\n        s = list()\n        cnt = 0\n        for i in list1:\n            t1 = cand - i\n            if t1 in s:\n                cnt += s.count(t1)\n            s.append(i)\n        print(min1, cnt)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    s = list(map(int, input().split()))\n    c = 0\n    t = float('inf')\n    for j in range(N):\n        for k in range(j + 1, N):\n            if abs(s[j] + s[k] - K) < t:\n                t = abs(s[j] + s[k] - K)\n                c = 1\n            elif abs(s[j] + s[k] - K) == t:\n                c += 1\n    print(t, c)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    s = list(map(int, input().split()))\n    c = 0\n    t = float('inf')\n    for j in range(N):\n        for k in range(j + 1, N):\n            if abs(s[j] + s[k] - K) < t:\n                t = abs(s[j] + s[k] - K)\n                c = 1\n            elif abs(s[j] + s[k] - K) == t:\n                c += 1\n    print(t, c)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    array = list(map(int, input().split()))\n    count = 0\n    mn = float('inf')\n    for i in range(N):\n        for j in range(i + 1, N):\n            if abs(array[i] + array[j] - K) < mn:\n                mn = abs(array[i] + array[j] - K)\n                count = 1\n            elif abs(array[i] + array[j] - K) == mn:\n                count += 1\n    print(mn, count)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    array = list(map(int, input().split()))\n    count = 0\n    mn = float('inf')\n    for i in range(N):\n        for j in range(i + 1, N):\n            if abs(array[i] + array[j] - K) < mn:\n                mn = abs(array[i] + array[j] - K)\n                count = 1\n            elif abs(array[i] + array[j] - K) == mn:\n                count += 1\n    print(mn, count)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    array = list(map(int, input().split()))\n    count = 0\n    mn = float('inf')\n    for i in range(N):\n        for j in range(i + 1, N):\n            if abs(array[i] + array[j] - K) < mn:\n                mn = abs(array[i] + array[j] - K)\n                count = 1\n            elif abs(array[i] + array[j] - K) == mn:\n                count += 1\n    print(mn, count)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    list_diff = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            list_diff.append(abs(arr[i] + arr[j] - k))\n    m = min(list_diff)\n    ans = list_diff.count(m)\n    print(m, end=' ')\n    print(ans)", "from random import randint\n\nclass Solution(object):\n\n    def __init__(self):\n        self.min_num = 0\n        self.min_val = 0\n        self.t = int(input())\n        self.n = self.k = 0\n        self.data = []\n        for _ in range(self.t):\n            self.get_data()\n            self.solve()\n            self.print_answer()\n            self.clear_data()\n    pass\n\n    def get_data(self):\n        (self.n, self.k) = map(int, input().split())\n        self.data = list(map(int, input().split()))\n        pass\n\n    def print_answer(self):\n        print('%d %d' % (self.min_val, self.min_num))\n        pass\n\n    def clear_data(self):\n        self.data.clear()\n        self.min_num = self.min_val = self.n = self.k = 0\n        pass\n\n    def solve(self):\n        self.min_val = 2 * pow(10, 9) + 1\n        self.data.sort()\n        for i in range(self.n - 1):\n            for j in range(i + 1, self.n):\n                x = abs(self.data[i] + self.data[j] - self.k)\n                if x < self.min_val:\n                    self.min_val = x\n                    self.min_num = 1\n                elif x == self.min_val:\n                    self.min_num += 1\n        pass\n\n    @classmethod\n    def create_test(cls):\n        t_lim = 1\n        t = randint(1, pow(10, t_lim))\n        print(t)\n        for _ in range(t):\n            n_lim = 1\n            k_lim = 1\n            a_lim = 1\n            n = randint(1, pow(10, n_lim))\n            k = randint(1, pow(10, k_lim))\n            print('%d %d' % (n, k))\n            for _ in range(n):\n                a = randint(1, pow(10, a_lim))\n                print(a, end=' ')\n            print()\n        exit(0)\n        pass\n\ndef main():\n    Solution()\n    pass\nmain()", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    L = list(map(int, input().split()))\n    l = []\n    for k in range(N):\n        for j in range(k + 1, N):\n            if k != j:\n                l.append(abs(L[k] + L[j] - K))\n    print(min(l), l.count(min(l)))", "for _ in range(int(input())):\n    (a, k) = map(int, input().split())\n    result = []\n    lst = list(map(int, input().split()))\n    for i in range(len(lst) - 1):\n        for j in range(i + 1, len(lst)):\n            a = abs(lst[i] + lst[j] - k)\n            result.append(a)\n    print(min(result), result.count(min(result)))", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    result = [abs(a[x] + a[y] - k) for x in range(n) for y in range(x + 1, n)]\n    minimum = min(result)\n    print(minimum, result.count(minimum))", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    min = 1000000000000\n    c = 0\n    for i in range(len(l) - 1):\n        for j in range(i + 1, len(l)):\n            if min > abs(l[i] + l[j] - b):\n                min = abs(l[i] + l[j] - b)\n                c = 1\n            elif abs(l[i] + l[j] - b) == min:\n                c = c + 1\n    print(min, c)", "t = int(input())\nfor T in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    val = abs(a[0] + a[1] - k)\n    c = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if val == abs(a[i] + a[j] - k):\n                c += 1\n            elif val > abs(a[i] + a[j] - k):\n                val = abs(a[i] + a[j] - k)\n                c = 1\n            else:\n                continue\n    print(val, c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    mini = 10000000000000000000\n    l = [int(i) for i in input().split()]\n    cmaxi = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            curr = abs(l[i] + l[j] - k)\n            if curr < mini:\n                mini = curr\n                cmaxi = 1\n            elif curr == mini:\n                cmaxi += 1\n    print(mini, cmaxi)", "for testcase in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = list(map(int, input().split()))\n    result = [abs(a[i] + a[j] - k) for i in range(0, n) for j in range(i + 1, n)]\n    print(min(result), result.count(min(result)))", "for testcase in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = list(map(int, input().split()))\n    result = [abs(a[i] + a[j] - k) for i in range(0, n) for j in range(i + 1, n)]\n    print(min(result), result.count(min(result)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    l1 = list()\n    for i in range(n):\n        for j in range(i, n):\n            if i != j:\n                l1.append(abs(l[i] + l[j] - k))\n    print(min(l1), l1.count(min(l1)))", "import sys\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    minimum = sys.maxsize\n    count = 0\n    for j in range(n):\n        for m in range(j + 1, n):\n            x = abs(l[j] + l[m] - k)\n            if x < minimum:\n                count = 1\n                minimum = x\n            elif x == minimum:\n                count += 1\n    print(minimum, count)", "t = int(input())\nwhile t >= 1:\n    n = input()\n    arr = n.split()\n    a = int(arr[0])\n    k = int(arr[1])\n    c = input()\n    c = c.split()\n    arr1 = []\n    sum = []\n    for i in range(len(c)):\n        arr1.append(int(c[i]))\n    arr1.sort()\n    numberofpairs = 0\n    min_value = 10000000000\n    count = 0\n    assist = 0\n    d = 0\n    f = 0\n    while d < len(arr1):\n        e = d + 1\n        while e < len(arr1):\n            if abs(arr1[d] + arr1[e] - k) < min_value:\n                min_value = abs(arr1[d] + arr1[e] - k)\n                count = 1\n            elif abs(arr1[d] + arr1[e] - k) == min_value:\n                count = count + 1\n            e = e + 1\n        d = d + 1\n    print('{} {}'.format(min_value, count))\n    t = t - 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    x = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            x.append(abs(a[i] + a[j] - k))\n    print(min(x), x.count(min(x)))", "from itertools import combinations\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l = list(combinations(l, 2))\n    x = []\n    for i in l:\n        x.append(abs(sum(i) - k))\n    print(min(x), x.count(min(x)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    x = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            x.append(abs(arr[i] + arr[j] - k))\n    print(min(x), x.count(min(x)))", "from itertools import combinations\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    li2 = list(combinations(li, 2))\n    (mn, ct) = (10000000000, 0)\n    for x in li2:\n        if abs(x[0] + x[1] - k) < mn:\n            mn = abs(x[0] + x[1] - k)\n    for x in li2:\n        if abs(x[0] + x[1] - k) == mn:\n            ct += 1\n    print(mn, ct)", "t = int(input())\nwhile t:\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    import array\n    arr = [int(x) for x in input().split()]\n    mn = 1e+18\n    cnt = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if abs(arr[i] + arr[j] - k) < mn:\n                mn = abs(arr[i] + arr[j] - k)\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if abs(arr[i] + arr[j] - k) == mn:\n                cnt += 1\n    print(mn, cnt)\n    t -= 1", "def inp():\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    if n >= 2 and n <= 1000:\n        l = list(map(int, input().split()))\n        l = l[:n]\n        le = len(l)\n        s = []\n        p = []\n        i = 0\n        while i < le:\n            j = le - 1\n            while j > i:\n                s.append(l[i] + l[j])\n                j = j - 1\n            i = i + 1\n        for i in s:\n            d = k - i\n            if d < 0:\n                p.append(-d)\n            else:\n                p.append(d)\n        m = min(p)\n        c = p.count(m)\n        print(m, c)\nt = int(input())\nif t > 0 and t <= 50:\n    for i in range(0, t):\n        inp()", "t = int(input())\nfor I in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    b = []\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            b.append(abs(a[i] + a[j] - k))\n    count = 0\n    p = min(b)\n    for i in b:\n        if i == p:\n            count += 1\n    print(p, count)", "t = int(input())\nfor e in range(0, t):\n    (n, k) = input().strip().split()\n    n = int(n)\n    k = int(k)\n    a = list(map(int, input().strip().split()))\n    low = float('inf')\n    count = 0\n    for i in range(0, n - 1):\n        for j in range(i + 1, n):\n            if abs(a[i] + a[j] - k) < low:\n                low = abs(a[i] + a[j] - k)\n                count = 1\n            elif abs(a[i] + a[j] - k) == low:\n                count += 1\n    print(low, count)", "t = int(input())\nfor e in range(0, t):\n    (n, k) = input().strip().split()\n    n = int(n)\n    k = int(k)\n    a = list(map(int, input().strip().split()))\n    low = float('inf')\n    count = 0\n    for i in range(0, n - 1):\n        for j in range(i + 1, n):\n            if abs(a[i] + a[j] - k) < low:\n                low = abs(a[i] + a[j] - k)\n                count = 1\n            elif abs(a[i] + a[j] - k) == low:\n                count += 1\n            else:\n                continue\n    print(low, count)", "T = int(input())\nfor i in range(T):\n    (n, k) = [int(s) for s in input().split()]\n    l = [int(s) for s in input().split()]\n    m = []\n    for j in range(n):\n        for a in range(j + 1, n):\n            m.append(abs(l[a] + l[j] - k))\n    print(min(m), m.count(min(m)))", "for t in range(int(input())):\n    temp = list(map(int, input().split()))\n    n = temp[0]\n    k = temp[1]\n    a = list(map(int, input().split()))\n    count = 0\n    minn = -1\n    for i in range(n):\n        for j in range(i + 1, n):\n            if minn == -1:\n                count += 1\n                minn = abs(a[i] + a[j] - k)\n            elif abs(a[i] + a[j] - k) == minn:\n                count += 1\n            elif abs(a[i] + a[j] - k) < minn:\n                minn = abs(a[i] + a[j] - k)\n                count = 1\n    print(minn, count)", "t = int(input())\nfor i in range(t):\n    B = list(map(eval, input().split()))\n    A = list(map(eval, input().split()))\n    count = 0\n    minimum = 10000000000\n    for j in range(len(A) - 1):\n        for m in range(j + 1, len(A)):\n            if abs(A[j] + A[m] - B[1]) < minimum:\n                count = 0\n                minimum = abs(A[j] + A[m] - B[1])\n            if abs(A[j] + A[m] - B[1]) == minimum:\n                count += 1\n    L = []\n    L.append(minimum)\n    L.append(count)\n    print(*L)", "from sys import stdin, stdout\n\ndef sin():\n    return stdin.readline().rstrip()\n\ndef listInput():\n    return list(map(int, sin().split()))\n\ndef printBS(li):\n    if not li:\n        return\n    for i in range(len(li) - 1):\n        stdout.write('%d ' % li[i])\n    stdout.write('%d\\n' % li[-1])\nt = int(sin())\nfor _ in range(t):\n    (n, k) = listInput()\n    (mc, mv) = (0, 2 * 10 ** 9)\n    li = listInput()\n    for i in range(n):\n        for j in range(i + 1, n):\n            te = int(abs(li[i] + li[j] - k))\n            if te < mv:\n                (mv, mc) = (te, 1)\n            elif te == mv:\n                mc += 1\n    print(mv, mc)", "from sys import stdin\nT = int(stdin.readline().strip())\nwhile T > 0:\n    [N, K] = [int(n) for n in stdin.readline().strip().split()]\n    arr = list(map(int, stdin.readline().strip().split()))\n    minAbs = abs(arr[0] + arr[1] - K)\n    count = 0\n    for i in range(0, N - 1):\n        for j in range(i + 1, N):\n            absVal = abs(arr[i] + arr[j] - K)\n            if absVal < minAbs:\n                minAbs = absVal\n                count = 1\n            elif absVal == minAbs:\n                count += 1\n    print(minAbs, count)\n    T -= 1", "from sys import stdin\nT = int(stdin.readline().strip())\nwhile T > 0:\n    [N, K] = [int(n) for n in stdin.readline().strip().split()]\n    arr = [int(n) for n in stdin.readline().strip().split()]\n    minAbs = abs(arr[0] + arr[1] - K)\n    count = 0\n    for i in range(0, N - 1):\n        for j in range(i + 1, N):\n            absVal = abs(arr[i] + arr[j] - K)\n            if absVal < minAbs:\n                minAbs = absVal\n                count = 1\n            elif absVal == minAbs:\n                count += 1\n    print(minAbs, count)\n    T -= 1", "from sys import stdin\nT = int(stdin.readline().strip())\nwhile T > 0:\n    [N, K] = [int(n) for n in stdin.readline().strip().split()]\n    arr = [int(n) for n in stdin.readline().strip().split()]\n    minAbs = abs(arr[0] + arr[1] - K)\n    count = 0\n    for i in range(0, N - 1):\n        for j in range(i + 1, N):\n            if i == j:\n                continue\n            if abs(arr[i] + arr[j] - K) < minAbs:\n                minAbs = abs(arr[i] + arr[j] - K)\n                count = 1\n            elif abs(arr[i] + arr[j] - K) == minAbs:\n                count += 1\n    print(minAbs, count)\n    T -= 1", "from sys import stdin\nT = int(stdin.readline().strip())\nwhile T > 0:\n    [N, K] = [int(n) for n in stdin.readline().strip().split()]\n    arr = [int(n) for n in stdin.readline().strip().split()]\n    minAbs = abs(arr[0] + arr[1] - K)\n    count = 0\n    for i in range(0, N - 1):\n        for j in range(i, N):\n            if i == j:\n                continue\n            if abs(arr[i] + arr[j] - K) < minAbs:\n                minAbs = abs(arr[i] + arr[j] - K)\n                count = 1\n            elif abs(arr[i] + arr[j] - K) == minAbs:\n                count += 1\n    print(minAbs, count)\n    T -= 1", "import sys\nimport collections\n\ndef lower_bound(A, first, last, value):\n    step = 0\n    count = last - first\n    index = 0\n    while count > 0:\n        index = first\n        step = count // 2\n        index += step\n        if A[index] < value:\n            index += 1\n            first = index\n            count -= step + 1\n        else:\n            count = step\n    return first\nT = int(input())\nfor t in range(T):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    numbers_count = collections.Counter()\n    for a in A:\n        numbers_count[a] += 1\n    min_result = sys.maxsize\n    num_min_result = 0\n    for i in range(0, N - 1):\n        result = sys.maxsize\n        num_result = 0\n        numbers_count[A[i]] -= 1\n        if A[i] >= K:\n            result = abs(A[i] + A[i + 1] - K)\n            num_result = numbers_count[A[i + 1]]\n        else:\n            it = lower_bound(A, i + 1, len(A), K - A[i])\n            if it == len(A):\n                result = abs(A[i] + A[-1] - K)\n                num_result = numbers_count[A[-1]]\n            elif A[it] == K - A[i]:\n                result = 0\n                num_result = numbers_count[A[it]]\n            else:\n                result_prev = abs(A[i] + A[it - 1] - K) if it - 1 > i else sys.maxsize\n                result_it = abs(A[i] + A[it] - K)\n                if result_prev < result_it:\n                    result = result_prev\n                    num_result = numbers_count[A[it - 1]]\n                elif result_prev > result_it:\n                    result = result_it\n                    num_result = numbers_count[A[it]]\n                else:\n                    result = result_it\n                    num_result = numbers_count[A[it - 1]] + numbers_count[A[it]]\n        if result == min_result:\n            num_min_result += num_result\n        elif result < min_result:\n            min_result = result\n            num_min_result = num_result\n    print(str(min_result) + ' ' + str(num_min_result))"]