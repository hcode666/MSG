["(r, c) = map(int, input().split())\nsteps = []\nif r == 1:\n    steps += ['U', 'R'] + ['R'] * (c - 2)\nelif c == 1:\n    steps += ['U', 'R'] + ['U'] * (r - 2)\nelse:\n    steps = ['U', 'R'] + (['U'] * (c - 1) + ['D'] * (c - 1) + ['R']) * (r - 1) + ['U'] * c + ['L'] * (r - 1)\ns = ''.join(steps)\nprint(s)", "(rows, columns) = map(int, input().split())\nif rows == 1:\n    x = 'U' + 'R' * (columns - 1)\n    print(x)\nelse:\n    d = rows\n    x = 'R'\n    for i in range(columns):\n        x += 'U' * d + 'D' * d + 'R'\n        d += rows\n    print(x)", "import sys\nimport math\nfrom collections import defaultdict, deque\ninput = sys.stdin.readline\n\ndef inar():\n    return [int(el) for el in input().split()]\n\ndef main():\n    (r, c) = inar()\n    if r == 1:\n        print('UR' + 'R' * max(0, c - 2))\n    elif c == 1:\n        print('UR' + 'U' * max(0, r - 2))\n    else:\n        take = 'U'\n        for i in range(1, r + 1):\n            take += 'R' * c\n            if i == r:\n                break\n            take += 'L' * c + 'U'\n        take += 'D' * r + 'R' + 'U' * r\n        print(take)\nmain()", "(r, c) = map(int, input().split())\nans = 'U'\nfor i in range(r - 1):\n    ans + 'U'\n    for j in range(1, c):\n        ans += 'R'\n    ans += 'D'\n    ans += 'R'\n    ans += 'U'\n    for j in range(c):\n        ans += 'L'\n    ans += 'U'\nfor i in range(1, c):\n    ans += 'R'\nprint(ans)"]