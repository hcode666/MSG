["t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = False\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = True\n                    print('NO')\n                    break\n        if found:\n            break\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = False\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = True\n                    print('NO')\n                    break\n        if found:\n            break\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = False\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = True\n                    print('NO')\n                    break\n        if found:\n            break\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = False\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = True\n                    print('NO')\n                    break\n        if found:\n            break\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    g = [[0] * m for x in range(n)]\n    for j in range(n):\n        s = input()\n        for k in range(m):\n            g[j][k] = s[k]\n    c = [[0] * m for x in range(n)]\n    for a in range(n - 1):\n        for b in range(m - 1):\n            if g[a][b] == '.' and g[a + 1][b] == '.' and (g[a][b + 1] == '.') and (g[a + 1][b + 1] == '.'):\n                c[a][b] = 1\n                c[a + 1][b] = 1\n                c[a][b + 1] = 1\n                c[a + 1][b + 1] = 1\n    f = True\n    for u in range(n):\n        for w in range(m):\n            if c[u][w] == 0:\n                if g[u][w] == '.':\n                    f = False\n                    break\n    print('YES' if f else 'NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = False\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = True\n                    print('NO')\n                    break\n        if found:\n            break\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = True\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = False\n                    break\n    if found:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = True\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = False\n                    break\n    if found:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = True\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = False\n                    break\n    if found:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = True\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = False\n                    break\n    if found:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = True\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = False\n                    break\n    if found:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = True\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = False\n                    break\n    if found:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = True\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = False\n                    break\n    if found:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    grid = [[0] * m for i in range(n)]\n    for i in range(n):\n        string = input()\n        for j in range(m):\n            grid[i][j] = string[j]\n    marked = [[0] * m for i in range(n)]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '.' and grid[i + 1][j] == '.' and (grid[i][j + 1] == '.') and (grid[i + 1][j + 1] == '.'):\n                marked[i][j] = 1\n                marked[i + 1][j] = 1\n                marked[i][j + 1] = 1\n                marked[i + 1][j + 1] = 1\n    found = True\n    for i in range(n):\n        for j in range(m):\n            if marked[i][j] == 0:\n                if grid[i][j] == '.':\n                    found = False\n                    break\n    if found:\n        print('YES')\n    else:\n        print('NO')", "def condition(i, j):\n    if i + 1 >= n or j + 1 >= m:\n        return False\n    if a[i][j] == '#':\n        return False\n    if a[i][j + 1] == '#':\n        return False\n    if a[i + 1][j] == '#':\n        return False\n    if a[i + 1][j + 1] == '#':\n        return False\n    return True\n\ndef answer():\n    v = [[False for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if condition(i, j):\n                v[i][j] = True\n                v[i][j + 1] = True\n                v[i + 1][j] = True\n                v[i + 1][j + 1] = True\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == '.' and (not v[i][j]):\n                return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [input() for i in range(n)]\n    print(answer())", "def condition(i, j):\n    if i + 1 >= n or j + 1 >= m:\n        return False\n    if a[i][j] == '#':\n        return False\n    if a[i][j + 1] == '#':\n        return False\n    if a[i + 1][j] == '#':\n        return False\n    if a[i + 1][j + 1] == '#':\n        return False\n    return True\n\ndef answer():\n    v = [[False for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if condition(i, j):\n                v[i][j] = True\n                v[i][j + 1] = True\n                v[i + 1][j] = True\n                v[i + 1][j + 1] = True\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == '.' and (not v[i][j]):\n                return 'NO'\n    return 'YES'\nfor T in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [input() for i in range(n)]\n    print(answer())", "for _ in range(int(input())):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    arr = []\n    tot = 0\n    col = 0\n    for _ in range(0, n):\n        x = input()\n        tot = tot + x.count('.')\n        arr.append(list(x))\n    loop = (n - 1) * (m - 1)\n    i = 0\n    j = 0\n    for _ in range(loop):\n        if arr[i][j] != '#' and arr[i][j + 1] != '#' and (arr[i + 1][j] != '#') and (arr[i + 1][j + 1] != '#'):\n            arr[i][j] = 1\n            arr[i][j + 1] = 1\n            arr[i + 1][j + 1] = 1\n            arr[i + 1][j] = 1\n        j += 1\n        if j < m - 1:\n            pass\n        else:\n            if i < n - 1:\n                i += 1\n            j = 0\n    for k in arr:\n        col = col + k.count(1)\n    if col == tot:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    mat = []\n    tot = 0\n    col = 0\n    for _ in range(n):\n        s = input()\n        tot = tot + s.count('.')\n        l = list(s)\n        mat.append(l)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if (mat[i][j] == '.' or mat[i][j] == 'c') and (mat[i + 1][j] == '.' or mat[i + 1][j] == 'c') and (mat[i + 1][j + 1] == '.' or mat[i + 1][j + 1] == 'c') and (mat[i][j + 1] == '.' or mat[i][j + 1] == 'c'):\n                mat[i][j] = 'c'\n                mat[i + 1][j] = 'c'\n                mat[i + 1][j + 1] = 'c'\n                mat[i][j + 1] = 'c'\n    for k in mat:\n        col = col + k.count('c')\n    if col == tot:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    matrix = []\n    num_dots = 0\n    num_has = 0\n    for i in range(n):\n        temp = list(input())\n        matrix.append(temp)\n        num_dots += temp.count('.')\n        num_has += temp.count('#')\n    for i in range(n):\n        if i + 1 == n:\n            break\n        for j in range(m):\n            if j + 1 == m:\n                break\n            elem1 = matrix[i][j]\n            elem2 = matrix[i][j + 1]\n            elem3 = matrix[i + 1][j]\n            elem4 = matrix[i + 1][j + 1]\n            if elem1 == '#' or elem2 == '#' or elem3 == '#' or (elem4 == '#'):\n                pass\n            else:\n                matrix[i][j] = 'c'\n                matrix[i][j + 1] = 'c'\n                matrix[i + 1][j] = 'c'\n                matrix[i + 1][j + 1] = 'c'\n    num_cs = 0\n    for i in range(n):\n        num_cs += matrix[i].count('c')\n    if num_dots == num_cs:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    matrix = []\n    num_dots = 0\n    num_has = 0\n    for i in range(n):\n        temp = list(input())\n        matrix.append(temp)\n        num_dots += temp.count('.')\n        num_has += temp.count('#')\n    for i in range(n):\n        if i + 1 == n:\n            break\n        for j in range(m):\n            if j + 1 == m:\n                break\n            elem1 = matrix[i][j]\n            elem2 = matrix[i][j + 1]\n            elem3 = matrix[i + 1][j]\n            elem4 = matrix[i + 1][j + 1]\n            if elem1 == '#' or elem2 == '#' or elem3 == '#' or (elem4 == '#'):\n                pass\n            else:\n                matrix[i][j] = 'c'\n                matrix[i][j + 1] = 'c'\n                matrix[i + 1][j] = 'c'\n                matrix[i + 1][j + 1] = 'c'\n    num_cs = 0\n    for i in range(n):\n        num_cs += matrix[i].count('c')\n    if num_dots == num_cs:\n        print('YES')\n    else:\n        print('NO')", "try:\n    for _ in range(int(input())):\n        (n, m) = map(int, input().split())\n        arr = [list('#' * (m + 2))]\n        for x in range(n):\n            arr.append(list('#' + input() + '#'))\n        arr.append(list('#' * (m + 2)))\n        for i in range(1, n + 1):\n            for j in range(1, m + 1):\n                val = True\n                if arr[i][j] == '.':\n                    if arr[i + 1][j] + arr[i + 1][j + 1] + arr[i][j + 1] == '...' or arr[i + 1][j] + arr[i + 1][j - 1] + arr[i][j - 1] == '...' or arr[i - 1][j] + arr[i - 1][j - 1] + arr[i][j - 1] == '...' or (arr[i - 1][j] + arr[i - 1][j + 1] + arr[i][j + 1] == '...'):\n                        val = True\n                    else:\n                        val = False\n                if val == False:\n                    break\n            if val == False:\n                break\n        print('NO' if val == False else 'YES')\nexcept:\n    pass", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    lst = []\n    for i in range(n):\n        lst.append(list(input()))\n    for i in range(n):\n        for j in range(m):\n            if lst[i][j] == '.':\n                lst[i][j] = 0\n            else:\n                lst[i][j] = 3\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if lst[i][j] == 3 or lst[i + 1][j] == 3 or lst[i][j + 1] == 3 or (lst[i + 1][j + 1] == 3):\n                continue\n            else:\n                if lst[i][j] == 0:\n                    lst[i][j] += 1\n                if lst[i + 1][j] == 0:\n                    lst[i + 1][j] += 1\n                if lst[i][j + 1] == 0:\n                    lst[i][j + 1] += 1\n                if lst[i + 1][j + 1] == 0:\n                    lst[i + 1][j + 1] += 1\n    s = 0\n    for i in lst:\n        count = sum(i) - i.count(3) * 3\n        if count != m - i.count(3):\n            s += 1\n    if s == 0:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    mat = []\n    dots = 0\n    has = 0\n    for i in range(n):\n        l = list(input())\n        mat.append(l)\n        dots += l.count('.')\n        has += l.count('#')\n    for i in range(n):\n        if i + 1 == n:\n            break\n        for j in range(m):\n            if j + 1 == m:\n                break\n            e1 = mat[i][j]\n            e2 = mat[i + 1][j]\n            e3 = mat[i][j + 1]\n            e4 = mat[i + 1][j + 1]\n            if e1 == '#' or e2 == '#' or e3 == '#' or (e4 == '#'):\n                continue\n            else:\n                mat[i][j] = 'g'\n                mat[i + 1][j] = 'g'\n                mat[i][j + 1] = 'g'\n                mat[i + 1][j + 1] = 'g'\n    org = 0\n    for i in range(n):\n        org += mat[i].count('g')\n    if org == dots:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    mat = []\n    dots = 0\n    has = 0\n    for i in range(n):\n        l = list(input())\n        mat.append(l)\n        dots += l.count('.')\n        has += l.count('#')\n    for i in range(n):\n        if i + 1 == n:\n            break\n        for j in range(m):\n            if j + 1 == m:\n                break\n            e1 = mat[i][j]\n            e2 = mat[i + 1][j]\n            e3 = mat[i][j + 1]\n            e4 = mat[i + 1][j + 1]\n            if e1 == '#' or e2 == '#' or e3 == '#' or (e4 == '#'):\n                pass\n            else:\n                mat[i][j] = 'g'\n                mat[i + 1][j] = 'g'\n                mat[i][j + 1] = 'g'\n                mat[i + 1][j + 1] = 'g'\n    org = 0\n    for i in range(n):\n        org += mat[i].count('g')\n    if org == dots:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    matrix = []\n    num_dots = 0\n    num_has = 0\n    for i in range(n):\n        temp = list(input())\n        matrix.append(temp)\n        num_dots += temp.count('.')\n        num_has += temp.count('#')\n    for i in range(n):\n        if i + 1 == n:\n            break\n        for j in range(m):\n            if j + 1 == m:\n                break\n            elem1 = matrix[i][j]\n            elem2 = matrix[i][j + 1]\n            elem3 = matrix[i + 1][j]\n            elem4 = matrix[i + 1][j + 1]\n            if elem1 == '#' or elem2 == '#' or elem3 == '#' or (elem4 == '#'):\n                pass\n            else:\n                matrix[i][j] = 'c'\n                matrix[i][j + 1] = 'c'\n                matrix[i + 1][j] = 'c'\n                matrix[i + 1][j + 1] = 'c'\n    num_cs = 0\n    for i in range(n):\n        num_cs += matrix[i].count('c')\n    if num_dots == num_cs:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    matrix = []\n    num_dots = 0\n    num_has = 0\n    for i in range(n):\n        temp = list(input())\n        matrix.append(temp)\n        num_dots += temp.count('.')\n        num_has += temp.count('#')\n    for i in range(n):\n        if i + 1 == n:\n            break\n        for j in range(m):\n            if j + 1 == m:\n                break\n            elem1 = matrix[i][j]\n            elem2 = matrix[i][j + 1]\n            elem3 = matrix[i + 1][j]\n            elem4 = matrix[i + 1][j + 1]\n            if elem1 == '#' or elem2 == '#' or elem3 == '#' or (elem4 == '#'):\n                pass\n            else:\n                matrix[i][j] = 'c'\n                matrix[i][j + 1] = 'c'\n                matrix[i + 1][j] = 'c'\n                matrix[i + 1][j + 1] = 'c'\n    num_cs = 0\n    for i in range(n):\n        num_cs += matrix[i].count('c')\n    if num_dots == num_cs:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    c = 0\n    for _ in range(n):\n        a.append(list(input()))\n    for i in range(1, n):\n        for j in range(m - 1):\n            if a[i][j] != '#' and a[i - 1][j] != '#' and (a[i - 1][j + 1] != '#') and (a[i][j + 1] != '#'):\n                a[i][j] = 0\n                a[i - 1][j] = 0\n                a[i - 1][j + 1] = 0\n                a[i][j + 1] = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == '.':\n                c = 1\n                break\n    if c == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    flag = 1\n    (r, c) = map(int, input().split())\n    a = [[0 for col in range(c)] for row in range(r)]\n    for i in range(r):\n        s = str(input())\n        for j in range(c):\n            a[i][j] = s[j]\n    for i in range(r - 1):\n        for j in range(c - 1):\n            if a[i][j] == '.' or a[i][j] == 'C':\n                if (a[i][j + 1] == '.' or a[i][j + 1] == 'C') and (a[i + 1][j] == '.' or a[i + 1][j] == 'C') and (a[i + 1][j + 1] == '.' or a[i + 1][j + 1] == 'C'):\n                    a[i][j] = 'C'\n                    a[i + 1][j] = 'C'\n                    a[i][j + 1] = 'C'\n                    a[i + 1][j + 1] = 'C'\n    for i in range(r):\n        if '.' in a[i]:\n            flag = 0\n            break\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor T in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    c = 0\n    for i in range(n):\n        a.append(list(input()))\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if a[i][j] != '#' and a[i + 1][j] != '#' and (a[i][j + 1] != '#') and (a[i + 1][j + 1] != '#'):\n                a[i][j] = 1\n                a[i][j + 1] = 1\n                a[i + 1][j] = 1\n                a[i + 1][j + 1] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] != 1 and a[i][j] != '#':\n                c = -1\n                break\n    if c == -1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m) = map(int, input().split())\n    arr = []\n    ans = 0\n    for i in range(n):\n        arr.append(list(input()))\n    ans = arr[-1].count('#')\n    for i in range(n):\n        if arr[i][-1] == '#':\n            ans += 1\n    if arr[-1][-1] == '#':\n        ans -= 1\n    flag = False\n    cu = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if (arr[i][j] == '.' or arr[i][j] == '1') and (arr[i][j + 1] == '.' or arr[i][j + 1] == '1') and (arr[i + 1][j] == '.' or arr[i + 1][j] == '1') and (arr[i + 1][j + 1] == '.' or arr[i + 1][j + 1] == '1'):\n                if arr[i][j] == '.':\n                    arr[i][j] = '1'\n                    cu += 1\n                if arr[i][j + 1] == '.':\n                    arr[i][j + 1] = '1'\n                    cu += 1\n                if arr[i + 1][j] == '.':\n                    arr[i + 1][j] = '1'\n                    cu += 1\n                if arr[i + 1][j + 1] == '.':\n                    arr[i + 1][j + 1] = '1'\n                    cu += 1\n            elif arr[i][j] == '#':\n                ans += 1\n    ans = n * m - ans\n    if cu == ans:\n        print('YES')\n    else:\n        print('NO')", "def show(t):\n    for _ in range(t):\n        (n, m) = map(int, input().rstrip().split())\n        flag = 1\n        a = [['.' for column in range(m)] for row in range(n)]\n        for i in range(n):\n            s = input()\n            for j in range(m):\n                a[i][j] = s[j]\n            s = ''\n        for i in range(n - 1):\n            for j in range(m - 1):\n                if a[i][j] != '#' and a[i + 1][j] != '#' and (a[i][j + 1] != '#') and (a[i + 1][j + 1] != '#'):\n                    a[i][j] = 'c'\n                    a[i + 1][j] = 'c'\n                    a[i][j + 1] = 'c'\n                    a[i + 1][j + 1] = 'c'\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == '.':\n                    flag = 0\n                    break\n        if flag == 0:\n            print('NO')\n        else:\n            print('YES')\nshow(int(input()))", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m) = map(int, input().split())\n    arr = []\n    ans = 0\n    for i in range(n):\n        arr.append(list(input()))\n        ans += arr[-1].count('.')\n    flag = False\n    cu = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if (arr[i][j] == '.' or arr[i][j] == '1') and (arr[i][j + 1] == '.' or arr[i][j + 1] == '1') and (arr[i + 1][j] == '.' or arr[i + 1][j] == '1') and (arr[i + 1][j + 1] == '.' or arr[i + 1][j + 1] == '1'):\n                if arr[i][j] == '.':\n                    arr[i][j] = '1'\n                    cu += 1\n                if arr[i][j + 1] == '.':\n                    arr[i][j + 1] = '1'\n                    cu += 1\n                if arr[i + 1][j] == '.':\n                    arr[i + 1][j] = '1'\n                    cu += 1\n                if arr[i + 1][j + 1] == '.':\n                    arr[i + 1][j + 1] = '1'\n                    cu += 1\n    if cu == ans:\n        print('YES')\n    else:\n        print('NO')", "def show(t):\n    for _ in range(t):\n        (n, m) = map(int, input().rstrip().split())\n        flag = 1\n        a = [['.' for column in range(m)] for row in range(n)]\n        for i in range(n):\n            s = input()\n            for j in range(m):\n                a[i][j] = s[j]\n            s = ''\n        for i in range(n - 1):\n            for j in range(m - 1):\n                if a[i][j] != '#' and a[i + 1][j] != '#' and (a[i][j + 1] != '#') and (a[i + 1][j + 1] != '#'):\n                    a[i][j] = 'c'\n                    a[i + 1][j] = 'c'\n                    a[i][j + 1] = 'c'\n                    a[i + 1][j + 1] = 'c'\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == '.':\n                    flag = 0\n                    break\n        if flag == 0:\n            print('NO')\n        else:\n            print('YES')\nshow(int(input()))", "def is_safe(mat, i, j):\n    if i >= 0 and j >= 0 and (i < len(mat)) and (j < len(mat[0])) and (mat[i][j] != '#'):\n        return True\n    return False\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    mat = []\n    for _ in range(n):\n        s = input()\n        l = [i for i in s]\n        mat.append(l)\n    main_f = 1\n    for i in range(n):\n        for j in range(m):\n            f = 0\n            if mat[i][j] == '.':\n                if is_safe(mat, i, j + 1) and is_safe(mat, i + 1, j + 1) and is_safe(mat, i + 1, j):\n                    f = 1\n                elif is_safe(mat, i, j - 1) and is_safe(mat, i + 1, j) and is_safe(mat, i + 1, j - 1):\n                    f = 1\n                elif is_safe(mat, i - 1, j - 1) and is_safe(mat, i, j - 1) and is_safe(mat, i - 1, j):\n                    f = 1\n                elif is_safe(mat, i - 1, j) and is_safe(mat, i - 1, j + 1) and is_safe(mat, i, j + 1):\n                    f = 1\n                if not f:\n                    main_f = 0\n                    break\n        if not main_f:\n            print('NO')\n            break\n    if main_f:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    value = []\n    value = [[False] * m for _ in range(n)]\n    arr = [[0] * m for _ in range(n)]\n    for i in range(n):\n        lt = input()\n        for j in range(m):\n            arr[i][j] = lt[j]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if arr[i][j] != '#' and arr[i][j + 1] != '#' and (arr[i + 1][j] != '#') and (arr[i + 1][j + 1] != '#'):\n                value[i][j] = True\n                value[i][j + 1] = True\n                value[i + 1][j] = True\n                value[i + 1][j + 1] = True\n    result = 0\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '.' and value[i][j] != True:\n                result += 1\n                break\n    if result == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    value = []\n    value = [[False] * m for _ in range(n)]\n    arr = [[0] * m for _ in range(n)]\n    for i in range(n):\n        lt = input()\n        for j in range(m):\n            arr[i][j] = lt[j]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if arr[i][j] != '#' and arr[i][j + 1] != '#' and (arr[i + 1][j] != '#') and (arr[i + 1][j + 1] != '#'):\n                value[i][j] = True\n                value[i][j + 1] = True\n                value[i + 1][j] = True\n                value[i + 1][j + 1] = True\n    result = 0\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '.' and value[i][j] != True:\n                result += 1\n                break\n    if result == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    value = [[False] * m for _ in range(n)]\n    arr = [[0] * m for _ in range(n)]\n    for i in range(n):\n        lt = input()\n        for j in range(m):\n            arr[i][j] = lt[j]\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if arr[i][j] != '#' and arr[i][j + 1] != '#' and (arr[i + 1][j] != '#') and (arr[i + 1][j + 1] != '#'):\n                value[i][j] = True\n                value[i][j + 1] = True\n                value[i + 1][j] = True\n                value[i + 1][j + 1] = True\n    result = 0\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '.' and value[i][j] != True:\n                result += 1\n                break\n    if result == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    mat = [[0] * m for _ in range(n)]\n    for i in range(n):\n        lt = input()\n        for j in range(m):\n            mat[i][j] = lt[j]\n    flag = True\n    f = 0\n    for i in range(n):\n        for j in range(m):\n            flag = False\n            if mat[i][j] == '#':\n                continue\n            if j + 1 < m and i + 1 < n and (not flag):\n                if mat[i + 1][j] == '.' and mat[i][j + 1] == '.' and (mat[i + 1][j + 1] == '.'):\n                    flag = True\n            if j - 1 > -1 and i + 1 < n and (not flag):\n                if mat[i + 1][j] == '.' and mat[i][j - 1] == '.' and (mat[i + 1][j - 1] == '.'):\n                    flag = True\n            if j + 1 < m and i - 1 > -1 and (not flag):\n                if mat[i - 1][j] == '.' and mat[i][j + 1] == '.' and (mat[i - 1][j + 1] == '.'):\n                    flag = True\n            if j - 1 > -1 and i - 1 > -1 and (not flag):\n                if mat[i - 1][j] == '.' and mat[i][j - 1] == '.' and (mat[i - 1][j - 1] == '.'):\n                    flag = True\n            if not flag:\n                f = 1\n                break\n    if f == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    coloured = [[0 for j in range(m)] for i in range(n)]\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] != '#' and grid[i][j + 1] != '#' and (grid[i + 1][j] != '#') and (grid[i + 1][j + 1] != '#'):\n                coloured[i][j] = 1\n                coloured[i][j + 1] = 1\n                coloured[i + 1][j] = 1\n                coloured[i + 1][j + 1] = 1\n\n    def is_good(grid, n, m):\n        for i in range(n):\n            for j in range(m):\n                if grid[i][j] == '.' and coloured[i][j] == 0:\n                    return 'NO'\n        return 'YES'\n    print(is_good(grid, n, m))", "def inrange(i, j, N, M, m):\n    if i < N and i > -1 and (j < M) and (j > -1):\n        if m[i][j] == '.':\n            return True\n        else:\n            return False\n    else:\n        return False\n\ndef poss(i, j, N, M, m):\n    if inrange(i - 1, j - 1, N, M, m) and inrange(i, j - 1, N, M, m) and inrange(i - 1, j, N, M, m):\n        return True\n    if inrange(i - 1, j, N, M, m) and inrange(i - 1, j + 1, N, M, m) and inrange(i, j + 1, N, M, m):\n        return True\n    if inrange(i, j - 1, N, M, m) and inrange(i + 1, j - 1, N, M, m) and inrange(i + 1, j, N, M, m):\n        return True\n    if inrange(i, j + 1, N, M, m) and inrange(i + 1, j, N, M, m) and inrange(i + 1, j + 1, N, M, m):\n        return True\n    return False\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        (N, M) = [int(item) for item in input().split()]\n        matrix = [0] * N\n        for j in range(N):\n            matrix[j] = list(input())\n        check = [[0] * M for i in range(N)]\n        for i in range(N):\n            for j in range(M):\n                if matrix[i][j] == '#':\n                    check[i][j] = 1\n                elif poss(i, j, N, M, matrix):\n                    check[i][j] = 1\n        f = True\n        for i in range(N):\n            if not all(check[i]):\n                f = False\n                break\n        print('YES' if f else 'NO')\nmain()", "def inrange(i, j, N, M, m):\n    if i < N and i > -1 and (j < M) and (j > -1):\n        if m[i][j] == '.':\n            return True\n        else:\n            return False\n    else:\n        return False\n\ndef poss(i, j, N, M, m):\n    if inrange(i - 1, j - 1, N, M, m) and inrange(i, j - 1, N, M, m) and inrange(i - 1, j, N, M, m):\n        return True\n    if inrange(i - 1, j, N, M, m) and inrange(i - 1, j + 1, N, M, m) and inrange(i, j + 1, N, M, m):\n        return True\n    if inrange(i, j - 1, N, M, m) and inrange(i + 1, j - 1, N, M, m) and inrange(i + 1, j, N, M, m):\n        return True\n    if inrange(i, j + 1, N, M, m) and inrange(i + 1, j, N, M, m) and inrange(i + 1, j + 1, N, M, m):\n        return True\n    return False\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        (N, M) = [int(item) for item in input().split()]\n        matrix = [0] * N\n        for j in range(N):\n            matrix[j] = list(input())\n        check = [[0] * M for i in range(N)]\n        for i in range(N):\n            for j in range(M):\n                if matrix[i][j] == '#':\n                    check[i][j] = 1\n                elif poss(i, j, N, M, matrix):\n                    check[i][j] = 1\n        f = True\n        for i in range(N):\n            if not all(check[i]):\n                f = False\n                break\n        print('YES' if f else 'NO')\nmain()", "test = int(input())\nans = []\nfor i in range(test):\n    p = list(map(int, input().split()))\n    t = []\n    for j in range(p[0]):\n        s = input()\n        t.append([])\n        for r in range(p[1]):\n            t[j].append(s[r])\n    flag = 0\n    for x in range(p[0]):\n        if flag == 1:\n            break\n        for y in range(p[1]):\n            if t[x][y] == '.':\n                if x + 1 < p[0] and y + 1 < p[1] and (t[x + 1][y] == '.') and (t[x + 1][y + 1] == '.') and (t[x][y + 1] == '.'):\n                    flag = 0\n                elif x > 0 and y > 0 and (t[x - 1][y] == '.') and (t[x - 1][y - 1] == '.') and (t[x][y - 1] == '.'):\n                    flag = 0\n                elif x + 1 < p[0] and y > 0 and (t[x + 1][y] == '.') and (t[x + 1][y - 1] == '.') and (t[x][y - 1] == '.'):\n                    flag = 0\n                elif x > 0 and y + 1 < p[1] and (t[x - 1][y] == '.') and (t[x - 1][y + 1] == '.') and (t[x][y + 1] == '.'):\n                    flag = 0\n                else:\n                    flag = 1\n            if flag == 1:\n                ans.append('NO')\n                break\n    if flag == 0:\n        ans.append('YES')\nfor v in ans:\n    print(v)", "import sys\n\ndef _int():\n    return int(sys.stdin.readline())\n\ndef _ints():\n    return map(int, sys.stdin.readline().split())\n\ndef _chars():\n    return sys.stdin.readline().strip('\\n')\n\ndef _intarr():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef _str():\n    return sys.stdin.readline()\n\ndef _strarr():\n    return sys.stdin.readline().split()\nt = _int()\nans = []\nfor x in range(t):\n    (n, m) = _ints()\n    g = []\n    for _ in range(n):\n        row = list(_chars())\n        g.append(row)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if g[i][j] in ['.', 'x'] and g[i + 1][j] in ['.', 'x'] and (g[i][j + 1] in ['.', 'x']) and (g[i + 1][j + 1] in ['.', 'x']):\n                (g[i][j], g[i + 1][j], g[i][j + 1], g[i + 1][j + 1]) = ['x', 'x', 'x', 'x']\n    passed = True\n    for i in range(n):\n        for j in range(m):\n            if g[i][j] == '.':\n                passed = False\n                break\n        if not passed:\n            break\n    ans.append(passed)\nfor a in ans:\n    print('YES' if a else 'NO')", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = [x for x in input()]\n    flag = 'YES'\n    for i in range(n - 1):\n        s = [x for x in input()]\n        for j in range(m - 1):\n            if f[j] != '#' and f[j + 1] != '#' and (s[j] != '#') and (s[j + 1] != '#'):\n                f[j] = '1'\n                f[j + 1] = '1'\n                s[j] = '1'\n                s[j + 1] = '1'\n        if '.' in f:\n            flag = 'NO'\n            for x in range(n - i - 2):\n                input()\n            break\n        else:\n            f = s\n    if '.' in s:\n        flag = 'NO'\n    print(flag)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, m) = map(int, input().split())\n    L = []\n    for i in range(n):\n        L.append([j for j in input()])\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if L[i][j] == '#' or L[i + 1][j] == '#' or L[i][j + 1] == '#' or (L[i + 1][j + 1] == '#'):\n                continue\n            else:\n                L[i][j] = '0'\n                L[i + 1][j] = '0'\n                L[i][j + 1] = '0'\n                L[i + 1][j + 1] = '0'\n    f = 0\n    for i in range(n):\n        for j in range(m):\n            if L[i][j] == '.':\n                f = 1\n                break\n        if f:\n            break\n    print('YNEOS'[f::2])", "def check(n, m, a):\n    flag = 0\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            if a[i][j] == 0:\n                continue\n            if (a[i][j] == 0 or a[i][j - 1] == 0 or a[i - 1][j - 1] == 0 or (a[i - 1][j] == 0)) and (a[i][j] == 0 or a[i - 1][j] == 0 or a[i - 1][j + 1] == 0 or (a[i][j + 1] == 0)) and (a[i][j] == 0 or a[i][j + 1] == 0 or a[i + 1][j] == 0 or (a[i + 1][j + 1] == 0)) and (a[i][j] == 0 or a[i][j - 1] == 0 or a[i + 1][j - 1] == 0 or (a[i + 1][j] == 0)):\n                flag = 1\n    return flag\nt = int(input())\nwhile t > 0:\n    y = 0\n    tc = list((int(i) for i in input().split()))\n    n = tc[0]\n    m = tc[1]\n    a = [[] for y in range(n + 2)]\n    for i in range(n + 2):\n        for j in range(m + 2):\n            a[i].append(0)\n    for i in range(1, n + 1):\n        c = input()\n        for j in range(0, len(c)):\n            if c[j] == '.':\n                a[i][j + 1] = 1\n            else:\n                a[i][j + 1] = 0\n    y = check(n, m, a)\n    if y == 0:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "T = int(input())\nfor i in range(T):\n    (N, M) = [int(i) for i in input().split()]\n    A = [0] * N\n    B = [0] * N\n    for i in range(N):\n        A[i] = input()\n        B[i] = list(A[i])\n    k = 0\n    for i in range(1, N):\n        for j in range(1, M):\n            if (B[i][j] == '.' or B[i][j] == '%') and (B[i - 1][j] == '.' or B[i - 1][j] == '%') and (B[i - 1][j - 1] == '.' or B[i - 1][j - 1] == '%') and (B[i][j - 1] == '.' or B[i][j - 1] == '%'):\n                B[i][j] = '%'\n                B[i - 1][j] = '%'\n                B[i - 1][j - 1] = '%'\n                B[i][j - 1] = '%'\n            elif B[i][j] == '#':\n                continue\n    for i in range(N):\n        for j in range(M):\n            if B[i][j] == '.':\n                k = k + 1\n    if k >= 1:\n        print('NO')\n    else:\n        print('YES')", "t = input()\nfor i in range(int(t)):\n    (m, n) = map(int, input().split())\n    grid = []\n    results = []\n    for j in range(m):\n        grid.append(list(input()))\n        values = []\n        for k in grid[-1]:\n            if k == '.':\n                values.append(0)\n            else:\n                values.append(-1)\n        results.append(values)\n    for i in range(m - 1):\n        for j in range(n - 1):\n            check = [grid[i][j], grid[i + 1][j], grid[i][j + 1], grid[i + 1][j + 1]]\n            if '#' not in check:\n                results[i][j] += 1\n                results[i + 1][j] += 1\n                results[i][j + 1] += 1\n                results[i + 1][j + 1] += 1\n    flag = 0\n    for j in results:\n        if 0 in j:\n            flag = 1\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    a = []\n    for i in range(r):\n        a.append(list(input()))\n    for i in range(r - 1):\n        for j in range(c - 1):\n            if a[i][j] != '#' and a[i + 1][j] != '#' and (a[i][j + 1] != '#') and (a[i + 1][j + 1] != '#'):\n                a[i][j] = 'c'\n                a[i + 1][j] = 'c'\n                a[i][j + 1] = 'c'\n                a[i + 1][j + 1] = 'c'\n    res = True\n    for i in range(r):\n        for j in range(c):\n            if a[i][j] == '.':\n                res = False\n                break\n    if res:\n        print('YES')\n    else:\n        print('NO')", "from array import *\nT = int(input())\nfor t in range(T):\n    (x, y) = map(int, input().split())\n    arr2d = [input() for i in range(x)]\n    flag = 1\n    for i in range(x):\n        if flag == 1:\n            for j in range(y):\n                flag1 = 0\n                if arr2d[i][j] == '.':\n                    if i - 1 >= 0 and j + 1 < y and (flag1 == 0):\n                        if arr2d[i - 1][j] == '.' and arr2d[i][j + 1] == '.' and (arr2d[i - 1][j + 1] == '.'):\n                            flag1 = 1\n                    if i - 1 >= 0 and j - 1 >= 0 and (flag1 == 0):\n                        if arr2d[i - 1][j] == '.' and arr2d[i][j - 1] == '.' and (arr2d[i - 1][j - 1] == '.'):\n                            flag1 = 1\n                    if i + 1 < x and j + 1 < y and (flag1 == 0):\n                        if arr2d[i + 1][j] == '.' and arr2d[i][j + 1] == '.' and (arr2d[i + 1][j + 1] == '.'):\n                            flag1 = 1\n                    if i + 1 < x and j - 1 >= 0 and (flag1 == 0):\n                        if arr2d[i + 1][j] == '.' and arr2d[i][j - 1] == '.' and (arr2d[i + 1][j - 1] == '.'):\n                            flag1 = 1\n                    if flag1 == 0:\n                        print('NO')\n                        flag = 0\n                        break\n    if flag == 1:\n        print('YES')", "def main():\n    t = int(input())\n    while t:\n        (n, m) = [int(x) for x in input().split()]\n        a = [input() for _ in range(n)]\n        b = [[0 if a[i][j] == '.' else 1 for j in range(m)] for i in range(n)]\n        for i in range(n - 1):\n            for j in range(m - 1):\n                if a[i][j] == '.' and a[i][j + 1] == '.' and (a[i + 1][j] == '.') and (a[i + 1][j + 1] == '.'):\n                    b[i][j] = 1\n                    b[i][j + 1] = 1\n                    b[i + 1][j] = 1\n                    b[i + 1][j + 1] = 1\n        flag = False\n        for i in range(n):\n            for j in range(m):\n                if b[i][j] == 0:\n                    print('NO')\n                    flag = True\n                    break\n            if flag:\n                break\n        else:\n            print('YES')\n        t -= 1\nmain()", "def check(n, m, a):\n    flag = 0\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            if a[i][j] == 0:\n                continue\n            if (a[i][j] == 0 or a[i][j - 1] == 0 or a[i - 1][j - 1] == 0 or (a[i - 1][j] == 0)) and (a[i][j] == 0 or a[i - 1][j] == 0 or a[i - 1][j + 1] == 0 or (a[i][j + 1] == 0)) and (a[i][j] == 0 or a[i][j + 1] == 0 or a[i + 1][j] == 0 or (a[i + 1][j + 1] == 0)) and (a[i][j] == 0 or a[i][j - 1] == 0 or a[i + 1][j - 1] == 0 or (a[i + 1][j] == 0)):\n                flag = 1\n                return flag\n    return flag\nt = int(input())\nwhile t > 0:\n    y = 0\n    tc = list((int(i) for i in input().split()))\n    n = tc[0]\n    m = tc[1]\n    a = [[] for y in range(n + 2)]\n    for i in range(n + 2):\n        for j in range(m + 2):\n            a[i].append(0)\n    for i in range(1, n + 1):\n        c = input()\n        for j in range(0, len(c)):\n            if c[j] == '.':\n                a[i][j + 1] = 1\n            else:\n                a[i][j + 1] = 0\n    y = check(n, m, a)\n    if y == 0:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    c = 1\n    grid = {}\n    for j in range(n):\n        a = input()\n        for k in a:\n            if grid.get(c) == None:\n                grid[c] = 0\n            if k == '#':\n                grid[c] = -1\n            c += 1\n    for i in grid:\n        if i >= n * m - m + 1:\n            break\n        if i % m == 0:\n            if grid[i] != -1 and grid[i - 1] != -1 and (grid[i + m] != -1) and (grid[i + m - 1] != -1):\n                (grid[i], grid[i - 1], grid[i + m], grid[i - 1 + m]) = (1, 1, 1, 1)\n        elif grid[i] != -1 and grid[i + 1] != -1 and (grid[i + m] != -1) and (grid[i + m + 1] != -1):\n            (grid[i], grid[i + 1], grid[i + m], grid[i + 1 + m]) = (1, 1, 1, 1)\n    if 0 in grid.values():\n        print('NO')\n    else:\n        print('YES')", "def check(n, m, a):\n    flag = 0\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            if a[i][j] == 0:\n                continue\n            if (a[i][j] == 0 or a[i][j - 1] == 0 or a[i - 1][j - 1] == 0 or (a[i - 1][j] == 0)) and (a[i][j] == 0 or a[i - 1][j] == 0 or a[i - 1][j + 1] == 0 or (a[i][j + 1] == 0)) and (a[i][j] == 0 or a[i][j + 1] == 0 or a[i + 1][j] == 0 or (a[i + 1][j + 1] == 0)) and (a[i][j] == 0 or a[i][j - 1] == 0 or a[i + 1][j - 1] == 0 or (a[i + 1][j] == 0)):\n                flag = 1\n    return flag\nt = int(input())\nwhile t > 0:\n    y = 0\n    tc = list((int(i) for i in input().split()))\n    n = tc[0]\n    m = tc[1]\n    a = [[] for y in range(n + 2)]\n    for i in range(n + 2):\n        for j in range(m + 2):\n            a[i].append(0)\n    for i in range(1, n + 1):\n        c = input()\n        for j in range(0, len(c)):\n            if c[j] == '.':\n                a[i][j + 1] = 1\n            else:\n                a[i][j + 1] = 0\n    y = check(n, m, a)\n    if y == 0:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nans = []\nfor i in range(t):\n    (n, m) = map(int, input().split(' '))\n    l = []\n    temp = 0\n    for j in range(n):\n        l.append(list(str(input())))\n    for j in range(n - 1):\n        for k in range(m - 1):\n            if (l[j][k] == '.' or l[j][k] == 'c') and (l[j][k + 1] == '.' or l[j][k + 1] == 'c') and (l[j + 1][k] == '.' or l[j + 1][k] == 'c') and (l[j + 1][k + 1] == '.' or l[j + 1][k + 1] == 'c'):\n                l[j][k] = 'c'\n                l[j][k + 1] = 'c'\n                l[j + 1][k] = 'c'\n                l[j + 1][k + 1] = 'c'\n    for j in range(n):\n        for k in range(m):\n            if l[j][k] == '.':\n                temp = 1\n                break\n    if temp == 0:\n        ans.append('YES')\n    else:\n        ans.append('NO')\nprint(*ans, sep='\\n')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for j in range(n):\n        stri = list(input())\n        arr.append(stri)\n    new = []\n    for k in range(n):\n        new.append([])\n        for l in range(m):\n            new[k].append(4)\n    new[0][0] = 1\n    new[0][m - 1] = 1\n    new[n - 1][0] = 1\n    new[n - 1][m - 1] = 1\n    for j in range(1, m - 1):\n        new[0][j] = 2\n        new[n - 1][j] = 2\n    for j in range(1, n - 1):\n        new[j][0] = 2\n        new[j][m - 1] = 2\n    for k in range(n - 1):\n        for l in range(m - 1):\n            if arr[k][l] == '#' or arr[k][l + 1] == '#' or arr[k + 1][l] == '#' or (arr[k + 1][l + 1] == '#'):\n                new[k][l] -= 1\n                new[k][l + 1] -= 1\n                new[k + 1][l] -= 1\n                new[k + 1][l + 1] -= 1\n    flag = 1\n    for k in range(n):\n        for l in range(m):\n            if new[k][l] <= 0 and arr[k][l] == '.':\n                flag = 0\n    if flag == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nans = []\nfor i in range(t):\n    (n, m) = map(int, input().split(' '))\n    l = []\n    temp = 0\n    for j in range(n):\n        l.append(list(str(input())))\n    for j in range(n - 1):\n        for k in range(m - 1):\n            if (l[j][k] == '.' or l[j][k] == 'c') and (l[j][k + 1] == '.' or l[j][k + 1] == 'c') and (l[j + 1][k] == '.' or l[j + 1][k] == 'c') and (l[j + 1][k + 1] == '.' or l[j + 1][k + 1] == 'c'):\n                l[j][k] = 'c'\n                l[j][k + 1] = 'c'\n                l[j + 1][k] = 'c'\n                l[j + 1][k + 1] = 'c'\n    for j in range(n):\n        for k in range(m):\n            if l[j][k] == '.':\n                temp = 1\n                break\n    if temp == 0:\n        ans.append('YES')\n    else:\n        ans.append('NO')\nprint(*ans, sep='\\n')", "from math import *\nfrom copy import *\nfrom string import *\nfrom sys import stdin\nfrom itertools import *\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    a = []\n    c = []\n    flag = 0\n    for i in range(N):\n        a.append(list(input()))\n    for i in range(N - 1):\n        for j in range(M - 1):\n            if (a[i][j] == '.' or a[i][j] == 1) and (a[i + 1][j] == '.' or a[i + 1][j] == 1) and (a[i][j + 1] == '.' or a[i][j + 1] == 1) and (a[i + 1][j + 1] == '.' or a[i + 1][j + 1] == 1):\n                a[i][j] = 1\n                a[i + 1][j] = 1\n                a[i][j + 1] = 1\n                a[i + 1][j + 1] = 1\n    for i in range(N):\n        for j in range(M):\n            if a[i][j] != '#':\n                if a[i][j] != 1:\n                    flag = 1\n                    break\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "def main():\n    t = int(input())\n    while t:\n        (n, m) = [int(x) for x in input().split()]\n        a = [input() for _ in range(n)]\n        b = [[0 if a[i][j] == '.' else 1 for j in range(m)] for i in range(n)]\n        for i in range(n - 1):\n            for j in range(m - 1):\n                if a[i][j] == '.' and a[i][j + 1] == '.' and (a[i + 1][j] == '.') and (a[i + 1][j + 1] == '.'):\n                    b[i][j] = 1\n                    b[i][j + 1] = 1\n                    b[i + 1][j] = 1\n                    b[i + 1][j + 1] = 1\n        flag = False\n        for i in range(n):\n            for j in range(m):\n                if b[i][j] == 0:\n                    print('NO')\n                    flag = True\n                    break\n            if flag:\n                break\n        else:\n            print('YES')\n        t -= 1\nmain()", "for testcases in range(int(input())):\n    isPsbl = True\n    [n, m] = [int(x) for x in input().split()]\n    arr = []\n    for row in range(n):\n        arr.append(input())\n    for row in range(n):\n        for col in range(m):\n            if arr[row][col] == '.':\n                ct = 0\n                if row > 0 and col > 0 and (arr[row - 1][col] == '.' and arr[row - 1][col - 1] == '.' and (arr[row][col - 1] == '.')):\n                    ct += 1\n                if row > 0 and col < m - 1 and (arr[row - 1][col] == '.' and arr[row - 1][col + 1] == '.' and (arr[row][col + 1] == '.')):\n                    ct += 1\n                if row < n - 1 and col < m - 1 and (arr[row][col + 1] == '.' and arr[row + 1][col + 1] == '.' and (arr[row + 1][col] == '.')):\n                    ct += 1\n                if row < n - 1 and col > 0 and (arr[row + 1][col] == '.' and arr[row + 1][col - 1] == '.' and (arr[row][col - 1] == '.')):\n                    ct += 1\n                if ct == 0:\n                    isPsbl = False\n                    break\n            else:\n                continue\n        if not isPsbl:\n            break\n    print('YES' if isPsbl else 'NO')", "for i in range(int(input())):\n    (n, m) = map(int, input().strip().split(' '))\n    lst = []\n    for j in range(n):\n        l = list(input())\n        lst.append(l)\n    for j in range(n - 1):\n        for k in range(m - 1):\n            if lst[j][k] != '#' and lst[j][k + 1] != '#' and (lst[j + 1][k] != '#') and (lst[j + 1][k + 1] != '#'):\n                lst[j][k] = '1'\n                lst[j][k + 1] = '1'\n                lst[j + 1][k] = '1'\n                lst[j + 1][k + 1] = '1'\n    c = 1\n    p = 0\n    for j in range(n):\n        for k in range(m):\n            if lst[j][k] == '.':\n                c = 0\n                break\n            elif lst[j][k] == '#':\n                p = 1 + p\n    if c == 1 and p != n * m:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = input().split()\n    (n, m) = (int(n), int(m))\n    l = []\n    for i in range(n):\n        s = input()\n        l1 = []\n        for j in range(m):\n            l1.append(s[j])\n        l.append(l1)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if l[i][j] == '#' or l[i + 1][j] == '#' or l[i][j + 1] == '#' or (l[i + 1][j + 1] == '#'):\n                continue\n            else:\n                l[i][j] = 1\n                l[i][j + 1] = 1\n                l[i + 1][j] = 1\n                l[i + 1][j + 1] = 1\n    f = 0\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == '.':\n                f = 1\n                break\n    if f:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    l = []\n    z = []\n    for i in range(n):\n        z.append([-1] * m)\n    check = True\n    for i in range(n):\n        l2 = list(input())\n        l.append(l2)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if l[i][j] == '.':\n                if l[i][j + 1] == '.' and l[i + 1][j + 1] == '.' and (l[i + 1][j] == '.'):\n                    z[i][j] = 1\n                    z[i][j + 1] = 1\n                    z[i + 1][j] = 1\n                    z[i + 1][j + 1] = 1\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == '.' and z[i][j] != 1:\n                check = False\n                break\n        if check == False:\n            break\n    if check == True:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    grid = [list(input()) for j in range(n)]\n    flag = 1\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] in ['0', '.'] and grid[i + 1][j] in ['0', '.'] and (grid[i][j + 1] in ['0', '.']) and (grid[i + 1][j + 1] in ['0', '.']):\n                (grid[i][j], grid[i + 1][j], grid[i][j + 1], grid[i + 1][j + 1]) = ('0', '0', '0', '0')\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == '.':\n                flag = 0\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\njiggly = []\nfor x in range(t):\n    (r, c) = input().split()\n    (r, c) = (int(r), int(c))\n    M = []\n    y = []\n    for i in range(r):\n        M.append(input())\n        for j in range(c):\n            y.append(M[i][j])\n        M[i] = y\n        y = []\n    for i in range(r - 1):\n        for j in range(c - 1):\n            if not (M[i][j] == '#' or M[i + 1][j] == '#' or M[i][j + 1] == '#' or (M[i + 1][j + 1] == '#')):\n                (M[i][j], M[i + 1][j], M[i][j + 1], M[i + 1][j + 1]) = ('c', 'c', 'c', 'c')\n    flag = 'YES'\n    for i in range(r):\n        for j in range(c):\n            if not (M[i][j] == 'c' or M[i][j] == '#'):\n                flag = 'NO'\n    jiggly.append(flag)\nfor i in range(len(jiggly)):\n    print(jiggly[i])", "t = int(input())\njiggly = []\nfor x in range(t):\n    (r, c) = input().split()\n    (r, c) = (int(r), int(c))\n    M = []\n    y = []\n    for i in range(r):\n        M.append(input())\n        for j in range(c):\n            y.append(M[i][j])\n        M[i] = y\n        y = []\n    for i in range(r - 1):\n        for j in range(c - 1):\n            if not (M[i][j] == '#' or M[i + 1][j] == '#' or M[i][j + 1] == '#' or (M[i + 1][j + 1] == '#')):\n                (M[i][j], M[i + 1][j], M[i][j + 1], M[i + 1][j + 1]) = ('c', 'c', 'c', 'c')\n    flag = 'YES'\n    for i in range(r):\n        for j in range(c):\n            if not (M[i][j] == 'c' or M[i][j] == '#'):\n                flag = 'NO'\n    jiggly.append(flag)\nfor i in range(len(jiggly)):\n    print(jiggly[i])", "def main():\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if arr[i][j] != '#' and arr[i][j + 1] != '#' and (arr[i + 1][j] != '#') and (arr[i + 1][j + 1] != '#'):\n                arr[i][j] = 'c'\n                arr[i][j + 1] = 'c'\n                arr[i + 1][j] = 'c'\n                arr[i + 1][j + 1] = 'c'\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '.':\n                print('NO')\n                return\n    print('YES')\n    return\nfor _ in range(int(input())):\n    main()", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    g = []\n    f = 0\n    for i in range(n):\n        r = list(input())\n        g.append(r)\n    for i in range(n):\n        for j in range(m):\n            if g[i][j] == '.':\n                g[i][j] = 0\n            elif g[i][j] == '#':\n                g[i][j] = 1\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if (g[i][j] == 0 or g[i][j] == -1) and (g[i][j + 1] == 0 or g[i][j + 1] == -1) and (g[i + 1][j] == 0 or g[i + 1][j] == -1) and (g[i + 1][j + 1] == 0 or g[i + 1][j + 1] == -1):\n                g[i][j] = -1\n                g[i][j + 1] = -1\n                g[i + 1][j] = -1\n                g[i + 1][j + 1] = -1\n    for i in range(n):\n        for j in range(m):\n            if g[i][j] == 0:\n                f = 1\n                break\n        if f == 1:\n            break\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    arr = []\n    fl = 0\n    for i in range(n):\n        arr.append(list(input()))\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if arr[i][j] == '0' or arr[i][j] == '.':\n                if (arr[i + 1][j] == '0' or arr[i + 1][j] == '.') and (arr[i + 1][j + 1] == '0' or arr[i + 1][j + 1] == '.') and (arr[i][j + 1] == '.' or arr[i][j + 1] == '0'):\n                    arr[i + 1][j] = '0'\n                    arr[i + 1][j + 1] = '0'\n                    arr[i][j + 1] = '0'\n                    arr[i][j] = '0'\n            else:\n                continue\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '.':\n                fl = 1\n                break\n        if fl:\n            break\n    if fl:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(list(input()))\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if l[i][j] != '#' and l[i][j + 1] != '#' and (l[i + 1][j] != '#') and (l[i + 1][j + 1] != '#'):\n                l[i][j] = '1'\n                l[i + 1][j] = '1'\n                l[i][j + 1] = '1'\n                l[i + 1][j + 1] = '1'\n    ans = 1\n    for i in l:\n        for j in i:\n            if j == '.':\n                ans = 0\n                break\n        if ans == 0:\n            break\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "def solve(mat, n, m):\n    t = [mat[1][0], mat[0][1], mat[1][1]]\n    if '#' in t and mat[0][0] == '.':\n        return 'NO'\n    t = [mat[1][m - 1], mat[0][m - 2], mat[1][m - 2]]\n    if '#' in t and mat[0][m - 1] == '.':\n        return 'NO'\n    t = [mat[n - 2][0], mat[n - 1][1], mat[n - 2][1]]\n    if '#' in t and mat[n - 1][0] == '.':\n        return 'NO'\n    t = [mat[n - 2][m - 1], mat[n - 1][m - 2], mat[n - 2][m - 2]]\n    if '#' in t and mat[n - 1][m - 1] == '.':\n        return 'NO'\n    for j in range(1, m - 1):\n        if mat[0][j] == '.':\n            t = []\n            t.append([mat[1][j], mat[1][j + 1], mat[0][j + 1]])\n            t.append([mat[1][j], mat[0][j - 1], mat[1][j - 1]])\n            if '#' in t[0] and '#' in t[1]:\n                return 'NO'\n        if mat[n - 1][j] == '.':\n            t = []\n            t.append([mat[n - 2][j], mat[n - 2][j + 1], mat[n - 1][j + 1]])\n            t.append([mat[n - 2][j], mat[n - 1][j - 1], mat[n - 2][j - 1]])\n            if '#' in t[0] and '#' in t[1]:\n                return 'NO'\n    for i in range(1, n - 1):\n        if mat[i][0] == '.':\n            t = []\n            t.append([mat[i + 1][1], mat[i + 1][0], mat[i][1]])\n            t.append([mat[i - 1][1], mat[i][1], mat[i - 1][0]])\n            if '#' in t[0] and '#' in t[1]:\n                return 'NO'\n        if mat[i][m - 1] == '.':\n            t = []\n            t.append([mat[i + 1][m - 2], mat[i + 1][m - 1], mat[i][m - 2]])\n            t.append([mat[i - 1][m - 2], mat[i][m - 2], mat[i - 1][m - 1]])\n            if '#' in t[0] and '#' in t[1]:\n                return 'NO'\n    for i in range(1, n - 1):\n        for j in range(1, m - 1):\n            if mat[i][j] == '.':\n                t = []\n                t.append([mat[i + 1][j], mat[i + 1][j + 1], mat[i][j + 1]])\n                t.append([mat[i - 1][j], mat[i][j - 1], mat[i - 1][j - 1]])\n                t.append([mat[i + 1][j], mat[i][j - 1], mat[i + 1][j - 1]])\n                t.append([mat[i - 1][j], mat[i - 1][j + 1], mat[i][j + 1]])\n                if '#' in t[0] and '#' in t[1] and ('#' in t[2]) and ('#' in t[3]):\n                    return 'NO'\n    return 'YES'\nfor test in range(int(input())):\n    d = [int(j) for j in input().split()]\n    mat = []\n    for i in range(d[0]):\n        mat.append(list(input()))\n    print(solve(mat, d[0], d[1]))", "def check(n, m, a):\n    flag = 0\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            if a[i][j] == 0:\n                continue\n            if (a[i][j] == 0 or a[i][j - 1] == 0 or a[i - 1][j - 1] == 0 or (a[i - 1][j] == 0)) and (a[i][j] == 0 or a[i - 1][j] == 0 or a[i - 1][j + 1] == 0 or (a[i][j + 1] == 0)) and (a[i][j] == 0 or a[i][j + 1] == 0 or a[i + 1][j] == 0 or (a[i + 1][j + 1] == 0)) and (a[i][j] == 0 or a[i][j - 1] == 0 or a[i + 1][j - 1] == 0 or (a[i + 1][j] == 0)):\n                flag = 1\n    return flag\nt = int(input())\nwhile t > 0:\n    y = 0\n    tc = list((int(i) for i in input().split()))\n    n = tc[0]\n    m = tc[1]\n    a = [[] for y in range(n + 2)]\n    for i in range(n + 2):\n        for j in range(m + 2):\n            a[i].append(0)\n    for i in range(1, n + 1):\n        c = input()\n        for j in range(0, len(c)):\n            if c[j] == '.':\n                a[i][j + 1] = 1\n            else:\n                a[i][j + 1] = 0\n    y = check(n, m, a)\n    if y == 0:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    grid = [list(input()) for j in range(n)]\n    flag = 1\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] in ['0', '.'] and grid[i + 1][j] in ['0', '.'] and (grid[i][j + 1] in ['0', '.']) and (grid[i + 1][j + 1] in ['0', '.']):\n                (grid[i][j], grid[i + 1][j], grid[i][j + 1], grid[i + 1][j + 1]) = ('0', '0', '0', '0')\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == '.':\n                flag = 0\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor fdi in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    a.append(['#'] * (m + 2))\n    c = 0\n    for i in range(n):\n        k = list(input())\n        c += k.count('#')\n        k = ['#'] + k + ['#']\n        a.append(k)\n    a.append(['#'] * (m + 2))\n    if c == 0:\n        print('YES')\n        continue\n    ans = 0\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            if a[i][j] == '#':\n                te = 1\n                continue\n            if a[i][j - 1] == '.' and a[i - 1][j] == '.' and (a[i - 1][j - 1] == '.'):\n                te = 1\n            elif a[i - 1][j] == '.' and a[i][j + 1] == '.' and (a[i - 1][j + 1] == '.'):\n                te = 1\n            elif a[i][j - 1] == '.' and a[i + 1][j] == '.' and (a[i + 1][j - 1] == '.'):\n                te = 1\n            elif a[i][j + 1] == '.' and a[i + 1][j] == '.' and (a[i + 1][j + 1] == '.'):\n                te = 1\n            else:\n                te = 0\n                break\n        if te == 0:\n            ans = 1\n            break\n    if ans == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = input().strip().split(' ')\n    n = int(n)\n    m = int(m)\n    b = []\n    for i in range(n):\n        b.append(input())\n    a = [[0 for j in range(m)] for i in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if b[i][j] == '#':\n                a[i][j] = -1\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if a[i][j] != -1 and a[i][j + 1] != -1 and (a[i + 1][j] != -1) and (a[i + 1][j + 1] != -1):\n                a[i][j] = a[i][j + 1] = a[i + 1][j] = a[i + 1][j + 1] = 1\n    flag = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                flag = 1\n                break\n        if flag == 1:\n            break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "def paint(m, a, b):\n    for i in range(0, a - 1):\n        for j in range(0, b - 1):\n            l = [m[i][j], m[i + 1][j + 1], m[i + 1][j], m[i][j + 1]]\n            if l.count('#') == 0:\n                m[i][j] = m[i + 1][j + 1] = m[i + 1][j] = m[i][j + 1] = 1\n    ch = 0\n    c1 = 0\n    for f in m:\n        ch = ch + f.count('#')\n        c1 = c1 + f.count(1)\n    if ch + c1 == a * b:\n        return 'YES'\n    else:\n        return 'NO'\nn = input()\nn = int(n)\nfor i in range(n):\n    nm = input().split()\n    matrix = [list(input().strip()) for x in range(int(nm[0]))]\n    print(paint(matrix, int(nm[0]), int(nm[1])))", "def colour(grid, n, m):\n    for r in range(n - 1):\n        for c in range(m - 1):\n            if grid[r][c] != '#' and grid[r + 1][c] != '#' and (grid[r][c + 1] != '#') and (grid[r + 1][c + 1] != '#'):\n                grid[r][c] = 1\n                grid[r + 1][c] = 1\n                grid[r][c + 1] = 1\n                grid[r + 1][c + 1] = 1\n    return grid\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    grid = []\n    flag = 1\n    for i in range(n):\n        grid.append(list(input()))\n    grid = colour(grid, n, m)\n    for r in range(n):\n        for c in range(m):\n            if grid[r][c] == '.':\n                flag = 0\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    inp = list(map(int, input().split()))\n    n = inp[0]\n    m = inp[1]\n    arr = []\n    for i in range(0, n):\n        inp2 = input()\n        arr.append(inp2[0:m])\n    b = [[0] * m for i in range(n)]\n    for i in range(0, n):\n        for j in range(0, m):\n            if arr[i][j] == '#':\n                b[i][j] = 1\n            elif i + 1 < n and j + 1 < m and (arr[i + 1][j] != '#') and (arr[i + 1][j + 1] != '#') and (arr[i][j + 1] != '#'):\n                b[i][j] = 1\n                b[i][j + 1] = 1\n                b[i + 1][j] = 1\n                b[i + 1][j + 1] = 1\n    z = 1\n    for i in range(0, n):\n        for j in range(0, m):\n            if not b[i][j]:\n                print('NO')\n                z = 0\n                break\n        if not z:\n            break\n    if z:\n        print('YES')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, m) = input().split(' ')\n    n = int(n)\n    m = int(m)\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    temp = [[0 for x in range(m)] for y in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == '.':\n                temp[i][j] = 0\n            else:\n                temp[i][j] = -1\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if grid[i][j] == '#' or grid[i + 1][j] == '#' or grid[i][j + 1] == '#' or (grid[i + 1][j + 1] == '#'):\n                continue\n            else:\n                temp[i][j] += 1\n                temp[i + 1][j] += 1\n                temp[i][j + 1] += 1\n                temp[i + 1][j + 1] += 1\n    flag = 0\n    for i in range(n):\n        for j in range(m):\n            if temp[i][j] == 0:\n                print('NO')\n                flag = 1\n                break\n        if flag == 1:\n            break\n    if flag == 0:\n        print('YES')", "t = int(input())\nfor i in range(0, t):\n    (n, m) = [int(x) for x in input().split()]\n    mat = [0] * n\n    for i in range(0, n):\n        mat[i] = input()\n    arr = []\n    arr2 = []\n    if n * m < 4:\n        print('NO')\n        continue\n    for i in range(0, len(mat)):\n        for j in range(0, len(mat[i])):\n            if mat[i][j] == '#':\n                if i + 1 <= n - 1 and mat[i + 1][j] == '.':\n                    arr.append(i + 1)\n                    arr2.append(j)\n                if i + 1 <= n - 1 and j + 1 <= m - 1 and (mat[i + 1][j + 1] == '.'):\n                    arr.append(i + 1)\n                    arr2.append(j + 1)\n                if i + 1 <= n - 1 and j - 1 >= 0 and (mat[i + 1][j - 1] == '.'):\n                    arr.append(i + 1)\n                    arr2.append(j - 1)\n                if j + 1 <= m - 1 and mat[i][j + 1] == '.':\n                    arr.append(i)\n                    arr2.append(j + 1)\n                if j - 1 >= 0 and mat[i][j - 1] == '.':\n                    arr.append(i)\n                    arr2.append(j - 1)\n                if i - 1 >= 0 and mat[i - 1][j] == '.':\n                    arr.append(i - 1)\n                    arr2.append(j)\n                if i - 1 >= 0 and j - 1 >= 0 and (mat[i - 1][j - 1] == '.'):\n                    arr.append(i - 1)\n                    arr2.append(j - 1)\n                if i - 1 >= 0 and j + 1 <= m - 1 and (mat[i - 1][j + 1] == '.'):\n                    arr.append(i - 1)\n                    arr2.append(j + 1)\n    case = 0\n    if len(arr) == 0:\n        if mat[0][0] == '.':\n            print('YES')\n        else:\n            print('NO')\n        continue\n    for i in range(0, len(arr)):\n        count = 1\n        p = arr[i]\n        r = arr2[i]\n        if (r - 1 >= 0 and mat[p][r - 1] == '.') and (r - 1 >= 0 and p - 1 >= 0 and (mat[p - 1][r - 1] == '.')) and (p - 1 >= 0 and mat[p - 1][r] == '.'):\n            count += 3\n        if (r + 1 <= m - 1 and mat[p][r + 1] == '.') and (r + 1 <= m - 1 and p + 1 <= n - 1 and (mat[p + 1][r + 1] == '.')) and (p + 1 <= n + 1 and mat[p + 1][r] == '.'):\n            count += 3\n        if (p - 1 >= 0 and mat[p - 1][r] == '.') and (p - 1 >= 0 and r + 1 <= m - 1 and (mat[p - 1][r + 1] == '.')) and (r + 1 <= m - 1 and mat[p][r + 1] == '.'):\n            count += 3\n        if (p + 1 <= n - 1 and mat[p + 1][r] == '.') and (r - 1 >= 0 and p + 1 <= n - 1 and (mat[p + 1][r - 1] == '.')) and (r - 1 >= 0 and mat[p][r - 1] == '.'):\n            count += 3\n        if count >= 4:\n            case = 1\n        else:\n            case = 0\n            break\n    if case == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    temp = []\n    visited = []\n    for x in range(N):\n        line = input()\n        temp.append(line)\n        visited.append([0] * M)\n    for i in range(N):\n        for j in range(M):\n            if temp[i][j] is '.':\n                if i + 1 < N and j + 1 < M:\n                    if temp[i][j] is '.' and temp[i + 1][j] is '.' and (temp[i][j + 1] is '.') and (temp[i + 1][j + 1] is '.'):\n                        visited[i + 1][j + 1] = 1\n                        visited[i][j] = 1\n                        visited[i + 1][j] = 1\n                        visited[i][j + 1] = 1\n    check = True\n    for i in range(N):\n        for j in range(M):\n            if temp[i][j] is '.' and visited[i][j] is 0:\n                check = False\n                break\n    print('YES' if check else 'NO')", "T = int(input())\nfor _ in range(T):\n    lt = []\n    c = 0\n    c1 = 0\n    (N, M) = map(int, input().split())\n    for k in range(N):\n        s = input()\n        lt1 = list(s)\n        lt.append(lt1)\n    for i in range(N):\n        for j in range(M):\n            if lt[i][j] == '.':\n                c1 += 1\n                f = 0\n                if i + 1 < N and j + 1 < M:\n                    if lt[i + 1][j] == '.' and lt[i][j + 1] == '.' and (lt[i + 1][j + 1] == '.'):\n                        c += 1\n                        f = 1\n                if i - 1 >= 0 and j + 1 < M and (f == 0):\n                    if lt[i - 1][j] == '.' and lt[i][j + 1] == '.' and (lt[i - 1][j + 1] == '.'):\n                        c += 1\n                        f = 1\n                if i - 1 >= 0 and j - 1 >= 0 and (f == 0):\n                    if lt[i - 1][j] == '.' and lt[i][j - 1] == '.' and (lt[i - 1][j - 1] == '.'):\n                        c += 1\n                        f = 1\n                if i + 1 < N and j - 1 >= 0 and (f == 0):\n                    if lt[i + 1][j] == '.' and lt[i][j - 1] == '.' and (lt[i + 1][j - 1] == '.'):\n                        c += 1\n                        f = 1\n    if c1 == c:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    grid = []\n    for l in range(n):\n        row = input()\n        grid.append(list(row))\n    zeros = [[0] * m for _ in range(n)]\n    ans = [[0] * m for _ in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == '.':\n                ans[i][j] = 1\n            if i <= n - 2 and j <= m - 2:\n                if grid[i][j] == '.':\n                    if grid[i + 1][j] == '.' and grid[i][j + 1] == '.' and (grid[i + 1][j + 1] == '.'):\n                        zeros[i][j] = 1\n                        zeros[i + 1][j] = 1\n                        zeros[i][j + 1] = 1\n                        zeros[i + 1][j + 1] = 1\n    if ans == zeros:\n        print('YES')\n    else:\n        print('NO')", "def createBorder(A, c):\n    (H, W) = (len(A), len(A[0]))\n    return [c * (W + 2)] + [c + row + c for row in A] + [c * (W + 2)]\n\ndef testGrid(A):\n    for R in range(1, len(A)):\n        for C in range(1, len(A[0])):\n            if A[R][C] != '.':\n                continue\n            X = [A[cellR][cellC] for (cellR, cellC) in [(R - 1, C - 1), (R - 1, C), (R - 1, C + 1), (R, C - 1), (R, C), (R, C + 1), (R + 1, C - 1), (R + 1, C), (R + 1, C + 1)]]\n            if all((X[i] == '.' for i in (0, 1, 3, 4))):\n                continue\n            if all((X[i] == '.' for i in (1, 2, 4, 5))):\n                continue\n            if all((X[i] == '.' for i in (3, 4, 6, 7))):\n                continue\n            if all((X[i] == '.' for i in (4, 5, 7, 8))):\n                continue\n            return False\n    return True\nfor _ in range(int(input())):\n    (H, W) = [int(x) for x in input().split()]\n    A = [input() for row in range(H)]\n    A = createBorder(A, '#')\n    print(['NO', 'YES'][testGrid(A)])", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    seen = {}\n    for i in range(n + 2):\n        for j in range(m + 2):\n            if i == 0 or i == n + 1:\n                seen[i - 1, j - 1] = -1\n            elif j == 0 or j == m + 1:\n                seen[i - 1, j - 1] = -1\n            else:\n                seen[i - 1, j - 1] = 0\n    for i in range(n):\n        st = input()\n        for (j, it) in enumerate(st):\n            if it == '#':\n                seen[i, j] = 1\n    flg = False\n    for i in range(n):\n        done = False\n        for j in range(m):\n            if seen[i, j] == 0:\n                if seen[i - 1, j - 1] == 0 and seen[i - 1, j] == 0 and (seen[i, j - 1] == 0):\n                    continue\n                elif seen[i - 1, j + 1] == 0 and seen[i - 1, j] == 0 and (seen[i, j + 1] == 0):\n                    continue\n                elif seen[i + 1, j - 1] == 0 and seen[i + 1, j] == 0 and (seen[i, j - 1] == 0):\n                    continue\n                elif seen[i + 1, j + 1] == 0 and seen[i + 1, j] == 0 and (seen[i, j + 1] == 0):\n                    continue\n                else:\n                    print('NO')\n                    done = True\n                    break\n        if done:\n            flg = True\n            break\n    if not flg:\n        print('YES')", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    l = []\n    for _ in range(N):\n        p = list(input())\n        l.append(p)\n    for i in range(len(l) - 1):\n        for j in range(M - 1):\n            if l[i][j] != '#' and l[i][j + 1] != '#' and (l[i + 1][j] != '#') and (l[i + 1][j + 1] != '#'):\n                l[i][j] = 'f'\n                l[i + 1][j] = 'f'\n                l[i][j + 1] = 'f'\n                l[i + 1][j + 1] = 'f'\n    k = 0\n    for i in l:\n        if '.' in i:\n            print('NO')\n            k = 1\n            break\n    if k == 0:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    val = 0\n    for j in range(n):\n        l.append(list(input()))\n    for j in range(n):\n        f = 0\n        for k in range(m):\n            if l[j][k] == '#':\n                continue\n            if k + 1 < m and j + 1 < n and (l[j][k + 1] == '.') and (l[j + 1][k + 1] == '.') and (l[j + 1][k] == '.'):\n                f = 0\n            elif k - 1 >= 0 and j + 1 < n and (l[j][k - 1] == '.') and (l[j + 1][k] == '.') and (l[j + 1][k - 1] == '.'):\n                f = 0\n            elif k + 1 < m and j - 1 >= 0 and (l[j - 1][k] == '.') and (l[j - 1][k + 1] == '.') and (l[j][k + 1] == '.'):\n                f = 0\n            elif k - 1 >= 0 and j - 1 >= 0 and (l[j - 1][k - 1] == '.') and (l[j - 1][k] == '.') and (l[j][k - 1] == '.'):\n                f = 0\n            else:\n                f = 1\n            if f == 0:\n                continue\n            else:\n                f = 0\n                val = 1\n                print('NO')\n                break\n        if val == 1:\n            break\n    if val == 0:\n        print('YES')", "def isDot(c):\n    return c == '.' or c == 'x'\n\ndef draw(board, N, M, r, c):\n    cell = board[r][c]\n    if cell == 'x' or cell == '#':\n        return True\n    if c + 1 < M and isDot(board[r][c + 1]):\n        if r + 1 < N and isDot(board[r + 1][c]) and isDot(board[r + 1][c + 1]):\n            board[r][c] = 'x'\n            return True\n        elif r > 0 and isDot(board[r - 1][c]) and isDot(board[r - 1][c + 1]):\n            board[r][c] = 'x'\n            return True\n    if c > 0 and isDot(board[r][c - 1]):\n        if r + 1 < N and isDot(board[r + 1][c]) and isDot(board[r + 1][c - 1]):\n            board[r][c] = 'x'\n            return True\n        elif r > 0 and isDot(board[r - 1][c]) and isDot(board[r - 1][c - 1]):\n            board[r][c] = 'x'\n            return True\n    return False\nT = int(input())\nfor x in range(T):\n    (n, m) = map(int, input().split(' '))\n    board = []\n    answer = 'YES'\n    for row in range(n):\n        cols = list(input())\n        board.append(cols)\n    for (row_no, row) in enumerate(board):\n        if answer == 'NO':\n            break\n        for (col_no, cell) in enumerate(row):\n            if answer == 'YES' and draw(board, n, m, row_no, col_no):\n                pass\n            else:\n                answer = 'NO'\n                break\n    print(answer)", "try:\n    t = int(input())\n    while t:\n        (n, m) = map(int, input().split())\n        l = []\n        n1 = n\n        while n:\n            nl = list(map(str, input().split()))\n            s = nl[0]\n            s = list(s)\n            l.append(s)\n            n -= 1\n        for i in range(n1 - 1):\n            for j in range(m - 1):\n                if (l[i][j] == '.' or l[i][j] == 1) and (l[i][j + 1] == '.' or l[i][j + 1] == 1):\n                    if (l[i + 1][j] == '.' or l[i + 1][j] == 1) and (l[i + 1][j + 1] == '.' or l[i + 1][j + 1] == 1):\n                        l[i][j] = l[i + 1][j] = l[i + 1][j + 1] = l[i][j + 1] = 1\n                    else:\n                        continue\n                else:\n                    continue\n        for _ in l:\n            f = _.count('.')\n            if f > 0:\n                print('NO')\n                break\n            else:\n                continue\n        else:\n            print('YES')\n        t -= 1\nexcept:\n    pass", "test = int(input())\nfor i in range(test):\n    (rows, column) = map(int, input().split())\n    mat = []\n    flag = True\n    for i in range(rows):\n        mat.append(list(input()))\n    for i in range(rows - 1):\n        for j in range(column - 1):\n            if mat[i][j] != '#' and mat[i + 1][j] != '#' and (mat[i][j + 1] != '#') and (mat[i + 1][j + 1] != '#'):\n                mat[i][j] = '1'\n                mat[i + 1][j] = '1'\n                mat[i][j + 1] = '1'\n                mat[i + 1][j + 1] = '1'\n    for i in range(rows):\n        for j in range(column):\n            if mat[i][j] == '.':\n                flag = False\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (N, M) = input().strip().split(' ')\n    N = int(N)\n    M = int(M)\n    T = []\n    for _ in range(N):\n        T.append(input())\n    count = 0\n    for i in range(N):\n        for j in range(M):\n            if T[i][j] == '.':\n                if i != 0 and j != 0 and (i != N - 1) and (j != M - 1):\n                    if T[i][j + 1] == '.' and T[i + 1][j] == '.' and (T[i + 1][j + 1] == '.') or (T[i][j - 1] == '.' and T[i + 1][j] == '.' and (T[i + 1][j - 1] == '.')) or (T[i][j + 1] == '.' and T[i - 1][j] == '.' and (T[i - 1][j + 1] == '.')) or (T[i][j - 1] == '.' and T[i - 1][j] == '.' and (T[i - 1][j - 1] == '.')):\n                        continue\n                    else:\n                        count += 1\n                        break\n                if i == 0 and j != 0 and (i != N - 1) and (j != M - 1):\n                    if T[i][j + 1] == '.' and T[i + 1][j] == '.' and (T[i + 1][j + 1] == '.') or (T[i][j - 1] == '.' and T[i + 1][j] == '.' and (T[i + 1][j - 1] == '.')):\n                        continue\n                    else:\n                        count += 1\n                        break\n                if i != 0 and j != 0 and (i == N - 1) and (j != M - 1):\n                    if T[i][j + 1] == '.' and T[i - 1][j] == '.' and (T[i - 1][j + 1] == '.') or (T[i][j - 1] == '.' and T[i - 1][j] == '.' and (T[i - 1][j - 1] == '.')):\n                        continue\n                    else:\n                        count += 1\n                        break\n                if i != 0 and j == 0 and (i != N - 1) and (j != M - 1):\n                    if T[i][j + 1] == '.' and T[i + 1][j] == '.' and (T[i + 1][j + 1] == '.') or (T[i][j + 1] == '.' and T[i - 1][j] == '.' and (T[i - 1][j + 1] == '.')):\n                        continue\n                    else:\n                        count += 1\n                        break\n                if i != 0 and j != 0 and (i != N - 1) and (j == M - 1):\n                    if T[i][j - 1] == '.' and T[i + 1][j] == '.' and (T[i + 1][j - 1] == '.') or (T[i][j - 1] == '.' and T[i - 1][j] == '.' and (T[i - 1][j - 1] == '.')):\n                        continue\n                    else:\n                        count += 1\n                        break\n                if i == 0 and j == 0 and (i != N - 1) and (j != M - 1):\n                    if T[i][j + 1] == '.' and T[i + 1][j] == '.' and (T[i + 1][j + 1] == '.'):\n                        continue\n                    else:\n                        count += 1\n                        break\n                if i == 0 and j != 0 and (i != N - 1) and (j == M - 1):\n                    if T[i][j - 1] == '.' and T[i + 1][j] == '.' and (T[i + 1][j - 1] == '.'):\n                        continue\n                    else:\n                        count += 1\n                        break\n                if i != 0 and j == 0 and (i == N - 1) and (j != M - 1):\n                    if T[i][j + 1] == '.' and T[i - 1][j] == '.' and (T[i - 1][j + 1] == '.'):\n                        continue\n                    else:\n                        count += 1\n                        break\n                if i != 0 and j != 0 and (i == N - 1) and (j == M - 1):\n                    if T[i][j - 1] == '.' and T[i - 1][j] == '.' and (T[i - 1][j - 1] == '.'):\n                        continue\n                    else:\n                        count += 1\n                        break\n    if count > 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = [int(d) for d in input().split()]\n    a = []\n    s = []\n    i = [0 for x in range(m)]\n    for x in range(n):\n        s.append(input())\n        a.append([0 for x in range(m)])\n    for x in range(n - 1):\n        for y in range(m - 1):\n            if s[x][y] == '.' and s[x][y + 1] == '.' and (s[x + 1][y] == '.') and (s[x + 1][y + 1] == '.'):\n                a[x][y] = 1\n                a[x][y + 1] = 1\n                a[x + 1][y] = 1\n                a[x + 1][y + 1] = 1\n    l = True\n    for x in range(n):\n        for y in range(m):\n            if s[x][y] == '.' and a[x][y] == 0:\n                l = False\n    if l:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    ar = []\n    for i in range(n):\n        ar.append(list(input()))\n    for i in range(n - 1):\n        for j in range(m - 1):\n            if ar[i][j] != '#' and ar[i][j + 1] != '#' and (ar[i + 1][j] != '#') and (ar[i + 1][j + 1] != '#'):\n                ar[i][j] = ar[i][j + 1] = ar[i + 1][j] = ar[i + 1][j + 1] = '-'\n    f = 0\n    for i in range(n):\n        for j in range(m):\n            if ar[i][j] == '.':\n                f = 1\n                break\n    if f == 0:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    a = []\n    for _ in range(N):\n        a.append(list(input()))\n    flag = 1\n    for i in range(N):\n        for j in range(M):\n            if a[i][j] == '#':\n                continue\n            if i == 0 and j == 0:\n                if '#' in (a[i][j + 1], a[i + 1][j + 1], a[i + 1][j]):\n                    flag = 0\n                    break\n            elif i == 0 and j == M - 1:\n                if '#' in (a[i][j - 1], a[i + 1][j - 1], a[i + 1][j]):\n                    flag = 0\n                    break\n            elif i == 0:\n                if '#' in (a[i][j + 1], a[i + 1][j + 1], a[i + 1][j]) and '#' in (a[i][j - 1], a[i + 1][j - 1], a[i + 1][j]):\n                    flag = 0\n                    break\n            elif i == N - 1 and j == 0:\n                if '#' in (a[i][j + 1], a[i - 1][j + 1], a[i - 1][j]):\n                    flag = 0\n                    break\n            elif j == 0:\n                if '#' in (a[i][j + 1], a[i + 1][j + 1], a[i + 1][j]) and '#' in (a[i][j + 1], a[i - 1][j + 1], a[i - 1][j]):\n                    flag = 0\n                    break\n            elif i == N - 1 and j == M - 1:\n                if '#' in (a[i][j - 1], a[i - 1][j - 1], a[i - 1][j]):\n                    flag = 0\n                    break\n            elif i == N - 1:\n                if '#' in (a[i][j + 1], a[i - 1][j + 1], a[i - 1][j]) and '#' in (a[i][j - 1], a[i - 1][j - 1], a[i - 1][j]):\n                    flag = 0\n                    break\n            elif j == M - 1:\n                if '#' in (a[i][j - 1], a[i + 1][j - 1], a[i + 1][j]) and '#' in (a[i][j - 1], a[i - 1][j - 1], a[i - 1][j]):\n                    flag = 0\n                    break\n            elif '#' in (a[i][j + 1], a[i - 1][j + 1], a[i - 1][j]) and '#' in (a[i][j - 1], a[i - 1][j - 1], a[i - 1][j]) and ('#' in (a[i][j + 1], a[i + 1][j + 1], a[i + 1][j])) and ('#' in (a[i][j - 1], a[i + 1][j - 1], a[i + 1][j])):\n                flag = 0\n                break\n        if flag == 0:\n            break\n    if flag == 0:\n        print('NO')\n    else:\n        print('YES')"]