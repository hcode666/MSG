["t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (yb, mb, db) = list(map(int, input().split()))\n    (yc, mc, dc) = list(map(int, input().split()))\n    if yc == yb:\n        if mc == mb:\n            print(dc - db + 1)\n        else:\n            ans = a[mb - 1] - db + 1 + sum(a[mb:mc - 1]) + dc\n            print(ans)\n    else:\n        first = a[mb - 1] - db + 1 + sum(a[mb:])\n        middle = sum(a) * (yc - yb - 1)\n        current = sum(a[:mc - 1]) + dc\n        ans = first + middle + current\n        ans += (yc - yb) // 4\n        for j in range((yc - yb) % 4):\n            if (yc - 1 - j) % 4 == 0:\n                ans += 1\n                break\n        print(ans)", "def days_since_birth(n, months, y_b, m_b, d_b, y_c, m_c, d_c):\n    if y_c == y_b and m_c == m_b and (d_c == d_b):\n        return 1\n    elif y_c == y_b and m_c == m_b:\n        return d_c - d_b + 1\n    elif y_c == y_b:\n        return months[m_b - 1] - d_b + 1 + d_c + sum(months[m_b:m_c - 1])\n    result = (y_c - y_b - 1) * sum(months)\n    result += sum(months[m_b:])\n    result += sum(months[:m_c - 1])\n    result += months[m_b - 1] - d_b + 1\n    result += d_c\n    for i in range(y_b, y_c):\n        if i % 4 == 0:\n            result += 1\n    return result\nfor _ in range(int(input())):\n    print(days_since_birth(int(input()), list(map(int, input().split())), *map(int, input().split()), *map(int, input().split())))", "def days_since_birth(n, months, y_b, m_b, d_b, y_c, m_c, d_c):\n    if y_c == y_b and m_c == m_b and (d_c == d_b):\n        return 1\n    elif y_c == y_b and m_c == m_b:\n        return d_c - d_b + 1\n    elif y_c == y_b:\n        return months[m_b - 1] - d_b + 1 + d_c + sum(months[m_b:m_c - 1])\n    result = (y_c - y_b - 1) * sum(months)\n    result += sum(months[m_b:])\n    result += sum(months[:m_c - 1])\n    result += months[m_b - 1] - d_b + 1\n    result += d_c\n    for i in range(y_b, y_c):\n        if i % 4 == 0:\n            result += 1\n    return result\nfor _ in range(int(input())):\n    print(days_since_birth(int(input()), list(map(int, input().split())), *map(int, input().split()), *map(int, input().split())))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    age_d = 0\n    (yc, mc, dc) = map(int, input().split())\n    no = sum(a)\n    le = no + 1\n    for j in range(yb, yc):\n        if j % 4 == 0:\n            age_d = age_d + le\n        else:\n            age_d = age_d + no\n    age_d = age_d - (sum(a[0:mb - 1]) + db) + (sum(a[0:mc - 1]) + dc)\n    print(age_d + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    age_d = 0\n    (yc, mc, dc) = map(int, input().split())\n    no = sum(a)\n    le = no + 1\n    for j in range(yb, yc):\n        if j % 4 == 0:\n            age_d = age_d + le\n        else:\n            age_d = age_d + no\n    age_d = age_d - sum(a[0:mb - 1]) - db + sum(a[0:mc - 1]) + dc\n    print(age_d + 1)", "def solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    (yb, mb, db) = map(int, input().split())\n    age_d = 0\n    (yc, mc, dc) = map(int, input().split())\n    no = sum(a)\n    le = no + 1\n    for j in range(yb, yc):\n        if j % 4 == 0:\n            age_d = age_d + le\n        else:\n            age_d = age_d + no\n    age_d = age_d - sum(a[0:mb - 1]) - db\n    age_d = age_d + sum(a[0:mc - 1]) + dc\n    print(age_d + 1)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    age_d = 0\n    (yc, mc, dc) = map(int, input().split())\n    no = sum(a)\n    le = no + 1\n    for j in range(yb, yc):\n        if j % 4 == 0:\n            age_d = age_d + le\n        else:\n            age_d = age_d + no\n    age_d = age_d - sum(a[0:mb - 1]) - db\n    age_d = age_d + sum(a[0:mc - 1]) + dc\n    print(age_d + 1)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nj = 0\nwhile j < t:\n    n = int(input())\n    leap = 0\n    a = [int(i) for i in input().split()]\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    if y1 != y2:\n        days = a[m1 - 1] - d1 + d2 + 1\n        for i in range(m1, n):\n            days = days + a[i]\n        for i in range(0, m2 - 1):\n            days = days + a[i]\n        days = days + sum(a) * (y2 - y1 - 1)\n        i = y1\n        while i < y2:\n            if i % 4 == 0:\n                leap = leap + 1\n            i = i + 1\n    elif m1 == m2:\n        if d1 == d2:\n            days = 1\n        else:\n            days = d2 - d1 + 1\n    else:\n        days = a[m1 - 1] - d1 + d2 + 1\n        for i in range(m1, m2 - 1):\n            days = days + a[i]\n    print(days + leap)\n    j = j + 1", "t = int(input())\nj = 0\nwhile j < t:\n    n = int(input())\n    leap = 0\n    a = [int(i) for i in input().split()]\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    if y1 != y2:\n        days = a[m1 - 1] - d1 + d2 + 1\n        for i in range(m1, n):\n            days = days + a[i]\n        for i in range(0, m2 - 1):\n            days = days + a[i]\n        days = days + sum(a) * (y2 - y1 - 1)\n        i = y1\n        while i < y2:\n            if i % 4 == 0:\n                leap = leap + 1\n            i = i + 1\n    elif m1 == m2:\n        if d1 == d2:\n            days = 1\n        else:\n            days = d2 - d1 + 1\n    else:\n        days = a[m1 - 1] - d1 + d2 + 1\n        for i in range(m1, m2 - 1):\n            days = days + a[i]\n    print(days + leap)\n    j = j + 1", "t = int(input())\nj = 0\nwhile j < t:\n    n = int(input())\n    leap = 0\n    a = [int(i) for i in input().split()]\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    if y1 != y2:\n        days = a[m1 - 1] - d1 + d2 + 1\n        for i in range(m1, n):\n            days = days + a[i]\n        for i in range(0, m2 - 1):\n            days = days + a[i]\n        days = days + sum(a) * (y2 - y1 - 1)\n        i = y1\n        while i < y2:\n            if i % 4 == 0:\n                leap = leap + 1\n            i = i + 1\n    elif m1 == m2:\n        if d1 == d2:\n            days = 1\n        else:\n            days = d2 - d1 + 1\n    else:\n        days = a[m1 - 1] - d1 + d2 + 1\n        for i in range(m1, m2 - 1):\n            days = days + a[i]\n    print(days + leap)\n    j = j + 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (a, b, c) = map(int, input().split())\n    (d, e, f) = map(int, input().split())\n    s = f - c\n    if b <= e:\n        s += sum(l[b - 1:e - 1])\n    else:\n        s -= sum(l[e - 1:b - 1])\n    z = d % 4\n    if z == 0:\n        z = 4\n    if z <= (d - a) % 4:\n        s += 2\n    else:\n        s += 1\n    s += (d - a) // 4\n    s += sum(l) * (d - a)\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (a, b, c) = map(int, input().split())\n    (d, e, f) = map(int, input().split())\n    s = f - c\n    if b <= e:\n        s += sum(l[b - 1:e - 1])\n    else:\n        s -= sum(l[e - 1:b - 1])\n    z = d % 4\n    if z == 0:\n        z = 4\n    if z <= (d - a) % 4:\n        s += 2\n    else:\n        s += 1\n    s += (d - a) // 4\n    s += sum(l) * (d - a)\n    print(s)", "def ti():\n    return tuple(map(int, input().split()))\n\ndef li():\n    return list(map(int, input().split()))\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\n\ndef year2days(y, a):\n    return sum(a) * (y - 1) + (y - 1) // 4\n\ndef month2days(m, a):\n    return sum(a[:m - 1])\nfor tastcas in range(int(input())):\n    n = ii()\n    arr = li()\n    (a1, b1, c1) = li()\n    (a2, b2, c2) = li()\n    birth = year2days(a1, arr) + month2days(b1, arr) + c1\n    current = year2days(a2, arr) + month2days(b2, arr) + c2\n    print(current - birth + 1)", "def year2days(y, arr):\n    s = 0\n    for i in arr:\n        s += i\n    s *= y - 1\n    s += (y - 1) // 4\n    return s\n\ndef month2days(m, arr):\n    s = 0\n    for i in range(m - 1):\n        s += arr[i]\n    return s\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    [a, b, c] = map(int, input().split())\n    birth = year2days(a, arr) + month2days(b, arr) + c\n    [a, b, c] = map(int, input().split())\n    current = year2days(a, arr) + month2days(b, arr) + c\n    print(current - birth + 1)", "def year2days(y, arr):\n    s = 0\n    for i in arr:\n        s += i\n    s *= y - 1\n    s += (y - 1) // 4\n    return s\n\ndef month2days(m, arr):\n    s = 0\n    for i in range(m - 1):\n        s += arr[i]\n    return s\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    [a, b, c] = map(int, input().split())\n    birth = year2days(a, arr) + month2days(b, arr) + c\n    [a, b, c] = map(int, input().split())\n    current = year2days(a, arr) + month2days(b, arr) + c\n    print(current - birth + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    a = list(map(int, input().split()))\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    if y1 != y2:\n        d = a[m1 - 1] - d1 + d2 + 1\n        for j in range(m1, n):\n            d += a[j]\n        for k in range(m2 - 1):\n            d += a[k]\n        d += sum(a) * (y2 - y1 - 1)\n        s = y1\n        while s < y2:\n            if s % 4 == 0:\n                c += 1\n            s += 1\n    elif m1 == m2:\n        if d1 == d2:\n            d = 1\n        else:\n            d = d2 - d1 + 1\n    else:\n        d = a[m1 - 1] - d1 + d2 + 1\n        for z in range(m1, m2 - 1):\n            d += a[z]\n    print(d + c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    a = list(map(int, input().split()))\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    if y1 != y2:\n        d = a[m1 - 1] - d1 + d2 + 1\n        for j in range(m1, n):\n            d += a[j]\n        for k in range(m2 - 1):\n            d += a[k]\n        d += sum(a) * (y2 - y1 - 1)\n        s = y1\n        while s < y2:\n            if s % 4 == 0:\n                c += 1\n            s += 1\n    elif m1 == m2:\n        if d1 == d2:\n            d = 1\n        else:\n            d = d2 - d1 + 1\n    else:\n        d = a[m1 - 1] - d1 + d2 + 1\n        for z in range(m1, m2 - 1):\n            d += a[z]\n    print(d + c)", "t = int(input())\nj = 0\nwhile j < t:\n    n = int(input())\n    leap = 0\n    a = [int(i) for i in input().split()]\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    if y1 != y2:\n        days = a[m1 - 1] - d1 + d2 + 1\n        for i in range(m1, n):\n            days = days + a[i]\n        for i in range(0, m2 - 1):\n            days = days + a[i]\n        days = days + sum(a) * (y2 - y1 - 1)\n        i = y1\n        while i < y2:\n            if i % 4 == 0:\n                leap = leap + 1\n            i = i + 1\n    elif m1 == m2:\n        if d1 == d2:\n            days = 1\n        else:\n            days = d2 - d1 + 1\n    else:\n        days = a[m1 - 1] - d1 + d2 + 1\n        for i in range(m1, m2 - 1):\n            days = days + a[i]\n    print(days + leap)\n    j = j + 1", "t = int(input())\nj = 0\nwhile j < t:\n    n = int(input())\n    leap = 0\n    a = [int(i) for i in input().split()]\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    if y1 != y2:\n        days = a[m1 - 1] - d1 + d2 + 1\n        for i in range(m1, n):\n            days = days + a[i]\n        for i in range(0, m2 - 1):\n            days = days + a[i]\n        days = days + sum(a) * (y2 - y1 - 1)\n        i = y1\n        while i < y2:\n            if i % 4 == 0:\n                leap = leap + 1\n            i = i + 1\n    elif m1 == m2:\n        if d1 == d2:\n            days = 1\n        else:\n            days = d2 - d1 + 1\n    else:\n        days = a[m1 - 1] - d1 + d2 + 1\n        for i in range(m1, m2 - 1):\n            days = days + a[i]\n    print(days + leap)\n    j = j + 1", "def cal(current, goal):\n    count = 0\n    for i in range(current, goal):\n        if i % 4 == 0:\n            count += 1\n    return count\n\ndef cal1(arr, month, day):\n    sum = 0\n    for i in range(month - 1):\n        sum += arr[i]\n    return sum + day\n\ndef cal2(arr, month, day):\n    days_of_month = 0\n    for i in range(month, len(arr)):\n        days_of_month += arr[i]\n    days = arr[month - 1] - day + 1\n    return days + days_of_month\nfor _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    days_in_1year = sum(lis)\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    leap_count = cal(yb, yc)\n    year_count = max(0, yc - yb - 1)\n    year_days = year_count * days_in_1year\n    current_year_count = cal1(lis, mc, dc)\n    if yb != yc:\n        last_year_count = cal2(lis, mb, db)\n        current_year_count = cal1(lis, mc, dc)\n        print(current_year_count + year_days + leap_count + last_year_count)\n    else:\n        last_year_count = cal1(lis, mb, db)\n        current_year_count = cal1(lis, mc, dc)\n        print(current_year_count + year_days + leap_count - last_year_count + 1)", "def cal(current, goal):\n    count = 0\n    for i in range(current, goal):\n        if i % 4 == 0:\n            count += 1\n    return count\n\ndef cal1(arr, month, day):\n    sum = 0\n    for i in range(month - 1):\n        sum += arr[i]\n    return sum + day\n\ndef cal2(arr, month, day):\n    days_of_month = 0\n    for i in range(month, len(arr)):\n        days_of_month += arr[i]\n    days = arr[month - 1] - day + 1\n    return days + days_of_month\nfor _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    days_in_1year = sum(lis)\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    leap_count = cal(yb, yc)\n    year_count = max(0, yc - yb - 1)\n    year_days = year_count * days_in_1year\n    current_year_count = cal1(lis, mc, dc)\n    if yb != yc:\n        last_year_count = cal2(lis, mb, db)\n        current_year_count = cal1(lis, mc, dc)\n        print(current_year_count + year_days + leap_count + last_year_count)\n    else:\n        last_year_count = cal1(lis, mb, db)\n        current_year_count = cal1(lis, mc, dc)\n        print(current_year_count + year_days + leap_count - last_year_count + 1)", "import math\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    presum = [0] * n\n    presum[0] = arr[0]\n    for i in range(1, n):\n        presum[i] = presum[i - 1] + arr[i]\n    ans = 0\n    if yb == yc:\n        if mb == mc:\n            if db == dc:\n                ans = 1\n            else:\n                ans = abs(dc - db) + 1\n        else:\n            ans += arr[mb - 1] - db + 1\n            ans += dc\n            ans += presum[mc - 1] - presum[mb - 1] - arr[mc - 1]\n    else:\n        ans += (yc - yb - 1) * presum[n - 1]\n        ans += presum[n - 1] - presum[mb - 1]\n        ans += arr[mb - 1] - db + 1\n        ans += presum[mc - 1] - arr[mc - 1]\n        ans += dc\n        for i in range(yb, yc):\n            if i % 4 == 0:\n                ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    sum1 = 0\n    sum2 = 0\n    days = [int(x) for x in input().split()]\n    (y, m, d) = (int(x) for x in input().split())\n    (y_1, m_1, d_1) = (int(x) for x in input().split())\n    ans = 0\n    ans += y_1 // 4 - y // 4\n    if y_1 % 4 == 0:\n        ans -= 1\n    sum1 += y * sum(days) + sum(days[0:m - 1]) + d\n    sum2 += y_1 * sum(days) + sum(days[0:m_1 - 1]) + d_1\n    if y % 4 == 0:\n        sum2 += 1\n    print(sum2 - sum1 + 1 + ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    sum1 = 0\n    sum2 = 0\n    days = [int(x) for x in input().split()]\n    (y, m, d) = (int(x) for x in input().split())\n    (y_1, m_1, d_1) = (int(x) for x in input().split())\n    ans = 0\n    ans += y_1 // 4 - y // 4\n    if y_1 % 4 == 0:\n        ans -= 1\n    sum1 += y * sum(days) + sum(days[0:m - 1]) + d\n    sum2 += y_1 * sum(days) + sum(days[0:m_1 - 1]) + d_1\n    if y % 4 == 0:\n        sum2 += 1\n    print(sum2 - sum1 + 1 + ans)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    (yb, mb, db) = map(int, input().split())\n    k = 0\n    (yc, mc, dc) = map(int, input().split())\n    no = sum(a)\n    le = no + 1\n    for j in range(yb, yc):\n        if j % 4 == 0:\n            k = k + le\n        else:\n            k = k + no\n    k = k - sum(a[0:mb - 1]) - db\n    k = k + sum(a[0:mc - 1]) + dc\n    print(k + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    sum1 = 0\n    sum2 = 0\n    days = [int(x) for x in input().split()]\n    (y, m, d) = (int(x) for x in input().split())\n    (y_1, m_1, d_1) = (int(x) for x in input().split())\n    ans = 0\n    ans += y_1 // 4 - y // 4\n    if y_1 % 4 == 0:\n        ans -= 1\n    sum1 += y * sum(days) + sum(days[0:m - 1]) + d\n    sum2 += y_1 * sum(days) + sum(days[0:m_1 - 1]) + d_1\n    if y % 4 == 0:\n        sum2 += 1\n    print(sum2 - sum1 + 1 + ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    sum1 = 0\n    sum2 = 0\n    days = [int(x) for x in input().split()]\n    (y, m, d) = (int(x) for x in input().split())\n    (y_1, m_1, d_1) = (int(x) for x in input().split())\n    ans = 0\n    ans += y_1 // 4 - y // 4\n    if y_1 % 4 == 0:\n        ans -= 1\n    sum1 += y * sum(days) + sum(days[0:m - 1]) + d\n    sum2 += y_1 * sum(days) + sum(days[0:m_1 - 1]) + d_1\n    if y % 4 == 0:\n        sum2 += 1\n    print(sum2 - sum1 + 1 + ans)", "def daysfrombeg(d, m, y, sumy):\n    count = 0\n    lep = (y - 1) // 4\n    nolep = y - 1 - lep\n    count += lep * (sumy + 1)\n    count += nolep * sumy\n    return count\nt = int(input())\nfor you in range(t):\n    n = int(input())\n    l = input().split()\n    li = [int(i) for i in l]\n    arr = []\n    sumo = 0\n    for i in range(n):\n        sumo += li[i]\n        arr.append(sumo)\n    l = input().split()\n    y = int(l[0])\n    m = int(l[1])\n    d = int(l[2])\n    numofday1 = daysfrombeg(d, m, y, sumo)\n    if m >= 2:\n        numofday1 += arr[m - 2]\n    numofday1 += d\n    l = input().split()\n    y = int(l[0])\n    m = int(l[1])\n    d = int(l[2])\n    numofday2 = daysfrombeg(d, m, y, sumo)\n    if m >= 2:\n        numofday2 += arr[m - 2]\n    numofday2 += d\n    print(numofday2 - numofday1 + 1)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    (yb, mb, db) = map(int, input().split())\n    k = 0\n    (yc, mc, dc) = map(int, input().split())\n    no = sum(a)\n    le = no + 1\n    for j in range(yb, yc):\n        if j % 4 == 0:\n            k = k + le\n        else:\n            k = k + no\n    k = k - sum(a[0:mb - 1]) - db\n    k = k + sum(a[0:mc - 1]) + dc\n    print(k + 1)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    days = 0\n    for i in range(yb + 1, yc):\n        days += sum(L)\n        if i % 4 == 0:\n            days += 1\n    if yb != yc:\n        if mb == N:\n            days += L[mb - 1] - db + 1\n        else:\n            for j in range(mb, N):\n                days += L[j]\n            days += L[mb - 1] - db + 1\n        for u in range(mc - 1):\n            days += L[u]\n        days += dc\n    elif mb != mc:\n        for k in range(mb, mc - 1):\n            days += L[k]\n        days += L[mb - 1] - db + 1 + dc\n    else:\n        days += dc - db + 1\n    if yb % 4 == 0 and yb != yc:\n        days += 1\n    print(days)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        arr1 = [arr[0]]\n        for i in range(1, n):\n            arr1.append(arr1[i - 1] + arr[i])\n        (yb, mb, db) = map(int, input().split())\n        (yc, mc, dc) = map(int, input().split())\n        if mb == 1:\n            late_birth = db\n        else:\n            late_birth = arr1[mb - 2] + db\n        if mc == 1:\n            extra_date = dc\n        else:\n            extra_date = arr1[mc - 2] + dc\n        no_days = (yc - yb) * arr1[-1] + 1\n        no_days += extra_date\n        no_days -= late_birth\n        leep = yc // 4 - yb // 4\n        if yb % 4 == 0:\n            leep += 1\n        if yc % 4 == 0:\n            leep -= 1\n        print(no_days + leep)\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    str_arr = input().split(' ')\n    arr = [int(i) for i in str_arr]\n    str_arr = input().split(' ')\n    (y1, m1, d1) = (int(str_arr[0]), int(str_arr[1]), int(str_arr[2]))\n    str_arr = input().split(' ')\n    (y2, m2, d2) = (int(str_arr[0]), int(str_arr[1]), int(str_arr[2]))\n    full_year = sum(arr)\n    num_leap_year = 0\n    for i in range(y1, y2):\n        if i % 4 == 0:\n            num_leap_year += 1\n    cnt = 0\n    cnt += (y2 - y1) * full_year + num_leap_year + 1\n    start = min(m1, m2) - 1\n    end = max(m1, m2) - 1\n    if m2 > m1:\n        cnt += sum(arr[start:end])\n    else:\n        cnt -= sum(arr[start:end])\n    cnt += d2 - d1\n    print(cnt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    m1 = m1 - 1\n    m2 = m2 - 1\n    x = (y2 - y1 - 1) * sum(l) + (l[m1] - d1 + 1) + sum(l[m1 + 1:]) + sum(l[0:m2]) + d2\n    for i in range(y1, y2):\n        if i % 4 == 0:\n            x += 1\n    print(x)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    M = list(map(int, input().split()))\n    I = list(map(int, input().split()))\n    F = list(map(int, input().split()))\n    yeartime = 0\n    for i in M:\n        yeartime += i\n    yearday = (F[0] - I[0]) * yeartime\n    i = 0\n    m1 = 0\n    while i != I[1] - 1:\n        m1 += M[i]\n        i += 1\n    i = 0\n    m2 = 0\n    while i != F[1] - 1:\n        m2 += M[i]\n        i += 1\n    totalday = m2 + F[2] + 1 + yearday - (m1 + I[2])\n    i = I[0]\n    while i % 4 != 0:\n        i += 1\n    count = 0\n    while i < F[0]:\n        count += 1\n        i += 4\n    totalday += count\n    print(totalday)", "t = int(input())\nfor o in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    m1 = m1 - 1\n    m2 = m2 - 1\n    x = (y2 - y1 - 1) * sum(l) + (l[m1] - d1 + 1) + sum(l[m1 + 1:]) + sum(l[0:m2]) + d2\n    for i in range(y1, y2):\n        if i % 4 == 0:\n            x += 1\n    print(x)", "k = int(input())\nfor i in range(k):\n    n = int(input())\n    u = 0\n    a = list(map(int, input().split()))\n    (x, y, z) = map(int, input().split())\n    (p, q, r) = map(int, input().split())\n    if x == p:\n        u = sum(a[y - 1:q - 1]) - (z - 1) + r\n    else:\n        for j in range(x, p + 1):\n            if j == x:\n                u = u + sum(a[y - 1:]) - (z - 1)\n                if j % 4 == 0:\n                    u = u + 1\n            if j == p:\n                u = u + sum(a[0:q - 1]) + r\n            if j != p and j != x:\n                u = u + sum(a)\n                if j % 4 == 0:\n                    u = u + 1\n    print(u)", "T = int(input())\nwhile T > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    asum = sum(a)\n    day = a[mb - 1] - db + 1\n    i = mb\n    while i < n:\n        day += a[i]\n        i += 1\n    if yb % 4 == 0:\n        day += 1\n    yb += 1\n    minus = a[mc - 1] - dc\n    i = mc\n    while i < n:\n        minus += a[i]\n        i += 1\n    if yc % 4 == 0:\n        minus += 1\n    day += asum * (yc - yb + 1)\n    day += yc // 4 - yb // 4\n    if yb % 4 == 0:\n        day += 1\n    day -= minus\n    print(day)\n    T -= 1", "T = int(input())\nwhile T > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    asum = sum(a)\n    day = a[mb - 1] - db + 1\n    i = mb\n    while i < n:\n        day += a[i]\n        i += 1\n    if yb % 4 == 0:\n        day += 1\n    yb += 1\n    minus = a[mc - 1] - dc\n    i = mc\n    while i < n:\n        minus += a[i]\n        i += 1\n    if yc % 4 == 0:\n        minus += 1\n    while yc >= yb:\n        day += asum\n        if yb % 4 == 0:\n            day += 1\n        yb += 1\n    day -= minus\n    print(day)\n    T -= 1", "t = int(input())\n\ndef countLeap(a, b):\n    count = 0\n    for i in range(a, b + 1):\n        if i % 4 == 0:\n            count += 1\n    return count\n\ndef countdays(y1, y2, a):\n    if y2 >= y1:\n        noleap = sum(a)\n        leap = noleap + 1\n        return countLeap(y1, y2) * leap + (y2 - y1 + 1 - countLeap(y1, y2)) * noleap\n    else:\n        return 0\n\ndef birthval(y, m, d, a):\n    dur = sum(a)\n    sumi = 0\n    for i in range(0, m - 1, 1):\n        sumi += a[i]\n    ans = dur - sumi - d + 2\n    if y % 4 == 0:\n        return ans\n    else:\n        return ans - 1\n\ndef endval(y, m, d, a):\n    sumI = 0\n    for i in range(0, m - 1, 1):\n        sumI += a[i]\n    return sumI + d\nfor _ in range(t):\n    n = int(input())\n    a = []\n    a = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    if yc > yb:\n        x = birthval(yb, mb, db, a)\n        y = endval(yc, mc, dc, a)\n        z = countdays(yb + 1, yc - 1, a)\n        print(x + y + z)\n    else:\n        y = endval(yc, mc, dc, a)\n        z = endval(yb, mb, db, a)\n        print(1 + y - z)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (y1, m1, d1) = list(map(int, input().split()))\n    (y2, m2, d2) = list(map(int, input().split()))\n    sum = 0\n    l1 = []\n    tot = 0\n    for j in range(0, n):\n        sum += l[j]\n        l1.append(sum)\n    j = y1\n    lp = 0\n    while j < y2:\n        if j % 4 == 0:\n            lp += 1\n        j += 1\n    tot = sum * (y2 - y1 - 1) + lp\n    tot += sum - l1[m1 - 1] + l[m1 - 1] - d1 + 1\n    tot += l1[m2 - 1] - l[m2 - 1] + d2\n    print(tot)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (y1, m1, d1) = list(map(int, input().split()))\n    (y2, m2, d2) = list(map(int, input().split()))\n    sum = 0\n    l1 = []\n    tot = 0\n    for j in range(0, n):\n        sum += l[j]\n        l1.append(sum)\n    j = y1\n    lp = 0\n    while j < y2:\n        if j % 4 == 0:\n            lp += 1\n        j += 1\n    tot = sum * (y2 - y1 - 1) + lp\n    tot += sum - l1[m1 - 1] + l[m1 - 1] - d1 + 1\n    tot += l1[m2 - 1] - l[m2 - 1] + d2\n    print(tot)", "t = int(input())\nwhile t:\n    n = int(input())\n    months = [int(w) for w in input().split()]\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    if yb == yc:\n        if yb % 4 == 0:\n            months[n - 1] = months[n - 1] + 1\n        if mb == mc:\n            print(dc - db + 1)\n        else:\n            total = months[mb - 1] - db + 1\n            for i in range(mb, mc - 1):\n                total = total + months[i]\n            total = total + dc\n            print(total)\n    else:\n        total = 0\n        for i in range(yb, yc + 1):\n            cmonth = []\n            cmonth = months[:]\n            if i % 4 == 0:\n                cmonth[n - 1] = cmonth[n - 1] + 1\n            if i == yb:\n                total = cmonth[mb - 1] - db + 1\n                for j in range(mb, n):\n                    total = total + cmonth[j]\n            if i != yb and i != yc:\n                total = total + sum(cmonth)\n            if i == yc:\n                for j in range(0, mc - 1):\n                    total = total + cmonth[j]\n                total = total + dc\n        print(total)\n    t = t - 1", "def dey(y, m, d, a):\n    daysIn = y * sum(a)\n    daysIn += (y - 1) // 4\n    for i in range(0, m):\n        daysIn += a[i]\n    return daysIn + d\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    (yb, mb, db) = map(int, input().split(' '))\n    (yc, mc, dc) = map(int, input().split(' '))\n    mb -= 1\n    mc -= 1\n    print(dey(yc, mc, dc, a) - dey(yb, mb, db, a) + 1)", "for i in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    year = sum(a)\n    total = (yc - yb - 1) * year\n    for j in range(yb, yc):\n        if j % 4 == 0:\n            total += 1\n    total = total + a[mb - 1] - db + dc\n    for j in range(mb, N):\n        total += a[j]\n    for j in range(mc - 1):\n        total += a[j]\n    print(total + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    m = list(map(int, input().strip().split()))\n    (yb, mb, db) = map(int, input().strip().split())\n    (yc, mc, dc) = map(int, input().strip().split())\n    s = sum(m)\n    d = 0\n    if yb != yc:\n        for i in range(yb + 1, yc):\n            if i % 4 == 0:\n                d += s + 1\n            else:\n                d += s\n        if yb % 4 == 0:\n            m[n - 1] += 1\n        for i in range(mb, n):\n            d += m[i]\n        d += m[mb - 1] - db + 1\n        if yc % 4 != 0 and yb % 4 == 0:\n            m[n - 1] -= 1\n        for i in range(mc - 1):\n            d += m[i]\n        d += dc\n    else:\n        if yc % 4 == 0:\n            m[n - 1] += 1\n        for i in range(mb, mc - 1):\n            d += m[i]\n        if mb != mc:\n            d += m[mb - 1] - db + 1\n            d += dc\n        else:\n            d = dc - db + 1\n    print(d)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    m = list(map(int, input().strip().split()))\n    (yb, mb, db) = map(int, input().strip().split())\n    (yc, mc, dc) = map(int, input().strip().split())\n    s = sum(m)\n    d = 0\n    if yb != yc:\n        for i in range(yb + 1, yc):\n            if i % 4 == 0:\n                d += s + 1\n            else:\n                d += s\n        if yb % 4 == 0:\n            m[n - 1] += 1\n        for i in range(mb, n):\n            d += m[i]\n        d += m[mb - 1] - db + 1\n        if yc % 4 != 0 and yb % 4 == 0:\n            m[n - 1] -= 1\n        for i in range(mc - 1):\n            d += m[i]\n        d += dc\n    else:\n        if yc % 4 == 0:\n            m[n - 1] += 1\n        for i in range(mb, mc - 1):\n            d += m[i]\n        if mb != mc:\n            d += m[mb - 1] - db + 1\n            d += dc\n        else:\n            d = dc - db + 1\n    print(d)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = input().split()\n    (yb, mb, db) = input().split()\n    (yc, mc, dc) = input().split()\n    days = 0\n    for j in range(N):\n        days += int(A[j])\n    count = 0\n    for k in range(int(yb), int(yc)):\n        if k % 4 == 0:\n            count += 1\n    days1 = (int(yc) - int(yb) - 1) * days + count\n    days2 = 0\n    for x in range(int(mc) - 1):\n        days2 += int(A[x])\n    days2 += int(dc)\n    days3 = 0\n    for y in range(int(mb) - 1, N):\n        days3 += int(A[y])\n    days3 -= int(db)\n    print(days1 + days2 + days3 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    c = sum(a)\n    bd = [int(x) for x in input().split()]\n    cd = [int(x) for x in input().split()]\n    sum1 = 0\n    if bd[0] == cd[0]:\n        if bd[1] == cd[1]:\n            if bd[2] == cd[2]:\n                sum1 += 1\n            else:\n                sum1 = sum1 + cd[2] - bd[2] + 1\n        else:\n            sum1 = sum1 + a[bd[1] - 1] - bd[2] + 1\n            for y in range(bd[1], cd[1] - 1):\n                sum1 += a[y]\n            sum1 += cd[2]\n    else:\n        for x in range(bd[0], cd[0]):\n            if x == bd[0]:\n                sum1 = sum1 + a[bd[1] - 1] - bd[2] + 1\n                for y in range(bd[1], n):\n                    sum1 = sum1 + a[y]\n            else:\n                sum1 = sum1 + c\n                if x % 4 == 0:\n                    sum1 += 1\n        sum1 = sum1 + sum(a[0:cd[1] - 1]) + cd[2]\n    if bd[0] % 4 == 0 and bd[0] != cd[0]:\n        sum1 = sum1 + 1\n    print(sum1)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dob = list(map(int, input().split()))\n    cd = list(map(int, input().split()))\n    cum_list = []\n    cum_list.append(0)\n    cum_list.append(arr[0])\n    days_in_year = 0\n    for (i, x) in enumerate(arr):\n        if i != 0:\n            cum_list.append(arr[i] + cum_list[i])\n        days_in_year += x\n    leap_year_passed_since_birth = int((dob[0] - 1) / 4)\n    leap_year_passed_till_date = int((cd[0] - 1) / 4)\n    age_in_days = leap_year_passed_since_birth * (days_in_year + 1) + (dob[0] - 1 - leap_year_passed_since_birth) * days_in_year + cum_list[dob[1] - 1] + dob[2]\n    date_in_days = leap_year_passed_till_date * (days_in_year + 1) + (cd[0] - 1 - leap_year_passed_till_date) * days_in_year + cum_list[cd[1] - 1] + cd[2]\n    print(date_in_days - age_in_days + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = [int(i) for i in input().split()]\n    (yb, mb, db) = [int(i) for i in input().split()]\n    (yc, mc, dc) = [int(i) for i in input().split()]\n    v = d[-1]\n    c = 0\n    if yb % 4 == 0:\n        d[-1] = v + 1\n    if yb == yc:\n        if mb == mc:\n            c += dc - db + 1\n        else:\n            c += d[mb - 1] - db + 1\n            c += sum(d[mb:mc - 1])\n            c += dc\n    else:\n        c += d[mb - 1] - db + 1\n        c += sum(d[mb:])\n        for i in range(yb + 1, yc):\n            if i % 4 == 0:\n                d[-1] = v + 1\n            else:\n                d[-1] = v\n            c += sum(d)\n        c += sum(d[:mc - 1])\n        c += dc\n    print(c)", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (yb, mb, db) = list(map(int, input().split()))\n    (yc, mc, dc) = list(map(int, input().split()))\n    print((yc - yb) * sum(arr) + yc // 4 - yb // 4 - (yc % 4 == 0) + (yb % 4 == 0) + sum(arr[:mc - 1]) - sum(arr[:mb - 1]) + dc - db + 1)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    days = 0\n    for i in range(yb + 1, yc):\n        days += sum(L)\n        if i % 4 == 0:\n            days += 1\n    if yb != yc:\n        if mb == N:\n            days += L[mb - 1] - db + 1\n        else:\n            for j in range(mb, N):\n                days += L[j]\n            days += L[mb - 1] - db + 1\n        for u in range(mc - 1):\n            days += L[u]\n        days += dc\n    elif mb != mc:\n        for k in range(mb, mc - 1):\n            days += L[k]\n        days += L[mb - 1] - db + 1 + dc\n    else:\n        days += dc - db + 1\n    if yb % 4 == 0 and yb != yc:\n        days += 1\n    print(days)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    birth = list(map(int, input().split()))\n    cur = list(map(int, input().split()))\n    days = sum(a)\n    (bdays, curdays) = (0, 0)\n    bdays = (birth[0] - 1) * days + sum(a[:birth[1] - 1]) + birth[2] + (birth[0] - 1) // 4\n    curdays = (cur[0] - 1) * days + sum(a[:cur[1] - 1]) + cur[2] + (cur[0] - 1) // 4\n    print(curdays - bdays + 1)", "def calcDays(d, m, y, arr):\n    numDays = 0\n    if y % 4 == 0:\n        numDays += y // 4 * (sum(arr) + 1)\n        numDays += (y - y // 4) * sum(arr)\n    else:\n        numDays += (y // 4 + 1) * (sum(arr) + 1)\n        numDays += (y - y // 4 - 1) * sum(arr)\n    for i in range(m):\n        if i == m - 1:\n            numDays += d\n            break\n        numDays += arr[i]\n    return numDays\ntc = int(input())\nfor i in range(tc):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    birthDate = list(map(int, input().split()))\n    currDate = list(map(int, input().split()))\n    calcBirthDays = calcDays(birthDate[2], birthDate[1], birthDate[0], arr)\n    calcCurrDays = calcDays(currDate[2], currDate[1], currDate[0], arr)\n    print(calcCurrDays - calcBirthDays + 1)", "for _ in range(int(input())):\n    n = int(input())\n    days = list(map(int, input().strip().split()))\n    birth = list(map(int, input().strip().split()))\n    current = list(map(int, input().strip().split()))\n    sumdays = sum(days)\n    daysborn = 0\n    dayscurr = 0\n    daysborn += (birth[0] - 1) * sumdays + sum(days[:birth[1] - 1]) + birth[2] + (birth[0] - 1) // 4\n    dayscurr += (current[0] - 1) * sumdays + sum(days[:current[1] - 1]) + current[2] + (current[0] - 1) // 4\n    daycount = dayscurr - daysborn + 1\n    print(daycount)", "def leapcheck(y):\n    if y % 4 == 0:\n        return 1\n    else:\n        return 0\n\ndef nod(y, n, a):\n    nod = 0\n    for z in range(n):\n        nod += a[z]\n    nod += leapcheck(y)\n    return nod\n\ndef daysfrom0(y, m, d, n, a):\n    nods = 0\n    if y != 0:\n        for x in range(y):\n            nods += nod(x, n, a)\n    for z in range(m - 1):\n        nods += a[z]\n    nods += d\n    return nods\nfor x in range(int(input())):\n    n = int(input())\n    a = [int(y) for y in input().split()]\n    b = [int(y) for y in input().split()]\n    yb = b[0]\n    mb = b[1]\n    db = b[2]\n    c = [int(y) for y in input().split()]\n    yc = c[0]\n    mc = c[1]\n    dc = c[2]\n    birthday = daysfrom0(yb, mb, db, n, a)\n    currentday = daysfrom0(yc, mc, dc, n, a)\n    print(currentday + 1 - birthday)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    d = (k[0] - 1) * sum(l) + sum(l[:k[1] - 1]) + k[2]\n    d += (k[0] - 1) // 4\n    e = (m[0] - 1) * sum(l) + sum(l[:m[1] - 1]) + m[2]\n    e += (m[0] - 1) // 4\n    i = k[0]\n    print(e - d + 1)", "for i in range(int(input())):\n    nmy = int(input())\n    dim = list(map(int, input().strip().split()))\n    (yb, mb, db) = map(int, input().strip().split())\n    (yc, mc, dc) = map(int, input().strip().split())\n    nd = sum(dim)\n    age = (yc - yb - 1) * nd\n    if yb % 4 == 0:\n        s = yb\n    else:\n        s = yb - yb % 4 + 4\n    while s < yc:\n        age += 1\n        s += 4\n    age += dim[mb - 1] - db + 1\n    if mb != nmy:\n        age += sum(dim[mb:])\n    age += dc\n    if mc != 1:\n        age += sum(dim[:mc - 1])\n    print(age)", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (yb, mb, db) = list(map(int, input().split()))\n    (yc, mc, dc) = list(map(int, input().split()))\n    print((yc - yb) * sum(arr) + yc // 4 - yb // 4 - (yc % 4 == 0) + (yb % 4 == 0) + sum(arr[:mc - 1]) - sum(arr[:mb - 1]) + dc - db + 1)", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (yb, mb, db) = list(map(int, input().split()))\n    (yc, mc, dc) = list(map(int, input().split()))\n    ndy = sum(arr)\n    nly = yb // 4 - (yb % 4 == 0)\n    daysb = (yb - 1) * ndy + nly\n    for i in range(mb - 1):\n        daysb += arr[i]\n    daysb += db\n    nly = yc // 4 - (yc % 4 == 0)\n    daysc = (yc - 1) * ndy + nly\n    for i in range(mc - 1):\n        daysc += arr[i]\n    daysc += dc\n    print(daysc - daysb + 1)", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (yb, mb, db) = list(map(int, input().split()))\n    (yc, mc, dc) = list(map(int, input().split()))\n    ndy = sum(arr)\n    nly = yb // 4 - (yb % 4 == 0)\n    daysb = (yb - 1) * ndy + nly\n    for i in range(mb - 1):\n        daysb += arr[i]\n        if i == n - 1 and yb % 4 == 0:\n            daysb += 1\n    daysb += db\n    nly = yc // 4 - (yc % 4 == 0)\n    daysc = (yc - 1) * ndy + nly\n    for i in range(mc - 1):\n        daysc += arr[i]\n        if i == n - 1 and yc % 4 == 0:\n            daysc += 1\n    daysc += dc\n    print(daysc - daysb + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    ans = 0\n    if yb == yc and mb == mc:\n        print(dc - db + 1)\n    elif yb == yc:\n        ans = 0\n        ans += a[mb - 1] - db + 1\n        for i in range(mb, mc - 1):\n            ans += a[i]\n        ans += dc\n        print(ans)\n    else:\n        ans = 0\n        ans += a[mb - 1] - db + 1\n        ans += dc\n        for i in range(mb, n):\n            ans += a[i]\n        for i in range(mc - 1):\n            ans += a[i]\n        ans += (yc - yb - 1) * sum(a)\n        for i in range(yb, yc):\n            if i % 4 == 0:\n                ans += 1\n        print(ans)", "T = int(input())\nfor i in range(0, T):\n    add = 0\n    count = 0\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    for j in range(0, C[0] - B[0]):\n        for x in range(0, len(A)):\n            add += A[x]\n    for k in range(0, B[1] - 1):\n        add -= A[k]\n    for h in range(0, C[1] - 1):\n        add += A[h]\n    for h in range(B[0], C[0]):\n        if h % 4 == 0:\n            count += 1\n    print(add - B[-1] + C[-1] + count + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    sum1 = sum(a)\n    ans = 0\n    prefix = [0] * n\n    prefix[0] = a[0]\n    if yb % 4 == 0:\n        ans += 1\n    for i in range(1, n):\n        prefix[i] = a[i] + prefix[i - 1]\n    ans += a[mb - 1] - db + 1 + prefix[n - 1] - prefix[mb - 1]\n    for i in range(yb + 1, yc):\n        ans += sum1\n        if i % 4 == 0:\n            ans += 1\n    if yc > yb:\n        ans += prefix[mc - 1] - (a[mc - 1] - dc)\n        print(ans)\n    else:\n        ans = prefix[mc - 1] - prefix[mb - 1] + a[mb - 1] - db + 1 - (a[mc - 1] - dc)\n        print(ans)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    days = 0\n    for i in range(yb + 1, yc):\n        days += sum(L)\n        if i % 4 == 0:\n            days += 1\n    if yb != yc:\n        if mb == N:\n            days += L[mb - 1] - db + 1\n        else:\n            for j in range(mb, N):\n                days += L[j]\n            days += L[mb - 1] - db + 1\n        for u in range(mc - 1):\n            days += L[u]\n        days += dc\n    elif mb != mc:\n        for k in range(mb, mc - 1):\n            days += L[k]\n        days += L[mb - 1] - db + 1 + dc\n    else:\n        days += dc - db + 1\n    if yb % 4 == 0 and yb != yc:\n        days += 1\n    print(days)", "def main():\n    t = int(input())\n    for j in range(t):\n        n = int(input())\n        a = [int(item) for item in input().split()]\n        (yb, mb, db) = [int(item) for item in input().split()]\n        (yc, mc, dc) = [int(item) for item in input().split()]\n        dby = a[mb - 1] - db + 1 + sum(a[mb:])\n        if yb % 4 == 0:\n            dby += 1\n        if mc == 1:\n            dbc = dc\n        else:\n            dbc = sum(a[:mc - 1]) + dc\n        if yb == yc:\n            if mb == mc:\n                total = dc - db + 1\n            else:\n                total = a[mb - 1] - db + 1 + sum(a[mb:mc - 1]) + dc\n        else:\n            ybl = yb + 1\n            ycl = yc - 1\n            if ybl % 4 == 0:\n                s = ybl // 4\n            else:\n                s = ybl // 4 + 1\n            e = ycl // 4\n            leapyears = e - s + 1\n            restyears = ycl - ybl - leapyears + 1\n            restdays = sum(a)\n            leapdays = restdays + 1\n            total = restdays * restyears + leapdays * leapyears + dby + dbc\n        print(total)\n    return 0\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    mb -= 1\n    mc -= 1\n    if yb == yc:\n        if mb == mc:\n            print(dc - db + 1)\n        else:\n            ans = 0\n            for i in range(mb + 1, mc):\n                ans += a[i]\n            ans += a[mb] - db + 1\n            ans += dc\n            print(ans)\n    else:\n        leap = 0\n        ans = 0\n        for i in range(yb, yc):\n            if i % 4 == 0:\n                leap += 1\n        ans += sum(a) * (yc - yb - 1)\n        ans += a[mb] - db\n        ans += dc + 1\n        for i in range(mc):\n            ans += a[i]\n        for i in range(mb + 1, n):\n            ans += a[i]\n        ans += leap\n        print(ans)", "t = int(input())\nfor x in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = a.copy()\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    lp = int((y2 - y2 % 4 - (y1 + (4 - y1 % 4))) / 4)\n    if y2 % 4 == 0:\n        lp = lp\n    else:\n        lp = lp + 1\n    s = 0\n    days = 0\n    for i in range(0, len(l)):\n        s = s + l[i]\n        l[i] = s\n    days = (y2 - y1 - 1) * l[len(l) - 1]\n    days = days + l[len(l) - 1] - l[m1 - 1] + (a[m1 - 1] - d1)\n    days = days + l[m2 - 2] % l[len(l) - 1] + d2\n    if y1 % 4 == 0:\n        days = days + 1\n    print(days + 1 + lp)", "t = int(input())\nfor x in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = a.copy()\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    lp = int((y2 - y2 % 4 - (y1 + (4 - y1 % 4))) / 4)\n    if y2 % 4 == 0:\n        lp = lp\n    else:\n        lp = lp + 1\n    s = 0\n    days = 0\n    for i in range(0, len(l)):\n        s = s + l[i]\n        l[i] = s\n    days = (y2 - y1 - 1) * l[len(l) - 1]\n    days = days + l[len(l) - 1] - l[m1 - 1] + (a[m1 - 1] - d1)\n    days = days + l[m2 - 2] % l[len(l) - 1] + d2\n    if y1 % 4 == 0:\n        days = days + 1\n    print(days + 1 + lp)", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (y, m, d) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    s = []\n    c = 0\n    t = 0\n    for i in a:\n        c += i\n        s.append(c)\n    if yc - y >= 2:\n        for i in range(y + 1, yc):\n            t += s[n - 1]\n            if i % 4 == 0:\n                t += 1\n        t += s[n - 1] - s[m - 1] + a[m - 1] - d + 1\n        if y % 4 == 0:\n            t += 1\n        if mc > 1:\n            t += s[mc - 2]\n        t += dc\n        print(t)\n    elif yc - y == 1:\n        t += s[n - 1] - s[m - 1] + a[m - 1] - d + 1\n        if y % 4 == 0:\n            t += 1\n        if mc > 1:\n            t += s[mc - 2]\n        t += dc\n        print(t)\n    else:\n        if mc == m:\n            t = dc - d + 1\n        else:\n            t = s[mc - 2] - s[m - 1] + a[m - 1] - d + 1 + dc\n        print(t)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    yb = list(map(int, input().split()))\n    yc = list(map(int, input().split()))\n    (x, li) = (0, [])\n    s = sum((e for e in a))\n    li.append(0)\n    for ele in a:\n        x = x + ele\n        li.append(x)\n    d1 = int(yb[0]) * s + li[int(yb[1]) - 1] + int(yb[2])\n    d2 = int(yc[0]) * s + li[int(yc[1]) - 1] + int(yc[2])\n    x = yb[0] // 4\n    if yb[0] % 4 == 0:\n        x -= 1\n    y = yc[0] // 4\n    if yc[0] % 4 == 0:\n        y -= 1\n    print(d2 - d1 + 1 + y - x)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    days = 0\n    for i in range(yb + 1, yc):\n        days += sum(L)\n        if i % 4 == 0:\n            days += 1\n    if yb != yc:\n        if mb == N:\n            days += L[mb - 1] - db + 1\n        else:\n            for j in range(mb, N):\n                days += L[j]\n            days += L[mb - 1] - db + 1\n        for u in range(mc - 1):\n            days += L[u]\n        days += dc\n    elif mb != mc:\n        for k in range(mb, mc - 1):\n            days += L[k]\n        days += L[mb - 1] - db + 1 + dc\n    else:\n        days += dc - db + 1\n    if yb % 4 == 0 and yb != yc:\n        days += 1\n    print(days)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(d) for d in input().split()]\n    (y1, m1, d1) = [int(d) for d in input().split()]\n    (y2, m2, d2) = [int(d) for d in input().split()]\n    days = sum(arr)\n    count = 0\n    for s in range(y1 + 1, y2):\n        if s % 4 == 0:\n            count += 1\n    if y1 != y2:\n        a = sum(arr[m1 - 1:]) - d1 + 1\n        b = sum(arr[0:m2]) - arr[m2 - 1] + d2\n        if y1 % 4 == 0:\n            a += 1\n        print((y2 - y1 - 1) * days + a + b + count)\n    else:\n        a = sum(arr[m1 - 1:m2 - 1]) - d1 + d2 + 1\n        print(a)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (y, m, d) = map(int, input().split())\n    (yy, mm, dd) = map(int, input().split())\n    ly = 0\n    for year in range(y, yy):\n        if year % 4 == 0:\n            ly = year\n            break\n    if ly > 0:\n        ly = (yy - 1 - ly) // 4 + 1\n    totaldays = sum(a) * (yy - y) + ly\n    start = d - 1\n    if m > 1:\n        for i in range(m - 1):\n            start += a[i]\n    end = dd\n    if mm > 1:\n        for i in range(mm - 1):\n            end += a[i]\n    print(totaldays - start + end)", "raw_input = input\nfor _ in range(int(raw_input())):\n    n = int(raw_input())\n    A = [int(x) for x in raw_input().split()]\n    (yb, mb, db) = map(int, raw_input().split())\n    (yc, mc, dc) = map(int, raw_input().split())\n    tot_days = sum(A)\n    ans = (yc - yb - 1) * tot_days\n    if ans < 0:\n        ans = 0\n    if yc == yb and mc == mb:\n        ans += dc - db + 1\n    elif yc == yb:\n        ans += dc + A[mb - 1] - db + 1\n        for i in range(mb, mc - 1):\n            ans += A[i]\n    else:\n        ans += A[mb - 1] - db + 1\n        for i in range(mb, n):\n            ans += A[i]\n        ans += dc\n        for i in range(mc - 1):\n            ans += A[i]\n        for i in range(yb, yc):\n            if i % 4 == 0:\n                ans += 1\n    print(ans)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    x = 0\n    y = 0\n    z = 0\n    a = list(map(int, input().split()))\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    for j in range(N):\n        x = x + a[j]\n    for j in range(m1 - 1):\n        y = y + a[j]\n    for j in range(m2 - 1):\n        z = z + a[j]\n    for j in range(1, y1):\n        if j % 4 == 0:\n            y = y + 1\n    for j in range(1, y2):\n        if j % 4 == 0:\n            z = z + 1\n    l = (y1 - 1) * x + y + d1\n    m = (y2 - 1) * x + z + d2\n    print(m - l + 1)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    x = 0\n    y = 0\n    z = 0\n    a = list(map(int, input().split()))\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    for j in range(N):\n        x = x + a[j]\n    for j in range(m1 - 1):\n        y = y + a[j]\n    for j in range(m2 - 1):\n        z = z + a[j]\n    for j in range(1, y1):\n        if j % 4 == 0:\n            y = y + 1\n    for j in range(1, y2):\n        if j % 4 == 0:\n            z = z + 1\n    l = (y1 - 1) * x + y + d1\n    m = (y2 - 1) * x + z + d2\n    print(m - l + 1)", "import math\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    presum = [0] * n\n    presum[0] = arr[0]\n    for i in range(1, n):\n        presum[i] = presum[i - 1] + arr[i]\n    ans = 0\n    if yb == yc:\n        if mb == mc:\n            if db == dc:\n                ans = 1\n            else:\n                ans = abs(dc - db) + 1\n        else:\n            ans += arr[mb - 1] - db + 1\n            ans += dc\n            ans += presum[mc - 1] - presum[mb - 1] - arr[mc - 1]\n    else:\n        ans += (yc - yb - 1) * presum[n - 1]\n        ans += presum[n - 1] - presum[mb - 1]\n        ans += arr[mb - 1] - db + 1\n        ans += presum[mc - 1] - arr[mc - 1]\n        ans += dc\n        for i in range(yb, yc):\n            if i % 4 == 0:\n                ans += 1\n    print(ans)", "def isleapyear(n):\n    if n % 4 == 0:\n        return True\n    return False\nfor _ in range(int(input())):\n    m = int(input())\n    dom = list(map(int, input().split()))\n    doy = sum(dom)\n    (by, bm, bd) = map(int, input().split())\n    (ny, nm, nd) = map(int, input().split())\n    days = 0\n    if by != ny:\n        for i in range(by, ny):\n            if isleapyear(i):\n                days += doy + 1\n            else:\n                days += doy\n    dayTYear = bd + sum(dom[0:bm - 1])\n    dayCYear = nd + sum(dom[0:nm - 1])\n    days += dayCYear - dayTYear\n    print(days + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    year = sum(a)\n    age = 0\n    bd = 0\n    for i in range(mb - 1):\n        bd += a[i]\n    bd += db\n    cd = 0\n    for i in range(mc - 1):\n        cd += a[i]\n    cd += dc\n    for i in range(yb, yc):\n        if i % 4 == 0:\n            age += year + 1\n        else:\n            age += year\n    age += cd - bd\n    age += 1\n    print(age)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (year1, month1, day1) = map(int, input().split())\n    (year2, month2, day2) = map(int, input().split())\n    if year1 != year2:\n        year_diff = year2 - year1 - 1\n        days1 = l[month1 - 1] - day1 + 1 + sum(l[month1:])\n        if year1 % 4 == 0:\n            days1 += 1\n        days2 = day2 + sum(l[:month2 - 1])\n        leap_year = 0\n        if year1 % 4 == 0 and year2 % 4 == 0 or (year1 % 4 != 0 and year2 % 4 == 0):\n            leap_year = max(year2 // 4 - year1 // 4 - 1, 0)\n        if year1 % 4 == 0 and year2 % 4 != 0 or (year1 % 4 != 0 and year2 % 4 != 0):\n            leap_year = year2 // 4 - year1 // 4\n        days = leap_year + year_diff * sum(l) + days1 + days2\n        print(days)\n    else:\n        a = 0\n        if month1 != month2:\n            a = sum(l[month1:month2 - 1]) + l[month1 - 1] - day1 + 1 + day2\n        else:\n            a = day2 - day1 + 1\n        print(a)", "from itertools import accumulate\nR = lambda : map(int, input().split())\n\ndef age(t):\n    (y, m, d) = t\n    return y * a[-1] + (y - 1) // 4 + a[m - 1] + d\nt = int(input())\nfor _ in range(t):\n    input()\n    a = [0, *accumulate(R())]\n    (b, c) = (R(), R())\n    print(age(c) - age(b) + 1)", "from itertools import accumulate\nR = lambda : map(int, input().split())\n\ndef age(t):\n    (y, m, d) = t\n    y -= 1\n    return y * a[-1] + y // 4 + a[m - 1] + d\nt = int(input())\nfor _ in range(t):\n    input()\n    a = [0, *accumulate(R())]\n    (b, c) = (R(), R())\n    print(age(c) - age(b) + 1)", "for i in range(int(input())):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    (yb, mb, db) = input().split()\n    (yc, mc, dc) = input().split()\n    yb = int(yb)\n    mb = int(mb)\n    db = int(db)\n    yc = int(yc)\n    mc = int(mc)\n    dc = int(dc)\n    t = sum(A)\n    d = 0\n    for j in range(mb - 1):\n        d = d + A[j]\n    x = t * yb + d + db + int((yb - 1) / 4)\n    d = 0\n    for j in range(mc - 1):\n        d = d + A[j]\n    y = t * yc + d + dc + int((yc - 1) / 4)\n    print(y - x + 1)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.insert(0, 0)\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    sumc = (yc - 1) * sum(A) + (yc - 1) // 4 + sum(A[:mc]) + dc\n    sumb = (yb - 1) * sum(A) + (yb - 1) // 4 + sum(A[:mb]) + db\n    print(sumc - sumb + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    k = [0] * (n + 1)\n    a = [int(x) for x in input().split()]\n    a.insert(0, 0)\n    for j in range(1, n + 1):\n        k[j] = a[j] + k[j - 1]\n    (b, c, d) = map(int, input().split())\n    (e, f, g) = map(int, input().split())\n    z = 0\n    f1 = 0\n    p = 0\n    x = 0\n    for j in range(b, e):\n        if j % 4 == 0:\n            x = x + 1\n    if e > b:\n        z = z + k[f - 1] + g\n    if e - b - 1 > 0:\n        f1 = f1 + k[n] * (e - b - 1)\n    if b == e:\n        p = p + f1 + z + k[f - 1] - k[c] + a[c] - d + 1 + g + x\n    else:\n        p = p + f1 + z + k[n] - k[c] + a[c] - d + 1 + x\n    print(p)", "t = int(input())\nj = 0\nwhile j < t:\n    n = int(input())\n    leap = 0\n    a = [int(i) for i in input().split()]\n    (y1, m1, d1) = map(int, input().split())\n    (y2, m2, d2) = map(int, input().split())\n    if y1 != y2:\n        days = a[m1 - 1] - d1 + d2 + 1\n        for i in range(m1, n):\n            days = days + a[i]\n        for i in range(0, m2 - 1):\n            days = days + a[i]\n        days = days + sum(a) * (y2 - y1 - 1)\n        i = y1\n        while i < y2:\n            if i % 4 == 0:\n                leap = leap + 1\n            i = i + 1\n    elif m1 == m2:\n        if d1 == d2:\n            days = 1\n        else:\n            days = d2 - d1 + 1\n    else:\n        days = a[m1 - 1] - d1 + d2 + 1\n        for i in range(m1, m2 - 1):\n            days = days + a[i]\n    print(days + leap)\n    j = j + 1", "R = lambda : map(int, input().split())\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    B = list(R())\n    (by, bm, bd) = R()\n    (cy, cm, cd) = R()\n    Y = [i for i in B]\n    for i in range(1, n):\n        Y[i] += Y[i - 1]\n    days = Y[n - 1]\n    c1 = (by - 1) * days\n    if bm > 1:\n        c1 += Y[bm - 2]\n    c1 += bd\n    c2 = (cy - 1) * days\n    if cm > 1:\n        c2 += Y[cm - 2]\n    c2 += cd\n    age = c2 - c1 + 1\n    for i in range(by, cy):\n        if i % 4 == 0:\n            age += 1\n    print(age)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [a[0]]\n    for i in range(1, n):\n        b.append(b[i - 1] + a[i])\n    c = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    if d[1] > 1:\n        m2 = d[0] * b[n - 1] + b[d[1] - 2] + d[2]\n    else:\n        m2 = d[0] * b[n - 1] + d[2]\n    if c[1] > 1:\n        m1 = c[0] * b[n - 1] + b[c[1] - 2] + c[2]\n    else:\n        m1 = c[0] * b[n - 1] + c[2]\n    ans = m2 - m1 + 1 + (d[0] - 1) // 4 - (c[0] - 1) // 4\n    print(ans)", "from itertools import accumulate\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().rstrip().split()))\n    a.insert(0, 0)\n    b = []\n    b = b + a\n    b = list(accumulate(b))\n    (yb, mb, db) = list(map(int, input().split()))\n    (yc, mc, dc) = list(map(int, input().split()))\n    days = 0\n    if yb == yc:\n        if mc == mb:\n            days += dc - db + 1\n        else:\n            days += a[mb] - db + 1\n            for i in range(mb + 1, mc):\n                days += a[i]\n            days += dc\n    else:\n        days += a[mb] - db + 1\n        for i in range(mb + 1, n + 1):\n            days += a[i]\n        for i in range(1, mc):\n            days += a[i]\n        if yb % 4 == 0:\n            days += 1\n        for i in range(yb + 1, yc):\n            if i % 4 == 0:\n                days += 1\n            days += sum(a)\n        days += dc\n    print(days)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    days = 0\n    for i in range(yb + 1, yc):\n        days += sum(L)\n        if i % 4 == 0:\n            days += 1\n    if yb != yc:\n        if mb == N:\n            days += L[mb - 1] - db + 1\n        else:\n            for j in range(mb, N):\n                days += L[j]\n            days += L[mb - 1] - db + 1\n        for u in range(mc - 1):\n            days += L[u]\n        days += dc\n    elif mb != mc:\n        for k in range(mb, mc - 1):\n            days += L[k]\n        days += L[mb - 1] - db + 1 + dc\n    else:\n        days += dc - db + 1\n    if yb % 4 == 0 and yb != yc:\n        days += 1\n    print(days)", "from itertools import accumulate\nR = lambda : map(int, input().split())\n\ndef age(t):\n    (y, m, d) = t\n    y -= 1\n    return y // 4 * y4 + y % 4 * a[-1] + a[m - 1] + d\nt = int(input())\nfor _ in range(t):\n    input()\n    a = [0, *accumulate(R())]\n    y4 = 4 * a[-1] + 1\n    (b, c) = (R(), R())\n    print(age(c) - age(b) + 1)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    days = 0\n    for i in range(yb + 1, yc):\n        days += sum(L)\n        if i % 4 == 0:\n            days += 1\n    if yb != yc:\n        if mb == N:\n            days += L[mb - 1] - db + 1\n        else:\n            for j in range(mb, N):\n                days += L[j]\n            days += L[mb - 1] - db + 1\n        for u in range(mc - 1):\n            days += L[u]\n        days += dc\n    elif mb != mc:\n        for k in range(mb, mc - 1):\n            days += L[k]\n        days += L[mb - 1] - db + 1 + dc\n    else:\n        days += dc - db + 1\n    if yb % 4 == 0 and yb != yc:\n        days += 1\n    print(days)", "t = int(input())\nfor case in range(t):\n    months = int(input())\n    age = 0\n    a = list(map(int, input().split()))\n    days = sum(a)\n    birth = list(map(int, input().split()))\n    current = list(map(int, input().split()))\n    (leap, lc) = (False, 0)\n    if birth[0] == current[0]:\n        if birth[1] == current[1]:\n            age += current[2] - birth[2] + 1\n        else:\n            if birth[0] % 4 == 0:\n                a[-1] += 1\n            for i in range(birth[1], current[1] + 1):\n                if i == birth[1]:\n                    age += a[i - 1] - birth[2] + 1\n                elif i == current[1]:\n                    age += current[2]\n                else:\n                    age += a[i - 1]\n    else:\n        for i in range(birth[0], current[0] + 1):\n            if i % 4 == 0:\n                a[-1] += 1\n                (leap, lc) = (True, 1)\n            if i == birth[0]:\n                temp = sum(a[:birth[1] - 1])\n                age += days - temp - (birth[2] - 1) + lc\n            elif i == current[0]:\n                temp = sum(a[current[1]:])\n                age += days - temp - (a[current[1] - 1] - current[2]) + lc\n            else:\n                age += days + lc\n            if leap:\n                a[-1] -= 1\n                (leap, lc) = (False, 0)\n    print(age)", "T = int(input())\nwhile T:\n    add = 0\n    a = 0\n    ans = 0\n    N = int(input())\n    arr = []\n    arr = [int(x) for x in input().split()]\n    for i in range(0, N):\n        add = add + arr[i]\n    (y, m, d) = input().split()\n    (Y, M, D) = input().split()\n    y = int(y)\n    m = int(m)\n    d = int(d)\n    Y = int(Y)\n    M = int(M)\n    D = int(D)\n    dy = Y - y - 1\n    if dy > 0:\n        ans = dy * add\n    if Y == y and M == m and (D == d):\n        ans = 1\n    elif Y == y and M == m:\n        ans = D - d + 1\n    elif Y == y:\n        for i in range(m, M - 1):\n            ans = ans + arr[i]\n        ans = ans + D\n        ans = ans + arr[m - 1] - d + 1\n    else:\n        ans = ans + D\n        for i in range(0, M - 1):\n            ans = ans + arr[i]\n        for i in range(m, N):\n            ans = ans + arr[i]\n        ans = ans + arr[m - 1] - d + 1\n        for i in range(y, Y):\n            if i % 4 == 0:\n                a = a + 1\n        ans = ans + a\n    print(ans)\n    T = T - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (y_b, m_b, d_b) = map(int, input().split())\n    (y_c, m_c, d_c) = map(int, input().split())\n    daysofyear = sum(a)\n    leep = 0\n    a.insert(0, 0)\n    for i in range(y_b, y_c):\n        if i % 4 == 0:\n            leep += 1\n    startm = min(m_b, m_c)\n    endm = max(m_b, m_c)\n    daysofmonth = 0\n    for i in range(startm, endm):\n        daysofmonth += a[i]\n    if m_c > m_b:\n        age = (y_c - y_b) * daysofyear + leep + daysofmonth + (d_c - d_b) + 1\n    else:\n        age = (y_c - y_b) * daysofyear + leep - daysofmonth + (d_c - d_b) + 1\n    print(age)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (cy, cm, cd) = map(int, input().split())\n    (y, m, d) = map(int, input().split())\n    base = sum(arr) * (y - 1)\n    base += sum(arr[:m - 1])\n    base += d\n    base += (y - 1) // 4\n    chef = sum(arr) * (cy - 1)\n    chef += sum(arr[:cm - 1])\n    chef += cd\n    chef += (cy - 1) // 4\n    print(base - chef + 1)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    (yb, mb, db) = map(int, input().split())\n    (yc, mc, dc) = map(int, input().split())\n    days = 0\n    for i in range(yb + 1, yc):\n        days += sum(L)\n        if i % 4 == 0:\n            days += 1\n    if yb != yc:\n        if mb == N:\n            days += L[mb - 1] - db + 1\n        else:\n            for j in range(mb, N):\n                days += L[j]\n            days += L[mb - 1] - db + 1\n        for u in range(mc - 1):\n            days += L[u]\n        days += dc\n    elif mb != mc:\n        for k in range(mb, mc - 1):\n            days += L[k]\n        days += L[mb - 1] - db + 1 + dc\n    else:\n        days += dc - db + 1\n    if yb % 4 == 0 and yb != yc:\n        days += 1\n    print(days)", "def fun(birth, today):\n    if birth[1] < today[1]:\n        return True\n    elif birth[1] > today[1]:\n        return False\n    elif birth[2] <= today[2]:\n        return True\n    else:\n        return False\ntest = int(input())\nfor akdjfgjsdh in range(test):\n    N = int(input())\n    days = list(map(int, input().split()))\n    birth = list(map(int, input().split()))\n    today = list(map(int, input().split()))\n    yeardays = sum(days)\n    flag = fun(birth, today)\n    ans = 0\n    if flag:\n        if birth[1] == today[1]:\n            ans += today[2] - birth[2]\n        else:\n            for i in range(birth[1], today[1]):\n                if i == birth[1]:\n                    ans = ans + (days[i - 1] - birth[2])\n                else:\n                    ans += days[i - 1]\n            ans += today[2]\n    else:\n        if birth[1] == N:\n            ans += days[N - 1] - birth[2]\n        else:\n            for i in range(birth[1], N + 1):\n                if i == birth[1]:\n                    ans = ans + (days[i - 1] - birth[2])\n                else:\n                    ans += days[i - 1]\n        if today[1] == 1:\n            ans += today[2]\n        else:\n            for i in range(1, today[1]):\n                ans += days[i - 1]\n            ans += today[2]\n        if birth[0] % 4 == 0:\n            ans += 1\n    if flag:\n        for i in range(birth[0], today[0]):\n            if i % 4 == 0:\n                ans += 1\n            ans += yeardays\n    else:\n        for i in range(birth[0] + 1, today[0]):\n            if i % 4 == 0:\n                ans += 1\n            ans += yeardays\n    print(ans + 1)", "def fun(birth, today):\n    if birth[1] < today[1]:\n        return True\n    elif birth[1] > today[1]:\n        return False\n    elif birth[2] <= today[2]:\n        return True\n    else:\n        return False\ntest = int(input())\nfor akdjfgjsdh in range(test):\n    N = int(input())\n    days = list(map(int, input().split()))\n    birth = list(map(int, input().split()))\n    today = list(map(int, input().split()))\n    yeardays = sum(days)\n    flag = fun(birth, today)\n    ans = 0\n    if flag:\n        if birth[1] == today[1]:\n            ans += today[2] - birth[2]\n        else:\n            for i in range(birth[1], today[1]):\n                if i == birth[1]:\n                    ans = ans + (days[i - 1] - birth[2])\n                else:\n                    ans += days[i - 1]\n            ans += today[2]\n    else:\n        if birth[1] == N:\n            ans += days[N - 1] - birth[2]\n        else:\n            for i in range(birth[1], N + 1):\n                if i == birth[1]:\n                    ans = ans + (days[i - 1] - birth[2])\n                else:\n                    ans += days[i - 1]\n        if today[1] == 1:\n            ans += today[2]\n        else:\n            for i in range(1, today[1]):\n                ans += days[i - 1]\n            ans += today[2]\n        if birth[0] % 4 == 0:\n            ans += 1\n    if flag:\n        for i in range(birth[0], today[0]):\n            if i % 4 == 0:\n                ans += 1\n            ans += yeardays\n    else:\n        for i in range(birth[0] + 1, today[0]):\n            if i % 4 == 0:\n                ans += 1\n            ans += yeardays\n    print(ans + 1)"]