["for i in range(int(input())):\n    a = int(input())\n    l = sorted(list(map(int, input().split())))\n    d = l[1] - l[0]\n    for i in range(a - 1):\n        if l[i + 1] - l[i] < d:\n            d = l[i + 1] - l[i]\n    print(d)", "n = int(input())\nfor _ in range(n):\n    m = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    l.sort()\n    for i in range(m - 1):\n        l1.append(l[i + 1] - l[i])\n    l1.sort()\n    print(min(l1))", "import math\nfor _ in range(int(input())):\n    N = int(input())\n    L = sorted(list(map(int, input().split())))\n    res = math.inf\n    for i in range(N - 1):\n        res = min(res, L[i + 1] - L[i])\n    print(res)", "for _ in range(int(input())):\n    ans = []\n    n = int(input())\n    skill = list(map(int, input().split()))\n    skill.sort()\n    for i in range(1, n):\n        ans.append(skill[i] - skill[i - 1])\n    ans.sort()\n    print(ans[0])", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    l.sort()\n    res = sys.maxsize\n    for i in range(1, n):\n        res = min(res, l[i] - l[i - 1])\n    return res\nfor _ in range(IN()):\n    print(f())", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    l.sort()\n    res = sys.maxsize\n    for i in range(1, n):\n        res = min(res, l[i] - l[i - 1])\n    return res\nfor _ in range(IN()):\n    print(f())", "for _ in range(int(input())):\n    N = int(input())\n    S = list(map(int, input().split()))\n    S = sorted(S)\n    skills = []\n    for i in range(1, len(S)):\n        skills.append(S[i] - S[i - 1])\n    absSkills = list(map(abs, skills))\n    print(min(absSkills))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = max(a)\n    for i in range(n - 1):\n        c = min(a[i + 1] - a[i], c)\n    print(c)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    P1 = A[1] - A[0]\n    for j in range(1, len(A) - 1):\n        P = A[j + 1] - A[j]\n        if P < P1:\n            P1 = P\n        else:\n            P1 = P1\n    print(P1)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    P1 = A[1] - A[0]\n    for j in range(1, len(A) - 1):\n        P = A[j + 1] - A[j]\n        if P < P1:\n            P1 = P\n        else:\n            P1 = P1\n    print(P1)", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    s = sorted(list(map(int, input().split())))\n    d = []\n    for i in range(0, x - 1):\n        d.append(abs(s[i] - s[i + 1]))\n    print(min(d))", "test = int(input())\nwhile test > 0:\n    N = int(input())\n    points = input().split()\n    skills = list(map(int, points))\n    skills.sort()\n    diff = []\n    for i in range(N - 1):\n        var = abs(skills[i] - skills[i + 1])\n        diff.append(var)\n    print(min(diff))\n    test = test - 1", "t = int(input())\nwhile t > 0:\n    p = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    m = pow(10, 10)\n    for i in range(0, p):\n        if i != p - 1:\n            d = l[i + 1] - l[i]\n            m = min(d, m)\n    print(m)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    diff = a[-1] - a[0]\n    for i in range(len(a) - 1):\n        n2n_diff = a[i + 1] - a[i]\n        diff = min(diff, n2n_diff)\n    print(diff)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    diff = a[-1] - a[0]\n    for i in range(len(a) - 1):\n        n2n_diff = a[i + 1] - a[i]\n        diff = min(diff, n2n_diff)\n    print(diff)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    diff = a[-1] - a[0]\n    for i in range(len(a) - 1):\n        n2n_diff = a[i + 1] - a[i]\n        diff = min(diff, n2n_diff)\n    print(diff)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    l = []\n    for i in range(n - 1):\n        l.append(abs(a[i] - a[i + 1]))\n    print(min(l))", "tests = int(input())\nfor _ in range(tests):\n    N = int(input())\n    l = [int(x) for x in input().split()]\n    l.sort()\n    min_g = l[-1] - l[0]\n    for i in range(len(l) - 1):\n        min_l = l[i + 1] - l[i]\n        min_g = min(min_g, min_l)\n    print(min_g)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    l.sort()\n    res = sys.maxsize\n    for i in range(1, n):\n        res = min(res, l[i] - l[i - 1])\n    return res\nfor _ in range(IN()):\n    print(f())", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n < 2:\n        print(a[0])\n    else:\n        a.sort()\n        v = a[1] - a[0]\n        for i in range(1, n - 1):\n            temp = a[i + 1] - a[i]\n            if temp < v:\n                v = temp\n        print(v)", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    l = []\n    i = 0\n    j = 0\n    for i in range(n - 1):\n        d = s[i + 1] - s[i]\n        l.append(d)\n    print(min(l))", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    S = list(map(int, input().split()))\n    S.sort()\n    DIFF = [S[i + 1] - S[i] for i in range(N - 1)]\n    print(min(DIFF))", "for i in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    y = sorted(l)\n    t = []\n    for j in range(a - 1):\n        x = y[j + 1] - y[j]\n        t.append(x)\n    print(min(t))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    min1 = []\n    for i in range(n - 1):\n        min1.append(l[i + 1] - l[i])\n    print(min(min1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    l = []\n    for i in range(n - 1):\n        l.append(a[i + 1] - a[i])\n    print(min(l))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    b = []\n    for i in range(n - 1):\n        b.append(abs(l[i] - l[i + 1]))\n    print(min(b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    l = []\n    for i in range(n - 1):\n        l.append(a[i + 1] - a[i])\n    print(min(l))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    l = []\n    for i in range(n - 1):\n        l.append(a[i + 1] - a[i])\n    print(min(l))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    skills = sorted(map(int, input().split()))\n    min_diff = min((skills[i + 1] - skills[i] for i in range(n - 1)))\n    print(min_diff)", "def horses(nums):\n    nums.sort()\n    max_diff = nums[1] - nums[0]\n    for i in range(1, len(nums) - 1):\n        max_diff = min(max_diff, nums[i + 1] - nums[i])\n    return max_diff\nT = int(input())\nfor __ in range(T):\n    n = int(input())\n    nums = list(map(int, input().split(' ')))\n    print(horses(nums))", "for t in range(int(input())):\n    n = int(input())\n    skill = sorted(list(map(int, input().split())))\n    mini = 1000000000\n    for i in range(1, n):\n        if skill[i] - skill[i - 1] <= mini:\n            mini = skill[i] - skill[i - 1]\n    print(mini)", "def findMinDiff(arr, n):\n    arr = sorted(arr)\n    diff = 10 ** 20\n    for i in range(n - 1):\n        if arr[i + 1] - arr[i] < diff:\n            diff = arr[i + 1] - arr[i]\n    return diff\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(findMinDiff(a, n))", "def horses(nums):\n    nums.sort()\n    max_diff = nums[1] - nums[0]\n    for i in range(1, len(nums) - 1):\n        max_diff = min(max_diff, nums[i + 1] - nums[i])\n    return max_diff\nT = int(input())\nfor __ in range(T):\n    n = int(input())\n    nums = list(map(int, input().split(' ')))\n    print(horses(nums))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    mi = 10000000000\n    for j in range(n - 1):\n        if abs(arr[j] - arr[j + 1]) < mi:\n            mi = abs(arr[j] - arr[j + 1])\n    print(mi)", "import sys\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = sys.maxsize\n    arr.sort()\n    for i in range(1, n):\n        ans = min(ans, arr[i] - arr[i - 1])\n    print(ans)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    l.sort()\n    res = sys.maxsize\n    for i in range(1, n):\n        res = min(res, l[i] - l[i - 1])\n    return res\nfor _ in range(IN()):\n    print(f())", "import sys\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = sys.maxsize\n    arr.sort()\n    for i in range(1, n):\n        ans = min(ans, arr[i] - arr[i - 1])\n    print(ans)", "for t in range(int(input())):\n    N = int(input())\n    S = list(map(int, input().split()))\n    S.sort()\n    gap = [abs(first - second) for (first, second) in zip(S[0:-1], S[1:])]\n    print(min(gap))", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    s = list(map(int, input().split()))\n    p = sorted(s)\n    c = 0\n    l = []\n    for j in range(n - 1):\n        l.append(p[j + 1] - p[j])\n    print(min(l))", "for i in range(int(input())):\n    x = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = a[1] - a[0]\n    for j in range(x - 1):\n        n = a[j + 1] - a[j]\n        if n < m:\n            m = n\n    print(m)", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = a[1] - a[0]\n    for j in range(x - 1):\n        n = a[j + 1] - a[j]\n        if n < m:\n            m = n\n    print(m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    skills = list(map(int, input().split()))\n    skills.sort()\n    mdiff = float('inf')\n    for i in range(1, n):\n        diff = skills[i] - skills[i - 1]\n        if diff < mdiff:\n            mdiff = diff\n    print(mdiff)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    skills = list(map(int, input().split()))\n    skills.sort()\n    mdiff = float('inf')\n    for i in range(1, n):\n        diff = skills[i] - skills[i - 1]\n        if diff < mdiff:\n            mdiff = diff\n    print(mdiff)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    mini = 10 ** 9\n    for i in range(1, n):\n        mini = min(mini, a[i] - a[i - 1])\n    print(mini)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    m = -1\n    for i in range(n - 1):\n        d = abs(l[i] - l[i + 1])\n        if d < m or m == -1:\n            m = d\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    diff = a[1] - a[0]\n    for i in range(1, n):\n        ans = a[i] - a[i - 1]\n        if ans < diff:\n            diff = ans\n    print(diff)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    m = max(l)\n    for i in range(0, n - 1):\n        m = min(m, l[i + 1] - l[i])\n    print(m)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    l = sorted(map(int, input().split()))\n    m = []\n    for j in range(x - 1):\n        m.append(l[j + 1] - l[j])\n    print(min(m))", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    l = sorted(map(int, input().split()))\n    m = []\n    for j in range(x - 1):\n        m.append(l[j + 1] - l[j])\n    print(min(m))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    min1 = l[1] - l[0]\n    for i in range(n - 1):\n        if l[i + 1] - l[i] < min1:\n            min1 = min(min1, l[i + 1] - l[i])\n    print(min1)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    min1 = l[1] - l[0]\n    for i in range(n - 1):\n        if l[i + 1] - l[i] < min1:\n            min1 = l[i + 1] - l[i]\n    print(min1)", "for _ in range(int(input())):\n    n = int(input())\n    lst = [int(x) for x in input().split()]\n    lst.sort()\n    min = lst[1] - lst[0]\n    for i in range(n - 1):\n        if lst[i + 1] - lst[i] < min:\n            min = lst[i + 1] - lst[i]\n    print(min)", "for i in range(int(input())):\n    x = int(input())\n    l = sorted(list(map(int, input().split())))\n    a = []\n    for i in range(x - 1):\n        m = l[i + 1] - l[i]\n        a.append(m)\n    print(min(a))", "n = int(input())\nfor i in range(n):\n    ho = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    diff = lst[1] - lst[0]\n    for i in range(ho):\n        if i + 1 != ho:\n            if lst[i + 1] - lst[i] < diff:\n                diff = lst[i + 1] - lst[i]\n    print(diff)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    skills = input().split(' ')\n    for j in range(n):\n        skills[j] = int(skills[j])\n    skills.sort()\n    diff = []\n    for x in range(n - 1):\n        diff.append(skills[x + 1] - skills[x])\n    print(min(diff))", "res = 1e+100\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split(' ')))\n    x.sort()\n    for i in range(1, n):\n        if res > x[i] - x[i - 1]:\n            res = x[i] - x[i - 1]\n    print(res)\n    res = 1e+100", "n = int(input())\nfor i in range(n):\n    ho = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    diff = lst[1] - lst[0]\n    for i in range(ho):\n        if i + 1 != ho:\n            if lst[i + 1] - lst[i] < diff:\n                diff = lst[i + 1] - lst[i]\n    print(diff)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    l.sort()\n    res = sys.maxsize\n    for i in range(1, n):\n        res = min(res, l[i] - l[i - 1])\n    return res\nfor _ in range(IN()):\n    print(f())", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    mn = l[-1]\n    for i in range(1, n):\n        p = abs(l[i] - l[i - 1])\n        if p < mn:\n            mn = p\n    print(mn)", "for _ in range(int(input())):\n    x = int(input())\n    l = sorted(list(map(int, input().split())))\n    y = []\n    for i in range(x - 1):\n        y.append(l[i + 1] - l[i])\n    print(min(y))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split(' ')))\n    s.sort()\n    res = 10 ** 9\n    for i in range(1, n):\n        if s[i] - s[i - 1] < res:\n            res = s[i] - s[i - 1]\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split(' ')))\n    s.sort()\n    res = []\n    for i in range(len(s) - 1):\n        if s[i + 1] - s[i] >= 0:\n            res.append(s[i + 1] - s[i])\n    print(min(res))", "n = int(input())\nfor i in range(n):\n    ho = int(input())\n    lst = list(map(int, input().split(' ')))\n    lst.sort()\n    diff = lst[1] - lst[0]\n    for i in range(ho):\n        if i + 1 != ho:\n            if lst[i + 1] - lst[i] < diff:\n                diff = lst[i + 1] - lst[i]\n    print(diff)", "for _ in range(int(input())):\n    onci = int(input())\n    l1 = list(map(int, input().split()))\n    l1.sort()\n    mati = l1[-1] - l1[0]\n    for i in range(len(l1) - 1):\n        n2n = l1[i + 1] - l1[i]\n        mati = min(mati, n2n)\n    print(mati)", "import sys\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l1 = []\n    x = input()\n    x = x.split(' ')\n    for i in x:\n        l1.append(int(i))\n    l1.sort()\n    ans = sys.maxsize\n    for i in range(0, n - 1):\n        ans = min(ans, l1[i + 1] - l1[i])\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l1 = [int(i) for i in input().split()]\n    l1.sort()\n    ans = l1[-1] - l1[0]\n    for i in range(len(l1) - 1):\n        n2n = l1[i + 1] - l1[i]\n        ans = min(ans, n2n)\n    print(ans)\n    t -= 1", "tests = int(input())\nfor _ in range(tests):\n    N = int(input())\n    l = [int(x) for x in input().split()]\n    l.sort()\n    min_g = l[-1] - l[0]\n    for i in range(len(l) - 1):\n        min_l = l[i + 1] - l[i]\n        min_g = min(min_g, min_l)\n    print(min_g)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    S = list(map(int, input().split()))\n    S.sort()\n    mini = S[len(S) - 1]\n    for i in range(len(S) - 1):\n        if mini > S[i + 1] - S[i]:\n            mini = S[i + 1] - S[i]\n    print(mini)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    l.sort()\n    res = sys.maxsize\n    for i in range(1, n):\n        res = min(res, l[i] - l[i - 1])\n    return res\nfor _ in range(IN()):\n    print(f())", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    l.sort()\n    res = sys.maxsize\n    for i in range(1, n):\n        res = min(res, l[i] - l[i - 1])\n    return res\nfor _ in range(IN()):\n    print(f())", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    s = []\n    for i in range(len(l) - 1):\n        p = abs(l[i] - l[i + 1])\n        s.append(p)\n    print(min(s))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    m = float('inf')\n    for i in range(n - 1):\n        m = min(m, l[i + 1] - l[i])\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    diff = []\n    for i in range(n - 1):\n        d = arr[i + 1] - arr[i]\n        diff.append(d)\n    print(min(diff))", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = 0\n    d = []\n    for j in range(1, n):\n        s = abs(a[j] - a[j - 1])\n        d.append(s)\n    print(min(d))", "res = 1e+100\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split(' ')))\n    x.sort()\n    for i in range(1, n):\n        if res > x[i] - x[i - 1]:\n            res = x[i] - x[i - 1]\n    print(res)\n    res = 1e+100", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    diff = []\n    for i in range(n - 1):\n        add = s[i + 1] - s[i]\n        diff.append(add)\n    print(min(diff))", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    lis.sort()\n    mn = lis[1] - lis[0]\n    for i in range(1, n - 1):\n        if mn > lis[i + 1] - lis[i]:\n            mn = lis[i + 1] - lis[i]\n    print(mn)", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    diff = []\n    for i in range(n - 1):\n        add = s[i + 1] - s[i]\n        diff.append(add)\n    print(min(diff))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = a[1] - a[0]\n    for i in range(2, n):\n        m = min(m, a[i] - a[i - 1])\n    print(m)", "for i in range(int(input())):\n    N = int(input())\n    S = list(map(int, input().split()))\n    S.sort()\n    B = []\n    for i in range(N - 1):\n        B.append(S[i + 1] - S[i])\n    print(min(B))", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    l = sorted(map(int, input().split()))\n    m = []\n    for j in range(x - 1):\n        m.append(l[j + 1] - l[j])\n    print(min(m))", "import sys\n\ndef racicnghorses():\n    test = int(input().strip())\n    for t in range(test):\n        n = int(input().strip())\n        arr = [int(x) for x in input().strip().split(' ')]\n        list.sort(arr)\n        mindiff = sys.maxsize\n        num1 = 0\n        num2 = 0\n        for e in range(n):\n            if e + 1 < n:\n                currdiff = abs(arr[e] - arr[e + 1])\n                if currdiff < mindiff:\n                    num1 = arr[e]\n                    num2 = arr[e + 1]\n                    mindiff = currdiff\n        print(f'{mindiff}')\nracicnghorses()", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    l.sort()\n    res = sys.maxsize\n    for i in range(1, n):\n        res = min(res, l[i] - l[i - 1])\n    return res\nfor _ in range(IN()):\n    print(f())", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s = sorted(s)\n    x = []\n    for i in range(n - 1):\n        x.append(s[i + 1] - s[i])\n    print(min(x))", "for _ in range(int(input())):\n    n = int(input())\n    s = sorted(list(map(int, input().split())))\n    c = []\n    for i in range(n - 1):\n        c.append(s[i + 1] - s[i])\n    print(min(c))", "for item in range(int(input())):\n    x = int(input())\n    y = list(map(int, input().split()))[:x]\n    y.sort()\n    z = []\n    for i in range(x - 1):\n        z.append(y[i + 1] - y[i])\n    print(min(z))", "for _ in range(int(input())):\n    n = int(input())\n    s = sorted(list(map(int, input().split())))\n    c = []\n    for i in range(n - 1):\n        c.append(s[i + 1] - s[i])\n    print(min(c))", "for _ in range(int(input())):\n    n = int(input())\n    s = sorted(list(map(int, input().split())))\n    c = []\n    for i in range(n - 1):\n        c.append(s[i + 1] - s[i])\n    print(min(c))", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    d = 9999999999999999\n    l = list(map(int, input().split()))\n    l.sort()\n    for j in range(0, len(l) - 1):\n        if abs(l[j + 1] - l[j]) < d:\n            d = abs(l[j + 1] - l[j])\n    print(d)", "for x in range(0, int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    array = sorted(array)\n    minvalue = array[-1]\n    for x in range(1, n):\n        if array[x] - array[x - 1] < minvalue:\n            minvalue = array[x] - array[x - 1]\n    print(minvalue)", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    k = list(map(int, input().split()))\n    k.sort()\n    s = 1000000000000000\n    for j in range(n - 1):\n        if k[j + 1] - k[j] < s:\n            s = k[j + 1] - k[j]\n    print(s)", "for i in range(int(input())):\n    v = int(input())\n    l = sorted(list(map(int, input().split())))\n    x = []\n    for i in range(v - 1):\n        x.append(l[i + 1] - l[i])\n    print(min(x))", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s = sorted(s)\n    d = []\n    for i in range(n - 1):\n        d.append(s[i + 1] - s[i])\n    print(min(d))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    x = []\n    for i in range(n - 1):\n        x.append(l[i + 1] - l[i])\n    print(min(x))", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    l.sort()\n    res = sys.maxsize\n    for i in range(1, n):\n        res = min(res, l[i] - l[i - 1])\n    return res\nfor _ in range(IN()):\n    print(f())", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    d = []\n    for i in range(n - 1):\n        d.append(s[i + 1] - s[i])\n    print(min(d))", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    l.sort()\n    res = sys.maxsize\n    for i in range(1, n):\n        res = min(res, l[i] - l[i - 1])\n    return res\nfor _ in range(IN()):\n    print(f())", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, l) = (IN(), I())\n    l.sort()\n    res = sys.maxsize\n    for i in range(1, n):\n        res = min(res, l[i] - l[i - 1])\n    return res\nfor _ in range(IN()):\n    print(f())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    if n == 2:\n        print(abs(arr[0] - arr[1]))\n    else:\n        m = abs(arr[0] - arr[1])\n        prev = arr[1]\n        for i in range(2, n):\n            m = min(m, abs(prev - arr[i]))\n            prev = arr[i]\n        print(m)"]