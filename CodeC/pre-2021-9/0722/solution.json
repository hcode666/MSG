["t = int(input())\nfor i in range(t):\n    n = list(map(int, input().split()))\n    f = True\n    n.sort()\n    while n[1] % n[0] != 0 and n[1] // n[0] < 2:\n        n[1] = n[1] % n[0]\n        f = not f\n        n.sort()\n    print('Rich' if f == False else 'Ari')", "t = int(input())\nfor i in range(t):\n    n = list(map(int, input().split()))\n    f = True\n    n.sort()\n    while n[1] % n[0] != 0 and n[1] // n[0] < 2:\n        n[1] = n[1] % n[0]\n        f = not f\n        n.sort()\n    print('Rich' if f == False else 'Ari')", "t = int(input())\nfor i in range(t):\n    n = list(map(int, input().split()))\n    f = True\n    n.sort()\n    while n[1] % n[0] != 0 and n[1] // n[0] < 2:\n        n[1] = n[1] % n[0]\n        f = not f\n        n.sort()\n    print('Rich' if f == False else 'Ari')", "for t in range(int(input())):\n    n = [int(x) for x in input().split()]\n    flag = True\n    n.sort()\n    while n[1] % n[0] != 0 and n[1] // n[0] < 2:\n        n[1] = n[1] % n[0]\n        flag = not flag\n        n.sort()\n    if not flag:\n        print('Rich')\n    else:\n        print('Ari')", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    n1 = max(n, m)\n    m1 = min(n, m)\n    if n1 % m1 == 0:\n        print('Ari')\n    else:\n        c = 1\n        while n1 % m1 != 0 and n1 // m1 <= 1:\n            c += 1\n            n1 -= n1 // m1 * m1\n            temp = n1\n            n1 = m1\n            m1 = temp\n        if c % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    ari_turn = True\n    bigger_pile = n if n >= m else m\n    smaller_pile = m if bigger_pile == n else n\n    while bigger_pile % smaller_pile != 0 and bigger_pile // smaller_pile <= 1:\n        bigger_pile = bigger_pile % smaller_pile\n        ari_turn = not ari_turn\n        (bigger_pile, smaller_pile) = (smaller_pile, bigger_pile)\n    if not ari_turn:\n        print('Rich')\n    else:\n        print('Ari')", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = 1\n    if n % m == 0 or m % n == 0:\n        print('Ari')\n    else:\n        a = max(m, n)\n        b = min(m, n)\n        while a % b != 0 and a // b <= 1:\n            l += 1\n            a -= a // b * b\n            t = b\n            b = a\n            a = t\n        if l % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = 1\n    if n % m == 0 or m % n == 0:\n        print('Ari')\n    else:\n        a = max(m, n)\n        b = min(m, n)\n        while a % b != 0 and a // b <= 1:\n            l += 1\n            a -= a // b * b\n            t = b\n            b = a\n            a = t\n        if l % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = 1\n    if a % b == 0 or b % a == 0:\n        print('Ari')\n    else:\n        p = max(a, b)\n        q = min(a, b)\n        while p % q != 0 and p // q <= 1:\n            c += 1\n            p -= p // q * q\n            t = q\n            q = p\n            p = t\n        if c % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n % m == 0:\n        print('Ari')\n    elif m % n == 0:\n        print('Ari')\n    else:\n        large = max(m, n)\n        small = min(m, n)\n        count = 0\n        while True:\n            remind = large % small\n            quotient = large // small\n            count += 1\n            if quotient > 1:\n                break\n            else:\n                large = small\n                small = remind\n                if small > large:\n                    (small, large) = (large, small)\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "def winner(m, n, x):\n    if m % n == 0 or n % m == 0:\n        return x\n    if m > n:\n        if m // n > 1:\n            return x\n        return winner(m % n, n, 1 - x)\n    else:\n        if n // m > 1:\n            return x\n        return winner(m, n % m, 1 - x)\nt = int(input())\nfor jack in range(t):\n    (n, m) = map(int, input().split())\n    if winner(m, n, 0):\n        print('Rich')\n    else:\n        print('Ari')", "from sys import stdin\nT = int(stdin.readline())\nwhile T:\n    (N, M) = list(map(int, stdin.readline().split()))\n    R = False\n    if N % M == 0 or M % N == 0:\n        print('Ari')\n    else:\n        mx = max(N, M)\n        mn = min(N, M)\n        while True:\n            r = mx % mn\n            R = not R\n            if mx // mn > 1:\n                break\n            else:\n                mx = mn\n                mn = r\n                if mx < mn:\n                    (mx, mn) = (mn, mx)\n        if R:\n            print('Ari')\n        else:\n            print('Rich')\n    T -= 1", "for t in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    if m % n == 0 or n % m == 0:\n        print('Ari')\n    else:\n        small = min(n, m)\n        big = max(n, m)\n        count = 0\n        while True:\n            rem = big % small\n            quo = big // small\n            count += 1\n            if quo > 1:\n                break\n            else:\n                big = small\n                small = rem\n                if big < small:\n                    (big, small) = (small, big)\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "def check(Max, Min):\n    if Max % Min == 0 or Max // Min > 1:\n        return List[0]\n    else:\n        List[0] += 1\n        Max = Max - Min * (Max // Min)\n        return check(max(Max, Min), min(Max, Min))\nfor _ in range(int(input())):\n    (N, M) = [int(x) for x in input().split()]\n    List = [0]\n    Max = max(N, M)\n    Min = min(N, M)\n    count = check(Max, Min)\n    if count % 2 == 0:\n        print('Ari')\n    else:\n        print('Rich')", "k = int(input())\nfor i in range(k):\n    (a, b) = map(int, input().split())\n    x = 0\n    if b > a:\n        (a, b) = (b, a)\n    while a % b != 0:\n        if b > a:\n            (a, b) = (b, a)\n        if a // b > 1:\n            break\n        else:\n            a = a % b\n        x = x + 1\n    if x % 2 == 0:\n        print('Ari')\n    else:\n        print('Rich')", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    (m, n) = (max(m, n), min(m, n))\n    c = 0\n    while m % n != 0 and m // n == 1:\n        c += 1\n        print\n        (m, n) = (n, m % n)\n    if c % 2 == 0:\n        print('Ari')\n    else:\n        print('Rich')", "for _ in range(int(input())):\n    nm = sorted(map(int, input().split()))\n    c = 0\n    while nm[0] != 0:\n        if nm[1] // nm[0] > 1:\n            c += 1\n            break\n        nm[1] = nm[1] % nm[0]\n        nm.sort()\n        c += 1\n    if c % 2 == 0:\n        print('Rich')\n    else:\n        print('Ari')", "def gcd(a, b):\n    if b == 0:\n        return 0\n    return 1 if a // b > 1 else gcd(b, a % b) + 1\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split())\n    if m > n:\n        l = m\n        m = n\n        n = l\n    k = gcd(n, m)\n    if k & 1:\n        print('Ari')\n    else:\n        print('Rich')", "t = int(input())\nwhile t:\n    (n, m) = list(map(int, input().split()))\n    if m % n == 0:\n        print('Ari')\n    elif n % m == 0:\n        print('Ari')\n    else:\n        greater = max(m, n)\n        smaller = min(m, n)\n        count = 0\n        while True:\n            remainder = greater % smaller\n            quotient = greater // smaller\n            count += 1\n            if quotient > 1:\n                break\n            else:\n                greater = smaller\n                smaller = remainder\n                if greater < smaller:\n                    (greater, smaller) = (smaller, greater)\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')\n    t -= 1", "def gcd(x, y):\n    counts = []\n    while y and x:\n        counts.append(int(x / y))\n        (x, y) = (y, x % y)\n    return counts\nt = int(input())\nwhile t:\n    (n, m) = [int(ele) for ele in input().split()]\n    counts = gcd(max(m, n), min(m, n))\n    ans = 'Ari'\n    for i in range(len(counts) - 2, -1, -1):\n        if ans == 'Ari':\n            if counts[i] > 1:\n                ans = 'Ari'\n            else:\n                ans = 'Rich'\n        else:\n            ans = 'Ari'\n    print(ans)\n    t -= 1", "def gcd(x, y):\n    counts = []\n    while y and x:\n        counts.append(int(x / y))\n        (x, y) = (y, x % y)\n    return counts\nt = int(input())\nwhile t:\n    (n, m) = [int(ele) for ele in input().split()]\n    counts = gcd(max(m, n), min(m, n))\n    ans = 'Ari'\n    for i in range(len(counts) - 2, -1, -1):\n        if ans == 'Ari':\n            if counts[i] > 1:\n                ans = 'Ari'\n            else:\n                ans = 'Rich'\n        else:\n            ans = 'Ari'\n    print(ans)\n    t -= 1", "T = int(input())\nwhile T > 0:\n    (n, m) = map(int, input().split())\n    if n % m == 0:\n        print('Ari')\n    elif m % n == 0:\n        print('Ari')\n    else:\n        larger = max(n, m)\n        smaller = min(n, m)\n        count = 0\n        while True:\n            if larger == 0 or smaller == 0:\n                break\n            r = larger % smaller\n            q = larger // smaller\n            count += 1\n            if q > 1:\n                break\n            larger = smaller\n            smaller = r\n            if larger < smaller:\n                (larger, smaller) = (smaller, larger)\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')\n    T -= 1", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (a, b) = map(int, input().split())\n    count = 0\n    if b > a:\n        (a, b) = (b, a)\n    while a % b != 0:\n        if b > a:\n            (a, b) = (b, a)\n        if a // b > 1:\n            break\n        else:\n            a = a % b\n        count = count + 1\n    if count % 2 == 0:\n        print('Ari')\n    else:\n        print('Rich')", "for _ in range(int(input())):\n    (n, m) = map(int, input().strip().split())\n    count = 0\n    if n == m:\n        print('Ari')\n    else:\n        while max(n, m) / min(n, m) < 2:\n            if n > m:\n                p = int(n / m)\n                n = n - p * m\n            else:\n                p = int(m / n)\n                m = m - p * n\n            count += 1\n        if count % 2 == 0:\n            print('Ari')\n        else:\n            print('Rich')", "def show(t):\n    for lo in range(t):\n        (a, b) = map(int, input().strip().split(' '))\n        count = 0\n        if a == b:\n            print('Ari')\n        else:\n            while max(a, b) / min(a, b) < 2:\n                if a > b:\n                    p = int(a / b)\n                    a = a - p * b\n                else:\n                    p = int(b / a)\n                    b = b - p * a\n                count += 1\n            if count % 2 == 0:\n                print('Ari')\n            else:\n                print('Rich')\nshow(int(input()))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    c = 0\n    (n, m) = map(int, input().split())\n    while n > 0 and m > 0:\n        c += 1\n        if n > m:\n            if n < 2 * m:\n                r = n % m\n                if r == 0:\n                    n = 0\n                else:\n                    n = r\n            else:\n                if c % 2 == 0:\n                    print('Rich')\n                else:\n                    print('Ari')\n                n = 0\n        elif n == m:\n            if c % 2 == 0:\n                print('Rich')\n            else:\n                print('Ari')\n            n = 0\n        elif m < 2 * n:\n            r = m % n\n            if r == 0:\n                n = 0\n            else:\n                m = r\n        else:\n            if c % 2 == 0:\n                print('Rich')\n            else:\n                print('Ari')\n            n = 0", "t = int(input())\nwhile t:\n    (n, m) = list(map(int, input().split()))\n    if m % n == 0:\n        print('Ari')\n    elif n % m == 0:\n        print('Ari')\n    else:\n        smaller_pile = min(n, m)\n        larger_pile = max(n, m)\n        count = 0\n        while True:\n            remainder = larger_pile % smaller_pile\n            quotient = larger_pile // smaller_pile\n            count += 1\n            if quotient > 1:\n                break\n            else:\n                larger_pile = smaller_pile\n                smaller_pile = remainder\n                if larger_pile < smaller_pile:\n                    (larger_pile, smaller_pile) = (smaller_pile, larger_pile)\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')\n    t -= 1", "def solve(n, m):\n    if m == 1 or n >= 2 * m or n % m == 0:\n        return 'Ari'\n    n -= n // m * m\n    (n, m) = (m, n)\n    other = solve(n, m)\n    if other == 'Ari':\n        return 'Rich'\n    return 'Ari'\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    (n, m) = (max(n, m), min(n, m))\n    print(solve(n, m))", "t = int(input())\nfor i in range(t):\n    lol = input().split()\n    n = int(lol[0])\n    m = int(lol[1])\n    x = 0\n    y = 0\n    while n > 0 and m > 0 and (y == 0):\n        if n > m:\n            if int(n / m) > 1:\n                y = 1\n                x += 1\n            else:\n                n = n % m\n                x += 1\n        elif int(m / n) > 1:\n            y = 1\n            x += 1\n        else:\n            m = m % n\n            x += 1\n    if x % 2 != 0:\n        print('Ari')\n    else:\n        print('Rich')", "t = int(input())\nfor i in range(t):\n    lol = input().split()\n    n = int(lol[0])\n    m = int(lol[1])\n    x = 0\n    y = 0\n    while n > 0 and m > 0 and (y == 0):\n        if n > m:\n            if int(n / m) > 1:\n                y = 1\n                x += 1\n            else:\n                n = n % m\n                x += 1\n        elif int(m / n) > 1:\n            y = 1\n            x += 1\n        else:\n            m = m % n\n            x += 1\n    if x % 2 != 0:\n        print('Ari')\n    else:\n        print('Rich')", "t = int(input())\nfor i in range(t):\n    (n, m) = input().split()\n    (n, m) = (int(n), int(m))\n    if n % m == 0 or m % n == 0:\n        print('Ari')\n    else:\n        large = max(n, m)\n        small = min(n, m)\n        count = 0\n        while True:\n            reminder = large % small\n            quotient = large // small\n            count += 1\n            if quotient > 1:\n                break\n            else:\n                large = small\n                small = reminder\n                if large < small:\n                    (large, small) = (small, large)\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m % n == 0 or n % m == 0:\n        print('Ari')\n    else:\n        if n < m:\n            (n, m) = (m, n)\n        c = 0\n        while 1:\n            r = n % m\n            q = n // m\n            c += 1\n            if q > 1:\n                break\n            else:\n                n = m\n                m = r\n                if n < m:\n                    (n, m) = (m, n)\n        if c % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "def MEX(l):\n    curr = 0\n    l.sort()\n    for xorValue in l:\n        if xorValue > curr:\n            break\n        if xorValue == curr:\n            curr += 1\n    return curr\n\ndef grundy(N, M, cache):\n    result = []\n    if N < M:\n        (N, M) = (M, N)\n    if (N, M) in cache:\n        return cache[N, M]\n    if M == 0:\n        result.append(N)\n    else:\n        val = grundy(N % M, M, cache)\n        if N >= 2 * M and val != 0:\n            val = 0\n        result = [val]\n    cache[N, M] = MEX(result)\n    return cache[N, M]\ncache = {}\nT = int(input())\nfor _ in range(T):\n    (N, M) = list(map(int, input().split()))\n    print('Rich' if grundy(N, M, cache) == 0 else 'Ari')", "t = int(input())\nfor t1 in range(t):\n    c = 0\n    (x, y) = map(int, input().split())\n    while 5:\n        if x % y == 0 or y % x == 0 or x <= 0 or (y <= 0):\n            break\n        if x > y:\n            k = x // y\n            if k >= 2:\n                break\n            x = x - k * y\n            c = 1 - c\n        else:\n            k = y // x\n            if k >= 2:\n                break\n            y = y - k * x\n            c = 1 - c\n    if c == 0:\n        print('Ari')\n    else:\n        print('Rich')", "import sys\nsys.setrecursionlimit(10 ** 5 + 1)\ninf = int(10 ** 20)\nmax_val = inf\nmin_val = -inf\nRW = lambda : sys.stdin.readline().strip()\nRI = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\nnb_test = RI()\nfor _ in range(nb_test):\n    (n, m) = RMI()\n    if n % m == 0 or m % n == 0:\n        print('Ari')\n    else:\n        (min_pile, max_pile) = (min(n, m), max(n, m))\n        moves = 0\n        while True:\n            (div, extra) = divmod(max_pile, min_pile)\n            moves += 1\n            if div > 1:\n                break\n            else:\n                (max_pile, min_pile) = (min_pile, extra)\n                if max_pile < min_pile:\n                    (max_pile, min_pile) = (min_pile, max_pile)\n        print(['Ari', 'Rich'][moves % 2 == 0])", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    larger_pile = max(m, n)\n    smaller_pile = min(m, n)\n    count = 0\n    while larger_pile % smaller_pile != 0 and larger_pile // smaller_pile == 1:\n        (smaller_pile, larger_pile) = (larger_pile % smaller_pile, smaller_pile)\n        count += 1\n    if count % 2 == 0:\n        print('Ari')\n    else:\n        print('Rich')", "def gcd(a, b):\n    c = 0\n    if b > a:\n        (a, b) = (b, a)\n    while b:\n        t = a // b\n        if t > 1:\n            return c + 1\n        (a, b) = (b, a % b)\n        c += 1\n    return c\nfor _ in range(int(input())):\n    (a, b) = list(map(int, input().rstrip().split()))\n    r = gcd(a, b)\n    if r % 2 != 0:\n        print('Ari')\n    else:\n        print('Rich')", "def gcd(a, b):\n    c = 0\n    if b > a:\n        (a, b) = (b, a)\n    while b:\n        t = a // b\n        if t > 1:\n            return c + 1\n        (a, b) = (b, a % b)\n        c += 1\n    return c\nfor _ in range(int(input())):\n    (a, b) = list(map(int, input().rstrip().split()))\n    r = gcd(a, b)\n    if r % 2 != 0:\n        print('Ari')\n    else:\n        print('Rich')", "t = int(input())\nfor item in range(t):\n    (n, m) = map(int, input().split())\n    (n, m) = (max(n, m), min(n, m))\n    count = 0\n    if n % m == 0:\n        print('Ari')\n    else:\n        while True:\n            rem = n % m\n            que = n // m\n            count += 1\n            if que > 1:\n                break\n            else:\n                (n, m) = (max(m, rem), min(m, rem))\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    (n, m) = (max(n, m), min(n, m))\n    c = 0\n    if n % m == 0:\n        print('Ari')\n    else:\n        while True:\n            s = n // m\n            c = c + 1\n            if s > 1:\n                break\n            else:\n                n = n % m\n                (n, m) = (max(n, m), min(n, m))\n        if c % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "for _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    cnt = 0\n    maxx = max(a, b)\n    minn = min(a, b)\n    while maxx == maxx % minn + minn:\n        if maxx % minn == 0:\n            break\n        t = minn\n        minn = maxx % minn\n        maxx = t\n        cnt += 1\n    if cnt % 2 == 0:\n        print('Ari')\n    else:\n        print('Rich')", "def play(a, b, f):\n    (a, b) = (min(a, b), max(a, b))\n    if b % a == 0:\n        return f\n    elif b // a > 1:\n        return f\n    else:\n        return play(b % a, a, not f)\nt = int(input())\nwhile t > 0:\n    (a, b) = input().split()\n    (a, b) = (int(a), int(b))\n    k = play(a, b, True)\n    if k:\n        print('Ari')\n    else:\n        print('Rich')\n    t -= 1", "t = int(input())\n\ndef iteration(x):\n    a = x[0]\n    b = x[1]\n    if a < b:\n        quotient = b // a\n        b = b % a\n        c = []\n        c.append(a)\n        c.append(b)\n    else:\n        quotient = a // b\n        a = a % b\n        c = []\n        c.append(a)\n        c.append(b)\n    return (c, quotient)\nfor i in range(t):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    c = []\n    c.append(a)\n    c.append(b)\n    counter = 0\n    while c[0] != 0 and c[1] != 0:\n        d = iteration(c)\n        c = d[0]\n        counter = counter + 1\n        if d[1] > 1:\n            break\n    if counter % 2 == 0:\n        print('Rich')\n    else:\n        print('Ari')", "t = int(input())\nwhile t > 0:\n    (x, y) = map(int, input().split())\n    count = 0\n    while x > 0 and y > 0:\n        count += 1\n        if x > y:\n            if x < 2 * y:\n                temp = x % y\n                if temp == 0:\n                    x = 0\n                else:\n                    x = temp\n            else:\n                if count % 2 == 0:\n                    print('Rich')\n                else:\n                    print('Ari')\n                x = 0\n        elif x == y:\n            if count % 2 == 0:\n                print('Rich')\n            else:\n                print('Ari')\n            x = 0\n        elif y < 2 * x:\n            temp = y % x\n            if temp == 0:\n                x = 0\n            else:\n                y = temp\n        else:\n            if count % 2 == 0:\n                print('Rich')\n            else:\n                print('Ari')\n            x = 0\n    t -= 1", "t = int(input())\nwhile t:\n    (n, m) = list(map(int, input().split()))\n    if m % n == 0:\n        print('Ari')\n    elif n % m == 0:\n        print('Ari')\n    else:\n        smaller_pile = min(n, m)\n        larger_pile = max(n, m)\n        count = 0\n        while True:\n            remainder = larger_pile % smaller_pile\n            quotient = larger_pile // smaller_pile\n            count += 1\n            if quotient > 1:\n                break\n            else:\n                larger_pile = smaller_pile\n                smaller_pile = remainder\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')\n    t -= 1", "def Game(P):\n    if max(P) % min(P) == 0 or max(P) // min(P) > 1:\n        return 0\n    else:\n        P = [max(P) % min(P), min(P)]\n        return 1 + Game(P)\nT = int(input())\nfor _ in range(T):\n    P = [int(i) for i in input().split(' ')]\n    result = Game(P)\n    if result % 2 != 0:\n        print('Rich')\n    else:\n        print('Ari')", "t = int(input())\nwhile t:\n    (n, m) = list(map(int, input().split()))\n    if m % n == 0:\n        print('Ari')\n    elif n % m == 0:\n        print('Ari')\n    else:\n        small = min(n, m)\n        large = max(n, m)\n        count = 0\n        while True:\n            rem = large % small\n            quo = large // small\n            count += 1\n            if quo > 1:\n                break\n            else:\n                large = small\n                small = rem\n                if large < small:\n                    (large, small) = (small, large)\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = 0\n    while True:\n        if n > m:\n            q = n // m\n            n -= m * q\n            d += 1\n            if n == 0 or q > 1:\n                break\n        elif m > n:\n            q = m // n\n            m -= n * q\n            d += 1\n            if m == 0 or q > 1:\n                break\n        else:\n            d += 1\n            break\n    if d % 2 == 0:\n        print('Rich')\n    else:\n        print('Ari')", "t = int(input())\nwhile t:\n    (n, m) = list(map(int, input().split()))\n    if m % n == 0:\n        print('Ari')\n    elif n % m == 0:\n        print('Ari')\n    else:\n        smaller_pile = min(n, m)\n        larger_pile = max(n, m)\n        count = 0\n        while True:\n            remainder = larger_pile % smaller_pile\n            quotient = larger_pile // smaller_pile\n            count += 1\n            if quotient > 1:\n                break\n            else:\n                larger_pile = smaller_pile\n                smaller_pile = remainder\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = 0\n    a = max(n, m)\n    b = min(n, m)\n    (n, m) = (a, b)\n    while n != 0 or m != 0:\n        if n // m > 1 or m // n > 1 or n % m == 0 or (m % n == 0):\n            break\n        if n > m:\n            n = n % m\n        else:\n            m = m % n\n            (n, m) = (m, n)\n        c += 1\n    if c % 2 == 0:\n        print('Ari')\n    else:\n        print('Rich')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    count = 0\n    if n % m == 0 or m % n == 0:\n        print('Ari')\n    else:\n        while True:\n            (n, m) = (min(n, m), max(n, m))\n            q = m // n\n            r = m % n\n            count += 1\n            if q > 1:\n                break\n            else:\n                m = n\n                n = r\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "def check(a, b, c):\n    if a % b == 0 or a // b > 1:\n        return c\n    else:\n        c += 1\n        return check(b, a % b, c)\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = 0\n    a = check(max(n, m), min(n, m), c)\n    if a % 2 != 0:\n        print('Rich')\n    else:\n        print('Ari')", "def main():\n    for t in range(int(input())):\n        (n, m) = map(int, input().split())\n        if n % m == 0 or m % n == 0:\n            print('Ari')\n        else:\n            count = 0\n            while True:\n                (n, m) = (min(n, m), max(n, m))\n                quoteint = m // n\n                remainder = m % n\n                count += 1\n                if quoteint > 1:\n                    break\n                else:\n                    m = n\n                    n = remainder\n            if count % 2 == 0:\n                print('Rich')\n            else:\n                print('Ari')\nmain()", "for i in range(0, int(input())):\n    (n, m) = map(int, input().split())\n    a = min(n, m)\n    b = max(n, m)\n    count = 0\n    flag = 0\n    while a != 0:\n        if b // a > 1:\n            if count % 2 == 0:\n                print('Ari')\n            else:\n                print('Rich')\n            flag = 1\n            break\n        s = b // a\n        d = b - s * a\n        b = max(d, a)\n        a = min(d, a)\n        count = count + 1\n    if flag == 0:\n        if count % 2 != 0:\n            print('Ari')\n        else:\n            print('Rich')", "t = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    count = 0\n    if max(n, m) % min(n, m) == 0:\n        print('Ari')\n    else:\n        while n > 0 and m > 0:\n            if n % m == 0 or m % n == 0:\n                count += 1\n                break\n            if n > m:\n                if n // m == 1:\n                    n -= m\n                    count += 1\n                else:\n                    count += 1\n                    break\n            elif m // n == 1:\n                m -= n\n                count += 1\n            else:\n                count += 1\n                break\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (n, m) = (max(n, m), min(n, m))\n    if n % m == 0:\n        print('Ari')\n    else:\n        count = 0\n        while True:\n            q = n // m\n            count += 1\n            if q > 1:\n                break\n            else:\n                n = n % m\n                (n, m) = (max(n, m), min(n, m))\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    if m > n:\n        (n, m) = (m, n)\n    if n == 1 or m == 1 or n % m == 0:\n        ans = 'Ari'\n    else:\n        cnt = 0\n        while True:\n            r = n % m\n            q = n // m\n            cnt += 1\n            if q > 1:\n                break\n            else:\n                n = m\n                m = r\n                if m > n:\n                    (n, m) = (m, n)\n        if cnt % 2 == 0:\n            ans = 'Rich'\n        else:\n            ans = 'Ari'\n    print(ans)", "try:\n    for i in range(int(input())):\n        (n, m) = map(int, input().split())\n        c = 0\n        b = max(n, m)\n        s = min(n, m)\n        while b != 0 and s != 0:\n            q = b // s\n            r = b % s\n            c += 1\n            if q > 1:\n                break\n            else:\n                s = r\n                b = b - s\n                if b < s:\n                    (b, s) = (s, b)\n        if c % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')\nexcept Exception as e:\n    pass", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    if n % m == 0 or m % n == 0:\n        print('Ari')\n    else:\n        count = 0\n        smaller = min(m, n)\n        larger = max(m, n)\n        while True:\n            remainder = larger % smaller\n            count += 1\n            if larger // smaller > 1:\n                break\n            else:\n                larger = smaller\n                smaller = remainder\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    (a, r) = (0, 0)\n    i = 0\n    while n > 0 and m > 0:\n        i += 1\n        if n > m and n < 2 * m:\n            n = n % m\n            continue\n        elif m > n and m < 2 * n:\n            m = m % n\n            continue\n        else:\n            break\n    if i % 2 == 0:\n        print('Rich')\n    else:\n        print('Ari')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    (a, r) = (0, 0)\n    i = 0\n    while n != 0 and m != 0:\n        i += 1\n        if n > m and n < 2 * m:\n            n = n % m\n            continue\n        elif m > n and m < 2 * n:\n            m = m % n\n            continue\n        else:\n            break\n    if i % 2 == 0:\n        print('Rich')\n    else:\n        print('Ari')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if n % m == 0:\n        print('Ari')\n    elif m % n == 0:\n        print('Ari')\n    else:\n        c = 0\n        bn = max(n, m)\n        sn = min(n, m)\n        while True:\n            rem = bn % sn\n            qu = bn // sn\n            c = c + 1\n            if qu > 1:\n                break\n            else:\n                sn = rem\n                bn = bn - sn\n                if bn < sn:\n                    (bn, sn) = (sn, bn)\n        if c % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "t = int(input(''))\nfor m in range(t):\n    l = []\n    a = input('').split(' ')\n    p = int(a[0])\n    q = int(a[1])\n    if p >= q:\n        divisor = q\n        dividend = p\n    else:\n        divisor = p\n        dividend = q\n    win = 1\n    remainder = dividend % divisor\n    quotient = int(dividend / divisor)\n    l.append(quotient)\n    while remainder != 0:\n        if quotient != 1:\n            break\n        else:\n            win = win * -1\n        dividend = divisor\n        divisor = remainder\n        remainder = dividend % divisor\n        quotient = int(dividend / divisor)\n        l.append(quotient)\n    if win == 1:\n        print('Ari')\n    else:\n        print('Rich')", "for t in range(int(input())):\n    (b, s) = map(int, input().split())\n    if b < s:\n        (b, s) = (s, b)\n    c = 0\n    while True:\n        c = c + 1\n        r = b % s\n        if r == 0:\n            break\n        if int(b / s) > 1:\n            break\n        b = b - s\n        if b < s:\n            (b, s) = (s, b)\n    if c % 2 == 0:\n        print('Rich')\n    else:\n        print('Ari')", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    if m % n == 0:\n        print('Ari')\n    elif n % m == 0:\n        print('Ari')\n    else:\n        s_p = min(m, n)\n        l_p = max(m, n)\n        count = 0\n        while True:\n            q = l_p // s_p\n            r = l_p % s_p\n            count = count + 1\n            if q > 1:\n                break\n            else:\n                l_p = s_p\n                s_p = r\n                if l_p < s_p:\n                    (l_p, s_p) = (s_p, l_p)\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "def check(a, b):\n    count = 0\n    while a > 0 and b > 0:\n        count += 1\n        if a > b:\n            if a < 2 * b:\n                r = a % b\n                if r == 0:\n                    a = 0\n                else:\n                    a = r\n            else:\n                if count % 2 == 0:\n                    print('Rich')\n                else:\n                    print('Ari')\n                a = 0\n        elif a == b:\n            if count % 2 == 0:\n                print('Rich')\n            else:\n                print('Ari')\n            a = 0\n        elif b < 2 * a:\n            r = b % a\n            if r == 0:\n                b = 0\n            else:\n                b = r\n        else:\n            if count % 2 == 0:\n                print('Rich')\n            else:\n                print('Ari')\n            b = 0\nn = int(input())\nfor i in range(n):\n    l = list(map(int, input().strip().split()))\n    check(l[0], l[1])", "t = int(input())\nwhile t:\n    (x, y) = map(int, input().split())\n    if x == y:\n        print('Ari')\n    elif x == 1 or y == 1:\n        print('Ari')\n    else:\n        p = 0\n        l = []\n        while 1:\n            if x > y:\n                l.append(x // y)\n                x = x % y\n                p += 1\n            if x == 1:\n                l.append(y)\n                p += 1\n                break\n            if x == 0:\n                break\n            if y > x:\n                l.append(y // x)\n                y = y % x\n                p += 1\n            if y == 1:\n                l.append(x)\n                p += 1\n                break\n            if y == 0:\n                break\n        c = 1\n        for i in range(0, len(l) - 1):\n            if l[i] == 1:\n                c += 1\n            else:\n                break\n        if c % 2 == 1:\n            print('Ari')\n        else:\n            print('Rich')\n    t -= 1", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    inControl = max(n, m) >= 2 * min(n, m)\n    count = 0\n    while not inControl and min(n, m) != 0 and (max(n, m) != min(n, m)):\n        count = count + 1\n        if n > m:\n            n = n - m\n        elif m > n:\n            m = m - n\n        else:\n            break\n        inControl = max(n, m) >= 2 * min(n, m)\n    if count & 1 == 0:\n        print('Ari')\n    else:\n        print('Rich')\n    t -= 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = 1\n    if a % b == 0 or b % a == 0:\n        print('Ari')\n    else:\n        p = max(a, b)\n        q = min(a, b)\n        while p % q != 0 and p // q <= 1:\n            c += 1\n            p -= p // q * q\n            t = q\n            q = p\n            p = t\n        if c % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "def dmultiple(a, b):\n    small = a\n    big = b\n    big = big % small\n    return (big, small)\ntcas = int(input())\nfor i in range(tcas):\n    k = list(map(int, input().split()))\n    n = k[0]\n    m = k[1]\n    count = 1\n    check = 0\n    while n and m and (not check):\n        if n >= m:\n            if n == m or n / m >= 2:\n                count = count\n                check = 1\n            else:\n                count = count + 1\n                (m, n) = dmultiple(m, n)\n        elif m / n >= 2:\n            count = count\n            check = 1\n        else:\n            count = count + 1\n            (n, m) = dmultiple(n, m)\n    if count % 2 == 1:\n        print('Ari')\n    else:\n        print('Rich')", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    k = 0\n    while True:\n        (m, n) = (max(m, n), min(m, n))\n        if m % n == 0 or m // n > 1:\n            if k == 0:\n                print('Ari')\n                break\n            else:\n                print('Rich')\n                break\n        else:\n            m = m - m // n * n\n            k = 1 - k", "for _ in range(int(input())):\n    (n, m) = [int(z) for z in input().split()]\n    if n % m == 0:\n        print('Ari')\n    elif m % n == 0:\n        print('Ari')\n    else:\n        s = min(n, m)\n        l = max(n, m)\n        cnt = 0\n        while True:\n            r = l % s\n            q = l // s\n            cnt += 1\n            if q > 1:\n                break\n            else:\n                l = s\n                s = r\n                if l < s:\n                    (l, s) = (s, l)\n        if cnt % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "t = int(input())\nwhile t:\n    (n, m) = list(map(int, input().split()))\n    if m % n == 0:\n        print('Ari')\n    elif n % m == 0:\n        print('Ari')\n    else:\n        smaller_pile = min(n, m)\n        larger_pile = max(n, m)\n        count = 0\n        while True:\n            remainder = larger_pile % smaller_pile\n            quotient = larger_pile // smaller_pile\n            count += 1\n            if quotient > 1:\n                break\n            else:\n                larger_pile = smaller_pile\n                smaller_pile = remainder\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')\n    t -= 1", "def main():\n    t = int(input())\n    while t:\n        t -= 1\n        (n, m) = input().split()\n        m = int(m)\n        n = int(n)\n        i = 0\n        while n > 0 and m > 0:\n            if n / m >= 2 or m / n >= 2:\n                i += 1\n                break\n            elif n > m:\n                n = n % m\n            else:\n                m = m % n\n            i += 1\n        if i % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')\nmain()", "t = int(input())\nfor j in range(t):\n    (n, m) = map(int, input().split())\n    (n, m) = (max(n, m), min(n, m))\n    count = 0\n    while n > 0 and m > 0:\n        if n // m > 1:\n            count += 1\n            break\n        else:\n            n = n % m\n            count += 1\n            (n, m) = (max(n, m), min(n, m))\n    if count % 2 == 0:\n        print('Rich')\n    else:\n        print('Ari')", "def fun(n, m):\n    cnt = 0\n    while n > 0 and m > 0:\n        if m >= 2 * n or n >= 2 * m:\n            cnt += 1\n            break\n        if m > n:\n            m = m % n\n            cnt += 1\n        else:\n            n = n % m\n            cnt += 1\n    if cnt % 2 == 1:\n        return 'Ari'\n    else:\n        return 'Rich'\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    print(fun(n, m))", "def jeet(a, b):\n    if a < b:\n        (a, b) = (b, a)\n    if a % b == 0:\n        return 1\n    elif a - 2 * b > 0:\n        return 1\n    else:\n        return 1 - jeet(a % b, b)\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print('Ari' if jeet(a, b) else 'Rich')", "def ans(a, b):\n    if a == 0:\n        return 'Rich'\n    elif a == 1 or b >= 2 * a:\n        return 'Ari'\n    else:\n        other = ans(min(a, b - a), max(a, b - a))\n        if other == 'Ari':\n            return 'Rich'\n        else:\n            return 'Ari'\nT = int(input())\nfor i in range(T):\n    (a, b) = map(int, input().split())\n    (a, b) = (min(a, b), max(a, b))\n    print(ans(a, b))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m % n == 0 or n % m == 0:\n        print('Ari')\n    else:\n        if n < m:\n            (n, m) = (m, n)\n        count = 0\n        while True:\n            remainder = n % m\n            quotient = n // m\n            count += 1\n            if quotient > 1:\n                break\n            else:\n                (n, m) = (m, remainder)\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m % n == 0 or n % m == 0:\n        print('Ari')\n    else:\n        if n < m:\n            (n, m) = (m, n)\n        count = 0\n        while True:\n            remainder = n % m\n            quotient = n // m\n            count += 1\n            if quotient > 1:\n                break\n            else:\n                n = m\n                m = remainder\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m % n == 0 or n % m == 0:\n        print('Ari')\n    else:\n        if n < m:\n            (n, m) = (m, n)\n        count = 0\n        while True:\n            remainder = n % m\n            quotient = n // m\n            count += 1\n            if quotient > 1:\n                break\n            else:\n                n = m\n                m = remainder\n                if n < m:\n                    (n, m) = (m, n)\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')", "t = int(input())\nwhile t:\n    (n, m) = list(map(int, input().split()))\n    if m % n == 0:\n        print('Ari')\n    elif n % m == 0:\n        print('Ari')\n    else:\n        smaller_pile = min(n, m)\n        larger_pile = max(n, m)\n        count = 0\n        while True:\n            remainder = larger_pile % smaller_pile\n            quotient = larger_pile // smaller_pile\n            count += 1\n            if quotient > 1:\n                break\n            else:\n                larger_pile = smaller_pile\n                smaller_pile = remainder\n                if larger_pile < smaller_pile:\n                    (larger_pile, smaller_pile) = (smaller_pile, larger_pile)\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')\n    t -= 1", "def check(maximum, minimum):\n    if maximum % minimum == 0 or maximum // minimum > 1:\n        return dp[0]\n    else:\n        dp[0] += 1\n        maximum = maximum - minimum * (maximum // minimum)\n        return check(max(maximum, minimum), min(maximum, minimum))\nt = int(input())\nfor _ in range(t):\n    dp = [0]\n    (a, b) = [int(i) for i in input().split()]\n    maximum = max(a, b)\n    minimum = min(a, b)\n    count = check(maximum, minimum)\n    if count % 2 != 0:\n        print('Rich')\n    else:\n        print('Ari')", "import collections\nimport time\nimport os\nimport sys\nimport bisect\nimport heapq\nmemo = {}\n\ndef solve(n, m):\n    if n < m:\n        return solve(m, n)\n    if m == 0 or n == 0:\n        return 0\n    if n % m == 0:\n        return 1\n    key = (n, m)\n    if key in memo:\n        return memo[key]\n    mex = set()\n    k = m\n    while k <= n:\n        mex.add(solve(n - k, m))\n        k += m\n    res = 0\n    while True:\n        if res not in mex:\n            memo[key] = res\n            return res\n        res += 1\n\ndef f1(n, m):\n    if n < m:\n        (n, m) = (m, n)\n    games = []\n    while n and m:\n        if n % m == 0:\n            games.append(1)\n            break\n        else:\n            games.append(n // m)\n        (n, m) = (m, n % m)\n    win = False\n    for v in reversed(games):\n        if not win:\n            win = True\n        else:\n            win = v > 1\n    return win\nT = int(input())\nfor ti in range(T):\n    (n, m) = map(int, input().split())\n    a = f1(n, m)\n    if a:\n        print('Ari')\n    else:\n        print('Rich')", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef mapinp():\n    return map(int, input().split())\n\ndef linp():\n    return list(map(int, input().split()))\nfor _ in range(int(input())):\n    (n, m) = mapinp()\n    a = max(n, m)\n    b = min(n, m)\n    while True:\n        temp = a\n        z = 0\n        if a % b == 0:\n            print('Ari')\n            break\n        for i in range(b, a + 1, b):\n            temp = a - i\n            if temp < 0:\n                break\n            if temp % b != 0:\n                a = temp\n                z = 1\n                break\n        if z == 0:\n            print('Rich')\n            break\n        else:\n            if b % a == 0:\n                print('Rich')\n                break\n            z = 0\n            temp = b\n            for i in range(a, b + 1, a):\n                temp = b - i\n                if temp < 0:\n                    break\n                if temp % a != 0:\n                    b = temp\n                    z = 1\n                    break\n            if z == 0:\n                print('Ari')\n                break", "t = int(input())\nwhile t > 0:\n    t -= 1\n    count = 0\n    (n, m) = input().split(' ')\n    (n, m) = (int(n), int(m))\n    while n > 0 and m > 0:\n        count += 1\n        if n > m:\n            if n < 2 * m:\n                r = n % m\n                if r == 0:\n                    n = 0\n                else:\n                    n = r\n            else:\n                if count % 2 == 0:\n                    print('Rich')\n                else:\n                    print('Ari')\n                n = 0\n        elif n == m:\n            if count % 2 == 0:\n                print('Rich')\n            else:\n                print('Ari')\n            n = 0\n        elif m < 2 * n:\n            r = m % n\n            if r == 0:\n                n = 0\n            else:\n                m = r\n        else:\n            if count % 2 == 0:\n                print('Rich')\n            else:\n                print('Ari')\n            n = 0", "t = int(input())\nfor i in range(t):\n    q = input().split()\n    n = int(q[0])\n    m = int(q[1])\n    turn = 1\n    l = []\n    f = 0\n    if n % m == 0 or m % n == 0:\n        print('Ari')\n    else:\n        while n != 1 or m != 1:\n            l = []\n            turn = turn * -1\n            if n % m == 0 or m % n == 0:\n                if turn == -1:\n                    print('Ari')\n                else:\n                    print('Rich')\n                break\n            if n > m:\n                b = n\n                s = m\n            else:\n                b = m\n                s = n\n            for j in range(1, b // s + 1):\n                l.append(j * s)\n                if len(l) > 1:\n                    if turn == -1:\n                        print('Ari')\n                    else:\n                        print('Rich')\n                    f = 1\n                    break\n            if f == 1:\n                break\n            if len(l) == 1:\n                if n > m:\n                    n = n - l[-1]\n                else:\n                    m = m - l[-1]", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().strip().split())\n    c = 0\n    l = []\n    while a != 0 and b != 0:\n        t1 = min(a, b)\n        t2 = max(a, b)\n        te = t2 / t1\n        if te == int(te):\n            l.append(1)\n        else:\n            te = int(te)\n            l.append(te)\n        if t1 == a:\n            b -= t1 * te\n        else:\n            a -= t1 * te\n        c += 1\n    le_l = len(l)\n    for i in range(le_l - 1, -1, -1):\n        if l[i] > 1:\n            if i % 2 == 0:\n                if c % 2 == 0:\n                    c += 1\n            elif c % 2 == 1:\n                c += 1\n    if c % 2 == 1:\n        print('Ari')\n    else:\n        print('Rich')", "import sys\n\ndef fun(a, b):\n    if a % b == 0 or a // b > 1:\n        return count[0]\n    else:\n        count[0] += 1\n        a -= b * (a // b)\n        return fun(max(a, b), min(a, b))\nfor _ in range(int(sys.stdin.readline())):\n    count = [0]\n    (c, d) = [int(i) for i in sys.stdin.readline().split()]\n    (a, b) = (max(c, d), min(c, d))\n    count = fun(a, b)\n    if count % 2 != 0:\n        print('Rich')\n    else:\n        print('Ari')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    count = 0\n    (n, m) = map(int, input().split())\n    while max(n, m) / 2 < min(n, m) and max(n, m) % min(n, m) != 0:\n        count += 1\n        if n >= m:\n            n = n - m\n        else:\n            m = m - n\n    if count % 2 == 0:\n        print('Ari')\n    else:\n        print('Rich')", "t = int(input())\nfor i in range(t):\n    lol = input().split()\n    n = int(lol[0])\n    m = int(lol[1])\n    x = 0\n    y = 0\n    while n > 0 and m > 0 and (y == 0):\n        if n > m:\n            if int(n / m) > 1:\n                y = 1\n                x += 1\n            else:\n                n = n % m\n                x += 1\n        elif int(m / n) > 1:\n            y = 1\n            x += 1\n        else:\n            m = m % n\n            x += 1\n    if x % 2 != 0:\n        print('Ari')\n    else:\n        print('Rich')", "t = int(input())\nfor t_i in range(t):\n    (n, m) = [int(x) for x in input().split(' ')]\n    if m > n:\n        (m, n) = (n, m)\n    aWinner = True\n    while True:\n        if n % m == 0 or n / m >= 2:\n            break\n        else:\n            n = n % m\n            if m % n == 0 or m / n >= 2:\n                aWinner = not aWinner\n                break\n            m = m % n\n    if aWinner:\n        print('Ari')\n    else:\n        print('Rich')", "T = int(input())\n\ndef printAns(j):\n    if j % 2 == 0:\n        print('Rich')\n    else:\n        print('Ari')\nfor i in range(T):\n    (n, m) = map(int, input().split(' '))\n    a = max(n, m)\n    b = min(n, m)\n    j = 0\n    while True:\n        j += 1\n        mx = max(a, b)\n        b = min(a, b)\n        a = mx\n        if a % b == 0:\n            printAns(j)\n            break\n        elif int(a / b) >= 2:\n            printAns(j)\n            break\n        else:\n            a = a % b", "import sys\nsys.setrecursionlimit(1001)\nt = int(input())\nfor i in range(t):\n    (m, n) = [int(x) for x in input().split()]\n    x = 0\n    while m != 0 and n != 0:\n        x = x + 1\n        if m > n:\n            if int(m / n) == 1:\n                m = m - n\n            elif m % n == 0:\n                m = 0\n            else:\n                break\n        elif n >= m:\n            if int(n / m) == 1:\n                n = n - m\n            elif n % m == 0:\n                n = 0\n            else:\n                break\n    if x % 2 != 0:\n        print('Ari')\n    else:\n        print('Rich')", "for _ in range(int(input())):\n    c = 0\n    (a, b) = map(int, input().strip().split())\n    (a, b) = (max(a, b), min(a, b))\n    if a == 1 or b == 1 or a == b or (a % b == 0):\n        print('Ari')\n    else:\n        while a != 0 and b != 0:\n            if a % b == 0 or a // b > 1:\n                a = 0\n                c = c + 1\n            else:\n                a = a % b\n                c = c + 1\n            (a, b) = (max(a, b), min(a, b))\n        if c % 2 == 1:\n            print('Ari')\n        else:\n            print('Rich')", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    mx = n if n >= m else m\n    mn = m if m <= n else n\n    x = 1\n    count = 0\n    if mx // mn == 1 and mx % mn != 0:\n        while n > 0 and m > 0 and (x == 1):\n            count = count + 1\n            if n > m:\n                x = n // m\n                n = n - m * x\n            else:\n                x = m // n\n                m = m - x * n\n        if count % 2 == 0:\n            print('Rich')\n        else:\n            print('Ari')\n    else:\n        print('Ari')", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (a, b) = (max(a, b), min(a, b))\n    flag = 'Ari'\n    c = 0\n    flag1 = 0\n    while 1:\n        (a, b) = (max(a, b), min(a, b))\n        if a % b == 0 or a // b > 1:\n            break\n        if a // b == 1:\n            a -= b\n        if flag == 'Ari':\n            flag = 'Rich'\n        else:\n            flag = 'Ari'\n    print(flag)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    winner = 'Ari'\n    while n > 0 and m > 0:\n        if n == m:\n            break\n        if n >= 2 * m or m >= 2 * n:\n            break\n        else:\n            if m > n:\n                m = m - n\n            else:\n                n = n - m\n            if winner == 'Ari':\n                winner = 'Rich'\n            else:\n                winner = 'Ari'\n    print(winner)", "def gamegcd(n, m):\n    a = 0\n    l = []\n    while m:\n        if n > m:\n            if n % m == 0:\n                m = 0\n                a = 1\n                l.append(a)\n            else:\n                a = int(n // m)\n                n %= m\n                l.append(a)\n        elif m % n == 0:\n            m = 0\n            a = 1\n            l.append(a)\n        else:\n            a = int(m // n)\n            m %= n\n            l.append(a)\n    return l\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == m:\n        print('Ari')\n    else:\n        if n > m:\n            l = gamegcd(n, m)\n        else:\n            l = gamegcd(m, n)\n        length = len(l)\n        f = True\n        for x in range(length):\n            if l[x] > 1:\n                f = False\n                if (x + 1) % 2 == 0:\n                    print('Rich')\n                else:\n                    print('Ari')\n                break\n        if f:\n            print('Rich' if length % 2 == 0 else 'Ari')"]