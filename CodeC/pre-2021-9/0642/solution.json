["def check(x, n, k, mid):\n    curr = x[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        curr -= k\n        if curr > x[i] + mid:\n            curr = x[i] + mid\n        elif curr < x[i] - mid:\n            return False\n    if curr >= 0.0:\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    (n, k) = map(float, input().split(' '))\n    n = int(n)\n    x = []\n    for i in range(n):\n        pos = float(input())\n        x.append(pos)\n    (low, high, ans) = (0.0, 10000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(x, n, k, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)", "def check(x, n, k, mid):\n    curr = x[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        curr -= k\n        if curr > x[i] + mid:\n            curr = x[i] + mid\n        elif curr < x[i] - mid:\n            return False\n    if curr >= 0.0:\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    (n, k) = map(float, input().split(' '))\n    n = int(n)\n    x = []\n    for i in range(n):\n        pos = float(input())\n        x.append(pos)\n    (low, high, ans) = (0.0, 10000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(x, n, k, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)", "def check(x, n, k, mid):\n    curr = x[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        curr -= k\n        if curr > x[i] + mid:\n            curr = x[i] + mid\n        elif curr < x[i] - mid:\n            return False\n    if curr >= 0.0:\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    (n, k) = map(float, input().split(' '))\n    n = int(n)\n    x = []\n    for i in range(n):\n        pos = float(input())\n        x.append(pos)\n    (low, high, ans) = (0.0, 10000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(x, n, k, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)", "def check(x, n, k, mid):\n    curr = x[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        curr -= k\n        if curr > x[i] + mid:\n            curr = x[i] + mid\n        elif curr < x[i] - mid:\n            return False\n    if curr >= 0.0:\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    (n, k) = map(float, input().split(' '))\n    n = int(n)\n    x = []\n    for i in range(n):\n        pos = float(input())\n        x.append(pos)\n    (low, high, ans) = (0.0, 10000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(x, n, k, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)", "def check(x, n, k, mid):\n    curr = x[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        curr -= k\n        if curr > x[i] + mid:\n            curr = x[i] + mid\n        elif curr < x[i] - mid:\n            return False\n    if curr >= 0.0:\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    (n, k) = map(float, input().split(' '))\n    n = int(n)\n    x = []\n    for i in range(n):\n        pos = float(input())\n        x.append(pos)\n    (low, high, ans) = (0.0, 10000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(x, n, k, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)", "def check(x, n, k, mid):\n    curr = x[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        curr -= k\n        if curr > x[i] + mid:\n            curr = x[i] + mid\n        elif curr < x[i] - mid:\n            return False\n    if curr >= 0.0:\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    (n, k) = map(float, input().split(' '))\n    n = int(n)\n    x = []\n    for i in range(n):\n        pos = float(input())\n        x.append(pos)\n    (low, high, ans) = (0.0, 10000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(x, n, k, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)", "from sys import stdin\n\ndef check(x, n, k, mid):\n    curr = x[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        curr -= k\n        if curr > x[i] + mid:\n            curr = x[i] + mid\n        elif curr < x[i] - mid:\n            return False\n    if curr >= 0.0:\n        return True\n    else:\n        return False\nfor _ in range(int(input().strip())):\n    (n, k) = map(float, input().strip().split(' '))\n    n = int(n)\n    x = []\n    for i in range(n):\n        pos = float(input().strip())\n        x.append(pos)\n    (low, high, ans) = (0.0, 10000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(x, n, k, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)", "from sys import stdin\n\ndef check(x, n, k, mid):\n    curr = x[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        curr -= k\n        if curr > x[i] + mid:\n            curr = x[i] + mid\n        elif curr < x[i] - mid:\n            return False\n    if curr >= 0.0:\n        return True\n    else:\n        return False\n\ndef solve(x, n, k):\n    (low, high, ans) = (0.0, 10000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(x, n, k, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)\nfor _ in range(int(input().strip())):\n    (n, k) = map(float, input().strip().split(' '))\n    n = int(n)\n    x = []\n    for i in range(n):\n        pos = float(input().strip())\n        x.append(pos)\n    solve(x, n, k)", "tc = int(input())\nfor k in range(tc):\n    (n, t) = input().split()\n    (n, t) = (int(n), float(t))\n    arr = []\n    for j in range(n):\n        arr.append(float(input()))\n    l = 0.0\n    r = 10.0 ** 12\n    mn = r\n    while True:\n        mid = l + (r - l) / 2\n        if r - l <= 0.0001:\n            mn = mid\n            break\n        right = None\n        flag = True\n        for i in range(n - 1, -1, -1):\n            if i == n - 1:\n                right = arr[n - 1] + mid - t\n            elif arr[i] <= right:\n                pos = min(arr[i] + mid, right)\n                right = pos - t\n            else:\n                pos = max(arr[i] - mid, right)\n                if pos > right or pos < 0:\n                    flag = False\n                    break\n                right = pos - t\n        if flag == True:\n            r = mid\n        else:\n            l = mid\n    num = str(round(mn, 4)).split('.')\n    while len(num[1]) < 4:\n        num[1] += '0'\n    print('.'.join(num))", "def check(dist):\n    cur = a[n - 1] + dist\n    for i in range(n - 2, -1, -1):\n        cur -= t\n        if cur > a[i] + dist:\n            cur = a[i] + dist\n        elif cur < a[i] - dist:\n            return False\n    if cur >= 0:\n        return True\n    return False\nk = int(input())\nfor _ in range(k):\n    (n, t) = map(float, input().split())\n    n = int(n)\n    a = []\n    for _ in range(n):\n        num = float(input())\n        a.append(num)\n    (lo, hi) = (0, 10 ** 10)\n    while hi - lo > 5e-05:\n        mid = (lo + hi) / 2\n        if check(mid):\n            ans = mid\n            hi = mid\n        else:\n            lo = mid\n    print(f'{ans:.4f}')", "tc = int(input())\nfor k in range(tc):\n    (n, t) = input().split()\n    (n, t) = (int(n), float(t))\n    arr = []\n    for j in range(n):\n        arr.append(float(input()))\n    l = 0.0\n    r = 10.0 ** 12\n    mn = r\n    while True:\n        mid = l + (r - l) / 2\n        if r - l <= 0.0001:\n            mn = mid\n            break\n        right = None\n        flag = True\n        for i in range(n - 1, -1, -1):\n            if i == n - 1:\n                right = arr[n - 1] + mid - t\n            elif arr[i] <= right:\n                pos = min(arr[i] + mid, right)\n                right = pos - t\n            else:\n                pos = max(arr[i] - mid, right)\n                if pos > right or pos < 0:\n                    flag = False\n                    break\n                right = pos - t\n        if flag == True:\n            r = mid\n        else:\n            l = mid\n    num = str(round(mn, 4)).split('.')\n    while len(num[1]) < 4:\n        num[1] += '0'\n    print('.'.join(num))", "def check(arr, n, t, mid):\n    curr = arr[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        curr -= t\n        if curr > arr[i] + mid:\n            curr = arr[i] + mid\n        elif curr < arr[i] - mid:\n            return False\n    if curr >= 0.0:\n        return True\n    else:\n        return False\n\ndef solve(arr, n, t):\n    (low, high, ans) = (0.0, 10000000000, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2\n        if check(arr, n, t, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    return '%.4f' % ans\nfor i in range(int(input())):\n    (n, t) = [float(x) for x in input().split()]\n    n = int(n)\n    arr = []\n    giv = []\n    for i in range(n):\n        r = float(input())\n        arr.append(r)\n    print(solve(arr, n, t))", "def check(p, n, t, mid):\n    curr = p[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        curr -= t\n        if curr > p[i] + mid:\n            curr = p[i] + mid\n        elif curr < p[i] - mid:\n            return False\n    if curr >= 0.0:\n        return True\n    else:\n        return False\n\ndef solve(p, n, t):\n    (low, high, ans) = (0.0, 100000000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(p, n, t, mid):\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(float, input().split())\n    n = int(n)\n    v = []\n    for i in range(n):\n        pos = float(input())\n        v.append(pos)\n    solve(v, n, k)", "def check(p, n, t, mid):\n    curr = p[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        curr -= t\n        if curr > p[i] + mid:\n            curr = p[i] + mid\n        elif curr < p[i] - mid:\n            return False\n    if curr >= 0.0:\n        return True\n    else:\n        return False\n\ndef solve(p, n, t):\n    (low, high, ans) = (0.0, 10000000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(p, n, t, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(float, input().split(' '))\n    n = int(n)\n    v = []\n    for i in range(n):\n        pos = float(input())\n        v.append(pos)\n    solve(v, n, k)", "def check(p, n, t, mid):\n    currpos = p[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        currpos -= t\n        if currpos > p[i] + mid:\n            currpos = p[i] + mid\n        elif currpos < p[i] - mid:\n            return False\n    if currpos >= 0.0:\n        return True\n    else:\n        return False\n\ndef solve(p, n, t):\n    (low, high, ans) = (0.0, 10000000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(p, n, t, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(float, input().split(' '))\n    n = int(n)\n    a = []\n    for i in range(n):\n        pos = float(input())\n        a.append(pos)\n    solve(a, n, k)", "def check(p, n, t, mid):\n    currpos = p[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        currpos -= t\n        if currpos > p[i] + mid:\n            currpos = p[i] + mid\n        elif currpos < p[i] - mid:\n            return False\n    if currpos >= 0.0:\n        return True\n    else:\n        return False\n\ndef solve(p, n, t):\n    (low, high, ans) = (0.0, 10000000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(p, n, t, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(float, input().split(' '))\n    n = int(n)\n    a = []\n    for i in range(n):\n        pos = float(input())\n        a.append(pos)\n    solve(a, n, k)", "def check(p, n, t, mid):\n    currpos = p[n - 1] + mid\n    for i in range(n - 2, -1, -1):\n        currpos -= t\n        if currpos > p[i] + mid:\n            currpos = p[i] + mid\n        elif currpos < p[i] - mid:\n            return False\n    if currpos >= 0.0:\n        return True\n    else:\n        return False\n\ndef solve(p, n, t):\n    (low, high, ans) = (0.0, 10000000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(p, n, t, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(float, input().split(' '))\n    n = int(n)\n    a = []\n    for i in range(n):\n        pos = float(input())\n        a.append(pos)\n    solve(a, n, k)", "def ok(d):\n    lst = max(0, x[0] - d)\n    for i in range(1, n):\n        if x[i] + d < lst + t:\n            return False\n        else:\n            lst = max(x[i] - d, lst + t)\n    return True\ntst = int(input())\nfor _ in range(tst):\n    (n, t) = map(float, input().split(' '))\n    n = int(n)\n    x = []\n    for i in range(n):\n        p = float(input())\n        x.append(p)\n    l = 0.0\n    r = 1000000000.0\n    for it in range(1, 60):\n        mid = (l + r) / 2.0\n        if ok(mid) == True:\n            r = mid\n        else:\n            l = mid\n    print('%.4f' % l)", "def check(positions, N, T, mid):\n    currPos = positions[N - 1] + mid\n    for i in range(N - 2, -1, -1):\n        currPos -= T\n        if currPos > positions[i] + mid:\n            currPos = positions[i] + mid\n        elif currPos < positions[i] - mid:\n            return False\n    if currPos >= 0.0:\n        return True\n    return False\n\ndef solve(positions, N, T):\n    (low, high, ans) = (0.0, 10000000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(positions, N, T, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)\nT = int(input())\nfor _ in range(T):\n    (N, K) = map(float, input().split(' '))\n    N = int(N)\n    A = []\n    for i in range(N):\n        pos = float(input())\n        A.append(pos)\n    solve(A, N, K)", "def check(positions, N, T, mid):\n    currPos = positions[N - 1] + mid\n    for i in range(N - 2, -1, -1):\n        currPos -= T\n        if currPos > positions[i] + mid:\n            currPos = positions[i] + mid\n        elif currPos < positions[i] - mid:\n            return False\n    if currPos >= 0.0:\n        return True\n    return False\n\ndef solve(positions, N, T):\n    (low, high, ans) = (0.0, 10000000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(positions, N, T, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)\nT = int(input())\nfor _ in range(T):\n    (N, K) = map(float, input().split(' '))\n    N = int(N)\n    A = []\n    for i in range(N):\n        pos = float(input())\n        A.append(pos)\n    solve(A, N, K)", "def check(positions, N, T, mid):\n    currPos = positions[N - 1] + mid\n    for i in range(N - 2, -1, -1):\n        currPos -= T\n        if currPos > positions[i] + mid:\n            currPos = positions[i] + mid\n        elif currPos < positions[i] - mid:\n            return False\n    if currPos >= 0.0:\n        return True\n    return False\n\ndef solve(positions, N, T):\n    (low, high, ans) = (0.0, 10000000000.0, 0.0)\n    while high - low > 5e-05:\n        mid = (low + high) / 2.0\n        if check(positions, N, T, mid) == True:\n            ans = mid\n            high = mid\n        else:\n            low = mid\n    print('%.4f' % ans)\nT = int(input())\nfor _ in range(T):\n    (N, K) = map(float, input().split(' '))\n    N = int(N)\n    A = []\n    for i in range(N):\n        pos = float(input())\n        A.append(pos)\n    solve(A, N, K)"]