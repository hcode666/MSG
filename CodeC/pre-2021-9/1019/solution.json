["for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    temp = []\n    m = 1\n    while m * x <= y:\n        temp.append(m * x)\n        m = 2 * m + 1\n    count = 0\n    for i in range(len(temp) - 1, -1, -1):\n        if temp[i] <= y:\n            y -= temp[i]\n            count += i + 2\n    count -= 1\n    if y != 0:\n        print(-1)\n    else:\n        print(count)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    temp = []\n    m = 1\n    while m * x <= y:\n        temp.append(m * x)\n        m = 2 * m + 1\n    count = 0\n    for i in range(len(temp) - 1, -1, -1):\n        if temp[i] <= y:\n            y -= temp[i]\n            count += i + 2\n    count -= 1\n    if y != 0:\n        print(-1)\n    else:\n        print(count)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    temp = []\n    m = 1\n    while m * x <= y:\n        temp.append(m * x)\n        m = 2 * m + 1\n    count = 0\n    for i in range(len(temp) - 1, -1, -1):\n        if temp[i] <= y:\n            y -= temp[i]\n            count += i + 2\n    count -= 1\n    if y != 0:\n        print(-1)\n    else:\n        print(count)", "from bisect import *\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\nt = inp()\nwhile t:\n    t -= 1\n    (x, y) = ma()\n    if x == y:\n        print(1)\n        continue\n    fl = 0\n    mo = 1000000\n    have = []\n    for i in range(1, 61):\n        have.append([x * (2 ** i - 1), i])\n    have.sort(reverse=True)\n    cur = 0\n    mo = 0\n    for i in have:\n        if i[0] <= y:\n            y -= i[0]\n            mo += i[1] + 1\n        if y == 0:\n            mo -= 1\n            fl = 1\n            break\n    if fl == 0:\n        mo = -1\n    print(mo)", "T = int(input())\nfor i in range(T):\n    (x, y) = map(int, input().split())\n    temp = []\n    m = 1\n    while m * x <= y:\n        temp.append(m * x)\n        m = 2 * m + 1\n    count = 0\n    for i in range(len(temp) - 1, -1, -1):\n        if temp[i] <= y:\n            y -= temp[i]\n            count += i + 2\n    count -= 1\n    if y != 0:\n        print(-1)\n    else:\n        print(count)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    temp = []\n    m = 1\n    while m * x <= y:\n        temp.append(m * x)\n        m = 2 * m + 1\n    count = 0\n    for i in range(len(temp) - 1, -1, -1):\n        if temp[i] <= y:\n            y -= temp[i]\n            count += i + 2\n    count -= 1\n    if y != 0:\n        print(-1)\n    else:\n        print(count)", "li = [2 ** i - 1 for i in range(1, 61)]\n\ndef sure(m):\n    seen = []\n    i = 60\n    for it in li[-1::-1]:\n        if it <= m:\n            m -= it\n            seen.append(i)\n        if m == 0:\n            break\n        i -= 1\n    if m != 0:\n        return (False, [])\n    return (True, seen)\n\ndef func(x, y):\n    if y % x:\n        return -1\n    d = y // x\n    (st, li) = sure(d)\n    if not st:\n        return -1\n    ans = sum(li) + len(li) - 1\n    return ans\nt = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    print(func(x, y))", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    l = []\n    if y % x != 0:\n        print(-1)\n    else:\n        m = 1\n        y = y // x\n        while y >= 2 ** m - 1:\n            z = 2 ** m - 1\n            l.append(z)\n            m += 1\n        s = 0\n        for i in range(len(l) - 1, -1, -1):\n            if l[i] <= y:\n                y -= l[i]\n                s += i + 2\n        s -= 1\n        if y != 0:\n            print(-1)\n        else:\n            print(s)", "import sys\nt = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n        continue\n    a = y // x + 1\n    if a % 2 == 1:\n        a += 1\n        j = 2\n    else:\n        j = 1\n    b = '{0:0b}'.format(a)\n    ans = sys.maxsize\n    while j <= len(b):\n        if b.count('1') == j:\n            d = j - 1\n            ind = b.index('1')\n            while ind != -1:\n                d += len(b) - ind - 1\n                try:\n                    ind = b.index('1', ind + 1)\n                except ValueError:\n                    break\n            if d < ans:\n                ans = d\n        j += 2\n        a += 2\n        b = '{0:0b}'.format(a)\n    if ans != sys.maxsize:\n        print(ans)\n    else:\n        print(-1)", "from collections import defaultdict, Counter\nfrom math import sqrt, log10, log2, log, gcd, ceil, floor\nfrom bisect import bisect_left, bisect_right\nfrom itertools import permutations\nimport sys, io, os\ninput = sys.stdin.readline\nsys.setrecursionlimit(10000)\n\ndef get_list():\n    return [int(i) for i in input().split()]\ninf = float('inf')\nt = 1\narr = [pow(2, i) - 1 for i in range(1, 66)]\nfor i in range(int(input())):\n    (x, y) = get_list()\n    if y % x != 0:\n        print(-1)\n        continue\n    arr1 = [x * j for j in arr]\n    dict = defaultdict(int)\n    pos = 1\n    counter = 0\n    while y:\n        index = bisect_right(arr1, y) - 1\n        if dict[index] == 1:\n            pos = 0\n            break\n        dict[index] = 1\n        y -= arr1[index]\n        counter += index + 1\n        counter += 1\n    if pos:\n        counter -= 1\n        print(counter)\n    else:\n        print(-1)", "from collections import defaultdict\nimport math as m\nt = int(input())\nfor k in range(t):\n    (x, y) = map(int, input().split())\n    ans = -1\n    if y % x != 0:\n        print(-1)\n    else:\n        for i in range(61, 0, -1):\n            if x * (2 ** i - 1) <= y:\n                y = y - x * (2 ** i - 1)\n                ans += 1\n                ans += i\n        if y == 0:\n            print(ans)\n        else:\n            print(-1)", "for t in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x:\n        print(-1)\n        continue\n    y //= x\n    flag = False\n    ans = float('inf')\n    (low, high) = (1, 65)\n    for i in range(1, 65):\n        tt = y + i\n        binary = bin(tt)[2:]\n        if binary.count('1') == i:\n            binary = binary[::-1]\n            si = 0\n            for j in range(len(binary)):\n                if binary[j] == '1':\n                    si += j\n            si = si + i - 1\n            ans = si\n            flag = True\n            break\n    if flag:\n        print(ans)\n    else:\n        print(-1)", "import sys\nimport math\nT = int(input())\nfor test_case in range(T):\n    (x, y) = map(int, sys.stdin.readline().strip().split())\n    upto = int(math.log2(y / x + 1))\n    dp = [(2 ** i - 1) * x for i in range(upto, 0, -1)]\n    i = 0\n    j = upto\n    ans = 0\n    b = True\n    while i < upto and y != 0:\n        if y >= dp[i]:\n            y -= dp[i]\n            if b:\n                ans += j\n                b = False\n            else:\n                ans += j + 1\n        i += 1\n        j -= 1\n    if y == 0:\n        print(ans)\n    else:\n        print(-1)", "import sys\nimport math\nimport bisect\nfrom math import log2\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef iinput():\n    return int(input())\n\ndef rinput():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\nmod = int(1000000000.0) + 7\nfor _ in range(iinput()):\n    (x, y) = rinput()\n    nmax = int(log2(y / x + 1))\n    t = [(2 ** i - 1) * x for i in range(nmax, 0, -1)]\n    n = len(t)\n    i = 0\n    j = nmax\n    ans = 0\n    b = True\n    while i < n and y != 0:\n        if y >= t[i]:\n            y -= t[i]\n            if b:\n                ans += j\n                b = False\n            else:\n                ans += j + 1\n        i += 1\n        j -= 1\n    if y == 0:\n        print(ans)\n    else:\n        print(-1)", "import sys\nimport math\nimport bisect\nfrom math import log2\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef iinput():\n    return int(input())\n\ndef rinput():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\nmod = int(1000000000.0) + 7\nfor _ in range(iinput()):\n    (x, y) = rinput()\n    nmax = int(log2(y / x + 1))\n    t = [(2 ** i - 1) * x for i in range(nmax, 0, -1)]\n    n = len(t)\n    i = 0\n    j = nmax\n    ans = 0\n    b = True\n    while i < n and y != 0:\n        if y >= t[i]:\n            y -= t[i]\n            if b:\n                ans += j\n                b = False\n            else:\n                ans += j + 1\n        i += 1\n        j -= 1\n    if y == 0:\n        print(ans)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    ans = 0\n    if y % x != 0:\n        print(-1)\n    else:\n        y //= x\n        for i in range(61, 0, -1):\n            if y >= (1 << i) - 1:\n                ans += i + 1\n                y -= (1 << i) - 1\n        print([-1, ans - 1][y == 0])", "import time\ntry:\n    t = int(input())\n    p = 10 ** 9 + 7\n    while t:\n        t -= 1\n        (x, y) = map(int, input().split())\n        start = time.time()\n        if y % x == 0:\n            y = y // x\n            flag = 1\n            for n in range(1, 60):\n                b = y + n\n                cnt = 0\n                j = 0\n                minutes = 0\n                if b & 1:\n                    continue\n                m = bin(b)[2:]\n                cnt = m.count('1')\n                if cnt == n:\n                    flag = 0\n                    lm = len(m)\n                    for i in range(lm):\n                        if m[lm - 1 - i] == '1':\n                            minutes += i\n                    print(n + minutes - 1)\n                    break\n            if flag == 1:\n                print(-1)\n        else:\n            print(-1)\n    end = time.time()\nexcept:\n    pass", "from collections import deque, defaultdict\nfrom math import sqrt, ceil, factorial, floor, inf, log2, sqrt, gcd\nimport bisect\nimport copy\nfrom itertools import combinations\nimport sys\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef input():\n    return sys.stdin.readline().strip()\nfrom collections import defaultdict\n\ndef func(y, x):\n    if y % x != 0:\n        return inf\n    else:\n        y = y // x\n        (ans, k) = (0, 0)\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] <= y:\n                ans += i + 1\n                k += 1\n                y -= arr[i]\n        if y == 0:\n            return ans + k - 1\n        else:\n            return inf\narr = []\nfor i in range(1, 62):\n    arr.append(2 ** i - 1)\nfor _ in range(int(input())):\n    (x, y) = get_ints()\n    mini = inf\n    mini = min(mini, func(y, x))\n    if mini == inf:\n        print(-1)\n    else:\n        print(mini)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        arr = []\n        y = y // x\n        p = 1\n        c = 0\n        k = 0\n        for i in range(1, 62):\n            arr.append(2 ** i - 1)\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] <= y:\n                c += i + 1\n                k += 1\n                y -= arr[i]\n        if y == 0:\n            print(c + k - 1)\n        else:\n            print(-1)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        arr = []\n        y = y // x\n        p = 1\n        c = -1\n        for i in range(1, 62):\n            arr.append(2 ** i - 1)\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] <= y:\n                c += i + 2\n                y -= arr[i]\n        if y == 0:\n            print(c)\n        else:\n            print(-1)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        arr = []\n        y = y // x\n        p = 1\n        c = -1\n        for i in range(1, 62):\n            p = int(math.pow(2, i))\n            arr.append(p - 1)\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] <= y:\n                c += i + 2\n                y -= arr[i]\n        if y == 0:\n            print(c)\n        else:\n            print(-1)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        arr = []\n        y = y // x\n        p = 1\n        c = -1\n        for i in range(1, 62):\n            p = int(math.pow(2, i))\n            arr.append(p - 1)\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] <= y:\n                c += i + 2\n                y -= arr[i]\n        if y == 0:\n            print(c)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        arr = []\n        y = y // x\n        p = 1\n        c = -1\n        for i in range(1, 61):\n            arr.append(2 ** i - 1)\n        for i in range(len(arr) - 1, -1, -1):\n            if arr[i] <= y:\n                c += i + 2\n                y -= arr[i]\n        if y == 0:\n            print(c)\n        else:\n            print(-1)", "def f(n):\n    (c, l) = (-1, len(bin(n)) - 2)\n    while l != 0 and n != 0:\n        t = int('1' * l, 2)\n        if t <= n:\n            n -= t\n            c += l + 1\n        l -= 1\n    if not n:\n        return c\n    else:\n        return -1\nT = int(input())\nfor n1 in range(T):\n    (x, y) = [int(i) for i in input().split(' ')]\n    if y % x == 0:\n        print(f(y // x))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        ans = 0\n        l = []\n        for i in range(1, 61):\n            l.append(2 ** i - 1)\n        for i in range(len(l) - 1, -1, -1):\n            if y - l[i] * x >= 0:\n                y -= l[i] * x\n                ans += i + 1\n                if y > 0:\n                    ans += 1\n        if y == 0:\n            print(ans)\n        else:\n            print(-1)", "def good(x, y):\n    if x > y or y % x != 0:\n        return -1\n    lo = 0\n    hi = 60\n    ans = -1\n    while lo <= hi:\n        mid = (lo + hi) // 2\n        a = (2 ** mid - 1) * x\n        if y >= a:\n            ans = mid\n            lo = mid + 1\n        else:\n            hi = mid - 1\n    arr = []\n    count = 0\n    for i in range(1, ans + 1):\n        arr.append((2 ** i - 1) * x)\n    for i in range(ans - 1, -1, -1):\n        if arr[i] <= y:\n            count += i + 2\n            y -= arr[i]\n    count -= 1\n    if y != 0:\n        return -1\n    else:\n        return count\nt = int(input())\nfor l in range(t):\n    (x, y) = map(int, input().split())\n    print(good(x, y))", "T = int(input())\nfor i in range(T):\n    (X, Y) = [int(x) for x in input().split()]\n    if Y % X != 0:\n        print(-1)\n    else:\n        ans = 0\n        Y = Y // X\n        s = set()\n        while True:\n            c = bin(Y)\n            c = str(c)\n            c = c[2:]\n            if Y == 0:\n                print(ans)\n                break\n            elif Y == (1 << len(c)) - 1:\n                ans += len(c)\n                if len(c) in s:\n                    print(-1)\n                else:\n                    print(ans)\n                break\n            else:\n                Y -= (1 << len(c) - 1) - 1\n                if len(c) - 1 in s:\n                    print(-1)\n                    break\n                s.add(len(c) - 1)\n                ans += len(c)", "from collections import Counter, defaultdict\nimport math, bisect\narr = [0, 1]\nmp = defaultdict(int)\nmp[1] = 1\nfor i in range(2, 61):\n    val = arr[-1] * 2 + 1\n    arr.append(val)\n    mp[val] = 1\nfor _ in range(int(input())):\n    (x, y) = list(map(int, input().split()))\n    if y % x != 0:\n        print(-1)\n        continue\n    y //= x\n    x = 1\n    cnt = 0\n    res = 0\n    flag = []\n    while y != 0:\n        cnt += 1\n        if mp[y] == 1:\n            n = arr.index(y)\n        else:\n            n = bisect.bisect_left(arr, y) - 1\n        flag.append(n)\n        y -= 2 ** n - 1\n        res += n\n    if len(flag) != len(list(set(flag))):\n        print(-1)\n    else:\n        print(res + cnt - 1)", "from math import *\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        y = y // x\n        ans = 0\n        for len in range(61, 0, -1):\n            a = (1 << len) - 1\n            if a <= y:\n                y -= a\n                ans = ans + len + 1\n        if y == 0:\n            print(ans - 1)\n        else:\n            print(-1)", "def ans(x, y):\n    if y % x != 0:\n        return -1\n    y //= x\n    ans = 0\n    for i in range(59, -1, -1):\n        if y >= burgers[i]:\n            ans += days[i]\n            y -= burgers[i]\n        if y == 0:\n            return ans - 1\n    return -1\ndays = [2]\nburgers = [1]\nwhile len(burgers) < 60:\n    days.append(days[-1] + 1)\n    burgers.append(burgers[-1] * 2 + 1)\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(ans(x, y))", "import sys\ninput = sys.stdin.readline\nimport math\ndp = [1] * 63\nx = 2\nfor i in range(1, 63):\n    dp[i] = dp[i - 1] + x\n    x = x * 2\nt = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n        continue\n    y = y // x\n    p = 62\n    ans = []\n    while p >= 0:\n        if dp[p] <= y:\n            y = y - dp[p]\n            ans.append(p + 1)\n        p = p - 1\n    if y != 0:\n        print(-1)\n        continue\n    print(sum(ans) + len(ans) - 1)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        y = y // x\n        flag = 1\n        for i in range(1, 60):\n            n = bin(y + i)[2:]\n            if n.count('1') == i:\n                n = n[::-1]\n                s = 0\n                for j in range(len(n)):\n                    if n[j] == '1':\n                        s += j\n                s = s + i - 1\n                print(s)\n                flag = 0\n                break\n        if flag:\n            print(-1)", "for _ in range(int(input())):\n    (x, y) = [int(x) for x in input().split()]\n    if y % x != 0:\n        print(-1)\n    else:\n        ans = 0\n        options = [2 ** i - 1 for i in range(1, 64)]\n        ab = y // x\n        for i in range(len(options) - 1, -1, -1):\n            if ab - options[i] >= 0:\n                ab -= options[i]\n                ans += i + 1\n                if ab > 0:\n                    ans += 1\n        if ab == 0:\n            print(ans)\n        else:\n            print(-1)", "from sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nfrom typing import ByteString\ninput = stdin.readline\nt = int(input())\n\ndef solve():\n    pass\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n        continue\n    total = 0\n    curr = 0\n    a = x\n    for i in range(60, -1, -1):\n        if x * (2 ** (i + 1) - 1) <= y:\n            total += 1\n            y -= x * (2 ** (i + 1) - 1)\n            total += i + 1\n    print(total - 1 if not y else -1)", "for _ in range(int(input())):\n    (x, y) = [int(x) for x in input().split()]\n    if y % x != 0:\n        print(-1)\n    else:\n        ans = 0\n        options = [2 ** i - 1 for i in range(1, 64)]\n        ab = y // x\n        for i in range(len(options) - 1, -1, -1):\n            if ab - options[i] >= 0:\n                ab -= options[i]\n                ans += i + 1\n                if ab > 0:\n                    ans += 1\n        if ab == 0:\n            print(ans)\n        else:\n            print(-1)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n        continue\n    y = y // x\n    cnt = 0\n    for i in range(60, 0, -1):\n        ele = 2 ** i - 1\n        if ele <= y:\n            y -= ele\n            cnt += i + 1\n            if y == 0:\n                break\n    if y != 0:\n        print(-1)\n    else:\n        print(cnt - 1)", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log2, ceil\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom bisect import insort\nfrom collections import Counter\nfrom collections import deque\nfrom heapq import heappush, heappop, heapify\nfrom itertools import permutations, combinations\nfrom itertools import accumulate as ac\nfrom random import randint as ri\nmod = int(1000000000.0) + 7\nip = lambda : int(stdin.readline())\ninp = lambda : map(int, stdin.readline().split())\nips = lambda : stdin.readline().rstrip()\nout = lambda x: stdout.write(str(x) + '\\n')\nt = ip()\nfor _ in range(t):\n    (x, y) = inp()\n    if y % x == 0:\n        y = y // x\n        nn = 5\n        bit = [0] * nn\n        cur = y\n        ans = 0\n        last = None\n        val = []\n        while cur > 0:\n            mm = len(bin(cur)[2:])\n            if pow(2, mm) - 1 == cur:\n                ans += mm\n                last = cur\n                cur -= pow(2, mm) - 1\n                val.append(mm)\n            else:\n                last = cur\n                cur -= pow(2, mm - 1) - 1\n                ans += mm - 1\n                ans += 1\n                val.append(mm - 1)\n        if len(set(val)) == len(val):\n            pass\n        else:\n            ans = -1\n    else:\n        ans = -1\n    print(ans)", "from sys import stdin, stdout\nstdin.readline\n\ndef mp():\n    return list(map(int, stdin.readline().strip().split()))\n\ndef it():\n    return int(stdin.readline().strip())\nfrom collections import defaultdict as dd, Counter as C, deque\nfrom math import ceil, gcd, sqrt, factorial, log2, floor\nfrom bisect import bisect_right as br, bisect_left as bl\nfor _ in range(it()):\n    (x, n) = mp()\n    if n % x:\n        print(-1)\n        continue\n    n //= x\n    v = []\n    for i in range(60):\n        v.append(1 << i)\n    for i in range(1, 60):\n        v[i] += v[i - 1]\n    s = set(v)\n    v.reverse()\n    ans = 0\n    for i in v:\n        if n >= i:\n            ans += len(bin(i)) - 2\n            n -= i\n            if n != 0:\n                ans += 1\n    if n != 0:\n        print(-1)\n    else:\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    alpha = []\n    m = 1\n    while m * x <= y:\n        alpha.append(m * x)\n        m = 2 * m + 1\n    cnt = 0\n    for i in range(len(alpha) - 1, -1, -1):\n        if alpha[i] <= y:\n            y -= alpha[i]\n            cnt += i + 2\n    cnt -= 1\n    if y != 0:\n        print(-1)\n    else:\n        print(cnt)", "from collections import defaultdict\nimport sys\nfor _ in range(int(input())):\n    (n, y) = map(int, sys.stdin.readline().split())\n    if y % n != 0:\n        print(-1)\n    else:\n        target = y // n\n        ans = 0\n        s = 0\n        i = 1\n        f = 0\n        c = 0\n        for i in range(60, 0, -1):\n            v = (1 << i) - 1\n            if v > target - s:\n                continue\n            elif f == 0:\n                s += v\n                ans += i\n                f = 1\n            else:\n                s += v\n                ans += i\n                c += 1\n        if s == target:\n            sys.stdout.write(str(ans + c) + '\\n')\n        else:\n            sys.stdout.write(str(-1) + '\\n')", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, y) = map(int, input().split())\n    if y % n != 0:\n        print(-1)\n    else:\n        target = y // n\n        ans = 0\n        s = 0\n        i = 1\n        f = 0\n        c = 0\n        for i in range(60, 0, -1):\n            v = (1 << i) - 1\n            if v > target - s:\n                continue\n            elif f == 0:\n                s += v\n                ans += i\n                f = 1\n            else:\n                s += v\n                ans += i\n                c += 1\n        if s == target:\n            print(ans + c)\n        else:\n            print(-1)", "def burg(n):\n    o = None\n    c = 0\n    r = 0\n    while n:\n        b = bin(n)[2:]\n        l = len(b)\n        if not '0' in b:\n            if o == n:\n                return -1\n            c += l\n            r += 1\n            break\n        else:\n            o = 2 ** (l - 1) - 1\n            c += l - 1\n            r += 1\n            n -= o\n    return c + r - 1\nfor _ in range(int(input())):\n    (X, Y) = map(int, input().split())\n    print(burg(Y // X)) if Y % X == 0 else print(-1)", "import math\n\ndef foo(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nmod = pow(10, 9) + 7\nfrom collections import defaultdict\nt = int(input())\npre = []\nlimit = pow(10, 18) + 10\np = 1\nwhile p < limit:\n    pre.append(p)\n    p *= 2\nfor i in range(1, len(pre)):\n    pre[i] += pre[i - 1]\nfor t1 in range(0, t):\n    (x, k) = map(int, input().split())\n    time = 0\n    flag = 0\n    time = 0\n    ans = 0\n    a = defaultdict(int)\n    for i in range(len(pre) - 1, -1, -1):\n        while x * pre[i] <= k:\n            k -= x * pre[i]\n            time += i + 1\n            a[i + 1] += 1\n    if k != 0:\n        ans = -1\n    else:\n        for i in a.items():\n            if i[1] > 1:\n                ans = -1\n        if ans != -1:\n            ans += time\n            ans += len(a) - 1\n    print(ans)", "import sys\nfrom bisect import bisect_right as rb\nfrom collections import deque\nfrom queue import PriorityQueue\ninput_ = lambda : sys.stdin.readline().strip('\\r\\n')\nii = lambda : int(input_())\nil = lambda : list(map(int, input_().split()))\nilf = lambda : list(map(float, input_().split()))\nip = lambda : input_()\nfi = lambda : float(input_())\nap = lambda ab, bc, cd: ab[bc].append(cd)\nli = lambda : list(input_())\npr = lambda x: print(x)\nprinT = lambda x: print(x)\nf = lambda : sys.stdout.flush()\ninv = lambda x: pow(x, mod - 2, mod)\nmod = 10 ** 9 + 7\ndp = [1 for i in range(64)]\nfor i in range(1, 64):\n    dp[i] = dp[i - 1] * 2\nfor _ in range(ii()):\n    (x, y) = il()\n    if y % x:\n        print(-1)\n        continue\n    y = y // x\n    ans = 0\n    c = 0\n    for i in range(63, 0, -1):\n        if dp[i] - 1 <= y:\n            ans += i\n            y -= dp[i] - 1\n            c += 1\n    if y == 0:\n        print(ans + c - 1)\n    else:\n        print(-1)", "from bisect import bisect_left\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        ans = 0\n        l = []\n        for i in range(1, 61):\n            l.append(2 ** i - 1)\n        for i in range(len(l) - 1, -1, -1):\n            if y - l[i] * x >= 0:\n                y -= l[i] * x\n                ans += i + 1\n                if y > 0:\n                    ans += 1\n        if y == 0:\n            print(ans)\n        else:\n            print(-1)", "def answer():\n    if y % x:\n        return -1\n    d = y // x\n    value = []\n    for i in range(61):\n        value.append([(1 << i) - 1, i])\n    (b, ans) = (-1, 0)\n    for i in range(60, 0, -1):\n        if value[i][0] <= d:\n            d -= value[i][0]\n            ans += value[i][1]\n            b += 1\n    if d:\n        return -1\n    return ans + b\nfor T in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(answer())", "def answer():\n    if y % x:\n        return -1\n    d = y // x\n    value = []\n    for i in range(61):\n        value.append([(1 << i) - 1, i])\n    (b, ans) = (-1, 0)\n    for i in range(60, 0, -1):\n        if value[i][0] <= d:\n            d -= value[i][0]\n            ans += value[i][1]\n            b += 1\n    if d:\n        return -1\n    return ans + b\nfor T in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(answer())", "for _ in range(int(input())):\n    (x, y) = map(int, input().split(' '))\n    if y % x != 0:\n        print(-1)\n    else:\n        ans = 10 ** 18\n        a = y // x\n        for k in range(1, 61):\n            num = a + k\n            s = bin(num).replace('0b', '')\n            f = s[:-1].count('1')\n            n = len(s)\n            if f == k and s[-1] != '1':\n                res = f - 1\n                for i in range(len(s)):\n                    if s[i] == '1':\n                        res = res + (n - i - 1)\n                ans = min(ans, res)\n                break\n        if ans == 10 ** 18:\n            ans = -1\n        print(ans)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split(' '))\n    if y % x != 0:\n        print(-1)\n    else:\n        ans = 10 ** 18\n        a = y // x\n        for k in range(1, 61):\n            num = a + k\n            s = bin(num).replace('0b', '')\n            f = s[:-1].count('1')\n            n = len(s)\n            if f == k and s[-1] != '1':\n                res = f - 1\n                for i in range(len(s)):\n                    if s[i] == '1':\n                        res = res + (n - i - 1)\n                ans = min(ans, res)\n                break\n        if ans == 10 ** 18:\n            ans = -1\n        print(ans)", "mxV = (1 << 60) - 1\nfor t in range(int(input())):\n    (x, y) = tuple(map(int, input().strip().split()))\n    ans = -1\n    t = 60\n    v = mxV\n    if y % x == 0:\n        ans = 0\n        y = y // x\n        b = -1\n        while y > 0 and v > 0:\n            while v > y:\n                v >>= 1\n                t -= 1\n            y -= v\n            ans += t\n            v >>= 1\n            t -= 1\n            b += 1\n        if y > 0:\n            ans = -1\n        else:\n            ans += b\n    print(ans)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split(' '))\n    if y % x != 0:\n        print(-1)\n    else:\n        ans = 10 ** 18\n        a = y // x\n        for k in range(1, 61):\n            num = a + k\n            s = bin(num).replace('0b', '')\n            f = s[:-1].count('1')\n            n = len(s)\n            if f == k and s[-1] != '1':\n                res = f - 1\n                for i in range(len(s)):\n                    if s[i] == '1':\n                        res = res + (n - i - 1)\n                ans = min(ans, res)\n                break\n        if ans == 10 ** 18:\n            ans = -1\n        print(ans)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split(' '))\n    if y % x != 0:\n        print(-1)\n    else:\n        ans = 10 ** 18\n        a = y // x\n        for k in range(1, 61):\n            num = a + k\n            s = bin(num).replace('0b', '')\n            f = s.count('1')\n            n = len(s)\n            if f == k and s[-1] != '1':\n                res = f - 1\n                for i in range(len(s)):\n                    if s[i] == '1':\n                        res = res + (n - i - 1)\n                ans = min(ans, res)\n                break\n        if ans == 10 ** 18:\n            ans = -1\n        print(ans)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split(' '))\n    if y % x != 0:\n        print(-1)\n    else:\n        ans = 10 ** 18\n        a = y // x\n        for k in range(1, 61):\n            num = a + k\n            s = bin(num).replace('0b', '')\n            f = s.count('1')\n            n = len(s)\n            if f == k and s[-1] != '1':\n                res = f - 1\n                for i in range(len(s)):\n                    if s[i] == '1':\n                        res = res + (n - i - 1)\n                ans = res\n                break\n        if ans == 10 ** 18:\n            ans = -1\n        print(ans)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split(' '))\n    if y % x != 0:\n        print(-1)\n    else:\n        ans = 10 ** 18\n        a = y // x\n        for k in range(1, 61):\n            num = a + k\n            s = bin(num).replace('0b', '')\n            f = s.count('1')\n            n = len(s)\n            if f == k and s[-1] != '1':\n                res = f - 1\n                for i in range(n):\n                    if s[i] == '1':\n                        res = res + (n - i - 1)\n                ans = res\n                break\n        if ans == 10 ** 18:\n            ans = -1\n        print(ans)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split(' '))\n    if y % x != 0:\n        print(-1)\n    else:\n        ans = 10 ** 18\n        a = y // x\n        for k in range(1, 61):\n            num = a + k\n            s = bin(num)[2:]\n            f = s.count('1')\n            n = len(s)\n            if f == k and s[-1] != '1':\n                res = f - 1\n                for i in range(n):\n                    if s[i] == '1':\n                        res = res + (n - i - 1)\n                ans = res\n                break\n        if ans == 10 ** 18:\n            ans = -1\n        print(ans)", "import numpy as np\nm = {}\npower = [1] * 60\nm[1] = 1\nfor i in range(1, 60):\n    power[i] = 2 * power[i - 1] + 1\n    m[power[i]] = i + 1\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        p = y // x\n        c = 0\n        i = 59\n        t = -1\n        k = 0\n        while i >= 0 and p > 0:\n            if power[i] <= p:\n                c += m[power[i]] + k\n                p -= power[i]\n                k = 1\n            i -= 1\n        if p != 0:\n            c = -1\n        print(c)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        y //= x\n        l = []\n        for i in range(1, 61):\n            l.append(2 ** i - 1)\n        c = -1\n        for i in range(len(l) - 1, -1, -1):\n            if l[i] <= y:\n                c += i + 2\n                y -= l[i]\n        if y == 0:\n            print(c)\n        else:\n            print(-1)", "import sys\nimport os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\ndepth = 1000005\nmod = 1000000007\nsys.setrecursionlimit(depth)\nfrom collections import defaultdict\nnums = [0 for _ in range(70)]\nfor i in range(1, 70):\n    nums[i] = 2 * nums[i - 1] + 1\n\ndef fun(n):\n    (hi, lo, ans) = (69, 1, 1)\n    while hi >= lo:\n        mid = (hi + lo) // 2\n        if nums[mid] <= n:\n            ans = max(ans, mid)\n            lo = mid + 1\n        else:\n            hi = mid - 1\n    n = n - nums[ans]\n    return (n, ans)\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n        continue\n    ans = 0\n    z = y // x\n    s = set()\n    while z > 0:\n        (z, c) = fun(z)\n        if c in s:\n            ans = -1\n            break\n        else:\n            s.add(c)\n        ans += c\n        if z > 0:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        y = y // x\n        flag = 1\n        for i in range(1, 60):\n            n = bin(y + i)[2:]\n            if n.count('1') == i:\n                n = n[::-1]\n                s = 0\n                for j in range(len(n)):\n                    if n[j] == '1':\n                        s += j\n                s = s + i - 1\n                print(s)\n                flag = 0\n                break\n        if flag:\n            print(-1)", "from bisect import bisect_left\nck = []\nfor i in range(1, 61):\n    ck.append(2 ** i - 1)\nfor _ in range(int(input())):\n    (y, x) = map(int, input().split())\n    if x % y:\n        print(-1)\n    else:\n        x = x // y\n        ans = 0\n        last = -1\n        bol = True\n        while x:\n            t = bisect_left(ck, x)\n            if ck[t] > x:\n                t -= 1\n            ans += t + 1\n            x -= ck[t]\n            if x:\n                ans += 1\n            if last == t:\n                bol = False\n                break\n            last = t\n        if not bol:\n            print(-1)\n        else:\n            print(ans)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    total = x\n    arr = [0, x]\n    while total < y:\n        x *= 2\n        arr.append(x)\n        total += arr[-1]\n    n = len(arr)\n    for i in range(1, n):\n        arr[i] = arr[i] + arr[i - 1]\n    arr = arr[::-1]\n    count = -1\n    for x in arr:\n        if y >= x:\n            y -= x\n            count += n\n        n -= 1\n        if y <= 0:\n            break\n    if y == 0:\n        print(count)\n    else:\n        print(-1)", "import sys\nimport math\nimport bisect\nfrom math import log2\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef iinput():\n    return int(input())\n\ndef rinput():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\nmod = int(1000000000.0) + 7\nfor _ in range(iinput()):\n    (x, y) = rinput()\n    nmax = int(log2(y / x + 1))\n    t = [(2 ** i - 1) * x for i in range(nmax, 0, -1)]\n    n = len(t)\n    i = 0\n    j = nmax\n    ans = 0\n    b = True\n    while i < n and y != 0:\n        if y >= t[i]:\n            y -= t[i]\n            if b:\n                ans += j\n                b = False\n            else:\n                ans += j + 1\n        i += 1\n        j -= 1\n    if y == 0:\n        print(ans)\n    else:\n        print(-1)", "import math\nfrom collections import defaultdict\nDEBUG = True\n\ndef log(*args, **kwargs):\n    if DEBUG:\n        print(*args, **kwargs)\n\ndef ri():\n    return int(input())\n\ndef rl(f=int):\n    return list(map(f, input().split()))\n\ndef rs():\n    return input()\n\nclass Solution:\n\n    def __init__(self):\n        self.powers = [1]\n        for i in range(1, 60):\n            self.powers.append(2 ** i + self.powers[-1])\n\n    def run(self):\n        (x, y) = rl()\n        if y % x != 0:\n            return -1\n        y //= x\n        result = 0\n        i = len(self.powers) - 1\n        while i >= 0 and y > 0:\n            while i >= 0 and self.powers[i] > y:\n                i -= 1\n            if i < 0:\n                return -1\n            result += i + 1 + 1\n            y -= self.powers[i]\n            i -= 1\n        if y == 0:\n            return result - 1\n        return -1\nt = int(input())\ns = Solution()\nfor i in range(t):\n    print(s.run())", "def burg(n):\n    o = None\n    c = 0\n    r = 0\n    while n:\n        b = bin(n)[2:]\n        l = len(b)\n        if not '0' in b:\n            if o == n:\n                return -1\n            c += l\n            r += 1\n            break\n        else:\n            o = 2 ** (l - 1) - 1\n            c += l - 1\n            r += 1\n            n -= o\n    return c + r - 1\nfor _ in range(int(input())):\n    (X, Y) = map(int, input().split())\n    if Y % X == 0:\n        Burged = burg(Y // X)\n        print(Burged)\n    else:\n        print(-1)", "import math\ntc = int(input())\nfor _ in range(tc):\n    (x, y) = list(map(int, input().split()))\n    if y < x or y % x != 0:\n        print(-1)\n    else:\n        (b, m, f) = (0, 0, 0)\n        n = int(math.log2(y // x + 1))\n        for i in range(n, 0, -1):\n            if b + x * 2 ** i - x > y:\n                continue\n            b += x * 2 ** i - x\n            m += i\n            if b == y:\n                f = 1\n                break\n            m += 1\n        if f == 0:\n            print(-1)\n        else:\n            print(m)", "for _ in range(int(input())):\n    (X, Y) = map(int, input().split())\n    if Y % X > 0:\n        print(-1)\n    else:\n        Y = Y // X\n        X = 1\n        T = 0\n        A = []\n        F = 1\n        while Y > 0:\n            B = bin(Y + 1)[2:]\n            P = len(B) - 1\n            V = 2 ** P\n            Y -= V - 1\n            T += P\n            if P in A:\n                F = 0\n                break\n            else:\n                A.append(P)\n            if Y > 0:\n                T += 1\n            else:\n                break\n        if F:\n            print(T)\n        else:\n            print(-1)", "from os import path\nfrom io import BytesIO, IOBase\nimport sys\nfrom heapq import heappush, heappop\nfrom functools import cmp_to_key as ctk\nfrom collections import deque, Counter, defaultdict as dd\nfrom bisect import bisect, bisect_left, bisect_right, insort, insort_left, insort_right\nfrom itertools import permutations\nfrom datetime import datetime\nfrom math import ceil, sqrt, log, gcd\n\ndef ii():\n    return int(input())\n\ndef si():\n    return input().rstrip()\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\nabc = 'abcdefghijklmnopqrstuvwxyz'\nmod = 1000000007\ninf = float('inf')\nvow = ['a', 'e', 'i', 'o', 'u']\n(dx, dy) = ([-1, 1, 0, 0], [0, 0, 1, -1])\n\ndef bo(i):\n    return ord(i) - ord('0')\nfile = 1\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\ndef solve():\n    pw = [0] * 62\n    pw[0] = 1\n    for i in range(1, 62):\n        pw[i] = 2 * pw[i - 1]\n    for i in range(1, 62):\n        pw[i] += pw[i - 1]\n    for _ in range(ii()):\n        (x, y) = mi()\n        if y % x:\n            print('-1')\n            continue\n        c = y // x\n        cnt = 0\n        ok = True\n        x1 = set()\n        while c:\n            c2 = bisect_right(pw, c)\n            c -= pw[c2 - 1]\n            if c2 in x1:\n                print('-1')\n                ok = False\n                break\n            x1.add(c2)\n            cnt += c2\n            if c:\n                cnt += 1\n        if ok:\n            print(cnt)\nsolve()", "ref = [(1, 1)]\ni = 1\nwhile ref[i - 1][0] + (1 << i) <= 10 ** 18:\n    ref.append((ref[i - 1][0] + (1 << i), i + 1))\n    i += 1\nfor __ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n    else:\n        target = y // x\n        (count, ans) = (0, 0)\n        for i in reversed(range(len(ref))):\n            if ref[i][0] <= target:\n                ans += ref[i][1]\n                target -= ref[i][0]\n                count += 1\n        if target == 0:\n            print(ans + (count - 1))\n        else:\n            print(-1)", "a = [1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215, 33554431, 67108863, 134217727, 268435455, 536870911, 1073741823, 2147483647, 4294967295, 8589934591, 17179869183, 34359738367, 68719476735, 137438953471, 274877906943, 549755813887, 1099511627775, 2199023255551, 4398046511103, 8796093022207, 17592186044415, 35184372088831, 70368744177663, 140737488355327, 281474976710655, 562949953421311, 1125899906842623, 2251799813685247, 4503599627370495, 9007199254740991, 18014398509481983, 36028797018963967, 72057594037927935, 144115188075855871, 288230376151711743, 576460752303423487, 1152921504606846975, 2305843009213693951, 4611686018427387903, 9223372036854775807, 18446744073709551615, 36893488147419103231, 73786976294838206463]\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if y % x != 0:\n        print(-1)\n        continue\n    y //= x\n    j = len(a) - 1\n    c = 0\n    s = 0\n    while j != -1:\n        while j != -1 and a[j] > y:\n            j -= 1\n        if j == -1:\n            break\n        c += 1\n        y -= a[j]\n        s += len(bin(a[j])[2:])\n        j -= 1\n    if y:\n        print(-1)\n    else:\n        print(s + c - 1)", "import sys\nimport math\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nfor _ in range(int(input())):\n    (x, y) = list(map(int, input().split()))\n    if y % x != 0:\n        print(-1)\n    else:\n        a1 = y // x\n        k = 1\n        while True:\n            a1 = y // x + k\n            if a1 % 2 == 0:\n                s1 = str(bin(a1))[2:]\n                if k == s1.count('1'):\n                    ans = k - 1\n                    s1 = s1[::-1]\n                    for i in range(len(s1)):\n                        if s1[i] == '1':\n                            ans += i\n                    print(ans)\n                    break\n                k += 2\n            else:\n                k += 1\n            if k > math.log(a1, 2):\n                print(-1)\n                break", "def solve(x, y, ans):\n    if y % x != 0:\n        ans.append('-1')\n        return\n    y = y // x\n    min_minutes = float('inf')\n    for k in range(1, 66):\n        y_bin = bin(y + k)[2:]\n        if y_bin.count('1') == k:\n            minutes = 0\n            y_bin = y_bin[::-1]\n            for j in range(len(y_bin)):\n                if y_bin[j] == '1':\n                    minutes += j\n            min_minutes = min(min_minutes, minutes + k - 1)\n    if min_minutes == float('inf'):\n        ans.append('-1')\n        return\n    ans.append(str(min_minutes))\n\ndef main():\n    t = int(input())\n    ans = []\n    for i in range(t):\n        (x, y) = map(int, input().split())\n        solve(x, y, ans)\n    print('\\n'.join(ans))\nmain()", "for _ in range(int(input())):\n    (X, Y) = map(int, input().split())\n    alpha = []\n    m = 1\n    while m * X <= Y:\n        alpha.append(m * X)\n        m = 2 * m + 1\n    cnt = 0\n    for i in range(len(alpha) - 1, -1, -1):\n        if alpha[i] <= Y:\n            Y -= alpha[i]\n            cnt += i + 2\n    cnt -= 1\n    if Y != 0:\n        print(-1)\n    else:\n        print(cnt)", "li = [2 ** i - 1 for i in range(1, 61)]\n\ndef sure(m):\n    seen = []\n    i = 60\n    for it in li[-1::-1]:\n        if it <= m:\n            m -= it\n            seen.append(i)\n        if m == 0:\n            break\n        i -= 1\n    if m != 0:\n        return (False, [])\n    return (True, seen)\n\ndef func(x, y):\n    if y % x:\n        return -1\n    d = y // x\n    (st, li) = sure(d)\n    if not st:\n        return -1\n    ans = sum(li) + len(li) - 1\n    return ans\n\ndef isSubsetSum(Set, n, sm):\n    subset = [[False for i in range(sm + 1)] for i in range(n + 1)]\n    for i in range(n + 1):\n        subset[i][0] = True\n    for i in range(1, sm + 1):\n        subset[0][i] = False\n    for i in range(1, n + 1):\n        for j in range(1, sm + 1):\n            if j < Set[i - 1]:\n                subset[i][j] = subset[i - 1][j]\n            if j >= Set[i - 1]:\n                subset[i][j] = subset[i - 1][j] or subset[i - 1][j - Set[i - 1]]\n    return subset[n][sm]\nfor i in range(1, 0):\n    if isSubsetSum(li, len(li), i):\n        print(i)\n        print(func(1, i))\n        input()\n    elif func(1, i) == -1:\n        continue\n    else:\n        print('BAD', i)\n        input()\nt = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    print(func(x, y))"]