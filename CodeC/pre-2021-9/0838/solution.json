["from math import *\n(n, x) = map(int, input().split())\nv = list(map(int, input().split()))\nf = n\ns = 0\nv.sort()\nfor i in range(n):\n    val = ceil(v[i] / 2)\n    if val <= x:\n        v[i] = v[i] - val\n        f -= 1\n        x = x - val\n    else:\n        break\nfor i in range(n):\n    if v[i] <= x:\n        s += 1\n        x = x - v[i]\n    else:\n        break\nprint(f, s)", "from math import *\n(n, x) = map(int, input().split())\nv = list(map(int, input().split()))\nf = n\ns = 0\nv.sort()\nfor i in range(n):\n    val = ceil(v[i] / 2)\n    if val <= x:\n        v[i] = v[i] - val\n        f -= 1\n        x = x - val\n    else:\n        break\nfor i in range(n):\n    if v[i] <= x:\n        s += 1\n        x = x - v[i]\n    else:\n        break\nprint(f, s)", "from math import *\n(n, x) = map(int, input().split())\nv = list(map(int, input().split()))\nf = n\ns = 0\nv.sort()\nfor i in range(n):\n    val = ceil(v[i] / 2)\n    if val <= x:\n        v[i] = v[i] - val\n        f -= 1\n        x = x - val\n    else:\n        break\nfor i in range(n):\n    if v[i] <= x:\n        s += 1\n        x = x - v[i]\n    else:\n        break\nprint(f, s)", "from math import *\n(n, x) = map(int, input().split())\nv = list(map(int, input().split()))\nf = n\ns = 0\nv.sort()\nfor i in range(n):\n    val = ceil(v[i] / 2)\n    if val <= x:\n        v[i] = v[i] - val\n        f -= 1\n        x = x - val\n    else:\n        break\nfor i in range(n):\n    if v[i] <= x:\n        s += 1\n        x = x - v[i]\n    else:\n        break\nprint(f, s)", "from math import *\n(n, x) = map(int, input().split())\nv = list(map(int, input().split()))\nf = n\ns = 0\nv.sort()\nfor i in range(n):\n    val = ceil(v[i] / 2)\n    if val <= x:\n        v[i] = v[i] - val\n        f -= 1\n        x = x - val\n    else:\n        break\nfor i in range(n):\n    if v[i] <= x:\n        s += 1\n        x = x - v[i]\n    else:\n        break\nprint(f, s)", "from math import ceil\n(n, x) = map(int, input().split())\nl = list(map(int, input().split()))\nl.sort()\nf = n\ns = 0\nfor i in range(n):\n    m = ceil(l[i] / 2)\n    if m <= x:\n        x -= m\n        l[i] -= m\n        f -= 1\n    else:\n        break\nfor j in range(n):\n    if l[j] <= x:\n        s += 1\n        x -= l[j]\n    else:\n        break\nprint(f, s)", "from math import *\n(n, x) = map(int, input().split())\narr = list(map(int, input().split()))\nus = n\nss = 0\narr.sort()\nfor i in range(n):\n    ele = ceil(arr[i] / 2)\n    if ele <= x:\n        arr[i] = arr[i] - ele\n        us -= 1\n        x = x - ele\n    else:\n        break\nfor i in range(n):\n    if arr[i] <= x:\n        ss += 1\n        x = x - arr[i]\n    else:\n        break\nprint(us, ss)", "from math import *\n(n, x) = map(int, input().split())\narr = list(map(int, input().split()))\nus = n\nss = 0\narr.sort()\nfor i in range(n):\n    ele = ceil(arr[i] / 2)\n    if ele <= x:\n        arr[i] = arr[i] - ele\n        us -= 1\n        x = x - ele\n    else:\n        break\nfor i in range(n):\n    if arr[i] <= x:\n        ss += 1\n        x = x - arr[i]\n    else:\n        break\nprint(us, ss)", "from math import *\n(n, x) = map(int, input().split())\narr = list(map(int, input().split()))\narr.sort()\nfp = n\nsp = 0\nfor i in range(n):\n    mid = ceil(arr[i] / 2)\n    if mid <= x:\n        x = x - mid\n        arr[i] = arr[i] - mid\n        fp -= 1\n    else:\n        break\nfor i in range(n):\n    if arr[i] <= x:\n        sp += 1\n        x = x - arr[i]\n    else:\n        break\nprint(fp, sp)", "(n, x) = map(int, input().split())\nl = [int(i) for i in input().split()]\nif sum(l) <= x:\n    print(0, n)\n    exit()\nl.sort()\nsad = 0\ngood = 0\nfrom math import ceil\nrem = []\nfor i in l:\n    if x >= ceil(i / 2):\n        curr = ceil(i / 2)\n        rem.append(i - curr)\n        x -= curr\n    else:\n        sad += 1\nprint(sad, end=' ')\nrem.sort()\nfor i in rem:\n    if x >= i:\n        x -= i\n        good += 1\nprint(good)", "import math\nnx = input().split(' ')\n(n, x) = (int(nx[0]), int(nx[1]))\na = list(map(int, input().split(' ')))\na.sort()\n(failed, success) = (n, 0)\nfor i in range(n):\n    if x - math.ceil(a[i] / 2) >= 0:\n        failed -= 1\n        x -= math.ceil(a[i] / 2)\n        a[i] -= math.ceil(a[i] / 2)\n    else:\n        break\nfor i in range(n):\n    if x - a[i] >= 0:\n        success += 1\n        x -= a[i]\n    else:\n        break\nprint('{} {}'.format(failed, success))"]