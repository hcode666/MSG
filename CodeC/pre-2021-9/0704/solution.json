["for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    temp = sorted(arr)\n    res = arr\n    for i in range(k):\n        res[i::k] = sorted(arr[i::k])\n    if res == temp:\n        print('yes')\n    else:\n        print('no')", "from collections import Counter, defaultdict\nimport math\nimport sys\nfrom functools import reduce\n\ndef solve(n, l, k):\n    d = defaultdict(list)\n    for i in range(k):\n        for j in range(i, n, k):\n            d[i].append(l[j])\n        d[i].sort()\n    cur = []\n    for i in range(n):\n        for j in range(k):\n            if len(d[j]) <= i:\n                break\n            cur.append(d[j][i])\n    print('yes' if cur == sorted(cur) else 'no')\nt = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    solve(n, arr, k)", "from collections import Counter, defaultdict\nimport math\nimport sys\nfrom functools import reduce\n\ndef solve(n, l, k):\n    d = defaultdict(list)\n    for i in range(k):\n        for j in range(i, n, k):\n            d[i].append(l[j])\n        d[i].sort()\n    cur = []\n    for i in range(n):\n        for j in range(k):\n            if len(d[j]) <= i:\n                break\n            cur.append(d[j][i])\n    print('yes' if cur == sorted(cur) else 'no')\nt = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    solve(n, arr, k)", "import sys\nfrom collections import Counter, deque\nfrom math import gcd, sqrt, ceil\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(sys.stdin.readline())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    (n, k) = li()\n    a = li()\n    f = 0\n    for i in range(k):\n        lst = [a[i]]\n        j = i\n        try:\n            while 1:\n                j += k\n                lst.append(a[j])\n        except:\n            lst.sort()\n            j = 0\n            a[i] = lst[j]\n            try:\n                while 1:\n                    i += k\n                    j += 1\n                    a[i] = lst[j]\n            except:\n                pass\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            f = 1\n            break\n    if f:\n        print('no')\n    else:\n        print('yes')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for j in range(k):\n        l[j::k] = sorted(l[j::k])\n    print('yes' if l == sorted(l) else 'no')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for j in range(k):\n        l[j::k] = sorted(l[j::k])\n    print('yes' if l == sorted(l) else 'no')", "for i in range(int(input())):\n    (N, K) = map(int, input().split())\n    num = list(map(int, input().split()))\n    for j in range(K):\n        num[j::K] = sorted(num[j::K])\n    if num == sorted(num):\n        print('yes')\n    else:\n        print('no')", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    arr = list(map(int, input().strip().split()))\n    check = sorted(arr)\n    biglist = list()\n    for i in range(k):\n        biglist.append(arr[i:n:k])\n    for i in range(len(biglist)):\n        biglist[i] = sorted(biglist[i])\n    sizes = [len(li) for li in biglist]\n    maxi = max(sizes)\n    ans = list()\n    for j in range(maxi):\n        for i in range(len(biglist)):\n            if j < sizes[i]:\n                ans.append(biglist[i][j])\n    if check == ans:\n        print('yes')\n    else:\n        print('no')", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    arr = list(map(int, input().strip().split()))\n    check = sorted(arr)\n    biglist = list()\n    for i in range(k):\n        biglist.append(arr[i:n:k])\n    for i in range(len(biglist)):\n        biglist[i] = sorted(biglist[i])\n    sizes = [len(li) for li in biglist]\n    maxi = max(sizes)\n    ans = list()\n    for j in range(maxi):\n        for i in range(len(biglist)):\n            if j < sizes[i]:\n                ans.append(biglist[i][j])\n    if check == ans:\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    temp = sorted(arr)\n    res = arr\n    for i in range(k):\n        res[i::k] = sorted(arr[i::k])\n    if res == temp:\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    temp = sorted(l)\n    res = l\n    for i in range(k):\n        res[i::k] = sorted(l[i::k])\n    if res == temp:\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    swapList = {}\n    for index in range(0, n):\n        mod = index % k\n        listS = swapList.get(mod, -1)\n        if listS != -1:\n            swapList[mod].append(arr[index])\n        else:\n            swapList[mod] = [arr[index]]\n    size = len(swapList)\n    for index in range(size):\n        if len(swapList[index]) > 0:\n            swapList[index].sort()\n    answer = [None] * n\n    for index in range(size):\n        if len(swapList[index]) > 0:\n            start = index\n            for j in range(len(swapList[index])):\n                answer[start] = swapList[index][j]\n                start += k\n    check = 0\n    for i in range(n - 1):\n        if answer[i] <= answer[i + 1]:\n            check += 1\n    if check == n - 1:\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    swapList = {}\n    for index in range(0, n):\n        mod = index % k\n        listS = swapList.get(mod, -1)\n        if listS != -1:\n            swapList[mod].append(arr[index])\n        else:\n            swapList[mod] = [arr[index]]\n    size = len(swapList)\n    for index in range(size):\n        if len(swapList[index]) > 0:\n            swapList[index].sort()\n    answer = [None] * n\n    for index in range(size):\n        if len(swapList[index]) > 0:\n            start = index\n            for j in range(len(swapList[index])):\n                answer[start] = swapList[index][j]\n                start += k\n    check = 0\n    for i in range(n - 1):\n        if answer[i] <= answer[i + 1]:\n            check += 1\n    if check == n - 1:\n        print('yes')\n    else:\n        print('no')", "from collections import defaultdict as dd\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if b == 1:\n        print('yes')\n        continue\n    else:\n        d = dd(list)\n        for j in range(a):\n            d[j % b].append(l[j])\n        for j in d.keys():\n            d[j] = sorted(d[j])\n        m = []\n        for j in range(a):\n            k = d[j % b].pop(0)\n            m.append(k)\n        l = sorted(l)\n        if m == l:\n            print('yes')\n        else:\n            print('no')", "for t in range(0, int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))[:n]\n    j = sorted(arr)\n    c = 0\n    res = arr\n    for i in range(k):\n        res[i::k] = sorted(arr[i::k])\n    if res == j:\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    res1 = lis.copy()\n    res1.sort()\n    for j in range(k):\n        res = lis[j::k]\n        res.sort()\n        z = j\n        for m in res:\n            if res1[z] != m:\n                break\n            else:\n                z += k\n        else:\n            continue\n        break\n    else:\n        print('yes')\n        continue\n    print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = arr\n    for i in range(k):\n        s[i::k] = sorted(s[i::k])\n    if s == sorted(arr):\n        print('yes')\n    else:\n        print('no')", "from heapq import heapify, heappush, heappop\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    dic = {}\n    for i in range(k):\n        lis = []\n        j = 0\n        while i + j * k < n:\n            lis.append(l[i + j * k])\n            j += 1\n        dic[i] = lis\n    keys = list(dic.keys())\n    lenk = k\n    for i in keys:\n        heapify(dic[i])\n    for i in keys:\n        j = 0\n        lis = dic[i]\n        while i + j * k < n:\n            l[i + j * k] = heappop(lis)\n            j += 1\n    flag = True\n    for i in range(1, n):\n        if l[i] < l[i - 1]:\n            flag = False\n            break\n    if flag:\n        print('yes')\n    else:\n        print('no')", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = defaultdict(list)\n    for i in range(k):\n        for j in range(i, n, k):\n            d[i].append(l[j])\n        d[i].sort()\n    cur = []\n    for i in range(n):\n        for j in range(k):\n            if len(d[j]) <= i:\n                break\n            cur.append(d[j][i])\n    print('yes' if cur == sorted(cur) else 'no')", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = defaultdict(list)\n    for i in range(k):\n        for j in range(i, n, k):\n            d[i].append(l[j])\n        d[i].sort()\n    cur = []\n    for i in range(n):\n        for j in range(k):\n            if len(d[j]) <= i:\n                break\n            cur.append(d[j][i])\n    print('yes' if cur == sorted(cur) else 'no')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(k):\n        l[i::k] = sorted(l[i::k])\n    if l == sorted(l):\n        print('yes')\n    else:\n        print('no')", "for i in range(int(input())):\n    (N, K) = map(int, input().split())\n    num = list(map(int, input().split()))\n    for j in range(K):\n        num[j::K] = sorted(num[j::K])\n    if num == sorted(num):\n        print('yes')\n    else:\n        print('no')", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    num = list(map(int, input().split()))\n    for j in range(K):\n        num[j::K] = sorted(num[j::K])\n    if num == sorted(num):\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    r = sorted(l)\n    for i in range(k):\n        l[i::k] = sorted(l[i::k])\n    print('yes' if l == r else 'no')", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(k):\n        l[i::k] = sorted(l[i::k])\n    if l == sorted(l):\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(k):\n        l[i::k] = sorted(l[i::k])\n    if l == sorted(l):\n        print('yes')\n    else:\n        print('no')", "a = int(input())\nfor i in range(a):\n    (b, k) = map(int, input().split())\n    f = list(map(int, input().split()))\n    for i in range(k):\n        f[i:b:k] = sorted(f[i:b:k])\n    if f == sorted(f):\n        print('yes')\n    else:\n        print('no')", "a = int(input())\nfor i in range(a):\n    (b, k) = map(int, input().split())\n    f = list(map(int, input().split()))\n    for i in range(k):\n        f[i::k] = sorted(f[i::k])\n    if f == sorted(f):\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    srt = sorted(arr)\n    Dict = {}\n    for st in range(k):\n        Dict[st] = []\n    st = 0\n    retreat = k - 1\n    for i in range(n):\n        Dict[st].append(srt[i])\n        st = 0 if st == retreat else st + 1\n    flag = True\n    st = 0\n    retreat = k - 1\n    for i in range(n):\n        if arr[i] in Dict[st]:\n            st = 0 if st == retreat else st + 1\n        else:\n            flag = False\n            break\n    if flag:\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nfor z in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for j in range(k):\n        a[j::k] = sorted(a[j::k])\n    if a == sorted(a):\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(k):\n        l[i::k] = sorted(l[i::k])\n    if l == sorted(l):\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nfor z in range(t):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    for i in range(k):\n        lis1 = lis[i:n:k]\n        lis1.sort()\n        j = i\n        c = 0\n        while j < n:\n            lis[j] = lis1[c]\n            j = j + k\n            c += 1\n    for i in range(n - 1):\n        if lis[i + 1] < lis[i]:\n            print('no')\n            break\n    else:\n        print('yes')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ar = [int(x) for x in input().split()]\n    st = sorted(ar)\n    for i in range(k):\n        a = [ar[j] for j in range(i, n, k)]\n        b = [st[j] for j in range(i, n, k)]\n        if Counter(a) != Counter(b):\n            print('no')\n            break\n    else:\n        print('yes')", "from sys import stdin as sin\n\ndef gint():\n    return int(sin.readline())\n\ndef gmap():\n    return map(int, sin.readline().split())\n\ndef glist():\n    return list(map(int, sin.readline().split()))\n\ndef gstr():\n    return sin.readline()\nfor _ in range(gint()):\n    (n, k) = gmap()\n    l = glist()\n    p = []\n    for i in range(k):\n        p.append([])\n    for i in range(n):\n        p[i % k].append(l[i])\n    for i in range(k):\n        p[i].sort()\n    h = []\n    for i in range(n):\n        h.append(p[i % k].pop(0))\n    if h == sorted(l):\n        print('yes')\n    else:\n        print('no')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ar = [int(x) for x in input().split()]\n    st = sorted(ar)\n    for i in range(k):\n        a = [ar[j] for j in range(i, n, k)]\n        b = [st[j] for j in range(i, n, k)]\n        if Counter(a) != Counter(b):\n            print('no')\n            break\n    else:\n        print('yes')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ar = [int(x) for x in input().split()]\n    st = sorted(ar)\n    for i in range(k):\n        a = [ar[j] for j in range(i, n, k)]\n        b = [st[j] for j in range(i, n, k)]\n        if Counter(a) != Counter(b):\n            print('no')\n            break\n    else:\n        print('yes')", "T = int(input())\nans = []\nfor _ in range(T):\n    (N, K) = [int(i) for i in input().split()]\n    A = [int(i) for i in input().split()]\n    lists = [[] for i in range(K)]\n    for i in range(N):\n        lists[i % K].append(A[i])\n    for i in range(len(lists)):\n        lists[i].sort()\n    new = [0 for i in range(N)]\n    for i in range(len(lists)):\n        for j in range(len(lists[i])):\n            new[i + j * K] = lists[i][j]\n    s = ''\n    for i in range(N - 1):\n        if new[i] > new[i + 1]:\n            s = 'no'\n            break\n    else:\n        s = 'yes'\n    ans.append(s)\nfor i in ans:\n    print(i)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = a[:]\n    s.sort()\n    for i in range(k):\n        t = [a[j] for j in range(i, n, k)]\n        x = [s[z] for z in range(i, n, k)]\n        if Counter(t) != Counter(x):\n            print('no')\n            break\n    else:\n        print('yes')", "import collections\nt = int(input().strip())\nfor i in range(t):\n    (n, k) = list(map(int, input().strip().split(' ')))\n    a = list(map(int, input().strip().split(' ')))\n    s = a.copy()\n    s.sort()\n    f = 1\n    for i in range(0, k):\n        t1 = [a[j] for j in range(i, n, k)]\n        t2 = [s[j] for j in range(i, n, k)]\n        if collections.Counter(t1) != collections.Counter(t2):\n            f = 0\n            break\n    if f == 1:\n        print('yes')\n    else:\n        print('no')", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ls = [int(x) for x in input().split()]\n    d1 = defaultdict(int)\n    d2 = defaultdict(int)\n    arr = ls[:]\n    arr.sort()\n    for i in range(n):\n        d1[ls[i]] = i\n        d2[arr[i]] = i\n    f = 1\n    for j in ls:\n        if abs(d1[j] - d2[j]) == 0:\n            continue\n        elif abs(d1[j] - d2[j]) >= k:\n            continue\n        else:\n            f = 0\n            break\n    if f == 0:\n        print('no')\n    else:\n        print('yes')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l1 = []\n    l2 = []\n    p = 0\n    for i in range(k):\n        p1 = p\n        s = []\n        while p1 < n:\n            s.append(l[p1])\n            p1 += k\n        l1.append(s)\n        p += 1\n    for i in range(k):\n        l1[i].sort()\n    for i in range(len(l1[0])):\n        for j in range(k):\n            if len(l1[j]) >= i + 1:\n                l2.append(l1[j][i])\n    l.sort()\n    if l2 == l:\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(k):\n        a[i::k] = sorted(a[i::k])\n    if a == sorted(a):\n        print('yes')\n    else:\n        print('no')", "for T in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(k):\n        (b, index) = ([], 0)\n        for j in range(i, len(a), k):\n            b.append(a[j])\n        b.sort()\n        for j in range(i, len(a), k):\n            a[j] = b[index]\n            index += 1\n    if a == sorted(a):\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    arr = []\n    for i in range(0, k):\n        arr.append([])\n    for i in range(0, n):\n        arr[i % k].append(a[i])\n    ans = []\n    ref = []\n    for i in range(0, k):\n        arr[i].sort()\n    for i in range(0, n):\n        ans.append(arr[i % k][i // k])\n        ref.append(arr[i % k][i // k])\n    ref.sort()\n    if ans == ref:\n        print('yes')\n    else:\n        print('no')", "import sys\n\ndef fin():\n    return sys.stdin.readline().strip()\n\ndef fout(s, sep='\\n'):\n    sys.stdout.write(str(s) + sep)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, fin().split())\n    a = [int(x) for x in fin().split()]\n    if k == 1:\n        print('yes')\n        continue\n    mapping = {}\n    for (index, val) in enumerate(a):\n        if val in mapping:\n            mapping[val].add(index)\n        else:\n            mapping[val] = set([index])\n    a.sort()\n    for i in range(n):\n        flag = False\n        for index in mapping[a[i]]:\n            if abs(index - i) % k == 0:\n                mapping[a[i]].remove(index)\n                flag = True\n                break\n        if not flag:\n            print('no')\n            break\n        if i == n - 1:\n            print('yes')", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    li = l.copy()\n    li.sort()\n    for i in range(k):\n        l[i::k] = sorted(l[i::k])\n    if len(l) == len(li) and len(l) == sum([1 for (i, j) in zip(l, li) if i == j]):\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nwhile t:\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    for i in range(0, k):\n        c = 0\n        b = []\n        for j in range(i, n, k):\n            b.append(a[j])\n        b.sort()\n        for j in range(i, n, k):\n            a[j] = b[c]\n            c += 1\n    for i in range(0, n - 1, 1):\n        if a[i] > a[i + 1]:\n            print('no')\n            break\n    else:\n        print('yes')\n    t = t - 1", "def array_swap(arr, i, k):\n    if i < k:\n        return arr\n    while arr[i] < arr[i - k] and i >= k:\n        (arr[i], arr[i - k]) = (arr[i - k], arr[i])\n        i -= k\n    return arr\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        print('yes')\n        continue\n    for i in range(n - k):\n        if arr[i] > arr[i + k]:\n            (arr[i], arr[i + k]) = (arr[i + k], arr[i])\n            arr = array_swap(arr, i, k)\n    print('yes' if arr == sorted(arr) else 'no')", "t = int(input())\nfor _ in range(t):\n    (N, K) = map(int, input().strip().split())\n    Seq = list(map(int, input().split()))\n    z = Seq.copy()\n    z.sort()\n    for i in range(K):\n        Seq[i::K] = sorted(Seq[i::K])\n    if z == Seq:\n        print('yes')\n    else:\n        print('no')", "test = int(input())\nfor _ in range(test):\n    (n, k) = map(int, input().split())\n    array = list(map(int, input().split()))\n    dictionary = {}\n    for i in range(n):\n        temp = i % k\n        if temp in dictionary:\n            dictionary[temp].append(array[i])\n        else:\n            dictionary[temp] = [array[i]]\n    for i in range(k):\n        dictionary[i].sort()\n    result = []\n    for i in range(n):\n        temp = i % k\n        if len(dictionary[temp]) == 0:\n            continue\n        else:\n            result.append(dictionary[temp][0])\n            dictionary[temp].pop(0)\n    flag = 0\n    for i in range(n - 1):\n        if result[i] > result[i + 1]:\n            flag = 1\n            break\n    if flag == 0:\n        print('yes')\n    else:\n        print('no')", "test = int(input())\nfor _ in range(test):\n    (n, k) = map(int, input().split())\n    array = list(map(int, input().split()))\n    dictionary = {}\n    for i in range(n):\n        temp = i % k\n        if temp in dictionary:\n            dictionary[temp].append(array[i])\n        else:\n            dictionary[temp] = [array[i]]\n    for i in range(k):\n        dictionary[i].sort()\n    result = []\n    for i in range(n):\n        temp = i % k\n        if len(dictionary[temp]) == 0:\n            continue\n        else:\n            temp1 = dictionary[temp]\n            result.append(temp1[0])\n            dictionary[temp].pop(0)\n    flag = 0\n    for i in range(n - 1):\n        if result[i] > result[i + 1]:\n            flag = 1\n            break\n    if flag == 0:\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    h = a.copy()\n    h.sort()\n    for i in range(k):\n        a[i::k] = sorted(a[i::k])\n    if h == a:\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for i in range(k):\n        arr[i::k] = sorted(arr[i::k])\n    if arr == sorted(arr):\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = sorted(arr)\n    for i in range(k):\n        arr[i::k] = sorted(arr[i::k])\n    if arr == s:\n        print('yes')\n    else:\n        print('no')", "ted = int(input())\nfor i in range(ted):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    for i in range(k):\n        lis2 = []\n        for j in range(i, n, k):\n            lis2.append(lis[j])\n        lis2.sort()\n        sas = 0\n        for j in range(i, n, k):\n            lis[j] = lis2[sas]\n            sas += 1\n    state = True\n    for i in range(n - 1):\n        if lis[i] > lis[i + 1]:\n            state = False\n            break\n    if state:\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = sorted(arr)\n    for i in range(k):\n        arr[i::k] = sorted(arr[i::k])\n    if arr == s:\n        print('yes')\n    else:\n        print('no')", "from collections import defaultdict\nfor x in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    d = defaultdict(list)\n    for i in range(n):\n        d[i % k].append(m[i])\n    for i in d:\n        d[i].sort()\n    a = []\n    for i in range(n):\n        l = i // k\n        a.append(d[i % k][l])\n    r = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            r = 1\n            break\n    if r == 0:\n        print('yes')\n    else:\n        print('no')", "for k in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    x = [[] for i in range(k)]\n    for i in range(n):\n        x[i % k].append(l[i])\n    for i in range(k):\n        x[i].sort()\n    l.sort()\n    y = [0 for i in range(n)]\n    c = [i for i in range(k)]\n    for i in range(k):\n        for j in x[i]:\n            y[c[i]] = j\n            c[i] += k\n    if l == y:\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = sorted(l)\n    flag = 0\n    ind1 = {}\n    ind2 = {}\n    for i in range(n):\n        ind1[l[i]] = i\n        ind2[s[i]] = i\n    c = 0\n    for i in ind1:\n        if ind1[i] != ind2[i]:\n            if abs(ind1[i] - ind2[i]) < k:\n                flag = 1\n                break\n    if flag == 0:\n        print('yes')\n    else:\n        print('no')", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    t = sorted(a).copy()\n    dic = {}\n    for i in range(n):\n        try:\n            dic[a[i]].append((i + 1) % k)\n        except:\n            dic[a[i]] = [(i + 1) % k]\n    flag1 = 0\n    for i in range(n):\n        temp = dic[t[i]]\n        flag = 0\n        for j in range(len(temp)):\n            if temp[j] == (i + 1) % k:\n                temp.pop(j)\n                flag = 1\n                break\n        if flag == 0:\n            flag1 = 1\n            break\n    if flag1:\n        print('no')\n    else:\n        print('yes')", "def solve():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for i in range(k):\n        arr[i::k] = sorted(arr[i::k])\n    p = sorted(arr)\n    if p == arr:\n        print('yes')\n    else:\n        print('no')\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "def solve():\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    for i in range(k):\n        a[i::k] = sorted(a[i::k])\n    p = sorted(a)\n    if p == a:\n        print('yes')\n    else:\n        print('no')\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    for i in range(k):\n        a[i::k] = sorted(a[i::k])\n    p = sorted(a)\n    if p == a:\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = {}\n    for i in range(k):\n        s[i] = []\n    for i in range(n):\n        s[i % k].append(l[i])\n    for i in range(k):\n        s[i].sort()\n        c = i\n        for j in range(len(s[i])):\n            l[c] = s[i][j]\n            c += k\n    flag = 0\n    for i in range(n - 1):\n        if l[i] > l[i + 1]:\n            flag = 1\n            break\n    if flag == 1:\n        print('no')\n    else:\n        print('yes')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = {}\n    for i in range(k):\n        s[i] = []\n    for i in range(n):\n        s[i % k].append(l[i])\n    for i in range(k):\n        s[i].sort()\n        c = i\n        for j in range(len(s[i])):\n            l[c] = s[i][j]\n            c += k\n    flag = 0\n    for i in range(n - 1):\n        if l[i] > l[i + 1]:\n            flag = 1\n            break\n    if flag == 1:\n        print('no')\n    else:\n        print('yes')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = {}\n    for i in range(k):\n        s[i] = []\n    for i in range(n):\n        s[i % k].append(l[i])\n    for i in range(k):\n        s[i].sort()\n        c = i\n        for j in range(len(s[i])):\n            l[c] = s[i][j]\n            c += k\n    flag = 0\n    for i in range(n - 1):\n        if l[i] > l[i + 1]:\n            flag = 1\n            break\n    if flag == 1:\n        print('no')\n    else:\n        print('yes')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = {}\n    for i in range(k):\n        s[i] = []\n    for i in range(n):\n        s[i % k].append(l[i])\n    for i in range(k):\n        s[i].sort()\n        c = i\n        for j in range(len(s[i])):\n            l[c] = s[i][j]\n            c += k\n    flag = 0\n    for i in range(n - 1):\n        if l[i] > l[i + 1]:\n            flag = 1\n            break\n    if flag == 1:\n        print('no')\n    else:\n        print('yes')", "def inpNum():\n    return int(input())\n\ndef inpNums():\n    return map(int, input().split())\n\ndef inpList():\n    return list(map(int, input().split()))\n\ndef binSearch(arr, x, l, r):\n    while l <= r:\n        m = l + (r - l) // 2\n        if arr[m] == x:\n            return m\n        elif arr[m] > x:\n            r = m - 1\n        else:\n            l = m + 1\n\ndef solve():\n    (n, k) = inpNums()\n    ai = inpList()\n    si = ai.copy()\n    si.sort()\n    for i in range(k):\n        (p, q) = ([], [])\n        for ii in range(i, n, k):\n            p.append(ai[ii])\n            q.append(si[ii])\n        p.sort()\n        if p != q:\n            return 'no'\n    return 'yes'\nfor t in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = {}\n    for i in range(k):\n        s[i] = []\n    for i in range(n):\n        s[i % k].append(l[i])\n    for i in range(k):\n        s[i].sort()\n        c = i\n        for j in range(len(s[i])):\n            l[c] = s[i][j]\n            c += k\n    flag = 0\n    for i in range(n - 1):\n        if l[i] > l[i + 1]:\n            flag = 1\n            break\n    if flag == 1:\n        print('no')\n    else:\n        print('yes')", "T = int(input())\nwhile T:\n    T -= 1\n    (N, K) = [int(X) for X in input().split(' ')]\n    A = [int(X) for X in input().split(' ')]\n    A2 = [0 for i in range(N)]\n    for i in range(K):\n        A3 = sorted(range(i, N, K), key=lambda X: A[X])\n        counter = 0\n        for j in A3:\n            A2[i + K * counter] = A[j]\n            counter += 1\n    flag = 'yes'\n    for i in range(N - 1):\n        if A2[i] > A2[i + 1]:\n            flag = 'no'\n            break\n    print(flag)", "k = int(input())\nfor i in range(k):\n    s = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    for i in range(s[1]):\n        j = i\n        z = []\n        while j < s[0]:\n            z.append(m[j])\n            j += s[1]\n        z.sort()\n        j = i\n        o = 0\n        while j < s[0]:\n            m[j] = z[o]\n            o += 1\n            j += s[1]\n        l = 1\n    while l < s[0]:\n        if m[l] < m[l - 1]:\n            break\n        l += 1\n    if l == s[0]:\n        print('yes')\n    else:\n        print('no')", "def binSearch(arr, x, l, r):\n    if r >= l:\n        mid = (l + r) // 2\n        if arr[mid] == x:\n            return mid\n        elif arr[mid] > x:\n            return binSearch(arr, x, l, mid - 1)\n        else:\n            return binSearch(arr, x, mid + 1, r)\n    else:\n        return -1\nt = int(input())\nfor _ in range(t):\n    (N, K) = [int(i) for i in input().split(' ')]\n    arr = [int(i) for i in input().split(' ')]\n    temp = arr.copy()\n    temp.sort()\n    possible = True\n    for i in range(N):\n        num = arr[i]\n        ind = binSearch(temp, num, 0, N - 1)\n        back = ind\n        front = ind\n        found = False\n        while True:\n            if back < 0 or temp[back] != num:\n                break\n            if abs(i - back) % K == 0:\n                found = True\n                break\n            back -= 1\n        while True:\n            if front >= N or temp[front] != num:\n                break\n            if abs(i - front) % K == 0:\n                found = True\n                break\n            front += 1\n        if not found:\n            possible = False\n            break\n    if possible:\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(k):\n        l[i::k] = sorted(l[i::k])\n    if l == sorted(l):\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(k):\n        a[i::k] = sorted(a[i::k])\n    if a == sorted(a):\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nfor i in range(t):\n    (n, s) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for j in range(0, s):\n        arr[j::s] = sorted(arr[j::s])\n    if arr == sorted(arr):\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(k):\n        l[i::k] = sorted(l[i::k])\n    if l == sorted(l):\n        print('yes')\n    else:\n        print('no')", "for test in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(k):\n        temp = []\n        for j in range(i, n, k):\n            temp.append(l[j])\n        temp.sort()\n        c = 0\n        for j in range(i, n, k):\n            l[j] = temp[c]\n            c += 1\n    print('yes' if sorted(l) == l else 'no')", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    for i in range(k):\n        x[i::k] = sorted(x[i::k])\n    if x == sorted(x):\n        print('yes')\n    else:\n        print('no')\n    t = t - 1", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(k):\n        l[i::k] = sorted(l[i::k])\n    if l == sorted(l):\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(k):\n        l[i::k] = sorted(l[i::k])\n    if l == sorted(l):\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    A = input().split()\n    A = [int(ai) for ai in A]\n    A_ = list(A)\n    A.sort()\n    initGrps = [[] for i in range(0, k)]\n    for (i, ai) in enumerate(A_):\n        grp = (i + 1) % k\n        initGrps[grp].append(ai)\n    finGrps = [[] for i in range(0, k)]\n    for (i, ai) in enumerate(A):\n        grp = (i + 1) % k\n        finGrps[grp].append(ai)\n    ans = True\n    for i in range(0, k):\n        if sorted(initGrps[i]) != sorted(finGrps[i]):\n            ans = False\n            break\n    if ans:\n        print('yes')\n    else:\n        print('no')", "for i in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    l = list(map(int, input().split()))\n    for j in range(k):\n        l[j::k] = sorted(l[j::k])\n    if l == sorted(l):\n        print('yes')\n    else:\n        print('no')", "for i in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    l = list(map(int, input().split()))\n    for j in range(k):\n        l[j::k] = sorted(l[j::k])\n    if l == sorted(l):\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    dic = {i: ar[i] for i in range(n)}\n    dic = dict(sorted(dic.items(), key=lambda x: x[1]))\n    dic2 = {}\n    ar.sort()\n    for i in range(n):\n        if ar[i] in dic2:\n            dic2[ar[i]].append(i)\n        else:\n            dic2[ar[i]] = [i]\n    i = 0\n    fl2 = 1\n    for key in dic:\n        fl = 1\n        for i in dic2[dic[key]]:\n            if (key - i) % k == 0:\n                fl = 0\n                break\n        if fl:\n            fl2 = 0\n            break\n    if fl2:\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(j) for j in input().split()]\n    for j in range(k):\n        a[j::k] = sorted(a[j::k])\n    if a == sorted(a):\n        print('yes')\n    else:\n        print('no')", "def cook(arr, n, k):\n    v = []\n    for i in range(k):\n        for j in range(i, n, k):\n            v.append(arr[j])\n        v.sort()\n        x = 0\n        for j in range(i, n, k):\n            arr[j] = v[x]\n            x += 1\n        v = []\n    for i in range(n - 1):\n        if arr[i] > arr[i + 1]:\n            return False\n    return True\nn = int(input())\nfor i in range(n):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    if cook(l2, l1[0], l1[1]):\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(j) for j in input().split()]\n    for j in range(k):\n        a[j::k] = sorted(a[j::k])\n    if a == sorted(a):\n        print('yes')\n    else:\n        print('no')", "test = int(input())\nfor j in range(0, test):\n    num = input().split()\n    N = int(num[0])\n    K = int(num[1])\n    lst = [int(y) for y in input().split()]\n    sortlst = sorted(lst)\n    for i in range(0, K):\n        lst[i::K] = sorted(lst[i::K])\n    if lst == sortlst:\n        print('yes')\n    else:\n        print('no')", "test = int(input())\nfor _ in range(test):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(k):\n        l[i::k] = sorted(l[i::k])\n    if l == sorted(l):\n        print('yes')\n    else:\n        print('no')", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(k):\n        l[i::k] = sorted(l[i::k])\n    if l == sorted(l):\n        print('yes')\n    else:\n        print('no')\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    for i in range(k):\n        lst[i::k] = sorted(lst[i::k])\n    if lst == sorted(lst):\n        print('yes')\n    else:\n        print('no')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    for i in range(k):\n        lst[i::k] = sorted(lst[i::k])\n    if lst == sorted(lst):\n        print('yes')\n    else:\n        print('no')", "T = int(input())\nfor t in range(T):\n    (N, K) = [int(i) for i in input().split()]\n    A = [int(i) for i in input().split()]\n    sorted_A = sorted(A)\n    d = {key: [] for key in A}\n    for ele in enumerate(sorted_A):\n        d[ele[1]].append(ele[0])\n    break_flag = 0\n    for seq_seg_ind in range(K):\n        if break_flag:\n            break\n        ind = seq_seg_ind\n        while ind < N:\n            break_flag = 1\n            for val in d[A[ind]]:\n                if (val - seq_seg_ind) % K == 0:\n                    d[A[ind]].remove(val)\n                    break_flag = 0\n                    break\n            if break_flag:\n                break\n            ind += K\n    if break_flag:\n        print('no')\n    else:\n        print('yes')", "try:\n    t = int(input())\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        l = list(map(int, input().split()))\n        a = sorted(l)\n        for i in range(k):\n            l[i::k] = sorted(l[i::k])\n        if l == a:\n            print('yes')\n        else:\n            print('no')\nexcept:\n    None", "T = int(input())\nwhile T > 0:\n    (N, K) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(K):\n        b = []\n        for j in range(i, N, K):\n            b.append(a[j])\n        b.sort()\n        for j in range(i, N, K):\n            a[j] = b[(j - i) // K]\n    flag = True\n    for k in range(1, N):\n        if a[k] < a[k - 1]:\n            flag = False\n            break\n    if flag:\n        print('yes')\n    else:\n        print('no')\n    T -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l1 = []\n    l2 = []\n    l3 = []\n    i = 0\n    while i < n:\n        if i % k == 0:\n            l1.append(a[i])\n            i += 1\n        else:\n            l2.append(a[i])\n            i += 1\n    l1.sort()\n    l2.sort()\n    j = 0\n    co1 = 0\n    co2 = 0\n    while j < n:\n        if j % k == 0:\n            l3.append(l1[co1])\n            co1 += 1\n            j += 1\n        else:\n            l3.append(l2[co2])\n            co2 += 1\n            j += 1\n    if l3 == sorted(a):\n        print('yes')\n    else:\n        print('no')", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (N, K) = [int(x) for x in stdin.readline().split()]\n    A = [int(x) for x in stdin.readline().split()]\n    B = sorted(A)\n    if K == 1:\n        print('yes')\n        continue\n    flag = True\n    for i in range(N // K + 1):\n        i1 = B.index(A[i])\n        if not abs(i1 - i) % K == 0:\n            flag = False\n            break\n    print('yes') if flag else print('no')"]