["for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "T = int(input())\nfor _ in range(T):\n    (D, d, P, Q) = map(int, input().split())\n    n = D // d\n    total = 0\n    if n % 2 == 0:\n        total += d * (n // 2) * (2 * P + (n - 1) * Q)\n    else:\n        total += d * n * (P + (n - 1) // 2 * Q)\n    total += D % d * (P + n * Q)\n    print(total)", "def main():\n    t = int(input())\n    while t > 0:\n        (D, d, P, Q) = map(int, input().split())\n        n = D // d\n        ans = n * P * d + Q * (n * (n - 1)) // 2 * d + D % d * (P + n * Q)\n        print(ans)\n        t -= 1\nmain()", "for _ in range(int(input())):\n    (D, d, p, q) = tuple(map(int, input().split()))\n    n = D // d\n    print(int(d * (2 * n * p + n * (n - 1) * q) // 2 + D % d * (p + n * q)))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "for i in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    que = D // d\n    rem = D % d\n    ans = 0\n    ans = que * (2 * P + (que - 1) * Q) // 2\n    ans = ans * d\n    a = (P + que * Q) * rem\n    ans += a\n    print(ans)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "x = int(input())\nddr = []\nfor nnh in range(0, x):\n    p = str(input())\n    gh = p.split(' ')\n    mm = []\n    for bbv in gh:\n        mm.append(int(bbv))\n    ddr.append(mm)\nfor iir in ddr:\n    x = iir[0] // iir[1]\n    ltre = iir[0] % iir[1]\n    ans = (iir[2] * x + iir[-1] * ((x - 1) * x // 2)) * iir[1] + (iir[2] + iir[-1] * x) * ltre\n    print(ans)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "for s in [*open(0)][1::1]:\n    (D, d, P, Q) = map(int, s.strip().split())\n    d1 = D // d\n    print(d * (d1 * (2 * P + (d1 - 1) * Q)) // 2 + D % d * (P + d1 * Q))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    R = D % d\n    X = D // d\n    print(P * X * d + Q * X * (X - 1) * d // 2 + R * (P + Q * X))", "for _ in range(int(input())):\n    (d, a, p, q) = map(int, input().split())\n    ans = p * d\n    i = d // a\n    ans += a * i * (i - 1) * q // 2\n    d = d % a\n    ans += d * i * q\n    print(ans)", "for _ in range(int(input())):\n    (D, d, p, q) = list(map(int, input().split()))\n    quo = D // d\n    ans = quo * (2 * p + q * (quo - 1)) // 2 * d\n    rem = D % d\n    ans += (p + q * quo) * rem\n    print(ans)", "for i in range(int(input())):\n    (a, b, p, q) = map(int, input().split())\n    print((a // b * p + a // b * (a // b - 1) // 2 * q) * b + (p + a // b * q) * (a % b))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    (a, b) = (D // d, D % d)\n    s = d * (a * P + a * (a - 1) * Q // 2) + b * (P + a * Q)\n    print(int(s))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    (a, b) = (D // d, D % d)\n    s = a * d * (2 * P + (a - 1) * Q) // 2 + b * (P + a * Q)\n    print(int(s))", "for _ in range(int(input())):\n    (d, x, p, q) = map(int, input().split())\n    print((d // x * p + d // x * (d // x - 1) // 2 * q) * x + (p + d // x * q) * (d % x))", "for _ in range(int(input())):\n    (d, x, p, q) = map(int, input().split())\n    print((d // x * p + d // x * (d // x - 1) // 2 * q) * x + (p + d // x * q) * (d % x))", "for _ in range(int(input())):\n    (d, x, p, q) = map(int, input().split())\n    print((d // x * p + d // x * (d // x - 1) // 2 * q) * x + (p + d // x * q) * (d % x))", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    (D, d, P, Q) = l\n    h = D // d\n    r = D % d\n    ans = h * d * P + d * (h * (h - 1) // 2) * Q + r * (P + h * Q)\n    print(ans)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (d, e, p, q) = map(int, input().split())\n    t = d // e\n    print(t * (2 * p + (t - 1) * q) // 2 * e + (p + t * q) * (d % e))", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (d, e, p, q) = map(int, input().split())\n    print(d // e * (2 * p + (d // e - 1) * q) // 2 * e + (p + d // e * q) * (d % e))", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    (D, d, P, Q) = l\n    h = D // d\n    r = D % d\n    ans = h * d * P + d * (h * (h - 1) // 2) * Q + r * (P + h * Q)\n    print(ans)", "t = int(input())\nwhile t:\n    (d, a, p, q) = map(int, input().split(' '))\n    cost = 0\n    b = d // a\n    r = d % a\n    cost = a * b * p + a * b * (b - 1) * q // 2 + r * (p + b * q)\n    print(int(cost))\n    t -= 1", "def prob(a, b, c, d):\n    k = a // b\n    print(a * (c + d * k) - b * d * k * (k + 1) // 2)\nt = int(input())\nfor i in range(t):\n    (a, b, c, d) = map(int, input().split())\n    prob(a, b, c, d)", "t = int(input())\nfor i in range(t):\n    (D, d, p, q) = map(int, input().split())\n    (n, rem) = (D // d, D % d)\n    ans = n * p * d + q * d * (n - 1) * n // 2 + (p + n * q) * rem\n    print(ans)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "for i in range(int(input())):\n    (D, d, p, Q) = map(int, input().split())\n    c = D // d\n    r = D % d\n    t = p + c * Q\n    amount = c * (2 * p + (c - 1) * Q) // 2 * d\n    rem = r * t\n    print(amount + rem)", "t = int(input())\nfor i in range(t):\n    (D, d, p, q) = map(int, input().split())\n    (n, rem) = (D // d, D % d)\n    ans = n * p * d + q * d * (n - 1) * n // 2 + (p + n * q) * rem\n    print(ans)", "for i in range(int(input())):\n    (l, d, P, Q) = map(int, input().split())\n    x = P * l\n    l -= d\n    n = l // d\n    y = n * (n + 1) // 2 * Q * d\n    z = (l // d + 1) * Q * (l - l // d * d)\n    print(x + y + z)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "for i in range(int(input())):\n    (l, d, P, Q) = map(int, input().split())\n    x = P * l\n    l -= d\n    n = l // d\n    y = n * (n + 1) // 2 * Q * d\n    z = (l // d + 1) * Q * (l - l // d * d)\n    print(x + y + z)", "for i in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    x = P * D\n    D -= d\n    n = D // d\n    y = n * (n + 1) // 2 * Q * d\n    z = (D // d + 1) * Q * (D - D // d * d)\n    print(x + y + z)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "from sys import stdin\nl = []\nfor _ in range(int(stdin.readline())):\n    (D, d, P, Q) = map(int, stdin.readline().split())\n    intervals = D // d\n    remaining = D % d\n    amount = d * (intervals * (2 * P + (intervals - 1) * Q) // 2) + remaining * (P + intervals * Q)\n    l.append(amount)\nfor i in l:\n    print(i)", "from math import factorial\nfor _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    x = P * D\n    D -= d\n    n = D // d\n    y = n * (n + 1) // 2 * Q * d\n    z = (D // d + 1) * Q * (D - D // d * d)\n    print(x + y + z)", "from math import factorial\nfor _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    x = P * D\n    D -= d\n    n = D // d\n    y = n * (n + 1) // 2 * Q * d\n    z = (D // d + 1) * Q * (D - D // d * d)\n    print(x + y + z)", "for _ in range(int(input())):\n    (D, d, p, q) = map(int, input().split())\n    ans = 0\n    ans = ans + D * p\n    D = D - d\n    k = D // d\n    rem = D - D // d * d\n    ans = ans + d * q * (k * (k + 1)) // 2\n    ans = ans + rem * (k + 1) * q\n    print(ans)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    n = D // d\n    ans = n * (2 * P * d + (n - 1) * Q * d) // 2\n    if D % d == 0:\n        print(ans)\n    else:\n        ans += (P + n * Q) * (D - n * d)\n        print(ans)", "cas = int(input())\nfor i in range(cas):\n    (D, d, P, Q) = map(int, input().split())\n    n = int(D // d)\n    r = int(D % d)\n    print(P * D + Q * (d * ((n * n - n) // 2) + n * r))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    n = D // d\n    ans = n * (2 * P * d + (n - 1) * Q * d) // 2\n    if D % d == 0:\n        print(ans)\n    else:\n        ans += (P + n * Q) * (D - n * d)\n        print(ans)", "for _ in range(int(input())):\n    (d, D, p, q) = map(int, input().split(' '))\n    res = p * d + d // D * (d // D - 1) // 2 * q * D + d % D * (d // D) * q\n    print(res)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    n = D // d\n    ans = n * (2 * P * d + (n - 1) * Q * d) // 2\n    if D % d == 0:\n        print(ans)\n    else:\n        ans += (P + n * Q) * (D - n * d)\n        print(ans)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    n = D // d\n    ans = n * (2 * P * d + (n - 1) * Q * d) // 2\n    if D % d == 0:\n        print(ans)\n    else:\n        ans += (P + n * Q) * (D - n * d)\n        print(ans)", "for t in range(int(input())):\n    (D, d, p, q) = map(int, input().split())\n    Q = D // d\n    r = D % d\n    ans = Q * (2 * p + (Q - 1) * q) // 2\n    ans *= d\n    ans += (p + Q * q) * r\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (D, d, p, q) = map(int, input().strip().split())\n    (n, rem) = (D // d, D % d)\n    ans = n * (2 * p + (n - 1) * q) // 2\n    ans = ans * d\n    ans += (p + q * n) * rem\n    print(ans)\n    t -= 1", "from math import sqrt, ceil, floor, gcd, log2\nimport sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import combinations, groupby\nfrom time import time\nfrom heapq import heappop, heappush, heapify\nt = int(input())\nfor _ in range(t):\n    (D, d, p, q) = map(int, input().split())\n    (n, rem) = (D // d, D % d)\n    ans = n * p * d + q * d * (n - 1) * n // 2 + (p + n * q) * rem\n    print(ans)", "for i in range(int(input())):\n    (D, d, p, q) = map(int, input().split())\n    (n, rem) = (D // d, D % d)\n    ans = n * p * d + q * d * (n - 1) * n // 2 + (p + n * q) * rem\n    print(ans)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (D, d, p, q) = map(int, input().split())\n    (n, r) = (D // d, D % d)\n    ans = n * (2 * p + (n - 1) * q) // 2\n    ans *= d\n    ans += (p + n * q) * r\n    print(ans)", "for _ in range(int(input())):\n    (D, d, p, q) = map(int, input().split())\n    (n, rem) = (D // d, D % d)\n    ans = n * p * d + q * d * (n - 1) * n // 2 + (p + n * q) * rem\n    print(ans)", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    (D, d, p, q) = (l[0], l[1], l[2], l[3])\n    c = 0\n    c += D // d\n    s = p * D + c * (c - 1) // 2 * q * d\n    s += q * c * (D % d)\n    print(s)", "for _ in range(int(input())):\n    (d, D, P, Q) = map(int, input().split(' '))\n    p = 0\n    p += d * P\n    p += d // D * (d // D - 1) // 2 * Q * D\n    p += d % D * (d // D) * Q\n    print(p)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    answer = 0\n    answer = num * (2 * P + (num - 1) * Q) // 2\n    answer = answer * d\n    aa = (P + num * Q) * rem\n    answer += aa\n    print(int(answer))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    answer = 0\n    answer = num * (2 * P + (num - 1) * Q) // 2\n    answer = answer * d\n    aa = (P + num * Q) * rem\n    answer += aa\n    print(int(answer))", "t = int(input())\nfor i in range(0, t):\n    (D, d, P, Q) = list(map(int, input().split()))\n    n = D // d\n    res = D % d\n    ans = 0\n    ans = n * (2 * P + (n - 1) * Q) // 2\n    ans = ans * d\n    a = (P + n * Q) * res\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))", "t = int(input())\nfor i in range(t):\n    (D, d, P, Q) = map(int, input().split())\n    money = 0\n    fin = D // d\n    money = (P * fin + Q * (fin - 1) * fin // 2) * d\n    money += (D - fin * d) * (P + Q * fin)\n    print(money)", "t = int(input())\nwhile t:\n    (D, d, p, q) = [int(i) for i in input().split()]\n    f = D // d\n    l = D % d\n    s = int(p * D + q * d * f * (f - 1) // 2 + q * f * l)\n    print(s)\n    t -= 1", "for i in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    r = D // d\n    r1 = D % d\n    s = r * (2 * P + (r - 1) * Q) // 2\n    s = s * d\n    s += (P + r * Q) * r1\n    print(int(s))", "for _ in range(int(input())):\n    (D, d, p, q) = map(int, input().split())\n    qu = D // d\n    r = D % d\n    ans = 0\n    ans = d * qu * (2 * p + (qu - 1) * q) // 2\n    ans += (p + qu * q) * r\n    print(ans)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "for i in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (d, i, p, q) = map(int, input().split())\n    import math\n    a = math.floor(d / i)\n    s = a * (2 * p + (a - 1) * q) * i\n    s = s // 2\n    s = s + (d - a * i) * (p + a * q)\n    print(s)", "import math\nfor x in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    n = math.floor(D / d)\n    s = n * (2 * P + (n - 1) * Q) * d\n    s = s // 2\n    s = s + (D - n * d) * (P + n * Q)\n    print(s)", "for _ in range(int(input())):\n    (d, x, p, q) = map(int, input().split())\n    print((d // x * p + d // x * (d // x - 1) // 2 * q) * x + (p + d // x * q) * (d % x))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    quo = D // d\n    rem = D % d\n    ans = 0\n    ans = quo * (2 * P + (quo - 1) * Q) // 2\n    ans = ans * d\n    a = (P + quo * Q) * rem\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (d, x, p, q) = map(int, input().split())\n    print((d // x * p + d // x * (d // x - 1) // 2 * q) * x + (p + d // x * q) * (d % x))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    x = D // d\n    y = D % d\n    total = D * P\n    a = x * (x - 1)\n    a = a // 2\n    total += a * Q * d\n    total += y * x * Q\n    print(total)", "t = int(input())\nfor _ in range(t):\n    (D, d, P, Q) = list(map(int, input().split()))\n    x = D // d\n    r = D % d\n    total = x * (2 * P + (x - 1) * Q) * d // 2 + r * (P + x * Q)\n    print(total)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))", "for i in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    n = D // d\n    r = D % d\n    sume = 0\n    sume = n * (2 * P + (n - 1) * Q) // 2\n    sume = sume * d\n    a = (P + n * Q) * r\n    sume += a\n    print(int(sume))", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))", "t = int(input(''))\nfor i in range(t):\n    (D, d, P, Q) = map(int, input().split())\n    i = 1\n    if D <= d:\n        res = D * P\n        print(res)\n        continue\n    else:\n        s = D // d\n        ans = int(s * P + (s - 1) * s * Q // 2) * d\n        P = P + s * Q\n        ans += int(P * (D % d))\n        print(ans)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    n = D // d\n    if D % d:\n        Last_prod = P * (D % d) + Q * (D % d) * n\n    else:\n        Last_prod = 0\n    final_result = P * d * n + Q * d * (n * (n - 1)) // 2\n    print(final_result + Last_prod)", "for i in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    m = D // d\n    v = m * P * d + Q * (m * (m - 1)) // 2 * d + D % d * (P + m * Q)\n    print(v)", "for i in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    m = D // d\n    v = m * P * d + Q * (m * (m - 1)) // 2 * d + D % d * (P + m * Q)\n    print(v)", "for i in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    r = D // d\n    s = r * P * d + Q * (r * (r - 1)) // 2 * d + D % d * (P + r * Q)\n    print(s)", "for i in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    r = D // d\n    s = r * P * d + Q * (r * (r - 1)) // 2 * d + D % d * (P + r * Q)\n    print(s)", "for _ in range(int(input())):\n    (D, d, p, q) = [int(x) for x in input().split()]\n    res = 0\n    n = D // d\n    r = D % d\n    res = r * (p + n * q) + d * (n * p + q * (n * (n - 1)) // 2)\n    print(res)", "for _ in range(int(input())):\n    (D, d, p, q) = map(int, input().split())\n    n = D // d\n    total = (n * p + n * (n - 1) // 2 * q) * d\n    total += D % d * (p + n * q)\n    print(total)", "T = int(input())\nfor i in range(T):\n    (D, d, P, Q) = map(int, input().split())\n    R = D % d\n    A = int(D / d)\n    S = d * (A * P + Q * (A * (A - 1)) // 2) + R * (P + A * Q)\n    print(int(S))", "t = int(input())\nwhile t != 0:\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))\n    t -= 1", "from math import *\nfor _ in range(int(input())):\n    (D, d, p, q) = map(int, input().split())\n    r = D // d\n    s = r * p * d + q * (r * (r - 1)) // 2 * d + D % d * (p + r * q)\n    print(s)", "for _ in range(int(input())):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))", "t = input()\nfor c in range(0, int(t)):\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))", "t = int(input())\nwhile t != 0:\n    (D, d, P, Q) = map(int, input().split())\n    num = D // d\n    rem = D % d\n    ans = 0\n    ans = num * (2 * P + (num - 1) * Q) // 2\n    ans = ans * d\n    a = (P + num * Q) * rem\n    ans += a\n    print(int(ans))\n    t -= 1", "for _ in range(int(input())):\n    (d, x, p, q) = map(int, input().split())\n    print((d // x * p + d // x * (d // x - 1) // 2 * q) * x + (p + d // x * q) * (d % x))", "for _ in range(int(input())):\n    (d, x, p, q) = map(int, input().split())\n    print((d // x * p + d // x * (d // x - 1) // 2 * q) * x + (p + d // x * q) * (d % x))", "T = int(input())\nfor case in range(T):\n    (D, d, p, Q) = [int(tmp) for tmp in input().strip().split(' ')]\n    n = D // d\n    cost = D * p + n * Q * D - n * (n + 1) // 2 * Q * d\n    print(cost)"]