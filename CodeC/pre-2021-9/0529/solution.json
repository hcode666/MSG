["for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    f = 1\n    for i in range(n):\n        f = f * a[i]\n    c = []\n    for i in range(q):\n        c.append(b[i] // f)\n    print(*c)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    mul = 1\n    for i in a:\n        mul *= i\n    for i in x:\n        print(i // mul, end=' ')\n    print()", "from functools import reduce\ntc = int(input().strip())\nfor t in range(tc):\n    (n, q) = map(int, input().split())\n    d = reduce(lambda a, b: a * b, list(map(int, input().split())))\n    x = list(map(int, input().split()))\n    for i in x:\n        print(i // d, end=' ')\n    print()", "from functools import reduce\ntc = int(input().strip())\nfor t in range(tc):\n    (n, q) = map(int, input().split())\n    d = reduce(lambda a, b: a * b, list(map(int, input().split())))\n    x = list(map(int, input().split()))\n    for i in x:\n        print(i // d, end=' ')\n    print()", "from functools import reduce\ntc = int(input().strip())\nfor t in range(tc):\n    (n, q) = map(int, input().split())\n    d = reduce(lambda a, b: a * b, list(map(int, input().split())))\n    x = list(map(int, input().split()))\n    for i in x:\n        print(i // d, end=' ')\n    print()", "T = int(input())\nwhile T > 0:\n    (N, Q) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    quer = list(map(int, input().split()))\n    mult = 1\n    for i in range(N):\n        mult = mult * arr[i]\n    for i in range(Q):\n        quer[i] = str(int(quer[i] / mult))\n    s = ' '.join(quer)\n    print(s)\n    T -= 1", "from bisect import bisect_left\nfrom code import interact\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor _ in range(ii()):\n    (n, q) = il()\n    d = il()\n    x = il()\n    p = 1\n    for ele in d:\n        p = p * ele\n    for val in x:\n        print(val // p, end=' ')\n    print()", "T = int(input())\nfor i in range(T):\n    (N, Q) = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    Qseries = list(map(int, input().split()))\n    temp = 1\n    for num in D:\n        temp *= num\n    ans = ''\n    for Qsub in Qseries:\n        if len(ans) == 0:\n            ans = str(Qsub // temp)\n        else:\n            ans += ' ' + str(Qsub // temp)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, Q) = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    Qseries = list(map(int, input().split()))\n    temp = 1\n    for num in D:\n        temp *= num\n    ans = ''\n    for Qsub in Qseries:\n        if len(ans) == 0:\n            ans = str(Qsub // temp)\n        else:\n            ans += ' ' + str(Qsub // temp)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, Q) = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    Qseries = list(map(int, input().split()))\n    temp = 1\n    for num in D:\n        temp *= num\n    ans = ''\n    for Qsub in Qseries:\n        if len(ans) == 0:\n            ans = str(Qsub // temp)\n        else:\n            ans += ' ' + str(Qsub // temp)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, Q) = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    Qseries = list(map(int, input().split()))\n    temp = 1\n    for num in D:\n        temp *= num\n    ans = ''\n    for Qsub in Qseries:\n        if len(ans) == 0:\n            ans = str(Qsub // temp)\n        else:\n            ans += ' ' + str(Qsub // temp)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, Q) = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    Qseries = list(map(int, input().split()))\n    temp = 1\n    for num in D:\n        temp *= num\n    ans = ''\n    for Qsub in Qseries:\n        if len(ans) == 0:\n            ans = str(Qsub // temp)\n        else:\n            ans += ' ' + str(Qsub // temp)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, Q) = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    Qseries = list(map(int, input().split()))\n    temp = 1\n    for num in D:\n        temp *= num\n    ans = ''\n    for Qsub in Qseries:\n        if len(ans) == 0:\n            ans = str(Qsub // temp)\n        else:\n            ans += ' ' + str(Qsub // temp)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, Q) = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    Qseries = list(map(int, input().split()))\n    temp = 1\n    for num in D:\n        temp *= num\n    ans = ''\n    for Qsub in Qseries:\n        if len(ans) == 0:\n            ans = str(Qsub // temp)\n        else:\n            ans += ' ' + str(Qsub // temp)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, Q) = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    Qseries = list(map(int, input().split()))\n    temp = 1\n    for num in D:\n        temp *= num\n    ans = ''\n    for Qsub in Qseries:\n        if len(ans) == 0:\n            ans = str(Qsub // temp)\n        else:\n            ans += ' ' + str(Qsub // temp)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, Q) = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    Qseries = list(map(int, input().split()))\n    temp = 1\n    for num in D:\n        temp *= num\n    ans = ''\n    for Qsub in Qseries:\n        if len(ans) == 0:\n            ans = str(Qsub // temp)\n        else:\n            ans += ' ' + str(Qsub // temp)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, Q) = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    Qseries = list(map(int, input().split()))\n    temp = 1\n    for num in D:\n        temp *= num\n    ans = ''\n    for Qsub in Qseries:\n        if len(ans) == 0:\n            ans = str(Qsub // temp)\n        else:\n            ans += ' ' + str(Qsub // temp)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, Q) = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    Qseries = list(map(int, input().split()))\n    temp = 1\n    for num in D:\n        temp *= num\n    ans = ''\n    for Qsub in Qseries:\n        if len(ans) == 0:\n            ans = str(Qsub // temp)\n        else:\n            ans += ' ' + str(Qsub // temp)\n    print(ans)", "T = int(input())\n\ndef findX(N, Q, q):\n    ans = ''\n    for i in q:\n        ans += str(i // N) + ' '\n    print(ans[:-1])\nfor testcase in range(T):\n    (N, Q) = map(int, input().split())\n    n = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    multiplication = 1\n    for number in n:\n        multiplication *= number\n    findX(multiplication, Q, q)", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    temp = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    x = [i for i in temp if i != 1]\n    i = 0\n    le = len(x)\n    for j in range(q):\n        no = d[j]\n        i = 0\n        while i < le and no != 0:\n            no //= x[i]\n            i += 1\n        print(no, end=' ')\n    print()", "t = int(input())\nfor tc in range(t):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    p = d[0]\n    for i in range(1, n):\n        p *= d[i]\n    for i in range(q):\n        x[i] //= p\n        print(x[i], end=' ')\n    print()", "t = int(input())\nfor h in range(t):\n    (N, Q) = list(map(int, input().split()))\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    re = 1\n    for i in l1:\n        re = re * i\n    l3 = [str(i // re) for i in l2]\n    print(' '.join(l3))", "t = int(input())\nfor _ in range(t):\n    (N, Q) = list(map(int, input().split()))\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    re = 1\n    for i in l1:\n        re = re * i\n    l3 = [str(i // re) for i in l2]\n    print(' '.join(l3))", "import math\nT = int(input())\nfor tj in range(T):\n    (N, Q) = map(int, input().split())\n    D = list(map(int, input().split()))\n    X = list(map(int, input().split()))\n    mult = 1\n    for i in range(N):\n        mult *= D[i]\n    for j in range(Q):\n        print(math.floor(X[j] / mult), end=' ')\n    print()", "t = int(input())\nwhile t:\n    (n, q) = map(int, input().split(' '))\n    ls = list(map(int, input().split(' ')))\n    queries = list(map(int, input().split(' ')))\n    mul = 1\n    for i in ls:\n        mul *= i\n    for i in queries:\n        print(i // mul, end=' ')\n    print()\n    t -= 1", "t = int(input())\nwhile t:\n    (n, q) = map(int, input().split(' '))\n    ls = list(map(int, input().split(' ')))\n    queries = list(map(int, input().split(' ')))\n    mul = 1\n    for i in ls:\n        mul *= i\n    for i in queries:\n        print(i // mul, end=' ')\n    print()\n    t -= 1", "T = int(input())\nfor t in range(T):\n    (N, Q) = map(int, input().split())\n    D = list(map(int, input().split()))\n    Queries = list(map(int, input().split()))\n    D_eff = 1\n    for item in D:\n        D_eff *= item\n    for i in range(Q):\n        ans = int(Queries[i] / D_eff)\n        print(ans, end=' ')\n    print()", "T = int(input())\nfor t in range(T):\n    (N, Q) = map(int, input().split())\n    D = list(map(int, input().split()))\n    Queries = list(map(int, input().split()))\n    D_eff = 1\n    for item in D:\n        D_eff *= item\n    for i in range(Q):\n        ans = int(Queries[i] / D_eff)\n        print(ans, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    array = list(map(int, input().split()))\n    x_array = list(map(int, input().split()))\n    total = 1\n    for i in range(n):\n        total *= array[i]\n    for j in range(q):\n        print(x_array[j] // total, end=' ')\n    print()", "import numpy as np\nt = int(input())\nfor i in range(0, t):\n    b = list(map(int, input().split()))\n    a = np.array(b)\n    n = a[0]\n    q = a[1]\n    d = list(map(int, input().split()))\n    c = np.array(d)\n    f = list(map(int, input().split()))\n    e = np.array(f)\n    y = 1\n    for j in range(0, n):\n        y = y * c[j]\n    z = ''\n    for k in range(0, q):\n        m = e[k] // y\n        m = str(m)\n        z = z + m\n        z = z + ' '\n    print(z)", "import numpy as np\nt = int(input())\nfor i in range(0, t):\n    b = list(map(int, input().split()))\n    a = np.array(b)\n    n = a[0]\n    q = a[1]\n    d = list(map(int, input().split()))\n    c = np.array(d)\n    f = list(map(int, input().split()))\n    e = np.array(f)\n    y = 1\n    for j in range(0, n):\n        y = y * c[j]\n    z = ''\n    for k in range(0, q):\n        m = e[k] // y\n        m = str(m)\n        z = z + m\n        z = z + ' '\n    print(z)", "T = int(input())\nif T >= 1 and T <= 1000:\n    for k in range(0, T):\n        (N, Q) = map(int, input().split())\n        temp = 1\n        D = list(map(int, input().split()))\n        X = list(map(int, input().split()))\n        for i in D:\n            temp = i * temp\n        for j in X:\n            print(j // temp, end=' ')\n        print()", "T = int(input())\nif T >= 1 and T <= 1000:\n    for k in range(0, T):\n        (N, Q) = map(int, input().split())\n        temp = 1\n        D = list(map(int, input().split()))\n        X = list(map(int, input().split()))\n        for i in D:\n            temp = i * temp\n        for j in X:\n            print(j // temp, end=' ')\n        print()", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = 1\n    for rt in l:\n        k = k * rt\n    m = list(map(int, input().split()))\n    for rt in m:\n        ans = rt // k\n        print(ans, end=' ')\n    print(' ')", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = 1\n    for j in l:\n        s *= j\n    l2 = list(map(int, input().split()))\n    for z in l2:\n        ans = z // s\n        print(ans, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = 1\n    for rt in l:\n        k = k * rt\n    m = list(map(int, input().split()))\n    for rt in m:\n        ans = rt // k\n        print(ans, end=' ')\n    print(' ')", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    p = d[0]\n    for i in range(1, n):\n        p *= d[i]\n    for i in range(q):\n        x[i] = x[i] // p\n        print(x[i], end=' ')\n    print()", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    stdin.readline()\n    d = list(map(int, stdin.readline().split()))\n    q = list(map(int, stdin.readline().split()))\n    m = max(q)\n    p = 1\n    while d and p <= m:\n        p *= d.pop()\n    print(' '.join(map(lambda x: str(x // p), q)))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    stdin.readline()\n    d = list(map(int, stdin.readline().split()))\n    q = list(map(int, stdin.readline().split()))\n    p = 1\n    m = max(q)\n    for dx in d:\n        p *= dx\n        if p > m:\n            break\n    for qx in q:\n        print(qx // p, end=' ')\n    print()", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    stdin.readline()\n    p = 1\n    for dx in map(int, stdin.readline().split()):\n        p *= dx\n    print(' '.join(map(lambda x: str(int(x) // p), stdin.readline().split())))", "from sys import stdin\nfrom functools import reduce\nfor _ in range(int(stdin.readline())):\n    stdin.readline()\n    p = reduce(lambda x, y: x * y, map(int, stdin.readline().split()))\n    print(' '.join(map(lambda x: str(int(x) // p), stdin.readline().split())))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    stdin.readline()\n    p = 1\n    for dx in map(int, stdin.readline().split()):\n        p *= dx\n    for qx in map(int, stdin.readline().split()):\n        print(qx // p, end=' ')\n    print()", "import numpy\nfor _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split(' ')]\n    d = [int(x) for x in input().split(' ')]\n    n = [int(x) for x in input().split(' ')]\n    pro = numpy.prod(d)\n    for i in n:\n        print(i // pro, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    k = list(map(int, input().split()))\n    p = 1\n    for i in d:\n        p *= i\n    for i in range(q):\n        k[i] = k[i] // p\n    print(*k)", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    k = list(map(int, input().split()))\n    p = 1\n    for i in d:\n        p *= i\n    for i in range(q):\n        k[i] = k[i] // p\n    print(*k)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    k = list(map(int, input().split()))\n    p = 1\n    for i in d:\n        p *= i\n    for i in range(q):\n        k[i] = k[i] // p\n    print(*k)", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    k = list(map(int, input().split()))\n    p = 1\n    for i in d:\n        p *= i\n    for i in range(q):\n        k[i] = k[i] // p\n    print(*k)", "for tc in range(int(input())):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    p = 1\n    for i in d:\n        p *= i\n    for j in range(q):\n        x[j] = x[j] // p\n    print(*x)", "t = int(input())\nfor I in range(t):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    p = 1\n    for i in d:\n        p *= i\n    for i in range(q):\n        x[i] = x[i] // p\n    print(*x)", "import sys\nimport os.path\nimport math\nimport heapq\nimport copy\nfrom sys import stdin, stdout\nfrom collections import *\nfrom math import gcd, ceil, floor\nfrom bisect import bisect\nmod = int(1000000000.0 + 7)\nif os.path.exists('Updated prg/Input3d.txt'):\n    sys.stdout = open('Updated prg/Output3d.txt', 'w')\n    sys.stdin = open('Updated prg/Input3d.txt', 'r')\n\ndef sinp():\n    return input()\n\ndef ninp():\n    return int(sinp())\n\ndef mapinp():\n    return map(int, sinp().split())\n\ndef smapinp():\n    return map(str, sinp().split())\n\ndef linp():\n    return list(mapinp())\n\ndef sl():\n    return list(sinp().split())\n\ndef prnt(a):\n    print(a)\n\ndef prntl(a):\n    print(a, end=' ')\n\ndef prntlist(l1):\n    print(*l1)\n\ndef power(n):\n    return 1 << n\nfor _ in range(ninp()):\n    (N, Q) = mapinp()\n    D = linp()\n    X = linp()\n    (div, result) = (1, [])\n    for i in D:\n        div = div * i\n    for i in X:\n        result.append(floor(i / div))\n    prntlist(result)", "for tc in range(int(input())):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    p = 1\n    for i in d:\n        p *= i\n    for j in range(q):\n        x[j] = x[j] // p\n    print(*x)", "from functools import reduce\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    div = reduce(lambda a, b: a * b, d)\n    for i in x:\n        print(i // div, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    p = 1\n    for i in d:\n        p *= i\n    for i in range(q):\n        x[i] = x[i] // p\n    print(*x)", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    p = 1\n    for i in d:\n        p *= i\n    for i in range(q):\n        x[i] = x[i] // p\n    print(*x)", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    p = 1\n    for i in d:\n        p *= i\n    for i in range(q):\n        x[i] = x[i] // p\n    print(*x)", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    p = 1\n    for i in range(n):\n        p *= a[i]\n    for i in range(q):\n        b[i] = b[i] // p\n    print(*b)", "from math import floor\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    c = 1\n    for i in l1:\n        c *= i\n    for i in l2:\n        print(i // c, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    lq = list(map(int, input().split()))\n    c = 1\n    for i in lq:\n        c = c * i\n    l = list(map(int, input().split()))\n    for i in l:\n        print(i // c, end=' ')\n    print()", "for h in range(int(input())):\n    (e, r) = map(int, input().split())\n    (f, v) = (list(map(int, input().split())), list(map(int, input().split())))\n    (r, t) = (max(v), 1)\n    for g in f:\n        t = t * g\n        if t > r:\n            break\n    for _ in v:\n        print(_ // t, end=' ')\n    print()", "for i in range(int(input())):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    m = max(x)\n    prod = 1\n    for num in d:\n        prod *= num\n        if prod > m:\n            break\n    for query in x:\n        print(query // prod, end=' ')\n    print()", "for _ in range(int(input())):\n    (N, Q) = [int(s) for s in input().split()]\n    D = [int(s) for s in input().split()]\n    Q = [int(s) for s in input().split()]\n    MaximumQ = max(Q)\n    Product = 1\n    for i in D:\n        Product = Product * i\n        if Product > MaximumQ:\n            break\n    for q in Q:\n        print(q // Product, end=' ')\n    print()", "t = int(input())\nfor loop in range(t):\n    (n, q) = map(int, input().split())\n    prodD = 1\n    for val in input().split():\n        prodD *= int(val)\n    for val in input().split():\n        print(int(int(val) / prodD), end='')\n        q -= 1\n        if q != 0:\n            print(' ', end='')\n    print()", "t = int(input())\nfor loop in range(t):\n    (n, q) = map(int, input().split())\n    prodD = 1\n    for val in input().split():\n        prodD *= int(val)\n    for val in input().split():\n        print(int(int(val) / prodD), end='')\n        q -= 1\n        if q != 0:\n            print(' ', end='')\n    print()", "t = int(input())\nfor loop in range(t):\n    (n, q) = map(int, input().split())\n    prodD = 1\n    for val in input().split():\n        prodD *= int(val)\n    q = [int(val) for val in input().split()]\n    for i in range(len(q)):\n        print(int(q[i] / prodD), end='')\n        if i < len(q) - 1:\n            print(' ', end='')\n    print()", "t = int(input())\nfor loop in range(t):\n    (n, q) = map(int, input().split())\n    d = [int(val) for val in input().split()]\n    prodD = 1\n    for i in d:\n        prodD *= i\n    q = [int(val) for val in input().split()]\n    for i in range(len(q)):\n        print(int(q[i] / prodD), end='')\n        if i < len(q) - 1:\n            print(' ', end='')\n    print()", "import numpy\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    arr = numpy.array(l1)\n    brr = numpy.array(l2)\n    brr = brr // numpy.prod(arr)\n    print(*brr)", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    x_arr = list(map(int, input().split()))\n    tot = 1\n    for i in range(n):\n        tot *= arr[i]\n    for i in range(q):\n        print(x_arr[i] // tot, end=' ')\n    print()", "T = int(input())\nfor i in range(T):\n    (n, q) = map(int, input().split())\n    lq = list(map(int, input().split()))\n    p = 1\n    for x in lq:\n        p *= x\n    l = list(map(int, input().split()))\n    for x in l:\n        print(x // p, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    l_q = list(map(int, input().split()))\n    p = 1\n    for x in l_q:\n        p *= x\n    l = list(map(int, input().split()))\n    for x in l:\n        print(x // p, end=' ')\n    print()", "t = int(input())\nwhile t:\n    t -= 1\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    m = 1\n    for i in range(len(d)):\n        m = m * d[i]\n    for i in range(len(x)):\n        print(x[i] // m, end=' ')\n    print()", "t = int(input())\nwhile t:\n    t -= 1\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    m = 1\n    for i in range(len(d)):\n        m = m * d[i]\n    for i in range(len(x)):\n        print(x[i] // m, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    p = 1\n    for i in range(n):\n        p = p * d[i]\n    for i in range(q):\n        print(x[i] // p, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    xr = list(map(int, input().split()))\n    d = 1\n    for i in ar:\n        d *= i\n    for j in xr:\n        print(j // d, end=' ')\n    print()", "t = int(input())\nwhile t:\n    t -= 1\n    (n, q) = map(int, input().split())\n    dlt = list(map(int, input().split()))\n    xlt = list(map(int, input().split()))\n    d_pr = 1\n    for d in dlt:\n        d_pr *= d\n    for x in xlt:\n        x = x // d_pr\n        print(x, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    (n, q) = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    total = 1\n    for i in d:\n        total *= i\n    x = [int(z) for z in input().split()]\n    for i in x:\n        print(i // total, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    product = 1\n    ans = list(map(int, input().split()))\n    list1 = list(map(int, input().split()))\n    list2 = list(map(int, input().split()))\n    for i in range(ans[0]):\n        product *= list1[i]\n    for i in range(ans[1]):\n        print(list2[i] // product, end=' ')\n    print()", "t = int(input())\nwhile t:\n    (n, q) = map(int, input().split())\n    m = 1\n    for i in input().split():\n        m = m * int(i)\n    x = [int(i) // m for i in input().split()]\n    for i in x:\n        print(i, end=' ')\n    print()\n    t -= 1", "import math\nfor t in range(int(input())):\n    (n, q) = [int(x) for x in input().rstrip().split()]\n    d = [int(x) for x in input().rstrip().split()]\n    a = [int(x) for x in input().rstrip().split()]\n    prd = 1\n    for i in d:\n        prd *= i\n    for i in a:\n        print(i // prd, end=' ')\n    print('\\r')", "for i in range(int(input())):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    y = 1\n    for k in d:\n        y *= k\n    for j in x:\n        print(j // y, end=' ')\n    print()", "for i in range(int(input())):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    y = 1\n    for k in d:\n        y *= k\n    for j in x:\n        print(j // y, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    p = 1\n    for i in l:\n        p *= i\n    for j in s:\n        print(j // p, end=' ')\n    print()", "import math\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    dl = list(map(int, input().split()))\n    ql = list(map(int, input().split()))\n    mul = 1\n    for i in dl:\n        mul *= i\n    for i in ql:\n        print(math.floor(i / mul), end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    nq = input().split()\n    n = int(nq[0])\n    q = int(nq[1])\n    arr = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    c = 1\n    for j in arr:\n        c *= j\n    for k in x:\n        print(k // c, end=' ')\n    print('\\r')", "import math\nfor i in range(int(input())):\n    a = input()\n    z = list(map(int, input().split()))\n    s = 1\n    for i in z:\n        s *= i\n    k = list(map(int, input().split()))\n    k = list(map(lambda x: str(x // s), k))\n    print(' '.join(k))", "import math\nfor i in range(int(input())):\n    a = input()\n    z = list(map(int, input().split()))\n    s = 1\n    for i in z:\n        s *= i\n    k = list(map(int, input().split()))\n    k = list(map(lambda x: str(x // s), k))\n    print(' '.join(k))", "import math\nfor i in range(int(input())):\n    a = input()\n    z = list(map(int, input().split()))\n    s = 1\n    for i in z:\n        s *= i\n    k = list(map(int, input().split()))\n    k = list(map(lambda x: str(x // s), k))\n    print(' '.join(k))", "import math\nfor i in range(int(input())):\n    a = input()\n    z = list(map(int, input().split()))\n    s = 1\n    for i in z:\n        s *= i\n    k = list(map(int, input().split()))\n    k = list(map(lambda x: str(x // s), k))\n    print(' '.join(k))", "for test in range(int(input())):\n    _ = input()\n    D = list(map(int, input().split()))\n    queries = list(map(int, input().split()))\n    s = 1\n    for i in D:\n        s *= i\n    queries = list(map(lambda x: str(x // s), queries))\n    print(' '.join(queries))", "import math\nfor i in range(int(input())):\n    a = input()\n    z = list(map(int, input().split()))\n    s = 1\n    for i in z:\n        s *= i\n    k = list(map(int, input().split()))\n    k = list(map(lambda x: str(x // s), k))\n    print(' '.join(k))", "from math import floor\nt = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    total = d[0]\n    for i in range(1, len(d)):\n        total = total * d[i]\n    q = list(map(int, input().split()))\n    for i in range(len(q)):\n        print(floor(q[i] / total), end=' ')\n    print()", "import math\nfor i in range(int(input())):\n    a = input()\n    z = list(map(int, input().split()))\n    s = 1\n    for i in z:\n        s *= i\n    k = list(map(int, input().split()))\n    k = list(map(lambda x: str(x // s), k))\n    print(' '.join(k))", "import math\nfor i in range(int(input())):\n    a = input()\n    z = list(map(int, input().split()))\n    s = 1\n    for i in z:\n        s *= i\n    k = list(map(int, input().split()))\n    k = list(map(lambda x: str(x // s), k))\n    print(' '.join(k))", "import math\nfor i in range(int(input())):\n    a = input()\n    z = list(map(int, input().split()))\n    s = 1\n    for i in z:\n        s *= i\n    k = list(map(int, input().split()))\n    k = list(map(lambda x: str(x // s), k))\n    print(' '.join(k))", "import math\nfor i in range(int(input())):\n    a = input()\n    z = list(map(int, input().split()))\n    s = 1\n    for i in z:\n        s *= i\n    k = list(map(int, input().split()))\n    k = list(map(lambda x: str(x // s), k))\n    print(' '.join(k))", "import math\nfor i in range(int(input())):\n    a = input()\n    z = list(map(int, input().split()))\n    s = 1\n    for i in z:\n        s *= i\n    k = list(map(int, input().split()))\n    k = list(map(lambda x: str(x // s), k))\n    print(' '.join(k))", "import math\nfor i in range(int(input())):\n    a = input()\n    z = list(map(int, input().split()))\n    s = 1\n    for i in z:\n        s *= i\n    k = list(map(int, input().split()))\n    k = list(map(lambda x: str(x // s), k))\n    print(' '.join(k))"]