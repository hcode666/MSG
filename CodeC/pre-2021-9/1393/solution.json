["x = 7 + 10 ** 9\nfor i in range(int(input())):\n    (n, s) = input().split()\n    n = int(n)\n    l = len(s)\n    if n > l:\n        p = pow(26, n - l - 1, x)\n        p *= 25 * l + 26\n        print(p % x)\n    else:\n        print('0')", "x = 7 + 10 ** 9\nfor i in range(int(input())):\n    (n, s) = input().split()\n    n = int(n)\n    l = len(s)\n    if n > l:\n        p = pow(26, n - l - 1, x)\n        p *= 25 * l + 26\n        print(p % x)\n    else:\n        print('0')", "t = int(input())\nfor _ in range(t):\n    (n, s) = input().split()\n    N = int(n)\n    r = N - len(s)\n    count = 0\n    if N > len(s):\n        count = pow(26, r - 1, 10 ** 9 + 7)\n        count *= 26 + 25 * len(s)\n        count = count % (10 ** 9 + 7)\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, s) = input().split()\n    N = int(n)\n    r = N - len(s)\n    count = 0\n    if N > len(s):\n        count = pow(26, r - 1, 10 ** 9 + 7)\n        count *= 26 + 25 * len(s)\n        count = count % (10 ** 9 + 7)\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, s) = input().split()\n    N = int(n)\n    r = N - len(s)\n    count = 0\n    if N > len(s):\n        count = pow(26, r - 1, 10 ** 9 + 7)\n        count *= 26 + 25 * len(s)\n        count = count % (10 ** 9 + 7)\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, s) = input().split()\n    N = int(n)\n    r = N - len(s)\n    count = 0\n    if N > len(s):\n        count = pow(26, r - 1, 10 ** 9 + 7)\n        count *= 26 + 25 * len(s)\n        count = count % (10 ** 9 + 7)\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, s) = input().split()\n    N = int(n)\n    r = N - len(s)\n    count = 0\n    if N > len(s):\n        count = pow(26, r - 1, 10 ** 9 + 7)\n        count *= 26 + 25 * len(s)\n        count = count % (10 ** 9 + 7)\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, s) = input().split()\n    N = int(n)\n    r = N - len(s)\n    count = 0\n    if N > len(s):\n        count = pow(26, r - 1, 10 ** 9 + 7)\n        count *= 26 + 25 * len(s)\n        count = count % (10 ** 9 + 7)\n    print(count)", "for i in range(int(input())):\n    L = input().split()\n    N = int(L[0])\n    S = L[1]\n    Q = N - len(S)\n    ans = 0\n    if N > len(S):\n        ans = pow(26, Q - 1, 10 ** 9 + 7)\n        ans *= 26 + 25 * len(S)\n        ans = ans % (10 ** 9 + 7)\n    print(ans)", "for i in range(int(input())):\n    L = input().split()\n    N = int(L[0])\n    S = L[1]\n    Q = N - len(S)\n    ans = 0\n    if N > len(S):\n        ans = pow(26, Q - 1, 10 ** 9 + 7)\n        ans *= 26 + 25 * len(S)\n        ans = ans % (10 ** 9 + 7)\n    print(ans)", "for i in range(int(input())):\n    L = input().split()\n    N = int(L[0])\n    S = L[1]\n    Q = N - len(S)\n    ans = 0\n    if N > len(S):\n        ans = pow(26, Q - 1, 10 ** 9 + 7)\n        ans *= 26 + 25 * len(S)\n        ans = ans % (10 ** 9 + 7)\n    print(ans)", "for i in range(int(input())):\n    L = input().split()\n    N = int(L[0])\n    S = L[1]\n    Q = N - len(S)\n    ans = 0\n    if N > len(S):\n        ans = pow(26, Q - 1, 1000000007)\n        ans *= 26 + 25 * len(S)\n        ans = ans % (10 ** 9 + 7)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, s) = map(str, input().split())\n    n = int(n)\n    if n <= len(s):\n        print('0')\n    else:\n        m = pow(26, n - len(s) - 1, 1000000007)\n        m = m * (26 + 25 * len(s))\n        print(m % 1000000007)\n    t = t - 1", "T = int(input())\nfor _ in range(T):\n    (N, S) = input().split()\n    N = int(N)\n    M = len(S)\n    mod = 10 ** 9 + 7\n    if M >= N:\n        print(0)\n    else:\n        f = pow(26, N - M, mod)\n        g = M * 25 * pow(26, N - M - 1, mod)\n        print((f + g) % mod)", "t = int(input())\nwhile t > 0:\n    (n, s) = map(str, input().split())\n    n = int(n)\n    if n <= len(s):\n        print('0')\n    else:\n        m = pow(26, n - len(s) - 1, 1000000007)\n        m = m * (26 + 25 * len(s))\n        print(m % 1000000007)\n    t = t - 1", "for _ in range(int(input())):\n    (n, s) = input().split()\n    n = int(n)\n    l = len(s)\n    m = 1000000007\n    if n > l:\n        ans = pow(26, n - l - 1, m)\n        ans *= 26 + 25 * l\n        print(ans % m)\n    else:\n        print('0')", "def make_int(x):\n    try:\n        x = int(x)\n    except:\n        pass\n    return x\n\ndef modular_pow(base, exponent, modulus):\n    if modulus == 1:\n        return 0\n    result = 1\n    base = base % modulus\n    while exponent > 0:\n        if exponent % 2 == 1:\n            result = result * base % modulus\n        exponent >>= 1\n        base = base * base % modulus\n    return result\nmod = 7 + 10 ** 9\nfor t in range(int(input())):\n    (n, s) = map(make_int, input().split())\n    l = len(s)\n    if n - l > 0:\n        total = modular_pow(26, n - l, mod) * (l + 1) % mod % mod\n        substraction = modular_pow(26, n - l - 1, mod) * (l % mod) % mod\n        substraction = substraction % mod\n        answer = (total - substraction) % mod\n    else:\n        answer = 0\n    print(answer)", "x = 7 + 10 ** 9\nfor i in range(int(input())):\n    (n, s) = input().split()\n    n = int(n)\n    l = len(s)\n    if n > l:\n        p = pow(26, n - l - 1, x)\n        p *= 25 * l + 26\n        print(p % x)\n    else:\n        print('0')", "mod = 10 ** 9 + 7\n\ndef binpow(a, b):\n    b %= mod - 1\n    ans = 1\n    while b > 0:\n        if b & 1:\n            ans = ans * a % mod\n        a = a * a % mod\n        b >>= 1\n    return ans\nT = int(input())\nfor _ in range(T):\n    (n, s) = map(str, input().split())\n    n = int(n)\n    dif = n - len(s)\n    total = 0\n    if dif > 0:\n        total = (binpow(26, dif) * (len(s) + 1) % mod - binpow(26, dif - 1) * len(s) % mod + mod) % mod\n    print(total)"]