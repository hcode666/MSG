["for _ in range(int(input())):\n    v = []\n    h = []\n    m = []\n    count = 0\n    n = int(input())\n    for i in range(n):\n        m.append(input())\n    for i in m:\n        for j in range(n - 1, -1, -1):\n            if i[j] == '#':\n                h.append(j)\n                break\n        else:\n            h.append(-1)\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if m[i][j] == '#':\n                v.append(i)\n                break\n        else:\n            v.append(-1)\n    for i in range(n):\n        for j in range(n):\n            if j > h[i] and i > v[j]:\n                count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    grid = []\n    for _ in range(n):\n        grid.append(input())\n    res = 0\n    vertical = [[0] * n for i in range(n)]\n    for c in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[i][c] == '#':\n                break\n            vertical[i][c] = 1\n    for r in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[r][i] == '#':\n                break\n            if vertical[r][i]:\n                res += 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    grid = []\n    for _ in range(n):\n        grid.append(input())\n    res = 0\n    vertical = [[0] * n for i in range(n)]\n    for c in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[i][c] == '#':\n                break\n            vertical[i][c] = 1\n    for r in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[r][i] == '#':\n                break\n            if vertical[r][i]:\n                res += 1\n    print(res)", "for _ in range(int(input())):\n    N = int(input())\n    arr = []\n    for i in range(N):\n        arr.append([*input()])\n    right = [[0] * N for i in range(N)]\n    for i in range(N):\n        for j in range(N - 1, -1, -1):\n            if arr[i][j] != '#':\n                right[i][j] = 1\n            else:\n                break\n    x = 0\n    final = [[0] * N for i in range(N)]\n    for i in range(N):\n        for j in range(N - 1, -1, -1):\n            if arr[j][i] != '#':\n                if right[j][i] == 1:\n                    x += 1\n            else:\n                break\n    print(x)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = []\n    for _ in range(n):\n        arr.append(input())\n    cnt = 0\n    obst = [False] * n\n    for i in range(n - 1, -1, -1):\n        valid = True\n        for j in range(n - 1, -1, -1):\n            if arr[i][j] == '#':\n                if valid:\n                    valid = False\n                obst[j] = True\n                continue\n            elif obst[j] or valid == False:\n                continue\n            else:\n                cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    N = int(input())\n    arr = []\n    for i in range(N):\n        arr.append([*input()])\n    right = [[0] * N for i in range(N)]\n    for i in range(N):\n        for j in range(N - 1, -1, -1):\n            if arr[i][j] != '#':\n                right[i][j] = 1\n            else:\n                break\n    x = 0\n    final = [[0] * N for i in range(N)]\n    for i in range(N):\n        for j in range(N - 1, -1, -1):\n            if arr[j][i] != '#':\n                if right[j][i] == 1:\n                    x += 1\n            else:\n                break\n    print(x)", "for _ in range(int(input())):\n    N = int(input())\n    G = []\n    for i in range(N):\n        G.append(input())\n    cnt = 0\n    row = [True] * N\n    col = [True] * N\n    for i in range(N - 1, -1, -1):\n        for j in range(N - 1, -1, -1):\n            if G[i][j] == '#':\n                row[i] = False\n                col[j] = False\n            if row[i] and col[j]:\n                cnt += 1\n    print(cnt)", "import numpy as np\nT = int(input())\nfor case in range(T):\n    N = int(input())\n    M = np.zeros((N, N))\n    for i in range(N):\n        l = str(input())\n        for j in range(N):\n            if l[j] == '#':\n                M[i, j] = 1\n    M1 = np.copy(M)\n    for i in range(N - 2, -1, -1):\n        M1[i, :] = M1[i + 1, :] + M1[i, :]\n    M2 = np.copy(M)\n    for j in range(N - 2, -1, -1):\n        M2[:, j] = M2[:, j + 1] + M2[:, j]\n    print(N * N - np.count_nonzero(M1 + M2))", "import numpy as np\nT = int(input())\nfor case in range(T):\n    N = int(input())\n    M = np.zeros((N, N))\n    for i in range(N):\n        l = str(input())\n        for j in range(N):\n            if l[j] == '#':\n                M[i, j] = 1\n    M1 = np.copy(M)\n    for i in range(N - 2, -1, -1):\n        M1[i, :] = M1[i + 1, :] + M1[i, :]\n    M2 = np.copy(M)\n    for j in range(N - 2, -1, -1):\n        M2[:, j] = M2[:, j + 1] + M2[:, j]\n    print(N * N - np.count_nonzero(M1 + M2))", "import numpy as np\nT = int(input())\nfor case in range(T):\n    N = int(input())\n    M = np.zeros((N, N))\n    for i in range(N):\n        l = str(input())\n        for j in range(N):\n            if l[j] == '#':\n                M[i, j] = 1\n    M1 = np.copy(M)\n    for i in range(N - 2, -1, -1):\n        M1[i, :] = M1[i + 1, :] + M1[i, :]\n    M2 = np.copy(M)\n    for j in range(N - 2, -1, -1):\n        M2[:, j] = M2[:, j + 1] + M2[:, j]\n    print(N * N - np.count_nonzero(M1 + M2))", "for _ in range(int(input())):\n    n = int(input())\n    q = [input() for i in range(n)]\n    dp = [[1] * n for i in range(n)]\n    for i in range(n):\n        t = 1\n        y = 1\n        for j in range(n - 1, -1, -1):\n            if q[i][j] == '#':\n                t = 0\n            if q[j][i] == '#':\n                y = 0\n            dp[i][j] = min(dp[i][j], t)\n            dp[j][i] = min(dp[j][i], y)\n    print(sum((sum(i) for i in dp)))", "for _ in range(int(input())):\n    n = int(input())\n    q = [input() for i in range(n)]\n    dp = [[1] * n for i in range(n)]\n    for i in range(n):\n        t = 1\n        for j in range(n - 1, -1, -1):\n            if q[i][j] == '#':\n                t = 0\n            dp[i][j] = t\n    for i in range(n):\n        t = 1\n        for j in range(n - 1, -1, -1):\n            if q[j][i] == '#':\n                t = 0\n            dp[j][i] = min(dp[j][i], t)\n    print(sum((sum(i) for i in dp)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            grid[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            if grid[i][j] == 1:\n                ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            grid[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            if grid[i][j] == 1:\n                ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            grid[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            if grid[i][j] == 1:\n                ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            grid[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            if grid[i][j] == 1:\n                ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            grid[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            if grid[i][j] == 1:\n                ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            grid[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            if grid[i][j] == 1:\n                ans += 1\n    print(ans)", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        l.append(list(input()))\n    dp = [0 for i in range(n)]\n    c = 0\n    f = 0\n    for i in range(n - 1, -1, -1):\n        if l[-1][i] == '#':\n            dp[i] = 1\n            f = 1\n        if f == 0:\n            c += 1\n    for i in range(n - 2, -1, -1):\n        f = 0\n        for j in range(n - 1, -1, -1):\n            if l[i][j] == '#':\n                dp[j] = 1\n                f = 1\n            if dp[j] == 0 and f == 0:\n                c += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            grid[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                break\n            if grid[i][j] == 1:\n                ans += 1\n    print(ans)", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        l.append(list(input()))\n    dp = [0 for i in range(n)]\n    c = 0\n    f = 0\n    for i in range(n - 1, -1, -1):\n        if l[-1][i] == '#':\n            dp[i] = 1\n            f = 1\n        if f == 0:\n            c += 1\n    for i in range(n - 2, -1, -1):\n        f = 0\n        for j in range(n - 1, -1, -1):\n            if l[i][j] == '#':\n                dp[j] = 1\n                f = 1\n            if dp[j] == 0 and f == 0:\n                c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        l.append(list(input()))\n    dp = [0 for i in range(n)]\n    c = 0\n    f = 0\n    for i in range(n - 1, -1, -1):\n        if l[-1][i] == '#':\n            dp[i] = 1\n            f = 1\n        if f == 0:\n            c += 1\n    for i in range(n - 2, -1, -1):\n        f = 0\n        for j in range(n - 1, -1, -1):\n            if l[i][j] == '#':\n                dp[j] = 1\n                f = 1\n            if dp[j] == 0 and f == 0:\n                c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    box = []\n    for j in range(n):\n        box.append(list(input()))\n    for k in range(n):\n        for j in range(n - 1, -1, -1):\n            if box[j][k] == '#':\n                break\n            box[j][k] = 1\n    ans = 0\n    for j in range(n):\n        for k in range(n - 1, -1, -1):\n            if box[j][k] == '#':\n                break\n            if box[j][k] == 1:\n                ans += 1\n    print(ans)", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    grd = []\n    for i in range(n):\n        grd.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            grd[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            if grd[i][j] == 1:\n                ans += 1\n    print(ans)\nfor k in range(int(input())):\n    solve()", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    grid = []\n    for j in range(N):\n        grid.append(list(input()))\n    for k in range(N):\n        for j in range(N - 1, -1, -1):\n            if grid[j][k] == '#':\n                break\n            grid[j][k] = 1\n    ans = 0\n    for j in range(N):\n        for k in range(N - 1, -1, -1):\n            if grid[j][k] == '#':\n                break\n            if grid[j][k] == 1:\n                ans += 1\n    print(ans)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    grid = []\n    for j in range(N):\n        grid.append(list(input()))\n    for k in range(N):\n        for j in range(N - 1, -1, -1):\n            if grid[j][k] == '#':\n                break\n            grid[j][k] = 1\n    ans = 0\n    for j in range(N):\n        for k in range(N - 1, -1, -1):\n            if grid[j][k] == '#':\n                break\n            if grid[j][k] == 1:\n                ans += 1\n    print(ans)", "def solve():\n    n = int(input())\n    grd = []\n    for i in range(n):\n        grd.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            grd[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            if grd[i][j] == 1:\n                ans += 1\n    print(ans)\nfor k in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    grd = []\n    for i in range(n):\n        grd.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            grd[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            if grd[i][j] == 1:\n                ans += 1\n    print(ans)\nfor k in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    grd = []\n    for i in range(n):\n        grd.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            grd[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            if grd[i][j] == 1:\n                ans += 1\n    print(ans)\nfor k in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    grd = []\n    for i in range(n):\n        grd.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            grd[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            if grd[i][j] == 1:\n                ans += 1\n    print(ans)\nfor k in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    grd = []\n    for i in range(n):\n        grd.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            grd[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            if grd[i][j] == 1:\n                ans += 1\n    print(ans)\nfor k in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    N = int(input())\n    s = []\n    v1 = []\n    v2 = []\n    for i in range(N):\n        s.append(input())\n        v1.append([1] * N)\n        v2.append([1] * N)\n        for j in range(N):\n            if s[i][j] == '#':\n                v1[i][j] = v2[i][j] = 0\n    for i in range(N - 2, -1, -1):\n        for j in range(N):\n            v1[j][i] *= v1[j][i + 1]\n            v2[i][j] *= v2[i + 1][j]\n    ans = 0\n    for i in range(N):\n        for j in range(N):\n            ans += v1[i][j] * v2[i][j]\n    print(ans)", "def solve():\n    n = int(input())\n    grd = []\n    for i in range(n):\n        grd.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            grd[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            if grd[i][j] == 1:\n                ans += 1\n    print(ans)\nfor k in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    grd = []\n    for i in range(n):\n        grd.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            grd[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grd[i][j] == '#':\n                break\n            if grd[i][j] == 1:\n                ans += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "def call(grid, n):\n    c = 0\n    dp1 = [[0] * n for i in range(n)]\n    dp2 = [[0] * n for i in range(n)]\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '.':\n                dp1[i][j] = 1\n            else:\n                break\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[i][j] == '.':\n                dp2[i][j] = 1\n            else:\n                break\n    for i in range(n):\n        for j in range(n):\n            if dp1[i][j] == dp2[i][j] == 1:\n                c += 1\n    return c\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    i = 0\n    grid = []\n    while i < n:\n        arr = list(input())\n        grid.append(arr)\n        i += 1\n    print(call(grid, n))\n    t -= 1", "def call(grid, n):\n    c = 0\n    dp1 = [[0] * n for i in range(n)]\n    dp2 = [[0] * n for i in range(n)]\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '.':\n                dp1[i][j] = 1\n            else:\n                break\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if grid[i][j] == '.':\n                dp2[i][j] = 1\n            else:\n                break\n    for i in range(n):\n        for j in range(n):\n            if dp1[i][j] == dp2[i][j] == 1:\n                c += 1\n    return c\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    i = 0\n    grid = []\n    while i < n:\n        arr = list(input())\n        grid.append(arr)\n        i += 1\n    print(call(grid, n))\n    t -= 1", "for _ in range(int(input())):\n    N = int(input())\n    s = []\n    v1 = []\n    v2 = []\n    for i in range(N):\n        s.append(input())\n        v1.append([1] * N)\n        v2.append([1] * N)\n        for j in range(N):\n            if s[i][j] == '#':\n                v1[i][j] = v2[i][j] = 0\n    for i in range(N - 2, -1, -1):\n        for j in range(N):\n            v1[j][i] *= v1[j][i + 1]\n            v2[i][j] *= v2[i + 1][j]\n    ans = 0\n    for i in range(N):\n        for j in range(N):\n            ans += v1[i][j] * v2[i][j]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append(input())\n    count = 0\n    h1 = []\n    h2 = []\n    for i in range(n):\n        j = 0\n        while j < n:\n            if m[i][n - j - 1] == '#':\n                h1.append(n - j - 1)\n                break\n            j += 1\n        else:\n            h1.append(n - j - 1)\n    for i in range(n):\n        j = 0\n        while j < n:\n            if m[n - j - 1][i] == '#':\n                h2.append(n - j - 1)\n                break\n            j += 1\n        else:\n            h2.append(n - j - 1)\n    c = 0\n    x = 0\n    for h in h1:\n        i = n - 1\n        while i > h:\n            if h2[i] < x:\n                c += 1\n            i -= 1\n        x += 1\n    print(c)", "for t in range(int(input())):\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(input())\n    count = 0\n    hr = []\n    vr = []\n    for i in range(N):\n        j = 0\n        while j < N:\n            if matrix[i][N - j - 1] == '#':\n                hr.append(N - j - 1)\n                break\n            j += 1\n        else:\n            hr.append(N - j - 1)\n    for i in range(N):\n        j = 0\n        while j < N:\n            if matrix[N - j - 1][i] == '#':\n                vr.append(N - j - 1)\n                break\n            j += 1\n        else:\n            vr.append(N - j - 1)\n    x = 0\n    for h in hr:\n        i = N - 1\n        while i > h:\n            if vr[i] < x:\n                count += 1\n            i -= 1\n        x += 1\n    print(count)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    l = []\n    for i in range(n):\n        l.append(list(input()))\n    dp = [0 for i in range(n)]\n    c = 0\n    f = 0\n    for i in range(n - 1, -1, -1):\n        if l[-1][i] == '#':\n            dp[i] = 1\n            f = 1\n        if f == 0:\n            c += 1\n    for i in range(n - 2, -1, -1):\n        f = 0\n        for j in range(n - 1, -1, -1):\n            if l[i][j] == '#':\n                dp[j] = 1\n                f = 1\n            if dp[j] == 0 and f == 0:\n                c += 1\n    print(c)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        array = []\n        for _ in range(n):\n            array.append(list(input()))\n        dp = [[1 for jj in range(len(array[0]))] for kk in range(len(array))]\n        ans = 0\n        blocked = [0] * len(array[0])\n        for i in range(len(array) - 1, -1, -1):\n            for j in range(len(array[0]) - 1, -1, -1):\n                s = 0\n                if array[i][j] == '#':\n                    s = 1\n                    dp[i][j] = 1\n                    blocked[j] = 1\n                    continue\n                if j < len(array[0]) - 1:\n                    bb = dp[i][j + 1]\n                else:\n                    bb = 0\n                cache = max(blocked[j], bb, s)\n                dp[i][j] = bb\n                if cache == 0:\n                    ans += 1\n        print(ans)\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        l.append(list(input()))\n    dp = [0 for i in range(n)]\n    c = 0\n    f = 0\n    for i in range(n - 1, -1, -1):\n        if l[-1][i] == '#':\n            dp[i] = 1\n            f = 1\n        if f == 0:\n            c += 1\n    for i in range(n - 2, -1, -1):\n        f = 0\n        for j in range(n - 1, -1, -1):\n            if l[i][j] == '#':\n                dp[j] = 1\n                f = 1\n            if dp[j] == 0 and f == 0:\n                c += 1\n    print(c)", "T = int(input())\nfor k in range(T):\n    N = int(input())\n    b = [[0] * N + [1] for i in range(N)]\n    b.append([1 for i in range(N + 1)])\n    d = [[0] * N + [1] for i in range(N)]\n    d.append([1 for i in range(N + 1)])\n    a = []\n    for j in range(N):\n        x = input()\n        a.append(x)\n    c = 0\n    for i in range(N - 1, -1, -1):\n        for j in range(N - 1, -1, -1):\n            if a[i][j] == '.' and b[i][j + 1] == 1:\n                b[i][j] = 1\n            else:\n                b[i][j] = 0\n            if a[i][j] == '.' and d[i + 1][j] == 1:\n                d[i][j] = 1\n            else:\n                d[i][j] = 0\n            if b[i][j] == 1 and d[i][j] == 1:\n                c = c + 1\n    print(c)", "for t in range(0, int(input())):\n    n = int(input())\n    arr = []\n    for i in range(0, n):\n        s = input()\n        arr.append(s)\n    count = 0\n    new_arr = [[0 for i in range(n)] for j in range(n)]\n    new_arr2 = [[0 for i in range(n)] for j in range(n)]\n    for i in range(0, n):\n        if arr[n - 1][i] == '.':\n            new_arr[n - 1][i] = 1\n        if arr[i][n - 1] == '.':\n            new_arr2[i][n - 1] = 1\n    for i in range(n - 1, 0, -1):\n        for j in range(0, n):\n            if new_arr[i][j] == 1 and arr[i - 1][j] == '.':\n                new_arr[i - 1][j] = 1\n            if new_arr2[j][i] == 1 and arr[j][i - 1] == '.':\n                new_arr2[j][i - 1] = 1\n    for i in range(0, n):\n        for j in range(0, n):\n            if new_arr[i][j] == 1 and new_arr2[i][j] == 1:\n                count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        l.append(list(input()))\n    dp = [0 for i in range(n)]\n    c = 0\n    f = 0\n    for i in range(n - 1, -1, -1):\n        if l[-1][i] == '#':\n            dp[i] = 1\n            f = 1\n        if f == 0:\n            c += 1\n    for i in range(n - 2, -1, -1):\n        f = 0\n        for j in range(n - 1, -1, -1):\n            if l[i][j] == '#':\n                dp[j] = 1\n                f = 1\n            if dp[j] == 0 and f == 0:\n                c += 1\n    print(c)", "def grid(arr):\n    N = len(arr)\n    xPath = [[0 for j in range(N)] for i in range(N)]\n    yPath = [[0 for j in range(N)] for i in range(N)]\n    for i in range(N):\n        j = N - 1\n        while j >= 0:\n            if arr[i][j] == '.':\n                xPath[i][j] = xPath[i][j + 1] if j != N - 1 else 1\n            else:\n                xPath[i][j] = 0\n            if arr[j][i] == '.':\n                yPath[j][i] = yPath[j + 1][i] if j != N - 1 else 1\n            else:\n                yPath[j][1] = 0\n            j -= 1\n    count = 0\n    for i in range(N):\n        for j in range(N):\n            if xPath[i][j] == 1 and yPath[i][j] == 1:\n                count += 1\n    return count\nn = int(input())\nvalues = []\nfor test in range(n):\n    noe = int(input())\n    arr = []\n    for row in range(noe):\n        r = list(input())\n        arr.append(r)\n    values.append(grid(arr))\nfor i in values:\n    print(i)", "def grid(arr):\n    N = len(arr)\n    xPath = [[0 for j in range(N)] for i in range(N)]\n    yPath = [[0 for j in range(N)] for i in range(N)]\n    for i in range(N):\n        j = N - 1\n        while j >= 0:\n            if arr[i][j] == '.':\n                xPath[i][j] = xPath[i][j + 1] if j != N - 1 else 1\n            else:\n                xPath[i][j] = 0\n            if arr[j][i] == '.':\n                yPath[j][i] = yPath[j + 1][i] if j != N - 1 else 1\n            else:\n                yPath[j][1] = 0\n            j -= 1\n    count = 0\n    for i in range(N):\n        for j in range(N):\n            if xPath[i][j] == 1 and yPath[i][j] == 1:\n                count += 1\n    return count\nn = int(input())\nvalues = []\nfor test in range(n):\n    noe = int(input())\n    arr = []\n    for row in range(noe):\n        r = list(input())\n        arr.append(r)\n    values.append(grid(arr))\nfor i in values:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    path = []\n    rows = [-1] * n\n    column = [-1] * n\n    count = 0\n    for i in range(n):\n        a = []\n        for j in input():\n            a.append(j)\n        path.append(a)\n    for i in range(n):\n        for j in range(n):\n            if path[i][j] == '#':\n                rows[i] = j\n                column[j] = i\n    for i in range(n):\n        for j in range(n):\n            if path[i][j] == '.':\n                if rows[i] < j and column[j] < i:\n                    count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    row = [-1] * n\n    col = [-1] * n\n    matrix = []\n    for _ in range(n):\n        matrix.append([c for c in input()])\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == '#':\n                row[i] = j\n                col[j] = i\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == '.':\n                if col[j] < i and row[i] < j:\n                    count += 1\n    print(count)", "output = []\nfor _ in range(int(input())):\n    N = int(input())\n    grid = []\n    for _ in range(N):\n        grid.append(input())\n    row = [[True for _ in range(N)] for _ in range(N)]\n    col = [[True for _ in range(N)] for _ in range(N)]\n    for i in range(N):\n        for j in range(N - 1, -1, -1):\n            if grid[i][j] == '#':\n                row[i][j] = False\n            elif j < N - 1:\n                row[i][j] = row[i][j + 1]\n    for j in range(N):\n        for i in range(N - 1, -1, -1):\n            if grid[i][j] == '#':\n                col[i][j] = False\n            elif i < N - 1:\n                col[i][j] = col[i + 1][j]\n    num = 0\n    for i in range(N):\n        for j in range(N):\n            if row[i][j] and col[i][j]:\n                num += 1\n    output.append(num)\nfor o in output:\n    print(o)", "output = []\nfor _ in range(int(input())):\n    N = int(input())\n    grid = []\n    for _ in range(N):\n        grid.append(input())\n    row = [[True for _ in range(N)] for _ in range(N)]\n    col = [[True for _ in range(N)] for _ in range(N)]\n    for i in range(N):\n        for j in range(N - 1, -1, -1):\n            if grid[i][j] == '#':\n                row[i][j] = False\n            elif j < N - 1:\n                row[i][j] = row[i][j + 1]\n    for j in range(N):\n        for i in range(N - 1, -1, -1):\n            if grid[i][j] == '#':\n                col[i][j] = False\n            elif i < N - 1:\n                col[i][j] = col[i + 1][j]\n    num = 0\n    for i in range(N):\n        for j in range(N):\n            if row[i][j] and col[i][j]:\n                num += 1\n    output.append(num)\nfor o in output:\n    print(o)", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    A = []\n    B = []\n    for i in range(N):\n        s = input()\n        A.append(list(s))\n        B.append(list(s))\n    counter = 0\n    for y in range(N - 1, -1, -1):\n        x = N - 1\n        not_filled = True\n        while x >= 0 and not_filled:\n            if A[y][x] == '#':\n                for x1 in range(x - 1, -1, -1):\n                    B[y][x1] = '#'\n                not_filled = False\n            x -= 1\n    for x in range(0, N):\n        y = N - 1\n        not_filled = True\n        while y >= 0 and not_filled:\n            if A[y][x] == '#':\n                for y1 in range(y - 1, -1, -1):\n                    B[y1][x] = '#'\n                not_filled = False\n            y -= 1\n    counter = 0\n    for y in range(0, N):\n        for x in range(0, N):\n            if B[y][x] == '.':\n                counter += 1\n    print(counter)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    s = []\n    for k in range(n):\n        helper = input()\n        hj = []\n        for c in helper:\n            hj.append(c)\n        s.append(hj)\n    ans = 0\n    blrows = {}\n    for j in reversed(range(n)):\n        flag = True\n        for i in reversed(range(n)):\n            if s[i][j] == '#':\n                flag = False\n                if i not in blrows:\n                    blrows[i] = 0\n            elif flag:\n                if i not in blrows:\n                    ans += 1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    L1 = []\n    for i in range(n):\n        L1.append(list(input()))\n    for j in range(n):\n        for k in range(n - 1, -1, -1):\n            if L1[k][j] == '#':\n                break\n            L1[k][j] = 1\n    ans = 0\n    for j in range(n):\n        for k in range(n - 1, -1, -1):\n            if L1[j][k] == '#':\n                break\n            if L1[j][k] == 1:\n                ans += 1\n    print(ans)", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    M = []\n    for i in range(n):\n        M.append(input())\n    x = [[True for _ in range(n)] for _ in range(n)]\n    y = [[True for _ in range(n)] for _ in range(n)]\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if M[i][j] == '#':\n                x[i][j] = False\n            elif j != n - 1:\n                x[i][j] = x[i][j + 1]\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if M[i][j] == '#':\n                y[i][j] = False\n            elif i != n - 1:\n                y[i][j] = y[i + 1][j]\n    ans = 0\n    for i in range(n):\n        for j in range(n):\n            if x[i][j] and y[i][j]:\n                ans += 1\n    print(ans)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    grid = []\n    for n in range(N):\n        grid.append(input())\n    v_reachable = [[False for i in range(N)] for j in range(N)]\n    for x in range(N):\n        for y in range(N - 1, -1, -1):\n            if grid[y][x] == '#':\n                break\n            v_reachable[y][x] = True\n    h_reachable = [[False for i in range(N)] for j in range(N)]\n    for y in range(N):\n        for x in range(N - 1, -1, -1):\n            if grid[y][x] == '#':\n                break\n            h_reachable[y][x] = True\n    count = 0\n    for y in range(N):\n        for x in range(N):\n            if v_reachable[y][x] and h_reachable[y][x]:\n                count += 1\n    print(count)", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    grid = []\n    for n in range(N):\n        grid.append(input())\n    v_reachable = [[False for i in range(N)] for j in range(N)]\n    for x in range(N):\n        for y in range(N - 1, -1, -1):\n            if grid[y][x] == '#':\n                break\n            v_reachable[y][x] = True\n    h_reachable = [[False for i in range(N)] for j in range(N)]\n    for y in range(N):\n        for x in range(N - 1, -1, -1):\n            if grid[y][x] == '#':\n                break\n            h_reachable[y][x] = True\n    count = 0\n    for y in range(N):\n        for x in range(N):\n            if v_reachable[y][x] and h_reachable[y][x]:\n                count += 1\n    print(count)", "def solve():\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    for j in range(n):\n        for i in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            mat[i][j] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                break\n            if mat[i][j] == 1:\n                ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "import sys\nimport math\nfrom queue import Queue\nimport heapq\n\ndef main(grid):\n    dp = [[None for i in range(len(grid[0]))] for j in range(len(grid))]\n    south = [[None for i in range(len(grid[0]))] for j in range(len(grid))]\n    east = [[None for i in range(len(grid[0]))] for j in range(len(grid))]\n    for i in range(n - 1, -1, -1):\n        for j in range(n - 1, -1, -1):\n            canSee = True if grid[i][j] == '.' else False\n            if i + 1 < n:\n                canSee = south[i + 1][j] and canSee\n            south[i][j] = canSee\n    for i in range(n - 1, -1, -1):\n        for j in range(n - 1, -1, -1):\n            canSee = True if grid[i][j] == '.' else False\n            if j + 1 < n:\n                canSee = east[i][j + 1] and canSee\n            east[i][j] = canSee\n    for i in range(n - 1, -1, -1):\n        for j in range(n - 1, -1, -1):\n            canSee = True if grid[i][j] == '.' else False\n            if i + 1 < n:\n                canSee = south[i + 1][j] and canSee\n            if j + 1 < n:\n                canSee = east[i][j + 1] and canSee\n            dp[i][j] = canSee\n    ans = 0\n    for i in range(n):\n        for j in range(n):\n            if dp[i][j]:\n                ans += 1\n    print(ans)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        s = input()\n        arr.append([c for c in s])\n    main(arr)", "for __ in range(int(input())):\n    n = int(input())\n    a = []\n    b = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        a.append(list(input()))\n    for i in range(n):\n        if a[n - 1][i] == '.':\n            for j in reversed(range(n)):\n                if a[j][i] == '#':\n                    break\n                b[j][i] += 1\n    for i in range(n):\n        if a[i][n - 1] == '.':\n            for j in reversed(range(n)):\n                if a[i][j] == '#':\n                    break\n                b[i][j] += 1\n    ans = 0\n    for x in b:\n        ans += x.count(2)\n    print(ans)", "n = int(input())\nfor z in range(0, n):\n    k = int(input())\n    m = [[]] * k\n    for e in range(0, k):\n        s = input()\n        li = []\n        for w in s:\n            li.append(w)\n        m[e] = li\n    dp = [[0] * k for i in range(0, k)]\n    c = True\n    count = 0\n    for i in range(k - 1, -1, -1):\n        if m[i][k - 1] == '.':\n            if c:\n                count = count + 1\n            dp[i][k - 1] = True\n        else:\n            c = False\n            dp[i][k - 1] = False\n    for e in range(k - 2, -1, -1):\n        c = True\n        for i in range(k - 1, -1, -1):\n            if m[i][e] == '.':\n                if c and dp[i][e + 1]:\n                    count = count + 1\n                dp[i][e] = dp[i][e + 1]\n            else:\n                c = False\n                dp[i][e] = False\n    print(count)", "try:\n    for _ in range(0, int(input())):\n        n = int(input())\n        a = []\n        ans = 0\n        for i in range(0, n):\n            a.append(input())\n        for j in range(n - 1, -1, -1):\n            for i in range(n - 1, -1, -1):\n                if a[i][j] != '#':\n                    if a[i][j + 1:].find('#') == -1:\n                        ans += 1\n                else:\n                    break\n        print(ans)\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    c = 0\n    for i in range(n):\n        l.append(input())\n    for j in range(n - 1, -1, -1):\n        for i in range(n - 1, -1, -1):\n            if l[i][j] != '#':\n                if l[i][j + 1:].find('#') == -1:\n                    c += 1\n            else:\n                break\n    print(c)", "for t in range(int(input())):\n    n = int(input())\n    a = []\n    c = 0\n    for i in range(n):\n        a.append(input())\n    b = [[0 for i in range(n)] for i in range(n)]\n    prev = [0 for i in range(n)]\n    for i in range(n - 1, -1, -1):\n        for j in range(n):\n            if a[i][j] == '#':\n                prev[j] += 1\n            b[i][j] = prev[j]\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if a[i][j] == '#':\n                break\n            if b[i][j] == 0:\n                c += 1\n    print(c)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    p = 0\n    m = []\n    c = [0] * n\n    r = [0] * n\n    for i in range(n):\n        m.append(input())\n    for i in range(n - 1, -1, -1):\n        for j in range(n - 1, -1, -1):\n            if m[i][j] == '#':\n                c[j] = 1\n                r[i] = 1\n            elif c[j] == 0 and r[i] == 0:\n                p = p + 1\n    print(p)\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mat = []\n    cnt = 0\n    (row, col) = ([0] * n, [0] * n)\n    for z in range(n):\n        mat.append(input())\n    for i in range(n - 1, -1, -1):\n        for j in range(n - 1, -1, -1):\n            if mat[i][j] == '#':\n                (col[j], row[i]) = (1, 1)\n            elif col[j] == 0 and row[i] == 0:\n                cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    N = int(input())\n    G = []\n    for i in range(N):\n        G.append(input())\n    cnt = 0\n    row = [True] * N\n    col = [True] * N\n    for i in range(N - 1, -1, -1):\n        for j in range(N - 1, -1, -1):\n            if G[i][j] == '#':\n                row[i] = False\n                col[j] = False\n            if row[i] and col[j]:\n                cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    a = [list(input()) for i in range(n)]\n    c = 0\n    dp = [[0] * n for i in range(n)]\n    for i in range(n - 1, -1, -1):\n        for j in range(n - 1, -1, -1):\n            if a[i][j] == '#':\n                dp[i][j] = 1\n    row = [1] * n\n    col = [1] * n\n    for i in range(n - 1, -1, -1):\n        for j in range(n - 1, -1, -1):\n            if dp[i][j] == 1:\n                row[i] = 0\n                col[j] = 0\n            if row[i] == 1 and col[j] == 1:\n                c += 1\n    print(c)", "def set_row(G, F, y):\n    for i in range(N - 1, -1, -1):\n        if G[y][i] != '#':\n            F[y][i] += 1\n        else:\n            break\n\ndef set_col(G, F, x):\n    for i in range(N - 1, -1, -1):\n        if G[i][x] != '#':\n            F[i][x] += 1\n        else:\n            break\nT = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    G = []\n    for i in range(N):\n        x = list(input())\n        G.append(x)\n    F = [[0 for i in range(N)] for j in range(N)]\n    for i in range(N):\n        set_row(G, F, i)\n        set_col(G, F, i)\n    count = 0\n    for i in range(N):\n        for j in range(N):\n            if F[i][j] == 2:\n                count += 1\n    ans.append(count)\nfor i in ans:\n    print(i)", "def num_of_mirrors(N, a):\n    tot = 0\n    dp = [[[0, 0] for i in range(N)] for j in range(N)]\n    for i in range(N - 1, -1, -1):\n        for j in range(N - 1, -1, -1):\n            if a[i][j] == '.':\n                if j + 1 == N and i + 1 == N:\n                    dp[i][j][0] += 1\n                    dp[i][j][1] += 1\n                    tot += 1\n                elif j + 1 == N or i + 1 == N:\n                    if j + 1 < N:\n                        if dp[i][j + 1][0] == 1:\n                            dp[i][j][0] += 1\n                            tot += 1\n                        dp[i][j][1] += 1\n                    elif i + 1 < N:\n                        if dp[i + 1][j][1] == 1:\n                            dp[i][j][1] += 1\n                            tot += 1\n                        dp[i][j][0] += 1\n                elif dp[i][j + 1][0] == 1 and dp[i + 1][j][1] == 1:\n                    dp[i][j][0] += 1\n                    dp[i][j][1] += 1\n                    tot += 1\n                elif dp[i][j + 1][0] == 1:\n                    dp[i][j][0] += 1\n                elif dp[i + 1][j][1] == 1:\n                    dp[i][j][1] += 1\n    return tot\nt = int(input())\nfor i in range(0, t):\n    N = int(input())\n    l = []\n    for j in range(N):\n        a = input()\n        l.append(a)\n    print(num_of_mirrors(N, l))", "from collections import defaultdict\n\ndef solve(A, n):\n    map_row = defaultdict(list)\n    map_col = defaultdict(list)\n    for row in range(n):\n        count = 0\n        for col in range(n):\n            if A[row][col] == '#':\n                count += 1\n            map_row[row].append(count)\n    for col in range(n):\n        count = 0\n        for row in range(n):\n            if A[row][col] == '#':\n                count += 1\n            map_col[col].append(count)\n    count = 0\n    for row in range(n):\n        for col in range(n):\n            row_count = 1 if A[row][col] == '#' else 0\n            row_count = row_count + map_row[row][n - 1] - map_row[row][col]\n            col_count = 1 if A[row][col] == '#' else 0\n            col_count = col_count + map_col[col][n - 1] - map_col[col][row]\n            if row_count + col_count == 0:\n                count += 1\n    return count\nt = int(input())\nfor k in range(t):\n    A = []\n    n = int(input())\n    for i in range(n):\n        s = input()\n        A.append(list(s))\n    print(solve(A, n))", "t = 0\ntry:\n    t = int(input())\nexcept:\n    pass\n\ndef find_greater_count(x, k):\n    sum = 0\n    for i in x:\n        if k < i:\n            sum += 1\n    return sum\nfor _ in range(t):\n    n = int(input())\n    grid = []\n    for __ in range(n):\n        grid.append(input())\n    mirrors = 0\n    right_bounds = []\n    bottom_bounds = []\n    for i in range(n - 1, -1, -1):\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                right_bounds.append(n - 1 - j)\n                break\n        else:\n            right_bounds.append(n)\n    for j in range(n - 1, -1, -1):\n        for i in range(n - 1, -1, -1):\n            if grid[i][j] == '#':\n                bottom_bounds.append(n - 1 - i)\n                break\n        else:\n            bottom_bounds.append(n)\n    for i in range(n):\n        mirrors += find_greater_count(right_bounds[:bottom_bounds[i]], i)\n    print(mirrors)", "for i in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        u = list(input())\n        l.append(u)\n    f = []\n    for i in range(n):\n        f.append([0] * n)\n    for i in range(n):\n        flag = True\n        for j in range(n - 1, -1, -1):\n            if l[i][j] == '#':\n                flag = False\n            else:\n                if i > 0 and l[i - 1][j] == '.':\n                    f[i][j] += f[i - 1][j]\n                if flag:\n                    f[i][j] += 1\n    print(sum(f[-1]))", "for _ in range(int(input())):\n    n = int(input())\n    (a, v) = ([], [[0 for j in range(n)] for i in range(n)])\n    for i in range(n):\n        k = list(input())\n        a.append(k)\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if a[j][i] == '#':\n                break\n            else:\n                v[j][i] = 1\n    count = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if a[i][j] == '#':\n                break\n            elif v[i][j] == 1:\n                count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    (a, v) = ([], [[0 for j in range(n)] for i in range(n)])\n    for i in range(n):\n        k = list(input())\n        a.append(k)\n    for i in range(n):\n        k = 0\n        for j in range(n - 1, -1, -1):\n            if a[j][i] == '#':\n                k = 1\n                break\n            elif k == 0:\n                v[j][i] = 1\n    count = 0\n    for i in range(n):\n        for j in range(n - 1, -1, -1):\n            if a[i][j] == '#':\n                break\n            elif v[i][j] == 1:\n                count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        s = input()\n        l.append(s)\n    ans = 0\n    f = []\n    for i in range(n):\n        f.append([0] * n)\n    for i in range(n):\n        flag = True\n        for j in range(n - 1, -1, -1):\n            if l[i][j] == '#':\n                flag = False\n            else:\n                if i > 0 and l[i - 1][j] == '.':\n                    f[i][j] += f[i - 1][j]\n                if flag:\n                    f[i][j] += 1\n    print(sum(f[-1]))", "def set_row(G, F, y):\n    for i in range(N - 1, -1, -1):\n        if G[y][i] != '#':\n            F[y][i] += 1\n        else:\n            break\n\ndef set_col(G, F, x):\n    for i in range(N - 1, -1, -1):\n        if G[i][x] != '#':\n            F[i][x] += 1\n        else:\n            break\nT = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    G = []\n    for i in range(N):\n        x = list(input())\n        G.append(x)\n    F = [[0 for i in range(N)] for j in range(N)]\n    for i in range(N):\n        set_row(G, F, i)\n        set_col(G, F, i)\n    count = 0\n    for i in range(N):\n        for j in range(N):\n            if F[i][j] == 2:\n                count += 1\n    ans.append(count)\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    grid = []\n    dp = [[0] * n for i in range(n)]\n    for i in range(n):\n        ll = input()\n        grid.append(ll)\n        if ll[-1] == '.':\n            dp[i][-1] = 1\n    for i in range(n - 2, -1, -1):\n        if grid[0][i] == '#':\n            break\n        dp[0][i] = dp[0][i + 1]\n    for i in range(1, n):\n        f = dp[i][-1] == 1\n        for j in range(n - 2, -1, -1):\n            if grid[i][j] == '#':\n                f = False\n                continue\n            if f:\n                dp[i][j] += dp[i - 1][j] + 1\n            else:\n                dp[i][j] += dp[i - 1][j]\n    for i in range(1, n):\n        if grid[i][-1] == '#':\n            continue\n        dp[i][-1] += dp[i - 1][-1]\n    print(sum(dp[-1]))", "for _ in range(int(input())):\n    n = int(input())\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    grid.append(['.'] * n)\n    grid.reverse()\n    count = 0\n    for i in range(1, n + 1):\n        temp = 0\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '.' and grid[i - 1][j] == '.' and (temp == 0):\n                count += 1\n            elif grid[i][j] == '.' and grid[i - 1][j] == '#':\n                grid[i][j] = '#'\n            else:\n                temp = 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    grid.append(['.'] * n)\n    grid.reverse()\n    count = 0\n    for i in range(1, n + 1):\n        temp = 0\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '.' and grid[i - 1][j] == '.' and (temp == 0):\n                count += 1\n            elif grid[i][j] == '.' and grid[i - 1][j] == '#':\n                grid[i][j] = '#'\n            else:\n                temp = 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    lr = []\n    lc = ['.'] * n\n    for i in range(n):\n        sr = input()\n        sc = ''\n        for j in range(n):\n            if sr[j] == '#':\n                sr = '#' * (j + 1) + sr[j + 1:]\n                lc[j] = '#' * (i + 1)\n            else:\n                lc[j] += '.'\n        lr.append(sr)\n    ans = 0\n    for i in range(n):\n        for j in range(n):\n            if lr[i][j] == '.' and lc[j][i] == '.':\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    grid.append(['.'] * n)\n    grid.reverse()\n    count = 0\n    for i in range(1, n + 1):\n        temp = 0\n        for j in range(n - 1, -1, -1):\n            if grid[i][j] == '.' and grid[i - 1][j] == '.' and (temp == 0):\n                count += 1\n            elif grid[i][j] == '.' and grid[i - 1][j] == '#':\n                grid[i][j] = '#'\n            else:\n                temp = 1\n    print(count)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        temp = list(input())\n        matrix.append(temp)\n    count = 0\n    answer = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n - 1, -1, -1):\n        for j in range(n - 1, -1, -1):\n            if matrix[i][j] == '#':\n                break\n            answer[i][j] += 1\n    for i in range(n - 1, -1, -1):\n        for j in range(n - 1, -1, -1):\n            if matrix[j][i] == '#':\n                break\n            answer[j][i] += 1\n    for i in range(n):\n        for j in range(n):\n            if answer[i][j] == 2:\n                count += 1\n    print(count)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        temp = list(input())\n        matrix.append(temp)\n    count = 0\n    answer = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n - 1, -1, -1):\n        for j in range(n - 1, -1, -1):\n            if matrix[i][j] == '#':\n                break\n            answer[i][j] += 1\n    for i in range(n - 1, -1, -1):\n        for j in range(n - 1, -1, -1):\n            if matrix[j][i] == '#':\n                break\n            answer[j][i] += 1\n    for i in range(n):\n        for j in range(n):\n            if answer[i][j] == 2:\n                count += 1\n    print(count)"]