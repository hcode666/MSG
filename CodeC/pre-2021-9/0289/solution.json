["t = int(input())\nfor i in range(t):\n    s = input()\n    print(len(set(s)))", "for i in range(int(input())):\n    l = list(input())\n    s = list(set(l))\n    print(len(s))", "for i in range(int(input())):\n    s = input()\n    s = set(s)\n    print(len(s))", "testcases = int(input())\nwhile testcases > 0:\n    testcases = testcases - 1\n    s = input()\n    d = dict()\n    for i in range(0, len(s)):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n    print(len(d))", "for i in range(int(input())):\n    l = list(input())\n    s = list(set(l))\n    print(len(s))", "for _ in range(int(input())):\n    n = [a for a in input()]\n    s = list(set(n))\n    print(len(s))", "for i in range(int(input())):\n    l = list(map(str, input()))\n    a = set(l)\n    print(len(a))", "t = int(input())\nfor i in range(t):\n    s = input()\n    s1 = set()\n    for j in s:\n        s1.add(j)\n    print(len(s1))", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = set(s)\n    print(len(p))", "for _ in range(int(input())):\n    m = input()\n    m = set(m)\n    print(len(m))", "from collections import Counter as c\nfor _ in range(int(input())):\n    a = input()\n    print(len(set(a)))", "for t in range(int(input())):\n    k = list(input())\n    m = set(k)\n    print(len(m))", "t = int(input())\nfor ni in range(t):\n    s = input()\n    l = set(list(s))\n    print(len(l))", "for _ in range(int(input())):\n    print(len(set(input())))", "T = int(input())\nfor _ in range(0, T):\n    s = set(str(input()))\n    print(len(s))", "for _ in range(int(input())):\n    s = list(input())\n    l = set(s)\n    print(len(l))", "for i in range(int(input())):\n    s = list(input())\n    t = set(s)\n    print(len(t))", "for i in range(int(input())):\n    s = list(input())\n    t = set(s)\n    print(len(t))", "for i in range(int(input())):\n    s = list(input())\n    t = set(s)\n    print(len(t))", "for _ in range(int(input())):\n    m = input()\n    m = set(m)\n    print(len(m))", "T = int(input())\nfor i in range(T):\n    s = input()\n    set1 = set(s)\n    print(len(set1))", "t = int(input())\nfor t in range(t):\n    s = set(input())\n    print(len(s))", "t = int(input())\nfor i in range(t):\n    s = input()\n    t = ''\n    for char in s:\n        if char not in t:\n            t += char\n    print(len(t))", "for _ in range(int(input())):\n    S = input().strip()\n    print(len(set(S)))", "for tc in range(int(input())):\n    a = input()\n    print(len(set(a)))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    s = list(s)\n    s = set(s)\n    print(len(s))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    print(len(set(s)))", "for i in range(int(input())):\n    s = input()\n    x = set(s)\n    print(len(x))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    s = list(s)\n    s = set(s)\n    print(len(s))", "t = int(input())\nfor i in range(t):\n    s = input()\n    s = list(s)\n    s = set(s)\n    print(len(s))", "t = int(input())\nfor i in range(t):\n    s = input()\n    s = list(s)\n    s = set(s)\n    print(len(s))", "t = int(input())\nfor i in range(t):\n    s = input()\n    s = list(s)\n    s = set(s)\n    print(len(s))", "t = int(input())\nfor i in range(t):\n    s = input()\n    s = list(s)\n    s = set(s)\n    print(len(s))", "t = int(input())\nfor i in range(t):\n    s = input()\n    s = list(s)\n    s = set(s)\n    print(len(s))", "for _ in range(int(input())):\n    print(len(set(input())))", "for i in range(int(input())):\n    string = input()\n    print(len(set(string)))", "for i in range(int(input())):\n    string = input()\n    print(len(set(string)))", "for i in range(int(input())):\n    string = input()\n    count = 0\n    l_st = []\n    for i in range(len(string)):\n        if string[i] not in l_st:\n            l_st.append(string[i])\n            count += 1\n    print(count)", "for i in range(int(input())):\n    s = input()\n    ct = ''\n    for i in s:\n        if i not in ct:\n            ct += i\n    print(len(ct))", "T = int(input())\nfor i in range(T):\n    s = input()\n    ans = ''\n    for i in s:\n        if i not in ans:\n            ans += i\n    print(len(ans))", "n = int(input())\nfor i in range(n):\n    s = input()\n    st = set(s)\n    print(len(st))", "T = int(input())\nfor i in range(0, T):\n    s = str(input())\n    l = list(s)\n    l = [*set(l)]\n    print(len(l))", "for _ in range(int(input())):\n    s = input()\n    s = list(dict.fromkeys(s))\n    print(len(s))", "from collections import Counter, UserString\nfrom math import log2\nmod = lambda n: int(n % (10 ** 9 + 7))\n_fc = [1]\nfor i in range(1, 1000001):\n    _fc.append(i * _fc[i - 1])\n    _fc[i] = mod(_fc[i])\n\ndef fact(n):\n    if -1000001 < n < 1000001:\n        if n > -1:\n            return _fc[n]\n        else:\n            return int('-' + str(_fc[abs(n)]))\n    else:\n        raise ValueError('values only from 1000000 to -1000000 can be factorialized\\n')\n\ndef yn(b, caps=False, y='Yes', n='No'):\n    if b:\n        returning = y\n    else:\n        returning = n\n    if caps == 2:\n        return returning.lower()\n    elif caps:\n        return returning.upper()\n    return returning\n\ndef prob(l, n):\n    return l.count(n) / len(l)\n\ndef isSubseq(s1, s2):\n    (n, m) = (len(s1), len(s2))\n    (i, j) = (0, 0)\n    while i < n and j < m:\n        if s1[i] == s2[j]:\n            i += 1\n        j += 1\n    return i == n\n\ndef isPrime(n):\n    if n > 1:\n        for i in range(2, int(n ** 0.5) + 1):\n            if not n % i:\n                return False\n        else:\n            return True\n    return True\n\ndef percentDiff(n, diff):\n    return n + n * (diff / 100)\n\ndef prodLst(l1, nl):\n    if isinstance(nl, int):\n        return [i * nl for i in l1]\n    else:\n        return [i * j for (i, j) in zip(l1, nl)]\n\ndef divLst(l1, nl, mxMn=False):\n    if isinstance(nl, int):\n        return [i // nl for i in l1]\n    elif mxMn:\n        return [max(i, j) // min(i, j) for (i, j) in zip(l1, nl)]\n    else:\n        return [i // j for (i, j) in zip(l1, nl)]\n\ndef modLst(l, n):\n    return [i % n for i in l]\n\ndef sumLst(l1, nl):\n    if isinstance(nl, int):\n        return [i + nl for i in l1]\n    else:\n        return [i + j for (i, j) in zip(l1, nl)]\n\ndef absLst(l):\n    return [abs(i) for i in l]\n\ndef diffLst(l1, nl, isAbs=False):\n    if isinstance(nl, int):\n        returning = [i - nl for i in l1]\n    else:\n        returning = [i - j for (i, j) in zip(l1, nl)]\n    if isAbs:\n        return absLst(returning)\n    else:\n        return returning\n\ndef remCommonOccurs(l, remLst):\n    srl = set(remLst)\n    returning = []\n    for i in l:\n        if i not in remLst:\n            returning.append(i)\n    return returning\n\ndef remPosNeg(l, posNeg=False):\n    returning = []\n    if not posNeg:\n        for i in l:\n            if i >= 0:\n                returning.append(i)\n    else:\n        for i in l:\n            if i < 0:\n                returning.append(i)\n    return returning\n\ndef flip(nl):\n    if isinstance(nl, int):\n        return -nl\n    elif isinstance(nl, list):\n        return [-i for i in nl]\n\ndef ev(n):\n    return not n & 1\n\ndef decimal(n):\n    return round(n + 0.5)\n\ndef printabs(n):\n    print(abs(n))\n\ndef printm(n):\n    print(mod(n))\n\ndef printy(b, caps=False, y='Yes', n='No'):\n    print(yn(b, caps, y, n))\n\nclass mutableStr(UserString):\n\n    def ins(self, n, s):\n        if n < 0:\n            self.data = self.data = ''.join(list(self.data)[:n + 1]) + s + ''.join(list(self.data)[n + 1:])\n        else:\n            self.data = ''.join(list(self.data)[:n]) + s + ''.join(list(self.data)[n:])\n\n    def rem(self, s):\n        self.data = self.data.replace(s, '')\nalphabetOrd = [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]\nalphabet = list('abcdefghijklmnopqrstuvwxyz')\nbint = lambda b: int(b, 2)\nr2 = lambda n: range(1, n + 1)\nrl = lambda *l: range(len(l[0])) if len(l) == 1 else range(l[0], len(l[1]))\nalph = lambda s: s.isalpha()\nsl = lambda l: list(set(l))\ninf = float('inf')\nsoi = lambda : sorted(input())\nii = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nsi = lambda : mutableStr(str(input()))\nlsi = lambda : list(input())\nsepi = lambda : map(int, input().split())\nseti = lambda : set(map(int, input().split()))\nfor t in range(int(input())):\n    inpStr = sl(si())\n    print(len(inpStr))", "for _ in range(int(input())):\n    print(len(set(input())))", "T = int(input())\nfor i in range(0, T):\n    s = str(input())\n    l = list(s)\n    l = [*set(l)]\n    print(len(l))", "testcase = int(input())\nfor i in range(testcase):\n    lst = list(input())\n    print(len(set(lst)))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    print(len(set(s)))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    lis = list(s)\n    print(len(set(lis)))", "for _ in range(int(input())):\n    s = input()\n    s_set = set(s)\n    print(len(s_set))", "for _ in range(int(input())):\n    s = input()\n    st = ''\n    for i in s:\n        if i not in st:\n            st += i\n    print(len(st))", "n = int(input())\nfor i in range(n):\n    x = input()\n    t = []\n    for i in x:\n        if i not in t:\n            t.append(i)\n    print(len(t))", "for i in range(int(input())):\n    x = input()\n    print(len(set([i for i in x])))", "for i in range(int(input())):\n    x = input()\n    print(len(set([i for i in x])))", "for t in range(int(input())):\n    print(len(set(input())))", "t = int(input())\nfor i in range(t):\n    s = input()\n    st = ''\n    for j in range(len(s)):\n        if s[j] not in st:\n            st += s[j]\n    print(len(st))", "for t in range(int(input())):\n    print(len(set(input())))", "for i in range(int(input())):\n    a = str(input())\n    print(len(set(list(a))))", "for i in range(int(input())):\n    a = str(input())\n    print(len(set(list(a))))", "t = int(input())\nfor i in range(t):\n    a = str(input())\n    print(len(set(list(a))))", "for _ in range(int(input())):\n    n = input()\n    print(len(set(n)))", "for i in range(int(input())):\n    p = input()\n    print(len(set(p)))", "for _ in range(int(input())):\n    s = input()\n    print(len(set(s)))", "for _ in range(int(input())):\n    s = input()\n    print(len(set(list(s))))", "t = int(input())\nfor i in range(t):\n    a = str(input())\n    print(len(set(list(a))))", "for _ in range(int(input())):\n    print(len(set(input())))", "t = int(input())\nfor i in range(t):\n    s = input()\n    print(len(set(list(s))))", "t = int(input())\nfor i in range(t):\n    s = input()\n    print(len(set(list(s))))", "t = int(input())\nfor i in range(t):\n    a = str(input())\n    print(len(set(list(a))))", "for i in range(int(input())):\n    s = input()\n    s = list(s)\n    print(len(set(s)))", "for i in range(int(input())):\n    s = input()\n    s = list(s)\n    print(len(set(s)))", "for _ in range(int(input())):\n    s = input()\n    s = list(s)\n    print(len(set(s)))", "for _ in range(int(input())):\n    s = input()\n    a = set(s)\n    print(len(a))", "for _ in range(int(input())):\n    s = input()\n    print(len(set(s)))", "for i in range(int(input())):\n    s = set(input())\n    print(len(s))", "for _ in range(int(input())):\n    str1 = input()\n    print(len(set(str1)))", "t = int(input())\nfor i in range(t):\n    s = input()\n    l = []\n    for i in s:\n        if i not in l:\n            l.append(i)\n    print(len(l))", "for _ in range(int(input())):\n    s = input()\n    l = set()\n    for i in s:\n        l.add(i)\n    print(len(l))", "for _ in range(int(input())):\n    s = input()\n    if len(s) == len(set(s)):\n        print(len(s))\n    else:\n        s1 = ''\n        for e in s:\n            if e not in s1:\n                s1 += e\n        print(len(s1))", "from collections import Counter\nfor x in range(int(input())):\n    a = input()\n    dictt = Counter(a)\n    print(len(dictt))", "from collections import Counter\nfor x in range(int(input())):\n    a = input()\n    dictt = Counter(a)\n    print(len(dictt))", "for _ in range(int(input())):\n    s = input()\n    x = []\n    for i in s:\n        if i not in x:\n            x.append(i)\n    print(len(x))", "t = int(input())\nfor tc in range(t):\n    s = input()\n    a = []\n    for i in range(len(s)):\n        a.append(s[i])\n    b = set(a)\n    print(len(b))", "for _ in range(int(input())):\n    s = input()\n    print(len(set(s)))", "testcases = int(input())\nfor i in range(testcases):\n    arr = list(input())\n    print(len(set(arr)))", "t = int(input())\nfor _ in range(t):\n    t = input()\n    print(len(set(t)))", "for _ in range(int(input())):\n    s1 = input()\n    print(len(set(s1)))", "t = input()\nfor c in range(0, int(t)):\n    b = input()\n    c = set(b)\n    d = len(c)\n    print(d)", "a = int(input())\nfor i in range(a):\n    b = input()\n    c = set(b)\n    d = len(c)\n    print(d)", "for _ in range(int(input())):\n    s = input().strip()\n    b = set(s)\n    print(len(b))", "for i in range(int(input())):\n    s = input()\n    temp = []\n    unique = 0\n    for i in range(len(s)):\n        if s[i] not in temp:\n            unique += 1\n        temp.append(s[i])\n    print(unique)", "t = int(input())\nfor i in range(0, t):\n    s = input()\n    print(len(set(s)))", "t = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    print(len(set(s)))", "k = int(input())\nfor i in range(k):\n    print(len(set(list(input()))))", "import numpy as np\nt = int(input())\nfor _ in range(t):\n    s = input()\n    l = list(s)\n    a = np.array(l)\n    print(np.unique(a).size)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    h = set(s)\n    print(len(h))", "for x in range(int(input())):\n    s = input()\n    sset = set(s)\n    print\n    print(len(sset))", "t = int(input())\nwhile t > 0:\n    s = input()\n    dict1 = {}\n    op = ''\n    for i in range(len(s)):\n        if s[i] not in dict1:\n            dict1[s[i]] = 1\n            op += s[i]\n    print(len(op))\n    t = t - 1", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    l = list(input())\n    print(len(set(l)))"]