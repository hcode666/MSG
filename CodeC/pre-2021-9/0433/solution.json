["(n, m) = map(int, input().split())\nmatrix = []\nfor _ in range(n):\n    matrix.append([int(x) for x in input().split()])\nk = int(input())\npairs = []\nfor _ in range(k):\n    pairs.append([int(x) for x in input().split()])\n(E1, E2) = (0, 0)\nfor i in range(k):\n    (x, y) = (pairs[i][0], pairs[i][1])\n    if x > n or y > m:\n        E1 = -1\n        break\n    else:\n        E1 += matrix[x - 1][y - 1]\nfor i in range(k):\n    (x, y) = (pairs[i][0], pairs[i][1])\n    if x > m or y > n:\n        E2 = -1\n        break\n    else:\n        E2 += matrix[y - 1][x - 1]\nprint(max(E1, E2))", "(n, m) = map(int, input().split())\nmatrix = []\nfor _ in range(n):\n    matrix.append([int(x) for x in input().split()])\nk = int(input())\npairs = []\nfor _ in range(k):\n    pairs.append([int(x) for x in input().split()])\n(E1, E2) = (0, 0)\nfor i in range(k):\n    (x, y) = (pairs[i][0], pairs[i][1])\n    if x > n or y > m:\n        E1 = -1\n        break\n    else:\n        E1 += matrix[x - 1][y - 1]\nfor i in range(k):\n    (x, y) = (pairs[i][0], pairs[i][1])\n    if x > m or y > n:\n        E2 = -1\n        break\n    else:\n        E2 += matrix[y - 1][x - 1]\nprint(max(E1, E2))", "(n, m) = map(int, input().split())\nmatrix = []\nfor _ in range(n):\n    matrix.append([int(x) for x in input().split()])\nk = int(input())\npairs = []\nfor _ in range(k):\n    pairs.append([int(x) for x in input().split()])\n(E1, E2) = (0, 0)\nfor i in range(k):\n    (x, y) = (pairs[i][0], pairs[i][1])\n    if x > n or y > m:\n        E1 = -1\n        break\n    else:\n        E1 += matrix[x - 1][y - 1]\nfor i in range(k):\n    (x, y) = (pairs[i][0], pairs[i][1])\n    if x > m or y > n:\n        E2 = -1\n        break\n    else:\n        E2 += matrix[y - 1][x - 1]\nprint(max(E1, E2))", "(n, m) = map(int, input().split())\nmatrix = []\nfor _ in range(n):\n    matrix.append([int(x) for x in input().split()])\nk = int(input())\npairs = []\nfor _ in range(k):\n    pairs.append([int(x) for x in input().split()])\n(E1, E2) = (0, 0)\nfor i in range(k):\n    (x, y) = (pairs[i][0], pairs[i][1])\n    if x > n or y > m:\n        E1 = -1\n        break\n    else:\n        E1 += matrix[x - 1][y - 1]\nfor i in range(k):\n    (x, y) = (pairs[i][0], pairs[i][1])\n    if x > m or y > n:\n        E2 = -1\n        break\n    else:\n        E2 += matrix[y - 1][x - 1]\nprint(max(E1, E2))", "(rows, cols) = map(int, input().split())\narr = []\nE1 = 0\nE2 = 0\nfor i in range(rows):\n    col = list(map(int, input().split()))\n    arr.append(col)\nq = int(input())\nfor i in range(q):\n    (i, j) = map(int, input().split())\n    if i > rows or j > cols or E1 == -1:\n        E1 = -1\n    else:\n        E1 += arr[i - 1][j - 1]\n    if i > cols or j > rows or E2 == -1:\n        E2 = -1\n    else:\n        E2 += arr[j - 1][i - 1]\nprint(max(E1, E2))", "(rows, cols) = map(int, input().split())\narr = []\nE1 = 0\nE2 = 0\nfor i in range(rows):\n    col = list(map(int, input().split()))\n    arr.append(col)\nq = int(input())\nfor i in range(q):\n    (i, j) = map(int, input().split())\n    if i > rows or j > cols or E1 == -1:\n        E1 = -1\n    else:\n        E1 += arr[i - 1][j - 1]\n    if i > cols or j > rows or E2 == -1:\n        E2 = -1\n    else:\n        E2 += arr[j - 1][i - 1]\nprint(max(E1, E2))", "(rows, cols) = map(int, input().split())\narr = []\nE1 = 0\nE2 = 0\nfor i in range(rows):\n    col = list(map(int, input().split()))\n    arr.append(col)\nq = int(input())\nfor i in range(q):\n    (i, j) = map(int, input().split())\n    if i > rows or j > cols or E1 == -1:\n        E1 = -1\n    else:\n        E1 += arr[i - 1][j - 1]\n    if i > cols or j > rows or E2 == -1:\n        E2 = -1\n    else:\n        E2 += arr[j - 1][i - 1]\nprint(max(E1, E2))", "A = []\n(n, m) = map(int, input().split())\nfor i in range(n):\n    A_row = list(map(int, input().split()))\n    A.append(A_row)\n(e1, e2) = (0, 0)\nl = int(input())\n(flag1, flag2) = (True, True)\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    if a <= n and b <= m and flag1:\n        e1 += A[a - 1][b - 1]\n    else:\n        e1 = -1\n        flag1 = False\n    if b <= n and a <= m and flag2:\n        e2 += A[b - 1][a - 1]\n    else:\n        e2 = -1\n        flag2 = False\nprint(max(e1, e2))", "(n, m) = map(int, input().split(' '))\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nl = int(input())\ncheck = []\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    check.append([a - 1, b - 1])\n(e1, e2) = (0, 0)\nfor i in range(l):\n    if e1 != -1:\n        if check[i][0] < n and check[i][1] < m:\n            e1 += arr[check[i][0]][check[i][1]]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if check[i][0] < m and check[i][1] < n:\n            e2 += arr[check[i][1]][check[i][0]]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split(' '))\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nl = int(input())\ncheck = []\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    check.append([a - 1, b - 1])\n(e1, e2) = (0, 0)\nfor i in range(l):\n    if e1 != -1:\n        if check[i][0] < n and check[i][1] < m:\n            e1 += arr[check[i][0]][check[i][1]]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if check[i][0] < m and check[i][1] < n:\n            e2 += arr[check[i][1]][check[i][0]]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split(' '))\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nl = int(input())\ncheck = []\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    check.append([a - 1, b - 1])\n(e1, e2) = (0, 0)\nfor i in range(l):\n    if e1 != -1:\n        if check[i][0] < n and check[i][1] < m:\n            e1 += arr[check[i][0]][check[i][1]]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if check[i][0] < m and check[i][1] < n:\n            e2 += arr[check[i][1]][check[i][0]]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split(' '))\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nl = int(input())\ncheck = []\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    check.append([a - 1, b - 1])\n(e1, e2) = (0, 0)\nfor i in range(l):\n    if e1 != -1:\n        if check[i][0] < n and check[i][1] < m:\n            e1 += arr[check[i][0]][check[i][1]]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if check[i][0] < m and check[i][1] < n:\n            e2 += arr[check[i][1]][check[i][0]]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split(' '))\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nl = int(input())\ncheck = []\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    check.append([a - 1, b - 1])\n(e1, e2) = (0, 0)\nfor i in range(l):\n    if e1 != -1:\n        if check[i][0] < n and check[i][1] < m:\n            e1 += arr[check[i][0]][check[i][1]]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if check[i][0] < m and check[i][1] < n:\n            e2 += arr[check[i][1]][check[i][0]]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split(' '))\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nl = int(input())\ncheck = []\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    check.append([a - 1, b - 1])\n(e1, e2) = (0, 0)\nfor i in range(l):\n    if e1 != -1:\n        if check[i][0] < n and check[i][1] < m:\n            e1 += arr[check[i][0]][check[i][1]]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if check[i][0] < m and check[i][1] < n:\n            e2 += arr[check[i][1]][check[i][0]]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split(' '))\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nl = int(input())\ncheck = []\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    check.append([a - 1, b - 1])\n(e1, e2) = (0, 0)\nfor i in range(l):\n    if e1 != -1:\n        if check[i][0] < n and check[i][1] < m:\n            e1 += arr[check[i][0]][check[i][1]]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if check[i][0] < m and check[i][1] < n:\n            e2 += arr[check[i][1]][check[i][0]]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split(' '))\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nl = int(input())\ncheck = []\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    check.append([a - 1, b - 1])\n(e1, e2) = (0, 0)\nfor i in range(l):\n    if e1 != -1:\n        if check[i][0] < n and check[i][1] < m:\n            e1 += arr[check[i][0]][check[i][1]]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if check[i][0] < m and check[i][1] < n:\n            e2 += arr[check[i][1]][check[i][0]]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split(' '))\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nl = int(input())\ncheck = []\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    check.append([a - 1, b - 1])\n(e1, e2) = (0, 0)\nfor i in range(l):\n    if e1 != -1:\n        if check[i][0] < n and check[i][1] < m:\n            e1 += arr[check[i][0]][check[i][1]]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if check[i][0] < m and check[i][1] < n:\n            e2 += arr[check[i][1]][check[i][0]]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split(' '))\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nl = int(input())\ncheck = []\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    check.append([a - 1, b - 1])\n(e1, e2) = (0, 0)\nfor i in range(l):\n    if e1 != -1:\n        if check[i][0] < n and check[i][1] < m:\n            e1 += arr[check[i][0]][check[i][1]]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if check[i][0] < m and check[i][1] < n:\n            e2 += arr[check[i][1]][check[i][0]]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split(' '))\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nl = int(input())\ncheck = []\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    check.append([a - 1, b - 1])\n(e1, e2) = (0, 0)\nfor i in range(l):\n    if e1 != -1:\n        if check[i][0] < n and check[i][1] < m:\n            e1 += arr[check[i][0]][check[i][1]]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if check[i][0] < m and check[i][1] < n:\n            e2 += arr[check[i][1]][check[i][0]]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split(' '))\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nl = int(input())\ncheck = []\nfor i in range(l):\n    (a, b) = map(int, input().split())\n    check.append([a - 1, b - 1])\n(e1, e2) = (0, 0)\nfor i in range(l):\n    if e1 != -1:\n        if check[i][0] < n and check[i][1] < m:\n            e1 += arr[check[i][0]][check[i][1]]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if check[i][0] < m and check[i][1] < n:\n            e2 += arr[check[i][1]][check[i][0]]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(N, M) = map(int, input().split())\narr = []\nfor i in range(0, N):\n    k = list(map(int, input().split()))\n    arr.append(k)\nE1 = 0\nE2 = 0\nL = int(input())\nf1 = 0\nf2 = 0\nfor j in range(0, L):\n    (a, b) = map(int, input().split())\n    if a > N or b > M:\n        E1 = -1\n        f1 = 1\n    elif f1 == 0:\n        E1 += arr[a - 1][b - 1]\n    if b > N or a > M:\n        E2 = -1\n        f2 = 1\n    elif f2 == 0:\n        E2 += arr[b - 1][a - 1]\nprint(max(E1, E2))", "(n, m) = map(int, input().split())\nl = []\nfor i in range(n):\n    l.append(list(map(int, input().split())))\nans1 = 0\nans2 = 0\nk = int(input())\nc = 0\nd = 0\nfor i in range(k):\n    (a, b) = map(int, input().split())\n    try:\n        ans1 += l[a - 1][b - 1]\n    except:\n        c = 1\n    try:\n        ans2 += l[b - 1][a - 1]\n    except:\n        d = 1\nif c:\n    ans1 = -1\nif d:\n    ans2 = -1\nprint(max(ans1, ans2))", "l = []\n(n, m) = map(int, input().split())\nfor i in range(n):\n    k = list(map(int, input().split()))\n    l.append(k)\ne1 = 0\ne2 = 0\nn1 = int(input())\n(flag1, flag2) = (0, 0)\nfor i in range(n1):\n    (a, b) = map(int, input().split())\n    if a <= n and b <= m and (flag1 == 0):\n        e1 += l[a - 1][b - 1]\n    else:\n        e1 = -1\n        flag1 = 1\n    if b <= n and a <= m and (flag2 == 0):\n        e2 += l[b - 1][a - 1]\n    else:\n        e2 = -1\n        flag2 = 1\nprint(max(e1, e2))", "temp = list(map(int, input().split()))\nn = temp[0]\nm = temp[1]\nmat = []\nfor i in range(n):\n    mat.append(list(map(int, input().split())))\nl = int(input())\ne1 = 0\ne2 = 0\nfor t in range(l):\n    pair = list(map(int, input().split()))\n    i = pair[0] - 1\n    j = pair[1] - 1\n    if e1 != -1:\n        if i >= 0 and j >= 0 and (i < n) and (j < m):\n            e1 += mat[i][j]\n        else:\n            e1 = -1\n    if e2 != -1:\n        if i >= 0 and j >= 0 and (i < m) and (j < n):\n            e2 += mat[j][i]\n        else:\n            e2 = -1\nprint(max(e1, e2))", "(nrow, ncol) = map(int, input().split())\na = []\nfor _ in range(nrow):\n    a.append(list(map(int, input().split())))\ne1 = e2 = 0\nl = int(input())\nfor _ in range(l):\n    (i, j) = map(int, input().split())\n    (i, j) = (i - 1, j - 1)\n    if e1 != -1 and i < nrow and (j < ncol):\n        e1 += a[i][j]\n    else:\n        e1 = -1\n    if e2 != -1 and j < nrow and (i < ncol):\n        e2 += a[j][i]\n    else:\n        e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split())\nmatrix = []\nfor i in range(0, n):\n    new = list(map(int, input().split()))\n    matrix.append(new)\nl = int(input())\npairs = []\nfor i in range(0, l):\n    new = list(map(int, input().split()))\n    pairs.append(new)\ne1 = e2 = 0\nfor i in pairs:\n    try:\n        e1 += matrix[i[0] - 1][i[1] - 1]\n    except:\n        e1 = -1\n        break\nfor i in pairs:\n    try:\n        e2 += matrix[i[1] - 1][i[0] - 1]\n    except:\n        e2 = -1\n        break\nprint(max(e1, e2))", "(N, M) = [int(x) for x in input().split()]\nm = []\nfor i in range(N):\n    n = [int(x) for x in input().split()]\n    m.append(n)\nL = int(input())\nE_1 = 0\nE_2 = 0\ne_1 = False\ne_2 = False\nfor t in range(L):\n    (i, j) = [int(x) for x in input().split()]\n    try:\n        E_1 += m[i - 1][j - 1]\n    except:\n        e_1 = True\n    try:\n        E_2 += m[j - 1][i - 1]\n    except:\n        e_2 = True\nif e_1 == True:\n    E_1 = -1\nif e_2 == True:\n    E_2 = -1\nprint(max(E_1, E_2))", "class MatrixTest(object):\n\n    def __init__(self):\n        self.valid = True\n        self.vals_sum = 0\n\n    def add_el(self, matrix, row, col):\n        if self.valid:\n            try:\n                self.vals_sum += matrix[row][col]\n            except IndexError:\n                self.valid = False\n                self.vals_sum = -1\n(n, m) = (int(x) for x in input().split())\nmatrix = []\nfor _ in range(n):\n    matrix.append(tuple((int(x) for x in input().split())))\ntranspose_matrix = list(zip(*matrix))\nl = int(input())\nm1 = MatrixTest()\nm2 = MatrixTest()\nfor _ in range(l):\n    (a, b) = (int(x) - 1 for x in input().split())\n    m1.add_el(matrix, a, b)\n    m2.add_el(transpose_matrix, a, b)\nprint(max(m1.vals_sum, m2.vals_sum))", "(n, m) = input().split()\nn = int(n)\nm = int(m)\nA = []\nfor i in range(n):\n    A.append([int(x) for x in input().split()])\ne1 = 0\ne2 = 0\nk = int(input())\nfor i in range(k):\n    (x, y) = input().split()\n    x = int(x) - 1\n    y = int(y) - 1\n    if e1 > -1 and x < n and (y < m):\n        e1 += A[x][y]\n    else:\n        e1 = -1\n    if e2 > -1 and x < m and (y < n):\n        e2 += A[y][x]\n    else:\n        e2 = -1\nprint(max(e1, e2))", "(n, m) = map(int, input().split())\nmat = [list(map(int, input().split())) for i in range(n)]\nl = int(input())\nflage1 = 0\nflage2 = 0\ne1 = 0\ne2 = 0\nfor i in range(l):\n    (i, j) = map(int, input().split())\n    i = i - 1\n    j = j - 1\n    if flage1 == 0:\n        if i < n and j < m:\n            e1 = e1 + mat[i][j]\n        else:\n            e1 = -1\n            flage1 = 1\n    if flage2 == 0:\n        if j < n and i < m:\n            e2 = e2 + mat[j][i]\n        else:\n            e2 = -1\n            flage2 = 1\nprint(max(e1, e2))", "line = input().split()\n(row, col) = (int(line[0]), int(line[1]))\nA = []\nfor i in range(row):\n    A.append([int(x) for x in input().split()])\nl = int(input())\nP = []\nfor i in range(l):\n    P.append([int(x) for x in input().split()])\nE1 = 0\nE2 = 0\nfor el in P:\n    if E1 >= 0 and el[0] <= row and (el[1] <= col):\n        E1 = E1 + A[el[0] - 1][el[1] - 1]\n    else:\n        E1 = -1\n    if E2 >= 0 and el[0] <= col and (el[1] <= row):\n        E2 = E2 + A[el[1] - 1][el[0] - 1]\n    else:\n        E2 = -1\nprint(max(E1, E2))"]