["dp = [0, 1, 1]\nfor i in range(3, 10005):\n    dp.append(dp[i - 1] + dp[i - 2])\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n in dp:\n        print('YES')\n    else:\n        print('NO')", "dp = [0, 1, 1]\nfor i in range(3, 10005):\n    dp.append(dp[i - 1] + dp[i - 2])\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n in dp:\n        print('YES')\n    else:\n        print('NO')", "dp = [0, 1, 1]\nfor i in range(3, 10005):\n    dp.append(dp[i - 1] + dp[i - 2])\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n in dp:\n        print('YES')\n    else:\n        print('NO')", "dp = [0, 1, 1]\nfor i in range(3, 10005):\n    dp.append(dp[i - 1] + dp[i - 2])\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n in dp:\n        print('YES')\n    else:\n        print('NO')", "dp = [0, 1, 1]\nfor i in range(3, 10005):\n    dp.append(dp[i - 1] + dp[i - 2])\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n in dp:\n        print('YES')\n    else:\n        print('NO')", "dp = [0, 1, 1]\nfor i in range(3, 10005):\n    dp.append(dp[i - 1] + dp[i - 2])\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n in dp:\n        print('YES')\n    else:\n        print('NO')", "dp = [0, 1, 1]\nfor i in range(3, 10005):\n    dp.append(dp[i - 1] + dp[i - 2])\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n in dp:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = 0\n    b = 1\n    while b < n:\n        c = a + b\n        a = b\n        b = c\n    if b > n:\n        print('NO')\n    else:\n        print('YES')", "l = [0, 1]\nfor i in range(2, 20001):\n    l.append(l[i - 1] + l[i - 2])\nt = int(input())\nfor item in range(t):\n    n = int(input())\n    if n in l:\n        print('YES')\n    else:\n        print('NO')", "l = [0, 1]\nfor i in range(2, 20001):\n    l.append(l[i - 1] + l[i - 2])\nt = int(input())\nfor item in range(t):\n    n = int(input())\n    if n in l:\n        print('YES')\n    else:\n        print('NO')", "fib_lst = [0, 1]\ndic = {}\nfor i in range(2, 4000):\n    fib_lst.append(fib_lst[i - 1] + fib_lst[i - 2])\nfor x in fib_lst:\n    dic[x] = 1\nfor _ in range(int(input())):\n    if int(input()) in dic:\n        print('YES')\n    else:\n        print('NO')", "fib_lst = [0, 1]\ndic = {}\nfor i in range(2, 4000):\n    fib_lst.append(fib_lst[i - 1] + fib_lst[i - 2])\nfor x in fib_lst:\n    dic[x] = 1\nfor _ in range(int(input())):\n    if int(input()) in dic:\n        print('YES')\n    else:\n        print('NO')", "fib_lst = [0, 1]\ndic = {}\nfor i in range(2, 4000):\n    fib_lst.append(fib_lst[i - 1] + fib_lst[i - 2])\nfor x in fib_lst:\n    dic[x] = 1\n\ndef solve():\n    if int(input()) in dic:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    solve()", "fib_lst = [0, 1]\ndic = {}\nfor i in range(2, 4000):\n    fib_lst.append(fib_lst[i - 1] + fib_lst[i - 2])\n\ndef solve():\n    if int(input()) in fib_lst:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    solve()", "fib_lst = [0, 1]\ndic = {}\nfor i in range(2, 4000):\n    fib_lst.append(fib_lst[i - 1] + fib_lst[i - 2])\nfor x in fib_lst:\n    dic[x] = 1\n\ndef solve():\n    if int(input()) in dic:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    solve()", "fib_lst = [0, 1]\ndic = {}\nfor i in range(2, 4000):\n    fib_lst.append(fib_lst[i - 1] + fib_lst[i - 2])\nfor x in fib_lst:\n    dic[x] = 1\nfor _ in range(int(input())):\n    if int(input()) in dic:\n        print('YES')\n    else:\n        print('NO')", "fib_lst = [0, 1]\ndic = {}\nfor i in range(2, 4000):\n    fib_lst.append(fib_lst[i - 1] + fib_lst[i - 2])\nfor x in fib_lst:\n    dic[x] = 1\nfor _ in range(int(input())):\n    if int(input()) in dic:\n        print('YES')\n    else:\n        print('NO')", "fib_lst = [0, 1]\ndic = {}\nfor i in range(2, 6000):\n    fib_lst.append(fib_lst[i - 1] + fib_lst[i - 2])\nfor x in fib_lst:\n    dic[x] = 1\nfor _ in range(int(input())):\n    if int(input()) in dic:\n        print('YES')\n    else:\n        print('NO')", "tc = input()\narr = [0, 1, 1, 2, 3, 5]\nlst = 5\nfor i in range(100000):\n    cur = arr[lst] + arr[lst - 1]\n    arr.append(cur)\n    lst = lst + 1\nlen1 = len(arr)\nfor i1 in range(int(tc)):\n    n = int(input())\n    ans = 0\n    for i in range(len1):\n        if arr[i] > n:\n            break\n        if arr[i] == n:\n            ans = 1\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "a = 0\nb = 1\ncnt = 0\nlst = []\nwhile True:\n    d = a + b\n    b = a\n    a = d\n    cnt = cnt + 1\n    lst.append(d)\n    if cnt > 5000:\n        break\ntc = int(input())\nfor _ in range(tc):\n    s = int(input())\n    if s in lst:\n        print('YES')\n    else:\n        print('NO')", "lst = [0, 1]\ndc = {}\nfor i in range(2, 8000):\n    lst.append(lst[i - 1] + lst[i - 2])\nfor x in lst:\n    dc[x] = 1\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    if n in dc:\n        print('YES')\n    else:\n        print('NO')", "a = 0\nb = 1\ncnt = 0\nmap = {}\nmap[0] = 1\nmap[1] = 1\nfor _ in range(5000):\n    d = a + b\n    b = a\n    a = d\n    map[d] = 1\ntc = int(input())\nfor _ in range(tc):\n    s = int(input())\n    if s in map:\n        print('YES')\n    else:\n        print('NO')", "tc = input()\narr = [0, 1, 1, 2, 3, 5]\nlst = 5\nfor i in range(100000):\n    cur = arr[lst] + arr[lst - 1]\n    arr.append(cur)\n    lst = lst + 1\nlen1 = len(arr)\nfor i1 in range(int(tc)):\n    n = int(input())\n    ans = 0\n    for i in range(len1):\n        if arr[i] > n:\n            break\n        if arr[i] == n:\n            ans = 1\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    (x, y, s, f) = (0, 1, 0, 0)\n    while s <= a:\n        s = x + y\n        x = y\n        y = s\n        if s == a:\n            print('YES')\n            f = 1\n            break\n    if f == 0:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    (x, y, s, f) = (0, 1, 0, 0)\n    while s <= a:\n        s = x + y\n        x = y\n        y = s\n        if s == a:\n            print('YES')\n            f = 1\n            break\n    if f == 0:\n        print('NO')", "import sys\nimport math\n\ndef _input():\n    return sys.stdin.readline().strip()\n\ndef main():\n    b = 10 ** 1000\n    s = set()\n    f1 = 0\n    f2 = 1\n    s.add(f1)\n    s.add(f2)\n    while f2 <= b:\n        f3 = f2 + f1\n        s.add(f3)\n        f1 = f2\n        f2 = f3\n    for _ in range(int(_input())):\n        n = int(_input())\n        if n in s:\n            print('YES')\n        else:\n            print('NO')\nmain()", "myset = set([0, 1])\na = 0\nb = 1\nfor i in range(0, 100000):\n    c = a + b\n    myset.add(c)\n    a = b\n    b = c\nt = int(input())\nfor i in range(0, t):\n    j = int(input())\n    ans = j in myset\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "l = [0, 1]\nwhile True:\n    l.append(l[-1] + l[-2])\n    if len(str(l[-1])) > 1000:\n        break\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print('YES' if n in l else 'NO')", "import math\n\ndef integer_list():\n    return list(map(int, input().split()))\nlst = [0, 1]\nwhile True:\n    lst.append(lst[-1] + lst[-2])\n    if len(str(lst[-1])) > 1000:\n        break\n\ndef main():\n    pass\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n in lst:\n        print('YES')\n    else:\n        print('NO')\n    main()", "import math\nimport sys\nfrom collections import Counter, defaultdict\nfrom bisect import bisect_left\nmod = 1000000007\n\ndef integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\nlst = [0, 1]\nwhile True:\n    lst.append(lst[-1] + lst[-2])\n    if len(str(lst[-1])) > 1000:\n        break\n\ndef main():\n    pass\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n in lst:\n        print('YES')\n    else:\n        print('NO')\n    main()", "def fib(n):\n    n -= 1\n    (a, b, c, d) = (1, 1, 1, 0)\n    (x, y) = (1, 0)\n    while n:\n        if n % 2:\n            (x, y) = (a * x + b * y, c * x + d * y)\n        (a, b, c, d) = (a * a + b * c, a * b + b * d, c * a + d * c, c * b + d * d)\n        n >>= 1\n    return y\nfor _ in range(int(input())):\n    a = int(input())\n    (lo, hi) = (0, 9999)\n    while lo < hi:\n        m = (lo + hi) // 2\n        if fib(m) < a:\n            lo = m + 1\n        else:\n            hi = m\n    print('YES' if fib(hi) == a else 'NO')", "def fib(n):\n    n -= 1\n    (a, b, c, d) = (1, 1, 1, 0)\n    (x, y) = (1, 0)\n    while n:\n        if n % 2:\n            (x, y) = (a * x + b * y, c * x + d * y)\n        (a, b, c, d) = (a * a + b * c, a * b + b * d, c * a + d * c, c * b + d * d)\n        n >>= 1\n    return y\nfor _ in range(int(input())):\n    a = int(input())\n    (lo, hi) = (0, 9999)\n    while lo < hi:\n        m = (lo + hi) // 2\n        if fib(m) < a:\n            lo = m + 1\n        else:\n            hi = m\n    print('YES' if fib(hi) == a else 'NO')", "F = [0, 1]\nfor i in range(2, 10001):\n    F.append(F[i - 1] + F[i - 2])\nfor _ in range(int(input())):\n    n = int(input())\n    print('YES') if n in F else print('NO')", "try:\n    from debug import debug, timer\nexcept ImportError:\n    pass\nfrom sys import stdin\ninput = stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\n\ndef getvals():\n    while True:\n        yield from input().split()\n\ndef tri(n):\n    return n * (n + 1) // 2\n\ndef smallest_first(m, n):\n    return (min(m, n), max(m, n))\n\ndef fibonacci(n):\n\n    def fib_inner(n):\n        if n == 0:\n            return (0, 1)\n        (u, v) = fib_inner(n >> 1)\n        q = (n & 2) - 1\n        u *= u\n        v *= v\n        if n & 1:\n            return (u + v, 3 * v - 2 * (u - q))\n        return (2 * (v + q) - 3 * u, u + v)\n    (u, v) = fib_inner(n >> 1)\n    l = 2 * v - u\n    if n & 1:\n        q = (n & 2) - 1\n        return v * l + q\n    return u * l\nmax_fib_length = 1000\nfibs = list()\n\ndef gen_fibs():\n    n = 1\n    f = fibonacci(n)\n    while len(str(f)) < max_fib_length:\n        fibs.append(f)\n        n += 1\n        f = fibonacci(n)\n\ndef solve(a):\n    return 'YES' if a in fibs else 'NO'\n\ndef do_codechef():\n    gen_fibs()\n    for t in rii():\n        print(solve(ii()))\ndo_codechef()\nexit()", "F = [0, 1]\nfor i in range(2, 10001):\n    F.append(F[i - 1] + F[i - 2])\nfor _ in range(int(input())):\n    n = int(input())\n    print('YES') if n in F else print('NO')", "F = [0, 1]\nfor i in range(2, 10001):\n    F.append(F[i - 1] + F[i - 2])\nfor _ in range(int(input())):\n    n = int(input())\n    print('YES') if n in F else print('NO')", "F = [0, 1]\nfor i in range(2, 10001):\n    F.append(F[i - 1] + F[i - 2])\nfor _ in range(int(input())):\n    n = int(input())\n    print('YES') if n in F else print('NO')", "F = [0, 1]\nfor i in range(2, 10001):\n    F.append(F[i - 1] + F[i - 2])\nfor _ in range(int(input())):\n    n = int(input())\n    print('YES') if n in F else print('NO')", "a = [0, 1]\nfor i in range(2, 10001):\n    a.append(a[i - 1] + a[i - 2])\nfor t in range(int(input())):\n    n = int(input())\n    if n in a:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    if n == 0:\n        print('YES')\n    else:\n        f_prev = 0\n        f_now = 1\n        f_next = f_now + f_prev\n        bool_var = 0\n        while True:\n            f_next = f_now + f_prev\n            f_prev = f_now\n            f_now = f_next\n            if n == f_next:\n                bool_var = 1\n                break\n            elif f_next > n:\n                bool_var = 0\n                break\n        if bool_var:\n            print('YES')\n        else:\n            print('NO')\n    t -= 1", "def fib(n):\n    l = [1, 1]\n    j = 1\n    while l[j] < n:\n        j += 1\n        x = l[j - 1] + l[j - 2]\n        l.append(x)\n    return l[-1]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    y = fib(n)\n    if y == n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = 1\n    b = 1\n    while b < n:\n        a = a + b\n        b = a + b\n    if a != n and b != n:\n        print('NO')\n        continue\n    print('YES')", "mem = [0] * (4784 + 1)\n\ndef makef():\n    mem[1] = 1\n    mem[2] = 2\n    for i in range(3, 4784):\n        mem[i] = mem[i - 1] + mem[i - 2]\nmakef()\nt = int(input())\nfor _ in range(t):\n    a = int(input())\n    yes = 'NO'\n    imin = 1\n    imax = 4784\n    i = (imax - imin) // 2 + imin\n    while True:\n        if a == mem[i]:\n            yes = 'YES'\n            break\n        elif a < mem[i]:\n            imax = i\n            i = (imax - imin) // 2 + imin\n        else:\n            imin = i\n            i = (imax - imin) // 2 + imin\n        if imax - imin <= 1:\n            break\n    print(yes)", "mem = [0] * 5000\n\ndef makef():\n    mem[1] = 1\n    mem[2] = 2\n    for i in range(3, 4785):\n        mem[i] = mem[i - 1] + mem[i - 2]\nmakef()\nt = int(input())\nfor _ in range(t):\n    a = int(input())\n    yes = 'NO'\n    for i in range(4785):\n        if mem[i] == a:\n            yes = 'YES'\n            break\n    print(yes)", "arr = set()\narr.add(0)\na = 0\nb = 1\nwhile len(str(b)) <= 1000:\n    (b, a) = (a + b, b)\n    arr.add(b)\nfor i in range(int(input())):\n    N = int(input())\n    if N in arr:\n        print('YES')\n    else:\n        print('NO')", "S = set()\nS.add(0)\na = 0\nb = 1\nwhile len(str(b)) <= 1000:\n    (b, a) = (a + b, b)\n    S.add(b)\nfor _ in range(int(input())):\n    N = int(input())\n    if N in S:\n        print('YES')\n    else:\n        print('NO')", "a = [0, 1]\nfor i in range(4800):\n    a.append(a[-1] + a[-2])\nfor i in range(int(input())):\n    n = int(input())\n    if n in a:\n        print('YES')\n    else:\n        print('NO')", "l = [0, 1]\nfor i in range(4800):\n    l.append(l[-1] + l[-2])\nfor i in range(int(input())):\n    x = int(input())\n    if x in l:\n        print('YES')\n    else:\n        print('NO')", "l = [0, 1]\nfor i in range(4800):\n    l.append(l[-1] + l[-2])\nfor i in range(int(input())):\n    x = int(input())\n    if x in l:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    f1 = 0\n    f2 = 1\n    f3 = 0\n    while f3 < n:\n        f3 = f1 + f2\n        (f1, f2) = (f2, f3)\n        if f3 == n:\n            flag = 1\n            break\n        else:\n            flag = 0\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\n_1_50 = 1 << 50\n\ndef isqrt(x):\n    if x < 0:\n        raise ValueError('square root not defined for negative numbers')\n    if x < _1_50:\n        return int(math.sqrt(x))\n    n = int(x)\n    if n <= 1:\n        return n\n    r = 1 << (n.bit_length() + 1 >> 1)\n    while True:\n        newr = r + n // r >> 1\n        if newr >= r:\n            return r\n        r = newr\n\ndef is_perfect_suare(x):\n    s = isqrt(x)\n    return s * s == x\nt = int(input())\nwhile t:\n    n = int(input())\n    tmp = 5 * n * n\n    if is_perfect_suare(tmp + 4) or is_perfect_suare(tmp - 4):\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "a = [0, 1]\nfor i in range(2, 10001):\n    a.append(a[i - 1] + a[i - 2])\nfor t in range(int(input())):\n    n = int(input())\n    if n in a:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print('YES')\n        continue\n    elif n == 2:\n        print('NO')\n        continue\n    else:\n        flag = 0\n        first = 0\n        second = 1\n        third = 1\n        while n >= third:\n            third = first + second\n            if n == third:\n                print('YES')\n                flag = 1\n                break\n            first = second\n            second = third\n        if flag == 0:\n            print('NO')", "from bisect import bisect_left\nt = int(input())\nfibs = [0, 1]\nwhile True:\n    fib = fibs[-1] + fibs[-2]\n    if fib < 10 ** 1001:\n        fibs.append(fib)\n    else:\n        break\nwhile t:\n    t = t - 1\n    a = int(input())\n    i = bisect_left(fibs, a)\n    if i != len(fibs) and fibs[i] == a:\n        print('YES')\n    else:\n        print('NO')", "def is_fibonacci(n):\n    a = 0\n    b = 1\n    while True:\n        (a, b) = (b, a + b)\n        if b >= n:\n            if b == n:\n                print('YES')\n            else:\n                print('NO')\n            break\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    is_fibonacci(n)", "def bis(a, key, p, q):\n    if q == p + 1 and a[p] != key:\n        return False\n    mid = (p + q) // 2\n    if a[mid] == key:\n        return True\n    if a[mid] < key:\n        return bis(a, key, mid, q)\n    else:\n        return bis(a, key, p, mid)\nquery = []\nfor _ in range(int(input())):\n    query.append(int(input()))\nmaxi = max(query)\nseq = [0, 1]\nwhile seq[-1] + seq[-2] <= maxi:\n    seq.append(seq[-1] + seq[-2])\nlens = len(seq)\nfor i in query:\n    if bis(seq, i, 0, lens):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    pr1 = 0\n    pr2 = 1\n    while True:\n        tm = pr1\n        pr1 = pr2\n        pr2 = tm + pr2\n        if pr2 == n:\n            print('YES')\n            fl = 1\n            break\n        elif pr2 > n:\n            print('NO')\n            break", "import os\nd = {}\na = 0\nb = 1\nc = a + b\nfor i in range(1, 4783):\n    a = b\n    b = c\n    c = a + b\n    d[c] = i\nt = int(input())\nwhile t != 0:\n    t -= 1\n    q = int(input())\n    if q in d:\n        print('YES')\n    else:\n        print('NO')", "d = {}\na = 0\nb = 1\nc = a + b\nfor i in range(1, 4783):\n    a = b\n    b = c\n    c = a + b\n    d[c] = i\nt = int(input())\nwhile t != 0:\n    t -= 1\n    q = int(input())\n    if q in d:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    pr1 = 0\n    pr2 = 1\n    while True:\n        tm = pr1\n        pr1 = pr2\n        pr2 = tm + pr2\n        if pr2 == n:\n            print('YES')\n            fl = 1\n            break\n        elif pr2 > n:\n            print('NO')\n            break", "for i in range(int(input())):\n    n = int(input())\n    pr1 = 0\n    pr2 = 1\n    while pr2 < n:\n        tm = pr1\n        pr1 = pr2\n        pr2 = tm + pr2\n    if pr2 == n:\n        print('YES')\n    else:\n        print('NO')", "a = 0\nb = 1\nc = 10 ** 1000\nz = set()\nz.add(a)\nz.add(b)\nwhile a + b < c:\n    (a, b) = (b, a + b)\n    z.add(b)\nh = int(input())\nfor i in range(h):\n    n = int(input())\n    if n in z:\n        print('YES')\n    else:\n        print('NO')", "fibonacci = []\n\ndef get_fibonacci(num):\n    b = 1\n    a = 1\n    while b < num:\n        fibonacci.append(b)\n        b = a + b\n        a = fibonacci[-1]\n\ndef check_fibonacci(num):\n    if num in fibonacci:\n        return 'YES'\n    return 'NO'\nget_fibonaccint = int(input())\nfor i in range(t):\n    num = int(input())\n    print(check_fibonacci(num))", "T = int(input())\nfor k in range(T):\n    n = int(input())\n    first = 0\n    second = 1\n    while second < n:\n        temp = first\n        first = second\n        second = second + temp\n    if second == n:\n        print('YES')\n    else:\n        print('NO')", "a = 0\nb = 1\ntar = 10 ** 1000\ns = set()\ns.add(a)\ns.add(b)\nwhile a + b < tar:\n    (a, b) = (b, a + b)\n    s.add(b)\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    if n in s:\n        print('YES')\n    else:\n        print('NO')", "fib = [0, 1]\nfor i in range(2, 10 ** 4 + 1):\n    fib.append(fib[i - 1] + fib[i - 2])\nfor t in range(int(input())):\n    n = int(input())\n    if n in fib:\n        print('YES')\n    else:\n        print('NO')", "def S(n):\n    x = n\n    y = 1\n    e = 1e-45\n    while x - y > e:\n        x = (x + y) / 2\n        y = n / x\n    return x\nfib = [0, 1]\np = 10 ** 4 + 9\nfor i in range(2, p):\n    fib.append(fib[i - 1] + fib[i - 2])\nfor _ in range(int(input())):\n    n = int(input())\n    print('YES' if n in fib else 'NO')", "def check():\n    f = 0\n    s = 1\n    c = f + s\n    fib = {0: 1, 1: 1}\n    while c < 10 ** 1001:\n        (f, s) = (s, c)\n        c = f + s\n        fib[c] = 1\n    input()\n    import sys\n    n = map(int, sys.stdin.read().split())\n    for i in n:\n        try:\n            fib[i]\n            print('YES')\n        except:\n            print('NO')\ncheck()", "def check():\n    f = 0\n    s = 1\n    c = f + s\n    fib = {0: 1, 1: 1}\n    while c < 10 ** 1001:\n        (f, s) = (s, c)\n        c = f + s\n        fib[c] = 1\n    input()\n    import sys\n    n = map(int, sys.stdin.read().split())\n    for i in n:\n        try:\n            fib[i]\n            print('YES')\n        except:\n            print('NO')\ncheck()", "from decimal import *\n\ndef checkFib():\n    num = Decimal(input())\n    current = 1\n    prev = 0\n    while current < num:\n        temp = prev\n        prev = current\n        current = current + temp\n    if current == num:\n        print('YES')\n    else:\n        print('NO')\ntcs = int(input())\nfor i in range(tcs):\n    checkFib()", "b = 10 ** 1000\na = []\nf1 = 0\nf2 = 1\nwhile f2 <= b:\n    f3 = f1 + f2\n    f1 = f2\n    f2 = f3\n    a.append(f3)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n in a:\n        print('YES')\n    else:\n        print('NO')", "fib = list()\nfib.append(0)\nfib.append(1)\nfor i in range(2, 4810):\n    temp = fib[i - 1] + fib[i - 2]\n    fib.append(temp)\nt = int(input())\nfor i in range(t):\n    num = int(input())\n    if num in fib:\n        print('YES')\n    else:\n        print('NO')", "l = [0, 1]\nd = {0: 1, 1: 1}\nfor i in range(2, 10000):\n    n = l[i - 1] + l[i - 2]\n    if len(str(n)) > 1000:\n        break\n    l.append(n)\n    d[n] = 1\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    if n in d:\n        print('YES')\n    else:\n        print('NO')", "a = []\na.append(0)\na.append(1)\nfor i in range(2, 100002):\n    a.append(a[i - 1] + a[i - 2])\ns = set(a)\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    if n in s:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\n\ndef is_perfect_square(n):\n    x = n // 2\n    y = set([x])\n    while x * x != n:\n        x = (x + n // x) // 2\n        if x in y:\n            return False\n        y.add(x)\n    return True\nwhile t > 0:\n    n = int(input())\n    ans1 = 5 * n * n - 4\n    ans2 = 5 * n * n + 4\n    if is_perfect_square(ans1) == True or is_perfect_square(ans2) == True:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "d = {}\nd[0] = 0\nd[1] = 1\nfor i in range(2, 100001):\n    d[i] = d[i - 1] + d[i - 2]\nT = int(input())\nS = set(d.values())\nfor t in range(T):\n    N = int(input())\n    if N in S:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    t = 0\n    t1 = 0\n    u = 0\n    t2 = 1\n    if n == 0:\n        print('YES')\n    elif n == 1:\n        print('YES')\n    else:\n        while t <= n:\n            t = t1 + t2\n            t2 = t1\n            t1 = t\n            if t == n:\n                u += 1\n        if u == 1:\n            print('YES')\n        else:\n            print('NO')", "def is_sq(n):\n    minim = 1\n    maxim = n\n    while minim <= maxim:\n        mid = (minim + maxim) // 2\n        cur = mid * mid\n        if cur > n:\n            maxim = mid - 1\n        elif cur == n:\n            return True\n        else:\n            minim = mid + 1\n    return False\nT = int(input())\nwhile T > 0:\n    T -= 1\n    N = int(input())\n    if is_sq(5 * N * N + 4):\n        print('YES')\n    elif is_sq(5 * N * N - 4):\n        print('YES')\n    else:\n        print('NO')", "lim = 10 ** 1000\nfib = [0, 1]\nwhile fib[-1] <= lim:\n    fib.append(fib[-1] + fib[-2])\nfor _ in range(int(input())):\n    n = int(input())\n    (lo, hi) = (0, len(fib))\n    while lo < hi:\n        mid = lo + hi >> 1\n        if n <= fib[mid]:\n            hi = mid\n        else:\n            lo = mid + 1\n    if fib[lo] == n:\n        print('YES')\n    else:\n        print('NO')", "lim = 10 ** 1000\nfib = [0, 1]\nwhile fib[-1] <= lim:\n    fib.append(fib[-1] + fib[-2])\nfor _ in range(int(input())):\n    n = int(input())\n    (lo, hi) = (0, len(fib))\n    while lo < hi:\n        mid = lo + hi >> 1\n        if n <= fib[mid]:\n            hi = mid\n        else:\n            lo = mid + 1\n    if fib[lo] == n:\n        print('YES')\n    else:\n        print('NO')", "lim = 10 ** 1000\nl = [1, 1]\nt = int(input())\nwhile l[-1] < lim:\n    l.append(l[-1] + l[-2])\nfor i in range(t):\n    flag = False\n    n = int(input())\n    temp = 0\n    while l[temp] <= n:\n        if l[temp] == n:\n            flag = True\n            print('YES')\n        temp += 1\n    if not flag:\n        print('NO')", "f = [0, 1]\nnum = 10 ** 1000\nwhile f[-1] <= num:\n    f.append(f[-1] + f[-2])\nt = int(input())\nfor i in range(0, t):\n    a = int(input())\n    flag = 0\n    for j in f:\n        if j == a:\n            flag = 1\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "d = {}\nd[0] = 0\nd[1] = 1\nfor i in range(2, 100001):\n    d[i] = d[i - 1] + d[i - 2]\nt = int(input())\ns = set(d.values())\nwhile t:\n    t -= 1\n    n = int(input())\n    if n in s:\n        print('YES')\n    else:\n        print('NO')", "import math\na = []\nfor test in range(int(input())):\n    a = int(input())\n    f = 0\n    s = 1\n    t = f + s\n    check = 1\n    for i in range(3, 10000):\n        t = s + f\n        if t == a:\n            check = 0\n            print('YES')\n            break\n        f = s\n        s = t\n    if check:\n        print('NO')", "fibs = [0, 1]\n[fibs.append(fibs[i - 1] + fibs[i - 2]) for i in range(2, 6500)]\nfor n in range(int(input())):\n    x = int(input())\n    i = 0\n    while True:\n        if fibs[i] == x:\n            print('YES')\n            break\n        elif fibs[i] > x:\n            print('NO')\n            break\n        i += 1", "(a, b, c) = (0, 1, 1)\n(Range, fib) = (10 ** 1001, [a, b])\nwhile a + b <= Range:\n    c = a + b\n    fib.append(c)\n    a = b\n    b = c\nfor _ in range(int(input())):\n    n = int(input())\n    if n in fib:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfib = {0: True, 1: True}\nb = 0\na = 1\nwhile len(str(a)) <= 1000:\n    c = a\n    a = b + a\n    b = c\n    fib[a] = True\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    if n in fib:\n        print('YES')\n    else:\n        print('NO')", "l = [0, 1]\na = 0\nb = 1\nfor j in range(5000):\n    (b, a) = (a + b, b)\n    l.append(b)\nfor this in range(int(input())):\n    n = int(input())\n    if n in l:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nflag = 1\nf0 = 0\nf1 = 1\na = [0, 1]\nfor i in range(5000):\n    (f1, f0) = (f1 + f0, f1)\n    a.append(f1)\nwhile t != 0:\n    n = int(input())\n    if n in a:\n        flag = 0\n    else:\n        flag = 1\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nwhile t != 0:\n    flag = 1\n    f0 = 0\n    f1 = 1\n    a = [0, 1]\n    for i in range(5000):\n        (f1, f0) = (f1 + f0, f1)\n        a.append(f1)\n    n = int(input())\n    if n in a:\n        flag = 0\n    else:\n        flag = 1\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "import sys\n\ndef inp():\n    return input()\n\ndef readInt():\n    return int(inp())\n\ndef readList():\n    return list(map(int, inp().strip().split(' ')))\n\ndef readStr():\n    return inp().strip()\n\ndef makeMatrix(x, y, value):\n    a = [0] * x\n    for i in range(x):\n        a[i] = [value] * y\n    return a\nf0 = 0\nf1 = 1\na = [0, 1]\nfor i in range(5000):\n    (f1, f0) = (f1 + f0, f1)\n    a.append(f1)\ntc = readInt()\nwhile tc:\n    tc -= 1\n    x = readInt()\n    if x in a:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef fib2(n):\n    result = []\n    (a, b) = (0, 1)\n    while b <= n:\n        result.append(b)\n        (a, b) = (b, a + b)\n    return result\nfor _ in range(t):\n    x = int(input())\n    a = 0\n    b = 1\n    if x == a or x == b:\n        print('YES')\n    else:\n        y = fib2(x)\n        if x in y:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    l = []\n    n = int(input())\n    l.append(0)\n    l.append(1)\n    for i in range(2, 6000):\n        flag = 0\n        if n == 1 or n == 2:\n            flag = 1\n        l.append(l[i - 1] + l[i - 2])\n        if l[i] == n:\n            flag = 1\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')"]