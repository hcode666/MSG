["def Solve(s):\n    return 1 if s == s[::-1] else 2\nfor _ in range(int(input())):\n    s = input()\n    print(Solve(s))", "def Solve(s):\n    return 1 if s == s[::-1] else 2\nfor _ in range(int(input())):\n    s = input()\n    print(Solve(s))", "def Solve(s):\n    return 1 if s == s[::-1] else 2\nfor _ in range(int(input())):\n    s = input()\n    print(Solve(s))", "def Solve(s):\n    return 1 if s == s[::-1] else 2\nfor _ in range(int(input())):\n    s = input()\n    print(Solve(s))", "for _ in range(int(input())):\n    H = input()\n    if H[::-1] == H:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    h = input()\n    (l, f) = (len(h), 0)\n    for i in range(l):\n        if h[i] != h[l - 1 - i]:\n            f = 1\n            break\n    if f:\n        print('2')\n    else:\n        print('1')", "t = int(input())\nfor u in range(t):\n    a = input()\n    n = True\n    for i in range(len(a) // 2):\n        if a[i] != a[-i - 1]:\n            n = False\n            break\n    if n:\n        print(1)\n    else:\n        print(2)", "T = int(input())\nfor t in range(T):\n    H = input()\n    if H[::-1] == H:\n        print(1)\n    else:\n        print(2)", "for t in range(int(input())):\n    h = input()\n    pal = 0\n    for i in range(len(h) // 2):\n        if h[i] == h[len(h) - i - 1]:\n            pass\n        else:\n            pal = 1\n    if pal == 0:\n        print(1)\n    else:\n        print(2)", "for t in range(int(input())):\n    h = input()\n    pal = 0\n    for i in range(len(h) // 2):\n        if h[i] == h[len(h) - i - 1]:\n            pass\n        else:\n            pal = 1\n    if pal == 0:\n        print(1)\n    else:\n        print(2)", "for t in range(int(input())):\n    h = input()\n    pal = 0\n    for i in range(len(h) // 2):\n        if h[i] == h[len(h) - i - 1]:\n            pass\n        else:\n            pal = 1\n    if pal == 0:\n        print(1)\n    else:\n        print(2)", "for t in range(int(input())):\n    h = input()\n    pal = 0\n    for i in range(len(h) // 2):\n        if h[i] == h[len(h) - i - 1]:\n            pass\n        else:\n            pal = 1\n    if pal == 0:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input().strip()\n    if 'a' not in s or 'b' not in s or s == s[::-1]:\n        print(1)\n    else:\n        print(2)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef outp(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef outlt(lst):\n    sys.stdout.write(' '.join(map(str, lst)) + '\\n')\n\ndef outplt(lst):\n    sys.stdout.write('\\n'.join(map(str, lst)))\n\ndef outpltlt(lst):\n    sys.stdout.write('\\n'.join(map(str, (' '.join(map(str, a)) for a in lst))))\nans = []\nfor _ in range(inp()):\n    H = insr()\n    ans.append(1 if H == H[::-1] else 2)\noutplt(ans)", "def isPalin(s, n):\n    l = 0\n    r = n - 1\n    while l < r:\n        if s[l] != s[r]:\n            return False\n        l += 1\n        r -= 1\n    return True\nfor _ in range(int(input())):\n    h = input()\n    n = len(h)\n    if isPalin(h, n):\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input()\n    if s == s[::-1]:\n        print(1)\n    else:\n        print(2)", "case = int(input())\nfor i in range(case):\n    s = input()\n    n = len(s) // 2\n    t = 1\n    for i in range(n):\n        if s[i] != s[-i - 1]:\n            t = 0\n            break\n        else:\n            t = 1\n    if t == 1:\n        print(1)\n    else:\n        print(2)", "case = int(input())\nfor i in range(case):\n    s = input()\n    n = len(s) // 2\n    t = 1\n    for i in range(n):\n        if s[i] != s[-i - 1]:\n            t = 0\n            break\n        else:\n            t = 1\n    if t == 1:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input()\n    n = len(s) // 2\n    t = 1\n    for i in range(n):\n        if s[i] != s[-i - 1]:\n            t = 0\n            break\n        else:\n            t = 1\n    if t == 1:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    H = input()\n    if H[::-1] == H:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    H = input()\n    if H[::-1] == H:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    H = input()\n    if H[::-1] == H:\n        print(1)\n    else:\n        print(2)", "tests = int(input())\nfor i in range(tests):\n    string = input()\n    is_palindrome = True\n    y = len(string) - 1\n    x = 0\n    while x < y:\n        if string[x] != string[y]:\n            is_palindrome = False\n            break\n        x += 1\n        y -= 1\n    if is_palindrome:\n        print(1)\n    else:\n        print(2)", "for i in range(int(input())):\n    CastleStates = input()\n    if CastleStates[::-1] == CastleStates:\n        print(1)\n    else:\n        print(2)", "for i in range(int(input())):\n    CastleStates = input()\n    if CastleStates[::-1] == CastleStates:\n        print(1)\n    else:\n        print(2)", "for i in range(int(input())):\n    CastleStates = input()\n    if CastleStates[::-1] == CastleStates:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input()\n    p = len(s)\n    count = 0\n    t = 0\n    for i in range(p // 2 - 1):\n        if s[i] != s[-1 - i]:\n            t = 1\n            break\n    if t:\n        print(2)\n    else:\n        print(1)", "def is_palindrome(s1):\n    n = len(s1)\n    for i in range(n // 2):\n        if s1[i] != s1[n - i - 1]:\n            return False\n    return True\nfor _ in range(int(input())):\n    s1 = input()\n    if is_palindrome(s1):\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    a = input()\n    if a == a[::-1]:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    a = input()\n    if a == a[::-1]:\n        print(1)\n    else:\n        print(2)", "def isPalindrome(s):\n    li = len(s) - 1\n    for i in range(len(s) // 2):\n        if s[i] != s[li - i]:\n            return False\n    return True\nT = int(input())\nfor _ in range(T):\n    H = input()\n    if isPalindrome(H):\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    string = input()\n    ans = 1\n    if string != string[::-1]:\n        ans = 2\n    print(ans)", "for _ in range(int(input())):\n    string = input()\n    ans = 1\n    if string != string[::-1]:\n        ans = 2\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    t = s[::-1]\n    if t == s:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input()\n    if s == s[::-1]:\n        print(1)\n    else:\n        print(2)", "from math import gcd, sqrt, ceil, floor, log10\nfrom heapq import heapify, heappop, heappush, nsmallest, nlargest\nfrom collections import Counter, deque, OrderedDict, defaultdict\nfrom itertools import combinations, permutations, zip_longest\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache, reduce\nimport sys\nimport time\nimport string\nimport operator\nsys.setrecursionlimit(3000000)\nINT_MAX = float('inf')\nINT_MIN = float('-inf')\nMOD = int(1000000000.0) + 7\nNEWLINE = '\\n'\nSPACE = ' '\ninp = lambda fn: fn(input())\ninp_vars = lambda fn, delim, convert_to=list: convert_to(map(fn, input().split(delim)))\n\ndef solve(*args, **kwargs):\n    h = args[0]\n    return 2 if h != h[::-1] else 1\n\ndef main(*args, **kwargs):\n    for _ in range(int(input())):\n        arg2 = inp(str)\n        res = solve(*(arg2,))\n        if type(res) in {list, tuple, set}:\n            print(*res, sep=' ')\n        else:\n            print(res)\nmain()", "def palindrome(s):\n    for i in range(len(s)):\n        if s[i] == s[l - i - 1]:\n            result = True\n        else:\n            result = False\n            break\n    return result\nn = int(input())\nwhile n > 0:\n    s = input()\n    l = len(s)\n    if palindrome(s) == True:\n        print('1')\n    else:\n        print('2')\n    n -= 1", "def palindrome(s):\n    for i in range(len(s)):\n        if s[i] == s[l - i - 1]:\n            result = True\n        else:\n            result = False\n            break\n    return result\nn = int(input())\nwhile n > 0:\n    s = input()\n    l = len(s)\n    if palindrome(s) == True:\n        print('1')\n    else:\n        print('2')\n    n -= 1", "T = int(input())\nfor _ in range(T):\n    H = input()\n    if H == H[::-1]:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(t):\n    h = input().strip()\n    if h == h[::-1]:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(t):\n    s = input()\n    if s == s[::-1]:\n        print('1')\n    else:\n        print('2')", "t = int(input())\nfor x in range(t):\n    s = input()\n    if s == s[::-1]:\n        print('1')\n    else:\n        print('2')", "t = int(input())\nfor _ in range(t):\n    h = input()\n    z = len(h)\n    for i in range(z // 2 - 1):\n        if h[i] != h[z - i - 1]:\n            print(2)\n            break\n    else:\n        print(1)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    mid = n // 2\n    flag = False\n    for i in range(mid):\n        if s[i] != s[n - i - 1]:\n            flag = True\n            break\n    if flag:\n        print(2)\n    else:\n        print(1)", "T = int(input())\nfor j in range(0, T):\n    a = input()\n    a = list(a)\n    b = len(a)\n    for j in range(0, b // 2):\n        if a[j] != a[b - j - 1]:\n            print(2)\n            break\n    else:\n        print(1)", "from collections import Counter\nfor _ in range(int(input())):\n    h = input()\n    for i in range(len(h) // 2):\n        if h[i] != h[len(h) - i - 1]:\n            break\n    else:\n        print(1)\n        continue\n    h1 = dict(Counter(h))\n    print(len(list(h1.keys())))", "for _ in range(int(input())):\n    h = str(input())\n    flag = 0\n    for i in range(len(h) // 2):\n        if h[i] != h[len(h) - i - 1]:\n            flag = 1\n            print(2)\n            break\n    if flag == 0:\n        print(1)", "t = int(input())\nfor i in range(t):\n    s = input()\n    if s == s[::-1]:\n        print(1)\n    else:\n        print(2)", "tc = int(input())\nfor _ in range(tc):\n    string = input()\n    if string == string[::-1]:\n        print(1)\n    else:\n        print(2)", "tc = int(input())\nfor _ in range(tc):\n    string = input()\n    if string == string[::-1]:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    mid = n // 2\n    flag = False\n    for i in range(mid):\n        if s[i] != s[n - i - 1]:\n            flag = True\n            break\n    if flag:\n        print(2)\n    else:\n        print(1)", "T = int(input())\nfor _ in range(T):\n    N = input()\n    if N == N[::-1]:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    h = input()\n    if h == h[::-1]:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    h = input()\n    if h == h[::-1]:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    h = input()\n    if h == h[::-1]:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    H = input()\n    n = len(H)\n    l1 = n // 2 - 1\n    if n % 2 == 0:\n        l2 = n // 2\n        count = 0\n    else:\n        l2 = n // 2 + 1\n        count = 1\n    i = 0\n    j = n - 1\n    while True:\n        if i > l1 and j < l2:\n            break\n        if H[i] == H[j]:\n            count += 2\n        i += 1\n        j -= 1\n    if count == n:\n        print('1')\n    else:\n        print('2')", "t = int(input())\nfor i in range(0, t):\n    s = input()\n    if s == s[::-1]:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input()\n    if s == s[::-1]:\n        res = 1\n    else:\n        res = 2\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    if s == s[::-1]:\n        print('1')\n    else:\n        print('2')", "for _ in range(int(input())):\n    s = input()\n    if s == s[::-1]:\n        print('1')\n    else:\n        print('2')", "n = int(input())\nfor i in range(n):\n    s = input()\n    if s == s[::-1]:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(t):\n    s = input()\n    print('1' if s == s[::-1] else '2')", "t = int(input())\nfor i in range(t):\n    s = input()\n    print('1' if s == s[::-1] else '2')", "T = int(input())\nfor i in range(T):\n    s = input()\n    if s == s[::-1]:\n        print('1')\n    else:\n        print('2')", "t = int(input())\nfor i in range(t):\n    s = input()\n    if s == s[::-1]:\n        print('1')\n    else:\n        print('2')", "def pal(s):\n    s1 = s[::-1]\n    if s == s1:\n        return True\nfor _ in range(int(input())):\n    H = input()\n    if pal(H):\n        print(1)\n    else:\n        print(2)", "def pal(s):\n    s1 = s[::-1]\n    if s == s1:\n        return True\nfor _ in range(int(input())):\n    H = input()\n    if pal(H):\n        print(1)\n    else:\n        print(2)", "T = int(input())\nrespuestas = list()\nfor x in range(T):\n    H = input()\n    for x in range(len(H) // 2):\n        if H[x] != H[len(H) - x - 1]:\n            print(2)\n            break\n    else:\n        print(1)", "def is_palindrome(s):\n    return s != s[::-1]\nfor _ in range(int(input())):\n    s = input()\n    print(2) if is_palindrome(s) else print(1)", "for _ in range(int(input())):\n    s = input()\n    print(1 if s == s[::-1] else 2)", "def palindrome(s):\n    for i in range(0, len(s) // 2):\n        if s[i] != s[-i - 1]:\n            return True\n    return False\nt = int(input())\nfor _ in range(0, t):\n    s = input()\n    if palindrome(s):\n        print(2)\n    else:\n        print(1)", "for i in range(int(input())):\n    s = input()\n    if s == s[::-1]:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    g = input()\n    h = g[::-1]\n    if h == g:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    string = input()\n    if string == string[::-1]:\n        print('1')\n    else:\n        print('2')", "def isPalindrome(S, N):\n    for i in range(N):\n        if S[i] != S[N - 1 - i]:\n            return False\n    return True\nT = int(input())\nans = []\nfor _ in range(T):\n    S = input()\n    N = len(S)\n    if isPalindrome(S, N):\n        ans.append(1)\n    else:\n        ans.append(2)\nfor i in ans:\n    print(i)", "def palin(arr):\n    for i in range(len(arr) // 2):\n        if arr[i] != arr[len(arr) - 1 - i]:\n            return -1\n    return 1\nt = int(input())\nfor _ in range(t):\n    arr = input()\n    if palin(arr) == 1:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = len(set(s))\n    if ans == 1:\n        print(1)\n    else:\n        (a, b, f) = (0, -1, 0)\n        for i in range(n // 2):\n            if s[a] != s[b]:\n                print(ans)\n                f = 1\n                break\n            else:\n                a += 1\n                b -= 1\n        if f == 0:\n            print(1)", "t = int(input())\nfor i in range(t):\n    h = input()\n    hr = h[::-1]\n    if h == hr:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nwhile t:\n    s = input()\n    if s == s[::-1]:\n        print(1)\n    else:\n        print(2)\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    h = input()\n    if h == h[::-1]:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor _ in range(t):\n    h = input()\n    if len(h) % 2:\n        if h[:int(len(h) / 2)] == h[int(len(h) / 2) + 1:][::-1]:\n            print(1)\n        else:\n            print(2)\n    elif h[:int(len(h) / 2)] == h[int(len(h) / 2):][::-1]:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nwhile t:\n    h = input()\n    if len(h) % 2:\n        if h[:int(len(h) / 2)] == h[int(len(h) / 2) + 1:][::-1]:\n            print(1)\n        else:\n            print(2)\n    elif h[:int(len(h) / 2)] == h[int(len(h) / 2):][::-1]:\n        print(1)\n    else:\n        print(2)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    q = 0\n    a = input()\n    n = len(a)\n    for i in range(n // 2):\n        if a[i] != a[n - i - 1]:\n            q = 1\n            print(2)\n            break\n    if q == 0:\n        print(1)\n    t -= 1", "from collections import defaultdict\nimport math\nfor _ in range(int(input())):\n    s = input()\n    if s == s[::-1]:\n        print(1)\n    else:\n        print(2)", "def isPalindrome(s):\n    return s == s[::-1]\nt = int(input())\nfor i in range(t):\n    word = input()\n    if isPalindrome(word):\n        print(1)\n    else:\n        print(2)", "def isPalindrome(s):\n    return s == s[::-1]\nt = int(input())\nfor i in range(t):\n    word = input()\n    if isPalindrome(word):\n        print(1)\n    else:\n        print(2)", "test = int(input())\nfor _ in range(test):\n    n = input()\n    i = t = 0\n    l = len(n)\n    if l == 0:\n        continue\n    j = l - 1\n    while i < l // 2:\n        if n[i] != n[j]:\n            t = 1\n            break\n        i += 1\n        j -= 1\n    if t == 0:\n        print(1)\n    else:\n        print(2)", "for i in range(int(input())):\n    a = input()\n    i = t = 0\n    l = len(a)\n    if l == 0:\n        continue\n    j = l - 1\n    while i < l // 2:\n        if a[i] != a[j]:\n            t = 1\n            break\n        i += 1\n        j -= 1\n    if t == 0:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    H = list(input())\n    v = 1\n    if H != H[::-1]:\n        v += 1\n    print(v)", "T = int(input())\nfor i in range(T):\n    N = input()\n    s = list(N)\n    t = s[::-1]\n    if t == s:\n        print(1)\n    else:\n        print(2)", "for j in range(int(input())):\n    x = input()\n    a = list(x)\n    z = a[::-1]\n    if z == a:\n        print(1)\n    else:\n        print(2)", "def is_palindrome(s):\n    result = True\n    for i in range(len(s)):\n        if s[i] != s[len(s) - 1 - i]:\n            return False\n    return True\ntestcase = int(input())\nfor z in range(testcase):\n    s = input()\n    if is_palindrome(s):\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = str(input())\n    i = 0\n    j = len(s) - 1\n    f = 0\n    while i < j:\n        if s[i] != s[j]:\n            f = 1\n            break\n        i += 1\n        j -= 1\n    if f == 1:\n        print(2)\n    else:\n        print(1)", "for _ in range(int(input())):\n    s = str(input())\n    i = 0\n    j = len(s) - 1\n    f = 0\n    while i < j:\n        if s[i] != s[j]:\n            f = 1\n            break\n        i += 1\n        j -= 1\n    if f == 1:\n        print(2)\n    else:\n        print(1)", "for i in range(int(input())):\n    a = input()\n    b = a[::-1]\n    if a == b:\n        print(1)\n    else:\n        print(2)", "for i in range(int(input())):\n    a = list(input())\n    n = len(a)\n    m = 0\n    for j in range(n // 2):\n        if a[j] != a[n - j - 1]:\n            print('2')\n            m = 1\n            break\n    if m == 0:\n        print('1')", "def check(string):\n    result = 1\n    N = len(string)\n    for i in range(N):\n        if string[i] != string[N - 1 - i]:\n            result = 2\n            break\n    return result\nfor _ in range(int(input())):\n    H = input()\n    print(check(H))", "def hhal(s):\n    n = len(s)\n    for i in range(n // 2):\n        if s[i] != s[n - i - 1]:\n            return 2\n    return 1\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(hhal(s))", "for _ in range(int(input())):\n    x = input()\n    if x == x[::-1]:\n        print('1')\n    else:\n        print('2')"]