["n = int(input())\nfor i in range(n):\n    t = int(input())\n    num = list(map(int, input().split(' ')))\n    if sum(num) % 4 == 0:\n        num = [j % 4 for j in num if j % 4 != 0]\n        a1 = num.count(1)\n        a2 = num.count(2)\n        a3 = num.count(3)\n        if a1 == a3:\n            ans = a1 + a2 // 2\n        elif a1 < a3:\n            c3 = a3 - a1\n            if c3 % 4 == 0:\n                a = c3 // 4 * 3\n            elif c3 % 4 == 2:\n                a = c3 // 4 * 3 + 2\n            ans = a1 + a + a2 // 2\n        elif a3 < a1:\n            c1 = a1 - a3\n            if c1 % 4 == 0:\n                a = c1 // 4 * 3\n            elif c1 % 4 == 2:\n                a = c1 // 4 * 3 + 2\n            ans = a3 + a + a2 // 2\n        print(ans)\n    else:\n        print(-1)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    x = y = z = 0\n    for i in input().split():\n        t = int(i) % 4\n        if t == 0:\n            pass\n        elif t == 1:\n            x += 1\n        elif t == 2:\n            y += 1\n        else:\n            z += 1\n    if (x + 2 * y + 3 * z) % 4:\n        print('-1', end='\\n')\n        continue\n    if x + y + z == 0:\n        print('0', end='\\n')\n        continue\n    moves = 0\n    moves = min(x, z)\n    x -= moves\n    z -= moves\n    moves += y // 2\n    y %= 2\n    if y == 1:\n        if x == 0:\n            z -= 2\n            moves += 2\n        else:\n            x -= 2\n            moves += 2\n        y -= 1\n    moves += (x // 4 + z // 4) * 3\n    print(moves)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split()\n    l = []\n    l1 = []\n    for j in s:\n        k = int(j)\n        l.append(k)\n        l1.append(k % 4)\n    c3 = l1.count(3)\n    c1 = l1.count(1)\n    c2 = l1.count(2)\n    if c3 == c1 and c2 % 2 == 0:\n        print(c3 + c2 // 2)\n    elif c3 != c1:\n        d = max(c1, c3) - min(c1, c3)\n        ans = min(c1, c3)\n        if d % 2:\n            print(-1)\n        elif d // 2 % 2 == c2 % 2:\n            if c2 > d // 2:\n                ans += d\n                c2 -= d // 2\n                ans += c2 // 2\n                print(ans)\n            else:\n                ans += 2 * c2\n                d -= 2 * c2\n                if not d % 4:\n                    ans += 3 * d // 4\n                    print(ans)\n                else:\n                    print(-1)\n        else:\n            print(-1)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split()\n    l = []\n    l1 = []\n    for j in s:\n        k = int(j)\n        l.append(k)\n        l1.append(k % 4)\n    c3 = l1.count(3)\n    c1 = l1.count(1)\n    c2 = l1.count(2)\n    if c3 == c1 and c2 % 2 == 0:\n        print(c3 + c2 // 2)\n    elif c3 != c1:\n        d = max(c1, c3) - min(c1, c3)\n        ans = min(c1, c3)\n        if d % 2:\n            print(-1)\n        elif d // 2 % 2 == c2 % 2:\n            if c2 > d // 2:\n                ans += d\n                c2 -= d // 2\n                ans += c2 // 2\n                print(ans)\n            else:\n                ans += 2 * c2\n                d -= 2 * c2\n                if not d % 4:\n                    ans += 3 * d // 4\n                    print(ans)\n                else:\n                    print(-1)\n        else:\n            print(-1)\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    b = [i / 4 - int(i / 4) for i in map(int, input().split()) if i % 4 != 0]\n    if sum(b) != int(sum(b)):\n        print(-1)\n    else:\n        a = min(b.count(0.25), b.count(0.75))\n        s = max(b.count(0.25), b.count(0.75))\n        q = b.count(0.5)\n        c = int(q / 2)\n        print\n        if q % 2 == 1:\n            print(int(a + c + 2 + (s - a - 2) * 3 / 4))\n        else:\n            print(int(a + c + (s - a) * 3 / 4))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(lambda x: int(x) % 4, input().split()))\n    c = Counter(a)\n    ans = min(c[1], c[3])\n    (c[1], c[3]) = (c[1] - ans, c[3] - ans)\n    if c[1] % 2 == 1 or c[3] % 2 == 1:\n        print(-1)\n    else:\n        c[2] += c[1] // 2 + c[3] // 2\n        ans += c[1] // 2 + c[3] // 2\n        if c[2] % 2 == 1:\n            print(-1)\n        else:\n            ans += c[2] // 2\n            print(ans)", "t = int(input())\nfor i in range(t):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    count = [0, 0, 0]\n    for el in arr:\n        if el % 4 != 0:\n            count[el % 4 - 1] += 1\n    weightedTotal = count[0] * 1 + count[1] * 2 + count[2] * 3\n    if weightedTotal % 4 == 0:\n        total = count[1] // 2 + min(count[0], count[2])\n        count[1] %= 2\n        (count[0], count[2]) = (count[0] - min(count[0], count[2]), count[2] - min(count[0], count[2]))\n        if count[0] > count[2]:\n            total += count[0] // 4 * 3\n            count[0] %= 4\n        else:\n            total += count[2] // 4 * 3\n            count[2] %= 4\n        if sum(count) > 0:\n            total += sum(count) - 1\n        print(total)\n    else:\n        print(-1)", "from collections import Counter\n\ndef solve():\n    n = int(input())\n    c = Counter([int(x) % 4 for x in input().split()])\n    res = min(c[1], c[3])\n    (c[1], c[3]) = (c[1] - res, c[3] - res)\n    if c[1] % 2 == 1 or c[3] % 2 == 1:\n        print(-1)\n    else:\n        c[2] += c[1] // 2 + c[3] // 2\n        res += c[1] // 2 + c[3] // 2\n        if c[2] % 2 == 1:\n            print(-1)\n        else:\n            res += c[2] // 2\n            print(res)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(lambda x: int(x) % 4, input().split()))\n    c = Counter(a)\n    ans = min(c[1], c[3])\n    (c[1], c[3]) = (c[1] - ans, c[3] - ans)\n    if c[1] % 2 == 1 or c[3] % 2 == 1:\n        print(-1)\n    else:\n        c[2] += c[1] // 2 + c[3] // 2\n        ans += c[1] // 2 + c[3] // 2\n        if c[2] % 2 == 1:\n            print(-1)\n        else:\n            ans += c[2] // 2\n            print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(lambda x: int(x) % 4, input().split()))\n    c = Counter(a)\n    ans = min(c[1], c[3])\n    (c[1], c[3]) = (c[1] - ans, c[3] - ans)\n    if c[1] % 2 == 1 or c[3] % 2 == 1:\n        print(-1)\n    else:\n        c[2] += c[1] // 2 + c[3] // 2\n        ans += c[1] // 2 + c[3] // 2\n        if c[2] % 2 == 1:\n            print(-1)\n        else:\n            ans += c[2] // 2\n            print(ans)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count1 = 0\n    count2 = 0\n    count3 = 0\n    summ = 0\n    for i in range(n):\n        x = arr[i] % 4\n        summ += x\n        if x == 1:\n            count1 += 1\n        if x == 2:\n            count2 += 1\n        if x == 3:\n            count3 += 1\n    if summ % 4 != 0:\n        print(-1)\n        continue\n    else:\n        if count2 == 0 and count1 != 0 and (count3 == 0):\n            tt = count1 // 4\n            print(3 * tt)\n        if count2 == 0 and count1 == 0 and (count3 != 0):\n            tt = count3 // 4\n            print(3 * tt)\n        if count2 % 2 == 0 and count1 == count3:\n            print(count2 // 2 + count1)\n        flag1 = min(count1, count3)\n        flag2 = abs(count1 - count3)\n        if count2 % 2 == 0 and count1 != count3:\n            flag3 = flag2 // 4\n            flag4 = flag3 * 3\n            print(count2 // 2 + flag1 + flag4)\n        if count2 % 2 != 0 and count1 != count3:\n            flag3 = flag2 - 2\n            flag4 = flag3 // 4\n            flag5 = flag4 * 3\n            print((count2 - 1) // 2 + flag1 + flag5 + 2)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if sum(l) % 4 != 0:\n        print(-1)\n    else:\n        l1 = []\n        a1 = 0\n        a2 = 0\n        a3 = 0\n        for i in l:\n            if i % 4 != 0:\n                l1.append(i % 4)\n                if i % 4 == 1:\n                    a1 += 1\n                if i % 4 == 2:\n                    a2 += 1\n                if i % 4 == 3:\n                    a3 += 1\n        if a1 == a3:\n            ans = a1 + a2 // 2\n        elif a1 < a3:\n            c3 = a3 - a1\n            if c3 % 4 == 0:\n                a = c3 // 4 * 3\n            elif c3 % 4 == 2:\n                a = c3 // 4 * 3 + 2\n            ans = a1 + a + a2 // 2\n        elif a3 < a1:\n            c1 = a1 - a3\n            if c1 % 4 == 0:\n                a = c1 // 4 * 3\n            elif c1 % 4 == 2:\n                a = c1 // 4 * 3 + 2\n            ans = a3 + a + a2 // 2\n        print(ans)", "t = int(input())\nfor i in range(0, t):\n    n = input()\n    str1 = input()\n    c1 = 0\n    c2 = 0\n    c3 = 0\n    lista = []\n    a = ''\n    for i in str1:\n        if i == ' ':\n            lista.append(int(a))\n            a = ''\n        else:\n            a = a + i\n    lista.append(int(a))\n    for i in lista:\n        if i % 4 == 1:\n            c1 += 1\n        if i % 4 == 2:\n            c2 += 1\n        if i % 4 == 3:\n            c3 += 1\n    if (c1 + 2 * c2 + 3 * c3) % 4 != 0:\n        print('-1')\n    else:\n        res = min(c1, c3) + abs(c1 - c3) / 2\n        c2 += abs(c1 - c3) / 2\n        res = res + c2 / 2\n        print(int(res))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = {0: 0, 1: 0, 2: 0, 3: 0}\n    s = 0\n    for i in range(n):\n        a[i] = a[i] % 4\n        s += a[i]\n        c[a[i]] += 1\n    if s % 4 != 0:\n        print(-1)\n    else:\n        rs = 0\n        p1 = min(c[1], c[3])\n        rs += p1\n        c[1] -= p1\n        c[3] -= p1\n        while c[1] > 0:\n            p2 = min(c[1] // 2, c[2])\n            c[1] -= p2 * 2\n            c[2] -= p2\n            rs += p2 * 2\n            p3 = c[1] // 4\n            rs += p3 * 3\n            c[1] -= p3 * 4\n        while c[3] > 0:\n            p2 = min(c[3] // 2, c[2])\n            c[3] -= p2 * 2\n            c[2] -= p2\n            rs += p2 * 2\n            p3 = c[3] // 4\n            rs += p3 * 3\n            c[3] -= p3 * 4\n        while c[2] > 0:\n            p4 = c[2] // 2\n            rs += p4\n            c[2] -= p4 * 2\n        print(rs)", "t = 0\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = [0, 0, 0, 0]\n    sum = 0\n    strn = input()\n    for x in strn.split():\n        number = int(x)\n        arr[number % 4] = arr[number % 4] + 1\n        sum = (sum + number) % 4\n    ans = 0\n    if sum % 4 != 0:\n        print('-1')\n    else:\n        if arr[2] % 2 == 0:\n            ans = ans + int(arr[2] / 2)\n            temp = min(arr[1], arr[3])\n            ans = ans + temp\n            temp = arr[3] + arr[1] - temp - temp\n            temp = int(temp / 4) * 3\n            ans = ans + temp\n        else:\n            temp = int(arr[2] / 2)\n            ans = ans + temp\n            temp = min(arr[1], arr[3])\n            ans = ans + temp\n            temp = int(arr[3] + arr[1]) - temp - temp\n            ans = ans + 2\n            temp = temp - 2\n            ans = ans + int(temp / 4) * 3\n        print(ans)\n    t = t - 1", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(lambda x: int(x) % 4, input().split()))\n    c = Counter(a)\n    ans = min(c[1], c[3])\n    (c[1], c[3]) = (c[1] - ans, c[3] - ans)\n    if c[1] % 2 == 1 or c[3] % 2 == 1:\n        print(-1)\n    else:\n        c[2] += c[1] // 2 + c[3] // 2\n        ans += c[1] // 2 + c[3] // 2\n        if c[2] % 2 == 1:\n            print(-1)\n        else:\n            ans += c[2] // 2\n            print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(lambda x: int(x) % 4, input().split()))\n    c = Counter(a)\n    ans = min(c[1], c[3])\n    (c[1], c[3]) = (c[1] - ans, c[3] - ans)\n    if c[1] % 2 == 1 or c[3] % 2 == 1:\n        print(-1)\n    else:\n        c[2] += c[1] // 2 + c[3] // 2\n        ans += c[1] // 2 + c[3] // 2\n        if c[2] % 2 == 1:\n            print(-1)\n        else:\n            ans += c[2] // 2\n            print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(lambda x: int(x) % 4, input().split()))\n    c = Counter(a)\n    ans = min(c[1], c[3])\n    (c[1], c[3]) = (c[1] - ans, c[3] - ans)\n    if c[1] % 2 == 1 or c[3] % 2 == 1:\n        print(-1)\n    else:\n        c[2] += c[1] // 2 + c[3] // 2\n        ans += c[1] // 2 + c[3] // 2\n        if c[2] % 2 == 1:\n            print(-1)\n        else:\n            ans += c[2] // 2\n            print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (s_1, s_2, s_3) = (0, 0, 0)\n    ans = 0\n    for i in a:\n        if i % 4 == 1:\n            s_1 += 1\n        elif i % 4 == 2:\n            s_2 += 1\n        elif i % 4 == 3:\n            s_3 += 1\n    flag = 0\n    ans += min(s_1, s_3)\n    x = abs(s_1 - s_3)\n    if x & 1:\n        print(-1)\n    else:\n        ans += x // 2\n        s_2 += x // 2\n        if s_2 & 1:\n            print(-1)\n        else:\n            print(ans + s_2 // 2)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(lambda x: int(x) % 4, input().split()))\n    c = Counter(l)\n    ans = min(c[1], c[3])\n    (c[1], c[3]) = (c[1] - ans, c[3] - ans)\n    if c[1] % 2 == 1 or c[3] % 2 == 1:\n        print(-1)\n    else:\n        ans += c[1] // 2 + c[3] // 2\n        c[2] += c[1] // 2 + c[3] // 2\n        if c[2] % 2:\n            print(-1)\n        else:\n            print(ans + c[2] // 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = {0: 0, 1: 0, 2: 0, 3: 0}\n    s = 0\n    for i in range(n):\n        a[i] = a[i] % 4\n        s += a[i]\n        c[a[i]] += 1\n    if s % 4 != 0:\n        print(-1)\n    else:\n        rs = 0\n        p1 = min(c[1], c[3])\n        rs += p1\n        c[1] -= p1\n        c[3] -= p1\n        while c[1] > 0:\n            p2 = min(c[1] // 2, c[2])\n            c[1] -= p2 * 2\n            c[2] -= p2\n            rs += p2 * 2\n            p3 = c[1] // 4\n            rs += p3 * 3\n            c[1] -= p3 * 4\n        while c[3] > 0:\n            p2 = min(c[3] // 2, c[2])\n            c[3] -= p2 * 2\n            c[2] -= p2\n            rs += p2 * 2\n            p3 = c[3] // 4\n            rs += p3 * 3\n            c[3] -= p3 * 4\n        while c[2] > 0:\n            p4 = c[2] // 2\n            rs += p4\n            c[2] -= p4 * 2\n        print(rs)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    num = []\n    for i in range(3):\n        num.append(0)\n    for j in range(n):\n        if li[j] % 4 == 1:\n            num[0] += 1\n        elif li[j] % 4 == 2:\n            num[1] += 1\n        elif li[j] % 4 == 3:\n            num[2] += 1\n    ma = max(num[0], num[2])\n    mi = min(num[0], num[2])\n    if (ma - mi) % 2 == 1:\n        print(-1)\n    elif ((ma - mi) / 2 + num[1]) % 2 == 1:\n        print(-1)\n    else:\n        print(int(mi + ((ma - mi) / 2 + num[1]) / 2 + (ma - mi) / 2))", "t = int(input())\nfor _ in range(t):\n    __ = input()\n    as_ = [int(x) % 4 for x in input().split()]\n    sum_as = sum(as_) % 4\n    if sum_as != 0:\n        print(-1)\n        continue\n    cts = [as_.count(x) for x in range(4)]\n    n_min = min(cts[1], cts[3])\n    n_remdr = max(cts[1], cts[3]) - n_min\n    n_2s = n_remdr // 2 + cts[2]\n    print(n_min + n_remdr // 2 + n_2s // 2)", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = [int(i.strip()) for i in input().split()]\n    if sum(a) % 4 != 0:\n        res = -1\n    else:\n        b = [0 for i in range(4)]\n        for i in a:\n            b[i % 4] += 1\n        res = min(b[1], b[3])\n        rem = (max(b[1], b[3]) - res) // 2\n        res += rem + (rem + b[2]) // 2\n    print(res)", "for tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem1 = 0\n    rem2 = 0\n    rem3 = 0\n    for i in range(n):\n        if a[i] % 4 == 1:\n            rem1 += 1\n        elif a[i] % 4 == 2:\n            rem2 += 1\n        elif a[i] % 4 == 3:\n            rem3 += 1\n    total = rem2 // 2\n    if rem1 == rem3:\n        total += rem1\n        if rem2 % 2 == 1:\n            print(-1)\n        else:\n            print(total)\n    elif rem1 > rem3:\n        total += rem3\n        rem1 = rem1 - rem3\n        if rem1 % 2 == 1:\n            print(-1)\n        elif rem1 % 4 == 0:\n            total += rem1 // 4 * 3\n            if rem2 % 2 == 1:\n                print(-1)\n            else:\n                print(total)\n        else:\n            total += rem1 // 4 * 3\n            if rem2 % 2 == 1:\n                total += 2\n                print(total)\n            else:\n                print(-1)\n    else:\n        total += rem1\n        rem3 = rem3 - rem1\n        if rem3 % 2 == 1:\n            print(-1)\n        elif rem3 % 4 == 0:\n            total += rem3 // 4 * 3\n            if rem2 % 2 == 1:\n                print(-1)\n            else:\n                print(total)\n        else:\n            total += rem3 // 4 * 3\n            if rem2 % 2 == 1:\n                total += 2\n                print(total)\n            else:\n                print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (s_1, s_2, s_3) = (0, 0, 0)\n    ans = 0\n    for i in a:\n        if i % 4 == 1:\n            s_1 += 1\n        elif i % 4 == 2:\n            s_2 += 1\n        elif i % 4 == 3:\n            s_3 += 1\n    flag = 0\n    ans += min(s_1, s_3)\n    x = abs(s_1 - s_3)\n    if x & 1:\n        print(-1)\n    else:\n        ans += x // 2\n        s_2 += x // 2\n        if s_2 & 1:\n            print(-1)\n        else:\n            print(ans + s_2 // 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    count1 = 0\n    count2 = 0\n    count3 = 0\n    for j in s:\n        if j % 4 == 1:\n            count1 += 1\n        elif j % 4 == 2:\n            count2 += 1\n        elif j % 4 == 3:\n            count3 += 1\n    count = 0\n    count += count2 // 2\n    count2 = count2 % 2\n    a = min(count1, count3)\n    count += a\n    count1 -= a\n    count3 -= a\n    sum = count1 + count2 * 2 + count3 * 3\n    if sum % 4 != 0:\n        print(-1)\n    else:\n        if count2 == 0:\n            count += max(count1, count3) // 4 * 3\n        else:\n            count += 2\n            if count1 > 0 or count3 > 0:\n                count += max(count1 - 2, count3 - 2) // 4 * 3\n        print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    stack13 = []\n    num2 = 0\n    ans = 0\n    for elem in arr:\n        e = elem % 4\n        if e == 1 or e == 3:\n            if not stack13:\n                stack13.append(e)\n            elif stack13[-1] == e:\n                stack13.append(e)\n            else:\n                stack13.pop()\n                ans += 1\n        elif e == 2:\n            num2 ^= 1\n            if num2 == 0:\n                ans += 1\n    if (sum(stack13) + 2 * num2) % 4 != 0:\n        print(-1)\n    elif num2:\n        ans += 3 * (len(stack13) - 2) // 4 + 2\n        print(ans)\n    else:\n        ans += 3 * len(stack13) // 4\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 4:\n        print('-1')\n        continue\n    count = [0] * 4\n    for x in a:\n        count[x % 4] += 1\n    ans = count[2] // 2\n    if count[1] > count[3]:\n        ans += count[3]\n        count[1] -= count[3]\n        if count[1] > 0:\n            if count[2] % 2:\n                ans += 2\n                count[1] -= 2\n            ans += int(count[1] / 4 * 3)\n    else:\n        ans += count[1]\n        count[3] -= count[1]\n        if count[3] > 0:\n            if count[2] % 2:\n                ans += 2\n                count[3] -= 2\n            ans += int(count[3] / 4 * 3)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = [-1, 0, 0, 0]\n    for i in l:\n        if i % 4:\n            x[i % 4] += 1\n    ans = min(x[1], x[3])\n    x[1] -= ans\n    x[3] -= ans\n    if x[1] % 2 == 1 or x[3] % 2 == 1:\n        print(-1)\n        continue\n    ans += x[1] // 2 + x[3] // 2\n    x[2] += x[1] // 2 + x[3] // 2\n    if x[2] % 2:\n        print(-1)\n        continue\n    print(ans + x[2] // 2)", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    count_arr = [0] * 3\n    ans = 0\n    possible = True\n    for i in arr:\n        num = i % 4\n        if num:\n            count_arr[num - 1] += 1\n    one_and_three = min(count_arr[0], count_arr[2])\n    count_arr[0] -= one_and_three\n    count_arr[2] -= one_and_three\n    ans += one_and_three\n    two_and_three = min(count_arr[1], count_arr[2] // 2)\n    count_arr[1] -= two_and_three\n    count_arr[2] -= two_and_three * 2\n    ans += two_and_three * 2\n    ans += count_arr[1] // 2\n    count_arr[1] %= 2\n    one_ans_two = min(count_arr[1], count_arr[0] // 2)\n    count_arr[1] -= one_ans_two\n    count_arr[0] -= one_ans_two * 2\n    ans += one_ans_two * 2\n    ans += count_arr[0] // 4 * 3\n    count_arr[0] %= 4\n    if sum(count_arr) != 0:\n        possible = False\n    if not possible:\n        print(-1)\n    else:\n        print(ans)", "from collections import Counter as cc\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = map(lambda x: x % 4, l)\n    d = dict(cc(l))\n    total = 0\n    steps = 0\n    if (d[1] + d[2] * 2 + d[3] * 3) % 4 != 0:\n        print(-1)\n    else:\n        steps = min(d[1], d[3])\n        total += steps\n        d[1] -= steps\n        d[3] -= steps\n        if d[1] == 0 and d[3] == 0:\n            total += d[2] // 2\n        elif d[1] == 0 or d[3] == 0:\n            d[3] = max(d[1], d[3])\n            total += d[2] // 2\n            d[2] %= 2\n            if d[2] == 0:\n                total += d[3] // 4 * 3\n            else:\n                total += (d[3] - 2) // 4 * 3 + 2\n        print(total)", "def mgc(count):\n    ans = 0\n    temp = min(count[1], count[3])\n    ans += temp\n    count[1] -= temp\n    count[3] -= temp\n    ans += count[2] // 2\n    count[2] = count[2] % 2\n    if count[2] == 1:\n        if count[1] >= 2:\n            count[1] -= 2\n            count[2] = 0\n            ans += 2\n        elif count[3] >= 2:\n            count[3] -= 2\n            count[2] = 0\n            ans += 2\n        else:\n            return -1\n    if count[1] % 4 != 0 or count[3] % 4 != 0:\n        return -1\n    if count[1] > 0:\n        ans += 3 * (count[1] // 4)\n    if count[3] > 0:\n        ans += 3 * (count[3] // 4)\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = [0, 0, 0, 0]\n    for i in arr:\n        count[i % 4] += 1\n    print(mgc(count))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(lambda x: int(x) % 4, input().split()))\n    c = Counter(a)\n    ans = min(c[1], c[3])\n    (c[1], c[3]) = (c[1] - ans, c[3] - ans)\n    if c[1] % 2 == 1 or c[3] % 2 == 1:\n        print(-1)\n    else:\n        c[2] += c[1] // 2 + c[3] // 2\n        ans += c[1] // 2 + c[3] // 2\n        if c[2] % 2 == 1:\n            print(-1)\n        else:\n            ans += c[2] // 2\n            print(ans)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = [0 for i in range(4)]\n    ll = list(map(int, input().split()))\n    for val in ll:\n        l[val % 4] += 1\n    if l[1] == l[3]:\n        if l[2] % 2:\n            print(-1)\n        else:\n            print(l[1] + l[2] // 2)\n    elif l[1] > l[3]:\n        ans = 0\n        ans += l[3]\n        l[1] -= l[3]\n        if l[1] & 1:\n            print(-1)\n        elif l[1] % 4 == 0 and l[2] % 2 == 0:\n            print(l[1] // 4 * 3 + l[2] // 2 + ans)\n        elif l[1] % 4 != 0 and l[2] % 2 != 0:\n            print((l[1] - 2) // 4 * 3 + (l[2] - 1) // 2 + 2 + ans)\n        else:\n            print(-1)\n    else:\n        ans = 0\n        ans += l[1]\n        l[3] -= l[1]\n        if l[3] & 1:\n            print(-1)\n        elif l[3] % 4 == 0 and l[2] % 2 == 0:\n            print(l[3] // 4 * 3 + l[2] // 2 + ans)\n        elif l[3] % 4 != 0 and l[2] % 2 != 0:\n            print((l[3] - 2) // 4 * 3 + (l[2] - 1) // 2 + 2 + ans)\n        else:\n            print(-1)\n    t -= 1", "import math\nfrom functools import reduce\nimport sys\nsys.setrecursionlimit(1000000)\n\ndef read(func=str, sep=None):\n    return list(map(func, input().split(sep)))\n\ndef read_ints(sep=None):\n    return read(func=int, sep=sep)\n\ndef read_int():\n    return int(input())\n\ndef print_array(arr, sep=' '):\n    print(sep.join(map(str, arr)))\n\ndef bitcount(num):\n    bits = 0\n    while num:\n        if num & 1:\n            bits += 1\n        num >>= 1\n    return bits\n\ndef highest_bit(n):\n    count = 0\n    while n != 0:\n        count += 1\n        n >= 1\n    return count - 1\n\ndef modpow(num, pow, mod):\n    if pow == 0:\n        return 1\n    c = modpow(num, pow // 2, mod)\n    if pow & 1:\n        return c ** 2 % mod * num % mod\n    else:\n        return c ** 2 % mod\nncr_memo = {}\n\ndef ncr(n, r):\n    if n < r:\n        return 0\n    if r == 0:\n        return 1\n    if n == 1:\n        return 1\n    if r == 1:\n        return n\n    if (n, r) in ncr_memo:\n        return ncr_memo[n, r]\n    ncr_memo[n, r] = ncr(n - 1, r) + ncr(n - 1, r - 1)\n    return ncr_memo[n, r]\ntest_cases = read_int()\nfor _ in range(test_cases):\n    n = read_int()\n    a = read_ints()\n    rem = {1: 0, 2: 0, 3: 0, 0: 0}\n    for i in a:\n        rem[i % 4] += 1\n    turns = 0\n    turns += min(rem[1], rem[3])\n    rem[1] -= turns\n    rem[3] -= turns\n    turns += rem[2] // 2\n    rem[2] = rem[2] & 1\n    turns += 3 * (rem[3] // 4)\n    rem[3] %= 4\n    turns += 3 * (rem[1] // 4)\n    rem[1] %= 4\n    m_rem = max(rem[1], rem[3])\n    if m_rem == 2 and rem[2] == 1:\n        turns += 2\n        print(turns)\n    elif m_rem == 0 and rem[2] == 0:\n        print(turns)\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    r1 = 0\n    r2 = 0\n    r3 = 0\n    for i in arr:\n        if i % 4 == 1:\n            r1 += 1\n        if i % 4 == 2:\n            r2 += 1\n        if i % 4 == 3:\n            r3 += 1\n    if (r1 + r2 * 2 + r3 * 3) % 4 != 0:\n        print('-1')\n    else:\n        count = 0\n        mn = min(r1, r3)\n        count += mn\n        r1 -= mn\n        r3 -= mn\n        count += r2 // 2\n        r2 = r2 % 2\n        r = max(r1, r3)\n        print(count + r // 4 * 3 + 2 * r2)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    r1 = 0\n    r2 = 0\n    r3 = 0\n    for i in arr:\n        if i % 4 == 1:\n            r1 += 1\n        if i % 4 == 2:\n            r2 += 1\n        if i % 4 == 3:\n            r3 += 1\n    if (r1 + r2 * 2 + r3 * 3) % 4 != 0:\n        print('-1')\n    else:\n        count = 0\n        mn = min(r1, r3)\n        count += mn\n        r1 -= mn\n        r3 -= mn\n        count += r2 // 2\n        r2 = r2 % 2\n        r = max(r1, r3)\n        print(count + r // 4 * 3 + 2 * r2)", "for _ in range(int(input())):\n    t = int(input())\n    arr = [int(i) for i in input().split()]\n    ra = 0\n    rb = 0\n    rc = 0\n    for i in arr:\n        if i % 4 == 1:\n            ra += 1\n        if i % 4 == 2:\n            rb += 1\n        if i % 4 == 3:\n            rc += 1\n    if (ra + rb * 2 + rc * 3) % 4 != 0:\n        print('-1')\n    else:\n        count = 0\n        q = min(ra, rc)\n        count += q\n        ra -= q\n        rc -= q\n        count += rb // 2\n        rb = rb % 2\n        if ra == 0:\n            count += rc // 4 * 3\n            if rb:\n                print(count + 2)\n            else:\n                print(count)\n        else:\n            count += ra // 4 * 3\n            if rb:\n                print(count + 2)\n            else:\n                print(count)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    r1 = 0\n    r2 = 0\n    r3 = 0\n    for i in arr:\n        if i % 4 == 1:\n            r1 += 1\n        if i % 4 == 2:\n            r2 += 1\n        if i % 4 == 3:\n            r3 += 1\n    if (r1 + r2 * 2 + r3 * 3) % 4 != 0:\n        print('-1')\n    else:\n        count = 0\n        mn = min(r1, r3)\n        count += mn\n        r1 -= mn\n        r3 -= mn\n        count += r2 // 2\n        r2 = r2 % 2\n        r = max(r1, r3)\n        print(count + r // 4 * 3 + 2 * r2)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    r1 = 0\n    r2 = 0\n    r3 = 0\n    for i in arr:\n        if i % 4 == 1:\n            r1 += 1\n        if i % 4 == 2:\n            r2 += 1\n        if i % 4 == 3:\n            r3 += 1\n    if (r1 + r2 * 2 + r3 * 3) % 4 != 0:\n        print('-1')\n    else:\n        count = 0\n        mn = min(r1, r3)\n        count += mn\n        r1 -= mn\n        r3 -= mn\n        count += r2 // 2\n        r2 = r2 % 2\n        if r1 == 0:\n            count += r3 // 4 * 3\n            if r2:\n                print(count + 2)\n            else:\n                print(count)\n        else:\n            count += r1 // 4 * 3\n            if r2:\n                print(count + 2)\n            else:\n                print(count)", "x = int(input())\nfor i in range(0, x):\n    c = 0\n    g = input()\n    r = list(map(int, input().split()))\n    if sum(r) % 4 != 0:\n        print(-1)\n    else:\n        d = [0, 0, 0, 0]\n        for i in r:\n            d[i % 4] += 1\n        c = c + int(d[2] / 2) + min(d[1], d[3])\n        d[2] = d[2] % 2\n        v = min(d[1], d[3])\n        d[1] = d[1] - v\n        d[3] = d[3] - v\n        if d[1] == 0 and d[3] == 0:\n            if d[2] % 2 != 0:\n                print(-1)\n            else:\n                print(c)\n        elif d[1] == 0:\n            if d[2] == 0:\n                c = c + int(d[3] / 4) * 3\n                if d[3] % 4 != 0:\n                    print(-1)\n                else:\n                    print(c)\n            elif d[3] >= 2:\n                c = c + 2\n                d[3] -= 2\n                c = c + int(d[3] / 4) * 3\n                if d[3] % 4 != 0:\n                    print(-1)\n                else:\n                    print(c)\n            else:\n                print(-1)\n        else:\n            d[3] = d[1]\n            if d[2] == 0:\n                c = c + int(d[3] / 4) * 3\n                if d[3] % 4 != 0:\n                    print(-1)\n                else:\n                    print(c)\n            elif d[3] >= 2:\n                c = c + 2\n                d[3] -= 2\n                c = c + int(d[3] / 4) * 3\n                if d[3] % 4 != 0:\n                    print(-1)\n                else:\n                    print(c)\n            else:\n                print(-1)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    for i in range(n):\n        A[i] = A[i] % 4\n    if sum(A) % 4:\n        print(-1)\n        continue\n    (a1, a2, a3) = (A.count(1), A.count(2), A.count(3))\n    (p, q) = (max(a1, a3), min(a1, a3))\n    p = p - q\n    res = q + p // 4 * 3 + p % 4 + a2 // 2\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rc = [0] * 4\n    for i in range(len(a)):\n        rc[a[i] % 4] += 1\n    op = 0\n    m = min(rc[1], rc[3])\n    op += m\n    rc[1] -= m\n    rc[3] -= m\n    op += rc[2] >> 1\n    rc[2] %= 2\n    if rc[3] > 0:\n        rc[2] += rc[3] >> 1\n        op += rc[3] >> 1\n        rc[3] %= 2\n    elif rc[1] > 0:\n        rc[2] += rc[1] >> 1\n        op += rc[1] >> 1\n        rc[1] %= 2\n    if rc[3] > 0 or rc[1] > 0:\n        print(-1)\n    elif rc[2] & 1:\n        print(-1)\n    else:\n        op += rc[2] >> 1\n        print(op)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = [0 for _ in range(4)]\n    tot = 0\n    for i in a:\n        tot += i\n        r[i % 4] += 1\n    if tot % 4:\n        print('-1')\n    else:\n        temp = min(r[1], r[3])\n        ans = r[2] // 2 + temp\n        r[2] = r[2] % 2\n        r[1] -= temp\n        r[3] -= temp\n        ans += (r[1] + r[3]) // 4 * 3\n        if r[2]:\n            ans += 2\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    c = []\n    d = []\n    e = []\n    if sum(a) % 4 == 0:\n        for i in range(len(a)):\n            if a[i] % 2 == 0 and a[i] % 4 != 0:\n                b.append(a[i])\n            elif a[i] % 4 != 0:\n                c.append(a[i])\n        t = int(len(b) // 2)\n        for i in range(len(c)):\n            if c[i] % 4 == 1:\n                d.append(c[i])\n            elif c[i] % 4 == 3:\n                e.append(c[i])\n        x = int(min(len(d), len(e)))\n        y = int(max(len(d), len(e)))\n        if len(b) % 2 == 0:\n            if len(d) == len(e):\n                z = 0\n            else:\n                z = (y - x) // 4 * 3\n        else:\n            z = (y - x - 2) // 4 * 3 + 2\n        print(t + x + z)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (t, x, y, g) = (0, 0, 0, 0)\n    b = []\n    c = []\n    d = []\n    e = []\n    if sum(a) % 4 == 0:\n        for i in range(len(a)):\n            if a[i] % 2 == 0 and a[i] % 4 != 0:\n                b.append(a[i])\n            elif a[i] % 4 != 0:\n                c.append(a[i])\n        t = int(len(b) // 2)\n        for i in range(len(c)):\n            if c[i] % 4 == 1:\n                d.append(c[i])\n            elif c[i] % 4 == 3:\n                e.append(c[i])\n        x = int(min(len(d), len(e)))\n        if len(d) != len(e):\n            y = int(max(len(d), len(e)) - x)\n        k = y + 2 * (len(b) % 2)\n        print(x + t + y + len(b) % 2 - k // 4)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (t, x, y, g) = (0, 0, 0, 0)\n    b = []\n    c = []\n    d = []\n    e = []\n    if sum(a) % 4 == 0:\n        for i in range(len(a)):\n            if a[i] % 2 == 0 and a[i] % 4 != 0:\n                b.append(a[i])\n            elif a[i] % 4 != 0:\n                c.append(a[i])\n        t = int(len(b) // 2)\n        for i in range(len(c)):\n            if c[i] % 4 == 1:\n                d.append(c[i])\n            elif c[i] % 4 == 3:\n                e.append(c[i])\n        x = int(min(len(d), len(e)))\n        if len(d) != len(e):\n            y = int(max(len(d), len(e)) - x)\n        k = y + 2 * (len(b) % 2)\n        print(x + t + y + len(b) % 2 - k // 4)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        a[i] = a[i] % 4\n    o = a.count(1)\n    t = a.count(2)\n    th = a.count(3)\n    ans += min(o, th)\n    ans += t // 2\n    if o > th:\n        o -= th\n        th = 0\n    else:\n        th -= o\n        o = th\n    k = o + 2 * (t % 2)\n    if k % 4 == 0:\n        print(ans + o + t % 2 - k // 4)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    ans = 0\n    q = {1: 0, 2: 0, 3: 0}\n    for i in range(n):\n        if a[i] % 4:\n            q[a[i] % 4] += 1\n    o = min(q[1], q[3])\n    q[1] -= o\n    q[3] -= o\n    ans += o\n    ans += q[2] // 2\n    q[2] %= 2\n    k = q[1] + q[3] + 2 * q[2]\n    if k % 4 == 0:\n        print(ans + q[1] + q[3] + q[2] - k // 4)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    remain = 0\n    for i in range(n):\n        arr[i] = arr[i] % 4\n    (n1, n2, n3) = (arr.count(1), arr.count(2), arr.count(3))\n    if sum(arr) % 4:\n        print(-1)\n        continue\n    (ma, mi) = (max(n1, n3), min(n1, n3))\n    ma -= mi\n    print(mi + ma // 4 * 3 + ma % 4 + n2 // 2)", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().strip().split()))\n    c = {0: 0, 1: 0, 2: 0, 3: 0}\n    for i in range(a):\n        c[b[i] % 4] += 1\n    c[0] = 0\n    ct = 0\n    if c[1] > c[3]:\n        ct += c[3]\n        c[1] -= ct\n        c[3] -= ct\n        if c[1] % 2 == 1:\n            print(-1)\n        else:\n            c[2] += c[1] // 2\n            ct += c[1] // 2\n            if c[2] % 2 == 1:\n                print(-1)\n            else:\n                print(ct + c[2] // 2)\n    else:\n        ct += c[1]\n        c[1] -= ct\n        c[3] -= ct\n        if c[3] % 2 == 1:\n            print(-1)\n        else:\n            c[2] += c[3] // 2\n            ct += c[3] // 2\n            if c[2] % 2 == 1:\n                print(-1)\n            else:\n                print(ct + c[2] // 2)", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().strip().split()))\n    c = {0: 0, 1: 0, 2: 0, 3: 0}\n    for i in range(a):\n        c[b[i] % 4] += 1\n    c[0] = 0\n    ct = 0\n    if c[1] > c[3]:\n        ct += c[3]\n        c[1] -= ct\n        c[3] -= ct\n        if c[1] % 2 == 1:\n            print(-1)\n        else:\n            c[2] += c[1] // 2\n            ct += c[1] // 2\n            if c[2] % 2 == 1:\n                print(-1)\n            else:\n                print(ct + c[2] // 2)\n    else:\n        ct += c[1]\n        c[1] -= ct\n        c[3] -= ct\n        if c[3] % 2 == 1:\n            print(-1)\n        else:\n            c[2] += c[3] // 2\n            ct += c[3] // 2\n            if c[2] % 2 == 1:\n                print(-1)\n            else:\n                print(ct + c[2] // 2)", "t = int(input())\nfor _ in range(t):\n    required_moves = 0\n    s = 0\n    elements = [0, 0, 0]\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in l:\n        if i % 4 == 1:\n            elements[0] += 1\n            s += 1\n        elif i % 4 == 2:\n            elements[1] += 1\n            s += 2\n        elif i % 4 == 3:\n            elements[2] += 1\n            s += 3\n    if s % 4 != 0:\n        print(-1)\n        continue\n    min_1_3 = min(elements[0], elements[2])\n    required_moves += elements[1] // 2 + min_1_3\n    elements[0] -= min_1_3\n    elements[2] -= min_1_3\n    required_moves += 3 * (elements[0] // 4) + 3 * (elements[2] // 4) + elements[0] % 4 + elements[2] % 4\n    print(required_moves)", "n = int(input())\nwhile n > 0:\n    n = n - 1\n    x = int(input())\n    y = input()\n    a = []\n    y = y.split(' ')\n    y = list(map(lambda z: int(z), y))\n    mod_1 = 0\n    mod_2 = 0\n    mod_3 = 0\n    sum = 0\n    total_add = 0\n    for i in range(0, x):\n        sum = sum + y[i]\n        rem = y[i] % 4\n        if rem == 0:\n            continue\n        elif rem == 1:\n            mod_1 = mod_1 + 1\n        elif rem % 4 == 2:\n            mod_2 = mod_2 + 1\n        else:\n            mod_3 = mod_3 + 1\n    if sum % 4 != 0:\n        print(-1)\n        continue\n    total_add = min(mod_3, mod_1)\n    mod_3 -= total_add\n    mod_1 -= total_add\n    if mod_2 > 0:\n        total_add = total_add + mod_2 / 2\n    mod_2 = mod_2 % 2\n    if mod_2 == 1:\n        if mod_1 > 1:\n            mod_1 = mod_1 - 2\n        else:\n            mod_3 = mod_3 - 2\n        total_add = total_add + 2\n    if mod_3 > 0:\n        total_add = total_add + mod_3 / 4 * 3\n    if mod_1 > 0:\n        total_add = total_add + mod_1 / 4 * 3\n    print(int(total_add))", "n = int(input())\nwhile n > 0:\n    n = n - 1\n    x = int(input())\n    y = input()\n    a = []\n    y = y.split(' ')\n    y = list(map(lambda z: int(z), y))\n    mod_1 = 0\n    mod_2 = 0\n    mod_3 = 0\n    sum = 0\n    total_add = 0\n    for i in range(0, x):\n        sum = sum + y[i]\n        if y[i] % 4 == 0:\n            continue\n        elif y[i] % 4 == 1:\n            mod_1 = mod_1 + 1\n        elif y[i] % 4 == 2:\n            mod_2 = mod_2 + 1\n        else:\n            mod_3 = mod_3 + 1\n    if sum % 4 != 0:\n        print(-1)\n        continue\n    if mod_3 > mod_1:\n        mod_3 = mod_3 - mod_1\n        total_add = mod_1\n        mod_1 = 0\n    else:\n        mod_1 = mod_1 - mod_3\n        total_add = mod_3\n        mod_3 = 0\n    if mod_2 > 0:\n        total_add = total_add + mod_2 / 2\n    mod_2 = mod_2 % 2\n    if mod_2 == 1:\n        if mod_1 > 1:\n            mod_1 = mod_1 - 2\n        else:\n            mod_3 = mod_3 - 2\n        total_add = total_add + 2\n    if mod_3 > 0:\n        total_add = total_add + mod_3 / 4 * 3\n    if mod_1 > 0:\n        total_add = total_add + mod_1 / 4 * 3\n    print(int(total_add))", "n = int(input())\nwhile n > 0:\n    n = n - 1\n    x = int(input())\n    y = input()\n    a = []\n    y = y.split(' ')\n    y = list(map(lambda z: int(z), y))\n    mod_1 = 0\n    mod_2 = 0\n    mod_3 = 0\n    sum = 0\n    total_add = 0\n    for i in range(0, x):\n        sum = sum + y[i]\n        if y[i] % 4 == 0:\n            continue\n        elif y[i] % 4 == 1:\n            mod_1 = mod_1 + 1\n        elif y[i] % 4 == 2:\n            mod_2 = mod_2 + 1\n        else:\n            mod_3 = mod_3 + 1\n    if sum % 4 != 0:\n        print(-1)\n        continue\n    total_add = min(mod_3, mod_1)\n    mod_3 -= total_add\n    mod_1 -= total_add\n    if mod_2 > 0:\n        total_add = total_add + mod_2 / 2\n    mod_2 = mod_2 % 2\n    if mod_2 == 1:\n        if mod_1 > 1:\n            mod_1 = mod_1 - 2\n        else:\n            mod_3 = mod_3 - 2\n        total_add = total_add + 2\n    if mod_3 > 0:\n        total_add = total_add + mod_3 / 4 * 3\n    if mod_1 > 0:\n        total_add = total_add + mod_1 / 4 * 3\n    print(int(total_add))", "n = int(input())\nwhile n > 0:\n    n = n - 1\n    x = int(input())\n    y = input()\n    a = []\n    y = y.split(' ')\n    y = list(map(lambda z: int(z), y))\n    mod_1 = 0\n    mod_2 = 0\n    mod_3 = 0\n    sum = 0\n    total_add = 0\n    for i in range(0, x):\n        sum = sum + y[i]\n        if y[i] % 4 == 0:\n            continue\n        elif y[i] % 4 == 1:\n            mod_1 = mod_1 + 1\n        elif y[i] % 4 == 2:\n            mod_2 = mod_2 + 1\n        else:\n            mod_3 = mod_3 + 1\n    if sum % 4 != 0:\n        print(-1)\n        continue\n    total_add = min(mod_3, mod_1)\n    mod_3 -= total_add\n    mod_1 -= total_add\n    if mod_2 > 0:\n        total_add = total_add + mod_2 / 2\n    mod_2 = mod_2 % 2\n    if mod_2 == 1:\n        if mod_1 > 1:\n            mod_1 = mod_1 - 2\n        else:\n            mod_3 = mod_3 - 2\n        total_add = total_add + 2\n    if mod_3 > 0:\n        total_add = total_add + mod_3 / 4 * 3\n    if mod_1 > 0:\n        total_add = total_add + mod_1 / 4 * 3\n    print(int(total_add))", "n = int(input())\nwhile n > 0:\n    n = n - 1\n    x = int(input())\n    y = input()\n    a = []\n    y = y.split(' ')\n    y = list(map(lambda z: int(z), y))\n    mod_1 = 0\n    mod_2 = 0\n    mod_3 = 0\n    sum = 0\n    total_add = 0\n    for i in range(0, x):\n        sum = sum + y[i]\n        if y[i] % 4 == 0:\n            continue\n        elif y[i] % 4 == 1:\n            mod_1 = mod_1 + 1\n        elif y[i] % 4 == 2:\n            mod_2 = mod_2 + 1\n        else:\n            mod_3 = mod_3 + 1\n    if sum % 4 != 0:\n        print(-1)\n        continue\n    if mod_3 > mod_1:\n        mod_3 = mod_3 - mod_1\n        total_add = mod_1\n        mod_1 = 0\n    else:\n        mod_1 = mod_1 - mod_3\n        total_add = mod_3\n        mod_3 = 0\n    if mod_2 > 0:\n        total_add = total_add + mod_2 / 2\n    mod_2 = mod_2 % 2\n    if mod_2 == 1:\n        if mod_1 > 1:\n            mod_1 = mod_1 - 2\n        else:\n            mod_3 = mod_3 - 2\n        total_add = total_add + 2\n    if mod_3 > 0:\n        total_add = total_add + mod_3 / 4 * 3\n    if mod_1 > 0:\n        total_add = total_add + mod_1 / 4 * 3\n    print(int(total_add))", "from math import *\nfrom bisect import *\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    memo_ = {0: 0, 1: 0, 2: 0, 3: 0}\n    for i in a:\n        memo_[i % 4] += 1\n    steps = min(memo_[1], memo_[3])\n    memo_[1] -= steps\n    memo_[3] -= steps\n    if memo_[1] % 2 or memo_[3] % 2:\n        print(-1)\n        continue\n    memo_[2] += (memo_[1] + memo_[3]) // 2\n    steps += (memo_[1] + memo_[3]) // 2\n    if memo_[2] % 2:\n        print(-1)\n        continue\n    steps += memo_[2] // 2\n    print(steps)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [*map(int, input().split())]\n    if sum(a) % 4 != 0:\n        print(-1)\n    else:\n        s = 0\n        (o, tw, th, f) = (0, 0, 0, 0)\n        for num in a:\n            if num % 4 == 1:\n                o += 1\n            elif num % 4 == 2:\n                tw += 1\n            elif num % 4 == 3:\n                th += 1\n            else:\n                f += 1\n        s += tw // 2\n        tw = tw % 2\n        while o > 0 and th > 0:\n            s += 1\n            o -= 1\n            th -= 1\n        x = max(o, th) // 4\n        s += 3 * x\n        print(s if tw == 0 else s + 2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        a[i] = a[i] % 4\n    o = a.count(1)\n    t = a.count(2)\n    th = a.count(3)\n    ans += min(o, th)\n    ans += t // 2\n    if o > th:\n        o -= th\n        th = 0\n    else:\n        th -= o\n        o = th\n    k = o + 2 * (t % 2)\n    if k % 4 == 0:\n        print(ans + o + t % 2 - k // 4)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [*map(int, input().split())]\n    if sum(a) % 4 != 0:\n        print(-1)\n    else:\n        s = 0\n        (o, tw, th, f) = (0, 0, 0, 0)\n        for num in a:\n            if num % 4 == 1:\n                o += 1\n            elif num % 4 == 2:\n                tw += 1\n            elif num % 4 == 3:\n                th += 1\n            else:\n                f += 1\n        s += tw // 2\n        tw = tw % 2\n        while o > 0 and th > 0:\n            s += 1\n            o -= 1\n            th -= 1\n        x = max(o, th) // 4\n        s += 3 * x\n        print(s if tw == 0 else s + 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [*map(int, input().split())]\n    if sum(a) % 4 != 0:\n        print(-1)\n    else:\n        s = 0\n        (o, tw, th, f) = (0, 0, 0, 0)\n        for num in a:\n            if num % 4 == 1:\n                o += 1\n            elif num % 4 == 2:\n                tw += 1\n            elif num % 4 == 3:\n                th += 1\n            else:\n                f += 1\n        s += tw // 2\n        tw = tw % 2\n        while o > 0 and th > 0:\n            s += 1\n            o -= 1\n            th -= 1\n        x = max(o, th) // 4\n        s += 3 * x\n        print(s if tw == 0 else s + 2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        a[i] = a[i] % 4\n    o = a.count(1)\n    t = a.count(2)\n    th = a.count(3)\n    ans += min(o, th)\n    ans += t // 2\n    if o > th:\n        o -= th\n        th = 0\n    else:\n        th -= o\n        o = th\n    k = o + 2 * (t % 2)\n    if k % 4 == 0:\n        print(ans + o + t % 2 - k // 4)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        a[i] = a[i] % 4\n    o = a.count(1)\n    t = a.count(2)\n    th = a.count(3)\n    ans += min(o, th)\n    ans += t // 2\n    if o > th:\n        o -= th\n        th = 0\n    else:\n        th -= o\n        o = th\n    k = o + 2 * (t % 2)\n    if k % 4 == 0:\n        print(ans + o + t % 2 - k // 4)\n    else:\n        print(-1)", "import sys\nimport os\nimport math\nimport collections\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = [0] * 4\n    for i in A:\n        B[i % 4] += 1\n    C = B[1] + 2 * B[2] + 3 * B[3]\n    if C % 4:\n        print(-1)\n    else:\n        val = min(B[1], B[3])\n        B[3] -= val\n        B[1] -= val\n        val += B[2] // 2\n        B[2] = B[2] % 2\n        if B[2]:\n            val += 2\n            if B[3]:\n                B[3] -= 2\n            if B[1]:\n                B[1] -= 2\n        if B[1]:\n            val += B[1] // 4 * 3\n        if B[3]:\n            val += B[3] // 4 * 3\n        print(val)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        a[i] = a[i] % 4\n    o = a.count(1)\n    t = a.count(2)\n    th = a.count(3)\n    ans += min(o, th)\n    ans += t // 2\n    if o > th:\n        o -= th\n        th = 0\n    else:\n        th -= o\n        o = th\n    k = o + 2 * (t % 2)\n    if k % 4 == 0:\n        print(ans + o + t % 2 - k // 4)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 4 != 0:\n        print(-1)\n    else:\n        s = [0] * 4\n        for i in range(n):\n            s[a[i] % 4] += 1\n        x = min(s[1], s[3])\n        y = abs(s[1] - s[3])\n        z = s[2] // 2\n        if y == 0:\n            z += x\n        elif s[2] % 2 == 0:\n            z += x + 3 * (y // 4)\n        else:\n            z += x + 3 * ((y - 2) // 4) + 2\n        print(z)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 4 != 0:\n        print(-1)\n        continue\n    s = [0] * 4\n    for i in range(n):\n        s[a[i] % 4] += 1\n    z = s[2] // 2 + min(s[1], s[3]) + 3 * ((abs(s[1] - s[3]) - 2 * (s[2] % 2)) // 4) + 2 * (s[2] % 2)\n    print(z)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 4 != 0:\n        print(-1)\n        continue\n    s = [len([x for x in a if x % 4 == i]) for i in range(1, 4)]\n    z = s[1] // 2 + min(s[0], s[2]) + 3 * ((abs(s[0] - s[2]) - 2 * (s[1] % 2)) // 4) + 2 * (s[1] % 2)\n    print(z)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 4 != 0:\n        print(-1)\n    else:\n        s = [len([x for x in a if x % 4 == i]) for i in range(1, 4)]\n        z = s[1] // 2 + min(s[0], s[2]) + 3 * ((abs(s[0] - s[2]) - 2 * (s[1] % 2)) // 4) + 2 * (s[1] % 2)\n        print(z)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 4 != 0:\n        print(-1)\n    else:\n        s = [len([x for x in a if x % 4 == i]) for i in range(1, 4)]\n        x = min(s[0], s[2])\n        y = abs(s[0] - s[2])\n        z = s[1] // 2\n        if y == 0:\n            z += x\n        elif s[1] % 2 == 0:\n            z += x + 3 * (y // 4)\n        else:\n            z += x + 3 * ((y - 2) // 4) + 2\n        print(z)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 4 != 0:\n        print(-1)\n    else:\n        s = [len([x for x in a if x % 4 == i]) for i in range(4)]\n        x = min(s[1], s[3])\n        y = abs(s[1] - s[3])\n        z = s[2] // 2\n        if y == 0:\n            z += x\n        elif s[2] % 2 == 0:\n            z += x + 3 * (y // 4)\n        else:\n            z += x + 3 * ((y - 2) // 4) + 2\n        print(z)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 4 != 0:\n        print(-1)\n    else:\n        s = [0] * 4\n        for i in range(n):\n            s[a[i] % 4] += 1\n        x = min(s[1], s[3])\n        y = abs(s[1] - s[3])\n        z = s[2] // 2\n        if y == 0:\n            z += x\n        elif s[2] % 2 == 0:\n            z += x + 3 * (y // 4)\n        else:\n            z += x + 3 * ((y - 2) // 4) + 2\n        print(z)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = [[], [], [], []]\n    s = []\n    for i in range(4):\n        l[i] = [x for x in a if x % 4 == i]\n        s.append(len(l[i]))\n    if sum(a) % 4 != 0:\n        print(-1)\n    elif len(l[2]) % 2 == 0:\n        extra = max(s[1], s[3]) - min(s[1], s[3])\n        print(s[2] // 2 + min(s[1], s[3]) + extra // 4 * 3)\n    else:\n        extra = max(s[1], s[3]) - min(s[1], s[3]) - 2\n        print(s[2] // 2 + min(s[1], s[3]) + extra // 4 * 3 + 2)", "T = int(input())\nwhile T:\n    T -= 1\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    r1 = r2 = r3 = 0\n    total = 0\n    for a in A:\n        if a % 4 == 1:\n            r1 += 1\n        elif a % 4 == 2:\n            r2 += 1\n        elif a % 4 == 3:\n            r3 += 1\n        total += a\n    if total % 4 != 0:\n        print(-1)\n    else:\n        (pairs13, pairs22) = (min(r1, r3), r2 // 2)\n        r1 -= pairs13\n        r3 -= pairs13\n        left13 = r1 + r3\n        ans = pairs13 + pairs22\n        if r2 % 2 == 1:\n            if left13 >= 2:\n                left13 -= 2\n                ans += 2\n            else:\n                print(-1)\n        if left13 > 0:\n            if left13 % 4 != 0:\n                print(-1)\n            else:\n                ans += 3 * (left13 // 4)\n        print(ans)", "T = int(input())\nwhile T:\n    T -= 1\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    r1 = r2 = r3 = 0\n    total = 0\n    for a in A:\n        if a % 4 == 1:\n            r1 += 1\n        elif a % 4 == 2:\n            r2 += 1\n        elif a % 4 == 3:\n            r3 += 1\n        total += a\n    if total % 4 != 0:\n        print(-1)\n    else:\n        ans = 0\n        pairs13 = min(r1, r3)\n        pairs22 = r2 // 2\n        r1 -= pairs13\n        r3 -= pairs13\n        left13 = r1 + r3\n        ans += pairs13 + pairs22\n        if r2 % 2 == 1:\n            if left13 >= 2:\n                left13 -= 2\n                ans += 2\n            else:\n                print(-1)\n        if left13 > 0:\n            if left13 % 4 != 0:\n                print(-1)\n            else:\n                ans += 3 * (left13 // 4)\n        print(ans)", "from math import ceil, log2\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 4 != 0:\n        print(-1)\n        continue\n    c = [0, 0, 0, 0]\n    step = 0\n    for i in a:\n        mod = i % 4\n        if mod != 0:\n            if mod == 1:\n                if c[3] > 0:\n                    c[3] -= 1\n                    step += 1\n                else:\n                    c[1] += 1\n            if mod == 3:\n                if c[1] > 0:\n                    c[1] -= 1\n                    step += 1\n                else:\n                    c[3] += 1\n            if mod == 2:\n                if c[2] > 0:\n                    c[2] -= 1\n                    step += 1\n                else:\n                    c[2] += 1\n    sumc = sum(c)\n    if c[1] != 0 or c[3] != 0:\n        q = (c[1] + c[3]) // 4\n        r = (c[1] + c[3]) % 4\n        step += q * 3\n    if c[2] != 0:\n        step += 2\n    print(step)", "T = int(input())\nfor test in range(T):\n    N = int(input())\n    ll = [int(x) for x in input().split()]\n    count = [0 for i in range(4)]\n    sum = 0\n    for i in range(len(ll)):\n        ll[i] = ll[i] % 4\n        count[ll[i]] += 1\n        sum += ll[i]\n    if sum % 4 != 0:\n        print(-1)\n        continue\n    res = 0\n    res += count[2] // 2\n    count[2] = count[2] % 2\n    mi = min(count[1], count[3])\n    ma = max(count[1], count[3])\n    res += mi\n    left = ma - mi\n    if count[2] > 0:\n        res += 2\n        left -= 2\n    res += 3 * (left // 4)\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = 0\n    y = 0\n    z = 0\n    for j in l:\n        if j % 4 == 1:\n            x = x + 1\n        elif j % 4 == 2:\n            y = y + 1\n        elif j % 4 == 3:\n            z = z + 1\n    if x >= z:\n        if y % 2 == 0:\n            if (x - z) % 4 == 0:\n                print(int(z + y / 2 + (x - z) / 4 * 3))\n            else:\n                print(-1)\n        elif (x - z + 2) % 4 == 0:\n            print(int(z + y / 2 + (x - z) / 4 * 3))\n        else:\n            print(-1)\n    elif y % 2 == 0:\n        if (z - x) % 4 == 0:\n            print(int(x + y / 2 + (z - x) / 4 * 3))\n        else:\n            print(-1)\n    elif (z - x + 2) % 4 == 0:\n        print(int(x + y / 2 + (z - x) / 4 * 3))\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        arr[i] = arr[i] % 4\n    dic = {}\n    for i in range(n):\n        dic[arr[i]] = dic.get(arr[i], 0) + 1\n    cnt = 0\n    ones = dic.get(1, 0)\n    trees = dic.get(3, 0)\n    twos = dic.get(2, 0)\n    if ones > trees:\n        ones -= trees\n        cnt += trees\n        cnt += twos // 2\n        rem_t = twos % 2\n        if rem_t <= ones and rem_t > 0:\n            if ones >= 2:\n                ones -= 2\n                cnt += 2\n            if ones % 4 == 0:\n                cnt += 3 * (ones // 4)\n                print(cnt)\n            else:\n                print(-1)\n        elif ones % 4 == 0:\n            cnt += 3 * (ones // 4)\n            print(cnt)\n        else:\n            print(-1)\n    elif trees > ones:\n        trees -= ones\n        cnt += ones\n        cnt += twos // 2\n        rem_t = twos % 2\n        ops = trees // 4\n        rem_th = trees % 4\n        if trees >= rem_t and rem_t > 0:\n            if trees >= 2:\n                trees -= 2\n                cnt += 2\n            if trees % 4 == 0:\n                cnt += 3 * (trees // 4)\n                print(cnt)\n            else:\n                print(-1)\n        elif trees % 4 == 0:\n            cnt += 3 * (trees // 4)\n            print(cnt)\n        else:\n            print(-1)\n    else:\n        cnt += ones\n        if twos % 2 == 0:\n            cnt += twos // 2\n            print(cnt)\n        else:\n            print(-1)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if sum(l) % 4 != 0:\n        print(-1)\n    else:\n        s = [0] * 4\n        for i in range(n):\n            if l[i] % 4 != 0:\n                s[l[i] % 4] += 1\n        a = min(s[1], s[3])\n        b = s[1] + s[3] - 2 * a\n        c = s[2] // 2\n        if b == 0:\n            c += a\n        elif s[2] % 2 == 0:\n            c += a + 3 * (b // 4)\n        elif b == 2:\n            c += a + 2\n        else:\n            c += a + 3 * ((b - 2) // 4) + 2\n        print(c)", "for i in range(int(input())):\n    n = int(input())\n    d = {1: 0, 2: 0, 3: 0}\n    a = [int(i) % 4 for i in input().split()]\n    for i in a:\n        if i:\n            d[i] += 1\n    m = min(d[1], d[3])\n    moves = m\n    d[1] -= m\n    d[3] -= m\n    temp = d[1] // 2 + d[3] // 2\n    d[1] = d[1] & 1\n    d[3] = d[3] & 1\n    moves += temp\n    temp += d[2]\n    if temp & 1 or d[1] or d[3]:\n        print(-1)\n    else:\n        print(moves + temp // 2)", "for i in range(int(input())):\n    n = int(input())\n    d = {1: 0, 2: 0, 3: 0}\n    a = [int(i) % 4 for i in input().split()]\n    for i in a:\n        if i:\n            d[i] += 1\n    m = min(d[1], d[3])\n    moves = m\n    d[1] -= m\n    d[3] -= m\n    temp = d[1] // 2 + d[3] // 2\n    d[1] = d[1] & 1\n    d[3] = d[3] & 1\n    moves += temp\n    temp += d[2]\n    if temp & 1 or d[1] or d[3]:\n        print(-1)\n    else:\n        print(moves + temp // 2)", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    countArr = [0] * 4\n    for i in l:\n        countArr[i % 4] += 1\n    if (countArr[1] + 2 * countArr[2] + 3 * countArr[3]) % 4 != 0:\n        print(-1)\n    else:\n        count = 0\n        count += min(countArr[1], countArr[3])\n        countArr[1] -= count\n        countArr[3] -= count\n        count += countArr[2] // 2\n        countArr[2] = countArr[2] % 2\n        if countArr[1] == 0 and countArr[3] == 0:\n            print(count)\n        else:\n            temp = countArr[1] + countArr[3]\n            if countArr[2] > 0 and temp > 1:\n                count += 2\n                temp -= 2\n                countArr[2] -= 1\n            if temp > 0:\n                count += 3 * temp // 4\n            print(count)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    countArr = [0] * 4\n    for i in l:\n        countArr[i % 4] += 1\n    if (countArr[1] + 2 * countArr[2] + 3 * countArr[3]) % 4 != 0:\n        print(-1)\n    else:\n        count = 0\n        count += min(countArr[1], countArr[3])\n        countArr[1] -= count\n        countArr[3] -= count\n        count += countArr[2] // 2\n        countArr[2] = countArr[2] % 2\n        if countArr[1] == 0 and countArr[3] == 0:\n            print(count)\n        else:\n            temp = countArr[1] + countArr[3]\n            if countArr[2] > 0 and temp > 1:\n                count += 2\n                temp -= 2\n                countArr[2] -= 1\n            if temp > 0:\n                count += 3 * temp // 4\n            print(count)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = list(map(int, input().split()))\n    s = sum(L)\n    if s % 4 != 0:\n        print(-1)\n    else:\n        M = {0: 0, 1: 0, 2: 0, 3: 0}\n        for i in range(n):\n            M[L[i] % 4] += 1\n        a = M[1]\n        b = M[2]\n        c = M[3]\n        if a == c:\n            print(a + b // 2)\n        elif a > c:\n            ans = c\n            a -= c\n            ans += b // 2\n            if b % 2 == 0:\n                b = 0\n            else:\n                b = 1\n            ans += a // 2\n            a = a // 2 + b\n            ans += a // 2\n            print(ans)\n        else:\n            ans = a\n            c -= a\n            ans += b // 2\n            if b % 2 == 0:\n                b = 0\n            else:\n                b = 1\n            ans += c // 2\n            c = c // 2 + b\n            ans += c // 2\n            print(ans)", "from sys import stdin, stdout\nfrom collections import defaultdict, Counter, deque\nimport math, heapq, bisect\ninput = stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    ans = 0\n    arr = [a[i] % 4 for i in range(n) if a[i] % 4]\n    even = [num for num in arr if not num & 1]\n    ans += len(even) // 2\n    rem_even = len(even) % 2\n    odd = [num for num in arr if num & 1]\n    d = Counter(odd)\n    mini = min(d[1], d[3])\n    ans += mini\n    rem_odd = len(odd) - mini * 2\n    if not rem_even:\n        if rem_odd % 4:\n            print(-1)\n        else:\n            ans += rem_odd // 4 * 3\n            print(ans)\n    elif rem_odd < 2:\n        print(-1)\n    else:\n        rem_odd -= 2\n        ans += 2\n        if rem_odd % 4:\n            print(-1)\n        else:\n            ans += rem_odd // 4 * 3\n            print(ans)", "def mgc(arr):\n    if sum(arr) % 4 != 0:\n        return -1\n    remainder_map = [0, 0, 0, 0]\n    for i in arr:\n        remainder = i % 4\n        remainder_map[remainder] += 1\n    ans = 0\n    first_try = min(remainder_map[1], remainder_map[3])\n    ans += first_try\n    remainder_map[1] -= first_try\n    remainder_map[3] -= first_try\n    second_try = remainder_map[2] // 2\n    ans += second_try\n    remainder_map[2] %= 2\n    if remainder_map[1] > 0:\n        remainder_map[2] += remainder_map[1] // 2\n        ans += remainder_map[1] // 2\n    if remainder_map[3] > 0:\n        remainder_map[2] += remainder_map[3] // 2\n        ans += remainder_map[3] // 2\n    return ans + remainder_map[2] // 2\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(mgc(arr))", "n = int(input())\nfor i in range(0, n):\n    k = int(input())\n    arr = list(map(int, input().split(' ')))\n    for j in range(0, k):\n        arr[j] = arr[j] % 4\n    cnt = 0\n    a1 = arr.count(1)\n    a2 = arr.count(2)\n    a3 = arr.count(3)\n    cnt = cnt + min(a1, a3)\n    cnt = cnt + a2 // 2\n    if a2 % 2 == 1:\n        if abs(a3 - a1) >= 2:\n            cnt = cnt + 2\n            if (abs(a3 - a1) - 2) % 4 == 0:\n                cnt = cnt + (abs(a3 - a1) - 2) // 4 * 3\n                print(cnt)\n            else:\n                print(-1)\n        else:\n            print(-1)\n    elif abs(a3 - a1) % 4 == 0:\n        cnt = cnt + abs(a3 - a1) * 3 // 4\n        print(cnt)\n    else:\n        print(-1)"]