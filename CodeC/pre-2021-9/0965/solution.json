["from sys import stdin\ninput = stdin.readline\n\ndef answer():\n    if z1 in a or z2 in a or -z1 in a or (-z2 in a):\n        return 1\n    count = 0\n    for i in range(n):\n        if z1 - a[i] in a or -(z1 - a[i]) in a:\n            count += 1\n        elif z2 - a[i] in a or -(z2 - a[i]) in a:\n            count += 1\n        if z1 + a[i] in a or -(z1 + a[i]) in a:\n            count += 1\n        elif z2 + a[i] in a or -(z2 + a[i]) in a:\n            count += 1\n    if count == 2 * n:\n        return 2\n    return 0\nfor T in range(int(input())):\n    (n, z1, z2) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(answer())", "from sys import stdin\ninput = stdin.readline\n\ndef answer():\n    if z1 in a or z2 in a or -z1 in a or (-z2 in a):\n        return 1\n    count = 0\n    for i in range(n):\n        if z1 - a[i] in a or -(z1 - a[i]) in a:\n            count += 1\n        elif z2 - a[i] in a or -(z2 - a[i]) in a:\n            count += 1\n        if z1 + a[i] in a or -(z1 + a[i]) in a:\n            count += 1\n        elif z2 + a[i] in a or -(z2 + a[i]) in a:\n            count += 1\n    if count == 2 * n:\n        return 2\n    return 0\nfor T in range(int(input())):\n    (n, z1, z2) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(answer())", "from sys import stdin\ninput = stdin.readline\n\ndef answer():\n    if z1 in a or z2 in a or -z1 in a or (-z2 in a):\n        return 1\n    count = 0\n    for i in range(n):\n        if z1 - a[i] in a or -(z1 - a[i]) in a:\n            count += 1\n        elif z2 - a[i] in a or -(z2 - a[i]) in a:\n            count += 1\n        if z1 + a[i] in a or -(z1 + a[i]) in a:\n            count += 1\n        elif z2 + a[i] in a or -(z2 + a[i]) in a:\n            count += 1\n    if count == 2 * n:\n        return 2\n    return 0\nfor T in range(int(input())):\n    (n, z1, z2) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(answer())", "from sys import stdin\ninput = stdin.readline\n\ndef answer():\n    if z1 in a or z2 in a or -z1 in a or (-z2 in a):\n        return 1\n    count = 0\n    for i in range(n):\n        if z1 - a[i] in a or -(z1 - a[i]) in a:\n            count += 1\n        elif z2 - a[i] in a or -(z2 - a[i]) in a:\n            count += 1\n        if z1 + a[i] in a or -(z1 + a[i]) in a:\n            count += 1\n        elif z2 + a[i] in a or -(z2 + a[i]) in a:\n            count += 1\n    if count == 2 * n:\n        return 2\n    return 0\nfor T in range(int(input())):\n    (n, z1, z2) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(answer())", "import sys\nfrom collections import defaultdict as dd\nfrom collections import deque\nfrom fractions import Fraction as f\nfrom copy import *\nfrom bisect import *\nfrom heapq import *\nfrom math import *\nfrom itertools import permutations\n\ndef eprint(*args):\n    print(*args, file=sys.stderr)\nzz = 1\nif zz:\n    input = sys.stdin.readline\nelse:\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('all.txt', 'w')\n\ndef li():\n    return [int(xx) for xx in input().split()]\n\ndef fli():\n    return [float(x) for x in input().split()]\n\ndef comp(a, b):\n    if a > b:\n        return 2\n    return 2 if a == b else 0\n\ndef gi():\n    return [xx for x in input().split()]\n\ndef fi():\n    return int(input())\n\ndef swap(a, i, j):\n    (a[i], a[j]) = (a[j], a[i])\n\ndef si():\n    return list(input().rstrip())\n\ndef mi():\n    return map(int, input().split())\n\ndef gh():\n    sys.stdout.flush()\n\ndef graph(n, m):\n    for i in range(m):\n        (x, y) = mi()\n        a[x].append(y)\n        a[y].append(x)\n\ndef bo(i):\n    return ord(i) - ord('a')\nt = fi()\nwhile t > 0:\n    t -= 1\n    (n, z1, z2) = mi()\n    d = {}\n    a = li()\n    flag = 0\n    for i in a:\n        d[i] = 1\n        d[-i] = 1\n        if i == z1 or i == z2 or i == -z1 or (i == -z2):\n            flag = 1\n            break\n    if flag:\n        print(1)\n        continue\n    for i in d:\n        p = [i - z1, i - z2]\n        c = 1\n        for j in p:\n            if j in d:\n                c *= 0\n        flag |= c\n    print(0 if flag else 2)", "def solve(x, y, a):\n    a = [abs(z) for z in a]\n    if x > y:\n        (x, y) = (y, x)\n    win = set()\n    for z in a:\n        win.update([x - z, y - z, x + z, y + z])\n    if 0 in win:\n        return 1\n    if all((z in win for z in a)) and all((-z in win for z in a)):\n        return 2\n    return 0\nt = int(input())\nfor i in range(t):\n    (n, z1, z2) = map(int, input().split())\n    a = list(map(int, input().split()))\n    q = solve(z1, z2, a)\n    print(q)", "for _ in range(int(input())):\n    (n, z1, z2) = [int(i) for i in input().split()]\n    A = [int(i) for i in input().split()]\n    t1 = [i for i in A] + [-i for i in A]\n    if z1 in t1 or z2 in t1:\n        print(1)\n    else:\n        t2 = 2\n        for val in t1:\n            t3 = [val + t for t in t1]\n            if z1 not in t3 and z2 not in t3:\n                t2 = 0\n                break\n        print(t2)", "t = int(input())\nfor _ in range(t):\n    (n, z1, z2) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        arr[i] = abs(arr[i])\n    if abs(z1) in arr or abs(z2) in arr:\n        print(1)\n        continue\n    if z1 == 0 or z2 == 0:\n        print(2)\n        continue\n    poss = True\n    for i in arr:\n        if (abs(z1 + i) in arr or abs(z2 + i) in arr) and (abs(z1 - i) in arr or abs(z2 - i) in arr):\n            pass\n        else:\n            poss = False\n            break\n    if poss:\n        print(2)\n        continue\n    print(0)", "for _ in range(int(input())):\n    (n, z1, z2) = map(int, input().split())\n    num1 = [int(i) for i in input().split()]\n    num2 = [int(i) * -1 for i in num1]\n    nums = num1 + num2\n    f = 0\n    if z1 in nums or z2 in nums:\n        f = 1\n        print(1)\n        continue\n    cnt = 0\n    for val in nums:\n        if val - z1 in nums or val - z2 in nums:\n            cnt += 1\n    if f == 0 and cnt == n + n:\n        print(2)\n        f = 2\n    if not f:\n        print(0)", "import sys\nT = int(sys.stdin.readline())\nfor tc in range(T):\n    (N, Z1, Z2) = [int(c) for c in sys.stdin.readline().strip().split()]\n    A = [int(c) for c in sys.stdin.readline().strip().split()]\n    A.extend([-a for a in A])\n\n    def sol(A, Z1, Z2):\n        if Z1 in A or Z2 in A:\n            return 1\n        elif all((Z1 - s in A or Z2 - s in A for s in A)):\n            return 2\n        return 0\n    print(sol(A, Z1, Z2))", "for T in range(0, int(input())):\n    (n, z1, z2) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = x\n    for i in range(0, n):\n        y.append(-x[i])\n    res = 0\n    for i in range(0, n):\n        if abs(x[i]) == abs(z1) or abs(x[i]) == abs(z2):\n            res = 1\n            break\n    if res == 0:\n        for i in range(0, 2 * n):\n            flag = 0\n            for j in range(0, 2 * n):\n                if y[i] + y[j] == z1 or y[i] + y[j] == z2:\n                    flag = 1\n                    break\n            if flag == 0:\n                break\n        if flag == 1:\n            res = 2\n    print(res)", "for i in range(int(input())):\n    (n, z1, z2) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    m = dict()\n    for item in arr:\n        m[item] = 1\n        m[-item] = -1\n    if z1 in m or z2 in m:\n        print('1')\n    else:\n        cnt = 0\n        for item in arr:\n            if z1 - item in m or z2 - item in m:\n                cnt += 1\n            if z1 + item in m or z2 + item in m:\n                cnt += 1\n        if cnt == 2 * n:\n            print('2')\n        else:\n            print('0')", "for i in range(0, int(input())):\n    (n, z1, z2) = map(int, input().split())\n    my_list = list(map(int, input().split()))\n    flag1 = 1\n    flag2 = 1\n    flag3 = 1\n    if z1 in my_list or z2 in my_list or -1 * z1 in my_list or (-1 * z2 in my_list):\n        print(1)\n        continue\n    for item in my_list:\n        if abs(z1 - item) not in list(map(abs, my_list)) and abs(z2 - item) not in list(map(abs, my_list)):\n            flag1 = 0\n        if abs(z1 + item) not in list(map(abs, my_list)) and abs(z2 + item) not in list(map(abs, my_list)):\n            flag2 = 0\n    if flag1 == 0 or flag2 == 0:\n        print(0)\n        continue\n    else:\n        print(2)\n        continue", "from collections import defaultdict\nfor t in range(int(input())):\n    (n, z1, z2) = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    dic = defaultdict(int)\n    for i in seq:\n        dic[i] = 1\n        dic[-i] = 1\n    if dic[z1] or dic[z2]:\n        print(1)\n        continue\n    for i in seq:\n        if dic[z1 - i] or dic[z2 - i]:\n            c += 1\n        if dic[z1 + i] or dic[z2 + i]:\n            c += 1\n    if c == 2 * len(seq):\n        print(2)\n    else:\n        print(0)", "T = int(input())\nfor a in range(T):\n    (n, z1, z2) = map(int, input().split())\n    num = [int(a) for a in input().split()][:n]\n    num2 = [-1 * i for i in num]\n    nums = num + num2\n    flag = 0\n    for val in nums:\n        if val == z1 or val == z2:\n            flag = 1\n            print(1)\n            break\n    cnt = 0\n    for val1 in nums:\n        if val1 - z1 in nums or val1 - z2 in nums:\n            cnt += 1\n    if cnt == len(nums) and (not flag == 1):\n        flag = 2\n        print(2)\n    if flag == 0:\n        print(0)", "def check(arr, z):\n    for i in arr:\n        if i in z:\n            return 1\n    for i in arr:\n        flag = True\n        for j in arr:\n            if i + j in z or i - j in z:\n                flag = False\n                break\n        if flag:\n            return 0\n    return 2\nfor test_case in range(int(input())):\n    (n, z1, z2) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    arr += [-i for i in arr]\n    print(check(arr, (z1, z2)))", "t = int(input())\nwhile t > 0:\n    inp = input()\n    arr = input()\n    inp = inp.split()\n    n = int(inp[0])\n    z1 = int(inp[1])\n    z2 = int(inp[2])\n    arr = arr.split()\n    arr = [int(value) for value in arr]\n    for i in range(n):\n        arr.append(-1 * arr[i])\n    flag = 0\n    for val in arr:\n        if val == z1 or val == z2:\n            flag = 1\n            print(1)\n            break\n    cnt = 0\n    for val1 in arr:\n        if val1 - z1 in arr or val1 - z2 in arr:\n            cnt += 1\n    if cnt == len(arr) and (not flag == 1):\n        flag = 2\n        print(2)\n    if flag == 0:\n        print(0)\n    t -= 1", "from itertools import chain\nR = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, *z) = R()\n    u = set(chain.from_iterable(((x, -x) for x in R())))\n    v = set((x + y for x in z for y in u))\n    if 0 in v:\n        print(1)\n    elif u <= v:\n        print(2)\n    else:\n        print(0)", "for i in range(int(input())):\n    (n, a, b) = [int(c) for c in input().split()]\n    impossible = 0\n    arr = [abs(int(x)) for x in input().split()]\n    if a in arr or -a in arr or b in arr or (-b in arr):\n        print(1)\n        continue\n    if a == 0 or b == 0:\n        print(2)\n        continue\n    if a == -b:\n        for move1 in arr:\n            a_left = abs(a - move1)\n            b_left = abs(b - move1)\n            if a_left in arr or b_left in arr:\n                continue\n            else:\n                impossible = 1\n                break\n        else:\n            print(2)\n            continue\n    print(0)", "for i in range(int(input())):\n    (n, a, b) = [int(c) for c in input().split()]\n    impossible = 0\n    arr = [abs(int(x)) for x in input().split()]\n    if a in arr or -a in arr or b in arr or (-b in arr):\n        print(1)\n        continue\n    if a == 0 or b == 0:\n        print(2)\n        continue\n    if a == -b:\n        for move1 in arr:\n            a_left = abs(a - move1)\n            b_left = abs(b - move1)\n            if a_left in arr or b_left in arr:\n                continue\n            else:\n                impossible = 1\n                break\n        else:\n            print(2)\n            continue\n    print(0)", "from itertools import chain\nR = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, *z) = R()\n    a = list(R())\n    u = set(chain.from_iterable(((x, -x) for x in a)))\n    v = set((x + y for x in z for y in u))\n    if 0 in v:\n        print(1)\n    elif u <= v:\n        print(2)\n    else:\n        print(0)", "from itertools import chain\nR = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, *z) = R()\n    a = list(R())\n    aa = lambda : chain.from_iterable(((x, -x) for x in a))\n    v = set((x + y for x in z for y in aa()))\n    if 0 in v:\n        print(1)\n    elif set(aa()) <= v:\n        print(2)\n    else:\n        print(0)", "from itertools import chain\nR = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, *z) = R()\n    a = list(R())\n    aa = lambda : chain.from_iterable(((x, -x) for x in a))\n    u = set(chain.from_iterable(((x, -x) for x in a)))\n    v = set((x + y for x in z for y in aa()))\n    if 0 in v:\n        print(1)\n    elif set(aa()) <= v:\n        print(2)\n    else:\n        print(0)", "from itertools import chain\nR = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, *z) = R()\n    a = list(R())\n    u = set(chain.from_iterable(((x, -x) for x in a)))\n    v = set((x + y for x in z for y in u))\n    if 0 in v:\n        print(1)\n    elif u <= v:\n        print(2)\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    (n, z1, z2) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if z1 in l or z2 in l or -1 * z1 in l or (-1 * z2 in l):\n        print(1)\n        continue\n    if z1 == 0 and z2 == 0:\n        print(2)\n        continue\n    l = list(map(abs, l))\n    for i in l:\n        if abs(z1 - i) not in l and abs(z2 - i) not in l:\n            print(0)\n            break\n        if abs(z1 + i) not in l and abs(z2 + i) not in l:\n            print(0)\n            break\n    else:\n        print(2)", "for i in range(0, int(input())):\n    (n, z1, z2) = map(int, input().split())\n    my_list = list(map(int, input().split()))\n    flag1 = 1\n    flag2 = 1\n    flag3 = 1\n    if z1 in my_list or z2 in my_list or -1 * z1 in my_list or (-1 * z2 in my_list):\n        print(1)\n        continue\n    if z1 == 0 or z2 == 0:\n        print(2)\n        continue\n    for item in my_list:\n        if abs(z1 - item) not in list(map(abs, my_list)) and abs(z2 - item) not in list(map(abs, my_list)):\n            flag1 = 0\n        if abs(z1 + item) not in list(map(abs, my_list)) and abs(z2 + item) not in list(map(abs, my_list)):\n            flag2 = 0\n    if flag1 == 0 or flag2 == 0:\n        print(0)\n        continue\n    else:\n        print(2)\n        continue", "from itertools import chain\nfrom functools import reduce\nfrom operator import and_\nR = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, *z) = R()\n    a = list(R())\n    aa = lambda : chain.from_iterable(((x, -x) for x in a))\n    r = 0\n    v = [x + y for x in z for y in aa()]\n    if 0 in v:\n        print(1)\n    elif 0 in reduce(and_, (set((x + y for x in v)) for y in aa())):\n        print(2)\n    else:\n        print(0)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, z1, z2) = map(int, input().split())\n    li = [int(x) for x in input().split()]\n    a = 1\n    b = 1\n    c = 1\n    if z1 in li or z2 in li or -1 * z1 in li or (-1 * z2 in li):\n        print('1')\n        continue\n    if z1 == 0 or z2 == 0:\n        print('2')\n        continue\n    for value in li:\n        if abs(z1 - value) not in list(map(abs, li)) and abs(z2 - value) not in list(map(abs, li)):\n            a = 0\n            break\n        if abs(z1 + value) not in list(map(abs, li)) and abs(z2 + value) not in list(map(abs, li)):\n            b = 0\n            break\n    if a == 0 or b == 0:\n        print('0')\n        continue\n    else:\n        print('2')\n        continue", "t = int(input())\nwhile t:\n    t -= 1\n    (n, z1, z2) = map(int, input().split())\n    li = [int(x) for x in input().split()]\n    a = 1\n    b = 1\n    c = 1\n    if z1 in li or z2 in li or -1 * z1 in li or (-1 * z2 in li):\n        print('1')\n        continue\n    if z1 == 0 or z2 == 0:\n        print('2')\n        continue\n    for value in li:\n        if abs(z1 - value) not in list(map(abs, li)) and abs(z2 - value) not in list(map(abs, li)):\n            a = 0\n            break\n        if abs(z1 + value) not in list(map(abs, li)) and abs(z2 + value) not in list(map(abs, li)):\n            b = 0\n            break\n    if a == 0 or b == 0:\n        print('0')\n        continue\n    else:\n        print('2')\n        continue", "t = int(input())\nwhile t:\n    t -= 1\n    (n, z1, z2) = map(int, input().split())\n    li = [int(x) for x in input().split()]\n    a = 1\n    b = 1\n    c = 1\n    if z1 in li or z2 in li or -1 * z1 in li or (-1 * z2 in li):\n        print('1')\n        continue\n    if z1 == 0 or z2 == 0:\n        print('2')\n        continue\n    for value in li:\n        if abs(z1 - value) not in list(map(abs, li)) and abs(z2 - value) not in list(map(abs, li)):\n            a = 0\n        if abs(z1 + value) not in list(map(abs, li)) and abs(z2 + value) not in list(map(abs, li)):\n            b = 0\n    if a == 0 or b == 0:\n        print('0')\n        continue\n    else:\n        print('2')\n        continue", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, z1, z2) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    b = [abs(x) for x in arr]\n    f = 0\n    for ele in b:\n        if ele == abs(z1) or ele == abs(z2):\n            f = 1\n            break\n    if f:\n        ans = 1\n    elif z1 == 0 or z2 == 0:\n        ans = 2\n    else:\n        f1 = 0\n        for ele in b:\n            if abs(ele - z1) not in b and abs(ele - z2) not in b or (abs(z1 + ele) not in b and abs(z2 + ele) not in b):\n                f1 = 1\n        if f1 == 1:\n            ans = 0\n        else:\n            ans = 2\n    print(ans)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, a, b) = list(map(int, input().split()))\n        ar = list(map(int, input().split()))\n        d = {}\n        for i in range(n):\n            d[ar[i]] = 1\n            d[-ar[i]] = 1\n        if a in d or b in d:\n            print(1)\n            continue\n        else:\n            count = 0\n            for i in range(n):\n                if a - ar[i] in d or b - ar[i] in d:\n                    count += 1\n                if a + ar[i] in d or b + ar[i] in d:\n                    count += 1\n            if count == 2 * n:\n                print(2)\n            else:\n                print(0)\nmain()", "I = lambda : list(map(int, input().split()))\n(test,) = I()\nwhile test:\n    test -= 1\n    (n, *z) = I()\n    l = I()\n    res = 0\n    for i in l:\n        if i in z or -i in z:\n            res = 1\n            break\n    a = [0] * n\n    if res == 0:\n        if 0 in z:\n            res = 2\n        else:\n            for i in range(n):\n                for j in range(n):\n                    if (l[i] + l[j] in z or l[i] - l[j] in z) and (-l[i] + l[j] in z or -l[i] - l[j] in z):\n                        a[i] = 1\n                        break\n    if all(a):\n        res = 2\n    print(res)", "from itertools import chain\nfrom functools import reduce\nfrom operator import and_\nR = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, z1, z2) = R()\n    a = list(R())\n    aa = lambda : chain.from_iterable(((x, -x) for x in a))\n    m = {z1, z2}\n    while True:\n        v = [x + y for x in m for y in aa()]\n        if 0 in v:\n            print(1)\n            break\n        mo = m\n        m = reduce(and_, (set((x + y for x in v)) for y in aa()))\n        if 0 in m:\n            print(2)\n            break\n        if m == mo:\n            print(0)\n            break", "from itertools import chain\nfrom functools import reduce\nfrom operator import and_\nR = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, z1, z2) = R()\n    a = list(R())\n    aa = lambda : chain.from_iterable(((x, -x) for x in a))\n    m = {z1, z2}\n    while True:\n        v = set((x + y for x in m for y in aa()))\n        if 0 in v:\n            print(1)\n            break\n        mo = m\n        m = reduce(and_, (set((x + y for x in v)) for y in aa()))\n        if 0 in m:\n            print(2)\n            break\n        if m == mo:\n            print(0)\n            break", "from itertools import chain\nfrom functools import reduce\nfrom operator import and_\nR = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, z1, z2) = R()\n    a = list(R())\n    aa = lambda : chain.from_iterable(((x, -x) for x in a))\n    m = {z1, z2}\n    while True:\n        v = set((x + y for x in m for y in aa()))\n        if 0 in v:\n            print(1)\n            break\n        (mo, m) = (m, reduce(and_, (set((x + y for x in v)) for y in aa())))\n        if 0 in m:\n            print(2)\n            break\n        if m == mo:\n            print(0)\n            break", "from itertools import chain\nfrom functools import reduce\nfrom operator import and_\nR = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, z1, z2) = R()\n    a = list(R())\n    b = lambda : chain.from_iterable(((x, -x) for x in a))\n    m = {z1, z2}\n    while True:\n        v = set((x + y for x in m for y in b()))\n        if 0 in v:\n            print(1)\n            break\n        (mo, m) = (m, reduce(and_, (set((x + y for x in v)) for y in b())))\n        if 0 in m:\n            print(2)\n            break\n        if m == mo:\n            print(0)\n            break", "def mix():\n    n = int(input())\n    while n > 0:\n        l = []\n        l = input().split()\n        a = int(l[0])\n        z1 = int(l[1])\n        z2 = int(l[2])\n        m = []\n        m1 = []\n        m = input().split()\n        count = 0\n        rocku = 0\n        rockon = 0\n        rockunism = 0\n        for i in range(len(m)):\n            d = int(m[i])\n            m1.append(d)\n            if d == z1 or d == z2 or d == -z1 or (d == -z2):\n                count = count + 1\n        if count > 0:\n            print('1')\n        else:\n            for i in range(len(m1)):\n                for j in range(len(m1)):\n                    if m1[j] - m1[i] == z1 or m1[j] - m1[i] == z2 or -m1[j] - m1[i] == z1 or (-m1[j] - m1[i] == z2):\n                        rocku = rocku + 1\n                    if m1[i] + m1[j] == z1 or m1[i] + m1[j] == z2 or m1[i] - m1[j] == z1 or (m1[i] - m1[j] == z2):\n                        rockon = rockon + 1\n                if rocku > 0 and rockon > 0:\n                    rockunism = rockunism + 1\n                    rocku = 0\n                    rockon = 0\n            if rockunism == a:\n                print('2')\n            else:\n                print('0')\n        n = n - 1\nmix()", "from functools import reduce\nfrom operator import and_\nR = lambda : map(int, input().split())\nS = (-1, 1)\nt = int(input())\nfor _ in range(t):\n    (n, z1, z2) = R()\n    a = list(R())\n    m = {z1, z2}\n    while True:\n        v = set((x + y * s for x in m for y in a for s in S))\n        if 0 in v:\n            print(1)\n            break\n        mn = reduce(and_, (set((x + y * s for x in v)) for y in a for s in S))\n        if 0 in mn:\n            print(2)\n            break\n        if mn == m:\n            print(0)\n            break\n        m = mn", "from itertools import chain\nfrom functools import reduce\nfrom operator import and_\nR = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, z1, z2) = R()\n    a = list(chain.from_iterable(((x, -x) for x in R())))\n    m = {z1, z2}\n    while True:\n        v = set((x + y for x in m for y in a))\n        if 0 in v:\n            print(1)\n            break\n        mn = reduce(and_, (set((x + y for x in v)) for y in a))\n        if 0 in mn:\n            print(2)\n            break\n        if mn == m:\n            print(0)\n            break\n        m = mn", "from itertools import chain\nfrom functools import reduce\nfrom operator import and_\nR = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, z1, z2) = R()\n    a = list(chain.from_iterable(((x, -x) for x in R())))\n    m = None\n    mn = {z1, z2}\n    while m != mn:\n        m = mn\n        v = set((x + y for x in m for y in a))\n        if 0 in v:\n            print(1)\n            break\n        mn = reduce(and_, (set((x + y for x in v)) for y in a))\n        if 0 in mn:\n            print(2)\n            break\n    else:\n        print(0)", "T = int(input())\nfor i in range(0, T):\n    (N, Z1, Z2) = map(int, input().split())\n    s = [int(x) for x in input().split()]\n    for j in range(0, len(s)):\n        s[j] = abs(s[j])\n    if abs(Z1) in s or abs(Z2) in s:\n        print(1)\n        continue\n    if Z1 == 0 or Z2 == 0:\n        print(2)\n        continue\n    ans = 0\n    for k in s:\n        if (abs(Z1 + k) in s or abs(Z2 + k) in s) and (abs(Z1 - k) in s or abs(Z2 - k) in s):\n            pass\n        else:\n            ans = 1\n            break\n    if ans == 0:\n        print(2)\n        continue\n    print(0)", "t = int(input())\nfor i in range(t):\n    (n, k1, k2) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    sa = set()\n    for j in arr:\n        sa.add(k1 + j)\n        sa.add(k1 - j)\n        sa.add(k2 + j)\n        sa.add(k2 - j)\n    sa = set(sorted(sa))\n    if 0 in sa:\n        print('1')\n        continue\n    w = 2\n    for j in arr:\n        if j not in sa or -j not in sa:\n            w = 0\n            break\n    print(w)", "for i in range(0, int(input())):\n    (n, z1, z2) = map(int, input().split())\n    my_list = list(map(int, input().split()))\n    flag1 = 1\n    flag2 = 1\n    flag3 = 1\n    if z1 in my_list or z2 in my_list or -1 * z1 in my_list or (-1 * z2 in my_list):\n        print(1)\n        continue\n    if z1 == 0 or z2 == 0:\n        print(2)\n        continue\n    for item in my_list:\n        if abs(z1 - item) not in list(map(abs, my_list)) and abs(z2 - item) not in list(map(abs, my_list)):\n            flag1 = 0\n        if abs(z1 + item) not in list(map(abs, my_list)) and abs(z2 + item) not in list(map(abs, my_list)):\n            flag2 = 0\n    if flag1 == 0 or flag2 == 0:\n        print(0)\n        continue\n    else:\n        print(2)\n        continue", "T = int(input())\nfor t in range(T):\n    (n, z1, z2) = [int(i) for i in input().split(' ')]\n    A = [int(i) for i in input().split(' ')]\n    k = 1\n    done = 0\n    if abs(z1) in [abs(i) for i in A] or abs(z2) in [abs(i) for i in A]:\n        print(1)\n        done = 1\n    else:\n        ct = 0\n        for i in range(n):\n            k = 0\n            for j in range(n):\n                if (A[i] + A[j] in [z1, z2] or A[i] - A[j] in [z1, z2]) and (A[j] - A[i] in [z1, z2] or -A[j] - A[i] in [z1, z2]):\n                    k = 1\n            if k:\n                ct += 1\n        if ct == n:\n            print(2)\n            done = 1\n    if done == 0:\n        print(0)", "for _ in range(int(input())):\n    (n, z1, z2) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = []\n    b = []\n    ab = []\n    for i in a:\n        b.append(i)\n        b.append(-i)\n        ab.append(abs(i))\n    ans = 0\n    for i in ab:\n        if i == abs(z1) or i == abs(z2):\n            ans = 1\n    if ans == 0:\n        for i in b:\n            count = 0\n            for j in b:\n                if i + j != z1 and i + j != z2:\n                    count += 1\n            c.append(count)\n    if ans == 1:\n        print(1)\n    elif n * 2 in c:\n        print(0)\n    else:\n        print(2)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    f = 0\n    c = 0\n    for i in range(n):\n        if abs(a[i]) == abs(x) or abs(a[i]) == abs(y):\n            f = 1\n            break\n    if f == 1:\n        print(1)\n        continue\n    (s, k) = (0, 0)\n    for i in range(n):\n        (s, k) = (0, 0)\n        s += a[i]\n        for j in range(n):\n            if s + a[j] == x or s + a[j] == y or s - a[j] == x or (s - a[j] == y):\n                k = 1\n                break\n        c += k\n        (s, k) = (0, 0)\n        s -= a[i]\n        for j in range(n):\n            if s + a[j] == x or s + a[j] == y or s - a[j] == x or (s - a[j] == y):\n                k = 1\n                break\n        c += k\n    if c == n * 2:\n        print(2)\n    else:\n        print(0)", "for i in range(int(input())):\n    (n, z1, z2) = map(int, input().split())\n    l = list(map(int, input().split()))\n    f = 0\n\n    def final(a, b):\n        if a == b or -a == b:\n            return True\n        return False\n    for i in range(n):\n        if final(l[i], z1) or final(l[i], z2):\n            f = 1\n            break\n    if f == 1:\n        print('1')\n        continue\n    f = 1\n    for i in range(n):\n        f2 = 0\n        for j in range(n):\n            if (final(l[j], z1 - l[i]) or final(l[j], z2 - l[i])) and (final(l[j], z1 + l[i]) or final(l[j], z2 + l[i])):\n                f2 = 1\n                break\n        if f2 == 0:\n            f = 0\n    if f != 1:\n        print('0')\n    else:\n        print('2')", "def check(s, z1, z2):\n    s1 = [0] * len(s)\n    for i in range(len(s)):\n        s1[i] = -s[i]\n    for i in range(len(s)):\n        f1 = False\n        f2 = False\n        for j in range(len(s)):\n            if s[i] + s[j] == z1 or s[i] - s[j] == z1 or s[i] + s[j] == z2 or (s[i] - s[j] == z2):\n                f1 = True\n            if -s[i] + s[j] == z1 or -s[i] - s[j] == z1 or -s[i] + s[j] == z2 or (-s[i] - s[j] == z2):\n                f2 = True\n        if not f1 or not f2:\n            return False\n    return True\nt = int(input())\nwhile t > 0:\n    s = input().split(' ')\n    n = int(s[0])\n    z1 = int(s[1])\n    z2 = int(s[2])\n    s1 = input().split(' ')\n    for i in range(n):\n        s1[i] = int(s1[i])\n    f = False\n    ans = 0\n    if s1.count(z1) > 0 or s1.count(z2) > 0 or s1.count(-z1) > 0 or (s1.count(-z2) > 0):\n        ans = 1\n    else:\n        if z1 == 0 or z2 == 0:\n            ans = 2\n        if check(s1, z1, z2):\n            ans = 2\n    print(ans)\n    t = t - 1", "for _ in range(int(input())):\n    (n, z1, z2) = map(int, input().split())\n    plays = set(map(lambda x: abs(int(x)), input().strip().split()))\n    res = 2\n    for p in plays:\n        if p == abs(z1) or p == abs(z2):\n            res = 1\n            break\n    if res == 2:\n        for p in plays:\n            if not ((abs(p - z1) in plays or abs(p - z2) in plays) and (abs(p + z1) in plays or abs(p + z2) in plays)):\n                res = 0\n                break\n    print(res)", "def solve(x, y, a):\n    a = [abs(z) for z in a]\n    if x > y:\n        (x, y) = (y, x)\n    win = set()\n    for z in a:\n        win.update([x - z, y - z, x + z, y + z])\n    if 0 in win:\n        return 1\n    if all((z in win for z in a)) and all((-z in win for z in a)):\n        return 2\n    return 0\nimport sys\nf = sys.stdin\nt = int(f.readline())\nfor i in range(t):\n    (n, z1, z2) = map(int, f.readline().split())\n    a = list(map(int, f.readline().split()))\n    q = solve(z1, z2, a)\n    print(q)", "t = int(input())\nfor _ in range(t):\n    (n, z1, z2) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        arr[i] = abs(arr[i])\n    if abs(z1) in arr or abs(z2) in arr:\n        print(1)\n        continue\n    if z1 == 0 or z2 == 0:\n        print(2)\n        continue\n    poss = True\n    for i in arr:\n        if (abs(z1 + i) in arr or abs(z2 + i) in arr) and (abs(z1 - i) in arr or abs(z2 - i) in arr):\n            pass\n        else:\n            poss = False\n            break\n    if poss:\n        print(2)\n        continue\n    print(0)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, z1, z2) = [int(x) for x in input().split()]\n        a = [abs(int(x)) for x in input().split()]\n        a = set(a)\n        if z1 in a or -z1 in a or z2 in a or (-z2 in a):\n            print(1)\n        elif z1 == 0 or z2 == 0:\n            if 0 in a:\n                print(1)\n            else:\n                print(2)\n        else:\n            pivot = False\n            for e in a:\n                if abs(z1 - e) not in a and abs(z2 - e) not in a:\n                    print(0)\n                    break\n                elif abs(z1 + e) not in a and abs(z2 + e) not in a:\n                    print(0)\n                    break\n            else:\n                print(2)\nmain()", "for _ in range(int(input())):\n    (N, Z1, Z2) = [int(x) for x in input().split()]\n    A = [abs(int(x)) for x in input().split()]\n    if any((a == abs(Z1) for a in A)) or any((a == abs(Z2) for a in A)):\n        print(1)\n        continue\n    if Z1 == 0 or Z2 == 0:\n        print(2)\n        continue\n    if Z1 == -Z2:\n        for player1Move in A:\n            neededForZ1 = abs(Z1 - player1Move)\n            neededForZ2 = abs(Z2 - player1Move)\n            if neededForZ1 in A or neededForZ2 in A:\n                continue\n            else:\n                break\n        else:\n            print(2)\n            continue\n    print(0)", "from math import ceil\nt = int(input())\nfor test in range(1, t + 1):\n    (n, z1, z2) = map(int, input().split())\n    a = list(map(int, input().split()))\n    winner = 2\n    tmp = set([z1, z2])\n    for i in a:\n        if i in tmp or -i in tmp:\n            winner = 1\n            break\n    if winner == 1:\n        print(1)\n    else:\n        for i in a:\n            flag = 0\n            for j in a:\n                if i + j in tmp or i - j in tmp:\n                    flag = 1\n                    break\n            if flag == 0:\n                winner = 0\n                break\n        for i in a:\n            flag = 0\n            for j in a:\n                if -i + j in tmp or -i - j in tmp:\n                    flag = 1\n                    break\n            if flag == 0:\n                winner = 0\n                break\n        print(winner)"]