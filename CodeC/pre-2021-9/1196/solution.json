["for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = c = c1 = c2 = c3 = 0\n    for i in range(n):\n        if a[i] == 1:\n            c += 1\n            if i + 1 == c:\n                c1 = 0\n            else:\n                c2 = c2 - c3 + 1 if c2 - c3 + 1 > 0 else 0\n                c1 = i + 1 - c + c2\n            ans = max(ans, c1)\n            c3 = 0\n        else:\n            c3 += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = c = c1 = c2 = c3 = 0\n    for i in range(n):\n        if a[i] == 1:\n            c += 1\n            if i + 1 == c:\n                c1 = 0\n            else:\n                c2 = c2 - c3 + 1 if c2 - c3 + 1 > 0 else 0\n                c1 = i + 1 - c + c2\n            ans = max(ans, c1)\n            c3 = 0\n        else:\n            c3 += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    total_delay = 0\n    delay = 0\n    delay_compensation = 0\n    c = 1\n    ones = 0\n    last_one = 0\n    first_one = -1\n    first_zero = -1\n    for i in range(n):\n        if a[i] == 1:\n            ones += 1\n            last_one = i\n        elif a[i] == 0 and first_zero == -1:\n            first_zero = i\n    first_zero = max(0, first_zero)\n    for i in range(first_zero, last_one + 1):\n        if a[i] == 1:\n            first_one = i\n            break\n    first_one = max(first_one, 0)\n    for i in range(first_one, last_one + 1):\n        if a[i] == 1:\n            total_delay += 1\n        elif total_delay > 0:\n            total_delay -= 1\n    if ones == 0:\n        print('0')\n    elif ones - 1 == last_one:\n        print('0')\n    else:\n        print(last_one - (ones - 1) + total_delay - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    total_delay = 0\n    delay = 0\n    delay_compensation = 0\n    c = 1\n    ones = 0\n    last_one = 0\n    first_one = -1\n    first_zero = -1\n    for i in range(n):\n        if a[i] == 1:\n            ones += 1\n            last_one = i\n        elif a[i] == 0 and first_zero == -1:\n            first_zero = i\n    first_zero = max(0, first_zero)\n    for i in range(first_zero, last_one + 1):\n        if a[i] == 1:\n            first_one = i\n            break\n    first_one = max(first_one, 0)\n    for i in range(first_one, last_one + 1):\n        if a[i] == 1:\n            total_delay += 1\n        elif total_delay > 0:\n            total_delay -= 1\n    if ones == 0:\n        print('0')\n    elif ones - 1 == last_one:\n        print('0')\n    else:\n        print(last_one - (ones - 1) + total_delay - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    total_delay = 0\n    delay = 0\n    delay_compensation = 0\n    c = 1\n    ones = 0\n    last_one = 0\n    first_one = -1\n    first_zero = -1\n    for i in range(n):\n        if a[i] == 1:\n            ones += 1\n            last_one = i\n        elif a[i] == 0 and first_zero == -1:\n            first_zero = i\n    first_zero = max(0, first_zero)\n    for i in range(first_zero, last_one + 1):\n        if a[i] == 1:\n            first_one = i\n            break\n    first_one = max(first_one, 0)\n    for i in range(first_one, last_one + 1):\n        if a[i] == 1:\n            total_delay += 1\n        elif total_delay > 0:\n            total_delay -= 1\n    if ones == 0:\n        print('0')\n    elif ones - 1 == last_one:\n        print('0')\n    else:\n        print(last_one - (ones - 1) + total_delay - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    total_delay = 0\n    delay = 0\n    delay_compensation = 0\n    c = 1\n    ones = 0\n    last_one = 0\n    first_one = -1\n    first_zero = -1\n    for i in range(n):\n        if a[i] == 1:\n            ones += 1\n            last_one = i\n        elif a[i] == 0 and first_zero == -1:\n            first_zero = i\n    first_zero = max(0, first_zero)\n    for i in range(first_zero, last_one + 1):\n        if a[i] == 1:\n            first_one = i\n            break\n    first_one = max(first_one, 0)\n    for i in range(first_one, last_one + 1):\n        if a[i] == 1:\n            total_delay += 1\n        elif total_delay > 0:\n            total_delay -= 1\n    if ones == 0:\n        print('0')\n    elif ones - 1 == last_one:\n        print('0')\n    else:\n        print(last_one - (ones - 1) + total_delay - 1)", "for _ in range(int(input())):\n    N = int(input())\n    A = input().split()\n    counter = 0\n    sum = 0\n    t = 0\n    i = 0\n    while i < N:\n        if A[i] == '0':\n            counter = counter + 1\n            t = 1\n        elif A[i] == '1' and t == 1:\n            if sum < counter:\n                sum = counter\n            else:\n                sum = sum + 1\n        i = i + 1\n    print(sum)", "for _ in range(int(input())):\n    el = int(input())\n    k = input().split()\n    mm = 0\n    gp = []\n    for i in range(el):\n        if k[i] == '1':\n            gp.append(i)\n    ng = len(gp)\n    if ng == len(k):\n        print('0')\n        continue\n    for i in range(len(gp)):\n        ng = ng - 1\n        m = gp[i] - i\n        if m > 0:\n            m += ng\n        if mm < m:\n            mm = m\n    print(mm)", "cases = int(input())\nfor i in range(cases):\n    lngth = int(input())\n    lstinput = input().split(' ')\n    (onecount, resistance) = (0, 0)\n    (last_resistance, last_position) = (0, 0)\n    IsSorted = bool(1)\n    for j in range(lngth):\n        jth_element = int(lstinput[j])\n        if jth_element == 1:\n            last_position = j\n            last_resistance = resistance\n            onecount += 1\n            if j > onecount - 1:\n                IsSorted = 0\n                resistance += 1\n        elif resistance != 0:\n            resistance -= 1\n    if IsSorted:\n        print(0)\n    else:\n        print(last_position - (onecount - 1) + last_resistance)", "GIRL = '1'\nBOY = '0'\n\ndef switches(positions):\n    final_girl_positions = [i for (i, p) in enumerate(positions) if p == GIRL]\n    num_girls = len(final_girl_positions)\n    max_moves = 0\n    if num_girls == len(positions):\n        return max_moves\n    for (i, final_position) in enumerate(final_girl_positions):\n        num_girls -= 1\n        moves = final_position - i\n        if moves:\n            moves += num_girls\n        if moves > max_moves:\n            max_moves = moves\n    return max_moves\n\ndef start():\n    num_test_cases = input()\n    for i in range(int(num_test_cases)):\n        _ = input()\n        positions = input().split()\n        print(switches(positions))\nstart()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    ar = list(map(int, input().split()))\n    (cnt, las, tot) = (0, -1, 0)\n    ans = -1\n    en = n - 1\n    while en >= 0 and ar[en] == 0:\n        tot += 1\n        en -= 1\n    st = 0\n    while st < n and ar[st] == 1:\n        st += 1\n    for i in range(en, st - 1, -1):\n        if ar[i] == 0:\n            las = i\n            tot += 1\n            ans = cnt + n - tot - las\n            cnt += 1\n        else:\n            cnt = max(0, cnt - 1)\n    if ans != -1:\n        print(ans)\n    else:\n        print(0)"]