["def inBounds(index, l, r):\n    if index >= l and index <= r:\n        return True\n    return False\nfor _ in range(int(input())):\n    s = input().strip()\n    l = len(s)\n    if l < 9:\n        print('unlucky')\n        continue\n    count = 0\n    minimum = 10000000000\n    answer = ''\n    for index in range(l - 5 + 1):\n        copyStr = list(s)\n        count = 0\n        if copyStr[index] != 'l':\n            copyStr[index] = 'l'\n            count += 1\n        if copyStr[index + 1] != 'u':\n            copyStr[index + 1] = 'u'\n            count += 1\n        if copyStr[index + 2] != 'c':\n            copyStr[index + 2] = 'c'\n            count += 1\n        if copyStr[index + 3] != 'k':\n            copyStr[index + 3] = 'k'\n            count += 1\n        if copyStr[index + 4] != 'y':\n            copyStr[index + 4] = 'y'\n            count += 1\n        i = 0\n        j = len(copyStr) - 1\n        l = index\n        r = index + 4\n        found = True\n        while i <= j:\n            if copyStr[i] != copyStr[j]:\n                if (i < l or i > r) and (j < l or j > r):\n                    if copyStr[i] < copyStr[j]:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                elif inBounds(i, l, r):\n                    if j < l or j > r:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                elif inBounds(j, l, r):\n                    if i < l or i > r:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                else:\n                    found = False\n                    break\n            i += 1\n            j -= 1\n        if found:\n            if count < minimum:\n                minimum = count\n                answer = ''.join(copyStr)\n            elif minimum == count:\n                string = ''.join(copyStr)\n                answer = min(answer, string)\n    if minimum == 10000000000:\n        print('unlucky')\n    else:\n        print(answer, minimum)", "def inBounds(index, l, r):\n    if index >= l and index <= r:\n        return True\n    return False\nfor _ in range(int(input())):\n    s = input().strip()\n    l = len(s)\n    if l < 9:\n        print('unlucky')\n        continue\n    count = 0\n    minimum = 10000000000\n    answer = ''\n    for index in range(l - 5 + 1):\n        copyStr = list(s)\n        count = 0\n        if copyStr[index] != 'l':\n            copyStr[index] = 'l'\n            count += 1\n        if copyStr[index + 1] != 'u':\n            copyStr[index + 1] = 'u'\n            count += 1\n        if copyStr[index + 2] != 'c':\n            copyStr[index + 2] = 'c'\n            count += 1\n        if copyStr[index + 3] != 'k':\n            copyStr[index + 3] = 'k'\n            count += 1\n        if copyStr[index + 4] != 'y':\n            copyStr[index + 4] = 'y'\n            count += 1\n        i = 0\n        j = len(copyStr) - 1\n        l = index\n        r = index + 4\n        found = True\n        while i <= j:\n            if copyStr[i] != copyStr[j]:\n                if (i < l or i > r) and (j < l or j > r):\n                    if copyStr[i] < copyStr[j]:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                elif inBounds(i, l, r):\n                    if j < l or j > r:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                elif inBounds(j, l, r):\n                    if i < l or i > r:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                else:\n                    found = False\n                    break\n            i += 1\n            j -= 1\n        if found:\n            if count < minimum:\n                minimum = count\n                answer = ''.join(copyStr)\n            elif minimum == count:\n                string = ''.join(copyStr)\n                answer = min(answer, string)\n    if minimum == 10000000000:\n        print('unlucky')\n    else:\n        print(answer, minimum)", "def inBounds(index, l, r):\n    if index >= l and index <= r:\n        return True\n    return False\nfor _ in range(int(input())):\n    s = input().strip()\n    l = len(s)\n    if l < 9:\n        print('unlucky')\n        continue\n    count = 0\n    minimum = 10000000000\n    answer = ''\n    for index in range(l - 5 + 1):\n        copyStr = list(s)\n        count = 0\n        if copyStr[index] != 'l':\n            copyStr[index] = 'l'\n            count += 1\n        if copyStr[index + 1] != 'u':\n            copyStr[index + 1] = 'u'\n            count += 1\n        if copyStr[index + 2] != 'c':\n            copyStr[index + 2] = 'c'\n            count += 1\n        if copyStr[index + 3] != 'k':\n            copyStr[index + 3] = 'k'\n            count += 1\n        if copyStr[index + 4] != 'y':\n            copyStr[index + 4] = 'y'\n            count += 1\n        i = 0\n        j = len(copyStr) - 1\n        l = index\n        r = index + 4\n        found = True\n        while i <= j:\n            if copyStr[i] != copyStr[j]:\n                if (i < l or i > r) and (j < l or j > r):\n                    if copyStr[i] < copyStr[j]:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                elif inBounds(i, l, r):\n                    if j < l or j > r:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                elif inBounds(j, l, r):\n                    if i < l or i > r:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                else:\n                    found = False\n                    break\n            i += 1\n            j -= 1\n        if found:\n            if count < minimum:\n                minimum = count\n                answer = ''.join(copyStr)\n            elif minimum == count:\n                string = ''.join(copyStr)\n                answer = min(answer, string)\n    if minimum == 10000000000:\n        print('unlucky')\n    else:\n        print(answer, minimum)", "def inbOunds(index, l, r):\n    if index >= l and index <= r:\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    l = len(s)\n    count = 0\n    mini = 10000000000\n    ans = ''\n    for index in range(l - 5 + 1):\n        copyStr = list(s)\n        count = 0\n        if copyStr[index] != 'l':\n            copyStr[index] = 'l'\n            count += 1\n        if copyStr[index + 1] != 'u':\n            copyStr[index + 1] = 'u'\n            count += 1\n        if copyStr[index + 2] != 'c':\n            copyStr[index + 2] = 'c'\n            count += 1\n        if copyStr[index + 3] != 'k':\n            copyStr[index + 3] = 'k'\n            count += 1\n        if copyStr[index + 4] != 'y':\n            copyStr[index + 4] = 'y'\n            count += 1\n        i = 0\n        j = len(copyStr) - 1\n        l = index\n        r = index + 4\n        found = True\n        while i <= j:\n            if copyStr[i] != copyStr[j]:\n                if (i < l or i > r) and (j < l or j > r):\n                    if copyStr[i] < copyStr[j]:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                elif inbOunds(i, l, r):\n                    if j < l or j > r:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                elif inbOunds(j, l, r):\n                    if i < l or i > r:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                else:\n                    found = False\n                    break\n            i += 1\n            j -= 1\n        if found:\n            if count < mini:\n                mini = count\n                ans = ''.join(copyStr)\n            elif mini == count:\n                string = ''.join(copyStr)\n                ans = min(ans, string)\n    if mini == 10000000000:\n        print('unlucky')\n    else:\n        print(ans, mini)", "def inbOunds(index, l, r):\n    if index >= l and index <= r:\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    l = len(s)\n    count = 0\n    mini = 10000000000\n    ans = ''\n    for index in range(l - 5 + 1):\n        copyStr = list(s)\n        count = 0\n        if copyStr[index] != 'l':\n            copyStr[index] = 'l'\n            count += 1\n        if copyStr[index + 1] != 'u':\n            copyStr[index + 1] = 'u'\n            count += 1\n        if copyStr[index + 2] != 'c':\n            copyStr[index + 2] = 'c'\n            count += 1\n        if copyStr[index + 3] != 'k':\n            copyStr[index + 3] = 'k'\n            count += 1\n        if copyStr[index + 4] != 'y':\n            copyStr[index + 4] = 'y'\n            count += 1\n        i = 0\n        j = len(copyStr) - 1\n        l = index\n        r = index + 4\n        found = True\n        while i <= j:\n            if copyStr[i] != copyStr[j]:\n                if (i < l or i > r) and (j < l or j > r):\n                    if copyStr[i] < copyStr[j]:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                elif inbOunds(i, l, r):\n                    if j < l or j > r:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                elif inbOunds(j, l, r):\n                    if i < l or i > r:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                else:\n                    found = False\n                    break\n            i += 1\n            j -= 1\n        if found:\n            if count < mini:\n                mini = count\n                ans = ''.join(copyStr)\n            elif mini == count:\n                string = ''.join(copyStr)\n                ans = min(ans, string)\n    if mini == 10000000000:\n        print('unlucky')\n    else:\n        print(ans, mini)", "def inBounds(index, l, r):\n    if index >= l and index <= r:\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    l = len(s)\n    count = 0\n    minimum = 10000000000\n    answer = ''\n    for index in range(l - 5 + 1):\n        copyStr = list(s)\n        count = 0\n        if copyStr[index] != 'l':\n            copyStr[index] = 'l'\n            count += 1\n        if copyStr[index + 1] != 'u':\n            copyStr[index + 1] = 'u'\n            count += 1\n        if copyStr[index + 2] != 'c':\n            copyStr[index + 2] = 'c'\n            count += 1\n        if copyStr[index + 3] != 'k':\n            copyStr[index + 3] = 'k'\n            count += 1\n        if copyStr[index + 4] != 'y':\n            copyStr[index + 4] = 'y'\n            count += 1\n        i = 0\n        j = len(copyStr) - 1\n        l = index\n        r = index + 4\n        found = True\n        while i <= j:\n            if copyStr[i] != copyStr[j]:\n                if (i < l or i > r) and (j < l or j > r):\n                    if copyStr[i] < copyStr[j]:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                elif inBounds(i, l, r):\n                    if j < l or j > r:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                elif inBounds(j, l, r):\n                    if i < l or i > r:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                else:\n                    found = False\n                    break\n            i += 1\n            j -= 1\n        if found:\n            if count < minimum:\n                minimum = count\n                answer = ''.join(copyStr)\n            elif minimum == count:\n                string = ''.join(copyStr)\n                answer = min(answer, string)\n    if minimum == 10000000000:\n        print('unlucky')\n    else:\n        print(answer, minimum)", "def inBounds(index, l, r):\n    if index >= l and index <= r:\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    l = len(s)\n    count = 0\n    minimum = 10000000000\n    answer = ''\n    for index in range(l - 5 + 1):\n        copyStr = list(s)\n        count = 0\n        if copyStr[index] != 'l':\n            copyStr[index] = 'l'\n            count += 1\n        if copyStr[index + 1] != 'u':\n            copyStr[index + 1] = 'u'\n            count += 1\n        if copyStr[index + 2] != 'c':\n            copyStr[index + 2] = 'c'\n            count += 1\n        if copyStr[index + 3] != 'k':\n            copyStr[index + 3] = 'k'\n            count += 1\n        if copyStr[index + 4] != 'y':\n            copyStr[index + 4] = 'y'\n            count += 1\n        i = 0\n        j = len(copyStr) - 1\n        l = index\n        r = index + 4\n        found = True\n        while i <= j:\n            if copyStr[i] != copyStr[j]:\n                if (i < l or i > r) and (j < l or j > r):\n                    if copyStr[i] < copyStr[j]:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                elif inBounds(i, l, r):\n                    if j < l or j > r:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                elif inBounds(j, l, r):\n                    if i < l or i > r:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                else:\n                    found = False\n                    break\n            i += 1\n            j -= 1\n        if found:\n            if count < minimum:\n                minimum = count\n                answer = ''.join(copyStr)\n            elif minimum == count:\n                string = ''.join(copyStr)\n                answer = min(answer, string)\n    if minimum == 10000000000:\n        print('unlucky')\n    else:\n        print(answer, minimum)", "def inBounds(index, l, r):\n    if index >= l and index <= r:\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    l = len(s)\n    count = 0\n    minimum = 10000000000\n    answer = ''\n    for index in range(l - 5 + 1):\n        copyStr = list(s)\n        count = 0\n        if copyStr[index] != 'l':\n            copyStr[index] = 'l'\n            count += 1\n        if copyStr[index + 1] != 'u':\n            copyStr[index + 1] = 'u'\n            count += 1\n        if copyStr[index + 2] != 'c':\n            copyStr[index + 2] = 'c'\n            count += 1\n        if copyStr[index + 3] != 'k':\n            copyStr[index + 3] = 'k'\n            count += 1\n        if copyStr[index + 4] != 'y':\n            copyStr[index + 4] = 'y'\n            count += 1\n        i = 0\n        j = len(copyStr) - 1\n        l = index\n        r = index + 4\n        found = True\n        while i <= j:\n            if copyStr[i] != copyStr[j]:\n                if (i < l or i > r) and (j < l or j > r):\n                    if copyStr[i] < copyStr[j]:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                elif inBounds(i, l, r):\n                    if j < l or j > r:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                elif inBounds(j, l, r):\n                    if i < l or i > r:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                else:\n                    found = False\n                    break\n            i += 1\n            j -= 1\n        if found:\n            if count < minimum:\n                minimum = count\n                answer = ''.join(copyStr)\n            elif minimum == count:\n                string = ''.join(copyStr)\n                answer = min(answer, string)\n    if minimum == 10000000000:\n        print('unlucky')\n    else:\n        print(answer, minimum)", "def inBounds(index, l, r):\n    if index >= l and index <= r:\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    l = len(s)\n    count = 0\n    minimum = 10000000000\n    answer = ''\n    for index in range(l - 5 + 1):\n        copyStr = list(s)\n        count = 0\n        if copyStr[index] != 'l':\n            copyStr[index] = 'l'\n            count += 1\n        if copyStr[index + 1] != 'u':\n            copyStr[index + 1] = 'u'\n            count += 1\n        if copyStr[index + 2] != 'c':\n            copyStr[index + 2] = 'c'\n            count += 1\n        if copyStr[index + 3] != 'k':\n            copyStr[index + 3] = 'k'\n            count += 1\n        if copyStr[index + 4] != 'y':\n            copyStr[index + 4] = 'y'\n            count += 1\n        i = 0\n        j = len(copyStr) - 1\n        l = index\n        r = index + 4\n        found = True\n        while i <= j:\n            if copyStr[i] != copyStr[j]:\n                if (i < l or i > r) and (j < l or j > r):\n                    if copyStr[i] < copyStr[j]:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                elif inBounds(i, l, r):\n                    if j < l or j > r:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                elif inBounds(j, l, r):\n                    if i < l or i > r:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                else:\n                    found = False\n                    break\n            i += 1\n            j -= 1\n        if found:\n            if count < minimum:\n                minimum = count\n                answer = ''.join(copyStr)\n            elif minimum == count:\n                string = ''.join(copyStr)\n                answer = min(answer, string)\n    if minimum == 10000000000:\n        print('unlucky')\n    else:\n        print(answer, minimum)", "def inBounds(index, l, r):\n    if index >= l and index <= r:\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    l = len(s)\n    count = 0\n    minimum = 10000000000\n    answer = ''\n    for index in range(l - 5 + 1):\n        copyStr = list(s)\n        count = 0\n        if copyStr[index] != 'l':\n            copyStr[index] = 'l'\n            count += 1\n        if copyStr[index + 1] != 'u':\n            copyStr[index + 1] = 'u'\n            count += 1\n        if copyStr[index + 2] != 'c':\n            copyStr[index + 2] = 'c'\n            count += 1\n        if copyStr[index + 3] != 'k':\n            copyStr[index + 3] = 'k'\n            count += 1\n        if copyStr[index + 4] != 'y':\n            copyStr[index + 4] = 'y'\n            count += 1\n        i = 0\n        j = len(copyStr) - 1\n        l = index\n        r = index + 4\n        found = True\n        while i <= j:\n            if copyStr[i] != copyStr[j]:\n                if (i < l or i > r) and (j < l or j > r):\n                    if copyStr[i] < copyStr[j]:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                elif inBounds(i, l, r):\n                    if j < l or j > r:\n                        copyStr[j] = copyStr[i]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                elif inBounds(j, l, r):\n                    if i < l or i > r:\n                        copyStr[i] = copyStr[j]\n                        count += 1\n                    else:\n                        found = False\n                        break\n                else:\n                    found = False\n                    break\n            i += 1\n            j -= 1\n        if found:\n            if count < minimum:\n                minimum = count\n                answer = ''.join(copyStr)\n            elif minimum == count:\n                string = ''.join(copyStr)\n                answer = min(answer, string)\n    if minimum == 10000000000:\n        print('unlucky')\n    else:\n        print(answer, minimum)"]