["t = int(input())\nfor i in range(t):\n    q = set()\n    (M, x, y) = map(int, input().split())\n    v = list(map(int, input().split()))\n    for w in v:\n        if w <= x * y:\n            a = {s for s in range(1, w)}\n            b = {s for s in range(w, w + x * y + 1) if s <= 100}\n            q = q.union(a)\n            q = q.union(b)\n        else:\n            e = {s for s in range(w - x * y, w)}\n            d = {s for s in range(w, w + x * y + 1) if s <= 100}\n            q = q.union(d)\n            q = q.union(e)\n    print(100 - len(q))", "def safe_houses(A, B):\n    c = []\n    safeHouses = 0\n    for i in range(len(A)):\n        for k in range(A[i], B[i] + 1):\n            c.append(k)\n    for i in range(1, 101):\n        if i not in c:\n            safeHouses += 1\n    return safeHouses\nT = int(input())\nfor i in range(T):\n    (M, x, y) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    covered = x * y\n    leftl = []\n    rightl = []\n    (left, right) = (0, 0)\n    for i in range(len(arr)):\n        if arr[i] - covered <= 1:\n            left = 1\n            leftl.append(left)\n        elif arr[i] - covered > 1:\n            left = arr[i] - covered\n            leftl.append(left)\n        if arr[i] + covered >= 100:\n            right = 100\n            rightl.append(right)\n        elif arr[i] + covered < 100:\n            right = arr[i] + covered\n            rightl.append(right)\n    print(safe_houses(leftl, rightl))", "def safe_houses(A, B):\n    c = []\n    safeHouses = 0\n    for i in range(len(A)):\n        for k in range(A[i], B[i] + 1):\n            c.append(k)\n    for i in range(1, 101):\n        if i not in c:\n            safeHouses += 1\n    return safeHouses\nT = int(input())\nfor i in range(T):\n    (M, x, y) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    covered = x * y\n    leftl = []\n    rightl = []\n    (left, right) = (0, 0)\n    for i in range(len(arr)):\n        if arr[i] - covered <= 1:\n            left = 1\n            leftl.append(left)\n        elif arr[i] - covered > 1:\n            left = arr[i] - covered\n            leftl.append(left)\n        if arr[i] + covered >= 100:\n            right = 100\n            rightl.append(right)\n        elif arr[i] + covered < 100:\n            right = arr[i] + covered\n            rightl.append(right)\n    print(safe_houses(leftl, rightl))", "for i in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    if l[0] - x * y <= 1:\n        c += 0\n    elif l[0] - x * y > 1:\n        c += l[0] - x * y - 1\n    if l[-1] + x * y >= 100:\n        c += 0\n    elif l[-1] + x * y < 100:\n        c += 100 - (l[-1] + x * y)\n    for i in range(m - 1):\n        if l[i] + x * y < l[i + 1] - x * y:\n            c += l[i + 1] - 2 * x * y - l[i] - 1\n        else:\n            c += 0\n    print(c)", "for i in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    if l[0] - x * y <= 1:\n        c += 0\n    elif l[0] - x * y > 1:\n        c += l[0] - x * y - 1\n    if l[-1] + x * y >= 100:\n        c += 0\n    elif l[-1] + x * y < 100:\n        c += 100 - (l[-1] + x * y)\n    for i in range(m - 1):\n        if l[i] + x * y < l[i + 1] - x * y:\n            c += l[i + 1] - 2 * x * y - l[i] - 1\n        else:\n            c += 0\n    print(c)", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "for _ in range(int(input())):\n    (n, x, y) = list(map(int, input().split()))\n    cops = list(map(int, input().split()))\n    cops = sorted(cops)\n    safe = [1] * 101\n    x *= y\n    for i in cops:\n        if i - x > 0:\n            for i in range(i - x, i + x + 1):\n                if i > 100:\n                    break\n                safe[i] = 0\n        else:\n            for i in range(1, i + x + 1):\n                if i > 100:\n                    break\n                safe[i] = 0\n    print(safe.count(1) - 1)", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "for _ in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    cops_pos = list(map(int, input().split()))\n    n = x * y\n    notsafe = []\n    arr = [i for i in range(1, 101)]\n    setarr = set(arr)\n    for pos in cops_pos:\n        notsafe.extend(range(pos - n, pos + n + 1))\n    ns = list(set(arr) & set(notsafe))\n    if set(arr) - set(ns):\n        print(len(set(arr) - set(ns)))\n    else:\n        print(0)", "for _ in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    cops_pos = list(map(int, input().split()))\n    n = x * y\n    notsafe = []\n    arr = [i for i in range(1, 101)]\n    setarr = set(arr)\n    for pos in cops_pos:\n        notsafe.extend(range(pos - n, pos + n + 1))\n    ns = list(set(arr) & set(notsafe))\n    if set(arr) - set(ns):\n        print(len(set(arr) - set(ns)))\n    else:\n        print(0)", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "for _ in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    cops_pos = list(map(int, input().split()))\n    n = x * y\n    notsafe = []\n    arr = [i for i in range(1, 101)]\n    setarr = set(arr)\n    for pos in cops_pos:\n        notsafe.extend(range(pos - n, pos + n + 1))\n    ns = list(set(arr) & set(notsafe))\n    if set(arr) - set(ns):\n        print(len(set(arr) - set(ns)))\n    else:\n        print(0)", "for i in range(0, int(input())):\n    (m, x, y) = map(int, input().split())\n    l = list(map(int, input().split()))\n    z = x * y\n    l.sort()\n    k = []\n    j = []\n    g = 0\n    for i in range(m):\n        k.append(l[i] - z)\n        j.append(l[i] + z)\n    if k[0] > 0:\n        g = g + k[0] - 1\n    if j[-1] < 100:\n        g = g + 100 - j[-1]\n    for i in range(m - 1):\n        if k[i + 1] - j[i] > 0:\n            g = g + k[i + 1] - j[i] - 1\n    print(g)", "for i in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    k = []\n    j = []\n    g = 0\n    for i in range(m):\n        k.append(l[i] - x * y)\n        j.append(l[i] + x * y)\n    if k[0] > 0:\n        g += k[0] - 1\n    if j[-1] < 100:\n        g += 100 - j[-1]\n    for i in range(m - 1):\n        if k[i + 1] - j[i] > 0:\n            g += k[i + 1] - j[i] - 1\n    print(g)", "for _ in range(int(input())):\n    (M, x) = (lambda i: [i[0], i[1] * i[2]])([int(i) for i in input().split()])\n    lista = [int(a) for a in input().split()]\n    y = set(range(1, 101))\n    for i in lista:\n        y -= set(range(i - x, i + x + 1))\n    print(len(y))", "t = int(input())\nfor _ in range(t):\n    (m, x, y) = list(map(int, input().split(' ')))\n    ml = x * y\n    arr = list(map(int, input().split(' ')))\n    houses = [1] * 100\n    for i in arr:\n        r = i + ml\n        r = r if r <= 100 else 100\n        l = i - ml\n        l = l if l > 1 else 1\n        houses[l - 1:r] = [0] * (r - l + 1)\n    print(sum(houses))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "for i in range(int(input())):\n    l = list(map(int, input().split()))\n    x = l[1] * l[2]\n    n = list(map(int, input().split()))\n    ar = []\n    for a in n:\n        for b in range(a - x, a + x + 1):\n            if b > 0 and b <= 100 and (b not in ar):\n                ar.append(b)\n    print(100 - len(ar))", "try:\n    for _ in range(int(input())):\n        (M, x, y) = map(int, input().split())\n        H = list(map(int, input().split()))\n        H.sort()\n        R = x * y\n        C = 0\n        if H[0] - 1 > R:\n            C += H[0] - 1 - R\n        for i in range(1, len(H)):\n            if H[i] - H[i - 1] > 2 * R:\n                C += H[i] - H[i - 1] - 2 * R - 1\n        if 100 - H[-1] > R:\n            C += 100 - H[-1] - R\n        print(C)\nexcept:\n    pass", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "for _ in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    p = x * y\n    a = list(map(int, input().split()))\n    a.sort()\n    s = []\n    for i in a:\n        for j in range(i - p, i + p + 1):\n            s.append(j)\n    c = 0\n    for k in range(1, 101):\n        if k not in s:\n            c = c + 1\n    print(c)", "t = int(input())\nres = []\nfor i in range(t):\n    (m, x, y) = map(int, input().split())\n    li = list(map(int, input().split()))\n    cvrg = x * y\n    houses = list(range(1, 101))\n    for k in range(m):\n        u = min(li[k] + cvrg, 100)\n        l = max(1, li[k] - cvrg)\n        while l <= u:\n            houses[l - 1] = 0\n            l += 1\n    houses = set(houses)\n    res.append(str(len(houses) - 1))\nprint('\\n'.join(res))", "for i in range(int(input())):\n    l = list(map(int, input().split()))\n    x = l[1] * l[2]\n    n = list(map(int, input().split()))\n    ar = []\n    for a in n:\n        for b in range(a - x, a + x + 1):\n            if b > 0 and b <= 100 and (b not in ar):\n                ar.append(b)\n    print(100 - len(ar))", "t = int(input())\nfor tc in range(t):\n    (m, x, y) = map(int, input().split())\n    s = x * y\n    b = []\n    l = list(map(int, input().split()))\n    for j in l:\n        for j in range(j - s, j + s + 1):\n            if j > 0 and j <= 100 and (j not in b):\n                b.append(j)\n    print(100 - len(b))", "n = int(input())\nfor _ in range(n):\n    (m, x, y) = map(int, input().split())\n    M = list(map(int, input().split()))\n    a = []\n    b = 0\n    for i in range(m):\n        left = M[i] - x * y\n        right = M[i] + x * y\n        if left <= 0:\n            left = 1\n        else:\n            left = left\n        if right > 100:\n            right = 100\n        else:\n            right = right\n        for j in range(left, right + 1):\n            a.append(j)\n    b = len(set(a))\n    if b == 100:\n        print(0)\n    else:\n        print(100 - b)", "tc = int(input())\nfor _ in range(tc):\n    (M, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    dist = x * y\n    houses = 100\n    for i in range(1, 101):\n        max_dist = i + dist\n        min_dist = i - dist\n        if min_dist < 1:\n            min_dist = 1\n        if max_dist > 100:\n            max_dist = 100\n        for j in range(min_dist, max_dist + 1):\n            if j in a:\n                houses -= 1\n                break\n    print(houses)", "tc = int(input())\nfor _ in range(tc):\n    (M, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    dist = x * y\n    houses = 100\n    for i in range(1, 101):\n        max_dist = i + dist\n        min_dist = i - dist\n        if min_dist < 1:\n            min_dist = 1\n        if max_dist > 100:\n            max_dist = 100\n        for j in range(min_dist, max_dist + 1):\n            if j in a:\n                houses -= 1\n                break\n    print(houses)", "T = int(input())\nfor i in range(T):\n    integer = list(map(int, input().split()))\n    house_covered = integer[1] * integer[2]\n    house = list(map(int, input().split()))\n    arr = []\n    for a in house:\n        for b in range(a - house_covered, a + house_covered + 1):\n            if b > 0 and b <= 100 and (b not in arr):\n                arr.append(b)\n    print(100 - len(arr))", "for tc in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    cops = list(map(int, input().split()))\n    cops.sort()\n    dist = x * y\n    (s, e) = (0, 1)\n    count = 0\n    for i in range(m):\n        cops[i] = [cops[i] - dist, cops[i] + dist]\n    for ele in cops:\n        if ele[0] > s:\n            count += ele[0] - s - 1\n        s = ele[1]\n    if s < 100:\n        count += 100 - s\n    print(count)", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for j in range(l1[0]):\n        searched = []\n        searched = [j for j in range(l2[j] - s, l2[j] + s + 1)]\n        total = [j for j in total if j not in searched]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "tc = int(input())\nfor _ in range(tc):\n    (M, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    dist = x * y\n    houses = 100\n    for i in range(1, 101):\n        max_dist = i + dist\n        min_dist = i - dist\n        if min_dist < 1:\n            min_dist = 1\n        if max_dist > 100:\n            max_dist = 100\n        for j in range(min_dist, max_dist + 1):\n            if j in a:\n                houses -= 1\n                break\n    print(houses)", "tc = int(input())\nfor _ in range(tc):\n    (M, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    dist = x * y\n    houses = 100\n    for i in range(1, 101):\n        max_dist = max(1, i + dist)\n        min_dist = min(100, i - dist)\n        for j in range(min_dist, max_dist + 1):\n            if j in a:\n                houses -= 1\n                break\n    print(houses)", "tc = int(input())\nfor _ in range(tc):\n    (M, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    dist = x * y\n    houses = 100\n    for i in range(1, 101):\n        max_dist = i + dist\n        min_dist = i - dist\n        if min_dist < 1:\n            min_dist = 1\n        if max_dist > 100:\n            max_dist = 100\n        for j in range(min_dist, max_dist + 1):\n            if j in a:\n                houses -= 1\n                break\n    print(houses)", "tc = int(input())\nfor _ in range(tc):\n    (M, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    dist = x * y\n    houses = [True] * 100\n    for i in range(1, 101):\n        max_dist = i + dist\n        min_dist = i - dist\n        if min_dist < 1:\n            min_dist = 1\n        if max_dist > 100:\n            max_dist = 100\n        for j in range(min_dist, max_dist + 1):\n            if j in a:\n                houses[i - 1] = False\n                break\n    print(sum(houses))", "t = int(input())\nfor i in range(t):\n    (num, speed, time) = map(int, input().split())\n    houses = map(int, input().split())\n    remaining = set(range(1, 101))\n    for cop in houses:\n        remaining -= set(range(cop - speed * time, cop + speed * time + 1))\n        if not remaining:\n            break\n    print(len(remaining))", "t = int(input())\nfor i in range(t):\n    (m, x, t) = map(int, input().split())\n    cops = list(map(int, input().split()))\n    a = x * t\n    arr = list(bytearray(101))\n    for i in range(m):\n        l = cops[i] - a\n        r = cops[i] + a\n        if l <= 0:\n            l = 1\n        if r >= 100:\n            r = 100\n        for k in range(l, r + 1):\n            arr[k] += 1\n    print(arr.count(0) - 1)", "for i in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    l = list(map(int, input().strip().split(' ')))\n    r = x * y\n    countlist = []\n    for j in range(101):\n        countlist.append(0)\n    for j in range(m):\n        left = l[j] - r\n        right = l[j] + r\n        if left <= 0:\n            left = 1\n        if right >= 100:\n            right = 100\n        for k in range(left, right + 1):\n            countlist[k] += 1\n    print(countlist.count(0) - 1)", "for i in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    l = list(map(int, input().strip().split(' ')))\n    r = x * y\n    countlist = []\n    for j in range(101):\n        countlist.append(0)\n    for j in range(m):\n        left = l[j] - r\n        right = l[j] + r\n        if left <= 0:\n            left = 1\n        if right >= 100:\n            right = 100\n        for k in range(left, right + 1):\n            countlist[k] += 1\n    print(countlist.count(0) - 1)", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "for _ in range(int(input())):\n    (housecop, rate, search) = map(int, input().split())\n    locations = map(int, input().split())\n    remaining = set(range(1, 100 + 1))\n    for cop in locations:\n        remaining -= set(range(cop - rate * search, cop + rate * search + 1))\n        if not remaining:\n            break\n    print(len(remaining))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "T = int(input())\nfor test_case in range(T):\n    (M, x, y) = tuple((int(_) for _ in input().split()))\n    cops = tuple((int(_) for _ in input().split()))\n    remaining_houses = set(range(1, 100 + 1))\n    for c in cops:\n        remaining_houses -= set(range(c - x * y, c + x * y + 1))\n        if not remaining_houses:\n            break\n    print(len(remaining_houses))", "def safe(m, x, y):\n    h = x * y\n    l = set()\n    r = set()\n    for i in m:\n        if i <= h:\n            l = l.union(set(range(1, i)))\n            r = r.union(set(range(i + 1, i + h + 1))) if i + h <= 100 else r.union(set(range(i + 1, 101)))\n        else:\n            l = l.union(set(range(i - h, i)))\n            r = r.union(set(range(i + 1, i + h + 1))) if i + h <= 100 else r.union(set(range(i + 1, 101)))\n    a = l.union(r).union(set(m))\n    res = [x for x in range(1, 101) if x not in a]\n    return len(res)\nfor _ in range(int(input())):\n    (a, x, y) = map(int, input().split())\n    m = list(map(int, input().split()))\n    print(safe(m, x, y))", "t = int(input())\nfor i in range(t):\n    (m, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = x * y\n    h = [i for i in range(1, 101)]\n    for i in range(m):\n        l = []\n        l = [i for i in range(a[i] - s, a[i] + s + 1)]\n        h = [i for i in h if i not in l]\n    print(len(h))", "t = int(input())\nfor _ in range(t):\n    (M, x, y) = [int(x) for x in input().split()]\n    houses = [int(x) - 1 for x in input().split()]\n    mark = [0 for _ in range(100)]\n    low = 0\n    high = 0\n    houses = list(sorted(houses))\n    n = x * y\n    for h in houses:\n        low = max(h - x * y, 0)\n        high = min(h + x * y, 99)\n        for j in range(low, high + 1):\n            mark[j] = 1\n    print(100 - sum(mark))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "t = int(input())\nfor _ in range(t):\n    (M, x, y) = [int(x) for x in input().split()]\n    houses = [int(x) - 1 for x in input().split()]\n    mark = [0 for _ in range(100)]\n    low = 0\n    high = 0\n    houses = list(sorted(houses))\n    n = x * y\n    for h in houses:\n        low = max(h - x * y, 0)\n        high = min(h + x * y, 99)\n        for j in range(low, high + 1):\n            mark[j] = 1\n    print(100 - sum(mark))", "t = int(input())\nfor i in range(t):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = a[1] * a[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(a[0]):\n        count = []\n        count = [i for i in range(b[i] - s, b[i] + s + 1)]\n        total = [i for i in total if i not in count]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "t = int(input())\nfor i in range(t):\n    p = list(map(int, input().strip().split(' ')))\n    m = list(map(int, input().strip().split(' ')))\n    a = []\n    houses = p[1] * p[2]\n    for i in m:\n        x = i + houses\n        y = i - houses\n        if y < 0:\n            y = 1\n        if x > 100:\n            x = 100\n        z = [j for j in range(y, x + 1)]\n        for k in z:\n            if k not in a:\n                a.append(k)\n    c = 0\n    for i in range(1, 101):\n        if i not in a:\n            c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    p = list(map(int, input().strip().split(' ')))\n    m = list(map(int, input().strip().split(' ')))\n    a = []\n    houses = p[1] * p[2]\n    for i in m:\n        x = i + houses\n        y = i - houses\n        if y < 0:\n            y = 1\n        if x > 100:\n            x = 100\n        z = [j for j in range(y, x + 1)]\n        for k in z:\n            if k not in a:\n                a.append(k)\n    c = 0\n    for i in range(1, 101):\n        if i not in a:\n            c += 1\n    print(c)", "x = int(input())\nfor i in range(x):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = a[1] * a[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(a[0]):\n        searched = []\n        searched = [i for i in range(b[i] - s, b[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "x = int(input())\nfor i in range(x):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = a[1] * a[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(a[0]):\n        searched = []\n        searched = [i for i in range(b[i] - s, b[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "for _ in range(int(input())):\n    (M, x, y) = map(int, input().split())\n    coph = [int(x) - 1 for x in input().split()]\n    coph.sort()\n    copi = 0\n    totali = 0\n    trys = 0\n    ans = 0\n    while copi < M and totali < 100:\n        if totali < coph[copi] - x * y:\n            ans += 1\n            totali += 1\n        elif totali > coph[copi] + x * y:\n            copi += 1\n        else:\n            totali += 1\n    print(ans + 100 - totali)", "t = int(input())\nfor i in range(t):\n    (m, x, y) = map(int, input().split())\n    speed = x * y\n    l = list(map(int, input().split()))\n    s = set()\n    for j in range(0, m):\n        num1 = l[j] - speed\n        for k in range(l[j], num1 - 1, -1):\n            if k > 0:\n                s.add(k)\n        num2 = l[j] + speed\n        for k in range(l[j], num2 + 1):\n            if k <= 100:\n                s.add(k)\n    print(100 - len(s))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "for i in range(int(input())):\n    l = list(map(int, input().split()))\n    l1 = list(map(int, input().split()))\n    s = l[1] * l[2]\n    total = [i for i in range(1, 101)]\n    for j in range(l[0]):\n        s1 = []\n        s1 = [i for i in range(l1[j] - s, l1[j] + s + 1)]\n        total = [i for i in total if i not in s1]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "for _ in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ma = x * y\n    houses = [i for i in range(1, 101)]\n    for i in range(m):\n        z = []\n        z = [i for i in range(l[i] - ma, l[i] + ma + 1)]\n        houses = [i for i in houses if i not in z]\n    print(len(houses))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "x = int(input())\nfor v in range(x):\n    (m, s, t) = input().split(' ')\n    (m, s, t) = map(int, (m, s, t))\n    houses = list(map(int, input().split(' ')))\n    can = s * t\n    t = [i for i in range(1, 101)]\n    for k in range(m):\n        searched = [i for i in range(houses[k] - can, houses[k] + can + 1)]\n        t = [i for i in t if i not in searched]\n    print(len(t))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "try:\n    for _ in range(int(input())):\n        (M, x, y) = map(int, input().split())\n        m = list(map(int, input().split()))\n        c = x * y\n        total = [i for i in range(1, 101)]\n        for i in range(M):\n            s = []\n            s = [i for i in range(m[i] - c, m[i] + c + 1)]\n            total = [i for i in total if i not in s]\n        print(len(total))\nexcept:\n    pass", "def main():\n    for _ in range(int(input())):\n        (m, x, y) = map(int, input().split(' '))\n        arr = list(map(int, input().split(' ')))[:m]\n        maxCoverArea = x * y\n        Total = [i for i in range(1, 101)]\n        for x in range(m):\n            CoverArea = []\n            CoverArea = [i for i in range(arr[x] - maxCoverArea, arr[x] + maxCoverArea + 1)]\n            Total = [i for i in Total if i not in CoverArea]\n        print(len(Total))\nmain()", "for _ in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = []\n    for i in l:\n        for j in range(i - z * y, i + z * y + 1):\n            c.append(j)\n    d = []\n    for t in range(1, 101):\n        if t not in c:\n            d.append(t)\n    print(len(d))", "t = int(input())\nfor i in range(0, t):\n    (m, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    f = x * y\n    ans = 100\n    li = []\n    for j in range(1, 101):\n        for k in range(0, m):\n            if j in range(a[k] - f, a[k] + f + 1) and j not in li:\n                ans = ans - 1\n                li.append(j)\n    if ans > 0:\n        print(ans)\n    else:\n        print('0')", "T = int(input())\nfor _ in range(T):\n    (m, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    x1 = 0\n    for i in a:\n        if i - x * y <= 1:\n            x1 = i + x * y\n        elif i - x * y <= x1:\n            x1 = i + x * y\n        else:\n            c += i - x * y - x1 - 1\n            x1 = i + x * y\n    if x1 < 100:\n        c += 100 - x1\n    print(c)", "t = int(input())\nfor i in range(t):\n    room = [0] * 100\n    (a, b, c) = list(map(int, input().split(' ')))\n    arr = list(map(int, input().split(' ')))\n    dist = b * c\n    for j in range(a):\n        n = arr[j] - 1\n        room[n] = 1\n        for k in range(dist):\n            if n + k + 1 < 100:\n                room[n + k + 1] = 1\n            if n - k - 1 > -1:\n                room[n - k - 1] = 1\n    print(room.count(0))", "import sys\nR = lambda : map(int, next(sys.stdin).split())\nT = int(input())\nfor i in range(T):\n    (M, x, y) = R()\n    houses = []\n    for i in range(100):\n        houses.append(0)\n    total = x * y\n    cops = list(R())\n    for i in range(M):\n        if cops[i] - total - 1 < 0:\n            start = 0\n        else:\n            start = cops[i] - total - 1\n        if cops[i] + total - 1 > 99:\n            end = 99\n        else:\n            end = cops[i] + total - 1\n        for j in range(start, end + 1):\n            houses[j] = 1\n    safe = 0\n    for i in range(100):\n        if houses[i] == 0:\n            safe += 1\n    print(safe)", "t = int(input())\nfor z in range(t):\n    (m, x, y) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    houses = x * y\n    li = []\n    for ele in arr:\n        if ele - houses > 0:\n            cover_left = ele - houses\n        else:\n            cover_left = 1\n        if ele + houses <= 100:\n            cover_right = ele + houses\n        else:\n            cover_right = 100\n        li += [i for i in range(cover_left, cover_right + 1)]\n        li = list(set(li))\n    print(100 - len(li))", "a = int(input())\nfor p in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [p for p in range(1, 101)]\n    for p in range(l1[0]):\n        searched = []\n        searched = [p for p in range(l2[p] - s, l2[p] + s + 1)]\n        total = [p for p in total if p not in searched]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "tests = int(input())\nfor i in range(tests):\n    (m, x, y) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    available_arr = [1 for i in range(101)]\n    available_arr[0] = 0\n    for j in arr:\n        right_house = min(100, j + x * y)\n        left_house = max(1, j - x * y) - 1\n        for k in range(right_house, left_house, -1):\n            if not available_arr[k]:\n                break\n            available_arr[k] = 0\n    print(available_arr.count(1))", "tests = int(input())\nfor i in range(tests):\n    (m, x, y) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    available_arr = [1 for i in range(101)]\n    available_arr[0] = 0\n    right = 0\n    for j in arr:\n        right_house = min(100, j + x * y) + 1\n        left_house = max(0, j - x * y) - 1\n        for k in range(max(j, right), right_house):\n            available_arr[k] = 0\n            right = k\n        for k in range(j - 1, left_house, -1):\n            if not available_arr[k]:\n                break\n            available_arr[k] = 0\n    print(available_arr.count(1))", "for i in range(int(input())):\n    (M, x, y) = map(int, input().split())\n    ch = list(map(int, input().split()))\n    arr = [0 for x in range(100)]\n    for cop in ch:\n        left = cop - x * y if cop - x * y > 1 else 1\n        right = cop + x * y if cop + x * y < 100 else 100\n        for j in range(left, right + 1):\n            arr[j - 1] = 1\n    print(arr.count(0))", "tests = int(input())\nfor i in range(tests):\n    (m, x, y) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    available_arr = [1 for i in range(101)]\n    available_arr[0] = 0\n    for j in arr:\n        right_house = min(100, j + x * y) + 1\n        left_house = max(0, j - x * y) - 1\n        for k in range(j, right_house):\n            available_arr[k] = 0\n        for k in range(j, left_house, -1):\n            available_arr[k] = 0\n    print(available_arr.count(1))", "for i in range(int(input())):\n    (M, x, y) = map(int, input().split())\n    ch = list(map(int, input().split()))\n    ch.sort()\n    arr = []\n    cnt = 0\n    for i in range(M):\n        l_count = ch[i] - x * y if ch[i] - x * y > 1 else 1\n        r_count = ch[i] + x * y if ch[i] + x * y < 100 else 100\n        arr.append(l_count)\n        arr.append(r_count)\n    cnt += arr[0] - 1 + 100 - arr[-1]\n    for i in range(1, len(arr) - 2, 2):\n        if arr[i] < arr[i + 1]:\n            cnt += arr[i + 1] - arr[i] - 1\n    print(cnt)", "for i in range(int(input())):\n    (M, x, y) = map(int, input().split())\n    ch = list(map(int, input().split()))\n    ch.sort()\n    arr = []\n    cnt = 0\n    for i in range(M):\n        l_count = ch[i] - x * y if ch[i] - x * y > 1 else 1\n        r_count = ch[i] + x * y if ch[i] + x * y < 100 else 100\n        arr.append(l_count)\n        arr.append(r_count)\n    for i in range(0, len(arr), 2):\n        if i == 0:\n            cnt += arr[i] - 1\n        elif arr[i] > arr[i - 1]:\n            cnt += arr[i] - arr[i - 1] - 1\n        if i == len(arr) - 2:\n            cnt += 100 - arr[i + 1]\n    print(cnt)", "num = int(input())\nfor _ in range(num):\n    lst1 = list(map(int, input().split()))\n    lst2 = list(map(int, input().split()))\n    time = lst1[1] * lst1[2]\n    arr = []\n    lst2.sort()\n    for l in lst2:\n        a = 1\n        b = 100\n        if l > time:\n            a = l - time\n        if l + time < 100:\n            b = l + time\n        arr.append(a)\n        arr.append(b)\n    cnt = 0\n    for i in range(0, len(arr), 2):\n        if i == 0:\n            cnt += arr[i] - 1\n        elif arr[i] > arr[i - 1]:\n            cnt += arr[i] - arr[i - 1] - 1\n        if i == len(arr) - 2:\n            cnt += 100 - arr[i + 1]\n    print(cnt)", "h = int(input())\num = []\nmty = []\nfor iie in range(1, 101):\n    mty.append(iie)\nfor ii in range(0, h):\n    gb = str(input())\n    bv = str(input())\n    hjk = []\n    pp = gb.split(' ')\n    for iit in pp:\n        hjk.append(int(iit))\n    ty = []\n    for tte in bv.split(' '):\n        ty.append(int(tte))\n    oopt = [hjk, ty]\n    um.append(oopt)\nfor iite in um:\n    yew = iite[0][1] * iite[0][2]\n    ppoy = iite[1]\n    tkr = list(mty)\n    for iimr in ppoy:\n        yupt = iimr - yew\n        if yupt <= 0:\n            yupt = 1\n        mplt = iimr + yew\n        if mplt > 100:\n            mplt = 100\n        gk = []\n        for iiew in tkr:\n            if iiew >= yupt and iiew <= mplt:\n                continue\n            else:\n                gk.append(iiew)\n        tkr = list(gk)\n    print(len(tkr))", "a = int(input())\nfor i in range(a):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s = l1[1] * l1[2]\n    ans = 0\n    total = [i for i in range(1, 101)]\n    for i in range(l1[0]):\n        searched = []\n        searched = [i for i in range(l2[i] - s, l2[i] + s + 1)]\n        total = [i for i in total if i not in searched]\n    print(len(total))", "for _ in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    cphs = list(map(int, input().split()))\n    cphs.sort()\n    l = []\n    sum = 0\n    for i in range(m + 1):\n        if i == 0:\n            l.append(cphs[i] - 1)\n        elif i == m:\n            l.append(100 - cphs[i - 1])\n        else:\n            l.append(cphs[i] - cphs[i - 1] - 1)\n    for j in range(m + 1):\n        if j == 0 and l[j] > x * y:\n            sum = sum + (l[j] - x * y)\n        elif j == m and l[j] > x * y:\n            sum += l[j] - x * y\n        elif l[j] > 2 * x * y:\n            sum = sum + (l[j] - 2 * x * y)\n    print(sum)", "for i in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    a = x * y\n    s = [i for i in range(1, 101)]\n    for i in range(m):\n        k = [x for x in range(l[i] - a, l[i] + a + 1)]\n        s = [x for x in s if x not in k]\n    print(len(s))", "for i in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    a = x * y\n    s = [i for i in range(1, 101)]\n    for i in range(m):\n        k = [x for x in range(l[i] - a, l[i] + a + 1)]\n        s = [x for x in s if x not in k]\n    print(len(s))", "for i in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    a = x * y\n    s = [i for i in range(1, 101)]\n    for i in range(m):\n        k = [x for x in range(l[i] - a, l[i] + a + 1)]\n        s = [x for x in s if x not in k]\n    print(len(s))", "for i in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    a = x * y\n    s = [i for i in range(1, 101)]\n    for i in range(m):\n        k = [x for x in range(l[i] - a, l[i] + a + 1)]\n        s = [x for x in s if x not in k]\n    print(len(s))", "for i in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    a = x * y\n    s = [i for i in range(1, 101)]\n    for i in range(m):\n        k = [x for x in range(l[i] - a, l[i] + a + 1)]\n        s = [x for x in s if x not in k]\n    print(len(s))", "for i in range(int(input())):\n    (m, x, y) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    a = x * y\n    s = [i for i in range(1, 101)]\n    for i in range(m):\n        k = [x for x in range(l[i] - a, l[i] + a + 1)]\n        s = [x for x in s if x not in k]\n    print(len(s))", "T = int(input())\nfor _ in range(T):\n    (M, x, y) = [int(x) for x in input().split()]\n    H = [int(x) for x in input().split()]\n    t = x * y\n    H.sort()\n    arr = [1] * 100\n    for i in H:\n        nmin = max(1, i - t)\n        nmax = min(i + t, 100)\n        for j in range(nmin, nmax + 1):\n            arr[j - 1] = 0\n    print(sum(arr))"]