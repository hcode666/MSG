["for case in range(int(input())):\n    s = input()\n    n = len(s) // 2\n    if len(s) == 1:\n        print('NO')\n    elif len(s) % 2 == 0:\n        print('YES' if s[0:n] == s[n:] else 'NO')\n    else:\n        match = True\n        skip = 0\n        for i in range(n):\n            if s[i + skip] != s[i + n + 1]:\n                if skip == 1 or s[i + 1] != s[i + n + 1]:\n                    match = False\n                    break\n                skip = 1\n        if match:\n            print('YES')\n            continue\n        match = True\n        skip = 0\n        for i in range(n):\n            if s[n - 1 - i] != s[2 * n - i - skip]:\n                if skip == 1 or s[n - 1 - i] != s[2 * n - i - 1]:\n                    match = False\n                    break\n                skip = 1\n        if match:\n            print('YES')\n        else:\n            print('NO')", "for case in range(int(input())):\n    s = input()\n    n = len(s) // 2\n    if len(s) == 1:\n        print('NO')\n    elif len(s) % 2 == 0:\n        print('YES' if s[0:n] == s[n:] else 'NO')\n    else:\n        match = True\n        skip = 0\n        for i in range(n):\n            if s[i + skip] != s[i + n + 1]:\n                if skip == 1 or s[i + 1] != s[i + n + 1]:\n                    match = False\n                    break\n                skip = 1\n        if match:\n            print('YES')\n            continue\n        match = True\n        skip = 0\n        for i in range(n):\n            if s[n - 1 - i] != s[2 * n - i - skip]:\n                if skip == 1 or s[n - 1 - i] != s[2 * n - i - 1]:\n                    match = False\n                    break\n                skip = 1\n        if match:\n            print('YES')\n        else:\n            print('NO')", "import sys\nfrom collections import Counter, deque\nfrom math import gcd, sqrt, ceil\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(sys.stdin.readline())\n\ndef ip():\n    return input()\n\ndef sub(x, y):\n    i = 0\n    for c in x:\n        while i < len(y) and y[i] != c:\n            i += 1\n        if i == len(y):\n            return 0\n        i += 1\n    return 1\nfor tastcas in range(int(input())):\n    a = ip()\n    n = len(a)\n    m = n // 2\n    mm = (n + 1) // 2\n    if n < 2:\n        print('NO')\n    elif sub(a[:m], a[m:]) or sub(a[mm:], a[:mm]):\n        print('YES')\n    else:\n        print('NO')", "def check(x, y):\n    i = 0\n    j = 0\n    if len(x) < len(y):\n        (x, y) = (y, x)\n    pos = len(x) - 1\n    while i < len(x) and j < len(y):\n        if x[i] == y[j]:\n            i += 1\n            j += 1\n        else:\n            pos = i\n            break\n    del x[pos]\n    if x == y:\n        return True\n    return False\nt = int(input())\nwhile t:\n    t -= 1\n    a = list(input())\n    n = len(a)\n    if n % 2 == 0:\n        if a[:n // 2] == a[n // 2:]:\n            print('YES')\n        else:\n            print('NO')\n    elif n > 1 and (check(a[:n // 2], a[n // 2:]) or check(a[(n + 1) // 2:], a[:(n + 1) // 2])):\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log2, ceil\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom bisect import insort\nfrom collections import Counter\nfrom collections import deque\nfrom heapq import heappush, heappop, heapify\nfrom itertools import permutations, combinations\nfrom itertools import accumulate as ac\nfrom random import randint as ri, shuffle\nmod = int(1000000000.0) + 7\nip = lambda : int(stdin.readline())\ninp = lambda : map(int, stdin.readline().split())\nips = lambda : stdin.readline().rstrip()\nout = lambda x: stdout.write(str(x) + '\\n')\n\ndef check(x, y):\n    i = 0\n    j = 0\n    if len(x) < len(y):\n        (x, y) = (y, x)\n    pos = len(x) - 1\n    while i < len(x) and j < len(y):\n        if x[i] == y[j]:\n            i += 1\n            j += 1\n        else:\n            pos = i\n            break\n    del x[pos]\n    if x == y:\n        return True\n    return False\nt = int(input())\nwhile t:\n    t -= 1\n    a = list(input())\n    n = len(a)\n    if n % 2 == 0:\n        if a[:n // 2] == a[n // 2:]:\n            print('YES')\n        else:\n            print('NO')\n    elif n > 1 and (check(a[:n // 2], a[n // 2:]) or check(a[(n + 1) // 2:], a[:(n + 1) // 2])):\n        print('YES')\n    else:\n        print('NO')", "def check_equal(a, b):\n    index = 0\n    for i in a:\n        while index < len(b) and i != b[index]:\n            index += 1\n        if index >= len(b):\n            return False\n        index += 1\n    return True\n\ndef Dob_String(n):\n    size = len(n)\n    midpoint = size // 2\n    if check_equal(n[0:midpoint], n[midpoint:size]):\n        return 'YES'\n    elif size % 2 != 0 and check_equal(n[midpoint + 1:size], n[0:midpoint + 1]):\n        return 'YES'\n    else:\n        return 'NO'\nT = int(input())\nfor _ in range(T):\n    n = input()\n    if len(n) > 1:\n        print(Dob_String(n))\n    else:\n        print('NO')", "def is_subseq(x, y):\n    i = 0\n    for c in x:\n        while i < len(y) and y[i] != c:\n            i += 1\n        if i == len(y):\n            return False\n        i += 1\n    return True\nt = int(input())\nwhile t:\n    t -= 1\n    a = input()\n    n = len(a)\n    if n > 1 and (is_subseq(a[:n // 2], a[n // 2:]) or is_subseq(a[(n + 1) // 2:], a[:(n + 1) // 2])):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    if len(s) % 2 == 0:\n        ok = True\n        for i in range(len(s) // 2):\n            if s[i] != s[i + len(s) // 2]:\n                ok = False\n                break\n        if ok:\n            print('YES')\n        else:\n            print('NO')\n    elif len(s) == 1:\n        print('NO')\n    else:\n        idx1 = 0\n        idx2 = len(s) // 2\n        ok = False\n        while idx1 < len(s) // 2 and idx2 < len(s):\n            if s[idx1] != s[idx2]:\n                idx2 += 1\n            else:\n                idx1 += 1\n                idx2 += 1\n        if idx1 == len(s) // 2:\n            ok = ok or True\n        idx1 = len(s) // 2 + 1\n        idx2 = 0\n        while idx1 < len(s) and idx2 <= len(s) // 2:\n            if s[idx1] != s[idx2]:\n                idx2 += 1\n            else:\n                idx1 += 1\n                idx2 += 1\n        if idx1 == len(s):\n            ok = ok or True\n        if ok:\n            print('YES')\n        else:\n            print('NO')", "import math\nno_of_test_cases = int(input())\n\ndef is_subsequence(s1, s2):\n    start1 = 0\n    start2 = 0\n    len1 = len(s1)\n    len2 = len(s2)\n    while start2 < len2 and start1 < len1:\n        if s2[start2] == s1[start1]:\n            start1 += 1\n        start2 += 1\n    return start1 == len1\n\ndef is_double_string(s):\n    strLen = len(s)\n    if strLen == 1:\n        return 'NO'\n    if strLen % 2 == 0:\n        mid = math.floor(strLen / 2)\n        return 'YES' if s[0:mid] == s[mid:strLen] else 'NO'\n    else:\n        start = 0\n        mid = math.floor(strLen / 2)\n        end = len(s)\n        if is_subsequence(s[0:mid], s[mid:end]) or is_subsequence(s[mid + 1:end], s[0:mid + 1]):\n            return 'YES'\n        return 'NO'\nfor caseNo in range(1, no_of_test_cases + 1):\n    s = input()\n    print(is_double_string(s))", "import sys\nn = int(input())\nfor i in range(n):\n    s = input()\n    m = len(s)\n    if m == 1:\n        sys.stdout.write('NO\\n')\n    elif m % 2 != 0:\n        i = 0\n        j = int(m / 2) + 1\n        flag = False\n        Flag = True\n        while j < m:\n            if s[i] != s[j]:\n                if not flag:\n                    flag = True\n                    i += 1\n                else:\n                    Flag = False\n                    break\n            else:\n                i += 1\n                j += 1\n        if not Flag:\n            i = 0\n            j = int(m / 2)\n            flag = False\n            Flag = True\n            while j < m:\n                if s[i] != s[j]:\n                    if not flag:\n                        flag = True\n                        j += 1\n                    else:\n                        Flag = False\n                        break\n                else:\n                    i += 1\n                    j += 1\n            if Flag:\n                sys.stdout.write('YES\\n')\n            else:\n                sys.stdout.write('NO\\n')\n        else:\n            sys.stdout.write('YES\\n')\n    elif s[:int(m / 2)] == s[int(m / 2):]:\n        sys.stdout.write('YES\\n')\n    else:\n        sys.stdout.write('NO\\n')", "t = int(input())\nwhile t > 0:\n    s = input()\n    n = len(s)\n    f = 0\n    if n == 1:\n        f = 0\n    elif len(s) % 2 == 0:\n        if s[0:n // 2] == s[n // 2:]:\n            f = 1\n    else:\n        l = (n + 1) // 2\n        for i in range(l):\n            if i == l - 1:\n                a = s[0:i] + s[i + 1:len(s)]\n                h = len(a) // 2\n                if a[0:h] == a[h:len(a)]:\n                    f = 1\n                    break\n                else:\n                    f = 0\n                    break\n            if s[i] == s[l + i]:\n                pass\n            else:\n                a = s[0:i] + s[i + 1:len(s)]\n                if a[0:len(a) // 2] == a[len(a) // 2:len(a)]:\n                    f = 1\n                    break\n                else:\n                    a = s[0:l + i] + s[l + 1 + i:len(s)]\n                    if a[0:len(a) // 2] == a[len(a) // 2:len(a)]:\n                        f = 1\n                        break\n    if f == 0:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "import sys\nn = int(input())\nfor i in range(n):\n    s = input()\n    m = len(s)\n    if m == 1:\n        sys.stdout.write('NO\\n')\n    elif m % 2 != 0:\n        i = 0\n        j = int(m / 2) + 1\n        flag = False\n        Flag = True\n        while j < m:\n            if s[i] != s[j]:\n                if not flag:\n                    flag = True\n                    i += 1\n                else:\n                    Flag = False\n                    break\n            else:\n                i += 1\n                j += 1\n        if not Flag:\n            i = 0\n            j = int(m / 2)\n            flag = False\n            Flag = True\n            while j < m:\n                if s[i] != s[j]:\n                    if not flag:\n                        flag = True\n                        j += 1\n                    else:\n                        Flag = False\n                        break\n                else:\n                    i += 1\n                    j += 1\n            if Flag:\n                sys.stdout.write('YES\\n')\n            else:\n                sys.stdout.write('NO\\n')\n        else:\n            sys.stdout.write('YES\\n')\n    elif s[:int(m / 2)] == s[int(m / 2):]:\n        sys.stdout.write('YES\\n')\n    else:\n        sys.stdout.write('NO\\n')", "t = int(input())\nfor i in range(t):\n    s = input()\n    if len(s) == 0 or len(s) == 1:\n        print('NO')\n    else:\n        if len(s) % 2 == 0:\n            flag = False\n            half = int(len(s) / 2)\n            if s[0:half] == s[half:len(s)]:\n                flag = True\n            else:\n                flag = False\n        else:\n            flag = False\n            l = int((len(s) + 1) / 2)\n            news = s\n            for j in range(l):\n                if j == l - 1:\n                    news = s[0:j] + s[j + 1:len(s)]\n                    half = int(len(news) / 2)\n                    if news[0:half] == news[half:len(news)]:\n                        flag = True\n                        break\n                    else:\n                        flag = False\n                        break\n                if s[j] == s[l + j]:\n                    pass\n                else:\n                    news = s[0:j] + s[j + 1:len(s)]\n                    if news[0:int(len(news) / 2)] == news[int(len(news) / 2):len(news)]:\n                        flag = True\n                        break\n                    else:\n                        news = s[0:l + j] + s[l + 1 + j:len(s)]\n                        if news[0:int(len(news) / 2)] == news[int(len(news) / 2):len(news)]:\n                            flag = True\n                            break\n        if flag:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    s = input()\n    if len(s) == 0 or len(s) == 1:\n        print('NO')\n    else:\n        if len(s) % 2 == 0:\n            flag = False\n            half = int(len(s) / 2)\n            if s[0:half] == s[half:len(s)]:\n                flag = True\n            else:\n                flag = False\n        else:\n            flag = False\n            l = int((len(s) + 1) / 2)\n            news = s\n            for j in range(l):\n                if j == l - 1:\n                    news = s[0:j] + s[j + 1:len(s)]\n                    half = int(len(news) / 2)\n                    if news[0:half] == news[half:len(news)]:\n                        flag = True\n                        break\n                    else:\n                        flag = False\n                        break\n                if s[j] == s[l + j]:\n                    pass\n                else:\n                    news = s[0:j] + s[j + 1:len(s)]\n                    if news[0:int(len(news) / 2)] == news[int(len(news) / 2):len(news)]:\n                        flag = True\n                        break\n                    else:\n                        news = s[0:l + j] + s[l + 1 + j:len(s)]\n                        if news[0:int(len(news) / 2)] == news[int(len(news) / 2):len(news)]:\n                            flag = True\n                            break\n        if flag:\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\n\ndef is_subseq(s1, s2):\n    m = len(s1)\n    n = len(s2)\n    i = 0\n    c = 0\n    j = 0\n    while i < m and j < n:\n        if s1[i] == s2[j]:\n            i += 1\n            j += 1\n            c += 1\n        else:\n            j += 1\n    return c == m\n\ndef is_good(s):\n    n = len(s)\n    return s[0:n // 2] == s[n // 2:]\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    if len(s) == 1:\n        print('NO')\n        continue\n    if n & 1 == 0:\n        if s[0:n // 2] == s[n // 2:]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        h = n // 2\n        if is_subseq(s[0:h], s[h:]) or is_subseq(s[h + 1:], s[0:h + 1]) or is_good(s[0:n // 2] + s[n // 2 + 1:]):\n            print('YES')\n        else:\n            print('NO')", "def offbyone(plus, ref):\n    lp = len(plus)\n    if lp == 2:\n        return ref == plus[0] or ref == plus[1]\n    sm = lp // 2\n    if plus[:sm] == ref[:sm]:\n        return offbyone(plus[sm:], ref[sm:])\n    elif plus[sm + 1:] == ref[sm:]:\n        return offbyone(plus[:sm + 1], ref[:sm])\n    else:\n        return False\n\ndef specialname(z):\n    yes = 'YES'\n    no = 'NO'\n    lz = len(z)\n    if lz == 1:\n        return no\n    hl = lz // 2\n    if lz % 2 == 0:\n        if z[:hl] == z[hl:]:\n            return yes\n        else:\n            return no\n    elif offbyone(z[:hl + 1], z[hl + 1:]) or offbyone(z[hl:], z[:hl]):\n        return yes\n    else:\n        return no\nfor _ in range(int(input())):\n    print(specialname(input().strip()))", "def specialname(z):\n    yes = 'YES'\n    no = 'NO'\n    lz = len(z)\n    if lz == 1:\n        return no\n    hl = lz // 2\n    if lz % 2 == 0:\n        if z[:hl] == z[hl:]:\n            return yes\n        else:\n            return no\n    else:\n        hist = dict()\n        for c in z:\n            if c in hist:\n                hist[c] += 1\n            else:\n                hist[c] = 1\n        if len(hist) == 1:\n            return yes\n        oddc = ''\n        for (c, f) in hist.items():\n            if f % 2 == 1:\n                if oddc != '':\n                    return no\n                else:\n                    oddc = c\n        w = z.replace(oddc, '')\n        if w[:len(w) // 2] != w[len(w) // 2:]:\n            return no\n        pos = -1\n        rc = hist[oddc]\n        while rc > 0:\n            pos = z.find(oddc, pos + 1)\n            w = z[:pos] + z[pos + 1:]\n            if w[:hl] == w[hl:]:\n                return yes\n            while z[pos] == oddc:\n                rc -= 1\n                if rc == 0:\n                    return no\n                pos += 1\nfor _ in range(int(input())):\n    print(specialname(input().strip()))", "def specialname(z):\n    yes = 'YES'\n    no = 'NO'\n    lz = len(z)\n    if lz == 1:\n        return no\n    hl = lz // 2\n    if lz % 2 == 0:\n        if z[:hl] == z[hl:]:\n            return yes\n        else:\n            return no\n    else:\n        hist = dict()\n        for c in z:\n            if c in hist:\n                hist[c] += 1\n            else:\n                hist[c] = 1\n        oddc = ''\n        for (c, f) in hist.items():\n            if f % 2 == 1:\n                if oddc != '':\n                    return no\n                else:\n                    oddc = c\n        pos = -1\n        for _ in range(hist[oddc]):\n            pos = z.find(oddc, pos + 1)\n            w = z[:pos] + z[pos + 1:]\n            if w[:hl] == w[hl:]:\n                return yes\n        return no\nfor _ in range(int(input())):\n    print(specialname(input().strip()))", "def isdoub(s):\n    if len(s) == 1:\n        return 'NO'\n    if len(s) % 2 == 0:\n        if s[0:len(s) // 2] == s[len(s) // 2:]:\n            return 'YES'\n        return 'NO'\n    for _ in range(2):\n        u = s[0:len(s) // 2]\n        v = s[len(s) // 2:]\n        for i in range(len(v)):\n            if i >= len(u) or u[i] != v[i]:\n                v = v[:i] + v[i + 1:]\n                break\n        if u == v:\n            return 'YES'\n        s = ''.join(reversed(s))\n    return 'NO'\nfor _ in range(int(input())):\n    print(isdoub(input()))", "import math\n\ndef isSubSequence(a, b):\n    ans = 'YES'\n    l1 = len(a)\n    l2 = len(b)\n    count = 0\n    i = 0\n    j = 0\n    while i < l1 and j < l2:\n        if a[i] == b[j]:\n            i += 1\n            j += 1\n        else:\n            count += 1\n            j += 1\n    if count > 1:\n        ans = 'NO'\n    return ans\n\ndef doubleString(st):\n    length = len(st)\n    ans = 'NO'\n    if length > 1:\n        s1 = 0\n        s2 = math.ceil(length / 2)\n        st1 = st[:length - s2]\n        st2 = st[s2:]\n        if length % 2 == 0:\n            if st1 == st2:\n                ans = 'YES'\n        elif isSubSequence(st1, st[s2 - 1] + st2) == 'YES' or isSubSequence(st2, st1 + st[s2 - 1]) == 'YES':\n            ans = 'YES'\n    return ans\nD = int(input())\nfor i in range(D):\n    st = input()\n    print(doubleString(st))", "def is_subsequence(A, B):\n    i = 0\n    j = 0\n    while i < len(A) and j < len(B):\n        if B[j] == A[i]:\n            i += 1\n        j += 1\n    return i == len(A)\n\ndef is_dish_special(S):\n    len_over_2 = len(S) // 2\n    if len(S) % 2 == 0:\n        return is_subsequence(S[0:len_over_2], S[len_over_2:])\n    else:\n        return is_subsequence(S[0:len_over_2], S[len_over_2:]) or is_subsequence(S[len_over_2 + 1:], S[0:len_over_2 + 1])\nD = int(input())\noutput = []\nfor d in range(D):\n    S = input().strip()\n    if len(S) == 1:\n        output.append('NO')\n    elif is_dish_special(S):\n        output.append('YES')\n    else:\n        output.append('NO')\nprint('\\n'.join(output))", "def is_subsequence(A, B):\n    i = 0\n    j = 0\n    while i < len(A) and j < len(B):\n        if B[j] == A[i]:\n            i += 1\n        j += 1\n    return i == len(A)\n\ndef is_dish_special(S):\n    len_over_2 = len(S) // 2\n    if len(S) % 2 == 0:\n        return is_subsequence(S[0:len_over_2], S[len_over_2:])\n    else:\n        return is_subsequence(S[0:len_over_2], S[len_over_2:]) or is_subsequence(S[len_over_2 + 1:], S[0:len_over_2 + 1])\nD = int(input())\nfor d in range(D):\n    S = input().strip()\n    if len(S) == 1:\n        print('NO')\n    elif is_dish_special(S):\n        print('YES')\n    else:\n        print('NO')", "def is_subsequence(a, lstart, lend, rstart, rend):\n    mismatch = 0\n    i = lstart\n    j = rstart\n    while i <= lend:\n        if a[i] != a[j]:\n            mismatch += 1\n            j += 1\n        else:\n            i += 1\n            j += 1\n        if mismatch > 1:\n            return False\n    return True\nfor t in range(int(input())):\n    a = input()\n    n = len(a)\n    if len(a) == 1:\n        print('NO')\n    elif len(a) % 2 == 0:\n        if a[0:n // 2] == a[n // 2:n]:\n            print('YES')\n        else:\n            print('NO')\n    elif len(a) % 2 != 0:\n        if is_subsequence(a, 0, n // 2 - 1, n // 2, n - 1) + is_subsequence(a, n // 2 + 1, n - 1, 0, n // 2):\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor ti in range(t):\n    s = input().strip()\n    l = len(s)\n    if l == 1:\n        print('NO')\n    elif l % 2 == 0:\n        if s[:l // 2] == s[l // 2:]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        special = False\n        x = 0\n        for c in s:\n            x = x ^ ord(c)\n        c = chr(x)\n        if c in s:\n            k = (l - 1) // 2\n            n = s.count(c)\n            i = 0\n            while (n > 0) & (not special):\n                i = s.find(c, i)\n                news = s[:i] + s[i + 1:]\n                if news[:k] == news[k:]:\n                    special = True\n                    break\n                n = n - 1\n                i = i + 1\n        if special:\n            print('YES')\n        else:\n            print('NO')", "def r(s, b):\n    (n, m) = (len(s), 0)\n    if n == 1:\n        return False\n    (i, j, f) = (0, n // 2 + b, False)\n    while m < n // 2:\n        if s[i] != s[j]:\n            if f:\n                return False\n            else:\n                f = True\n                if b:\n                    i += 1\n                else:\n                    j += 1\n        else:\n            i += 1\n            j += 1\n            m += 1\n    return True\n\ndef sp(s):\n    n = len(s)\n    if n % 2 == 0:\n        return all((s[i] == s[n // 2 + i] for i in range(n // 2)))\n    else:\n        return r(s, True) or r(s, False)\nfor d in range(int(input())):\n    print('YES' if sp(input()) else 'NO')", "def check(a, b):\n    p = 0\n    a = list(a)\n    b = list(b)\n    for i in a:\n        if b[p] == i:\n            p += 1\n        if p == len(b):\n            break\n    if p == len(b):\n        return True\n    return False\nfor t in range(int(input())):\n    s = str(input())\n    l = len(s)\n    if l == 1:\n        print('NO')\n    elif l % 2 != 0:\n        s1a = s[0:l // 2]\n        s1b = s[l // 2:l]\n        s2a = s[0:l // 2 + 1]\n        s2b = s[l // 2 + 1:l]\n        if check(s1b, s1a) or check(s2a, s2b):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        s1 = s[0:l // 2]\n        s2 = s[l // 2:l]\n        if s1 == s2:\n            print('YES')\n        else:\n            print('NO')", "def fnd(s, ch):\n    a = []\n    for i in range(len(s)):\n        if ch == s[i]:\n            a += [i]\n    return a\nt = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    if len(s) == 1:\n        print('NO')\n    elif n % 2 == 0:\n        if s[0:n // 2] == s[n // 2:n]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        d = [0] * 26\n        for i in range(n):\n            d[ord(s[i]) - 97] += 1\n        f = 1\n        p = 0\n        k = [0] * 2\n        x = 0\n        for i in range(26):\n            if d[i] % 2 != 0:\n                p += 1\n                k[x] = i\n                x += 1\n            if p > 1:\n                f = 0\n                break\n        if f == 0:\n            print('NO')\n        elif s[0:n // 2] == s[n // 2:n]:\n            print('YES')\n        else:\n            ch1 = chr(k[0] + 97)\n            pos = fnd(s, ch1)\n            m = 0\n            for i in range(len(pos)):\n                t = s[0:pos[i]] + s[pos[i] + 1:n]\n                if t[0:n // 2] == t[n // 2:n]:\n                    m = 1\n                    break\n            if m:\n                print('YES')\n            else:\n                print('NO')", "for _ in range(int(input())):\n    s = input().strip()\n    l = len(s)\n    (c, cc) = (0, 0)\n    lbt = len(s) // 2\n    s1 = s[:lbt]\n    s2 = s[lbt:]\n    ans = 'YES'\n    if l == 1:\n        ans = 'NO'\n    elif l % 2 == 0:\n        if s[:lbt] == s[lbt:]:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    elif ans != 'NO':\n        (i, j) = (0, lbt + 1)\n        c = 0\n        while i < lbt + 1 and j < l:\n            if s[i] == s[j]:\n                c += 1\n                i += 1\n                j += 1\n            else:\n                i += 1\n                if i < lbt + 1 and j < l and (s[i] == s[j]):\n                    c += 1\n                    i += 1\n                    j += 1\n                else:\n                    break\n        if c != lbt:\n            (c, i, j) = (0, 0, lbt)\n            while i < lbt and j < l:\n                if s[i] == s[j]:\n                    c += 1\n                    i += 1\n                    j += 1\n                else:\n                    j += 1\n                    if i < lbt and j < l and (s[i] == s[j]):\n                        c += 1\n                        i += 1\n                        j += 1\n                    else:\n                        break\n        if c == lbt:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    print(ans)", "q = int(input())\nfor _ in range(0, q):\n    s = input()\n    if len(s) == 1:\n        print('NO')\n    elif len(s) % 2 == 0:\n        t = len(s) // 2\n        n = len(s)\n        if s[0:t] == s[t:n]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        n = int(len(s) // 2)\n        l = len(s)\n        flag = False\n        s1 = s[0:n]\n        s2 = s[n:l]\n        s3 = s[0:n + 1]\n        s4 = s[n + 1:l]\n        j = 0\n        count = 0\n        i = 0\n        while i < n:\n            if not s1[i] == s2[j]:\n                j = j + 1\n                count += 1\n                if count > 1:\n                    break\n            else:\n                j += 1\n                i += 1\n                if count > 1:\n                    break\n        if count >= 2:\n            j = 0\n            count = 0\n            i = 0\n            while j < n:\n                if not s3[i] == s4[j]:\n                    i = i + 1\n                    count += 1\n                    if count > 1:\n                        break\n                else:\n                    i = i + 1\n                    j = j + 1\n                    if count > 1:\n                        break\n        if count >= 2:\n            print('NO')\n        else:\n            print('YES')", "test = int(input())\nfor i in range(test):\n    chs = input()\n    lt = len(chs)\n    if lt == 1:\n        print('NO')\n    elif lt % 2 == 0:\n        if chs[:lt // 2] == chs[lt // 2:]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        d1 = 0\n        d2 = 0\n        diction = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        for k in range(lt):\n            diction[ord(chs[k]) - 97] += 1\n        for k in range(26):\n            if diction[k] % 2 != 0:\n                d2 = k + 97\n                break\n        for k in range(lt):\n            if d2 == ord(chs[k]):\n                if k == 0:\n                    aux = chs[k + 1:]\n                elif k == lt - 1:\n                    aux = chs[:k]\n                else:\n                    aux = chs[:k] + chs[k + 1:]\n                if aux[:(lt - 1) // 2] == aux[(lt - 1) // 2:]:\n                    print('YES')\n                    d1 = 1\n                    break\n        if d1 != 1:\n            print('NO')", "import collections\nfor _ in range(int(input())):\n    s = input().strip()\n    l = len(s)\n    (c, cc) = (0, 0)\n    lbt = len(s) // 2\n    s1 = s[:lbt]\n    s2 = s[lbt:]\n    ans = 'YES'\n    if l == 1:\n        ans = 'NO'\n    elif l % 2 == 0:\n        if s[:lbt] == s[lbt:]:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    else:\n        letters = dict(collections.Counter(s))\n        for (k, v) in letters.items():\n            if v % 2 != 0:\n                cc += 1\n                if cc > 1:\n                    ans = 'NO'\n                    break\n        if ans != 'NO':\n            (i, j) = (0, lbt + 1)\n            c = 0\n            while i < lbt + 1 and j < l:\n                if s[i] == s[j]:\n                    c += 1\n                    i += 1\n                    j += 1\n                else:\n                    i += 1\n                    if i < lbt + 1 and j < l and (s[i] == s[j]):\n                        c += 1\n                        i += 1\n                        j += 1\n                    else:\n                        break\n            if c != lbt:\n                (c, i, j) = (0, 0, lbt)\n                while i < lbt and j < l:\n                    if s[i] == s[j]:\n                        c += 1\n                        i += 1\n                        j += 1\n                    else:\n                        j += 1\n                        if i < lbt and j < l and (s[i] == s[j]):\n                            c += 1\n                            i += 1\n                            j += 1\n                        else:\n                            break\n            if c == lbt:\n                ans = 'YES'\n            else:\n                ans = 'NO'\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = 'NO'\n    if len(s) == 1:\n        ans = 'NO'\n    elif n % 2 == 0:\n        if s[:n // 2] == s[n // 2:]:\n            ans = 'YES'\n    else:\n        s1 = s[:n // 2]\n        s2 = s[n // 2:]\n        index = n // 2\n        for i in range(n // 2):\n            if s1[i] != s2[i]:\n                index = i\n                break\n        if s1 == s2[:index] + s2[index + 1:]:\n            ans = 'YES'\n        else:\n            s1 = s[:n // 2 + 1]\n            s2 = s[n // 2 + 1:]\n            index = n // 2\n            for i in range(n // 2):\n                if s1[i] != s2[i]:\n                    index = i\n                    break\n            if s2 == s1[:index] + s1[index + 1:]:\n                ans = 'YES'\n    print(ans)", "case = int(input())\nfor i in range(case):\n    st = input()\n    x = len(st)\n    if x == 1:\n        print('NO')\n    elif x % 2 == 0:\n        if st[:x // 2] == st[x // 2:]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        top = 0\n        to = 0\n        l = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        for j in range(x):\n            l[ord(st[j]) - 97] += 1\n        for j in range(26):\n            if l[j] % 2 != 0:\n                to = j + 97\n                break\n        for j in range(x):\n            if to == ord(st[j]):\n                if j == 0:\n                    s0 = st[j + 1:]\n                elif j == x - 1:\n                    s0 = st[:j]\n                else:\n                    s0 = st[:j] + st[j + 1:]\n                if s0[:(x - 1) // 2] == s0[(x - 1) // 2:]:\n                    print('YES')\n                    top = 1\n                    break\n        if top != 1:\n            print('NO')", "t = int(input())\nwhile t:\n    s = input()\n    l = len(s)\n    if l == 1:\n        print('NO')\n        t -= 1\n        continue\n    if l % 2 == 0:\n        if s[:len(s) // 2] == s[len(s) // 2:]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        i = 0\n        j = l // 2 + 1\n        count = 0\n        while i <= l // 2 and j < l:\n            if s[i] == s[j]:\n                i += 1\n                j += 1\n                continue\n            else:\n                i += 1\n                count += 1\n        if i > l // 2 and j >= l and (count < 2):\n            print('YES')\n            t -= 1\n            continue\n        i = 0\n        j = l // 2 + 1\n        flag = True\n        while i < l // 2 and j < l:\n            if s[i] == s[j]:\n                i += 1\n                j += 1\n                continue\n            else:\n                flag = False\n                break\n        if i == l // 2 and j == l and (flag == True):\n            print('YES')\n            t -= 1\n            continue\n        i = 0\n        j = l // 2\n        count = 0\n        while i < l // 2 and j < l:\n            if s[i] == s[j]:\n                i += 1\n                j += 1\n                continue\n            else:\n                j += 1\n                count += 1\n        if i >= l // 2 and j >= l - 1 and (count < 2):\n            print('YES')\n            t -= 1\n            continue\n        print('NO')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    s = input()\n    x = len(s)\n    if x == 1:\n        print('NO')\n    elif x % 2 == 0:\n        if s[:x // 2] == s[x // 2:]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        top = 0\n        tor = 0\n        list = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        for j in range(x):\n            list[ord(s[j]) - 97] += 1\n        for j in range(26):\n            if list[j] % 2 != 0:\n                tor = j + 97\n                break\n        for j in range(x):\n            if tor == ord(s[j]):\n                if j == 0:\n                    s1 = s[j + 1:]\n                elif j == x - 1:\n                    s1 = s[:j]\n                else:\n                    s1 = s[:j] + s[j + 1:]\n                if s1[:(x - 1) // 2] == s1[(x - 1) // 2:]:\n                    print('YES')\n                    top = 1\n                    break\n        if top != 1:\n            print('NO')", "__author__ = 'masterchief'\n\ndef solve():\n    d = int(input())\n    for dish in range(d):\n        dish_special()\n\ndef dish_special():\n    name = input()\n    special_name = False\n    len_name = len(name)\n    mid = len_name // 2\n    if len_name == 1:\n        pass\n    elif len_name % 2:\n        if match(name[:mid], name[mid:], 1) or match(name[mid + 1:], name[:mid + 1], 1):\n            special_name = True\n    elif match(name[:mid], name[mid:]):\n        special_name = True\n    print('YES') if special_name else print('NO')\n\ndef match(seq_template, seq_search, fault_tolerance=0):\n    len_template = len(seq_template)\n    len_search = len(seq_search)\n    faults = 0\n    i = 0\n    while i < len_template:\n        if seq_template[i] != seq_search[i + faults]:\n            faults += 1\n        else:\n            i += 1\n        if faults > fault_tolerance:\n            return False\n    return True\nsolve()", "def isDouble(s):\n    if len(s) % 2 == 1:\n        return False\n    else:\n        return s[:len(s) // 2] == s[len(s) // 2:]\n\ndef cal(s):\n    l = [0] * 26\n    i = 0\n    while i < len(s):\n        k = ord(s[i])\n        l[k - 97] += 1\n        i += 1\n    i = 0\n    c = []\n    while i < 26:\n        if l[i] % 2 == 1:\n            c += [i]\n        i += 1\n    if len(c) == 1:\n        return chr(c[0] + 97)\n    else:\n        return False\n\ndef isSpecial(s):\n    if len(s) % 2 == 0:\n        return s[:len(s) // 2] == s[len(s) // 2:]\n    elif len(s) == 1:\n        return False\n    else:\n        c = cal(s)\n        if c == False:\n            return False\n        else:\n            i = 0\n            while i < len(s):\n                if s[i] == c:\n                    if isDouble(s[:i] + s[i + 1:]):\n                        return True\n                i += 1\n            return False\ntest = int(input())\nwhile test != 0:\n    test -= 1\n    s = input()\n    if isSpecial(s):\n        print('YES')\n    else:\n        print('NO')", "def check(s, l):\n    a = s[:l >> 1]\n    b = s[l >> 1:]\n    cc = 0\n    (i, j) = (0, 0)\n    while cc < 2 and i < l >> 1 and (j < l - (l >> 1)):\n        if a[i] != b[j]:\n            cc += 1\n            j += 1\n        else:\n            i += 1\n            j += 1\n    if cc <= 1:\n        return True\n    a = s[:(l >> 1) + 1]\n    b = s[(l >> 1) + 1:]\n    cc = 0\n    (i, j) = (0, 0)\n    while cc < 2 and i < (l >> 1) + 1 and (j < l - (l >> 1) - 1):\n        if a[i] != b[j]:\n            cc += 1\n            i += 1\n        else:\n            i += 1\n            j += 1\n    if cc <= 1:\n        return True\n    return False\nt = int(input())\nfor k in range(t):\n    s = input()\n    l = len(s)\n    if l == 1:\n        print('NO')\n        continue\n    if l & 1:\n        if check(s, l):\n            print('YES')\n        else:\n            print('NO')\n    elif s[0:l >> 1] == s[l >> 1:]:\n        print('YES')\n    else:\n        print('NO')", "def isCool(s):\n    l = len(s)\n    if l == 1:\n        return False\n    if l % 2 == 0:\n        return True if isCool2(s) else False\n    mid = True\n    idx = -1\n    for x in range(l // 2):\n        if s[x] != s[l // 2 + x]:\n            idx = x\n            break\n    if idx == -1:\n        return True\n    idx2 = -1\n    for x in range(l // 2):\n        if s[x] != s[l // 2 + x + 1]:\n            idx2 = x\n            break\n    if idx2 == -1:\n        return True\n    a = s[:idx] + s[idx + 1:]\n    idx += l // 2\n    b = s[:idx] + s[idx + 1:]\n    idx = idx2\n    c = s[:idx] + s[idx + 1:]\n    idx += l // 2\n    d = s[:idx] + s[idx + 1:]\n    if isCool2(a) or isCool2(b) or isCool2(c) or isCool2(d):\n        return True\n\ndef isCool2(s):\n    l = len(s)\n    idx = -1\n    for x in range(l // 2):\n        if s[x] != s[l // 2 + x]:\n            idx = x\n            break\n    if idx == -1:\n        return True\n    else:\n        return False\nn = int(input())\nfor x in range(n):\n    s = input()\n    print('YES' if isCool(s) else 'NO')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    l = len(s)\n    if l == 1:\n        print('NO')\n    elif l % 2 == 0:\n        if s[:l // 2] == s[l // 2:]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        flag = 0\n        dica = {}\n        pele = 0\n        for i in range(l):\n            if s[i] in dica.keys():\n                dica[s[i]].append(i)\n            else:\n                dica[s[i]] = [i]\n        for k in dica.keys():\n            if len(dica[k]) % 2 != 0:\n                flag += 1\n                pele = k\n        if flag != 1:\n            print('NO')\n        else:\n            flag = 0\n            for i in dica[pele]:\n                ns = s[:i] + s[i + 1:]\n                if ns[:(l - 1) // 2] == ns[(l - 1) // 2:]:\n                    print('YES')\n                    flag = 1\n                    break\n            if flag == 0:\n                print('NO')", "d = int(input())\nans = []\nn = d\nwhile d > 0:\n    flag = 0\n    s = input()\n    l = len(s)\n    l1 = int(l / 2)\n    a = []\n    for i in range(26):\n        a.append([])\n    if l % 2 == 1:\n        count = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        for i in range(l):\n            count[ord(s[i]) - 97] = count[ord(s[i]) - 97] + 1\n            a[ord(s[i]) - 97].append(i)\n        for i in range(26):\n            if count[i] % 2 == 1:\n                l2 = len(a[i])\n                for j in range(l2):\n                    pos = a[i][j]\n                    if l1 <= pos:\n                        str1 = s[0:l1]\n                    else:\n                        str1 = s[0:pos] + s[pos + 1:l1 + 1]\n                    if l1 > pos:\n                        str2 = s[l1 + 1:]\n                    else:\n                        str2 = s[l1:pos] + s[pos + 1:]\n                    if str1 == str2 and str1 != '' and (str2 != ''):\n                        flag = 1\n                        break\n    else:\n        str1 = s[0:l1]\n        str2 = s[l1:]\n        if str1 == str2:\n            flag = 1\n    if flag == 1:\n        ans.append('YES')\n    else:\n        ans.append('NO')\n    d = d - 1\nfor i in range(n):\n    print(ans[i])", "sub1 = ''\nsub2 = ''\nsubstr = ''\nfor x in range(int(input())):\n    str = input().strip()\n    m = [0 for i in range(123)]\n    l = len(str)\n    if l is 1:\n        print('NO')\n        continue\n    for y in range(l):\n        ch = int(ord(str[y]))\n        chh = int(ord(str[l - 1 - y]))\n        if y < l - 1 - y:\n            m[ch] += 1\n            m[chh] += 1\n        elif y == l - 1 - y:\n            m[ch] += 1\n            break\n        elif y > l - 1 - y:\n            break\n    count = 0\n    for y in range(97, 123):\n        if m[y] % 2 is not 0:\n            count += 1\n            if count is 1:\n                ch1 = chr(y)\n            if count > 1:\n                break\n    if count > 1:\n        print('NO')\n        continue\n    if count is 0:\n        if l % 2 is not 0:\n            print('NO')\n        else:\n            sub1 = str[0:l // 2]\n            sub2 = str[l // 2:l]\n            if sub1 == sub2:\n                print('YES')\n            else:\n                print('NO')\n    elif count is 1:\n        flag = 0\n        for y in range(l):\n            if str[y] is ch1:\n                substr = str[0:y] + str[y + 1:l]\n                len1 = l - 1\n                sub1 = substr[0:len1 // 2]\n                sub2 = substr[len1 // 2:len1]\n                if sub1 == sub2:\n                    print('YES')\n                    flag = 1\n                    break\n        if flag is 0:\n            print('NO')", "sub1 = ''\nsub2 = ''\nsubstr = ''\nfor x in range(int(input())):\n    str = input().strip()\n    m = [0 for i in range(123)]\n    l = len(str)\n    if l is 1:\n        print('NO')\n        continue\n    for y in range(l):\n        ch = int(ord(str[y]))\n        chh = int(ord(str[l - 1 - y]))\n        if y < l - 1 - y:\n            m[ch] += 1\n            m[chh] += 1\n        elif y == l - 1 - y:\n            m[ch] += 1\n            break\n        elif y > l - 1 - y:\n            break\n    count = 0\n    for y in range(97, 123):\n        if m[y] % 2 is not 0:\n            count += 1\n            if count is 1:\n                ch1 = chr(y)\n            if count > 1:\n                break\n    if count > 1:\n        print('NO')\n        continue\n    if count is 0:\n        if l % 2 is not 0:\n            print('NO')\n        else:\n            sub1 = str[0:l // 2]\n            sub2 = str[l // 2:l]\n            if sub1 == sub2:\n                print('YES')\n            else:\n                print('NO')\n    elif count is 1:\n        flag = 0\n        for y in range(l):\n            if str[y] is ch1:\n                substr = str[0:y] + str[y + 1:l]\n                len1 = l - 1\n                sub1 = substr[0:len1 // 2]\n                sub2 = substr[len1 // 2:len1]\n                if sub1 == sub2:\n                    print('YES')\n                    flag = 1\n                    break\n        if flag is 0:\n            print('NO')", "sub1 = ''\nsub2 = ''\nsubstr = ''\nfor x in range(int(input())):\n    str = input().strip()\n    m = [0 for i in range(123)]\n    l = len(str)\n    if l is 1:\n        print('NO')\n        continue\n    for y in range(l):\n        m[int(ord(str[y]))] += 1\n    count = 0\n    for y in range(97, 123):\n        if m[y] % 2 is not 0:\n            count += 1\n            if count is 1:\n                ch1 = chr(y)\n            if count > 1:\n                break\n    if count > 1:\n        print('NO')\n        continue\n    if count is 0:\n        if l % 2 is not 0:\n            print('NO')\n        else:\n            sub1 = str[0:l // 2]\n            sub2 = str[l // 2:l]\n            if sub1 == sub2:\n                print('YES')\n            else:\n                print('NO')\n    elif count is 1:\n        flag = 0\n        for y in range(l):\n            if str[y] is ch1:\n                substr = str[0:y] + str[y + 1:l]\n                len1 = l - 1\n                sub1 = substr[0:len1 // 2]\n                sub2 = substr[len1 // 2:len1]\n                if sub1 == sub2:\n                    print('YES')\n                    flag = 1\n                    break\n        if flag is 0:\n            print('NO')", "def ds(x, z):\n    w = len(x)\n    q = len(z)\n    i = 0\n    j = 0\n    f = 0\n    h = 0\n    while i < w and j < q:\n        if x[i] == z[j]:\n            i += 1\n            j += 1\n        else:\n            f += 1\n            i += 1\n            if f > 1:\n                h = 1\n                break\n    if h == 0:\n        return True\n    else:\n        return False\nd = int(input())\nwhile d != 0:\n    s = str(input())\n    b = len(s)\n    if b == 1:\n        print('NO')\n    elif b % 2 == 0:\n        f = b // 2\n        r = s[0:f]\n        p = s[f:]\n        if r == p:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        f = b // 2\n        r = s[0:f + 1]\n        p = s[f + 1:]\n        y = s[0:f]\n        t = s[f:]\n        if ds(r, p):\n            print('YES')\n        elif ds(t, y):\n            print('YES')\n        else:\n            print('NO')\n    d -= 1", "t = int(input())\nfor _ in range(t):\n    s = input()\n    l = len(s)\n    lh = int(l / 2)\n    if l % 2 == 0:\n        if s[:lh] == s[lh:]:\n            print('YES')\n        else:\n            print('NO')\n    elif l == 1:\n        print('NO')\n    else:\n        left = s[:lh]\n        right = s[lh:]\n        k = 0\n        i = 0\n        j = 0\n        flag1 = True\n        while i < len(left):\n            if j < len(right) and left[i] == right[j]:\n                i += 1\n                j += 1\n            elif j < len(right) - 1 and left[i] == right[j + 1] and (k < 2):\n                i += 1\n                j += 2\n                k += 1\n            else:\n                flag1 = False\n                break\n        left = s[:lh + 1]\n        right = s[lh + 1:]\n        k = 0\n        i = 0\n        j = 0\n        flag2 = True\n        while j < len(right):\n            if i < len(left) and left[i] == right[j] and (k < 2):\n                i += 1\n                j += 1\n            elif i < len(left) - 1 and left[i + 1] == right[j] and (k < 2):\n                i += 2\n                j += 1\n                k += 1\n            else:\n                flag2 = False\n                break\n        if flag1 or flag2:\n            print('YES')\n        else:\n            print('NO')", "for t in range(int(input())):\n    s = list(input())\n    l = len(s)\n    if l == 1:\n        print('NO')\n        continue\n    if l % 2 == 0:\n        print('YES' if s[:l // 2] == s[l // 2:] else 'NO')\n    else:\n        s1 = s[:l // 2]\n        s2 = s[l // 2:l]\n        for (v, (a, b)) in enumerate(zip(s1, s2)):\n            if not a == b:\n                s2.pop(v)\n                break\n        else:\n            s2.pop()\n        if s1 == s2:\n            print('YES')\n        else:\n            s1 = s[:l // 2 + 1]\n            s2 = s[l // 2 + 1:]\n            for (v, (a, b)) in enumerate(zip(s1, s2)):\n                if not a == b:\n                    s1.pop(v)\n                    break\n            else:\n                s1.pop()\n            print('YES' if s1 == s2 else 'NO')", "from string import ascii_lowercase\n\ndef fun(str, ch):\n    fla = False\n    for i in range(len(s)):\n        if str[i] == ch:\n            h = str[:i] + str[i + 1:]\n            d = len(h) // 2\n            if h[:d] == h[d:]:\n                fla = True\n                break\n    return fla\nT = int(input())\nfor i in range(T):\n    s = str(input())\n    if len(s) == 1:\n        print('NO')\n        continue\n    k = 0\n    p = '0'\n    flag = True\n    for j in ascii_lowercase:\n        z = s.count(j)\n        if z % 2 != 0:\n            k = k + 1\n            if k >= 2:\n                flag = False\n                break\n            p = j\n    if flag == False:\n        print('NO')\n        continue\n    if p != '0':\n        if fun(s, p):\n            print('YES')\n            continue\n    else:\n        g = len(s) // 2\n        if s[:g] == s[g:]:\n            print('YES')\n            continue\n    print('NO')", "from string import ascii_lowercase\n\ndef fun(str, ch):\n    fla = False\n    for i in range(len(s)):\n        if str[i] == ch:\n            h = str[:i] + str[i + 1:]\n            d = len(h) // 2\n            if h[:d] == h[d:]:\n                fla = True\n                break\n    return fla\nT = int(input())\nfor i in range(T):\n    s = str(input())\n    if len(s) == 1:\n        print('NO')\n        continue\n    k = 0\n    p = '0'\n    flag = True\n    for j in ascii_lowercase:\n        z = s.count(j)\n        if z % 2 != 0:\n            k = k + 1\n            if k >= 2:\n                flag = False\n                break\n            p = j\n    if flag == False:\n        print('NO')\n        continue\n    if p != '0':\n        if fun(s, p):\n            print('YES')\n            continue\n    else:\n        g = len(s) // 2\n        if s[:g] == s[g:]:\n            print('YES')\n            continue\n    print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    l = len(s)\n    if l == 1:\n        print('NO')\n        continue\n    flag = 0\n    if l % 2 == 0:\n        for i in range(l // 2):\n            if s[i] != s[i + l // 2]:\n                flag = 1\n                break\n    else:\n        for i in range(l // 2):\n            if s[i] != s[i + l // 2 + 1]:\n                flag = 1\n                break\n        if flag:\n            flag = 0\n            vis = 0\n            i = 0\n            j = l // 2 + 1\n            while i <= l // 2:\n                if s[i] != s[j]:\n                    if vis == 1:\n                        flag = 1\n                        break\n                    else:\n                        i += 1\n                        vis = 1\n                else:\n                    i += 1\n                    j += 1\n        if flag:\n            flag = 0\n            vis = 0\n            i = 0\n            j = l // 2\n            while i < l // 2:\n                if s[i] != s[j]:\n                    if vis == 1:\n                        flag = 1\n                        break\n                    else:\n                        j += 1\n                        vis = 1\n                else:\n                    i += 1\n                    j += 1\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    if n == 1:\n        print('NO')\n        continue\n    if n % 2 == 0:\n        if s[:n // 2] == s[n // 2:]:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    (A, B) = (s[:n // 2], s[n // 2:])\n    if B[1:] == A:\n        print('YES')\n        continue\n    elif B[:-1] == A:\n        print('YES')\n        continue\n    elif B[-1] != B[0]:\n        (i, j) = (0, 0)\n        while i != n // 2:\n            if A[i] == B[j]:\n                i += 1\n                j += 1\n            elif A[i:] != B[j + 1:]:\n                print('NO')\n                break\n            else:\n                print('YES')\n                break\n    else:\n        (i, j, t1) = (0, 0, False)\n        while i != n // 2:\n            if A[i] == B[j]:\n                i += 1\n                j += 1\n            elif A[i:] == B[j + 1:]:\n                t1 = True\n                break\n            else:\n                break\n        (i, j, t2) = (0, 1, False)\n        while i != n // 2:\n            if A[i] == B[j]:\n                i += 1\n                j += 1\n            elif A[i + 1:] == B[j:-1]:\n                t2 = True\n                break\n            else:\n                break\n        if t1 or t2:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    if n == 1:\n        print('NO')\n        continue\n    if n % 2 == 0:\n        if s[:n // 2] == s[n // 2:]:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    (A, B) = (s[:n // 2], s[n // 2:])\n    if B[1:0] == A:\n        print('YES')\n        continue\n    elif B[:-1] == A:\n        print('YES')\n        continue\n    elif B[-1] != B[0]:\n        (i, j) = (0, 0)\n        while i != n // 2:\n            if A[i] == B[j]:\n                i += 1\n                j += 1\n            elif A[i:] != B[j + 1:]:\n                print('NO')\n                break\n            else:\n                print('YES')\n                break\n    else:\n        (i, j, t1) = (0, 0, False)\n        while i != n // 2:\n            if A[i] == B[j]:\n                i += 1\n                j += 1\n            elif A[i:] == B[j + 1:]:\n                t1 = True\n                break\n            else:\n                break\n        (i, j, t2) = (0, 1, False)\n        while i != n // 2:\n            if A[i] == B[j]:\n                i += 1\n                j += 1\n            elif A[i + 1:] == B[j:-1]:\n                t2 = True\n                break\n            else:\n                break\n        if t1 or t2:\n            print('YES')\n        else:\n            print('NO')", "D = int(input())\nfor i in range(D):\n    now = input()\n    len_now = len(now)\n    if len_now == 1:\n        print('NO')\n        continue\n    elif len_now % 2 == 0:\n        first = 0\n        mid = len_now // 2\n        second = mid\n        while first < mid and now[first] == now[second]:\n            first = first + 1\n            second = second + 1\n        if first == mid:\n            print('YES')\n            continue\n        else:\n            print('NO')\n            continue\n    else:\n        flag = 0\n        error = 0\n        first = 0\n        mid = len_now // 2\n        second = mid + 1\n        while first < mid and now[first] == now[second]:\n            first = first + 1\n            second = second + 1\n        if first == mid:\n            print('YES')\n            continue\n        first = 0\n        second = mid + 1\n        error = 0\n        while first <= mid:\n            if now[first] == now[second]:\n                first = first + 1\n                second = second + 1\n            else:\n                error = error + 1\n                if error > 1:\n                    break\n                else:\n                    first = first + 1\n        if first == mid + 1 and error == 1:\n            print('YES')\n            continue\n        first = 0\n        second = mid\n        error = 0\n        while second < len_now:\n            if now[first] == now[second]:\n                first = first + 1\n                second = second + 1\n            else:\n                error = error + 1\n                if error > 1:\n                    break\n                else:\n                    second = second + 1\n        if second == len_now and error == 1:\n            print('YES')\n            continue\n        print('NO')", "D = int(input())\nfor i in range(D):\n    now = input()\n    len_now = len(now)\n    if len_now == 1:\n        print('NO')\n        continue\n    elif len_now % 2 == 0:\n        first = 0\n        mid = len_now // 2\n        second = mid\n        while first < mid and now[first] == now[second]:\n            first = first + 1\n            second = second + 1\n        if first == mid:\n            print('YES')\n            continue\n        else:\n            print('NO')\n            continue\n    else:\n        flag = 0\n        error = 0\n        first = 0\n        mid = len_now // 2\n        second = mid + 1\n        while first < mid and now[first] == now[second]:\n            first = first + 1\n            second = second + 1\n        if first == mid:\n            print('YES')\n            continue\n        first = 0\n        second = mid + 1\n        error = 0\n        while first <= mid:\n            if now[first] == now[second]:\n                first = first + 1\n                second = second + 1\n            else:\n                error = error + 1\n                if error > 1:\n                    break\n                else:\n                    first = first + 1\n        if first == mid + 1 and error == 1:\n            print('YES')\n            continue\n        first = 0\n        second = mid\n        error = 0\n        while second < len_now:\n            if now[first] == now[second]:\n                first = first + 1\n                second = second + 1\n            else:\n                error = error + 1\n                if error > 1:\n                    break\n                else:\n                    second = second + 1\n        if second == len_now and error == 1:\n            print('YES')\n            continue\n        print('NO')"]