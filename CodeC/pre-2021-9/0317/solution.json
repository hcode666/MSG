["from collections import Counter\nfor _ in range(int(input())):\n    (r, s) = input().split()\n    r = list(r)\n    s = list(s)\n    r.sort()\n    s.sort()\n    if set(r) == set(s):\n        print('YES') if r == s else print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor ni in range(t):\n    (r, s) = input().split()\n    r = list(sorted(list(r)))\n    s = list(sorted(list(s)))\n    r1 = set(r)\n    s1 = set(s)\n    if s1 == r1:\n        if r == s:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "from collections import Counter\nt = int(input())\nfor hkhh in range(t):\n    (r, s) = map(str, input().split())\n    csr = set(r)\n    css = set(s)\n    cr = Counter(r)\n    cs = Counter(s)\n    if csr == css:\n        if cr == cs:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (r, s) = input().split()\n    rs = set(r)\n    ss = set(s)\n    ans = 'YES'\n    if rs == ss:\n        for i in rs:\n            if r.count(i) != s.count(i):\n                ans = 'NO'\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (s, r) = map(str, input().split())\n    d1 = {}\n    d2 = {}\n    for i in s:\n        if i not in d1:\n            d1[i] = 1\n        else:\n            d1[i] += 1\n    for j in r:\n        if j not in d2:\n            d2[j] = 1\n        else:\n            d2[j] += 1\n    if d1 == d2 or d1.values() == d2.values() or d1.keys() != d2.keys():\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (s, r) = map(str, input().split())\n    k = set(s)\n    m = set(r)\n    inter = k.intersection(m)\n    c3 = 0\n    c4 = 0\n    for i in inter:\n        c1 = s.count(i)\n        c2 = r.count(i)\n        c3 += 1\n        if c1 == c2:\n            c4 += 1\n    if sorted(s) == sorted(r):\n        print('YES')\n    elif len(inter) == 0:\n        print('YES')\n    elif c3 == c4:\n        print('YES')\n    elif k != m:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (s, r) = map(str, input().split())\n    k = set(s)\n    m = set(r)\n    inter = k.intersection(m)\n    c3 = 0\n    c4 = 0\n    for i in inter:\n        c1 = s.count(i)\n        c2 = r.count(i)\n        c3 += 1\n        if c1 == c2:\n            c4 += 1\n    if sorted(s) == sorted(r):\n        print('YES')\n    elif len(inter) == 0:\n        print('YES')\n    elif c3 == c4:\n        print('YES')\n    elif k != m:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (a, b) = map(str, input().split())\n    c = 0\n    for i in a:\n        if i not in b:\n            c += 1\n    a1 = set(a)\n    b1 = set(b)\n    c3 = 0\n    c4 = 0\n    cc = a1.intersection(b1)\n    for i in cc:\n        c1 = a.count(i)\n        c2 = b.count(i)\n        c3 += 1\n        if c1 == c2:\n            c4 += 1\n    if c3 == c4:\n        print('YES')\n    elif len(a) == c:\n        print('YES')\n    elif sorted(a) == sorted(b):\n        print('YES')\n    elif set(a) != set(b):\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nfor i in range(int(input())):\n    (r, s) = map(str, input().split())\n    print('YES' if (set(r) == set(s)) == (Counter(r) == Counter(s)) else 'NO')", "n = int(input())\nfor i in range(n):\n    (r, s) = map(str, input().split())\n    d1 = {}\n    d2 = {}\n    for f in r:\n        if f in d1:\n            d1[f] += 1\n        else:\n            d1[f] = 1\n    for j in s:\n        if j in d2:\n            d2[j] += 1\n        else:\n            d2[j] = 1\n    if d1 == d2 or d1.values() == d2.values() or d1.keys() != d2.keys():\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (r, s) = map(str, input().split())\n    d1 = {}\n    d2 = {}\n    for f in r:\n        if f in d1:\n            d1[f] += 1\n        else:\n            d1[f] = 1\n    for j in s:\n        if j in d2:\n            d2[j] += 1\n        else:\n            d2[j] = 1\n    if d1 == d2 or d1.values() == d2.values() or d1.keys() != d2.keys():\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (r, s) = map(str, input().split())\n    d1 = {}\n    d2 = {}\n    for f in r:\n        if f in d1:\n            d1[f] += 1\n        else:\n            d1[f] = 1\n    for j in s:\n        if j in d2:\n            d2[j] += 1\n        else:\n            d2[j] = 1\n    if d1 == d2 or d1.values() == d2.values() or d1.keys() != d2.keys():\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    s = input()\n    s = s.split(' ')\n    a = {}\n    b = {}\n    for i in s[0]:\n        if i in a:\n            a[i] += 1\n        else:\n            a[i] = 1\n    for i in s[1]:\n        if i in b:\n            b[i] += 1\n        else:\n            b[i] = 1\n    if a.values() == b.values() or a == b or a.keys() != b.keys():\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (s, t) = input().split()\n    print('YES' if (set(s) == set(t)) == (Counter(s) == Counter(t)) else 'NO')", "for _ in range(int(input())):\n    (r, s) = input().split()\n    rs = set(r)\n    ss = set(s)\n    ans = 'YES'\n    if rs == ss:\n        for i in rs:\n            if r.count(i) != s.count(i):\n                ans = 'NO'\n    print(ans)", "T = int(input())\nfor i in range(T):\n    str = input().split()\n    a = str[0]\n    b = str[1]\n    d1 = {}\n    d2 = {}\n    for i in a:\n        if i in d1:\n            d1[i] += 1\n        else:\n            d1[i] = 1\n    for i in b:\n        if i in d2:\n            d2[i] += 1\n        else:\n            d2[i] = 1\n    if d1.values() == d2.values() or d1.keys() != d2.keys() or d1 == d2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (r, s) = input().split()\n    s1 = set()\n    s2 = set()\n    dict_r = {}\n    dict_s = {}\n    for char in r:\n        if char in dict_r:\n            dict_r[char] += 1\n        else:\n            s1.add(char)\n            dict_r[char] = 1\n    for char in s:\n        if char in dict_s:\n            dict_s[char] += 1\n        else:\n            s2.add(char)\n            dict_s[char] = 1\n    flag = True\n    if s1 == s2:\n        for (key, value) in dict_r.items():\n            if value != dict_s[key]:\n                flag = False\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (r, s) = input().split()\n    s1 = set()\n    s2 = set()\n    dict_r = {}\n    dict_s = {}\n    for char in r:\n        if char in dict_r:\n            dict_r[char] += 1\n        else:\n            s1.add(char)\n            dict_r[char] = 1\n    for char in s:\n        if char in dict_s:\n            dict_s[char] += 1\n        else:\n            s2.add(char)\n            dict_s[char] = 1\n    flag = True\n    if s1 == s2:\n        for (key, value) in dict_r.items():\n            if value != dict_s[key]:\n                flag = False\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (r, s) = input().split()\n    l1 = []\n    l2 = []\n    dict_r = {}\n    dict_s = {}\n    for char in r:\n        if char in dict_r:\n            dict_r[char] += 1\n        else:\n            l1.append(char)\n            dict_r[char] = 1\n    for char in s:\n        if char in dict_s:\n            dict_s[char] += 1\n        else:\n            l2.append(char)\n            dict_s[char] = 1\n    l1.sort()\n    l2.sort()\n    flag = True\n    if l1 == l2:\n        for (key, value) in dict_r.items():\n            if value != dict_s[key]:\n                flag = False\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "def isTrue(R, S):\n    d1 = {}\n    d2 = {}\n    for i in R:\n        if i not in d1:\n            d1[i] = 1\n        else:\n            d1[i] += 1\n    for j in S:\n        if j not in d2:\n            d2[j] = 1\n        else:\n            d2[j] += 1\n    chef = 0\n    reality = 0\n    if set(d1.keys()) == set(d2.keys()):\n        chef = 1\n        for i in R:\n            if d1[i] != d2[i]:\n                break\n        else:\n            reality = 1\n    if chef == reality:\n        return True\n    else:\n        return False\nT = int(input())\nfor i in range(T):\n    (R, S) = input().split()\n    if isTrue(R, S) == True:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (r, s) = input().split()\n    rs = set(r)\n    ss = set(s)\n    ans = 'YES'\n    if rs == ss:\n        for i in rs:\n            if r.count(i) != s.count(i):\n                ans = 'NO'\n    print(ans)", "for _ in range(int(input())):\n    (r, s) = input().split()\n    rs = set(r)\n    ss = set(s)\n    ans = 'YES'\n    if rs == ss:\n        for i in rs:\n            if r.count(i) != s.count(i):\n                ans = 'NO'\n    print(ans)", "for tc in range(int(input())):\n    (r, s) = input().split()\n    rs = set(r)\n    ss = set(s)\n    ans = 'YES'\n    if rs == ss:\n        for i in rs:\n            if r.count(i) != s.count(i):\n                ans = 'NO'\n    print(ans)", "t = int(input())\nfor t in range(t):\n    (r, s) = [i for i in input().split(' ')]\n\n    def dicti(p):\n        d = {}\n        for i in p:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n        return d\n    dr = dicti(r)\n    ds = dicti(s)\n    if dr == ds:\n        print('YES')\n    elif set(r) != set(s):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (str1, str2) = map(str, input().split())\n    ans = True\n    if set(str1) == set(str2):\n        chef = True\n        for ch in set(str1):\n            if str1.count(ch) != str2.count(ch):\n                ans = False\n                break\n    else:\n        chef = False\n    if chef == True and ans == True:\n        print('YES')\n    elif chef == True and ans == False:\n        print('NO')\n    elif chef == False:\n        print('YES')", "for _ in range(int(input())):\n    (r, s) = [x for x in input().split()]\n    r = sorted(r)\n    s = sorted(s)\n    if s == r:\n        print('YES')\n    elif set(r) != set(s):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (r, s) = [x for x in input().split()]\n    r = sorted(r)\n    s = sorted(s)\n    if s == r:\n        print('YES')\n    elif set(r) != set(s):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (r, s) = [x for x in input().split()]\n    r = sorted(r)\n    s = sorted(s)\n    if s == r:\n        print('YES')\n    elif set(r) != set(s):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    (x, y) = input().split()\n    check1 = all((i in x for i in y))\n    check2 = all((i in y for i in x))\n    if check1 == False and check2 == False or check1 != check2:\n        print('YES')\n    else:\n        for i in x:\n            if x.count(i) != y.count(i):\n                print('NO')\n                break\n        else:\n            print('YES')\n    t -= 1", "for _ in range(int(input())):\n    (r, s) = map(str, input().split())\n    (r, s) = (list(r), list(s))\n    (d1, d2) = ({}, {})\n    for i in r:\n        if i in d1:\n            d1[i] += 1\n        else:\n            d1[i] = 1\n    for i in s:\n        if i in d2:\n            d2[i] += 1\n        else:\n            d2[i] = 1\n    if set(r) != set(s):\n        print('YES')\n    else:\n        if set(r) == set(s):\n            flag = 0\n            for (i, j) in d1.items():\n                if i in d2.keys() and j == d2[i]:\n                    continue\n                else:\n                    flag = 1\n                break\n        if flag == 1:\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\nfor i in range(t):\n    (r, s) = input().split()\n    r = sorted(r)\n    s = sorted(s)\n    if r == s:\n        print('YES')\n    elif set(r) != set(s):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (r, s) = input().split()\n    r = sorted(r)\n    s = sorted(s)\n    if r == s:\n        print('YES')\n    elif set(r) != set(s):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (r, s) = input().split()\n    r = sorted(r)\n    s = sorted(s)\n    if r == s:\n        print('YES')\n    elif set(r) != set(s):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (r, s) = input().split()\n    r = sorted(r)\n    s = sorted(s)\n    if r == s:\n        print('YES')\n    elif set(r) != set(s):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (r, s) = input().split()\n    r = sorted(r)\n    s = sorted(s)\n    if r == s:\n        print('YES')\n    elif set(r) != set(s):\n        print('YES')\n    else:\n        print('NO')", "test_case = int(input())\nfor i in range(test_case):\n    S = input().split(' ')\n    list1 = []\n    list2 = []\n    set1 = {'.'}\n    set2 = {'.'}\n    for j in range(len(S[0])):\n        list1.append(S[0][j])\n        set1.add(S[0][j])\n    for k in range(len(S[1])):\n        list2.append(S[1][k])\n        set2.add(S[1][k])\n    if set1 == set2:\n        granama = True\n        for j in range(len(list1)):\n            if list1[j] in list2:\n                list2.remove(list1[j])\n            else:\n                granama = False\n                break\n        if granama == True and len(list2) == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "test_case = int(input())\nfor i in range(test_case):\n    S = input().split(' ')\n    list1 = []\n    list2 = []\n    set1 = {'.'}\n    set2 = {'.'}\n    for j in range(len(S[0])):\n        list1.append(S[0][j])\n        set1.add(S[0][j])\n    for k in range(len(S[1])):\n        list2.append(S[1][k])\n        set2.add(S[1][k])\n    if set1 == set2:\n        granama = True\n        for j in range(len(list1)):\n            if list1[j] in list2:\n                list2.remove(list1[j])\n            else:\n                granama = False\n                break\n        if granama == True and len(list2) == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "test_case = int(input())\nfor i in range(test_case):\n    S = input().split(' ')\n    list1 = []\n    list2 = []\n    set1 = {'.'}\n    set2 = {'.'}\n    for j in range(len(S[0])):\n        list1.append(S[0][j])\n        set1.add(S[0][j])\n    for k in range(len(S[1])):\n        list2.append(S[1][k])\n        set2.add(S[1][k])\n    if set1 == set2:\n        granama = True\n        for j in range(len(list1)):\n            if list1[j] in list2:\n                list2.remove(list1[j])\n            else:\n                granama = False\n                break\n        if granama == True and len(list2) == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "test_case = int(input())\nfor i in range(test_case):\n    S = input().split(' ')\n    list1 = []\n    list2 = []\n    set1 = {'.'}\n    set2 = {'.'}\n    for j in range(len(S[0])):\n        list1.append(S[0][j])\n        set1.add(S[0][j])\n    for k in range(len(S[1])):\n        list2.append(S[1][k])\n        set2.add(S[1][k])\n    if set1 == set2:\n        granan = True\n        for j in range(len(list1)):\n            if list1[j] in list2:\n                list2.remove(list1[j])\n            else:\n                granan = False\n                break\n        if granan == True and len(list2) == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (r, s) = map(str, input().split())\n    r = sorted(r)\n    s = sorted(s)\n    if r == s:\n        print('YES')\n    elif set(r) != set(s):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (r, s) = input().split()\n    p = list(set(r))\n    q = list(set(s))\n    p.sort()\n    q.sort()\n    a = []\n    b = []\n    for i in range(len(p)):\n        a.append(r.count(p[i]))\n    for i in range(len(q)):\n        b.append(s.count(q[i]))\n    if p != q:\n        print('YES')\n    elif p == q and a == b:\n        print('YES')\n    elif p == q and a != b:\n        print('NO')", "for _ in range(int(input())):\n    (r, s) = map(str, input().split())\n    r = sorted(r)\n    s = sorted(s)\n    if r == s:\n        print('YES')\n    elif set(r) != set(s):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (r, s) = input().split()\n    if sorted(r) == sorted(s):\n        print('YES')\n    elif set(sorted(r)) != set(sorted(s)):\n        print('YES')\n    else:\n        print('NO')", "x = int(input())\na = []\nfor i in range(x):\n    (y, z) = map(str, input().split())\n    y = sorted(y)\n    z = sorted(z)\n    if y == z:\n        print('YES')\n    elif set(y) != set(z):\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor i in range(T):\n    (a, b) = map(str, input().split())\n    if sorted(a) == sorted(b):\n        print('YES')\n    elif set(a) != set(b):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (arr, ars) = list(map(str, input().split()))\n    check1 = 0\n    check2 = 0\n    if set(arr) == set(ars):\n        check1 = 1\n    if sorted(tuple(arr)) == sorted(tuple(ars)):\n        check2 = 1\n    if check1 == check2:\n        print('YES')\n    elif check1 == 1 and check2 == 0:\n        print('NO')", "t = int(input())\nfor test_case in range(0, t):\n    (a, b) = input().split()\n    a_list = list(a)\n    a_list.sort()\n    b_list = list(b)\n    b_list.sort()\n    a_set = set(a_list)\n    b_set = set(b_list)\n    if a_set == a_set and a_list == b_list:\n        print('YES')\n    elif a_set == b_set and a_list != b_list:\n        print('NO')\n    elif a_set != b_set:\n        print('YES')", "for _ in range(int(input())):\n    (rec1, rec2) = input().split()\n    (l1, l2) = (list(rec1), list(rec2))\n    l1.sort()\n    l2.sort()\n    (s1, s2) = (set(l1), set(l2))\n    if s1 == s2 and l1 == l2:\n        print('YES')\n    elif s1 == s2 and l1 != l2:\n        print('NO')\n    elif s1 != s2:\n        print('YES')", "t = int(input())\nfor test_case in range(0, t):\n    (a, b) = input().split()\n    a_list = list(a)\n    a_list.sort()\n    b_list = list(b)\n    b_list.sort()\n    a_set = set(a_list)\n    b_set = set(b_list)\n    if a_set == a_set and a_list == b_list:\n        print('YES')\n    elif a_set == b_set and a_list != b_list:\n        print('NO')\n    elif a_set != b_set:\n        print('YES')", "def nag(a, b):\n    if sorted(a) == sorted(b):\n        return 'YES'\n    elif set(a) != set(b):\n        return 'YES'\n    return 'NO'\nt = int(input())\nwhile t:\n    (a, b) = map(str, input().split())\n    result = nag(a, b)\n    print(result)\n    t -= 1", "for i in range(int(input())):\n    (r, s) = input().split()\n    r1 = list(set(r))\n    s1 = list(set(s))\n    r1.sort()\n    s1.sort()\n    l1 = []\n    l2 = []\n    for i in range(len(r1)):\n        l1.append(r.count(r1[i]))\n    for i in range(len(s1)):\n        l2.append(s.count(s1[i]))\n    if r1 != s1:\n        print('YES')\n    elif r1 == s1 and l1 == l2:\n        print('YES')\n    elif r1 == s1 and l1 != l2:\n        print('NO')", "for t in range(int(input())):\n    (a, b) = map(str, input().split())\n    x = list(set(a))\n    y = list(set(b))\n    x.sort()\n    y.sort()\n    p = []\n    q = []\n    for i in range(len(x)):\n        p.append(a.count(x[i]))\n    for i in range(len(y)):\n        q.append(b.count(y[i]))\n    if x != y:\n        print('YES')\n    elif x == y and p == q:\n        print('YES')\n    elif x == y and p != q:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (r, s) = input().split()\n    x = list(set(r))\n    y = list(set(s))\n    x.sort()\n    y.sort()\n    a = []\n    b = []\n    for i in range(len(x)):\n        a.append(r.count(x[i]))\n    for i in range(len(y)):\n        b.append(s.count(y[i]))\n    if x != y:\n        print('YES')\n    elif x == y and a == b:\n        print('YES')\n    elif x == y and a != b:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (r, s) = input().split()\n    x = list(set(r))\n    y = list(set(s))\n    x.sort()\n    y.sort()\n    a = []\n    b = []\n    for i in range(len(x)):\n        a.append(r.count(x[i]))\n    for i in range(len(y)):\n        b.append(s.count(y[i]))\n    if x != y:\n        print('YES')\n    elif x == y and a == b:\n        print('YES')\n    elif x == y and a != b:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (r, s) = input().split()\n    x = list(set(r))\n    y = list(set(s))\n    x.sort()\n    y.sort()\n    a = []\n    b = []\n    for i in range(len(x)):\n        a.append(r.count(x[i]))\n    for i in range(len(y)):\n        b.append(s.count(y[i]))\n    if x != y:\n        print('YES')\n    elif x == y and a == b:\n        print('YES')\n    elif x == y and a != b:\n        print('NO')", "from collections import Counter\nfor i in range(int(input())):\n    (r, s) = input().split()\n    a = set(r)\n    b = set(s)\n    if a != b:\n        print('YES')\n    elif a == b and Counter(r) == Counter(s):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b) = input().split()\n    sa = list(set(a))\n    sb = list(set(b))\n    sa.sort()\n    sb.sort()\n    ac = []\n    bc = []\n    for i in range(len(sa)):\n        ac.append(a.count(sa[i]))\n    for i in range(len(sb)):\n        bc.append(b.count(sb[i]))\n    if sa != sb:\n        print('YES')\n    elif sa == sb and ac == bc:\n        print('YES')\n    elif sa == sb and ac != bc:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (r, s) = input().split()\n    r1 = list(r)\n    s1 = list(s)\n    r1.sort()\n    s1.sort()\n    cr = []\n    cs = []\n    rf = list(set(r1))\n    sf = list(set(s1))\n    for i in range(len(r1)):\n        cr.append(r1.count(r1[i]))\n    for i in range(len(s1)):\n        cs.append(s1.count(s1[i]))\n    if rf != sf or cr == cs:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nfor i in range(int(input())):\n    (r, s) = input().split()\n    a = set(r)\n    b = set(s)\n    if a != b:\n        print('YES')\n    elif a == b and Counter(r) == Counter(s):\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\n\ndef check(s, t):\n    if set(s) != set(t):\n        return True\n    if set(s) == set(t) and Counter(s) == Counter(t):\n        return True\n    return False\nfor _ in range(int(input())):\n    (a, b) = input().split()\n    if check(a, b):\n        print('YES')\n        continue\n    print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (r, s) = map(str, input().split())\n    s1 = set(r)\n    s2 = set(s)\n    l1 = Counter(r)\n    l2 = Counter(s)\n    if s1 != s2:\n        print('YES')\n    elif s1 == s2 and l1 == l2:\n        print('YES')\n    else:\n        print('NO')", "for x in range(int(input())):\n    A = str(input()).split()\n    B = []\n    B.append(A[1])\n    A.remove(A[1])\n    C = list(A[0])\n    D = list(B[0])\n    C.sort()\n    D.sort()\n    E = list(set(C))\n    F = list(set(D))\n    if C == D:\n        print('YES')\n    elif E != F:\n        print('YES')\n    else:\n        print('NO')", "for x in range(int(input())):\n    A = str(input()).split()\n    B = []\n    B.append(A[1])\n    A.remove(A[1])\n    C = list(A[0])\n    D = list(B[0])\n    C.sort()\n    D.sort()\n    E = set(C)\n    F = set(D)\n    G = list(E)\n    H = list(F)\n    if C == D:\n        print('YES')\n    elif G == H:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (r, s) = tuple(input().split())\n    if set(r) == set(s):\n        if sorted(r) == sorted(s):\n            print('YES')\n        else:\n            print('NO')\n    elif sorted(r) == sorted(s):\n        print('NO')\n    else:\n        print('YES')", "from collections import Counter\nfor _ in range(int(input())):\n    (a, b) = input().split()\n    c = Counter(a)\n    d = Counter(b)\n    s = set(a)\n    r = set(b)\n    if s == r:\n        if c == d:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "from collections import Counter\nfor _ in range(int(input())):\n    (a, b) = input().split()\n    c = Counter(a)\n    d = Counter(b)\n    s = set(a)\n    r = set(b)\n    if s == r:\n        if c == d:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (a, b) = input().split()\n    (a1, b1) = (set(a), set(b))\n    a = sorted(a)\n    b = sorted(b)\n    if a1 == b1:\n        if a == b:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (r, s) = map(str, input().split())\n    R = []\n    S = []\n    for i in r:\n        R.append(i)\n    for i in s:\n        S.append(i)\n    R.sort()\n    S.sort()\n    a = set(R)\n    b = set(S)\n    if a == b:\n        if R == S:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "from collections import Counter\nfor _ in range(int(input())):\n    (s1, s2) = input().split()\n    a1 = Counter(s1)\n    a2 = Counter(s2)\n    f = 0\n    if set(s1) == set(s2):\n        for i in s1:\n            if a1[i] != a2[i]:\n                f = 1\n        if f == 1:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('YES')", "from collections import Counter\nfor _ in range(int(input())):\n    (r, s) = input().split()\n    set_r = set(r)\n    set_s = set(s)\n    counts_r = Counter(r)\n    counts_s = Counter(s)\n    if set_s == set_r:\n        if counts_s == counts_r:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "T = int(input())\nfor i in range(T):\n    (r, s) = input().split()\n    r = list(r)\n    s = list(s)\n    r.sort()\n    s.sort()\n    if set(r) == set(s):\n        t = 'YES'\n    else:\n        t = 'NO'\n    if r == s and len(r) == len(s):\n        c = 'YES'\n    else:\n        c = 'NO'\n    if t == c:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (r, s) = input().split()\n    x = Counter(r)\n    y = Counter(s)\n    r = set(r)\n    s = set(s)\n    if r == s:\n        if x == y:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "from collections import Counter\nfor _ in range(int(input())):\n    (r, s) = input().split()\n    x = Counter(r)\n    y = Counter(s)\n    r = set(r)\n    s = set(s)\n    if r == s:\n        if x == y:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (a, b) = input().split()\n    lista = []\n    listaa = [0 for x in range(26)]\n    listb = []\n    listbb = [0 for x in range(26)]\n    for j in a:\n        if ord(j) - 97 not in lista:\n            lista.append(ord(j) - 97)\n        listaa[ord(j) - 97] += 1\n    for k in b:\n        if ord(k) - 97 not in listb:\n            listb.append(ord(k) - 97)\n        listbb[ord(k) - 97] += 1\n    lista.sort()\n    listb.sort()\n    if lista == listb:\n        if listaa == listbb:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(0, t):\n    (x, y) = input().split()\n    l1 = sorted(list(x))\n    l2 = sorted(list(y))\n    if l1 == l2:\n        print('YES')\n    else:\n        i = 0\n        while i < len(l1) - 1:\n            if l1[i + 1] == l1[i]:\n                l1.pop(i + 1)\n            else:\n                i += 1\n        i = 0\n        while i < len(l2) - 1:\n            if l2[i + 1] == l2[i]:\n                l2.pop(i + 1)\n            else:\n                i += 1\n        if l1 == l2:\n            print('NO')\n        else:\n            print('YES')", "testcases = int(input())\nfor i in range(testcases):\n    (r, s) = list(map(str, input().split()))\n    temp1 = dict()\n    temp2 = dict()\n    for i in r:\n        temp1[i] = temp1.get(i, 0) + 1\n    for i in s:\n        temp2[i] = temp2.get(i, 0) + 1\n    list1 = list(temp1.keys())\n    list2 = list(temp2.keys())\n    if sorted(list1) == sorted(list2):\n        if temp1 == temp2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "t = input()\nfor c in range(0, int(t)):\n    (r, s) = input().split()\n    rset = set(r)\n    chef = 1\n    for x in rset:\n        if x not in s:\n            chef = 0\n            break\n    sset = set(s)\n    for w in sset:\n        if w not in r:\n            chef = 0\n            break\n    if chef == 1:\n        correct = 1\n        for y in rset:\n            if r.count(y) != s.count(y):\n                correct = 0\n                break\n        if correct == 1:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "from collections import Counter\na = int(input())\nfor _ in range(a):\n    (k, p) = input().split()\n    flag = 0\n    sc = Counter(k)\n    rc = Counter(p)\n    if set(k) == set(p):\n        for i in k:\n            if sc[i] != rc[i]:\n                flag = 1\n        if flag == 1:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (r, s) = input().split(' ')\n    (d1, d2) = ({}, {})\n    for i in r:\n        d1[i] = d1.get(i, 0) + 1\n    for i in s:\n        d2[i] = d2.get(i, 0) + 1\n    (d1l, d2l) = (list(d1.keys()), list(d2.keys()))\n    if sorted(d1l) == sorted(d2l):\n        if d1 == d2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (a, b) = [str(x) for x in input().split(' ')]\n    if sorted(set(a)) == sorted(set(b)):\n        if sorted(a) == sorted(b):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (a, b) = [str(x) for x in input().split(' ')]\n    if sorted(set(a)) == sorted(set(b)):\n        if sorted(a) == sorted(b):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (a, b) = [str(x) for x in input().split(' ')]\n    if sorted(set(a)) == sorted(set(b)):\n        if sorted(a) == sorted(b):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (s1, s2) = [str(x) for x in input().split(' ')]\n    if sorted(set(s1)) == sorted(set(s2)):\n        if sorted(s1) == sorted(s2):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (s1, s2) = [str(x) for x in input().split(' ')]\n    if sorted(set(s1)) == sorted(set(s2)):\n        if sorted(s1) == sorted(s2):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "tests = int(input())\nfor i in range(tests):\n    (recipe1, recipe2) = input().split()\n    recipe_arr1 = [0] * 26\n    recipe_arr2 = [0] * 26\n    chef_ans = True\n    correct_ans = True\n    for j in recipe1:\n        recipe_arr1[ord(j) - 97] += 1\n    for j in recipe2:\n        recipe_arr2[ord(j) - 97] += 1\n    for j in range(26):\n        if recipe_arr1[j] > 0 and recipe_arr2[j] == 0 or (recipe_arr2[j] > 0 and recipe_arr1[j] == 0):\n            chef_ans = False\n        if recipe_arr1[j] != recipe_arr2[j]:\n            correct_ans = False\n    if chef_ans == correct_ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (r, s) = map(str, input().split())\n    (t1, t2) = (sorted(r), sorted(s))\n    (d1, d2) = (set(r), set(s))\n    if t1 == t2:\n        print('YES')\n    elif d1 == d2:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input().strip())):\n    (r, s) = input().strip().split()\n    l1 = list(set(list(r)))\n    l1.sort()\n    l2 = list(set(list(s)))\n    l2.sort()\n    if ''.join(l1) == ''.join(l2):\n        l1 = list(r)\n        l2 = list(s)\n        l1.sort()\n        l2.sort()\n        if ''.join(l1) == ''.join(l2):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (r, s) = map(str, input().split())\n    (t1, t2) = (sorted(r), sorted(s))\n    (d1, d2) = (set(r), set(s))\n    if t1 == t2:\n        print('YES')\n    elif d1 == d2:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (r, s) = map(str, input().split())\n    (t1, t2) = (sorted(r), sorted(s))\n    (d1, d2) = (set(r), set(s))\n    if t1 == t2:\n        print('YES')\n    elif d1 == d2:\n        print('NO')\n    else:\n        print('YES')", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    (r, s) = map(str, input().split())\n    a = list(r)\n    b = list(s)\n    a.sort()\n    b.sort()\n    c = set(a)\n    d = set(b)\n    e = list(c)\n    f = list(d)\n    e.sort()\n    f.sort()\n    if e != f:\n        print('YES')\n    elif Counter(a) == Counter(b):\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nn = int(input())\nfor i in range(n):\n    (x, y) = map(str, input().split())\n    x = list(x)\n    y = list(y)\n    x.sort()\n    y.sort()\n    p = set(x)\n    q = set(y)\n    a = list(p)\n    b = list(q)\n    a.sort()\n    b.sort()\n    if a != b:\n        print('YES')\n    elif Counter(x) == Counter(y):\n        print('YES')\n    else:\n        print('NO')", "from math import gcd, sqrt, ceil, floor, log10\nfrom heapq import heapify, heappop, heappush, nsmallest, nlargest\nfrom collections import Counter, deque, OrderedDict, defaultdict\nfrom itertools import combinations, permutations, zip_longest\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache\nimport sys\nimport time\nimport string\nsys.setrecursionlimit(3000000)\nINT_MAX = float('inf')\nINT_MIN = float('-inf')\nMOD = int(1000000000.0) + 7\nNEWLINE = '\\n'\nSPACE = ' '\ninp = lambda fn: fn(input())\ninp_vars = lambda fn, delim, convert_to=list: convert_to(map(fn, input().split(delim)))\n\ndef solve(*args, **kwargs):\n    (s, r) = args\n    chef = correct = True\n    (s, r) = (Counter(s), Counter(r))\n    for ch in string.ascii_lowercase:\n        if s[ch] == 0 and r[ch] != 0 or (s[ch] != 0 and r[ch] == 0):\n            chef = False\n        if s[ch] != r[ch]:\n            correct = False\n    return 'YES' if correct == chef else 'NO'\n\ndef main(*args, **kwargs):\n    for _ in range(int(input())):\n        (arg1, arg2) = inp_vars(str, SPACE)\n        res = solve(*(arg1, arg2))\n        if type(res) in {list, tuple, set}:\n            print(*res, sep=' ')\n        else:\n            print(res)\nmain()", "tests = int(input())\nfor i in range(tests):\n    (recipe1, recipe2) = input().split()\n    recipe_arr1 = [0] * 26\n    recipe_arr2 = [0] * 26\n    chef_ans = True\n    correct_ans = True\n    for j in recipe1:\n        recipe_arr1[ord(j) - 97] += 1\n    for j in recipe2:\n        recipe_arr2[ord(j) - 97] += 1\n    for j in range(26):\n        if recipe_arr1[j] > 0 and recipe_arr2[j] == 0 or (recipe_arr2[j] > 0 and recipe_arr1[j] == 0):\n            chef_ans = False\n        if recipe_arr1[j] != recipe_arr2[j]:\n            correct_ans = False\n    if chef_ans == correct_ans:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nn = int(input())\nfor i in range(n):\n    (x, y) = map(str, input().split())\n    x = list(x)\n    y = list(y)\n    x.sort()\n    y.sort()\n    p = set(x)\n    q = set(y)\n    a = list(p)\n    b = list(q)\n    a.sort()\n    b.sort()\n    if a != b:\n        print('YES')\n    elif Counter(x) == Counter(y):\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nn = int(input())\nfor i in range(n):\n    (x, y) = map(str, input().split())\n    x = list(x)\n    y = list(y)\n    x.sort()\n    y.sort()\n    p = set(x)\n    q = set(y)\n    a = list(p)\n    b = list(q)\n    a.sort()\n    b.sort()\n    if a != b:\n        print('YES')\n    elif Counter(x) == Counter(y):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (s, t) = map(str, input().split(' '))\n    s1 = set(s)\n    s2 = set(t)\n    if s1 == s2:\n        if sorted(list(s)) == sorted(list(t)):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (r, s) = input().split()\n    c = 0\n    d = 0\n    s1 = set(r)\n    s2 = set(s)\n    if s1 == s2:\n        d = 1\n    d1 = {}\n    d2 = {}\n    for j in s1:\n        d1[j] = r.count(j)\n    for k in s2:\n        d2[k] = s.count(k)\n    f = 0\n    if d1 == d2:\n        f = 1\n    if d == f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (r, s) = input().split()\n    c = 0\n    d = 0\n    s1 = set(r)\n    s2 = set(s)\n    if s1 == s2:\n        d = 1\n    d1 = {}\n    d2 = {}\n    for j in s1:\n        d1[j] = r.count(j)\n    for k in s2:\n        d2[k] = s.count(k)\n    f = 0\n    if d1 == d2:\n        f = 1\n    if d == f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = map(str, input().split())\n    from collections import Counter as Co\n    (a, b) = (Co(a), Co(b))\n    if a.keys() == b.keys():\n        for i in a:\n            if a[i] != b[i]:\n                print('NO')\n                break\n        else:\n            print('YES')\n    else:\n        print('YES')"]