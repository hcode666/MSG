["t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    s = input()\n    s2 = 2 * s\n    k = 0\n    m = 0\n    while k < n:\n        if s2[k] == '0':\n            e = k\n            while e < 2 * n and s2[e] == '0':\n                e += 1\n            l = e - k\n            if l > m:\n                m = l\n            k = e\n        else:\n            k += 1\n    c = 0\n    for j in range(n):\n        if s[j] == '0':\n            c += 1\n    ans.append(c - m)\nprint(*ans)", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    s = input()\n    s2 = 2 * s\n    k = 0\n    m = 0\n    while k < n:\n        if s2[k] == '0':\n            e = k\n            while e < 2 * n and s2[e] == '0':\n                e += 1\n            l = e - k\n            if l > m:\n                m = l\n            k = e\n        else:\n            k += 1\n    c = 0\n    for j in range(n):\n        if s[j] == '0':\n            c += 1\n    ans.append(c - m)\nprint(*ans)", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    s = input()\n    s2 = 2 * s\n    k = 0\n    m = 0\n    while k < n:\n        if s2[k] == '0':\n            e = k\n            while e < 2 * n and s2[e] == '0':\n                e += 1\n            l = e - k\n            if l > m:\n                m = l\n            k = e\n        else:\n            k += 1\n    c = 0\n    for j in range(n):\n        if s[j] == '0':\n            c += 1\n    ans.append(c - m)\nprint(*ans)", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    s = input()\n    s2 = 2 * s\n    k = 0\n    m = 0\n    while k < n:\n        if s2[k] == '0':\n            e = k\n            while e < 2 * n and s2[e] == '0':\n                e += 1\n            l = e - k\n            if l > m:\n                m = l\n            k = e\n        else:\n            k += 1\n    c = 0\n    for j in range(n):\n        if s[j] == '0':\n            c += 1\n    ans.append(c - m)\nprint(*ans)", "T = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    S = input()\n    s = S + S\n    start = 0\n    maxlen = 0\n    while start < N:\n        if s[start] == '0':\n            end = start\n            while end < 2 * N and s[end] == '0':\n                end += 1\n            l = end - start\n            if l > maxlen:\n                maxlen = l\n            start = end\n        else:\n            start += 1\n    count = 0\n    for i in range(N):\n        if S[i] == '0':\n            count += 1\n    ans.append(count - maxlen)\nfor i in ans:\n    print(i)", "t = int(input())\nfor m in range(t):\n    n = int(input())\n    sit = input()\n    num0 = 0\n    total = 0\n    max0 = 0\n    s = 0\n    e = 0\n    i = 0\n    while i < n:\n        num0 = 0\n        while i < n and sit[i] == '0':\n            i += 1\n            num0 += 1\n        total += num0\n        if num0 > max0:\n            max0 = num0\n        if num0 == i:\n            s = num0\n        if i == n:\n            e = num0\n        i += 1\n    if s + e > max0:\n        max0 = s + e\n    print(total - max0)", "t = int(input())\nfor m in range(t):\n    n = int(input())\n    sit = input()\n    num0 = 0\n    total = 0\n    max0 = 0\n    s = 0\n    e = 0\n    i = 0\n    while i < n:\n        num0 = 0\n        while i < n and sit[i] == '0':\n            i += 1\n            num0 += 1\n        total += num0\n        if num0 > max0:\n            max0 = num0\n        if num0 == i:\n            s = num0\n        if i == n:\n            e = num0\n        i += 1\n    if s + e > max0:\n        max0 = s + e\n    print(total - max0)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    totalZero = 0\n    maxZero = 0\n    first = 0\n    last = 0\n    i = 0\n    while i < n:\n        count = 0\n        while i < n and s[i] == '0':\n            i += 1\n            count += 1\n        totalZero += count\n        if count > maxZero:\n            maxZero = count\n        if count == i:\n            first = count\n        if i == n:\n            last = count\n        i += 1\n    if first + last > maxZero:\n        maxZero = first + last\n    print(totalZero - maxZero)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    i = s.find('1')\n    s = s[i:] + s[:i]\n    o = s.split('1')\n    result = sum(map(len, o)) - max(map(len, o))\n    print(result)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    i = s.find('1')\n    s = s[i:] + s[:i]\n    o = s.split('1')\n    result = sum(map(len, o)) - max(map(len, o))\n    print(result)", "import sys\nt = int(input())\nwhile t:\n    n = int(input())\n    a = input()\n    p = [0 for i in range(n)]\n    s = [0 for i in range(n)]\n    p[0] = int(a[0])\n    s[n - 1] = int(a[n - 1])\n    pos = []\n    for i in range(n):\n        if a[i] == '1':\n            pos.append(i)\n    for i in range(1, n):\n        p[i] = p[i - 1] + int(a[i])\n    for i in range(n - 2, -1, -1):\n        s[i] = s[i + 1] + int(a[i])\n    if p[n - 1] == 1:\n        sys.stdout.write('0\\n')\n    else:\n        m = n\n        for i in range(1, len(pos)):\n            m = min(m, n - pos[i] + pos[i - 1] + 1 - (p[pos[i - 1]] + s[pos[i]]))\n        x = pos[-1] - pos[0] + 1\n        if pos[0] == 0:\n            x -= p[pos[-1]]\n        else:\n            x -= p[pos[-1]] - p[pos[0] - 1]\n        m = min(m, x)\n        sys.stdout.write(str(m) + '\\n')\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    i = s.find('1')\n    s = s[i:] + s[:i]\n    o = s.split('1')\n    result = sum(map(len, o)) - max(map(len, o))\n    print(result)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    s.split('1')\n    i = s.find('1')\n    s = s[i:] + s[:i]\n    zeros = s.split('1')\n    result = sum(map(len, zeros)) - max(map(len, zeros))\n    print(result)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    s.split('1')\n    i = s.find('1')\n    s = s[i:] + s[:i]\n    zeros = s.split('1')\n    result = sum(map(len, zeros)) - max(map(len, zeros))\n    print(result)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    s.split('1')\n    i = s.find('1')\n    s = s[i:] + s[:i]\n    zeros = s.split('1')\n    result = sum(map(len, zeros)) - max(map(len, zeros))\n    print(result)", "from sys import stdin, stdout, exit\n\ndef listInput():\n    return list(map(int, stdin.readline().split()))\n\ndef printBS(li):\n    n = len(li)\n    for i in range(n - 1):\n        stdout.write('%d ' % li[i])\n    if n != 0:\n        stdout.write('%d\\n' % li[n - 1])\n\ndef sin():\n    return stdin.readline().rstrip()\n\ndef inp():\n    return int(stdin.readline())\ncases = inp()\nfor _ in range(cases):\n    n = inp()\n    s = sin()\n    m = 0\n    c = 0\n    for i in s:\n        if i == '1':\n            m = max(m, c)\n            c = 0\n        else:\n            c += 1\n    m = max(m, c)\n    c = 0\n    for i in s:\n        if i == '0':\n            c += 1\n        else:\n            break\n    else:\n        c = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == '0':\n            c += 1\n        else:\n            break\n    m = max(c, m)\n    print(s.count('0') - m)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    s = input()\n    total = 0\n    l = s.index('1')\n    r = s.rindex('1')\n    for i in range(n):\n        if s[i] == '0':\n            total += 1\n    s = s + s[:l + 1]\n    count = 0\n    max1 = 0\n    for i in range(len(s) - 1):\n        if s[i] == '0' and s[i + 1] == '0':\n            count += 1\n        elif s[i] == '0' and s[i + 1] == '1':\n            count += 1\n            if count > max1:\n                max1 = count\n            count = 0\n    print(total - max1)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    i = 0\n    start = 0\n    end = 0\n    c = 0\n    z = 1\n    t = 0\n    while i < n:\n        if int(a[i]) == 0:\n            c += 1\n            t += 1\n        else:\n            z = max(z, t)\n            t = 0\n        i += 1\n    i = 0\n    while i < n and int(a[i]) == 0:\n        start += 1\n        i += 1\n    i = n - 1\n    while i >= 0 and int(a[i]) == 0:\n        end += 1\n        i -= 1\n    z = max(z, end + start)\n    if c > 0:\n        print(c - z)\n    else:\n        print('0')", "import io\nimport sys\n\ndef test_data():\n    return io.StringIO('3\\n8\\n10001010\\n11\\n10010001001\\n15\\n00010010001001\\n')\n\ndef get_input(source):\n    with source as lines:\n        t = int(next(lines))\n        for _ in range(t):\n            n = int(next(lines))\n            chairs = next(lines).strip()\n            yield (chairs,)\n\ndef calc(chairs):\n    tmp_chairs = chairs.lstrip('0')\n    chairs = tmp_chairs + '0' * (len(chairs) - len(tmp_chairs))\n    chairs = chairs.rstrip('1')\n    empties = 0\n    distances = []\n    for chair in chairs:\n        if chair == '1':\n            if empties != 0:\n                distances.append(empties)\n                empties = 0\n        else:\n            empties += 1\n    if empties != 0:\n        distances.append(empties)\n    return sum(sorted(distances)[:-1])\n\ndef calc_derp(chairs):\n    first = chairs[0]\n    prev = first\n    movements = 0\n    for chair in chairs[1:]:\n        if prev == chair:\n            continue\n        elif chair == '1':\n            movements += 1\n        prev = chair\n    if first == prev and first == '1':\n        movements = max(movements - 1, 0)\n    return movements\ninp = test_data() if '-test' in sys.argv else sys.stdin\nfor args in get_input(inp):\n    print(calc(*args))", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    i = 0\n    while i < len(s) and s[i] == '0':\n        i += 1\n    s = s[i:] + s[:i]\n    s = s.split('1')\n    z = sum((len(p) for p in s))\n    m = max((len(p) for p in s))\n    print(z - m)"]