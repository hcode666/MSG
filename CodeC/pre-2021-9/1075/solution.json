["(N, K) = list(map(int, input().split()))\narr = list(map(int, input().split()))\na = 1\np = [[arr[-1], 1]]\nk = 1\nfor i in range(N - 2, -1, -1):\n    k += 1\n    while p[-1][0] >= arr[i]:\n        p.pop()\n        if p == []:\n            break\n    if p != []:\n        a *= k - p[-1][1] + 1\n        a %= 10 ** 9 + 7\n    p.append([arr[i], k])\nprint(a % (10 ** 9 + 7))", "(N, K) = list(map(int, input().split()))\narr = list(map(int, input().split()))\na = 1\np = [[arr[-1], 1]]\nk = 1\nfor i in range(N - 2, -1, -1):\n    k += 1\n    while p[-1][0] >= arr[i]:\n        p.pop()\n        if p == []:\n            break\n    if p != []:\n        a *= k - p[-1][1] + 1\n        a %= 10 ** 9 + 7\n    p.append([arr[i], k])\nprint(a % (10 ** 9 + 7))", "(N, K) = list(map(int, input().split()))\narr = list(map(int, input().split()))\na = 1\np = [[arr[-1], 1]]\nk = 1\nfor i in range(N - 2, -1, -1):\n    k += 1\n    while p[-1][0] >= arr[i]:\n        p.pop()\n        if p == []:\n            break\n    if p != []:\n        a *= k - p[-1][1] + 1\n        a %= 10 ** 9 + 7\n    p.append([arr[i], k])\nprint(a % (10 ** 9 + 7))", "(n0, k) = list(map(int, input().split()))\nar = list(map(int, input().split()))\nx = 1\ny = [[ar[-1], 1]]\nj = 1\nfor i in range(n0 - 2, -1, -1):\n    j += 1\n    while y[-1][0] >= ar[i]:\n        y.pop()\n        if y == []:\n            break\n    if y != []:\n        x *= j - y[-1][1] + 1\n        x %= 10 ** 9 + 7\n    y.append([ar[i], j])\nprint(x % (10 ** 9 + 7))", "(n, k) = list(map(int, input().split()))\narr = list(map(int, input().split()))\nx = 1\ns = [[arr[-1], 1]]\nj = 1\nfor i in range(n - 2, -1, -1):\n    j += 1\n    while s[-1][0] >= arr[i]:\n        s.pop()\n        if s == []:\n            break\n    if s != []:\n        x *= j - s[-1][1] + 1\n        x %= 10 ** 9 + 7\n    s.append([arr[i], j])\nprint(x % (10 ** 9 + 7))", "(n, k) = list(map(int, input().split()))\narr = list(map(int, input().split()))\nx = 1\ns = [[arr[-1], 1]]\nj = 1\nfor i in range(n - 2, -1, -1):\n    j += 1\n    while s[-1][0] >= arr[i]:\n        s.pop()\n        if s == []:\n            break\n    if s != []:\n        x *= j - s[-1][1] + 1\n        x %= 10 ** 9 + 7\n    s.append([arr[i], j])\nprint(x % (10 ** 9 + 7))", "(n, k) = list(map(int, input().split()))\narr = list(map(int, input().split()))\nx = 1\ns = [[arr[-1], 1]]\nj = 1\nfor i in range(n - 2, -1, -1):\n    j += 1\n    while s[-1][0] >= arr[i]:\n        s.pop()\n        if s == []:\n            break\n    if s != []:\n        x *= j - s[-1][1] + 1\n        x %= 10 ** 9 + 7\n    s.append([arr[i], j])\nprint(x % (10 ** 9 + 7))", "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nstk = []\nf = 1\nfor i in range(n):\n    while len(stk) != 0 and l[i] < l[stk[-1]]:\n        f = f * (i - stk.pop() + 1) % 1000000007\n    stk.append(i)\nprint(f)", "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nstk = []\nf = 1\nfor i in range(n):\n    while len(stk) != 0 and l[i] < l[stk[-1]]:\n        f = f * (i - stk.pop() + 1) % 1000000007\n    stk.append(i)\nprint(f)", "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nstk = []\nf = 1\nfor i in range(n):\n    while len(stk) != 0 and l[i] < l[stk[-1]]:\n        f = f * (i - stk.pop() + 1) % 1000000007\n    stk.append(i)\nprint(f)", "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nstk = []\nf = 1\nfor i in range(n):\n    while len(stk) != 0 and l[i] < l[stk[-1]]:\n        f = f * (i - stk.pop() + 1) % 1000000007\n    stk.append(i)\nprint(f)", "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nstk = []\nf = 1\nfor i in range(n):\n    while len(stk) != 0 and l[i] < l[stk[-1]]:\n        f = f * (i - stk.pop() + 1) % 1000000007\n    stk.append(i)\nprint(f)", "(n, k) = map(int, input().split())\nl = [int(x) for x in input().split()]\nt = []\nf = 1\nm = 1000000007\nfor i in range(n):\n    while len(t) != 0 and l[i] < l[t[-1]]:\n        f = f * (i - t.pop() + 1) % m\n    t.append(i)\nprint(f)", "(n, k) = map(int, input().split())\nl = [int(x) for x in input().split()]\nt = []\nf = 1\nm = 1000000007\nfor i in range(n):\n    while len(t) != 0 and l[i] < l[t[-1]]:\n        f = f * (i - t.pop() + 1) % m\n    t.append(i)\nprint(f)", "if 3 > 0:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    stk = []\n    ans = 1\n    for i in range(n):\n        while len(stk) > 0 and l[i] < l[stk[-1]]:\n            e = stk.pop()\n            ans = ans * (i - e + 1) % 1000000007\n        stk.append(i)\n    print(ans)", "(n, k) = map(int, input().split())\na = [int(i) for i in input().split()][:n]\nst = []\nans = 1\nfor i in range(n):\n    while len(st) > 0 and a[i] < a[st[-1]]:\n        ele = st.pop()\n        ans = ans * (i - ele + 1) % 1000000007\n    st.append(i)\nprint(ans)", "(n, k) = map(int, input().split())\na = [int(i) for i in input().split()][:n]\nst = []\nans = 1\nfor i in range(n):\n    while len(st) > 0 and a[i] < a[st[-1]]:\n        ele = st.pop()\n        ans = ans * (i - ele + 1) % 1000000007\n    st.append(i)\nprint(ans)", "(n, k) = map(int, input().split())\narr = list(map(int, input().split()))\nm = 1000000007\ns = []\ntotal = 1\ni = n - 1\nwhile i >= 0:\n    e = arr[i]\n    while s and arr[s[-1]] >= e:\n        s.pop()\n    if s:\n        total = total % m * (s[-1] - i + 1) % m % m\n    s.append(i)\n    i -= 1\nprint(total)", "(n, k) = map(int, input().split())\narr = list(map(int, input().split()))\nm = 1000000007\ns = []\ntotal = 1\ni = n - 1\nwhile i >= 0:\n    e = arr[i]\n    while s and arr[s[-1]] >= e:\n        s.pop()\n    if s:\n        total = total % m * (s[-1] - i + 1) % m % m\n    s.append(i)\n    i -= 1\nprint(total)", "for _ in range(1):\n    (n, k) = map(int, input().split())\n    queue = list(map(int, input().split()))\n    ans = 1\n    stack = []\n    i = n - 1\n    m = 10 ** 9 + 7\n    while i >= 0:\n        temp = queue[i]\n        while stack and temp <= queue[stack[-1]]:\n            stack.pop(-1)\n        if stack:\n            ans = ans % m * (stack[-1] - i + 1) % m % m\n        stack.append(i)\n        i -= 1\n    print(ans)", "(n, k) = map(int, input().split())\na = [int(i) for i in input().split()][:n]\nst = []\nans = 1\nfor i in range(n):\n    while len(st) > 0 and a[i] < a[st[-1]]:\n        ele = st.pop()\n        ans = ans * (i - ele + 1) % 1000000007\n    st.append(i)\nprint(ans)", "(n, k) = map(int, input().split())\na = [int(i) for i in input().split()][:n]\nst = []\nans = 1\nfor i in range(n):\n    while len(st) > 0 and a[i] < a[st[-1]]:\n        ele = st.pop()\n        ans = ans * (i - ele + 1) % 1000000007\n    st.append(i)\nprint(ans)", "(n, k) = map(int, input().split())\na = [int(i) for i in input().split()][:n]\nst = []\nans = 1\nfor i in range(n):\n    while len(st) > 0 and a[i] < a[st[-1]]:\n        ele = st.pop()\n        ans = ans * (i - ele + 1) % 1000000007\n    st.append(i)\nprint(ans)", "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nindex = []\ni = n - 1\nans = 1\nm = 10 ** 9 + 7\nwhile i >= 0:\n    while index and l[index[-1]] >= l[i]:\n        index.pop(-1)\n    if index:\n        ans = ans % m * (index[-1] - i + 1) % m\n    index.append(i)\n    i -= 1\nprint(ans % m)", "for _ in range(1):\n    (n, k) = map(int, input().split())\n    queue = list(map(int, input().split()))\n    ans = 1\n    stack = []\n    i = n - 1\n    m = 10 ** 9 + 7\n    while i >= 0:\n        temp = queue[i]\n        while stack and temp <= queue[stack[-1]]:\n            stack.pop(-1)\n        if stack:\n            ans = ans % m * (stack[-1] - i + 1) % m % m\n        stack.append(i)\n        i -= 1\n    print(ans)", "for _ in range(1):\n    (n, k) = map(int, input().split())\n    queue = list(map(int, input().split()))\n    ans = 1\n    stack = []\n    i = n - 1\n    m = 10 ** 9 + 7\n    while i >= 0:\n        temp = queue[i]\n        while stack and temp <= queue[stack[-1]]:\n            stack.pop(-1)\n        if stack:\n            ans = ans % m * (stack[-1] - i + 1) % m % m\n        stack.append(i)\n        i -= 1\n    print(ans)", "(N, K) = (int(x) for x in input().split())\nl = [int(x) for x in input().split()]\nf = 1\nstack = []\nfor i in range(N):\n    while stack and l[i] < l[stack[-1]]:\n        f = f * (i - stack.pop() + 1) % 1000000007\n    stack.append(i)\nprint(f)", "try:\n    (n, k) = map(int, input().split())\n    l = [int(i) for i in input().split()][:n]\n    st = [(float('-inf'), len(l))]\n    prod = 1\n    ans = 1\n    for i in range(n):\n        while l[i] < st[-1][0]:\n            prod = i - st[-1][1] + 1\n            ans = ans * prod % 1000000007\n            st.pop()\n        st.append((l[i], i))\n    print(ans)\nexcept:\n    pass", "(n, k) = map(int, input().split())\na = [int(i) for i in input().split()][:n]\nst = []\nans = 1\nfor i in range(n):\n    while len(st) > 0 and a[i] < a[st[-1]]:\n        ele = st.pop()\n        ans = ans * (i - ele + 1) % 1000000007\n    st.append(i)\nprint(ans)", "(n, k) = map(int, input().split())\na = [int(i) for i in input().split()][:n]\nst = []\nans = 1\nfor i in range(n):\n    while len(st) > 0 and a[i] < a[st[-1]]:\n        ele = st.pop()\n        ans = ans * (i - ele + 1) % 1000000007\n    st.append(i)\nprint(ans)", "(N, K) = map(int, input().split())\narr = list(map(int, input().split()))\nstack = []\noutput = 1\nfor i in range(N):\n    while len(stack) != 0 and arr[i] < arr[stack[-1]]:\n        element = stack.pop()\n        output = output * (i - element + 1) % 1000000007\n    stack.append(i)\nprint(output)", "(n, k) = map(int, input().split())\narr = list(map(int, input().split()))\nmod = 1000000007\nres = 1\nstack = []\nfor i in range(len(arr)):\n    while len(stack) != 0 and arr[stack[-1]] > arr[i]:\n        res = res * (i - stack.pop() + 1) % mod\n    stack.append(i)\nprint(res)", "(n, k) = map(int, input().split())\nl = [int(x) for x in input().split()]\nt = []\nf = 1\nm = 1000000007\nfor i in range(n):\n    while len(t) != 0 and l[i] < l[t[-1]]:\n        f = f * (i - t.pop() + 1) % m\n    t.append(i)\nprint(f)", "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nstk = []\nf = 1\nfor i in range(n):\n    while len(stk) != 0 and l[i] < l[stk[-1]]:\n        f = f * (i - stk.pop() + 1) % 1000000007\n    stk.append(i)\nprint(f)", "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nstk = []\nf = 1\nfor i in range(n):\n    while len(stk) != 0 and l[i] < l[stk[-1]]:\n        f = f * (i - stk.pop() + 1) % 1000000007\n    stk.append(i)\nprint(f)", "(a, b) = (int(a) for a in input().split())\nl = [int(a) for a in input().split()]\nd = 1\nstack = []\nfor i in range(a):\n    while stack and l[i] < l[stack[-1]]:\n        d = d * (i - stack.pop() + 1) % 1000000007\n    stack.append(i)\nprint(d)", "(n, k) = map(int, input().split())\nlst = list(map(int, input().strip().split()))[:n]\nfear = 1\nmod = 1000000007\ns = []\nfor i in range(0, n):\n    while len(s) != 0 and lst[i] < lst[s[-1]]:\n        fear = fear * (i - s.pop() + 1) % mod\n    s.append(i)\nprint(fear)", "(n, k) = map(int, input().split())\nl = [int(x) for x in input().split()]\na = []\nf = 1\nfor i in range(0, n):\n    while len(a) != 0 and l[i] < l[a[-1]]:\n        f = f * (i - a.pop() + 1) % 1000000007\n    a.append(i)\nprint(f)", "(n, k) = map(int, input().split())\nlst = list(map(int, input().split()))\nst = []\ntemp = 1\nfor i in range(n):\n    while len(st) != 0 and lst[i] < lst[st[-1]]:\n        temp = temp * (i - st.pop() + 1) % 1000000007\n    st.append(i)\nprint(temp)", "(n, k) = map(int, input().split())\nlst = list(map(int, input().strip().split()))[:n]\nfear = 1\nmod = 1000000007\ns = []\nfor i in range(0, n):\n    while len(s) != 0 and lst[i] < lst[s[-1]]:\n        fear = fear * (i - s.pop() + 1) % mod\n    s.append(i)\nprint(fear)", "def check(x, y):\n    d = 1000000007\n    return x * y % d\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\narr = []\nans = 1\nfor i in range(n):\n    while arr and a[arr[-1]] > a[i]:\n        ans = check(ans, i - arr.pop() + 1)\n    arr.append(i)\nprint(ans)", "(N, K) = map(int, input().split())\nlst = list(map(int, input().strip().split()))[:N]\nfear = 1\nmod = 1000000007\ns = []\nfor i in range(0, N):\n    while len(s) != 0 and lst[i] < lst[s[-1]]:\n        fear = fear * (i - s.pop() + 1) % mod\n    s.append(i)\nprint(fear)", "(t, m) = map(int, input().split())\nl = list(map(int, input().split()))\nstk = []\nm = 1\nfor i in range(t):\n    while len(stk) != 0 and l[i] < l[stk[-1]]:\n        m = m * (i - stk.pop() + 1) % 1000000007\n    stk.append(i)\nprint(m)", "(a, b) = (int(a) for a in input().split())\nl = [int(a) for a in input().split()]\nc = 1\nstack = []\nfor i in range(a):\n    while stack and l[i] < l[stack[-1]]:\n        c = c * (i - stack.pop() + 1) % 1000000007\n    stack.append(i)\nprint(c)", "def chefs(l, n):\n    stack1 = []\n    stack2 = []\n    sum1 = 1\n    x = 1\n    y = 1000000007\n    for i in range(n - 1, -1, -1):\n        while len(stack1) != 0 and stack1[-1] >= l[i]:\n            stack1.pop()\n            stack2.pop()\n        if len(stack1) == 0:\n            sum1 = 1\n        else:\n            sum1 = stack2[-1] - i + 1\n        stack1.append(l[i])\n        stack2.append(i)\n        x = x * sum1 % y\n    return x\n(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nprint(chefs(l, n))", "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nstk = []\ntf = 1\nfor i in range(len(a)):\n    while len(stk) and a[stk[-1]] > a[i]:\n        tf *= i - stk[-1] + 1\n        tf %= 1000000007\n        stk.pop()\n    stk.append(i)\nprint(tf)", "(X, Y) = (int(x) for x in input().split())\nl = [int(x) for x in input().split()]\nf = 1\nstack = []\nfor i in range(X):\n    while stack and l[i] < l[stack[-1]]:\n        f = f * (i - stack.pop() + 1) % 1000000007\n    stack.append(i)\nprint(f)", "(n, k) = [int(i) for i in input().split()]\narr = [int(i) for i in input().split()]\nn = len(arr)\nresult = 1\nstack = []\nfor i in range(n):\n    while len(stack) and arr[stack[-1]] > arr[i]:\n        result *= i - stack[-1] + 1\n        result %= 1000000007\n        stack.pop()\n    stack.append(i)\nprint(result)", "(n, k) = map(int, input().split())\nlst = list(map(int, input().split()))\nst = []\ntemp = 1\nfor i in range(n):\n    while len(st) != 0 and lst[i] < lst[st[-1]]:\n        temp = temp * (i - st.pop() + 1) % 1000000007\n    st.append(i)\nprint(temp)", "def mul(a, b):\n    return a * b % 1000000007\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\ns = []\nans = 1\nfor i in range(n):\n    while s and a[s[-1]] > a[i]:\n        ans = mul(ans, i - s.pop() + 1)\n    s.append(i)\nprint(ans)", "from sys import stdin\ninput = stdin.readline\nmod = 10 ** 9 + 7\n\ndef mul(a, b):\n    return a % mod * (b % mod) % mod\n\ndef answer():\n    s = []\n    ans = [1] * n\n    for i in range(n):\n        while len(s) and a[i] < a[s[-1]]:\n            ans[s[-1]] = i - s[-1] + 1\n            s.pop()\n        s.append(i)\n    val = 1\n    for i in range(n):\n        val = mul(val, ans[i])\n    return val\nfor T in range(1):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(answer())", "(n, k) = map(int, input().split())\nl = [int(x) for x in input().split()]\nt = []\nf = 1\nm = 1000000007\nfor i in range(n):\n    while len(t) != 0 and l[i] < l[t[-1]]:\n        f = f * (i - t.pop() + 1) % m\n    t.append(i)\nprint(f)", "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nstk = []\nf = 1\nfor i in range(n):\n    while len(stk) != 0 and l[i] < l[stk[-1]]:\n        f = f * (i - stk.pop() + 1) % 1000000007\n    stk.append(i)\nprint(f)", "(N, K) = (int(x) for x in input().split())\nl = [int(x) for x in input().split()]\nf = 1\nstack = []\nfor i in range(N):\n    while stack and l[i] < l[stack[-1]]:\n        f = f * (i - stack.pop() + 1) % 1000000007\n    stack.append(i)\nprint(f)", "(N, K) = (int(x) for x in input().split())\nl = [int(x) for x in input().split()]\nf = 1\nstack = []\nfor i in range(N):\n    while stack and l[i] < l[stack[-1]]:\n        f = f * (i - stack.pop() + 1) % 1000000007\n    stack.append(i)\nprint(f)", "prime = 1000000007\nt = 1\nfor test in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    stack = [(0, -1)]\n    prod = 1\n    for i in range(len(arr)):\n        for j in range(len(stack) - 1, -1, -1):\n            if arr[i] >= stack[j][0]:\n                stack.append((arr[i], i))\n                break\n            else:\n                prod = prod * (i - stack[j][1] + 1) % prime\n                stack.pop()\n    print(prod)", "prime = 1000000007\nt = 1\nfor test in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    stack = [(0, -1)]\n    prod = 1\n    for i in range(len(arr)):\n        for j in range(len(stack) - 1, -1, -1):\n            if arr[i] >= stack[j][0]:\n                stack.append((arr[i], i))\n                break\n            else:\n                prod = prod * (i - stack[j][1] + 1) % prime\n                stack.pop()\n    print(prod)", "(N, K) = (int(x) for x in input().split())\nlist1 = list((int(x) for x in input().split()))\nfear = 1\nstack = []\nfor i in range(N):\n    while stack and list1[i] < list1[stack[-1]]:\n        fear = fear * (i - stack.pop() + 1) % 1000000007\n    stack.append(i)\nprint(fear)", "mod = 1000000007\n(n, k) = map(int, input().split())\nQ = list(map(int, input().split()))\nS = []\nfearfulness = 1\nfor i in range(n):\n    while S and Q[i] < Q[S[-1]]:\n        fearfulness = fearfulness * (i - S.pop() + 1) % mod\n    S.append(i)\nprint(fearfulness)", "mod = 1000000007\n(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\nQ = []\nfearfulness = 1\nfor i in range(n):\n    while Q and l[i] < l[Q[-1]]:\n        fearfulness = fearfulness * (i - Q.pop() + 1) % mod\n    Q.append(i)\nprint(fearfulness)", "(n, k) = map(int, input().split())\nl1 = list(map(int, input().split()))\nstack = []\nans = 1\nfor i in range(n):\n    while stack and l1[i] < l1[stack[-1]]:\n        ans *= i - stack.pop() + 1\n        ans %= 1000000007\n    stack.append(i)\nprint(ans)", "(n, k) = [int(i) for i in input().split()]\narr = [int(i) for i in input().split()]\nn = len(arr)\nresult = 1\nstack = []\nfor i in range(n):\n    while len(stack) and arr[stack[-1]] > arr[i]:\n        result *= i - stack[-1] + 1\n        result %= 1000000007\n        stack.pop()\n    stack.append(i)\nprint(result)", "v = 1000000007\n(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\ns = []\nc = 1\nfor i in range(n):\n    while s and l[i] < l[s[-1]]:\n        c = c * (i - s.pop() + 1) % v\n    s.append(i)\nprint(c)", "val = 1000000007\n(n, k) = map(int, input().split())\nli = [int(x) for x in input().split()]\ns = []\nans = 1\nfor i in range(n):\n    while s and li[i] < li[s[-1]]:\n        ans = ans * (i - s.pop() + 1) % val\n    s.append(i)\nprint(ans)", "maxi = 1000000007\n(n, k) = map(int, input().split())\nli = list(map(int, input().split()))\ns = []\nx = 1\nfor i in range(n):\n    while s and li[i] < li[s[-1]]:\n        x = x * (i - s.pop() + 1) % maxi\n    s.append(i)\nprint(x)", "(n, k) = map(int, input().split())\nli = [int(x) for x in input().split()]\ns = []\nansw = 1\nval = 1000000007\nfor i in range(n):\n    while s and li[i] < li[s[-1]]:\n        answ = answ * (i - s.pop() + 1) % val\n    s.append(i)\nprint(answ)", "(x, y) = map(int, input().split())\na = [int(n) for n in input().split()]\nS = []\nr = 1\nl = 1000000007\nfor i in range(x):\n    while S and a[i] < a[S[-1]]:\n        r = r * (i - S.pop() + 1) % l\n    S.append(i)\nprint(r)", "m = 10 ** 9 + 7\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = []\nc = 1\nfor i in range(n):\n    while s and a[i] < a[s[-1]]:\n        c = c * (i - s.pop() + 1) % m\n    s.append(i)\nprint(c)", "(n, k) = map(int, input().split())\nli = [int(x) for x in input().split()]\ns = []\nres = 1\nm = 1000000007\nfor i in range(n):\n    while s and li[i] < li[s[-1]]:\n        res = res * (i - s.pop() + 1) % m\n    s.append(i)\nprint(res)", "m = 10 ** 9 + 7\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\ns = []\nan = 1\nfor i in range(n):\n    while s and a[s[-1]] > a[i]:\n        an = an * (i - s.pop() + 1) % m\n    s.append(i)\nprint(an)", "(a, b) = map(int, input().split())\nl = [int(x) for x in input().split()]\ns = []\nres = 1\nm = 1000000007\nfor i in range(a):\n    while s and l[i] < l[s[-1]]:\n        res = res * (i - s.pop() + 1) % m\n    s.append(i)\nprint(res)", "(a, b) = map(int, input().split())\nz = list(map(int, input().split()))\nm = 1000000007\ns = []\nk = 1\nfor i in range(a):\n    while len(s) != 0 and z[i] < z[s[-1]]:\n        k = k * (i - s.pop(-1) + 1) % m\n    s.append(i)\nprint(k)", "(n, k) = map(int, input().split())\nli = [int(x) for x in input().split()]\nstk = list()\nans = [1] * n\nstk.append(0)\nfor i in range(1, n):\n    while stk:\n        if li[i] < li[stk[-1]]:\n            ind = stk[-1]\n            f = i - stk[-1] + 1\n            ans[ind] = f\n            stk.pop()\n        else:\n            break\n    stk.append(i)\nres = 1\nfor i in ans:\n    res = res % 1000000007 * (i % 1000000007) % 1000000007\nprint(res)", "(n, k) = map(int, input().split())\nl = list(map(int, input().split()))\ns = []\nm = 1\nfor i in range(n):\n    while s and l[i] < l[s[-1]]:\n        m = m * (i - s.pop() + 1) % 1000000007\n    s.append(i)\nprint(m)", "(n, k) = map(int, input().split())\nli = [int(m) for m in input().split()]\ns = []\nres = 1\nm = 1000000007\nfor i in range(n):\n    while s and li[i] < li[s[-1]]:\n        res = res * (i - s.pop() + 1) % m\n    s.append(i)\nprint(res)", "(a, b) = map(int, input().split())\nl = list(map(int, input().split()))\nm = 1000000007\ns = []\nk = 1\nfor i in range(a):\n    while len(s) != 0 and l[i] < l[s[-1]]:\n        k = k * (i - s.pop(-1) + 1) % m\n    s.append(i)\nprint(k)", "(n, m) = map(int, input().split())\np = []\ntop = -1\nf = 1\nli = map(int, input().split())\nfor (i, m) in enumerate(li):\n    if top == -1:\n        p.append((i + 1, m))\n        top += 1\n    else:\n        while top != -1 and p[top][1] > m:\n            t = p.pop()\n            f *= i + 1 - t[0] + 1\n            f %= 1000000007\n            top -= 1\n        p.append((i + 1, m))\n        top += 1\nprint(f)", "(x, y) = map(int, input().split())\nl = list(map(int, input().split()))\nm = 1000000007\ns = []\np = 1\nfor i in range(x):\n    while len(s) != 0 and l[i] < l[s[-1]]:\n        p = p * (i - s.pop(-1) + 1) % m\n    s.append(i)\nprint(p)", "(n, k) = map(int, input().split())\nli = [int(x) for x in input().split()]\ns = []\nres = 1\nm = 1000000007\nfor i in range(n):\n    while s and li[i] < li[s[-1]]:\n        res = res * (i - s.pop() + 1) % m\n    s.append(i)\nprint(res)", "(n, k) = map(int, input().split())\nl = [int(x) for x in input().split()]\ns = []\nres = 1\nm = 1000000007\nfor i in range(n):\n    while s and l[i] < l[s[-1]]:\n        res = res * (i - s.pop() + 1) % m\n    s.append(i)\nprint(res)", "(N, m) = map(int, input().split())\np = []\ntop = -1\nf = 1\nlist1 = map(int, input().split())\nfor (i, m) in enumerate(list1):\n    if top == -1:\n        p.append((i + 1, m))\n        top += 1\n    else:\n        while top != -1 and p[top][1] > m:\n            t = p.pop()\n            f *= i + 1 - t[0] + 1\n            f %= 1000000007\n            top -= 1\n        p.append((i + 1, m))\n        top += 1\nprint(f)", "(n, k) = map(int, input().split())\nli = [int(x) for x in input().split()]\ns = []\nres = 1\nm = 1000000007\nfor i in range(n):\n    while s and li[i] < li[s[-1]]:\n        res = res * (i - s.pop() + 1) % m\n    s.append(i)\nprint(res)", "(n, k) = map(int, input().split())\nli = [int(x) for x in input().split()]\ns = []\nres = 1\nm = 1000000007\nfor i in range(n):\n    while s and li[i] < li[s[-1]]:\n        res = res * (i - s.pop() + 1) % m\n    s.append(i)\nprint(res)", "(a, b) = map(int, input().split())\nl = list(map(int, input().split()))\nm = 1000000007\ns = []\nk = 1\nfor i in range(a):\n    while len(s) != 0 and l[i] < l[s[-1]]:\n        k = k * (i - s.pop(-1) + 1) % m\n    s.append(i)\nprint(k)", "(n, m) = map(int, input().split())\np = []\ntop = -1\nf = 1\nlist1 = map(int, input().split())\nfor (i, m) in enumerate(list1):\n    if top == -1:\n        p.append((i + 1, m))\n        top += 1\n    else:\n        while top != -1 and p[top][1] > m:\n            t = p.pop()\n            f *= i + 1 - t[0] + 1\n            f %= 1000000007\n            top -= 1\n        p.append((i + 1, m))\n        top += 1\nprint(f)", "(a, b) = map(int, input().split())\nli = list(map(int, input().split()))\nm = 1000000007\ns = []\nk = 1\nfor i in range(a):\n    while len(s) != 0 and li[i] < li[s[-1]]:\n        k = k * (i - s.pop(-1) + 1) % m\n    s.append(i)\nprint(k)", "def mul(a, b):\n    return a * b % 1000000007\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\ns = []\nans = 1\nfor i in range(n):\n    while s and a[s[-1]] > a[i]:\n        ans = mul(ans, i - s.pop() + 1)\n    s.append(i)\nprint(ans)", "def mul(a, b):\n    return a * b % 1000000007\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\ns = []\nans = 1\nfor i in range(n):\n    while s and a[s[-1]] > a[i]:\n        ans = mul(ans, i - s.pop() + 1)\n    s.append(i)\nprint(ans)", "(a, b) = map(int, input().split())\nl = list(map(int, input().split()))\nm = 1000000007\ns = []\nk = 1\nfor i in range(a):\n    while len(s) != 0 and l[i] < l[s[-1]]:\n        k = k * (i - s.pop(-1) + 1) % m\n    s.append(i)\nprint(k)", "(a, b) = map(int, input().split())\nl = list(map(int, input().split()))\nm = 1000000007\ns = []\nk = 1\nfor i in range(a):\n    while len(s) != 0 and l[i] < l[s[-1]]:\n        k = k * (i - s.pop(-1) + 1) % m\n    s.append(i)\nprint(k)", "(a, b) = map(int, input().split())\nls = list(map(int, input().split()))\nm = 1000000007\nstk = []\nk = 1\nfor i in range(a):\n    while len(stk) != 0 and ls[i] < ls[stk[-1]]:\n        k = k * (i - stk.pop(-1) + 1) % m\n    stk.append(i)\nprint(k)", "mod = 1000000007\n\ndef mul(a, b):\n    return a * b % mod\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\ns = []\nans = 1\nfor i in range(n):\n    while s and a[s[-1]] > a[i]:\n        ans = mul(ans, i - s.pop() + 1)\n    s.append(i)\nprint(ans)", "p = 1000000007\n\ndef mul(a, b):\n    return a * b % p\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nst = []\nk = 1\nfor i in range(n):\n    while st and a[st[-1]] > a[i]:\n        k = mul(k, i - st.pop() + 1)\n    st.append(i)\nprint(k)"]