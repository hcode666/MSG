["for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    g = l[0]\n    g -= 1\n    p = l[1]\n    l = l[2:]\n    s = sum(l[g:])\n    s -= l[g]\n    mini = s // p + 1\n    maxi = l[g] + s % p\n    if maxi % p == 0:\n        print(mini, mini + maxi // p - 1)\n    else:\n        print(mini, mini + maxi // p)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    g = l[0]\n    g -= 1\n    p = l[1]\n    l = l[2:]\n    s = sum(l[g:])\n    s -= l[g]\n    mini = s // p + 1\n    maxi = l[g] + s % p\n    if maxi % p == 0:\n        print(mini, mini + maxi // p - 1)\n    else:\n        print(mini, mini + maxi // p)", "for _ in range(int(input())):\n    N = list(map(int, input().split()))\n    G = N[0]\n    P = N[1]\n    Y = sum(N[G + 1:])\n    if G == 10:\n        X = 1\n    else:\n        X = sum(N[G + 2:]) + 1\n    print(-(-X // P), -(-Y // P))", "for _ in range(int(input())):\n    N = list(map(int, input().split()))\n    G = N[0]\n    P = N[1]\n    Y = sum(N[G + 1:])\n    if G == 10:\n        X = 1\n    else:\n        X = sum(N[G + 2:]) + 1\n    print(-(-X // P), -(-Y // P))", "import math\nt = int(input())\nfor _ in range(t):\n    i = list(map(int, input().split()))\n    g = i[0]\n    p = i[1]\n    x = i[2:]\n    gp = sum(x[g:])\n    gmin = gp + 1\n    gmax = gp + x[g - 1]\n    print(math.ceil(gmin / p), math.ceil(gmax / p))", "for _ in range(int(input())):\n    N = list(map(int, input().split()))\n    G = N[0]\n    P = N[1]\n    Y = sum(N[G + 1:])\n    if G == 10:\n        X = 1\n    else:\n        X = sum(N[G + 2:]) + 1\n    print(-(-X // P), -(-Y // P))", "def lisin():\n    a = list(map(int, input().split()))\n    return a\nfor tastcas in range(int(input())):\n    a = lisin()\n    g = a.pop(0)\n    p = a.pop(0)\n    bef = 0\n    for i in range(9, g - 1, -1):\n        bef += a[i]\n    d = bef // p\n    mi = d + 1\n    t = bef + a[g - 1]\n    ma = t // p\n    if t > ma * p:\n        ma += 1\n    print(mi, ma)", "def lisin():\n    a = list(map(int, input().split()))\n    return a\nfor tastcas in range(int(input())):\n    a = lisin()\n    g = a.pop(0)\n    p = a.pop(0)\n    bef = 0\n    for i in range(9, g - 1, -1):\n        bef += a[i]\n    d = bef // p\n    mi = d + 1\n    t = bef + a[g - 1]\n    ma = t // p\n    if t > ma * p:\n        ma += 1\n    print(mi, ma)", "def lisin():\n    a = list(map(int, input().split()))\n    return a\nfor tastcas in range(int(input())):\n    a = lisin()\n    g = a.pop(0)\n    p = a.pop(0)\n    bef = 0\n    for i in range(9, g - 1, -1):\n        bef += a[i]\n    d = bef // p\n    mi = d + 1\n    t = bef + a[g - 1]\n    ma = t // p\n    if t > ma * p:\n        ma += 1\n    print(mi, ma)", "def lisin():\n    a = list(map(int, input().split()))\n    return a\nfor tastcas in range(int(input())):\n    a = lisin()\n    g = a.pop(0)\n    p = a.pop(0)\n    bef = 0\n    for i in range(9, g - 1, -1):\n        bef += a[i]\n    d = bef // p\n    mi = d + 1\n    t = bef + a[g - 1]\n    ma = t // p\n    if t > ma * p:\n        ma += 1\n    print(mi, ma)", "t = int(input())\nwhile t:\n    x = list(map(int, input().split()))\n    g = x[0]\n    p = x[1]\n    x.pop(0)\n    x.pop(0)\n    su = 0\n    for i in range(len(x) - 1, g - 1, -1):\n        su += x[i]\n    day = su // p\n    min_day = day + 1\n    su += x[g - 1]\n    if su % p == 0:\n        max_day = su // p\n    else:\n        max_day = su // p + 1\n    print(min_day, max_day)\n    t -= 1", "t = int(input())\nwhile t:\n    x = list(map(int, input().split()))\n    g = x[0]\n    p = x[1]\n    x.pop(0)\n    x.pop(0)\n    su = 0\n    for i in range(len(x) - 1, g - 1, -1):\n        su += x[i]\n    day = su // p\n    min_day = day + 1\n    su += x[g - 1]\n    if su % p == 0:\n        max_day = su // p\n    else:\n        max_day = su // p + 1\n    print(min_day, max_day)\n    t -= 1", "t = int(input())\nwhile t:\n    x = list(map(int, input().split()))\n    g = x[0]\n    p = x[1]\n    x.pop(0)\n    x.pop(0)\n    su = 0\n    for i in range(len(x) - 1, g - 1, -1):\n        su += x[i]\n    day = su // p\n    min_day = day + 1\n    su += x[g - 1]\n    if su % p == 0:\n        max_day = su // p\n    else:\n        max_day = su // p + 1\n    print(min_day, max_day)\n    t -= 1", "from collections import Counter\nfrom math import ceil, floor, log, gcd\nimport bisect as bs\nimport sys\ninput = sys.stdin.readline\ninp_lis = lambda : list(map(int, input().split()))\ninp_multi = lambda : map(int, input().split())\ninp_int = lambda : int(input().strip())\nfor _ in range(int(input().strip())):\n    (g, p, *l) = list(map(int, input().strip().split()))\n    n = len(l)\n    l = l[::-1]\n    s = 0\n    last = n - g\n    i = 0\n    for i in range(last):\n        s += l[i]\n    (mini, maxi) = (0, 0)\n    mini = ceil((s + 1) / p)\n    s += l[last]\n    maxi = int(ceil(s / p))\n    print(mini, maxi, sep=' ')", "for _ in range(int(input())):\n    (g, p, *x) = list(map(int, input().strip().split()))\n    n = len(x)\n    x = x[::-1]\n    mn = 0\n    i = -1\n    for i in range(n - g):\n        mn += x[i]\n    mx = mn + (x[i + 1] - 1)\n    a = mn // p\n    b = mx // p\n    print(a + 1, b + 1)", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    (g, p, *x) = list(map(int, input().strip().split()))\n    n = len(x)\n    x = x[::-1]\n    mini = 0\n    i = -1\n    for i in range(n - g):\n        mini += x[i]\n    maxi = mini + (x[i + 1] - 1)\n    a = mini // p\n    b = maxi // p\n    print(a + 1, b + 1)", "from math import ceil\nfor _ in range(int(input())):\n    input_arr = list(map(int, input().strip().split(' ')))\n    G = input_arr[0]\n    P = input_arr[1]\n    X = input_arr[G + 1:]\n    vaccination_group = X[0]\n    total_to_vaccinate = sum(X)\n    min_to_vaccinate = sum(X[1:])\n    min_days = ceil((min_to_vaccinate + 1) / P)\n    max_days = ceil(total_to_vaccinate / P)\n    print(min_days, max_days)", "import math\ntry:\n    t = int(input())\n    for i in range(t):\n        arr = list(map(int, input().split()))\n        sum = 0\n        for x in range(-1, arr[0] - 11, -1):\n            sum += arr[x]\n        if sum % arr[1] == 0:\n            minimum = sum // arr[1] + 1\n        else:\n            minimum = math.ceil(sum / arr[1])\n        maximum = math.ceil((sum + arr[arr[0] - 11]) / arr[1])\n        print(minimum, maximum)\nexcept:\n    pass", "t = int(input())\nwhile t:\n    x = list(map(int, input().split()))\n    g = x[0]\n    p = x[1]\n    x.pop(0)\n    x.pop(0)\n    su = 0\n    for i in range(len(x) - 1, g - 1, -1):\n        su += x[i]\n    day = su // p\n    min_day = day + 1\n    su += x[g - 1]\n    if su % p == 0:\n        max_day = su // p\n    else:\n        max_day = su // p + 1\n    print(min_day, max_day)\n    t -= 1", "t = int(input())\nwhile t:\n    x = list(map(int, input().split()))\n    g = x[0]\n    p = x[1]\n    x.pop(0)\n    x.pop(0)\n    su = 0\n    for i in range(len(x) - 1, g - 1, -1):\n        su += x[i]\n    day = su // p\n    min_day = day + 1\n    su += x[g - 1]\n    if su % p == 0:\n        max_day = su // p\n    else:\n        max_day = su // p + 1\n    print(min_day, max_day)\n    t -= 1", "t = int(input())\nwhile t:\n    x = list(map(int, input().split()))\n    g = x[0]\n    p = x[1]\n    x.pop(0)\n    x.pop(0)\n    su = 0\n    for i in range(len(x) - 1, g - 1, -1):\n        su += x[i]\n    day = su // p\n    min_day = day + 1\n    su += x[g - 1]\n    if su % p == 0:\n        max_day = su // p\n    else:\n        max_day = su // p + 1\n    print(min_day, max_day)\n    t -= 1", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (g, p, *l) = list(map(int, input().split()))\n    cur = l[g - 1]\n    s = sum(l[g:])\n    _min = ceil((s + 1) / p)\n    _max = ceil((s + cur) / p)\n    print(_min, _max)", "import math\np = int(input())\nfor i in range(p):\n    l = list(map(int, input().split()))\n    q = 0\n    e = l[0]\n    g = l[1]\n    for i in range(e + 2, 12):\n        q += l[i]\n    x = l[e + 1] + q % g\n    ans = q // g\n    y = ans + 1\n    m = ans + math.ceil(x / g)\n    print(y, end=' ')\n    print(m)", "import math\nt = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    c = 0\n    a = l[0]\n    b = l[1]\n    for i in range(a + 2, 12):\n        c += l[i]\n    x = l[a + 1] + c % b\n    ans = c // b\n    y = ans + 1\n    m = ans + math.ceil(x / b)\n    print(y, end=' ')\n    print(m)", "for _ in range(int(input())):\n    (g, p, *a) = list(map(int, input().split()))\n    if g == 10:\n        b = a[-1] % p\n        if b == 0:\n            print(1, a[-1] // p)\n        else:\n            print(1, a[-1] // p + 1)\n    else:\n        c = sum(a[g - 1:]) % p\n        b = sum(a[g:]) // p + 1\n        if c == 0:\n            c = sum(a[g - 1:]) // p\n        else:\n            c = sum(a[g - 1:]) // p + 1\n        print(b, c)", "def requ(l, d):\n    if (l / d).is_integer():\n        return int(l / d)\n    else:\n        return int(l / d) + 1\nfor _ in range(int(input())):\n    data = list(map(int, input().split()))\n    dose = data[1]\n    chef = data[0] + 1\n    vacinated = sum(data[chef + 1:])\n    up_flat = vacinated / dose\n    if up_flat.is_integer():\n        up_flat = int(up_flat)\n        if data[chef] <= dose:\n            up_flat += 1\n            print(up_flat, up_flat)\n        else:\n            req = requ(data[chef], dose)\n            print(up_flat + 1, up_flat + req)\n    else:\n        up_flat = int(up_flat) + 1\n        extra = dose * up_flat - vacinated\n        if extra >= data[chef]:\n            print(up_flat, up_flat)\n        else:\n            req = requ(data[chef] - extra, dose)\n            print(up_flat, up_flat + req)", "import math\nt = int(input())\nfor _ in range(t):\n    x = 0\n    li = list(map(int, input().split()))\n    g = li[0]\n    p = li[1]\n    for i in range(g + 2, 12):\n        x += li[i]\n    val1 = li[g + 1] + x % p\n    ans = x // p\n    mn = ans + 1\n    mx = ans + math.ceil(val1 / p)\n    print(mn, end=' ')\n    print(mx)", "import math\nt = int(input())\nfor _ in range(t):\n    x = 0\n    li = list(map(int, input().split()))\n    g = li[0]\n    p = li[1]\n    for i in range(g + 2, 12):\n        x += li[i]\n    val1 = li[g + 1] + x % p\n    ans = x // p\n    mn = ans + 1\n    mx = ans + math.ceil(val1 / p)\n    print(mn, end=' ')\n    print(mx)", "for _ in range(int(input())):\n    (g, p, *x) = map(int, input().split())\n    x = list(x)\n    (a, b) = (sum(x[-1:g - 11:-1]) + 1, sum(x[-1:g - 12:-1]))\n\n    def ceil(x, p):\n        if x % p == 0:\n            return x // p\n        else:\n            return x // p + 1\n    print(ceil(a, p), ceil(b, p))", "from math import ceil\nfor t in range(int(input())):\n    l = list(map(int, input().split()))\n    (g, p) = (l[0], l[1])\n    l = l[2:]\n    sum = 0\n    for i in range(len(l) - 1, g - 1, -1):\n        sum += l[i]\n    min_day = ceil((sum + 1) / p)\n    max_day = ceil((sum + l[g - 1]) / p)\n    print(min_day, max_day)", "for i in range(int(input())):\n    arr = list(map(int, input().split()))\n    g = arr[0]\n    d = arr[1]\n    count = 0\n    s = sum(arr[g + 2:len(arr)])\n    r = s % d\n    c = s // d\n    print(c + 1, end=' ')\n    s = r + arr[arr[0] + 1]\n    r = s % d\n    c1 = s // d\n    if r != 0:\n        print(c1 + c + 1)\n    else:\n        print(c1 + c)", "T = int(input())\nfor _ in range(T):\n    l = []\n    (G, P, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) = input().split()\n    G = int(G)\n    P = int(P)\n    X1 = int(X1)\n    X2 = int(X2)\n    X3 = int(X3)\n    X4 = int(X4)\n    X5 = int(X5)\n    X6 = int(X6)\n    X7 = int(X7)\n    X8 = int(X8)\n    X9 = int(X9)\n    X10 = int(X10)\n    l.append(X1)\n    l.append(X2)\n    l.append(X3)\n    l.append(X4)\n    l.append(X5)\n    l.append(X6)\n    l.append(X7)\n    l.append(X8)\n    l.append(X9)\n    l.append(X10)\n    a = 0\n    b = 0\n    for j in range(G, 10):\n        a += l[j]\n    Min = a // P\n    Min += 1\n    for k in range(G - 1, 10):\n        b += l[k]\n    Max = b // P\n    if b % P == 0:\n        pass\n    else:\n        Max += 1\n    print(Min, Max)", "T = int(input())\nfor _ in range(T):\n    l = []\n    (G, P, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) = input().split()\n    G = int(G)\n    P = int(P)\n    X1 = int(X1)\n    X2 = int(X2)\n    X3 = int(X3)\n    X4 = int(X4)\n    X5 = int(X5)\n    X6 = int(X6)\n    X7 = int(X7)\n    X8 = int(X8)\n    X9 = int(X9)\n    X10 = int(X10)\n    l.append(X1)\n    l.append(X2)\n    l.append(X3)\n    l.append(X4)\n    l.append(X5)\n    l.append(X6)\n    l.append(X7)\n    l.append(X8)\n    l.append(X9)\n    l.append(X10)\n    a = 0\n    b = 0\n    for j in range(G, 10):\n        a += l[j]\n    Min = a // P\n    Min += 1\n    for k in range(G - 1, 10):\n        b += l[k]\n    Max = b // P\n    if b % P == 0:\n        pass\n    else:\n        Max += 1\n    print(Min, Max)", "import math\nt = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    l.append(0)\n    g = l[0]\n    p = l[1]\n    min = 1\n    max = 0\n    for i in range(g + 2, len(l)):\n        min += l[i]\n    for j in range(g + 1, len(l)):\n        max += l[j]\n    print(math.ceil(min / p), math.ceil(max / p))", "T = int(input())\nfor _ in range(T):\n    l = []\n    (G, P, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10) = input().split()\n    G = int(G)\n    P = int(P)\n    X1 = int(X1)\n    X2 = int(X2)\n    X3 = int(X3)\n    X4 = int(X4)\n    X5 = int(X5)\n    X6 = int(X6)\n    X7 = int(X7)\n    X8 = int(X8)\n    X9 = int(X9)\n    X10 = int(X10)\n    l.append(X1)\n    l.append(X2)\n    l.append(X3)\n    l.append(X4)\n    l.append(X5)\n    l.append(X6)\n    l.append(X7)\n    l.append(X8)\n    l.append(X9)\n    l.append(X10)\n    a = 0\n    b = 0\n    for j in range(G, 10):\n        a += l[j]\n    Min = a // P\n    Min += 1\n    for k in range(G - 1, 10):\n        b += l[k]\n    Max = b // P\n    if b % P == 0:\n        pass\n    else:\n        Max += 1\n    print(Min, Max)", "import math\nt = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    l.append(0)\n    g = l[0]\n    p = l[1]\n    min = 1\n    max = 0\n    for i in range(g + 2, len(l)):\n        min += l[i]\n    for j in range(g + 1, len(l)):\n        max += l[j]\n    print(math.ceil(min / p), math.ceil(max / p))", "import math\nfor i in range(int(input())):\n    l = [int(x) for x in input().split()]\n    (g, p) = (l[0], l[1])\n    s = sum(l[g + 2:12]) // p\n    j = math.ceil((sum(l[g + 2:12]) % p + l[g + 1]) / p) + s\n    print(s + 1, j)", "from math import ceil\nfor i in range(int(input())):\n    nums = [int(x) for x in input().split()]\n    g = nums[0]\n    p = nums[1]\n    nums = nums[2:]\n    nums = nums[g - 1:]\n    summation = sum(nums)\n    ans = ceil((summation - nums[0] + 1) / p)\n    print(ans, ceil(summation / p))", "import math\nfor _ in range(int(input())):\n    x = list(map(int, input().split()))\n    (g, p) = (x[0], x[1])\n    x = x[2:]\n    sm = sum(x[g:])\n    sn = sum(x[g - 1:])\n    mx = [0, math.ceil(sn / p)]\n    (q, r) = divmod(sm, p)\n    mx[0] = q + 1\n    print(*mx)", "import math\nfor _ in range(int(input())):\n    temp = 0\n    arr = list(map(int, input().split()))\n    (g, p) = (arr[0], arr[1])\n    for i in range(g + 2, 12):\n        temp += arr[i]\n    ans = temp // p\n    sum = arr[g + 1] + temp % p\n    print(ans + 1, end=' ')\n    print(ans + math.ceil(sum / p))", "import math\nfor _ in range(int(input())):\n    l = [int(x) for x in input().split()]\n    (g, p) = (l[0], l[1])\n    s = sum(l[g + 2:12]) // p\n    j = math.ceil((sum(l[g + 2:12]) % p + l[g + 1]) / p) + s\n    print(s + 1, j)", "import math\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    g = l[0]\n    p = l[1]\n    persons = 0\n    for i in range(g + 2, 12):\n        persons += l[i]\n    total = persons % p + l[g + 1]\n    min_val = persons // p\n    print(min_val + 1, end=' ')\n    max_val = min_val + math.ceil(total / p)\n    print(max_val)", "import math\nfor _ in range(int(input())):\n    line1 = list(map(int, input().split()))\n    g = line1[0]\n    p = line1[1]\n    persons = 0\n    for i in range(g + 2, 12):\n        persons += line1[i]\n    total = persons % p + line1[g + 1]\n    min_val = persons // p\n    print(min_val + 1, end=' ')\n    max_val = min_val + math.ceil(total / p)\n    print(max_val)", "import math\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    g = l[0]\n    p = l[1]\n    persons = 0\n    for i in range(g + 2, 12):\n        persons += l[i]\n    total = persons % p + l[g + 1]\n    min_val = persons // p\n    print(min_val + 1, end=' ')\n    max_val = min_val + math.ceil(total / p)\n    print(max_val)", "import math\nfor _ in range(int(input())):\n    line1 = list(map(int, input().split()))\n    g = line1[0]\n    p = line1[1]\n    persons = 0\n    for i in range(g + 2, 12):\n        persons += line1[i]\n    total = persons % p + line1[g + 1]\n    min_val = persons // p\n    print(min_val + 1, end=' ')\n    max_val = min_val + math.ceil(total / p)\n    print(max_val)", "import math\nt = int(input())\nfor i in range(t):\n    l = [int(x) for x in input().split()]\n    (g, p) = (l[0], l[1])\n    s = sum(l[g + 2:12]) // p\n    j = math.ceil((sum(l[g + 2:12]) % p + l[g + 1]) / p) + s\n    print(s + 1, j)", "import math\nt = int(input())\nfor i in range(t):\n    line1 = input().split(' ')\n    G = int(line1[0])\n    p = int(line1[1])\n    sum = 0\n    arr = []\n    sum = sum + int(line1[2])\n    arr.append(sum)\n    sum = sum + int(line1[3])\n    arr.append(sum)\n    sum = sum + int(line1[4])\n    arr.append(sum)\n    sum = sum + int(line1[5])\n    arr.append(sum)\n    sum = sum + int(line1[6])\n    arr.append(sum)\n    sum = sum + int(line1[7])\n    arr.append(sum)\n    sum = sum + int(line1[8])\n    arr.append(sum)\n    sum = sum + int(line1[9])\n    arr.append(sum)\n    sum = sum + int(line1[10])\n    arr.append(sum)\n    sum = sum + int(line1[11])\n    arr.append(sum)\n    total = arr[9]\n    useful = total - arr[G - 1]\n    min = math.ceil((useful + 1) / p)\n    max = math.ceil((useful + int(line1[G + 1])) / p)\n    print(min, max)", "n = int(input())\nfor _ in range(n):\n    lyst = list(map(int, input().split(' ')))\n    (g, p, c) = (lyst[0], lyst[1], 0)\n    lyst = lyst[2:]\n    for i in range(g - 1, 10):\n        c += lyst[i]\n    k = lyst[g - 1]\n    a = c - k\n    m = a // p + 1\n    l = a % p + k\n    n = l // p\n    if l % p != 0:\n        n += 1\n    print(m, n + m - 1)", "t = int(input())\nfor i in range(t):\n    a = list(map(int, input().split()))\n    (x, y) = (a[0], a[1])\n    b = a[x + 1:]\n    print(sum(b[1:]) // y + 1, end=' ')\n    k = sum(b)\n    if k % y == 0:\n        print(k // y)\n    else:\n        print(k // y + 1)", "import math\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    g = l[0]\n    p = l[1]\n    l = l[2:]\n    s = 0\n    for i in range(9, g - 1, -1):\n        s += l[i]\n    c = l[g - 1]\n    print(math.ceil((s + 1) / p), math.ceil((s + c) / p))", "import math\nfor _ in range(int(input())):\n    dem = 0\n    arr = list(map(int, input().split()))\n    (A, P) = (arr[0], arr[1])\n    for i in range(A + 2, 12):\n        dem += arr[i]\n    ans = dem // P\n    sum = arr[A + 1] + dem % P\n    print(ans + 1, end=' ')\n    print(ans + math.ceil(sum / P))", "import math\nfor i in range(int(input())):\n    arr = list(map(int, input().split()))\n    (g, p) = (arr[0], arr[1])\n    loc = g + 2\n    (s, mind, maxd) = (0, 0, 0)\n    for j in range(loc, len(arr)):\n        s += arr[j]\n    mind = math.ceil((s + 1) / p)\n    maxd = math.ceil((s + arr[g + 1]) / p)\n    print(mind, maxd)", "import math\nfor i in range(int(input())):\n    l = [int(i) for i in input().split()][:12]\n    g = l[0]\n    p = l[1]\n    o = 0\n    for i in range(g + 2, 12):\n        o += l[i]\n    total = o % p + l[g + 1]\n    ans = o // p\n    print(ans + 1, end=' ')\n    ansmax = ans + math.ceil(total / p)\n    print(ansmax)", "import math\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    g = l[0]\n    p = l[1]\n    oldpeople = 0\n    for i in range(g + 2, 12):\n        oldpeople += l[i]\n    total = oldpeople % p + l[g + 1]\n    ans = oldpeople // p\n    print(ans + 1, end=' ')\n    ansmax = ans + math.ceil(total / p)\n    print(ansmax)", "import math\nfor _ in range(int(input())):\n    dem = 0\n    arr = list(map(int, input().split()))\n    (G, P) = (arr[0], arr[1])\n    for i in range(G + 2, 12):\n        dem += arr[i]\n    ans = dem // P\n    sum = arr[G + 1] + dem % P\n    print(ans + 1, end=' ')\n    print(ans + math.ceil(sum / P))", "import math\nfor _ in range(int(input())):\n    megaa = list(map(int, input().split()))\n    (g, p, x) = (megaa[0], megaa[1], megaa[2:])\n    b4_chef_total = sum(x[g:])\n    cheff_tt = b4_chef_total + 1\n    maxx_cheff = b4_chef_total + x[g - 1]\n    print(math.ceil(cheff_tt / p), math.ceil(maxx_cheff / p))", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    lst = list(map(int, input().split()))\n    X = lst[0]\n    P = lst[1]\n    lst = lst[2:]\n    sum = 0\n    for i in range(X, 10):\n        sum += lst[i]\n    min = sum // P\n    sum = sum % P\n    while sum >= P:\n        min += 1\n        sum -= P\n    sum += lst[X - 1]\n    max = min + math.ceil(sum / P)\n    print(min + 1, max)", "import math\nfor _ in range(int(input())):\n    dem = 0\n    arr = list(map(int, input().split()))\n    (G, P) = (arr[0], arr[1])\n    for i in range(G + 2, 12):\n        dem += arr[i]\n    ans = dem // P\n    sum = arr[G + 1] + dem % P\n    print(ans + 1, end=' ')\n    print(ans + math.ceil(sum / P))", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    lst = list(map(int, input().split()))\n    X = lst[0]\n    P = lst[1]\n    lst = lst[2:]\n    sum = 0\n    for i in range(X, 10):\n        sum += lst[i]\n    min = sum // P\n    sum = sum % P\n    while sum >= P:\n        min += 1\n        sum -= P\n    sum += lst[X - 1]\n    max = min + math.ceil(sum / P)\n    print(min + 1, max)", "import math\nfrom math import ceil\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    g = l[0]\n    p = l[1]\n    x = l[2:12]\n    chef_group = l[g + 1]\n    before_chef = sum(l[g + 2:12])\n    case_a = before_chef + 1\n    case_b = before_chef + chef_group\n    min_days = ceil(case_a / p)\n    max_days = ceil(case_b / p)\n    print(min_days, max_days)", "from math import ceil\nfor t in range(int(input())):\n    given = list(map(int, input().split()))\n    chef = given[0]\n    p = given[1]\n    chef_group_people = given[chef + 1]\n    before_chef = sum(given[chef + 2:12])\n    case_1 = before_chef + 1\n    case_2 = before_chef + chef_group_people\n    min_days = ceil(case_1 / p)\n    max_days = ceil(case_2 / p)\n    print(min_days, max_days)", "import math\nt = int(input())\nfor i in range(t):\n    arr = list(map(int, input().split()))\n    g = arr[0]\n    p = arr[1]\n    diff = 0\n    for i in range(g + 2, 12):\n        diff += arr[i]\n    x = diff // p\n    Sum = arr[g + 1] + diff % p\n    print(x + 1, end=' ')\n    print(x + math.ceil(Sum / p))", "from math import ceil\nfor t in range(int(input())):\n    given = list(map(int, input().split()))\n    chef = given[0]\n    p = given[1]\n    chef_group_people = given[chef + 1]\n    before_chef = sum(given[chef + 2:12])\n    case_1 = before_chef + 1\n    case_2 = before_chef + chef_group_people\n    min_days = ceil(case_1 / p)\n    max_days = ceil(case_2 / p)\n    print(min_days, max_days)", "import math\n\ndef read():\n    return list(map(int, input().split()))\nt = read()[0]\nfor i in range(t):\n    x = read()\n    g = x[0]\n    p = x[1]\n    x = x[2:]\n    y = x[g:]\n    sumy = 0\n    for i in y:\n        sumy += i\n    min = math.ceil((sumy + 1) / p)\n    max = math.ceil((sumy + x[g - 1]) / p)\n    print(min, max)", "import math\nt = int(input())\nfor _ in range(t):\n    age_groups_list = ['#']\n    age_groups_list.extend(list(map(int, input().split())))\n    G = age_groups_list.pop(1)\n    P = age_groups_list.pop(1)\n    total_persons = sum(age_groups_list[G + 1:])\n    min_days = math.ceil((total_persons + 1) / P)\n    max_days = math.ceil((total_persons + age_groups_list[G]) / P)\n    print(min_days, max_days)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    l = list(map(int, sys.stdin.readline().split()))\n    (g, p) = l[:2]\n    x = l[2:]\n    s = sum(x[g:])\n    d = s // p\n    minimum = d + 1\n    s = s + x[g - 1]\n    d2 = s // p\n    r = s % p\n    if r == 0:\n        maximum = d2\n    else:\n        maximum = d2 + 1\n    print(minimum, maximum)", "t = int(input())\nwhile t:\n    z = list(map(int, input().split()))\n    (g, p) = (z[0], z[1])\n    l = z[g + 1:]\n    print(sum(l[1:]) // p + 1, end=' ')\n    k = sum(l)\n    if k % p == 0:\n        print(k // p)\n    else:\n        print(k // p + 1)\n    t -= 1", "T = int(input())\nfor i in range(T):\n    a = [int(s) for s in input().split()]\n    (age_grp, cap) = (a[0], a[1])\n    sum_1 = sum(a[age_grp + 2:])\n    sum_2 = sum(a[age_grp + 1:])\n    mini = sum_1 // cap + 1\n    maxi = sum_2 // cap\n    if maxi * cap != sum_2:\n        maxi += 1\n    print(mini, maxi)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    arr = list(map(int, input().split()))\n    j = arr[0] + 1\n    i = 11\n    sum1 = 0\n    while i > j:\n        sum1 = sum1 + arr[i]\n        i -= 1\n    p = arr[1]\n    print((sum1 + p) // p, (sum1 + p - 1 + arr[i]) // p)", "from math import ceil\nfor _ in range(int(input())):\n    arr = list(map(int, input().split()))\n    g = arr.pop(0)\n    p = arr.pop(0)\n    older = sum(arr[g:])\n    min_days = int(ceil((older + 1) / p))\n    max_days = int(ceil((older + arr[g - 1]) / p))\n    print(min_days, max_days)", "import math\nn = int(input())\nmainlist = []\nfor i in range(n):\n    arr = [int(i) for i in input().strip().split()]\n    Days = []\n    G = arr[0]\n    P = arr[1]\n    ageGrp = arr[2:]\n    ageOlder = sum(ageGrp[G:])\n    minDays = int(math.ceil((ageOlder + 1) / P))\n    maxDays = int(math.ceil((ageOlder + ageGrp[G - 1]) / P))\n    print(minDays, maxDays)", "for _ in range(int(input())):\n    s = list(map(int, input().split()))\n    (g, p, l) = (s[0], s[1], list(s[2:]))\n    s = sum(l[g:])\n    a = s // p\n    print(a + 1, end=' ')\n    s1 = a * p\n    s1 += p\n    s += l[g - 1]\n    print(a + 1 + (s - s1 + p - 1) // p)", "import math\nfor _ in range(int(input())):\n    x = list(map(int, input().split()))\n    s1 = sum([x[i] for i in range(x[0] + 2, 12)])\n    print(s1 // x[1] + 1, s1 // x[1] + math.ceil((x[x[0] + 1] + s1 % x[1]) / x[1]), sep=' ')", "import math\nt = int(input())\nwhile t:\n    raw = list(map(int, input().split()))\n    g = raw[0]\n    p = raw[1]\n    x = raw[2:]\n    x.insert(0, 0)\n    total = 0\n    for i in range(g + 1, len(x)):\n        total += x[i]\n    days = total // p\n    remaining = total % p\n    min_days = days + 1\n    x[g] += remaining\n    max_days = math.ceil(x[g] / p) + days\n    print('{} {}'.format(min_days, max_days))\n    t -= 1", "import math\nfor _ in range(int(input())):\n    dem = 0\n    arr = list(map(int, input().split()))\n    (G, P) = (arr[0], arr[1])\n    for i in range(G + 2, 12):\n        dem += arr[i]\n    ans = dem // P\n    sum = arr[G + 1] + dem % P\n    print(ans + 1, end=' ')\n    print(ans + math.ceil(sum / P))", "import math\nfor t in range(int(input())):\n    lst = list(map(int, input().split()))\n    g = lst.pop(0)\n    p = lst.pop(0)\n    mintotal = sum(lst[g:])\n    mintm = mintotal // p + 1\n    maxtm = math.ceil(sum(lst[g - 1:]) / p)\n    print(mintm, maxtm)", "import math\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    dem = 0\n    arr = list(map(int, input().split()))\n    (G, P) = (arr[0], arr[1])\n    for i in range(G + 2, 12):\n        dem += arr[i]\n    ans = dem // P\n    sum = arr[G + 1] + dem % P\n    print(ans + 1, end=' ')\n    print(ans + math.ceil(sum / P))", "import math\nfor _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    (g, p) = (l[0], l[1])\n    l = l[2:].copy()\n    days = sum(l[g:]) // p\n    rem = sum(l[g:]) % p\n    temp = l[g - 1] + rem\n    print(days + 1, days + math.ceil(temp / p))", "import math\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    (g, p) = (l[0], l[1])\n    l1 = l[2:]\n    min_day = sum(l1[g:]) // p + 1\n    max_day = math.ceil(sum(l1[g - 1:]) / p)\n    print(min_day, int(max_day))", "T = int(input())\nfor i in range(T):\n    days = 0\n    min_days = 0\n    max_days = 0\n    vaccines_left = 0\n    sum = 0\n    li = list(map(int, input().split()))\n    for j in range(11, li[0] + 1, -1):\n        sum += li[j]\n    days += sum // li[1]\n    min_days = days + 1\n    total_vaccines = min_days * li[1]\n    vaccines_left = total_vaccines - sum\n    peeps = li[li[0] + 1]\n    if peeps <= vaccines_left:\n        max_days = min_days\n    else:\n        peeps -= vaccines_left\n        if peeps % li[1] == 0:\n            max_days = min_days + peeps // li[1]\n        else:\n            max_days = min_days + peeps // li[1] + 1\n    print(min_days, max_days)", "import math\nfor _ in range(int(input())):\n    lis = list(map(int, input().split()))\n    lis = lis + [0] * 3\n    G = lis.pop(0)\n    P = lis.pop(0)\n    v = sum(lis[G:10])\n    mi = v // P\n    ab = lis[G] + v % P\n    r = P - v % P\n    h = lis[G - 1] - r\n    f = h // P\n    if h % P == 0:\n        ma = mi + f + 1\n    else:\n        ma = f + mi + 2\n    print(mi + 1, ma)", "import math\nfor _ in range(int(input())):\n    dem = 0\n    arr = list(map(int, input().split()))\n    (G, P) = (arr[0], arr[1])\n    for i in range(G + 2, 12):\n        dem += arr[i]\n    ans = dem // P\n    sum = arr[G + 1] + dem % P\n    print(ans + 1, end=' ')\n    print(ans + math.ceil(sum / P))", "import sys\nMOD = 1000000007\ninp = sys.stdin.readline\n\ndef ii():\n    return int(inp())\n\ndef iis():\n    return [int(i) for i in inp().split()]\nt = ii()\nfor _ in range(t):\n    (g, p, *x) = iis()\n    total_ppl_to_vac_till_g = sum(x[g:])\n    people_min = total_ppl_to_vac_till_g + 1\n    days_min = people_min // p\n    if people_min % p != 0:\n        days_min += 1\n    people_max = total_ppl_to_vac_till_g + x[g - 1]\n    days_max = people_max // p\n    if people_max % p != 0:\n        days_max += 1\n    print(days_min, days_max)", "for i in range(int(input())):\n    arr = [int(x) for x in input().split()]\n    g = arr[0]\n    p = arr[1]\n    x = arr[2:]\n    s = x[g:]\n    s = sum(s)\n    ans = 0\n    mi = s // p + 1\n    r = p - s % p\n    a = x[g - 1] - r\n    ma = a // p\n    if a % p == 0:\n        print(mi, ma + mi)\n    else:\n        print(mi, ma + mi + 1)", "import math\nt = int(input())\nwhile t > 0:\n    inp = [int(i) for i in input().split(' ')]\n    g = inp.pop(0)\n    p = inp.pop(0)\n    x = inp\n    minim = -1\n    maxim = -1\n    above_g = sum(x[g:])\n    if above_g < p:\n        minim = 1\n    elif above_g == p:\n        minim = 2\n    else:\n        minim = math.floor(above_g / p) + 1\n    with_g = above_g + x[g - 1]\n    if with_g <= p:\n        maxim = 1\n    else:\n        maxim = math.ceil(with_g / p)\n    print(str(minim) + ' ' + str(maxim))\n    t -= 1", "import math\nfor t in range(int(input())):\n    gpx = list(map(int, input().split()))\n    g = int(gpx[0])\n    p = int(gpx[1])\n    x = gpx[2:]\n    summ = sum(x[g:])\n    remain = summ // p\n    minn = remain + 1\n    maxx = math.ceil((summ + x[g - 1]) / p)\n    print(minn, maxx)", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    (g, p) = (l[0], l[1])\n    x = l[2:]\n    org_arr = x\n    before_sum = 0\n    for i in range(g, 10):\n        before_sum += org_arr[i]\n    min_days = int(before_sum / p) + 1\n    g_count = org_arr[g - 1]\n    temp_1 = int((g_count + before_sum) / p)\n    if temp_1 * p == g_count + before_sum:\n        max_days = temp_1\n    else:\n        max_days = temp_1 + 1\n    print('{} {}'.format(min_days, max_days))", "from math import ceil\nfor tc in range(int(input())):\n    X = list(map(int, input().split()))\n    G = X.pop(0)\n    P = X.pop(0)\n    X.insert(0, 0)\n    req1 = sum(X[G + 1:])\n    req2 = sum(X[G:])\n    print(ceil((req1 + 1) / P), ceil(req2 / P))", "import math\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    g = l[0]\n    p = l[1]\n    s = 0\n    for i in range(g + 2, 12):\n        s = s + l[i]\n    a = s // p\n    sum = l[g + 1] + s % p\n    print(a + 1, end=' ')\n    print(a + math.ceil(sum / p))", "import math\nfor _ in range(int(input())):\n    n = 0\n    a = list(map(int, input().split()))\n    (x, p) = (a[0], a[1])\n    for i in range(x + 2, 12):\n        n += a[i]\n    m = n // p\n    sum = a[x + 1] + n % p\n    print(m + 1, end=' ')\n    print(m + math.ceil(sum / p))", "import math\nfor _ in range(int(input())):\n    a = list(map(int, input().split()))\n    (g, p) = (a[0], a[1])\n    c = 0\n    for i in range(g + 2, 12):\n        c += a[i]\n    d = c // p\n    s = a[g + 1] + c % p\n    print(d + 1, end=' ')\n    print(d + math.ceil(s / p))", "(n, l) = (int(input()), [])\nfor j in range(n):\n    m = list(map(int, input().strip().split()))\n    lo = (sum(m[m[0] + 2:]) + 1) // m[1]\n    lo = lo + 1 if (sum(m[m[0] + 2:]) + 1) % m[1] != 0 else lo\n    u = sum(m[m[0] + 1:]) // m[1]\n    u = u + 1 if sum(m[m[0] + 1:]) % m[1] != 0 else u\n    l.append([lo, u])\nfor i in l:\n    print(i[0], ' ', i[1])", "import math\ntry:\n    for _ in range(int(input())):\n        l = list(map(int, input().split()))\n        g = l[0]\n        p = l[1]\n        v = l[2:]\n        sum = 0\n        for i in range(g, 10):\n            sum += v[i]\n        ans = sum // p\n        flag = v[g - 1] + sum % p\n        min = ans + 1\n        max = ans + math.ceil(flag / p)\n        print(min, max)\nexcept:\n    pass", "fin = []\nfor _ in range(int(input())):\n    lst = list(map(int, input().split()))\n    (g, p) = (lst[0] - 1, lst[1])\n    lst.pop(0)\n    lst.pop(0)\n    minn = round((1 + sum(lst[g + 1:])) / p + 0.4999999)\n    maxx = round(sum(lst[g:]) / p + 0.4999999)\n    print(minn, maxx)", "import math\nfor _ in range(int(input())):\n    lst = list(map(int, input().split()))\n    g = lst[0]\n    p = lst[1]\n    days = 0\n    left = 0\n    total = 0\n    c = 0\n    age = lst[g + 1]\n    for i in range(g + 2, 12):\n        c += 1\n        total += lst[i]\n    days = total // p\n    left = total % p\n    mini = maxi = 0\n    s = age + left\n    print(days + 1, end=' ')\n    print(days + math.ceil(s / p))", "t = int(input())\nfor _ in range(t):\n    X = list(map(int, input().split()))\n    (i, k) = (11, 0)\n    (g, p) = (X[0], X[1])\n    while i > g + 1:\n        k += X[i]\n        i -= 1\n    d_min = (k + p) // p\n    d_max = (k + X[g + 1]) // p\n    if (k + X[g + 1]) % p != 0:\n        d_max += 1\n    print(d_min, d_max)", "import math\nfor _ in range(int(input())):\n    ls = list(map(int, input().split()))\n    summ = 0\n    for i in range(ls[0] + 2, len(ls)):\n        summ += ls[i]\n    minim = math.ceil((summ + 1) / ls[1])\n    maxm = math.ceil((summ + ls[ls[0] + 1]) / ls[1])\n    print(minim, maxm)\n    summ = 0", "import math\nn = int(input())\nfor i in range(n):\n    m = list(map(int, input().split()))\n    sum = 0\n    for i in range(10 - m[0]):\n        sum += m[11 - i]\n    if sum % m[1] == 0:\n        print(math.ceil(sum / m[1]) + 1, end=' ')\n        print(math.ceil((sum + m[m[0] + 1]) / m[1]))\n    else:\n        print(math.ceil(sum / m[1]), end=' ')\n        print(math.ceil((sum + m[m[0] + 1]) / m[1]))"]