["for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "import collections\ncase = int(input())\nfor _ in range(case):\n    (n, m) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    arr.sort()\n    dq = collections.deque(arr)\n    res = 0\n    while len(dq) > 2:\n        value = dq.popleft() - 1\n        dq.append(dq.pop() + dq.pop())\n        if value > 0:\n            dq.appendleft(value)\n        res += 1\n    if len(dq) == 2:\n        res += 1\n    print(res)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    (l1, l2) = ([], [])\n    for i in range(m):\n        if a[i] == 1:\n            l1.append(a[i])\n        else:\n            l2.append(a[i])\n    (ans, temp) = (0, False)\n    if len(l1) == m:\n        print(m // 2)\n        temp = True\n    a.sort()\n    s = 0\n    c = 0\n    p1 = m - 1\n    while p1 >= 0:\n        s += a[p1]\n        c += 1\n        p1 -= 1\n        if s >= n - (c - 1) and c != 0:\n            break\n    if temp == False:\n        print(c - 1)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    c = 0\n    j = m - 1\n    for i in range(m - 1):\n        if l[i + 1] != 0:\n            c += 1\n            l[j] -= 1\n            if l[j] == 0:\n                j -= 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    (l1, l2) = ([], [])\n    for i in range(m):\n        if a[i] == 1:\n            l1.append(a[i])\n        else:\n            l2.append(a[i])\n    (ans, temp) = (0, False)\n    if len(l1) == m:\n        print(m // 2)\n        temp = True\n    a.sort()\n    s = 0\n    c = 0\n    p1 = m - 1\n    while p1 >= 0:\n        s += a[p1]\n        c += 1\n        p1 -= 1\n        if s >= n - (c - 1) and c != 0:\n            break\n    if temp == False:\n        print(c - 1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    s = 0\n    c = 0\n    p1 = m - 1\n    while p1 >= 0:\n        s += arr[p1]\n        c += 1\n        p1 -= 1\n        if s >= n - (c - 1) and c != 0:\n            break\n    print(c - 1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    s = 0\n    c = 0\n    p1 = m - 1\n    while p1 >= 0:\n        if s + arr[p1] <= n:\n            c += 1\n            s += arr[p1]\n        p1 -= 1\n        if s >= n - (c - 1) and c != 0:\n            break\n    print(c - 1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    s = 0\n    c = 0\n    p1 = m - 1\n    while p1 >= 0:\n        if s + arr[p1] <= n:\n            c += 1\n            s += arr[p1]\n            p1 -= 1\n        else:\n            p1 -= 1\n        if s >= n - (c - 1) and c != 0:\n            break\n    print(c - 1)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    c = 0\n    j = m - 1\n    for i in range(m - 1):\n        if l[i + 1] != 0:\n            c += 1\n            l[j] -= 1\n            if l[j] == 0:\n                j -= 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    c = 0\n    for i in range(m):\n        if m - i - 1 > c:\n            if m - i - 2 > c + a[i]:\n                c += a[i]\n            elif m - i - 2 == c + a[i]:\n                c += a[i]\n                break\n            else:\n                c = m - i - 1\n        else:\n            break\n    print(c)", "def solve():\n    (n, m) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    arr.sort()\n    s = 0\n    k = m\n    i = 0\n    while k > 1:\n        arr[i] -= 1\n        s += 1\n        if arr[i] == 0:\n            i += 1\n            k -= 1\n        k -= 1\n    print(s)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if len(l) == 1:\n        print(0)\n        continue\n    l.sort(reverse=True)\n    l1 = []\n    j = 0\n    l1.append(l.pop())\n    cnt = 0\n    while j < len(l) - 1:\n        if l1[0] > 0:\n            l1[0] -= 1\n            j += 1\n            cnt += 1\n        elif l1[0] == 0:\n            l1.pop()\n            if j < len(l) - 2:\n                l1.append(l.pop())\n            else:\n                cnt += 1\n                j += 1\n    if len(l1) > 0 and l1[0] > 0:\n        cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    A.sort()\n    M -= 1\n    Doughnuts = 0\n    for i in range(len(A)):\n        if M == 0:\n            break\n        if M >= A[i]:\n            Doughnuts += A[i]\n            M = max(0, M - A[i] - 1)\n        else:\n            Doughnuts += M\n            M = 0\n    print(Doughnuts)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    l = len(arr)\n    current = 0\n    count = 0\n    while current < l - 1:\n        arr[current] -= 1\n        p = arr.pop()\n        l -= 1\n        arr[-1] += p + 1\n        count += 1\n        if arr[current] == 0:\n            current += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    l = len(arr)\n    current = 0\n    count = 0\n    while current < l - 1:\n        arr[current] -= 1\n        p = arr.pop()\n        l -= 1\n        arr[-1] += p + 1\n        count += 1\n        if arr[current] == 0:\n            current += 1\n    print(count)", "def soln(n, m, arr):\n    arr.sort()\n    res = 0\n    low = 0\n    high = m - 2\n    while low <= high:\n        res += min(arr[low], high - low + 1)\n        high -= arr[low]\n        low += 1\n    return res\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(soln(n, m, arr))", "def solve():\n    (n, m) = map(int, input().split())\n    lis = sorted(list(map(int, input().split())))\n    ans = int()\n    f = 1\n    sum = int()\n    i = 0\n    high = m - 2\n    low = 0\n    while low <= high:\n        if lis[low] > 0:\n            lis[low] -= 1\n            ans += 1\n            high -= 1\n        else:\n            low += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, m) = map(int, input().split())\n    lis = sorted(list(map(int, input().split())))\n    ans = int()\n    f = 1\n    sum = int()\n    i = 0\n    high = m - 2\n    low = 0\n    while low <= high:\n        if lis[low] > 0:\n            lis[low] -= 1\n            ans += 1\n            high -= 1\n        else:\n            low += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, m) = map(int, input().split())\n    lis = sorted(list(map(int, input().split())))\n    ans = int()\n    f = 1\n    sum = int()\n    i = 0\n    high = m - 2\n    low = 0\n    while low <= high:\n        if lis[low] > 0:\n            lis[low] -= 1\n            ans += 1\n            high -= 1\n        else:\n            low += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, m) = map(int, input().split())\n    lis = sorted(list(map(int, input().split())))\n    ans = int()\n    f = 1\n    sum = int()\n    i = 0\n    high = m - 2\n    low = 0\n    while low <= high:\n        if lis[low] > 0:\n            lis[low] -= 1\n            ans += 1\n            high -= 1\n        else:\n            low += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    d = a + [m - 1]\n    d.sort()\n    if d[0] == m - 1:\n        print(m - 1)\n    else:\n        d.remove(m - 1)\n        c = 0\n        while len(d) > 2:\n            if d[0] == 1:\n                d.pop(0)\n            else:\n                d[0] -= 1\n            d[-2] = d[-1] + d[-2] + 1\n            d.pop()\n            c += 1\n        if len(d) == 1:\n            print(c)\n        else:\n            print(c + 1)", "def solve():\n    (n, m) = map(int, input().split())\n    lis = sorted(list(map(int, input().split())))\n    ans = int()\n    f = 1\n    sum = int()\n    i = 0\n    high = m - 2\n    low = 0\n    while low <= high:\n        if lis[low] > 0:\n            lis[low] -= 1\n            ans += 1\n            high -= 1\n        else:\n            low += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, m) = map(int, input().split())\n    lis = sorted(list(map(int, input().split())))\n    ans = int()\n    f = 1\n    sum = int()\n    i = 0\n    high = m - 2\n    low = 0\n    while low <= high:\n        if lis[low] > 0:\n            lis[low] -= 1\n            ans += 1\n            high -= 1\n        else:\n            low += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, m) = map(int, input().split())\n    lis = sorted(list(map(int, input().split())))\n    ans = int()\n    (low, high) = (0, m - 2)\n    while low <= high:\n        if lis[low] > 0:\n            lis[low] -= 1\n            lis[high] += lis[high + 1]\n            high -= 1\n            ans += 1\n        else:\n            low += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "out = []\nt = int(input())\nfor i in range(t):\n    (n, m) = [int(j) for j in input().split()]\n    l = [int(j) for j in input().split()]\n    l.sort()\n    c = 0\n    d = 0\n    for i in l:\n        c += i\n        d += 1\n        if c > m - 1 - d:\n            d -= 1\n            break\n        if c == m - 1 - d:\n            break\n    out.append(m - 1 - d)\nfor i in out:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    vals = list(map(int, input().split()))\n    vals.sort()\n    gaps = m - 1\n    cuts = 0\n    while vals[0] < gaps:\n        cuts += vals[0]\n        gaps = gaps - (vals[0] + 1)\n        vals.pop(0)\n    print(cuts + gaps)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    vals = list(map(int, input().split()))\n    vals.sort()\n    gaps = m - 1\n    cuts = 0\n    while vals[0] < gaps:\n        cuts += vals[0]\n        gaps = gaps - (vals[0] + 1)\n        vals.pop(0)\n    print(cuts + gaps)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    numoflnk = m - 1\n    nthdon = 0\n    while numoflnk > 0:\n        if a[nthdon] < numoflnk:\n            numoflnk -= a[nthdon] + 1\n            count += a[nthdon]\n            nthdon += 1\n            continue\n        numoflnk -= 1\n        count += 1\n    print(count)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    numoflnk = m - 1\n    nthdon = 0\n    while numoflnk > 0:\n        if a[nthdon] < numoflnk:\n            numoflnk -= a[nthdon] + 1\n            count += a[nthdon]\n            nthdon += 1\n            continue\n        numoflnk -= 1\n        count += 1\n    print(count)", "a = int(input())\nfor i in range(a):\n    (N, M) = map(int, input().split())\n    A = list(map(int, input().split()))\n    b = max(A)\n    c = min(A)\n    A.sort()\n    m = M\n    x = 0\n    for j in range(M):\n        if m <= 1:\n            break\n        elif A[j] >= m - 2:\n            if A[j] == m - 2 or A[j] == m - 1:\n                x = sum(A[:j + 1])\n                break\n            else:\n                x = sum(A[:j]) + m - 1\n                break\n        else:\n            m -= A[j] + 1\n    print(x)", "a = int(input())\nfor i in range(a):\n    (N, M) = map(int, input().split())\n    A = list(map(int, input().split()))\n    b = max(A)\n    c = min(A)\n    A.sort()\n    m = M\n    x = 0\n    for j in range(M):\n        if m <= 1:\n            break\n        elif A[j] >= m - 2:\n            if A[j] == m - 2 or A[j] == m - 1:\n                x = sum(A[:j + 1])\n                break\n            else:\n                x = sum(A[:j]) + m - 1\n                break\n        else:\n            m -= A[j] + 1\n    print(x)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    numoflnk = m - 1\n    nthdon = 0\n    while numoflnk > 0:\n        if a[nthdon] < numoflnk:\n            numoflnk -= a[nthdon] + 1\n            count += a[nthdon]\n            nthdon += 1\n            continue\n        numoflnk -= 1\n        count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    x = 0\n    y = m - 2\n    while x <= y:\n        if a[x] > 0:\n            a[x] -= 1\n            a[y] += a[y + 1]\n            c += 1\n            y -= 1\n        else:\n            x += 1\n    print(c)", "T = int(input())\nfor t in range(T):\n    (N, M) = map(int, input().split())\n    A = [int(a) for a in input().split()]\n    A.sort()\n    c = 0\n    i = 0\n    j = M - 2\n    while i <= j:\n        if A[i] > 0:\n            A[i] -= 1\n            A[j] += A[j + 1]\n            c += 1\n            j -= 1\n        else:\n            i += 1\n    print(c)", "T = int(input())\nfor t in range(T):\n    (N, M) = map(int, input().split())\n    A = [int(a) for a in input().split()]\n    A.sort()\n    c = 0\n    i = 0\n    j = M - 2\n    while i <= j:\n        if A[i] > 0:\n            A[i] -= 1\n            A[j] += A[j + 1]\n            c += 1\n            j -= 1\n        else:\n            i += 1\n    print(c)", "T = int(input())\nfor t in range(T):\n    (N, M) = map(int, input().split())\n    A = [int(a) for a in input().split()]\n    A.sort()\n    c = 0\n    i = 0\n    j = M - 2\n    while i <= j:\n        if A[i] > 0:\n            A[i] -= 1\n            A[j] += A[j + 1]\n            c += 1\n            j -= 1\n        else:\n            i += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = 0\n    m -= 1\n    for i in range(m + 1):\n        d += a[i]\n        if d >= m - i - 1:\n            if d == m - i - 1:\n                print(m - i - 1)\n            else:\n                print(m - i)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += v[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for i in range(m):\n        temp = m - (i + 1)\n        ans += a[i]\n        if ans >= temp - 1:\n            if ans == temp - 1:\n                print(temp - 1)\n            else:\n                print(temp)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    mli = list(map(int, input().split()))\n    mli.sort()\n    count = 0\n    while len(mli) > 1:\n        mli[0] -= 1\n        if mli[0] == 0:\n            mli.pop(0)\n        mli.pop()\n        count += 1\n    print(count)", "def solve():\n    lst.sort()\n    count = 0\n    i = 0\n    j = m - 1\n    while i < j:\n        if lst[i] > 0:\n            j = j - 1\n            count += 1\n            lst[i] = lst[i] - 1\n        else:\n            i = i + 1\n    print(count)\nt = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    solve()", "def solve():\n    lst.sort()\n    count = 0\n    i = 0\n    j = m - 1\n    while i < j:\n        if lst[i] > 0:\n            j = j - 1\n            count += 1\n            lst[i] = lst[i] - 1\n        else:\n            i = i + 1\n    print(count)\nt = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    solve()", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\nimport bisect\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        (n, m) = sm()\n        cooked_donuts = ln()\n        cooked_donuts.sort()\n        s = 0\n        index = 0\n        for i in range(m):\n            s += cooked_donuts[i] + 1\n            if s >= m:\n                index = i\n                break\n        print(m - index - 1)\nmain()", "for _ in range(int(input())):\n    (N, M) = input().split()\n    N = int(N)\n    M = int(M)\n    a = []\n    count = 0\n    a = list(map(int, input().split()))\n    lun = len(a)\n    a.sort()\n    while len(a) > 1:\n        a[0] -= 1\n        if a[0] == 0:\n            a.pop(0)\n        a.pop(len(a) - 1)\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    (N, M) = input().split()\n    N = int(N)\n    M = int(M)\n    a = []\n    count = 0\n    a = list(map(int, input().split()))\n    lun = len(a)\n    a.sort()\n    while len(a) > 1:\n        a[0] -= 1\n        if a[0] == 0:\n            a.pop(0)\n        a.pop(len(a) - 1)\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    count = 0\n    a.sort()\n    while len(a) > 1:\n        a[0] -= 1\n        if a[0] == 0:\n            a.pop(0)\n        a.pop(len(a) - 1)\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    count = 0\n    a.sort()\n    while len(a) > 1:\n        a[0] -= 1\n        if a[0] == 0:\n            a.pop(0)\n        a.pop(len(a) - 1)\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    (N, M) = input().split()\n    N = int(N)\n    M = int(M)\n    a = []\n    count = 0\n    a = list(map(int, input().split()))\n    lun = len(a)\n    a.sort()\n    while len(a) > 1:\n        a[0] -= 1\n        if a[0] == 0:\n            a.pop(0)\n        a.pop(len(a) - 1)\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    (k, n) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    cnt = 0\n    x = 0\n    lst.sort()\n    while len(lst) > 2:\n        while lst[0] != 0:\n            if len(lst) == 2:\n                break\n            lst[-2] += lst[-1]\n            del lst[-1]\n            cnt += 1\n            lst[0] -= 1\n            if lst[0] == 0:\n                del lst[0]\n                break\n    if lst[0] == 0:\n        del lst[0]\n    if len(lst) == 2:\n        print(cnt + 1)\n    else:\n        print(cnt)", "for _ in range(int(input())):\n    (k, n) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    cnt = 0\n    x = 0\n    lst.sort()\n    while len(lst) > 2:\n        while lst[0] != 0:\n            if len(lst) == 2:\n                break\n            lst[-2] += lst[-1]\n            del lst[-1]\n            cnt += 1\n            lst[0] -= 1\n            if lst[0] == 0:\n                del lst[0]\n                break\n    if lst[0] == 0:\n        del lst[0]\n    if len(lst) == 2:\n        print(cnt + 1)\n    else:\n        print(cnt)", "for T in range(int(input())):\n    (N, M) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    Rem = M - 1\n    Ans = 0\n    if M == 1:\n        print(0)\n        continue\n    for Ai in A:\n        v = Ai + 1\n        if Rem - v == 0:\n            Ans += Ai\n            break\n        elif Rem - v > 0:\n            Rem -= v\n            Ans += Ai\n        else:\n            Ans += Rem\n            Rem = 0\n            break\n    print(Ans)", "for _ in range(int(input())):\n    (N, M) = input().split()\n    N = int(N)\n    M = int(M)\n    a = []\n    count = 0\n    a = list(map(int, input().split()))\n    lun = len(a)\n    a.sort()\n    while len(a) > 1:\n        a[0] -= 1\n        if a[0] == 0:\n            a.pop(0)\n        a.pop(len(a) - 1)\n        count += 1\n    print(count)", "from sys import stdin, stdout\nimport math\nfrom itertools import permutations, combinations\nfrom collections import defaultdict\n\ndef L():\n    return list(map(int, stdin.readline().split()))\n\ndef In():\n    return map(int, stdin.readline().split())\n\ndef I():\n    return int(stdin.readline())\nP = 1000000007\n\ndef main():\n    try:\n        for _ in range(I()):\n            (t, n) = In()\n            a = L()\n            a.sort()\n            s = 0\n            c = 0\n            for i in range(n):\n                s += a[i] + 1\n                if s >= n:\n                    c = i\n                    break\n            print(n - c - 1)\n    except:\n        pass\nmain()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    A = list(map(int, input().split(' ')))\n    A.sort()\n    count = 0\n    i = 0\n    while True:\n        mini = A[i]\n        i += 1\n        if mini < m:\n            count += mini\n            m = m - 1 - mini\n        else:\n            count += m - 1\n            m = 1\n        if m < 2:\n            break\n    print(count)", "for _ in range(int(input())):\n    (k, n) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    cnt = 0\n    x = 0\n    lst.sort()\n    while len(lst) > 2:\n        while lst[0] != 0:\n            if len(lst) == 2:\n                break\n            lst[-2] += lst[-1]\n            del lst[-1]\n            cnt += 1\n            lst[0] -= 1\n            if lst[0] == 0:\n                del lst[0]\n                break\n    if lst[0] == 0:\n        del lst[0]\n    if len(lst) == 2:\n        print(cnt + 1)\n    else:\n        print(cnt)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    A = list(map(int, input().split(' ')))\n    A.sort()\n    count = 0\n    i = 0\n    while True:\n        mini = A[i]\n        i += 1\n        if mini < m:\n            count += mini\n            m = m - 1 - mini\n        else:\n            count += m - 1\n            m = 1\n        if m < 2:\n            break\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    A = list(map(int, input().split(' ')))\n    A.sort()\n    count = 0\n    i = 0\n    while True:\n        mini = A[i]\n        i += 1\n        if mini < m:\n            count += mini\n            m = m - 1 - mini\n        else:\n            count += m - 1\n            m = 1\n        if m < 2:\n            break\n    print(count)", "from sys import stdin, stdout\nimport math\nfrom itertools import permutations, combinations\nfrom collections import defaultdict\n\ndef L():\n    return list(map(int, stdin.readline().split()))\n\ndef In():\n    return map(int, stdin.readline().split())\n\ndef I():\n    return int(stdin.readline())\nP = 1000000007\n\ndef main():\n    try:\n        for _ in range(I()):\n            (t, n) = In()\n            a = L()\n            a.sort()\n            s = 0\n            c = 0\n            for i in range(n):\n                s += a[i] + 1\n                if s >= n:\n                    c = i\n                    break\n            print(n - c - 1)\n    except:\n        pass\nmain()", "for _ in range(int(input())):\n    (n, m) = map(int, input().strip().split())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    total = 0\n    ans = 0\n    for i in range(m):\n        k = m - i - total - 1\n        if k <= a[i]:\n            ans = total + k\n            break\n        total += a[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    chains = list(map(int, input().split()))\n    chains.sort()\n    d = 0\n    cuts = m - 1\n    for i in chains:\n        if d < cuts:\n            if i > cuts - d:\n                d = cuts\n                break\n            if i <= cuts:\n                cuts = cuts - 1\n                d = d + i\n        else:\n            break\n    print(d)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = 0\n    c = 0\n    for i in range(m):\n        s += a[i] + 1\n        if s >= m:\n            c = i\n            break\n    print(m - c - 1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    noofcuts = 0\n    l = [int(x) for x in input().split()]\n    l = sorted(l)\n    while l[0] < m - 1:\n        m -= 1\n        m -= l[0]\n        noofcuts += l[0]\n        del l[0]\n    if l[0] == m - 2:\n        noofcuts += m - 2\n    elif l[0] > m - 2:\n        noofcuts += m - 1\n    print(noofcuts)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    while m - 1 > 0:\n        y = a[0]\n        if y <= m - 2:\n            a.pop(0)\n            m -= 1\n            m -= y\n            c += y\n        elif y > m - 2:\n            y = m - 1\n            a[0] = y - m + 1\n            m -= y\n            c += y\n    print(c)", "t = int(input())\nwhile t > 0:\n    nm = input().split()\n    n = int(nm[0])\n    m = int(nm[1])\n    a = input().split()\n    for i in range(m):\n        a[i] = int(a[i])\n    i = 0\n    j = m - 1\n    x = 0\n    a = sorted(a)\n    while i < j:\n        a[i] -= 1\n        a[j] += 1\n        x += 1\n        if a[i] == 0:\n            i += 1\n        j -= 1\n    print(x)\n    t -= 1", "for _ in range(int(input())):\n    z = input().split()\n    (n, m) = map(int, z[:2])\n    z = input().split()\n    ds = list(map(int, z[:m]))\n    lnks = m - 1\n    ds.sort()\n    while lnks > 0:\n        if ds[0] <= lnks:\n            lnks -= ds.pop(0) + 1\n        else:\n            ds[0] -= lnks\n            lnks = 0\n    print(n - sum(ds))", "ans = 0\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [int(j) for j in input().split()]\n    a = sorted(a)\n    t = m - 1\n    k = 0\n    while k < t:\n        while a[k] > 0 and k < t:\n            ans = ans + 1\n            a[k] = a[k] - 1\n            t = t - 1\n        k = k + 1\n    print(ans)\n    ans = 0", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 0\n    (i, j) = (0, m - 1)\n    while i < j:\n        while i < j and arr[i] > 0:\n            ans += 1\n            j -= 1\n            arr[i] -= 1\n        i += 1\n    print(ans)", "import sys\n\ndef ans():\n    for _ in range(int(sys.stdin.readline())):\n        (n, m) = map(int, sys.stdin.readline().split())\n        a_m = list(map(int, sys.stdin.readline().split()))\n        d = {}\n        for i in a_m:\n            d[i] = True\n        a_m.sort()\n        a_m.reverse()\n        chain = a_m[0]\n        i = 1\n        b = m - 1\n        cuts = 0\n        if n in d:\n            chain = n\n            cuts = 0\n        elif a_m[0] > n:\n            cuts = 1\n        while chain < n and i < m:\n            chain += a_m[i]\n            if chain < n:\n                chain += 1\n                a_m[b] -= 1\n                if a_m[b] == 0:\n                    b -= 1\n            cuts += 1\n            i += 1\n        yield cuts\nfor i in ans():\n    print(i)", "tc = int(input())\nwhile tc:\n    flag = 0\n    (n, m) = input().split(' ')\n    n = int(n)\n    m = int(m)\n    a = []\n    x = str(input())\n    a = list(x.split(' '))\n    a = [int(i) for i in a]\n    a.sort()\n    required_split = m - 1\n    split_count = 0\n    for i in range(m):\n        if required_split <= 0:\n            break\n        elif a[i] <= required_split:\n            required_split -= a[i] + 1\n            split_count += a[i]\n        elif a[i] > required_split:\n            split_count += required_split\n            required_split = 0\n    if a[len(a) - 1] == 1:\n        split_count = int(m / 2)\n    print(split_count)\n    tc -= 1", "t = int(input())\nwhile t > 0:\n    x = input().split(' ')\n    n = int(x[0])\n    m = int(x[1])\n    count = 0\n    a = []\n    y = input().split(' ')\n    for i in range(m):\n        a.append(int(y[i]))\n    q = m - 1\n    s = 0\n    a.sort()\n    for i in range(m):\n        if a[i] < q:\n            s = s + a[i]\n            q = q - a[i] - 1\n    if q > 0:\n        s = s + q\n    print(s)\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = map(int, input().split())\n    l = list(l)\n    l.sort()\n    c = 0\n    j = m - 1\n    for i in range(len(l)):\n        if l[i] < j:\n            j = j - 1 - l[i]\n            c = c + l[i]\n        else:\n            break\n    ans = c + j\n    print(ans)", "def count_cuts(chains):\n    big_index = len(chains) - 1\n    small_index = 0\n    cuts = 0\n    while big_index > small_index:\n        if chains[small_index] == 0:\n            small_index += 1\n            continue\n        else:\n            chains[small_index] = chains[small_index] - 1\n        cuts += 1\n        big_index -= 1\n    return cuts\nt = int(input())\nfor case in range(t):\n    (N, M) = list(map(int, input().split()))\n    chains = sorted(list(map(int, input().split())))\n    print(count_cuts(chains))", "t = int(input())\nfor __ in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    i = 0\n    ans = 0\n    while True:\n        if m == 1:\n            break\n        if a[i] + 2 <= m:\n            m -= a[i] + 1\n            ans += a[i]\n            i += 1\n        else:\n            ans += m - 1\n            m = 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    donuts = sorted([int(x) for x in input().split()])\n    links = m - 1\n    end = len(donuts) - 1\n    for i in range(len(donuts)):\n        if i >= end or donuts[i] >= links:\n            break\n        else:\n            d = donuts[i]\n            if i >= end - d:\n                break\n            else:\n                links -= 1\n                donuts[end - d] = d + sum(donuts[end - d:end + 1])\n                end -= d\n    print(links)", "import collections\nimport math\nT = int(input())\nfor t in range(T):\n    [N, M] = map(int, input().split())\n    A = map(int, input().split())\n    freq = dict(collections.Counter(A))\n    cuts = 0\n    m = M\n    for k in sorted(freq.keys()):\n        p = freq[k]\n        i = min(p, math.floor((m - 1) / (k + 1)))\n        m = m - i * (k + 1)\n        cuts += i * k\n        if i != p:\n            break\n    cuts = cuts + m - 1\n    print(cuts)", "n_tests = int(input())\nfor i in range(n_tests):\n    (n, m) = [int(x) for x in input().split()]\n    array = [int(x) for x in input().split()]\n    array1 = array\n    array.sort()\n    gaps = len(array) - 1\n    j = gaps\n    i = result = 0\n    if gaps < array[0]:\n        print(gaps)\n        continue\n    else:\n        while j > i:\n            a = array[i]\n            i += 1\n            c = j\n            j -= a\n            if j < i:\n                result += c - i + 1\n                break\n            result += a\n    print(result)", "def minCuts(n, A):\n    A = sorted(A, reverse=True)\n    currentLength = A[0]\n    i = 1\n    while currentLength < n:\n        currentLength += A[i] + 1\n        A[-1] -= 1\n        if A[-1] == 0:\n            del A[-1]\n        i += 1\n    return i - 1\nassert minCuts(11, [4, 3, 4]) == 2\nassert minCuts(6, [3, 2, 1]) == 1\ntc = int(input())\nwhile tc > 0:\n    (n, m) = [int(x) for x in input().split()]\n    chain = [int(x) for x in input().split()]\n    result = minCuts(n, chain)\n    print(result)\n    tc -= 1", "t = int(input())\ni = 0\nwhile i < t:\n    (n, m) = map(int, input().split())\n    holes = []\n    a = [int(x) for x in input().split()]\n    no_of_holes = m - 1\n    a.sort()\n    k = 0\n    ans = 0\n    for j in a:\n        if no_of_holes == 0:\n            break\n        if j <= no_of_holes - 1:\n            no_of_holes -= j + 1\n            ans += j\n        elif j > no_of_holes - 1:\n            ans += no_of_holes\n            no_of_holes = 0\n    i += 1\n    print(ans)", "for t in range(int(input())):\n    (N, M) = [int(x) for x in input().split()]\n    l = [int(x) for x in input().split()]\n    l.sort()\n    i = 0\n    s = 0\n    while s + l[i] <= M - i - 2:\n        s += l[i]\n        i += 1\n    print(M - i - 1)", "test = int(input())\nwhile test != 0:\n    test -= 1\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    sum = 0\n    i = 0\n    j = len(l) - 1\n    while i < j:\n        if l[i] == 1:\n            i += 1\n            j = j - 1\n        else:\n            l[i] = l[i] - 1\n            j = j - 1\n        sum += 1\n    print(sum)", "t = int(input())\nfor case in range(t):\n    (n, m) = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    if n == m:\n        print(m // 2)\n    else:\n        d = sorted(d)\n        count = 0\n        target = m\n        for i in d:\n            if i >= target:\n                count += target - 1\n                target = 0\n            else:\n                count += i\n                target = target - i - 1\n            if target <= 0:\n                break\n        print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    chains = [int(s) for s in input().split()]\n    chains.sort()\n    req = m - 1\n    idx = 0\n    cut = 0\n    while req > 0:\n        if chains[idx] > req:\n            cut = cut + req\n            req = 0\n        else:\n            req = req - 1\n            req = req - chains[idx]\n            cut = cut + chains[idx]\n            idx = idx + 1\n    print(cut)", "import sys\n\ndef solve(y):\n    y = sorted(y)\n    i = 0\n    j = len(y) - 1\n    resp = 0\n    while i < j:\n        y[j - 1] += y[j] + 1\n        j -= 1\n        if y[i] == 1:\n            i += 1\n        else:\n            y[i] -= 1\n        resp += 1\n    return resp\ncasos = int(input())\nfor k in range(casos):\n    line = input()\n    x = line.split()\n    n = x[0]\n    m = x[1]\n    line = input()\n    y = [int(x) for x in line.split()]\n    print(solve(y))", "__author__ = 'Om Kumar Sahoo'\ncas = int(input())\nfor t in range(cas):\n    (n, m) = [int(x) for x in input().split()]\n    arr = input().split()\n    count1 = 0\n    for i in range(m):\n        arr[i] = int(arr[i])\n    arr = sorted(arr)\n    rsum = 0\n    for i in range(int(m + 1 / 2)):\n        rsum += arr[i]\n        if rsum >= m - i - 1:\n            break\n    print(m - i - 1)", "for tests in range(int(input())):\n    [N, M] = [int(i) for i in input().split()]\n    A = [int(i) for i in input().split()]\n    A.sort()\n    A.reverse()\n    s = A[0]\n    i = 1\n    if s >= N:\n        print(0)\n    else:\n        while s < N:\n            s += A[i] + 1\n            A[-1] -= 1\n            if A[-1] == 0:\n                A.pop()\n            i += 1\n        print(i - 1)"]