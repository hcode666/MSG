Read problem statements in [Hindi], [Bengali], [Mandarin Chinese], [Russian], and [Vietnamese] as well.

The Fibonacci sequence $F_{0}, F_{1}, \ldots$ is a special infinite sequence of non-negative integers, where $F_{0} = 0$, $F_{1} = 1$ and for each integer $n ≥ 2$, $F_{n} = F_{n-1} + F_{n-2}$.

Consider the sequence $D$ of the last decimal digits of the first $N$ Fibonacci numbers, i.e. $D = (F_{0} \% 10, F_{1} \% 10, \ldots, F_{N-1} \% 10)$. Now, you should perform the following process:
Let $D = (D_{1}, D_{2}, \ldots, D_{l})$.
If $l = 1$, the process ends.
Create a new sequence $E = (D_{2}, D_{4}, \ldots, D_{2 \lfloor l/2 \rfloor})$. In other words, $E$ is the sequence created by removing all odd-indexed elements from $D$.
Change $D$ to $E$.

When this process terminates, the sequence $D$ contains only one number. You have to find this number.

------  Input ------
The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.
The first and only line of each test case contains a single integer $N$.

------  Output ------
For each test case, print a single line containing one integer ― the last remaining number.

------  Constraints ------
$1 ≤ T ≤ 10^{5}$
$1 ≤ N ≤ 10^{18}$

------  Subtasks ------
Subtask #1 (20 points):
$1 ≤ T ≤ 10^{5}$
$1 ≤ N ≤ 10^{7}$

Subtask #2 (80 points): original constraints

----- Sample Input 1 ------ 
1

9
----- Sample Output 1 ------ 
3
----- explanation 1 ------ 
Test case $1$: The first $N$ Fibonacci numbers are $(0, 1, 1, 2, 3, 5, 8, 13, 21)$. The corresponding sequence $D$ is $(0, 1, 1, 2, 3, 5, 8, 3, 1)$.
- Remove all elements at odd indices of $D$: $(0, 1, 1, 2, 3, 5, 8, 3, 1) \rightarrow (1, 2, 5, 3)$.
- Remove all elements at odd indices of $D$: $(1, 2, 5, 3) \rightarrow (2, 3)$.
- Remove all elements at odd indices of $D$: $(2, 3) \rightarrow (3)$.

The remaining element is $3$.

