["T = int(input())\nfib = []\nans = 0\na = 0\nb = 1\ni = 1\np = 10 ** 18\nwhile i <= 60:\n    fib.append(a)\n    (a, b) = (b, a + b)\n    i = i + 1\n\ndef binpow(x, p):\n    if p == 0:\n        return 1\n    if p == 1:\n        return x\n    if p % 2 == 0:\n        half = binpow(x, p // 2)\n        return half * half\n    else:\n        half = binpow(x, p // 2)\n        return half * half * x\nfor tc in range(T):\n    n = int(input())\n    import math\n    k = math.floor(math.log(n, 2))\n    at = 0\n    st = n\n    rt = st - at\n    while rt >= 0:\n        at = at + 1\n        rt = st - 2 ** at\n    bt = at - 1\n    rem = n\n    k = -1\n    while rem >= 0:\n        k = k + 1\n        rem = n - 2 ** k\n    k = k - 1\n    c = binpow(2, k)\n    print(fib[(c - 1) % 60] % 10)", "T = int(input())\nfib = []\nans = 0\na = 0\nb = 1\ni = 1\np = 10 ** 18\nwhile i <= 60:\n    fib.append(a)\n    (a, b) = (b, a + b)\n    i = i + 1\n\ndef binpow(x, p):\n    if p == 0:\n        return 1\n    if p == 1:\n        return x\n    if p % 2 == 0:\n        half = binpow(x, p // 2)\n        return half * half\n    else:\n        half = binpow(x, p // 2)\n        return half * half * x\nfor tc in range(T):\n    n = int(input())\n    import math\n    k = math.floor(math.log(n, 2))\n    at = 0\n    st = n\n    rt = st - at\n    while rt >= 0:\n        at = at + 1\n        rt = st - 2 ** at\n    bt = at - 1\n    rem = n\n    k = -1\n    while rem >= 0:\n        k = k + 1\n        rem = n - 2 ** k\n    k = k - 1\n    c = binpow(2, k)\n    print(fib[(c - 1) % 60] % 10)", "T = int(input())\nfib = []\nans = 0\na = 0\nb = 1\ni = 1\np = 10 ** 18\nwhile i <= 60:\n    fib.append(a)\n    (a, b) = (b, a + b)\n    i = i + 1\n\ndef binpow(x, p):\n    if p == 0:\n        return 1\n    if p == 1:\n        return x\n    if p % 2 == 0:\n        half = binpow(x, p // 2)\n        return half * half\n    else:\n        half = binpow(x, p // 2)\n        return half * half * x\nfor tc in range(T):\n    n = int(input())\n    import math\n    k = math.floor(math.log(n, 2))\n    at = 0\n    st = n\n    rt = st - at\n    while rt >= 0:\n        at = at + 1\n        rt = st - 2 ** at\n    bt = at - 1\n    rem = n\n    k = -1\n    while rem >= 0:\n        k = k + 1\n        rem = n - 2 ** k\n    k = k - 1\n    c = binpow(2, k)\n    print(fib[(c - 1) % 60] % 10)", "T = int(input())\nfib = []\nans = 0\na = 0\nb = 1\ni = 1\np = 10 ** 18\nwhile i <= 60:\n    fib.append(a)\n    (a, b) = (b, a + b)\n    i = i + 1\n\ndef binpow(x, p):\n    if p == 0:\n        return 1\n    if p == 1:\n        return x\n    if p % 2 == 0:\n        half = binpow(x, p // 2)\n        return half * half\n    else:\n        half = binpow(x, p // 2)\n        return half * half * x\nfor tc in range(T):\n    n = int(input())\n    import math\n    k = math.floor(math.log(n, 2))\n    at = 0\n    st = n\n    rt = st - at\n    while rt >= 0:\n        at = at + 1\n        rt = st - 2 ** at\n    bt = at - 1\n    c = binpow(2, bt)\n    print(fib[(c - 1) % 60] % 10)", "for _ in range(int(input())):\n    s = int(input())\n    a = 0\n    r = s - a\n    while r >= 0:\n        a = a + 1\n        r = s - 2 ** a\n    b = a - 1\n    if b == 1:\n        print(1)\n    elif b % 4 == 2:\n        print(2)\n    elif b % 4 == 3:\n        print(3)\n    elif b % 4 == 0:\n        print(0)\n    elif b % 4 == 1:\n        print(9)", "for _ in range(int(input())):\n    s = int(input())\n    a = 0\n    r = s - a\n    while r >= 0:\n        a = a + 1\n        r = s - 2 ** a\n    b = a - 1\n    if b == 1:\n        print(1)\n    elif b % 4 == 2:\n        print(2)\n    elif b % 4 == 3:\n        print(3)\n    elif b % 4 == 0:\n        print(0)\n    elif b % 4 == 1:\n        print(9)", "from bisect import bisect_left, bisect_right\nimport math\nfrom sys import maxsize\nfrom collections import defaultdict\nfrom bisect import bisect_left\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\nfrom collections import deque, defaultdict\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\n\ndef findlog(p):\n    x = 0\n    while p != 0:\n        x += 1\n        p //= 2\n    return x - 1\nf = [0, 1]\nfor i in range(2, 61):\n    f.append((f[i - 1] + f[i - 2]) % 10)\nfor _ in range(ii()):\n    print(f[int((2 ** findlog(ii()) - 1) % 60)])", "import math\n\ndef fib(f, n):\n    f[0] = 0\n    f[1] = 1\n    for i in range(2, n + 1):\n        f[i] = (f[i - 1] + f[i - 2]) % 10\n    return f\n\ndef findLastDigit(n):\n    f = [0] * 61\n    f = fib(f, 60)\n    return f[n % 60]\n\ndef func(n):\n    k = n\n    c = 0\n    while k > 1:\n        k = k // 2\n        c += 1\n    return c\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    k = func(n)\n    last_num = 2 ** k\n    print(findLastDigit(last_num - 1))", "import sys\nfor x in range(int(input())):\n    n = int(sys.stdin.readline())\n    r = len(bin(n)) - 3\n    index = 2 ** r - 1\n    if index == 0:\n        print(0)\n    elif index == 1:\n        print(1)\n    elif index % 10 == 3:\n        print(2)\n    elif index % 10 == 7:\n        print(3)\n    elif index % 10 == 1:\n        print(9)\n    elif index % 10 == 5:\n        print(0)", "import math\n\ndef p_two(n):\n    return int(math.log(n, 2))\n\ndef f(n):\n    a = [0, 1]\n    r = [0, 1]\n    i = 2\n    while i < n:\n        a += [(a[-1] + a[-2]) % 10]\n        i += 1\n    return a\nfor x in range(int(input())):\n    n = int(input())\n    r = len(bin(n)) - 3\n    index = 2 ** r - 1\n    if index == 0:\n        print(0)\n    elif index == 1:\n        print(1)\n    elif index % 10 == 3:\n        print(2)\n    elif index % 10 == 7:\n        print(3)\n    elif index % 10 == 1:\n        print(9)\n    elif index % 10 == 5:\n        print(0)", "fib = [1] * 61\nfib[0] = 0\nfor i in range(2, 61):\n    fib[i] = (fib[i - 1] + fib[i - 2]) % 10\nfor _ in range(int(input())):\n    n = int(input())\n    q = 1\n    while n >= q:\n        q <<= 1\n    q >>= 1\n    print(fib[q % 60 - 1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = len(str(bin(n).replace('0b', '')))\n    ans = [3, 0, 9, 2]\n    if x == 1:\n        print(0)\n    elif x == 2:\n        print(1)\n    else:\n        print(ans[x % 4])", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    r = len(bin(n)) - 3\n    index = 2 ** r - 1\n    if index == 0:\n        print(0)\n    elif index == 1:\n        print(1)\n    elif index % 10 == 3:\n        print(2)\n    elif index % 10 == 7:\n        print(3)\n    elif index % 10 == 1:\n        print(9)\n    elif index % 10 == 5:\n        print(0)", "time = 60\nfib = [0] * (time + 1)\nfib[0] = 0\nfib[1] = 1\nfor i in range(2, time + 1):\n    fib[i] = fib[i - 1] + fib[i - 2]\n    fib[i] %= 10\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    most_pos = len(bin(n)[2:])\n    pos = pow(2, most_pos - 1, time) - 1\n    ans = fib[pos]\n    print(ans)", "time = 60\nfib = [0] * (time + 1)\nfib[0] = 0\nfib[1] = 1\nfor i in range(2, time + 1):\n    fib[i] = fib[i - 1] + fib[i - 2]\n    fib[i] %= 10\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    most_pos = len(bin(n)[2:])\n    pos = pow(2, most_pos - 1, time) - 1\n    ans = fib[pos]\n    print(ans)", "time = 60\nfib = [0] * (time + 1)\nfib[0] = 0\nfib[1] = 1\nfor i in range(2, time + 1):\n    fib[i] = fib[i - 1] + fib[i - 2]\n    fib[i] %= 10\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    most_pos = len(bin(n)[2:])\n    pos = pow(2, most_pos - 1, time) - 1\n    ans = fib[pos]\n    print(ans)", "from collections import Counter\ntime = 60\nfib = [0] * (time + 1)\nfib[0] = 0\nfib[1] = 1\nfor i in range(2, time + 1):\n    fib[i] = fib[i - 1] + fib[i - 2]\n    fib[i] %= 10\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    most_pos = len(bin(n)[2:])\n    pos = pow(2, most_pos - 1, time) - 1\n    ans = fib[pos]\n    print(ans)", "tsc = int(input())\nfor i in range(0, tsc):\n    s = int(input())\n    a = 0\n    r = s - a\n    while r >= 0:\n        a = a + 1\n        r = s - 2 ** a\n    b = a - 1\n    if b == 1:\n        print(1)\n    elif b % 4 == 2:\n        print(2)\n    elif b % 4 == 3:\n        print(3)\n    elif b % 4 == 0:\n        print(0)\n    elif b % 4 == 1:\n        print(9)", "tsc = int(input())\nfor i in range(0, tsc):\n    s = int(input())\n    a = 0\n    r = s - a\n    while r >= 0:\n        a = a + 1\n        r = s - 2 ** a\n    b = a - 1\n    if b == 1:\n        print(1)\n    elif b % 4 == 2:\n        print(2)\n    elif b % 4 == 3:\n        print(3)\n    elif b % 4 == 0:\n        print(0)\n    elif b % 4 == 1:\n        print(9)", "T = int(input())\nfor tc in range(0, T):\n    N = int(input())\n    x = len(str(bin(N))) - 3\n    dp = [2, 3, 0, 9]\n    if x == 0:\n        print(0)\n    elif x == 1:\n        print(1)\n    else:\n        a = x - 2\n        print(dp[a % 4])", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    for i in range(61):\n        if 1 << i >= n:\n            break\n    if n & n - 1 != 0:\n        i -= 1\n    n = 1 << i\n    a = [-1] * 61\n    a[1] = 0\n    a[2] = 1\n    for i in range(3, 61):\n        a[i] = (a[i - 1] + a[i - 2]) % 10\n    n = n % 60\n    if n == 0:\n        n = 60\n    print(a[n])", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    for i in range(61):\n        if 1 << i >= n:\n            break\n    if n & n - 1 != 0:\n        i -= 1\n    n = 1 << i\n    a = [-1] * 61\n    a[1] = 0\n    a[2] = 1\n    for i in range(3, 61):\n        a[i] = (a[i - 1] + a[i - 2]) % 10\n    n = n % 60\n    if n == 0:\n        n = 60\n    print(a[n])", "fb = [0, 1]\nfor i in range(1, 60):\n    fb.append(fb[i - 1] + fb[i])\nfor _ in range(int(input())):\n    n = int(input())\n    c = 1\n    while n > 1:\n        n //= 2\n        c *= 2\n    print(fb[c % 60 - 1] % 10)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    count = 0\n    k = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if k == 0:\n        print(0)\n    elif k == 1:\n        print(1)\n    else:\n        a = k - 2\n        print(l[a % 4])", "T = int(input())\nfor tc in range(0, T):\n    N = int(input())\n    x = len(str(bin(N))) - 3\n    dp = [2, 3, 0, 9]\n    if x == 0:\n        print(0)\n    elif x == 1:\n        print(1)\n    else:\n        a = x - 2\n        print(dp[a % 4])", "T = int(input())\nfor tc in range(0, T):\n    N = int(input())\n    x = len(str(bin(N))) - 3\n    dp = [2, 3, 0, 9]\n    if x == 0:\n        print(0)\n    elif x == 1:\n        print(1)\n    else:\n        a = x - 2\n        print(dp[a % 4])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    count = 0\n    k = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if k == 0:\n        print(0)\n    elif k == 1:\n        print(1)\n    else:\n        a = k - 2\n        print(l[a % 4])", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    k = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if k == 0:\n        print('0')\n    elif k == 1:\n        print('1')\n    elif k >= 2:\n        a = k - 2\n        print(l[a % 4])", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "k = [0] * 100\nk[0] = 0\nk[1] = 1\nfor i in range(2, 60):\n    k[i] = k[i - 1] + k[i - 2]\nfor i in range(int(input())):\n    inputNumber = int(input())\n    msb = 0\n    while inputNumber > 0:\n        msb += 1\n        inputNumber = inputNumber >> 1\n    pos = pow(2, msb - 1) % 60\n    print(k[pos - 1] % 10)", "for i in range(int(input())):\n    n = int(input())\n    l = len(str(bin(n))) - 3\n    index = 2 ** l - 1\n    if index == 0:\n        print('0')\n    elif index == 1:\n        print('1')\n    elif index % 10 == 3:\n        print('2')\n    elif index % 10 == 7:\n        print('3')\n    elif index % 10 == 5:\n        print('0')\n    elif index % 10 == 1:\n        print('9')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "FIB = [0] * 100\nFIB[0] = 0\nFIB[1] = 1\nfor i in range(2, 60):\n    FIB[i] = FIB[i - 1] + FIB[i - 2]\nfor i in range(int(input())):\n    inputNumber = int(input())\n    msb = 0\n    while inputNumber > 0:\n        msb += 1\n        inputNumber = inputNumber >> 1\n    pos = pow(2, msb - 1) % 60\n    print(FIB[pos - 1] % 10)", "FIB = [0] * 100\nFIB[0] = 0\nFIB[1] = 1\nfor i in range(2, 60):\n    FIB[i] = FIB[i - 1] + FIB[i - 2]\nfor i in range(int(input())):\n    inputNumber = int(input())\n    msb = 0\n    while inputNumber > 0:\n        msb += 1\n        inputNumber = inputNumber >> 1\n    pos = pow(2, msb - 1) % 60\n    print(FIB[pos - 1] % 10)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    x = str(bin(n).replace('0b', ''))\n    if len(x) == 1:\n        print('0')\n    elif len(x) == 2:\n        print('1')\n    else:\n        c = len(x) % 4\n        if c == 0:\n            print('3')\n        elif c == 1:\n            print('0')\n        elif c == 2:\n            print('9')\n        else:\n            print('2')\n    t -= 1", "FIB = [0] * 100\nFIB[0] = 0\nFIB[1] = 1\nfor i in range(2, 60):\n    FIB[i] = FIB[i - 1] + FIB[i - 2]\nfor i in range(int(input())):\n    inputNumber = int(input())\n    msb = 0\n    while inputNumber > 0:\n        msb += 1\n        inputNumber = inputNumber >> 1\n    pos = pow(2, msb - 1) % 60\n    print(FIB[pos - 1] % 10)", "FIB = [0] * 100\nFIB[0] = 0\nFIB[1] = 1\nfor i in range(2, 60):\n    FIB[i] = FIB[i - 1] + FIB[i - 2]\nfor i in range(int(input())):\n    inputNumber = int(input())\n    msb = 0\n    while inputNumber > 0:\n        msb += 1\n        inputNumber = inputNumber >> 1\n    pos = pow(2, msb - 1) % 60\n    print(FIB[pos - 1] % 10)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = len(str(bin(n).replace('0b', '')))\n    ans = [3, 0, 9, 2]\n    if x == 1:\n        print(0)\n    elif x == 2:\n        print(1)\n    else:\n        print(ans[x % 4])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = len(str(bin(n).replace('0b', '')))\n    if x == 1:\n        print(0)\n    elif x == 2:\n        print(1)\n    elif x % 4 == 0:\n        print(3)\n    elif x % 4 == 1:\n        print(0)\n    elif x % 4 == 2:\n        print(9)\n    elif x % 4 == 3:\n        print(2)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    x = str(bin(n).replace('0b', ''))\n    if len(x) == 1:\n        print('0')\n    elif len(x) == 2:\n        print('1')\n    else:\n        c = len(x) % 4\n        if c == 0:\n            print('3')\n        elif c == 1:\n            print('0')\n        elif c == 2:\n            print('9')\n        else:\n            print('2')\n    t -= 1", "num = int(input())\nfor i in range(num):\n    count = 0\n    n = int(input())\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "fibb = [0, 0, 1]\nfor i in range(58):\n    fibb.append((fibb[-1] + fibb[-2]) % 10)\nfibb[0] = fibb[-1]\n\ndef solve(x):\n    t = 2 ** (x.bit_length() - 1) % 60\n    print(fibb[t])\nn = int(input())\nfor i in range(n):\n    x = int(input())\n    solve(x)", "def fibb(num):\n    if num == 0:\n        return 0\n    elif num == 1:\n        return 1\n    else:\n        return fibb(num - 1) + fibb(num - 2)\nt = int(input())\nwhile t != 0:\n    n = int(input())\n    x = str(bin(n).replace('0b', ''))\n    if len(x) == 1:\n        print('0')\n    elif len(x) == 2:\n        print('1')\n    else:\n        c = len(x) % 4\n        if c == 0:\n            print('3')\n        elif c == 1:\n            print('0')\n        elif c == 2:\n            print('9')\n        else:\n            print('2')\n    t -= 1", "xd = [2, 3, 0, 9]\nfor _ in range(int(input())):\n    n = int(input())\n    n = len(bin(n)) - 3\n    if n == 0:\n        print(0)\n    elif n == 1:\n        print(1)\n    else:\n        n -= 2\n        print(xd[n % 4])", "num = int(input())\nfor i in range(num):\n    count = 0\n    n = int(input())\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "m = int(input())\nfor i in range(m):\n    c = 0\n    n = int(input())\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "num = int(input())\nfor i in range(num):\n    count = 0\n    n = int(input())\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if s == 0:\n        print('0')\n    elif s == 1:\n        print('1')\n    elif s >= 2:\n        a = s - 2\n        print(l[a % 4])", "for _ in range(int(input())):\n    n = int(input())\n    p = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if p == 0:\n        print('0')\n    elif p == 1:\n        print('1')\n    elif p >= 2:\n        a = p - 2\n        print(l[a % 4])", "import math\nfor i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n == 2 or n == 3:\n        print(1)\n    else:\n        f = [2, 3, 0, 9]\n        print(f[(len(bin(n)) - 3) % 4 - 2])", "import math\nfor i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n == 2 or n == 3:\n        print(1)\n    else:\n        f = [2, 3, 0, 9]\n        print(f[(len(bin(n)) - 3) % 4 - 2])", "import math\nfor i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n == 2 or n == 3:\n        print(1)\n    else:\n        f = [2, 3, 0, 9]\n        print(f[(len(bin(n)) - 3) % 4 - 2])", "def fib2(n):\n    l = [0, 1]\n    for i in range(2, n + 1):\n        l[i % 2] = l[0] + l[1]\n    return l[n % 2]\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    idx = 2 ** (len(bin(n)[2:]) - 1) - 1\n    print(fib2(idx % 60) % 10)", "import math\nF = [0, 1]\n\ndef generateFibonacci():\n    for i in range(60):\n        F.append((F[-1] + F[-2]) % 10)\ntc = int(input())\ngenerateFibonacci()\nfor _ in range(tc):\n    n = int(input())\n    n = n >> 1\n    n = n | n >> 32\n    n = n | n >> 16\n    n = n | n >> 8\n    n = n | n >> 4\n    n = n | n >> 2\n    n = n | n >> 1\n    n %= 60\n    print(F[n])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if p == 0:\n        print('0')\n    elif p == 1:\n        print('1')\n    elif p >= 2:\n        a = p - 2\n        print(l[a % 4])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if p == 0:\n        print('0')\n    elif p == 1:\n        print('1')\n    elif p >= 2:\n        a = p - 2\n        print(l[a % 4])", "import math\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    i = 1\n    while 2 * i <= N:\n        i *= 2\n    val = i % 60\n    a = 0\n    b = 1\n    for i in range(0, val):\n        if i == val - 1:\n            print(a)\n        c = (a + b) % 10\n        a = b\n        b = c", "import math\nfor i in range(int(input())):\n    N = int(input())\n    i = 1\n    while 2 * i <= N:\n        i *= 2\n    val = i % 60\n    a = 0\n    b = 1\n    for i in range(0, val):\n        if i == val - 1:\n            print(a)\n        c = (a + b) % 10\n        a = b\n        b = c", "import math\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    i = 1\n    while 2 * i <= N:\n        i *= 2\n    val = i % 60\n    a = 0\n    b = 1\n    for i in range(0, val):\n        if i == val - 1:\n            print(a)\n        c = (a + b) % 10\n        a = b\n        b = c", "for _ in range(int(input())):\n    n = int(input())\n    p = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if p == 0:\n        print('0')\n    elif p == 1:\n        print('1')\n    elif p >= 2:\n        a = p - 2\n        print(l[a % 4])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if p == 0:\n        print('0')\n    elif p == 1:\n        print('1')\n    elif p >= 2:\n        a = p - 2\n        print(l[a % 4])", "import math\nfor i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n == 2 or n == 3:\n        print(1)\n    else:\n        f = [2, 3, 0, 9]\n        print(f[(len(bin(n)) - 3) % 4 - 2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = len(str(bin(n))) - 3\n    (a, b) = (0, 1)\n    for j in range(60):\n        if j == (2 ** x - 1) % 60:\n            print(a % 10)\n        tmp = a + b\n        a = b\n        b = tmp", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p2 = len(bin(n)) - 3\n    a = [2, 3, 0, 9]\n    if p2 >= 2:\n        p2 = (p2 - 2) % 4\n        print(a[p2])\n    elif p2 == 1:\n        print('1')\n    else:\n        print('0')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = len(str(bin(n))) - 3\n    l = [2, 3, 0, 9]\n    if p == 0:\n        print('0')\n    elif p == 1:\n        print('1')\n    elif p >= 2:\n        a = p - 2\n        print(l[a % 4])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p2 = len(str(bin(n))) - 3\n    a = [2, 3, 0, 9]\n    if p2 >= 2:\n        p2 = (p2 - 2) % 4\n        print(a[p2])\n    elif p2 == 1:\n        print('1')\n    else:\n        print('0')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p2 = len(str(bin(n))) - 3\n    a = [2, 3, 0, 9]\n    if p2 >= 2:\n        p2 = (p2 - 2) % 4\n        print(a[p2])\n    elif p2 == 1:\n        print('1')\n    else:\n        print('0')", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    i = 1\n    while 2 * i <= n:\n        i *= 2\n    val = i % 60\n    a = 0\n    b = 1\n    for i in range(0, val):\n        if i == val - 1:\n            print(a)\n        c = (a + b) % 10\n        a = b\n        b = c", "given = []\nfor _ in range(int(input())):\n    n = int(input())\n    given.append(n)\nfib = [0, 1]\nfor i in range(60):\n    fib.append((fib[-1] + fib[-2]) % 10)\nl1 = [1, 2]\nl2 = [0, 1]\nx = 2\nfor i in range(600):\n    l1.append(l1[-1] * 2)\n    l2.append(l2[-1] + x)\n    x = x + x\nfor ele in given:\n    for i in range(len(l1) - 1):\n        if l1[i] <= ele < l1[i + 1]:\n            print(fib[l2[i] % 60])\n            break", "given = []\nfor _ in range(int(input())):\n    n = int(input())\n    given.append(n)\nfib = [0, 1]\nfor i in range(60):\n    fib.append((fib[-1] + fib[-2]) % 10)\nl1 = [1, 2]\nl2 = [0, 1]\nx = 2\nfor i in range(600):\n    l1.append(l1[-1] * 2)\n    l2.append(l2[-1] + x)\n    x = x + x\nfor ele in given:\n    for i in range(len(l1) - 1):\n        if l1[i] <= ele < l1[i + 1]:\n            print(fib[l2[i] % 60])\n            break", "from math import log2, floor\nfibs = [0, 1, 1, 2, 3, 5, 8, 3, 1, 4, 5, 9, 4, 3, 7, 0, 7, 7, 4, 1, 5, 6, 1, 7, 8, 5, 3, 8, 1, 9, 0, 9, 9, 8, 7, 5, 2, 7, 9, 6, 5, 1, 6, 7, 3, 0, 3, 3, 6, 9, 5, 4, 9, 3, 2, 5, 7, 2, 9, 1]\nfor _ in range(int(input())):\n    n = int(input())\n    i = len(str(bin(n))) - 3\n    print(fibs[(2 ** i - 1) % 60])", "given = []\nfor _ in range(int(input())):\n    n = int(input())\n    given.append(n)\nfib = [0, 1]\nfor i in range(60):\n    fib.append((fib[-1] + fib[-2]) % 10)\nl1 = [1, 2]\nl2 = [0, 1]\nx = 2\nfor i in range(600):\n    l1.append(l1[-1] * 2)\n    l2.append(l2[-1] + x)\n    x = x + x\nfor ele in given:\n    for i in range(len(l1) - 1):\n        if l1[i] <= ele < l1[i + 1]:\n            print(fib[l2[i] % 60])\n            break", "given = []\nfor _ in range(int(input())):\n    n = int(input())\n    given.append(n)\nfib = [0, 1]\nfor i in range(60):\n    fib.append((fib[-1] + fib[-2]) % 10)\nl1 = [1, 2]\nl2 = [0, 1]\nx = 2\nfor i in range(600):\n    l1.append(l1[-1] * 2)\n    l2.append(l2[-1] + x)\n    x = x + x\nfor ele in given:\n    for i in range(len(l1) - 1):\n        if l1[i] <= ele < l1[i + 1]:\n            print(fib[l2[i] % 60])\n            break", "import math\n\ndef make_pisano_cycle(m):\n    f1 = 0\n    f2 = 1\n    f3 = 0\n    count = 0\n    fib_series = []\n    first = True\n    while not (f2 == 1 and f1 == 0 and (not first)):\n        first = False\n        fib_series.append(f1)\n        f3 = (f2 + f1) % m\n        f1 = f2\n        f2 = f3\n        count += 1\n    return (fib_series, count)\n\ndef get_log_n_index(n):\n    str1 = bin(n)\n    p = len(str1) - bin(n).find('1')\n    return 2 ** (p - 1)\n\ndef get_special_array_item(n):\n    n = get_log_n_index(n)\n    index = (n - 1) % modm\n    return the_pisano_array[index]\n(the_pisano_array, modm) = make_pisano_cycle(10)\nfor i in range(int(input())):\n    n = int(input())\n    print(get_special_array_item(n))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    i = 1\n    while 2 * i <= n:\n        i *= 2\n    value = 60\n    n = i % value\n    if n == 0:\n        n = value\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(1)\n    else:\n        (a, b) = (0, 1)\n        for i in range(n - 1):\n            (a, b) = (b, (a + b) % 10)\n        print(a % 10)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    i = 1\n    while 2 * i <= n:\n        i *= 2\n    value = 60\n    n = i % value\n    if n == 0:\n        n = value\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(1)\n    else:\n        (a, b) = (0, 1)\n        for i in range(n - 1):\n            (a, b) = (b, (a + b) % 10)\n        print(a % 10)", "import math\n\ndef MakePisanoCycle(m):\n    f1 = 0\n    f2 = 1\n    f3 = 0\n    count = 0\n    Sequence = []\n    first = True\n    while not (f2 == 1 and f1 == 0 and (not first)):\n        first = False\n        Sequence.append(f1)\n        f3 = (f2 + f1) % m\n        f1 = f2\n        f2 = f3\n        count += 1\n    return (Sequence, count)\n\ndef getLogNIndex(N):\n    str1 = bin(N)\n    p = len(str1) - bin(N).find('1')\n    return 2 ** (p - 1)\n\ndef getSpecialArrayItem(N):\n    N = getLogNIndex(N)\n    index = (N - 1) % MODM\n    return ThePisanoArray[index]\n(ThePisanoArray, MODM) = MakePisanoCycle(10)\nfor _ in range(int(input())):\n    N = int(input())\n    print(getSpecialArrayItem(N))", "from math import *\n\ndef pisanoPeriod():\n    p = [-1, 0, 1]\n    for i in range(58):\n        t = (p[-2] + p[-1]) % 10\n        p.append(t)\n    return p\nR = lambda : list(map(int, input().split()))\np = pisanoPeriod()\nfor _ in range(int(input())):\n    n = int(input())\n    n = len(bin(n)) - 3\n    n = 2 ** n\n    n = n % 60\n    print(p[n])", "a = int(input())\nwhile a > 0:\n    t = int(input())\n    i = 1\n    while 2 * i <= t:\n        i *= 2\n    value = 60\n    t = i % value\n    if t == 0:\n        t = value\n    if t == 1:\n        print(0)\n    elif t == 2:\n        print(1)\n    else:\n        (p, q) = (0, 1)\n        for i in range(t - 1):\n            (p, q) = (q, (p + q) % 10)\n        print(p % 10)\n    a -= 1", "a = int(input())\nwhile a > 0:\n    t = int(input())\n    i = 1\n    while 2 * i <= t:\n        i *= 2\n    value = 60\n    t = i % value\n    if t == 0:\n        t = value\n    if t == 1:\n        print(0)\n    elif t == 2:\n        print(1)\n    else:\n        (p, q) = (0, 1)\n        for i in range(t - 1):\n            (p, q) = (q, (p + q) % 10)\n        print(p % 10)\n    a -= 1", "n = int(input())\nwhile n > 0:\n    t = int(input())\n    i = 1\n    while 2 * i <= t:\n        i *= 2\n    value = 60\n    t = i % value\n    if t == 0:\n        t = value\n    if t == 1:\n        print(0)\n    elif t == 2:\n        print(1)\n    else:\n        (a, b) = (0, 1)\n        for i in range(t - 1):\n            (a, b) = (b, (a + b) % 10)\n        print(a % 10)\n    n -= 1", "n = int(input())\nwhile n > 0:\n    t = int(input())\n    i = 1\n    while 2 * i <= t:\n        i *= 2\n    value = 60\n    t = i % value\n    if t == 0:\n        t = value\n    if t == 1:\n        print(0)\n    elif t == 2:\n        print(1)\n    else:\n        (a, b) = (0, 1)\n        for i in range(t - 1):\n            (a, b) = (b, (a + b) % 10)\n        print(a % 10)\n    n -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    i = 1\n    while 2 * i <= n:\n        i *= 2\n    val = 60\n    n = i % val\n    if n == 0:\n        n = val\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(1)\n    else:\n        (a, b) = (0, 1)\n        for i in range(n - 1):\n            (a, b) = (b, (a + b) % 10)\n        print(a % 10)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    i = 1\n    while 2 * i <= n:\n        i *= 2\n    val = 60\n    n = i % val\n    if n == 0:\n        n = val\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(1)\n    else:\n        (a, b) = (0, 1)\n        for i in range(n - 1):\n            (a, b) = (b, (a + b) % 10)\n        print(a % 10)\n    t -= 1", "import math\na = [-1, 0, 1]\nfor i in range(58):\n    temp = a[-1] + a[-2]\n    temp = temp % 10\n    a.append(temp)\nfor _ in range(int(input())):\n    n = int(input())\n    temp = len(bin(n)) - 3\n    temp = 2 ** temp\n    temp = temp % 60\n    print(a[temp])", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    i = 1\n    while 2 * i <= n:\n        i *= 2\n    val = 60\n    n = i % val\n    if n == 0:\n        n = val\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(1)\n    else:\n        (a, b) = (0, 1)\n        for i in range(n - 1):\n            (a, b) = (b, (a + b) % 10)\n        print(a % 10)\n    t -= 1", "import math\nt = int(input())\na = [-1, 0, 1]\nfor i in range(58):\n    temp = a[-1] + a[-2]\n    temp = temp % 10\n    a.append(temp)\nfor _ in range(t):\n    n = int(input())\n    temp = len(bin(n)) - 3\n    temp = 2 ** temp\n    temp = temp % 60\n    print(a[temp])", "import math\nt = int(input())\na = [-1, 0, 1]\nfor i in range(58):\n    temp = a[-1] + a[-2]\n    temp = temp % 10\n    a.append(temp)\nfor _ in range(t):\n    n = int(input())\n    temp = len(bin(n)) - 3\n    temp = 2 ** temp\n    temp = temp % 60\n    print(a[temp])", "import math\nt = int(input())\na = [-1, 0, 1]\nfor i in range(58):\n    temp = a[-1] + a[-2]\n    temp = temp % 10\n    a.append(temp)\nfor _ in range(t):\n    n = int(input())\n    temp = len(bin(n)) - 3\n    temp = 2 ** temp\n    temp = temp % 60\n    print(a[temp])", "import math\nt = int(input())\na = [-1, 0, 1]\nfor i in range(58):\n    temp = a[-1] + a[-2]\n    temp = temp % 10\n    a.append(temp)\nfor _ in range(t):\n    n = int(input())\n    temp = len(bin(n)) - 3\n    temp = 2 ** temp\n    temp = temp % 60\n    print(a[temp])", "import math\n\ndef logBase2(n):\n    res = 0\n    fact = 1\n    while fact << res + 1 <= n:\n        res += 1\n    return res\nt = int(input())\na = [-1, 0, 1]\nfor i in range(58):\n    temp = a[-1] + a[-2]\n    temp = temp % 10\n    a.append(temp)\nfor _ in range(t):\n    n = int(input())\n    n = 1 << logBase2(n)\n    print(a[n % 60])"]