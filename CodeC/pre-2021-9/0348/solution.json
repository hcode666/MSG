["for h in range(int(input())):\n    (p, q) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    l = set(l)\n    s = set(s)\n    c = 0\n    for h in l:\n        if h in s:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    a = set(a)\n    b = set(b)\n    b = a.intersection(b)\n    print(len(b))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    la = set([int(x) for x in input().split()])\n    lb = set([int(x) for x in input().split()])\n    c = la.difference(lb)\n    print(a - len(c))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (c, d) = (set((int(x) for x in input().split())), set((int(x) for x in input().split())))\n    c = c.difference(d)\n    print(a - len(c))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (c, d) = (set([int(x) for x in input().split()]), set([int(x) for x in input().split()]))\n    c = c.difference(d)\n    print(a - len(c))", "a = int(input())\nfor i in range(a):\n    b = list(map(int, input().rstrip().split()))\n    c = list(map(int, input().rstrip().split()))\n    d = list(map(int, input().rstrip().split()))\n    c = set(c)\n    d = set(d)\n    count = 0\n    m = c & d\n    print(len(m))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l3 = []\n    l3.extend(l1)\n    l3.extend(l2)\n    n = len(l3)\n    s = set(l3)\n    r = list(s)\n    n2 = len(r)\n    print(n - n2)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    a1 = set(map(int, input().split()))\n    b1 = set(map(int, input().split()))\n    print(len(a1) - len(a1 - b1))", "for i in range(int(input())):\n    (N, M) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    s1 = set(l1)\n    s2 = set(l2)\n    de = 0\n    for i in s1:\n        if i in s2:\n            de += 1\n    print(de)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = set(map(int, input().split()))\n    lst1 = set(map(int, input().split()))\n    print(n - len(lst.difference(lst1)))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = set(map(int, input().split()))\n    lst1 = set(map(int, input().split()))\n    print(n - len(lst.difference(lst1)))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = set(map(int, input().split()))\n    lst1 = set(map(int, input().split()))\n    print(n - len(lst.difference(lst1)))", "test = int(input())\nfor i in range(test):\n    k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = set(a)\n    d = set(b)\n    e = c.intersection(d)\n    print(len(e))", "for t in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    a = set(map(int, input().split()))\n    b = set(map(int, input().split()))\n    common = a.intersection(b)\n    print(len(common))", "for _ in range(0, int(input())):\n    (n, m) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    alc = set(a)\n    brt = set(b)\n    cnt = 0\n    for x in alc:\n        if x in brt:\n            cnt += 1\n    print(cnt)", "for h in range(int(input())):\n    (p, q) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    l = set(l)\n    s = set(s)\n    c = 0\n    for h in l:\n        if h in s:\n            c += 1\n    print(c)", "for h in range(int(input())):\n    (p, q) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    l = set(l)\n    s = set(s)\n    c = 0\n    for h in l:\n        if h in s:\n            c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    (N, M) = map(int, input().split())\n    A = sorted(list(map(int, input().split())))\n    B = sorted(list(map(int, input().split())))\n    C = list(set(A + B))\n    print(N + M - len(C))", "t = int(input())\nfor i in range(t):\n    (N, M) = map(int, input().split())\n    A = sorted(list(map(int, input().split())))\n    B = sorted(list(map(int, input().split())))\n    count = 0\n    A_unique = list(set(A))\n    B_unique = list(set(B))\n    union = A_unique + B_unique\n    union_unique = list(set(union))\n    length = N - len(A_unique) + (len(A_unique) + len(B_unique) - len(union_unique))\n    print(length)", "t = int(input())\nfor i in range(0, t):\n    (x, y) = map(int, input().split(' '))\n    a = input().split(' ')\n    b = input().split(' ')\n    a = a + b\n    a = list(dict.fromkeys(a))\n    print(x + y - len(a))", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = set(map(int, input().split()))\n    b = set(map(int, input().split()))\n    common = a.intersection(b)\n    print(len(common))", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = set(map(int, input().split()))\n    b = set(map(int, input().split()))\n    common = a.intersection(b)\n    print(len(common))", "test_cases = int(input())\nfor i in range(test_cases):\n    str_num = input()\n    a = input().split()\n    b = input().split()\n    for i in range(len(a)):\n        a[i] = int(a[i])\n    for i in range(len(b)):\n        b[i] = int(b[i])\n    a.sort()\n    b.sort()\n    done = False\n    p1 = 0\n    p2 = 0\n    count = 0\n    while not done:\n        if p1 >= len(a) or p2 >= len(b):\n            done = True\n        elif a[p1] < b[p2]:\n            p1 += 1\n        elif a[p1] > b[p2]:\n            p2 += 1\n        elif a[p1] == b[p2]:\n            count += 1\n            p1 += 1\n            p2 += 1\n    print(count)", "test_cases = int(input())\nfor i in range(test_cases):\n    str_num = input()\n    a = input().split()\n    b = input().split()\n    for i in range(len(a)):\n        a[i] = int(a[i])\n    for i in range(len(b)):\n        b[i] = int(b[i])\n    a.sort()\n    b.sort()\n    done = False\n    p1 = 0\n    p2 = 0\n    count = 0\n    while not done:\n        if p1 >= len(a) or p2 >= len(b):\n            done = True\n        elif a[p1] < b[p2]:\n            p1 += 1\n        elif a[p1] > b[p2]:\n            p2 += 1\n        elif a[p1] == b[p2]:\n            count += 1\n            p1 += 1\n            p2 += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    print(len(set(a).intersection(set(b))))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = set(map(int, input().split()))\n    b = set(map(int, input().split()))\n    print(len(b.intersection(a)))", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    l = set(l)\n    s = set(s)\n    c = 0\n    for i in l:\n        if i in s:\n            c += 1\n    print(c)", "for t in range(int(input())):\n    l = 0\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(len(set(a) & set(b)))", "T = int(input())\nfor _ in range(0, T):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = set(a)\n    b = set(b)\n    a = a & b\n    d = len(a)\n    print(d)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    x = set(x)\n    y = set(y)\n    u = x - y\n    print(n - len(u))", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split(' '))\n    lisa = list(map(int, input().split(' ')))\n    lisb = list(map(int, input().split(' ')))\n    lisa.sort()\n    lisb.sort()\n    remove = 0\n    while a and b:\n        r = lisa.pop()\n        while b > 0 and r < lisb[-1]:\n            lisb.pop()\n            b = b - 1\n        if b and r == lisb[-1]:\n            lisb.pop()\n            b = b - 1\n            remove += 1\n        a -= 1\n    print(remove)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    arr = {int(i) for i in input().strip().split()}.union({int(i) for i in input().strip().split()})\n    print(n + m - len(arr))", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = set(list(map(int, input().split())))\n    knt = 0\n    for i in range(N):\n        if A[i] in B:\n            knt += 1\n    print(knt)", "for i in range(int(input())):\n    n = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = set(list(map(int, input().split())))\n    print(len(b.intersection(a)))", "for i in range(int(input())):\n    nm = input()\n    a = list(map(int, input().split()))\n    b = set(list(map(int, input().split())))\n    print(len(b.intersection(a)))", "for _ in range(int(input())):\n    [n1, n2] = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    print(len(set(x) & set(y)))", "for _ in range(int(input())):\n    [n1, n2] = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    print(len(set(y).intersection(x)))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = set(list(map(int, input().split())))\n    b = set(list(map(int, input().split())))\n    c = a & b\n    print(len(c))", "n = int(input())\nfor i in range(n):\n    (m, n) = [int(i) for i in input().split(' ')]\n    lst = [int(i) for i in input().split(' ')][:m]\n    lst1 = [int(i) for i in input().split(' ')][:n]\n    list1 = set(lst + lst1)\n    print(m + n - len(list1))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = set(a + b)\n    print(n + m - len(c))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = set(a + b)\n    print(n + m - len(c))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = set(a + b)\n    print(n + m - len(c))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = set(map(int, input().split()))\n    b = set(map(int, input().split()))\n    print(len(a & b))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = set(map(int, input().split()))\n    b = set(map(int, input().split()))\n    print(len(a & b))", "t = input()\nfor c in range(0, int(t)):\n    (n, m) = input().split()\n    a = input().split()\n    b = input().split()\n    a = set(a)\n    b = set(b)\n    ab = a & b\n    print(len(ab))", "t = int(input())\nfor i in range(t):\n    strNum = input()\n    str1 = input()\n    str2 = input()\n    setA = set(str1.split())\n    setB = set(str2.split())\n    newSetA = setA & setB\n    print(len(newSetA))", "t = int(input())\nfor i in range(t):\n    strNum = input()\n    str1 = input()\n    str2 = input()\n    setA = set(str1.split())\n    setB = set(str2.split())\n    newSetA = setA & setB\n    print(len(newSetA))", "for x in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = set(a)\n    b = set(b)\n    v = 0\n    for x in a:\n        if x in b:\n            v += 1\n    print(v)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 0\n    l_n = list(map(int, input().split()))\n    l_m = list(map(int, input().split()))\n    set_n = set(l_n)\n    set_m = set(l_m)\n    for i in set_n:\n        if i in set_m:\n            ans += 1\n    print(ans)", "for x in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = set(a)\n    b = set(b)\n    v = 0\n    for x in a:\n        if x in b:\n            v += 1\n    print(v)", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    l = set(l)\n    s = set(s)\n    c = 0\n    for i in l:\n        if i in s:\n            c += 1\n    print(c)", "t = int(input())\nfor _ in range(0, t):\n    (n, m) = map(int, input().split())\n    s1 = list(map(int, input().split()))\n    s2 = list(map(int, input().split()))\n    s = sorted(s1 + s2)\n    d = s[0]\n    j = 0\n    for i in s[1:len(s)]:\n        if d == i:\n            j += 1\n        d = i\n    print(j)", "def main():\n    testcases = int(input())\n    i = 0\n    while i < testcases:\n        (N, M) = input().split()\n        N = int(N)\n        M = int(M)\n        list_alice = input().split()\n        list_berta = input().split()\n        for j in range(N):\n            list_alice[j] = int(list_alice[j])\n        for j in range(M):\n            list_berta[j] = int(list_berta[j])\n        list_alice.sort()\n        list_berta.sort()\n        index_alice = 0\n        index_berta = 0\n        count = 0\n        while index_alice <= len(list_alice) - 1 and index_berta <= len(list_berta) - 1:\n            if list_alice[index_alice] > list_berta[index_berta]:\n                index_berta += 1\n            elif list_alice[index_alice] < list_berta[index_berta]:\n                index_alice += 1\n            else:\n                count += 1\n                index_alice += 1\n                index_berta += 1\n        print(count)\n        i += 1\nmain()", "def solve():\n    (n, m) = map(int, input().split())\n    Alst = set(map(int, input().split()))\n    Blst = set(map(int, input().split()))\n    if n > m:\n        f = Alst.intersection(Blst)\n        print(len(f))\n    else:\n        f = Blst.intersection(Alst)\n        print(len(f))\n\ndef max(a, b):\n    if a > b:\n        return a\n    else:\n        return b\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    nm = input()\n    a = input()\n    a = a.split()\n    d = {'-1': 0}\n    for i in range(len(a)):\n        d[a[i]] = 1\n    b = input()\n    b = b.split()\n    k = 0\n    for i in range(len(b)):\n        if b[i] in d:\n            k = k + 1\n    print(k)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    print(len(set(l1).intersection(l2)))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = set(map(int, input().split()))\n    b = set(map(int, input().split()))\n    count = 0\n    c = a.intersection(b)\n    print(len(c))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    count = 0\n    d = {}\n    for i in b:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in a:\n        if i in d:\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    __ = input()\n    A = set(map(int, input().split()))\n    B = set(map(int, input().split()))\n    print(len(A.intersection(B)))", "t = int(input())\nfor i in range(t):\n    m = list(map(int, input().split()))\n    arr1 = set(list(map(int, input().split())))\n    arr2 = set(list(map(int, input().split())))\n    count = 0\n    for j in arr1:\n        if j in arr2:\n            count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    x = input()\n    n = list(map(int, input().split()))\n    m = set(list(map(int, input().split())))\n    cnt = 0\n    for i in n:\n        if i in m:\n            cnt += 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    x = input()\n    n = list(map(int, input().split()))\n    m = set(list(map(int, input().split())))\n    cnt = 0\n    for i in n:\n        if i in m:\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    ln = input()\n    n = list(map(int, input().split()))\n    m = set(list(map(int, input().split())))\n    cnt = 0\n    for i in n:\n        if i in m:\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [int(j) for j in input().split()]\n    b = [int(x) for x in input().split()]\n    c = a + b\n    cnt = 0\n    mp = {}\n    for i in range(len(c)):\n        if c[i] in mp:\n            cnt += 1\n        else:\n            mp[c[i]] = i\n    print(cnt)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [int(j) for j in input().split()]\n    b = [int(x) for x in input().split()]\n    c = a + b\n    cnt = 0\n    mp = {}\n    for i in range(len(c)):\n        if c[i] in mp:\n            cnt += 1\n        else:\n            mp[c[i]] = i\n    print(cnt)", "tests = int(input())\nfor i in range(tests):\n    (alice, bertha) = map(int, input().split())\n    alice_set = set(map(int, input().split()))\n    bertha_set = set(map(int, input().split()))\n    print(len(alice_set.intersection(bertha_set)))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = a + b\n    d = set(c)\n    print(len(c) - len(d))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = a + b\n    d = set(c)\n    print(len(c) - len(d))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    count = 0\n    c = a + b\n    d = set(c)\n    print(len(c) - len(d))", "for i in range(int(input())):\n    l = []\n    (n, m) = map(int, input().split())\n    N = set(map(int, input().split()))\n    M = set(map(int, input().split()))\n    s = N.intersection(M)\n    print(len(s))", "def main():\n    from sys import stdin, stdout\n    t = int(stdin.readline())\n\n    def f(a, b):\n        return len(a.intersection(b))\n    for i in range(t):\n        (n, m) = map(int, stdin.readline().split())\n        (*a,) = stdin.readline().split()\n        (*b,) = stdin.readline().split()\n        stdout.write(str(f(set(a), set(b))) + '\\n')\nmain()", "def main():\n    from sys import stdin, stdout\n    from collections import Counter\n    t = int(stdin.readline())\n\n    def f(a, b):\n        return len(a & b)\n    for i in range(t):\n        (n, m) = map(int, stdin.readline().split())\n        (*a,) = stdin.readline().split()\n        (*b,) = stdin.readline().split()\n        stdout.write(str(f(set(a), set(b))) + '\\n')\nmain()", "for i in range(int(input())):\n    l = []\n    (n, m) = map(int, input().split())\n    N = set(map(int, input().split()))\n    M = set(map(int, input().split()))\n    s = N.intersection(M)\n    print(len(s))", "from math import gcd, sqrt, ceil, floor, log10\nfrom heapq import heapify, heappop, heappush, nsmallest, nlargest\nfrom collections import Counter, deque, OrderedDict, defaultdict\nfrom itertools import combinations, permutations, zip_longest\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache, reduce\nimport sys\nimport time\nimport string\nimport operator\nsys.setrecursionlimit(3000000)\nINT_MAX = float('inf')\nINT_MIN = float('-inf')\nMOD = int(1000000000.0) + 7\nNEWLINE = '\\n'\nSPACE = ' '\ninp = lambda fn: fn(input())\ninp_vars = lambda fn, delim, convert_to=list: convert_to(map(fn, input().split(delim)))\n\ndef solve(*args, **kwargs):\n    (n, m, arr1, arr2) = args\n    res = 0\n    for (k, v) in arr1.items():\n        if k in arr2 and v > 0:\n            res += 1\n            arr1[k] -= 1\n            arr2[k] -= 1\n    for (k, v) in arr2.items():\n        if k in arr1 and v > 0:\n            res += 1\n            arr1[k] -= 1\n            arr2[k] -= 1\n    return res\n\ndef main(*args, **kwargs):\n    for _ in range(int(input())):\n        (arg1, arg2) = inp_vars(int, SPACE)\n        arg3 = inp_vars(int, SPACE, Counter)\n        arg4 = inp_vars(int, SPACE, Counter)\n        res = solve(*(arg1, arg2, arg3, arg4))\n        if type(res) in {list, tuple, set}:\n            print(*res, sep=' ')\n        else:\n            print(res)\nmain()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    arr = set(arr1 + arr2)\n    print(a + b - len(arr))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    n = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    q = set(n)\n    r = set(m)\n    print(len(q.intersection(r)))", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    print(len(set(a).intersection(set(b))))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    a1 = list(sorted(map(int, input().split())))\n    b1 = list(sorted(map(int, input().split())))\n    (i, j, s) = (0, 0, 0)\n    while i < a and j < b:\n        if a1[i] == b1[j]:\n            s += 1\n            i += 1\n            j += 1\n        elif a1[i] > b1[j]:\n            j += 1\n        else:\n            i += 1\n    print(s)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    a1 = list(map(int, input().split()))\n    b1 = list(map(int, input().split()))\n    a1.sort()\n    b1.sort()\n    (i, j, s) = (0, 0, 0)\n    while i < a and j < b:\n        if a1[i] == b1[j]:\n            s += 1\n            i += 1\n            j += 1\n        elif a1[i] > b1[j]:\n            j += 1\n        else:\n            i += 1\n    print(s)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    a1 = set(map(int, input().split()))\n    b1 = set(map(int, input().split()))\n    s = a1.intersection(b1)\n    print(len(s))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = set(map(int, input().split()))\n    b = set(map(int, input().split()))\n    print(len(a.intersection(b)))", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    a = set(map(int, input().split()))\n    b = set(map(int, input().split()))\n    c = b.intersection(a)\n    print(len(c))\n    t -= 1", "from collections import Counter\nfor _ in [0] * int(input()):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = set(arr)\n    b = set(b)\n    c = b.intersection(a)\n    print(len(c))", "for _ in range(int(input())):\n    (a, b) = list(map(int, input().split(' ')))\n    al = list(map(int, input().split(' ')))\n    be = list(map(int, input().split(' ')))\n    l = set(be).intersection(set(al))\n    print(len(l))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    alice = list(map(int, input().split()))\n    berta = list(map(int, input().split()))\n    l = set(alice).intersection(set(berta))\n    print(len(l))", "for tc in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = set(a).intersection(set(b))\n    print(len(l))", "test = int(input())\nfor t in range(test):\n    (n, m) = list(map(int, input().split(' ')))\n    alice = list(map(int, input().split(' ')))\n    bertha = list(map(int, input().split(' ')))\n    x = set(alice).intersection(set(bertha))\n    print(len(x))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    b = [int(y) for y in input().split()]\n    a1 = set(a)\n    b1 = set(b)\n    d = {}\n    for i in a1:\n        if i not in d:\n            d[i] = 1\n    for j in b1:\n        if j in d:\n            d[j] += 1\n    count = 0\n    for m in a1:\n        if d[m] > 1:\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = 0\n    a1 = set(a)\n    b1 = set(b)\n    x = a1.intersection(b1)\n    x = list(x)\n    print(len(x))", "t = int(input())\nwhile t:\n    [n, m] = map(int, input().split())\n    a = map(int, input().split())\n    b = map(int, input().split())\n    s1 = set(a)\n    s2 = set(b)\n    print(len(s1.intersection(s2)))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    ln1 = len(a)\n    a = list(set(a) - set(b))\n    ln2 = len(a)\n    print(ln1 - ln2)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l = l1 + l2\n    s = set(l)\n    print(len(l) - len(s))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = a + b\n    l = set(l)\n    print(n + k - len(l))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = a + b\n    l = set(l)\n    print(n + k - len(l))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    valuesa = input().split()\n    valuesb = input().split()\n    a = set(valuesa)\n    b = set(valuesb)\n    print(len(a.intersection(b)))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    valuesa = input().split()\n    valuesb = input().split()\n    a = set(valuesa)\n    b = set(valuesb)\n    print(len(a.intersection(b)))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    a = set(a)\n    b = set(b)\n    c = a & b\n    print(len(c))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    a = set(a)\n    b = set(b)\n    c = a & b\n    print(len(c))"]