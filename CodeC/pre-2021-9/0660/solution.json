["t = int(input())\nwhile t > 0:\n    ans = 0\n    n = int(input())\n    p = input()\n    e = input()\n    (ps, es, bs, ns) = (0, 0, 0, 0)\n    i = 0\n    while i < n:\n        if p[i] == '1' and e[i] == '0':\n            ps += 1\n        if e[i] == '1' and p[i] == '0':\n            es += 1\n        if e[i] == '1' and e[i] == p[i]:\n            bs += 1\n        if e[i] == '0' and e[i] == p[i]:\n            ns += 1\n        i += 1\n    ans += min(bs, ns)\n    bs = bs - ns if bs > ns else 0\n    ans += min(es, ps)\n    rem = abs(es - ps)\n    ans += min(rem, bs)\n    bs = bs - rem if bs > rem else 0\n    ans += bs // 2\n    print(ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    t = input()\n    if n == 1 or s == '0' * n or t == '0' * n:\n        print('0')\n    else:\n        both = eng = prog = none = 0\n        for i in range(n):\n            if s[i] == '1':\n                if t[i] == '1':\n                    both += 1\n                else:\n                    prog += 1\n            elif t[i] == '1':\n                eng += 1\n            else:\n                none += 1\n        team = min(eng, prog) + min(none, both)\n        if both > none:\n            x = min(abs(eng - prog), both - none)\n            team += x\n            if both - none - x > 0:\n                team += (both - none - x) // 2\n        print(team)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    t = input()\n    if n == 1 or s == '0' * n or t == '0' * n:\n        print('0')\n    else:\n        both = eng = prog = none = 0\n        for i in range(n):\n            if s[i] == '1':\n                if t[i] == '1':\n                    both += 1\n                else:\n                    prog += 1\n            elif t[i] == '1':\n                eng += 1\n            else:\n                none += 1\n        team = min(eng, prog)\n        rem = abs(eng - prog) + none\n        team += min(both, rem)\n        if both > rem:\n            team += (both - rem) // 2\n        print(team)", "rows = int(input())\nfor i in range(rows):\n    n = int(input())\n    p = input().count('1')\n    e = input().count('1')\n    print(min(p, e, int(n / 2)))", "from math import floor\nnum_test_cases = int(input())\nfor _ in range(num_test_cases):\n    N = int(input())\n    python = list(map(int, input()))\n    english = list(map(int, input()))\n    both = 0\n    py = 0\n    eng = 0\n    none = 0\n    for (i, j) in zip(python, english):\n        if i and j:\n            both += 1\n        elif i:\n            py += 1\n        elif j:\n            eng += 1\n        else:\n            none += 1\n    teams_with_both_none = min(both, none)\n    both = both - teams_with_both_none\n    teams_with_py_eng = min(py, eng)\n    leftover = abs(py - eng)\n    teams_with_both_py_eng = 0\n    if both > 0:\n        teams_with_both_py_eng = min(both, leftover)\n        both -= teams_with_both_py_eng\n    teams_with_both = both // 2\n    teams = teams_with_py_eng + teams_with_both_none + teams_with_both_py_eng + teams_with_both\n    print(teams)", "from math import floor\nnum_test_cases = int(input())\nfor _ in range(num_test_cases):\n    N = int(input())\n    python = list(map(int, input()))\n    english = list(map(int, input()))\n    both = 0\n    py = 0\n    eng = 0\n    none = 0\n    for (i, j) in zip(python, english):\n        if i and j:\n            both += 1\n        elif i:\n            py += 1\n        elif j:\n            eng += 1\n        else:\n            none += 1\n    teams_with_both_none = min(both, none)\n    both = both - teams_with_both_none\n    teams_with_py_eng = min(py, eng)\n    leftover = abs(py - eng)\n    teams_with_both_py_eng = 0\n    if both > 0:\n        teams_with_both_py_eng = min(both, leftover)\n        both -= teams_with_both_py_eng\n    teams_with_both = both // 2\n    teams = teams_with_py_eng + teams_with_both_none + teams_with_both_py_eng + teams_with_both\n    print(teams)", "from math import floor\nnum_test_cases = int(input())\nfor _ in range(num_test_cases):\n    N = int(input())\n    python = list(map(int, input()))\n    english = list(map(int, input()))\n    both = 0\n    py = 0\n    eng = 0\n    none = 0\n    for (i, j) in zip(python, english):\n        if i and j:\n            both += 1\n        elif i:\n            py += 1\n        elif j:\n            eng += 1\n        else:\n            none += 1\n    teams_with_both_none = min(both, none)\n    both = both - teams_with_both_none\n    teams_with_py_eng = min(py, eng)\n    leftover = abs(py - eng)\n    teams_with_both_py_eng = 0\n    if both > 0:\n        teams_with_both_py_eng = min(both, leftover)\n        both -= teams_with_both_py_eng\n    teams_with_both = both // 2\n    teams = teams_with_py_eng + teams_with_both_none + teams_with_both_py_eng + teams_with_both\n    print(teams)", "from math import floor\nnum_test_cases = int(input())\nfor _ in range(num_test_cases):\n    N = int(input())\n    python = list(map(int, input()))\n    english = list(map(int, input()))\n    both = 0\n    py = 0\n    eng = 0\n    none = 0\n    for (i, j) in zip(python, english):\n        if i and j:\n            both += 1\n        elif i:\n            py += 1\n        elif j:\n            eng += 1\n        else:\n            none += 1\n    teams_with_both_none = min(both, none)\n    both = both - teams_with_both_none\n    teams_with_py_eng = min(py, eng)\n    leftover = abs(py - eng)\n    teams_with_both_py_eng = 0\n    if both > 0:\n        teams_with_both_py_eng = min(both, leftover)\n        both -= teams_with_both_py_eng\n    teams_with_both = both // 2\n    teams = teams_with_py_eng + teams_with_both_none + teams_with_both_py_eng + teams_with_both\n    print(teams)", "def find_answer(n, english_array, programming):\n    english = 0\n    pro = 0\n    both = 0\n    nothing = 0\n    for position in range(n):\n        if programming[position] == '1' and english_array[position] == '1':\n            both = both + 1\n        elif programming[position] == '1' and english_array[position] == '0':\n            pro += 1\n        elif english_array[position] == '1' and programming[position] == '0':\n            english += 1\n        elif english_array[position] == '0' and programming[position] == '0':\n            nothing += 1\n    pairs_with_e_and_p = min(english, pro)\n    difference = abs(english - pro) + nothing\n    pairs_with_ep_and_others = min(both, difference)\n    remaining_ep = both - pairs_with_ep_and_others\n    pairs_with_just_ep = remaining_ep / 2\n    return int(pairs_with_e_and_p + pairs_with_ep_and_others + pairs_with_just_ep)\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    programming = input()\n    english_array = input()\n    print(find_answer(n, english_array, programming))", "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    programming = input()\n    english_array = input()\n    english = 0\n    pro = 0\n    both = 0\n    nothing = 0\n    for position in range(n):\n        if programming[position] == '1' and english_array[position] == '1':\n            both = both + 1\n        elif programming[position] == '1' and english_array[position] == '0':\n            pro += 1\n        elif english_array[position] == '1' and programming[position] == '0':\n            english += 1\n        elif english_array[position] == '0' and programming[position] == '0':\n            nothing += 1\n    pairs_with_e_and_p = min(english, pro)\n    difference = abs(english - pro) + nothing\n    pairs_with_ep_and_others = min(both, difference)\n    remaining_ep = both - pairs_with_ep_and_others\n    pairs_with_just_ep = remaining_ep / 2\n    print(int(pairs_with_e_and_p + pairs_with_ep_and_others + pairs_with_just_ep))", "def test_func():\n    q = int(input())\n    for j in range(q):\n        n = int(input())\n        s = str(input())\n        t = str(input())\n        pro_count = 0\n        weak_count = 0\n        for i in range(n):\n            if s[i] == '1' and t[i] == '1':\n                pro_count += 1\n            if s[i] == '0' and t[i] == '0':\n                weak_count += 1\n        s_count = s.count('1')\n        t_count = t.count('1')\n        s_count -= pro_count\n        t_count -= pro_count\n        min_t_s = min(t_count, s_count)\n        total_count = min_t_s + pro_count\n        if total_count >= n / 2:\n            total_count = int(n / 2)\n        print(total_count)\ntest_func()", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    c = c1 = c2 = 0\n    for i in range(n):\n        if a[i] == b[i] == '1':\n            c += 1\n        elif a[i] == '0' and b[i] == '1':\n            c1 += 1\n        elif a[i] == '1' and b[i] == '0':\n            c2 += 1\n    print(min(n // 2, min(c1, c2) + c))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    d = {'11': 0, '10': 0, '01': 0, '00': 0}\n    for i in range(n):\n        d[s[i] + t[i]] += 1\n    s1 = min(d['11'], d['00'])\n    d['11'] -= s1\n    s2 = min(d['01'], d['10'])\n    d['01'] -= s2\n    d['10'] -= s2\n    s3 = min(d['11'], max(d['01'], d['10']))\n    d['11'] -= s3\n    print(s1 + s2 + s3 + d['11'] // 2)", "for q in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    sa = sb = 0\n    for i in a:\n        if i == '1':\n            sa += 1\n    for j in b:\n        if j == '1':\n            sb += 1\n    print(min(sa, sb, n // 2))", "for q in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    sa = sb = 0\n    for i in a:\n        if i == '1':\n            sa += 1\n    for j in b:\n        if j == '1':\n            sb += 1\n    print(min(sa, sb, n // 2))", "for _ in range(int(input())):\n    n = int(input())\n    coding = input()\n    english = input()\n    (oc, oe, bo, no) = (0, 0, 0, 0)\n    for i in range(n):\n        if coding[i] == '1' and english[i] == '1':\n            bo += 1\n        elif coding[i] == '1':\n            oc += 1\n        elif english[i] == '1':\n            oe += 1\n        else:\n            no += 1\n    teams = min(oc, oe) + min(bo, no)\n    left1 = max(oc, oe) - min(oc, oe)\n    left2 = bo - no if bo > no else 0\n    teams += min(left1, left2)\n    left2 = left2 - left1 if left2 > left1 else 0\n    teams += left2 // 2\n    print(teams)", "for _ in range(int(input())):\n    n = int(input())\n    coding = input()\n    english = input()\n    (oc, oe, bo, no) = (0, 0, 0, 0)\n    for i in range(n):\n        if coding[i] == '1' and english[i] == '1':\n            bo += 1\n        elif coding[i] == '1':\n            oc += 1\n        elif english[i] == '1':\n            oe += 1\n        else:\n            no += 1\n    teams = min(oc, oe) + min(bo, no)\n    left1 = max(oc, oe) - min(oc, oe)\n    left2 = bo - no if bo > no else 0\n    teams += min(left1, left2)\n    left2 = left2 - left1 if left2 > left1 else 0\n    teams += left2 // 2\n    print(teams)", "n = int(input())\nfor i in range(n):\n    n1 = int(input())\n    n2 = int(input())\n    s = 0\n    while n2 > 0:\n        d = n2 % 10\n        if d == 1:\n            s = s + 1\n        n2 = n2 // 10\n    n3 = int(input())\n    s2 = 0\n    while n3 > 0:\n        d2 = n3 % 10\n        if d2 == 1:\n            s2 = s2 + 1\n        n3 = n3 // 10\n    print(min(s, s2, n1 // 2))", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    sa = sb = 0\n    for i in a:\n        if i == '1':\n            sa += 1\n    for j in b:\n        if j == '1':\n            sb += 1\n    print(min(sa, sb, n // 2))", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    sa = sb = 0\n    for i in a:\n        if i == '1':\n            sa += 1\n    for j in b:\n        if j == '1':\n            sb += 1\n    print(min(sa, sb, n // 2))", "r = int(input())\nwhile r > 0:\n    r -= 1\n    n = int(input())\n    s = str(input())\n    t = str(input())\n    t1 = 0\n    t2 = 0\n    t3 = 0\n    t4 = 0\n    for i in range(n):\n        if s[i] == '1' and t[i] == '0':\n            t1 += 1\n        elif s[i] == '0' and t[i] == '1':\n            t2 += 1\n        elif s[i] == '0' and t[i] == '0':\n            t3 += 1\n        else:\n            t4 += 1\n    if t4 == n:\n        print(n // 2)\n    else:\n        ans = 0\n        u = min(t3, t4)\n        t = min(t1, t2)\n        ans += u + t\n        t1 -= t\n        t2 -= t\n        t3 -= u\n        t4 -= u\n        if t4 > 0:\n            if t1 > 0:\n                tr = min(t4, t1)\n                ans += tr\n                t4 -= tr\n                t1 -= tr\n            else:\n                tr = min(t4, t2)\n                ans += tr\n                t4 -= tr\n                t2 -= tr\n        ans += t4 // 2\n        print(ans)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    print(min(list(s).count('1'), list(t).count('1'), n // 2))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    S = input()\n    T = input()\n    res = min(S.count('1'), T.count('1'), N // 2)\n    print(res)", "for _ in range(int(input())):\n    N = int(input())\n    S = input()\n    T = input()\n    z = 0\n    zo = 0\n    t = 0\n    for i in range(N):\n        if T[i] == '1' and S[i] == '0':\n            if zo < 0:\n                t += 1\n            zo += 1\n        elif T[i] == '0' and S[i] == '1':\n            if zo > 0:\n                t += 1\n            zo -= 1\n        elif T[i] == '0' and S[i] == '0':\n            if z > 0:\n                t += 1\n            z -= 1\n        elif T[i] == '1' and S[i] == '1':\n            if z < 0:\n                t += 1\n            z += 1\n    if z > 0:\n        t += min(z, abs(zo))\n        z -= min(z, abs(zo))\n        t += z // 2\n    print(t)", "for j in range(int(input())):\n    num = int(input())\n    sum1 = input()\n    test1 = input()\n    while len(sum1) > num or len(test1) > num:\n        ssum1 = input(f'Enter binary of lenght{num}')\n        test1 = input(f'Enter binary of lenght{num}')\n    print(min(sum1.count('1'), test1.count('1'), num // 2))", "k = int(input())\nwhile k:\n    k -= 1\n    n = int(input())\n    s = input()\n    t = input()\n    s = [int(i) for i in s]\n    t = [int(i) for i in t]\n    (full, null, a, b) = (0, 0, 0, 0)\n    for i in range(n):\n        if s[i] == 1 and t[i] == 1:\n            full += 1\n        if s[i] == 0 and t[i] == 0:\n            null += 1\n        if s[i] == 1 and t[i] == 0:\n            a += 1\n        if s[i] == 0 and t[i] == 1:\n            b += 1\n    ans = 0\n    if full <= null:\n        ans += full\n        ans += min(a, b)\n    else:\n        ans += null\n        full -= null\n        ans += min(a, b)\n        a = max(a, b) - min(a, b)\n        if full <= a:\n            ans += full\n        else:\n            ans += a\n            full -= a\n            ans += full // 2\n    print(ans)", "k = int(input())\nwhile k:\n    k -= 1\n    n = int(input())\n    s = input()\n    t = input()\n    s = [int(i) for i in s]\n    t = [int(i) for i in t]\n    (full, null, a, b) = (0, 0, 0, 0)\n    for i in range(n):\n        if s[i] == 1 and t[i] == 1:\n            full += 1\n        if s[i] == 0 and t[i] == 0:\n            null += 1\n        if s[i] == 1 and t[i] == 0:\n            a += 1\n        if s[i] == 0 and t[i] == 1:\n            b += 1\n    ans = 0\n    if full <= null:\n        ans += full\n        ans += min(a, b)\n    else:\n        ans += null\n        full -= null\n        ans += min(a, b)\n        a = max(a, b) - min(a, b)\n        if full <= a:\n            ans += full\n        else:\n            ans += a\n            full -= a\n            ans += full // 2\n    print(ans)", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    while len(s) > n or len(t) > n:\n        s = input(f'Enter binary of lenght{n}')\n        t = input(f'Enter binary of lenght{n}')\n    print(min(s.count('1'), t.count('1'), n // 2))", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    while len(s) > n or len(t) > n:\n        s = input(f'Enter binary of lenght{n}')\n        t = input(f'Enter binary of lenght{n}')\n    print(min(s.count('1'), t.count('1'), n // 2))", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    while len(s) > n or len(t) > n:\n        s = input(f'Enter binary of lenght{n}')\n        t = input(f'Enter binary of lenght{n}')\n    print(min(s.count('1'), t.count('1'), n // 2))", "N = int(input())\nfor i in range(N):\n    K = int(input())\n    A = str(input())\n    B = str(input())\n    C1 = A.count('1')\n    C2 = B.count('1')\n    print(min(C1, C2, K // 2))", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    a = str(input())\n    b = str(input())\n    c1 = a.count('1')\n    c2 = b.count('1')\n    print(min(c1, c2, k // 2))", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    while len(s) > n or len(t) > n:\n        s = input(f'Enter binary of lenght{n}')\n        t = input(f'Enter binary of lenght{n}')\n    print(min(s.count('1'), t.count('1'), n // 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = str(input())\n    T = str(input())\n    s1 = s.count('1')\n    s2 = T.count('1')\n    print(min(s1, s2, n // 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = str(input())\n    T = str(input())\n    s1 = s.count('1')\n    s2 = T.count('1')\n    print(min(s1, s2, n // 2))", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    while len(s) != n or len(t) != n:\n        s = input(f'Your iputed binary num was greater/lesser than {n} ,please enter a binary series of lenght{n} ')\n        t = input(f'Your iputed binary num was greater/lesser than {n} ,please enter a binary series of lenght{n} ')\n    print(min(s.count('1'), t.count('1'), n // 2))", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    while len(s) > n or len(t) > n:\n        s = input(f'Enter binary of lenght{n}')\n        t = input(f'Enter binary of lenght{n}')\n    print(min(s.count('1'), t.count('1'), n // 2))", "for i in range(int(input())):\n    n = int(input())\n    p = input()\n    e = input()\n    pecnt = epcnt = bcnt = ncnt = 0\n    for i in range(n):\n        if p[i] == '1' and e[i] == '1':\n            bcnt += 1\n        elif p[i] == '1' and e[i] == '0':\n            pecnt += 1\n        elif p[i] == '0' and e[i] == '1':\n            epcnt += 1\n        else:\n            ncnt += 1\n    teams = min(pecnt, epcnt)\n    teams += min(bcnt, ncnt)\n    if bcnt > ncnt:\n        teams += min(bcnt - ncnt, abs(pecnt - epcnt))\n        if bcnt - ncnt > abs(pecnt - epcnt):\n            teams += (bcnt - ncnt - abs(pecnt - epcnt)) // 2\n    print(teams)", "for i in range(int(input())):\n    n = int(input())\n    p = input()\n    e = input()\n    pecnt = epcnt = bcnt = ncnt = 0\n    for i in range(n):\n        if p[i] == '1' and e[i] == '1':\n            bcnt += 1\n        elif p[i] == '1' and e[i] == '0':\n            pecnt += 1\n        elif p[i] == '0' and e[i] == '1':\n            epcnt += 1\n        else:\n            ncnt += 1\n    teams = min(pecnt, epcnt)\n    teams += min(bcnt, ncnt)\n    if bcnt > ncnt:\n        teams += min(bcnt - ncnt, abs(pecnt - epcnt))\n        if bcnt - ncnt > abs(pecnt - epcnt):\n            teams += (bcnt - ncnt - abs(pecnt - epcnt)) // 2\n    print(teams)", "for i in range(int(input())):\n    n = int(input())\n    s = list(input())\n    t = list(input())\n    print(min(s.count('1'), t.count('1'), n // 2))", "for i in range(int(input())):\n    n = int(input())\n    s = list(input())\n    t = list(input())\n    a = s.count('1')\n    b = t.count('1')\n    print(min(a, b, n // 2))", "for i in range(int(input())):\n    n = int(input())\n    s = list(input())\n    t = list(input())\n    a = s.count('1')\n    b = t.count('1')\n    print(min(a, b, n // 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = str(input())\n    T = str(input())\n    s1 = s.count('1')\n    s2 = T.count('1')\n    print(min(s1, s2, n // 2))", "for i in range(int(input())):\n    n = int(input())\n    s = list(input())\n    t = list(input())\n    a = s.count('1')\n    b = t.count('1')\n    print(min(a, b, n // 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = str(input())\n    u = str(input())\n    b = s.count('1')\n    c = u.count('1')\n    print(min(b, c, n // 2))", "for i in range(int(input())):\n    import math\n    N = int(input())\n    S = input()\n    T = input()\n    cs1 = 0\n    ct1 = 0\n    for i in S:\n        if i == '1':\n            cs1 += 1\n    for i in T:\n        if i == '1':\n            ct1 += 1\n    ans = min(cs1, ct1, N // 2)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    S = input()\n    T = input()\n    res = min(S.count('1'), T.count('1'), N // 2)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    print(min(s.count('1'), t.count('1'), n // 2))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    print(min(s.count('1'), t.count('1'), n // 2))", "def count(i):\n    s = bin(i)\n    return len(s.replace('0', '')) - 1\nfor _ in range(int(input())):\n    n = int(input())\n    s = int(input(), 2)\n    t = int(input(), 2)\n    both = s & t\n    programming = count(s & ~both)\n    english = count(t & ~both)\n    both = count(both)\n    print(min(n // 2, both + min(english, programming)))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    io = 0\n    oi = 0\n    ii = 0\n    oo = 0\n    for i in range(n):\n        if s[i] == '0' and t[i] == '0':\n            oo += 1\n        elif s[i] == '0' and t[i] == '1':\n            oi += 1\n        elif s[i] == '1' and t[i] == '0':\n            io += 1\n        else:\n            ii += 1\n    res = 0\n    res += min(ii, oo)\n    ii = max(0, ii - oo)\n    diff_oi_io = abs(oi - io)\n    res += min(ii, diff_oi_io)\n    ii = max(0, ii - diff_oi_io)\n    io = oi = min(io, oi)\n    res += ii + (2 * io - ii) // 2\n    print(res)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    d = {'none': 0, 'cs': 0, 'eng': 0, 'both': 0}\n    for i in range(n):\n        if s[i] == '1':\n            if t[i] == '1':\n                d['both'] += 1\n            else:\n                d['cs'] += 1\n        elif t[i] == '1':\n            d['eng'] += 1\n        else:\n            d['none'] += 1\n    sum = 0\n    if d['none'] >= d['both']:\n        sum += d['both']\n        d['both'] = 0\n    else:\n        sum += d['none']\n        d['both'] -= d['none']\n    if d['cs'] > d['eng']:\n        sum += d['eng']\n        d['cs'] -= d['eng']\n        x = min(d['cs'], d['both'])\n        sum += x + (d['both'] - x) // 2\n    else:\n        sum += d['cs']\n        d['eng'] -= d['cs']\n        x = min(d['eng'], d['both'])\n        sum += x + (d['both'] - x) // 2\n    print(sum)", "q = int(input())\nfor j in range(q):\n    ni = int(input())\n    s = sum([int(si) for si in input()])\n    t = sum([int(ti) for ti in input()])\n    max_team = min(s, t, ni // 2)\n    print(max_team)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    d = {'none': 0, 'cs': 0, 'eng': 0, 'both': 0}\n    for i in range(n):\n        if s[i] == '1':\n            if t[i] == '1':\n                d['both'] += 1\n            else:\n                d['cs'] += 1\n        elif t[i] == '1':\n            d['eng'] += 1\n        else:\n            d['none'] += 1\n    sum = 0\n    if d['none'] >= d['both']:\n        sum += d['both']\n        d['both'] = 0\n    else:\n        sum += d['none']\n        d['both'] -= d['none']\n    if d['cs'] > d['eng']:\n        sum += d['eng']\n        d['cs'] -= d['eng']\n        x = min(d['cs'], d['both'])\n        sum += x + (d['both'] - x) // 2\n    else:\n        sum += d['cs']\n        d['eng'] -= d['cs']\n        x = min(d['eng'], d['both'])\n        sum += x + (d['both'] - x) // 2\n    print(sum)", "q = int(input())\nn = []\nfor j in range(q):\n    ni = int(input())\n    s = sum([int(si) for si in input()])\n    t = sum([int(ti) for ti in input()])\n    max_team = min(s, t, ni // 2)\n    print(max_team)", "for _ in range(int(input())):\n    n = int(input())\n    s = input().count('1')\n    t = input().count('1')\n    ans = min(min(s, t), n // 2)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input().count('1')\n    t = input().count('1')\n    ans = min(min(s, t), n // 2)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().count('1')\n    t = input().count('1')\n    ans = min(math.ceil(min(s, t)), n // 2)\n    print(ans)", "try:\n    for _ in range(int(input())):\n        length = int(input())\n        s1 = input()\n        s2 = input()\n        os1 = s1.count('1')\n        os2 = s2.count('1')\n        print(min(os1, os2, length // 2))\nexcept:\n    pass", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    s = sum([int(j) for j in input()])\n    t = sum([int(x) for x in input()])\n    print(min(s, t, n // 2))", "q = int(input())\nn = []\nfor j in range(q):\n    ni = int(input())\n    s = sum([int(si) for si in input()])\n    t = sum([int(ti) for ti in input()])\n    max_team = min(s, t, ni // 2)\n    print(max_team)", "try:\n    for _ in range(int(input())):\n        length = int(input())\n        s1 = input()\n        s2 = input()\n        os1 = s1.count('1')\n        os2 = s2.count('1')\n        print(min(os1, os2, length // 2))\nexcept:\n    pass", "try:\n    for _ in range(int(input())):\n        length = int(input())\n        s1 = input()\n        s2 = input()\n        os1 = s1.count('1')\n        os2 = s2.count('1')\n        print(min(os1, os2, length // 2))\nexcept:\n    pass", "try:\n    for _ in range(int(input())):\n        length = int(input())\n        s1 = input()\n        s2 = input()\n        os1 = s1.count('1')\n        os2 = s2.count('1')\n        print(min(os1, os2, length // 2))\nexcept:\n    pass", "try:\n    for _ in range(int(input())):\n        length = int(input())\n        s1 = input()\n        s2 = input()\n        os1 = s1.count('1')\n        os2 = s2.count('1')\n        print(min(os1, os2, length // 2))\nexcept:\n    pass", "try:\n    for _ in range(int(input())):\n        length = int(input())\n        s1 = input()\n        s2 = input()\n        os1 = s1.count('1')\n        os2 = s2.count('1')\n        print(min(os1, os2, length // 2))\nexcept:\n    pass", "try:\n    for _ in range(int(input())):\n        length = int(input())\n        s1 = input()\n        s2 = input()\n        os1 = s1.count('1')\n        os2 = s2.count('1')\n        print(min(os1, os2, length // 2))\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n    count = s.count('1')\n    sum = t.count('1')\n    print(min(count, sum, n // 2))", "t = int(input())\nfor _ in range(t):\n    s = int(input())\n    p = input()\n    g = input()\n    mills = [0] * 4\n    for i in range(s):\n        mills[int(p[i] + g[i], 2)] += 1\n    selfs = min(mills[3], mills[0])\n    mills[3] -= selfs\n    mills[0] -= selfs\n    match = min(mills[1], mills[2])\n    mills[1] -= match\n    mills[2] -= match\n    selfs += match\n    for i in range(1, 3, 1):\n        if mills[i] > 0 and mills[3] > 0:\n            match = min(mills[i], mills[3])\n            mills[3] -= match\n            selfs += match\n    selfs += mills[3] // 2\n    print(selfs)", "try:\n    for _ in range(int(input())):\n        length = int(input())\n        s1 = input()\n        s2 = input()\n        os1 = s1.count('1')\n        os2 = s2.count('1')\n        print(min(os1, os2, length // 2))\nexcept:\n    pass", "try:\n    for _ in range(int(input())):\n        length = int(input())\n        s1 = input()\n        s2 = input()\n        os1 = s1.count('1')\n        os2 = s2.count('1')\n        print(min(os1, os2, length // 2))\nexcept:\n    pass", "t = int(input())\nfor _ in range(t):\n    s = int(input())\n    p = input()\n    g = input()\n    mills = [0] * 4\n    for i in range(s):\n        mills[int(p[i] + g[i], 2)] += 1\n    selfs = min(mills[3], mills[0])\n    mills[3] -= selfs\n    mills[0] -= selfs\n    match = min(mills[1], mills[2])\n    mills[1] -= match\n    mills[2] -= match\n    selfs += match\n    for i in range(1, 3, 1):\n        if mills[i] > 0 and mills[3] > 0:\n            match = min(mills[i], mills[3])\n            mills[3] -= match\n            selfs += match\n    selfs += mills[3] // 2\n    print(selfs)", "t = int(input())\nfor _ in range(t):\n    s = int(input())\n    p = input()\n    g = input()\n    mills = [0] * 4\n    for i in range(s):\n        mills[int(p[i] + g[i], 2)] += 1\n    selfs = min(mills[3], mills[0])\n    mills[3] -= selfs\n    mills[0] -= selfs\n    match = min(mills[1], mills[2])\n    mills[1] -= match\n    mills[2] -= match\n    selfs += match\n    for i in range(1, 3, 1):\n        if mills[i] > 0 and mills[3] > 0:\n            match = min(mills[i], mills[3])\n            mills[3] -= match\n            selfs += match\n    selfs += mills[3] // 2\n    print(selfs)", "Q = int(input())\nfor _ in range(Q):\n    N = int(input())\n    S = input()\n    T = input()\n    skills = [0] * 4\n    for i in range(N):\n        skills[int(S[i] + T[i], 2)] += 1\n    teams = min(skills[3], skills[0])\n    skills[3] -= teams\n    skills[0] -= teams\n    match = min(skills[1], skills[2])\n    skills[1] -= match\n    skills[2] -= match\n    teams += match\n    for i in range(1, 3, 1):\n        if skills[i] > 0 and skills[3] > 0:\n            match = min(skills[i], skills[3])\n            skills[3] -= match\n            teams += match\n    teams += skills[3] // 2\n    print(teams)", "Q = int(input())\nfor _ in range(Q):\n    N = int(input())\n    S = input()\n    T = input()\n    skills = [0] * 4\n    for i in range(N):\n        skills[int(S[i] + T[i], 2)] += 1\n    teams = min(skills[3], skills[0])\n    skills[3] -= teams\n    skills[0] -= teams\n    match = min(skills[1], skills[2])\n    skills[1] -= match\n    skills[2] -= match\n    teams += match\n    for i in range(1, 3, 1):\n        if skills[i] > 0 and skills[3] > 0:\n            match = min(skills[i], skills[3])\n            skills[3] -= match\n            teams += match\n    teams += skills[3] // 2\n    print(teams)", "for i in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    c = [0] * 4\n    e = 0\n    if len(a) == 1:\n        pass\n    else:\n        for i in range(len(a)):\n            if a[i] == '1' and b[i] == '0':\n                c[0] += 1\n            elif a[i] == '0' and b[i] == '1':\n                c[1] += 1\n            elif a[i] == '1' and b[i] == '1':\n                c[2] += 1\n            else:\n                c[3] += 1\n        d = min(c[0], c[1])\n        f = abs(c[0] - c[1])\n        e += d\n        if f + c[3] >= c[2]:\n            e += c[2]\n        else:\n            g = c[2] - (f + c[3])\n            e += g // 2 + (f + c[3])\n    print(e)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    l = [0] * 4\n    for i in range(n):\n        if a[i] == b[i] == '1':\n            l[2] += 1\n        elif a[i] == b[i] == '0':\n            l[3] += 1\n        elif a[i] == '0' and b[i] == '1':\n            l[0] += 1\n        elif a[i] == '1' and b[i] == '0':\n            l[1] += 1\n    ans = min(l[0], l[1])\n    rem = abs(l[0] - l[1])\n    if l[2] >= rem + l[3]:\n        ans += rem + l[3]\n        l[2] -= rem + l[3]\n        ans += l[2] // 2\n    else:\n        ans += l[2]\n    print(ans)", "Q = int(input())\nfor _ in range(Q):\n    N = int(input())\n    S = input()\n    T = input()\n    skills = [0] * 4\n    for i in range(N):\n        skills[int(S[i] + T[i], 2)] += 1\n    teams = min(skills[3], skills[0])\n    skills[3] -= teams\n    skills[0] -= teams\n    match = min(skills[1], skills[2])\n    skills[1] -= match\n    skills[2] -= match\n    teams += match\n    for i in range(1, 3, 1):\n        if skills[i] > 0 and skills[3] > 0:\n            match = min(skills[i], skills[3])\n            skills[3] -= match\n            teams += match\n    teams += skills[3] // 2\n    print(teams)", "Q = int(input())\nfor _ in range(Q):\n    N = int(input())\n    S = input()\n    T = input()\n    skills = [0] * 4\n    for i in range(N):\n        skills[int(S[i] + T[i], 2)] += 1\n    teams = min(skills[3], skills[0])\n    skills[3] -= teams\n    skills[0] -= teams\n    match = min(skills[1], skills[2])\n    skills[1] -= match\n    skills[2] -= match\n    teams += match\n    for i in range(1, 3, 1):\n        if skills[i] > 0 and skills[3] > 0:\n            match = min(skills[i], skills[3])\n            skills[3] -= match\n            teams += match\n    teams += skills[3] // 2\n    print(teams)", "Q = int(input())\nfor _ in range(Q):\n    N = int(input())\n    S = input()\n    T = input()\n    skills = [0] * 4\n    for i in range(N):\n        skills[int(S[i] + T[i], 2)] += 1\n    teams = min(skills[3], skills[0])\n    skills[3] -= teams\n    skills[0] -= teams\n    match = min(skills[1], skills[2])\n    skills[1] -= match\n    skills[2] -= match\n    teams += match\n    for i in range(1, 3, 1):\n        if skills[i] > 0 and skills[3] > 0:\n            match = min(skills[i], skills[3])\n            skills[3] -= match\n            teams += match\n    teams += skills[3] // 2\n    print(teams)", "t = int(input())\nfor i in range(t):\n    z = int(input())\n    (x, y) = (input(), input())\n    c = 0\n    cx = 0\n    cy = 0\n    cw = 0\n    for i in range(z):\n        if x[i] == '1' and x[i] == y[i]:\n            cw += 1\n        else:\n            if x[i] == '1':\n                cx += 1\n            if y[i] == '1':\n                cy += 1\n        cz = z - (cw + cx + cy)\n    c += min(cx, cy) + min(cw, cz + abs(cx - cy)) + (cw - min(cw, cz + abs(cx - cy))) // 2\n    print(c)", "M = 1000000007\n\ndef solve():\n    n = int(input())\n    s = input()\n    t = input()\n    p = e = no = b = 0\n    for i in range(n):\n        if s[i] == '0' and t[i] == '0':\n            no += 1\n        elif s[i] == '1' and t[i] == '1':\n            b += 1\n        elif s[i] == '1':\n            p += 1\n        elif t[i] == '1':\n            e += 1\n    c = min(b, no) + min(p, e)\n    if b > no:\n        c += min(abs(p - e), b - no)\n    if abs(p - e) < b - no:\n        c += (b - no - abs(p - e)) // 2\n    print(c)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    z = int(input())\n    (x, y) = (input(), input())\n    c = 0\n    cx = 0\n    cy = 0\n    cw = 0\n    for i in range(z):\n        if x[i] == '1' and x[i] == y[i]:\n            cw += 1\n        else:\n            if x[i] == '1':\n                cx += 1\n            if y[i] == '1':\n                cy += 1\n        cz = z - (cw + cx + cy)\n    c += min(cx, cy) + min(cw, cz + abs(cx - cy)) + (cw - min(cw, cz + abs(cx - cy))) // 2\n    print(c)", "t = int(input())\nfor i in range(t):\n    z = int(input())\n    (x, y) = (input(), input())\n    c = 0\n    cx = 0\n    cy = 0\n    cw = 0\n    for i in range(z):\n        if x[i] == '1' and x[i] == y[i]:\n            cw += 1\n        else:\n            if x[i] == '1':\n                cx += 1\n            if y[i] == '1':\n                cy += 1\n        cz = z - (cw + cx + cy)\n    c += min(cx, cy) + min(cw, cz + abs(cx - cy)) + (cw - min(cw, cz + abs(cx - cy))) // 2\n    print(c)", "t = int(input())\nfor i in range(t):\n    z = int(input())\n    (x, y) = (input(), input())\n    c = 0\n    cx = 0\n    cy = 0\n    cw = 0\n    for i in range(z):\n        if x[i] == '1' and x[i] == y[i]:\n            cw += 1\n        else:\n            if x[i] == '1':\n                cx += 1\n            if y[i] == '1':\n                cy += 1\n        cz = z - (cw + cx + cy)\n    c += min(cx, cy) + min(cw, cz + abs(cx - cy)) + (cw - min(cw, cz + abs(cx - cy))) // 2\n    print(c)", "t = int(input())\nfor i in range(t):\n    z = int(input())\n    (x, y) = (input(), input())\n    c = 0\n    cx = 0\n    cy = 0\n    cw = 0\n    for i in range(z):\n        if x[i] == '1' and x[i] == y[i]:\n            cw += 1\n        else:\n            if x[i] == '1':\n                cx += 1\n            if y[i] == '1':\n                cy += 1\n        cz = z - (cw + cx + cy)\n    c += min(cx, cy) + min(cw, cz + abs(cx - cy)) + (cw - min(cw, cz + abs(cx - cy))) // 2\n    print(c)", "t = int(input())\nfor i in range(t):\n    z = int(input())\n    (x, y) = (input(), input())\n    c = 0\n    cx = 0\n    cy = 0\n    cw = 0\n    for i in range(z):\n        if x[i] == '1' and x[i] == y[i]:\n            cw += 1\n        else:\n            if x[i] == '1':\n                cx += 1\n            if y[i] == '1':\n                cy += 1\n        cz = z - (cw + cx + cy)\n    c += min(cx, cy) + min(cw, cz + abs(cx - cy)) + (cw - min(cw, cz + abs(cx - cy))) // 2\n    print(c)", "import sys\ninput = sys.stdin.readline\ntestcase = int(input())\nwhile testcase:\n    testcase -= 1\n    n = int(input())\n    r = input()\n    s = input()\n    ctb = 0\n    ctcp = 0\n    cte = 0\n    for i in range(n):\n        if r[i] == '1' and s[i] == '1':\n            ctb += 1\n        elif r[i] == '1' and s[i] == '0':\n            ctcp += 1\n        elif r[i] == '0' and s[i] == '1':\n            cte += 1\n    x = min(ctcp, cte)\n    ans = ctb + min(x, (n - 2 * ctb) // 2)\n    sys.stdout.write(str(ans) + '\\n')", "T = int(input())\nfor it in range(T):\n    N = int(input())\n    S = input()\n    T = input()\n    p = 0\n    e = 0\n    b = 0\n    for i in range(N):\n        if S[i] == '1' and T[i] == '0':\n            p += 1\n        elif S[i] == '0' and T[i] == '1':\n            e += 1\n        elif S[i] == '1' and T[i] == '1':\n            b += 1\n    s = 0\n    val = min(e, p)\n    s += val\n    s = min(N // 2, b + val)\n    print(s)", "M = 1000000007\n\ndef solve():\n    n = int(input())\n    s = input()\n    t = input()\n    p = e = no = b = 0\n    for i in range(n):\n        if s[i] == '0' and t[i] == '0':\n            no += 1\n        elif s[i] == '1' and t[i] == '1':\n            b += 1\n        elif s[i] == '1':\n            p += 1\n        elif t[i] == '1':\n            e += 1\n    c = min(b, no) + min(p, e)\n    if b > no:\n        c += min(abs(p - e), b - no)\n    if abs(p - e) < b - no:\n        c += (b - no - abs(p - e)) // 2\n    print(c)\nfor _ in range(int(input())):\n    solve()", "M = 1000000007\n\ndef solve():\n    n = int(input())\n    s = input()\n    t = input()\n    p = e = no = b = 0\n    for i in range(n):\n        if s[i] == '0' and t[i] == '0':\n            no += 1\n        elif s[i] == '1' and t[i] == '1':\n            b += 1\n        elif s[i] == '1':\n            p += 1\n        elif t[i] == '1':\n            e += 1\n    c = min(b, no) + min(p, e)\n    if b > no:\n        c += min(abs(p - e), b - no)\n    if abs(p - e) < b - no:\n        c += (b - no - abs(p - e)) // 2\n    print(c)\nfor _ in range(int(input())):\n    solve()", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)) + '\\n')\n\ndef main():\n    for _ in tr():\n        n = nl()\n        s = line()\n        t = line()\n        eng_only = 0\n        pro_only = 0\n        both = 0\n        nothing = 0\n        for i in range(n):\n            if s[i] == '1' and t[i] == '1':\n                both += 1\n            elif s[i] == '1':\n                pro_only += 1\n            elif t[i] == '1':\n                eng_only += 1\n            else:\n                nothing += 1\n        combo = min(eng_only, pro_only)\n        result = combo\n        eng_only -= combo\n        pro_only -= combo\n        combo = min(both, eng_only + pro_only + nothing)\n        result += combo\n        both -= combo\n        result += both // 2\n        print(result)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    (pro, eng, both, minm, rem) = (0, 0, 0, 0, 0)\n    u = 0\n    for i in range(n):\n        if s1[i] == s2[i] == '1':\n            both += 1\n        elif s1[i] == '1' and s2[i] == '0':\n            pro += 1\n        elif s1[i] == '0' and s2[i] == '1':\n            eng += 1\n        else:\n            rem += 1\n    minm = min(pro, eng)\n    pro -= minm\n    eng -= minm\n    u += minm\n    minm = min(both, pro + rem + eng)\n    u += minm\n    both -= minm\n    u += both // 2\n    print(u)", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    (pro, eng, both, minm, rem) = (0, 0, 0, 0, 0)\n    u = 0\n    for i in range(n):\n        if s1[i] == s2[i] == '1':\n            both += 1\n        elif s1[i] == '1' and s2[i] == '0':\n            pro += 1\n        elif s1[i] == '0' and s2[i] == '1':\n            eng += 1\n        else:\n            rem += 1\n    minm = min(pro, eng)\n    pro -= minm\n    eng -= minm\n    u += minm\n    minm = min(both, pro + rem + eng)\n    u += minm\n    both -= minm\n    u += both // 2\n    print(u)", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    (pro, eng, both, minm, rem) = (0, 0, 0, 0, 0)\n    ans = 0\n    for i in range(n):\n        if s1[i] == s2[i] == '1':\n            both += 1\n        elif s1[i] == '1' and s2[i] == '0':\n            pro += 1\n        elif s1[i] == '0' and s2[i] == '1':\n            eng += 1\n        else:\n            rem += 1\n    minm = min(pro, eng)\n    pro -= minm\n    eng -= minm\n    ans += minm\n    minm = min(both, pro + rem + eng)\n    ans += minm\n    both -= minm\n    ans += both // 2\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    S = input()\n    T = input()\n    no = 0\n    oe = 0\n    op = 0\n    bo = 0\n    res = 0\n    for i in range(N):\n        if S[i] == '1' and T[i] == '1':\n            bo += 1\n        elif S[i] == '1':\n            op += 1\n        elif T[i] == '1':\n            oe += 1\n        else:\n            no += 1\n    if oe > op:\n        oe = oe - op\n        res += op\n        if bo > no:\n            bo = bo - no\n            res += no\n            if bo > oe:\n                bo = bo - oe\n                res += oe\n                res += bo // 2\n            else:\n                res += bo\n        else:\n            res += bo\n    else:\n        op = op - oe\n        res += oe\n        if bo > no:\n            bo = bo - no\n            res += no\n            if bo > op:\n                bo = bo - op\n                res += op\n                res += bo // 2\n            else:\n                res += bo\n        else:\n            res += bo\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    o1 = []\n    o2 = []\n    t2 = []\n    t4 = []\n    for i in range(n):\n        if s1[i] == '1' and s2[i] == '0':\n            o1.append(1)\n        elif s2[i] == '1' and s1[i] == '0':\n            o2.append(1)\n        elif s1[i] == '1' and s2[i] == '1':\n            t2.append(1)\n        else:\n            t4.append(1)\n    max_team = n // 2\n    mn = min(len(o1), len(o2))\n    if mn < max_team:\n        while len(t2) > 0 and mn < max_team:\n            mn += t2.pop(0)\n    print(mn)", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    o1 = []\n    o2 = []\n    t2 = []\n    t4 = []\n    for i in range(n):\n        if s1[i] == '1' and s2[i] == '0':\n            o1.append(1)\n        elif s2[i] == '1' and s1[i] == '0':\n            o2.append(1)\n        elif s1[i] == '1' and s2[i] == '1':\n            t2.append(1)\n        else:\n            t4.append(1)\n    max_team = n // 2\n    mn = min(len(o1), len(o2))\n    if mn < max_team:\n        while len(t2) > 0 and mn < max_team:\n            mn += t2.pop(0)\n    print(mn)", "for k in range(int(input())):\n    a12 = int(input())\n    b12 = input()\n    c12 = input()\n    d12 = {'none': 0, 'cs': 0, 'eng': 0, 'both': 0}\n    for k in range(a12):\n        if b12[k] == '1':\n            if c12[k] == '1':\n                d12['both'] += 1\n            else:\n                d12['cs'] += 1\n        elif c12[k] == '1':\n            d12['eng'] += 1\n        else:\n            d12['none'] += 1\n    sum = 0\n    if d12['none'] >= d12['both']:\n        sum += d12['both']\n        d12['both'] = 0\n    else:\n        sum += d12['none']\n        d12['both'] -= d12['none']\n    if d12['cs'] > d12['eng']:\n        sum += d12['eng']\n        d12['cs'] -= d12['eng']\n        e34 = min(d12['cs'], d12['both'])\n        sum += e34 + (d12['both'] - e34) // 2\n    else:\n        sum += d12['cs']\n        d12['eng'] -= d12['cs']\n        e34 = min(d12['eng'], d12['both'])\n        sum += e34 + (d12['both'] - e34) // 2\n    print(sum)"]