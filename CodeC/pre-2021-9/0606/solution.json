["for _ in range(int(input())):\n    n = int(input())\n    start = []\n    end = []\n    d = {}\n    for i in range(n - 1):\n        (a, b, c) = input().split(' ')\n        d[a] = [b, c]\n        start += [a]\n        end += [b]\n    for i in start:\n        if not i in end:\n            k = i\n            break\n    c = 0\n    while k in d.keys():\n        print(k, d[k][0], d[k][1])\n        q = ''\n        da = ''\n        for i in d[k][1]:\n            if i.isnumeric():\n                q += i\n            else:\n                da += i\n        c += int(q)\n        k = d[k][0]\n    print(str(c) + da)", "for _ in range(int(input())):\n    n = int(input())\n    start = []\n    end = []\n    d = {}\n    for i in range(n - 1):\n        (a, b, c) = input().split(' ')\n        d[a] = [b, c]\n        start += [a]\n        end += [b]\n    for i in start:\n        if not i in end:\n            k = i\n            break\n    c = 0\n    while k in d.keys():\n        print(k, d[k][0], d[k][1])\n        q = ''\n        da = ''\n        for i in d[k][1]:\n            if i.isnumeric():\n                q += i\n            else:\n                da += i\n        c += int(q)\n        k = d[k][0]\n    print(str(c) + da)", "def hetro_list():\n    return list(input().split())\nfrom collections import Counter, defaultdict\n\ndef main():\n    occur = Counter(lst)\n    s_e_lst = []\n    for ele in occur:\n        if occur[ele] == 1:\n            s_e_lst.append(ele)\n    (s, e) = (s_e_lst[0], s_e_lst[1])\n    if e in dct:\n        (s, e) = (e, s)\n    ans = []\n    while True:\n        if s == e:\n            break\n        (end, cost) = dct[s]\n        ans.append([s, end, cost])\n        s = end\n    for ele in ans:\n        print(*ele)\n    print(f'{total_cost}' + ext)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    dct = defaultdict(list)\n    total_cost = 0\n    lst = []\n    ext = ''\n    for i in range(n - 1):\n        (a, b, cost) = hetro_list()\n        lst.extend([a, b])\n        total_cost += int(cost[:-1])\n        ext = cost[-1:]\n        dct[a].extend([b, cost])\n    main()", "mod = 1000000007\n\ndef integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\nimport math\nimport sys\nfrom collections import Counter, defaultdict\n\ndef main():\n    occur = Counter(lst)\n    s_e_lst = []\n    for ele in occur:\n        if occur[ele] == 1:\n            s_e_lst.append(ele)\n    (s, e) = (s_e_lst[0], s_e_lst[1])\n    if e in dct:\n        (s, e) = (e, s)\n    ans = []\n    while True:\n        if s == e:\n            break\n        (end, cost) = dct[s]\n        ans.append([s, end, cost])\n        s = end\n    for ele in ans:\n        print(*ele)\n    print(f'{total_cost}' + ext)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    dct = defaultdict(list)\n    total_cost = 0\n    lst = []\n    ext = ''\n    for i in range(n - 1):\n        (a, b, cost) = hetro_list()\n        lst.append(a)\n        lst.append(b)\n        total_cost += int(cost[:-1])\n        ext = cost[-1:]\n        dct[a].extend([b, cost])\n    main()"]