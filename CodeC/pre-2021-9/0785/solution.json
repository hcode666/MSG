["def returnIndexAfterContinuousOnes(s):\n    l = len(s)\n    i = l - 1\n    while i >= 0 and s[i] == '1':\n        i -= 1\n    return i\n\ndef returnCountOfOnes(s, j):\n    i = j\n    sum = 0\n    while i >= 0:\n        if s[i] == '1':\n            sum += 1\n        i -= 1\n    return sum\nt = int(input())\nfor xyz in range(t):\n    inp = str(input()).split()\n    l1 = inp[0]\n    l2 = inp[1]\n    l3 = inp[2]\n    n = int(inp[3])\n    len3 = len(l3)\n    i = len3 - 1\n    ans = 1\n    chk = returnIndexAfterContinuousOnes(l3)\n    if chk == -1:\n        chk = returnIndexAfterContinuousOnes(l2)\n        if chk == -1:\n            chk = returnIndexAfterContinuousOnes(l1)\n            if chk == -1:\n                ans += 0\n            else:\n                ans += returnCountOfOnes(l1, chk)\n        else:\n            ans += returnCountOfOnes(l2, chk) + returnCountOfOnes(l2, len(l2) - 1) * (n - 1) + returnCountOfOnes(l1, len(l1) - 1)\n    else:\n        ans += returnCountOfOnes(l3, chk) + returnCountOfOnes(l2, len(l2) - 1) * n + returnCountOfOnes(l1, len(l1) - 1)\n    print(ans)", "import sys\nsys.setrecursionlimit(10 ** 9)\n\ndef pad(s):\n    if s == '':\n        return s\n    if s[0] == '0':\n        return pad(s[1:])\n    return s\n\ndef pad1(s):\n    if s == '':\n        return s\n    if s[0] == '1':\n        return pad1(s[1:])\n    return s\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (s1, s2, s3, n) = map(str, input().split())\n    n = int(n)\n    if n <= 10:\n        s = s1 + n * s2 + s3\n        s = pad(s)[::-1]\n        s = pad1(s)\n        print(s.count('1') + 1)\n    else:\n        n -= 2\n        if pad(s1 + s2) == '':\n            s3 = pad1(pad(s3)[::-1])\n            print(s3.count('1') + 1)\n        elif pad1((s2 + s3)[::-1]) == '':\n            s1 = pad1(pad(s1)[::-1])\n            print(s1.count('1') + 1)\n        else:\n            s1 += s2\n            s1 = pad(s1)\n            s3 = s2 + s3\n            s3 = s3[::-1]\n            s3 = pad1(s3)\n            print(s1.count('1') + n * s2.count('1') + s3.count('1') + 1)", "def returnIndexAfterContinuousOnes(s):\n    l = len(s)\n    i = l - 1\n    while i >= 0 and s[i] == '1':\n        i -= 1\n    return i\n\ndef returnCountOfOnes(s, j):\n    i = j\n    sum = 0\n    while i >= 0:\n        if s[i] == '1':\n            sum += 1\n        i -= 1\n    return sum\nt = int(input())\nfor xyz in range(t):\n    inp = str(input()).split()\n    l1 = inp[0]\n    l2 = inp[1]\n    l3 = inp[2]\n    n = int(inp[3])\n    len3 = len(l3)\n    i = len3 - 1\n    ans = 1\n    chk = returnIndexAfterContinuousOnes(l3)\n    if chk == -1:\n        chk = returnIndexAfterContinuousOnes(l2)\n        if chk == -1:\n            chk = returnIndexAfterContinuousOnes(l1)\n            if chk == -1:\n                ans += 0\n            else:\n                ans += returnCountOfOnes(l1, chk)\n        else:\n            ans += returnCountOfOnes(l2, chk) + returnCountOfOnes(l2, len(l2) - 1) * (n - 1) + returnCountOfOnes(l1, len(l1) - 1)\n    else:\n        ans += returnCountOfOnes(l3, chk) + returnCountOfOnes(l2, len(l2) - 1) * n + returnCountOfOnes(l1, len(l1) - 1)\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    inp = input().split()\n    n = int(inp[3])\n    inp_1 = inp[0]\n    inp_2 = inp[1]\n    inp_3 = inp[2]\n    len1 = len(inp_1)\n    len2 = len(inp_2)\n    len3 = len(inp_3)\n    count = 1\n    c = len3 - 1\n    found_zero = 0\n    while c >= 0:\n        if inp_3[c] == '0':\n            found_zero = 1\n            c -= 1\n            continue\n        elif found_zero:\n            count += 1\n            c -= 1\n        else:\n            c -= 1\n    c = len2 - 1\n    cnt = 0\n    while c >= 0:\n        if inp_2[c] == '0':\n            found_zero = 1\n            c -= 1\n            continue\n        elif found_zero:\n            count += n\n            c -= 1\n        else:\n            cnt += 1\n            c -= 1\n    if found_zero:\n        count += (n - 1) * cnt\n    c = len1 - 1\n    while c >= 0:\n        if inp_1[c] == '0':\n            found_zero = 1\n            c -= 1\n            continue\n        elif found_zero:\n            count += 1\n            c -= 1\n        else:\n            c -= 1\n    print(count)", "def fdown(i):\n    return i & i + 1\n\ndef actual_answer(value):\n    count = 0\n    while value > 0:\n        value = fdown(value) - 1\n        count += 1\n    return count\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (l1, l2, l3, n) = input().split()\n    n = int(n)\n    case1 = int(l1 + l2 + l3, base=2)\n    case2 = int(l1 + l2 * 2 + l3, base=2)\n    count_case1 = actual_answer(case1)\n    count_case2 = actual_answer(case2)\n    diff = count_case2 - count_case1\n    answer = count_case1 + (n - 1) * diff\n    print(answer)", "t = int(input())\nfor i in range(t):\n    (l1, l2, l3, n) = input().strip().split(' ')\n    n = int(n)\n    cnt = 0\n    if l3.count('0') == 0:\n        if l2.count('0') == 0:\n            ll1 = bin(int(l1, 2) + 1)\n            ll1 = ll1[2:len(ll1)]\n            cnt = ll1.count('1')\n        else:\n            ll2 = bin(int(l2, 2) + 1)\n            ll2 = ll2[2:len(ll2)]\n            cnt += l2.count('1') * (n - 1) + ll2.count('1')\n            cnt += l1.count('1')\n    else:\n        ll3 = bin(int(l3, 2) + 1)\n        ll3 = ll3[2:len(ll3)]\n        cnt += ll3.count('1') + l2.count('1') * n + l1.count('1')\n    print(cnt)", "t = int(input())\nfor i in range(0, t):\n    count = 0\n    (l1, l2, l3, n) = map(str, input().split())\n    N = int(n)\n    L = int(l3, 2)\n    if len(l3) == l3.count('1'):\n        if len(l2) == l2.count('1'):\n            l = int(l1, 2) + 1\n            l1 = bin(l)\n            L1 = l1.count('1')\n        else:\n            l4 = l2\n            l = int(l4, 2) + 1\n            l4 = bin(l)\n            n1 = l4.count('1')\n            n2 = (N - 1) * l2.count('1')\n            n3 = l1.count('1')\n            L1 = n1 + n2 + n3\n    else:\n        L = L + 1\n        l3 = bin(L)\n        L1 = l1.count('1') + N * l2.count('1') + l3.count('1')\n    print(L1)", "t = int(input())\ni = 0\nwhile i < t:\n    (l1, l2, l3, N) = input().strip().split(' ')\n    N = int(N)\n    if (l1.count('0') == 0 and l2.count('0') == 0) and l3.count('0') == 0:\n        print('1')\n    elif l3.count('0') == 0 and l2.count('0') == 0:\n        s1 = bin(int(l1, 2) + 1)\n        s1 = s1[2:len(s1)]\n        print(s1.count('1'))\n    elif l3.count('0') == 0:\n        s1 = bin(int(l2, 2) + 1)\n        s1 = s1[2:len(s1)]\n        print(l1.count('1') + l2.count('1') * (N - 1) + s1.count('1'))\n    else:\n        s1 = bin(int(l3, 2) + 1)\n        l3 = s1[2:len(s1)]\n        print(l1.count('1') + l2.count('1') * N + l3.count('1'))\n    i += 1", "t = int(input())\nfor i in range(t):\n    (l1, l2, l3, n) = map(str, input().split())\n    len1 = l1.count('1')\n    len2 = l2.count('1')\n    len3 = l3.count('1')\n    if len3 == len(l3):\n        if len2 == len(l2):\n            if len1 == len(l1):\n                print(1)\n            else:\n                ind = -1\n                while l1[ind] != '0':\n                    ind = ind - 1\n                print(max(0, len1 + ind + 1) + 1)\n        else:\n            ind = -1\n            while l2[ind] != '0':\n                ind = ind - 1\n            print(len2 * (int(n) - 1) + len1 + max(0, len2 + ind + 1) + 1)\n    elif l3[-1] == '1':\n        ind = -1\n        while l3[ind] != '0':\n            ind = ind - 1\n        print(len1 + len2 * int(n) + max(0, len3 + ind + 1) + 1)\n    else:\n        print(len1 + len2 * int(n) + len3 + 1)", "for z in range(int(input())):\n    li = [i for i in input().split()]\n    (ans, temp) = (0, 0)\n    if li[2][-1] == '0':\n        ans = 1\n        for i in li[0]:\n            if i == '1':\n                ans += 1\n        for i in li[1]:\n            if i == '1':\n                temp += 1\n        temp *= int(li[3])\n        ans += temp\n        for i in li[2]:\n            if i == '1':\n                ans += 1\n    else:\n        (zc, dex) = (-1, 0)\n        for i in li[2][::-1]:\n            if zc == 0:\n                if i == '1':\n                    ans += 1\n            if i == '0':\n                zc = 0\n        if zc == 0:\n            for i in li[1]:\n                if i == '1':\n                    temp += 1\n            temp *= int(li[3])\n            ans += temp\n            for i in li[0]:\n                if i == '1':\n                    ans += 1\n        else:\n            for i in li[1][::-1]:\n                if zc == 0:\n                    if i == '1':\n                        ans += 1\n                if i == '0':\n                    zc = 0\n            if zc == 0:\n                for i in li[1]:\n                    if i == '1':\n                        temp += 1\n                temp *= int(li[3]) - 1\n                ans += temp\n                for i in li[0]:\n                    if i == '1':\n                        ans += 1\n            else:\n                for i in li[0][::-1]:\n                    if zc == 0:\n                        if i == '1':\n                            ans += 1\n                    if i == '0':\n                        zc = 0\n        ans += 1\n    print(ans)", "t = int(input())\nans = []\nfor i in range(t):\n    ip = list(input().split(' '))\n    l1 = ip[0]\n    l2 = ip[1]\n    l3 = ip[2]\n    n = int(ip[3])\n    zero_flag = 0\n    count = 0\n    rep_count = 0\n    for j in range(len(l3) - 1, -1, -1):\n        if l3[j] == '1':\n            count += 1\n            if zero_flag == 0:\n                rep_count += 1\n        else:\n            zero_flag = 1\n    l2_count = 0\n    l2_rep_count = 0\n    zero_flag = 0\n    for j in range(len(l2) - 1, -1, -1):\n        if l2[j] == '1':\n            l2_count += 1\n            if zero_flag == 0:\n                l2_rep_count += 1\n        else:\n            zero_flag = 1\n    l1_count = 0\n    l1_rep_count = 0\n    zero_flag = 0\n    for j in range(len(l1) - 1, -1, -1):\n        if l1[j] == '1':\n            l1_count += 1\n            if zero_flag == 0:\n                l1_rep_count += 1\n        else:\n            zero_flag = 1\n    if rep_count == len(l3):\n        if l2_rep_count == len(l2):\n            rep_count += l2_rep_count * n + l1_rep_count\n        else:\n            rep_count += l2_rep_count\n    count += l2_count * n + l1_count\n    count -= rep_count\n    ans.append(count + 1)\nfor x in ans:\n    print(x)", "t = input()\nt = int(t)\nwhile t:\n    (l1, l2, l3, n) = input().split()\n    n = int(n)\n    counter = 0\n    t = t - 1\n    if l3.count('1') == len(l3):\n        if l2.count('1') == len(l2):\n            if l1.count('1') == len(l1):\n                counter = 1\n                print(counter)\n                continue\n            else:\n                temp = int(l1, 2)\n                temp += 1\n                counter += bin(temp).count('1')\n                print(counter)\n                continue\n        else:\n            temp = int(l2, 2)\n            temp += 1\n            counter += bin(temp).count('1')\n            counter += l1.count('1')\n            counter += (n - 1) * l2.count('1')\n            print(counter)\n            continue\n    else:\n        temp = int(l3, 2)\n        temp += 1\n        counter += bin(temp).count('1')\n        counter += l1.count('1')\n        counter += n * l2.count('1')\n        print(counter)\n        continue", "t = int(input())\nwhile t > 0:\n    l = ['', '', '']\n    c = 1\n    (l1, l2, l3, n) = input().split(' ')\n    n = int(n)\n    (a1, b1, c1) = (l1.count('1'), l2.count('1'), l3.count('1'))\n    (a0, b0, c0) = (l1.count('0'), l2.count('0'), l3.count('0'))\n    if c0 == 0:\n        if b0 == 0:\n            if a0 == 0:\n                print(1)\n            else:\n                i = len(l1) - 1\n                while i >= 0 and l1[i] == '1':\n                    i = i - 1\n                while i >= 0:\n                    if l1[i] == '1':\n                        c = c + 1\n                    i = i - 1\n                print(c)\n        else:\n            i = len(l2) - 1\n            while i >= 0 and l2[i] == '1':\n                i = i - 1\n            while i >= 0:\n                if l2[i] == '1':\n                    c = c + 1\n                i = i - 1\n            print(c + a1 + b1 * (n - 1))\n    else:\n        i = len(l3) - 1\n        while i >= 0 and l3[i] == '1':\n            i = i - 1\n        while i >= 0:\n            if l3[i] == '1':\n                c = c + 1\n            i = i - 1\n        print(c + a1 + b1 * n)\n    t = t - 1", "for t in range(int(input())):\n    l = list(input().strip().split())\n    l[3] = int(l[3])\n    str2 = l[2]\n    str2 = str2[::-1]\n    flag = [False] * 3\n    count = 1\n    i = 0\n    while i < len(str2) and str2[i] == '1':\n        i += 1\n    if i == len(str2):\n        flag[2] = True\n    if not flag[2]:\n        count = count + str2[i:].count('1') + l[1].count('1') * l[3] + l[0].count('1')\n    elif flag[2]:\n        str1 = l[1]\n        str1 = str1[::-1]\n        j = 0\n        while j < len(str1) and str1[j] == '1':\n            j += 1\n        if j == len(str1):\n            flag[1] = True\n        if not flag[1]:\n            count = count + str1[j:].count('1') + l[1].count('1') * (l[3] - 1) + l[0].count('1')\n        elif flag[1]:\n            str0 = l[0]\n            str0 = str0[::-1]\n            k = 0\n            while k < len(str0) and str0[k] == '1':\n                k += 1\n            if k == len(str0):\n                flag[0] = True\n            if not flag[0]:\n                count = count + str0[k:].count('1')\n            elif flag[0]:\n                count = count\n    print(count)", "t = int(input())\nfor i in range(t):\n    (l1, l2, l3, n) = map(lambda x: x.strip(), list(input().split()))\n    n = int(n)\n    x = l3.rfind('0')\n    if x == -1:\n        y = l2.rfind('0')\n        if y == -1:\n            z = l1.rfind('0')\n            if z == -1:\n                print(1)\n            else:\n                print(1 + l1.count('1', 0, z))\n        else:\n            count = l2.count('1') * n + l1.count('1') - l2.count('1', y)\n            print(1 + count)\n    elif x == len(l3) - 1:\n        count = l3.count('1') + l2.count('1') * n + l1.count('1')\n        print(1 + count)\n    else:\n        count = l3.count('1') - l3.count('1', x) + l2.count('1') * n + l1.count('1')\n        print(1 + count)", "for i in range(0, int(input())):\n    lst = [i for i in input().split()]\n    (s1, s2, s3, n) = (lst[0], lst[1], lst[2], int(lst[3]))\n    o = 0\n    for i in s1:\n        if i == '1':\n            o += 1\n    for i in s2:\n        if i == '1':\n            o += n\n    for i in s3:\n        if i == '1':\n            o += 1\n    o += 1\n    l = len(s3) - 1\n    if s3[l] == '1':\n        while l >= 0 and s3[l] == '1':\n            l -= 1\n            o -= 1\n        if l == -1:\n            l = len(s2) - 1\n            k = 0\n            while l >= 0 and s2[l] == '1':\n                l -= 1\n                k += 1\n            if k == len(s2):\n                o -= n * len(s2)\n            else:\n                o -= k\n            if l == -1:\n                l = len(s1) - 1\n                while l >= 0 and s1[l] == '1':\n                    l -= 1\n                    o -= 1\n    print(o)", "for Fewti in range(int(input())):\n    (a, b, c, n) = map(str, input().split())\n    n = int(n)\n    s = a + b + c\n    ca = a.count('1')\n    cb = b.count('1')\n    cc = c.count('1')\n    c = ca + n * cb + cc\n    i = len(s) - 1\n    l = i + 1\n    while i >= 0:\n        if s[i] == '0':\n            break\n        i -= 1\n    if i == l - 1:\n        print(c + 1)\n    elif i == -1:\n        print(1)\n    elif i <= len(a) - 1:\n        print(c - (len(a) - i - 1) + 1 - (n * cb + cc))\n    else:\n        print(c - (l - i - 1) + 1)", "T = int(input())\nfor _t in range(T):\n    (a, b, c, n) = input().strip().split(' ')\n    n = int(n)\n    ans = 0\n    if '0' not in a + b + c:\n        ans = 1\n    elif '1' not in a + b + c:\n        ans = 0\n    else:\n        if '0' in c:\n            ans = 0\n        elif '0' in b:\n            c = b\n            n -= 1\n        elif '0' in a:\n            c = a\n            n = 0\n            a = ''\n        c = list(c)\n        for i in range(len(c) - 1, -1, -1):\n            if c[i] == '1':\n                c[i] = '0'\n            else:\n                c[i] = '1'\n                break\n        ans = a.count('1') + n * b.count('1') + c.count('1')\n    print(ans)", "t = int(input())\nfor t0 in range(t):\n    (l1, l2, l3, n) = [i for i in input().strip().split()]\n    n = int(n)\n    s = 0\n    s1 = 0\n    if '0' in l3:\n        r1 = l3.rindex('0')\n        s = l1.count('1') + l2.count('1') * n + l3[0:r1].count('1') + 1\n    elif '0' in l2:\n        r1 = l2.rindex('0')\n        ct = l2[r1:].count('1')\n        s = l1.count('1') + l2.count('1') * n + 1 - ct\n    elif '0' in l1:\n        r1 = l1.rindex('0')\n        ct = l1[r1:].count('1')\n        s = l1.count('1') + 1 - ct\n    else:\n        s = 1\n    print(s)", "for t in range(int(input())):\n    (s, s1, s2, n) = [i for i in input().split()]\n    sf = s\n    co = 0\n    l = len(s)\n    l1 = len(s1)\n    l2 = len(s2)\n    ns = s.count('1')\n    ns1 = s1.count('1')\n    ns2 = s2.count('1')\n    co = ns + ns1 * int(n) + ns2\n    if s2[l2 - 1] == '0':\n        co += 1\n    elif co == l + l1 * int(n) + l2:\n        co = 1\n    else:\n        f = 1\n        if ns2 > 0:\n            if ns2 == l2:\n                co -= ns2\n            else:\n                for i in s2[::-1]:\n                    if i == '0':\n                        f = 0\n                        co += 1\n                        break\n                    co -= 1\n        else:\n            co += 1\n            f = 0\n        if f == 1:\n            if ns1 > 0:\n                if ns1 == l1:\n                    co -= ns1 * int(n)\n                else:\n                    for i in s1[::-1]:\n                        if i == '0':\n                            f = 0\n                            co += 1\n                            break\n                        co -= 1\n            else:\n                co += 1\n                f = 0\n        if f == 1:\n            if ns > 0:\n                if ns == l:\n                    co -= ns\n                else:\n                    for i in s[::-1]:\n                        if i == '0':\n                            f = 0\n                            co += 1\n                            break\n                        co -= 1\n            else:\n                co += 1\n                f = 0\n    print(co)", "t = int(input())\nwhile t > 0:\n    (l1, l2, l3, n) = map(str, input().split())\n    n = int(n)\n    a = bin(int(l3, 2) + 1)\n    if len(a) > len(l3) + 2:\n        a = bin(int(l2, 2) + 1)\n        if len(a) > len(l2) + 2:\n            a = bin(int(l1, 2) + 1)\n            if len(a) > len(l1) + 2:\n                print(1)\n            else:\n                print(a.count('1'))\n        else:\n            print(l2.count('1') * (n - 1) + a.count('1') + l1.count('1'))\n    else:\n        print(a.count('1') + l2.count('1') * n + l1.count('1'))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (l1, l2, l3, n) = input().split()\n    n = int(n)\n    c = l1.count('1') + l2.count('1') * n + l3.count('1')\n    (len1, len2, len3) = (len(l1), len(l2), len(l3))\n    if l3[-1] == '0':\n        print(c + 1)\n    elif l3[-1] == '1':\n        r = l3.rindex('0') if '0' in l3 else -1\n        if r != -1:\n            print(c - (len3 - (r + 1)) + 1)\n            continue\n        r = l2.rindex('0') if '0' in l2 else -1\n        if r != -1:\n            print(c - (len3 + len2 - (r + 1)) + 1)\n            continue\n        r = l1.rindex('0') if '0' in l1 else -1\n        if r != -1:\n            print(c - (len1 + len3 + len2 * n - (r + 1)) + 1)\n            continue\n        print(1)", "for _ in range(int(input())):\n    (l1, l2, l3, n) = [x for x in input().split()]\n    allOne = 0\n    count = 0\n    last = len(l3) - 1\n    countl3 = l3.count('1')\n    countl2 = l2.count('1')\n    countl1 = l1.count('1')\n    totalOne = countl1 + countl2 * int(n) + countl3\n    if len(l3) == countl3:\n        count += countl3\n        allOne = 1\n    else:\n        while l3[last] == '1' and last >= 0:\n            count += 1\n            last -= 1\n    if allOne == 1:\n        if len(l2) == countl2:\n            count += countl2 * int(n)\n        else:\n            allOne = 0\n            last = len(l2) - 1\n            while l2[last] == '1' and last >= 0:\n                count += 1\n                last -= 1\n    if allOne == 1:\n        if len(l1) == countl1:\n            count += countl1\n        else:\n            allOne = 0\n            last = len(l1) - 1\n            while l1[last] == '1' and last >= 0:\n                count += 1\n                last -= 1\n    print(totalOne + 1 - count)", "t = int(input())\nwhile t:\n    (a, b, c, d) = input().split()\n    d = int(d)\n    an = a.count('1') + b.count('1') * d + c.count('1')\n    lc = len(c)\n    lb = len(b)\n    la = len(a)\n    cc = 0\n    cb = 0\n    ca = 0\n    for i in range(lc - 1, -1, -1):\n        if c[i] == '0':\n            break\n        else:\n            cc += 1\n    if cc == lc:\n        for i in range(lb - 1, -1, -1):\n            if b[i] == '0':\n                break\n            else:\n                cb += 1\n        if cb == lb:\n            for i in range(la - 1, -1, -1):\n                if a[i] == '0':\n                    break\n                else:\n                    ca += 1\n            if ca == la:\n                print(1)\n            else:\n                print(an - cc - cb * d - (ca - 1))\n        else:\n            print(an - cc - (cb - 1))\n    else:\n        print(an - (cc - 1))\n    t = t - 1", "tes = int(input())\nfor _ in range(tes):\n    (a, b, c, n) = [x for x in input().split()]\n    n = int(n)\n    ans = switch = 0\n    for i in range(len(c) - 1, -1, -1):\n        if switch == 0:\n            if c[i] == '0':\n                switch = 1\n                ans += 1\n        if switch == 1:\n            if c[i] == '1':\n                ans += 1\n    for i in range(len(b) - 1, -1, -1):\n        if switch == 0:\n            if b[i] == '0':\n                switch = 1\n                ans += 1\n        if switch == 1:\n            if b[i] == '1':\n                ans += 1\n    for i in range(len(b) - 1, -1, -1):\n        if switch == 0:\n            if b[i] == '0':\n                switch = 1\n                ans += n - 1\n        if switch == 1:\n            if b[i] == '1':\n                ans += n - 1\n    for i in range(len(a) - 1, -1, -1):\n        if switch == 0:\n            if a[i] == '0':\n                switch = 1\n                ans += 1\n        if switch == 1:\n            if a[i] == '1':\n                ans += 1\n    if switch == 0:\n        ans = 1\n    print(ans)", "for _ in range(int(input())):\n    (l1, l2, l3, n) = [i for i in input().split()]\n    n = int(n)\n    if l3.find('0') == -1:\n        if l2.find('0') == -1:\n            if l1.find('0') == -1:\n                print(1)\n            else:\n                s = l1[::-1]\n                for i in range(len(s)):\n                    if s[i] == '0':\n                        s = s[i:]\n                        break\n                print(s.count('1') + 1)\n        else:\n            s = l2[::-1]\n            cnt = 0\n            for i in range(len(s)):\n                if s[i] == '0':\n                    s = s[i:]\n                    break\n                else:\n                    cnt += 1\n            print(l2.count('1') * n + l1.count('1') - cnt + 1)\n    else:\n        s = l3[::-1]\n        for i in range(len(s)):\n            if s[i] == '0':\n                s = s[i:]\n                break\n        print(s.count('1') + l1.count('1') + l2.count('1') * n + 1)", "def add_one(n, add_carry=False):\n    n = list(n)\n    l = len(n)\n    carry = 1\n    for i in range(l - 1, -1, -1):\n        if carry == 1:\n            if n[i] == '1':\n                n[i] = '0'\n            else:\n                n[i] = '1'\n                carry = 0\n    if add_carry and carry == 1:\n        n.insert(0, '1')\n    return (''.join(n), carry)\n\ndef complex_add_one(l1, l2, l3, n):\n    (l3, l3_c) = add_one(l3)\n    if l3_c == 0:\n        return (l1, l2, l3, n)\n    l2_old = l2\n    (l2, l2_c) = add_one(l2)\n    if l2_c == 0:\n        return (l1, l2_old, l2 + l3, n - 1)\n    (l1, l1_c) = add_one(l1)\n    if l1_c == 1:\n        l1 = '1' + l1\n    return (l1, l2, l3, n)\n\ndef count_ones(n):\n    return sum([1 for c in n if c == '1'])\n\ndef complex_count_ones(l1, l2, l3, n):\n    return count_ones(l1) + n * count_ones(l2) + count_ones(l3)\n\ndef expand(l1, l2, l3, n):\n    return l1 + n * l2 + l3\n\ndef compute():\n    z = input().split()\n    z[3] = int(z[3])\n    z = complex_add_one(*z)\n    print(complex_count_ones(*z))\nt = int(input())\nfor _ in range(t):\n    compute()", "import sys\nt = int(input())\nfor i in range(t):\n    s = input().strip().split()\n    n = int(s[3])\n    l1 = ''\n    l2 = ''\n    l3 = ''\n    if s[2][-1] == '0':\n        print(1 + s[0].count('1') + n * s[1].count('1') + s[2].count('1'))\n    else:\n        l3 = bin(int(s[2], 2) + 1)[2:]\n        if len(l3) <= len(s[2]):\n            print(s[0].count('1') + n * s[1].count('1') + l3.count('1'))\n        elif s[1][-1] == '0':\n            print(1 + s[0].count('1') + n * s[1].count('1') + (l3.count('1') - 1))\n        else:\n            l2 = bin(int(s[1], 2) + 1)[2:]\n            if len(l2) <= len(s[1]):\n                print(s[0].count('1') + (n - 1) * s[1].count('1') + l2.count('1') + (l3.count('1') - 1))\n            elif s[0][-1] == '0':\n                print(1 + s[0].count('1') + n * l2[1:].count('1') + l3[1:].count('1'))\n            else:\n                l1 = bin(int(s[0], 2) + 1)[2:]\n                print(l1.count('1') + n * l2[1:].count('1') + l3[1:].count('1'))", "def plusone(s):\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '0':\n            s[i] = '1'\n            return i\n        else:\n            s[i] = '0'\n    return -1\n\ndef countones(s):\n    cnt = 0\n    for c in s:\n        if c == '1':\n            cnt += 1\n    return cnt\nT = int(input())\nfor t in range(T):\n    S = input().split()\n    (L1, L2, L3, N) = (list(S[0]), list(S[1]), list(S[2]), int(S[3]))\n    L2x = list(L2)\n    N -= 1\n    cnt = 0\n    y = 100\n    x = plusone(L3)\n    if x == -1:\n        y = plusone(L2x)\n        if y == -1:\n            z = plusone(L1)\n            if z == -1:\n                L1 = ['1']\n    cnt = countones(L3)\n    if y >= 0:\n        cnt += countones(L2x) + N * countones(L2)\n    cnt += countones(L1)\n    print(cnt)", "for t in range(eval(input())):\n    lis = input().split()\n    c3 = 0\n    flag = False\n    for i in reversed(lis[2]):\n        if flag and i == '1':\n            c3 += 1\n        elif i == '0':\n            flag = True\n    c2 = 0\n    c21 = 0\n    for i in reversed(lis[1]):\n        if i == '1':\n            c21 += 1\n            if flag:\n                c2 += 1\n        elif i == '0':\n            flag = True\n    if flag:\n        c2 += (eval(lis[3]) - 1) * c21\n    c1 = 0\n    for i in reversed(lis[0]):\n        if flag and i == '1':\n            c1 += 1\n        elif i == '0':\n            flag = True\n    print(c1 + c2 + c3 + 1)", "def inc(b):\n    for (i, c) in reversed(list(enumerate(b))):\n        if c == '0':\n            b[i] = '1'\n            break\n        b[i] = '0'\n    else:\n        return 1\n    return 0\nfor _ in range(int(input())):\n    (a, b, c, n) = input().split()\n    (a, b, c) = (list(x) for x in (a, b, c))\n    n = int(n)\n    r = 0\n    if inc(c):\n        t = b.count('1')\n        if inc(b):\n            r += inc(a)\n            r += a.count('1')\n        else:\n            r += a.count('1')\n            r += b.count('1')\n            r += t * (n - 1)\n    else:\n        r += a.count('1')\n        r += b.count('1') * n\n        r += c.count('1')\n    print(r)", "def check(s):\n    size = len(s)\n    (end, total, found) = (0, 0, True)\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '0':\n            found = False\n        if found:\n            end += 1\n        if s[i] == '1':\n            total += 1\n    return (total, end, size)\nfor i in range(int(input())):\n    l = list(map(str, input().split()))\n    s1 = check(l[0])\n    s2 = check(l[1])\n    s3 = check(l[2])\n    if s3[2] != s3[1]:\n        ans = s1[0] + int(l[3]) * s2[0] + s3[0] - s3[1] + 1\n    elif s2[2] != s2[1]:\n        ans = s1[0] + (int(l[3]) - 1) * s2[0] + s2[0] - s2[1] + 1\n    elif s1[2] != s1[1]:\n        ans = s1[0] - s1[1] + 1\n    else:\n        ans = 1\n    print(ans)", "for _ in range(int(input())):\n    (a, b, c, n) = map(str, input().split())\n    n = int(n)\n    s = a + b + c\n    c1 = a.count('1') + n * b.count('1') + c.count('1')\n    l = len(s)\n    i = l - 1\n    while i >= 0:\n        if s[i] == '0':\n            break\n        i -= 1\n    if i == l - 1:\n        print(c1 + 1)\n    elif i == -1:\n        print(1)\n    elif i <= len(a) - 1:\n        print(c1 - (len(a) - i - 1) + 1 - (n * b.count('1') + c.count('1')))\n    else:\n        print(c1 - (l - i - 1) + 1)", "for _ in range(int(input())):\n    l = input().split()\n    cnt = 0\n    for c in l[1]:\n        cnt += c == '1'\n    cnt *= int(l[3])\n    for c in l[0]:\n        cnt += c == '1'\n    for c in l[2]:\n        cnt += c == '1'\n    i = len(l[2]) - 1\n    while i >= 0 and l[2][i] == '1':\n        cnt -= 1\n        i -= 1\n    if l[2] == '1' * len(l[2]):\n        if l[1] != '1' * len(l[1]):\n            i = len(l[1]) - 1\n            while i >= 0 and l[1][i] == '1':\n                cnt -= 1\n                i -= 1\n        else:\n            if l[0] != len(l[0]) * '1':\n                i = len(l[0]) - 1\n                while i >= 0 and l[0][i] == '1':\n                    cnt -= 1\n                    i -= 1\n            else:\n                cnt -= len(l[0])\n            cnt -= int(l[3]) * len(l[1])\n    cnt += 1\n    print(cnt)", "import sys\n\ndef ones(x):\n    return sum((1 for c in list(x) if c == '1'))\n\ndef trailones(x):\n    ret = 0\n    for c in reversed(list(x)):\n        if c == '0':\n            break\n        ret += 1\n    return ret\n\ndef solve(a, b, c, d):\n    oc = ones(c)\n    tc = trailones(c)\n    if tc < len(c):\n        return ones(a) + ones(b) * d + oc - tc + 1\n    tb = trailones(b)\n    if tb < len(b):\n        return ones(a) + ones(b) * d - tb + 1\n    return ones(a) - trailones(a) + 1\nf = sys.stdin\nt = int(f.readline())\nfor i in range(t):\n    (a, b, c, d) = f.readline().split()\n    d = int(d)\n    print(solve(a, b, c, d))"]