["def f(N, K):\n    if N == 1:\n        return 1.0\n    if N == 2:\n        return 0.5\n    for i in range(K):\n        if N == 1:\n            break\n        if N == 2:\n            N = 1\n        if i == 0:\n            if N % 4 == 0:\n                N //= 2\n            else:\n                N = N // 2 + 1\n        elif N % 2 == 0:\n            N //= 2\n        else:\n            N = N // 2 + 1\n    return 1.0 / N\nT = int(input())\nfor _ in range(T):\n    (N, K) = (int(x) for x in input().split())\n    print(f(N, K))", "def compute(n, k, spare):\n    if k == 0:\n        return 1 / n\n    if n == 1:\n        return 1\n    if n == 2:\n        if spare:\n            return 1\n        else:\n            return 1 / 2\n    next_n = 0\n    if n % 4 == 0:\n        next_n = n // 2\n    elif n % 4 == 1:\n        next_n = n // 2 + 1\n    elif n % 4 == 2:\n        if spare:\n            next_n = n // 2\n        else:\n            next_n = n // 2 + 1\n    else:\n        next_n = n // 2 + 1\n    return compute(next_n, k - 1, True)\nT = int(input())\nfor _ in range(T):\n    (N, K) = (int(i) for i in input().split())\n    print(compute(N, K, False))", "def calc(n, k):\n    if k >= n:\n        return 1\n    if k == 0:\n        return 1 / n\n    hf1 = n // 2\n    hf2 = n - hf1\n    return calc(max(hf1, hf2), k - 1)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(0.5)\n    elif k == 1:\n        hf1 = n // 2\n        hf2 = n - hf1\n        if hf1 & 1 and hf2 & 1:\n            print(1 / (max(hf1, hf2) + 1))\n        else:\n            print(1 / max(hf1, hf2))\n    else:\n        print(calc(n, k))", "import decimal\n\ndef solve(n, r, s):\n    if s == 0:\n        return r\n    else:\n        if r == 1:\n            return 1\n        if r == 2:\n            if n > 2:\n                return 1\n            else:\n                return 2\n        elif r % 2 == 1:\n            return solve(n, r // 2 + 1, s - 1)\n        else:\n            a = r // 2\n            if r == n:\n                if a % 2 == 1:\n                    return solve(n, a + 1, s - 1)\n                else:\n                    return solve(n, a, s - 1)\n            else:\n                return solve(n, a, s - 1)\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(decimal.Decimal(1) / decimal.Decimal(solve(n, n, k)))", "def f(N, K):\n    if N == 1:\n        return 1.0\n    if N == 2:\n        return 0.5\n    for i in range(K):\n        if N == 1:\n            break\n        if N == 2:\n            N = 1\n        if i == 0:\n            if N % 4 == 0:\n                N //= 2\n            else:\n                N = N // 2 + 1\n        elif N % 2 == 0:\n            N //= 2\n        else:\n            N = N // 2 + 1\n    return 1.0 / N\nT = int(input())\nfor _ in range(T):\n    (N, K) = (int(x) for x in input().split())\n    print(f(N, K))", "import math\nt = int(input())\nfor x in range(t):\n    (n, k) = map(int, input().split())\n    if n == 1:\n        print(str.format('{0:.6f}', 1))\n        continue\n    if k == 0:\n        print(str.format('{0:.6f}', 1 / n))\n        continue\n    if n == 2:\n        print(str.format('{0:.6f}', 1 / 2))\n        continue\n    l = math.ceil(math.log2(n))\n    if k >= l:\n        print(str.format('{0:.6f}', 1))\n        continue\n    elif k == 1:\n        a = math.ceil(n / 2)\n        if a % 2 == 1:\n            if a + a == n:\n                a = a + 1\n        print(str.format('{0:.6f}', 1 / a))\n        continue\n    else:\n        m = math.ceil(n / 2 ** k)\n        print(str.format('{0:.6f}', 1 / m))", "import sys\nfor (n, k) in [map(int, line.split(' ')) for line in sys.stdin.read().split('\\n')[1:] if line]:\n    if n > 2 and k > 0:\n        (n, k) = (n // 2 + int(n % 4 != 0), k - 1)\n        n = (n - 1 >> min(k, 60)) + 1\n    print('%.10f' % (1.0 / n))", "import math as m\nfor etc in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 2:\n        print(1 / 2)\n        continue\n    if n > 2 and k:\n        n = (n >> 1) + bool(n & 3)\n        k -= 1\n    while n > 1 and k > 0:\n        n = n + 1 >> 1\n        k -= 1\n    print(1 / n)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    if N == 2:\n        print('%.6f' % 0.5)\n    else:\n        if K >= 1:\n            if N % 2 == 1:\n                N = N // 2 + 1\n            elif N % 4 == 0:\n                N = N // 2\n            else:\n                N = N // 2 + 1\n            for i in range(1, K):\n                if N > 1:\n                    N = N // 2 + N % 2\n                else:\n                    break\n        print('%.10f' % float(1.0 / N))", "from math import ceil\n\ndef fun(n, k):\n    if n == 1 or n == 2:\n        print(1 / n)\n    else:\n        if k > 0 and n % 4 == 2:\n            n = n // 2 + 1\n            k = k - 1\n        k = min(k, 70)\n        x = pow(2, k)\n        ans = n / x\n        ans = ceil(ans)\n        print(1 / ans)\n\ndef t():\n    test = int(input())\n    for t in range(test):\n        (n, k) = map(int, input().split())\n        fun(n, k)\nt()", "t = int(input())\nfor _ in range(t):\n    ln = input()\n    tn = int(ln.split()[0])\n    k = int(ln.split()[1])\n    if tn == 1:\n        print(1)\n        continue\n    if tn == 2:\n        print(0.5)\n        continue\n    n = tn\n    while n > 1 and k > 0:\n        k -= 1\n        if n == tn and n // 2 % 2 == 1 and (n % 2 == 0):\n            n = n // 2 + 1\n        else:\n            n = n // 2 + n % 2\n    print(1.0 / n)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    clear = 0\n    temp = 0\n    run = n\n    if n == 1:\n        print('{0:.7f}'.format(1.0))\n    elif n == 2:\n        print('{0:.7f}'.format(0.5))\n    else:\n        if run == 3 and k > 0:\n            run = 2\n            k -= 1\n        while k > 0:\n            if run < 2:\n                break\n            xx = run // 2\n            if run & 1:\n                (clear, run) = (xx, xx + 1)\n                k -= 1\n            elif xx & 1:\n                if xx > 1:\n                    if clear >= xx:\n                        clear = xx\n                        run = xx + temp\n                        temp = 0\n                        k -= 1\n                    else:\n                        run = xx + 1 + temp\n                        clear = xx + 1\n                        temp = 0\n                        k -= 1\n                else:\n                    run = 1 + temp\n                    temp = 0\n                    k -= 1\n            else:\n                clear = xx\n                run = xx + temp\n                temp = 0\n                k -= 1\n        if k == 0:\n            print('{0:.7f}'.format(1.0 / run))\n        else:\n            print('{0:.7f}'.format(1.0))", "def getminp(n, k):\n    if n == 1:\n        return 1.0\n    if n == 2:\n        return 0.5\n    looped = False\n    while k:\n        if n == 1 or n == 2:\n            return 1\n        if n % 4 == 0:\n            n //= 2\n        elif n % 2 == 0 and looped:\n            n = n // 2\n        else:\n            n = n // 2 + 1\n        k -= 1\n        looped = True\n    return 1 / n\nfor _ in range(int(input())):\n    i = list(map(int, input().split()))\n    print(str.format('{0:.6f}', getminp(i[0], i[1])))", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    if k == 0:\n        print('%.20f' % (1 / n))\n    elif n == 2:\n        print('%.20f' % (1 / 2))\n    elif n == 1:\n        print('%.20f' % 1)\n    else:\n        x = 0\n        if n % 2 == 0:\n            if n / 2 % 2 == 1:\n                n = n / 2 + 1\n            else:\n                n = n / 2\n        else:\n            n = math.ceil(n / 2)\n        k -= 1\n        while k > 0:\n            if n < 2:\n                break\n            n = math.ceil(n / 2)\n            k -= 1\n        print('%.20f' % (1 / n))", "def hell(n, k):\n    if n == 0:\n        return 1\n    if k == 0 or n == 1:\n        return n\n    val = int(n / 2)\n    if n % 2:\n        val += 1\n    return hell(val, k - 1)\nfor _ in range(int(input())):\n    i = list(map(int, input().split()))\n    if i[0] % 2 == 0 and i[1] == 1 and (i[0] / 2 % 2 != 0):\n        a = 1 / (int(i[0] / 2) + 1)\n    elif i[0] > 2:\n        a = 1 / hell(i[0], i[1])\n    else:\n        a = 1 / i[0]\n    print(str.format('{0:.6f}', a))", "def main():\n    t = int(input())\n    for i in range(t):\n        s = input().split()\n        n = int(s[0])\n        k = int(s[1])\n        if n == 1:\n            print('1.000000')\n        elif n == 2:\n            print('0.500000')\n        elif k > 64:\n            print('1.000000')\n        elif k == 1:\n            if n % 2 == 1:\n                n = int(n / 2) + 1\n            else:\n                n = int(n / 2)\n                if n % 2 != 0:\n                    n = n + 1\n            print('%.6f' % (1 / n))\n        else:\n            for i in range(k):\n                if n == 1:\n                    break\n                n = max(int(n / 2), int((n + 1) / 2))\n            print('%.6f' % (1 / n))\nmain()", "def f(N, K):\n    if N == 1:\n        return 1.0\n    if N == 2:\n        return 0.5\n    for i in range(K):\n        if N == 1:\n            break\n        if N == 2:\n            N = 1\n        if i == 0:\n            if N % 4 == 0:\n                N //= 2\n            else:\n                N = N // 2 + 1\n        elif N % 2 == 0:\n            N //= 2\n        else:\n            N = N // 2 + 1\n    return 1.0 / N\nT = int(input())\nfor _ in range(T):\n    (N, K) = (int(x) for x in input().split())\n    print(f(N, K))", "import math\nt = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    if n > 2:\n        if k != 1:\n            var = math.log(n, 2)\n            if k >= var:\n                print('1')\n            else:\n                for i in range(k):\n                    n = math.ceil(n / 2)\n                print(1 / n)\n        else:\n            if n % 2 != 0:\n                n = 1 + n // 2\n            elif n // 2 % 2 == 0:\n                n = n // 2\n            else:\n                n = n // 2 + 1\n            print(1 / n)\n    else:\n        a = [0, 1, 0.5]\n        print(a[n])\n    t -= 1", "import math\nt = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    if k == 0:\n        print(1 / n)\n    elif n == 1:\n        print(1.0)\n    elif n == 2:\n        print(0.5)\n    elif k >= math.log(n, 2):\n        print(1.0)\n    elif k == 1:\n        if n % 2 == 0:\n            if n / 2 % 2 == 0:\n                v = n // 2\n            else:\n                v = n // 2 + 1\n        else:\n            v = n // 2 + 1\n        print(1 / v)\n    else:\n        v1 = n\n        for i in range(k):\n            v1 = math.ceil(v1 / 2)\n        print(1 / v1)\n    t = t - 1", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n == 1 or n == 2:\n        n = n\n    elif k == 1:\n        if n % 2 == 0:\n            if n // 2 % 2 == 0:\n                n = n / 2\n            else:\n                n = n / 2 + 1\n        else:\n            n = n // 2 + 1\n    elif k >= math.log(n, 2):\n        n = 1\n    else:\n        j = 0\n        while j < k:\n            if n % 2 == 0:\n                n = n / 2\n            else:\n                n = n // 2 + 1\n            j = j + 1\n    print('{0:.7f}'.format(1 / n))", "def yoyo(n, k):\n    check = 0\n    while True:\n        if n & 1:\n            n = n // 2 + 1\n        else:\n            n = n // 2\n        check += 1\n        if check == k:\n            break\n        if n <= 1:\n            break\n    if check == k:\n        p = 1 / n\n        print(p)\n    else:\n        print(1)\n\ndef deep_is_back():\n    t = int(input())\n    for it in range(t):\n        (n, k) = map(int, input().split())\n        if k == 0:\n            x = 1 / n\n            print(x)\n        elif n == 1:\n            print(1)\n        elif n == 2:\n            print(0.5)\n        elif k == 1:\n            if n % 2 == 1:\n                x = n // 2 + 1\n                p = 1 / x\n                print(p)\n            elif n % 2 == 0 and n // 2 % 2 == 0:\n                x = n // 2\n                p = 1 / x\n                print(p)\n            elif n % 2 == 0 and n // 2 % 2 == 1:\n                x = n // 2 + 1\n                p = 1 / x\n                print(p)\n        else:\n            yoyo(n, k)\ndeep_is_back()", "from math import ceil\n\ndef chek(number_of_coin, k_balance):\n    if k_balance == 0:\n        print('{0:.6f}'.format(1 / number_of_coin))\n    elif number_of_coin == 1:\n        print('{0:.6f}'.format(1))\n    elif number_of_coin == 2:\n        print('{0:.6f}'.format(1 / 2))\n    else:\n        if k_balance > 0 and number_of_coin % 2 == 0 and (int(number_of_coin / 2) % 2 != 0):\n            number_of_coin = ceil(number_of_coin / 2) + 1\n            k_balance -= 1\n        while k_balance > 0 and number_of_coin > 1:\n            number_of_coin = ceil(number_of_coin / 2)\n            k_balance -= 1\n        if k_balance == 0:\n            print('{0:.6f}'.format(1 / number_of_coin))\n        elif number_of_coin == 1:\n            print('{0:.6f}'.format(1))\nfor _ in range(int(input())):\n    (number_of_coin, k_balance) = [int(x) for x in input().split()]\n    chek(number_of_coin, k_balance)", "def f1(n):\n    print(n, ':')\n    if n < 3:\n        print('{0:.6f}'.format(1 / n))\n        return None\n    k = 0\n    print(k, ':', '{0:.6f}'.format(1 / n), ';', n)\n    k += 1\n    n = n // 4 * 2 + min(n % 4, 2)\n    while n > 1:\n        print(k, ':', '{0:.6f}'.format(1 / n), ';', n)\n        n = n // 2 + n % 2\n        k += 1\n    if n == 1 and k > 0:\n        print(k, ':', '{0:.6f}'.format(1 / n))\n    else:\n        print('error')\n    return None\n\ndef f(n, k):\n    if n < 3:\n        return n\n    if k > 0:\n        n = n // 4 * 2 + min(n % 4, 2)\n        k -= 1\n    while k > 0 and n > 1:\n        n = n // 2 + n % 2\n        k -= 1\n    return n\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('{0:.6f}'.format(1 / f(n, k)))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 2:\n        print(0.5)\n    elif n == 1 and k > 0:\n        print(1.0)\n    else:\n        t = k\n        if k > 72 or 2 ** k >= n:\n            print(1.0)\n        else:\n            while n > 2 and k > 0:\n                if t == k and n % 4 == 2:\n                    n = max(2 * math.ceil(n / 4), n - 2 * math.ceil(n / 4))\n                    k -= 1\n                else:\n                    n = max(math.ceil(n / 2), n - math.ceil(n / 2))\n                    k -= 1\n            if k == 0:\n                print(1 / n)\n            elif n == 2 and k > 0:\n                print(1.0)", "import math as m\n\ndef main(n, k):\n    if k == 0:\n        return 1 / n\n    if n == 1:\n        return 1.0\n    if n == 2 and k >= 1 or (n == 3 and k > 1):\n        return 1.0\n    else:\n        num1 = n // 2\n        num2 = n - num1\n        return main(max(num1, num2), k - 1)\nt = int(input())\nfor i in range(0, t):\n    n_k = input().split(' ')\n    n = int(n_k[0])\n    k = int(n_k[1])\n    if k == 0:\n        print(str.format('{0:.7f}', 1 / n)[:8])\n    elif n == 2:\n        print('0.500000')\n    elif n == 3 and k == 2:\n        print(str.format('{0:.7f}', 1)[:8])\n    else:\n        num1 = n // 2\n        if num1 % 2 == 0:\n            num2 = n - num1\n        if num1 % 2 != 0 and n % 2 != 0:\n            num2 = n - num1\n        elif num1 % 2 != 0 and n % 2 == 0:\n            num1 = num1 - 1\n            num2 = n - num1\n        print(str.format('{0:.7f}', main(max(num1, num2), k - 1))[:8])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 0 or n <= 2:\n        print(1 / n)\n    else:\n        k -= 1\n        if n & 1:\n            n = n + 1 >> 1\n        elif n & 2:\n            n = n + 2 >> 1\n        else:\n            n = n >> 1\n        while n >= 2 and k > 0:\n            k -= 1\n            n = n + 1 >> 1\n        print(1 / n)", "def paradox2(vb1, vb2, vb3):\n    if vb1 <= 1:\n        return 1\n    if vb2 == 0:\n        return 1 / vb1\n    LF = 0\n    if vb3 > 0 or vb1 % 2 != 0:\n        LF = (vb1 + 1) // 2\n    else:\n        HF = vb1 // 2\n        if HF % 2 == 0:\n            LF = HF\n        else:\n            LF = HF + 1\n    return paradox(LF, vb2 - 1, vb3 + vb1 - LF)\n\ndef paradox(vb1, vb2):\n    vb3 = 0\n    while True:\n        if vb1 <= 1:\n            return 1\n        if vb2 == 0:\n            return 1 / vb1\n        LF = 0\n        if vb3 > 0 or vb1 % 2 != 0:\n            LF = (vb1 + 1) // 2\n        else:\n            HF = vb1 // 2\n            if HF % 2 == 0:\n                LF = HF\n            else:\n                LF = HF + 1\n        vb3 += vb1 - LF\n        vb1 = LF\n        vb2 -= 1\nsubho = []\nTC = int(input())\nfor ti in range(TC):\n    (VM1, VM2) = map(int, input().split())\n    subho.append(paradox(VM1, VM2))\nprint('\\n'.join(map(str, subho)))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = k\n    if n == 1 or n == 2:\n        pass\n    else:\n        while k:\n            if n == 2:\n                n = 1\n                break\n            if n % 2 == 0:\n                n = n // 2\n                if n % 2 == 1 and p == k:\n                    n += 1\n            else:\n                n = math.ceil(n / 2)\n            k -= 1\n    print('%.6f' % (1 / n))", "import math\n\ndef chk(n):\n    if n % 2 == 1:\n        return math.floor(n / 2) + 1\n    elif n / 2 % 2 == 0:\n        return n / 2\n    else:\n        return n / 2\n\ndef main():\n    t = int(input())\n    while t > 0:\n        a = [int(x) for x in input().split()]\n        n = a[0]\n        k = a[1]\n        if n == 1:\n            print('%.10f' % 1.0)\n        elif n == 2:\n            print('%.10f' % 0.5)\n        elif k == 0:\n            print('%.10f' % (1.0 / n))\n        else:\n            k = k - 1\n            if n % 2 == 1:\n                n = math.floor(n / 2) + 1\n            elif n / 2 % 2 == 0:\n                n = n / 2\n            else:\n                n = n / 2 + 1\n            while k > 0:\n                k = k - 1\n                if n == 2:\n                    n = 1\n                    break\n                s = chk(n)\n                n = s\n            print('%.10f' % (1.0 / n))\n        t = t - 1\nmain()", "import math\nt = int(input())\nans = {}\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n == 2:\n        ans[i] = 1.0 / 2\n        continue\n    elif k == 1 and n // 2 % 2 == 0:\n        n = math.ceil(n / 2)\n    elif k == 1 and n // 2 % 2 != 0:\n        n = n // 2 + 1\n    else:\n        while n > 1 and k > 0:\n            n = math.ceil(n / 2)\n            k -= 1\n    prob = 1.0 / n\n    ans[i] = prob\nfor i in ans:\n    print(ans[i])", "import math\nt = int(input())\nans = []\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        n = n\n    elif n == 2:\n        n = 2\n    elif k == 1 and n // 2 % 2 == 0:\n        x1 = n // 2\n        x2 = n - x1\n        n = max(x1, x2)\n    elif k == 1 and n // 2 % 2 != 0:\n        n = n // 2 + 1\n    else:\n        while n > 1 and k > 0:\n            n = math.ceil(n / 2)\n            k -= 1\n    prob = 1.0 / n\n    ans.append(prob)\nfor i in ans:\n    print(i)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        n = n\n    elif n == 2:\n        n = 2\n    elif k == 1 and n // 2 % 2 == 0:\n        x1 = n // 2\n        x2 = n - x1\n        n = max(x1, x2)\n    elif k == 1 and n // 2 % 2 != 0:\n        n = n // 2 + 1\n    else:\n        while n > 1 and k > 0:\n            n = math.ceil(n / 2)\n            k -= 1\n    prob = 1.0 / n\n    print(prob)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        n = n\n    elif n == 2:\n        n = 2\n    elif k == 1 and n // 2 % 2 == 0:\n        x1 = n // 2\n        x2 = n - x1\n        n = max(x1, x2)\n    elif k == 1 and n // 2 % 2 != 0:\n        n = n // 2 + 1\n    else:\n        while n > 1 and k > 0:\n            n = math.ceil(n / 2)\n            k -= 1\n    prob = 1.0 / n\n    print('{0:.6f}'.format(prob))", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        n = n\n    elif n == 2:\n        n = 2\n    elif k > n // 2 or n == 1:\n        n = 1.0\n    elif k == 1 and n // 2 % 2 == 0:\n        x1 = n // 2\n        x2 = n - x1\n        n = max(x1, x2)\n    elif k == 1 and n // 2 % 2 != 0:\n        n = n // 2 + 1\n    else:\n        while k > 0 and n > 1:\n            n = math.ceil(n / 2)\n            k -= 1\n    prob = 1.0 / n\n    print('{0:.6f}'.format(prob))", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        n = n\n    elif n == 2:\n        n = 2\n    elif k > n // 2 or n == 1:\n        n = 1.0\n    elif k == 1 and n // 2 % 2 == 0:\n        x1 = n // 2\n        x2 = n - x1\n        n = max(x1, x2)\n    elif k == 1 and n // 2 % 2 != 0:\n        n = n // 2 + 1\n    else:\n        while True:\n            if n == 0:\n                n = 1\n                break\n            if k == 0 or n == 1:\n                n = n\n                break\n            n = math.ceil(n / 2)\n            k -= 1\n    prob = 1.0 / n\n    print('{0:.6f}'.format(prob))", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        n = n\n    elif n == 2:\n        n = 2\n    elif k > n // 2 or n == 1:\n        n = 1.0\n    elif k == 1 and n // 2 % 2 == 0:\n        x1 = n // 2\n        x2 = n - x1\n        n = max(x1, x2)\n    elif k == 1 and n // 2 % 2 != 0:\n        n = n // 2 + 1\n    else:\n        while True:\n            if n == 0:\n                n = 1\n                break\n            if k == 0 or n == 1:\n                n = n\n                break\n            aj = n // 2\n            if n % 2 != 0:\n                aj += 1\n            n = aj\n            k -= 1\n    prob = 1.0 / n\n    print('{0:.6f}'.format(prob))", "t = int(input())\nfor t in range(t, 0, -1):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        print(format(1 / n, '.8f'))\n        continue\n    if n == 1:\n        print(1)\n        continue\n    if n == 2:\n        print(format(1 / 2, '.8f'))\n        continue\n    if k >= 100:\n        print(1)\n        continue\n    if k > 1:\n        if n <= 2 ** k:\n            print(1)\n            continue\n    if n % 2 == 0:\n        if n // 2 % 2 != 0 and (n - n // 2) % 2 != 0:\n            n = n // 2 + 1\n            k = k - 1\n    for k in range(k, 0, -1):\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n = n // 2 + 1\n    print(format(1 / n, '.8f'))", "(_, __, ________) = (1, 2, 0)\n\ndef odd(___):\n    return ___ % __ == _\n\ndef solve(___, ____, _____):\n    if _____ == ________:\n        return ____\n    else:\n        if ____ == _:\n            return _\n        if ____ == __:\n            return _ if ___ > __ else __\n        elif odd(____):\n            return solve(___, ____ // __ + _, _____ - _)\n        else:\n            ______ = ____ // __\n            return solve(___, ______ + _, _____ - _) if ____ == ___ and odd(______) else solve(___, ______, _____ - _)\nfor _________ in range(int(input())):\n    (___, _______) = map(int, input().split())\n    print(_ / solve(___, ___, _______))", "def solve(N, K):\n    if K == 0:\n        return 1 / N\n    if N == 1:\n        return 1.0\n    if N == 2:\n        return 0.5\n    if N % 4 == 0:\n        N = N // 2\n    elif N % 4 == 1:\n        N = N // 2 + 1\n    elif N % 4 == 2:\n        N = N // 2 + 1\n    else:\n        N = 2 * (N // 4) + 2\n    K -= 1\n    while K > 0 and N >= 2:\n        N = N // 2 + N % 2\n        K -= 1\n    if K == 0:\n        return 1 / N\n    return 1.0\nT = int(input())\nfor i in range(0, T):\n    (N, K) = [int(s) for s in input().split(' ') if s != '']\n    print('%.6f' % solve(N, K))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 2:\n        print(str.format('{0:.8f}', 1 / 2))\n        continue\n    if k == 1:\n        n1 = n // 2\n        n2 = n - n1\n        if n1 % 2 == 1 and n2 % 2 == 1:\n            n = n1 + 1\n        else:\n            n = max(n1, n2)\n        print(str.format('{0:.8f}', 1 / n))\n        continue\n    while n > 1 and k > 0:\n        n1 = n // 2\n        n2 = n - n1\n        n = max(n1, n2)\n        k -= 1\n    print(str.format('{0:.8f}', 1 / n))", "import math\ncases = int(input())\nfor case in range(cases):\n    (n, k) = [int(i) for i in input().split()]\n    if k == 0:\n        print(1 / n)\n        continue\n    if n == 1:\n        print(1)\n        continue\n    elif n == 2:\n        print(1 / 2)\n        continue\n    limit = math.ceil(math.log2(n))\n    if k >= limit:\n        print(1)\n        continue\n    elif k == 1:\n        den = math.ceil(n / 2)\n        if n % 2 == 0 and den % 2 != 0:\n            den += 1\n        print(1 / den)\n        continue\n    else:\n        den = math.ceil(n / 2 ** k)\n        print(1 / den)", "from math import ceil, log2\nT = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    if N == 2:\n        print(0.5)\n    elif K <= ceil(log2(N)) + 1:\n        if N % 4 and (not N % 2) and (K == 1):\n            print(1 / ceil((N + 1) / 2 ** K))\n        else:\n            print(1 / ceil(N / 2 ** K))\n    else:\n        print(1)", "for i in range(int(input())):\n\n    def check(n, k):\n        if n == 4 and k >= 2:\n            return 1\n        if n == 2 or (n == 3 and k == 1):\n            return 1 / 2\n        if n == 1:\n            return 1\n        if k == 0:\n            return 1 / n\n        if n == 3:\n            return 1\n        if n % 2 == 0:\n            return check(n // 2, k - 1)\n        return check(n // 2 + 1, k - 1)\n    (n, k) = map(int, input().split())\n    if k == 0:\n        print(1 / n)\n    elif k == 1:\n        if n == 2 or n == 3 or n == 4:\n            print(1 / 2)\n        elif n == 1:\n            print(1)\n        elif n % 4 == 0:\n            print(check(n // 2, 0))\n        else:\n            print(check(n // 2 + 1, 0))\n    else:\n        print(check(n, k))", "T = int(input())\nfor t in range(T):\n    (N, k) = list(map(int, input().split()))\n    if N == 1:\n        print(float(1))\n    elif N == 2:\n        print(str(1 / 2))\n    else:\n        if k >= 1:\n            if N % 2 == 0:\n                N = N // 2\n                if N % 2 == 1:\n                    N += 1\n            else:\n                N = (N + 1) // 2\n        for i in range(1, k):\n            if N % 2 == 0:\n                N = N // 2\n            else:\n                N = (N + 1) // 2\n            if N == 1:\n                break\n        print(str(1 / N))", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    flag = True\n    result = 0\n    while flag:\n        x = 0\n        if n <= 1:\n            flag = False\n            print(str.format('{0:.6f}', 1))\n        if k == 0 and flag != False:\n            flag = False\n            print(str.format('{0:.6f}', 1 / n))\n        if n % 2 != 0 or result > 0:\n            x = (n + 1) // 2\n        else:\n            mid = n // 2\n            if mid % 2 == 0:\n                x = mid\n            else:\n                x = mid + 1\n        result = result + n - x\n        n = x\n        k -= 1\n    t -= 1", "T = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split())\n    ss = 0\n    if n <= 2 or k == 0:\n        ss = n\n    else:\n        if n % 4 == 0:\n            ss = n // 2\n        else:\n            ss = n // 2 + 1\n        for i in range(k - 1):\n            if ss % 2 == 1:\n                ss = ss // 2 + 1\n            else:\n                ss = ss // 2\n            if ss == 1:\n                break\n    print(1 / ss)", "import math\nmem = [[-1] * 18 for j in range(100010)]\norn = 0\n\ndef pr(n, k):\n    global mem\n    global orn\n    if n == 1:\n        return 1\n    elif n == 2:\n        if orn > 2 and k >= 1:\n            return 1\n        else:\n            return 1 / 2\n    elif n == 3 and k >= 2:\n        return 1\n    elif n == 3 and k == 1:\n        return 1 / 2\n    elif n == 4 and k >= 2:\n        return 1\n    elif k <= 0:\n        return 1 / n\n    else:\n        up = math.ceil(math.log2(n))\n        if k >= up:\n            return 1\n        if n % 2 == 0 and n % 4 != 0:\n            n1 = int(math.ceil(n / 2)) + 1\n            k -= 1\n            while k > 0:\n                k -= 1\n                n1 = int(math.ceil(n1 / 2))\n            return 1 / n1\n        else:\n            n1 = n\n            while k > 0:\n                k -= 1\n                n1 = int(math.ceil(n1 / 2))\n            return 1 / n1\nt = int(input())\nfor rr in range(t):\n    (n, k) = map(int, input().strip().split(' '))\n    orn = n\n    print(float(pr(n, k)))", "import decimal\n\ndef solve(n, r, s):\n    if s == 0:\n        return r\n    else:\n        if r == 1:\n            return 1\n        if r == 2:\n            if n > 2:\n                return 1\n            else:\n                return 2\n        elif r % 2 == 1:\n            return solve(n, r // 2 + 1, s - 1)\n        else:\n            a = r // 2\n            if r == n:\n                if a % 2 == 1:\n                    return solve(n, a + 1, s - 1)\n                else:\n                    return solve(n, a, s - 1)\n            else:\n                return solve(n, a, s - 1)\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(decimal.Decimal(1) / decimal.Decimal(solve(n, n, k)))", "from math import ceil\n\ndef solve():\n    results = []\n    for _ in range(int(input())):\n        (N, K) = input().split()\n        (N, K) = (int(N), int(K))\n        if N == 2 or K == 0:\n            results.append(1 / N)\n            continue\n        coins_left = N\n        if K > 2000:\n            results.append(1)\n            continue\n        while coins_left > 1 and K > 0:\n            a = ceil(coins_left / 2)\n            coins_left -= a\n            if coins_left + a == N and a % 2 != 0 and (coins_left % 2 != 0):\n                a -= 1\n                coins_left += 1\n            coins_left = max(a, coins_left)\n            K -= 1\n        if K == 0 and coins_left > 0:\n            results.append(1 / coins_left)\n        elif K > 0 or coins_left == 1:\n            results.append(1)\n    print('\\n'.join((str(k) for k in results)))\nsolve()", "def sol():\n    (n, k) = map(int, input().split())\n    if n == 2 or k == 0:\n        return 1 / n\n    if n % 2 == 0 and n % 4 != 0:\n        n = int(n / 2) + 1\n        k -= 1\n    while k > 0 and n > 1:\n        n = int(n / 2) + n % 2\n        k -= 1\n    return 1 / n\nt = int(input())\nfor i in range(t):\n    print(sol())", "I = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = I()\n    if n == 1:\n        print(1.0)\n    elif n == 2:\n        print(0.5)\n    elif n == 3:\n        if k == 1:\n            print(1 / 2)\n        elif k == 0:\n            print(1 / 3)\n        else:\n            print(1.0)\n    else:\n        if k == 1:\n            k -= 1\n            if n % 4 == 0:\n                n = n // 2\n            else:\n                n = n // 2 + 1\n        while n > 1 and k != 0:\n            n = n - n // 2\n            k -= 1\n        print(1 / n)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 1:\n        print(1.0)\n    elif n == 2:\n        print(0.5)\n    elif k == 1 and (n % 2 == 0 and n / 2 % 2 != 0):\n        print(1 / (n / 2 + 1))\n    else:\n        while k > 0:\n            n = math.ceil(n / 2)\n            if n == 1:\n                break\n            k = k - 1\n        print(1 / n)", "def min_chance(n, k):\n    if n == 1:\n        return 1\n    if k == 0:\n        return 1 / n\n    half = n - n // 2\n    return min_chance(half, k - 1)\nfor _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    if n == 2:\n        print(1 / 2)\n    elif n == 1:\n        print(1.0)\n    elif k == 0:\n        print(1 / n)\n    else:\n        if n % 4 == 2:\n            half = n // 2 + 1\n        else:\n            half = n - n // 2\n        print(min_chance(half, k - 1))", "tc = int(input())\nfor t in range(tc):\n    (n, k) = [int(temp) for temp in input().split()]\n    ans = n\n    if ans == 2:\n        dan = 1 / ans\n        print('%.6f' % dan)\n        continue\n    for i in range(1, k + 1):\n        if ans == 1:\n            break\n        if i == 1:\n            if ans % 2 == 0:\n                ans = ans // 2\n                if ans % 2 != 0:\n                    ans = ans + 1\n            else:\n                ans = ans // 2 + 1\n        elif ans % 2 == 0:\n            ans = ans // 2\n        else:\n            ans = ans // 2 + 1\n    dan = 1 / ans\n    print('%.6f' % dan)", "def solve2(N1, N2, N3):\n    if N1 <= 1:\n        return 1\n    if N2 == 0:\n        return 1 / N1\n    left = 0\n    if N3 > 0 or N1 % 2 != 0:\n        left = (N1 + 1) // 2\n    else:\n        half = N1 // 2\n        if half % 2 == 0:\n            left = half\n        else:\n            left = half + 1\n    return solve(left, N2 - 1, N3 + N1 - left)\n\ndef solve(N1, N2):\n    N3 = 0\n    while True:\n        if N1 <= 1:\n            return 1\n        if N2 == 0:\n            return 1 / N1\n        left = 0\n        if N3 > 0 or N1 % 2 != 0:\n            left = (N1 + 1) // 2\n        else:\n            half = N1 // 2\n            if half % 2 == 0:\n                left = half\n            else:\n                left = half + 1\n        N3 += N1 - left\n        N1 = left\n        N2 -= 1\nres = []\nt = int(input())\nfor ti in range(t):\n    (n, k) = map(int, input().split())\n    res.append(solve(n, k))\nprint('\\n'.join(map(str, res)))", "def solve(num, step):\n    out = 0\n    while True:\n        if num <= 1:\n            return 1\n        if step == 0:\n            return 1 / num\n        left = 0\n        if out > 0 or num % 2 != 0:\n            left = (num + 1) // 2\n        else:\n            half = num // 2\n            if half % 2 == 0:\n                left = half\n            else:\n                left = half + 1\n        out += num - left\n        num = left\n        step -= 1\nans = []\nT = int(input())\nfor ti in range(T):\n    (N, K) = map(int, input().split())\n    ans.append(solve(N, K))\nprint('\\n'.join(map(str, ans)))", "def solve2(num, step, out):\n    if num <= 1:\n        return 1\n    if step == 0:\n        return 1 / num\n    left = 0\n    if out > 0 or num % 2 != 0:\n        left = (num + 1) // 2\n    else:\n        half = num // 2\n        if half % 2 == 0:\n            left = half\n        else:\n            left = half + 1\n    return solve(left, step - 1, out + num - left)\n\ndef solve(num, step):\n    out = 0\n    while True:\n        if num <= 1:\n            return 1\n        if step == 0:\n            return 1 / num\n        left = 0\n        if out > 0 or num % 2 != 0:\n            left = (num + 1) // 2\n        else:\n            half = num // 2\n            if half % 2 == 0:\n                left = half\n            else:\n                left = half + 1\n        out += num - left\n        num = left\n        step -= 1\nans = []\nT = int(input())\nfor ti in range(T):\n    (N, K) = map(int, input().split())\n    ans.append(solve(N, K))\nprint('\\n'.join(map(str, ans)))", "t = int(input())\nfor var in range(t):\n    (n, k) = map(int, input().split())\n    count = 0\n    res = n\n    flag = 0\n    if n == 2:\n        print('0.5000000')\n    elif k == 0:\n        print('{0:0.8f}'.format(1 / n))\n    else:\n        while count < k and res != 1:\n            if res % 2 == 0:\n                res = int(res / 2)\n                if res % 2 == 1 and flag == 0:\n                    if res != 1:\n                        res += 1\n            elif res % 2 == 1:\n                res = int(res / 2)\n                res += 1\n            flag = 1\n            count += 1\n        print('{0:0.8f}'.format(1 / res))", "def findRealCoin(n, k):\n    if n == 2:\n        return 1 / 2.0\n    if k >= 1:\n        div = n // 4\n        rem = n % 4\n        if rem == 0:\n            n = div + div\n        if rem == 1:\n            n = div + div + 1\n        if rem == 2:\n            n = div + 1 + div + 1\n        if rem == 3:\n            n = div + 1 + div + 1\n        k -= 1\n    while k > 0 and n >= 2:\n        n = (n + 1) // 2\n        k -= 1\n    return float(1 / n)\nT = int(input())\nfor i in range(T):\n    (N, K) = list(map(int, input().split()))\n    print(findRealCoin(N, K))", "t = int(input())\nfor it in range(t):\n    (n, k) = map(int, input().split())\n    z = k\n    x = n\n    if k == 1:\n        if x % 2 == 0:\n            if x // 2 % 2 == 0:\n                x = x // 2\n                z -= 1\n            else:\n                x = x // 2 + 1\n                z -= 1\n        elif x // 2 % 2 == 0:\n            x = x // 2 + 1\n            z -= 1\n        else:\n            x = x // 2 + 1\n            z -= 1\n        print(1 / x)\n        continue\n    if x == 2:\n        print(0.5)\n        continue\n    while z != 0 and x > 3:\n        if x % 2 == 0:\n            if x // 2 % 2 == 0:\n                x = x // 2\n                z -= 1\n            else:\n                x = x // 2\n                z -= 1\n        elif x // 2 % 2 == 0:\n            x = x // 2 + 1\n            z -= 1\n        else:\n            x = x // 2 + 1\n            z -= 1\n    if x == 3:\n        if z >= 2:\n            print(1)\n        elif z == 1:\n            print(0.5)\n        else:\n            print(1 / x)\n    elif x == 2:\n        if z >= 1:\n            print(1)\n        elif z == 0:\n            print(0.5)\n        else:\n            print(1 / x)\n    elif x == 1:\n        print(1)\n    elif x > 3 and z == 0:\n        print(1 / x)", "def fun(n, k):\n    if n == 1:\n        return 1\n    if k == 0:\n        return 1 / n\n    if k == 1:\n        return 1 / (n // 2 + n % 2)\n    return fun(n // 2 + n % 2, k - 1)\nfor _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    use = fun(n, k)\n    if n == 2:\n        use = 0.5\n    if k == 1:\n        use = 1 / (n // 2 + n % 2 + n // 2 % 2 * (1 - n % 2))\n    print('%.6f' % use)", "from math import floor\nfrom math import ceil\n\ndef g(n):\n    if n % 4 == 0:\n        return 2 * floor(n / 4)\n    if n % 4 == 1:\n        return 2 * floor(n / 4) + 1\n    else:\n        return 2 * floor(n / 4) + 2\n\ndef f(n, k):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 0.5\n    if k == 0:\n        return 1 / n\n    n = g(n)\n    k = k - 1\n    while n > 1 and k > 0:\n        n = ceil(n / 2)\n        k = k - 1\n    return 1 / n\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    print('{0:.6f}'.format(f(n, k)))", "import numpy as np\n\ndef max_inv_prob(n, k):\n    tot = n\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    while n > 1 and k > 0:\n        if n == 2:\n            n = 1\n        elif n % 2 == 1:\n            n = (n + 1) // 2\n        elif n // 2 % 2 == 0 or tot - n >= n // 2:\n            n = n // 2\n        else:\n            n = n // 2 + 1\n        k -= 1\n    return n\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    p = max_inv_prob(n, k)\n    print('%.8f' % (1 / p))", "for h in range(int(input())):\n    (n, chances) = map(int, input().strip().split())\n    flag = 1\n    if n == 2:\n        print(0.5)\n    elif n == 1:\n        print(1)\n    else:\n        while chances:\n            if n == 2:\n                break\n            if n % 2 == 0:\n                p = n // 2\n                if p % 2 == 1 and flag:\n                    flag = 0\n                    n = p + 1\n                else:\n                    n = p\n            else:\n                n = n // 2 + 1\n            chances -= 1\n            flag = 0\n        if chances > 0:\n            print(1)\n        else:\n            print(1 / n)", "import math\nt = int(input())\nfor x in range(t):\n    (n, k) = map(int, input().split())\n    if n == 1:\n        print(str.format('{0:.6f}', 1))\n        continue\n    if k == 0:\n        print(str.format('{0:.6f}', 1 / n))\n        continue\n    if n == 2:\n        print(str.format('{0:.6f}', 1 / 2))\n        continue\n    l = math.ceil(math.log2(n))\n    if k >= l:\n        print(str.format('{0:.6f}', 1))\n        continue\n    elif k == 1:\n        a = math.ceil(n / 2)\n        if a % 2 == 1:\n            if a + a == n:\n                a = a + 1\n        print(str.format('{0:.6f}', 1 / a))\n        continue\n    else:\n        m = math.ceil(n / 2 ** k)\n        print(str.format('{0:.6f}', 1 / m))", "def solve2(num, step, out):\n    if num <= 1:\n        return 1\n    if step == 0:\n        return 1 / num\n    left = 0\n    if out > 0 or num % 2 != 0:\n        left = (num + 1) // 2\n    else:\n        half = num // 2\n        if half % 2 == 0:\n            left = half\n        else:\n            left = half + 1\n    return solve(left, step - 1, out + num - left)\n\ndef solve(num, step):\n    out = 0\n    while True:\n        if num <= 1:\n            return 1\n        if step == 0:\n            return 1 / num\n        left = 0\n        if out > 0 or num % 2 != 0:\n            left = (num + 1) // 2\n        else:\n            half = num // 2\n            if half % 2 == 0:\n                left = half\n            else:\n                left = half + 1\n        out += num - left\n        num = left\n        step -= 1\nans = []\nT = int(input())\nfor ti in range(T):\n    (N, K) = map(int, input().split())\n    ans.append(solve(N, K))\nprint('\\n'.join(map(str, ans)))", "def solve_level2(N, K):\n    if N == 1 or K == 0:\n        return N\n    return solve_level2((N + 1) // 2, K - 1)\n\ndef solve(N, K):\n    if N == 1 or N == 2 or K == 0:\n        return N\n    if N % 2 == 1:\n        return solve_level2((N + 1) // 2, K - 1)\n    if N % 4 == 0:\n        return solve_level2(N // 2, K - 1)\n    return solve_level2(N // 2 + 1, K - 1)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (N, K) = map(int, input().split())\n    s = '%.8f' % (1.0 / solve(N, K))\n    print(s)", "def get_perfect_pow(n):\n    nearest_power = 1\n    while n > 1:\n        n = n >> 1\n        nearest_power = nearest_power << 1\n    return nearest_power\nres_cache = {}\n\ndef f(n, k, r=0):\n    if (n, k, r) in res_cache:\n        return res_cache[n, k, r]\n    if k == 0:\n        p = 1 / n\n    elif n <= 2 and k >= 1:\n        p = 1.0 if n == 1 or (n == 2 and r > 0) else 0.5\n    elif r == 0:\n        if n & 1 == 1:\n            part_1 = n // 2\n            part_2 = n - part_1\n            even = part_1\n            odd = part_2\n            if part_1 & 1 == 1:\n                odd = part_1\n                even = part_2\n            else:\n                even = part_1\n                odd = part_2\n            p = f(odd, k - 1, even) if odd > even else f(even, k - 1, odd)\n        else:\n            part_1 = n // 2\n            part_2 = part_1\n            if part_1 & 1 == 1:\n                part_1 -= 1\n                part_2 += 1\n            p = f(part_1, k - 1, part_2) if part_1 > part_2 else f(part_2, k - 1, part_1)\n    elif r > 0:\n        while n > 2 and k > 0:\n            part_1 = n // 2\n            part_2 = n - part_1\n            n = part_1 if part_1 > part_2 else part_2\n            k -= 1\n        p = f(n, k, r)\n    res_cache[n, k, r] = p\n    return p\nt = int(input())\nwhile t > 0:\n    [n, k] = [int(x) for x in input().split(' ')]\n    print(f(n, k))\n    t -= 1", "def pro(n, k):\n    if not n & 1 and n // 2 & 1:\n        if k == 0:\n            return float(1 / n)\n        n = n // 2 + 1\n        k -= 1\n    while n > 4 and k > 0:\n        if n & 1:\n            n = n // 2 + 1\n        else:\n            n = n // 2\n        k -= 1\n    if n == 1:\n        return float(1)\n    if n == 2:\n        return float(1 / 2)\n    if k == 0:\n        return float(1 / n)\n    if n == 3:\n        if k == 0:\n            return float(1 / 3)\n        if k == 1:\n            return float(1 / 2)\n        if k >= 2:\n            return float(1)\n    if n == 4:\n        if k == 0:\n            return float(1 / 4)\n        if k == 1:\n            return float(1 / 2)\n        if k >= 2:\n            return float(1)\nt = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    print(pro(n, k))\n    t -= 1", "a = []\nb = 1\nwhile b < 10000000000000000000000:\n    a.append(b)\n    b = b * 2\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        if n == 1:\n            print('1.000000')\n        elif n == 2:\n            print('0.500000')\n        elif n == 3:\n            print('0.500000')\n        elif n == 4:\n            print('0.500000')\n        elif n >= 5:\n            if n % 2 == 0:\n                nn = n // 2\n                if nn % 2 == 0:\n                    print(1 / nn)\n                else:\n                    nn += 1\n                    print(1 / nn)\n            else:\n                nn = (n + 1) // 2\n                print(1 / nn)\n    elif n == 2:\n        print('0.500000')\n    else:\n        if k >= len(a):\n            k = len(a) - 1\n        kk = a[k]\n        if n % kk == 0:\n            nn = n // kk\n        else:\n            nn = (n - n % kk + kk) // kk\n        print(1 / nn)", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    if n == 1:\n        print(1)\n        continue\n    if n == 2:\n        print(0.5)\n        continue\n    if k == 0:\n        print(1 / n)\n        continue\n    if n % 4 == 0:\n        n = n / 2\n    elif n % 4 == 1:\n        n = (n + 1) / 2\n    elif n % 4 == 2:\n        n = n / 2 + 1\n    else:\n        n = (n + 1) / 2\n    k -= 1\n    for i in range(k):\n        n = ceil(n / 2)\n        if n == 1:\n            break\n    print(1 / n)", "for _ in range(int(input())):\n    (n, k) = [int(X) for X in input().split()]\n    if n == 1 or n == 2:\n        print('{:.10f}'.format(1 / n))\n        continue\n    for x in range(k):\n        if x == 0 and n % 4 == 2:\n            n -= (n - 2) // 2\n        else:\n            n = n - n // 2\n        if n == 1:\n            break\n    print('{:.10f}'.format(1 / n))", "a = int(input())\nfor _ in range(a):\n    (c, b) = list(map(int, input().rstrip().split()))\n    if c != 2:\n        for i in range(b):\n            if c == 1:\n                break\n            k = int(c / 2)\n            if c % 2 == 0:\n                if k % 2 == 0 or k == 1:\n                    c = k\n                elif i == 0:\n                    c = k + 1\n                else:\n                    c = k\n            else:\n                c = k + 1\n    print(1.0 / c)", "import sys\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    (N, K) = map(int, sys.stdin.readline().split())\n    D = 0\n    while K and N > 2:\n        if N & 1:\n            D += N - (N // 2 + 1)\n            N = N // 2 + 1\n        elif N & 2 and D < 2:\n            D += 2 * (N // 4)\n            N -= 2 * (N // 4)\n        else:\n            D += N // 2\n            N //= 2\n        K -= 1\n    if K and D:\n        N = 1\n    print(1 / N)", "from math import *\nfrom random import *\nt = int(input())\nfor l in range(t):\n    (n, k) = map(int, input().split())\n    if n < 3:\n        print(1 / float(n))\n        continue\n    if k != 0 and (n % 2 != 0 or (n % 2 == 0 and n / 2 % 2)):\n        n = n // 2 + 1\n        k -= 1\n    elif k != 0:\n        n = n // 2\n        k -= 1\n    for i in range(k):\n        if n == 2:\n            n = 1\n        if n % 2 != 0:\n            n = n // 2 + 1\n        else:\n            n = n // 2\n        if n == 1:\n            break\n    print(1 / float(n))", "def log2(n):\n    x = 1\n    k = 0\n    while x < n:\n        x *= 2\n        k += 1\n    return k\n\ndef prob_coins(c, w):\n\n    def aux(coins, weights, first):\n        if weights == 0:\n            return 1 / coins\n        elif first:\n            return aux(2 * (coins // 4) + min(2, coins % 4), weights - 1, False)\n        else:\n            return aux((coins + 1) // 2, weights - 1, False)\n    if c <= 2:\n        return 1 / c\n    else:\n        return aux(c, w, True)\nfor _ in range(int(input())):\n    (coins, weights) = map(float, input().split())\n    if weights >= log2(coins):\n        if coins == 2:\n            print('{0:.8f}'.format(0.5))\n        else:\n            print('{0:.8f}'.format(1))\n    else:\n        print('{0:.8f}'.format(prob_coins(coins, weights)))", "t = int(input())\n\ndef prob(n, k):\n    if n == 2:\n        return 0.5\n    if n == 1:\n        return 1\n    for j in range(k):\n        if n == 2:\n            return 1\n        if j == 0 and n % 4 == 2:\n            n = n // 2 + 1\n        else:\n            n = (n + 1) // 2\n    return 1.0 / n\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    print(prob(n, k))", "def remain(n, k, extra):\n    if n <= 1:\n        return 1\n    if k <= 0:\n        return n\n    if n % 2:\n        return remain((n + 1) / 2, k - 1, True)\n    if n / 2 % 2 == 0 or extra:\n        return remain(n / 2, k - 1, True)\n    return remain(n / 2 + 1, k - 1, True)\nfor _ in range(int(input())):\n    (n, k) = (int(x) for x in input().split())\n    rem = 2 if n == 2 else remain(n, k, False)\n    print('{:.7f}'.format(1 / rem))", "def remain(n, k, extra):\n    if n <= 1:\n        return 1\n    if k <= 0:\n        return n\n    if n % 2:\n        return remain((n + 1) // 2, k - 1, True)\n    if n // 2 % 2 == 0 or extra:\n        return remain(n // 2, k - 1, True)\n    return remain(n // 2 + 1, k - 1, True)\nfor _ in range(int(input())):\n    (n, k) = (int(x) for x in input().split())\n    rem = 2 if n == 2 else remain(n, k, False)\n    print('{:.7f}'.format(1 / rem))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        print('%.6f' % (1.0 / n))\n        continue\n    if n == 2:\n        print('%.6f' % 0.5)\n        continue\n    if n % 4 == 2:\n        n = n // 2 + 1\n    else:\n        n = (n + 1) // 2\n    k -= 1\n    for i in range(k):\n        n = (n + 1) // 2\n        if n < 2:\n            break\n    if n < 2:\n        print('%.6f' % 1.0)\n    else:\n        print('%.6f' % (1.0 / n))", "def readInt():\n    return int(input())\n\ndef readInts():\n    return [int(x) for x in input().split()]\n\ndef cases():\n    numCases = readInt()\n    for _ in range(numCases):\n        (n, k) = readInts()\n        yield (n, k)\n\ndef solve(n, k):\n    if k == 0 or n <= 2:\n        return 1 / n\n    rem = n % 4\n    if rem == 0:\n        n = n // 2\n    elif rem == 1:\n        n = (n + 1) // 2\n    elif rem == 2:\n        n = (n + 2) // 2\n    else:\n        n = (n + 1) // 2\n    k -= 1\n    for _ in range(k):\n        n = (n + 1) // 2\n        if n == 1:\n            break\n    return 1 / n\nfor data in cases():\n    print(solve(*data))"]