["from math import ceil, log\n\ndef getMid(s, e):\n    return s + (e - s) // 2\n\ndef MaxUtil(st, ss, se, l, r, node):\n    if l <= ss and r >= se:\n        return st[node]\n    if se < l or ss > r:\n        return [-1, -1]\n    mid = getMid(ss, se)\n    a = MaxUtil(st, ss, mid, l, r, 2 * node + 1)\n    b = MaxUtil(st, mid + 1, se, l, r, 2 * node + 2)\n    if a[0] < b[0]:\n        res = b\n    else:\n        res = a\n    return res\n\ndef getMax(st, n, l, r):\n    return MaxUtil(st, 0, n - 1, l, r, 0)\n\ndef constructSTUtil(arr, ss, se, st, si):\n    if ss == se:\n        st[si] = [arr[ss], ss]\n        return [arr[ss], ss]\n    mid = getMid(ss, se)\n    a = constructSTUtil(arr, ss, mid, st, si * 2 + 1)\n    b = constructSTUtil(arr, mid + 1, se, st, si * 2 + 2)\n    if a[0] < b[0]:\n        st[si] = b\n    else:\n        st[si] = a\n    return st[si]\n\ndef constructST(arr, n):\n    x = ceil(log(n, 2))\n    max_size = 2 * pow(2, x) - 1\n    st = [[-1, -1]] * max_size\n    constructSTUtil(arr, 0, n - 1, st, 0)\n    return st\n\ndef next(arr, n):\n    s = []\n    arr1 = [-1 for i in range(n)]\n    for i in range(n - 1, -1, -1):\n        while len(s) > 0 and arr[s[-1]] <= arr[i]:\n            s.pop()\n        if len(s) != 0:\n            arr1[i] = s[-1]\n        s.append(i)\n    return arr1\n\ndef lenend(right, n):\n    dic = [0] * n\n    arr = [0] * n\n    for i in range(n):\n        arr[i] = dic[i] + 1\n        if dic[right[i]] < arr[i] and right[i] != -1:\n            dic[right[i]] = arr[i]\n    return arr\n\ndef lenstart(right, n):\n    dic = [0] * n\n    arr = [0] * n\n    for i in range(n - 1, -1, -1):\n        if right[i] != -1:\n            arr[i] = dic[right[i]] + 1\n        else:\n            arr[i] = 1\n        if dic[i] < arr[i]:\n            dic[i] = arr[i]\n    return arr\n(n, q, s) = map(int, input().split())\nh = [int(x) for x in input().split()]\nright = next(h, n)\nen = lenend(right, n)\nsrt = lenstart(right, n)\nmx = constructST(h, n)\nstart = constructST(srt, n)\nend = constructST(en, n)\nlast = 0\nfor i in range(q):\n    (x, y) = map(int, input().split())\n    L = (x + s * last - 1) % n + 1\n    R = (y + s * last - 1) % n + 1\n    if L > R:\n        (L, R) = (R, L)\n    x = L - 1\n    y = R - 1\n    ind = getMax(mx, n, x, y)\n    if ind[1] == y:\n        if ind[1] == x:\n            print(1)\n            last = 1\n        else:\n            a = getMax(start, n, x, ind[1])\n            last = a[0] - srt[ind[1]] + 1\n            print(last)\n    elif ind[1] == x:\n        last = getMax(end, n, ind[1] + 1, y)[0]\n        print(last)\n    else:\n        a = getMax(start, n, x, ind[1])\n        b = getMax(end, n, ind[1] + 1, y)\n        temp = a[0] - srt[ind[1]] + 1\n        last = max(temp, b[0])\n        print(last)"]