["t = int(input())\nfor _ in range(t):\n    (r, l, c, lol) = [float(a) for a in input().split()]\n    R = r\n    C = c\n    L = l\n    val = -R / (2 * L)\n    ans = val * val * L * C + 1 + R * val * c\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (r, l, c, lol) = [float(a) for a in input().split()]\n    R = r\n    C = c\n    L = l\n    val = -R / (2 * L)\n    ans = val * val * L * C + 1 + R * val * c\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    (r, l, c, v) = list(map(int, input().split()))\n    print(1 - c * r * r / (4 * l))", "import sys\nn = int(input())\nfor i in range(n):\n    s = input().split(' ')\n    r = int(s[0])\n    l = int(s[1])\n    c = int(s[2])\n    res = 1 - 1.0 * r * r * c / (4 * l)\n    print(round(res, 2))", "for _ in range(int(input().strip())):\n    (r, l, c, v) = [int(i) for i in input().strip().split()]\n    print(1 - r * r * c / (4 * l))", "for _ in range(int(input())):\n    (r, l, c, v) = [int(i) for i in input().split()]\n    print(1 - r * r * c / (4 * l))", "def ii():\n    return int(input())\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(map(int, input().split()))\nfor _ in range(ii()):\n    (r, l, c, v) = mi()\n    print(1 - r * r * c / (4 * l))", "for t in range(int(input())):\n    (R, L, C, V) = map(float, input().split())\n    print(1 - R * R * C / (4 * L))", "t = int(input())\nfor _ in range(t):\n    inp = list(map(int, input().split()))\n    r = inp[0]\n    l = inp[1]\n    c = inp[2]\n    w = inp[3]\n    print(1 - r * r * c / (l * 4))", "T = int(input())\nfor test in range(T):\n    (R, L, C, Vin) = map(float, input().split())\n    Vout = R * R * C / (4 * L) - 1\n    Vout = -Vout\n    print(Vout)", "T = int(input())\nfor _ in range(T):\n    (R, L, C, Vin) = input().split()\n    (R, L, C, Vin) = (float(R), float(L), float(C), float(Vin))\n    U = R * R * C\n    D = 4 * L\n    an = -(U / D - 1)\n    print('%.6f' % an)", "t = int(input())\nfor _ in range(t):\n    (r, l, c, vin) = map(int, input().split())\n    s = -r / (2 * l)\n    res = s * s * l * c + 1 + s * r * c\n    print(res)", "from sys import stdin\nt = int(stdin.readline().rstrip())\nfor i in range(t):\n    inp = stdin.readline().rstrip()\n    (r, l, c, v) = inp.split(' ')\n    (R, L, C) = (int(r), int(l), int(c))\n    itf = -(R * R * C / (4 * L)) + 1\n    print('{:.2f}'.format(itf))", "for _ in range(int(input())):\n    (r, l, c, v) = map(int, input().split())\n    ans = 1 - r * r * c / (4 * l)\n    print(float(ans))", "t = int(input())\nfor _ in range(t):\n    (r, l, c, lol) = [float(a) for a in input().split()]\n    R = r\n    C = c\n    L = l\n    val = -R / (2 * L)\n    ans = val * val * L * C + 1 + R * val * c\n    print(ans)", "t = int(input())\nfor i in range(0, t):\n    a = input().split()\n    R = int(a[0])\n    L = int(a[1])\n    C = int(a[2])\n    V = int(a[3])\n    p = 1 - R * R * C / (4 * L)\n    print(p)", "a = int(input())\nwhile a > 0:\n    a = a - 1\n    lis = list(map(int, input().split(' ')))\n    r = lis[0]\n    l = lis[1]\n    c = lis[2]\n    v = lis[3]\n    x = 1 - r * r * c / (4 * l)\n    print(x)", "t = int(input())\nfor vi in range(0, t):\n    (r, l, c, v) = input().split()\n    (r, l, c, v) = [int(r), int(l), int(c), int(v)]\n    b = r * r * c / (4 * l)\n    bn = 1 - b\n    print(bn)", "for _ in range(int(input())):\n    (r, l, c, v) = map(int, input().split())\n    print(1 - r * r * c / (4 * l))", "t = int(input())\nwhile t > 0:\n    lt = list(map(int, input().split(' ')))\n    r = lt[0]\n    l = lt[1]\n    c = lt[2]\n    v = lt[3]\n    p = r * r * c\n    p = p / 4\n    p = p / l\n    p = 1 - p\n    print(p)\n    t = t - 1", "t = int(input())\nwhile t:\n    l = [int(x) for x in input().split()]\n    print(1 - l[0] * l[0] * l[2] / (4 * l[1]))\n    t -= 1", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (r, l, c, v) = map(int, input().split())\n    res = -r * r * c / (4 * l)\n    print(res + 1)", "t = int(input())\nfor test in range(t):\n    (r, l, c, vin) = map(int, input().split())\n    ans = 1 - r ** 2 * c / (4 * l)\n    print(ans)", "for i in range(int(input())):\n    (r, l, c, v) = map(float, input().split(' '))\n    k = 0.0\n    k = 1 - r * r * c / (4 * l)\n    print(k)", "for i in range(0, int(input())):\n    (a, b, c, d) = input().split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    s = -(a / (2 * b))\n    print(s * s * b * c + a * c * s + 1)", "nTestcases = int(input())\nfor i in range(nTestcases):\n    (R, L, C, Vin) = [int(j) for j in input().split()]\n    s = -R / (2 * L)\n    itf = s * s * L * C + R * C * s + 1\n    print(itf)", "t = int(input())\nfor _ in range(t):\n    arr = input().split(' ')\n    R = int(arr[0])\n    L = int(arr[1])\n    C = int(arr[2])\n    V = int(arr[3])\n    ans = 1 - R * R * C / (4 * L)\n    print('%.2f' % ans)", "for t in range(int(input())):\n    (r, l, c, v) = map(int, input().split(' '))\n    print(1 - c * r * r / (4 * l))", "T = int(input())\nfor _ in range(T):\n    (R, L, C, Vin) = [int(i) for i in input().split()]\n    s = -R / (2 * L)\n    ans = s ** 2 * L * C + R * C * s + 1\n    print(ans)", "for _ in range(int(input())):\n    (r, l, c, v) = map(float, input().split())\n    x = -r / (2 * l)\n    ans = x * x * l * c + x * r * c + 1\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    arr = input().split()\n    for i in range(4):\n        arr[i] = int(arr[i])\n    itf = 1 - (arr[0] * arr[2]) ** 2 / (4 * arr[1] * arr[2])\n    print(itf)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    s = input()\n    s_list = s.split()\n    r = float(s_list[0])\n    l = float(s_list[1])\n    c = float(s_list[2])\n    vi = float(s_list[3])\n    itf = (-1 * r * r * c + 4 * l) / (4 * l)\n    itf += 1e-08\n    print(itf)", "def f(r, l, c):\n    return 1 - c / 4 * r ** 2 / l\nt = int(input())\nfor i in range(t):\n    (r, l, c, v) = list(map(int, input().split()))\n    print(f(r, l, c))", "t = input()\nt = int(t)\nfor i in range(0, t):\n    (r, l, c, v) = input().split()\n    r = int(r)\n    l = int(l)\n    c = int(c)\n    v = int(v)\n    z = 4\n    a = r * r * c * c\n    b = z * l * c\n    q = a / b\n    z = 1\n    q = z - q\n    print(q)", "a = int(input())\nfor i in range(a):\n    (b, c, d, e) = [int(j) for j in input().split()]\n    print(1 - b ** 2 * d / (4 * c))", "for _ in range(int(input())):\n    (R, L, C, VIN) = [int(j) for j in input().split()]\n    print(1 - R * R * C / (4 * L))", "for _ in range(int(input())):\n    (r, l, c, v) = map(int, input().split())\n    s = -(r ** 2 * c) / (4 * l) + 1\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (r, l, c, _) = map(int, input().split())\n    s = -r / (2 * l)\n    print(s ** 2 * l * c + s * r * c + 1)", "t = int(input())\nfor i in range(t):\n    a = input().split()\n    R = int(a[0])\n    L = int(a[1])\n    C = int(a[2])\n    print(1 - R ** 2 * C / (4 * L))", "t = int(input())\nwhile t > 0:\n    (r, l, c, v) = input().split()\n    r = float(r)\n    l = float(l)\n    c = float(c)\n    v = float(v)\n    res = 1 - c * r * r / (4 * l)\n    print(res)\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    (r, l, c, v) = input().split()\n    r = int(r)\n    l = int(l)\n    c = int(c)\n    v = int(v)\n    result = 1 - r * r * c / (4 * l)\n    print(result)", "t = int(input())\nfor w in range(t):\n    yoarr = list(map(int, input().split()))\n    r = yoarr[0]\n    l = yoarr[1]\n    c = yoarr[2]\n    vin = yoarr[3]\n    print(1 - r ** 2 * c / (4 * l))", "t = int(input())\nfor i in range(t):\n    a = [int(i) for i in input().split()]\n    r = a[0]\n    l = a[1]\n    c = a[2]\n    vin = a[3]\n    ans = r * r * c\n    ans = ans / (4 * l)\n    ans = 1 - ans\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (R, L, C, V) = map(int, input().split())\n    answer = 1 - R * R * C / (4 * L)\n    print(answer)", "t = int(input())\na = lambda x, y, z: -(x * x * z) / (4 * y) + 1\nfor i in range(t):\n    (r, l, c, v) = map(int, input().split())\n    print(a(r, l, c))", "for i in range(int(input())):\n    (r, l, c, vin) = list(map(int, input().split()))\n    k = r * r * c / (4 * l)\n    print(1 - k)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    numbers = [int(n) for n in input().split()]\n    r = numbers[0]\n    l = numbers[1]\n    c = numbers[2]\n    print(1 - r * r * c / (4 * l))", "t = int(input())\nfor test in range(t):\n    (r, l, c, v) = map(int, input().split())\n    ans = 1\n    ans -= r * r * c / (4 * l)\n    print('{:.2f}'.format(ans))", "for i in range(int(input())):\n    (r, l, c, v) = (int(s) for s in input().split())\n    print(1 - r ** 2 * c / (4 * l))", "t = int(input())\nfor _ in range(t):\n    (r, l, c, vin) = map(int, input().split())\n    print(1 - r * r * c / (4 * l))", "t = int(input())\nfor i in range(t):\n    s = input()\n    (r, l, c, vin) = s.split()\n    r = int(r)\n    l = int(l)\n    c = int(c)\n    ans = r * r * c\n    ans = ans / 4\n    ans = ans / l\n    ans *= -1\n    ans = ans + 1.0\n    print(ans)", "for t in range(int(input())):\n    (r, l, c, v) = list(map(int, input().split()))\n    a = l * c\n    b = r * c\n    s = -1 * r / (2 * l)\n    print(a * s * s + b * s + 1)", "t = int(input())\nfor i in range(t):\n    str = input()\n    inputs = str.split(' ')\n    R = int(inputs[0])\n    L = int(inputs[1])\n    C = int(inputs[2])\n    ans = -1 * C * R * R / (4 * L) + 1\n    print(ans)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    (r, l, c, v) = list(map(float, input().split()))\n    print(1.0 - r * r * c / (4.0 * l))", "from sys import stdin, stdout\nfrom math import sqrt\nfrom collections import defaultdict\n\ndef preProcess(n=10 ** 6 + 1):\n    counter = [0 for i in range(n)]\n    for i in range(2, n):\n        if counter[i] == 0:\n            counter[i] = 1\n            for j in range(2 * i, n, i):\n                counter[j] += 1\n    return counter\nt = int(stdin.readline().strip())\nwhile t > 0:\n    (R, L, C, Vin) = [float(x) for x in stdin.readline().strip().split()]\n    ans = 1 - R / 4 * (R / L) * C\n    print(ans)\n    t -= 1", "t = int(input())\nfor i in range(0, t):\n    (r, l, c, v) = input().split()\n    r = int(r)\n    l = int(l)\n    c = int(c)\n    print(1 - 1.0 * r * r * c / (4 * l))", "for test in range(int(input())):\n    (r, l, c, v) = map(int, input().strip().split())\n    ans = r * r * c / (4 * l)\n    print(1 - ans)", "t = int(input())\nfor i in range(t):\n    (r, l, c, v) = [int(x) for x in input().split()]\n    kk = c * r * r / (4 * l)\n    kk = 1 - kk\n    print(round(kk, 2))", "from math import *\nfrom itertools import *\nT = int(input())\nfor _ in range(T):\n    (R, L, C, V) = map(int, input().split())\n    ans = 0\n    zz = R ** 2 * C / (4 * L)\n    ans = 1 - zz\n    print('%.4f' % ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (r, l, c, v) = [int(i) for i in input().split()]\n    print(1 - r ** 2 * c / (4 * l))", "t = int(input())\na = [[int(s) for s in input().split()] for i in range(t)]\nfor i in a:\n    print(-1 * ((i[0] * i[2]) ** 2 - 4 * i[1] * i[2]) / (4 * i[1] * i[2]))", "T = int(input())\nfor t in range(T):\n    (R, L, C, Vin) = [int(x) for x in input().split()]\n    print(1 - C * R * R / (4 * L))", "t = int(input())\nwhile t != 0:\n    (r, l, c, v) = input().split()\n    (r, l, v, c) = (int(r), int(l), int(v), int(c))\n    ans = 1 - r * r * c / (4 * l)\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    t = t - 1\n    arr = list(map(int, input().split()))\n    print(1 - arr[0] * arr[0] * arr[2] / (4 * arr[1]))", "t = int(input())\nwhile t:\n    t = t - 1\n    arr = list(map(int, input().split()))\n    print(1 - arr[0] * arr[0] * arr[2] / (4 * arr[1]))"]