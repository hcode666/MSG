["for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    o = 0\n    for _ in range(n):\n        s = input()\n        l.append(s)\n    for i in range(n):\n        for j in range(m):\n            q = i + 1\n            w = j + 1\n            while q < n and w < m:\n                p = l[i][j]\n                if l[i][w] == p and l[q][j] == l[q][w] and (l[q][j] == p):\n                    o = o + 1\n                q = q + 1\n                w = w + 1\n    print(o)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    matrix = []\n    for i in range(n):\n        row = []\n        l = input()\n        for j in range(m):\n            ele = l[j]\n            row.append(ele)\n        matrix.append(row)\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            same = matrix[i][j]\n            delta = 1\n            while i + delta < n and j + delta < m:\n                if matrix[i][j + delta] == same and matrix[i + delta][j] == same and (matrix[i + delta][j + delta] == same):\n                    ans = ans + 1\n                delta = delta + 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (N, M) = map(int, input().split())\n    matrix = []\n    for i in range(N):\n        row = []\n        l = input()\n        for j in range(M):\n            element = l[j]\n            row.append(element)\n        matrix.append(row)\n    ans = 0\n    for i in range(N):\n        for j in range(M):\n            same = matrix[i][j]\n            delta = 1\n            while i + delta < N and j + delta < M:\n                if matrix[i + delta][j] == same and matrix[i][j + delta] == same and (matrix[i + delta][j + delta] == same):\n                    ans += 1\n                delta += 1\n    print(ans)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    matrix = []\n    for i in range(n):\n        matrix.append(input())\n    count = 0\n    for r in range(n):\n        for c in range(m):\n            ar = r + 1\n            ac = c + 1\n            while ar < n and ac < m:\n                cs = matrix[r][c]\n                if matrix[ar][c] == cs and matrix[ar][ac] == cs and (matrix[r][ac] == cs):\n                    count += 1\n                ar += 1\n                ac += 1\n    print(count)", "def garden(n, m):\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            b = a[i][j]\n            len = 1\n            while i + len < n and j + len < m:\n                if a[i][j + len] == b and a[i + len][j] == a[i + len][j + len] and (a[i + len][j] == b):\n                    c += 1\n                len += 1\n    return c\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(input()))\n    print(garden(n, m))", "def garden(n, m):\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            s = arr[i][j]\n            len = 1\n            while i + len < n and j + len < m:\n                if arr[i][j + len] == s and arr[i + len][j] == arr[i + len][j + len] and (arr[i + len][j] == s):\n                    ans += 1\n                len += 1\n    return ans\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    print(garden(n, m))", "def garden(n, m):\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            s = arr[i][j]\n            len = 1\n            while i + len < n and j + len < m:\n                if arr[i][j + len] == s and arr[i + len][j] == arr[i + len][j + len] and (arr[i + len][j] == s):\n                    ans += 1\n                len += 1\n    return ans\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    print(garden(n, m))", "def garden(n, m):\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            s = arr[i][j]\n            len = 1\n            while i + len < n and j + len < m:\n                if arr[i][j + len] == s and arr[i + len][j] == arr[i + len][j + len] and (arr[i + len][j] == s):\n                    ans += 1\n                len += 1\n    return ans\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    print(garden(n, m))", "def garden(n, m):\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            s = arr[i][j]\n            len = 1\n            while i + len < n and j + len < m:\n                if arr[i][j + len] == s and arr[i + len][j] == arr[i + len][j + len] and (arr[i + len][j] == s):\n                    ans += 1\n                len += 1\n    return ans\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    print(garden(n, m))", "def gard(n, m):\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            k = i + 1\n            l = j + 1\n            while k < n and l < m:\n                b = a[i][j]\n                if a[i][l] == b and a[k][j] == a[k][l] and (a[k][j] == b):\n                    ans += 1\n                k += 1\n                l += 1\n    return ans\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(input()))\n    print(gard(n, m))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    matrix = []\n    for i in range(n):\n        matrix.append(input())\n    count = 0\n    for r in range(n):\n        for c in range(m):\n            ar = r + 1\n            ac = c + 1\n            while ar < n and ac < m:\n                cs = matrix[r][c]\n                if matrix[ar][c] == cs and matrix[ar][ac] == cs and (matrix[r][ac] == cs):\n                    count += 1\n                ar += 1\n                ac += 1\n    print(count)", "def gard(n, m):\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            k = i + 1\n            l = j + 1\n            while k < n and l < m:\n                b = a[i][j]\n                if a[i][l] == b and a[k][j] == a[k][l] and (a[k][j] == b):\n                    ans += 1\n                k += 1\n                l += 1\n    return ans\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(input()))\n    print(gard(n, m))", "def gard(n, m):\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            k = i + 1\n            l = j + 1\n            while k < n and l < m:\n                b = a[i][j]\n                if a[i][l] == b and a[k][j] == a[k][l] and (a[k][j] == b):\n                    ans += 1\n                k += 1\n                l += 1\n    return ans\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(input()))\n    print(gard(n, m))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    matrix = []\n    for i in range(n):\n        matrix.append(input())\n    count = 0\n    for r in range(n):\n        for c in range(m):\n            ar = r + 1\n            ac = c + 1\n            while ar < n and ac < m:\n                cs = matrix[r][c]\n                if matrix[ar][c] == cs and matrix[ar][ac] == cs and (matrix[r][ac] == cs):\n                    count += 1\n                ar += 1\n                ac += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    matrix = []\n    for i in range(n):\n        matrix.append(input())\n    count = 0\n    for r in range(n):\n        for c in range(m):\n            ar = r + 1\n            ac = c + 1\n            while ar < n and ac < m:\n                cs = matrix[r][c]\n                if matrix[ar][c] == cs and matrix[ar][ac] == cs and (matrix[r][ac] == cs):\n                    count += 1\n                ar += 1\n                ac += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(input())\n    ans = 0\n    length = 1\n    while length <= min([n, m]):\n        for x in range(0, n - length):\n            for y in range(0, m - length):\n                if a[x][y] == a[x + length][y] and a[x][y] == a[x][y + length] and (a[x][y] == a[x + length][y + length]):\n                    ans += 1\n        length += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    c = 0\n    for i in range(n):\n        a = input()\n        l.append(a)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            for k in range(1, min(n - i, m - j)):\n                if l[i][j] == l[i + k][j] and l[i][j] == l[i][j + k] and (l[i][j] == l[i + k][j + k]):\n                    c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    c = 0\n    for i in range(n):\n        a = input()\n        l.append(a)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            for k in range(1, min(n - i, m - j)):\n                if l[i][j] == l[i + k][j] and l[i][j] == l[i][j + k] and (l[i][j] == l[i + k][j + k]):\n                    c += 1\n    print(c)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    c = 0\n    for i in range(n):\n        a = input()\n        l.append(a)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            for k in range(1, min(n - i, m - j)):\n                if l[i][j] == l[i + k][j] and l[i][j] == l[i][j + k] and (l[i][j] == l[i + k][j + k]):\n                    c += 1\n    print(c)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    c = 0\n    for i in range(n):\n        a = input()\n        l.append(a)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            for k in range(1, min(n - i, m - j)):\n                if l[i][j] == l[i + k][j] and l[i][j] == l[i][j + k] and (l[i][j] == l[i + k][j + k]):\n                    c += 1\n    print(c)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    c = 0\n    for i in range(n):\n        a = input()\n        l.append(a)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            for k in range(1, min(n - i, m - j)):\n                if l[i][j] == l[i + k][j] and l[i][j] == l[i][j + k] and (l[i][j] == l[i + k][j + k]):\n                    c += 1\n    print(c)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    c = 0\n    for i in range(n):\n        a = input()\n        l.append(a)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            for k in range(1, min(n - i, m - j)):\n                if l[i][j] == l[i + k][j] and l[i][j] == l[i][j + k] and (l[i][j] == l[i + k][j + k]):\n                    c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    c = 0\n    for i in range(n):\n        a = input()\n        l.append(a)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            for k in range(1, min(n - i, m - j)):\n                if l[i][j] == l[i + k][j] and l[i][j] == l[i][j + k] and (l[i][j] == l[i + k][j + k]):\n                    c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = []\n    for val in range(n):\n        x.append(list(map(str, input())))\n    count = 0\n    for size in range(1, min(n, m)):\n        for i in range(0, n - size):\n            for j in range(0, m - size):\n                if x[i][j] == x[i][j + size] and x[i + size][j] == x[i + size][j + size] and (x[i][j] == x[i + size][j]):\n                    count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = []\n    for val in range(n):\n        x.append(list(map(str, input())))\n    count = 0\n    for size in range(1, min(n, m)):\n        for i in range(0, n - size):\n            for j in range(0, m - size):\n                if x[i][j] == x[i][j + size] and x[i + size][j] == x[i + size][j + size] and (x[i][j] == x[i + size][j]):\n                    count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    garden = []\n    for i in range(n):\n        garden.append([i for i in input()])\n    count = 0\n    for size in range(1, min(n, m)):\n        for i in range(0, n - size):\n            for j in range(0, m - size):\n                if garden[i][j] == garden[i][j + size] and garden[i + size][j] == garden[i + size][j + size] and (garden[i][j] == garden[i + size][j]):\n                    count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    c = 0\n    for i in range(n):\n        a = input()\n        l.append(a)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            for k in range(1, min(n - i, m - j)):\n                if l[i][j] == l[i + k][j] and l[i][j] == l[i][j + k] and (l[i][j] == l[i + k][j + k]):\n                    c += 1\n    print(c)", "t = int(input())\nfor ni in range(t):\n    (n, m) = map(int, input().split())\n    l = list()\n    for ki in range(n):\n        l.append(input())\n        (k, s) = (0, 0)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            k = j + 1\n            while k < m and i + k - j < n:\n                if l[i][j] == l[i][k] == l[i + k - j][j] == l[i + k - j][k]:\n                    s = s + 1\n                k = k + 1\n    print(s)", "t = int(input())\nwhile t != 0:\n    (n, m) = map(int, input().split())\n    l = []\n    for x in range(0, n):\n        ls = []\n        ls.extend(input())\n        l.append(ls)\n    s = 0\n    for i in range(0, n - 1):\n        for j in range(0, m - 1):\n            k = j + 1\n            while k < m and i + k - j < n:\n                if l[i][j] == l[i][k] == l[i + k - j][j] == l[i + k - j][k]:\n                    s += 1\n                k += 1\n    print(s)\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    c = 0\n    for i in range(n):\n        a = input()\n        l.append(a)\n    for i in range(n - 1):\n        for j in range(m - 1):\n            for k in range(1, min(n - i, m - j)):\n                if l[i][j] == l[i + k][j] and l[i][j] == l[i][j + k] and (l[i][j] == l[i + k][j + k]):\n                    c += 1\n    print(c)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = []\n    count = 0\n    for i in range(a):\n        s = input()\n        l.append(s)\n    for j in range(a - 1):\n        for m in range(b - 1):\n            for n in range(1, min(a - j, b - m)):\n                if l[j][m] == l[j + n][m] and l[j][m] == l[j][m + n] and (l[j][m] == l[j + n][m + n]):\n                    count += 1\n    print(count)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = []\n    count = 0\n    for i in range(a):\n        s = input()\n        l.append(s)\n    for j in range(a - 1):\n        for m in range(b - 1):\n            for n in range(1, min(a - j, b - m)):\n                if l[j][m] == l[j + n][m] and l[j][m] == l[j][m + n] and (l[j][m] == l[j + n][m + n]):\n                    count += 1\n    print(count)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    grid = [input() for _ in range(a)]\n    count = 0\n    for x in range(a):\n        for y in range(b):\n            for w in range(1, min(b - y, a - x)):\n                xf = w + x\n                yf = w + y\n                if xf >= a or yf >= b:\n                    pass\n                else:\n                    count += grid[x][y] == grid[x][yf] == grid[xf][y] == grid[xf][yf]\n    print(count)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = []\n    count = 0\n    for i in range(a):\n        s = input()\n        l.append(s)\n    for j in range(a - 1):\n        for m in range(b - 1):\n            for n in range(1, min(a - j, b - m)):\n                if l[j][m] == l[j + n][m] and l[j][m] == l[j][m + n] and (l[j][m] == l[j + n][m + n]):\n                    count += 1\n    print(count)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = []\n    count = 0\n    for i in range(a):\n        s = input()\n        l.append(s)\n    for j in range(a - 1):\n        for m in range(b - 1):\n            for n in range(1, min(a - j, b - m)):\n                if l[j][m] == l[j + n][m] and l[j][m] == l[j][m + n] and (l[j][m] == l[j + n][m + n]):\n                    count += 1\n    print(count)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = []\n    count = 0\n    for i in range(a):\n        s = input()\n        l.append(s)\n    for j in range(a - 1):\n        for m in range(b - 1):\n            for n in range(1, min(a - j, b - m)):\n                if l[j][m] == l[j + n][m] and l[j][m] == l[j][m + n] and (l[j][m] == l[j + n][m + n]):\n                    count += 1\n    print(count)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = []\n    count = 0\n    for i in range(a):\n        s = input()\n        l.append(s)\n    for j in range(a - 1):\n        for m in range(b - 1):\n            for n in range(1, min(a - j, b - m)):\n                if l[j][m] == l[j + n][m] and l[j][m] == l[j][m + n] and (l[j][m] == l[j + n][m + n]):\n                    count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    garden = []\n    for i in range(n):\n        garden += [input()]\n    sq = 0\n    for x in range(m - 1):\n        for y in range(n - 1):\n            x2 = x + 1\n            y2 = y + 1\n            while x2 < m and y2 < n:\n                if garden[y][x] == garden[y][x2]:\n                    if garden[y][x] == garden[y2][x]:\n                        if garden[y][x] == garden[y2][x2]:\n                            sq += 1\n                x2 += 1\n                y2 += 1\n    print(sq)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    garden = []\n    for i in range(n):\n        garden += [input()]\n    sq = 0\n    for x in range(m - 1):\n        for y in range(n - 1):\n            x2 = x + 1\n            y2 = y + 1\n            while x2 < m and y2 < n:\n                if garden[y][x] == garden[y][x2]:\n                    if garden[y][x] == garden[y2][x]:\n                        if garden[y][x] == garden[y2][x2]:\n                            sq += 1\n                x2 += 1\n                y2 += 1\n    print(sq)", "t = int(input())\nfor _ in range(t):\n    line = input().split()\n    n = int(line[0])\n    m = int(line[1])\n    garden = []\n    for _ in range(n):\n        garden.append(list(input()))\n    count = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            for side in range(1, min(n - i, m - j)):\n                upper_l = garden[i][j]\n                upper_r = garden[i][j + side]\n                bottom_l = garden[i + side][j]\n                bottom_r = garden[i + side][j + side]\n                if upper_r == upper_l == bottom_l == bottom_r:\n                    count += 1\n    print(count)", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    li = []\n    for i in range(n):\n        li.append(input())\n    counter = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            l = min(n - i, m - j)\n            for k in range(1, l):\n                if li[i][j] == li[i + k][j] and li[i][j] == li[i][j + k] and (li[i][j] == li[i + k][j + k]):\n                    counter += 1\n    print(counter)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    li = []\n    for i in range(n):\n        li.append(input())\n    counter = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            l = min(n - i, m - j)\n            for k in range(1, l):\n                if li[i][j] == li[i + k][j] and li[i][j] == li[i][j + k] and (li[i][j] == li[i + k][j + k]):\n                    counter += 1\n    print(counter)\n    t -= 1", "for tc in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = []\n    for i in range(n):\n        s.append(input())\n    cnt = 0\n    for size in range(2, min(n, m) + 1):\n        for startcol in range(m - size + 1):\n            for startrow in range(n - size + 1):\n                ul = s[startrow][startcol]\n                ur = s[startrow][startcol + size - 1]\n                ll = s[startrow + size - 1][startcol]\n                lr = s[startrow + size - 1][startcol + size - 1]\n                if ul == ur and ur == ll and (ll == lr):\n                    cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for _ in range(n):\n        l.append(input())\n    c = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            a = min(n - i, m - j)\n            for k in range(1, a):\n                if l[i][j] == l[i + k][j] and l[i][j] == l[i][j + k] and (l[i][j] == l[i + k][j + k]):\n                    c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = []\n    for _ in range(n):\n        lst.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(m):\n            c = 1\n            while c + j < m and c + i < n:\n                if lst[i][j] == lst[i + c][j] and lst[i][j] == lst[i][j + c] and (lst[i][j] == lst[i + c][j + c]):\n                    count += 1\n                c += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = []\n    for _ in range(n):\n        lst.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(m):\n            c = 1\n            while c + j < m and c + i < n:\n                if lst[i][j] == lst[i + c][j] and lst[i][j] == lst[i][j + c] and (lst[i][j] == lst[i + c][j + c]):\n                    count += 1\n                c += 1\n    print(count)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    ls = []\n    for i in range(x):\n        s = input()\n        ls.append(s)\n    cnt = 0\n    for i in range(x - 1):\n        for j in range(y - 1):\n            ele = ls[i][j]\n            for k in range(j + 1, y):\n                if ele == ls[i][k]:\n                    dist = k - j\n                    if i + dist < x and j + dist < y and (ls[i + dist][j] == ele) and (ls[i + dist][j + dist] == ele):\n                        cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    ls = []\n    for i in range(x):\n        s = input()\n        ls.append(s)\n    cnt = 0\n    for i in range(x - 1):\n        for j in range(y - 1):\n            ele = ls[i][j]\n            for k in range(j + 1, y):\n                if ele == ls[i][k]:\n                    dist = k - j\n                    if i + dist < x and j + dist < y:\n                        if ls[i + dist][j] == ele and ls[i + dist][j + dist] == ele:\n                            cnt += 1\n                    else:\n                        break\n    print(cnt)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    ls = []\n    for i in range(x):\n        s = input()\n        ls.append(s)\n    cnt = 0\n    for i in range(x - 1):\n        for j in range(y - 1):\n            ele = ls[i][j]\n            for k in range(j + 1, y):\n                if ele == ls[i][k]:\n                    dist = k - j\n                    if i + dist < x and j + dist < y and (ls[i + dist][j] == ele) and (ls[i + dist][j + dist] == ele):\n                        cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    ls = []\n    for i in range(x):\n        s = input()\n        ls.append(s)\n    cnt = 0\n    for i in range(x):\n        for j in range(y):\n            ele = ls[i][j]\n            for k in range(j + 1, y):\n                if ele == ls[i][k]:\n                    dist = k - j\n                    if i + dist < x and j + dist < y and (ls[i + dist][j] == ele) and (ls[i + dist][j + dist] == ele):\n                        cnt += 1\n    print(cnt)", "def solve(a, n, m):\n    ans = 0\n    for i in range(0, n - 1):\n        for j in range(0, m - 1):\n            (delta, ch) = (1, a[i][j])\n            while i + delta < n and j + delta < m:\n                if a[i][j + delta] == ch and a[i + delta][j] == ch and (a[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(input())\n    solve(a, n, m)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = []\n    for _ in range(n):\n        lst.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(m):\n            c = 1\n            while c + j < m and c + i < n:\n                if lst[i][j] == lst[i + c][j] and lst[i][j] == lst[i][j + c] and (lst[i][j] == lst[i + c][j + c]):\n                    count += 1\n                c += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    flowers = []\n    for i in range(n):\n        flowers.append(input())\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if flowers[i][j] == flowers[i + k][j] and flowers[i][j] == flowers[i][j + k] and (flowers[i][j] == flowers[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "def temp(arr, n, m):\n    count = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            maxSize = min(n - i, m - j)\n            for size in range(1, maxSize):\n                if arr[i][j] == arr[i][j + size] == arr[i + size][j] == arr[i + size][j + size]:\n                    count += 1\n    return count\nfor _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        A.append(input().strip())\n    print(temp(A, N, M))", "def temp(arr, n, m):\n    count = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            maxSize = min(n - i, m - j)\n            for size in range(1, maxSize):\n                if arr[i][j] == arr[i][j + size] == arr[i + size][j] == arr[i + size][j + size]:\n                    count += 1\n    return count\nfor _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        A.append(input().strip())\n    print(temp(A, N, M))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    count = 0\n    for i in range(n):\n        l.append(input())\n    for i in range(n - 1):\n        for j in range(m - 1):\n            l1 = min(n - i, m - j)\n            for k in range(1, l1):\n                if l[i][j] == l[i + k][j] and l[i][j] == l[i][j + k] and (l[i][j] == l[i + k][j + k]):\n                    count += 1\n    print(count)", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    l1 = []\n    for i in range(n):\n        l1.append(input())\n    counter = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            l = min(n - i, m - j)\n            for k in range(1, l):\n                if l1[i][j] == l1[i + k][j] and l1[i][j] == l1[i][j + k] and (l1[i][j] == l1[i + k][j + k]):\n                    counter += 1\n    print(counter)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    l1 = []\n    for i in range(n):\n        l1.append(input())\n    counter = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            l = min(n - i, m - j)\n            for k in range(1, l):\n                if l1[i][j] == l1[i + k][j] and l1[i][j] == l1[i][j + k] and (l1[i][j] == l1[i + k][j + k]):\n                    counter += 1\n    print(counter)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    l1 = []\n    for i in range(n):\n        l1.append(input())\n    counter = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            l = min(n - i, m - j)\n            for k in range(1, l):\n                if l1[i][j] == l1[i + k][j] and l1[i][j] == l1[i][j + k] and (l1[i][j] == l1[i + k][j + k]):\n                    counter += 1\n    print(counter)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    flowers = []\n    for i in range(n):\n        flowers.append(input())\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if flowers[i][j] == flowers[i + k][j] and flowers[i][j] == flowers[i][j + k] and (flowers[i][j] == flowers[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        x = input()\n        s = []\n        s[:] = x\n        a.append(s)\n    count = 0\n    for i in range(n):\n        for j in range(m):\n            if m - j > n - i:\n                min = n - i\n            else:\n                min = m - j\n            for k in range(1, min):\n                if a[i][j] == a[i + k][j] == a[i + k][j + k] == a[i][j + k]:\n                    count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        x = input()\n        s = []\n        s[:] = x\n        a.append(s)\n    count = 0\n    for i in range(n):\n        for j in range(m):\n            if m - j > n - i:\n                min = n - i\n            else:\n                min = m - j\n            for k in range(1, min):\n                if a[i][j] == a[i + k][j] == a[i + k][j + k] == a[i][j + k]:\n                    count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    flowers = []\n    for i in range(n):\n        flowers.append(input())\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if flowers[i][j] == flowers[i + k][j] and flowers[i][j] == flowers[i][j + k] and (flowers[i][j] == flowers[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    li = []\n    for i in range(n):\n        li.append(input())\n    counter = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            l = min(n - i, m - j)\n            for k in range(1, l):\n                if li[i][j] == li[i + k][j] and li[i][j] == li[i][j + k] and (li[i][j] == li[i + k][j + k]):\n                    counter += 1\n    print(counter)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    flowers = []\n    for i in range(n):\n        flowers.append(input())\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if flowers[i][j] == flowers[i + k][j] and flowers[i][j] == flowers[i][j + k] and (flowers[i][j] == flowers[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "def temp(arr, n, m):\n    count = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            maxSize = min(n - i, m - j)\n            for size in range(1, maxSize):\n                if arr[i][j] == arr[i][j + size] == arr[i + size][j] == arr[i + size][j + size]:\n                    count += 1\n    return count\nfor _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        A.append(input().strip())\n    print(temp(A, N, M))", "def temp(arr, n, m):\n    count = 0\n    for i in range(n - 1):\n        for j in range(m - 1):\n            maxSize = min(n - i, m - j)\n            for size in range(1, maxSize):\n                if arr[i][j] == arr[i][j + size] == arr[i + size][j] == arr[i + size][j + size]:\n                    count += 1\n    return count\nfor _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        A.append(input().strip())\n    print(temp(A, N, M))", "T = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    g = []\n    for i in range(n):\n        g.append(str(input()))\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if g[i][j] == g[i + k][j] and g[i][j] == g[i][j + k] and (g[i][j] == g[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    flowers = []\n    for i in range(n):\n        flowers.append(input())\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if flowers[i][j] == flowers[i + k][j] and flowers[i][j] == flowers[i][j + k] and (flowers[i][j] == flowers[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    flowers = []\n    for i in range(n):\n        flowers.append(input())\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if flowers[i][j] == flowers[i + k][j] and flowers[i][j] == flowers[i][j + k] and (flowers[i][j] == flowers[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    flowers = []\n    for i in range(n):\n        flowers.append(input())\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if flowers[i][j] == flowers[i + k][j] and flowers[i][j] == flowers[i][j + k] and (flowers[i][j] == flowers[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "t = input()\nfor c in range(0, int(t)):\n    (n, m) = map(int, input().split())\n    g = []\n    for i in range(n):\n        g.append(str(input()))\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if g[i][j] == g[i + k][j] and g[i][j] == g[i][j + k] and (g[i][j] == g[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "t = input()\nfor c in range(0, int(t)):\n    (n, m) = map(int, input().split())\n    g = []\n    for i in range(n):\n        g.append(str(input()))\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if g[i][j] == g[i + k][j] and g[i][j] == g[i][j + k] and (g[i][j] == g[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "T = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    g = []\n    for i in range(n):\n        g.append(str(input()))\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if g[i][j] == g[i + k][j] and g[i][j] == g[i][j + k] and (g[i][j] == g[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "T = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    g = []\n    for i in range(n):\n        g.append(str(input()))\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if g[i][j] == g[i + k][j] and g[i][j] == g[i][j + k] and (g[i][j] == g[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "tests = int(input())\nfor i in range(tests):\n    (n, m) = map(int, input().split())\n    arr = []\n    ans = 0\n    for i in range(n):\n        arr.append(input())\n    for x in range(n - 1):\n        for y in range(m - 1):\n            temp = arr[x][y]\n            start = 1\n            if n - x > m - y:\n                end = m - y\n            else:\n                end = n - x\n            for z in range(start, end):\n                if temp == arr[x][y + z] == arr[x + z][y] == arr[x + z][y + z]:\n                    ans += 1\n    print(ans)", "T = int(input())\n\ndef algo():\n    (N, M) = map(int, input().split())\n    li = []\n    for i in range(N):\n        li.append(input())\n    out = 0\n    q = 0\n    while q < M:\n        p = 0\n        while p < N:\n            f = min(N - p - 1, M - q - 1)\n            if f == 0:\n                break\n            else:\n                for j in range(1, f + 1):\n                    if li[p][q] == li[p + j][q] == li[p][q + j] == li[p + j][q + j]:\n                        out += 1\n            p += 1\n        q += 1\n    print(out)\nfor i in range(T):\n    algo()", "T = int(input())\n\ndef algo():\n    (N, M) = map(int, input().split())\n    li = []\n    for i in range(N):\n        li.append(input())\n    out = 0\n    q = 0\n    while q < M:\n        p = 0\n        while p < N:\n            f = min(N - p - 1, M - q - 1)\n            if f == 0:\n                break\n            else:\n                for j in range(1, f + 1):\n                    if li[p][q] == li[p + j][q] == li[p][q + j] == li[p + j][q + j]:\n                        out += 1\n            p += 1\n        q += 1\n    print(out)\nfor i in range(T):\n    algo()", "t = int(input())\nans = []\nfor _ in range(t):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        x = list(input())\n        A.append(x)\n    count = 0\n    for i in range(2, min(N, M) + 1):\n        for j in range(N - i + 1):\n            for k in range(M - i + 1):\n                if A[j][k] == A[j + i - 1][k] and A[j][k] == A[j][k + i - 1] and (A[j][k] == A[j + i - 1][k + i - 1]):\n                    count += 1\n    ans.append(count)\nfor i in ans:\n    print(i)", "for t in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append(list(input()))\n    k = min(m, n)\n    sum = 0\n    for i in range(n):\n        for j in range(m):\n            c = 1\n            while i + c < n and j + c < m:\n                if l[i][j] == l[i + c][j] == l[i][j + c] == l[i + c][j + c]:\n                    sum += 1\n                c += 1\n    print(sum)", "T = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    g = []\n    for i in range(n):\n        g.append(str(input()))\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if g[i][j] == g[i + k][j] and g[i][j] == g[i][j + k] and (g[i][j] == g[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "T = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    g = []\n    for i in range(n):\n        g.append(str(input()))\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            k = 1\n            while k + j < m and k + i < n:\n                if g[i][j] == g[i + k][j] and g[i][j] == g[i][j + k] and (g[i][j] == g[i + k][j + k]):\n                    c += 1\n                k += 1\n    print(c)", "def solve(A, N, M):\n    ans = 0\n    for i in range(0, N - 1):\n        for j in range(0, M - 1):\n            (delta, ch) = (1, A[i][j])\n            while i + delta < N and j + delta < M:\n                if A[i][j + delta] == ch and A[i + delta][j] == ch and (A[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        row = input()\n        A.append(row)\n    solve(A, N, M)", "T = int(input())\nans = []\nfor i in range(T):\n    (N, M) = [int(i) for i in input().split()]\n    A = []\n    for i in range(N):\n        x = list(input())\n        A.append(x)\n    count = 0\n    for s in range(2, min(N, M) + 1):\n        for i in range(N - s + 1):\n            for j in range(M - s + 1):\n                if A[i][j] == A[i + s - 1][j] and A[i][j] == A[i][j + s - 1] and (A[i][j] == A[i + s - 1][j + s - 1]):\n                    count += 1\n    ans.append(count)\nfor i in ans:\n    print(i)", "T = int(input())\nans = []\nfor i in range(T):\n    (N, M) = [int(i) for i in input().split()]\n    A = []\n    for i in range(N):\n        x = list(input())\n        A.append(x)\n    count = 0\n    for s in range(2, min(N, M) + 1):\n        for i in range(N - s + 1):\n            for j in range(M - s + 1):\n                if A[i][j] == A[i + s - 1][j] and A[i][j] == A[i][j + s - 1] and (A[i][j] == A[i + s - 1][j + s - 1]):\n                    count += 1\n    ans.append(count)\nfor i in ans:\n    print(i)", "T = int(input())\nans = []\nfor i in range(T):\n    (N, M) = [int(i) for i in input().split()]\n    A = []\n    for i in range(N):\n        x = list(input())\n        A.append(x)\n    count = 0\n    for s in range(2, min(N, M) + 1):\n        for i in range(N - s + 1):\n            for j in range(M - s + 1):\n                if A[i][j] == A[i + s - 1][j] and A[i][j] == A[i][j + s - 1] and (A[i][j] == A[i + s - 1][j + s - 1]):\n                    count += 1\n    ans.append(count)\nfor i in ans:\n    print(i)", "def solve(A, N, M):\n    ans = 0\n    for i in range(0, N - 1):\n        for j in range(0, M - 1):\n            (delta, ch) = (1, A[i][j])\n            while i + delta < N and j + delta < M:\n                if A[i][j + delta] == ch and A[i + delta][j] == ch and (A[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        row = input()\n        A.append(row)\n    solve(A, N, M)", "def solve(A, N, M):\n    ans = 0\n    for i in range(0, N - 1):\n        for j in range(0, M - 1):\n            (delta, ch) = (1, A[i][j])\n            while i + delta < N and j + delta < M:\n                if A[i][j + delta] == ch and A[i + delta][j] == ch and (A[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        row = input()\n        A.append(row)\n    solve(A, N, M)", "def solve(A, N, M):\n    ans = 0\n    for i in range(0, N - 1):\n        for j in range(0, M - 1):\n            (delta, ch) = (1, A[i][j])\n            while i + delta < N and j + delta < M:\n                if A[i][j + delta] == ch and A[i + delta][j] == ch and (A[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        row = input()\n        A.append(row)\n    solve(A, N, M)", "def solve(A, N, M):\n    ans = 0\n    for i in range(0, N - 1):\n        for j in range(0, M - 1):\n            (delta, ch) = (1, A[i][j])\n            while i + delta < N and j + delta < M:\n                if A[i][j + delta] == ch and A[i + delta][j] == ch and (A[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        row = input()\n        A.append(row)\n    solve(A, N, M)", "def solve(A, N, M):\n    ans = 0\n    for i in range(0, N - 1):\n        for j in range(0, M - 1):\n            (delta, ch) = (1, A[i][j])\n            while i + delta < N and j + delta < M:\n                if A[i][j + delta] == ch and A[i + delta][j] == ch and (A[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        row = input()\n        A.append(row)\n    solve(A, N, M)", "def solve(A, N, M):\n    ans = 0\n    for i in range(0, N - 1):\n        for j in range(0, M - 1):\n            (delta, ch) = (1, A[i][j])\n            while i + delta < N and j + delta < M:\n                if A[i][j + delta] == ch and A[i + delta][j] == ch and (A[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        row = input()\n        A.append(row)\n    solve(A, N, M)", "def solve(A, N, M):\n    ans = 0\n    for i in range(0, N - 1):\n        for j in range(0, M - 1):\n            (delta, ch) = (1, A[i][j])\n            while i + delta < N and j + delta < M:\n                if A[i][j + delta] == ch and A[i + delta][j] == ch and (A[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        row = input()\n        A.append(row)\n    solve(A, N, M)", "def solve(A, N, M):\n    ans = 0\n    for i in range(0, N - 1):\n        for j in range(0, M - 1):\n            (delta, ch) = (1, A[i][j])\n            while i + delta < N and j + delta < M:\n                if A[i][j + delta] == ch and A[i + delta][j] == ch and (A[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        row = input()\n        A.append(row)\n    solve(A, N, M)", "def solve(A, N, M):\n    ans = 0\n    for i in range(0, N - 1):\n        for j in range(0, M - 1):\n            (delta, ch) = (1, A[i][j])\n            while i + delta < N and j + delta < M:\n                if A[i][j + delta] == ch and A[i + delta][j] == ch and (A[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        row = input()\n        A.append(row)\n    solve(A, N, M)", "def solve(A, N, M):\n    ans = 0\n    for i in range(0, N - 1):\n        for j in range(0, M - 1):\n            (delta, ch) = (1, A[i][j])\n            while i + delta < N and j + delta < M:\n                if A[i][j + delta] == ch and A[i + delta][j] == ch and (A[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        row = input()\n        A.append(row)\n    solve(A, N, M)", "def solve(A, N, M):\n    ans = 0\n    for i in range(0, N - 1):\n        for j in range(0, M - 1):\n            (delta, ch) = (1, A[i][j])\n            while i + delta < N and j + delta < M:\n                if A[i][j + delta] == ch and A[i + delta][j] == ch and (A[i + delta][j + delta] == ch):\n                    ans += 1\n                delta += 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        row = input()\n        A.append(row)\n    solve(A, N, M)"]