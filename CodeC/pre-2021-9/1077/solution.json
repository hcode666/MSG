["T = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = input()\n    (i, j) = (0, n - 1)\n    count = 0\n    flag = 0\n    (bl, br) = (0, 0)\n    s = list(s)\n    while i < n and j >= 0 and (i < j):\n        if s[i] != s[j]:\n            if i + 1 == j:\n                flag += 1\n                print('NO')\n                break\n            elif br == 0 and s[i] == s[j - 1]:\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                count += 1\n                (bl, br) = (0, 1)\n            elif bl == 0 and s[i + 1] == s[j]:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                count += 1\n                (bl, br) = (1, 0)\n            else:\n                flag += 1\n                print('NO')\n                break\n        else:\n            (bl, br) = (0, 0)\n        i += 1\n        j -= 1\n    if flag == 0:\n        print('YES')\n        print(count)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = input()\n    (i, j) = (0, n - 1)\n    count = 0\n    flag = 0\n    (bl, br) = (0, 0)\n    s = list(s)\n    while i < n and j >= 0 and (i < j):\n        if s[i] != s[j]:\n            if i + 1 == j:\n                flag += 1\n                print('NO')\n                break\n            elif br == 0 and s[i] == s[j - 1]:\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                count += 1\n                (bl, br) = (0, 1)\n            elif bl == 0 and s[i + 1] == s[j]:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                count += 1\n                (bl, br) = (1, 0)\n            else:\n                flag += 1\n                print('NO')\n                break\n        else:\n            (bl, br) = (0, 0)\n        i += 1\n        j -= 1\n    if flag == 0:\n        print('YES')\n        print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    s = list(s)\n    i = 0\n    j = n - 1\n    mop = 0\n    f = 0\n    (bl, br) = (0, 0)\n    while i < j:\n        if s[i] != s[j]:\n            if i + 1 == j:\n                f += 1\n                break\n            elif s[i + 1] == s[j] and bl == 0:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                mop += 1\n                (bl, br) = (1, 0)\n            elif s[i] == s[j - 1] and br == 0:\n                (s[j], s[j - 1]) = (s[j - 1], s[j])\n                mop += 1\n                (bl, br) = (0, 1)\n            else:\n                f = 1\n                break\n        else:\n            (bl, br) = (0, 0)\n        i += 1\n        j -= 1\n    if f:\n        print('NO')\n    else:\n        print('YES')\n        print(mop)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    (i, j) = (0, n - 1)\n    count = 0\n    flag = 0\n    (bl, br) = (0, 0)\n    s = list(s)\n    while i < n and j >= 0 and (i < j):\n        if s[i] != s[j]:\n            if i + 1 == j:\n                flag += 1\n                print('NO')\n                break\n            elif br == 0 and s[i] == s[j - 1]:\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                count += 1\n                (bl, br) = (0, 1)\n            elif bl == 0 and s[i + 1] == s[j]:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                count += 1\n                (bl, br) = (1, 0)\n            else:\n                flag += 1\n                print('NO')\n                break\n        else:\n            (bl, br) = (0, 0)\n        i += 1\n        j -= 1\n    if flag == 0:\n        print('YES')\n        print(count)", "for u in range(int(input())):\n    n = int(input())\n    s = list(input())\n    l = [0 for i in range(n)]\n    (i, j) = (0, n - 1)\n    c = 0\n    f = 0\n    while i <= j:\n        if s[i] == s[j]:\n            i += 1\n            j -= 1\n        elif s[i] == s[j - 1] and l[j] == 0 and (l[j - 1] == 0):\n            (s[j], s[j - 1]) = (s[j - 1], s[j])\n            l[j] = 1\n            l[j - 1] = 1\n            i += 1\n            j -= 1\n            c += 1\n        elif s[i + 1] == s[j] and l[i] == 0 and (l[i + 1] == 0):\n            (s[i + 1], s[i]) = (s[i], s[i + 1])\n            l[i] = 1\n            l[i + 1] = 1\n            i += 1\n            j -= 1\n            c += 1\n        else:\n            break\n    for i in range(n // 2 + 1):\n        if s[i] != s[n - i - 1]:\n            f = 1\n            break\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(c)", "from collections import defaultdict\nfrom heapq import *\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    s = list(s)\n    (i, j) = (0, n - 1)\n    k = 0\n    flag = 1\n    (l, r) = (1, 1)\n    if n == 1:\n        print('YES')\n        print(k)\n        continue\n    while i < j:\n        if s[i] == s[j]:\n            i += 1\n            j -= 1\n            (l, r) = (1, 1)\n        elif j - 1 != i and s[i] == s[j - 1] and r:\n            (s[j - 1], s[j]) = (s[j], s[j - 1])\n            i += 1\n            j -= 1\n            k += 1\n            (r, l) = (0, 1)\n        elif i + 1 != j and s[i + 1] == s[j] and l:\n            (s[i], s[i + 1]) = (s[i + 1], s[i])\n            i += 1\n            j -= 1\n            k += 1\n            (l, r) = (0, 1)\n        else:\n            print('NO')\n            flag = 0\n            break\n    if flag:\n        print('YES')\n        print(k)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    (i, j) = (0, n - 1)\n    count = 0\n    flag = 0\n    (bl, br) = (0, 0)\n    s = list(s)\n    while i < n and j >= 0 and (i < j):\n        if s[i] != s[j]:\n            if i + 1 == j:\n                flag += 1\n                print('NO')\n                break\n            elif br == 0 and s[i] == s[j - 1]:\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                count += 1\n                (bl, br) = (0, 1)\n            elif bl == 0 and s[i + 1] == s[j]:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                count += 1\n                (bl, br) = (1, 0)\n            else:\n                flag += 1\n                print('NO')\n                break\n        else:\n            (bl, br) = (0, 0)\n        i += 1\n        j -= 1\n    if flag == 0:\n        print('YES')\n        print(count)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = input()\n    s = []\n    for i in range(n):\n        s.append(a[i])\n    k = (n - 1) // 2\n    f = 1\n    i = 0\n    j = n - 1\n    p = [0] * n\n    c = 0\n    while i <= k:\n        if s[i] != s[j]:\n            if i < k and p[i] == 0 and (s[i + 1] == s[j]):\n                t = s[i + 1]\n                s[i + 1] = s[i]\n                s[i] = t\n                p[i + 1] = 1\n                c += 1\n            elif i < k and p[j] == 0 and (s[j - 1] == s[i]):\n                t = s[j - 1]\n                s[j - 1] = s[j]\n                s[j] = t\n                p[j - 1] = 1\n                c += 1\n            else:\n                f = 0\n                break\n        i += 1\n        j -= 1\n    if f == 0:\n        print('NO')\n    else:\n        print('YES')\n        print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    s = []\n    for i in range(n):\n        s.append(a[i])\n    k = (n - 1) // 2\n    f = 1\n    i = 0\n    j = n - 1\n    p = [0] * n\n    c = 0\n    while i <= k:\n        if s[i] != s[j]:\n            if i < k and p[i] == 0 and (s[i + 1] == s[j]):\n                t = s[i + 1]\n                s[i + 1] = s[i]\n                s[i] = t\n                p[i + 1] = 1\n                c += 1\n            elif i < k and p[j] == 0 and (s[j - 1] == s[i]):\n                t = s[j - 1]\n                s[j - 1] = s[j]\n                s[j] = t\n                p[j - 1] = 1\n                c += 1\n            else:\n                f = 0\n                break\n        i += 1\n        j -= 1\n    if f == 0:\n        print('NO')\n    else:\n        print('YES')\n        print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    s = []\n    for i in range(n):\n        s.append(a[i])\n    k = (n - 1) // 2\n    f = 1\n    i = 0\n    j = n - 1\n    p = [0] * n\n    c = 0\n    while i <= k:\n        if s[i] != s[j]:\n            if i < k and p[i] == 0 and (s[i + 1] == s[j]):\n                t = s[i + 1]\n                s[i + 1] = s[i]\n                s[i] = t\n                p[i + 1] = 1\n                c += 1\n            elif i < k and p[j] == 0 and (s[j - 1] == s[i]):\n                t = s[j - 1]\n                s[j - 1] = s[j]\n                s[j] = t\n                p[j - 1] = 1\n                c += 1\n            else:\n                f = 0\n                break\n        i += 1\n        j -= 1\n    if f == 0:\n        print('NO')\n    else:\n        print('YES')\n        print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    (i, j) = (0, n - 1)\n    count = 0\n    flag = 0\n    (bl, br) = (0, 0)\n    s = list(s)\n    while i < n and j >= 0 and (i < j):\n        if s[i] != s[j]:\n            if i + 1 == j:\n                flag += 1\n                print('NO')\n                break\n            elif br == 0 and s[i] == s[j - 1]:\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                count += 1\n                (bl, br) = (0, 1)\n            elif bl == 0 and s[i + 1] == s[j]:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                count += 1\n                (bl, br) = (1, 0)\n            else:\n                flag += 1\n                print('NO')\n                break\n        else:\n            (bl, br) = (0, 0)\n        i += 1\n        j -= 1\n    if flag == 0:\n        print('YES')\n        print(count)", "def test():\n    n = int(input())\n    a = list(input())\n    hn = n // 2\n    c = 0\n    used = [False for i in range(n)]\n    for low in range(hn + 1):\n        high = n - 1 - low\n        if a[low] == a[high]:\n            used[low] = True\n            used[high] = True\n            continue\n        if low < hn and a[low + 1] == a[high] and (not used[low]) and (not used[low + 1]):\n            used[high] = True\n            used[low + 1] = True\n            used[low] = True\n            (a[low], a[low + 1]) = (a[low + 1], a[low])\n            c += 1\n            continue\n        if low < hn and a[low] == a[high - 1] and (not used[high - 1]) and (not used[high]):\n            used[low] = True\n            used[high - 1] = True\n            used[high] = True\n            (a[high], a[high - 1]) = (a[high - 1], a[high])\n            c += 1\n            continue\n        print('NO')\n        return\n    print('YES')\n    print(c)\nfor _ in range(int(input())):\n    test()", "def test():\n    n = int(input())\n    a = list(input())\n    hn = n // 2\n    c = 0\n    used = [False for i in range(n)]\n    for low in range(hn + 1):\n        high = n - 1 - low\n        if a[low] == a[high]:\n            used[low] = True\n            used[high] = True\n            low += 1\n            high -= 1\n            continue\n        if low < hn and a[low + 1] == a[high] and (not used[low]) and (not used[low + 1]):\n            used[high] = True\n            used[low + 1] = True\n            used[low] = True\n            (a[low], a[low + 1]) = (a[low + 1], a[low])\n            c += 1\n            continue\n        if low < hn and a[low] == a[high - 1] and (not used[high - 1]) and (not used[high]):\n            used[low] = True\n            used[high - 1] = True\n            used[high] = True\n            (a[high], a[high - 1]) = (a[high - 1], a[high])\n            c += 1\n            continue\n        print('NO')\n        return\n    print('YES')\n    print(c)\nfor _ in range(int(input())):\n    test()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    (i, j) = (0, n - 1)\n    count = 0\n    flag = 0\n    (bl, br) = (0, 0)\n    s = list(s)\n    while i < n and j >= 0 and (i < j):\n        if s[i] != s[j]:\n            if i + 1 == j:\n                flag += 1\n                print('NO')\n                break\n            elif br == 0 and s[i] == s[j - 1]:\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                count += 1\n                (bl, br) = (0, 1)\n            elif bl == 0 and s[i + 1] == s[j]:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                count += 1\n                (bl, br) = (1, 0)\n            else:\n                flag += 1\n                print('NO')\n                break\n        else:\n            (bl, br) = (0, 0)\n        i += 1\n        j -= 1\n    if flag == 0:\n        print('YES')\n        print(count)", "from math import ceil\nT = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    S = list(input())\n    move = [True for i in range(N)]\n    count = 0\n    for i in range(ceil(N / 2)):\n        if S[i] != S[N - i - 1]:\n            if move[i] and i + 1 != N - i - 1 and (S[i + 1] == S[N - i - 1]):\n                (S[i], S[i + 1]) = (S[i + 1], S[i])\n                move[i + 1] = False\n                count += 1\n            elif move[N - i - 1] and N - i - 2 != i and (S[i] == S[N - i - 2]):\n                (S[N - i - 1], S[N - i - 2]) = (S[N - i - 2], S[N - i - 1])\n                move[N - i - 2] = False\n                count += 1\n            else:\n                count = -1\n                break\n    if count == -1:\n        ans.append('NO')\n    else:\n        ans.append('YES')\n        ans.append(count)\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    (ans, flag) = (0, 0)\n    (a, b) = (0, n - 1)\n    (l, r) = (0, 0)\n    if n == 2:\n        if s[0] != s[1]:\n            print('NO')\n        else:\n            print('YES')\n            print(0)\n    else:\n        while a < b:\n            if s[a] == s[b]:\n                (l, r) = (0, 0)\n            elif a + 1 == b:\n                print('NO')\n                flag = 1\n                break\n            elif s[a + 1] == s[b] and l == 0:\n                temp = s[a]\n                s[a] = s[a + 1]\n                s[a + 1] = temp\n                (l, r) = (1, 0)\n                ans += 1\n            elif s[a] == s[b - 1] and r == 0:\n                temp = s[b]\n                s[b] = s[b - 1]\n                s[b - 1] = temp\n                (l, r) = (0, 1)\n                ans += 1\n            else:\n                print('NO')\n                flag = 1\n                break\n            a += 1\n            b -= 1\n        if flag == 0:\n            print('YES')\n            print(ans)", "import sys\nfrom collections import defaultdict\n\ndef fin():\n    return sys.stdin.readline().strip()\n\ndef fout(s, end='\\n'):\n    sys.stdout.write(str(s) + end)\ntest = int(input())\nfor _ in range(test):\n    n = int(input())\n    s = list(fin())\n    ans = i = 0\n    j = n - 1\n    left = right = False\n    while i < j:\n        if s[i] == s[j]:\n            left = right = False\n            pass\n        elif i + 1 < j:\n            if s[j - 1] == s[i] and (not right):\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                ans += 1\n                left = False\n                right = True\n            elif s[i + 1] == s[j] and (not left):\n                (s[i + 1], s[i]) = (s[i], s[i + 1])\n                ans += 1\n                left = True\n                right = False\n            elif i + 1 != j - 1 and s[i + 1] == s[j - 1] and (not right) and (not left):\n                (s[i + 1], s[i]) = (s[i], s[i + 1])\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                ans += 2\n                left = right = True\n            else:\n                ans = -1\n                break\n        else:\n            ans = -1\n            break\n        i += 1\n        j -= 1\n    if ans == -1:\n        print('NO')\n    else:\n        print('YES')\n        print(ans)", "import sys\nfrom collections import defaultdict\n\ndef fin():\n    return sys.stdin.readline().strip()\n\ndef fout(s, end='\\n'):\n    sys.stdout.write(str(s) + end)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = list(fin())\n    ans = i = 0\n    j = n - 1\n    left = right = False\n    while i < j:\n        if s[i] == s[j]:\n            left = right = False\n            pass\n        elif i + 1 < j:\n            if s[j - 1] == s[i] and (not right):\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                ans += 1\n                left = False\n                right = True\n            elif s[i + 1] == s[j] and (not left):\n                (s[i + 1], s[i]) = (s[i], s[i + 1])\n                ans += 1\n                left = True\n                right = False\n            elif i + 1 != j - 1 and s[i + 1] == s[j - 1] and (not right) and (not left):\n                (s[i + 1], s[i]) = (s[i], s[i + 1])\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                ans += 2\n                left = right = True\n            else:\n                ans = -1\n                break\n        else:\n            ans = -1\n            break\n        i += 1\n        j -= 1\n    if ans == -1:\n        print('NO')\n    else:\n        print('YES')\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    (l, r) = (0, n - 1)\n    rightSwap = 0\n    leftSwap = 0\n    ans = 0\n    flag = 1\n    while l < r:\n        if s[l] != s[r]:\n            if l + 1 == r:\n                flag = 0\n                print('NO')\n                break\n            elif s[l] == s[r - 1] and rightSwap == 0:\n                (s[r - 1], s[r]) = (s[r], s[r - 1])\n                rightSwap = 1\n                leftSwap = 0\n                ans += 1\n            elif s[l + 1] == s[r] and leftSwap == 0:\n                (s[l + 1], s[l]) = (s[l], s[l + 1])\n                leftSwap = 1\n                rightSwap = 0\n                ans += 1\n            else:\n                print('NO')\n                flag = 0\n                break\n        else:\n            leftSwap = 0\n            rightSwap = 0\n        l += 1\n        r -= 1\n    if flag:\n        print('YES')\n        print(ans)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    S = input()\n    L = list(S)\n    l = 0\n    r = N - 1\n    c = 0\n    i = 0\n    flag = 0\n    right_check = 0\n    left_check = 0\n    while l < r:\n        if L[l] != L[r]:\n            if l + 1 == r:\n                flag = 1\n                print('NO')\n                break\n            elif L[l] == L[r - 1] and right_check == 0:\n                (L[r - 1], L[r]) = (L[r], L[r - 1])\n                right_check = 1\n                left_check = 0\n                c += 1\n            elif L[l + 1] == L[r] and left_check == 0:\n                (L[l], L[l + 1]) = (L[l + 1], L[l])\n                left_check = 1\n                right_check = 0\n                c += 1\n            else:\n                print('NO')\n                flag = 1\n                break\n        else:\n            left_check = 0\n            right_check = 0\n        l += 1\n        r -= 1\n    if flag == 0:\n        print('YES')\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    (i, j, cnt, flag, bl, br) = (0, n - 1, 0, 0, 0, 0)\n    s = list(s)\n    while i < n and j >= 0 and (i < j):\n        if s[i] != s[j]:\n            if i + 1 == j:\n                flag += 1\n                print('NO')\n                break\n            elif br == 0 and s[i] == s[j - 1]:\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                cnt += 1\n                (bl, br) = (0, 1)\n            elif bl == 0 and s[i + 1] == s[j]:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                cnt += 1\n                (bl, br) = (1, 0)\n            else:\n                flag += 1\n                print('NO')\n                break\n        else:\n            (bl, br) = (0, 0)\n        i += 1\n        j -= 1\n    if flag == 0:\n        print('YES')\n        print(cnt)", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    op = 0\n    t = ceil(n / 2) - 1\n    swap = 2\n    m = n - 1\n    flag = 0\n    for i in range(t):\n        if s[i] != s[m - i]:\n            if s[i] == s[m - i - 1] and swap != 0:\n                temp = s[m - i]\n                s[m - i] = s[m - i - 1]\n                s[m - i - 1] = temp\n                swap = 0\n                op = op + 1\n            elif s[i + 1] == s[m - i] and swap != 1:\n                temp = s[i]\n                s[i] = s[i + 1]\n                s[i + 1] = temp\n                swap = 1\n                op = op + 1\n            else:\n                flag = 1\n                break\n        else:\n            swap = 2\n    if n % 2 == 0:\n        if s[int(n / 2)] != s[int(n / 2) - 1]:\n            flag = 1\n    if flag == 0:\n        print('YES')\n        print(op)\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    word = input()\n    word = list(word)\n    left = 0\n    right = n - 1\n    swapped = [False] * len(word)\n    flag = True\n    while left < right:\n        if word[left] != word[right]:\n            if left + 1 == right:\n                flag = False\n                break\n            if not swapped[left] and word[left + 1] == word[right]:\n                (word[left], word[left + 1]) = (word[left + 1], word[left])\n                swapped[left] = True\n                swapped[left + 1] = True\n            elif not swapped[right] and word[right - 1] == word[left]:\n                (word[right], word[right - 1]) = (word[right - 1], word[right])\n                swapped[right] = True\n                swapped[right - 1] = True\n            else:\n                flag = False\n                break\n        left += 1\n        right -= 1\n    if flag:\n        print('YES')\n        print(swapped.count(True) // 2)\n    else:\n        print('NO')", "def validate(l):\n    j = 0\n    k = n - 1\n    c = 0\n    li = [-1] * n\n    while j < k:\n        if l[j] != l[k]:\n            if li[j] != -1 and li[k] != -1:\n                return False\n            if li[j] != -1:\n                if l[k - 1] == l[j] and k - 1 != j:\n                    c += 1\n                    (l[k], l[k - 1]) = (l[k - 1], l[k])\n                    li[k] = 0\n                    li[k - 1] = 0\n                else:\n                    return False\n            elif li[k] != -1:\n                if l[k] == l[j + 1] and k != j + 1:\n                    c += 1\n                    (l[j], l[j + 1]) = (l[j + 1], l[j])\n                    li[j] = 0\n                    li[j + 1] = 0\n                else:\n                    return False\n            elif l[k - 1] == l[j] and k - 1 != j:\n                c += 1\n                (l[k], l[k - 1]) = (l[k - 1], l[k])\n                li[k] = 0\n                li[k - 1] = 0\n            elif l[k] == l[j + 1] and k != j + 1:\n                c += 1\n                (l[j], l[j + 1]) = (l[j + 1], l[j])\n                li[j] = 0\n                li[j + 1] = 0\n            else:\n                return False\n        j += 1\n        k -= 1\n    print('YES')\n    print(c)\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(input())\n    if not validate(l):\n        print('NO')", "for test in range(int(input())):\n    n = int(input())\n    s = 'abcd'\n    if n != 0:\n        s = input()\n    l = list(s)\n    (i, j) = (0, n - 1)\n    count = 0\n    for i in range(int(n / 2)):\n        if i == j or n < 3:\n            break\n        elif l[i] == l[j]:\n            j -= 1\n            continue\n        elif l[i] == l[j - 1]:\n            c = l[j]\n            l[j] = l[j - 1]\n            l[j - 1] = c\n            count += 1\n            if l[i + 1] != l[j - 1] and l[i + 2] != l[j - 1]:\n                break\n            j -= 1\n            continue\n        elif l[i + 1] == l[j]:\n            c = l[i]\n            l[i] = l[i + 1]\n            l[i + 1] = c\n            count += 1\n            if l[i + 1] != l[j - 1] and l[j - 2] != l[i + 1]:\n                break\n            j -= 1\n            continue\n    if l == l[-1::-1]:\n        print('YES')\n        print(count)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    if n == 1:\n        print('YES')\n        print(0)\n    elif n == 2:\n        if s[0] == s[1]:\n            print('YES')\n            print(0)\n        else:\n            print('NO')\n    else:\n        l = 0\n        r = n - 1\n        ans = 0\n        vis = [0] * n\n        while True:\n            if l + 1 == r:\n                if s[l] != s[r]:\n                    print('NO')\n                    break\n                else:\n                    print('YES')\n                    print(ans)\n                    break\n            elif l == r:\n                print('YES')\n                print(ans)\n                break\n            elif s[l] == s[r]:\n                l += 1\n                r -= 1\n            elif s[l] != s[r]:\n                if s[l + 1] == s[r] and vis[l + 1] == 0 and (vis[l] == 0):\n                    (s[l + 1], s[l]) = (s[l], s[l + 1])\n                    ans += 1\n                    vis[l + 1] = vis[l] = 1\n                    l += 1\n                    r -= 1\n                elif s[l] == s[r - 1] and vis[r] == 0 and (vis[r - 1] == 0):\n                    (s[r], s[r - 1]) = (s[r - 1], s[r])\n                    ans += 1\n                    vis[r] = vis[r - 1] = 1\n                    l += 1\n                    r -= 1\n                else:\n                    print('NO')\n                    break", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    li = list(input())\n    justSwapped = -1\n    yes = True\n    count = 0\n    for i in range(n // 2):\n        flag = 0\n        endi = n - 1 - i\n        if li[i] == li[endi]:\n            justSwapped = -1\n            continue\n        else:\n            if justSwapped != i:\n                if i + 1 <= (n - 1) // 2 and li[i + 1] == li[endi]:\n                    flag = 1\n                    temp = li[i]\n                    li[i] = li[i + 1]\n                    li[i + 1] = temp\n                    justSwapped = i + 1\n                    count += 1\n            if flag == 0 and justSwapped != endi:\n                if endi - 1 >= n // 2 and li[endi - 1] == li[i]:\n                    flag = 1\n                    temp = li[endi]\n                    li[endi] = li[endi - 1]\n                    li[endi - 1] = temp\n                    justSwapped = endi - 1\n                    count += 1\n            if flag == 0:\n                print('NO')\n                yes = False\n                break\n    if yes:\n        print('YES')\n        print(count)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    if n == 1:\n        print('YES')\n        print(0)\n    elif n == 2:\n        if s[0] == s[1]:\n            print('YES')\n            print(0)\n        else:\n            print('NO')\n    else:\n        l = 0\n        r = n - 1\n        ans = 0\n        vis = [0] * n\n        while True:\n            if l + 1 == r:\n                if s[l] != s[r]:\n                    print('NO')\n                    break\n                else:\n                    print('YES')\n                    print(ans)\n                    break\n            elif l == r:\n                print('YES')\n                print(ans)\n                break\n            elif s[l] == s[r]:\n                l += 1\n                r -= 1\n            elif s[l] != s[r]:\n                if s[l + 1] == s[r] and vis[l + 1] == 0 and (vis[l] == 0):\n                    (s[l + 1], s[l]) = (s[l], s[l + 1])\n                    ans += 1\n                    vis[l + 1] = vis[l] = 1\n                    l += 1\n                    r -= 1\n                elif s[l] == s[r - 1] and vis[r] == 0 and (vis[r - 1] == 0):\n                    (s[r], s[r - 1]) = (s[r - 1], s[r])\n                    ans += 1\n                    vis[r] = vis[r - 1] = 1\n                    l += 1\n                    r -= 1\n                else:\n                    print('NO')\n                    break", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    sl = list(s)\n    i = 0\n    j = len(s) - 1\n    swapi = 0\n    swapj = 0\n    flag = 0\n    count = 0\n    enter = 0\n    while i < j:\n        if sl[i] == sl[j]:\n            i += 1\n            j -= 1\n            swapi = 0\n            swapj = 0\n            continue\n        elif i + 1 == j and sl[i] != sl[j]:\n            flag = 1\n            break\n        elif sl[i] == sl[j - 1] and swapj != 1:\n            (sl[j], sl[j - 1]) = (sl[j - 1], sl[j])\n            i += 1\n            j -= 1\n            swapj = 1\n            swapi = 0\n        elif sl[i + 1] == sl[j] and swapi != 1:\n            (sl[i], sl[i + 1]) = (sl[i + 1], sl[i])\n            i += 1\n            j -= 1\n            swapi = 1\n            swapj = 0\n        else:\n            flag = 1\n            break\n        count += 1\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(count)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    sl = list(s)\n    i = 0\n    j = len(s) - 1\n    swapi = 0\n    swapj = 0\n    flag = 0\n    count = 0\n    enter = 0\n    while i < j:\n        if sl[i] == sl[j]:\n            i += 1\n            j -= 1\n            swapi = 0\n            swapj = 0\n            continue\n        elif i + 1 == j and sl[i] != sl[j]:\n            flag = 1\n            break\n        elif sl[i] == sl[j - 1] and swapj != 1:\n            (sl[j], sl[j - 1]) = (sl[j - 1], sl[j])\n            i += 1\n            j -= 1\n            swapj = 1\n            swapi = 0\n        elif sl[i + 1] == sl[j] and swapi != 1:\n            (sl[i], sl[i + 1]) = (sl[i + 1], sl[i])\n            i += 1\n            j -= 1\n            swapi = 1\n            swapj = 0\n        else:\n            flag = 1\n            break\n        count += 1\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(count)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    sl = list(s)\n    i = 0\n    j = len(s) - 1\n    swapi = 0\n    swapj = 0\n    flag = 0\n    count = 0\n    enter = 0\n    while i < j:\n        if sl[i] == sl[j]:\n            i += 1\n            j -= 1\n            swapi = 0\n            swapj = 0\n            continue\n        elif i + 1 == j:\n            flag = 1\n            break\n        elif sl[i] == sl[j - 1] and swapj != 1:\n            (sl[j], sl[j - 1]) = (sl[j - 1], sl[j])\n            i += 1\n            j -= 1\n            swapj = 1\n            swapi = 0\n        elif sl[i + 1] == sl[j] and swapi != 1:\n            (sl[i], sl[i + 1]) = (sl[i + 1], sl[i])\n            i += 1\n            j -= 1\n            swapi = 1\n            swapj = 0\n        else:\n            flag = 1\n            break\n        count += 1\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(count)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    sl = list(s)\n    i = 0\n    j = len(s) - 1\n    swapi = 0\n    swapj = 0\n    flag = 0\n    count = 0\n    while i < j:\n        if sl[i] == sl[j]:\n            i += 1\n            j -= 1\n            swapi = 0\n            swapj = 0\n            continue\n        elif i + 1 == j:\n            flag = 1\n            break\n        elif sl[i] == sl[j - 1] and swapj != 1:\n            (sl[j], sl[j - 1]) = (sl[j - 1], sl[j])\n            i += 1\n            j -= 1\n            swapj = 1\n            swapi = 0\n            count += 1\n        elif sl[i + 1] == sl[j] and swapi != 1:\n            (sl[i], sl[i + 1]) = (sl[i + 1], sl[i])\n            i += 1\n            j -= 1\n            swapi = 1\n            swapj = 0\n            count += 1\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(count)\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    r = n - 1\n    str_list = list(s)\n    l = 0\n    cnt = 0\n    flag = 1\n    (sl, sr) = (1, 1)\n    while l < r:\n        isSwapped = 1\n        flag2 = 1\n        if str_list[l] != str_list[r]:\n            isSwapped = 0\n            if l + 1 == r:\n                flag = 0\n                break\n            if str_list[l + 1] == str_list[r] and sl:\n                (str_list[l], str_list[l + 1]) = (str_list[l + 1], str_list[l])\n                isSwapped = 1\n                flag2 = 0\n                sl = 0\n                sr = 1\n                cnt += 1\n            elif str_list[r - 1] == str_list[l] and sr:\n                (str_list[r - 1], str_list[r]) = (str_list[r], str_list[r - 1])\n                isSwapped = 1\n                flag2 = 0\n                sr = 0\n                sl = 1\n                cnt += 1\n        if isSwapped == 0:\n            flag = 0\n            break\n        if flag2:\n            (sl, sr) = (1, 1)\n        l += 1\n        r -= 1\n    if flag:\n        print('YES', cnt, sep='\\n')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    s = list(s)\n    done = set()\n    i = 0\n    j = n - 1\n    ans = 0\n    while i < j:\n        if s[i] != s[j]:\n            if s[i] == s[j - 1] and (j not in done and j - 1 not in done):\n                ans += 1\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                done.add(j)\n                done.add(j - 1)\n            elif s[j] == s[i + 1] and (i not in done and i + 1 not in done):\n                ans += 1\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                done.add(i)\n                done.add(i + 1)\n        i += 1\n        j -= 1\n    (i, j) = (0, n - 1)\n    check = False\n    while i < j:\n        if s[i] != s[j]:\n            check = True\n            print('NO')\n            break\n        i += 1\n        j -= 1\n    if not check:\n        print('YES')\n        print(ans)\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    s = list(input())\n    dp = [0] * n\n    count = 0\n    f = True\n    if len(s) == 2:\n        if s[0] != s[1]:\n            f = False\n    for i in range(n - 1):\n        if s[i] == s[n - i - 1]:\n            continue\n        elif s[i + 1] == s[n - i - 1] and dp[i] == 0 and (dp[i + 1] == 0):\n            (s[i], s[i + 1]) = (s[i + 1], s[i])\n            dp[i] = dp[i + 1] = 1\n            count += 1\n        elif s[i] == s[n - i - 2] and dp[n - i - 1] == 0 and (dp[n - i - 2] == 0):\n            (s[n - i - 1], s[n - i - 2]) = (s[n - i - 2], s[n - i - 1])\n            dp[n - i - 1] = dp[n - i - 2] = 1\n            count += 1\n        else:\n            f = False\n            break\n    if f:\n        print('YES')\n        print(count)\n    else:\n        print('NO')", "def validate(l):\n    j = 0\n    k = n - 1\n    c = 0\n    li = [-1] * n\n    while j < k:\n        if l[j] != l[k]:\n            if li[j] != -1 and li[k] != -1:\n                return False\n            if li[j] != -1:\n                if l[k - 1] == l[j] and k - 1 != j:\n                    c = c + 1\n                    (l[k], l[k - 1]) = (l[k - 1], l[k])\n                    li[k] = 0\n                    li[k - 1] = 0\n                else:\n                    return False\n            elif li[k] != -1:\n                if l[k] == l[j + 1] and k != j + 1:\n                    c = c + 1\n                    (l[j], l[j + 1]) = (l[j + 1], l[j])\n                    li[j] = 0\n                    li[j + 1] = 0\n                else:\n                    return False\n            elif l[k - 1] == l[j] and k - 1 != j:\n                c = c + 1\n                (l[k], l[k - 1]) = (l[k - 1], l[k])\n                li[k] = 0\n                li[k - 1] = 0\n            elif l[k] == l[j + 1] and k != j + 1:\n                c = c + 1\n                (l[j], l[j + 1]) = (l[j + 1], l[j])\n                li[j] = 0\n                li[j + 1] = 0\n            else:\n                return False\n        j = j + 1\n        k = k - 1\n    print('YES')\n    print(c)\n    return True\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(input())\n    if not validate(l):\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    s = list(input())\n    i = 0\n    j = n - 1\n    f = 1\n    l = [1 for i in range(n)]\n    res = 0\n    while i < j:\n        if s[i] == s[j]:\n            i += 1\n            j -= 1\n        elif i == j - 1:\n            res = -1\n            break\n        elif l[j] and l[j - 1] and (s[i] == s[j - 1]):\n            (s[j], s[j - 1]) = (s[j - 1], s[j])\n            l[j] = 0\n            l[j - 1] = 0\n            res += 1\n        elif l[i] and l[i + 1] and (s[j] == s[i + 1]):\n            (s[i], s[i + 1]) = (s[i + 1], s[i])\n            l[i] = 0\n            l[i + 1] = 0\n            res += 1\n        else:\n            res = -1\n            break\n    if res == -1:\n        print('NO')\n    else:\n        print('YES')\n        print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    (i, j) = (0, n - 1)\n    count = 0\n    flag = 0\n    (bl, br) = (0, 0)\n    s = list(s)\n    while i < n and j >= 0 and (i < j):\n        if s[i] != s[j]:\n            if i + 1 == j:\n                flag += 1\n                print('NO')\n                break\n            elif br == 0 and s[i] == s[j - 1]:\n                (s[j - 1], s[j]) = (s[j], s[j - 1])\n                count += 1\n                (bl, br) = (0, 1)\n            elif bl == 0 and s[i + 1] == s[j]:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                count += 1\n                (bl, br) = (1, 0)\n            else:\n                flag += 1\n                print('NO')\n                break\n        else:\n            (bl, br) = (0, 0)\n        i += 1\n        j -= 1\n    if flag == 0:\n        print('YES')\n        print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(input())\n    length = n\n    i = 0\n    j = n - 1\n    ans = True\n    steps = 0\n    front = False\n    back = False\n    while i < j:\n        if s[i] == s[j]:\n            i += 1\n            j -= 1\n            front = False\n            back = False\n        elif i + 1 < j and s[i + 1] == s[j] and (not front):\n            s[i + 1] = s[i]\n            steps += 1\n            i += 1\n            j -= 1\n            front = True\n            back = False\n        elif i < j - 1 and s[i] == s[j - 1] and (not back):\n            s[j - 1] = s[j]\n            steps += 1\n            i += 1\n            j -= 1\n            front = False\n            back = True\n        else:\n            ans = False\n            break\n    if ans:\n        print('YES')\n        print(steps)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, ans1, ans) = (int(input()), 0, 0)\n    s1 = str(input())\n    s = [i for i in s1]\n    (i, st, ed) = (0, True, True)\n    while i < n // 2:\n        if s[i] == s[n - i - 1]:\n            st = True\n            ed = True\n        elif n - i - 2 != i and s[i] == s[n - i - 2] and ed:\n            (s[n - 1 - i], s[n - i - 2]) = (s[n - i - 2], s[n - 1 - i])\n            ans += 1\n            st = True\n            ed = False\n        elif i + 1 != n - i - 1 and s[i + 1] == s[n - i - 1] and st:\n            (s[i + 1], s[i]) = (s[i], s[i + 1])\n            ans += 1\n            st = False\n            ed = True\n        i += 1\n    if s == s[::-1]:\n        print('YES')\n        print(ans)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, ans1, ans) = (int(input()), 0, 0)\n    s1 = str(input())\n    s = [i for i in s1]\n    (i, st, ed) = (0, True, True)\n    while i < n // 2:\n        if s[i] == s[n - i - 1]:\n            st = True\n            ed = True\n        elif n - i - 2 != i and s[i] == s[n - i - 2] and ed:\n            (s[n - 1 - i], s[n - i - 2]) = (s[n - i - 2], s[n - 1 - i])\n            ans += 1\n            st = True\n            ed = False\n        elif i + 1 != n - i - 1 and s[i + 1] == s[n - i - 1] and st:\n            (s[i + 1], s[i]) = (s[i], s[i + 1])\n            ans += 1\n            st = False\n            ed = True\n        i += 1\n    if s == s[::-1]:\n        print('YES')\n        print(ans)\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [x for x in input()]\n    temp = 0\n    ans = 0\n    for i in range(n // 2):\n        if arr[i] == arr[n - 1 - i]:\n            temp = 0\n        elif arr[i + 1] == arr[n - 1 - i] and temp != -1 and (i + 1 != n - 1 - i):\n            ans += 1\n            (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n            temp = -1\n        elif arr[i] == arr[n - 2 - i] and temp != 1 and (i != n - 2 - i):\n            ans += 1\n            (arr[n - 1 - i], arr[n - 2 - i]) = (arr[n - 2 - i], arr[n - 1 - i])\n            temp = 1\n        else:\n            ans = -1\n            break\n    if ans == -1:\n        print('NO')\n    else:\n        print('YES')\n        print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(input())\n    l1 = [0] * n\n    c = 0\n    e = 0\n    for i in range(n // 2):\n        if l[i] != l[n - i - 1]:\n            if l[i + 1] == l[n - i - 1] and l1[i] == 0 and (i + 1 != n - i - 1):\n                c += 1\n                (l[i + 1], l[i]) = (l[i], l[n - i - 1])\n                l1[i + 1] = 1\n                l1[i] = 1\n            elif l[n - i - 2] == l[i] and l1[n - i - 1] == 0 and (i != n - i - 2):\n                c += 1\n                (l[n - i - 1], l[n - i - 2]) = (l[n - i - 2], l[n - i - 1])\n                l1[n - i - 1] = 1\n                l1[n - i - 2] = 1\n            else:\n                e = 1\n                print('NO')\n                break\n    if e == 0:\n        print('YES')\n        print(c)", "for _ in range(0, int(input())):\n    n = int(input())\n    a = list(input())\n    start = 0\n    end = n - 1\n    ans = 0\n    swapped = [0] * n\n    flag = False\n    while start < end:\n        if a[start] == a[end]:\n            start += 1\n            end -= 1\n            continue\n        elif start == end - 1:\n            if a[start] == a[end]:\n                start += 1\n                end -= 1\n                continue\n            else:\n                flag = True\n                break\n        elif swapped[end - 1] == 0 and swapped[end] == 0 and (a[start] == a[end - 1]):\n            (a[end], a[end - 1]) = (a[end - 1], a[end])\n            swapped[end] = 1\n            swapped[end - 1] = 1\n            ans += 1\n            start += 1\n            end -= 1\n            continue\n        elif swapped[start] == 0 and swapped[start + 1] == 0 and (a[start + 1] == a[end]):\n            (a[start], a[start + 1]) = (a[start + 1], a[start])\n            swapped[start] = 1\n            swapped[start + 1] = 1\n            ans += 1\n            start += 1\n            end -= 1\n            continue\n        else:\n            flag = True\n            break\n    if flag == True:\n        print('NO')\n    else:\n        print('YES')\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = input()\n    data = list(arr)\n    status = False\n    test = [0] * n\n    min_operations = 0\n    for i in range(n):\n        j = n - 1 - i\n        if i >= j:\n            break\n        elif data[i] != data[j]:\n            if i + 1 != j and (data[i + 1] == data[j] and (test[i] != 1 and test[i + 1] != 1)):\n                (data[i], data[i + 1]) = (data[i + 1], data[i])\n                test[i] = 1\n                test[i + 1] = 1\n                test[j] = 1\n                min_operations += 1\n            elif j - 1 != i and (data[j - 1] == data[i] and (test[j] != 1 and test[j - 1] != 1)):\n                (data[j], data[j - 1]) = (data[j - 1], data[j])\n                test[j] = 1\n                test[j - 1] = 1\n                test[i] = 1\n                min_operations += 1\n            else:\n                status = True\n        if status == True:\n            break\n    if status == False:\n        print('YES')\n        print(min_operations)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = input()\n    data = list(arr)\n    status = False\n    test = [0] * n\n    bl = br = 0\n    min_operations = 0\n    for i in range(n):\n        j = n - 1 - i\n        if i >= j:\n            break\n        if data[i] == data[j]:\n            bl = br = 0\n            continue\n        if i + 1 != j and (bl == 0 and data[i + 1] == data[j]):\n            (data[i], data[i + 1]) = (data[i + 1], data[i])\n            bl = 1\n            br = 0\n            min_operations += 1\n        elif j - 1 != i and (br == 0 and data[j - 1] == data[i]):\n            (data[j], data[j - 1]) = (data[j - 1], data[j])\n            br = 1\n            bl = 0\n            min_operations += 1\n        else:\n            status = True\n    if status == False:\n        print('YES')\n        print(min_operations)\n    else:\n        print('NO')", "def swap(s, i, j):\n    temp = s[i]\n    s[i] = s[j]\n    s[j] = temp\n    return s\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    s = list(str(input()))\n    left = 0\n    n = len(s)\n    right = n - 1\n    impossible = 0\n    count = 0\n    rTurn = False\n    lTurn = False\n    while True:\n        if right - left + 1 == 3:\n            if s[right] == s[left]:\n                break\n            else:\n                if s[right] == s[right - 1]:\n                    if lTurn:\n                        impossible = 1\n                        break\n                    else:\n                        count = count + 1\n                        break\n                if s[left] == s[left + 1]:\n                    if rTurn:\n                        impossible = 1\n                        break\n                    else:\n                        count = count + 1\n                        break\n                impossible = 1\n                break\n        if right - left + 1 == 2:\n            if s[right] == s[left]:\n                break\n            else:\n                impossible = 1\n                break\n        if right - left + 1 <= 1:\n            break\n        left1 = s[left]\n        left2 = s[left + 1]\n        right1 = s[right]\n        right2 = s[right - 1]\n        if left1 == right1:\n            lTurn = False\n            rTurn = False\n            left = left + 1\n            right = right - 1\n            continue\n        if left1 != right1:\n            if left1 == right2 and left2 == right1:\n                rTurn = False\n                lTurn = False\n                count = count + 1\n                left = left + 2\n                right = right - 2\n                continue\n            if left1 == right2:\n                if rTurn:\n                    impossible = 1\n                    break\n                s = swap(s, right, right - 1)\n                rTurn = True\n                lTurn = False\n                count = count + 1\n                left = left + 1\n                right = right - 1\n                continue\n            if left2 == right1:\n                if lTurn:\n                    impossible = 1\n                    break\n                lTurn = True\n                rTurn = False\n                s = swap(s, left, left + 1)\n                count = count + 1\n                left = left + 1\n                right = right - 1\n                continue\n            else:\n                impossible = 1\n                break\n    if impossible == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(count)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    i = 0\n    swap = 0\n    swaps = [True] * n\n    while i < n // 2:\n        if s[i] != s[n - i - 1]:\n            if s[i] == s[n - i - 2] and swaps[n - i - 2] and swaps[n - i - 1] and (i != n - i - 2):\n                (s[n - i - 2], s[n - i - 1]) = (s[n - i - 1], s[n - i - 2])\n                swaps[n - i - 2] = False\n                swaps[n - i - 1] = False\n                swaps[i] = False\n                swap += 1\n            elif s[i + 1] == s[n - i - 1] and swaps[i] and swaps[i + 1] and (i + 1 != n - i - 1):\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                swaps[i] = False\n                swaps[i + 1] = False\n                swaps[n - i - 1] = False\n                swap += 1\n            else:\n                print('NO')\n                break\n        else:\n            swaps[i] = False\n            swaps[n - i - 1] = False\n        i += 1\n    else:\n        print('YES')\n        print(swap)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    s = list(s)\n    (l, r, ans) = (0, n - 1, 0)\n    (a, z) = (0, 0)\n    while l < r:\n        if s[l] == s[r]:\n            (a, z) = (0, 0)\n            l += 1\n            r -= 1\n            continue\n        if l + 1 == r:\n            break\n        if s[l + 1] == s[r] and a == 0:\n            (a, z) = (1, 0)\n            (s[l], s[l + 1]) = (s[l + 1], s[l])\n            ans += 1\n            l += 1\n            r -= 1\n        elif s[l] == s[r - 1] and z == 0:\n            (a, z) = (0, 1)\n            (s[r], s[r - 1]) = (s[r - 1], s[r])\n            ans += 1\n            l += 1\n            r -= 1\n        else:\n            break\n    if s == s[::-1]:\n        print('YES')\n        print(ans)\n    else:\n        print('NO')", "t = int(input())\nfor w in range(t):\n    n = int(input())\n    s = input()\n    s = list(s)\n    right = len(s) - 1\n    f = 1\n    ans = 0\n    left = 0\n    swap_done = {}\n    while left < len(s) // 2:\n        if s[left] == s[right]:\n            right -= 0\n        elif s[left] == s[right - 1] and left != right - 1 and (right not in swap_done) and (right - 1 not in swap_done):\n            swap_done[right] = 1\n            swap_done[right - 1] = 1\n            (s[right], s[right - 1]) = (s[right - 1], s[right])\n            ans += 1\n        elif s[left + 1] == s[right] and left + 1 != right and (left + 1 not in swap_done) and (left not in swap_done):\n            swap_done[left] = 1\n            swap_done[left + 1] = 1\n            (s[left], s[left + 1]) = (s[left + 1], s[left])\n            ans += 1\n        else:\n            f = 0\n            break\n        left += 1\n        right -= 1\n    if f == 1:\n        print('YES')\n        print(ans)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    vis = [False] * n\n    fl = True\n    c = 0\n    for j in range(n // 2 + 1):\n        if s[j] == s[n - j - 1]:\n            continue\n        elif s[j] == s[n - j - 2] and vis[n - j - 1] == False and (vis[n - j - 2] == False) and (j != n - j - 2):\n            tm = s[n - j - 1]\n            s[n - j - 1] = s[n - j - 2]\n            s[n - j - 2] = tm\n            vis[n - j - 1] = vis[n - j - 2] = True\n            c += 1\n        elif s[j + 1] == s[n - j - 1] and vis[j + 1] == False and (vis[j] == False) and (j + 1 != n - j - 1):\n            tm = s[j + 1]\n            s[j + 1] = s[j]\n            s[j] = tm\n            vis[j + 1] = vis[j] = True\n            c += 1\n        else:\n            fl = False\n            break\n    if fl == True:\n        print('YES')\n        print(c)\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    string = input()\n    string = list(string)\n    br = False\n    bl = False\n    r = n - 1\n    l = 0\n    count = 0\n    flag = True\n    while r >= 0 and l < n:\n        if string[l] == string[r]:\n            l += 1\n            r -= 1\n            (br, bl) = (False, False)\n            continue\n        if l + 1 == r:\n            print('NO')\n            flag = False\n            break\n        if bl == False and string[l + 1] == string[r]:\n            (string[l], string[l + 1]) = (string[l + 1], string[l])\n            bl = True\n            br = False\n            count += 1\n        elif br == False and string[l] == string[r - 1]:\n            (string[r], string[r - 1]) = (string[r - 1], string[r])\n            br = True\n            bl = False\n            count += 1\n        else:\n            print('NO')\n            flag = False\n            break\n        l += 1\n        r -= 1\n    if flag:\n        print('YES')\n        print(count)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(input())\n    v = [0 for i in range(n)]\n    f = True\n    c = 0\n    for j in range(n // 2 + 1):\n        if s[j] == s[n - 1 - j]:\n            continue\n        elif s[j] == s[n - 2 - j] and v[n - 2 - j] == 0 and (v[n - 1 - j] == 0) and (j != n - 2 - j):\n            t = s[n - 2 - j]\n            s[n - 2 - j] = s[n - 1 - j]\n            s[n - 1 - j] = t\n            v[n - 1 - j] = v[n - 2 - j] = 1\n            c += 1\n        elif s[n - j - 1] == s[j + 1] and v[j] == 0 and (v[j + 1] == 0) and (j + 1 != n - 1 - j):\n            t = s[j]\n            s[j] = s[j + 1]\n            s[j + 1] = t\n            v[j] = v[j + 1] = 1\n            c += 1\n        else:\n            f = False\n    if f == True:\n        print('YES')\n        print(c)\n    else:\n        print('NO')", "def swap(s, i, j):\n    return ''.join((s[:i], s[j], s[i + 1:j], s[i], s[j + 1:]))\nfor _ in range(int(input())):\n    n = int(input())\n    strg = list(input())\n    visited = [0 for i in range(n)]\n    left = 0\n    right = n - 1\n    count = 0\n    while left < right:\n        if strg[left] == strg[right]:\n            left += 1\n            right -= 1\n            continue\n        elif strg[left] != strg[right]:\n            if strg[left] == strg[right - 1] and visited[right] == 0:\n                (strg[right], strg[right - 1]) = (strg[right - 1], strg[right])\n                count += 1\n                visited[right - 1] = 1\n                visited[right] = 1\n            elif strg[left + 1] == strg[right] and visited[left] == 0:\n                (strg[left + 1], strg[left]) = (strg[left], strg[left + 1])\n                count += 1\n                visited[left + 1] = 1\n                visited[left] = 1\n            else:\n                break\n            left += 1\n            right -= 1\n    if strg == strg[::-1]:\n        print('YES')\n        print(count)\n    else:\n        print('NO')", "def swap(s, i, j):\n    return ''.join((s[:i], s[j], s[i + 1:j], s[i], s[j + 1:]))\nfor _ in range(int(input())):\n    n = int(input())\n    strg = list(input())\n    fgl = [0 for i in range(n)]\n    left = 0\n    right = n - 1\n    count = 0\n    fg = 0\n    while left < right:\n        if strg[left] == strg[right]:\n            left += 1\n            right -= 1\n            continue\n        elif strg[left] != strg[right]:\n            if strg[left] == strg[right - 1] and fgl[right] == 0:\n                (strg[right], strg[right - 1]) = (strg[right - 1], strg[right])\n                count += 1\n                fgl[right - 1] = 1\n                fgl[right] = 1\n            elif strg[left + 1] == strg[right] and fgl[left] == 0:\n                (strg[left + 1], strg[left]) = (strg[left], strg[left + 1])\n                count += 1\n                fgl[left + 1] = 1\n                fgl[left] = 1\n            else:\n                fg = 1\n                break\n            left += 1\n            right -= 1\n    if fg == 1:\n        print('NO')\n    elif strg == strg[::-1]:\n        print('YES')\n        print(count)\n    else:\n        print('NO')", "def swap(s, i, j):\n    return ''.join((s[:i], s[j], s[i + 1:j], s[i], s[j + 1:]))\nfor _ in range(int(input())):\n    n = int(input())\n    strg = list(input())\n    fgl = [0 for i in range(n)]\n    left = 0\n    right = n - 1\n    count = 0\n    fg = 0\n    while left < right:\n        if strg[left] == strg[right]:\n            left += 1\n            right -= 1\n            continue\n        elif strg[left] != strg[right]:\n            if strg[left] == strg[right - 1] and fgl[right] == 0:\n                (strg[right], strg[right - 1]) = (strg[right - 1], strg[right])\n                count += 1\n                fgl[right - 1] = 1\n            elif strg[left + 1] == strg[right] and fgl[left] == 0:\n                (strg[left + 1], strg[left]) = (strg[left], strg[left + 1])\n                count += 1\n                fgl[left + 1] = 1\n            else:\n                fg = 1\n                break\n            left += 1\n            right -= 1\n    if fg == 1:\n        print('NO')\n    elif strg == strg[::-1]:\n        print('YES')\n        print(count)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    (i, j) = (0, n - 1)\n    answer = 0\n    occured = set()\n    result = True\n    while i < j:\n        if s[i] == s[j]:\n            i += 1\n            j -= 1\n            continue\n        if i + 1 == j:\n            result = False\n            break\n        if s[i] == s[j - 1] and j not in occured and (j - 1 not in occured):\n            (s[j], s[j - 1]) = (s[j - 1], s[j])\n            answer += 1\n            occured.add(j)\n            occured.add(j - 1)\n            i += 1\n            j -= 1\n            continue\n        if s[i + 1] == s[j] and i not in occured and (i + 1 not in occured):\n            (s[i], s[i + 1]) = (s[i + 1], s[i])\n            occured.add(i)\n            occured.add(i + 1)\n            i += 1\n            j -= 1\n            answer += 1\n            continue\n        result = False\n        break\n    if result:\n        print('YES')\n        print(answer)\n        continue\n    print('NO')", "t = int(input())\n\ndef swap(x, y):\n    return (y, x)\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = list(input())\n    a = [0] * n\n    ans = 0\n    f = 0\n    for (i, j) in zip(range(0, n), range(n - 1, -1, -1)):\n        if i > j:\n            break\n        if s[i] == s[j]:\n            a[i] = a[j] = 1\n            continue\n        sw = False\n        if i < n - 1 and s[i + 1] == s[j] and (a[i] != 1):\n            if j > 0 and s[i] == s[j - 1] and (not a[j - 1]) or (j > 1 and s[i] == s[j - 2] and (not a[j - 2])):\n                sw = True\n                ans += 1\n                (s[i], s[i + 1]) = swap(s[i], s[i + 1])\n                a[i] = 1\n                a[i + 1] = 1\n        if not sw and j > 0 and (s[j - 1] == s[i]) and (not a[j - 1]):\n            if i < n and s[j] == s[i + 1] and (not a[i + 1]) or (i < n - 1 and s[j] == s[i + 2] and (not a[i + 2])):\n                ans += 1\n                sw = True\n                (s[j], s[j - 1]) = swap(s[j], s[j - 1])\n                a[j] = 1\n                a[j - 1] = 1\n    for i in range(0, n):\n        if s[i] != s[n - i - 1]:\n            f = 1\n            break\n    if f:\n        print('NO')\n    else:\n        print('YES')\n        print(ans)", "t = int(input())\n\ndef swap(x, y):\n    return (y, x)\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = list(input())\n    a = [0] * n\n    ans = 0\n    f = 0\n    for (i, j) in zip(range(0, n), range(n - 1, -1, -1)):\n        if i > j:\n            break\n        if s[i] == s[j]:\n            a[i] = a[j] = 1\n            continue\n        sw = False\n        if i < n - 1 and s[i + 1] == s[j] and (a[i] != 1):\n            if j > 0 and s[i] == s[j - 1] and (not a[j - 1]) or (j > 1 and s[i] == s[j - 2] and (not a[j - 2])):\n                sw = True\n                ans += 1\n                (s[i], s[i + 1]) = swap(s[i], s[i + 1])\n                a[i] = 1\n                a[i + 1] = 1\n        if not sw and j > 0 and (s[j - 1] == s[i]) and (not a[j - 1]):\n            if i < n and s[j] == s[i + 1] and (not a[i + 1]) or (i < n - 1 and s[j] == s[i + 2] and (not a[i + 2])):\n                ans += 1\n                sw = True\n                (s[j], s[j - 1]) = swap(s[j], s[j - 1])\n                a[j] = 1\n                a[j - 1] = 1\n    for i in range(0, n):\n        if s[i] != s[n - i - 1]:\n            f = 1\n            break\n    if f:\n        print('NO')\n    else:\n        print('YES')\n        print(ans)", "t = int(input())\nfor t1 in range(0, t):\n    n = int(input())\n    s = input()\n    d = {}\n    countodd = 0\n    oddval = ''\n    check = 1\n    c = 0\n    change = -1\n    s = list(s)\n    l = [1 for i in range(n)]\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d.keys():\n        if d[i] % 2 == 1:\n            countodd += 1\n            oddval = i\n    if n % 2 == 1:\n        if countodd > 1:\n            check = -1\n    if n % 2 == 0:\n        if countodd > 0:\n            check = -1\n    if check == -1:\n        print('NO')\n    else:\n        ok = 1\n        for i in range(0, n // 2 + 1):\n            if s[i] == s[n - 1 - i]:\n                ok = 1\n            elif s[i] == s[n - i - 2] and l[n - i - 2] == 1 and (l[n - i - 1] == 1):\n                (s[n - i - 1], s[n - i - 2]) = (s[n - i - 2], s[n - i - 1])\n                c = c + 1\n                l[n - i - 2] = l[n - i - 1] = 0\n            elif s[i + 1] == s[n - i - 1] and l[i] == 1 and (l[i + 1] == 1):\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                c = c + 1\n                l[i] = l[i + 1] = 0\n            else:\n                check = -1\n        if check == -1:\n            print('NO')\n        else:\n            print('YES')\n            print(c)", "t = int(input())\nfor t1 in range(0, t):\n    n = int(input())\n    s = input()\n    d = {}\n    countodd = 0\n    oddval = ''\n    check = 1\n    c = 0\n    change = -1\n    s = list(s)\n    l = [1 for i in range(n)]\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d.keys():\n        if d[i] % 2 == 1:\n            countodd += 1\n            oddval = i\n    if n % 2 == 1:\n        if countodd > 1:\n            check = -1\n    if n % 2 == 0:\n        if countodd > 0:\n            check = -1\n    if check == -1:\n        print('NO')\n    else:\n        ok = 1\n        for i in range(0, n - 1):\n            if s[i] == s[n - 1 - i]:\n                ok = 1\n            elif s[i] == s[n - i - 2] and l[n - i - 2] == 1 and (l[n - i - 1] == 1):\n                (s[n - i - 1], s[n - i - 2]) = (s[n - i - 2], s[n - i - 1])\n                c = c + 1\n                l[n - i - 2] = l[n - i - 1] = 0\n            elif s[i + 1] == s[n - i - 1] and l[i] == 1 and (l[i + 1] == 1):\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                c = c + 1\n                l[i] = l[i + 1] = 0\n            else:\n                check = -1\n        if check == -1:\n            print('NO')\n        else:\n            print('YES')\n            print(c)", "t = int(input())\nfor t1 in range(0, t):\n    n = int(input())\n    s = input()\n    d = {}\n    countodd = 0\n    oddval = ''\n    check = 1\n    c = 0\n    change = -1\n    s = list(s)\n    l = [1 for i in range(n)]\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d.keys():\n        if d[i] % 2 == 1:\n            countodd += 1\n            oddval = i\n    if n % 2 == 1:\n        if countodd > 1:\n            check = -1\n    if n % 2 == 0:\n        if countodd > 0:\n            check = -1\n    if check == -1:\n        print('NO')\n    else:\n        ok = 1\n        for i in range(0, n - 1):\n            if s[i] == s[n - 1 - i]:\n                ok = 1\n            elif s[i] == s[n - i - 2] and l[n - i - 2] == 1 and (l[n - i - 1] == 1):\n                (s[n - i - 1], s[n - i - 2]) = (s[n - i - 2], s[n - i - 1])\n                c = c + 1\n                l[n - i - 2] = l[n - i - 1] = 0\n            elif s[i + 1] == s[n - i - 1] and l[i] == 1 and (l[i + 1] == 1):\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                c = c + 1\n                l[i] = l[i + 1] = 0\n            else:\n                check = -1\n        if check == -1:\n            print('NO')\n        else:\n            print('YES')\n            print(c)", "INF = float('inf')\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    ans = 0\n    (l, r) = (0, n - 1)\n    used = [False] * n\n    while l < r:\n        if s[l] == s[r]:\n            pass\n        elif l + 1 < r and s[l + 1] == s[r] and (not used[l]):\n            (s[l], s[l + 1]) = (s[l + 1], s[l])\n            used[l] = used[l + 1] = True\n            ans += 1\n        elif l < r - 1 and s[l] == s[r - 1] and (not used[r]):\n            (s[r], s[r - 1]) = (s[r - 1], s[r])\n            used[r] = used[r - 1] = True\n            ans += 1\n        l += 1\n        r -= 1\n    if s != s[::-1]:\n        print('NO')\n    else:\n        print('YES')\n        print(ans)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    s = input()\n    s = list(s)\n    v = [0] * n\n    c = 0\n    f = 0\n    for i in range(n // 2 + 1):\n        if s[i] == s[n - i - 1]:\n            continue\n        elif s[i + 1] == s[n - i - 1] and v[i] == 0 and (v[i + 1] == 0) and (i + 1 != n - i - 1):\n            (s[i], s[i + 1]) = (s[i + 1], s[i])\n            v[i] = 1\n            v[i + 1] = 1\n            c = c + 1\n        elif s[n - i - 2] == s[i] and v[n - i - 1] == 0 and (v[n - i - 2] == 0) and (i != n - i - 2):\n            (s[n - i - 1], s[n - i - 2]) = (s[n - i - 2], s[n - i - 1])\n            v[n - i - 1] = 1\n            v[n - i - 2] = 1\n            c = c + 1\n        else:\n            f = 1\n            break\n    if f == 0:\n        print('YES')\n        print(c)\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    s = list(input())\n    (l, r) = (0, n - 1)\n    flag = 1\n    ls = [1 for i in range(n)]\n    ans = 0\n    while l < r:\n        if s[l] == s[r]:\n            l += 1\n            r -= 1\n        elif l == r - 1:\n            flag = 0\n            break\n        elif ls[r] and ls[r - 1] and (s[l] == s[r - 1]):\n            (s[r], s[r - 1]) = (s[r - 1], s[r])\n            ls[r] = 0\n            ls[r - 1] = 0\n            ans += 1\n        elif ls[l] and ls[l + 1] and (s[r] == s[l + 1]):\n            (s[l], s[l + 1]) = (s[l + 1], s[l])\n            ls[l] = 0\n            ls[l + 1] = 0\n            ans += 1\n        else:\n            flag = 0\n            break\n    if flag == 0:\n        print('NO')\n    else:\n        print('YES')\n        print(ans)", "def testcase():\n    n = int(input())\n    string = list(input())\n    hn = n // 2\n    ans = 0\n    used = [False for i in range(n)]\n    for i in range(hn + 1):\n        ri = n - 1 - i\n        if string[i] == string[ri]:\n            used[i] = True\n            used[ri] = True\n            continue\n        if i < hn and string[i] == string[ri - 1] and (not used[ri]) and (not used[ri - 1]):\n            ans += 1\n            temp = string[ri]\n            string[ri] = string[ri - 1]\n            string[ri - 1] = temp\n            used[i] = True\n            used[ri] = True\n            used[ri - 1] = True\n            continue\n        if i < hn and string[i + 1] == string[ri] and (not used[i]) and (not used[i + 1]):\n            ans += 1\n            temp = string[i]\n            string[i] = string[i + 1]\n            string[i + 1] = temp\n            used[i + 1] = True\n            used[i] = True\n            used[ri] = True\n            continue\n        print('NO')\n        return\n    print('YES\\n', ans, sep='')\nt = int(input())\nfor t_ in range(t):\n    testcase()", "t = int(input())\nwhile t > 0:\n    steps = 0\n    flag = 0\n    n = input()\n    s = input()\n    m = [x for x in s]\n    bl = br = False\n    l = 0\n    r = len(s) - 1\n    while l < r:\n        if m[l] == m[r]:\n            bl = br = False\n            l += 1\n            r -= 1\n            continue\n        elif l == r - 1:\n            print('NO')\n            flag = 1\n            break\n        elif m[l] == m[r - 1] and br is False:\n            br = True\n            bl = False\n            steps += 1\n            (m[r], m[r - 1]) = (m[r - 1], m[r])\n            l += 1\n            r -= 1\n        elif m[r] == m[l + 1] and bl is False:\n            bl = True\n            br = False\n            steps += 1\n            (m[l], m[l + 1]) = (m[l + 1], m[l])\n            l += 1\n            r -= 1\n        else:\n            print('NO')\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n        print(steps)\n    t -= 1", "t = int(input())\nwhile t >= 1:\n    n = int(input())\n    s = list(input())\n    j = n - 1\n    k = 0\n    a = [0] * n\n    for i in range(0, int(n // 2)):\n        if s[i] != s[j]:\n            if s[j - 1] == s[i] and a[j] == 0 and (a[j - 1] == 0) and (j - 1 != i):\n                (s[j], s[j - 1]) = (s[j - 1], s[j])\n                a[j] = a[j - 1] = 1\n            elif s[i + 1] == s[j] and a[i] == 0 and (a[i + 1] == 0) and (i + 1 != j):\n                (s[i + 1], s[i]) = (s[i], s[i + 1])\n                a[i] = a[i + 1] = 1\n            else:\n                print('NO')\n                k = 1\n                break\n            j = j - 1\n        elif s[i] != s[j] and (a[j] == 1 or a[i] == 1):\n            k = 1\n            print('NO')\n            break\n        elif s[i] == s[j]:\n            j = j - 1\n    if k == 0:\n        c = 0\n        for i in a:\n            if i == 1:\n                c = c + 1\n        print('YES')\n        print(int(c // 2))\n    t = t - 1", "import math as m\nfor t in range(int(input())):\n    n = int(input())\n    p = input()\n    s = []\n    for i in range(n):\n        s.append(p[i])\n    cnt = 0\n    v = []\n    flag = 1\n    for i in range(n):\n        v.append(0)\n    for i in range(n // 2 + 1):\n        if s[i] == s[n - 1 - i]:\n            continue\n        elif s[i] == s[n - i - 2] and v[n - i - 1] == 0 and (v[n - i - 2] == 0) and (i != n - i - 2):\n            cnt += 1\n            a = s[n - 1 - i]\n            s[n - 1 - i] = s[n - i - 2]\n            s[n - i - 2] = a\n            v[n - i - 1] = 1\n            v[n - i - 2] = 1\n        elif s[i + 1] == s[n - 1 - i] and v[i] == 0 and (v[i + 1] == 0) and (i + 1 != n - i - 1):\n            cnt += 1\n            a = s[i + 1]\n            s[i + 1] = s[i]\n            s[i] = a\n            v[i] = 1\n            v[i + 1] = 1\n        else:\n            flag = 2\n            break\n    if flag == 2:\n        print('NO')\n    else:\n        print('YES')\n        print(cnt)", "import math as m\nfor t in range(int(input())):\n    n = int(input())\n    p = input()\n    s = []\n    for i in range(n):\n        s.append(p[i])\n    cnt = 0\n    v = []\n    flag = 1\n    for i in range(n):\n        v.append(0)\n    for i in range(n // 2 + 1):\n        if s[i] == s[n - 1 - i]:\n            continue\n        elif s[i] == s[n - i - 2] and v[n - i - 1] == 0 and (v[n - i - 2] == 0) and (i != n - i - 2):\n            cnt += 1\n            a = s[n - 1 - i]\n            s[n - 1 - i] = s[n - i - 2]\n            s[n - i - 2] = a\n            v[n - i - 1] = 1\n            v[n - i - 2] = 1\n        elif s[i + 1] == s[n - 1 - i] and v[i] == 0 and (v[i + 1] == 0) and (i + 1 != n - i - 1):\n            cnt += 1\n            a = s[i + 1]\n            s[i + 1] = s[i]\n            s[i] = a\n            v[i] = 1\n            v[i + 1] = 1\n        else:\n            flag = 2\n            break\n    if flag == 2:\n        print('NO')\n    else:\n        print('YES')\n        print(cnt)", "import math as m\nfor t in range(int(input())):\n    n = int(input())\n    p = input()\n    s = []\n    for i in range(n):\n        s.append(p[i])\n    cnt = 0\n    v = []\n    flag = 1\n    for i in range(n):\n        v.append(0)\n    for i in range(n // 2 + 1):\n        if s[i] == s[n - 1 - i]:\n            continue\n        elif s[i + 1] == s[n - 1 - i] and v[i] == 0 and (v[i + 1] == 0) and (i + 1 != n - i - 1):\n            cnt += 1\n            a = s[i + 1]\n            s[i + 1] = s[i]\n            s[i] = a\n            v[i] = 1\n            v[i + 1] = 1\n        elif s[i] == s[n - i - 2] and v[n - i - 1] == 0 and (v[n - i - 2] == 0) and (i != n - i - 2):\n            cnt += 1\n            a = s[n - 1 - i]\n            s[n - 1 - i] = s[n - i - 2]\n            s[n - i - 2] = a\n            v[n - i - 1] = 1\n            v[n - i - 2] = 1\n        else:\n            flag = 2\n            break\n    if flag == 2:\n        print('NO')\n    else:\n        print('YES')\n        print(cnt)", "I = input\n\ndef solve():\n    I()\n    s = list(I())\n    (c, i, f) = (0, -1, 3)\n    for i in range(len(s) // 2):\n        if s[i] == s[-1 - i]:\n            f = 3\n        else:\n            c += 1\n            if f & 1 and s[i] == s[-2 - i]:\n                (s[-2 - i], s[-1 - i]) = (s[-1 - i], s[-2 - i])\n                f = 2\n            elif f & 2 and s[i + 1] == s[-1 - i]:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                f = 1\n            else:\n                return -1\n    return c if s[i + 1] == s[-2 - i] else -1\nt = int(I())\nfor _ in range(t):\n    r = solve()\n    if r + 1:\n        print('YES')\n        print(r)\n    else:\n        print('NO')", "I = input\n\ndef solve():\n    I()\n    s = list(I())\n    (c, i, f) = (0, -1, 3)\n    for i in range(len(s) // 2):\n        if s[i] == s[-1 - i]:\n            f = 3\n        elif f & 1 and s[i] == s[-2 - i]:\n            (s[-2 - i], s[-1 - i]) = (s[-1 - i], s[-2 - i])\n            f = 2\n            c += 1\n        elif f & 2 and s[i + 1] == s[-1 - i]:\n            (s[i], s[i + 1]) = (s[i + 1], s[i])\n            f = 1\n            c += 1\n        else:\n            return -1\n    return c if s[i + 1] == s[-2 - i] else -1\nt = int(I())\nfor _ in range(t):\n    r = solve()\n    if r + 1:\n        print('YES')\n        print(r)\n    else:\n        print('NO')", "I = input\n\ndef solve():\n    n = int(I())\n    s = list(I())\n    i = c = 0\n    f = 3\n    while 2 * i < n - 2:\n        if s[i] == s[-1 - i]:\n            f = 3\n            i += 1\n        elif f & 1 and s[i] == s[-2 - i]:\n            (s[-2 - i], s[-1 - i]) = (s[-1 - i], s[-2 - i])\n            f = 2\n            i += 1\n            c += 1\n        elif f & 2 and s[i + 1] == s[-1 - i]:\n            (s[i], s[i + 1]) = (s[i + 1], s[i])\n            f = 1\n            i += 1\n            c += 1\n        else:\n            return -1\n    return c if s[i] == s[-1 - i] else -1\nt = int(I())\nfor _ in range(t):\n    r = solve()\n    if r + 1:\n        print('YES')\n        print(r)\n    else:\n        print('NO')", "I = input\n\ndef solve():\n    n = int(I())\n    s = list(I())\n    i = c = 0\n    a = b = True\n    while 2 * i < n - 2:\n        if s[i] == s[-1 - i]:\n            a = b = True\n            i += 1\n        elif a and s[i] == s[-2 - i]:\n            (s[-2 - i], s[-1 - i]) = (s[-1 - i], s[-2 - i])\n            (a, b) = (False, True)\n            i += 1\n            c += 1\n        elif b and s[i + 1] == s[-1 - i]:\n            (s[i], s[i + 1]) = (s[i + 1], s[i])\n            (a, b) = (True, False)\n            i += 1\n            c += 1\n        else:\n            return -1\n    return c if s[i] == s[-1 - i] else -1\nt = int(I())\nfor _ in range(t):\n    r = solve()\n    if r + 1:\n        print('YES')\n        print(r)\n    else:\n        print('NO')", "I = input\nt = int(I())\nfor _ in range(t):\n    I()\n    s = list(I())\n    n = len(s)\n    i = c = 0\n    a = b = True\n    while 2 * i < n - 2:\n        if s[i] == s[-1 - i]:\n            a = b = True\n            i += 1\n        elif a and s[i] == s[-2 - i]:\n            (s[-2 - i], s[-1 - i]) = (s[-1 - i], s[-2 - i])\n            (a, b) = (False, True)\n            i += 1\n            c += 1\n        elif b and s[i + 1] == s[-1 - i]:\n            (s[i], s[i + 1]) = (s[i + 1], s[i])\n            (a, b) = (True, False)\n            i += 1\n            c += 1\n        else:\n            print('NO')\n            break\n    else:\n        if s[i] == s[-1 - i]:\n            print('YES')\n            print(c)\n        else:\n            print('NO')", "def palindrome(X):\n    for i in range(n // 2):\n        if X[i] != X[-i - 1]:\n            return False\n    return True\n\ndef operations(s):\n    cnt = 0\n    vis = [0] * n\n    for i in range(n // 2):\n        if s[i] != s[-i - 1]:\n            cnt += 1\n            if s[i + 1] == s[-i - 1] and (not vis[i]) and (not vis[i + 1]):\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                vis[i] = vis[i + 1] = True\n            elif s[i] == s[-i - 2] and (not vis[-i - 1]) and (not vis[-i - 2]):\n                (s[-i - 1], s[-i - 2]) = (s[-i - 2], s[-i - 1])\n                vis[-i - 1] = vis[-i - 2] = True\n            else:\n                return -1\n    if not palindrome(s):\n        return -1\n    return cnt\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(input())\n    ans = operations(x)\n    if ans == -1:\n        print('NO')\n    else:\n        print('YES')\n        print(ans)", "I = input\nt = int(I())\nfor _ in range(t):\n    n = int(I())\n    s = list(I())\n    i = c = 0\n    a = b = True\n    while 2 * i < n - 2:\n        if s[i] == s[-1 - i]:\n            a = b = True\n            i += 1\n        elif a and s[i] == s[-2 - i]:\n            (s[-2 - i], s[-1 - i]) = (s[-1 - i], s[-2 - i])\n            (a, b) = (False, True)\n            i += 1\n            c += 1\n        elif b and s[i + 1] == s[-1 - i]:\n            (s[i], s[i + 1]) = (s[i + 1], s[i])\n            (a, b) = (True, False)\n            i += 1\n            c += 1\n        else:\n            print('NO')\n            break\n    else:\n        if s[i] == s[-1 - i]:\n            print('YES')\n            print(c)\n        else:\n            print('NO')", "I = input\nt = int(I())\nfor _ in range(t):\n    n = int(I())\n    s = list(I())\n    i = c = 0\n    a = b = True\n    while 2 * i < n:\n        if s[i] == s[-1 - i]:\n            a = b = True\n            i += 1\n        elif 2 * i < n - 2:\n            if a and s[i] == s[-2 - i]:\n                (s[-2 - i], s[-1 - i]) = (s[-1 - i], s[-2 - i])\n                (a, b) = (False, True)\n                i += 1\n                c += 1\n            elif b and s[i + 1] == s[-1 - i]:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                (a, b) = (True, False)\n                i += 1\n                c += 1\n            else:\n                print('NO')\n                break\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')\n        print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    st = list(input())\n    (p1, p2) = (-1, n)\n    i = 0\n    l = n - 1 - i\n    count = 0\n    ans = True\n    while i < n // 2:\n        l = n - 1 - i\n        if st[i] != st[l]:\n            if i + 1 == l:\n                ans = False\n                break\n            if i > p1 and st[i + 1] == st[l]:\n                (st[i], st[i + 1]) = (st[i + 1], st[i])\n                count += 1\n                p1 = i + 1\n            elif l < p2 and st[l - 1] == st[i]:\n                (st[l - 1], st[l]) = (st[l], st[l - 1])\n                count += 1\n                p2 = l - 1\n            else:\n                ans = False\n                break\n        if not ans:\n            break\n        i += 1\n    if ans:\n        print('YES')\n        print(count)\n    else:\n        print('NO')", "def isPal(s):\n    for i in range(len(s) // 2):\n        if s[i] != s[-i - 1]:\n            return False\n    return True\n\ndef solve(A):\n    ans = 0\n    A = list(A)\n    rotated = [False for _ in A]\n    for i in range(0, len(A) // 2):\n        if A[i] != A[-i - 1]:\n            ans += 1\n            if A[i + 1] == A[-i - 1] and (not rotated[i]) and (not rotated[i + 1]):\n                (A[i], A[i + 1]) = (A[i + 1], A[i])\n                rotated[i] = rotated[i + 1] = True\n            elif A[i] == A[-i - 2] and (not rotated[-i - 1]) and (not rotated[-i - 2]):\n                (A[-i - 1], A[-i - 2]) = (A[-i - 2], A[-i - 1])\n                rotated[-i - 1] = rotated[-i - 2] = True\n            else:\n                return -1\n    if not isPal(A):\n        return -1\n    return ans\nt = int(input())\nwhile t != 0:\n    input()\n    s = input()\n    ans = solve(s)\n    if ans == -1:\n        print('NO')\n    else:\n        print('YES')\n        print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    a = list(a)\n    boola = [True for i in range(len(a))]\n    temp = (n - 1) // 2\n    i = 0\n    c = 0\n    possible = True\n    while i < temp:\n        if a[i] != a[n - i - 1]:\n            if a[i + 1] == a[n - i - 1] and boola[i]:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n                boola[i] = False\n                boola[i + 1] = False\n                c += 1\n                i += 1\n            elif a[n - i - 2] == a[i] and boola[n - i - 1]:\n                (a[n - i - 1], a[n - i - 2]) = (a[n - i - 2], a[n - i - 1])\n                boola[n - i - 1] = False\n                boola[n - i - 2] = False\n                c += 1\n                i += 1\n            else:\n                possible = False\n                break\n        else:\n            i += 1\n    if n % 2 == 0 and a[n // 2 - 1] != a[n // 2]:\n        possible = False\n    print('YES' if possible else 'NO')\n    if possible:\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    i = 0\n    flag = True\n    j = n - 1\n    ans = 0\n    flip = [0 for i in range(n)]\n    while i < j and flag:\n        if s[i] == s[j]:\n            i = i + 1\n            j = j - 1\n        elif s[i + 1] == s[j] and flip[i] == 0 and (i + 1 != j):\n            ans += 1\n            s = s[:i] + s[i + 1] + s[i] + s[i + 2:j + 1]\n            flip[i] = 1\n            flip[i + 1] = 1\n            i = i + 1\n            j = j - 1\n        elif s[i] == s[j - 1] and flip[j] == 0 and (i != j - 1):\n            ans += 1\n            s = s[:j - 1] + s[j] + s[j - 1] + s[j + 1:]\n            flip[j] = 1\n            flip[j - 1] = 1\n            i = i + 1\n            j = j - 1\n        else:\n            flag = False\n            break\n    if flag:\n        print('YES')\n        print(ans)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    N = int(input())\n    s = input()\n    S = [*s]\n    i = 0\n    j = N - 1\n    freeze = -1\n    c = 0\n    while i <= j:\n        if S[i] != S[j]:\n            if S[i + 1] == S[j] and freeze != i:\n                (S[i], S[i + 1]) = (S[i + 1], S[i])\n                freeze = i + 1\n                c += 1\n            elif S[j - 1] == S[i] and freeze != j:\n                (S[j - 1], S[j]) = (S[j], S[j - 1])\n                freeze = j - 1\n                c += 1\n            else:\n                break\n        i += 1\n        j -= 1\n    if S == S[::-1]:\n        print('YES')\n        print(c)\n    else:\n        print('NO')", "t = int(input())\nfor x_ in range(t):\n    n = int(input())\n    p = input()\n    s = []\n    for i in p:\n        s.append(i)\n    mid = n // 2\n    flag = 0\n    count = 0\n    isLastSwapped = 0\n    isFirstSwapped = 0\n    for i in range(mid):\n        first = i\n        last = n - i - 1\n        if s[first] == s[last]:\n            isLastSwapped = 0\n            isFirstSwapped = 0\n            continue\n        elif s[first] == s[last - 1] and first < last - 1 and (isLastSwapped == 0):\n            temmp = s[last]\n            s[last] = s[last - 1]\n            s[last - 1] = temmp\n            isLastSwapped = 1\n            isFirstSwapped = 0\n            count += 1\n        elif s[first + 1] == s[last] and first + 1 < last and (isFirstSwapped == 0):\n            temmp = s[first]\n            s[first] = s[first + 1]\n            s[first + 1] = temmp\n            isFirstSwapped = 1\n            isLastSwapped = 0\n            count += 1\n        else:\n            flag = 1\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        print(count)", "t = int(input())\nfor x_ in range(t):\n    n = int(input().strip())\n    p = input()\n    s = []\n    for i in p:\n        s.append(i)\n    flag = 0\n    count = 0\n    f = 0\n    first = 0\n    last = n - 1\n    while first < last:\n        if s[first] == s[last]:\n            first += 1\n            last -= 1\n            f = 0\n            continue\n        if s[first + 1] == s[last] and first + 1 < last and (f != -1):\n            (s[first + 1], s[first]) = (s[first], s[first + 1])\n            f = -1\n            count += 1\n            first += 1\n            last -= 1\n        elif s[first] == s[last - 1] and first < last - 1 and (f != 1):\n            (s[last - 1], s[last]) = (s[last], s[last - 1])\n            f = 1\n            first += 1\n            last -= 1\n            count += 1\n        else:\n            flag = 1\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        print(count)", "for _ in range(int(input())):\n    N = int(input())\n    S = input()\n    C = list(S)\n    F = 1\n    T = 0\n    I = 0\n    D = [1] * N\n    if N % 2 == 0:\n        while I < N // 2 - 1:\n            if C[I] != C[N - I - 1]:\n                if C[I + 1] == C[N - I - 1] and D[I] and D[I + 1]:\n                    (C[I], C[I + 1]) = (C[I + 1], C[I])\n                    T += 1\n                    D[I] = 0\n                    D[I + 1] = 0\n                elif C[I] == C[N - I - 2] and D[N - I - 1] and D[N - I - 2]:\n                    (C[N - I - 1], C[N - I - 2]) = (C[N - I - 2], C[N - I - 1])\n                    T += 1\n                    D[N - I - 1] = 0\n                    D[N - I - 2] = 0\n                else:\n                    print('NO')\n                    F = 0\n                    break\n            I += 1\n        if F == 1:\n            if C[N // 2 - 1] != C[N // 2]:\n                print('NO')\n                F = 0\n    else:\n        while I < N // 2:\n            if C[I] != C[N - I - 1]:\n                if C[I + 1] == C[N - I - 1] and D[I] and D[I + 1]:\n                    (C[I], C[I + 1]) = (C[I + 1], C[I])\n                    T += 1\n                    D[I] = 0\n                    D[I + 1] = 0\n                elif C[I] == C[N - I - 2] and D[N - I - 1] and D[N - I - 2]:\n                    (C[N - I - 1], C[N - I - 2]) = (C[N - I - 2], C[N - I - 1])\n                    T += 1\n                    D[N - I - 1] = 0\n                    D[N - I - 2] = 0\n                else:\n                    print('NO')\n                    F = 0\n                    break\n            I += 1\n    if F == 1:\n        print('YES')\n        print(T)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    s = stdin.readline().strip()\n    arr = []\n    for ele in s:\n        arr.append(ele)\n    cond = True\n    i = 0\n    j = n - 1\n    count = 0\n    l = [-1] * n\n    while i < j:\n        if arr[i] != arr[j]:\n            if l[i] != -1 and l[j] != -1:\n                cond = False\n                break\n            if l[i] != -1:\n                if arr[j - 1] == arr[i] and j - 1 != i:\n                    count += 1\n                    (arr[j], arr[j - 1]) = (arr[j - 1], arr[j])\n                    l[j] = 0\n                    l[j - 1] = 0\n                else:\n                    cond = False\n                    break\n            elif l[j] != -1:\n                if arr[i + 1] == arr[j] and i + 1 != j:\n                    count += 1\n                    (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n                    l[i] = 0\n                    l[i + 1] = 0\n                else:\n                    cond = False\n                    break\n            elif arr[j - 1] == arr[i] and j - 1 != i:\n                count += 1\n                (arr[j], arr[j - 1]) = (arr[j - 1], arr[j])\n                l[j] = 0\n                l[j - 1] = 0\n            elif arr[i + 1] == arr[j] and i + 1 != j:\n                count += 1\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n                l[i] = 0\n                l[i + 1] = 0\n            else:\n                cond = False\n                break\n        i += 1\n        j -= 1\n    if cond == True:\n        print('YES')\n        print(count)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    N = int(input())\n    S = input()\n    C = list(S)\n    F = 1\n    T = 0\n    I = 0\n    D = [1] * N\n    if N % 2 == 0:\n        while I < N // 2 - 1:\n            if C[I] != C[N - I - 1]:\n                if C[I + 1] == C[N - I - 1] and D[I] and D[I + 1]:\n                    (C[I], C[I + 1]) = (C[I + 1], C[I])\n                    T += 1\n                    D[I] = 0\n                    D[I + 1] = 0\n                elif C[I] == C[N - I - 2] and D[N - I - 1] and D[N - I - 2]:\n                    (C[N - I - 1], C[N - I - 2]) = (C[N - I - 2], C[N - I - 1])\n                    T += 1\n                    D[N - I - 1] = 0\n                    D[N - I - 2] = 0\n                else:\n                    print('NO')\n                    F = 0\n                    break\n            I += 1\n        if F == 1:\n            if C[N // 2 - 1] != C[N // 2]:\n                print('NO')\n                F = 0\n    else:\n        while I < N // 2:\n            if C[I] != C[N - I - 1]:\n                if C[I + 1] == C[N - I - 1] and D[I] and D[I + 1]:\n                    (C[I], C[I + 1]) = (C[I + 1], C[I])\n                    T += 1\n                    D[I] = 0\n                    D[I + 1] = 0\n                elif C[I] == C[N - I - 2] and D[N - I - 1] and D[N - I - 2]:\n                    (C[N - I - 1], C[N - I - 2]) = (C[N - I - 2], C[N - I - 1])\n                    T += 1\n                    D[N - I - 1] = 0\n                    D[N - I - 2] = 0\n                else:\n                    print('NO')\n                    F = 0\n                    break\n            I += 1\n    if F == 1:\n        print('YES')\n        print(T)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    flag = 0\n    count = 0\n    look = [True] * n\n    if n % 2 == 0:\n        for i in range(n // 2 - 1):\n            if s[i] != s[-(i + 1)]:\n                if s[i + 1] == s[-(i + 1)] and look[i] and look[i + 1]:\n                    (s[i], s[i + 1]) = (s[i + 1], s[i])\n                    (look[i], look[i + 1]) = (False, False)\n                elif s[i] == s[-(i + 2)] and look[-(i + 2)] and look[-(i + 1)]:\n                    (s[-(i + 2)], s[-(i + 1)]) = (s[-(i + 1)], s[-(i + 2)])\n                    (look[-(i + 1)], look[-(i + 2)]) = (False, False)\n                else:\n                    flag = 1\n                    break\n                count += 1\n        if flag == 0:\n            if s[n // 2 - 1] != s[n // 2]:\n                flag = 1\n    else:\n        for i in range(n // 2):\n            if s[i] != s[-(i + 1)]:\n                if s[i + 1] == s[-(i + 1)] and look[i] and look[i + 1]:\n                    (s[i], s[i + 1]) = (s[i + 1], s[i])\n                    (look[i], look[i + 1]) = (False, False)\n                elif s[i] == s[-(i + 2)] and look[-(i + 2)] and look[-(i + 1)]:\n                    (s[-(i + 2)], s[-(i + 1)]) = (s[-(i + 1)], s[-(i + 2)])\n                    (look[-(i + 1)], look[-(i + 2)]) = (False, False)\n                else:\n                    flag = 1\n                    break\n                count += 1\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(input().strip())\n    if n == 1:\n        print('YES')\n        print(0)\n        continue\n    i = 0\n    j = n - 1\n    cnt = 0\n    flag_index = [True] * n\n    flag = True\n    while i < j:\n        if i + 1 == j and l[i] != l[j]:\n            flag = False\n            break\n        if l[i] == l[j]:\n            i += 1\n            j -= 1\n            continue\n        if i + 1 < n and l[i + 1] == l[j] and (flag_index[i + 1] == True) and (flag_index[i] == True):\n            (l[i], l[i + 1]) = (l[i + 1], l[i])\n            flag_index[i + 1] = False\n            flag_index[i] = False\n            cnt += 1\n            i += 1\n            j -= 1\n            continue\n        if j - 1 >= 0 and l[j - 1] == l[i] and (flag_index[j - 1] == True) and (flag_index[j] == True):\n            flag_index[j - 1] = False\n            flag_index[j] = False\n            (l[j], l[j - 1]) = (l[j - 1], l[j])\n            cnt += 1\n            i += 1\n            j -= 1\n            continue\n        flag = False\n        break\n    if flag == True:\n        print('YES')\n        print(cnt)\n    else:\n        print('NO')", "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    l = list(input())\n    i = 0\n    j = n - 1\n    ans = 0\n    flag = True\n    state = 0\n    while i < j:\n        if l[i] == l[j]:\n            i += 1\n            j -= 1\n            state = 0\n        elif l[i + 1] == l[j] and i + 1 < j and (state != -1):\n            ans += 1\n            t = l[i]\n            l[i] = l[i + 1]\n            l[i + 1] = t\n            i += 1\n            j -= 1\n            state = -1\n        elif l[i] == l[j - 1] and i + 1 < j and (state != 1):\n            ans += 1\n            t = l[j]\n            l[j] = l[j - 1]\n            l[j - 1] = t\n            i += 1\n            j -= 1\n            state = 1\n        else:\n            flag = False\n            print('NO')\n            break\n    if flag:\n        print('YES')\n        print(ans)", "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    l = list(input())\n    i = 0\n    j = n - 1\n    ans = 0\n    flag = True\n    state = 0\n    while i < j:\n        if l[i] == l[j]:\n            i += 1\n            j -= 1\n            state = 0\n        elif l[i + 1] == l[j] and i + 1 < j and (state != -1):\n            ans += 1\n            t = l[i]\n            l[i] = l[i + 1]\n            l[i + 1] = t\n            i += 1\n            j -= 1\n            state = -1\n        elif l[i] == l[j - 1] and i + 1 < j and (state != 1):\n            ans += 1\n            t = l[j]\n            l[j] = l[j - 1]\n            l[j - 1] = t\n            i += 1\n            j -= 1\n            state = 1\n        else:\n            flag = False\n            print('NO')\n            break\n    if flag:\n        print('YES')\n        print(ans)", "ts = int(input())\nwhile ts > 0:\n    n = int(input().strip())\n    st = input()\n    st = [i for i in st]\n    i = 0\n    j = n - 1\n    swaps = 0\n    flag = 0\n    ansflag = 1\n    while i < j:\n        if st[i] == st[j]:\n            i += 1\n            j -= 1\n            flag = 0\n            continue\n        if st[i + 1] == st[j] and i + 1 < j and (flag != -1):\n            (st[i], st[i + 1]) = (st[i + 1], st[i])\n            i += 1\n            j -= 1\n            flag = -1\n            swaps += 1\n        elif st[j - 1] == st[i] and i < j - 1 and (flag != 1):\n            (st[j - 1], st[j]) = (st[j], st[j - 1])\n            i += 1\n            j -= 1\n            flag = 1\n            swaps += 1\n        else:\n            ansflag = 0\n            break\n    if ansflag == 1:\n        print('YES')\n        print(swaps)\n    else:\n        print('NO')\n    ts -= 1", "t = int(input())\nfor w in range(t):\n    n = int(input())\n    s = list(input())\n    l = [-1] * n\n    ct = 0\n    for i in range(n // 2):\n        if s[i] == s[n - i - 1]:\n            continue\n        if i + 1 < n // 2 or (n % 2 == 1 and i + 1 == n // 2):\n            if s[n - i - 1] == s[i + 1] and l[i] == -1 and (l[i + 1] == -1):\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                l[i] = 0\n                l[i + 1] = 0\n                ct += 1\n            elif s[i] == s[n - i - 2] and l[n - i - 1] == -1 and (l[n - i - 2] == -1):\n                (s[n - i - 1], s[n - i - 2]) = (s[n - i - 2], s[n - i - 1])\n                l[n - i - 1] = 0\n                l[n - i - 2] = 0\n                ct += 1\n            else:\n                ct = -1\n                break\n        else:\n            ct = -1\n            break\n    if ct == -1:\n        print('NO')\n    else:\n        print('YES')\n        print(ct)", "for t in range(int(input())):\n    n = int(input())\n    s = [i for i in input()]\n    (i, j) = (0, len(s) - 1)\n    (ls, rs) = (True, True)\n    opt = 0\n    while i < j:\n        if s[i] == s[j]:\n            i += 1\n            j -= 1\n            (ls, rs) = (True, True)\n        else:\n            if s[i + 1] == s[j] and ls:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                (ls, rs) = (False, True)\n                opt += 1\n            elif s[j - 1] == s[i] and rs:\n                (s[j], s[j - 1]) = (s[j - 1], s[j])\n                (ls, rs) = (True, False)\n                opt += 1\n            if s[i] != s[j]:\n                opt = -1\n                break\n            i += 1\n            j -= 1\n    if opt >= 0:\n        print('YES')\n        print(opt)\n    else:\n        print('NO')", "t = int(input())\nfor w in range(t):\n    n = int(input())\n    s = list(input())\n    l = [-1] * n\n    ct = 0\n    for i in range(n // 2):\n        if s[i] == s[n - i - 1]:\n            continue\n        if i + 1 < n // 2 or (n % 2 == 1 and i + 1 == n // 2):\n            if s[n - i - 1] == s[i + 1] and l[i] == -1 and (l[i + 1] == -1):\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n                l[i] = 0\n                l[i + 1] = 0\n                ct += 1\n            elif s[i] == s[n - i - 2] and l[n - i - 1] == -1 and (l[n - i - 2] == -1):\n                (s[n - i - 1], s[n - i - 2]) = (s[n - i - 2], s[n - i - 1])\n                l[n - i - 1] = 0\n                l[n - i - 2] = 0\n                ct += 1\n            else:\n                ct = -1\n                break\n        else:\n            ct = -1\n            break\n    if ct == -1:\n        print('NO')\n    else:\n        print('YES')\n        print(ct)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    s = input()\n    l = len(s)\n    a = []\n    for j in s:\n        a.append(j)\n    m = l // 2\n    count = 0\n    f1 = 0\n    f2 = 0\n    flag = 0\n    if l == 2:\n        if a[0] != a[1]:\n            flag = 1\n    else:\n        for k in range(0, m):\n            if a[k] != a[l - k - 1]:\n                if a[k] == a[l - k - 2] and f1 == 0 and (k != l - k - 2):\n                    temp = a[l - k - 1]\n                    a[l - k - 1] = a[l - k - 2]\n                    a[l - k - 2] = temp\n                    count += 1\n                    f1 = 1\n                    f2 = 0\n                elif a[l - k - 1] == a[k + 1] and f2 == 0 and (k + 1 != l - k - 1):\n                    temp = a[k]\n                    a[k] = a[k + 1]\n                    a[k + 1] = temp\n                    count += 1\n                    f1 = 0\n                    f2 = 1\n                else:\n                    flag = 1\n                    break\n            else:\n                f1 = 0\n                f2 = 0\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(count)"]