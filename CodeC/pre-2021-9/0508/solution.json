["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    left = {}\n    center = max(ls)\n    right = {}\n    for i in ls:\n        if i == center:\n            if not left.get(center):\n                left[center] = True\n            else:\n                print('NO')\n                break\n        elif not left.get(i):\n            left[i] = True\n        elif not right.get(i):\n            right[i] = True\n        else:\n            print('NO')\n            break\n    else:\n        ans = []\n        tmp = list(left.keys())\n        tmp.sort()\n        ans.extend(tmp)\n        tmp = list(right.keys())\n        tmp.sort(reverse=True)\n        ans.extend(tmp)\n        print('YES')\n        for i in ans:\n            print(i, '', end='')\n        print()", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    f = Counter(a)\n    if a.count(max(a)) > 1:\n        print('NO')\n    else:\n        lhs = []\n        rhs = []\n        foe = 0\n        for (i, value) in f.items():\n            if value == 1:\n                lhs.append(i)\n            elif value == 2:\n                lhs.append(i)\n                rhs.append(i)\n            else:\n                print('NO')\n                foe = 1\n                break\n        if foe == 1:\n            continue\n        else:\n            lhs.sort()\n            rhs.sort(reverse=True)\n            print('YES')\n            print(*lhs, *rhs)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    f = Counter(a)\n    if a.count(max(a)) > 1:\n        print('NO')\n    else:\n        lhs = []\n        rhs = []\n        foe = 0\n        for (i, value) in f.items():\n            if value == 1:\n                lhs.append(i)\n            elif value == 2:\n                lhs.append(i)\n                rhs.append(i)\n            else:\n                print('NO')\n                foe = 1\n                break\n        if foe == 1:\n            continue\n        else:\n            lhs.sort()\n            rhs.sort(reverse=True)\n            print('YES')\n            print(*lhs, *rhs)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    m = 0\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n        if i > m:\n            m = i\n    if a.count(m) > 1:\n        print('NO')\n    else:\n        for i in d.values():\n            if i > 2:\n                print('NO')\n                break\n        else:\n            del d[m]\n            l = []\n            r = []\n            for i in d:\n                if d[i] == 2:\n                    r.append(i)\n                l.append(i)\n            l.sort()\n            r.sort(reverse=True)\n            print('YES')\n            print(' '.join((str(x) for x in l)), m, ' '.join((str(x) for x in r)))", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    maximum = -10 ** 9\n    increasing_arr = []\n    decreasing_arr = []\n    unique_dict = {}\n    ans = 'YES'\n    ans_arr = []\n    for j in arr:\n        if j in unique_dict:\n            if unique_dict[j] > 1:\n                ans = 'NO'\n                break\n            unique_dict[j] += 1\n            decreasing_arr.append(j)\n        else:\n            unique_dict[j] = 1\n            increasing_arr.append(j)\n        maximum = max(maximum, j)\n    if unique_dict[maximum] > 1:\n        ans = 'NO'\n    if ans != 'NO':\n        ans_arr.extend(sorted(increasing_arr))\n        ans_arr.extend(sorted(decreasing_arr, reverse=True))\n        print(ans)\n        print(*ans_arr)\n    else:\n        print(ans)", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    maximum = -10 ** 9\n    increasing_arr = []\n    decreasing_arr = []\n    unique_dict = {}\n    ans = 'YES'\n    ans_arr = []\n    for j in arr:\n        if j in unique_dict:\n            if unique_dict[j] > 1:\n                ans = 'NO'\n                break\n            unique_dict[j] += 1\n            decreasing_arr.append(j)\n        else:\n            unique_dict[j] = 1\n            increasing_arr.append(j)\n        maximum = max(maximum, j)\n    if unique_dict[maximum] > 1:\n        ans = 'NO'\n    if ans != 'NO':\n        ans_arr.extend(sorted(increasing_arr))\n        ans_arr.extend(sorted(decreasing_arr, reverse=True))\n        print(ans)\n        print(*ans_arr)\n    else:\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().lstrip().split()))\n    di = dict()\n    li1 = []\n    li2 = []\n    ans = 'True'\n    for i in range(n):\n        if arr[i] in di:\n            di[arr[i]] += 1\n        else:\n            di[arr[i]] = 1\n    new_val = di.values()\n    for j in di:\n        if di[j] == 1:\n            li1.append(j)\n        elif di[j] == 2:\n            li1.append(j)\n            li2.append(j)\n        else:\n            ans = False\n    li1.sort()\n    li2.sort(reverse=True)\n    q = li1 + li2\n    for j in range(len(q) - 1):\n        if q[j] != q[j + 1]:\n            continue\n        else:\n            ans = False\n    if ans == 'True':\n        print('YES')\n        print(*q, sep=' ')\n    else:\n        print('NO')", "from typing import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    nli = list(map(int, input().split()))\n    mx = max(nli)\n    nli.remove(mx)\n    lhs = []\n    rhs = []\n    countr = Counter(nli)\n    ps = True\n    if mx in nli:\n        print('NO')\n    else:\n        for (key, value) in countr.items():\n            if value == 1:\n                lhs.append(key)\n            elif value == 2:\n                lhs.append(key)\n                rhs.append(key)\n            elif value > 2:\n                ps = False\n                break\n        if ps:\n            lhs.sort()\n            lhs.append(mx)\n            rhs.sort(reverse=True)\n            li = lhs + rhs\n            print('YES')\n            print(*li)\n        else:\n            print('NO')", "from typing import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    nli = list(map(int, input().split()))\n    mx = max(nli)\n    nli.remove(mx)\n    lhs = []\n    rhs = []\n    countr = Counter(nli)\n    ps = True\n    if mx in nli:\n        print('NO')\n    else:\n        for (key, value) in countr.items():\n            if value == 1:\n                lhs.append(key)\n            elif value == 2:\n                lhs.append(key)\n                rhs.append(key)\n            elif value > 2:\n                ps = False\n                break\n        if ps:\n            lhs.sort()\n            lhs.append(mx)\n            rhs.sort(reverse=True)\n            li = lhs + rhs\n            print('YES')\n            print(*li)\n        else:\n            print('NO')", "from typing import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    nli = list(map(int, input().split()))\n    mx = max(nli)\n    nli.remove(mx)\n    lhs = []\n    rhs = []\n    countr = Counter(nli)\n    ps = True\n    if mx in nli:\n        print('NO')\n    else:\n        for (key, value) in countr.items():\n            if value == 1:\n                lhs.append(key)\n            elif value == 2:\n                lhs.append(key)\n                rhs.append(key)\n            elif value > 2:\n                ps = False\n                break\n        if ps:\n            lhs.sort()\n            lhs.append(mx)\n            rhs.sort(reverse=True)\n            li = lhs + rhs\n            print('YES')\n            print(*li)\n        else:\n            print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dct = Counter(arr)\n    if dct[max(arr)] > 1:\n        print('NO')\n    else:\n        for i in dct:\n            if dct[i] > 2:\n                print('NO')\n                break\n        else:\n            print('YES')\n            t = set(arr)\n            first_half = sorted(list(t))\n            for i in dct:\n                if dct[i] == 1:\n                    t.remove(i)\n            first_half.extend(sorted(t, reverse=True))\n            for i in first_half:\n                print(i, end=' ')\n            print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    f = True\n    d = {}\n    for j in l:\n        if d.get(j) is None:\n            d[j] = 1\n        else:\n            d[j] += 1\n            if d[j] > 2:\n                f = False\n                break\n    s = []\n    ans = [l[0]]\n    if f and d[l[-1]] == 1:\n        for k in range(1, n):\n            if l[k] == l[k - 1]:\n                s.append(l[k])\n            else:\n                ans.append(l[k])\n        for z in range(len(s) - 1, -1, -1):\n            ans.append(s[z])\n        print('YES')\n        print(*ans)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    flag = True\n    d = {}\n    for i in arr:\n        if d.get(i) is None:\n            d[i] = 1\n        else:\n            d[i] += 1\n            if d[i] > 2:\n                flag = False\n                break\n    dec = []\n    ans = [arr[0]]\n    if flag and d[arr[-1]] == 1:\n        for i in range(1, n):\n            if arr[i] == arr[i - 1]:\n                dec.append(arr[i])\n            else:\n                ans.append(arr[i])\n        for i in range(len(dec) - 1, -1, -1):\n            ans.append(dec[i])\n        print('YES')\n        print(*ans)\n    else:\n        print('NO')", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    c = Counter(a)\n    if c[max(a)] > 1:\n        print('NO')\n    else:\n        for i in c:\n            if c[i] > 2:\n                print('NO')\n                break\n        else:\n            print('YES')\n            s = set(a)\n            l = list(s)\n            l.sort()\n            for i in c:\n                if c[i] == 1:\n                    s.remove(i)\n            l.extend(sorted(s, reverse=True))\n            for i in l:\n                print(i, end=' ')\n            print()", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dct = Counter(arr)\n    if dct[max(arr)] > 1:\n        print('NO')\n    else:\n        for i in dct:\n            if dct[i] > 2:\n                print('NO')\n                break\n        else:\n            print('YES')\n            t = set(arr)\n            first_half = sorted(list(t))\n            for i in dct:\n                if dct[i] == 1:\n                    t.remove(i)\n            first_half.extend(sorted(t, reverse=True))\n            for i in first_half:\n                print(i, end=' ')\n            print()", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = set(arr)\n    cache = dict()\n    maxi = max(s)\n    for ele in arr:\n        if ele in cache:\n            cache[ele] += 1\n        else:\n            cache[ele] = 1\n    if cache[maxi] > 1:\n        print('NO')\n    else:\n        for k in cache:\n            if cache[k] > 2:\n                print('NO')\n                break\n        else:\n            print('YES')\n            l1 = sorted(list(s))\n            for k in cache:\n                if cache[k] == 1:\n                    s.remove(k)\n            l2 = sorted(list(s), reverse=True)\n            print(' '.join(map(str, l1 + l2)))\n    t -= 1", "mod = 1000000007\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 1\n    d = {}\n    a.sort()\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n        if d[i] > 2:\n            flag = 0\n            break\n    if flag == 0:\n        print('NO')\n        continue\n    uni = list(d.values())\n    if uni.count(1) == n:\n        print('YES')\n        print(' '.join(map(str, a)))\n    else:\n        lf = []\n        rt = []\n        for (i, j) in d.items():\n            if j == 2:\n                lf.append(i)\n                rt.append(i)\n            else:\n                lf.append(i)\n        lf.sort()\n        rt.sort()\n        if lf == rt:\n            print('NO')\n        elif lf[-1] == rt[-1]:\n            print('NO')\n        else:\n            print('YES')\n            p = lf.copy()\n            rt.sort(reverse=True)\n            p += rt.copy()\n            print(' '.join(map(str, p)))", "mod = 1000000007\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 1\n    d = {}\n    a.sort()\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n        if d[i] > 2:\n            flag = 0\n            break\n    if flag == 0:\n        print('NO')\n        continue\n    uni = list(d.values())\n    if uni.count(1) == n:\n        print('YES')\n        print(' '.join(map(str, a)))\n    else:\n        lf = []\n        rt = []\n        for (i, j) in d.items():\n            if j == 2:\n                lf.append(i)\n                rt.append(i)\n            else:\n                lf.append(i)\n        lf.sort()\n        rt.sort()\n        if lf == rt:\n            print('NO')\n        elif lf[-1] == rt[-1]:\n            print('NO')\n        else:\n            print('YES')\n            p = lf.copy()\n            rt.sort(reverse=True)\n            p += rt.copy()\n            print(' '.join(map(str, p)))", "mod = 1000000007\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 1\n    d = {}\n    a.sort()\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n        if d[i] > 2:\n            flag = 0\n            break\n    if flag == 0:\n        print('NO')\n        continue\n    uni = list(d.values())\n    if uni.count(1) == n:\n        print('YES')\n        print(' '.join(map(str, a)))\n    else:\n        lf = []\n        rt = []\n        for (i, j) in d.items():\n            if j == 2:\n                lf.append(i)\n                rt.append(i)\n            else:\n                lf.append(i)\n        lf.sort()\n        rt.sort()\n        if lf == rt:\n            print('NO')\n        elif lf[-1] == rt[-1]:\n            print('NO')\n        else:\n            print('YES')\n            p = lf.copy()\n            rt.sort(reverse=True)\n            p += rt.copy()\n            print(' '.join(map(str, p)))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    ans = 'Yes'\n    for i in l:\n        if i in d:\n            d[i] += 1\n            if d[i] > 2:\n                ans = 'No'\n        else:\n            d[i] = 1\n    if ans == 'No' or d[max(l)] > 1:\n        print('NO')\n    else:\n        print('YES')\n        l1 = sorted(d.keys())\n        for i in l1[::-1]:\n            if d[i] == 2:\n                l1.append(i)\n        print(*l1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    f = []\n    l = []\n    flag = 0\n    for i in a:\n        if i not in d:\n            f.append(i)\n            d[i] = 1\n        else:\n            l.append(i)\n            d[i] += 1\n            if d[i] > 2:\n                flag = 1\n                break\n    if flag == 1:\n        print('NO')\n        continue\n    f.sort()\n    l.sort()\n    if len(l) == 0:\n        print('YES')\n        print(*f)\n    elif f[len(f) - 1] == l[len(l) - 1]:\n        print('NO')\n    else:\n        l.reverse()\n        print('YES')\n        print(*f, end=' ')\n        print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    d = {}\n    for i in arr:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    flag = True\n    for i in d:\n        if d[i] > 2:\n            flag = False\n            break\n    if arr.count(max(arr)) != 1:\n        flag = False\n    if flag == True:\n        arr1 = []\n        arr2 = []\n        for i in d:\n            if d[i] <= 2:\n                if d[i] == 2:\n                    arr2.append(i)\n                arr1.append(i)\n        arr2.reverse()\n        rearr = arr1 + arr2\n        print('YES')\n        print(*rearr)\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set()\n    c = []\n    for i in a:\n        if i not in b:\n            b.add(i)\n        else:\n            c.append(i)\n    b = list(b)\n    b.sort()\n    c.sort(reverse=True)\n    e = b + c\n    k = 0\n    for i in range(len(e) - 1):\n        if e[i] == e[i + 1]:\n            k = 1\n            print('NO')\n            break\n    if k == 0:\n        print('YES')\n        print(*e)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    g = Counter(arr)\n    s = list(g.values())\n    seti = list(set(arr))\n    seti = sorted(seti)\n    if len(seti) == n:\n        print('YES')\n        print(*arr)\n    else:\n        h = [item for (item, count) in g.items() if count >= 3]\n        if h:\n            print('NO')\n        elif g[arr[-1]] == 2:\n            print('NO')\n        else:\n            k = [item for (item, count) in g.items() if count == 2]\n            k = sorted(k, reverse=True)\n            seti.extend(k)\n            print('YES')\n            print(*seti)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    f = []\n    l = []\n    flag = 0\n    for i in a:\n        if i not in d:\n            f.append(i)\n            d[i] = 1\n        else:\n            l.append(i)\n            d[i] += 1\n            if d[i] > 2:\n                flag = 1\n                break\n    if flag == 1:\n        print('NO')\n        continue\n    f.sort()\n    l.sort()\n    if len(l) == 0:\n        print('YES')\n        print(*f)\n    elif f[len(f) - 1] == l[len(l) - 1]:\n        print('NO')\n    else:\n        l.reverse()\n        print('YES')\n        print(*f, end=' ')\n        print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    b = []\n    a = []\n    x = 0\n    l.sort()\n    for i in range(n):\n        if x < l[i]:\n            x = l[i]\n            a.append(l[i])\n            l[i] = 0\n            continue\n        b.append(l[i])\n    (x, f) = (0, 0)\n    for i in b:\n        if x == i:\n            f = 1\n        x = i\n    b.sort(reverse=True)\n    if len(b) == 0:\n        print('YES')\n        print(*a)\n    elif f == 1 or a[-1] == b[0]:\n        print('NO')\n    else:\n        print('YES')\n        print(*a + b)", "def solve(n, lst):\n    d = dict()\n    p1 = []\n    p2 = []\n    for i in lst:\n        if i in d.keys():\n            d[i] += 1\n            p2.append(i)\n            if d[i] > 2:\n                return -1\n        else:\n            p1.append(i)\n            d[i] = 1\n    if d[max(p1)] > 1:\n        return -1\n    p1.sort()\n    p2.sort()\n    p2.reverse()\n    return p1 + p2\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split(' ')))\n    res = solve(n, lst)\n    if res == -1:\n        print('NO')\n    else:\n        print('YES' + '\\n' + ' '.join(map(str, res)))", "from collections import defaultdict\n\ndef find(li, n):\n    d = {}\n    li.sort()\n    for i in range(n):\n        if li[i] not in d:\n            d[li[i]] = 1\n        else:\n            d[li[i]] += 1\n            if d[li[i]] > 2:\n                return 'NO'\n    ans = []\n    for i in d:\n        ans.append(i)\n        d[i] -= 1\n    for i in range(len(li) - 1, -1, -1):\n        if d[li[i]] != 0:\n            if ans[-1] == li[i]:\n                return 'NO'\n            x = d[li[i]]\n            while x != 0:\n                ans.append(li[i])\n                x -= 1\n                d[li[i]] -= 1\n    return ans\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    ans = find(li, n)\n    if ans != 'NO':\n        print('YES')\n        for j in ans:\n            print(j, end=' ')\n        print()\n    else:\n        print(ans)", "t = int(input())\nwhile t:\n    n = int(input())\n    li = [int(x) for x in input().split()]\n    l = [0 for i in range(max(li) + 1)]\n    for i in range(len(li)):\n        l[li[i]] = l[li[i]] + 1\n    if max(l) >= 3:\n        print('NO')\n    elif l[max(li)] >= 2:\n        print('NO')\n    else:\n        print('YES')\n        for j in range(len(l)):\n            if l[j] >= 1:\n                print(j, end=' ')\n                l[j] = l[j] - 1\n        for j in range(len(l) - 1, -1, -1):\n            if l[j] >= 1:\n                print(j, end=' ')\n                l[j] = l[j] - 1\n    print()\n    t = t - 1", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = [-1]\n    c = [-1]\n    prev = nex = 0\n    flag = True\n    i = 0\n    f = False\n    while i < n:\n        if flag:\n            if a[i] == prev:\n                flag = False\n                if a[i] == nex:\n                    f = True\n                    break\n                i -= 1\n            else:\n                b.append(a[i])\n                prev = a[i]\n        elif a[i] == nex:\n            flag = True\n            if a[i] == prev:\n                f = True\n                break\n            i -= 1\n        else:\n            c.append(a[i])\n            nex = a[i]\n        i += 1\n    flag = True\n    b.sort()\n    c.sort(reverse=True)\n    ans = b[1:] + c[:-1]\n    for i in range(1, len(ans)):\n        if ans[i] == ans[i - 1]:\n            f = True\n            break\n    if f:\n        print('NO')\n    else:\n        print('YES')\n        for i in ans:\n            print(i, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set()\n    c = []\n    for i in a:\n        if i in b:\n            c.append(i)\n        else:\n            b.add(i)\n    b = list(b)\n    b.sort()\n    c.sort(reverse=True)\n    arr = b[:] + c[:]\n    flag = 0\n    for i in range(len(b) - 1, n - 1):\n        if arr[i] == arr[i + 1]:\n            flag = 1\n            print('NO')\n            break\n    if flag == 0:\n        print('YES')\n        print(*arr)", "from collections import Counter\n\ndef fn(a):\n    c = Counter(a)\n    single = []\n    double = []\n    for i in c.keys():\n        if c[i] > 2:\n            return 0\n        if c[i] == 2:\n            double.append(i)\n        single.append(i)\n    single.sort()\n    double.sort(reverse=True)\n    try:\n        if single[-1] == double[0]:\n            return 0\n    except:\n        pass\n    return single + double\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = fn(a)\n    if g:\n        print('YES')\n        print(*g)\n    else:\n        print('NO')", "def solve(a):\n    (l1, l2) = ([], [])\n    printed = False\n    dic = dict.fromkeys(a, 0)\n    for i in a:\n        dic[i] += 1\n        if dic[i] == 1:\n            l1.append(i)\n        if dic[i] == 2:\n            l2.append(i)\n        if dic[i] == 3:\n            print('NO')\n            return\n            printed = True\n            break\n    if not printed:\n        if max(l1) in l2:\n            print('NO')\n            return\n        else:\n            print('YES')\n            l1 = sorted(l1)\n            l2 = sorted(l2, reverse=True)\n            print(*l1 + l2)\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    solve(a)", "def PrintBothArrays(a, n):\n    (v1, v2) = ([], [])\n    mpp = dict.fromkeys(a, 0)\n    for i in range(n):\n        mpp[a[i]] += 1\n        if mpp[a[i]] == 1:\n            v1.append(a[i])\n        elif mpp[a[i]] == 2:\n            v2.append(a[i])\n        else:\n            print('NO')\n            return\n    maximum = max(v1)\n    if maximum in v2:\n        print('NO')\n        return\n    v1.sort()\n    print('YES')\n    for it in v1:\n        print(it, end=' ')\n    v2.sort(reverse=True)\n    for it in v2:\n        print(it, end=' ')\n    print()\ntry:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        PrintBothArrays(a, n)\nexcept EOFError as t:\n    pass", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = list(map(int, input().strip().split()))\n    x = max(list1)\n    map1 = dict()\n    ans = 1\n    ans1 = []\n    ans2 = []\n    for val in list1:\n        if val not in map1:\n            map1[val] = 1\n            ans1.append(val)\n        elif map1[val] == 1 and val != x:\n            map1[val] += 1\n            ans2.append(val)\n        else:\n            ans = 0\n            break\n    if ans:\n        print('YES')\n        ans1.sort()\n        ans2.sort()\n        for i in range(len(ans1)):\n            print(ans1[i], end=' ')\n        for i in range(len(ans2) - 1, 0 - 1, -1):\n            print(ans2[i], end=' ')\n        print()\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = list(map(int, input().strip().split()))\n    x = max(list1)\n    map1 = dict()\n    for val in list1:\n        if val in map1:\n            map1[val] += 1\n        else:\n            map1[val] = 1\n    ans = 1\n    for val in map1:\n        if val == x:\n            if map1[val] > 1:\n                ans = 0\n                break\n        elif map1[val] > 2:\n            ans = 0\n            break\n    if ans:\n        print('YES')\n        ans1 = sorted(map1)\n        ans2 = []\n        for val in ans1:\n            if map1[val] == 2:\n                ans2.append(val)\n        ans2.reverse()\n        for val in ans1:\n            print(val, end=' ')\n        for val in ans2:\n            print(val, end=' ')\n        print()\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = []\n    flag = 0\n    if a[n - 1] == a[n - 2]:\n        print('NO')\n        continue\n    i = 0\n    while i < n - 2:\n        if a[i] == a[i + 2]:\n            flag = 1\n            break\n        elif a[i] == a[i + 1]:\n            b.append(a.pop(i))\n            n = n - 1\n        i += 1\n    if flag == 0:\n        b.sort(reverse=True)\n        print('YES')\n        print(*a + b)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    arr1 = list(set(arr))\n    arr1.sort()\n    arr2 = []\n    for i in range(n - 1):\n        if arr[i] == arr[i + 1]:\n            arr2.append(arr[i])\n    arr2 = list(set(arr2))\n    arr2.sort()\n    arr2.reverse()\n    ans = arr1 + arr2\n    if len(arr) != len(ans) or (len(arr) > 1 and arr[-1] == arr[-2]):\n        print('NO')\n    else:\n        print('YES')\n        print(*ans)", "def inc_dec(arr):\n    if len(arr) == len(set(arr)):\n        print('YES')\n        print(*sorted(arr))\n        return\n    hash = {}\n    for i in arr:\n        if i in hash:\n            hash[i] += 1\n        else:\n            hash[i] = 1\n    lastval = 0\n    for j in hash.values():\n        if j > 2:\n            print('NO')\n            return\n        lastval = j\n    fh = sorted(hash)\n    sh = []\n    for k in fh:\n        if hash[k] > 1:\n            sh.append(k)\n    resul = fh + sh[::-1]\n    for k in range(len(resul) - 1):\n        if resul[k] == resul[k + 1]:\n            print('NO')\n            return\n    else:\n        print('YES')\n        print(*resul)\nT = int(input())\nwhile T:\n    dump = input()\n    a = list(map(int, input().split()))\n    inc_dec(a)\n    T -= 1", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = set()\n    b = []\n    for j in range(n):\n        if arr[j] not in a:\n            a.add(arr[j])\n        else:\n            b.append(arr[j])\n    a = list(a)\n    a.sort()\n    b.sort(reverse=True)\n    resul = a[:] + b[:]\n    for j in range(len(resul) - 1):\n        if resul[j] == resul[j + 1]:\n            print('NO')\n            break\n    else:\n        print('YES')\n        print(*resul)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    L = list(map(int, input().split()))\n    L.sort()\n    flag = 0\n    L1 = []\n    L2 = []\n    L1.append(L[0])\n    for i in range(1, N):\n        if L[i] == L[i - 1]:\n            L2.append(L[i])\n        else:\n            L1.append(L[i])\n    for i in range(1, len(L2)):\n        if L2[i] == L2[i - 1]:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    else:\n        L2.sort(reverse=True)\n        if len(L2) != 0:\n            if L1[-1] == L2[0]:\n                print('NO')\n                flag = 2\n        if flag != 2:\n            print('YES')\n            for i in L1:\n                print(i, end=' ')\n            for i in L2:\n                print(i, end=' ')\n            print('')", "def sol(arr, n):\n    (i, de) = ([], [])\n    d = {}\n    for ele in arr:\n        if ele in d:\n            d[ele] += 1\n        else:\n            d[ele] = 1\n        if d[ele] == 1:\n            i.append(ele)\n        elif d[ele] == 2:\n            de.append(ele)\n        else:\n            return False\n    i.sort()\n    de.sort(reverse=True)\n    if len(de) != 0:\n        if i[len(i) - 1] == de[0]:\n            return False\n        else:\n            i.extend(de)\n            return i\n    else:\n        return i\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = sol(arr, n)\n    if ans == False:\n        print('NO')\n    else:\n        print('YES')\n        print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    sw = dict()\n    flag = True\n    for j in lst:\n        sw[j] = sw.get(j, 0) + 1\n        if sw[j] > 2:\n            flag = False\n            break\n    if sw[max(sw.keys())] > 1:\n        print('NO')\n        continue\n    if flag == False:\n        print('NO')\n        continue\n    sw_ = dict()\n    for (d, j) in sw.items():\n        if j == 2:\n            sw_[d] = sw_.get(d, 0) + 1\n    print('YES')\n    for j in sorted(sw.keys()):\n        print(j, end=' ')\n    for j in sorted(sw_.keys(), reverse=True):\n        print(j, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.append(0)\n    l.sort()\n    l1 = []\n    l2 = []\n    c = 0\n    flag = 0\n    for i in range(1, n + 1):\n        if l[i] == l[i - 1]:\n            l2.append(l[i])\n            c += 1\n        else:\n            l1.append(l[i])\n            c = 1\n        if c == 3 or (i == n and c == 2):\n            print('NO')\n            flag = 1\n            break\n    if flag == 0:\n        l2.reverse()\n        l3 = l1 + l2\n        print('YES')\n        print(*l3, sep=' ')", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    y = 0\n    l1 = []\n    l2 = []\n    l1.append(l[0])\n    for i in range(1, n):\n        if l[i] == l[i - 1]:\n            l2.append(l[i])\n        else:\n            l1.append(l[i])\n    for i in range(1, len(l2)):\n        if l2[i] == l2[i - 1]:\n            y = 1\n            break\n    if y == 1:\n        print('NO')\n    else:\n        l2.reverse()\n        if len(l2) != 0:\n            if l1[-1] == l2[0]:\n                print('NO')\n                y = 2\n        if y != 2:\n            print('YES')\n            for i in l1:\n                print(i, end=' ')\n            for i in l2:\n                print(i, end=' ')\n            print('')", "from heapq import heapify, heappop, heappush\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    h1 = set()\n    h2 = set()\n    mx = -10000000000.0\n    mx_cnt = 0\n    flg = 0\n    for i in range(len(a)):\n        a_ = a[i]\n        if a_ > mx:\n            mx = a_\n            mx_cnt = 1\n        elif a_ == mx:\n            mx_cnt += 1\n        if a_ not in h1:\n            h1.add(a_)\n        elif a_ not in h2:\n            h2.add(a_)\n        else:\n            print('NO')\n            flg = 1\n            break\n    if flg == 0:\n        if mx_cnt > 1:\n            print('NO')\n        else:\n            print('YES')\n            h1 = list(h1)\n            h2 = list(h2)\n            h1.sort()\n            h2.sort(reverse=True)\n            h = h1 + h2\n            print(*h)", "def debug(*args, **kwargs):\n    print(*args, dict(**kwargs))\n\ndef printResult(result):\n    if isinstance(result, list):\n        print(*result)\n    else:\n        print(result)\n\ndef main():\n    noOfTests = int(input())\n    for i in range(noOfTests):\n        result = runATest(i)\n        if isinstance(result, tuple):\n            for line in result:\n                printResult(line)\n        else:\n            printResult(result)\n\ndef runATest(_testIndex):\n    count = int(input())\n    if count == 0:\n        return 'NO'\n    aList = [int(x) for x in input().split()]\n    aList.sort()\n    lastNo = 0\n    foundDup = False\n    duplicates = []\n    for i in aList:\n        if i != lastNo:\n            lastNo = i\n            foundDup = False\n        elif foundDup:\n            return 'NO'\n        else:\n            foundDup = True\n            duplicates.insert(0, i)\n    if foundDup:\n        return 'NO'\n    if len(duplicates) == 0:\n        return ('YES', aList)\n    i = count - 1\n    j = 0\n    dupCount = len(duplicates)\n    while i >= 0:\n        if aList[i] == duplicates[j]:\n            del aList[i]\n            i -= 1\n            j += 1\n            if j == dupCount:\n                break\n        i -= 1\n    aList.extend(duplicates)\n    return ('YES', aList)\nmain()", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    arr = [int(hh) for hh in input().split()]\n    a = set()\n    b = list()\n    for i in range(n):\n        if arr[i] not in a:\n            a.add(arr[i])\n        else:\n            b.append(arr[i])\n    a = list(a)\n    a.sort()\n    b.sort(reverse=True)\n    arr = a[:] + b[:]\n    flag = 0\n    for ii in range(len(a) - 1, n - 1):\n        if arr[ii] == arr[ii + 1]:\n            flag = 1\n            print('NO')\n            break\n    if flag == 0:\n        print('YES')\n        print(*arr)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = list(dict.fromkeys(a))\n    if a == sorted(b):\n        print('YES')\n        print(*a)\n        continue\n    c = max(b)\n    if a.count(c) > 1:\n        print('NO')\n        continue\n    l = []\n    r = []\n    p = 1\n    i = 0\n    while i < n:\n        if i < n - 2:\n            if a[i] == a[i + 2]:\n                print('NO')\n                p = 0\n                break\n        if i < n - 1:\n            if a[i] == a[i + 1]:\n                l.append(a[i])\n                r.append(a[i])\n                i += 2\n            else:\n                l.append(a[i])\n                i += 1\n        else:\n            l.append(a[i])\n            i += 1\n    if p:\n        print('YES')\n        print(*l, end=' ')\n        print(*r[::-1])", "from sys import stdin, stdout\nfrom math import gcd, ceil, sqrt\nfrom collections import Counter\nfrom bisect import bisect_left, bisect_right\nii1 = lambda : int(stdin.readline().strip())\nis1 = lambda : stdin.readline().strip()\niia = lambda : list(map(int, stdin.readline().strip().split()))\nisa = lambda : stdin.readline().strip().split()\nmod = 1000000007\ntc = ii1()\nfor _ in range(tc):\n    n = ii1()\n    arr = iia()\n    (a, b) = (set(), set())\n    for i in arr:\n        if i not in a:\n            a.add(i)\n        elif i not in b:\n            b.add(i)\n        else:\n            print('NO')\n            break\n    else:\n        a = sorted(list(a))\n        b = sorted(list(b), reverse=True)\n        if len(a) and len(b) and (a[-1] == b[0]):\n            print('NO')\n        else:\n            print('YES')\n            arr = a + b\n            print(*arr)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    a = list(map(lambda x: int(x), input().split()))\n    hashmap = {}\n    for number in a:\n        if number not in hashmap:\n            hashmap[number] = 0\n        hashmap[number] += 1\n    max_number = max(a)\n    flag = 0\n    for i in hashmap:\n        if hashmap[i] > 2:\n            print('NO')\n            flag = 1\n            break\n        if hashmap[i] == 2 and i == max_number:\n            print('NO')\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n        answer = []\n        hashmap_asc = sorted(list(hashmap.keys()))\n        hashmap_desc = sorted(list(hashmap.keys()), reverse=True)\n        for i in range(0, len(hashmap_asc)):\n            answer.append(hashmap_asc[i])\n            hashmap[hashmap_asc[i]] -= 1\n            if hashmap[hashmap_asc[i]] == 0:\n                del hashmap[hashmap_asc[i]]\n        for j in range(0, len(hashmap_desc)):\n            if hashmap_desc[j] not in hashmap:\n                continue\n            else:\n                answer.append(hashmap_desc[j])\n        for i in answer:\n            print(i, end=' ')\n        print()", "try:\n    t = int(input())\n    while t > 0:\n        t = t - 1\n        n = int(input())\n        arr = [int(hh) for hh in input().split()]\n        a = set()\n        b = list()\n        for i in range(n):\n            if arr[i] not in a:\n                a.add(arr[i])\n            else:\n                b.append(arr[i])\n        a = list(a)\n        a.sort()\n        b.sort(reverse=True)\n        arr = a[:] + b[:]\n        flag = 0\n        for ii in range(len(a) - 1, n - 1):\n            if arr[ii] == arr[ii + 1]:\n                flag = 1\n                print('NO')\n                break\n        if flag == 0:\n            print('YES')\n            print(*arr)\nexcept:\n    pass", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    d = dict()\n    l = list(map(int, input().split()))\n    for i in l:\n        d[i] = d.get(i, 0) + 1\n    if l.count(max(l)) > 1:\n        print('NO')\n        continue\n    for i in d:\n        if d[i] > 2:\n            print('NO')\n            break\n    else:\n        f = []\n        k = []\n        for i in d:\n            if d[i] == 2:\n                f.append(i)\n                k.append(i)\n            else:\n                f.append(i)\n        f.sort()\n        k.sort(reverse=True)\n        print('YES')\n        for i in f:\n            print(i, end=' ')\n        for i in k:\n            print(i, end=' ')\n        print()", "import math\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = a[:]\n    for i in range(n // 2):\n        b[i] = a[2 * i]\n        b[n - i - 1] = a[2 * i + 1]\n    if n % 2 == 1:\n        b[n // 2] = a[n - 1]\n    for i in range(n - 1):\n        if b[i] == b[i + 1]:\n            print('NO')\n            return\n    print('YES')\n    for i in range(n):\n        print(b[i], end=' ')\n    print()\nt = int(input())\nfor _ in range(t):\n    solve()", "ted = int(input())\nfor i in range(ted):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    dict1 = {}\n    state = False\n    lis.sort()\n    for i in range(len(lis)):\n        if lis[i] in dict1:\n            dict1[lis[i]] += 1\n        else:\n            dict1[lis[i]] = 1\n        if dict1[lis[i]] > 2:\n            state = True\n            break\n        if lis[len(lis) - 1] in dict1:\n            if dict1[lis[len(lis) - 1]] > 1:\n                state = True\n                break\n    if state:\n        print('NO')\n        continue\n    inc = []\n    dec = []\n    for (i, j) in dict1.items():\n        if j > 1:\n            inc.append(i)\n            dec.insert(0, i)\n        else:\n            inc.append(i)\n    print('YES')\n    for i in inc + dec:\n        print(i, end=' ')\n    print()", "from os import path\nimport sys\nfrom heapq import heappush, heappop\nfrom functools import cmp_to_key as ctk\nfrom collections import deque, defaultdict as dd\nfrom bisect import bisect, bisect_left, bisect_right, insort, insort_left, insort_right\nfrom itertools import permutations\nfrom datetime import datetime\nfrom math import ceil, sqrt, log, gcd\n\ndef ii():\n    return int(input())\n\ndef si():\n    return input().rstrip()\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\nabc = 'abcdefghijklmnopqrstuvwxyz'\nmod = 1000000007\ninf = float('inf')\nvow = ['a', 'e', 'i', 'o', 'u']\n(dx, dy) = ([-1, 1, 0, 0], [0, 0, 1, -1])\n\ndef bo(i):\n    return ord(i) - ord('a')\nfile = 1\n\ndef solve():\n    for _ in range(ii()):\n        n = ii()\n        a = li()\n        f = dd(int)\n        f1 = 0\n        for i in a:\n            f[i] += 1\n            if f[i] > 2:\n                f1 = 1\n        if f[max(a)] > 1 or f1:\n            print('NO')\n            continue\n        a = [i for i in f.keys()]\n        a.sort()\n        print('YES')\n        print(*a, end=' ')\n        a.reverse()\n        for i in a:\n            if f[i] > 1:\n                print(i, end=' ')\n        print()\nif file:\n    if path.exists('input.txt'):\n        sys.stdin = open('input.txt', 'r')\n        sys.stdout = open('output.txt', 'w')\n    else:\n        input = sys.stdin.readline\nsolve()", "from sys import stdin\n\ndef input():\n    return stdin.readline()\nfor _ in range(int(input())):\n    n = int(input())\n    lst = [int(i) for i in input().split()]\n    dict1 = {}\n    max1 = 0\n    nk = 0\n    lst1 = []\n    lst2 = []\n    for i in lst:\n        if max1 < i:\n            max1 = i\n        if i in dict1:\n            dict1[i] += 1\n            lst2.append(i)\n            if dict1[i] > 2:\n                nk = 1\n                break\n        else:\n            dict1[i] = 1\n            lst1.append(i)\n    if dict1[max1] != 1 or nk == 1:\n        print('NO')\n    else:\n        print('YES')\n        lst1.sort()\n        lst2.sort(reverse=True)\n        for i in lst1:\n            print(i, end=' ')\n        for i in lst2:\n            print(i, end=' ')\n        print()", "import math, sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, deque\ninput = stdin.readline\nI = lambda : int(input())\nli = lambda : list(map(int, input().split()))\n\ndef solve():\n    n = I()\n    a = li()\n    m = max(a)\n    c = Counter(a)\n    b = list(set(a))\n    b.sort()\n    for i in range(len(b) - 1):\n        if c[b[i]] > 2:\n            print('NO')\n            return\n    if c[b[-1]] > 1:\n        print('NO')\n        return\n    print('YES')\n    for i in b:\n        print(i, end=' ')\n        c[i] -= 1\n    for i in range(len(b) - 2, -1, -1):\n        if c[b[i]]:\n            print(b[i], end=' ')\n    print()\nfor _ in range(I()):\n    solve()", "from collections import deque\n\ndef check_function(arr):\n    n = len(arr)\n    if n == 1:\n        return (True, arr)\n    arr.sort()\n    left_deque = deque()\n    right_deque = deque()\n    for el in arr:\n        try:\n            if left_deque[-1] != el:\n                left_deque.append(el)\n            elif right_deque[0] != el:\n                right_deque.appendleft(el)\n            else:\n                return (False, arr)\n        except IndexError:\n            if not left_deque:\n                left_deque.append(el)\n            elif not right_deque:\n                right_deque.appendleft(el)\n    if right_deque and right_deque[0] == left_deque[-1]:\n        return (False, arr)\n    return (True, left_deque + right_deque)\nT = int(input().strip())\nfor _ in range(T):\n    N = int(input().strip())\n    arr = list(map(int, input().strip().split()))\n    ans = check_function(arr)\n    if ans[0]:\n        print('YES')\n        print(' '.join(list(map(str, ans[1]))))\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = []\n    m = arr.copy()\n    a = set()\n    b = []\n    for i in range(n):\n        if arr[i] not in a:\n            a.add(arr[i])\n        else:\n            b.append(arr[i])\n    a = list(a)\n    a.sort()\n    flag = 0\n    b.sort(reverse=True)\n    arr = a[:] + b[:]\n    flag = 0\n    for i in range(len(a) - 1, n - 1):\n        if arr[i] == arr[i + 1]:\n            flag = 1\n            print('NO')\n            break\n    if flag == 0:\n        print('YES')\n        print(*arr)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    d = {}\n    c = 0\n    for i in lst:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d:\n        if d[i] > 2:\n            c = -1\n            break\n    if d[max(lst)] == 2:\n        c = -1\n    if c == 0:\n        lst = sorted(lst)\n        l1 = [str(lst[i]) for i in range(0, len(lst), 2)]\n        l2 = [str(lst[i]) for i in range(1, len(lst), 2)]\n        f = l1 + l2[::-1]\n        print('YES')\n        print(' '.join(f))\n    else:\n        print('NO')", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = Counter(arr)\n    keys = sorted(a.keys())\n    ans = []\n    ind = True\n    for i in keys[:-1]:\n        if a[i] == 1 or a[i] == 2:\n            a[i] -= 1\n            ans.append(i)\n        else:\n            ind = False\n            break\n    if a[keys[-1]] > 1:\n        ind = False\n    else:\n        ans.append(keys[-1])\n    if not ind:\n        print('NO')\n        continue\n    for i in keys[-2::-1]:\n        if a[i] == 1:\n            a[i] -= 1\n            ans.append(i)\n    print('YES')\n    print(' '.join(list(map(str, ans))))", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    a = list(map(int, input().split()))\n    a1 = sorted(a)\n    m = max(a1)\n    q = dict()\n    f = 0\n    b = list()\n    for i in a1:\n        q[i] = q.get(i, 0) + 1\n    for i in q:\n        b.append(i)\n        if i != m and q[i] > 2:\n            f = 1\n        if i == m and q[i] > 1:\n            f = 1\n        q[i] = q[i] - 1\n    b1 = list()\n    for i in q:\n        if q[i] > 0:\n            b1.append(i)\n    b1 = sorted(b1, reverse=True)\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(*b, end=' ')\n        print(*b1)", "limit = 2 * pow(10, 5)\n\ndef get_ans(n, arr):\n    arr.sort()\n    count = [0] * (limit + 1)\n    l1 = []\n    l2 = []\n    max_n = 0\n    for num in arr:\n        max_n = max(max_n, num)\n        if count[num] == 0:\n            l1.append(num)\n        elif count[num] == 1:\n            l2.append(num)\n        else:\n            print('NO')\n            return\n        count[num] += 1\n    if count[max_n] > 1:\n        print('NO')\n        return\n    else:\n        print('YES')\n        print(*l1, *reversed(l2))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    get_ans(n, arr)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = {}\n    for i in a:\n        try:\n            if d[i]:\n                d[i] += 1\n        except KeyError:\n            d[i] = 1\n    z = 0\n    for i in d:\n        if d[i] > 2:\n            z = 1\n            break\n        elif d[i] == 2:\n            z = 2\n    if z == 1:\n        print('NO')\n    elif z == 0:\n        print('YES')\n        for i in a:\n            print(i, end=' ')\n        print()\n    elif d[max(a)] == 1:\n        print('YES')\n        for i in d:\n            if d[i] >= 1:\n                print(i, end=' ')\n                d[i] -= 1\n        a = []\n        for i in d:\n            if d[i] >= 1:\n                a.append(i)\n                d[i] -= 1\n        for i in range(len(a) - 1, -1, -1):\n            print(a[i], end=' ')\n        print()\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    na = [arr[0]] * n\n    l = 1\n    r = n - 1\n    for i in range(1, n):\n        if arr[i] == arr[i - 1]:\n            na[r] = arr[i]\n            r -= 1\n        else:\n            na[l] = arr[i]\n            l += 1\n    for i in range(1, n):\n        if na[i - 1] == na[i]:\n            print('NO')\n            break\n    else:\n        print('YES')\n        print(*na, sep=' ')", "try:\n    for i in range(int(input())):\n        n = int(input())\n        arr = [int(x) for x in input().split()]\n        d = {}\n        for i in arr:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n        ans = 0\n        c = 0\n        for x in sorted(d.keys()):\n            if d[x] == 2 and c == len(d) - 1:\n                ans = 1\n                break\n            elif d[x] > 2:\n                ans = 1\n                break\n            else:\n                c += 1\n        if ans == 1:\n            print('NO')\n        else:\n            li = []\n            for x in sorted(d.keys()):\n                li.append(x)\n            for x in reversed(sorted(d.keys())):\n                if d[x] == 2:\n                    li.append(x)\n            print('YES')\n            for x in li:\n                print(x, end=' ')\n            print()\nexcept:\n    pass", "try:\n    for i in range(int(input())):\n        n = int(input())\n        arr = [int(x) for x in input().split()]\n        d = {}\n        for i in arr:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n        ans = 0\n        c = 0\n        for x in sorted(d.keys()):\n            if d[x] == 2 and c == len(d) - 1:\n                ans = 1\n                break\n            elif d[x] > 2:\n                ans = 1\n                break\n            else:\n                c += 1\n        if ans == 1:\n            print('NO')\n        else:\n            li = []\n            for x in sorted(d.keys()):\n                li.append(x)\n            for x in reversed(sorted(d.keys())):\n                if d[x] == 2:\n                    li.append(x)\n            print('YES')\n            for x in li:\n                print(x, end=' ')\n            print()\nexcept:\n    pass", "def check():\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = set()\n    d = list()\n    for q in range(n):\n        if a[q] in c:\n            d.append(a[q])\n        else:\n            c.add(a[q])\n    d.sort(reverse=True)\n    c = list(c)\n    c.sort()\n    a = c[:] + d[:]\n    flag = 0\n    for q in range(len(c) - 1, n - 1):\n        if a[q] == a[q + 1]:\n            flag = 1\n            print('NO')\n            break\n    if flag == 0:\n        print('YES')\n        print(*a)\nfor t in range(int(input())):\n    check()", "def check():\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = set()\n    d = list()\n    for q in range(n):\n        if a[q] in c:\n            d.append(a[q])\n        else:\n            c.add(a[q])\n    d.sort(reverse=True)\n    c = list(c)\n    c.sort()\n    a = c[:] + d[:]\n    for q in range(len(c) - 1, n - 1):\n        if a[q] == a[q + 1]:\n            print('NO')\n            return\n    print('YES')\n    print(*a)\nfor t in range(int(input())):\n    check()", "test = int(input())\nwhile test != 0:\n    size = int(input())\n    numbers = list(map(int, input().split()))\n    container = []\n    double = []\n    sorted_size = sorted(numbers)\n    flag = False\n    for j in sorted_size:\n        if len(container) == 0 or j != container[-1]:\n            container.append(j)\n        elif len(double) == 0 or j != double[-1]:\n            double.append(j)\n        else:\n            flag = True\n            break\n    double.reverse()\n    if flag or (len(double) != 0 and container[-1] == double[0]):\n        print('NO')\n    else:\n        print('YES')\n        print(*container + double)\n    test -= 1", "test = int(input())\nwhile test != 0:\n    size = int(input())\n    numbers = list(map(int, input().split()))\n    container = []\n    sorted_size = sorted(numbers)\n    random = 0\n    z = 0\n    idx = 0\n    double = []\n    for j in sorted_size:\n        if idx == 0 or j != container[-1]:\n            container.append(j)\n            random = 0\n            idx += 1\n            continue\n        if j == container[-1] and random >= 1:\n            z = 2\n            break\n        if j == container[-1] and random == 0:\n            random += 1\n            z = 1\n            double.append(j)\n            idx += 1\n            continue\n    double.reverse()\n    if z == 2 or (z == 1 and container[-1] == double[0]):\n        print('NO')\n    else:\n        print('YES')\n        print(*container + double)\n    test -= 1", "limit = 2 * pow(10, 5)\n\ndef get_ans(n, arr):\n    arr.sort()\n    count = [0] * (limit + 1)\n    l1 = []\n    l2 = []\n    max_n = 0\n    for num in arr:\n        max_n = max(max_n, num)\n        if count[num] == 0:\n            l1.append(num)\n        elif count[num] == 1:\n            l2.append(num)\n        else:\n            print('NO')\n            return\n        count[num] += 1\n    if count[max_n] > 1:\n        print('NO')\n        return\n    else:\n        print('YES')\n        print(*l1, *reversed(l2))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    get_ans(n, arr)", "from collections import Counter, deque\nfor T in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    flag = True\n    count = Counter(A)\n    if count[max(A)] > 1 or count.most_common(1)[0][1] > 2:\n        print('NO')\n        flag = False\n    if flag:\n        print('YES')\n        nums = sorted(count.keys())\n        ans = deque()\n        ans.append(nums.pop())\n        while nums:\n            curr = nums.pop()\n            ans.append(curr)\n            if count[curr] == 2:\n                ans.appendleft(curr)\n        print(*ans)", "n = int(input())\nfor p in range(n):\n    xx = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    flag = 0\n    aa = a.copy()\n    aa.sort()\n    i = 0\n    while i < xx - 2:\n        if aa[len(aa) - 1] == aa[len(aa) - 2] or aa[i] == aa[i + 2]:\n            flag = 1\n            break\n        elif aa[i] == aa[i + 1]:\n            b.append(aa[i + 1])\n            aa.pop(i + 1)\n        xx = len(aa)\n        i += 1\n    b.sort(reverse=True)\n    if flag == 0:\n        print('YES')\n        print(*aa, end=' ')\n        print(*b)\n    else:\n        print('NO')", "n = int(input())\nfor p in range(n):\n    xx = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    flag = 0\n    aa = a.copy()\n    aa.sort()\n    i = 0\n    while i < xx - 2:\n        if aa[len(aa) - 1] == aa[len(aa) - 2] or aa[i] == aa[i + 2]:\n            flag = 1\n        elif aa[i] == aa[i + 1]:\n            b.append(aa[i + 1])\n            aa.pop(i + 1)\n        xx = len(aa)\n        i += 1\n    b.sort(reverse=True)\n    if flag == 0:\n        print('YES')\n        print(*aa, end=' ')\n        print(*b)\n    else:\n        print('NO')", "def list_input():\n    return list(map(int, input().split()))\n\ndef multiple_input():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    n = int(input())\n    a = list_input()\n    a.sort()\n    d = {}\n    for i in a:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    ans = [0] * n\n    flag = 0\n    (j, k) = (0, n - 1)\n    for i in d:\n        if d[i] > 2:\n            flag = 1\n            break\n        elif d[i] == 2:\n            if j == k - 1:\n                flag = 1\n                break\n            ans[j] = i\n            ans[k] = i\n            j += 1\n            k -= 1\n        else:\n            ans[j] = i\n            j += 1\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(*ans)", "test = int(input())\nfor tes in range(test):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    freq = {}\n    flag = True\n    for num in arr:\n        if num in freq:\n            freq[num] += 1\n            if freq[num] > 2:\n                flag = False\n                break\n        else:\n            freq[num] = 1\n    if freq[max(list(freq.keys()))] > 1:\n        flag = False\n    if flag:\n        print('YES')\n        rem = []\n        for num in sorted(list(freq.keys())):\n            print(num, end=' ')\n            if freq[num] == 2:\n                rem.append(num)\n        for num in reversed(sorted(rem)):\n            print(num, end=' ')\n        print()\n    else:\n        print('NO')", "def ques2(n, a):\n    flag = 1\n    b = []\n    f = []\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n        if d[i] > 2:\n            flag = 0\n            break\n        elif d[i] == 2:\n            b.insert(0, i)\n        else:\n            f.append(i)\n    f = sorted(f)\n    b = sorted(b, reverse=True)\n    if flag == 0 or (b != [] and f[-1] == b[0]):\n        print('NO')\n    else:\n        print('YES')\n        print(*f, *b)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = ques2(n, a)\n    ans", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    y = Counter(x)\n    u = 0\n    for j in y:\n        if y[j] > 2:\n            u = 1\n            break\n    if u == 1:\n        print('NO')\n    else:\n        s = list(set(x))\n        s.sort()\n        am = s.copy()\n        bm = []\n        for k in y:\n            if y[k] > 1:\n                bm.append(k)\n        bm.sort()\n        bm.reverse()\n        z = am + bm\n        c = 0\n        d = 0\n        k = 0\n        for i in range(len(z) - 1):\n            if z[i + 1] > z[i]:\n                if k == 1:\n                    break\n                else:\n                    c += 1\n            else:\n                k = 1\n                if z[i + 1] < z[i]:\n                    d += 1\n                else:\n                    break\n        if d == 0:\n            c += 1\n        else:\n            d = d + 1\n        if c + d == n:\n            print('YES')\n            print(*z)\n        else:\n            print('NO')", "from math import *\nfrom collections import *\nfrom itertools import *\nfrom functools import *\nfrom bisect import *\nfrom heapq import *\nfrom operator import *\nfrom sys import *\nsetrecursionlimit(100000000)\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    l2 = []\n    c = Counter(l)\n    for (x, y) in c.items():\n        if y > 2:\n            print('NO')\n            break\n        if y == 2:\n            l1.append(x)\n        l2.append(x)\n    else:\n        if max(l2) in l1:\n            print('NO')\n        else:\n            l2.sort()\n            l1.sort(reverse=True)\n            print('YES')\n            print(*l2, *l1)", "try:\n    t = int(input())\n    while t > 0:\n        t = t - 1\n        n = int(input())\n        arr = [int(h) for h in input().split()]\n        a = set()\n        b = list()\n        for i in range(n):\n            if arr[i] not in a:\n                a.add(arr[i])\n            else:\n                b.append(arr[i])\n        a = list(a)\n        a.sort()\n        b.sort(reverse=True)\n        arr = a[:] + b[:]\n        flag = 0\n        for i in range(len(a) - 1, n - 1):\n            if arr[i] == arr[i + 1]:\n                flag = 1\n                print('NO')\n                break\n        if flag == 0:\n            print('YES')\n            print(*arr)\nexcept:\n    pass", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l)\n    d = {}\n    lala = []\n    for i in l:\n        if i in d:\n            d[i] += 1\n            lala.append(i)\n        else:\n            d[i] = 1\n    lala = sorted(lala, reverse=True)\n    if max(d.values()) > 2 or d[l[-1]] == 2:\n        print('NO')\n    else:\n        print('YES')\n        for i in d:\n            if d[i] != 0:\n                print(i, end=' ')\n                d[i] -= 1\n        for i in lala:\n            print(i, end=' ')\n        print('')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = []\n    b = []\n    flag = True\n    ans.append(a[0])\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            if i != n - 1:\n                if a[i] == a[i + 1]:\n                    flag = False\n                    print('NO')\n                    break\n                else:\n                    b.append(a[i])\n            else:\n                flag = False\n                print('NO')\n                break\n        else:\n            ans.append(a[i])\n    b.sort(reverse=True)\n    if flag:\n        print('YES')\n        if b:\n            print(*ans, end=' ')\n            print(*b)\n        else:\n            print(*ans)", "for _ in range(int(input())):\n    N = int(input())\n    arr = map(int, input().split())\n    arr = sorted(arr)\n    mp = dict()\n    for i in arr:\n        if i in mp:\n            mp[i] += 1\n        else:\n            mp[i] = 1\n        if mp[i] == 3:\n            print('NO')\n            break\n    else:\n        if mp[arr[-1]] == 2:\n            print('NO')\n        else:\n            print('YES')\n            for i in list(mp.items())[:]:\n                print(i[0], end=' ')\n                if mp[i[0]] == 1:\n                    del mp[i[0]]\n            for i in list(mp.items())[::-1]:\n                print(i[0], end=' ')\n            print()", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    a = list(map(int, input().split()))\n    a1 = sorted(a)\n    m = max(a1)\n    q = dict()\n    f = 0\n    b = list()\n    for i in a1:\n        q[i] = q.get(i, 0) + 1\n    for i in q:\n        b.append(i)\n        if i != m and q[i] > 2:\n            f = 1\n        if i == m and q[i] > 1:\n            f = 1\n        q[i] = q[i] - 1\n    b1 = list()\n    for i in q:\n        if q[i] > 0:\n            b1.append(i)\n    b1 = sorted(b1, reverse=True)\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(*b, end=' ')\n        print(*b1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    l.sort()\n    p = list(set(l))\n    p.sort()\n    f = 0\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    if len(d) == n:\n        print('YES')\n        for i in l:\n            print(i, end=' ')\n        print()\n    else:\n        t = p[:]\n        for i in range(len(t) - 1, -1, -1):\n            d[t[i]] -= 1\n            if i == len(t) - 1:\n                if d[t[i]] != 0:\n                    f = 1\n                    break\n            elif d[t[i]] >= 2:\n                f = 1\n                break\n            elif d[t[i]] != 0:\n                t.append(t[i])\n        if f == 1:\n            print('NO')\n        else:\n            print('YES')\n            for i in t:\n                print(i, end=' ')\n            print()", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = [0] * N\n    A.sort()\n    B[0] = A[0]\n    flag = 1\n    count = 0\n    j = 1\n    i = 1\n    k = N - 1\n    while i < N:\n        if A[i] != A[i - 1]:\n            count = 0\n            B[j] = A[i]\n            j += 1\n        elif count >= 1:\n            flag = 0\n            break\n        else:\n            count += 1\n            B[k] = A[i]\n            k -= 1\n        i += 1\n    for i in range(1, N):\n        if B[i] == B[i - 1]:\n            flag = 0\n            break\n    if not flag:\n        print('NO')\n    else:\n        print('YES')\n        for i in B:\n            print(i, end=' ')\n        print()", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    dic = {}\n    flag = 0\n    A.sort()\n    for i in A:\n        if i in dic:\n            dic[i] += 1\n            if dic[i] > 2:\n                print('NO')\n                flag = 1\n                break\n        else:\n            dic[i] = 1\n    if flag == 0:\n        ans = []\n        temp = []\n        for i in dic:\n            if dic[i] == 2:\n                temp.append(i)\n            ans.append(i)\n        temp.sort()\n        temp.reverse()\n        if temp:\n            if ans[-1] > temp[0]:\n                for j in range(len(temp)):\n                    ans.append(temp[j])\n                print('YES')\n                print(*ans)\n            else:\n                print('NO')\n        else:\n            print('YES')\n            print(*A)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cd = Counter(arr)\n    if cd[max(arr)] > 1:\n        print('NO')\n    elif cd.most_common(1)[0][1] > 2:\n        print('NO')\n    else:\n        uni = sorted(list(set(arr)))\n        ans = ' '.join(list(map(str, uni)))\n        for i in uni[::-1]:\n            if cd[i] > 1:\n                ans += ' ' + str(i)\n        print('YES')\n        print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    lst = list(map(int, input().split()))\n    inc = set()\n    (dec, flag) = ([], 0)\n    for i in range(n):\n        if lst[i] not in inc:\n            inc.add(lst[i])\n        else:\n            dec.append(lst[i])\n    inc = list(inc)\n    inc.sort()\n    dec.sort(reverse=True)\n    arr = inc + dec\n    for i in range(len(inc) - 1, len(arr) - 1):\n        if arr[i] == arr[i + 1]:\n            flag = 1\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        print(*arr)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    lst = list(map(int, input().split()))\n    inc = set()\n    (dec, flag) = ([], 0)\n    for i in range(n):\n        if lst[i] not in inc:\n            inc.add(lst[i])\n        else:\n            dec.append(lst[i])\n    inc = list(inc)\n    inc.sort()\n    dec.sort(reverse=True)\n    arr = inc + dec\n    for i in range(len(inc) - 1, len(arr) - 1):\n        if arr[i] == arr[i + 1]:\n            flag = 1\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        print(*arr)\n    t -= 1"]