["for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w[:] = sorted(w)\n    a1 = sum(w[:k])\n    b1 = sum(w[k:])\n    x = abs(a1 - b1)\n    w = w[::-1]\n    a2 = sum(w[:k])\n    b2 = sum(w[k:])\n    y = abs(a2 - b2)\n    print(max(x, y))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    l1 = l[:k]\n    l2 = l[k:]\n    l = l[::-1]\n    l3 = l[:k]\n    l4 = l[k:]\n    s1 = abs(sum(l1) - sum(l2))\n    s2 = abs(sum(l3) - sum(l4))\n    print(max(s1, s2))", "def difference(arr, U):\n    arr[:] = sorted(arr)\n    NENU1 = sum(arr[:U])\n    NANNA1 = sum(arr[U:])\n    x = abs(NANNA1 - NENU1)\n    arr = arr[::-1]\n    NENU2 = sum(arr[:U])\n    NANNA2 = sum(arr[U:])\n    y = abs(NANNA2 - NENU2)\n    return max(x, y)\nh = int(input())\nfor i in range(h):\n    (N, K) = map(int, input().split())\n    W = list(map(int, input().split()))\n    print(difference(W, K))", "def difference(arr, k):\n    arr[:] = sorted(arr)\n    son1 = sum(arr[:k])\n    father1 = sum(arr[k:])\n    x = abs(father1 - son1)\n    arr = arr[::-1]\n    son2 = sum(arr[:k])\n    father2 = sum(arr[k:])\n    y = abs(father2 - son2)\n    return max(x, y)\nh = int(input())\nfor i in range(h):\n    (N, K) = map(int, input().split())\n    W = list(map(int, input().split()))\n    print(difference(W, K))", "def difference(arr, k):\n    arr[:] = sorted(arr)\n    son1 = sum(arr[:k])\n    father1 = sum(arr[k:])\n    x = abs(father1 - son1)\n    arr = arr[::-1]\n    son2 = sum(arr[:k])\n    father2 = sum(arr[k:])\n    y = abs(father2 - son2)\n    return max(x, y)\nT = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    W = list(map(int, input().split()))\n    print(difference(W, K))", "def difference(arr, k):\n    arr[:] = sorted(arr)\n    son1 = sum(arr[:k])\n    father1 = sum(arr[k:])\n    x = abs(father1 - son1)\n    arr = arr[::-1]\n    son2 = sum(arr[:k])\n    father2 = sum(arr[k:])\n    y = abs(father2 - son2)\n    return max(x, y)\nT = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    W = list(map(int, input().split()))\n    print(difference(W, K))", "def difference(arr, k):\n    arr[:] = sorted(arr)\n    son1 = sum(arr[:k])\n    father1 = sum(arr[k:])\n    x = abs(father1 - son1)\n    arr = arr[::-1]\n    son2 = sum(arr[:k])\n    father2 = sum(arr[k:])\n    y = abs(father2 - son2)\n    return max(x, y)\nT = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    W = list(map(int, input().split()))\n    print(difference(W, K))", "def difference(arr, k):\n    arr[:] = sorted(arr)\n    son1 = sum(arr[:k])\n    father1 = sum(arr[k:])\n    x = abs(father1 - son1)\n    arr = arr[::-1]\n    son2 = sum(arr[:k])\n    father2 = sum(arr[k:])\n    y = abs(father2 - son2)\n    return max(x, y)\nT = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    W = list(map(int, input().split()))\n    print(difference(W, K))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w.sort()\n    s1 = sum(w[0:k])\n    s2 = sum(w[k:n])\n    d1 = abs(s1 - s2)\n    s3 = sum(w[n - k:n])\n    s4 = sum(w[0:n - k])\n    d2 = abs(s3 - s4)\n    print(max(d1, d2))", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    c = sorted(c)\n    s1 = sum(c[0:b])\n    s2 = sum(c[b:a])\n    d1 = abs(s1 - s2)\n    s3 = sum(c[a - b:a])\n    s4 = sum(c[0:a - b])\n    d2 = abs(s3 - s4)\n    print(max(d1, d2))", "t = int(input())\nfor xxx in range(t):\n    (n, k) = map(int, input().split())\n    weights = list(map(int, input().split()))\n    weights.sort()\n    son = sum(weights[0:k])\n    father = sum(weights[k:])\n    father2 = sum(weights[n - k:n])\n    son2 = sum(weights[0:n - k])\n    diff = father - son\n    diff2 = father2 - son2\n    print(max(diff2, diff))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    w = sorted(list(map(int, input().split())))\n    d1 = abs(sum(w[:k]) - sum(w[k:]))\n    d2 = abs(sum(w[:n - k]) - sum(w[n - k:]))\n    print(max(d1, d2))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    w = sorted(list(map(int, input().split())))\n    d1 = abs(sum(w[:k]) - sum(w[k:]))\n    d2 = abs(sum(w[:n - k]) - sum(w[n - k:]))\n    print(max(d1, d2))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    w = sorted(list(map(int, input().split())))\n    d1 = abs(sum(w[:k]) - sum(w[k:]))\n    d2 = abs(sum(w[:n - k]) - sum(w[n - k:]))\n    print(max(d1, d2))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = sorted(map(int, input().split()))\n    w.sort()\n    d1 = abs(sum(w[:k]) - sum(w[k:]))\n    d2 = abs(sum(w[:n - k]) - sum(w[n - k:]))\n    print(max(d1, d2))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = sorted(map(int, input().split()))\n    w.sort()\n    d1 = abs(sum(w[:k]) - sum(w[k:]))\n    d2 = abs(sum(w[:n - k]) - sum(w[n - k:]))\n    print(max(d1, d2))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    d1 = abs(sum(a[:m]) - sum(a[m:]))\n    d2 = abs(sum(a[:n - m]) - sum(a[n - m:]))\n    print(max(d1, d2))", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    W.sort()\n    if K <= N - K:\n        kw = sum(W[0:K])\n        cw = sum(W[K:])\n    else:\n        kw = sum(W[0:N - K])\n        cw = sum(W[N - K:])\n    print(cw - kw)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w.sort(reverse=True)\n    x = min(k, n - k)\n    f = sum(w[0:n - x:1])\n    s = sum(w[n - x:n:1])\n    print(f - s)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    d = min(k, n - k)\n    s = l[n - d:n]\n    s1 = sum(s)\n    f = l[0:n - d]\n    s2 = sum(f)\n    print(s2 - s1)", "t = int(input())\nfor i in range(t):\n    (n, l) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    k = min(l, n - l)\n    a.sort(reverse=True)\n    father = a[0:n - k:1]\n    s1 = sum(father)\n    son = a[n - k:n:1]\n    s2 = sum(son)\n    print(s1 - s2)", "q = int(input())\nwhile q > 0:\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l.sort()\n    k = min(n - k, k)\n    m = []\n    for i in range(k):\n        m.append(l[i])\n    print(abs(sum(l) - 2 * sum(m)))\n    q = q - 1", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    l = sorted(list(map(int, input().split())))\n    k = min(n - k, k)\n    j = []\n    r = []\n    for i in range(0, k):\n        j.append(l[i])\n    for y in range(k, n):\n        r.append(l[y])\n    print(abs(sum(r) - sum(j)))\n    t = t - 1", "T = int(input())\nfor _ in range(T):\n    (N, X) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    X = min(N - X, X)\n    print(abs(sum(arr[X:]) - sum(arr[:X])))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    k = min(n - k, k)\n    print(abs(sum(lst[:k]) - sum(lst[k:])))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    w = sorted(list(map(int, input().split(' '))))\n    print(abs(sum(w[min(k, n - k):]) - sum(w[:min(k, n - k)])))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = sorted(list(map(int, input().split())))\n    m = min(k, n - k)\n    print(abs(sum(w[m:]) - sum(w[:m])))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    m = min(b, a - b)\n    c = sum(l[:m])\n    d = sum(l[m:])\n    print(abs(d - c))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    l.sort()\n    k = min(n - k, k)\n    print(sum(l[k:]) - sum(l[:k]))", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    weights = sorted(list(map(int, input().split())))\n    total = sum(weights)\n    firstSum = sum(weights[0:k])\n    secondSum = sum(weights[0:n - k])\n    if firstSum >= secondSum:\n        firstlastsum = total - firstSum\n        if secondSum > firstlastsum:\n            final = firstlastsum\n        else:\n            final = secondSum\n    else:\n        secondLastSum = total - secondSum\n        if firstSum >= secondLastSum:\n            final = secondLastSum\n        else:\n            final = firstSum\n    print(total - 2 * final)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = min(k, n - k)\n    a = l[:c]\n    b = l[c:]\n    print(abs(sum(a) - sum(b)))", "T = int(input())\nfor i in range(T):\n    (N, K) = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    W.sort()\n    if K <= N - K:\n        kw = sum(W[0:K])\n        cw = sum(W[K:])\n    else:\n        kw = sum(W[0:N - K])\n        cw = sum(W[N - K:])\n    print(cw - kw)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(list(map(int, input().split())))\n    if n // 2 >= k:\n        son = l[:k]\n        dad = l[k:]\n        print(sum(dad) - sum(son))\n    else:\n        dad = l[n - k:]\n        son = l[:n - k]\n        print(sum(dad) - sum(son))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(list(map(int, input().split())))\n    if n // 2 >= k:\n        son = l[:k]\n        dad = l[k:]\n        print(sum(dad) - sum(son))\n    else:\n        dad = l[n - k:]\n        son = l[:n - k]\n        print(sum(dad) - sum(son))", "for t in range(int(input())):\n    (N, K) = map(int, input().split())\n    arr = list(map(int, input().split()))[:N]\n    F = min(K, N - K)\n    min_weight = sorted(arr)[:F]\n    max_weight = sorted(arr)[F:]\n    min_weight_sum = sum(min_weight)\n    max_weight_sum = sum(max_weight)\n    print(abs(max_weight_sum - min_weight_sum))", "def bubbleSort(arr):\n    n = len(arr)\n    for i in range(n):\n        for j in range(0, n - i - 1):\n            if arr[j] > arr[j + 1]:\n                (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n\ndef solve(arr, n):\n    bubbleSort(arr)\n    s = sum(arr)\n    s1 = sum(arr[:n])\n    arr.reverse()\n    s2 = sum(arr[:n])\n    print(max(abs(s1 - (s - s1)), abs(s2 - (s - s2))))\ntt = int(input())\nwhile tt:\n    tt = tt - 1\n    (k, n) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    solve(arr, n)", "def bubbleSort(arr):\n    n = len(arr)\n    for i in range(n):\n        for j in range(0, n - i - 1):\n            if arr[j] > arr[j + 1]:\n                (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n\ndef solve(arr, n):\n    bubbleSort(arr)\n    s = sum(arr)\n    s1 = sum(arr[:n])\n    arr.reverse()\n    s2 = sum(arr[:n])\n    print(max(abs(s1 - (s - s1)), abs(s2 - (s - s2))))\ntt = int(input())\nwhile tt:\n    tt = tt - 1\n    (k, n) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    solve(arr, n)", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w.sort()\n    (g1, g2, dad, kid) = (0, 0, 0, 0)\n    tot = sum(w)\n    for i in range(k):\n        g1 += w[i]\n        g2 += w[n - 1 - i]\n    if tot - 2 * g1 > 2 * g2 - tot:\n        print(tot - 2 * g1)\n    else:\n        print(2 * g2 - tot)", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w.sort()\n    (g1, g2, dad, kid) = (0, 0, 0, 0)\n    tot = sum(w)\n    for i in range(k):\n        g1 += w[i]\n        g2 += w[n - 1 - i]\n    if tot - 2 * g1 > 2 * g2 - tot:\n        print(tot - 2 * g1)\n    else:\n        print(2 * g2 - tot)", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w.sort()\n    (g1, g2, dad, kid) = (0, 0, 0, 0)\n    tot = sum(w)\n    for i in range(k):\n        g1 += w[i]\n        g2 += w[n - 1 - i]\n    if tot - 2 * g1 > 2 * g2 - tot:\n        print(tot - 2 * g1)\n    else:\n        print(2 * g2 - tot)", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w.sort()\n    (g1, g2, dad, kid) = (0, 0, 0, 0)\n    tot = sum(w)\n    for i in range(k):\n        g1 += w[i]\n        g2 += w[n - 1 - i]\n    if tot - 2 * g1 > 2 * g2 - tot:\n        print(tot - 2 * g1)\n    else:\n        print(2 * g2 - tot)", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w.sort()\n    (g1, g2, dad, kid) = (0, 0, 0, 0)\n    tot = sum(w)\n    for i in range(k):\n        g1 += w[i]\n        g2 += w[n - 1 - i]\n    if tot - 2 * g1 > 2 * g2 - tot:\n        print(tot - 2 * g1)\n    else:\n        print(2 * g2 - tot)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    sum = 0\n    for i in range(n):\n        sum += arr[i]\n    start = 0\n    end = 0\n    for i in range(k):\n        start += arr[i]\n        end += arr[n - 1 - i]\n    if sum - 2 * start > 2 * end - sum:\n        print(sum - 2 * start)\n    else:\n        print(2 * end - sum)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    if K <= N // 2:\n        print(sum(A[K:]) - sum(A[:K]))\n    else:\n        print(sum(A[-K:]) - sum(A[:-K]))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w = sorted(w, reverse=True)\n    f = max(k, n - k)\n    fw = sum(w[:f])\n    cw = sum(w[f:])\n    print(fw - cw)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w = sorted(w, reverse=True)\n    f = max(k, n - k)\n    fw = sum(w[:f])\n    cw = sum(w[f:])\n    print(fw - cw)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    s = []\n    c = min(k, n - k)\n    for i in range(c):\n        x = min(w)\n        s.append(x)\n        w.pop(w.index(x))\n    print(sum(w) - sum(s))", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    sum = 0\n    i = 0\n    if n - k < k:\n        k = n - k\n    while k > 0:\n        sum += l[i]\n        i += 1\n        k -= 1\n    sum2 = 0\n    for m in range(i, len(l)):\n        sum2 += l[m]\n    print(sum2 - sum)\n    t -= 1", "def maxPossDiff(arr, k):\n    arr.sort()\n    firstn = abs(sum(arr[k:]) - sum(arr[:k]))\n    secondn = abs(sum(arr[:n - k]) - sum(arr[n - k:]))\n    return max(firstn, secondn)\nt = int(input())\nfor _ in range(t):\n    x = input().split()\n    n = int(x[0])\n    k = int(x[1])\n    arr = input().split()\n    arr = [int(i) for i in arr]\n    print(maxPossDiff(arr, k))", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    sum = 0\n    i = 0\n    if n - k < k:\n        k = n - k\n    while k > 0:\n        sum += l[i]\n        i += 1\n        k -= 1\n    sum2 = 0\n    for m in range(i, len(l)):\n        sum2 += l[m]\n    print(sum2 - sum)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    sum = 0\n    i = 0\n    if n - k < k:\n        k = n - k\n    while k > 0:\n        sum += l[i]\n        i += 1\n        k -= 1\n    sum2 = 0\n    for m in range(i, len(l)):\n        sum2 += l[m]\n    print(sum2 - sum)\n    t -= 1", "for i in range(int(input())):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    weights = list(map(int, input().split()))\n    weights.sort()\n    if n - k < k:\n        k = n - k\n    son = weights[:k]\n    father = weights[k:]\n    print(sum(father) - sum(son))", "for i in range(int(input())):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    weights = list(map(int, input().split()))\n    weights.sort()\n    if n - k < k:\n        k = n - k\n    son = weights[:k]\n    father = weights[k:]\n    print(sum(father) - sum(son))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    array = list(map(int, input().strip().split()))\n\n    def solve(array, k):\n        array.sort()\n        s = sum(array)\n        s1 = sum(array[:k])\n        array.sort(reverse=True)\n        s2 = sum(array[:k])\n        return max(abs(s1 - (s - s1)), abs(s2 - (s - s2)))\n    print(solve(array, k))", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    f = 0\n    s = 0\n    if K <= N // 2:\n        for i in range(N):\n            if i < K:\n                s += l[i]\n            else:\n                f += l[i]\n    else:\n        for i in range(N):\n            if i < K:\n                f += l[N - i - 1]\n            else:\n                s += l[N - i - 1]\n    print(f - s)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    f = 0\n    s = 0\n    if K <= N // 2:\n        for i in range(N):\n            if i < K:\n                s += l[i]\n            else:\n                f += l[i]\n    else:\n        for i in range(N):\n            if i < K:\n                f += l[N - i - 1]\n            else:\n                s += l[N - i - 1]\n    print(f - s)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    f = 0\n    s = 0\n    if K <= N // 2:\n        for i in range(N):\n            if i < K:\n                s += l[i]\n            else:\n                f += l[i]\n    else:\n        for i in range(N):\n            if i < K:\n                f += l[N - i - 1]\n            else:\n                s += l[N - i - 1]\n    print(f - s)", "for i in range(int(input())):\n    (n, k) = [int(x) for x in input().split(' ')]\n    a = [int(x) for x in input().split(' ')]\n    a.sort()\n    if n - k < k:\n        k = n - k\n    b = a[0:k]\n    c = a[k:]\n    print(sum(c) - sum(b))", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    sum1 = 0\n    sum2 = 0\n    if a - b < b:\n        b = a - b\n    sum1 = sum(l[:b])\n    sum2 = sum(l[b:])\n    print(sum2 - sum1)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    total = sum(w)\n    w = sorted(w)\n    sum1 = 0\n    kid = min(sum(w[:k]), total - sum(w[n - k:]))\n    chef = total - kid\n    print(chef - kid)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    wei = list(map(int, input().split()))\n    total = sum(wei)\n    wei.sort()\n    kid = min(sum(wei[:k]), total - sum(wei[n - k:]))\n    chef = total - kid\n    print(chef - kid)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    res = sum(l)\n    l.sort()\n    if n - k < k:\n        k = n - k\n    sum1 = sum(l[:k])\n    sum2 = sum(l[k:])\n    print(sum2 - sum1)\n    t -= 1", "T = int(input())\nfor i in range(T):\n    (x, y) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst = sorted(lst)\n    if x - y < y:\n        y = x - y\n    sum1 = sum(lst[:y])\n    sum2 = sum(lst[y:])\n    print(sum2 - sum1)", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    sum1 = 0\n    sum2 = 0\n    if n - k < k:\n        k = n - k\n    sum1 = sum(a[:k])\n    sum2 = sum(a[k:])\n    print(sum2 - sum1)", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    sum1 = 0\n    sum2 = 0\n    if n - k < k:\n        k = n - k\n    sum1 = sum(a[:k])\n    sum2 = sum(a[k:])\n    print(sum2 - sum1)", "t = int(input())\nwhile t > 0:\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    if n - k < k:\n        k = n - k\n    array = sorted(list(map(int, input().split())))\n    kid = array[:k]\n    chef = array[k:]\n    kiditemweight = sum(kid)\n    chefitemweight = sum(chef)\n    print(chefitemweight - kiditemweight)\n    t -= 1", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    L = list(map(int, input().split()))\n    cN = min(K, N - K)\n    A = 0\n    for i in range(cN):\n        m = min(L)\n        L.remove(m)\n        A += m\n    print(sum(L) - A)", "tc = int(input())\nfor i in range(tc):\n    (n, k) = map(int, input().split())\n    ws = list(map(int, input().split()))\n    ws.sort()\n    mw = max(abs(sum(ws[0:k]) - sum(ws[k:])), abs(sum(ws[n - 1:n - k - 1:-1]) - sum(ws[n - k - 1::-1])))\n    print(mw)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    temp1 = sum(arr[k:]) - sum(arr[:k])\n    temp2 = sum(arr[n - 1:n - k - 1:-1]) - sum(arr[n - k - 1::-1])\n    print(max(temp1, temp2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = [int(i) for i in input().split()]\n    w.sort()\n    m1 = sum(w[k:]) - sum(w[:k])\n    m2 = sum(w[n - 1:n - k - 1:-1]) - sum(w[n - k - 1::-1])\n    print(max(m1, m2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = [int(i) for i in input().split()]\n    w.sort()\n    m1 = sum(w[k:]) - sum(w[:k])\n    m2 = sum(w[n - 1:n - k - 1:-1]) - sum(w[n - k - 1::-1])\n    print(max(m1, m2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = [int(i) for i in input().split()]\n    w.sort()\n    m1 = sum(w[k:]) - sum(w[:k])\n    m2 = sum(w[n - 1:n - k - 1:-1]) - sum(w[n - k - 1::-1])\n    print(max(m1, m2))", "from collections import Counter, UserString\nfrom math import log2\nmod = lambda n: int(n % (10 ** 9 + 7))\n_fc = [1]\nfor i in range(1, 1000001):\n    _fc.append(i * _fc[i - 1])\n    _fc[i] = mod(_fc[i])\n\ndef fact(n):\n    if -1000001 < n < 1000001:\n        if n > -1:\n            return _fc[n]\n        else:\n            return int('-' + str(_fc[abs(n)]))\n    else:\n        raise ValueError('values only from 1000000 to -1000000 can be factorialized\\n')\n\ndef yn(b, caps=False, y='Yes', n='No'):\n    if b:\n        returning = y\n    else:\n        returning = n\n    if caps == 2:\n        return returning.lower()\n    elif caps:\n        return returning.upper()\n    return returning\n\ndef prob(l, n):\n    return l.count(n) / len(l)\n\ndef isSubseq(s1, s2):\n    (n, m) = (len(s1), len(s2))\n    (i, j) = (0, 0)\n    while i < n and j < m:\n        if s1[i] == s2[j]:\n            i += 1\n        j += 1\n    return i == n\n\ndef isPrime(n):\n    if n > 1:\n        for i in range(2, int(n ** 0.5) + 1):\n            if not n % i:\n                return False\n        else:\n            return True\n    return True\n\ndef percentDiff(n, diff):\n    return n + n * (diff / 100)\n\ndef prodLst(l1, nl):\n    if isinstance(nl, int):\n        return [i * nl for i in l1]\n    else:\n        return [i * j for (i, j) in zip(l1, nl)]\n\ndef divLst(l1, nl, mxMn=False):\n    if isinstance(nl, int):\n        return [i // nl for i in l1]\n    elif mxMn:\n        return [max(i, j) // min(i, j) for (i, j) in zip(l1, nl)]\n    else:\n        return [i // j for (i, j) in zip(l1, nl)]\n\ndef modLst(l, n):\n    return [i % n for i in l]\n\ndef sumLst(l1, nl):\n    if isinstance(nl, int):\n        return [i + nl for i in l1]\n    else:\n        return [i + j for (i, j) in zip(l1, nl)]\n\ndef absLst(l):\n    return [abs(i) for i in l]\n\ndef diffLst(l1, nl, isAbs=False):\n    if isinstance(nl, int):\n        returning = [i - nl for i in l1]\n    else:\n        returning = [i - j for (i, j) in zip(l1, nl)]\n    if isAbs:\n        return absLst(returning)\n    else:\n        return returning\n\ndef remPosNeg(l, posNeg=False):\n    returning = []\n    if not posNeg:\n        for i in l:\n            if i >= 0:\n                returning.append(i)\n    else:\n        for i in l:\n            if i < 0:\n                returning.append(i)\n    return returning\n\ndef flip(nl):\n    if isinstance(nl, int):\n        return -nl\n    elif isinstance(nl, list):\n        return [-i for i in nl]\n\ndef ev(n):\n    return not n & 1\n\ndef decimal(n):\n    return round(n + 0.5)\n\ndef printabs(n):\n    print(abs(n))\n\ndef printm(n):\n    print(mod(n))\n\ndef printy(b, caps=False, y='Yes', n='No'):\n    print(yn(b, caps, y, n))\n\nclass mutableStr(UserString):\n\n    def ins(self, n, s):\n        if n < 0:\n            self.data = self.data = ''.join(list(self.data)[:n + 1]) + s + ''.join(list(self.data)[n + 1:])\n        else:\n            self.data = ''.join(list(self.data)[:n]) + s + ''.join(list(self.data)[n:])\n\n    def rem(self, s):\n        self.data = self.data.replace(s, '')\nalphabetOrd = [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]\nalphabet = list('abcdefghijklmnopqrstuvwxyz')\nbint = lambda b: int(b, 2)\nr2 = lambda n: range(1, n + 1)\nrl = lambda *l: range(len(l[0])) if len(l) == 1 else range(l[0], len(l[1]))\nalph = lambda s: s.isalpha()\nsl = lambda l: list(set(l))\ninf = float('inf')\nsoi = lambda : sorted(input())\nii = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nsi = lambda : mutableStr(str(input()))\nlsi = lambda : list(input())\nsepi = lambda : map(int, input().split())\nseti = lambda : set(map(int, input().split()))\nfor t in range(int(input())):\n    (numOfItems, itemsInAGroup) = sepi()\n    itemWeights = sorted(li())\n    if itemsInAGroup > numOfItems // 2:\n        itemsInAGroup -= numOfItems\n        itemsInAGroup = abs(itemsInAGroup)\n    sonBurden = itemWeights[:itemsInAGroup]\n    chefBurden = itemWeights[itemsInAGroup:]\n    sonBurden = sum(sonBurden)\n    chefBurden = sum(chefBurden)\n    burdenDiff = abs(sonBurden - chefBurden)\n    print(burdenDiff)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w.sort()\n    m1 = sum(w[k:]) - sum(w[:k])\n    m2 = sum(w[n - 1:n - k - 1:-1]) - sum(w[n - k - 1::-1])\n    print(max(m1, m2))", "from collections import Counter, UserString\nfrom math import log2\nmod = lambda n: int(n % (10 ** 9 + 7))\n_fc = [1]\nfor i in range(1, 1000001):\n    _fc.append(i * _fc[i - 1])\n    _fc[i] = mod(_fc[i])\n\ndef fact(n):\n    if -1000001 < n < 1000001:\n        if n > -1:\n            return _fc[n]\n        else:\n            return int('-' + str(_fc[abs(n)]))\n    else:\n        raise ValueError('values only from 1000000 to -1000000 can be factorialized\\n')\n\ndef yn(b, caps=False, y='Yes', n='No'):\n    if b:\n        returning = y\n    else:\n        returning = n\n    if caps == 2:\n        return returning.lower()\n    elif caps:\n        return returning.upper()\n    return returning\n\ndef prob(l, n):\n    return l.count(n) / len(l)\n\ndef isSubseq(s1, s2):\n    (n, m) = (len(s1), len(s2))\n    (i, j) = (0, 0)\n    while i < n and j < m:\n        if s1[i] == s2[j]:\n            i += 1\n        j += 1\n    return i == n\n\ndef isPrime(n):\n    if n > 1:\n        for i in range(2, int(n ** 0.5) + 1):\n            if not n % i:\n                return False\n        else:\n            return True\n    return True\n\ndef percentDiff(n, diff):\n    return n + n * (diff / 100)\n\ndef prodLst(l1, nl):\n    if isinstance(nl, int):\n        return [i * nl for i in l1]\n    else:\n        return [i * j for (i, j) in zip(l1, nl)]\n\ndef divLst(l1, nl, mxMn=False):\n    if isinstance(nl, int):\n        return [i // nl for i in l1]\n    elif mxMn:\n        return [max(i, j) // min(i, j) for (i, j) in zip(l1, nl)]\n    else:\n        return [i // j for (i, j) in zip(l1, nl)]\n\ndef modLst(l, n):\n    return [i % n for i in l]\n\ndef sumLst(l1, nl):\n    if isinstance(nl, int):\n        return [i + nl for i in l1]\n    else:\n        return [i + j for (i, j) in zip(l1, nl)]\n\ndef absLst(l):\n    return [abs(i) for i in l]\n\ndef diffLst(l1, nl, isAbs=False):\n    if isinstance(nl, int):\n        returning = [i - nl for i in l1]\n    else:\n        returning = [i - j for (i, j) in zip(l1, nl)]\n    if isAbs:\n        return absLst(returning)\n    else:\n        return returning\n\ndef remPosNeg(l, posNeg=False):\n    returning = []\n    if not posNeg:\n        for i in l:\n            if i >= 0:\n                returning.append(i)\n    else:\n        for i in l:\n            if i < 0:\n                returning.append(i)\n    return returning\n\ndef flip(nl):\n    if isinstance(nl, int):\n        return -nl\n    elif isinstance(nl, list):\n        return [-i for i in nl]\n\ndef ev(n):\n    return not n & 1\n\ndef decimal(n):\n    return round(n + 0.5)\n\ndef printabs(n):\n    print(abs(n))\n\ndef printm(n):\n    print(mod(n))\n\ndef printy(b, caps=False, y='Yes', n='No'):\n    print(yn(b, caps, y, n))\n\nclass mutableStr(UserString):\n\n    def ins(self, n, s):\n        if n < 0:\n            self.data = self.data = ''.join(list(self.data)[:n + 1]) + s + ''.join(list(self.data)[n + 1:])\n        else:\n            self.data = ''.join(list(self.data)[:n]) + s + ''.join(list(self.data)[n:])\n\n    def rem(self, s):\n        self.data = self.data.replace(s, '')\nalphabetOrd = [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]\nalphabet = list('abcdefghijklmnopqrstuvwxyz')\nbint = lambda b: int(b, 2)\nr2 = lambda n: range(1, n + 1)\nrl = lambda *l: range(len(l[0])) if len(l) == 1 else range(l[0], len(l[1]))\nalph = lambda s: s.isalpha()\nsl = lambda l: list(set(l))\ninf = float('inf')\nsoi = lambda : sorted(input())\nii = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nsi = lambda : mutableStr(str(input()))\nlsi = lambda : list(input())\nsepi = lambda : map(int, input().split())\nseti = lambda : set(map(int, input().split()))\nfor t in range(int(input())):\n    (numOfItems, itemsInAGroup) = sepi()\n    itemWeights = sorted(li())\n    if itemsInAGroup > numOfItems // 2:\n        itemsInAGroup -= numOfItems\n        itemsInAGroup = abs(itemsInAGroup)\n    sonBurden = itemWeights[:itemsInAGroup]\n    chefBurden = itemWeights[itemsInAGroup:]\n    sonBurden = sum(sonBurden)\n    chefBurden = sum(chefBurden)\n    burdenDiff = abs(sonBurden - chefBurden)\n    print(burdenDiff)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w.sort()\n    if k > n // 2:\n        k = n - k\n    first_group = w[:k]\n    second_group = w[k:]\n    difference = abs(sum(first_group) - sum(second_group))\n    print(difference)", "from collections import Counter, UserString\nfrom math import log2\nmod = lambda n: int(n % (10 ** 9 + 7))\n_fc = [1]\nfor i in range(1, 1000001):\n    _fc.append(i * _fc[i - 1])\n    _fc[i] = mod(_fc[i])\n\ndef fact(n):\n    if -1000001 < n < 1000001:\n        if n > -1:\n            return _fc[n]\n        else:\n            return int('-' + str(_fc[abs(n)]))\n    else:\n        raise ValueError('values only from 1000000 to -1000000 can be factorialized\\n')\n\ndef yn(b, caps=False, y='Yes', n='No'):\n    if b:\n        returning = y\n    else:\n        returning = n\n    if caps == 2:\n        return returning.lower()\n    elif caps:\n        return returning.upper()\n    return returning\n\ndef prob(l, n):\n    return l.count(n) / len(l)\n\ndef isSubseq(s1, s2):\n    (n, m) = (len(s1), len(s2))\n    (i, j) = (0, 0)\n    while i < n and j < m:\n        if s1[i] == s2[j]:\n            i += 1\n        j += 1\n    return i == n\n\ndef isPrime(n):\n    if n > 1:\n        for i in range(2, int(n ** 0.5) + 1):\n            if not n % i:\n                return False\n        else:\n            return True\n    return True\n\ndef percentDiff(n, diff):\n    return n + n * (diff / 100)\n\ndef prodLst(l1, nl):\n    if isinstance(nl, int):\n        return [i * nl for i in l1]\n    else:\n        return [i * j for (i, j) in zip(l1, nl)]\n\ndef divLst(l1, nl, mxMn=False):\n    if isinstance(nl, int):\n        return [i // nl for i in l1]\n    elif mxMn:\n        return [max(i, j) // min(i, j) for (i, j) in zip(l1, nl)]\n    else:\n        return [i // j for (i, j) in zip(l1, nl)]\n\ndef modLst(l, n):\n    return [i % n for i in l]\n\ndef sumLst(l1, nl):\n    if isinstance(nl, int):\n        return [i + nl for i in l1]\n    else:\n        return [i + j for (i, j) in zip(l1, nl)]\n\ndef absLst(l):\n    return [abs(i) for i in l]\n\ndef diffLst(l1, nl, isAbs=False):\n    if isinstance(nl, int):\n        returning = [i - nl for i in l1]\n    else:\n        returning = [i - j for (i, j) in zip(l1, nl)]\n    if isAbs:\n        return absLst(returning)\n    else:\n        return returning\n\ndef remPosNeg(l, posNeg=False):\n    returning = []\n    if not posNeg:\n        for i in l:\n            if i >= 0:\n                returning.append(i)\n    else:\n        for i in l:\n            if i < 0:\n                returning.append(i)\n    return returning\n\ndef flip(nl):\n    if isinstance(nl, int):\n        return -nl\n    elif isinstance(nl, list):\n        return [-i for i in nl]\n\ndef ev(n):\n    return not n & 1\n\ndef decimal(n):\n    return round(n + 0.5)\n\ndef printabs(n):\n    print(abs(n))\n\ndef printm(n):\n    print(mod(n))\n\ndef printy(b, caps=False, y='Yes', n='No'):\n    print(yn(b, caps, y, n))\n\nclass mutableStr(UserString):\n\n    def ins(self, n, s):\n        if n < 0:\n            self.data = self.data = ''.join(list(self.data)[:n + 1]) + s + ''.join(list(self.data)[n + 1:])\n        else:\n            self.data = ''.join(list(self.data)[:n]) + s + ''.join(list(self.data)[n:])\n\n    def rem(self, s):\n        self.data = self.data.replace(s, '')\nalphabetOrd = [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]\nalphabet = list('abcdefghijklmnopqrstuvwxyz')\nbint = lambda b: int(b, 2)\nr2 = lambda n: range(1, n + 1)\nrl = lambda *l: range(len(l[0])) if len(l) == 1 else range(l[0], len(l[1]))\nalph = lambda s: s.isalpha()\nsl = lambda l: list(set(l))\ninf = float('inf')\nsoi = lambda : sorted(input())\nii = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nsi = lambda : mutableStr(str(input()))\nlsi = lambda : list(input())\nsepi = lambda : map(int, input().split())\nseti = lambda : set(map(int, input().split()))\nfor t in range(int(input())):\n    (numOfItems, itemsInAGroup) = sepi()\n    itemWeights = sorted(li())\n    if itemsInAGroup > numOfItems // 2:\n        itemsInAGroup -= numOfItems\n        itemsInAGroup = abs(itemsInAGroup)\n    sonBurden = itemWeights[:itemsInAGroup]\n    chefBurden = itemWeights[itemsInAGroup:]\n    sonBurden = sum(sonBurden)\n    chefBurden = sum(chefBurden)\n    burdenDiff = abs(sonBurden - chefBurden)\n    print(burdenDiff)", "from collections import Counter, UserString\nfrom math import log2\nmod = lambda n: int(n % (10 ** 9 + 7))\n_fc = [1]\nfor i in range(1, 1000001):\n    _fc.append(i * _fc[i - 1])\n    _fc[i] = mod(_fc[i])\n\ndef fact(n):\n    if -1000001 < n < 1000001:\n        if n > -1:\n            return _fc[n]\n        else:\n            return int('-' + str(_fc[abs(n)]))\n    else:\n        raise ValueError('values only from 1000000 to -1000000 can be factorialized\\n')\n\ndef yn(b, caps=False, y='Yes', n='No'):\n    if b:\n        returning = y\n    else:\n        returning = n\n    if caps == 2:\n        return returning.lower()\n    elif caps:\n        return returning.upper()\n    return returning\n\ndef prob(l, n):\n    return l.count(n) / len(l)\n\ndef isSubseq(s1, s2):\n    (n, m) = (len(s1), len(s2))\n    (i, j) = (0, 0)\n    while i < n and j < m:\n        if s1[i] == s2[j]:\n            i += 1\n        j += 1\n    return i == n\n\ndef isPrime(n):\n    if n > 1:\n        for i in range(2, int(n ** 0.5) + 1):\n            if not n % i:\n                return False\n        else:\n            return True\n    return True\n\ndef percentDiff(n, diff):\n    return n + n * (diff / 100)\n\ndef prodLst(l1, nl):\n    if isinstance(nl, int):\n        return [i * nl for i in l1]\n    else:\n        return [i * j for (i, j) in zip(l1, nl)]\n\ndef divLst(l1, nl, mxMn=False):\n    if isinstance(nl, int):\n        return [i // nl for i in l1]\n    elif mxMn:\n        return [max(i, j) // min(i, j) for (i, j) in zip(l1, nl)]\n    else:\n        return [i // j for (i, j) in zip(l1, nl)]\n\ndef modLst(l, n):\n    return [i % n for i in l]\n\ndef sumLst(l1, nl):\n    if isinstance(nl, int):\n        return [i + nl for i in l1]\n    else:\n        return [i + j for (i, j) in zip(l1, nl)]\n\ndef absLst(l):\n    return [abs(i) for i in l]\n\ndef diffLst(l1, nl, isAbs=False):\n    if isinstance(nl, int):\n        returning = [i - nl for i in l1]\n    else:\n        returning = [i - j for (i, j) in zip(l1, nl)]\n    if isAbs:\n        return absLst(returning)\n    else:\n        return returning\n\ndef remPosNeg(l, posNeg=False):\n    returning = []\n    if not posNeg:\n        for i in l:\n            if i >= 0:\n                returning.append(i)\n    else:\n        for i in l:\n            if i < 0:\n                returning.append(i)\n    return returning\n\ndef flip(nl):\n    if isinstance(nl, int):\n        return -nl\n    elif isinstance(nl, list):\n        return [-i for i in nl]\n\ndef ev(n):\n    return not n & 1\n\ndef decimal(n):\n    return round(n + 0.5)\n\ndef printabs(n):\n    print(abs(n))\n\ndef printm(n):\n    print(mod(n))\n\ndef printy(b, caps=False, y='Yes', n='No'):\n    print(yn(b, caps, y, n))\n\nclass mutableStr(UserString):\n\n    def ins(self, n, s):\n        if n < 0:\n            self.data = self.data = ''.join(list(self.data)[:n + 1]) + s + ''.join(list(self.data)[n + 1:])\n        else:\n            self.data = ''.join(list(self.data)[:n]) + s + ''.join(list(self.data)[n:])\n\n    def rem(self, s):\n        self.data = self.data.replace(s, '')\nalphabetOrd = [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]\nalphabet = list('abcdefghijklmnopqrstuvwxyz')\nbint = lambda b: int(b, 2)\nr2 = lambda n: range(1, n + 1)\nrl = lambda *l: range(len(l[0])) if len(l) == 1 else range(l[0], len(l[1]))\nalph = lambda s: s.isalpha()\nsl = lambda l: list(set(l))\ninf = float('inf')\nsoi = lambda : sorted(input())\nii = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nsi = lambda : mutableStr(str(input()))\nlsi = lambda : list(input())\nsepi = lambda : map(int, input().split())\nseti = lambda : set(map(int, input().split()))\nfor t in range(int(input())):\n    (numOfItems, itemsInAGroup) = sepi()\n    itemWeights = sorted(li())\n    if itemsInAGroup > numOfItems // 2:\n        itemsInAGroup -= numOfItems\n        itemsInAGroup = abs(itemsInAGroup)\n    sonBurden = itemWeights[:itemsInAGroup]\n    chefBurden = itemWeights[itemsInAGroup:]\n    sonBurden = sum(sonBurden)\n    chefBurden = sum(chefBurden)\n    burdenDiff = abs(sonBurden - chefBurden)\n    print(burdenDiff)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w.sort()\n    if k > n // 2:\n        k = n - k\n    b = w[:k]\n    w = w[k:]\n    print(abs(sum(b) - sum(w)))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w.sort()\n    if k > n // 2:\n        k = n - k\n    b = w[:k]\n    w = w[k:]\n    print(abs(sum(b) - sum(w)))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n < 2 * k:\n        k = n - k\n    w = list(map(int, input().split()))\n    w = sorted(w)\n    a = sum(w[0:k])\n    b = sum(w[k:n])\n    if a > b:\n        print(a - b)\n    else:\n        print(b - a)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n < 2 * k:\n        k = n - k\n    w = list(map(int, input().split()))\n    w = sorted(w)\n    a = sum(w[0:k])\n    b = sum(w[k:n])\n    if a > b:\n        print(a - b)\n    else:\n        print(b - a)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    f = min(k, n - k)\n    b = a[0:f]\n    c = a[f:]\n    d = sum(b)\n    e = sum(c)\n    print(e - d)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w.sort()\n    r1 = sum(w[:k])\n    r2 = sum(w[k:])\n    k = n - k\n    r3 = sum(w[:k])\n    r4 = sum(w[k:])\n    print(max(r2, r4) - min(r1, r3))", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    weights = list(map(int, input().split()))\n    weights.sort()\n    ans = 0\n    k = min(n - k, k)\n    for i in range(k):\n        ans += weights[i]\n    ans = abs(sum(weights) - ans - ans)\n    print(ans)\n    t -= 1", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    w = sorted(list(map(int, input().split()))[0:n])\n    k = min(k, n - k)\n    print(abs(sum(w[:k]) - sum(w[k:])))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if k > n / 2:\n        k = n - k\n    diff = sum(a[k:]) - sum(a[:k])\n    print(diff)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    w.sort()\n    a = 0\n    if k > n // 2:\n        k = n - k\n    a = sum(w[:k]) - sum(w[k:])\n    print(abs(a))", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    if k > n // 2:\n        k = n - k\n    print(abs(sum(lst[:k]) - sum(lst[k:])))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr1 = list(map(int, input().split()))\n    arr = sorted(arr1)\n    if k > n // 2:\n        k = n - k\n    print(abs(sum(arr[k:]) - sum(arr[:k])))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr1 = list(map(int, input().split()))\n    arr = sorted(arr1)\n    if k > n // 2:\n        k = n - k\n    print(abs(sum(arr[k:]) - sum(arr[:k])))", "import os\nfrom sys import *\nfrom collections import *\nfrom math import *\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    lis.sort()\n    print(max(sum(lis) - 2 * sum(lis[:k]), sum(lis) - 2 * sum(lis[:n - k])))", "t = int(input())\nfor i in range(t):\n    n = list(map(int, input().split(' ')))\n    l = list(map(int, input().split(' ')))\n    l.sort()\n    k = n[1]\n    a = l[:k]\n    s1 = sum(a)\n    b = l[k:]\n    s2 = sum(b)\n    d1 = abs(s1 - s2)\n    k = len(l) - k\n    a1 = l[:k]\n    s1 = sum(a1)\n    b1 = l[k:]\n    s2 = sum(b1)\n    d2 = abs(s1 - s2)\n    print(max(d1, d2))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    l1 = l[:k]\n    l2 = l[k:]\n    res1 = abs(sum(l1) - sum(l2))\n    l3 = l[::-1]\n    l4 = l3[:k]\n    l5 = l3[k:]\n    res2 = abs(sum(l4) - sum(l5))\n    print(max(res1, res2))", "for i in range(int(input())):\n    (x, y) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l = sorted(l)\n    if y > x - y:\n        y = x - y\n    s1 = 0\n    for j in range(y):\n        s1 += l[j]\n    s = sum(l)\n    print(s - 2 * s1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    w = sorted(list(map(int, input().split())))\n    (mi, ma) = (0, 0)\n    if k > n - k:\n        d = n - k\n    else:\n        d = k\n    for j in range(d):\n        mi += w[j]\n    for l in range(d, n):\n        ma += w[l]\n    print(ma - mi)", "for i in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l = sorted(l)\n    if b > a - b:\n        b = a - b\n    s1 = 0\n    for j in range(b):\n        s1 += l[j]\n    s = sum(l)\n    print(s - 2 * s1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w = sorted(w)\n    mi = 0\n    ma = 0\n    if k > n - k:\n        d = n - k\n    else:\n        d = k\n    for j in range(d):\n        mi += w[j]\n    for l in range(d, n):\n        ma += w[l]\n    print(ma - mi)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w = sorted(w)\n    mi = 0\n    ma = 0\n    if k > n - k:\n        d = n - k\n    else:\n        d = k\n    for j in range(d):\n        mi += w[j]\n    for l in range(d, n):\n        ma += w[l]\n    print(ma - mi)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    w = sorted(w)\n    mi = 0\n    ma = 0\n    if k > n - k:\n        d = n - k\n    else:\n        d = k\n    for j in range(d):\n        mi += w[j]\n    for l in range(d, n):\n        ma += w[l]\n    print(ma - mi)"]