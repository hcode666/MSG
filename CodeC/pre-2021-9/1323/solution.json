["from bisect import insort_left\n(n, q) = map(int, input().split(' '))\na = [[i] for i in range(1, n + 1)]\nwhile q > 0:\n    inp = input().split(' ')\n    x = int(inp[1]) - 1\n    y = int(inp[2]) - 1\n    if inp[0] == 'UNION':\n        if len(a[x]) > len(a[y]):\n            a.append(a[x])\n            for j in a[y]:\n                insort_left(a[x], j)\n        else:\n            a.append(a[y])\n            for j in a[x]:\n                insort_left(a[y], j)\n        a[x] = a[y] = 0\n    elif inp[0] == 'GET':\n        print(a[x][y])\n    q -= 1", "from bisect import insort_left\n(n, q) = map(int, input().split(' '))\na = [[i] for i in range(1, n + 1)]\nwhile q > 0:\n    inp = input().split(' ')\n    x = int(inp[1]) - 1\n    y = int(inp[2]) - 1\n    if inp[0] == 'UNION':\n        if len(a[x]) > len(a[y]):\n            a.append(a[x])\n            for j in a[y]:\n                insort_left(a[x], j)\n        else:\n            a.append(a[y])\n            for j in a[x]:\n                insort_left(a[y], j)\n        a[x] = a[y] = 0\n    elif inp[0] == 'GET':\n        print(a[x][y])\n    q -= 1"]