["for _ in range(int(input())):\n    (n, p) = input().split()\n    n = int(n)\n    p = int(p)\n    if n <= 2:\n        print(p ** 3)\n    else:\n        best = n // 2 + 1\n        print((p - n % best) ** 2 + (p - n) * (p - n % best) + (p - n) ** 2)", "t = int(input())\nfor _ in range(t):\n    (n, p) = map(int, input().split())\n    mn = (n - 1) // 2\n    if mn == 0:\n        print(p ** 3)\n    else:\n        print((p - n) * (p - n) + (p - mn) * (p - mn) + (p - n) * (p - mn))", "t = int(input())\nfor _ in range(t):\n    (n, p) = map(int, input().split())\n    mn = (n - 1) // 2\n    if mn == 0:\n        print(p ** 3)\n    else:\n        print((p - n) * (p - n) + (p - mn) * (p - mn) + (p - n) * (p - mn))", "a = int(input())\nfor i in range(a):\n    (N, P) = map(int, input().split())\n    if N == 1 or N == 2:\n        ans = P ** 3\n    else:\n        r = N - (N // 2 + 1)\n        ans = (P - r) ** 2 + (P - N) * (P - r) + (P - N) ** 2\n    print(ans)", "a = int(input())\nfor i in range(a):\n    (N, P) = map(int, input().split())\n    if N == 1 or N == 2:\n        ans = P ** 3\n    else:\n        r = N - (N // 2 + 1)\n        ans = (P - r) ** 2 + (P - N) * (P - r) + (P - N) ** 2\n    print(ans)", "a = int(input())\nfor i in range(a):\n    (N, P) = map(int, input().split())\n    if N == 1 or N == 2:\n        ans = P ** 3\n    else:\n        r = N - (N // 2 + 1)\n        ans = (P - r) ** 2 + (P - N) * (P - r) + (P - N) ** 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, p) = input().split()\n    n = int(n)\n    p = int(p)\n    if n == 1 or n == 2:\n        print(p ** 3)\n    else:\n        a = n // 2 + 1 + p - n\n        b = p - n\n        case1 = a ** 2\n        case2 = a * b\n        case3 = b ** 2\n        print(case1 + case2 + case3)", "t = int(input())\nfor i in range(t):\n    (n, p) = input().split()\n    n = int(n)\n    p = int(p)\n    if n == 1 or n == 2:\n        print(p ** 3)\n    else:\n        a = n // 2 + 1 + p - n\n        b = p - n\n        case1 = a ** 2\n        case2 = a * b\n        case3 = b ** 2\n        print(case1 + case2 + case3)", "t = int(input())\nfor i in range(t):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        s = p * p * p\n    else:\n        s = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(s)", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "for _ in range(int(input())):\n    (n, p) = map(int, input().split())\n    m = n % (n // 2 + 1)\n    if m == 0:\n        ans = p * p * p\n    else:\n        ans = (p - n) * (2 * p - (m + n))\n        ans += (p - m) * (p - m)\n    print(ans)", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, p) = map(int, input().split())\n    x = n // 2 + 1\n    x = n % x\n    if x == 0:\n        print(p * p * p)\n    else:\n        print((p - x) * (p - x) + (p - x) * (p - n) + (p - n) * (p - n))", "t = int(input())\nfor _ in range(t):\n    (n, p) = map(int, input().strip().split())\n    if n <= 2:\n        print(p * p * p)\n    else:\n        m = (n - 1) // 2\n        res = (p - m) ** 2 + (p - n) ** 2 + (p - m) * (p - n)\n        print(res)", "def check(n, p, divisor):\n    product = 1\n    if p > n:\n        i = p - n\n        j = p - n\n        k = 1\n        product = i * j\n        i = 1\n        j = p - n % divisor\n        k = j\n        product += i * j * k\n        i = p - n\n        j = 1\n        k = p - n % divisor\n        product += i * j * k\n        print(product)\n    elif p <= n and p >= divisor:\n        i = 1\n        j = p - n % divisor\n        k = j\n        product = i * j * k\n        print(product)\n    elif p < divisor:\n        greatest = 0\n        for m in range(1, p):\n            if n % m > greatest:\n                greatest = n % m\n        i = 1\n        j = p - greatest\n        k = p - greatest\n        product = i * j * k\n        print(product)\nt = int(input())\nwhile t > 0:\n    (n, p) = tuple(map(int, input().split()))\n    if n <= 2:\n        print(p * p * p)\n    elif n % 2 == 0:\n        check(n, p, n // 2 + 1)\n    else:\n        check(n, p, (n + 1) // 2)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, p) = map(int, input().split())\n    if n <= 2:\n        print(p * p * p)\n    else:\n        max = int((n - 1) / 2)\n        c = (p - max) * (p - max)\n        c = c + (p - n) * (p - max)\n        c = c + (p - n) * (p - n)\n        print(c)\n    t = t - 1", "try:\n    t = int(input())\n    for i in range(t):\n        l = list(map(int, input().split()))\n        n = l[0]\n        p = l[1]\n        if n == 1 or n == 2:\n            print(p ** 3)\n        elif n % 2 == 0:\n            print((p - int(n / 2) + 1) ** 2 + (p - n) * (p - int(n / 2) + 1) + (p - n) ** 2)\n        else:\n            print((p - int(n / 2)) ** 2 + (p - n) * (p - int(n / 2)) + (p - n) ** 2)\nexcept Exception:\n    pass", "try:\n    t = int(input())\n    for i in range(t):\n        l = list(map(int, input().split()))\n        n = l[0]\n        p = l[1]\n        if n == 1 or n == 2:\n            print(p ** 3)\n        elif n % 2 == 0:\n            print((p - (n // 2 - 1)) ** 2 + (p - n) * (p - (n // 2 - 1)) + (p - n) ** 2)\n        else:\n            print((p - n // 2) ** 2 + (p - n) * (p - n // 2) + (p - n) ** 2)\nexcept Exception:\n    pass", "t = int(input())\nfor i in range(t):\n    inp = list(map(int, input().split()))\n    n = inp[0]\n    p = inp[1]\n    if n == 1 or n == 2:\n        print(p * p * p)\n    elif n % 2 == 0:\n        print((p - (n // 2 - 1)) ** 2 + (p - n) * (p - (n // 2 - 1)) + (p - n) ** 2)\n    else:\n        print((p - (n - 1) // 2) ** 2 + (p - n) * (p - (n - 1) // 2) + (p - n) ** 2)", "t = int(input())\nfor test in range(t):\n    (n, p) = map(int, input().split())\n    m = round(n / 2 - 0.7)\n    if m == 0:\n        choices = p ** 3\n    else:\n        choices = (p - m) ** 2 + (p - n) ** 2 + (p - m) * (p - n)\n    print(choices)", "from sys import stdin\nt = int(stdin.readline())\nwhile t:\n    (n, p) = [int(x) for x in stdin.readline().split()]\n    l_rem = n % (n // 2 + 1)\n    if l_rem == 0:\n        print(p * p * p)\n    else:\n        ans = (p - l_rem) * (p - l_rem)\n        ans += (p - n) * (p - l_rem)\n        ans += (p - n) * (p - n)\n        print(ans)\n    t -= 1", "T = int(input())\nwhile T > 0:\n    (n, p) = input().split()\n    n = int(n)\n    p = int(p)\n    if n > 2:\n        Rem = n % (n // 2 + 1)\n        total = (p - Rem) * (p - Rem) + (p - n) * (p - Rem) + (p - n) * (p - n)\n    else:\n        total = p * p * p\n    print(total)\n    T = T - 1", "T = int(input())\nfor i in range(T):\n    (N, P) = map(int, input().split())\n    req = N // 2 + 1\n    if N == 1 or N == 2:\n        print(P ** 3)\n    else:\n        req = N % req\n        b = (P - req) ** 2\n        c = (P - N) * (P - req)\n        a = (P - N) * (P - N)\n        print(a + b + c)", "R = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, p) = R()\n    max_no = n - (int(n / 2) + 1)\n    if max_no == 0:\n        print(p * p * p)\n    else:\n        ans = (p - max_no) ** 2 + (p - n) * (p - max_no) + (p - n) ** 2\n        print(ans)", "R = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, p) = R()\n    max_no = n - (int(n / 2) + 1)\n    if max_no == 0:\n        print(p * p * p)\n    else:\n        ans = (p - max_no) ** 2 + (p - n) * (p - max_no) + (p - n) ** 2\n        print(ans)", "R = lambda : map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, p) = R()\n    max_no = n - (int(n / 2) + 1)\n    if max_no == 0:\n        print(p * p * p)\n    else:\n        ans = 1 * (p - max_no) * (p - max_no) + (p - n) * (p - max_no) + (p - n) * (p - n)\n        print(ans)", "for _ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if n == 2 or n == 1:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "t = int(input())\nfor i in range(t):\n    (n, p) = map(int, input().split(' '))\n    if n == 1 or n == 2:\n        print(p * p * p)\n    else:\n        if n % 2 == 0:\n            m = n // 2 - 1\n            z = (p - m) * (p - m) + (p - n) * (p - m) + (p - n) * (p - n)\n        else:\n            m = n // 2\n            z = (p - m) * (p - m) + (p - n) * (p - m) + (p - n) * (p - n)\n        print(z)", "t = int(input())\nfor _ in range(t):\n    (n, p) = map(int, input().split())\n    if n <= 2:\n        print(p * p * p)\n    else:\n        m = int((n - 1) / 2)\n        count = 0\n        (j, k) = (p - m, p - m)\n        count += j * k\n        (i, k) = (p - n, p - m)\n        count += i * k\n        (i, j) = (p - n, p - n)\n        count += i * j\n        print(count)", "def main():\n    for i in range(int(input())):\n        (n, p) = map(int, input().split())\n        m = n % (n // 2 + 1)\n        if m == 0:\n            print(p * p * p)\n        else:\n            c1 = p - n\n            t1 = c1 * c1\n            t2 = c1 * (p - m)\n            t3 = (p - m) * (p - m)\n            cases = t1 + t2 + t3\n            print(cases)\nmain()", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "ts = int(input())\nwhile ts > 0:\n    (num, p) = map(int, input().split())\n    aa = num // 2 + 1\n    if num == 1 or num == 2:\n        print(p * p * p)\n    else:\n        aa = num % aa\n        b = (p - aa) ** 2\n        c = (p - num) * (p - aa)\n        a = (p - num) * (p - num)\n        print(b + c + a)\n    ts = ts - 1", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "t = int(input())\nwhile t != 0:\n    (n, p) = map(int, input().split())\n    x = n % (int(n / 2) + 1)\n    if x == 0:\n        y = (p - x) * (p - x)\n        z = (p - x) * y\n        print(z)\n    else:\n        y = (p - x) * (p - x)\n        z = (2 * p - x - n) * (p - n)\n        print(z + y)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split(' ')))\n    (n, p) = (l[0], l[1])\n    m = n % (n // 2 + 1)\n    if m == 0:\n        res = p ** 3\n    else:\n        res = (p - m) ** 2 + (p - n) * (p - m) + (p - n) ** 2\n    print(res)", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        test = p * p * p\n    else:\n        test = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(test)", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "t = int(input())\nmod_i = list()\nmod_n = list()\nfor i in range(0, t):\n    value = list(map(int, input().split()))\n    (n, p) = (value[0], value[1])\n    m = n % (n // 2 + 1)\n    if m == 0:\n        count = p * p * p\n    else:\n        count = (p - m) * (p - m) + (p - n) * (p - m + (p - n))\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, p) = map(int, input().strip().split(' '))\n    if n > 2:\n        m = (n - 1) // 2\n        ans = (p - m) * (p - m) + (p - n) * (p - m) + (p - n) * (p - n)\n    else:\n        ans = p * p * p\n    print(ans)", "import sys\nf = sys.stdin\nt = int(f.readline().rstrip())\nfor i in range(t):\n    (n, p) = map(int, f.readline().rstrip().split())\n    if n % 2 == 1:\n        m = (n - 1) // 2\n        if m == 0:\n            x = p * p * p\n        else:\n            x = (p - m) * (p - m) + (p - n) * (p - m) + (p - n) * (p - n)\n        print(x)\n    else:\n        m = n // 2 - 1\n        if m == 0:\n            x = p * p * p\n        else:\n            x = (p - m) * (p - m) + (p - n) * (p - m) + (p - n) * (p - n)\n        print(x)", "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    if a[0] == 2 or a[0] == 1:\n        ans = a[1] ** 3\n        print(ans)\n    else:\n        l = a[0]\n        s = l // 2 + 1\n        t = l % s\n        y = a[1] - t\n        r = y ** 2\n        g = 0\n        if a[1] > a[0]:\n            f = a[1] - a[0]\n            g = f * y + f * f\n        ans = g + r\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (n, p) = map(int, input().split())\n    a = 0\n    count = 0\n    if n == 2 or n == 1:\n        count = p * p * p\n    elif p == n and (n != 1 or n != 2):\n        count = count + (p - n % (n // 2 + 1)) * (p - n % (n // 2 + 1))\n    else:\n        b = p - n % (n // 2 + 1)\n        c = p - n % (n // 2 + 1)\n        count = b * c\n        a = int(p - (n + 1)) + 1\n        count = count + a * c\n        b = p - (n + 1) + 1\n        count += b * a\n    print(count)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    li = list(map(int, input().split()))\n    n = li[0]\n    p = li[1]\n    if n % 2 is 0:\n        quo_max = int(n / 2 + 1)\n    else:\n        quo_max = int((n + 1) / 2)\n    rem_max = n % quo_max\n    if n is 1 or n is 2:\n        print(p * p * p)\n    elif n == p:\n        print((p - rem_max) * (p - rem_max))\n    else:\n        print((p - rem_max) * (p - rem_max) + (p - n) * (p - rem_max) + (p - n) * (p - n))", "n = int(input())\nmod = 0\nwhile n != 0:\n    (a, b) = input().split(' ')\n    a = int(a)\n    b = int(b)\n    mod = int(a / 2) + 1\n    mod = a - mod\n    dist = (b - mod) * (b - mod) + (b - mod) * (b - a) + (b - a) * (b - a)\n    if a < 3:\n        print(b ** 3)\n    else:\n        print(int(dist))\n    n = n - 1", "n = int(input())\nmod = 0\nwhile n != 0:\n    (a, b) = input().split(' ')\n    a = int(a)\n    b = int(b)\n    mod = int(a / 2) + 1\n    mod = a - mod\n    dist = (b - mod) * (b - mod) + (b - mod) * (b - a) + (b - a) * (b - a)\n    if a < 3:\n        print(b ** 3)\n    else:\n        print(int(dist))\n    n = n - 1", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "from math import ceil\nt = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    n = l[0]\n    p = l[1]\n    if n == 1 or n == 2:\n        print(p ** 3)\n        continue\n    m = ceil(n / 2 - 1)\n    s = (p - m) ** 2 + (p - n) ** 2 + (p - n) * (p - m)\n    print(s)", "R = lambda : map(int, input().split())\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, p) = R()\n    if n % 2 == 0:\n        c = n // 2 + 1\n    else:\n        c = (n + 1) // 2\n    m = n % c\n    if n <= 2:\n        print(p * p * p)\n    else:\n        k = p - m\n        l = p - n\n        print(k * k + l * k + l * l)", "for _ in range(int(input())):\n    (n, p) = map(int, input().split())\n    max_mod = n % (n // 2 + 1)\n    if max_mod == 0:\n        print(p * p * p)\n    else:\n        print((p - max_mod) ** 2 + (p - max_mod) * (p - n) + (p - n) ** 2)", "for _ in range(int(input())):\n    (n, p) = map(int, input().split())\n    max_mod = n % (n // 2 + 1)\n    if max_mod == 0:\n        print(p * p * p)\n    else:\n        print((p - max_mod) ** 2 + (p - max_mod) * (p - n) + (p - n) ** 2)", "cases = int(input())\nfor case in range(cases):\n    (n, p) = [int(i) for i in input().split()]\n    if n < 3:\n        print(p * p * p)\n    else:\n        m = n // 2 + 1\n        r = n % m\n        a = (p - r) * (p - r)\n        b = (p - r) * (p - n)\n        c = (p - n) * (p - n)\n        print(a + b + c)", "t = int(input())\nfor _ in range(t):\n    (n, p) = map(int, input().split())\n    m = (n - 1) // 2\n    if n <= 2:\n        print(p ** 3)\n    else:\n        print((p - m) ** 2 + (p - m) * (p - n) + (p - n) ** 2)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, p) = map(int, input().split())\n    idx = 1\n    maxMod = math.floor((n - 1) / 2)\n    comb = 0\n    comb += (p - maxMod) ** 2\n    comb += (p - n) * (p - maxMod)\n    comb += (p - n) * (p - n)\n    if n <= 2:\n        print(p * p * p)\n    else:\n        print(comb)", "t = int(input())\nfor i in range(t):\n    a = list(map(int, input().split(' ')))\n    if a[0] < 3:\n        m = a[1] ** 3\n    else:\n        s = int(a[0] / 2) + 1\n        if a[1] >= s:\n            w = a[0] % s\n            m = (a[1] - w) ** 2\n            if a[0] < a[1]:\n                m = m + (a[1] - a[0]) ** 2\n            if a[0] < a[1]:\n                m = m + (a[1] - a[0]) * (a[1] - w)\n        else:\n            kl = []\n            for i in range(1, a[1] + 1):\n                rr = a[0] % i\n                if i == 0:\n                    mr = rr\n                    kl.append(i)\n                elif rr > mr:\n                    mr = rr\n                    kl = []\n                    kl.append(i)\n                elif rr == mr:\n                    kl.append(i)\n            m = (a[1] - mr) ** 2 * len(kl)\n    print(m)", "tt = int(input())\nfor i in range(tt):\n    x = input().split()\n    n = int(x[0])\n    p = int(x[1])\n    max = 0\n    s = 0\n    if n <= 2:\n        print(p * p * p)\n    else:\n        max = int((n - 1) / 2)\n        a1 = p - n\n        a2 = p - max\n        ss = a1 * a1 + a2 * a2 + a1 * a2\n        print(ss)", "t = int(input())\nfor i in range(t):\n    (n, p) = map(int, input().split())\n    max = n % (n // 2 + 1)\n    if max == 0:\n        print(p * p * p)\n    else:\n        print((p - max) * (p - max) + (p - max) * (p - n) + (p - n) * (p - n))", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "test_cases_count = int(input())\nfor test_case_id in range(1, test_cases_count + 1):\n    (N, P) = map(int, input().split())\n    if N <= 2:\n        res = P ** 3\n    else:\n        highest_mod = (N - 1) // 2\n        res = (P - highest_mod) ** 2 + (P - N) * (P - highest_mod) + (P - N) ** 2\n    print(res)", "for _ in range(int(input())):\n    (n, p) = map(int, input().split())\n    i = n // 2 + 1\n    j = n % i + 1\n    k = n % i % j + 1\n    m = n % i % j % k % n\n    if n == 2 or n == 1:\n        print(p * p * p)\n    else:\n        counti = 1\n        countj = p - j + 1\n        countk = p - k + 1\n        count1 = counti * countj * countk\n        count = count1\n        if p > n:\n            counti = p - n\n            countj = 1\n            countk = p - k + 1\n            count2 = counti * countj * countk\n            counti = p - n\n            countj = p - n\n            countk = 1\n            count3 = counti * countj * countk\n            if n % p % p % p % n == m:\n                count3 += 1\n            count += count2 + count3\n        print(count)", "t = int(input())\nfor __ in range(t):\n    (n, p) = [int(i) for i in input().split()]\n    m = n % (n // 2 + 1)\n    if m == 0:\n        print(p ** 3)\n    else:\n        print((p - m) * (p - m) + (p - n) * (p - m) + (p - n) * (p - n))", "for __ in range(int(input())):\n    (k, p) = map(int, input().split())\n    d = k % (k // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - k) + (p - k) * (p - k)\n    print(t)", "t = int(input())\nwhile t:\n    (n, p) = input().split()\n    n = int(n)\n    p = int(p)\n    max = n % (n // 2 + 1)\n    if max == 0:\n        r = p * p * p\n    else:\n        r = (p - max) * (p - max) + (p - n) * (p - max) + (p - n) * (p - n)\n    print(r)\n    t -= 1", "for i in range(int(input())):\n    (n, p) = map(int, input().split())\n    b = n // 2 + 1\n    x = n % b\n    c1 = p - x\n    c2 = p - n\n    if x == 0:\n        print(p ** 3)\n    else:\n        r1 = c1 ** 2 + c2 * c1 + c2 ** 2\n        print(r1)", "for _ in range(int(input())):\n    (n, p) = list(map(int, input().split()))\n    cnt = 0\n    king = 0\n    queen = 0\n    if n % 2 == 0:\n        m = n // 2 - 1\n    else:\n        m = (n - 1) // 2\n    if m == 0:\n        cnt += p * p * p\n    else:\n        king = p - m\n        queen = p - n\n        cnt = king * king + queen * (king + queen)\n    print(cnt)", "t = int(input())\nfor k in range(0, t):\n    (n, p) = input().split()\n    (n, p) = [int(n), int(p)]\n    if n <= 2:\n        print(p ** 3)\n    else:\n        c = (p - n) * (p - n)\n        c += (p - n) * (p - (n - 1) // 2)\n        c += (p - (n - 1) // 2) * (p - (n - 1) // 2)\n        print(c)", "from math import ceil\nt = int(input())\nfor zz in range(t):\n    (n, p) = map(int, input().split())\n    if n == 1 or n == 2:\n        print(p * p * p)\n        continue\n    m = ceil(n / 2) - 1\n    x = p - m\n    s = x * x\n    s = s + (p - n) * (p - m + p - n)\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (n, p) = map(int, input().split())\n    if n <= 2:\n        print(p ** 3)\n    else:\n        m = (n - 1) // 2\n        count = 0\n        count += 1 * (p - m) * (p - m)\n        count += (p - n) * 1 * (p - m)\n        count += (p - n) * (p - n) * 1\n        print(count)", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "for __ in range(int(input())):\n    (n, p) = map(int, input().split())\n    d = n % (n // 2 + 1)\n    if d == 0:\n        t = p * p * p\n    else:\n        t = (p - d) * (p - d) + (p - d) * (p - n) + (p - n) * (p - n)\n    print(t)", "ts = int(input())\nwhile ts > 0:\n    (num, p) = map(int, input().split())\n    aa = num // 2 + 1\n    if num == 1 or num == 2:\n        print(p * p * p)\n    else:\n        aa = num % aa\n        b = (p - aa) ** 2\n        c = (p - num) * (p - aa)\n        a = (p - num) * (p - num)\n        print(b + c + a)\n    ts = ts - 1", "ts = int(input())\nwhile ts > 0:\n    (num, p) = map(int, input().split())\n    aa = num // 2 + 1\n    if num == 1 or num == 2:\n        print(p * p * p)\n    else:\n        aa = num % aa\n        b = (p - aa) ** 2\n        c = (p - num) * (p - aa)\n        a = (p - num) * (p - num)\n        print(b + c + a)\n    ts = ts - 1", "t = int(input())\nfor _ in range(t):\n    (n, p) = [int(i) for i in input().split()]\n    k = n // 2 + 1\n    if n == 1 or n == 2:\n        print(p * p * p)\n    else:\n        k = n % k\n        s = (p - k) ** 2\n        d = (p - n) * (p - k)\n        e = (p - n) * (p - n)\n        print(d + e + s)", "import math\nfor _ in range(int(input())):\n    (n, p) = list(map(int, input().split()))\n    ans = 0\n    if n & 1 == 1:\n        if n // 2 == 0:\n            ans = p * p * p\n            print(ans)\n            continue\n        ans += (p - n // 2) * (p - n // 2)\n        ans += (p - n) * (p - n // 2)\n    else:\n        if n // 2 - 1 == 0:\n            ans = p * p * p\n            print(ans)\n            continue\n        ans += (p - n // 2 + 1) * (p - n // 2 + 1)\n        ans += (p - n) * (p - n // 2 + 1)\n    ans += (p - n) * (p - n)\n    print(ans)", "for _ in range(int(input())):\n    (n, p) = map(int, input().split())\n    divis = n // 2 + 1\n    maxi = n % divis\n    if maxi == 1:\n        i = p - 1\n        a = i ** 2\n        j = (p - n) * (p - 1 + (p - n))\n        a += j\n    else:\n        i = p - maxi\n        a = i ** 2\n        j = (p - n) * (p - n + i)\n        a += j\n    if maxi == 0:\n        a = p * p * p\n    print(a)", "test = int(input())\nwhile test > 0:\n    (num, p) = map(int, input().split())\n    aa = num // 2 + 1\n    if num == 1 or num == 2:\n        print(p * p * p)\n    else:\n        aa = num % aa\n        b = (p - aa) ** 2\n        c = (p - num) * (p - aa)\n        a = (p - num) * (p - num)\n        print(b + c + a)\n    test = test - 1", "test_cases = int(input())\nwhile test_cases > 0:\n    (n, p) = map(int, input().split(' '))\n    count = 0\n    if n != 1 and n != 2:\n        p += 1\n        k = j = i = n // 2 + 1\n        if n % 2 == 0:\n            k = j = i = n // 2\n            i += 1\n        count = (p - j) * (p - k)\n        count += (p - (n + 1)) * (p - k)\n        count += (p - (n + 1)) ** 2\n    else:\n        count = p ** 3\n    print(count)\n    test_cases -= 1", "for _ in range(0, int(input())):\n    (n, p) = map(int, input().split())\n    if n == 1 or n == 2:\n        print(int(pow(p, 3)))\n    elif n == p:\n        print(int(pow(int(p / 2) + 1, 2)))\n    else:\n        m = int((n - 1) / 2)\n        b = p - m\n        c = p - n\n        print(int(pow(b, 2) + pow(c, 2) + b * c))", "t = int(input())\nfor i in range(t):\n    l = input().split()\n    n = int(l[0])\n    p = int(l[1])\n    if n == 1:\n        ans = p ** 3\n    elif n == 2:\n        ans = p ** 3\n    elif p <= n // 2:\n        ans = 0\n    elif p <= n:\n        ans = (p - n % (n // 2 + 1)) ** 2\n    elif n % 2 == 1:\n        ans = (p - n % (n // 2 + 1)) ** 2 + (p - n) * (2 * p - n - (n - 1) // 2)\n    else:\n        ans = (p - n % (n // 2 + 1)) ** 2 + (p - n) * (2 * p - n - n // 2 + 1)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    a = []\n    a = input().split()\n    n = int(a[0])\n    p = int(a[1])\n    d = n // 2\n    l = n % (d + 1)\n    if l == 0:\n        print(p * p * p)\n    else:\n        print((p - l) * (p - l) + (p - n) * (p - l + (p - n)))\n    t = t - 1", "import math\nt = int(input())\nfor x in range(t):\n    (n, p) = list(map(int, input().split()))\n    r = p\n    if n == 1:\n        print(p ** 3)\n        continue\n    elif n < p:\n        p = n - 1\n    v = math.ceil(n / p)\n    v1 = n // p + 1\n    myvar = max(v, v1)\n    mytemp = math.ceil(n / myvar)\n    mytemp1 = n // myvar + 1\n    result = n % max(mytemp, mytemp1)\n    if result > 0:\n        b = (r - result) ** 2\n        c = (r - n) * (r - result)\n        d = (r - n) ** 2\n        print(b + c + d)\n    else:\n        print(r ** 3)", "import math\nt = int(input())\nfor i in range(t):\n    (n, p) = list(map(int, input().split()))\n    maxMod = int(n / 2 + 1)\n    tmp = n % maxMod\n    if maxMod == 1 or n == 2 or n == 1:\n        print(p ** 3)\n    else:\n        print((p - n) * (p - tmp) + (p - n) * (p - n) + (p - tmp) * (p - tmp))", "T = int(input())\nfor i in range(T):\n    (n, p) = map(int, input().split())\n    if n > 2:\n        if n % 2 == 0:\n            x = (n + 2) // 2\n        elif n % 2 == 1:\n            x = (n + 1) // 2\n        y = n % x + 1\n        q = (p - y + 1) ** 2\n        r = (p - y + 1) * (p - n) + (p - n) ** 2\n        print(q + r)\n    else:\n        print(p ** 3)", "t = int(input())\nwhile t:\n    l1 = list(map(int, input().split(' ')))\n    n = l1[0]\n    p = l1[1]\n    if n == 1 or n == 2:\n        print(p ** 3)\n    elif n % 2 == 1:\n        v = 3 * (p - 1) * (p - n) + (int(n / 2) + 1) ** 2 - int(int(n / 2) - 1) * (3 * (p - n))\n        print(v)\n    else:\n        v1 = 3 * (p - 1) * (p - n) + (int(n / 2) + 1) ** 2 - int(n / 2) * (3 * (p - n)) + 6 * (p - n)\n        print(v1)\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    k = input().split()\n    n = int(k[0])\n    p = int(k[1])\n    bade = 0\n    ans = 0\n    rem_bade = 0\n    if n < p and n % 2 == 0:\n        rem = int(n / 2 - 1)\n        if rem != 0:\n            bade = p - n\n            rem_bade = p - rem\n            ans = rem_bade * rem_bade + bade * rem_bade + bade * bade\n        else:\n            ans = p * p * p\n        print(ans)\n    elif n < p and n % 2 != 0:\n        rem = int(n / 2)\n        if rem != 0:\n            bade = p - n\n            rem_bade = p - rem\n            ans = rem_bade * rem_bade + bade * rem_bade + bade * bade\n        else:\n            ans = p * p * p\n        print(ans)\n    elif n == p and n % 2 != 0:\n        rem = int(n / 2)\n        if rem != 0:\n            ans = (p - rem) * (p - rem)\n        else:\n            ans = p * p * p\n        print(ans)\n    elif n == p and n % 2 == 0:\n        rem = int(n / 2 - 1)\n        if rem != 0:\n            ans = (p - rem) * (p - rem)\n        else:\n            ans = p * p * p\n        print(ans)", "t = int(input())\nwhile t:\n    l1 = list(map(int, input().split(' ')))\n    n = l1[0]\n    p = l1[1]\n    if n == 1 or n == 2:\n        print(p ** 3)\n    elif n % 2 == 1:\n        v = 3 * (p - 1) * (p - n) + (int(n / 2) + 1) ** 2 - int(int(n / 2) - 1) * (3 * (p - n))\n        print(v)\n    else:\n        v1 = 3 * (p - 1) * (p - n) + (int(n / 2) + 1) ** 2 - int(n / 2) * (3 * (p - n)) + 6 * (p - n)\n        print(v1)\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    (n, p) = [int(i) for i in input().split()]\n    k = n // 2 + 1\n    if n == 1 or n == 2:\n        print(p * p * p)\n    else:\n        k = n % k\n        s = (p - k) ** 2\n        d = (p - n) * (p - k)\n        e = (p - n) * (p - n)\n        print(d + e + s)", "import math\nimport operator\nfor t in range(int(input())):\n    (n, p) = list(map(int, input().split()))\n    if n in range(1, 3):\n        ans = p ** 3\n    elif n == p:\n        if n % 2 == 0:\n            ans = (n / 2 + 1) ** 2\n        else:\n            ans = math.ceil(n / 2) ** 2\n    elif p > n:\n        gap = int(n / 2) * 3 + 6\n        if n % 2 == 0:\n            ini = (n / 2 + 1) ** 2\n        else:\n            ini = math.ceil(n / 2) ** 2\n        ans = ini + (p - n) / 2 * (2 * gap + (p - n - 1) * 6)\n    print(int(ans))", "t = int(input())\nfor i in range(0, t):\n    np = list(map(int, input().strip().split()))\n    n = np[0]\n    p = np[1]\n    o = int(n / 2 + 1)\n    mod = n % o\n    if mod != 0:\n        s = (p - n) * (p - n)\n        s += (p - n) * (p - mod)\n        s += (p - mod) * (p - mod)\n        print(s)\n    else:\n        print(p * p * p)", "t = int(input())\nans = list()\nwhile t != 0:\n    (n, p) = [int(x) for x in input().split()]\n    r = p - n\n    a = int(n / 2) + 1\n    temp = 0\n    if n == 1 or n == 2:\n        temp = p * p * p\n    elif n == p:\n        temp = a * a\n    else:\n        temp = 3 * r * r + 3 * a * r + a * a\n    ans.append(temp)\n    t = t - 1\nfor x in ans:\n    print()\n    print(x)", "import math\nT = int(input())\nfor i in range(T):\n    input_line = input().split()\n    N = int(input_line[0])\n    P = int(input_line[1])\n    ans = 0\n    if N <= 2:\n        print(P ** 3)\n    else:\n        part_1 = (P - math.ceil(N / 2) + 1) ** 2\n        part_2 = (P - N) * (P - math.ceil(N / 2) + 1)\n        part_3 = (P - N) ** 2\n        ans = part_1 + part_2 + part_3\n        print(ans)", "def my_func(n, p):\n    sum = 0\n    if n <= 2:\n        print(p ** 3)\n    else:\n        k = p - n % (n // 2 + 1)\n        sum += k ** 2\n        if n < p:\n            sum += (p - n) ** 2 + (p - n) * k\n        print(sum)\nt = int(input())\nfor i in range(t):\n    (n, p) = [int(x) for x in input().split()]\n    my_func(n, p)", "t = int(input())\nwhile t:\n    t = t - 1\n    (n, p) = list(map(int, input().split()))\n    max_remainder = n - (int(n / 2) + 1)\n    if max_remainder == 0:\n        print(p * p * p)\n    else:\n        a = p - max_remainder\n        b = p - n\n        ans = a ** 2 + b * (a + b)\n        print(ans)", "try:\n    t = int(input())\n    while t:\n        (n, p) = [int(x) for x in input().split()]\n        M = n - (int(n / 2) + 1)\n        if M == 0:\n            print(p * p * p)\n        else:\n            b = p - n\n            ans = (p - M + b) * (p - M) + b * b\n            print(ans)\n        t = t - 1\nexcept:\n    pass", "t = int(input())\nfor _ in range(t):\n    np = list(map(int, input().split()))\n    n = np[0]\n    p = np[1]\n    if n == 2:\n        rem = 0\n    elif n % 2 == 0:\n        div = n // 2 + 1\n        rem = n // 2 - 1\n    elif n % 2 != 0:\n        div = n // 2 + 1\n        rem = n // 2\n    if rem != 0:\n        print((p - rem) * (p - rem) + (p - n) * (p - rem) + (p - n) * (p - n))\n    else:\n        print(p * p * p)", "t = int(input())\nfor i in range(t):\n    (n, p) = map(int, input().split())\n    if n == p:\n        if n == 1:\n            print(1)\n        elif n == 2:\n            print(8)\n        else:\n            h = 3\n            county = 2\n            while h < n:\n                h = h + 2\n                county += 1\n            o = county * county\n            print(o)\n    else:\n        if n & 1:\n            mex = n // 2\n        else:\n            mex = n // 2 - 1\n        s = n - mex % n\n        if n == 2:\n            ans = p ** 3\n            print(ans)\n        elif n & 1 and n != 1:\n            ans = (p - s + 1) * (p - s + 1) + (p - (n + 1) + 1) * (p - s + 1) + (p - (n + 1) + 1) ** 2\n            print(ans)\n        elif n & 1:\n            print(p ** 3)\n        else:\n            ans = (p - s + 2) * (p - s + 2) + (p - (n + 1) + 1) * (p - s + 2) + (p - (n + 1) + 1) * (p - (n + 1) + 1)\n            print(ans)", "t = int(input())\nwhile t > 0:\n    temp = input()\n    n = int(temp.split(' ')[0])\n    p = int(temp.split(' ')[1])\n    i = int()\n    sum = 0\n    if n % 2 == 0:\n        i = n // 2 + 1\n    else:\n        i = (n + 1) // 2\n    if n > 2:\n        sum = (p - n % i) ** 2 + (p - n) * (p - n % i) + (p - n) ** 2\n    else:\n        sum = p ** 3\n    print(sum)\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, p) = [int(x) for x in input().split()]\n    if n > 3 and p > 3:\n        if n == p:\n            print((n // 2 + 1) ** 2)\n        else:\n            if n % 2 == 1:\n                tem = (n - 5) // 2\n            else:\n                tem = (n - 4) // 2\n            rem = p - n - 1\n            toko = 21 + tem * tem + 9 * tem + 3 * rem * (5 + tem + rem)\n            print(toko)\n    elif n == 3 and p == 3:\n        print(4)\n    elif n == 1 or n == 2:\n        print(p ** 3)\n    elif n == 3 and p > 3:\n        if p == 4:\n            print(13)\n        else:\n            tem1 = 13\n            tem2 = 15\n            for i in range(1, p - n):\n                tem1 += tem2\n                tem2 += 6\n            print(tem1)"]