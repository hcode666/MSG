["t = int(input(''))\nfor v in range(t):\n    a = input('').split(' ')\n    n = int(a[0])\n    m = int(a[1])\n    ans = [0] * (n * m)\n    for k in range(0, n * m, 1):\n        su = 2 * ((n * m - 1) // (k + 1) + 1)\n        g = 0\n        while g < n * m:\n            j = g % m\n            i = g // m\n            if (j * n + i) % (k + 1) == 0:\n                su = su - 1\n            g = g + (k + 1)\n        print(su, end=' ')\n    print('')", "t = int(input(''))\nfor v in range(t):\n    a = input('').split(' ')\n    n = int(a[0])\n    m = int(a[1])\n    ans = [0] * (n * m)\n    for k in range(0, n * m, 1):\n        su = 2 * ((n * m - 1) // (k + 1) + 1)\n        g = 0\n        while g < n * m:\n            j = g % m\n            i = g // m\n            if (j * n + i) % (k + 1) == 0:\n                su = su - 1\n            g = g + (k + 1)\n        print(su, end=' ')\n    print('')", "from math import ceil\nfor _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l = [str(n * m)]\n    for i in range(1, n * m):\n        c = 2 * ceil(n * m / (i + 1))\n        for k in range(0, n * m, i + 1):\n            r = k % m\n            q = k // m\n            if (r * n + q) % (i + 1) == 0:\n                c -= 1\n        l.append(str(c))\n    print(' '.join(l))", "for x in range(int(input())):\n    (n, m) = map(int, input().split())\n    y = n * m\n    print(y, end=' ')\n    for x in range(1, n * m):\n        ans = 2 * (1 + (n * m - 1) // (x + 1))\n        mu = 0\n        while mu < y:\n            n1 = mu // m\n            m1 = mu % m\n            y2 = m1 * n + n1\n            if y2 % (x + 1) == 0:\n                ans -= 1\n            mu += x + 1\n        print(ans, end=' ')\n    print('')", "T = int(input())\nfor t in range(T):\n    (N, M) = list(map(int, input().split()))\n    print(N * M, end=' ')\n    for k in range(1, N * M):\n        ans = 2 * (1 + (N * M - 1) // (k + 1))\n        mult = 0\n        while mult < N * M:\n            n = mult // M\n            m = mult % M\n            y2 = m * N + n\n            if y2 % (k + 1) == 0:\n                ans -= 1\n            mult += k + 1\n        print(ans, end=' ')\n    print()", "mod = 1000000007\nii = lambda : int(input())\nsi = lambda : input()\ndgl = lambda : list(map(int, input()))\nf = lambda : map(int, input().split())\nil = lambda : list(map(int, input().split()))\nit = lambda : tuple(map(int, input().split()))\nls = lambda : list(input())\nt = ii()\nfor _ in range(t):\n    (n, m) = f()\n    l = n * m\n    for i in range(1, l + 1):\n        s1 = set((j for j in range(0, n * m, i)))\n        s2 = set((j % n * m + j // n for j in range(0, n * m, i)))\n        print(len(s1 | s2), end=' ')\n    print()", "def destcell(r, c):\n    t = []\n    for i in range(c):\n        for j in range(r):\n            t.append(i + j * c)\n    for i in range(0, r * c):\n        d = set()\n        for j in range(0, r * c, i + 1):\n            d.add(j)\n            d.add(t[j])\n        print(len(d), end=' ')\n    print()\nt = int(input())\nwhile t:\n    t -= 1\n    (r, c) = map(int, input().split())\n    destcell(r, c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    k = n * m\n    transpose = []\n    for _i in range(m):\n        for _j in range(n):\n            transpose.append(_i + _j * m)\n    for i in range(0, n * m):\n        done = set()\n        for j in range(0, n * m, i + 1):\n            done.add(j)\n            done.add(transpose[j])\n        print(len(done), end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    ht = {i: 0 for i in range(n * m)}\n    ht[0] = n * m\n    transpose = []\n    for i in range(m):\n        for j in range(n):\n            transpose.append(i + j * m)\n    k = 0\n    while k < n * m:\n        g = set()\n        for i in range(0, n * m, k + 1):\n            g.add(i)\n            g.add(transpose[i])\n        ht[k] = len(g)\n        k += 1\n    for key in ht.keys():\n        print(ht[key], end=' ')\n    print()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    b = []\n    for i in range(m):\n        for j in range(n):\n            b.append(i + 1 + m * j)\n    k = [n * m]\n    for i in range(1, n * m):\n        s = set()\n        for j in range(1, n * m + 1, i + 1):\n            s.add(j)\n            s.add(b[j - 1])\n        k.append(len(s))\n    k = ' '.join((str(k[x]) for x in range(len(k))))\n    print(k)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(n * m, end=' ')\n    for k in range(1, n * m):\n        ans = (n * m - 1) // (k + 1) + 1\n        for j in range(k + 1, n * m, k + 1):\n            q = j // m + j % m * n\n            if q % (k + 1) != 0:\n                ans += 1\n        print(ans, end=' ')", "try:\n    t = int(input())\n    for i in range(t):\n        c = {}\n        r = []\n        (n, m) = map(int, input().split())\n        l = [i for i in range(1, m * n + 1)]\n        count = 0\n        sum1 = 0\n        for j in range(0, n * m, m):\n            c[count] = l[j:j + m]\n            count = count + 1\n        i = 0\n        x = len(c[0])\n        while i < x:\n            for k in c.values():\n                r.append(k[i])\n            i = i + 1\n        for k in range(1, m * n + 1):\n            p1 = l[::k]\n            p2 = r[::k]\n            print(len(set(p1 + p2)), end=' ')\nexcept Exception as e:\n    pass", "try:\n    t = int(input())\n    for i in range(t):\n        c = {}\n        r = []\n        (n, m) = map(int, input().split())\n        l = [i for i in range(1, m * n + 1)]\n        count = 0\n        sum1 = 0\n        for j in range(0, n * m, m):\n            c[count] = l[j:j + m]\n            count = count + 1\n        i = 0\n        x = len(c[0])\n        while i < x:\n            for k in c.values():\n                r.append(k[i])\n            i = i + 1\n        for k in range(1, m * n + 1):\n            p1 = l[::k]\n            p2 = r[::k]\n            print(len(set(p1 + p2)), end=' ')\nexcept Exception as e:\n    pass", "try:\n    t = int(input())\n    for i in range(t):\n        c = {}\n        r = []\n        (n, m) = map(int, input().split())\n        l = [i for i in range(1, m * n + 1)]\n        count = 0\n        sum1 = 0\n        for j in range(0, n * m, m):\n            c[count] = l[j:j + m]\n            count = count + 1\n        i = 0\n        x = len(c[0])\n        while i < x:\n            for k in c.values():\n                r.append(k[i])\n            i = i + 1\n        for k in range(1, m * n + 1):\n            p1 = l[::k]\n            p2 = r[::k]\n            print(len(set(p1 + p2)), end=' ')\nexcept Exception as e:\n    pass", "try:\n    t = int(input())\n    for i in range(t):\n        c = {}\n        r = []\n        p1 = []\n        p2 = []\n        (n, m) = map(int, input().split())\n        l = [i for i in range(1, m * n + 1)]\n        count = 0\n        sum1 = 0\n        for j in range(0, n * m, m):\n            c[count] = l[j:j + m]\n            count = count + 1\n        i = 0\n        x = len(c[0])\n        while i < x:\n            for k in c.values():\n                r.append(k[i])\n            i = i + 1\n        for k in range(1, m * n + 1):\n            p1 = l[::k]\n            p2 = r[::k]\n            print(len(set(p1 + p2)), end=' ')\nexcept Exception as e:\n    pass", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = n * m\n    print(*(sum((1 + ((i % n * m + i // n) % k > 0) for i in range(0, l, k))) for k in range(1, l + 1)))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = n * m\n    print(*(-(-l // k) + sum(((i % n * m + i // n) % k > 0 for i in range(0, l, k))) for k in range(1, l + 1)))", "def gcd(a, b):\n    if a > b:\n        (a, b) = (b, a)\n    if b % a == 0:\n        return a\n    else:\n        return gcd(a, b % a)\n\ndef find_factors(N):\n    factors = []\n    factors2 = []\n    for i in range(1, int(N ** 0.5) + 1):\n        if N % i == 0:\n            factors += [i]\n            factors2 += [N // i]\n    if factors[-1] == factors2[-1]:\n        return factors + factors2[:-1]\n    else:\n        return factors + factors2\n\ndef find(M, N):\n    ans = [0] * (M * N)\n    for x in range(N):\n        for y in range(M):\n            if x == 0 and y == 0:\n                ans[0] += 1\n                continue\n            N_1 = x * M + y\n            N_2 = y * N + x\n            G = gcd(N_1, N_2)\n            check = find_factors(G)\n            for c in check:\n                ans[c - 1] += 1\n    real_ans = [0] * (M * N)\n    real_ans[0] = M * N\n    for K in range(1, M * N):\n        temp = (1 + (M * N - 1) // (K + 1)) * 2 - ans[K] - 1\n        real_ans[K] = temp\n    return real_ans\nfor _ in range(int(input())):\n    (M, N) = list(map(int, input().strip().split(' ')))\n    Ans = find(M, N)\n    print(*Ans)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = [0] * (n * m)\n    for k in range(0, n * m):\n        ans[k] = n * m // (k + 1)\n        count = 0\n        if n * m % (k + 1) != 0:\n            ans[k] += 1\n        ans[k] = ans[k] * 2\n        for j in range(1, n * m + 1, k + 1):\n            y = j // m\n            if j % m == 0:\n                x = m\n                y -= 1\n            else:\n                x = j % m\n            if ((x - 1) * n + y) % (k + 1) == 0:\n                count += 1\n        ans[k] -= count\n    print(*ans)", "from itertools import chain\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = n * m\n    print(*(len(set(chain.from_iterable(((i, i % n * m + i // n) for i in range(0, l, k))))) for k in range(1, l + 1)))", "def findmax(r, c, k):\n    count = 0\n    if r * c % (k + 1) == 0:\n        summ = 2 * (r * c // (k + 1))\n    else:\n        summ = 2 * (r * c // (k + 1) + 1)\n    (x, y, n) = (0, 0, 0)\n    while 1:\n        x = (k + 1) * n // c\n        y = (k + 1) * n % c\n        if y >= c or x >= r:\n            break\n        elif (r * y + x) % (k + 1) == 0:\n            count += 1\n        n += 1\n    summ -= count\n    print(summ, end=' ')\nt = int(input())\nwhile t > 0:\n    (r, c) = input().split()\n    (r, c) = (int(r), int(c))\n    for k in range(r * c):\n        findmax(r, c, k)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = n * m\n    print(*(len(set(range(0, l, k)) | {i % n * m + i // n for i in range(0, l, k)}) for k in range(1, l + 1)))"]