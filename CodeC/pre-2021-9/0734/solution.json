["t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    ct0 = 0\n    neg = 0\n    ct = 0\n    ct1 = 0\n    for i in range(n):\n        if a[i] == 0:\n            ct0 += 1\n        elif a[i] == 1:\n            ct1 += 1\n        elif a[i] < 0:\n            neg += 1\n        if abs(a[i]) >= 2:\n            ct += 1\n    pos = n - ct0 - neg\n    if neg == 0:\n        if ct >= 2:\n            print(0)\n        else:\n            print(1)\n    elif pos == 0:\n        if neg >= 2:\n            print(0)\n        else:\n            print(1)\n    elif ct >= 2:\n        print(0)\n    elif ct == 1:\n        if neg == 1 and pos == ct1:\n            print(1)\n        else:\n            print(0)\n    else:\n        print(1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    ct0 = 0\n    neg = 0\n    ct = 0\n    ct1 = 0\n    for i in range(n):\n        if a[i] == 0:\n            ct0 += 1\n        elif a[i] == 1:\n            ct1 += 1\n        elif a[i] < 0:\n            neg += 1\n        if abs(a[i]) >= 2:\n            ct += 1\n    pos = n - ct0 - neg\n    if neg == 0:\n        if ct >= 2:\n            print(0)\n        else:\n            print(1)\n    elif pos == 0:\n        if neg >= 2:\n            print(0)\n        else:\n            print(1)\n    elif ct >= 2:\n        print(0)\n    elif ct == 1:\n        if neg == 1 and pos == ct1:\n            print(1)\n        else:\n            print(0)\n    else:\n        print(1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    ct0 = 0\n    neg = 0\n    ct = 0\n    ct1 = 0\n    for i in range(n):\n        if a[i] == 0:\n            ct0 += 1\n        elif a[i] == 1:\n            ct1 += 1\n        elif a[i] < 0:\n            neg += 1\n        if abs(a[i]) >= 2:\n            ct += 1\n    pos = n - ct0 - neg\n    if neg == 0:\n        if ct >= 2:\n            print(0)\n        else:\n            print(1)\n    elif pos == 0:\n        if neg >= 2:\n            print(0)\n        else:\n            print(1)\n    elif ct >= 2:\n        print(0)\n    elif ct == 1:\n        if neg == 1 and pos == ct1:\n            print(1)\n        else:\n            print(0)\n    else:\n        print(1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    ct0 = 0\n    neg = 0\n    ct = 0\n    ct1 = 0\n    for i in range(n):\n        if a[i] == 0:\n            ct0 += 1\n        elif a[i] == 1:\n            ct1 += 1\n        elif a[i] < 0:\n            neg += 1\n        if abs(a[i]) >= 2:\n            ct += 1\n    pos = n - ct0 - neg\n    if neg == 0:\n        if ct >= 2:\n            print(0)\n        else:\n            print(1)\n    elif pos == 0:\n        if neg >= 2:\n            print(0)\n        else:\n            print(1)\n    elif ct >= 2:\n        print(0)\n    elif ct == 1:\n        if neg == 1 and pos == ct1:\n            print(1)\n        else:\n            print(0)\n    else:\n        print(1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = 0\n    c = 0\n    o = 0\n    z = 0\n    r = 1\n    for j in range(n):\n        if l[j] == -1:\n            c += 1\n        elif l[j] == 1:\n            x += 1\n        elif l[j] == 0:\n            z += 1\n        else:\n            o += 1\n        if o > 1:\n            r = 0\n            print(0)\n            break\n    if r != 0:\n        if c > 1 and x == 0:\n            r = 0\n        elif c and o:\n            r = 0\n        print(r)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    one = 0\n    mo = 0\n    o = 0\n    z = 0\n    res = 1\n    for i in range(n):\n        if arr[i] == -1:\n            mo += 1\n        elif arr[i] == 1:\n            one += 1\n        elif arr[i] == 0:\n            z += 1\n        else:\n            o += 1\n        if o > 1:\n            res = 0\n            print(0)\n            break\n    if res != 0:\n        if mo > 1 and one == 0:\n            res = 0\n        elif mo and o:\n            res = 0\n        print(res)", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = collections.Counter(a)\n    big = n - freq[0] - freq[1] - freq[-1]\n    if big > 1:\n        print(0)\n        continue\n    if big == 1 and freq[-1] > 0:\n        print(0)\n        continue\n    if freq[-1] > 1 and freq[1] == 0:\n        print(0)\n        continue\n    print(1)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        continue\n    a.sort()\n    if a[0] < 0:\n        s1 = a[0] * a[n - 1]\n        s2 = max(a[0] * a[1], a[n - 1] * a[n - 2])\n    else:\n        s1 = a[0] * a[1]\n        s2 = a[n - 1] * a[n - 2]\n    if a[0] <= s1 and a[n - 1] >= s2:\n        print(1)\n    else:\n        print(0)", "from collections import *\nfor u in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (a, b, z, o) = (0, 0, 0, 0)\n    for i in range(n):\n        if l[i] == 0:\n            z += 1\n        elif l[i] == 1:\n            a += 1\n        elif l[i] == -1:\n            b += 1\n        else:\n            o += 1\n    if o >= 2:\n        print(0)\n    elif b > 1 and a == 0:\n        print(0)\n    elif o == 0:\n        print(1)\n    elif b > 0:\n        print(0)\n    else:\n        print(1)", "T = int(input())\nans = []\nfor test in range(T):\n    N = int(input())\n    A = input().split()\n    ones = A.count('1')\n    zeros = A.count('0')\n    negs = A.count('-1')\n    nums = len(A) - ones - zeros - negs\n    if nums > 1:\n        MAX = 0\n    elif negs > 1 and ones == 0:\n        MAX = 0\n    elif nums > 0 and negs > 0:\n        MAX = 0\n    else:\n        MAX = 1\n    ans.append(MAX)\nfor a in ans:\n    print(a)", "T = int(input())\nans = []\nfor test in range(T):\n    N = int(input())\n    A = input().split()\n    ones = A.count('1')\n    zeros = A.count('0')\n    negs = A.count('-1')\n    nums = len(A) - ones - zeros - negs\n    if nums > 1:\n        MAX = 0\n    elif negs > 1 and ones == 0:\n        MAX = 0\n    elif nums and negs:\n        MAX = 0\n    else:\n        MAX = 1\n    ans.append(MAX)\nfor a in ans:\n    print(a)", "T = int(input())\nans = []\nfor test in range(T):\n    N = int(input())\n    A = input().split()\n    ones = A.count('1')\n    zeros = A.count('0')\n    negs = A.count('-1')\n    nums = len(A) - ones - zeros - negs\n    if nums > 1:\n        MAX = 0\n    elif negs > 1 and ones == 0:\n        MAX = 0\n    elif nums and negs:\n        MAX = 0\n    else:\n        MAX = 1\n    ans.append(MAX)\nfor a in ans:\n    print(a)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    notnums = 0\n    neg = 0\n    pos = 0\n    zero = 0\n    for i in range(n):\n        if l[i] == 0:\n            zero += 1\n        elif l[i] == -1:\n            neg += 1\n        elif l[i] == 1:\n            pos += 1\n        else:\n            notnums += 1\n    if notnums > 1:\n        print(0)\n    elif notnums and neg:\n        print(0)\n    elif neg > 1 and pos == 0:\n        print(0)\n    else:\n        print(1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l1 = Counter(map(int, input().split()))\n    c = n - l1[0] - l1[1] - l1[-1]\n    a = 0\n    if c > 1:\n        print(a)\n    elif c == 1 and l1[-1] > 0:\n        print(a)\n    elif l1[-1] > 1 and l1[1] == 0:\n        print(a)\n    else:\n        print(1)", "from collections import Counter\n\ndef f1(n, l):\n    l1 = Counter(l)\n    c = n - l1[0] - l1[1] - l1[-1]\n    a = 0\n    if c > 1:\n        print(a)\n        return\n    if c == 1 and l1[-1] > 0:\n        print(a)\n        return\n    if l1[-1] > 1 and l1[1] == 0:\n        print(a)\n        return\n    print(1)\nfor _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    f1(n, l1)", "from collections import Counter\n\ndef solve(n, nums):\n    numCounts = Counter(nums)\n    big = n - numCounts[0] - numCounts[1] - numCounts[-1]\n    if big > 1:\n        print(0)\n        return\n    if big == 1 and numCounts[-1] > 0:\n        print(0)\n        return\n    if numCounts[-1] > 1 and numCounts[1] == 0:\n        print(0)\n        return\n    print(1)\nfor _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    solve(n, nums)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    minus1 = 0\n    gthan1 = 0\n    count1 = 0\n    zz = 0\n    for i in range(N):\n        if A[i] == -1:\n            minus1 += 1\n        if abs(A[i]) > 1:\n            gthan1 += 1\n        if A[i] == 1:\n            count1 += 1\n    if gthan1 > 1:\n        zz = 1\n    if minus1 and gthan1:\n        zz = 1\n    if minus1 > 2 and count1 == 0:\n        zz = 1\n    if zz:\n        print('0')\n    else:\n        print('1')", "test = int(input())\nwhile test:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    neg = 0\n    pos = 0\n    for i in arr:\n        if i == -1:\n            neg += 1\n        elif abs(i) > 1:\n            pos += 1\n    if pos > 1:\n        print(0)\n    elif neg > 1 and 1 not in arr:\n        print(0)\n    elif neg >= 1 and pos == 1:\n        print(0)\n    else:\n        print(1)\n    test -= 1", "from sys import stdin\nfrom collections import Counter\n\ndef solve(n, nums):\n    numCounts = Counter(nums)\n    big = n - numCounts[0] - numCounts[1] - numCounts[-1]\n    if big > 1:\n        print(0)\n        return\n    if big == 1 and numCounts[-1] > 0:\n        print(0)\n        return\n    if numCounts[-1] > 1 and numCounts[1] == 0:\n        print(0)\n        return\n    print(1)\ninput = stdin.readline\nln = int(input())\nfor _ in range(ln):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    solve(n, nums)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c1 = 0\n    c2 = 0\n    for i in l:\n        if i == -1:\n            c1 += 1\n        elif abs(i) > 1:\n            c2 += 1\n    if c2 > 1:\n        print(0)\n    elif c1 > 1 and 1 not in l:\n        print(0)\n    elif c1 >= 1 and c2 == 1:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    notnums = 0\n    neg = 0\n    pos = 0\n    zero = 0\n    for i in range(n):\n        if l[i] == 0:\n            zero += 1\n        elif l[i] == -1:\n            neg += 1\n        elif l[i] == 1:\n            pos += 1\n        else:\n            notnums += 1\n    if notnums > 1:\n        print(0)\n    elif notnums and neg:\n        print(0)\n    elif neg > 1 and pos == 0:\n        print(0)\n    else:\n        print(1)", "test = int(input())\nfor t in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = 0\n    pos_1 = 0\n    neg_1 = 0\n    for num in arr:\n        if abs(num) > 1:\n            c += 1\n        if num == -1:\n            neg_1 += 1\n        if num == 1:\n            pos_1 += 1\n    if c > 1:\n        print(0)\n    elif c == 1 and neg_1 > 0:\n        print(0)\n    elif neg_1 > 1 and pos_1 == 0:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    d = {0: 0, 1: 0, 2: 0, -1: 0}\n    flag = 0\n    for i in arr:\n        if i == 0:\n            d[i] += 1\n        elif i == 1:\n            d[i] += 1\n        elif i == -1:\n            d[i] += 1\n        else:\n            d[2] += 1\n        if d[2] > 1:\n            flag = 1\n            break\n    if flag == 1:\n        print(0)\n    elif d[2] == 1:\n        if d[-1] >= 1:\n            print(0)\n        else:\n            print(1)\n    elif d[-1] > 1 and d[1] == 0:\n        print(0)\n    else:\n        print(1)", "import sys\ninput = sys.stdin.readline\n\ndef print(x):\n    sys.stdout.write(str(x) + '\\n')\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (grt, cn1, cp1) = (0, 0, 0)\n    for i in range(n):\n        if abs(arr[i]) > 1:\n            grt = grt + 1\n        if arr[i] == -1:\n            cn1 = cn1 + 1\n        if arr[i] == 1:\n            cp1 = cp1 + 1\n    if cn1 > 0 and grt != 0:\n        print(0)\n    elif cn1 > 1 and cp1 == 0:\n        print(0)\n    elif grt > 1:\n        print(0)\n    else:\n        print(1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = True\n    (grt, cn1, cp1) = (0, 0, 0)\n    for i in range(n):\n        if abs(arr[i]) > 1:\n            grt = grt + 1\n        if arr[i] == -1:\n            cn1 = cn1 + 1\n        if arr[i] == 1:\n            cp1 = cp1 + 1\n    if cn1 > 0 and grt != 0:\n        ans = False\n    if cn1 > 1 and cp1 == 0:\n        ans = False\n    if grt > 1:\n        ans = False\n    if ans:\n        print(1)\n    else:\n        print(0)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = True\n    (grt, cn1, cp1) = (0, 0, 0)\n    for i in range(n):\n        if abs(arr[i]) > 1:\n            grt = grt + 1\n        if arr[i] == -1:\n            cn1 = cn1 + 1\n        if arr[i] == 1:\n            cp1 = cp1 + 1\n    if cn1 > 0 and grt != 0:\n        ans = False\n    if cn1 > 1 and cp1 == 0:\n        ans = False\n    if grt > 1:\n        ans = False\n    if ans:\n        print(1)\n    else:\n        print(0)", "T = int(input())\n\ndef find_closure(arr, index, val, arr_set):\n    if val not in arr_set:\n        return 0\n    if index >= len(arr):\n        return 1\n    val_choose = val * arr[index]\n    a = find_closure(arr, index + 1, val_choose, arr_set)\n    b = find_closure(arr, index + 1, val, arr_set)\n    c = find_closure(arr, index + 1, arr[index], arr_set)\n    if a == 0 or b == 0 or c == 0:\n        return 0\n    return 1\nfor t in range(T):\n    n = int(input())\n    arr = [int(i) for i in str(input()).split()]\n    arr = sorted(arr)\n    arr_set = set(arr)\n    if n == 1:\n        print(1)\n    elif arr[-1] > 1 and arr[-2] > 1:\n        print(0)\n    elif arr[0] < -1 and arr[1] <= -1:\n        print(0)\n    elif arr[-1] * arr[0] not in arr:\n        print(0)\n    elif arr[-1] > 1 and arr[0] <= -1:\n        print(0)\n    elif arr[0] == -1 and arr[1] == -1 and (1 not in arr_set):\n        print(0)\n    else:\n        print(1)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = no = o = 0\n    for num in arr:\n        if num not in (1, 0, -1):\n            cnt += 1\n        if num == 1:\n            o += 1\n        if num == -1:\n            no += 1\n    if cnt > 1:\n        print(0)\n    elif no > 1 and o == 0:\n        print(0)\n    elif no > 0 and cnt > 0:\n        print(0)\n    else:\n        print(1)", "try:\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        l = list(map(int, input().split()))\n        a = l.count(1)\n        b = l.count(-1)\n        c = l.count(0)\n        d = n - (a + b + c)\n        if d > 1:\n            print(0)\n        elif d == 1:\n            if b > 0:\n                print(0)\n            else:\n                print(1)\n        elif d == 0:\n            if b > 1:\n                if a >= 1:\n                    print(1)\n                else:\n                    print(0)\n            elif b == 1 or b == 0:\n                print(1)\nexcept:\n    pass", "def main():\n    T = int(input())\n    for _ in range(T):\n        N = int(input())\n        A = [int(x) for x in input().split()]\n        c1 = 0\n        c2 = 0\n        for i in range(N):\n            if abs(A[i]) > 1:\n                c1 += 1\n                c2 = A[i]\n        if c1 > 1:\n            print(0)\n        elif c1 == 1:\n            if -1 in A:\n                print(0)\n            else:\n                print(1)\n        elif c1 == 0:\n            d = A.count(-1)\n            b = A.count(1)\n            if b == 0 and d > 1:\n                print(0)\n            else:\n                print(1)\nmain()", "def main():\n    T = int(input())\n    for _ in range(T):\n        N = int(input())\n        A = [int(x) for x in input().split()]\n        c1 = 0\n        c2 = 0\n        for i in range(N):\n            if abs(A[i]) > 1:\n                c1 += 1\n                c2 = A[i]\n        if c1 > 1:\n            print(0)\n        elif c1 == 1:\n            d = A.count(-1)\n            if d > 0:\n                print(0)\n            else:\n                print(1)\n        elif c1 == 0:\n            d = A.count(-1)\n            b = A.count(1)\n            if b == 0 and d > 1:\n                print(0)\n            else:\n                print(1)\nmain()", "for i in range(int(input())):\n    n = int(input())\n    one = 0\n    mone = 0\n    zero = 0\n    other = 0\n    l = list(map(int, input().split()))\n    for i in range(len(l)):\n        if l[i] == 0:\n            zero += 1\n        elif l[i] == 1:\n            one += 1\n        elif l[i] == -1:\n            mone += 1\n        else:\n            other += 1\n    if other > 1:\n        print(0)\n    elif mone > 1 and one == 0:\n        print(0)\n    elif other and mone:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = 0\n    o = 0\n    mo = 0\n    go = 0\n    for i in range(n):\n        if a[i] == 0:\n            z += 1\n        elif a[i] == 1:\n            o += 1\n        elif a[i] == -1:\n            mo += 1\n        else:\n            go += 1\n    if go > 1:\n        print(0)\n    elif mo > 1 and o == 0:\n        print(0)\n    elif go and mo:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    notnums = 0\n    neg = 0\n    pos = 0\n    zero = 0\n    for i in range(n):\n        if l[i] == 0:\n            zero += 1\n        elif l[i] == -1:\n            neg += 1\n        elif l[i] == 1:\n            pos += 1\n        else:\n            notnums += 1\n    if notnums > 1:\n        print(0)\n    elif notnums and neg:\n        print(0)\n    elif neg > 1 and pos == 0:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    li = [int(x) for x in input().split()]\n    c0 = 0\n    c1 = 0\n    c = 0\n    c_1 = 0\n    for i in li:\n        if i == 0:\n            c0 = c0 + 1\n        elif i == 1:\n            c1 = c1 + 1\n        elif i == -1:\n            c_1 = c_1 + 1\n        else:\n            c = c + 1\n    if c >= 2:\n        print(0)\n    elif c == 1 and c_1 >= 1:\n        print(0)\n    elif c1 == 0 and c_1 > 1:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    li = [int(x) for x in input().split()]\n    c0 = 0\n    c1 = 0\n    c = 0\n    c_1 = 0\n    for i in li:\n        if i == 0:\n            c0 = c0 + 1\n        elif i == 1:\n            c1 = c1 + 1\n        elif i == -1:\n            c_1 = c_1 + 1\n        else:\n            c = c + 1\n    if c >= 2:\n        print(0)\n    elif c == 1 and c_1 >= 1:\n        print(0)\n    elif c1 < 1 and c_1 >= 2:\n        print(0)\n    else:\n        print(1)", "def solve(n, arr):\n    mul = 1\n    for i in range(n - 1):\n        mul = arr[i] * arr[i + 1]\n        if mul in arr:\n            pass\n        else:\n            return 0\n    return 1\nt = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {int(i): 1 for i in arr}\n    (total, count, neg) = (1, 0, 0)\n    for i in arr:\n        if i != 0:\n            total = total * i\n            if i > 1 or i < -1:\n                count += 1\n            elif i == -1:\n                neg += 1\n            try:\n                if d[total]:\n                    pass\n            except:\n                print(0)\n                break\n            if neg > 1 or (neg == 1 and count == 1):\n                try:\n                    if d[-total]:\n                        pass\n                except:\n                    print(0)\n                    break\n            if count > 1:\n                print(0)\n                break\n    else:\n        print(1)\n    t -= 1", "from collections import Counter\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    freq = Counter(arr)\n    if len(freq) > 3:\n        print(0)\n        continue\n    (minus, zero, plus, other) = (0, 0, 0, 0)\n    if -1 in freq.keys():\n        minus = freq[-1]\n    if 0 in freq.keys():\n        zero = freq[0]\n    if 1 in freq.keys():\n        plus = freq[1]\n    other = n - (minus + zero + plus)\n    if other > 1:\n        print(0)\n        continue\n    if other == 1:\n        if minus > 0:\n            print(0)\n        else:\n            print(1)\n    elif minus > 1:\n        if plus > 0:\n            print(1)\n        else:\n            print(0)\n    else:\n        print(1)", "t = int(input())\nfor i in range(t):\n    n = input()\n    a = input()\n    (c0, c1, cn1, cpos, cneg) = (0, 0, 0, 0, 0)\n    for i in a.split():\n        if i == '1':\n            c1 += 1\n        elif i == '0':\n            c0 += 1\n        elif i == '-1':\n            cn1 += 1\n        elif int(i) > 0:\n            cpos += 1\n        else:\n            cneg += 1\n    if cpos + cneg > 1 or (cn1 > 1 and c1 == 0) or (cpos + cneg > 0 and cn1 > 0):\n        print('0')\n    else:\n        print('1')", "from sys import stdin\nfrom collections import Counter\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = []\n    c = Counter()\n    for i in range(n):\n        if a[i] != 0:\n            if c[a[i]] < 2:\n                c[a[i]] += 1\n                b.append(a[i])\n    if len(b) > 10:\n        print(0)\n        continue\n    for bitmask in range(1, 2 ** len(b)):\n        product = 1\n        for i in range(bitmask.bit_length()):\n            if bitmask >> i & 1 == 1:\n                product *= b[i]\n        if product not in b:\n            print(0)\n            break\n    else:\n        print(1)", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = collections.Counter(a)\n    big = n - freq[0] - freq[1] - freq[-1]\n    if big > 1:\n        print(0)\n        continue\n    if big == 1 and freq[-1] > 0:\n        print(0)\n        continue\n    if freq[-1] > 1 and freq[1] == 0:\n        print(0)\n        continue\n    print(1)", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = collections.Counter(a)\n    big = n - freq[0] - freq[1] - freq[-1]\n    if big > 1:\n        print(0)\n        continue\n    if big == 1 and freq[-1] > 0:\n        print(0)\n        continue\n    if freq[-1] > 1 and freq[1] == 0:\n        print(0)\n        continue\n    print(1)", "for _ in range(int(input())):\n    _ = int(input())\n    l = list(map(int, input().split()))\n    d = {int(i): 1 for i in l}\n    (total, count, neg) = (1, 0, 0)\n    for i in l:\n        if i != 0:\n            total *= i\n            if i > 1 or i < -1:\n                count += 1\n            elif i == -1:\n                neg += 1\n            try:\n                if d[total]:\n                    pass\n            except:\n                print(0)\n                break\n            if neg > 1 or (neg == 1 and count == 1):\n                try:\n                    if d[-total]:\n                        pass\n                except:\n                    print(0)\n                    break\n            if count > 1:\n                print(0)\n                break\n    else:\n        print(1)", "for _ in range(int(input())):\n    _ = int(input())\n    l = list(map(int, input().split()))\n    d = {int(i): 1 for i in l}\n    (total, count, neg) = (1, 0, 0)\n    for i in l:\n        if i != 0:\n            total *= i\n            if i > 1 or i < -1:\n                count += 1\n            elif i == -1:\n                neg += 1\n            try:\n                if d[total]:\n                    pass\n            except:\n                print(0)\n                break\n            if neg > 1 or (neg == 1 and count >= 1):\n                try:\n                    if d[-total]:\n                        pass\n                except:\n                    print(0)\n                    break\n            if count > 1:\n                print(0)\n                break\n    else:\n        print(1)", "def solveE(N, A):\n    set_A = set(A)\n    (p_1, m_1, x) = (False, False, None)\n    if 1 in set_A:\n        p_1 = True\n        set_A.remove(1)\n    if -1 in set_A:\n        m_1 = True\n        set_A.remove(-1)\n    if 0 in set_A:\n        set_A.remove(0)\n    if set_A:\n        x = next(iter(set_A))\n    if len(set_A) > 1 or A.count(x) > 1 or (x and m_1) or (A.count(-1) > 1 and (not p_1)):\n        return 0\n    else:\n        return 1\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    print(solveE(N, A))", "def solveE(N, A):\n    set_A = set(A)\n    (p_1, m_1, zr, x) = (False, False, False, None)\n    if 1 in set_A:\n        p_1 = True\n        set_A.remove(1)\n    if -1 in set_A:\n        m_1 = True\n        set_A.remove(-1)\n    if 0 in set_A:\n        zr = True\n        set_A.remove(0)\n    if len(set_A) > 1:\n        return 0\n    if set_A:\n        x = next(iter(set_A))\n    if A.count(x) > 1:\n        return 0\n    if x and m_1:\n        return 0\n    if m_1 and (A.count(-1) > 1 and (not p_1)):\n        return 0\n    return 1\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    print(solveE(N, A))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    if n == 1:\n        print(0)\n        continue\n    total = 0\n    zeros = l.count(0)\n    ones = l.count(1)\n    if -1 in l:\n        minusone = l.count(-1)\n        total += zeros + minusone + ones\n        if total == n:\n            if zeros != 0 and ones != 0:\n                print(1)\n            elif zeros == 0 and ones == 0:\n                print(0)\n            elif zeros != 0 and ones == 0:\n                if minusone == 1:\n                    print(1)\n                else:\n                    print(0)\n            elif zeros == 0 and ones != 0:\n                print(1)\n        else:\n            print(0)\n    else:\n        total += zeros + ones\n        if total == n or total == n - 1:\n            print(1)\n        else:\n            print(0)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dict = {}\n    for i in arr:\n        if i in dict:\n            dict[i] += 1\n        else:\n            dict[i] = 1\n    arr = sorted(arr)\n    flag = None\n    if arr[0] * arr[1] in dict.keys() and arr[0] * arr[n - 1] in dict.keys() and (arr[n - 1] * arr[n - 2] in dict.keys()):\n        flag = True\n    else:\n        flag = False\n    if flag:\n        print(1)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    one = arr.count(1)\n    zero = arr.count(0)\n    minus_one = arr.count(-1)\n    other = n - one - zero - minus_one\n    if other > 1:\n        print(0)\n    elif n == 2:\n        print(int(arr[0] * arr[1] in arr))\n    elif n == 1:\n        print(1)\n    elif arr[0] * arr[1] in arr and arr[0] * arr[-1] in arr and (arr[-1] * arr[-2] in arr):\n        print(1)\n    else:\n        print(0)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    q = Counter(l)\n    c = n - q[0] - q[1] - q[-1]\n    if c > 1 or (q[-1] > 0 and c >= 1) or (q[-1] > 1 and q[1] == 0):\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    one = arr.count(1)\n    zero = arr.count(0)\n    minus_one = arr.count(-1)\n    other = n - one - zero - minus_one\n    if other > 1:\n        print(0)\n    elif n == 2:\n        print(int(arr[0] * arr[1] in arr))\n    elif n == 1:\n        print(1)\n    elif arr[0] * arr[1] in arr and arr[0] * arr[-1] in arr and (arr[-1] * arr[-2] in arr):\n        print(1)\n    else:\n        print(0)", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = collections.Counter(a)\n    big = n - freq[0] - freq[1] - freq[-1]\n    if big > 1:\n        print(0)\n        continue\n    if big == 1 and freq[-1] > 0:\n        print(0)\n        continue\n    if freq[-1] > 1 and freq[1] == 0:\n        print(0)\n        continue\n    print(1)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = l.count(1)\n    b = l.count(-1)\n    c = l.count(0)\n    d = n - (a + b + c)\n    if d > 1:\n        print('0')\n    elif d == 1:\n        if b > 0:\n            print('0')\n        if b == 0:\n            print('1')\n    elif d == 0:\n        if b == 0:\n            print('1')\n        if b == 1:\n            print('1')\n        if b > 1:\n            if a > 0:\n                print('1')\n            else:\n                print('0')\n    t -= 1", "for tc in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    dis = dict()\n    for x in ls:\n        if dis.get(x) is None:\n            dis[x] = 1\n        else:\n            dis[x] += 1\n    cnt = 0\n    for x in ls:\n        if abs(x) > 1:\n            cnt += 1\n    if cnt > 1:\n        print(0)\n    elif dis.get(-1) is not None:\n        if dis[-1] >= 2 and dis.get(1) is None:\n            print(0)\n        elif dis[-1] > 0 and cnt == 1:\n            print(0)\n        else:\n            print(1)\n    else:\n        print(1)", "def solve(n, Arr):\n    onePresent = 1 in Arr\n    _Arr = [item for item in Arr if item not in [0, 1, -1]]\n    l = len(_Arr)\n    if l > 1:\n        return 0\n    negativeOne = Arr.count(-1)\n    if negativeOne == 0:\n        return 1\n    if l == 0:\n        if negativeOne > 1 and onePresent:\n            return 1\n        elif negativeOne > 1 and (not onePresent):\n            return 0\n        else:\n            return 1\n    elif negativeOne == 0:\n        return 1\n    else:\n        return 0\nfor _ in range(int(input())):\n    n = int(input())\n    Arr = list(map(int, input().split()))\n    Ans = solve(n, Arr)\n    if Ans is None:\n        print(1 / 0)\n    print(Ans)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        count_ = 0\n        count_ve = 0\n        count_1 = 0\n        count_0 = 0\n        for i in range(n):\n            if l[i] != 0 and l[i] != 1 and (l[i] != -1):\n                count_ += 1\n            if l[i] == -1:\n                count_ve += 1\n            if l[i] == 0:\n                count_0 += 1\n            if l[i] == 1:\n                count_1 += 1\n        if count_0 == 0 and count_1 == 0:\n            print(0)\n            continue\n        if count_ve > 1 and count_1 == 0:\n            print(0)\n            continue\n        if count_ >= 1 and count_ve >= 1:\n            print(0)\n            continue\n        if count_ >= 2:\n            print(0)\n            continue\n        print(1)\nexcept:\n    pass", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    mo = 0\n    o = 0\n    cl = 0\n    cg = 0\n    for i in l:\n        if i > 1:\n            cg += 1\n        elif i < -1:\n            cl += 1\n        elif i == 1:\n            o += 1\n        elif i == -1:\n            mo += 1\n    if cg > 1 or cl > 1 or cl + cg > 1:\n        print(0)\n    elif cg == 1 and mo > 0 or (cl == 1 and mo > 0):\n        print(0)\n    elif mo > 1 and o == 0:\n        print(0)\n    else:\n        print(1)", "def solve(array):\n    count_greater = 0\n    count_lesser = 0\n    negative = 0\n    positive = 0\n    for x in array:\n        if x > 1:\n            count_greater += 1\n        elif x < -1:\n            count_lesser += 1\n        elif x == -1:\n            negative += 1\n        elif x == 1:\n            positive += 1\n    if count_greater > 1 or count_lesser > 1 or count_lesser + count_greater > 1:\n        return 0\n    if count_greater == 1 and negative > 0:\n        return 0\n    if count_lesser == 1 and negative > 0:\n        return 0\n    if negative > 1 and positive == 0:\n        return 0\n    return 1\ntest = int(input())\nfor _ in range(test):\n    n = input()\n    array = [int(x) for x in input().split()]\n    print(solve(array))", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ct = 0\n    (negs, pos) = (0, 0)\n    for i in range(n):\n        negs += arr[i] == -1\n        pos += arr[i] == 1\n        if abs(arr[i]) > 1:\n            ct += 1\n            if ct >= 2:\n                break\n    if ct >= 2:\n        print(0)\n        continue\n    if negs > 1 and pos == 0:\n        print(0)\n        continue\n    if negs > 0 and ct == 1:\n        print(0)\n        continue\n    print(1)", "from collections import Counter\nt = int(input())\nwhile t:\n    n = int(input())\n    ans = 0\n    l = list(map(int, input().split()))\n    l = dict(Counter(l))\n    if -1 in l:\n        if 0 in l:\n            l.pop(0)\n        if 1 in l:\n            x = l[1]\n            l.pop(1)\n        else:\n            x = 0\n        y = l[-1]\n        l.pop(-1)\n        if len(l) == 0:\n            if y == 1:\n                ans = 1\n            elif y > 1 and x > 0:\n                ans = 1\n            else:\n                ans = 0\n        else:\n            ans = 0\n    else:\n        if 1 in l:\n            l.pop(1)\n        if 0 in l:\n            l.pop(0)\n        if len(l) > 1:\n            ans = 0\n        elif len(l) == 0:\n            ans = 1\n        elif len(l) == 1:\n            l = list(l.values())\n            if l[0] == 1:\n                ans = 1\n            else:\n                ans = 0\n    print(ans)\n    t = t - 1", "def solve(n, A):\n    cnt = 0\n    zero = 0\n    one = 0\n    neg = 0\n    for num in A:\n        if num > 1 or num < -1:\n            cnt += 1\n        elif num == -1:\n            neg += 1\n        elif num == 1:\n            one += 1\n        elif num == 0:\n            zero += 1\n        if cnt >= 2:\n            return 0\n    if cnt == 1:\n        if neg >= 1:\n            return 0\n    if neg >= 2:\n        if one == 0:\n            return 0\n    return 1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    ans = solve(n, A)\n    print(ans)", "import sys\ntests = int(input())\nfor test in range(tests):\n    n = int(input())\n    ar = [int(i) for i in input().split()]\n    zeroes = ar.count(0)\n    ones = ar.count(1)\n    neg_ones = ar.count(-1)\n    other_count = n - zeroes - ones - neg_ones\n    if other_count > 1:\n        print(0)\n    elif neg_ones > 1 and ones == 0:\n        print(0)\n    elif other_count == 0:\n        print(1)\n    elif neg_ones > 0:\n        print(0)\n    else:\n        print(1)", "def Solve(arr):\n    minusonecount = 0\n    onecount = 0\n    bigcount = 0\n    for i in arr:\n        if i == -1:\n            minusonecount += 1\n        if i == 1:\n            onecount += 1\n        if abs(i) > 1:\n            bigcount += 1\n    if bigcount > 1:\n        return False\n    if minusonecount >= 2 and onecount == 0:\n        return False\n    if minusonecount > 0 and bigcount > 0:\n        return False\n    return True\ntest = int(input())\nwhile test:\n    l = int(input())\n    arr = list(map(int, input().strip().split()))\n    print(1) if Solve(arr) else print(0)\n    test -= 1", "from collections import Counter\nt = int(input())\nwhile t:\n    n = int(input())\n    ans = 0\n    l = list(map(int, input().split()))\n    l = dict(Counter(l))\n    if -1 in l:\n        if 0 in l:\n            l.pop(0)\n        if 1 in l:\n            x = l[1]\n            l.pop(1)\n        else:\n            x = 0\n        y = l[-1]\n        l.pop(-1)\n        if len(l) == 0:\n            if y == 1:\n                ans = 1\n            elif y > 1 and x > 0:\n                ans = 1\n            else:\n                ans = 0\n        else:\n            ans = 0\n    else:\n        if 1 in l:\n            l.pop(1)\n        if 0 in l:\n            l.pop(0)\n        if len(l) > 1:\n            ans = 0\n        elif len(l) == 0:\n            ans = 1\n        elif len(l) == 1:\n            l = list(l.values())\n            if l[0] == 1:\n                ans = 1\n            else:\n                ans = 0\n    print(ans)\n    t = t - 1", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = collections.Counter(a)\n    big = n - freq[0] - freq[1] - freq[-1]\n    if big > 1:\n        print(0)\n        continue\n    if big == 1 and freq[-1] > 0:\n        print(0)\n        continue\n    if freq[-1] > 1 and freq[1] == 0:\n        print(0)\n        continue\n    print(1)", "import sys\nimport os.path\nimport heapq\nimport math\nimport copy\nfrom sys import stdin, stdout\nfrom collections import *\nfrom math import gcd, ceil, floor\nmod = int(1000000000.0 + 7)\nm1 = float('inf')\nif os.path.exists('Updated prg/Input3d.txt'):\n    sys.stdout = open('Updated prg/Output3d.txt', 'w')\n    sys.stdin = open('Updated prg/Input3d.txt', 'r')\n\ndef sinp():\n    return input()\n\ndef ninp():\n    return int(sinp())\n\ndef mapinp():\n    return map(int, sinp().split())\n\ndef smapinp():\n    return map(str, sinp().split())\n\ndef linp():\n    return list(mapinp())\n\ndef sl():\n    return list(sinp().split())\n\ndef power(n):\n    return 1 << n\n\ndef prnt(a):\n    print(a)\n\ndef prntl(a):\n    print(a, end=' ')\n\ndef prntlist(l1):\n    print(*l1)\nfor _ in range(ninp()):\n    n = ninp()\n    a = linp()\n    count = Counter(a)\n    c = 0\n    for i in a:\n        if abs(i) > 1:\n            c = c + 1\n    (a1, b) = (count[1], count[-1])\n    if c > 1:\n        prnt(0)\n    elif b > 1 and a1 == 0:\n        prnt(0)\n    elif b >= 1 and c == 1:\n        prnt(0)\n    else:\n        prnt(1)", "t = int(input())\nfor test in range(t):\n    d = {0: 0, 1: 0, -1: 0, 'a': 0}\n    n = int(input())\n    s = list(map(int, input().split()))\n    for i in s:\n        if i == 0:\n            d[0] += 1\n        elif i == 1:\n            d[1] += 1\n        elif i == -1:\n            d[-1] += 1\n        else:\n            d['a'] += 1\n    if n - (d[0] + d[1] + d[-1]) <= 1:\n        if d['a'] == 1 and d[-1] > 0:\n            print(0)\n        elif d[-1] > 1 and d[1] == 0:\n            print(0)\n        else:\n            print(1)\n    elif n == 1:\n        print(1)\n    else:\n        print(0)", "def closChef(n, arr):\n    output = 1\n    mapNum = {'greaterThanOne': 0, 'minusone': 0, 'ones': 0}\n    for num in arr:\n        if abs(num) > 1:\n            mapNum['greaterThanOne'] = mapNum['greaterThanOne'] + 1\n        elif num == -1:\n            mapNum['minusone'] = mapNum['minusone'] + 1\n        elif num == 1:\n            mapNum['ones'] = mapNum['ones'] + 1\n    if mapNum['greaterThanOne'] > 1:\n        output = 0\n    elif mapNum['greaterThanOne'] == 1 and mapNum['minusone'] > 0:\n        output = 0\n    elif mapNum['greaterThanOne'] == 0 and mapNum['minusone'] > 1 and (mapNum['ones'] == 0):\n        output = 0\n    return output\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split(' ')))\n    print(closChef(n, arr))", "import sys\nimport math\nimport heapq\nfrom collections import defaultdict as dd\nfrom collections import OrderedDict as od\nfrom collections import deque\nfrom itertools import permutations as pp\nfrom itertools import combinations as cc\nfrom sys import stdin\nfrom functools import cmp_to_key\nfrom functools import lru_cache\nfrom bisect import bisect_left as bs_l\nfrom bisect import bisect_right as bs_r\ninput = sys.stdin.readline\nmod = 10 ** 9 + 7\nsys.setrecursionlimit(10 ** 5)\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    (onp, ong, zer) = (arr.count(1), arr.count(-1), arr.count(0))\n    for i in arr:\n        if i == 1 or i == -1 or i == 0:\n            continue\n        ans += 1\n    if ans > 1:\n        print(0)\n        continue\n    if ong == 0:\n        print(1)\n        continue\n    if onp == 0:\n        if ong > 1:\n            print(0)\n        elif ans == 0:\n            print(1)\n        else:\n            print(0)\n        continue\n    if ans:\n        print(0)\n        continue\n    print(1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    ans = 1\n    lst = [1, -1, 0]\n    for i in arr:\n        if i not in lst:\n            count += 1\n        if count > 1:\n            ans = 0\n            break\n    if ans == 1:\n        if count == 1 and arr.count(-1) > 0:\n            ans = 0\n        elif arr.count(-1) > 1 and 1 not in arr:\n            ans = 0\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    if 1 not in l and -1 not in l and (0 not in l):\n        print(0)\n    elif -1 in l and max(l) > 1:\n        print(0)\n    elif l.count(-1) > 1 and 1 not in l:\n        print(0)\n    elif n == 2 and (1 in l or 0 in l):\n        print(1)\n    else:\n        l.sort()\n        if l[-1] * l[-2] not in l:\n            print(0)\n        elif l[0] * l[1] not in l:\n            print(0)\n        else:\n            print(1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    notnums = 0\n    neg = 0\n    pos = 0\n    zero = 0\n    for i in range(n):\n        if l[i] == 0:\n            zero += 1\n        elif l[i] == -1:\n            neg += 1\n        elif l[i] == 1:\n            pos += 1\n        else:\n            notnums += 1\n    if notnums > 1:\n        print(0)\n    elif notnums and neg:\n        print(0)\n    elif neg > 1 and pos == 0:\n        print(0)\n    else:\n        print(1)", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    freq = collections.Counter(a)\n    big = n - freq[0] - freq[1] - freq[-1]\n    if big > 1:\n        print(0)\n        continue\n    if big == 1 and freq[-1] > 0:\n        print(0)\n        continue\n    if freq[-1] > 1 and freq[1] == 0:\n        print(0)\n        continue\n    print(1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    notnums = 0\n    neg = 0\n    pos = 0\n    zero = 0\n    for i in range(n):\n        if l[i] == 0:\n            zero += 1\n        elif l[i] == -1:\n            neg += 1\n        elif l[i] == 1:\n            pos += 1\n        else:\n            notnums += 1\n    if notnums > 1:\n        print(0)\n    elif notnums and neg:\n        print(0)\n    elif neg > 1 and pos == 0:\n        print(0)\n    else:\n        print(1)", "import sys\nimport os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\ndepth = 1000005\nmod = 1000000007\nlim = mod * mod\nsys.setrecursionlimit(depth)\nfrom math import inf, ceil, sqrt\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    v = [0, 0, 0, 0]\n    for e in a:\n        if abs(e) > 1:\n            v[3] += 1\n        else:\n            v[e + 1] += 1\n    ans = 1\n    if v[3] > 1:\n        ans = 0\n    if v[3] and v[0]:\n        ans = 0\n    if v[0] > 1 and (not v[2]):\n        ans = 0\n    print(ans)", "def solution(arr, n):\n    if n == 1:\n        return 1\n    d = {}\n    d['0'] = 0\n    d['1'] = 0\n    d['-1'] = 0\n    d['u'] = 0\n    for i in range(n):\n        if arr[i] == 0:\n            d['0'] = d['0'] + 1\n        elif arr[i] == 1:\n            d['1'] = d['1'] + 1\n        elif arr[i] == -1:\n            d['-1'] = d['-1'] + 1\n        else:\n            d['u'] = d['u'] + 1\n    if d['u'] == 1:\n        if d['-1'] == 0:\n            return 1\n    if d['-1'] == 1 and d['u'] == 0:\n        return 1\n    if d['-1'] != 0 and d['u'] == 0 and (d['1'] != 0):\n        return 1\n    if d['u'] == 0 and d['-1'] == 0:\n        return 1\n    return 0\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solution(arr, n))", "import collections\n\ndef closure(arr, n):\n    freq = collections.Counter(arr)\n    big = n - freq[0] - freq[-1] - freq[1]\n    if big > 1:\n        return 0\n    if big == 1 and freq[-1]:\n        return 0\n    if freq[-1] > 1 and freq[1] == 0:\n        return 0\n    return 1\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    print(closure(arr, n))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    if 1 not in l and -1 not in l and (0 not in l):\n        print(0)\n    elif -1 in l and max(l) > 1:\n        print(0)\n    elif l.count(-1) > 1 and 1 not in l:\n        print(0)\n    elif n == 2 and (1 in l or 0 in l):\n        print(1)\n    else:\n        l.sort()\n        if l[-1] * l[-2] not in l:\n            print(0)\n        elif l[0] * l[1] not in l:\n            print(0)\n        else:\n            print(1)", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    l0 = li.count(0)\n    l1 = li.count(1)\n    l2 = li.count(-1)\n    if n == l0 + l1 + l2:\n        if l2 > 1:\n            if l1 == 0:\n                print(0)\n            else:\n                print(1)\n        else:\n            print(1)\n    elif n == l0 + l1 + 1:\n        print(1)\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    big_num_count = 0\n    present_negative_one = 0\n    negative_one_count = 0\n    present_positive_one = 0\n    zero_count = 0\n    for i in range(n):\n        if a[i] <= -2 or a[i] >= 2:\n            big_num_count += 1\n        if a[i] == -1:\n            present_negative_one = 1\n            negative_one_count += 1\n        if a[i] == 1:\n            present_positive_one = 1\n        if a[i] == 0:\n            zero_count += 1\n    if zero_count == n:\n        print(1)\n    elif big_num_count >= 2:\n        print(0)\n    elif big_num_count == 1:\n        if present_negative_one:\n            print(0)\n        else:\n            print(1)\n    elif negative_one_count == 1:\n        print(1)\n    elif present_positive_one:\n        print(1)\n    else:\n        print(0)", "def mgc(a):\n    count = 0\n    neg_one = 0\n    pos_one = 0\n    for i in a:\n        if i == -1:\n            neg_one += 1\n        if i == 1:\n            pos_one += 1\n        if abs(i) > 1:\n            count += 1\n    if count > 1:\n        return 0\n    if neg_one > 1 and pos_one == 0:\n        return 0\n    if neg_one > 0 and count > 0:\n        return 0\n    return 1\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(mgc(a))", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    zcount = count = ngcount = 0\n    for i in range(N):\n        if arr[i] == 0:\n            zcount += 1\n        elif arr[i] == 1:\n            count += 1\n        elif arr[i] == -1:\n            ngcount += 1\n    if ngcount:\n        if ngcount > 1 and (not count) or zcount + count + ngcount != N:\n            print(0)\n        else:\n            print(1)\n    elif zcount + count >= N - 1:\n        print(1)\n    else:\n        print(0)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n == 1:\n        print(1)\n    else:\n        s1 = a.count(0)\n        s2 = a.count(1)\n        s3 = a.count(-1)\n        if s3 == 0 and (s1 + s2 == n or s1 + s2 + 1 == n or s1 == n or (s2 == n)):\n            print(1)\n        elif s3 > 0:\n            if s2 == 0 and s3 == 1 and (s1 + s3 == n):\n                print(1)\n            elif s2 > 0 and s1 + s2 + s3 == n:\n                print(1)\n            else:\n                print(0)\n        else:\n            print(0)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n == 1:\n        print(1)\n    else:\n        s1 = a.count(0)\n        s2 = a.count(1)\n        s3 = a.count(-1)\n        if s3 == 0 and (s1 + s2 == n or s1 + s2 + 1 == n or s1 == n or (s2 == n)):\n            print(1)\n        elif s3 > 0:\n            if s2 == 0 and s3 == 1 and (s1 + s3 == n):\n                print(1)\n            elif s2 > 0 and s1 + s2 + s3 == n:\n                print(1)\n            else:\n                print(0)\n        else:\n            print(0)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    c1 = l.count(-1)\n    c2 = l.count(1)\n    c3 = l.count(0)\n    num = n - c1 - c2 - c3\n    if num > 1:\n        print(0)\n        continue\n    if c1 > 1 and c2 == 0:\n        print(0)\n        continue\n    if num == 1 and c1 > 0:\n        print(0)\n        continue\n    print(1)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    c = 0\n    minus = 0\n    one = False\n    for ele in l:\n        if ele != 0:\n            if ele == 1:\n                one = True\n            elif ele == -1:\n                minus += 1\n            else:\n                c += 1\n    print(0) if c > 1 or (minus and c == 1) or (minus > 1 and (not one)) else print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    zero = 0\n    one = 0\n    extra = 0\n    mone = 0\n    for i in range(n):\n        if arr[i] == 1:\n            one += 1\n        elif arr[i] == -1:\n            mone += 1\n        elif arr[i] == 0:\n            zero += 1\n        else:\n            extra += 1\n    if extra > 1:\n        ans = 0\n    elif extra == 1:\n        if mone > 0:\n            ans = 0\n        else:\n            ans = 1\n    elif mone > 1 and one > 1:\n        ans = 1\n    elif mone > 1 and one == 1:\n        ans = 1\n    elif mone > 1 and one == 0:\n        ans = 0\n    else:\n        ans = 1\n    print(ans)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    l = list(map(int, sys.stdin.readline().split()))\n    s = set(l)\n    mul = 1\n    f = 1\n    for i in range(n):\n        if l[i] == 0:\n            continue\n        mul *= l[i]\n        if mul not in s:\n            f = 0\n            break\n    sys.stdout.write(str(f) + '\\n')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    p1 = n1 = ln = 0\n    for i in a:\n        if i == 1:\n            p1 += 1\n        elif i == -1:\n            n1 += 1\n        elif abs(i) > 1:\n            ln += 1\n    if ln > 1:\n        print('0')\n    elif ln == 1 and n1 >= 1:\n        print('0')\n    elif n1 > 1 and p1 == 0:\n        print('0')\n    else:\n        print('1')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    s = set(a)\n    t = s.copy()\n    s.discard(0)\n    s.discard(1)\n    if len(s) > 1:\n        print(0)\n        continue\n    elif len(s) == 1:\n        e = min(s)\n        c = a.count(e)\n        if e != -1 and c > 1 or (e == -1 and c > 1 and (1 not in t)):\n            print(0)\n            continue\n    print(1)", "import math\nimport sys\n\ndef mult_inp():\n    return map(int, input().split())\n\ndef arr():\n    return list(map(int, input().split()))\n\ndef binarySearch(a, item, l, r):\n    while l <= r:\n        mid = (l + r) // 2\n        if a[mid] == item:\n            return mid\n        if a[mid] < item:\n            l = mid + 1\n        else:\n            r = mid - 1\n    return -1\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef _01knapsack(W, wt, p, n):\n    k = [[0 for i in range(W + 1)] for i in range(n + 1)]\n    for x in range(n + 1):\n        for w in range(W + 1):\n            if x == 0 or w == 0:\n                k[x][w] = 0\n            elif wt[x - 1] <= w:\n                k[x][w] = max(k[x - 1][w], k[x - 1][w - wt[x - 1]] + p[x - 1])\n            else:\n                k[x][w] = k[x - 1][w]\n    return k[n][W]\n\ndef solve():\n    n = int(input())\n    s = arr()\n    if n == 1:\n        print(1)\n    else:\n        s.sort()\n        a = s[0]\n        b = s[1]\n        c = s[n - 2]\n        d = s[n - 1]\n        if a * b not in s or d * c not in s or a * d not in s:\n            print(0)\n        else:\n            print(1)\nt = int(input())\nfor _ in range(t):\n    solve()"]