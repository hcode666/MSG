["import math\ntemp = 1\nfact = [1]\nfor i in range(1, 351):\n    temp *= i\n    fact += [temp]\n\ndef bino(a, b):\n    return fact[a] // (fact[a - b] * fact[b])\n\ndef find(n, k, m):\n    temp = bino(n, k)\n    if temp < m:\n        return -1\n    elif temp == m:\n        return '1' * k + '0' * (n - k)\n    if m == 1:\n        return '0' * (n - k) + '1' * k\n    for i in range(k, n + 1):\n        if bino(i, k) >= m:\n            break\n    index = i\n    temp = find(index - 1, k - 1, m - bino(index - 1, k))\n    return '0' * (n - index) + '1' + temp\nfor _ in range(int(input())):\n    (n, k, m) = list(map(int, input().strip().split(' ')))\n    print(find(n, k, m))", "import math\ntemp = 1\nfact = [1]\nfor i in range(1, 351):\n    temp *= i\n    fact += [temp]\n\ndef bino(a, b):\n    return fact[a] // (fact[a - b] * fact[b])\n\ndef find(n, k, m):\n    temp = bino(n, k)\n    if temp < m:\n        return -1\n    elif temp == m:\n        return '1' * k + '0' * (n - k)\n    if m == 1:\n        return '0' * (n - k) + '1' * k\n    for i in range(k, n + 1):\n        if bino(i, k) >= m:\n            break\n    index = i\n    temp = find(index - 1, k - 1, m - bino(index - 1, k))\n    return '0' * (n - index) + '1' + temp\nfor _ in range(int(input())):\n    (n, k, m) = list(map(int, input().strip().split(' ')))\n    print(find(n, k, m))", "import math\ntemp = 1\nfact = [1]\nfor i in range(1, 351):\n    temp *= i\n    fact += [temp]\n\ndef bino(a, b):\n    return fact[a] // (fact[a - b] * fact[b])\n\ndef find(n, k, m):\n    temp = bino(n, k)\n    if temp < m:\n        return -1\n    elif temp == m:\n        return '1' * k + '0' * (n - k)\n    if m == 1:\n        return '0' * (n - k) + '1' * k\n    for i in range(k, n + 1):\n        if bino(i, k) >= m:\n            break\n    index = i\n    temp = find(index - 1, k - 1, m - bino(index - 1, k))\n    return '0' * (n - index) + '1' + temp\nfor _ in range(int(input())):\n    (n, k, m) = list(map(int, input().strip().split(' ')))\n    print(find(n, k, m))", "def combi(n, k):\n    res = 1\n    for i in range(k):\n        res *= n - i\n    for i in range(k):\n        res //= i + 1\n    return res\nT = int(input())\nfor case in range(T):\n    (n, k, m) = map(int, input().split())\n    if combi(n, k) < m:\n        print(-1)\n        continue\n    b = []\n    for i in range(n):\n        rem_bits = n - i\n        if rem_bits == k or combi(rem_bits - 1, k) < m:\n            b.append('1')\n            m -= combi(rem_bits - 1, k)\n            k -= 1\n        else:\n            b.append('0')\n    print(''.join(b))", "tests = int(input())\nMAXN = 400\nc = [[-1 for _ in range(MAXN)] for _ in range(MAXN)]\n\ndef cnk(n, k):\n    if k > n:\n        return 0\n    if k == 0 or n == k:\n        return 1\n    if c[n][k] != -1:\n        return c[n][k]\n    c[n][k] = cnk(n - 1, k) + cnk(n - 1, k - 1)\n    return c[n][k]\nfor it in range(tests):\n    (n, k, m) = map(int, input().split())\n    x = m\n    left = k\n    s = ''\n    if cnk(n, k) < m:\n        print(-1)\n        continue\n    for i in range(n):\n        if cnk(n - i - 1, left) < x:\n            s += '1'\n            x -= cnk(n - i - 1, left)\n            left -= 1\n        else:\n            s += '0'\n    print(s)"]