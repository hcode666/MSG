["t = int(input())\nfor t in range(t):\n    n = int(input())\n    l = [0]\n    while len(l) < n:\n        x = l[-1]\n        k = -1\n        for i in range(len(l) - 2, -1, -1):\n            if l[i] == x:\n                k = i\n                break\n        if k == -1:\n            l.append(0)\n        else:\n            l.append(len(l) - 1 - k)\n    print(l.count(l[-1]))", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    s = [0]\n    while len(s) < n:\n        x = s[-1]\n        k = -1\n        for j in range(len(s) - 2, -1, -1):\n            if s[j] == x:\n                k = j\n                break\n        if k == -1:\n            s.append(0)\n        else:\n            s.append(len(s) - 1 - k)\n    print(s.count(s[-1]))", "t = int(input())\nfor t in range(t):\n    n = int(input())\n    l = [0]\n    while len(l) < n:\n        x = l[-1]\n        k = -1\n        for i in range(len(l) - 2, -1, -1):\n            if l[i] == x:\n                k = i\n                break\n        if k == -1:\n            l.append(0)\n        else:\n            l.append(len(l) - 1 - k)\n    print(l.count(l[-1]))", "def search(x):\n    i = 0\n    tot = 0\n    while i < len(les):\n        if les[::-1][i] == x:\n            tot = tot + 1\n        if i > 0 and tot > 1:\n            return i\n        i = i + 1\n    return 0\ni = int(input())\nx = 0\nlist1 = []\nwhile x < i:\n    pp = int(input())\n    les = [0]\n    k = 1\n    while k <= 128:\n        last_ele = les[-1]\n        ad = 0\n        if search(last_ele) != 0:\n            ad = search(last_ele)\n        les.append(ad)\n        k = k + 1\n    i1 = len(les[0:pp - 1])\n    tot = 0\n    while i1 >= 0:\n        if les[i1] == les[pp - 1]:\n            tot = tot + 1\n        i1 = i1 - 1\n    list1.append(tot)\n    x = x + 1\nfor ele in list1:\n    print(ele)", "l = [0, 0, 1]\nfor i in range(128):\n    x = l[-1]\n    if x not in l[:-1]:\n        l.append(0)\n    else:\n        count = 1\n        for j in range(len(l) - 2, -1, -1):\n            if l[j] == x:\n                l.append(count)\n                break\n            else:\n                count += 1\nfor _ in range(int(input())):\n    n = int(input())\n    q = l[:n]\n    print(q.count(q[-1]))", "l = [0]\nx = 0\nwhile True:\n    if x in l[:-1]:\n        k1 = len(l) - 1\n        k2 = len(l) - l[::-1][1:].index(x) - 2\n        l.append(k1 - k2)\n        x = l[-1]\n    else:\n        l.append(0)\n        x = 0\n    if len(l) - 1 == 127:\n        break\nfor t in range(int(input())):\n    n = int(input())\n    print(l[:n].count(l[n - 1]))", "l = [0]\nx = 0\nwhile True:\n    if x in l[:-1]:\n        k1 = len(l) - 1\n        k2 = len(l) - l[::-1][1:].index(x) - 2\n        l.append(k1 - k2)\n        x = l[-1]\n    else:\n        l.append(0)\n        x = 0\n    if len(l) - 1 == 127:\n        break\nfor t in range(int(input())):\n    n = int(input())\n    print(l[:n].count(l[n - 1]))", "t = int(input())\nfor t in range(t):\n    n = int(input())\n    l = [0]\n    while len(l) < n:\n        x = l[-1]\n        k = -1\n        for i in range(len(l) - 2, -1, -1):\n            if l[i] == x:\n                k = i\n                break\n        if k == -1:\n            l.append(0)\n        else:\n            l.append(len(l) - 1 - k)\n    print(l.count(l[-1]))", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    L = [0]\n    while len(L) < N:\n        x = L[-1]\n        k = -1\n        for i in range(len(L) - 2, -1, -1):\n            if L[i] == x:\n                k = i\n                break\n        if k == -1:\n            L.append(0)\n        else:\n            L.append(len(L) - 1 - k)\n    print(L.count(L[-1]))", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    L = [0]\n    while len(L) < N:\n        x = L[-1]\n        k = -1\n        for i in range(len(L) - 2, -1, -1):\n            if L[i] == x:\n                k = i\n                break\n        if k == -1:\n            L.append(0)\n        else:\n            L.append(len(L) - 1 - k)\n    print(L.count(L[-1]))", "t = int(input())\nfor ni in range(t):\n    l = [0]\n    n = int(input())\n    for nj in range(1, n):\n        if l.count(l[nj - 1]) == 1:\n            l.append(0)\n        else:\n            pos = 0\n            for i in range(0, nj - 1):\n                if l[i] == l[nj - 1]:\n                    pos = i\n            l.append(nj - 1 - pos)\n    print(l.count(l[-1]))", "for _ in range(int(input())):\n    n = int(input())\n    Flag = True\n    l = [0, 0]\n    if n == 1:\n        print(1)\n    else:\n        for i in range(1, n - 1):\n            x = l[i]\n            for j in range(i - 1, -1, -1):\n                if l[j] != x:\n                    Flag = False\n                else:\n                    l.append(int(i - j))\n                    Flag = True\n                    break\n            if Flag:\n                pass\n            else:\n                l.append(0)\n        count = 0\n        for k in range(len(l)):\n            if l[k] == l[n - 1]:\n                count += 1\n        print(count)", "for _ in range(int(input())):\n    n = int(input())\n    Flag = True\n    l = [0, 0]\n    if n == 1:\n        print(1)\n    else:\n        for i in range(1, n - 1):\n            x = l[i]\n            for j in range(i - 1, -1, -1):\n                if l[j] != x:\n                    Flag = False\n                else:\n                    l.append(int(i - j))\n                    Flag = True\n                    break\n            if Flag:\n                pass\n            else:\n                l.append(0)\n        count = 0\n        for k in range(len(l)):\n            if l[k] == l[n - 1]:\n                count += 1\n        print(count)", "for tc in range(int(input())):\n    n = int(input())\n    a = []\n    a.extend([0])\n    for i in range(n - 1):\n        x = a[-1]\n        if x not in a[:-1]:\n            next = 0\n        else:\n            next = a[-2::-1].index(x) + 1\n        a.append(next)\n    print(a.count(a[-1]))", "for _ in range(int(input())):\n    n = int(input())\n    Flag = True\n    l = [0, 0]\n    if n == 1:\n        print(1)\n    else:\n        for i in range(1, n - 1):\n            x = l[i]\n            for j in range(i - 1, -1, -1):\n                if l[j] != x:\n                    Flag = False\n                else:\n                    l.append(int(i - j))\n                    Flag = True\n                    break\n            if Flag:\n                pass\n            else:\n                l.append(0)\n        count = 0\n        for k in range(len(l)):\n            if l[k] == l[n - 1]:\n                count += 1\n        print(count)", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    L = [0]\n    while len(L) < N:\n        x = L[-1]\n        k = -1\n        for i in range(len(L) - 2, -1, -1):\n            if L[i] == x:\n                k = i\n                break\n        if k == -1:\n            L.append(0)\n        else:\n            L.append(len(L) - 1 - k)\n    print(L.count(L[-1]))", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    L = [0]\n    while len(L) < N:\n        x = L[-1]\n        k = -1\n        for i in range(len(L) - 2, -1, -1):\n            if L[i] == x:\n                k = i\n                break\n        if k == -1:\n            L.append(0)\n        else:\n            L.append(len(L) - 1 - k)\n    print(L.count(L[-1]))", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    L = [0]\n    while len(L) < N:\n        x = L[-1]\n        k = -1\n        for i in range(len(L) - 2, -1, -1):\n            if L[i] == x:\n                k = i\n                break\n        if k == -1:\n            L.append(0)\n        else:\n            L.append(len(L) - 1 - k)\n    print(L.count(L[-1]))", "l = [0]\nx = 0\nwhile True:\n    if x in l[:-1]:\n        k1 = len(l) - 1\n        k2 = len(l) - l[::-1][1:].index(x) - 2\n        l.append(k1 - k2)\n        x = l[-1]\n    else:\n        l.append(0)\n        x = 0\n    if len(l) - 1 == 127:\n        break\nfor t in range(int(input())):\n    n = int(input())\n    print(l[:n].count(l[n - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "l = [0]\nx = 0\nwhile True:\n    if x in l[:-1]:\n        k1 = len(l) - 1\n        k2 = len(l) - l[::-1][1:].index(x) - 2\n        l.append(k1 - k2)\n        x = l[-1]\n    else:\n        l.append(0)\n        x = 0\n    if len(l) - 1 == 127:\n        break\nfor t in range(int(input())):\n    n = int(input())\n    print(l[:n].count(l[n - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(0, len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(0, len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(0, len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(0, len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(0, len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(0, len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(0, len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    Flag = True\n    l = [0, 0]\n    if n == 1:\n        print(1)\n    else:\n        for i in range(1, n - 1):\n            x = l[i]\n            for j in range(i - 1, -1, -1):\n                if l[j] != x:\n                    Flag = False\n                else:\n                    l.append(int(i - j))\n                    Flag = True\n                    break\n            if Flag:\n                pass\n            else:\n                l.append(0)\n        count = 0\n        for k in range(len(l)):\n            if l[k] == l[n - 1]:\n                count += 1\n        print(count)", "t = input()\nfor t in range(0, int(t)):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(0, len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "A = [0, 0]\nfor i in range(2, 128):\n    x = A[-1]\n    for j in range(-2, -i - 1, -1):\n        if A[j] == x:\n            A.append(-1 - j)\n            break\n    else:\n        A.append(0)\nfor _ in range(int(input())):\n    N = int(input())\n    print(A[:N].count(A[N - 1]))", "for i in range(int(input())):\n    n = int(input())\n    lastfound = {}\n    countnum = {}\n    var = 0\n    if n == 1:\n        print(1)\n    else:\n        for i in range(n - 1):\n            if var not in lastfound:\n                countnum[var] = 1\n                lastfound[var] = i\n                var = 0\n            else:\n                temp = i - lastfound[var]\n                lastfound[var] = i\n                countnum[var] += 1\n                var = temp\n        if var in countnum:\n            print(countnum[var] + 1)\n        else:\n            print(1)", "t = input()\nfor t in range(0, int(t)):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(0, len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(0, len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "for i in range(int(input())):\n    n = int(input())\n    lastfound = {}\n    countnum = {}\n    var = 0\n    if n == 1:\n        print(1)\n    else:\n        for i in range(n - 1):\n            if var not in lastfound:\n                countnum[var] = 1\n                lastfound[var] = i\n                var = 0\n            else:\n                temp = i - lastfound[var]\n                lastfound[var] = i\n                countnum[var] += 1\n                var = temp\n        if var in countnum:\n            print(countnum[var] + 1)\n        else:\n            print(1)", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(0, len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    k = 0\n    for i in range(n - 1):\n        if k in l and l.count(k) == 1:\n            l.append(0)\n        else:\n            z = 0\n            for j in range(0, len(l) - 1):\n                if l[j] == k:\n                    z = j\n            l.append(len(l) - 1 - z)\n        k = l[len(l) - 1]\n    print(l.count(l[len(l) - 1]))", "sequence = [0]\nposition_dict = {0: 0}\nfor i in range(128):\n    if sequence[i] in position_dict:\n        distance = i - position_dict[sequence[i]]\n        sequence.append(distance)\n    else:\n        sequence.append(0)\n    position_dict[sequence[i]] = i\ntests = int(input())\nfor i in range(tests):\n    position = int(input())\n    print(sequence[:position].count(sequence[position - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    list1 = [0, 0, 1, 0, 2, 0, 2, 2, 1, 6]\n    if n <= 10:\n        s = list1[:n]\n        c = s.count(s[n - 1])\n        print(c)\n    else:\n        for i in range(10, n):\n            if list1.count(list1[i - 1]) >= 2:\n                l = list1[:i - 1]\n                l.reverse()\n                p = list1[i - 1]\n                ind = len(list1) - l.index(p) - 1\n                list1.append(i - ind)\n            else:\n                list1.append(0)\n        c = 0\n        for i in range(n):\n            if list1[i] == list1[n - 1]:\n                c += 1\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    for i in range(n - 1):\n        if l.count(l[i]) > 1:\n            l.append(i - (i - 1 - l[i - 1::-1].index(l[i])))\n        else:\n            l.append(0)\n    print(l.count(l[n - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    for i in range(n - 1):\n        if l.count(l[i]) > 1:\n            l.append(i - (i - 1 - l[i - 1::-1].index(l[i])))\n        else:\n            l.append(0)\n    print(l.count(l[n - 1]))", "for t in range(int(input())):\n    n = int(input())\n    l = [0]\n    ind = 0\n    for i in range(1, n):\n        if l[i - 1] not in l[0:i - 1]:\n            l.append(0)\n        elif l[i - 1] in l[0:i - 1]:\n            for j in range(i - 1):\n                if l[j] == l[i - 1]:\n                    ind = j\n            l.append(i - ind)\n    print(l.count(l[-1]))", "for _ in range(int(input())):\n    n = int(input())\n    li = [0, 0]\n    x = 0\n    for i in range(2, n):\n        if li.count(li[i - 1]) >= 2:\n            k = li[:i - 1]\n            k.reverse()\n            p = li[i - 1]\n            ind = len(li) - k.index(p) - 1\n            li.append(i - ind)\n        else:\n            li.append(0)\n    c = 0\n    for i in range(n):\n        if li[i] == li[n - 1]:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    li = [0, 0]\n    x = 0\n    for i in range(2, n):\n        if li.count(li[i - 1]) >= 2:\n            k = li[:i - 1]\n            k.reverse()\n            p = li[i - 1]\n            ind = len(li) - k.index(p) - 1\n            li.append(i - ind)\n        else:\n            li.append(0)\n    c = 0\n    for i in range(n):\n        if li[i] == li[n - 1]:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    li = [0, 0]\n    x = 0\n    for i in range(2, n):\n        if li.count(li[i - 1]) >= 2:\n            k = li[:i - 1]\n            k.reverse()\n            p = li[i - 1]\n            ind = len(li) - k.index(p) - 1\n            li.append(i - ind)\n        else:\n            li.append(0)\n    c = 0\n    for i in range(n):\n        if li[i] == li[n - 1]:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    li = [0, 0]\n    x = 0\n    for i in range(2, n):\n        if li.count(li[i - 1]) >= 2:\n            k = li[:i - 1]\n            k.reverse()\n            p = li[i - 1]\n            ind = len(li) - k.index(p) - 1\n            li.append(i - ind)\n        else:\n            li.append(0)\n    c = 0\n    for i in range(n):\n        if li[i] == li[n - 1]:\n            c += 1\n    print(c)", "arr = [0 for _ in range(129)]\nvisited = dict()\nfor i in range(1, 129):\n    if visited.get(arr[i - 1], -1) != -1:\n        arr[i] = i - 1 - visited[arr[i - 1]]\n    else:\n        arr[i] = 0\n    visited[arr[i - 1]] = i - 1\ntests = int(input())\nfor _ in range(tests):\n    index = int(input())\n    element = arr[index - 1]\n    count = 0\n    for i in range(index):\n        if arr[i] == element:\n            count += 1\n    print(count)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    s = {}\n    a = [0] * n\n    a[0] = 0\n    for i in range(n):\n        if i + 1 < n:\n            if s.get(a[i], -1) == -1:\n                a[i + 1] = 0\n            else:\n                a[i + 1] = i - s[a[i]]\n        s[a[i]] = i\n    print(a.count(a[n - 1]))", "ujju = int(input())\nfor jyo in range(ujju):\n    kk = int(input())\n    saw = {}\n    ty = [0] * kk\n    ty[0] = 0\n    for rf in range(kk):\n        if rf + 1 < kk:\n            if saw.get(ty[rf], -1) == -1:\n                ty[rf + 1] = 0\n            else:\n                ty[rf + 1] = rf - saw[ty[rf]]\n        saw[ty[rf]] = rf\n    print(ty.count(ty[kk - 1]))", "ujju = int(input())\nfor jyo in range(ujju):\n    kk = int(input())\n    saw = {}\n    ty = [0] * kk\n    ty[0] = 0\n    for rf in range(kk):\n        if rf + 1 < kk:\n            if saw.get(ty[rf], -1) == -1:\n                ty[rf + 1] = 0\n            else:\n                ty[rf + 1] = rf - saw[ty[rf]]\n        saw[ty[rf]] = rf\n    print(ty.count(ty[kk - 1]))", "try:\n    hseq = [0]\n    count = 1\n    for i in hseq:\n        if count > 127:\n            break\n        if hseq.count(i) == 1:\n            hseq += [0]\n        else:\n            val = hseq[len(hseq) - 2::-1].index(i) + 1\n            hseq += [val]\n        count += 1\n    for j in range(int(input())):\n        index = int(input())\n        print(hseq[:index].count(hseq[index - 1]))\nexcept:\n    pass", "try:\n    hseq = [0]\n    count = 1\n    for i in hseq:\n        if count > 127:\n            break\n        if hseq.count(i) == 1:\n            hseq += [0]\n        else:\n            val = hseq[len(hseq) - 2::-1].index(i) + 1\n            hseq += [val]\n        count += 1\n    for j in range(int(input())):\n        index = int(input())\n        print(hseq[:index].count(hseq[index - 1]))\nexcept:\n    pass", "hseq = [0]\ncount = 1\nfor i in hseq:\n    if count > 127:\n        break\n    if hseq.count(i) == 1:\n        hseq += [0]\n    else:\n        val = hseq[len(hseq) - 2::-1].index(i) + 1\n        hseq += [val]\n    count += 1\nfor j in range(int(input())):\n    index = int(input())\n    print(hseq[:index].count(hseq[index - 1]))", "li = [0, 0, 1, 0, 2, 0, 2, 2, 1, 6, 0, 5, 0, 2, 6, 5, 4, 0, 5, 3, 0, 3, 2, 9, 0, 4, 9, 3, 6, 14, 0, 6, 3, 5, 15, 0, 5, 3, 5, 2, 17, 0, 6, 11, 0, 3, 8, 0, 3, 3, 1, 42, 0, 5, 15, 20, 0, 4, 32, 0, 3, 11, 18, 0, 4, 7, 0, 3, 7, 3, 2, 31, 0, 6, 31, 3, 6, 3, 2, 8, 33, 0, 9, 56, 0, 3, 8, 7, 19, 0, 5, 37, 0, 3, 8, 8, 1, 46, 0, 6, 23, 0, 3, 9, 21, 0, 4, 42, 56, 25, 0, 5, 21, 8, 18, 52, 0, 6, 18, 4, 13, 0, 5, 11, 62, 0, 4, 7]\nfor _ in range(int(input())):\n    n = int(input())\n    print(li[:n].count(li[n - 1]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lastPos = {}\n    l = [0] * n\n    l[0] = 0\n    for index in range(n):\n        if index + 1 < n:\n            if lastPos.get(l[index], -1) == -1:\n                l[index + 1] = 0\n            else:\n                l[index + 1] = index - lastPos[l[index]]\n        lastPos[l[index]] = index\n    print(l.count(l[n - 1]))", "for t in range(int(input())):\n    N = int(input())\n    sequence = [0]\n    l = 0\n    for i in range(1, N):\n        k = 1\n        while l - k >= sequence[l]:\n            if sequence[l - k] == sequence[l]:\n                sequence.append(k)\n                break\n            k += 1\n        else:\n            sequence.append(0)\n        l += 1\n    print(sequence.count(sequence[-1]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lastPos = {}\n    l = [0] * n\n    l[0] = 0\n    for index in range(n):\n        if index + 1 < n:\n            if lastPos.get(l[index], -1) == -1:\n                l[index + 1] = 0\n            else:\n                l[index + 1] = index - lastPos[l[index]]\n        lastPos[l[index]] = index\n    print(l.count(l[n - 1]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lastPos = {}\n    l = [0] * n\n    l[0] = 0\n    for index in range(n):\n        if index + 1 < n:\n            if lastPos.get(l[index], -1) == -1:\n                l[index + 1] = 0\n            else:\n                l[index + 1] = index - lastPos[l[index]]\n        lastPos[l[index]] = index\n    print(l.count(l[n - 1]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lastPos = {}\n    l = [0] * n\n    l[0] = 0\n    for index in range(n):\n        if index + 1 < n:\n            if lastPos.get(l[index], -1) == -1:\n                l[index + 1] = 0\n            else:\n                l[index + 1] = index - lastPos[l[index]]\n        lastPos[l[index]] = index\n    print(l.count(l[n - 1]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lastPos = {}\n    l = [0] * n\n    l[0] = 0\n    for index in range(n):\n        if index + 1 < n:\n            if lastPos.get(l[index], -1) == -1:\n                l[index + 1] = 0\n            else:\n                l[index + 1] = index - lastPos[l[index]]\n        lastPos[l[index]] = index\n    print(l.count(l[n - 1]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(2)\n    else:\n        a = [0, 0]\n        for j in range(2, n):\n            if a[j - 1] not in a[:j - 1]:\n                a += [0]\n            else:\n                c = a[j - 2::-1]\n                s = len(c) - c.index(a[j - 1]) - 1\n                a += [j - 1 - s]\n        print(a.count(a[n - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(2)\n    else:\n        a = [0, 0]\n        for i in range(2, n):\n            if a[i - 1] not in a[:i - 1]:\n                a += [0]\n            else:\n                b = a[i - 2::-1]\n                c = len(b) - b.index(a[i - 1]) - 1\n                a += [i - 1 - c]\n        print(a.count(a[n - 1]))", "for _ in range(int(input())):\n    n = int(input())\n    xd = {0: [0]}\n    x = [0]\n    for i in range(1, n):\n        if len(xd[x[-1]]) == 1:\n            x += [0]\n            xd[0] += [i]\n        else:\n            a = xd[x[-1]][-1] - xd[x[-1]][-2]\n            x += [a]\n            if a in xd:\n                xd[a] += [i]\n            else:\n                xd[a] = [i]\n    print(len(xd[x[-1]]))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = [0] * n\n    for i in range(1, len(a)):\n        if a[i - 1] not in a[0:i - 1]:\n            a[i] = 0\n        else:\n            k = a[0:i - 1]\n            k = k[::-1]\n            p = len(k) - 1 - k.index(a[i - 1])\n            a[i] = i - 1 - p\n    print(a.count(a[n - 1]))", "def main():\n    n = int(input())\n    arr = [0 for _ in range(n)]\n    dic = {0: 0}\n    for i in range(1, n - 1):\n        num = arr[i]\n        if num in dic:\n            arr[i + 1] = i - dic[num]\n        dic[num] = i\n    x = arr[-1]\n    print(arr.count(x))\nt = int(input())\nfor _ in range(t):\n    main()", "def main():\n    n = int(input())\n    arr = [0 for _ in range(n)]\n    dic = {0: 0}\n    for i in range(1, n - 1):\n        num = arr[i]\n        if num in dic:\n            arr[i + 1] = i - dic[num]\n        dic[num] = i\n    x = arr[-1]\n    print(arr.count(x))\nt = int(input())\nfor _ in range(t):\n    main()", "def update_pos(x, i, pos):\n    if x in pos:\n        (pos[x][0], pos[x][1]) = (pos[x][1], i)\n    else:\n        pos[x] = [-1, i]\nseq = [0]\nlast_index = {0: [-1, 0]}\nfor i in range(1, 129):\n    x = seq[-1]\n    if last_index[x][0] == -1:\n        seq.append(0)\n    else:\n        seq.append(last_index[x][1] - last_index[x][0])\n    update_pos(seq[-1], i, last_index)\nfreq = {}\nresult = []\nfor num in seq:\n    freq[num] = freq.get(num, 0) + 1\n    result.append(freq[num])\nfor _ in range(int(input())):\n    N = int(input())\n    print(result[N - 1])", "def update_pos(x, i, pos):\n    if x in pos:\n        (pos[x][0], pos[x][1]) = (pos[x][1], i)\n    else:\n        pos[x] = [-1, i]\nseq = [0]\nlast_index = {0: [-1, 0]}\nfor i in range(1, 129):\n    x = seq[-1]\n    if last_index[x][0] == -1:\n        seq.append(0)\n    else:\n        seq.append(last_index[x][1] - last_index[x][0])\n    update_pos(seq[-1], i, last_index)\nfreq = {}\nresult = []\nfor num in seq:\n    freq[num] = freq.get(num, 0) + 1\n    result.append(freq[num])\nfor _ in range(int(input())):\n    N = int(input())\n    print(result[N - 1])", "def update_pos(x, i, pos):\n    if x in pos:\n        (pos[x][0], pos[x][1]) = (pos[x][1], i)\n    else:\n        pos[x] = [-1, i]\nseq = [0]\nlast_index = {0: [-1, 0]}\nfor i in range(1, 129):\n    x = seq[-1]\n    if last_index[x][0] == -1:\n        seq.append(0)\n    else:\n        seq.append(last_index[x][1] - last_index[x][0])\n    update_pos(seq[-1], i, last_index)\nfreq = {}\nresult = []\nfor num in seq:\n    freq[num] = freq.get(num, 0) + 1\n    result.append(freq[num])\nfor _ in range(int(input())):\n    N = int(input())\n    print(result[N - 1])", "def sequence(p, feq=[]):\n    p.append(0)\n    visited = [0] * 156\n    for i in range(2, 130):\n        if visited[p[i - 1]] != 0:\n            p.append(i - 1 - visited[p[i - 1]])\n        else:\n            p.append(0)\n        visited[p[i - 1]] = i - 1\n    p = p[1:]\n    return p\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = []\n    p.append(-1)\n    res = sequence(p)\n    count = 0\n    a = p[n]\n    for i in range(n + 1):\n        if p[i] == a:\n            count += 1\n    print(count)", "def sequence(p, feq=[]):\n    p.append(0)\n    visited = [0] * 156\n    for i in range(2, 130):\n        if visited[p[i - 1]] != 0:\n            p.append(i - 1 - visited[p[i - 1]])\n        else:\n            p.append(0)\n        visited[p[i - 1]] = i - 1\n    p = p[1:]\n    return p\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = []\n    p.append(-1)\n    res = sequence(p)\n    count = 0\n    a = p[n]\n    for i in range(n + 1):\n        if p[i] == a:\n            count += 1\n    print(count)", "seq = [-1 for i in range(130)]\nseq[0] = 0\nseq[1] = 0\nseq[2] = 1\nfor i in range(3, 130):\n    pre = seq[i - 1]\n    ind = -1\n    for j in range(i - 2, -1, -1):\n        if seq[j] == pre:\n            ind = j + 1\n            break\n    if ind > -1:\n        seq[i] = i - ind\n    else:\n        seq[i] = 0\nfor _ in range(int(input())):\n    n = int(input())\n    x = seq[n - 1]\n    count = 0\n    for i in range(n):\n        if seq[i] == x:\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    for i in range(1, n):\n        pre = l[i - 1]\n        if l.index(pre) != i - 1:\n            for j in range(i - 2, -1, -1):\n                if l[j] == pre:\n                    ne = i - 1 - j\n                    break\n            l.append(ne)\n        else:\n            l.append(0)\n    print(l.count(l[-1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    for i in range(1, n):\n        pre = l[i - 1]\n        if l.index(pre) != i - 1:\n            for j in range(i - 2, -1, -1):\n                if l[j] == pre:\n                    ne = i - 1 - j\n                    break\n            l.append(ne)\n        else:\n            l.append(0)\n    print(l.count(l[-1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    for i in range(1, n):\n        pre = l[i - 1]\n        if l.index(pre) != i - 1:\n            for j in range(i - 2, -1, -1):\n                if l[j] == pre:\n                    ne = i - 1 - j\n                    break\n            l.append(ne)\n        else:\n            l.append(0)\n    print(l.count(l[-1]))", "x = [0, 0, 1, 0, 2, 0, 2, 2, 1, 6, 0, 5, 0, 2, 6, 5, 4, 0, 5, 3, 0, 3, 2, 9, 0, 4, 9, 3, 6, 14, 0, 6, 3, 5, 15, 0, 5, 3, 5, 2, 17, 0, 6, 11, 0, 3, 8, 0, 3, 3, 1, 42, 0, 5, 15, 20, 0, 4, 32, 0, 3, 11, 18, 0, 4, 7, 0, 3, 7, 3, 2, 31, 0, 6, 31, 3, 6, 3, 2, 8, 33, 0, 9, 56, 0, 3, 8, 7, 19, 0, 5, 37, 0, 3, 8, 8, 1, 46, 0, 6, 23, 0, 3, 9, 21, 0, 4, 42, 56, 25, 0, 5, 21, 8, 18, 52, 0, 6, 18, 4, 13, 0, 5, 11, 62, 0, 4, 7, 40]\nt = int(input())\nfor i in range(t):\n    r = int(input())\n    count = 1\n    for j in range(0, r - 1, 1):\n        if x[r - 1] == x[j]:\n            count += 1\n        else:\n            continue\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [0]\n    for i in range(1, n):\n        pre = l[i - 1]\n        if l.index(pre) != i - 1:\n            for j in range(i - 2, -1, -1):\n                if l[j] == pre:\n                    ne = i - 1 - j\n                    break\n            l.append(ne)\n        else:\n            l.append(0)\n    print(l.count(l[-1]))", "MAX = 129\n\ndef seq():\n    d = {}\n    for i in range(MAX):\n        d[i] = []\n    d[0] = [0]\n    arr = [None] * (MAX + 1)\n    arr[0] = 0\n    for i in range(MAX):\n        value = d[arr[i]]\n        if len(value) == 0:\n            d[arr[i]].append(i)\n            arr[i + 1] = 0\n        else:\n            arr[i + 1] = i - value[-1]\n            d[arr[i]].append(i)\n    return arr\n\ndef solve(arr, n):\n    ele = arr[n]\n    c = 0\n    for i in range(n + 1):\n        if arr[i] == ele:\n            c += 1\n    print(c)\narr = seq()\nfor i in range(int(input())):\n    n = int(input())\n    solve(arr, n - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [0]\n    for i in range(1, n):\n        prev = l[i - 1]\n        if l.index(prev) != i - 1:\n            for j in range(i - 2, -1, -1):\n                if l[j] == prev:\n                    ne = i - 1 - j\n                    break\n            l.append(ne)\n        else:\n            l.append(0)\n    print(l.count(l[-1]))", "x = [0, 0, 1, 0, 2, 0, 2, 2, 1, 6, 0, 5, 0, 2, 6, 5, 4, 0, 5, 3, 0, 3, 2, 9, 0, 4, 9, 3, 6, 14, 0, 6, 3, 5, 15, 0, 5, 3, 5, 2, 17, 0, 6, 11, 0, 3, 8, 0, 3, 3, 1, 42, 0, 5, 15, 20, 0, 4, 32, 0, 3, 11, 18, 0, 4, 7, 0, 3, 7, 3, 2, 31, 0, 6, 31, 3, 6, 3, 2, 8, 33, 0, 9, 56, 0, 3, 8, 7, 19, 0, 5, 37, 0, 3, 8, 8, 1, 46, 0, 6, 23, 0, 3, 9, 21, 0, 4, 42, 56, 25, 0, 5, 21, 8, 18, 52, 0, 6, 18, 4, 13, 0, 5, 11, 62, 0, 4, 7, 40]\nt = int(input())\nfor i in range(t):\n    r = int(input())\n    count = 1\n    for j in range(0, r - 1, 1):\n        if x[r - 1] == x[j]:\n            count += 1\n        else:\n            continue\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [0]\n    for i in range(1, n):\n        pre = l[i - 1]\n        if l.index(pre) != i - 1:\n            for j in range(i - 2, -1, -1):\n                if l[j] == pre:\n                    ne = i - 1 - j\n                    break\n            l.append(ne)\n        else:\n            l.append(0)\n    print(l.count(l[-1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0]\n    temp = []\n    for i in range(n):\n        if l[i] not in temp:\n            l.append(0)\n        elif l[i] in temp:\n            x = temp[::-1]\n            ind = x.index(l[i])\n            ind = abs(len(x) - 1 - ind)\n            l.append(len(l) - 1 - ind)\n        temp.append(l[i])\n    l.pop(-1)\n    x = l[-1]\n    c = 0\n    while x in l:\n        c = c + 1\n        l.remove(x)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [0]\n    temp = []\n    for i in range(n):\n        if l[i] not in temp:\n            l.append(0)\n        if l[i] in temp:\n            x = temp[0:]\n            x = x[::-1]\n            ind = x.index(l[i])\n            ind = abs(len(x) - 1 - ind)\n            l.append(len(l) - 1 - ind)\n        temp.append(l[i])\n    l.pop(-1)\n    x = l[-1]\n    c = 0\n    while x in l:\n        c = c + 1\n        l.remove(x)\n    print(c)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    arr = [None] * n\n    if n == 1:\n        print(1)\n    else:\n        arr[0] = 0\n        arr[1] = 0\n        for i in range(2, n):\n            if arr[i - 1] in arr[0:i - 1]:\n                x = arr[0:i - 1]\n                arr[i] = i - 1 - (len(x) - 1 - x[::-1].index(arr[i - 1]))\n            else:\n                arr[i] = 0\n        print(arr.count(arr[-1]))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = [None] * n\n    if n == 1:\n        print(1)\n    else:\n        arr[0] = 0\n        arr[1] = 0\n        for i in range(2, n):\n            if arr[i - 1] in arr[0:i - 1]:\n                x = arr[0:i - 1]\n                arr[i] = i - 1 - (len(x) - 1 - x[::-1].index(arr[i - 1]))\n            else:\n                arr[i] = 0\n        print(arr.count(arr[-1]))\n    t -= 1", "S = (0, 0, 1, 0, 2, 0, 2, 2, 1, 6, 0, 5, 0, 2, 6, 5)\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    if N <= len(S):\n        k = S[:N]\n        print(k.count(S[N - 1]))\n    else:\n        for g in range(N - len(S)):\n            m = len(S) - 2\n            x = S[len(S) - 1]\n            while S[m] != x:\n                if m == 0:\n                    S += (0,)\n                    break\n                else:\n                    m = m - 1\n            else:\n                x = len(S) - m - 1\n                S += (x,)\n        k = S[:N]\n        print(k.count(S[N - 1]))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    lst = [0, 0]\n    for i in range(1, n - 1):\n        temp = lst[:i]\n        temp.reverse()\n        try:\n            reqIndex = len(temp) - temp.index(lst[i]) - 1\n        except ValueError:\n            reqIndex = -1\n        if reqIndex == -1:\n            lst.append(0)\n        else:\n            lst.append(i - reqIndex)\n    if n == 1:\n        print('1')\n    else:\n        print(lst.count(lst[-1]))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    lst = [0, 0]\n    for i in range(1, n - 1):\n        temp = lst[:i]\n        temp.reverse()\n        try:\n            reqIndex = len(temp) - temp.index(lst[i]) - 1\n        except ValueError:\n            reqIndex = -1\n        if reqIndex == -1:\n            lst.append(0)\n        else:\n            lst.append(i - reqIndex)\n    if n == 1:\n        print('1')\n    else:\n        print(lst.count(lst[-1]))", "a = [0]\nc = 1\ndic = {}\nwhile c <= 128:\n    temp = a[-1]\n    if temp in dic:\n        ind = dic[temp]\n        a.append(c - ind - 1)\n        dic[temp] = c - 1\n    else:\n        dic[temp] = c - 1\n        a.append(0)\n    c += 1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    sam = a[:n]\n    print(sam.count(a[n - 1]))", "p = [0, 0]\nfor i in range(3, 130):\n    l = len(p)\n    c = p[-1]\n    s = p[:-1]\n    if c in s:\n        r = s[::-1]\n        e = r.index(c)\n        p.append(l - (l - e - 1))\n    else:\n        p.append(0)\nn = int(input())\nfor j in range(n):\n    m = int(input())\n    g = p[:m]\n    print(g.count(g[-1]))", "p = [0, 0]\nfor i in range(3, 130):\n    l = len(p)\n    c = p[-1]\n    s = p[:-1]\n    if c in s:\n        r = s[::-1]\n        e = r.index(c)\n        p.append(l - (l - e - 1))\n    else:\n        p.append(0)\nn = int(input())\nfor j in range(n):\n    m = int(input())\n    g = p[:m]\n    print(g.count(g[-1]))", "appr = [[] for i in range(128)]\nseq = []\nel = 0\nfor i in range(128):\n    if len(appr[el]) > 1:\n        el = appr[el][-1] - appr[el][-2]\n    else:\n        el = 0\n    seq.append(el)\n    appr[el].append(i)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    el = seq[n - 1]\n    i = appr[el].index(n - 1)\n    print(i + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [0, 0]\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(2)\n    else:\n        for i in range(2, n):\n            x = l[i - 1]\n            if x not in l[:i - 1]:\n                l.append(0)\n            else:\n                li = l[:i - 1]\n                l.append(i - 1 - (len(li) - 1 - li[::-1].index(x)))\n        print(l[:n].count(l[n - 1]))", "for _ in range(int(input())):\n    N = int(input())\n    A = ['0']\n    for i in range(1, N):\n        if A.count(A[i - 1]) == 1:\n            A.append('0')\n        else:\n            A.append(str(i - 1 - (len(A[:i - 1]) - 1 - A[:i - 1][::-1].index(A[i - 1]))))\n    print(A.count(A[N - 1]))", "test_case = int(input())\n\ndef hard_sequence(seq, n):\n    for i in seq:\n        if len(seq) <= n:\n            if i not in seq[:-1]:\n                seq.append(0)\n            else:\n                seq_copy = seq[:-1].copy()\n                seq_copy.reverse()\n                index_reverse = seq_copy.index(i)\n                index = len(seq_copy) - 1 - index_reverse\n                seq.append(len(seq) - 1 - index)\nfor i in range(test_case):\n    n = int(input())\n    seq = [0]\n    hard_sequence(seq, n)\n    elem = seq[n - 1]\n    seq2 = seq[:n].copy()\n    print(seq2.count(elem))", "try:\n\n    def search(li, x):\n        for i in reversed(range(len(li))):\n            if li[i] == x:\n                return i\n\n    def generate(n):\n        res = [0]\n        for i in range(1, n):\n            if res[i - 1] in res[0:i - 1]:\n                ind = search(res[0:i - 1], res[i - 1])\n                res.append(abs(ind - i + 1))\n            else:\n                res.append(0)\n        return res\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        l = generate(n)\n        c = l[n - 1]\n        print(l.count(c))\nexcept:\n    pass", "def lastocc(seq, i):\n    j = i - 1\n    while j >= 0:\n        if seq[i] == seq[j]:\n            return i - j\n        j -= 1\n    return 0\nfor _ in range(int(input())):\n    n = int(input())\n    seq = [0]\n    for i in range(n - 1):\n        seq.append(lastocc(seq, i))\n    print(seq.count(seq[n - 1]))"]