["from collections import defaultdict\nfrom sys import *\n\ndef input():\n    return stdin.readline()\na = [True] * 1000100\n\ndef primes_sieve2(limit):\n    a[0] = a[1] = False\n    l = []\n    for (i, isprime) in enumerate(a):\n        if isprime:\n            l.append(i)\n            for n in range(i * i, limit, i):\n                a[n] = False\n    return l\nprime = primes_sieve2(1000100)\nfac = [[] for i in range(1000100)]\nfor i in prime:\n    for j in range(i, 1000100, i):\n        fac[j].append(i)\n\ndef get(divisors):\n    div = fac[divisors]\n    new = defaultdict(int)\n    tar = divisors\n    ind = 0\n    while tar > 1:\n        fir = div[ind]\n        while tar > 1 and tar % fir == 0:\n            tar //= fir\n            new[fir] += 1\n        ind += 1\n    return new\nfor _ in range(int(input())):\n    n = int(input())\n    lis = [int(i) for i in input().split()]\n    vis = defaultdict(list)\n    it = 0\n    for i in lis:\n        for (i, j) in get(i).items():\n            vis[i].append(j)\n    for j in vis.values():\n        it += max(j)\n    print(it)", "from collections import defaultdict\nfrom sys import *\n\ndef input():\n    return stdin.readline()\na = [True] * 1000100\n\ndef primes_sieve2(limit):\n    a[0] = a[1] = False\n    l = []\n    for (i, isprime) in enumerate(a):\n        if isprime:\n            l.append(i)\n            for n in range(i * i, limit, i):\n                a[n] = False\n    return l\nprime = primes_sieve2(1000100)\nfac = [[] for i in range(1000100)]\nfor i in prime:\n    for j in range(i, 1000100, i):\n        fac[j].append(i)\n\ndef get(divisors):\n    div = fac[divisors]\n    new = defaultdict(int)\n    tar = divisors\n    ind = 0\n    while tar > 1:\n        fir = div[ind]\n        while tar > 1 and tar % fir == 0:\n            tar //= fir\n            new[fir] += 1\n        ind += 1\n    return new\nfor _ in range(int(input())):\n    n = int(input())\n    lis = [int(i) for i in input().split()]\n    vis = defaultdict(list)\n    it = 0\n    for i in lis:\n        for (i, j) in get(i).items():\n            vis[i].append(j)\n    for j in vis.values():\n        it += max(j)\n    print(it)", "from collections import defaultdict\nfrom sys import *\n\ndef input():\n    return stdin.readline()\na = [True] * 1000100\n\ndef primes_sieve2(limit):\n    a[0] = a[1] = False\n    l = []\n    for (i, isprime) in enumerate(a):\n        if isprime:\n            l.append(i)\n            for n in range(i * i, limit, i):\n                a[n] = False\n    return l\nprime = primes_sieve2(1000100)\nfac = [[] for i in range(1000100)]\nfor i in prime:\n    for j in range(i, 1000100, i):\n        fac[j].append(i)\n\ndef get(divisors):\n    div = fac[divisors]\n    new = defaultdict(int)\n    tar = divisors\n    ind = 0\n    while tar > 1:\n        fir = div[ind]\n        while tar > 1 and tar % fir == 0:\n            tar //= fir\n            new[fir] += 1\n        ind += 1\n    return new\nfor _ in range(int(input())):\n    n = int(input())\n    lis = [int(i) for i in input().split()]\n    vis = defaultdict(list)\n    it = 0\n    for i in lis:\n        for (i, j) in get(i).items():\n            vis[i].append(j)\n    for j in vis.values():\n        it += max(j)\n    print(it)", "primes = [i for i in range(10 ** 6 + 4)]\nprime = []\n\ndef seive():\n    for i in range(2, len(primes)):\n        if primes[i] == i:\n            prime.append(i)\n            j = 2 * i\n            while j < len(primes):\n                primes[j] = i\n                j += i\nseive()\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(c) for c in input().split()]\n    all = [0 for i in range(10 ** 6 + 5)]\n    ans = 0\n    for i in arr:\n        x = i\n        while x > 1:\n            d = primes[x]\n            cnt = 0\n            while x % d == 0:\n                x = x // d\n                cnt += 1\n            if all[d] < cnt:\n                ans += cnt - all[d]\n                all[d] = cnt\n    print(ans)", "primes = [i for i in range(10 ** 6 + 4)]\nprime = []\n\ndef seive():\n    for i in range(2, len(primes)):\n        if primes[i] == i:\n            prime.append(i)\n            if i > 1000:\n                continue\n            j = 2 * i\n            while j < len(primes):\n                primes[j] = i\n                j += i\nseive()\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(c) for c in input().split()]\n    all = [0 for i in range(10 ** 6 + 5)]\n    ans = 0\n    for i in arr:\n        x = i\n        while x > 1:\n            d = primes[x]\n            cnt = 0\n            while x % d == 0:\n                x = x // d\n                cnt += 1\n            if all[d] < cnt:\n                ans += cnt - all[d]\n                all[d] = cnt\n    print(ans)", "from collections import defaultdict\nf = list(range(10 ** 6 + 1))\nfor i in range(2, 10 ** 3):\n    if f[i] != i:\n        continue\n    j = i << 1\n    while j <= 10 ** 6:\n        f[j] = i\n        j += i\nfor _ in range(int(input())):\n    input()\n    max_prime_powers = defaultdict(int)\n    xs = map(int, input().split())\n    for x in xs:\n        while x > 1:\n            c = 0\n            d = f[x]\n            while x % d == 0:\n                c += 1\n                x //= d\n            max_prime_powers[d] = max(max_prime_powers[d], c)\n    print(sum(max_prime_powers.values()))", "from collections import defaultdict\nF = [0] * 1000005\nans = 0\nfor i in range(1, 1000001):\n    F[i] = i\nfor i in range(2, 1000):\n    if F[i] != i:\n        continue\n    j = i + i\n    while j <= 1000000:\n        F[j] = i\n        j += i\nfor _ in range(int(input())):\n    ALL = defaultdict(int)\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for ele in arr:\n        while ele > 1:\n            cnt = 0\n            div = F[ele]\n            while ele % div == 0:\n                ele //= div\n                cnt += 1\n            if ALL[div] < cnt:\n                ALL[div] = cnt\n    print(sum(ALL.values()))", "import sys\nimport math\nfrom collections import defaultdict\nF = [0] * 1000005\nans = 0\nfor i in range(1, 1000001):\n    F[i] = i\nfor i in range(2, 1000):\n    if F[i] != i:\n        continue\n    j = i + i\n    while j <= 1000000:\n        F[j] = i\n        j += i\nt = int(input())\nfor _ in range(t):\n    ALL = defaultdict(int)\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for ele in arr:\n        while ele > 1:\n            cnt = 0\n            div = F[ele]\n            while ele % div == 0:\n                ele = ele // div\n                cnt += 1\n            if ALL[div] < cnt:\n                ALL[div] = cnt\n    print(sum(ALL.values()))", "from collections import defaultdict\nfrom sys import *\n\ndef input():\n    return stdin.readline()\na = [True] * 1000100\n\ndef primes_sieve2(limit):\n    a[0] = a[1] = False\n    l = []\n    for (i, isprime) in enumerate(a):\n        if isprime:\n            l.append(i)\n            for n in range(i * i, limit, i):\n                a[n] = False\n    return l\nprime = primes_sieve2(1000100)\nfac = [[] for i in range(1000100)]\nfor i in prime:\n    for j in range(i, 1000100, i):\n        fac[j].append(i)\n\ndef get(divisors):\n    div = fac[divisors]\n    new = defaultdict(int)\n    tar = divisors\n    ind = 0\n    while tar > 1:\n        fir = div[ind]\n        while tar > 1 and tar % fir == 0:\n            tar //= fir\n            new[fir] += 1\n        ind += 1\n    return new\nfor _ in range(int(input())):\n    n = int(input())\n    lis = [int(i) for i in input().split()]\n    vis = defaultdict(list)\n    it = 0\n    for i in lis:\n        for (i, j) in get(i).items():\n            vis[i].append(j)\n    for j in vis.values():\n        it += max(j)\n    print(it)", "from collections import defaultdict\nfrom sys import *\n\ndef input():\n    return stdin.readline()\na = [True] * 1000100\n\ndef primes_sieve2(limit):\n    a[0] = a[1] = False\n    l = []\n    for (i, isprime) in enumerate(a):\n        if isprime:\n            l.append(i)\n            for n in range(i * i, limit, i):\n                a[n] = False\n    return l\nprime = primes_sieve2(1000100)\nfac = [[] for i in range(1000100)]\nfor i in prime:\n    for j in range(i, 1000100, i):\n        fac[j].append(i)\n\ndef get(divisors):\n    div = fac[divisors]\n    new = defaultdict(int)\n    tar = divisors\n    ind = 0\n    while tar > 1:\n        fir = div[ind]\n        while tar > 1 and tar % fir == 0:\n            tar //= fir\n            new[fir] += 1\n        ind += 1\n    return new\nfor _ in range(int(input())):\n    n = int(input())\n    lis = [int(i) for i in input().split()]\n    vis = defaultdict(list)\n    it = 0\n    for i in lis:\n        for (i, j) in get(i).items():\n            vis[i].append(j)\n    for j in vis.values():\n        it += max(j)\n    print(it)", "import sys\nimport math\nfrom collections import defaultdict\nF = [0] * 1000005\nans = 0\nfor i in range(1, 1000001):\n    F[i] = i\nfor i in range(2, 1000):\n    if F[i] != i:\n        continue\n    j = i + i\n    while j <= 1000000:\n        F[j] = i\n        j += i\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    ALL = defaultdict(int)\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().split()))\n    for ele in arr:\n        while ele > 1:\n            cnt = 0\n            div = F[ele]\n            while ele % div == 0:\n                ele = ele // div\n                cnt += 1\n            if ALL[div] < cnt:\n                ALL[div] = cnt\n    print(sum(ALL.values()))", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    if all((i <= 3 for i in l)):\n        l = [i for i in l if i == 2 or i == 3]\n        print(len(set(l)))\n        continue\n    from collections import Counter\n    c = Counter(l)\n    from collections import defaultdict\n    ind = defaultdict(list)\n    for i in range(n):\n        ind[l[i]].append(i)\n    m = max(l)\n    ans = 0\n    prm = [1] * (m + 1)\n    for i in range(2, m + 1):\n        if not prm[i]:\n            continue\n        maxi = 0\n        for j in range(i, m + 1, i):\n            prm[j] = 0\n            if c[j]:\n                for z in ind[j]:\n                    cnt = 0\n                    while l[z] % i == 0:\n                        l[z] = l[z] // i\n                        cnt += 1\n                    maxi = max(maxi, cnt)\n                    cnt = 0\n        ans += maxi\n    print(ans)", "import sys\ndata = sys.stdin.read().split()\ndata.reverse()\n\ndef read():\n    return int(data.pop())\n\ndef readStr():\n    return data.pop()\nN = 10 ** 6 + 5\nsv = [i for i in range(N)]\nfor i in range(2, N):\n    if i * i > N:\n        break\n    if sv[i] < i:\n        continue\n    for j in range(i * i, N, i):\n        sv[j] = min(sv[j], i)\nT = read()\nfor test in range(T):\n    n = read()\n    M = {}\n    for i in range(n):\n        a = read()\n        while a > 1:\n            (cur, tot) = (sv[a], 0)\n            while not a % cur:\n                a //= cur\n                tot += 1\n            if cur in M:\n                M[cur] = max(M[cur], tot)\n            else:\n                M[cur] = tot\n    print(sum(M.values()))", "MAX = int(1000000.0) + 1\nfactors = [list() for x in range(MAX)]\nisprime = [True for x in range(MAX)]\nfor i in range(2, MAX):\n    if isprime[i]:\n        for j in range(i, MAX, i):\n            (counter, k) = (0, j)\n            isprime[j] = False\n            while k % i == 0:\n                k /= i\n                counter += 1\n            factors[j].append((i, counter))\nt = int(input().strip())\nm = dict()\nwhile t:\n    n = int(input().strip())\n    m.clear()\n    for x in input().strip().split():\n        for (f, e) in factors[int(x)]:\n            m[f] = max(e, m.get(f, 0))\n    print(sum(m.values()))\n    t -= 1", "from math import sqrt\nfrom collections import defaultdict\n\ndef primes(n):\n    pr = [True] * (n + 1)\n    for p in range(2, int(sqrt(n))):\n        if pr[p]:\n            for i in range(p * 2, n + 1, p):\n                pr[i] = False\n    for p in range(2, n + 1):\n        if pr[p]:\n            prime.append(p)\n            primer[p] = 1\nprime = []\nprimer = [0] * 1000001\nprimes(1000000)\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    hashmap = defaultdict(lambda : 0)\n    a = [int(x) for x in input().split()]\n    for num in a:\n        if num is 1:\n            continue\n        hasher = defaultdict(lambda : 0)\n        if primer[num] is 1:\n            hasher[num] = 1\n        else:\n            index = 0\n            while num > 1:\n                if primer[num] is 1:\n                    hasher[num] += 1\n                    break\n                if num % prime[index] is 0:\n                    num //= prime[index]\n                    hasher[prime[index]] += 1\n                else:\n                    index += 1\n        for key in hasher:\n            if hasher[key] > hashmap[key]:\n                hashmap[key] = hasher[key]\n    count = 0\n    for key in hashmap:\n        count += hashmap[key]\n    print(count)\n    t -= 1"]