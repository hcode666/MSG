["fact = [None] * 1001\n\ndef nck(n, k):\n    return fact[n] / (fact[n - k] * fact[k])\nfact[0] = 1\nfor i in range(1, 1001):\n    fact[i] = fact[i - 1] * i\nt = int(input())\nfor z in range(t):\n    (s, n, m, k) = map(int, input().split())\n    P = 0\n    for i in range(k, min(n, m)):\n        P += nck(m - 1, i) * nck(s - m, n - i - 1)\n    Q = nck(s - 1, n - 1)\n    ans = float(P / Q)\n    print('%.6f' % ans)", "fact = [None] * 1001\n\ndef nck(n, k):\n    return fact[n] / (fact[n - k] * fact[k])\nfact[0] = 1\nfor i in range(1, 1001):\n    fact[i] = fact[i - 1] * i\nt = int(input())\nfor z in range(t):\n    (s, n, m, k) = map(int, input().split())\n    P = 0\n    for i in range(k, min(n, m)):\n        P += nck(m - 1, i) * nck(s - m, n - i - 1)\n    Q = nck(s - 1, n - 1)\n    ans = float(P / Q)\n    print('%.6f' % ans)", "fact = [None] * 1001\nfact[0] = 1\nfor i in range(1, 1001):\n    fact[i] = fact[i - 1] * i\nt = int(input())\nfor z in range(t):\n    (s, n, m, k) = map(int, input().split())\n    P = 0\n    for i in range(k, min(n, m)):\n        P += fact[m - 1] / (fact[i] * fact[m - i - 1]) * (fact[s - m] / (fact[s - m - n + i + 1] * fact[n - i - 1]))\n    Q = fact[s - 1] / (fact[n - 1] * fact[s - n])\n    ans = float(P / Q)\n    print('%.6f' % ans)", "for _ in range(int(input())):\n    (S, N, M, K) = map(int, input().split())\n\n    def cnk(n, k):\n        k_min = min(k, n - k)\n        (num, denom) = (1, 1)\n        for x in range(1, k_min + 1):\n            num *= n - x + 1\n            denom *= x\n        return num // denom\n    total = cnk(S - 1, N - 1)\n    upper_lim = min(M, N)\n    num = 0\n    for k in range(K, upper_lim + 1 - 1):\n        if S - M >= N - k - 1:\n            num += cnk(M - 1, k) * cnk(S - M, N - k - 1)\n    ans = num / float(total)\n    print('%.9f' % ans)", "for _ in range(int(input())):\n    (S, N, M, K) = map(int, input().split())\n\n    def cnk(n, k):\n        k_min = min(k, n - k)\n        (num, denom) = (1, 1)\n        for x in range(1, k_min + 1):\n            num *= n - x + 1\n            denom *= x\n        return num // denom\n    total = cnk(S - 1, N - 1)\n    upper_lim = min(M, N)\n    num = 0\n    for k in range(K, upper_lim + 1 - 1):\n        if S - M >= N - k - 1:\n            num += cnk(M - 1, k) * cnk(S - M, N - k - 1)\n    ans = num / float(total)\n    print('%.9f' % ans)", "a = [[0] * 1010 for i in range(1010)]\nfor i in range(1007):\n    (a[0][i], a[i][0]) = (0, 1)\nfor i in range(1, 1005):\n    for j in range(1, i + 1):\n        a[i][j] = a[i - 1][j - 1] + a[i - 1][j]\nfor _ in range(int(input())):\n    sum = 0.0\n    (s, n, m, k) = map(int, input().split(' '))\n    if s == 1:\n        print('1.000000')\n        continue\n    r = a[s][n]\n    for i in range(k, m):\n        p = a[m][i + 1]\n        if n < i + 1 or s - m < n - (i + 1):\n            q = 0\n        else:\n            q = a[s - m][n - (i + 1)]\n        sum = sum + float(p * q * (i + 1) * s)\n    sum = sum / float(r * m * n)\n    print('%.6f' % sum)", "def nCk(N, K):\n    nn = N\n    klim = min(K, N - K) + 1\n    res = 1\n    for kk in range(1, klim):\n        res *= nn\n        res /= kk\n        nn -= 1\n    return res\n\ndef test1():\n    CC = input()\n    CCT = CC.split(' ')\n    S = int(CCT[0])\n    N = int(CCT[1])\n    M = int(CCT[2])\n    K = int(CCT[3])\n    total = nCk(S - 1, N - 1)\n    klim = min(M, N)\n    num = 0\n    for kk in range(K, klim):\n        if S - M < N - kk - 1:\n            continue\n        num += nCk(M - 1, kk) * nCk(S - M, N - kk - 1)\n    ans = num / float(total)\n    print('%.9f' % ans)\nt = int(input())\nfor tt in range(0, t):\n    test1()", "fac = [1]\n\ndef fact():\n    fac[0] = 1\n    for i in range(1, 1001):\n        fac.append(i * fac[i - 1])\n\ndef nCk(N, K):\n    nn = N\n    klim = min(K, N - K) + 1\n    res = 1\n    for kk in range(1, klim):\n        res *= nn\n        res /= kk\n        nn -= 1\n    return res\n\ndef test1():\n    CC = input()\n    CCT = CC.split()\n    S = int(CCT[0])\n    N = int(CCT[1])\n    M = int(CCT[2])\n    K = int(CCT[3])\n    total = nCk(S - 1, N - 1)\n    klim = min(M, N)\n    num = 0\n    for kk in range(K, klim):\n        if S - M < N - kk - 1:\n            continue\n        num += nCk(M - 1, kk) * nCk(S - M, N - kk - 1)\n    ans = num / float(total)\n    print('%.9f' % ans)\n\ndef test2():\n    CC = input()\n    CCT = CC.split(' ')\n    S = int(CCT[0])\n    N = int(CCT[1])\n    M = int(CCT[2])\n    K = int(CCT[3])\n    total = fac[S - 1] / fac[N - 1] / fac[S - N]\n    klim = min(M, N)\n    num = 0\n    for kk in range(K, klim):\n        if S - M < N - kk - 1:\n            continue\n        num += fac[M - 1] / fac[kk] / fac[M - kk - 1] * fac[S - M] / fac[N - kk - 1] / fac[S - M - N + kk + 1]\n    ans = num / float(total)\n    print('%.9f' % ans)\nt = int(input())\nfor tt in range(0, t):\n    test1()", "from decimal import *\nfactlist = []\nfactlist.append(1)\nfor i in range(1, 1001):\n    factlist.append(factlist[i - 1] * i)\n\ndef comb(n, m):\n    if m > n:\n        return 0\n    elif n == m:\n        return 1\n    else:\n        cmb = factlist[n] // (factlist[m] * factlist[n - m])\n        return cmb\nt = int(input())\nwhile t:\n    t -= 1\n    (s, n, m, k) = map(int, input().split())\n    s -= 1\n    n -= 1\n    m -= 1\n    if n < k:\n        print(0.0)\n    elif (s == n) | (s == m) & (n >= k) | (n - s + m >= k):\n        print(1.0)\n    else:\n        ans = 0\n        for i in range(k, m + 1):\n            ans = ans + comb(m, i) * comb(s - m, n - i)\n        ans1 = comb(s, n)\n        getcontext().prec = 6\n        print(Decimal(ans) / Decimal(ans1))", "import math\na = [[0] * 1001 for _ in range(1001)]\nfor i in range(0, 1001):\n    for j in range(0, i + 1):\n        if j == 0 or j == i:\n            a[i][j] = 1\n        else:\n            a[i][j] = a[i - 1][j - 1] + a[i - 1][j]\nt = int(input())\nwhile t > 0:\n    line = input()\n    line = line.split(' ')\n    s = int(line[0])\n    n = int(line[1])\n    m = int(line[2])\n    k = int(line[3])\n    save = 0\n    while k < m and k < n:\n        save = save + a[m - 1][k] * a[s - m][n - k - 1]\n        k = k + 1\n    ans = save / a[s - 1][n - 1]\n    print('%.6f' % ans)\n    t = t - 1", "from decimal import *\nfactlist = []\nfactlist.append(1)\nfor i in range(1, 1001):\n    factlist.append(factlist[i - 1] * i)\n\ndef comb(n, m):\n    if m > n:\n        return 0\n    elif n == m:\n        return 1\n    else:\n        cmb = factlist[n] // (factlist[m] * factlist[n - m])\n        return cmb\nt = int(input())\nwhile t:\n    t -= 1\n    (s, n, m, k) = map(int, input().split())\n    s -= 1\n    n -= 1\n    m -= 1\n    if n < k:\n        print(0.0)\n    elif (s == n) | (s == m) & (n >= k) | (n - s + m >= k):\n        print(1.0)\n    else:\n        ans = 0\n        for i in range(k, m + 1):\n            ans = ans + comb(m, i) * comb(s - m, n - i)\n        ans1 = comb(s, n)\n        getcontext().prec = 6\n        print(Decimal(ans) / Decimal(ans1))", "from decimal import *\nfactlist = []\nfactlist.append(1)\nfor i in range(1, 1001):\n    factlist.append(factlist[i - 1] * i)\n\ndef comb(n, m):\n    if m > n:\n        return 0\n    elif n == m:\n        return 1\n    else:\n        cmb = factlist[n] // (factlist[m] * factlist[n - m])\n        return cmb\nt = int(input())\nwhile t:\n    t -= 1\n    (s, n, m, k) = map(int, input().split())\n    s -= 1\n    n -= 1\n    m -= 1\n    if n < k:\n        print(0.0)\n    elif (s == n) | (s == m) & (n >= k) | (n - s + m >= k):\n        print(1.0)\n    else:\n        ans = 0\n        for i in range(k, m + 1):\n            ans = ans + comb(m, i) * comb(s - m, n - i)\n        ans1 = comb(s, n)\n        getcontext().prec = 6\n        print(Decimal(ans) / Decimal(ans1))", "dp = []\n\ndef pre():\n    for i in range(1002):\n        dp.append([])\n        for j in range(i + 1):\n            if i == 0 or i == j or j == 0:\n                dp[i].append(1)\n            else:\n                dp[i].append(dp[i - 1][j - 1] + dp[i - 1][j])\nt = int(input())\npre()\nfor y in range(t):\n    line = input().split()\n    s = int(line[0])\n    n = int(line[1])\n    m = int(line[2])\n    k = int(line[3])\n    if k == 0:\n        print('1.000000')\n        continue\n    if s == n:\n        print('1.000000')\n        continue\n    s = s - 1\n    n = n - 1\n    m = m - 1\n    if n < k:\n        print('0.000000')\n        continue\n    if n - (s - m) >= k:\n        print('1.000000')\n        continue\n    total = 0\n    for i in range(k, m + 1):\n        if n - i >= 0 and s - m >= n - i:\n            total += dp[m][i] * dp[s - m][n - i]\n    print('{0:.6f}'.format(total / dp[s][n]))", "coff = [[0 for x in range(1003)] for x in range(1003)]\n\ndef precompute():\n    coff[0][0] = 1\n    coff[1][0] = coff[1][1] = 1\n    for i in range(2, 1002, 1):\n        for j in range(0, i + 1, 1):\n            if i == j:\n                coff[i][j] = 1\n            elif j == 0:\n                coff[i][j] = 1\n            else:\n                coff[i][j] = coff[i - 1][j] + coff[i - 1][j - 1]\n\ndef main():\n    precompute()\n    t = eval(input())\n    for i in range(0, t, 1):\n        (s, n, m, k) = map(int, input().split(' '))\n        if s == n:\n            print('1.000000\\n')\n            continue\n        if k > n:\n            print('0.000000\\n')\n            continue\n        else:\n            total = float(coff[s - 1][n - 1])\n            chance = 0.0\n            for j in range(k, m):\n                chance += coff[m - 1][j] * coff[s - m][n - j - 1]\n            print('%f\\n' % float(chance / total))\nmain()", "dp = []\n\ndef pre():\n    for i in range(1002):\n        dp.append([])\n        for j in range(i + 1):\n            if i == 0 or i == j or j == 0:\n                dp[i].append(1)\n            else:\n                dp[i].append(dp[i - 1][j - 1] + dp[i - 1][j])\nt = int(input())\npre()\nfor y in range(t):\n    line = input().split()\n    s = int(line[0])\n    n = int(line[1])\n    m = int(line[2])\n    k = int(line[3])\n    if k == 0:\n        print('1.000000')\n        continue\n    if s == n:\n        print('1.000000')\n        continue\n    s = s - 1\n    n = n - 1\n    m = m - 1\n    if n < k:\n        print('0.000000')\n        continue\n    if n - (s - m) >= k:\n        print('1.000000')\n        continue\n    total = 0\n    for i in range(k, m + 1):\n        if n - i >= 0 and s - m >= n - i:\n            total += dp[m][i] * dp[s - m][n - i]\n    print('{0:.6f}'.format(total / dp[s][n]))", "dp = []\n\ndef pre():\n    for i in range(1002):\n        dp.append([])\n        for j in range(i + 1):\n            if i == 0 or i == j or j == 0:\n                dp[i].append(1)\n            else:\n                dp[i].append(dp[i - 1][j - 1] + dp[i - 1][j])\nt = int(input())\npre()\nfor y in range(t):\n    line = input().split()\n    s = int(line[0])\n    n = int(line[1])\n    m = int(line[2])\n    k = int(line[3])\n    if k == 0:\n        print('1.000000')\n        continue\n    if s == n:\n        print('1.000000')\n        continue\n    s = s - 1\n    n = n - 1\n    m = m - 1\n    if n < k:\n        print('0.000000')\n        continue\n    if n - (s - m) >= k:\n        print('1.000000')\n        continue\n    total = 0\n    for i in range(k, m + 1):\n        if n - i >= 0:\n            total += dp[m][i] * dp[s - m][n - i]\n    print('{0:.6f}'.format(total / dp[s][n]))", "dp = []\n\ndef pre():\n    for i in range(1002):\n        dp.append([])\n        for j in range(i + 1):\n            if i == 0 or i == j or j == 0:\n                dp[i].append(1)\n            else:\n                dp[i].append(dp[i - 1][j - 1] + dp[i - 1][j])\nt = int(input())\npre()\nfor y in range(t):\n    line = input().split()\n    s = int(line[0])\n    n = int(line[1])\n    m = int(line[2])\n    k = int(line[3])\n    if k == 0:\n        print('1.000000')\n        continue\n    if s == n:\n        print('1.000000')\n        continue\n    s = s - 1\n    n = n - 1\n    m = m - 1\n    if n < k:\n        print('0.000000')\n        continue\n    if n - (s - m) >= k:\n        print('1.000000')\n        continue\n    total = 0\n    for i in range(k, m + 1):\n        if n - i >= 0:\n            total += dp[m][i] * dp[s - m][n - i]\n    print('{0:.6f}'.format(total / dp[s][n]))", "import sys\n\nclass first:\n    a = []\n    for i in range(1005):\n        a.append([])\n    for i in range(1005):\n        for j in range(1005):\n            if j == 0:\n                a[i].append(1)\n            elif i == 0:\n                a[i].append(0)\n            elif j <= i:\n                a[i].append(a[i - 1][j] + a[i - 1][j - 1])\n            else:\n                a[i].append(0)\n    t = input()\n    while int(t) != 0:\n        lst = list(map(int, input().split()))\n        s = lst[0]\n        n = lst[1]\n        m = lst[2]\n        k = lst[3]\n        if n <= k:\n            print('0.000000')\n        elif n - k - 1 > s - m:\n            print('1.000000')\n        else:\n            s -= 1\n            n -= 1\n            m -= 1\n            if m < n:\n                min = m\n            else:\n                min = n\n            op = 0\n            for i in range(k, min + 1):\n                op += a[m][i] * a[s - m][n - i] / a[s][n]\n            print('%.6f' % op)\n        t = int(t) - 1", "def main():\n    matrix = 1001 * [None]\n    for i in range(1001):\n        matrix[i] = (i + 1) * [None]\n    matrix[0][0] = 1\n    matrix[1][0] = 1\n    matrix[1][1] = 1\n    for i in range(1001):\n        for j in range(i + 1):\n            if j == 0:\n                matrix[i][j] = 1\n            elif j == i:\n                matrix[i][j] = 1\n            else:\n                matrix[i][j] = matrix[i - 1][j] + matrix[i - 1][j - 1]\n    sum = 0\n    t = int(input())\n    for i in range(t):\n        i = i + 1\n        s = input()\n        l = list(map(int, s.split(' ')))\n        if l[0] == l[1] or l[2] == 1 or l[0] == 1 or (l[0] - l[2] < l[1] - l[3] - 1):\n            print(1.0)\n        elif l[1] <= l[3]:\n            print(0.0)\n        else:\n            for j in range(l[3], min(l[2], l[1])):\n                sum = sum + matrix[l[2] - 1][j] * matrix[l[0] - l[2]][l[1] - j - 1]\n                j = j + 1\n            print(float(sum / matrix[l[0] - 1][l[1] - 1]))\n        sum = 0\nmain()", "di = {}\n\ndef fact(n):\n    di[0] = 1\n    a = 1\n    for i in range(1, n + 1):\n        a *= i\n        di[i] = a\n\ndef comb(n, r):\n    return di[n] / (di[r] * di[n - r])\nt = int(input())\nfact(1000)\nwhile t > 0:\n    l = input()\n    a = l.split()\n    s = int(a[0])\n    n = int(a[1])\n    m = int(a[2])\n    k = int(a[3])\n    d = comb(s - 1, n - 1)\n    p = 0\n    kk = m + n - 1 - s\n    if k < kk:\n        k = kk\n    while k <= n - 1 and k <= m - 1:\n        p += comb(m - 1, k) * comb(s - m, n - 1 - k)\n        k += 1\n    p = p / d\n    print(p)\n    t -= 1", "a = []\nfor i in range(1001):\n    a.append(0.0)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    line = input().split()\n    s = int(line[0])\n    n = int(line[1])\n    m = int(line[2])\n    k = int(line[3])\n    ans = 0\n    div = 0\n    for j in range(m):\n        if s - m >= n - j - 1 and n - j - 1 >= 0 and (m - 1 >= j):\n            a[j] = 1.0\n            break\n        else:\n            a[j] = 0.0\n    for i in range(j + 1, m):\n        if s - m >= n - i - 1 and n - i - 1 >= 0 and (m - 1 >= i):\n            a[i] = a[i - 1] * (m - i) * (n - i) / (i * (s - n - m + i + 1))\n        else:\n            a[i] = 0.0\n    for i in range(m):\n        if i >= k:\n            ans += a[i]\n        div += a[i]\n    print('{0:.6f}'.format(ans / div))", "comb = [[0.0 for j in range(1001)] for i in range(1001)]\ncomb[0][0] = 0\nfor i in range(1001):\n    comb[i][0] = 1\n    comb[i][i] = 1\n    for j in range(1, i):\n        comb[i][j] = comb[i - 1][j - 1] + comb[i - 1][j]\nt = int(input())\nfor i in range(t):\n    (S, N, M, K) = map(int, input().split())\n    todas = comb[S - 1][N - 1]\n    M -= 1\n    if todas < 1:\n        print(0)\n        continue\n    O = S - M - 1\n    pueden = 0\n    for j in range(K, M + 1):\n        if K > N - 1:\n            continue\n        if N - 1 - j < 0:\n            continue\n        pueden += comb[M][j] * comb[O][N - 1 - j]\n    print('%.6f' % (pueden / todas))", "comb = [[0.0 for j in range(1001)] for i in range(1001)]\ncomb[0][0] = 0\nfor i in range(1001):\n    comb[i][0] = 1\n    comb[i][i] = 1\n    for j in range(1, i):\n        comb[i][j] = comb[i - 1][j - 1] + comb[i - 1][j]\nt = int(input())\nfor i in range(t):\n    (S, N, M, K) = map(int, input().split())\n    todas = comb[S - 1][N - 1]\n    M -= 1\n    if todas < 1:\n        print(0)\n        continue\n    O = S - M - 1\n    pueden = 0\n    for j in range(K, M + 1):\n        if K > N - 1:\n            continue\n        if N - 1 - j < 0:\n            continue\n        pueden += comb[M][j] * comb[O][N - 1 - j]\n    print('%.8f' % (pueden / todas))"]