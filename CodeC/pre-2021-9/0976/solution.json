["import itertools\nt = int(input())\nfor _ in range(t):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    B = list(map(int, input().split(' ')))\n    ultimate_sum = 0\n    for i in range(20):\n        mask = 1 << i\n        count_a = 0\n        count_b = 0\n        for (a, b) in zip(A, B):\n            if a & mask > 0:\n                count_a += 1\n            if b & mask > 0:\n                count_b += 1\n        if count_a == 0 and count_b == 0:\n            continue\n        if count_a != count_b:\n            ultimate_sum |= 1 << i\n        elif N - count_a == count_b:\n            print(-1)\n            break\n    perm = [a ^ ultimate_sum for a in A]\n    if sorted(perm) != sorted(B):\n        print(-1)\n    else:\n        print(' '.join(map(str, perm)))", "import itertools\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    B = list(map(int, input().split(' ')))\n    ultimate_sum = 0\n    for i in range(20):\n        mask = 1 << i\n        count_a = 0\n        count_b = 0\n        for (a, b) in zip(A, B):\n            if a & mask > 0:\n                count_a += 1\n            if b & mask > 0:\n                count_b += 1\n        if count_a == 0 and count_b == 0:\n            continue\n        if count_a != count_b:\n            ultimate_sum |= 1 << i\n        elif N - count_a == count_b:\n            print(-1)\n            break\n    perm = [a ^ ultimate_sum for a in A]\n    if sorted(perm) != sorted(B):\n        print(-1)\n    else:\n        print(' '.join(map(str, perm)))", "import itertools\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    B = list(map(int, input().split(' ')))\n    ultimate_sum = 0\n    for i in range(20):\n        mask = 1 << i\n        count_a = 0\n        count_b = 0\n        for (a, b) in zip(A, B):\n            if a & mask > 0:\n                count_a += 1\n            if b & mask > 0:\n                count_b += 1\n        if count_a == 0 and count_b == 0:\n            continue\n        if count_a != count_b:\n            ultimate_sum |= 1 << i\n        elif N - count_a == count_b:\n            print(-1)\n            break\n    perm = [a ^ ultimate_sum for a in A]\n    if sorted(perm) != sorted(B):\n        print(-1)\n    else:\n        print(' '.join(map(str, perm)))", "import itertools\nT = int(input())\n\ndef helper(A_rem, B_rem, ultimate_sum):\n    a = A_rem[0]\n    candidates = []\n    index_B = []\n    if len(A_rem) == 1:\n        if a ^ B_rem[0] == ultimate_sum:\n            return B_rem\n        else:\n            return -1\n    for (i, b) in enumerate(B_rem):\n        if a ^ b == ultimate_sum:\n            candidates.append(b)\n            index_B.append(i)\n    if len(candidates) == 0:\n        return -1\n    for (i, c) in zip(index_B, candidates):\n        result = helper(A_rem[1:], B_rem[:i] + B_rem[i + 1:], ultimate_sum)\n        if result != -1:\n            return [c] + result\n    return -1\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    B = list(map(int, input().split(' ')))\n    ultimate_sum = 0\n    for i in range(20):\n        mask = 1 << i\n        count_a = 0\n        count_b = 0\n        for (a, b) in zip(A, B):\n            if a & mask > 0:\n                count_a += 1\n            if b & mask > 0:\n                count_b += 1\n        if count_a == 0 and count_b == 0:\n            continue\n        if count_a != count_b:\n            ultimate_sum |= 1 << i\n        elif N - count_a == count_b:\n            print(-1)\n            break\n    perm = [a ^ ultimate_sum for a in A]\n    wrong = False\n    if sorted(perm) != sorted(B):\n        wrong = True\n    if wrong:\n        print(-1)\n    else:\n        print(' '.join(map(str, perm)))", "def solve(a, b, n):\n    ans = 0\n    for i in range(n):\n        ans ^= a[i] ^ b[i]\n    for i in range(n):\n        a[i] ^= ans\n    if sorted(a) == sorted(b):\n        return a\n    return -1\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = solve(a, b, n)\n    if ans == -1:\n        print(-1)\n    else:\n        print(*ans)", "def func(n, a, b):\n    ans = 0\n    for i in range(n):\n        ans ^= a[i] ^ b[i]\n    for i in range(n):\n        a[i] ^= ans\n    if sorted(a) == sorted(b):\n        return a\n    return -1\ntest = int(input().strip())\nfor i in range(test):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    ans = func(n, a, b)\n    if ans == -1:\n        print(-1)\n    else:\n        for i in ans:\n            print(i, end=' ')\n        print()", "def func(n, a, b):\n    ans = 0\n    for i in range(n):\n        ans ^= a[i] ^ b[i]\n    for i in range(n):\n        a[i] ^= ans\n    if sorted(a) == sorted(b):\n        return a\n    return -1\ntest = int(input().strip())\nfor i in range(test):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    ans = func(n, a, b)\n    if ans == -1:\n        print(-1)\n    else:\n        for i in ans:\n            print(i, end=' ')\n        print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = 0\n    o = []\n    for j in b:\n        x ^= j\n    for j in a:\n        x ^= j\n    for j in a:\n        o.append(j ^ x)\n    if sorted(o) == sorted(b):\n        print(*o, end=' ')\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = 0\n    o = []\n    for j in b:\n        x ^= j\n    for j in a:\n        x ^= j\n    for j in a:\n        o.append(j ^ x)\n    if sorted(o) == sorted(b):\n        print(*o, end=' ')\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    xor = 0\n    c = []\n    for i in range(len(a)):\n        xor = xor ^ a[i]\n    for i in range(len(b)):\n        xor = xor ^ b[i]\n    for i in range(n):\n        c.append(a[i] ^ xor)\n    temp = list(c)\n    temp.sort()\n    b.sort()\n    if b == temp:\n        for i in range(len(c)):\n            print(c[i], end=' ')\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    xor = 0\n    c = []\n    for i in range(len(a)):\n        xor = xor ^ a[i]\n    for i in range(len(b)):\n        xor = xor ^ b[i]\n    for i in range(n):\n        c.append(a[i] ^ xor)\n    temp = list(c)\n    temp.sort()\n    b.sort()\n    if b == temp:\n        for i in range(len(c)):\n            print(c[i], end=' ')\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    xor = 0\n    c = []\n    for i in range(len(a)):\n        xor = xor ^ a[i]\n    for i in range(len(b)):\n        xor = xor ^ b[i]\n    for i in range(n):\n        c.append(a[i] ^ xor)\n    temp = list(c)\n    temp.sort()\n    b.sort()\n    if b == temp:\n        for i in range(len(c)):\n            print(c[i], end=' ')\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    xor = 0\n    c = []\n    for i in range(len(a)):\n        xor = xor ^ a[i]\n    for i in range(len(b)):\n        xor = xor ^ b[i]\n    for i in range(n):\n        c.append(a[i] ^ xor)\n    temp = list(c)\n    temp.sort()\n    b.sort()\n    if b == temp:\n        for i in range(len(c)):\n            print(c[i], end=' ')\n    else:\n        print(-1)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = 0\n    for i in a:\n        d ^= i\n    for i in b:\n        d ^= i\n    res = []\n    for i in a:\n        res.append(i ^ d)\n    if sorted(res) == sorted(b):\n        print(*res)\n    else:\n        print(-1)", "def answer():\n    xor = 0\n    for i in range(n):\n        xor ^= a[i] ^ b[i]\n    bc = [0] * (10 ** 6 + 1)\n    for i in b:\n        bc[i] += 1\n    ans = []\n    for v in a:\n        if bc[v ^ xor]:\n            ans.append(v ^ xor)\n            bc[v ^ xor] -= 1\n        else:\n            return [-1]\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(*answer())", "def answer():\n    xor = 0\n    for i in range(n):\n        xor ^= a[i] ^ b[i]\n    bc = [0] * (10 ** 6 + 1)\n    for i in b:\n        bc[i] += 1\n    ans = []\n    for v in a:\n        if bc[v ^ xor]:\n            ans.append(v ^ xor)\n            bc[v ^ xor] -= 1\n        else:\n            return [-1]\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(*answer())", "from collections import defaultdict\nfrom sys import stdin, stdout\nfrom math import *\nfrom statistics import mode\nfrom heapq import *\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef prime_factors(n):\n    (i, factors) = (2, [])\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return set(factors)\n\ndef prefix_arr(arr):\n    for i in range(1, len(arr)):\n        arr[i] = arr[i] + arr[i - 1]\n    return arr\n\ndef kadane(a):\n    max_so_far = curr_max = a[0]\n    for i in range(1, len(a)):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n    return max_so_far\n\ndef isPrime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, ceil(sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\ndef isPowerOf2(x):\n    return x and (not x & x - 1)\n\ndef isPerfectSquare(n):\n    return pow(floor(sqrt(n)), 2) == n\n\ndef I():\n    return int(stdin.readline())\n\ndef S():\n    return input()\n\ndef ari():\n    return list(map(int, stdin.readline().split()))\n\ndef ars():\n    return list(map(str, input().split()))\n\ndef mpi():\n    return map(int, input().split())\n\ndef mps():\n    return map(str, input().split())\n\ndef xor(arr):\n    temp = 0\n    for i in arr:\n        temp ^= i\n    return temp\nfor t in range(I()):\n    N = I()\n    A = ari()\n    B = ari()\n    Ci = xor(A) ^ xor(B)\n    C = []\n    for i in A:\n        C.append(i ^ Ci)\n    if sorted(C) == sorted(B):\n        print(*C)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    xorsum = 0\n    flag = 0\n    for i in range(n):\n        xorsum ^= a[i]\n        xorsum ^= b[i]\n    list1 = []\n    for i in a:\n        x = xorsum ^ i\n        list1.append(x)\n    list2 = sorted(list1)\n    b.sort()\n    if b == list2:\n        print(*list1)\n    else:\n        print('-1')", "def xorr(x):\n    sum = 0\n    for i in range(0, len(x)):\n        sum ^= x[i]\n    return sum\nfor _ in range(0, int(input())):\n    xor3 = []\n    count = 0\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(list(map(int, input().split())))\n    pxor = xorr(a) ^ xorr(b)\n    if n % 2 != 0:\n        for i in range(0, n):\n            xor3.append(a[i] ^ pxor)\n    else:\n        for i in range(0, n):\n            xor3.append(a[i] ^ 0)\n    xor4 = sorted(xor3)\n    for i in range(0, n):\n        if xor4[i] == b[i]:\n            count += 1\n        else:\n            print(-1)\n            break\n    if count == n:\n        for i in range(0, count):\n            print(xor3[i], end=' ')", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        b_count = [0] * (10 ** 6 + 1)\n        c = []\n        xv = 0\n        flag = 0\n        for i in range(n):\n            xv = xv ^ a[i]\n        for i in range(n):\n            xv = xv ^ b[i]\n            b_count[b[i]] += 1\n        for i in range(n):\n            if b_count[a[i] ^ xv]:\n                b_count[a[i] ^ xv] -= 1\n                c.append(a[i] ^ xv)\n            else:\n                flag = 1\n                break\n        if flag == 1:\n            print(-1, end='\\n')\n        else:\n            for i in range(n):\n                print(c[i], end=' ')\n            print(end='\\n')\nexcept EOFError as e:\n    print(end='')", "def count():\n    for i in b:\n        bc[i] += 1\n\ndef answer():\n    x = 0\n    for i in range(n):\n        x = x ^ a[i] ^ b[i]\n    ans = []\n    for i in a:\n        if bc[i ^ x]:\n            bc[i ^ x] -= 1\n            ans.append(i ^ x)\n        else:\n            return [-1]\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    bc = [0] * (10 ** 6 + 1)\n    count()\n    print(*answer())", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mapb = {}\n    flag = 0\n    for i in b:\n        if i in mapb:\n            mapb[i] += 1\n        else:\n            mapb[i] = 1\n    temp = 0\n    for i in a:\n        temp ^= i\n    for i in b:\n        temp ^= i\n    c = [i ^ temp for i in a]\n    for i in c:\n        if i in mapb:\n            mapb[i] -= 1\n        else:\n            flag = 1\n            break\n    if flag:\n        print(-1)\n    else:\n        print(*c)\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mapb = {}\n    flag = 0\n    for i in b:\n        if i in mapb:\n            mapb[i] += 1\n        else:\n            mapb[i] = 1\n    temp = 0\n    for i in a:\n        temp ^= i\n    for i in b:\n        temp ^= i\n    c = [i ^ temp for i in a]\n    for i in c:\n        if i in mapb:\n            mapb[i] -= 1\n        else:\n            flag = 1\n            break\n    if flag:\n        print(-1)\n    else:\n        [print(i, end=' ') for i in c]\n        print()\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = 0\n    for i in a:\n        d ^= i\n    for i in b:\n        d ^= i\n    res = []\n    for i in a:\n        res.append(i ^ d)\n    if sorted(res) == sorted(b):\n        print(*res)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = 0\n    for i in a:\n        x = x ^ i\n    for i in b:\n        x = x ^ i\n    l = []\n    for i in a:\n        l.append(i ^ x)\n    s1 = sorted(b)\n    s2 = sorted(l)\n    if s1 == s2:\n        for i in l:\n            print(i, end=' ')\n    else:\n        print(-1)\n    print()", "from sys import stdin, stdout\nfrom math import gcd, log2, log10, floor\nimport math\nfrom collections import defaultdict, OrderedDict\nfrom bisect import bisect_left\n\ndef xora(l):\n    res = 0\n    for i in l:\n        res ^= i\n    return res\n\ndef listcreator(l, n):\n    res = l[:]\n    for i in range(len(res)):\n        res[i] ^= n\n    return res\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    theta = xora(a + b)\n    c = listcreator(a, theta)\n    bsort = b[:]\n    bsort.sort()\n    csort = c[:]\n    csort.sort()\n    if bsort == csort:\n        print(*c)\n    else:\n        print(-1)", "for u in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    x = l[0]\n    for i in l[1:]:\n        x ^= i\n    for j in d:\n        x ^= j\n    s = []\n    for i in l:\n        s.append(x ^ i)\n    if sorted(s) == sorted(d):\n        print(*s)\n    else:\n        print(-1)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    temp = a[0]\n    for i in range(1, n):\n        temp = temp ^ a[i]\n    freq = {}\n    for x in input().split():\n        x = int(x)\n        temp = temp ^ x\n        if x in freq:\n            freq[x] += 1\n        else:\n            freq[x] = 1\n    ans = []\n    for i in range(n):\n        temp2 = temp ^ a[i]\n        if temp2 in freq:\n            freq[temp2] -= 1\n            ans.append(temp2)\n            if freq[temp2] == 0:\n                del freq[temp2]\n        else:\n            print(-1)\n            break\n        if i == n - 1:\n            for item in ans:\n                print(item, end=' ')\n            print()", "from os import path\nimport sys\nfrom heapq import heappush, heappop\nfrom functools import cmp_to_key as ctk\nfrom collections import deque, defaultdict as dd\nfrom bisect import bisect, bisect_left, bisect_right, insort, insort_left, insort_right\nfrom itertools import permutations\nfrom datetime import datetime\nfrom math import ceil, sqrt, log, gcd\n\ndef ii():\n    return int(input())\n\ndef si():\n    return input().rstrip()\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\nabc = 'abcdefghijklmnopqrstuvwxyz'\nmod = 1000000007\ninf = float('inf')\nvow = ['a', 'e', 'i', 'o', 'u']\n(dx, dy) = ([-1, 1, 0, 0], [0, 0, 1, -1])\n\ndef bo(i):\n    return ord(i) - ord('a')\nfile = 1\n\ndef solve():\n    for _ in range(ii()):\n        n = ii()\n        a = li()\n        b = li()\n        x = 0\n        m = dd(int)\n        for i in a:\n            x ^= i\n        for i in b:\n            x ^= i\n            m[i] += 1\n        ans = []\n        f = 0\n        for i in a:\n            x1 = i ^ x\n            if m[x1] > 0:\n                m[x1] -= 1\n                ans.append(x1)\n            else:\n                f = 1\n                break\n        if f:\n            print('-1')\n        else:\n            print(*ans)\nif file:\n    if path.exists('input.txt'):\n        sys.stdin = open('input.txt', 'r')\n        sys.stdout = open('output.txt', 'w')\n    else:\n        input = sys.stdin.readline\nsolve()", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    X = 0\n    for i in A:\n        X ^= i\n    for i in B:\n        X ^= i\n    L = []\n    for i in A:\n        L.append(i ^ X)\n    P = sorted(B[:])\n    Q = sorted(L[:])\n    if P == Q:\n        for i in L:\n            print(i, end=' ')\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    xor = a[0]\n    for i in a[1:]:\n        xor = xor ^ i\n    for i in b:\n        xor = xor ^ i\n    perm = []\n    for i in a:\n        perm.append(i ^ xor)\n    if sorted(perm) == sorted(b):\n        print(*perm)\n    else:\n        print(-1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l_1 = list(map(int, input().split()))\n    l_2 = list(map(int, input().split()))\n    x = 0\n    for i in range(len(l_1)):\n        x = x ^ l_1[i] ^ l_2[i]\n    new = []\n    for i in range(len(l_1)):\n        t = x ^ l_1[i]\n        new.append(t)\n    new_1 = Counter(new)\n    l_2 = Counter(l_2)\n    flag = 0\n    for i in new_1:\n        if new_1[i] != l_2[i]:\n            flag = 1\n            break\n    if flag == 1:\n        print(-1)\n    else:\n        print(*new)", "from functools import reduce\ninp = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(inp())\n    B = list(inp())\n    av = {}\n    x = reduce(lambda a, b: a ^ b, A + B)\n    res = [0] * N\n    for i in range(N):\n        av[B[i]] = 1\n    for i in range(N):\n        res[i] = A[i] ^ x\n        if av.get(res[i], 0):\n            pass\n        else:\n            print(-1)\n            break\n    else:\n        print(*res)", "from functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = reduce(lambda x, y: x ^ y, a) ^ reduce(lambda x, y: x ^ y, b)\n    c = []\n    for i in a:\n        c.append(i ^ x)\n    b.sort()\n    k = c.copy()\n    k.sort()\n    if b == k:\n        print(*c)\n    else:\n        print(-1)", "def creator(array1, array2):\n    temp = 0\n    for x in array1:\n        temp ^= x\n    for x in array2:\n        temp ^= x\n    array = [temp ^ a for a in array1]\n    if sorted(array) == sorted(array2):\n        return array\n    return [-1]\ntestCases = int(input())\narrays1 = []\narrays2 = []\nfor _ in range(testCases):\n    n = input()\n    arrays1.append(list(map(int, input().split())))\n    arrays2.append(list(map(int, input().split())))\nfor l in range(testCases):\n    for z in creator(arrays1[l], arrays2[l]):\n        print(z, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = 0\n    res = []\n    for i in range(n):\n        x = x ^ b[i] ^ a[i]\n    for i in range(n):\n        res.append(a[i] ^ x)\n    if sorted(b) == sorted(res):\n        for ele in res:\n            print(ele, end=' ')\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    liA = list(map(int, input().split()))\n    liB = list(map(int, input().split()))\n    x = 0\n    res = []\n    for i in range(n):\n        x = x ^ liA[i] ^ liB[i]\n    for i in range(n):\n        res.append(liA[i] ^ x)\n    if sorted(res) == sorted(liB):\n        for ele in res:\n            print(ele, end=' ')\n        print(' ')\n    else:\n        print(-1)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = 0\n    l = []\n    for i in range(n):\n        x ^= a[i]\n    for i in range(n):\n        x ^= b[i]\n    for i in range(n):\n        l.append(x ^ a[i])\n    m = l.copy()\n    l.sort()\n    b.sort()\n    if l == b:\n        print(*m)\n    else:\n        print(-1)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = 0\n    l = []\n    for i in range(n):\n        x ^= a[i]\n    for i in range(n):\n        x ^= b[i]\n    for i in range(n):\n        l.append(x ^ a[i])\n    m = l.copy()\n    l.sort()\n    b.sort()\n    if l == b:\n        print(*m)\n    else:\n        print(-1)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = 0\n    l = []\n    for i in range(n):\n        x ^= a[i]\n    for i in range(n):\n        x ^= b[i]\n    for i in range(n):\n        l.append(x ^ a[i])\n    m = l.copy()\n    l.sort()\n    b.sort()\n    if l == b:\n        print(*m)\n    else:\n        print(-1)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    main_xor = 0\n    for i in a:\n        main_xor ^= i\n    for i in b:\n        main_xor ^= i\n    temp = [0] * n\n    for i in range(n):\n        temp[i] = a[i] ^ main_xor\n    b.sort()\n    temp.sort()\n    flag = 0\n    for i in range(n):\n        if temp[i] != b[i]:\n            flag = 1\n            break\n    if flag == 1:\n        print(-1)\n    else:\n        for i in range(n):\n            print(a[i] ^ main_xor, end=' ')\n        print('')", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    a = input().split()\n    b = input().split()\n    x = 0\n    for i in range(0, n):\n        a[i] = int(a[i])\n        b[i] = int(b[i])\n        x = x ^ a[i]\n        x = x ^ b[i]\n    c = []\n    d = []\n    for i in range(0, n):\n        c.append(x ^ a[i])\n        d.append(x ^ a[i])\n    b.sort()\n    c.sort()\n    if b == c:\n        for i in range(0, n):\n            print(d[i], end=' ')\n        print()\n    else:\n        print(-1)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    a = list([int(j) for j in input().split()])\n    b = list([int(j) for j in input().split()])\n    set1 = set(b)\n    c = list()\n    x = a[0]\n    y = b[0]\n    for j in range(1, n):\n        x ^= a[j]\n        y ^= b[j]\n    x ^= y\n    for j in range(n):\n        c.append(x ^ a[j])\n    set2 = set(c)\n    if set2 != set1:\n        print(-1)\n    else:\n        for j in c:\n            print(j, end=' ')\n        print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list([int(j) for j in input().split()])\n    b = list([int(j) for j in input().split()])\n    set1 = set(b)\n    c = list()\n    x = a[0]\n    y = b[0]\n    for j in range(1, n):\n        x ^= a[j]\n        y ^= b[j]\n    x ^= y\n    for j in range(n):\n        c.append(x ^ a[j])\n    set2 = set(c)\n    if set2 != set1:\n        print(-1)\n    else:\n        for j in c:\n            print(j, end=' ')\n        print()", "from functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    g = reduce(lambda x, y: x ^ y, a + b)\n    s = sum(b)\n    c = list()\n    for j in a:\n        x = g ^ j\n        c.append(x)\n        s -= x\n        if s < 0:\n            break\n    if s == 0:\n        print(' '.join(map(str, c)))\n    else:\n        print(-1)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    a = [int(j) for j in input().split()]\n    b = [int(j) for j in input().split()]\n    (s, t) = (a[0], b[0])\n    for i in range(1, N):\n        s = s ^ a[i]\n        t = t ^ b[i]\n    s = s ^ t\n    c = [0 for i in range(N)]\n    for i in range(N):\n        c[i] = a[i] ^ s\n    if sorted(c) == sorted(b):\n        print(*c)\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    b = [int(j) for j in input().split()]\n    (x, y) = (a[0], b[0])\n    for i in range(1, n):\n        x = x ^ a[i]\n        y = y ^ b[i]\n    x = x ^ y\n    c = [0 for i in range(n)]\n    for i in range(n):\n        c[i] = a[i] ^ x\n    if sorted(c) == sorted(b):\n        print(*c)\n    else:\n        print(-1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    xor = 0\n    for x in a + b:\n        xor ^= x\n    cnt = Counter(b)\n    ans = []\n    for x in a:\n        y = xor ^ x\n        if cnt[y]:\n            ans.append(y)\n            cnt[y] -= 1\n    if len(ans) == n:\n        print(*ans)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    assert len(a) == n\n    assert len(b) == n\n    (x1, x2) = (0, 0)\n    for i in a:\n        x1 ^= i\n    cnt = dict()\n    for i in b:\n        x2 ^= i\n        if i in cnt:\n            cnt[i] += 1\n        else:\n            cnt[i] = 1\n    (x, fl) = (x1 ^ x2, 0)\n    ans = list()\n    for i in a:\n        c_i = x ^ i\n        if cnt.get(c_i, 0) == 0:\n            fl = 1\n            break\n        ans.append(c_i)\n        cnt[c_i] -= 1\n    if fl:\n        print('-1')\n    else:\n        print(*ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    m = max(b)\n    bcount = [0] * (m + 1)\n    for i in b:\n        bcount[i] += 1\n    xor = 0\n    for i in range(len(a)):\n        xor ^= a[i] ^ b[i]\n    ans = []\n    flag = 0\n    for i in range(len(a)):\n        x = a[i] ^ xor\n        if x <= m and bcount[x] > 0:\n            bcount[x] -= 1\n            ans.append(x)\n        else:\n            flag = 1\n            print(-1)\n            break\n    if flag == 0:\n        print(*ans)", "for _ in range(int(input())):\n    (n, a, b, x, c) = (int(input()), list(map(int, input().split(' '))), list(map(int, input().split(' '))), 0, [])\n    for i in a:\n        x ^= i\n    for i in b:\n        x ^= i\n    for i in a:\n        c.append(i ^ x)\n    print(*c) if sorted(c) == sorted(b) else print(-1)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    x = 0\n    c = []\n    for i in range(N):\n        x = x ^ A[i] ^ B[i]\n    for i in range(N):\n        c.append(x ^ A[i])\n    if sorted(c) != sorted(B):\n        print(-1)\n    else:\n        for i in c:\n            print(i, end=' ')\n        print(' ')", "try:\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        A = list(map(int, input().split()))\n        B = list(map(int, input().split()))\n        x = 0\n        c = []\n        for i in range(N):\n            x = x ^ A[i] ^ B[i]\n        for i in range(N):\n            c.append(x ^ A[i])\n        if sorted(c) != sorted(B):\n            print(-1)\n        else:\n            for i in c:\n                print(i, end=' ')\n            print(' ')\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, a, b, x, c) = (int(input()), list(map(int, input().split(' '))), list(map(int, input().split(' '))), 0, [])\n    for i in a:\n        x ^= i\n    for i in b:\n        x ^= i\n    for i in a:\n        c.append(i ^ x)\n    if sorted(c) == sorted(b):\n        print(*c)\n    else:\n        print(-1)", "try:\n    t = int(input())\n    while t:\n        s = 0\n        n = int(input())\n        l = list(map(int, input().split()))\n        m = list(map(int, input().split()))\n        x = []\n        for i in range(n):\n            s = s ^ l[i] ^ m[i]\n        for i in range(n):\n            x.append(l[i] ^ s)\n        if sorted(x) != sorted(m):\n            print(-1)\n        else:\n            for i in x:\n                print(i, end=' ')\n            print()\n        t -= 1\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    x = 0\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    for i in range(n):\n        x = x ^ l1[i] ^ l2[i]\n    l3 = []\n    for i in range(n):\n        l3.append(x ^ l1[i])\n    l4 = l3.copy()\n    l5 = l2.copy()\n    l4.sort()\n    l5.sort()\n    if l4 != l5:\n        print(-1)\n    else:\n        for i in range(n):\n            print(x ^ l1[i], end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    x = 0\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    for i in range(n):\n        x = x ^ l1[i] ^ l2[i]\n    l3 = []\n    for i in range(n):\n        l3.append(x ^ l1[i])\n    l4 = l3.copy()\n    l5 = l2.copy()\n    l4.sort()\n    l5.sort()\n    if l4 != l5:\n        print(-1)\n    else:\n        for i in range(n):\n            print(x ^ l1[i], end=' ')\n        print()", "from functools import reduce\nfor t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    Acopy = A[0:]\n    Bcopy = B[0:]\n    A = reduce(lambda x, y: x ^ y, A)\n    B = reduce(lambda x, y: x ^ y, B)\n    x = A ^ B\n    C = [Acopy[i] ^ x for i in range(n)]\n    if sorted(C) == sorted(Bcopy):\n        print(*C)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = 0.5\n    axor = 0\n    bxor = 0\n    for i in a:\n        axor = axor ^ i\n    for i in b:\n        bxor = bxor ^ i\n    x = axor ^ bxor\n    c = []\n    for i in a:\n        c.append(i ^ x)\n    if sorted(b) == sorted(c):\n        print(*c)\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    d = []\n    temp = 0\n    x = 0\n    for i in range(n):\n        x ^= a[i]\n        x ^= b[i]\n    for i in a:\n        c.append(x ^ i)\n    d = c.copy()\n    d.sort()\n    b.sort()\n    for i in range(n):\n        if b[i] != d[i]:\n            temp = 1\n            print('-1')\n            break\n    if temp == 0:\n        for i in c:\n            print(i, end=' ')\n        print()\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    count = [0 for i in range(10 ** 6 + 1)]\n    for i in range(n):\n        ans = ans ^ a[i] ^ b[i]\n        count[b[i]] += 1\n    r = []\n    flag = 0\n    for i in range(n):\n        c = a[i] ^ ans\n        if count[c] > 0:\n            count[c] -= 1\n            r.append(c)\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print(-1)\n    else:\n        print(*r)", "for _ in range(int(input())):\n    N = int(input())\n    lisA = list(map(int, input().split()))\n    lisB = list(map(int, input().split()))\n    lis = []\n    sol = []\n    y = lisA[0] ^ lisB[0]\n    for j in range(1, N):\n        y = y ^ lisA[j] ^ lisB[j]\n    z = max(lisB)\n    for j in range(z + 1):\n        lis.append(0)\n    for j in lisB:\n        lis[j] += 1\n    for j in range(N):\n        if lis[lisA[j] ^ y] != 0:\n            sol.append(lisA[j] ^ y)\n            lis[lisA[j] ^ y] -= 1\n        else:\n            break\n    if len(sol) != N:\n        print(-1)\n    else:\n        for i in sol:\n            print(i, end=' ')\n        print()", "for i in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    z = x + y\n    w = []\n    a = z[0]\n    for j in range(1, len(z)):\n        a = a ^ z[j]\n    for j in x:\n        w.append(j ^ a)\n    a = w.copy()\n    y.sort()\n    w.sort()\n    if y == w:\n        print(*a)\n    else:\n        print(-1)", "from collections import defaultdict\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    dct = defaultdict(int)\n    for j in b:\n        dct[j] += 1\n    ans = 0\n    for j in range(n):\n        ans = ans ^ a[j] ^ b[j]\n    s = [0 for j in range(n)]\n    for j in range(n):\n        s[j] = a[j] ^ ans\n    for j in s:\n        dct[j] -= 1\n    flag = 1\n    for j in dct:\n        if dct[j] != 0:\n            flag = 0\n    if flag:\n        print(*s)\n    else:\n        print(-1)", "from sys import stdin, stdout\nimport math, sys\nfrom itertools import permutations, combinations\nfrom collections import defaultdict, deque\nimport bisect as bi\nimport heapq as hq\n\ndef I():\n    return int(input())\n\ndef In():\n    return map(int, input().split())\n\ndef gcd(a, b):\n    while b:\n        (a, b) = (b, a % b)\n    return a\n\ndef main():\n    try:\n        for _ in range(int(input())):\n            n = I()\n            a = list(In())\n            b = list(In())\n            t = 0\n            for i in range(n):\n                t ^= a[i] ^ b[i]\n            c = []\n            for x in a:\n                c.append(x ^ t)\n            z = c.copy()\n            c.sort()\n            b.sort()\n            q = 0\n            for i in range(n):\n                if c[i] - b[i] != 0:\n                    q = 1\n                    break\n            if q == 0:\n                print(*z)\n            else:\n                print(-1)\n    except:\n        pass\nM = 998244353\nP = 1000000007\nmain()", "from sys import stdin, stdout\nimport math, sys\nfrom itertools import permutations, combinations\nfrom collections import defaultdict, deque\nimport bisect as bi\nimport heapq as hq\n\ndef I():\n    return int(input())\n\ndef In():\n    return map(int, input().split())\n\ndef gcd(a, b):\n    while b:\n        (a, b) = (b, a % b)\n    return a\n\ndef main():\n    try:\n        for _ in range(int(input())):\n            n = I()\n            a = list(In())\n            b = list(In())\n            t = 0\n            for i in range(n):\n                t ^= a[i] ^ b[i]\n            c = []\n            for x in a:\n                c.append(x ^ t)\n            c.sort()\n            b.sort()\n            q = 0\n            for i in range(n):\n                if c[i] - b[i] != 0:\n                    q = 1\n                    break\n            if q == 0:\n                for x in a:\n                    print(x ^ t, end=' ')\n                print()\n            else:\n                print(-1)\n    except:\n        pass\nM = 998244353\nP = 1000000007\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    c = []\n    X = 0\n    for i in range(n):\n        X ^= a[i] ^ b[i]\n    for j in range(n):\n        c.append(a[j] ^ X)\n    e = sorted(c)\n    p = sorted(b)\n    for i in range(n):\n        if e[i] != p[i]:\n            print(-1)\n            break\n        else:\n            print(c[i], end=' ')", "from functools import *\nT = int(input())\nwhile T:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(y) for y in input().split()]\n    d1 = {}\n    for i in range(n):\n        if a[i] not in d1.keys():\n            d1[a[i]] = 1\n        else:\n            d1[a[i]] += 1\n    d2 = {}\n    for i in range(n):\n        if b[i] not in d2.keys():\n            d2[b[i]] = 1\n        else:\n            d2[b[i]] += 1\n    k = int(reduce(lambda x, y: x ^ y, a + b))\n    l = []\n    flag = 1\n    for i in range(n):\n        c = a[i] ^ k\n        if c in d2.keys():\n            l.append(c)\n        else:\n            flag = 0\n            break\n    if flag == 0:\n        print(-1)\n    else:\n        for i in l:\n            print(i, end=' ')\n        print('\\n')\n    T -= 1", "import copy\nfor _ in range(int(input())):\n    n = int(input())\n    xor = 0\n    xor1 = 0\n    d = []\n    a = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    for i in range(n):\n        xor = xor ^ a[i]\n        xor1 = xor1 ^ c[i]\n    xor2 = xor ^ xor1\n    for i in range(n):\n        d.append(a[i] ^ xor2)\n    e = copy.deepcopy(d)\n    c.sort()\n    e.sort()\n    if e == c:\n        print(*d)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    xor = 0\n    for j in range(n):\n        xor = xor ^ a[j] ^ b[j]\n    c = []\n    z = []\n    for j in range(n):\n        c.append(xor ^ a[j])\n        z.append(xor ^ a[j])\n    counter = 0\n    b.sort()\n    c.sort()\n    for j in range(n):\n        if c[j] == b[j]:\n            continue\n        else:\n            counter = -1\n            break\n    if counter == -1:\n        print(-1)\n    else:\n        for k in range(n):\n            print(z[k], end=' ')", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = []\n    solution = True\n    Bdict = defaultdict(bool)\n    for x in B:\n        Bdict[x] = True\n    xor = 0\n    for i in range(n):\n        xor = xor ^ B[i] ^ A[i]\n    for i in range(n):\n        C.append(A[i] ^ xor)\n    if sorted(B) == sorted(C):\n        print(*C)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    b = [int(s) for s in input().split()]\n    ans = 0\n    for i in a:\n        ans = ans ^ i\n    for i in b:\n        ans = ans ^ i\n    c = []\n    for i in range(len(a)):\n        c.append(a[i] ^ ans)\n    b.sort()\n    c.sort()\n    flag = True\n    for i in range(len(b)):\n        if b[i] != c[i]:\n            flag = False\n            break\n    if flag:\n        for i in a:\n            print(i ^ ans, end=' ')\n        print()\n    else:\n        print(-1)", "def main():\n    t = int(input())\n    for i in range(1, t + 1):\n        go()\n\ndef go():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    k = 0\n    string = ''\n    c = []\n    for i in range(len(a)):\n        k ^= a[i]\n        k ^= b[i]\n    for i in range(len(a)):\n        c += [k ^ a[i]]\n    d = sorted(b)\n    e = sorted(c)\n    if d == e:\n        for i in range(len(c)):\n            string += str(c[i]) + ' '\n        string[::-1]\n        print(string)\n    else:\n        print(-1)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    (l1, l2) = ([int(i) for i in input().split()], [int(i) for i in input().split()])\n    xor = 0\n    for i in range(n):\n        xor ^= l1[i] ^ l2[i]\n    ans = [l1[i] ^ xor for i in range(len(l1))]\n    if sorted(ans) == sorted(l2):\n        print(*ans)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    (l1, l2) = ([int(i) for i in input().split()], [int(i) for i in input().split()])\n    initial1 = l1[0]\n    initial2 = l2[0]\n    for i in range(1, n):\n        xor1 = initial1 ^ l1[i]\n        xor2 = initial2 ^ l2[i]\n        initial1 = xor1\n        initial2 = xor2\n    xor = xor1 ^ xor2\n    ans = [l1[i] ^ xor for i in range(len(l1))]\n    if sorted(ans) == sorted(l2):\n        print(*ans)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = [0] * n\n    xor = 0\n    for i in range(n):\n        xor ^= a[i] ^ b[i]\n    for i in range(n):\n        c[i] = xor ^ a[i]\n    if sorted(b) == sorted(c):\n        print(*c)\n    else:\n        print(-1)", "from collections import Counter\nimport math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ls1 = list(map(int, input().strip().split()))\n    ls2 = list(map(int, input().strip().split()))\n    val1 = 0\n    for val in ls1:\n        val1 ^= val\n    for val in ls2:\n        val1 ^= val\n    c = [0] * n\n    for i in range(n):\n        c[i] = ls1[i] ^ val1\n    ls2.sort()\n    c.sort()\n    f = 0\n    for i in range(n):\n        if c[i] != ls2[i]:\n            f = 1\n    if f:\n        print('-1')\n    else:\n        ans = []\n        for i in range(n):\n            ans.append(ls1[i] ^ val1)\n        print(*ans)", "t = int(input())\nwhile t > 0:\n    c = []\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans1 = a[0]\n    ans2 = b[0]\n    for i in range(1, len(a)):\n        ans1 = ans1 ^ a[i]\n    for i in range(1, len(b)):\n        ans2 = ans2 ^ b[i]\n    answer = ans1 ^ ans2\n    finalanswer = answer\n    for i in range(0, len(a)):\n        c.append(finalanswer ^ a[i])\n    if sorted(c) == sorted(b):\n        print(*c, end=' ')\n    else:\n        print('-1')\n    t -= 1", "try:\n    t = int(input())\n    for s in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        x = 0\n        for val in a:\n            x = x ^ val\n        for val in b:\n            x = x ^ val\n        c = []\n        for i in range(n):\n            c.append(a[i] ^ x)\n        c.sort()\n        b.sort()\n        f = 0\n        for i in range(n):\n            if c[i] != b[i]:\n                f = 1\n                break\n        if f != 1:\n            for i in range(n):\n                print(a[i] ^ x, end=' ')\n        else:\n            print(-1)\nexcept:\n    pass", "from sys import stdin, stdout\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = []\n    c = []\n    fre = [0] * max(b)\n    for i in b:\n        fre[i - 1] = 1\n    for i in range(n):\n        c.append(a[i] ^ b[i])\n    x = c[0]\n    for i in range(1, n):\n        x ^= c[i]\n    for i in range(n):\n        flag = 0\n        if fre[(x ^ a[i]) - 1] == 1:\n            flag = 1\n            d.append(x ^ a[i])\n        if flag == 0:\n            print('-1')\n            break\n    if i == n - 1:\n        for k in d:\n            print(k, end=' ')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = 0\n    for j in a:\n        c = c ^ j\n    for j in b:\n        c = c ^ j\n    l = []\n    for j in range(n):\n        l.append(c ^ a[j])\n    d = l.copy()\n    l.sort()\n    b.sort()\n    if b == l:\n        for j in d:\n            print(j, end=' ')\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    res = a[0] ^ b[0]\n    for i in range(1, n):\n        res ^= a[i] ^ b[i]\n    l = []\n    for i in range(n):\n        l.append(a[i] ^ res)\n    l2 = sorted(l)\n    b.sort()\n    f = 1\n    for i in range(n):\n        if b[i] != l2[i]:\n            f = 0\n            break\n    if f == 0:\n        print(-1)\n    else:\n        for i in range(n):\n            print(l[i], end=' ')\n        print()", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    X = 0\n    C = [0] * N\n    for I in range(N):\n        X ^= A[I] ^ B[I]\n    for I in range(N):\n        C[I] = A[I] ^ X\n    if sorted(B) == sorted(C):\n        print(' '.join(map(str, C)))\n    else:\n        print(-1)", "try:\n    t = int(input(''))\n    while t:\n        n = int(input(''))\n        l = list(map(int, input('').split()))\n        m = list(map(int, input('').split()))\n        s = 0\n        x = []\n        flag = 0\n        for i in range(n):\n            s = s ^ l[i]\n            s = s ^ m[i]\n        for i in range(n):\n            x.append(s ^ l[i])\n        if sorted(x) == sorted(m):\n            for i in range(n):\n                print(x[i], end=' ')\n        else:\n            print(-1)\n        t -= 1\nexcept:\n    pass", "ts = int(input())\nwhile ts > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    xor = 0\n    for i in range(n):\n        xor ^= a[i]\n        xor ^= b[i]\n    s = {}\n    for i in b:\n        if i in s:\n            s[i] += 1\n        else:\n            s[i] = 1\n    flag = True\n    ans = []\n    for i in a:\n        if xor ^ i in s:\n            s[xor ^ i] -= 1\n            if s[xor ^ i] == 0:\n                s.pop(xor ^ i)\n            ans.append(xor ^ i)\n        else:\n            flag = not flag\n            break\n    if flag:\n        print(' '.join(map(str, ans)))\n    else:\n        print(-1)\n    ts -= 1", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    (arr3, arr4) = ([], [])\n    (x1, x2) = (0, 0)\n    for i in range(len(arr2)):\n        x1 ^= arr1[i]\n        x2 ^= arr2[i]\n    arr2.sort()\n    for i in range(len(arr1)):\n        arr3.append(arr1[i] ^ (x1 ^ x2))\n        arr4.append(arr3[-1])\n    arr3.sort()\n    if arr2 == arr3:\n        for i in range(len(arr4)):\n            print(arr4[i], end=' ')\n    else:\n        print('-1')", "for tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    y = a[0] ^ b[0]\n    for i in range(1, n):\n        y ^= a[i] ^ b[i]\n    b.sort()\n    c = []\n    for i in range(n):\n        c.append(a[i] ^ y)\n    d = c.copy()\n    d.sort()\n    if d != b:\n        print(-1)\n    else:\n        print(*c)", "from collections import defaultdict\nfrom functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    xor = reduce(lambda i, j: i ^ j, a + b)\n    d = defaultdict(int)\n    for i in b:\n        d[i] += 1\n    ans = []\n    for i in a:\n        if xor ^ i not in d or d[xor ^ i] == 0:\n            print(-1)\n            break\n        ans.append(xor ^ i)\n        d[xor ^ i] -= 1\n    else:\n        print(*ans)", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c1 = 0\n    for i in range(len(a)):\n        c1 = c1 ^ a[i] ^ b[i]\n    c = list()\n    for i in range(len(a)):\n        c.append(c1 ^ a[i])\n    if sorted(c) == sorted(b):\n        for i in c:\n            print(i, end=' ')\n    else:\n        print('-1', end='')\n    print()", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    x = 0\n    flag = 0\n    visit = [0] * 10 ** 6\n    new_arr = []\n    for i in range(n):\n        x = x ^ A[i]\n    for k in range(n):\n        x = x ^ B[k]\n        visit[B[k]] += 1\n    for j in range(n):\n        val = A[j] ^ x\n        visit[val] -= 1\n        new_arr.append(val)\n        if visit[val] < 0:\n            flag = -1\n            print(-1)\n            break\n    if flag != -1:\n        print(*new_arr)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    xor = 0\n    for x in range(n):\n        xor = xor ^ a[x] ^ b[x]\n    ans = []\n    for j in a:\n        ans.append(j ^ xor)\n    fans = list(ans)\n    ans.sort()\n    b.sort()\n    if ans == b:\n        print(*fans)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l4 = l1.copy()\n    a = 0\n    for i in l1:\n        a = a ^ i\n    for i in l2:\n        a = a ^ i\n    l3 = [0] * n\n    for i in range(n):\n        l3[i] = a ^ l2[i]\n    l3.sort()\n    l4.sort()\n    f = 0\n    for i in range(n):\n        if l3[i] != l4[i]:\n            f = 1\n            break\n    if f:\n        print(-1)\n    else:\n        for i in range(n):\n            print(a ^ l1[i], end=' ')\n        print(end='\\n')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    xtemp = 0\n    for i in range(n):\n        xtemp = xtemp ^ a[i] ^ b[i]\n    c = []\n    for i in range(n):\n        c.append(xtemp ^ a[i])\n    if sorted(c) == sorted(b):\n        print(*c)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d_b = dict()\n    for x in b:\n        if x in d_b:\n            d_b[x] += 1\n        else:\n            d_b[x] = 1\n    a_xor = 0\n    b_xor = 0\n    for i in a:\n        a_xor ^= i\n    for i in b:\n        b_xor ^= i\n    ans = a_xor ^ b_xor\n    b = True\n    st_ans = ''\n    for i in a:\n        v = i ^ ans\n        if v in d_b:\n            if d_b[v] > 0:\n                st_ans += str(v) + ' '\n                d_b[v] -= 1\n            else:\n                b = False\n                break\n        else:\n            b = False\n            break\n    if b:\n        print(st_ans.strip())\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    xor = a[0]\n    for i in range(1, n):\n        xor ^= a[i]\n    for i in range(n):\n        xor ^= b[i]\n    c = []\n    for i in range(n):\n        c.append(a[i] ^ xor)\n    b.sort()\n    temp = list(c)\n    temp.sort()\n    temp = str(temp)\n    b = str(b)\n    if temp == b:\n        print(' '.join(map(str, c)))\n    else:\n        print(-1)", "def find(A, B):\n    temp = 0\n    for x in A:\n        temp ^= x\n    for x in B:\n        temp ^= x\n    C = [temp ^ a for a in A]\n    if sorted(C) == sorted(B):\n        return C\n    return [-1]\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().strip().split()))\n    B = list(map(int, input().strip().split()))\n    print(*find(A, B))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = [int(j) for j in input().split()]\n    B = [int(j) for j in input().split()]\n    pk = 0\n    for i in A:\n        pk = pk ^ i\n    for i in B:\n        pk = pk ^ i\n    ans = []\n    d = {}\n    for i in B:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in A:\n        a = i ^ pk\n        if a in d:\n            if d[a] > 0:\n                d[a] -= 1\n                ans.append(a)\n            else:\n                print(-1)\n                break\n        else:\n            print(-1)\n            break\n    else:\n        for i in ans:\n            print(i, end=' ')\n        print()"]