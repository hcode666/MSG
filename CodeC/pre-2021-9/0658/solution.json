["T = int(input())\nfor i in range(T):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    (mex, ans) = (1, 0)\n    for j in arr:\n        if j == m:\n            continue\n        if j == mex:\n            mex += 1\n        ans += 1\n    if mex == m:\n        print(ans)\n    else:\n        print(-1)", "import math\ncase = int(input())\nfor _ in range(case):\n    (n, m) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    arr.sort()\n    number = 1\n    res = 0\n    for i in range(n):\n        if number == m:\n            break\n        if arr[i] > number:\n            res = -1\n            break\n        if arr[i] == number:\n            number += 1\n    if res == -1:\n        print(-1)\n    else:\n        for i in range(n):\n            if arr[i] != m:\n                res += 1\n        print(res)", "import math\ncase = int(input())\nfor _ in range(case):\n    (n, m) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    arr.sort()\n    number = 1\n    res = 0\n    for i in range(n):\n        if number == m:\n            break\n        if arr[i] > number:\n            res = -1\n            break\n        if arr[i] == number:\n            number += 1\n    if res == -1:\n        print(-1)\n    else:\n        for i in range(n):\n            if arr[i] != m:\n                res += 1\n        print(res)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ac = Counter(a)\n    al = list(ac.keys())\n    al.sort()\n    finlist = []\n    for i in range(m - 1):\n        if i + 1 in ac:\n            finlist.append(i + 1)\n    if len(finlist) == m - 1:\n        if m in ac:\n            print(n - ac[m])\n        else:\n            print(n)\n    else:\n        print(-1)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ac = Counter(a)\n    al = list(ac.keys())\n    al.sort()\n    finlist = []\n    for i in range(m - 1):\n        if i + 1 in ac:\n            finlist.append(i + 1)\n    if len(finlist) == m - 1:\n        if m in ac:\n            print(n - ac[m])\n        else:\n            print(n)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    A.sort()\n    s = 1\n    x = 0\n    for i in range(len(A)):\n        if A[i] == s and A[i] != M:\n            s += 1\n        if A[i] != M:\n            x += 1\n    if s == M:\n        print(x)\n    else:\n        print('-1')", "for z in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    x = 1\n    j = 0\n    a.sort()\n    for i in range(n):\n        if a[i] == m:\n            continue\n        if a[i] == x:\n            x += 1\n        j += 1\n    if x != m or j == 0:\n        print(-1)\n    else:\n        print(j)", "for z in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    x = 1\n    j = 0\n    a.sort()\n    for i in range(n):\n        if a[i] == m:\n            continue\n        if a[i] == x:\n            x += 1\n        j += 1\n    if x != m or j == 0:\n        print(-1)\n    else:\n        print(j)", "for z in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    x = 1\n    j = 0\n    a.sort()\n    for i in range(n):\n        if a[i] == m:\n            continue\n        if a[i] == x:\n            x += 1\n        j += 1\n    if x != m or j == 0:\n        print(-1)\n    else:\n        print(j)", "for z in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    x = 1\n    j = 0\n    a.sort()\n    for i in range(n):\n        if a[i] == m:\n            continue\n        if a[i] == x:\n            x += 1\n        j += 1\n    if x != m or j == 0:\n        print(-1)\n    else:\n        print(j)", "try:\n    t = int(input())\n    while t > 0:\n        (n, m) = [int(i) for i in input().split()]\n        a = [int(i) for i in input().split()]\n        a.sort()\n        mex = 1\n        ans = 0\n        for i in a:\n            if i == m:\n                continue\n            if i == mex:\n                mex = mex + 1\n            ans = ans + 1\n        if mex != m:\n            print(-1)\n        elif ans == 0:\n            print(-1)\n        else:\n            print(ans)\n        t = t + 1\nexcept:\n    pass", "import bisect\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    di = dict()\n    for i in lis:\n        di[i] = di.get(i, 0) + 1\n    lis = sorted(list(set(lis)))\n    ans = int()\n    ind = bisect.bisect_left(lis, m)\n    cnt = 0\n    ans = 0\n    for i in range(ind):\n        if i + 1 == lis[i]:\n            cnt += 1\n        ans += di[lis[i]]\n    if cnt != m - 1:\n        print(-1)\n        continue\n    for i in range(bisect.bisect_right(lis, m), len(lis)):\n        ans += di.get(lis[i], 0)\n    print(ans)", "import bisect\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    if n < 0:\n        print(0)\n    else:\n        di = dict()\n        for i in lis:\n            di[i] = di.get(i, 0) + 1\n        lis = sorted(list(set(lis)))\n        cnt = 0\n        ans = 0\n        ind = bisect.bisect_left(lis, m)\n        for i in range(ind):\n            if i + 1 == lis[i]:\n                cnt += 1\n            ans += di[lis[i]]\n        if cnt != m - 1:\n            print(-1)\n        else:\n            for i in range(len(lis)):\n                ans += di[lis[i]] if lis[i] > m else 0\n            print(ans)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    set_cont = set()\n    for i in range(n):\n        if k > arr[i]:\n            set_cont.add(arr[i])\n        else:\n            break\n    if len(set_cont) == k - 1:\n        print(n - arr.count(k))\n    else:\n        print(-1)\n    t -= 1", "import sys\nfrom collections import Counter, defaultdict, deque\nfrom math import gcd, sqrt, ceil\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(sys.stdin.readline())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    (n, m) = li()\n    a = li()\n    sa = set(a)\n    trumex = 1\n    while trumex in sa:\n        trumex += 1\n    if m == trumex:\n        print(n)\n    elif m < trumex:\n        x = a.count(m)\n        print(n - x)\n    else:\n        print(-1)", "import sys\nfrom collections import Counter, defaultdict, deque\nfrom math import gcd, sqrt, ceil\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(sys.stdin.readline())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    (n, m) = li()\n    a = li()\n    sa = set(a)\n    trumex = 1\n    while trumex in sa:\n        trumex += 1\n    if m == trumex:\n        print(n)\n    elif m < trumex:\n        x = a.count(m)\n        print(n - x)\n    else:\n        print(-1)", "import sys\nfrom collections import Counter, defaultdict, deque\nfrom math import gcd, sqrt, ceil\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(sys.stdin.readline())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    (n, m) = li()\n    a = li()\n    sa = set(a)\n    trumex = 1\n    while trumex in sa:\n        trumex += 1\n    if m == trumex:\n        print(n)\n    elif m < trumex:\n        x = a.count(m)\n        print(n - x)\n    else:\n        print(-1)", "import sys\nfrom collections import Counter, defaultdict, deque\nfrom math import gcd, sqrt, ceil\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(sys.stdin.readline())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    (n, m) = li()\n    a = li()\n    sa = set(a)\n    trumex = 1\n    while trumex in sa:\n        trumex += 1\n    if m == trumex:\n        print(n)\n    elif m < trumex:\n        x = a.count(m)\n        print(n - x)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    f = [0] * (m + 1)\n    for i in range(n):\n        if l[i] <= m:\n            f[l[i]] += 1\n    ans = True\n    for i in range(m - 1, 0, -1):\n        if f[i] == 0:\n            ans = False\n            break\n    if ans:\n        print(n - f[m])\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    nList = set(a)\n    mex = 1\n    while mex in nList:\n        mex += 1\n    if mex == m:\n        print(len(a))\n    elif mex < m:\n        print(-1)\n    elif mex > m:\n        print(len(a) - a.count(m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    nList = set(a)\n    mex = 1\n    while mex in nList:\n        mex += 1\n    if mex == m:\n        print(len(a))\n    elif mex < m:\n        print(-1)\n    elif mex > m:\n        print(len(a) - a.count(m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    nList = set(a)\n    mex = 1\n    while mex in nList:\n        mex += 1\n    if mex == m:\n        print(len(a))\n    elif mex < m:\n        print(-1)\n    elif mex > m:\n        print(len(a) - a.count(m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    nList = set(a)\n    mex = 1\n    while mex in nList:\n        mex += 1\n    if mex == m:\n        print(len(a))\n    elif mex < m:\n        print(-1)\n    elif mex > m:\n        print(len(a) - a.count(m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    nList = set(a)\n    mex = 1\n    while mex in nList:\n        mex += 1\n    if mex == m:\n        print(len(a))\n    elif mex < m:\n        print(-1)\n    elif mex > m:\n        print(len(a) - a.count(m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    nList = set(a)\n    mex = 1\n    while mex in nList:\n        mex += 1\n    if mex == m:\n        print(len(a))\n    elif mex < m:\n        print(-1)\n    elif mex > m:\n        print(len(a) - a.count(m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    nList = set(a)\n    mex = 1\n    while mex in nList:\n        mex += 1\n    if mex == m:\n        print(len(a))\n    elif mex < m:\n        print(-1)\n    elif mex > m:\n        print(len(a) - a.count(m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    nList = set(a)\n    mex = 1\n    while mex in nList:\n        mex += 1\n    if mex == m:\n        print(len(a))\n    elif mex < m:\n        print(-1)\n    elif mex > m:\n        print(len(a) - a.count(m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    nList = set(a)\n    mex = 1\n    while mex in nList:\n        mex += 1\n    if mex == m:\n        print(len(a))\n    elif mex < m:\n        print(-1)\n    elif mex > m:\n        print(len(a) - a.count(m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    nList = set(a)\n    mex = 1\n    while mex in nList:\n        mex += 1\n    if mex == m:\n        print(len(a))\n    elif mex < m:\n        print(-1)\n    elif mex > m:\n        print(len(a) - a.count(m))", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\nimport bisect\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        (n, m) = sm()\n        a = ln()\n        b = set(a)\n        possible = True\n        for i in range(1, m):\n            if i not in b:\n                possible = False\n                break\n        if possible:\n            if m in a:\n                print(n - a.count(m))\n            else:\n                print(n)\n        else:\n            print(-1)\nmain()", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\nimport bisect\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        (n, m) = sm()\n        a = ln()\n        b = set(a)\n        possible = True\n        for i in range(1, m):\n            if i not in b:\n                possible = False\n                break\n        if possible:\n            if m in a:\n                print(n - a.count(m))\n            else:\n                print(n)\n        else:\n            print(-1)\nmain()", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = list(map(int, input().split()))\n    As = set(A)\n    for i in range(1, len(A) + 2):\n        if i not in As:\n            mex = i\n            break\n    if mex < M:\n        print(-1)\n        continue\n    c = len([i for i in A if i == M])\n    print(len(A) - c)", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split(' '))\n    ls = [int(i) for i in input().split(' ')]\n    ls.sort()\n    count = 0\n    mex = 1\n    for i in range(n):\n        if ls[i] == mex and mex + 1 <= m:\n            mex += 1\n            count += 1\n        elif ls[i] != mex:\n            count += 1\n    if mex != m:\n        print(-1)\n    else:\n        print(count)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 0\n    c = 1\n    for j in l:\n        if j == m:\n            continue\n        if j == c:\n            c += 1\n        ans += 1\n    if c != m:\n        print(-1)\n    elif ans == 0:\n        print(-1)\n    else:\n        print(ans)", "from sys import stdin, stdout\nfrom collections import Counter\ninput = stdin.readline\n\ndef binarySearch(arr, term, n):\n    low = 0\n    high = n - 1\n    while high >= low:\n        mid = (low + high) // 2\n        if arr[mid] == term:\n            return 1\n        elif term < arr[mid]:\n            high = mid - 1\n        else:\n            low = mid + 1\n    return 0\nt = int(input().strip())\nfor _ in range(t):\n    (n, m) = list(map(int, input().strip().split()))\n    arr = list(map(int, input().strip().split()))\n    arr.sort()\n    flag = 1\n    for i in range(1, m):\n        flag = binarySearch(arr, i, n)\n        if flag == 0:\n            break\n    if flag == 0:\n        print(-1)\n        continue\n    d1 = Counter(arr)\n    value = d1.get(m, 0)\n    print(n - value)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 0\n    mex = 1\n    for i in arr:\n        if i == m:\n            continue\n        if i == mex:\n            mex += 1\n        ans += 1\n    if mex != m:\n        print(-1)\n    elif ans == 0:\n        print(-1)\n    else:\n        print(ans)", "T = int(input())\nfor i in range(T):\n    (N, M) = map(lambda x: int(x), str(input()).split(' '))\n    A = list(map(lambda x: int(x), str(input()).split(' ')))\n    dictone = {}\n    for j in range(N):\n        dictone[A[j]] = dictone.get(A[j], 0) + 1\n    dictwo = list(dictone.items())\n    dictwo.sort(key=lambda x: x[0])\n    nums = []\n    minval = -1\n    flag = 1\n    cursor = 0\n    j = 0\n    while j < len(dictwo):\n        if dictwo[j][0] != cursor + 1:\n            minval = cursor + 1\n            flag = 0\n            break\n        else:\n            cursor = cursor + 1\n            nums.append(dictwo[j][1])\n        j = j + 1\n    if flag:\n        minval = dictwo[-1][0] + 1\n    if M < minval:\n        print(len(A) - nums[M - 1])\n    elif M == minval:\n        print(len(A))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    less = []\n    (ans1, ans2) = (0, 0)\n    for i in range(n):\n        if l[i] < m:\n            ans1 += 1\n            less.append(l[i])\n        elif l[i] > m:\n            ans2 += 1\n    if len(set(less)) == m - 1:\n        print(ans1 + ans2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    less = []\n    (ans1, ans2) = (0, 0)\n    for i in range(n):\n        if l[i] < m:\n            ans1 += 1\n            less.append(l[i])\n        elif l[i] > m:\n            ans2 += 1\n    if len(set(less)) == m - 1:\n        print(ans1 + ans2)\n    else:\n        print(-1)", "def solve(arr, m):\n    mex = -1\n    d = list(set(arr))\n    for i in range(len(d)):\n        if d[i] != i + 1:\n            mex = i + 1\n            break\n    if mex == -1:\n        mex = max(arr) + 1\n    if mex < m:\n        ans = -1\n    else:\n        ans = 0\n        for i in range(len(arr)):\n            if arr[i] < m or arr[i] > m:\n                ans += 1\n    print(ans)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = sorted(list(map(int, input().split())))\n    solve(arr, m)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    mex = 1\n    ans = 0\n    for i in a:\n        if i == m:\n            continue\n        elif i == mex:\n            mex += 1\n        ans += 1\n    if mex != m:\n        print('-1')\n    elif ans == 0:\n        print('-1')\n    else:\n        print(ans)", "try:\n    t = int(input())\n    while t > 0:\n        (n, m) = [int(i) for i in input().split()]\n        a = [int(i) for i in input().split()]\n        a.sort()\n        mex = 1\n        ans = 0\n        for i in a:\n            if i == m:\n                continue\n            if i == mex:\n                mex = mex + 1\n            ans = ans + 1\n        if mex != m:\n            print(-1)\n        elif ans == 0:\n            print(-1)\n        else:\n            print(ans)\n        t = t - 1\nexcept:\n    pass", "for tc in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    try:\n        mIndex = arr.index(m)\n    except:\n        mIndex = -1\n    if mIndex != -1:\n        beforeArr = list(set(arr[:mIndex]))\n        if beforeArr == list(range(1, m)):\n            print(len(arr) - arr.count(m))\n        else:\n            print(-1)\n    else:\n        try:\n            oneBeforeMIndex = arr.index(m - 1)\n        except:\n            oneBeforeMIndex = -1\n        if oneBeforeMIndex != -1:\n            beforeArr = list(set(arr[:oneBeforeMIndex + 1]))\n            if beforeArr == list(range(1, m)):\n                print(len(arr))\n            else:\n                print(-1)\n        else:\n            print(-1)", "from bisect import bisect_left as lower_bound\nfrom bisect import bisect_right as upper_bound\nt = int(input())\nfor T in range(t):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    idx1 = lower_bound(l, m)\n    idx2 = upper_bound(l, m)\n    lower_num = 1\n    flag = True\n    for i in range(idx1):\n        if i == 0 and l[i] != 1:\n            flag = False\n            break\n        elif lower_num == l[i]:\n            pass\n        elif lower_num == l[i] - 1:\n            lower_num = l[i]\n    if lower_num != m - 1:\n        flag = False\n    if flag:\n        print(idx1 + n - idx2)\n    else:\n        print(-1)", "from bisect import bisect_left as lower_bound\nfrom bisect import bisect_right as upper_bound\nT = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    flag = True\n    index_l = lower_bound(a, m)\n    index_r = upper_bound(a, m)\n    check1 = set(a[:index_l])\n    check2 = set([i for i in range(1, m)])\n    if check1 != check2:\n        print(-1)\n    else:\n        n1 = index_r - index_l\n        print(n - n1)", "from bisect import bisect_left as lower_bound\nfrom bisect import bisect_right as upper_bound\nT = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    flag = True\n    index_l = lower_bound(a, m)\n    index_r = upper_bound(a, m)\n    check1 = set(a[:index_l])\n    check2 = set([i for i in range(1, m)])\n    if check1 != check2:\n        print(-1)\n    else:\n        n1 = a.count(m)\n        print(n - n1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    seti = set(arr)\n    f = 1\n    for i in range(1, m):\n        if i not in seti:\n            f = 0\n            break\n    if f == 0:\n        print(-1)\n    elif m in seti:\n        print(n - arr.count(m))\n    else:\n        print(n)", "import bisect\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    seti = set(arr)\n    f = 1\n    for i in range(1, m):\n        if i not in seti:\n            f = 0\n            break\n    if f == 0:\n        print(-1)\n    elif m in seti:\n        print(n - arr.count(m))\n    else:\n        print(n)", "from collections import Counter\nt = int(input())\nans = []\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    flag = True\n    d = Counter(a)\n    for i in range(1, m):\n        if i not in d:\n            flag = False\n            break\n    if flag:\n        ans.append(n - d.get(m, 0))\n    else:\n        ans.append(-1)\nfor _ in ans:\n    print(_)", "import bisect\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    seti = set(arr)\n    f = 1\n    for i in range(1, m):\n        if i not in seti:\n            f = 0\n            break\n    if f == 0:\n        print(-1)\n    elif m in seti:\n        print(n - arr.count(m))\n    else:\n        print(n)", "test = int(input())\nfor _ in range(test):\n    (N, M) = list(map(int, input().split()))\n    numbers = list(map(int, input().split()))\n    count = N - numbers.count(M)\n    numbers.sort()\n    numbers = list(set(numbers))\n    for i in range(1, M):\n        if i != numbers[i - 1]:\n            count = -1\n            break\n    print(count)", "for _ in range(int(input())):\n    (n, m) = [int(q) for q in input().split()]\n    a = list(map(int, input().split()))\n    x = n - a.count(m)\n    a = list(set(a))\n    a.sort()\n    for i in range(1, m):\n        if i != a[i - 1]:\n            x = -1\n            break\n    print(x)", "import sys\nsys.setrecursionlimit(10 ** 5 + 1)\ninf = int(10 ** 20)\nmax_val = inf\nmin_val = -inf\nRW = lambda : sys.stdin.readline().strip()\nRI = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\nfor _ in range(RI()):\n    (n, m) = RMI()\n    vals = RMI()\n    has = vals.count(m)\n    answer = n - has\n    sets = sorted(set(vals))\n    for y in range(1, m, 1):\n        if sets[y - 1] != y:\n            answer = -1\n            break\n    print(answer)", "T = int(input())\nfor i in range(T):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = n - l.count(m)\n    l.sort()\n    l = list(set(l))\n    for i in range(1, m):\n        if i != l[i - 1]:\n            ans = -1\n            break\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = n - l.count(m)\n    l.sort()\n    l = list(set(l))\n    for i in range(1, m):\n        if i != l[i - 1]:\n            ans = -1\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = n - l.count(m)\n    l.sort()\n    l = list(set(l))\n    for i in range(1, m):\n        if i != l[i - 1]:\n            ans = -1\n            break\n    print(ans)", "T = int(input())\nfor x in range(T):\n    z = True\n    (N, M) = map(int, input().split())\n    lista = list(map(int, input().split()))\n    r = lista.count(M)\n    lista = list(set(lista))\n    lista = sorted(lista)\n    for y in range(1, M, 1):\n        if lista[y - 1] != y:\n            print(-1)\n            z = False\n            break\n    if z:\n        c = N - r\n        print(c)", "for _ in range(int(input())):\n    (n, mex) = map(int, input().split())\n    lstt = list(map(int, input().split()))\n    leng = len(lstt)\n    lstt.sort()\n    lst = set(lstt)\n    m = -1\n    for i in range(1, n + 1):\n        if i not in lst:\n            m = i\n            break\n    if mex == m:\n        print(leng)\n    elif mex > m:\n        print(-1)\n    elif mex < m:\n        print(leng - lstt.count(mex))", "def answer():\n    c = [0] * (m + 1)\n    for v in a:\n        if v <= m:\n            c[v] += 1\n    for i in range(1, m):\n        if c[i] == 0:\n            return -1\n    return n - c[m]\nfor T in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(answer())", "import sys, math, itertools, random, bisect\nfrom collections import defaultdict\nINF = 10 ** 18\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, m) = get_ints()\n    a = get_array()\n    freq = defaultdict(int)\n    for i in a:\n        freq[i] += 1\n    flag = True\n    for i in range(1, m):\n        if freq[i] == 0:\n            flag = False\n            break\n    if not flag:\n        print(-1)\n    else:\n        print(n - freq[m])", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = dict()\n    for el in a:\n        if el not in d:\n            d[el] = 1\n        else:\n            d[el] += 1\n    mex = len(a) + 1\n    for i in range(len(a)):\n        if i + 1 not in d:\n            mex = i + 1\n            break\n    if m < mex:\n        print(len(a) - d[m])\n    elif m == mex:\n        print(len(a))\n    else:\n        print(-1)", "try:\n    t = int(input())\n    for i in range(0, t):\n        (n, m) = map(int, input().split(' '))\n        a = list(map(int, input().split(' ')))\n        a.sort()\n        s = set(a)\n        for i in range(1, n + 1):\n            if i not in s:\n                op = i\n                break\n        if op == m:\n            print(n)\n        elif op > m:\n            ol = a.count(m)\n            print(n - ol)\n        else:\n            print(-1)\nexcept:\n    pass", "try:\n    t = int(input())\n    for i in range(0, t):\n        (n, m) = map(int, input().split(' '))\n        a = list(map(int, input().split(' ')))\n        a.sort()\n        s = set(a)\n        for i in range(1, n + 1):\n            if i not in s:\n                op = i\n                break\n        if op == m:\n            print(n)\n        elif op > m:\n            ol = a.count(m)\n            print(n - ol)\n        else:\n            print(-1)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = set(arr)\n    mex = -1\n    for i in range(1, n + 1):\n        if i not in s:\n            mex = i\n            break\n    if m > mex:\n        print(-1)\n    elif m == mex:\n        print(n)\n    else:\n        c = arr.count(m)\n        print(n - c)", "for __ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = set(arr)\n    mex = -1\n    ele = 1\n    for i in range(1, n + 1):\n        if i not in s:\n            mex = i\n            break\n    if m > mex:\n        print(-1)\n    elif m == mex:\n        print(n)\n    else:\n        c = arr.count(m)\n        print(n - c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    st = set(arr)\n    mex = -1\n    for i in range(1, n + 1):\n        if i not in st:\n            mex = i\n            break\n    if mex == m:\n        print(n)\n    elif mex < m:\n        print(-1)\n    else:\n        res = 0\n        for i in arr:\n            if i != m:\n                res += 1\n        print(res)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ar = [int(x) for x in input().split()]\n    ar.sort()\n    f = 0\n    j = 1\n    if m == 1:\n        c = ar.count(1)\n        if n - c == 0:\n            print(-1)\n        else:\n            print(n - c)\n    else:\n        if ar[0] == 1:\n            prev = 1\n            j = 2\n            for i in range(1, n):\n                if ar[i] < m:\n                    if ar[i] != prev and ar[i] == j:\n                        j += 1\n                        prev = ar[i]\n                    elif ar[i] != prev and ar[i] != j:\n                        f = 1\n                        break\n                    elif ar[i] == prev:\n                        continue\n                else:\n                    break\n        elif m != 1:\n            f = 1\n        if f == 1 or j != m:\n            print(-1)\n        else:\n            c = ar.count(m)\n            if n - c == 0:\n                print(-1)\n            else:\n                print(n - c)", "t = int(input())\nfor i in range(t):\n    c = 1\n    (n, m) = map(int, input().split())\n    A = list(map(int, input().split()))\n    a = set(A)\n    j = 1\n    while j < m and j in a:\n        j += 1\n    if j != m:\n        print(-1)\n    else:\n        print(n - A.count(m))", "t = int(input())\nfor i in range(t):\n    c = 1\n    (n, m) = map(int, input().split())\n    A = list(map(int, input().split()))\n    a = set(A)\n    j = 1\n    while j < m and j in a:\n        j += 1\n    if j != m:\n        print(-1)\n    else:\n        print(n - A.count(m))", "import bisect\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    seti = set(arr)\n    f = 1\n    for i in range(1, m):\n        if i not in seti:\n            f = 0\n            break\n    if f == 0:\n        print(-1)\n    elif m in seti:\n        print(n - arr.count(m))\n    else:\n        print(n)", "tc = int(input())\nfor _ in range(tc):\n    (N, M) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    curr_mex = 1\n    arr.sort()\n    for i in range(N):\n        if arr[i] == curr_mex:\n            curr_mex += 1\n    if curr_mex == M:\n        print(N)\n    elif curr_mex < M:\n        print(-1)\n    else:\n        cnt = 0\n        for x in arr:\n            if x == M:\n                cnt += 1\n        print(N - cnt)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    (c, cnt) = (m - 1, 0)\n    l1 = [0] * m\n    for k in l:\n        if k < m:\n            if l1[k] == 0:\n                l1[k] = 1\n                c -= 1\n            cnt += 1\n        elif k > m:\n            cnt += 1\n    if c == 0:\n        print(cnt)\n    else:\n        print(-1)", "for T in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = [0] * n\n    for key in a:\n        try:\n            count[key - 1] += 1\n        except:\n            pass\n    a = list(set(a))\n    a.sort()\n    flag = True\n    for i in range(len(a)):\n        if a[i] != i + 1:\n            flag = False\n            mex = i + 1\n            break\n    if flag:\n        mex = len(a) + 1\n    if mex < m:\n        print(-1)\n    else:\n        print(n - count[m - 1])", "for T in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = [0] * n\n    for key in a:\n        try:\n            count[key - 1] += 1\n        except:\n            pass\n    a = list(set(a))\n    a.sort()\n    flag = True\n    for i in range(len(a)):\n        if a[i] != i + 1:\n            flag = False\n            mex = i + 1\n            break\n    if flag:\n        mex = len(a) + 1\n    if mex < m:\n        print(-1)\n    else:\n        print(n - count[m - 1])", "for T in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = [0] * n\n    for key in a:\n        try:\n            count[key - 1] += 1\n        except:\n            pass\n    a = list(set(a))\n    a.sort()\n    flag = True\n    for i in range(len(a)):\n        if a[i] != i + 1:\n            flag = False\n            mex = i + 1\n            break\n    if flag:\n        mex = len(a) + 1\n    if mex < m:\n        print(-1)\n    else:\n        print(n - count[m - 1])", "for T in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = [0] * n\n    for key in a:\n        try:\n            count[key - 1] += 1\n        except:\n            pass\n    a = list(set(a))\n    a.sort()\n    flag = True\n    for i in range(len(a)):\n        if a[i] != i + 1:\n            flag = False\n            mex = i + 1\n            break\n    if flag:\n        mex = len(a) + 1\n    if mex < m:\n        print(-1)\n    else:\n        print(n - count[m - 1])", "for T in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = [0] * n\n    for key in a:\n        try:\n            count[key - 1] += 1\n        except:\n            pass\n    a = list(set(a))\n    a.sort()\n    flag = True\n    for i in range(len(a)):\n        if a[i] != i + 1:\n            flag = False\n            mex = i + 1\n            break\n    if flag:\n        mex = len(a) + 1\n    if mex < m:\n        print(-1)\n    else:\n        print(n - count[m - 1])", "def main():\n    (n, m) = [int(x) for x in input().split()]\n    l = [int(X) for X in input().split()]\n    ls = set(l)\n    f = 1\n    for i in range(1, m):\n        if i not in ls:\n            f = 0\n            break\n    if f == 0:\n        print(-1)\n    elif m in ls:\n        print(n - l.count(m))\n    else:\n        print(n)\nfor _ in range(int(input())):\n    main()", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    ls = [int(X) for X in input().split()]\n    x = ls.count(m)\n    ls2 = list(set(ls))\n    if len(ls2) <= m - 2:\n        print(-1)\n    elif ls2[m - 2] != m - 1:\n        print(-1)\n    else:\n        print(n - x)", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().strip().split()))\n    list1 = list(map(int, input().strip().split()))\n    count = list1.count(m)\n    set1 = set(list1)\n    list2 = list(set1)\n    if len(list2) <= m - 2:\n        print(-1)\n    elif list2[m - 2] != m - 1:\n        print(-1)\n    else:\n        print(n - count)", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    j = 1\n    cm = 0\n    for i in range(n):\n        if a[i] > j:\n            cm = a[i]\n            break\n        else:\n            j += 1\n    if i == n - 1 and cm == 0:\n        cm = a[n - 1] + 1\n    if cm == m:\n        print(n)\n    elif cm < m:\n        print(-1)\n    else:\n        c = 0\n        for i in range(n):\n            if a[i] != m:\n                c += 1\n        print(c)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, m) = (int(o) for o in input().split())\n    a = [int(o) for o in input().split()]\n    a.sort()\n    j = 1\n    cm = 0\n    for i in range(n):\n        if a[i] > j:\n            cm = a[i]\n            break\n        else:\n            j += 1\n    if i == n - 1 and cm == 0:\n        cm = a[n - 1] + 1\n    if cm == m:\n        print(n)\n    elif cm < m:\n        print(-1)\n    else:\n        c = 0\n        for i in range(n):\n            if a[i] != m:\n                c += 1\n        print(c)\n    t -= 1", "t = int(input())\nimport sys\nwhile t != 0:\n    (n, m) = list(map(int, input().strip().split()))\n    a = list(map(int, input().strip().split()))\n    l = [0] * 100000\n    mx = -1\n    c = 0\n    for i in a:\n        if i > mx:\n            mx = i\n        l[i] += 1\n    for i in range(1, mx + 1):\n        if l[i] == 0:\n            if i == m:\n                print(n)\n                c = 1\n                break\n            elif i < m:\n                print(-1)\n                c = 1\n                break\n            else:\n                print(n - l[m])\n                c = 1\n                break\n    if c == 0:\n        if m == mx + 1:\n            print(n)\n        else:\n            print('-1')\n    t -= 1", "from sys import stdin\n\ndef sin():\n    return stdin.readline()\nfor _ in range(int(sin())):\n    (n, m) = map(int, sin().split())\n    l = list(map(int, sin().split(' ')))\n    g = [0] * max(l) * 2\n    for i in l:\n        g[i - 1] = 1\n    p = g.index(0) + 1\n    if p == m:\n        print(n)\n    elif p < m:\n        print(-1)\n    else:\n        print(n - l.count(m))", "import bisect\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    a = bisect.bisect(l, m)\n    s = list(set(l[0:a]))\n    if len(s) == 0:\n        if m == 1:\n            if m in l:\n                print(len(l) - l.count(m))\n            else:\n                print(n)\n        else:\n            print(-1)\n    else:\n        s.sort()\n        a = s[len(s) - 1]\n        if s == list(range(1, a + 1)):\n            if m in l:\n                print(len(l) - l.count(m))\n            else:\n                print(n)\n        else:\n            print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0\n    temp = [0] * (m - 1)\n    for i in l:\n        if i > m:\n            ans += 1\n        elif i < m:\n            temp[i - 1] += 1\n    flag = 1\n    for i in range(m - 2, -1, -1):\n        if temp[i] == 0:\n            flag = 0\n            break\n        else:\n            ans += temp[i]\n    if flag == 0:\n        print('-1')\n    else:\n        print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    count = 0\n    temp = [0] * (m + 1)\n    for i in range(n):\n        if a[i] == m:\n            temp[a[i]] += 1\n        elif a[i] > m:\n            pass\n        else:\n            temp[a[i]] = 1\n    for i in range(1, m):\n        if temp[i] == 0:\n            print(-1)\n            break\n        if i == m - 1:\n            print(n - temp[-1])", "import sys\n\ndef main(n, m, a):\n    a_set = set(a)\n    a.sort()\n    flag = 0\n    for i in range(1, n + 1):\n        if i >= m:\n            break\n        if i not in a_set:\n            flag = 1\n            break\n    if flag == 0:\n        temp = a.count(m)\n        return n - temp\n    else:\n        return -1\nt = int(sys.stdin.readline().rstrip())\nfor i in range(t):\n    (n, m) = map(int, sys.stdin.readline().rstrip().split())\n    a = list(map(int, sys.stdin.readline().rstrip().split()))\n    print(main(n, m, a))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    no = l.count(b)\n    l = list(set(l))\n    if len(l) < b - 1:\n        print(-1)\n    elif l[b - 2] != b - 1:\n        print(-1)\n    else:\n        print(a - no)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    array = list(map(int, input().split()))\n    ans = len(array) - array.count(m)\n    flag = 0\n    array = list(set(array))\n    array.sort()\n    try:\n        if array.index(m - 1) + 1 != m - 1:\n            print(-1)\n            flag = 1\n    except:\n        print(-1)\n        flag = 1\n    if flag == 0:\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().strip().split()))\n    list1 = list(map(int, input().strip().split()))\n    count = list1.count(m)\n    set1 = set(list1)\n    list2 = list(set1)\n    if len(list2) <= m - 2:\n        print(-1)\n    elif list2[m - 2] != m - 1:\n        print(-1)\n    else:\n        print(n - count)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    array = list(map(int, input().split()))\n    ans = len(array) - array.count(m)\n    flag = 0\n    array = list(set(array))\n    array.sort()\n    try:\n        if array.index(m - 1) + 1 != m - 1:\n            print(-1)\n            flag = 1\n    except:\n        print(-1)\n        flag = 1\n    if flag == 0:\n        print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = set(a)\n    c = 0\n    for i in range(1, m):\n        if i not in b:\n            c = -1\n            break\n    if c == -1:\n        print(-1)\n    elif m in b:\n        print(n - a.count(m))\n    else:\n        print(n)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    k = 1000000000000000\n    for i in range(1, n):\n        if a[i] - 1 > a[i - 1]:\n            k = a[i] - 1\n            break\n    if k == m:\n        print(n)\n    elif k < m:\n        print(-1)\n    else:\n        print(n - a.count(m))", "def solve():\n    (n, m) = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = set(b)\n    c = 0\n    for i in range(1, m):\n        if i not in a:\n            c = -1\n            break\n    if c == -1:\n        print(-1)\n    elif m in a:\n        print(n - b.count(m))\n    else:\n        print(n)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = set(b)\n    c = 0\n    mini = min(a)\n    for i in range(1, m):\n        if i not in a:\n            c = -1\n            break\n    if c == -1:\n        print(-1)\n    elif m in a:\n        print(n - b.count(m))\n    else:\n        print(n)", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(lambda x: int(x), input().split()))\n    s = list(map(lambda x: int(x), input().split()))\n    freq_array = [0] * m\n    if m > n:\n        print(-1)\n        continue\n    for i in range(0, len(s)):\n        if s[i] >= m:\n            continue\n        else:\n            freq_array[s[i]] += 1\n    total = 0\n    flag = 0\n    for i in range(1, len(freq_array)):\n        if freq_array[i] == 0:\n            print(-1)\n            flag = 1\n            break\n        total += freq_array[i]\n    count_m = 0\n    if flag == 1:\n        continue\n    for i in range(0, len(s)):\n        if s[i] == m:\n            count_m += 1\n    print(n - count_m)"]