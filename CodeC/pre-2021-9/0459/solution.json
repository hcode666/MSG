["for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    (dict1, ans, zero) = ({}, 0, 0)\n    for j in range(n):\n        dict1[lst[j]] = 0\n    for j in range(n):\n        dict1[lst[j]] += 1\n    for key in dict1:\n        if dict1[key] == k:\n            ans += key\n            if key == 0:\n                zero = 1\n    if zero == 1 and ans == 0:\n        print(0)\n    elif ans > 0:\n        print(ans)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    (dict1, ans, zero) = ({}, 0, 0)\n    for j in range(n):\n        dict1[lst[j]] = 0\n    for j in range(n):\n        temp = dict1[lst[j]]\n        temp += 1\n        dict1[lst[j]] = temp\n    for key in dict1:\n        if dict1[key] == k:\n            ans += key\n            if key == 0:\n                zero = 1\n    if zero == 1 and ans == 0:\n        print(0)\n    elif ans > 0:\n        print(ans)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(list(map(int, input().split())))\n    krepeat = []\n    f = 1\n    for i in range(1, n):\n        if l[i] == l[i - 1]:\n            f += 1\n        else:\n            if f == k:\n                krepeat.append(l[i - 1])\n            f = 1\n    if f == k:\n        krepeat.append(l[-1])\n    print(sum(krepeat) if len(krepeat) else -1)", "from collections import Counter\nt = int(input())\nwhile t > 0:\n    flag = 0\n    x = 0\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    for i in c:\n        if k == c[i]:\n            flag = 1\n            x += i\n    if flag:\n        print(x)\n    else:\n        print(-1)\n    t = t - 1", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef h():\n    (n, k) = IP()\n    l = I()\n    res = 0\n    d = Counter(l)\n    ok = False\n    for i in d:\n        if d[i] == k:\n            res += i\n            ok = True\n    return res if ok else -1\nfor z in range(IN()):\n    print(h())", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(list(map(int, input().split())))\n    krepeat = []\n    f = 1\n    for i in range(1, n):\n        if l[i] == l[i - 1]:\n            f += 1\n        else:\n            if f == k:\n                krepeat.append(l[i - 1])\n            f = 1\n    if f == k:\n        krepeat.append(l[-1])\n    print(sum(krepeat) if len(krepeat) else -1)", "t = int(input())\nres = []\nwhile t > 0:\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    reps = {}\n    l = []\n    l = input().split()\n    l = [eval(i) for i in l]\n    l = sorted(l)\n    for i in range(len(l)):\n        if l[i] not in reps.keys():\n            reps[l[i]] = 0\n            reps[l[i]] += 1\n        else:\n            reps[l[i]] += 1\n    sum = 0\n    sum = int(sum)\n    reps_found = 0\n    for key in reps.keys():\n        if reps[key] == k:\n            sum += key\n            reps_found = 1\n    if reps_found == 0:\n        res.append(-1)\n    else:\n        res.append(sum)\n    t -= 1\nfor ele in res:\n    print(ele)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, k) = IP()\n    l = I()\n    res = 0\n    d = Counter(l)\n    ok = False\n    for i in d:\n        if d[i] == k:\n            res += i\n            ok = True\n    return res if ok else -1\nfor _ in range(IN()):\n    print(f())", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, k) = IP()\n    l = I()\n    res = 0\n    d = Counter(l)\n    ok = False\n    for i in d:\n        if d[i] == k:\n            res += i\n            ok = True\n    return res if ok else -1\nfor _ in range(IN()):\n    print(f())", "t = int(input())\nfrom collections import Counter\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    clist = Counter(lst)\n    flag = 0\n    x = 0\n    for i in clist:\n        vl = clist[i]\n        if vl == k:\n            flag = 1\n            x += i\n    if flag:\n        print(x)\n    else:\n        print(-1)", "import collections\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = collections.Counter(a)\n    s = set(a)\n    sum1 = 0\n    flag = 0\n    for i in s:\n        if d[i] == k:\n            sum1 += i\n            if i == 0:\n                flag = 1\n    if flag:\n        print(sum1)\n    elif sum1 == 0:\n        print(-1)\n    else:\n        print(sum1)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    d = Counter(a)\n    s = 0\n    f = 0\n    for i in d:\n        if d[i] == k:\n            s += i\n            f = 1\n    if f == 0:\n        print(-1)\n    else:\n        print(s)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    d = Counter(a)\n    s = 0\n    f = 0\n    for i in d:\n        if d[i] == k:\n            s += i\n            f = 1\n    if f == 0:\n        print(-1)\n    else:\n        print(s)", "import sys\nfor i in range(int(sys.stdin.readline())):\n    (n, m) = map(int, sys.stdin.readline().split())\n    ar = list(map(int, sys.stdin.readline().split()))\n    d = {}\n    for j in range(n):\n        x = ar[j]\n        if d.get(x) == None:\n            d[x] = 0\n        d[x] += 1\n    br = list(d.keys())\n    ans = 0\n    hit = False\n    for u in range(len(br)):\n        if d[br[u]] == m:\n            ans += br[u]\n            hit = True\n    if not hit:\n        print(-1)\n    else:\n        print(ans)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, k) = IP()\n    l = I()\n    res = 0\n    d = Counter(l)\n    ok = False\n    for i in d:\n        if d[i] == k:\n            res += i\n            ok = True\n    return res if ok else -1\nfor _ in range(IN()):\n    print(f())", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, k) = IP()\n    l = I()\n    res = 0\n    d = Counter(l)\n    ok = False\n    for i in d:\n        if d[i] == k:\n            res += i\n            ok = True\n    return res if ok else -1\nfor _ in range(IN()):\n    print(f())", "t = int(input())\nfor i in range(t):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    d = {}\n    for i in A:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    total = 0\n    zero = 0\n    for i in d:\n        if d[i] == K:\n            total = total + i\n            if i == 0:\n                zero = 1\n    if total == 0:\n        if zero == 0:\n            print(-1)\n        else:\n            print(0)\n    else:\n        print(total)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    li = list(map(int, input().split()))\n    dict = {}\n    for i in li:\n        if i not in dict:\n            dict[i] = 0\n        dict[i] += 1\n    sum = 0\n    flag = True\n    for (i, j) in dict.items():\n        if j == b:\n            flag = False\n            sum += i\n    if flag:\n        print(-1)\n    else:\n        print(sum)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\n\ndef f():\n    (n, k) = IP()\n    l = I()\n    res = 0\n    d = Counter(l)\n    ok = False\n    for i in d:\n        if d[i] == k:\n            res += i\n            ok = True\n    return res if ok else -1\nfor _ in range(IN()):\n    print(f())", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    dict = {}\n    for x in arr:\n        if x in dict:\n            dict[x] += 1\n        else:\n            dict[x] = 1\n    result = 0\n    satified = False\n    for x in dict:\n        if dict[x] == k:\n            satified = True\n            result += x\n    if result == 0:\n        if satified:\n            print(result)\n        else:\n            print(-1)\n    else:\n        print(result)", "tc = int(input())\nfor _ in range(tc):\n    (n, k) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    dict = {}\n    for x in arr:\n        if x in dict:\n            dict[x] += 1\n        else:\n            dict[x] = 1\n    result = 0\n    satified = False\n    for x in dict:\n        if dict[x] == k:\n            satified = True\n            result += x\n    if result == 0:\n        if satified:\n            print(result)\n        else:\n            print(-1)\n    else:\n        print(result)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    p = [int(ele) for ele in input().strip().split()][:n]\n    d = dict(Counter(p))\n    s = 0\n    for i in d:\n        if d[i] == k:\n            s += i\n    if s == 0 and 0 not in p:\n        print(-1)\n    elif s == 0 and 0 in p and (d[0] != k):\n        print(-1)\n    else:\n        print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (ans, flag) = (0, 0)\n    list1 = [int(x) for x in input().split()]\n    list2 = []\n    dict = {}\n    for i in range(n):\n        if list1[i] not in dict.keys():\n            dict[list1[i]] = 1\n        else:\n            dict[list1[i]] += 1\n    for key in dict:\n        if dict[key] == k:\n            ans += key\n            flag = 1\n    if flag == 0:\n        print(-1)\n    else:\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    count = 0\n    virginity = 0\n    list1 = list(map(int, input().split()))\n    list2 = []\n    dict = {}\n    for i in range(n):\n        if list1[i] not in dict.keys():\n            dict[list1[i]] = 1\n        else:\n            dict[list1[i]] = dict[list1[i]] + 1\n    for i in dict:\n        if dict.get(i) == k:\n            count = count + i\n            virginity = 1\n    if virginity == 0:\n        count = -1\n    print(count)", "from collections import Counter\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    ans = 0\n    det = 0\n    for i in c:\n        if c[i] == b:\n            ans += i\n            det = 1\n    if not ans and (not det):\n        print(-1)\n    else:\n        print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    N = list(map(int, input().split()))\n    c = Counter(N)\n    ans = 0\n    det = 0\n    for i in c:\n        if c[i] == k:\n            ans += i\n            det = 1\n    if not ans and (not det):\n        print(-1)\n    else:\n        print(ans)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split(' '))\n    arr = input().split(' ')\n    arr = [int(x) for x in arr]\n    freq = {}\n    for key in arr:\n        if key in freq:\n            val = freq[key]\n            freq.update({key: val + 1})\n        else:\n            freq[key] = 1\n    ans = 0\n    flag = 0\n    for (key, val) in freq.items():\n        if val == k:\n            flag = 1\n            ans += key\n    if ans == 0 and flag == 0:\n        print(-1)\n    else:\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    d = {}\n    for i in arr:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    sum = 0\n    flag = True\n    for i in d.keys():\n        if d[i] == k:\n            sum += i\n            flag = False\n    if flag:\n        sum = -1\n    print(sum)", "for _ in range(int(input())):\n    mydict = {}\n    (n, k) = map(int, input().split())\n    for i in map(int, input().split()):\n        if i not in mydict:\n            mydict[i] = 0\n        mydict[i] += 1\n    val = 0\n    null = False\n    for i in mydict:\n        if mydict[i] == k:\n            val += i\n            null = True\n    if null == False:\n        print(-1)\n    else:\n        print(val)", "import collections\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = collections.Counter(l)\n    sum = 0\n    z = 1\n    for i in c:\n        if c[i] == k:\n            sum += i\n            z = 0\n    if sum == 0 and z == 1:\n        print(-1)\n    else:\n        print(sum)", "import collections\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = collections.Counter(l)\n    sum = 0\n    z = 1\n    for i in c:\n        if c[i] == k:\n            sum += i\n            z = 0\n    if sum == 0 and z == 1:\n        print(-1)\n    else:\n        print(sum)", "import collections\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = collections.Counter(l)\n    sum = 0\n    z = 1\n    for i in c:\n        if c[i] == k:\n            sum += i\n            z = 0\n    if sum == 0 and z == 1:\n        print(-1)\n    else:\n        print(sum)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = Counter(l).items()\n    sum = 0\n    z = 1\n    for (i, j) in c:\n        if j == k:\n            sum += i\n            z = 0\n    if sum == 0 and z == 1:\n        print('-1')\n    else:\n        print(sum)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    key = []\n    value = []\n    dic = {}\n    ans = 0\n    flag = 1\n    for i in a:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    for i in dic.keys():\n        key.append(i)\n    for i in dic.values():\n        value.append(i)\n    for (i, j) in enumerate(value):\n        if j == k:\n            ans += key[i]\n            flag = 0\n    if ans == 0 and flag == 1:\n        print(-1)\n    else:\n        print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    flag = 1\n    for (i, j) in Counter(a).items():\n        if j == k:\n            ans += i\n            flag = 0\n    if ans == 0 and flag == 1:\n        print(-1)\n    else:\n        print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = Counter(a).items()\n    s = 0\n    f = False\n    for (b, v) in c:\n        if v == k:\n            s += b\n            f = True\n    if s == 0 and f == False:\n        print(-1)\n    else:\n        print(s)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = Counter(a).items()\n    s = 0\n    f = False\n    for (b, v) in c:\n        if v == k:\n            s += b\n            f = True\n    if s == 0 and f == False:\n        print(-1)\n    else:\n        print(s)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    c = Counter(arr)\n    s = -1\n    f = 0\n    for i in c:\n        if c[i] == k:\n            f = 1\n            s += i\n    if f == 0:\n        print(-1)\n    else:\n        print(s + 1)", "for x in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    temp_dict = {}\n    sum = 0\n    check = 0\n    for x in l:\n        if x not in temp_dict.keys():\n            temp_dict[x] = 1\n        else:\n            temp_dict[x] += 1\n    for x in temp_dict.keys():\n        if temp_dict[x] == k:\n            sum = sum + x\n            check = 111\n    if check == 111:\n        print(sum)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    dict1 = {}\n    sum1 = 0\n    okay = 0\n    for j in list1:\n        if j not in dict1.keys():\n            dict1[j] = 1\n        else:\n            dict1[j] += 1\n    for s in dict1.keys():\n        if dict1[s] == k:\n            okay = 1\n            sum1 += s\n    if okay == 1:\n        print(sum1)\n    else:\n        print(-1)", "test = int(input())\nfor t in range(test):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    num_sum = 0\n    no_sums = True\n    itterated_nums = {}\n    for i in A:\n        if i not in itterated_nums:\n            itterated_nums[i] = 0\n        itterated_nums[i] += 1\n    for s in itterated_nums:\n        if itterated_nums.get(s) == K:\n            num_sum += s\n            no_sums = False\n    if no_sums:\n        print(-1)\n    else:\n        print(num_sum)", "for t in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    li = list(map(int, input().split()))\n    dict = {}\n    (res_sum, flag) = (0, 0)\n    for item in li:\n        if item not in dict.keys():\n            dict[item] = 1\n        else:\n            dict[item] += 1\n    for a in dict.keys():\n        if dict[a] == k:\n            res_sum += a\n            flag = 1\n    if flag == 0:\n        print('-1')\n    else:\n        print(res_sum)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    s = 0\n    c = 0\n    for i in d.keys():\n        if d[i] == k:\n            s += i\n            c = 1\n    print(s if c == 1 else -1)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    s = -1\n    f = 0\n    for i in c:\n        if c[i] == k:\n            f = 1\n            s = s + i\n    if f == 0:\n        print(-1)\n    else:\n        print(s + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = {}\n    for i in range(n):\n        if a[i] in count:\n            count[a[i]] += 1\n        else:\n            count[a[i]] = 1\n    s = 0\n    bl = False\n    for i in count:\n        if count[i] == k:\n            s += i\n            bl = True\n    if bl:\n        print(s)\n    else:\n        print(-1)", "from collections import Counter\nfor _ in range(int(input())):\n    s = 0\n    c = 0\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    for i in d.keys():\n        if k == d[i]:\n            s = s + i\n            c = 1\n    if c == 1:\n        print(s)\n    else:\n        print(-1)", "from collections import Counter\nfor _ in range(int(input())):\n    s = 0\n    c = 0\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    for i in d.keys():\n        if k == d[i]:\n            s = s + i\n            c = 1\n    if c == 1:\n        print(s)\n    else:\n        print(-1)", "tests = int(input())\nfor i in range(tests):\n    (length, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    freq = {}\n    ans = 0\n    for j in arr:\n        if j in freq:\n            freq[j] += 1\n        else:\n            freq[j] = 1\n    for j in freq.keys():\n        if freq[j] == k:\n            ans += j\n    if ans == 0 and (0 not in freq or freq[0] != k):\n        ans = -1\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    s = 0\n    c = 0\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    for i in d.keys():\n        if k == d[i]:\n            s = s + i\n            c = 1\n    if c == 1:\n        print(s)\n    else:\n        print(-1)", "from collections import Counter\nfor _ in range(int(input())):\n    s = 0\n    c = 0\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    for i in d.keys():\n        if k == d[i]:\n            s = s + i\n            c = 1\n    if c == 1:\n        print(s)\n    else:\n        print(-1)", "from collections import Counter\nfor _ in range(int(input())):\n    s = 0\n    c = 0\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    for i in d.keys():\n        if k == d[i]:\n            s = s + i\n            c = 1\n    if c == 1:\n        print(s)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    nk = input().split()\n    n = int(nk[0])\n    k = int(nk[1])\n    ar = input().split()\n    arr = [int(l) for l in ar]\n    freq = {}\n    for ele in arr:\n        if ele not in freq:\n            freq[ele] = 1\n        else:\n            freq[ele] += 1\n    su = 0\n    fl = 0\n    for key in freq:\n        if freq[key] == k:\n            fl = 1\n            su += key\n    if fl:\n        print(su)\n    else:\n        print(-1)", "T = int(input())\nwhile T > 0:\n    (n, k) = map(int, input().split())\n    lst = [int(i) for i in input().split()]\n    counter = dict()\n    s = 0\n    count = 0\n    for i in lst:\n        if i in counter:\n            counter[i] += 1\n        else:\n            counter[i] = 1\n        if counter[i] == k:\n            s += i\n            count += 1\n        if counter[i] == k + 1:\n            s -= i\n            count -= 1\n    if count == 0:\n        print(-1)\n    else:\n        print(s)\n    T -= 1", "T = int(input())\nwhile T > 0:\n    (n, k) = map(int, input().split())\n    lst = [int(i) for i in input().split()]\n    counter = dict()\n    s = 0\n    for i in lst:\n        if i in counter:\n            counter[i] += 1\n        else:\n            counter[i] = 1\n    flag = False\n    for (i, j) in counter.items():\n        if j == k:\n            s += i\n            flag = True\n    if flag:\n        print(s)\n    else:\n        print(-1)\n    T -= 1", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split(' '))\n    A = list(map(int, input().split(' ')))\n    D = {}\n    for j in A:\n        if j in D:\n            D[j] += 1\n        else:\n            D[j] = 1\n    s = 0\n    exist = False\n    for j in D:\n        if D[j] == K:\n            s += j\n            exist = True\n    if exist == False:\n        s = -1\n    print(s)", "from collections import Counter\nfor _ in range(int(input())):\n    s = 0\n    c = 0\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    for i in d.keys():\n        if k == d[i]:\n            s = s + i\n            c = 1\n    if c == 1:\n        print(s)\n    else:\n        print(-1)", "from collections import Counter\nfor _ in range(int(input())):\n    s = 0\n    c = 0\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    for i in d.keys():\n        if k == d[i]:\n            s = s + i\n            c = 1\n    if c == 1:\n        print(s)\n    else:\n        print(-1)", "from collections import Counter\ntestCases = int(input())\nfor testCase in range(testCases):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sum = 0\n    flag = False\n    for i in Counter(a).most_common():\n        if i[1] == k:\n            sum += i[0]\n            flag = True\n    if flag:\n        print(sum)\n    else:\n        print(-1)", "from collections import Counter\n\ndef list_to_frequency_dictionary(input_list):\n    return dict(Counter(input_list))\n\ndef solver(frequency_dictionary, k):\n    no_match = True\n    output = 0\n    for (key, value) in frequency_dictionary.items():\n        if value == k:\n            output += key\n            no_match = False\n    if no_match:\n        return -1\n    return output\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    input_list = list(map(int, input().split()))\n    fr_dict = list_to_frequency_dictionary(input_list)\n    print(solver(fr_dict, k))", "from collections import Counter\n\ndef list_to_frequency_dictionary(input_list):\n    return dict(Counter(input_list))\n\ndef solver(frequency_dictionary, k):\n    no_match = True\n    output = 0\n    for (key, value) in frequency_dictionary.items():\n        if value == k:\n            output += key\n            no_match = False\n    if no_match:\n        return -1\n    return output\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    input_list = list(map(int, input().split()))\n    fr_dict = list_to_frequency_dictionary(input_list)\n    print(solver(fr_dict, k))", "from collections import Counter\n\ndef list_to_frequency_dictionary(input_list):\n    return dict(Counter(input_list))\n\ndef solver(frequency_dictionary, k):\n    no_match = True\n    output = 0\n    for (key, value) in frequency_dictionary.items():\n        if value == k:\n            output += key\n            no_match = False\n    if no_match:\n        return -1\n    return output\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    input_list = list(map(int, input().split()))\n    fr_dict = list_to_frequency_dictionary(input_list)\n    print(solver(fr_dict, k))", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    t -= 1\n    d = {}\n    sum = 0\n    z = 0\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in range(0, len(d)):\n        if list(d.values())[i] == k:\n            sum += list(d.keys())[i]\n            z = 1\n    if z == 0:\n        print(-1)\n    else:\n        print(sum)", "from collections import Counter\nfor i in range(int(input())):\n    (N, K) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    sum = 0\n    ans = -1\n    for (i, j) in d.items():\n        if j == K:\n            sum = sum + i\n            ans = sum\n    print(ans)", "from collections import Counter\nfor i in range(int(input())):\n    (N, K) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    sum = 0\n    ans = -1\n    for (i, j) in d.items():\n        if j == K:\n            sum = sum + i\n            ans = sum\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    ls.sort()\n    (count, nsum) = (1, -1)\n    if n == 1:\n        print(ls[0])\n    else:\n        for i in range(n - 1):\n            if ls[i] == ls[i + 1]:\n                count += 1\n            else:\n                if count == k:\n                    if nsum == -1:\n                        nsum = 0\n                    nsum += ls[i]\n                count = 1\n        if count == k:\n            if nsum == -1:\n                nsum = 0\n            nsum += ls[n - 1]\n        if nsum == -1:\n            print(-1)\n        else:\n            print(nsum)", "from collections import Counter\nfor i in range(int(input())):\n    (n, k) = tuple(map(int, input().split()))\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    s = 0\n    f = 0\n    for i in d:\n        if d[i] == k:\n            s += i\n            f = 1\n    if f == 0:\n        print(-1)\n    else:\n        print(int(s))", "from collections import Counter\nfor x in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    ans = 0\n    f = 0\n    for xx in c:\n        if c[xx] == k:\n            ans += xx\n            f += 1\n    if f == 0:\n        print(-1)\n    else:\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().lstrip().split()))\n    sum = 0\n    di = dict()\n    Flag = False\n    for i in range(n):\n        if arr[i] in di:\n            di[arr[i]] += 1\n        else:\n            di[arr[i]] = 1\n    for j in di:\n        if di[j] == k:\n            sum += j\n        if di[j] == k and j == 0:\n            Flag = True\n    if sum == 0 and Flag == False:\n        print(-1)\n    elif sum == 0 and Flag == True:\n        print(0)\n    else:\n        print(sum)", "from collections import Counter\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    s = 0\n    if k not in d.values():\n        print(-1)\n        continue\n    for i in d:\n        if d[i] == k:\n            s += i\n    print(s)", "T = int(input())\nfor i in range(0, T):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    li = {}\n    bb = input().split()\n    for j in bb:\n        li[j] = 0\n    for j in bb:\n        li[j] += 1\n    ans = 0\n    doit = 0\n    for j in li:\n        if li[j] == b:\n            ans += int(j)\n            doit += 1\n    if doit == 0:\n        print(-1)\n    else:\n        print(ans)", "T = int(input())\nfor i in range(0, T):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    li = {}\n    bb = input().split()\n    for j in bb:\n        li[j] = 0\n    for j in bb:\n        li[j] += 1\n    ans = 0\n    doit = 0\n    for j in li:\n        if li[j] == b:\n            ans += int(j)\n            doit += 1\n    if doit == 0:\n        print(-1)\n    else:\n        print(ans)", "from collections import Counter\nfor T in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    val = Counter(A)\n    result = 0\n    pin = False\n    for i in val:\n        if val[i] == K:\n            pin = True\n            result += i\n    if pin is False:\n        print(-1)\n    else:\n        print(result)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = Counter(arr)\n    ans = 0\n    flag = False\n    for key in s:\n        if s[key] == k:\n            flag = True\n            ans += key\n    if not flag:\n        print(-1)\n    else:\n        print(ans)", "def solve():\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    m = {i: 0 for i in arr}\n    for i in arr:\n        m[i] += 1\n    ans = 0\n    flag = False\n    for i in m:\n        if m[i] == k:\n            flag = True\n            ans += i\n    if not flag:\n        return -1\n    return ans\ntc = int(input())\nfor t in range(tc):\n    print(solve())", "def solve():\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    m = {i: 0 for i in arr}\n    for i in arr:\n        m[i] += 1\n    ans = 0\n    flag = False\n    for i in m:\n        if m[i] == k:\n            flag = True\n            ans += i\n    if not flag:\n        return -1\n    return ans\ntc = int(input())\nfor t in range(tc):\n    print(solve())", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    for j in l:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    r = []\n    for (keys, values) in d.items():\n        if values == k:\n            r.append(keys)\n    print(-1 if len(r) == 0 else sum(r))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    dic = {}\n    for i in l:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    res = []\n    for (keys, values) in dic.items():\n        if values == k:\n            res.append(keys)\n    if len(res) == 0:\n        print(-1)\n    else:\n        print(sum(res))", "from math import sqrt, ceil, floor, gcd, log2\nimport sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import combinations, groupby\nfrom time import time\nfrom heapq import heappop, heappush, heapify\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    d = dict(Counter(arr))\n    ans = 0\n    flag = 0\n    for (key, val) in d.items():\n        if val == k:\n            flag = 1\n            ans += int(key)\n    if ans == 0 and (not flag):\n        print(-1)\n    else:\n        print(ans)", "test = int(input())\nfor i in range(test):\n    ans = {}\n    (s, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for j in arr:\n        if j not in ans:\n            ans[j] = 1\n        else:\n            ans[j] += 1\n    s1 = 0\n    a = 1\n    for j in ans.items():\n        if j[1] == k:\n            a = 0\n            s1 += j[0]\n    if a == 1:\n        print(-1)\n    else:\n        print(s1)", "test = int(input())\nfor i in range(test):\n    ans = {}\n    (s, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for j in arr:\n        if j not in ans:\n            ans[j] = 1\n        else:\n            ans[j] += 1\n    s1 = 0\n    a = 1\n    for j in ans.items():\n        if j[1] == k:\n            a = 0\n            s1 += j[0]\n    if a == 1:\n        print(-1)\n    else:\n        print(s1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    vals = list(map(int, input().split()))\n    freq = dict()\n    for val in vals:\n        freq[val] = freq.get(val, 0) + 1\n    res = -1\n    for (key, val) in freq.items():\n        if val == k:\n            if res == -1:\n                res = 0\n            res += key\n    print(res)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = Counter(l)\n    sum = 0\n    c = 0\n    for (key, value) in d.items():\n        if k not in d.values():\n            c = 1\n            break\n        if value == k:\n            sum += key\n    if sum == 0 and c == 1:\n        print('-1')\n    else:\n        print(sum)", "from collections import Counter\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    for j in l:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    flag = 1\n    sum1 = 0\n    for (key, value) in d.items():\n        if value == k:\n            sum1 += key\n            flag = 0\n    if flag:\n        print(-1)\n    else:\n        print(sum1)", "from collections import Counter\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    count = 0\n    for i in d.keys():\n        if d[i] == k:\n            count += i\n    if count > 0:\n        print(count)\n    elif 0 in d.keys() and d[0] == k:\n        print(0)\n    else:\n        print(-1)", "from collections import Counter\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    count = 0\n    for i in d.keys():\n        if d[i] == k:\n            count += i\n    if count > 0:\n        print(count)\n    elif 0 in d.keys() and d[0] == k:\n        print(0)\n    else:\n        print(-1)", "from collections import Counter\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    count = 0\n    for i in d.keys():\n        if d[i] == k:\n            count += i\n    if count > 0:\n        print(count)\n    elif 0 in d.keys() and d[0] == k:\n        print(0)\n    else:\n        print(-1)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    ip = input().split()\n    (n, k) = [int(x) for x in ip]\n    ip = input().split()\n    a = [int(x) for x in ip]\n    cnt = {}\n    for x in a:\n        if x in cnt:\n            cnt[x] += 1\n        else:\n            cnt[x] = 1\n    s = 0\n    flg = 1\n    for i in cnt:\n        if cnt[i] == k:\n            s += i\n            flg = 0\n    if flg == 1:\n        print(-1)\n    else:\n        print(s)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    ip = input().split()\n    (n, k) = [int(x) for x in ip]\n    ip = input().split()\n    a = [int(x) for x in ip]\n    cnt = {}\n    for x in a:\n        if x in cnt:\n            cnt[x] += 1\n        else:\n            cnt[x] = 1\n    s = 0\n    flg = 1\n    for i in cnt:\n        if cnt[i] == k:\n            s += i\n            flg = 0\n    if flg == 1:\n        print(-1)\n    else:\n        print(s)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    s = 0\n    k = 1\n    for i in d:\n        if d[i] == a:\n            s += i\n            k = 2\n    if k == 1:\n        print(-1)\n        continue\n    print(s)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    s = 0\n    k = 1\n    for i in d:\n        if d[i] == a:\n            s += i\n            k = 2\n    if k == 1:\n        print(-1)\n        continue\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    ans = 0\n    f = 0\n    for (i, j) in d.items():\n        if j == k:\n            ans += i\n            f = 1\n    if f == 0:\n        print(-1)\n    else:\n        print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    D = Counter(A)\n    ans = 0\n    found = False\n    for d in D:\n        if D[d] == K:\n            ans += d\n            found = True\n    if found:\n        print(ans)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    s = 0\n    k = 1\n    for i in d:\n        if d[i] == a:\n            s += i\n            k = 2\n    if k == 1:\n        print(-1)\n        continue\n    print(s)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    l = [int(e) for e in input().split()]\n    d = {}\n    for element in l:\n        if element in d.keys():\n            d[element] += 1\n        else:\n            d[element] = 1\n    total = 0\n    check = False\n    for key in d.keys():\n        if d[key] == k:\n            total += key\n            check = True\n    if check:\n        print(total)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    counts = {}\n    list2 = []\n    for i in list1:\n        counts[i] = counts.get(i, 0) + 1\n    for i in counts:\n        if counts[i] == k:\n            list2.append(i)\n    try:\n        x = list2[0]\n        print(sum(list2))\n    except:\n        print(-1)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    hashmap = Counter(a)\n    f = False\n    ans = 0\n    for i in hashmap:\n        if hashmap[i] == k:\n            ans += i\n            f = True\n    if f:\n        print(ans)\n    else:\n        print(-1)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    hashmap = Counter(a)\n    f = False\n    ans = 0\n    for i in hashmap:\n        if hashmap[i] == k:\n            ans += i\n            f = True\n    if f:\n        print(ans)\n    else:\n        print(-1)", "import sys\ninput = sys.stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\nfrom collections import Counter\nfailure = -1\n\ndef solve(*args):\n    (n, k, a) = args\n    c = Counter(a)\n    ans = [x for x in c if c[x] == k]\n    return sum(ans) if len(ans) > 0 else failure\n\ndef do_codechef():\n    for t in rii():\n        (n, k) = mii()\n        a = lmii()\n        print(solve(n, k, a))\ndo_codechef()\nexit()", "def ans(arr, k):\n    x = set(arr)\n    dict = {}\n    for y in x:\n        dict[y] = 0\n    for y in arr:\n        dict[y] += 1\n    summation = False\n    for y in dict.keys():\n        if dict[y] == k:\n            if summation is False:\n                summation = 0\n            summation += y\n    if summation is False:\n        return -1\n    return summation\ntest_cases = int(input())\nwhile test_cases != 0:\n    data = list(map(int, input().split()))\n    data2 = list(map(int, input().split()))\n    print(ans(data2, data[1]))\n    test_cases -= 1"]