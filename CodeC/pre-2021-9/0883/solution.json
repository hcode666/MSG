["t = int(input())\nfor i in range(t):\n    s = input()\n    c = 0\n    j = 0\n    while j < len(s) - 1:\n        n = s[j]\n        k = j + 1\n        while k < len(s) and s[k] == n:\n            k += 1\n        l = k - j\n        if j != 0 and k != len(s) and (s[j - 1] == s[k]):\n            c += 1\n        c += l * (l - 1) // 2\n        j = k\n    print(c)", "t = int(input())\nfor i in range(t):\n    s = input()\n    c = 0\n    j = 0\n    while j < len(s) - 1:\n        n = s[j]\n        k = j + 1\n        while k < len(s) and s[k] == n:\n            k += 1\n        l = k - j\n        if j != 0 and k != len(s) and (s[j - 1] == s[k]):\n            c += 1\n        c += l * (l - 1) // 2\n        j = k\n    print(c)", "for _ in range(int(input())):\n    s = input()\n    count = 0\n    i = 0\n    while i < len(s) - 1:\n        ch = s[i]\n        j = i + 1\n        while j < len(s) and s[j] == ch:\n            j += 1\n        l = j - i\n        if i != 0 and j != len(s) and (s[i - 1] == s[j]):\n            count += 1\n        count += l * (l - 1) // 2\n        i = j\n    print(count)", "for _ in range(int(input())):\n    s = input()\n    count = 0\n    i = 0\n    while i < len(s) - 1:\n        ch = s[i]\n        j = i + 1\n        while j < len(s) and s[j] == ch:\n            j += 1\n        l = j - i\n        if i != 0 and j != len(s) and (s[i - 1] == s[j]):\n            count += 1\n        count += l * (l - 1) // 2\n        i = j\n    print(count)", "for _ in range(int(input())):\n    s = input()\n    count = 0\n    i = 0\n    while i < len(s) - 1:\n        ch = s[i]\n        j = i + 1\n        while j < len(s) and s[j] == ch:\n            j += 1\n        l = j - i\n        if i != 0 and j != len(s) and (s[i - 1] == s[j]):\n            count += 1\n        count += l * (l - 1) // 2\n        i = j\n    print(count)", "for _ in range(int(input())):\n    a = input()\n    if len(a) == 1:\n        print(0)\n        continue\n    comp = 0\n    cont = 1\n    ans = 0\n    for i in range(1, len(a)):\n        if a[i] == a[comp]:\n            cont += 1\n            if i == len(a) - 1:\n                ans += cont * (cont - 1) // 2\n        else:\n            ans += cont * (cont - 1) // 2\n            if comp != 0 and a[comp - 1] == a[i]:\n                ans += 1\n            comp = i\n            cont = 1\n    print(ans)", "e = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    s = input()\n    ans = 0\n    n = len(s)\n    i = 1\n    m = 1\n    while i < n and s[i] == s[i - 1]:\n        m += 1\n        i += 1\n    ans += m * (m - 1) // 2\n    while i < n:\n        x = s[i - 1]\n        i += 1\n        m = 1\n        while i < n and s[i] == s[i - 1]:\n            m += 1\n            i += 1\n        ans += m * (m - 1) // 2\n        if i != n and s[i] == x:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    if len(s) >= 2:\n        i = 0\n        ans = 0\n        c = 0\n        while i < len(s) - 1:\n            if s[i] == s[i + 1]:\n                i += 1\n                ans += 1\n                c += 1\n            elif i < len(s) - 2:\n                ans += c * (c - 1) // 2\n                c = 0\n                temp = s[i]\n                seti = set()\n                seti.add(s[i + 1])\n                count = 1\n                for j in range(i + 2, len(s)):\n                    if s[j] not in seti:\n                        if s[j] == temp:\n                            ans += 1\n                        break\n                    else:\n                        count += 1\n                i = j - 1\n                if s[i] != s[i + 1]:\n                    ans += count * (count - 1) // 2\n                else:\n                    ans += count * (count - 1) // 2 - 1\n                i = j - 1\n            else:\n                ans += c * (c - 1) // 2\n                i += 1\n        if len(set(s)) == 1:\n            ans += c * (c - 1) // 2\n        print(ans)\n    else:\n        print(0)", "def fun(n):\n    return int(n * (n + 1) / 2)\nt = int(input())\nwhile t > 0:\n    s = input()\n    ns = s[0]\n    n = len(s)\n    count = 0\n    inc = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            inc = inc + 1\n        else:\n            count = count + fun(inc)\n            ns = ns + s[i]\n            inc = 0\n    count = count + fun(inc)\n    for i in range(2, len(ns)):\n        if ns[i] == ns[i - 2]:\n            count = count + 1\n    print(count)\n    t = t - 1", "for t in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = 0\n    temp = []\n    l = 0\n    count = 1\n    current = s[0]\n    start = 0\n    end = 0\n    i = 1\n    while i < n:\n        if s[i] == current:\n            count += 1\n            end += 1\n        else:\n            if count > 0:\n                temp.append([start, end])\n                l += 1\n            count = 1\n            current = s[i]\n            start = i\n            end = i\n        i += 1\n    if count > 0:\n        temp.append([start, end])\n        l += 1\n    for i in range(l):\n        le = temp[i][1] - temp[i][0] + 1\n        if le >= 2:\n            val = le * (le - 1) // 2\n            ans += val\n        x = temp[i][0] - 1\n        y = temp[i][1] + 1\n        if x >= 0 and y < n and (s[x] == s[y]):\n            ans += 1\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    S = input()\n    GoodStrings = 0\n    (CurrentChainLetter, CurrentChainLength) = (S[0], 1)\n    LastChainLetter = None\n    for i in range(1, len(S)):\n        if S[i] == CurrentChainLetter:\n            CurrentChainLength += 1\n        else:\n            GoodStrings += int(0.5 * CurrentChainLength * (CurrentChainLength - 1))\n            if S[i] == LastChainLetter:\n                GoodStrings += 1\n            (LastChainLetter, CurrentChainLetter) = (CurrentChainLetter, S[i])\n            CurrentChainLength = 1\n    GoodStrings += int(0.5 * CurrentChainLength * (CurrentChainLength - 1))\n    print(GoodStrings)", "def nC2(num):\n    if num >= 2:\n        return int(num * (num - 1) / 2)\n    else:\n        return 0\nt = int(input())\nfor x in range(t):\n    string = input()\n    n = len(string)\n    goodsubs = 0\n    dupcountr = 0\n    dupindexL = 0\n    dupindexR = 0\n    tmpvar = string[0]\n    for i in range(n):\n        if string[i] == tmpvar:\n            dupcountr += 1\n        else:\n            dupindexR = i - 1\n            if dupcountr >= 2:\n                if (dupindexL > 0 and dupindexR < n - 1) and string[dupindexL - 1] == string[dupindexR + 1]:\n                    goodsubs += 1 + nC2(dupcountr)\n                else:\n                    goodsubs += nC2(dupcountr)\n            tmpvar = string[i]\n            dupcountr = 1\n            dupindexL = dupindexR = i\n        if i < n - 2 and (string[i] == string[i + 2] and string[i] != string[i + 1]):\n            goodsubs += 1\n    dupindexR = n - 1\n    if dupcountr >= 2:\n        goodsubs += nC2(dupcountr)\n    print(goodsubs)", "t = int(input())\nfor i in range(t):\n    a = input()\n    c = 0\n    k = 1\n    s = a[0]\n    n = 0\n    while k < len(a):\n        if a[k - 1] == a[k]:\n            n += 1\n        else:\n            c += n * (n + 1) // 2\n            n = 0\n            if a[k] == s:\n                c += 1\n                s = a[k - 1]\n            if a[k] != s:\n                s = a[k - 1]\n        k += 1\n    if n != 0:\n        c += n * (n + 1) // 2\n    print(c)", "import math\nt = int(input())\nfor i in range(t):\n    n = input()\n    count = 0\n    if len(n) <= 1:\n        print(0)\n        continue\n    else:\n        i = 0\n        j = 1\n        flag = 0\n        if n[i] == n[j]:\n            count += 1\n        i += 1\n        j += 1\n        while j < len(n):\n            if n[i - 1] == n[j] and n[i] != n[j]:\n                count += 1\n                i += 1\n                j += 1\n            elif n[i] == n[j]:\n                count += 1\n                if i != 0:\n                    if flag == 0:\n                        k = i - 1\n                        flag = 1\n                i += 1\n                j += 1\n            else:\n                if flag == 1:\n                    if n[k] == n[j]:\n                        count += 1\n                    flag = 0\n                i += 1\n                j += 1\n        j = 1\n        count1 = 1\n        while j < len(n):\n            if n[j] == n[j - 1]:\n                count1 += 1\n            else:\n                if count1 > 2:\n                    x = math.factorial(count1) / (math.factorial(count1 - 2) * math.factorial(2))\n                    count += int(x) - count1 + 1\n                count1 = 1\n            j += 1\n        if count1 > 2:\n            x = math.factorial(count1) / (math.factorial(count1 - 2) * math.factorial(2))\n            count += int(x) - count1 + 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    a = input()\n    if len(a) == 1:\n        print(0)\n        continue\n    b = []\n    c = []\n    z = a[0]\n    count = 1\n    for j in range(1, len(a)):\n        if a[j] == z:\n            count += 1\n        else:\n            b.append(count)\n            c.append(z)\n            z = a[j]\n            count = 1\n    b.append(count)\n    c.append(z)\n    ans = 0\n    for j in range(len(b)):\n        if b[j] == 2:\n            ans += 1\n        elif b[j] > 2:\n            ans += b[j] * (b[j] - 1) // 2\n    for j in range(len(b) - 2):\n        if c[j] == c[j + 2]:\n            ans += 1\n    print(ans)", "for t in range(int(input())):\n    s = input()\n    size = len(s)\n    i = j = 0\n    ans = 0\n    while i < size:\n        while j < size and s[i] == s[j]:\n            j += 1\n        if j - 1 != i:\n            n = j - i\n            ans += n * (n - 1) // 2\n        if j - i >= 1 and j < size and (i - 1 > -1) and (s[i - 1] == s[j]):\n            ans += 1\n        i = j\n    print(ans)", "t = int(input())\nfor test in range(t):\n    s = input()\n    if len(s) == 1:\n        print(0)\n        continue\n    if len(s) == 2 and s[0] == s[1]:\n        print(1)\n        continue\n    count = 0\n    first = s[0]\n    current = s[1]\n    start = 0\n    for i in range(2, len(s)):\n        c = s[i]\n        if c == first and current == first:\n            continue\n        if c == current:\n            continue\n        if c == first and current != first:\n            l = i - start - 1\n            count += l * (l - 1) // 2\n            count += 1\n            start = i - 1\n            first = current\n            current = c\n            continue\n        if c != first and current == first:\n            l = i - start\n            count += l * (l - 1) // 2\n            current = c\n            start = i - 1\n            continue\n        if c != first and current != first:\n            l = i - start - 1\n            count += l * (l - 1) // 2\n            first = current\n            current = c\n            start = i - 1\n            continue\n    if first != current:\n        l = len(s) - 1 - start\n    else:\n        l = len(s) - start\n    count += l * (l - 1) // 2\n    print(count)", "t = int(input())\nctr = 0\nwhile t > ctr:\n    x = input()\n    s = ''\n    for i in range(len(x) - 1):\n        if x[i] != x[i + 1]:\n            s += x[i:i + 1] + ' '\n        else:\n            s += x[i:i + 1]\n    if len(x) > 1 and x[-1] != x[-2]:\n        s = s + ' ' + x[-1:]\n    else:\n        s += x[-1:]\n    s = s.split()\n    ans = 0\n    for i in range(len(s)):\n        if 1 <= i <= len(s) - 2:\n            if s[i - 1][0] == s[i + 1][0]:\n                ans += 1\n        if len(s[i]) > 1:\n            x = len(s[i])\n            ans += x * (x - 1) / 2\n    print(int(ans))\n    ctr += 1", "for _ in range(int(input().strip())):\n    s = input().strip()\n    s += '*'\n    cnt = 1\n    ans = 0\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            cnt += 1\n        else:\n            ans += cnt * (cnt - 1) // 2\n            if i != cnt and s[i - cnt - 1] == s[i]:\n                ans += 1\n            cnt = 1\n    print(ans)", "for _ in range(int(input())):\n    a = input()\n    if len(a) == 2:\n        if a[0] == a[1]:\n            print(1)\n        else:\n            print(0)\n    elif len(a) < 2:\n        print(0)\n    else:\n        i = 1\n        b = a[0]\n        c = []\n        j = 0\n        a += '$'\n        while i < len(a):\n            if a[i] != b:\n                c.append([j, i - 1])\n                b = a[i]\n                j = i\n            i += 1\n        count = 0\n        for j in c:\n            if j[0] > 0 and a[j[0] - 1] == a[j[1] + 1] and (j[1] + 1 < len(a)):\n                count += 1\n            count += (j[1] - j[0]) * (j[1] - j[0] + 1) // 2\n        print(count)", "t = int(input())\nfor z in range(t):\n    a = list(input())\n    count = 0\n    s = 0\n    p = []\n    a.append('$')\n    for i in range(len(a) - 1):\n        if a[i] == a[i + 1] and s != 1:\n            p.append(i)\n            c = 1\n            s = 1\n        elif a[i] != a[i + 1] and s == 1:\n            p.append(i)\n            s = 0\n    for i in range(0, len(p), 2):\n        k = p[i + 1] - p[i] + 1\n        count += k * (k - 1) // 2\n        if p[i + 1] + 1 <= len(a) and p[i] - 1 >= 0 and (a[p[i + 1] + 1] == a[p[i] - 1]):\n            count += 1\n    for i in range(len(a) - 2):\n        if a[i] == a[i + 2] and a[i] != a[i + 1]:\n            count += 1\n    print(count)", "def sol(a, i, j):\n    mid = int((i + j) / 2)\n    if j - i == 0:\n        return 0\n    elif j - i == 1:\n        if a[i] == a[j]:\n            return 1\n        else:\n            return 0\n    else:\n        ans = 0\n        pr = 1\n        pl = 1\n        ar = a[mid]\n        al = a[mid + 1]\n        lx = mid\n        ly = mid + 1\n        for x in range(mid - 1, i - 1, -1):\n            if a[x] == ar:\n                pr += 1\n                lx = x\n            else:\n                break\n        for x in range(mid + 2, j + 1):\n            if a[x] == al:\n                pl += 1\n                ly = x\n            else:\n                break\n        if ar == al:\n            ans = pl * pr\n            if lx != i and ly != j:\n                if a[lx - 1] == a[ly + 1]:\n                    ans += 1\n        else:\n            if lx != i:\n                if a[lx - 1] == al:\n                    ans += 1\n            if ly != j:\n                if a[ly + 1] == ar:\n                    ans += 1\n        return ans + sol(a, i, mid) + sol(a, mid + 1, j)\nt = int(input())\nfor r in range(t):\n    a = input()\n    n = len(a)\n    ans = sol(a, 0, n - 1)\n    print(ans)", "def main():\n    t = int(input())\n    for T in range(t):\n        st = input()\n        count = 0\n        ctemp = 1\n        ci = 0\n        ce = 0\n        for i in range(1, len(st)):\n            if st[i] == st[ci]:\n                ce = i\n                continue\n            else:\n                ctemp = ce - ci + 1\n                count += int(ctemp * (ctemp - 1) / 2)\n                ctemp = 1\n                if ci - 1 >= 0 and ce + 1 < len(st):\n                    if st[ci - 1] == st[ce + 1]:\n                        count += 1\n                ci = i\n                ce = i\n        ctemp = ce - ci + 1\n        count += int(ctemp * (ctemp - 1) / 2)\n        print(count)\nmain()", "def minimize(arr):\n    s = arr[0]\n    f = [1]\n    for i in arr[1:]:\n        if i == s[-1]:\n            f[-1] += 1\n        else:\n            s += i\n            f.append(1)\n    return tuple((s, f))\nt = int(input())\nwhile t > 0:\n    t -= 1\n    a = input().strip()\n    (s, f) = minimize(a)\n    val = int(sum([(x - 1) * x / 2 for x in f if x > 1]))\n    for i in range(len(s)):\n        if i + 2 < len(s) and s[i + 2] == s[i]:\n            val += 1\n    print(val)", "for ppp in range(int(input())):\n    arr = input()\n    total = 0\n    lenght = len(arr)\n    for i in range(0, lenght - 1):\n        if arr[i] == arr[i + 1]:\n            total += 1\n    i = 0\n    while i < lenght - 2:\n        first = arr[i]\n        second = arr[i + 1]\n        third = arr[i + 2]\n        if first == second and third == first:\n            k = 0\n            for j in range(i + 3, lenght):\n                if arr[j] == first:\n                    k += 1\n                else:\n                    break\n            i = i + 2 + k - 1\n            tot = 3 + k - 2\n            total = total + tot * (tot + 1) // 2\n        elif first != second and second == third:\n            k = 0\n            ans = 0\n            for j in range(i + 3, lenght):\n                if arr[j] == third:\n                    k += 1\n                elif arr[j] == first:\n                    ans = 1\n                    break\n                else:\n                    break\n            if ans == 1:\n                i = i + 2 + k\n                tot = k\n                total = total + k * (k + 1) // 2\n                total += 1\n            else:\n                i = i + 2 + k\n                total = total + k * (k + 1) // 2\n        elif first == second and third != first:\n            i += 1\n        elif first != second and first == third:\n            total += 1\n            i += 1\n        elif first != second and second != third:\n            i = i + 1\n    print(total)", "import functools\nimport operator as op\n\ndef ncr(n, r):\n    if n < r:\n        return 0\n    r = min(r, n - r)\n    if r == 0:\n        return 1\n    numer = functools.reduce(op.mul, range(n, n - r, -1))\n    denom = functools.reduce(op.mul, range(1, r + 1))\n    return numer // denom\nt = int(input())\nfor test in range(t):\n    array = input()\n    ans = 0\n    check = [array[0]]\n    freq = [1]\n    cur = array[0]\n    flip = 0\n    for i in array[1:]:\n        if i != cur:\n            cur = i\n            flip += 1\n        if flip == 2:\n            if not i in check:\n                ans += ncr(freq[0], 2)\n                check = [check[1], i]\n                freq = [freq[1], 1]\n                cur = i\n                flip = 1\n            else:\n                freq[check.index(i)] += 1\n                ans += 1 + ncr(freq[0] - 1, 2)\n                check = [check[1], i]\n                freq = [freq[1], 1]\n                cur = i\n                flip = 1\n        elif not i in check:\n            check.append(i)\n            freq.append(1)\n        else:\n            freq[check.index(i)] += 1\n    if flip != 2:\n        if len(check) == 2:\n            ans += ncr(freq[0], 2) + ncr(freq[1], 2)\n        elif len(check) == 1:\n            ans += ncr(freq[0], 2)\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    d = ''\n    c = s[0]\n    cc = 0\n    count = 0\n    for i in range(len(s) + 1):\n        if i < len(s) and s[i] == c:\n            cc += 1\n        elif i < len(s) and s[i] != c:\n            d += c\n            c = s[i]\n            count += cc * (cc - 1) // 2\n            cc = 1\n        elif i == len(s):\n            d += c\n            count += cc * (cc - 1) // 2\n    for i in range(len(d) - 2):\n        if d[i] == d[i + 2]:\n            count += 1\n    print(count)", "for jjjj in range(int(input())):\n    s = input()\n    cnt = 0\n    l = len(s)\n    for i in range(0, l - 1):\n        if s[i] == s[i + 1]:\n            cnt += 1\n    i = 0\n    while i < l - 2:\n        c = s[i]\n        d = s[i + 1]\n        e = s[i + 2]\n        if c == d and e != c:\n            i += 1\n        elif c == d and e == c:\n            k = 0\n            for j in range(i + 3, l):\n                if s[j] == c:\n                    k += 1\n                else:\n                    break\n            tot = 3 + k - 2\n            cnt = cnt + tot * (tot + 1) // 2\n            i = i + 2 + k - 1\n        elif c != d and c == e:\n            cnt += 1\n            i += 1\n        elif c != d and d == e:\n            k = 0\n            ans = 0\n            for j in range(i + 3, l):\n                if s[j] == e:\n                    k += 1\n                elif s[j] == c:\n                    ans = 1\n                    break\n                else:\n                    break\n            if ans == 1:\n                tot = k\n                cnt = cnt + k * (k + 1) // 2\n                i = i + 2 + k\n                cnt += 1\n            else:\n                cnt = cnt + k * (k + 1) // 2\n                i = i + 2 + k\n        elif c != d and d != e:\n            i = i + 1\n    print(cnt)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    s = input()\n    i = 0\n    ans = 0\n    ln = len(s)\n    while i < ln:\n        l = i\n        if i < ln - 1:\n            while True:\n                if i >= ln - 1 or not s[i] == s[i + 1]:\n                    break\n                i += 1\n        u = i\n        d = u - l + 1\n        ans += (d - 1) * d // 2\n        if l > 0 and u < ln - 1:\n            if s[l - 1] == s[u + 1]:\n                ans += 1\n        i = i + 1\n    print(ans)", "def count_substrings(s):\n    n = len(s)\n    sub = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            sub += 1\n    for i in range(n - 2):\n        l = s[i]\n        chars = set([])\n        for j in range(i + 1, n):\n            if s[j] == l and len(chars) == 1:\n                sub += 1\n            chars.add(s[j])\n            if len(chars) > 1:\n                break\n    return sub\n\ndef count_substrings_linear(s):\n    n = len(s)\n    sub = 0\n    (alpha, c) = (s[0], 1)\n    reduced_s = [alpha]\n    for i in range(1, n):\n        if s[i] == alpha:\n            c += 1\n        else:\n            sub += c * (c - 1) // 2\n            c = 1\n            alpha = s[i]\n            reduced_s.append(alpha)\n    sub += c * (c - 1) // 2\n    for i in range(1, len(reduced_s) - 1):\n        if reduced_s[i - 1] == reduced_s[i + 1]:\n            sub += 1\n    return sub\nt = int(input())\nwhile t:\n    s = input()\n    sub = count_substrings_linear(s)\n    print(sub)\n    t -= 1", "def func():\n    a = input()\n    sum_ = 0\n    prev = a[0]\n    n = 1\n    start = 0\n    end = 0\n    for i in a[1:]:\n        if i == prev:\n            n += 1\n        else:\n            sum_ += n * (n - 1) // 2\n            if a[start] == i:\n                sum_ += 1\n            start = end\n            prev = i\n            n = 1\n        end += 1\n    sum_ += n * (n - 1) // 2\n    print(sum_)\nt = int(input())\nfor i in range(t):\n    func()", "t = int(input())\nwhile t:\n    t -= 1\n    a = input()\n    i = 0\n    n = len(a)\n    ans = 0\n    i = 0\n    while i < n - 1:\n        j = i + 1\n        while j < n and a[i] == a[j]:\n            j += 1\n        diff = j - i\n        ans += diff * (diff - 1) // 2\n        i = j\n    b = [a[0]]\n    i = 1\n    while i < n:\n        if b[-1] != a[i]:\n            b.append(a[i])\n        i += 1\n    m = len(b)\n    for i in range(m - 2):\n        if b[i] == b[i + 2]:\n            ans += 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    a = input()\n    if len(a) == 1:\n        print(0)\n        continue\n    ans = 0\n    prev = a[0]\n    op = a[0]\n    ctr = 0\n    for i in range(1, len(a)):\n        curr = a[i]\n        if prev == curr:\n            ctr += 1\n        else:\n            ans += ctr * (ctr + 1) // 2\n            ctr = 0\n            if curr == op:\n                ans += 1\n            op = prev\n        prev = curr\n    ans += ctr * (ctr + 1) // 2\n    print(ans)", "for i in range(int(input())):\n    s = str(input())\n    ip = [[] for j in range(26)]\n    count = 0\n    for j in range(len(s)):\n        ip[ord(s[j]) - 97].append(j)\n    for j in ip:\n        if len(j) < 2:\n            continue\n        else:\n            for k in range(len(j) - 1):\n                a = j[k]\n                b = j[k + 1]\n                if b == a + 1:\n                    pass\n                else:\n                    br = 0\n                    m = s[a + 1]\n                    for l in range(a + 1, b):\n                        if s[l] != m:\n                            br = 1\n                            break\n                    if br == 0:\n                        count += 1\n    count2 = 0\n    for j in range(len(s) - 1):\n        if s[j] == s[j + 1]:\n            count2 += 1\n        else:\n            n = count2 + 1\n            count += n * (n - 1) // 2\n            count2 = 0\n    n = count2 + 1\n    count += n * (n - 1) // 2\n    count2 = 0\n    print(count)", "for _ in range(int(input())):\n    Str = input()\n    Str += 'M'\n    Table = []\n    Length = len(Str)\n    Char = Str[0]\n    Dist = 1\n    st = 0\n    end = 0\n    for i in range(1, Length):\n        if Str[i] != Char:\n            Table.append(tuple([st, end]))\n            st = i\n            end = i\n            Dist = 1\n            Char = Str[i]\n        else:\n            Dist += 1\n            end = i\n    Ans = 0\n    num = 0\n    for (s, e) in Table:\n        num = e - s\n        Ans += int(num * (num + 1) / 2)\n        Left = s - 1\n        Right = e + 1\n        if Left >= 0 and Right <= Length - 2:\n            if Str[Left] == Str[Right]:\n                Ans += 1\n    print(Ans)", "from string import ascii_lowercase as lower\ncases = int(input())\n\ndef same(s):\n    f = s[0]\n    for char in s:\n        if char != f:\n            return False\n    return True\nfor _ in range(cases):\n    string = '@' + input() + '#'\n    if len(string) == 2:\n        print(0)\n        continue\n    count = 0\n    same_since = 1\n    prev = string[1]\n    for index in range(1, len(string)):\n        if string[index] == prev:\n            continue\n        if string[index] == string[same_since - 1]:\n            count += 1\n        if index > same_since + 1:\n            count += (index - same_since) * (index - same_since - 1) / 2\n        same_since = index\n        prev = string[index]\n    print(int(count))", "from string import ascii_lowercase as lower\ncases = int(input())\n\ndef same(s):\n    f = s[0]\n    for char in s:\n        if char != f:\n            return False\n    return True\nfor _ in range(cases):\n    string = '@' + input() + '#'\n    if len(string) == 2:\n        print(0)\n        continue\n    count = 0\n    same_since = 1\n    prev = string[1]\n    for index in range(1, len(string)):\n        if string[index] == prev:\n            continue\n        if string[index] == string[same_since - 1]:\n            count += 1\n        if index > same_since + 1:\n            count += (index - same_since) * (index - same_since - 1) / 2\n        same_since = index\n        prev = string[index]\n    print(int(count))", "for _ in range(int(input())):\n    s = input()\n    l = len(s)\n    c = 0\n    i = 0\n    while i < l - 1:\n        if i + 1 < l and s[i] == s[i + 1]:\n            j = i\n            while i + 1 < l and s[i + 1] == s[i]:\n                i += 1\n            k = i - j\n            c += k * (k + 1) / 2\n            if j != 0 and i + 1 < l and (s[j - 1] == s[i + 1]):\n                c += 1\n        elif i != 0 and i + 1 < l and (s[i - 1] == s[i + 1]):\n            c += 1\n            i += 1\n        else:\n            i += 1\n    print(int(c))", "for _ in range(int(input().strip())):\n    s = input().strip()\n    total = 0\n    first = 0\n    last = 0\n    c = 1\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            last = i\n            c += 1\n        else:\n            if first != 0:\n                if s[i] == s[first - 1]:\n                    total += 1\n            if c > 1:\n                total += c * (c - 1) / 2\n            first = i\n            last = i\n            c = 1\n    if first != last:\n        total += c * (c - 1) / 2\n    print(int(total))", "T = int(input())\nfor _ in range(T):\n    s = input()\n    goodStrings = 0\n    lastChainLetter = None\n    (currentChainLetter, currentChainLength) = (s[0], 1)\n    for i in range(1, len(s)):\n        if s[i] == currentChainLetter:\n            currentChainLength += 1\n            continue\n        else:\n            goodStrings += int(0.5 * (currentChainLength - 1) * (currentChainLength - 1 + 1))\n            if s[i] == lastChainLetter:\n                goodStrings += 1\n            (lastChainLetter, currentChainLetter) = (currentChainLetter, s[i])\n            currentChainLength = 1\n    goodStrings += int(0.5 * (currentChainLength - 1) * (currentChainLength - 1 + 1))\n    print(goodStrings)", "for t in range(int(input())):\n    s = input().strip()\n    n = len(s)\n    ans = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n and s[j] == s[i]:\n            j += 1\n        x = j - i\n        if x >= 2:\n            ans += x * (x - 1) // 2\n        if i > 0 and j < n and (s[i - 1] == s[j]):\n            ans += 1\n        i = j\n    print(ans)", "def func(A):\n    temp = A[0]\n    cnt = 1\n    ans = 0\n    prev = ''\n    for i in range(1, len(A)):\n        if temp == A[i]:\n            cnt += 1\n        else:\n            if prev != '':\n                if A[i] == prev:\n                    ans += 1\n            prev = temp\n            temp = A[i]\n            ans += int(cnt * (cnt - 1) / 2)\n            cnt = 1\n    ans += int(cnt * (cnt - 1) / 2)\n    print(ans)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        A = input()\n        func(A)\nmain()", "for _ in range(int(input())):\n    a = input().strip()\n    ans = 0\n    block = [[a[0], 1]]\n    for i in range(1, len(a)):\n        if a[i] == a[i - 1]:\n            block[-1][-1] += 1\n            ans += 1\n        else:\n            block.append([a[i], 1])\n    k = len(block)\n    for i in range(k):\n        if block[i][-1] > 2:\n            n = block[i][-1]\n            ans += (n - 2) * (n - 1) // 2\n        if i <= k - 3 and block[i][0] == block[i + 2][0]:\n            ans += 1\n    print(ans)"]