["for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    st = input()\n    a = st.count('a')\n    b = st.count('b')\n    c = 0\n    ca = 0\n    for i in range(n):\n        if st[i] == 'a':\n            ca += 1\n        if st[i] == 'b':\n            c += ca\n    print(a * b * (k * (k - 1) // 2) + c * k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    st = input()\n    a = st.count('a')\n    b = st.count('b')\n    c = 0\n    ca = 0\n    for i in range(n):\n        if st[i] == 'a':\n            ca += 1\n        if st[i] == 'b':\n            c += ca\n    print(a * b * (k * (k - 1) // 2) + c * k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    st = input()\n    a = st.count('a')\n    b = st.count('b')\n    c = 0\n    ca = 0\n    for i in range(n):\n        if st[i] == 'a':\n            ca += 1\n        if st[i] == 'b':\n            c += ca\n    print(a * b * (k * (k - 1) // 2) + c * k)", "def solve():\n    (n, k) = map(int, input().split())\n    string = input()\n    c_a = c_b = ab = 0\n    for i in string:\n        if i == 'a':\n            c_a += 1\n        elif i == 'b':\n            c_b += 1\n            ab += c_a\n    print(ab * k + k * (k - 1) * c_a * c_b // 2)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    string = input()\n    c_a = c_b = ab = 0\n    for i in string:\n        if i == 'a':\n            c_a += 1\n        elif i == 'b':\n            c_b += 1\n            ab += c_a\n    res = ab * k\n    res += k * (k - 1) * c_a * c_b // 2\n    print(res)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    string = input()\n    c_a = c_b = ab = 0\n    for i in string:\n        if i == 'a':\n            c_a += 1\n        elif i == 'b':\n            c_b += 1\n            ab += c_a\n    final = ab * k\n    final += k * (k - 1) * c_a * c_b // 2\n    print(final)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    string = input()\n    a = 0\n    b = 0\n    ab = 0\n    for index in range(n):\n        if string[index] == 'a':\n            a += 1\n        elif string[index] == 'b':\n            b += 1\n            ab += a\n    difference = a * b\n    startTerm = ab\n    endTerm = startTerm + (k - 1) * difference\n    print(k * (startTerm + endTerm) // 2)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    string = input()\n    a = 0\n    b = 0\n    ab = 0\n    for index in range(n):\n        if string[index] == 'a':\n            a += 1\n        elif string[index] == 'b':\n            b += 1\n            ab += a\n    difference = a * b\n    startTerm = ab\n    endTerm = startTerm + (k - 1) * difference\n    print(k * (startTerm + endTerm) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    string = input()\n    counta = 0\n    countb = 0\n    countab = 0\n    for index in range(n):\n        if string[index] == 'a':\n            counta += 1\n        elif string[index] == 'b':\n            countb += 1\n            countab += counta\n    difference = counta * countb\n    startTerm = countab\n    endTerm = startTerm + (k - 1) * difference\n    print(k * (startTerm + endTerm) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    string = input()\n    counta = 0\n    countb = 0\n    countab = 0\n    for index in range(n):\n        if string[index] == 'a':\n            counta += 1\n        elif string[index] == 'b':\n            countb += 1\n            countab += counta\n    difference = counta * countb\n    startTerm = countab\n    endTerm = startTerm + (k - 1) * difference\n    print(k * (startTerm + endTerm) // 2)", "def ti():\n    return tuple(map(int, input().split()))\n\ndef li():\n    return list(map(int, input().split()))\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    (n, k) = li()\n    s = ip()\n    a = b = x = 0\n    for i in range(n):\n        if s[i] == 'a':\n            a += 1\n        elif s[i] == 'b':\n            b += 1\n            x += a\n    print(x * k + k * (k - 1) // 2 * a * b)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    L = list(input())\n    a = L.count('a')\n    b = L.count('b')\n    A = [0] * a\n    i = 0\n    j = 0\n    countb = 0\n    while i < a:\n        if L[j] == 'a':\n            A[i] = b - countb\n            i += 1\n        elif L[j] == 'b':\n            countb += 1\n        j += 1\n    s = sum(A)\n    ans = k * s\n    ans += k * (k - 1) // 2 * b * a\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    c1 = 0\n    c2 = 0\n    c3 = 0\n    for j in range(n):\n        if s[j] == 'a':\n            c1 += 1\n        elif s[j] == 'b':\n            c2 += 1\n            c3 += c1\n    d = c1 * c2\n    x = c3\n    ans = x + (k - 1) * d\n    print(k * (x + ans) // 2)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    c1 = 0\n    c2 = 0\n    c3 = 0\n    for j in range(n):\n        if s[j] == 'a':\n            c1 += 1\n        elif s[j] == 'b':\n            c2 += 1\n            c3 += c1\n    d = c1 * c2\n    x = c3\n    ans = x + (k - 1) * d\n    print(k * (x + ans) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    string = input()\n    counta = 0\n    countb = 0\n    countab = 0\n    for index in range(n):\n        if string[index] == 'a':\n            counta += 1\n        elif string[index] == 'b':\n            countb += 1\n            countab += counta\n    difference = counta * countb\n    startTerm = countab\n    endTerm = startTerm + (k - 1) * difference\n    print(k * (startTerm + endTerm) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    string = input()\n    counta = 0\n    countb = 0\n    countab = 0\n    for index in range(n):\n        if string[index] == 'a':\n            counta += 1\n        elif string[index] == 'b':\n            countb += 1\n            countab += counta\n    difference = counta * countb\n    startTerm = countab\n    endTerm = startTerm + (k - 1) * difference\n    print(k * (startTerm + endTerm) // 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = [-1] * len(s)\n    numb = s.count('b')\n    x = numb\n    for j in range(len(s)):\n        if s[j] == 'a':\n            l[j] = numb\n        if s[j] == 'b':\n            numb = numb - 1\n    count1 = 0\n    for j in range(len(l)):\n        if l[j] > 0:\n            count1 = count1 + k * (2 * l[j] + (k - 1) * x) // 2\n        elif l[j] == 0:\n            count1 = count1 + k * (2 * 0 + (k - 1) * x) // 2\n    print(count1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = [-1] * len(s)\n    numb = s.count('b')\n    x = numb\n    for j in range(len(s)):\n        if s[j] == 'a':\n            l[j] = numb\n        if s[j] == 'b':\n            numb = numb - 1\n    count1 = 0\n    for j in range(len(l)):\n        if l[j] > 0:\n            count1 = count1 + k * (2 * l[j] + (k - 1) * x) // 2\n        elif l[j] == 0:\n            count1 = count1 + k * (2 * 0 + (k - 1) * x) // 2\n    print(count1)", "try:\n    t = int(input())\n    for i in range(t):\n        (n, k) = map(int, input().split())\n        s = input()\n        l = [-1] * len(s)\n        numb = s.count('b')\n        x = numb\n        for j in range(len(s)):\n            if s[j] == 'a':\n                l[j] = numb\n            if s[j] == 'b':\n                numb = numb - 1\n        count1 = 0\n        for j in range(len(l)):\n            if l[j] > 0:\n                count1 = count1 + k * (2 * l[j] + (k - 1) * x) // 2\n            elif l[j] == 0:\n                count1 = count1 + k * (2 * 0 + (k - 1) * x) // 2\n        print(count1)\nexcept:\n    pass", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = 0\n    c = 0\n    x = s.count('b')\n    for i in range(n):\n        if s[i] == 'b':\n            c += 1\n        elif s[i] == 'a':\n            d += k * (k + 1) // 2 * x - k * c\n    print(d)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = 0\n    c = 0\n    x = s.count('b')\n    for i in range(n):\n        if s[i] == 'b':\n            c += 1\n        elif s[i] == 'a':\n            d += k * (k + 1) // 2 * x - k * c\n    print(d)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = [x for x in input().strip()]\n    c1 = s.count('a')\n    c2 = s.count('b')\n    ans = 0\n    m = 0\n    for x in s:\n        if x == 'b':\n            m += 1\n        if x == 'a':\n            ans += k * (k + 1) // 2 * c2 - k * m\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    st = input()\n    a = st.count('a')\n    b = st.count('b')\n    c = 0\n    ca = 0\n    for i in range(n):\n        if st[i] == 'a':\n            ca += 1\n        if st[i] == 'b':\n            c += ca\n    print(a * b * (k * (k - 1) // 2) + c * k)", "try:\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        string = input()\n        cnta = cntb = ab = 0\n        for i in string:\n            if i == 'a':\n                cnta += 1\n            elif i == 'b':\n                cntb += 1\n                ab += cnta\n        final = ab * k\n        final += k * (k - 1) * cnta * cntb // 2\n        print(final)\nexcept:\n    pass", "tulu = int(input())\nfor _ in range(tulu):\n    (n, k) = [int(x) for x in input().split()]\n    data = input()\n    counterA = 0\n    counterB = 0\n    indexListOfA = []\n    indexListOfB = []\n    for i in range(n):\n        if data[i] == 'a':\n            counterA += 1\n            indexListOfA.append(i)\n        if data[i] == 'b':\n            counterB += 1\n            indexListOfB.append(i)\n    sumOfOneData = 0\n    for j in indexListOfA:\n        lenB = len(indexListOfB)\n        if lenB == 0:\n            break\n        flag = False\n        while len(indexListOfB) > 0 and flag == False:\n            if j < indexListOfB[0]:\n                sumOfOneData += len(indexListOfB)\n                flag = True\n            else:\n                indexListOfB.pop(0)\n    lulu = k * (k - 1) // 2\n    result = lulu * counterB * counterA + k * sumOfOneData\n    print(result)", "tulu = int(input())\nfor _ in range(tulu):\n    (n, k) = [int(x) for x in input().split()]\n    data = input()\n    counterA = 0\n    counterB = 0\n    sumOfOneData = 0\n    indexListOfB = []\n    for i in range(n):\n        if data[i] == 'a':\n            counterA += 1\n        if data[i] == 'b':\n            counterB += 1\n            sumOfOneData += counterA\n    lulu = k * (k - 1) // 2\n    result = lulu * counterB * counterA + k * sumOfOneData\n    print(result)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    t = 0\n    (a, b) = (0, 0)\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == 'b':\n            a += 1\n        elif s[i] == 'a':\n            b += a\n    t = s.count('a') * s.count('b') * k * (k - 1) // 2\n    print(b * k + t)", "T = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    word = input()\n    b_count = 0\n    a_count = 0\n    left_count = 0\n    right_count = 0\n    b_count = word.count('b')\n    curr_b = 0\n    for x in range(N):\n        if word[x] == 'b':\n            curr_b += 1\n        elif word[x] == 'a':\n            left_count += curr_b\n            right_count += b_count - curr_b\n    res = K * (K + 1)\n    res = res // 2\n    res = res * (left_count + right_count)\n    res -= K * left_count\n    print(res)", "t = int(input())\nfor _1 in range(t):\n    (n, k) = map(int, input().split())\n    s = input().strip()\n    (a, b, ab) = (0, 0, 0)\n    for x in range(len(s)):\n        if s[x] == 'a':\n            a += 1\n        if s[x] == 'b':\n            b += 1\n            ab += a\n    print(ab * k + a * b * ((k - 1) * k) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = 0\n    total = 0\n    b = 0\n    s = input()\n    for i in range(n):\n        if s[i] == 'a':\n            ans += 1\n        if s[i] == 'b':\n            total += ans\n            b += 1\n    x = b * ans\n    sum = 2 * total + (k - 1) * x\n    sum = sum * k // 2\n    print(sum)", "T = int(input())\nwhile T != 0:\n    T = T - 1\n    (N, K) = map(int, input().split())\n    S = input()\n    S1 = S + S\n    sub = 'ab'\n    lookup = [[0] * (2 * N + 1) for _ in range(3)]\n    for i in range(0, 2 * N + 1):\n        lookup[0][i] = 1\n    for i in range(1, 2 * N + 1):\n        for j in range(1, 3):\n            if S1[i - 1] == sub[j - 1]:\n                lookup[j][i] = lookup[j - 1][i - 1] + lookup[j][i - 1]\n            else:\n                lookup[j][i] = lookup[j][i - 1]\n    base = lookup[2][N]\n    inc = lookup[2][2 * N] - 2 * base\n    ans = K * base + (K - 1) * K * inc // 2\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ac = 0\n    bc = 0\n    t = 0\n    for i in range(n):\n        if s[i] == 'a':\n            ac += 1\n        if s[i] == 'b':\n            bc += 1\n            t += ac\n    r = k * t\n    r += k * (k - 1) // 2 * ac * bc\n    print(r)", "def get_ans(n, k, s):\n    totalB = s.count('b')\n    initialB = totalB * k\n    ans = 0\n    for i in s:\n        if i == 'b':\n            initialB -= 1\n        elif i == 'a':\n            APa = initialB\n            APd = -totalB\n            APn = k\n            ans += APn * (2 * APa + (APn - 1) * APd) // 2\n    return ans\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(get_ans(n, k, s))", "t = int(input())\nfor x in range(t):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    str = input()\n    i = 0\n    count1 = 0\n    total = 0\n    i = 0\n    while i < n:\n        if str[i] == 'a':\n            count1 = count1 + 1\n        i = i + 1\n    (count2, count3) = (0, 0)\n    i = 0\n    while i < n:\n        if str[i] == 'a':\n            count2 = count2 + 1\n        elif str[i] == 'b':\n            total = total + (k * count2 + k * (k - 1) * count1 // 2)\n        i = i + 1\n    print(total)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [str(i) for i in input()]\n    ac = l.count('a')\n    bc = l.count('b')\n    u = 0\n    co = ac * bc * k * (k - 1) // 2\n    for i in range(n):\n        if l[i] == 'a':\n            u = u + bc\n        elif l[i] == 'b':\n            bc = bc - 1\n    co = co + u * k\n    print(co)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    na = s.count('a')\n    nb = s.count('b')\n    temp = nb\n    summ = 0\n    for i in range(len(s)):\n        if s[i] == 'a':\n            summ += nb\n        elif s[i] == 'b':\n            nb -= 1\n        else:\n            pass\n    ans = summ * k + k * (k - 1) // 2 * na * temp\n    print(ans)", "def binarySearch(arr, l, r, x):\n    if r >= l:\n        mid = l + (r - l) // 2\n        if arr[mid] == x:\n            return mid\n        elif arr[mid] > x:\n            return binarySearch(arr, l, mid - 1, x)\n        else:\n            return binarySearch(arr, mid + 1, r, x)\n    elif l < len(arr):\n        return l\n    else:\n        return -1\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    posn = []\n    for i in range(len(s)):\n        if s[i] == 'b':\n            posn.append(i)\n    tot = 0\n    for i in range(n):\n        if posn == []:\n            break\n        elif s[i] == 'a':\n            z = binarySearch(posn, 0, len(posn) - 1, i)\n            if z != -1 and posn[z] < len(s):\n                if s[posn[z]] == 'b':\n                    z += 1\n                    tot += len(posn) - z + 1\n    tot *= k\n    k1 = s.count('a')\n    k2 = s.count('b')\n    tot += k1 * k2 * (k - 1) * k // 2\n    print(tot)", "t = int(input())\nfor i in range(t):\n    a = input()\n    (n, k) = (int(a.split()[0]), int(a.split()[1]))\n    s = input()\n    l = list(s)\n    ac = l.count('a')\n    bc = l.count('b')\n    u = 0\n    co = ac * bc * k * (k - 1) // 2\n    for i in range(n):\n        if l[i] == 'a':\n            u = u + bc\n        elif l[i] == 'b':\n            bc = bc - 1\n    co = co + u * k\n    print(co)", "from functools import reduce\nT = int(input())\nfor i in range(T):\n    count = 0\n    a = 0\n    b = 0\n    Count = 0\n    (N, K) = map(int, input().split())\n    S = str(input().lower())\n    for j in S:\n        if j == 'a':\n            a += 1\n        elif j == 'b':\n            b += 1\n            count += a\n    Count = K * (K - 1) * a * b // 2\n    Count = Count + K * count\n    print(Count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if 'a' not in s:\n        print(0)\n        continue\n    cnta = 0\n    cntb = 0\n    c = 0\n    for i in s:\n        if i == 'a':\n            cnta += 1\n        elif i == 'b':\n            cntb += 1\n            c += cnta\n    ans = c * k\n    ans = ans + k * (k - 1) // 2 * cnta * cntb\n    print(ans)", "for i in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    a = 0\n    b = 0\n    ahere = 0\n    for i in s:\n        if i == 'a':\n            a += 1\n        elif i == 'b':\n            b += 1\n            ahere += a\n    print(ahere * k + (k - 1) * k // 2 * a * b)", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    temp_a = y = 0\n    a = s.count('a')\n    for i in s:\n        if i == 'a':\n            temp_a += 1\n        elif i == 'b':\n            x = temp_a\n            y += k * x + k * (k - 1) // 2 * a\n    print(y)", "for t in range(int(input())):\n    temp = list(map(int, input().split()))\n    n = temp[0]\n    k = temp[1]\n    s = input()\n    front = []\n    back = []\n    for i in range(n):\n        front.append(0)\n        back.append(0)\n    for i in range(1, n):\n        if s[i - 1] == 'b':\n            back[i] = back[i - 1] + 1\n        else:\n            back[i] = back[i - 1]\n    i = n - 2\n    while i >= 0:\n        if s[i + 1] == 'b':\n            front[i] = front[i + 1] + 1\n        else:\n            front[i] = front[i + 1]\n        i -= 1\n    fs = 0\n    bs = 0\n    for i in range(n):\n        if s[i] == 'a':\n            fs += front[i]\n            bs += back[i]\n    v1 = fs * k * (k + 1) // 2\n    v2 = bs * k * (k - 1) // 2\n    print(v1 + v2)", "t = int(input())\nfor I in range(t):\n    (n, k) = map(int, input().split(' '))\n    s = input()\n    cnt_a = 0\n    cnt_b = 0\n    C = 0\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == 'a':\n            cnt_a += 1\n        elif s[i] == 'b':\n            cnt_b += 1\n            C += cnt_a\n    ans += C * k\n    ans += k * (k - 1) // 2 * cnt_a * cnt_b\n    print(ans)", "def num_subsequences(seq, sub):\n    (m, n) = (len(seq), len(sub))\n    table = [0] * n\n    for i in range(m):\n        previous = 1\n        for j in range(n):\n            current = table[j]\n            if seq[i] == sub[j]:\n                table[j] += previous\n            previous = current\n    return table[n - 1] if n else 1\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    x = int(num_subsequences(s, 'ab'))\n    q = s.rfind('b')\n    na = 0\n    for ch in s:\n        if ch == 'a':\n            na += 1\n    nb = 0\n    for ch in s:\n        if ch == 'b':\n            nb += 1\n    po = na * nb\n    y = int(po * (k * (k - 1)) // 2)\n    print(k * x + y)", "t = int(input())\n(s, arr) = ('', [])\nfor i in range(0, t):\n    (su, cnta, cntb) = (0, 0, 0)\n    arr = [int(m) for m in input().split(' ')]\n    s = input()\n    for j in range(arr[0]):\n        if s[j] == 'a':\n            cnta += 1\n        elif s[j] == 'b':\n            su += cnta\n            cntb += 1\n    su = su * arr[1] + cntb * cnta * (arr[1] * (arr[1] - 1) // 2)\n    print(su)", "def find():\n    (n, k) = list(map(int, input().split()))\n    s = list(input())\n    lim = 0\n    for i in range(n):\n        if s[i] == 'a':\n            lim = i\n            break\n    noa = 0\n    sum = 0\n    nob = 0\n    maxb = 0\n    i = len(s) - 1\n    j = max(lim, 0)\n    while i >= j:\n        if s[i] == 'b':\n            while i >= j and s[i] == 'b':\n                nob += 1\n                i -= 1\n        elif s[i] == 'a':\n            while i >= j and s[i] == 'a':\n                noa += 1\n                sum += nob\n                i -= 1\n        else:\n            i -= 1\n    maxb = nob\n    while i >= 0:\n        if s[i] == 'b':\n            maxb += 1\n        i -= 1\n    print(sum * k + noa * (k * maxb * (k - 1)) // 2)\nt = int(input())\nfor i in range(t):\n    find()", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    countA = 0\n    countB = 0\n    ans = 0\n    for x in s:\n        if x == 'a':\n            countA += 1\n        elif x == 'b':\n            countB += 1\n            ans += countA\n    ans = ans * k + countB * countA * (k * (k - 1) // 2)\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (aCount, bCount, abCount) = (0, 0, 0)\n    for x in s:\n        if x == 'a':\n            aCount += 1\n        elif x == 'b':\n            bCount += 1\n            abCount += aCount\n    abCount = abCount * k + bCount * aCount * (k * (k - 1) // 2)\n    print(abCount)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    S = input()\n    (aCount, bCount, abCount) = (0, 0, 0)\n    for x in S:\n        if x == 'a':\n            aCount += 1\n        elif x == 'b':\n            bCount += 1\n            abCount += aCount\n    abCount = abCount * K + bCount * aCount * (K * (K - 1) // 2)\n    print(abCount)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    (countA, countB, ans) = (0, 0, 0)\n    for x in s:\n        if x == 'a':\n            countA += 1\n        elif x == 'b':\n            countB += 1\n            ans += countA\n    ans = ans * k + countB * countA * (k * (k - 1) // 2)\n    print(ans)", "for _ in range(int(input())):\n    (a, b) = [int(c) for c in input().split()]\n    s = str(input())\n    k = 0\n    p = 0\n    z = 0\n    for i in range(a):\n        if s[i] == 'a':\n            k += 1\n        elif s[i] == 'b':\n            p += 1\n            z += k\n    z = z * b + k * p * (b * (b - 1) // 2)\n    print(z)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    (countA, countB, ans) = (0, 0, 0)\n    for x in s:\n        if x == 'a':\n            countA += 1\n        elif x == 'b':\n            countB += 1\n            ans += countA\n    ans = ans * k + countB * countA * (k * (k - 1) // 2)\n    print(ans)", "T = int(input())\nfor t in range(0, T):\n    D = [int(x) for x in input().split(' ')]\n    S = list(input())\n    na = 0\n    nb = 0\n    ng = 0\n    for i in range(len(S) - 1, -1, -1):\n        if S[i] == 'b':\n            nb += 1\n        elif S[i] == 'a':\n            na += nb\n            ng += 1\n    sm = D[1] * (D[1] - 1) // 2 * ng * nb + D[1] * na\n    print(sm)", "t = int(input())\nwhile t > 0:\n    (n, k) = list(map(int, input().split(' ')))\n    s = input()\n    countsOfB = [0] * len(s)\n    if s[len(s) - 1] == 'b':\n        countsOfB[len(s) - 1] = 1\n    for index in range(len(s) - 2, -1, -1):\n        countsOfB[index] = countsOfB[index + 1]\n        if s[index] == 'b':\n            countsOfB[index] += 1\n    totalBinString = countsOfB[0]\n    totalAinString = 0\n    for eachChar in s:\n        if eachChar == 'a':\n            totalAinString += 1\n    totalPairs = 0\n    for index in range(0, len(s)):\n        if s[index] == 'a':\n            totalPairs = totalPairs + countsOfB[index] * k\n    extra = k * (k - 1) // 2 * totalBinString * totalAinString\n    print(totalPairs + extra)\n    t -= 1", "t = input()\nfor i in range(int(t)):\n    x = list(map(int, input().split()))\n    lngth = x[0]\n    k = x[1]\n    singlesum = 0\n    multisum = 0\n    count_a = 0\n    count_b = 0\n    seq = list(input())\n    for i in range(lngth):\n        if seq[i] == 'a':\n            count_a += 1\n        if seq[i] == 'b':\n            singlesum += count_a\n            count_b += 1\n    multisum = (k - 1) * k * count_a * count_b // 2\n    singlesum = singlesum * k\n    print(singlesum + multisum)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    s.append('b')\n    ab = []\n    c = 0\n    su = 0\n    d = 0\n    ar = []\n    for i in range(len(s)):\n        if s[i] == 'a':\n            c += 1\n            d += 1\n        elif s[i] == 'b':\n            su += c\n            ab.append(c)\n            if d > 0:\n                ar.append(d)\n            ar.append(0)\n            d = 0\n    ab.pop()\n    ar.pop()\n    q = sum(ar)\n    w = sum(ab)\n    p = (k - 1) * k // 2\n    ans = len(ab) * p * q + k * w\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (l, n) = map(int, input().split())\n    s = input()\n    count_a = s.count('a')\n    count_b = s.count('b')\n    count = a = b = 0\n    for i in s:\n        if i == 'a':\n            a += 1\n        elif i == 'b':\n            count += a\n    a = count\n    d = count_a * count_b\n    ans = n * (2 * a + (n - 1) * d) // 2\n    print(ans)", "tt = int(input())\nfor _ in range(tt):\n    (n, k) = map(int, input().split(' '))\n    s = input()\n    c1 = 0\n    ca = 0\n    cb = 0\n    for c in s:\n        if c == 'a':\n            ca += 1\n        elif c == 'b':\n            cb += 1\n            c1 += ca\n    x = k * (k - 1) // 2\n    res = c1 * k + x * ca * cb\n    print(res)", "t = int(input())\nwhile t:\n    t -= 1\n    lengrep = [int(x) for x in input().strip().split()]\n    leng = lengrep[0]\n    rep = lengrep[1]\n    B_cnt_tNow = 0\n    s = input().strip()\n    i = leng - 1\n    B_cnt_total = 0\n    A_cnt_total = 0\n    while i >= 0:\n        if s[i] == 'b':\n            B_cnt_tNow += 1\n        elif s[i] == 'a':\n            A_cnt_total += 1\n            B_cnt_total += B_cnt_tNow\n        i -= 1\n    count = rep * B_cnt_total\n    tem = rep * (rep - 1)\n    tem = tem // 2\n    count = count + A_cnt_total * B_cnt_tNow * tem\n    print(count)", "T = int(input())\nfor ix in range(T):\n    (N, K) = input().split()\n    (N, K) = (int(N), int(K))\n    s = [input()]\n    s = ''.join(s)\n    bctr = [0] * N\n    rlist = []\n    res = 0\n    if s[N - 1] == 'a':\n        rlist.append(0)\n    elif s[N - 1] == 'b':\n        bctr[N - 1] = 1\n    for i in range(N - 2, -1, -1):\n        if s[i] == 'b':\n            bctr[i] = bctr[i + 1] + 1\n        else:\n            bctr[i] = bctr[i + 1]\n        if s[i] == 'a':\n            rlist.append(bctr[i] + 0)\n    rsum = sum(rlist)\n    res = rsum * K\n    res += bctr[0] * len(rlist) * ((K - 1) * K // 2)\n    print(res)", "import collections\nt = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = input()\n    cnt_b = 0\n    d = collections.defaultdict(int)\n    for i in s:\n        if i == 'a':\n            d[cnt_b] += 1\n        if i == 'b':\n            cnt_b += 1\n    x = sum(d.values()) * cnt_b\n    y = 0\n    for key in d.keys():\n        y += key * d[key]\n    print(x * (k * (k + 1) // 2) - y * k)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = 0\n    b = 0\n    ab = 0\n    for i in range(n):\n        if s[i] == 'a':\n            a += 1\n        elif s[i] == 'b':\n            b += 1\n    aa = a\n    bb = b\n    for i in range(n):\n        if s[i] == 'a':\n            ab += bb\n        elif s[i] == 'b':\n            bb -= 1\n    print(k * ab + a * b * ((k - 1) * k) // 2)", "T = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split(' '))\n    s = input()\n    f = 0\n    ct = 0\n    nob = [0 for i in range(n)]\n    if s[n - 1] == 'b':\n        nob[n - 1] = 1\n    for i in range(n - 2, -1, -1):\n        if s[i] == 'b':\n            nob[i] = nob[i + 1] + 1\n        else:\n            nob[i] = nob[i + 1]\n    res = 0\n    noba = []\n    for i in range(n):\n        if s[i] == 'a':\n            noba.append(nob[i])\n    ptr = 0\n    ct = 0\n    for ptr in range(len(noba)):\n        res += noba[ptr]\n    res *= k\n    res += s.count('a') * nob[0] * k * (k - 1) // 2\n    print(res)", "t = int(input())\nwhile t:\n    (l, k) = map(int, input().split())\n    s = input()\n    count = 0\n    acount = 0\n    for i in s:\n        if i == 'a':\n            acount += 1\n        if i == 'b':\n            count += acount\n    count *= k\n    count += s.count('a') * s.count('b') * k * (k - 1) // 2\n    print(count)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    s = input()\n    A = s.count('a')\n    B = s.count('b')\n    b = 'ab'\n    dp = [[0 for i in range(3)] for i in range(n + 1)]\n    for i in range(3):\n        dp[0][i] = 0\n    for i in range(n + 1):\n        dp[i][0] = 1\n    for i in range(1, n + 1):\n        for j in range(1, 3):\n            if s[i - 1] == b[j - 1]:\n                dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j]\n            else:\n                dp[i][j] = dp[i - 1][j]\n    AB = dp[n][2]\n    print(AB * k + A * B * k * (k - 1) // 2)", "def summer(n, d, a):\n    return n * (2 * a + (n - 1) * d) // 2\nt = int(input())\nwhile t:\n    t -= 1\n    (x, y) = input().split()\n    (x, y) = (int(x), int(y))\n    a = input()\n    ans = i = count = 0\n    countb = a.count('b')\n    while i < x:\n        if a[i] == 'a':\n            ans += summer(y, countb, countb - count)\n        elif a[i] == 'b':\n            count += 1\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    [n, r] = [int(i) for i in input().split()]\n    a = input()\n    b = []\n    c = 0\n    for i in a:\n        if i == 'a':\n            c += 1\n        if i == 'b':\n            b.append(c)\n    d = 0\n    for i in b:\n        d += i * r + r * (r - 1) * c // 2\n    print(d)", "import io\nimport sys\n\ndef test_data():\n    return io.StringIO('3\\n4 2\\nabcb\\n7 1\\naayzbaa\\n12 80123123\\nabzbabzbazab')\n\ndef get_input(source):\n    with source as lines:\n        t = int(next(lines))\n        for _ in range(t):\n            (n, k) = list(map(int, next(lines).strip().split(' ')))\n            s = next(lines).strip()\n            yield (s, k)\n\ndef calc(s, k):\n    diff = []\n    cur = 0\n    num_b = 0\n    for c in s:\n        if c == 'b':\n            cur += 1\n            num_b += 1\n        diff.append(cur)\n    if num_b == 0:\n        return 0\n    tri = k * (k + 1) // 2\n    tri_b = num_b * tri\n    tot = 0\n    for i in range(len(s)):\n        if s[i] == 'a':\n            tot += tri_b - diff[i] * k\n    return tot\ninp = test_data() if '-test' in sys.argv else sys.stdin\nfor args in get_input(inp):\n    print(calc(*args))", "for t in range(int(input())):\n    (N, K) = [int(i) for i in input().strip().split()]\n    s = input()\n    ans = 0\n    n_b_s = s.count('b')\n    b_f = 0\n    for i in range(len(s)):\n        if s[i] == 'b':\n            b_f += 1\n            continue\n        if s[i] == 'a':\n            ans += K * (K + 1) // 2 * n_b_s - b_f * K\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = s.count('a')\n    b = s.count('b')\n    cur = b * k * (k + 1) // 2\n    ans = 0\n    for i in s:\n        if i == 'a':\n            ans += cur\n        elif i == 'b':\n            cur -= k\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, k) = map(int, input().split())\n    s = input()\n    ca = 0\n    cb = 0\n    ans = 0\n    for i in s:\n        if i == 'a':\n            ca += 1\n        if i == 'b':\n            ans += ca\n            cb += 1\n    print(ca * cb * k * (k - 1) // 2 + k * ans)"]