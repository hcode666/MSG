["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    for m in range(1, 30 + 1):\n        x = 2 ** m ^ 2 ** m - 1\n        y = 2 ** m ^ 2 ** m + 1\n        if x == n:\n            print(2 ** m - 1)\n            break\n        elif y == n:\n            print(2 ** m)\n            break\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    for m in range(1, 30 + 1):\n        x = 2 ** m ^ 2 ** m - 1\n        y = 2 ** m ^ 2 ** m + 1\n        if x == n:\n            print(2 ** m - 1)\n            break\n        elif y == n:\n            print(2 ** m)\n            break\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    for m in range(1, 30 + 1):\n        x = 2 ** m ^ 2 ** m - 1\n        y = 2 ** m ^ 2 ** m + 1\n        if x == n:\n            print(2 ** m - 1)\n            break\n        elif y == n:\n            print(2 ** m)\n            break\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    for m in range(1, 30 + 1):\n        x = 2 ** m ^ 2 ** m - 1\n        y = 2 ** m ^ 2 ** m + 1\n        if x == n:\n            print(2 ** m - 1)\n            break\n        elif y == n:\n            print(2 ** m)\n            break\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    for m in range(1, 30 + 1):\n        x = 2 ** m ^ 2 ** m - 1\n        y = 2 ** m ^ 2 ** m + 1\n        if x == n:\n            print(2 ** m - 1)\n            break\n        elif y == n:\n            print(2 ** m)\n            break\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    for m in range(1, 30 + 1):\n        x = 2 ** m ^ 2 ** m - 1\n        y = 2 ** m ^ 2 ** m + 1\n        if x == n:\n            print(2 ** m - 1)\n            break\n        elif y == n:\n            print(2 ** m)\n            break\n    else:\n        print(-1)", "import math\nt = int(input())\nfor i in range(t):\n    N = int(input())\n    info1 = math.floor(math.log(N, 2))\n    info2 = math.floor(math.log(N + 1, 2))\n    if N != 2 ** info2 - 1:\n        print(-1)\n    elif N == 1:\n        print(2)\n    else:\n        print(N - 2 ** info1)", "mod = 1000000007\nread_int = lambda : int(input().strip())\nread_str = lambda : input().strip()\nread_str_arr = lambda : input().strip().split()\nread_int_arr = lambda : [int(x) for x in input().strip().split()]\n\ndef solve():\n    N = read_int()\n    if N == 1:\n        ans = 2\n    elif N & N + 1 == 0:\n        ans = N >> 1\n    else:\n        ans = -1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    for m in range(1, 30 + 1):\n        x = 2 ** m ^ 2 ** m - 1\n        y = 2 ** m ^ 2 ** m + 1\n        if x == n:\n            print(2 ** m - 1)\n            break\n        elif y == n:\n            print(2 ** m)\n            break\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        print(-1)\n        continue\n    if n == 1:\n        print(2)\n        continue\n    p = math.ceil(math.log2(n))\n    if 2 ** p - 1 != n:\n        print(-1)\n        continue\n    ans = 2 ** (p - 1) - 1\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        print(-1)\n        continue\n    if n == 1:\n        print(2)\n        continue\n    p = math.ceil(math.log2(n))\n    if 2 ** p - 1 != n:\n        print(-1)\n        continue\n    ans = 2 ** (p - 1) - 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n // 2 ^ n // 2 + 1 == n:\n        print(n // 2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n + 1 & n == 0:\n        print(n // 2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n + 1 & n == 0:\n        print(n // 2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n + 1 & n == 0:\n        print(n // 2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n + 1 & n == 0:\n        print(n // 2)\n    else:\n        print(-1)", "T = int(input())\nfor tx in range(T):\n    N = int(input())\n    if N == 1:\n        print(2)\n    else:\n        M = N // 2\n        if M ^ M + 1 == N:\n            print(M)\n        else:\n            print(-1)", "valid_n = [2 ** i - 1 for i in range(1, 31)]\nT = int(input())\nfor tx in range(T):\n    N = int(input())\n    if N == 1:\n        print(2)\n    elif N in valid_n:\n        print(valid_n[valid_n.index(N) - 1])\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n // 2 ^ n // 2 + 1 == n:\n        print(n // 2)\n    else:\n        print(-1)", "import math\n\ndef poww(n):\n    res = 1\n    a = 2\n    while n:\n        if n & 1:\n            res *= a\n        a *= a\n        n >>= 1\n    return res\nfor n in [*open(0)][1:]:\n    n = int(n)\n    if n == 1:\n        print(2)\n    elif math.ceil(math.log2(n + 1)) == math.floor(math.log2(n + 1)):\n        cnt = 0\n        while n:\n            n = n & n - 1\n            cnt += 1\n        print(poww(cnt - 1) - 1)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif math.ceil(math.log2(n + 1)) == math.floor(math.log2(n + 1)):\n        cnt = 0\n        while n:\n            n = n & n - 1\n            cnt += 1\n        print(2 ** (cnt - 1) - 1)\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n % 2 == 0:\n        print(-1)\n    else:\n        m = n\n        while m > 1:\n            m = m // 2\n            if m % 2 == 0:\n                print(-1)\n                break\n        else:\n            print(n // 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    if n // 2 ^ n // 2 + 1 == n:\n        print(n // 2)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    if n // 2 ^ n // 2 + 1 == n:\n        print(n // 2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    if n // 2 ^ n // 2 + 1 == n:\n        print(n // 2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    if n // 2 ^ n // 2 + 1 == n:\n        print(n // 2)\n    else:\n        print(-1)", "try:\n    t = int(input())\n    while t > 0:\n        n = int(input())\n        if n == 1:\n            print(2)\n            continue\n        if n // 2 ^ n // 2 + 1 == n:\n            print(n // 2)\n        else:\n            print(-1)\n        t -= 1\nexcept:\n    pass", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    if n // 2 ^ n // 2 + 1 == n:\n        print(n // 2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    (i, a) = (1, 0)\n    if n == 1:\n        print(2)\n    else:\n        while 2 ** i <= n + 1:\n            if n == 2 ** i - 1:\n                a = 1\n                break\n            i += 1\n        if a == 1:\n            print(n // 2)\n        else:\n            print(-1)", "t = int(input())\nwhile t:\n    n = int(input())\n    if n == 1:\n        print(2)\n        t -= 1\n        continue\n    if n % 2 == 0:\n        print(-1)\n        t = t - 1\n        continue\n    idx = -1\n    for i in range(0, 31):\n        if pow(2, i) > n:\n            if pow(2, i) - 1 == n:\n                idx = n // 2\n            break\n    print(idx)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    if n // 2 ^ n // 2 + 1 == n:\n        print(n // 2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    if n // 2 ^ n // 2 + 1 == n:\n        print(n // 2)\n    else:\n        print(-1)", "try:\n    import math\n    t = int(input())\n    for i in range(0, t):\n        n = int(input())\n        if n == 1:\n            print(2)\n        else:\n            k = (n + 2 - 1) // 2\n            if k + k - 1 == n and math.log(k, 2).is_integer() == True:\n                print(k - 1)\n            else:\n                print(-1)\nexcept:\n    pass", "T = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    if N == 1:\n        ans.append(2)\n    elif '0' not in bin(N)[2:]:\n        ans.append(N // 2)\n    else:\n        ans.append(-1)\nfor i in ans:\n    print(i)", "t = int(input())\ns = []\nfor i in range(31):\n    s.append(2 ** i - 1)\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n in s:\n        print(n // 2)\n    else:\n        print(-1)", "s = set()\nfor i in range(31):\n    s.add(2 ** i - 1)\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n in s:\n        print(n // 2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n + 1 & n == 0:\n        print(n // 2)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    temp = math.floor(math.log(n + 1, 2))\n    if 2 ** temp == n + 1:\n        print((n + 1) // 2 - 1)\n    else:\n        print(-1)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    temp = math.floor(math.log(n + 1, 2))\n    if 2 ** temp == n + 1:\n        print((n + 1) // 2 - 1)\n    else:\n        print(-1)", "def xor():\n    n = int(input())\n    a = bin(n)[2:]\n    if a.count('0') == 0:\n        if n == 1:\n            print(2)\n        else:\n            print(n >> 1)\n    else:\n        print(-1)\nt = int(input())\nwhile t != 0:\n    xor()\n    t -= 1", "def solve():\n    n = int(input())\n    a = bin(n)[2:]\n    if a.count('0') == 0:\n        if n == 1:\n            print(2)\n        else:\n            print(n >> 1)\n    else:\n        print(-1)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    l = int(input())\n    if l == 1:\n        print(2)\n        continue\n    t_1 = list(bin(l)[2:])\n    flag = 0\n    for i in range(len(t_1) - 1, 0, -1):\n        if flag == 1 and t_1[i] == '1':\n            break\n        if t_1[i] == t_1[i - 1] and t_1[i] == '1':\n            continue\n        else:\n            flag = 1\n    if flag == 1:\n        print(-1)\n        continue\n    t_2 = t_1.count('1')\n    t_3 = 2 ** (t_2 - 1) - 1\n    print(t_3)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    if n == 1:\n        print(2)\n    else:\n        q = 0\n        for i in range(1, 31):\n            p = 1 << i\n            if p ^ p - 1 == n:\n                print(p - 1)\n                q = 1\n                break\n        if q == 0:\n            print(-1)\n    t -= 1", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    f = bin(N)[2:]\n    if f.count('0') == 0:\n        if N == 1:\n            print(2)\n        else:\n            print(N >> 1)\n    else:\n        print(-1)", "test = int(input())\nfor _ in range(test):\n    a = int(input())\n    flag = 0\n    r = 0\n    if a == 1:\n        print('2')\n    elif a & a + 1 == 0:\n        print(a // 2)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    a = int(input())\n    flag = 0\n    r = 0\n    if a == 1:\n        print('2')\n    elif a & a + 1 == 0:\n        print(a // 2)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    a = int(input())\n    flag = 0\n    r = 0\n    if a == 1:\n        print('2')\n    elif a & a + 1 == 0:\n        print(a // 2)\n    else:\n        print('-1')", "from math import *\nfor j in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    else:\n        z = pow(2, ceil(log(n, 2)))\n        e = int(log(n, 2))\n        if z == n + 1:\n            print(2 ** e - 1)\n        else:\n            print(-1)", "import math\n\ndef Log2(x):\n    if x == 0:\n        return false\n    return math.log10(x) / math.log10(2)\n\ndef isPowerOfTwo(n):\n    return math.ceil(Log2(n)) == math.floor(Log2(n))\nfor _ in range(int(input())):\n    n = int(input())\n    m = n + 1\n    if n == 1:\n        print('2')\n    elif isPowerOfTwo(m):\n        print(n // 2)\n    else:\n        print('-1')", "d = {1: 0}\nst = 1\nprev = 1\nwhile True:\n    new = st + st + 1\n    d[new] = prev\n    prev = new\n    st = new\n    if st > 2 * 2 ** 30:\n        break\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    else:\n        try:\n            print(d[n])\n        except:\n            print(-1)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    b = bin(N)[2:]\n    if N == 1:\n        print(2)\n    elif '0' in b:\n        print(-1)\n    else:\n        print((N - 1) // 2)", "t = int(input())\nfor T in range(t):\n    n = int(input())\n    b = bin(n)[2:]\n    if n == 1:\n        print(2)\n    elif '0' in b:\n        print(-1)\n    else:\n        print((n - 1) // 2)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    b = bin(n)[2:]\n    if n == 1:\n        print(2)\n    elif '0' in b:\n        print(-1)\n    else:\n        print((n - 1) // 2)\n    t -= 1", "for i in range(int(input())):\n    N = int(input())\n    binary = bin(N)[2:]\n    if N == 1:\n        print(2)\n    elif '0' in binary:\n        print(-1)\n    else:\n        print((N - 1) // 2)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    else:\n        arr = []\n        i = 0\n        while True:\n            if 2 ** i <= n:\n                arr.append(2 ** i)\n                i += 1\n            else:\n                break\n        flg = 0\n        for i in arr:\n            if i ^ i - 1 == n:\n                flg = 1\n                print(i - 1)\n                break\n        if not flg:\n            print(-1)", "for i in range(int(input())):\n    n = int(input())\n    t = -1\n    for j in range(30):\n        if n == 2 ** j - 1:\n            t = j\n            break\n    if t == 1:\n        print(2)\n    elif t == -1:\n        print(-1)\n    else:\n        print(2 ** (t - 1) - 1)", "from sys import *\ntest = int(input())\nfor tt in range(test):\n    n = int(input())\n    t = -1\n    for i in range(30):\n        if n == 2 ** i - 1:\n            t = i\n            break\n    if t == 1:\n        print(2)\n    elif t == -1:\n        print(-1)\n    else:\n        print(2 ** (t - 1) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('2')\n    elif n % 2 == 0:\n        print(-1)\n    else:\n        x = bin(n)[2:].count('0')\n        if x == 0:\n            ans = n // 2\n            print(ans)\n        else:\n            print(-1)", "from random import randint\n\ndef create_test():\n    a = [x for x in range(1, pow(2, 20) + 1)]\n    print(len(a))\n    for x in a:\n        print(x)\n    exit(0)\n\nclass Solution:\n\n    def __init__(self):\n        super().__init__()\n        self.t = int(input())\n        self.dp = dict()\n        self.dp[1] = 2\n        value = 1\n        for i in range(2, 31):\n            key = pow(2, i) - 1\n            self.dp[key] = value\n            value = key\n        pass\n\n    def solve(self):\n        for _ in range(self.t):\n            n = int(input())\n            ans = -1\n            if n & 1:\n                if n in self.dp.keys():\n                    ans = self.dp[n]\n            print(ans)\n        pass\n\ndef debug():\n    a = [x for x in range(1, 500, 2)]\n    for x in a:\n        ans = -1\n        for i in range(0, x):\n            if i ^ i + 1 == x:\n                ans = i\n                break\n        if ans != -1:\n            print('%d ans = %d' % (x, ans))\n    exit(0)\np = Solution()\np.solve()\npass", "for u in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n // 2 ^ n // 2 + 1 == n:\n        print(n // 2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    else:\n        num_str = bin(n)\n        count = 0\n        for i in range(2, len(num_str)):\n            if num_str[i] == '0':\n                count += 1\n        if count == 0:\n            print(n - (n + 1) // 2)\n        else:\n            print(-1)", "try:\n    primes = ['1']\n    for i in range(2, 31):\n        primes.append(primes[0] * i)\n    for _ in range(int(input())):\n        given = int(input())\n        if given == 1:\n            print('2')\n            continue\n        x = bin(given)[2:]\n        if x in primes:\n            print(int('1' * (len(x) - 1), 2))\n        else:\n            print('-1')\nexcept:\n    pass", "l = []\nfor k in range(2, 31):\n    l.append(2 ** k - 1)\nfor i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    if n in l:\n        print(n // 2)\n    else:\n        print(-1)", "times = int(input())\nfor i in range(0, times):\n    num = int(input())\n    if num == 1:\n        print(2)\n    else:\n        numString = bin(num)\n        count0 = 0\n        for j in range(2, len(numString)):\n            if numString[j] == '0':\n                count0 += 1\n        if count0 == 0:\n            print(num - (num + 1) // 2)\n        else:\n            print(-1)", "import math\nt = int(input())\nl = [1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215, 33554431, 67108863, 134217727, 268435455, 536870911, 1073741823, 2147483647]\nfor i in range(t):\n    n = int(input())\n    if n in l:\n        if n == 1:\n            print(2)\n        else:\n            print(n // 2)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    if n & n + 1 == 0:\n        x = (n + 1) // 2 - 1\n        print(x)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    curr = int(input())\n    if bin(curr)[2:].count('0') > 0:\n        print(-1)\n    else:\n        print([curr // 2, 2][curr == 1])", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    if n == 1:\n        print(2)\n    else:\n        print(n // 2 if n // 2 ^ n // 2 + 1 == n else -1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    bi = bin(n)[2:]\n    c0 = bi.count('0')\n    if c0:\n        print('-1')\n    elif n == 1:\n        print('2')\n    else:\n        print(n // 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(2)\n    else:\n        x = '{0:0b}'.format(n)\n        x = len(x)\n        c = pow(2, x)\n        if c - n == 1:\n            print(n - pow(2, x - 1))\n        else:\n            print(-1)", "numb = []\nfor i in range(31):\n    numb.append(str(2 ** i - 1))\nfor _ in range(int(input())):\n    n = input()\n    if n == '1':\n        print(2)\n    elif n in numb:\n        print(int(n, 10) // 2)\n    else:\n        print(-1)", "def read():\n    return input().strip()\n\ndef readint():\n    return int(read())\nt = readint()\nfor i in range(0, t):\n    n = readint()\n    if n == 1:\n        print(2)\n        continue\n    if n % 2 == 0:\n        print(-1)\n    else:\n        isFound = True\n        for j in range(0, 32):\n            if n == (1 << j) - 1:\n                k = 1 << j - 1\n                isFound = False\n                print(str(k - 1))\n                break\n        if isFound:\n            print(-1)", "import sys\ninput()\nfor num in sys.stdin:\n    num = int(num.rstrip())\n    if num == 1:\n        print(2)\n        continue\n    if num & num + 1 == 0:\n        print(num // 2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    l = n.bit_length()\n    first = 1 << l - 1\n    second = n ^ first\n    if first - second == 1:\n        print(second)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    l = n.bit_length()\n    first = 1 << l - 1\n    second = n ^ first\n    if first - second == 1:\n        print(second)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    if k % 2 == 0:\n        print(-1)\n    elif k % 2 != 0:\n        c = (k + 1) // 2\n        if k == c ^ c - 1:\n            if k != 1:\n                print(c - 1)\n            if k == 1:\n                print(2)\n        else:\n            print(-1)", "for i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n & n + 1 == 0:\n        print(n // 2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    flag = 0\n    if n == 1:\n        print(2)\n        continue\n    for i in range(1, 31):\n        ans = 1 << i\n        if ans ^ ans - 1 == n:\n            print(ans - 1)\n            flag = 1\n    if flag == 0:\n        print(-1)", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\n\ndef is_2n(n):\n    return n & n - 1 == 0\nfor _ in range(int(input())):\n    N = int(input())\n    if N == 1:\n        print(2)\n    elif is_2n(N + 1):\n        print(N // 2)\n    else:\n        print(-1)", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\n\ndef is_2n(n):\n    return True if n & n - 1 == 0 else False\nfor _ in range(int(input())):\n    N = int(input())\n    if N == 1:\n        print(2)\n    elif is_2n(N + 1):\n        print(N // 2)\n    else:\n        print(-1)", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\n\ndef is_2n(n):\n    while n % 2 == 0:\n        n //= 2\n    return True if n == 1 else False\nfor _ in range(int(input())):\n    N = int(input())\n    if N == 1:\n        print(2)\n    elif is_2n(N + 1):\n        print(N // 2)\n    else:\n        print(-1)", "def main():\n    from sys import stdin, stdout\n    inp = stdin.readline\n    out = stdout.write\n    res = []\n    t = int(inp().strip())\n    for i in range(t):\n        n = int(inp().strip())\n        x = n // 2\n        if n == 1:\n            res.append('2\\n')\n        elif x ^ x + 1 == n:\n            res.append(str(x) + '\\n')\n        else:\n            res.append('-1\\n')\n    for i in range(t):\n        out(res[i])\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    if n & n + 1:\n        print(-1)\n        continue\n    print(n // 2)", "a = [1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215, 33554431, 67108863, 134217727, 268435455, 536870911, 1073741823]\nt = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    if n == 1:\n        print('2')\n    elif n in a:\n        p = a.index(n) - 1\n        print(a[p])\n    else:\n        print('-1')", "import math\n\ndef binary(n):\n    l = []\n    flag = 0\n    while n > 0:\n        if n % 2 == 0:\n            flag = 1\n        l.append(n % 2)\n        n = n // 2\n    return (l, flag)\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    b = []\n    (b, f) = binary(n)\n    b.reverse()\n    a = int(math.log2(n))\n    if n == 1:\n        print(2)\n    elif f == 0:\n        print(pow(2, a) - 1)\n    else:\n        print(-1)", "import math\nfor __ in range(int(input())):\n    N = int(input())\n    if N == 1:\n        print(2)\n    elif N % 2 == 0:\n        print(-1)\n    elif math.log2(N // 2 + 1) - int(math.log2(N // 2 + 1)) == 0.0:\n        print(N // 2)\n    else:\n        print(-1)", "a = [2 ** x - 1 for x in range(1, 31)]\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n in a:\n        print(n // 2)\n    else:\n        print('-1')", "alp = [3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215, 33554431, 67108863, 134217727, 268435455, 536870911]\nfor t in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n in alp:\n        print(n // 2)\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    n = int(input())\n    if n == 1:\n        ans = 2\n    else:\n        p = n\n        p += 1\n        flag = 0\n        while p > 1:\n            if p % 2 == 1:\n                flag = 1\n            p = p / 2\n        if flag == 0:\n            k = bin(n)[2:].count('1')\n            ans = 2 ** (k - 1) - 1\n        else:\n            ans = -1\n    print(ans)\n    t -= 1", "from math import log2\nfor t in range(int(input())):\n    i = int(input())\n    if i == 1:\n        print(2)\n    else:\n        b = int(log2(i + 1))\n        a = log2(i + 1)\n        if a == b:\n            print(int(i / 2))\n        else:\n            print('-1')", "import math\n\ndef log2(x):\n    return math.log(x) / math.log(2)\nfor i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    else:\n        j = math.floor(log2(n))\n        j = pow(2, j)\n        k = j ^ j - 1\n        if k == n:\n            print(j - 1)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    flag = 0\n    if n == 1:\n        print('2')\n    else:\n        for i in range(1, 31):\n            if 2 ** i - 1 == n:\n                flag = 1\n                t = i\n                break\n        if flag == 0:\n            print('-1')\n        else:\n            print(2 ** (t - 1) - 1)", "for t in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n + 1 & n:\n        print(-1)\n    else:\n        print(n >> 1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n + 1 & n:\n        print(-1)\n    else:\n        print(n >> 1)", "t = int(input())\nfor i in range(t):\n    flag = True\n    n = int(input())\n    if n == 1:\n        print(2)\n    else:\n        m = int(n / 2)\n        if m ^ m + 1 == n:\n            print(m)\n        else:\n            print(-1)", "import math\nfor ijk in range(0, int(input())):\n    a = int(input())\n    a = bin(a)[2:]\n    if a == '1':\n        print(2)\n    elif '0' in a:\n        print(-1)\n    else:\n        print(int(a[1:], 2))", "t = int(input())\nar = []\nfor i in range(0, 100):\n    ar.append(15 * 2 ** i + 2 ** i - 1)\nfor j in range(0, t):\n    n = int(input())\n    if n == 3:\n        print(1)\n    elif n == 1:\n        print(2)\n    elif n == 7:\n        print(3)\n    elif (n in ar) == True:\n        print(n // 2)\n    else:\n        print(-1)", "a = list()\ni = 0\nwhile i <= 30:\n    a.append(2 ** i - 1)\n    i += 1\nfor i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('2')\n        continue\n    if n not in a:\n        print(-1)\n    else:\n        print(n // 2)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    i = n // 2\n    if n == 1:\n        print(2)\n    elif i ^ i + 1 == n:\n        print(i)\n    else:\n        print(-1)"]