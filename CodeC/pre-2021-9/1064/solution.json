["import bisect\nfor _ in range(int(input())):\n    (N, Q) = list(map(int, input().strip().split(' ')))\n    V = list(map(int, input().strip().split(' ')))\n    VV = sorted(V)\n    for ___ in range(Q):\n        (x, y) = list(map(int, input().strip().split(' ')))\n        x -= 1\n        y -= 1\n        ans1 = abs(V[x] - V[y]) + (y - x)\n        post1 = bisect.bisect_left(VV, min(V[x], V[y]))\n        post2 = bisect.bisect_right(VV, max(V[x], V[y]))\n        ans2 = post2 - post1\n        print(ans1, ans2)", "import bisect\nfor _ in range(int(input())):\n    (N, Q) = list(map(int, input().strip().split(' ')))\n    V = list(map(int, input().strip().split(' ')))\n    VV = sorted(V)\n    for ___ in range(Q):\n        (x, y) = list(map(int, input().strip().split(' ')))\n        x -= 1\n        y -= 1\n        ans1 = abs(V[x] - V[y]) + (y - x)\n        post1 = bisect.bisect_left(VV, min(V[x], V[y]))\n        post2 = bisect.bisect_right(VV, max(V[x], V[y]))\n        ans2 = post2 - post1\n        print(ans1, ans2)", "import bisect as kk\nT = int(input())\nfor i in range(0, T):\n    (N, Q) = map(int, input().split())\n    s = [int(x) for x in input().split()]\n    L = sorted(s)\n    for j in range(0, Q):\n        (x, y) = map(int, input().split())\n        ans1 = abs(s[y - 1] - s[x - 1]) + y - x\n        print(ans1, end=' ')\n        ans2 = kk.bisect_right(L, max(s[x - 1], s[y - 1])) - kk.bisect_left(L, min(s[x - 1], s[y - 1]))\n        print(ans2)", "import bisect as kk\nT = int(input())\nfor i in range(0, T):\n    (N, Q) = map(int, input().split())\n    s = [int(x) for x in input().split()]\n    L = sorted(s)\n    for j in range(0, Q):\n        (x, y) = map(int, input().split())\n        ans1 = abs(s[y - 1] - s[x - 1]) + y - x\n        print(ans1, end=' ')\n        ans2 = kk.bisect_right(L, max(s[x - 1], s[y - 1])) - kk.bisect_left(L, min(s[x - 1], s[y - 1]))\n        print(ans2)", "import bisect\nfor _ in range(int(input())):\n    (n, q) = [int(a) for a in input().split()]\n    arr = list(map(int, input().split()))\n    arr1 = sorted(arr)\n    for i in range(q):\n        (x, y) = [int(a) for a in input().split()]\n        print(abs(arr[y - 1] - arr[x - 1]) + y - x, bisect.bisect_right(arr1, max(arr[y - 1], arr[x - 1])) - bisect.bisect_left(arr1, min(arr[x - 1], arr[y - 1])))", "import bisect as bs\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    v = [int(x) for x in input().split()]\n    c = sorted(v)\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        print(abs(v[x - 1] - v[y - 1]) + y - x, bs.bisect_right(c, max(v[x - 1], v[y - 1]), 0, n) - bs.bisect_left(c, min(v[x - 1], v[y - 1]), 0, n))", "import bisect\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    new = ar.copy()\n    new.sort()\n    for __ in range(q):\n        (x, y) = map(int, input().split())\n        cost = abs(ar[y - 1] - ar[x - 1]) + y - x\n        length = bisect.bisect_right(new, max(ar[y - 1], ar[x - 1]))\n        length -= bisect.bisect_left(new, min(ar[x - 1], ar[y - 1]))\n        print(cost, length)", "def query(x1, y1, d):\n    (x, y) = (x1, y1)\n    if d[y1][3] < d[x1][3]:\n        (x, y) = (y1, x1)\n    summ = y1 - x1 + abs(d[y][0] - d[x][0])\n    mlen = d[y][2] - d[x][1] + 1\n    return (summ, mlen)\nINF = 10 ** 10\nt = int(input())\nfor tt in range(t):\n    (n, q) = [int(x) for x in input().split()]\n    v = [int(x) for x in input().split()]\n    v.append(INF)\n    indexed = [(i, [x, 0, 0, 0]) for (x, i) in zip(v, range(1, n + 2))]\n    indexed.sort(key=lambda x: x[1][0])\n    scores = [x[1][0] for x in indexed]\n    curr_left = 0\n    curr_right = 0\n    for i in range(1, n + 1):\n        indexed[i][1][3] = i\n        if scores[i] == scores[i - 1] and i != n:\n            curr_right = i\n            continue\n        for j in range(curr_left, curr_right + 1):\n            indexed[j][1][1] = curr_left\n            indexed[j][1][2] = curr_right\n        curr_left = i\n        curr_right = i\n    d = dict(indexed)\n    for qq in range(q):\n        (x, y) = [int(x) for x in input().split()]\n        ans = query(x, y, d)\n        print(ans[0], end=' ')\n        print(ans[1])", "from collections import Counter\nfrom collections import defaultdict\nfor z in range(int(input())):\n    (n, q) = map(int, input().split())\n    v = list(map(int, input().split()))\n    sv = sorted(v)\n    d = defaultdict(int)\n    c = Counter(v)\n    for i in range(n):\n        if i and sv[i] == sv[i - 1]:\n            continue\n        d[sv[i]] = i\n    for i in range(q):\n        (x, y) = map(int, input().split())\n        x -= 1\n        y -= 1\n        m = y\n        sm = x\n        if v[x] > v[y]:\n            m = x\n            sm = y\n        print(v[m] - v[sm] + y - x, end=' ')\n        print(d[v[m]] - d[v[sm]] + c[v[m]])", "def bs(arr, l, r, x, g):\n    while l <= r:\n        mid = l + (r - l) // 2\n        if arr[mid] == x:\n            if not g:\n                mid -= 1\n                while mid >= 0 and arr[mid] == x:\n                    mid -= 1\n                return mid + 1\n            else:\n                mid += 1\n                while mid <= r and arr[mid] == x:\n                    mid += 1\n                return mid - 1\n        elif arr[mid] < x:\n            l = mid + 1\n        else:\n            r = mid - 1\n    return -1\nT = int(input())\nfor t in range(T):\n    (N, Q) = map(int, input().split())\n    V = list(map(int, input().split()))\n    S = sorted(V)\n    for q in range(Q):\n        (a, b) = map(int, input().split())\n        a -= 1\n        b -= 1\n        mini = min(V[b], V[a])\n        maxi = max(V[b], V[a])\n        C = b - a + (maxi - mini)\n        f = bs(S, 0, N - 1, mini, False)\n        L = 2 + bs(S, f, N - 1, maxi, True) - f - 1\n        print(C, L)", "from collections import Counter\nfrom itertools import accumulate\nfor _ in range(int(input())):\n    (N, Q) = map(int, input().split())\n    v = list(map(int, input().split()))\n    cnts = Counter(v)\n    w = sorted(cnts)\n    cumulative = dict(zip(w, accumulate((cnts[i] for i in w))))\n    for _ in range(Q):\n        (x, y) = map(int, input().split())\n        (a, b) = sorted([v[x - 1], v[y - 1]])\n        print(str(b - a + y - x) + ' ' + str(cumulative[b] - cumulative[a] + cnts[a]))"]