["from operator import ixor\nfrom functools import reduce\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    arr = 0\n    for __ in range(a):\n        arr = reduce(ixor, [arr, reduce(ixor, map(int, *map(str, input().split())))])\n    if arr:\n        print('YES')\n    else:\n        print('NO')", "from operator import ixor\nfrom functools import reduce\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    arr = 0\n    for __ in range(a):\n        arr = reduce(ixor, [arr, reduce(ixor, map(int, *map(str, input().split())))])\n    if arr:\n        print('YES')\n    else:\n        print('NO')", "for z in range(int(input())):\n    (n, m) = map(int, input().split())\n    count = 0\n    for i in range(n):\n        s = input()\n        count += s.count('1')\n    if count % 2 != 0:\n        print('YES')\n    else:\n        print('NO')", "for z in range(int(input())):\n    (n, m) = map(int, input().split())\n    count = 0\n    for i in range(n):\n        s = input()\n        count += s.count('1')\n    if count % 2 != 0:\n        print('YES')\n    else:\n        print('NO')", "for z in range(int(input())):\n    (n, m) = map(int, input().split())\n    count = 0\n    for i in range(n):\n        s = input()\n        count += s.count('1')\n    if count % 2 != 0:\n        print('YES')\n    else:\n        print('NO')", "for z in range(int(input())):\n    (n, m) = map(int, input().split())\n    count = 0\n    for i in range(n):\n        s = input()\n        count += s.count('1')\n    if count % 2 != 0:\n        print('YES')\n    else:\n        print('NO')", "for z in range(int(input())):\n    (n, m) = map(int, input().split())\n    count = 0\n    for i in range(n):\n        s = input()\n        count += s.count('1')\n    if count % 2 != 0:\n        print('YES')\n    else:\n        print('NO')", "def Test(n, m):\n    import functools\n    arr = []\n    for __ in range(n):\n        inp = [int(x) for x in input().strip()]\n        arr.append(functools.reduce(lambda x, y: x ^ y, inp))\n    if functools.reduce(lambda x, y: x ^ y, arr) == 1:\n        return 'YES'\n    else:\n        return 'NO'\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(Test(n, m))", "import functools\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    arr = []\n    for __ in range(n):\n        inp = [int(x) for x in input().strip()]\n        arr.append(functools.reduce(lambda x, y: x ^ y, inp))\n    if functools.reduce(lambda x, y: x ^ y, arr) == 1:\n        print('YES')\n    else:\n        print('NO')", "import functools\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    arr = []\n    for __ in range(n):\n        inp = [int(x) for x in input().strip()]\n        arr.append(functools.reduce(lambda x, y: x ^ y, inp))\n    if functools.reduce(lambda x, y: x ^ y, arr) == 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor j in range(T):\n    (x, y) = map(int, input().split())\n    counter = 0\n    for i in range(x):\n        A = input()\n        if A.count('1') % 2:\n            counter += 1\n    if counter % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\nfor j in range(T):\n    (x, y) = map(int, input().split())\n    counter = 0\n    for i in range(x):\n        A = input()\n        if A.count('1') % 2:\n            counter += 1\n    if counter % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\nfor j in range(T):\n    (x, y) = map(int, input().split())\n    counter = 0\n    for i in range(x):\n        A = input()\n        counter = (counter + A.count('1')) % 2\n    if counter == 0:\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\nfor j in range(T):\n    (x, y) = map(int, input().split())\n    counter = 0\n    for i in range(x):\n        A = input()\n        counter = counter + A.count('1')\n    if counter % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    sum = 0\n    for i in range(n):\n        s = input()\n        for i in s:\n            if i == '1':\n                sum += 1\n    if sum % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "from functools import reduce\nk = int(input())\nfor o in range(k):\n    (a, b) = input().split(' ')\n    a = int(a)\n    b = int(b)\n    x = []\n    y = []\n    for i in range(a):\n        x = [int(j) for j in input()]\n        r = reduce(lambda c, d: c ^ d, x)\n        y.append(r)\n    r = reduce(lambda c, d: c ^ d, y)\n    if r == 1:\n        print('YES')\n    else:\n        print('NO')", "try:\n    t = int(input())\n    for i in range(t):\n        Result_xor = 0\n        (N, M) = map(int, input().split())\n        arr = []\n        for j in range(N):\n            arr.append(input())\n            for k in range(M):\n                Result_xor = Result_xor ^ int(arr[j][k])\n        if Result_xor == 1:\n            print('YES')\n        else:\n            print('NO')\nexcept EOFError:\n    print()", "try:\n    t = int(input())\n    for i in range(t):\n        Result_xor = 0\n        (N, M) = map(int, input().split())\n        arr = []\n        for j in range(N):\n            arr.append(input())\n            for k in range(M):\n                Result_xor = Result_xor ^ int(arr[j][k])\n        if Result_xor == 1:\n            print('YES')\n        else:\n            print('NO')\nexcept EOFError:\n    print()", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    ans = 0\n    for i in range(N):\n        X = input()\n        for j in range(M):\n            if X[j] == '1':\n                ans += 1\n    if ans % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "testcases = int(input())\nfor testcase in range(testcases):\n    (rows, columns) = map(int, input().split())\n    counter = 0\n    for row in range(rows):\n        list1 = list(map(int, input()))[:columns]\n        counter += list1.count(1)\n    if counter % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "testcases = int(input())\nfor testcase in range(testcases):\n    (rows, columns) = map(int, input().split())\n    counter = 0\n    for row in range(rows):\n        list1 = list(map(int, input()))[:columns]\n        counter += list1.count(1)\n    if counter % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    mat = []\n    for i in range(n):\n        mat += [i for i in input().split()]\n    count = 0\n    for i in mat:\n        for j in i:\n            if j == '1':\n                count += 1\n    if count % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor ddfd in range(t):\n    (n, m) = map(int, input().split())\n    lis = [input() for i in range(n)]\n    count = 0\n    for i in lis:\n        for j in i:\n            if j == '1':\n                count += 1\n    if count % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    ones = 0\n    for i in range(x):\n        s = input()\n        ones += s.count('1')\n    if ones & 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    ans = 0\n    for j in range(n):\n        s = input()\n        x = s.count('1')\n        if x % 2 == 1:\n            ans += 1\n    if ans % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "for u in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 0\n    for i in range(n):\n        s = input()\n        ans += s.count('1')\n    if ans % 2:\n        print('YES')\n    else:\n        print('NO')", "try:\n    t = int(input())\n    for _ in range(t):\n        (n, m) = map(int, input().split())\n        arr = []\n        for _ in range(n):\n            arr.append(input())\n        cnt = 0\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '1':\n                    cnt += 1\n        if cnt % 2 == 0:\n            print('NO')\n        else:\n            print('YES')\nexcept:\n    pass", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    lst = list()\n    (one, zero) = (0, 0)\n    for i in range(n):\n        lst.extend(list(map(str, input().split())))\n    for i in range(len(lst)):\n        for j in range(len(lst[i])):\n            if lst[i][j] == '1':\n                one += 1\n            else:\n                zero += 1\n    if one % 2 != 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    xor = 0\n    arr = []\n    for _ in range(n):\n        arr.append(input())\n    for i in range(n):\n        for j in range(m):\n            xor = xor ^ int(arr[i][j])\n    if xor:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    xor = 0\n    arr = []\n    for _ in range(n):\n        arr.append(input())\n    for i in range(n):\n        for j in range(m):\n            xor = xor ^ int(arr[i][j])\n    if xor:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = tuple(map(int, input().split()))\n    total_ones = 0\n    for i in range(n):\n        b = input()\n        foo = b.count('1')\n        total_ones += foo\n    if total_ones % 2:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor i in range(T):\n    ans = 0\n    (n, m) = map(int, input().split())\n    for j in range(n):\n        for i in input():\n            if i == '1':\n                ans += 1\n    if ans % 2 != 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    ans = 0\n    (n, m) = map(int, input().split())\n    for _ in range(n):\n        for i in input():\n            if i == '1':\n                ans += 1\n    if ans % 2 != 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append(input())\n    count = 0\n    for i in range(n):\n        for c in a[i]:\n            if c == '1':\n                count += 1\n    if count % 2 == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = tuple(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        num = str(input())\n        for j in range(m):\n            if int(num[j]) == 1:\n                count += 1\n    if count % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "for q in range(int(input())):\n    (n, m) = input().split(' ')\n    n = int(n)\n    m = int(m)\n    li = []\n    count = 0\n    for i in range(n):\n        s = input()\n        li2 = [int(i) for i in s]\n        count = count + li2.count(1)\n    if count % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "for q in range(int(input())):\n    (n, m) = input().split(' ')\n    n = int(n)\n    m = int(m)\n    li = []\n    count = 0\n    for i in range(n):\n        s = input()\n        li2 = [int(i) for i in s]\n        li.append(li2)\n    for a in range(n):\n        for j in range(m):\n            if li[a][j] == 1:\n                count = count + 1\n    if count % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\nfor i in range(T):\n    (N, M) = map(int, input().split())\n    grid = []\n    for j in range(N):\n        y = input()\n        y = [int(j) for j in str(y)]\n        grid += y\n    xor = grid[0]\n    for k in range(1, len(grid)):\n        xor = xor ^ grid[k]\n    if xor == 1:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor i in range(T):\n    (N, M) = map(int, input().split())\n    grid = []\n    for j in range(N):\n        y = input()\n        y = [int(j) for j in str(y)]\n        grid += y\n    z = N * M - 1\n    xor = grid[0]\n    for k in range(1, len(grid)):\n        xor = xor ^ grid[k]\n    if xor == 1:\n        print('YES')\n    else:\n        print('NO')", "try:\n    for _ in range(int(input())):\n        (r, c) = map(int, input().split())\n        c1 = 0\n        for i in range(r):\n            l = list(input())\n            c1 += l.count('1')\n        if c1 == 0:\n            print('NO')\n        elif c1 % 2 == 0:\n            print('NO')\n        else:\n            print('YES')\nexcept:\n    pass", "import atexit, sys, os, io, time\nfrom functools import reduce\nfrom itertools import *\nfrom math import *\n\ndef solve():\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        s = input()\n        l.append(s)\n    s = ''\n    for j in range(n):\n        s += l[j]\n    count = 0\n    for k in range(len(s)):\n        if s[k] == '1':\n            count += 1\n    if count % 2 == 0:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor case in range(t):\n    solve()", "for _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    x = 0\n    for i in range(a):\n        c = list(map(int, input()))\n        q = c.count(1)\n        x = q + x\n    if x % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (N, M) = map(int, input().split())\n    count = 0\n    for i in range(N):\n        temp = input()\n        for x in temp:\n            if int(x):\n                count += 1\n    if count % 2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    count = 0\n    for _ in range(n):\n        x = input()\n        for i in range(m):\n            count ^= int(x[i])\n    if count:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    count = 0\n    for j in range(n):\n        a = input()\n        for k in range(m):\n            if a[k] == '1':\n                count += 1\n    if count % 2 != 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    li = []\n    for i in range(n):\n        s = input()\n        if i == 0:\n            li.append(s)\n        else:\n            x = li[-1]\n            res = ''\n            for j in range(m):\n                res += str(int(x[j]) ^ int(s[j]))\n            li.append(res)\n    ans = 0\n    r = li[-1]\n    for i in range(m):\n        if i == 0:\n            ans = int(r[i])\n        else:\n            ans = ans ^ int(r[i])\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "try:\n    t = int(input())\n    for _ in range(t):\n        (n, m) = map(int, input().split())\n        matrix = []\n        for _ in range(n):\n            matrix.append(input())\n        cnt = 0\n        for i in range(n):\n            for j in range(len(matrix[i])):\n                if matrix[i][j] == '1':\n                    cnt += 1\n        if cnt % 2 != 0:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass", "def main():\n    t = int(input())\n    for _ in range(t):\n        ones = 0\n        (n, m) = map(int, input().split())\n        for i in range(n):\n            s = input()\n            ones += s.count('1')\n        if ones % 2 == 1:\n            print('YES')\n        else:\n            print('NO')\nimport sys, threading\nimport bisect\nimport math\nimport itertools\nfrom sys import stdout\nimport heapq\nfrom queue import PriorityQueue\nsys.setrecursionlimit(2 ** 32 // 2 - 1)\nthreading.stack_size(1 << 27)\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "def main():\n    t = int(input())\n    for _ in range(t):\n        ones = 0\n        (n, m) = map(int, input().split())\n        for i in range(n):\n            s = input()\n            ones += s.count('1')\n        if ones % 2 == 1:\n            print('YES')\n        else:\n            print('NO')\nimport sys, threading\nimport bisect\nimport math\nimport itertools\nfrom sys import stdout\nimport heapq\nfrom queue import PriorityQueue\nsys.setrecursionlimit(2 ** 32 // 2 - 1)\nthreading.stack_size(1 << 27)\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    matrix = []\n    for p in range(n):\n        row = input()\n        matrix.append(row)\n    ans = int(matrix[0][0])\n    for p in range(n):\n        for s in range(len(matrix[p])):\n            if p == 0 and s == 0:\n                continue\n            ans ^= int(matrix[p][s])\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    matrix = []\n    for p in range(n):\n        row = input()\n        matrix.append(row)\n    ans = 0\n    for p in range(n):\n        for s in matrix[p]:\n            ans ^= int(s)\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = 0\n    for i in range(n):\n        for j in input():\n            c ^= int(j)\n    print(['NO', 'YES'][c])", "t = int(input())\nwhile t > 0:\n    (m, n) = map(int, input().split())\n    flag = 0\n    k = []\n    for i in range(m):\n        l = input()\n        k.append(l)\n    for i in k:\n        for j in i:\n            flag ^= int(j)\n    if flag == 0:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "from functools import reduce\nfrom operator import xor\nprint('\\n'.join(('YES' if reduce(xor, list((reduce(xor, map(int, input())) for _ in range(int(input().split()[0]))))) else 'NO' for _ in range(int(input())))))", "from functools import reduce\nfrom operator import xor\nfor _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    total = 0\n    for _ in range(N):\n        total ^= reduce(xor, map(int, input()))\n    if total == 1:\n        print('YES')\n    else:\n        print('NO')", "from functools import reduce\nfor _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    total = 0\n    for _ in range(N):\n        total ^= reduce(lambda x, y: x ^ y, map(int, input()))\n    if total == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    count = 0\n    for i in range(n):\n        a = input()\n        for j in a:\n            if int(j) == 1:\n                count += 1\n    if count % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = tuple(map(int, input().split()))\n    ans = 0\n    for _ in range(n):\n        ans += input().count('1')\n    if ans % 2 == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    x = 0\n    for i in range(a):\n        c = list(map(int, input()))\n        q = c.count(1)\n        x = q + x\n    if x % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t != 0:\n    t -= 1\n    arr = []\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        new = input()\n        arr.append(new)\n    c = 0\n    for i in arr:\n        for j in i:\n            c ^= int(j)\n    if c == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    li = []\n    for i in range(n):\n        s = input()\n        if i == 0:\n            li.append(s)\n        else:\n            x = li[-1]\n            res = ''\n            for j in range(m):\n                res += str(int(x[j]) ^ int(s[j]))\n            li.append(res)\n    ans = 0\n    r = li[-1]\n    for i in range(m):\n        if i == 0:\n            ans = int(r[i])\n        else:\n            ans = ans ^ int(r[i])\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nfor i in range(a):\n    b = list(map(int, input().split()))\n    count = 0\n    for j in range(b[0]):\n        s1 = input()\n        count += s1.count('1')\n    if count % 2 == 1:\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nfor i in range(a):\n    b = list(map(int, input().split()))\n    s = ''\n    count = 0\n    for j in range(b[0]):\n        s1 = input()\n        s += s1\n    for t in range(len(s)):\n        if s[t] == '1':\n            count += 1\n    if count % 2 == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor _ in range(int(input())):\n    (r, c) = list(map(int, input().split()))\n    res = 0\n    for i in range(r):\n        s = input()\n        for g in s:\n            if g == '1':\n                res += 1\n    if res % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\nfor i in range(T):\n    (N, M) = input().split()\n    N = int(N)\n    M = int(M)\n    S = []\n    for i in range(N):\n        a = input()\n        S.append(list(a))\n    ans = 1\n    for i in range(len(S)):\n        for j in range(len(S[i])):\n            ans = ans ^ int(S[i][j])\n    if ans == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    sum = 0\n    for j in range(n):\n        s = input()\n        sum = sum + s.count('1')\n    if sum % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    (N, M) = map(int, input().split())\n    grid = []\n    count = 0\n    for i in range(N):\n        s = input()\n        for j in s:\n            if int(j) == 1:\n                count += 1\n    if count % 2 == 0:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "t = int(input())\nfor i in range(0, t):\n    (n, m) = map(int, input().split())\n    ans = 0\n    for i in range(n):\n        s = input()\n        a = s.count('1')\n        ans += a\n    if ans % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    [a, b] = list(map(int, input().rstrip().split()))\n    strr = ''\n    while a > 0:\n        a -= 1\n        strr += input()\n    countone = strr.count('1')\n    if countone % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    col = []\n    for _ in range(n):\n        row = input()\n        prevBit = 0\n        for bit in row:\n            prevBit ^= int(bit)\n        col.append(prevBit)\n    prevBit = 0\n    for bit in col:\n        prevBit ^= bit\n    if prevBit == 1:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    (N, M) = map(int, input().split())\n    arr = []\n    for i in range(N):\n        S = list(map(int, list(input())))\n        arr.append(S)\n    ans = 0\n    for i in range(N):\n        for j in range(M):\n            ans = ans ^ arr[i][j]\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    c = 0\n    for j in range(m):\n        l = [int(x) for x in input()]\n        for k in l:\n            if k == 1:\n                c = c + 1\n    if c % 2 == 0:\n        print('NO')\n    elif c % 2 != 0:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    flag = 0\n    for i in range(n):\n        for j in input():\n            flag ^= int(j)\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    count1 = 0\n    for i in range(n):\n        s = input()\n        count1 += s.count('1')\n    if count1 % 2 == 1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    count = 0\n    (m, n) = map(int, input().split())\n    for j in range(0, m):\n        d = input()\n        count = count + d.count('1')\n    if count % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "def solution(arreglo, n, m):\n    contador = 0\n    for i in range(n):\n        for j in range(m):\n            if arreglo[i][j] == '1':\n                contador += 1\n    if contador % 2 == 0:\n        print('NO')\n    else:\n        print('YES')\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        (n, m) = map(int, input().split())\n        array = []\n        for i in range(n):\n            string = input()\n            array.append(string)\n        solution(array, n, m)\nmain()", "ReadStr = lambda : input()\nReadIntList = lambda : list(map(int, input().split()))\nReadStrList = lambda : list(map(str, input().split()))\nReadInt = lambda : int(input())\nReadMultipleValues = lambda : map(int, input().split())\nReadMultipleValuesStr = lambda : map(str, input().split())\nfor _ in range(ReadInt()):\n    (n, m) = ReadMultipleValues()\n    n_m = ''\n    for i in range(n):\n        s = ReadStr()\n        n_m += s\n    if n_m.count('1') & 1 == 1:\n        print('YES')\n    else:\n        print('NO')", "cases = int(input())\nfor _ in range(cases):\n    ones = 0\n    zeros = 0\n    (c, n) = map(int, input().split())\n    for _ in range(c):\n        s = input()\n        one = s.count('1')\n        ones += one\n        zeros += n - one\n    if ones % 2 != 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split())\n    ans = 0\n    ar = []\n    for i in range(n):\n        innerArray = list(' '.join(input()).split())\n        ar.append(innerArray)\n    ans = 0\n    for j in range(n):\n        for i in range(m):\n            ans ^= int(ar[j][i])\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = 0\n    for i in range(n):\n        s = input()\n        for i in s:\n            if i == '1':\n                c += 1\n    if c % 2 != 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().strip().split(' '))\n    cnt = 0\n    for i in range(n):\n        a = input()\n        for i in range(m):\n            if a[i] == '1':\n                cnt += 1\n    if cnt % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t:\n    t = t - 1\n    (n, m) = map(int, input().split())\n    l = []\n    c = 0\n    for i in range(n):\n        s = input()\n        for j in s:\n            if j == '1':\n                c += 1\n    if c % 2 == 1:\n        print('YES')\n    else:\n        print('NO')", "GI = lambda : int(input())\nGIS = lambda : map(int, input().split())\nLGIS = lambda : list(GIS())\n\ndef main():\n    for _ in range(GI()):\n        (n, m) = GIS()\n        zeros = ones = 0\n        for r in range(n):\n            for c in input():\n                if c == '1':\n                    ones += 1\n        res = 'YES' if ones % 2 else 'NO'\n        print(res)\nmain()", "t = int(input())\nfor i in range(0, t):\n    (n, m) = map(int, input().split())\n    a = 0\n    for j in range(0, n):\n        lst = input()\n        a += lst.count('1')\n    if a % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    cnt = 0\n    for j in range(n):\n        string = input()\n        ans = int(string, 2)\n        while ans != 0:\n            rsb = ans & -ans\n            ans -= rsb\n            cnt += 1\n    if cnt % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    s = ''\n    for i in range(0, n):\n        s1 = input()\n        s = s + s1\n    c = 0\n    l1 = list(s)\n    for j in l1:\n        if int(j) == 1:\n            c = c + 1\n    if c % 2 != 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (m, n) = list(map(int, input().split()))\n    ans = 0\n    prr = ['NO', 'YES']\n    for j in range(m):\n        ans = ans ^ sum(list(map(int, input()))) % 2\n    print(prr[ans])", "import sys\nsys.setrecursionlimit(10 ** 5 + 1)\ninf = int(10 ** 20)\nmax_val = inf\nmin_val = -inf\nRW = lambda : sys.stdin.readline().strip()\nRI = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\n\ndef grid_xor(grd):\n    xors = 0\n    for i in range(len(grd)):\n        for j in range(len(grd[0])):\n            xors ^= grd[i][j]\n    return xors\nfor _ in range(RI()):\n    (N, M) = RMI()\n    grid = [[int(x) for x in input()] for _ in range(N)]\n    if grid_xor(grid) == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    ones = 0\n    for _ in range(n):\n        q = input()\n        for i in q:\n            if i == '1':\n                ones += 1\n    if ones % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    A = []\n    ans = 0\n    for _ in range(n):\n        ele = input()\n        A.append(ele)\n    for i in A:\n        for j in i:\n            ans ^= int(j)\n    if ans == 0:\n        print('NO')\n    else:\n        print('YES')"]