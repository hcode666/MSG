["for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if f[i] not in d:\n            d[f[i]] = p[i]\n        else:\n            d[f[i]] = d[f[i]] + p[i]\n    m = 100000\n    for i in d.values():\n        if i < m:\n            m = i\n    print(m)", "t = int(input())\nfor ni in range(t):\n    (n, m) = map(int, input().split())\n    l1 = [int(i) for i in input().split()]\n    l2 = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if l1[i] not in d:\n            d[l1[i]] = l2[i]\n        else:\n            d[l1[i]] = d[l1[i]] + l2[i]\n    m = 100000\n    for i in d.values():\n        if i <= m:\n            m = i\n    print(m)", "t = int(input())\nfor k in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = {}\n    for i in range(n):\n        if a[i] in c:\n            c[a[i]] += b[i]\n        else:\n            c[a[i]] = b[i]\n    d = list(c.values())\n    d.sort()\n    print(d[0])", "try:\n    t = int(input())\n    for i in range(t):\n        (a, b) = map(int, input().split())\n        f = list(map(int, input().split()))\n        p = list(map(int, input().split()))\n        d = {}\n        for i in range(a):\n            if f[i] not in d:\n                d[f[i]] = p[i]\n            else:\n                d[f[i]] = d[f[i]] + p[i]\n        print(min(d.values()))\nexcept:\n    pass", "try:\n    t = int(input())\n    for r in range(t):\n        (a, b) = map(int, input().split())\n        f = list(map(int, input().split()))\n        p = list(map(int, input().split()))\n        d = {}\n        for i in range(a):\n            if f[i] not in d:\n                d[f[i]] = p[i]\n            else:\n                d[f[i]] = d[f[i]] + p[i]\n        print(min(d.values()))\nexcept:\n    pass", "for j in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    d = {}\n    for i in range(len(f)):\n        if f[i] not in d:\n            d[f[i]] = p[i]\n        else:\n            d[f[i]] += p[i]\n    print(min(d.values()))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    Dict = {}\n    for j in range(n):\n        if f[j] in Dict:\n            Dict[f[j]] += p[j]\n        else:\n            Dict[f[j]] = p[j]\n    l = []\n    for (key, value) in Dict.items():\n        l.append(value)\n    l.sort()\n    print(l[0])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    price_dict = {}\n    for i in range(n):\n        t = a[i]\n        price_dict[t] = price_dict.get(t, 0) + b[i]\n    print(min(price_dict.values()))", "t = int(input())\nfor ni in range(t):\n    (n, m) = map(int, input().split())\n    l1 = [int(i) for i in input().split()]\n    l2 = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if l1[i] not in d:\n            d[l1[i]] = l2[i]\n        else:\n            d[l1[i]] = d[l1[i]] + l2[i]\n    m = 100000\n    for i in d.values():\n        if i <= m:\n            m = i\n    print(m)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f1 = list(map(int, input().split()))\n    p1 = list(map(int, input().split()))\n    d1 = {}\n    for i in range(n):\n        if d1.get(f1[i]) == None:\n            d1[f1[i]] = p1[i]\n        else:\n            d1[f1[i]] = d1[f1[i]] + p1[i]\n    ans = 0\n    minimum = 1000000\n    for (key, value) in d1.items():\n        if value < minimum:\n            ans = key\n            minimum = value\n    print(minimum)", "t = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    x = max(list1)\n    list3 = list(map(int, input().split()))\n    freq = [0] * (x + 1)\n    s = 0\n    list4 = []\n    for i in range(0, len(list1)):\n        freq[list1[i]] = freq[list1[i]] + list3[i]\n        list4.append(list1[i])\n    m = 0\n    f = 0\n    for i in range(1, len(freq)):\n        if i in list4:\n            if f == 0:\n                m = freq[i]\n                f = 1\n            elif freq[i] < m:\n                m = freq[i]\n    print(m)\n    t = t - 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[t[i]] = d.get(t[i], 0) + p[i]\n    print(min(d.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    dict = {}\n    for i in range(n):\n        if f[i] not in dict:\n            dict[f[i]] = p[i]\n        else:\n            dict[f[i]] += p[i]\n    print(min(dict.values()))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    ans = []\n    for i in range(1, m + 1):\n        if i in f:\n            suma = 0\n            for j in range(n):\n                if f[j] == i:\n                    suma += p[j]\n            ans.append(suma)\n    print(min(ans))", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    li1 = list(map(int, input().split()))\n    li2 = list(map(int, input().split()))\n    d = {}\n    for i in range(a):\n        if li1[i] not in d.keys():\n            d[li1[i]] = li2[i]\n        else:\n            d[li1[i]] += li2[i]\n    print(min(d.values()))", "T = int(input())\nfor i in range(T):\n    (N, M) = list(map(int, input().split()))\n    fruit = list(map(int, input().split()))\n    price = list(map(int, input().split()))\n    d = {}\n    for n in range(N):\n        if fruit[n] not in d:\n            d[fruit[n]] = price[n]\n        else:\n            d[fruit[n]] += price[n]\n    print(min(d.values()))", "T = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    t = {}\n    for i in range(n):\n        if f[i] not in t:\n            t[f[i]] = p[i]\n        else:\n            t[f[i]] += p[i]\n    print(min(t.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    t = {}\n    for i in range(n):\n        if f[i] not in t:\n            t[f[i]] = p[i]\n        else:\n            t[f[i]] += p[i]\n    print(min(t.values()))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    d = {}\n    for i in range(len(f)):\n        if f[i] not in d:\n            d[f[i]] = p[i]\n        else:\n            d[f[i]] += p[i]\n    print(min(d.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = [int(x) for x in input().split()]\n    p = [int(x) for x in input().split()]\n    d = {}\n    for i in range(len(f)):\n        if f[i] not in d:\n            d[f[i]] = p[i]\n        else:\n            d[f[i]] += p[i]\n    print(min(d.values()))", "for tc in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    costs = {}\n    for i in range(n):\n        if f[i] in costs:\n            costs[f[i]] += p[i]\n        else:\n            costs[f[i]] = p[i]\n    print(min(costs.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    frr = list(map(int, input().split()))\n    prr = list(map(int, input().split()))\n    ans = {}\n    for i in range(n):\n        if frr[i] in ans:\n            ans[frr[i]] += prr[i]\n        else:\n            ans[frr[i]] = prr[i]\n    print(min(ans.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    frr = list(map(int, input().split()))\n    prr = list(map(int, input().split()))\n    ans = {}\n    for i in range(n):\n        if frr[i] in ans:\n            ans[frr[i]] += prr[i]\n        else:\n            ans[frr[i]] = prr[i]\n    print(min(ans.values()))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    memo = {}\n    for i in range(n):\n        if f[i] in memo:\n            memo[f[i]] += p[i]\n        else:\n            memo[f[i]] = p[i]\n    ans = 1000000\n    for i in memo:\n        if memo[i] < ans:\n            ans = memo[i]\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    fruits = list(map(int, input().split()))\n    costs = list(map(int, input().split()))\n    final_costs = []\n    for i in range(1, m + 1):\n        cost = 0\n        for j in range(len(fruits)):\n            if fruits[j] == i:\n                cost += costs[j]\n        if i in fruits:\n            final_costs.append(cost)\n    if final_costs != []:\n        print(min(final_costs))\n    else:\n        print(-1)", "t = int(input())\nfor __ in range(t):\n    (n, m) = [int(i) for i in input().split()]\n    f = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n    d = {}\n    for i in range(n):\n        if f[i] in d:\n            d[f[i]] += p[i]\n        else:\n            d[f[i]] = p[i]\n    print(min(list(d.values())))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f1 = list(map(int, input().split()))\n    p1 = list(map(int, input().split()))\n    d1 = {}\n    for i in range(n):\n        if d1.get(f1[i]) == None:\n            d1[f1[i]] = p1[i]\n        else:\n            d1[f1[i]] = d1[f1[i]] + p1[i]\n    ans = 0\n    minimum = 1000000\n    for (key, value) in d1.items():\n        if value < minimum:\n            ans = key\n            minimum = value\n    print(minimum)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f1 = list(map(int, input().split()))\n    p1 = list(map(int, input().split()))\n    d1 = {}\n    for i in range(n):\n        if d1.get(f1[i]) == None:\n            d1[f1[i]] = p1[i]\n        else:\n            d1[f1[i]] = d1[f1[i]] + p1[i]\n    ans = 0\n    minimum = 1000000\n    for (key, value) in d1.items():\n        if value < minimum:\n            ans = key\n            minimum = value\n    print(minimum)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f1 = list(map(int, input().split()))\n    p1 = list(map(int, input().split()))\n    d1 = {}\n    for i in range(n):\n        if d1.get(f1[i]) == None:\n            d1[f1[i]] = p1[i]\n        else:\n            d1[f1[i]] = d1[f1[i]] + p1[i]\n    ans = 0\n    minimum = 1000000\n    for (key, value) in d1.items():\n        if value < minimum:\n            ans = key\n            minimum = value\n    print(minimum)", "t = int(input())\nfor r in range(t):\n    (a, b) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    d = {}\n    for i in range(a):\n        if f[i] not in d:\n            d[f[i]] = p[i]\n        else:\n            d[f[i]] = d[f[i]] + p[i]\n    print(min(d.values()))", "try:\n    t = int(input())\n    for r in range(t):\n        (a, b) = map(int, input().split())\n        f = list(map(int, input().split()))\n        p = list(map(int, input().split()))\n        d = {}\n        for i in range(a):\n            if f[i] not in d:\n                d[f[i]] = p[i]\n            else:\n                d[f[i]] = d[f[i]] + p[i]\n        print(min(d.values()))\nexcept:\n    pass", "try:\n    t = int(input())\n    for r in range(t):\n        (m, n) = map(int, input().split())\n        f = list(map(int, input().split()))\n        p = list(map(int, input().split()))\n        d = {}\n        for i in range(m):\n            if f[i] not in d:\n                d[f[i]] = p[i]\n            else:\n                d[f[i]] = d[f[i]] + p[i]\n        print(min(d.values()))\nexcept:\n    pass", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    a = {}\n    for i in range(n):\n        if l[i] not in a:\n            a[l[i]] = s[i]\n        else:\n            a[l[i]] += s[i]\n    x = a.values()\n    print(min(x))", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    a = {}\n    for i in range(n):\n        if l[i] not in a:\n            a[l[i]] = s[i]\n        else:\n            a[l[i]] += s[i]\n    x = a.values()\n    print(min(x))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    di = {}\n    for i in f:\n        di[i] = 0\n    for (i, j) in zip(f, p):\n        di[i] = di[i] + j\n    l = list(di.values())\n    print(min(l))", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    F = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    d = {}\n    for i in F:\n        d[i] = 0\n    for (i, j) in zip(F, P):\n        d[i] += j\n    print(min(list(d.values())))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    x = {}\n    for i in range(n):\n        if f[i] in x:\n            x[f[i]] += p[i]\n        else:\n            x[f[i]] = p[i]\n    print(min(x.values()))", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    a = {}\n    for i in range(n):\n        if l[i] not in a:\n            a[l[i]] = s[i]\n        else:\n            a[l[i]] += s[i]\n    x = a.values()\n    print(min(x))", "n = int(input())\nfor i in range(0, n):\n    (x, y) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    h = {}\n    for i in range(x):\n        if l[i] not in h:\n            h[l[i]] = m[i]\n        else:\n            h[l[i]] = h[l[i]] + m[i]\n    print(min(h.values()))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if f[i] not in d:\n            d[f[i]] = p[i]\n        else:\n            d[f[i]] = d[f[i]] + p[i]\n    print(min(d.values()))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if f[i] not in d:\n            d[f[i]] = p[i]\n        else:\n            d[f[i]] = d[f[i]] + p[i]\n    print(min(d.values()))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    f1 = list(set(f))\n    lis = []\n    sm = 0\n    for i in range(len(f1)):\n        for j in range(len(f)):\n            if f[j] == f1[i]:\n                sm += p[j]\n        lis.append(sm)\n        sm = 0\n    print(min(lis))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    frr = list(map(int, input().split()))\n    prr = list(map(int, input().split()))\n    ans = {}\n    for i in range(n):\n        if frr[i] in ans:\n            ans[frr[i]] += prr[i]\n        else:\n            ans[frr[i]] = prr[i]\n    print(min(ans.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    cost = {}\n    for i in range(n):\n        if f[i] not in cost:\n            cost[f[i]] = p[i]\n        else:\n            cost[f[i]] += p[i]\n    print(min(cost.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arrF = list(map(int, input().split()))\n    arrP = list(map(int, input().split()))\n    costs = [-1 for _ in range(m)]\n    for (f, p) in zip(arrF, arrP):\n        if costs[f - 1] == -1:\n            costs[f - 1] = 0\n        costs[f - 1] += p\n    costs = [cost for cost in costs if cost >= 0]\n    print(min(costs))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arrF = list(map(int, input().split()))\n    arrP = list(map(int, input().split()))\n    costs = [-1 for _ in range(m)]\n    for (f, p) in zip(arrF, arrP):\n        if costs[f - 1] == -1:\n            costs[f - 1] = 0\n        costs[f - 1] += p\n    costs = [cost for cost in costs if cost >= 0]\n    print(min(costs))", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split(' '))\n    fruits = list(map(int, input().split(' ')))\n    prices = list(map(int, input().split(' ')))\n    print(min([sum([p for (f, p) in zip(fruits, prices) if f == m + 1]) for m in range(M) if m + 1 in fruits]))", "mapInput = lambda : map(int, input().split())\nLinput = lambda : list(mapInput())\nfor _ in range(int(input())):\n    (n, m) = mapInput()\n    f = Linput()\n    p = Linput()\n    dt = {}\n    for (index, i) in enumerate(f):\n        if i in dt.keys():\n            dt[i] += p[index]\n        else:\n            dt[i] = p[index]\n    print(min(dt.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lstf = list(map(int, input().split()))\n    lstp = list(map(int, input().split()))\n    dt = {}\n    for (index, i) in enumerate(lstf):\n        if i in dt.keys():\n            dt[i] += lstp[index]\n        else:\n            dt[i] = lstp[index]\n    print(min(dt.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lstf = list(map(int, input().split()))\n    lstp = list(map(int, input().split()))\n    dt = {}\n    for (index, i) in enumerate(lstf):\n        if i in dt.keys():\n            dt[i] += lstp[index]\n        else:\n            dt[i] = lstp[index]\n    print(min(dt.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    prices = [-1] * 51\n    for i in range(n):\n        if prices[f[i]] == -1:\n            prices[f[i]] = p[i]\n        else:\n            prices[f[i]] += p[i]\n    prices.sort()\n    for v in prices:\n        if v > -1:\n            print(v)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    prices = [-1] * 51\n    for i in range(n):\n        if prices[f[i]] == -1:\n            prices[f[i]] = p[i]\n        else:\n            prices[f[i]] += p[i]\n    prices.sort()\n    for v in prices:\n        if v > -1:\n            print(v)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    prices = [-1] * 51\n    for i in range(n):\n        if prices[f[i]] == -1:\n            prices[f[i]] = p[i]\n        else:\n            prices[f[i]] += p[i]\n    prices.sort()\n    for v in prices:\n        if v > -1:\n            print(v)\n            break", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    prices = [-1] * 51\n    for i in range(len(f)):\n        if prices[f[i]] == -1:\n            prices[f[i]] = p[i]\n        else:\n            prices[f[i]] += p[i]\n    prices.sort()\n    for v in prices:\n        if v > -1:\n            print(v)\n            break", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    d = {}\n    for i in range(len(f)):\n        if d.get(f[i]):\n            d[f[i]] += p[i]\n        else:\n            d[f[i]] = p[i]\n    print(min(d.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = {}\n    for i in range(len(a)):\n        if a[i] in c:\n            c[a[i]] += b[i]\n        else:\n            c[a[i]] = b[i]\n    print(min(c.values()))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    bu = list(map(int, input().split()))\n    co = list(map(int, input().split()))\n    d = {}\n    for i in range(len(bu)):\n        if bu[i] not in d:\n            d[bu[i]] = co[i]\n        else:\n            d[bu[i]] += co[i]\n    print(min(d.values()))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    t = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = {}\n    for i in range(len(t)):\n        if t[i] in d:\n            d[t[i]] += c[i]\n        else:\n            d[t[i]] = c[i]\n    print(min(d.values()))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    t = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = {}\n    for i in range(len(t)):\n        if t[i] in d:\n            d[t[i]] += c[i]\n        else:\n            d[t[i]] = c[i]\n    print(min(d.values()))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    d = {}\n    l = []\n    for (x, y) in zip(l1, l2):\n        d[x] = d.get(x, 0) + y\n    for x in d.values():\n        l.append(x)\n    print(min(l))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if p[i] in d:\n            d[p[i]] += c[i]\n        else:\n            d[p[i]] = c[i]\n    minimum = max(d.values())\n    for i in d:\n        minimum = min(minimum, d[i])\n    print(minimum)", "for x in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    fruit = list(map(int, input().split()))\n    basket = list(map(int, input().split()))\n    basket_list = []\n    for x in range(N):\n        total = 0\n        total += basket[x]\n        for y in range(N):\n            if fruit[x] == fruit[y] and x != y:\n                total += basket[y]\n            else:\n                continue\n        basket_list.append(total)\n    print(min(basket_list))", "for x in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    fruit = list(map(int, input().split()))\n    basket = list(map(int, input().split()))\n    basket_list = []\n    for x in range(N):\n        total = 0\n        total += basket[x]\n        for y in range(N):\n            if fruit[x] == fruit[y] and x != y:\n                total += basket[y]\n        basket_list.append(total)\n    basket_list.sort()\n    print(basket_list[0])", "for x in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    fruit = list(map(int, input().split()))\n    basket = list(map(int, input().split()))\n    basket_list = []\n    for x in range(N):\n        total = 0\n        total += basket[x]\n        for y in range(N):\n            if fruit[x] == fruit[y] and x != y:\n                total += basket[y]\n        basket_list.append(total)\n    print(min(basket_list))", "for x in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    fruit = list(map(int, input().split()))\n    basket = list(map(int, input().split()))\n    basket_list = []\n    for x in range(N):\n        total = 0\n        total += basket[x]\n        for y in range(N):\n            if fruit[x] == fruit[y] and x != y:\n                total += basket[y]\n            else:\n                continue\n        basket_list.append(total)\n    print(min(basket_list))", "for x in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    fruit = list(map(int, input().split()))\n    basket = list(map(int, input().split()))\n    basket_list = []\n    for x in range(N):\n        total = 0\n        total += basket[x]\n        for y in range(N):\n            if fruit[x] == fruit[y] and x != y:\n                total += basket[y]\n            else:\n                continue\n        basket_list.append(total)\n    print(min(basket_list))", "for x in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    fruit = list(map(int, input().split()))\n    basket = list(map(int, input().split()))\n    basket_list = []\n    for x in range(N):\n        total = 0\n        total += basket[x]\n        for y in range(N):\n            if fruit[x] == fruit[y] and x != y:\n                total += basket[y]\n            else:\n                continue\n        basket_list.append(total)\n    print(min(basket_list))", "for testcase in range(int(input())):\n    (n, m) = map(int, input().split())\n    fruits = list(map(int, input().split()))\n    prices = list(map(int, input().split()))\n    baskets = {}\n    for i in range(len(fruits)):\n        if fruits[i] in baskets:\n            baskets[fruits[i]] += prices[i]\n        else:\n            baskets[fruits[i]] = prices[i]\n    print(sorted(baskets.values())[0])", "T = int(input())\nfor i in range(T):\n    (N, M) = map(int, input().split())\n    F = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    Map = {}\n    for k in range(N):\n        Map[F[k]] = 0\n    for j in range(N):\n        Map[F[j]] += P[j]\n    print(min(list(Map.values())))", "for testcase in range(int(input())):\n    (n, m) = map(int, input().split())\n    fruits = list(map(int, input().split()))\n    prices = list(map(int, input().split()))\n    baskets = {}\n    for i in range(len(fruits)):\n        baskets[fruits[i]] = baskets.get(fruits[i], 0) + prices[i]\n    print(sorted(baskets.values())[0])", "for testcase in range(int(input())):\n    (n, m) = map(int, input().split())\n    fruits = list(map(int, input().split()))\n    prices = list(map(int, input().split()))\n    baskets = {}\n    for i in range(len(fruits)):\n        if fruits[i] in baskets:\n            baskets[fruits[i]] += prices[i]\n        else:\n            baskets[fruits[i]] = prices[i]\n    print(sorted(baskets.values())[0])", "T = int(input())\nfor _ in range(T):\n    (n, m) = list(map(int, input().split()))\n    fruits = list(map(int, input().split()))\n    baskets = list(map(int, input().split()))\n    fruit_basket = {}\n    for i in range(n):\n        if fruit_basket.get(fruits[i]):\n            fruit_basket[fruits[i]] += baskets[i]\n        else:\n            fruit_basket[fruits[i]] = baskets[i]\n    basket_prices = list(fruit_basket.values())\n    basket_prices.sort()\n    print(basket_prices[0])", "for x in range(int(input())):\n    (n, m) = map(int, input().split())\n    fruit_type = list(map(int, input().split()))\n    price = list(map(int, input().split()))\n    dict_temp = {}\n    for x in range(len(fruit_type)):\n        if fruit_type[x] in dict_temp.keys():\n            dict_temp[fruit_type[x]] += price[x]\n        else:\n            dict_temp[fruit_type[x]] = price[x]\n    print(min(dict_temp.values()))", "for x in range(int(input())):\n    (n, m) = map(int, input().split())\n    fruit_type = list(map(int, input().split()))\n    price = list(map(int, input().split()))\n    dict_temp = {}\n    for x in range(len(fruit_type)):\n        if fruit_type[x] in dict_temp.keys():\n            dict_temp[fruit_type[x]] += price[x]\n        else:\n            dict_temp[fruit_type[x]] = price[x]\n    print(min(dict_temp.values()))", "for i in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    f = list(map(int, input().split(' ')))\n    s = list(map(int, input().split(' ')))\n    x = dict()\n    for j in range(0, n):\n        if f[j] not in x:\n            x[f[j]] = s[j]\n        else:\n            x[f[j]] += s[j]\n    res = []\n    for j in x:\n        res.append(x.get(j))\n    print(min(res))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = [0] * (m + 1)\n    for (i, p) in zip(map(int, input().split()), map(int, input().split())):\n        c[i] += max(p, 0.01)\n    print(int(min(filter(bool, c))))", "for i in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    f = list(map(int, input().split(' ')))\n    s = list(map(int, input().split(' ')))\n    x = dict()\n    for j in range(0, n):\n        if f[j] not in x:\n            x[f[j]] = s[j]\n        else:\n            x[f[j]] += s[j]\n    res = []\n    for j in x:\n        res.append(x.get(j))\n    print(min(res))", "for i in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    f = list(map(int, input().split(' ')))\n    s = list(map(int, input().split(' ')))\n    x = dict()\n    for j in range(0, n):\n        if f[j] not in x:\n            x[f[j]] = s[j]\n        else:\n            x[f[j]] += s[j]\n    res = []\n    for j in x:\n        res.append(x.get(j))\n    print(min(res))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if f[i] not in d:\n            d[f[i]] = p[i]\n        else:\n            d[f[i]] += p[i]\n    print(min(list(d.values())))", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    fru_li = list(map(int, input().split()))\n    pri_li = list(map(int, input().split()))\n    di = {}\n    for (i, j) in enumerate(fru_li):\n        if j not in di:\n            di[j] = pri_li[i]\n        else:\n            di[j] += pri_li[i]\n    print(min(di.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if f[i] in d:\n            d[f[i]] += p[i]\n        else:\n            d[f[i]] = p[i]\n    maxi = 10 ** 13\n    for (key, value) in d.items():\n        maxi = min(maxi, value)\n    print(maxi)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    ls = []\n    x = set(f)\n    for item in x:\n        count = 0\n        for i in range(n):\n            if item == f[i]:\n                count += p[i]\n        ls.append(count)\n    print(min(ls))", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    k = list(map(int, input().split()))\n    z = []\n    y = set(l)\n    for g in y:\n        sum = 0\n        for j in range(n):\n            if l[j] == g:\n                sum += k[j]\n        z.append(sum)\n    z.sort()\n    print(z[0])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ln = list(map(int, input().split()))\n    pn = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if ln[i] in d.keys():\n            d[ln[i]] = d[ln[i]] + pn[i]\n        else:\n            d[ln[i]] = pn[i]\n    print(min(d.values()))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    dic = {}\n    for i in range(len(a)):\n        if a[i] not in dic:\n            dic[a[i]] = b[i]\n        else:\n            dic[a[i]] += b[i]\n    print(min([i for i in dic.values()]))", "T = int(input())\nfor i in range(T):\n    (N, M) = [int(x) for x in input().split()]\n    F = [int(x) for x in input().split()]\n    P = [int(x) for x in input().split()]\n    c = []\n    f = list(set(F))\n    for j in f:\n        s = 0\n        for k in range(N):\n            if F[k] == j:\n                s = s + P[k]\n        c.append(s)\n    print(min(c))", "testcases = int(input())\nfor i in range(testcases):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    temp = []\n    temp1 = []\n    for i in f:\n        if i not in temp:\n            temp.append(i)\n    for i in temp:\n        count = 0\n        j = 0\n        while j < len(f):\n            if f[j] == i:\n                count = count + p[j]\n            j = j + 1\n        temp1.append(count)\n    print(min(temp1))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))[:n]\n    p = list(map(int, input().split()))[:n]\n    d = []\n    for i in f:\n        c = 0\n        for j in range(n):\n            if f[j] == i:\n                c += p[j]\n        d.append(c)\n    print(min(d))", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr1 = list(map(int, input().split()))\n    l = []\n    prices = []\n    for e in arr:\n        if e not in l:\n            l.append(e)\n    for item in l:\n        c = 0\n        ind = arr.index(item)\n        c += arr1[ind]\n        for j in range(ind + 1, a):\n            if arr[j] == item:\n                c += arr1[j]\n        prices.append(c)\n    print(min(prices))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    price = {}\n    for i in range(n):\n        if f[i] not in price:\n            price[f[i]] = p[i]\n        else:\n            price[f[i]] += p[i]\n    min = price[f[0]]\n    for i in price:\n        if price[i] < min:\n            min = price[i]\n    print(min)", "for x in range(int(input())):\n    (n, k) = [int(d) for d in input().split()]\n    a = [int(d) for d in input().split()]\n    b = [int(d) for d in input().split()]\n    final = []\n    s = list(set(a))\n    for char in s:\n        summ = 0\n        for i in range(n):\n            if a[i] == char:\n                summ += b[i]\n        final.append(summ)\n    print(min(final))", "t = int(input())\nfor tc in range(t):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    e = dict()\n    for i in range(a):\n        if c[i] in e:\n            e[c[i]] += d[i]\n        else:\n            e[c[i]] = d[i]\n    f = list(e.values())\n    print(min(f))", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    n = {}\n    for j in range(a):\n        if x[j] not in n:\n            n[x[j]] = y[j]\n        else:\n            n[x[j]] += y[j]\n    print(min(n.values()))", "from collections import defaultdict\nt = int(input())\nwhile t > 0:\n    t -= 1\n    li = list(map(int, input().split()))\n    (N, M) = (li[0], li[1])\n    fruits = list(map(int, input().split()))\n    cost = list(map(int, input().split()))\n    d = defaultdict(list)\n    for i in range(len(fruits)):\n        d[fruits[i]].append(cost[i])\n    min1 = 100000\n    for i in dict(d):\n        if sum(d.get(i)) < min1:\n            min1 = sum(d.get(i))\n    print(min1)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    n = {}\n    for j in range(a):\n        if x[j] not in n:\n            n[x[j]] = y[j]\n        else:\n            n[x[j]] += y[j]\n    print(min(n.values()))", "from collections import defaultdict\nt = int(input())\nwhile t > 0:\n    t -= 1\n    li = list(map(int, input().split()))\n    (N, M) = (li[0], li[1])\n    fruits = list(map(int, input().split()))\n    cost = list(map(int, input().split()))\n    d = defaultdict(list)\n    for i in range(len(fruits)):\n        d[fruits[i]].append(cost[i])\n    min1 = 100000\n    for i in dict(d):\n        if sum(d.get(i)) < min1:\n            min1 = sum(d.get(i))\n    print(min1)", "t = input()\nfor c in range(0, int(t)):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    s = []\n    for i in range(len(f)):\n        c = 0\n        t = 0\n        for j in range(len(f)):\n            if f[i] == f[j]:\n                c += 1\n                t += p[j]\n        s.append(t)\n    print(min(s))", "a = int(input())\nfor i in range(a):\n    (n, m) = map(int, input().split())\n    f = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    s = []\n    for i in range(len(f)):\n        c = 0\n        t = 0\n        for j in range(len(f)):\n            if f[i] == f[j]:\n                c += 1\n                t += p[j]\n        s.append(t)\n    print(min(s))"]