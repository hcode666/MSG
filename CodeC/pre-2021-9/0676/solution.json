["def getnewgroup(a, index, grouplength):\n    grouplength += 1\n    while index != 0 and a[index - 1] + 1 == a[index]:\n        grouplength += 1\n        index -= 1\n    return (grouplength, index)\nfor _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    X = list(map(int, input().split()))\n    index = N\n    ans = 0\n    grouplength = 0\n    while True:\n        (grouplength, index) = getnewgroup(X, index - 1, grouplength)\n        if index == 0:\n            ans += (X[index] - 1) * (grouplength // K + 1 * (grouplength % K != 0))\n            break\n        ans += (X[index] - X[index - 1] - 1) * (grouplength // K + 1 * (grouplength % K != 0))\n    print(ans)", "def getnewgroup(a, index, grouplength):\n    grouplength += 1\n    while index != 0 and a[index - 1] + 1 == a[index]:\n        grouplength += 1\n        index -= 1\n    return (grouplength, index)\nfor _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    X = list(map(int, input().split()))\n    index = N\n    ans = 0\n    grouplength = 0\n    while True:\n        (grouplength, index) = getnewgroup(X, index - 1, grouplength)\n        if index == 0:\n            ans += (X[index] - 1) * (grouplength // K + 1 * (grouplength % K != 0))\n            break\n        ans += (X[index] - X[index - 1] - 1) * (grouplength // K + 1 * (grouplength % K != 0))\n    print(ans)", "def getnewgroup(a, index, grouplength):\n    grouplength += 1\n    while index != 0 and a[index - 1] + 1 == a[index]:\n        grouplength += 1\n        index -= 1\n    return (grouplength, index)\nfor _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    X = list(map(int, input().split()))\n    index = N\n    ans = 0\n    grouplength = 0\n    while True:\n        (grouplength, index) = getnewgroup(X, index - 1, grouplength)\n        if index == 0:\n            ans += (X[index] - 1) * (grouplength // K + 1 * (grouplength % K != 0))\n            break\n        ans += (X[index] - X[index - 1] - 1) * (grouplength // K + 1 * (grouplength % K != 0))\n    print(ans)", "import math\n\ndef solve():\n    (N, K) = [int(x) for x in input().split()]\n    X = [int(x) for x in input().split()]\n    X.reverse()\n    group = 1\n    count = 0\n    head = X[0]\n    i = 1\n    for i in range(1, len(X)):\n        if head - 1 == X[i]:\n            pass\n        else:\n            count += math.ceil(group / K) * (head - X[i] - 1)\n        head = X[i]\n        group += 1\n    count += math.ceil(group / K) * (X[-1] - 1)\n    print(count)\nfor _ in range(int(input())):\n    solve()", "import math\n\ndef solve():\n    (N, K) = [int(x) for x in input().split()]\n    X = [int(x) for x in input().split()]\n    X.reverse()\n    group = 1\n    count = 0\n    head = X[0]\n    i = 1\n    for i in range(1, len(X)):\n        if head - 1 == X[i]:\n            pass\n        else:\n            count += math.ceil(group / K) * (head - X[i] - 1)\n        head = X[i]\n        group += 1\n    count += math.ceil(group / K) * (X[-1] - 1)\n    print(count)\nfor _ in range(int(input())):\n    solve()", "import math\nT = int(input())\nfor t in range(T):\n    (N, K) = [int(x) for x in input().split()]\n    X = [int(x) for x in input().split()]\n    X.reverse()\n    group = 1\n    count = 0\n    head = X[0]\n    i = 1\n    for i in range(1, len(X)):\n        if head - 1 == X[i]:\n            pass\n        else:\n            count += math.ceil(group / K) * (head - X[i] - 1)\n        head = X[i]\n        group += 1\n    count += math.ceil(group / K) * (X[-1] - 1)\n    print(count)", "import math\nT = int(input())\nfor t in range(T):\n    (N, K) = [int(x) for x in input().split()]\n    X = [int(x) for x in input().split()]\n    X.reverse()\n    group = 1\n    count = 0\n    head = X[0]\n    i = 1\n    for i in range(1, len(X)):\n        if head - 1 == X[i]:\n            pass\n        else:\n            count += math.ceil(group / K) * (head - X[i] - 1)\n        head = X[i]\n        group += 1\n    count += math.ceil(group / K) * (X[-1] - 1)\n    print(count)", "import math\nT = int(input())\nfor t in range(T):\n    (N, K) = [int(x) for x in input().split()]\n    X = [int(x) for x in input().split()]\n    X.reverse()\n    group = 1\n    count = 0\n    head = X[0]\n    i = 1\n    for i in range(1, len(X)):\n        if head - 1 == X[i]:\n            pass\n        else:\n            count += math.ceil(group / K) * (head - X[i] - 1)\n        head = X[i]\n        group += 1\n    count += math.ceil(group / K) * (X[-1] - 1)\n    print(count)", "a = int(input())\nfor i in range(a):\n    (N, K) = map(int, input().split())\n    X = list(map(int, input().split()))\n    if X[N - 1] == N:\n        print(0)\n    else:\n        x = 0\n        r = 1\n        for j in range(N - 1, 0, -1):\n            if r % K != 0:\n                x += (r // K + 1) * (X[j] - X[j - 1] - 1)\n            else:\n                x += int(r / K) * (X[j] - X[j - 1] - 1)\n            r += 1\n        if N % K != 0:\n            x += (N // K + 1) * (X[0] - 1)\n        else:\n            x += N // K * (X[0] - 1)\n        print(x)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    for j in range(n - 1, -1, -1):\n        if j > 0:\n            c += (l[j] - l[j - 1] - 1) * ((n - j - 1) // k + 1)\n        else:\n            c += (l[j] - 1) * ((n - j - 1) // k + 1)\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    res = 0\n    for i in range(n - 1, -1, -1):\n        if i > 0:\n            res += (x[i] - x[i - 1] - 1) * ((n - i - 1) // k + 1)\n        else:\n            res += (x[i] - 1) * ((n - i - 1) // k + 1)\n    print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    res = 0\n    for i in range(n - 1, -1, -1):\n        if i > 0:\n            res += (x[i] - x[i - 1] - 1) * ((n - i - 1) // k + 1)\n        else:\n            res += (x[i] - 1) * ((n - i - 1) // k + 1)\n    print(res)", "from sys import stdin, stdout\nimport math\nfrom collections import Counter, defaultdict\ninput = stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    arr = list(map(int, input().strip().split()))\n    bits = [0 for i in range(1001)]\n    for index in arr:\n        bits[index] = 1\n    bits = bits[::-1]\n    (ones, zeros) = ([], [])\n    (cnt1, cnt2) = (0, 0)\n    for i in range(bits.index(1), 1000 + 1):\n        if bits[i]:\n            cnt1 += 1\n        else:\n            if cnt1 > 0:\n                ones.append(cnt1)\n            cnt1 = 0\n    bits[1000] = 1\n    for i in range(bits.index(1), 1000 + 1):\n        if not bits[i]:\n            cnt2 += 1\n        else:\n            if cnt2 > 0:\n                zeros.append(cnt2)\n            cnt2 = 0\n    if len(ones) != len(zeros):\n        zeros.append(0)\n    ans = 0\n    sumi = 0\n    for i in range(len(ones)):\n        sumi += ones[i]\n        ans += math.ceil(sumi / k) * zeros[i]\n    print(ans)", "import math\nT = int(input())\nfor t in range(T):\n    (N, K) = [int(x) for x in input().split()]\n    X = [int(x) for x in input().split()]\n    X.reverse()\n    group = 1\n    count = 0\n    head = X[0]\n    i = 1\n    for i in range(1, len(X)):\n        if head - 1 == X[i]:\n            pass\n        else:\n            count += math.ceil(group / K) * (head - X[i] - 1)\n        head = X[i]\n        group += 1\n    count += math.ceil(group / K) * (X[-1] - 1)\n    print(count)"]