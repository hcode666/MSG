["t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    grid = []\n    ans1 = 0\n    ans2 = 0\n    for i in range(n):\n        grid.append(input())\n    if not (n % 2 == 1 and m % 2 == 1):\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    cmp = '*'\n                else:\n                    cmp = '.'\n                if grid[i][j] != cmp:\n                    ans1 += 1\n                else:\n                    ans2 += 1\n        print(min(ans1, ans2))\n    else:\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    cmp = '*'\n                else:\n                    cmp = '.'\n                if grid[i][j] != cmp:\n                    ans1 += 1\n        print(ans1)", "t = int(input())\nwhile t:\n    t -= 1\n    q = []\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        s = input()\n        q.append(s)\n    x = ''\n    y = ''\n    for i in range(m):\n        if i % 2 == 0:\n            x += '.'\n        else:\n            x += '*'\n    for i in range(m):\n        if i % 2 == 0:\n            y += '*'\n        else:\n            y += '.'\n    ans1 = []\n    for i in range(n):\n        if i % 2 == 0:\n            ans1.append(x)\n        else:\n            ans1.append(y)\n    ans2 = []\n    for i in range(n):\n        if i % 2 == 0:\n            ans2.append(y)\n        else:\n            ans2.append(x)\n    ct = 0\n    ct1 = 0\n    for i in range(n):\n        for j in range(m):\n            if q[i][j] != ans1[i][j]:\n                ct += 1\n    for i in range(n):\n        for j in range(m):\n            if q[i][j] != ans2[i][j]:\n                ct1 += 1\n    if n * m % 2 == 0:\n        print(min(ct, ct1))\n    else:\n        print(ct1)", "t = int(input())\nwhile t:\n    t -= 1\n    q = []\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        s = input()\n        q.append(s)\n    x = ''\n    y = ''\n    for i in range(m):\n        if i % 2 == 0:\n            x += '.'\n        else:\n            x += '*'\n    for i in range(m):\n        if i % 2 == 0:\n            y += '*'\n        else:\n            y += '.'\n    ans1 = []\n    for i in range(n):\n        if i % 2 == 0:\n            ans1.append(x)\n        else:\n            ans1.append(y)\n    ans2 = []\n    for i in range(n):\n        if i % 2 == 0:\n            ans2.append(y)\n        else:\n            ans2.append(x)\n    ct = 0\n    ct1 = 0\n    for i in range(n):\n        for j in range(m):\n            if q[i][j] != ans1[i][j]:\n                ct += 1\n    for i in range(n):\n        for j in range(m):\n            if q[i][j] != ans2[i][j]:\n                ct1 += 1\n    if n * m % 2 == 0:\n        print(min(ct, ct1))\n    else:\n        print(ct1)", "t = int(input())\nwhile t:\n    t -= 1\n    q = []\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        s = input()\n        q.append(s)\n    x = ''\n    y = ''\n    for i in range(m):\n        if i % 2 == 0:\n            x += '.'\n        else:\n            x += '*'\n    for i in range(m):\n        if i % 2 == 0:\n            y += '*'\n        else:\n            y += '.'\n    ans1 = []\n    for i in range(n):\n        if i % 2 == 0:\n            ans1.append(x)\n        else:\n            ans1.append(y)\n    ans2 = []\n    for i in range(n):\n        if i % 2 == 0:\n            ans2.append(y)\n        else:\n            ans2.append(x)\n    ct = 0\n    ct1 = 0\n    for i in range(n):\n        for j in range(m):\n            if q[i][j] != ans1[i][j]:\n                ct += 1\n    for i in range(n):\n        for j in range(m):\n            if q[i][j] != ans2[i][j]:\n                ct1 += 1\n    if n * m % 2 == 0:\n        print(min(ct, ct1))\n    else:\n        print(ct1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    t = n * k\n    arr = []\n    for i in range(n):\n        arr.append([str(x) for x in input()])\n    ops1 = 0\n    ops2 = 0\n    for i in range(n):\n        for j in range(k):\n            if i % 2 == 0:\n                if j % 2 == 0 and arr[i][j] == '.':\n                    ops1 += 1\n                elif j % 2 == 1 and arr[i][j] == '*':\n                    ops1 += 1\n            elif j % 2 == 1 and arr[i][j] == '.':\n                ops1 += 1\n            elif j % 2 == 0 and arr[i][j] == '*':\n                ops1 += 1\n            if i % 2 == 1:\n                if j % 2 == 0 and arr[i][j] == '.':\n                    ops2 += 1\n                elif j % 2 == 1 and arr[i][j] == '*':\n                    ops2 += 1\n            elif j % 2 == 1 and arr[i][j] == '.':\n                ops2 += 1\n            elif j % 2 == 0 and arr[i][j] == '*':\n                ops2 += 1\n    if n % 2 == 1 and k % 2 == 1:\n        print(ops1)\n    else:\n        print(min(ops1, ops2))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for j in range(n):\n        x = input()\n        l.append(x)\n    s = 0\n    for k in range(n):\n        for z in range(m):\n            if (k + z) % 2 == 0:\n                if l[k][z] == '.':\n                    s += 1\n            elif l[k][z] == '*':\n                s += 1\n    if n * m % 2 == 0:\n        print(min(s, n * m - s))\n    else:\n        print(s)", "qq = int(input())\nfor q in range(qq):\n    (n, m) = [int(x) for x in input().split()]\n    l = []\n    for w in range(n):\n        p = input()\n        l.append(p)\n    e = 0\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0:\n                if l[i][j] == '.':\n                    e += 1\n            elif l[i][j] == '*':\n                e += 1\n    if n * m % 2 == 0:\n        print(min(e, n * m - e))\n    else:\n        print(e)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    (c1, c2) = (0, 0)\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and arr[i][j] == '.':\n                c1 = c1 + 1\n            if (i + j) % 2 == 1 and arr[i][j] == '*':\n                c1 = c1 + 1\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and arr[i][j] == '*':\n                c2 = c2 + 1\n            if (i + j) % 2 == 1 and arr[i][j] == '.':\n                c2 = c2 + 1\n    if n * m % 2 == 0:\n        print(min(c1, c2))\n    else:\n        print(c1)", "t = int(input())\n\ndef match(s, t):\n    cnt = 0\n    for i in range(len(t)):\n        if s[i] != t[i]:\n            cnt += 1\n    return cnt\nfor i in range(t):\n    (n, m) = map(int, input().split(' '))\n    s1 = ''\n    s2 = ''\n    for j in range(n * m):\n        if j % 2 == 0:\n            s1 += '.'\n            s2 += '*'\n        else:\n            s1 += '*'\n            s2 += '.'\n    s = ''\n    for j in range(n):\n        c = input()\n        if j % 2 == 0:\n            s += c\n        else:\n            s += c[::-1]\n    if n * m % 2 == 0:\n        a1 = match(s, s1)\n        a2 = match(s, s2)\n        ans = min(a1, a2)\n        print(ans)\n    else:\n        ans = match(s, s2)\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(input())\n    if n * m % 2 == 0:\n        ans1 = 0\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if arr[i][j] != '*':\n                        ans1 = ans1 + 1\n                elif arr[i][j] != '.':\n                    ans1 = ans1 + 1\n        ans2 = 0\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if arr[i][j] != '.':\n                        ans2 = ans2 + 1\n                elif arr[i][j] != '*':\n                    ans2 = ans2 + 1\n        print(min(ans1, ans2))\n    else:\n        ans1 = 0\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if arr[i][j] != '*':\n                        ans1 = ans1 + 1\n                elif arr[i][j] != '.':\n                    ans1 = ans1 + 1\n        print(ans1)", "def string_start(lst, m, c, d):\n    o = ''\n    for i in range(m):\n        if i % 2 == 0:\n            o += '.'\n            if lst[d][i] != '.':\n                c += 1\n        else:\n            o += '*'\n            if lst[d][i] != '*':\n                c += 1\n    lst[d] = o\n    return c\n\ndef string_start_1(lst, m, c, d):\n    o = ''\n    for i in range(m):\n        if i % 2 == 0:\n            o += '*'\n            if lst[d][i] != '*':\n                c += 1\n        else:\n            o += '.'\n            if lst[d][i] != '.':\n                c += 1\n    lst[d] = o\n    return c\n\ndef string_changes(lst, m, c):\n    if len(lst) == 1:\n        return c\n    else:\n        o = ''\n        for i in range(m):\n            if lst[-1][i] == lst[-2][i]:\n                c += 1\n                if lst[-2][i] == '*':\n                    o += '.'\n                else:\n                    o += '*'\n            else:\n                o += lst[-2][i]\n        lst[-2] = o\n        lst.pop(len(lst) - 1)\n        return string_changes(lst, m, c)\n\ndef string_changes_front(lst, m, c):\n    if len(lst) == 1:\n        return c\n    else:\n        o = ''\n        for i in range(m):\n            if lst[0][i] == lst[1][i]:\n                c += 1\n                if lst[1][i] == '*':\n                    o += '.'\n                else:\n                    o += '*'\n            else:\n                o += lst[1][i]\n        lst[1] = o\n        lst.pop(0)\n        return string_changes_front(lst, m, c)\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    lst = []\n    lst1 = []\n    arr1 = []\n    for j in range(n):\n        s = input()\n        lst.append(s)\n        arr.append(s)\n        lst1.append(s)\n        arr1.append(s)\n    (c_l, cl) = (0, 0)\n    (c_r, cr) = (0, 0)\n    if n * m % 2 != 0:\n        cl += string_start_1(lst1, m, 0, -1)\n        cl += string_changes(lst1, m, 0)\n        cr += string_start_1(arr1, m, 0, 0)\n        cr += string_changes_front(arr1, m, 0)\n        print(min(cl, cr))\n    else:\n        c_l += string_start(lst, m, 0, -1)\n        c_l += string_changes(lst, m, 0)\n        cl += string_start_1(lst1, m, 0, -1)\n        cl += string_changes(lst1, m, 0)\n        c_r += string_start(arr, m, 0, 0)\n        c_r += string_changes_front(arr, m, 0)\n        cr += string_start_1(arr1, m, 0, 0)\n        cr += string_changes_front(arr1, m, 0)\n        print(min(cl, cr, c_l, c_r))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for _ in range(n):\n        a.append(list(input()))\n    a1 = 0\n    a2 = 0\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and a[i][j] == '.':\n                a1 += 1\n            if (i + j) % 2 == 1 and a[i][j] == '*':\n                a1 += 1\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and a[i][j] == '*':\n                a2 += 1\n            if (i + j) % 2 == 1 and a[i][j] == '.':\n                a2 += 1\n    if n * m % 2 == 0:\n        print(min(a1, a2))\n    else:\n        print(a1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = []\n    for _ in range(n):\n        d.append(list(input()))\n    d1 = 0\n    d2 = 0\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and d[i][j] == '.':\n                d1 += 1\n            if (i + j) % 2 == 1 and d[i][j] == '*':\n                d1 += 1\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and d[i][j] == '*':\n                d2 += 1\n            if (i + j) % 2 == 1 and d[i][j] == '.':\n                d2 += 1\n    if n * m % 2 == 0:\n        print(min(d1, d2))\n    else:\n        print(d1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = []\n    for _ in range(n):\n        d.append(list(input()))\n    d1 = 0\n    d2 = 0\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and d[i][j] == '.':\n                d1 += 1\n            if (i + j) % 2 == 1 and d[i][j] == '*':\n                d1 += 1\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and d[i][j] == '*':\n                d2 += 1\n            if (i + j) % 2 == 1 and d[i][j] == '.':\n                d2 += 1\n    if n * m % 2 == 0:\n        print(min(d1, d2))\n    else:\n        print(d1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [[0 for _ in range(m)] for i in range(n)]\n    sum = 0\n    for i in range(n):\n        x = input()\n        for j in range(m):\n            if x[j] == '*':\n                a[i][j] = 1\n            sum += abs(a[i][j] - (1 - (i + j) % 2))\n    if n * m % 2 == 0:\n        print(min(sum, m * n - sum))\n    else:\n        print(sum)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [[0 for _ in range(m)] for i in range(n)]\n    sum = 0\n    for i in range(n):\n        x = input()\n        for j in range(m):\n            if x[j] == '*':\n                a[i][j] = 1\n            sum += abs(a[i][j] - (1 - (i + j) % 2))\n    if n * m % 2 == 0:\n        print(min(sum, m * n - sum))\n    else:\n        print(sum)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for _ in range(n):\n        a.append(list(input()))\n    a1 = 0\n    a2 = 0\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and a[i][j] == '.':\n                a1 += 1\n            if (i + j) % 2 == 1 and a[i][j] == '*':\n                a1 += 1\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and a[i][j] == '*':\n                a2 += 1\n            if (i + j) % 2 == 1 and a[i][j] == '.':\n                a2 += 1\n    if n * m % 2 == 0:\n        print(min(a1, a2))\n    else:\n        print(a1)", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    grid = [list(map(str, input())) for i in range(N)]\n    d = 0\n    for i in range(N):\n        for j in range(M):\n            if grid[i][j] == '*':\n                grid[i][j] = 1\n            else:\n                grid[i][j] = 0\n            if grid[i][j] != (i + j + 1) % 2:\n                d += 1\n    if N * M % 2 == 0:\n        print(min(M * N - d, d))\n    else:\n        print(d)", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    grid = [list(map(str, input())) for i in range(N)]\n    d = 0\n    for i in range(N):\n        for j in range(M):\n            if grid[i][j] == '*':\n                grid[i][j] = 1\n            else:\n                grid[i][j] = 0\n            if grid[i][j] != (i + j + 1) % 2:\n                d += 1\n    if N * M % 2 == 0:\n        print(min(M * N - d, d))\n    else:\n        print(d)", "T = int(input())\nfor i in range(T):\n    (n, m) = map(int, input().split())\n    if n * m % 2 == 0:\n        x1 = 0\n        x2 = 0\n        for i in range(n):\n            a = input()\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if a[j] == '.':\n                        x1 += 1\n                    else:\n                        x2 += 1\n                elif a[j] == '*':\n                    x1 += 1\n                else:\n                    x2 += 1\n        print(min(x1, x2))\n    else:\n        c = 0\n        for i in range(n):\n            a = input()\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if a[j] == '.':\n                        c += 1\n                elif a[j] == '*':\n                    c += 1\n        print(c)", "T = int(input())\nfor i in range(T):\n    (n, m) = map(int, input().split())\n    if n * m % 2 == 0:\n        x1 = 0\n        x2 = 0\n        for i in range(n):\n            a = input()\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if a[j] == '.':\n                        x1 += 1\n                    else:\n                        x2 += 1\n                elif a[j] == '*':\n                    x1 += 1\n                else:\n                    x2 += 1\n        print(min(x1, x2))\n    else:\n        c = 0\n        for i in range(n):\n            a = input()\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if a[j] == '.':\n                        c += 1\n                elif a[j] == '*':\n                    c += 1\n        print(c)", "def mgc():\n    ops1 = 0\n    for i in range(n):\n        for j in range(m):\n            if i % 2 == 0:\n                if j % 2 == 0 and arr[i][j] == '.':\n                    ops1 += 1\n                elif j % 2 == 1 and arr[i][j] == '*':\n                    ops1 += 1\n            elif j % 2 == 1 and arr[i][j] == '.':\n                ops1 += 1\n            elif j % 2 == 0 and arr[i][j] == '*':\n                ops1 += 1\n    ops2 = 0\n    for i in range(n):\n        for j in range(m):\n            if i % 2 == 1:\n                if j % 2 == 0 and arr[i][j] == '.':\n                    ops2 += 1\n                elif j % 2 == 1 and arr[i][j] == '*':\n                    ops2 += 1\n            elif j % 2 == 1 and arr[i][j] == '.':\n                ops2 += 1\n            elif j % 2 == 0 and arr[i][j] == '*':\n                ops2 += 1\n    if n * m % 2 == 0:\n        return min(ops2, ops1)\n    else:\n        return ops1\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(input())\n    print(mgc())", "def solve2(n, m, li, c1, c2):\n    for i in range(n):\n        for j in range(m):\n            if i % 2 == 0:\n                if j % 2 == 0:\n                    if li[i][j] == '.':\n                        c1 += 1\n                elif li[i][j] == '*':\n                    c1 += 1\n            elif j % 2 == 0:\n                if li[i][j] == '*':\n                    c1 += 1\n            elif li[i][j] == '.':\n                c1 += 1\n    return c1\n\ndef solve1(n, m, li, c1, c2):\n    for i in range(n):\n        for j in range(m):\n            if i % 2 == 0:\n                if j % 2 == 0:\n                    if li[i][j] == '.':\n                        c1 += 1\n                elif li[i][j] == '*':\n                    c1 += 1\n            elif j % 2 == 0:\n                if li[i][j] == '*':\n                    c1 += 1\n            elif li[i][j] == '.':\n                c1 += 1\n            if i % 2 == 1:\n                if j % 2 == 0:\n                    if li[i][j] == '.':\n                        c2 += 1\n                elif li[i][j] == '*':\n                    c2 += 1\n            elif j % 2 == 0:\n                if li[i][j] == '*':\n                    c2 += 1\n            elif li[i][j] == '.':\n                c2 += 1\n    return min(c1, c2)\nfor testcase in range(int(input())):\n    arr = [int(x) for x in input().split()]\n    (n, m) = (arr[0], arr[1])\n    li = []\n    for i in range(n):\n        s = list(input())\n        li.append(s)\n    (c1, c2) = (0, 0)\n    if n % 2 == 0 or m % 2 == 0:\n        print(solve1(n, m, li, c1, c2))\n    else:\n        print(solve2(n, m, li, c1, c2))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n * m % 2 == 0:\n        x1 = 0\n        x2 = 0\n        for i in range(n):\n            a = input()\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if a[j] == '.':\n                        x1 += 1\n                    else:\n                        x2 += 1\n                elif a[j] == '*':\n                    x1 += 1\n                else:\n                    x2 += 1\n        print(min(x1, x2))\n    else:\n        c = 0\n        for i in range(n):\n            a = input()\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if a[j] == '.':\n                        c += 1\n                elif a[j] == '*':\n                    c += 1\n        print(c)", "def test(n, m):\n    a = '*'\n    b = '.'\n    s1 = ''\n    s2 = ''\n    for i in range(m):\n        if i % 2 == 0:\n            s1 += a\n            s2 += b\n        else:\n            s1 += b\n            s2 += a\n    ls1 = []\n    ls2 = []\n    for i in range(n):\n        if i % 2 == 0:\n            ls1.append(s1)\n            ls2.append(s2)\n        else:\n            ls1.append(s2)\n            ls2.append(s1)\n    a = sum((i.count('*') for i in ls1))\n    b = sum((i.count('*') for i in ls2))\n    if a == b:\n        return (ls1, ls2)\n    elif a > b:\n        return (ls1, ls1)\n    else:\n        return (ls2, ls2)\n\ndef diff(ls1, ls2):\n    count = 0\n    for i in range(len(ls1)):\n        s1 = ls1[i]\n        s2 = ls2[i]\n        for j in range(len(s1)):\n            if s1[j] != s2[j]:\n                count += 1\n    return count\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    (ls1, ls2) = test(n, m)\n    ls3 = [input() for i in range(n)]\n    print(min(diff(ls1, ls3), diff(ls2, ls3)))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lis = []\n    for _ in range(n):\n        lis.append([x for x in input()])\n    count1 = 0\n    for i in range(n):\n        if i % 2 == 0:\n            flag = 0\n        else:\n            flag = 1\n        for j in range(m):\n            if flag == 0:\n                if lis[i][j] == '.':\n                    count1 += 1\n                flag = 1\n            else:\n                if lis[i][j] == '*':\n                    count1 += 1\n                flag = 0\n    count2 = 0\n    for i in range(n):\n        if i % 2 == 0:\n            flag = 0\n        else:\n            flag = 1\n        for j in range(m):\n            if flag == 0:\n                if lis[i][j] == '*':\n                    count2 += 1\n                flag = 1\n            else:\n                if lis[i][j] == '.':\n                    count2 += 1\n                flag = 0\n    if n * m % 2 == 1:\n        print(count1)\n    else:\n        print(min(count1, count2))", "for t in range(int(input())):\n    (N, M) = map(int, input().split())\n    grid = [list(map(str, input())) for i in range(N)]\n    d = 0\n    for i in range(N):\n        for j in range(M):\n            if grid[i][j] == '*':\n                grid[i][j] = 1\n            else:\n                grid[i][j] = 0\n            if grid[i][j] != (i + j + 1) % 2:\n                d += 1\n    if N * M % 2 == 0:\n        print(min(M * N - d, d))\n    else:\n        print(d)", "def count(s, n, m):\n    cur = 0\n    ans = 0\n    for i in range(n):\n        cur = i % 2\n        for j in range(m):\n            if cur % 2 == 0:\n                if '*' != s[i][j]:\n                    ans += 1\n            elif '.' != s[i][j]:\n                ans += 1\n            cur += 1\n    if n * m % 2 == 1:\n        return ans\n    ans2 = 0\n    cur = 0\n    for i in range(n):\n        cur = i % 2\n        for j in range(m):\n            if cur % 2 == 0:\n                if '.' != s[i][j]:\n                    ans2 += 1\n            elif '*' != s[i][j]:\n                ans2 += 1\n            cur += 1\n        cur = 0\n    return min(ans2, ans)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = [input() for _ in range(n)]\n    print(count(s, n, m))", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    s = []\n    cs = [0] * 2\n    cd = [0] * 2\n    for _ in range(a):\n        s.append(str(input()))\n    for i in range(a):\n        for j in range(b):\n            if s[i][j] == '*':\n                cs[(i + j) % 2] += 1\n            else:\n                cd[(i + j) % 2] += 1\n    t = a * b // 2\n    if a % 2 == 0 or b % 2 == 0:\n        ans1 = abs(cs[0] - t) + abs(t - cd[1])\n        ans2 = abs(cs[1] - t) + abs(t - cd[0])\n        print(min(ans1, ans2))\n    else:\n        print(abs(cs[0] - (t + 1)) + abs(cd[1] - t))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [[0 for _ in range(m)] for i in range(n)]\n    sum = 0\n    for i in range(n):\n        x = input()\n        for j in range(m):\n            if x[j] == '*':\n                a[i][j] = 1\n            sum += abs(a[i][j] - (1 - (i + j) % 2))\n    if n * m % 2 == 0:\n        print(min(sum, m * n - sum))\n    else:\n        print(sum)", "def graph_traversal(dp):\n    tmp = 0\n    for i in range(n):\n        for j in range(1, m):\n            if dp[i][j - 1] == '*':\n                dp[i][j] = '.'\n            else:\n                dp[i][j] = '*'\n            if dp[i][j] != grid[i][j]:\n                tmp += 1\n        if dp[i][0] != grid[i][0]:\n            tmp += 1\n        if i < n - 1:\n            if dp[i][0] == '*':\n                dp[i + 1][0] = '.'\n            else:\n                dp[i + 1][0] = '*'\n    return tmp\n\ndef calculate(n, m, grid):\n    ans = float('inf')\n    dp = [[0] * m for _ in range(n)]\n    dp[0][0] = '*'\n    ans = min(graph_traversal(dp), ans)\n    if n % 2 == 0 or m % 2 == 0:\n        dp[0][0] = '.'\n        ans = min(graph_traversal(dp), ans)\n    return ans\nT = int(input())\nwhile T:\n    (n, m) = map(int, input().split())\n    grid = []\n    for _ in range(n):\n        grid.append(input())\n    print(calculate(n, m, grid))\n    T -= 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        temp = input()\n        l.append(temp)\n    ans1 = 0\n    ans2 = 0\n    for i in range(len(l)):\n        s = l[i]\n        for j in range(len(s)):\n            if (i + j) % 2 == 0 and s[j] == '.':\n                ans1 = ans1 + 1\n            elif (i + j) % 2 == 1 and s[j] == '*':\n                ans1 = ans1 + 1\n    for i in range(len(l)):\n        s = l[i]\n        for j in range(len(s)):\n            if (i + j) % 2 == 0 and s[j] == '*':\n                ans2 = ans2 + 1\n            elif (i + j) % 2 == 1 and s[j] == '.':\n                ans2 = ans2 + 1\n    if n * m % 2 == 0:\n        print(min(ans1, ans2))\n    elif n * m % 2 == 1:\n        print(ans1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        temp = input()\n        l.append(temp)\n    if n * m % 2 == 0:\n        ans1 = 0\n        for i in range(n):\n            for j in range(m):\n                if i % 2 == 0 and j % 2 == 0 and (l[i][j] == '.') or (i % 2 != 0 and j % 2 == 0 and (l[i][j] == '*')) or (i % 2 == 0 and j % 2 != 0 and (l[i][j] == '*')) or (i % 2 != 0 and j % 2 != 0 and (l[i][j] == '.')):\n                    ans1 += 1\n        ans2 = 0\n        for i in range(n):\n            for j in range(m):\n                if i % 2 == 0 and j % 2 == 0 and (l[i][j] == '*') or (i % 2 != 0 and j % 2 == 0 and (l[i][j] == '.')) or (i % 2 == 0 and j % 2 != 0 and (l[i][j] == '.')) or (i % 2 != 0 and j % 2 != 0 and (l[i][j] == '*')):\n                    ans2 += 1\n        print(min(ans1, ans2))\n    else:\n        ans1 = 0\n        for i in range(n):\n            for j in range(m):\n                if i % 2 == 0 and j % 2 == 0 and (l[i][j] == '.') or (i % 2 != 0 and j % 2 == 0 and (l[i][j] == '*')) or (i % 2 == 0 and j % 2 != 0 and (l[i][j] == '*')) or (i % 2 != 0 and j % 2 != 0 and (l[i][j] == '.')):\n                    ans1 += 1\n        print(ans1)", "def numchanged(grid, N, M, parity):\n    count = 0\n    for i in range(N):\n        for j in range(M):\n            if (i + j) % 2 == parity:\n                if grid[i][j] != '*':\n                    count += 1\n            elif grid[i][j] != '.':\n                count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    (N, M) = map(int, input().split())\n    grid = []\n    for i in range(N):\n        grid.append(input())\n    if N % 2 == 1 and M % 2 == 1:\n        print(numchanged(grid, N, M, 0))\n        continue\n    else:\n        first = numchanged(grid, N, M, 0)\n        second = numchanged(grid, N, M, 1)\n        print(min(first, second))", "tc = int(input())\nfor t in range(0, tc):\n    (N, M) = input().split()\n    (N, M) = (int(N), int(M))\n    inparr = []\n    sol1 = []\n    sol2 = []\n    for n in range(0, N):\n        ia = []\n        s1a = []\n        s2a = []\n        for m in range(0, M):\n            ia.append('-1')\n            if (n + m) % 2 == 0:\n                s1a.append('*')\n                s2a.append('.')\n            else:\n                s1a.append('.')\n                s2a.append('*')\n        inparr.append(ia)\n        sol1.append(s1a)\n        sol2.append(s2a)\n    ans1 = 0\n    ans2 = 0\n    for s in range(0, N):\n        S = input()\n        for l in range(0, len(S)):\n            temp = S[l]\n            if sol1[s][l] != temp:\n                ans1 += 1\n            if sol2[s][l] != temp:\n                ans2 += 1\n            inparr[s][l] = temp\n    if N % 2 != 0 and M % 2 != 0:\n        print(ans1)\n    elif ans1 > ans2:\n        print(ans2)\n    else:\n        print(ans1)", "t = int(input())\narr1 = [['*', '.', '*', '.', '*', '.', '*', '.', '*', '.', '*'], ['.', '*', '.', '*', '.', '*', '.', '*', '.', '*', '.']]\narr2 = [['.', '*', '.', '*', '.', '*', '.', '*', '.', '*', '.'], ['*', '.', '*', '.', '*', '.', '*', '.', '*', '.', '*']]\nfor i in range(t):\n    (n, m) = map(int, input().split(' '))\n    count1 = 0\n    count2 = 0\n    if n % 2 == 0 or m % 2 == 0:\n        for j in range(n):\n            temp = input()\n            arrInput = list(temp)\n            for k in range(m):\n                var = int(j % 2)\n                if not arr1[var][k] == arrInput[k]:\n                    count1 += 1\n                if not arr2[var][k] == arrInput[k]:\n                    count2 += 1\n        print(min(count1, count2))\n    else:\n        for j in range(n):\n            temp = input()\n            arrInput = list(temp)\n            for k in range(m):\n                var = int(j % 2)\n                if arr1[var][k] != arrInput[k]:\n                    count1 += 1\n        print(count1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        temp = input()\n        arr.append(list(temp))\n    arr1 = [['.' for i in range(m)] for j in range(n)]\n    arr2 = [['*' for i in range(m)] for j in range(n)]\n    flag = True\n    for i in range(0, n, 1):\n        if flag:\n            for j in range(0, m, 2):\n                arr1[i][j] = '*'\n                arr2[i][j] = '.'\n            flag = False\n        else:\n            for j in range(1, m, 2):\n                arr1[i][j] = '*'\n                arr2[i][j] = '.'\n            flag = True\n    cnt1 = 0\n    cnt2 = 0\n    if n % 2 == 0 or m % 2 == 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] != arr1[i][j]:\n                    cnt1 += 1\n                if arr[i][j] != arr2[i][j]:\n                    cnt2 += 1\n        print(min(cnt1, cnt2))\n    else:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] != arr1[i][j]:\n                    cnt1 += 1\n        print(cnt1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m % 2 == 0 or n % 2 == 0:\n        (c1, c2) = (0, 0)\n        for i in range(n):\n            s = input()\n            for j in range(m):\n                if i % 2 == 0 and j % 2 == 0 or (i % 2 == 1 and j % 2 == 1):\n                    if s[j] == '.':\n                        c1 += 1\n                    else:\n                        c2 += 1\n                elif s[j] == '*':\n                    c1 += 1\n                else:\n                    c2 += 1\n        print(min(c1, c2))\n    else:\n        c = 0\n        for i in range(n):\n            s = input()\n            for j in range(m):\n                if i % 2 == 0 and j % 2 == 0 or (i % 2 == 1 and j % 2 == 1):\n                    if s[j] == '.':\n                        c += 1\n                elif s[j] == '*':\n                    c += 1\n        print(c)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        temp = input()\n        arr.append(list(temp))\n    arr1 = [['.' for i in range(m)] for j in range(n)]\n    arr2 = [['*' for i in range(m)] for j in range(n)]\n    flag = True\n    for i in range(0, n, 1):\n        if flag:\n            for j in range(0, m, 2):\n                arr1[i][j] = '*'\n                arr2[i][j] = '.'\n            flag = False\n        else:\n            for j in range(1, m, 2):\n                arr1[i][j] = '*'\n                arr2[i][j] = '.'\n            flag = True\n    cnt1 = 0\n    cnt2 = 0\n    if n % 2 == 0 or m % 2 == 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] != arr1[i][j]:\n                    cnt1 += 1\n                if arr[i][j] != arr2[i][j]:\n                    cnt2 += 1\n        print(min(cnt1, cnt2))\n    else:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] != arr1[i][j]:\n                    cnt1 += 1\n        print(cnt1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        temp = input()\n        arr.append(list(temp))\n    arr1 = [['.' for i in range(m)] for j in range(n)]\n    arr2 = [['*' for i in range(m)] for j in range(n)]\n    flag = True\n    for i in range(0, n, 1):\n        if flag:\n            for j in range(0, m, 2):\n                arr1[i][j] = '*'\n                arr2[i][j] = '.'\n            flag = False\n        else:\n            for j in range(1, m, 2):\n                arr1[i][j] = '*'\n                arr2[i][j] = '.'\n            flag = True\n    cnt1 = 0\n    cnt2 = 0\n    if n % 2 == 0 or m % 2 == 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] != arr1[i][j]:\n                    cnt1 += 1\n                if arr[i][j] != arr2[i][j]:\n                    cnt2 += 1\n        print(min(cnt1, cnt2))\n    else:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] != arr1[i][j]:\n                    cnt1 += 1\n        print(cnt1)", "def co(li):\n    count = 0\n    for i in range(len(li)):\n        for j in range(len(li[i])):\n            if li[i][j] == '*':\n                count += 1\n    return count\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    li = []\n    for i in range(n):\n        s = input()\n        li.append(s)\n    li1 = []\n    li2 = []\n    (s1, s2) = ('', '')\n    for i in range(m):\n        if i & 1 == 0:\n            s1 += '*'\n            s2 += '.'\n        else:\n            s1 += '.'\n            s2 += '*'\n    for i in range(n):\n        if i & 1 == 0:\n            li1.append(s1)\n            li2.append(s2)\n        else:\n            li1.append(s2)\n            li2.append(s1)\n    (c1, c2) = (0, 0)\n    (star1, star2) = (co(li1), co(li2))\n    if star1 > star2:\n        ans = 0\n        for i in range(n):\n            for j in range(m):\n                if li[i][j] != li1[i][j]:\n                    ans += 1\n        print(ans)\n    elif star2 > star1:\n        ans = 0\n        for i in range(n):\n            for j in range(m):\n                if li[i][j] != li2[i][j]:\n                    ans += 1\n        print(ans)\n    else:\n        for i in range(n):\n            for j in range(m):\n                if li[i][j] != li1[i][j]:\n                    c1 += 1\n                if li[i][j] != li2[i][j]:\n                    c2 += 1\n        print(min(c1, c2))", "for _ in range(int(input())):\n    s = []\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        s.append(input())\n    c = 0\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and s[i][j] != '*' or ((i + j) % 2 == 1 and s[i][j] != '.'):\n                c += 1\n    ans = c\n    if n * m % 2 == 0:\n        c = 0\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0 and s[i][j] != '.' or ((i + j) % 2 == 1 and s[i][j] != '*'):\n                    c += 1\n    print(min(ans, c))", "for _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    li = []\n    for i in range(r):\n        li.append(list(input()))\n    ch1 = 0\n    ch2 = 0\n    if r % 2 == 0 or c % 2 == 0:\n        for i in range(r):\n            for j in range(c):\n                if (i + j) % 2 == 0:\n                    if li[i][j] == '.':\n                        ch1 += 1\n                    else:\n                        ch2 += 1\n                elif li[i][j] == '*':\n                    ch1 += 1\n                else:\n                    ch2 += 1\n        print(min(ch1, ch2))\n    else:\n        for i in range(r):\n            for j in range(c):\n                if (i + j) % 2 == 0:\n                    if li[i][j] == '.':\n                        ch1 += 1\n                elif li[i][j] == '*':\n                    ch1 += 1\n        print(ch1)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        u = list(input())\n        l.append(u)\n    (ans1, ans2) = (0, 0)\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and l[i][j] == '.':\n                ans1 += 1\n            elif (i + j) % 2 == 1 and l[i][j] == '*':\n                ans1 += 1\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and l[i][j] == '*':\n                ans2 += 1\n            elif (i + j) % 2 == 1 and l[i][j] == '.':\n                ans2 += 1\n    if n * m % 2 == 0:\n        print(min(ans1, ans2))\n    else:\n        print(ans1)", "for fgh in range(int(input())):\n    arr = []\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        arr.append(list(input()))\n    c1 = 0\n    c2 = 0\n    count = 0\n    for i in range(len(arr)):\n        if i % 2 == 0:\n            for j in range(1, len(arr[i]), 2):\n                if arr[i][j] == '*':\n                    count += 1\n        else:\n            for j in range(0, len(arr[i]), 2):\n                if arr[i][j] == '*':\n                    count += 1\n    c1 = count\n    count = 0\n    for i in range(len(arr)):\n        if i % 2 != 0:\n            for j in range(1, len(arr[i]), 2):\n                if arr[i][j] == '*':\n                    count += 1\n        else:\n            for j in range(0, len(arr[i]), 2):\n                if arr[i][j] == '*':\n                    count += 1\n    c2 = count\n    if n * m % 2 == 0:\n        req = n * m / 2\n        print(min(int(req - c1 + c2), int(req - c2 + c1)))\n    else:\n        req = n * m // 2 + 1\n        print(int(req - c2 + c1))", "def fn(N, M, L):\n    array = [['*', '.', '*', '.', '*', '.', '*', '.', '*', '.'], ['.', '*', '.', '*', '.', '*', '.', '*', '.', '*']]\n    if N * M % 2 == 0:\n        count1 = 0\n        count2 = 0\n        for i in range(N):\n            if i % 2 == 0:\n                for j in range(M):\n                    if L[i][j] != array[0][j]:\n                        count1 += 1\n            else:\n                for j in range(M):\n                    if L[i][j] != array[1][j]:\n                        count1 += 1\n        for i in range(N):\n            if i % 2 == 0:\n                for j in range(M):\n                    if L[i][j] != array[1][j]:\n                        count2 += 1\n            else:\n                for j in range(M):\n                    if L[i][j] != array[0][j]:\n                        count2 += 1\n        return min(count1, count2)\n    else:\n        count = 0\n        for i in range(N):\n            if i % 2 == 0:\n                for j in range(M):\n                    if L[i][j] != array[0][j]:\n                        count += 1\n            else:\n                for j in range(M):\n                    if L[i][j] != array[1][j]:\n                        count += 1\n        return count\nt = int(input())\nfor i in range(t):\n    (N, M) = map(int, input().strip().split())\n    List = []\n    for j in range(N):\n        List.append(list(input()))\n    print(fn(N, M, List))", "import sys\nimport math\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n\n    def solve(n, m, arr):\n        stars = [0, 0]\n        dots = [0, 0]\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if arr[i][j] == '*':\n                        stars[0] += 1\n                    else:\n                        dots[0] += 1\n                elif arr[i][j] == '*':\n                    stars[1] += 1\n                else:\n                    dots[1] += 1\n        half = n * m // 2\n        if n * m % 2 == 1:\n            ans = dots[0] + stars[1]\n        else:\n            ans1 = abs(half - dots[0]) + abs(half - stars[1])\n            ans2 = abs(half - dots[1]) + abs(half - stars[0])\n            ans = min(ans1, ans2)\n        return ans\n    (n, m) = map(int, input().split())\n    arr = ['' for _ in range(n)]\n    for i in range(n):\n        arr[i] = input()\n    print(solve(n, m, arr))", "t = int(input())\nfor i in range(t):\n    ar = []\n    [n, m] = list(map(int, input().split()))\n    for j in range(0, n):\n        x = list(map(str, input()))\n        ar.append(x)\n    c = 0\n    d = 0\n    for j in range(n):\n        for k in range(m):\n            if (j + k) % 2 == 0:\n                if ar[j][k] == '.':\n                    c += 1\n                else:\n                    d += 1\n            elif ar[j][k] == '*':\n                c += 1\n            else:\n                d += 1\n    if n % 2 != 0 and m % 2 != 0:\n        print(c)\n    else:\n        print(min(c, d))", "testcases = int(input())\nfor testcase in range(testcases):\n    temparr = input()\n    temparr = temparr.split()\n    r = int(temparr[0])\n    c = int(temparr[1])\n    dp = []\n    temparr = []\n    for i in range(r):\n        tt = []\n        tempstr = input()\n        for j in tempstr:\n            if j == '*':\n                tt.append(1)\n            else:\n                tt.append(0)\n        dp.append(tt[:])\n    oddeven = 0\n    evenodd = 0\n    flag = 0\n    correct = 0\n    for i in range(r):\n        if i & 1:\n            flag = 0\n        else:\n            flag = 1\n        for j in range(c):\n            if flag == 0 and dp[i][j] != 0:\n                evenodd += 1\n                flag = 1\n            elif flag == 1 and dp[i][j] != 1:\n                evenodd += 1\n                flag = 0\n            elif flag == 0:\n                correct += 1\n                flag = 1\n            elif flag == 1:\n                correct += 1\n                flag = 0\n    ans = min(correct, evenodd)\n    if r & 1 and c & 1:\n        print(evenodd)\n    else:\n        print(ans)", "def isValid(x, y):\n    if x >= 0 and x < n and (y >= 0) and (y < m):\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    grid = [list(input()) for i in range(n)]\n    (s1, s2) = (0, 0)\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0:\n                if grid[i][j] == '.':\n                    s1 += 1\n                elif n * m % 2 == 0:\n                    s2 += 1\n            elif grid[i][j] == '*':\n                s1 += 1\n            elif n * m % 2 == 0:\n                s2 += 1\n    if n * m % 2 != 0:\n        s2 = 2 ** 30\n    print(min(s1, s2))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    k = '*.' * (b // 2)\n    p = '.*' * (b // 2)\n    if b % 2 != 0:\n        k += '*'\n        p += '.'\n    t = 0\n    v = 0\n    fg = 0\n    kg = 0\n    for i in range(a):\n        r = input()\n        for j in range(b):\n            if fg == 0:\n                if r[j] != p[j]:\n                    v += 1\n            elif r[j] != k[j]:\n                v += 1\n            if kg == 0:\n                if r[j] != k[j]:\n                    t += 1\n            elif r[j] != p[j]:\n                t += 1\n        fg = (fg + 1) % 2\n        kg = (kg + 1) % 2\n    if a % 2 == 1 and b % 2 == 1:\n        print(t)\n        continue\n    print(min(v, t))", "def isValid(x, y):\n    if x >= 0 and x < n and (y >= 0) and (y < m):\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    grid = [list(input()) for i in range(n)]\n    (s1, s2) = (0, 0)\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0:\n                if grid[i][j] == '.':\n                    s1 += 1\n                elif n * m % 2 == 0:\n                    s2 += 1\n            elif grid[i][j] == '*':\n                s1 += 1\n            elif n * m % 2 == 0:\n                s2 += 1\n    if n * m % 2 != 0:\n        s2 = 2 ** 30\n    print(min(s1, s2))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split())\n    s = ''\n    for i in range(n):\n        if i % 2 != 0:\n            s += input()\n        else:\n            ss = input()\n            s += ss[::-1]\n    i = 0\n    ss = ''\n    ss1 = ''\n    while i <= n * m:\n        ss += '*.'\n        ss1 += '.*'\n        i += 1\n    if i != n * m:\n        ss += '*'\n        ss1 += '.'\n    ans1 = 0\n    ans2 = 0\n    j = 0\n    for i in s:\n        if i != ss[j]:\n            ans1 += 1\n        if i != ss1[j]:\n            ans2 += 1\n        j += 1\n    if n * m % 2 == 0:\n        print(min(ans1, ans2))\n    else:\n        print(ans1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split(' '))\n    fulls = []\n    count1 = 0\n    count2 = 0\n    loji1 = 0\n    loji2 = 0\n    for i in range(n):\n        fulls.append(list(input()))\n    for i in range(n):\n        for j in range(m):\n            if (i + 1) % 2 == 1:\n                if (j + 1) % 2 == 1:\n                    if fulls[i][j] != '*':\n                        count1 += 1\n                    loji1 += 1\n                elif fulls[i][j] != '.':\n                    count1 += 1\n            if (i + 1) % 2 == 0:\n                if (j + 1) % 2 == 0:\n                    if fulls[i][j] != '*':\n                        count1 += 1\n                    loji1 += 1\n                elif fulls[i][j] != '.':\n                    count1 += 1\n    for i in range(n):\n        for j in range(m):\n            if (i + 1) % 2 == 1:\n                if (j + 1) % 2 == 1:\n                    if fulls[i][j] != '.':\n                        count2 += 1\n                else:\n                    if fulls[i][j] != '*':\n                        count2 += 1\n                    loji2 += 1\n            if (i + 1) % 2 == 0:\n                if (j + 1) % 2 == 0:\n                    if fulls[i][j] != '.':\n                        count2 += 1\n                else:\n                    if fulls[i][j] != '*':\n                        count2 += 1\n                    loji2 += 1\n    if loji2 > loji1:\n        print(count2)\n    elif loji1 > loji2:\n        print(count1)\n    else:\n        print(min(count1, count2))", "from sys import stdin, stdout, setrecursionlimit\nimport heapq\nfrom math import gcd, ceil, sqrt\nfrom collections import Counter, deque\nfrom bisect import bisect_left, bisect_right\nfrom itertools import combinations, permutations\nii1 = lambda : int(stdin.readline().strip())\nis1 = lambda : stdin.readline().strip()\niia = lambda : list(map(int, stdin.readline().strip().split()))\nisa = lambda : stdin.readline().strip().split()\nsetrecursionlimit(100000)\nmod = 1000000007\n\ndef getMat(n, m, init):\n    a = b = init\n    mat = []\n    for i in range(n):\n        b = a\n        cur = []\n        for j in range(m):\n            cur.append('*' if b == 0 else '.')\n            b ^= 1\n        a ^= 1\n        mat.append(cur)\n    return mat\n\ndef compare(mat1, mat2):\n    res = 0\n    for i in range(len(mat1)):\n        for j in range(len(mat1[0])):\n            if mat1[i][j] != mat2[i][j]:\n                res += 1\n    return res\n\ndef count(mat):\n    cnt = 0\n    for i in range(len(mat)):\n        for j in range(len(mat[0])):\n            if mat[i][j] == '*':\n                cnt += 1\n    return cnt\ntc = ii1()\nfor _ in range(tc):\n    (n, m) = iia()\n    mat = []\n    for i in range(n):\n        mat.append(list(is1()))\n    mat1 = getMat(n, m, 0)\n    mat2 = getMat(n, m, 1)\n    (cnt1, cnt2) = (count(mat1), count(mat2))\n    if cnt1 == cnt2:\n        res = compare(mat1, mat)\n        res = min(res, compare(mat2, mat))\n    elif cnt1 > cnt2:\n        res = compare(mat1, mat)\n    else:\n        res = compare(mat2, mat)\n    print(res)", "L1 = []\nL2 = []\nfor i in range(10):\n    l1 = []\n    l2 = []\n    for j in range(10):\n        if (i + j) % 2 == 0:\n            l1.append('*')\n            l2.append('.')\n        else:\n            l1.append('.')\n            l2.append('*')\n    L1.append(l1)\n    L2.append(l2)\nt = int(input())\nfor i in range(t):\n    (N, M) = list(map(int, input().split()))\n    NM = []\n    for i in range(N):\n        nm = list(input())\n        NM.append(nm)\n    c1 = 0\n    c2 = 0\n    for i in range(N):\n        for j in range(M):\n            if NM[i][j] != L1[i][j]:\n                c1 += 1\n            if NM[i][j] != L2[i][j]:\n                c2 += 1\n    if N * M % 2 != 0:\n        print(c1)\n    elif c2 < c1:\n        print(c2)\n    else:\n        print(c1)", "import math\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    tisl = math.ceil(n * m / 2)\n    mapls = []\n    f1 = []\n    f2 = []\n    lcount = 0\n    for i in range(n):\n        ss = input()\n        mapls.append(ss)\n        if not i % 2:\n            f1s = '*.' * (int(m) // 2)\n            if m % 2:\n                f1s += '*'\n            f2s = '.*' * (int(m) // 2)\n            if m % 2:\n                f2s += '.'\n        else:\n            f1s = '.*' * (int(m) // 2)\n            if m % 2:\n                f1s += '.'\n            f2s = '*.' * (int(m) // 2)\n            if m % 2:\n                f2s += '*'\n        f1.append(f1s)\n        f2.append(f2s)\n    f1c = 0\n    f2c = 0\n    for i in range(n):\n        for j in range(m):\n            if mapls[i][j] != f1[i][j]:\n                f1c += 1\n            if mapls[i][j] != f2[i][j]:\n                f2c += 1\n    if n % 2 and m % 2:\n        print(f1c)\n    else:\n        print(min(f1c, f2c))", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    matrix = []\n    for n in range(N):\n        input_string = input()\n        matrix.append(input_string)\n    count1 = count2 = 0\n    for row in range(N):\n        for col in range(M):\n            if (row + col) % 2 == 0 and matrix[row][col] != '*':\n                count1 += 1\n            if (row + col) % 2 != 0 and matrix[row][col] != '.':\n                count1 += 1\n    for row in range(N):\n        for col in range(M):\n            if (row + col) % 2 == 0 and matrix[row][col] != '.':\n                count2 += 1\n            if (row + col) % 2 != 0 and matrix[row][col] != '*':\n                count2 += 1\n    if N * M % 2 == 0:\n        print(min(count1, count2))\n    else:\n        print(count1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 0\n    symb = ['*', '.']\n    for i in range(n):\n        s = input()\n        for j in range(m):\n            if s[j] != symb[j % 2]:\n                ans += 1\n        symb = [symb[1], symb[0]]\n    if n * m % 2 == 1:\n        print(ans)\n    else:\n        ans = min(ans, n * m - ans)\n        print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(input()))\n    count1 = 0\n    land1 = 0\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0:\n                if a[i][j] != '.':\n                    count1 += 1\n            else:\n                land1 += 1\n                if a[i][j] != '*':\n                    count1 += 1\n    count2 = 0\n    land2 = 0\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0:\n                land2 += 1\n                if a[i][j] != '*':\n                    count2 += 1\n            elif a[i][j] != '.':\n                count2 += 1\n    if land1 < land2:\n        print(count2)\n    elif land1 > land2:\n        print(count1)\n    else:\n        print(min(count1, count2))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    comp = {'*': '.', '.': '*'}\n    (x, y) = (0, 0)\n    bs = '*'\n    for i in range(n):\n        chk = bs\n        bs = comp[bs]\n        row = input()\n        for j in range(m):\n            x += row[j] != chk\n            y += row[j] == chk\n            chk = comp[chk]\n    print(x if m % 2 and n % 2 else min(x, y))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ref = ['.', '*']\n    (x, y) = (0, 0)\n    bs = 1\n    for i in range(n):\n        chk = bs\n        bs = 1 - bs\n        row = input()\n        for j in range(m):\n            x += row[j] != ref[chk]\n            y += row[j] == ref[chk]\n            chk = 1 - chk\n    print(x if m % 2 and n % 2 else min(x, y))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ref = ['.', '*']\n    (x, y) = (0, 0)\n    bs = 1\n    for i in range(n):\n        chk = bs\n        bs = 1 - bs\n        row = input()\n        for j in range(m):\n            x += row[j] != ref[chk]\n            y += row[j] == ref[chk]\n            chk = 1 - chk\n    print(x if m % 2 and n % 2 else min(x, y))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    comp = {'*': '.', '.': '*'}\n    (x, y) = (0, 0)\n    bs = '*'\n    for i in range(n):\n        chk = bs\n        bs = comp[bs]\n        row = input()\n        for j in range(m):\n            x += row[j] != chk\n            y += row[j] == chk\n            chk = comp[chk]\n    print(x if m % 2 and n % 2 else min(x, y))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    matrix = [list(input()) for _ in range(n)]\n    if n % 2 == 0 or m % 2 == 0:\n        (count1, count2) = (0, 0)\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if matrix[i][j] != '*':\n                        count1 += 1\n                    if matrix[i][j] != '.':\n                        count2 += 1\n                else:\n                    if matrix[i][j] != '*':\n                        count2 += 1\n                    if matrix[i][j] != '.':\n                        count1 += 1\n        print(min(count1, count2))\n    else:\n        count = 0\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if matrix[i][j] != '*':\n                        count += 1\n                elif matrix[i][j] != '.':\n                    count += 1\n        print(count)", "t = int(input())\nfor test in range(t):\n    (n, m) = input().split()\n    (n, m) = (int(n), int(m))\n    l1 = []\n    for i in range(n):\n        l1.append(input())\n    total = n * m\n    ans1 = 0\n    ans2 = 0\n    for i in range(n):\n        for j in range(m):\n            if i + j & 1:\n                if l1[i][j] == '.':\n                    ans2 += 1\n                else:\n                    ans1 += 1\n            elif l1[i][j] == '*':\n                ans2 += 1\n            else:\n                ans1 += 1\n    if total & 1:\n        print(ans1)\n    else:\n        print(min(ans1, ans2))", "from math import ceil\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    matrix = [list(input()) for _ in range(n)]\n    if n % 2 == 0 or m % 2 == 0:\n        (count1, count2) = (0, 0)\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if matrix[i][j] != '*':\n                        count1 += 1\n                    if matrix[i][j] != '.':\n                        count2 += 1\n                else:\n                    if matrix[i][j] != '*':\n                        count2 += 1\n                    if matrix[i][j] != '.':\n                        count1 += 1\n        print(min(count1, count2))\n    else:\n        count = 0\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if matrix[i][j] != '*':\n                        count += 1\n                elif matrix[i][j] != '.':\n                    count += 1\n        print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    arr = []\n    for i in range(n):\n        s = input()\n        arr.append(s)\n    (o, e) = (0, 0)\n    for i in range(n):\n        for j in range(m):\n            if i % 2 == 0 and j % 2 == 0 and (arr[i][j] == '*'):\n                e += 1\n            if i % 2 == 0 and j % 2 == 1 and (arr[i][j] == '.'):\n                e += 1\n            if i % 2 == 1 and j % 2 == 0 and (arr[i][j] == '.'):\n                e += 1\n            if i % 2 == 1 and j % 2 == 1 and (arr[i][j] == '*'):\n                e += 1\n            if i % 2 == 0 and j % 2 == 0 and (arr[i][j] == '.'):\n                o += 1\n            if i % 2 == 0 and j % 2 == 1 and (arr[i][j] == '*'):\n                o += 1\n            if i % 2 == 1 and j % 2 == 0 and (arr[i][j] == '*'):\n                o += 1\n            if i % 2 == 1 and j % 2 == 1 and (arr[i][j] == '.'):\n                o += 1\n    if n % 2 and m % 2:\n        print(o)\n    else:\n        print(min(o, e))", "def first_water(n):\n    return ''.join(['.' if i % 2 == 0 else '*' for i in range(n)])\n\ndef first_land(n):\n    return ''.join(['.' if i % 2 == 1 else '*' for i in range(n)])\n\ndef compare(seq1, seq2):\n    return sum((1 for (a, b) in zip(seq1, seq2) if a != b))\nfor _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    S = []\n    for l in range(N):\n        S.append(input())\n    water = first_water(M)\n    land = first_land(M)\n    cntwater = sum((1 for i in water if i == '*'))\n    cntland = sum((1 for i in land if i == '*'))\n    res1 = 0\n    cnt1 = 0\n    for line in range(N):\n        if line % 2 == 0:\n            res1 += compare(S[line], water)\n            cnt1 += cntwater\n        else:\n            res1 += compare(S[line], land)\n            cnt1 += cntland\n    res2 = 0\n    cnt2 = 0\n    for line in range(N):\n        if line % 2 == 0:\n            res2 += compare(S[line], land)\n            cnt2 += cntland\n        else:\n            res2 += compare(S[line], water)\n            cnt2 += cntwater\n    if cnt1 < cnt2:\n        print(res2)\n    elif cnt1 == cnt2:\n        print(min(res1, res2))\n    else:\n        print(res1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    mat = []\n    for _ in range(n):\n        mat.append(input())\n    if m * n % 2 == 0:\n        c1 = 0\n        for i in range(n):\n            for j in range(m):\n                if i % 2 == 0:\n                    if j % 2 == 0:\n                        if mat[i][j] == '*':\n                            c1 += 1\n                    if j % 2 == 1:\n                        if mat[i][j] == '.':\n                            c1 += 1\n                else:\n                    if j % 2 == 0:\n                        if mat[i][j] == '.':\n                            c1 += 1\n                    if j % 2 == 1:\n                        if mat[i][j] == '*':\n                            c1 += 1\n        c2 = 0\n        for i in range(n):\n            for j in range(m):\n                if i % 2 == 1:\n                    if j % 2 == 0:\n                        if mat[i][j] == '*':\n                            c2 += 1\n                    if j % 2 == 1:\n                        if mat[i][j] == '.':\n                            c2 += 1\n                else:\n                    if j % 2 == 0:\n                        if mat[i][j] == '.':\n                            c2 += 1\n                    if j % 2 == 1:\n                        if mat[i][j] == '*':\n                            c2 += 1\n        print(min(c1, c2))\n    else:\n        c2 = 0\n        for i in range(n):\n            for j in range(m):\n                if i % 2 == 1:\n                    if j % 2 == 0:\n                        if mat[i][j] == '*':\n                            c2 += 1\n                    if j % 2 == 1:\n                        if mat[i][j] == '.':\n                            c2 += 1\n                else:\n                    if j % 2 == 0:\n                        if mat[i][j] == '.':\n                            c2 += 1\n                    if j % 2 == 1:\n                        if mat[i][j] == '*':\n                            c2 += 1\n        print(c2)", "def cnt(m):\n    (p, q) = ([0, 0], [0, 0])\n    for (i, a) in enumerate(m):\n        for (j, e) in enumerate(a):\n            if e == '*':\n                if (i + j) % 2:\n                    p[0] += 1\n                else:\n                    q[0] += 1\n            elif (i + j) % 2:\n                p[1] += 1\n            else:\n                q[1] += 1\n    return (p, q)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    mat = []\n    for _ in range(n):\n        mat.append(input())\n    (p, q) = cnt(mat)\n    z = n * m\n    if z % 2 == 1:\n        (a, b) = (n // 2, m // 2)\n        x = (a + 1) * (b + 1) + a * b\n        y = z - x\n        op = x - q[0] + y - p[1]\n    else:\n        e = m if n % 2 else n\n        o = z // e\n        x = e // 2 * o\n        a = 2 * x - (q[0] + p[1])\n        b = 2 * x - (p[0] + q[1])\n        op = min(a, b)\n    print(op)", "def compute(row, column):\n    count = 0\n    for i in range(n):\n        column = row\n        for j in range(m):\n            if arr[i][j] != column:\n                count += 1\n            if column == '*':\n                column = '.'\n            else:\n                column = '*'\n        if row == '*':\n            row = '.'\n        else:\n            row = '*'\n    return count\ntest_case = int(input())\nwhile test_case:\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(input())\n    if n % 2 == 1 and m % 2 == 1:\n        count1 = compute('*', '*')\n        print(count1)\n    else:\n        count1 = compute('*', '*')\n        count2 = compute('.', '.')\n        print(min(count1, count2))\n    test_case -= 1", "def build(n, m, matrix):\n    if n * m % 2 == 0:\n        ans1 = 0\n        ans2 = 0\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if matrix[i][j] != '*':\n                        ans1 += 1\n                    if matrix[i][j] != '.':\n                        ans2 += 1\n                else:\n                    if matrix[i][j] != '.':\n                        ans1 += 1\n                    if matrix[i][j] != '*':\n                        ans2 += 1\n        return min(ans1, ans2)\n    else:\n        ans = 0\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    if matrix[i][j] != '*':\n                        ans += 1\n                elif matrix[i][j] != '.':\n                    ans += 1\n        return ans\ncases = int(input())\nfor v in range(cases):\n    (n, m) = map(int, input().strip().split())\n    matrix = []\n    for i in range(n):\n        a = list(input())\n        matrix.append(a)\n    print(build(n, m, matrix))", "def fun(x, n, m):\n    a = 0\n    b = 0\n    if m % 2 == 1 and n % 2 == 1:\n        for i in range(len(x)):\n            for ii in range(len(x[0])):\n                if (i + ii) % 2 == 0:\n                    if x[i][ii] == '*':\n                        a += 1\n                    else:\n                        b += 1\n                elif x[i][ii] == '.':\n                    a += 1\n                else:\n                    b += 1\n        print(b)\n        return\n    elif m != 1 and n != 1:\n        for i in range(len(x)):\n            for ii in range(len(x[0])):\n                if (i + ii) % 2 == 0:\n                    if x[i][ii] == '*':\n                        a += 1\n                    else:\n                        b += 1\n                elif x[i][ii] == '.':\n                    a += 1\n                else:\n                    b += 1\n        print(min(a, b))\n        return\nfor __ in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = []\n    for ___ in range(n):\n        a = input()\n        x.append(a)\n    fun(x, n, m)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        l = list(input())\n        a.append(l)\n    ans1 = 0\n    for i in range(n):\n        for j in range(m):\n            if i + j & 1 and a[i][j] == '.':\n                ans1 += 1\n            if (i + j) % 2 == 0 and a[i][j] == '*':\n                ans1 += 1\n    ans2 = 0\n    for i in range(n):\n        for j in range(m):\n            if i + j & 1 and a[i][j] == '*':\n                ans2 += 1\n            if (i + j) % 2 == 0 and a[i][j] == '.':\n                ans2 += 1\n    if m * n & 1:\n        print(ans2)\n        continue\n    print(min(ans1, ans2))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = []\n    for i in range(n):\n        s.append(input())\n    (cnt, op1, op2) = (0, 0, 0)\n    if n % 2 == 1 and m % 2 == 1:\n        ans = 0\n        for i in range(n):\n            for j in range(m):\n                if cnt % 2 == 0 and s[i][j] != '*':\n                    ans += 1\n                if cnt % 2 == 1 and s[i][j] != '.':\n                    ans += 1\n                cnt += 1\n        print(ans)\n        continue\n    for i in range(n):\n        for j in range(m):\n            if cnt % 2 == 0 and s[i][j] != '*':\n                op1 += 1\n            if cnt % 2 == 1 and s[i][j] != '.':\n                op1 += 1\n            if cnt % 2 == 0 and s[i][j] != '.':\n                op2 += 1\n            if cnt % 2 == 1 and s[i][j] != '*':\n                op2 += 1\n            cnt += 1\n        if m % 2 == 0:\n            cnt += 1\n    print(min(op1, op2))", "for _ in range(int(input())):\n    (n, m) = map(int, input().strip().split())\n    count1 = 0\n    count2 = 0\n    for x in range(n):\n        arr = list(input())\n        for y in range(len(arr)):\n            if (y + x) % 2 == 0:\n                if arr[y] == '.':\n                    count1 += 1\n            if (x + y) % 2 == 1:\n                if arr[y] == '*':\n                    count1 += 1\n        for y in range(len(arr)):\n            if (y + x) % 2 == 0:\n                if arr[y] == '*':\n                    count2 += 1\n            if (x + y) % 2 == 1:\n                if arr[y] == '.':\n                    count2 += 1\n    if n * m % 2 == 0:\n        print(min(count1, count2))\n    else:\n        print(count1)", "for _ in range(int(input())):\n    sum1 = 0\n    (x, y) = map(int, input().split())\n    comp = '*'\n    if y % 2 != 0 and x % 2 != 0:\n        comp = '*'\n        bl = True\n        cnt = 0\n        for i in range(x):\n            s = input()\n            comp = '*'\n            if i % 2 != 0:\n                comp = '.'\n            for j in s:\n                if j != comp:\n                    cnt += 1\n                if bl:\n                    comp = '.'\n                    bl = False\n                else:\n                    comp = '*'\n                    bl = True\n        print(cnt)\n    else:\n        sum1 = 0\n        sum2 = 0\n        for i in range(x):\n            s = input()\n            swap1 = '*'\n            swap2 = '.'\n            if i % 2 != 0:\n                (swap1, swap2) = (swap2, swap1)\n            for j in s:\n                if j != swap1:\n                    sum1 += 1\n                if j != swap2:\n                    sum2 += 1\n                (swap1, swap2) = (swap2, swap1)\n        print(min(sum1, sum2))", "try:\n    t = int(input())\n    for _ in range(t):\n        (n, m) = map(int, input().split())\n        arr = []\n        for i in range(n):\n            arr.append(input())\n        total = n * m\n        ans1 = ans2 = 0\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] == '.' and (i + j) % 2 == 0:\n                    ans1 += 1\n                if arr[i][j] == '*' and (i + j) % 2 == 1:\n                    ans1 += 1\n                if arr[i][j] == '*' and (i + j) % 2 == 0:\n                    ans2 += 1\n                if arr[i][j] == '.' and (i + j) % 2 == 1:\n                    ans2 += 1\n        if total % 2 != 0:\n            print(ans1)\n            continue\n        print(min(ans1, ans2))\nexcept:\n    pass", "MOD = 1000000007\n\ndef si():\n    return input()\n\ndef ii():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\n\ndef mi():\n    return map(int, input().split())\n\ndef sout(v):\n    print(v, end=' ')\n\ndef d2b(n):\n    return bin(n).replace('0b', '')\n\ndef twod(n, m, num):\n    return [[num for x in range(m)] for y in range(n)]\n\ndef vow():\n    return ['a', 'e', 'i', 'o', 'u']\n\ndef let():\n    return [chr(i) for i in range(97, 123)]\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef ispow2(x):\n    return x and (not x & x - 1)\n\ndef prime_factors(n):\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return list(factors)\nt = ii()\nwhile t:\n    t -= 1\n    (n, m) = mi()\n    a = []\n    for _ in range(n):\n        a.append(si())\n    if n * m % 2 == 1:\n        c = 0\n        for i in range(n):\n            for j in range(m):\n                if i % 2 == 0 and j % 2 == 0 or (i % 2 == 1 and j % 2 == 1):\n                    if a[i][j] == '.':\n                        c += 1\n                elif a[i][j] == '*':\n                    c += 1\n        print(c)\n    else:\n        c1 = c2 = 0\n        for i in range(n):\n            for j in range(m):\n                if i % 2 == 0 and j % 2 == 1 or (i % 2 == 1 and j % 2 == 0):\n                    if a[i][j] == '.':\n                        c1 += 1\n                elif a[i][j] == '*':\n                    c1 += 1\n        for i in range(n):\n            for j in range(m):\n                if i % 2 == 0 and j % 2 == 0 or (i % 2 == 1 and j % 2 == 1):\n                    if a[i][j] == '.':\n                        c2 += 1\n                elif a[i][j] == '*':\n                    c2 += 1\n        print(min(c1, c2))", "import sys\nMOD = 1000000007\nimport math\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_int():\n    return int(sys.stdin.readline())\n\ndef get_line():\n    return sys.stdin.readline().strip()\n\ndef write_line(out):\n    return sys.stdout.write(str(out) + '\\n')\n\ndef calculate(matrix, start, n, m):\n    count = 0\n    nmatrix = [['.' for i in range(m)] for j in range(n)]\n    flag = start\n    for i in range(m):\n        if flag:\n            nmatrix[0][i] = '*'\n            if matrix[0][i] == '.':\n                count += 1\n        elif matrix[0][i] == '*':\n            count += 1\n        flag ^= 1\n    for i in range(1, n):\n        for j in range(m):\n            if nmatrix[i - 1][j] != '*':\n                nmatrix[i][j] = '*'\n                if matrix[i][j] == '.':\n                    count += 1\n            elif matrix[i][j] == '*':\n                count += 1\n    return count\n\ndef solve():\n    (n, m) = get_ints()\n    matrix = []\n    for i in range(n):\n        matrix.append(list(get_line()))\n    if n * m % 2:\n        return calculate(matrix, 1, n, m)\n    return min(calculate(matrix, 0, n, m), calculate(matrix, 1, n, m))\nt = get_int()\nwhile t:\n    write_line(solve())\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        temp = input()\n        arr.append(list(temp))\n    arr1 = [['.' for i in range(m)] for j in range(n)]\n    arr2 = [['*' for i in range(m)] for j in range(n)]\n    flag = True\n    for i in range(0, n, 1):\n        if flag:\n            for j in range(0, m, 2):\n                arr1[i][j] = '*'\n                arr2[i][j] = '.'\n            flag = False\n        else:\n            for j in range(1, m, 2):\n                arr1[i][j] = '*'\n                arr2[i][j] = '.'\n            flag = True\n    cnt1 = 0\n    cnt2 = 0\n    if n % 2 == 0 or m % 2 == 0:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] != arr1[i][j]:\n                    cnt1 += 1\n                if arr[i][j] != arr2[i][j]:\n                    cnt2 += 1\n        print(min(cnt1, cnt2))\n    else:\n        for i in range(n):\n            for j in range(m):\n                if arr[i][j] != arr1[i][j]:\n                    cnt1 += 1\n        print(cnt1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    land = [0, 0]\n    water = [0, 0]\n    s = [0] * n\n    for i in range(n):\n        s[i] = input()\n        for j in range(m):\n            if s[i][j] == '.':\n                water[(i + j) % 2] += 1\n            else:\n                land[(i + j) % 2] += 1\n    if m * n % 2 == 0:\n        total = m * n // 2\n        ans1 = abs(total - land[0]) + abs(total - water[1])\n        ans2 = abs(total - land[1]) + abs(total - water[0])\n        print(min(ans1, ans2))\n    else:\n        total_land = m * n // 2 + 1\n        total_water = total_land - 1\n        ans = abs(total_land - land[0]) + abs(total_water - water[1])\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        row = input()\n        arr.append(list(row))\n    (mov1, mov2) = (0, 0)\n    total = n * m\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and arr[i][j] == '.':\n                mov1 += 1\n            if (i + j) % 2 != 0 and arr[i][j] == '*':\n                mov1 += 1\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and arr[i][j] == '*':\n                mov2 += 1\n            if (i + j) % 2 != 0 and arr[i][j] == '.':\n                mov2 += 1\n    if total % 2 == 0:\n        print(min(mov1, mov2))\n    else:\n        print(mov1)", "res = [['.', '*', '.', '*', '.', '*', '.', '*', '.', '*'], ['*', '.', '*', '.', '*', '.', '*', '.', '*', '.']]\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    grid = [list(input()) for i in range(n)]\n    if n * m % 2:\n        r1 = 0\n        for i in range(n):\n            for j in range(m):\n                if i % 2 == 0:\n                    if res[1][j] != grid[i][j]:\n                        r1 += 1\n                elif res[0][j] != grid[i][j]:\n                    r1 += 1\n        print(r1)\n    else:\n        r1 = 0\n        for i in range(n):\n            for j in range(m):\n                if i % 2 == 0:\n                    if res[1][j] != grid[i][j]:\n                        r1 += 1\n                elif res[0][j] != grid[i][j]:\n                    r1 += 1\n        print(min(r1, n * m - r1))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    p = []\n    q = []\n    (x, y) = (0, 0)\n    for j in range(b):\n        if j % 2:\n            p.append('*')\n            q.append('.')\n        else:\n            p.append('.')\n            q.append('*')\n    for m in range(a):\n        t = input()\n        t = list(t)\n        if m % 2:\n            x += len([1 for i in range(b) if p[i] != t[i]])\n            y += len([1 for i in range(b) if q[i] != t[i]])\n        else:\n            y += len([1 for i in range(b) if p[i] != t[i]])\n            x += len([1 for i in range(b) if q[i] != t[i]])\n    if a * b % 2 == 0:\n        print(min(x, y))\n    else:\n        print(x)", "test = int(input())\nfor testcase in range(test):\n    li = [int(x) for x in input().split()]\n    (n, m) = (li[0], li[1])\n    arr = []\n    for i in range(n):\n        l = input()\n        arr.append(l)\n    c = 0\n    for i in range(n):\n        if i % 2 == 0:\n            for j in range(m):\n                if j % 2 == 0:\n                    if arr[i][j] == '.':\n                        c += 1\n                elif arr[i][j] == '*':\n                    c += 1\n        else:\n            for j in range(m):\n                if j % 2 == 0:\n                    if arr[i][j] == '*':\n                        c += 1\n                elif arr[i][j] == '.':\n                    c += 1\n    c1 = 0\n    for i in range(n):\n        if i % 2 == 1:\n            for j in range(m):\n                if j % 2 == 0:\n                    if arr[i][j] == '.':\n                        c1 += 1\n                elif arr[i][j] == '*':\n                    c1 += 1\n        else:\n            for j in range(m):\n                if j % 2 == 0:\n                    if arr[i][j] == '*':\n                        c1 += 1\n                elif arr[i][j] == '.':\n                    c1 += 1\n    if n * m % 2 == 0:\n        print(min(c, c1))\n    else:\n        print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(input())\n    (c, c1) = (0, 0)\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and l[i][j] == '.':\n                c += 1\n            if (i + j) % 2 != 0 and l[i][j] == '*':\n                c += 1\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and l[i][j] == '*':\n                c1 += 1\n            if (i + j) % 2 != 0 and l[i][j] == '.':\n                c1 += 1\n    print(c if n * m % 2 != 0 else min(c, c1))", "def posGrid(n, m):\n    if m % 2:\n        g1 = [[''] * m for i in range(n)]\n        for r in range(n):\n            for c in range(m):\n                if (r + c) % 2:\n                    g1[r][c] = '.'\n                else:\n                    g1[r][c] = '*'\n        if n % 2:\n            return [g1]\n        g2 = []\n        for row in g1:\n            g2.append(row[:])\n        for i in range(0, n, 2):\n            (g2[i], g2[i + 1]) = (g2[i + 1], g2[i])\n        return [g1, g2]\n    else:\n        g1 = [[''] * m for i in range(n)]\n        g2 = [[''] * m for i in range(n)]\n        for r in range(n):\n            for c in range(m):\n                if (r + c) % 2:\n                    g1[r][c] = '.'\n                    g2[r][c] = '*'\n                else:\n                    g1[r][c] = '*'\n                    g2[r][c] = '.'\n        return [g1, g2]\n\ndef show(g):\n    for grid in g:\n        for row in grid:\n            print(row)\n        print()\n\ndef solve(grid, n, m):\n    ans = float('inf')\n    for Grid in posGrid(n, m):\n        part = 0\n        for i in range(n):\n            for j in range(m):\n                if grid[i][j] != Grid[i][j]:\n                    part += 1\n        ans = min(ans, part)\n    return ans\nfor case in range(int(input())):\n    (n, m) = map(int, input().split())\n    grid = []\n    for i in range(n):\n        grid.append(input())\n    ans = solve(grid, n, m)\n    print(ans)", "def posGrid(n, m):\n    if m % 2:\n        g1 = [[''] * m for i in range(n)]\n        for r in range(n):\n            for c in range(m):\n                if (r + c) % 2:\n                    g1[r][c] = '.'\n                else:\n                    g1[r][c] = '*'\n        if n % 2:\n            return [g1]\n        g2 = []\n        for row in g1:\n            g2.append(row[:])\n        for i in range(0, n, 2):\n            (g2[i], g2[i + 1]) = (g2[i + 1], g2[i])\n        return [g1, g2]\n    else:\n        g1 = [[''] * m for i in range(n)]\n        g2 = [[''] * m for i in range(n)]\n        for r in range(n):\n            for c in range(m):\n                if (r + c) % 2:\n                    g1[r][c] = '.'\n                    g2[r][c] = '*'\n                else:\n                    g1[r][c] = '*'\n                    g2[r][c] = '.'\n        return [g1, g2]\n\ndef show(g):\n    for grid in g:\n        for row in grid:\n            print(row)\n        print()\n\ndef solve(grid, n, m):\n    ans = float('inf')\n    for Grid in posGrid(n, m):\n        part = 0\n        for i in range(n):\n            for j in range(m):\n                if grid[i][j] != Grid[i][j]:\n                    part += 1\n        ans = min(ans, part)\n    return ans\nfor case in range(int(input())):\n    (n, m) = map(int, input().split())\n    grid = []\n    for i in range(n):\n        grid.append(input())\n    ans = solve(grid, n, m)\n    print(ans)", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log2, ceil\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom bisect import insort\nfrom collections import Counter\nfrom collections import deque\nfrom heapq import heappush, heappop, heapify\nfrom itertools import permutations, combinations\nfrom itertools import accumulate as ac\nmod = int(1000000000.0) + 7\nip = lambda : int(stdin.readline())\ninp = lambda : map(int, stdin.readline().split())\nips = lambda : stdin.readline().rstrip()\nout = lambda x: stdout.write(str(x) + '\\n')\nt = ip()\nfor _ in range(t):\n    (n, m) = inp()\n    arr = []\n    for i in range(n):\n        s = ips()\n        arr.append(s)\n    ans1 = 0\n    for i in range(n):\n        if i & 1 == 0:\n            for j in range(m):\n                if j & 1 == 0:\n                    if arr[i][j] == '*':\n                        pass\n                    else:\n                        ans1 += 1\n                elif arr[i][j] == '.':\n                    pass\n                else:\n                    ans1 += 1\n        else:\n            for j in range(m):\n                if j & 1 == 0:\n                    if arr[i][j] == '.':\n                        pass\n                    else:\n                        ans1 += 1\n                elif arr[i][j] == '*':\n                    pass\n                else:\n                    ans1 += 1\n    ans2 = 0\n    for i in range(n):\n        if i & 1 == 1:\n            for j in range(m):\n                if j & 1 == 0:\n                    if arr[i][j] == '*':\n                        pass\n                    else:\n                        ans2 += 1\n                elif arr[i][j] == '.':\n                    pass\n                else:\n                    ans2 += 1\n        else:\n            for j in range(m):\n                if j & 1 == 0:\n                    if arr[i][j] == '.':\n                        pass\n                    else:\n                        ans2 += 1\n                elif arr[i][j] == '*':\n                    pass\n                else:\n                    ans2 += 1\n    if n & 1 == 1 and m & 1 == 1:\n        ans = ans1\n    else:\n        ans = min(ans1, ans2)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().strip().split()))\n    grid = []\n    for _ in range(n):\n        temp = []\n        temp = input().strip()\n        grid.append(temp)\n    count1 = 0\n    count2 = 0\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0:\n                if grid[i][j] == '.':\n                    count1 += 1\n                else:\n                    count2 += 1\n            elif grid[i][j] == '*':\n                count1 += 1\n            else:\n                count2 += 1\n    if n % 2 == 0 or m % 2 == 0:\n        print(min(count1, count2))\n    else:\n        print(count1)", "import sys\nfrom collections import defaultdict, deque\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\n\ndef f(B):\n    ans1 = ans = 0\n    for i in range(n):\n        for j in range(m):\n            if aa[i][j] != B[i][j]:\n                ans += 1\n    return ans\na = ['*', '.']\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    aa = [input() for _ in range(n)]\n    (s1, s2) = ('', '')\n    (b, c) = ([], [])\n    (x, y) = (0, 1)\n    for i in range(m):\n        s1 += a[x]\n        s2 += a[y]\n        (x, y) = (x ^ 1, y ^ 1)\n    (x, y) = (0, 1)\n    s = [s1, s2]\n    for _ in range(n):\n        b.append(s[x])\n        c.append(s[y])\n        (x, y) = (x ^ 1, y ^ 1)\n    ans = f(b)\n    if n * m % 2 == 0:\n        ans = min(ans, f(c))\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        s = input()\n        a.append(s)\n    if n * m % 2 == 0:\n        c1 = 0\n        for i in range(n):\n            for j in range(len(a[i])):\n                if (i + j) % 2 == 0:\n                    if a[i][j] == '.':\n                        c1 += 1\n                elif a[i][j] == '*':\n                    c1 += 1\n        c2 = 0\n        for i in range(n):\n            for j in range(len(a[i])):\n                if (i + j) % 2 == 0:\n                    if a[i][j] == '*':\n                        c2 += 1\n                elif a[i][j] == '.':\n                    c2 += 1\n        print(min(c1, c2))\n    else:\n        c1 = 0\n        for i in range(n):\n            for j in range(len(a[i])):\n                if (i + j) % 2 == 0:\n                    if a[i][j] == '.':\n                        c1 += 1\n                elif a[i][j] == '*':\n                    c1 += 1\n        print(c1)", "I = input\nt = int(I())\nfor _ in range(t):\n    (n, m) = map(int, I().split())\n    k = n * m\n    c = k // 2\n    for i in range(n):\n        s = I()\n        for j in range(m):\n            c += s[j] == '*' and 1 - (i ^ j) % 2 * 2\n    print(min((c, k - c)[k & 1:]))"]