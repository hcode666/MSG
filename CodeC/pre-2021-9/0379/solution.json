["for _ in range(int(input())):\n    (gh, gm) = map(int, input().split(':'))\n    (bh, bm) = map(int, input().split(':'))\n    dis = float(input())\n    normalwait = 60 * (gh - bh) + (gm - bm)\n    wait = normalwait + dis\n    if 2 * dis <= normalwait:\n        call = normalwait\n    else:\n        call = normalwait + (dis - normalwait) + normalwait / 2\n    print(wait, call + 0.0)", "for _ in range(int(input())):\n    (gh, gm) = map(int, input().split(':'))\n    (bh, bm) = map(int, input().split(':'))\n    dis = float(input())\n    normalwait = 60 * (gh - bh) + (gm - bm)\n    wait = normalwait + dis\n    if 2 * dis <= normalwait:\n        call = normalwait\n    else:\n        call = normalwait + (dis - normalwait) + normalwait / 2\n    print(wait, call + 0.0)", "t = int(input())\nfor i in range(t):\n    t1 = input()\n    t2 = input()\n    t3 = int(input())\n    l1 = t1.split(':')\n    l2 = t2.split(':')\n    t1 = float(l1[0]) * 60.0 + float(l1[1])\n    t2 = float(l2[0]) * 60.0 + float(l2[1])\n    h1 = abs(t1 - t2) + float(t3)\n    print(round(h1, 1), end=' ')\n    h2 = abs(t1 - t2)\n    if 2 * t3 > h2:\n        print(round(t3 + h2 / 2, 1))\n    else:\n        print(round(h2, 1))", "for _ in range(int(input())):\n    (t1h, t1m) = map(int, input().split(':'))\n    (t2h, t2m) = map(int, input().split(':'))\n    distt = int(input())\n    t1 = t1h * 60 + t1m\n    t2 = t2h * 60 + t2m\n    o1 = t1\n    o2 = t2\n    ans1 = t1 - t2 + distt\n    ans2 = 0\n    if t2 + distt + distt <= t1:\n        ans2 = t1 - t2\n    else:\n        t2 = t2 + distt\n        girlmove = t2 - t1\n        ans2 = o1 - o2 + girlmove + (distt - girlmove) / 2\n    ans1 = '{:.1f}'.format(round(ans1, 1))\n    ans2 = '{:.1f}'.format(round(ans2, 1))\n    print(str(ans1) + ' ' + str(ans2))", "for _ in range(int(input())):\n    t1 = input()\n    t2 = input()\n    dist = int(input())\n    (h1, m1) = map(int, t1.split(':'))\n    (h2, m2) = map(int, t2.split(':'))\n    t1 = h1 * 60 + m1\n    t2 = h2 * 60 + m2\n    dif = t1 - t2\n    a1 = dif + dist\n    if dist * 2 < dif:\n        a2 = dif\n    else:\n        a2 = dif + (2 * dist - dif) / 2\n    a1 = a1 * 10 / 10\n    a2 = a2 * 10 / 10\n    print(a1, a2)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    d = int(input())\n    ans1 = float((int(a[:2]) - int(b[:2])) * 60 + (int(a[3:]) - int(b[3:])) + d)\n    k = ans1 - d\n    ans2 = k if 2 * d <= k else d + k / 2\n    print(ans1, ans2)", "T = int(input())\nfor _ in range(T):\n    T1 = input().split(':')\n    T2 = input().split(':')\n    d = float(input())\n    t1 = float(T1[0]) * 60 + float(T1[1])\n    t2 = float(T2[0]) * 60 + float(T2[1])\n    print(t1 - t2 + d, end=' ')\n    if t1 - t2 >= 2 * d:\n        print(t1 - t2)\n    else:\n        print(d + (t1 - t2) / 2)", "T = int(input())\nfor _ in range(T):\n    T1 = input().split(':')\n    T2 = input().split(':')\n    d = float(input())\n    t1 = float(T1[0]) * 60 + float(T1[1])\n    t2 = float(T2[0]) * 60 + float(T2[1])\n    print(t1 - t2 + d, end=' ')\n    if t1 - t2 >= 2 * d:\n        print(t1 - t2)\n    else:\n        print(d + (t1 - t2) / 2)", "T = int(input())\nfor _ in range(T):\n    T1 = input().split(':')\n    T2 = input().split(':')\n    d = float(input())\n    t1 = float(T1[0]) * 60 + float(T1[1])\n    t2 = float(T2[0]) * 60 + float(T2[1])\n    print(t1 - t2 + d, end=' ')\n    if t1 - t2 >= 2 * d:\n        print(t1 - t2)\n    else:\n        print(d + (t1 - t2) / 2)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    d = int(input())\n    ans1 = float((int(a[:2]) - int(b[:2])) * 60 + (int(a[3:]) - int(b[3:])) + d)\n    k = ans1 - d\n    ans2 = k if 2 * d <= k else d + k / 2\n    print(ans1, ans2)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    d = int(input())\n    ans1 = float((int(a[:2]) - int(b[:2])) * 60 + (int(a[3:]) - int(b[3:])) + d)\n    k = ans1 - d\n    ans2 = k if 2 * d <= k else d + k / 2\n    print(ans1, ans2)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    d = int(input())\n    ans1 = float((int(a[:2]) - int(b[:2])) * 60 + (int(a[3:]) - int(b[3:])) + d)\n    k = ans1 - d\n    ans2 = k if 2 * d <= k else d + k / 2\n    print(ans1, ans2)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    d = int(input())\n    ans1 = float((int(a[:2]) - int(b[:2])) * 60 + (int(a[3:]) - int(b[3:])) + d)\n    k = ans1 - d\n    ans2 = k if 2 * d <= k else d + k / 2 if d <= k else d + k / 2\n    print(ans1, ans2)", "for _ in range(int(input())):\n    s1 = input()\n    s2 = input()\n    n = int(input())\n    a = int(s1[0] + s1[1])\n    b = int(s1[3] + s1[4])\n    c = int(s2[0] + s2[1])\n    d = int(s2[3] + s2[4])\n    x = a * 60 + b\n    y = c * 60 + d\n    r = float('%.1f' % (x - y + n))\n    print(r, end=' ')\n    print(float('%.1f' % (x - y))) if 2 * n < x - y else print((2 * n + (x - y)) / 2)", "for _ in range(int(input())):\n    (h1, m1) = map(int, input().split(':'))\n    m1 += 60 * h1\n    (h2, m2) = map(int, input().split(':'))\n    m2 += 60 * h2\n    d = int(input())\n    m = m1 - m2\n    print(float(m + d), end=' ')\n    if m >= 2 * d:\n        print(float(m))\n    else:\n        print(float(d + m / 2))", "t = int(input())\nwhile t:\n    s1 = input()\n    s2 = input()\n    n = int(input())\n    a = int(s1[0] + s1[1])\n    b = int(s1[3] + s1[4])\n    c = int(s2[0] + s2[1])\n    d = int(s2[3] + s2[4])\n    x = a * 60 + b\n    y = c * 60 + d\n    r = float('%.1f' % (x - y + n))\n    print(r, end=' ')\n    print(float('%.1f' % (x - y))) if 2 * n < x - y else print((2 * n + (x - y)) / 2)\n    t -= 1", "for _ in range(int(input())):\n    (h1, m1) = map(int, input().split(':'))\n    m1 += 60 * h1\n    (h2, m2) = map(int, input().split(':'))\n    m2 += 60 * h2\n    d = int(input())\n    m = m1 - m2\n    print(float(m + d), end=' ')\n    if m >= 2 * d:\n        print(float(m))\n    else:\n        print(float(d + m / 2))", "for _ in range(int(input())):\n    (h1, m1) = map(int, input().split(':'))\n    m1 += 60 * h1\n    (h2, m2) = map(int, input().split(':'))\n    m2 += 60 * h2\n    d = int(input())\n    m = m1 - m2\n    print(float(m + d), end=' ')\n    if m >= 2 * d:\n        print(float(m))\n    else:\n        print(float(d + m / 2))", "t = int(input(''))\nfor _ in range(t):\n    t1 = input().split(':')\n    t2 = input().split(':')\n    t12 = (int(t1[0]) - int(t2[0])) * 60 + (int(t1[1]) - int(t2[1]))\n    d = int(input(''))\n    if t12 == 0:\n        print('0.0 0.0')\n    x1 = t12 + d\n    if t12 < 2 * d:\n        x2 = d + t12 / 2\n    else:\n        x2 = t12\n    print('{:.1f} {:.1f}'.format(x1, x2))", "for _ in range(int(input())):\n    (gh, gm) = map(int, input().split(':'))\n    (bh, bm) = map(int, input().split(':'))\n    dis = float(input())\n    normalwait = 60 * (gh - bh) + (gm - bm)\n    wait = normalwait + dis\n    if 2 * dis <= normalwait:\n        call = normalwait\n    else:\n        call = normalwait + (dis - normalwait) + normalwait / 2\n    print(wait, call + 0.0)", "for i in range(int(input())):\n    gf_bus = 0\n    st1 = input()\n    st2 = input()\n    bus_home = int(input())\n    bus_home = float(bus_home)\n    hour1 = int(st1[:2])\n    hour2 = int(st2[:2])\n    min1 = int(st1[3:])\n    min2 = int(st2[3:])\n    if hour1 == hour2:\n        gf_bus = float(min1 - min2)\n    elif min1 >= min2:\n        gf_bus = float((hour1 - hour2) * 60 + (min1 - min2))\n    else:\n        gf_bus = float((hour1 - hour2 - 1) * 60 + (60 - min2) + min1)\n    final_answer = str(gf_bus + bus_home) + ' '\n    if gf_bus > 2 * bus_home:\n        final_answer += str(gf_bus)\n    else:\n        final_answer += str(float((gf_bus + bus_home + bus_home) / 2))\n    print(final_answer)", "for i in range(int(input())):\n    gf_bus = 0\n    st1 = input()\n    st2 = input()\n    bus_home = int(input())\n    bus_home = float(bus_home)\n    hour1 = int(st1[:2])\n    hour2 = int(st2[:2])\n    min1 = int(st1[3:])\n    min2 = int(st2[3:])\n    if hour1 == hour2:\n        gf_bus = float(min1 - min2)\n    elif min1 >= min2:\n        gf_bus = float((hour1 - hour2) * 60 + (min1 - min2))\n    else:\n        gf_bus = float((hour1 - hour2 - 1) * 60 + (60 - min2) + min1)\n    final_answer = str(gf_bus + bus_home) + ' '\n    if gf_bus > 2 * bus_home:\n        final_answer += str(gf_bus)\n    else:\n        final_answer += str(float((gf_bus + bus_home + bus_home) / 2))\n    print(final_answer)", "for i in range(int(input())):\n    gf_bus = 0\n    st1 = input()\n    st2 = input()\n    bus_home = int(input())\n    bus_home = float(bus_home)\n    hour1 = int(st1[:2])\n    hour2 = int(st2[:2])\n    min1 = int(st1[3:])\n    min2 = int(st2[3:])\n    if hour1 == hour2:\n        gf_bus = float(min1 - min2)\n    elif min1 >= min2:\n        gf_bus = float((hour1 - hour2) * 60 + (min1 - min2))\n    else:\n        gf_bus = float((hour1 - hour2 - 1) * 60 + (60 - min2) + min1)\n    final_answer = str(gf_bus + bus_home) + ' '\n    if gf_bus > 2 * bus_home:\n        final_answer += str(gf_bus)\n    else:\n        final_answer += str(float((gf_bus + bus_home + bus_home) / 2))\n    print(final_answer)", "reply = []\nfor _ in range(int(input())):\n    girl = []\n    for i in input().split(':'):\n        girl.append(int(i))\n    chef = []\n    for i in input().split(':'):\n        chef.append(int(i))\n    home = int(input())\n    a = 60 * girl[0] + girl[1] - (60 * chef[0] + chef[1]) + home\n    if 2 * home >= a - home:\n        b = (60 * girl[0] + girl[1] - (60 * chef[0] + chef[1])) / 2 + home\n    else:\n        b = a - home\n    reply.append((a, b))\nfor i in reply:\n    print('{0:.1f}'.format(i[0]), '{0:.1f}'.format(i[1]))", "reply = []\nfor _ in range(int(input())):\n    girl = []\n    for i in input().split(':'):\n        girl.append(int(i))\n    chef = []\n    for i in input().split(':'):\n        chef.append(int(i))\n    home = int(input())\n    a = 60 * girl[0] + girl[1] - (60 * chef[0] + chef[1]) + home\n    if 2 * home >= a - home:\n        b = (60 * girl[0] + girl[1] - (60 * chef[0] + chef[1])) / 2 + home\n    else:\n        b = a - home\n    reply.append((a, b))\nfor i in reply:\n    print('{0:.1f}'.format(i[0]), '{0:.1f}'.format(i[1]))", "reply = []\nfor _ in range(int(input())):\n    girl = []\n    for i in input().split(':'):\n        girl.append(int(i))\n    chef = []\n    for i in input().split(':'):\n        chef.append(int(i))\n    home = int(input())\n    a = 60 * girl[0] + girl[1] - (60 * chef[0] + chef[1]) + home\n    if 2 * home >= a - home:\n        b = (60 * girl[0] + girl[1] - (60 * chef[0] + chef[1])) / 2 + home\n    else:\n        b = a - home\n    reply.append((a, b))\nfor i in reply:\n    print('{0:.1f}'.format(i[0]), '{0:.1f}'.format(i[1]))", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nfor _ in range(get_int()):\n    (h1, m1) = list(map(int, input().split(':')))\n    (h2, m2) = list(map(int, input().split(':')))\n    dist = get_int()\n    (time1, time2) = (h1 * 60 + m1, h2 * 60 + m2)\n    base = time1 - time2\n    plan1 = base + dist\n    plan2 = base\n    if dist * 2 > base:\n        if time1 == time2 + dist:\n            plan2 += dist / 2\n        else:\n            plan2 = dist + base / 2\n    print('%.1f ' % plan1, '%.1f' % plan2)", "t = int(input())\nfor c in range(t):\n    (h1, m1) = list(map(int, input().split(':')))\n    (h2, m2) = list(map(int, input().split(':')))\n    dist = int(input())\n    t1 = h1 * 60 + m1\n    t2 = h2 * 60 + m2\n    p1 = t1 - t2 + dist\n    p2 = t1 - t2\n    if dist * 2 > t1 - t2:\n        if t1 == t2 + dist:\n            p2 += dist / 2\n        else:\n            p2 = dist + (t1 - t2) / 2\n    print(float(p1), float(p2))", "t = int(input())\nfor c in range(t):\n    (h1, m1) = list(map(int, input().split(':')))\n    (h2, m2) = list(map(int, input().split(':')))\n    dist = int(input())\n    t1 = h1 * 60 + m1\n    t2 = h2 * 60 + m2\n    p1 = t1 - t2 + dist\n    p2 = t1 - t2\n    if dist * 2 > t1 - t2:\n        if t1 == t2 + dist:\n            p2 += dist / 2\n        else:\n            p2 = dist + (t1 - t2) / 2\n    print(float(p1), float(p2))", "t = int(input())\nfor c in range(t):\n    (h1, m1) = list(map(int, input().split(':')))\n    (h2, m2) = list(map(int, input().split(':')))\n    dist = int(input())\n    t1 = h1 * 60 + m1\n    t2 = h2 * 60 + m2\n    p1 = t1 - t2 + dist\n    p2 = t1 - t2\n    if dist * 2 > t1 - t2:\n        if t1 == t2 + dist:\n            p2 += dist / 2\n        else:\n            p2 = dist + (t1 - t2) / 2\n    print(float(p1), float(p2))", "t = int(input())\nfor c in range(t):\n    (h1, m1) = list(map(int, input().split(':')))\n    (h2, m2) = list(map(int, input().split(':')))\n    dist = int(input())\n    t1 = h1 * 60 + m1\n    t2 = h2 * 60 + m2\n    p1 = t1 - t2 + dist\n    p2 = t1 - t2\n    if dist * 2 > t1 - t2:\n        if t1 == t2 + dist:\n            p2 += dist / 2\n        else:\n            p2 = dist + (t1 - t2) / 2\n    print(float(p1), float(p2))", "t = int(input())\nfor c in range(t):\n    (h1, m1) = list(map(int, input().split(':')))\n    (h2, m2) = list(map(int, input().split(':')))\n    dist = int(input())\n    t1 = h1 * 60 + m1\n    t2 = h2 * 60 + m2\n    p1 = t1 - t2 + dist\n    p2 = t1 - t2\n    if dist * 2 > t1 - t2:\n        if t1 == t2 + dist:\n            p2 += dist / 2\n        else:\n            p2 = dist + (t1 - t2) / 2\n    print(float(p1), float(p2))", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nt = input()\nfor c in range(0, int(t)):\n    (h1, m1) = list(map(int, input().split(':')))\n    (h2, m2) = list(map(int, input().split(':')))\n    dist = get_int()\n    (time1, time2) = (h1 * 60 + m1, h2 * 60 + m2)\n    base = time1 - time2\n    plan1 = base + dist\n    plan2 = base\n    if dist * 2 > base:\n        if time1 == time2 + dist:\n            plan2 += dist / 2\n        else:\n            plan2 = dist + base / 2\n    print('%.1f ' % plan1, '%.1f' % plan2)", "for _ in range(int(input())):\n    time1 = input()\n    time2 = input()\n    dist = int(input())\n    h1 = int(time1[0]) * 10 + int(time1[1])\n    m1 = int(time1[3]) * 10 + int(time1[4])\n    h2 = int(time2[0]) * 10 + int(time2[1])\n    m2 = int(time2[3]) * 10 + int(time2[4])\n    h = h1 - h2\n    if m1 < m2:\n        m = m1 + 60 - m2\n        h -= 1\n    else:\n        m = m1 - m2\n    t = h * 60 + m\n    t1 = t + dist / 1\n    if 2 * dist <= t:\n        t2 = t / 1\n    else:\n        t2 = dist + t / 2\n    print(str(t1) + ' ' + str(t2))", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nfor _ in range(get_int()):\n    (h1, m1) = list(map(int, input().split(':')))\n    (h2, m2) = list(map(int, input().split(':')))\n    dist = get_int()\n    (time1, time2) = (h1 * 60 + m1, h2 * 60 + m2)\n    base = time1 - time2\n    plan1 = base + dist\n    plan2 = base\n    if dist * 2 > base:\n        if time1 == time2 + dist:\n            plan2 += dist / 2\n        else:\n            plan2 = dist + base / 2\n    print('%.1f ' % plan1, '%.1f' % plan2)", "T = int(input())\n\ndef timediff(t1, t2):\n    hour1 = int(t1[0:2])\n    minute1 = int(t1[3:5])\n    hour2 = int(t2[0:2])\n    minute2 = int(t2[3:5])\n    time1 = hour1 * 60 + minute1\n    time2 = hour2 * 60 + minute2\n    difference = time1 - time2\n    return difference\n\ndef plana(diff, dist):\n    result = diff + dist\n    return result\n\ndef planb(diff, dist):\n    if diff > 2 * dist:\n        result = diff\n    else:\n        result = 0.5 * diff + dist\n    return result\n\ndef process():\n    t1 = input()\n    t2 = input()\n    dist = int(input())\n    diff = timediff(t1, t2)\n    a = plana(diff, dist)\n    b = planb(diff, dist)\n    print('%.1f' % a, end=' ')\n    print('%.1f' % b)\nfor index in range(0, T):\n    process()", "from sys import stdin, stdout\nstdint = lambda : int(stdin.readline())\nstdstr = lambda : stdin.readline().strip()\n\ndef getMins(s):\n    (h, m) = map(int, s.split(':'))\n    return h * 60 + m\nfor _ in range(stdint()):\n    gf = stdstr()\n    chef = stdstr()\n    d = stdint()\n    minsGf = getMins(gf)\n    minsChef = getMins(chef)\n    if 2 * d <= minsGf - minsChef:\n        ans = minsGf - minsChef\n    else:\n        ans = (minsGf - minsChef) / 2 + d\n    print(float(minsGf - minsChef + d), float(ans))", "for _ in range(int(input())):\n    t1 = input().split(':')\n    t2 = input().split(':')\n    dist = float(input())\n    d1 = float((int(t1[0]) - int(t2[0])) * 60)\n    d2 = float(int(t1[1]) - int(t2[1]))\n    x = d1 + d2 + dist\n    if 2 * dist <= d1 + d2:\n        y = d1 + d2\n    else:\n        y = (d1 + d2) / 2 + dist\n    print(x, y)", "for i in range(int(input())):\n    t1 = input()\n    t2 = input()\n    dist = int(input())\n    s1 = int(t1[0]) * 10 + int(t1[1])\n    m1 = int(t1[3]) * 10 + int(t1[4])\n    s2 = int(t2[0]) * 10 + int(t2[1])\n    m2 = int(t2[3]) * 10 + int(t2[4])\n    dif = s1 * 60 + m1 - (s2 * 60 + m2)\n    if dif >= 2 * dist:\n        k = dif\n    else:\n        k = (2 * dist + dif) / 2\n    print('%.1f' % (dif + dist), '%.1f' % k)", "for _ in range(int(input())):\n    (t1, t2) = (input(), input())\n    dist = int(input())\n    (h1, mi1) = (int(t1[0] + t1[1]), int(t1[3] + t1[4]))\n    (h2, mi2) = (int(t2[0] + t2[1]), int(t2[3] + t2[4]))\n    mdiff = mi1 - mi2\n    hdiff = h1 - h2\n    total_A = hdiff * 60 + mdiff + dist\n    if 2 * dist <= hdiff * 60 + mdiff:\n        total_B = hdiff * 60 + mdiff\n    else:\n        total_B = hdiff * 60 + mdiff + (2 * dist - (hdiff * 60 + mdiff)) / 2\n    print('%.1f %.1f' % (total_A, total_B))", "for i in range(int(input())):\n    t1 = input()\n    t2 = input()\n    d = int(input())\n    h = int(t1[:2]) - int(t2[:2])\n    m = int(t1[3:]) - int(t2[3:])\n    a = h * 60 + m\n    a1 = a + d\n    req = d * 2\n    if req <= a:\n        a2 = a\n    else:\n        a2 = a + (req - a) / 2\n    print('{:.1f}'.format(a1), end=' ')\n    print('{:.1f}'.format(a2))", "for i in range(int(input())):\n    t1 = input()\n    t2 = input()\n    d = int(input())\n    h = int(t1[:2]) - int(t2[:2])\n    m = int(t1[3:]) - int(t2[3:])\n    a = h * 60 + m\n    a1 = a + d\n    req = d * 2\n    if req <= a:\n        a2 = a\n    else:\n        a2 = a + (req - a) / 2\n    print('{:.1f}'.format(a1), end=' ')\n    print('{:.1f}'.format(a2))", "for _ in range(int(input())):\n    (h1, m1) = map(int, input().split(':'))\n    (h2, m2) = map(int, input().split(':'))\n    dist = int(input())\n    ans = []\n    diff = (h1 - h2) * 60 + (m1 - m2)\n    ans.append(float(diff + dist))\n    if 2 * dist <= diff:\n        ans.append(diff)\n    else:\n        temp = diff + (2 * dist - diff) / 2\n        ans.append(temp)\n    print('{:.1f}'.format(ans[0]), end=' ')\n    print('{:.1f}'.format(ans[1]))", "def solve(ts1, ts2, dist):\n    t1 = int(ts1[:2]) * 60 + int(ts1[3:])\n    t2 = int(ts2[:2]) * 60 + int(ts2[3:])\n    time1 = t1 - t2 + dist\n    time2 = t1 - t2 if dist * 2 <= t1 - t2 else (t1 - t2) / 2 + dist\n    print('{:.1f}'.format(time1), end=' ')\n    print('{:.1f}'.format(time2))\nfor _ in range(int(input())):\n    ts1 = input()\n    ts2 = input()\n    dist = int(input())\n    solve(ts1, ts2, dist)", "def gf(a, b, c, d, dist):\n    a1 = 60 * a + b\n    a2 = 60 * c + d\n    print((a1 - a2 + dist) / 1.0, end=' ')\n    if a1 - a2 >= 2 * dist:\n        print((a1 - a2) / 1.0)\n    else:\n        print(((a1 - a2) / 2 + dist) / 1.0)\nt = int(input())\nfor i in range(t):\n    s1 = input()\n    a = int(s1[:2])\n    b = int(s1[3:])\n    s2 = input()\n    c = int(s2[:2])\n    d = int(s2[3:])\n    dist = int(input())\n    gf(a, b, c, d, dist)", "t = int(input())\nfor i in range(t):\n    t1 = input()\n    t2 = input()\n    dist = int(input())\n    s1 = int(t1[0]) * 10 + int(t1[1])\n    m1 = int(t1[3]) * 10 + int(t1[4])\n    s2 = int(t2[0]) * 10 + int(t2[1])\n    m2 = int(t2[3]) * 10 + int(t2[4])\n    diff = s1 * 60 + m1 - (s2 * 60 + m2)\n    if diff >= 2 * dist:\n        k = diff\n    else:\n        k = (2 * dist + diff) / 2\n    print('%.1f' % (diff + dist), '%.1f' % k)", "t = int(input())\nfor i in range(t):\n    t1 = input()\n    t2 = input()\n    dist = int(input())\n    s1 = int(t1[0]) * 10 + int(t1[1])\n    m1 = int(t1[3]) * 10 + int(t1[4])\n    s2 = int(t2[0]) * 10 + int(t2[1])\n    m2 = int(t2[3]) * 10 + int(t2[4])\n    diff = s1 * 60 + m1 - (s2 * 60 + m2)\n    if diff >= 2 * dist:\n        k = diff\n    else:\n        k = (2 * dist + diff) / 2\n    print('%.1f' % (diff + dist), '%.1f' % k)", "for _ in range(int(input())):\n    t1 = list(map(int, input().split(':')))\n    t2 = list(map(int, input().split(':')))\n    d = int(input())\n    if int(t1[1]) >= int(t2[1]):\n        h = abs(int(t1[0]) - int(t2[0])) * 60\n        m = abs(int(t1[1]) - int(t2[1]))\n    else:\n        h = abs(int(t1[0]) - int(t2[0])) * 60 - 60\n        m = abs(60 + int(t1[1]) - int(t2[1]))\n    print('%.1f' % (h + m + d), end=' ')\n    print('%.1f' % max(h + m, h + m + (2 * d - h - m) / 2))", "for _ in range(int(input())):\n    t1 = list(map(int, input().split(':')))\n    t2 = list(map(int, input().split(':')))\n    d = int(input())\n    if int(t1[1]) >= int(t2[1]):\n        h = abs(int(t1[0]) - int(t2[0])) * 60\n        m = abs(int(t1[1]) - int(t2[1]))\n    else:\n        h = abs(int(t1[0]) - int(t2[0])) * 60 - 60\n        m = abs(60 + int(t1[1]) - int(t2[1]))\n    print('%.1f' % (h + m + d), end=' ')\n    print('%.1f' % max(h + m, h + m + (2 * d - h - m) / 2))", "t = int(input())\nfor i in range(t):\n    t1 = [int(x) for x in input().split(':')]\n    t2 = [int(x) for x in input().split(':')]\n    dist = int(input())\n    a1 = t1[0] * 60 + t1[1]\n    a2 = t2[0] * 60 + t2[1]\n    diff = a1 - a2\n    print('%.1f' % float(diff + dist), end=' ')\n    if 2 * dist <= diff:\n        print('%.1f' % float(diff))\n    else:\n        print('%.1f' % (diff / 2 + dist))", "t = int(input())\nfor i in range(t):\n    t1 = [int(x) for x in input().split(':')]\n    t2 = [int(x) for x in input().split(':')]\n    dist = int(input())\n    a1 = t1[0] * 60 + t1[1]\n    a2 = t2[0] * 60 + t2[1]\n    diff = a1 - a2\n    print('%.1f' % float(diff + dist), end=' ')\n    if 2 * dist <= diff:\n        print('%.1f' % float(diff))\n    else:\n        print('%.1f' % (diff / 2 + dist))", "for _ in range(int(input())):\n    time1 = list(map(int, input().split(':')))\n    time2 = list(map(int, input().split(':')))\n    dist = float(input())\n    a = float(time1[0] * 60 + time1[1] - time2[0] * 60 - time2[1])\n    x = dist + a\n    if 2 * dist <= a:\n        y = a\n    else:\n        y = a / 2 + dist\n    print(x, y)", "for _ in range(int(input())):\n    t1 = input()\n    t2 = input()\n    dist = int(input())\n    t12 = t1.split(':')\n    t22 = t2.split(':')\n    t1f = int(t12[0]) * 60 + int(t12[1])\n    t2f = int(t22[0]) * 60 + int(t22[1])\n    tdif = t1f - t2f\n    ta = tdif + dist\n    if tdif > 2 * dist:\n        print(ta / 1, tdif / 1)\n    else:\n        tf = dist - tdif\n        tx = (dist - tf) / 2\n        tff = tf + tx + tdif\n        print(ta / 1, tff)", "for _ in range(int(input())):\n    time1 = list(map(int, input().split(':')))\n    time2 = list(map(int, input().split(':')))\n    dist = float(input())\n    a = float(time1[0] * 60 + time1[1] - time2[0] * 60 - time2[1])\n    x = dist + a\n    if 2 * dist <= a:\n        y = a\n    else:\n        y = a / 2 + dist\n    print(x, y)", "from datetime import datetime\nfor _ in range(int(input())):\n    t1 = input()\n    t2 = input()\n    d = int(input())\n    time_format = '%H:%M'\n    t1 = datetime.strptime(t1, time_format)\n    t2 = datetime.strptime(t2, time_format)\n    diff = (t1 - t2).seconds / 60\n    print(diff + d, end=' ')\n    if diff >= d * 2:\n        print(diff)\n    else:\n        print(diff / 2 + d)", "for t in range(int(input())):\n    t1 = list(map(int, input().split(':')))\n    t2 = list(map(int, input().split(':')))\n    d = float(input())\n    a = float(t1[0] * 60 + t1[1] - t2[0] * 60 - t2[1])\n    p1 = a + d\n    if 2 * d <= a:\n        p2 = a\n    else:\n        p2 = a / 2 + d\n    print(p1, p2)", "for t in range(int(input())):\n    t1 = input()\n    t2 = input()\n    d = int(input())\n    a = int(t1[:2]) * 60 + int(t1[3:]) - int(t2[:2]) * 60 - int(t2[3:])\n    p1 = float(a + d)\n    p2 = 0\n    if 2 * d <= a:\n        p2 = float(a)\n    else:\n        p2 = float(a / 2 + d)\n    print(p1, p2)", "from time import *\nfor _ in range(int(input())):\n    t1 = list(map(int, input().split(':')))\n    t1 = t1[0] * 60 + t1[1]\n    t2 = list(map(int, input().split(':')))\n    t2 = t2[0] * 60 + t2[1]\n    d = float(input())\n    x = float(t1 - t2)\n    if 2 * d < x:\n        print(round(d + x, 1), round(x, 1))\n    else:\n        print(round(d + x, 1), round(d + x / 2, 1))", "for _ in range(int(input())):\n    time_gf = input()\n    time_chef = input()\n    dist = int(input())\n    time_gf = int(time_gf[:2]) * 60 + int(time_gf[3:])\n    time_chef = int(time_chef[:2]) * 60 + int(time_chef[3:])\n    plan1 = float(time_gf - time_chef + dist)\n    if time_gf >= time_chef + dist + dist:\n        print(plan1, float(time_gf - time_chef))\n    elif time_gf <= time_chef + dist:\n        time_apart = time_gf - time_chef\n        print(plan1, float(dist + time_apart / 2))\n    else:\n        z = time_gf - time_chef\n        s = z - dist\n        f = dist - s\n        print(plan1, z + f / 2)", "tst = int(input())\nfor i in range(tst):\n    a = input()\n    b = input()\n    d = int(input())\n    t1 = int(a[0] + a[1]) * 60 + int(a[3] + a[4])\n    t2 = int(b[0] + b[1]) * 60 + int(b[3] + b[4])\n    a1 = float(t1 - t2 + d)\n    if 2 * d <= t1 - t2:\n        a2 = t1 - t2\n    elif t1 - t2 < 2 * d:\n        a2 = (t1 - t2 + d * 2) / 2\n    print(a1, float(a2))", "for _ in range(int(input())):\n    t1 = input()\n    t2 = input()\n    x = int(input())\n    a = int(t1[0:2])\n    b = int(t1[3:5])\n    m = a * 60 + b\n    a = int(t2[0:2])\n    b = int(t2[3:5])\n    n = a * 60 + b\n    print(float(m - n + x), end=' ')\n    if 2 * x <= m - n:\n        print(float(m - n))\n    else:\n        y = 2 * x - (m - n)\n        print(float(m - n + y / 2))", "t = int(input())\nfor i in range(t):\n    t1 = input()\n    t2 = input()\n    dist = int(input())\n    t1_h = int(t1[:2])\n    t1_m = int(t1[3:])\n    t2_h = int(t2[:2])\n    t2_m = int(t2[3:])\n    a = t1_h * 60 + t1_m - (t2_h * 60 + t2_m)\n    s1 = a + dist\n    if 2 * dist < a:\n        print(s1 / 1, a / 1)\n    else:\n        print(s1 / 1, (2 * dist + a) / 2)", "t = int(input())\nfor i in range(t):\n    t1 = input()\n    t2 = input()\n    dist = int(input())\n    t1_h = int(t1[:2])\n    t1_m = int(t1[3:])\n    t2_h = int(t2[:2])\n    t2_m = int(t2[3:])\n    a = t1_h * 60 + t1_m\n    b = t2_h * 60 + t2_m\n    if 2 * dist < a - b:\n        print((a - b + dist) / 1, (a - b) / 1)\n    else:\n        print((a - b + dist) / 1, (2 * dist + (a - b)) / 2)", "for _ in range(int(input())):\n    time1 = input()\n    time2 = input()\n    dist = int(input())\n    time1_h = int(time1[:2])\n    time1_m = int(time1[3:])\n    time2_h = int(time2[:2])\n    time2_m = int(time2[3:])\n    t1 = time1_h * 60 + time1_m\n    t2 = time2_h * 60 + time2_m\n    if 2 * dist < t1 - t2:\n        print((t1 - t2 + dist) / 1, (t1 - t2) / 1)\n    else:\n        print((t1 - t2 + dist) / 1, (2 * dist + (t1 - t2)) / 2)", "t = int(input())\nwhile t > 0:\n    t1 = input()\n    t2 = input()\n    dist = int(input())\n    t1_h = int(t1[0:2])\n    t1_m = int(t1[3:])\n    t2_h = int(t2[0:2])\n    t2_m = int(t2[3:])\n    t1 = t1_h * 60 + t1_m\n    t2 = t2_h * 60 + t2_m\n    if 2 * dist < t1 - t2:\n        print((t1 - t2 + dist) / 1, (t1 - t2) / 1)\n    else:\n        print((t1 - t2 + dist) / 1, (2 * dist + (t1 - t2)) / 2)\n    t -= 1", "tests = int(input())\nfor i in range(tests):\n    time1 = list(map(int, input().split(':')))\n    time2 = list(map(int, input().split(':')))\n    dist = int(input())\n    time_gap = (time1[0] - time2[0]) * 60\n    min_gap = abs(time1[1] - time2[1])\n    if time2[1] > time1[1]:\n        time_gap -= min_gap\n    else:\n        time_gap += min_gap\n    case1_time = float(time_gap + dist)\n    if dist * 2 <= time_gap:\n        case2_time = time_gap\n    else:\n        remaining = (dist * 2 - time_gap) / 2\n        case2_time = time_gap + remaining\n    print(case1_time, float(case2_time))", "t = int(input())\nfor _ in range(t):\n    time1 = input()\n    time2 = input()\n    dist = int(input())\n    time1_h = int(time1[0:2])\n    time1_m = int(time1[3:])\n    time2_h = int(time2[0:2])\n    time2_m = int(time2[3:])\n    time1 = time1_h * 60 + time1_m\n    time2 = time2_h * 60 + time2_m\n    if 2 * dist < time1 - time2:\n        print((time1 - time2 + dist) / 1, (time1 - time2) / 1)\n    else:\n        print((time1 - time2 + dist) / 1, (2 * dist + (time1 - time2)) / 2)", "for _ in range(int(input())):\n    t1 = input()\n    t2 = input()\n    x = int(input())\n    a = int(t1[0:2])\n    b = int(t1[3:5])\n    m = a * 60 + b\n    a = int(t2[0:2])\n    b = int(t2[3:5])\n    n = a * 60 + b\n    print(float(m - n + x), end=' ')\n    if 2 * x <= m - n:\n        print(float(m - n))\n    else:\n        y = 2 * x - (m - n)\n        print(float(m - n + y / 2))", "for _ in range(int(input())):\n    (h1, m1) = (int(i) for i in input().split(':'))\n    (h2, m2) = (int(i) for i in input().split(':'))\n    td = int(input())\n    t1 = h1 * 60 + m1\n    t2 = h2 * 60 + m2\n    t21 = t1 - t2\n    ans1 = t21 + td\n    ans2 = t21 if 2 * td <= t21 else t21 / 2 + td\n    print(f'{ans1:.1f} {ans2:.1f}')", "for _ in range(int(input())):\n    (x, y) = map(int, input().split(':'))\n    (m, n) = map(int, input().split(':'))\n    dist = int(input())\n    x = x * 60 + y\n    m = m * 60 + n\n    print((x - m + dist) / 1.0, end=' ')\n    if x - m >= 2 * dist:\n        print((x - m) / 1.0)\n    else:\n        print(((x - m) / 2 + dist) / 1.0)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split(':'))\n    (m, n) = map(int, input().split(':'))\n    dist = int(input())\n    x = x * 60 + y\n    m = m * 60 + n\n    print((x - m + dist) / 1.0, end=' ')\n    if x - m >= 2 * dist:\n        print((x - m) / 1.0)\n    else:\n        print(((x - m) / 2 + dist) / 1.0)", "for _ in range(int(input())):\n    t1 = input()\n    t2 = input()\n    dist = int(input())\n    (hours1, minutes1) = map(int, t1.split(':'))\n    (hours2, minutes2) = map(int, t2.split(':'))\n    girlfriend_arrival_station = 60 - minutes2 + minutes1 + (hours1 - hours2 - 1) * 60\n    if 2 * dist < girlfriend_arrival_station:\n        second = float(girlfriend_arrival_station)\n    else:\n        second = float(girlfriend_arrival_station + (2 * dist - girlfriend_arrival_station) / 2)\n    first = float(girlfriend_arrival_station + dist)\n    print(first, second)", "t = int(input())\nfor i in range(t):\n    (t11, t12) = map(int, input().split(':'))\n    (t21, t22) = map(int, input().split(':'))\n    dist = int(input())\n    time_difference = (t11 - t21) * 60 + (t12 - t22)\n    t1 = float(dist + time_difference)\n    if time_difference <= 2 * dist:\n        t2 = float(time_difference + (2 * dist - time_difference) / 2)\n    else:\n        t2 = float(time_difference)\n    t1 = '{:.1f}'.format(t1)\n    t2 = '{:.1f}'.format(t2)\n    print(t1, end=' ')\n    print(t2)", "t = int(input())\nfor i in range(t):\n    (t11, t12) = map(int, input().split(':'))\n    (t21, t22) = map(int, input().split(':'))\n    dist = int(input())\n    time_difference = (t11 - t21) * 60 + (t12 - t22)\n    t1 = float(dist + time_difference)\n    if time_difference <= 2 * dist:\n        t2 = float(time_difference + (2 * dist - time_difference) / 2)\n    else:\n        t2 = float(time_difference)\n    t1 = '{:.1f}'.format(t1)\n    t2 = '{:.1f}'.format(t2)\n    print(t1, end=' ')\n    print(t2)", "from time import *\nfor _ in range(int(input())):\n    t1 = list(map(int, input().split(':')))\n    t1 = t1[0] * 60 + t1[1]\n    t2 = list(map(int, input().split(':')))\n    t2 = t2[0] * 60 + t2[1]\n    d = float(input())\n    x = float(t1 - t2)\n    if 2 * d < x:\n        print(round(d + x, 1), round(x, 1))\n    else:\n        print(round(d + x, 1), round(d + x / 2, 1))", "from time import *\nfor _ in range(int(input())):\n    t1 = list(map(int, input().split(':')))\n    t1 = t1[0] * 60 + t1[1]\n    t2 = list(map(int, input().split(':')))\n    t2 = t2[0] * 60 + t2[1]\n    d = float(input())\n    x = float(t1 - t2)\n    if 2 * d < x:\n        print(round(d + x, 1), round(x, 1))\n    else:\n        print(round(d + x, 1), round(d + x / 2, 1))", "for _ in range(int(input())):\n    time1 = list(map(int, input().split(':')))\n    time1 = time1[0] * 60 + time1[1]\n    time2 = list(map(int, input().split(':')))\n    time2 = time2[0] * 60 + time2[1]\n    delta = float(time1 - time2)\n    dist = float(input())\n    if 2 * dist < delta:\n        print(round(dist + delta, 1), round(delta, 1))\n    else:\n        print(round(dist + delta, 1), round(dist + delta / 2, 1))", "import math\nT = int(input())\nfor i in range(T):\n    (h1, m1) = [int(i) for i in input().split(':')]\n    (h2, m2) = [int(j) for j in input().split(':')]\n    dist = int(input())\n    p1 = (h1 - h2) * 60 + (m1 - m2) + dist\n    p1 = '{0:.1f}'.format(p1)\n    home = dist\n    gap = (h1 - h2) * 60 + (m1 - m2)\n    p2 = 0.0\n    if gap >= 2 * dist:\n        p2 += gap\n    else:\n        p2 += dist\n        temp1 = h2 * 60 + m2\n        temp2 = h1 * 60 + m1\n        p2 += (temp2 - temp1) / 2\n        p2 = '{0:.1f}'.format(p2)\n    print(p1, p2)", "T = int(input())\n\ndef time(t1, t2):\n    t3 = [0, 0]\n    t3[0] = t1[0] - t2[0]\n    t3[1] = t1[1] - t2[1]\n    if t3[1] < 0:\n        t3[1] = 60 + t3[1]\n        t3[0] -= 1\n    return t3\n\ndef minu(t):\n    return t[0] * 60 + t[1]\nfor x in range(T):\n    t1 = list(map(int, input().split(':')))\n    t2 = list(map(int, input().split(':')))\n    t1 = t1[0] * 60 + t1[1]\n    t2 = t2[0] * 60 + t2[1]\n    dist = int(input())\n    t1 -= t2\n    t2 = 0\n    ans1 = t1 + dist\n    if 2 * dist <= t1:\n        ans2 = t1\n    elif dist > t1:\n        ans2 = dist + t1 / 2\n    else:\n        h = t1 - dist\n        ans2 = dist + h + (dist - h) / 2\n    print(float(ans1), float(ans2))", "def difftime(t1, t2):\n    t3 = [0, 0]\n    t3[0] = t1[0] - t2[0]\n    t3[1] = t1[1] - t2[1]\n    if t3[1] < 0:\n        t3[1] = 60 + t3[1]\n        t3[0] -= 1\n    return t3\n\ndef tomin(t):\n    return t[0] * 60 + t[1]\nfor x in range(int(input())):\n    t1 = list(map(int, input().split(':')))\n    t2 = list(map(int, input().split(':')))\n    dist = int(input())\n    r = tomin(difftime(t1, t2))\n    a = str(r + float(dist)) + ' '\n    if 2 * dist <= r:\n        a += str(float(r))\n    else:\n        a += str(float(r + (2 * dist - r) / 2))\n    print(a)", "def difftime(t1, t2):\n    t3 = [0, 0]\n    t3[0] = t1[0] - t2[0]\n    t3[1] = t1[1] - t2[1]\n    if t3[1] < 0:\n        t3[1] = 60 + t3[1]\n        t3[0] -= 1\n    return t3\n\ndef tomin(t):\n    return t[0] * 60 + t[1]\nfor x in range(int(input())):\n    t1 = list(map(int, input().split(':')))\n    t2 = list(map(int, input().split(':')))\n    dist = int(input())\n    a = str(tomin(difftime(t1, t2)) + float(dist)) + ' '\n    if 2 * dist <= tomin(difftime(t1, t2)):\n        a += str(float(tomin(difftime(t1, t2))))\n    else:\n        a += str(float(tomin(difftime(t1, t2)) + (2 * dist - tomin(difftime(t1, t2))) / 2))\n    print(a)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split(':'))\n    (m, n) = map(int, input().split(':'))\n    dist = int(input())\n    x = x * 60 + y\n    m = m * 60 + n\n    print((x - m + dist) / 1.0, end=' ')\n    if x - m >= 2 * dist:\n        print((x - m) / 1.0)\n    else:\n        print(((x - m) / 2 + dist) / 1.0)", "for _ in range(int(input())):\n    (t1, t2) = (list(map(int, input().split(':'))), list(map(int, input().split(':'))))\n    d = int(input())\n    k = 60 * (t1[0] - t2[0] - 1) + (60 - t2[1] + t1[1])\n    if k / 2 + d < 2 * d:\n        print(format(k + d, '.1f'), format(k / 2 + d, '.1f'))\n    else:\n        print(format(k + d, '.1f'), format(k, '.1f'))", "for _ in range(int(input())):\n    time1 = [int(s) for s in input().split(':')]\n    time2 = [int(s) for s in input().split(':')]\n    time = (time1[0] - time2[0]) * 60 + time1[1] - time2[1]\n    dist = int(input())\n    print(f'{time + dist}.0 ', end='')\n    if time > 2 * dist:\n        print(f'{time}.0')\n    else:\n        print(f'{dist + time / 2}')", "for k in range(int(input())):\n    (t1, h1) = map(int, input().split(':'))\n    (t2, h2) = map(int, input().split(':'))\n    dist = int(input())\n    time_interval = (t1 - t2) * 60.0 + h1 - h2\n    print(time_interval + dist, end=' ')\n    if time_interval >= 2 * dist:\n        print(time_interval)\n    else:\n        result = (2 - time_interval / dist) * (dist / 2) + time_interval\n        print(round(result, 1))", "t = int(input())\nfor k in range(t):\n    (t1, h1) = map(int, input().split(':'))\n    (t2, h2) = map(int, input().split(':'))\n    dist = int(input())\n    time_interval = (t1 - t2) * 60.0 + h1 - h2\n    print(time_interval + dist, end=' ')\n    if time_interval >= 2 * dist:\n        print(time_interval)\n    else:\n        result = (2 - time_interval / dist) * (dist / 2) + time_interval\n        print(round(result, 1))", "t = int(input())\nfor k in range(t):\n    (t1, h1) = map(int, input().split(':'))\n    (t2, h2) = map(int, input().split(':'))\n    dist = int(input())\n    time_interval = (t1 - t2) * 60.0 + h1 - h2\n    print(time_interval + dist, end=' ')\n    if time_interval >= 2 * dist:\n        print(time_interval)\n    else:\n        result = (2 - time_interval / dist) * (dist / 2) + time_interval\n        print(round(result, 1))", "t = int(input())\nfor k in range(t):\n    (t1, h1) = map(int, input().split(':'))\n    (t2, h2) = map(int, input().split(':'))\n    dist = int(input())\n    time_interval = (t1 - t2) * 60.0 + h1 - h2\n    print(time_interval + dist, end=' ')\n    if time_interval >= 2 * dist:\n        print(time_interval)\n    else:\n        result = (2 - time_interval / dist) * (dist / 2) + time_interval\n        print(round(result, 1))", "T = int(input())\nfor i in range(0, T):\n    c = input()\n    g = input()\n    dis = int(input())\n    c = list(c)\n    g = list(g)\n    c = int(c[0] + c[1]) * 60 + int(c[3] + c[4])\n    g = int(g[0] + g[1]) * 60 + int(g[3] + g[4])\n    diff = c - g\n    aa = diff + dis\n    b = max(diff, 2 * dis)\n    if b == diff:\n        print(aa / 1, b / 1)\n    else:\n        print(aa / 1, diff + (2 * dis - diff) / 2)", "t = int(input())\nfor i in range(t):\n    t1 = str(input())\n    t2 = str(input())\n    dis = int(input())\n    tl = (int(t1[0] + t1[1]) - int(t2[0] + t2[1])) * 60 + (int(t1[3] + t1[4]) - int(t2[3] + t2[4]))\n    p1 = tl + dis\n    if 2 * dis <= tl:\n        p2 = tl\n    elif dis <= tl:\n        p2 = float(dis + (tl - dis)) + (dis - (tl - dis)) / 2\n    elif dis > tl:\n        p2 = float(dis) + tl / 2\n    print(float(p1), float(p2))", "def solve(hrs, mina):\n    mina = hrs * 60 + mina\n    return mina\nfor _ in range(int(input())):\n    time1 = input()\n    time2 = input()\n    time1h = time1[:2]\n    time1m = time1[3:]\n    time2h = time2[:2]\n    time2m = time2[3:]\n    if time1h[0] == '0':\n        time1h = time1h[1]\n    if time1m[0] == '0':\n        time1m = time1m[1]\n    if time2h[0] == '0':\n        time2h = time2h[1]\n    if time2m[0] == '0':\n        time2m = time2m[1]\n    time1 = solve(int(time1h), int(time1m))\n    time2 = solve(int(time2h), int(time2m))\n    dist = int(input())\n    case1 = time1 - time2 + dist\n    case2 = time1 - time2\n    if 2 * dist > case2:\n        case2 = (case2 + 2 * dist) / 2\n    print(format(case1, '.1f'), format(case2, '.1f'))", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split(':'))\n    (m, n) = map(int, input().split(':'))\n    x = x * 60 + y\n    m = m * 60 + n\n    d = x - m\n    dist = int(input())\n    T1 = (dist + d) / 1.0\n    if d >= dist * 2:\n        T2 = d / 1.0\n    else:\n        T2 = (dist + d / 2) / 1.0\n    print(T1, T2)", "def sol(dist, time1, time2):\n    t1 = int(time1[0]) * 60 + int(time1[1])\n    t2 = int(time2[0]) * 60 + int(time2[1])\n    waiting = t1 - t2\n    print(waiting + dist / 1, end=' ')\n    if 2 * dist < waiting:\n        print(waiting / 1)\n    else:\n        remdist = (2 * dist - waiting) / 2\n        print(waiting + remdist)\nt = int(input())\nwhile t:\n    time1 = input().split(':')\n    time2 = input().split(':')\n    dist = int(input())\n    sol(dist, time1, time2)\n    t -= 1", "class Time:\n\n    def __init__(self, hh, mm):\n        self.hh = int(hh)\n        self.mm = int(mm)\n\n    @staticmethod\n    def minDiff(time1, time2):\n        mins1 = time1.hh * 60 + time1.mm\n        mins2 = time2.hh * 60 + time2.mm\n        return abs(mins1 - mins2)\n\n    @staticmethod\n    def addMins(time1, mins):\n        mins1 = time1.hh * 60 + time1.mm\n        mins += mins1\n        t = Time('00', '00')\n        t.hh = mins // 60\n        t.mm = mins % 60\n        return t\ntc = int(input())\nfor _ in range(1, 1 + tc):\n    timeStr = input()\n    time1 = Time(timeStr.split(':')[0], timeStr.split(':')[1])\n    timeStr = input()\n    time2 = Time(timeStr.split(':')[0], timeStr.split(':')[1])\n    dist = float(input())\n    tdiff = Time.minDiff(time1, time2)\n    case1 = float(tdiff + dist)\n    if tdiff >= 2 * dist:\n        case2 = tdiff\n    else:\n        chefAtHouse = Time.addMins(time2, dist)\n        atHouse_atStation = Time.minDiff(time1, chefAtHouse)\n        case2 = max(tdiff, dist) + (dist - atHouse_atStation) / 2\n    case2 = float(case2)\n    print(case1, case2)", "class Time:\n\n    def __init__(self, hh, mm):\n        self.hh = int(hh)\n        self.mm = int(mm)\n\n    @staticmethod\n    def minDiff(time1, time2):\n        mins1 = time1.hh * 60 + time1.mm\n        mins2 = time2.hh * 60 + time2.mm\n        return abs(mins1 - mins2)\n\n    @staticmethod\n    def addMins(time1, mins):\n        mins1 = time1.hh * 60 + time1.mm\n        mins += mins1\n        t = Time('00', '00')\n        t.hh = mins // 60\n        t.mm = mins % 60\n        return t\ntc = int(input())\nfor _ in range(1, 1 + tc):\n    timeStr = input()\n    time1 = Time(timeStr.split(':')[0], timeStr.split(':')[1])\n    timeStr = input()\n    time2 = Time(timeStr.split(':')[0], timeStr.split(':')[1])\n    dist = float(input())\n    tdiff = Time.minDiff(time1, time2)\n    case1 = float(tdiff + dist)\n    if tdiff >= 2 * dist:\n        case2 = tdiff\n    else:\n        chefAtHouse = Time.addMins(time2, dist)\n        atHouse_atStation = Time.minDiff(time1, chefAtHouse)\n        case2 = max(tdiff, dist) + abs(dist - atHouse_atStation) / 2\n    case2 = float(case2)\n    print(case1, case2)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    time1 = input()\n    time2 = input()\n    t1 = int(time1[:2]) * 60 + int(time1[3:])\n    t2 = int(time2[:2]) * 60 + int(time2[3:])\n    dist = int(input())\n    c1 = dist + t1 - t2\n    c2 = t1 - t2 if dist * 2 <= t1 - t2 else (t1 - t2) / 2 + dist\n    print('{:.1f}'.format(c1), end=' ')\n    print('{:.1f}'.format(c2))", "t = int(input())\nfor _ in range(t):\n    time1 = input().split(':')\n    time2 = input().split(':')\n    dist = int(input())\n    diff = (int(time1[0]) - int(time2[0])) * 60 + (int(time1[1]) - int(time2[1]))\n    time_for_fst_plan = diff + dist\n    print(time_for_fst_plan / 1, end=' ')\n    if dist <= diff // 2:\n        time_for_scnd_plan = diff\n        print(time_for_scnd_plan / 1)\n    else:\n        time_for_scnd_plan = dist + (diff - dist) + (2 * dist - diff) / 2\n        print(time_for_scnd_plan)"]