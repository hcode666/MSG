["from collections import Counter\ntc = int(input())\nfor _ in range(tc):\n    (n, w, wr) = map(int, input().split())\n    a = Counter(list(map(int, input().split())))\n    if wr >= w:\n        print('YES')\n    else:\n        d = 0\n        for i in a:\n            d += a[i] // 2 * i * 2\n            if wr + d >= w:\n                print('YES')\n                break\n        else:\n            print('NO')", "from collections import Counter\ntc = int(input())\nfor _ in range(tc):\n    (n, w, wr) = map(int, input().split())\n    a = Counter(list(map(int, input().split())))\n    if wr >= w:\n        print('YES')\n    else:\n        d = 0\n        for i in a:\n            d += a[i] // 2 * i * 2\n            if wr + d >= w:\n                print('YES')\n                break\n        else:\n            print('NO')", "from collections import Counter\ntc = int(input())\nfor _ in range(tc):\n    (n, w, wr) = map(int, input().split())\n    a = Counter(list(map(int, input().split())))\n    if wr >= w:\n        print('YES')\n    else:\n        d = 0\n        for i in a:\n            d += a[i] // 2 * i * 2\n            if wr + d >= w:\n                print('YES')\n                break\n        else:\n            print('NO')", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    (n, w, wr) = list(map(int, input().split()))\n    arr = Counter(list(map(int, input().split())))\n    if wr >= w:\n        print('YES')\n    else:\n        s = 0\n        for i in set(arr):\n            s += arr[i] // 2 * i * 2\n            if wr + s >= w:\n                print('YES')\n                break\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if w <= wr:\n        print('YES')\n    else:\n        d = dict()\n        for i in arr:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n        for i in d:\n            if d[i] >= 2:\n                wr += d[i] // 2 * 2 * i\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (N, W, Wr) = map(int, input().split())\n    L = list(map(int, input().split()))\n    D = dict(Counter(L))\n    S = Wr\n    FLAG = False\n    for i in D.keys():\n        if D[i] > 1:\n            S += D[i] // 2 * 2 * i\n        if S >= W:\n            FLAG = True\n            break\n    if FLAG:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    (n, w, wr) = list(map(int, input().split()))\n    arr = Counter(list(map(int, input().split())))\n    if wr >= w:\n        print('YES')\n    else:\n        s = 0\n        for i in set(arr):\n            s += arr[i] // 2 * i * 2\n            if wr + s >= w:\n                print('YES')\n                break\n        else:\n            print('NO')", "for i in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    k = list(map(int, input().split()))\n    d = {}\n    c = wr\n    for h in k:\n        if h in d:\n            d[h] += 1\n        else:\n            d[h] = 1\n    for t in d:\n        if d[t] % 2 == 0:\n            c += d[t] * t\n    if c >= w:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    k = list(map(int, input().split()))\n    d = {}\n    c = wr\n    for h in k:\n        if h in d:\n            d[h] += 1\n        else:\n            d[h] = 1\n    for t in d:\n        if d[t] % 2 == 0:\n            c += d[t] * t\n    if c >= w:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, w, wk) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = dict(Counter(l))\n    s = wk\n    done = False\n    for i in d.keys():\n        if d[i] > 1:\n            s += d[i] // 2 * 2 * i\n        if s >= w:\n            done = True\n            break\n    if done:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if wr >= w:\n        print('YES')\n    else:\n        w -= wr\n        d = {}\n        for i in a:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n        s = 0\n        for i in d:\n            s += d[i] // 2 * i\n        s *= 2\n        if s < w:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if wr >= w:\n        print('YES')\n    else:\n        w -= wr\n        d = {}\n        for i in a:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n        s = 0\n        for i in d:\n            s += d[i] // 2 * i\n        s *= 2\n        if s < w:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (n, w_min, w_rod) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    w = w_rod\n    i = n - 1\n    while i > 0:\n        if a[i] == a[i - 1]:\n            w += 2 * a[i]\n            i -= 2\n        else:\n            i -= 1\n        if w >= w_min:\n            break\n    if w >= w_min:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (useless, Wgoal, Wrod) = list(map(int, input().split()))\n    weights = list(map(int, input().split()))\n    Wgoal -= Wrod\n    Num_dups = {}\n    if Wgoal <= 0:\n        print('YES')\n    else:\n        for i in range(len(weights)):\n            try:\n                Num_dups[weights[i]] += 1\n                if Num_dups[weights[i]] == 2:\n                    Num_dups[weights[i]] = 0\n                    Wgoal -= 2 * weights[i]\n                    if Wgoal <= 0:\n                        print('YES')\n                        break\n            except:\n                Num_dups[weights[i]] = 1\n            if i == len(weights) - 1:\n                print('NO')", "from collections import Counter\n\ndef sol(n, w, wr, weights):\n    if w <= wr:\n        return 'YES'\n    counts = Counter(weights)\n    total = wr\n    for (wt, count) in counts.items():\n        if count & 1:\n            total += wt * (count - 1)\n        else:\n            total += wt * count\n    return 'YES' if total >= w else 'NO'\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    weights = list(map(int, input().split()))\n    print(sol(n, w, wr, weights))", "from collections import Counter\nnt = lambda x: 1 if x % 2 == 0 else 0\nfor i in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    b = list(map(int, input().split()))\n    total = wr\n    f = 0\n    if w <= wr:\n        print('YES')\n    else:\n        bb = Counter(b)\n        for (k, v) in bb.items():\n            if v >= 2:\n                total += 2 * (k * (v // 2))\n            if total >= w:\n                f = 1\n                break\n        if f == 1:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, w, wr) = list(map(int, input().split()))\n    wn = list(map(int, input().split()))\n    if wr >= w:\n        print('YES')\n    else:\n        rw = w - wr\n        wn.sort()\n        i = n - 1\n        while i > 0 and rw > 0:\n            if wn[i] == wn[i - 1]:\n                rw -= wn[i] * 2\n                i -= 2\n            else:\n                i -= 1\n        if rw <= 0:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, w, wr) = [int(i) for i in input().split()]\n    d = {}\n    for i in input().split():\n        i = int(i)\n        if i in d.keys():\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    for i in d.keys():\n        if d[i] % 2:\n            d[i] -= 1\n    l = list(d.items())\n    for (ind, i) in enumerate(l):\n        if i[1] == 0:\n            l.pop(ind)\n    sum = 0\n    for i in l:\n        sum += i[0] * i[1]\n    if w > wr + sum:\n        print('NO')\n    else:\n        print('YES')", "from collections import Counter\n\ndef soln(n, w, wr, weights):\n    if w <= wr:\n        return 'YES'\n    counts = Counter(weights)\n    total = wr\n    for (wt, count) in counts.items():\n        if count & 1:\n            total += wt * (count - 1)\n        else:\n            total += wt * count\n    return 'YES' if total >= w else 'NO'\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    weights = list(map(int, input().split()))\n    print(soln(n, w, wr, weights))", "from collections import Counter\n\ndef soln(n, w, wr, weights):\n    if w <= wr:\n        return 'YES'\n    counts = Counter(weights)\n    total = wr\n    for (wt, count) in counts.items():\n        if count & 1:\n            total += wt * (count - 1)\n        else:\n            total += wt * count\n    return 'YES' if total >= w else 'NO'\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    weights = list(map(int, input().split()))\n    print(soln(n, w, wr, weights))", "for _ in range(int(input())):\n    (n, w, wr) = [int(i) for i in input().split()]\n    d = {}\n    for i in input().split():\n        i = int(i)\n        if i in d.keys():\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    for i in d.keys():\n        if d[i] % 2:\n            d[i] -= 1\n    l = list(d.items())\n    for (ind, i) in enumerate(l):\n        if i[1] == 0:\n            l.pop(ind)\n    sum = 0\n    for i in l:\n        sum += i[0] * i[1]\n    if w > wr + sum:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, w_min, w_rod) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    w = w_rod\n    i = n - 1\n    while i > 0:\n        if a[i] == a[i - 1]:\n            w += 2 * a[i]\n            i -= 2\n        else:\n            i -= 1\n        if w >= w_min:\n            break\n    if w >= w_min:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, w_min, w_rod) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    w = w_rod\n    i = n - 1\n    while i > 0:\n        if a[i] == a[i - 1]:\n            w += 2 * a[i]\n            i -= 2\n        else:\n            i -= 1\n        if w >= w_min:\n            break\n    if w >= w_min:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, w_min, w_rod) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    w = w_rod\n    i = n - 1\n    while i > 0:\n        if a[i] == a[i - 1]:\n            w += 2 * a[i]\n            i -= 2\n        else:\n            i -= 1\n        if w >= w_min:\n            break\n    if w >= w_min:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, w_min, w_rod) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    w = w_rod\n    i = n - 1\n    while i > 0:\n        if a[i] == a[i - 1]:\n            w += 2 * a[i]\n            i -= 2\n        else:\n            i -= 1\n        if w >= w_min:\n            break\n    if w >= w_min:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, w_min, w_rod) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    w = w_rod\n    i = n - 1\n    while i > 0:\n        if a[i] == a[i - 1]:\n            w += 2 * a[i]\n            i -= 2\n        else:\n            i -= 1\n        if w >= w_min:\n            break\n    if w >= w_min:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, w_min, w_rod) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    w = w_rod\n    i = n - 1\n    while i > 0:\n        if a[i] == a[i - 1]:\n            w += 2 * a[i]\n            i -= 2\n        else:\n            i -= 1\n        if w >= w_min:\n            break\n    if w >= w_min:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, w_min, w_rod) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    w = w_rod\n    i = n - 1\n    while i > 0:\n        if a[i] == a[i - 1]:\n            w += 2 * a[i]\n            i -= 2\n        else:\n            i -= 1\n        if w >= w_min:\n            break\n    if w >= w_min:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, w_min, w_rod) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    w = w_rod\n    i = n - 1\n    while i > 0:\n        if a[i] == a[i - 1]:\n            w += 2 * a[i]\n            i -= 2\n        else:\n            i -= 1\n        if w >= w_min:\n            break\n    if w >= w_min:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(0, int(input())):\n    x = 0\n    chef_lst = [int(i) for i in input().split()]\n    bench_weight = [int(i) for i in input().split()]\n    if chef_lst[1] <= chef_lst[2]:\n        print('YES')\n        continue\n    bench_weight = sorted(bench_weight)\n    new_weight = []\n    for i in range(0, len(bench_weight) - 1, 2):\n        if bench_weight[i] == bench_weight[i + 1]:\n            new_weight.append(bench_weight[i])\n    score = int(chef_lst[2])\n    for i in range(0, len(new_weight)):\n        score += 2 * int(new_weight[i])\n        if score >= int(chef_lst[1]):\n            print('YES')\n            x = 1\n            break\n    if x == 1:\n        continue\n    print('NO')", "for z in range(int(input())):\n    (n, w, wr) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    if wr >= w:\n        print('YES')\n        continue\n    w -= wr\n    d = {}\n    for x in a:\n        if d.get(x) is None:\n            d[x] = 0\n        d[x] += 1\n    b = 0\n    for x in d.keys():\n        if d[x] % 2 == 0:\n            b += x * d[x]\n        else:\n            b += x * (d[x] - 1)\n    if b >= w:\n        print('YES')\n    else:\n        print('NO')", "def Test(n, w, wr, arr):\n    if wr >= w:\n        return 'YES'\n    else:\n        arr.sort()\n        data = {}\n        for i in range(n):\n            if arr[i] in data:\n                data[arr[i]] += 1\n            else:\n                data[arr[i]] = 1\n        ans = 0\n        for (k, v) in data.items():\n            if v == 1:\n                continue\n            elif v % 2 != 0:\n                while True:\n                    if v % 2 == 0:\n                        break\n                    v -= 1\n                ans += v * int(k)\n            else:\n                ans += v * int(k)\n        if ans + wr >= w:\n            return 'YES'\n        return 'NO'\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(Test(n, w, wr, arr))", "for _ in range(int(input())):\n    l = str(input()).split()\n    n = int(l[0])\n    w = int(l[1])\n    wr = int(l[2])\n    a = str(input()).split()\n    a = list(map(int, a))\n    freq = {}\n    for i in a:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    if wr >= w:\n        print('YES')\n    else:\n        max_wt = wr\n        for i in freq.keys():\n            if freq[i] % 2 == 0:\n                max_wt += i * freq[i]\n            else:\n                max_wt += i * (freq[i] - 1)\n        if max_wt >= w:\n            print('YES')\n        else:\n            print('NO')", "import os.path\nfrom math import gcd, floor, ceil, log2\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input())):\n    (n, W, Wr) = mp()\n    iw = Wr\n    wt = li()\n    if W <= Wr:\n        print('YES')\n    else:\n        rw = W - Wr\n        d = dict(Counter(wt))\n        fl = 0\n        for (k, v) in d.items():\n            if v >= 2:\n                iw += 2 * k * (v // 2)\n                if iw >= W:\n                    fl = 1\n                    break\n        if fl:\n            pr('YES')\n        else:\n            pr('NO')", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    (n, w, wr) = list(map(int, input().split()))\n    lis = list(map(int, input().split()))\n    pr = wr\n    flag = 0\n    counterkun = dict(Counter(lis))\n    if wr >= w:\n        flag = 1\n    else:\n        for j in counterkun.items():\n            if j[1] >= 2:\n                pr += 2 * j[0] * (j[1] // 2)\n                if pr >= w:\n                    flag = 1\n                    break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if wr >= w:\n        print('YES')\n    else:\n        d = {}\n        for x in a:\n            if x not in d:\n                d[x] = 1\n            else:\n                d[x] += 1\n        s = 0\n        for x in d.keys():\n            if d[x] >= 2:\n                s += x * (d[x] // 2) * 2\n        if s + wr >= w:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if wr >= w:\n        print('YES')\n    else:\n        d = {}\n        for x in a:\n            if x not in d:\n                d[x] = 1\n            else:\n                d[x] += 1\n        s = 0\n        for x in d.keys():\n            if d[x] >= 2:\n                s += x * (d[x] // 2) * 2\n        if s + wr >= w:\n            print('YES')\n        else:\n            print('NO')", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef solve():\n    (n, w, r) = mp()\n    l = li()\n    if w <= r:\n        pr('YES')\n        return\n    diff = w - r\n    s = 0\n    d = Counter(l)\n    for i in d:\n        if d[i] & 1:\n            d[i] -= 1\n        s += d[i] * i\n        if s >= diff:\n            pr('YES')\n            return\n    pr('NO')\nfor _ in range(inp()):\n    solve()", "import sys\nfrom os import path\nif path.exists('Input.txt'):\n    sys.stdin = open('Input.txt', 'r')\n    sys.stdout = open('Output.txt', 'w')\nfrom math import gcd, floor, sqrt, log, ceil\nimport math\nfrom collections import deque\nread = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nread2 = lambda : map(int, input().split())\nM = 1000000007\n(yes, no) = ('YES', 'NO')\n\ndef fact(n):\n    return math.factorial(n)\n\ndef isPrime(n):\n    if n % 2 == 0 and n != 2 or n < 2:\n        return False\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return False\n        i += 2\n    return True\n\ndef solve():\n    (n, w, wr) = read2()\n    a = li()\n    a.sort()\n    if wr >= w:\n        print(yes)\n        return\n    ans = 0\n    d = dict()\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = 1\n        else:\n            d[a[i]] += 1\n        if d[a[i]] % 2 == 0:\n            ans += a[i] * 2\n    if ans + wr >= w:\n        print(yes)\n    else:\n        print(no)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, w, wrod) = map(int, input().split())\n    weights = [int(x) for x in input().split()]\n    if wrod >= w:\n        print('YES')\n    else:\n        wmap = {}\n        wsum = wrod\n        ans = 'NO'\n        for i in weights:\n            wmap[i] = 1 + wmap.get(i, 0)\n        for (k, v) in wmap.items():\n            possibleToAdd = wmap[k] // 2\n            wsum += 2 * k * possibleToAdd\n            if wsum >= w:\n                ans = 'YES'\n                break\n        print(ans)", "for i in range(int(input())):\n    (N, w, W) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    flag = 0\n    d = {}\n    for j in range(len(arr)):\n        if arr[j] in d:\n            d[arr[j]] += 1\n        else:\n            d[arr[j]] = 1\n    if w <= W:\n        print('YES')\n    else:\n        max_wt = W\n        for j in d.keys():\n            if d[j] % 2 == 0:\n                max_wt += d[j] * j\n            else:\n                max_wt += (d[j] - 1) * j\n        if max_wt >= w:\n            print('YES')\n        else:\n            print('NO')", "def main():\n    for _ in range(int(input())):\n        l = str(input()).split()\n        n = int(l[0])\n        w = int(l[1])\n        wr = int(l[2])\n        a = str(input()).split()\n        a = list(map(int, a))\n        freq = {}\n        for i in a:\n            if i in freq:\n                freq[i] += 1\n            else:\n                freq[i] = 1\n        if wr >= w:\n            print('YES')\n        else:\n            max_wt = wr\n            for i in freq.keys():\n                if freq[i] % 2 == 0:\n                    max_wt += i * freq[i]\n                else:\n                    max_wt += i * (freq[i] - 1)\n            if max_wt >= w:\n                print('YES')\n            else:\n                print('NO')\nmain()", "for _ in range(int(input())):\n    l = str(input()).split()\n    N = int(l[0])\n    W = int(l[1])\n    Wr = int(l[2])\n    a = str(input()).split()\n    a = list(map(int, a))\n    m = {}\n    for i in range(N):\n        m[a[i]] = m.get(a[i], 0) + 1\n    s = 0\n    for i in m:\n        s += i * (m[i] // 2)\n    s *= 2\n    if s + Wr >= W:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\n\ndef answer_finder():\n    (n, w, w_r) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    arr_new = Counter(arr)\n    count = w_r\n    for a_new in arr_new.keys():\n        if arr_new[a_new] > 1 and arr_new[a_new] % 2 == 0:\n            count += int(a_new) * arr_new[a_new]\n    if count >= w:\n        print('YES')\n    else:\n        print('NO')\ntest_cases = int(input())\nwhile test_cases:\n    test_cases -= 1\n    answer_finder()", "t = int(input())\nfor i in range(t):\n    (n, wt, wr) = map(int, input().split())\n    lst = sorted(list(map(int, input().split())))\n    res = wr\n    i = 0\n    while i < n - 1:\n        if lst[i] == lst[i + 1]:\n            res += 2 * lst[i]\n            i += 2\n        else:\n            i += 1\n    if res >= wt:\n        print('YES')\n    else:\n        print('NO')", "def main():\n    for _ in range(int(input())):\n        (N, t, w) = map(int, input().split())\n        arr = sorted(list(map(int, input().split())))\n        res = w\n        i = 0\n        while i < N - 1:\n            if arr[i] == arr[i + 1]:\n                res += arr[i] * 2\n                i += 2\n            else:\n                i += 1\n        if res >= t:\n            print('YES')\n        else:\n            print('NO')\nmain()", "def main():\n    for _ in range(int(input())):\n        (N, t, w) = map(int, input().split())\n        arr = sorted(list(map(int, input().split())))\n        res = w\n        i = 0\n        while i < N - 1:\n            if arr[i] == arr[i + 1]:\n                res += arr[i] * 2\n                i += 2\n            else:\n                i += 1\n        if res >= t:\n            print('YES')\n        else:\n            print('NO')\nmain()", "def main():\n    for _ in range(int(input())):\n        (N, t, w) = map(int, input().split())\n        arr = sorted(list(map(int, input().split())))\n        res = w\n        i = 0\n        while i < N - 1:\n            if arr[i] == arr[i + 1]:\n                res += arr[i] * 2\n                i += 2\n            else:\n                i += 1\n        if res >= t:\n            print('YES')\n        else:\n            print('NO')\nmain()", "from collections import Counter\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    nli = list(map(int, input().split()))\n    nli.sort()\n    if wr >= w:\n        print('YES')\n    else:\n        cnt = Counter(nli)\n        for (key, value) in cnt.items():\n            wr += 2 * key * (value // 2)\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    nli = list(map(int, input().split()))\n    nli.sort()\n    if wr >= w:\n        print('YES')\n    else:\n        cnt = Counter(nli)\n        for (key, value) in cnt.items():\n            wr += 2 * key * (value // 2)\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    nli = list(map(int, input().split()))\n    nli.sort()\n    if wr >= w:\n        print('YES')\n    else:\n        cnt = Counter(nli)\n        for (key, value) in cnt.items():\n            wr += 2 * key * (value // 2)\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    nli = list(map(int, input().split()))\n    nli.sort()\n    if wr >= w:\n        print('YES')\n    else:\n        cnt = Counter(nli)\n        for (key, value) in cnt.items():\n            wr += 2 * key * (value // 2)\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    nli = list(map(int, input().split()))\n    nli.sort()\n    if wr >= w:\n        print('YES')\n    else:\n        cnt = Counter(nli)\n        for (key, value) in cnt.items():\n            wr += 2 * key * (value // 2)\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    nli = list(map(int, input().split()))\n    nli.sort()\n    if wr >= w:\n        print('YES')\n    else:\n        cnt = Counter(nli)\n        for (key, value) in cnt.items():\n            wr += 2 * key * (value // 2)\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    nli = list(map(int, input().split()))\n    nli.sort()\n    if wr >= w:\n        print('YES')\n    else:\n        cnt = Counter(nli)\n        for (key, value) in cnt.items():\n            wr += 2 * key * (value // 2)\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    nli = list(map(int, input().split()))\n    nli.sort()\n    if wr >= w:\n        print('YES')\n    else:\n        cnt = Counter(nli)\n        for (key, value) in cnt.items():\n            wr += 2 * key * (value // 2)\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')", "for test in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    arr = [int(char) for char in input().split()]\n    weight_required = w - wr\n    dict = {}\n    if weight_required <= 0:\n        print('YES')\n    else:\n        for i in range(n):\n            if arr[i] not in dict:\n                dict[arr[i]] = 1\n            else:\n                dict[arr[i]] += 1\n        weight = 0\n        for word in dict:\n            weight += 2 * (word * (dict[word] // 2))\n        wr += weight\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')", "for test in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    arr = [int(char) for char in input().split()]\n    weight_required = w - wr\n    dict = {}\n    if weight_required <= 0:\n        print('YES')\n    else:\n        for i in range(n):\n            if arr[i] not in dict:\n                dict[arr[i]] = 1\n            else:\n                dict[arr[i]] += 1\n        weight = 0\n        for word in dict:\n            weight += 2 * (word * (dict[word] // 2))\n        wr += weight\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')", "for test in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    arr = [int(char) for char in input().split()]\n    weight_required = w - wr\n    dict = {}\n    if weight_required <= 0:\n        print('YES')\n    else:\n        for i in range(n):\n            if arr[i] not in dict:\n                dict[arr[i]] = 1\n            else:\n                dict[arr[i]] += 1\n        weight = 0\n        for word in dict:\n            weight += 2 * (word * (dict[word] // 2))\n        wr += weight\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nwhile t > 0:\n    (n, w, wr) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    dct = {}\n    if wr >= w:\n        print('YES')\n    else:\n        for i in range(n):\n            if arr[i] not in dct:\n                dct[arr[i]] = 1\n            else:\n                dct[arr[i]] += 1\n        weight = 0\n        for word in dct:\n            weight += 2 * (word * (dct[word] // 2))\n        wr += weight\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')\n    t -= 1", "import sys\n\ndef _input():\n    return sys.stdin.readline().strip()\n\ndef main():\n    for _ in range(int(_input())):\n        (n, w, wr) = map(int, _input().split())\n        lst = list(map(int, _input().split()))\n        freq = {}\n        for i in lst:\n            if i not in freq:\n                freq[i] = 1\n            else:\n                freq[i] += 1\n        for lol in freq:\n            if freq[lol] & 1:\n                wr += (freq[lol] - 1) * lol\n            else:\n                wr += freq[lol] * lol\n        if wr >= w:\n            print('YES')\n        else:\n            print('NO')\nmain()", "def Satisfaction(N, W, Wr, W_list):\n    if N <= 1 and Wr == W:\n        return 'YES'\n    elif N <= 1 and Wr != W:\n        return 'NO'\n    elif sum(W_list) + Wr < W:\n        return 'NO'\n    else:\n        p = W - Wr\n        j = 0\n        while j < N - 1:\n            if p <= 0:\n                return 'YES'\n            if j < N - 1 and W_list[j] == W_list[j + 1]:\n                p = p - 2 * W_list[j]\n                j += 2\n            else:\n                j += 1\n        if p <= 0:\n            return 'YES'\n        if j >= N - 1 and p > 0:\n            return 'NO'\nT = int(input())\nfor i in range(T):\n    (N, W, Wr) = map(int, input().split())\n    W_list = list(map(int, input().split()))\n    W_list = sorted(W_list)\n    result = Satisfaction(N, W, Wr, W_list)\n    print(result)", "for t in range(int(input())):\n    (n, w, r) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    if w - r <= 0:\n        print('YES')\n    else:\n        w -= r\n        d = {}\n        for x in l:\n            if x in d:\n                d[x] += 1\n            else:\n                d[x] = 1\n        for (x, y) in d.items():\n            if y % 2 == 0:\n                w -= y * x\n        if w <= 0:\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\n\ndef solve():\n    dct = Counter(w)\n    if W <= WR:\n        print('YES')\n    else:\n        s = 0\n        for ele in dct:\n            s += int(ele) * (2 * (dct[ele] // 2))\n        if s + WR >= W:\n            print('YES')\n        else:\n            print('NO')\nt = int(input())\nfor _ in range(t):\n    (N, W, WR) = list(map(int, input().split()))\n    w = list(map(str, input().split()))\n    solve()", "from collections import defaultdict\n\ndef f(n, w, wr, a):\n    d = defaultdict(lambda : 0)\n    for x in a:\n        d[x] += 1\n    s = 0\n    for k in d.keys():\n        if d[k] % 2 == 0:\n            s += d[k] * k\n        else:\n            s += k * (d[k] - 1)\n    if s + wr >= w:\n        return True\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    (n, w, wr) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if f(n, w, wr, a) == True:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    (n, w1, w2) = map(int, input().split())\n    L = list(map(int, input().split()))\n    if w2 >= w1:\n        print('YES')\n    else:\n        S = set(L)\n        M = list(S)\n        d = {}\n        for i in range(len(M)):\n            d[M[i]] = 0\n        L.sort()\n        for i in range(n):\n            d[L[i]] += 1\n        w = w2\n        i = 0\n        while w < w1 and i < len(M):\n            a = M[i]\n            if d[a] % 2 == 0:\n                w += a * d[a]\n            i += 1\n        if w >= w1:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    c1 = 1\n    for i in range(a - 1):\n        if l[i] == l[i + 1]:\n            c1 += 1\n        else:\n            c += (c1 - (c1 & 1)) * l[i]\n            c1 = 1\n    c += (c1 - (c1 & 1)) * l[a - 1]\n    if c >= b:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        (n, w, rod) = sm()\n        weights = ln()\n        if rod >= w:\n            o('YES')\n            continue\n        counter = Counter(weights)\n        max_weight = 0\n        for i in counter:\n            if counter[i] > 1:\n                max_weight += i * (counter[i] // 2)\n        if 2 * max_weight + rod >= w:\n            print('YES')\n        else:\n            print('NO')\nmain()", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    for _ in tr():\n        (n, w, rod) = sm()\n        weights = ln()\n        if rod >= w:\n            o('YES')\n            continue\n        counter = Counter(weights)\n        max_weight = 0\n        for i in counter:\n            if counter[i] > 1:\n                max_weight += i * (counter[i] // 2)\n        if 2 * max_weight + rod >= w:\n            print('YES')\n        else:\n            print('NO')\nmain()", "class Solution:\n\n    def func(self, arr, n, w, wr):\n        if w - wr <= 0:\n            return 'YES'\n        remain_weight = w - wr\n        wd = dict()\n        for wi in arr:\n            if wi not in wd.keys():\n                wd[wi] = 1\n            else:\n                wd[wi] += 1\n        for (weight, count) in wd.items():\n            if count % 2 == 0:\n                remain_weight -= weight * count\n                if remain_weight <= 0:\n                    return 'YES'\n        else:\n            return 'NO'\nt = int(input())\nfor _ in range(t):\n    (n, w, wr) = map(int, input().strip().split())\n    arr = list(map(int, input().strip().split()))\n    ob = Solution()\n    ans = ob.func(arr, n, w, wr)\n    print(ans)", "from collections import Counter\n\ndef call(arr, n, W, wr):\n    if W - wr <= 0:\n        return 'YES'\n    c = Counter(arr)\n    s1 = 0\n    for (key, value) in c.items():\n        s1 += key * (value // 2) * 2\n    if s1 + wr >= W:\n        return 'YES'\n    return 'NO'\nt = int(input())\nwhile t > 0:\n    (n, W, wr) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(call(arr, n, W, wr))\n    t -= 1", "for _ in range(int(input())):\n    (n, w, wr) = [int(a) for a in input().split()]\n    arr = [int(a) for a in input().split()]\n    d = {}\n    for l in arr:\n        if l in d:\n            d[l] += 1\n        else:\n            d[l] = 1\n    c = 0\n    for l in d:\n        c = c + d[l] // 2 * 2 * l\n    if c + wr >= w:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, w, wr) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = {}\n    for item in a:\n        if item not in d.keys():\n            d[item] = 0\n        d[item] += 1\n    a = list(set(a))\n    for item in a:\n        if d[item] > 1:\n            wr += item * 2 * (d[item] // 2)\n    if wr >= w:\n        print('YES')\n    else:\n        print('NO')", "from math import ceil\nfrom collections import Counter\nfor _ in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    l = list(map(int, input().split()))\n    total = wr\n    m = Counter(l)\n    for i in set(l):\n        p = int(m[i] / 2)\n        total += p * i * 2\n        if total >= w:\n            break\n    if total >= w:\n        print('YES')\n    else:\n        print('NO')", "try:\n    for _ in range(int(input())):\n        (n, w, r) = map(int, input().split())\n        li = list(map(int, input().split()))\n        li.sort()\n        c = 1\n        result = 0\n        for i in range(n - 1):\n            if li[i] == li[i + 1]:\n                c += 1\n            else:\n                result = result + 2 * (c // 2) * li[i]\n                c = 1\n        result = result + 2 * (c // 2) * li[n - 1] + r\n        if result >= w:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass", "for x in range(int(input())):\n    (n, w, wr) = map(int, input().split())\n    li = list(map(int, input().split()))\n    flag = 0\n    if wr >= w:\n        flag = 1\n    else:\n        w -= wr\n        count = 0\n        li = sorted(li)\n        for i in range(len(li)):\n            count += 1\n            if i == len(li) - 1 or li[i] != li[i + 1]:\n                if count % 2 != 0:\n                    count -= 1\n                w -= count * li[i]\n                count = 0\n                if w <= 0:\n                    flag = 1\n                    break\n    if flag == 0:\n        print('NO')\n    else:\n        print('YES')"]