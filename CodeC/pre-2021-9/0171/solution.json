["t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    l = []\n    trace = []\n    for i in range(n):\n        temp = list(map(int, input().split()))\n        l.append(temp)\n    m = 0\n    for i in range(n):\n        m += l[i][i]\n    trace.append(m)\n    for i in range(1, n):\n        x = i\n        y = 0\n        s1 = 0\n        s2 = 0\n        while x < n and y < n:\n            s1 += l[x][y]\n            s2 += l[y][x]\n            x += 1\n            y += 1\n        trace.extend([s1, s2])\n    print(max(trace))", "for _ in range(int(input())):\n    mat = {}\n    n = int(input())\n    for i in range(n):\n        mat[i + 1] = dict(enumerate(map(int, input().split()), start=1))\n    s = set()\n    for i in range(1, n):\n        s.add(sum([mat[x][x + n - i] for x in range(1, i + 1)]))\n        s.add(sum([mat[x + n - i][x] for x in range(1, i + 1)]))\n    s.add(sum([mat[i][i] for i in range(1, n + 1)]))\n    print(max(s))", "for _ in range(int(input())):\n    n = int(input())\n    matrix = {}\n    for i in range(1, n + 1):\n        temp = map(int, input().split())\n        matrix[i] = {i: j for (i, j) in enumerate(temp, 1)}\n        n1 = n\n    maxsum = 0\n    while n1 > 1:\n        down = sum((matrix[n1 + i - 1][i] for i in range(1, n - n1 + 2)))\n        up = sum((matrix[i][n1 + i - 1] for i in range(1, n - n1 + 2)))\n        maxsum = max(maxsum, max(down, up))\n        n1 -= 1\n    diag = sum((matrix[i][i] for i in range(1, n + 1)))\n    print(max(maxsum, diag))", "def matrix(i, j, n):\n    sum = 0\n    while i < n and j < n:\n        sum += L[i][j]\n        i += 1\n        j += 1\n    return sum\n\ndef entire(L, n):\n    ans = []\n    for i in range(n):\n        for j in range(n):\n            ans.append(matrix(i, j, n))\n    return max(ans)\nfor i in range(int(input())):\n    n = int(input())\n    L = [list(map(int, input().split())) for k in range(n)]\n    print(entire(L, n))", "import numpy as np\nfor _ in range(int(input())):\n    n = int(input())\n    a = []\n    for x in range(n):\n        a.append(list(map(int, input().split())))\n    a = np.array(a)\n    sums = [a.trace()]\n    for x in range(1, n):\n        sums.append(a[0:n - x, x:n].trace())\n        sums.append(a[x:n, 0:n - x].trace())\n    print(max(sums))", "for _ in range(int(input())):\n    l = int(input())\n    A = []\n    for __ in range(l):\n        A.append(list(map(int, input().split())))\n    v = 0\n    m = 0\n    for r in range(l):\n        v = 0\n        for c in range(l - r):\n            v += A[r + c][c]\n        m = max(m, v)\n    for c in range(l):\n        v = 0\n        for r in range(l - c):\n            v += A[r][c + r]\n        m = max(m, v)\n    print(m)", "for tc in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    ans = 0\n    for i in range(n):\n        dsum = 0\n        for j in range(n - i):\n            dsum += a[i + j][j]\n        ans = max(ans, dsum)\n    for j in range(n):\n        dsum = 0\n        for i in range(n - j):\n            dsum += a[i][i + j]\n        ans = max(ans, dsum)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = []\n    i = 0\n    L = []\n    while i < n:\n        l = l + [list(map(int, input().split()))]\n        i = i + 1\n    u = 0\n    for j in range(0, n):\n        k = 0\n        while k + j < n:\n            u = u + l[k][k + j]\n            k = k + 1\n        L = L + [u]\n        u = 0\n    o = 0\n    for j in range(0, n):\n        k = n - 1\n        while n > k - j > -1 and n > k > -1:\n            o = o + l[k][k - j]\n            k = k - 1\n        L = L + [o]\n        o = 0\n    print(max(L))\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = []\n    i = 0\n    L = []\n    while i < n:\n        l = l + [list(map(int, input().split()))]\n        i = i + 1\n    u = 0\n    for j in range(0, n):\n        k = 0\n        while k + j < n:\n            u = u + l[k][k + j]\n            k = k + 1\n        L = L + [u]\n        u = 0\n    o = 0\n    for j in range(0, n):\n        k = n - 1\n        while n > k - j > -1 and n > k > -1:\n            o = o + l[k][k - j]\n            k = k - 1\n        L = L + [o]\n        o = 0\n    print(max(L))\n    t = t - 1", "for tc in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    ans = 0\n    for i in range(n):\n        dsum = 0\n        for j in range(n - i):\n            dsum += a[i + j][j]\n        ans = max(ans, dsum)\n    for j in range(n):\n        dsum = 0\n        for i in range(n - j):\n            dsum += a[i][i + j]\n        ans = max(ans, dsum)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    t = 0\n    for i in range(n):\n        (r, s) = (0, 0)\n        for j in range(n - i):\n            r += a[j][i + j]\n            s += a[i + j][j]\n        t = max(r, s, t)\n    print(t)", "for tc in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    ans = 0\n    for i in range(n):\n        dsum = 0\n        for j in range(n - i):\n            dsum += a[i + j][j]\n        ans = max(ans, dsum)\n    for j in range(n):\n        dsum = 0\n        for i in range(n - j):\n            dsum += a[i][i + j]\n        ans = max(ans, dsum)\n    print(ans)", "t = int(input())\nfor tc in range(t):\n    x = int(input())\n    l = []\n    for i in range(x):\n        l.append(list(map(int, input().split())))\n    ans = 0\n    for i in range(x):\n        dsum = 0\n        for j in range(x - i):\n            dsum += l[i + j][j]\n        ans = max(ans, dsum)\n    for j in range(x):\n        dsum = 0\n        for i in range(x - j):\n            dsum += l[i][i + j]\n        ans = max(ans, dsum)\n    print(ans)", "def trace(l, n):\n    maxx = 0\n    for i in range(n):\n        for j in range(n):\n            index = 0\n            summ = 0\n            while j + index < n and i + index < n:\n                summ = summ + l[i + index][j + index]\n                index += 1\n            if summ > maxx:\n                maxx = summ\n    return maxx\nfor i in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        l1 = [int(x) for x in input().split()]\n        l.append(l1)\n    print(trace(l, n))", "import sys\n\ndef trace(a, n):\n    maxx = 0\n    for i in range(n):\n        for j in range(n):\n            summ = 0\n            index = 0\n            while j + index < n and i + index < n:\n                summ += a[i + index][j + index]\n                index += 1\n            if summ > maxx:\n                maxx = summ\n    return maxx\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        row = [int(x) for x in sys.stdin.readline().split()]\n        matrix.append(row)\n    print(trace(matrix, n))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    matrix = [[j for j in map(int, input().split(' '))] for i in range(n)]\n    max_trace = 0\n    for r in range(n):\n        trace1 = 0\n        trace2 = 0\n        for c in range(n - r):\n            trace1 += matrix[r + c][c]\n            trace2 += matrix[c][r + c]\n        if trace1 > max_trace:\n            max_trace = trace1\n        if trace2 > max_trace:\n            max_trace = trace2\n    print(max_trace)", "for tc in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    ans = 0\n    for i in range(n):\n        dsum = 0\n        for j in range(n - i):\n            dsum += a[i + j][j]\n        ans = max(ans, dsum)\n    for j in range(n):\n        dsum = 0\n        for i in range(n - j):\n            dsum += a[i][i + j]\n        ans = max(ans, dsum)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    lst = [list(map(int, input().split())) for m in range(N)]\n    maxTrace = 0\n    for j in range(N):\n        diagSum = 0\n        for i in range(N - j):\n            diagSum += lst[i][i + j]\n        if diagSum > maxTrace:\n            maxTrace = diagSum\n    for i in range(N):\n        diagSum = 0\n        for j in range(N - i):\n            diagSum += lst[i + j][j]\n        if diagSum > maxTrace:\n            maxTrace = diagSum\n    print(maxTrace)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    lst = [list(map(int, input().split())) for m in range(N)]\n    maxTrace = 0\n    for j in range(N):\n        diagSum = 0\n        for i in range(N - j):\n            diagSum += lst[i][i + j]\n        if diagSum > maxTrace:\n            maxTrace = diagSum\n    for i in range(N):\n        diagSum = 0\n        for j in range(N - i):\n            diagSum += lst[i + j][j]\n        if diagSum > maxTrace:\n            maxTrace = diagSum\n    print(maxTrace)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    lst = [list(map(int, input().split())) for m in range(N)]\n    maxTrace = 0\n    for j in range(N):\n        diagSum = 0\n        for i in range(N - j):\n            diagSum += lst[i][i + j]\n        if diagSum > maxTrace:\n            maxTrace = diagSum\n    for i in range(N):\n        diagSum = 0\n        for j in range(N - i):\n            diagSum += lst[i + j][j]\n        if diagSum > maxTrace:\n            maxTrace = diagSum\n    print(maxTrace)", "for _ in range(int(input())):\n    a = int(input())\n    s = [list(map(int, input().split())) for m in range(a)]\n    max_trace = 0\n    for i in range(a):\n        s1 = 0\n        for j in range(a - i):\n            s1 += s[j][j + i]\n        if s1 > max_trace:\n            max_trace = s1\n    for i in range(a):\n        s1 = 0\n        for j in range(a - i):\n            s1 += s[j + i][j]\n        if s1 > max_trace:\n            max_trace = s1\n    print(max_trace)", "for _ in range(int(input())):\n    a = int(input())\n    s = [list(map(int, input().split())) for m in range(a)]\n    max_trace = 0\n    for i in range(a):\n        s1 = 0\n        for j in range(a - i):\n            s1 += s[j][j + i]\n        if s1 > max_trace:\n            max_trace = s1\n    for i in range(a):\n        s1 = 0\n        for j in range(a - i):\n            s1 += s[j + i][j]\n        if s1 > max_trace:\n            max_trace = s1\n    print(max_trace)", "for _ in range(int(input())):\n    a = int(input())\n    s = [list(map(int, input().split())) for m in range(a)]\n    max_trace = 0\n    for i in range(a):\n        s1 = 0\n        for j in range(a - i):\n            s1 += s[j][j + i]\n        if s1 > max_trace:\n            max_trace = s1\n    for i in range(a):\n        s1 = 0\n        for j in range(a - i):\n            s1 += s[j + i][j]\n        if s1 > max_trace:\n            max_trace = s1\n    print(max_trace)", "for k in range(int(input())):\n    max_trace = -1000000\n    n = int(input())\n    matrix = [list(map(int, input().split())) for m in range(n)]\n    for i in range(n):\n        s = 0\n        for j in range(n - i):\n            s += matrix[j][j + i]\n        if s > max_trace:\n            max_trace = s\n    for i in range(n):\n        s = 0\n        for j in range(n - i):\n            s += matrix[j + i][j]\n        if s > max_trace:\n            max_trace = s\n    print(max_trace)", "for k in range(int(input())):\n    max_trace = 0\n    n = int(input())\n    matrix = [list(map(int, input().split())) for m in range(n)]\n    for i in range(n):\n        s = 0\n        for j in range(n - i):\n            s += matrix[j][j + i]\n        if s > max_trace:\n            max_trace = s\n    for i in range(n):\n        s = 0\n        for j in range(n - i):\n            s += matrix[j + i][j]\n        if s > max_trace:\n            max_trace = s\n    print(max_trace)", "for k in range(int(input())):\n    max_trace = 0\n    n = int(input())\n    matrix = [list(map(int, input().split())) for m in range(n)]\n    for i in range(n):\n        s = 0\n        for j in range(n - i):\n            s += matrix[j][j + i]\n        if s > max_trace:\n            max_trace = s\n    for i in range(n):\n        s = 0\n        for j in range(n - i):\n            s += matrix[j + i][j]\n        if s > max_trace:\n            max_trace = s\n    print(max_trace)", "T = int(input())\nfor k in range(T):\n    N = int(input())\n    c = []\n    for i in range(N):\n        a = [int(item) for item in input().split(' ')]\n        c.append(a)\n    sub = []\n    for i in range(N):\n        s = 0\n        for j in range(N - i):\n            s += c[j][i + j]\n        sub.append(s)\n    for i in range(1, N):\n        s = 0\n        for j in range(N - i):\n            s += c[i + j][j]\n        sub.append(s)\n    print(max(sub))", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    for T in range(n):\n        a.append([int(x) for x in input().split()])\n    s_list = []\n    for i in range(n):\n        s = 0\n        for j in range(n - i):\n            s += a[j][i + j]\n        s_list.append(s)\n    for i in range(1, n):\n        s = 0\n        for j in range(n - i):\n            s += a[i + j][j]\n        s_list.append(s)\n    print(max(s_list))", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    mat = []\n    for _ in range(n):\n        A = list(map(int, input().split()))\n        mat.append(A)\n    tmax = 0\n    for i in range(n):\n        (trace1, trace2) = (0, 0)\n        for j in range(n - i):\n            trace1 += mat[j + i][j]\n            trace2 += mat[j][j + i]\n        tmax = max(trace1, trace2, tmax)\n    print(tmax)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    for T in range(n):\n        a.append([int(x) for x in input().split()])\n    s_list = []\n    for i in range(n):\n        s = 0\n        for j in range(n - i):\n            s += a[j][i + j]\n        s_list.append(s)\n    for i in range(1, n):\n        s = 0\n        for j in range(n - i):\n            s += a[i + j][j]\n        s_list.append(s)\n    print(max(s_list))", "for _ in range(int(input())):\n    N = int(input())\n    mat = []\n    for i in range(N):\n        row = list(map(int, input().split()))\n        mat.append(row)\n    tmx = 0\n    for i in range(N):\n        (trace1, trace2) = (0, 0)\n        for j in range(N - i):\n            trace1 += mat[j + i][j]\n            trace2 += mat[j][j + i]\n        tmx = max(trace1, trace2, tmx)\n    print(tmx)", "for _ in range(int(input())):\n    N = int(input())\n    mat = []\n    for i in range(N):\n        row = list(map(int, input().split()))\n        mat.append(row)\n    tmx = 0\n    for i in range(N):\n        (trace1, trace2) = (0, 0)\n        for j in range(N - i):\n            trace1 += mat[j + i][j]\n            trace2 += mat[j][j + i]\n        tmx = max(trace1, trace2, tmx)\n    print(tmx)", "for _ in range(int(input())):\n    N = int(input())\n    mat = []\n    for i in range(N):\n        row = list(map(int, input().split()))\n        mat.append(row)\n    tmx = 0\n    for i in range(N):\n        (trace1, trace2) = (0, 0)\n        for j in range(N - i):\n            trace1 += mat[j + i][j]\n            trace2 += mat[j][j + i]\n        tmx = max(trace1, trace2, tmx)\n    print(tmx)", "for _ in range(int(input())):\n    N = int(input())\n    mat = []\n    for i in range(N):\n        row = list(map(int, input().split()))\n        mat.append(row)\n    tmx = 0\n    for i in range(N):\n        (trace1, trace2) = (0, 0)\n        for j in range(N - i):\n            trace1 += mat[j + i][j]\n            trace2 += mat[j][j + i]\n        tmx = max(trace1, trace2, tmx)\n    print(tmx)", "for _ in range(int(input())):\n    n = int(input())\n    matrix = [[j for j in map(int, input().split(' '))] for i in range(n)]\n    max_trace = 0\n    for r in range(n):\n        trace1 = 0\n        trace2 = 0\n        for c in range(n - r):\n            trace1 += matrix[r + c][c]\n            trace2 += matrix[c][r + c]\n        if trace1 > max_trace:\n            max_trace = trace1\n        if trace2 > max_trace:\n            max_trace = trace2\n    print(max_trace)", "for _ in range(int(input())):\n    n = int(input())\n    matrix = [[j for j in map(int, input().split(' '))] for i in range(n)]\n    max_trace = 0\n    for r in range(n):\n        trace1 = 0\n        trace2 = 0\n        for c in range(n - r):\n            trace1 += matrix[r + c][c]\n            trace2 += matrix[c][r + c]\n        if trace1 > max_trace:\n            max_trace = trace1\n        if trace2 > max_trace:\n            max_trace = trace2\n    print(max_trace)", "for _ in range(int(input())):\n    n = int(input())\n    traces = [0] * (2 * n - 1)\n    for row_num in range(n):\n        row = list(map(int, input().split()))\n        for col_num in range(n):\n            traces[col_num - row_num + n - 1] += row[col_num]\n    print(max(traces))", "import numpy as np\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    matrix = np.matrix(arr)\n    maxi = 0\n    for i in range(n - (n + (n - 1)), n):\n        if maxi < sum(np.diag(matrix, i)):\n            maxi = sum(np.diag(matrix, i))\n    print(maxi)", "tests = int(input())\nfor i in range(tests):\n    n = int(input())\n    arr = [0] * (2 * n)\n    for j in range(n):\n        temp = list(map(int, input().split()))\n        for k in range(n):\n            arr[n - j + k] += temp[k]\n    print(max(arr))", "tests = int(input())\nfor i in range(tests):\n    n = int(input())\n    arr = [0] * (2 * n)\n    for j in range(n):\n        temp = list(map(int, input().split()))\n        for k in range(n):\n            arr[n - j + k] += temp[k]\n    print(max(arr))", "import numpy as np\nT = int(input())\nfor k in range(T):\n    N = int(input())\n    temp = [list(map(int, input().split()))]\n    A = np.array(temp)\n    for i in range(N - 1):\n        temp = [list(map(int, input().split()))]\n        A = np.append(A, temp, axis=0)\n    T = np.zeros(2 * N - 1)\n    for k in range(N):\n        T[k] = np.trace(A[0:N - k, k:])\n    for k in range(N - 1):\n        T[N + k] = np.trace(A[k + 1:, 0:N - k - 1])\n    print(int(max(T)))", "import numpy as np\nT = int(input())\nfor k in range(T):\n    N = int(input())\n    temp = [list(map(int, input().split()))]\n    A = np.array(temp)\n    for i in range(N - 1):\n        temp = [list(map(int, input().split()))]\n        A = np.append(A, temp, axis=0)\n    T = np.zeros(2 * N - 1)\n    for k in range(N):\n        T[k] = np.trace(A[0:N - k, k:])\n    for k in range(N - 1):\n        T[N + k] = np.trace(A[k + 1:, 0:N - k - 1])\n    print(int(max(T)))", "import numpy as np\nT = int(input())\nfor k in range(T):\n    N = int(input())\n    temp = [list(map(int, input().split()))]\n    A = np.array(temp)\n    for i in range(N - 1):\n        temp = [list(map(int, input().split()))]\n        A = np.append(A, temp, axis=0)\n    T = np.zeros(2 * N - 1)\n    for k in range(N):\n        T[k] = np.trace(A[0:N - k, k:])\n    for k in range(N - 1):\n        T[N + k] = np.trace(A[k + 1:, 0:N - k - 1])\n    print(int(max(T)))", "import numpy as np\nT = int(input())\nfor k in range(T):\n    N = int(input())\n    temp = [list(map(int, input().split()))]\n    A = np.array(temp)\n    for i in range(N - 1):\n        temp = [list(map(int, input().split()))]\n        A = np.append(A, temp, axis=0)\n    T = np.zeros(2 * N - 1)\n    for k in range(N):\n        T[k] = np.trace(A[0:N - k, k:])\n    for k in range(N - 1):\n        T[N + k] = np.trace(A[k + 1:, 0:N - k - 1])\n    print(int(max(T)))", "for _ in range(int(input())):\n    n = int(input())\n    matrix = [[j for j in map(int, input().split(' '))] for i in range(n)]\n    max_trace = 0\n    for r in range(n):\n        trace1 = 0\n        trace2 = 0\n        for c in range(n - r):\n            trace1 += matrix[r + c][c]\n            trace2 += matrix[c][r + c]\n        if trace1 > max_trace:\n            max_trace = trace1\n        if trace2 > max_trace:\n            max_trace = trace2\n    print(max_trace)", "for _ in range(int(input())):\n    n = int(input())\n    matrix = [[j for j in map(int, input().split(' '))] for i in range(n)]\n    max_trace = 0\n    for r in range(n):\n        trace1 = 0\n        trace2 = 0\n        for c in range(n - r):\n            trace1 += matrix[r + c][c]\n            trace2 += matrix[c][r + c]\n        if trace1 > max_trace:\n            max_trace = trace1\n        if trace2 > max_trace:\n            max_trace = trace2\n    print(max_trace)", "for _ in range(int(input())):\n    n = int(input())\n    matrix = [[j for j in map(int, input().split(' '))] for i in range(n)]\n    max_trace = 0\n    for r in range(n):\n        trace1 = 0\n        trace2 = 0\n        for c in range(n - r):\n            trace1 += matrix[r + c][c]\n            trace2 += matrix[c][r + c]\n        max_trace = max(max_trace, trace1, trace2)\n    print(max_trace)", "for _ in range(int(input())):\n    n = int(input())\n    matrix = [[j for j in map(int, input().split(' '))] for i in range(n)]\n    max_trace = 0\n    for r in range(n):\n        trace1 = 0\n        trace2 = 0\n        for c in range(n - r):\n            trace1 += matrix[r + c][c]\n            trace2 += matrix[c][r + c]\n        if trace1 > max_trace:\n            max_trace = trace1\n        if trace2 > max_trace:\n            max_trace = trace2\n    print(max_trace)", "for _ in range(int(input())):\n    n = int(input())\n    matrix = [[j for j in map(int, input().split(' '))] for i in range(n)]\n    max_trace = 0\n    for r in range(n):\n        trace = 0\n        for c in range(n - r):\n            trace += matrix[r + c][c]\n        if trace > max_trace:\n            max_trace = trace\n        trace = 0\n        for c in range(n - r):\n            trace += matrix[c][r + c]\n        if trace > max_trace:\n            max_trace = trace\n    print(max_trace)", "for t in range(int(input())):\n    n = int(input())\n    a = [[int(j) for j in input().split()] for i in range(n)]\n    ans = 0\n    for i in range(n):\n        trace = 0\n        for j in range(n - i):\n            trace += a[i + j][j]\n        if trace > ans:\n            ans = trace\n    for i in range(n):\n        trace = 0\n        for j in range(n - i):\n            trace += a[j][i + j]\n        if trace > ans:\n            ans = trace\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    m = []\n    for i in range(n):\n        r = list(map(int, input().split()))\n        m.append(r)\n    d = []\n    for i in range(n):\n        j = 0\n        s = 0\n        while i < n and j < n:\n            s += m[i][j]\n            i += 1\n            j += 1\n        d.append(s)\n    for j in range(n):\n        i = 0\n        s = 0\n        while i < n and j < n:\n            s += m[i][j]\n            i += 1\n            j += 1\n        d.append(s)\n    print(max(d))", "for _ in range(int(input())):\n    n = int(input())\n    m = []\n    for i in range(n):\n        r = list(map(int, input().split()))\n        m.append(r)\n    d = []\n    for i in range(n):\n        j = 0\n        s = 0\n        while i < n and j < n:\n            s += m[i][j]\n            i += 1\n            j += 1\n        d.append(s)\n    for j in range(n):\n        i = 0\n        s = 0\n        while i < n and j < n:\n            s += m[i][j]\n            i += 1\n            j += 1\n        d.append(s)\n    print(max(d))", "for _ in range(int(input())):\n    n = int(input())\n    A = []\n    for i in range(n):\n        l = [int(i) for i in input().split()]\n        A.append(l)\n    maxnum = 0\n    for l in range(n):\n        i = 0\n        j = l\n        tsum = 0\n        while j < n:\n            tsum += A[i][j]\n            i += 1\n            j += 1\n        if tsum > maxnum:\n            maxnum = tsum\n        i = l\n        j = 0\n        tsum = 0\n        while i < n:\n            tsum += A[i][j]\n            i += 1\n            j += 1\n        if tsum > maxnum:\n            maxnum = tsum\n    print(maxnum)", "for _ in range(int(input())):\n    n = int(input())\n    A = []\n    for i in range(n):\n        l = [int(i) for i in input().split()]\n        A.append(l)\n    maxnum = 0\n    for l in range(n):\n        i = 0\n        j = l\n        tsum = 0\n        while j < n:\n            tsum += A[i][j]\n            i += 1\n            j += 1\n        if tsum > maxnum:\n            maxnum = tsum\n        i = l\n        j = 0\n        tsum = 0\n        while i < n:\n            tsum += A[i][j]\n            i += 1\n            j += 1\n        if tsum > maxnum:\n            maxnum = tsum\n    print(maxnum)", "for _ in range(int(input())):\n    n = int(input())\n    A = []\n    for i in range(n):\n        l = [int(i) for i in input().split()]\n        A.append(l)\n    maxnum = 0\n    for l in range(n):\n        i = 0\n        j = l\n        tsum = 0\n        while j < n:\n            tsum += A[i][j]\n            i += 1\n            j += 1\n        if tsum > maxnum:\n            maxnum = tsum\n        i = l\n        j = 0\n        tsum = 0\n        while i < n:\n            tsum += A[i][j]\n            i += 1\n            j += 1\n        if tsum > maxnum:\n            maxnum = tsum\n    print(maxnum)", "for _ in range(int(input())):\n    n = int(input())\n    A = []\n    for i in range(n):\n        l = [int(i) for i in input().split()]\n        A.append(l)\n    maxnum = 0\n    for i in range(n):\n        x = i\n        y = 0\n        tsum = 0\n        while x < n:\n            tsum += A[y][x]\n            x += 1\n            y += 1\n        if tsum > maxnum:\n            maxnum = tsum\n    for i in range(1, n):\n        x = 0\n        y = i\n        tsum = 0\n        while y < n:\n            tsum += A[y][x]\n            x += 1\n            y += 1\n        if tsum > maxnum:\n            maxnum = tsum\n    print(maxnum)", "for _ in range(int(input())):\n    n = int(input())\n    matrix = []\n    for __ in range(n):\n        row = list(map(int, input().split()))\n        matrix.append(row)\n    best = 0\n    for i in range(n):\n        (r, c) = (0, i)\n        t_s = 0\n        while c < n:\n            t_s += matrix[r][c]\n            r += 1\n            c += 1\n        if best < t_s:\n            best = t_s\n    for i in range(1, n):\n        (r, c) = (i, 0)\n        t_s = 0\n        while r < n:\n            t_s += matrix[r][c]\n            r += 1\n            c += 1\n        if best < t_s:\n            best = t_s\n    print(best)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(map(int, input().split())))\n    best = 0\n    for i in range(n):\n        x = i\n        y = 0\n        curr = 0\n        while x < n:\n            curr += mat[y][x]\n            x += 1\n            y += 1\n        if curr > best:\n            best = curr\n    for i in range(1, n):\n        x = 0\n        y = i\n        curr = 0\n        while y < n:\n            curr += mat[y][x]\n            x += 1\n            y += 1\n        if curr > best:\n            best = curr\n    print(best)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(map(int, input().split())))\n    best = 0\n    for i in range(n):\n        x = i\n        y = 0\n        curr = 0\n        while x < n:\n            curr += mat[y][x]\n            x += 1\n            y += 1\n        if curr > best:\n            best = curr\n    for i in range(1, n):\n        x = 0\n        y = i\n        curr = 0\n        while y < n:\n            curr += mat[y][x]\n            x += 1\n            y += 1\n        if curr > best:\n            best = curr\n    print(best)", "for _ in range(int(input())):\n    n = int(input())\n    m = []\n    for i in range(n):\n        r = list(map(int, input().split()))\n        m.append(r)\n    d = []\n    for i in range(n):\n        j = 0\n        s = 0\n        while i < n and j < n:\n            s += m[i][j]\n            i += 1\n            j += 1\n        d.append(s)\n    for j in range(n):\n        i = 0\n        s = 0\n        while i < n and j < n:\n            s += m[i][j]\n            i += 1\n            j += 1\n        d.append(s)\n    print(max(d))", "for _ in range(int(input())):\n    n = int(input())\n    m = []\n    for i in range(n):\n        r = list(map(int, input().split()))\n        m.append(r)\n    d = []\n    for i in range(n):\n        j = 0\n        s = 0\n        while i < n and j < n:\n            s += m[i][j]\n            i += 1\n            j += 1\n        d.append(s)\n    for j in range(n):\n        i = 0\n        s = 0\n        while i < n and j < n:\n            s += m[i][j]\n            i += 1\n            j += 1\n        d.append(s)\n    print(max(d))", "for _ in range(int(input())):\n    n = int(input())\n    m = []\n    for i in range(n):\n        r = list(map(int, input().split()))\n        m.append(r)\n    d = []\n    for i in range(n):\n        j = 0\n        s = 0\n        while i < n and j < n:\n            s += m[i][j]\n            i += 1\n            j += 1\n        d.append(s)\n    for j in range(n):\n        i = 0\n        s = 0\n        while i < n and j < n:\n            s += m[i][j]\n            i += 1\n            j += 1\n        d.append(s)\n    print(max(d))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(map(int, input().split())))\n    best = 0\n    for i in range(n):\n        x = i\n        y = 0\n        curr = 0\n        while x < n:\n            curr += mat[y][x]\n            x += 1\n            y += 1\n        if curr > best:\n            best = curr\n    for i in range(1, n):\n        x = 0\n        y = i\n        curr = 0\n        while y < n:\n            curr += mat[y][x]\n            x += 1\n            y += 1\n        if curr > best:\n            best = curr\n    print(best)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(map(int, input().split())))\n    best = 0\n    for i in range(n):\n        x = i\n        y = 0\n        curr = 0\n        while x < n:\n            curr += mat[y][x]\n            x += 1\n            y += 1\n        if curr > best:\n            best = curr\n    for i in range(1, n):\n        x = 0\n        y = i\n        curr = 0\n        while y < n:\n            curr += mat[y][x]\n            x += 1\n            y += 1\n        if curr > best:\n            best = curr\n    print(best)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        row = list(map(int, input().split()))\n        a.append(row)\n    sums = []\n    for i in range(n):\n        (x, y) = (0, i)\n        temp = 0\n        while x < n and y < n:\n            temp += a[x][y]\n            x += 1\n            y += 1\n        sums.append(temp)\n    for i in range(n):\n        (x, y) = (i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += a[x][y]\n            x += 1\n            y += 1\n        sums.append(temp)\n    print(max(sums))", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        row = list(map(int, input().split()))\n        a.append(row)\n    sums = []\n    for i in range(n):\n        (x, y) = (0, i)\n        temp = 0\n        while x < n and y < n:\n            temp += a[x][y]\n            x += 1\n            y += 1\n        sums.append(temp)\n    for i in range(n):\n        (x, y) = (i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += a[x][y]\n            x += 1\n            y += 1\n        sums.append(temp)\n    print(max(sums))", "for _ in range(int(input())):\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        arr = list(map(int, input().strip().split()))\n        matrix.append(arr)\n    allt = []\n    for i in range(n):\n        (x, y) = (0, i)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        allt.append(temp)\n    for i in range(n):\n        (x, y) = (i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        allt.append(temp)\n    print(max(list(set(allt))))", "for _ in range(int(input())):\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        arr = list(map(int, input().strip().split()))\n        matrix.append(arr)\n    allt = []\n    for i in range(n):\n        (x, y) = (0, i)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        allt.append(temp)\n    for i in range(n):\n        (x, y) = (i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        allt.append(temp)\n    print(max(list(set(allt))))", "for _ in range(int(input())):\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        arr = list(map(int, input().strip().split()))\n        matrix.append(arr)\n    allt = []\n    for i in range(n):\n        (x, y) = (0, i)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        allt.append(temp)\n    for i in range(n):\n        (x, y) = (i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        allt.append(temp)\n    print(max(list(set(allt))))", "for _ in range(int(input())):\n    n = int(input())\n    matrix = []\n    for i in range(0, n):\n        arr = list(map(int, input().strip().split()))\n        matrix.append(arr)\n    allt = []\n    for i in range(0, n):\n        (x, y) = (0, 0 + i)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        allt.append(temp)\n    for i in range(0, n):\n        (x, y) = (0 + i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        allt.append(temp)\n    print(max(list(set(allt))))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    for x in range(n):\n        x = list(map(int, input().split()))\n        a.append(x)\n    l = []\n    for p in range(n):\n        x = p\n        y = 0\n        t = 0\n        while x < n:\n            t += a[x][y]\n            l.append(t)\n            x += 1\n            y += 1\n    for p in range(1, n):\n        x = p\n        y = 0\n        t = 0\n        while x < n:\n            t += a[y][x]\n            l.append(t)\n            x += 1\n            y += 1\n    print(max(l))", "for i in range(int(input())):\n    n = int(input())\n    m = []\n    for i in range(n):\n        l = list(map(int, input().split()))\n        m.append(l)\n    r = []\n    for j in range(n):\n        k = j\n        l = 0\n        t = 0\n        while k < n:\n            t = t + m[l][k]\n            r.append(t)\n            k = k + 1\n            l = l + 1\n    for j in range(1, n):\n        k = j\n        l = 0\n        t = 0\n        while k < n:\n            t = t + m[k][l]\n            r.append(t)\n            k = k + 1\n            l = l + 1\n    print(max(r))", "n = int(input())\nfor i in range(n):\n    length = int(input())\n    matrix = []\n    for j in range(length):\n        temp = list(map(int, input().split()))\n        matrix.append(temp)\n    result = []\n    for j in range(length):\n        k = j\n        l = 0\n        temp = 0\n        while k < length:\n            temp += matrix[l][k]\n            k += 1\n            l += 1\n        result.append(temp)\n    for j in range(1, length):\n        k = j\n        l = 0\n        temp = 0\n        while k < length:\n            temp += matrix[k][l]\n            k += 1\n            l += 1\n        result.append(temp)\n    print(max(result))", "n = int(input())\nfor i in range(n):\n    length = int(input())\n    matrix = []\n    for j in range(length):\n        temp = list(map(int, input().split()))\n        matrix.append(temp)\n    result = set()\n    for j in range(length):\n        k = j\n        l = 0\n        temp = 0\n        temp2 = 0\n        while k < length:\n            temp += matrix[l][k]\n            temp2 += matrix[k][l]\n            k += 1\n            l += 1\n        result.add(temp)\n        result.add(temp2)\n    print(max(result))", "n = int(input())\nfor i in range(n):\n    length = int(input())\n    matrix = []\n    for j in range(length):\n        temp = list(map(int, input().split()))\n        matrix.append(temp)\n    result = []\n    for j in range(length):\n        k = j\n        l = 0\n        temp = 0\n        while k < length:\n            temp += matrix[l][k]\n            k += 1\n            l += 1\n        result.append(temp)\n    for j in range(1, length):\n        k = j\n        l = 0\n        temp = 0\n        while k < length:\n            temp += matrix[k][l]\n            k += 1\n            l += 1\n        result.append(temp)\n    print(max(result))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    emp = list()\n    for ignore in range(n):\n        emp.append(list(map(int, input().split()))[:n])\n    traces = list()\n    for i in range(n):\n        x = 0\n        y = i\n        sum = 0\n        while x < n and y < n:\n            sum += emp[x][y]\n            x += 1\n            y += 1\n        traces.append(sum)\n    for i in range(1, n):\n        x = i\n        y = 0\n        sum = 0\n        while x < n and y < n:\n            sum += emp[x][y]\n            x += 1\n            y += 1\n        traces.append(sum)\n    print(max(traces))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    mat = []\n    for j in range(n):\n        a = list(map(int, input().split()))\n        mat.append(a)\n    tr = []\n    for j in range(n):\n        (x, y) = (0, 0 + j)\n        s = 0\n        while x < n and y < n:\n            s += mat[x][y]\n            x += 1\n            y += 1\n        tr.append(s)\n    for j in range(n):\n        (x, y) = (0 + j, 0)\n        s = 0\n        while x < n and y < n:\n            s += mat[x][y]\n            x += 1\n            y += 1\n        tr.append(s)\n    print(max(tr))", "for _ in range(int(input())):\n    n = int(input())\n    a = list()\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    res = 0\n    for i in range(n):\n        res += a[i][i]\n    max1 = 0\n    l = 0\n    for i in range(0, n - 1):\n        p = 0\n        r = 0\n        l += 1\n        for j in range(0, n - 1):\n            if j + l < n:\n                p += a[j][j + l]\n                r += a[j + l][j]\n        max1 = max(p, r, max1)\n    max1 = max(max1, res)\n    print(max1)", "for i in range(int(input())):\n    k = int(input())\n    a = []\n    for i in range(k):\n        a.append(list(map(int, input().split())))\n        res = 0\n    for i in range(k):\n        res += a[i][i]\n    max1 = 0\n    l = 0\n    for i in range(0, k - 1):\n        p = 0\n        r = 0\n        l += 1\n        for j in range(0, k - 1):\n            if j + l < k:\n                p += a[j][j + l]\n                r += a[j + l][j]\n        max1 = max(p, r, max1)\n    max1 = max(max1, res)\n    print(max1)", "for i in range(int(input())):\n    k = int(input())\n    a = []\n    for i in range(k):\n        a.append(list(map(int, input().split())))\n        res = 0\n    for i in range(k):\n        res += a[i][i]\n    max1 = 0\n    l = 0\n    for i in range(0, k - 1):\n        p = 0\n        r = 0\n        l += 1\n        for j in range(0, k - 1):\n            if j + l < k:\n                p += a[j][j + l]\n                r += a[j + l][j]\n        max1 = max(p, r, max1)\n    max1 = max(max1, res)\n    print(max1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    emp = list()\n    for ignore in range(n):\n        emp.append(list(map(int, input().split()))[:n])\n    traces = list()\n    for i in range(n):\n        x = 0\n        y = i\n        sum = 0\n        while x < n and y < n:\n            sum += emp[x][y]\n            x += 1\n            y += 1\n        traces.append(sum)\n    for i in range(1, n):\n        x = i\n        y = 0\n        sum = 0\n        while x < n and y < n:\n            sum += emp[x][y]\n            x += 1\n            y += 1\n        traces.append(sum)\n    print(max(traces))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    emp = list()\n    for ignore in range(n):\n        emp.append(list(map(int, input().split()))[:n])\n    traces = list()\n    for i in range(n):\n        x = 0\n        y = i\n        sum = 0\n        while x < n and y < n:\n            sum += emp[x][y]\n            x += 1\n            y += 1\n        traces.append(sum)\n    for i in range(1, n):\n        x = i\n        y = 0\n        sum = 0\n        while x < n and y < n:\n            sum += emp[x][y]\n            x += 1\n            y += 1\n        traces.append(sum)\n    print(max(traces))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    matrix = []\n    for i in range(0, n):\n        arr = list(map(int, input().strip().split()))\n        matrix.append(arr)\n    alltraces = []\n    for i in range(0, n):\n        (x, y) = (0, 0 + i)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    for i in range(0, n):\n        (x, y) = (0 + i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    print(max(list(set(alltraces))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    emp = list()\n    for ignore in range(n):\n        emp.append(list(map(int, input().split()))[:n])\n    traces = list()\n    for i in range(n):\n        x = 0\n        y = i\n        sum = 0\n        while x < n and y < n:\n            sum += emp[x][y]\n            x += 1\n            y += 1\n        traces.append(sum)\n    for i in range(1, n):\n        x = i\n        y = 0\n        sum = 0\n        while x < n and y < n:\n            sum += emp[x][y]\n            x += 1\n            y += 1\n        traces.append(sum)\n    print(max(traces))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    emp = list()\n    for ignore in range(n):\n        emp.append(list(map(int, input().split()))[:n])\n    traces = list()\n    for i in range(n):\n        x = 0\n        y = i\n        sum = 0\n        while x < n and y < n:\n            sum += emp[x][y]\n            x += 1\n            y += 1\n        traces.append(sum)\n    for i in range(1, n):\n        x = i\n        y = 0\n        sum = 0\n        while x < n and y < n:\n            sum += emp[x][y]\n            x += 1\n            y += 1\n        traces.append(sum)\n    print(max(traces))", "t = int(input())\nfor i in range(t):\n    l = int(input())\n    a = []\n    for i in range(l):\n        a.append(list(map(int, input().split())))\n        res = 0\n    for i in range(l):\n        res += a[i][i]\n    maxi = 0\n    k = 0\n    for i in range(0, l - 1):\n        p = 0\n        r = 0\n        k += 1\n        for j in range(0, l - 1):\n            if j + k < l:\n                p += a[j][j + k]\n                r += a[j + k][j]\n        maxi = max(p, r, maxi)\n    maxi = max(maxi, res)\n    print(maxi)", "for i in range(int(input())):\n    l = int(input())\n    a = []\n    for i in range(l):\n        a.append(list(map(int, input().split())))\n        res = 0\n    for i in range(l):\n        res += a[i][i]\n    maxi = 0\n    k = 0\n    for i in range(0, l - 1):\n        p = 0\n        r = 0\n        k += 1\n        for j in range(0, l - 1):\n            if j + k < l:\n                p += a[j][j + k]\n                r += a[j + k][j]\n        maxi = max(p, r, maxi)\n    maxi = max(maxi, res)\n    print(maxi)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    emp = list()\n    for ignore in range(n):\n        emp.append(list(map(int, input().split()))[:n])\n    traces = list()\n    for i in range(n):\n        x = 0\n        y = i\n        sum = 0\n        while x < n and y < n:\n            sum += emp[x][y]\n            x += 1\n            y += 1\n        traces.append(sum)\n    for i in range(1, n):\n        x = i\n        y = 0\n        sum = 0\n        while x < n and y < n:\n            sum += emp[x][y]\n            x += 1\n            y += 1\n        traces.append(sum)\n    print(max(traces))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    m = []\n    for i in range(0, n):\n        arr = list(map(int, input().strip().split()))\n        m.append(arr)\n    alltraces = []\n    for i in range(0, n):\n        (x, y) = (0, 0 + i)\n        temp = 0\n        while x < n and y < n:\n            temp += m[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    for i in range(0, n):\n        (x, y) = (0 + i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += m[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    print(max(list(set(alltraces))))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    m = []\n    for i in range(0, n):\n        arr = list(map(int, input().strip().split()))\n        m.append(arr)\n    alltraces = []\n    for i in range(0, n):\n        (x, y) = (0, 0 + i)\n        temp = 0\n        while x < n and y < n:\n            temp += m[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    for i in range(0, n):\n        (x, y) = (0 + i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += m[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    print(max(list(set(alltraces))))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    m = []\n    for i in range(0, n):\n        arr = list(map(int, input().strip().split()))\n        m.append(arr)\n    alltraces = []\n    for i in range(0, n):\n        (x, y) = (0, 0 + i)\n        temp = 0\n        while x < n and y < n:\n            temp += m[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    for i in range(0, n):\n        (x, y) = (0 + i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += m[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    print(max(list(set(alltraces))))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    matrix = []\n    for i in range(0, n):\n        arr = list(map(int, input().strip().split()))\n        matrix.append(arr)\n    alltraces = []\n    for i in range(0, n):\n        (x, y) = (0, 0 + i)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    for i in range(0, n):\n        (x, y) = (0 + i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    print(max(list(set(alltraces))))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    matrix = []\n    for i in range(0, n):\n        arr = list(map(int, input().strip().split()))\n        matrix.append(arr)\n    alltraces = []\n    for i in range(0, n):\n        (x, y) = (0, 0 + i)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    for i in range(0, n):\n        (x, y) = (0 + i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    print(max(list(set(alltraces))))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    matrix = []\n    for i in range(0, n):\n        arr = list(map(int, input().strip().split()))\n        matrix.append(arr)\n    alltraces = []\n    for i in range(0, n):\n        (x, y) = (0, 0 + i)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    for i in range(0, n):\n        (x, y) = (0 + i, 0)\n        temp = 0\n        while x < n and y < n:\n            temp += matrix[x][y]\n            x += 1\n            y += 1\n        alltraces.append(temp)\n    print(max(list(set(alltraces))))", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    m = [[0 for x in range(n)] for x in range(n)]\n    for i in range(n):\n        m[i] = list(map(int, input().split()))\n    s = 0\n    for a in range(n):\n        s1 = 0\n        s2 = 0\n        for b in range(n - a):\n            s1 += m[a + b][b]\n            s2 += m[b][a + b]\n        maxx = max(s1, s2)\n        if maxx > s:\n            s = maxx\n    print(s)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    m = [[0 for x in range(n)] for x in range(n)]\n    for i in range(n):\n        m[i] = list(map(int, input().split()))\n    s = 0\n    for a in range(n):\n        s1 = 0\n        s2 = 0\n        for b in range(n - a):\n            s1 += m[a + b][b]\n            s2 += m[b][a + b]\n        maxx = max(s1, s2)\n        if maxx > s:\n            s = maxx\n    print(s)", "for i in range(int(input())):\n    traces = []\n    n = int(input())\n    matrix = [list(map(int, input().split())) for _ in range(n)]\n    for i in range(n):\n        m = [l[n - (i + 1):] for l in matrix[:i + 1]]\n        trace = 0\n        for j in range(i + 1):\n            trace += m[j][j]\n        traces.append(trace)\n    for i in range(n):\n        m = [l[:i + 1] for l in matrix[n - (i + 1):]]\n        trace = 0\n        for j in range(i + 1):\n            trace += m[j][j]\n        traces.append(trace)\n    print(max(traces))", "from numpy import array, trace\nfor i in range(int(input())):\n    n = int(input())\n    a = []\n    for j in range(n):\n        u = list(map(int, input().split()))\n        a.extend(u)\n    matrix = array(a).reshape(n, n)\n    maxx = 0\n    for k in range(n):\n        for m in range(n):\n            s = matrix[k:, m:]\n            traced = trace(s)\n            maxx = max(traced, maxx)\n    print(maxx)", "from numpy import array, trace\nfor _ in range(int(input())):\n    n = int(input())\n    elements = []\n    for _ in range(n):\n        lst = list(map(int, input().split()))\n        elements.extend(lst)\n    matrix = array(elements).reshape(n, n)\n    res = 0\n    for i in range(n):\n        for j in range(n):\n            s = matrix[i:, j:]\n            traced = trace(s)\n            if traced > res:\n                res = traced\n    print(res)", "import numpy as np\n\ndef read_row():\n    return np.array([int(num) for num in input().split()])\nfor _ in range(int(input().strip())):\n    size = int(input().strip())\n    A = read_row()\n    for k in range(1, size):\n        A = np.vstack((A, read_row()))\n    high = 0\n    for i in range(1 - size, size):\n        if np.trace(A, i) > high:\n            high = np.trace(A, i)\n    print(high)"]