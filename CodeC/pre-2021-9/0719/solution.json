["t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    s = input()\n    l = list(map(int, input().split()))\n    c = 0\n    t1 = 0\n    t2 = 0\n    while c < n:\n        if s[c] == '1':\n            j = c + 1\n            m = -float('inf')\n            while j < n and s[j] == '0':\n                t2 += l[j] - l[j - 1]\n                if l[j] - l[j - 1] > m:\n                    m = l[j] - l[j - 1]\n                j += 1\n            if j < n and s[j] == '1':\n                t2 += l[j] - l[j - 1]\n                if l[j] - l[j - 1] > m:\n                    m = l[j] - l[j - 1]\n                t2 -= m\n                t1 += t2\n                t2 = 0\n            c = j\n        else:\n            c += 1\n    x = 0\n    for z in range(n - 1):\n        if s[z] == '1':\n            break\n        x += l[z + 1] - l[z]\n    t1 += t2 + x\n    ans.append(t1)\nfor u in ans:\n    print(u)", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    s = input()\n    l = list(map(int, input().split()))\n    c = 0\n    t1 = 0\n    t2 = 0\n    while c < n:\n        if s[c] == '1':\n            j = c + 1\n            m = -float('inf')\n            while j < n and s[j] == '0':\n                t2 += l[j] - l[j - 1]\n                if l[j] - l[j - 1] > m:\n                    m = l[j] - l[j - 1]\n                j += 1\n            if j < n and s[j] == '1':\n                t2 += l[j] - l[j - 1]\n                if l[j] - l[j - 1] > m:\n                    m = l[j] - l[j - 1]\n                t2 -= m\n                t1 += t2\n                t2 = 0\n            c = j\n        else:\n            c += 1\n    x = 0\n    for z in range(n - 1):\n        if s[z] == '1':\n            break\n        x += l[z + 1] - l[z]\n    t1 += t2 + x\n    ans.append(t1)\nfor u in ans:\n    print(u)", "T = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    S = input()\n    X = [int(i) for i in input().split()]\n    i = 0\n    total = 0\n    temp = 0\n    while i < N:\n        if S[i] == '1':\n            j = i + 1\n            maxd = -float('inf')\n            while j < N and S[j] == '0':\n                temp += X[j] - X[j - 1]\n                if X[j] - X[j - 1] > maxd:\n                    maxd = X[j] - X[j - 1]\n                j += 1\n            if j < N and S[j] == '1':\n                temp += X[j] - X[j - 1]\n                if X[j] - X[j - 1] > maxd:\n                    maxd = X[j] - X[j - 1]\n                temp -= maxd\n                total += temp\n                temp = 0\n            i = j\n        else:\n            i += 1\n    correction = 0\n    for i in range(N - 1):\n        if S[i] == '1':\n            break\n        correction += X[i + 1] - X[i]\n    total += temp + correction\n    ans.append(total)\nfor i in ans:\n    print(i)", "T = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    S = input()\n    X = [int(i) for i in input().split()]\n    i = 0\n    total = 0\n    temp = 0\n    while i < N:\n        if S[i] == '1':\n            j = i + 1\n            maxd = -float('inf')\n            while j < N and S[j] == '0':\n                temp += X[j] - X[j - 1]\n                if X[j] - X[j - 1] > maxd:\n                    maxd = X[j] - X[j - 1]\n                j += 1\n            if j < N and S[j] == '1':\n                temp += X[j] - X[j - 1]\n                if X[j] - X[j - 1] > maxd:\n                    maxd = X[j] - X[j - 1]\n                temp -= maxd\n                total += temp\n                temp = 0\n            i = j\n        else:\n            i += 1\n    correction = 0\n    for i in range(N - 1):\n        if S[i] == '1':\n            break\n        correction += X[i + 1] - X[i]\n    total += temp + correction\n    ans.append(total)\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    coord = list(map(int, input().split()))\n    dist = 0\n    i = 0\n    with_elect = []\n    for i in range(0, n):\n        if s[i] == '1':\n            with_elect.append(i)\n    if with_elect[0] != 0:\n        dist = dist + coord[with_elect[0]] - coord[0]\n    if with_elect[len(with_elect) - 1] != n - 1:\n        dist = dist + coord[n - 1] - coord[with_elect[len(with_elect) - 1]]\n    for j in range(0, len(with_elect) - 1):\n        if with_elect[j] + 1 == with_elect[j + 1]:\n            continue\n        if with_elect[j + 1] - with_elect[j] - 1 == 1:\n            dist = dist + min(coord[with_elect[j] + 1] - coord[with_elect[j]], coord[with_elect[j + 1]] - coord[with_elect[j] + 1])\n        else:\n            y = min(coord[with_elect[j + 1]] - coord[with_elect[j] + 1], coord[with_elect[j + 1] - 1] - coord[with_elect[j]])\n            for k in range(with_elect[j] + 1, with_elect[j + 1] - 1):\n                y = min(y, coord[k] - coord[with_elect[j]] + coord[with_elect[j + 1]] - coord[k + 1])\n            dist = dist + y\n    print(dist)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    coord = list(map(int, input().split()))\n    dist = 0\n    i = 0\n    with_elect = []\n    for i in range(0, n):\n        if s[i] == '1':\n            with_elect.append(i)\n    if with_elect[0] != 0:\n        dist = dist + coord[with_elect[0]] - coord[0]\n    if with_elect[len(with_elect) - 1] != n - 1:\n        dist = dist + coord[n - 1] - coord[with_elect[len(with_elect) - 1]]\n    for j in range(0, len(with_elect) - 1):\n        if with_elect[j] + 1 == with_elect[j + 1]:\n            continue\n        if with_elect[j + 1] - with_elect[j] - 1 == 1:\n            dist = dist + min(coord[with_elect[j] + 1] - coord[with_elect[j]], coord[with_elect[j + 1]] - coord[with_elect[j] + 1])\n        else:\n            y = min(coord[with_elect[j + 1]] - coord[with_elect[j] + 1], coord[with_elect[j + 1] - 1] - coord[with_elect[j]])\n            for k in range(with_elect[j] + 1, with_elect[j + 1] - 1):\n                y = min(y, coord[k] - coord[with_elect[j]] + coord[with_elect[j + 1]] - coord[k + 1])\n            dist = dist + y\n    print(dist)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    coord = list(map(int, input().split()))\n    dist = 0\n    i = 0\n    with_elect = []\n    for i in range(0, n):\n        if s[i] == '1':\n            with_elect.append(i)\n    if with_elect[0] != 0:\n        dist = dist + coord[with_elect[0]] - coord[0]\n    if with_elect[len(with_elect) - 1] != n - 1:\n        dist = dist + coord[n - 1] - coord[with_elect[len(with_elect) - 1]]\n    for j in range(0, len(with_elect) - 1):\n        if with_elect[j] + 1 == with_elect[j + 1]:\n            continue\n        if with_elect[j + 1] - with_elect[j] - 1 == 1:\n            dist = dist + min(coord[with_elect[j] + 1] - coord[with_elect[j]], coord[with_elect[j + 1]] - coord[with_elect[j] + 1])\n        else:\n            y = min(coord[with_elect[j + 1]] - coord[with_elect[j] + 1], coord[with_elect[j + 1] - 1] - coord[with_elect[j]])\n            for k in range(with_elect[j] + 1, with_elect[j + 1] - 1):\n                y = min(y, coord[k] - coord[with_elect[j]] + coord[with_elect[j + 1]] - coord[k + 1])\n            dist = dist + y\n    print(dist)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    coord = list(map(int, input().split()))\n    dist = 0\n    i = 0\n    h = []\n    for i in range(0, n):\n        if s[i] == '1':\n            h.append(i)\n    if h[0] != 0:\n        dist = dist + coord[h[0]] - coord[0]\n    if h[len(h) - 1] != n - 1:\n        dist = dist + coord[n - 1] - coord[h[len(h) - 1]]\n    for j in range(0, len(h) - 1):\n        if h[j] + 1 == h[j + 1]:\n            continue\n        if h[j + 1] - h[j] - 1 == 1:\n            dist = dist + min(coord[h[j] + 1] - coord[h[j]], coord[h[j + 1]] - coord[h[j] + 1])\n        else:\n            y = min(coord[h[j + 1]] - coord[h[j] + 1], coord[h[j + 1] - 1] - coord[h[j]])\n            for k in range(h[j] + 1, h[j + 1] - 1):\n                y = min(y, coord[k] - coord[h[j]] + coord[h[j + 1]] - coord[k + 1])\n            dist = dist + y\n    print(dist)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    coord = list(map(int, input().split()))\n    p = 0\n    i = 0\n    h = []\n    for i in range(0, n):\n        if s[i] == '1':\n            h.append(i)\n    if h[0] != 0:\n        p = p + coord[h[0]] - coord[0]\n    if h[len(h) - 1] != n - 1:\n        p = p + coord[n - 1] - coord[h[len(h) - 1]]\n    for j in range(0, len(h) - 1):\n        if h[j] + 1 == h[j + 1]:\n            continue\n        if h[j + 1] - h[j] - 1 == 1:\n            p = p + min(coord[h[j] + 1] - coord[h[j]], coord[h[j + 1]] - coord[h[j] + 1])\n        else:\n            y = min(coord[h[j + 1]] - coord[h[j] + 1], coord[h[j + 1] - 1] - coord[h[j]])\n            for k in range(h[j] + 1, h[j + 1] - 1):\n                y = min(y, coord[k] - coord[h[j]] + coord[h[j + 1]] - coord[k + 1])\n            p = p + y\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    l = list(map(int, input().split()))\n    p = 0\n    i = 0\n    h = []\n    for i in range(0, n):\n        if s[i] == '1':\n            h.append(i)\n    if h[0] != 0:\n        p = p + l[h[0]] - l[0]\n    if h[len(h) - 1] != n - 1:\n        p = p + l[n - 1] - l[h[len(h) - 1]]\n    for j in range(0, len(h) - 1):\n        if h[j] + 1 == h[j + 1]:\n            continue\n        if h[j + 1] - h[j] - 1 == 1:\n            p = p + min(l[h[j] + 1] - l[h[j]], l[h[j + 1]] - l[h[j] + 1])\n        else:\n            y = min(l[h[j + 1]] - l[h[j] + 1], l[h[j + 1] - 1] - l[h[j]])\n            for k in range(h[j] + 1, h[j + 1] - 1):\n                y = min(y, l[k] - l[h[j]] + l[h[j + 1]] - l[k + 1])\n            p = p + y\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    l = list(map(int, input().split()))\n    p = 0\n    i = 0\n    h = []\n    for i in range(0, n):\n        if s[i] == '1':\n            h.append(i)\n    if h[0] != 0:\n        p = p + l[h[0]] - l[0]\n    if h[len(h) - 1] != n - 1:\n        p = p + l[n - 1] - l[h[len(h) - 1]]\n    for j in range(0, len(h) - 1):\n        if h[j] + 1 == h[j + 1]:\n            continue\n        if h[j + 1] - h[j] - 1 == 1:\n            p = p + min(l[h[j] + 1] - l[h[j]], l[h[j + 1]] - l[h[j] + 1])\n        else:\n            y = min(l[h[j + 1]] - l[h[j] + 1], l[h[j + 1] - 1] - l[h[j]])\n            for k in range(h[j] + 1, h[j + 1] - 1):\n                y = min(y, l[k] - l[h[j]] + l[h[j + 1]] - l[k + 1])\n            p = p + y\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    l = list(map(int, input().split()))\n    p = 0\n    i = 0\n    h = []\n    for i in range(0, n):\n        if s[i] == '1':\n            h.append(i)\n    if h[0] != 0:\n        p = p + l[h[0]] - l[0]\n    if h[len(h) - 1] != n - 1:\n        p = p + l[n - 1] - l[h[len(h) - 1]]\n    for j in range(0, len(h) - 1):\n        if h[j] + 1 == h[j + 1]:\n            continue\n        if h[j + 1] - h[j] - 1 == 1:\n            p = p + min(l[h[j] + 1] - l[h[j]], l[h[j + 1]] - l[h[j] + 1])\n        else:\n            y = min(l[h[j + 1]] - l[h[j] + 1], l[h[j + 1] - 1] - l[h[j]])\n            for k in range(h[j] + 1, h[j + 1] - 1):\n                y = min(y, l[k] - l[h[j]] + l[h[j + 1]] - l[k + 1])\n            p = p + y\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    l = list(map(int, input().split()))\n    p = 0\n    i = 0\n    h = []\n    for i in range(0, n):\n        if s[i] == '1':\n            h.append(i)\n    if h[0] != 0:\n        p = p + l[h[0]] - l[0]\n    if h[len(h) - 1] != n - 1:\n        p = p + l[n - 1] - l[h[len(h) - 1]]\n    for j in range(0, len(h) - 1):\n        if h[j] + 1 == h[j + 1]:\n            continue\n        if h[j + 1] - h[j] - 1 == 1:\n            p = p + min(l[h[j] + 1] - l[h[j]], l[h[j + 1]] - l[h[j] + 1])\n        else:\n            y = min(l[h[j + 1]] - l[h[j] + 1], l[h[j + 1] - 1] - l[h[j]])\n            for k in range(h[j] + 1, h[j + 1] - 1):\n                y = min(y, l[k] - l[h[j]] + l[h[j + 1]] - l[k + 1])\n            p = p + y\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    l = list(map(int, input().split()))\n    p = 0\n    i = 0\n    h = []\n    for i in range(0, n):\n        if s[i] == '1':\n            h.append(i)\n    if h[0] != 0:\n        p = p + l[h[0]] - l[0]\n    if h[len(h) - 1] != n - 1:\n        p = p + l[n - 1] - l[h[len(h) - 1]]\n    for j in range(0, len(h) - 1):\n        if h[j] + 1 == h[j + 1]:\n            continue\n        if h[j + 1] - h[j] - 1 == 1:\n            p = p + min(l[h[j] + 1] - l[h[j]], l[h[j + 1]] - l[h[j] + 1])\n        else:\n            y = min(l[h[j + 1]] - l[h[j] + 1], l[h[j + 1] - 1] - l[h[j]])\n            for k in range(h[j] + 1, h[j + 1] - 1):\n                y = min(y, l[k] - l[h[j]] + l[h[j + 1]] - l[k + 1])\n            p = p + y\n    print(p)", "t = int(input())\nret = []\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = input()\n    arr = list(map(int, input().split(' ')))\n    l = []\n    f = True\n    for i in range(len(arr)):\n        if s[i] == '1':\n            if f:\n                fr = i\n                f = False\n            l.append(i)\n    r = []\n    for i in range(1, len(l)):\n        r.append([l[i - 1], l[i]])\n    ans = 0\n    for a in r:\n        x = a[0]\n        i = x + 1\n        y = a[1]\n        curr = arr[i] - arr[x]\n        while i <= y:\n            if arr[i] - arr[i - 1] > curr:\n                curr = arr[i] - arr[i - 1]\n            i += 1\n        ans += abs(arr[y] - arr[x])\n        ans -= curr\n    ans += arr[fr] - arr[0]\n    ans += arr[len(arr) - 1] - arr[l[len(l) - 1]]\n    ret.append(ans)\nfor i in ret:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    x = [int(i) for i in input().split()]\n    y = 0\n    z = 0\n    l = 0\n    k = 0\n    d = {}\n    for i in range(len(s)):\n        if s[i] == '1':\n            d[y] = i\n            y = y + 1\n    ln = y\n    if d[0] != 0:\n        i = d[0]\n        l = x[i] - x[0]\n    for i in range(ln - 1):\n        y = d[i]\n        z = d[i + 1]\n        max = -90\n        for j in range(d[i] + 1, d[i + 1] + 1):\n            if max < x[j] - x[j - 1]:\n                max = x[j] - x[j - 1]\n        l = l + (x[z] - x[y]) - max\n    if d[ln - 1] != n - 1:\n        i = d[ln - 1]\n        l = l + (x[n - 1] - x[i])\n    print(l)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    arr = list(map(int, input().split()))\n    ans = start = 0\n    end = n - 1\n    while s[end] == '0':\n        end -= 1\n    while s[start] == '0':\n        start += 1\n    i = start\n    while i < end:\n        j = i + 1\n        while j <= end and s[j] == '0':\n            j += 1\n        maxdiff = 0\n        for k in range(i + 1, j + 1):\n            maxdiff = max(maxdiff, arr[k] - arr[k - 1])\n        ans += arr[j] - arr[i] - maxdiff\n        i = j\n    ans += arr[start] - arr[0]\n    ans += arr[-1] - arr[end]\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    x_coords = [int(x) for x in input().split()]\n    min_len = 0\n    left_index = s.find('1')\n    for i in range(left_index):\n        min_len += x_coords[i + 1] - x_coords[i]\n    right_index = s.rfind('1')\n    for i in range(right_index + 1, n):\n        min_len += x_coords[i] - x_coords[i - 1]\n    right_index = s.find('1', left_index + 1)\n    while True:\n        if right_index == -1:\n            break\n        (i, j) = (left_index, right_index)\n        while i != j - 1:\n            diff_left = x_coords[i + 1] - x_coords[i]\n            diff_right = x_coords[j] - x_coords[j - 1]\n            if diff_left <= diff_right:\n                min_len += diff_left\n                i += 1\n            else:\n                min_len += diff_right\n                j -= 1\n        left_index = right_index\n        right_index = s.find('1', right_index + 1)\n    print(min_len)\n    t -= 1", "T = int(input())\nwhile T:\n    N = int(input())\n    valid = input()\n    arr = input().split(' ')\n    e = []\n    for i in range(0, len(arr)):\n        arr[i] = int(arr[i])\n        if valid[i] == '1':\n            e.append(i)\n    ans = arr[e[0]] - arr[0]\n    ans = ans + arr[N - 1] - arr[e[len(e) - 1]]\n    for i in range(0, len(e) - 1):\n        left = arr[e[i]]\n        right = arr[e[i + 1]]\n        res = 1000000000\n        for j in range(e[i], e[i + 1]):\n            dist1 = arr[j] - left\n            dist2 = right - arr[j + 1]\n            res = min(res, dist1 + dist2)\n        ans = ans + res\n    print(ans)\n    T = T - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    e = [True if i == '1' else False for i in input().strip()]\n    X = [int(i) for i in input().split()]\n    ans = X[-1] - X[0]\n    (p, q) = (None, None)\n    for i in range(n):\n        if e[i]:\n            p = q\n            q = i\n            m = 0\n            if p != None:\n                for j in range(p, q):\n                    m = max(m, X[j + 1] - X[j])\n            ans -= m\n    print(ans)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    e = input()\n    v = list(map(int, input().split()))\n    sum = 0\n    first = 0\n    last = 0\n    i = 0\n    flag = False\n    for i in range(0, n):\n        if e[i] == '1':\n            if flag == False:\n                first = i\n                flag = True\n            last = i\n    i = 0\n    x = 0\n    y = 0\n    while i < first:\n        sum += v[i + 1] - v[i]\n        i += 1\n    while i <= last and last != 0:\n        sumf = 0\n        suml = 0\n        sum1 = 0\n        sum2 = 0\n        if e[i] == '1':\n            i += 1\n            x = i\n            y = i\n            continue\n        elif e[i] == '0':\n            first_flag = i - 1\n            next_to__first_flag = i\n            while e[i] != '1':\n                if v[next_to__first_flag] - v[first_flag] <= v[i + 1] - v[i]:\n                    sum += v[next_to__first_flag] - v[first_flag]\n                    first_flag = i\n                    next_to__first_flag = i + 1\n                else:\n                    sum += v[i + 1] - v[i]\n                i += 1\n    j = last + 1\n    while j < n:\n        sum += v[j] - v[j - 1]\n        j += 1\n    print(sum)", "test_cases = int(input())\nfor i in range(test_cases):\n    n = int(input())\n    vil = input()\n    dis = input()\n    dist = dis.split()\n    (length, ind_zero) = (0, 0)\n    if vil[0] == '0':\n        zero = True\n    else:\n        zero = False\n    for j in range(1, n):\n        if vil[j] == '1':\n            if zero == True:\n                if ind_zero == 0:\n                    length += int(dist[j]) - int(dist[0])\n                else:\n                    first_one = ind_zero - 1\n                    mini = int(dist[j]) - int(dist[ind_zero])\n                    for k in range(ind_zero, j):\n                        len1 = int(dist[k]) - int(dist[first_one])\n                        len2 = int(dist[j]) - int(dist[k + 1])\n                        if len1 + len2 < mini:\n                            mini = len1 + len2\n                    length += mini\n                zero = False\n        elif zero == False:\n            zero = True\n            ind_zero = j\n    if zero == True:\n        length += int(dist[n - 1]) - int(dist[ind_zero - 1])\n    print(length)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    x = list(map(int, input().split()))\n    ans = 0\n    start = 0\n    end = n - 1\n    while s[start] == '0':\n        start += 1\n    while s[end] == '0':\n        end -= 1\n    ans += x[start] - x[0]\n    ans += x[n - 1] - x[end]\n    while start < end:\n        temp = start\n        start += 1\n        largest = 0\n        while s[start] == '0':\n            largest = max(largest, x[start] - x[start - 1])\n            start += 1\n        largest = max(largest, x[start] - x[start - 1])\n        ans += x[start] - x[temp] - largest\n    print(ans)", "for test in range(int(input())):\n    n = int(input())\n    s = str(input())\n    ip = list(map(int, input().split()))\n    a = []\n    for i in range(n):\n        if s[i] == '1':\n            a.append(i)\n    if len(a) == 1:\n        ans = ip[-1] - ip[0]\n    else:\n        ans = ip[a[0]] - ip[0] + ip[-1] - ip[a[-1]]\n        for i in range(len(a) - 1):\n            m = 0\n            ans += ip[a[i + 1]] - ip[a[i]]\n            for j in range(a[i], a[i + 1]):\n                if ip[j + 1] - ip[j] > m:\n                    m = ip[j + 1] - ip[j]\n            ans -= m\n    print(ans)", "def minDist(start, end, a):\n    temp = 0\n    for i in range(start, end):\n        temp = max(temp, a[i + 1] - a[i])\n    return a[end] - a[start] - temp\nt = int(input().strip())\nfor __ in range(t):\n    n = int(input().strip())\n    s = input().strip()\n    a = [int(i) for i in input().strip().split()]\n    l = []\n    for i in range(len(s)):\n        if s[i] == '1':\n            l.append(i)\n    ans = 0\n    if 0 not in l:\n        ans = ans + a[l[0]] - a[0]\n    if n - 1 not in l:\n        ans = ans - a[l[-1]] + a[-1]\n    for i in range(len(l) - 1):\n        ans = ans + minDist(l[i], l[i + 1], a)\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    elec = list(input().strip())\n    elec += ['0']\n    city = i = 0\n    x = [int(x) for x in input().split()]\n    city = elec.count('1') - 1\n    length = x[n - 1] - x[0]\n    while elec[i] == '0':\n        i += 1\n    while city != 0:\n        mx = 0\n        i += 1\n        while elec[i] == '0':\n            if x[i] - x[i - 1] > mx:\n                mx = x[i] - x[i - 1]\n            i += 1\n        if x[i] - x[i - 1] > mx:\n            mx = x[i] - x[i - 1]\n        length -= mx\n        city -= 1\n    print(length)", "import operator\nT = int(input())\nout = []\nfor i in range(T):\n    N = int(input())\n    elec_str = input()\n    has_elec = [False] * N\n    has_road = [False] * (N - 1)\n    x = list(map(int, input().split()))\n    for i in range(N):\n        has_elec[i] = elec_str[i] == '1'\n    gap_sizes = {}\n    for i in range(N - 1):\n        gap_sizes[i] = x[i + 1] - x[i]\n    sorted_gaps = sorted(gap_sizes.items(), key=operator.itemgetter(1))\n    length = 0\n    for (g, _) in sorted_gaps:\n        if has_elec[g]:\n            if has_elec[g + 1]:\n                m = 1 + 1\n            else:\n                has_elec[g + 1] = True\n                has_road[g] = True\n                length = length + gap_sizes[g]\n                h = g + 1\n                while h < N - 1 and has_road[h] and (not has_elec[h + 1]):\n                    has_elec[h + 1] = True\n                    h = h + 1\n        elif has_elec[g + 1]:\n            has_elec[g] = True\n            has_road[g] = True\n            length = length + gap_sizes[g]\n            h = g - 1\n            while h >= 0 and has_road[h] and (not has_elec[h]):\n                has_elec[h] = True\n                h = h - 1\n        else:\n            has_road[g] = True\n            length = length + gap_sizes[g]\n    out.append(length)\n    length = 0\nfor l in out:\n    print(l)", "def func1():\n    n = int(input())\n    vs = list(input())\n    ds = list(map(int, input().split()))\n    wireLength = 0\n    l = []\n    found1 = False\n    if vs[0] == '1':\n        found1 = True\n    for i in range(1, n):\n        if vs[i] == '0':\n            l.append(ds[i] - ds[i - 1])\n            if i == n - 1:\n                wireLength += sum(l)\n        if vs[i] == '1':\n            if vs[i - 1] == '0':\n                l.append(ds[i] - ds[i - 1])\n            if len(l) != 0:\n                if found1:\n                    wireLength += sum(l) - max(l)\n                else:\n                    wireLength += sum(l)\n                l = []\n            found1 = True\n    return wireLength\nnn = int(input())\nans = []\nfor _ in range(nn):\n    ans.append(func1())\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    arr = [int(i) for i in input().split()]\n    ans = 0\n    i = 0\n    if s[0] == '0':\n        while i < len(s) - 1 and s[i] != '1':\n            ans += arr[i + 1] - arr[i]\n            i += 1\n    if i == len(s) - 1:\n        print(ans)\n        continue\n    j = n - 1\n    if s[n - 1] == '0':\n        while j > 0 and s[j] != '1':\n            ans += arr[j] - arr[j - 1]\n            j -= 1\n    if j == 0:\n        print(ans)\n        continue\n    k = i\n    while k < j:\n        if s[k + 1] == '1':\n            k += 1\n            continue\n        maxi = -1\n        while s[k + 1] != '1':\n            ans += arr[k + 1] - arr[k]\n            maxi = max(maxi, arr[k + 1] - arr[k])\n            k += 1\n        ans += arr[k + 1] - arr[k]\n        maxi = max(maxi, arr[k + 1] - arr[k])\n        if maxi != -1:\n            ans -= maxi\n        k += 1\n    print(ans)", "t = int(input())\nans = []\nfor i in range(t):\n    d = []\n    light = []\n    xcor = []\n    n = int(input())\n    ele = input()\n    xcor.extend(map(int, input().split()))\n    l = 0\n    for j in range(n):\n        if j != n - 1:\n            d.append(xcor[j + 1] - xcor[j])\n        if ele[j] == '1':\n            light.append(j)\n            l = l + 1\n    sm = 0\n    if l > 1:\n        sm = sm + xcor[light[0]] - xcor[0] + xcor[n - 1] - xcor[light[l - 1]]\n        for j in range(l - 1):\n            if light[j + 1] - light[j] > 1:\n                sm = sm + xcor[light[j + 1]] - xcor[light[j]] - max(d[light[j]:light[j + 1]])\n    else:\n        sm = sm + xcor[light[0]] - xcor[0] + xcor[n - 1] - xcor[light[0]]\n    ans.append(sm)\nfor i in range(t):\n    print(ans[i])", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    A = sys.stdin.readline()\n    B = list(map(int, sys.stdin.readline().split(' ')))\n    Node = []\n    for j in range(N):\n        Node.append([int(A[j]), B[j]])\n    wire = 0\n    start = 0\n    for j in range(len(Node)):\n        if Node[j][0] == 1:\n            start = j\n            break\n    wire = Node[start][1] - Node[0][1]\n    end = 0\n    for j in range(len(Node)):\n        if Node[len(Node) - j - 1][0] == 1:\n            end = len(Node) - j - 1\n            break\n    maxim = 0\n    for j in range(start + 1, end + 1):\n        wire += Node[j][1] - Node[j - 1][1]\n        if maxim < Node[j][1] - Node[j - 1][1] and Node[j - 1] != 1:\n            maxim = Node[j][1] - Node[j - 1][1]\n        if Node[j][0] == 1:\n            wire -= maxim\n            maxim = 0\n    wire += Node[len(Node) - 1][1] - Node[end][1]\n    print(wire)", "T = int(input())\nwhile T > 0:\n    N = int(input())\n    mystr = input()\n    user_input = input().split()\n    ind = 1\n    t = 1\n    firstNum = mystr[0]\n    mysum = 0\n    if firstNum == '0':\n        while mystr[t] != '1':\n            t += 1\n        mysum = int(user_input[t]) - int(user_input[0])\n    while t < N:\n        max_len = 0\n        total_len = 0\n        if mystr[t] == '0' and mystr[t - 1] == '1':\n            while t < N and mystr[t] != '1':\n                diff = int(user_input[t]) - int(user_input[t - 1])\n                total_len += diff\n                if diff > max_len:\n                    max_len = diff\n                t += 1\n            if t < N:\n                diff = int(user_input[t]) - int(user_input[t - 1])\n                total_len += diff\n                if diff > max_len:\n                    max_len = diff\n                mysum += total_len - max_len\n            else:\n                mysum += total_len\n        else:\n            t += 1\n    print(mysum)\n    T = T - 1", "def calcWire(L, D):\n    i = 0\n    wire = 0\n    while i < len(L):\n        if L[i] == 0:\n            leftPole = i\n            while i < len(L) and L[i] == 0:\n                i += 1\n            rightPole = i\n            if leftPole == 0:\n                wire += D[rightPole] - D[0]\n            elif rightPole > len(L) - 1:\n                wire += D[rightPole - 1] - D[leftPole - 1]\n            else:\n                j = leftPole\n                optimal = 10 ** 9 + 1\n                while j < rightPole:\n                    if D[j] - D[leftPole - 1] + D[rightPole] - D[j + 1] < optimal:\n                        optimal = D[j] - D[leftPole - 1] + D[rightPole] - D[j + 1]\n                    j += 1\n                wire += min(optimal, D[rightPole] - D[leftPole], D[rightPole - 1] - D[leftPole - 1])\n        else:\n            i += 1\n    return wire\nfrom sys import stdin\nt = int(stdin.readline())\nwhile t > 0:\n    n = int(stdin.readline())\n    L = [int(x) for x in stdin.readline().strip()]\n    D = list(map(int, stdin.readline().split()))\n    print(calcWire(L, D))\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    cin = [int(i) for i in list(input())]\n    pos = [int(i) for i in input().split()]\n    dist = [pos[i + 1] - pos[i] for i in range(n - 1)]\n    charged = [cin.index(1)]\n    while True:\n        try:\n            charged.append(cin.index(1, charged[-1] + 1))\n        except:\n            break\n    total = pos[charged[0]] - pos[0] + pos[-1] - pos[charged[-1]]\n    for (l, r) in zip(charged[:-1], charged[1:]):\n        total += sum(dist[l:r]) - max(dist[l:r])\n    print(total)", "for t in range(int(input())):\n    N = int(input())\n    s = input()\n    elec = list(map(int, list(s)))\n    villages = list(map(int, input().split()))\n    power = [i for (i, v) in enumerate(elec) if v == 1]\n    ans = 0\n    if len(power) == 1:\n        idx = elec.index(1)\n        if idx == 0 or idx == N - 1:\n            ans = villages[-1] - villages[0]\n        else:\n            ans = villages[idx] - villages[0] + villages[-1] - villages[idx]\n    else:\n        if elec[0] == 0:\n            ans += villages[elec.index(1)] - villages[0]\n        if elec[-1] == 0:\n            ans += villages[-1] - villages[s.rfind('1')]\n        for i in range(len(power) - 1):\n            min_sum = 1 << 30\n            for s in range(power[i], power[i + 1]):\n                min_sum = min(min_sum, villages[s] - villages[power[i]] + villages[power[i + 1]] - villages[s + 1])\n            ans += min_sum\n    print(ans)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    a = [int(v) for v in input()]\n    x = [int(v) for v in input().split()]\n    f = s = 0\n    while f < n - 1:\n        m = 0\n        f1 = n - 1\n        for i in range(f + 1, n):\n            m = max(m, x[i] - x[i - 1])\n            if a[i]:\n                f1 = i\n                break\n        s = s + x[f1] - x[f]\n        if a[f] and a[f1]:\n            s = s - m\n        f = f1\n    print(s)", "t = int(input())\nfor z in range(t):\n    n = int(input().strip())\n    s = input().strip()\n    x = [int(i) for i in input().strip().split()]\n    lit = [int(s[i]) for i in range(n)]\n    (lm, rm) = (-1, -1)\n    for i in range(n):\n        if s[i] == '1':\n            lm = i\n            break\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            rm = i\n            break\n    ans = 0\n    d = {}\n    ans += x[lm] + x[-1] - x[rm] - x[0]\n    tmp = x[rm] - x[lm]\n    ma = 0\n    for i in range(lm + 1, rm + 1):\n        if s[i] == '1':\n            if x[i] - x[i - 1] > ma:\n                ma = x[i] - x[i - 1]\n            tmp -= ma\n            ma = 0\n        elif x[i] - x[i - 1] > ma:\n            ma = x[i] - x[i - 1]\n    ans += tmp\n    print(ans)", "from math import *\nt = int(input())\nfor case in range(t):\n    n = int(input())\n    a = input()\n    a = [int(a[i:i + 1]) for i in range(len(a))]\n    d = [int(x) for x in input().split()]\n    count = 0\n    max_interval = 0\n    start = a[0] == 0\n    for i in range(1, n):\n        if a[i] == 0 or a[i - 1] == 0:\n            dist = d[i] - d[i - 1]\n            count += dist\n            if dist > max_interval:\n                max_interval = dist\n        if a[i] == 1:\n            if not start:\n                count -= max_interval\n            max_interval = 0\n            start = False\n    print(count)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input()\n    x = [int(xi) for xi in input().split(' ')]\n    res = 0\n    first = False\n    i = 0\n    while i < n:\n        if not first:\n            if s[i] == '1':\n                first = True\n            else:\n                res += x[i + 1] - x[i]\n            i += 1\n        elif not s[i] == '1':\n            j = i + 1\n            while j < n and (not s[j] == '1'):\n                j += 1\n            if j < n:\n                mx = 0\n                for k in range(i, j + 1):\n                    mx = max(mx, x[k] - x[k - 1])\n                    res += x[k] - x[k - 1]\n                res -= mx\n            else:\n                for k in range(i, n):\n                    res += x[k] - x[k - 1]\n            i = j\n        else:\n            i += 1\n    print(res)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    s = input()\n    (d, v) = ([], [])\n    d = list(map(int, input().split()))\n    for i in range(len(s)):\n        if s[i] == '1':\n            v.append(i)\n    if n == 1:\n        print(0)\n        continue\n    (a, ans) = (len(v), 0)\n    for i in range(v[0] - 1, -1, -1):\n        ans += d[i + 1] - d[i]\n    for i in range(v[a - 1] + 1, n):\n        ans += d[i] - d[i - 1]\n    if a == 1:\n        print(ans)\n        continue\n    for i in range(a - 1):\n        (sum, m, l, r) = (0, 0, v[i], v[i + 1])\n        for j in range(l, r):\n            sum += d[j + 1] - d[j]\n            m = max(m, d[j + 1] - d[j])\n        ans += sum - m\n    print(ans)", "T = int(input())\nanswers = []\nfor i in range(T):\n    N = int(input())\n    electricity = input()\n    coordinates = list(map(int, input().split()))\n    oneIndexes = []\n    for j in range(0, len(electricity)):\n        if electricity[j] == '1':\n            oneIndexes.append(j)\n    oneCount = len(oneIndexes)\n    if oneCount == 1:\n        total = 0\n        for j in range(1, N):\n            total = total + coordinates[j] - coordinates[j - 1]\n        answers.append(total)\n    else:\n        total = 0\n        total = total + coordinates[oneIndexes[0]] - coordinates[0]\n        total = total + coordinates[N - 1] - coordinates[oneIndexes[-1]]\n        for j in range(0, len(oneIndexes) - 1):\n            start = oneIndexes[j]\n            end = oneIndexes[j + 1]\n            minans = pow(10, 9)\n            for k in range(start, end):\n                x = coordinates[k]\n                y = coordinates[k + 1]\n                ans = x - coordinates[start] + coordinates[end] - y\n                if ans < minans:\n                    minans = ans\n            total = total + minans\n        answers.append(total)\nfor answer in answers:\n    print(answer)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    N = int(sys.stdin.readline())\n    B = [True] + [bool(int(x)) for x in sys.stdin.readline().strip()] + [True]\n    X = [-10 ** 18] + [int(x) for x in sys.stdin.readline().split()] + [10 ** 18]\n    s = 0\n    mx = -1\n    o = 0\n    for i in range(1, N + 2):\n        if mx < X[i] - X[i - 1]:\n            mx = X[i] - X[i - 1]\n        if B[i]:\n            if not B[i - 1]:\n                s += X[i] - X[o] - mx\n            mx = -1\n            o = i\n    print(s)", "T = int(input())\nfor tt in range(T):\n    (x, N) = (0, int(input()))\n    S = input() + '$'\n    A = [int(y) for y in input().split(' ')]\n    cost = 0\n    while x < N:\n        if S[x] == '0':\n            (start, end) = (x, x)\n            while S[end] == '0':\n                end += 1\n            if start == 0:\n                cost += A[end] - A[0]\n            elif end == N:\n                cost += A[N - 1] - A[start - 1]\n            else:\n                t_cost = 1000000000\n                for i in range(start, end + 1):\n                    t_cost = min(t_cost, A[end] - A[i] + A[i - 1] - A[start - 1])\n                cost += t_cost\n            x = end\n        else:\n            x += 1\n    print(cost)", "tests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    s = input()\n    d = list(map(int, input().split()))\n    mdiff = -1\n    (r, l, ans) = (int(), 0, 0)\n    if s[0] == '0':\n        while s[l] == '0':\n            l += 1\n        ans += d[l] - d[0]\n    r = n - 1\n    if s[n - 1] == '0':\n        r = n - 1\n        while s[r] != '1':\n            r -= 1\n        ans += d[n - 1] - d[r]\n    i = l + 1\n    while i <= r:\n        if d[i] - d[i - 1] > mdiff:\n            mdiff = d[i] - d[i - 1]\n        if s[i] == '1':\n            if s[i - 1] == '0':\n                lt = d[i] - d[l]\n                ans += lt - mdiff\n            l = i\n            mdiff = -1\n        i += 1\n    print(ans)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    s = input()\n    l = list(map(int, input().split()))\n    l1 = []\n    i = 1\n    while i < n:\n        l1 += [l[i] - l[i - 1]]\n        i += 1\n    k1 = s.index('1')\n    c = s.count('1')\n    ans = l[n - 1] - l[0]\n    while c > 1:\n        k2 = s.index('1', k1 + 1)\n        ans -= max(l1[k1:k2])\n        c -= 1\n        k1 = k2\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = input()\n    y = input().split()\n    d = []\n    for i in range(n):\n        d.append(int(y[i]))\n    s = 0\n    i = 0\n    while a[i] == '0':\n        s = s + (d[i + 1] - d[i])\n        i = i + 1\n    loc1 = i\n    i = n - 1\n    while a[i] == '0':\n        s = s + (d[i] - d[i - 1])\n        i = i - 1\n    loc2 = i\n    while loc1 < loc2:\n        i = loc1\n        flag = 0\n        while a[i + 1] == '1':\n            i = i + 1\n            if i == loc2:\n                flag = 1\n                break\n        if flag == 1:\n            break\n        j = i\n        maximum = 0\n        g = 0\n        while a[j + 1] == '0':\n            g = g + (d[j + 1] - d[j])\n            if maximum < d[j + 1] - d[j]:\n                maximum = d[j + 1] - d[j]\n            j = j + 1\n        g = g + (d[j + 1] - d[j])\n        if maximum < d[j + 1] - d[j]:\n            maximum = d[j + 1] - d[j]\n        g = g - maximum\n        s = s + g\n        loc1 = j + 1\n    print(s)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = [int(temp) for temp in input().strip().split(' ')]\n    f = 0\n    l = 0\n    sm = 0\n    for b in range(len(s)):\n        if s[b] == '1':\n            f = l = b\n            sm += a[f] - a[0]\n            break\n    for i in range(f + 1, len(s)):\n        if s[i] == '1':\n            l = i\n            max = 0\n            for k in range(f, l):\n                curr = a[k + 1] - a[k]\n                if curr > max:\n                    max = curr\n            sm += a[l] - a[f] - max\n            f = l\n    sm += a[n - 1] - a[l]\n    print(sm)", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    marker = input()\n    a = list(map(int, input().split()))\n    sum = 0\n    count = 0\n    if marker[0] == '0':\n        count += 1\n        while marker[count] == '0':\n            count += 1\n        sum += a[count] - a[0]\n    count += 1\n    max = 0\n    h1 = 0\n    h2 = 0\n    flag = 0\n    for j in range(count, n):\n        if marker[j] == '0':\n            if marker[j - 1] == '1':\n                h1 = j - 1\n                x = a[j] - a[j - 1]\n                if x > max:\n                    max = x\n            elif marker[j - 1] == '0':\n                x = a[j] - a[j - 1]\n                if x > max:\n                    max = x\n        elif marker[j] == '1':\n            if marker[j - 1] == '0':\n                h2 = j\n                x = a[j] - a[j - 1]\n                if x > max:\n                    max = x\n                sum += a[h2] - a[h1] - max\n                max = 0\n    if marker[n - 1] == '0':\n        sum += a[n - 1] - a[h1]\n    ans.append(sum)\nfor x in ans:\n    print(x)", "T = int(input())\nwhile T > 0:\n    T -= 1\n    N = int(input())\n    light = [int(x) for x in input()]\n    x = [int(x) for x in input().split()]\n    i = 0\n    while light[i] != 1:\n        i += 1\n    cost = x[i] - x[0]\n    prev = i\n    i += 1\n    while i < N:\n        Flag = True\n        while light[i] != 1:\n            if i == N - 1:\n                cost += x[N - 1] - x[prev]\n                Flag = False\n                break\n            else:\n                i += 1\n        if Flag:\n            tmp = 10 ** 15\n            for k in range(prev + 1, i):\n                tmp = min(tmp, x[k] - x[prev] + x[i] - x[k + 1], x[k - 1] - x[prev] + x[i] - x[k])\n            if tmp == 10 ** 15:\n                tmp = 0\n            cost += tmp\n            prev = i\n        i += 1\n    print(cost)", "T = int(input())\nfor t in range(T):\n    N = int(input()) + 2\n    s = '1' + input() + '1'\n    A = [-10000000000] + [int(x) for x in input().split()] + [10000000000]\n    ss = 0\n    mm = 0\n    ans = 0\n    for i in range(1, N):\n        ss += A[i] - A[i - 1]\n        mm = max(mm, A[i] - A[i - 1])\n        if s[i] == '1':\n            ans += ss - mm\n            ss = 0\n            mm = 0\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    elec = input()\n    coord = list(map(int, input().split()))\n    sum1 = 0\n    sum = 0\n    temp1 = elec.index('1')\n    for j in range(0, temp1):\n        x = coord[j + 1] - coord[j]\n        sum1 += x\n    max = 0\n    for j in range(temp1, n - 1):\n        if elec[j] == '1':\n            sum -= max\n            max = 0\n        x = coord[j + 1] - coord[j]\n        sum += x\n        if x > max:\n            max = x\n    if elec[n - 1] == '1':\n        sum -= max\n    print(sum1 + sum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    x = list(map(int, input().split()))\n    p = []\n    cum = 0\n    l = 0\n    for j in range(n):\n        if s[j] == '1':\n            p += [j]\n            l += 1\n    j = 0\n    k = 0\n    if p[k] == j:\n        k += 1\n    else:\n        while j < p[k]:\n            z = x[j + 1] - x[j]\n            cum += z\n            j += 1\n        k += 1\n    while j < n:\n        if k == l:\n            while j < n - 1:\n                z = x[j + 1] - x[j]\n                cum += z\n                j += 1\n            break\n        m = 0\n        while j < p[k]:\n            z = x[j + 1] - x[j]\n            cum += z\n            if m < z:\n                m = z\n            j += 1\n        cum -= m\n        k += 1\n    print(cum)", "def test(n, y, x):\n    v = x[-1] - x[0]\n    w = False\n    record = 0\n    for i in range(n):\n        if i:\n            delta = x[i] - x[i - 1]\n            if delta > record:\n                record = delta\n        if y[i]:\n            if w:\n                v -= record\n            else:\n                w = True\n            record = 0\n    return v\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    y = list(map(int, list(input())))\n    x = list(map(int, input().split()))\n    print(test(n, y, x))", "MAX = 1 + 10 ** 9\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    E = input()\n    X = list(map(int, input().strip().split()))\n    ans = 0\n    if E[0] == '0':\n        E = E.lstrip('0')\n        i = N - len(E)\n        ans = ans + X[i] - X[0]\n        X = X[i:]\n        N -= i\n    if E[-1] == '0':\n        E = E.rstrip('0')\n        i = N - len(E)\n        ans = ans + X[-1] - X[N - i - 1]\n        X = X[:N - i]\n        N = N - i\n    E = list(E)\n    A = [0] * N\n    B = [0] * N\n    if N > 1:\n        cur = 0\n        for i in range(N):\n            if E[i] == '1':\n                cur = 0\n            else:\n                A[i] = A[i - 1] + X[i] - X[i - 1]\n        for i in range(N - 1, -1, -1):\n            if E[i] == '1':\n                cur = 0\n            else:\n                B[i] = B[i + 1] + X[i + 1] - X[i]\n        i = 0\n        while i < N - 1:\n            if E[i] == '1':\n                mn = MAX\n                i += 1\n                while E[i] != '1':\n                    mn = min(mn, A[i - 1] + B[i])\n                    i += 1\n                mn = min(mn, A[i - 1] + B[i])\n                ans += mn\n    print(ans)", "INT_MAX = 10 ** 18\n\ndef get_ans(start, end, maps):\n    ans = INT_MAX\n    for i in range(start, end):\n        temp = maps[end] - maps[i + 1] + maps[i] - maps[start]\n        if temp < ans:\n            ans = temp\n    return ans\nt = int(input())\nwhile t:\n    n = int(input())\n    status = input()\n    maps = [int(loc) for loc in input().split()]\n    ans = 0\n    indices = [i for (i, x) in enumerate(status) if x == '1']\n    ans += maps[indices[0]] - maps[0] + (maps[-1] - maps[indices[-1]])\n    for i in range(len(indices) - 1):\n        ans += get_ans(indices[i], indices[i + 1], maps)\n    print(ans)\n    t -= 1", "import sys\nf = sys.stdin\nbig = 10 ** 15\n\ndef solve(ee, x):\n    ret = 0\n    x0 = 0\n    for i in range(len(ee)):\n        if ee[i] == 0 or x0 > 0:\n            dx = x[i] - x[i - 1] if i > 0 else big\n            x0 = max(x0, dx)\n            ret += dx\n        if ee[i] == 1:\n            ret -= x0\n            x0 = 0\n    return ret\nt = int(f.readline())\nfor i in range(t):\n    n = int(f.readline())\n    ee = list(map(int, list(f.readline())[:-1]))\n    x = list(map(int, f.readline().split()))\n    print(solve(ee, x))"]