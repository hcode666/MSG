["from collections import defaultdict\n\ndef Test(n, c, w):\n    d = {}\n    for j in c:\n        d[j] = 0\n    (s, a, ans) = (0, 0, 0)\n    for k in range(n):\n        d[c[k]] += 1\n        while d[c[k]] == 2:\n            d[c[a]] -= 1\n            s -= w[a]\n            a += 1\n        s += w[k]\n        ans = max(ans, s)\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    print(Test(n, c, w))", "from collections import defaultdict\n\ndef Test(n, c, w):\n    d = {}\n    for j in c:\n        d[j] = 0\n    (s, a, ans) = (0, 0, 0)\n    for k in range(n):\n        d[c[k]] += 1\n        while d[c[k]] == 2:\n            d[c[a]] -= 1\n            s -= w[a]\n            a += 1\n        s += w[k]\n        ans = max(ans, s)\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    print(Test(n, c, w))", "from collections import defaultdict\n\ndef Test(n, c, w):\n    d = {}\n    for j in c:\n        d[j] = 0\n    (s, a, ans) = (0, 0, 0)\n    for k in range(n):\n        d[c[k]] += 1\n        while d[c[k]] == 2:\n            d[c[a]] -= 1\n            s -= w[a]\n            a += 1\n        s += w[k]\n        ans = max(ans, s)\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    print(Test(n, c, w))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    Ws = [W[0]]\n    for i in range(1, n):\n        Ws.append(Ws[-1] + W[i])\n    S = [(0, 0)]\n    R = [-1] * n\n    R[C[0]] = 0\n    ini = 0\n    for i in range(1, n):\n        a = C[i]\n        if R[a] == -1:\n            S.append((ini, i))\n            R[a] = i\n            pass\n        elif R[a] < ini:\n            S.append((ini, i))\n            R[a] = i\n        else:\n            ini = R[a] + 1\n            S.append((ini, i))\n            R[a] = i\n    Su = []\n    for i in range(n):\n        (a, b) = S[i]\n        if a == 0:\n            Su.append(Ws[b])\n        else:\n            Su.append(Ws[b] - Ws[a - 1])\n    print(max(Su))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    d = {}\n    for j in c:\n        d[j] = 0\n    (s, a, ans) = (0, 0, 0)\n    for k in range(n):\n        d[c[k]] += 1\n        while d[c[k]] == 2:\n            d[c[a]] -= 1\n            s -= w[a]\n            a += 1\n        s += w[k]\n        ans = max(ans, s)\n    print(ans)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    freq = {}\n    for elem in c:\n        freq[elem] = 0\n    (sum, st, ans) = (0, 0, 0)\n    for i in range(n):\n        freq[c[i]] += 1\n        while freq[c[i]] == 2:\n            freq[c[st]] -= 1\n            sum -= w[st]\n            st += 1\n        sum += w[i]\n        ans = max(ans, sum)\n    print(ans)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    freq = {}\n    for elem in c:\n        freq[elem] = 0\n    (sum, st, ans) = (0, 0, 0)\n    for i in range(n):\n        freq[c[i]] += 1\n        while freq[c[i]] == 2:\n            freq[c[st]] -= 1\n            sum -= w[st]\n            st += 1\n        sum += w[i]\n        ans = max(ans, sum)\n    print(ans)", "for k in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    vaish = list(map(int, input().split()))\n    s = set([])\n    st = 0\n    s.add(c[0])\n    maxk = vaish[0]\n    sumk = vaish[0]\n    for j in range(1, n):\n        sumk += vaish[j]\n        if c[j] not in s:\n            s.add(c[j])\n        else:\n            while st < j and c[j] != c[st]:\n                s.remove(c[st])\n                st += 1\n                sumk -= vaish[st - 1]\n            st += 1\n            sumk -= vaish[st - 1]\n        if sumk > maxk:\n            maxk = sumk\n    print(maxk)", "for k in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    vaish = list(map(int, input().split()))\n    s = set([])\n    st = 0\n    s.add(c[0])\n    maxk = vaish[0]\n    sumk = vaish[0]\n    for j in range(1, n):\n        sumk += vaish[j]\n        if c[j] not in s:\n            s.add(c[j])\n        else:\n            while st < j and c[j] != c[st]:\n                s.remove(c[st])\n                st += 1\n                sumk -= vaish[st - 1]\n            st += 1\n            sumk -= vaish[st - 1]\n        if sumk > maxk:\n            maxk = sumk\n    print(maxk)", "for _ in range(int(input())):\n    N = int(input())\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    vi = [0] * N\n    M = 0\n    Sum = 0\n    L = 0\n    for i in range(N):\n        if vi[C[i]] == 0:\n            Sum += W[i]\n            vi[C[i]] = 1\n        else:\n            M = max(M, Sum)\n            Sum += W[i]\n            k = C.index(C[i], L, i)\n            Sum -= sum(W[L:k + 1])\n            for j in range(L, k):\n                vi[C[j]] = 0\n            L = k + 1\n    print(max(M, Sum))", "for _ in range(int(input())):\n    N = int(input())\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    vi = [0] * N\n    M = 0\n    Sum = 0\n    L = 0\n    for i in range(N):\n        if vi[C[i]] == 0:\n            Sum += W[i]\n            vi[C[i]] = 1\n        else:\n            M = max(M, Sum)\n            Sum += W[i]\n            k = C.index(C[i], L, i)\n            Sum -= sum(W[L:k + 1])\n            for j in range(L, k):\n                vi[C[j]] = 0\n            L = k + 1\n    M = max(M, Sum)\n    print(M)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    vi = [0] * N\n    M = 0\n    Sum = 0\n    L = 0\n    for i in range(N):\n        if vi[C[i]] == 0:\n            Sum += W[i]\n            vi[C[i]] = 1\n        else:\n            M = max(M, Sum)\n            Sum += W[i]\n            k = C.index(C[i], L, i)\n            Sum -= sum(W[L:k + 1])\n            for j in range(L, k):\n                vi[C[j]] = 0\n            L = k + 1\n    M = max(M, Sum)\n    print(M)", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    vi = [0] * N\n    M = 0\n    Sum = 0\n    L = 0\n    for i in range(N):\n        if vi[C[i]] == 0:\n            Sum += W[i]\n            vi[C[i]] = 1\n        else:\n            M = max(M, Sum)\n            Sum += W[i]\n            k = C.index(C[i], L, i)\n            Sum -= sum(W[L:k + 1])\n            for j in range(L, k):\n                vi[C[j]] = 0\n            L = k + 1\n    M = max(M, Sum)\n    print(M)", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    vi = [0] * N\n    M = 0\n    Sum = 0\n    L = 0\n    for i in range(N):\n        if vi[C[i]] == 0:\n            Sum += W[i]\n            vi[C[i]] = 1\n        else:\n            M = max(M, Sum)\n            Sum += W[i]\n            k = C.index(C[i], L, i)\n            Sum -= sum(W[L:k + 1])\n            for j in range(L, k):\n                vi[C[j]] = 0\n            L = k + 1\n    M = max(M, Sum)\n    print(M)", "red = lambda : list(map(int, input().split()))\nfrom itertools import accumulate\nfor i in range(int(input())):\n    n = int(input())\n    l = red()\n    wi = list(map(int, ('0 ' + input()).split()))\n    wis = list(accumulate(wi))\n    j = m = 0\n    s = set()\n    for i in range(n):\n        while j < n and l[i] in s:\n            s.remove(l[j])\n            j += 1\n        s.add(l[i])\n        m = max(m, wis[i + 1] - wis[j])\n    print(m)", "red = lambda : list(map(int, input().split()))\nfrom itertools import accumulate\nfor i in range(int(input())):\n    n = int(input())\n    l = red()\n    wi = list(map(int, ('0 ' + input()).split()))\n    wis = list(accumulate(wi))\n    j = 0\n    s = set()\n    m = 0\n    for i in range(n):\n        while j < n and l[i] in s:\n            s.remove(l[j])\n            j += 1\n        s.add(l[i])\n        m = max(m, wis[i + 1] - wis[j])\n    print(m)", "def answer():\n    c = [0] * (n + 1)\n    (ans, i, j, s) = (0, 0, 0, 0)\n    for i in range(n):\n        while j < n and c[a[j]] == 0:\n            c[a[j]] += 1\n            s += w[j]\n            j += 1\n        ans = max(ans, s)\n        if j == n:\n            break\n        c[a[i]] -= 1\n        s -= w[i]\n    return ans\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    print(answer())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    s = set([])\n    start = 0\n    s.add(c[0])\n    maxi = w[0]\n    sumi = w[0]\n    for j in range(1, n):\n        sumi += w[j]\n        if c[j] not in s:\n            s.add(c[j])\n        else:\n            while start < j and c[j] != c[start]:\n                s.remove(c[start])\n                start += 1\n                sumi -= w[start - 1]\n            start += 1\n            sumi -= w[start - 1]\n        if sumi > maxi:\n            maxi = sumi\n    print(maxi)", "from math import *\nfrom collections import defaultdict\nR = lambda : list(map(int, input().split()))\nMOD = 1000000007\nfor _ in range(int(input())):\n    (n,) = R()\n    c = R()\n    w = R()\n    d = defaultdict(lambda : -1)\n    mx = 0\n    (l, r) = (0, 0)\n    sm = 0\n    while l < n and r < n:\n        idx = d[c[r]]\n        if idx != -1:\n            while l <= idx:\n                d[c[l]] = -1\n                sm -= w[l]\n                l += 1\n        else:\n            sm += w[r]\n            mx = max(mx, sm)\n            d[c[r]] = r\n            r += 1\n    print(mx)", "test = int(input())\nfor _ in range(test):\n    input()\n    ls = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    (s, i) = (set([ls[0]]), 0)\n    c = mx = l[0]\n    for j in range(1, len(ls)):\n        while ls[j] in s:\n            mx = max(mx, c)\n            s.remove(ls[i])\n            c -= l[i]\n            i += 1\n        s.add(ls[j])\n        c += l[j]\n    print(max(mx, c))", "for _ in range(int(input())):\n    input()\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    (s, i) = (set([C[0]]), 0)\n    c = mx = W[0]\n    for j in range(1, len(C)):\n        while C[j] in s:\n            mx = max(mx, c)\n            s.remove(C[i])\n            c -= W[i]\n            i += 1\n        s.add(C[j])\n        c += W[j]\n    print(max(mx, c))", "def maxsegm(C, W):\n    (d, s, t, i, r) = ({0: 0}, set(), 0, 0, 0)\n    for j in range(len(C)):\n        t += W[j]\n        d[j + 1] = t\n        while C[j] in s:\n            s.remove(C[i])\n            i += 1\n        s.add(C[j])\n        r = max(r, t - d[i])\n    return r\nfor _ in range(int(input())):\n    input()\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    print(maxsegm(C, W))", "def maxsegm(C, W):\n    (d, s, t, i, r) = ({0: 0}, set(), 0, 0, 0)\n    for j in range(len(C)):\n        t += W[j]\n        d[j + 1] = t\n        while C[j] in s:\n            s.remove(C[i])\n            i += 1\n        s.add(C[j])\n        r = max(r, t - d[i])\n    return r\nfor _ in range(int(input())):\n    input()\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    print(maxsegm(C, W))", "def maxsegm(C, W):\n    (d, s, t, i, r) = ({0: 0}, set(), 0, 0, 0)\n    for j in range(len(C)):\n        t += W[j]\n        d[j + 1] = t\n        while C[j] in s:\n            s.remove(C[i])\n            i += 1\n        s.add(C[j])\n        r = max(r, t - d[i])\n    return r\nfor _ in range(int(input())):\n    input()\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    print(maxsegm(C, W))", "for t in range(int(input())):\n    n = int(input())\n    cost = list(map(int, input().strip().split()))\n    weight = list(map(int, input().strip().split()))\n    s = [0] * (n + 1)\n    for i in range(n):\n        s[i + 1] = s[i] + weight[i]\n    ans = 0\n    i = 0\n    d = {}\n    for j in range(n):\n        if cost[j] not in d:\n            d[cost[j]] = -1\n        if d[cost[j]] >= i:\n            i = d[cost[j]] + 1\n        d[cost[j]] = j\n        ans = max(ans, s[j + 1] - s[i])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    d = {}\n    j = 0\n    i = 0\n    ans = 0\n    mans = 0\n    while i < n:\n        if d.get(c[i], 0) == 0:\n            ans += w[i]\n            if ans > mans:\n                mans = ans\n            d[c[i]] = 1\n            i += 1\n        else:\n            d[c[j]] -= 1\n            ans -= w[j]\n            j += 1\n    print(mans)", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    d = {}\n    j = 0\n    i = 0\n    ans = 0\n    mans = 0\n    while i < n:\n        if d.get(c[i], 0) < 1:\n            ans += w[i]\n            if ans > mans:\n                mans = ans\n            d[c[i]] = 1\n            i += 1\n        else:\n            d[c[j]] -= 1\n            ans -= w[j]\n            j += 1\n    print(mans)", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    (prefix, maxi, l) = ([], 0, 0)\n    unique = {}\n    for i in range(n):\n        if not i:\n            prefix.append(w[i])\n        else:\n            prefix.append(prefix[i - 1] + w[i])\n        if c[i] in unique:\n            if unique[c[i]] >= l:\n                l = unique[c[i]]\n        maxi = max(maxi, prefix[i] if l == 0 else prefix[i] - prefix[l - 1])\n        unique[c[i]] = i + 1\n    print(maxi)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = [0]\n    for i in b:\n        x.append(x[-1] + i)\n    ans = [0] * n\n    d = {}\n    c = 0\n    for i in range(n):\n        try:\n            e = d[a[i]]\n            c = x[i + 1] - x[e + 1]\n            del d\n            d = {}\n            for j in range(e + 1, i + 1):\n                d[a[j]] = j\n            ans[i] = c\n        except:\n            d[a[i]] = i\n            c += b[i]\n            ans[i] = c\n    print(max(ans))", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    visited = [0] * n\n    loop_sum = 0\n    max_sum = 0\n    left_end = 0\n    first_index = 0\n    for i in range(n):\n        if visited[c[i]] == 0:\n            loop_sum += w[i]\n            visited[c[i]] = 1\n        else:\n            max_sum = max(max_sum, loop_sum)\n            loop_sum += w[i]\n            first_index = c.index(c[i], left_end, i)\n            loop_sum -= sum(w[left_end:first_index + 1])\n            for j in range(left_end, first_index):\n                visited[c[j]] = 0\n            left_end = first_index + 1\n    m = max(max_sum, loop_sum)\n    print(m)", "for _ in range(int(input())):\n    N = int(input())\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    visited = [0] * N\n    MaxSum = 0\n    TestSum = 0\n    L = 0\n    for i in range(N):\n        if visited[C[i]] == 0:\n            TestSum += W[i]\n            visited[C[i]] = 1\n        else:\n            MaxSum = max(MaxSum, TestSum)\n            TestSum += W[i]\n            k = C.index(C[i], L, i)\n            TestSum -= sum(W[L:k + 1])\n            for j in range(L, k):\n                visited[C[j]] = 0\n            L = k + 1\n    MaxSum = max(MaxSum, TestSum)\n    print(MaxSum)", "def solution(C, W):\n    low = 0\n    k = {}\n    k[C[low]] = 0\n    maxi = W[0]\n    ans = W[0]\n    for i in range(1, len(C)):\n        if C[i] not in k.keys():\n            ans += W[i]\n            k[C[i]] = i\n        elif k[C[i]] >= low:\n            j = low\n            while j <= k[C[i]]:\n                ans -= W[j]\n                j += 1\n            ans += W[i]\n            low = k[C[i]] + 1\n            k[C[i]] = i\n        else:\n            ans += W[i]\n            k[C[i]] = i\n        if maxi < ans:\n            maxi = ans\n    return maxi\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    print(solution(C, W))", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    c = input()\n    c = [int(x) for x in c.split(' ')]\n    w = input()\n    w = [int(x) for x in w.split(' ')]\n    arr = [0] * n\n    max = w[0]\n    sum = w[0]\n    lo = 0\n    hi = 1\n    arr[c[0]] = 1\n    while hi < n:\n        if arr[c[hi]] == 0:\n            arr[c[hi]] = 1\n            sum = sum + w[hi]\n            hi = hi + 1\n        else:\n            arr[c[lo]] = 0\n            sum = sum - w[lo]\n            lo = lo + 1\n        if sum > max:\n            max = sum\n    print(max)\n    t = t - 1", "t = int(input())\nfor cs in range(t):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    found = [False for i in range(n)]\n    max_sum = 0\n    unique_sum = 0\n    i = 0\n    for j in range(n):\n        if found[c[j]]:\n            while c[i] != c[j]:\n                found[c[i]] = False\n                unique_sum -= w[i]\n                i += 1\n            unique_sum -= w[i]\n            i += 1\n        found[c[j]] = True\n        unique_sum += w[j]\n        max_sum = max(max_sum, unique_sum)\n    print(max_sum)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    c_array = [i for i in map(int, input().split())]\n    w_array = [i for i in map(int, input().split())]\n    seen = [False for i in range(n)]\n    result_sum = 0\n    i = 0\n    j = 0\n    max_sum = 0\n    while j < n:\n        if seen[c_array[j]] == True:\n            while c_array[i] != c_array[j]:\n                result_sum -= w_array[i]\n                seen[c_array[i]] = False\n                i += 1\n            seen[c_array[i]] = False\n            result_sum -= w_array[i]\n            i += 1\n        seen[c_array[j]] = True\n        result_sum += w_array[j]\n        if max_sum < result_sum:\n            max_sum = result_sum\n        j += 1\n    print(max_sum)", "hash = []\nfor i in range(1000000):\n    hash.append(0)\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    for i in range(n):\n        hash[i] = 0\n    maxx = max(w)\n    l = 0\n    r = 1\n    s = w[0]\n    hash[a[0]] += 1\n    if r < n:\n        hash[a[r]] += 1\n        s += w[r]\n    while l < n and r < n:\n        if l == r:\n            r += 1\n            if r < n:\n                hash[a[r]] += 1\n                s += w[r]\n        elif hash[a[r]] < 2 and hash[a[l]] < 2:\n            if maxx < s:\n                maxx = s\n            r += 1\n            if r < n:\n                hash[a[r]] += 1\n                s += w[r]\n        else:\n            s -= w[l]\n            hash[a[l]] -= 1\n            l += 1\n    print(maxx)", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    ans = [False] * n\n    m = 0\n    s = 0\n    l = 0\n    r = 0\n    while True:\n        while r < n and (not ans[c[r]]):\n            s += w[r]\n            ans[c[r]] = True\n            r += 1\n        m = max(m, s)\n        if r == n:\n            break\n        while ans[c[r]]:\n            ans[c[l]] = False\n            s -= w[l]\n            l += 1\n    print(m)", "for t in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    pres = [0]\n    for i in range(n):\n        pres.append(pres[-1] + w[i])\n    (i, j) = (0, 1)\n    ma = 0\n    x = {c[0]}\n    while i < n:\n        if j < n and c[j] not in x:\n            x.add(c[j])\n            j += 1\n        else:\n            x.remove(c[i])\n            i += 1\n        diff = pres[j] - pres[i]\n        if ma < diff:\n            ma = diff\n    print(ma)", "for t in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    part = [0]\n    for i in range(n):\n        part.append(part[-1] + w[i])\n    (i, j) = (0, 1)\n    maxi = 0\n    x = {c[0]}\n    while i < n:\n        if j < n and c[j] not in x:\n            x.add(c[j])\n            j += 1\n        else:\n            x.remove(c[i])\n            i += 1\n        diff = part[j] - part[i]\n        if maxi < diff:\n            maxi = diff\n    print(maxi)", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a = [0] * 1000001\n    i = j = sum = ans = 0\n    while i < n:\n        while j < n and a[c[j]] == 0:\n            a[c[j]] = 1\n            sum += w[j]\n            j += 1\n        ans = max(sum, ans)\n        a[c[i]] = 0\n        sum -= w[i]\n        i += 1\n    print(max(ans, sum))", "for _ in range(int(input())):\n    a = [0] * 1000001\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    i = j = s = ans = 0\n    while i < n and j < n:\n        while j < n and a[c[j]] == 0:\n            a[c[j]] = 1\n            s += w[j]\n            j += 1\n        ans = max(ans, s)\n        s -= w[i]\n        a[c[i]] = 0\n        i += 1\n    print(ans)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    u = []\n    s = 0\n    st = set()\n    i = 0\n    d = dict()\n    while i < n:\n        if c[i] not in st:\n            s = s + w[i]\n            st.add(c[i])\n            d[c[i]] = i\n            i = i + 1\n        else:\n            u.append(s)\n            s = 0\n            i = d[c[i]] + 1\n            st.clear()\n            d.clear()\n    u.append(s)\n    print(max(u))", "cases = int(input())\nfor x in range(cases):\n    nums = int(input())\n    array = list(map(int, input().split()))\n    weights = [0] + list(map(int, input().split()))\n    dictionary = {}\n    prev = 0\n    score = 0\n    for index in range(nums):\n        weights[index + 1] += weights[index]\n        item = array[index]\n        dict_index = dictionary.get(item)\n        if dict_index is not None:\n            prev = max(prev, dict_index)\n        score = max(score, weights[index + 1] - weights[prev])\n        dictionary[item] = index + 1\n    print(score)", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    pres = [0]\n    for i in range(n):\n        pres.append(pres[-1] + w[i])\n    prev = 0\n    (i, j) = (0, 1)\n    ma = 0\n    x = {c[0]}\n    while i < n:\n        if j < n and c[j] not in x:\n            x.add(c[j])\n            j += 1\n        else:\n            x.remove(c[i])\n            i += 1\n        diff = pres[j] - pres[i]\n        if ma < diff:\n            ma = diff\n    print(ma)", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    pres = [0]\n    for i in range(n):\n        pres.append(pres[-1] + w[i])\n    prev = 0\n    (i, j) = (0, 1)\n    ma = 0\n    x = {c[0]}\n    while i < n:\n        while j < n and c[j] not in x:\n            x.add(c[j])\n            j += 1\n        diff = pres[j] - pres[i]\n        if ma < diff:\n            ma = diff\n        x.remove(c[i])\n        i += 1\n    print(ma)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    res = 0\n    d1 = {}\n    sum1 = 0\n    s1 = []\n    max1 = 0\n    k = -1\n    for j in range(n):\n        sum1 += l2[j]\n        s1.append(sum1)\n        if d1.get(l1[j], -1) == -1:\n            if k >= 0:\n                res = s1[j] - s1[k]\n            else:\n                res = s1[j]\n            d1[l1[j]] = j\n        else:\n            if d1[l1[j]] > k:\n                k = d1[l1[j]]\n            res = s1[j] - s1[k]\n            d1[l1[j]] = j\n        if res > max1:\n            max1 = res\n    print(max1)", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    a = []\n    b = []\n    a = list(map(int, input().strip().split(' ')))\n    b = list(map(int, input().strip().split(' ')))\n    s = 0\n    e = 0\n    max = 0\n    sum = 0\n    bucket = [0] * n\n    for i in range(n):\n        if bucket[a[i]] == 0:\n            e = i\n            bucket[a[i]] = 1\n            sum = sum + b[i]\n        else:\n            if sum > max:\n                max = sum\n            while s <= e:\n                bucket[a[s]] = 0\n                sum = sum - b[s]\n                s = s + 1\n                if a[s - 1] == a[i]:\n                    bucket[a[i]] = 1\n                    e = i\n                    sum = sum + b[i]\n                    break\n    if sum > max:\n        max = sum\n    print(max)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    indexes = list(map(int, input().split()))\n    values = list(map(int, input().split()))\n    leftsum = [-1] * n\n    lastindex = [-1] * n\n    startindex = 0\n    tempindex = 0\n    maxsum = 0\n    tempsum = 0\n    totalsum = 0\n    for i in range(n):\n        if lastindex[indexes[i]] >= tempindex:\n            tempsum = totalsum - leftsum[indexes[i]] + values[i]\n            if tempsum >= maxsum:\n                maxsum = tempsum\n                startindex = i\n            tempindex = lastindex[indexes[i]] + 1\n            totalsum += values[i]\n            leftsum[indexes[i]] = totalsum\n            lastindex[indexes[i]] = i\n        else:\n            tempsum += values[i]\n            totalsum += values[i]\n            leftsum[indexes[i]] = totalsum\n            lastindex[indexes[i]] = i\n            if tempsum > maxsum:\n                maxsum = tempsum\n    print(maxsum)", "T = int(input())\nfor eachCase in range(T):\n    N = int(input())\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    seen = [False] * N\n    L = R = 0\n    maxSum = currentSum = 0\n    while True:\n        while R < N and (not seen[C[R]]):\n            currentSum += W[R]\n            seen[C[R]] = True\n            R += 1\n        maxSum = max(currentSum, maxSum)\n        if R == N:\n            break\n        while seen[C[R]]:\n            seen[C[L]] = False\n            currentSum -= W[L]\n            L += 1\n    print(maxSum)", "for t in range(int(input())):\n    n = int(input())\n    ar2 = input().split()\n    x = {}\n    for i in range(n):\n        ar2[i] = int(ar2[i])\n        x[ar2[i]] = False\n    ar = input().split()\n    ar[0] = int(ar[0])\n    for i in range(1, n):\n        ar[i] = int(ar[i])\n        ar[i] = ar[i - 1] + ar[i]\n    ar.append(0)\n    i = j = 0\n    ans = tans = 0\n    while i < n:\n        while j < n and x[ar2[j]] == False:\n            x[ar2[j]] = True\n            tans = ar[j] - ar[i - 1]\n            ans = max(tans, ans)\n            j = j + 1\n        x[ar2[i]] = False\n        i = i + 1\n    print(ans)", "def find(n, c, w):\n    big = 0\n    sum = 0\n    sum1 = 0\n    j = 0\n    a = [0 for i in range(n)]\n    m = {}\n    x = -1\n    while j < n:\n        sum1 += w[j]\n        a[j] = sum1\n        if c[j] not in m:\n            if x >= 0:\n                sum = a[j] - a[x]\n            else:\n                sum = a[j]\n            m[c[j]] = j\n        else:\n            if m[c[j]] > x:\n                x = m[c[j]]\n            sum = a[j] - a[x]\n            m[c[j]] = j\n        if sum > big:\n            big = sum\n        j += 1\n    return big\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    print(find(n, c, w))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    C = [int(x) for x in input().strip().split()]\n    W = [int(x) for x in input().strip().split()]\n    C_location = []\n    latest_location = []\n    for i in range(0, n):\n        C_location.append(False)\n        latest_location.append(-1)\n    maxm_unique_sum = -1\n    sum_until = []\n    prev_summ = 0\n    for val in W:\n        prev_summ += val\n        sum_until.append(prev_summ)\n    i = 0\n    start = i\n    while i < n:\n        while i < n:\n            if C_location[C[i]]:\n                if latest_location[C[i]] < start:\n                    latest_location[C[i]] = i\n                    i += 1\n                    continue\n                break\n            latest_location[C[i]] = i\n            C_location[C[i]] = True\n            i += 1\n        end = i - 1\n        prev_summ = sum_until[end] - sum_until[start] + W[start]\n        if prev_summ > maxm_unique_sum:\n            maxm_unique_sum = prev_summ\n        if i < n:\n            start = latest_location[C[i]] + 1\n            latest_location[C[i]] = i\n        i += 1\n    print(maxm_unique_sum)", "for _ in range(int(input())):\n    N = int(input())\n    C = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    sumW = [0] * N\n    sumW[0] = W[0]\n    for i in range(1, N):\n        sumW[i] = W[i] + sumW[i - 1]\n    l = 0\n    r = 0\n    maxsum = -1\n    status = [None] * N\n    while l < N and r < N:\n        if status[C[r]] == None:\n            status[C[r]] = r\n            r += 1\n        else:\n            tempsum = sumW[r - 1] - sumW[l] + W[l]\n            if tempsum > maxsum:\n                maxsum = tempsum\n            for i in range(l, status[C[r]]):\n                status[C[i]] = None\n            l = status[C[r]] + 1\n            status[C[r]] = None\n    tempsum = sumW[r - 1] - sumW[l] + W[l]\n    if tempsum > maxsum:\n        maxsum = tempsum\n    print(maxsum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = [int(x) for x in input().split()]\n    w = [int(x) for x in input().split()]\n    s = []\n    for i in range(n):\n        if i == 0:\n            s.append(w[0])\n        else:\n            s.append(s[-1] + w[i])\n    l = 0\n    r = 0\n    j = 0\n    su = 0\n    mas = 0\n    vis = []\n    for i in range(n):\n        vis.append(0)\n    for i in range(n):\n        vis[c[l]] = 0\n        l = i\n        while True:\n            if r == n:\n                break\n            if vis[c[r]] == 1:\n                break\n            vis[c[r]] = 1\n            r = r + 1\n        r -= 1\n        if l == 0:\n            su = s[r]\n        else:\n            su = s[r] - s[l - 1]\n        if mas < su:\n            mas = su\n        r += 1\n    print(mas)", "for _ in range(int(input())):\n    n = int(input())\n    c = [int(i) for i in input().split()]\n    w = [int(i) for i in input().split()]\n    b = [-1 for i in range(n)]\n    sry = [w[0]]\n    for i in range(1, n):\n        sry.append(sry[-1] + w[i])\n    ans = 0\n    sp = 0\n    d = 0\n    i = 0\n    while i < n:\n        if b[c[i]] == -1:\n            b[c[i]] = i\n            d += w[i]\n            ans = max(ans, d)\n        else:\n            l = b[c[i]]\n            d -= sry[l]\n            if sp > 0:\n                d += sry[sp - 1]\n            d += w[i]\n            ans = max(ans, d)\n            while sp < l:\n                b[c[sp]] = -1\n                sp += 1\n            sp += 1\n            b[c[i]] = i\n        i += 1\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = temp = 0\n    d = [0] * n\n    i = j = k = 0\n    while i < n:\n        while j < n and d[a[j]] == 0:\n            d[a[j]] = 1\n            temp += b[j]\n            j += 1\n        ans = max(ans, temp)\n        f = 0\n        while k < n and j < n and (a[j] != a[k]):\n            d[a[k]] = 0\n            temp -= b[k]\n            f = 1\n            k += 1\n        if k < n:\n            temp -= b[k]\n        if j < n:\n            temp += b[j]\n            ans = max(ans, temp)\n        i += 1\n        k += 1\n        j += 1\n    print(ans)", "from collections import deque\n\ndef _in():\n    return list(map(int, input().split()))\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    c = _in()\n    w = _in()\n    a = deque([])\n    b = deque([])\n    s = set()\n    ans = 0\n    local = 0\n    for i in range(n):\n        if c[i] not in s:\n            a.append(c[i])\n            b.append(w[i])\n            s.add(c[i])\n            local += w[i]\n            ans = max(ans, local)\n        else:\n            r = -1\n            while c[i] != r:\n                r = a.popleft()\n                s.discard(r)\n                local -= b.popleft()\n            a.append(c[i])\n            s.add(c[i])\n            b.append(w[i])\n            local += w[i]\n            ans = max(ans, local)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    ans = 0\n    s = []\n    s.append(w[0])\n    for i in w[1:]:\n        s.append(s[-1] + i)\n    f = [-1] * (n + 1)\n    cs = 0\n    t = 0\n    for i in range(n):\n        if f[c[i]] == -1 or f[c[i]] < t:\n            cs += w[i]\n            f[c[i]] = i\n        else:\n            cs = s[i] - s[f[c[i]]]\n            t = f[c[i]] + 1\n            f[c[i]] = i\n        if cs > ans:\n            ans = cs\n    print(ans)", "for tt in range(int(input())):\n    n = int(input())\n    m = {}\n    for i in range(n):\n        m[i] = -1\n    c = [int(i) for i in input().split()]\n    w = [int(i) for i in input().split()]\n    ans = 0\n    j = 0\n    i = 0\n    sm = 0\n    while i < n:\n        if m[c[i]] != -1:\n            h = m[c[i]]\n            for k in range(j, h + 1):\n                m[c[k]] = -1\n                sm -= w[k]\n            j = h + 1\n        m[c[i]] = i\n        sm += w[i]\n        ans = max(sm, ans)\n        i += 1\n    print(ans)", "t = int(input())\nfor u in range(t):\n    prefix = []\n    n = int(input())\n    c = input().split()\n    for val in range(len(c)):\n        c[val] = int(c[val])\n    w = input().split()\n    for val in range(len(w)):\n        w[val] = int(w[val])\n    prefix.append(0)\n    for val in range(len(w)):\n        prefix.append(prefix[val] + w[val])\n    D = {}\n    q = []\n    start = 0\n    end = 0\n    maxsum = 0\n    while start < n:\n        while start < n and c[start] not in D:\n            q.append(c[start])\n            D[c[start]] = 1\n            start += 1\n        if prefix[start] - prefix[end] > maxsum:\n            maxsum = prefix[start] - prefix[end]\n        if start == n:\n            break\n        while q[0] != c[start]:\n            del D[q.pop(0)]\n            end += 1\n        del D[q.pop(0)]\n        end += 1\n    print(maxsum)", "cases = int(input())\nfor x in range(cases):\n    nums = int(input())\n    array = list(map(int, input().split()))\n    weights = [0] + list(map(int, input().split()))\n    dictionary = {}\n    prev = 0\n    score = 0\n    for index in range(nums):\n        weights[index + 1] += weights[index]\n        item = array[index]\n        dict_index = dictionary.get(item)\n        if dict_index is not None:\n            prev = max(prev, dict_index)\n        score = max(score, weights[index + 1] - weights[prev])\n        dictionary[item] = index + 1\n    print(score)", "import io\nimport sys\n\ndef test_data():\n    return io.StringIO('1\\n5\\n0 1 2 0 2\\n5 6 7 8 2')\n\ndef get_input(source):\n    with source as lines:\n        t = int(next(lines))\n        for _ in range(t):\n            n = int(next(lines))\n            c = list(map(int, next(lines).split(' ')))\n            w = list(map(int, next(lines).split(' ')))\n            yield (n, c, w)\n\ndef calc(n, c, w):\n    left = 0\n    right = 0\n    cur = set()\n    ans = -1\n    cur_sum = 0\n    while right != len(c):\n        if c[right] in cur:\n            ans = max(ans, cur_sum)\n            cur.remove(c[left])\n            cur_sum -= w[left]\n            left += 1\n        else:\n            cur.add(c[right])\n            cur_sum += w[right]\n            right += 1\n    ans = max(ans, cur_sum)\n    return ans\ninp = test_data() if '-test' in sys.argv else sys.stdin\nfor args in get_input(inp):\n    print(calc(*args))", "def list_input():\n    return list(map(int, input().split()))\n\ndef map_input():\n    return map(int, input().split())\n\ndef map_string():\n    return input().split()\nfor _ in range(int(input())):\n    n = int(input())\n    c = list_input()\n    w = list_input()\n    last = [0] * (n + 5)\n    pref = [0]\n    for i in w:\n        pref.append(pref[-1] + i)\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = min(dp[i - 1] + w[i - 1], pref[i] - pref[last[c[i - 1]]])\n        last[c[i - 1]] = i\n    print(max(dp))"]