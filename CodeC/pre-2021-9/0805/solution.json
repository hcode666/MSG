["t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "for t in range(int(input())):\n    (n, c) = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = c\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = c + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[g[j - 1]] = d.get(g[j - 1], 0) + 1\n            if d[g[j - 1]] == 2:\n                arg += 2\n            elif d[g[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], c + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "T = int(input())\nfor _ in range(T):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (k, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (k + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[k])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor testcase in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guests = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        freq_dict = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            freq_dict[guests[j - 1]] = freq_dict.get(guests[j - 1], 0) + 1\n            if freq_dict[guests[j - 1]] == 2:\n                arg += 2\n            elif freq_dict[guests[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor i in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (a, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (a + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[a])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "T = int(input())\nfor _ in range(T):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    k = [0] * (n + 1)\n    k[0] = 0\n    k[1] = cost\n    for i in range(2, len(k)):\n        d = {}\n        arg = 0\n        k[i] = cost + k[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            k[i] = min(k[i], cost + arg + k[j - 1])\n    print(k[n])", "for _ in range(int(input())):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "tea = int(input())\nfor i in range(tea):\n    (number, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    deep = [0] * (number + 1)\n    deep[0] = 0\n    deep[1] = cost\n    for i in range(2, len(deep)):\n        d = {}\n        arg = 0\n        deep[i] = cost + deep[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            deep[i] = min(deep[i], cost + arg + deep[j - 1])\n    print(deep[number])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (nu, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (nu + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[nu])", "p = int(input())\nfor _ in range(p):\n    (n, co) = list(map(int, input().split()))\n    gu = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = co\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = co + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[gu[j - 1]] = d.get(gu[j - 1], 0) + 1\n            if d[gu[j - 1]] == 2:\n                arg = arg + 2\n            elif d[gu[j - 1]] > 2:\n                arg = arg + 1\n            dp[i] = min(dp[i], co + arg + dp[j - 1])\n    print(dp[n])", "p = int(input())\nfor _ in range(p):\n    (n, co) = list(map(int, input().split()))\n    gu = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = co\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = co + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[gu[j - 1]] = d.get(gu[j - 1], 0) + 1\n            if d[gu[j - 1]] == 2:\n                arg = arg + 2\n            elif d[gu[j - 1]] > 2:\n                arg = arg + 1\n            dp[i] = min(dp[i], co + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "h = int(input())\nfor i in range(h):\n    (h, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    di = [0] * (h + 1)\n    di[0] = 0\n    di[1] = cost\n    for i in range(2, len(di)):\n        d = {}\n        arg = 0\n        di[i] = cost + di[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            di[i] = min(di[i], cost + arg + di[j - 1])\n    print(di[h])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cot) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cot\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cot + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cot + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "T = int(input())\nfor _ in range(T):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "T = int(input())\nfor _ in range(T):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "T = int(input())\nfor _ in range(T):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "T = int(input())\nfor _ in range(T):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "y = int(input())\nfor _ in range(y):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    p = [0] * (n + 1)\n    p[0] = 0\n    p[1] = cost\n    for i in range(2, len(p)):\n        d = {}\n        arg = 0\n        p[i] = cost + p[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            p[i] = min(p[i], cost + arg + p[j - 1])\n    print(p[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "T = int(input())\nfor _ in range(T):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (qqn, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (qqn + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        qqd = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            qqd[guest[j - 1]] = qqd.get(guest[j - 1], 0) + 1\n            if qqd[guest[j - 1]] == 2:\n                arg += 2\n            elif qqd[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[qqn])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "tkln = int(input())\nfor _ in range(tkln):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "for _ in range(int(input())):\n    (n, cost) = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[g[j - 1]] = d.get(g[j - 1], 0) + 1\n            if d[g[j - 1]] == 2:\n                arg += 2\n            elif d[g[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "y = int(input())\nfor _ in range(y):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    p = [0] * (n + 1)\n    p[0] = 0\n    p[1] = cost\n    for i in range(2, len(p)):\n        d = {}\n        arg = 0\n        p[i] = cost + p[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            p[i] = min(p[i], cost + arg + p[j - 1])\n    print(p[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor i in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor i in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor testcase in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guests = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        freq_dict = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            freq_dict[guests[j - 1]] = freq_dict.get(guests[j - 1], 0) + 1\n            if freq_dict[guests[j - 1]] == 2:\n                arg += 2\n            elif freq_dict[guests[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor _ in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guest = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        d = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            d[guest[j - 1]] = d.get(guest[j - 1], 0) + 1\n            if d[guest[j - 1]] == 2:\n                arg += 2\n            elif d[guest[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])", "t = int(input())\nfor testcase in range(t):\n    (n, cost) = list(map(int, input().split()))\n    guests = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = cost\n    for i in range(2, len(dp)):\n        freq_dict = {}\n        arg = 0\n        dp[i] = cost + dp[i - 1]\n        for j in range(i, 0, -1):\n            freq_dict[guests[j - 1]] = freq_dict.get(guests[j - 1], 0) + 1\n            if freq_dict[guests[j - 1]] == 2:\n                arg += 2\n            elif freq_dict[guests[j - 1]] > 2:\n                arg += 1\n            dp[i] = min(dp[i], cost + arg + dp[j - 1])\n    print(dp[n])"]