["from collections import Counter\n\ndef grundy(state, g):\n    if g in gdic:\n        return gdic[g]\n    subg = set()\n    if g[0] > 0:\n        subg.add(grundy(state, tuple((g[0] - 1, g[1], g[2], g[3]))))\n    if g[1] > 0 and state != 1:\n        subg.add(grundy((state + 1) % 4, tuple((g[0], g[1] - 1, g[2], g[3]))))\n    if g[2] > 0 and state != 0:\n        subg.add(grundy((state + 2) % 4, tuple((g[0], g[1], g[2] - 1, g[3]))))\n    if g[3] > 0 and state != 3:\n        subg.add(grundy((state + 3) % 4, tuple((g[0], g[1], g[2], g[3] - 1))))\n    if len(subg) == 0:\n        gdic[g] = 0\n    else:\n        mex = 0\n        while mex in subg:\n            mex += 1\n        gdic[g] = mex\n    return gdic[g]\nres = ('Ghayeeth', 'Siroj')\nfor _ in range(int(input())):\n    n = int(input())\n    vals = Counter((int(z) % 4 for z in input().split()))\n    st = tuple((vals[0] % 2, vals[1], vals[2] % 2, vals[3]))\n    gdic = dict()\n    print(res[grundy(0, st) == 0])", "from collections import Counter\n\ndef grundy(state, g):\n    if g in gdic:\n        return gdic[g]\n    subg = set()\n    if g[0] > 0:\n        subg.add(grundy(state, tuple((g[0] - 1, g[1], g[2], g[3]))))\n    if g[1] > 0 and state != 1:\n        subg.add(grundy((state + 1) % 4, tuple((g[0], g[1] - 1, g[2], g[3]))))\n    if g[2] > 0 and state != 0:\n        subg.add(grundy((state + 2) % 4, tuple((g[0], g[1], g[2] - 1, g[3]))))\n    if g[3] > 0 and state != 3:\n        subg.add(grundy((state + 3) % 4, tuple((g[0], g[1], g[2], g[3] - 1))))\n    if len(subg) == 0:\n        gdic[g] = 0\n    else:\n        mex = 0\n        while mex in subg:\n            mex += 1\n        gdic[g] = mex\n    return gdic[g]\nres = ('Ghayeeth', 'Siroj')\nfor _ in range(int(input())):\n    n = int(input())\n    vals = Counter((int(z) % 4 for z in input().split()))\n    st = tuple((vals[0] % 2, vals[1], vals[2] % 2, vals[3]))\n    gdic = dict()\n    print(res[grundy(0, st) == 0])", "from collections import Counter\n\ndef grundy(state, g):\n    if g in gdic:\n        return gdic[g]\n    subg = set()\n    if g[0] > 0:\n        subg.add(grundy(state, tuple((g[0] - 1, g[1], g[2], g[3]))))\n    if g[1] > 0 and state != 1:\n        subg.add(grundy((state + 1) % 4, tuple((g[0], g[1] - 1, g[2], g[3]))))\n    if g[2] > 0 and state != 0:\n        subg.add(grundy((state + 2) % 4, tuple((g[0], g[1], g[2] - 1, g[3]))))\n    if g[3] > 0 and state != 3:\n        subg.add(grundy((state + 3) % 4, tuple((g[0], g[1], g[2], g[3] - 1))))\n    if len(subg) == 0:\n        gdic[g] = 0\n    else:\n        mex = 0\n        while mex in subg:\n            mex += 1\n        gdic[g] = mex\n    return gdic[g]\nres = ('Ghayeeth', 'Siroj')\nfor _ in range(int(input())):\n    n = int(input())\n    vals = Counter((int(z) % 4 for z in input().split()))\n    st = tuple((vals[0] % 2, vals[1], vals[2] % 2, vals[3]))\n    gdic = dict()\n    print(res[grundy(0, st) == 0])"]