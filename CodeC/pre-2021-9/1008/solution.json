["R = []\nT = []\nMX = 10 ** 18\nv = 2\nwhile v < MX:\n    T.append(v)\n    v = v * 2\nR = list(T)\nfor x in T:\n    v = 3 * x\n    while v < MX:\n        R.append(v)\n        v = 3 * v\nR.append(1)\nR.sort()\nR.append(2 * MX)\nfor _ in range(int(input())):\n    st = input().split()\n    L = int(st[0])\n    r = int(st[1])\n    p = 0\n    while R[p] < L:\n        p += 1\n    q = p\n    while R[q] <= r:\n        q += 1\n    n = q - p\n    print(n)", "R = []\nT = []\nMX = 10 ** 18\nv = 2\nwhile v < MX:\n    T.append(v)\n    v = v * 2\nR = list(T)\nfor x in T:\n    v = 3 * x\n    while v < MX:\n        R.append(v)\n        v = 3 * v\nR.append(1)\nR.sort()\nR.append(2 * MX)\nfor _ in range(int(input())):\n    st = input().split()\n    L = int(st[0])\n    r = int(st[1])\n    p = 0\n    while R[p] < L:\n        p += 1\n    q = p\n    while R[q] <= r:\n        q += 1\n    n = q - p\n    print(n)", "R = []\nT = []\nMX = 10 ** 18\nv = 2\nwhile v < MX:\n    T.append(v)\n    v = v * 2\nR = list(T)\nfor x in T:\n    v = 3 * x\n    while v < MX:\n        R.append(v)\n        v = 3 * v\nR.append(1)\nR.sort()\nR.append(2 * MX)\nfor _ in range(int(input())):\n    st = input().split()\n    L = int(st[0])\n    r = int(st[1])\n    p = 0\n    while R[p] < L:\n        p += 1\n    q = p\n    while R[q] <= r:\n        q += 1\n    n = q - p\n    print(n)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (k, p) = (0, 2)\n    if a <= 1 and b >= 1:\n        k += 1\n    while p <= b:\n        q = p\n        while q <= b:\n            if q >= a and q <= b:\n                k += 1\n            q *= 3\n        p *= 2\n    print(k)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    k = 0\n    if a <= 1 and b >= 1:\n        k += 1\n    p = 2\n    while p <= b:\n        q = p\n        while q <= b:\n            if q >= a and q <= b:\n                k += 1\n            q *= 3\n        p *= 2\n    print(k)", "l = set()\nl.add(1)\ni = 2\nwhile i <= 10 ** 18:\n    j = 1\n    while j * i <= 10 ** 18:\n        l.add(i * j)\n        j *= 3\n    i *= 2\ns = list(l)\nfor i in range(int(input())):\n    (m, r) = map(int, input().split())\n    count = 0\n    for i in range(len(s)):\n        if s[i] >= m and s[i] <= r:\n            count += 1\n    print(count)", "ans = [1, 2]\ncount = 0\nfor i in range(2, 100):\n    if 2 ** i > 10 ** 19:\n        break\n    else:\n        bo = 0\n        so = 0\n        z = 2 ** i\n        for j in range(i):\n            k = 2 ** i // 2 ** so\n            k *= 3 ** bo\n            so += 1\n            bo += 1\n            ans.append(k)\nn = int(input())\nans.sort()\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    count = 0\n    for j in ans:\n        if a <= j <= b:\n            count += 1\n        if j > b:\n            break\n    print(count)", "l = set()\nl.add(1)\ni = 2\nwhile i <= 10 ** 18:\n    j = 1\n    while j * i <= 1000000000000000000:\n        l.add(i * j)\n        j *= 3\n    i *= 2\nlis = list(l)\nlis.sort()\nfor _ in range(int(input())):\n    cnt = 0\n    (l, r) = map(int, input().split())\n    for x in lis:\n        if l <= x <= r:\n            cnt += 1\n        if x > r:\n            break\n    print(cnt)", "import bisect\nl = set()\nl.add(1)\ni = 2\nwhile i <= 10 ** 18:\n    j = 1\n    while j * i <= 1000000000000000000:\n        l.add(i * j)\n        j *= 3\n    i *= 2\nlis = list(l)\nlis.sort()\nfor _ in range(int(input())):\n    (left_index, rigth_index) = map(int, input().split())\n    left = bisect.bisect_left(lis, left_index)\n    right = bisect.bisect_right(lis, rigth_index)\n    print(len(lis[left:right]))", "for t in range(int(input())):\n    temp = list(map(int, input().split()))\n    l = temp[0]\n    r = temp[1]\n    val1 = 2\n    ans = 0\n    while val1 <= r:\n        val2 = 1\n        x = val1 * val2\n        while x <= r:\n            if x >= l and x <= r:\n                ans += 1\n            x *= 3\n        val1 *= 2\n    if 1 >= l and 1 <= r:\n        ans += 1\n    print(ans)", "def superNumbers(l, r):\n    result = 0\n    value = 2\n    while value <= r:\n        tmpValue = value\n        while tmpValue <= r:\n            if tmpValue >= l and tmpValue <= r:\n                result += 1\n            tmpValue *= 3\n        value *= 2\n    if l <= 1 and 1 <= r:\n        result += 1\n    return result\ntc = int(input())\nwhile tc > 0:\n    (l, r) = map(int, input().split())\n    result = superNumbers(l, r)\n    print(result)\n    tc -= 1", "T = int(input())\nwhile T > 0:\n    (L, R) = map(int, input().split())\n    count = 0\n    if 1 >= L and 1 <= R:\n        count += 1\n    a = 2\n    while a <= R:\n        b = a\n        while b <= R:\n            if b >= L:\n                count += 1\n            b *= 3\n        a *= 2\n    print(count)\n    T -= 1", "T = int(input())\nfor t in range(T):\n    (L, R) = map(int, input().split())\n    count = 0\n    if 1 >= L and 1 <= R:\n        count += 1\n    a = 2\n    while a <= R:\n        b = a\n        while b <= R:\n            if b >= L:\n                count += 1\n            b *= 3\n        a *= 2\n    print(count)", "T = int(input())\nfor t in range(T):\n    (L, R) = [int(x) for x in input().split()]\n    count = 0\n    if 1 >= L and 1 <= R:\n        count += 1\n    a = 2\n    while a <= R:\n        b = a\n        while b <= R:\n            if b >= L:\n                count += 1\n            b *= 3\n        a *= 2\n    print(count)", "T = int(input())\nfor t in range(T):\n    (L, R) = [int(x) for x in input().split()]\n    count = 0\n    if 1 >= L and 1 <= R:\n        count += 1\n    a = 1\n    while 2 ** a <= R:\n        b = 0\n        while 2 ** a * 3 ** b <= R:\n            if 2 ** a * 3 ** b >= L:\n                count += 1\n            b += 1\n        a += 1\n    print(count)", "for _ in range(int(input())):\n    (l, r) = [int(i) for i in input().split()]\n    val = 2\n    cnt = 0\n    while val <= r:\n        curr = val\n        while curr <= r:\n            if l <= curr <= r:\n                cnt += 1\n            curr *= 3\n        val *= 2\n    if l <= 1 <= r:\n        cnt += 1\n    print(cnt)", "from itertools import count\n\ndef solve(left, right):\n    c = 0\n    for i in count(start=1):\n        if 2 ** i > right:\n            break\n        for j in count(start=0):\n            mul = 2 ** i * 3 ** j\n            if mul > right:\n                break\n            if left <= mul <= right:\n                c += 1\n    if left <= 1 <= right:\n        c += 1\n    return c\nt = int(input())\nfor _ in range(t):\n    (left, right) = map(int, input().split())\n    print(solve(left, right))", "test = int(input())\nwhile test > 0:\n    test -= 1\n    (L, R) = map(int, input().split())\n    answer = 0\n    value = 2\n    while value <= R:\n        current = value\n        while current <= R:\n            if L <= current <= R:\n                answer += 1\n            current *= 3\n        value *= 2\n    if L <= 1 <= R:\n        answer += 1\n    print(answer)", "import math\nt = int(input())\nwhile t:\n    s = input().split()\n    x = int(s[0])\n    y = int(s[1])\n    l2 = int(math.log2(y))\n    r2 = int(math.log(y) / math.log(3))\n    ans = 0\n    if x == 1:\n        ans += 1\n    for i in range(1, l2 + 1):\n        for j in range(0, r2 + 1):\n            num = 2 ** i * 3 ** j\n            if num >= x and num <= y:\n                ans += 1\n    print(ans)\n    t -= 1", "def superNumbers(l, r):\n    result = 0\n    value = 2\n    while value <= r:\n        tmpValue = value\n        while tmpValue <= r:\n            if tmpValue in range(l, r + 1):\n                result += 1\n            tmpValue *= 3\n        value *= 2\n    if l == 1:\n        result += 1\n    return result\ntc = int(input())\nwhile tc > 0:\n    (l, r) = map(int, input().split())\n    result = superNumbers(l, r)\n    print(result)\n    tc -= 1", "def superNumbers(l, r):\n    result = 0\n    value = 2\n    while value <= r:\n        tmpValue = value\n        while tmpValue <= r:\n            if tmpValue in range(l, r + 1):\n                result += 1\n            tmpValue *= 3\n        value *= 2\n    if l == 1:\n        result += 1\n    return result\ntc = int(input())\nwhile tc > 0:\n    (l, r) = map(int, input().split())\n    result = superNumbers(l, r)\n    print(result)\n    tc -= 1", "def superNumbers(l, r):\n    result = 0\n    value = 2\n    while value <= r:\n        tmpValue = value\n        while tmpValue <= r:\n            if tmpValue >= l and tmpValue <= r:\n                result += 1\n            tmpValue *= 3\n        value *= 2\n    if l <= 1 and 1 <= r:\n        result += 1\n    return result\ntc = int(input())\nwhile tc > 0:\n    (l, r) = map(int, input().split())\n    result = superNumbers(l, r)\n    print(result)\n    tc -= 1", "def binsear(l, start, end, val):\n    while end > start:\n        mid = (start + end) // 2\n        if l[mid] < val:\n            start = mid + 1\n        else:\n            end = mid\n    return end\ntp18 = 1000000000000000000\nL = [1]\np2 = 1\nfor x in range(65):\n    p3 = 1\n    for y in range(45):\n        if 2 * p2 * p3 <= tp18:\n            L.append(2 * p2 * p3)\n        p3 *= 3\n    p2 *= 2\n    L.sort()\n    l = len(L)\nfor testcasfa in range(int(input())):\n    (x, y) = [int(x) for x in input().split()]\n    print(binsear(L, 0, l, y + 1) - binsear(L, 0, l, x))", "import sys\nimport math\nimport time\nimport random\nimport functools\nimport fractions\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split(' '))\n    cnt = 0\n    if a == 1:\n        cnt += 1\n    for apower in range(1, 64):\n        res = 2 ** apower\n        while res <= b:\n            if res >= a:\n                cnt += 1\n            res *= 3\n    print(cnt)", "import bisect\na = [1]\ni = 2\nwhile i < 10 ** 18 + 1:\n    a.append(i)\n    j = i\n    while j < 10 ** 18 + 1:\n        a.append(j * 3)\n        j = j * 3\n    i = i * 2\na.sort()\nt = int(input())\nwhile t > 0:\n    (l, r) = [int(x) for x in input().split()]\n    c = 0\n    i = bisect.bisect_left(a, l)\n    j = bisect.bisect_left(a, r)\n    if a[j] == r:\n        j = j + 1\n    print(j - i)\n    t = t - 1", "def binser(l, start, end, val):\n    while start < end:\n        mid = start + end >> 1\n        if l[mid] < val:\n            start = mid + 1\n        else:\n            end = mid\n    return start\nt = int(input())\ntp18 = 1000000000000000000\nL = [1]\np2 = 1\nfor x in range(65):\n    p3 = 1\n    for y in range(45):\n        if 2 * p2 * p3 <= tp18:\n            L.append(2 * p2 * p3)\n        p3 *= 3\n    p2 *= 2\n    L.sort()\n    l = len(L)\nfor testcasfa in range(t):\n    (a, b) = [int(x) for x in input().split()]\n    print(binser(L, 0, l, b + 1) - binser(L, 0, l, a))", "import bisect\na = []\nfor i in range(1, 100):\n    for j in range(0, 100):\n        v = 2 ** i * 3 ** j\n        if v <= 1e+30:\n            a.append(v)\na.sort()\na.insert(0, 1)\nt = int(input())\nfor i in range(t):\n    (l, r) = map(int, input().split())\n    p = bisect.bisect_left(a, l)\n    n = 0\n    while a[p] <= r:\n        n += 1\n        p += 1\n    print(n)", "t = int(input())\nwhile t > 0:\n    inp = input().split()\n    a = int(inp[0])\n    b = int(inp[1])\n    tmp = 2\n    cnt = 0\n    while tmp <= b:\n        tmpp = tmp\n        while tmpp <= b:\n            if tmpp >= a:\n                cnt += 1\n            tmpp *= 3\n        tmp *= 2\n    if a == 1:\n        cnt += 1\n    print(cnt)\n    t -= 1", "import heapq, bisect, math, collections, sys, fractions, copy, functools, operator, itertools, string\nargmax = lambda l: l.index(max(l))\nargmin = lambda l: l.index(min(l))\n\ndef read_list(t):\n    return [t(x) for x in input().split()]\n\ndef read_line(t):\n    return t(input())\n\ndef read_lines(t, N):\n    return [t(input()) for _ in range(N)]\n\ndef main():\n    array = [1]\n    w = 2\n    L = 10 ** 18\n    while w <= L:\n        u = 1\n        while w * u <= L:\n            array.append(w * u)\n            u *= 3\n        w <<= 1\n    array.sort()\n    for i in range(read_line(int)):\n        (l, r) = read_list(int)\n        (lb, ub) = (bisect.bisect_left(array, l), bisect.bisect_right(array, r))\n        print(ub - lb)\nmain()", "lst = []\nfor i in range(1, 60):\n    for j in range(40):\n        if 2 ** i * 3 ** j < 10 ** 18:\n            lst.append(2 ** i * 3 ** j)\nlst.append(1)\nx = int(input())\nfor i in range(x):\n    (a, b) = map(int, input().split(' '))\n    ct = 0\n    for j in lst:\n        if a <= j <= b:\n            ct += 1\n    print(ct)", "T = int(input())\nwhile T > 0:\n    T -= 1\n    (L, R) = map(int, input().split())\n    msk2 = 2\n    ans = 0\n    while msk2 <= R:\n        msk3 = 1\n        while msk2 * msk3 <= R:\n            if msk2 * msk3 >= L:\n                ans += 1\n            msk3 *= 3\n        msk2 *= 2\n    if L == 1:\n        ans += 1\n    print(ans)"]