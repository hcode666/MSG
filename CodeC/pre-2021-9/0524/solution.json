["for _ in range(int(input())):\n    n = int(input())\n    l = [[0 for i in range(n)] for j in range(n)]\n    c = (n + 1) // 2\n    for i in range(n // 2 + 1):\n        l[c - 1 + i][i] = 1\n    for i in range(n // 2):\n        l[i][c + i] = 1\n    for i in range(n):\n        e = l[i].index(1)\n        for j in range(1, n):\n            l[i][e - j] = j + 1\n    for i in range(n):\n        print(*l[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = [[0 for x in range(n)] for y in range(n)]\n    m[n // 2] = [x for x in range(1, n + 1)]\n    z = [x for x in range(1, n + 1)]\n    c = 1\n    for j in range(n // 2 + 1, n, 1):\n        m[j] = z[c:] + z[:c]\n        c += 1\n    c = n - 1\n    for k in range(n // 2 - 1, -1, -1):\n        m[k] = z[c:] + z[:c]\n        c -= 1\n    for z in range(n):\n        print(*m[z])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "def func_arr(n, x):\n    sol_arr = [0] * n\n    for i in range(1, n + 1):\n        sol_arr[(i + x - 1) % n - 1] = i\n    return sol_arr\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        for i in range((n + 1) // 2, 0, -1):\n            print(*func_arr(n, i))\n        for i in range(n - 1, (n + 1) // 2, -1):\n            print(*func_arr(n, i))\n        print(*func_arr(n, n))\n    t -= 1", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0] * k for _ in range(k)]\n    start = (k + 1) // 2\n    for i in range(k):\n        for j in range(k):\n            val = (start + j) % k\n            if val == 0:\n                val = k\n            mat[i][j] = val\n        start -= 1\n        if start == 0:\n            start = k\n    for item in mat:\n        print(*item)", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0] * k for _ in range(k)]\n    start = (k + 1) // 2\n    for i in range(k):\n        for j in range(k):\n            val = (start + j) % k\n            if val == 0:\n                val = k\n            mat[i][j] = val\n        start -= 1\n        if start == 0:\n            start = k\n    for item in mat:\n        print(*item)", "from collections import deque\nfor i in range(int(input())):\n    a = deque()\n    n = int(input())\n    for i in range(1, n + 1):\n        a.appendleft(i)\n    if n == 1:\n        print(1)\n        continue\n    k = n // 2\n    b = a.copy()\n    for i in range(n):\n        for j in range(n):\n            if a[j] == k:\n                a[j] = 1\n            elif a[j] == 1:\n                a[j] = k\n            print(a[j], end=' ')\n        b.rotate()\n        a = b.copy()\n        print()", "t = int(input())\nfor _ in range(t):\n    k = int(input())\n    row = [i for i in range(1, k + 1)]\n    row = row[k // 2 + 1:] + row[:k // 2 + 1]\n    for i in range(1, k + 1):\n        for j in row:\n            print(j, end=' ')\n        print()\n        row = row[1:] + row[0:1]", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "for e in range(int(input())):\n    n = int(input())\n    l = [e for e in range(1, n + 1)]\n    if n != 1:\n        (l[0], l[n // 2 + 1]) = (l[n // 2 + 1], l[0])\n    for i in range(n):\n        print(*l)\n        l = [l[-1]] + l\n        l.pop(-1)", "import sys\nt = int(input())\nwhile t:\n    k = int(input())\n    h = int(k / 2)\n    for i in range(k):\n        for j in range(k):\n            x = (h + j - i) % k + 1\n            x = k + x if x < 0 else x\n            sys.stdout.write(str(x) + ' ')\n        sys.stdout.write('\\n')\n    t -= 1", "for _ in range(int(input())):\n    k = int(input())\n    mat = [[0 for i in range(k)] for j in range(k)]\n    mat[k // 2] = [i for i in range(1, k + 1)]\n    z = [i for i in range(1, k + 1)]\n    j = 1\n    for i in range(k // 2 + 1, k, 1):\n        mat[i] = z[j:] + z[:j]\n        j += 1\n    j = k - 1\n    for i in range(k // 2 - 1, -1, -1):\n        mat[i] = z[j:] + z[:j]\n        j -= 1\n    for i in range(k):\n        print(*mat[i])", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    p = (k - 1) // 2\n    if k == 1:\n        print(1)\n    else:\n        for i in range(k):\n            l = k + 1 - p\n            for j in range(k):\n                if j == k - 1:\n                    print(l)\n                else:\n                    print(l, end=' ')\n                if l == k:\n                    l = 1\n                else:\n                    l += 1\n            if p > 0:\n                p -= 1\n            if i == (k - 1) // 2 - 1:\n                p = k", "for t in range(int(input())):\n    n = int(input())\n    row = list(range(1, n + 1))[n // 2 + 1:] + list(range(1, n + 1))[:n // 2 + 1]\n    for i in range(n):\n        print(*row[i:] + row[:i])", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    m = (k - 1) // 2\n    if k == 1:\n        print(1)\n    else:\n        for i in range(k):\n            l = k + 1 - m\n            for j in range(k):\n                if j == k - 1:\n                    print(l)\n                else:\n                    print(l, end=' ')\n                if l == k:\n                    l = 1\n                else:\n                    l += 1\n            if m > 0:\n                m -= 1\n            if i == (k - 1) // 2 - 1:\n                m = k", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    m = (k - 1) // 2\n    if k == 1:\n        print(1)\n    else:\n        for i in range(k):\n            l = k + 1 - m\n            for j in range(k):\n                if j == k - 1:\n                    print(l)\n                else:\n                    print(l, end=' ')\n                if l == k:\n                    l = 1\n                else:\n                    l += 1\n            if m > 0:\n                m -= 1\n            if i == (k - 1) // 2 - 1:\n                m = k", "for _ in range(int(input())):\n    k = eval(input())\n    for i in range(k):\n        for j in range(k):\n            print((i + j + (k + 1) // 2) % k + 1, ' ', end='')\n        print()", "for _ in range(int(input())):\n    k = int(input())\n    if k == 1:\n        print(1)\n    else:\n        for j in range(k):\n            for i in range(1, k + 1):\n                h = (i + j + k - k // 2) % k\n                if h == 0:\n                    print(k, end=' ')\n                else:\n                    print(h, end=' ')\n            print()", "t = int(input())\nfor _t in range(t):\n    k = int(input())\n    mid = k // 2 + 1\n    for i in range(1, k + 1):\n        j = mid + i\n        for c in range(k):\n            print(k if j % k == 0 else j % k, end=' ')\n            j += 1\n        print()", "for _ in range(int(input())):\n    k = int(input())\n    if k == 1:\n        print(1)\n    else:\n        for i in range(k):\n            for j in range(1, k + 1):\n                a = (i + j + k - k // 2) % k\n                if a == 0:\n                    print(k, end=' ')\n                else:\n                    print(a, end=' ')\n            print()", "for m in range(int(input())):\n    k = int(input())\n    if k == 1:\n        print(k)\n        continue\n    temp = k - k // 2\n    for i in range(k):\n        temp += 1\n        for j in range(k):\n            print(temp, end=' ')\n            if j != k - 1 and temp == 1:\n                temp = k\n            else:\n                temp -= 1\n        print()", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    d = list(map(str, list(range(1, x + 1)) + list(range(1, x + 1)) + list(range(1, x + 1))))\n    c = (x + 1) // 2\n    f = x - 1\n    g = c - 1\n    for i in range(x, 0, -1):\n        print(' '.join(d[g + i:c + f + i]))", "T = int(input())\nfor _ in range(T):\n    K = int(input())\n    if K == 1:\n        print(1)\n        continue\n    x = K // 2 + 2\n    for r in range(K):\n        for c in range(K):\n            if c == K - 1:\n                print(x)\n            else:\n                print(x, end=' ')\n            x = x + 1\n            if x > K:\n                x = 1\n        x = x + 1\n        if x > K:\n            x = 1", "from collections import deque\nfor t in range(int(input())):\n    k = int(input())\n    arr = [x for x in range(1, k + 1)]\n    d = deque(arr)\n    e = ''\n    s = ''\n    for i in range(k):\n        for j in range(k):\n            if i < k / 2:\n                e += str(d[j]) + ' '\n            else:\n                s += str(d[j]) + ' '\n        if i < k / 2:\n            e = e.strip() + '\\n'\n        else:\n            s = s.strip() + '\\n'\n        d.appendleft(d.pop())\n    print(s.strip())\n    print(e.strip())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print('1 ')\n    elif n == 3:\n        print('3 2 1\\n1 3 2\\n2 1 3')\n    else:\n        fk = n // 2\n        m = fk\n        for j in range(n):\n            var = n - m + 1\n            for k in range(n):\n                if k == m:\n                    print('1 ', end='')\n                    var = 2\n                    continue\n                print(str(var) + ' ', end='')\n                var += 1\n            if m == 0:\n                m = n - 2\n            elif j == n - 2:\n                m = n - 1\n            else:\n                m -= 1\n            print()", "t = int(input())\nans = []\nfor i in range(t):\n    k = int(input())\n    string = []\n    temp_ans = ''\n    for j in range(k):\n        string.append(str(j + 1))\n    if k == 1:\n        ans.append('1')\n    else:\n        n = k // 2\n        for j in range(n, -1, -1):\n            temp_ans += ' '.join(string[j:]) + ' ' + ' '.join(string[0:j]) + '\\n'\n        for j in range(len(string) - 1, n, -1):\n            if j == n + 1:\n                temp_ans += ' '.join(string[j:]) + ' ' + ' '.join(string[0:j])\n            else:\n                temp_ans += ' '.join(string[j:]) + ' ' + ' '.join(string[0:j]) + '\\n'\n        ans.append(temp_ans)\nfor x in ans:\n    print(x)", "t = int(input())\nwhile t:\n    n = int(input())\n    array = [x for x in range(1, n + 1)]\n    for i in range(-(n - 1) // 2, (n - 1) // 2 + 1):\n        for j in range(0, n):\n            print(array[(i + j) % n], end=' ')\n        print()\n    t -= 1", "def soln(n):\n    mid = (n + 1) // 2\n    for i in range(n):\n        s = ''\n        temp = mid\n        for j in range(n):\n            s += str(temp) + ' '\n            temp += 1\n            if temp > n:\n                temp = 1\n        mid -= 1\n        if mid < 1:\n            mid = n\n        print(s)\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        soln(n)\nmain()", "t = int(input())\nfor ii in range(0, t):\n    n = int(input())\n    if n == 1:\n        print('1')\n    else:\n        origin = (n + 1) / 2 - 1\n        for i in range(0, n):\n            for j in range(0, n):\n                tem = (j + i) % n + 1\n                if tem == 1:\n                    print(int(origin), end=' ')\n                elif tem == origin:\n                    print('1', end=' ')\n                else:\n                    print(int(tem), end=' ')\n            print()", "import math\nt = int(input())\nwhile t:\n    n = int(input())\n    c = int((n + 1) / 2)\n    for i in range(0, n):\n        a = [0 for k in range(0, n)]\n        for j in range(0, n):\n            c += 1\n            a[j] = str(int(math.fmod(c - i, n)))\n            if a[j] == '0':\n                a[j] = str(n)\n        print(' '.join(a))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = (n + 1) // 2\n    for i in range(n):\n        for j in range(n):\n            print((x + j + i) % n + 1, end=' ')\n        print()", "t = int(input())\nwhile t:\n    k = int(input())\n    start = (k + 1) // 2\n    for i in range(k):\n        for j in range(k):\n            print((start + j) % k + 1, end=' ')\n        print()\n        start += 1\n    t -= 1", "from math import ceil\nt = int(input())\nwhile t:\n    t -= 1\n    k = int(input())\n    if k == 1:\n        print(1)\n        continue\n    temp = 0\n    finalList = []\n    for i in range(2, ceil(k / 2) + 1):\n        finalList.append(i)\n        temp = i\n    finalList.append(1)\n    for i in range(temp + 1, k + 1):\n        finalList.append(i)\n    for i in finalList:\n        print(i, end=' ')\n    print()\n    for i in range(k - 1):\n        tmp = finalList.pop(0)\n        finalList.append(tmp)\n        for i in finalList:\n            print(i, end=' ')\n        print()", "t = int(input().strip())\n\ndef per(a, k):\n    c = a[0]\n    for i in range(0, k - 1):\n        a[i] = a[i + 1]\n    a[k - 1] = c\nfor i in range(0, t):\n    k = int(input().strip())\n    a = list(range(1, k + 1))\n    a.reverse()\n    fk = (k - 1) // 2\n    for j in range(0, fk + 1):\n        per(a, k)\n    for l in range(0, k):\n        print(*a, end='')\n        print('')\n        per(a, k)", "from collections import deque\nt = int(input())\nwhile t > 0:\n    d = deque()\n    k = int(input())\n    limit = k // 2\n    climit = limit\n    j = 2\n    while limit > 0:\n        d.append(j)\n        j = j + 1\n        limit = limit - 1\n    d.append(1)\n    while climit > 0:\n        d.append(j)\n        j = j + 1\n        climit = climit - 1\n    while k > 0:\n        for item in d:\n            print(str(item) + ' ', end='')\n        d.rotate(-1)\n        k = k - 1\n        print()\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    mid = n // 2 + 1\n    count = 0\n    for i in range(n):\n        for j in range(1, n + 1):\n            n1 = (j + mid + count) % n\n            if n1 == 0:\n                n1 = n\n            print(n1, end=' ')\n        print('')\n        count += 1", "def print_line(A):\n    for i in A:\n        print(i, end=' ')\n    print()\nt = int(input())\nfor _ in range(t):\n    k = int(input())\n    x = int((k + 3) / 2)\n    A = list(range(x, k + 1)) + list(range(1, x))\n    for i in range(k):\n        print_line(A)\n        A = A[1:] + A[:1]", "t = int(input())\nwhile t:\n    k = int(input())\n    m = n = k\n    st = k // 2 + 2\n    i = st\n    cnt = 0\n    if k == 1:\n        print(1)\n    else:\n        while m:\n            while cnt < k and i:\n                print(i, end=' ')\n                i += 1\n                cnt += 1\n                if i > k:\n                    i = 1\n            m -= 1\n            cnt = 0\n            st += 1\n            if st > k:\n                i = st = 1\n            else:\n                i = st\n            if m != 0:\n                print()\n    t -= 1\n    if t != 0:\n        print()", "t = int(input())\nwhile t:\n    n = int(input())\n    start = 1 + n // 2\n    for i in range(n):\n        for j in range(n):\n            print((start + j) % n + 1, end=' ')\n        print()\n        start = (start + 1) % n\n    t -= 1", "t = int(input())\nwhile t > 0:\n    k = int(input())\n    li = [0] * k\n    if k % 2 == 0:\n        mid = k // 2 - 1\n    else:\n        mid = (k + 1) // 2 - 1\n    p = 1\n    for i in range(mid, mid + k):\n        li[i % k] = p\n        p = p + 1\n    for i in range(k):\n        for j in range(k):\n            print(li[j], end=' ')\n        print()\n        k1 = li.pop()\n        li.insert(0, k1)\n    t = t - 1", "def rotate(l, r):\n    res = [0] * k\n    for i in range(k):\n        res[(i + r) % k] = l[i]\n    return res\nfor i in range(int(input())):\n    k = int(input())\n    centre = (k + 1) // 2\n    c = centre - 1\n    j = k - 1\n    ans = list()\n    l1 = list(range(1, k + 1))\n    while j >= 0:\n        ans.append(rotate(l1, c))\n        if c == 0:\n            c = k\n        c -= 1\n        j -= 1\n    for lis in ans:\n        for num in lis:\n            print(num, end=' ')\n        print()", "def main():\n    from sys import stdin, stdout\n    for _ in range(int(stdin.readline())):\n        n = int(stdin.readline())\n        l = []\n        i = 0\n        j = 2\n        while i < n - 1:\n            if j > n:\n                j = n - 2\n            l.append(n - j)\n            if j & 1:\n                j -= 2\n            else:\n                j += 2\n            i += 1\n        l += [n] + l\n        for i in range(n):\n            for j in range(n):\n                stdout.write(str(l[i + j]) + ' ')\n            stdout.write('\\n')\nmain()", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    for i in range(n):\n        print(' '.join([str((i + k + n // 2 + 1) % n + 1) for k in range(n)]))", "test = int(input(''))\nwhile test:\n    n = int(input(''))\n    ok = 1\n    if n == 1:\n        print(1)\n        ok = 0\n    jam = int((n + 1) / 2 + 1)\n    for i in range(0, int((n + 1) / 2)):\n        kak = jam\n        for k in range(0, n):\n            if kak > n:\n                kak = kak % n\n            if ok == 1:\n                print(kak, end=' ')\n            kak = kak + 1\n        if ok == 1:\n            print()\n        jam = jam + 1\n    jam = int(2)\n    for i in range(0, int((n + 1) / 2) - 1):\n        kak = jam\n        for k in range(0, n):\n            if kak > n:\n                kak = kak % n\n            if ok == 1:\n                print(kak, end=' ')\n            kak = kak + 1\n        if ok == 1:\n            print()\n        jam = jam + 1\n    test = test - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    for i in range(n):\n        for j in range(n):\n            print((i + j + n // 2 + 1) % n + 1, end=' ')\n        print()", "t = int(input())\nwhile t:\n    k = int(input())\n    m = n = k\n    st = k // 2 + 2\n    i = st\n    cnt = 0\n    if k == 1:\n        print(1)\n    else:\n        while m:\n            while cnt < k and i:\n                print(i, end=' ')\n                i += 1\n                cnt += 1\n                if i > k:\n                    i = 1\n            m -= 1\n            cnt = 0\n            st += 1\n            if st > k:\n                i = st = 1\n            else:\n                i = st\n            if m != 0:\n                print()\n        print()\n    t -= 1", "import numpy as np\ngrid = np.zeros((500, 500), dtype=np.int64)\nt = int(input())\nwhile t != 0:\n    n = int(input())\n    (x, y) = (n + 1, n)\n    j = n // 2\n    for i in range(n):\n        if j == n:\n            j = 0\n        index = 0\n        for a in range(x, n + 1):\n            grid[j][index] = a\n            index += 1\n        for b in range(1, y + 1):\n            grid[j][index] = b\n            index += 1\n        j += 1\n        x -= 1\n        y -= 1\n    for i in range(n):\n        for j in range(n):\n            print(grid[i][j], end=' ')\n        print('\\n')\n    t = t - 1", "for i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n % 2 == 1:\n        (c, a, z, d) = ([], [], [], [])\n        for i in range(n, 0, -1):\n            c.append(i)\n            z.append(i)\n        a.append(z)\n        d.append(c)\n        for j in range(n - 1):\n            m = []\n            for k in range(n):\n                m.append(a[j][(k + 1) % n])\n            d.append(m)\n            a.append(m)\n        for x in range(n // 2, -1, -1):\n            print(*d[x], sep=' ')\n        for y in range(n - 1, n // 2, -1):\n            print(*d[y], sep=' ')\n    else:\n        continue", "t = int(input())\nfor v in range(t):\n    k = int(input())\n    f = k / 2\n    l = [[0 for x in range(k)] for y in range(k)]\n    z = int((k + 1) / 2)\n    c = 0\n    col = z - 2\n    for j in range(k):\n        c = c + 1\n        if col != k - 1:\n            col = col + 1\n        else:\n            col = 0\n        for i in range(k):\n            l[i][col] = c\n            if col != k - 1:\n                col = col + 1\n            else:\n                col = 0\n    if k == 3:\n        l = [[3, 1, 2], [2, 3, 1], [1, 2, 3]]\n    for i in range(len(l)):\n        for j in range(len(l)):\n            print(l[i][j], end=' ')\n        print()", "import sys\nsys.setrecursionlimit(50000000)\n\ndef read(var_type=int):\n    n = var_type(input())\n    return n\n\ndef read_array(var_type=int):\n    arr = list((var_type(n) for n in input().split()))\n    return arr\nPRIME = 10 ** 9 + 7\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return b if a % b == 0 else gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef fill(A, n, x, row):\n    for k in range(n):\n        i = (row + k) % n\n        j = k % n\n        A[i][j] = x\nt = read()\nfor i in range(t):\n    n = read()\n    A = [[0 for j in range(n)] for i in range(n)]\n    row = n // 2\n    for i in range(n):\n        fill(A, n, i + 1, (row + i) % n)\n    for i in range(n):\n        for j in range(n):\n            print(A[i][j], end=' ')\n        print()", "def alist(a):\n    k = ''\n    for i in a:\n        k += str(i) + ' '\n    return k\n\ndef shift(a, s):\n    b = a[:]\n    n = len(b)\n    for i in range(n):\n        b[(i + s) % n] = a[i]\n    return b\nfor _ in range(int(input())):\n    d = {}\n    n = int(input())\n    d[n // 2] = alist(range(1, n + 1))\n    k = 1\n    for i in range(n // 2 - 1, -1, -1):\n        d[i] = alist(shift(list(range(1, n + 1)), k))\n        k += 1\n    k = 1\n    for i in range(n // 2 + 1, n):\n        d[i] = alist(shift(list(range(1, n + 1)), -k))\n        k += 1\n    for i in range(n):\n        print(d[i])", "def alist(a):\n    k = ''\n    for i in a:\n        k += str(i) + ' '\n    return k\n\ndef shift(a, s):\n    b = a[:]\n    n = len(b)\n    for i in range(n):\n        b[(i + s) % n] = a[i]\n    return b\nfor _ in range(int(input())):\n    d = {}\n    n = int(input())\n    d[n // 2] = alist(range(1, n + 1))\n    k = 1\n    for i in range(n // 2 - 1, -1, -1):\n        d[i] = alist(shift(list(range(1, n + 1)), k))\n        k += 1\n    k = 1\n    for i in range(n // 2 + 1, n):\n        d[i] = alist(shift(list(range(1, n + 1)), -k))\n        k += 1\n    for i in range(n):\n        print(d[i])", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    a = list(range(1, k + 1))\n    i = (k - 1) // 2\n    for l in range(k):\n        for j in range(k):\n            print(a[i - j], end=' ')\n        i += 1\n        i = i % k\n        print()", "from itertools import cycle\nT = int(input())\nfor i in range(T):\n    K = int(input())\n    if K == 1:\n        print(1)\n    mid = (K + 1) / 2\n    A = []\n    for j in range(1, K + 1):\n        if j == 1:\n            continue\n        if j == mid + 1:\n            A.append(1)\n            A.append(j)\n        else:\n            A.append(j)\n    pool = cycle(A)\n    k = 0\n    hj = 0\n    while hj < K:\n        ctr = 0\n        i = k\n        pool = cycle(A)\n        for item in pool:\n            if ctr == K:\n                break\n            if i >= 0:\n                print(item, end=' ')\n                ctr += 1\n            i += 1\n        print()\n        k -= 1\n        hj += 1", "for t in range(int(input())):\n    N = int(input())\n    print(''.join((str(j % N + 1) + ('\\n' if j == N + i - 1 else ' ') for i in range((N + 1) // 2, N + (N + 1) // 2) for j in range(i, N + i))), end='')", "t = int(input())\nwhile t is not 0:\n    t -= 1\n    k = int(input())\n    d = (k + 1) / 2\n    for i in range(k):\n        s = (i + d) % k\n        for j in range(k):\n            print(int((s + j) % k + 1), end=' ')\n        print()", "for i in range(int(input())):\n    c = int(input())\n    p = c - c // 2\n    r = c - c // 2 - 1\n    for j in range(c // 2):\n        for k in range(1, c + 1):\n            if p > c:\n                p = 1\n            if p < 1:\n                p = c\n            print(p, end=' ')\n            p = p + 1\n        p = r\n        r = r - 1\n        print()\n    q = 1\n    m = c\n    for j in range(c // 2 + 1):\n        for k in range(1, c + 1):\n            if q > c:\n                q = 1\n            print(q, end=' ')\n            q = q + 1\n        q = m\n        m = m - 1\n        print()", "t = int(input())\nfor x in range(0, t):\n    n = int(input())\n    l = [x for x in range(1, n + 1)]\n    ref = [x for x in range(-n // 2 + 2, 1, 1)]\n    ref.extend([x for x in range(-n + 1, -n // 2 + 1, 1)])\n    ref.append(-n // 2 + 1)\n    for x in ref:\n        for y in range(0, n):\n            print(l[y + x], end=' ')\n        print('')", "for t in range(int(input())):\n    N = int(input())\n    for i in range((N + 1) // 2, N + (N + 1) // 2):\n        print(' '.join((str(j % N + 1) for j in range(i, N + i))))", "for t in range(int(input())):\n    k = int(input())\n    for i in range(k):\n        for j in range(i - k // 2 + 1, 0, -1):\n            print(j, end=' ')\n        if i - k // 2 + 1 <= 0:\n            l = k + (i - k // 2 + 1)\n            m = 0\n            f = 1\n        else:\n            l = k\n            m = i - k // 2 + 1\n            f = 0\n        for j in range(l, m, -1):\n            print(j, end=' ')\n        if f == 1:\n            for j in range(k, k + (i - k // 2) + 1, -1):\n                print(j, end=' ')\n        print()", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    n = int(k / 2) + 1\n    for j in range(k):\n        m = n\n        for l in range(k):\n            print(n, end=' ')\n            n = (n - 1) % k\n            if n == 0:\n                n = k\n        n = (m - 1) % k\n        if n == 0:\n            n = k\n        print()", "def func1():\n    i = int(input())\n    ii = i // 2 + 1\n    l = list(map(str, range(ii, 0, -1))) + list(map(str, range(i, ii, -1)))\n    ll = []\n    for _ in range(i):\n        ll.append(' '.join(l))\n        l = [l[-1]] + l[:-1]\n    return ll\nt = int(input())\nans = []\nfor _ in range(t):\n    ans.append(func1())\nfor a in ans:\n    for aa in a:\n        print(aa)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    i = (1 + n) // 2\n    a = [1 + i for i in range(n)]\n    for j in range(n):\n        for k in range(i, n):\n            print(a[k], end=' ')\n        for k in range(i):\n            print(a[k], end=' ')\n        print()\n        i = (i + 1) % n", "for _ in range(int(input())):\n    k = int(input())\n    if k == 1:\n        print(1)\n    elif k == 3:\n        print('3 2 1')\n        print('1 3 2')\n        print('2 1 3')\n    elif k == 5:\n        print('5 4 3 2 1')\n        print('3 5 4 1 2')\n        print('1 3 2 4 5')\n        print('2 1 5 3 4')\n        print('4 2 1 5 3')\n    else:\n        a = []\n        for _ in range(k):\n            b = []\n            for _ in range(k):\n                b.append(0)\n            a.append(b)\n        mid = k // 2\n        for j in range(k):\n            for i in range(k):\n                a[(mid + i) % k][j] = i + 1\n            mid += 1\n        for i in a:\n            for j in i:\n                print(j, end=' ')\n            print('')", "for t in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n        continue\n    for i in range(1, n + 1):\n        m = (n + 1) // 2 + i\n        if m > n:\n            m %= n\n        for j in range(1, n + 1):\n            print(m, end=' ')\n            if m == n:\n                m = 1\n            else:\n                m += 1\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = [i for i in range(1, n + 1)]\n    for i in range(n):\n        print(' '.join([str(i) for i in [arr[(arr[-n // 2] + j - i) % n] for j in range(n)]]))", "def shift(k, l):\n    return l[-k:] + l[:-k]\nt = int(input())\nfor i in range(0, t):\n    k = int(input())\n    l = list(range(1, k + 1))\n    for j in range((k + 1) // 2, (3 * k + 1) // 2):\n        lt = list(shift(j % k, l))\n        print(*lt)", "def retsqr(n):\n    A = list(range(n))\n    A = [a + 1 for a in A]\n    start = (n + 1) // 2\n    for i in range(n):\n        index = start\n        s = ''\n        for j in range(n):\n            s += str(A[index % n])\n            s += ' '\n            index += 1\n        start += 1\n        print(s[:-1])\nfor tests in range(int(input())):\n    N = int(input())\n    retsqr(N)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        pat = [0] * n\n        c = 1\n        q = 1\n        for i in range(n):\n            pat[i] = c\n            c += q * 2\n            if c > n:\n                c = n - 1\n                q = -1\n        q = (n + 1) // 2\n        for i in range(n):\n            m = q\n            p = 1\n            while p < n:\n                print(pat[m], end=' ')\n                m = (m + 1) % n\n                p += 1\n            print(pat[m])\n            q = (q + 1) % n"]