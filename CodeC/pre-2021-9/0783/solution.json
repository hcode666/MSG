["for _ in range(int(input())):\n    s = input()\n    c = list(set(s))\n    l = []\n    for i in c:\n        l.append(s.count(i))\n    noty = 0\n    l.sort()\n    if len(l) < 3:\n        print('Dynamic')\n    else:\n        for i in range(2, len(l)):\n            if i == 3:\n                if not l[3] == l[2] + l[1] and (not l[3] == l[2] + l[0]):\n                    noty = 1\n                    break\n            elif l[i - 1] + l[i - 2] != l[i]:\n                noty = 1\n                break\n        if noty:\n            print('Not')\n        else:\n            print('Dynamic')", "for _ in range(int(input())):\n    s = input()\n    c = list(set(s))\n    l = []\n    for i in c:\n        l.append(s.count(i))\n    noty = 0\n    l.sort()\n    if len(l) < 3:\n        print('Dynamic')\n    else:\n        for i in range(2, len(l)):\n            if i == 3:\n                if not l[3] == l[2] + l[1] and (not l[3] == l[2] + l[0]):\n                    noty = 1\n                    break\n            elif l[i - 1] + l[i - 2] != l[i]:\n                noty = 1\n                break\n        if noty:\n            print('Not')\n        else:\n            print('Dynamic')", "for _ in range(int(input())):\n    s = input()\n    c = list(set(s))\n    l = []\n    for i in c:\n        l.append(s.count(i))\n    noty = 0\n    l.sort()\n    if len(l) < 3:\n        print('Dynamic')\n    else:\n        for i in range(2, len(l)):\n            if i == 3:\n                if not l[3] == l[2] + l[1] and (not l[3] == l[2] + l[0]):\n                    noty = 1\n                    break\n            elif l[i - 1] + l[i - 2] != l[i]:\n                noty = 1\n                break\n        if noty:\n            print('Not')\n        else:\n            print('Dynamic')", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    s = str(input())\n    sc = Counter(s)\n    v = list(sc.values())\n    v.sort()\n    if len(v) < 3:\n        print('Dynamic')\n    else:\n        isd = True\n        for i in range(2, len(v)):\n            if i == 3:\n                if v[i - 1] + v[i - 2] != v[i] and v[i - 1] + v[i - 3] != v[i]:\n                    isd = False\n            elif v[i - 1] + v[i - 2] != v[i]:\n                isd = False\n        if isd == True:\n            print('Dynamic')\n        else:\n            print('Not')", "from collections import defaultdict\nfrom sys import stdin, stdout\n\ndef fastIO():\n    input = stdin.readline\n    return input().rstrip('\\r\\n')\n\ndef fastOut(t):\n    stdout.write(str(t) + '\\n')\nfor _ in range(int(fastIO())):\n    S = fastIO()\n    d = defaultdict(lambda : 0)\n    for i in range(len(S)):\n        d[S[i]] += 1\n    d = sorted(list(d.values()))\n    if len(d) >= 4:\n        if d[1] + d[2] != d[3]:\n            (x, y) = (d[0], d[1])\n            (d[0], d[1]) = (y, x)\n    for i in range(2, len(d)):\n        if d[i] != d[i - 1] + d[i - 2]:\n            print('Not')\n            break\n    else:\n        print('Dynamic')", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    s = input()\n    d = Counter(s)\n    d = d.values()\n    d = list(d)\n    flag = 1\n    d.sort()\n    for i in range(2, len(d)):\n        if i == 3:\n            if d[i] != d[i - 1] + d[i - 2] and d[i] != d[i - 1] + d[i - 3]:\n                flag = 0\n                break\n        elif d[i] != d[i - 1] + d[i - 2]:\n            flag = 0\n            break\n    if len(d) < 3:\n        print('Dynamic')\n    elif flag:\n        print('Dynamic')\n    else:\n        print('Not')", "for _ in range(int(input())):\n    x = input()\n    y = list(set(x))\n    l = []\n    for i in y:\n        l.append(x.count(i))\n    temp = 0\n    l.sort()\n    if len(l) < 3:\n        print('Dynamic')\n    else:\n        for i in range(2, len(l)):\n            if i == 3:\n                if not l[3] == l[2] + l[1] and (not l[3] == l[2] + l[0]):\n                    temp = 1\n                    break\n            elif l[i - 1] + l[i - 2] != l[i]:\n                temp = 1\n                break\n        if temp:\n            print('Not')\n        else:\n            print('Dynamic')", "for _ in range(int(input())):\n    x = input()\n    y = list(set(x))\n    l = []\n    for i in y:\n        l.append(x.count(i))\n    temp = 0\n    l.sort()\n    if len(l) < 3:\n        print('Dynamic')\n    else:\n        for i in range(2, len(l)):\n            if i == 3:\n                if not l[3] == l[2] + l[1] and (not l[3] == l[2] + l[0]):\n                    temp = 1\n                    break\n            elif l[i - 1] + l[i - 2] != l[i]:\n                temp = 1\n                break\n        if temp:\n            print('Not')\n        else:\n            print('Dynamic')", "for _ in range(int(input())):\n    x = input()\n    y = list(set(x))\n    l = []\n    for i in y:\n        l.append(x.count(i))\n    temp = 0\n    l.sort()\n    if len(l) < 3:\n        print('Dynamic')\n    else:\n        for i in range(2, len(l)):\n            if i == 3:\n                if not l[3] == l[2] + l[1] and (not l[3] == l[2] + l[0]):\n                    temp = 1\n                    break\n            elif l[i - 1] + l[i - 2] != l[i]:\n                temp = 1\n                break\n        if temp:\n            print('Not')\n        else:\n            print('Dynamic')", "for _ in range(int(input())):\n    x = input()\n    y = list(set(x))\n    l = []\n    for i in y:\n        l.append(x.count(i))\n    temp = 0\n    l.sort()\n    if len(l) < 3:\n        print('Dynamic')\n    else:\n        for i in range(2, len(l)):\n            if i == 3:\n                if not l[3] == l[2] + l[1] and (not l[3] == l[2] + l[0]):\n                    temp = 1\n                    break\n            elif l[i - 1] + l[i - 2] != l[i]:\n                temp = 1\n                break\n        if temp:\n            print('Not')\n        else:\n            print('Dynamic')", "T = int(input())\nfor i in range(T):\n    S = input()\n    l1 = []\n    for j in set(S):\n        l1 = l1 + [S.count(j)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n    elif l1[-1] != l1[-2] + l1[-3]:\n        print('Not')\n    else:\n        print('Dynamic')", "import sys\nimport math\n\ndef isDynamic(arr):\n    for i in range(2, len(arr)):\n        if arr[i] != arr[i - 1] + arr[i - 2]:\n            return False\n    return True\n\ndef main(arr):\n    freq = {}\n    for e in arr:\n        if e not in freq:\n            freq[e] = 0\n        freq[e] += 1\n    new_arr = []\n    for e in freq:\n        new_arr.append(freq[e])\n    new_arr.sort()\n    if len(arr) <= 2:\n        return 'Dynamic'\n    a = isDynamic(new_arr)\n    (new_arr[0], new_arr[1]) = (new_arr[1], new_arr[0])\n    b = isDynamic(new_arr)\n    if a or b:\n        return 'Dynamic'\n    return 'Not'\nfor _ in range(int(input())):\n    print(main(input()))", "t = int(input())\nfor i in range(t):\n    s = input()\n    l1 = []\n    for i in set(s):\n        l1 = l1 + [s.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l1 = []\n    for i in set(s):\n        l1 = l1 + [s.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l1 = []\n    for i in set(s):\n        l1 = l1 + [s.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "T = int(input())\nfor i in range(T):\n    S = input()\n    l1 = []\n    for i in set(S):\n        l1 = l1 + [S.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "T = int(input())\nfor i in range(T):\n    S = input()\n    l1 = []\n    for i in set(S):\n        l1 = l1 + [S.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l1 = []\n    for i in set(s):\n        l1 = l1 + [s.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l1 = []\n    for i in set(s):\n        l1 = l1 + [s.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l1 = []\n    for i in set(s):\n        l1 = l1 + [s.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l1 = []\n    for i in set(s):\n        l1 = l1 + [s.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l1 = []\n    for i in set(s):\n        l1 = l1 + [s.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l1 = []\n    for i in set(s):\n        l1 = l1 + [s.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l1 = []\n    for i in set(s):\n        l1 = l1 + [s.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l1 = []\n    for i in set(s):\n        l1 = l1 + [s.count(i)]\n    l1.sort()\n    if len(l1) < 3:\n        print('Dynamic')\n        continue\n    if l1[-3] + l1[-2] != l1[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "for t in range(int(input())):\n    s = input()\n    k = [s.count(i) for i in set(s)]\n    k.sort()\n    if len(k) < 3:\n        print('Dynamic')\n        continue\n    if k[-3] + k[-2] != k[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    s_dict = dict()\n    for i in range(len(s)):\n        s_dict[s[i]] = s_dict.get(s[i], 0) + 1\n    values = list(s_dict.values())\n    values.sort()\n    if len(values) >= 3:\n        ans = 'Dynamic'\n        for i in range(2, len(values)):\n            if i == 3 and (values[0] + values[2] == values[3] or values[1] + values[2] == values[3]):\n                continue\n            if values[i] != values[i - 1] + values[i - 2]:\n                ans = 'Not'\n                break\n        print(ans)\n    else:\n        print('Dynamic')", "for t in range(int(input())):\n    s = input()\n    k = [s.count(i) for i in set(s)]\n    k.sort()\n    if len(k) < 3:\n        print('Dynamic')\n        continue\n    if k[-3] + k[-2] != k[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "for y in range(int(input())):\n    a = input()\n    p = [a.count(i) for i in set(a)]\n    p.sort()\n    if len(p) < 3:\n        print('Dynamic')\n        continue\n    if p[-3] + p[-2] != p[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "for y in range(int(input())):\n    a = input()\n    k = [a.count(i) for i in set(a)]\n    k.sort()\n    if len(k) < 3:\n        print('Dynamic')\n        continue\n    if k[-3] + k[-2] != k[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "for y in range(int(input())):\n    a = input()\n    k = [a.count(i) for i in set(a)]\n    k.sort()\n    if len(k) < 3:\n        print('Dynamic')\n        continue\n    if k[-3] + k[-2] != k[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "for y in range(int(input())):\n    a = input()\n    k = [a.count(i) for i in set(a)]\n    k.sort()\n    if len(k) < 3:\n        print('Dynamic')\n        continue\n    if k[-3] + k[-2] != k[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "T = int(input())\nfor _ in range(T):\n    s = list(input())\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    M = []\n    for i in d:\n        M.append(d[i])\n    M.sort()\n    if len(M) < 3:\n        print('Dynamic')\n    else:\n        found = True\n        for i in range(2, len(M)):\n            if M[i] == M[i - 1] + M[i - 2]:\n                pass\n            elif i == 3:\n                if M[i] == M[2] + M[0]:\n                    pass\n                else:\n                    found = False\n                    break\n            else:\n                found = False\n                break\n        if found:\n            print('Dynamic')\n        else:\n            print('Not')", "T = int(input())\nfor _ in range(T):\n    s = list(input())\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    M = []\n    for i in d:\n        M.append(d[i])\n    M.sort()\n    if len(M) < 3:\n        print('Dynamic')\n    else:\n        found = True\n        for i in range(2, len(M)):\n            if M[i] == M[i - 1] + M[i - 2]:\n                pass\n            elif i == 3:\n                if M[i] == M[2] + M[0]:\n                    pass\n                else:\n                    found = False\n                    break\n            else:\n                found = False\n                break\n        if found:\n            print('Dynamic')\n        else:\n            print('Not')", "T = int(input())\nfor _ in range(T):\n    s = list(input())\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    M = []\n    for i in d:\n        M.append(d[i])\n    M.sort()\n    if len(M) < 3:\n        print('Dynamic')\n    else:\n        found = True\n        for i in range(2, len(M)):\n            if M[i] == M[i - 1] + M[i - 2]:\n                pass\n            elif i == 3:\n                if M[i] == M[2] + M[0]:\n                    pass\n                else:\n                    found = False\n                    break\n            else:\n                found = False\n                break\n        if found:\n            print('Dynamic')\n        else:\n            print('Not')", "for i in range(int(input())):\n    s = input()\n    ss = set(s)\n    if len(ss) < 3:\n        print('Dynamic')\n        continue\n    l = []\n    for i in ss:\n        l.append((i, s.count(i)))\n    l = sorted(l, key=lambda x: x[1], reverse=True)\n    f = False\n    if l[0][1] == l[1][1] + l[2][1]:\n        f = True\n    if f:\n        print('Dynamic')\n    else:\n        print('Not')", "t = int(input().strip())\nfor k in range(t):\n    s = input().strip()\n    d = {}\n    maxx = -10000\n    cu = c = 0\n    for i in s:\n        if i not in d:\n            cu += 1\n            d[i] = 1\n        else:\n            d[i] += 1\n    if cu < 3:\n        print('Dynamic')\n    else:\n        lii = list(d.values())\n        lii.sort()\n        for i in range(2, len(lii)):\n            if lii[i] == lii[i - 1] + lii[i - 2]:\n                c = 1\n            else:\n                c = 0\n        (lii[0], lii[1]) = (lii[1], lii[0])\n        for i in range(2, len(lii)):\n            if lii[i] == lii[i - 1] + lii[i - 2]:\n                c = 1\n            else:\n                c = 0\n        if c == 0:\n            print('Not')\n        else:\n            print('Dynamic')", "for i in range(int(input())):\n    s = input()\n    ss = set(s)\n    if len(ss) < 3:\n        print('Dynamic')\n        continue\n    l = []\n    for i in ss:\n        l.append((i, s.count(i)))\n    l = sorted(l, key=lambda x: x[1], reverse=True)\n    f = False\n    if l[0][1] == l[1][1] + l[2][1]:\n        f = True\n    if f:\n        print('Dynamic')\n    else:\n        print('Not')", "T = int(input())\nfor tj in range(T):\n    s = input()\n    N = len(s)\n    count = [0] * 26\n    for i in range(N):\n        count[ord(s[i]) - ord('a')] += 1\n    convert_table = []\n    for i in range(26):\n        if count[i] != 0:\n            convert_table.append(count[i])\n    if len(convert_table) < 3:\n        print('Dynamic')\n    else:\n        convert_table.sort()\n        flag = True\n        for i in range(2, len(convert_table)):\n            if i == 3:\n                if convert_table[i] != convert_table[i - 1] + convert_table[i - 2] and convert_table[i] != convert_table[i - 1] + convert_table[i - 3]:\n                    flag = False\n                    break\n            elif convert_table[i] != convert_table[i - 1] + convert_table[i - 2]:\n                flag = False\n                break\n        if flag:\n            print('Dynamic')\n        else:\n            print('Not')", "for _ in range(int(input())):\n    x = input()\n    y = [x.count(z) for z in set(x)]\n    y.sort()\n    if len(y) < 3:\n        print('Dynamic')\n        continue\n    print('Not') if y[-3] + y[-2] != y[-1] else print('Dynamic')", "for _ in range(int(input())):\n    x = input()\n    y = [x.count(z) for z in set(x)]\n    y.sort()\n    if len(y) < 3:\n        print('Dynamic')\n        continue\n    if y[-3] + y[-2] != y[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "for i in range(int(input())):\n    s = input()\n    ss = set(s)\n    if len(ss) < 3:\n        print('Dynamic')\n        continue\n    l = []\n    for i in ss:\n        l.append((i, s.count(i)))\n    l = sorted(l, key=lambda x: x[1], reverse=True)\n    f = False\n    if l[0][1] == l[1][1] + l[2][1]:\n        f = True\n    if f:\n        print('Dynamic')\n    else:\n        print('Not')", "for i in range(int(input())):\n    inp = input()\n    inpSet = set(inp)\n    if len(inpSet) < 3:\n        print('Dynamic')\n        continue\n    charList = []\n    for i in inpSet:\n        charList.append((i, inp.count(i)))\n    charList = sorted(charList, key=lambda x: x[1], reverse=True)\n    flag = False\n    if charList[0][1] == charList[1][1] + charList[2][1]:\n        flag = True\n    if flag:\n        print('Dynamic')\n    else:\n        print('Not')", "for _ in range(int(input())):\n    a = input()\n    b = [a.count(i) for i in set(a)]\n    b.sort()\n    if len(b) < 3:\n        print('Dynamic')\n        continue\n    if b[-3] + b[-2] != b[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "for i in range(int(input())):\n    inp = input()\n    inpSet = set(inp)\n    if len(inpSet) < 3:\n        print('Dynamic')\n        continue\n    charList = []\n    for i in inpSet:\n        charList.append((i, inp.count(i)))\n    charList = sorted(charList, key=lambda x: x[1], reverse=True)\n    flag = False\n    if charList[0][1] == charList[1][1] + charList[2][1]:\n        flag = True\n    if flag:\n        print('Dynamic')\n    else:\n        print('Not')", "from collections import Counter\n\ndef fib_str(s):\n    counts = Counter(s)\n    if len(counts) < 3:\n        return True\n    [x, y, z] = counts.most_common(3)\n    if x[1] == y[1] + z[1]:\n        return True\n    return False\ntest = int(input())\nfor _ in range(test):\n    s = input()\n    if fib_str(s):\n        print('Dynamic')\n    else:\n        print('Not')", "for _ in range(int(input())):\n    a = input()\n    b = [a.count(i) for i in set(a)]\n    b.sort()\n    if len(b) < 3:\n        print('Dynamic')\n        continue\n    if b[-3] + b[-2] != b[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "for _ in range(int(input())):\n    a = input()\n    b = [a.count(i) for i in set(a)]\n    b.sort()\n    if len(b) < 3:\n        print('Dynamic')\n        continue\n    if b[-3] + b[-2] != b[-1]:\n        print('Not')\n        continue\n    else:\n        print('Dynamic')", "def activate(x):\n    y = True\n    if x[-1] != x[-2] + x[-3]:\n        y = False\n    return y\n\ndef activation(a):\n    z = False\n    count = [a.count(d) for d in set(a)]\n    if len(count) < 3 or activate(sorted(count)):\n        return True\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    s = input()\n    if activation(s):\n        print('Dynamic')\n    else:\n        print('Not')", "def activate(x):\n    y = True\n    if x[-1] != x[-2] + x[-3]:\n        y = False\n    return y\n\ndef activation(a):\n    z = False\n    count = [a.count(d) for d in set(a)]\n    if len(count) < 3 or activate(sorted(count)):\n        return True\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    s = input()\n    if activation(s):\n        print('Dynamic')\n    else:\n        print('Not')", "def activate(x):\n    y = True\n    if x[-1] != x[-2] + x[-3]:\n        y = False\n    return y\n\ndef activation(a):\n    z = False\n    count = [a.count(d) for d in set(a)]\n    if len(count) < 3 or activate(sorted(count)):\n        return True\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    s = input()\n    if activation(s):\n        print('Dynamic')\n    else:\n        print('Not')", "def activate(x):\n    y = True\n    if x[-1] != x[-2] + x[-3]:\n        y = False\n    return y\n\ndef activation(a):\n    z = False\n    count = [a.count(d) for d in set(a)]\n    if len(count) < 3 or activate(sorted(count)):\n        return True\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    s = input()\n    if activation(s):\n        print('Dynamic')\n    else:\n        print('Not')", "def fibFound(x):\n    found = True\n    if x[-1] != x[-2] + x[-3]:\n        found = False\n    return found\n\ndef dyn(s):\n    res = False\n    u = [s.count(x) for x in set(s)]\n    if len(u) < 3 or fibFound(sorted(u)):\n        return True\n    else:\n        return False\ntry:\n    t = int(input())\n    for i in range(0, t):\n        s = input()\n        if dyn(s):\n            print('Dynamic')\n        else:\n            print('Not')\nexcept EOFError as e:\n    pass", "def fibFound(x):\n    found = True\n    if x[-1] != x[-2] + x[-3]:\n        found = False\n    return found\n\ndef dyn(s):\n    res = False\n    u = [s.count(x) for x in set(s)]\n    if len(u) < 3 or fibFound(sorted(u)):\n        return True\n    else:\n        return False\ntry:\n    t = int(input())\n    for i in range(0, t):\n        s = input()\n        if dyn(s):\n            print('Dynamic')\n        else:\n            print('Not')\nexcept EOFError as e:\n    pass", "def fibFound(x):\n    found = True\n    if x[-1] != x[-2] + x[-3]:\n        found = False\n    return found\n\ndef dyn(s):\n    res = False\n    u = [s.count(x) for x in set(s)]\n    if len(u) < 3 or fibFound(sorted(u)):\n        return True\n    else:\n        return False\ntry:\n    t = int(input())\n    for i in range(0, t):\n        s = input()\n        if dyn(s):\n            print('Dynamic')\n        else:\n            print('Not')\nexcept EOFError as e:\n    pass", "def fibFound(x):\n    found = True\n    if x[-1] != x[-2] + x[-3]:\n        found = False\n    return found\n\ndef dyn(s):\n    res = False\n    u = [s.count(x) for x in set(s)]\n    if len(u) < 3 or fibFound(sorted(u)):\n        return True\n    else:\n        return False\ntry:\n    t = int(input())\n    for i in range(0, t):\n        s = input()\n        if dyn(s):\n            print('Dynamic')\n        else:\n            print('Not')\nexcept EOFError as e:\n    pass", "from collections import Counter\nfor i in range(int(input())):\n    s = str(input())\n    d = Counter(s)\n    x = list(d.values())\n    x.sort()\n    if len(x) < 3:\n        print('Dynamic')\n    elif x[-1] == x[-3] + x[-2]:\n        print('Dynamic')\n    else:\n        print('Not')", "def fibFound(x):\n    found = True\n    if x[-1] != x[-2] + x[-3]:\n        found = False\n    return found\n\ndef dyn(s):\n    res = False\n    u = [s.count(x) for x in set(s)]\n    if len(u) < 3 or fibFound(sorted(u)):\n        return True\n    else:\n        return False\ntry:\n    t = int(input())\n    for i in range(0, t):\n        s = input()\n        if dyn(s):\n            print('Dynamic')\n        else:\n            print('Not')\nexcept EOFError as e:\n    pass", "from collections import Counter\nn = int(input())\nfor i in range(n):\n    str = input()\n    a = Counter(str)\n    l = list(a.values())\n    l.sort()\n    if len(l) < 3:\n        print('Dynamic')\n    elif l[-1] == l[-2] + l[-3]:\n        print('Dynamic')\n    else:\n        print('Not')", "def fibFound(x):\n    found = True\n    if x[-1] != x[-2] + x[-3]:\n        found = False\n    return found\n\ndef dyn(s):\n    res = False\n    u = [s.count(x) for x in set(s)]\n    if len(u) < 3 or fibFound(sorted(u)):\n        return True\n    else:\n        return False\ntry:\n    t = int(input())\n    for i in range(0, t):\n        s = input()\n        if dyn(s):\n            print('Dynamic')\n        else:\n            print('Not')\nexcept EOFError as e:\n    pass", "def fibFound(x):\n    found = True\n    if x[-1] != x[-2] + x[-3]:\n        found = False\n    return found\n\ndef dyn(s):\n    res = False\n    u = [s.count(x) for x in set(s)]\n    if len(u) < 3 or fibFound(sorted(u)):\n        return True\n    else:\n        return False\ntry:\n    t = int(input())\n    for i in range(0, t):\n        s = input()\n        if dyn(s):\n            print('Dynamic')\n        else:\n            print('Not')\nexcept EOFError as e:\n    pass", "def fibFound(x):\n    n = len(x)\n    i = 2\n    found = True\n    if n > 3 and x[1] + x[2] != x[3]:\n        t = x[0]\n        x[0] = x[1]\n        x[1] = t\n    while i < n:\n        if x[i] != x[i - 1] + x[i - 2]:\n            found = False\n            break\n        i += 1\n    return found\n\ndef dyn(s):\n    res = False\n    u = [s.count(x) for x in set(s)]\n    if len(u) < 3 or fibFound(sorted(u)):\n        return True\n    else:\n        return False\ntry:\n    t = int(input())\n    for i in range(0, t):\n        s = input()\n        if dyn(s):\n            print('Dynamic')\n        else:\n            print('Not')\nexcept EOFError as e:\n    pass", "def fibFound(x):\n    found = True\n    if x[-1] != x[-2] + x[-3]:\n        found = False\n    return found\n\ndef dyn(s):\n    res = False\n    u = [s.count(x) for x in set(s)]\n    if len(u) < 3 or fibFound(sorted(u)):\n        return True\n    else:\n        return False\ntry:\n    t = int(input())\n    for i in range(0, t):\n        s = input()\n        if dyn(s):\n            print('Dynamic')\n        else:\n            print('Not')\nexcept EOFError as e:\n    pass", "try:\n    for _ in range(int(input())):\n        s = input()\n        c = list(set(s))\n        l = []\n        for i in c:\n            l.append(s.count(i))\n        noty = 0\n        l.sort()\n        if len(l) < 3:\n            print('Dynamic')\n        else:\n            for i in range(2, len(l)):\n                if i == 3:\n                    if not l[3] == l[2] + l[1] and (not l[3] == l[2] + l[0]):\n                        noty = 1\n                        break\n                elif l[i - 1] + l[i - 2] != l[i]:\n                    noty = 1\n                    break\n            if noty:\n                print('Not')\n            else:\n                print('Dynamic')\nexcept EOFError as e:\n    pass", "from collections import Counter\n\ndef fib_str(s):\n    counts = Counter(s)\n    if len(counts) < 3:\n        return True\n    [x, y, z] = counts.most_common(3)\n    if x[1] == y[1] + z[1]:\n        return True\n    return False\ntest = int(input())\nfor _ in range(test):\n    s = input()\n    if fib_str(s):\n        print('Dynamic')\n    else:\n        print('Not')", "from collections import Counter\nfor i in range(int(input())):\n    s = str(input())\n    d = Counter(s)\n    x = list(d.values())\n    x.sort()\n    if len(x) < 3:\n        print('Dynamic')\n    elif x[-1] == x[-3] + x[-2]:\n        print('Dynamic')\n    else:\n        print('Not')", "from collections import Counter\nfor _ in range(int(input())):\n    k = input()\n    c = []\n    d = dict(Counter(k))\n    for e in d.values():\n        c.append(e)\n    c.sort()\n    if len(c) < 3:\n        print('Dynamic')\n    elif c[-1] != c[-2] + c[-3]:\n        print('Not')\n    else:\n        print('Dynamic')", "for _ in range(int(input())):\n    xd = {}\n    x = input()\n    for i in range(len(x)):\n        xd[x[i]] = xd.setdefault(x[i], 0) + 1\n    xd = sorted(xd.values())\n    if len(xd) <= 2:\n        print('Dynamic')\n        continue\n    ans = 'Dynamic'\n    if len(xd) >= 4 and xd[3] != xd[2] + xd[1]:\n        (xd[0], xd[1]) = (xd[1], xd[0])\n    for j in range(2, len(xd)):\n        if xd[j - 2] + xd[j - 1] != xd[j]:\n            ans = 'Not'\n            break\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    k = input()\n    c = []\n    d = dict(Counter(k))\n    for e in d.values():\n        c.append(e)\n    c.sort()\n    if len(c) < 3:\n        print('Dynamic')\n    elif c[-1] != c[-2] + c[-3]:\n        print('Not')\n    else:\n        print('Dynamic')", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    d = Counter(s)\n    a = sorted(list(d.values()))\n    l = len(a)\n    if len(s) < 3:\n        print('Dynamic')\n    elif a[l - 1] == a[l - 2] + a[l - 3]:\n        print('Dynamic')\n    else:\n        print('Not')", "for _ in range(int(input())):\n    d = {}\n    s = input().strip()\n    for i in s:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    d = list(d.values())\n    d.sort()\n    if len(d) < 3:\n        print('Dynamic')\n    else:\n        for i in range(2, len(d)):\n            flag = 0\n            if d[i - 1] + d[i - 2] == d[i]:\n                continue\n            else:\n                (d[0], d[1]) = (d[1], d[0])\n                for i in range(2, len(d)):\n                    if d[i - 1] + d[i - 2] == d[i]:\n                        continue\n                    else:\n                        print('Not')\n                        flag = 1\n                        break\n                if flag == 1:\n                    break\n        else:\n            print('Dynamic')", "from collections import Counter\nfor i in range(int(input())):\n    s = str(input())\n    d = Counter(s)\n    x = list(d.values())\n    x.sort()\n    if len(x) < 3:\n        print('Dynamic')\n    elif x[-1] == x[-3] + x[-2]:\n        print('Dynamic')\n    else:\n        print('Not')", "from collections import Counter\nfor i in range(int(input())):\n    s = str(input())\n    d = Counter(s)\n    x = list(d.values())\n    x.sort()\n    if len(x) < 3:\n        print('Dynamic')\n    elif x[-1] == x[-3] + x[-2]:\n        print('Dynamic')\n    else:\n        print('Not')", "from collections import Counter\nfor _ in range(int(input())):\n    s = str(input())\n    s1 = Counter(s)\n    a = list(s1.values())\n    a.sort(reverse=True)\n    if len(a) < 3:\n        print('Dynamic')\n    elif a[0] != a[1] + a[2]:\n        print('Not')\n    else:\n        print('Dynamic')", "from collections import Counter\nfor t in range(int(input())):\n    S = input()\n    f = [y for (x, y) in Counter(S).most_common()]\n    f = f[::-1]\n    if len(f) > 3 and f[3] != f[2] + f[1]:\n        (f[0], f[1]) = (f[1], f[0])\n    ok = len(f) < 3 or all((f[i] == f[i - 1] + f[i - 2] for i in range(2, len(f))))\n    print('Dynamic' if ok else 'Not')", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    d = Counter(s)\n    o = list(d.values())\n    o.sort()\n    if len(o) < 3:\n        print('Dynamic')\n    elif o[-1] != o[-3] + o[-2]:\n        print('Not')\n    else:\n        print('Dynamic')", "from collections import Counter\nfor _ in range(int(input())):\n    o = input()\n    c = []\n    d = dict(Counter(o))\n    for e in d.values():\n        c.append(e)\n    c.sort()\n    if len(c) < 3:\n        print('Dynamic')\n    elif c[-1] != c[-2] + c[-3]:\n        print('Not')\n    else:\n        print('Dynamic')", "from collections import Counter\nfor i in range(int(input())):\n    o = input()\n    c = []\n    d = dict(Counter(o))\n    for e in d.values():\n        c.append(e)\n    c.sort()\n    if len(c) < 3:\n        print('Dynamic')\n    elif c[-1] != c[-2] + c[-3]:\n        print('Not')\n    else:\n        print('Dynamic')", "from collections import Counter\nfor i in range(int(input())):\n    o = input()\n    c = []\n    d = dict(Counter(o))\n    for e in d.values():\n        c.append(e)\n    c.sort()\n    if len(c) < 3:\n        print('Dynamic')\n    elif c[-1] != c[-2] + c[-3]:\n        print('Not')\n    else:\n        print('Dynamic')", "from collections import Counter\nfor i in range(int(input())):\n    o = input()\n    c = []\n    d = dict(Counter(o))\n    for e in d.values():\n        c.append(e)\n    c.sort()\n    if len(c) < 3:\n        print('Dynamic')\n    elif c[-1] != c[-2] + c[-3]:\n        print('Not')\n    else:\n        print('Dynamic')", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = set(s)\n    l = []\n    for i in p:\n        l.append(s.count(i))\n    l.sort()\n    if len(l) >= 4 and l[3] != l[1] + l[2]:\n        (l[0], l[1]) = (l[1], l[0])\n    ok = True\n    if len(l) >= 3:\n        for i in range(2, len(l)):\n            if l[i] != l[i - 1] + l[i - 2]:\n                ok = False\n    if ok:\n        print('Dynamic')\n    else:\n        print('Not')", "n = int(input())\nfor i in range(n):\n    s = input()\n    l = list(s)\n    t = set(l)\n    d = {}\n    l1 = []\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d.values():\n        l1.append(i)\n    l1.sort()\n    N = len(l1)\n    if N >= 4 and l1[3] != l1[1] + l1[2]:\n        (l1[0], l1[1]) = (l1[1], l1[0])\n    ok = True\n    if N >= 3:\n        for i in range(2, N):\n            if l1[i] != l1[i - 1] + l1[i - 2]:\n                ok = False\n    if ok:\n        print('Dynamic')\n    else:\n        print('Not')", "from collections import Counter\nfor i in range(int(input())):\n    o = input()\n    c = []\n    d = dict(Counter(o))\n    for e in d.values():\n        c.append(e)\n    c.sort()\n    if len(c) < 3:\n        print('Dynamic')\n    elif c[-1] != c[-2] + c[-3]:\n        print('Not')\n    else:\n        print('Dynamic')", "from collections import Counter\nfor i in range(int(input())):\n    o = sorted([c for c in input()])\n    c = []\n    d = dict(Counter(o))\n    for e in d.values():\n        c.append(e)\n    c.sort()\n    if len(c) < 3:\n        print('Dynamic')\n    elif c[-1] != c[-2] + c[-3]:\n        print('Not')\n    else:\n        print('Dynamic')", "for _ in range(int(input())):\n    s = input()\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    l = []\n    for i in d.values():\n        l.append(i)\n    l.sort()\n    if len(l) < 3:\n        print('Dynamic')\n    elif l[-1] == l[-2] + l[-3]:\n        print('Dynamic')\n    else:\n        print('Not')", "import sys\nsys.setrecursionlimit(10 ** 5 + 1)\ninf = int(10 ** 20)\nmax_val = inf\nmin_val = -inf\nRW = lambda : sys.stdin.readline().strip()\nRI = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\nfrom collections import Counter\nfor _ in range(RI()):\n    inps = RW()\n    freq = sorted(Counter(inps).values())\n    if len(freq) < 3:\n        print('Dynamic')\n    else:\n        lens = len(freq)\n        if lens >= 4 and freq[3] != freq[1] + freq[2]:\n            (freq[0], freq[1]) = (freq[1], freq[0])\n        answer = 'Dynamic'\n        for i in range(2, len(freq)):\n            if freq[i] != freq[i - 1] + freq[i - 2]:\n                answer = 'Not'\n                break\n        print(answer)", "import sys\nsys.setrecursionlimit(10 ** 5 + 1)\ninf = int(10 ** 20)\nmax_val = inf\nmin_val = -inf\nRW = lambda : sys.stdin.readline().strip()\nRI = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\nfrom collections import Counter\nfor _ in range(RI()):\n    inps = RW()\n    freq = sorted(Counter(inps).values())\n    if len(freq) < 3:\n        print('Dynamic')\n    else:\n        lens = len(freq)\n        if lens >= 4 and freq[3] != freq[1] + freq[2]:\n            (freq[0], freq[1]) = (freq[1], freq[0])\n        answer = 'Dynamic'\n        for i in range(2, len(freq)):\n            if freq[i] != freq[i - 1] + freq[i - 2]:\n                answer = 'Not'\n                break\n        print(answer)", "for _ in range(int(input())):\n    a = input()\n    d = {}\n    for i in a:\n        if i in d:\n            d.update({i: d.get(i) + 1})\n        else:\n            d.update({i: 1})\n    l = []\n    for i in d.values():\n        l.append(i)\n    l.sort()\n    if len(l) < 3:\n        print('Dynamic')\n    elif l[-1] == l[-2] + l[-3]:\n        print('Dynamic')\n    else:\n        print('Not')", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    dict1 = dict(Counter(s))\n    l1 = []\n    for i in dict1.values():\n        l1.append(i)\n    l1.sort()\n    check = True\n    if len(set(s)) < 3:\n        print('Dynamic')\n    else:\n        if l1[-1] == l1[-2] + l1[-3]:\n            print('Dynamic')\n            check = False\n        if check:\n            print('Not')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    arr_dic = {}\n    for i in range(len(s)):\n        if s[i] not in arr_dic:\n            arr_dic[s[i]] = 1\n        else:\n            arr_dic[s[i]] += 1\n    counter = 0\n    arr = sorted(list(arr_dic.values()), reverse=True)\n    if len(arr) < 3:\n        print('Dynamic')\n    else:\n        for i in range(0, len(arr) - 2):\n            if i != len(arr) - 4:\n                if arr[i] != arr[i + 1] + arr[i + 2]:\n                    counter = 1\n            elif arr[i] != arr[i + 1] + arr[i + 2]:\n                c = arr[i + 3]\n                arr[i + 3] = arr[i + 2]\n                arr[i + 2] = c\n                if arr[i] != arr[i + 1] + arr[i + 2]:\n                    counter = 1\n        if counter == 0:\n            print('Dynamic')\n        else:\n            print('Not')", "def dynamic_check(t_case):\n    func_tcase = []\n    t_case = t_case.replace(' ', '')\n    list_set = list(set(t_case))\n    for item in list_set:\n        func_tcase.append(t_case.count(item))\n    print(func(func_tcase))\n\ndef func(func_tcase):\n    if len(func_tcase) < 3:\n        return 'Dynamic'\n    else:\n        func_tcase.sort()\n        if func_tcase[-1] == func_tcase[-2] + func_tcase[-3]:\n            return 'Dynamic'\n        return 'Not'\nn_cases = int(input())\nfor _ in range(n_cases):\n    t_case = input()\n    dynamic_check(t_case)", "T = int(input())\nfor i in range(T):\n    s = input()\n    c = set(s)\n    l = []\n    for i in c:\n        l.append(s.count(i))\n    if len(l) < 3:\n        print('Dynamic')\n    else:\n        l.sort()\n        if l[-1] == l[-2] + l[-3]:\n            print('Dynamic')\n        else:\n            print('Not')", "for tc in range(int(input())):\n    s = input()\n    c = set(s)\n    l = []\n    for i in c:\n        l.append(s.count(i))\n    if len(l) < 3:\n        print('Dynamic')\n    else:\n        l.sort()\n        if l[-1] == l[-2] + l[-3]:\n            print('Dynamic')\n        else:\n            print('Not')", "t = int(input())\nfor _ in range(t):\n    s = [x for x in input()]\n    c = list(set(s))\n    a = []\n    for i in c:\n        a.append(s.count(i))\n    a.sort()\n    if len(a) < 3:\n        print('Dynamic')\n    else:\n        for i in range(len(a) - 1, 1, -1):\n            if a[i] == a[i - 1] + a[i - 2]:\n                print('Dynamic')\n                break\n            else:\n                print('Not')\n                break", "for _ in range(int(input())):\n    s = input()\n    s2 = list(s)\n    s1 = list(set(s))\n    a = []\n    for i in s1:\n        a.append(s2.count(i))\n    a = sorted(a)\n    if len(a) < 3:\n        print('Dynamic')\n    else:\n        for i in range(len(a) - 1, 1, -1):\n            if a[i] == a[i - 1] + a[i - 2]:\n                print('Dynamic')\n                break\n            else:\n                print('Not')\n                break", "for _ in range(int(input())):\n    s = input()\n    s2 = list(s)\n    s1 = list(set(s))\n    a = []\n    for i in s1:\n        a.append(s2.count(i))\n    a = sorted(a)\n    if len(a) < 3:\n        print('Dynamic')\n    else:\n        for i in range(len(a) - 1, 1, -1):\n            if a[i] == a[i - 1] + a[i - 2]:\n                print('Dynamic')\n                break\n            else:\n                print('Not')\n                break", "t = int(input())\nfor i in range(t):\n    set_str = set()\n    set_dir = dict()\n    str_in = input()\n    for j in str_in:\n        set_str.add(j)\n    set_dir = {k: str_in.count(k) for k in set_str}\n    a = sorted(set_dir.values())\n    flag = 1\n    if len(a) >= 4 and a[3] != a[2] + a[1]:\n        (a[1], a[0]) = (a[0], a[1])\n    for i in range(2, len(a)):\n        if a[i] != a[i - 1] + a[i - 2]:\n            flag = 2\n            break\n    if flag == 1 or len(set_str) < 3:\n        print('Dynamic')\n    else:\n        print('Not')"]