["t = int(input())\nwhile t > 0:\n    s1 = str(input())\n    s2 = str(input())\n    t -= 1\n    if '1' not in s2:\n        print(0)\n    else:\n        if len(s2) < len(s1):\n            for i in range(abs(len(s2) - len(s1))):\n                s2 = '0' + s2\n        else:\n            for i in range(abs(len(s2) - len(s1))):\n                s1 = '0' + s1\n        s1 = s1[::-1]\n        s2 = s2[::-1]\n        ans = 0\n        tre = 0\n        for i in range(len(s1)):\n            k1 = s1[i]\n            k2 = s2[i]\n            if k1 == k2 == '1':\n                x = i + 1\n                while x < len(s1):\n                    if s1[x] == s2[x]:\n                        break\n                    x += 1\n                val = abs(i - x)\n                if val > tre:\n                    ans += abs(val - tre)\n                    tre = val\n        print(ans + 1)", "t = int(input())\nwhile t > 0:\n    s1 = str(input())\n    s2 = str(input())\n    t -= 1\n    if '1' not in s2:\n        print(0)\n    else:\n        if len(s2) < len(s1):\n            for i in range(abs(len(s2) - len(s1))):\n                s2 = '0' + s2\n        else:\n            for i in range(abs(len(s2) - len(s1))):\n                s1 = '0' + s1\n        s1 = s1[::-1]\n        s2 = s2[::-1]\n        ans = 0\n        tre = 0\n        for i in range(len(s1)):\n            k1 = s1[i]\n            k2 = s2[i]\n            if k1 == k2 == '1':\n                x = i + 1\n                while x < len(s1):\n                    if s1[x] == s2[x]:\n                        break\n                    x += 1\n                val = abs(i - x)\n                if val > tre:\n                    ans += abs(val - tre)\n                    tre = val\n        print(ans + 1)", "t = int(input())\nwhile t > 0:\n    s1 = str(input())\n    s2 = str(input())\n    t -= 1\n    if '1' not in s2:\n        print(0)\n    else:\n        if len(s2) < len(s1):\n            for i in range(abs(len(s2) - len(s1))):\n                s2 = '0' + s2\n        else:\n            for i in range(abs(len(s2) - len(s1))):\n                s1 = '0' + s1\n        s1 = s1[::-1]\n        s2 = s2[::-1]\n        ans = 0\n        tre = 0\n        for i in range(len(s1)):\n            k1 = s1[i]\n            k2 = s2[i]\n            if k1 == k2 == '1':\n                x = i + 1\n                while x < len(s1):\n                    if s1[x] == s2[x]:\n                        break\n                    x += 1\n                val = abs(i - x)\n                if val > tre:\n                    ans += abs(val - tre)\n                    tre = val\n        print(ans + 1)", "t = int(input())\nwhile t > 0:\n    s1 = str(input())\n    s2 = str(input())\n    t -= 1\n    if '1' not in s2:\n        print(0)\n    else:\n        if len(s2) < len(s1):\n            for i in range(abs(len(s2) - len(s1))):\n                s2 = '0' + s2\n        else:\n            for i in range(abs(len(s2) - len(s1))):\n                s1 = '0' + s1\n        s1 = s1[::-1]\n        s2 = s2[::-1]\n        ans = 0\n        tre = 0\n        for i in range(len(s1)):\n            k1 = s1[i]\n            k2 = s2[i]\n            if k1 == k2 == '1':\n                x = i + 1\n                while x < len(s1):\n                    if s1[x] == s2[x]:\n                        break\n                    x += 1\n                val = abs(i - x)\n                if val > tre:\n                    ans += abs(val - tre)\n                    tre = val\n        print(ans + 1)", "t = int(input())\nfor i in range(t):\n    a = list(input())\n    b = list(input())\n    c = []\n    (x, y) = (len(a), len(b))\n    if x > y:\n        c[:x - y + 1] = ['0'] * (x - y)\n        c[x - y + 1:] = b[:]\n        b = c\n        z = x\n    else:\n        c[:y - x + 1] = ['0'] * (y - x)\n        c[y - x + 1:] = a[:]\n        a = c\n        z = y\n    k = 1\n    r = 0\n    if b == ['0'] * z:\n        print(0)\n    else:\n        f = 0\n        for j in range(z - 1, -1, -1):\n            if a[j] == b[j] == '1' and f == 0:\n                f = 1\n                k += 1\n            elif a[j] == '1' and b[j] == '0' and (f == 1) or (a[j] == '0' and b[j] == '1' and (f == 1)):\n                k += 1\n            else:\n                if k > r:\n                    r = k\n                k = 1\n                f = 0\n                if a[j] == b[j] == '1':\n                    f = 1\n                    k += 1\n        if k > r:\n            r = k\n        print(r)", "t = int(input())\nfor i in range(t):\n    a = list(input())\n    b = list(input())\n    c = []\n    (x, y) = (len(a), len(b))\n    if x > y:\n        c[:x - y + 1] = ['0'] * (x - y)\n        c[x - y + 1:] = b[:]\n        b = c\n        z = x\n    else:\n        c[:y - x + 1] = ['0'] * (y - x)\n        c[y - x + 1:] = a[:]\n        a = c\n        z = y\n    k = 1\n    r = 0\n    if b == ['0'] * z:\n        print(0)\n    else:\n        f = 0\n        for j in range(z - 1, -1, -1):\n            if a[j] == b[j] == '1' and f == 0:\n                f = 1\n                k += 1\n            elif a[j] == '1' and b[j] == '0' and (f == 1) or (a[j] == '0' and b[j] == '1' and (f == 1)):\n                k += 1\n            else:\n                if k > r:\n                    r = k\n                k = 1\n                f = 0\n                if a[j] == b[j] == '1':\n                    f = 1\n                    k += 1\n        if k > r:\n            r = k\n        print(r)", "for _ in range(int(input())):\n    a = list(input())\n    b = list(input())\n    c = []\n    (x, y) = (len(a), len(b))\n    if x > y:\n        c[:x - y + 1] = ['0'] * (x - y)\n        c[x - y + 1:] = b[:]\n        b = c\n        z = x\n    else:\n        c[:y - x + 1] = ['0'] * (y - x)\n        c[y - x + 1:] = a[:]\n        a = c\n        z = y\n    t = 1\n    r = 0\n    if b == ['0'] * z:\n        print(0)\n    else:\n        flag = 0\n        for i in range(z - 1, -1, -1):\n            if a[i] == b[i] == '1' and flag == 0:\n                flag = 1\n                t = t + 1\n            elif a[i] == '1' and b[i] == '0' and (flag == 1) or (a[i] == '0' and b[i] == '1' and (flag == 1)):\n                t = t + 1\n            else:\n                if t > r:\n                    r = t\n                t = 1\n                flag = 0\n                if a[i] == b[i] == '1':\n                    flag = 1\n                    t = t + 1\n        if t > r:\n            r = t\n        print(r)", "for _ in range(int(input())):\n    a = list(input())\n    b = list(input())\n    c = []\n    (x, y) = (len(a), len(b))\n    if x > y:\n        c[:x - y + 1] = ['0'] * (x - y)\n        c[x - y + 1:] = b[:]\n        b = c\n        z = x\n    else:\n        c[:y - x + 1] = ['0'] * (y - x)\n        c[y - x + 1:] = a[:]\n        a = c\n        z = y\n    t = 1\n    r = 0\n    if b == ['0'] * z:\n        print(0)\n    else:\n        flag = 0\n        for i in range(z - 1, -1, -1):\n            if a[i] == b[i] == '1' and flag == 0:\n                flag = 1\n                t = t + 1\n            elif a[i] == '1' and b[i] == '0' and (flag == 1) or (a[i] == '0' and b[i] == '1' and (flag == 1)):\n                t = t + 1\n            else:\n                if t > r:\n                    r = t\n                t = 1\n                flag = 0\n                if a[i] == b[i] == '1':\n                    flag = 1\n                    t = t + 1\n        if t > r:\n            r = t\n        print(r)", "for _ in range(int(input())):\n    (A, B, count, res, flag) = (str(input()), str(input()), 0, 1, 0)\n    if int(B) == 0:\n        print(0)\n    else:\n        (A, B) = (A.zfill(max(len(A), len(B))), B.zfill(max(len(A), len(B))))\n        for (i, j) in zip(A[::-1], B[::-1]):\n            if i == j:\n                if i == '1':\n                    (flag, count) = (1, 1)\n                elif i == '0' and j == '0':\n                    (count, flag) = (0, 0)\n            elif flag == 1:\n                count += 1\n            res = max(res, count + 1)\n        print(res)", "for _ in range(int(input())):\n    A = str(input())\n    B = str(input())\n    count = 0\n    res = 1\n    if int(B) == 0:\n        print(0)\n        continue\n    else:\n        if len(A) != len(B):\n            (A, B) = (A.zfill(max(len(A), len(B))), B.zfill(max(len(A), len(B))))\n        flag = 0\n        for (i, j) in zip(A[::-1], B[::-1]):\n            if i == j:\n                if i == '1':\n                    flag = 1\n                    count = 1\n                elif i == '0' and j == '0':\n                    count = 0\n                    flag = 0\n            elif flag == 1:\n                count += 1\n            c = count + 1\n            res = max(res, c)\n        print(res)", "def make_eqlength(A, B):\n    if len(A) < len(B):\n        while len(A) < len(B):\n            A = '0' + A\n    else:\n        while len(B) < len(A):\n            B = '0' + B\n    return (A, B)\nt = int(input())\nwhile t > 0:\n    A = str(input())\n    B = str(input())\n    count = 0\n    res = 1\n    if int(B) == 0:\n        print(0)\n        t -= 1\n        continue\n    else:\n        if len(A) != len(B):\n            (A, B) = (A.zfill(max(len(A), len(B))), B.zfill(max(len(A), len(B))))\n        flag = 0\n        for (i, j) in zip(A[::-1], B[::-1]):\n            if i == j:\n                if i == '1':\n                    flag = 1\n                    count = 1\n                elif i == '0' and j == '0':\n                    count = 0\n                    flag = 0\n            elif flag == 1:\n                count += 1\n            c = count + 1\n            res = max(res, c)\n        print(res)\n        t -= 1", "def make_eqlength(A, B):\n    if len(A) < len(B):\n        while len(A) < len(B):\n            A = '0' + A\n    else:\n        while len(B) < len(A):\n            B = '0' + B\n    return (A, B)\nt = int(input())\nwhile t > 0:\n    A = input()\n    B = input()\n    count = 0\n    res = 1\n    if int(B) == 0:\n        print(0)\n        t -= 1\n        continue\n    else:\n        if len(A) != len(B):\n            (A, B) = make_eqlength(A, B)\n        flag = 0\n        for (i, j) in zip(A[::-1], B[::-1]):\n            if i == j:\n                if i == '1':\n                    flag = 1\n                    count = 1\n                elif i == '0' and j == '0':\n                    count = 0\n                    flag = 0\n            elif flag == 1:\n                count += 1\n            c = count + 1\n            res = max(res, c)\n        print(res)\n        t -= 1", "def make_eqlength(A, B):\n    if len(A) < len(B):\n        while len(A) < len(B):\n            A = '0' + A\n    else:\n        while len(B) < len(A):\n            B = '0' + B\n    return (A, B)\nt = int(input())\nwhile t > 0:\n    A = input()\n    B = input()\n    count = 0\n    res = 1\n    if int(B) == 0:\n        print(0)\n        t -= 1\n        continue\n    else:\n        if len(A) != len(B):\n            (A, B) = make_eqlength(A, B)\n        flag = 0\n        for (i, j) in zip(A[::-1], B[::-1]):\n            if i == j:\n                if i == '1':\n                    flag = 1\n                    count = 1\n                elif i == '0' and j == '0':\n                    count = 0\n                    flag = 0\n            elif flag == 1:\n                count += 1\n            c = count + 1\n            res = max(res, c)\n        print(res)\n        t -= 1", "def add(A, B):\n    cnt = 0\n    while B > 0:\n        cnt += 1\n        U = A ^ B\n        B = (A & B) << 1\n        A = U\n    print(cnt)\n\ndef newfun(A, B):\n    if len(A) > len(B):\n        diff = len(A) - len(B)\n        B = '0' * diff + B\n    elif len(B) > len(A):\n        diff = len(B) - len(A)\n        A = '0' * diff + A\n    l = len(A)\n    A = A[::-1] + '0'\n    B = B[::-1] + '0'\n    ans = 0\n    for i in range(l):\n        temp = 1\n        if A[i] == '1' and B[i] == '1':\n            indx = 1\n            while A[i + indx] != B[i + indx]:\n                indx += 1\n            temp += indx - 1\n            if temp > ans:\n                ans = temp\n    print(ans + 1)\nfor t in range(int(input())):\n    A = input()\n    B = input()\n    if B == '0':\n        print('0')\n    elif len(B) < 501 or len(A) < 501:\n        A = int(A, 2)\n        B = int(B, 2)\n        add(A, B)\n    else:\n        newfun(A, B)", "def add(A, B):\n    cnt = 0\n    while B > 0:\n        cnt += 1\n        U = A ^ B\n        B = (A & B) << 1\n        A = U\n    print(cnt)\n\ndef newfun(A, B):\n    if len(A) > len(B):\n        diff = len(A) - len(B)\n        B = '0' * diff + B\n    elif len(B) > len(A):\n        diff = len(B) - len(A)\n        A = '0' * diff + A\n    l = len(A)\n    A = A[::-1] + '0'\n    B = B[::-1] + '0'\n    ans = 0\n    for i in range(l):\n        temp = 1\n        if A[i] == '1' and B[i] == '1':\n            indx = 1\n            while True:\n                if A[i + indx] != B[i + indx]:\n                    indx += 1\n                else:\n                    temp += indx - 1\n                    break\n            if temp > ans:\n                ans = temp\n    print(ans + 1)\nfor t in range(int(input())):\n    A = input()\n    B = input()\n    if B == '0':\n        print('0')\n    elif len(B) < 501 or len(A) < 501:\n        A = int(A, 2)\n        B = int(B, 2)\n        add(A, B)\n    else:\n        newfun(A, B)", "import random\n\ndef optimalAns(a, b):\n    a = list(a)\n    b = list(b)\n    count0 = 0\n    for i in range(len(b)):\n        if b[i] == '0':\n            count0 += 1\n    if count0 == len(b):\n        return 0\n    count = 0\n    for i in range(len(a)):\n        if a[i] == '0':\n            count += 1\n    if count == len(a):\n        return 1\n    if len(a) > len(b):\n        temp = list(['0'] * (len(a) - len(b))) + list(b)\n        b = temp\n    elif len(b) > len(a):\n        temp = ['0'] * (len(b) - len(a)) + list(a)\n        a = temp\n    carry = 0\n    max_carry = 0\n    inCount = False\n    for i in range(len(a) - 1, -1, -1):\n        if a[i] == b[i] == '1':\n            inCount = True\n            carry = 1\n            max_carry = max(max_carry, carry)\n        elif inCount == True and (a[i] == '1' and b[i] == '0' or (a[i] == '0' and b[i] == '1')):\n            carry += 1\n            max_carry = max(max_carry, carry)\n        else:\n            inCount = False\n            max_carry = max(max_carry, carry)\n            carry = 0\n    return max_carry + 1\nfor _ in range(int(input())):\n    str1 = str(input())\n    str2 = str(input())\n    print(optimalAns(str1, str2))", "T = int(input())\nwhile T:\n    A = input()\n    B = input()\n    if B == '0':\n        print(0)\n    else:\n        if len(A) < len(B):\n            add = ''\n            for i in range(len(B) - len(A)):\n                add += '0'\n            A = add + A\n        elif len(B) < len(A):\n            add = ''\n            for i in range(len(A) - len(B)):\n                add += '0'\n            B = add + B\n        maxval = 0\n        curval = 0\n        for i in range(len(A) - 1, -1, -1):\n            if A[i] == '0' and B[i] == '0':\n                curval = 0\n            elif A[i] == '1' and B[i] == '1':\n                curval = 1\n            elif curval > 0:\n                curval += 1\n            maxval = max(curval, maxval)\n        print(maxval + 1)\n    T -= 1", "t = int(input())\nwhile t != 0:\n    a = input()\n    b = input()\n    t -= 1\n    if int(b, 2) == 0:\n        print(0)\n    elif int(a, 2) == 0 or int(a, 2) & int(b, 2) == 0:\n        print(1)\n    else:\n        a = '0' * (len(b) - len(a)) + a\n        b = '0' * (len(a) - len(b)) + b\n        b1 = len(b)\n        count = 0\n        c2 = 0\n        flag = 0\n        for i in range(b1 - 1, -1, -1):\n            ai = int(a[i])\n            bi = int(b[i])\n            if flag == 1:\n                if ai ^ bi == 1:\n                    count += 1\n                else:\n                    flag = 0\n                    count = 0\n            if ai & bi == 1:\n                flag = 1\n            c2 = max(c2, count)\n        print(c2 + 2)", "t = int(input())\nwhile t != 0:\n    a = input()\n    b = input()\n    t -= 1\n    if int(b, 2) == 0:\n        print(0)\n    elif int(a, 2) == 0 or int(a, 2) & int(b, 2) == 0:\n        print(1)\n    else:\n        a = '0' * (len(b) - len(a)) + a\n        b = '0' * (len(a) - len(b)) + b\n        count = 0\n        c2 = 0\n        flag = 0\n        for i in range(len(b) - 1, -1, -1):\n            ai = int(a[i])\n            bi = int(b[i])\n            if flag == 1:\n                if ai ^ bi == 1:\n                    count += 1\n                else:\n                    flag = 0\n                    count = 0\n            if ai & bi == 1:\n                flag = 1\n            c2 = max(c2, count)\n        print(c2 + 2)", "t = int(input())\nwhile t != 0:\n    a = input()\n    b = input()\n    t -= 1\n    if int(b, 2) == 0:\n        print(0)\n    elif int(a, 2) == 0 or int(a, 2) & int(b, 2) == 0:\n        print(1)\n    else:\n        a = '0' * (len(b) - len(a)) + a\n        b = '0' * (len(a) - len(b)) + b\n        count = 0\n        c2 = 0\n        flag = 0\n        for i in range(len(b) - 1, -1, -1):\n            ai = int(a[i])\n            bi = int(b[i])\n            if flag == 1:\n                if ai ^ bi == 1:\n                    count += 1\n                else:\n                    flag = 0\n                    count = 0\n            if ai & bi == 1:\n                flag = 1\n            c2 = max(c2, count)\n        print(c2 + 2)", "t = int(input())\nwhile t != 0:\n    a = input()\n    b = input()\n    t -= 1\n    big = 0\n    if int(b, 2) == 0:\n        big = big - 2\n    elif int(a, 2) == 0 or int(a, 2) & int(b, 2) == 0:\n        big = big - 1\n    else:\n        if len(b) > len(a):\n            a = '0' * (len(b) - len(a)) + a\n        elif len(a) > len(b):\n            b = '0' * (len(a) - len(b)) + b\n        count = 0\n        flag = 0\n        for i in range(len(a) - 1, -1, -1):\n            ai = int(a[i])\n            bi = int(b[i])\n            if flag == 1:\n                if ai ^ bi == 1:\n                    count += 1\n                else:\n                    flag = 0\n                    count = 0\n            if count > big:\n                big = count\n            if ai & bi == 1:\n                flag = 1\n    print(big + 2)", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    if '1' not in b:\n        print(0)\n    elif '1' not in a:\n        print(1)\n    else:\n        n = max(len(a), len(b))\n        a = a.zfill(n)\n        b = b.zfill(n)\n        count = 1\n        for i in range(n):\n            if a[i] == '1' and b[i] == '1':\n                c = 2\n                for j in range(i - 1, -1, -1):\n                    if a[j] != b[j]:\n                        c += 1\n                    else:\n                        break\n                count = max(c, count)\n        print(count)", "turn = int(input())\nfor _ in range(turn):\n    flag = 0\n    c = 0\n    max = -1\n    a = input()\n    b = input()\n    l = len(a) if len(a) > len(b) else len(b)\n    a = a.zfill(l)\n    b = b.zfill(l)\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    for i in range(len(a), 0, -1):\n        if a[i - 1] == '1' and b[i - 1] == '1':\n            flag = 1\n            if max < c:\n                max = c\n            c = 0\n        elif (a[i - 1] == '1' and b[i - 1] == '0' or (a[i - 1] == '0' and b[i - 1] == '1')) and flag != 0:\n            c += 1\n            if max < c:\n                max = c\n        elif a[i - 1] == '0' and b[i - 1] == '0':\n            flag = 0\n    if max == -1:\n        print(1)\n    else:\n        print(max + 2)", "turn = int(input())\nfor _ in range(turn):\n    flag = 0\n    c = 0\n    max = -1\n    a = input()\n    b = input()\n    l = len(a) if len(a) > len(b) else len(b)\n    a = a.zfill(l)\n    b = b.zfill(l)\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    m = len(a) - len(b)\n    for i in range(len(a), 0, -1):\n        if a[i - 1] == '1' and b[i - 1] == '1':\n            flag = 1\n            if max < c:\n                max = c\n            c = 0\n        elif (a[i - 1] == '1' and b[i - 1] == '0' or (a[i - 1] == '0' and b[i - 1] == '1')) and flag != 0:\n            c += 1\n            if max < c:\n                max = c\n        elif a[i - 1] == '0' and b[i - 1] == '0':\n            flag = 0\n    if max == -1:\n        print(1)\n    else:\n        print(max + 2)", "for i in range(int(input())):\n    C = '0'\n    A = input()\n    B = input()\n    if len(A) < len(B):\n        B = C + B\n        C *= len(B) - len(A)\n        A = C + A\n    elif len(B) < len(A):\n        A = C + A\n        C *= len(A) - len(B)\n        B = C + B\n    else:\n        A = C + A\n        B = C + B\n    a = 0\n    dat = []\n    b = 0\n    if '1' not in B:\n        print(0)\n    elif '1' not in A:\n        print(1)\n    else:\n        for i in range(1, len(A) + 1):\n            if A[-i] != B[-i] and a != 0:\n                b += 1\n            elif A[-i] == B[-i] and a != 0:\n                if A[-i] == '0':\n                    a = 0\n                else:\n                    a = 1\n                dat.append(b + 1)\n                b = 1\n            elif A[-i] == B[-i] and A[-i] == '1' and (a == 0):\n                a = 1\n                b = 1\n        if len(dat) > 0:\n            print(max(dat))\n        else:\n            print(1)", "def fn2(a, b):\n    print('-' * 30)\n    ct = 0\n    while b > 0:\n        ct += 1\n        lenMax = max(len(bin(a)[2:]), len(bin(b)[2:]))\n        lena = len(bin(a)[2:])\n        lenb = len(bin(b)[2:])\n        print('0' * (lenMax - lena) + bin(a)[2:], '\\n' + '0' * (lenMax - lenb) + bin(b)[2:], '\\n')\n        u = a ^ b\n        b = (a & b) << 1\n        a = u\n    lenMax = max(len(bin(a)[2:]), len(bin(b)[2:]))\n    lena = len(bin(a)[2:])\n    lenb = len(bin(b)[2:])\n    print('0' * (lenMax - lena) + bin(a)[2:], '\\n' + '0' * (lenMax - lenb) + bin(b)[2:], '\\n')\n    return ct\n\ndef go2():\n    for tt in range(int(input())):\n        a = int(input(), 2)\n        b = int(input(), 2)\n        x = fn3(a, b)\n        print(x)\n\ndef fn3(a, b):\n    if b == 0:\n        return 0\n    elif a == 0:\n        return 1\n    lenMax = max(len(bin(a)[2:]), len(bin(b)[2:]))\n    lena = len(bin(a)[2:])\n    lenb = len(bin(b)[2:])\n    a = '0' * (lenMax - lena) + bin(a)[2:]\n    b = '0' * (lenMax - lenb) + bin(b)[2:]\n    a = list(a)\n    b = list(b)\n    x = []\n    for i in range(lenMax):\n        x.append(int(a[i]) + int(b[i]))\n    maxc = 1\n    u = lenMax\n    while u > 0:\n        u -= 1\n        if x[u] == 2:\n            c = 2\n            while u > 0:\n                u -= 1\n                if x[u] == 1:\n                    c += 1\n                else:\n                    u += 1\n                    break\n            if c > maxc:\n                maxc = c\n    return maxc\ngo2()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    a = input().strip()\n    b = input().strip()\n    a = a[::-1]\n    b = b[::-1]\n    if b == '0':\n        value = 0\n    else:\n        while len(a) < len(b):\n            a += '0'\n        while len(b) < len(a):\n            b += '0'\n        carry = 0\n        cnt = 0\n        value = 0\n        for i in range(len(a)):\n            cmp = carry + int(a[i]) + int(b[i])\n            if cmp == 2:\n                cnt += 1\n                carry = 1\n            elif cmp == 3:\n                cnt = 1\n                carry = 1\n            else:\n                cnt = 0\n                carry = 0\n            if cnt > value:\n                value = cnt\n        value += 1\n    print(int(value))", "def alt_add(A, B):\n    C = int(A, 2)\n    D = int(B, 2)\n    if D == 0:\n        return 0\n    x = C & D\n    y = C ^ D\n    p = len(A)\n    q = len(B)\n    maxi = q\n    if p > q:\n        maxi = p\n    x = bin(x)[2:].zfill(maxi)\n    y = bin(y)[2:].zfill(maxi)\n    maxi = 0\n    max_till = 0\n    for i in range(len(y)):\n        if y[i] == '1' and x[i] == '0':\n            maxi = maxi + 1\n        elif y[i] == '0' and x[i] == '0':\n            maxi = 0\n        elif y[i] == '0' and x[i] == '1':\n            max_till = max(max_till, maxi)\n            maxi = 0\n    if max_till == 0 and x.count('1') > 0:\n        return 2\n    elif max_till == 0 and x.count('1') == 0:\n        return 1\n    else:\n        return max_till + 2\nT = int(input())\nfor t in range(T):\n    A = input().strip()\n    B = input().strip()\n    print(alt_add(A, B))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    a = input()\n    b = input()\n    k = int(b, 2)\n    if k == 0:\n        print(0)\n        continue\n    c = ''\n    if len(a) > len(b):\n        b = c.zfill(len(a) - len(b)) + b\n    else:\n        a = c.zfill(len(b) - len(a)) + a\n    mx = 1\n    i = len(a) - 1\n    while i >= 0:\n        s = -1\n        if a[i] == '1' and b[i] == '1':\n            s = i\n            j = i - 1\n            e = -1\n            while j >= 0:\n                if a[j] == '1' and b[j] == '1' or (a[j] == '0' and b[j] == '0'):\n                    e = j\n                    break\n                j -= 1\n            i = j\n            if s - e + 1 > mx:\n                mx = s - e + 1\n        else:\n            i -= 1\n    j = 0\n    if s > -1 and e == -1:\n        e = j - 1\n        if s - e + 1 > mx:\n            mx = s - e + 1\n    print(mx)", "def add(a, b):\n    count = 0\n    u = 0\n    v = 0\n    while b > 0:\n        u = a ^ b\n        v = (a & b) * 2\n        a = u\n        b = v\n        count = count + 1\n    return count\n\ndef simple(a, b):\n    an = int(a, 2)\n    bn = int(b, 2)\n    print(add(an, bn))\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    a = input()\n    b = input()\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    if int(a, 2) == 0:\n        print(1)\n        continue\n    ashort = True\n    if len(a) < len(b):\n        ashort = True\n    else:\n        ashort = False\n    if ashort == True:\n        a = '0' * abs(len(a) - len(b)) + a\n    else:\n        b = '0' * abs(len(a) - len(b)) + b\n    if len(a) < 90000:\n        simple(a, b)\n        continue\n    oneone = False\n    maxi = 0\n    ans = 0\n    for i in range(len(a) - 1, -1, -1):\n        if a[i] == '1' and b[i] == '1' or (a[i] == '0' and b[i] == '0'):\n            oneone = True\n            ans = max(ans, maxi)\n            maxi = 0\n        if oneone == True:\n            if a[i] == '0' and b[i] == '1' or (a[i] == '1' and b[i] == '0'):\n                maxi = maxi + 1\n    print(ans + 2)", "def main(debug=False):\n    for _ in range(int(input())):\n        a = input().strip()\n        b = input().strip()\n        a = a[::-1]\n        b = b[::-1]\n        while len(a) < len(b):\n            a += '0'\n        while len(b) < len(a):\n            b += '0'\n        if debug:\n            print(a, b)\n        (carry, ans, cur) = (0, 0, 0)\n        for i in range(len(a)):\n            carry = carry + int(a[i]) + int(b[i])\n            if debug:\n                print('For i=', i, 'a[i] b[i]', a[i], b[i])\n            if carry == 2:\n                cur += 1\n            else:\n                cur = carry // 2\n            if debug:\n                print('carry', carry)\n                print('Curr', cur)\n            carry = int(carry / 2)\n            ans = max(ans, cur + 1)\n            if debug:\n                print('Ans', ans)\n        if b.count('1') > 0:\n            print(ans)\n        else:\n            print(0)\nwhile True:\n    try:\n        main(debug=False)\n    except (ValueError, EOFError) as e:\n        break", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    al = []\n    suma = 0\n    bl = []\n    sumb = 0\n    for i in range(len(a)):\n        c = int(a[len(a) - i - 1])\n        al.append(c)\n        suma += c\n    for i in range(len(b)):\n        c = int(b[len(b) - i - 1])\n        bl.append(c)\n        sumb += c\n    if sumb == 0:\n        steps = 0\n    elif suma == 0:\n        steps = 1\n    else:\n        max = 1\n        if len(al) > len(bl):\n            for i in range(len(al) - len(bl)):\n                bl.append(0)\n        else:\n            for i in range(len(bl) - len(al)):\n                al.append(0)\n        for i in range(len(al)):\n            if al[i] == 1 and bl[i] == 1:\n                count = 2\n                i += 1\n                while i < len(al):\n                    if al[i] ^ bl[i] == 1:\n                        count += 1\n                        i += 1\n                    else:\n                        break\n                if count > max:\n                    max = count\n        steps = max\n    print(str(steps))", "for t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = ('0', 1, 1)\n    for i in range(1, l + 1):\n        if p == '1':\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 1\n        else:\n            c = 1\n        p = (lambda : '0', lambda : '1')[(a[-i] + b[-i] + p).count('1') > 1]()\n    print(ans)", "for t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = ('0', 1, 1)\n    for i in range(1, l + 1):\n        if p == '1':\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 1\n        else:\n            c = 1\n        p = ('0', '1')[(a[-i] + b[-i] + p).count('1') > 1]\n    print(ans)", "for t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = ('0', 1, 1)\n    for i in range(1, l + 1):\n        if p == '1':\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 1\n        else:\n            c = 1\n        p = '1' if (a[-i] + b[-i] + p).count('1') >> 1 else '0'\n    print(ans)", "for t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = ('0', 1, 1)\n    for i in range(1, l + 1):\n        if p == '1':\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 1\n        else:\n            c = 1\n        p = '1' if (a[-i] + b[-i] + p).count('1') >> 1 else '0'\n    print(ans)", "for t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = ('0', 1, 1)\n    for i in range(1, l + 1):\n        if p == '1':\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 1\n        else:\n            c = 1\n        p = '1' if (a[-i] + b[-i] + p).count('1') > 1 else '0'\n    print(ans)", "for t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = ('0', 0, 0)\n    for i in range(1, l + 1):\n        if p == '1':\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 0\n        else:\n            c = 0\n        p = '1' if (a[-i] + b[-i] + p).count('1') > 1 else '0'\n    print(ans + 1)", "cf = lambda s: '1' if s.count('1') >> 1 else '0'\nfor t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = ('0', 0, 0)\n    for i in range(1, l + 1):\n        if p == '1':\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 0\n        else:\n            c = 0\n        p = cf(a[-i] + b[-i] + p)\n    print(ans + 1)", "cf = lambda s: s.count('1') >> 1\nfor t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = (0, 0, 0)\n    for i in range(1, l + 1):\n        if p == 1:\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 0\n        else:\n            c = 0\n        p = cf(a[-i] + b[-i] + str(p))\n    print(ans + 1)", "cf = lambda s: s.count('1') >> 1\nfor t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = (0, 0, 0)\n    for i in range(1, l + 1):\n        if p == 1:\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 0\n        else:\n            c = 0\n        p = cf(a[-i] + b[-i] + f'{p}')\n    print(ans + 1)", "cf = lambda s: '1' if s.count('1') >> 1 else '0'\nfor t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = ('0', 0, 0)\n    for i in range(1, l + 1):\n        if p == '1':\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 0\n        else:\n            c = 0\n        p = cf(a[-i] + b[-i] + p)\n    print(ans + 1)", "cf = lambda s: '1' if s.count('1') > 1 else '0'\nfor t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = ('0', 0, 0)\n    for i in range(1, l + 1):\n        if p == '1':\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 0\n        else:\n            c = 0\n        p = cf(a[-i] + b[-i] + p)\n    print(ans + 1)", "for t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = ('0', 0, 0)\n    for i in range(1, l + 1):\n        if p == '1':\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 0\n        else:\n            c = 0\n        p = '1' if (a[-i] + b[-i] + p).count('1') > 1 else '0'\n    print(ans + 1)", "cf = lambda s: str(s.count('1') >> 1)\nfor t in range(int(input())):\n    (a, b) = (input(), input())\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    l = max(len(a), len(b)) + 1\n    (a, b) = (a.rjust(l, '0'), b.rjust(l, '0'))\n    (p, ans, c) = ('0', 0, 0)\n    for i in range(1, l + 1):\n        if p == '1':\n            c += 1\n            ans = max(ans, c)\n            if a[-i] == b[-i]:\n                c = 0\n        else:\n            c = 0\n        p = cf(a[-i] + b[-i] + p)\n    print(ans + 1)", "import atexit\nimport io\nimport sys\nfrom collections import defaultdict\nfor t in range(0, int(input())):\n    a = input()\n    b = input()\n    if b == '0':\n        print(0)\n    elif b != '0':\n        if len(b) > len(a):\n            d = len(b) - len(a)\n            for i in range(d):\n                a = '0' + a\n        elif len(a) > len(b):\n            d = len(a) - len(b)\n            for i in range(d):\n                b = '0' + b\n        a = '0' + a\n        b = '0' + b\n        la = len(a) - 1\n        mx = 0\n        a = ''.join(reversed(a))\n        b = ''.join(reversed(b))\n        for i in range(la):\n            A = 1\n            if a[i] == '1' and b[i] == '1':\n                check = 1\n                while True:\n                    if a[check + i] != b[check + i]:\n                        A += 1\n                    else:\n                        break\n                    check += 1\n                if mx < A:\n                    mx = A\n        print(mx + 1)", "TESTCASES = int(input())\nfor i in range(0, TESTCASES):\n    A = input().strip()[::-1]\n    B = input().strip()[::-1]\n    if '1' not in B:\n        print('0')\n        continue\n    while len(A) < len(B):\n        A += '0'\n    while len(B) < len(A):\n        B += '0'\n    LL = 1\n    CC = False\n    JJ = 0\n    for i in range(0, len(A)):\n        ACC = A[i] == '1'\n        BCC = B[i] == '1'\n        if ACC and BCC:\n            CC = True\n            JJ = 2\n            LL = max(LL, JJ)\n        elif ACC ^ BCC and CC:\n            JJ += 1\n            LL = max(LL, JJ)\n        else:\n            CC = False\n    print(LL)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    x = int(a, 2)\n    y = int(b, 2)\n    if y == 0:\n        print(0)\n    elif x == 0 and y != 0:\n        print(1)\n    else:\n        ans = 0\n        count = 1\n        f = 0\n        if len(a) < len(b):\n            d = len(b) - len(a)\n            a = a.zfill(d + 1 + len(a))\n            b = b.zfill(1 + len(b))\n            n = len(a)\n            for i in range(n - 1, -1, -1):\n                if a[i] == '1' and b[i] == '1':\n                    if f == 1:\n                        ans = max(ans, count)\n                        count = 1\n                    else:\n                        f = 1\n                if a[i] == '0' and b[i] == '0':\n                    if f == 1:\n                        ans = max(ans, count)\n                        count = 1\n                        f = 0\n                if f == 1:\n                    if a[i] != b[i]:\n                        count += 1\n                        ans = max(ans, count)\n        elif len(a) > len(b):\n            d = len(a) - len(b)\n            a = a.zfill(1 + len(a))\n            b = b.zfill(d + 1 + len(b))\n            n = len(a)\n            for i in range(n - 1, -1, -1):\n                if a[i] == '1' and b[i] == '1':\n                    if f == 1:\n                        ans = max(ans, count)\n                        count = 1\n                    else:\n                        f = 1\n                if a[i] == '0' and b[i] == '0':\n                    if f == 1:\n                        ans = max(ans, count)\n                        count = 1\n                        f = 0\n                if f == 1:\n                    if a[i] != b[i]:\n                        count += 1\n                        ans = max(ans, count)\n        elif len(a) == len(b):\n            a = a.zfill(1 + len(a))\n            b = b.zfill(1 + len(b))\n            n = len(a)\n            for i in range(n - 1, -1, -1):\n                if a[i] == '1' and b[i] == '1':\n                    if f == 1:\n                        ans = max(ans, count)\n                        count = 1\n                    else:\n                        f = 1\n                if a[i] == '0' and b[i] == '0':\n                    if f == 1:\n                        ans = max(ans, count)\n                        count = 1\n                        f = 0\n                if f == 1:\n                    if a[i] != b[i]:\n                        count += 1\n                        ans = max(ans, count)\n        print(ans + 1)", "def solve(X, Y):\n    if Y == '0':\n        return 0\n    n = max(len(X), len(Y))\n    c = ''\n    for i in range(abs(len(X) - len(Y))):\n        c += '0'\n    if len(X) < len(Y):\n        X = c + X\n    else:\n        Y = c + Y\n    ans = 1\n    for i in range(n - 1, -1, -1):\n        if X[i] == '1' and Y[i] == '1':\n            cur = 2\n            j = i - 1\n            while j >= 0 and X[j] != Y[j]:\n                j -= 1\n                cur += 1\n            ans = max(ans, cur)\n    return ans\nfor _ in range(int(input())):\n    X = input()\n    Y = input()\n    ans = solve(X, Y)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    a = input()\n    b = input()\n    a_ = []\n    b_ = []\n    if len(a) > len(b):\n        c = 0\n        while len(b) + c != len(a):\n            b_.append('0')\n            c += 1\n    elif len(a) < len(b):\n        d = 0\n        while len(a) + d != len(b):\n            a_.append('0')\n            d += 1\n    for i in a:\n        a_.append(i)\n    for i in b:\n        b_.append(i)\n    pair = []\n    for i in range(len(a_)):\n        d = (a_[i], b_[i])\n        pair.append(d)\n    pair.reverse()\n    pair_rev = pair\n    if int(b) == 0:\n        print(0)\n    else:\n        l = 0\n        for i in range(len(pair_rev)):\n            if pair_rev[i][0] == '1' and pair_rev[i][1] == '1':\n                c = 1\n                j = i + 1\n                while j < len(pair_rev) and (pair_rev[j][0] == '1' and pair_rev[j][1] == '0' or (pair_rev[j][0] == '0' and pair_rev[j][1] == '1')):\n                    c += 1\n                    j += 1\n                if l < c:\n                    l = c\n        print(l + 1)", "t = int(input())\nfor i in range(t):\n    a = input()\n    b = input()\n    a_ = []\n    b_ = []\n    if len(a) > len(b):\n        c = 0\n        while len(b) + c != len(a):\n            b_.append('0')\n            c += 1\n    elif len(a) < len(b):\n        d = 0\n        while len(a) + d != len(b):\n            a_.append('0')\n            d += 1\n    for i in a:\n        a_.append(i)\n    for i in b:\n        b_.append(i)\n    pair = []\n    for i in range(len(a_)):\n        d = (a_[i], b_[i])\n        pair.append(d)\n    pair.reverse()\n    pair_rev = pair\n    if int(b) == 0:\n        print(0)\n    else:\n        l = 0\n        for i in range(len(pair_rev)):\n            if pair_rev[i][0] == '1' and pair_rev[i][1] == '1':\n                c = 1\n                j = i + 1\n                while j < len(pair_rev) and (pair_rev[j][0] == '1' and pair_rev[j][1] == '0' or (pair_rev[j][0] == '0' and pair_rev[j][1] == '1')):\n                    c += 1\n                    j += 1\n                if l < c:\n                    l = c\n        print(l + 1)", "for _ in range(int(input())):\n    a = input().strip()\n    b = input().strip()\n    if len(a) < len(b):\n        a = '0' * (len(b) - len(a)) + a\n    a = list(a)\n    b_ones = []\n    for i in range(len(b)):\n        if b[i] == '1':\n            b_ones.append(len(b) - i)\n    iter = 0\n    while len(b_ones) != 0:\n        new_bones = []\n        for bit in b_ones:\n            aind = len(a) - bit - iter\n            if aind >= 0:\n                if a[aind] == '1':\n                    a[aind] = ('0', new_bones.append(bit))\n                else:\n                    a[aind] = '1'\n        b_ones = new_bones\n        iter += 1\n    print(iter)", "tc = int(input())\nfor i in range(tc):\n    a = input()\n    b = input()\n    l = 0\n    l1 = len(a)\n    l2 = len(b)\n    if l1 > l2:\n        l = l1\n    else:\n        l = l2\n    a = a.zfill(l)\n    b = b.zfill(l)\n    temp = int(b, 2)\n    if temp == 0:\n        print(0)\n    else:\n        maxc = 0\n        count = 0\n        for i in range(l):\n            if a[i] == '1' and b[i] == '1':\n                count += 1\n                maxc = max(count + 1, maxc)\n                count = 0\n            elif a[i] == '1' or b[i] == '1':\n                count += 1\n            else:\n                count = 0\n        if maxc == 0:\n            print(1)\n        else:\n            print(maxc)", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    cnt = 0\n    a = a[::-1]\n    b = b[::-1]\n    if b == '0':\n        print('0\\n')\n    elif a == '0':\n        print('1\\n')\n    else:\n        while len(a) < len(b):\n            a = a + '0'\n        while len(b) < len(a):\n            b = b + '0'\n        a = a[::-1]\n        b = b[::-1]\n        (cnt, curr, maxi) = (1, -1, 0)\n        for j in reversed(range(len(a))):\n            if a[j] == b[j] == '1':\n                curr = j\n                cnt = 1\n                maxi = max(maxi, cnt)\n            elif curr > -1 and (a[j] == '0' and b[j] == '1' or (a[j] == '1' and b[j] == '0')):\n                cnt += 1\n                maxi = max(maxi, cnt)\n            elif a[j] == b[j] == '0':\n                curr = -1\n        print(maxi + 1, '\\n')", "t = input()\nfor _ in range(int(t)):\n    a = input()\n    b = input()\n    carry = 0\n    car_range = 0\n    car_start = -1\n    if int(b) == 0:\n        print(0)\n        continue\n    c = a if len(a) > len(b) else b\n    o = b if len(a) > len(b) else a\n    c = c[::-1]\n    o = o[::-1]\n    for (i, x) in enumerate(c):\n        y = 0\n        if len(o) > i:\n            y = o[i]\n        if int(x) + int(y) == 1 and carry == 1:\n            carry = 1\n        elif int(x) + int(y) == 2 and carry == 0:\n            carry = 1\n        elif int(x) + int(y) == 2 and carry == 1:\n            car_range = max(car_range, int(i) - int(car_start) + 1)\n            car_start = i\n            carry = 1\n        else:\n            carry = 0\n        if carry > 0:\n            if car_start == -1:\n                car_start = i\n        elif car_start != -1:\n            car_range = max(car_range, int(i) - int(car_start) + 1)\n            car_start = -1\n    if carry > 0:\n        car_range = max(car_range, int(len(c) - 1 + carry) - int(car_start) + 1)\n    if car_range == 0:\n        car_range = 1\n    print(car_range)", "t = input()\nfor _ in range(int(t)):\n    a = input()\n    b = input()\n    carry = 0\n    car_range = 0\n    car_start = -1\n    if int(b) == 0:\n        print(0)\n        continue\n    c = a if len(a) > len(b) else b\n    o = b if len(a) > len(b) else a\n    c = c[::-1]\n    o = o[::-1]\n    for (i, x) in enumerate(c):\n        y = 0\n        if len(o) > i:\n            y = o[i]\n        if int(x) + int(y) == 1 and carry == 1:\n            carry = 1\n        elif int(x) + int(y) == 2 and carry == 0:\n            carry = 1\n        elif int(x) + int(y) == 2 and carry == 1:\n            car_range = max(car_range, int(i) - int(car_start) + 1)\n            car_start = i\n            carry = 1\n        else:\n            carry = 0\n        if carry > 0:\n            if car_start == -1:\n                car_start = i\n        elif car_start != -1:\n            car_range = max(car_range, int(i) - int(car_start) + 1)\n            car_start = -1\n    if carry > 0:\n        car_range = max(car_range, int(len(c) - 1 + carry) - int(car_start) + 1)\n    if car_range == 0:\n        car_range = 1\n    print(car_range)", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\nfrom sys import stdin, stdout\nrline = lambda : stdin.readline().strip()\n\ndef solve():\n    global A, B\n    if not '1' in B:\n        return 0\n    diff = len(A) - len(B)\n    if diff > 0:\n        B = '0' * diff + B\n    else:\n        A = '0' * -diff + A\n    s = 1\n    for i in range(len(A) - 1, -1, -1):\n        if A[i] == B[i] == '1':\n            j = i - 1\n            while j >= 0 and A[j] != B[j]:\n                j -= 1\n            s = max(s, i - j + 1)\n    return s\n\ndef read_input():\n    global A, B\n    (A, B) = ('0' + rline(), '0' + rline())\n\ndef write_output(s):\n    stdout.write('\\n'.join(map(str, s)))\n\ndef main():\n    s = []\n    for _ in range(int(input())):\n        read_input()\n        answer = solve()\n        s.append(answer)\n    write_output(s)\nmain()", "__author__ = 'Ronald Kaiser'\n__email__ = 'raios dot catodicos at gmail dot com'\nfrom sys import stdin, stdout\nrline = lambda : stdin.readline().strip()\n\ndef solve():\n    global A, B\n    if not '1' in B:\n        return 0\n    diff = len(A) - len(B)\n    if diff > 0:\n        B = '0' * diff + B\n    else:\n        A = '0' * -diff + A\n    flag = False\n    s = maxi = 0\n    for i in range(len(A) - 1, -1, -1):\n        if A[i] == B[i]:\n            if A[i] == '1':\n                if flag:\n                    maxi = max(s, maxi)\n                    s = 1\n                else:\n                    flag = True\n                    s += 1\n            elif flag:\n                flag = False\n                maxi = max(s, maxi)\n                s = 0\n        elif flag:\n            s += 1\n    return maxi + 1\n\ndef read_input():\n    global A, B\n    (A, B) = ('0' + rline(), '0' + rline())\n\ndef write_output(s):\n    stdout.write('\\n'.join(map(str, s)))\n\ndef main():\n    s = []\n    for _ in range(int(input())):\n        read_input()\n        answer = solve()\n        s.append(answer)\n    write_output(s)\nmain()", "from sys import stdin\nt = int(stdin.readline())\nwhile t:\n    a = stdin.readline().strip()\n    b = stdin.readline().strip()\n    if b == '0':\n        print(0)\n    else:\n        (la, lb) = (len(a), len(b))\n        l = 0\n        if la > lb:\n            b = '0' * (la - lb) + b\n            l = la\n        else:\n            a = '0' * (lb - la) + a\n            l = lb\n        (res, i) = (1, l - 1)\n        while i >= 0:\n            if a[i] == '1' and b[i] == '1':\n                j = i - 1\n                while j >= 0 and a[j] != b[j]:\n                    j -= 1\n                res = max(res, i - j + 1)\n                i = j\n            else:\n                i -= 1\n        print(res)\n    t -= 1", "from sys import stdin\nt = int(stdin.readline())\nwhile t:\n    a = stdin.readline().strip()\n    b = stdin.readline().strip()\n    if b == '0':\n        print(0)\n    else:\n        (la, lb) = (len(a), len(b))\n        l = 0\n        if la > lb:\n            b = '0' * (la - lb) + b\n            l = la\n        else:\n            a = '0' * (lb - la) + a\n            l = lb\n        (res, i) = (1, l - 1)\n        while i >= 0:\n            if a[i] == '1' and b[i] == '1':\n                j = i - 1\n                while j >= 0 and a[j] != b[j]:\n                    j -= 1\n                res = max(res, i - j + 1)\n                i = j\n            else:\n                i -= 1\n        print(res)\n    t -= 1", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    if b == '0':\n        print(0)\n    elif b != '0':\n        if len(b) > len(a):\n            d = len(b) - len(a)\n            for i in range(d):\n                a = '0' + a\n        elif len(a) > len(b):\n            d = len(a) - len(b)\n            for i in range(d):\n                b = '0' + b\n        a = '0' + a\n        b = '0' + b\n        la = len(a) - 1\n        mx = 0\n        a = ''.join(reversed(a))\n        b = ''.join(reversed(b))\n        for i in range(la):\n            A = 1\n            if a[i] == '1' and b[i] == '1':\n                check = 1\n                while True:\n                    if a[check + i] != b[check + i]:\n                        A += 1\n                    else:\n                        break\n                    check += 1\n                if mx < A:\n                    mx = A\n        print(mx + 1)", "for _ in range(int(input())):\n    a = '0' + input()\n    b = '0' + input()\n    n = len(a)\n    m = len(b)\n    if b == '00':\n        print(0)\n        continue\n    elif a == '00':\n        print(1)\n        continue\n    if n < m:\n        a = '0' * (m - n) + a\n    elif n > m:\n        b = '0' * (n - m) + b\n    m = 0\n    for i in range(len(a) - 1, 0, -1):\n        cnt = 1\n        if a[i] == '1' and b[i] == '1':\n            j = -1\n            while True:\n                if a[j + i] != b[j + i]:\n                    cnt += 1\n                else:\n                    break\n                j -= 1\n            if m < cnt:\n                m = cnt\n    print(m + 1)", "t = int(input())\nwhile t > 0:\n    a = input()\n    b = input()\n    l1 = len(a)\n    l2 = len(b)\n    l = 0\n    if l1 > l2:\n        l += l1\n    else:\n        l += l2\n    a = a.zfill(l)\n    b = b.zfill(l)\n    cnt = 0\n    k = 0\n    for i in range(0, l):\n        if a[i] == '1' and b[i] == '1':\n            cnt += 1\n            k = max(cnt, k)\n            cnt = 0\n        elif a[i] == '1' or b[i] == '1':\n            cnt += 1\n        else:\n            cnt = 0\n    b = int(b, 2)\n    if b == 0:\n        print(0)\n    else:\n        print(k + 1)\n    t -= 1", "for t in range(0, int(input())):\n    a = input()\n    b = input()\n    if b == '0':\n        print(0)\n    elif b != '0':\n        if len(b) > len(a):\n            d = len(b) - len(a)\n            for i in range(d):\n                a = '0' + a\n        elif len(a) > len(b):\n            d = len(a) - len(b)\n            for i in range(d):\n                b = '0' + b\n        a = '0' + a\n        b = '0' + b\n        la = len(a) - 1\n        mx = 0\n        a = ''.join(reversed(a))\n        b = ''.join(reversed(b))\n        for i in range(la):\n            A = 1\n            if a[i] == '1' and b[i] == '1':\n                check = 1\n                while True:\n                    if a[check + i] != b[check + i]:\n                        A += 1\n                    else:\n                        break\n                    check += 1\n                if mx < A:\n                    mx = A\n        print(mx + 1)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    a = input().strip()\n    b = input().strip()\n    if len(b) == 1 and b[0] == '0':\n        print(0)\n        continue\n    if len(a) > len(b):\n        b = '0' * (len(a) - len(b)) + b\n    else:\n        a = '0' * (len(b) - len(a)) + a\n    max_l = 0\n    for i in range(len(a)):\n        if b[i] == '1' and a[i] == '1':\n            tmp = i - 1\n            count = 1\n            while tmp >= 0:\n                if b[tmp] == '0' and a[tmp] == '1' or (b[tmp] == '1' and a[tmp] == '0'):\n                    count += 1\n                else:\n                    break\n                tmp -= 1\n            max_l = max(max_l, count + 1)\n    print(max(max_l, 1))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    a = input().strip()\n    b = input().strip()\n    if len(b) == 1 and b[0] == '0':\n        print(0)\n        continue\n    if len(a) > len(b):\n        b = '0' * (len(a) - len(b)) + b\n    else:\n        a = '0' * (len(b) - len(a)) + a\n    max_l = 0\n    for i in range(len(a)):\n        if b[i] == '1' and a[i] == '1':\n            tmp = i - 1\n            count = 1\n            while tmp >= 0:\n                if b[tmp] == '0' and a[tmp] == '1' or (b[tmp] == '1' and a[tmp] == '0'):\n                    count += 1\n                else:\n                    break\n                tmp -= 1\n            max_l = max(max_l, count + 1)\n    print(max(max_l, 1))", "for t in range(0, int(input())):\n    a = input()\n    b = input()\n    if b == '0':\n        print(0)\n    elif b != '0':\n        if len(b) > len(a):\n            d = len(b) - len(a)\n            for i in range(d):\n                a = '0' + a\n        elif len(a) > len(b):\n            d = len(a) - len(b)\n            for i in range(d):\n                b = '0' + b\n        a = '0' + a\n        b = '0' + b\n        la = len(a) - 1\n        mx = 0\n        a = ''.join(reversed(a))\n        b = ''.join(reversed(b))\n        for i in range(la):\n            A = 1\n            if a[i] == '1' and b[i] == '1':\n                check = 1\n                while True:\n                    if a[check + i] != b[check + i]:\n                        A += 1\n                    else:\n                        break\n                    check += 1\n                if mx < A:\n                    mx = A\n        print(mx + 1)", "T = int(input())\nfor i in range(T):\n    A = input()\n    B = input()\n    if B == '0':\n        print('0')\n    else:\n        if len(A) > len(B):\n            B = B.zfill(len(A))\n        else:\n            A = A.zfill(len(B))\n        ans = 1\n        for i in range(len(A) - 1, -1, -1):\n            if A[i] == '1' and B[i] == '1':\n                temp = 2\n                i -= 1\n                while i >= 0:\n                    if A[i] != B[i]:\n                        i -= 1\n                        temp += 1\n                    if A[i] == B[i]:\n                        if A[i] == '1':\n                            i += 1\n                        break\n                ans = max(temp, ans)\n        print(ans)", "import math\nt = int(input())\nfor _ in range(0, t):\n    a = input()\n    b = input()\n    if len(a) < len(b):\n        a = '0' * abs(len(a) - len(b)) + a\n    elif len(b) < len(a):\n        b = '0' * abs(len(a) - len(b)) + b\n    a = '0' + a\n    b = '0' + b\n    if int(b, 2) == 0:\n        print(0)\n        continue\n    i = len(a) - 1\n    j = i\n    maxi = -1\n    ls = [1]\n    cnt = 0\n    while i >= 0:\n        if a[i] == '1' and b[i] == '1':\n            j = i - 1\n            cnt = 1\n            while a[j] == '1' and b[j] == '0' or (a[j] == '0' and b[j] == '1' and (j >= 0)):\n                cnt += 1\n                j -= 1\n            ls.append(cnt + 1)\n            i = j\n        else:\n            i -= 1\n    print(max(ls))", "def test(a, b):\n    if int(b) == 0:\n        return 0\n    l = max(len(a), len(b))\n    st_a = len(a)\n    st_b = len(b)\n    s = '0' * 10 ** 5\n    if st_a > st_b:\n        b = s[:st_a - st_b] + b\n    else:\n        a = s[:st_b - st_a] + a\n    a = a[::-1]\n    b = b[::-1]\n    i = 0\n    ans = 1\n    while i < l:\n        if a[i] == '1' and b[i] == '1':\n            j = i + 1\n            while j < l and a[j] != b[j]:\n                j += 1\n            ans = max(ans, j - i + 1)\n            i = j - 1\n        i += 1\n    return ans\nt = int(input())\nwhile t:\n    t -= 1\n    a = input()\n    b = input()\n    print(test(a, b))", "for t in range(0, int(input())):\n    a = input()\n    b = input()\n    if b == '0':\n        print(0)\n    elif b != '0':\n        if len(b) > len(a):\n            d = len(b) - len(a)\n            for i in range(d):\n                a = '0' + a\n        elif len(a) > len(b):\n            d = len(a) - len(b)\n            for i in range(d):\n                b = '0' + b\n        a = '0' + a\n        b = '0' + b\n        la = len(a) - 1\n        mx = 0\n        a = ''.join(reversed(a))\n        b = ''.join(reversed(b))\n        for i in range(la):\n            A = 1\n            if a[i] == '1' and b[i] == '1':\n                check = 1\n                while True:\n                    if a[check + i] != b[check + i]:\n                        A += 1\n                    else:\n                        break\n                    check += 1\n                if mx < A:\n                    mx = A\n        print(mx + 1)", "def solve(num1, num2):\n    C = int(num1, 2)\n    D = int(num2, 2)\n    x = C & D\n    y = C ^ D\n    p = len(num1)\n    q = len(num2)\n    maxi = 0\n    if p > q:\n        maxi = p\n    else:\n        maxi = q\n    x = bin(x)[2:].zfill(maxi)\n    y = bin(y)[2:].zfill(maxi)\n    maxi = 0\n    max_till = 0\n    if D == 0:\n        return '0'\n    else:\n        for i in range(len(y)):\n            if y[i] == '1' and x[i] == '0':\n                maxi = maxi + 1\n                continue\n            elif y[i] == '0' and x[i] == '0':\n                maxi = 0\n            elif y[i] == '0' and x[i] == '1':\n                max_till = max(max_till, maxi)\n                maxi = 0\n        if max_till == 0 and x.count('1') > 0:\n            return '2'\n        elif max_till == 0 and x.count('1') == 0:\n            return '1'\n        else:\n            return max_till + 2\nt = int(input())\nwhile t != 0:\n    num1 = input()\n    num2 = input()\n    print(solve(num1, num2))\n    t -= 1", "def samelength(n, p, ln, lp):\n    if lp == ln:\n        return (n, p, ln, lp)\n    elif lp > ln:\n        for _ in range(lp - ln):\n            n = '0' + n\n        ln = lp\n    else:\n        for _ in range(ln - lp):\n            p = '0' + p\n        lp = ln\n    return (n, p, ln, lp)\n\ndef addb(a, b, c):\n    if a == b and b == c and (c == '0'):\n        return ('0', '0')\n    elif a == b and b == c and (c == '1'):\n        return ('1', '1')\n    elif a == '0' and b == c and (c == '1'):\n        return ('0', '1')\n    elif a == '0':\n        return ('1', '0')\n    elif a == '1' and b == c and (b == '0'):\n        return ('1', '0')\n    return ('0', '1')\n\ndef coans(n, p):\n    ln = len(n)\n    lp = len(p)\n    (n, p, ln, lp) = samelength(n, p, ln, lp)\n    carry = ['0']\n    ans = 0\n    c0 = 0\n    for i in range(1, ln + 1):\n        (d, f) = addb(carry[-1], n[-i], p[-i])\n        carry.append(f)\n    n = '0' + n\n    p = '0' + p\n    for i in range(1, ln + 2):\n        if carry[i - 1] == '1':\n            c0 += 1\n            if carry[i - 1] == '1' and n[-i] == '1' and (p[-i] == '1'):\n                ans = max(c0, ans)\n                c0 = 0\n            if carry[i - 1] == '1' and n[-i] == '0' and (p[-i] == '0'):\n                ans = max(c0, ans)\n                c0 = 0\n        else:\n            ans = max(c0, ans)\n            c0 = 0\n        ans = max(c0, ans)\n    return ans + 1\nfor _ in range(int(input())):\n    n = input()\n    p = input()\n    dp = int(p, base=2)\n    if dp == 0:\n        print('0')\n    else:\n        print(coans(n, p))", "t = int(input())\nwhile t != 0:\n    A = input()\n    B = input()\n    C = int(A, 2)\n    D = int(B, 2)\n    x = C & D\n    y = C ^ D\n    p = len(A)\n    q = len(B)\n    maxi = 0\n    if p > q:\n        maxi = p\n    else:\n        maxi = q\n    x = bin(x)[2:].zfill(maxi)\n    y = bin(y)[2:].zfill(maxi)\n    maxi = 0\n    max_till = 0\n    if D == 0:\n        print('0')\n    else:\n        for i in range(len(y)):\n            if y[i] == '1' and x[i] == '0':\n                maxi = maxi + 1\n                continue\n            elif y[i] == '0' and x[i] == '0':\n                maxi = 0\n            elif y[i] == '0' and x[i] == '1':\n                max_till = max(max_till, maxi)\n                maxi = 0\n        if max_till == 0 and x.count('1') > 0:\n            print('2')\n        elif max_till == 0 and x.count('1') == 0:\n            print('1')\n        else:\n            print(max_till + 2)\n    t -= 1", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    x = int(a, 2)\n    y = int(b, 2)\n    if y == 0:\n        print(0)\n    elif x == 0 and y != 0:\n        print(1)\n    else:\n        ans = [0]\n        count = 0\n        f = 0\n        if len(a) + len(b) > 100000:\n            if len(a) < len(b):\n                d = len(b) - len(a)\n                a = a.zfill(d + 1 + len(a))\n                b = b.zfill(1 + len(b))\n                for i in range(len(a) - 1, -1, -1):\n                    if a[i] == '1' and b[i] == '1':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                        else:\n                            f = 1\n                    if a[i] == '0' and b[i] == '0':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                    if f == 1:\n                        count += 1\n            if len(a) > len(b):\n                d = len(a) - len(b)\n                a = a.zfill(1 + len(a))\n                b = b.zfill(d + 1 + len(b))\n                for i in range(len(a) - 1, -1, -1):\n                    if a[i] == '1' and b[i] == '1':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                        else:\n                            f = 1\n                    if a[i] == '0' and b[i] == '0':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                    if f == 1:\n                        count += 1\n            if len(a) == len(b):\n                a = a.zfill(1 + len(a))\n                b = b.zfill(1 + len(b))\n                for i in range(len(a) - 1, -1, -1):\n                    if a[i] == '1' and b[i] == '1':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                        else:\n                            f = 1\n                    if a[i] == '0' and b[i] == '0':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                    if f == 1:\n                        count += 1\n            print(max(ans) + 1)\n        else:\n            c = 0\n            sum = x + y\n            while y > 0:\n                U = x ^ y\n                x = U\n                y = sum - x\n                c = c + 1\n            print(c)", "def add(a, b):\n    count = 0\n    u = 0\n    v = 0\n    while b > 0:\n        u = a ^ b\n        v = a & b\n        a = u\n        b = v * 2\n        count = count + 1\n    return count\n\ndef bruteforce(a, b):\n    anum = int(a, 2)\n    bnum = int(b, 2)\n    print(add(anum, bnum))\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    a = input()\n    b = input()\n    if int(b, 2) == 0:\n        print('0')\n        continue\n    if int(a, 2) == 0:\n        print('1')\n        continue\n    ashort = True\n    if len(a) < len(b):\n        ashort = True\n    else:\n        ashort = False\n    if ashort == True:\n        a = '0' * abs(len(a) - len(b)) + a\n    else:\n        b = '0' * abs(len(a) - len(b)) + b\n    if len(a) < 90000:\n        bruteforce(a, b)\n        continue\n    oneone = False\n    maxi = 0\n    ans = 0\n    for i in range(len(a) - 1, -1, -1):\n        if a[i] == '1' and b[i] == '1' or (a[i] == '0' and b[i] == '0'):\n            oneone = True\n            ans = max(ans, maxi)\n            maxi = 0\n        if oneone == True:\n            if a[i] == '0' and b[i] == '1' or (a[i] == '1' and b[i] == '0'):\n                maxi = maxi + 1\n    print(ans + 2)", "T = int(input())\nfor i in range(T):\n    a = input()\n    b = input()\n    al = len(a)\n    bl = len(b)\n    if al > 450 and bl > 450:\n        x = max(al, bl)\n        if al > bl:\n            for i in range(al - bl):\n                b = '0' + b[:]\n        elif al < bl:\n            for i in range(bl - al):\n                a = '0' + a[:]\n        else:\n            pass\n        res = 1\n        req = 1\n        for j in range(x - 1, -1, -1):\n            t = 1\n            if b[j] == '1':\n                req = 0\n            if a[j] == '1' and b[j] == '1':\n                t = t + 1\n                for k in range(j - 1, -1, -1):\n                    if a[k] == '0' and b[k] == '1' or (a[k] == '1' and b[k] == '0'):\n                        t = t + 1\n                    else:\n                        break\n                j = k + 1\n                if t > res:\n                    res = t\n        if req == 1:\n            print('0')\n        else:\n            print(res)\n    else:\n        A = int(a, 2)\n        B = int(b, 2)\n        count = 0\n        if B == 0:\n            print('0')\n        elif A == 0:\n            print('1')\n        else:\n            while B > 0:\n                count = count + 1\n                temp = A & B\n                A = A ^ B\n                B = temp * 2\n            print(count)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    x = int(a, 2)\n    y = int(b, 2)\n    if y == 0:\n        print(0)\n    elif x == 0 and y != 0:\n        print(1)\n    else:\n        ans = [0]\n        count = 0\n        f = 0\n        if len(a) + len(b) > 100000:\n            if len(a) < len(b):\n                d = len(b) - len(a)\n                a = a.zfill(d + 1 + len(a))\n                b = b.zfill(1 + len(b))\n                for i in range(len(a) - 1, -1, -1):\n                    if a[i] == '1' and b[i] == '1':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                        else:\n                            f = 1\n                    if a[i] == '0' and b[i] == '0':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                    if f == 1:\n                        count += 1\n            if len(a) > len(b):\n                d = len(a) - len(b)\n                a = a.zfill(1 + len(a))\n                b = b.zfill(d + 1 + len(b))\n                for i in range(len(a) - 1, -1, -1):\n                    if a[i] == '1' and b[i] == '1':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                        else:\n                            f = 1\n                    if a[i] == '0' and b[i] == '0':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                    if f == 1:\n                        count += 1\n            if len(a) == len(b):\n                a = a.zfill(1 + len(a))\n                b = b.zfill(1 + len(b))\n                for i in range(len(a) - 1, -1, -1):\n                    if a[i] == '1' and b[i] == '1':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                        else:\n                            f = 1\n                    if a[i] == '0' and b[i] == '0':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                    if f == 1:\n                        count += 1\n            print(max(ans) + 1)\n        else:\n            c = 0\n            sum = x + y\n            while y > 0:\n                U = x ^ y\n                x = U\n                y = sum - x\n                c = c + 1\n            print(c)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    bog = b\n    an = len(a)\n    bn = len(b)\n    ans = -1\n    p = 0\n    if an > bn:\n        b = b.zfill(an - bn + bn)\n        p = an\n    elif bn > an:\n        a = a.zfill(bn - an + an)\n        p = bn\n    else:\n        p = an\n    al = list(map(int, a))\n    bl = list(map(int, b))\n    res = [7]\n    if bog == '0':\n        ans = 0\n        print(ans)\n        continue\n    else:\n        for i in range(p):\n            if al[i] == 0 and bl[i] == 0:\n                res.append(7)\n            elif al[i] == 0 and bl[i] == 1 or (al[i] == 1 and bl[i] == 0):\n                res.append(8)\n            elif al[i] == 1 and bl[i] == 1:\n                res.append(9)\n    if res.count(9) == 0:\n        ans = 1\n    else:\n        po = 0\n        ma = 1\n        flag = 1\n        for i in range(p + 1):\n            if res[i] == 7:\n                po = i\n            elif res[i] == 9:\n                if ma < abs(i - po + 1):\n                    ma = abs(i - po + 1)\n                po = i\n        ans = ma\n    print(ans)", "iterations = int(input())\nfor x in range(iterations):\n    firstValue = input()\n    secondValue = input()\n    firstValueLength = len(firstValue)\n    secondValueLength = len(secondValue)\n    One = int(firstValue, 2)\n    Two = int(secondValue, 2)\n    total = 0\n    upper = 0\n    if firstValueLength - 1 > 500 or secondValueLength - 1 > 500:\n        variable = '0' * abs(firstValueLength - secondValueLength)\n        if firstValueLength > secondValueLength:\n            secondValue = variable + secondValue\n        else:\n            firstValue = variable + firstValue\n        firstValueArray = firstValue[::-1]\n        secondValueArray = secondValue[::-1]\n        indicator = 0\n        for y in range(len(firstValueArray)):\n            if firstValueArray[y] == '0' and secondValueArray[y] == '0':\n                indicator = 0\n                total = 0\n            elif firstValueArray[y] == '1' and secondValueArray[y] == '1':\n                indicator = 1\n                total = 0\n            elif indicator == 1:\n                total = total + 1\n                if total > upper:\n                    upper = total\n        print(upper + 2)\n    else:\n        while Two > 0:\n            ack = One ^ Two\n            xyz = One & Two\n            One = ack\n            Two = xyz * 2\n            total = total + 1\n        print(total)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    if b == '0':\n        print(0)\n        continue\n    la = len(a)\n    lb = len(b)\n    l = la\n    if la > lb:\n        b = '0' * (la - lb) + b\n    elif la < lb:\n        a = '0' * (lb - la) + a\n        l = lb\n    a = '0' + a\n    b = '0' + b\n    ans = 0\n    count = 0\n    for i in range(l, -1, -1):\n        if a[i] == '1' and b[i] == '1':\n            ans = max(ans, count)\n            count = 1\n        elif a[i] == '0' and b[i] == '0':\n            ans = max(ans, count)\n            count = 0\n        elif count:\n            count += 1\n    print(ans + 1)", "from collections import Counter\ntest = int(input())\nfor intr in range(test):\n    arr1 = list(input())\n    arr2 = list(input())\n    arr1.reverse()\n    arr2.reverse()\n    if not (len(arr2) == 1 and arr2[0] == '0'):\n        value1 = 1\n        arr3 = []\n        arr4 = []\n        minlength = min(len(arr1), len(arr2))\n        for i in range(minlength):\n            arr3.append(int(arr1[i]) & int(arr2[i]))\n            arr4.append(int(arr1[i]) ^ int(arr2[i]))\n        for i in range(minlength, len(arr1)):\n            arr4.append(int(arr1[i]))\n        for i in range(minlength, len(arr2)):\n            arr4.append(int(arr2[i]))\n        arr5 = []\n        for i in range(len(arr3)):\n            if arr3[i] == 1:\n                arr5.append(i)\n        arr6 = [0]\n        for i in range(minlength):\n            arr6[0] += 1\n        j = 0\n        for i in range(len(arr5)):\n            ans = 2\n            for j in range(arr5[i] + 1, len(arr4)):\n                if arr4[j] == 1:\n                    ans += 1\n                else:\n                    break\n            value1 = max(value1, ans)\n            if j == len(arr4) - 1:\n                break\n        print(value1)\n    else:\n        print('0')", "def addition(a, b, a1, b1):\n    c = 0\n    while b > 0:\n        u = a ^ b\n        v = a & b\n        a = u\n        b = v * 2\n        c += 1\n        if c > 100:\n            sol(a1, b1)\n            return\n    print(c)\n\ndef binaryToDecimal(n):\n    return int(n, 2)\n\ndef sol(a, b):\n    a = list(a)\n    b = list(b)\n    if len(a) < l:\n        for j in range(l - len(a)):\n            a = ['0'] + a\n    elif len(b) < l:\n        for j in range(l - len(b)):\n            b = ['0'] + b\n    a.reverse()\n    b.reverse()\n    pa = []\n    j = 0\n    pa.append(0)\n    while j < l:\n        if a[j] == '1' and b[j] == '1':\n            co = 1\n            j += 1\n            if j < l:\n                while a[j] != b[j]:\n                    co += 1\n                    j += 1\n                    if j >= l:\n                        break\n            pa.append(co)\n        else:\n            j += 1\n    print(max(pa) + 1)\nt = int(input())\nfor i in range(t):\n    a = input()\n    b = input()\n    l = max(len(a), len(b))\n    if b == '0':\n        print(0)\n    elif a == '0':\n        print(1)\n    else:\n        a1 = binaryToDecimal(a)\n        b1 = binaryToDecimal(b)\n        addition(a1, b1, a, b)", "t = int(input())\nans = []\nfor _ in range(t):\n    temp1 = input()\n    temp2 = input()\n    if len(temp1) <= 50000 and len(temp2) <= 50000:\n        count = 0\n        a = int(temp1, 2)\n        b = int(temp2, 2)\n        while b > 0:\n            u = a ^ b\n            v = a & b\n            a = u\n            b = v << 1\n            count = count + 1\n        ans.append(count)\n    else:\n        maximum = [0]\n        c = list(temp1)\n        d = list(temp2)\n        c = c[::-1]\n        d = d[::-1]\n        if len(c) - len(d) > 0:\n            temp = len(c) - len(d)\n            for k in range(temp):\n                d.append('0')\n        if len(d) - len(c) > 0:\n            temp = len(d) - len(c)\n            for k in range(temp):\n                c.append('0')\n        flag = 0\n        i = 0\n        z = len(c)\n        while i < z:\n            count = 0\n            if int(c[i]) == 1 and int(d[i]) == 1 and (i < z - 1):\n                flag = 1\n                i = i + 1\n                if c[i] == d[i]:\n                    continue\n                while 1:\n                    if c[i] != d[i]:\n                        i = i + 1\n                        count = count + 1\n                        if i >= z:\n                            break\n                    else:\n                        break\n                maximum.append(count)\n            i = i + 1\n        if flag == 0:\n            ans.append(1)\n        else:\n            ans.append(max(maximum) + 2)\nfor i in ans:\n    print(i)", "t = int(input())\nfor i in range(t):\n    A = input()\n    B = input()\n    arr = []\n    lenA = len(A)\n    lenB = len(B)\n    if lenA < lenB:\n        A = (lenB - lenA) * '0' + A\n    else:\n        B = (lenA - lenB) * '0' + B\n    for j in range(max(lenA, lenB)):\n        arr.append(int(A[j]) + int(B[j]))\n    j = len(arr) - 1\n    count_max = 0\n    count = 0\n    while j >= 0:\n        if arr[j] == 2:\n            if count > count_max:\n                count_max = count\n            count = 1\n        elif arr[j] == 1 and count != 0:\n            count += 1\n        elif arr[j] == 0:\n            if count > count_max:\n                count_max = count\n            count = 0\n        j -= 1\n    if count > count_max:\n        count_max = count\n    if int(B) == 0:\n        print(0)\n    else:\n        print(count_max + 1)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    m = len(a)\n    n = len(b)\n    if m > n:\n        for i in range(m - n):\n            b = '0' + b\n    elif n > m:\n        for i in range(n - m):\n            a = '0' + a\n        m = n\n    l = [-1 for i in range(m)]\n    for i in range(m - 1, -1, -1):\n        if a[i] == '1' and b[i] == '1':\n            l[i] = 0\n    j = -1\n    for i in range(m - 1, -1, -1):\n        if a[i] == '1' and b[i] == '1':\n            if j != -1:\n                l[j] = l[j] + 1\n            j = i\n        elif a[i] == '0':\n            if b[i] == '0':\n                if j != -1:\n                    l[j] = l[j] + 1\n                    j = -1\n            elif j != -1:\n                l[j] = l[j] + 1\n        elif b[i] == '0':\n            if j != -1:\n                l[j] = l[j] + 1\n    if a[0] == '1' and b[0] == '1':\n        l[j] = l[j] + 1\n    elif j != -1:\n        l[j] = l[j] + 1\n    if int(b) == 0:\n        print(0)\n    elif max(l) == -1:\n        print(1)\n    else:\n        print(max(l) + 1)", "try:\n    t = int(input())\n    for _ in range(t):\n        A = input()\n        B = input()\n        fcount = 0\n        flag = 1\n        DecimalA = int(A, 2)\n        DecimalB = int(B, 2)\n        if DecimalB == 0:\n            print(0)\n            continue\n        if DecimalA == 0 and DecimalB != 0:\n            print(1)\n            continue\n        var = abs(len(A) - len(B))\n        if len(A) > len(B):\n            B = '0' * var + B\n        else:\n            A = '0' * var + A\n        i = len(A) - 1\n        while i >= 0:\n            count = 1\n            if A[i] == B[i] and A[i] == '1':\n                flag = 0\n                j = i - 1\n                while A[j] != B[j] and j >= 0:\n                    count += 1\n                    j -= 1\n            if fcount < count:\n                fcount = count\n            i -= 1\n        if flag == 0:\n            print(fcount + 1)\n        else:\n            print(1)\nexcept:\n    pass", "def ones(n):\n    c = 0\n    while n:\n        n = n & n - 1\n        c += 1\n    if c == 1:\n        return True\n    return False\n\ndef cc(a, b):\n    a = bin(a)[2:]\n    b = bin(b)[2:]\n    sa = len(a)\n    sb = len(b)\n    ind = -1\n    qq = abs(sa - sb)\n    y = 0\n    if qq == 0:\n        ind = 0\n        qq += 1\n        y += 1\n    if sa - sb > 0:\n        for i in range(qq, sa):\n            if a[i] == '1' and b[y] == '1':\n                ind = i\n                break\n            y += 1\n    else:\n        for i in range(qq, sb):\n            if b[i] == '1' and a[y] == '1':\n                ind = i\n                break\n            y += 1\n    return ind\nfor _ in range(int(input())):\n    a = int(input(), 2)\n    b = int(input(), 2)\n    if b == 0:\n        print('0')\n        continue\n    if a == 0:\n        print('1')\n        continue\n    c = 0\n    f = 0\n    while True:\n        c += 1\n        u = a ^ b\n        v = a & b\n        if v == 0:\n            break\n        a = u\n        b = v << 1\n        if ones(b):\n            f = 1\n            break\n    if f == 1:\n        k = 0\n        z = a | b\n        z = bin(z)[2:]\n        index = cc(a, b)\n        for i in range(index, -1, -1):\n            if z[i] == '1':\n                k += 1\n            else:\n                break\n        c += max(k + 1, 1)\n    print(c)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    x = int(a, 2)\n    y = int(b, 2)\n    if y == 0:\n        print(0)\n    elif x == 0 and y != 0:\n        print(1)\n    else:\n        ans = [0]\n        count = 0\n        f = 0\n        if len(a) + len(b) > 100000:\n            if len(a) < len(b):\n                d = len(b) - len(a)\n                a = a.zfill(d + 1 + len(a))\n                b = b.zfill(1 + len(b))\n                for i in range(len(a) - 1, -1, -1):\n                    if a[i] == '1' and b[i] == '1':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                        else:\n                            f = 1\n                    if a[i] == '0' and b[i] == '0':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                    if f == 1:\n                        count += 1\n            if len(a) > len(b):\n                d = len(a) - len(b)\n                a = a.zfill(1 + len(a))\n                b = b.zfill(d + 1 + len(b))\n                for i in range(len(a) - 1, -1, -1):\n                    if a[i] == '1' and b[i] == '1':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                        else:\n                            f = 1\n                    if a[i] == '0' and b[i] == '0':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                    if f == 1:\n                        count += 1\n            if len(a) == len(b):\n                a = a.zfill(1 + len(a))\n                b = b.zfill(1 + len(b))\n                for i in range(len(a) - 1, -1, -1):\n                    if a[i] == '1' and b[i] == '1':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                        else:\n                            f = 1\n                    if a[i] == '0' and b[i] == '0':\n                        if f == 1:\n                            ans.append(count)\n                            count = 0\n                            f = 0\n                    if f == 1:\n                        count += 1\n            print(max(ans) + 1)\n        else:\n            c = 0\n            while y > 0:\n                U = x ^ y\n                V = x & y\n                x = U\n                y = V * 2\n                c = c + 1\n            print(c)", "t = int(input())\nfor _ in range(t):\n    A = input()\n    B = input()\n    a = int(A, 2)\n    b = int(B, 2)\n    A = list(A)\n    B = list(B)\n    ans = 0\n    if len(A) > len(B):\n        B = B[::-1]\n        while len(B) != len(A):\n            B.append('0')\n        B = B[::-1]\n    if len(A) < len(B):\n        A = A[::-1]\n        while len(A) != len(B):\n            A.append('0')\n        A = A[::-1]\n    B = B[::-1]\n    C = []\n    A = A[::-1]\n    maxx = 0\n    if a > 1000000 and b > 10000000:\n        for i in range(len(A)):\n            C.append(int(A[i]) + int(B[i]))\n        for i in range(len(A)):\n            if C[i] == 2:\n                i += 1\n                temp = 0\n                while i < len(A) and C[i] == 1:\n                    temp += 1\n                    i += 1\n                if temp > maxx:\n                    maxx = temp\n            else:\n                i += 1\n        if b == 0:\n            print(0)\n        elif a == 0:\n            print(1)\n        else:\n            print(maxx + 2)\n    else:\n        ans = 0\n        while b > 0:\n            U = a ^ b\n            V = a & b\n            b = 2 * V\n            a = U\n            ans += 1\n        print(ans)", "T = int(input())\nfor k in range(T):\n    a = input()\n    b = input()\n    if b == '0':\n        print('0')\n    elif a == '0':\n        print('1')\n    else:\n        if len(a) > len(b):\n            b = '0' * (len(a) - len(b)) + b\n        else:\n            a = '0' * (len(b) - len(a)) + a\n        mx = 1\n        flag = -1\n        count = 0\n        for i in range(len(a) - 1, -1, -1):\n            if flag == 0:\n                if a[i] == '1' and b[i] == '0' or (b[i] == '1' and a[i] == '0'):\n                    count = 1 + count\n                else:\n                    flag = -1\n                    count = 0\n            if a[i] == b[i] and a[i] == '1':\n                flag = 0\n                count = 2\n            if count > mx:\n                mx = count\n        print(mx)", "for i in range(0, int(input())):\n    m = input()\n    n = input()\n    if n == '0':\n        print(0)\n    elif n != '0':\n        if len(m) > len(n):\n            diff = len(m) - len(n)\n            for j in range(diff):\n                n = '0' + n\n        elif len(n) > len(m):\n            diff = len(n) - len(m)\n            for j in range(diff):\n                m = '0' + m\n        m = '0' + m\n        n = '0' + n\n        lenm = len(m)\n        L = []\n        L.append(0)\n        m = ''.join(reversed(m))\n        n = ''.join(reversed(n))\n        for k in range(lenm - 1):\n            A = 1\n            if m[k] == '1' and n[k] == '1':\n                chk = 1\n                brk = 1\n                while brk == 1:\n                    if m[chk + k] == '1' and n[chk + k] == '0':\n                        A += 1\n                    elif m[chk + k] == '0' and n[chk + k] == '1':\n                        A += 1\n                    else:\n                        brk = 0\n                    chk += 1\n                L.append(A)\n        print(max(L) + 1)", "for r in range(int(input())):\n    x = input()\n    y = input()\n    m = 0\n    na = len(x)\n    nb = len(y)\n    if na - 1 > 500 or nb - 1 > 500:\n        if na > nb:\n            y = (na - nb) * '0' + y\n        elif nb > na:\n            x = (nb - na) * '0' + x\n        f = 0\n        s = 0\n        for i in range(len(x) - 1, -1, -1):\n            if f == 0:\n                if x[i] == '1' and y[i] == '1':\n                    s = 0\n                elif x[i] == '0' and y[i] == '0':\n                    s = 0\n                    f = 1\n                else:\n                    s += 1\n                    if s > m:\n                        m = s\n            elif x[i] == '1' and y[i] == '1' and (f == 1):\n                s = 0\n                f = 0\n            else:\n                s = 0\n        print(m + 2)\n    else:\n        x = int(x, 2)\n        y = int(y, 2)\n        s = 0\n        while y > 0:\n            u = x ^ y\n            v = x & y\n            x = u\n            y = v * 2\n            s += 1\n        print(s)", "for i in range(0, int(input())):\n    m = input()\n    n = input()\n    if n == '0':\n        print(0)\n    elif n != '0':\n        if len(m) > len(n):\n            diff = len(m) - len(n)\n            for j in range(diff):\n                n = '0' + n\n        elif len(n) > len(m):\n            diff = len(n) - len(m)\n            for j in range(diff):\n                m = '0' + m\n        m = '0' + m\n        n = '0' + n\n        lenm = len(m)\n        L = []\n        L.append(0)\n        m = m[::-1]\n        n = n[::-1]\n        for k in range(lenm - 1):\n            A = 1\n            if m[k] == '1' and n[k] == '1':\n                chk = 1\n                brk = 1\n                while brk == 1:\n                    if m[chk + k] == '1' and n[chk + k] == '0':\n                        A += 1\n                    elif m[chk + k] == '0' and n[chk + k] == '1':\n                        A += 1\n                    else:\n                        brk = 0\n                    chk += 1\n                L.append(A)\n        print(max(L) + 1)", "t = int(input())\nfor j in range(t):\n    a = input()\n    b = input()\n    n = len(a)\n    n1 = len(b)\n    A = int(a, 2)\n    B = int(b, 2)\n    c = 0\n    max = 0\n    if n - 1 > 500 or n1 - 1 > 500:\n        s = '0' * abs(n - n1)\n        if n > n1:\n            b = s + b\n        else:\n            a = s + a\n        a1 = a[::-1]\n        b1 = b[::-1]\n        flag = 0\n        for i in range(len(a1)):\n            if a1[i] == '0' and b1[i] == '0':\n                flag = 0\n                c = 0\n            elif a1[i] == '1' and b1[i] == '1':\n                flag = 1\n                c = 0\n            elif flag == 1:\n                c = c + 1\n                if c > max:\n                    max = c\n        print(max + 2)\n    else:\n        while B > 0:\n            U = A ^ B\n            V = A & B\n            A = U\n            B = V * 2\n            c = c + 1\n        print(c)", "t = int(input())\nfor i in range(t):\n    first_string = input()\n    second_string = input()\n    if int(second_string, 2) == 0:\n        print(0)\n    elif int(first_string, 2) == 0:\n        print(1)\n    else:\n        n1 = len(first_string)\n        n2 = len(second_string)\n        if n1 > n2:\n            temp_string = ''\n            for j in range(n1 - n2):\n                temp_string = temp_string + '0'\n            temp_string = temp_string + second_string\n            second_string = temp_string\n        elif n2 > n1:\n            temp_string = ''\n            for j in range(n2 - n1):\n                temp_string = temp_string + '0'\n            temp_string = temp_string + first_string\n            first_string = temp_string\n        x = len(first_string) - 1\n        compare_variable = -1\n        while x >= 0:\n            temp_count = 0\n            if first_string[x] == '1' and second_string[x] == '1':\n                x -= 1\n                while first_string[x] != second_string[x] and x >= 0:\n                    temp_count += 1\n                    x -= 1\n                if temp_count > compare_variable:\n                    compare_variable = temp_count\n            else:\n                x -= 1\n        if compare_variable == -1:\n            print(1)\n        else:\n            print(compare_variable + 2)"]