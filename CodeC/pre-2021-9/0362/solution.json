["num_test_cases = int(input())\nfor _ in range(num_test_cases):\n    num_guests = int(input())\n    arrival_times = list(map(int, input().split()))\n    departure_times = list(map(int, input().split()))\n    arrival_times.sort()\n    departure_times.sort()\n    i = j = max_guests = curr_guests = 0\n    while i < num_guests and j < num_guests:\n        if arrival_times[i] < departure_times[j]:\n            curr_guests += 1\n            i += 1\n            max_guests = max(max_guests, curr_guests)\n        else:\n            curr_guests -= 1\n            j += 1\n    print(max_guests)", "from os import path\nimport sys\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    c = Counter(a)\n    cc = Counter(d)\n    ans = 0\n    guests = 0\n    t = 1\n    mx = max(d)\n    while t <= mx:\n        if t in a:\n            guests += c[t]\n        if t in d:\n            guests -= cc[t]\n        ans = max(ans, guests)\n        t += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    f = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    f.sort()\n    t.sort()\n    p = 0\n    k = 0\n    c = 0\n    m = 0\n    while p < n and k < n:\n        if f[p] < t[k]:\n            c += 1\n            p += 1\n        else:\n            c -= 1\n            k += 1\n        if c > m:\n            m = c\n    print(m)", "for i in range(int(input())):\n    n = int(input())\n    arrivals = list(map(int, input().split()))\n    departures = list(map(int, input().split()))\n    arrivals.sort()\n    departures.sort()\n    current_guests = 0\n    max_guests = 0\n    i = 0\n    j = 0\n    while i < n and j < n:\n        if arrivals[i] < departures[j]:\n            current_guests += 1\n            i += 1\n        else:\n            current_guests -= 1\n            j += 1\n        if current_guests > max_guests:\n            max_guests = current_guests\n    print(max_guests)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dep = list(map(int, input().split()))\n    arr.sort()\n    dep.sort()\n    i = j = max_guests = curr_guests = 0\n    while i < n and j < n:\n        if arr[i] < dep[j]:\n            curr_guests += 1\n            i += 1\n            max_guests = max(max_guests, curr_guests)\n        else:\n            curr_guests -= 1\n            j += 1\n    print(max_guests)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    (a, b) = (input().split(), input().split())\n    A = [int(j) for j in a]\n    B = [int(j) for j in b]\n    (a, b) = (min(A), max(B))\n    n = 0\n    for j in range(a, b):\n        p = 0\n        for k in range(N):\n            if A[k] <= j < B[k]:\n                p += 1\n        if n < p:\n            n = p\n    print(n)", "for _ in range(int(input())):\n    hotel = [0] * 1001\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dep = list(map(int, input().split()))\n    for i in range(n):\n        start = arr[i]\n        end = dep[i]\n        while start < end:\n            hotel[start] += 1\n            start += 1\n    print(max(hotel))", "for i in range(int(input())):\n    n = int(input())\n    arrivals = list(map(int, input().split()))\n    departures = list(map(int, input().split()))\n    arrivals.sort()\n    departures.sort()\n    current_guests = 0\n    max_guests = 0\n    i = 0\n    j = 0\n    while i < n and j < n:\n        if arrivals[i] < departures[j]:\n            current_guests += 1\n            i += 1\n        else:\n            current_guests -= 1\n            j += 1\n        if current_guests > max_guests:\n            max_guests = current_guests\n    print(max_guests)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    i = j = 0\n    count = 0\n    maxi = 0\n    while i < n and j < n:\n        if a[i] < b[j]:\n            count = count + 1\n            i = i + 1\n        else:\n            count = count - 1\n            j = j + 1\n        maxi = max(count, maxi)\n    print(maxi)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    entry = list(map(int, input().split()))\n    exit = list(map(int, input().split()))\n    entry.sort()\n    exit.sort()\n    i = j = 0\n    count = 0\n    maxi = 0\n    while i < n and j < n:\n        if entry[i] < exit[j]:\n            count += 1\n            i += 1\n        else:\n            count -= 1\n            j += 1\n        maxi = max(maxi, count)\n    print(maxi)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    entry = list(map(int, input().split()))\n    exit = list(map(int, input().split()))\n    entry.sort()\n    exit.sort()\n    i = j = 0\n    count = 0\n    maxi = 0\n    while i < n and j < n:\n        if entry[i] < exit[j]:\n            count += 1\n            i += 1\n        else:\n            count -= 1\n            j += 1\n        maxi = max(maxi, count)\n    print(maxi)", "for _ in range(int(input())):\n    n = int(input())\n    ls1 = list(map(int, input().split()))\n    ls2 = list(map(int, input().split()))\n    ls = [[ls1[i], ls2[i]] for i in range(n)]\n    count = 0\n    max_count = -10\n    ls.sort(key=lambda x: x[0])\n    for (i, l) in enumerate(ls):\n        for j in range(i):\n            dep_time = ls[j][1]\n            if dep_time != -1:\n                if dep_time < l[0]:\n                    ls[j][1] = -1\n                    count -= 1\n                elif dep_time == l[0]:\n                    ls[j][1] = -1\n                    count -= 1\n        count += 1\n        if count > max_count:\n            max_count = count\n    print(max_count)", "a = int(input(''))\nfor i in range(a):\n    p = int(input())\n    t1 = [int(x) for x in input('').split()]\n    t2 = [int(x) for x in input('').split()]\n    l = []\n    for j in range(min(t1), max(t2)):\n        n = 0\n        for h in range(p):\n            if j >= t1[h] and j < t2[h]:\n                n = n + 1\n        l.append(n)\n    print(max(l))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    li = []\n    for i in range(len(B)):\n        ct = 0\n        for j in range(len(A)):\n            if A[j] < B[i] and B[i] <= B[j]:\n                ct = ct + 1\n        li.append(ct)\n    print(max(li))", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    d = {}\n    for i in range(n):\n        for j in range(a[i], b[i]):\n            d[j] = d.get(j, 0) + 1\n            if d[j] > ans:\n                ans = d[j]\n    print(ans)\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arrival = list(map(int, input().split()))\n    depature = list(map(int, input().split()))\n    guest = {}\n    for j in range(n):\n        for ele in range(arrival[j], depature[j] + 1):\n            if ele in guest:\n                guest[ele] += 1\n            else:\n                guest[ele] = 1\n    arrival = list(set(arrival))\n    for ele in arrival:\n        if ele in depature:\n            guest[ele] -= depature.count(ele)\n    print(max(list(guest.values())))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    v = [0] * 1001\n    answer = 0\n    for i in range(n):\n        for j in range(a[i], b[i]):\n            v[j] += 1\n            if v[j] > answer:\n                answer = v[j]\n    print(answer)\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    v = [0] * 1001\n    answer = 0\n    for i in range(n):\n        for j in range(a[i], b[i]):\n            v[j] += 1\n            if v[j] > answer:\n                answer = v[j]\n    print(answer)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arrival = list(map(int, input().split()))\n    departure = list(map(int, input().split()))\n    l_n = []\n    for j in range(min(arrival), max(departure)):\n        n_g = 0\n        for x in range(n):\n            if j >= arrival[x] and j < departure[x]:\n                n_g += 1\n        l_n.append(n_g)\n    print(max(l_n))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arrival = list(map(int, input().split()))\n    departure = list(map(int, input().split()))\n    l_n = []\n    for j in range(min(arrival), max(departure)):\n        n_g = 0\n        for x in range(n):\n            if j >= arrival[x] and j < departure[x]:\n                n_g += 1\n        l_n.append(n_g)\n    print(max(l_n))", "import collections\nfor _ in range(int(input())):\n    input()\n    arrivals = list(map(int, input().split()))\n    departures = list(map(int, input().split()))\n    valMap = collections.defaultdict(int)\n    for i in range(len(arrivals)):\n        valMap[arrivals[i]] += 1\n        valMap[departures[i]] -= 1\n    firstGuest = min(arrivals)\n    lastGuest = max(departures)\n    m = 0\n    noGuests = 0\n    noGuests\n    for i in range(firstGuest, lastGuest):\n        noGuests += valMap[i]\n        m = max(m, noGuests)\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    arrival = list(map(int, input().split()))\n    departure = list(map(int, input().split()))\n    finallist = []\n    for i in range(n):\n        for j in range(arrival[i], departure[i]):\n            finallist.append(j)\n    from collections import Counter\n    d = Counter(finallist)\n    print(max(d.values()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    come = [int(x) for x in input().split()]\n    go = [int(x) for x in input().split()]\n    time = 0\n    maxcount = 0\n    count = 0\n    while time <= max(max(come), max(go)):\n        if time in come:\n            count += come.count(time)\n        if time in go:\n            count -= go.count(time)\n        if count > maxcount:\n            maxcount = count\n        time += 1\n    print(maxcount)", "q = int(input())\nfor i in range(q):\n    w = int(input())\n    e = str(input())\n    r = str(input())\n    e = e + ' '\n    t = ''\n    y = []\n    for i in e:\n        if i == ' ':\n            y.append(int(t))\n            t = ''\n        else:\n            t = t + i\n    r = r + ' '\n    u = ''\n    o = []\n    for i in r:\n        if i == ' ':\n            o.append(int(u))\n            u = ''\n        else:\n            u = u + i\n    p = y[0]\n    for i in y:\n        if i <= p:\n            p = i\n    a = 0\n    for i in o:\n        if i >= a:\n            a = i\n    s = 0\n    for i in range(p, a + 1):\n        d = 0\n        for j in range(w):\n            if y[j] <= i < o[j]:\n                d = d + 1\n        s = max(s, d)\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arrivals = list(map(int, input().split()))\n    departures = list(map(int, input().split()))\n    times = []\n    for i in range(n):\n        times.append((arrivals[i], 1))\n        times.append((departures[i], -1))\n    times.sort()\n    count = 0\n    max_count = 0\n    for (time, event) in times:\n        count += event\n        max_count = max(max_count, count)\n    print(max_count)", "for case in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l1.sort()\n    l2 = list(map(int, input().split()))\n    l2.sort()\n    r = 0\n    c = 0\n    i = 0\n    j = 0\n    while i < n and j < n:\n        if l1[i] < l2[j]:\n            c += 1\n            i += 1\n        else:\n            c -= 1\n            j += 1\n        r = max(c, r)\n    print(r)", "q = int(input())\nfor i in range(q):\n    w = int(input())\n    e = str(input())\n    r = str(input())\n    e = e + ' '\n    t = ''\n    y = []\n    for i in e:\n        if i == ' ':\n            y.append(int(t))\n            t = ''\n        else:\n            t = t + i\n    r = r + ' '\n    u = ''\n    o = []\n    for i in r:\n        if i == ' ':\n            o.append(int(u))\n            u = ''\n        else:\n            u = u + i\n    p = y[0]\n    for i in y:\n        if i <= p:\n            p = i\n    a = 0\n    for i in o:\n        if i >= a:\n            a = i\n    s = 0\n    for i in range(p, a + 1):\n        d = 0\n        for j in range(w):\n            if y[j] <= i < o[j]:\n                d = d + 1\n        s = max(s, d)\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dep = list(map(int, input().split()))\n    times = [(arr[i], 1) for i in range(n)] + [(dep[i], -1) for i in range(n)]\n    times.sort()\n    maxGuests = 0\n    guests = 0\n    for (time, change) in times:\n        guests += change\n        maxGuests = max(maxGuests, guests)\n    print(maxGuests)", "for t in range(int(input())):\n    n = int(input())\n    arrival_time = [int(time) for time in input().split()]\n    departure_time = [int(time) for time in input().split()]\n    (count, max_count, time) = (0, 0, 0)\n    while time <= max(arrival_time):\n        if time in arrival_time:\n            count += arrival_time.count(time)\n        if time in departure_time:\n            count -= departure_time.count(time)\n        if count > max_count:\n            if count == n:\n                max_count = n\n                break\n            max_count = count\n        time += 1\n    print(max_count)", "for t in range(int(input())):\n    n = int(input())\n    arrival_time = [int(time) for time in input().split()]\n    departure_time = [int(time) for time in input().split()]\n    (count, max_count, time) = (0, 0, 0)\n    while time <= max(arrival_time):\n        if time in arrival_time:\n            count += arrival_time.count(time)\n        if time in departure_time:\n            count -= departure_time.count(time)\n        if count > max_count:\n            if count == n:\n                max_count = n\n                break\n            max_count = count\n        time += 1\n    print(max_count)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dep = list(map(int, input().split()))\n    times = [(arr[i], 1) for i in range(n)] + [(dep[i], -1) for i in range(n)]\n    times.sort()\n    maxGuests = 0\n    guests = 0\n    for (time, change) in times:\n        guests += change\n        maxGuests = max(maxGuests, guests)\n    print(maxGuests)", "for _ in range(int(input())):\n    n = int(input())\n    ls1 = list(map(int, input().split()))\n    ls2 = list(map(int, input().split()))\n    ls = [[ls1[i], ls2[i]] for i in range(n)]\n    count = 0\n    max_count = -10\n    ls.sort(key=lambda x: x[0])\n    for (i, l) in enumerate(ls):\n        for j in range(i):\n            dep_time = ls[j][1]\n            if dep_time != -1:\n                if dep_time < l[0] or dep_time == l[0]:\n                    ls[j][1] = -1\n                    count -= 1\n        count += 1\n        if count > max_count:\n            max_count = count\n    print(max_count)", "for tc in range(int(input())):\n    n = int(input())\n    at = list(map(int, input().split()))\n    dt = list(map(int, input().split()))\n    mt = max(max(at), max(dt))\n    arr = [0] * (mt + 2)\n    for i in range(n):\n        arr[at[i]] += 1\n        arr[dt[i]] -= 1\n    mp = 0\n    tot = 0\n    for ele in arr:\n        tot += ele\n        mp = max(mp, tot)\n    print(mp)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    val = [0] * max(max(a), max(b))\n    ep = [0] * max(max(a), max(b))\n    for i in range(n):\n        for j in range(a[i] - 1, b[i] - 1):\n            p = 1\n            if j == a[i] and ep[j] > 0:\n                ep[j] = ep[j] - 1\n                continue\n            if j + 1 == b[i]:\n                ep[j] = ep[j] + 1\n            val[j] = val[j] + 1\n    print(max(val))", "for _ in range(int(input())):\n    n = int(input())\n    come = [int(x) for x in input().split()]\n    go = [int(x) for x in input().split()]\n    time = 0\n    maxcount = 0\n    count = 0\n    while time <= max(max(come), max(go)):\n        if time in come:\n            count += come.count(time)\n        if time in go:\n            count -= go.count(time)\n        if count > maxcount:\n            maxcount = count\n        time += 1\n    print(maxcount)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arrivals = list(map(int, input().split()))\n    departures = list(map(int, input().split()))\n    events = []\n    for i in range(n):\n        events.append((arrivals[i], 1))\n        events.append((departures[i], -1))\n    events.sort()\n    max_guests = 0\n    curr_guests = 0\n    for event in events:\n        curr_guests += event[1]\n        max_guests = max(max_guests, curr_guests)\n    print(max_guests)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    l = [0] * 1000\n    for i in range(n):\n        for j in range(a[i], d[i]):\n            l[j] += 1\n    print(max(l))", "for t in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    count = 0\n    maxcount = 0\n    time = 1\n    while time <= 1000:\n        if time in a:\n            count += a.count(time)\n        if time in b:\n            count -= b.count(time)\n        if count > maxcount:\n            maxcount = count\n        time += 1\n    print(maxcount)", "t = int(input())\nwhile t:\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list2 = list(map(int, input().split()))\n    maxcount = 0\n    time = 0\n    count = 0\n    while time <= 1000:\n        if time in list1:\n            count += list1.count(time)\n        if time in list2:\n            count -= list2.count(time)\n        if count > maxcount:\n            maxcount = count\n        time += 1\n    print(maxcount)\n    t = t - 1", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    start = [int(x) for x in input().split()]\n    end = [int(x) for x in input().split()]\n    a = min(start)\n    b = max(end)\n    temp = float('-inf')\n    for i in range(a, b + 1):\n        count = 0\n        for j in range(n):\n            if start[j] <= i < end[j]:\n                count += 1\n        if temp < count:\n            temp = count\n    print(temp)", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    d = [int(i) for i in sys.stdin.readline().split()]\n    e = sorted([(i, 1) for i in a] + [(i, -1) for i in d])\n    c = 0\n    m = 0\n    for (i, j) in e:\n        c += j\n        m = max(m, c)\n    print(m)", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    d = [int(i) for i in sys.stdin.readline().split()]\n    e = sorted([(i, 1) for i in a] + [(i, -1) for i in d])\n    c = 0\n    m = 0\n    for (i, j) in e:\n        c += j\n        m = max(m, c)\n    print(m)", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    d = [int(i) for i in sys.stdin.readline().split()]\n    e = sorted([(i, 1) for i in a] + [(i, -1) for i in d])\n    c = 0\n    m = 0\n    for (i, j) in e:\n        c += j\n        m = max(m, c)\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    y = [int(i) for i in input().split()]\n    l = [(x[i], 1) for i in range(n)] + [(y[i], -1) for i in range(n)]\n    l.sort()\n    val = 0\n    maxv = 0\n    for i in l:\n        val += i[1]\n        maxv = max(maxv, val)\n    print(maxv)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    gorb = 0\n    maxs = 0\n    for i in range(1, max(b) + 1):\n        if i in a:\n            gorb += a.count(i)\n        if i in b:\n            gorb -= b.count(i)\n        if gorb > maxs:\n            maxs = gorb\n    print(maxs)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    d = list(map(int, input().split(' ')))\n    m = 0\n    for j in range(min(a), max(d) + 1):\n        l = 0\n        for k in range(n):\n            if a[k] <= j < d[k]:\n                l += 1\n            if l > m:\n                m = l\n    print(m)", "def solve():\n    for _ in range(int(input())):\n        n = int(input())\n        arrivals = list(map(int, input().split()))\n        departures = list(map(int, input().split()))\n        maxchecked = 0\n        current = 0\n        for time in range(1, max(departures)):\n            current += arrivals.count(time) - departures.count(time)\n            maxchecked = max(maxchecked, current)\n        print(maxchecked)\nsolve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arrival = list(map(int, input().split()))\n    departure = list(map(int, input().split()))\n    events = sorted([(time, 1) for time in arrival] + [(time, -1) for time in departure])\n    max_guests = curr_guests = 0\n    for (time, event) in events:\n        curr_guests += event\n        max_guests = max(max_guests, curr_guests)\n    print(max_guests)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    start = list(map(int, input().split()))\n    end = list(map(int, input().split()))\n    start.sort()\n    end.sort()\n    count = 0\n    Max = 0\n    j = 0\n    for i in range(n):\n        if end[j] > start[i]:\n            count += 1\n        else:\n            j += 1\n        Max = max(Max, count)\n    print(Max)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    d = [int(i) for i in input().split()]\n    l = [0] * 1001\n    for i in range(n):\n        for j in range(a[i], d[i]):\n            l[j] += 1\n    print(max(l))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dep = list(map(int, input().split()))\n    times = [(arr[i], 1) for i in range(n)] + [(dep[i], -1) for i in range(n)]\n    times.sort()\n    maxGuests = 0\n    guests = 0\n    for (time, change) in times:\n        guests += change\n        maxGuests = max(maxGuests, guests)\n    print(maxGuests)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    dep = [int(x) for x in input().split()]\n    arr.sort()\n    dep.sort()\n    ans = 0\n    for i in range(n):\n        a = arr[i]\n        j = 0\n        while dep[j] <= a:\n            j += 1\n        ans = max(ans, i - j + 1)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    dep = [int(x) for x in input().split()]\n    arr.sort()\n    dep.sort()\n    ans = 0\n    for i in range(n):\n        a = arr[i]\n        j = 0\n        while dep[j] <= a:\n            j += 1\n        ans = max(ans, i - j + 1)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    dep = [int(x) for x in input().split()]\n    arr.sort()\n    dep.sort()\n    num = 0\n    for i in range(n):\n        a = arr[i]\n        j = 0\n        while dep[j] <= a:\n            j += 1\n        ans = i - j + 1\n        num = max(ans, num)\n    print(num)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    dep = [int(x) for x in input().split()]\n    arr.sort()\n    dep.sort()\n    num = 0\n    for i in range(n):\n        a = arr[i]\n        j = 0\n        while dep[j] <= a:\n            j += 1\n        ans = i - j + 1\n        num = max(ans, num)\n    print(num)", "for _ in range(int(input())):\n    n = int(input())\n    come = [int(x) for x in input().split()]\n    go = [int(x) for x in input().split()]\n    time = 0\n    maxcount = 0\n    count = 0\n    while time <= max(max(come), max(go)):\n        if time in come:\n            count += come.count(time)\n        if time in go:\n            count -= go.count(time)\n        if count > maxcount:\n            maxcount = count\n        time += 1\n    print(maxcount)", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dep = list(map(int, input().split()))\n    l = [(arr[i], 1) for i in range(n)] + [(dep[i], -1) for i in range(n)]\n    l.sort()\n    d = 0\n    k = 0\n    for i in l:\n        k += i[1]\n        d = max(k, d)\n    print(d)", "inn = lambda : list(map(int, input().split()))\nfor i in range(int(input())):\n    int(input())\n    x = inn()\n    y = inn()\n    z = [(i, 1) for i in x] + [(i, -1) for i in y]\n    z.sort()\n    g = 0\n    max_g = 0\n    for (time, change) in z:\n        g += change\n        max_g = max(max_g, g)\n    print(max_g)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dep = list(map(int, input().split()))\n    arr.sort()\n    dep.sort()\n    total = 0\n    mx = 0\n    b = 0\n    for a in arr:\n        total += 1\n        while dep[b] <= a:\n            total -= 1\n            b += 1\n        mx = max(total, mx)\n    print(mx)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dep = list(map(int, input().split()))\n    times = [(arr[i], 1) for i in range(n)] + [(dep[i], -1) for i in range(n)]\n    times.sort()\n    maxGuests = 0\n    guests = 0\n    for (time, change) in times:\n        guests += change\n        maxGuests = max(maxGuests, guests)\n    print(maxGuests)", "for _ in range(int(input())):\n    guest = int(input())\n    (hours, count, max) = (0, 0, 0)\n    inside = list(map(int, input().split()))\n    outside = list(map(int, input().split()))\n    while hours < 1005:\n        for i in range(guest):\n            if hours == inside[i]:\n                count += 1\n                if count > max:\n                    max = count\n            if hours == outside[i]:\n                count -= 1\n        hours += 1\n    print(max)", "nos_test = int(input())\nfor _ in range(nos_test):\n    nos_guest = int(input())\n    (hours, counts, maxs) = (0, 0, 0)\n    ins = [int(x) for x in input().split()]\n    outs = [int(x) for x in input().split()]\n    while hours < 1005:\n        for i in range(nos_guest):\n            if hours == ins[i]:\n                counts += 1\n                if counts > maxs:\n                    maxs = counts\n            if hours == outs[i]:\n                counts -= 1\n        hours += 1\n    print(maxs)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = {}\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    for i in range(max(d)):\n        for j in range(n):\n            if i < d[j] and i >= a[j]:\n                if i in c:\n                    c[i] += 1\n                else:\n                    c[i] = 1\n    print(max(c.values()))", "def find_max_guests(arrival, departure):\n    arrival.sort()\n    departure.sort()\n    guests_in_hotel = 1\n    max_guests = 1\n    i = 1\n    j = 0\n    while i < len(arrival) and j < len(departure):\n        if arrival[i] < departure[j]:\n            guests_in_hotel += 1\n            if guests_in_hotel > max_guests:\n                max_guests = guests_in_hotel\n            i += 1\n        else:\n            guests_in_hotel -= 1\n            j += 1\n    return max_guests\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arrival = list(map(int, input().split()))\n    departure = list(map(int, input().split()))\n    print(find_max_guests(arrival, departure))", "t = int(input())\nfor t in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    ans = 0\n    v = [0] * 1000\n    for i in range(n):\n        for j in range(a[i], b[i]):\n            v[j] += 1\n            if v[j] > ans:\n                ans = v[j]\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list3 = list(map(int, input().split()))\n    list1.sort()\n    list3.sort()\n    i = 1\n    j = 0\n    m = 1\n    f = 0\n    c = 1\n    while i < n:\n        if list3[j] > list1[i]:\n            c = c + 1\n            i = i + 1\n        else:\n            j = j + 1\n            c = c - 1\n        if f == 0:\n            m = c\n            f = 1\n        elif c > m:\n            m = c\n    print(m)\n    t = t - 1", "from sys import stdin\nl = []\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    (a, b) = (list(map(int, stdin.readline().split())), list(map(int, stdin.readline().split())))\n    curr = 0\n    t = 0\n    m = 0\n    while t <= max(b):\n        curr = curr + a.count(t) - b.count(t)\n        if curr > m:\n            m = curr\n        t += 1\n    l.append(m)\nfor i in l:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    ls1 = list(map(int, input().split()))\n    ls2 = list(map(int, input().split()))\n    ls = [[ls1[i], ls2[i]] for i in range(n)]\n    count = 0\n    max_count = -10\n    ls.sort(key=lambda x: x[0])\n    for (i, l) in enumerate(ls):\n        for j in range(i):\n            dep_time = ls[j][1]\n            if dep_time != -1:\n                if dep_time < l[0]:\n                    ls[j][1] = -1\n                    count -= 1\n                elif dep_time == l[0]:\n                    ls[j][1] = -1\n                    count -= 1\n        count += 1\n        if count > max_count:\n            max_count = count\n    print(max_count)", "for _ in range(int(input())):\n    n = int(input())\n    ls1 = list(map(int, input().split()))\n    ls2 = list(map(int, input().split()))\n    ls = [[ls1[i], ls2[i]] for i in range(n)]\n    count = 0\n    max_count = -10\n    ls.sort(key=lambda x: x[0])\n    for (i, l) in enumerate(ls):\n        for j in range(i):\n            dep_time = ls[j][1]\n            if dep_time != -1:\n                if dep_time < l[0]:\n                    ls[j][1] = -1\n                    count -= 1\n                elif dep_time == l[0]:\n                    ls[j][1] = -1\n                    count -= 1\n        count += 1\n        if count > max_count:\n            max_count = count\n    print(max_count)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list3 = list(map(int, input().split()))\n    list1.sort()\n    list3.sort()\n    i = 1\n    j = 0\n    m = 1\n    f = 0\n    c = 1\n    while i < n:\n        if list3[j] > list1[i]:\n            c = c + 1\n            i = i + 1\n        else:\n            j = j + 1\n            c = c - 1\n        if f == 0:\n            m = c\n            f = 1\n        elif c > m:\n            m = c\n    print(m)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    ls1 = list(map(int, input().split()))\n    ls2 = list(map(int, input().split()))\n    ls = [[ls1[i], ls2[i]] for i in range(n)]\n    count = 0\n    max_count = -10\n    ls.sort(key=lambda x: x[0])\n    for (i, l) in enumerate(ls):\n        for j in range(i):\n            dep_time = ls[j][1]\n            if dep_time != -1:\n                if dep_time < l[0]:\n                    ls[j][1] = -1\n                    count -= 1\n                elif dep_time == l[0]:\n                    ls[j][1] = -1\n                    count -= 1\n        count += 1\n        if count > max_count:\n            max_count = count\n    print(max_count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    l = [0] * (max(d) + 1)\n    for i in range(n):\n        for j in range(a[i], d[i]):\n            l[j] += 1\n    print(max(l))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dep = list(map(int, input().split()))\n    spend = [0] * max(dep)\n    for i in range(n):\n        a = arr[i]\n        b = dep[i]\n        for j in range(a, b):\n            spend[j] = spend[j] + 1\n    print(max(spend))", "import statistics as s\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        (c, d) = (a[i], b[i])\n        for j in range(c, d):\n            l.append(j)\n    print(l.count(s.mode(l)))", "from statistics import mode\nfor _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        (a, b) = (l1[i], l2[i])\n        for j in range(a, b):\n            l.append(j)\n    print(l.count(mode(l)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    count = 0\n    for i in range(min(a), max(b)):\n        c = 0\n        for k in range(0, n):\n            if i >= a[k] and i < b[k]:\n                c += 1\n        if c > count:\n            count = c\n    print(count)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l1 = list(map(int, input().strip().split()))\n    l2 = list(map(int, input().strip().split()))\n    l = []\n    for i in range(n):\n        l.append((l1[i], 1))\n        l.append((l2[i], -1))\n    l.sort()\n    count = 0\n    ans = 0\n    for (i, j) in l:\n        count += j\n        ans = max(ans, count)\n    print(ans)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [(int(x), 1) for x in input().split()]\n    i = 0\n    for x in input().split():\n        l.append((int(x), -1))\n    l.sort()\n    v = 0\n    r = 0\n    for (i, j) in l:\n        v += j\n        r = max(r, v)\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    tim = [(A[i], 1) for i in range(n)] + [(B[i], -1) for i in range(n)]\n    tim.sort()\n    Guests = 0\n    guests = 0\n    for (ti, change) in tim:\n        guests += change\n        Guests = max(Guests, guests)\n    print(Guests)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst1 = list(map(int, input().split()))\n    lst2 = list(map(int, input().split()))\n    minx = min(lst1)\n    maxx = max(lst2)\n    jr = 0\n    xr = sorted(list(set(lst1 + lst2)))\n    for i in xr:\n        x = 0\n        for j in range(n):\n            v1 = lst1[j]\n            v2 = lst2[j]\n            if i in range(v1, v2):\n                x += 1\n        jr = max(jr, x)\n    print(jr)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a1 = {}\n    for i in a:\n        a1[i] = a1.get(i, 0) + 1\n    d = list(map(int, input().split()))\n    d1 = {}\n    for i in d:\n        d1[i] = d1.get(i, 0) + 1\n    (ans, count) = (0, 0)\n    high = max(max(a), max(d))\n    for time in range(high):\n        count += a1.get(time, 0) - d1.get(time, 0)\n        ans = max(count, ans)\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    _in = Counter(input().split())\n    _out = Counter(input().split())\n    res = 0\n    curr = 0\n    for i in range(1001):\n        x = str(i)\n        if x in _in:\n            curr += _in[x]\n        if x in _out:\n            curr -= _out[x]\n        res = max(res, curr)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dep = list(map(int, input().split()))\n    ans = []\n    for i in range(n):\n        ans.append((arr[i], 1))\n        ans.append((dep[i], 0))\n    ans.sort()\n    r = room = 0\n    for j in range(len(ans)):\n        if ans[j][1] == 1:\n            r += 1\n            room = max(r, room)\n        else:\n            r -= 1\n    print(room)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    entry = {}\n    exit = {}\n    c = 0\n    m = 0\n    for i in range(n):\n        entry[a[i]] = entry.get(a[i], 0) + 1\n        exit[d[i]] = exit.get(d[i], 0) + 1\n    for i in range(min(a), max(d) + 1):\n        x = entry.get(i, 0)\n        y = exit.get(i, 0)\n        if x > 0:\n            c += x\n        if y > 0:\n            c -= y\n        m = max(m, c)\n    print(m)", "for i in range(int(input())):\n    a = int(input())\n    x = input()\n    y = input()\n    x = x.split(' ')\n    y = y.split(' ')\n    b = []\n    c = 0\n    for _ in range(len(x)):\n        x[_] = int(x[_])\n        y[_] = int(y[_])\n    for _ in range(max(y)):\n        for j in x:\n            if j == _:\n                c += 1\n        for j in y:\n            if j == _:\n                c -= 1\n        b.append(c)\n    print(max(b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = [int(j) for j in input().split()]\n    l2 = [int(j) for j in input().split()]\n    l = [0] * 1000\n    for j in range(n):\n        for k in range(l1[j], l2[j]):\n            l[k] += 1\n    print(max(l))", "T = int(input())\ncontrol = 0\nwhile control < T:\n    len1 = int(input())\n    arri = input().split()\n    depa = input().split()\n    arrii = [eval(j) for j in arri]\n    depai = [eval(k) for k in depa]\n    stc = min(arrii)\n    endc = max(depai)\n    guests = 0\n    maxg = 0\n    for i in range(stc, endc + 1, 1):\n        if i in arrii:\n            c = arrii.count(i)\n            guests += c\n        if i in depai:\n            c = depai.count(i)\n            guests -= c\n        if guests > maxg:\n            maxg = guests\n    print(maxg)\n    control += 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = [int(j) for j in input().split()]\n    l2 = [int(j) for j in input().split()]\n    l = [0] * 1000\n    for j in range(n):\n        for k in range(l1[j], l2[j]):\n            l[k] += 1\n    print(max(l))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst1 = list(map(int, input().split()))\n    lst2 = list(map(int, input().split()))\n    minx = min(lst1)\n    maxx = max(lst2)\n    jr = 0\n    xr = sorted(list(set(lst1 + lst2)))\n    for i in xr:\n        x = 0\n        for j in range(n):\n            v1 = lst1[j]\n            v2 = lst2[j]\n            if i in range(v1, v2):\n                x += 1\n        jr = max(jr, x)\n    print(jr)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = d = []\n    p = input()\n    a = p.split()\n    a = list(map(int, a))\n    q = input()\n    d = q.split()\n    d = list(map(int, d))\n    (x, y) = (min(a), max(d))\n    m = 0\n    for j in range(x, y + 1):\n        c = 0\n        for k in range(n):\n            if j >= a[k] and j < d[k]:\n                c += 1\n        if c > m:\n            m = c\n    print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = d = []\n    p = input()\n    a = p.split()\n    a = list(map(int, a))\n    q = input()\n    d = q.split()\n    d = list(map(int, d))\n    (x, y) = (min(a), max(d))\n    m = 0\n    for j in range(x, y + 1):\n        c = 0\n        for k in range(n):\n            if j >= a[k] and j < d[k]:\n                c += 1\n        if c > m:\n            m = c\n    print(m)", "def key(l):\n    if l[1] == 'a':\n        return l[0] + 0.5\n    else:\n        return l[0]\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    a_ = []\n    for i in range(n):\n        a_.append((a[i], 'a'))\n        a_.append((d[i], 'd'))\n    a_.sort(key=key)\n    maxim = 0\n    curr = 0\n    for i in a_:\n        if i[1] == 'a':\n            curr += 1\n        if i[1] == 'd':\n            curr -= 1\n        if curr > maxim:\n            maxim = curr\n    print(maxim)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dep = list(map(int, input().split()))\n    times = [(arr[i], 1) for i in range(n)] + [(dep[i], -1) for i in range(n)]\n    times.sort()\n    maxGuests = 0\n    guests = 0\n    for (time, change) in times:\n        guests += change\n        maxGuests = max(maxGuests, guests)\n    print(maxGuests)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    st_time = list(map(int, input().split()))\n    dep_time = list(map(int, input().split()))\n    v = [0] * 1001\n    ans = 0\n    for i in range(n):\n        for j in range(st_time[i], dep_time[i]):\n            v[j] += 1\n            if ans < v[j]:\n                ans = v[j]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = dict(zip(range(max(b)), [0 for i in range(max(b))]))\n    for j in range(n):\n        for i in range(a[j], b[j]):\n            x[i] += 1\n    print(max(dict.values(x)))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    m = max(d)\n    c = 0\n    n = 0\n    s = 0\n    while n != m + 1:\n        if n in a:\n            c += a.count(n)\n        if n in d:\n            c -= d.count(n)\n        if c > s:\n            s = c\n        n += 1\n    print(s)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = dict(zip(range(max(b)), [0 for i in range(max(b))]))\n    for j in range(n):\n        for i in range(a[j], b[j]):\n            x[i] += 1\n    print(max(dict.values(x)))", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    b.sort()\n    c.sort()\n    g = 0\n    mg = 0\n    i = 0\n    j = 0\n    while i < len(b) and j < len(c):\n        if b[i] < c[j]:\n            g += 1\n            i += 1\n        else:\n            g -= 1\n            j += 1\n        mg = max(mg, g)\n    print(mg)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    m = max(d)\n    c = 0\n    n = 0\n    s = 0\n    while n != m + 1:\n        if n in a:\n            c += a.count(n)\n        if n in d:\n            c -= d.count(n)\n        if c > s:\n            s = c\n        n += 1\n    print(s)"]