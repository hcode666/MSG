["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = []\n    for _ in range(n):\n        arr.append(list(map(int, input().split())))\n    total_judge = 2 * n - 3\n    for i in range(n):\n        for j in range(n):\n            if i == 0 and j == 0:\n                pass\n            elif i == 0:\n                arr[i][j] += arr[i][j - 1]\n            elif j == 0:\n                arr[i][j] += arr[i - 1][j]\n            else:\n                arr[i][j] += max(arr[i - 1][j], arr[i][j - 1])\n    if arr[-1][-1] < 0:\n        print('Bad Judges')\n    else:\n        ans = arr[-1][-1] / total_judge\n        print('{:.6f}'.format(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = []\n    for _ in range(n):\n        arr.append(list(map(int, input().split())))\n    total_judge = 2 * n - 3\n    for i in range(n):\n        for j in range(n):\n            if i == 0 and j == 0:\n                pass\n            elif i == 0:\n                arr[i][j] += arr[i][j - 1]\n            elif j == 0:\n                arr[i][j] += arr[i - 1][j]\n            else:\n                arr[i][j] += max(arr[i - 1][j], arr[i][j - 1])\n    if arr[-1][-1] < 0:\n        print('Bad Judges')\n    else:\n        ans = arr[-1][-1] / total_judge\n        print('{:.6f}'.format(ans))", "import sys\n\ndef trunc(f, n):\n    return ('%.*f' % (n + 1, f))[:-1]\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    arr = []\n    for i in range(N):\n        row = input().split()\n        arr.append([])\n        for inp in row:\n            arr[i].append(int(inp))\n    greed = [[0]]\n    for i in range(1, N):\n        greed.append([])\n        greed[0].append(greed[0][i - 1] + arr[0][i])\n        greed[i].append(greed[i - 1][0] + arr[i][0])\n    for row in range(1, N):\n        for col in range(1, N):\n            possibility1 = greed[row - 1][col] + arr[row][col]\n            possibility2 = greed[row][col - 1] + arr[row][col]\n            finalResult = possibility1 if possibility1 > possibility2 else possibility2\n            greed[row].append(finalResult)\n    finalAnswer = float(greed[N - 1][N - 1])\n    if finalAnswer >= 0:\n        print('%s' % trunc(float(greed[N - 1][N - 1]) / (N + N - 3), 6))\n    else:\n        print('Bad Judges')\n    T -= 1", "import sys\n\ndef trunc(f, n):\n    return ('%.*f' % (n + 1, f))[:-1]\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    arr = []\n    for i in range(N):\n        row = input().split()\n        arr.append([])\n        for inp in row:\n            arr[i].append(int(inp))\n    greed = [[0]]\n    for i in range(1, N):\n        greed.append([])\n        greed[0].append(greed[0][i - 1] + arr[0][i])\n        greed[i].append(greed[i - 1][0] + arr[i][0])\n    for row in range(1, N):\n        for col in range(1, N):\n            possibility1 = greed[row - 1][col] + arr[row][col]\n            possibility2 = greed[row][col - 1] + arr[row][col]\n            finalResult = possibility1 if possibility1 > possibility2 else possibility2\n            greed[row].append(finalResult)\n    finalAnswer = float(greed[N - 1][N - 1])\n    if finalAnswer >= 0:\n        print('%s' % trunc(float(greed[N - 1][N - 1]) / (N + N - 3), 6))\n    else:\n        print('Bad Judges')\n    T -= 1", "from itertools import islice\n\ndef calculate_rankings(judges):\n    judges = [[-10 ** 6] * len(judges[0])] + judges\n    judges = [[-10 ** 6] + row for row in judges]\n    judges[0][1] = 0\n    for (row_i, row) in islice(enumerate(judges), 1, None):\n        for (cell_i, cell) in islice(enumerate(row), 1, None):\n            judges[row_i][cell_i] += max(row[cell_i - 1], judges[row_i - 1][cell_i])\n    return judges[-1][-1] / (2 * len(judges) - 5)\nfor _ in range(int(input())):\n    n = int(input())\n    judges = [[int(j) for j in input().split()] for _ in range(n)]\n    ranking = calculate_rankings(judges)\n    print('{:.6f}'.format(ranking) if ranking >= 0 else 'Bad Judges')", "import sys\n\ndef trunc(f, n):\n    return ('%.*f' % (n + 1, f))[:-1]\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    arr = []\n    for i in range(N):\n        row = input().split()\n        arr.append([])\n        for inp in row:\n            arr[i].append(int(inp))\n    greed = [[0]]\n    for i in range(1, N):\n        greed.append([])\n        greed[0].append(greed[0][i - 1] + arr[0][i])\n        greed[i].append(greed[i - 1][0] + arr[i][0])\n    for row in range(1, N):\n        for col in range(1, N):\n            possibility1 = greed[row - 1][col] + arr[row][col]\n            possibility2 = greed[row][col - 1] + arr[row][col]\n            finalResult = possibility1 if possibility1 > possibility2 else possibility2\n            greed[row].append(finalResult)\n    finalAnswer = float(greed[N - 1][N - 1])\n    if finalAnswer >= 0:\n        print('%s' % trunc(float(greed[N - 1][N - 1]) / (N + N - 3), 6))\n    else:\n        print('Bad Judges')\n    T -= 1", "import sys\n\ndef trunc(f, n):\n    return ('%.*f' % (n + 1, f))[:-1]\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    arr = []\n    for i in range(N):\n        row = input().split()\n        arr.append([])\n        for inp in row:\n            arr[i].append(int(inp))\n    greed = [[0]]\n    for i in range(1, N):\n        greed.append([])\n        greed[0].append(greed[0][i - 1] + arr[0][i])\n        greed[i].append(greed[i - 1][0] + arr[i][0])\n    for row in range(1, N):\n        for col in range(1, N):\n            possibility1 = greed[row - 1][col] + arr[row][col]\n            possibility2 = greed[row][col - 1] + arr[row][col]\n            finalResult = possibility1 if possibility1 > possibility2 else possibility2\n            greed[row].append(finalResult)\n    finalAnswer = float(greed[N - 1][N - 1])\n    if finalAnswer >= 0:\n        print('%s' % trunc(float(greed[N - 1][N - 1]) / (N + N - 3), 6))\n    else:\n        print('Bad Judges')\n    T -= 1", "import sys\n\ndef trunc(f, n):\n    return ('%.*f' % (n + 1, f))[:-1]\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    arr = []\n    for i in range(N):\n        row = input().split()\n        arr.append([])\n        for inp in row:\n            arr[i].append(int(inp))\n    greed = [[0]]\n    for i in range(1, N):\n        greed.append([])\n        greed[0].append(greed[0][i - 1] + arr[0][i])\n        greed[i].append(greed[i - 1][0] + arr[i][0])\n    for row in range(1, N):\n        for col in range(1, N):\n            possibility1 = greed[row - 1][col] + arr[row][col]\n            possibility2 = greed[row][col - 1] + arr[row][col]\n            finalResult = possibility1 if possibility1 > possibility2 else possibility2\n            greed[row].append(finalResult)\n    finalAnswer = float(greed[N - 1][N - 1])\n    if finalAnswer >= 0:\n        print('%s' % trunc(float(greed[N - 1][N - 1]) / (N + N - 3), 6))\n    else:\n        print('Bad Judges')\n    T -= 1", "import sys\n\ndef trunc(f, n):\n    return ('%.*f' % (n + 1, f))[:-1]\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    arr = []\n    for i in range(N):\n        row = input().split()\n        arr.append([])\n        for inp in row:\n            arr[i].append(int(inp))\n    greed = [[0]]\n    for i in range(1, N):\n        greed.append([])\n        greed[0].append(greed[0][i - 1] + arr[0][i])\n        greed[i].append(greed[i - 1][0] + arr[i][0])\n    for row in range(1, N):\n        for col in range(1, N):\n            possibility1 = greed[row - 1][col] + arr[row][col]\n            possibility2 = greed[row][col - 1] + arr[row][col]\n            finalResult = possibility1 if possibility1 > possibility2 else possibility2\n            greed[row].append(finalResult)\n    finalAnswer = float(greed[N - 1][N - 1])\n    if finalAnswer >= 0:\n        print('%s' % trunc(float(greed[N - 1][N - 1]) / (N + N - 3), 6))\n    else:\n        print('Bad Judges')\n    T -= 1", "import sys\n\ndef trunc(f, n):\n    return ('%.*f' % (n + 1, f))[:-1]\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    arr = []\n    for i in range(N):\n        row = input().split()\n        arr.append([])\n        for inp in row:\n            arr[i].append(int(inp))\n    greed = [[0]]\n    for i in range(1, N):\n        greed.append([])\n        greed[0].append(greed[0][i - 1] + arr[0][i])\n        greed[i].append(greed[i - 1][0] + arr[i][0])\n    for row in range(1, N):\n        for col in range(1, N):\n            possibility1 = greed[row - 1][col] + arr[row][col]\n            possibility2 = greed[row][col - 1] + arr[row][col]\n            finalResult = possibility1 if possibility1 > possibility2 else possibility2\n            greed[row].append(finalResult)\n    finalAnswer = float(greed[N - 1][N - 1])\n    if finalAnswer >= 0:\n        print('%s' % trunc(float(greed[N - 1][N - 1]) / (N + N - 3), 6))\n    else:\n        print('Bad Judges')\n    T -= 1", "import sys\n\ndef trunc(f, n):\n    return ('%.*f' % (n + 1, f))[:-1]\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    arr = []\n    for i in range(N):\n        row = input().split()\n        arr.append([])\n        for inp in row:\n            arr[i].append(int(inp))\n    greed = [[0]]\n    for i in range(1, N):\n        greed.append([])\n        greed[0].append(greed[0][i - 1] + arr[0][i])\n        greed[i].append(greed[i - 1][0] + arr[i][0])\n    for row in range(1, N):\n        for col in range(1, N):\n            possibility1 = greed[row - 1][col] + arr[row][col]\n            possibility2 = greed[row][col - 1] + arr[row][col]\n            finalResult = possibility1 if possibility1 > possibility2 else possibility2\n            greed[row].append(finalResult)\n    finalAnswer = float(greed[N - 1][N - 1])\n    if finalAnswer >= 0:\n        print('%s' % trunc(float(greed[N - 1][N - 1]) / (N + N - 3), 6))\n    else:\n        print('Bad Judges')\n    T -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    ans = [[0] * n for i in range(n)]\n    for i in range(1, n):\n        ans[i][0] = ans[i - 1][0] + a[i][0]\n        ans[0][i] = ans[0][i - 1] + a[0][i]\n    for i in range(1, n):\n        for j in range(1, n):\n            ans[i][j] = a[i][j] + max(ans[i - 1][j], ans[i][j - 1])\n    m = ans[n - 1][n - 1]\n    tot = 2 * (n - 1) - 1\n    print('{:.6f}'.format(m / tot) if m >= 0 else 'Bad Judges')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    ans = [[0] * n for i in range(n)]\n    for i in range(1, n):\n        ans[i][0] = ans[i - 1][0] + a[i][0]\n        ans[0][i] = ans[0][i - 1] + a[0][i]\n    for i in range(1, n):\n        for j in range(1, n):\n            ans[i][j] = a[i][j] + max(ans[i - 1][j], ans[i][j - 1])\n    m = ans[n - 1][n - 1]\n    tot = 2 * (n - 1) - 1\n    print('{:.6f}'.format(m / tot) if m >= 0 else 'Bad Judges')", "tn = int(input())\nfor _ in range(tn):\n    n = int(input())\n    ar = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(n + 1)] for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        dp[0][i] = dp[i][0] = -1000000000\n    for i in range(n):\n        for j in range(n):\n            if i == 0 and j == 0:\n                dp[i + 1][j + 1] = ar[i][j]\n                continue\n            dp[i + 1][j + 1] = max(dp[i][j + 1], dp[i + 1][j]) + ar[i][j]\n    sm = dp[-1][-1] / (2 * n - 3)\n    if sm >= 0:\n        print('{:.6f}'.format(sm))\n    else:\n        print('Bad Judges')", "tn = int(input())\nfor _ in range(tn):\n    n = int(input())\n    ar = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(n + 1)] for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        dp[0][i] = dp[i][0] = -1000000000\n    for i in range(n):\n        for j in range(n):\n            if i == 0 and j == 0:\n                dp[i + 1][j + 1] = ar[i][j]\n                continue\n            dp[i + 1][j + 1] = max(dp[i][j + 1], dp[i + 1][j]) + ar[i][j]\n    sm = dp[-1][-1] / (2 * n - 3)\n    if sm >= 0:\n        print('{:.6f}'.format(sm))\n    else:\n        print('Bad Judges')", "for t in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    dp = []\n    for i in range(n):\n        dp.append([])\n    for i in range(n):\n        for j in range(n):\n            dp[i].append(0)\n    dp[0][0] = 0\n    for j in range(1, n):\n        dp[0][j] = dp[0][j - 1] + a[0][j]\n    for i in range(1, n):\n        dp[i][0] = dp[i - 1][0] + a[i][0]\n    for i in range(1, n):\n        for j in range(1, n):\n            dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]) + a[i][j]\n    if dp[n - 1][n - 1] < 0:\n        print('Bad Judges')\n    else:\n        x = n - 2\n        x *= 2\n        x += 1\n        print('%.6f' % (dp[n - 1][n - 1] / x))", "t = int(input())\nfor z in range(t):\n    size = int(input())\n    array = []\n    for i in range(size):\n        array.append(list(map(int, input().split())))\n    for i in range(1, size):\n        array[i][0] = int(array[i - 1][0]) + int(array[i][0])\n    for i in range(1, size):\n        array[0][i] = int(array[0][i - 1]) + int(array[0][i])\n    for i in range(1, size):\n        for j in range(1, size):\n            array[i][j] = max(array[i - 1][j], array[i][j - 1]) + array[i][j]\n    value = array[size - 1][size - 1] / (2 * size - 3)\n    if value < 0:\n        print('Bad Judges')\n    else:\n        print('%.6f' % value)", "import math\nimport sys\nimport string\nt = int(input())\nwhile t:\n    n = int(input())\n    arr = [0] * n\n    arr[0] = [int(x) for x in input().split()]\n    for i in range(1, n):\n        arr[0][i] += arr[0][i - 1]\n    for i in range(1, n):\n        arr[i] = [int(x) for x in input().split()]\n        arr[i][0] += arr[i - 1][0]\n        for j in range(1, n):\n            arr[i][j] += max(arr[i][j - 1], arr[i - 1][j])\n    if arr[n - 1][n - 1] < 0:\n        print('Bad Judges')\n    else:\n        print('%.6f' % (arr[n - 1][n - 1] / (2 * n - 3)))\n    t -= 1", "import sys\n\ndef trunc(f, n):\n    return ('%.*f' % (n + 1, f))[:-1]\nT = int(input())\nwhile T > 0:\n    N = int(input())\n    arr = []\n    for i in range(N):\n        row = input().split()\n        arr.append([])\n        for inp in row:\n            arr[i].append(int(inp))\n    greed = [[0]]\n    for i in range(1, N):\n        greed.append([])\n        greed[0].append(greed[0][i - 1] + arr[0][i])\n        greed[i].append(greed[i - 1][0] + arr[i][0])\n    for row in range(1, N):\n        for col in range(1, N):\n            possibility1 = greed[row - 1][col] + arr[row][col]\n            possibility2 = greed[row][col - 1] + arr[row][col]\n            finalResult = possibility1 if possibility1 > possibility2 else possibility2\n            greed[row].append(finalResult)\n    finalAnswer = float(greed[N - 1][N - 1])\n    if finalAnswer >= 0:\n        print('%s' % trunc(float(greed[N - 1][N - 1]) / (N + N - 3), 6))\n    else:\n        print('Bad Judges')\n    T -= 1"]