["n = int(input())\nl = []\nl2 = []\nc = 0\nm = []\nfor i in range(n):\n    f = input()\n    sub = set()\n    l3 = ['0' * (8 - len(x)) + x for x in f]\n    l2.append(l3)\n    m.append(int(f, 2))\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        if l2[i][j][-1] == '0' and m[i] & m[j] != 0:\n            c += 2\nprint(c)", "n = int(input())\nl = []\nl2 = []\nc = 0\nm = []\nfor i in range(n):\n    f = input()\n    sub = set()\n    l3 = ['0' * (8 - len(x)) + x for x in f]\n    l2.append(l3)\n    m.append(int(f, 2))\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        if l2[i][j][-1] == '0' and m[i] & m[j] != 0:\n            c += 2\nprint(c)", "n = int(input())\nl = []\nl2 = []\nc = 0\nm = []\nfor i in range(n):\n    f = input()\n    sub = set()\n    l3 = ['0' * (8 - len(x)) + x for x in f]\n    l2.append(l3)\n    m.append(int(f, 2))\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        if l2[i][j][-1] == '0' and m[i] & m[j] != 0:\n            c += 2\nprint(c)", "n = int(input())\na = []\nb = []\nfor i in range(n):\n    k = input()\n    b.append(k)\n    a.append(int(k, 2))\ncnt = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if b[i][j] == '0' and a[i] & a[j]:\n            cnt += 1\nprint(int(cnt * 2))", "n = int(input())\na = []\nb = []\nfor i in range(n):\n    k = input()\n    b.append(k)\n    a.append(int(k, 2))\ncnt = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if b[i][j] == '0' and a[i] & a[j]:\n            cnt += 1\nprint(int(cnt * 2))", "n = int(input())\narr = []\nadj = []\nfor i in range(n):\n    k = input()\n    adj.append(k)\n    arr.append(int(k, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and arr[i] & arr[j]:\n            count += 1\nprint(int(count * 2))", "n = int(input())\narr = []\nadj = []\nfor i in range(n):\n    k = input()\n    adj.append(k)\n    arr.append(int(k, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and arr[i] & arr[j]:\n            count += 1\nprint(int(count * 2))", "n = int(input())\narr = []\nadj = []\nfor i in range(n):\n    k = input()\n    adj.append(k)\n    arr.append(int(k, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and arr[i] & arr[j]:\n            count += 1\nprint(int(count * 2))", "n = int(input())\narr = []\nadj = []\nfor i in range(n):\n    k = input()\n    adj.append(k)\n    arr.append(int(k, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and arr[i] & arr[j]:\n            count += 1\nprint(int(count * 2))", "n = int(input())\narr = []\nadj = []\nfor i in range(n):\n    k = input()\n    adj.append(k)\n    arr.append(int(k, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and arr[i] & arr[j]:\n            count += 1\nprint(int(count * 2))", "n = int(input())\na = []\nb = []\nfor i in range(n):\n    k = input()\n    b.append(k)\n    a.append(int(k, 2))\ncnt = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if b[i][j] == '0' and a[i] & a[j]:\n            cnt += 1\nprint(int(cnt * 2))", "n = int(input())\narr = []\nadj = []\nfor i in range(n):\n    k = input()\n    adj.append(k)\n    arr.append(int(k, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and arr[i] & arr[j]:\n            count += 1\nprint(int(count * 2))", "n = int(input())\narr = []\nadj = []\nfor i in range(n):\n    k = input()\n    adj.append(k)\n    arr.append(int(k, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and arr[i] & arr[j]:\n            count += 1\nprint(int(count * 2))", "n = int(input())\narr = []\nadj = []\nfor i in range(n):\n    k = input()\n    adj.append(k)\n    arr.append(int(k, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and arr[i] & arr[j]:\n            count += 1\nprint(int(count * 2))", "a = []\nb = []\nn = int(input())\nfor _ in range(n):\n    inp = input()\n    a.append(inp)\n    b.append(int(inp, 2))\nsum = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j]:\n            sum += 1\nprint(sum * 2)", "a = []\nb = []\nn = int(input())\nfor _ in range(n):\n    inp = input()\n    a.append(inp)\n    b.append(int(inp, 2))\nsum = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j]:\n            sum += 1\nprint(sum * 2)", "def requestPending():\n    n = int(input())\n    bitset = []\n    nums = []\n    for i in range(n):\n        bitset.append(input())\n        nums.append(int(bitset[i], 2))\n    count = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if bitset[i][j] == '0' and nums[i] & nums[j] != 0:\n                count += 2\n    print(count)\nrequestPending()", "def requestPending():\n    n = int(input())\n    bitset = []\n    nums = []\n    for i in range(n):\n        bitset.append(input())\n        nums.append(int(bitset[i], 2))\n    count = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if bitset[i][j] == '0' and nums[i] & nums[j] != 0:\n                count += 2\n    print(count)\nrequestPending()", "def requestPending():\n    n = int(input())\n    bitset = []\n    nums = []\n    for i in range(n):\n        bitset.append(input())\n        nums.append(int(bitset[i], 2))\n    count = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if bitset[i][j] == '0' and nums[i] & nums[j] != 0:\n                count += 2\n    print(count)\nrequestPending()", "n = int(input())\nl = []\nl2 = []\nc = 0\nm = []\nfor i in range(n):\n    f = input()\n    sub = set()\n    l3 = ['0' * (8 - len(x)) + x for x in f]\n    l2.append(l3)\n    m.append(int(f, 2))\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        if l2[i][j][-1] == '0' and m[i] & m[j] != 0:\n            c += 2\nprint(c)", "n = int(input())\nl = []\nl2 = []\nc = 0\nm = []\nfor i in range(n):\n    f = input()\n    sub = set()\n    l3 = ['0' * (8 - len(x)) + x for x in f]\n    l2.append(l3)\n    m.append(int(f, 2))\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        if l2[i][j][-1] == '0' and m[i] & m[j] != 0:\n            c += 2\nprint(c)", "n = int(input())\nl = []\nl2 = []\nc = 0\nm = []\nfor i in range(n):\n    f = input()\n    sub = set()\n    l2.append(f)\n    m.append(int(f, 2))\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        if l2[i][j] == '0' and m[i] & m[j] != 0:\n            c += 2\nprint(c)", "n = int(input())\nl = []\nl2 = []\nc = 0\nm = []\nfor i in range(n):\n    f = input()\n    sub = set()\n    l3 = ['0' * (8 - len(x)) + x for x in f]\n    l2.append(l3)\n    m.append(int(f, 2))\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        if l2[i][j][-1] == '0' and m[i] & m[j] != 0:\n            c += 2\nprint(c)", "n = int(input())\nrelMatrix = []\nbinArray = []\nsuggConn = 0\nfor i in range(0, n):\n    binValues = ['{0:04b}'.format(int(x)) for x in input()]\n    relMatrix.append(binValues)\n    binArray.append(int(''.join(binValues), 2))\nfor i in range(0, n):\n    for j in range(i, n):\n        if i != j and int(relMatrix[i][j]) == 0:\n            if binArray[i] & binArray[j] != 0:\n                suggConn += 2\nprint(suggConn)", "n = int(input())\nrelMatrix = []\nbinArray = []\nsuggConn = 0\nfor i in range(0, n):\n    binValues = ['{0:04b}'.format(int(x)) for x in input()]\n    relMatrix.append(binValues)\n    binArray.append(int(''.join(binValues), 2))\nfor i in range(0, n):\n    for j in range(i, n):\n        if i != j and int(relMatrix[i][j]) == 0:\n            if binArray[i] & binArray[j] != 0:\n                suggConn += 2\nprint(suggConn)", "a = []\nb = []\nres = 0\nn = int(input())\nfor i in range(n):\n    s = input()\n    a.append(list(s))\n    b.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j] != 0:\n            res += 1\nprint(res * 2)", "a = []\nb = []\nres = 0\nn = int(input())\nfor i in range(n):\n    s = input()\n    a.append(list(s))\n    b.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j] != 0:\n            res += 1\nprint(res * 2)", "a = []\nb = []\nres = 0\nn = int(input())\nfor i in range(n):\n    s = input()\n    a.append(list(s))\n    b.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j] != 0:\n            res += 1\nprint(res * 2)", "import sys\nn = int(sys.stdin.readline())\nadj_mat = []\nints = []\nfor ln_i in range(n):\n    adj_mat.append(sys.stdin.readline())\n    ints.append(int(adj_mat[ln_i], 2))\nrequests = 0\nfor i in range(n):\n    for j in range(i):\n        if adj_mat[i][j] == '0':\n            if ints[i] & ints[j]:\n                requests += 2\nsys.stdout.write(str(requests) + '\\n')", "a = []\nb = []\nres = 0\nn = int(input())\nfor i in range(n):\n    s = input()\n    a.append(list(s))\n    b.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j] != 0:\n            res += 1\nprint(res * 2)", "from math import ceil, sqrt, log, gcd\nfrom collections import deque, defaultdict as dd\nfrom os import path\nimport sys\nt = int(input())\na = []\nadj = []\nz = 0\nfor f in range(t):\n    s = input()\n    adj.append(s)\n    a.append(int(s, 2))\nfor u in range(t):\n    for v in range(u + 1, t):\n        if adj[u][v] == '0' and a[u] & a[v]:\n            z += 2\nprint(int(z))", "t = int(input())\na = []\nadj = []\nfor i in range(t):\n    s = input()\n    adj.append(s)\n    a.append(int(s, 2))\nz = 0\nfor u in range(t):\n    for v in range(u + 1, t):\n        if adj[u][v] == '0' and a[u] & a[v]:\n            z += 2\nprint(int(z))", "from math import ceil, sqrt, log, gcd\nfrom collections import deque, defaultdict as dd\nfrom os import path\nimport sys\nt = int(input())\na = []\nadj = []\nz = 0\nfor f in range(t):\n    s = input()\n    adj.append(s)\n    a.append(int(s, 2))\nfor u in range(t):\n    for v in range(u + 1, t):\n        if adj[u][v] == '0' and a[u] & a[v]:\n            z += 1\nprint(int(2 * z))", "n = int(input())\nadj = []\na = []\nfrq = 0\nfor i in range(n):\n    s = input()\n    adj.append(list(s))\n    a.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and a[i] & a[j] != 0:\n            frq += 2\nprint(frq)", "n = int(input())\nadj = []\na = []\nfrq = 0\nfor i in range(n):\n    s = input()\n    adj.append(list(s))\n    a.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and a[i] & a[j] != 0:\n            frq += 2\nprint(frq)", "n = int(input())\nfriend_list = []\nbin = []\nfor i in range(n):\n    r = input()\n    friend_list.append(r)\n    bin.append(int(r, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if friend_list[i][j] == '0' and bin[i] & bin[j]:\n            count += 1\nprint(count * 2)", "n = int(input())\nfriend_list = []\nbin = []\nfor i in range(n):\n    r = input()\n    friend_list.append(r)\n    bin.append(int(r, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if friend_list[i][j] == '0' and bin[i] & bin[j]:\n            count += 2\nprint(count)", "n = int(input())\narr = []\nadj = []\nfor i in range(n):\n    k = input()\n    adj.append(k)\n    arr.append(int(k, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and arr[i] & arr[j]:\n            count += 1\nprint(int(count * 2))", "try:\n    n = int(input())\n    store = []\n    st = []\n    for i in range(n):\n        m = input()\n        store.append(m)\n        st.append(int(m, 2))\n    res = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if store[i][j] == '0' and st[i] & st[j] > 0:\n                res += 2\n    print(res)\nexcept:\n    pass", "try:\n    n = int(input())\n    store = []\n    st = []\n    for i in range(n):\n        m = input()\n        store.append(m)\n        st.append(int(m, 2))\n    res = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if store[i][j] == '0' and st[i] & st[j] > 0:\n                res += 2\n    print(res)\nexcept:\n    pass", "try:\n    n = int(input())\n    store = []\n    st = []\n    for i in range(n):\n        m = input()\n        store.append(m)\n        st.append(int(m, 2))\n    res = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if store[i][j] == '0' and st[i] & st[j] > 0:\n                res += 2\n    print(res)\nexcept:\n    pass", "try:\n    n = int(input())\n    store = []\n    st = []\n    for i in range(n):\n        m = input()\n        store.append(m)\n        st.append(int(m, 2))\n    res = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if store[i][j] == '0' and st[i] & st[j] > 0:\n                res += 2\n    print(res)\nexcept:\n    pass", "try:\n    n = int(input())\n    store = []\n    st = []\n    for i in range(n):\n        m = input()\n        store.append(m)\n        st.append(int(m, 2))\n    res = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if store[i][j] == '0' and st[i] & st[j] > 0:\n                res += 2\n    print(res)\nexcept:\n    pass", "t = int(input())\nl = []\nl1 = []\nfor i in range(t):\n    s = input()\n    l.append(s)\n    l1.append(int(s, 2))\nj = 0\nk = 0\ncout = 0\nwhile j < t - 1:\n    k = j + 1\n    while k < t:\n        if l[j][k] == '0' and l1[j] & l1[k] >= 1:\n            cout = cout + 2\n        k = k + 1\n    j = j + 1\nprint(cout)", "a = []\nb = []\nn = int(input())\nfor _ in range(n):\n    inp = input()\n    a.append(inp)\n    b.append(int(inp, 2))\nsum = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j]:\n            sum += 1\nprint(sum * 2)", "a = []\nb = []\nn = int(input())\nfor _ in range(n):\n    inp = input()\n    a.append(inp)\n    b.append(int(inp, 2))\nsum = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j]:\n            sum += 1\nprint(sum * 2)", "try:\n    l = int(input())\n    arr = []\n    rows = []\n    count = 0\n    for _ in range(l):\n        temp = input()\n        arr.append(int(temp, 2))\n        rows.append(list(temp))\n    for i in range(l):\n        for j in range(i + 1, l):\n            if rows[i][j] == '0':\n                if arr[i] & arr[j] > 0:\n                    count += 2\n    print(count)\nexcept:\n    pass", "a = []\nb = []\nn = int(input())\nfor _ in range(n):\n    inp = input()\n    a.append(inp)\n    b.append(int(inp, 2))\nsum = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j]:\n            sum += 1\nprint(sum * 2)", "try:\n    a = []\n    b = []\n    n = int(input())\n    for _ in range(n):\n        inp = input()\n        a.append(inp)\n        b.append(int(inp, 2))\n    sum = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i][j] == '0' and b[i] & b[j]:\n                sum += 1\n    print(sum * 2)\nexcept:\n    pass", "n = int(input())\nstring = []\nbinary = []\nfor i in range(n):\n    inp = input()\n    string.append(inp)\n    binary.append(int(inp, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if string[i][j] == '0' and binary[i] & binary[j]:\n            count += 1\nprint(count * 2)", "n = int(input())\nstring = []\nbinary = []\nfor i in range(n):\n    inp = input()\n    string.append(inp)\n    binary.append(int(inp, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if string[i][j] == '0' and binary[i] & binary[j]:\n            count += 1\nprint(count * 2)", "def check(a, b, n):\n    if a & b:\n        return True\n    return False\nn = int(input())\nl = []\nll = []\nfor _ in range(n):\n    x = input()\n    l.append(list(x))\n    ll.append(int(x, 2))\nreq = 0\nfor i in range(n):\n    for j in range(1 + i, n):\n        if l[i][j] == '0' and check(ll[i], ll[j], n):\n            req += 1\nprint(2 * req)", "n = int(input())\narr = []\nadj = []\nfor i in range(n):\n    k = input()\n    adj.append(k)\n    arr.append(int(k, 2))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and arr[i] & arr[j]:\n            count += 1\nprint(int(count * 2))", "a = []\nb = []\nres = 0\ntry:\n    n = int(input())\nexcept EOFError:\n    exit(0)\nfor i in range(n):\n    s = input()\n    a.append(list(s))\n    b.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j] != 0:\n            res += 1\nprint(res * 2)", "import sys\ni = int(sys.stdin.readline())\narr = []\ncomp = [0] * i\ncount = 0\nfor _ in range(i):\n    p = input()\n    arr.append(list(p))\n    comp[_] = int(p, 2)\nfor t in range(i):\n    for a in range(t):\n        if arr[t][a] == '0':\n            if comp[t] & comp[a]:\n                count += 2\nprint(count)", "import sys\nN = int(sys.stdin.readline())\ngrid = [0] * N\ncompare = [0] * N\nans = 0\nfor i in range(N):\n    grid[i] = sys.stdin.readline()\n    compare[i] = int(grid[i], 2)\nfor i in range(N):\n    for j in range(i):\n        if grid[i][j] == '0':\n            if compare[i] & compare[j]:\n                ans += 2\nprint(ans)", "a = []\nb = []\nres = 0\nn = int(input())\nfor i in range(n):\n    s = input()\n    a.append(list(s))\n    b.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j] != 0:\n            res += 1\nprint(res * 2)", "n = int(input())\nB = []\nfor _ in range(n):\n    x = input()\n    B.append(int(x, 2))\ncount = 0\nJ = 1 << n\nfor i in range(n):\n    j = 1\n    p = n - 1\n    while j != J:\n        if p == i:\n            j <<= 1\n            p -= 1\n            continue\n        if not B[i] & j:\n            if B[i] & B[p]:\n                count += 1\n        j <<= 1\n        p -= 1\nprint(count)", "a = []\nb = []\nres = 0\ntry:\n    n = int(input())\nexcept EOFError:\n    exit(0)\nfor i in range(n):\n    s = input()\n    a.append(list(s))\n    b.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j] != 0:\n            res += 1\nprint(res * 2)", "a = []\nb = []\nres = 0\ntry:\n    n = int(input())\nexcept EOFError:\n    exit(0)\nfor i in range(n):\n    s = input()\n    a.append(list(s))\n    b.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j] != 0:\n            res += 1\nprint(res * 2)", "a = []\nb = []\nres = 0\ntry:\n    n = int(input())\nexcept EOFError:\n    exit(0)\nfor i in range(n):\n    s = input()\n    a.append(list(s))\n    b.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j] != 0:\n            res += 1\nprint(res * 2)", "a = []\nb = []\nres = 0\ntry:\n    n = int(input())\nexcept EOFError:\n    exit(0)\nfor i in range(n):\n    s = input()\n    a.append(list(s))\n    b.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0' and b[i] & b[j] != 0:\n            res += 1\nprint(res * 2)", "adj = []\na = []\nf = 0\nn = int(input())\nfor i in range(n):\n    s = input()\n    adj.append(list(s))\n    a.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and a[i] & a[j] != 0:\n            f += 2\nprint(f)", "import sys\nn = int(sys.stdin.readline())\nadj_mat = []\nints = []\nfor ln_i in range(n):\n    adj_mat.append(sys.stdin.readline())\n    ints.append(int(adj_mat[ln_i], 2))\nrequests = 0\nfor i in range(n):\n    for j in range(i):\n        if adj_mat[i][j] == '0':\n            if ints[i] & ints[j]:\n                requests += 2\nsys.stdout.write(str(requests) + '\\n')", "n = int(input())\nadj = []\na = []\nfrq = 0\nfor i in range(n):\n    s = input()\n    adj.append(list(s))\n    a.append(int(s, 2))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if adj[i][j] == '0' and a[i] & a[j] != 0:\n            frq += 2\nprint(frq)", "n = int(input())\narr = []\na = []\nfor a0 in range(n):\n    arr.append(input())\nfor i in arr:\n    a.append(int(i, base=2))\nans = 0\nfor i in range(len(a) - 1):\n    for j in range(i + 1, len(a)):\n        if arr[i][j] == '0':\n            if a[i] & a[j] != 0:\n                ans += 2\nprint(ans)", "n = int(input())\na = [[0 for _ in range(n)] for _ in range(n)]\nbi = [0 for _ in range(n)]\nfor i in range(n):\n    k = input()\n    a[i] = k\n    bi[i] = int(k, 2)\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i][j] == '0':\n            if bi[i] & bi[j]:\n                count += 1\nprint(count * 2)", "n = int(input())\nvertex = [input() for x in range(n)]\nfriendship = [int(x, 2) for x in vertex]\nlimit = 0\ncount = 0\nfor i in range(n):\n    for j in range(limit):\n        if vertex[i][j] == '0' and i != j and friendship[i] & friendship[j]:\n            count += 2\n    limit += 1\nprint(count)", "n = int(input())\nvertex = [input() for x in range(n)]\nfriendship = [int(x, 2) for x in vertex]\nlimit = 0\ncount = 0\nfor i in range(n):\n    for j in range(limit):\n        if vertex[i][j] == '0' and i != j and friendship[i] & friendship[j]:\n            count += 2\n    limit += 1\nprint(count)", "n = int(input())\narray = [input() for i in range(n)]\nfrndship = [int(x, 2) for x in array]\ncount = 0\nlimit = 0\nfor i in range(n):\n    for j in range(limit):\n        if array[i][j] == '0' and i != j and frndship[i] & frndship[j]:\n            count += 2\n    limit += 1\nprint(count)", "a = int(input())\nc = []\nd = []\nfor i in range(a):\n    now = input()\n    c.append(now)\n    d.append(int(now, 2))\ni = 0\nfor k in range(a):\n    for j in range(k + 1, a):\n        if c[k][j] != '1':\n            if int(d[k]) & int(d[j]):\n                i = i + 2\nprint(i)", "N = int(input())\nmatrix = []\nis_friend = []\nfor i in range(0, N):\n    row = []\n    line = input()\n    is_friend.append(line)\n    matrix.append(int(line, 2))\ncount = 0\nfor i in range(0, N):\n    for j in range(i + 1, N):\n        if is_friend[i][j] != '1' and matrix[i] & matrix[j] > 0:\n            count += 2\nprint(count)", "total = 0\nfriends = int(input())\nadjmat = [0] * friends\nbinreps = [0] * friends\nfor line in range(friends):\n    sa = input()\n    adjmat[line] = sa\n    binreps[line] = int(sa, 2)\nfor i in range(friends - 1):\n    for j in range(i + 1, friends):\n        if adjmat[i][j] != '1':\n            if binreps[i] & binreps[j] != 0:\n                total += 2\nprint(total)", "import sys\nN = int(sys.stdin.readline())\ngrid = []\ncompare = [0] * N\nans = 0\nfor i in range(N):\n    grid.append(sys.stdin.readline().strip())\n    compare[i] = int(grid[i], 2)\nfor i in range(N):\n    for j in range(i):\n        if grid[i][j] == '0':\n            if compare[i] & compare[j]:\n                ans += 2\nprint(ans)"]