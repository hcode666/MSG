["T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "for _ in range(int(input())):\n    k = int(input())\n    s = list(input().strip())\n    flag = True\n    if k == 1 or len(s) == 1:\n        if len(s) > 1:\n            flag = False\n        elif s[0] == '?':\n            s[0] = '0'\n        elif int(s[0]) >= k:\n            flag = False\n    elif k == 2:\n        if len(s) % 2 != 0:\n            flag = False\n        else:\n            cm1 = '01' * (len(s) // 2)\n            cm2 = '10' * (len(s) // 2)\n            (c1, c2) = (0, 0)\n            for i in range(len(s)):\n                if s[i] != '?' and s[i] == cm1[i]:\n                    c1 += 1\n                if s[i] != '?' and s[i] == cm2[i]:\n                    c2 += 1\n            if c1 + s.count('?') == len(s):\n                s = list(cm1)\n            elif c2 + s.count('?') == len(s):\n                s = list(cm2)\n            else:\n                flag = False\n    else:\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right:\n                flag = False\n                break\n    print(''.join(s)) if flag else print('NO')", "for _ in range(int(input())):\n    k = int(input())\n    s = list(input().strip())\n    flag = True\n    if k == 1 or len(s) == 1:\n        if len(s) > 1:\n            flag = False\n        elif s[0] == '?':\n            s[0] = '0'\n        elif int(s[0]) >= k:\n            flag = False\n    elif k == 2:\n        if len(s) % 2 != 0:\n            flag = False\n        else:\n            cm1 = '01' * (len(s) // 2)\n            cm2 = '10' * (len(s) // 2)\n            (c1, c2) = (0, 0)\n            for i in range(len(s)):\n                if s[i] != '?' and s[i] == cm1[i]:\n                    c1 += 1\n                if s[i] != '?' and s[i] == cm2[i]:\n                    c2 += 1\n            if c1 + s.count('?') == len(s):\n                s = list(cm1)\n            elif c2 + s.count('?') == len(s):\n                s = list(cm2)\n            else:\n                flag = False\n    else:\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right:\n                flag = False\n                break\n    print(''.join(s)) if flag else print('NO')", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if l == 1:\n        if S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 1:\n        return 'NO'\n    elif K == 2:\n        if l % 2 == 1:\n            return 'NO'\n        else:\n            case1 = [str(x % 2) for x in range(l)]\n            case2 = [str((x + 1) % 2) for x in range(l)]\n            success = True\n            for i in range(l):\n                if S[i] != '?' and S[i] != case1[i]:\n                    success = False\n                    break\n            if success:\n                return ''.join(case1)\n            else:\n                success = True\n                for i in range(l):\n                    if S[i] != '?' and S[i] != case2[i]:\n                        success = False\n                        break\n                if success:\n                    return ''.join(case2)\n                else:\n                    return 'NO'\n    else:\n        for i in range(l):\n            if S[i] == '?':\n                left = S[i - 1]\n                right = S[(i + 1) % l]\n                for filler in ['0', '1', '2']:\n                    if filler != left and filler != right:\n                        S[i] = filler\n                        break\n        success = True\n        for i in range(l):\n            left = S[i - 1]\n            right = S[(i + 1) % l]\n            if S[i] == left or S[i] == right or int(S[i]) >= K:\n                success = False\n                break\n        if success:\n            return ''.join(S)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "T = int(input())\n\ndef fill(S, K):\n    l = len(S)\n    if K == 1 or l == 1:\n        if l > 1:\n            return 'NO'\n        elif S[0] == '?':\n            return '0'\n        elif int(S[0]) < K:\n            return S[0]\n        else:\n            return 'NO'\n    elif K == 2:\n        if l % 2 != 0:\n            return 'NO'\n        else:\n            cm1 = '01' * (l // 2)\n            cm2 = '10' * (l // 2)\n            (c1, c2) = (0, 0)\n            for i in range(l):\n                if S[i] != '?' and S[i] == cm1[i]:\n                    c1 += 1\n                if S[i] != '?' and S[i] == cm2[i]:\n                    c2 += 1\n            if c1 + S.count('?') == l:\n                return cm1\n            elif c2 + S.count('?') == l:\n                return cm2\n            else:\n                return 'NO'\n    else:\n        s = S\n        k = K\n        flag = True\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n        if flag:\n            return ''.join(s)\n        else:\n            return 'NO'\noutput = []\nfor _ in range(T):\n    K = int(input())\n    S = list(input().strip())\n    l = len(S)\n    result = fill(S, K)\n    output.append(result)\nfor o in output:\n    print(o)", "from math import gcd\nimport sys\ninput = lambda : sys.stdin.readline().strip()\nc = lambda x: 10 ** 9 if x == '?' else int(x)\n\ndef main():\n    for _ in range(int(input())):\n        k = int(input())\n        a = list(map(str, input()))\n        n = len(a)\n        f = False\n        if n == 1:\n            print(0 if a[0] == '?' else a[0])\n        elif n == 2:\n            for i in range(n):\n                if a[i] == '?':\n                    l = [c(a[(i + 1) % n]), c(a[(i - 1) % n])]\n                    for j in range(k):\n                        if j not in l:\n                            a[i] = str(j)\n                            break\n                    else:\n                        f = True\n                        break\n                elif a[i] == a[(i + 1) % n] or a[i] == a[(i - 1) % n]:\n                    f = True\n                    break\n            if f:\n                print('NO')\n            else:\n                print(*a, sep='')\n        elif k == 2:\n            b = list(a)\n            for i in range(n):\n                if a[i] == '?':\n                    l = [c(a[(i + 1) % n]), c(a[(i - 1) % n])]\n                    for j in range(k):\n                        if j not in l:\n                            a[i] = str(j)\n                            break\n                    else:\n                        f = True\n                        break\n                elif a[i] == a[(i + 1) % n] or a[i] == a[(i - 1) % n] or a[(i - 1) % n] == a[i] == a[(i + 1) % n]:\n                    f = True\n                    break\n            if not f:\n                print(*a, sep='')\n            elif f and '?' not in b:\n                print('NO')\n            else:\n                w = b.index('?')\n                if a[w] != '?':\n                    b[w] = str(1 - int(a[w]))\n                a = b\n                f = False\n                for i in range(n):\n                    if a[i] == '?':\n                        l = [c(a[(i + 1) % n]), c(a[(i - 1) % n])]\n                        for j in range(k):\n                            if j not in l:\n                                a[i] = str(j)\n                                break\n                        else:\n                            f = True\n                            break\n                    elif a[i] == a[(i + 1) % n] or a[i] == a[(i - 1) % n]:\n                        f = True\n                        break\n                if f:\n                    print('NO')\n                else:\n                    print(*a, sep='')\n        else:\n            for i in range(n):\n                if a[i] == '?':\n                    l = [c(a[(i + 1) % n]), c(a[(i - 1) % n])]\n                    for j in range(k):\n                        if j not in l:\n                            a[i] = str(j)\n                            break\n                    else:\n                        f = True\n                        break\n                elif a[i] == a[(i + 1) % n] or a[i] == a[(i - 1) % n] or a[(i - 1) % n] == a[i] == a[(i + 1) % n]:\n                    f = True\n                    break\n            if not f:\n                print(*a, sep='')\n            else:\n                print('NO')\nmain()", "for _ in range(int(input())):\n    k = int(input())\n    s = list(input().strip())\n    flag = True\n    if k == 1 or len(s) == 1:\n        if len(s) > 1:\n            flag = False\n        elif s[0] == '?':\n            s[0] = '0'\n        elif int(s[0]) >= k:\n            flag = False\n    elif k == 2:\n        if len(s) % 2 != 0:\n            flag = False\n        else:\n            cm1 = '01' * (len(s) // 2)\n            cm2 = '10' * (len(s) // 2)\n            (c1, c2) = (0, 0)\n            for i in range(len(s)):\n                if s[i] != '?' and s[i] == cm1[i]:\n                    c1 += 1\n                if s[i] != '?' and s[i] == cm2[i]:\n                    c2 += 1\n            if c1 + s.count('?') == len(s):\n                s = list(cm1)\n            elif c2 + s.count('?') == len(s):\n                s = list(cm2)\n            else:\n                flag = False\n    else:\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right:\n                flag = False\n                break\n    print(''.join(s)) if flag else print('NO')", "for _ in range(int(input())):\n    k = int(input())\n    s = list(input().strip())\n    flag = True\n    if k == 1 or len(s) == 1:\n        if len(s) > 1:\n            flag = False\n        elif s[0] == '?':\n            s[0] = '0'\n        elif int(s[0]) >= k:\n            flag = False\n    elif k == 2:\n        if len(s) % 2 != 0:\n            flag = False\n        else:\n            cm1 = '01' * (len(s) // 2)\n            cm2 = '10' * (len(s) // 2)\n            (c1, c2) = (0, 0)\n            for i in range(len(s)):\n                if s[i] != '?' and s[i] == cm1[i]:\n                    c1 += 1\n                if s[i] != '?' and s[i] == cm2[i]:\n                    c2 += 1\n            if c1 + s.count('?') == len(s):\n                s = list(cm1)\n            elif c2 + s.count('?') == len(s):\n                s = list(cm2)\n            else:\n                flag = False\n    else:\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right:\n                flag = False\n                break\n    print(''.join(s)) if flag else print('NO')", "for _ in range(int(input())):\n    k = int(input())\n    s = list(input().strip())\n    flag = True\n    if k == 1 or len(s) == 1:\n        if len(s) > 1:\n            flag = False\n        elif s[0] == '?':\n            s[0] = '0'\n        elif int(s[0]) >= k:\n            flag = False\n    elif k == 2:\n        if len(s) % 2 != 0:\n            flag = False\n        else:\n            cm1 = '01' * (len(s) // 2)\n            cm2 = '10' * (len(s) // 2)\n            (c1, c2) = (0, 0)\n            for i in range(len(s)):\n                if s[i] != '?' and s[i] == cm1[i]:\n                    c1 += 1\n                if s[i] != '?' and s[i] == cm2[i]:\n                    c2 += 1\n            if c1 + s.count('?') == len(s):\n                s = list(cm1)\n            elif c2 + s.count('?') == len(s):\n                s = list(cm2)\n            else:\n                flag = False\n    else:\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n    print(''.join(s)) if flag else print('NO')", "for _ in range(int(input())):\n    k = int(input())\n    s = list(input().strip())\n    flag = True\n    if k == 1 or len(s) == 1:\n        if len(s) > 1:\n            flag = False\n        elif s[0] == '?':\n            s[0] = '0'\n        elif int(s[0]) >= k:\n            flag = False\n    elif k == 2:\n        if len(s) % 2 != 0:\n            flag = False\n        else:\n            cm1 = '01' * (len(s) // 2)\n            cm2 = '10' * (len(s) // 2)\n            (c1, c2) = (0, 0)\n            for i in range(len(s)):\n                if s[i] != '?' and s[i] == cm1[i]:\n                    c1 += 1\n                if s[i] != '?' and s[i] == cm2[i]:\n                    c2 += 1\n            if c1 + s.count('?') == len(s):\n                s = list(cm1)\n            elif c2 + s.count('?') == len(s):\n                s = list(cm2)\n            else:\n                flag = False\n    else:\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n    print(''.join(s)) if flag else print('NO')", "from copy import deepcopy\n\ndef check(arr, K):\n    for i in range(len(arr)):\n        if arr[i] == arr[i - 1] or arr[i] == '?' or int(arr[i]) >= K:\n            return False\n    return True\nfor _ in range(int(input())):\n    K = int(input())\n    S = input().strip()\n    N = len(S)\n    if N == 1:\n        if S == '?':\n            print('0')\n        elif int(S[0]) < K:\n            print(S[0])\n        else:\n            print('NO')\n        continue\n    if K == 1:\n        if N == 1 and (S[0] == '0' or S[0] == '?'):\n            print('0')\n        else:\n            print('NO')\n        continue\n    arr = list(S)\n    if K == 2:\n        if N % 2 != 0:\n            print('NO')\n            continue\n        brr = deepcopy(arr)\n        for i in range(N):\n            if brr[i] == '?':\n                brr[i] = str(i % 2)\n        if brr == ['0', '1'] * (N // 2):\n            print(''.join(brr))\n            continue\n        brr = deepcopy(arr)\n        for i in range(N):\n            if brr[i] == '?':\n                brr[i] = str(1 - i % 2)\n        if brr == ['1', '0'] * (N // 2):\n            print(''.join(brr))\n            continue\n        print('NO')\n        continue\n    for i in range(N):\n        if arr[i] == '?':\n            for j in range(K):\n                if arr[(i + 1) % N] != str(j) and arr[i - 1] != str(j):\n                    arr[i] = str(j)\n                    break\n    if check(arr, K):\n        print(''.join(arr))\n    else:\n        print('NO')", "def get_min(k, elem1, elem2):\n    for i in range(k):\n        if i == elem1 or i == elem2:\n            continue\n        return i\n\ndef main():\n    s = input()\n    no_of_tests = int(s)\n    for i in range(no_of_tests):\n        k = int(input())\n        s = input()\n        if len(s) == 1:\n            if s != '?':\n                print(s)\n                continue\n            print(get_min(k, None, None))\n            continue\n        prev = s[len(s) - 1]\n        valid_s = True\n        if k == 2:\n            for i in range(len(s)):\n                if s[i] != '?':\n                    if s[i % 2] == '?':\n                        s = s[:i % 2] + str(s[i]) + s[i % 2 + 1:len(s)]\n                    break\n        for i in range(len(s)):\n            next = s[i + 1] if i < len(s) - 1 else s[0]\n            if s[i] != '?' and (s[i] == prev or s[i] == next or int(s[i]) >= k):\n                valid_s = False\n                break\n            elif s[i] != '?':\n                pass\n            else:\n                min = get_min(k, int(prev) if prev != '?' else None, int(next) if next != '?' else None)\n                if min is None:\n                    valid_s = False\n                    break\n                s = s[:i] + str(min) + s[i + 1:len(s)]\n            prev = s[i]\n        if not valid_s:\n            print('NO')\n            continue\n        print(s)\nmain()", "from copy import deepcopy\n\ndef check(arr, K):\n    for i in range(len(arr)):\n        if arr[i] == arr[i - 1] or arr[i] == '?' or int(arr[i]) >= K:\n            return False\n    return True\nfor _ in range(int(input())):\n    K = int(input())\n    S = input().strip()\n    N = len(S)\n    if N == 1:\n        if S == '?':\n            print('0')\n        elif int(S[0]) < K:\n            print(S[0])\n        else:\n            print('NO')\n        continue\n    if K == 1:\n        if N == 1 and (S[0] == '0' or S[0] == '?'):\n            print('0')\n        else:\n            print('NO')\n        continue\n    arr = list(S)\n    if K == 2:\n        if N % 2 != 0:\n            print('NO')\n            continue\n        brr = deepcopy(arr)\n        for i in range(N):\n            if brr[i] == '?':\n                brr[i] = str(i % 2)\n        if brr == ['0', '1'] * (N // 2):\n            print(''.join(brr))\n            continue\n        brr = deepcopy(arr)\n        for i in range(N):\n            if brr[i] == '?':\n                brr[i] = str(1 - i % 2)\n        if brr == ['1', '0'] * (N // 2):\n            print(''.join(brr))\n            continue\n        print('NO')\n        continue\n    for i in range(N):\n        if arr[i] == '?':\n            for j in range(K):\n                if arr[(i + 1) % N] != str(j) and arr[i - 1] != str(j):\n                    arr[i] = str(j)\n                    break\n    if check(arr, K):\n        print(''.join(arr))\n    else:\n        print('NO')", "for k in range(int(input())):\n    chr_n = int(input())\n    odr = input()\n    if odr[0] == '?' and len(odr) == 1:\n        temp = list(range(chr_n))\n        odr = str(min(temp))\n        print(odr)\n    elif odr[0] == '?' and len(odr) > 1:\n        options = []\n        for t in range(chr_n):\n            tempodr = str(t) + odr[1:]\n            for i in range(len(tempodr)):\n                temp = list(range(chr_n))\n                if i != len(tempodr) - 1:\n                    if tempodr[i] == tempodr[i + 1] and tempodr[i] != '?':\n                        tempodr = 'NO'\n                        break\n                    if tempodr[i] == '?':\n                        if tempodr[i - 1] != '?' and tempodr[i + 1] != '?':\n                            if int(tempodr[i - 1]) == int(tempodr[i + 1]):\n                                temp.remove(int(tempodr[i - 1]))\n                            else:\n                                temp.remove(int(tempodr[i - 1]))\n                                temp.remove(int(tempodr[i + 1]))\n                            if temp == []:\n                                tempodr = 'NO'\n                                break\n                            else:\n                                tempodr = tempodr[:i] + str(min(temp)) + tempodr[i + 1:]\n                        elif tempodr[i - 1] != '?' and tempodr[i + 1] == '?':\n                            temp.remove(int(tempodr[i - 1]))\n                            if temp == []:\n                                tempodr = 'NO'\n                                break\n                            else:\n                                tempodr = tempodr[:i] + str(min(temp)) + tempodr[i + 1:]\n                        elif tempodr[i - 1] == '?' and tempodr[i + 1] != '?':\n                            temp.remove(int(tempodr[i + 1]))\n                            if temp == []:\n                                tempodr = 'NO'\n                                break\n                            else:\n                                tempodr = tempodr[:i] + str(min(temp)) + tempodr[i + 1:]\n                        else:\n                            tempodr = tempodr[:i] + str(min(temp)) + tempodr[i + 1:]\n                else:\n                    if tempodr[i] == tempodr[0] and tempodr[i] != '?':\n                        tempodr = 'NO'\n                        break\n                    if tempodr[i] == '?':\n                        if tempodr[i - 1] != '?' and tempodr[0] != '?':\n                            if int(tempodr[i - 1]) == int(tempodr[0]):\n                                temp.remove(int(tempodr[i - 1]))\n                            else:\n                                temp.remove(int(tempodr[i - 1]))\n                                temp.remove(int(tempodr[0]))\n                            if temp == []:\n                                tempodr = 'NO'\n                                break\n                            else:\n                                tempodr = tempodr[:i] + str(min(temp))\n                        elif tempodr[i - 1] != '?' and tempodr[0] == '?':\n                            temp.remove(int(tempodr[i - 1]))\n                            if temp == []:\n                                tempodr = 'NO'\n                                break\n                            else:\n                                tempodr = tempodr[:i] + str(min(temp))\n                        elif tempodr[i - 1] == '?' and tempodr[0] != '?':\n                            temp.remove(int(tempodr[0]))\n                            if temp == []:\n                                tempodr = 'NO'\n                                break\n                            else:\n                                tempodr = tempodr[:i] + str(min(temp))\n                        else:\n                            tempodr = tempodr[:i] + str(min(temp))\n            if tempodr == 'NO':\n                tempodr = odr\n            else:\n                options.append(tempodr)\n        if options == []:\n            odr = 'NO'\n        else:\n            odr = str(min(options))\n        print(odr)\n    elif odr[0] != '?' and len(odr) > 1:\n        for i in range(len(odr)):\n            temp = list(range(chr_n))\n            if i != len(odr) - 1:\n                if odr[i] == odr[i + 1] and odr[i] != '?':\n                    odr = 'NO'\n                    break\n                if odr[i] == '?':\n                    if odr[i - 1] != '?' and odr[i + 1] != '?':\n                        if int(odr[i - 1]) == int(odr[i + 1]):\n                            temp.remove(int(odr[i - 1]))\n                        else:\n                            temp.remove(int(odr[i - 1]))\n                            temp.remove(int(odr[i + 1]))\n                        if temp == []:\n                            odr = 'NO'\n                            break\n                        else:\n                            odr = odr[:i] + str(min(temp)) + odr[i + 1:]\n                    elif odr[i - 1] != '?' and odr[i + 1] == '?':\n                        temp.remove(int(odr[i - 1]))\n                        if temp == []:\n                            odr = 'NO'\n                            break\n                        else:\n                            odr = odr[:i] + str(min(temp)) + odr[i + 1:]\n                    elif odr[i - 1] == '?' and odr[i + 1] != '?':\n                        temp.remove(int(odr[i + 1]))\n                        if temp == []:\n                            odr = 'NO'\n                            break\n                        else:\n                            odr = odr[:i] + str(min(temp)) + odr[i + 1:]\n                    else:\n                        odr = odr[:i] + str(min(temp)) + odr[i + 1:]\n            else:\n                if odr[i] == odr[0] and odr[i] != '?':\n                    odr = 'NO'\n                    break\n                if odr[i] == '?':\n                    if odr[i - 1] != '?' and odr[0] != '?':\n                        if int(odr[i - 1]) == int(odr[0]):\n                            temp.remove(int(odr[i - 1]))\n                        else:\n                            temp.remove(int(odr[i - 1]))\n                            temp.remove(int(odr[0]))\n                        if temp == []:\n                            odr = 'NO'\n                            break\n                        else:\n                            odr = odr[:i] + str(min(temp))\n                    elif odr[i - 1] != '?' and odr[0] == '?':\n                        temp.remove(int(odr[i - 1]))\n                        if temp == []:\n                            odr = 'NO'\n                            break\n                        else:\n                            odr = odr[:i] + str(min(temp))\n                    elif odr[i - 1] == '?' and odr[0] != '?':\n                        temp.remove(int(odr[0]))\n                        if temp == []:\n                            odr = 'NO'\n                            break\n                        else:\n                            odr = odr[:i] + str(min(temp))\n                    else:\n                        odr = odr[:i] + str(min(temp))\n        print(odr)\n    else:\n        print(odr)", "for _ in range(int(input())):\n    k = int(input())\n    ns = list(input())\n    n = len(ns)\n    if k == 1:\n        if n > 1:\n            print('NO')\n        else:\n            print(0)\n        continue\n    if k == 2:\n        if n == 1:\n            if ns[0] == '?':\n                print(0)\n            else:\n                print(ns[0])\n            continue\n        if n % 2 == 1:\n            print('NO')\n        else:\n            ans1 = '01' * (n // 2)\n            ans2 = '10' * (n // 2)\n            b1 = True\n            for i in range(n):\n                if ans1[i] == '0':\n                    if ns[i] == '1':\n                        b1 = False\n                        break\n                if ans1[i] == '1':\n                    if ns[i] == '0':\n                        b1 = False\n                        break\n            if b1:\n                print(ans1)\n                continue\n            else:\n                b1 = True\n                for i in range(n):\n                    if ans2[i] == '0':\n                        if ns[i] == '1':\n                            b1 = False\n                            break\n                    if ans2[i] == '1':\n                        if ns[i] == '0':\n                            b1 = False\n                            break\n                if b1:\n                    print(ans2)\n                else:\n                    print('NO')\n                continue\n    else:\n        b = True\n        if n == 1:\n            if ns[0] == '?':\n                print(0)\n            else:\n                print(ns[0])\n            continue\n        for i in range(n):\n            prev = i - 1\n            next_ = i + 1\n            if prev < 0:\n                prev = n - 1\n            if next_ == n:\n                next_ = 0\n            if ns[i] == ns[prev] != '?':\n                b = False\n                break\n            if ns[i] == ns[next_] != '?':\n                b = False\n                break\n            elif ns[i] == '?':\n                if ns[prev] != '0' and ns[next_] != '0':\n                    ns[i] = '0'\n                elif ns[prev] != '1' and ns[next_] != '1':\n                    ns[i] = '1'\n                else:\n                    ns[i] = '2'\n        if b:\n            print(''.join(ns))\n        else:\n            print('NO')", "for _ in range(int(input())):\n    k = int(input())\n    s = list(input())\n    l = len(s)\n    if l == 1:\n        if s[0] == '?':\n            s[0] = '0'\n        print(''.join(s))\n        continue\n    if l > 1 and k == 1:\n        print('NO')\n        continue\n    if k == 2:\n        if l % 2:\n            print('NO')\n            continue\n        for (j, i) in enumerate(s):\n            if i != '?':\n                for i in range(j + 1, l + j):\n                    if s[i % l] == '?':\n                        if s[(i + 1) % l] == '?':\n                            if s[(i - 1) % l] == '1':\n                                s[i % l] = '0'\n                            else:\n                                s[i % l] = '1'\n                        elif s[(i + 1) % l] == s[(i - 1) % l]:\n                            if s[(i + 1) % l] == '1':\n                                s[i % l] = '0'\n                            else:\n                                s[i % l] = '1'\n                        else:\n                            print('NO')\n                            break\n                    elif s[i % l] == s[(i + 1) % l]:\n                        print('NO')\n                        break\n                else:\n                    print(''.join(s))\n                break\n        else:\n            print('01' * (l // 2))\n        continue\n    for i in range(l):\n        if s[i] == '?':\n            if s[i - 1] == s[(i + 1) % l] == '?':\n                s[i] = '0'\n            elif s[i - 1] == '?':\n                if s[(i + 1) % l] == '0':\n                    s[i] = '1'\n                else:\n                    s[i] = '0'\n            elif s[(i + 1) % l] == '?':\n                if s[i - 1] == '0':\n                    s[i] = '1'\n                else:\n                    s[i] = '0'\n            elif s[(i + 1) % l] == s[i - 1]:\n                if s[(i + 1) % l] == '0':\n                    s[i] = '1'\n                else:\n                    s[i] = '0'\n            elif s[i - 1] != '0' and s[(i + 1) % l] != '0':\n                s[i] = '0'\n            elif s[i - 1] != '1' and s[(i + 1) % l] != '1':\n                s[i] = '1'\n            else:\n                s[i] = '2'\n        elif s[i - 1] == s[i] or s[i] == s[(i + 1) % l]:\n            print('NO')\n            break\n    else:\n        print(''.join(s))", "for _ in range(int(input())):\n    available_colors = int(input())\n    arrangement = list(input())\n    if available_colors == 2:\n        for i in range(len(arrangement)):\n            if arrangement[i] != '?':\n                arrangement[i % 2] = arrangement[i]\n                break\n    possible = True\n    for i in range(len(arrangement)):\n        next_color = arrangement[(i + 1) % len(arrangement)]\n        if arrangement[i] != '?' and arrangement[i] == next_color:\n            possible = False\n            break\n    if not possible and len(arrangement) > 1:\n        ans = 'NO'\n    else:\n        for i in range(len(arrangement)):\n            if arrangement[i] == '?':\n                previous_color = arrangement[i - 1]\n                next_color = arrangement[(i + 1) % len(arrangement)]\n                for j in range(available_colors):\n                    if str(j) != previous_color and str(j) != next_color:\n                        arrangement[i] = str(j)\n                        break\n            if arrangement[i] == '?':\n                possible = False\n                break\n        if not possible and len(arrangement) > 1:\n            ans = 'NO'\n        else:\n            ans = ''.join(arrangement)\n    print(ans)", "for _ in range(int(input())):\n    k = int(input())\n    s = list(input())\n    n = len(s)\n    flag = False\n    if n == 1:\n        if s[0] == '?':\n            print('0')\n        elif int(s[0]) < k:\n            print(s[0])\n        else:\n            print('NO')\n    elif k == 1:\n        print('NO')\n    elif n == 2:\n        if s[0] == s[1]:\n            if s[0] == '?':\n                print('01')\n            else:\n                print('NO')\n        elif s[0] == '?':\n            if s[1] == '0':\n                print('10')\n            else:\n                print('0' + s[1])\n        elif s[1] == '?':\n            if s[0] == '0':\n                print('01')\n            else:\n                print(s[0] + '0')\n        else:\n            print(s[0] + s[1])\n    elif s[0] == s[-1] and s[0] != '?':\n        print('NO')\n    elif k == 2:\n        if n % 2 != 0:\n            flag = True\n        else:\n            zero = '?'\n            one = '?'\n            for i in range(n):\n                if s[i] == '0':\n                    zero = i % 2\n                    one = (i + 1) % 2\n                    break\n                elif s[i] == '1':\n                    zero = (i + 1) % 2\n                    one = i % 2\n                    break\n            if zero == '?':\n                for i in range(0, n, 2):\n                    s[i] = '0'\n                for i in range(1, n, 2):\n                    s[i] = '1'\n            else:\n                for i in range(n):\n                    if s[i] == '?':\n                        if zero == i % 2:\n                            s[i] = '0'\n                        else:\n                            s[i] = '1'\n                    elif s[i] == '0':\n                        if zero != i % 2:\n                            flag = True\n                    elif s[i] == '1':\n                        if zero == i % 2:\n                            flag = True\n                    if flag:\n                        break\n        if flag:\n            print('NO')\n        else:\n            print(''.join(s))\n    else:\n        for i in range(n):\n            if s[i] == '?':\n                if i == 0:\n                    if s[1] == s[-1]:\n                        if s[1] == '0':\n                            s[i] = '1'\n                        else:\n                            s[i] = '0'\n                    elif s[1] == '0':\n                        if s[-1] == '1':\n                            s[i] = '2'\n                        else:\n                            s[i] = '1'\n                    elif s[1] == '1':\n                        if s[-1] == '0':\n                            s[i] = '2'\n                        else:\n                            s[i] = '0'\n                    elif s[-1] == '0':\n                        if s[1] == '1':\n                            s[i] = '2'\n                        else:\n                            s[i] = '1'\n                    elif s[-1] == '1':\n                        if s[1] == '0':\n                            s[i] = '2'\n                        else:\n                            s[i] = '0'\n                    else:\n                        s[i] = '0'\n                elif i == n - 1:\n                    if s[0] == s[-2]:\n                        if s[0] == '0':\n                            s[i] = '1'\n                        else:\n                            s[i] = '0'\n                    elif s[0] == '0':\n                        if s[-2] == '1':\n                            s[i] = '2'\n                        else:\n                            s[i] = '1'\n                    elif s[0] == '1':\n                        if s[-2] == '0':\n                            s[i] = '2'\n                        else:\n                            s[i] = '0'\n                    elif s[-2] == '0':\n                        if s[0] == '1':\n                            s[i] = '2'\n                        else:\n                            s[i] = '1'\n                    elif s[-2] == '1':\n                        if s[0] == '0':\n                            s[i] = '2'\n                        else:\n                            s[i] = '0'\n                    else:\n                        s[i] = '0'\n                elif s[i - 1] == s[i + 1]:\n                    if s[i - 1] == '0':\n                        s[i] = '1'\n                    else:\n                        s[i] = '0'\n                elif s[i - 1] == '0':\n                    if s[i + 1] == '1':\n                        s[i] = '2'\n                    else:\n                        s[i] = '1'\n                elif s[i - 1] == '1':\n                    if s[i + 1] == '0':\n                        s[i] = '2'\n                    else:\n                        s[i] = '0'\n                elif s[i + 1] == '0':\n                    if s[i - 1] == '1':\n                        s[i] = '2'\n                    else:\n                        s[i] = '1'\n                elif s[i + 1] == '1':\n                    if s[i - 1] == '0':\n                        s[i] = '2'\n                    else:\n                        s[i] = '0'\n                else:\n                    s[i] = '0'\n            elif i != n - 1 and s[i] == s[i + 1]:\n                flag = True\n                break\n            elif i == n - 1 and s[i] == s[i - 1]:\n                flag = True\n                break\n        if flag:\n            print('NO')\n        else:\n            print(''.join(s))", "def get_val(l: str, r: str):\n    if l == '?':\n        if r == '0':\n            return '1'\n        else:\n            return '0'\n    elif r == '?':\n        if l == '0':\n            return '1'\n        else:\n            return '0'\n    elif l == '0':\n        if r == '1':\n            return '2'\n        else:\n            return '1'\n    elif r == '0':\n        if l == '1':\n            return '2'\n        else:\n            return '1'\n    else:\n        return '0'\n\ndef get_res(s: str, k: int):\n    if len(s) == 1:\n        return 0 if s == '?' else s\n    elif k == 1 < len(s):\n        return 'NO'\n    elif s[0] == s[-1] != '?':\n        return 'NO'\n    elif k == 2:\n        if len(s) % 2 != 0:\n            return 'NO'\n        else:\n            (s1, s2) = ('', '')\n            fi = ''\n            flag = True\n            for x in range(len(s)):\n                s1 += str(x % 2)\n                s2 += str((x + 1) % 2)\n            for (i, j) in enumerate(s):\n                if j != '?':\n                    if flag:\n                        if j == s1[i]:\n                            fi = s1\n                        else:\n                            fi = s2\n                        flag = False\n                    elif j != fi[i]:\n                        return 'NO'\n            if flag:\n                return s1\n            return fi\n    else:\n        res = list(s)\n        for (i, j) in enumerate(res):\n            if j == '?':\n                if i == 0:\n                    res[i] = get_val(res[-1], res[1])\n                elif i == len(s) - 1:\n                    res[i] = get_val(res[i - 1], res[0])\n                else:\n                    res[i] = get_val(res[i - 1], res[i + 1])\n            elif i < len(s) - 1 and res[i + 1] != '?' and (j == res[i + 1]):\n                return 'NO'\n        cache = set()\n        for x in res:\n            cache.add(x)\n        if len(cache) <= k:\n            return ''.join(res)\n        return 'NO'\nfor _ in range(int(input())):\n    k = int(input())\n    s = input().strip()\n    print(get_res(s, k))", "def get_val(l: str, r: str):\n    if l == '?':\n        if r == '0':\n            return '1'\n        else:\n            return '0'\n    elif r == '?':\n        if l == '0':\n            return '1'\n        else:\n            return '0'\n    elif l == '0':\n        if r == '1':\n            return '2'\n        else:\n            return '1'\n    elif r == '0':\n        if l == '1':\n            return '2'\n        else:\n            return '1'\n    else:\n        return '0'\n\ndef get_res(s: str, k: int):\n    if len(s) == 1:\n        return 0 if s == '?' else s\n    elif k == 1 < len(s):\n        return 'NO'\n    elif s[0] == s[-1] != '?':\n        return 'NO'\n    elif k == 2:\n        if len(s) % 2 != 0:\n            return 'NO'\n        else:\n            (s1, s2) = ('', '')\n            fi = ''\n            flag = True\n            for x in range(len(s)):\n                s1 += str(x % 2)\n                s2 += str((x + 1) % 2)\n            for (i, j) in enumerate(s):\n                if j != '?':\n                    if flag:\n                        if j == s1[i]:\n                            fi = s1\n                        else:\n                            fi = s2\n                        flag = False\n                    elif j != fi[i]:\n                        return 'NO'\n            if flag:\n                return s1\n            return fi\n    else:\n        res = list(s)\n        for (i, j) in enumerate(res):\n            if j == '?':\n                if i == 0:\n                    res[i] = get_val(res[-1], res[1])\n                elif i == len(s) - 1:\n                    res[i] = get_val(res[i - 1], res[0])\n                else:\n                    res[i] = get_val(res[i - 1], res[i + 1])\n            elif i < len(s) - 1 and res[i + 1] != '?' and (j == res[i + 1]):\n                return 'NO'\n        cache = set()\n        for x in res:\n            cache.add(x)\n        if len(cache) <= k:\n            return ''.join(res)\n        return 'NO'\nfor _ in range(int(input())):\n    k = int(input())\n    s = input().strip()\n    print(get_res(s, k))", "def get_val(l: str, r: str):\n    if l == '?':\n        if r == '0':\n            return '1'\n        else:\n            return '0'\n    elif r == '?':\n        if l == '0':\n            return '1'\n        else:\n            return '0'\n    elif l == '0':\n        if r == '1':\n            return '2'\n        else:\n            return '1'\n    elif r == '0':\n        if l == '1':\n            return '2'\n        else:\n            return '1'\n    else:\n        return '0'\n\ndef get_res(s: str, k: int):\n    if len(s) == 1:\n        return 0 if s == '?' else s\n    elif k == 1 < len(s):\n        return 'NO'\n    elif s[0] == s[-1] != '?':\n        return 'NO'\n    elif k == 2:\n        if len(s) % 2 != 0:\n            return 'NO'\n        else:\n            (s1, s2) = ('', '')\n            fi = ''\n            flag = True\n            for x in range(len(s)):\n                s1 += str(x % 2)\n                s2 += str((x + 1) % 2)\n            for (i, j) in enumerate(s):\n                if j != '?':\n                    if flag:\n                        if j == s1[i]:\n                            fi = s1\n                        else:\n                            fi = s2\n                        flag = False\n                    elif j != fi[i]:\n                        return 'NO'\n            if flag:\n                return s1\n            return fi\n    else:\n        res = list(s)\n        for (i, j) in enumerate(res):\n            if j == '?':\n                if i == 0:\n                    res[i] = get_val(res[-1], res[1])\n                elif i == len(s) - 1:\n                    res[i] = get_val(res[i - 1], res[0])\n                else:\n                    res[i] = get_val(res[i - 1], res[i + 1])\n            elif i < len(s) - 1 and res[i + 1] != '?' and (j == res[i + 1]):\n                return 'NO'\n        cache = set()\n        for x in res:\n            cache.add(x)\n        if len(cache) <= k:\n            return ''.join(res)\n        return 'NO'\nfor _ in range(int(input())):\n    k = int(input())\n    s = input().strip()\n    print(get_res(s, k))", "def isvalid(lst, N, K):\n    for i in range(N - 1):\n        if lst[i] != '?':\n            if int(lst[i]) >= K:\n                return False\n        if lst[i] != '?' and lst[i] == lst[i + 1]:\n            return False\n    if lst[0] == lst[-1] and lst[0] != '?':\n        return False\n    return True\nT = int(input())\nfor z in range(T):\n    K = int(input())\n    lst = list(input())\n    N = len(lst)\n    if N == 1:\n        if lst[0] in ['0', '?']:\n            print('0')\n        else:\n            print(lst[0])\n        continue\n    if K == 1:\n        print('NO')\n        continue\n    if K == 2 and N % 2 == 1:\n        print('NO')\n        continue\n    if K == 2:\n        ans0 = '01' * (N // 2)\n        ans1 = '10' * (N // 2)\n        (flag0, flag1) = (True, True)\n        for i in range(N):\n            if lst[i] != '?':\n                if lst[i] != ans0[i]:\n                    flag0 = False\n                if lst[i] != ans1[i]:\n                    flag1 = False\n        if flag0:\n            print(''.join(ans0))\n        elif flag1:\n            print(''.join(ans1))\n        else:\n            print('NO')\n    else:\n        if lst[0] == '?':\n            arr = [lst[1]] + [lst[-1]]\n            if '0' not in arr:\n                lst[0] = '0'\n            elif '1' not in arr:\n                lst[0] = '1'\n            else:\n                lst[0] = '2'\n        for i in range(1, N - 1):\n            if lst[i] == '?':\n                arr = [lst[i - 1]] + [lst[i + 1]]\n                if '0' not in arr:\n                    lst[i] = '0'\n                elif '1' not in arr:\n                    lst[i] = '1'\n                else:\n                    lst[i] = '2'\n        if lst[-1] == '?':\n            arr = [lst[-2]] + [lst[0]]\n            if '0' not in arr:\n                lst[-1] = '0'\n            elif '1' not in arr:\n                lst[-1] = '1'\n            else:\n                lst[-1] = '2'\n        if isvalid(lst, N, K):\n            print(''.join(lst))\n        else:\n            print('NO')", "def toInt(n):\n    if n == '?':\n        return -1\n    return int(n)\n\ndef least(K, l, r):\n    i = 0\n    while i < K:\n        if i != l and i != r:\n            break\n        i += 1\n    return i\nfor T in range(int(input())):\n    K = int(input())\n    S = list(map(toInt, list(input())))\n    L = len(S)\n    if L == 1:\n        if S[0] == -1:\n            print(0)\n        else:\n            print(S[0])\n    elif K == 1:\n        print('NO')\n    elif K == 2:\n        if L % 2 == 0:\n            flag0 = True\n            flag1 = True\n            ans0 = [None] * L\n            ans1 = [None] * L\n            for i in range(L):\n                ans0[i] = i % 2\n                ans1[i] = (i + 1) % 2\n                if S[i] != -1 and S[i] != ans0[i]:\n                    flag0 = False\n                if S[i] != -1 and S[i] != ans1[i]:\n                    flag1 = False\n            if flag0:\n                print(*ans0, sep='')\n            elif flag1:\n                print(*ans1, sep='')\n            else:\n                print('NO')\n        else:\n            print('NO')\n    else:\n        flag = True\n        for i in range(L):\n            if S[i] != -1 and S[i - 1] != -1 and (S[i] == S[i - 1]):\n                print('NO')\n                flag = False\n                break\n        if flag and K > 2:\n            for i in range(L):\n                if S[i] == -1:\n                    C = least(K, S[i - 1], S[(i + 1) % L])\n                    if C < K:\n                        S[i] = C\n                    else:\n                        print('NO')\n                        flag = False\n                        break\n            if flag:\n                print(*S, sep='')", "for _ in range(int(input())):\n    k = int(input())\n    s = list(input().strip())\n    flag = True\n    if k == 1 or len(s) == 1:\n        if len(s) > 1:\n            flag = False\n        elif s[0] == '?':\n            s[0] = '0'\n        elif int(s[0]) >= k:\n            flag = False\n    elif k == 2:\n        if len(s) % 2 != 0:\n            flag = False\n        else:\n            one = '01' * (len(s) // 2)\n            two = '10' * (len(s) // 2)\n            (onec, twoc) = (0, 0)\n            for (index, val) in enumerate(s):\n                if val != '?' and s[index] == one[index]:\n                    onec += 1\n                if val != '?' and s[index] == two[index]:\n                    twoc += 1\n            if onec + s.count('?') == len(s):\n                s = list(one)\n            elif twoc + s.count('?') == len(s):\n                s = list(two)\n            else:\n                flag = False\n    else:\n        for index in range(len(s)):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if s[index] == '?':\n                for x in ['0', '1', '2']:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif s[index] == left or s[index] == right or int(s[index]) >= k:\n                flag = False\n                break\n    print(''.join(s)) if flag else print('NO')", "for _ in range(int(input())):\n    k = int(input())\n    s = list(input().strip())\n    flag = True\n    if k == 1 or len(s) == 1:\n        if len(s) > 1:\n            flag = False\n        elif s[0] == '?':\n            s[0] = '0'\n        elif int(s[0]) >= k:\n            flag = False\n    elif k == 2:\n        if len(s) % 2 != 0:\n            flag = False\n        else:\n            one = '10' * (len(s) // 2)\n            two = '01' * (len(s) // 2)\n            (onec, twoc) = (0, 0)\n            for (index, val) in enumerate(s):\n                if val != '?' and s[index] == one[index]:\n                    onec += 1\n                if val != '?' and s[index] == two[index]:\n                    twoc += 1\n            if twoc + s.count('?') == len(s):\n                s = list(two)\n            elif onec + s.count('?') == len(s):\n                s = list(one)\n            else:\n                flag = False\n    else:\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n    print(''.join(s)) if flag else print('NO')", "for _ in range(int(input())):\n    k = int(input())\n    s = list(input().strip())\n    flag = True\n    if k == 1 or len(s) == 1:\n        if len(s) > 1:\n            flag = False\n        elif s[0] == '?':\n            s[0] = '0'\n        elif int(s[0]) >= k:\n            flag = False\n    elif k == 2:\n        if len(s) % 2 != 0:\n            flag = False\n        else:\n            cm1 = '01' * (len(s) // 2)\n            cm2 = '10' * (len(s) // 2)\n            (c1, c2) = (0, 0)\n            for i in range(len(s)):\n                if s[i] != '?' and s[i] == cm1[i]:\n                    c1 += 1\n                if s[i] != '?' and s[i] == cm2[i]:\n                    c2 += 1\n            if c1 + s.count('?') == len(s):\n                s = list(cm1)\n            elif c2 + s.count('?') == len(s):\n                s = list(cm2)\n            else:\n                flag = False\n    else:\n        digitArr = ['0', '1', '2'] if k > 2 else ['0', '1']\n        for (index, val) in enumerate(s):\n            left = s[index - 1]\n            right = s[(index + 1) % len(s)]\n            if val == '?':\n                for x in digitArr:\n                    if x != left and x != right:\n                        s[index] = x\n                        break\n                if s[index] == '?':\n                    flag = False\n                    break\n            elif val == left or val == right or int(val) >= k:\n                flag = False\n                break\n    print(''.join(s)) if flag else print('NO')", "t = int(input())\nfor _ in range(t):\n    k = int(input())\n    s = list(input())\n    if k == 1 or len(s) == 1:\n        if len(s) == 1:\n            if s[0] != '?' and s[0] <= str(k - 1):\n                print(s[0])\n            elif s[0] != '?' and s[0] > str(k - 1):\n                print('NO')\n            elif s[0] == '?':\n                print(0)\n        else:\n            print('NO')\n    elif k == 2:\n        if len(s) % 2 != 0:\n            print('NO')\n        else:\n            cm1 = '01' * (len(s) // 2)\n            cm2 = '10' * (len(s) // 2)\n            (c1, c2) = (0, 0)\n            for i in range(len(s)):\n                if s[i] != '?' and s[i] == cm1[i]:\n                    c1 += 1\n                if s[i] != '?' and s[i] == cm2[i]:\n                    c2 += 1\n            if c1 + s.count('?') == len(s):\n                print(cm1)\n            elif c2 + s.count('?') == len(s):\n                print(cm2)\n            else:\n                print('NO')\n    else:\n        flag = True\n        for i in range(len(s)):\n            if s[i] == '?':\n                for j in range(0, k):\n                    if s[i - 1] != str(j) and s[(i + 1) % len(s)] != str(j):\n                        s[i] = str(j)\n                        break\n            elif s[i - 1] != s[i] and s[i] != s[(i + 1) % len(s)] and (int(s[i]) < k):\n                pass\n            else:\n                flag = False\n                break\n        if flag:\n            print(''.join(s))\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    k = int(input())\n    s = list(input())\n    if k == 1 or len(s) == 1:\n        if len(s) == 1:\n            if s[0] != '?' and s[0] <= str(k - 1):\n                print(s[0])\n            elif s[0] != '?' and s[0] > str(k - 1):\n                print('NO')\n            elif s[0] == '?':\n                print(0)\n        else:\n            print('NO')\n    elif k == 2:\n        if len(s) % 2 != 0:\n            print('NO')\n        else:\n            cm1 = '01' * (len(s) // 2)\n            cm2 = '10' * (len(s) // 2)\n            (c1, c2) = (0, 0)\n            for i in range(len(s)):\n                if s[i] != '?' and s[i] == cm1[i]:\n                    c1 += 1\n                if s[i] != '?' and s[i] == cm2[i]:\n                    c2 += 1\n            if c1 + s.count('?') == len(s):\n                print(cm1)\n            elif c2 + s.count('?') == len(s):\n                print(cm2)\n            else:\n                print('NO')\n    else:\n        flag = True\n        for i in range(len(s)):\n            if s[i] == '?':\n                for j in range(0, k):\n                    if s[i - 1] != str(j) and s[(i + 1) % len(s)] != str(j):\n                        s[i] = str(j)\n                        break\n            elif s[i - 1] != s[i] and s[i] != s[(i + 1) % len(s)] and (s[i] <= str(k - 1)):\n                pass\n            else:\n                flag = False\n                break\n        if flag:\n            print(''.join(s))\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    k = int(input())\n    s = list(input())\n    if k == 1 or len(s) == 1:\n        if len(s) == 1:\n            if s[0] != '?' and s[0] <= str(k - 1):\n                print(s[0])\n            elif s[0] != '?' and s[0] > str(k - 1):\n                print('NO')\n            elif s[0] == '?':\n                print(0)\n        else:\n            print('NO')\n    elif k == 2:\n        if len(s) % 2 != 0:\n            print('NO')\n        else:\n            cm1 = '01' * (len(s) // 2)\n            cm2 = '10' * (len(s) // 2)\n            (c1, c2) = (0, 0)\n            for i in range(len(s)):\n                if s[i] != '?' and s[i] == cm1[i]:\n                    c1 += 1\n                if s[i] != '?' and s[i] == cm2[i]:\n                    c2 += 1\n            if c1 + s.count('?') == len(s):\n                print(cm1)\n            elif c2 + s.count('?') == len(s):\n                print(cm2)\n            else:\n                print('NO')\n    else:\n        flag = True\n        for i in range(len(s)):\n            if s[i] == '?':\n                for j in range(0, k):\n                    if s[i - 1] != str(j) and s[(i + 1) % len(s)] != str(j):\n                        s[i] = str(j)\n                        break\n            elif s[i - 1] != s[i] and s[i] != s[(i + 1) % len(s)] and (s[i] <= str(k - 1)):\n                pass\n            else:\n                flag = False\n                break\n        if flag:\n            print(''.join(s))\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    k = int(input())\n    s = list(input())\n    if k == 1 or len(s) == 1:\n        if len(s) == 1:\n            if s[0] != '?' and s[0] <= str(k - 1):\n                print(s[0])\n            elif s[0] != '?' and s[0] > str(k - 1):\n                print('NO')\n            elif s[0] == '?':\n                print(0)\n        else:\n            print('NO')\n    elif k == 2:\n        if len(s) % 2 != 0:\n            print('NO')\n        else:\n            cm1 = '01' * (len(s) // 2)\n            cm2 = '10' * (len(s) // 2)\n            (c1, c2) = (0, 0)\n            for i in range(len(s)):\n                if s[i] != '?' and s[i] == cm1[i]:\n                    c1 += 1\n                if s[i] != '?' and s[i] == cm2[i]:\n                    c2 += 1\n            if c1 + s.count('?') == len(s):\n                print(cm1)\n            elif c2 + s.count('?') == len(s):\n                print(cm2)\n            else:\n                print('NO')\n    else:\n        flag = True\n        for i in range(len(s)):\n            if s[i] == '?':\n                for j in range(0, k):\n                    if s[i - 1] != str(j) and s[(i + 1) % len(s)] != str(j):\n                        s[i] = str(j)\n                        break\n            else:\n                if s[i - 1] != s[i] and s[i] != s[(i + 1) % len(s)]:\n                    pass\n                else:\n                    flag = False\n                    break\n                if s[i] > str(k - 1):\n                    flag = False\n                    break\n        if flag:\n            print(''.join(s))\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    k = int(input())\n    s = list(input())\n    if k == 1 or len(s) == 1:\n        if len(s) == 1:\n            if s[0] != '?' and s[0] <= str(k - 1):\n                print(s[0])\n            elif s[0] != '?' and s[0] > str(k - 1):\n                print('NO')\n            elif s[0] == '?':\n                print(0)\n        else:\n            print('NO')\n    elif k == 2:\n        if len(s) % 2 != 0:\n            print('NO')\n        else:\n            cm1 = '01' * (len(s) // 2)\n            cm2 = '10' * (len(s) // 2)\n            (c1, c2) = (0, 0)\n            for i in range(len(s)):\n                if s[i] != '?' and s[i] == cm1[i]:\n                    c1 += 1\n                if s[i] != '?' and s[i] == cm2[i]:\n                    c2 += 1\n            if c1 + s.count('?') == len(s):\n                print(cm1)\n            elif c2 + s.count('?') == len(s):\n                print(cm2)\n            else:\n                print('NO')\n    else:\n        flag = True\n        for i in range(len(s)):\n            if s[i] == '?':\n                for j in range(0, k):\n                    if s[i - 1] != str(j) and s[(i + 1) % len(s)] != str(j):\n                        s[i] = str(j)\n                        break\n            else:\n                if s[i - 1] != s[i] and s[i] != s[(i + 1) % len(s)]:\n                    pass\n                else:\n                    flag = False\n                    break\n                if s[i] > str(k - 1):\n                    flag = False\n                    break\n        if s.count('?') != 0:\n            flag = False\n        if flag:\n            print(''.join(s))\n        else:\n            print('NO')", "for i in range(int(input())):\n    k = int(input())\n    arr = list(input())\n    if k == 1 or len(arr) == 1:\n        if len(arr) == 1:\n            if arr[0] != '?' and arr[0] <= str(k - 1):\n                print(arr[0])\n            elif arr[0] != '?' and arr[0] > str(k - 1):\n                print('NO')\n            elif arr[0] == '?':\n                print(0)\n        else:\n            print('NO')\n    elif k == 2:\n        if len(arr) % 2 != 0:\n            print('NO')\n        else:\n            cmb1 = '01' * (len(arr) // 2)\n            cmb2 = '10' * (len(arr) // 2)\n            (cnt1, cnt2) = (0, 0)\n            for i in range(len(arr)):\n                if arr[i] != '?' and arr[i] == cmb1[i]:\n                    cnt1 += 1\n                if arr[i] != '?' and arr[i] == cmb2[i]:\n                    cnt2 += 1\n            if cnt1 + arr.count('?') == len(arr):\n                print(cmb1)\n            elif cnt2 + arr.count('?') == len(arr):\n                print(cmb2)\n            else:\n                print('NO')\n    else:\n        flag = True\n        for i in range(len(arr)):\n            if arr[i] == '?':\n                for j in range(0, k):\n                    if arr[i - 1] != str(j) and arr[(i + 1) % len(arr)] != str(j):\n                        arr[i] = str(j)\n                        break\n            else:\n                if arr[i - 1] != arr[i] and arr[i] != arr[(i + 1) % len(arr)]:\n                    pass\n                else:\n                    flag = False\n                    break\n                if arr[i] > str(k - 1):\n                    flag = False\n                    break\n        if arr.count('?') != 0:\n            flag = False\n        if flag:\n            print(''.join(arr))\n        else:\n            print('NO')", "for _ in range(int(input())):\n    k = int(input())\n    s = list(input())\n    if k == 2:\n        for i in range(len(s)):\n            if s[i] != '?':\n                s[i % 2] = s[i]\n                break\n    bf = False\n    for i in range(len(s)):\n        nd = s[(i + 1) % len(s)]\n        if s[i] != '?' and s[i] == nd:\n            bf = True\n            break\n    if bf and len(s) > 1:\n        ans = 'NO'\n    else:\n        for i in range(len(s)):\n            if s[i] == '?':\n                pd = s[i - 1]\n                nd = s[(i + 1) % len(s)]\n                for j in range(k):\n                    if str(j) != pd and str(j) != nd:\n                        s[i] = str(j)\n                        break\n            if s[i] == '?':\n                bf = True\n                break\n        if bf and len(s) > 1:\n            ans = 'NO'\n        else:\n            ans = ''.join(s)\n    print(ans)", "for i in range(int(input())):\n    k = int(input())\n    arr = list(input())\n    if k == 1 or len(arr) == 1:\n        if len(arr) == 1:\n            if arr[0] != '?' and arr[0] <= str(k - 1):\n                print(arr[0])\n            elif arr[0] != '?' and arr[0] > str(k - 1):\n                print('NO')\n            elif arr[0] == '?':\n                print(0)\n        else:\n            print('NO')\n    elif k == 2:\n        if len(arr) % 2 != 0:\n            print('NO')\n        else:\n            cmb1 = '01' * (len(arr) // 2)\n            cmb2 = '10' * (len(arr) // 2)\n            (cnt1, cnt2) = (0, 0)\n            for i in range(len(arr)):\n                if arr[i] != '?' and arr[i] == cmb1[i]:\n                    cnt1 += 1\n                if arr[i] != '?' and arr[i] == cmb2[i]:\n                    cnt2 += 1\n            if cnt1 + arr.count('?') == len(arr):\n                print(cmb1)\n            elif cnt2 + arr.count('?') == len(arr):\n                print(cmb2)\n            else:\n                print('NO')\n    else:\n        flag = True\n        for i in range(len(arr)):\n            if arr[i] == '?':\n                for j in range(0, k):\n                    if arr[i - 1] != str(j) and arr[(i + 1) % len(arr)] != str(j):\n                        arr[i] = str(j)\n                        break\n            else:\n                if arr[i - 1] != arr[i] and arr[i] != arr[(i + 1) % len(arr)]:\n                    pass\n                else:\n                    flag = False\n                    break\n                if arr[i] > str(k - 1):\n                    flag = False\n                    break\n        if arr.count('?') != 0:\n            flag = False\n        if flag:\n            print(''.join(arr))\n        else:\n            print('NO')", "def trim(left, mid, right):\n    if l[mid] != '?':\n        return\n    for b in range(3):\n        if l[left] != str(b) and l[right] != str(b):\n            l[mid] = str(b)\n            break\n\ndef cal():\n    if le == 1:\n        if l[0] == '?':\n            return '0'\n        elif int(l[0]) < k:\n            return l[0]\n        else:\n            return 'NO'\n    if k == 1:\n        if le == 1 and (l[0] == '?' or l[0] == '0'):\n            return '0'\n        else:\n            return 'NO'\n    elif k == 2:\n        c = 0\n        if le % 2 != 0:\n            return 'NO'\n        temp = l[:]\n        for j in range(le):\n            if temp[j] == '?':\n                temp[j] = str(j % 2)\n        for j in range(le):\n            if int(temp[j]) != j % 2:\n                c = 1\n        if c == 0:\n            return ''.join(temp)\n        c = 0\n        temp2 = l[:]\n        for j in range(le):\n            if temp2[j] == '?':\n                temp2[j] = str(1 - j % 2)\n        for j in range(le):\n            if int(temp2[j]) != 1 - j % 2:\n                c = 1\n        if c == 0:\n            return ''.join(temp2)\n        return 'NO'\n    else:\n        check = 0\n        for g in range(le - 1):\n            if l[g] == l[g + 1] and l[g] != '?':\n                return 'NO'\n        if l[0] == l[le - 1] and l[0] != '?':\n            return 'NO'\n        trim(le - 1, 0, 1)\n        for g in range(1, le - 1):\n            trim(g - 1, g, g + 1)\n        trim(0, le - 1, le - 2)\n        return ''.join(l)\nt = int(input())\nfor h in range(t):\n    k = int(input())\n    l = list(input())\n    le = len(l)\n    string = cal()\n    print(string)", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    s = input()\n    l = list(s)\n    length = len(l)\n    status = True\n    if len(s) == 1:\n        print('0' if s[0] == '?' else s[0])\n    elif k == 1:\n        print('NO')\n    elif k == 2:\n        if length % 2 != 0:\n            print('NO')\n        else:\n            c = -1\n            for i in range(length):\n                if l[i] != '?':\n                    c = i\n                    break\n            if c == -1:\n                print('01' * (length // 2))\n            else:\n                if c % 2 == 0:\n                    if l[c] == '1':\n                        for i in range(0, length, 2):\n                            if l[i] == '?':\n                                l[i] = '1'\n                            elif l[i] != '1':\n                                status = False\n                                break\n                        for i in range(1, length, 2):\n                            if l[i] == '?':\n                                l[i] = '0'\n                            elif l[i] != '0':\n                                status = False\n                                break\n                    else:\n                        for i in range(0, length, 2):\n                            if l[i] == '?':\n                                l[i] = '0'\n                            elif l[i] != '0':\n                                status = False\n                                break\n                        for i in range(1, length, 2):\n                            if l[i] == '?':\n                                l[i] = '1'\n                            elif l[i] != '1':\n                                status = False\n                                break\n                elif l[c] == '1':\n                    for i in range(1, length, 2):\n                        if l[i] == '?':\n                            l[i] = '1'\n                        elif l[i] != '1':\n                            status = False\n                            break\n                    for i in range(0, length, 2):\n                        if l[i] == '?':\n                            l[i] = '0'\n                        elif l[i] != '0':\n                            status = False\n                            break\n                else:\n                    for i in range(1, length, 2):\n                        if l[i] == '?':\n                            l[i] = '0'\n                        elif l[i] != '0':\n                            status = False\n                            break\n                    for i in range(0, length, 2):\n                        if l[i] == '?':\n                            l[i] = '1'\n                        elif l[i] != '1':\n                            status = False\n                            break\n                if status == False:\n                    print('NO')\n                else:\n                    print(''.join(l))\n    else:\n        for i in range(length - 1):\n            if l[i] == l[i + 1] and l[i] != '?':\n                status = False\n                break\n        if l[0] == l[-1] and l[0] != '?':\n            status = False\n        if not status:\n            print('NO')\n        else:\n            for i in range(length):\n                if l[i] == '?':\n                    if i == 0:\n                        if l[1] != '0' and l[-1] != '0':\n                            l[0] = '0'\n                        elif l[1] != '1' and l[-1] != '1':\n                            l[0] = '1'\n                        else:\n                            l[0] = '2'\n                    elif i == length - 1:\n                        if l[i - 1] != '0' and l[0] != '0':\n                            l[i] = '0'\n                        elif l[i - 1] != '1' and l[0] != '1':\n                            l[i] = '1'\n                        else:\n                            l[i] = '2'\n                    elif l[i - 1] != '0' and l[i + 1] != '0':\n                        l[i] = '0'\n                    elif l[i - 1] != '1' and l[i + 1] != '1':\n                        l[i] = '1'\n                    else:\n                        l[i] = '2'\n            print(''.join(l))", "def fun(arr, k):\n    n = len(arr)\n    if n == 1:\n        if arr[0] == -1:\n            arr[0] = 0\n        print(arr[0])\n    elif k == 1:\n        print('NO')\n    elif k == 2:\n        if n & 1:\n            print('NO')\n            return\n        ans1 = []\n        ans2 = []\n        for i in range(n):\n            ans1.append(int(i & 1))\n            ans2.append(1 - int(i & 1))\n        a1 = True\n        a2 = True\n        for i in range(n):\n            if arr[i] != -1:\n                if arr[i] != ans1[i]:\n                    a1 = False\n                else:\n                    a2 = False\n        if a1:\n            for i in range(n):\n                print(ans1[i], end='')\n            print()\n        elif a2:\n            for i in range(n):\n                print(ans2[i], end='')\n            print()\n        else:\n            print('NO')\n    else:\n        for i in range(n - 1):\n            if arr[i] == -1:\n                if arr[i - 1] != 0 and arr[i + 1] != 0:\n                    arr[i] = 0\n                elif arr[i - 1] != 1 and arr[i + 1] != 1:\n                    arr[i] = 1\n                else:\n                    arr[i] = 2\n        if arr[-1] == -1:\n            if arr[0] != 0 and arr[-2] != 0:\n                arr[-1] = 0\n            elif arr[0] != 1 and arr[-2] != 1:\n                arr[-1] = 1\n            else:\n                arr[-1] = 2\n        for i in range(n - 1):\n            if arr[i] == arr[i - 1] or arr[i] == arr[i + 1]:\n                print('NO')\n                return\n        if arr[-1] == arr[0] or arr[-1] == arr[-2]:\n            print('NO')\n            return\n        for i in range(n):\n            if arr[i] >= k:\n                print('NO')\n                return\n        for i in range(n):\n            print(arr[i], end='')\n        print()\ntest = int(input())\nfor t in range(test):\n    k = int(input())\n    string = input().strip()\n    arr = []\n    for i in string:\n        if i == '?':\n            arr.append(-1)\n        else:\n            arr.append(int(i))\n    fun(arr, k)", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    s = input()\n    l = list(s)\n    length = len(l)\n    status = True\n    if len(s) == 1:\n        print('0' if s[0] == '?' else s[0])\n    elif k == 1:\n        print('NO')\n    elif k == 2:\n        if length % 2 != 0:\n            print('NO')\n        else:\n            c = -1\n            for i in range(length):\n                if l[i] != '?':\n                    c = i\n                    break\n            if c == -1:\n                print('01' * (length // 2))\n            else:\n                if c % 2 == 0:\n                    if l[c] == '1':\n                        for i in range(0, length, 2):\n                            if l[i] == '?':\n                                l[i] = '1'\n                            elif l[i] != '1':\n                                status = False\n                                break\n                        for i in range(1, length, 2):\n                            if l[i] == '?':\n                                l[i] = '0'\n                            elif l[i] != '0':\n                                status = False\n                                break\n                    else:\n                        for i in range(0, length, 2):\n                            if l[i] == '?':\n                                l[i] = '0'\n                            elif l[i] != '0':\n                                status = False\n                                break\n                        for i in range(1, length, 2):\n                            if l[i] == '?':\n                                l[i] = '1'\n                            elif l[i] != '1':\n                                status = False\n                                break\n                elif l[c] == '1':\n                    for i in range(1, length, 2):\n                        if l[i] == '?':\n                            l[i] = '1'\n                        elif l[i] != '1':\n                            status = False\n                            break\n                    for i in range(0, length, 2):\n                        if l[i] == '?':\n                            l[i] = '0'\n                        elif l[i] != '0':\n                            status = False\n                            break\n                else:\n                    for i in range(1, length, 2):\n                        if l[i] == '?':\n                            l[i] = '0'\n                        elif l[i] != '0':\n                            status = False\n                            break\n                    for i in range(0, length, 2):\n                        if l[i] == '?':\n                            l[i] = '1'\n                        elif l[i] != '1':\n                            status = False\n                            break\n                if status == False:\n                    print('NO')\n                else:\n                    print(''.join(l))\n    else:\n        for i in range(length - 1):\n            if l[i] == l[i + 1] and l[i] != '?':\n                status = False\n                break\n        if l[0] == l[-1] and l[0] != '?':\n            status = False\n        if not status:\n            print('NO')\n        else:\n            for i in range(length):\n                if l[i] == '?':\n                    if i == 0:\n                        if l[1] != '0' and l[-1] != '0':\n                            l[0] = '0'\n                        elif l[1] != '1' and l[-1] != '1':\n                            l[0] = '1'\n                        else:\n                            l[0] = '2'\n                    elif i == length - 1:\n                        if l[i - 1] != '0' and l[0] != '0':\n                            l[i] = '0'\n                        elif l[i - 1] != '1' and l[0] != '1':\n                            l[i] = '1'\n                        else:\n                            l[i] = '2'\n                    elif l[i - 1] != '0' and l[i + 1] != '0':\n                        l[i] = '0'\n                    elif l[i - 1] != '1' and l[i + 1] != '1':\n                        l[i] = '1'\n                    else:\n                        l[i] = '2'\n            print(''.join(l))", "for _ in range(int(input().strip())):\n    k = int(input().strip())\n    arrangement = list(input())\n    k_list = [str(idx) for idx in range(k)]\n    if len(arrangement) == 1:\n        print(0 if arrangement[0] == '?' else arrangement[0])\n    elif k == 1:\n        print('NO')\n    elif k == 2:\n        if len(arrangement) % 2:\n            print('NO')\n        else:\n            poss_1 = [str(idx % 2) for idx in range(len(arrangement))]\n            poss_1 = ''.join(poss_1)\n            poss_2 = [str((idx + 1) % 2) for idx in range(len(arrangement))]\n            poss_2 = ''.join(poss_2)\n            (bool_1, bool_2) = (True, True)\n            possible = True\n            for idx in range(len(arrangement)):\n                if arrangement[idx] != '?':\n                    if arrangement[idx - 1] == arrangement[idx] or arrangement[(idx + 1) % len(arrangement)] == arrangement[idx]:\n                        possible = False\n                        break\n                    if arrangement[idx] != poss_1[idx]:\n                        bool_1 = False\n                    if arrangement[idx] != poss_2[idx]:\n                        bool_2 = False\n                if not bool_1 and (not bool_2):\n                    break\n            if possible:\n                if not bool_1 and (not bool_2):\n                    print('NO')\n                elif bool_1:\n                    print(poss_1)\n                else:\n                    print(poss_2)\n            else:\n                print('NO')\n    else:\n        possible = True\n        for idx in range(len(arrangement)):\n            if arrangement[idx] == '?':\n                for ele in k_list:\n                    if ele != arrangement[idx - 1] and ele != arrangement[(idx + 1) % len(arrangement)]:\n                        arrangement[idx] = ele\n                        break\n                if arrangement[idx] == '?':\n                    possible = False\n                    break\n        for idx in range(len(arrangement)):\n            if arrangement[idx - 1] == arrangement[idx] or arrangement[(idx + 1) % len(arrangement)] == arrangement[idx]:\n                possible = False\n                break\n        print(*(arrangement if possible else 'NO'), sep='')", "for _ in range(int(input().strip())):\n    k = int(input().strip())\n    arrangement = list(input())\n    k_list = [str(idx) for idx in range(k)]\n    if len(arrangement) == 1:\n        print(0 if arrangement[0] == '?' else arrangement[0])\n    elif k == 1:\n        print('NO')\n    elif k == 2:\n        if len(arrangement) % 2:\n            print('NO')\n        else:\n            poss_1 = [str(idx % 2) for idx in range(len(arrangement))]\n            poss_1 = ''.join(poss_1)\n            poss_2 = [str((idx + 1) % 2) for idx in range(len(arrangement))]\n            poss_2 = ''.join(poss_2)\n            (bool_1, bool_2) = (True, True)\n            possible = True\n            for idx in range(len(arrangement)):\n                if arrangement[idx] != '?':\n                    if arrangement[idx - 1] == arrangement[idx] or arrangement[(idx + 1) % len(arrangement)] == arrangement[idx]:\n                        possible = False\n                        break\n                    if arrangement[idx] != poss_1[idx]:\n                        bool_1 = False\n                    if arrangement[idx] != poss_2[idx]:\n                        bool_2 = False\n                if not bool_1 and (not bool_2):\n                    break\n            if possible:\n                if not bool_1 and (not bool_2):\n                    print('NO')\n                elif bool_1:\n                    print(poss_1)\n                else:\n                    print(poss_2)\n            else:\n                print('NO')\n    else:\n        possible = True\n        for idx in range(len(arrangement)):\n            if arrangement[idx] == '?':\n                for ele in k_list:\n                    if ele != arrangement[idx - 1] and ele != arrangement[(idx + 1) % len(arrangement)]:\n                        arrangement[idx] = ele\n                        break\n                if arrangement[idx] == '?':\n                    possible = False\n                    break\n        for idx in range(len(arrangement)):\n            if arrangement[idx - 1] == arrangement[idx] or arrangement[(idx + 1) % len(arrangement)] == arrangement[idx]:\n                possible = False\n                break\n        if possible:\n            print(''.join(arrangement))\n        else:\n            print('NO')", "for _ in range(int(input().strip())):\n    k = int(input().strip())\n    arrangement = list(input())\n    k_list = [str(idx) for idx in range(k)]\n    if len(arrangement) == 1:\n        print(0 if arrangement[0] == '?' else arrangement[0])\n    elif k == 1:\n        print('NO')\n    elif k == 2:\n        if len(arrangement) % 2:\n            print('NO')\n        else:\n            poss_1 = [str(idx % 2) for idx in range(len(arrangement))]\n            poss_1 = ''.join(poss_1)\n            poss_2 = [str((idx + 1) % 2) for idx in range(len(arrangement))]\n            poss_2 = ''.join(poss_2)\n            (bool_1, bool_2) = (True, True)\n            possible = True\n            for idx in range(len(arrangement)):\n                if arrangement[idx] != '?' and arrangement[idx] != poss_1[idx]:\n                    bool_1 = False\n                if arrangement[idx] != '?' and arrangement[idx] != poss_2[idx]:\n                    bool_2 = False\n                if not bool_1 and (not bool_2):\n                    break\n                if arrangement[idx] != '?':\n                    if arrangement[idx - 1] == arrangement[idx] or arrangement[(idx + 1) % len(arrangement)] == arrangement[idx]:\n                        possible = False\n                        break\n            if possible:\n                if not bool_1 and (not bool_2):\n                    print('NO')\n                elif bool_1:\n                    print(poss_1)\n                else:\n                    print(poss_2)\n            else:\n                print('NO')\n    else:\n        possible = True\n        for idx in range(len(arrangement)):\n            if arrangement[idx] == '?':\n                for ele in k_list:\n                    if ele != arrangement[idx - 1] and ele != arrangement[(idx + 1) % len(arrangement)]:\n                        arrangement[idx] = ele\n                        break\n                if arrangement[idx] == '?':\n                    possible = False\n                    break\n        for idx in range(len(arrangement)):\n            if arrangement[idx] == '?':\n                possible = False\n                break\n            if arrangement[idx - 1] == arrangement[idx] or arrangement[(idx + 1) % len(arrangement)] == arrangement[idx]:\n                possible = False\n                break\n        if possible:\n            print(''.join(arrangement))\n        else:\n            print('NO')", "for _ in range(int(input().strip())):\n    k = int(input().strip())\n    arrangement = list(input())\n    k_list = [str(idx) for idx in range(k)]\n    if len(arrangement) == 1:\n        print(0 if arrangement[0] == '?' else arrangement[0])\n    elif k == 1:\n        print('NO')\n    elif k == 2:\n        if len(arrangement) % 2:\n            print('NO')\n        else:\n            poss_1 = [str(idx % 2) for idx in range(len(arrangement))]\n            poss_1 = ''.join(poss_1)\n            poss_2 = [str((idx + 1) % 2) for idx in range(len(arrangement))]\n            poss_2 = ''.join(poss_2)\n            (bool_1, bool_2) = (True, True)\n            for idx in range(len(arrangement)):\n                if arrangement[idx] != '?' and arrangement[idx] != poss_1[idx]:\n                    bool_1 = False\n                if arrangement[idx] != '?' and arrangement[idx] != poss_2[idx]:\n                    bool_2 = False\n            possible = True\n            for idx in range(len(arrangement)):\n                if arrangement[idx] != '?':\n                    if arrangement[idx - 1] == arrangement[idx] or arrangement[(idx + 1) % len(arrangement)] == arrangement[idx]:\n                        possible = False\n            if possible:\n                if not bool_1 and (not bool_2):\n                    print('NO')\n                elif bool_1:\n                    print(poss_1)\n                else:\n                    print(poss_2)\n            else:\n                print('NO')\n    else:\n        possible = True\n        for idx in range(len(arrangement)):\n            if arrangement[idx] == '?':\n                for ele in k_list:\n                    if ele != arrangement[idx - 1] and ele != arrangement[(idx + 1) % len(arrangement)]:\n                        arrangement[idx] = ele\n                        break\n                if arrangement[idx] == '?':\n                    possible = False\n        for idx in range(len(arrangement)):\n            if arrangement[idx] == '?':\n                possible = False\n            if arrangement[idx - 1] == arrangement[idx] or arrangement[(idx + 1) % len(arrangement)] == arrangement[idx]:\n                possible = False\n        if possible:\n            print(''.join(arrangement))\n        else:\n            print('NO')", "t = int(input())\n\ndef check_cherries(s, k):\n    colors = list(map(str, range(k)))\n    for i in range(len(s)):\n        if s[i] == '?':\n            co = set(colors)\n            l = s[i - 1]\n            r = s[(i + 1) % len(s)]\n            co.discard(l)\n            co.discard(r)\n            if len(co) > 0:\n                s[i] = min(co)\n            else:\n                return False\n        elif s[i - 1] == s[i]:\n            return False\n    return True\nfor i in range(t):\n    k = int(input())\n    s = list(input().strip())\n    ans = True\n    if len(s) == 1:\n        if s[0] == '?':\n            s[0] = '0'\n    elif k == 1:\n        ans = False\n    else:\n        if s[0] == '?':\n            for i in range(k):\n                ss = s[:]\n                ss[0] = str(i)\n                ans = check_cherries(ss, k)\n                if ans:\n                    s = ss\n                    break\n        ans = check_cherries(s, k)\n    if ans:\n        print(''.join(s))\n    else:\n        print('NO')", "T = int(input())\n\ndef check(S):\n    if S is None:\n        return False\n    if len(S) == 1:\n        return True\n    for i in range(len(S)):\n        if S[i - 1] == S[i]:\n            return False\n    return True\n\ndef greedyFill(S):\n    for i in range(n):\n        nums = set(letters)\n        if S[i] == '?':\n            a = S[i - 1]\n            b = S[(i + 1) % n]\n            nums.discard(a)\n            nums.discard(b)\n            if len(nums) == 0:\n                return None\n            S[i] = min(nums)\n    return S\nfor _ in range(T):\n    K = int(input())\n    S = list(input())\n    n = len(S)\n    letters = list(map(str, range(K)))\n    if S[0] == '?':\n        for l in letters:\n            NS = S[:]\n            NS[0] = l\n            NS = greedyFill(NS)\n            if check(NS):\n                S = NS\n                break\n        S = NS\n    else:\n        S = greedyFill(S)\n    if check(S):\n        print(*S, sep='')\n    else:\n        print('NO')", "def pick_cherries_two(K, S, start_with_zero=True):\n    Stry = list(S)\n    for (i, c) in enumerate(Stry):\n        if c == '?':\n            Stry[i] = str(i % 2 if start_with_zero else (i + 1) % 2)\n        elif c != str(i % 2 if start_with_zero else (i + 1) % 2):\n            return False\n    S[:] = Stry\n    return True\n\ndef pick_cherries_three_and_more(K, S):\n    Stry = list(S)\n    for (i, c) in enumerate(Stry):\n        left = Stry[i - 1]\n        right = Stry[(i + 1) % len(Stry)]\n        if c == '?':\n            if left != '0' and right != '0':\n                Stry[i] = '0'\n            elif left != '1' and right != '1':\n                Stry[i] = '1'\n            else:\n                Stry[i] = '2'\n        elif c == left or c == right:\n            return False\n    S[:] = Stry\n    return True\n\ndef pick_cherries(K, S):\n    if len(S) == 1:\n        if S[0] == '?':\n            S[0] = '0'\n        return True\n    elif K == 1:\n        return False\n    elif K == 2:\n        if len(S) % 2 == 1:\n            return False\n        else:\n            return pick_cherries_two(K, S, True) or pick_cherries_two(K, S, False)\n    else:\n        return pick_cherries_three_and_more(K, S)\n\ndef main():\n    T = int(input())\n    for t in range(T):\n        K = int(input())\n        S = list(input())\n        if pick_cherries(K, S):\n            print(''.join(S))\n        else:\n            print('NO')\nmain()"]