["import math\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    if n > 700:\n        x = n - 700\n        v = math.floor(math.sqrt(x))\n        u = math.ceil(math.sqrt(n) - 1)\n        ans = 700 * v\n        y = (u - v) * n - u * (u + 1) * (2 * u + 1) // 6 + v * (v + 1) * (2 * v + 1) // 6\n        ans += y\n    else:\n        u = math.ceil(math.sqrt(n) - 1)\n        ans = u * n - u * (u + 1) * (2 * u + 1) // 6\n    print(ans)", "for t in range(int(input())):\n    a = int(input())\n    k = 0\n    l = 0\n    if a > 700:\n        l = int((a - 700) ** 0.5)\n        k += l * 700\n    m = int(a ** 0.5)\n    k += a * (m - l)\n    k -= m * (m + 1) * (2 * m + 1) // 6\n    k += l * (l + 1) * (2 * l + 1) // 6\n    print(k)", "import math\n\ndef solve(n):\n    ans = 0\n    bound = max(math.ceil(math.sqrt(n - min(700, n))), 1)\n    for i in range(bound, math.ceil(math.sqrt(n))):\n        ans += n - i * i\n    return ans + 700 * (bound - 1)\nfor _ in range(int(input())):\n    print(solve(int(input())))", "for _ in range(int(input())):\n    y = int(input())\n    count = 0\n    a = int(pow(y, 0.5))\n    while a > 0 and a * a >= y - 700:\n        count += y - a * a\n        a -= 1\n    print(a * 700 + count)", "import math\nt = int(input())\nfor case in range(t):\n    y = int(input())\n    if y == 1:\n        print(0)\n        continue\n\n    def baseoflargestsquarelessthan(num):\n        return int(math.floor(math.sqrt(num)))\n\n    def sumofsquaresupto(k):\n        return k * (k + 1) * (2 * k + 1) / 6\n    b = baseoflargestsquarelessthan(y)\n    if y <= 701:\n        print(int(b * y - sumofsquaresupto(b)))\n        continue\n    z = baseoflargestsquarelessthan(y - 701)\n    suma = z * 700\n    print(int(suma + (b - z) * y - (sumofsquaresupto(b) - sumofsquaresupto(z))))", "for t in range(int(input())):\n    y = int(input())\n    count = 0\n    a = int(pow(y, 0.5))\n    while a > 0 and a * a >= y - 700:\n        count += y - a * a\n        a -= 1\n    print(a * 700 + count)", "t = int(input())\nfor x in range(t):\n    y = int(input())\n    c = 0\n    if y > 700:\n        t = y - 700\n        a = int(t ** 0.5)\n        c += a * 700\n        a += 1\n        while a ** 2 < y:\n            c += y - a ** 2\n            a += 1\n    else:\n        a = 1\n        while a ** 2 < y:\n            c += y - a ** 2\n            a += 1\n    print(c)", "T = int(input())\n\ndef solve():\n    import math\n    count = 0\n    Y = int(input())\n    if Y > 700:\n        temp = Y - 700\n        A = math.sqrt(temp) // 1\n        count = int(A * 700)\n        A = int(A) + 1\n        while A ** 2 < Y:\n            B = Y - A ** 2\n            count += B\n            A += 1\n        print(int(count))\n    else:\n        A = 1\n        while A ** 2 < Y:\n            B = Y - A ** 2\n            if B <= 700:\n                count += B\n            elif B > 700:\n                count += 700\n            A += 1\n        print(count)\nfor _ in range(T):\n    solve()", "import math\nt = int(input())\nfor case in range(t):\n    y = int(input())\n    if y == 1:\n        print(0)\n        continue\n\n    def baseoflargestsquarelessthan(num):\n        return int(math.floor(math.sqrt(num)))\n\n    def sumofsquaresupto(k):\n        return k * (k + 1) * (2 * k + 1) / 6\n    b = baseoflargestsquarelessthan(y)\n    if y <= 701:\n        print(int(b * y - sumofsquaresupto(b)))\n        continue\n    z = baseoflargestsquarelessthan(y - 701)\n    suma = z * 700\n    print(int(suma + (b - z) * y - (sumofsquaresupto(b) - sumofsquaresupto(z))))", "import math\nt = int(input())\nfor case in range(t):\n    y = int(input())\n    if y == 1:\n        print(0)\n        continue\n\n    def baseoflargestsquarelessthan(num):\n        return int(math.floor(math.sqrt(num)))\n\n    def sumofsquaresupto(k):\n        return k * (k + 1) * (2 * k + 1) / 6\n    b = baseoflargestsquarelessthan(y)\n    if y <= 701:\n        print(int(b * y - sumofsquaresupto(b)))\n        continue\n    z = baseoflargestsquarelessthan(y - 701)\n    suma = z * 700\n    print(int(suma + (b - z) * y - (sumofsquaresupto(b) - sumofsquaresupto(z))))", "import math\nt = int(input())\nfor case in range(t):\n    y = int(input())\n    if y == 1:\n        print(0)\n        continue\n\n    def baseoflargestsquarelessthan(num):\n        return int(math.floor(math.sqrt(num)))\n\n    def sumofsquaresupto(k):\n        return k * (k + 1) * (2 * k + 1) / 6\n    b = baseoflargestsquarelessthan(y)\n    if y <= 701:\n        print(int(b * y - sumofsquaresupto(b)))\n        continue\n    z = baseoflargestsquarelessthan(y - 701)\n    suma = z * 700\n    print(int(suma + (b - z) * y - (sumofsquaresupto(b) - sumofsquaresupto(z))))", "import math\nfor _ in range(int(input())):\n    y = int(input())\n    a = math.floor(y ** 0.5)\n    b = math.floor(max(0, y - 700) ** 0.5)\n    ans = b * 700\n    for i in range(b + 1, a + 1):\n        ans += y - i ** 2\n    print(ans)", "for t in range(int(input())):\n    y = int(input())\n    count = 0\n    a = int(pow(y, 0.5))\n    while a > 0 and a * a >= y - 700:\n        count += y - a * a\n        a -= 1\n    print(a * 700 + count)", "for _ in range(int(input())):\n    n = int(input())\n    a = int(n ** 0.5)\n    s = 0\n    while a > 0 and a * a >= n - 700:\n        s += n - a * a\n        a -= 1\n    print(a * 700 + s)", "for _ in range(int(input())):\n    n = int(input())\n    a = int(n ** 0.5)\n    s = 0\n    while a > 0 and a * a >= n - 700:\n        s += n - a * a\n        a -= 1\n    print(a * 700 + s)", "for _ in range(int(input())):\n    n = int(input())\n    a = int(n ** 0.5)\n    s = 0\n    while a > 0 and a * a >= n - 700:\n        s += n - a * a\n        a -= 1\n    print(a * 700 + s)", "from bisect import bisect_left, bisect_right\nfrom heapq import heapify, heappush, heappop\nfrom cmath import pi\nfrom distutils import extension\nimport sys\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\nfrom collections import deque, defaultdict\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\n\ndef ot(in_p, *args, e=' '):\n    if type(in_p) == list:\n        print(*in_p, end=e)\n    if type(in_p) == str or type(in_p) == int:\n        print(in_p, end=e)\n        for l in args:\n            print(l, end=e)\n    print()\n\ndef a_pwr_n(a, n, mod):\n    if n == 1:\n        return a % mod\n    if n % 2 == 0:\n        val = a_pwr_n(a, n // 2, mod)\n        return val % mod * val % mod\n    else:\n        return a % mod * a_pwr_n(a, n - 1, mod) % mod\n\ndef rg(*ag):\n    if len(ag) == 3:\n        return range(ag[0], ag[1], ag[2])\n    elif len(ag) == 2:\n        return range(ag[0], ag[1])\n    elif len(ag) == 1:\n        return range(ag[0])\n    else:\n        raise 'invalid input'\n\ndef ispal(i, j, st):\n    while i <= j:\n        if st[i] == st[j]:\n            i = i + 1\n            j = j - 1\n        else:\n            return False\n    return True\nmod = 1000000000 + 7\na = []\nfor i in range(10 ** 5 + 1):\n    a.append(i * i)\nfor _ in range(ii()):\n    y = ii()\n    if y == 1:\n        print(0)\n        continue\n    c = 0\n    val = int(sqrt(y - 1))\n    for i in range(val, 0, -1):\n        if y - a[i] <= 700:\n            c += y - a[i]\n        else:\n            c += 700 * i\n            break\n    print(c)", "from math import *\nt = int(input())\n\ndef func(y, t):\n    return y * t - int(t * (t + 1) * (2 * t + 1) / 6)\nfor alpha in range(t):\n    y = int(input())\n    t = int(sqrt(y))\n    ans = func(y, t)\n    if y <= 701:\n        print(ans)\n        continue\n    else:\n        z = int(sqrt(y - 700))\n        ans = ans + 700 * z\n        ans = ans - func(y, z)\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = int(pow(max(n - 700, 0), 0.5))\n    ans = x * 700\n    x += 1\n    d = x * x\n    while d <= n:\n        ans += min(700, n - d)\n        x += 1\n        d = x * x\n    print(ans)", "import math\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    m = math.sqrt(n)\n    k = int(m)\n    ans = 0\n    for i in range(k, 0, -1):\n        a = n - i ** 2\n        if a <= 700:\n            ans += a\n        else:\n            ans += 700 * i\n            break\n    print(ans)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    x = int(pow(max(n - 700, 0), 0.5))\n    ans = x * 700\n    x += 1\n    d = x * x\n    while d <= n:\n        ans += min(700, n - d)\n        x += 1\n        d = x * x\n    print(ans)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    x = int(pow(max(n - 700, 0), 0.5))\n    ans = x * 700\n    x += 1\n    d = x * x\n    while d <= n:\n        ans += min(700, n - d)\n        x += 1\n        d = x * x\n    print(ans)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    x = int(pow(max(n - 700, 0), 0.5))\n    ans = x * 700\n    x += 1\n    d = x * x\n    while d <= n:\n        ans += min(700, n - d)\n        x += 1\n        d = x * x\n    print(ans)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    x = int(pow(max(n - 700, 0), 0.5))\n    ans = x * 700\n    x += 1\n    d = x * x\n    while d <= n:\n        ans += min(700, n - d)\n        x += 1\n        d = x * x\n    print(ans)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    x = int(pow(max(n - 700, 0), 0.5))\n    ans = x * 700\n    x += 1\n    d = x * x\n    while d <= n:\n        ans += min(700, n - d)\n        x += 1\n        d = x * x\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = int(pow(max(n - 700, 0), 0.5))\n    ans = x * 700\n    x += 1\n    d = x * x\n    while d <= n:\n        ans += min(700, n - d)\n        x += 1\n        d = x * x\n    print(ans)", "from math import *\n\ndef sos(x):\n    return int(x * (x + 1) * (2 * x + 1) / 6)\nt = int(input())\nfor _ in range(t):\n    y = int(input())\n    astart = 0\n    if y <= 700:\n        astart = 1\n    else:\n        astart = ceil((y - 700) ** 0.5)\n    aend = int(y ** 0.5)\n    mul = aend - astart + 1\n    print(y * mul - sos(aend) + sos(astart - 1) + (astart - 1) * 700)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = int(pow(max(n - 700, 0), 0.5))\n    ans = x * 700\n    x += 1\n    d = x * x\n    while d <= n:\n        ans += min(700, n - d)\n        x += 1\n        d = x * x\n    print(ans)", "from math import sqrt\n\ndef find(X):\n    return int(sqrt(X))\nfor _ in range(int(input())):\n    Y = int(input())\n    if Y <= 150000:\n        result = 0\n        for i in range(1, 701):\n            p = Y - i\n            if Y - i <= 0:\n                break\n            else:\n                result += find(p)\n        print(result)\n    else:\n        k = find(Y)\n        left = Y - k * k\n        if left > 700:\n            print(k * 700)\n        else:\n            print(k * left + (k - 1) * (700 - left))", "t = int(input())\nfor _ in range(t):\n    y = int(input())\n    q = 0\n    w = int(y ** 0.5)\n    if w ** 2 == y:\n        if y > 700:\n            lol = int((y - 700) ** 0.5)\n            q = (w - 1) * w * (2 * w - 1) // 6 - lol * (lol + 1) * (2 * lol + 1) // 6\n            a = y * (w - 1) - y * lol\n            c = a - q + 700 * lol\n        else:\n            q = (w - 1) * w * (2 * w - 1) // 6\n            a = y * (w - 1)\n            c = a - q\n    elif y > 700:\n        lol = int((y - 700) ** 0.5)\n        q = w * (w + 1) * (2 * w + 1) // 6 - lol * (lol + 1) * (2 * lol + 1) // 6\n        a = y * w - y * lol\n        c = a - q + 700 * lol\n    else:\n        q = w * (w + 1) * (2 * w + 1) // 6\n        a = y * w\n        c = a - q\n    print(c)", "import math\nT = int(input())\nfor i in range(T):\n    y = int(input())\n    n = int(math.sqrt(y))\n    ans = y * n - n * (n + 1) * (2 * n + 1) / 6\n    t = 1\n    if y > 700:\n        xx1 = y - 700\n        xx = int(math.sqrt(xx1))\n        ans1 = xx1 - (xx + 1) * (2 * xx + 1) / 6\n        ans1 = ans1 * xx\n        ans = ans - ans1\n        if ans - int(ans) > 0.5:\n            ans = ans + 1\n    print(int(ans))", "import math\nt = int(input())\na = [0] * 100001\nfor i in range(100001):\n    a[i] = i * i\nfor i in range(t):\n    y = int(input())\n    x = 1\n    L = []\n    n = 1\n    if y == 1:\n        print(0)\n        continue\n    cnt = 0\n    ind = int(math.sqrt(y - 1))\n    for i in range(ind, 0, -1):\n        if y - a[i] <= 700:\n            cnt += y - a[i]\n        else:\n            cnt += 700 * i\n            break\n    print(cnt)", "import math\na = [0] * 100001\nfor i in range(100001):\n    a[i] = i * i\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    p = int(math.sqrt(n - 1))\n    for i in range(p, 0, -1):\n        m = n - a[i]\n        if m <= 700:\n            ans += m\n        else:\n            ans += 700 * i\n            break\n    print(ans)", "from math import sqrt, floor\n\ndef sn(p):\n    return p * (p + 1) * (2 * p + 1) // 6\nfor _ in range(int(input())):\n    y = int(input())\n    al = 0\n    if y > 700:\n        al = floor(sqrt(y - 700))\n    ar = floor(sqrt(y - 1))\n    ans = al * 700 + (ar - al) * y - (sn(ar) - sn(al))\n    print(ans)", "from math import sqrt, floor\nfor _ in range(int(input())):\n    y = int(input())\n    ans = 0\n    if y >= 700:\n        al = floor(sqrt(y - 700))\n        ar = floor(sqrt(y - 1))\n        ans = al * 700\n        for i in range(al + 1, ar + 1):\n            ans += y - i ** 2\n    else:\n        ar = floor(sqrt(y))\n        for i in range(1, ar + 1):\n            ans += y - i ** 2\n    print(ans)", "t = int(input())\nfor ijk in range(0, t):\n    cnt = 0\n    lmt = 0\n    y = int(input())\n    if y > 700:\n        lmt = int((y - 700) ** 0.5)\n    cnt += lmt * 700\n    lmt += 1\n    while lmt * lmt < y:\n        cnt += y - lmt * lmt\n        lmt += 1\n    print(cnt)", "import math\nfor t in range(int(input())):\n    y = int(input())\n    c = 0\n    if y > 700:\n        a = math.floor(math.sqrt(y - 700))\n    else:\n        a = 0\n    b = math.floor(math.sqrt(y - 1))\n    c += 700 * a\n    a += 1\n    for i in range(a, b + 1):\n        c += min(700, y - i * i)\n    print(c)", "import math\nfor _ in range(int(input())):\n    cnt = 0\n    lmt = 0\n    y = int(input())\n    if y > 700:\n        lmt = int((y - 700) ** 0.5)\n    cnt += lmt * 700\n    lmt += 1\n    while lmt * lmt < y:\n        cnt += y - lmt * lmt\n        lmt += 1\n    print(cnt)", "for t in range(int(input())):\n    y = int(input())\n    c = 0\n    a = 0\n    if y > 700:\n        a = pow(y - 700, 0.5)\n        a = int(a)\n        c = c + 700 * a\n    for j in range(a + 1, y):\n        if y - j * j <= 0:\n            break\n        else:\n            c = c + (y - j * j)\n    print(c)", "import math\nT = int(input())\nfor i in range(T):\n    y = int(input())\n    t = int(math.sqrt(y))\n    temp = y - t * t\n    ans = 0\n    while temp < 700 and t > 0:\n        ans += temp\n        t -= 1\n        temp = y - t * t\n    ans = t * 700 + ans\n    print(ans)", "import math\nT = int(input())\nfor i in range(T):\n    y = int(input())\n    t = int(math.sqrt(y))\n    temp = y - t * t\n    ans = 0\n    while temp < 700 and t > 0:\n        ans += temp\n        t -= 1\n        temp = y - t * t\n    ans = t * 700 + ans\n    print(ans)", "def solve(Y):\n    l = int(Y ** 0.5)\n    sq_l = l * (l + 1) * (2 * l + 1) // 6\n    if Y <= 701:\n        return l * Y - sq_l\n    elif Y > 701:\n        m = int((Y - 700) ** 0.5) + 1\n        sq_m_1 = (m - 1) * m * (2 * m - 1) // 6\n        return 700 * (m - 1) + (l - m + 1) * Y - (sq_l - sq_m_1)\nfor _ in range(int(input())):\n    Y = int(input())\n    print(solve(Y))", "from math import sqrt, ceil, floor\n\ndef sq_sum(n):\n    return n * (n + 1) * (2 * n + 1) / 6.0\n\ndef calculate_n(c):\n    m = floor(sqrt(c - 1))\n    k = ceil(sqrt(c - 700)) if c > 700 else 1\n    n = int(c * (m - k + 1) - (sq_sum(m) - sq_sum(k - 1)) + 700 * (k - 1))\n    return n\n\ndef main():\n    n = int(input(''))\n    for i in range(n):\n        Y = int(input(''))\n        print(calculate_n(Y))\nmain()", "for t in range(int(input())):\n    a = int(input())\n    root = int(a ** 0.5)\n    su = 0\n    for i in range(root, 0, -1):\n        if a - i ** 2 <= 700:\n            su = su + (a - i ** 2)\n        else:\n            su = su + 700 * i\n            break\n    print(su)", "t = int(input())\nfor _ in range(t):\n    y = int(input())\n    i = int(pow(y, 0.5))\n    ans = 0\n    while y - i * i <= 700 and i > 0:\n        ans += y - i * i\n        i -= 1\n    ans += i * 700\n    print(ans)", "import math\nT = int(input())\nfor _ in range(T):\n    Y = int(input())\n    X = math.floor((Y - 1) ** 0.5)\n    Pairs = 0\n    if Y > 700:\n        Var = math.ceil((Y - 700) ** 0.5)\n        Pairs += 700 * (Var - 1)\n        Pairs += int((X - Var + 1) * Y - X * (X + 1) * (2 * X + 1) / 6 + Var * (Var - 1) * (2 * Var - 1) / 6)\n    else:\n        Pairs = int(X * Y - X * (X + 1) * (2 * X + 1) / 6)\n    print(Pairs)", "def my_range(start, end, step):\n    while start <= end:\n        yield start\n        start += step\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    k = 0\n    if n > 700:\n        p = n - 700\n        g = int(p ** (1 / 2))\n        k = g * 700\n    else:\n        g = 0\n    for i in my_range(g + 1, n, 1):\n        if i * i >= n:\n            break\n        k += n - i * i\n    print(k)\n    t -= 1", "import math\ntc = int(input())\nfor i in range(tc):\n    y = int(input())\n    count = 0\n    k = int(math.sqrt(y - 1))\n    while k > 0:\n        if y - k * k > 700 or y - k * k <= 0:\n            break\n        count += y - k ** 2\n        k -= 1\n    count += k * 700\n    print(count)", "import math\nt = int(input())\nfor x in range(t):\n    y = int(input())\n    pairs = 0\n    maxA = int(math.sqrt(y))\n    a = maxA\n    while a >= 1:\n        b = y - a * a\n        if b <= 700:\n            pairs += b\n        else:\n            pairs += a * 700\n            break\n        a -= 1\n    print(pairs)", "t = int(input())\nfor i in range(t):\n    y = int(input())\n    k = int(y ** 0.5)\n    ans = 0\n    while y - k * k <= 700 and k >= 1:\n        ans += y - k * k\n        k -= 1\n    ans += k * 700\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    q = int(input())\n    r = int(pow(q, 0.5))\n    i = r\n    c = 0\n    while i > 0 and q - i * i < 700:\n        c += q - i * i\n        i -= 1\n    if i > 0:\n        c += 700 * i\n    print(c)", "import math\nt = int(input())\nfor i in range(t):\n    y = int(input())\n    x = 0\n    m = 0\n    d = 0\n    if y > 701:\n        d = int(math.sqrt(y - 701))\n        m = d * (d + 1) * (d * 2 + 1) // 6\n        x = 700 * d\n    c = int(math.sqrt(y))\n    n = c * (c + 1) * (2 * c + 1) // 6\n    z = y * (c - d)\n    print(z - n + m + x)", "def evaluate(n):\n    m = n ** (1 / 2.0) - 1\n    m = int(m)\n    sum = 4 * m ** 3 + 9 * m ** 2 + 5 * m\n    sum /= 6\n    return sum\nt = int(input())\nfor i in range(t):\n    d = int(input())\n    if d <= 1:\n        print('0')\n    elif d <= 700:\n        d = d - 1\n        if d == 1:\n            print('1')\n            continue\n        x = int(evaluate(d))\n        y = int(d ** (1 / 2.0))\n        l = y * y\n        o = d - l + 1\n        x += o * y\n        print(x)\n    else:\n        x = int(evaluate(d - 1))\n        y = int((d - 1) ** (1 / 2.0))\n        l = y * y\n        o = d - 1 - l + 1\n        x += o * y\n        x2 = int(evaluate(d - 701))\n        y2 = int((d - 701) ** (1 / 2.0))\n        l2 = y2 * y2\n        o2 = d - 701 - l2 + 1\n        x2 += o2 * y2\n        print(x - x2)", "for _ in range(int(input())):\n    n = int(input())\n    a = 0\n    count = 0\n    if n > 701:\n        a = int((n - 700) ** 0.5)\n        count += a * 700\n    while (a + 1) * (a + 1) < n:\n        a += 1\n        count += n - a * a\n    print('%d' % count)", "import math\ntc = int(input())\nwhile tc:\n    y = int(input())\n    ans = 0\n    sqrtrest = 0\n    if y > 700:\n        rest = y - 700\n        sqrtrest = int(math.sqrt(rest))\n        ans += 700 * sqrtrest\n    sqrty = int(math.sqrt(y))\n    for i in range(sqrtrest + 1, sqrty + 1):\n        add = y - i ** 2\n        ans += add\n    print(ans)\n    tc -= 1", "def sum_of_squares(n):\n    return n * (n + 1) * (2 * n + 1) // 6\nfrom math import sqrt\nfor _ in range(int(input().strip())):\n    y = int(input())\n    sq1 = int(sqrt(y - 1))\n    diff = max(0, y - 700)\n    sq2 = int(sqrt(diff))\n    print(700 * sq2 + y * (sq1 - sq2) - (sum_of_squares(sq1) - sum_of_squares(sq2)))", "import math\ntest = int(input())\nfor _ in range(test):\n    n = int(input())\n    t = int(math.sqrt(n))\n    temp = n - t * t\n    ans = 0\n    while temp < 700 and t > 0:\n        ans += temp\n        t -= 1\n        temp = n - t * t\n    ans = t * 700 + ans\n    print(ans)", "for _ in range(int(input())):\n    y = int(input())\n    b = 700\n    pair = 0\n    if y <= 700:\n        while True:\n            if y >= b:\n                approx = int((y - b) ** (1 / 2))\n                pair += b * approx\n                break\n            b -= 1\n    else:\n        approx = int((y - b) ** (1 / 2))\n        pair += b * approx\n    k = 1\n    while True:\n        b = y - (approx + k) ** 2\n        if b < 0:\n            break\n        pair += b\n        k += 1\n    print(pair)", "import math\n\ndef main():\n    t = int(input())\n    while t > 0:\n        n = int(input())\n        count = 0\n        sq = 1000000000000\n        whole = 0\n        for i in range(1, 701):\n            if n - i > 0:\n                if n - i > sq:\n                    count += whole\n                else:\n                    temp = math.sqrt(n - i)\n                    whole = int(temp)\n                    sq = whole ** 2\n                    count += whole\n            else:\n                break\n        print(count)\n        t -= 1\nmain()", "for _ in range(int(input())):\n    y = int(input())\n    b = 700\n    pair = 0\n    first = 1\n    if y <= 700:\n        while first != 0:\n            if y >= b:\n                approx = int((y - b) ** (1 / 2))\n                pair += b * approx\n                first = 0\n            b -= 1\n    else:\n        approx = int((y - b) ** (1 / 2))\n        pair += b * approx\n    k = 1\n    while True:\n        b = y - (approx + k) ** 2\n        if b < 0:\n            break\n        pair += b\n        k += 1\n    print(pair)", "for _ in range(int(input())):\n    y = int(input())\n    b = 700\n    pair = 0\n    first = 1\n    if y <= 700:\n        while first != 0:\n            if y >= b:\n                approx = int((y - b) ** (1 / 2))\n                pair += b * approx\n                first = 0\n            b -= 1\n    else:\n        approx = int((y - b) ** (1 / 2))\n        pair += b * approx\n    k = 1\n    while True:\n        b = y - (approx + k) ** 2\n        if b < 0:\n            break\n        pair += b\n        k += 1\n    print(pair)", "t = int(input())\nfor test in range(t):\n    y = int(input())\n    sqy = int(y ** 0.5)\n    calc = 0\n    while sqy > 0 and y - sqy * sqy <= 700:\n        calc += y - sqy * sqy\n        sqy -= 1\n    calc += 700 * sqy\n    print(calc)", "import math\nfor _ in range(int(input())):\n    y = int(input())\n    c = 0\n    q = 0\n    if y > 700:\n        q = int(pow(y - 700, 0.5))\n    c = q * 700\n    q += 1\n    while q * q < y:\n        c += y - q * q\n        q += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    ans = 0\n    y = int(input())\n    x = y ** 0.5\n    if x == int(x):\n        a = int(x) - 1\n    else:\n        a = int(x)\n    b = y - a ** 2\n    while b <= 700 and a > 0:\n        a = a - 1\n        ans = ans + b\n        b = y - a ** 2\n    ans = ans + a * 700\n    print(ans)", "def main():\n    T = int(input())\n    for i in range(T):\n        Y = int(input())\n        cnt = 0\n        temp = int((Y - 1) ** 0.5)\n        if Y > 700:\n            temp2 = int((Y - 700) ** 0.5)\n        else:\n            temp2 = 0\n        cnt += temp2 * 700\n        cnt += (temp - temp2) * Y\n        cnt += int(temp2 * (temp2 + 1) * (temp2 * 2 + 1) // 6)\n        cnt -= int(temp * (temp + 1) * (temp * 2 + 1) // 6)\n        print(cnt)\nmain()", "import math\na = [0] * 100001\nfor i in range(100001):\n    a[i] = i * i\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    p = int(math.sqrt(n - 1))\n    for i in range(p, 0, -1):\n        m = n - a[i]\n        if m <= 700:\n            ans += m\n        else:\n            ans += 700 * i\n            break\n    print(ans)", "def func():\n    Y = int(input())\n    sum_num = 0\n    m = int(Y ** (1 / 2))\n    count = 0\n    while Y - m ** 2 <= 700 and Y - m ** 2 >= 0 and (m > 0):\n        count += Y - m ** 2\n        m -= 1\n    count += m * 700\n    print(count)\nt = int(input())\nfor i in range(t):\n    func()", "import math\nt = int(input())\nb = 700\nfor x in range(t):\n    y = int(input())\n    if y > 700:\n        y1 = math.floor((y - b) ** 0.5)\n        c = y1 * 700\n    else:\n        y1 = 0\n        c = 0\n    while y1 ** 2 + (1 + 2 * y1) < y:\n        c = y - (y1 ** 2 + (1 + 2 * y1)) + c\n        y1 = y1 + 1\n    print(c)", "for _ in range(int(input())):\n    y = int(input())\n    b = 700\n    pair = 0\n    first = 1\n    while first != 0:\n        if y >= b:\n            approx = int((y - b) ** (1 / 2))\n            pair += b * approx\n            first = 0\n        b -= 1\n    k = 1\n    while True:\n        b = y - (approx + k) ** 2\n        if b < 0:\n            break\n        pair += b\n        k += 1\n    print(pair)", "import math\nt = int(input())\nb = 700\nfor x in range(t):\n    y = int(input())\n    if y > 700:\n        y1 = math.floor((y - b) ** 0.5)\n        c = y1 * 700\n    else:\n        y1 = 0\n        c = 0\n    while y1 ** 2 + (1 + 2 * y1) < y:\n        c = y - (y1 ** 2 + (1 + 2 * y1)) + c\n        y1 = y1 + 1\n    print(c)", "import math\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        Y = int(input())\n        cnt = 0\n        temp = int(math.sqrt(Y - 1))\n        j = temp\n        while j > 0:\n            if Y - j * j > 700 or Y - j * j < 0:\n                break\n            cnt += Y - j * j\n            j -= 1\n        cnt += j * 700\n        print(cnt)\nmain()", "import math\n\ndef sqp(n):\n    return n * (n + 1) * (2 * n + 1) // 6\nt = int(input())\nwhile t != 0:\n    y = int(input())\n    ry = math.sqrt(y)\n    fry = math.floor(ry)\n    maxA = -1\n    if ry == fry:\n        maxA = fry - 1\n    else:\n        maxA = fry\n    maxB = y - 1\n    if maxB > 700:\n        tm = math.sqrt(y - 700)\n        tmf = math.floor(tm)\n        mxtm = maxA - tmf\n        print(tmf * 700 + mxtm * y - sqp(maxA) + sqp(tmf))\n    else:\n        print(maxA * y - sqp(maxA))\n    t -= 1", "from math import *\nt = int(input())\nctr = 0\nwhile t > ctr:\n    y = int(input())\n    ans = 0\n    if y > 700:\n        ans += int(sqrt(y - 700)) * 700\n        a = int(sqrt(y - 700) + 1)\n    else:\n        a = 1\n    while a ** 2 < y:\n        ans += y - int(a * a)\n        a += 1\n    print(ans)\n    ctr += 1", "n = int(input().strip())\nfor i in range(n):\n    cnt = 0\n    k = int(input().strip())\n    l = int(k ** 0.5)\n    m = l\n    while k - m ** 2 <= 700 and k - m ** 2 >= 0 and (m > 0):\n        cnt += k - m ** 2\n        m -= 1\n    cnt += m * 700\n    print(cnt)", "for i in range(int(input())):\n    c = 0\n    n = int(input())\n    if n <= 352 ** 2:\n        for j in range(1, int(n ** 0.5) + 1):\n            for k in range(700, 0, -1):\n                if j ** 2 + k <= n:\n                    c += k\n                    break\n        print(c)\n    else:\n        b = n ** 0.5\n        if b == int(b):\n            print(int(700 * (b - 1)))\n        else:\n            k = n - int(b) ** 2\n            if k > 700:\n                print(700 * int(b))\n            else:\n                print(700 * int(b) - 700 + k)", "for _ in range(int(input())):\n    y = int(input())\n    p = 0\n    if y <= 700:\n        for b in range(1, 701):\n            a = 1\n            while a ** 2 + b <= y:\n                p += 1\n                a += 1\n        print(p)\n    if y > 700:\n        Amax = int((y - 1) ** 0.5)\n        Amid = int((y - 700) ** 0.5)\n        p = Amid * 700\n        for i in range(Amid + 1, Amax + 1):\n            p += int(y - i ** 2)\n        print(p)", "from math import sqrt, floor\nfor tt in range(int(input())):\n    a = int(input())\n    l = floor(sqrt(max(0, a - 700)))\n    h = floor(sqrt(a - 1))\n    ans = 700 * l\n    i = l + 1\n    while i <= h:\n        ans += a - i * i\n        i += 1\n    print(ans)", "def fun(y):\n    b = 1\n    s = 0\n    while b <= 700 and y > b:\n        a = int((y - b) ** (1 / 2))\n        b1 = y - a ** 2\n        if b1 > 700:\n            b1 = 700\n        n = b1 - b + 1\n        s = s + n * a\n        b = b1 + 1\n    return s\nt = int(input())\ny = []\nfor _ in range(t):\n    y = int(input())\n    print(fun(y))", "for t in range(int(input())):\n    Y = int(input())\n    a = int(Y ** 0.5)\n    aa = a * a\n    ans = 0\n    while Y - aa < 700 and a > 0:\n        ans += Y - aa\n        a -= 1\n        aa = a * a\n    if a > 0:\n        ans += 700 * a\n    print(ans)", "import math\nt = int(input())\nfor ind in range(t):\n    y = int(input())\n    firstsquareroot = int(math.sqrt(y))\n    firstsquare = firstsquareroot * firstsquareroot\n    result = 0\n    if firstsquare + 700 <= y:\n        result = firstsquareroot * 700\n    else:\n        while firstsquare > 0:\n            if firstsquare + 700 <= y:\n                result = result + firstsquareroot * 700\n                break\n            result = result + y - firstsquare\n            firstsquareroot = firstsquareroot - 1\n            firstsquare = firstsquareroot * firstsquareroot\n    print(result)", "from math import sqrt\nt = int(input())\nfor x1 in range(t):\n    y = int(input())\n    ma = int(sqrt(y - 1))\n    (c, mas) = (0, ma * ma)\n    while ma != 0 and y - mas < 700:\n        c += y - mas\n        ma -= 1\n        mas = ma * ma\n    c += ma * 700\n    print(c)", "import math\nfor _ in range(int(input().strip())):\n    y = int(input().strip())\n    total = 0\n    if y > 700:\n        lower = math.ceil((y - 700) ** 0.5)\n        total = 700 * (lower - 1)\n    else:\n        lower = 1\n    upper = math.ceil(y ** 0.5)\n    for i in range(lower, upper):\n        total += y - i ** 2\n    print(total)", "import math\ntest = int(input())\nfor _ in range(test):\n    n = int(input())\n    l = int(math.sqrt(n))\n    if n - 700 > 0:\n        li = int(math.sqrt(n - 700))\n        total = li * 700\n    else:\n        li = 0\n        total = 0\n    for i in range(li + 1, l + 1):\n        temp = n - i ** 2\n        total += temp\n    print(total)", "import math\nfor _ in range(int(input().strip())):\n    y = int(input().strip())\n    total = 0\n    if y > 700:\n        lower = math.ceil((y - 700) ** 0.5)\n        total = 700 * (lower - 1)\n    else:\n        lower = 1\n    upper = math.ceil(y ** 0.5)\n    for i in range(lower, upper):\n        total += y - i ** 2\n    print(total)", "import math\nfor _ in range(int(input().strip())):\n    y = int(input().strip())\n    total = 0\n    if y > 700:\n        lower = math.ceil((y - 700) ** 0.5)\n        total = 700 * (lower - 1)\n    else:\n        lower = 1\n    upper = math.ceil(y ** 0.5)\n    for i in range(lower, upper):\n        total += y - i ** 2\n    print(total)", "from math import sqrt, floor\nT = int(input())\nfor _ in range(T):\n    Y = int(input())\n    solutions = 0\n    if Y <= 1000:\n        for B in range(1, min(701, Y)):\n            A = 1\n            while A ** 2 + B <= Y:\n                solutions += 1\n                A += 1\n    elif Y > 1000:\n        y = sqrt(Y - 1)\n        y_ = sqrt(Y - 700)\n        if floor(y) == floor(y_):\n            solutions += floor(y) * 700\n        else:\n            for B in range(1, min(701, Y)):\n                solutions += floor(sqrt(Y - B))\n    print(solutions)", "import math\nsquares = []\nfor i in range(1, 10 ** 5 + 1):\n    squares.append(i * i)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    y = int(input())\n    y_root = math.floor(math.sqrt(y))\n    val = 0\n    for j in reversed(range(y_root)):\n        if y - squares[j] > 700:\n            val += (j + 1) * 700\n            break\n        else:\n            val += y - squares[j]\n    print(val)", "import math\nt = int(input())\nfor i in range(t):\n    y = int(input())\n    s = int(math.sqrt(y))\n    if y > 701:\n        x = y - 701\n        w = int(math.sqrt(x))\n        z1 = w * (w + 1) * (2 * w + 1) // 6\n        z2 = s * (s + 1) * (2 * s + 1) // 6\n        ans = w * 700 + (s - w) * y - (z2 - z1)\n    else:\n        z = s * (s + 1) * (2 * s + 1) // 6\n        ans = s * y - z\n    print(ans)", "def f(y):\n    j = int(y ** 0.5)\n    ans = 700 * j\n    while y - j * j < 700 and j >= 1:\n        ans += -700 + y - j * j\n        j -= 1\n    return ans\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    y = int(input())\n    print(f(y))", "import math\ntc = int(input())\nfor etc in range(tc):\n    T = int(input())\n    x_min = 1\n    c = 0\n    if T >= 700:\n        x_min = math.floor(math.sqrt(T - 700))\n        c = 700 * x_min\n        x_min += 1\n    x_max = math.floor(math.sqrt(T))\n    for x in range(x_min, x_max + 1):\n        y = T - x ** 2\n        c += min(700, y)\n    print(c)", "from math import floor, ceil\ncases = int(input())\nfor _ in range(cases):\n    y = int(input())\n    c = floor(max(0, y - 700) ** 0.5) * 700\n    x = floor(max(0, y - 700) ** 0.5) + 1\n    for a in range(x, x + 50):\n        if a ** 2 < y:\n            c += y - a ** 2\n    print(c)", "MAX = 10 ** 5 + 1\nSquares = []\nfor i in range(1, MAX + 2):\n    Squares.append(i * i)\nfor _ in range(int(input())):\n    Y = int(input())\n    Ans = 0\n    Beg = 0\n    End = len(Squares) - 2\n    Idx = -1\n    YSub = Y - 700\n    while Beg <= End:\n        Mid = (Beg + End) // 2\n        if Squares[Mid] <= YSub and Squares[Mid + 1] > YSub:\n            Idx = Mid\n            Ans = (Mid + 1) * 700\n            break\n        elif Squares[Mid] <= YSub and Squares[Mid + 1] <= YSub:\n            Beg = Mid + 1\n        else:\n            End = Mid - 1\n    for i in range(Idx + 1, len(Squares)):\n        if Squares[i] > Y:\n            break\n        else:\n            Ans += Y - Squares[i]\n    print(Ans)", "from math import sqrt, floor\nt = int(input())\nfor a0 in range(t):\n    y = int(input())\n    minsq = floor(sqrt(y))\n    count = 0\n    while y - minsq ** 2 < 700:\n        count += y - minsq ** 2\n        minsq -= 1\n        if minsq == 0:\n            break\n    if minsq != 0:\n        count += minsq * 700\n    print(count)", "def fun():\n    t = int(input())\n    for a0 in range(t):\n        n = int(input())\n        k = int(n ** (1 / 2))\n        tot = 0\n        while k != 0 and n - k ** 2 < 700:\n            tot = tot + (n - k ** 2)\n            k = k - 1\n        if n - k ** 2 >= 700:\n            tot = tot + 700 * k\n        print(tot)\nfun()", "for i in range(int(input())):\n    n = int(input())\n    x = int(n ** 0.5)\n    if n > 700:\n        y = int((n - 700) ** 0.5)\n    if n <= 700:\n        count = 0\n        for j in range(1, int(n ** 0.5) + 1):\n            if n - j ** 2 >= 0:\n                count += n - j ** 2\n    else:\n        count = y * 700\n        for j in range(y + 1, x + 2):\n            if n - j ** 2 >= 0:\n                count += n - j ** 2\n    print(count)", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    if n > 700:\n        x = n - 700\n        v = math.floor(math.sqrt(x))\n        u = math.ceil(math.sqrt(n) - 1)\n        ans = 700 * v\n        y = (u - v) * n - u * (u + 1) * (2 * u + 1) // 6 + v * (v + 1) * (2 * v + 1) // 6\n        ans += y\n    else:\n        u = math.ceil(math.sqrt(n) - 1)\n        ans = u * n - u * (u + 1) * (2 * u + 1) // 6\n    print(ans)"]