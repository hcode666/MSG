["t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    c = 0\n    d = {}\n    if n == 0:\n        print(0)\n    else:\n        for i in range(k):\n            if l1[i] in d:\n                d[l1[i]] += 1\n            elif l1[i] <= n + 1:\n                d[l1[i]] = 1\n        l2 = []\n        for i in d.keys():\n            if d[i] > 1:\n                c += 1\n                l2.append(i)\n        print(c, end=' ')\n        l = len(l2)\n        l2.sort()\n        for g in range(l):\n            print(l2[g], end=' ')\n        print()", "for _ in range(int(input())):\n    (n, m, k) = [int(i) for i in input().split()]\n    l = [int(i) for i in input().split()]\n    d = {}\n    if n == 0:\n        print(0)\n    else:\n        for i in range(k):\n            if l[i] in d:\n                d[l[i]] += 1\n            elif l[i] <= n + 1:\n                d[l[i]] = 1\n        d = dict(sorted(d.items(), key=lambda x: x[1]))\n        c = 0\n        l1 = []\n        for (key, val) in d.items():\n            if val >= 2:\n                l1.append(key)\n                c += 1\n        l1.sort()\n        l1.insert(0, c)\n        print(*l1, sep=' ')", "import collections\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    d = collections.Counter(l)\n    ans = []\n    count = 0\n    for i in d:\n        if i > n:\n            break\n        elif d[i] > 1:\n            count += 1\n            ans.append(i)\n    print(count, *ans)", "t = int(input())\nfor i in range(t):\n    (n, k, m) = map(int, input().split())\n    lst = [int(x) for x in input().split()]\n    lst2 = list()\n    for i in range(n):\n        lst2.append(1)\n    lst3 = list()\n    for i in range(m):\n        a = lst[i]\n        if a <= n:\n            if lst2[a - 1] == 0:\n                lst3.append(a)\n            else:\n                lst2[a - 1] -= 1\n    s = set(lst3)\n    print(len(s), *s, sep=' ')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    cnt = [0] * (n + 1)\n    res = []\n    for i in l:\n        if i <= n:\n            cnt[i] += 1\n            if cnt[i] == 2:\n                res.append(i)\n    print(len(res), *sorted(res))", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    cnt = [0] * (n + 1)\n    res = []\n    for i in l:\n        if i <= n:\n            cnt[i] += 1\n            if cnt[i] == 2:\n                res.append(i)\n    print(len(res), *sorted(res))", "for tc in range(int(input())):\n    d = {}\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if n == 0:\n        print(0)\n    else:\n        for i in range(k):\n            if a[i] in d:\n                d[a[i]] += 1\n            elif a[i] <= n + 1:\n                d[a[i]] = 1\n        d = dict(sorted(d.items(), key=lambda x: x[1]))\n        c = 0\n        li = []\n        for (key, val) in d.items():\n            if val >= 2:\n                li.append(key)\n                c += 1\n        li.sort()\n        li.insert(0, c)\n        print(*li, sep=' ')", "for tc in range(int(input())):\n    d = {}\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if n == 0:\n        print(0)\n    else:\n        for i in range(k):\n            if a[i] in d:\n                d[a[i]] += 1\n            elif a[i] <= n + 1:\n                d[a[i]] = 1\n        d = dict(sorted(d.items(), key=lambda x: x[1]))\n        c = 0\n        li = []\n        for (key, val) in d.items():\n            if val >= 2:\n                li.append(key)\n                c += 1\n        li.sort()\n        li.insert(0, c)\n        print(*li, sep=' ')", "for _ in range(int(input())):\n    (N, M, K) = map(int, input().split())\n    L = list(map(int, input().split()))\n    disqualified_count = 0\n    disqualified_users = []\n    no_of_attempts = {}\n    for i in L:\n        if i < N + 1:\n            if i in no_of_attempts:\n                no_of_attempts[i] += 1\n            else:\n                no_of_attempts[i] = 1\n    for i in range(1, N + 1):\n        if i in no_of_attempts.keys() and no_of_attempts[i] > 1:\n            disqualified_count += 1\n            disqualified_users.append(i)\n    print(disqualified_count, end=' ')\n    for users in disqualified_users:\n        print(users, end=' ')\n    print()", "for _ in range(int(input())):\n    (N, M, K) = map(int, input().split())\n    L = list(map(int, input().split()))\n    disqualified_count = 0\n    disqualified_users = []\n    no_of_attempts = {}\n    for i in L:\n        if i < N + 1:\n            if i in no_of_attempts:\n                no_of_attempts[i] += 1\n            else:\n                no_of_attempts[i] = 1\n    for i in range(1, N + 1):\n        if i in no_of_attempts.keys() and no_of_attempts[i] > 1:\n            disqualified_count += 1\n            disqualified_users.append(i)\n    print(disqualified_count, end=' ')\n    for users in disqualified_users:\n        print(users, end=' ')\n    print()", "for tc in range(int(input())):\n    d = {}\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if n == 0:\n        print(0)\n    else:\n        for i in range(k):\n            if a[i] in d:\n                d[a[i]] += 1\n            elif a[i] <= n + 1:\n                d[a[i]] = 1\n        d = dict(sorted(d.items(), key=lambda x: x[1]))\n        c = 0\n        li = []\n        for (key, val) in d.items():\n            if val >= 2:\n                li.append(key)\n                c += 1\n        li.sort()\n        li.insert(0, c)\n        print(*li, sep=' ')", "from collections import Counter\nt = int(input())\nwhile t != 0:\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().strip().split()))[:k]\n    x = Counter(l)\n    b = []\n    for i in x.keys():\n        if x[i] > 1 and i <= n:\n            b.append(i)\n    b.sort()\n    print(len(b), *b)\n    t -= 1", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = {}\n    b = []\n    for i in a:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    for i in d.keys():\n        if d[i] > 1 and i <= n:\n            b.append(i)\n    b.sort()\n    print(len(b), *b)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    d1 = {}\n    for i in list1:\n        d1[i] = d1.get(i, 0) + 1\n    k = []\n    for (i, j) in d1.items():\n        if j > 1 and i < n + 1:\n            k.append(i)\n        else:\n            continue\n    k.sort()\n    print(len(k), *k)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if n == m == k:\n        print(0)\n    l.sort()\n    ans = [0] * (n + 1)\n    cnt = 0\n    for i in range(k):\n        if l[i] > n:\n            break\n        ans[l[i]] += 1\n        if ans[l[i]] == 2:\n            cnt += 1\n    res = [i for i in range(n + 1) if ans[i] > 1]\n    print(cnt, *res)", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = [0] * (n + 1)\n    for i in a:\n        if i <= n:\n            l[i] += 1\n    count = 0\n    d = []\n    for i in range(1, n + 1):\n        if l[i] > 1:\n            count += 1\n            d.append(str(i))\n    if count == 0:\n        print(0)\n    else:\n        print(count, ' '.join(d))", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = [0] * (n + 1)\n    for i in a:\n        if i <= n:\n            l[i] += 1\n    count = 0\n    d = []\n    for i in range(1, n + 1):\n        if l[i] > 1:\n            count += 1\n            d.append(str(i))\n    if count == 0:\n        print(0)\n    else:\n        print(count, ' '.join(d))", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = [0] * (n + 1)\n    for i in a:\n        if i <= n:\n            l[i] += 1\n    s = 0\n    d = []\n    for i in range(1, n + 1):\n        if l[i] > 1:\n            s += 1\n            d.append(str(i))\n    if s == 0:\n        print(0)\n    else:\n        print(s, ' '.join(d))", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * (n + 1)\n    if k == 1:\n        print(0)\n        continue\n    res = list()\n    mp = dict()\n    for i in a:\n        if i < n + 1:\n            b[i] += 1\n    cnt = 0\n    for i in range(1, n + 1):\n        if b[i] > 1:\n            cnt += 1\n    print(cnt, end=' ')\n    for i in range(1, n + 1):\n        if b[i] > 1:\n            print(i, end=' ')\n    print()", "tests = int(input())\nfor i in range(tests):\n    (n, m, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    users = [True for i in range(n)]\n    submitted_users = set()\n    for j in arr:\n        if j <= n and j in submitted_users:\n            users[j - 1] = False\n        else:\n            submitted_users.add(j)\n    ans = []\n    for j in range(n):\n        if not users[j]:\n            ans.append(j + 1)\n    print(len(ans), *ans)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    tries = list(map(int, input().split()))\n    a = list(range(1, n + 1))\n    b = [0] * (n + m)\n    for i in tries:\n        b[i - 1] += 1\n    c = []\n    for i in range(n):\n        if b[i] > 1:\n            c.append(i + 1)\n    print(len(c), *c)", "def quiz(a, n, m, k):\n    a.sort()\n    r = []\n    count = 1\n    total = 0\n    for i in range(k - 1):\n        if a[i] > n:\n            break\n        if a[i] == a[i + 1]:\n            count += 1\n        elif count > 1:\n            r.append(a[i])\n            total += 1\n            count = 1\n    if count > 1:\n        r.append(a[k - 1])\n        total += 1\n    if total != 0:\n        print(total, *r)\n    else:\n        print(total)\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    quiz(a, n, m, k)", "for _ in range(int(input())):\n    (n, m, k) = [int(x) for x in input().split(' ')]\n    arr = [int(x) for x in input().split(' ')]\n    temp1 = {}\n    temp2 = {}\n    count = 0\n    for i in arr:\n        if i <= n and i not in temp1:\n            temp1[i] = 1\n        elif i <= n and i not in temp2:\n            count += 1\n            temp2[i] = 1\n    temp = sorted(temp2)\n    print(count, end=' ')\n    for i in temp:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    r = []\n    t = l[0]\n    for i in range(1, k):\n        if l[i] == t:\n            if t <= n:\n                r.append(t)\n        else:\n            t = l[i]\n    print(len(set(r)), *set(r))", "for i in range(int(input())):\n    (N, M, K) = map(int, input().split())\n    L = list(map(int, input().split()))\n    L1 = dict()\n    L2 = []\n    count = 0\n    for i in range(len(L)):\n        if L[i] in L1.keys():\n            L1[L[i]] += 1\n        else:\n            L1[L[i]] = 1\n    for (key, value) in L1.items():\n        if value > 1 and key <= N:\n            L2.append(key)\n            count += 1\n    print(count, *sorted(L2))", "from math import gcd, sqrt, ceil, floor, log\nfrom heapq import heapify, heappop, heappush, nsmallest, nlargest\nfrom collections import Counter, deque, OrderedDict, defaultdict\nfrom itertools import combinations, permutations, zip_longest\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache, reduce\nimport sys\nimport time\nimport string\nimport operator\nRECURSION_LIMIT = int(10000000.0)\nINT_MAX = float('inf')\nINT_MIN = float('-inf')\nMOD = int(10000000.0) + 9\nNEWLINE = '\\n'\nSPACE = ' '\nsys.setrecursionlimit(RECURSION_LIMIT)\ninp = lambda fn: fn(input())\ninp_vars = lambda fn, delim, convert_to=list: convert_to(map(fn, input().split(delim)))\nenum = lambda itr, start: enumerate(itr, start)\n\ndef toposort(graph, n):\n    degree = [0] * n\n    for node in graph:\n        for adj in graph[node]:\n            degree[adj] += 1\n    bfs_queue = [node for node in range(n) if not degree[node]]\n    for node in bfs_queue:\n        for adj in graph[node]:\n            degree[adj] -= 1\n            if not degree[adj]:\n                bfs_queue.append(adj)\n    return (bfs_queue, degree)\n\ndef dfs(graph, node, visited):\n    visited.add(node)\n    for adj in graph[node]:\n        if adj in visited:\n            continue\n        dfs(graph, adj, visited)\n\ndef seive(n):\n    is_prime = [True] * (n + 1)\n    is_prime[0] = is_prime[1] = False\n    for i in range(2, int(n ** 0.5) + 1):\n        if is_prime[i]:\n            for j in range(i * i, n + 1, i):\n                is_prime[j] = False\n    return is_prime[n]\n\ndef bin_pow(x, y):\n    if y == 0:\n        return 1\n    res = bin_pow(x, y >> 1)\n    if y & 1 == 0:\n        return res * res\n    return x * res * res\n\ndef solve(*args, **kwargs):\n    (n, m, k, arr) = args\n    mp = Counter(arr)\n    cheaters = sorted((key for (key, val) in mp.items() if val > 1 and 1 <= key <= n))\n    res = [len(cheaters)]\n    res.extend(cheaters)\n    return res\n\ndef main(*args, **kwargs):\n    for _ in range(int(input())):\n        arg2 = inp_vars(int, SPACE)\n        arg3 = inp_vars(int, SPACE)\n        res = solve(*(*arg2, arg3))\n        if type(res) in {list, tuple, set}:\n            print(*res, sep=SPACE)\n        else:\n            print(res)\nmain()", "from collections import Counter\ntestCases = int(input())\nfor testCase in range(testCases):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if n != 0:\n        ans = []\n        for i in Counter(l).most_common():\n            if i[1] > 1 and i[0] <= n:\n                ans.append(i[0])\n        print(len(ans), *sorted(ans))\n    else:\n        print(0)", "tests = int(input())\nfor test in range(tests):\n    (N, M, K) = [int(x) for x in input().split()]\n    L = map(int, input().split())\n    d = {}\n    for i in L:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    people = []\n    for (k, v) in d.items():\n        if k <= N and v > 1:\n            people.append(k)\n    print(len(people), ' '.join(map(str, sorted(people))))", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    for id in l:\n        if id >= 1 and id <= n:\n            if id in d.keys():\n                d[id] += 1\n            else:\n                d[id] = 1\n    cnt = 0\n    s = set()\n    for k in d.keys():\n        if d[k] > 1:\n            cnt += 1\n            s.add(k)\n    print(cnt, end=' ')\n    for item in s:\n        print(item, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    L = list(map(int, input().split()))\n    if k == 1:\n        print(0)\n        continue\n    L.sort()\n    li = [0] * (n + 1)\n    count = 0\n    for i in range(k):\n        if L[i] > n:\n            break\n        li[L[i]] += 1\n        if li[L[i]] == 2:\n            count += 1\n    mi = [i for i in range(n + 1) if li[i] > 1]\n    print(count, *mi)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    arr = list(map(int, input().lstrip().split()))\n    di = dict()\n    li = []\n    for i in range(len(arr)):\n        if arr[i] in di:\n            di[arr[i]] += 1\n        else:\n            di[arr[i]] = 1\n    for j in di:\n        if n + 1 <= j <= n + m:\n            continue\n        elif di[j] > 1:\n            li.append(j)\n    if len(li) == 0:\n        print(0)\n    else:\n        li.sort()\n        li.insert(0, len(li))\n        print(*li, sep=' ')", "t = int(input())\nwhile t > 0:\n    (n, m, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    hashmap = {}\n    ans = []\n    for i in arr:\n        if i <= n:\n            if hashmap.get(i) != None:\n                hashmap[i] += 1\n                ans.append(i)\n            else:\n                hashmap[i] = 1\n    ans = list(set(ans))\n    z = len(ans)\n    print(z, end=' ')\n    for i in ans:\n        print(i, end=' ')\n    print('')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    list2 = [0 for x in range(n + 1)]\n    for j in list1:\n        if j <= n:\n            list2[j] += 1\n    list4 = []\n    l = 0\n    s = len(list2)\n    while l < s:\n        if list2[l] > 1:\n            list4.append(l)\n        l += 1\n    print(len(list4), end=' ')\n    for z in list4:\n        print(z, end=' ')\n    print('')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    x = n + m + 1\n    f = [0] * x\n    ans = set()\n    for i in l:\n        if i <= n:\n            f[i] += 1\n    for i in l:\n        if f[i] > 1 and i not in ans:\n            ans.add(i)\n    print(len(ans), *ans)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    x = n + m + 1\n    f = [0] * x\n    ans = set()\n    for i in l:\n        if i <= n:\n            f[i] += 1\n    for i in l:\n        if f[i] > 1 and i not in ans:\n            ans.add(i)\n    print(len(ans), *ans)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    q = []\n    k = Counter(a)\n    for i in k:\n        if int(i) <= n and k[i] > 1:\n            q.append(int(i))\n    q.sort()\n    print(len(q), *q)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    x = n + m + 1\n    f = [0] * x\n    ans = set()\n    for i in l:\n        if i <= n:\n            f[i] += 1\n    for i in l:\n        if f[i] > 1 and i not in ans:\n            ans.add(i)\n    print(len(ans), *ans)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = set()\n    r = set()\n    for j in l:\n        if j <= n:\n            if j in d:\n                r.add(j)\n            else:\n                d.add(j)\n    r = list(r)\n    r.sort()\n    print(len(r), *r)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = set()\n    r = set()\n    for j in l:\n        if j <= n:\n            if j in d:\n                r.add(j)\n            else:\n                d.add(j)\n    r = list(r)\n    r.sort()\n    print(len(r), *r)", "from collections import Counter\n\ndef main():\n    for _ in range(int(input())):\n        (n, m, k) = map(int, input().split(' '))\n        a = list(map(int, input().split(' ')))\n        a.sort()\n        a1 = Counter(a)\n        a2 = []\n        for i in a1.keys():\n            if a1[i] > 1 and i <= n:\n                a2.append(i)\n        if len(a2) > 0:\n            print(len(a2), *a2)\n        else:\n            print(0)\nmain()", "n = int(input())\nfor x in range(n):\n    q = input()\n    m = int(q.split(' ')[0])\n    n = int(q.split(' ')[1])\n    r = int(q.split(' ')[2])\n    dict1 = {}\n    y = input()\n    for x in y.split(' '):\n        if x in dict1:\n            dict1[x] = dict1[x] + 1\n        else:\n            dict1[x] = 1\n    dict2 = {}\n    for x in range(1, m + 1):\n        m = str(x)\n        if m in dict1 and dict1[m] > 1:\n            dict2[x] = dict1[m]\n    m = str(len(dict2)) + ' '\n    for x in sorted(dict2):\n        n = str(x)\n        m = m + n + ' '\n    print(m[:-1])", "n = int(input())\nfor x in range(n):\n    q = input()\n    m = int(q.split(' ')[0])\n    n = int(q.split(' ')[1])\n    r = int(q.split(' ')[2])\n    dict1 = {}\n    y = input()\n    for x in y.split(' '):\n        if x in dict1:\n            dict1[x] = dict1[x] + 1\n        else:\n            dict1[x] = 1\n    dict2 = {}\n    for x in range(1, m + 1):\n        m = str(x)\n        if m in dict1 and dict1[m] > 1:\n            dict2[x] = dict1[m]\n    m = str(len(dict2)) + ' '\n    for x in sorted(dict2):\n        n = str(x)\n        m = m + n + ' '\n    print(m[:-1])", "n = int(input())\nfor x in range(n):\n    q = input()\n    m = int(q.split(' ')[0])\n    n = int(q.split(' ')[1])\n    r = int(q.split(' ')[2])\n    dict1 = {}\n    y = input()\n    for x in y.split(' '):\n        if x in dict1:\n            dict1[x] = dict1[x] + 1\n        else:\n            dict1[x] = 1\n    dict2 = {}\n    for x in range(1, m + 1):\n        m = str(x)\n        if m in dict1 and dict1[m] > 1:\n            dict2[x] = dict1[m]\n    m = str(len(dict2)) + ' '\n    for x in sorted(dict2):\n        n = str(x)\n        m = m + n + ' '\n    print(m[:-1])", "for _ in range(int(input())):\n    (N, M, K) = map(int, input().split())\n    L = list(map(int, input().split()))\n    freq = {}\n    for i in L:\n        if i >= 1 and i <= N:\n            if i in freq.keys():\n                freq[i] += 1\n            else:\n                freq[i] = 1\n    count = 0\n    s = set()\n    for j in freq.keys():\n        if freq[j] > 1:\n            count += 1\n            s.add(j)\n    print(count, end=' ')\n    for item in s:\n        print(item, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    for id in l:\n        if id >= 1 and id <= n:\n            if id in d.keys():\n                d[id] += 1\n            else:\n                d[id] = 1\n    cnt = 0\n    s = set()\n    for k in d.keys():\n        if d[k] > 1:\n            cnt += 1\n            s.add(k)\n    print(cnt, end=' ')\n    for item in s:\n        print(item, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    for id in l:\n        if id >= 1 and id <= n:\n            if id in d.keys():\n                d[id] += 1\n            else:\n                d[id] = 1\n    cnt = 0\n    s = set()\n    for k in d.keys():\n        if d[k] > 1:\n            cnt += 1\n            s.add(k)\n    print(cnt, end=' ')\n    for item in s:\n        print(item, end=' ')\n    print()", "from collections import Counter\nimport math\nimport sys\nfor j in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    kl = list(map(int, input().split()))\n    l = Counter(kl)\n    p = []\n    for i in l:\n        if int(i) <= n and l[i] > 1:\n            p.append(int(i))\n    p = sorted(p)\n    print(len(p), *p)", "n = int(input())\nfor i in range(n):\n    (N, M, K) = [int(x) for x in input().split(' ')]\n    arr = [int(x) for x in input().split(' ')]\n    dict = {}\n    cnt = 0\n    ansarr = []\n    for i in arr:\n        if i not in dict:\n            dict[i] = 1\n        else:\n            dict[i] += 1\n    for keys in dict:\n        if dict[keys] > 1 and keys <= N:\n            cnt += 1\n            ansarr.append(keys)\n    ansarr.sort()\n    print(len(ansarr), end=' ')\n    for i in ansarr:\n        print(i, end=' ')\n    print()", "T = int(input())\nfor _ in range(T):\n    (n, m, k) = map(int, input().split())\n    L = list(map(int, input().split()))\n    d = {}\n    for i in range(1, n + 1):\n        d[i] = 0\n    for i in range(k):\n        a = L[i]\n        if a <= n:\n            d[a] += 1\n    M = []\n    ans = 0\n    for i in range(1, n + 1):\n        if d[i] > 1:\n            ans += 1\n            M.append(i)\n    M.insert(0, ans)\n    print(*M)", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, m, k) = (int(i) for i in input().split())\n    a = [int(x) for x in input().split()]\n    cnt = defaultdict(int)\n    for i in a:\n        if i <= n:\n            cnt[i] += 1\n    ans = []\n    total = 0\n    for i in cnt:\n        if cnt[i] > 1:\n            ans.append(i)\n            total += 1\n    print(total, *sorted(ans))", "import sys\ninput = sys.stdin.readline\n\ndef rii():\n    return range(int(input().strip()))\n\ndef ii():\n    return int(input().strip())\n\ndef mii():\n    return map(int, input().strip().split(' '))\n\ndef lmii():\n    return list(map(int, input().strip().split(' ')))\n\ndef si():\n    return str(input().strip())\nfrom collections import defaultdict\nfrom functools import reduce\n\ndef solve(*args):\n    (n, m, k, l) = args\n    attempts = defaultdict(int)\n    admins = range(n + 1, n + m + 1)\n    for x in l:\n        if x in admins:\n            continue\n        attempts[x] += 1\n    ans = [x for x in attempts if attempts[x] > 1]\n    l_ans = len(ans)\n    if len(ans) == 0:\n        return f'{l_ans}'\n    else:\n        ans = reduce(lambda x, y: str(x) + ' ' + str(y), sorted(ans))\n        return f'{l_ans} {ans}'\n\ndef do_codechef():\n    for t in rii():\n        (n, m, k) = mii()\n        l = lmii()\n        print(solve(n, m, k, l))\ndo_codechef()\nexit()", "from collections import Counter\nT = int(input())\nfor tj in range(T):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    l1 = Counter(l)\n    l2 = []\n    for i in l1.keys():\n        if l1[i] > 1 and i <= n:\n            l2.append(i)\n    if len(l2) > 0:\n        print(len(l2), *l2)\n    else:\n        print(0)", "try:\n    for i in range(int(input())):\n        (n, m, k) = map(int, input().split(' '))\n        l = list(map(int, input().split(' ')))\n        m = {}\n        for i in range(k):\n            if l[i] not in m:\n                m[l[i]] = 0\n            m[l[i]] += 1\n        count = 0\n        p = []\n        for i in range(1, n + 1):\n            if i in m and m[i] > 1:\n                count += 1\n                p.append(i)\n        p.sort()\n        print(count, end=' ')\n        for i in p:\n            print(i, end=' ')\n        print()\nexcept Exception:\n    pass", "try:\n    for i in range(int(input())):\n        (n, m, k) = map(int, input().split(' '))\n        l = list(map(int, input().split(' ')))\n        m = {}\n        for i in range(k):\n            if l[i] not in m:\n                m[l[i]] = 0\n            m[l[i]] += 1\n        count = 0\n        p = []\n        for i in range(1, n + 1):\n            if i in m and m[i] > 1:\n                count += 1\n                p.append(i)\n        p.sort()\n        print(count, end=' ')\n        for i in p:\n            print(i, end=' ')\n        print()\nexcept Exception:\n    pass", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    dic = {}\n    for i in l:\n        if i <= n:\n            if i in dic:\n                dic[i] += 1\n            else:\n                dic[i] = 1\n    l = list(dic.keys())\n    for i in l:\n        if dic[i] == 1:\n            del dic[i]\n    if dic == {}:\n        print(0)\n        continue\n    l = list(dic.keys())\n    l.sort()\n    l.insert(0, len(l))\n    o = ''\n    for i in l:\n        o += str(i) + ' '\n    o = o[:len(o) - 1]\n    print(o)", "t = int(input())\nfor z in range(t):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    r = []\n    l = [0 for i in range(0, n + 1)]\n    for i in a:\n        if i <= n:\n            l[i] += 1\n    for i in range(len(l)):\n        if l[i] > 1:\n            r.append(i)\n    print(len(r), *r)", "t = int(input())\nfor z in range(t):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    r = []\n    c = 0\n    l = [0 for i in range(0, n + 1)]\n    for i in a:\n        if i <= n:\n            l[i] += 1\n    for i in range(len(l)):\n        if l[i] > 1:\n            r.append(i)\n    print(len(r), *r)", "t = int(input())\nwhile t != 0:\n    (n, m, k) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    s = {}\n    res = set()\n    for i in ar:\n        if m >= 1 and i >= n + 1:\n            continue\n        elif i in s:\n            s[i] = s[i] + 1\n        else:\n            s[i] = 1\n    for i in s:\n        if s[i] > 1:\n            res.add(i)\n    res = sorted(res)\n    print(len(res), ' '.join((str(i) for i in res)))\n    t -= 1", "from collections import Counter\nfor gagroz in range(int(input())):\n    (N, M, K) = map(int, input().split())\n    L = list(map(int, input().split()))\n    res = []\n    temp = Counter(L)\n    for key in temp:\n        if key <= N and temp[key] > 1:\n            res.append(key)\n    res = sorted(res)\n    print(len(res), end=' ')\n    print(*res)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = set()\n    r = set()\n    for j in l:\n        if j <= n:\n            if j in d:\n                r.add(j)\n            else:\n                d.add(j)\n    r = list(r)\n    r.sort()\n    print(len(r), *r)", "t = int(input())\nfor tc in range(t):\n    (n, m, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    d = set()\n    res = set()\n    for num in arr:\n        if num <= n:\n            if num in d:\n                res.add(num)\n            else:\n                d.add(num)\n    res = list(res)\n    res.sort()\n    print(len(res), *res)", "t = int(input())\nfor tc in range(t):\n    (n, m, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    d = set()\n    res = set()\n    for num in arr:\n        if num <= n:\n            if num in d:\n                res.add(num)\n            else:\n                d.add(num)\n    res = list(res)\n    res.sort()\n    print(len(res), *res)", "for z in range(int(input())):\n    (n, m, k) = map(int, input().strip().split())\n    arr = list(map(int, input().strip().split()))\n    arr = sorted(arr)\n    s = set()\n    c = 0\n    s2 = set()\n    ans = ''\n    for i in arr:\n        if i <= n:\n            if i not in s:\n                s.add(i)\n            else:\n                if i not in s2:\n                    ans = ans + str(i) + ' '\n                    c += 1\n                s2.add(i)\n    if c == 0:\n        print('0')\n    else:\n        print(str(c) + ' ' + ans)", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l3 = []\n    if k == 1:\n        print(0)\n    else:\n        l1 = Counter(l)\n        for ele in l1:\n            if ele in range(1, n + 1):\n                if l1[ele] > 1:\n                    l3.append(ele)\n        l3.sort()\n        print(len(l3), end=' ')\n        for elee in l3:\n            print(elee, end=' ')\n        print()", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l3 = []\n    if k == 1:\n        print(0)\n    else:\n        l1 = Counter(l)\n        for ele in l1:\n            if ele in range(1, n + 1):\n                if l1[ele] > 1:\n                    l3.append(ele)\n        l3.sort()\n        print(len(l3), end=' ')\n        print(*l3)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    a = []\n    for j in range(k - 2):\n        if l[j] == l[j + 1] and l[j + 1] != l[j + 2] and (l[j] <= n):\n            c = c + 1\n            a.append(l[j])\n    if l[k - 1] == l[k - 2] and l[k - 1] <= n:\n        c = c + 1\n        a.append(l[k - 1])\n    if k != 1:\n        print(c, *a, sep=' ')\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    for id in l:\n        if id >= 1 and id <= n:\n            if id in d.keys():\n                d[id] += 1\n            else:\n                d[id] = 1\n    cnt = 0\n    s = set()\n    for k in d.keys():\n        if d[k] > 1:\n            cnt += 1\n            s.add(k)\n    print(cnt, end=' ')\n    for item in s:\n        print(item, end=' ')\n    print()", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = [0] * (n + m + 1)\n    for j in range(k):\n        c[l[j]] += 1\n    d = []\n    for j in range(1, n + 1):\n        if c[j] > 1:\n            d.append(j)\n    print(len(d), end=' ')\n    for j in range(len(d)):\n        print(d[j], end=' ')\n    print()", "from collections import Counter\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    darr = Counter(arr)\n    arr1 = []\n    for i in darr:\n        if i in range(1, n + 1):\n            if darr[i] > 1:\n                arr1.append(i)\n    arr1.sort()\n    print(len(arr1), end=' ')\n    print(*arr1)", "from collections import Counter\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    darr = Counter(arr)\n    arr1 = []\n    for i in darr:\n        if i in range(1, n + 1):\n            if darr[i] > 1:\n                arr1.append(i)\n    arr1.sort()\n    print(len(arr1), end=' ')\n    print(*arr1)", "from collections import Counter\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    darr = Counter(arr)\n    arr1 = []\n    for i in darr:\n        if i in range(1, n + 1):\n            if darr[i] > 1:\n                arr1.append(i)\n    arr1.sort()\n    print(len(arr1), end=' ')\n    print(*arr1)", "from collections import Counter\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    darr = Counter(arr)\n    arr1 = []\n    for i in darr:\n        if i in range(1, n + 1):\n            if darr[i] > 1:\n                arr1.append(i)\n    arr1.sort()\n    print(len(arr1), end=' ')\n    print(*arr1)", "for u in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    x = [int(w) for w in input().split()]\n    candi = {i: 0 for i in range(1, n + 1)}\n    for i in x:\n        if 1 <= i <= n:\n            candi[i] += 1\n    ans = []\n    for i in candi:\n        if candi[i] > 1:\n            ans.append(i)\n    if len(ans):\n        ans = [len(ans)] + ans\n        print(*ans)\n    else:\n        print(0)", "from collections import Counter\nT = int(input())\nfor tx in range(T):\n    (N, M, K) = map(int, input().split())\n    L_ct = Counter((u for u in map(int, input().split()) if u <= N))\n    DQ = sorted((k for (k, v) in L_ct.items() if v > 1))\n    print(len(DQ), ' '.join(map(str, DQ)))", "from collections import Counter\nT = int(input())\nfor tx in range(T):\n    (N, M, K) = map(int, input().split())\n    L_ct = Counter((u for u in map(int, input().split()) if u <= N))\n    DQ = sorted((k for (k, v) in L_ct.items() if v > 1))\n    print(len(DQ), *DQ)", "from collections import Counter\nT = int(input())\nfor tx in range(T):\n    (N, M, K) = map(int, input().split())\n    L_ct = Counter(map(int, input().split()))\n    DQ = sorted((k for (k, v) in L_ct.items() if k <= N and v > 1))\n    print(len(DQ), *DQ)", "import collections\nt = int(input())\nfor i in range(t):\n    (n, m, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    d = collections.Counter(a)\n    a = []\n    for i in d:\n        if d[i] > 1 and i <= n:\n            a.append(i)\n    a = sorted(a)\n    print(len(a), end=' ')\n    for i in a:\n        print(i, end=' ')\n    print()", "from collections import Counter as cnt\ntc = int(input())\nfor tci in range(tc):\n    d = []\n    inp = input().split(' ')\n    n = int(inp[0])\n    m = int(inp[1])\n    k = int(inp[2])\n    inp = input().split(' ')\n    count = cnt(inp)\n    for i in range(1, n + 1):\n        if count[str(i)] > 1:\n            d.append(str(i))\n    print(len(d), end=' ')\n    print(' '.join(d))", "from collections import Counter\nfor i in range(int(input())):\n    (n, m, k) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    disqual = Counter(nums)\n    count = []\n    for (a, b) in disqual.items():\n        if b > 1 and a <= n:\n            count.append(a)\n    count.sort()\n    print(len(count), end=' ')\n    for j in range(len(count)):\n        print(count[j], end=' ')\n    print()", "try:\n    test = int(input())\n    for i in range(test):\n        disqual = []\n        (n, m, k) = map(int, input().split())\n        karr = list(map(int, input().split()))\n        d = {}\n        for x in karr:\n            if x in d.keys():\n                d[x] = d[x] + 1\n            else:\n                d[x] = 1\n        for x in d:\n            if d[x] > 1:\n                if x <= n:\n                    disqual.append(x)\n        disqual.sort()\n        disqual.insert(0, len(disqual))\n        print(*disqual, sep=' ')\nexcept:\n    pass", "a = int(input())\nfor i in range(a):\n    (n, m, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    p = 0\n    t = 0\n    f = 0\n    e = []\n    f = {}\n    for i in c:\n        if i in range(1, n + 1):\n            if i in f:\n                f[i] = f[i] + 1\n            else:\n                f[i] = 1\n    for i in f:\n        if f[i] > 1:\n            e.append(i)\n    e.sort()\n    print(len(e), *e)", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    dic = {}\n    for i in range(k):\n        if li[i] in dic:\n            dic[li[i]] += 1\n        else:\n            dic[li[i]] = 1\n    opli = []\n    for i in dic:\n        if dic[i] > 1 and i <= n:\n            opli.append(i)\n    opli.sort()\n    print(len(opli), end=' ')\n    for i in opli:\n        print(i, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    ans = []\n    helper = {}\n    arr = list(map(int, input().split()))\n    for i in arr:\n        if i <= a:\n            if i in helper:\n                helper[i] += 1\n            else:\n                helper[i] = 1\n    for i in helper:\n        if helper[i] > 1:\n            ans.append(i)\n    ans.sort()\n    print(len(ans), *ans)", "t = int(input())\nfor _ in range(t):\n    (N, M, K) = map(int, input().split())\n    L = list(map(int, input().split()))\n    freq = dict()\n    answers = set()\n    for item in L:\n        freq[item] = freq.get(item, 0) + 1\n        if item <= N and freq[item] > 1:\n            answers.add(item)\n    print(f\"{len(answers)} {' '.join(map(str, sorted(list(answers))))}\")", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = [0] * (n + 1)\n    for i in l:\n        if i > n:\n            continue\n        else:\n            s[i] += 1\n    all = []\n    for i in range(1, n + 1):\n        if s[i] > 1:\n            all.append(str(i))\n    print(len(all), end=' ')\n    print(' '.join(all))", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = [0] * (n + 1)\n    for i in l:\n        if i > n:\n            continue\n        else:\n            s[i] += 1\n    all = []\n    for i in range(1, n + 1):\n        if s[i] > 1:\n            all.append(str(i))\n    print(len(all), end=' ')\n    print(' '.join(all))", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = [0] * (n + 1)\n    for i in l:\n        if i > n:\n            continue\n        else:\n            s[i] += 1\n    all = []\n    for i in range(n + 1):\n        if s[i] > 1:\n            all.append(str(i))\n    print(len(all), end=' ')\n    print(' '.join(all))", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = [0] * (n + 1)\n    for i in l:\n        if i > n:\n            continue\n        else:\n            s[i] += 1\n    all = []\n    for i in range(1, n + 1):\n        if s[i] > 1:\n            all.append(str(i))\n    print(len(all), end=' ')\n    print(' '.join(all))", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = [0] * (n + 1)\n    for i in l:\n        if i > n:\n            continue\n        else:\n            s[i] += 1\n    all = []\n    for i in range(n + 1):\n        if s[i] > 1:\n            all.append(str(i))\n    print(len(all), end=' ')\n    print(' '.join(all))", "def merge_sort(data, left, right):\n    if right - left < 1:\n        return data[left:right + 1]\n    else:\n        mid = (left + right) // 2\n        left = merge_sort(data, left, mid)\n        right = merge_sort(data, mid + 1, right)\n        return merge(left, right)\n\ndef merge(left, right):\n    len_left = len(left)\n    len_right = len(right)\n    total_len = len_left + len_right\n    new_data = []\n    i = j = 0\n    for index in range(total_len):\n        if i == len_left:\n            new_data.append(right[j])\n            j += 1\n        elif j == len_right:\n            new_data.append(left[i])\n            i += 1\n        elif left[i] <= right[j]:\n            new_data.append(left[i])\n            i += 1\n        elif left[i] > right[j]:\n            new_data.append(right[j])\n            j += 1\n    return new_data\nresult = []\ntry:\n    for testcase in range(int(input())):\n        (n, m, k) = tuple(map(int, input().split()))\n        data = list(map(int, input().split()))\n        data.sort()\n        count = {}\n        answer = []\n        for value in data:\n            if value <= n:\n                count[value] = count.get(value, 0) + 1\n        for (key, value) in count.items():\n            if value > 1:\n                answer.append(key)\n        answer.insert(0, len(answer))\n        result.append(answer)\n    for testcase in result:\n        for (index, value) in enumerate(testcase):\n            if index == len(testcase) - 1:\n                print(value)\n            else:\n                print(value, end=' ')\nexcept:\n    pass"]