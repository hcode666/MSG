["(na, nb) = map(int, input().split(' '))\na = list(map(int, input().split(' ')))\nb = list(map(int, input().split(' ')))\nres = 0\ncomp = min(a)\nfor value in b:\n    if value < comp:\n        res += na\nprint(res)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nm = min(a)\nc = sum((1 for x in b if x < m))\nprint(c * len(a))", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nm = min(a)\nc = sum((1 for x in b if x < m))\nprint(c * len(a))", "(N, M) = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nma = min(A)\nx = 0\nfor i in B:\n    if i < ma:\n        x += N\nprint(x)", "(N, M) = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nma = min(A)\nx = 0\nfor i in B:\n    if i < ma:\n        x += N\nprint(x)", "(N, M) = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nma = min(A)\nx = 0\nfor i in B:\n    if i < ma:\n        x += N\nprint(x)", "def soln(n, m, a, b):\n    b.sort()\n    a_min = min(a)\n    res = i = 0\n    while i < m and b[i] < a_min:\n        res += n\n        i += 1\n    return res\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(soln(n, m, a, b))", "(ms, mn) = map(int, input().split())\nlm = list(map(int, input().split()))\nln = list(map(int, input().split()))\nn = min(lm)\nln.sort()\nc = 0\nfor i in ln:\n    if i >= n:\n        break\n    c += ms\nprint(c)", "(msn, msm) = map(int, input().split())\nn = list(map(int, input().split()))\nm = list(map(int, input().split()))\nn_min = min(n)\nm.sort()\nc = 0\nfor i in m:\n    if i >= n_min:\n        break\n    c += msn\nprint(c)", "(msn, msm) = map(int, input().split())\nn = list(map(int, input().split()))\nm = list(map(int, input().split()))\nn_min = min(n)\nm.sort()\nc = 0\nfor i in m:\n    if i >= n_min:\n        break\n    c += msn\nprint(c)", "(msn, msm) = map(int, input().split())\nn = list(map(int, input().split()))\nm = list(map(int, input().split()))\nn_min = min(n)\nm.sort()\nc = 0\nfor i in m:\n    if i >= n_min:\n        break\n    c += msn\nprint(c)", "(msn, msm) = map(int, input().split())\nn = list(map(int, input().split()))\nm = list(map(int, input().split()))\nn_min = min(n)\nm.sort()\nc = 0\nfor i in m:\n    if i >= n_min:\n        break\n    c += msn\nprint(c)", "(msn, msm) = map(int, input().split())\nn = list(map(int, input().split()))\nm = list(map(int, input().split()))\nn_min = min(n)\nm.sort()\nc = 0\nfor i in m:\n    if i >= n_min:\n        break\n    c += msn\nprint(c)", "(N, M) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\ntemp = min(A)\ncount = 0\nfor i in B:\n    if i < temp:\n        count += 1\nprint(count * N)", "(N, M) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\ntemp = min(A)\ncount = 0\nfor i in B:\n    if i < temp:\n        count += 1\nprint(count * N)", "(n, m) = list(map(int, input().split()))\nx = input().split()\ny = input().split()\nfor i in range(len(x)):\n    x[i] = int(x[i])\nfor i in range(len(y)):\n    y[i] = int(y[i])\ns = x[0]\nfor i in range(len(x)):\n    if s > x[i]:\n        s = x[i]\ncount = 0\nfor i in range(len(y)):\n    if y[i] < s:\n        count += 1\nprint(count * n)", "(n, m) = list(map(int, input().split()))\na = input().split()\nb = input().split()\nfor i in range(len(a)):\n    a[i] = int(a[i])\nfor i in range(len(b)):\n    b[i] = int(b[i])\nsmol = a[0]\nfor i in range(len(a)):\n    if smol > a[i]:\n        smol = a[i]\ncnt = 0\nfor i in range(len(b)):\n    if b[i] < smol:\n        cnt += 1\nprint(cnt * n)", "(n, m) = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nmin_a = min(a)\nc = 0\nfor e in b:\n    if e < min_a:\n        c += 1\nprint(c * n)", "(n, m) = list(map(int, input().split()))\na = input().split()\nb = input().split()\nfor i in range(len(a)):\n    a[i] = int(a[i])\nfor i in range(len(b)):\n    b[i] = int(b[i])\nsmol = a[0]\nfor i in range(len(a)):\n    if smol > a[i]:\n        smol = a[i]\ncnt = 0\nfor i in range(len(b)):\n    if b[i] < smol:\n        cnt += 1\nprint(cnt * n)", "from bisect import bisect, bisect_left, bisect_right\n(n, m) = map(int, input().split())\nnli = list(map(int, input().split()))\nmli = list(map(int, input().split()))\nnli.sort()\nmli.sort()\nnum = nli[0]\nnm = bisect_left(mli, num)\nprint(n * nm)", "def solve(A, B):\n    A.sort()\n    B.sort(reverse=True)\n    ans = 0\n    while B:\n        x = B.pop()\n        if x < A[0]:\n            ans += n\n    print(ans)\nfor _ in range(1):\n    (n, m) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    solve(A, B)", "def solve(A, B):\n    A.sort()\n    B.sort(reverse=True)\n    ans = 0\n    while B:\n        x = B.pop()\n        if x < A[0]:\n            ans += n\n    print(ans)\nfor _ in range(1):\n    (n, m) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    solve(A, B)", "from collections import Counter\n\ndef solve(A, B):\n    A.sort()\n    dct_b = Counter(B)\n    B = list(dct_b.keys())\n    B.sort(reverse=True)\n    ans = 0\n    while B:\n        x = B.pop()\n        swaps = 0\n        if x < A[0]:\n            swaps += n\n        ans += swaps * dct_b[x]\n    print(ans)\nfor _ in range(1):\n    (n, m) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    solve(A, B)", "(n, m) = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nb = [int(j) for j in input().split()]\nmn = a[0]\nans = 0\nfor i in range(1, n):\n    mn = min(mn, a[i])\nfor j in range(0, m):\n    if b[j] < mn:\n        ans = ans + 1\nprint(ans * n)", "(n, m) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\na = min(A)\nc = 0\nl = len(B)\nfor i in range(l):\n    if B[i] < a:\n        c += 1\nprint(c * n)", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\nimport bisect\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef wline():\n    return stdin.read().split()\n\ndef main():\n    (n, m) = sm()\n    a = ln()\n    b = ln()\n    min_b = min(a)\n    count = 0\n    for i in b:\n        if i < min_b:\n            count += 1\n    print(count * n)\nmain()", "def solution(A, B):\n    A.sort()\n    B.sort()\n    ans = 0\n    for i in range(0, len(B)):\n        if B[i] >= A[0]:\n            break\n        else:\n            ans += len(A)\n    return ans\n_ = input()\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nprint(solution(A, B))", "try:\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    b.sort()\n    index = 0\n    for i in range(1, n):\n        if a[index] > a[i]:\n            index = i\n    (a[index], a[0]) = (a[0], a[index])\n    ans = 0\n    for i in range(m):\n        if b[i] < a[0]:\n            ans += n\n    print(ans)\nexcept Exception:\n    pass", "try:\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    b.sort()\n    index = 0\n    for i in range(1, n):\n        if a[index] > a[i]:\n            index = i\n    (a[index], a[0]) = (a[0], a[index])\n    ans = 0\n    for i in range(m):\n        if b[i] < a[0]:\n            ans += n\n    print(ans)\nexcept Exception:\n    pass", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nmn = min(a)\ncnt = 0\nfor i in range(0, m):\n    if b[i] < mn:\n        cnt += 1\nprint(cnt * n)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nmn = min(a)\ncnt = 0\nfor i in range(0, m):\n    if b[i] < mn:\n        cnt += 1\nprint(cnt * n)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nmn = min(a)\ncnt = 0\nfor i in range(0, m):\n    if b[i] < mn:\n        cnt += 1\nprint(cnt * n)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nmn = min(a)\ncnt = 0\nfor i in range(0, m):\n    if b[i] < mn:\n        cnt += 1\nprint(cnt * n)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nmn = min(a)\ncnt = 0\nfor i in range(0, m):\n    if b[i] < mn:\n        cnt += 1\nprint(cnt * n)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nmn = min(a)\ncnt = 0\nfor i in range(0, m):\n    if b[i] < mn:\n        cnt += 1\nprint(cnt * n)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nmn = min(a)\ncnt = 0\nfor i in range(0, m):\n    if b[i] < mn:\n        cnt += 1\nprint(cnt * n)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na = min(a)\nc = 0\nfor j in range(len(b)):\n    if b[j] < a:\n        c += 1\nprint(c * n)", "(n, m) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\na = min(A)\nc = 0\nfor i in range(len(B)):\n    if B[i] < a:\n        c += 1\nprint(c * n)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nk = min(a)\nc = 0\nfor i in b:\n    if i < k:\n        c += 1\nprint(c * n)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nk = min(a)\nc = 0\nfor i in b:\n    if i < k:\n        c += 1\nprint(c * n)", "import os.path\nimport sys\nfrom math import *\nfrom math import floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef inp():\n    return sys.stdin.readline().strip()\nfor _ in range(1):\n    (n, m) = map(int, inp().split())\n    a = list(map(int, inp().split()))\n    b = list(map(int, inp().split()))\n    a.sort()\n    b.sort()\n    (ans, i) = [0] * 2\n    while i < m and b[i] < a[0]:\n        ans += 1\n        i += 1\n    print(ans * n)", "(n, m) = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na.sort()\nb.sort()\nans = 0\nfor i in range(m):\n    if b[i] < a[0]:\n        ans += n\nprint(ans)", "(l, m) = map(int, input().split())\narr = list(map(int, input().split()))\nbrr = list(map(int, input().split()))\nbrr = sorted(brr)\ncount = 0\nloose = 0\nmini = min(arr)\nfor i in range(m):\n    if brr[i] >= mini:\n        break\n    count += l\nprint(count)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na.sort()\nb.sort()\nc = a[0]\nd = 0\nfor i in range(n):\n    if b[i] < c:\n        d += 1\n    else:\n        break\nprint(n * d)", "(n, m) = (int(o) for o in input().split())\na = [int(o) for o in input().split()]\nb = [int(o) for o in input().split()]\nmi = min(a)\nb.sort()\nans = 0\nfor i in b:\n    if i < mi:\n        ans += n\nprint(ans)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nx = 0\nz = min(a)\nfor i in b:\n    if i < z:\n        x += n\nprint(x)", "(l, m) = map(int, input().split())\narr = list(map(int, input().split()))\nbrr = list(map(int, input().split()))\nbrr = sorted(brr)\ncount = 0\nloose = 0\nmini = min(arr)\nfor i in range(m):\n    if brr[i] >= mini:\n        break\n    count += l\nprint(count)", "try:\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort(reverse=True)\n    c = 0\n    st = 0\n    stt = 0\n    if b[0] < a[0]:\n        c = c + m * n\n    else:\n        for j in range(m):\n            for i in range(n):\n                if b[j] > a[i]:\n                    st = -1\n                    break\n                if b[j] == a[i]:\n                    c = n * (m - (j + 1))\n                    st = 1\n                    if i == 0 and j == 0:\n                        c = 0\n                    break\n                if b[j] < a[i]:\n                    st = 2\n                    c = n * (m - j)\n                    break\n            if st == 1:\n                break\n            if st == -1:\n                continue\n            if st == 2:\n                break\n    print(c)\nexcept:\n    pass", "def solve(n, m, a, b):\n    mn = min(a)\n    c = 0\n    for i in range(m):\n        if b[i] < mn:\n            c += 1\n    return c * n\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(solve(n, m, a, b))", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nx = 0\nz = min(a)\nfor i in b:\n    if i < z:\n        x += n\nprint(x)", "import sys\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\narr = get_ints()\nn = arr[0]\nm = arr[1]\narra = get_ints()\narrb = get_ints()\narra = sorted(arra)\narrb = sorted(arrb)\nmina = min(arra)\nans = 0\nfor i in arrb:\n    if i < mina:\n        ans += n\n        continue\n    for j in arra:\n        if i >= j:\n            break\n        ans += 1\nprint(ans)", "(N, M) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nA.sort()\nB.sort()\nx = A[0]\nans = 0\nfor i in range(len(B)):\n    if x > B[i]:\n        ans = ans + N\n    else:\n        break\nprint(ans)", "(n, m) = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = sorted(list(map(int, input().split())))\nx = min(a)\nc = 0\nfor i in range(m):\n    if x > b[i]:\n        c = c + n\n    else:\n        break\nprint(c)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nk = 0\np = min(a)\nfor i in b:\n    if i < p:\n        k = k + n\nprint(k)", "(N, M) = map(int, input().split())\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\nC = min(A)\nD = 0\nfor i in B:\n    if i < C:\n        D += 1\nprint(D * N)", "(N, M) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nA.sort()\nB.sort()\nL = []\nflag = 0\nfor x in B:\n    c = 0\n    for y in A:\n        if x >= A[0]:\n            flag = 1\n            break\n        elif x == A[len(A) - 1]:\n            c = len(A) - 1\n            break\n        elif x < A[len(A) - 1]:\n            c = len(A)\n            break\n        elif x < y:\n            c += 1\n        else:\n            break\n    L.append(c)\n    if flag == 1:\n        break\nprint(sum(L))", "(N, M) = [int(x) for x in input().split()]\nA = [int(u) for u in input().split()]\nB = [int(u) for u in input().split()]\nB.sort()\nmina = min(A)\nfor i in range(len(B)):\n    if B[i] >= mina:\n        splt_index = i\n        break\nprint(N * splt_index)", "(N, M) = [int(x) for x in input().split()]\nA = [int(u) for u in input().split()]\nB = [int(u) for u in input().split()]\nA.sort()\nB.sort()\nmina = min(A)\nfor i in range(len(B)):\n    if B[i] >= mina:\n        splt_index = i\n        break\nprint(N * splt_index)", "(a, b) = map(int, input().split())\narr = list(map(int, input().split()))\nbrr = list(map(int, input().split()))\nm = min(arr)\nb = 0\nfor i in brr:\n    if i < m:\n        b += a\nprint(b)", "l = input()\nm = sorted(list(map(int, input().split())))\nn = sorted(list(map(int, input().split())))\na = len(m)\nc = 0\nfor i in range(0, len(n)):\n    if n[i] < m[0]:\n        c = c + a\n    else:\n        break\nprint(c)", "from sys import stdin as inp\nfrom sys import stdout as out\n(n, m) = list(map(int, inp.readline().split()))\na = list(map(int, inp.readline().split()))\nb = list(map(int, inp.readline().split()))\nc = 0\nm = min(a)\nfor i in b:\n    if i < m:\n        c += n\nprint(c)", "(n, m) = map(int, input().split())\nl1 = list(map(int, input().split()))\nl2 = list(map(int, input().split()))\nl1.sort()\nl2.sort()\nans = 0\nfor i in range(m):\n    if l2[i] < l1[0]:\n        ans += n\n    else:\n        break\nprint(ans)", "try:\n    (n, m) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    b = sorted(list(map(int, input().split())))\n    count = 0\n    for i in b:\n        if i < a[0]:\n            count += n\n    print(count)\nexcept:\n    pass", "(n, m) = map(int, input().split(' '))\na = list(map(int, input().split(' ')))\nb = list(map(int, input().split(' ')))\nf = min(a)\ncount = 0\nfor j in range(m):\n    if b[j] < f:\n        count += 1\nprint(count * n)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na.sort()\nb.sort()\nans = 0\nfor i in range(m):\n    if a[0] > b[i]:\n        ans += n\nprint(ans)", "(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\np = list(map(int, input().split()))\nl.sort()\np.sort()\nx = 0\nfor i in range(m):\n    if p[i] < l[0]:\n        x += n\nprint(x)", "(n, m) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\na = min(A)\nc = 0\nfor i in B:\n    if i < a:\n        c += 1\nprint(n * c)", "def binarySearch(arr, l, r, x):\n    mid = 0\n    while l <= r:\n        mid = l + (r - l) // 2\n        if arr[mid] < x:\n            l = mid + 1\n        else:\n            r = mid - 1\n    return mid\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na.sort()\nb.sort()\nlengthToBeSearched = len(a) - 1\nnumSwaps = 0\nfor i in b:\n    if i < a[0]:\n        numSwaps += len(a)\n    else:\n        break\nprint(numSwaps)", "(m, n) = map(int, input().split())\na = sorted(list(map(int, input().split())))\nb = sorted(list(map(int, input().split())))\nc = 0\ne = len(a)\nfor i in range(0, len(b)):\n    if b[i] < a[0]:\n        c = c + e\n    else:\n        break\nprint(c)", "try:\n    (n, m) = map(int, input().split())\n    A = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    B.sort()\n    minn = min(A)\n    (i, res) = (0, 0)\n    while i < m:\n        if B[i] < minn:\n            res += n\n        else:\n            break\n        i += 1\n    print(res)\nexcept EOFError:\n    pass", "(a, b) = map(int, input().split())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nx.sort()\ny.sort()\nc = 0\nfor i in range(len(y)):\n    if y[i] < x[0]:\n        c += len(x)\nprint(c)", "(N, M) = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\na = min(A)\nprint(N * sum([b < a for b in B]))", "(n, m) = map(int, input().split())\na = [int(ele) for ele in input().split()]\nb = [int(ele) for ele in input().split()]\nc = min(a)\ncount = 0\nfor i in b:\n    if i < c:\n        count += 1\nprint(count * n)", "(n, m) = list(map(int, input().split()))\nlst1 = list(map(int, input().split()))\nlst2 = list(map(int, input().split()))\nv = min(lst1)\ns = 0\nfor i in lst2:\n    if i < v:\n        s += n\nprint(s)", "(n, m) = map(int, input().split())\narr1 = [int(x) for x in input().split()]\narr2 = [int(x) for x in input().split()]\nif sum(arr1) == n and sum(arr2) == m:\n    print(0)\nelse:\n    arr1.sort(reverse=True)\n    arr2.sort()\n    c = 0\n    for i in range(0, m):\n        if arr2[i] < arr1[n - 1]:\n            c = c + 1\n    print(c * n)", "def arraySwap(n, m, l1, l2):\n    l = sorted(l1)\n    swap = 0\n    s1 = set(l1)\n    s2 = set(l2)\n    if s1 == 1 and s2 == 1:\n        swap = 0\n        return swap\n    for i in l2:\n        X = i\n        if X < l[0]:\n            swap += n\n    return swap\n(n, m) = input().split()\nl1 = [int(x) for x in input().split()]\nl2 = [int(x) for x in input().split()]\nprint(arraySwap(int(n), int(m), l1, l2))", "(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\nd = list(map(int, input().split()))\nx = min(l)\nc = 0\nfor i in range(m):\n    if d[i] < x:\n        c += 1\nprint(c * n)", "(n, m) = [int(x) for x in input().split()]\narrA = [int(x) for x in input().split()]\narrB = [int(x) for x in input().split()]\na = min(arrA)\nC = 0\nfor i in range(m):\n    if arrB[i] < a:\n        C += 1\nprint(C * n)", "(n, m) = map(int, input().split())\na = sorted(list(map(int, input().split())))\nb = sorted(list(map(int, input().split())))\ni = 0\ncount = 0\nfor i in range(m):\n    if b[i] >= a[0]:\n        continue\n    else:\n        count += n\nprint(count)", "try:\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    b.sort()\n    a.sort()\n    c = 0\n    k = 0\n    while k < m:\n        if b[k] < a[0]:\n            c = c + n\n        k = k + 1\n    print(c)\nexcept EOFError as e:\n    pass", "(n, m) = map(int, input().split())\na = sorted(list(map(int, input().split())))\nb = sorted(list(map(int, input().split())))\ni = 0\ncount = 0\nfor i in range(m):\n    x = b.pop(0)\n    if x >= a[0]:\n        continue\n    else:\n        count += n\nprint(count)", "n_m = input().split()\nmn = 1000000000.0 + 5\nn = int(n_m[0])\nm = int(n_m[1])\nx = input().split()\ny = input().split()\nfor i in range(n):\n    mn = min(mn, int(x[i]))\nops = 0\nfor i in range(m):\n    if int(y[i]) < mn:\n        ops += n\nprint(ops)", "(n, m) = map(int, input().split())\nl1 = list(map(int, input().split()))\nl2 = list(map(int, input().split()))\nl1.sort()\nl2.sort()\ncnt = 0\nfor i in range(m):\n    if l2[i] < l1[0]:\n        cnt = cnt + n\nprint(cnt)", "(n, m) = map(int, input().split())\narray1 = [int(i) for i in input().split()]\narray2 = [int(i) for i in input().split()]\nmini = min(array1)\nans = 0\nfor i in array2:\n    if i < mini:\n        ans += 1\nprint(ans * n)", "(n, m) = map(int, input().split())\nl1 = list(map(int, input().split()))\nl2 = list(map(int, input().split()))\na = min(l1)\ncount = 0\nfor ele in l2:\n    if ele < a:\n        count += 1\nprint(count * n)", "(N, M) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\na = min(A)\nc = 0\nfor i in range(len(B)):\n    if B[i] < a:\n        c += 1\nprint(c * N)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na1 = min(a)\nc = 0\nfor i in range(len(b)):\n    if b[i] < a1:\n        c += 1\nprint(c * n)", "try:\n    A = []\n    B = []\n    (N, M) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort()\n    ans = 0\n    for X in B:\n        if X >= A[0]:\n            break\n        ans = ans + N\n    print(ans)\nexcept:\n    pass", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nbrr = list(map(int, input().split()))\nm = min(arr)\nc = 0\nfor x in brr:\n    if x < m:\n        c += 1\nprint(c * n)", "(n, m) = map(int, input().split())\nN = list(map(int, input().split()))\nM = list(map(int, input().split()))\nN.sort()\nM.sort()\nNmin = min(N)\ncnt = n\nans = 0\nfor i in range(m):\n    if M[i] < Nmin:\n        ans += cnt\nprint(ans)", "(n, m) = list(map(int, input().split()))\nn = list(map(int, input().split()))\nnm = min(n)\nnum = list(map(int, input().split()))\ncount = 0\nfor i in num:\n    if i < nm:\n        count += 1\nprint(count * len(n))", "(n, m) = list(map(int, input().split()))\nn = list(map(int, input().split()))\nnm = min(n)\nnum = list(map(int, input().split()))\ncount = 0\nfor i in num:\n    if i < nm:\n        count += 1\nprint(count * len(n))", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nz = 0\nx = min(a)\nfor i in range(m):\n    if b[i] < x:\n        z += 1\nprint(z * n)", "(n, m) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\na = min(A)\nc = 0\nfor i in range(len(B)):\n    if B[i] < a:\n        c += 1\nprint(c * n)", "def lower(nums, target):\n    start = -1\n    low = 0\n    high = len(nums) - 1\n    while low < high:\n        m = low + (high - low) // 2\n        if nums[m] >= target:\n            start = m\n            high -= 1\n        else:\n            low = m + 1\n    return start\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nb.sort()\nmn = min(a)\ns1 = lower(b, mn)\nprint(s1 * len(a))"]