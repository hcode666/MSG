["from math import sqrt, floor\n\ndef T(N):\n    A = []\n    for i in range(1, floor(sqrt(N)) + 1):\n        if N % i == 0:\n            if N // i == i:\n                A.append(i)\n            else:\n                A.append(i)\n                A.append(N // i)\n    return A\na = int(input())\nfor i in range(a):\n    (N, K) = map(int, input().split())\n    A = T(N)\n    if N < K * (K + 1) // 2:\n        print(-1)\n    else:\n        B = []\n        for j in A:\n            if N // j >= K * (K + 1) // 2:\n                B.append(j)\n        b = max(B)\n        print(b)", "from math import sqrt, floor\n\ndef T(N):\n    A = []\n    for i in range(1, floor(sqrt(N)) + 1):\n        if N % i == 0:\n            if N // i == i:\n                A.append(i)\n            else:\n                A.append(i)\n                A.append(N // i)\n    return A\na = int(input())\nfor i in range(a):\n    (N, K) = map(int, input().split())\n    A = T(N)\n    if N < K * (K + 1) // 2:\n        print(-1)\n    else:\n        B = []\n        for j in A:\n            if N // j >= K * (K + 1) // 2:\n                B.append(j)\n        b = max(B)\n        print(b)", "from math import sqrt, floor\n\ndef T(N):\n    A = []\n    for i in range(1, floor(sqrt(N)) + 1):\n        if N % i == 0:\n            if N // i == i:\n                A.append(i)\n            else:\n                A.append(i)\n                A.append(N // i)\n    return A\na = int(input())\nfor i in range(a):\n    (N, K) = map(int, input().split())\n    A = T(N)\n    if N < K * (K + 1) // 2:\n        print(-1)\n    else:\n        B = []\n        for j in A:\n            if N // j >= K * (K + 1) // 2:\n                B.append(j)\n        b = max(B)\n        print(b)", "from math import sqrt\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    (f, c) = ([], 1)\n    while c <= sqrt(n):\n        if n % c == 0:\n            if n // c != c:\n                f.append(n // c)\n            f.append(c)\n        c += 1\n    s = k * (k + 1) // 2\n    m = -1\n    for c in f:\n        if c >= s:\n            m = max(m, n // c)\n    print(m)", "from math import sqrt, floor\n\ndef T(N):\n    A = []\n    for i in range(1, floor(sqrt(N)) + 1):\n        if N % i == 0:\n            if N // i == i:\n                A.append(i)\n            else:\n                A.append(i)\n                A.append(N // i)\n    return A\na = int(input())\nfor i in range(a):\n    (N, K) = map(int, input().split())\n    A = T(N)\n    if N < K * (K + 1) // 2:\n        print(-1)\n    else:\n        B = []\n        for j in A:\n            if N // j >= K * (K + 1) // 2:\n                B.append(j)\n        b = max(B)\n        print(b)", "from math import sqrt\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    (f, c) = ([], 1)\n    while c <= sqrt(n):\n        if n % c == 0:\n            if n // c != c:\n                f.append(n // c)\n            f.append(c)\n        c += 1\n    s = k * (k + 1) // 2\n    m = -1\n    for c in f:\n        if c >= s:\n            m = max(m, n // c)\n    print(m)", "from math import sqrt\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    (f, c) = ([], 1)\n    while c <= sqrt(n):\n        if n % c == 0:\n            if n // c != c:\n                f.append(n // c)\n            f.append(c)\n        c += 1\n    s = k * (k + 1) // 2\n    m = -1\n    for c in f:\n        if c >= s:\n            m = max(m, n // c)\n    print(m)", "from math import sqrt\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (fact, i) = ([], 1)\n    while i <= sqrt(n):\n        if n % i == 0:\n            if n // i != i:\n                fact.append(n // i)\n            fact.append(i)\n        i += 1\n    tot = k * (k + 1) // 2\n    mx = -1\n    for i in fact:\n        if i >= tot:\n            mx = max(mx, n // i)\n    print(mx)", "from math import sqrt\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (fact, i) = ([], 1)\n    while i <= sqrt(n):\n        if n % i == 0:\n            if n // i != i:\n                fact.append(n // i)\n            fact.append(i)\n        i += 1\n    tot = k * (k + 1) // 2\n    mx = -1\n    for i in sorted(fact):\n        if i >= tot:\n            mx = n // i\n            break\n    print(mx)", "def factors(x):\n    result = []\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            result.append(i)\n            if x // i != i:\n                result.append(x // i)\n        i += 1\n    return result\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = factors(n)\n    an = -1\n    for i in a:\n        c = i * k * (k + 1) // 2\n        if c % i == 0 and c <= n:\n            an = max(an, i)\n    print(an)", "def factor(N):\n    Z = []\n    N = int(N)\n    p = int(N ** 0.5)\n    for i in range(1, p):\n        if N % i == 0:\n            Z.append(i)\n            Z.append(int(N / i))\n    Z.sort()\n    return Z\nx = int(input())\nfor y in range(x):\n    (i, j) = map(int, input().split())\n    if j * (j + 1) / 2 > i:\n        print(-1)\n    else:\n        p = j * (j + 1) / 2\n        b = int(i / p)\n        A = factor(i)\n        s = len(A)\n        if b in A:\n            print(b)\n        else:\n            for y in range(1, s):\n                if A[y - 1] <= b < A[y]:\n                    print(A[y - 1])", "import math\n\ndef find_fac(fac, n):\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            if n // i != i:\n                fac.append(n // i)\n            fac.append(i)\nfor _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    temp = k * (k + 1) // 2\n    fac = []\n    find_fac(fac, n)\n    fac.sort()\n    flag = 0\n    for i in range(len(fac) - 1, -1, -1):\n        if n // fac[i] >= temp:\n            break\n        flag += 1\n    if flag == len(fac):\n        print(-1)\n    else:\n        print(fac[i])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    sm = k * (k + 1) // 2\n    if n < sm:\n        print(-1)\n        continue\n    m = 1\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            if n // i >= sm:\n                m = max(m, i)\n            x = n // i\n            if n // x >= sm:\n                m = max(m, x)\n    print(m)", "def factors(x):\n    result = []\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            result.append(i)\n            if x // i != i:\n                result.append(x // i)\n        i += 1\n    return result\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = factors(n)\n    an = -1\n    for i in a:\n        c = i * k * (k + 1) // 2\n        if c % i == 0 and c <= n:\n            an = max(an, i)\n    print(an)", "def factors(x):\n    result = []\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            result.append(i)\n            if x // i != i:\n                result.append(x // i)\n        i += 1\n    return result\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = factors(n)\n    an = -1\n    for i in a:\n        c = i * k * (k + 1) // 2\n        if c % i == 0 and c <= n:\n            an = max(an, i)\n    print(an)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    root = int(n ** 0.5)\n    min_sum = k * (k + 1) // 2\n    gcd = -1\n    for i in range(1, root + 1):\n        if n % i == 0:\n            sum = n // i\n            if sum >= min_sum:\n                gcd = max(gcd, i)\n            if i >= min_sum:\n                gcd = max(gcd, sum)\n    print(gcd)", "def factors(x):\n    result = []\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            result.append(i)\n            if x // i != i:\n                result.append(x // i)\n        i += 1\n    return result\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = factors(n)\n    an = -1\n    for i in a:\n        c = i * k * (k + 1) // 2\n        if c <= n:\n            an = max(an, i)\n    print(an)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    z = k * (k + 1) // 2\n    if z > n:\n        print(-1)\n    elif z == n:\n        print(1)\n    else:\n        ans = 1\n        for i in range(1, int(n ** 0.5) + 1, 1):\n            if n % i == 0:\n                if i >= z:\n                    ans = max(n // i, ans)\n                elif n // i >= z:\n                    ans = max(i, ans)\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = -1\n    l = []\n    for i in range(int(n ** 0.5) + 1, 0, -1):\n        if n % i == 0:\n            l += [i]\n            l += [n // i]\n    l.sort(reverse=True)\n    for i in l:\n        if n // i >= k * (k + 1) // 2:\n            ans = i\n            break\n    print(ans)", "import math\nfor _ in range(int(input())):\n    lis = list(map(int, input().split()))\n    n = lis[0]\n    k = lis[1]\n    temp = k * (k + 1) // 2\n    if n < temp:\n        print(-1)\n    elif k == 1:\n        print(n)\n    else:\n        flag = 1\n        for i in range(2, int(n ** 0.5) + 1):\n            if n % i == 0:\n                if n // i >= temp:\n                    flag = max(flag, i)\n                k = n // i\n                if n // k >= temp:\n                    flag = max(flag, k)\n        print(flag)", "def gcd(a, b):\n    while b > 0:\n        (a, b) = (b, a % b)\n    return a\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = []\n    b = int(n / (k * (k + 1) / 2))\n    if b == 0:\n        print('-1')\n    else:\n        r = 1\n        x = 1\n        while x * x <= n:\n            if n % x != 0:\n                x += 1\n                continue\n            if x <= b and x > r:\n                r = x\n            if n // x <= b and n // x > r:\n                r = n // x\n            x = x + 1\n        i = 1\n        while i < k:\n            a.append(r * i)\n            i += 1\n        l = n - r * (k * (k - 1) // 2)\n        a.append(l)\n        result = a[0]\n        for i in a[1:]:\n            result = gcd(result, i)\n        print(result)", "import os, sys\nfrom io import BytesIO, IOBase\n\ndef ii():\n    return int(input())\n\ndef si():\n    return input()\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\nimport math\nfor i in range(ii()):\n    (n, k) = mi()\n    if k * (k + 1) // 2 > n:\n        print(-1)\n    elif k == 1:\n        print(n)\n    else:\n        a = k * (k + 1) // 2\n        f = 0\n        s = n // a\n        while s:\n            if n % s == 0:\n                print(s)\n                break\n            if s > 100000:\n                a += 1\n                s = n // a\n            else:\n                s -= 1", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    s = k * (k + 1) // 2\n    u = n // s\n    if s > n:\n        print(-1)\n    elif u <= int(n ** 0.5):\n        while n % u != 0:\n            u -= 1\n        print(u)\n    else:\n        j = int(n / u)\n        while j < n ** 0.5 and n % j != 0:\n            j += 1\n        if j == int(n ** 0.5) + 1 and int(n ** 0.5) != n ** 0.5 or (j == int(n ** 0.5) and int(n ** 0.5) == n ** 0.5):\n            j = int(n / u)\n            while n % j != 0:\n                j -= 1\n            print(j)\n        else:\n            print(n // j)", "def factors(x):\n    result = []\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            result.append(i)\n            if x // i != i:\n                result.append(x // i)\n        i += 1\n    return result\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = factors(n)\n    an = -1\n    for i in a:\n        c = i * k * (k + 1) // 2\n        if c % i == 0 and c <= n:\n            an = max(an, i)\n    print(an)", "def factors(x):\n    result = []\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            result.append(i)\n            if x // i != i:\n                result.append(x // i)\n        i += 1\n    return result\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = factors(n)\n    an = -1\n    for i in a:\n        c = i * k * (k + 1) // 2\n        if c % i == 0 and c <= n:\n            an = max(an, i)\n    print(an)", "def factors(x):\n    result = []\n    i = 1\n    while i * i <= x:\n        if x % i == 0:\n            result.append(i)\n            if x // i != i:\n                result.append(x // i)\n        i += 1\n    return result\nfor _ in range(int(input())):\n    (N, K) = [int(x) for x in input().split()]\n    Sum = K * (K + 1) / 2\n    X = N / Sum\n    if X < 1:\n        print(-1)\n    else:\n        List = factors(N)\n        List.sort()\n        if len(List) == 1:\n            print(1)\n        else:\n            for i in range(len(List)):\n                if List[i] == X:\n                    print(List[i])\n                    break\n                elif List[i] > X:\n                    print(List[i - 1])\n                    break", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n < k * (k + 1) // 2:\n        print(-1)\n        continue\n    tmp = []\n    ans = 1\n    s = k * (k + 1) // 2\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            if n // i == i:\n                x = i\n                if n // x >= s:\n                    ans = max(ans, x)\n            else:\n                x = i\n                if n // x >= s:\n                    ans = max(ans, x)\n                x = n // i\n                if n // x >= s:\n                    ans = max(ans, x)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (k, n) = map(int, input().split())\n    k1 = k\n    summ = n * (n + 1) // 2\n    if n > 44720 or summ > k:\n        print(-1)\n    else:\n        fact = []\n        for i in range(1, int(math.sqrt(k)) + 1):\n            if k % i == 0:\n                fact += [i, k // i]\n        fact.sort()\n        for i in fact:\n            if i >= summ:\n                print(k // i)\n                break", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n < k * (k + 1) // 2:\n        print(-1)\n        continue\n    tmp = []\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            if n // i == i:\n                tmp.append(i)\n            else:\n                tmp.append(i)\n                tmp.append(n // i)\n    tmp.sort()\n    tmp = tmp[::-1]\n    ans = 1\n    s = k * (k + 1) // 2\n    for x in tmp:\n        if n // x >= s:\n            print(x)\n            break", "def biggest(number, ans):\n    last = 1\n    for i in range(2, int(number ** 0.5) + 1):\n        if number % i == 0:\n            if number // i >= ans:\n                last = max(last, i)\n            k = number // i\n            if number // k >= ans:\n                last = max(last, k)\n    return last\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    summ = k * (k + 1)\n    summ //= 2\n    if summ > n:\n        print(-1)\n    elif k == 1:\n        print(n)\n    else:\n        ans = biggest(n, summ)\n        print(ans)", "for _ in range(int(input())):\n    (n, res) = map(int, input().split())\n    ans = res * (res + 1) // 2\n    ans = n // ans\n    if ans == 0:\n        print(-1)\n    else:\n        cnt = 1\n        for x in range(1, int(pow(n, 0.5)) + 1):\n            if n % x != 0:\n                continue\n            if x <= ans and x > cnt:\n                cnt = x\n            if n // x <= ans and n // x > cnt:\n                cnt = n // x\n        print(cnt)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, k) = map(int, stdin.readline().split())\n    minions = k * (k + 1) // 2\n    if minions > n:\n        print(-1)\n        continue\n    cur_ans = 1\n    i = 1\n    limit = n ** 0.5\n    while i <= limit:\n        if n % i == 0:\n            if n - i * minions >= 0 and (n - i * minions) % i == 0:\n                cur_ans = max(cur_ans, i)\n            ti = n // i\n            if n - ti * minions >= 0 and (n - ti * minions) % ti == 0:\n                cur_ans = max(cur_ans, ti)\n        i += 1\n    print(cur_ans)", "import math\n\ndef printDivisors(n):\n    l = []\n    x = []\n    for i in range(1, int(math.sqrt(n) + 1)):\n        if n % i == 0:\n            if n / i == i:\n                x.append(i)\n            else:\n                x.append(i)\n                l.append(int(n / i))\n    return x + l[::-1]\nt = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    kk = printDivisors(n)\n    x = k * (k + 1) // 2\n    if n < x:\n        print(-1)\n    else:\n        op = 10 ** 9\n        for i in kk:\n            if n // i >= x:\n                op = min(op, n // i)\n        print(n // op)", "from math import *\nt = int(input())\nfor y in range(t):\n    (m, n) = map(int, input().split())\n    s = n * (n + 1) // 2\n    r = m // s\n    l = 1\n    ans = -1\n    for i in range(int(sqrt(m)), 0, -1):\n        if m % i == 0 and i <= r:\n            ans = max(ans, i)\n            if m // i <= r:\n                ans = max(ans, m // i)\n    print(ans)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    Z = K * (K + 1) // 2\n    Z = N // Z\n    if Z == 0:\n        print(-1)\n    else:\n        r = 1\n        for x in range(1, int(pow(N, 0.5)) + 1):\n            if N % x != 0:\n                continue\n            if x <= Z and x > r:\n                r = x\n            if N // x <= Z and N // x > r:\n                r = N // x\n        print(r)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = k * (k + 1) // 2\n    x = n // a\n    ans = -1\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            if n // i <= x:\n                ans = max(ans, n // i)\n            elif i <= x:\n                ans = max(ans, i)\n            else:\n                break\n    print(ans)", "def fac(n):\n    se = set()\n    for i in range(1, int(n ** (1 / 2)) + 1):\n        if n % i == 0:\n            se.add(i)\n            se.add(n // i)\n    return sorted(list(se))\n\ndef pro(k):\n    return k * (k + 1) // 2\nt = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    if n < pro(m):\n        print(-1)\n        continue\n    arr = fac(n)\n    arr = arr[1:]\n    ans = [1]\n    for j in arr:\n        p = n // j\n        if p < pro(m):\n            break\n        else:\n            ans.append(j)\n    print(max(ans))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = -1\n    p = k * (k + 1) // 2\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            if i * p <= n and (n - i * p) % i == 0:\n                ans = max(ans, i)\n            q = n // i\n            if p * q <= n and (n - q * p) % q == 0:\n                ans = max(ans, q)\n    print(ans)", "from sys import stdin\nfrom functools import reduce\n\ndef factors(n):\n    return list(set(reduce(list.__add__, ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0))))\nfor _ in range(int(stdin.readline())):\n    (n, k) = map(int, stdin.readline().split())\n    m = k * (k + 1) // 2\n    if m > n:\n        print(-1)\n    else:\n        arr = factors(n)\n        arr = sorted(arr, reverse=True)\n        for ele in arr:\n            if n // ele >= m:\n                print(ele)\n                break", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = -1\n    l = []\n    for i in range(int(n ** 0.5) + 1, 0, -1):\n        if n % i == 0:\n            l += [i]\n            l += [n // i]\n    l.sort(reverse=True)\n    for i in l:\n        if n // i >= k * (k + 1) // 2:\n            ans = i\n            break\n    print(ans)", "def solve(n, k):\n    r = -1\n    sk = (k + 1) * k // 2\n    d = 1\n    while d ** 2 <= n:\n        if n % d == 0:\n            g1 = d\n            if sk * g1 <= n:\n                r = max(r, g1)\n            g2 = n // d\n            if sk * g2 <= n:\n                r = max(r, g2)\n        d += 1\n    return r\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(solve(n, k))", "def factors(n):\n    i = 1\n    z = []\n    while i <= int(n ** 0.5) + 1:\n        if n % i == 0:\n            if n // i == i:\n                z.append(i)\n            else:\n                z.append(i)\n                z.append(n // i)\n        i = i + 1\n    return z\n\ndef sumOfFirstN(n):\n    return n * (n + 1) // 2\n\ndef case():\n    (n, k) = map(int, input().split())\n    z = factors(n)\n    z.sort()\n    if sumOfFirstN(k) > n:\n        print(-1)\n        return\n    ans = 1\n    for gcd in z:\n        if n - gcd * sumOfFirstN(k) < 0:\n            break\n        if (n - gcd * sumOfFirstN(k)) % gcd == 0:\n            ans = max(ans, gcd)\n    print(ans)\nfor _ in range(int(input())):\n    case()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    val = k * (k + 1) // 2\n    ans = -1\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            rem = n // i\n            if rem >= val:\n                ans = max(ans, i)\n            if i >= val:\n                ans = max(ans, rem)\n    print(ans)", "from sys import stdin, stdout\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = -1\n    p = k * (k + 1) // 2\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0 and n - i * p >= 0 and ((n - i * p) % i == 0):\n            ans = max(ans, i)\n        t = n // i\n        if n % t == 0 and n - t * p >= 0 and ((n - t * p) % t == 0):\n            ans = max(ans, t)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().strip().split())\n    sm = k * (k + 1) // 2\n    fact = set()\n    sq = int(n ** 0.5)\n    sq += 100\n    for i in range(1, sq):\n        if n % i == 0:\n            fact.add(i)\n            fact.add(n // i)\n    res = -1\n    for f in fact:\n        if f * sm <= n:\n            res = max(res, f)\n    print(res)", "from math import sqrt\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = k * (k + 1) // 2\n    f = []\n    for i in range(1, int(sqrt(n)) + 2):\n        if not n % i:\n            f += [i, n // i]\n    for i in reversed(sorted(f)):\n        if i * c <= n:\n            print(i)\n            break\n    else:\n        print(-1)", "from math import sqrt, ceil\nt = int(input())\nfor _ in range(t):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    x = n // (k * (k + 1) // 2)\n    ans = -1\n    for i in range(1, ceil(sqrt(n) + 1), 1):\n        if i > x:\n            break\n        if n % i == 0:\n            if i <= x and i > ans:\n                ans = i\n            if n // i <= x and n // i > ans:\n                ans = n // i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    S = k * (k + 1) // 2\n    if n >= S:\n        div = []\n        for d in range(1, 40000):\n            if d * d == n:\n                div.append(d)\n                break\n            if d * d > n:\n                break\n            if n % d == 0:\n                div.append(d)\n                div.append(n // d)\n        guess = n // S\n        if n % guess == 0:\n            print(guess)\n        else:\n            ans = 1\n            for i in div:\n                if ans < i < guess:\n                    ans = i\n            print(ans)\n    else:\n        print('-1')"]