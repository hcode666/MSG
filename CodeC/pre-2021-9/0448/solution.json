["for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == k:\n        for j in range(1, n + 1):\n            print(j, end=' ')\n        print()\n    else:\n        l = []\n        a = k\n        if k == 1:\n            for j in range(1, n + 1):\n                if j == 1:\n                    l.append(j)\n                else:\n                    l.append(-j)\n        else:\n            for j in range(1, n + 1):\n                if j % 2 != 0 and a > 0:\n                    l.append(j)\n                    a -= 1\n                else:\n                    l.append(-j)\n            if a > 0:\n                for j in range(n - 1, -1, -1):\n                    if a == 0:\n                        break\n                    elif l[j] < 0:\n                        l[j] = -l[j]\n                        a -= 1\n        for j in l:\n            print(j, end=' ')\n        print()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == k:\n        for j in range(1, n + 1):\n            print(j, end=' ')\n        print()\n    else:\n        l = []\n        a = k\n        if k == 1:\n            for j in range(1, n + 1):\n                if j == 1:\n                    l.append(j)\n                else:\n                    l.append(-j)\n        else:\n            for j in range(1, n + 1):\n                if j % 2 != 0 and a > 0:\n                    l.append(j)\n                    a -= 1\n                else:\n                    l.append(-j)\n            if a > 0:\n                for j in range(n - 1, -1, -1):\n                    if a == 0:\n                        break\n                    elif l[j] < 0:\n                        l[j] = -l[j]\n                        a -= 1\n        for j in l:\n            print(j, end=' ')\n        print()\n        print()", "def calculate(k, n):\n    (s, d, inc) = (1, 1, 1)\n    l = []\n    l.append(0)\n    while inc <= n:\n        l.append(inc * s)\n        if s == 1:\n            k -= 1\n            if k == 0:\n                s *= -1\n        if k > 0:\n            s *= -1\n        inc += 1\n    if n % 2 == 0:\n        inc -= 1\n    else:\n        inc -= 2\n    while k > 0:\n        l[inc] = -1 * l[inc]\n        inc -= 2\n        k -= 1\n    l.remove(0)\n    print(*l)\n(t, k, n) = (0, 0, 0)\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    calculate(k, n)", "def calculate(k, n):\n    (s, d, inc) = (1, 1, 1)\n    l = []\n    l.append(0)\n    while inc <= n:\n        l.append(inc * s)\n        if s == 1:\n            k -= 1\n            if k == 0:\n                s *= -1\n        if k > 0:\n            s *= -1\n        inc += 1\n    if n % 2 == 0:\n        inc -= 1\n    else:\n        inc -= 2\n    while k > 0:\n        l[inc] = -1 * l[inc]\n        inc -= 2\n        k -= 1\n    l.remove(0)\n    print(*l)\n(t, k, n) = (0, 0, 0)\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    calculate(k, n)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = []\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            a.append(i)\n        else:\n            a.append(-i)\n    if n % 2 == 0:\n        b = n // 2\n    else:\n        b = n // 2 + 1\n    if b > k:\n        f = b - k\n        for i in range(n - 1, -1, -1):\n            if a[i] > 0:\n                a[i] = -a[i]\n                f -= 1\n            if f == 0:\n                break\n    if b < k:\n        f = k - b\n        for i in range(n - 1, -1, -1):\n            if a[i] < 0:\n                a[i] = -a[i]\n                f -= 1\n            if f == 0:\n                break\n    for i in a:\n        print(i, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = []\n    if k <= n // 2:\n        for j in range(1, 2 * k + 1, 2):\n            l += [j]\n            l += [-j - 1]\n        for j in range(2 * k + 1, n + 1):\n            l += [-j]\n    else:\n        for j in range(1, 2 * (n - k) + 1, 2):\n            l += [j]\n            l += [-j - 1]\n        for j in range(2 * (n - k) + 1, n + 1):\n            l += [j]\n    print(*l)", "for t in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = []\n    if k <= n // 2:\n        for i in range(0, 2 * k, 2):\n            a.append(-(i + 1))\n            a.append(i + 2)\n        for i in range(n - 2 * k):\n            a.append(-(2 * k + i + 1))\n    else:\n        for i in range(0, 2 * (n - k), 2):\n            a.append(-(i + 1))\n            a.append(i + 2)\n        for i in range(2 * k - n):\n            a.append(2 * (n - k) + i + 1)\n    for i in a:\n        print(i, end=' ')\n    print()", "for t in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = []\n    if k <= n // 2:\n        for i in range(0, 2 * k, 2):\n            a.append(-(i + 1))\n            a.append(i + 2)\n        for i in range(n - 2 * k):\n            a.append(-(2 * k + i + 1))\n    else:\n        for i in range(0, 2 * (n - k), 2):\n            a.append(-(i + 1))\n            a.append(i + 2)\n        for i in range(2 * k - n):\n            a.append(2 * (n - k) + i + 1)\n    for i in a:\n        print(i, end=' ')\n    print()", "for t in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = []\n    if k <= n // 2:\n        for i in range(0, 2 * k, 2):\n            a.append(-(i + 1))\n            a.append(i + 2)\n        for i in range(n - 2 * k):\n            a.append(-(2 * k + i + 1))\n    else:\n        for i in range(0, 2 * (n - k), 2):\n            a.append(-(i + 1))\n            a.append(i + 2)\n        for i in range(2 * k - n):\n            a.append(2 * (n - k) + i + 1)\n    print(*a)", "for _ in range(int(input())):\n    (n, num_pos) = map(int, input().split())\n    num_neg = n - num_pos\n    numbers = [x for x in range(1, n + 1)]\n    cache = [0] * n\n    cache[0] = 1\n    count_pos = 1\n    count_neg = 0\n    i = 1\n    while count_pos < num_pos and count_neg < num_neg:\n        cache[i] = -cache[i - 1]\n        if i % 2 == 0:\n            count_pos += 1\n        else:\n            count_neg += 1\n        i += 1\n    if count_pos == num_pos:\n        cache[i:] = [-1] * (n - i)\n    else:\n        cache[i:] = [1] * (n - i)\n    output = [str(numbers[x] * cache[x]) for x in range(n)]\n    print(' '.join(output))", "for t in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = []\n    if k <= n // 2:\n        for i in range(0, 2 * k, 2):\n            a.append(-(i + 1))\n            a.append(i + 2)\n        for i in range(n - 2 * k):\n            a.append(-(2 * k + i + 1))\n    else:\n        for i in range(0, 2 * (n - k), 2):\n            a.append(-(i + 1))\n            a.append(i + 2)\n        for i in range(2 * k - n):\n            a.append(2 * (n - k) + i + 1)\n    for i in a:\n        print(i, end=' ')\n    print()", "for t in range(int(input())):\n    (n, k) = (int(i) for i in input().split())\n    ar1 = list((i for i in range(1, n + 1)))\n    kdash = n - k\n    for i in range(0, len(ar1), 2):\n        if kdash != 0:\n            kdash -= 1\n            ar1[i] = 0 - ar1[i]\n        else:\n            break\n    if kdash != 0:\n        for i in reversed(range(1, len(ar1), 2)):\n            if kdash != 0:\n                kdash -= 1\n                ar1[i] = 0 - ar1[i]\n    for elem in ar1:\n        print(elem, end=' ')\n    print()", "tests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    ans = []\n    for j in range(n):\n        if j & 1:\n            ans.append(-j - 1)\n        else:\n            ans.append(j + 1)\n    negative = n - k\n    negative_present = n // 2\n    diff = negative - negative_present\n    index = n - 1\n    while diff > 0:\n        if ans[index] > 0:\n            ans[index] = -1 * ans[index]\n            diff -= 1\n        index -= 1\n    while diff < 0:\n        if ans[index] < 0:\n            ans[index] = -1 * ans[index]\n            diff += 1\n        index -= 1\n    print(*ans)", "tests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    ans = []\n    for j in range(n):\n        if j & 1:\n            ans.append(-j - 1)\n        else:\n            ans.append(j + 1)\n    negative = n - k\n    negative_present = n // 2\n    diff = negative - negative_present\n    index = n - 1\n    while diff > 0:\n        if ans[index] > 0:\n            ans[index] = -1 * ans[index]\n            diff -= 1\n        index -= 1\n    while diff < 0:\n        if ans[index] < 0:\n            ans[index] = -1 * ans[index]\n            diff += 1\n        index -= 1\n    print(*ans)", "t = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    if n / 2 > k:\n        l = list((-1 * x for x in range(1, n + 1)))\n        mark = k\n    else:\n        l = list(range(1, n + 1))\n        mark = n - k\n    c = 0\n    for i in range(0, n, 2):\n        if c == mark:\n            break\n        l[i] = -1 * l[i]\n        c += 1\n    print(' '.join((str(x) for x in l)))", "t = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    if n / 2 > k:\n        l = list((-1 * x for x in range(1, n + 1)))\n        mark = k\n    else:\n        l = list(range(1, n + 1))\n        mark = n - k\n    c = 0\n    for i in range(0, n, 2):\n        if c == mark:\n            break\n        l[i] = -1 * l[i]\n        c += 1\n    print(' '.join((str(x) for x in l)))", "t = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    if n / 2 > k:\n        l = list((-1 * x for x in range(1, n + 1)))\n        mark = k\n    else:\n        l = list(range(1, n + 1))\n        mark = n - k\n    c = 0\n    for i in range(0, n, 2):\n        if c == mark:\n            break\n        l[i] = -1 * l[i]\n        c += 1\n    print(' '.join((str(x) for x in l)))", "t = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    if n / 2 > k:\n        l = list((-1 * x for x in range(1, n + 1)))\n        mark = k\n    else:\n        l = list(range(1, n + 1))\n        mark = n - k\n    c = 0\n    for i in range(0, n, 2):\n        if c == mark:\n            break\n        l[i] = -1 * l[i]\n        c += 1\n    print(' '.join((str(x) for x in l)))", "t = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    if n / 2 > k:\n        l = list((-1 * x for x in range(1, n + 1)))\n        mark = k\n    else:\n        l = list(range(1, n + 1))\n        mark = n - k\n    c = 0\n    for i in range(0, n, 2):\n        if c == mark:\n            break\n        l[i] = -1 * l[i]\n        c += 1\n    print(' '.join((str(x) for x in l)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = []\n    neg = 0\n    pos = 0\n    for i in range(1, n + 1):\n        if k > n // 2:\n            if neg < n - k and i % 2 == 1:\n                print(-i, end=' ')\n                neg += 1\n            else:\n                print(i, end=' ')\n        elif pos < k and i % 2 == 0:\n            print(i, end=' ')\n            pos += 1\n        else:\n            print(-i, end=' ')\n    print()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = []\n    for i in range(n):\n        ans.append(i + 1)\n        if i & 1:\n            ans[i] = -ans[i]\n    n = n + 1\n    if k < n // 2:\n        diff = n // 2 - k\n        ind = n - 2\n        while diff > 0:\n            if ans[ind] > 0:\n                ans[ind] = -ans[ind]\n                diff -= 1\n            ind -= 1\n    else:\n        diff = k - n // 2\n        ind = n - 2\n        while diff > 0:\n            if ans[ind] < 0:\n                ans[ind] = -ans[ind]\n                diff -= 1\n            ind -= 1\n    print(*ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = []\n    neg = 0\n    pos = 0\n    for i in range(1, n + 1):\n        if k > n // 2:\n            if neg < n - k and i % 2 == 1:\n                print(-i, end=' ')\n                neg += 1\n            else:\n                print(i, end=' ')\n        elif pos < k and i % 2 == 0:\n            print(i, end=' ')\n            pos += 1\n        else:\n            print(-i, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = []\n    neg = 0\n    pos = 0\n    for i in range(1, n + 1):\n        if k > n // 2:\n            if neg < n - k and i % 2 == 1:\n                print(-i, end=' ')\n                neg += 1\n            else:\n                print(i, end=' ')\n        elif pos < k and i % 2 == 0:\n            print(i, end=' ')\n            pos += 1\n        else:\n            print(-i, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = []\n    neg = 0\n    pos = 0\n    for i in range(1, n + 1):\n        if k > n // 2:\n            if neg < n - k and i % 2 == 1:\n                print(-i, end=' ')\n                neg += 1\n            else:\n                print(i, end=' ')\n        elif pos < k and i % 2 == 0:\n            print(i, end=' ')\n            pos += 1\n        else:\n            print(-i, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            if k > 0:\n                arr.append(i)\n                k -= 1\n            else:\n                arr.append(-i)\n        else:\n            arr.append(-i)\n    if k > 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if k > 0:\n                if arr[i] < 0:\n                    arr[i] = arr[i] * -1\n                    k -= 1\n    print(*arr)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            if k > 0:\n                arr.append(i)\n                k -= 1\n            else:\n                arr.append(-i)\n        else:\n            arr.append(-i)\n    if k > 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if k > 0:\n                if arr[i] < 0:\n                    arr[i] = arr[i] * -1\n                    k -= 1\n    print(*arr)", "T = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    L = [i for i in range(1, N + 1)]\n    for i in range(1, N, 2):\n        L[i] = -L[i]\n    current_K = (N + 1) // 2\n    diff = current_K - K\n    L = list(reversed(L))\n    if diff < 0:\n        if N % 2 == 0:\n            for i in range(-diff):\n                L[2 * i] = -L[2 * i]\n        else:\n            for i in range(-diff):\n                L[2 * i + 1] = -L[2 * i + 1]\n    elif N % 2 == 0:\n        for i in range(diff):\n            L[2 * i + 1] = -L[2 * i + 1]\n    else:\n        for i in range(diff):\n            L[2 * i] = -L[2 * i]\n    for i in reversed(L):\n        print(i, end=' ')\n    print()", "T = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    L = [i for i in range(1, N + 1)]\n    for i in range(1, N, 2):\n        L[i] = -L[i]\n    current_K = (N + 1) // 2\n    diff = current_K - K\n    L = list(reversed(L))\n    if diff < 0:\n        if N % 2 == 0:\n            for i in range(-diff):\n                L[2 * i] = -L[2 * i]\n        else:\n            for i in range(-diff):\n                L[2 * i + 1] = -L[2 * i + 1]\n    elif N % 2 == 0:\n        for i in range(diff):\n            L[2 * i + 1] = -L[2 * i + 1]\n    else:\n        for i in range(diff):\n            L[2 * i] = -L[2 * i]\n    for i in reversed(L):\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            if k > 0:\n                arr.append(i)\n                k -= 1\n            else:\n                arr.append(-i)\n        else:\n            arr.append(-i)\n    if k > 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if k > 0:\n                if arr[i] < 0:\n                    arr[i] = arr[i] * -1\n                    k -= 1\n    print(*arr)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            if k > 0:\n                arr.append(i)\n                k -= 1\n            else:\n                arr.append(-i)\n        else:\n            arr.append(-i)\n    if k > 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if k > 0:\n                if arr[i] < 0:\n                    arr[i] = arr[i] * -1\n                    k -= 1\n    print(*arr)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            if k > 0:\n                arr.append(i)\n                k -= 1\n            else:\n                arr.append(-i)\n        else:\n            arr.append(-i)\n    if k > 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if k > 0:\n                if arr[i] < 0:\n                    arr[i] = arr[i] * -1\n                    k -= 1\n    print(*arr)", "T = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    L = [i for i in range(1, N + 1)]\n    for i in range(1, N, 2):\n        L[i] = -L[i]\n    current_K = (N + 1) // 2\n    diff = current_K - K\n    L = list(reversed(L))\n    if diff < 0:\n        if N % 2 == 0:\n            for i in range(-diff):\n                L[2 * i] = -L[2 * i]\n        else:\n            for i in range(-diff):\n                L[2 * i + 1] = -L[2 * i + 1]\n    elif N % 2 == 0:\n        for i in range(diff):\n            L[2 * i + 1] = -L[2 * i + 1]\n    else:\n        for i in range(diff):\n            L[2 * i] = -L[2 * i]\n    for i in reversed(L):\n        print(i, end=' ')\n    print()", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    A = []\n    for i in range(N):\n        if i % 2 == 0:\n            if M > 0:\n                A.append(i + 1)\n                M -= 1\n            else:\n                A.append(-i - 1)\n        else:\n            A.append(-i - 1)\n    for i in range(len(A) - 1, -1, -1):\n        if M > 0:\n            if A[i] < 0:\n                A[i] *= -1\n                M -= 1\n        else:\n            break\n    print(*A)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            if k > 0:\n                arr.append(i)\n                k -= 1\n            else:\n                arr.append(-i)\n        else:\n            arr.append(-i)\n    if k > 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if k > 0:\n                if arr[i] < 0:\n                    arr[i] = arr[i] * -1\n                    k -= 1\n    print(*arr)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            a.append(i)\n        else:\n            a.append(-i)\n    positive = math.ceil(n / 2)\n    needed = abs(positive - k)\n    if positive > k:\n        i = n - 1\n        while needed > 0:\n            if a[i] > 0:\n                a[i] *= -1\n                needed -= 1\n            i -= 1\n    if positive < k:\n        i = n - 1\n        while needed > 0:\n            if a[i] < 0:\n                a[i] *= -1\n                needed -= 1\n            i -= 1\n    print(*a)", "import math\ntc = int(input())\nfor _ in range(tc):\n    (n, k) = map(int, input().split())\n    ans = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            ans.append(i)\n        else:\n            ans.append(-i)\n    positive = math.ceil(n / 2)\n    if positive > k:\n        i = n - 1\n        needed = positive - k\n        while needed > 0:\n            if ans[i] > 0:\n                ans[i] *= -1\n                needed -= 1\n            i -= 1\n    if positive < k:\n        i = n - 1\n        needed = k - positive\n        while needed > 0:\n            if ans[i] < 0:\n                ans[i] *= -1\n                needed -= 1\n            i -= 1\n    print(*ans)", "import math as m\nt = int(input())\nwhile t != 0:\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    a = []\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            a.append(-i)\n        else:\n            a.append(i)\n    positive = m.ceil(n / 2)\n    if positive > k:\n        i = n - 1\n        while positive != k:\n            if a[i] > 0:\n                a[i] *= -1\n                positive -= 1\n            i -= 1\n    else:\n        i = n - 1\n        while positive != k:\n            if a[i] < 0:\n                a[i] *= -1\n                positive += 1\n            i -= 1\n    print(*a)\n    t -= 1", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    arr = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            if k > 0:\n                arr.append(i)\n                k -= 1\n            else:\n                arr.append(-i)\n        else:\n            arr.append(-i)\n    if k > 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if k > 0:\n                if arr[i] < 0:\n                    arr[i] = arr[i] * -1\n                    k -= 1\n    print(*arr)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = []\n    for i in range(n):\n        li.append((i + 1) * (-1) ** i)\n    l = n // 2 + n % 2\n    if k > l:\n        x = n - n % 2 - 1\n        y = x - 2 * (k - l)\n        for j in range(x, y, -2):\n            li[j] = -li[j]\n    else:\n        x = n - 1 + n % 2 - 1\n        y = x - 2 * (l - k)\n        for j in range(x, y, -2):\n            li[j] = -li[j]\n    print(*li)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [j for j in range(1, n + 1)]\n    sum_a = 0\n    j = 0\n    while j < len(a):\n        if k > 0:\n            sum_a += a[j]\n            k -= 1\n            j += 1\n        elif k == 0:\n            if sum_a - a[j] <= 0:\n                sum_a -= a[j]\n                a[j] = -a[j]\n                j += 1\n            else:\n                m = 1\n                while sum_a - a[j] > 0:\n                    sum_a -= 2 * a[j - m]\n                    if sum_a <= 0:\n                        k += 1\n                    a[j - m] = -a[j - m]\n                    m += 1\n    print(*a)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            if k > 0:\n                arr.append(i)\n                k -= 1\n            else:\n                arr.append(-i)\n        else:\n            arr.append(-i)\n    if k > 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if k > 0:\n                if arr[i] < 0:\n                    arr[i] = arr[i] * -1\n                    k -= 1\n    print(*arr)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            if k > 0:\n                arr.append(i)\n                k -= 1\n            else:\n                arr.append(-i)\n        else:\n            arr.append(-i)\n    if k > 0:\n        for i in range(len(arr) - 1, -1, -1):\n            if k > 0:\n                if arr[i] < 0:\n                    arr[i] = arr[i] * -1\n                    k -= 1\n    print(*arr)", "import math\nT = int(input(''))\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    s = N - K\n    l = []\n    for i in range(1, N + 1):\n        if K > 0 and s > 0:\n            if i % 2 == 1:\n                l.append(i)\n                K -= 1\n            else:\n                l.append(-i)\n                s -= 1\n        elif K > 0:\n            l.append(i)\n            K -= 1\n        else:\n            l.append(-i)\n            s -= 1\n    print(*l)", "from math import ceil\nt = int(input())\nwhile t:\n    l = []\n    (n, k) = [int(x) for x in input().split()]\n    for i in range(1, n + 1):\n        l.append(i) if i % 2 != 0 else l.append(-i)\n    x = ceil(n / 2)\n    i = n - 1\n    if x < k:\n        while x != k:\n            if l[i] < 0:\n                l[i] = -1 * l[i]\n                x += 1\n            i -= 1\n    if x > k:\n        while x != k:\n            if l[i] > 0:\n                l[i] = -1 * l[i]\n                x -= 1\n            i -= 1\n    [print(x, end=' ') for x in l]\n    print()\n    t = t - 1", "import math\nt = int(input())\nfor i in range(t):\n    a = list(map(int, input().split()))\n    n = a[0]\n    k = a[1]\n    s = n - k\n    d = []\n    for i in range(1, a[0] + 1):\n        if k > 0 and s > 0:\n            if i % 2 == 1:\n                d.append(i)\n                k -= 1\n            else:\n                d.append(-i)\n                s -= 1\n        elif k > 0:\n            d.append(i)\n            k -= 1\n        else:\n            d.append(-i)\n            s -= 1\n    print(*d)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            ans.append(i)\n        else:\n            ans.append(-i)\n    result = math.ceil(n / 2)\n    if k > result:\n        i = n - 1\n        while k > result:\n            if ans[i] < 0:\n                ans[i] = ans[i] * -1\n                k -= 1\n            i -= 1\n    elif k < result:\n        i = n - 1\n        while k < result:\n            if ans[i] > 0:\n                ans[i] = ans[i] * -1\n                k += 1\n            i -= 1\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    l = []\n    s = 0\n    if k == 0:\n        for i in range(n):\n            a = 0 - i - 1\n            l.append(a)\n    else:\n        for i in range(n):\n            a = i + 1\n            if k > 0:\n                if s - a > 0:\n                    a = 0 - a\n                l.append(a)\n                s = s + a\n                k = k - 1\n            elif s - a < 0:\n                a = 0 - a\n                l.append(a)\n            else:\n                l[-1] = 0 - l[-1]\n                l.append(a)\n                s = s - 2 * l[-1] + a\n    for a in l:\n        if a != l[-1]:\n            print(a, end=' ')\n        else:\n            print(a)", "import sys\n\ndef solve(n, k):\n    arr = []\n    prefix = []\n    for i in range(1, n + 1):\n        if i % 2:\n            arr.append(i)\n        else:\n            arr.append(-i)\n    k_count = n // 2 + n % 2\n    diff = abs(k - k_count)\n    if k < k_count:\n        for i in range(n - 1, -1, -1):\n            if diff == 0:\n                break\n            if arr[i] > 0:\n                arr[i] *= -1\n                diff -= 1\n    elif k > k_count:\n        for i in range(n - 1, -1, -1):\n            if diff == 0:\n                break\n            if arr[i] < 0:\n                arr[i] *= -1\n                diff -= 1\n    print(*arr, sep=' ')\nif 1 == 2:\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nelse:\n    input = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    (n, k) = list(map(int, input().split()))\n    solve(n, k)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = []\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            c.append(-i)\n        else:\n            c.append(i)\n    pos = math.ceil(n / 2)\n    if pos > k:\n        i = n - 1\n        ans = pos - k\n        while ans > 0:\n            if c[i] > 0:\n                c[i] *= -1\n                ans -= 1\n            i -= 1\n    elif pos < k:\n        i = n - 1\n        ans = k - pos\n        while ans > 0:\n            if c[i] < 0:\n                c[i] *= -1\n                ans -= 1\n            i -= 1\n    print(*c)", "import math\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    c = []\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            c.append(-i)\n        else:\n            c.append(i)\n    ans = math.ceil(n / 2)\n    if ans > k:\n        i = n - 1\n        needed = ans - k\n        while needed > 0:\n            if c[i] > 0:\n                c[i] *= -1\n                needed -= 1\n            i -= 1\n    elif ans < k:\n        i = n - 1\n        needed = k - ans\n        while needed > 0:\n            if c[i] < 0:\n                c[i] *= -1\n                needed -= 1\n            i -= 1\n    print(*c)", "T = int(input())\nans = []\nfor _ in range(T):\n    (N, K) = [int(i) for i in input().split()]\n    A = []\n    count = 0\n    for i in range(1, N + 1):\n        if i % 2 == 0:\n            A.append(i)\n            count += 1\n        else:\n            A.append(-i)\n    e = K - count\n    if e > 0:\n        for i in range(N - 1, -1, -1):\n            if A[i] < 0 and e > 0:\n                e -= 1\n                A[i] *= -1\n            if e == 0:\n                break\n    elif e < 0:\n        for i in range(N - 1, -1, -1):\n            if A[i] > 0 and e < 0:\n                e += 1\n                A[i] *= -1\n            if e == 0:\n                break\n    s = ''\n    for i in range(N):\n        s += str(A[i]) + ' '\n    ans.append(s)\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = []\n    if k <= n / 2:\n        for i in range(1, n + 1):\n            if i <= 2 * k and i % 2 == 1:\n                arr.append(i)\n            else:\n                arr.append(-i)\n    else:\n        for i in range(1, n + 1):\n            if i <= 2 * (n - k) and i % 2 == 0:\n                arr.append(-i)\n            else:\n                arr.append(i)\n    print(*arr)", "test = int(input())\nfor i in range(test):\n    (n, k) = map(int, input().split())\n    x = n - k\n    for j in range(1, n + 1):\n        if j % 2 == 0 and x > 0:\n            print(-j, end=' ')\n            x -= 1\n        elif k <= 0:\n            print(-j, end=' ')\n        else:\n            print(j, end=' ')\n            k -= 1\n    print()", "import math\ntry:\n    tc = int(input())\n    for _ in range(tc):\n        (n, k) = map(int, input().split())\n        ans = []\n        need = 0\n        for i in range(1, n + 1):\n            if i % 2 != 0:\n                ans.append(i)\n            else:\n                ans.append(-i)\n        p = math.ceil(n / 2)\n        need = p - k if p > k else k - p\n        if k < p:\n            i = n - 1\n            while need > 0:\n                if ans[i] > 0:\n                    ans[i] *= -1\n                    need -= 1\n                i -= 1\n        if k > p:\n            i = n - 1\n            while need > 0:\n                if ans[i] < 0:\n                    ans[i] *= -1\n                    need -= 1\n                i -= 1\n        print(*ans)\nexcept:\n    pass", "t = int(input())\nimport math\nwhile t:\n    t = t - 1\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    l = [-1 * (i + 1) for i in range(n)]\n    for i in range(1, n, 2):\n        l[i] = l[i] * -1\n    if k - math.floor(n / 2) > 0:\n        s = k - math.floor(n / 2)\n        i = n - 1\n        while s:\n            if l[i] < 0:\n                l[i] = -1 * l[i]\n                s = s - 1\n            i = i - 1\n    if math.floor(n / 2) - k > 0:\n        s = math.floor(n / 2) - k\n        i = n - 1\n        while s:\n            if l[i] > 0:\n                l[i] = -1 * l[i]\n                s = s - 1\n            i = i - 1\n    for i in range(n):\n        print(l[i], end=' ')", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    a = list()\n    if 2 * k <= n:\n        for i in range(2 * k):\n            if i % 2 == 0:\n                a.append(i + 1)\n            else:\n                a.append(-i - 1)\n        for i in range(2 * k, n, 1):\n            a.append(-i - 1)\n    elif 2 * k > n:\n        for i in range(2 * (n - k)):\n            if i % 2 == 0:\n                a.append(i + 1)\n            else:\n                a.append(-i - 1)\n        for i in range(2 * (n - k), n, 1):\n            a.append(i + 1)\n    else:\n        for i in range(2 * k):\n            if i % 2 == 0:\n                a.append(i + 1)\n            else:\n                a.append(-i - 1)\n    for i in a:\n        print(i, end=' ')\n    t -= 1", "import sys\nimport math\nimport collections\nimport heapq\nimport queue\nimport itertools\nimport functools\nimport operator\nimport time\nreadline = sys.stdin.readline\nIPS = lambda : readline().rstrip()\nIP = lambda : int(readline().rstrip())\nMP = lambda : map(int, readline().split())\nLS = lambda : list(map(int, readline().split()))\nAR = lambda : [int(x) for x in readline().split()]\n\ndef solve():\n    for _ in range(IP()):\n        (n, k) = MP()\n        ans = [-x for x in range(1, n + 1)]\n        ans[0] = -ans[0]\n        k -= 1\n        (i, j) = (1, -1)\n        if n & 1 == 1:\n            j = n - 1\n        else:\n            j = n - 2\n        while k > 0:\n            if i < n:\n                ans[i] = -ans[i]\n                i += 2\n            elif j > 0:\n                ans[j] = -ans[j]\n                j -= 2\n            k -= 1\n        for a in ans:\n            print(a, end=' ')\n        print()\nsolve()", "test_case = int(input())\nfor i in range(0, test_case):\n    line = input().split(' ')\n    N = int(line[0])\n    K = int(line[1])\n    ans = []\n    for i in range(1, N + 1):\n        if i % 2 == 0:\n            ans.append(0 - i)\n        else:\n            ans.append(i)\n    temp = K - int((N + 1) / 2)\n    ind = N - 1\n    if temp > 0:\n        while temp > 0:\n            if ans[ind] < 0:\n                ans[ind] = 0 - ans[ind]\n                temp = temp - 1\n            ind = ind - 1\n    else:\n        temp = 0 - temp\n        while temp > 0:\n            if ans[ind] > 0:\n                ans[ind] = 0 - ans[ind]\n                temp = temp - 1\n            ind = ind - 1\n    for i in range(0, N):\n        print(ans[i], end=' ')\n    print()", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    cnt = n / 2\n    diff = n - k\n    if k > cnt:\n        for i in range(1, n + 1):\n            if diff > 0 and i % 2 == 1:\n                diff -= 1\n                print(-i, end=' ')\n            else:\n                print(i, end=' ')\n    else:\n        for i in range(1, n + 1):\n            if k > 0 and i % 2 == 0:\n                k = k - 1\n                print(i, end=' ')\n            else:\n                print(-i, end=' ')\n    print()\n    t = t - 1", "import math\ntc = int(input())\nfor _ in range(tc):\n    (n, k) = map(int, input().split())\n    ans = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            ans.append(i)\n        else:\n            ans.append(-i)\n    positive = math.ceil(n / 2)\n    if positive > k:\n        i = n - 1\n        needed = positive - k\n        while needed > 0:\n            if ans[i] > 0:\n                ans[i] *= -1\n                needed -= 1\n            i -= 1\n    if positive < k:\n        i = n - 1\n        needed = k - positive\n        while needed > 0:\n            if ans[i] < 0:\n                ans[i] *= -1\n                needed -= 1\n            i -= 1\n    print(*ans)", "import math\ntc = int(input())\nfor _ in range(tc):\n    (n, k) = map(int, input().split())\n    ans = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            ans.append(i)\n        else:\n            ans.append(-i)\n    positive = math.ceil(n / 2)\n    if positive > k:\n        i = n - 1\n        needed = positive - k\n        while needed > 0:\n            if ans[i] > 0:\n                ans[i] *= -1\n                needed -= 1\n            i -= 1\n    if positive < k:\n        i = n - 1\n        needed = k - positive\n        while needed > 0:\n            if ans[i] < 0:\n                ans[i] *= -1\n                needed -= 1\n            i -= 1\n    print(*ans)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    flips = n - k\n    A = []\n    for i in range(n):\n        a = i\n        if (i + 1) % 2 == 0 and flips > 0:\n            A.append(-(a + 1))\n            flips -= 1\n        else:\n            A.append(a + 1)\n    if flips > 0:\n        if n % 2:\n            last_odd = n - 1\n        else:\n            last_odd = n - 2\n        while flips > 0:\n            A[last_odd] *= -1\n            flips -= 1\n            last_odd -= 2\n    print(*A)", "import math\ntry:\n    t = int(input())\n    for i in range(t):\n        (n, k) = map(int, input().split())\n        h = math.ceil(n / 2)\n        l = [x * pow(-1, x + 1) for x in range(1, n + 1)]\n        if k < h:\n            for j in range(2 * k, n):\n                l[j] = -abs(l[j])\n        elif k > h:\n            if l[n - 1] < 0:\n                m = n - 1\n            else:\n                m = n - 2\n            for j in range(k - h):\n                l[m] = -l[m]\n                m = m - 2\n        for j in range(n):\n            print(l[j], end=' ')\n        print()\nexcept:\n    pass", "import math\ntry:\n    t = int(input())\n    for _ in range(t):\n        (n, k) = list(map(int, input().split()))\n        seq = []\n        for i in range(1, n + 1):\n            if i % 2 != 0:\n                seq.append(i)\n            else:\n                seq.append(-i)\n        positive = math.ceil(n / 2)\n        if positive > k:\n            i = n - 1\n            req = positive - k\n            while req > 0:\n                if seq[i] > 0:\n                    seq[i] = -(i + 1)\n                    req -= 1\n                i -= 1\n        if positive < k:\n            i = n - 1\n            req = k - positive\n            while req > 0:\n                if seq[i] < 0:\n                    seq[i] = i + 1\n                    req -= 1\n                i -= 1\n        print(*seq)\nexcept EOFError as t:\n    pass", "import math\ntry:\n    t = int(input())\n    for _ in range(t):\n        (n, k) = list(map(int, input().split()))\n        seq = []\n        for i in range(1, n + 1):\n            if i % 2 != 0:\n                seq.append(i)\n            else:\n                seq.append(-i)\n        positive = math.ceil(n / 2)\n        if positive > k:\n            i = n - 1\n            req = positive - k\n            while req > 0:\n                if seq[i] > 0:\n                    seq[i] *= -1\n                    req -= 1\n                i -= 1\n        if positive < k:\n            i = n - 1\n            req = k - positive\n            while req > 0:\n                if seq[i] < 0:\n                    seq[i] *= -1\n                    req -= 1\n                i -= 1\n        print(*seq)\nexcept EOFError as t:\n    pass", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    pos = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            l.append(-1 * i)\n        else:\n            l.append(i)\n            pos += 1\n    if pos < k:\n        g = k - pos\n        c = 0\n        for i in range(n - 1, -1, -1):\n            if l[i] < 0:\n                l[i] = -1 * l[i]\n                c += 1\n            if c == g:\n                break\n    if pos > k:\n        g = pos - k\n        c = 0\n        for i in range(n - 1, -1, -1):\n            if l[i] > 0:\n                l[i] = -1 * l[i]\n                c += 1\n            if c == g:\n                break\n    print(*l)", "from math import ceil\nT = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    L = []\n    for i in range(1, N + 1):\n        if i % 2 == 0:\n            L.append(-i)\n        else:\n            L.append(i)\n    C = ceil(N / 2)\n    if K <= C:\n        d = C - K\n        c = 0\n        for i in range(N - 1, -1, -1):\n            if c == d:\n                break\n            if L[i] > 0:\n                L[i] = -L[i]\n                c += 1\n    else:\n        d = K - C\n        c = 0\n        for i in range(N - 1, -1, -1):\n            if c == d:\n                break\n            if L[i] < 0:\n                L[i] = abs(L[i])\n                c += 1\n    print(*L)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        if i % 2 == 0:\n            arr.append(i + 1)\n        else:\n            arr.append(-i - 1)\n    pos = n // 2 + n % 2\n    neg = n // 2\n    if k < pos:\n        for i in range(n - 1, -1, -1):\n            if k == pos:\n                break\n            if arr[i] > 0:\n                arr[i] = -arr[i]\n                pos -= 1\n    else:\n        for i in range(n - 1, -1, -1):\n            if k == pos:\n                break\n            if arr[i] < 0:\n                arr[i] = -arr[i]\n                pos += 1\n    print(*arr)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [1]\n    p = 1\n    ne = 0\n    m = 0\n    for j in range(2, n + 1):\n        if j % 2 == 0:\n            if p != k:\n                arr.append(j)\n                p += 1\n            else:\n                m = 1\n                break\n        elif ne != n - k:\n            arr.append(-j)\n            ne += 1\n        else:\n            m = -1\n            break\n    if abs(arr[-1]) != n and m == -1:\n        for x in range(arr[-1] + 1, n + 1):\n            arr.append(x)\n    elif abs(arr[-1]) != n and m == 1:\n        for x in range(abs(arr[-1]) + 1, n + 1):\n            arr.append(-x)\n    print(*arr)", "from sys import stdin, stdout\nimport math\nfrom itertools import permutations, combinations\nfrom collections import defaultdict\nfrom bisect import bisect_left, bisect_right\nmod = 1000000007\n\ndef L():\n    return list(map(int, stdin.readline().split()))\n\ndef In():\n    return map(int, stdin.readline().split())\n\ndef I():\n    return int(stdin.readline())\n\ndef printIn(ob):\n    return stdout.write(str(ob) + '\\n')\n\ndef powerLL(n, p):\n    result = 1\n    while p:\n        if p & 1:\n            result = result * n % mod\n        p = int(p / 2)\n        n = n * n % mod\n    return result\n\ndef myCode():\n    (n, k) = In()\n    seq = []\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            seq.append(-i)\n        else:\n            seq.append(i)\n    if k == math.ceil(n / 2):\n        print(*seq)\n    elif k < math.ceil(n / 2):\n        req = abs(k - math.ceil(n / 2))\n        for i in range(n - 1, -1, -1):\n            if seq[i] > 0:\n                seq[i] = -1 * seq[i]\n                req -= 1\n            if req == 0:\n                break\n        print(*seq)\n    else:\n        req = abs(k - math.ceil(n / 2))\n        for i in range(n - 1, -1, -1):\n            if seq[i] < 0:\n                seq[i] = -1 * seq[i]\n                req -= 1\n            if req == 0:\n                break\n        print(*seq)\n\ndef main():\n    for t in range(I()):\n        myCode()\nmain()", "import math\nt = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            l.append(-i)\n        else:\n            l.append(i)\n    mid = math.ceil(n / 2)\n    if mid > k:\n        c = mid - k\n        i = n - 1\n        while c > 0:\n            if l[i] > 0:\n                l[i] = l[i] * -1\n                c -= 1\n            i -= 1\n    if mid < k:\n        c = k - mid\n        j = n - 1\n        while c > 0:\n            if l[j] < 0:\n                l[j] = l[j] * -1\n                c -= 1\n            j -= 1\n    print(*l)\n    t -= 1", "import math\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = []\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            lis.append(-i)\n        else:\n            lis.append(i)\n    res = math.ceil(n / 2)\n    i = len(lis) - 1\n    while res < k:\n        if lis[i] % 2 == 0:\n            lis[i] = i + 1\n            res += 1\n            i -= 2\n        else:\n            i -= 1\n    j = len(lis) - 1\n    while res > k:\n        if lis[j] % 2 != 0:\n            lis[j] = -(j + 1)\n            j -= 2\n            res -= 1\n        else:\n            j -= 1\n    print(*lis)", "import math\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = []\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            lis.append(-i)\n        else:\n            lis.append(i)\n    res = math.ceil(n / 2)\n    if res < k:\n        i = n - 1\n        need = k - res\n        while need > 0:\n            if lis[i] < 0:\n                lis[i] *= -1\n                need -= 1\n            i -= 1\n    if res > k:\n        j = n - 1\n        need = res - k\n        while need > 0:\n            if lis[j] > 0:\n                lis[j] *= -1\n                need -= 1\n            j -= 1\n    print(*lis)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    arr = [0] * a\n    for i in range(a):\n        arr[i] = i + 1\n    x = 0\n    b = a - b\n    if b > a // 2:\n        x = b - a // 2\n        b = a // 2\n    for i in range(b):\n        arr[2 * i + 1] *= -1\n    if a % 2 == 0:\n        for i in range(x):\n            arr[a - 2 * i - 2] *= -1\n    if a % 2 != 0:\n        for i in range(x):\n            arr[a - 2 * i - 1] *= -1\n    print(*arr)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    cumsum = 0\n    coupo = 0\n    coune = 0\n    for i in range(N):\n        if coupo == K:\n            print(-(i + 1), end=' ')\n            coune += 1\n            continue\n        elif coune == N - K:\n            print(i + 1, end=' ')\n            coupo += 1\n            continue\n        a = cumsum + (i + 1)\n        b = cumsum - (i + 1)\n        if abs(a) > abs(b):\n            cumsum = b\n            print(-(i + 1), end=' ')\n        else:\n            cumsum = a\n            print(i + 1, end=' ')\n        if cumsum > 0:\n            coupo += 1\n        else:\n            coune += 1", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    po = K\n    ne = N - K\n    arr = []\n    cumsum = 0\n    coupo = 0\n    coune = 0\n    for i in range(N):\n        if coupo == K:\n            arr.append(-(i + 1))\n            coune += 1\n            continue\n        elif coune == ne:\n            arr.append(i + 1)\n            coupo += 1\n            continue\n        a = cumsum + (i + 1)\n        b = cumsum - (i + 1)\n        if abs(a) > abs(b):\n            cumsum = b\n            arr.append(-(i + 1))\n        else:\n            cumsum = a\n            arr.append(i + 1)\n        if cumsum > 0:\n            coupo += 1\n        else:\n            coune += 1\n    for i in range(len(arr)):\n        print(arr[i], end=' ')", "try:\n    import math\n    tc = int(input())\n    for _ in range(tc):\n        (n, k) = map(int, input().split())\n        ans = []\n        for i in range(1, n + 1):\n            if i % 2 != 0:\n                ans.append(i)\n            else:\n                ans.append(-i)\n        positive = math.ceil(n / 2)\n        if positive > k:\n            i = n - 1\n            needed = positive - k\n            while needed > 0:\n                if ans[i] > 0:\n                    ans[i] *= -1\n                    needed -= 1\n                i -= 1\n        if positive < k:\n            i = n - 1\n            needed = k - positive\n            while needed > 0:\n                if ans[i] < 0:\n                    ans[i] *= -1\n                    needed -= 1\n                i -= 1\n        print(*ans)\nexcept:\n    pass", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            ans.append(i)\n        else:\n            ans.append(-i)\n    posvale = math.ceil(n / 2)\n    if posvale > k:\n        i = n - 1\n        change = posvale - k\n        while change > 0:\n            if ans[i] > 0:\n                ans[i] *= -1\n                change = change - 1\n            i = i - 1\n    if posvale < k:\n        i = n - 1\n        change = k - posvale\n        while change > 0:\n            if ans[i] < 0:\n                ans[i] *= -1\n                change = change - 1\n            i = i - 1\n    for i in range(len(ans)):\n        print(ans[i], end=' ')", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            ans.append(i)\n        else:\n            ans.append(-i)\n    posvale = math.ceil(n / 2)\n    if posvale > k:\n        i = n - 1\n        change = posvale - k\n        while change > 0:\n            if ans[i] > 0:\n                ans[i] *= -1\n                change = change - 1\n            i = i - 1\n    if posvale < k:\n        i = n - 1\n        change = k - posvale\n        while change > 0:\n            if ans[i] < 0:\n                ans[i] *= -1\n                change = change - 1\n            i = i - 1\n    for i in range(len(ans)):\n        print(ans[i], end=' ')", "import math\nt = int(input())\nfor _ in range(t):\n    (N, K) = map(int, input().split())\n    ans = []\n    for i in range(1, N + 1):\n        if i % 2 == 0:\n            ans.append(-i)\n        else:\n            ans.append(i)\n    positive = math.ceil(N / 2)\n    if positive > K:\n        i = N - 1\n        needed = positive - K\n        while needed > 0:\n            if ans[i] > 0:\n                ans[i] *= -1\n                needed -= 1\n            i -= 1\n    else:\n        i = N - 1\n        needed = K - positive\n        while needed > 0:\n            if ans[i] < 0:\n                ans[i] *= -1\n                needed -= 1\n            i -= 1\n    print(*ans)", "for i in range(int(input())):\n    (N, K) = map(int, input().split())\n    a = []\n    if N == K:\n        for i in range(1, N + 1):\n            a.append(i)\n    elif K > N - K:\n        j = 0\n        c = 1\n        while c < N + 1:\n            if j < N - K:\n                a.append(c)\n                c += 1\n                c = -c\n                a.append(c)\n                c = -c\n                j += 1\n                c += 1\n            else:\n                a.append(c)\n                c += 1\n    elif K < N - K:\n        j = 0\n        c = 1\n        while c < N + 1:\n            if j < K:\n                a.append(c)\n                c += 1\n                c = -c\n                a.append(c)\n                c = -c\n                j += 1\n                c += 1\n            else:\n                c = -c\n                a.append(c)\n                c = -c\n                c += 1\n    else:\n        c = 1\n        while c < N + 1:\n            a.append(c)\n            c += 1\n            c = -c\n            a.append(c)\n            c = -c\n            c += 1\n    print(*a)", "try:\n    for _ in range(int(input())):\n        arr = list(map(int, input().split()))\n        a = []\n        s = 0\n        for i in range(arr[0]):\n            a.append(i + 1)\n        if arr[0] % 2 == 0:\n            for j in range(arr[0]):\n                if a[j] % 2 == 1:\n                    a[j] = -a[j]\n        else:\n            for j in range(arr[0]):\n                if a[j] % 2 == 0:\n                    a[j] = -a[j]\n        count = 0\n        for j in a:\n            if j > 0:\n                count = count + 1\n        if arr[1] > count:\n            diff = arr[1] - count\n            for j in range(arr[0] - 1, 0 - 1, -1):\n                if a[j] < 0 and diff > 0:\n                    a[j] = -a[j]\n                    diff = diff - 1\n        if arr[1] < count:\n            diff = count - arr[1]\n            for j in range(arr[0] - 1, -1, -1):\n                if a[j] > 0 and diff > 0:\n                    a[j] = -a[j]\n                    diff = diff - 1\n        for j in a:\n            print(j, end=' ')\n        print('')\nexcept:\n    pass", "import math\ntc = int(input())\nfor _ in range(tc):\n    (n, k) = map(int, input().split())\n    ans = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            ans.append(i)\n        else:\n            ans.append(-i)\n    positive = math.ceil(n / 2)\n    if positive > k:\n        i = n - 1\n        diff = positive - k\n        while diff > 0:\n            if ans[i] > 0:\n                ans[i] *= -1\n                diff = diff - 1\n            i = i - 1\n    if positive < k:\n        i = n - 1\n        diff = k - positive\n        while diff > 0:\n            if ans[i] < 0:\n                ans[i] *= -1\n                diff = diff - 1\n            i = i - 1\n    for i in range(len(ans)):\n        print(ans[i], end=' ')", "t = int(input())\nfor m in range(t):\n    (n, k) = list(map(int, input().split()))\n    if n == k:\n        l = [x for x in range(1, n + 1)]\n        print(*l)\n    else:\n        l = []\n        for i in range(1, n + 1):\n            if i % 2 == 0:\n                l.append(i)\n            else:\n                l.append(-i)\n        val = n // 2\n        if k == val:\n            print(*l)\n        else:\n            if k > val:\n                if n % 2 == 0:\n                    j = n - 2\n                else:\n                    j = n - 1\n                val = k - val\n            else:\n                if n % 2 == 0:\n                    j = n - 1\n                else:\n                    j = n - 2\n                val = val - k\n            for i in range(val):\n                l[j] = -l[j]\n                j -= 2\n            print(*l)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k <= n // 2:\n        for i in range(1, 2 * k + 1):\n            if i % 2 == 1:\n                print(-1 * i, end=' ')\n            else:\n                print(i, end=' ')\n        for i in range(2 * k + 1, n + 1):\n            print(-1 * i, end=' ')\n    else:\n        j = n - k\n        for i in range(1, 2 * j + 1):\n            if i % 2 == 1:\n                print(-1 * i, end=' ')\n            else:\n                print(i, end=' ')\n        for i in range(2 * j + 1, n + 1):\n            print(i, end=' ')\n    print()", "import math\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    arr = []\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            arr.append(i)\n        else:\n            arr.append(-i)\n    v = math.ceil(n / 2)\n    if v > k:\n        i = n - 1\n        j = v - k\n        while j > 0:\n            if arr[i] > 0:\n                arr[i] *= -1\n                j -= 1\n            i -= 1\n    if v < k:\n        i = n - 1\n        j = k - v\n        while j > 0:\n            if arr[i] < 0:\n                arr[i] *= -1\n                j -= 1\n            i -= 1\n    print(*arr)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    pos_cnt = k\n    for i in range(1, n + 1):\n        if n - k > 0 and i % 2 == 0:\n            k += 1\n            print(-i, end=' ')\n        elif pos_cnt > 0:\n            pos_cnt -= 1\n            print(i, end=' ')\n        else:\n            print(-i, end=' ')\n    print()", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, k) = map(int, input().split())\n    arr = [-i for i in range(n + 1)]\n    for i in range(k + 1):\n        if i <= n // 2:\n            arr[2 * i] = -arr[2 * i]\n        else:\n            arr[2 * (n - i) + 1] = -arr[2 * (n - i) + 1]\n    print(*arr[1:])", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            ans.append(i)\n        else:\n            ans.append(-i)\n    positive = math.ceil(n / 2)\n    if positive > k:\n        need = positive - k\n        i = n - 1\n        while need > 0:\n            if ans[i] > 0:\n                ans[i] *= -1\n                need -= 1\n            i -= 1\n    if positive < k:\n        need = k - positive\n        i = n - 1\n        while need > 0:\n            if ans[i] < 0:\n                ans[i] *= -1\n                need -= 1\n            i -= 1\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    l = []\n    s = 0\n    if k == 0:\n        for i in range(n):\n            a = 0 - i - 1\n            l.append(a)\n    else:\n        for i in range(n):\n            a = i + 1\n            if k > 0:\n                if s - a > 0:\n                    a = 0 - a\n                l.append(a)\n                s = s + a\n                k = k - 1\n            elif s - a < 0:\n                a = 0 - a\n                l.append(a)\n            else:\n                l[-1] = 0 - l[-1]\n                l.append(a)\n                s = s - 2 * l[-1] + a\n    for a in l:\n        if a != l[-1]:\n            print(a, end=' ')\n        else:\n            print(a)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(range(1, n + 1))\n    for i in range(1, n, 2):\n        arr[i] *= -1\n    (pos_px, i) = (math.ceil(n / 2), n - 1)\n    while pos_px > k:\n        if i % 2 == 0:\n            arr[i] *= -1\n            pos_px -= 1\n        i -= 1\n    i = n - 1\n    while pos_px < k:\n        if i % 2:\n            arr[i] *= -1\n            pos_px += 1\n        i -= 1\n    print(*arr)", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    output = []\n    if k <= n / 2:\n        points = 0\n        for j in range(1, n + 1):\n            if j % 2 == 1 and points < k:\n                output.append(j)\n                points += 1\n            else:\n                output.append(-j)\n    else:\n        points = 0\n        for j in range(1, n + 1):\n            if j % 2 == 1 and n + 1 - j > k - points:\n                output.append(-j)\n            else:\n                output.append(j)\n                points += 1\n    print(' '.join(list(map(str, output))))", "import math\ntc = int(input())\nfor _ in range(tc):\n    (n, k) = map(int, input().split())\n    ans = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            ans.append(i)\n        else:\n            ans.append(-i)\n    positive = math.ceil(n / 2)\n    if positive > k:\n        i = n - 1\n        needed = positive - k\n        while needed > 0:\n            if ans[i] > 0:\n                ans[i] *= -1\n                needed -= 1\n            i -= 1\n    if positive < k:\n        i = n - 1\n        needed = k - positive\n        while needed > 0:\n            if ans[i] < 0:\n                ans[i] *= -1\n                needed -= 1\n            i -= 1\n    print(*ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    myList = []\n    for i in range(1, n + 1):\n        myList.append(-i if i % 2 == 0 else i)\n    if n % 2 == 0:\n        prefixes = n // 2\n    else:\n        prefixes = n // 2 + 1\n    changes = k - prefixes\n    if changes < 0:\n        count = 0\n        for i in range(-1, -n, -1):\n            if count == changes:\n                break\n            if myList[i] > 0:\n                myList[i] *= -1\n                count -= 1\n    else:\n        count = 0\n        for i in range(-1, -n, -1):\n            if count == changes:\n                break\n            if myList[i] < 0:\n                myList[i] *= -1\n                count += 1\n    for element in myList:\n        print(element, end=' ')", "t = int(input())\nwhile t != 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    ans = list()\n    if k <= n / 2:\n        count = k\n        for i in range(1, n + 1):\n            if i % 2 != 0 and count != 0:\n                ans.append(i)\n                count -= 1\n            else:\n                ans.append(-i)\n    else:\n        count = n - k\n        for i in range(1, n + 1):\n            if i % 2 != 0 and count != 0:\n                ans.append(-i)\n                count -= 1\n            else:\n                ans.append(i)\n    for n in ans:\n        print(n, end=' ')\n    print()", "def positive_prefix(n, k):\n    a = []\n    for i in range(n):\n        if i % 2 == 0:\n            a.append(i + 1)\n        else:\n            a.append(-1 * (i + 1))\n    pn = int(n / 2) + int(n % 2)\n    loc = n - 1\n    if k > pn:\n        while k != pn:\n            if a[loc] < 0:\n                a[loc] = -a[loc]\n                pn = pn + 1\n            loc = loc - 1\n    else:\n        while k != pn:\n            if a[loc] > 0:\n                a[loc] = -a[loc]\n                pn = pn - 1\n            loc = loc - 1\n    a = ' '.join((str(i) for i in a))\n    return a\nt = int(input())\nwhile t:\n    t = t - 1\n    a = input().split()\n    n = int(a[0])\n    k = int(a[1])\n    print(positive_prefix(n, k))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n == k:\n        for i in range(1, n + 1):\n            print(i, end=' ')\n    else:\n        numbers = []\n        for i in range(1, n + 1):\n            if i % 2 != 0:\n                numbers.append(-1 * i)\n            else:\n                numbers.append(i)\n        total_pos = math.ceil(n // 2)\n        if total_pos < k:\n            b = k - total_pos\n            for i in reversed(numbers):\n                if b > 0:\n                    if i < 0:\n                        numbers[numbers.index(i)] = -1 * i\n                        b -= 1\n                else:\n                    pass\n        if total_pos > k:\n            b = total_pos - k\n            for i in reversed(numbers):\n                if b > 0:\n                    if i > 0:\n                        numbers[numbers.index(i)] = -1 * i\n                        b -= 1\n                else:\n                    pass\n        for i in numbers:\n            print(i, end=' ')", "try:\n    for _ in range(int(input())):\n        (N, K) = map(int, input().split())\n        arr = [int(i) for i in range(1, N + 1)]\n        count = N - K\n        res = []\n        s = ' '\n        if N == K:\n            pass\n        else:\n            track = 0\n            for j in range(0, N, 2):\n                if track >= count:\n                    break\n                arr[j] = arr[j] * -1\n                track += 1\n            if len(arr) % 2 == 0:\n                c = N - 1\n            else:\n                c = N - 2\n            for i in range(c, 0, -2):\n                if track >= count:\n                    break\n                arr[i] = arr[i] * -1\n                track += 1\n        for i in arr:\n            res.append(str(i))\n        print(s.join(res))\nexcept:\n    pass"]