["import sys\nfrom array import array\ninput = sys.stdin.readline\nout = array('q')\nfor _ in range(int(input())):\n    (a1, d, l, r) = map(int, input().split())\n    vis = array('b')\n    (cur, sum_, period) = ((a1 - 1) % 9 + 1, 0, 0)\n    while cur not in vis:\n        vis.append(cur)\n        period += 1\n        sum_ += cur\n        a1 += d\n        cur = (a1 - 1) % 9 + 1\n    (divr, modr) = divmod(r, period)\n    (divl, modl) = divmod(l - 1, period)\n    out.append(sum_ * divr + sum(vis[:modr]) - sum_ * divl - sum(vis[:modl]))\nprint('\\n'.join(map(str, out)))", "import sys\nfrom array import array\ninput = sys.stdin.readline\nout = array('q')\nfor _ in range(int(input())):\n    (a1, d, l, r) = map(int, input().split())\n    vis = array('b')\n    (cur, sum_, period) = ((a1 - 1) % 9 + 1, 0, 0)\n    while cur not in vis:\n        vis.append(cur)\n        period += 1\n        sum_ += cur\n        a1 += d\n        cur = (a1 - 1) % 9 + 1\n    (divr, modr) = divmod(r, period)\n    (divl, modl) = divmod(l - 1, period)\n    out.append(sum_ * divr + sum(vis[:modr]) - sum_ * divl - sum(vis[:modl]))\nprint('\\n'.join(map(str, out)))", "import sys\nfrom array import array\ninput = sys.stdin.readline\nout = array('q')\nfor _ in range(int(input())):\n    (a1, d, l, r) = map(int, input().split())\n    vis = array('b')\n    (cur, sum_, period) = ((a1 - 1) % 9 + 1, 0, 0)\n    while cur not in vis:\n        vis.append(cur)\n        period += 1\n        sum_ += cur\n        a1 += d\n        cur = (a1 - 1) % 9 + 1\n    (divr, modr) = divmod(r, period)\n    (divl, modl) = divmod(l - 1, period)\n    out.append(sum_ * divr + sum(vis[:modr]) - sum_ * divl - sum(vis[:modl]))\nprint('\\n'.join(map(str, out)))", "import sys\nfrom array import array\ninput = sys.stdin.readline\nout = array('q')\nfor _ in range(int(input())):\n    (a1, d, l, r) = map(int, input().split())\n    vis = array('b')\n    (cur, sum_, period) = ((a1 - 1) % 9 + 1, 0, 0)\n    while cur not in vis:\n        vis.append(cur)\n        period += 1\n        sum_ += cur\n        a1 += d\n        cur = (a1 - 1) % 9 + 1\n    (divr, modr) = divmod(r, period)\n    (divl, modl) = divmod(l - 1, period)\n    out.append(sum_ * divr + sum(vis[:modr]) - sum_ * divl - sum(vis[:modl]))\nprint('\\n'.join(map(str, out)))", "def li():\n    return list(map(int, input().split()))\n\ndef si():\n    return input().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\n\ndef reduceTo1(n):\n    if len(str(n)) == 1:\n        return n\n    else:\n        sum = 0\n        for i in str(n):\n            sum += int(i)\n        return reduceTo1(sum)\nfor tastcas in range(int(input())):\n    (a1, d, l, r) = li()\n    al = a1 + (l - 1) * d\n    nos = [reduceTo1(al)]\n    t = reduceTo1(nos[-1] + d)\n    while t != nos[0]:\n        nos.append(t)\n        t = reduceTo1(nos[-1] + d)\n    length = len(nos)\n    rng = r - l + 1\n    s1 = rng // length\n    ans = s1 * sum(nos)\n    for i in range(rng - s1 * length):\n        ans += nos[i]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (a, d, l, r) = map(int, input().split())\n    x = r - l + 1\n    if x <= 9:\n        ans = 0\n        for j in range(l, r + 1):\n            c = a + (j - 1) * d\n            ans += (c - 1) % 9 + 1\n        print(ans)\n    else:\n        s = []\n        for j in range(1, 10):\n            c = a + (j - 1) * d\n            s.append((c - 1) % 9 + 1)\n        m = r // 9\n        y = r % 9\n        s1 = sum(s) * m + sum(s[:y])\n        l -= 1\n        m = l // 9\n        y = l % 9\n        s2 = sum(s) * m + sum(s[:y])\n        print(s1 - s2)", "t = int(input())\nfor i in range(t):\n    (a, d, l, r) = map(int, input().split())\n    x = r - l + 1\n    if x <= 9:\n        ans = 0\n        for j in range(l, r + 1):\n            c = a + (j - 1) * d\n            ans += (c - 1) % 9 + 1\n        print(ans)\n    else:\n        s = []\n        for j in range(1, 10):\n            c = a + (j - 1) * d\n            s.append((c - 1) % 9 + 1)\n        m = r // 9\n        y = r % 9\n        s1 = sum(s) * m + sum(s[:y])\n        l -= 1\n        m = l // 9\n        y = l % 9\n        s2 = sum(s) * m + sum(s[:y])\n        print(s1 - s2)", "for _ in range(int(input())):\n    (a, d, l, r) = map(int, input().split())\n    x = r - l + 1\n    if x <= 9:\n        ans = 0\n        for i in range(l, r + 1):\n            term = a + (i - 1) * d\n            ans += (term - 1) % 9 + 1\n        print(ans)\n    else:\n        array = []\n        for i in range(1, 10):\n            term = a + (i - 1) * d\n            array.append((term - 1) % 9 + 1)\n        multiple = r // 9\n        remains = r % 9\n        s1 = sum(array) * multiple + sum(array[:remains])\n        l = l - 1\n        multiple = l // 9\n        remains = l % 9\n        s2 = sum(array) * multiple + sum(array[:remains])\n        print(s1 - s2)", "for _ in range(int(input())):\n    (a, d, l, r) = map(int, input().split())\n    x = r - l + 1\n    if x <= 9:\n        ans = 0\n        for i in range(l, r + 1):\n            term = a + (i - 1) * d\n            ans += (term - 1) % 9 + 1\n        print(ans)\n    else:\n        array = []\n        for i in range(1, 10):\n            term = a + (i - 1) * d\n            array.append((term - 1) % 9 + 1)\n        multiple = r // 9\n        remains = r % 9\n        s1 = sum(array) * multiple + sum(array[:remains])\n        l = l - 1\n        multiple = l // 9\n        remains = l % 9\n        s2 = sum(array) * multiple + sum(array[:remains])\n        print(s1 - s2)", "def F(x):\n    return (x - 1) % 9 + 1\nfor _ in range(int(input())):\n    (A, D, L, R) = map(int, input().split())\n    L = L - 1\n    R = R - 1\n    sum_per9 = 0\n    for i in range(0, 9):\n        sum_per9 += F(A + D * i)\n    ans = 0\n    while (R - L + 1) % 9 != 0:\n        ans += F(A + D * R)\n        R -= 1\n    ans += sum_per9 * (R - L + 1) // 9\n    print(ans)", "def F(x):\n    return (x - 1) % 9 + 1\nfor _ in range(int(input())):\n    (A, D, L, R) = map(int, input().split())\n    L = L - 1\n    R = R - 1\n    sum_per9 = 0\n    for i in range(1, 10):\n        sum_per9 += F(A + D * i)\n    ans = 0\n    while (R - L + 1) % 9 != 0:\n        ans += F(A + D * R)\n        R -= 1\n    ans += sum_per9 * (R - L + 1) // 9\n    print(ans)", "def S(n):\n    if n % 9 == 0:\n        return 9\n    else:\n        return n % 9\nfor _ in range(int(input())):\n    (a, d, l, r) = map(int, input().split())\n    (e, s) = (a, 0)\n    for i in range(9):\n        s += S(e)\n        e += d\n    t = r - l + 1\n    (l2, l1, v) = (t // 9 * 9, t // 9 * s, t % 9)\n    (e, s1) = (a + (l + l2 - 1) * d, 0)\n    for i in range(v):\n        s1 += S(e)\n        e += d\n    print(s1 + l1)", "def S(n):\n    if n % 9 == 0:\n        return 9\n    else:\n        return n % 9\nfor _ in range(int(input())):\n    (a, d, l, r) = map(int, input().split())\n    (e, s) = (a, 0)\n    for i in range(9):\n        s += S(e)\n        e += d\n    t = r - l + 1\n    (l2, l1, v) = (t // 9 * 9, t // 9 * s, t % 9)\n    (e, s1) = (a + (l + l2 - 1) * d, 0)\n    for i in range(v):\n        s1 += S(e)\n        e += d\n    print(s1 + l1)", "def S(n):\n    if n % 9 == 0:\n        return 9\n    else:\n        return n % 9\nfor _ in range(int(input())):\n    (a, d, l, r) = map(int, input().split())\n    e = a\n    s = 0\n    for i in range(9):\n        s += S(e)\n        e += d\n    t = r - l + 1\n    u = t // 9\n    l2 = u * 9\n    l1 = u * s\n    v = t % 9\n    e = a + (l + l2 - 1) * d\n    s1 = 0\n    for i in range(v):\n        s1 += S(e)\n        e += d\n    ans = s1 + l1\n    print(ans)", "def S(n):\n    if n == 0:\n        return 0\n    if n % 9 == 0:\n        return 9\n    else:\n        return n % 9\nfor _ in range(int(input())):\n    (a, d, l, r) = map(int, input().split())\n    e = a\n    s = 0\n    for i in range(9):\n        s += S(e)\n        e += d\n    t = r - l + 1\n    u = t // 9\n    l2 = u * 9\n    l1 = u * s\n    v = t % 9\n    e = a + (l + l2 - 1) * d\n    s1 = 0\n    for i in range(u * 9, u * 9 + v):\n        s1 += S(e)\n        e += d\n    ans = s1 + l1\n    print(ans)", "x = input()\nx = int(x)\nfor j in range(x):\n    (a, d, l, r) = input().split()\n    a = int(a)\n    d = int(d)\n    l = int(l)\n    r = int(r)\n\n    def fun(n):\n        return (n - 1) % 9 + 1\n    m = 0\n    for i in range(9):\n        m = m + fun(a + (i + 1) * d)\n    s = 0\n    if (r - l + 1) % 9 != 0:\n        for j in range((l - 1) % 9 + 1, (l - 1) % 9 + (r - l) % 9 + 2):\n            s = s + fun(a + (j - 1) * d)\n    fs = m * ((r - l + 1) // 9) + s\n    print(fs)", "import sys\n\ndef F(x):\n    return (x - 1) % 9 + 1\nT = int(input())\nfor t in range(T):\n    inp = input().split()\n    (A, D, L, R) = (int(inp[0]), int(inp[1]), int(inp[2]) - 1, int(inp[3]) - 1)\n    sum_per9 = 0\n    for i in range(1, 10):\n        sum_per9 += F(A + D * i)\n    ans = 0\n    while (R - L + 1) % 9 != 0:\n        ans += F(A + D * R)\n        R -= 1\n    ans += sum_per9 * (R - L + 1) // 9\n    print(ans)", "def F(x):\n    return (x - 1) % 9 + 1\nt1 = int(input())\nfor t in range(t1):\n    (A, D, L, R) = map(int, input().split())\n    L = L - 1\n    R = R - 1\n    sum = 0\n    for i in range(1, 10):\n        sum += F(A + D * i)\n    ans = 0\n    while (R - L + 1) % 9 != 0:\n        ans += F(A + D * R)\n        R = R - 1\n    ans += sum * (R - L + 1) // 9\n    print(str(ans) + '\\n')", "import sys\n\ndef F(x):\n    return (x - 1) % 9 + 1\nT = int(sys.stdin.readline())\nfor t in range(T):\n    inp = sys.stdin.readline().split()\n    (A, D, L, R) = (int(inp[0]), int(inp[1]), int(inp[2]) - 1, int(inp[3]) - 1)\n    sum_per9 = 0\n    for i in range(1, 10):\n        sum_per9 += F(A + D * i)\n    ans = 0\n    while (R - L + 1) % 9 != 0:\n        ans += F(A + D * R)\n        R -= 1\n    ans += sum_per9 * (R - L + 1) // 9\n    sys.stdout.write(str(ans) + '\\n')", "import sys\n\ndef F(x):\n    return (x - 1) % 9 + 1\nT = int(sys.stdin.readline())\nfor t in range(T):\n    inp = sys.stdin.readline().split()\n    (A, D, L, R) = (int(inp[0]), int(inp[1]), int(inp[2]) - 1, int(inp[3]) - 1)\n    sum_per9 = 0\n    for i in range(1, 10):\n        sum_per9 += F(A + D * i)\n    ans = 0\n    while (R - L + 1) % 9 != 0:\n        ans += F(A + D * R)\n        R -= 1\n    ans += sum_per9 * (R - L + 1) // 9\n    sys.stdout.write(str(ans) + '\\n')", "import sys\n\ndef F(x):\n    return (x - 1) % 9 + 1\nT = int(sys.stdin.readline())\nfor t in range(T):\n    inp = sys.stdin.readline().split()\n    (A, D, L, R) = (int(inp[0]), int(inp[1]), int(inp[2]) - 1, int(inp[3]) - 1)\n    sum_per9 = 0\n    for i in range(1, 10):\n        sum_per9 += F(A + D * i)\n    ans = 0\n    while (R - L + 1) % 9 != 0:\n        ans += F(A + D * R)\n        R -= 1\n    ans += sum_per9 * (R - L + 1) // 9\n    sys.stdout.write(str(ans) + '\\n')", "c = 1\ncases = int(input())\n\ndef break_down(a):\n    if a <= 9:\n        return a\n    else:\n        sum = 0\n        for i in str(a):\n            sum += int(i)\n        return break_down(sum)\nwhile c <= cases:\n    [a, d, l, r] = [int(i) for i in input().split(' ')]\n    ds = []\n    for i in range(0, 9):\n        ds.append(break_down(a))\n        a += d\n    ds = ds[l % 9 - 1:] + ds[:l % 9 - 1]\n    ans = (r - l + 1) // 9 * sum(ds) + sum(ds[:(r - l + 1) % 9])\n    print(ans)\n    c = c + 1", "c = 1\ncases = int(input())\n\ndef break_down(a):\n    sum = 0\n    if a <= 9:\n        return a\n    else:\n        for i in str(a):\n            sum += int(i)\n        return break_down(sum)\nwhile c <= cases:\n    [a, d, l, r] = [int(i) for i in input().split(' ')]\n    ds = []\n    j = a\n    for i in range(0, 9):\n        ds.append(break_down(j))\n        j += d\n    ds = ds[l % 9 - 1:] + ds[:l % 9 - 1]\n    ans = (r - l + 1) // 9 * sum(ds) + sum(ds[:(r - l + 1) % 9])\n    print(ans)\n    c = c + 1", "import sys\n\ndef F(x):\n    return (x - 1) % 9 + 1\nT = int(input())\nfor t in range(T):\n    inp = input().split()\n    (A, D, L, R) = (int(inp[0]), int(inp[1]), int(inp[2]) - 1, int(inp[3]) - 1)\n    s = 0\n    for i in range(1, 10):\n        s += F(A + D * i)\n    ans = 0\n    while (R - L + 1) % 9 != 0:\n        ans += F(A + D * R)\n        R -= 1\n    ans += s * (R - L + 1) // 9\n    print(str(ans))", "import sys\n\ndef F(x):\n    return (x - 1) % 9 + 1\nT = int(sys.stdin.readline())\nfor t in range(T):\n    inp = sys.stdin.readline().split()\n    (A, D, L, R) = (int(inp[0]), int(inp[1]), int(inp[2]) - 1, int(inp[3]) - 1)\n    sum_per9 = 0\n    for i in range(1, 10):\n        sum_per9 += F(A + D * i)\n    ans = 0\n    while (R - L + 1) % 9 != 0:\n        ans += F(A + D * R)\n        R -= 1\n    ans += sum_per9 * (R - L + 1) // 9\n    sys.stdout.write(str(ans) + '\\n')", "__author__ = 'masterchief'\n\ndef solve():\n    num_test = int(input())\n    for i in range(num_test):\n        test_case()\n\ndef test_case():\n    (a_1, d, l, r) = [int(i) for i in input().split()]\n    a_L = f(a_1 + (l - 1) * d)\n    d = f(d)\n    s2 = 0\n    for i in range((r - l + 1) % 9):\n        a_temp = f(a_L + i * d)\n        s2 += a_temp\n    terms_9 = (r - l + 1) // 9\n    if terms_9 != 0:\n        for i in range(9):\n            a_temp = terms_9 * f(a_L + i * d)\n            s2 += a_temp\n    print(s2)\n\ndef f(num):\n    return (num - 1) % 9 + 1\nsolve()", "import math\nfor T in range(0, int(input())):\n    (A, D, L, R) = map(int, input().split())\n    Arr = []\n    sum = int(0)\n    A = int(A) % 9\n    D = int(D) % 9\n    A = int(A + (L - 1) * D)\n    for i in range(0, 9):\n        if A % 9 is 0:\n            Arr.append(int(9))\n        else:\n            Arr.append(int(A % 9))\n        A = A + D\n    K = int(R - L + 1)\n    of = int(K / 9)\n    pf = int(K % 9)\n    sum = int(0)\n    for i in range(0, 9):\n        sum = sum + of * Arr[i]\n    for i in range(0, pf):\n        sum = sum + Arr[i]\n    print(int(sum))", "import sys\nimport math\n\ndef nextLine():\n    return sys.stdin.readline()\n\ndef digitalRoot(x):\n    return 1 + (x - 1) % 9\n\ndef calculateSumForRange(L, R, A, D, sum9):\n    first9 = 0\n    n = R - L + 1\n    if sum9 is None:\n        first9 = sumOfFirst(A, D, 9)\n    else:\n        first9 = sum9\n    if n % 9 == 0:\n        return int(n / 9) * first9\n    elif n / 9 < 1:\n        return sumOfFirst(A + (L - 1) * D, D, n)\n    else:\n        m = R - n % 9\n        return calculateSumForRange(L, m, A, D, first9) + calculateSumForRange(m + 1, R, A, D, first9)\n\ndef sumOfFirst(A, D, num):\n    sum = 0\n    for i in range(0, num):\n        sum += digitalRoot(A + i * D)\n    return sum\ntestCases = int(nextLine())\nfor i in range(0, testCases):\n    line = nextLine()\n    (A1, D, L, R) = tuple((int(x) for x in line.split(' ')))\n    print(calculateSumForRange(L, R, A1, D, None))", "import sys\n\ndef F(x):\n    return (x - 1) % 9 + 1\nT = int(sys.stdin.readline())\nfor t in range(T):\n    inp = sys.stdin.readline().split()\n    (A, D, L, R) = (int(inp[0]), int(inp[1]), int(inp[2]) - 1, int(inp[3]) - 1)\n    sum_per9 = 0\n    for i in range(1, 10):\n        sum_per9 += F(A + D * i)\n    ans = 0\n    while (R - L + 1) % 9 != 0:\n        ans += F(A + D * R)\n        R -= 1\n    ans += sum_per9 * (R - L + 1) // 9\n    sys.stdout.write(str(ans) + '\\n')", "import math\n\ndef check(n):\n    if n < 9:\n        return n\n    else:\n        ans = n % 9\n        if ans == 0:\n            return 9\n        return ans\nt = int(input())\nwhile t > 0:\n    t -= 1\n    sum = 0\n    (a, d, l, r) = map(int, input().split())\n    dig = r - l + 1\n    mod = dig % 9\n    div = int(dig / 9)\n    nth = a + (l - 1) * d\n    nth = check(nth)\n    temp = 0\n    for i in range(l, min(l + 8, r) + 1):\n        temp += 1\n        mul = 0 if temp > mod else 1\n        sum += nth * (div + mul)\n        nth = check(nth + d)\n    print(int(sum))", "a = int(input())\nwhile a > 0:\n    a -= 1\n    b = input()\n    m = 0\n    (s, d, l, r) = [int(n) for n in b.split()]\n    k1 = s + d * (l - 1)\n    q = r - l + 1\n    k = k1\n    while k > 9:\n        k = sum(map(int, str(k)))\n    m = 0\n    st = k\n    k = d\n    while k > 9:\n        k = sum(map(int, str(k)))\n    d = k\n    A = []\n    for i in range(9):\n        m = st\n        A.append(m)\n        st = (st + d) % 9\n        if st == 0:\n            st = 9\n    k = sum(A)\n    q1 = q // 9\n    q = q % 9\n    m = q1 * k\n    m += sum(A[:q])\n    print(m)", "T = int(input())\nfor tn in range(T):\n    (first, delta, l, r) = [int(x) for x in input().split()]\n    res = []\n    ressum = 0\n    for i in range(9):\n        now = (first + delta * i) % 9\n        if now == 0:\n            res.append(9)\n        else:\n            res.append(now)\n        ressum = ressum + res[i]\n    ans = (r - l + 1) // 9 * ressum\n    count = (r - l + 1) % 9\n    for i in range(count - 1, -1, -1):\n        ans = ans + res[(r - i - 1) % 9]\n    print(ans)", "import sys\nt = int(input())\n\ndef digit_sum(num):\n    sm = sum((int(c) for c in str(num)))\n    sm = sum((int(c) for c in str(sm)))\n    sm = sum((int(c) for c in str(sm)))\n    return sm\n\ndef digitsum(x):\n    if x % 9 == 0:\n        x = 9\n    else:\n        x = x % 9\n    return x\n\ndef digitsum2(n):\n    ans = 0\n    while n > 0:\n        tmp = int(n % 1000000000)\n        while tmp > 0:\n            ans += tmp % 10\n            tmp = tmp // 10\n            if ans > 9:\n                ans = ans % 10 + 1\n        n = n // 1000000000\n    return ans\nwhile t:\n    t = t - 1\n    (a, d, lb, ub) = [int(x) for x in input().split()]\n    (repeat_factor, x) = (9, 0)\n    (n, beg, pattern_sum, end) = (ub - lb + 1, a + (lb - 1) * d, 0, a + (ub - 1) * d)\n    repeat_factor = min(n, repeat_factor)\n    pattern = [0] * repeat_factor\n    i = beg\n    pattern[x] = digitsum(i)\n    x = x + 1\n    i += d\n    while x < repeat_factor:\n        pattern[x] = digitsum(i)\n        pattern[x] += pattern[x - 1]\n        x = x + 1\n        i += d\n    pattern_sum = pattern[min(repeat_factor, n) - 1]\n    (mul, rem) = (n // repeat_factor, n % repeat_factor)\n    if mul > 1:\n        pattern_sum *= mul\n    if rem > 0 and n > 9:\n        pattern_sum += pattern[rem - 1]\n    print(pattern_sum)", "t = int(input())\nfor z in range(t):\n    (a, d, l, r) = map(int, input().split())\n    (s, len1) = (0, r - l + 1)\n    h = [0] * 15\n    cf = []\n    for i in range(l, r + 1):\n        term = a + (i - 1) * d\n        val = 0\n        if term % 9 == 0:\n            val = 9\n        else:\n            val = term % 9\n        if h[val] == 1:\n            break\n        cf.append(val)\n        h[val] = 1\n    for i in range(1, len(cf)):\n        cf[i] += cf[i - 1]\n    len2 = len(cf)\n    last_val = cf[len2 - 1]\n    s = s + len1 // len2 * last_val\n    if len1 % len2 is not 0:\n        s = s + cf[len1 % len2 - 1]\n    print(int(s))", "def digsum(n):\n    if n < 10:\n        return n\n    n = str(n)\n    return digsum(sum([int(i) for i in n]))\n\ndef sdigsum(n):\n    if n < 10:\n        return n\n    return n - 9\n\ndef eugene(A, D, L, M):\n    D = digsum(D)\n    A = digsum(A + (L - 1) * D)\n    cyclesum = 0\n    remaindersum = 0\n    ss = M - L + 1\n    cycle = 9\n    remainder = ss % 9\n    quotient = ss // 9\n    for i in range(9):\n        cyclesum += A\n        A = sdigsum(A + D)\n    for i in range(remainder):\n        remaindersum += A\n        A = sdigsum(A + D)\n    return quotient * cyclesum + remaindersum\nfor tests in range(int(input())):\n    [A, D, L, M] = [int(i) for i in input().split()]\n    print(eugene(A, D, L, M))", "t = int(input())\n\ndef f(x):\n    s = 0\n    while x > 0:\n        s += x % 10\n        x //= 10\n    if s < 10:\n        return s\n    else:\n        return f(s)\nfor i in range(0, t):\n    (a, d, l, r) = map(int, input().split(' '))\n    al = a + (l - 1) * d\n    numc = r - l + 1\n    lst = []\n    c = f(al)\n    c -= 1\n    count = 0\n    while c not in lst:\n        count += c\n        lst.append(c)\n        c = (c + d) % 9\n    curc = len(lst)\n    rep = numc // curc\n    rem = numc % curc\n    count = count * rep + curc * rep\n    for j in range(0, rem):\n        count += lst[j] + 1\n    print(count)", "t = int(input())\nfor j in range(0, t):\n    ln = input().split()\n    a = int(ln[0])\n    d = int(ln[1])\n    l = int(ln[2])\n    r = int(ln[3])\n    x = a + (l - 1) * d\n    p = 100\n    while p >= 10:\n        p = 0\n        while x > 0:\n            p = p + x % 10\n            x = x // 10\n        x = p\n    q = 100\n    x = d\n    while q >= 10:\n        q = 0\n        while x > 0:\n            q = q + x % 10\n            x = x // 10\n        x = q\n    v = [0] * 100\n    v[0] = p\n    for i in range(1, 9):\n        x = p + q\n        if x >= 10:\n            y = x % 10\n            x = x // 10\n            y = y + x\n        else:\n            y = x\n        p = y\n        v[i] = p + v[i - 1]\n    n = (r - l + 1) // 9\n    s = n * v[8]\n    n = (r - l + 1) % 9\n    s += v[n - 1]\n    print(s)", "T = int(input())\nwhile T > 0:\n    inp = input()\n    (a, d, l, r) = list(map(int, inp.split()))\n    sums = [0 for _ in range(10)]\n    temp = a + (l - 1) * d\n    lim = r - l + 1\n    rem = lim % 9\n    sums[1] = 1 + (temp - 1) % 9\n    for k in range(2, 10):\n        temp += d\n        sums[k] = sums[k - 1] + (1 + (temp - 1) % 9)\n    if lim == rem:\n        print(sums[rem])\n    else:\n        sums[9] *= lim // 9\n        sums[9] += sums[rem]\n        print(sums[9])\n    T -= 1", "def summ(a):\n    if a % 9 == 0:\n        return 9\n    else:\n        return a % 9\n\ndef main():\n    t = int(input())\n    for aa in range(t):\n        (a1, d, l, r) = map(int, input().split())\n        i = 0\n        ans = 0\n        sum1 = 0\n        a = [0] * 9\n        a1 = summ(a1)\n        d = summ(d)\n        z = 0\n        a[z] = summ(a1)\n        for z in range(1, 9):\n            a[z] = summ(a1 + summ(z * d)) + a[z - 1]\n        sum1 = a[8]\n        l = l - 1\n        j = l % 9\n        i = r % 9\n        p = a[i - 1]\n        q = a[j - 1]\n        if i == 0:\n            p = 0\n        if j == 0:\n            q = 0\n        ans = r // 9 * sum1 + p\n        xx = l // 9 * sum1 + q\n        ans = ans - xx\n        print(ans)\nmain()", "t = int(input())\nfor i in range(t):\n    b = list(map(int, input().split()))\n    a = b[0]\n    d = b[1]\n    l = b[2]\n    r = b[3]\n    c = []\n    for i in range(l, r + 1):\n        val = (a + (i - 1) * d) % 9\n        if val == 0:\n            val = val + 9\n            if val in c:\n                break\n            else:\n                c.append(val)\n        elif val in c:\n            break\n        else:\n            c.append(val)\n    ln = len(c)\n    rem = (r - l + 1) % ln\n    div = int((r - l + 1) // ln)\n    total = sum(c) * div + sum(c[:rem])\n    print(total)", "t = int(input())\nfor j in range(0, t):\n    ln = input().split()\n    a = int(ln[0])\n    d = int(ln[1])\n    l = int(ln[2])\n    r = int(ln[3])\n    x = a + (l - 1) * d\n    st = 999\n    while st >= 10:\n        st = 0\n        while x > 0:\n            st = st + x % 10\n            x = x // 10\n        x = st\n    dt = 999\n    x = d\n    while dt >= 10:\n        dt = 0\n        while x > 0:\n            dt = dt + x % 10\n            x = x // 10\n        x = dt\n    arr = [0] * 100\n    arr[0] = st\n    for i in range(1, 9):\n        x = st + dt\n        if x >= 10:\n            y = x % 10\n            x = x // 10\n            y = y + x\n        else:\n            y = x\n        st = y\n        arr[i] = st + arr[i - 1]\n    n = (r - l + 1) // 9\n    ans = n * arr[8]\n    n = (r - l + 1) % 9\n    ans += arr[n - 1]\n    print(ans)", "import sys\nt = int(input())\nwhile t > 0:\n    (a, d, l, r) = map(int, sys.stdin.readline().split())\n    x = a + (l - 1) * d\n    if x % 9 == 0:\n        s = 9\n    else:\n        s = x % 9\n    dif = d % 9\n    if dif == 0:\n        print((r - l + 1) * s)\n    elif dif == 3 or dif == 6:\n        if s == 1 or s == 4 or s == 7:\n            temp = (r - l + 1) // 3 * 12\n        elif s == 2 or s == 5 or s == 8:\n            temp = (r - l + 1) // 3 * 15\n        else:\n            temp = (r - l + 1) // 3 * 18\n        temp2 = (r - l + 1) % 3\n        if temp2 == 0:\n            print(temp, '\\n')\n        else:\n            sum1 = s\n            for i in range(temp2 - 1):\n                s += dif\n                if s > 9:\n                    s -= 9\n                sum1 += s\n            sum1 += temp\n            print(sum1, '\\n')\n    else:\n        temp = (r - l + 1) // 9 * 45\n        temp2 = (r - l + 1) % 9\n        if temp2 == 0:\n            print(temp, '\\n')\n        else:\n            sum1 = s\n            for i in range(temp2 - 1):\n                s += dif\n                if s > 9:\n                    s -= 9\n                sum1 += s\n            sum1 += temp\n            print(sum1, '\\n')\n    t -= 1", "def func(n):\n    strn = str(n)\n    sum = 0\n    for digit in strn:\n        sum += int(digit)\n    if sum < 10:\n        return sum\n    else:\n        return func(sum)\n\ndef func2(n):\n    return 1 + (n - 1) % 9\ntest = int(input())\nfor it in range(test):\n    (a, d, l, r) = [int(x) for x in input().strip().split()]\n    a = a + (l - 1) * d\n    a -= 1\n    r = r - l + 1\n    sumo = r\n    div = sumo // 9\n    rem = sumo % 9\n    st = a\n    termsum = 0\n    for i in range(9):\n        termsum = termsum + st % 9\n        st = (st + d) % 9\n    sumo = sumo + termsum * div\n    st = a\n    for i in range(rem):\n        sumo = sumo + st % 9\n        st = (st + d) % 9\n    print(sumo)", "def f(x):\n    if x < 10:\n        return x\n    s = 0\n    while x > 0:\n        s += x % 10\n        x //= 10\n    return f(s)\n\ndef apsum(a, d):\n    sm = 0\n    x = a\n    for i in range(9):\n        sm += f(x)\n        x += d\n    return sm\n\ndef apval(a, d, n):\n    return a + (n - 1) * d\ndp = [[apsum(i, j) for j in range(10)] for i in range(10)]\n\ndef solve(a, d, l, r):\n    sm = 0\n    a = f(a)\n    d = f(d)\n    nl = (r - l + 1) // 9\n    sm += nl * dp[a][d]\n    rem = (r - l + 1) % 9\n    lft = r - rem + 1\n    rgt = r + 1\n    for i in range(lft, rgt):\n        sm += f(apval(a, d, i))\n    return sm\nfor t in range(int(input())):\n    (a, d, l, r) = [int(x) for x in input().split()]\n    print(solve(a, d, l, r))", "def reduceToInt(num):\n    while num > 9:\n        res = 0\n        while num > 0:\n            res += num % 10\n            num //= 10\n        num = res\n    return num\nT = int(input())\nfor _ in range(T):\n    (A, D, L, R) = map(int, input().split())\n    st = A + (L - 1) * D\n    arr = [reduceToInt(st)]\n    while True:\n        next = reduceToInt(arr[-1] + D)\n        if next in arr:\n            break\n        else:\n            arr.append(next)\n    totalNumbers = R - L + 1\n    sm = totalNumbers // len(arr) * sum(arr)\n    for i in range(totalNumbers % len(arr)):\n        st = reduceToInt(st)\n        sm += st\n        st += D\n    print(sm)", "def solve():\n    test = int(input())\n    while test > 0:\n        inp = input()\n        (a, diff, l, r) = map(int, inp.split())\n        i = a + (l - 1) * diff\n        j = a + (r - 1) * diff\n        trm = r - l + 1\n        arr = list()\n        if i % 9 == 0 and i > 0:\n            arr.append(9)\n        else:\n            arr.append(i % 9)\n        i += diff\n        cnt = 1\n        ans = arr[0]\n        while i <= j:\n            if i % 9 == 0 and i > 0:\n                arr.append(9)\n            else:\n                arr.append(i % 9)\n            if arr[cnt] == arr[0]:\n                break\n            ans += arr[cnt]\n            cnt += 1\n            i += diff\n        ans = ans * (trm // cnt)\n        for c in range(0, trm % cnt):\n            ans += arr[c]\n        print(ans)\n        test -= 1\nsolve()", "import sys\n\ndef shift(l, n):\n    return l[n:] + l[:n]\n\ndef sod(n):\n    if n < 10:\n        return n\n    sm = 0\n    while n > 0:\n        sm += n % 10\n        n = int(n / 10)\n    return sod(sm)\nt = int(sys.stdin.readline())\nptrn = []\nfor it in range(t):\n    (a, d, l, r) = map(int, sys.stdin.readline().split())\n    ptrn.append(sod(a))\n    fac = r - l + 1\n    while True:\n        ele = sod(ptrn[-1] + d)\n        if ele == ptrn[0]:\n            break\n        ptrn.append(ele)\n    ln = len(ptrn)\n    l -= 1\n    l = divmod(l, ln)[1]\n    r = divmod(r, ln)[1]\n    ptrn = shift(ptrn, l)\n    x = divmod(fac, ln)\n    ans = sum(ptrn[:x[1]])\n    ans += sum(ptrn) * x[0]\n    print(ans)\n    ptrn.clear()", "def m(x):\n    mx = x % 9\n    if mx == 0:\n        mx = 9\n    return mx\ntc = int(input(''))\nwhile tc > 0:\n    tc -= 1\n    (A, D, L, R) = map(int, input('').split())\n    N = R - L + 1\n    AL = m(A + (L - 1) * D)\n    s = [AL]\n    ss = AL\n    c = m(AL + D)\n    while c != s[0]:\n        s.append(c)\n        ss += c\n        c = m(c + D)\n    ans = ss * (N // len(s))\n    r = N % len(s)\n    for i in range(r):\n        ans += s[i]\n    print(ans)", "def sumDigits(num):\n    sum = 0\n    while num:\n        sum += num % 10\n        num //= 10\n    return sum\n\ndef F(num):\n    if num < 10:\n        return num\n    return F(sumDigits(num))\nT = int(input())\nwhile T:\n    (A, D, L, R) = input().split(' ')\n    A = int(A)\n    D = int(D)\n    L = int(L)\n    R = int(R)\n    f = [0 for x in range(9)]\n    f[0] = F(A + (L - 1) * D)\n    d = F(D)\n    sum = f[0]\n    for i in range(1, 9):\n        if f[i - 1] + d > 9:\n            f[i] = (f[i - 1] + d) % 10 + 1\n        else:\n            f[i] = f[i - 1] + d\n        sum += f[i]\n    i = R - L + 1\n    if i > 9:\n        sum *= i // 9\n        i %= 9\n        while i:\n            i -= 1\n            sum += f[i]\n    elif i < 9:\n        sum = 0\n        while i:\n            i -= 1\n            sum += f[i]\n    print('%d' % sum)\n    T -= 1", "t = int(input())\nwhile t > 0:\n    (a, d, l, r) = map(int, input().split())\n    i = a + (l - 1) * d\n    j = a + (r - 1) * d\n    terms = r - l + 1\n    arr = list()\n    if i % 9 == 0 and i > 0:\n        arr.append(9)\n    else:\n        arr.append(i % 9)\n    i += d\n    k = 1\n    ans = arr[0]\n    while i <= j:\n        if i % 9 == 0 and i > 0:\n            arr.append(9)\n        else:\n            arr.append(i % 9)\n        if arr[k] == arr[0]:\n            break\n        ans += arr[k]\n        k += 1\n        i += d\n    ans = ans * (terms // k)\n    for x in range(0, terms % k):\n        ans += arr[x]\n    print(ans)\n    t -= 1", "def sum_digits(n):\n    if n < 10:\n        return n\n    else:\n        count = 0\n        while n:\n            count += n % 10\n            n = n // 10\n        return sum_digits(count)\nfor _ in range(0, int(input())):\n    (a, d, l, r) = map(int, input().split())\n    ap = []\n    for i in range(1, 10):\n        x = a + (i - 1) * d\n        ap.append(sum_digits(x))\n    sr = sum((x for x in ap))\n    y = (r - l + 1) // 9\n    res = y * sr\n    l = l + 9 * y\n    while l <= r:\n        res += ap[(l - 1) % 9]\n        l = l + 1\n    print(res)", "def f(x):\n    if int(x) < 10:\n        return x\n    else:\n        s = 0\n        x = str(x)\n        for i in x:\n            s += int(i)\n        return f(s)\nt = int(input())\nfor _ in range(t):\n    (a, d, l, r) = list(map(int, input().strip().split()))\n    a = f(a)\n    d = f(d)\n    s = 0\n    seen = []\n    fa = f(a)\n    while fa not in seen:\n        seen.append(fa)\n        a += d\n        fa = f(a)\n    x = (l % len(seen) - 1) % len(seen)\n    n = r - l + 1\n    s = sum(seen)\n    tot = s * (n // len(seen))\n    for i in range(n % len(seen)):\n        tot += seen[(i + x) % len(seen)]\n    print(tot)", "for i in range(int(input())):\n    (A, D, L, R) = map(int, input().split())\n    (ans, val) = (0, 0)\n    D %= 9\n    A = (A + (L - 1) * D) % 9\n    if not A:\n        A = 9\n    if not D:\n        D = 9\n    R = R - L\n    for j in range(R % 9 + 1):\n        if not (A + j * D) % 9:\n            ans += 9\n        else:\n            ans += (A + j * D) % 9\n    for j in range(9):\n        if not (A + j * D) % 9:\n            val += 9\n        else:\n            val += (A + j * D) % 9\n    ans += R // 9 * val\n    print(ans)", "def SumOfDigits(x):\n    if x == 0:\n        return 0\n    sum1 = 0\n    while x > 0:\n        sum1 += x % 10\n        x = x // 10\n    if sum1 > 9:\n        sum1 = SumOfDigits(sum1)\n        return sum1\n    else:\n        return sum1\nt = int(input())\nfor i in range(1, t + 1):\n    (a1, d, l, r) = list(map(int, input().split()))\n    tot = 0\n    if d == 0:\n        if a1 < 10:\n            tot = a1 * (r - l + 1)\n        else:\n            tot = SumOfDigits(a1) * (r - l + 1)\n    else:\n        tot = 0\n        ll = l\n        L = a1 + (l - 1) * d\n        R = a1 + (r - 1) * d\n        while L < 10 and ll <= r:\n            tot += L\n            L += d\n            ll += 1\n        w = SumOfDigits(d)\n        if w % 9 == 0:\n            diff = SumOfDigits(L)\n            tot += (r - ll + 1) * diff\n        elif w % 3 == 0:\n            if SumOfDigits(L) % 3 == 1:\n                tot += (r - ll + 1) // 3 * 12\n            elif SumOfDigits(L) % 3 == 2:\n                tot += (r - ll + 1) // 3 * 15\n            else:\n                tot += (r - ll + 1) // 3 * 18\n            e = (r - ll + 1) % 3\n            if e > 0:\n                diff = SumOfDigits(L)\n                tot += diff\n                e -= 1\n            while e > 0:\n                diff = SumOfDigits(diff + w)\n                tot += diff\n                e -= 1\n        else:\n            tot += (r - ll + 1) // 9 * 45\n            e = (r - ll + 1) % 9\n            if e > 0:\n                diff = SumOfDigits(L)\n                tot += diff\n                e -= 1\n            while e > 0:\n                diff = SumOfDigits(diff + w)\n                tot += diff\n                e -= 1\n    print(tot)", "T = int(input())\nwhile T:\n    (A, D, L, R) = map(int, input().split())\n    li = []\n    a = A + (L - 1) * D\n    k = a % 9\n    if k:\n        li.append(k)\n    else:\n        li.append(9)\n    ans = 0\n    i = 2\n    while i <= 9:\n        k = k + D\n        k = k % 9\n        if k:\n            li.append(k)\n        else:\n            li.append(9)\n        i = i + 1\n    lisum = sum(li)\n    ans = lisum * int((R - L + 1) / 9)\n    x = int((R - L + 1) % 9)\n    for i in range(1, x + 1):\n        ans = ans + li[i - 1]\n    print(ans)\n    T = T - 1", "def F(x):\n    if x < 10:\n        return x\n    s = 0\n    while x > 0:\n        s += x % 10\n        x //= 10\n    return F(s)\nT = int(input())\nwhile T > 0:\n    T -= 1\n    (a, d, L, R) = map(int, input().split())\n    L -= 1\n    R -= 1\n    a = F(a + d * L)\n    d = F(d)\n    mem = {}\n    ans = 0\n    length = 0\n    found = False\n    while L <= R:\n        if not found and a in mem:\n            found = True\n            cycleVal = ans - mem[a][0]\n            cycleLength = length - mem[a][1]\n            ans += (R - L + 1) // cycleLength * cycleVal\n            L += (R - L + 1) // cycleLength * cycleLength\n        if L > R:\n            break\n        mem[a] = (ans, length)\n        ans += F(a)\n        a = F(a + d)\n        L += 1\n        length += 1\n    print(ans)", "def f(A, D, i):\n    return (A + i * D - 1) % 9 + 1\nfor i in range(int(input())):\n    suma = 0\n    (A, D, L, R) = tuple(map(int, input().split()))\n    suma += (R - L) // 9 * sum((f(A, D, i) for i in range(L, L + 9)))\n    L += (R - L) // 9 * 9\n    D %= 9\n    for i in range(L - 1, R):\n        suma += (A + i * D - 1) % 9 + 1\n    print(suma)"]