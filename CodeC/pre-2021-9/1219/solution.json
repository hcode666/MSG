["for _ in range(int(input())):\n    s = input()\n    string = ''\n    pair = -1\n    (Amoves, Bmoves, count) = (0, 0, 0)\n    nim = [0, 0]\n    for i in s:\n        if pair == -1:\n            if i == '.':\n                continue\n            string = i\n            pair = 0\n        elif pair == 0:\n            if i == '.':\n                count += 1\n            elif string == i:\n                if string == 'A':\n                    Amoves += count\n                else:\n                    Bmoves += count\n                pair = 1\n                count = 0\n            else:\n                nim.append(count)\n                count = 0\n                pair = 1\n        elif pair == 1:\n            if i != '.':\n                string = i\n                pair = 0\n    if pair == 0:\n        if string == 'A':\n            Amoves += count\n        else:\n            Bmoves += count\n    if Amoves > Bmoves:\n        print('A')\n    elif Bmoves > Amoves:\n        print('B')\n    else:\n        x = nim[0]\n        for i in nim[1:]:\n            x = x ^ i\n        if x == 0:\n            print('B')\n        else:\n            print('A')", "for _ in range(int(input())):\n    s = input()\n    string = ''\n    pair = -1\n    (Amoves, Bmoves, count) = (0, 0, 0)\n    nim = [0, 0]\n    for i in s:\n        if pair == -1:\n            if i == '.':\n                continue\n            string = i\n            pair = 0\n        elif pair == 0:\n            if i == '.':\n                count += 1\n            elif string == i:\n                if string == 'A':\n                    Amoves += count\n                else:\n                    Bmoves += count\n                pair = 1\n                count = 0\n            else:\n                nim.append(count)\n                count = 0\n                pair = 1\n        elif pair == 1:\n            if i != '.':\n                string = i\n                pair = 0\n    if pair == 0:\n        if string == 'A':\n            Amoves += count\n        else:\n            Bmoves += count\n    if Amoves > Bmoves:\n        print('A')\n    elif Bmoves > Amoves:\n        print('B')\n    else:\n        x = nim[0]\n        for i in nim[1:]:\n            x = x ^ i\n        if x == 0:\n            print('B')\n        else:\n            print('A')", "for _ in range(int(input())):\n    s = input()\n    string = ''\n    pair = -1\n    (Amoves, Bmoves, count) = (0, 0, 0)\n    nim = [0, 0]\n    for i in s:\n        if pair == -1:\n            if i == '.':\n                continue\n            string = i\n            pair = 0\n        elif pair == 0:\n            if i == '.':\n                count += 1\n            elif string == i:\n                if string == 'A':\n                    Amoves += count\n                else:\n                    Bmoves += count\n                pair = 1\n                count = 0\n            else:\n                nim.append(count)\n                count = 0\n                pair = 1\n        elif pair == 1:\n            if i != '.':\n                string = i\n                pair = 0\n    if pair == 0:\n        if string == 'A':\n            Amoves += count\n        else:\n            Bmoves += count\n    if Amoves > Bmoves:\n        print('A')\n    elif Bmoves > Amoves:\n        print('B')\n    else:\n        x = nim[0]\n        for i in nim[1:]:\n            x = x ^ i\n        if x == 0:\n            print('B')\n        else:\n            print('A')", "from functools import reduce\nT = int(input())\nfor t in range(T):\n    s = input()\n    N = len(s)\n    ABcnts = []\n    HP = {}\n    HP['A'] = 0\n    HP['B'] = 0\n    firstChar = None\n    SeconChar = None\n    cnt = 0\n    outside = True\n    for i in range(N):\n        if not outside and i == N - 1 and (s[i] == '.'):\n            cnt += 1\n            HP[firstChar] += cnt\n            break\n        if outside and s[i] != '.':\n            outside = False\n            firstChar = s[i]\n        elif not outside and s[i] == '.':\n            cnt += 1\n        elif not outside and s[i] != '.':\n            SeconChar = s[i]\n            if firstChar != SeconChar:\n                ABcnts.append(cnt)\n                cnt = 0\n            else:\n                HP[firstChar] += cnt\n                cnt = 0\n            outside = True\n        elif outside and s[i] == '.':\n            continue\n    xor = lambda a, b: a ^ b\n    if len(ABcnts) != 0:\n        nimA = reduce(xor, ABcnts)\n        if nimA == 0:\n            if HP['A'] <= HP['B']:\n                print('B')\n            elif HP['A'] > HP['B']:\n                print('A')\n        elif HP['A'] < HP['B']:\n            print('B')\n        elif HP['A'] >= HP['B']:\n            print('A')\n    elif HP['A'] <= HP['B']:\n        print('B')\n    elif HP['A'] > HP['B']:\n        print('A')", "inp = int(input())\nwhile inp:\n    inp -= 1\n    data = input()\n    turn = True\n    prev = 'C'\n    prevPos = 0\n    currPos = 0\n    count = dict()\n    count['A'] = 0\n    count['B'] = 0\n    txor = 0\n    for char in data:\n        if char != '.':\n            turn ^= True\n            if turn:\n                if prev == char:\n                    count[prev] += currPos - prevPos - 1\n                else:\n                    txor ^= currPos - prevPos - 1\n            else:\n                prevPos = currPos\n                prev = char\n        currPos += 1\n    if turn == False and prev != 'C':\n        count[prev] += currPos - prevPos - 1\n    if count['A'] + int(txor > 0) > count['B']:\n        print('A')\n    else:\n        print('B')", "T = int(input())\nfor _ in range(T):\n    s = input()\n    moveAB = moveA = moveB = pos = nim = 0\n    (i, found) = (0, False)\n    while i < len(s):\n        if s[i] in ['A', 'B'] and i + 1 < len(s) and (s[i + 1] == '.'):\n            for j in range(i + 1, len(s)):\n                if s[j] in ['A', 'B']:\n                    found = True\n                    pos = j\n                    if s[j] == s[i]:\n                        if s[j] == 'A':\n                            moveA += j - i - 1\n                        else:\n                            moveB += j - i - 1\n                    else:\n                        nim ^= j - i - 1\n                    break\n            if found:\n                i = pos + 1\n                found = False\n                continue\n            else:\n                if s[i] == 'A':\n                    moveA += len(s) - i - 1\n                else:\n                    moveB += len(s) - i - 1\n                break\n        elif s[i] in ['A', 'B'] and i + 1 < len(s) and (s[i + 1] in ['A', 'B']):\n            i += 2\n        else:\n            i += 1\n    if moveA > moveB:\n        print('A')\n    elif moveB > moveA:\n        print('B')\n    elif nim != 0:\n        print('A')\n    else:\n        print('B')", "t = int(input())\nwhile t > 0:\n    s = input()\n    d = []\n    c = []\n    flag = 0\n    ls = len(s)\n    si = 0\n    for i in range(ls):\n        if s[i] != '.':\n            if flag != 1:\n                si = i\n                flag = 1\n            else:\n                flag = 0\n                ee = i\n                d.append(s[si:ee + 1])\n        elif flag == 1 and i == ls - 1:\n            d.append(s[si:ls])\n    mb = 0\n    ma = 0\n    e = []\n    for i in range(len(d)):\n        if d[i][0] == 'A' and d[i][-1] == 'A':\n            ma += len(d[i]) - 2\n        elif d[i][0] == 'B' and d[i][-1] == 'B':\n            mb += len(d[i]) - 2\n        elif d[i][-1] == '.':\n            if d[i][0] == 'A':\n                ma += len(d[i]) - 1\n            elif d[i][0] == 'B':\n                mb += len(d[i]) - 1\n        else:\n            e.append(len(d[i]) - 2)\n    if mb == ma:\n        ns = 0\n        s = s[0]\n        for i in range(len(e)):\n            ns = ns ^ e[i]\n        if ns != 0:\n            print('A')\n        else:\n            print('B')\n    elif mb > ma:\n        print('B')\n    else:\n        print('A')\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    a = [0, 0]\n    b = 0\n    i = 0\n    while i < n:\n        i = next((i for i in range(i, n) if s[i] != '.'), n)\n        if i < n:\n            (j, c) = next(((j, s[j]) for j in range(i + 1, n) if s[j] != '.'), (n, s[i]))\n            l = j - i - 1\n            if c == s[i]:\n                a[c == 'B'] += l\n            else:\n                b ^= l\n            i = j + 1\n    print('BA'[a[0] + (b != 0) > a[1]])", "t = int(input())\nwhile t != 0:\n    s1 = input()\n    count = 0\n    l1 = []\n    for i in s1:\n        if i == '.':\n            count += 1\n        else:\n            l1.append(count)\n            l1.append(i)\n            count = 0\n    if count != 0:\n        l1.append(count)\n    if l1[0] != 'A' or l1[0] != 'B':\n        l1.pop(0)\n    t = t - 1\n    a_c = l1.count('A')\n    b_c = l1.count('B')\n    l_stacks = []\n    res_a = 0\n    res_b = 0\n    if (a_c + b_c) % 2 == 0:\n        for i in range(0, len(l1), 4):\n            if l1[i] == l1[i + 2] == 'A':\n                res_a += l1[i + 1]\n            elif l1[i] == l1[i + 2] == 'B':\n                res_b += l1[i + 1]\n            elif l1[i] == 'A' and l1[i + 2] == 'B' or (l1[i] == 'B' and l1[i + 2] == 'A'):\n                l_stacks.append(l1[i + 1])\n    else:\n        if l1[-1] == 'A' or l1[-1] == 'B':\n            l1.pop(-1)\n        elif l1[-2] == 'A':\n            res_a += l1[-1]\n            l1.pop(-2)\n            l1.pop(-1)\n        elif l1[-2] == 'B':\n            res_b += l1[-1]\n            l1.pop(-1)\n            l1.pop(-1)\n        for i in range(0, len(l1), 4):\n            if l1[i] == l1[i + 2] == 'A':\n                res_a += l1[i + 1]\n            elif l1[i] == l1[i + 2] == 'B':\n                res_b += l1[i + 1]\n            elif l1[i] == 'A' and l1[i + 2] == 'B' or (l1[i] == 'B' and l1[i + 2] == 'A'):\n                l_stacks.append(l1[i + 1])\n    xor = 0\n    for i in l_stacks:\n        xor = xor ^ i\n    if res_a > res_b:\n        print('A')\n    elif res_a < res_b:\n        print('B')\n    elif xor == 0:\n        print('B')\n    else:\n        print('A')", "def solve():\n    gl = input()\n    n = len(gl)\n    prev = '.'\n    pos = -1\n    x = 0\n    resa = 0\n    resb = 0\n    for i in range(n):\n        if gl[i] != '.':\n            if prev == '.':\n                prev = gl[i]\n                pos = i\n            else:\n                e = i - pos - 1\n                if prev != gl[i]:\n                    x = x ^ e\n                elif prev == 'A':\n                    resa += e\n                else:\n                    resb += e\n                prev = '.'\n                pos = -1\n    if prev != '.':\n        if prev == 'A':\n            resa += n - pos - 1\n        else:\n            resb += n - pos - 1\n    if x > 0:\n        resa += 1\n    if resa > resb:\n        print('A')\n    else:\n        print('B')\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "def solve(S):\n    A = B = 0\n    nim = 0\n    i = 0\n    while i < len(S):\n        if S[i] == '.':\n            i += 1\n            continue\n        j = i + 1\n        while j < len(S) and S[j] == '.':\n            j += 1\n        if j == len(S):\n            if S[i] == 'A':\n                A += j - i - 1\n            else:\n                B += j - i - 1\n        else:\n            if S[i] != S[j]:\n                nim ^= j - i - 1\n            if S[i] == S[j]:\n                if S[i] == 'A':\n                    A += j - i - 1\n                else:\n                    B += j - i - 1\n        i = j + 1\n    if A > B:\n        return 'A'\n    if B > A:\n        return 'B'\n    return 'A' if nim != 0 else 'B'\nT = int(input())\nfor i in range(0, T):\n    print(solve(input()))", "tests = int(input())\nfor t in range(tests):\n    s = input()\n    if len(s) == 1:\n        print('B')\n    else:\n        ind = 0\n        while ind < len(s):\n            e = s[ind]\n            if e != '.':\n                prev = e\n                break\n            ind += 1\n        right = True\n        counter = 0\n        movesa = 0\n        movesb = 0\n        gap = 0\n        for i in range(ind + 1, len(s)):\n            e = s[i]\n            if e == '.':\n                gap += 1\n                if i == len(s) - 1 and right:\n                    if prev == 'A':\n                        movesa += gap\n                    else:\n                        movesb += gap\n                continue\n            else:\n                if right and gap > 0:\n                    if e != prev:\n                        counter ^= gap\n                    elif e == 'A':\n                        movesa += gap\n                    else:\n                        movesb += gap\n                prev = e\n                gap = 0\n                right = not right\n        if movesa > movesb:\n            print('A')\n        elif movesa < movesb:\n            print('B')\n        elif counter == 0:\n            print('B')\n        else:\n            print('A')", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    odd = False\n    a = []\n    aw = 0\n    for i in range(n):\n        if s[i] != '.':\n            a.append(i)\n    n1 = len(a)\n    if n1 % 2 != 0:\n        odd = True\n        n1 -= 1\n    for i in range(0, n1 - 1, 2):\n        if s[a[i]] != s[a[i + 1]] and a[i + 1] != a[i] + 1:\n            aw ^= a[i + 1] - a[i] - 1\n    if aw == 0:\n        aw = 0\n    else:\n        aw = 1\n    for i in range(0, n1 - 1, 2):\n        if s[a[i]] == s[a[i + 1]]:\n            if s[a[i]] == 'A':\n                aw += a[i + 1] - a[i] - 1\n            else:\n                aw -= a[i + 1] - a[i] - 1\n    if odd == True:\n        if s[a[n1]] == 'A':\n            aw += n - a[n1] - 1\n        else:\n            aw -= n - a[n1] - 1\n    if aw > 0:\n        print('A')\n    else:\n        print('B')", "import math as ma\nimport sys\nfrom sys import exit\nfrom decimal import Decimal as dec\nfrom itertools import permutations\n\ndef li():\n    return list(map(int, input().split()))\n\ndef num():\n    return map(int, input().split())\n\ndef nu():\n    return int(input())\n\ndef find_gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nt = nu()\nfor it in range(t):\n    s = input()\n    n = len(s)\n    cc = 1\n    last = -1\n    dir = -1\n    ind = -1\n    x = [0] * n\n    c = 0\n    for i in range(n):\n        if s[i] == '.':\n            continue\n        if last == -1:\n            if cc % 2 == 1:\n                last = s[i]\n                dir = 1\n                ind = i\n            cc += 1\n        elif cc % 2 == 0:\n            if s[i] == 'A' and last == 'B' or (s[i] == 'B' and last == 'A'):\n                c ^= i - ind - 1\n                ind = -1\n                last = -1\n                dir = -1\n            else:\n                last = s[i]\n                dir = -1\n                ind = i\n            cc += 1\n        else:\n            last = s[i]\n            dir = 1\n            ind = i\n            cc += 1\n    if c == 0:\n        last = -1\n        ind = -1\n        ca = 0\n        cb = 0\n        cc = 1\n        for i in range(n):\n            if s[i] == '.':\n                continue\n            if last == -1:\n                if cc % 2 == 1:\n                    last = s[i]\n                    ind = i\n                cc += 1\n            elif cc % 2 == 0:\n                if s[i] == 'A' and last == 'A' or (s[i] == 'B' and last == 'B'):\n                    last = s[i]\n                    if s[i] == 'A':\n                        ca += i - ind - 1\n                    else:\n                        cb += i - ind - 1\n                    ind = i\n                else:\n                    last = s[i]\n                    ind = i\n                cc += 1\n            else:\n                last = s[i]\n                ind = i\n                cc += 1\n        if cc % 2 == 0:\n            if last == 'A':\n                ca += n - 1 - ind\n            else:\n                cb += n - 1 - ind\n        if cb >= ca:\n            print('B')\n        else:\n            print('A')\n    else:\n        last = -1\n        ind = -1\n        ca = 0\n        cb = 0\n        cc = 1\n        for i in range(n):\n            if s[i] == '.':\n                continue\n            if last == -1:\n                if cc % 2 == 1:\n                    last = s[i]\n                    ind = i\n                cc += 1\n            elif cc % 2 == 0:\n                if s[i] == 'A' and last == 'A' or (s[i] == 'B' and last == 'B'):\n                    last = s[i]\n                    if s[i] == 'A':\n                        ca += i - ind - 1\n                    else:\n                        cb += i - ind - 1\n                    ind = i\n                else:\n                    last = s[i]\n                    ind = i\n                cc += 1\n            else:\n                last = s[i]\n                ind = i\n                cc += 1\n        if cc % 2 == 0:\n            if last == 'A':\n                ca += n - 1 - ind\n            else:\n                cb += n - 1 - ind\n        if ca >= cb:\n            print('A')\n        else:\n            print('B')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    (idx, l, fst, snd, p1, p2, d) = (0, len(s), -1, -1, 0, 0, 0)\n    while idx < l:\n        while idx < l and s[idx] == '.':\n            idx += 1\n        if idx < l:\n            fst = idx\n            idx += 1\n        while idx < l and s[idx] == '.':\n            idx += 1\n        if fst != -1:\n            snd = idx\n        idx += 1\n        if fst != -1 and (snd == l or s[fst] == s[snd]):\n            if s[fst] == 'A':\n                p1 += snd - fst - 1\n            elif s[fst] == 'B':\n                p2 += snd - fst - 1\n        elif fst != -1:\n            d ^= snd - fst - 1\n        fst = snd = -1\n    if d > 0:\n        p1 += 1\n    print('B' if p1 <= p2 else 'A')", "tests = int(input())\nfor t in range(tests):\n    s = input()\n    if len(s) == 1:\n        print('B')\n    else:\n        ind = 0\n        while ind < len(s):\n            e = s[ind]\n            if e != '.':\n                prev = e\n                break\n            ind += 1\n        right = True\n        counter = 0\n        movesa = 0\n        movesb = 0\n        gap = 0\n        for i in range(ind + 1, len(s)):\n            e = s[i]\n            if e == '.':\n                gap += 1\n                if i == len(s) - 1 and right:\n                    if prev == 'A':\n                        movesa += gap\n                    else:\n                        movesb += gap\n                continue\n            else:\n                if right and gap > 0:\n                    if e != prev:\n                        counter ^= gap\n                    elif e == 'A':\n                        movesa += gap\n                    else:\n                        movesb += gap\n                prev = e\n                gap = 0\n                right = not right\n        if movesa > movesb:\n            print('A')\n        elif movesa < movesb:\n            print('B')\n        elif counter == 0:\n            print('B')\n        else:\n            print('A')", "out = []\ntkn = {'.': 0, 'A': 1, 'B': 2}\nfor ti in range(int(input())):\n    board = input().strip()\n    state = 0\n    moves = [0] * 3\n    comp = 0\n    zone = 0\n    for c in board:\n        tc = tkn[c]\n        if tc == 0:\n            zone += 1\n        elif state == tc:\n            state = 0\n            moves[tc] += zone\n        elif state == 0:\n            state = tc\n            zone = 0\n        else:\n            state = 0\n            comp ^= zone\n    if state > 0:\n        moves[state] += zone\n    if moves[1] > moves[2]:\n        out.append('A')\n    elif moves[2] > moves[1]:\n        out.append('B')\n    elif comp > 0:\n        out.append('A')\n    else:\n        out.append('B')\nprint('\\n'.join(out))", "for _ in range(int(input())):\n    s = input()\n    c = 0\n    ca = 0\n    cb = 0\n    ex = 0\n    l = None\n    k = 0\n    for i in range(len(s)):\n        if c == 0:\n            if s[i] == '.':\n                continue\n            elif s[i] == 'A':\n                l = 'A'\n                c = 1\n            elif s[i] == 'B':\n                l = 'B'\n                c = 1\n        elif s[i] == '.':\n            k += 1\n        else:\n            c = 0\n            if l == 'A' and s[i] == 'A':\n                ca += k\n            elif l == 'B' and s[i] == 'B':\n                cb += k\n            else:\n                ex = ex ^ k\n            k = 0\n            l = None\n    if l == 'A':\n        ca += k\n    elif l == 'B':\n        cb += k\n    if ex:\n        ca += 1\n    if ca > cb:\n        print('A')\n    else:\n        print('B')"]