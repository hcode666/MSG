["import math\nimport sys\nimport random\nimport array as arr\nimport numpy as np\nfrom sys import stdin, stdout\nfrom collections import OrderedDict\nfrom collections import defaultdict\nfrom collections import deque\nimport heapq as hq\n\ndef get_input():\n    return list(map(int, input().split()))\n\ndef single_input():\n    return int(input())\n\ndef simple_input():\n    return input()\n\ndef solve():\n    n = int(stdin.readline())\n    arr = [0] * (n + 2)\n    for i in range(1, n + 2):\n        j = i\n        while j < n + 2:\n            arr[j] += 1\n            j += i\n    ans = 0\n    for i in range(1, n + 1):\n        ans += arr[i] * arr[i + 1] / 2 - 1\n    print(int(ans))\n\ndef main():\n    t = 1\n    for i in range(t):\n        solve()\nmain()", "import math\nimport sys\nimport random\nimport array as arr\nimport numpy as np\nfrom sys import stdin, stdout\nfrom collections import OrderedDict\nfrom collections import defaultdict\nfrom collections import deque\nimport heapq as hq\n\ndef get_input():\n    return list(map(int, input().split()))\n\ndef single_input():\n    return int(input())\n\ndef simple_input():\n    return input()\n\ndef solve():\n    n = int(stdin.readline())\n    arr = [0] * (n + 2)\n    for i in range(1, n + 2):\n        j = i\n        while j < n + 2:\n            arr[j] += 1\n            j += i\n    ans = 0\n    for i in range(1, n + 1):\n        ans += arr[i] * arr[i + 1] / 2 - 1\n    print(int(ans))\n\ndef main():\n    t = 1\n    for i in range(t):\n        solve()\nmain()", "max = int(1000000.0) + 7\narr = [0] * max\nfor i in range(1, max):\n    for j in range(i, max, i):\n        arr[j] += 1\nn = int(input())\nans = 0\nfor i in range(1, n + 1):\n    ans += arr[i] * arr[i + 1] // 2 - 1\nprint(ans)", "maxSize = int(1000000.0) + 7\nd = [0] * maxSize\nfor i in range(1, maxSize):\n    for j in range(i, maxSize, i):\n        d[j] += 1\nN = int(input())\nres = 0\nfor i in range(1, N + 1):\n    res += d[i] * d[i + 1] // 2 - 1\nprint(res)", "N = int(1000000.0) + 7\nd = [0] * N\nfor i in range(1, N):\n    for j in range(i, N, i):\n        d[j] += 1\nn = int(input())\nans = 0\nfor i in range(1, n + 1):\n    ans += d[i] * d[i + 1] // 2 - 1\nprint(ans)", "N = int(1000000.0) + 7\nd = [0] * N\nfor i in range(1, N):\n    for j in range(i, N, i):\n        d[j] += 1\nn = int(input())\nans = 0\nfor i in range(1, n + 1):\n    ans += d[i] * d[i + 1] // 2 - 1\nprint(ans)", "import sys, collections, math, itertools, random\nINF = sys.maxsize\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 1000000007\nn = int(input())\nd = [0] * (n + 2)\nfor r in range(1, n + 2):\n    for s in range(r, n + 2, r):\n        d[s] += 1\nans = 0\nfor i in range(1, n + 1):\n    ans += d[i] * d[i + 1] // 2 - 1\nprint(ans)"]