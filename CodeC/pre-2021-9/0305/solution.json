["import math\nt = int(input())\nfor i in range(0, t):\n    (n, m, c) = map(int, input().split(' '))\n    r = math.floor(math.sqrt(c))\n    p = 0\n    for j in range(1, r + 1):\n        if c % j != 0:\n            continue\n        d = c / j\n        if j <= n and d <= m:\n            p += 1\n        if j != d and j <= m and (d <= n):\n            p += 1\n    print(p)", "t = int(input())\nfor ni in range(t):\n    (n, m, c) = map(int, input().split())\n    if n > m:\n        (n, m) = (m, n)\n    count = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            count = count + 1\n    print(count)", "import math\nfor _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for i in range(1, math.ceil(math.sqrt(c + 1))):\n        if c % i == 0:\n            b = c // i\n            if i <= n and b <= m:\n                ans += 1\n            if i != b and i <= m and (b <= n):\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    if n > m:\n        (n, m) = (m, n)\n    ans = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    dims = 0\n    for i in range(1, c // 2 + 1):\n        if c % i == 0 and c // i <= m and (i <= n):\n            dims += 1\n    dims += int(c <= n)\n    print(dims)", "for _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    if c > n * m:\n        print(0)\n        continue\n    A = []\n    for i in range(1, c + 1):\n        if c % i > 0:\n            continue\n        if c // i <= m and i <= n:\n            A.append((i, c // i))\n        elif c // i > m and i > n:\n            break\n    print(len(A))", "for _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    a = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            a += 1\n    print(a)", "for tc in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    f = []\n    cnt = 0\n    for i in range(1, c + 1):\n        if c % i == 0:\n            f.append(i)\n    for i in f:\n        if i <= n and c // i <= m:\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    l = []\n    for i in range(1, c + 1):\n        if c % i == 0:\n            l.append([i, int(c / i)])\n    k = []\n    for i in range(len(l)):\n        if l[i][0] <= n and l[i][1] <= m:\n            k.append(l[i])\n    print(len(k))", "for _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    l = []\n    for i in range(1, c + 1):\n        if c % i == 0:\n            l.append([i, int(c / i)])\n    k = []\n    for i in range(len(l)):\n        if l[i][0] <= n and l[i][1] <= m:\n            k.append(l[i])\n    print(len(k))", "for _ in range(int(input())):\n    (n, m, c) = [int(x) for x in input().split()]\n    cnt = 0\n    for i in range(1, c // 2 + 1):\n        if c % i == 0:\n            j = c // i\n            if i <= n and j <= m:\n                cnt += 1\n    if c <= n:\n        cnt += 1\n    print(cnt)", "t = int(input())\nwhile t != 0:\n    (w, h, c) = map(int, input().split())\n    k = 0\n    for j in range(1, c + 1):\n        if c % j == 0:\n            if j <= w:\n                if c // j <= h:\n                    k += 1\n            else:\n                break\n    print(k)\n    t -= 1", "t = int(input())\nwhile t != 0:\n    (w, h, c) = map(int, input().split())\n    k = 0\n    for j in range(1, c + 1):\n        if c % j == 0:\n            if j <= w:\n                if c // j <= h:\n                    k += 1\n            else:\n                break\n    print(k)\n    t -= 1", "t = int(input(''))\nif 1 <= t <= 100:\n    for _ in range(t):\n        (n, m, c) = map(int, input().split())\n        if 1 <= n <= 10 ** 6 and 1 <= m <= 10 ** 6 and (1 <= c <= 10 ** 6):\n            x = 0\n            if n > m:\n                for i in range(1, m + 1):\n                    if c % i == 0 and i <= m and (c // i <= n):\n                        x += 1\n            else:\n                for i in range(1, n + 1):\n                    if c % i == 0 and i <= n and (c // i <= m):\n                        x += 1\n            print(x)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for i in range(1, math.ceil(math.sqrt(c + 1))):\n        if c % i == 0:\n            b = c // i\n            if i <= n and b <= m:\n                ans += 1\n            if i != b and i <= m and (b <= n):\n                ans += 1\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for i in range(1, math.ceil(math.sqrt(c + 1))):\n        if c % i == 0:\n            b = c // i\n            if i <= n and b <= m:\n                ans += 1\n            if i != b and i <= m and (b <= n):\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    cnt = 0\n    for i in range(1, n + 1):\n        if c % i == 0:\n            if c // i <= m:\n                cnt += 1\n    print(cnt)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for i in range(1, math.ceil(math.sqrt(c + 1))):\n        if c % i == 0:\n            b = c // i\n            if i <= n and b <= m:\n                ans += 1\n            if i != b and i <= m and (b <= n):\n                ans += 1\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for i in range(1, math.ceil(math.sqrt(c + 1))):\n        if c % i == 0:\n            b = c // i\n            if i <= n and b <= m:\n                ans += 1\n            if i != b and i <= m and (b <= n):\n                ans += 1\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for i in range(1, math.ceil(math.sqrt(c + 1))):\n        if c % i == 0:\n            b = c // i\n            if i <= n and b <= m:\n                ans += 1\n            if i != b and i <= m and (b <= n):\n                ans += 1\n    print(ans)", "T = int(input())\nwhile T > 0:\n    T = T - 1\n    s = [int(i) for i in input().split()]\n    x = s[0]\n    y = s[1]\n    c = s[2]\n    pai = 0\n    for i in range(1, x + 1):\n        if c % i == 0 and c / i <= y:\n            pai = pai + 1\n    print(pai)", "t = input()\nfor c in range(0, int(t)):\n    (n, m, c) = input().split()\n    n = int(n)\n    m = int(m)\n    c = int(c)\n    count = 0\n    if n > m:\n        for x in range(1, m + 1):\n            if c % x == 0:\n                if n >= c // x:\n                    count = count + 1\n    else:\n        for y in range(1, n + 1):\n            if c % y == 0:\n                if m >= c // y:\n                    count = count + 1\n    print(count)", "num_cases = int(input())\nfor _ in range(num_cases):\n    (n, m, c) = map(int, input().split())\n    num_possible = 0\n    for i in range(1, c + 1):\n        if c % i == 0:\n            (num_rows, num_cols) = (i, c // i)\n            if num_rows <= n and num_cols <= m:\n                num_possible += 1\n    print(num_possible)", "import math\nfor _ in range(int(input())):\n    (n, m, c) = [int(num) for num in input().split(' ')]\n    solutions = 0\n    for h in range(1, c + 1):\n        if c % h != 0:\n            continue\n        w = c / h\n        if h <= n and w <= m:\n            solutions += 1\n    print(solutions)", "import math\nfor _ in range(int(input())):\n    (n, m, c) = [int(num) for num in input().split(' ')]\n    solutions = 0\n    for h in range(1, c + 1):\n        if c % h != 0:\n            continue\n        w = c / h\n        if h <= n and w <= m:\n            solutions += 1\n    print(solutions)", "import math\ntests = int(input())\nfor i in range(tests):\n    (n, m, c) = map(int, input().split())\n    if n * m < c:\n        print(0)\n    else:\n        count = 0\n        end = math.floor(c ** 0.5) + 1\n        for j in range(1, end):\n            expected = c / j\n            if expected == int(expected) and j <= n and (expected <= m):\n                count += 1\n            if expected == int(expected) and j != expected and (j <= m) and (expected <= n):\n                count += 1\n        print(count)", "for i in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    count = 0\n    for i in range(1, n + 1):\n        if c % i == 0:\n            x = c // i\n            if 1 <= x <= m:\n                count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    if n * m < c:\n        print(0)\n    else:\n        count = 0\n        p = min(n + 1, c // 2 + 1)\n        for i in range(1, p):\n            if c % i == 0:\n                j = c / i\n                if j <= m:\n                    count += 1\n        if n >= c:\n            count += 1\n        print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for x in range(1, n + 1):\n        if c % x == 0:\n            y = c / x\n            if y <= m:\n                ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for x in range(1, n + 1):\n        if c % x == 0:\n            y = c / x\n            if y <= m:\n                ans += 1\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (n, m, c) = map(int, input().split())\n    count = 0\n    for a in range(1, n + 1):\n        if c % a == 0 and c // a <= m:\n            count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            ans += 1\n    print(ans)", "for M in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    cum = 0\n    for i in range(1, x + 1):\n        if z % i == 0 and z / i <= y:\n            cum += 1\n    print(cum)", "t = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m, c) = map(int, input().split())\n    ct = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            ct += 1\n    print(ct)", "t = int(input())\nfor i in range(t):\n    (n, m, c) = map(int, input().split())\n    ct = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            ct += 1\n    print(ct)", "for _ in range(int(input())):\n    (l, w, c) = map(int, input().split())\n    g = max(l, w)\n    p = min(l, w)\n    co = 0\n    for i in range(1, p + 1):\n        if c % i == 0:\n            if c // i <= g:\n                co += 1\n    print(co)", "t = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for x in range(1, n + 1):\n        if c % x == 0:\n            y = c / x\n            if y <= m:\n                ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for x in range(1, n + 1):\n        if c % x == 0:\n            w = c / x\n            if w <= m:\n                ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    ck = 0\n    (n, m, c) = map(int, input().split())\n    for i in range(1, n + 1):\n        if c % i == 0:\n            a = c / i\n            if a <= m:\n                ck += 1\n    print(ck)", "t = int(input())\nfor i in range(t):\n    ck = 0\n    (n, m, c) = map(int, input().split())\n    for i in range(1, n + 1):\n        if c % i == 0:\n            a = c / i\n            if a <= m:\n                ck += 1\n    print(ck)", "t = int(input())\nfor i in range(t):\n    (n, m, c) = map(int, input().split())\n    count = 0\n    for i in range(1, n + 1):\n        if c % i == 0:\n            a = c / i\n            if a <= m:\n                count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, m, c) = map(int, input().split())\n    count = 0\n    for i in range(1, n + 1):\n        if c % i == 0:\n            a = c / i\n            if a <= m:\n                count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, m, c) = map(int, input().split())\n    count = 0\n    for i in range(1, n + 1):\n        if c % i == 0:\n            a = c / i\n            if a <= m:\n                count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, m, c) = map(int, input().split())\n    count = 0\n    for i in range(1, n + 1):\n        if c % i == 0:\n            a = c / i\n            if a <= m:\n                count += 1\n    print(count)", "T = int(input())\nfor tc in range(T):\n    (H, W, C) = map(int, input().split(' '))\n    a = 0\n    for i in range(1, H + 1):\n        if C % i == 0 and C / i <= W:\n            a = a + 1\n    print(a)", "for _ in range(int(input())):\n    (n, m, c) = list(map(int, input().split()))\n    a = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c / i <= m:\n            a += 1\n    print(a)", "for _ in range(int(input())):\n    (n, m, c) = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c / i <= m:\n            ans += 1\n    print(ans)", "import math\n\ndef fact(n, h, w):\n    count = 0\n    for i in range(1, h + 1):\n        if n % i == 0:\n            if n // i <= w:\n                count += 1\n    return count\nfor _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    print(fact(c, m, n))", "for _ in range(int(input())):\n    (n, m, c) = map(int, input().rstrip().split())\n    count = 0\n    if n * m < c:\n        pass\n    else:\n        for i in range(1, n + 1):\n            if c % i == 0:\n                if c // i <= m:\n                    count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    count = 0\n    x = min(n, m)\n    y = max(n, m)\n    for i in range(1, x + 1):\n        if c % i == 0 and c // i <= y:\n            count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    count = 0\n    x = min(n, m)\n    y = max(n, m)\n    for i in range(1, x + 1):\n        if c % i == 0 and c // i <= y:\n            count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    count = 0\n    x = min(n, m)\n    y = max(n, m)\n    for i in range(1, x + 1):\n        if c % i == 0 and c // i <= y:\n            count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m, c) = map(int, input().split())\n    count = 0\n    x = min(n, m)\n    y = max(n, m)\n    for i in range(1, x + 1):\n        if c % i == 0 and c // i <= y:\n            count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    co = 0\n    lst = list(map(int, input().split()))\n    n = lst[0]\n    m = lst[1]\n    c = lst[2]\n    for i in range(1, n + 1):\n        if c % i == 0:\n            if c / i <= m:\n                co = co + 1\n    print(co)", "try:\n    for _ in range(int(input())):\n        (n, m, c) = map(int, input().split())\n        cnt = 0\n        for i in range(1, n + 1):\n            if c % i == 0 and c / i <= m:\n                cnt += 1\n        print(cnt)\nexcept EOFError:\n    pass", "try:\n    for _ in range(int(input())):\n        (n, m, c) = map(int, input().split())\n        cnt = 0\n        for i in range(1, n + 1):\n            if c % i == 0 and c / i <= m:\n                cnt += 1\n        print(cnt)\nexcept EOFError:\n    pass", "try:\n    for _ in range(int(input())):\n        (n, m, c) = map(int, input().split())\n        cnt = 0\n        for i in range(1, n + 1):\n            if c % i == 0 and c // i <= m:\n                cnt += 1\n        print(cnt)\nexcept EOFError:\n    pass", "for _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    p = 0\n    l = []\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            p += 1\n    print(p)", "for i in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    ans = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c / i <= m:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m, c) = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c / i <= m:\n            ans += 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, m, c) = input().split(' ')\n    n = int(n)\n    m = int(m)\n    c = int(c)\n    count = 0\n    for i in range(1, n + 1):\n        if c % i == 0:\n            if c // i <= m:\n                count = count + 1\n    print(count)\n    t = t - 1", "for __ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    count = 0\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            count += 1\n    print(count)", "t = int(input())\nwhile t > 0:\n    (n, m, c) = input().split(' ')\n    n = int(n)\n    m = int(m)\n    c = int(c)\n    count = 0\n    for i in range(1, n + 1):\n        if c % i == 0:\n            if c // i <= m:\n                count = count + 1\n    print(count)\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    (a, b, d) = input().split()\n    n = int(a)\n    m = int(b)\n    c = int(d)\n    if n * m < c:\n        print(0)\n    else:\n        count = 0\n        for j in range(1, c + 1):\n            if c % j == 0:\n                if j <= n and c / j <= m:\n                    count += 1\n        print(count)", "import math\nt = int(input())\nfor _ in range(t):\n    s = 0\n    (n, m, a) = map(int, input().split(' '))\n    for i in range(1, min(n, m) + 1):\n        if a % i == 0 and a / i <= max(n, m):\n            s = s + 1\n    print(s)", "for _ in range(int(input())):\n    (n, m, c) = list(map(int, input().split()))\n    num = 0\n    if c > m * n:\n        print(num)\n        continue\n    if m < n:\n        (mini, maxi) = (m, n)\n    else:\n        (mini, maxi) = (n, m)\n    mini = c if c < mini else mini\n    for i in range(1, mini + 1):\n        if c // i <= maxi and c % i == 0:\n            num += 1\n    print(num)", "for i in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    count = 0\n    for j in range(1, n + 1):\n        if c % j == 0 and c // j <= m:\n            count += 1\n    print(count)", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    coun = 0\n    for j in range(1, a + 1):\n        if c % j == 0 and c // j <= b:\n            coun += 1\n    print(coun)", "t = int(input())\nfor i in range(t):\n    l1 = list(map(int, input().strip().split(' ')))\n    (n, m, c) = (l1[0], l1[1], l1[2])\n    if n < m:\n        sm = n\n        bg = m\n    else:\n        sm = m\n        bg = n\n    ans = 0\n    for d in range(1, sm + 1):\n        s = c // d\n        if d > c:\n            break\n        if s * d == c and bg >= s:\n            ans = ans + 1\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (H, W, C) = map(int, input().split())\n    ans = 0\n    for i in range(1, H + 1):\n        if C % i == 0 and C / i <= W:\n            ans += 1\n    print(ans)", "def isPrime(n):\n    if n <= 11:\n        return n in [2, 3, 5, 7, 11]\n    (r, d) = (0, n - 1)\n    while d % 2 == 0:\n        r += 1\n        d //= 2\n    for a in [2, 3, 5, 7, 11]:\n        (probablePrime, b0) = (False, pow(a, d, n))\n        if b0 in [1, n - 1]:\n            probablePrime = True\n            continue\n        bi = b0\n        for i in range(1, r):\n            bi = bi ** 2 % n\n            if bi == 1:\n                probablePrime = False\n                break\n            if bi == n - 1:\n                probablePrime = True\n                break\n        if probablePrime == False:\n            return False\n    return True\n\ndef getPrimeFactors(n):\n    if n % 2 == 0:\n        primeFactors = [2]\n        n //= 2\n        while n % 2 == 0:\n            primeFactors.append(2)\n            n //= 2\n    else:\n        primeFactors = []\n    factor = 3\n    if isPrime(n):\n        primeFactors.append(n)\n        n = 1\n    while n != 1:\n        if n % factor == 0 and isPrime(factor):\n            primeFactors.append(factor)\n            n //= factor\n            while n % factor == 0:\n                primeFactors.append(factor)\n                n //= factor\n            if isPrime(n):\n                primeFactors.append(n)\n                n = 1\n        factor += 2\n    from itertools import groupby\n    primeFactors = [[v, len(list(q))] for (v, q) in groupby(primeFactors)]\n    return primeFactors\n\ndef iterate(n, m, primeFactors, waysFound):\n    (primeFactorValue, primeFactorAmount) = primeFactors[0]\n    for i in range(0, primeFactorAmount + 1):\n        new_n = n * primeFactorValue ** i\n        new_m = m * primeFactorValue ** (primeFactorAmount - i)\n        if new_n > N or new_m > M:\n            continue\n        if len(primeFactors) <= 1:\n            waysFound += 1\n        else:\n            waysFound += iterate(new_n, new_m, primeFactors[1:], 0)\n    return waysFound\n\ndef method1(N, M, C):\n    if C == 1:\n        return 1\n    waysFound = iterate(1, 1, getPrimeFactors(C), 0)\n    return waysFound\n\ndef method2(N, M, C):\n    waysFound = 0\n    for n in range(1, N + 1):\n        if C % n != 0:\n            continue\n        m = C // n\n        if m > M:\n            continue\n        waysFound += 1\n    return waysFound\nT = int(input())\nfor _ in range(T):\n    (N, M, C) = [int(x) for x in input().split()]\n    print(method1(N, M, C))", "def isPrime(n):\n    if n <= 11:\n        return n in [2, 3, 5, 7, 11]\n    (r, d) = (0, n - 1)\n    while d % 2 == 0:\n        r += 1\n        d //= 2\n    for a in [2, 3, 5, 7, 11]:\n        (probablePrime, b0) = (False, pow(a, d, n))\n        if b0 in [1, n - 1]:\n            probablePrime = True\n            continue\n        bi = b0\n        for i in range(1, r):\n            bi = bi ** 2 % n\n            if bi == 1:\n                probablePrime = False\n                break\n            if bi == n - 1:\n                probablePrime = True\n                break\n        if probablePrime == False:\n            return False\n    return True\n\ndef getPrimeFactors(n):\n    if n % 2 == 0:\n        primeFactors = [2]\n        n //= 2\n        while n % 2 == 0:\n            primeFactors.append(2)\n            n //= 2\n    else:\n        primeFactors = []\n    factor = 3\n    if isPrime(n):\n        primeFactors.append(n)\n        n = 1\n    while n != 1:\n        if n % factor == 0 and isPrime(factor):\n            primeFactors.append(factor)\n            n //= factor\n            while n % factor == 0:\n                primeFactors.append(factor)\n                n //= factor\n            if isPrime(n):\n                primeFactors.append(n)\n                n = 1\n        factor += 2\n    from itertools import groupby\n    primeFactors = [[v, len(list(q))] for (v, q) in groupby(primeFactors)]\n    return primeFactors\n\ndef iterate(n, m, primeFactors, waysFound):\n    (primeFactorValue, primeFactorAmount) = primeFactors[0]\n    for i in range(0, primeFactorAmount + 1):\n        new_n = n * primeFactorValue ** i\n        new_m = m * primeFactorValue ** (primeFactorAmount - i)\n        if new_n > N or new_m > M:\n            continue\n        if len(primeFactors) <= 1:\n            waysFound += 1\n        else:\n            waysFound += iterate(new_n, new_m, primeFactors[1:], 0)\n    return waysFound\n\ndef method1(N, M, C):\n    if C == 1:\n        return 1\n    waysFound = iterate(1, 1, getPrimeFactors(C), 0)\n    return waysFound\n\ndef method2(N, M, C):\n    waysFound = 0\n    for n in range(1, N + 1):\n        if C % n != 0:\n            continue\n        m = C // n\n        if m > M:\n            continue\n        waysFound += 1\n    return waysFound\nT = int(input())\nfor _ in range(T):\n    (N, M, C) = [int(x) for x in input().split()]\n    print(method2(N, M, C))", "t = int(input())\nwhile t > 0:\n    (n, m, c) = map(int, input().split())\n    divisors = [1]\n    k = c\n    for i in range(2, k + 1):\n        if k % i == 0:\n            divisors.append(i)\n    k = len(divisors)\n    i = 0\n    pairs = []\n    while i < k and divisors[i] <= n:\n        j = 0\n        while j < k and divisors[j] <= m:\n            if divisors[i] * divisors[j] == c:\n                pairs.append([divisors[i], divisors[j]])\n            j += 1\n        i += 1\n    print(len(pairs))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, m, c) = list(map(int, input().split()))\n    count = 0\n    for x in range(1, n + 1):\n        if c % x == 0:\n            if c / x <= m:\n                count += 1\n    print(count)", "def variants(n, m, c):\n    res = [(i, c // i) for i in range(1, c + 1) if c % i == 0 and i <= n and (c // i <= m)]\n    return len(res)\nfor t in range(int(input())):\n    (n, m, c) = input().split()\n    (n, m, c) = (int(n), int(m), int(c))\n    print(variants(n, m, c))", "def variants(n, m, c):\n    res = [(i, c // i) for i in range(1, c + 1) if c % i == 0 and i <= n and (c // i <= m)]\n    return len(res)\nt = int(input())\nfor _ in range(t):\n    (n, m, c) = list(map(int, input().split(' ')))\n    print(variants(n, m, c))", "for t in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    sq = int(c ** 0.5)\n    cnt = 0\n    for i in range(1, sq + 1):\n        if c % i == 0:\n            j = c / i\n            if i <= n and j <= m:\n                cnt += 1\n            if i <= m and j <= n and (i != j):\n                cnt += 1\n    print(cnt)", "import math\nfor _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    out = 0\n    for i in range(1, math.floor(math.sqrt(c)) + 1):\n        if c % i == 0:\n            (x, y) = (i, c / i)\n            if x != y:\n                if x <= m and y <= n:\n                    out += 1\n                if x <= n and y <= m:\n                    out += 1\n            elif x <= m and x <= n:\n                out += 1\n    print(out)", "for _ in range(int(input())):\n    (n, m, c) = map(int, input().split())\n    out = 0\n    for i in range(1, n + 1):\n        if c % i == 0:\n            if c / i <= m:\n                out += 1\n    print(out)", "t = int(input())\nfor i in range(t):\n    arr = [int(j) for j in input().split()]\n    if arr[0] * arr[1] < arr[2]:\n        count = 0\n    else:\n        count = 0\n        if arr[0] <= arr[1]:\n            first = arr[0]\n            second = arr[1]\n        else:\n            first = arr[1]\n            second = arr[0]\n        for n in range(first, 0, -1):\n            if arr[2] % n == 0:\n                if arr[2] / n <= second:\n                    count = count + 1\n                else:\n                    break\n    print(count)", "tc = int(input())\nout = []\nfor i in range(tc):\n    (n, m, c) = input().split()\n    n = int(n)\n    m = int(m)\n    c = int(c)\n    counter = 0\n    for j in range(1, n + 1):\n        if c % j == 0 and c / j <= m:\n            counter += 1\n    out.append(counter)\nfor i in out:\n    print(i)", "t = int(input())\nfor _ in range(0, t):\n    y = input()\n    n = int(y.split()[0])\n    m = int(y.split()[1])\n    c = int(y.split()[2])\n    ans = 0\n    for i in range(1, c + 1):\n        if c % i == 0 and i <= n and (c / i <= m):\n            ans += 1\n    print(ans)", "t = int(input())\nwhile t != 0:\n    count = 0\n    (n, m, c) = map(int, input().split())\n    for i in range(1, n + 1):\n        if c % i == 0 and c / i <= m:\n            count += 1\n    print(count)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (x, y, c) = map(int, input().split())\n    m = 1\n    sum = 0\n    while m <= c:\n        if c % m == 0:\n            d = c / m\n            if m <= x and d <= y:\n                sum += 1\n        m += 1\n    print(sum)", "t = int(input())\nfor i in range(0, t):\n    (n, m, c) = input().split()\n    (n, m, c) = [int(n), int(m), int(c)]\n    j = 1\n    count = 0\n    while j <= c:\n        if c % j == 0:\n            d = c / j\n            if j <= n and d <= m:\n                count += 1\n        j += 1\n    print(count)", "import math\n\ndef get_ans(l, r, x, y, n):\n    ctr = 0\n    ex = 0\n    for i in range(1, int(math.sqrt(n)) + 1):\n        x1 = i\n        y1 = n // i\n        if x1 * y1 == n and x1 <= x and (y1 <= y):\n            ctr += 1\n        if x1 * y1 == n and x1 <= y and (y1 <= x):\n            ctr += 1\n    if int(math.sqrt(n)) ** 2 == n:\n        ex = 1\n    if ctr == 0 and ex == 1:\n        ctr += 1\n    return ctr - ex\nt = int(input())\nwhile t:\n    t -= 1\n    count = 0\n    (x, y, n) = map(int, input().split())\n    count = get_ans(1, n, x, y, n)\n    print(count)", "def main():\n    testCases = int(input())\n    for i in range(testCases):\n        (n, m, c) = map(int, input().split(' '))\n        count = 0\n        if n * m >= c:\n            for i in range(1, n + 1):\n                if c % i == 0 and int(c / i) <= m:\n                    count += 1\n        print(count)\nmain()", "def main():\n    testCases = int(input())\n    for i in range(testCases):\n        (n, m, c) = map(int, input().split(' '))\n        count = 0\n        if n * m >= c:\n            for i in range(1, n + 1):\n                if c % i == 0 and int(c / i) <= m:\n                    count += 1\n        print(count)\nmain()", "def divisor(c):\n    l = []\n    for i in range(1, c + 1):\n        if c % i == 0:\n            l.append(i)\n    return l\nfor _ in range(int(input())):\n    (m, n, c) = map(int, input().split())\n    l = divisor(c)\n    count = 0\n    if m * n < c:\n        print(0)\n    else:\n        for i in l:\n            for j in l:\n                if i * j == c and i <= m and (j <= n):\n                    count += 1\n        print(count)", "import math\n\ndef divisor(c):\n    l = []\n    for i in range(1, c + 1):\n        if c % i == 0:\n            l.append(i)\n    return l\nfor _ in range(int(input())):\n    (m, n, c) = map(int, input().split())\n    count = 0\n    if m * n < c:\n        print(0)\n    else:\n        l = divisor(c)\n        for i in l:\n            for j in l:\n                if i * j == c and i <= m and (j <= n):\n                    count += 1\n        print(count)", "for _ in range(int(input())):\n    (n, m, c) = [int(x) for x in input().split()]\n    x = 0\n    a = min(n, m)\n    m = m + n - a\n    for i in range(1, a + 1):\n        if c % i == 0 and c // i <= m:\n            x += 1\n    print(x)", "for _ in range(int(input())):\n    (n, m, c) = [int(x) for x in input().split()]\n    x = 0\n    (n, m) = (min(n, m), max(n, m))\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            x += 1\n    print(x)", "for _ in range(int(input())):\n    (n, m, c) = [int(x) for x in input().split()]\n    x = 0\n    (n, m) = (min(n, m), max(n, m))\n    for i in range(1, n + 1):\n        if c % i == 0 and c // i <= m:\n            x += 1\n    print(x)", "for _ in range(int(input())):\n    (n, m, c) = [int(x) for x in input().split()]\n    x = 0\n    (n, m) = (min(n, m), max(n, m))\n    for i in range(1, n + 1):\n        if c % i == 0:\n            if c // i <= m:\n                x += 1\n    print(x)", "for _ in range(int(input())):\n    (n, m, c) = list(map(int, input().split()))\n    if n * m < c:\n        print(0)\n        continue\n    x = 0\n    (n, m) = (min(n, m), max(n, m))\n    for i in range(1, n + 1):\n        if c % i == 0:\n            if c // i <= m:\n                x += 1\n    print(x)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = input().split(' ')\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    k = 0\n    for i in range(1, a + 1):\n        if c % i == 0 and int(c / i) <= b:\n            k += 1\n    print(k)"]