["for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    p = list(map(float, input().split()))\n    x = 0\n    for i in range(30):\n        pb = 0.0\n        for j in range(n):\n            if b[j] & 1 << i:\n                pb = pb * (1 - p[j]) + (1 - pb) * p[j]\n        x += (1 << i) * pb\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    p = list(map(float, input().split()))\n    x = 0\n    for i in range(30):\n        pb = 0.0\n        for j in range(n):\n            if b[j] & 1 << i:\n                pb = pb * (1 - p[j]) + (1 - pb) * p[j]\n        x += (1 << i) * pb\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    p = list(map(float, input().split()))\n    x = 0\n    for i in range(30):\n        pb = 0.0\n        for j in range(n):\n            if b[j] & 1 << i:\n                pb = pb * (1 - p[j]) + (1 - pb) * p[j]\n        x += (1 << i) * pb\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    B = [int(x) for x in input().split()]\n    P = [float(x) for x in input().split()]\n    tl = [0] * 30\n    for (b, p) in zip(B, P):\n        bs = bin(b)[2:][::-1]\n        for i in range(len(bs)):\n            if bs[i] == '1':\n                tl[29 - i] = (1 - tl[29 - i]) * p + (1 - p) * tl[29 - i]\n    ans = 0\n    for i in range(29, -1, -1):\n        ans += 2 ** (29 - i) * tl[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    B = [int(x) for x in input().split()]\n    P = [float(x) for x in input().split()]\n    tl = [0] * 30\n    for (b, p) in zip(B, P):\n        bs = bin(b)[2:][::-1]\n        for i in range(len(bs)):\n            if bs[i] == '1':\n                tl[29 - i] = (1 - tl[29 - i]) * p + (1 - p) * tl[29 - i]\n    ans = 0\n    for i in range(29, -1, -1):\n        ans += 2 ** (29 - i) * tl[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    p = list(map(float, input().split()))\n    x = 0\n    for i in range(30):\n        pb = 0.0\n        for j in range(n):\n            if b[j] & 1 << i:\n                pb = pb * (1 - p[j]) + (1 - pb) * p[j]\n        x += (1 << i) * pb\n    print(x)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    p = [float(x) for x in input().split()]\n    s = [0] * 10\n    yet = 2\n    mx = 0\n    for i in range(n):\n        st = bin(b[i])\n        rng = len(st) - 2\n        if rng + 2 > yet:\n            for ml in range(rng + 2 - yet):\n                s.append(0)\n        if rng > mx:\n            mx = rng\n        for k in range(2, rng + 2):\n            if st[k] == '1':\n                s[rng - k + 1] = s[rng - k + 1] * (1 - p[i]) + (1 - s[rng - k + 1]) * p[i]\n    mult = 1\n    ans = 0\n    for i in range(0, mx):\n        ans += mult * s[i]\n        mult = mult * 2\n    print('%.16f' % ans)\n    t -= 1", "t = int(input())\nwhile t:\n    x = 0\n    n = int(input())\n    b = list(map(int, input().strip().split()))\n    p = list(map(float, input().strip().split()))\n    for i in range(30):\n        pb = 0.0\n        for j in range(n):\n            if b[j] & 1 << i:\n                pb = pb * (1 - p[j]) + (1 - pb) * p[j]\n        x += (1 << i) * pb\n    print(x)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    B = [int(x) for x in input().split()]\n    P = [float(x) for x in input().split()]\n    tl = [0] * 30\n    for (b, p) in zip(B, P):\n        bs = bin(b)[2:][::-1]\n        for i in range(len(bs)):\n            if bs[i] == '1':\n                tl[29 - i] = (1 - tl[29 - i]) * p + (1 - p) * tl[29 - i]\n    ans = 0\n    for i in range(29, -1, -1):\n        ans += 2 ** (29 - i) * tl[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    xl = [int(x) for x in input().split()]\n    pl = [float(x) for x in input().split()]\n    tl = [0] * 30\n    for (x, p) in zip(xl, pl):\n        bs = bin(x)[2:][::-1]\n        for i in range(len(bs)):\n            if bs[i] == '1':\n                tl[i] = (1 - tl[i]) * p + (1 - p) * tl[i]\n    ans = 0\n    for i in range(30):\n        ans += 2 ** i * tl[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    xl = [int(x) for x in input().split()]\n    pl = [float(x) for x in input().split()]\n    tl = [0] * 30\n    for (x, p) in zip(xl, pl):\n        bs = bin(x)[2:][::-1]\n        for i in range(len(bs)):\n            if bs[i] == '1':\n                tl[i] = (1 - tl[i]) * p + (1 - p) * tl[i]\n    ans = 0\n    for i in range(30):\n        ans += 2 ** i * tl[i]\n    print(ans)", "k = 30\nfor _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(float, input().split()))\n    ans = 0\n    for i in range(k):\n        p = 0\n        for j in range(n):\n            if l1[j] & 1 << i:\n                p = p * (1 - l2[j]) + (1 - p) * l2[j]\n        ans += p * (1 << i)\n    print('%.15f' % ans)", "for _ in range(int(input())):\n    n = int(input())\n    (beauty, prob) = (list(map(int, input().split())), list(map(float, input().split())))\n    (exp0, exp1) = ([1.0 for _ in range(31)], [0.0 for _ in range(31)])\n    for i in range(n):\n        (curr_beauty, curr_prob, j) = (beauty[i], prob[i], 0)\n        while 30 >= j and 0 != curr_beauty:\n            if curr_beauty & 1:\n                exp0[j] = exp1[j] * curr_prob + exp0[j] * (1 - curr_prob)\n                exp1[j] = 1 - exp0[j]\n            (curr_beauty, j) = (curr_beauty // 2, j + 1)\n    (ans, j, mul) = (0.0, 0, 1)\n    while 30 >= j:\n        (ans, mul, j) = (ans + mul * exp1[j], mul * 2, j + 1)\n    print('%.9f' % ans)", "from bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nfrom math import *\nfrom decimal import *\nfrom copy import *\ngetcontext().prec = 30\nMAX = sys.maxsize\nMAXN = 10 ** 6 + 10\nMOD = 10 ** 9 + 7\n\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2:\n        return True\n    if not n & 1:\n        return False\n    for x in range(3, int(n ** 0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a, b):\n    return abs(a[0] - b[0]) + abs(b[1] - a[1])\n\ndef numIN(x=' '):\n    return map(int, sys.stdin.readline().strip().split(x))\n\ndef charIN(x=' '):\n    return sys.stdin.readline().strip().split(x)\n\ndef arrIN():\n    return list(numIN())\n\ndef dis(x, y):\n    a = y[0] - x[0]\n    b = x[1] - y[1]\n    return (a * a + b * b) ** 0.5\n\ndef lgcd(a):\n    g = a[0]\n    for i in range(1, len(a)):\n        g = math.gcd(g, a[i])\n    return g\n\ndef ms(a):\n    msf = -MAX\n    meh = 0\n    st = en = be = 0\n    for i in range(len(a)):\n        meh += a[i]\n        if msf < meh:\n            msf = meh\n            st = be\n            en = i\n        if meh < 0:\n            meh = 0\n            be = i + 1\n    return (msf, st, en)\n\ndef flush():\n    return sys.stdout.flush()\nfor _ in range(int(input())):\n    n = int(input())\n    a = arrIN()\n    p = list(map(float, input().split()))\n    dp = [0] * 32\n    for i in range(32):\n        for j in range(n):\n            if a[j] & 1 << i:\n                dp[i] = (1 - p[j]) * dp[i] + (1 - dp[i]) * p[j]\n    ans = 0\n    for i in range(32):\n        ans += dp[i] * (1 << i)\n    print(ans)", "T = int(input())\nfor i in range(0, T):\n    N = int(input())\n    b = [int(x) for x in input().split()]\n    p = [float(x) for x in input().split()]\n    arr = [0] * 32\n    for j in range(0, len(b)):\n        st = bin(b[j])\n        st = st[2:]\n        for k in range(1, len(st) + 1):\n            if st[-k] == '1':\n                arr[k - 1] = (1 - arr[k - 1]) * p[j] + (1 - p[j]) * arr[k - 1]\n    exp = 0\n    xr = 1\n    for j in range(0, len(arr)):\n        exp = exp + xr * arr[j]\n        xr = xr * 2\n    print(exp)", "l = [1]\nfor k in range(31):\n    l.append(l[-1] * 2)\n\ndef convert(s):\n    while len(s) != 32:\n        s = '0' + s\n    ans = ''\n    for i in s:\n        ans = i + ans\n    return ans\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        val = list(map(int, input().split()))\n        p = list(map(float, input().split()))\n        res = 0\n        for i in range(32):\n            x = 0\n            for j in range(n):\n                if val[j] & 1 << i:\n                    x = p[j] * (1 - x) + (1 - p[j]) * x\n            res += l[i] * x\n        print('%.6f' % res)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(float, input().split()))\n    ans = 0\n    for i in range(30):\n        temp = 0\n        for j in range(n):\n            if a[j] & 1 << i:\n                temp = temp * (1 - b[j]) + (1 - temp) * b[j]\n        ans += temp * (1 << i)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    B = list(map(int, input().strip().split(' ')))\n    P = list(map(float, input().strip().split(' ')))\n    l = [0] * 32\n    ans = 0\n    cur_bit = 1\n    for i in range(0, 31):\n        cur_prob = 0.0\n        for j in range(0, len(B)):\n            if cur_bit & B[j]:\n                cur_prob = cur_prob * (1 - P[j]) + (1 - cur_prob) * P[j]\n        cur_bit = cur_bit << 1\n        ans = ans + cur_prob * 2 ** i\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    p = [float(x) for x in input().split()]\n    s = [0] * 10\n    yet = 2\n    mx = 0\n    for i in range(n):\n        st = bin(b[i])\n        rng = len(st) - 2\n        if rng + 2 > yet:\n            for ml in range(rng + 2 - yet):\n                s.append(0)\n        if rng > mx:\n            mx = rng\n        for k in range(2, rng + 2):\n            if st[k] == '1':\n                s[rng - k + 1] = s[rng - k + 1] * (1 - p[i]) + (1 - s[rng - k + 1]) * p[i]\n    mult = 1\n    ans = 0\n    for i in range(0, mx):\n        ans += mult * s[i]\n        mult = mult * 2\n    print('%.16f' % ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    xl = [int(x) for x in input().split()]\n    pl = [float(x) for x in input().split()]\n    tl = [0] * 30\n    for (x, p) in zip(xl, pl):\n        bs = bin(x)[2:][::-1]\n        for i in range(len(bs)):\n            if bs[i] == '1':\n                tl[i] = (1 - tl[i]) * p + (1 - p) * tl[i]\n    ans = 0\n    for i in range(30):\n        ans += 2 ** i * tl[i]\n    print(ans)", "def findout(P):\n    ans = 1\n    ans2 = 1\n    for x in P:\n        ans *= 2 * x - 1\n    if len(P) % 2 == 0:\n        return (1 - ans) / 2\n    else:\n        return (1 + ans) / 2\n\ndef find(b, p):\n    B = max(b)\n    okay = len(bin(B)[2:])\n    new_b = []\n    for x in b:\n        new_b += [('0' * (okay - len(bin(x)[2:])) + bin(x)[2:])[::-1]]\n    ans = 0\n    for i in range(okay):\n        temp_s = ''\n        ones = []\n        for j in range(len(new_b)):\n            if new_b[j][i] == '1':\n                ones += [p[j]]\n        want = findout(ones)\n        ans += 2 ** i * want\n    return ans\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    b = list(map(int, input().strip().split(' ')))\n    p = list(map(float, input().strip().split(' ')))\n    print(find(b, p))", "for i in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    p = list(map(float, input().split()))\n    ans = 0\n    o = [0] * 30\n    for i in range(n):\n        s = bin(b[i])[2:]\n        for j in range(1, len(s) + 1):\n            if s[-j] == '1':\n                o[j - 1] = (1 - o[j - 1]) * p[i] + (1 - p[i]) * o[j - 1]\n    ans = 0\n    x = 1\n    for item in o:\n        ans += x * item\n        x = x * 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = [int(i) for i in input().split()]\n    p = [float(i) for i in input().split()]\n    pb = [0] * 30\n    for i in range(n):\n        h = b[i]\n        j = 0\n        while h:\n            if h % 2 == 1:\n                x = pb[j]\n                y = p[i]\n                pb[j] = x * (1 - y) + y * (1 - x)\n            h = h // 2\n            j += 1\n    ans = 0\n    k = 1\n    for i in pb:\n        ans += k * i\n        k *= 2\n    print('%.10f' % ans)"]