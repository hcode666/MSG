["import math\n\ndef ncr(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\n(x, n) = map(int, input().split())\nresult = 0\nfor i in range(n):\n    s = input()\n    j = 0\n    for i in range(0, 36, 4):\n        c = (s[i:i + 4] + s[52 - j:54 - j]).count('0')\n        j += 2\n        if c >= x:\n            result += ncr(c, x)\nprint(result)", "import math\n(x, n) = map(int, input().split())\nans = 0\nfor _ in range(n):\n    res = input()\n    i = 0\n    j = 53\n    while i < 36 and j >= 36:\n        car = 0\n        k = 0\n        while k < 4:\n            if res[i] == '0':\n                car += 1\n            i += 1\n            k += 1\n        l = 0\n        while l < 2:\n            if res[j] == '0':\n                car += 1\n            j -= 1\n            l += 1\n        if car >= x:\n            ans += math.comb(car, x)\nprint(ans)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\nc = 0\nfor k in range(n):\n    s = input()\n    i = 1\n    j = 54\n    for _ in range(9):\n        kupe = s[i - 1:i + 3] + s[j - 2:j]\n        c += math.comb(kupe.count('0'), x)\n        i += 4\n        j -= 2\nprint(c)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor i in range(n):\n    s = input()\n    (i, j) = (0, 54)\n    for d in range(9):\n        li = s[i:i + 4] + s[j - 2:j]\n        count += math.comb(li.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(y, n) = map(int, input().split())\nw = 0\nfor _ in range(n):\n    s = input()\n    k = 1\n    x = 0\n    for i in range(0, 36, 4):\n        x = s[i:i + 4].count('0')\n        if s[-k] == '0':\n            x += 1\n        if s[-(k + 1)] == '0':\n            x += 1\n        k += 2\n        if y <= x:\n            w += math.comb(x, y)\nprint(w)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(kannaa, buji) = map(int, input().split())\ncount = 0\nfor _ in range(buji):\n    go = input()\n    (j1, j2) = (0, 54)\n    for __ in range(9):\n        v = go[j1:j1 + 4] + go[j2 - 2:j2]\n        count += math.comb(v.count('0'), kannaa)\n        j1 += 4\n        j2 -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\nc = 0\nfor i in range(n):\n    s = str(input())\n    lst = []\n    p = 0\n    q = 54\n    for j in range(9):\n        lst = s[p:p + 4] + s[q - 2:q]\n        c += math.comb(lst.count('0'), x)\n        p += 4\n        q -= 2\nprint(c)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "def fact(n):\n    f = 1\n    for i in range(1, n + 1):\n        f = f * i\n    return f\n\ndef result(p, q):\n    return fact(p) / (fact(p - q) * fact(q))\n(x, n) = map(int, input().split())\nlf = []\nll = []\nc = 0\nfor i in range(n):\n    s = input()\n    for i in range(9):\n        lf.append(s[i * 4:(i + 1) * 4])\n        ll.append(s[9 * 6 - (i + 2 + i):9 * 6 - (i + i)])\nfor i in range(len(lf)):\n    a = lf[i].count('0')\n    b = ll[i].count('0')\n    if a + b >= x:\n        res = result(a + b, x)\n    else:\n        res = 0\n    c = c + res\nprint(int(c))", "def fact(m):\n    r = 1\n    for j in range(2, m + 1):\n        r = r * j\n    return r\n(a, b) = map(int, input().split())\nrus = 0\nfor _ in range(b):\n    s = input()\n    for i in range(9):\n        q = i * 4\n        d = 54 - i * 2\n        p1 = s[q:q + 4].count('0')\n        p2 = s[d - 2:d].count('0')\n        p = p1 + p2\n        if p >= a:\n            rus = rus + fact(p) / (fact(p - a) * fact(a))\nprint(int(rus))", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\nsum = 0\nfor _ in range(n):\n    str = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = str[i:i + 4] + str[j - 2:j]\n        i += 4\n        j -= 2\n        sum += math.comb(l.count('0'), x)\nprint(sum)", "import math\n(x, n) = map(int, input().split())\nc = 0\nfor k in range(n):\n    s = input()\n    i = 1\n    j = 54\n    for _ in range(9):\n        kupe = s[i - 1:i + 3] + s[j - 2:j]\n        c += math.comb(kupe.count('0'), x)\n        i += 4\n        j -= 2\nprint(c)", "def fact(m):\n    r = 1\n    for j in range(2, m + 1):\n        r = r * j\n    return r\n(a, b) = map(int, input().split())\nrus = 0\nfor _ in range(b):\n    s = input()\n    for i in range(9):\n        q = i * 4\n        d = 54 - i * 2\n        p1 = s[q:q + 4].count('0')\n        p2 = s[d - 2:d].count('0')\n        p = p1 + p2\n        if p >= a:\n            rus = rus + fact(p) / (fact(p - a) * fact(a))\nprint(int(rus))", "def fac1(m):\n    r = 1\n    for j in range(2, m + 1):\n        r = r * j\n    return r\n(a, b) = map(int, input().split())\nadi = 0\nfor _ in range(b):\n    s = input()\n    for i in range(9):\n        q = i * 4\n        d = 54 - i * 2\n        p1 = s[q:q + 4].count('0')\n        p2 = s[d - 2:d].count('0')\n        p = p1 + p2\n        if p >= a:\n            adi = adi + fac1(p) / (fac1(p - a) * fac1(a))\nprint(int(adi))", "import math\n(x, n) = map(int, input().split())\nsum = 0\nfor _ in range(n):\n    a = input()\n    i = 0\n    j = 54\n    for __ in range(9):\n        s = a[i:i + 4] + a[j - 2:j]\n        i += 4\n        j -= 2\n        sum += math.comb(s.count('0'), x)\nprint(sum)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "from math import comb\n(X, N) = map(int, input().split())\nop = 0\nfor _ in range(N):\n    S = input()\n    while S:\n        s1 = S[0:4] + S[-2:]\n        vacant = s1.count('0')\n        if vacant >= X:\n            op += comb(vacant, X)\n        S = S[4:-2]\nprint(op)", "import math\n(x, n) = map(int, input().split())\ntotal = 0\nfor i in range(n):\n    places = input()\n    place_count = 0\n    last_place_count = len(places)\n    for i in range(9):\n        total += math.comb((places[place_count:place_count + 4] + places[last_place_count - 2:last_place_count]).count('0'), x)\n        place_count += 4\n        last_place_count -= 2\nprint(total)", "import math\n(x, n) = map(int, input().split())\ntotal = 0\nfor i in range(n):\n    places = input()\n    place_count = 0\n    last_place_count = len(places)\n    for i in range(9):\n        total += math.comb((places[place_count:place_count + 4] + places[last_place_count - 2:last_place_count]).count('0'), x)\n        place_count += 4\n        last_place_count -= 2\nprint(total)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\nsum = 0\nfor _ in range(n):\n    a = input()\n    i = 0\n    j = 54\n    for __ in range(9):\n        s = a[i:i + 4] + a[j - 2:j]\n        i += 4\n        j -= 2\n        sum += math.comb(s.count('0'), x)\nprint(sum)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for _ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math as e\n(x, n) = map(int, input().split())\nli = []\nc = 0\nd = 0\nfor i in range(n):\n    s = input()\n    li.append(list(s))\nfor j in range(n):\n    a = li[j]\n    i = 0\n    t = 54\n    for _ in range(9):\n        m = a[i:i + 4].count('0') + a[t - 2:t].count('0')\n        if m >= x:\n            d += e.factorial(m) // (e.factorial(x) * e.factorial(m - x))\n        i += 4\n        t -= 2\nprint(d)", "import math\n(X, N) = map(int, input().split())\ncount = 0\nfor _ in range(N):\n    seat = input()\n    (i, j) = (0, 54)\n    for _ in range(9):\n        compartment = seat[i:i + 4] + seat[j - 2:j]\n        count += math.comb(compartment.count('0'), X)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(n, x) = map(int, input().split())\nc = 0\ne = 0\nfor j in range(x):\n    s = input()\n    (j, k) = (0, 54)\n    for m in range(9):\n        b = s[j:j + 4] + s[k - 2:k]\n        c += math.comb(b.count('0'), n)\n        j += 4\n        k -= 2\nprint(c)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(X, N) = map(int, input().split())\nc = 0\nfor i in range(N):\n    s = input()\n    (i, j) = (0, 54)\n    for k in range(9):\n        com = s[i:i + 4] + s[j - 2:j]\n        c += math.comb(com.count('0'), X)\n        i += 4\n        j -= 2\nprint(c)", "import math\n(X, N) = map(int, input().split())\ncount = 0\nfor _ in range(N):\n    seat = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        compartment = seat[i:i + 4] + seat[j - 2:j]\n        count += math.comb(compartment.count('0'), X)\n        i += 4\n        j -= 2\nprint(count)", "def nCr(n, r):\n    if r > n:\n        return 0\n    if r == 0 or r == n:\n        return 1\n    return nCr(n - 1, r - 1) + nCr(n - 1, r)\n(x, y) = map(int, input().split())\nc = 0\nfor t in range(y):\n    s = input()\n    z = []\n    a = 0\n    b = 54\n    for i in range(9):\n        z.append(int(s[a:a + 4].count('0') + s[b - 2:b].count('0')))\n        a += 4\n        b -= 2\n    for j in z:\n        if j == x:\n            c += 1\n        elif j > x:\n            c += nCr(j, x)\nprint(int(c))", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(n, x) = map(int, input().split())\nc = 0\ne = 0\nfor j in range(x):\n    s = input()\n    (j, k) = (0, 54)\n    for m in range(9):\n        b = s[j:j + 4] + s[k - 2:k]\n        c += math.comb(b.count('0'), n)\n        j += 4\n        k -= 2\nprint(c)", "import math\n(x, n) = list(map(int, input().split(' ')))\nans = 0\nfor i in range(n):\n    if x > 6:\n        print(0)\n        break\n    ins = []\n    ins.extend(input())\n    for i in range(9):\n        num = 4 * i\n        temp = [ins[num], ins[num + 1], ins[num + 2], ins[num + 3], ins[52 - i * 2], ins[53 - i * 2]]\n        zeros = temp.count('0')\n        if zeros >= x:\n            ans += math.factorial(zeros) / (math.factorial(x) * math.factorial(zeros - x))\nprint(int(ans))", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "def f(n, memo={}):\n    if n <= 2:\n        return n\n    if n in memo:\n        return memo[n]\n    memo[n] = n * f(n - 1, memo)\n    return memo[n]\n\ndef combinations(n, r):\n    return f(n) / (f(r) * f(n - r))\n(x, n) = map(int, input().split())\nans = 0\nfor i in range(n):\n    car = input()\n    w1 = (0, 4)\n    w2 = (52, 54)\n    vacant = 0\n    if x == 1:\n        ans += car.count('0')\n    else:\n        for i in range(9):\n            vacant = car[w1[0]:w1[1]].count('0') + car[w2[0]:w2[1]].count('0')\n            if vacant == x:\n                ans += 1\n            elif vacant >= x:\n                ans += combinations(vacant, x)\n            w1 = (w1[0] + 4, w1[1] + 4)\n            w2 = (w2[0] - 2, w2[1] - 2)\nprint(int(ans))", "def f(n, memo={}):\n    if n <= 2:\n        return n\n    if n in memo:\n        return memo[n]\n    memo[n] = n * f(n - 1, memo)\n    return memo[n]\n\ndef combinations(n, r):\n    return f(n) / (f(r) * f(n - r))\n(x, n) = map(int, input().split())\nans = 0\nfor i in range(n):\n    car = input()\n    w1 = (0, 4)\n    w2 = (52, 54)\n    vacant = 0\n    if x == 1:\n        ans += car.count('0')\n    else:\n        for i in range(9):\n            vacant = car[w1[0]:w1[1]].count('0') + car[w2[0]:w2[1]].count('0')\n            if vacant == x:\n                ans += 1\n            elif vacant >= x:\n                ans += combinations(vacant, x)\n            w1 = (w1[0] + 4, w1[1] + 4)\n            w2 = (w2[0] - 2, w2[1] - 2)\nprint(int(ans))", "from math import comb\n(f, c) = map(int, input().split())\nl = []\nfor i in range(c):\n    l.append(list(input().split()))\nr = []\nfor i in l:\n    for j in i:\n        l2 = list(map(int, list(j)))\n        box = []\n        while len(l2) > 0:\n            cabin = []\n            for i in range(4):\n                cabin.append(l2[0])\n                l2.pop(0)\n            cabin.append(l2[-1])\n            l2.pop(-1)\n            cabin.append(l2[-1])\n            l2.pop(-1)\n            box.append(cabin)\n        r.append(box)\ntrainfree = []\nfor i in r:\n    boxfree = []\n    for j in i:\n        cabinfree = 0\n        for k in j:\n            if k != 1:\n                cabinfree += 1\n        boxfree.append(cabinfree)\n    trainfree.append(boxfree)\ntotaltype = 0\nfor i in trainfree:\n    for j in i:\n        if j >= f:\n            totaltype += comb(j, f)\nprint(totaltype)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ntot = 0\nfor i in range(n):\n    s = input()\n    j = 0\n    k = 54\n    while j < 36:\n        s1 = s[j:j + 4] + s[k - 2:k]\n        j += 4\n        k -= 2\n        if x <= s1.count('0'):\n            tot += math.factorial(s1.count('0')) // (math.factorial(x) * math.factorial(s1.count('0') - x))\nprint(tot)", "import math\n(x, n) = map(int, input().split())\ntot = 0\nfor i in range(n):\n    s = input()\n    j = 0\n    k = 54\n    while j < 36:\n        s1 = s[j:j + 4] + s[k - 2:k]\n        j += 4\n        k -= 2\n        if x <= s1.count('0'):\n            tot += math.factorial(s1.count('0')) // (math.factorial(x) * math.factorial(s1.count('0') - x))\nprint(tot)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ngorb = 0\nfor _ in range(n):\n    a = list(input())\n    (i, j) = (0, 54)\n    for __ in range(9):\n        t = a[i:i + 4] + a[j - 2:j]\n        gorb += math.comb(t.count('0'), x)\n        i += 4\n        j -= 2\nprint(gorb)", "import math\n(x, n) = map(int, input().split())\nc = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        c += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(c)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\nc = 0\nfor _ in range(n):\n    s = input()\n    (k, j) = (0, 54)\n    for __ in range(9):\n        a = s[k:k + 4] + s[j - 2:j]\n        c += math.comb(a.count('0'), x)\n        k += 4\n        j -= 2\nprint(c)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\nc = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        c += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(c)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "from math import factorial as fac\nans = 0\n(X, N) = map(int, input().split())\nfor i in range(N):\n    K = input()\n    s = 54\n    for m in range(0, 9 * 4, 4):\n        free = 0\n        free_2 = 0\n        last_ans = ans\n        for n in range(4):\n            if str(K)[m + n] == '0':\n                free += 1\n                free_2 += 1\n            if free == X:\n                ans += 1\n                free = 0\n        for l in range(2):\n            s -= 1\n            if str(K)[s] == '0':\n                free += 1\n                free_2 += 1\n            if free == X:\n                ans += 1\n                free = 0\n        if free_2 > X:\n            seconds = fac(free_2) / (fac(X) * fac(free_2 - X))\n            if seconds > ans - last_ans:\n                ans = last_ans + int(seconds)\nprint(ans)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "def fact(p):\n    if p == 0 or p == 1:\n        return 1\n    else:\n        return p * fact(p - 1)\n\ndef comb(n, r):\n    if n < r:\n        return 0\n    else:\n        return fact(n) // (fact(r) * fact(n - r))\n(a, b) = map(int, input().strip().split())\nans = 0\nfor e in range(b):\n    l = input()\n    i = 0\n    j = 1\n    for k in range(9):\n        ass = 0\n        for _ in range(4):\n            if l[i] == '0':\n                ass += 1\n            i += 1\n        for _ in range(2):\n            if l[-j] == '0':\n                ass += 1\n            j += 1\n        ans += comb(ass, a)\nprint(ans)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\nc = 0\nfor k in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for k in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        c += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(c)", "from math import factorial as fact\n\ndef combo(n, r):\n    if n < r:\n        return 0\n    return fact(n) // (fact(r) * fact(n - r))\n(x, n) = map(int, input().split(' '))\ntotal = 0\nfor i in range(n):\n    seat = input()\n    front_seat = 0\n    back_seat = 53\n    for j in range(9):\n        no_of_empty_seats = 0\n        for a in range(4):\n            if seat[front_seat] == '0':\n                no_of_empty_seats += 1\n            front_seat += 1\n        for b in range(2):\n            if seat[back_seat] == '0':\n                no_of_empty_seats += 1\n            back_seat -= 1\n        total += combo(no_of_empty_seats, x)\nprint(total)", "import math\nl = [int(i) for i in input().split()]\n(x, n) = l\ncount = 0\nfor i in range(n):\n    s = input()\n    l = [0] * 9\n    sum = 0\n    for i in range(1, 37):\n        if s[i - 1] == '0':\n            sum += 1\n        if i % 4 == 0:\n            l[i // 4 - 1] += sum\n            sum = 0\n    for i in range(37, 55):\n        if s[i - 1] == '0':\n            sum += 1\n        if (54 - i) % 2 == 0:\n            l[(54 - i) // 2] += sum\n            sum = 0\n    for i in l:\n        if i >= x:\n            count += math.factorial(i) / (math.factorial(i - x) * math.factorial(x))\nprint(int(count))", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        count += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(count)", "import math\n(x, n) = list(map(int, input().strip().split()))\nanswer = 0\nfor i in range(n):\n    seat = list(map(int, list(input())))\n    available_seat = [0, 0, 0, 0, 0, 0, 0, 0, 0]\n    start = 0\n    end = 53\n    for z in range(9):\n        count = 0\n        for j in range(start, start + 4):\n            if seat[j] == 0:\n                count += 1\n        for k in range(end, end - 2, -1):\n            if seat[k] == 0:\n                count += 1\n        available_seat[z] = count\n        start += 4\n        end -= 2\n    for i in range(0, 9):\n        if available_seat[i] >= x:\n            answer += math.factorial(available_seat[i]) // (math.factorial(x) * math.factorial(available_seat[i] - x))\nprint(answer)", "import math\ngt = str(input())\ngt = gt.split(' ')\nomtes = int(gt[0])\numi = int(gt[-1])\nop = []\nfor yyn in range(0, umi):\n    op.append(str(input()))\nseats = 0\nfor hhv in op:\n    a = 0\n    b = 4\n    d = 52\n    e = 54\n    der = 0\n    while der < 9:\n        jut = hhv[a:b] + hhv[d:e]\n        loer = 0\n        for pp in jut:\n            if pp == '0':\n                loer += 1\n        if loer >= omtes:\n            if omtes != 1:\n                s = math.comb(loer, omtes)\n                seats += s\n            else:\n                seats += loer\n        der += 1\n        a += 4\n        b += 4\n        d -= 2\n        e -= 2\nprint(seats)", "import math\n(x, n) = map(int, input().split())\nsum = 0\nfor i in range(n):\n    p = input()\n    (l, m) = (0, 54)\n    for j in range(9):\n        a = p[l:l + 4] + p[m - 2:m]\n        sum += math.comb(a.count('0'), x)\n        l += 4\n        m -= 2\nprint(sum)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, n) = map(int, input().split())\ncount = 0\nfor i in range(n):\n    string = input()\n    for i in range(9):\n        string1 = string[i * 4:i * 4 + 4]\n        if i == 0:\n            string2 = string[-1] + string[-2]\n        else:\n            string2 = string[i * -2 - 2:i * -2]\n        dabba = string1 + string2\n        n0 = dabba.count('0')\n        if n0 >= x:\n            count += math.factorial(n0) / (math.factorial(n0 - x) * math.factorial(x))\nprint(int(count))", "def fact(N):\n    factorial = 1\n    if N == 0:\n        return 1\n    for i in range(2, N + 1):\n        factorial *= i\n    return factorial\n\ndef combination(N, r):\n    return fact(N) / (fact(r) * fact(N - r))\n(X, N) = input().split()\n(X, N) = (int(X), int(N))\nways = 0\nfor carNumber in range(N):\n    info = input()\n    for comp in range(9):\n        empty = 0\n        for seat in range(4 * comp, 4 * comp + 4):\n            if info[seat] == '0':\n                empty += 1\n        for seat in range(52 - 2 * comp, 54 - 2 * comp):\n            if info[seat] == '0':\n                empty += 1\n        if empty >= X:\n            ways += combination(empty, X)\nprint(int(ways))", "facto = [1]\nfor i in range(6):\n    facto.append(facto[-1] * (i + 1))\n\ndef split_com(s):\n    free = [0] * 9\n    for i in range(36):\n        free[i // 4] += 1 - int(s[i])\n    for i in range(36, 54):\n        free[8 - (i - 36) // 2] += 1 - int(s[i])\n    return free\n(x, n) = map(int, input().split())\nbooked = []\nfor i in range(n):\n    booked.append(split_com(input()))\nans = 0\nfor i in booked:\n    for j in i:\n        if j >= x:\n            ans += facto[j] // (facto[x] * facto[j - x])\nprint(ans)", "facto = [1]\nfor i in range(6):\n    facto.append(facto[-1] * (i + 1))\n\ndef split_com(s):\n    free = [0] * 9\n    for i in range(36):\n        free[i // 4] += 1 - int(s[i])\n    for i in range(36, 54):\n        free[8 - (i - 36) // 2] += 1 - int(s[i])\n    return free\n(x, n) = map(int, input().split())\nbooked = []\nfor i in range(n):\n    booked.append(split_com(input()))\nans = 0\nfor i in booked:\n    for j in i:\n        if j >= x:\n            ans += facto[j] // (facto[x] * facto[j - x])\nprint(ans)", "import math\n(x, n) = [int(i) for i in input().split()]\narr = []\ncount = 0\nfor n in range(n):\n    s = input()\n    i = 0\n    j = 54\n    for k in range(9):\n        d = str(s[i:i + 4]) + str(s[j - 2:j])\n        if d.count('0') >= x:\n            res = math.comb(d.count('0'), x)\n            count += res\n        i = i + 4\n        j = j - 2\nprint(count)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(xp, n) = list(map(int, input().split()))\na = [input() for i in range(n)]\nc1 = 0\nfor i in range(n):\n    j = 0\n    k = 54\n    while j <= 33:\n        s = a[i][j:j + 4] + a[i][k - 2:k]\n        c1 += math.comb(s.count('0'), xp)\n        j = j + 4\n        k = k - 2\nprint(c1)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        l = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(l.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "import math\n(x, y) = list(map(int, input().split()))\ncnt = 0\ncomb = 0\narr = [0] * 9\nfor i in range(y):\n    s = input()\n    st = 0\n    en = 53\n    for j in range(9):\n        for k in range(st, st + 4):\n            if s[k] == '0':\n                cnt += 1\n        for k in range(en, en - 2, -1):\n            if s[k] == '0':\n                cnt += 1\n        arr[j] = cnt\n        cnt = 0\n        st += 4\n        en -= 2\n    for i in range(0, 9):\n        if arr[i] >= x:\n            comb += math.factorial(arr[i]) // (math.factorial(x) * math.factorial(arr[i] - x))\nprint(comb)", "import math\n(x, n) = list(map(int, input().split()))\na = [input() for i in range(n)]\nc = 0\nfor i in range(n):\n    j = 0\n    k = 54\n    while j <= 33:\n        s = a[i][j:j + 4] + a[i][k - 2:k]\n        c += math.comb(s.count('0'), x)\n        j = j + 4\n        k = k - 2\nprint(c)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nequals = 0\nfor _ in range(n):\n    a = input()\n    (i, j) = (0, 54)\n    for __ in range(9):\n        lst = a[i:i + 4] + a[j - 2:j]\n        counter += math.comb(lst.count('0'), x)\n        i += 4\n        j -= 2\nprint(counter)", "def comb(n, k):\n    if k > n:\n        return 0\n    result = 1\n    for i in range(k):\n        result = result * (n - i) // (i + 1)\n    return result\nt = 1\nfor _ in range(t):\n    (x, n) = map(int, input().split())\n    cnt = 0\n    for i in range(n):\n        a = input()\n        for j in range(9):\n            l = a[j * 4:(j + 1) * 4] + a[54 - (j + 1) * 2:54 - j * 2]\n            cnt += comb(l.count('0'), x)\nprint(cnt)", "import math\n(x, n) = map(int, input().split())\ncounter = 0\nfor _ in range(n):\n    a = input()\n    for i in range(9):\n        lst = a[i * 4:(i + 1) * 4] + a[54 - (i + 1) * 2:54 - i * 2]\n        counter += math.comb(lst.count('0'), x)\nprint(counter)", "def comb(n, k):\n    if k > n:\n        return 0\n    result = 1\n    for i in range(k):\n        result = result * (n - i) // (i + 1)\n    return result\n(x, n) = map(int, input().split())\ncounter = 0\nfor _ in range(n):\n    a = input()\n    for i in range(9):\n        lst = a[i * 4:(i + 1) * 4] + a[54 - (i + 1) * 2:54 - i * 2]\n        counter += comb(lst.count('0'), x)\nprint(counter)", "def comb(n, k):\n    if k > n:\n        return 0\n    result = 1\n    for i in range(k):\n        result = result * (n - i) // (i + 1)\n    return result\n(x, n) = map(int, input().split())\ncounter = 0\nfor _ in range(n):\n    a = input()\n    for i in range(9):\n        lst = a[i * 4:(i + 1) * 4] + a[54 - (i + 1) * 2:54 - i * 2]\n        counter += comb(lst.count('0'), x)\nprint(counter)"]