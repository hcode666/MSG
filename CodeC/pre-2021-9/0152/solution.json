["for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(int(a ** 0.5) * b)", "t = int(input())\nwhile t > 0:\n    (n, a) = map(int, input().split())\n    sq = int(n ** 0.5)\n    print(sq * a)\n    t -= 1", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    sq = int(n ** 0.5)\n    print(sq * a)", "for i in range(int(input())):\n    (n, a) = map(int, input().split())\n    p = 0\n    while p * p <= n:\n        p += 1\n    print(a * (p - 1))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    s = int(a ** 0.5)\n    print(s * b)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    k = 1\n    for i in range(1, a // 2 + 1):\n        if i ** 2 <= a:\n            k = i\n        else:\n            break\n    print(k * b)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    ans = int(math.sqrt(n)) * a\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    ans = int(math.sqrt(n)) * a\n    print(ans)", "from math import *\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = int(sqrt(a)) * b\n    print(c)", "from math import *\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = int(sqrt(a)) * b\n    print(c)", "from math import sqrt\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    print(int(sqrt(n)) * a)", "from math import sqrt\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    s = int(sqrt(n))\n    print(s * a)", "for i in range(int(input())):\n    (n, a) = map(int, input().split())\n    s = int(n ** 0.5)\n    print(s * a)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    sq = int(n ** 0.5)\n    print(sq * a)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    sq = int(n ** 0.5)\n    print(sq * a)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    sq = int(n ** 0.5)\n    print(sq * a)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = math.sqrt(a)\n    d = math.floor(c)\n    print(b * d)", "import math\nT = int(input())\nfor i in range(T):\n    (N, X) = map(int, input().split())\n    a = math.sqrt(N)\n    n = math.floor(a)\n    print(n * X)", "t = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    print(int(pow(n, 0.5)) * a)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    sq = int(n ** 0.5)\n    print(sq * a)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    sq = int(n ** 0.5)\n    print(sq * a)", "import math\nt = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    ans = math.floor(n ** 0.5)\n    print(ans * a)", "import math\nt = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    ans = math.floor(n ** 0.5)\n    print(ans * a)", "for i in range(int(input())):\n    (n, a) = map(int, input().split())\n    c = 0\n    k = n ** 0.5 + 1\n    for i in range(0, int(k)):\n        if i * i <= n:\n            c = i\n    print(c * a)", "import math\nt = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    z = math.floor(n ** 0.5)\n    print(z * a)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    i = 1\n    j = i ** 2\n    while j <= n:\n        i = i + 1\n        j = i ** 2\n    i -= 1\n    print(i * a)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    i = 1\n    j = i ** 2\n    while j <= n:\n        i = i + 1\n        j = i ** 2\n    i -= 1\n    print(i * a)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    sq = int(n ** 0.5)\n    print(sq * a)", "import math\nfor t in range(int(input())):\n    (n, a) = map(int, input().split(' '))\n    m = int(math.sqrt(n))\n    print(m * a)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    sq = int(n ** 0.5)\n    print(sq * a)", "import math\nfor _ in range(int(input())):\n    (n, l) = map(int, input().split())\n    print(math.floor(math.sqrt(n)) * l)", "import math\nt = int(input())\nfor tc in range(t):\n    (n, a) = map(int, input().split())\n    print(int(math.sqrt(n)) * a)", "import math\np = int(input())\nfor i in range(p):\n    (N, A) = list(map(int, input().split()))\n    side_length = math.floor(math.sqrt(N))\n    if p > 0:\n        print(side_length * A)", "import math\np = int(input())\nfor i in range(p):\n    (N, A) = list(map(int, input().split()))\n    side_length = math.floor(math.sqrt(N))\n    if p > 0:\n        print(side_length * A)", "import math\np = int(input())\nfor i in range(p):\n    (N, A) = list(map(int, input().split()))\n    side_length = math.floor(math.sqrt(N))\n    if p > 0:\n        print(side_length * A)", "import math\np = int(input())\nfor i in range(p):\n    (N, A) = list(map(int, input().split()))\n    side_length = math.floor(math.sqrt(N))\n    if p > 0:\n        print(side_length * A)", "import math\np = int(input())\nfor i in range(p):\n    (N, A) = list(map(int, input().split()))\n    side_length = math.floor(math.sqrt(N))\n    if p > 0:\n        print(side_length * A)", "import math\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    print(int(math.sqrt(n)) * a)", "for _ in range(int(input())):\n    (sq, a) = map(int, input().split())\n    n = 1\n    while n * n <= sq:\n        n += 1\n    scount = n - 1\n    print(scount * a)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    i = 1\n    while i * i <= n:\n        i += 1\n    i -= 1\n    print(a * i)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    i = 1\n    while i * i <= n:\n        i += 1\n    i -= 1\n    print(a * i)", "import math\nt = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    print(int(math.sqrt(n)) * a)", "import math\nt = int(input())\nwhile t > 0:\n    (n, a) = map(int, input().split(' '))\n    k = math.floor(math.sqrt(n))\n    print(a * k)\n    t -= 1", "import math\nt = int(input())\nwhile t > 0:\n    (n, a) = map(int, input().split(' '))\n    k = math.floor(math.sqrt(n))\n    print(a * k)\n    t -= 1", "import math\np = int(input())\nwhile p > 0:\n    (n, a) = map(int, input().split(' '))\n    t = math.floor(math.sqrt(n))\n    print(a * t)\n    p -= 1", "import math\np = int(input())\nwhile p > 0:\n    (n, a) = map(int, input().split(' '))\n    t = math.floor(math.sqrt(n))\n    print(a * t)\n    p -= 1", "import math\nt = int(input())\nwhile t > 0:\n    (n, a) = map(int, input().split(' '))\n    k = math.floor(math.sqrt(n))\n    print(a * k)\n    t -= 1", "import math\nt = int(input())\nwhile t > 0:\n    (n, a) = map(int, input().split(' '))\n    k = math.floor(math.sqrt(n))\n    print(a * k)\n    t -= 1", "from math import sqrt\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    b = int(sqrt(n))\n    print(b * a)", "from math import sqrt\nt = int(input())\nwhile t > 0:\n    (n, a) = map(int, input().split(' '))\n    b = int(sqrt(n))\n    print(b * a)\n    t = t - 1", "def solve():\n    mul = 0\n    i = 1\n    while i * i <= n:\n        mul = i\n        i += 1\n    return a * mul\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    print(solve())", "for _ in range(int(input())):\n    [n, a] = map(int, input().split())\n    print(int(n ** 0.5) * a)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    [n, a] = map(int, sys.stdin.readline().split())\n    sys.stdout.write(str(int(n ** 0.5) * a) + '\\n')", "import math\nt = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    x = int(math.sqrt(n))\n    print(x * a)", "import math\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    res = int(math.sqrt(n))\n    print(res * a)", "import math\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    res = int(math.sqrt(n))\n    print(res * a)", "t = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    for i in range(1, n + 1):\n        if i * i > n:\n            print((i - 1) * a)\n            break\n        elif i * i == n:\n            print(i * a)\n            break", "T = int(input())\nfor _ in range(T):\n    (n, a) = map(int, input().split())\n    for i in range(1, n + 1):\n        if i * i > n:\n            print((i - 1) * a)\n            break\n        elif i * i == n:\n            print(i * a)\n            break", "import math\n\ndef func(num):\n    sr = round(math.sqrt(num), 1)\n    l = str(sr).split('.')\n    if l[-1] == '0':\n        return num\n    else:\n        return func(num - 1)\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    if n < 4:\n        print(a)\n    else:\n        print(int(func(n) ** 0.5) * a)", "import math\n\ndef dtype(n):\n    x = round(math.sqrt(n), 1)\n    y = str(x).split('.')\n    if y[-1] == '0':\n        return n\n    else:\n        return dtype(n - 1)\nt = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    if n < 4:\n        print(a)\n    else:\n        b = dtype(n)\n        print(int(math.sqrt(b)) * a)", "for i in range(int(input())):\n    a = [int(x) for x in input().split()]\n    for j in range(1, 100000000):\n        x = j * j\n        if a[0] < x:\n            print(a[1] * (j - 1))\n            break", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    for i in range(1, n + 1):\n        if i * i > n:\n            print((i - 1) * a)\n            break\n        elif i * i == n:\n            print(i * a)\n            break", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    for i in range(1, n + 1):\n        if i * i > n:\n            print((i - 1) * a)\n            break\n        elif i * i == n:\n            print(i * a)\n            break", "t = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    for i in range(1, n + 1):\n        if i * i > n:\n            print((i - 1) * a)\n            break\n        elif i * i == n:\n            print(i * a)\n            break", "t = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    for i in range(1, n + 1):\n        if i * i > n:\n            print((i - 1) * a)\n            break\n        elif i * i == n:\n            print(i * a)\n            break", "import math\nfor i in range(0, int(input())):\n    (N, A) = map(int, input().split())\n    n = int(math.sqrt(N))\n    print(n * A)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    print(int(n ** (1 / 2)) * a)", "import math\nfor _ in range(int(input())):\n    (n, l) = map(int, input().split())\n    print(math.floor(math.sqrt(n)) * l)", "import math\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    print(math.floor(math.sqrt(n)) * a)", "import math\nT = int(input())\nfor i in range(T):\n    (N, A) = map(int, input().split())\n    print(math.floor(math.sqrt(N)) * A)", "import os, sys, io, math\nfrom re import *\nfrom math import *\nfrom array import *\nfrom heapq import *\nfrom bisect import *\nfrom functools import *\nfrom itertools import *\nfrom statistics import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIP = lambda : map(int, input().split())\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    (n, r) = IP()\n    print(r * int(sqrt(n)))", "import math\nfor _ in range(int(input())):\n    (n, l) = map(int, input().split())\n    print(int(math.sqrt(n)) * l)", "for j in range(int(input())):\n    (n, a) = map(int, input().split())\n    for i in range(n + 1):\n        if i * i == n:\n            print(i * a)\n            break\n        elif i * i > n:\n            print((i - 1) * a)\n            break", "import math\nt = int(input())\nfor _ in range(t):\n    (n, a) = map(int, input().split())\n    x = math.floor(math.sqrt(n))\n    print(a * x)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    z = int(n ** 0.5) * a\n    print(z)", "from math import sqrt\nfor _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    x = int(sqrt(N))\n    print(x * A)", "from math import sqrt\nfor _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    x = int(sqrt(N))\n    print(x * A)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    count1 = 1\n    pre = 1\n    count2 = 1\n    u = 0\n    if n == 0:\n        print(0)\n    else:\n        while count1 != 0:\n            count = count2\n            v = pre + 2\n            pre = v\n            count2 += v\n            if n >= count:\n                count = count2\n                u += 1\n            else:\n                count1 = 0\n    print(a * u)", "t = int(input())\nwhile t:\n    (n, x) = map(int, input().split())\n    print(int(n ** (1 / 2)) * x)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, x) = map(int, input().split())\n    print(int(n ** (1 / 2)) * x)\n    t -= 1", "from math import sqrt\nt = int(input())\nwhile t:\n    (n, x) = map(int, input().split())\n    print(int(sqrt(n)) * x)\n    t -= 1", "for t in range(int(input())):\n    (n, a) = list(map(int, input().split()))\n    b = int(n ** 0.5)\n    print(a * b)", "for _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    print(int(N ** 0.5) * A)", "import math\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    if n < 4:\n        print(a)\n    else:\n        c = math.floor(math.sqrt(n))\n        print(c * a)", "for _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    print(int(n ** 0.5) * a)", "import math\nt = int(input())\nfor i in range(t):\n    (n, a) = map(int, input().split())\n    print(a * math.floor(math.sqrt(n)))", "import math\nfor k in range(int(input())):\n    (n, a) = map(int, input().split())\n    t = int(math.sqrt(n)) * a\n    print(t)", "import math\nfor i in range(int(input())):\n    (n, a) = map(int, input().split())\n    t = int(math.sqrt(n)) * a\n    print(t)", "from math import sqrt\nn = int(input())\nfor i in range(n):\n    (a, b) = list(map(int, input().split()))\n    c = int(sqrt(a))\n    print(c * b)", "from math import sqrt\nn = int(input())\nfor i in range(n):\n    (a, b) = list(map(int, input().split()))\n    c = int(sqrt(a))\n    print(c * b)", "from math import sqrt\nt = int(input())\nwhile t > 0:\n    (n, a) = map(int, input().split(' '))\n    b = int(sqrt(n))\n    print(b * a)\n    t = t - 1", "from math import sqrt\nt = int(input())\nfor i in range(t):\n    (N, A) = map(int, input().split())\n    B = int(sqrt(N))\n    print(B * A)", "import math\nt = int(input())\nfor i in range(t):\n    (n, a) = list(map(int, input().split()))\n    x = math.sqrt(n) // 1\n    print(int(x * a))\n    t = t - 1", "import math\nt = int(input())\nwhile t > 0:\n    x = input().split(' ')\n    n = int(x[0])\n    a = int(x[1])\n    temp = math.sqrt(n) // 1\n    print(int(temp * a))\n    t = t - 1", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = math.floor(a ** 0.5)\n    print(x * b)", "import math\nfor _ in range(int(input())):\n    (n, l) = map(int, input().split())\n    print(math.floor(math.sqrt(n)) * l)", "import math\nfor T in range(int(input())):\n    (n, a) = map(int, input().split())\n    print(math.floor(math.sqrt(n)) * a)", "import math\nfor o in range(int(input())):\n    (n, a) = list(map(int, input().split()))\n    sqrtN = int(math.sqrt(n))\n    print(sqrtN * a)", "for _ in range(int(input())):\n    (N, A) = map(int, input().split())\n    max = 1\n    for i in range(1, N + 1):\n        if i * i > max and i * i <= N:\n            max = i\n    print(A * max)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    k = math.floor(math.sqrt(a))\n    print(k * b)"]