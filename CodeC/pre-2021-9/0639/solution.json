["ncr = [[0 for i in range(0, 1001)] for j in range(0, 1001)]\nmod = 1000000007\n\ndef init():\n    for i in range(1, 1001):\n        ncr[i][1] = i\n        ncr[i][i] = 1\n    for i in range(3, 1001):\n        for j in range(2, i):\n            ncr[i][j] = (ncr[i - 1][j - 1] + ncr[i - 1][j]) % mod\ninit()\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    ans = 0\n    cards = input()\n    a = n // 2 + 1\n    for i in range(a, n + 1):\n        ans = (ans + ncr[n][i]) % mod\n    print(ans)\n    t -= 1", "ncr = [[0 for i in range(0, 1001)] for j in range(0, 1001)]\nmod = 1000000007\n\ndef init():\n    for i in range(1, 1001):\n        ncr[i][1] = i\n        ncr[i][i] = 1\n    for i in range(3, 1001):\n        for j in range(2, i):\n            ncr[i][j] = (ncr[i - 1][j - 1] + ncr[i - 1][j]) % mod\ninit()\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    ans = 0\n    cards = input()\n    a = n // 2 + 1\n    for i in range(a, n + 1):\n        ans = (ans + ncr[n][i]) % mod\n    print(ans)\n    t -= 1", "ncr = [[0 for i in range(0, 1001)] for j in range(0, 1001)]\nmod = 1000000007\n\ndef init():\n    for i in range(1, 1001):\n        ncr[i][1] = i\n        ncr[i][i] = 1\n    for i in range(3, 1001):\n        for j in range(2, i):\n            ncr[i][j] = (ncr[i - 1][j - 1] + ncr[i - 1][j]) % mod\ninit()\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    ans = 0\n    cards = input()\n    a = n // 2 + 1\n    for i in range(a, n + 1):\n        ans = (ans + ncr[n][i]) % mod\n    print(ans)\n    t -= 1", "ncr = [[0 for i in range(0, 1001)] for j in range(0, 1001)]\nmod = 1000000007\n\ndef init():\n    for i in range(1, 1001):\n        ncr[i][1] = i\n        ncr[i][i] = 1\n    for i in range(3, 1001):\n        for j in range(2, i):\n            ncr[i][j] = (ncr[i - 1][j - 1] + ncr[i - 1][j]) % mod\ninit()\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    ans = 0\n    cards = input()\n    a = n // 2 + 1\n    for i in range(a, n + 1):\n        ans = (ans + ncr[n][i]) % mod\n    print(ans)\n    t -= 1", "mod = int(1000000000.0) + 7\nnn = 1005\nfac = [0] * nn\nfac[0] = 1\nfor i in range(1, nn):\n    fac[i] = fac[i - 1] * i\n    fac[i] %= mod\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    if n % 2 == 1:\n        end = n // 2 + 1\n    else:\n        end = n // 2\n    for i in range(end):\n        num = fac[n]\n        den = fac[n - i] * fac[i]\n        den %= mod\n        inv = pow(den, mod - 2, mod)\n        ans += num * inv % mod\n        ans %= mod\n    print(ans)", "mod = int(1000000000.0) + 7\nnn = 1005\nfac = [0] * nn\nfac[0] = 1\nfor i in range(1, nn):\n    fac[i] = fac[i - 1] * i\n    fac[i] %= mod\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    if n % 2 == 1:\n        end = n // 2 + 1\n    else:\n        end = n // 2\n    for i in range(end):\n        num = fac[n]\n        den = fac[n - i] * fac[i]\n        den %= mod\n        inv = pow(den, mod - 2, mod)\n        ans += num * inv % mod\n        ans %= mod\n    print(ans)", "mod = int(1000000000.0) + 7\nnn = 1005\nfac = [0] * nn\nfac[0] = 1\nfor i in range(1, nn):\n    fac[i] = fac[i - 1] * i\n    fac[i] %= mod\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    if n % 2 == 1:\n        end = n // 2 + 1\n    else:\n        end = n // 2\n    for i in range(end):\n        num = fac[n]\n        den = fac[n - i] * fac[i]\n        den %= mod\n        inv = pow(den, mod - 2, mod)\n        ans += num * inv % mod\n        ans %= mod\n    print(ans)", "ncr = [[0 for i in range(0, 1001)] for j in range(0, 1001)]\nmod = 1000000007\n\ndef init():\n    for i in range(1, 1001):\n        ncr[i][1] = i\n        ncr[i][i] = 1\n    for i in range(3, 1001):\n        for j in range(2, i):\n            ncr[i][j] = (ncr[i - 1][j - 1] + ncr[i - 1][j]) % mod\ninit()\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    ans = 0\n    cards = input()\n    a = n // 2 + 1\n    for i in range(a, n + 1):\n        ans = (ans + ncr[n][i]) % mod\n    print(ans)\n    t -= 1", "from math import factorial\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    data = input()\n    total = pow(2, n)\n    if n % 2 == 1:\n        count = total // 2\n    else:\n        p = factorial(n) // pow(factorial(n / 2), 2)\n        count = (total - p) // 2\n    print(count % 1000000007)", "def num(n):\n    out = 1\n    for i in range(n - n // 2 + 1, n + 1):\n        out *= i\n    return out\n\ndef den(n):\n    out = 1\n    for i in range(1, n // 2 + 1):\n        out *= i\n    return out\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    data = input()\n    total = pow(2, n)\n    if n % 2 == 1:\n        count = total // 2\n    else:\n        p = num(n) // den(n)\n        count = (total - p) // 2\n    print(count % 1000000007)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    input()\n    ans = 1 << n - 1\n    if n % 2 == 0:\n        fac = math.factorial(n / 2)\n        ans = ans - math.factorial(n) // (fac * fac * 2)\n    print(int(ans) % 1000000007)"]