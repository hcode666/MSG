["t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = float('inf')\n    for i in a:\n        v = 0\n        while i & 1 == 0:\n            i //= 2\n            v += 1\n        ans = min(ans, v)\n        if v == 0:\n            break\n    print(ans)", "import sys\ntc = int(input().strip())\nfor t in range(tc):\n    n = int(input().strip())\n    arr = list(map(int, input().split()))\n    operations = sys.maxsize\n    for i in arr:\n        if i % 2 == 1:\n            operations = 0\n            break\n        else:\n            temp = 0\n            while i % 2 != 1:\n                i = i // 2\n                temp += 1\n            operations = min(temp, operations)\n    print(operations)", "def find(g):\n    u = 0\n    while g > 1:\n        if g % 2 == 1:\n            return u\n        else:\n            g = g // 2\n            u += 1\n    return u\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = 1100000000000001\n    for i in range(n):\n        if find(a[i]) < r:\n            r = find(a[i])\n    print(r)", "import sys\ntc = int(input().strip())\nfor t in range(tc):\n    n = int(input().strip())\n    arr = list(map(int, input().split()))\n    operations = sys.maxsize\n    for i in arr:\n        if i % 2 == 1:\n            operations = 0\n            break\n        else:\n            temp = 0\n            while i % 2 != 1:\n                i = i // 2\n                temp += 1\n            operations = min(temp, operations)\n    print(operations)", "import sys\ntc = int(input().strip())\nfor t in range(tc):\n    n = int(input().strip())\n    arr = list(map(int, input().split()))\n    operations = sys.maxsize\n    for i in arr:\n        if i % 2 == 1:\n            operations = 0\n            break\n        else:\n            temp = 0\n            while i % 2 != 1:\n                i = i // 2\n                temp += 1\n            operations = min(temp, operations)\n    print(operations)", "T = int(input())\nwhile T > 0:\n    n = int(input())\n    ls = list(map(int, input().split()))\n    maxo = 100000000\n    for i in range(len(ls)):\n        if ls[i] % 2 == 1:\n            maxo = 0\n        else:\n            count = 0\n            while ls[i] % 2 == 0:\n                count += 1\n                ls[i] = ls[i] / 2\n            maxo = min(count, maxo)\n    print(maxo)\n    T = T - 1", "T = int(input())\nwhile T > 0:\n    n = int(input())\n    ls = list(map(int, input().split()))\n    maxo = 100000000\n    for i in range(len(ls)):\n        if ls[i] % 2 == 1:\n            maxo = 0\n        else:\n            count = 0\n            while ls[i] % 2 == 0:\n                count += 1\n                ls[i] = ls[i] / 2\n            maxo = min(count, maxo)\n    print(maxo)\n    T = T - 1", "T = int(input())\nwhile T > 0:\n    n = int(input())\n    ls = list(map(int, input().split()))\n    maxo = 100000000\n    for i in range(len(ls)):\n        if ls[i] % 2 == 1:\n            maxo = 0\n        else:\n            count = 0\n            while ls[i] % 2 == 0:\n                count += 1\n                ls[i] = ls[i] / 2\n            maxo = min(count, maxo)\n    print(maxo)\n    T = T - 1", "T = int(input())\nwhile T > 0:\n    n = int(input())\n    ls = list(map(int, input().split()))\n    maxo = 100000000\n    for i in range(len(ls)):\n        if ls[i] % 2 == 1:\n            maxo = 0\n        else:\n            count = 0\n            while ls[i] % 2 == 0:\n                count += 1\n                ls[i] = ls[i] / 2\n            maxo = min(count, maxo)\n    print(maxo)\n    T = T - 1", "from math import ceil\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    count = 0\n    while s == 0:\n        for i in range(n):\n            if a[i] % 2 == 1:\n                s = 1\n                break\n            else:\n                a[i] = ceil(a[i] / 2)\n        count += 1\n    print(count - 1)", "from math import ceil\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    count = 0\n    while s == 0:\n        for i in range(n):\n            if a[i] % 2 == 1:\n                s = 1\n                break\n            else:\n                a[i] = ceil(a[i] / 2)\n        count += 1\n    print(count - 1)", "from math import ceil\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    count = 0\n    while s == 0:\n        for i in range(n):\n            if a[i] % 2 == 1:\n                s = 1\n                break\n            else:\n                a[i] = ceil(a[i] / 2)\n        count += 1\n    print(count - 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in l:\n        if i % 2 != 0:\n            ans = 1\n    if ans == 0:\n        res = 1000000000.0\n        for i in range(len(l)):\n            ans = 0\n            while l[i] % 2 != 1:\n                l[i] /= 2\n                ans += 1\n            if ans < res:\n                res = ans\n        print(res)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in l:\n        if i % 2 != 0:\n            ans = 1\n    if ans == 0:\n        res = 1000000000.0\n        for i in range(len(l)):\n            ans = 0\n            while l[i] % 2 != 1:\n                l[i] /= 2\n                ans += 1\n            if ans < res:\n                res = ans\n        print(res)\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = []\n    for j in l:\n        count = 0\n        while j % 2 == 0:\n            j = j / 2\n            count = count + 1\n        m.append(count)\n    print(min(m))", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    T = []\n    for i in A:\n        t = i\n        op = 0\n        while t % 2 == 0:\n            t = t // 2\n            op += 1\n        T.append(op)\n    print(min(T))", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    T = []\n    for i in A:\n        t = i\n        op = 0\n        while t % 2 == 0:\n            t = t // 2\n            op += 1\n        T.append(op)\n    print(min(T))", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = int(1000000000.0)\n    for el in arr:\n        x = 0\n        while el % 2 == 0:\n            el = el // 2\n            x += 1\n        ans = min(ans, x)\n    print(ans)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    mi = 9999999\n    p = 0\n    for i in l:\n        if i % 2 != 0:\n            print(0)\n            p = 1\n            break\n        else:\n            c = 0\n            k = i\n            while k % 2 == 0:\n                k = k // 2\n                c += 1\n            if c < mi:\n                mi = c\n    if p == 0:\n        print(mi)", "for i in range(int(input())):\n    n = int(input())\n    A = [int(k) for k in input().split()]\n    e = []\n    o = []\n    for k in A:\n        if k % 2 == 0:\n            e.append(k)\n        else:\n            o.append(k)\n    if o != []:\n        print(0)\n    else:\n        c = 0\n        ANS = n\n        for k in range(n):\n            s = e[k]\n            c = 0\n            while s % 2 != 1:\n                s //= 2\n                c += 1\n            ANS = min(ANS, c)\n        print(ANS)", "def check_for_odds(arr):\n    ans = 100\n    for i in range(len(arr)):\n        if arr[i] % 2 == 1:\n            ans = 0\n            break\n    return ans\n\ndef divide_by_2(arr):\n    for i in range(len(arr)):\n        arr[i] = arr[i] / 2\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    counter = 0\n    while check_for_odds(arr) != 0:\n        divide_by_2(arr)\n        counter = counter + 1\n    print(counter)", "def check_for_odds(arr):\n    ans = 100\n    for i in range(len(arr)):\n        if arr[i] % 2 == 1:\n            ans = 0\n            break\n    return ans\n\ndef divide_by_2(arr):\n    for i in range(len(arr)):\n        arr[i] = arr[i] / 2\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    counter = 0\n    while check_for_odds(arr) != 0:\n        divide_by_2(arr)\n        counter = counter + 1\n    print(counter)", "def oddGCD(arr):\n    for i in range(len(arr)):\n        count = 0\n        temp = arr[i]\n        while temp % 2 == 0:\n            temp /= 2\n            count += 1\n        if i == 0 or count < ans:\n            ans = count\n    return ans\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(oddGCD(arr))", "def make_odd(n):\n    c = 0\n    while n & 1 != 1:\n        c = c + 1\n        n = n >> 1\n    return c\nfor l in range(int(input())):\n    input()\n    arr = [int(a) for a in input().split()]\n    op = float('inf')\n    for l in arr:\n        op = min(op, make_odd(l))\n    print(op)", "from math import gcd\n\ndef make_odd(n):\n    c = 0\n    while n & 1 != 1:\n        c = c + 1\n        n = n >> 1\n    return c\nfor l in range(int(input())):\n    input()\n    arr = [int(a) for a in input().split()]\n    g = arr[0]\n    for i in range(1, len(arr)):\n        g = gcd(g, arr[i])\n    if g & 1 == 1:\n        print(0)\n    else:\n        op = float('inf')\n        for l in arr:\n            op = min(op, make_odd(l))\n        print(op)", "t = int(input())\nwhile t:\n    n = int(input())\n    ls = [int(i) for i in input().split(' ')]\n    mCount = 10 ** 9\n    odd = 0\n    for i in range(n):\n        if ls[i] & 1:\n            odd += 1\n    if odd == 0:\n        for i in range(n):\n            count = 0\n            if ls[i] % 2 == 0:\n                while ls[i] % 2 == 0:\n                    count += 1\n                    ls[i] //= 2\n                mCount = min(mCount, count)\n        print(mCount)\n    else:\n        print(0)\n    t -= 1", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    t = l[0]\n    ct = 0\n    for i in range(1, len(l)):\n        t = gcd(t, l[i])\n    if t % 2 != 0:\n        print(0)\n    else:\n        while t != 1:\n            t = t // 2\n            ct += 1\n        print(ct)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    c = 99999999999\n    for i in lst:\n        t = 0\n        while i % 2 == 0:\n            i = i // 2\n            t += 1\n        c = min(c, t)\n    print(c)", "def oddgcd(arr):\n    for i in range(len(arr)):\n        count = 0\n        temp = arr[i]\n        while temp % 2 == 0:\n            temp /= 2\n            count += 1\n        if i == 0 or count < ans:\n            ans = count\n    return ans\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(oddgcd(arr))", "def oddGCD(arr):\n    for i in range(len(arr)):\n        count = 0\n        temp = arr[i]\n        while temp % 2 == 0:\n            temp /= 2\n            count += 1\n        if i == 0 or count < ans:\n            ans = count\n    return ans\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(oddGCD(arr))", "import math\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    n1 = l[0]\n    n2 = l[1]\n    g = gcd(n1, n2)\n    for i in range(2, len(l)):\n        g = gcd(g, l[i])\n    r = math.log(g, 2)\n    print(int(r))", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = l[0]\n    for i in l[1:]:\n        g = gcd(g, i)\n    c = 0\n    while g // 2 ** c % 2 == 0:\n        c += 1\n    print(c)", "from math import gcd\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    step = []\n    for i in a:\n        ct = 0\n        while i % 2 == 0:\n            ct += 1\n            i //= 2\n        step.append(ct)\n    ans = min(step)\n    print(ans)", "from math import gcd\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    step = []\n    for i in a:\n        ct = 0\n        while i % 2 == 0:\n            ct += 1\n            i //= 2\n        step.append(ct)\n    ans = min(step)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = 0\n    for i in range(len(l)):\n        c = 0\n        t = l[i]\n        while t % 2 == 0:\n            t = t // 2\n            c += 1\n        if a > c or i == 0:\n            a = c\n    print(a)", "def number2(a):\n    result = 0\n    while a % 2 == 0:\n        result += 1\n        a //= 2\n    return result\nfor i in range(int(input())):\n    n = int(input())\n    res = 32\n    listx = list(map(int, input().split()))\n    for i in range(n):\n        prov = number2(listx[i])\n        if prov < res:\n            res = prov\n    print(res)", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = arr[0]\n    for i in range(1, n):\n        b = arr[i]\n        a = gcd(a, b)\n    c = 0\n    while a % 2 == 0:\n        a = a / 2\n        c += 1\n    print(c)\n    t -= 1", "from math import gcd\n\ndef help(n):\n    c = 0\n    while n % 2 == 0:\n        n = n // 2\n        c += 1\n    return c\n\ndef pro(arr):\n    n = len(arr)\n    x = arr[0]\n    ans = help(arr[0])\n    for i in range(1, n):\n        x = gcd(x, arr[i])\n        ans = min(ans, help(arr[i]))\n    print(ans)\nn = int(input())\nfor i in range(n):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    pro(arr)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    odd_count = 0\n    for i in arr:\n        if i % 2 != 0:\n            odd_count += 1\n    if odd_count > 0:\n        print(0)\n    else:\n        ans = 0\n        odd_count = 0\n        flag = True\n        while flag:\n            odd_count += 1\n            for i in range(n):\n                arr[i] = arr[i] // 2\n                if arr[i] % 2 != 0:\n                    print(odd_count)\n                    flag = False\n                    break", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    op = 0\n    while count == 0:\n        for i in range(n):\n            if a[i] % 2 != 0:\n                count += 1\n                break\n        else:\n            op += 1\n            for i in range(n):\n                a[i] = int(a[i] / 2)\n    print(op)", "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef checkmin(l):\n    m = []\n    for i in l:\n        cnt = 0\n        while i % 2 == 0:\n            i //= 2\n            cnt += 1\n        m.append(cnt)\n    return min(m)\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = l[0]\n    for i in range(1, n):\n        ans = gcd(l[i], ans)\n    if ans & 1 == 1:\n        print(0)\n    else:\n        print(checkmin(l))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ll = []\n    for i in l:\n        if i % 2 != 0:\n            ll.append(0)\n        if i % 2 == 0:\n            c = 0\n            while i % 2 == 0:\n                i = i // 2\n                c += 1\n            ll.append(c)\n    print(min(ll))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    op = 0\n    while c == 0:\n        for i in range(n):\n            if a[i] % 2 != 0:\n                c += 1\n                break\n        else:\n            op += 1\n            for i in range(n):\n                a[i] = int(a[i] / 2)\n    print(op)", "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef checkmin(l):\n    m = []\n    for i in l:\n        cnt = 0\n        while i % 2 == 0:\n            i //= 2\n            cnt += 1\n        m.append(cnt)\n    return min(m)\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = l[0]\n    for i in range(1, n):\n        ans = gcd(l[i], ans)\n    if ans & 1 == 1:\n        print(0)\n    else:\n        print(checkmin(l))", "T = int(input())\nj = 0\nwhile j < T:\n    N = int(input())\n    temp = input().split()\n    times = None\n    for i in range(N):\n        num = int(temp[i])\n        t = 0\n        while True:\n            if num % 2 == 1:\n                break\n            else:\n                num = num // 2\n                t += 1\n        if times is None:\n            times = t\n        elif t < times:\n            times = t\n    print(times)\n    j += 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    op = 0\n    while count == 0:\n        for i in range(n):\n            if a[i] % 2 != 0:\n                count += 1\n                break\n        else:\n            op += 1\n            for i in range(n):\n                a[i] = int(a[i] / 2)\n    print(op)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    op = 0\n    while count == 0:\n        for i in range(n):\n            if a[i] % 2 != 0:\n                count += 1\n                break\n        else:\n            op += 1\n            for i in range(n):\n                a[i] = int(a[i] / 2)\n    print(op)", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\ninf = 10 ** 20\n\ndef op(x):\n    y = x\n    a = 0\n    while y % 2 == 0:\n        y //= 2\n        a += 1\n    return a\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = +inf\n    for i in range(n):\n        cur_element = l[i]\n        ans = min(ans, op(cur_element))\n    print(ans)", "def fun(x):\n    c = 0\n    if x == 2:\n        return 1\n    while x % 2 == 0 and x > 0:\n        x = x // 2\n        c += 1\n    return c\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    m = 10000000000\n    b = 0\n    d = 0\n    for x in a:\n        if x % 2 == 0:\n            d = fun(x)\n            if d < m:\n                m = d\n        else:\n            b = 1\n            break\n    if b == 1:\n        print(0)\n    else:\n        print(m)", "test_cases = int(input())\nfor itr in range(test_cases):\n    n = int(input())\n    allEven = True\n    array = list(map(int, input().split()))\n    temporary = list()\n    for i in array:\n        if i % 2:\n            allEven = False\n            print(0)\n            break\n        else:\n            c = 0\n            while i % 2 == 0:\n                c += 1\n                i /= 2\n            temporary.append(c)\n    if allEven:\n        print(min(temporary))", "for _ in range(int(input())):\n    a = input()\n    count = 0\n    num = list(map(int, input().split()))\n    while all((e % 2 == 0 for e in num)):\n        num = [j // 2 for j in num]\n        count += 1\n    print(count)", "try:\n    t = int(input())\n    for i in range(t):\n        z = int(input())\n        a = list(map(int, input().split()))\n        count = 0\n        cnt = 0\n        sheela = True\n        while sheela:\n            for j in range(len(a)):\n                if a[j] % 2 == 0:\n                    a[j] = int(a[j] / 2)\n                    cnt += 1\n                else:\n                    sheela = False\n            if cnt == len(a):\n                count += 1\n                cnt = 0\n        print(count)\nexcept:\n    pass", "def funcx(n, l1):\n    import math\n    g = lambda a, b: math.gcd(a, b)\n    curr = g(2 ** 29, l1[0])\n    if curr == 1:\n        return 0\n    else:\n        for i in range(1, n):\n            curr = g(curr, l1[i])\n            if curr == 1:\n                break\n        if curr == 1:\n            return 0\n        else:\n            return int(math.log(curr, 2))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = [int(i) for i in input().split()]\n    print(funcx(n, l1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for j in range(n):\n        if l[j] % 2 != 0:\n            c = 1\n            break\n    if c == 1:\n        print(0)\n    else:\n        s = 123456789123456789\n        for k in range(n):\n            ans = 0\n            while l[k] % 2 != 1:\n                l[k] = l[k] // 2\n                ans += 1\n            if ans < s:\n                s = ans\n        print(s)", "import math\nfrom fractions import gcd\nfrom functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n\n    def find_gcd(list):\n        x = reduce(gcd, list)\n        return x\n    if find_gcd(ls) & 1:\n        print('0')\n    else:\n        m = 1000000000.0\n        for i in range(n):\n            c = 0\n            while ls[i] % 2 != 1:\n                ls[i] = ls[i] // 2\n                c += 1\n            m = min(m, c)\n        print(m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    res = 0\n    for i in range(n):\n        if a[i] % 2 != 0:\n            res = 1\n            break\n    if res == 1:\n        print(0)\n    else:\n        m = 1000000000.0\n        for i in range(n):\n            c = 0\n            while a[i] % 2 != 1:\n                a[i] = a[i] // 2\n                c += 1\n            if c < m:\n                m = c\n        print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    ans = 0\n    for j in a:\n        if j % 2 != 0:\n            ans = 1\n    if ans == 0:\n        r = 1000000000\n        for k in range(n):\n            ans = 0\n            while a[k] % 2 == 0:\n                a[k] //= 2\n                ans += 1\n            if ans < r:\n                r = ans\n        print(r)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = 555555\n    for i in l:\n        c = 0\n        while i % 2 == 0:\n            i = i / 2\n            c = c + 1\n        a = min(c, a)\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        count = 0\n        temp = arr[i]\n        while temp % 2 == 0:\n            temp = temp / 2\n            count += 1\n        if i == 0 or count < ans:\n            ans = count\n    print(ans)", "def find(n):\n    count = 0\n    while n > 0 and n % 2 != 1:\n        count += 1\n        n //= 2\n    return count\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    e = 0\n    o = 0\n    m = 100000000000000\n    for i in l:\n        if i % 2 == 1:\n            o += 1\n        else:\n            m = min(m, find(i))\n            e += 1\n    if o == 0:\n        print(m)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in l:\n        if i % 2 == 1:\n            ans = 1\n            break\n    if ans == 0:\n        res = 1000000000.0\n        for i in range(len(l)):\n            ans = 0\n            while l[i] % 2 == 0:\n                l[i] /= 2\n                ans += 1\n            if ans < res:\n                res = ans\n        print(res)\n    else:\n        print(0)", "for _ in range(int(input())):\n    a = input()\n    cnt = 0\n    num = list(map(int, input().split()))\n    while all((e % 2 == 0 for e in num)):\n        num = [j // 2 for j in num]\n        cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in l:\n        if i % 2 != 0:\n            ans = 1\n    if ans == 0:\n        res = 1000000000.0\n        for i in range(len(l)):\n            ans = 0\n            while l[i] % 2 != 1:\n                l[i] /= 2\n                ans += 1\n            if ans < res:\n                res = ans\n        print(res)\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    while 1:\n        f = 1\n        for i in l:\n            if i % 2 != 0:\n                f = 0\n                break\n        if f == 0:\n            break\n        else:\n            ans += 1\n            for i in range(n):\n                l[i] //= 2\n    print(ans)", "try:\n    for _ in range(int(input())):\n\n        def solution():\n            N = int(input())\n            A = list(input().split())\n            for i in range(N):\n                A[i] = int(A[i])\n            for i in range(N):\n                if A[i] % 2 != 0:\n                    return 0\n            n = 0\n            while True:\n                for i in range(N):\n                    A[i] = A[i] / 2\n                n += 1\n                for i in range(N):\n                    if A[i] % 2 != 0:\n                        return n\n        print(solution())\nexcept:\n    pass", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(len(arr)):\n        count = 0\n        while arr[i] % 2 == 0:\n            arr[i] /= 2\n            count += 1\n        if i == 0 or count < ans:\n            ans = count\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    ans = max(l)\n    for i in range(len(l)):\n        a = l[i]\n        c = 0\n        while a > 1:\n            if a & 1:\n                break\n            else:\n                c = c + 1\n            a = a >> 1\n        if c < ans:\n            ans = c\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    best = 10 ** 9\n    for i in range(n):\n        cnt = 0\n        temp = a[i]\n        while temp % 2 == 0:\n            temp //= 2\n            cnt += 1\n        best = min(cnt, best)\n    print(best)", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    c = 1\n    m = []\n    for i in l:\n        if i % 2 != 0:\n            print(0)\n            c = 0\n            break\n    if c == 1:\n        for i in l:\n            d = 0\n            while i % 2 == 0 and i > 1:\n                i = i // 2\n                d += 1\n            m.append(d)\n        print(min(m))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    l = []\n    for i in a:\n        c = 0\n        while i % 2 == 0:\n            c += 1\n            i = i // 2\n        l.append(c)\n    print(min(l))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sol = 10 ** 9\n    for i in arr:\n        count = 0\n        while i % 2 == 0:\n            count += 1\n            i = i // 2\n        if i == 0 or count < sol:\n            sol = count\n    print(sol)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = input().split(' ')\n    for j in range(n):\n        arr[j] = int(arr[j])\n    ans = 0\n    while 1:\n        tmp = True\n        for j in range(n):\n            if arr[j] % 2 != 0:\n                tmp = False\n                break\n            arr[j] = int(arr[j] / 2)\n        if tmp == False:\n            print(ans)\n            break\n        ans += 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in l:\n        if i % 2 != 0:\n            ans = 1\n    if ans == 0:\n        res = 1000000000.0\n        for i in range(len(l)):\n            ans = 0\n            while l[i] % 2 != 1:\n                l[i] /= 2\n                ans += 1\n            if ans < res:\n                res = ans\n        print(res)\n    else:\n        print(0)", "def rightside1(x):\n    count = 0\n    while x & 1 == 0:\n        count += 1\n        x = x >> 1\n    return count\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    M = float('inf')\n    for i in range(n):\n        k = rightside1(a[i])\n        M = min(M, k)\n    print(M)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in l:\n        if i % 2 != 0:\n            ans = 1\n    if ans == 0:\n        res = 1000000000.0\n        for i in range(len(l)):\n            ans = 0\n            while l[i] % 2 != 1:\n                l[i] /= 2\n                ans += 1\n            if ans < res:\n                res = ans\n        print(res)\n    else:\n        print(0)", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = arr[0]\n    for i in range(n):\n        x = gcd(arr[i], x)\n    cnt = 0\n    if x % 2 == 0:\n        while x % 2 == 0:\n            cnt += 1\n            x //= 2\n        y = cnt\n    else:\n        y = 0\n    print(y)", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = arr[0]\n    for i in range(n):\n        x = gcd(arr[i], x)\n    cnt = 0\n    if x % 2 == 0:\n        while x % 2 == 0:\n            cnt += 1\n            x //= 2\n        y = cnt\n    else:\n        y = 0\n    print(y)", "from math import gcd, log, ceil, floor\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = arr[0]\n    for i in range(n):\n        x = gcd(arr[i], x)\n    cnt = 0\n    if x % 2 == 0:\n        while x % 2 == 0:\n            cnt += 1\n            x //= 2\n        y = cnt\n    else:\n        y = 0\n    print(y)", "import math\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    ans = math.inf\n    for i in arr:\n        c = 0\n        while i % 2 == 0:\n            i = i / 2\n            c += 1\n        ans = min(ans, c)\n    print(ans)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "t = int(input())\narr = []\nwhile t > 0:\n    t = t - 1\n    ans = 0\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    for i in range(len(arr)):\n        count = 0\n        temp = arr[i]\n        while temp % 2 == 0:\n            temp = temp / 2\n            count += 1\n        if i == 0 or count < ans:\n            ans = count\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    m = int(input())\n    ls = list(map(int, input().split()))\n    for i in range(m):\n        c = 0\n        temp = ls[i]\n        while temp % 2 == 0:\n            temp = temp // 2\n            c = c + 1\n        if i == 0 or c < mn:\n            mn = c\n    print(mn)", "def mapIn():\n    return map(int, input().split())\n\ndef listIn():\n    return list(map(int, input().split()))\n\ndef intIn():\n    return int(input())\nintMax = float('inf')\nintMin = float('-inf')\nd4x = [1, -1, 0, 0]\nd4y = [0, 0, 1, -1]\nd8x = [1, -1, 0, 0, -1, -1, 1, 1]\nd8y = [0, 0, 1, -1, -1, 1, -1, 1]\n\ndef solve():\n    n = intIn()\n    ar = listIn()\n    ans = 0\n    s = 0\n    for i in ar:\n        cnt = 0\n        while not i & 1:\n            i = i // 2\n            cnt += 1\n        if s == 0 or cnt < ans:\n            ans = cnt\n        s += 1\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "def mapIn():\n    return map(int, input().split())\n\ndef listIn():\n    return list(map(int, input().split()))\nintMax = float('inf')\nintMin = float('-inf')\nd4x = [1, -1, 0, 0]\nd4y = [0, 0, 1, -1]\nd8x = [1, -1, 0, 0, -1, -1, 1, 1]\nd8y = [0, 0, 1, -1, -1, 1, -1, 1]\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef solve():\n    n = int(input())\n    ar = listIn()\n    g = ar[0]\n    if ar[0] & 1:\n        print(0)\n        return\n    ans = 0\n    for i in ar:\n        if i & 1 == 1:\n            print(0)\n            return\n        g = gcd(g, i)\n    while not g & 1:\n        g = g // 2\n        ans += 1\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nfor _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    for i in b:\n        if i % 2 == 1:\n            print(0)\n            break\n    else:\n        b.sort()\n        g = b[0]\n        for i in range(1, a):\n            g = gcd(g, b[i])\n        x = 0\n        while g % 2 == 0:\n            g = g // 2\n            x += 1\n        print(x)", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if 1 in a:\n        print(0)\n        continue\n    for i in range(n):\n        if a[i] % 2 == 1:\n            print(0)\n            break\n    else:\n        g = a[0]\n        for i in range(1, n):\n            g = gcd(g, a[i])\n        x = 0\n        while g % 2 == 0:\n            g = g // 2\n            x += 1\n        print(x)", "def inInt():\n    return int(input())\n\ndef inIntList():\n    return map(int, input().split())\n\ndef outList(lst):\n    for data in lst:\n        print(data)\n\ndef outListList(lst):\n    for data in lst:\n        print(*data)\n\ndef solveA():\n    result = ['Too Early', 'Too Late', 'Take second dose now']\n    for _ in range(inInt()):\n        (X, Y, Z) = inIntList()\n        ans.append('YES' if X + 2 * Z >= Y else 'NO')\n\ndef solveB():\n    for _ in range(inInt()):\n        (x, y) = inIntList()\n        ans.append('NO' if abs(x - y) % 2 else 'YES')\n\ndef solveC():\n    num = list(range(1, 10 ** 5 + 1))\n    for _ in range(inInt()):\n        (n, k) = inIntList()\n        if n == k:\n            ans.append(num[:n])\n        elif n - k == 1:\n            ans.append([-1])\n        else:\n            ans.append(num[:k] + [n] + num[k:n - 1])\n\ndef solveD():\n    for _ in range(inInt()):\n        N = inInt()\n        A = inIntList()\n        ans.append(min((bin(a)[2:][::-1].find('1') for a in A)))\nans = []\nsolveD()\noutList(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    t = []\n    c = float('inf')\n    for i in l:\n        x = bin(i).replace('0b', '')\n        c = min(c, len(x) - len(x.rstrip('0')))\n    c = 0 if c == float('inf') else c\n    print(c)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    odd = 0\n    mini = 100000000000000\n    for i in range(n):\n        if l[i] % 2 != 0:\n            odd += 1\n    if odd > 0:\n        print(0)\n    else:\n        for i in range(n):\n            count = 0\n            while l[i] % 2 == 0:\n                count += 1\n                l[i] = l[i] // 2\n            mini = min(mini, count)\n        print(mini)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        count = 0\n        temp = array[i]\n        while temp % 2 == 0:\n            temp /= 2\n            count += 1\n        if i == 0 or count < ans:\n            ans = count\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    yo = False\n    x = 0\n    while 1:\n        for i in range(n):\n            if l[i] % 2 == 1:\n                print(x)\n                yo = True\n                break\n        for i in range(n):\n            l[i] //= 2\n        x += 1\n        if yo:\n            break", "def inIntList():\n    return [int(x) for x in input().split()]\n\ndef inInt():\n    return int(input())\n\ndef outList(lst):\n    for data in lst:\n        print(data)\n\ndef outListList(lst):\n    for data in lst:\n        print(*data)\n\ndef solveA():\n    result = ['Too Early', 'Too Late', 'Take second dose now']\n    for _ in range(inInt()):\n        (X, Y, Z) = inIntList()\n        ans.append('YES' if X + 2 * Z >= Y else 'NO')\n\ndef solveB():\n    for _ in range(inInt()):\n        (x, y) = inIntList()\n        ans.append('NO' if abs(x - y) % 2 else 'YES')\n\ndef solveC():\n    num = list(range(1, 10 ** 5 + 1))\n    for _ in range(inInt()):\n        (n, k) = inIntList()\n        if n == k:\n            ans.append(num[:n])\n        elif n - k == 1:\n            ans.append([-1])\n        else:\n            ans.append(num[:k] + [n] + num[k:n - 1])\n\ndef solveD():\n    for _ in range(inInt()):\n        N = inInt()\n        A = inIntList()\n        mn = 30\n        for a in A:\n            mn = min(mn, bin(a)[2:][::-1].find('1'))\n            if not mn:\n                break\n        ans.append(mn)\nans = []\nsolveD()\noutList(ans)", "from math import floor\nt = int(input())\nfor we in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    k = count = 0\n    flag = 1\n    for j in l:\n        if j % 2 == 1:\n            flag = 0\n            break\n    if flag != 0:\n        for i in l:\n            while i % 2 == 0:\n                k += 1\n                i = floor(i / 2)\n            if count == 0:\n                ans = k\n                count = 1\n            if k < ans:\n                ans = k\n            k = 0\n    if flag == 0:\n        print(0)\n    else:\n        print(ans)", "def inIntList():\n    return [int(x) for x in input().split()]\n\ndef inInt():\n    return int(input())\n\ndef outList(lst):\n    for data in lst:\n        print(data)\n\ndef outListList(lst):\n    for data in lst:\n        print(*data)\n\ndef solveA():\n    result = ['Too Early', 'Too Late', 'Take second dose now']\n    for _ in range(inInt()):\n        (X, Y, Z) = inIntList()\n        ans.append('YES' if X + 2 * Z >= Y else 'NO')\n\ndef solveB():\n    for _ in range(inInt()):\n        (x, y) = inIntList()\n        ans.append('NO' if abs(x - y) % 2 else 'YES')\n\ndef solveC():\n    num = list(range(1, 10 ** 5 + 1))\n    for _ in range(inInt()):\n        (n, k) = inIntList()\n        if n == k:\n            ans.append(num[:n])\n        elif n - k == 1:\n            ans.append([-1])\n        else:\n            ans.append(num[:k] + [n] + num[k:n - 1])\n\ndef solveD():\n    for _ in range(inInt()):\n        N = inInt()\n        A = inIntList()\n        mn = 30\n        for a in A:\n            mn = min(mn, bin(a)[2:][::-1].find('1'))\n            if not mn:\n                break\n        ans.append(mn)\nans = []\nsolveD()\noutList(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    x = math.gcd(li[0], li[1])\n    for i in range(2, n):\n        x = math.gcd(x, li[i])\n    c = 0\n    while x % 2 == 0:\n        x = x // 2\n        c += 1\n    print(c)"]