["from itertools import groupby\nfrom operator import itemgetter\nM = 2 ** 17\nB = [0] * (M + 1)\n\ndef reset():\n    global B\n    B = [0] * (M + 1)\n\ndef update(idx, val):\n    idx += 1\n    while idx <= M:\n        B[idx] += val\n        idx += idx & -idx\n\ndef read(idx):\n    r = 0\n    idx += 1\n    while idx > 0:\n        r += B[idx]\n        idx -= idx & -idx\n    return r\nfor _ in range(int(input())):\n    (N, Q) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    q = [[0, i] + [int(x) for x in input().split()] for i in range(Q)]\n    groups = []\n    i = 0\n    for (g, (_, l)) in enumerate(groupby(a)):\n        j = i\n        gc = len(groups)\n        for _ in l:\n            a[j] = gc\n            j += 1\n        groups.append([1, gc, i, j - 1, j - i])\n        i = j\n    reset()\n    q.extend(groups)\n    q.sort(key=itemgetter(4, 0), reverse=True)\n    for x in q:\n        if x[0]:\n            update(x[1], 1)\n        else:\n            (y, z) = (a[x[2] - 1] + 1, a[x[3] - 1] - 1)\n            r = read(z) - read(y - 1) if z >= y else 0\n            if z + 1 == y - 1:\n                if x[3] - x[2] + 1 >= x[4]:\n                    r += 1\n            else:\n                if groups[y - 1][3] - x[2] + 1 + 1 >= x[4]:\n                    r += 1\n                if x[3] - 1 - groups[z + 1][2] + 1 >= x[4]:\n                    r += 1\n            x[-1] = r\n    for x in sorted((x for x in q if x[0] == 0)):\n        print(x[-1])"]