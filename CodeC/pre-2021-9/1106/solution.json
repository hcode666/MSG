["T = int(input())\nmod = 10 ** 9 + 7\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))[:N]\n    B = {}\n    for i in range(N):\n        B[A[i]] = i\n    newresult = [0] * N\n    A.sort()\n    for i in range(N):\n        index = B[A[i]]\n        value = (pow(2, i, mod) - 1 + pow(2, i, mod) * (N - i - 1) % mod + pow(2, i, mod) * ((N - i - 1) * (N - i - 2)) // 2 % mod) % mod\n        newresult[index] = value\n    print(*newresult)", "T = int(input())\nmod = 10 ** 9 + 7\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))[:N]\n    B = {}\n    for i in range(N):\n        B[A[i]] = i\n    newresult = [0] * N\n    A.sort()\n    for i in range(N):\n        index = B[A[i]]\n        value = (pow(2, i, mod) - 1 + pow(2, i, mod) * (N - i - 1) % mod + pow(2, i, mod) * ((N - i - 1) * (N - i - 2)) // 2 % mod) % mod\n        newresult[index] = value\n    print(*newresult)", "mod = pow(10, 9) + 7\nt = int(input())\nfor t1 in range(0, t):\n    n = int(input())\n    ans = [0] * n\n    l = list(map(int, input().split()))\n    a = []\n    for i in range(0, n):\n        a.append((l[i], i))\n    a.sort()\n    for i in range(0, n):\n        j = a[i][1]\n        temp = (pow(2, i, mod) - 1) % mod + pow(2, i, mod) * (n - i - 1) % mod + pow(2, i, mod) * ((n - i - 1) * (n - i - 2)) // 2 % mod\n        ans[j] = temp % mod\n    print(*ans)", "mod = pow(10, 9) + 7\nt = int(input())\nfor t1 in range(0, t):\n    n = int(input())\n    ans = [0] * n\n    l = list(map(int, input().split()))\n    a = []\n    for i in range(0, n):\n        a.append((l[i], i))\n    a.sort()\n    for i in range(0, n):\n        j = a[i][1]\n        temp = pow(2, i, mod) - 1 + pow(2, i, mod) * (n - i - 1) + pow(2, i, mod) * ((n - i - 1) * (n - i - 2)) // 2\n        ans[j] = temp % mod\n    print(*ans)", "mod = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = [[A[i], i] for i in range(N)]\n    B.sort()\n    ans = [0 for i in range(N)]\n    for i in range(N):\n        ind = B[i][1]\n        val = (pow(2, i, mod) - 1 + pow(2, i, mod) * (N - i - 1) % mod + pow(2, i, mod) * ((N - i - 1) * (N - i - 2) // 2) % mod) % mod\n        ans[ind] = val\n    print(*ans)", "mod = 10 ** 9 + 7\n\ndef fp(a, b):\n    ans = 1\n    while b > 0:\n        if b & 1:\n            ans = ans * a % mod\n        b >>= 1\n        a = a * a % mod\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    pair = list(enumerate(arr))\n    pair.sort(key=lambda x: x[1])\n    ans = [0] * n\n    for i in range(n):\n        s = 0\n        a = n - i - 1\n        b = a * (a + 1) // 2\n        p = fp(2, i)\n        s = (s + p - 1) % mod\n        s = (s + b * p % mod) % mod\n        ans[pair[i][0]] = s\n    print(' '.join(map(str, ans)))", "import sys\nmod = 10 ** 9 + 7\nmd = 998244353\ninput = lambda : sys.stdin.readline().strip()\ninp = lambda : list(map(int, sys.stdin.readline().strip().split()))\n\ndef C(n, r, mod):\n    if r > n:\n        return 0\n    num = den = 1\n    for i in range(r):\n        num = num * (n - i) % mod\n        den = den * (i + 1) % mod\n    return num * pow(den, mod - 2, mod) % mod\nfor _ in range(int(input())):\n    (n,) = inp()\n    a = [[int(i), j] for (i, j) in zip(input().split(), range(n))]\n    a = sorted(a, key=lambda x: x[0])\n    ans = [0] * n\n    for i in range(n):\n        res1 = C(n - i - 1, 2, mod) + n - i - 1\n        res2 = pow(2, i, mod) - 1\n        ans[a[i][1]] = (res1 * res2 + res2 + res1) % mod\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [(a[i], i) for i in range(n)]\n    b.sort()\n    mod = int(1000000000.0) + 7\n    count = [0 for i in range(n)]\n    for i in range(n):\n        c = b[i][1]\n        value = (pow(2, i, mod) - 1 + pow(2, i, mod) * (n - i - 1) + pow(2, i, mod) * ((n - i - 1) * (n - i - 2) // 2) % mod) % mod\n        count[c] = value\n    print(*count)", "mod = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = [[A[i], i] for i in range(N)]\n    B.sort()\n    ans = [0 for i in range(N)]\n    for i in range(N):\n        ind = B[i][1]\n        val = (pow(2, i, mod) - 1 + pow(2, i, mod) * (N - i - 1) % mod + pow(2, i, mod) * ((N - i - 1) * (N - i - 2) // 2) % mod) % mod\n        ans[ind] = val\n    print(*ans)", "import math\nimport sys\nfrom collections import defaultdict as df\n\ndef ini():\n    return int(sys.stdin.readline())\n\ndef inp():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef li():\n    return list(map(int, sys.stdin.readline().strip().split()))\nmod = 10 ** 9 + 7\n\ndef power(x, y, p=mod):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\nfor _ in range(ini()):\n    n = ini()\n    l = li()\n    d = {}\n    for i in range(n):\n        d[l[i]] = i\n    m = [0 for i in range(n)]\n    j = 0\n    l.sort()\n    for i in range(n):\n        x = n - i - 1\n        m[d[l[i]]] = power(2, i) * ((x * (x - 1) // 2 + x + 1) % mod) % mod - 1\n    print(*m)", "import math\nimport sys\nfrom collections import defaultdict as df\n\ndef ini():\n    return int(sys.stdin.readline())\n\ndef inp():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef li():\n    return list(map(int, sys.stdin.readline().strip().split()))\nmod = 10 ** 9 + 7\n\ndef power(x, y, p=mod):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\nfor _ in range(ini()):\n    n = ini()\n    l = li()\n    d = {}\n    for i in range(n):\n        d[l[i]] = i\n    m = [0 for i in range(n)]\n    j = 0\n    l.sort()\n    for i in range(n):\n        x = n - i - 1\n        m[d[l[i]]] = power(2, i) * ((x * (x - 1) // 2 + x + 1) % mod) % mod - 1\n    print(*m)", "import sys\ninput = sys.stdin.readline\n(inp, ip) = (lambda : int(input()), lambda : [int(w) for w in input().split()])\nM = 10 ** 9 + 7\nfor _ in range(inp()):\n    n = inp()\n    x = ip()\n    ind = {x[i]: i for i in range(n)}\n    x.sort()\n    ans = [0] * n\n    for i in range(n):\n        ans[ind[x[i]]] = (pow(2, i, M) * ((n - i) * (n - i - 1) // 2 + 1) - 1) % M\n    print(*ans)", "import sys\ninput = sys.stdin.readline\n(inp, ip) = (lambda : int(input()), lambda : [int(w) for w in input().split()])\nM = 10 ** 9 + 7\nfor _ in range(inp()):\n    n = inp()\n    x = ip()\n    ind = {x[i]: i for i in range(n)}\n    x.sort()\n    ans = [0] * n\n    for i in range(n):\n        p = pow(2, i, M)\n        ans[ind[x[i]]] = (p - 1 + p * ((n - i) * (n - i - 1) // 2)) % M\n    print(*ans)", "mod = 1000000007\n\ndef fun(n):\n    ans = 1\n    val = 2\n    while n > 0:\n        if n & 1:\n            ans = val * ans % mod\n        n = n >> 1\n        val = val * val % mod\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[:]\n    a = sorted(a, reverse=True)\n    d = {}\n    for i in range(n):\n        ans = 0\n        val = (fun(n - i - 1) - 1) % mod\n        ans += val\n        if i > 0:\n            ans = (ans + i * (val + 1)) % mod\n        if i > 1:\n            ans = (ans + i * (i - 1) // 2 % mod * (val + 1)) % mod\n        d[a[i]] = ans\n    for i in range(n):\n        print(d[b[i]], end=' ')", "def ncr(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = num * (n - i) % p\n        den = den * (i + 1) % p\n    return num * pow(den, p - 2, p) % p\ninput = __import__('sys').stdin.readline\nmod = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = sorted(a)\n    result = {}\n    for i in range(n):\n        if n - 1 - i > 2:\n            result[p[i]] = pow(2, i, mod) - 1\n            qqq = ncr(n - 1 - i, 2, mod) + n - 1 - i\n            result[p[i]] += result[p[i]] * qqq % mod\n            result[p[i]] += qqq\n        else:\n            result[p[i]] = pow(2, i + min(2, n - 1 - i), mod) - 1\n    ans = []\n    for j in a:\n        ans.append(result[j] % mod)\n    print(*ans)", "val = 1000000007\ndicti = {}\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    m = [[l[x], x] for x in range(n)]\n    m.sort(reverse=True)\n    if n - 1 not in dicti:\n        dicti[n - 1] = pow(2, n - 1, val)\n    if n <= 3:\n        ans = [dicti[n - 1] - 1] * n\n    else:\n        ans = [0] * n\n        ans[m[0][1]] = dicti[n - 1] - 1\n        ans[m[1][1]] = dicti[n - 1] - 1\n        ans[m[2][1]] = dicti[n - 1] - 1\n    cnt = 3\n    for i in range(3, n):\n        if n - cnt - 1 not in dicti:\n            dicti[n - cnt - 1] = pow(2, n - cnt - 1, val)\n        ans[m[i][1]] = ((dicti[n - cnt - 1] % val - 1) % val + (cnt * (cnt - 1) // 2 % val + cnt) % val * dicti[n - cnt - 1] % val) % val\n        cnt += 1\n    print(*ans)", "from collections import defaultdict\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = a[:]\n    a.sort(reverse=True)\n    j = n - 1\n    z = defaultdict(lambda : 0)\n    for i in a:\n        z[i] = j\n        j -= 1\n    for i in b:\n        print((pow(2, z[i], mod) * (n - z[i] + (n - 1 - z[i]) * (n - 2 - z[i]) // 2) - 1) % mod, end=' ')\n    print()", "import sys\nimport math\nfrom collections import defaultdict, Counter\ninput = sys.stdin.readline\nmod = pow(10, 9) + 7\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = sorted(b, reverse=True)\n    ans = {}\n    for j in range(n):\n        if j <= 1:\n            ans[a[j]] = (pow(2, n - 1, mod) - 1 + mod) % mod\n        else:\n            cur = pow(2, n - j - 1, mod)\n            ans[a[j]] = (cur - 1 + mod) % mod\n            ad = j * (j + 1) // 2 * cur % mod\n            ans[a[j]] = (ans[a[j]] + ad) % mod\n    for j in range(n):\n        print(ans[b[j]], end=' ')\n    print()", "from collections import defaultdict\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = a[:]\n    a.sort(reverse=True)\n    j = n - 1\n    z = defaultdict(lambda : [0, 0])\n    for i in a:\n        z[i] = j\n        j -= 1\n    for i in b:\n        print((pow(2, z[i], mod) * (n - z[i] + (n - 1 - z[i]) * (n - 2 - z[i]) // 2) - 1) % mod, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[:]\n    b.sort()\n    d = {}\n    mod = 1000000007\n    for i in range(n):\n        y = i\n        x = n - y - 1\n        mul = 1\n        if x > 1:\n            mul = mul * x * (x - 1) // 2 + x\n        if x == 0:\n            mul = 0\n        mul1 = pow(2, y, mod)\n        d[b[i]] = (mul * mul1 % mod + mul1 - 1) % mod\n    for i in range(n):\n        k = a[i]\n        print(d[k], end=' ')\n    print('')", "def power(x, y, p):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\nm = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = list()\n    a.append([0, 0])\n    for i in range(n):\n        a.append([b[i], i + 1])\n    a.sort()\n    res = [0] * (n + 1)\n    for i in range(1, n + 1):\n        ans = 0\n        z = power(2, i - 1, m)\n        ans = (ans + z - 1) % m\n        ans = (ans + z * (n - i)) % m\n        ans = (ans + z * ((n - i) * (n - i - 1)) // 2) % m\n        res[a[i][1]] = ans\n    for i in range(1, n + 1):\n        print(res[i], end=' ')\n    print()", "import sys\ninput = sys.stdin.readline\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\ndef main():\n    mod = 1000000007\n    pow2 = []\n    c = 1\n    for i in range(100001):\n        pow2.append(c)\n        c *= 2\n        c %= mod\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        d = {}\n        for i in range(n):\n            d[a[i]] = i\n        ans = [0] * n\n        a.sort()\n        for i in range(n):\n            rem = n - i - 1\n            ans[d[a[i]]] = (pow2[i] * ((rem * (rem - 1) // 2 + rem + 1) % mod) % mod - 1 + mod) % mod\n        print(*ans)\n    return\nmain()", "from operator import itemgetter\nmodulo = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    speed = list(map(int, input().split()))\n    array = [(speed[i], i) for i in range(n)]\n    array.sort(key=itemgetter(0))\n    sol = [0] * n\n    molt = 1\n    for i in range(n):\n        if i > 0:\n            molt *= 2\n            molt %= modulo\n        if i == n - 2:\n            sol[array[i][1]] = (molt * (n - i) - 1) % modulo\n        elif i == n - 1:\n            sol[array[i][1]] = (molt - 1) % modulo\n        else:\n            appo = ((n - i - 1) * (n - i - 2) >> 1) % modulo\n            sol[array[i][1]] = (molt * (n - i + appo) - 1) % modulo\n    print(' '.join([str(i) for i in sol]))"]