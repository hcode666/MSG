["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    a1 = 0\n    m = (A[0] + B[0]) % n\n    for i in range(1, n):\n        b = (A[0] + B[i]) % n\n        if m > b:\n            m = b\n            a1 = i\n    a2 = -1\n    for i in range(0, n):\n        if (A[0] + B[i]) % n == m and i != a1:\n            a2 = i\n            break\n    B *= 2\n    C = []\n    for i in range(n):\n        C.append((A[i] + B[i + a1]) % n)\n    if a2 == -1:\n        print(*C)\n    else:\n        D = []\n        for i in range(n):\n            D.append((A[i] + B[i + a2]) % n)\n        if D < C:\n            print(*D)\n        else:\n            print(*C)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    a1 = 0\n    m = (A[0] + B[0]) % n\n    for i in range(1, n):\n        b = (A[0] + B[i]) % n\n        if m > b:\n            m = b\n            a1 = i\n    a2 = -1\n    for i in range(0, n):\n        if (A[0] + B[i]) % n == m and i != a1:\n            a2 = i\n            break\n    B *= 2\n    C = []\n    for i in range(n):\n        C.append((A[i] + B[i + a1]) % n)\n    if a2 == -1:\n        print(*C)\n    else:\n        D = []\n        for i in range(n):\n            D.append((A[i] + B[i + a2]) % n)\n        if D < C:\n            print(*D)\n        else:\n            print(*C)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    r = n\n    f = 0\n    i1 = 0\n    i2 = 0\n    for j in range(n):\n        if (a[0] + b[j]) % n <= r:\n            if (a[0] + b[j]) % n == r:\n                i2 = j\n                f = 1\n            else:\n                i1 = j\n                r = (a[0] + b[j]) % n\n                f = 0\n    l1 = []\n    l2 = []\n    for k in range(n):\n        l1.append((a[k] + b[(k + i1) % n]) % n)\n        l2.append((a[k] + b[(k + i2) % n]) % n)\n    if f == 1:\n        if l1 < l2:\n            for z in range(n):\n                if z == n - 1:\n                    print(l1[z])\n                else:\n                    print(l1[z], end=' ')\n        else:\n            for z in range(n):\n                if z == n - 1:\n                    print(l2[z])\n                else:\n                    print(l2[z], end=' ')\n    else:\n        for z in range(n):\n            if z == n - 1:\n                print(l1[z])\n            else:\n                print(l1[z], end=' ')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    r = n\n    f = 0\n    i1 = 0\n    i2 = 0\n    for j in range(n):\n        if (a[0] + b[j]) % n <= r:\n            if (a[0] + b[j]) % n == r:\n                i2 = j\n                f = 1\n            else:\n                i1 = j\n                r = (a[0] + b[j]) % n\n                f = 0\n    l1 = []\n    l2 = []\n    for k in range(n):\n        l1.append((a[k] + b[(k + i1) % n]) % n)\n        l2.append((a[k] + b[(k + i2) % n]) % n)\n    if f == 1:\n        if l1 < l2:\n            for z in range(n):\n                if z == n - 1:\n                    print(l1[z])\n                else:\n                    print(l1[z], end=' ')\n        else:\n            for z in range(n):\n                if z == n - 1:\n                    print(l2[z])\n                else:\n                    print(l2[z], end=' ')\n    else:\n        for z in range(n):\n            if z == n - 1:\n                print(l1[z])\n            else:\n                print(l1[z], end=' ')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    rem = n\n    flag = 0\n    ind1 = 0\n    ind2 = 0\n    for i in range(n):\n        if (a[0] + b[i]) % n <= rem:\n            if (a[0] + b[i]) % n == rem:\n                ind2 = i\n                flag = 1\n            else:\n                ind1 = i\n                rem = (a[0] + b[i]) % n\n                flag = 0\n    l1 = []\n    l2 = []\n    for j in range(n):\n        l1.append((a[j] + b[(j + ind1) % n]) % n)\n        l2.append((a[j] + b[(j + ind2) % n]) % n)\n    if flag == 1:\n        if l1 < l2:\n            for k in range(n):\n                if k == n - 1:\n                    print(l1[k])\n                else:\n                    print(l1[k], end=' ')\n        else:\n            for k in range(n):\n                if k == n - 1:\n                    print(l2[k])\n                else:\n                    print(l2[k], end=' ')\n    else:\n        for k in range(n):\n            if k == n - 1:\n                print(l1[k])\n            else:\n                print(l1[k], end=' ')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    k = a[0]\n    cam = n + 1\n    for i in range(n):\n        if (b[i] + k) % n <= cam:\n            cam = (b[i] + k) % n\n            z = i\n    if b[z] <= n:\n        new = b[z] + n\n        if new in b:\n            x = b.index(new)\n        else:\n            x = z\n    else:\n        new = b[z] - n\n        if new in b:\n            x = b.index(new)\n        else:\n            x = z\n    if x == z:\n        for ele in a:\n            print((ele + b[z]) % n, end=' ')\n            z += 1\n            if z >= n:\n                z = 0\n    else:\n        s = []\n        p = []\n        for ele in a:\n            s.append((ele + b[z]) % n)\n            p.append((ele + b[x]) % n)\n            z += 1\n            if z >= n:\n                z = 0\n            x += 1\n            if x >= n:\n                x = 0\n        if s < p:\n            print(*s)\n        else:\n            print(*p)", "try:\n    for t in range(int(input())):\n        N = int(input())\n        A = list(map(int, input().split()))\n        B = list(map(int, input().split()))\n        C = []\n        small = 1e+18\n        array = []\n        for i in range(N):\n            if (B[i] + A[0]) % N < small:\n                small = (B[i] + A[0]) % N\n        for i in range(N):\n            if (B[i] + A[0]) % N == small:\n                array.append(i)\n        for i in range(len(array)):\n            C.append([])\n            y = list(B)\n            for j in range(array[i]):\n                x = y.pop(0)\n                y.append(x)\n            for r in range(N):\n                C[i].append((y[r] + A[r]) % N)\n        minimum = min(C)\n        for num in minimum:\n            print(num, end=' ')\n        print('')\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    h = []\n    (ck, m) = (999999, 999999)\n    for i in range(n):\n        ck = a[0] + b[i]\n        ck = ck % n\n        m = min(ck, m)\n    for i in range(n):\n        ck = a[0] + b[i]\n        ck = ck % n\n        if ck == m:\n            h.append(i)\n    if len(h) == 1:\n        a1 = h[0]\n        pk = 0\n        for j in range(a1, n):\n            print((a[pk] + b[j]) % n, end=' ')\n            pk += 1\n        for j in range(a1):\n            print((a[pk] + b[j]) % n, end=' ')\n            pk += 1\n    else:\n        a5 = []\n        a6 = []\n        a1 = h[0]\n        pk = 0\n        for j in range(a1, n):\n            a5.append((a[pk] + b[j]) % n)\n            pk += 1\n        for j in range(a1):\n            a5.append((a[pk] + b[j]) % n)\n            pk += 1\n        a1 = h[1]\n        pk = 0\n        for j in range(a1, n):\n            a6.append((a[pk] + b[j]) % n)\n            pk += 1\n        for j in range(a1):\n            a6.append((a[pk] + b[j]) % n)\n            pk += 1\n        if a5 < a6:\n            print(*a5)\n        else:\n            print(*a6)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = []\n    loop = range(n)\n    for i in a:\n        vmin = 2 * n + 1\n        idx = []\n        for j in loop:\n            x = (i + b[j]) % n\n            if x < vmin:\n                vmin = x\n                idx = []\n            if x == vmin:\n                idx.append((j + 1) % n)\n        ans.append(vmin)\n        loop = idx\n    print(*ans)", "def app(A, B, s):\n    k = []\n    for i in range(N):\n        k.append((A[i] + B[i]) % N)\n    s.append(k)\n\ndef cout(arr):\n    for i in range(N):\n        print(arr[i], '', end='')\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    m = (A[0] + B[0]) % N\n    for i in range(N):\n        if m > (A[0] + B[i]) % N:\n            m = (A[0] + B[i]) % N\n    i1 = -1\n    i2 = -1\n    for i in range(N):\n        if m == (A[0] + B[i]) % N:\n            if i1 == -1:\n                i1 = i\n            else:\n                i2 = i\n    k1 = B[i1:] + B[:i1]\n    if i2 != -1:\n        k2 = B[i2:] + B[:i2]\n    s = []\n    app(A, k1, s)\n    if i2 != -1:\n        app(A, k2, s)\n    cout(min(s))", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    minn = 1000000000\n    for i in range(n):\n        if (arr1[0] + arr2[i]) % n < minn:\n            minn = (arr1[0] + arr2[i]) % n\n            index = i\n    minn2 = 1000000000\n    for i in range(n):\n        if (arr1[0] + arr2[i]) % n < minn2 and index != i:\n            minn2 = (arr1[0] + arr2[i]) % n\n            index2 = i\n    list1 = arr2[index:] + arr2[:index]\n    list2 = arr2[index2:] + arr2[:index2]\n    flag = 0\n    for i in range(n):\n        if (arr1[i] + list1[i]) % n < (arr1[i] + list2[i]) % n:\n            print(*[(arr1[i] + list1[i]) % n for i in range(n)])\n            flag = 1\n            break\n        elif (arr1[i] + list1[i]) % n > (arr1[i] + list2[i]) % n:\n            print(*[(arr1[i] + list2[i]) % n for i in range(n)])\n            flag = 1\n            break\n    if flag == 0:\n        print(*[(arr1[i] + list1[i]) % n for i in range(n)])", "def compare(x, y, n):\n    for i in range(n):\n        if x[i] > y[i]:\n            return False\n        if x[i] < y[i]:\n            return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    val = 4 * n + 1\n    for i in range(n):\n        val = min(val, (a[0] + b[i]) % n)\n    ind = []\n    for i in range(n):\n        if (a[0] + b[i]) % n == val:\n            ind.append(i)\n    x = [(a[i] + b[(i + ind[0]) % n]) % n for i in range(n)]\n    if len(ind) == 1:\n        print(*x)\n    else:\n        y = [(a[i] + b[(i + ind[1]) % n]) % n for i in range(n)]\n        if compare(x, y, n):\n            print(*x)\n        else:\n            print(*y)", "from collections import *\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\nt = inp()\nwhile t:\n    t -= 1\n    n = inp()\n    a = lis()\n    b = lis()\n    po = 0\n    m = 1133223232323\n    for i in range(n):\n        if (a[0] + b[i]) % n < m:\n            m = (a[0] + b[i]) % n\n            po = i\n    h = []\n    for i in range(n):\n        if (a[0] + b[i]) % n == m:\n            h.append(i)\n    res = []\n    for i in h:\n        l = []\n        b1 = b[i:] + b[:i]\n        for j in range(n):\n            l.append((a[j] + b1[j]) % n)\n        res.append(l)\n    res.sort()\n    print(*res[0])", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    best = n\n    bestind = 0\n    for i in range(n):\n        if (a[0] + b[i]) % n < best:\n            best = (a[0] + b[i]) % n\n            bestind = i\n    choices = [bestind]\n    for i in range(n):\n        if i != bestind:\n            if b[bestind] % n == b[i] % n:\n                choices.append(i)\n    res = []\n    for ind in choices:\n        c = b[ind:] + b[:ind]\n        lst = []\n        for i in range(n):\n            lst.append((a[i] + c[i]) % n)\n        res.append(lst)\n    res = sorted(res)\n    ans = res[0]\n    ans = [str(i) for i in ans]\n    ans = ' '.join(ans)\n    print(ans)", "def rotate(ind):\n    Result = []\n    for i in range(n):\n        Result.append((A[i] + B[ind]) % n)\n        ind += 1\n        ind %= n\n    return Result\n\ndef compute(A, B):\n    minn = n\n    indexarr = []\n    for i in range(n):\n        minn = min(minn, (A[0] + B[i]) % n)\n    for i in range(n):\n        if minn == (A[0] + B[i]) % n:\n            indexarr.append(i)\n    if len(indexarr) == 1:\n        ind = indexarr[0]\n        return rotate(ind)\n    if len(indexarr) == 2:\n        return min(rotate(indexarr[0]), rotate(indexarr[1]))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    B = list(map(int, input().split(' ')))\n    Res = compute(A, B)\n    print(*Res)", "for _ in range(int(input())):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    possible = [[i, i] for i in range(n)]\n    i = 0\n    while i < n and len(possible) != 1:\n        mn = 2 * n + 1\n        arr = []\n        for (_, j) in possible:\n            mn = min(mn, (A[i] + B[j]) % n)\n        for (_, j) in possible:\n            if (A[i] + B[j]) % n == mn:\n                arr.append([_, (j + 1) % n])\n        possible = arr\n        i += 1\n    shift = possible[0][0]\n    ans = []\n    for i in range(n):\n        ans.append((A[i] + B[shift]) % n)\n        shift += 1\n        shift %= n\n    print(*ans)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    b = [int(j) for j in input().split()]\n    mn = n\n    s = []\n    for i in range(n):\n        cur = (a[0] + b[i]) % n\n        if cur < mn:\n            mn = cur\n            s = [i]\n        elif cur == mn:\n            s.append(i)\n    i = s[0]\n    c = b[i:] + b[:i]\n    res = [(c[i] + a[i]) % n for i in range(n)]\n    if len(s) == 1:\n        print(*res)\n    if len(s) == 2:\n        i = s[1]\n        c = b[i:] + b[:i]\n        res1 = [(c[i] + a[i]) % n for i in range(n)]\n        for i in range(n):\n            if res[i] < res1[i]:\n                print(*res)\n                break\n            elif res[i] > res1[i]:\n                print(*res1)\n                break\n            elif i == n - 1:\n                print(*res)", "def fun1(p, ar, pos):\n    if p < ar[0]:\n        ar[0] = p\n        ar[1] = [pos]\n    elif ar[0] == p:\n        ar[1].append(pos)\n    return ar\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ls = [5 * n, []]\n    for i in range(n):\n        t = (a[0] + b[i]) % n\n        ls = fun1(t, ls, i)\n    temp = []\n    pos = []\n    i = 0\n    while i < 2 and i < len(ls[1]):\n        temp.append([])\n        pos.append(ls[1][i])\n        i += 1\n    nn = len(pos)\n    for i in range(n):\n        for j in range(nn):\n            temp[j].append((a[i] + b[(i + pos[j]) % n]) % n)\n    temp.sort()\n    print(*temp[0])", "def fun1(p, ar, pos):\n    if p < ar[0]:\n        ar[0] = p\n        ar[1] = [pos]\n    elif ar[0] == p:\n        ar[1].append(pos)\n    return ar\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ls = [5 * n, []]\n    for i in range(n):\n        t = (a[0] + b[i]) % n\n        ls = fun1(t, ls, i)\n    temp = []\n    pos = []\n    i = 0\n    while i < 3 and i < len(ls[1]):\n        temp.append([])\n        pos.append(ls[1][i])\n        i += 1\n    nn = len(pos)\n    for i in range(n):\n        for j in range(nn):\n            temp[j].append((a[i] + b[(i + pos[j]) % n]) % n)\n    temp.sort()\n    print(*temp[0])", "def getSeq(A, B, N):\n    s = []\n    for i in range(N):\n        s.append((A[i] + B[i]) % N)\n    return s\n\ndef getStr(A):\n    s = ''\n    for i in A:\n        s += str(i) + ' '\n    return s.strip()\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = [int(i) for i in input().split()]\n    B = [int(i) for i in input().split()]\n    D = {}\n    for i in range(N):\n        x = (A[0] + B[i]) % N\n        if x in D:\n            D[x].append(i)\n        else:\n            D[x] = [i]\n    k = float('inf')\n    e = None\n    for (i, j) in D.items():\n        if k > i:\n            k = i\n            e = j\n    C = []\n    for i in e:\n        C.append(getSeq(A, B[i:] + B[:i], N))\n    print(getStr(min(C)), flush=True)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l3 = []\n    l4 = []\n    l5 = []\n    l6 = []\n    l7 = []\n    for i in range(n):\n        l3.append((l1[0] + l2[i]) % n)\n    k = min(l3)\n    a = l3.index(k)\n    l4.append(a)\n    for i in range(a + 1, n):\n        if l3[i] == k:\n            b = i\n            l4.append(b)\n    if len(l4) == 1:\n        l2 = l2[a:] + l2[:a]\n        for i in range(n):\n            l5.append((l1[i] + l2[i]) % n)\n        print(*l5)\n    if len(l4) == 2:\n        l2 = l2[a:] + l2[:a]\n        for i in range(n):\n            l5.append((l1[i] + l2[i]) % n)\n        l6.append(l5)\n        l2 = l2[-a:] + l2[:-a]\n        l2 = l2[b:] + l2[:b]\n        for i in range(n):\n            l7.append((l1[i] + l2[i]) % n)\n        l6.append(l7)\n        ans = min(l6)\n        print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l3 = []\n    l4 = []\n    l5 = []\n    l6 = []\n    l7 = []\n    for i in range(n):\n        l3.append((l1[0] + l2[i]) % n)\n    k = min(l3)\n    a = l3.index(k)\n    l4.append(a)\n    for i in range(a + 1, n):\n        if l3[i] == k:\n            b = i\n            l4.append(b)\n    if len(l4) == 1:\n        l2 = l2[a:] + l2[:a]\n        for i in range(n):\n            l5.append((l1[i] + l2[i]) % n)\n        print(*l5)\n    if len(l4) == 2:\n        l2 = l2[a:] + l2[:a]\n        for i in range(n):\n            l5.append((l1[i] + l2[i]) % n)\n        l6.append(l5)\n        l2 = l2[-a:] + l2[:-a]\n        l2 = l2[b:] + l2[:b]\n        for i in range(n):\n            l7.append((l1[i] + l2[i]) % n)\n        l6.append(l7)\n        ans = min(l6)\n        print(*ans)", "import sys\nimport inspect\nimport re\nimport time\nimport numpy as np\n\ndef debug(arg):\n    frame = inspect.currentframe()\n    try:\n        context = inspect.getframeinfo(frame.f_back).code_context\n        caller_lines = ''.join([line.strip() for line in context])\n        m = re.search('debug\\\\s*\\\\((.+?)\\\\)$', caller_lines)\n        if m:\n            caller_lines = m.group(1)\n        sys.stderr.write(caller_lines + ' = ' + str(arg) + '\\n')\n    finally:\n        del frame\nM = 1000000007\nyes = lambda : print('YES')\nno = lambda : print('NO')\n\ndef solve():\n    n = int(input())\n    a = np.array(input().split(), dtype='int64')\n    b = np.array(input().split(), dtype='int64')\n    for i in range(n):\n        a[i] %= n\n        b[i] %= n\n    (ind, last) = (0, (a[0] + b[0]) % n)\n    for i in range(1, n):\n        if (a[0] + b[i]) % n < last:\n            ind = i\n            last = (a[0] + b[i]) % n\n        elif (a[0] + b[i]) % n == last:\n            j = 1\n            while j < n:\n                if (a[j] + b[(i + j) % n]) % n < (a[j] + b[(ind + j) % n]) % n:\n                    ind = i\n                    break\n                elif (a[j] + b[(i + j) % n]) % n > (a[j] + b[(ind + j) % n]) % n:\n                    break\n                j += 1\n    for i in range(ind, n):\n        print((a[i - ind] + b[i]) % n, end=' ')\n    for i in range(ind):\n        print((a[i + n - ind] + b[i]) % n, end=' ')\n    pass\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()\nif __name__ == 'CP':\n    sys.stdin = open('ip.txt', 'r')\n    sys.stdout = open('op.txt', 'w')\n    sys.stderr = open('error.txt', 'w')\n    cs = time.time()\n    main()\n    ce = time.time()\n    sys.stderr.write('%.5f ms' % (ce - cs))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l3 = []\n    l4 = []\n    l5 = []\n    l6 = []\n    l7 = []\n    for i in range(n):\n        l3.append((l1[0] + l2[i]) % n)\n    k = min(l3)\n    a = l3.index(k)\n    l4.append(a)\n    for i in range(a + 1, n):\n        if l3[i] == k:\n            b = i\n            l4.append(b)\n    if len(l4) == 1:\n        l2 = l2[a:] + l2[:a]\n        for i in range(n):\n            l5.append((l1[i] + l2[i]) % n)\n        print(*l5)\n    if len(l4) == 2:\n        l2 = l2[a:] + l2[:a]\n        for i in range(n):\n            l5.append((l1[i] + l2[i]) % n)\n        l6.append(l5)\n        l2 = l2[-a:] + l2[:-a]\n        l2 = l2[b:] + l2[:b]\n        for i in range(n):\n            l7.append((l1[i] + l2[i]) % n)\n        l6.append(l7)\n        ans = min(l6)\n        print(*ans)", "import math\nt = int(input())\n\ndef make_move(vec, n):\n    if n == 0:\n        return vec\n    else:\n        return vec[n:] + vec[:n]\nfor _ in range(t):\n    n = int(input())\n    a_vec = input().split(' ')\n    b_vec = input().split(' ')\n    a_vec = [int(a) for a in a_vec]\n    b_vec = [int(b) for b in b_vec]\n    if n == 1:\n        print((a_vec[0] + b_vec[0]) % n)\n        continue\n    a0 = a_vec[0]\n    c_zero_min = math.inf\n    index_zero_min = None\n    for i in range(n):\n        c0 = (a0 + b_vec[i]) % n\n        if c0 < c_zero_min:\n            c_zero_min = c0\n            index_zero_min = i\n    c_one_min = math.inf\n    index_one_min = None\n    for i in range(n):\n        if i == index_zero_min:\n            continue\n        c0 = (a0 + b_vec[i]) % n\n        if c0 < c_one_min:\n            c_one_min = c0\n            index_one_min = i\n    b_zero = make_move(b_vec, index_zero_min)\n    b_one = make_move(b_vec, index_one_min)\n    c_zero = [(a_vec[i] + b_zero[i]) % n for i in range(n)]\n    c_one = [(a_vec[i] + b_one[i]) % n for i in range(n)]\n    smaller = c_zero\n    for i in range(n):\n        if c_zero[i] == c_one[i]:\n            continue\n        elif c_zero[i] < c_one[i]:\n            smaller = c_zero\n            break\n        elif c_zero[i] > c_one[i]:\n            smaller = c_one\n            break\n    smaller = [str(s) for s in smaller]\n    print(' '.join(smaller))", "try:\n    import math as m\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        A = list(map(int, input().split()))\n        B = list(map(int, input().split()))\n        minn = m.inf\n        l = list()\n        for i in range(N):\n            if (A[0] + B[i]) % N < minn:\n                l = list()\n                minn = (A[0] + B[i]) % N\n                l.append(i)\n            elif (A[0] + B[i]) % N == minn:\n                l.append(i)\n        if len(l) > 1:\n            i = l[0]\n            j = l[1]\n            t1 = B[i:] + B[:i]\n            t2 = B[j:] + B[:j]\n            flg = 0\n            for i in range(N):\n                x = (A[i] + t1[i]) % N\n                y = (A[i] + t2[i]) % N\n                if x > y:\n                    ans = t2\n                    flg = 1\n                    break\n                elif y > x:\n                    ans = t1\n                    flg = 1\n                    break\n            if flg == 0:\n                ans = t1\n        elif len(l) == 1:\n            i = l[0]\n            ans = B[i:] + B[:i]\n        for i in range(N):\n            print((ans[i] + A[i]) % N, end=' ')\n        print()\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mini = n\n    for i in range(n):\n        if mini > (a[0] + b[i]) % n:\n            mini = (a[0] + b[i]) % n\n    lists = []\n    for i in range(n):\n        if mini == (a[0] + b[i]) % n:\n            lists2 = []\n            for j in range(n):\n                padd = (i + j) % n\n                lists2.append((a[j] + b[padd]) % n)\n            lists.append(lists2)\n    ans = lists[0]\n    if len(lists) > 1:\n        for i in range(n):\n            if lists[0][i] > lists[1][i]:\n                ans = lists[1]\n                break\n            elif lists[0][i] < lists[1][i]:\n                ans = lists[0]\n                break\n            else:\n                continue\n        print(*ans)\n    else:\n        print(*lists[0])", "from sys import stdin\n\ndef calc(tarr, j):\n    for i in range(j, n):\n        res.append((a[i] + tarr[i]) % n)\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    b = list(map(int, stdin.readline().split()))\n    s = 0\n    res = []\n    one = False\n    for i in range(n):\n        temp = (a[0] + b[i]) % n\n        if i == 0 or temp < s:\n            s = temp\n            ind1 = i\n            one = True\n        elif temp == s:\n            ind2 = i\n            one = False\n    res.append(s)\n    tarr1 = b[ind1:] + b[:ind1]\n    if one == False:\n        tarr2 = b[ind2:] + b[:ind2]\n        for i in range(1, n):\n            temp1 = (a[i] + tarr1[i]) % n\n            temp2 = (a[i] + tarr2[i]) % n\n            if temp1 < temp2:\n                one = True\n                break\n            elif temp2 < temp1:\n                one = False\n                break\n            else:\n                res.append(temp1)\n    if one:\n        calc(tarr1, len(res))\n    else:\n        calc(tarr2, len(res))\n    print(*res)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ix = 0\n    ans = []\n    send = []\n    l = [i for i in range(n)]\n    while ix < n:\n        minx = n\n        for i in l:\n            cool = (b[i] + a[ix]) % n\n            if cool == minx:\n                send.append((i + 1) % n)\n            if cool < minx:\n                minx = cool\n                send = [(i + 1) % n]\n        ans.append(minx)\n        l = send\n        ix += 1\n    for i in ans:\n        print(i, end=' ')\n    print()", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    sm = []\n    req = -1\n    mini = math.inf\n    for i in range(n):\n        k = (a[0] + b[i]) % n\n        if k < mini:\n            mini = k\n            req = i\n    sm.append(req)\n    for i in range(n):\n        k = (a[0] + b[i]) % n\n        if sm[0] != i and k == mini:\n            sm.append(i)\n            break\n    if len(sm) == 1:\n        i = sm[0]\n        temp = b[i:n] + b[0:i]\n        ans = []\n        for j in range(n):\n            d = (a[j] + temp[j]) % n\n            ans.append(d)\n        print(*ans)\n    else:\n        i1 = sm[0]\n        temp1 = b[i1:n] + b[0:i1]\n        ans1 = []\n        for j in range(n):\n            d = (a[j] + temp1[j]) % n\n            ans1.append(d)\n        i2 = sm[1]\n        temp2 = b[i2:n] + b[0:i2]\n        ans2 = []\n        for j in range(n):\n            d = (a[j] + temp2[j]) % n\n            ans2.append(d)\n        ans = min(ans1, ans2)\n        print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    def calc(index, offset):\n        return (a[index] + b[(index + offset) % n]) % n\n    candidates = list(range(n))\n    index = 0\n    while len(candidates) > 1 and index < n:\n        best_val = n\n        for offset in candidates:\n            best_val = min(best_val, calc(index, offset))\n        best = []\n        for offset in candidates:\n            if calc(index, offset) == best_val:\n                best.append(offset)\n        candidates = best\n        index += 1\n    ans = candidates[0]\n    print(' '.join((str(calc(i, ans)) for i in range(n))))", "def rotate(i, A, B):\n    C = B[i:] + B[0:i]\n    return [(C[i] + A[i]) % len(A) for i in range(len(B))]\n\ndef fun(A, B):\n    ind = []\n    n = len(A)\n    mini = float('inf')\n    for i in range(0, n):\n        mini = min(mini, (B[i] + A[0]) % n)\n    for i in range(0, n):\n        if mini == (A[0] + B[i]) % n:\n            ind.append(i)\n    if len(ind) == 1:\n        return rotate(ind[0], A, B)\n    else:\n        return min([rotate(ind[i], A, B) for i in range(0, len(ind))])\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = fun(A, B)\n    print(*C)", "from math import *\nimport sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 10 ** 9\n    for i in range(n):\n        ans = min((a[0] + b[i]) % n, ans)\n    kmp = []\n    for i in range(n):\n        if (a[0] + b[i]) % n == ans:\n            kmp.append(i)\n    if len(kmp) == 1:\n        b = b[kmp[0]:] + b[:kmp[0]]\n        c = []\n        for i in range(n):\n            c.append((a[i] + b[i]) % n)\n        print(*c)\n    else:\n        b1 = b[kmp[0]:] + b[:kmp[0]]\n        c1 = []\n        for i in range(n):\n            c1.append((a[i] + b1[i]) % n)\n        b2 = b[kmp[1]:] + b[:kmp[1]]\n        c2 = []\n        for i in range(n):\n            c2.append((a[i] + b2[i]) % n)\n        print(*min(c1, c2))", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    al = [int(p) for p in input().split()]\n    bl = [int(p) % n for p in input().split()]\n    fa = al[0]\n    tl = [(fa + k) % n for k in bl]\n    mi = min(tl)\n    mli = []\n    nl = [i for (i, x) in enumerate(tl) if x == mi]\n    for p in nl:\n        nbl = bl[p:n] + bl[0:p]\n        c = []\n        for j in range(n):\n            c.append((al[j] + nbl[j]) % n)\n        mli.append(c)\n    z = min(mli)\n    for f in z:\n        print(f, end=' ')", "t = int(input())\nfor z in range(0, t):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    min1 = 2 * n + 1\n    for i in range(0, n):\n        min1 = min(min1, (arr1[0] + arr2[i]) % n)\n    count = 0\n    for i in range(0, n):\n        if (arr1[0] + arr2[i]) % n == min1:\n            if count > 0:\n                id2 = i\n            else:\n                id1 = i\n            count += 1\n    flag = 1\n    if count > 1:\n        temp1 = arr2[id1:] + arr2[0:id1]\n        temp2 = arr2[id2:] + arr2[0:id2]\n        for j in range(1, n):\n            if (temp1[j] + arr1[j]) % n < (temp2[j] + arr1[j]) % n:\n                flag = 1\n                break\n            elif (temp2[j] + arr1[j]) % n < (temp1[j] + arr1[j]) % n:\n                flag = 2\n                break\n            else:\n                continue\n    else:\n        temp1 = arr2[id1:] + arr2[0:id1]\n        flag = 1\n    if flag == 1:\n        final = temp1\n        for j in range(0, n):\n            print((arr1[j] + final[j]) % n, end=' ')\n        print()\n    else:\n        final = temp2\n        for j in range(0, n):\n            print((arr1[j] + final[j]) % n, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mine = 10 ** 6 + 5\n    for i in range(n):\n        m = (a[0] + b[i]) % n\n        mine = min(mine, m)\n    st = []\n    for i in range(n):\n        m = (a[0] + b[i]) % n\n        if m == mine:\n            st.append(i)\n    pk = []\n    for i in st:\n        ans = []\n        g = b[i:] + b[:i]\n        for j in range(n):\n            ans.append((a[j] + g[j]) % n)\n        pk.append(ans)\n    for i in min(pk):\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    h = []\n    (ck, m) = (999999, 999999)\n    for i in range(n):\n        ck = a[0] + b[i]\n        ck = ck % n\n        m = min(ck, m)\n    for i in range(n):\n        ck = a[0] + b[i]\n        ck = ck % n\n        if ck == m:\n            h.append(i)\n    if len(h) == 1:\n        a1 = h[0]\n        pk = 0\n        for j in range(a1, n):\n            print((a[pk] + b[j]) % n, end=' ')\n            pk += 1\n        for j in range(a1):\n            print((a[pk] + b[j]) % n, end=' ')\n            pk += 1\n    else:\n        a5 = []\n        a6 = []\n        a1 = h[0]\n        pk = 0\n        for j in range(a1, n):\n            a5.append((a[pk] + b[j]) % n)\n            pk += 1\n        for j in range(a1):\n            a5.append((a[pk] + b[j]) % n)\n            pk += 1\n        a1 = h[1]\n        pk = 0\n        for j in range(a1, n):\n            a6.append((a[pk] + b[j]) % n)\n            pk += 1\n        for j in range(a1):\n            a6.append((a[pk] + b[j]) % n)\n            pk += 1\n        if a5 < a6:\n            print(*a5)\n        else:\n            print(*a6)", "try:\n\n    def findmin_rotated(pos_match, arrA, arrB, n):\n        tmpA = arrB[pos_match[0]:] + arrB[:pos_match[0]]\n        if len(pos_match) == 1:\n            return tmpA\n        else:\n            tmpB = arrB[pos_match[1]:] + arrB[:pos_match[1]]\n            for i in range(n):\n                calA = (tmpA[i] + arrA[i]) % n\n                calB = (tmpB[i] + arrA[i]) % n\n                if calA < calB:\n                    return tmpA\n                elif calB < calA:\n                    return tmpB\n            return tmpA\n\n    def solve(arrA, arrB, n):\n        min_ = 4 * n\n        for i in range(n):\n            min_ = min(min_, (arrA[0] + arrB[i]) % n)\n        pos_match = []\n        for i in range(n):\n            if (arrA[0] + arrB[i]) % n == min_:\n                pos_match.append(i)\n        return pos_match\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arrA = list(map(int, input().split()))\n        arrB = list(map(int, input().split()))\n        pos_match = solve(arrA, arrB, n)\n        res = findmin_rotated(pos_match, arrA, arrB, n)\n        arr = []\n        for i in range(n):\n            arr.append((res[i] + arrA[i]) % n)\n        print(' '.join(map(str, arr)))\nexcept:\n    pass", "def arrayRotation():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        a = [a[i] for i in range(n)]\n        b = [b[i] for i in range(n)]\n        minima = 10 ** 5\n        for i in range(n):\n            minima = min(minima, (a[0] + b[i]) % n)\n        index = []\n        for i in range(n):\n            if (a[0] + b[i]) % n == minima:\n                index.append(i)\n        ans = [10 ** 9 for i in range(n)]\n        for i in index:\n            k = 0\n            flag = 1\n            for j in range(i, n):\n                if (a[k] + b[j]) % n > ans[k] and flag:\n                    break\n                elif (a[k] + b[j]) % n < ans[k]:\n                    flag = 0\n                    ans[k] = (a[k] + b[j]) % n\n                elif not flag:\n                    ans[k] = (a[k] + b[j]) % n\n                k += 1\n            for j in range(i):\n                if (a[k] + b[j]) % n > ans[k] and flag:\n                    break\n                elif not flag:\n                    ans[k] = (a[k] + b[j]) % n\n                elif (a[k] + b[j]) % n < ans[k]:\n                    flag = 0\n                    ans[k] = (a[k] + b[j]) % n\n                k += 1\n        print(*ans)\narrayRotation()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    hm = dict()\n    for i in range(n):\n        rem = (a[0] + b[i]) % n\n        if rem not in hm:\n            hm[rem] = [i]\n        else:\n            hm[rem].append(i)\n    res = []\n    mini = min(hm.keys())\n    for i in hm[mini]:\n        c = b[i:] + b[0:i]\n        ans = []\n        for j in range(n):\n            ans.append((a[j] + c[j]) % n)\n        res.append(ans)\n    k = min(res)\n    print(*k)", "from collections import Counter\ninp = lambda x: map(int, x.split())\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = (list(inp(input())), list(inp(input())))\n    (loc, off) = (list(range(n)), 0)\n    while len(loc) > 1 and off < n:\n        val = n\n        for ind in loc:\n            if (b[(ind + off) % n] + a[off]) % n < val:\n                val = (b[(ind + off) % n] + a[off]) % n\n        loc1 = []\n        for ind in loc:\n            if (b[(ind + off) % n] + a[off]) % n == val:\n                loc1.append(ind)\n        loc = loc1.copy()\n        off += 1\n    s = ''\n    j = loc[0]\n    for i in range(n):\n        s += str((a[i] + b[(j + i) % n]) % n) + ' '\n    s = s[:-1]\n    print(s)", "for _ in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mini = 1000000000.0\n    for i in range(0, n):\n        mini = min(mini, (a[0] + b[i]) % n)\n    id1 = id2 = -1\n    for i in range(0, n):\n        if (a[0] + b[i]) % n == mini:\n            if id1 != -1:\n                id2 = i\n            else:\n                id1 = i\n\n    def get(i):\n        ans = list()\n        cnt = 0\n        for j in range(i, n):\n            ans.append((a[cnt] + b[j]) % n)\n            cnt += 1\n        for j in range(0, i):\n            ans.append((a[cnt] + b[j]) % n)\n            cnt += 1\n        return ans\n    (r, s) = (list(), list())\n    r = get(id1)\n    if id2 != -1:\n        s = get(id2)\n        if r > s:\n            (r, s) = (s, r)\n    for i in r:\n        print(i, end=' ')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ind = []\n    mn = 2 * n + 100\n    for i in range(n):\n        if mn >= (a[0] + b[i]) % n:\n            mn = (a[0] + b[i]) % n\n    for i in range(n):\n        if mn == (a[0] + b[i]) % n:\n            ind.append(i)\n    ans = []\n    for j in ind:\n        temp = []\n        for i in range(n):\n            temp.append((a[i] + b[(j + i) % n]) % n)\n        ans.append(temp)\n    print(*min(ans))", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    al = [int(p) for p in input().split()]\n    bl = [int(p) % n for p in input().split()]\n    fa = al[0]\n    tl = [(fa + k) % n for k in bl]\n    mi = min(tl)\n    mli = []\n    nl = [i for (i, x) in enumerate(tl) if x == mi]\n    for p in nl:\n        nbl = bl[p:n] + bl[0:p]\n        c = []\n        for j in range(n):\n            c.append((al[j] + nbl[j]) % n)\n        mli.append(c)\n    z = min(mli)\n    for f in z:\n        print(f, end=' ')", "from collections import Counter\n\ndef create(A, B, n, ind):\n    C = [(A[i] + B[(i + ind) % n]) % n for i in range(n)]\n    return C\n\ndef solve(A, B, n):\n    index_list = []\n    small = float('inf')\n    for i in range(n):\n        v = (A[0] + B[i]) % n\n        if v < small:\n            index_list = [i]\n            small = v\n        elif v == small:\n            index_list.append(i)\n    ans = [float('inf')] * n\n    for ind in index_list:\n        ans = min(ans, create(A, B, n, ind))\n    return ans\nfor case in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    ans = solve(A, B, n)\n    print(*ans)", "import sys\n\ndef helper(n, a, b):\n    min_val = float('inf')\n    ind = []\n    for i in range(n):\n        temp = (a[0] + b[i]) % n\n        if temp == min_val:\n            ind.append(i)\n        elif temp < min_val:\n            min_val = temp\n            ind = [i]\n    l = []\n    for i in ind:\n        for j in range(n):\n            temp = (a[j] + b[(i + j) % n]) % n\n            l.append(temp)\n    if len(l) == n:\n        return l\n    for i in range(n):\n        if l[i] < l[i + n]:\n            return l[:n]\n        elif l[i] > l[i + n]:\n            return l[n:]\n    return l[:n]\nt = int(sys.stdin.readline().strip())\nfor tt in range(t):\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    b = list(map(int, sys.stdin.readline().strip().split()))\n    print(*helper(n, a, b))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    m = 200000\n    for i in range(n):\n        m = min(m, (a[0] + b[i]) % n)\n    l = -1\n    r = -1\n    for i in range(n):\n        if (a[0] + b[i]) % n == m:\n            if l == -1:\n                l = i\n            else:\n                r = i\n    if r == -1:\n        i = 0\n        li = []\n        for j in range(l, n):\n            li.append((a[i] + b[j]) % n)\n            i += 1\n        for k in range(l):\n            li.append((a[i] + b[k]) % n)\n            i += 1\n        print(*li)\n    else:\n        i = 0\n        li1 = []\n        for j in range(l, n):\n            li1.append((a[i] + b[j]) % n)\n            i += 1\n        for k in range(l):\n            li1.append((a[i] + b[k]) % n)\n            i += 1\n        i = 0\n        li2 = []\n        for j in range(r, n):\n            li2.append((a[i] + b[j]) % n)\n            i += 1\n        for k in range(r):\n            li2.append((a[i] + b[k]) % n)\n            i += 1\n        if li1 > li2:\n            print(*li2)\n        else:\n            print(*li1)", "for k in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    minMod = N\n    arr = []\n    for i in range(N):\n        val = (A[0] + B[i]) % N\n        if val < minMod:\n            minMod = val\n    for i in range(N):\n        val = (A[0] + B[i]) % N\n        if val == minMod:\n            arr.append(B[i:] + B[:i])\n    res = []\n    for arri in arr:\n        resi = []\n        for i in range(N):\n            val = (A[i] + arri[i]) % N\n            resi.append(val)\n        res.append(resi)\n    res = sorted(res)\n    print(*res[0])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mini = n\n    for i in range(n):\n        val = (a[0] + b[i]) % n\n        if val < mini:\n            mini = val\n    lists = []\n    for i in range(n):\n        val = (a[0] + b[i]) % n\n        if val == mini:\n            lists.append(b[i:] + b[:i])\n    result = []\n    for lis in lists:\n        ans = []\n        for i in range(n):\n            val = (a[i] + lis[i]) % n\n            ans.append(val)\n        result.append(ans)\n    result.sort()\n    print(*result[0])", "from itertools import permutations as per\nfrom math import factorial as fact\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    m = 10 ** 8\n    ind1 = ind2 = -1\n    for i in range(n):\n        if (a[0] + b[i]) % n < m:\n            m = (a[0] + b[i]) % n\n            ind1 = i\n            ind2 = -1\n        elif (a[0] + b[i]) % n == m:\n            ind2 = i\n    b1 = [] + b[ind1:] + b[:ind1]\n    (c1, c2) = ([], [])\n    for i in range(n):\n        c1.append((a[i] + b1[i]) % n)\n    if ind2 != -1:\n        b2 = [] + b[ind2:] + b[:ind2]\n        for i in range(n):\n            c2.append((a[i] + b2[i]) % n)\n    if len(c2):\n        for i in range(n):\n            if c1[i] > c2[i]:\n                for j in c2:\n                    print(j, end=' ')\n                break\n            elif c1[i] < c2[i]:\n                for j in c1:\n                    print(j, end=' ')\n                break\n        else:\n            for j in c1:\n                print(j, end=' ')\n    else:\n        for i in c1:\n            print(i, end=' ')\n    print()", "import math\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ind = []\n    mini = math.inf\n    for i in range(n):\n        if (a[0] + b[i]) % n < mini:\n            ind = []\n            ind.append(i)\n            mini = (a[0] + b[i]) % n\n        elif (a[0] + b[i]) % n <= mini:\n            ind.append(i)\n    l = []\n    for i in ind:\n        s = b[i:] + b[:i]\n        x = []\n        for j in range(n):\n            x.append((a[j] + s[j]) % n)\n        l.append(x)\n    l.sort()\n    print(*l[0])", "o = int(input())\nfor i in range(o):\n    x = int(input())\n    y = list(map(int, input().split()))\n    z = list(map(int, input().split()))\n    a = []\n    b = y[0]\n    for k in range(x):\n        a.append((b + z[k]) % x)\n    l = min(a)\n    m = []\n    for k in range(x):\n        if l == a[k]:\n            m.append(k)\n    if len(m) == 1:\n        for j in range(x):\n            print((y[j] + z[(j + m[0]) % x]) % x, end=' ')\n    else:\n        n = []\n        l = []\n        for j in range(x):\n            n.append(z[(j + m[0]) % x])\n            l.append(z[(j + m[1]) % x])\n        p = 0\n        for j in range(x):\n            w = (y[j] + n[j]) % x\n            r = (y[j] + l[j]) % x\n            if w > r:\n                p = 1\n                break\n            elif r > w:\n                p = 0\n                break\n        if p == 1:\n            for j in range(x):\n                print((y[j] + l[j]) % x, end=' ')\n        else:\n            for j in range(x):\n                print((y[j] + n[j]) % x, end=' ')\n    print()", "from collections import deque\nt = int(input())\nfor z in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = deque(b)\n    y = deque(b)\n    m = 1000000000\n    for i in range(n):\n        c = (a[0] + b[i]) % n\n        if c < m:\n            m = c\n    d = []\n    k = 0\n    for i in range(n):\n        c = (a[0] + b[i]) % n\n        if c == m:\n            k += 1\n            d.append(i)\n    e = []\n    f = []\n    if k == 2:\n        x.rotate(-d[0])\n        for i in range(n):\n            e.append((a[i] + x[i]) % n)\n        y.rotate(-d[1])\n        for i in range(n):\n            f.append((a[i] + y[i]) % n)\n        if e > f:\n            for i in range(n):\n                print(f[i], end=' ')\n        else:\n            for i in range(n):\n                print(e[i], end=' ')\n    else:\n        x.rotate(-d[0])\n        for i in range(n):\n            print((a[i] + x[i]) % n, end=' ')", "import sys\n\ndef gtt(ind):\n    r = []\n    c = 0\n    for i in range(ind, n):\n        r.append((a[c] + b[i]) % n)\n        c += 1\n    for i in range(ind):\n        r.append((a[c] + b[i]) % n)\n        c += 1\n    return r\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mini = sys.maxsize\n    for i in range(n):\n        mini = min(mini, (a[0] + b[i]) % n)\n    i1 = -1\n    i2 = -1\n    for i in range(n):\n        if (a[0] + b[i]) % n == mini:\n            if i1 == -1:\n                i1 = i\n            else:\n                i2 = i\n    p = gtt(i1)\n    if i2 != -1:\n        q = gtt(i2)\n        if p > q:\n            (p, q) = (q, p)\n    for i in p:\n        print(i, end=' ')\n    print('')", "import math\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ind = []\n    mini = math.inf\n    for i in range(n):\n        if (a[0] + b[i]) % n < mini:\n            ind = []\n            ind.append(i)\n            mini = (a[0] + b[i]) % n\n        elif (a[0] + b[i]) % n <= mini:\n            ind.append(i)\n    l = []\n    for i in ind:\n        s = b[i:] + b[:i]\n        x = []\n        for j in range(n):\n            x.append((a[j] + s[j]) % n)\n        l.append(x)\n    l.sort()\n    print(*l[0])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    min = n\n    m = []\n    for j in range(n):\n        if (a[0] + b[j]) % n < min:\n            min = (a[0] + b[j]) % n\n            m = [j]\n        elif (a[0] + b[j]) % n == min:\n            m.append(j)\n    if len(m) == 1:\n        for j in range(n):\n            print((a[j] + b[(j + m[0]) % n]) % n, end=' ')\n    else:\n        for j in range(n):\n            if (a[j] + b[(j + m[0]) % n]) % n < (a[j] + b[(j + m[1]) % n]) % n:\n                min = 0\n                break\n            elif (a[j] + b[(j + m[0]) % n]) % n > (a[j] + b[(j + m[1]) % n]) % n:\n                min = 1\n                break\n        for j in range(n):\n            print((a[j] + b[(j + m[min]) % n]) % n, end=' ')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    m = []\n    for j in range(n):\n        m.append(j)\n    min = n\n    m1 = []\n    for j in range(len(m)):\n        if (a[0] + b[m[j]]) % n < min:\n            min = (a[0] + b[m[j]]) % n\n            m1 = [m[j]]\n        elif (a[0] + b[m[j]]) % n == min:\n            m1.append(m[j])\n    m = m1\n    if len(m) == 1:\n        for j in range(n):\n            print((a[j] + b[(j + m[0]) % n]) % n, end=' ')\n    else:\n        for j in range(n):\n            if (a[j] + b[(j + m[0]) % n]) % n < (a[j] + b[(j + m[1]) % n]) % n:\n                min = 0\n                break\n            elif (a[j] + b[(j + m[0]) % n]) % n > (a[j] + b[(j + m[1]) % n]) % n:\n                min = 1\n                break\n        for j in range(n):\n            print((a[j] + b[(j + m[min]) % n]) % n, end=' ')", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if n == 1:\n        print((a[0] + b[0]) % n)\n        continue\n    l = []\n    for x in range(n):\n        l.append([(a[0] + b[x]) % n, x])\n    l.sort()\n    ans = []\n    mini = l[0][0]\n    for x in l:\n        if x[0] == mini:\n            index = x[1]\n            l1 = []\n            i = 0\n            for x in range(index, n):\n                l1.append((a[i] + b[x]) % n)\n                i += 1\n            for x in range(index):\n                l1.append((a[i] + b[x]) % n)\n                i += 1\n            ans.append(l1)\n        else:\n            break\n    print(*min(ans))", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    minim = (a[0] + b[0]) % n\n    min_indx = 0\n    for j in range(n):\n        if (a[0] + b[j]) % n < minim:\n            minim = (a[0] + b[j]) % n\n            min_indx = j\n    arr = []\n    for j in range(n):\n        if (a[0] + b[j]) % n == minim:\n            arr.append(j)\n    temp1 = b[arr[0]:] + b[:arr[0]]\n    seq1 = []\n    for k in range(n):\n        seq1.append((a[k] + temp1[k]) % n)\n    for j in range(len(arr)):\n        temp = b[arr[j]:] + b[:arr[j]]\n        seq = []\n        for k in range(n):\n            seq.append((a[k] + temp[k]) % n)\n        k = 0\n        while seq1[k] == seq[k]:\n            k += 1\n            if k == n:\n                k -= 1\n                break\n        if seq1[k] > seq[k]:\n            ans = seq\n        else:\n            ans = seq1\n    for j in range(n):\n        print(ans[j], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    h = []\n    (ck, m) = (999999, 999999)\n    for i in range(n):\n        ck = a[0] + b[i]\n        ck = ck % n\n        m = min(ck, m)\n    for i in range(n):\n        ck = a[0] + b[i]\n        ck = ck % n\n        if ck == m:\n            h.append(i)\n    if len(h) == 1:\n        a1 = h[0]\n        pk = 0\n        for j in range(a1, n):\n            print((a[pk] + b[j]) % n, end=' ')\n            pk += 1\n        for j in range(a1):\n            print((a[pk] + b[j]) % n, end=' ')\n            pk += 1\n    else:\n        a5 = []\n        a6 = []\n        a1 = h[0]\n        pk = 0\n        for j in range(a1, n):\n            a5.append((a[pk] + b[j]) % n)\n            pk += 1\n        for j in range(a1):\n            a5.append((a[pk] + b[j]) % n)\n            pk += 1\n        a1 = h[1]\n        pk = 0\n        for j in range(a1, n):\n            a6.append((a[pk] + b[j]) % n)\n            pk += 1\n        for j in range(a1):\n            a6.append((a[pk] + b[j]) % n)\n            pk += 1\n        if a5 < a6:\n            print(*a5)\n        else:\n            print(*a6)", "def make_Seq(a, b):\n    string = ''\n    n = len(a)\n    for i in range(n):\n        string += str((a[i] + b[i]) % n) + ' '\n    return string\nfor i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    minim = (a[0] + b[0]) % n\n    min_indx = 0\n    for j in range(n):\n        if (a[0] + b[j]) % n < minim:\n            minim = (a[0] + b[j]) % n\n            min_indx = j\n    arr = []\n    for j in range(n):\n        if (a[0] + b[j]) % n == minim:\n            arr.append(j)\n    if len(arr) == 1:\n        b = b[arr[0]:] + b[:arr[0]]\n        print(make_Seq(a, b))\n    else:\n        str1 = b[arr[0]:] + b[:arr[0]]\n        str2 = b[arr[1]:] + b[:arr[1]]\n        ans1 = [int(x) for x in make_Seq(a, str1).split()]\n        ans2 = [int(x) for x in make_Seq(a, str2).split()]\n        stringg = min(ans1, ans2)\n        ans_String = ''\n        for j in range(n):\n            ans_String += str(stringg[j]) + ' '\n        print(ans_String)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    x = 0\n    y = -1\n    for i in range(1, n):\n        if (arr[0] + brr[i]) % n < (arr[0] + brr[x]) % n:\n            y = -1\n            x = i\n        elif (arr[0] + brr[i]) % n == (arr[0] + brr[x]) % n:\n            y = i\n    if y < 0:\n        for i in range(0, n):\n            print((arr[i] + brr[(i + x) % n]) % n, end=' ')\n    else:\n        i = 0\n        while i < n and (arr[i] + brr[(i + x) % n]) % n == (arr[i] + brr[(i + y) % n]) % n:\n            print((arr[i] + brr[(i + x) % n]) % n, end=' ')\n            i += 1\n        if i < n:\n            if (arr[i] + brr[(i + x) % n]) % n < (arr[i] + brr[(i + y) % n]) % n:\n                while i < n:\n                    print((arr[i] + brr[(i + x) % n]) % n, end=' ')\n                    i += 1\n            else:\n                while i < n:\n                    print((arr[i] + brr[(i + y) % n]) % n, end=' ')\n                    i += 1\n    print()", "def make_Seq(a, b):\n    string = ''\n    n = len(a)\n    for i in range(n):\n        string += str((a[i] + b[i]) % n) + ' '\n    return string\nfor i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    minim = (a[0] + b[0]) % n\n    min_indx = 0\n    for j in range(n):\n        if (a[0] + b[j]) % n < minim:\n            minim = (a[0] + b[j]) % n\n            min_indx = j\n    arr = []\n    for j in range(n):\n        if (a[0] + b[j]) % n == minim:\n            arr.append(j)\n    if len(arr) == 1:\n        b = b[arr[0]:] + b[:arr[0]]\n        print(make_Seq(a, b))\n    else:\n        str1 = b[arr[0]:] + b[:arr[0]]\n        str2 = b[arr[1]:] + b[:arr[1]]\n        flg = 0\n        for j in range(n):\n            a1 = (a[j] + str1[j]) % n\n            b1 = (a[j] + str2[j]) % n\n            if a1 > b1:\n                ans = str2\n                flg = 1\n                break\n            elif b1 > a1:\n                ans = str1\n                flg = 1\n                break\n        if flg != 1:\n            ans = str1\n        print(make_Seq(a, ans))", "def make_Seq(a, b):\n    string = ''\n    n = len(a)\n    for i in range(n):\n        string += str((a[i] + b[i]) % n) + ' '\n    return string\nfor i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    minim = (a[0] + b[0]) % n\n    min_indx = 0\n    for j in range(n):\n        if (a[0] + b[j]) % n < minim:\n            minim = (a[0] + b[j]) % n\n            min_indx = j\n    arr = []\n    for j in range(n):\n        if (a[0] + b[j]) % n == minim:\n            arr.append(j)\n    if len(arr) == 1:\n        b = b[arr[0]:] + b[:arr[0]]\n        print(make_Seq(a, b))\n    else:\n        str1 = b[arr[0]:] + b[:arr[0]]\n        str2 = b[arr[1]:] + b[:arr[1]]\n        flg = 0\n        for j in range(n):\n            a1 = (a[j] + str1[j]) % n\n            b1 = (a[j] + str2[j]) % n\n            if a1 > b1:\n                ans = str2\n                flg = 1\n                break\n            elif b1 > a1:\n                ans = str1\n                flg = 1\n                break\n        if flg != 1:\n            ans = str1\n        for j in range(n):\n            print((a[j] + ans[j]) % n, end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    m = pow(10, 6)\n    id2 = id1 = -1\n    for i in range(n):\n        c = (a[0] + b[i]) % n\n        if c == m:\n            id2 = i\n        if c < m:\n            m = c\n            id1 = i\n    b += b\n    c1 = []\n    for i in range(n):\n        c1.append((a[i] + b[i + id1]) % n)\n    if id2 == -1:\n        for x in c1:\n            print(x, end=' ')\n        print()\n    else:\n        c2 = []\n        flag = 0\n        for i in range(n):\n            c2.append((a[i] + b[i + id2]) % n)\n        for i in range(n):\n            if c1[i] > c2[i]:\n                flag = 1\n                break\n            elif c1[i] < c2[i]:\n                flag = 0\n                break\n        if flag:\n            for x in c2:\n                print(x, end=' ')\n            print()\n        else:\n            for x in c1:\n                print(x, end=' ')\n            print()", "import sys\nimport math\nimport heapq\nfrom collections import defaultdict as dd\nfrom collections import OrderedDict as od\nfrom collections import deque\nfrom itertools import permutations as pp\nfrom itertools import combinations as cc\nfrom sys import stdin\nfrom functools import cmp_to_key\nfrom functools import lru_cache\nfrom bisect import bisect_left as bs_l\nfrom bisect import bisect_right as bs_r\ninput = sys.stdin.readline\nmod = 10 ** 9 + 7\nsys.setrecursionlimit(10 ** 5)\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    if n == 1:\n        print((arr[0] + brr[0]) % n)\n        continue\n    ll = []\n    for i in range(n):\n        kk = (arr[0] + brr[i]) % n\n        ll.append([kk, i])\n    ll.sort()\n    mn = ll[0][0]\n    ans = []\n    for i in ll:\n        if i[0] == mn:\n            idx = i[1]\n            bb = brr[idx:] + brr[:idx]\n            res = []\n            for j in range(n):\n                res.append((arr[j] + bb[j]) % n)\n            ans.append(res)\n        else:\n            break\n    print(*min(ans))", "import sys\nimport math\nimport heapq\nfrom collections import defaultdict as dd\nfrom collections import OrderedDict as od\nfrom collections import deque\nfrom itertools import permutations as pp\nfrom itertools import combinations as cc\nfrom sys import stdin\nfrom functools import cmp_to_key\nfrom functools import lru_cache\nfrom bisect import bisect_left as bs_l\nfrom bisect import bisect_right as bs_r\ninput = sys.stdin.readline\nmod = 10 ** 9 + 7\nsys.setrecursionlimit(10 ** 5)\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    if n == 1:\n        print((arr[0] + brr[0]) % n)\n        continue\n    ll = []\n    for i in range(n):\n        kk = (arr[0] + brr[i]) % n\n        ll.append([kk, i])\n    ll.sort()\n    (kk1, kk2) = (ll[0][0], ll[1][0])\n    if kk1 != kk2:\n        idx = ll[0][1]\n        bb = brr[idx:] + brr[:idx]\n        ans = []\n        for i in range(n):\n            ans.append((arr[i] + bb[i]) % n)\n        print(*ans)\n    else:\n        idx = ll[0][1]\n        bb = brr[idx:] + brr[:idx]\n        ans1 = []\n        for i in range(n):\n            ans1.append((arr[i] + bb[i]) % n)\n        idx = ll[1][1]\n        bb = brr[idx:] + brr[:idx]\n        ans2 = []\n        for i in range(n):\n            ans2.append((arr[i] + bb[i]) % n)\n        ans = min(ans1, ans2)\n        print(*ans)", "import collections\nfrom collections import defaultdict\nimport math\nfrom math import factorial\nfrom math import gcd\nfrom collections import Counter\n\ndef fun(p, q):\n    r = []\n    for i in range(n):\n        r.append((p[i] + q[i]) % n)\n    return r\n\ndef fun1(p, q):\n    for i in range(n):\n        if p[i] < q[i]:\n            return True\n        elif q[i] < p[i]:\n            return False\n    return False\nfor t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(c) for c in input().split()]\n    m = (a[0] + b[0]) % n\n    z = [0]\n    for i in range(1, n):\n        if (a[0] + b[i]) % n < m:\n            z = [i]\n            m = (a[0] + b[i]) % n\n        elif (a[0] + b[i]) % n == m:\n            z.append(i)\n    ans = []\n    for i in z:\n        temp = list(b[i:] + b[:i])\n        ans.append(fun(a, temp))\n    ind = 0\n    for i in range(1, len(ans)):\n        if not fun1(ans[ind], ans[i]):\n            ind = i\n    print(*ans[ind])", "def soln(a, b):\n    mini = pow(10, 9) + 7\n    n = len(a)\n    for i in range(n):\n        mini = min(mini, (a[0] + b[i]) % n)\n    index1 = 0\n    index2 = 0\n    for i in range(n):\n        if (a[0] + b[i]) % n == mini:\n            if index1 == 0:\n                index1 = i\n            else:\n                index2 = i\n    b1 = b[index1:] + b[:index1]\n    b2 = b[index2:] + b[:index2]\n    s1 = []\n    s2 = []\n    for i in range(n):\n        s1.append((a[i] + b1[i]) % n)\n        s2.append((a[i] + b2[i]) % n)\n    ans = []\n    ans.append(s1)\n    ans.append(s2)\n    ans.sort()\n    print(*ans[0])\nT = int(input())\ni = 0\nans = []\nwhile i < T:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    soln(a, b)\n    i += 1", "for _ in range(int(input())):\n    n = int(input())\n    ai = list(map(int, input().split()))\n    bi = list(map(int, input().split()))\n    j = -1\n    x = 0\n    aj = []\n    bj = []\n    a = f = k = 0\n    mi = 10 ** 9\n    for i in range(n):\n        x = ai[0] + bi[i]\n        if x % n < mi:\n            k = i\n            mi = x % n\n    for i in range(n):\n        x = ai[0] + bi[i]\n        if x % n == mi:\n            if i != k:\n                j = i\n    for i in range(k, k + n):\n        a = (ai[i - k] + bi[i % n]) % n\n        aj.append(a)\n    if j != -1:\n        for i in range(j, j + n):\n            a = (ai[i - j] + bi[i % n]) % n\n            if f == 1:\n                aj[i - j] = a\n            elif aj[i - j] < a:\n                break\n            elif aj[i - j] > a:\n                f = 1\n                aj[i - j] = a\n    print(*aj)", "for _ in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    p = a[0]\n    m = 1000000000000000000000000000\n    index = 0\n    for i in range(0, n):\n        if (p + b[i]) % n <= m:\n            m = (p + b[i]) % n\n    index1 = -1\n    index2 = -1\n    for i in range(0, n):\n        if (p + b[i]) % n == m:\n            if index1 == -1:\n                index1 = i\n            else:\n                index2 = i\n    b1 = []\n    for i in range(index1, n):\n        b1.append(b[i])\n    for i in range(0, index1):\n        b1.append(b[i])\n    c1 = []\n    c2 = []\n    if index2 != -1:\n        b2 = []\n        for i in range(index2, n):\n            b2.append(b[i])\n        for i in range(0, index2):\n            b2.append(b[i])\n        for i in range(0, n):\n            c1.append((a[i] + b1[i]) % n)\n        for i in range(0, n):\n            c2.append((a[i] + b2[i]) % n)\n        if c1 < c2:\n            for i in range(0, n):\n                print(c1[i], end=' ')\n        else:\n            for i in range(0, n):\n                print(c2[i], end=' ')\n        print()\n    else:\n        for i in range(0, n):\n            c1.append((a[i] + b1[i]) % n)\n        for i in range(0, n):\n            print(c1[i], end=' ')\n        print()", "for t in range(int(input())):\n    N = int(input())\n    A = list(map(lambda x: int(x) % N, input().strip().split(' ')))\n    B = list(map(lambda x: int(x) % N, input().strip().split(' ')))\n    C = []\n    minC = N\n    for i in B:\n        a = (i + A[0]) % N\n        minC = min(minC, a)\n    C.append(str(minC))\n    checkindice = [i for (i, x) in enumerate(B) if (x + A[0]) % N == minC]\n    for checkcounter in range(1, N):\n        ref = A[checkcounter]\n        if len(checkindice) == 1:\n            C.append(str((B[(checkindice[0] + checkcounter) % N] + ref) % N))\n        elif B[(checkindice[0] + checkcounter) % N] == B[(checkindice[1] + checkcounter) % N]:\n            C.append(str((B[(checkindice[0] + checkcounter) % N] + ref) % N))\n        else:\n            posC = [(ref + B[(i + checkcounter) % N]) % N for i in checkindice]\n            minC = min(posC)\n            C.append(str(minC))\n            checkindice = [checkindice[posC.index(minC)]]\n    print(' '.join(C))", "for test in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    c = [0 for x in range(n)]\n    x = list()\n    u = list()\n    t = n\n    for i in range(n):\n        k = (a[0] + b[i]) % n\n        if k <= t:\n            t = k\n            pos = i\n    for i in range(n):\n        k = (a[0] + b[i]) % n\n        if k == t:\n            x.append(i)\n    for i in x:\n        u.append(b[i:] + b[:i])\n    y = len(u)\n    for i in range(y):\n        for j in range(n):\n            u[i][j] = (u[i][j] + a[j]) % n\n    u.sort()\n    print(*u[0])", "for _ in range(int(input())):\n    n = int(input())\n    ai = list(map(int, input().split()))\n    bi = list(map(int, input().split()))\n    j = -1\n    x = 0\n    aj = []\n    bj = []\n    a = f = k = 0\n    mi = 10 ** 9\n    for i in range(n):\n        x = ai[0] + bi[i]\n        if x % n < mi:\n            k = i\n            mi = x % n\n    for i in range(n):\n        x = ai[0] + bi[i]\n        if x % n == mi:\n            if i != k:\n                j = i\n    for i in range(k, k + n):\n        a = (ai[i - k] + bi[i % n]) % n\n        aj.append(a)\n    if j != -1:\n        for i in range(j, j + n):\n            a = (ai[i - j] + bi[i % n]) % n\n            if f == 1:\n                aj[i - j] = a\n            elif aj[i - j] < a:\n                break\n            elif aj[i - j] > a:\n                f = 1\n                aj[i - j] = a\n    print(*aj)", "def take_arr_input():\n    return list(map(int, input().split()))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = take_arr_input()\n    brr = take_arr_input()\n    in_a = arr[0]\n    res = (arr[0] + brr[0]) % n\n    idx = 0\n    for i in range(1, n):\n        cal = (in_a + brr[i]) % n\n        if cal < res:\n            res = cal\n            idx = i\n        elif cal == res:\n            for j in range(1, n):\n                a = (arr[j] + brr[(j + idx) % n]) % n\n                b = (arr[j] + brr[(j + i) % n]) % n\n                if b < a:\n                    idx = i\n                    break\n                elif b > a:\n                    break\n    new_res = []\n    for i in range(n):\n        new_res.append((brr[(i + idx) % n] + arr[i]) % n)\n    print(*new_res)", "def take_arr_input():\n    return list(map(int, input().split()))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = take_arr_input()\n    brr = take_arr_input()\n    in_a = arr[0]\n    res = (arr[0] + brr[0]) % n\n    idx = 0\n    for i in range(1, n):\n        cal = (in_a + brr[i]) % n\n        if cal < res:\n            res = cal\n            idx = i\n        if cal == res:\n            for j in range(1, n):\n                a = (arr[j] + brr[(j + idx) % n]) % n\n                b = (arr[j] + brr[(j + i) % n]) % n\n                if b < a:\n                    idx = i\n                    break\n                if b > a:\n                    break\n    new_res = []\n    for i in range(n):\n        new_res.append((brr[(i + idx) % n] + arr[i]) % n)\n    print(*new_res)", "def fun(st):\n    i = 0\n    j = st\n    c = []\n    while i < n:\n        c.append((a[i] + b[j]) % n)\n        i += 1\n        j += 1\n        j %= n\n    return c\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    st1 = -1\n    st2 = -1\n    mn = float('inf')\n    for i in range(n):\n        x = (a[0] + b[i]) % n\n        if x < mn:\n            mn = x\n            st1 = i\n        elif x == mn:\n            st2 = i\n    if st2 != -1 and (a[0] + b[st1]) % n != (a[0] + b[st2]) % n:\n        print(' '.join(map(str, fun(st1))))\n    else:\n        print(' '.join(map(str, min(fun(st1), fun(st2)))))", "def sol(l1, l2, n):\n    e = l1[0]\n    currminindx = []\n    currmin = float('inf')\n    for i in range(len(l2)):\n        t = (l2[i] + l1[0]) % n\n        if t == currmin:\n            currminindx.append(i)\n        elif t < currmin:\n            currminindx = [i]\n            currmin = t\n    res = []\n    for index in currminindx:\n        res.append([(i + j) % n for (i, j) in zip(l1, l2[index:] + l2[:index])])\n    return min(res)\nfor _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    print(*sol(l1, l2, n))", "def calc(a, b, ind, n):\n    b1 = ind[0]\n    b2 = ind[1]\n    i = 0\n    while i < n and (a[i] + b[b1]) % n == (a[i] + b[b2]) % n:\n        b1 = (b1 + 1) % n\n        b2 = (b2 + 1) % n\n        i += 1\n    if i < n and (b[b1] + a[i]) % n <= (b[b2] + a[i]) % n:\n        return ind[0]\n    return ind[1]\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split(' ')]\n    b = [int(i) for i in input().split(' ')]\n    ind = []\n    m = int(4 * n) + 1\n    for bi in b:\n        m = min(m, (bi + a[0]) % n)\n    i = 0\n    for bi in b:\n        if (bi + a[0]) % n == m:\n            ind.append(i)\n        i += 1\n    if len(ind) > 1:\n        b_ind = calc(a, b, ind, n)\n    else:\n        b_ind = ind[0]\n    b = b[b_ind:] + b[:b_ind]\n    c = []\n    for (ai, bi) in zip(a, b):\n        c.append((ai + bi) % n)\n    for ci in c:\n        print(ci, end=' ')\n    print()", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef helper(n, a, b):\n    c = []\n    for i in range(n):\n        c.append((a[i] + b[i]) % n)\n    return c\n\ndef solve(n, a, b):\n    mi = float('inf')\n    for i in range(n):\n        mi = min((a[0] + b[i]) % n, mi)\n    (id1, id2) = (-1, -1)\n    for i in range(n):\n        if (a[0] + b[i]) % n == mi:\n            if id1 == -1:\n                id1 = i\n            else:\n                id2 = i\n    if id2 == -1:\n        b = b[id1:] + b[:id1]\n        print(*helper(n, a, b))\n    else:\n        x = b[id1:] + b[:id1]\n        y = b[id2:] + b[:id2]\n        xarr = helper(n, a, x)\n        yarr = helper(n, a, y)\n        if xarr < yarr:\n            print(*xarr)\n        else:\n            print(*yarr)\nfor _ in range(int(input())):\n    n = int(input())\n    (a, b) = (int_arr(), int_arr())\n    solve(n, a, b)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mn = 1000000007\n    sind = -1\n    eqcond = {}\n    eq = -1\n    for i in range(n):\n        x = (b[i] + a[0]) % n\n        if x < mn:\n            mn = x\n            sind = i\n            eqcond[mn] = [i]\n        elif x == mn:\n            try:\n                eqcond[mn].append(i)\n            except:\n                eqcond[mn] = [i]\n            mn = x\n    z = eqcond[mn]\n    if len(z) == 1:\n        x = z[0]\n        y = 0\n        for j in range(x, n):\n            print((a[y] + b[j]) % n, end=' ')\n            y += 1\n        for j in range(x):\n            print((a[y] + b[j]) % n, end=' ')\n            y += 1\n        print(end='\\n')\n    else:\n        (res1, res2) = ([], [])\n        x = z[0]\n        y = 0\n        for j in range(x, n):\n            res1.append((a[y] + b[j]) % n)\n            y += 1\n        for j in range(x):\n            res1.append((a[y] + b[j]) % n)\n            y += 1\n        x = z[1]\n        y = 0\n        for j in range(x, n):\n            res2.append((a[y] + b[j]) % n)\n            y += 1\n        for j in range(x):\n            res2.append((a[y] + b[j]) % n)\n            y += 1\n        if res1 < res2:\n            for i in range(n):\n                print(res1[i], end=' ')\n            print(end='\\n')\n        else:\n            for i in range(n):\n                print(res2[i], end=' ')\n            print(end='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    ai = list(map(int, input().split()))\n    bi = list(map(int, input().split()))\n    first = ai[0]\n    min_ = (first + bi[0]) % n\n    j = [0]\n    for i in range(1, len(bi)):\n        if (first + bi[i]) % n <= min_:\n            min_ = (first + bi[i]) % n\n            j.append(i)\n    cnt = 1\n    res = []\n    for j_in in j:\n        i_ind = 0\n        j_ind = j_in\n        cnt = 1\n        arr = []\n        while cnt <= n:\n            arr.append((ai[i_ind] + bi[j_ind]) % n)\n            i_ind += 1\n            j_ind += 1\n            i_ind = i_ind % n\n            j_ind = j_ind % n\n            cnt += 1\n        res.append(arr)\n        del arr\n    ans = res[0]\n    for i in range(1, len(res)):\n        if res[i] < ans:\n            ans = res[i]\n    for i in ans:\n        print(i, end=' ')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    pref = (a[0] + b[0]) % n\n    cache = []\n    index = 0\n    for i in range(1, n):\n        if (a[0] + b[i]) % n < pref:\n            pref = (a[0] + b[i]) % n\n            index = i\n    for i in range(len(a)):\n        if (a[0] + b[i]) % n == pref:\n            cache.append(i)\n    ans = b[:]\n    for ele in cache:\n        temp = []\n        for i in range(n):\n            temp.append((a[i] + b[ele % n]) % n)\n            ele += 1\n        ans = min(ans, temp)\n    print(' '.join(map(str, ans)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    pref = (a[0] + b[0]) % n\n    cache = []\n    index = 0\n    for i in range(1, n):\n        if (a[0] + b[i]) % n < pref:\n            pref = (a[0] + b[i]) % n\n            index = i\n    for i in range(len(a)):\n        if (a[0] + b[i]) % n == pref:\n            cache.append(i)\n    ans = b[:]\n    for ele in cache:\n        temp = []\n        for i in range(n):\n            temp.append((a[i] + b[ele % n]) % n)\n            ele += 1\n        if ans > temp:\n            ans = temp\n    print(' '.join(map(str, ans)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    pref = (a[0] + b[0]) % n\n    cache = []\n    index = 0\n    for i in range(1, n):\n        if (a[0] + b[i]) % n < pref:\n            pref = (a[0] + b[i]) % n\n            index = i\n    for i in range(len(a)):\n        if (a[0] + b[i]) % n == pref:\n            cache.append(i)\n    ans = b[:]\n    for ele in cache:\n        temp = []\n        for i in range(n):\n            temp.append((a[i] + b[ele % n]) % n)\n            ele += 1\n        for i in range(n):\n            if ans[i] == temp[i]:\n                continue\n            if ans[i] > temp[i]:\n                ans = temp\n            break\n    print(' '.join(map(str, ans)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    pref = (a[0] + b[0]) % n\n    cache = []\n    index = 0\n    for i in range(1, n):\n        if (a[0] + b[i]) % n < pref:\n            pref = (a[0] + b[i]) % n\n            index = i\n    for i in range(len(a)):\n        if (a[0] + b[i]) % n == pref:\n            cache.append(i)\n    ans = b\n    for ele in cache:\n        temp = []\n        for i in range(n):\n            temp.append((a[i] + b[ele % n]) % n)\n            ele += 1\n        for i in range(n):\n            if ans[i] == temp[i]:\n                continue\n            if ans[i] > temp[i]:\n                ans = temp\n            break\n    print(' '.join(map(str, ans)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    min_mod = (a[0] + b[0]) % n\n    for j in range(n):\n        min_mod = min(min_mod, (a[0] + b[j]) % n)\n    points = []\n    for j in range(n):\n        if (a[0] + b[j]) % n == min_mod:\n            points.append(j)\n    for k in range(n):\n        res = [(a[k] + b[(x + k) % n]) % n for x in points]\n        min_val = min(res)\n        if res.count(min_val) == 1:\n            res = points[res.index(min_val)]\n            print(*[(a[p] + b[(res + p) % n]) % n for p in range(n)])\n            break\n    else:\n        print(*[(a[p] + b[p]) % n for p in range(n)])", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    best = [0]\n    for i in range(n):\n        if (b[i] + a[0]) % n < (b[best[0]] + a[0]) % n:\n            while len(best) != 0:\n                best.pop()\n            best.append(i)\n        elif (b[i] + a[0]) % n == (b[best[0]] + a[0]) % n:\n            if i == best[0]:\n                pass\n            else:\n                best.append(i)\n        else:\n            pass\n    bestest = -1\n    if len(best) == 1:\n        bestest = best[0]\n    elif len(best) == 2:\n        for j in range(n):\n            if (b[(best[0] + j) % n] + a[j]) % n < (b[(best[1] + j) % n] + a[j]) % n:\n                bestest = best[0]\n                break\n            elif (b[(best[1] + j) % n] + a[j]) % n < (b[(best[0] + j) % n] + a[j]) % n:\n                bestest = best[1]\n                break\n            else:\n                continue\n    for j in range(n):\n        print((b[(bestest + j) % n] + a[j]) % n, end=' ')\n    print()"]