["for _ in range(int(input())):\n    (nd, kd) = map(int, input().split())\n    ad = list(map(int, input().split()))\n    td = 0\n    for i in range(nd):\n        for j in range(i + 1, nd):\n            if ad[i] > ad[j]:\n                td += 1\n    vd = 0\n    gd = kd * (kd - 1) // 2\n    ad.sort()\n    td = td * kd\n    for i in ad:\n        td += ad.index(i) * gd\n    print(td)", "for _ in range(int(input())):\n    (nd, kd) = map(int, input().split())\n    ad = list(map(int, input().split()))\n    td = 0\n    for i in range(nd):\n        for j in range(i + 1, nd):\n            if ad[i] > ad[j]:\n                td += 1\n    vd = 0\n    gd = kd * (kd - 1) // 2\n    ad.sort()\n    td = td * kd\n    for i in ad:\n        td += ad.index(i) * gd\n    print(td)", "for _ in range(int(input())):\n    (nd, kd) = map(int, input().split())\n    ad = list(map(int, input().split()))\n    td = 0\n    for i in range(nd):\n        for j in range(i + 1, nd):\n            if ad[i] > ad[j]:\n                td += 1\n    vd = 0\n    gd = kd * (kd - 1) // 2\n    ad.sort()\n    td = td * kd\n    for i in ad:\n        td += ad.index(i) * gd\n    print(td)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    t = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i] > a[j]:\n                t += 1\n    v = 0\n    g = k * (k - 1) // 2\n    a.sort()\n    t = t * k\n    for i in a:\n        t += a.index(i) * g\n    print(t)", "def pos(i, n, list1):\n    list2 = []\n    res = 0\n    for j in range(i, n):\n        if list1[j] < list1[i]:\n            list2.append(list1[j])\n            res += 1\n    return res\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = [int(x) for x in input().split()]\n    duplicate = list1.copy()\n    list2 = []\n    sum1 = 0\n    duplicate.sort()\n    for i in range(n):\n        sum1 += k * (k - 1) // 2 * duplicate.index(list1[i]) + pos(i, n, list1) * k\n    print(sum1)", "def pos(i, n, list1):\n    list2 = []\n    res = 0\n    for j in range(i, n):\n        if list1[j] < list1[i]:\n            list2.append(list1[j])\n            res += 1\n    return res\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = [int(x) for x in input().split()]\n    duplicate = list1.copy()\n    list2 = []\n    sum1 = 0\n    duplicate.sort()\n    for i in range(n):\n        sum1 += k * (k - 1) // 2 * duplicate.index(list1[i]) + pos(i, n, list1) * k\n    print(sum1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    t = []\n    p = []\n    c = 0\n    o = m * (m - 1) // 2\n    s = sorted(l)\n    for i in range(n):\n        t.append(s.index(l[i]))\n        p.append(sorted(l[i:]).index(l[i]))\n        c += t[i] * o + m * p[i]\n    print(c)", "tc = int(input())\nfor _ in range(tc):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    x = []\n    y = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i] > a[j]:\n                x.append([i, j])\n        for z in range(0, i):\n            if a[i] > a[z]:\n                y.append([i, z])\n    print(((k * k + k) * len(x) + (k * k - k) * len(y)) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        (a, b) = (0, 0)\n        for j in range(n):\n            if arr[i] > arr[j]:\n                if i > j:\n                    b += 1\n                elif i < j:\n                    a += 1\n        s += a * k * (k + 1) // 2 + b * k * (k - 1) // 2\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        (a, b) = (0, 0)\n        for j in range(n):\n            if arr[i] > arr[j]:\n                if i > j:\n                    b += 1\n                elif i < j:\n                    a += 1\n        s += a * k * (k + 1) // 2 + b * k * (k - 1) // 2\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        (a, b) = (0, 0)\n        for j in range(n):\n            if arr[i] > arr[j]:\n                if i > j:\n                    b += 1\n                elif i < j:\n                    a += 1\n        s += a * k * (k + 1) // 2 + b * k * (k - 1) // 2\n    print(s)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(N):\n        for j in range(i, N):\n            if arr[i] > arr[j]:\n                ans += 1\n    ans *= K\n    temp = N * N\n    for x in arr:\n        temp -= arr.count(x)\n    temp = temp * K * (K - 1) // 4\n    ans += temp\n    print(ans)", "t = int(input())\nwhile t:\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    arr = [int(x) for x in input().split()]\n    inv = {}\n    for i in range(n):\n        c = 0\n        for j in range(i + 1, n):\n            if arr[i] > arr[j]:\n                c += 1\n        inv[arr[i]] = c\n    arr.sort()\n    sm = [0]\n    ele = 0\n    for i in range(1, n):\n        if arr[i - 1] < arr[i]:\n            ele += 1\n        sm.append(ele)\n    fn = 0\n    for i in range(0, n):\n        x = inv[arr[i]]\n        if x < 0:\n            x = 0\n        fn += k * (2 * x + (k - 1) * sm[i]) / 2\n    print(int(fn))\n    t -= 1", "case = int(input())\nfor _ in range(case):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    inv = {}\n    for i in range(n):\n        count = 0\n        for j in range(i + 1, n):\n            if arr[i] > arr[j]:\n                count += 1\n        inv[arr[i]] = count\n    arr.sort()\n    smaller = [0]\n    elem = 0\n    for i in range(1, n):\n        if arr[i - 1] < arr[i]:\n            elem += 1\n        smaller.append(elem)\n    res = 0\n    for i in range(n):\n        d = smaller[i]\n        a = inv[arr[i]]\n        res += k / 2 * (2 * a + (k - 1) * d)\n    print(int(res))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l1 = []\n    l2 = []\n    s = ap = 0\n    for i in range(len(l)):\n        c1 = c2 = 0\n        for j in range(len(l)):\n            if l[i] > l[j]:\n                c1 += 1\n                if i < j:\n                    c2 += 1\n        l1.append(c1)\n        l2.append(c2)\n    for i in range(len(l1)):\n        if l1[i] == l2[i]:\n            x = l1[i] * k\n            ap = k / 2 * (2 * x + (k - 1) * -l1[i])\n            s += ap\n        else:\n            x = l1[i] * (k - 1) + l2[i]\n            ap = k / 2 * (2 * x + (k - 1) * -l1[i])\n            s += ap\n    print(int(s))", "def soln(n, k, arr):\n    a = [0] * n\n    d = [0] * n\n    for i in range(n):\n        a_count = total = 0\n        for j in range(i + 1, i + n):\n            cur = arr[j % n]\n            if cur < arr[i]:\n                if j < n:\n                    a_count += 1\n                total += 1\n        a[i] = a_count\n        d[i] = total\n    res = 0\n    for i in range(n):\n        res += k * (2 * a[i] + (k - 1) * d[i]) // 2\n    return res\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(soln(n, k, arr))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    cross_inversion = 0\n    auto_inversion = 0\n    for i in range(n):\n        for j in range(n):\n            if a[i] > a[j]:\n                cross_inversion += 1\n                if i < j:\n                    auto_inversion += 1\n    total_inversions = k * auto_inversion + k * (k - 1) // 2 * cross_inversion\n    print(total_inversions)", "try:\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        A = [int(i) for i in input().split()]\n        res = 0\n        for i in range(len(A)):\n            cnt1 = 0\n            cnt2 = 0\n            for j in range(len(A)):\n                if i < j:\n                    if A[i] < A[j]:\n                        cnt1 += 1\n                if i > j:\n                    if A[i] < A[j]:\n                        cnt2 += 1\n            res += cnt1 * k * (k - 1) // 2\n            res += cnt2 * k * (k + 1) // 2\n        print(res)\nexcept:\n    pass", "import sys\nfrom math import gcd, sqrt, log, ceil, floor\ntc = int(input().strip())\nfor t in range(tc):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        (a, b) = (0, 0)\n        for j in range(n):\n            if arr[i] > arr[j]:\n                if i > j:\n                    b += 1\n                elif i < j:\n                    a += 1\n        s += a * k * (k + 1) // 2 + b * k * (k - 1) // 2\n    print(s)", "import sys\nfrom math import gcd, sqrt, ceil, log\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    (n, k) = li()\n    a = li()\n    inv = 0\n    for j in range(n):\n        for i in range(j):\n            if a[i] > a[j]:\n                inv += k * (k + 1) // 2\n            if a[i] < a[j]:\n                inv += k * (k - 1) // 2\n    print(inv)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        (a, b) = (0, 0)\n        for j in range(n):\n            if arr[i] > arr[j]:\n                if i > j:\n                    b += 1\n                elif i < j:\n                    a += 1\n        s += a * k * (k + 1) // 2 + b * k * (k - 1) // 2\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m1 = []\n    n1 = []\n    for i in range(n - 1):\n        co = 0\n        for j in range(i + 1, n):\n            if l[i] > l[j]:\n                co += 1\n        m1.append(co)\n    m1.append(0)\n    for i in range(n):\n        co = 0\n        for j in range(n):\n            if l[i] > l[j]:\n                co += 1\n        n1.append(co)\n    ans = 0\n    for i in range(n):\n        (p1, p2) = (m1[i], n1[i])\n        import math\n        k1 = k / 2 * (2 * p1 + (k - 1) * p2)\n        ans += int(k1)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m1 = []\n    n1 = []\n    for i in range(n - 1):\n        co = 0\n        for j in range(i + 1, n):\n            if l[i] > l[j]:\n                co += 1\n        m1.append(co)\n    m1.append(0)\n    for i in range(n):\n        co = 0\n        for j in range(n):\n            if l[i] > l[j]:\n                co += 1\n        n1.append(co)\n    ans = 0\n    for i in range(n):\n        (p1, p2) = (m1[i], n1[i])\n        import math\n        k1 = k / 2 * (2 * p1 + (k - 1) * p2)\n        ans += int(k1)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    ar = [int(i) for i in input().split()]\n    c1 = 0\n    c2 = 0\n    for i in range(0, n):\n        for j in range(i + 1, n):\n            if ar[i] > ar[j]:\n                c1 += 1\n    c1 = c1 * k\n    for i in range(0, n):\n        for j in range(0, n):\n            if ar[i] > ar[j]:\n                c2 += 1\n    c2 = c2 * k * (k - 1) // 2\n    print(c1 + c2)\n    t -= 1", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    p = len(set(l))\n    s = 0\n    for i in range(n - 1):\n        for j in range(i, n):\n            if l[i] > l[j]:\n                s += 1\n    s1 = 0\n    l.sort(reverse=True)\n    for i in range(n - 1):\n        for j in range(i, n):\n            if l[i] > l[j]:\n                s1 += 1\n    base = k * s + k * (k - 1) // 2 * s1\n    print(base)", "def inversions(a):\n    lower = [0 for _ in a]\n    upper = [0 for _ in a]\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if a[i] > a[j]:\n                upper[i] += 1\n        for j in range(i):\n            if a[i] > a[j]:\n                lower[i] += 1\n    return (lower, upper)\nT = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    (low, upp) = inversions(a)\n    num = 0\n    for i in range(n):\n        num += k * (k + 1) // 2 * upp[i]\n        num += (k - 1) * k // 2 * low[i]\n    print(num)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(n - 1):\n        for j in range(i, n):\n            if a[i] > a[j]:\n                s += 1\n    a.sort(reverse=True)\n    s1 = 0\n    for i in range(n - 1):\n        for j in range(i, n):\n            if a[i] > a[j]:\n                s1 += 1\n    print(k * s + s1 * (k * (k - 1)) // 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(n - 1):\n        for j in range(i, n):\n            if a[i] > a[j]:\n                s += 1\n    a.sort(reverse=True)\n    s1 = 0\n    for i in range(n - 1):\n        for j in range(i, n):\n            if a[i] > a[j]:\n                s1 += 1\n    print(k * s + s1 * (k * (k - 1)) // 2)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[i] > l[j]:\n                x = k * (k + 1) // 2\n                c += x\n            elif l[i] < l[j]:\n                x = k * (k - 1) // 2\n                c += x\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    pairs = 0\n    tot = ((k - 1) ** 2 + (k - 1)) // 2\n    for i in range(n):\n        less = len([f for f in a[:i] if f > a[i]])\n        alls = len([g for g in a if g > a[i]])\n        pairs += k * less + alls * tot\n    print(pairs)", "import math\nfor _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    s = 0\n    for i in range(N):\n        cs = 0\n        for j in range(N):\n            if A[j] < A[i] and i != j:\n                cs += 1\n                if j > i:\n                    s += K\n        s += cs * K * (K - 1) / 2\n    print(int(s))", "t = int(input())\nfor i in range(t):\n    (n, u) = map(int, input().split(' '))\n    l = list(map(int, input().split(' ')))\n    x = []\n    y = []\n    for j in range(n):\n        c = 0\n        d = 0\n        for k in range(n):\n            if l[j] > l[k]:\n                d = d + 1\n            if l[j] > l[k] and j < k:\n                c = c + 1\n        y.append(d)\n        x.append(c)\n    ans = 0\n    for j in range(len(x)):\n        ans = ans + u / 2 * (2 * x[j] + (u - 1) * y[j])\n    print(int(ans))", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    (l, r) = (0, 0)\n    for i in range(N):\n        for j in range(i):\n            if A[i] > A[j]:\n                l += 1\n        for j in range(i + 1, N):\n            if A[i] > A[j]:\n                r += 1\n    print(l * K * (K - 1) // 2 + r * K * (K + 1) // 2)", "import sys\ninput = sys.stdin.readline\n\ndef first(l, k):\n    nb = 0\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[j] < l[i]:\n                nb += 1\n    return nb * k\n\ndef second(l, k):\n    out = []\n    res = 0\n    for i in range(len(l)):\n        nb = 0\n        for j in range(len(l)):\n            if l[j] < l[i]:\n                nb += 1\n        res += nb * k * (k - 1) // 2\n        out.append(nb)\n    return res\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    firs = first(a, k)\n    l = second(a, k)\n    print(l + firs)", "import sys\ninput = sys.stdin.readline\n\ndef first(l, k):\n    nb = 0\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[j] < l[i]:\n                nb += 1\n    return nb * k\n\ndef second(l, k):\n    out = []\n    res = 0\n    for i in range(len(l)):\n        nb = 0\n        for j in range(len(l)):\n            if l[j] < l[i]:\n                nb += 1\n        res += nb * k * (k - 1) // 2\n        out.append(nb)\n    return res\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    firs = first(a, k)\n    l = second(a, k)\n    print(l + firs)", "import sys\ninput = sys.stdin.readline\n\ndef first(l, k):\n    nb = 0\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[j] < l[i]:\n                nb += 1\n    return nb * k\n\ndef second(l, k):\n    out = []\n    res = 0\n    for i in range(len(l)):\n        nb = 0\n        for j in range(len(l)):\n            if l[j] < l[i]:\n                nb += 1\n        res += nb * k * (k - 1) // 2\n        out.append(nb)\n    return res\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    firs = first(a, k)\n    l = second(a, k)\n    print(l + firs)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[i] > l[j]:\n                x = k * (k + 1) // 2\n                c += x\n            elif l[i] < l[j]:\n                x = k * (k - 1) // 2\n                c += x\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i] > a[j]:\n                count += k * (k + 1) // 2\n            elif a[i] < a[j]:\n                count += k * (k - 1) // 2\n    print(count)\n    t -= 1", "t = int(input())\nwhile t != 0:\n    (n, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    count1 = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if list1[i] > list1[j]:\n                count1 += k * (k + 1) // 2\n            elif list1[i] < list1[j]:\n                count1 += k * (k - 1) // 2\n    print(count1)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] > arr[j]:\n                count += k * (k + 1) // 2\n            elif arr[i] < arr[j]:\n                count += k * (k - 1) // 2\n    print(count)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    num = list(map(int, input().split()))\n    C = 0\n    for i in range(N - 1):\n        for j in range(i + 1, N):\n            if num[i] > num[j]:\n                S = K * (K + 1) // 2\n                C = C + S\n            elif num[i] < num[j]:\n                S = K * (K - 1) // 2\n                C = C + S\n    print(C)", "def soln(n, k, arr):\n    a = [0] * n\n    d = [0] * n\n    for i in range(n):\n        a_count = total = 0\n        for j in range(i + 1, i + n):\n            cur = arr[j % n]\n            if cur < arr[i]:\n                if j < n:\n                    a_count += 1\n                total += 1\n        a[i] = a_count\n        d[i] = total\n    res = 0\n    for i in range(n):\n        res += k * (2 * a[i] + (k - 1) * d[i]) // 2\n    return res\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(soln(n, k, arr))", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    c = 0\n    for i in range(N - 1):\n        for j in range(i + 1, N):\n            if A[i] > A[j]:\n                X = K * (K + 1) // 2\n                c += X\n            elif A[i] < A[j]:\n                X = K * (K - 1) // 2\n                c += X\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[i] > l[j]:\n                s = k * (k + 1) // 2\n                c += s\n            elif l[i] < l[j]:\n                s = k * (k - 1) // 2\n                c += s\n    print(c)", "t = input()\nt = int(t)\n\ndef merge_inv(arr, l, r):\n    if l == r:\n        return 0\n    if r == l + 1:\n        if arr[r] >= arr[l]:\n            return 0\n        else:\n            (arr[r], arr[l]) = (arr[l], arr[r])\n            return 1\n    mid = (l + r) // 2\n    inv1 = merge_inv(arr, l, mid)\n    inv2 = merge_inv(arr, mid, r)\n    merge = []\n    i = l\n    j = mid\n    inv = 0\n    while i < mid and j <= r:\n        if arr[i] <= arr[j]:\n            merge.append(arr[i])\n            i += 1\n        else:\n            merge.append(arr[j])\n            inv += mid - i\n            j += 1\n    if i >= mid:\n        while j <= r:\n            merge.append(arr[j])\n            j += 1\n    elif j > r:\n        while i < mid:\n            merge.append(arr[i])\n            i += 1\n    arr[l:r + 1] = merge\n    return int(inv1 + inv2 + inv)\nwhile t:\n    t = t - 1\n    n_k = input()\n    n_k = n_k.split(' ')\n    n = int(n_k[0])\n    k = int(n_k[1])\n    arr = input()\n    arr = arr.split(' ')\n    arr = list(map(int, arr))\n    inv = merge_inv(arr, 0, n - 1)\n    total_inv = inv * k\n    num_small = [0]\n    for i in range(1, n):\n        if arr[i] > arr[i - 1]:\n            ans = num_small[-1] + 1\n        else:\n            ans = num_small[-1]\n        num_small.append(ans)\n    sum_small = sum(num_small)\n    total_inv += k * (k - 1) * sum_small / 2\n    print(int(total_inv))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    total = []\n    after = []\n    for i in range(n):\n        c = 0\n        for j in range(i + 1, n):\n            if a[i] > a[j]:\n                c += 1\n        after.append(c)\n        for j in range(i):\n            if a[i] > a[j]:\n                c += 1\n        total.append(c)\n    c = 0\n    for i in range(n):\n        c += (k - 1) * k * total[i] // 2 + k * after[i]\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    total = 0\n    for i in range(n):\n        current = arr[i]\n        before = 0\n        for j in arr[:i]:\n            if j < current:\n                before += 1\n        after = 0\n        for j in arr[i + 1:]:\n            if j < current:\n                after += 1\n        num = before * k * (k - 1) // 2 + after * k * (k + 1) // 2\n        total += num\n    print(total)", "import math\n\ndef solve(input_array, k):\n    out = 0\n    k_fact = k * (k + 1) / 2\n    for (i, x) in enumerate(input_array):\n        ci = 0\n        coi = 0\n        for (j, y) in enumerate(input_array):\n            if x > y:\n                ci += 1\n                if j < i:\n                    coi += 1\n        ans = k_fact * ci - coi * k\n        out = out + ans\n    return int(out)\nt = int(input())\nfor r in range(1, t + 1):\n    (n, k) = list(map(int, input().split(' ')))\n    input_array = list(map(int, input().split(' ')))\n    result = solve(input_array, k)\n    print(result)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    effn = n * k\n    c = 0\n    for x in range(n):\n        for y in range(n):\n            if l[y] < l[x]:\n                if y > x:\n                    a = (effn - y - 1) // n + 1\n                else:\n                    a = (effn - y - 1) // n\n                c += a * (a + 1) // 2\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = 0\n    a = list(map(int, input().split()))\n    for (i, e) in enumerate(a):\n        left = right = 0\n        for j in range(n):\n            if a[j] < e and j < i:\n                left += 1\n            elif a[j] < e and j > i:\n                right += 1\n        leftres = k * (k - 1) * left // 2\n        rightres = k * (k + 1) * right // 2\n        ans += leftres + rightres\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    arr1 = [0] * n\n    arr2 = [0] * n\n    i = 0\n    while i < n:\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                arr2[i] += 1\n        i += 1\n    i = 0\n    while i < n:\n        for j in range(n):\n            if l[j] < l[i]:\n                arr1[i] += 1\n        i += 1\n    ans = 0\n    for i in range(n):\n        ans += int(k / 2 * (2 * arr2[i] + (k - 1) * arr1[i]))\n    print(ans)", "def a_sum(first, last, n):\n    return (first + last) * n // 2\n\ndef inv_base(numbers):\n    inv_count = 0\n    for (i, ni) in enumerate(numbers):\n        for (n, nj) in enumerate(numbers[i + 1:]):\n            if ni > nj:\n                inv_count += 1\n    return inv_count\n\ndef inv_rep(n, k, numbers):\n    d1 = inv_base(sorted(numbers, reverse=True))\n    s = a_sum(0, (k - 1) * d1, k)\n    return s\n\ndef inv_whole(n, k, numbers):\n    return k * inv_base(numbers) + inv_rep(n, k, numbers)\nfor _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    numbers = [int(x) for x in input().split()]\n    print(inv_whole(n, k, numbers))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    ans = 0\n    for i in range(n):\n        (next, prev, temp) = (0, 0, 0)\n        for j in range(i, n):\n            if arr[i] > arr[j]:\n                next += 1\n        j = i\n        while j >= 0:\n            if arr[i] > arr[j]:\n                prev += 1\n            j -= 1\n        temp = prev * k * (k - 1) / 2 + next * k * (k + 1) / 2\n        ans += temp\n    print(int(ans))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    ans = 0\n    for i in range(n):\n        (next, prev, temp) = (0, 0, 0)\n        for j in range(i, n):\n            if arr[i] > arr[j]:\n                next += 1\n        j = i\n        while j >= 0:\n            if arr[i] > arr[j]:\n                prev += 1\n            j -= 1\n        temp = prev * k * (k - 1) / 2 + next * k * (k + 1) / 2\n        ans += temp\n    print(int(ans))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = list(set(arr))\n    s.sort(reverse=True)\n    c = 0\n    c1 = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if arr[j] < arr[i]:\n                c += 1\n        for j in range(i - 1, -1, -1):\n            if arr[j] < arr[i]:\n                c1 += 1\n    i += 1\n    for j in range(i - 1, -1, -1):\n        if arr[j] < arr[i]:\n            c1 += 1\n    x = c * k * (k + 1) // 2\n    y = c1 * k * (k - 1) // 2\n    print(x + y)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        all = 0\n        rg = 0\n        for j in range(0, i):\n            if a[j] < a[i]:\n                all += 1\n        for j in range(i + 1, n):\n            if a[j] < a[i]:\n                all += 1\n                rg += 1\n        ans += int(all * (k * (k - 1) / 2))\n        ans += int(rg * k)\n    print(ans)\n    t -= 1", "test = int(input())\nfor _ in range(test):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if arr[i] > arr[j]:\n                res[i] += 1\n    a1 = len(set(arr))\n    a2 = a1 * (a1 - 1) // 2\n    print(k * sum(res) + a2 * (k * (k - 1)) // 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    x1 = [0] * n\n    for i in range(1, n):\n        for j in range(i):\n            if l[i] > l[j]:\n                x1[i] += 1\n    x2 = [0] * n\n    for i in range(n - 2, -1, -1):\n        for j in range(n - 1, i, -1):\n            if l[i] > l[j]:\n                x2[i] += 1\n    res = 0\n    for i in range(n):\n        res += (k - 1) * k // 2 * x1[i] + (k + 1) * k // 2 * x2[i]\n    print(res)", "t = int(input())\nfor i in range(0, t):\n    a = list(map(int, input().split()))\n    n = a[0]\n    k = a[1]\n    one = 0\n    two = 0\n    a = list(map(int, input().split()))\n    for i in range(0, n):\n        for j in range(i + 1, n):\n            if a[i] > a[j]:\n                one = one + 1\n            elif a[i] < a[j]:\n                two = two + 1\n    ans = k * (one * (k + 1) + two * (k - 1)) / 2\n    print(int(ans))", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    (c, d) = (0, 0)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if x[i] > x[j]:\n                c += 1\n            if x[i] < x[j]:\n                d += 1\n    ans = (k + 1) * k * c // 2 + (k - 1) * k * d // 2\n    print(ans)", "T = int(input())\nwhile T > 0:\n    (N, K) = map(int, input().split())\n    arr = []\n    inp = input().split()\n    for i in inp:\n        arr.append(i)\n    x = int(0)\n    for i in range(0, N):\n        for j in range(i + 1, N):\n            if int(arr[i]) > int(arr[j]):\n                x = x + 1\n    y = int(0)\n    for i in range(0, N):\n        for j in range(i + 1, N):\n            if int(arr[i]) < int(arr[j]):\n                y = y + 1\n    res = int((K + 1) * K * x * 0.5) + int((K - 1) * K * y * 0.5)\n    print(res)\n    T = T - 1", "T = int(input())\nwhile T > 0:\n    (N, K) = map(int, input().split())\n    arr = []\n    inp = input().split()\n    for i in inp:\n        arr.append(i)\n    x = int(0)\n    for i in range(0, N):\n        for j in range(i + 1, N):\n            if int(arr[i]) > int(arr[j]):\n                x = x + 1\n    y = int(0)\n    for i in range(0, N):\n        for j in range(i + 1, N):\n            if int(arr[i]) < int(arr[j]):\n                y = y + 1\n    res = int((K + 1) * K * x * 0.5) + int((K - 1) * K * y * 0.5)\n    print(res)\n    T = T - 1", "T = int(input(''))\nu = []\nfor i in range(T):\n    p = list(map(int, input().split()))\n    n = p[0]\n    k = p[1]\n    A = list(map(int, input().split()))\n    p = 0\n    q = 0\n    for i in range(n):\n        for j in range(i, n):\n            if A[i] > A[j]:\n                p += 1\n            elif A[i] < A[j]:\n                q += 1\n    u += [int(p * k * (k + 1) / 2 + q * k * (k - 1) / 2)]\nfor i in u:\n    print(i)", "T = int(input(''))\nfor i in range(T):\n    p = list(map(int, input().split()))\n    n = p[0]\n    k = p[1]\n    A = list(map(int, input().split()))\n    p = 0\n    q = 0\n    for i in range(n):\n        for j in range(i, n):\n            if A[i] > A[j]:\n                p += 1\n            elif A[i] < A[j]:\n                q += 1\n    print(int(p * k * (k + 1) / 2 + q * k * (k - 1) / 2))", "T = int(input(''))\nfor i in range(T):\n    p = list(map(int, input().split()))\n    n = p[0]\n    k = p[1]\n    A = list(map(int, input().split()))\n    p = 0\n    q = 0\n    for i in range(n):\n        for j in range(i, n):\n            if A[i] > A[j]:\n                p += 1\n            elif A[i] < A[j]:\n                q += 1\n    print(int((p * k * (k + 1) + q * k * (k - 1)) / 2))", "T = int(input(''))\nu = []\nfor i in range(T):\n    p = list(map(int, input().split()))\n    n = p[0]\n    k = p[1]\n    A = list(map(int, input().split()))\n    p = 0\n    q = 0\n    for i in range(n):\n        for j in range(i, n):\n            if A[i] > A[j]:\n                p += 1\n            elif A[i] < A[j]:\n                q += 1\n    print(int(p * k * (k + 1) / 2 + q * k * (k - 1) / 2))", "T = int(input(''))\nu = []\nfor i in range(T):\n    p = list(map(int, input().split()))\n    n = p[0]\n    k = p[1]\n    A = list(map(int, input().split()))\n    p = 0\n    q = 0\n    for i in range(n):\n        for j in range(i, n):\n            if A[i] > A[j]:\n                p += 1\n            elif A[i] < A[j]:\n                q += 1\n    u += [int(p * k * (k + 1) / 2 + q * k * (k - 1) / 2)]\nfor i in u:\n    print(i)", "T = int(input(''))\nu = []\nfor i in range(T):\n    p = list(map(int, input().split()))\n    n = p[0]\n    k = p[1]\n    A = list(map(int, input().split()))\n    p = 0\n    q = 0\n    for i in range(n):\n        for j in range(i, n):\n            if A[i] > A[j]:\n                p += 1\n            elif A[i] < A[j]:\n                q += 1\n    u += [int(p * k * (k + 1) / 2 + q * k * (k - 1) / 2)]\nfor i in u:\n    print(i)", "def getSum(v):\n    return v * (v - 1) // 2\ntn = int(input())\nfor _ in range(tn):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s1 = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] > arr[j]:\n                s1 += 1\n    s2 = getSum(len(set(arr)))\n    print(k * s1 + s2 * getSum(k))", "def getSum(v):\n    return v * (v - 1) // 2\ntn = int(input())\nfor _ in range(tn):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s1 = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] > arr[j]:\n                s1 += 1\n    s2 = getSum(len(set(arr)))\n    print(k * s1 + s2 * getSum(k))", "tn = int(input())\nfor _ in range(tn):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    di1 = [0] * n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] > arr[j]:\n                di1[i] += 1\n    s1 = len(set(arr))\n    s2 = s1 * (s1 - 1) // 2\n    print(k * sum(di1) + s2 * (k * (k - 1)) // 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(len(arr)):\n        for j in range(i):\n            if arr[j] > arr[i]:\n                ans += 1\n    sarr = sorted(arr, reverse=True)\n    tans = 0\n    for i in range(1, len(sarr)):\n        if sarr[i - 1] != sarr[i]:\n            tans += i\n    k -= 1\n    print(ans * (k + 1) + tans * (k * (k + 1) // 2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    arr1 = [0] * n\n    arr2 = [0] * n\n    i = 0\n    while i < n:\n        for j in range(i + 1, n):\n            if l[j] < l[i]:\n                arr2[i] += 1\n        i += 1\n    i = 0\n    while i < n:\n        for j in range(n):\n            if l[j] < l[i]:\n                arr1[i] += 1\n        i += 1\n    ans = 0\n    for i in range(n):\n        ans += int(k / 2 * (2 * arr2[i] + (k - 1) * arr1[i]))\n    print(ans)", "for i in range(int(input())):\n    x = 0\n    y = 0\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        for j in range(i, n):\n            if a[i] > a[j]:\n                x = x + 1\n            elif a[j] > a[i]:\n                y = y + 1\n    print(x * k * (k + 1) // 2 + y * k * (k - 1) // 2)", "t = int(input())\nwhile t > 0:\n    x = 0\n    y = 0\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    for i in range(n):\n        for j in range(i, n):\n            if a[i] > a[j]:\n                x = x + 1\n            elif a[j] > a[i]:\n                y = y + 1\n    print(x * k * (k + 1) // 2 + y * k * (k - 1) // 2)\n    t = t - 1", "import math\n\ndef countInversions(arr, n):\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] > arr[j]:\n                count += 1\n    return count\n\ndef answer_finder():\n    (n, k) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    inversions = countInversions(arr, n)\n    answer = 0\n    answer += inversions * k\n    for i in range(n):\n        rem_count = 0\n        for j in range(n):\n            if arr[i] > arr[j]:\n                rem_count += 1\n        answer += math.floor(k * (k - 1) / 2) * rem_count\n    print(answer)\ntest_cases = int(input())\nwhile test_cases:\n    test_cases -= 1\n    answer_finder()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    inv = 0\n    for i in range(len(A)):\n        for j in range(i + 1, len(A)):\n            if A[i] > A[j]:\n                inv += 1\n    ans = k * inv\n    smallcount = 0\n    for i in range(len(A)):\n        for j in range(len(A)):\n            if A[i] > A[j]:\n                smallcount += 1\n    ans += k * (k - 1) // 2 * smallcount\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    l = list(map(int, input().split()))[:n]\n    ct = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[i] > l[j]:\n                ct = ct + k * (k + 1) // 2\n            elif l[i] < l[j]:\n                ct = ct + k * (k - 1) // 2\n            else:\n                continue\n    print(ct)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    invCount = 0\n    ans = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] > arr[j]:\n                invCount += 1\n    ans = k * invCount\n    for i in range(n):\n        smallNo = 0\n        for j in range(n):\n            if arr[j] < arr[i]:\n                smallNo += 1\n        ans += k * (k - 1) // 2 * smallNo\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))[:n]\n    ans = 0\n    for i in range(0, n):\n        t = int(0)\n        y = int(0)\n        for r in range(0, i):\n            if a[r] < a[i]:\n                t += 1\n        for j in range(i, n):\n            if a[i] > a[j]:\n                y += 1\n        ans += (2 * y + (t + y) * (k - 1)) * k / 2\n    print(int(ans))", "t = int(input())\nfor i in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    l = list(map(int, input().split()))[:n]\n    ct = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[i] > l[j]:\n                ct = ct + k * (k + 1) // 2\n            elif l[i] < l[j]:\n                ct = ct + (k - 1) * k // 2\n            else:\n                continue\n    print(ct)", "t = int(input())\nfor i in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    l = list(map(int, input().split()))[:n]\n    ct = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[i] > l[j]:\n                ct = ct + k * (k + 1) // 2\n            elif l[i] < l[j]:\n                ct = ct + (k - 1) * k // 2\n            else:\n                continue\n    print(ct)", "T = int(input())\nfor _ in range(T):\n    (n, k) = tuple(map(int, input().split()))\n    seq = list(map(int, input().split()))\n    totInv = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if seq[i] < seq[j]:\n                totInv += (k - 1) * k // 2\n            elif seq[i] > seq[j]:\n                totInv += k * (k + 1) // 2\n            else:\n                continue\n    print(totInv)", "def mergeSort(nums, count):\n    if len(nums) == 1:\n        return nums\n    mid = len(nums) // 2\n    a = mergeSort(nums[:mid], count)\n    b = mergeSort(nums[mid:], count)\n    a = merge(a, b, count)\n    return a\n\ndef merge(a, b, count):\n    ans = []\n    j = len(a)\n    s = len(b)\n    pt1 = pt2 = 0\n    c = 0\n    while pt1 < j and pt2 < s:\n        if a[pt1] <= b[pt2]:\n            ans.append(a[pt1])\n            pt1 += 1\n            count[0] += c\n            c = pt2\n        else:\n            ans.append(b[pt2])\n            pt2 += 1\n            c += 1\n    while pt1 < j:\n        ans.append(a[pt1])\n        count[0] += len(b)\n        pt1 += 1\n    while pt2 < s:\n        ans.append(b[pt2])\n        pt2 += 1\n    return ans\nt = int(input())\nfor test in range(t):\n    count = [0]\n    (n, k) = list(map(int, input().split()))\n    nums = list(map(int, input().split()))\n    nums = mergeSort(nums, count)\n    small = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if nums[i] < nums[j]:\n                small += 1\n    total = 0\n    total += count[0] * k\n    s = (k - 1) * (small + (k - 1) * small) // 2\n    total += s\n    print(total)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    inv = 0\n    smallbeforeMe = [0] * n\n    smallafterMe = [0] * n\n    largebeforeMe = [0] * n\n    largeafterMe = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if a[i] > a[j]:\n                if i > j:\n                    smallbeforeMe[i] += 1\n                else:\n                    smallafterMe[i] += 1\n            if a[i] < a[j]:\n                if i > j:\n                    largebeforeMe[i] += 1\n                else:\n                    largeafterMe[i] += 1\n    print(sum(list(map(lambda x: x * (k * (k + 1) // 2), smallafterMe)) + list(map(lambda x: x * (k * (k - 1) // 2), smallbeforeMe))))", "a = int(input())\nfor i in range(a):\n    [N, K] = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    count = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            if arr[i] > arr[j]:\n                count += 1\n    arr.sort()\n    dict = {}\n    for i in range(N):\n        if arr[i] not in dict.keys():\n            z = 0\n            for j in range(N):\n                if arr[j] > arr[i]:\n                    z += 1\n            dict[arr[i]] = z\n    answer = 0\n    for i in range(N):\n        answer += dict[arr[i]]\n    answer = answer * K * (K - 1) // 2\n    print(int(count * K + answer))", "t = int(input())\nfor i in range(t):\n    [N, K] = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    count = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            if arr[i] > arr[j]:\n                count += 1\n    arr.sort()\n    dict = {}\n    for i in range(N):\n        if arr[i] not in dict.keys():\n            z = 0\n            for j in range(N):\n                if arr[j] > arr[i]:\n                    z += 1\n            dict[arr[i]] = z\n    ans = 0\n    for i in range(N):\n        ans += dict[arr[i]]\n    ans = ans * K * (K - 1) // 2\n    print(int(count * K + ans))", "def main():\n    for _ in range(int(input())):\n        (N, k) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        res = 0\n        for i in range(N):\n            v = arr[i]\n            for j in range(i):\n                if arr[j] < v:\n                    res += (k - 1) * k // 2\n            for j in range(i + 1, N):\n                if arr[j] < v:\n                    res += k * (k + 1) // 2\n        print(res)\nmain()", "def main():\n    for _ in range(int(input())):\n        (N, k) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        res = 0\n        for i in range(N):\n            v = arr[i]\n            for j in range(i):\n                if arr[j] < v:\n                    res += (k - 1) * k // 2\n            for j in range(i + 1, N):\n                if arr[j] < v:\n                    res += k * (k + 1) // 2\n        print(res)\nmain()", "T = int(input())\nfor t in range(T):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    x = 0\n    for i in range(N - 1):\n        for j in range(i + 1, N):\n            if A[i] > A[j]:\n                x += 1\n    y = []\n    for i in range(N):\n        z = 0\n        for j in range(N):\n            if A[i] > A[j]:\n                z += 1\n        y.append(z)\n    if K == 1:\n        print(x)\n    else:\n        print(x * K + sum(y) * K * (K - 1) // 2)", "def swap(arr, x, y):\n    t = arr[x]\n    arr[x] = arr[y]\n    arr[y] = t\n    return arr\nt = int(input())\nwhile t > 0:\n    t -= 1\n    ip = input().split()\n    (n, k) = [int(x) for x in ip]\n    ip = input().split()\n    a = [int(x) for x in ip]\n    b = [x for x in a]\n    cnt = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i] > a[j]:\n                cnt += 1\n            if b[i] > b[j]:\n                b = swap(b, i, j)\n    q = k * (k - 1) // 2\n    cnt1 = 0\n    x = 0\n    for i in range(n - 1):\n        if b[i] == b[i + 1]:\n            x += 1\n        else:\n            x += 1\n            cnt1 += (n - i - 1) * x\n            x = 0\n    print(k * cnt + q * cnt1)", "def swap(arr, x, y):\n    t = arr[x]\n    arr[x] = arr[y]\n    arr[y] = t\n    return arr\nt = int(input())\nwhile t > 0:\n    t -= 1\n    ip = input().split()\n    (n, k) = [int(x) for x in ip]\n    ip = input().split()\n    a = [int(x) for x in ip]\n    b = [x for x in a]\n    cnt = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i] > a[j]:\n                cnt += 1\n            if b[i] > b[j]:\n                b = swap(b, i, j)\n    q = k * (k - 1) // 2\n    cnt1 = 0\n    x = 0\n    for i in range(n - 1):\n        if b[i] == b[i + 1]:\n            x += 1\n        else:\n            x += 1\n            cnt1 += (n - i - 1) * x\n            x = 0\n    print(k * cnt + q * cnt1)", "def swap(arr, x, y):\n    t = arr[x]\n    arr[x] = arr[y]\n    arr[y] = t\n    return arr\nt = int(input())\nwhile t > 0:\n    t -= 1\n    ip = input().split()\n    (n, k) = [int(x) for x in ip]\n    ip = input().split()\n    a = [int(x) for x in ip]\n    b = [x for x in a]\n    cnt = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i] > a[j]:\n                cnt += 1\n            if b[i] > b[j]:\n                b = swap(b, i, j)\n    q = k * (k - 1) // 2\n    cnt1 = 0\n    x = 0\n    for i in range(n - 1):\n        if b[i] == b[i + 1]:\n            x += 1\n        else:\n            x += 1\n            cnt1 += (n - i - 1) * x\n            x = 0\n    print(k * cnt + q * cnt1)", "from bisect import bisect_left\n\ndef count(nums):\n    res = []\n    seq = sorted(nums)\n    for num in nums:\n        pos = bisect_left(seq, num)\n        res.append(pos)\n        seq.pop(pos)\n    return sum(res)\nfor t in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    nums = list(map(int, input().split(' ')))\n    inv = count(nums)\n    smaller = 0\n    for i in range(len(nums)):\n        for j in range(len(nums)):\n            if nums[i] > nums[j]:\n                smaller += 1\n    tinv = k * (k - 1) / 2 * smaller + k * inv\n    print(int(tinv))", "from bisect import bisect_left\n\ndef count(nums):\n    res = []\n    seq = sorted(nums)\n    for num in nums:\n        pos = bisect_left(seq, num)\n        res.append(pos)\n        seq.pop(pos)\n    return sum(res)\nfor t in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    nums = list(map(int, input().split(' ')))\n    inv = count(nums)\n    smaller = 0\n    for i in range(len(nums)):\n        for j in range(len(nums)):\n            if nums[i] > nums[j]:\n                smaller += 1\n    tinv = k * (k - 1) / 2 * smaller + k * inv\n    print(int(tinv))", "from bisect import bisect_left\n\ndef count(nums):\n    res = []\n    seq = sorted(nums)\n    for num in nums:\n        pos = bisect_left(seq, num)\n        res.append(pos)\n        seq.pop(pos)\n    return sum(res)\nfor t in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    nums = list(map(int, input().split(' ')))\n    inv = count(nums)\n    smaller = 0\n    for i in range(len(nums)):\n        for j in range(len(nums)):\n            if nums[i] > nums[j]:\n                smaller += 1\n    tinv = k * (k - 1) / 2 * smaller + k * inv\n    print(int(tinv))", "from bisect import bisect_left\n\ndef count(nums):\n    res = []\n    seq = sorted(nums)\n    for num in nums:\n        pos = bisect_left(seq, num)\n        res.append(pos)\n        seq.pop(pos)\n    return sum(res)\nfor t in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    nums = list(map(int, input().split(' ')))\n    inv = count(nums)\n    smaller = 0\n    for i in range(len(nums)):\n        for j in range(len(nums)):\n            if nums[i] > nums[j]:\n                smaller += 1\n    tinv = k * (k - 1) / 2 * smaller + k * inv\n    print(int(tinv))", "from bisect import bisect_left\n\ndef count(nums):\n    res = []\n    seq = sorted(nums)\n    for num in nums:\n        pos = bisect_left(seq, num)\n        res.append(pos)\n        seq.pop(pos)\n    return sum(res)\nfor t in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    nums = list(map(int, input().split(' ')))\n    inv = count(nums)\n    smaller = 0\n    for i in range(len(nums)):\n        for j in range(len(nums)):\n            if nums[i] > nums[j]:\n                smaller += 1\n    tinv = k * (k - 1) / 2 * smaller + k * inv\n    print(int(tinv))", "from bisect import bisect_left\n\ndef count(nums):\n    res = []\n    seq = sorted(nums)\n    for num in nums:\n        pos = bisect_left(seq, num)\n        res.append(pos)\n        seq.pop(pos)\n    return sum(res)\nfor t in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    nums = list(map(int, input().split(' ')))\n    inv = count(nums)\n    smaller = 0\n    for i in range(len(nums)):\n        for j in range(len(nums)):\n            if nums[i] > nums[j]:\n                smaller += 1\n    tinv = k * (k - 1) / 2 * smaller + k * inv\n    print(int(tinv))"]