["t = int(input())\nfor i in range(t):\n    (n, k, f) = map(int, input().split())\n    l = []\n    for j in range(n):\n        (a, b) = map(int, input().split())\n        l.append((a, b))\n    l.sort()\n    (a, b) = l[0]\n    if a > 0:\n        ans += a\n    else:\n        ans = 0\n    s = b\n    for x in range(1, n):\n        (a, b) = l[x]\n        if a >= s:\n            ans += a - s\n        if s < b:\n            s = b\n    if s < f:\n        ans += f - s\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k, f) = map(int, input().split())\n    l = []\n    for j in range(n):\n        (a, b) = map(int, input().split())\n        l.append((a, b))\n    l.sort()\n    (a, b) = l[0]\n    if a > 0:\n        ans += a\n    else:\n        ans = 0\n    s = b\n    for x in range(1, n):\n        (a, b) = l[x]\n        if a >= s:\n            ans += a - s\n        if s < b:\n            s = b\n    if s < f:\n        ans += f - s\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k, f) = map(int, input().split())\n    l = []\n    for j in range(n):\n        (a, b) = map(int, input().split())\n        l.append((a, b))\n    l.sort()\n    (a, b) = l[0]\n    if a > 0:\n        ans += a\n    else:\n        ans = 0\n    s = b\n    for x in range(1, n):\n        (a, b) = l[x]\n        if a >= s:\n            ans += a - s\n        if s < b:\n            s = b\n    if s < f:\n        ans += f - s\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    (n, k, f) = map(int, input().split())\n    L = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        L.append((a, b))\n    L.sort()\n    (a, b) = L[0]\n    if a > 0:\n        ans += a\n    else:\n        ans = 0\n    end = b\n    for i in range(1, n):\n        (a, b) = L[i]\n        if a >= end:\n            ans += a - end\n        if end < b:\n            end = b\n    if end < f:\n        ans += f - end\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k, f) = (int(i) for i in input().split())\n    a = []\n    for i in range(n):\n        a.append([int(x) for x in input().split()])\n    a.sort()\n    diff = a[0][0]\n    end = a[0][-1]\n    for i in range(1, n):\n        diff += max(0, a[i][0] - end)\n        end = max(end, a[i][-1])\n    diff += f - end\n    if diff >= k:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k, f) = (int(i) for i in input().split())\n    l = []\n    for i in range(n):\n        l.append(tuple(map(int, input().split())))\n    l = sorted(l, key=lambda x: x[0])\n    end = l[0][1]\n    time = l[0][0]\n    for i in range(1, n):\n        if l[i][0] >= end:\n            time += l[i][0] - end\n        end = max(end, l[i][1])\n    time += f - end\n    if time >= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k, f) = map(int, input().split())\n    l = []\n    for i in range(n):\n        (s, e) = map(int, input().split())\n        l.append((s, e))\n    l.sort()\n    stack = [(0, 0)]\n    for i in l:\n        if stack[-1][1] < i[0]:\n            stack.append(i)\n        if stack[-1][1] > i[0]:\n            if stack[-1][1] >= i[1]:\n                continue\n            else:\n                stack[-1] = (stack[-1][0], i[1])\n        if stack[-1][1] == i[0]:\n            stack[-1] = (stack[-1][0], i[1])\n    c = 0\n    for i in stack:\n        c += i[1] - i[0]\n    diff = f - c\n    if diff < k:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, k, f) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(tuple(map(int, input().split())))\n    l = sorted(l, key=lambda x: x[0])\n    end = l[0][1]\n    time = l[0][0]\n    for i in range(1, n):\n        if l[i][0] >= end:\n            time += l[i][0] - end\n        end = max(end, l[i][1])\n    time += f - end\n    if time >= k:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    arr.sort(key=lambda x: x[0])\n    sub = arr[0][0]\n    mx = arr[0][1]\n    for i in range(1, len(arr)):\n        if mx < arr[i][0]:\n            sub += arr[i][0] - mx\n            mx = arr[i][1]\n        else:\n            mx = max(mx, arr[i][1])\n    if mx < f:\n        sub += f - mx\n    if sub >= k:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    arr.sort(key=lambda x: x[0])\n    sub = arr[0][0]\n    mx = arr[0][1]\n    for i in range(1, len(arr)):\n        if mx < arr[i][0]:\n            sub += arr[i][0] - mx\n            mx = arr[i][1]\n        else:\n            mx = max(mx, arr[i][1])\n    if mx < f:\n        sub += f - mx\n    if sub >= k:\n        print('YES')\n    else:\n        print('NO')", "for u in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    x = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x.append([a, b])\n    x = sorted(x)\n    y = [x[0]]\n    for i in range(1, n):\n        if x[i - 1][1] > x[i][0]:\n            y[-1][1] = max(x[i][1], x[i - 1][1])\n        else:\n            y.append(x[i])\n    time = 0\n    for i in range(len(y)):\n        time += y[i][1] - y[i][0]\n    time = f - time\n    if time >= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (N, K, F) = map(int, input().split())\n    times = []\n    for _ in range(N):\n        (start, end) = map(int, input().split())\n        times.append((start, 'a'))\n        times.append((end, 'b'))\n    times.sort()\n    prev = 0\n    count = 0\n    total = 0\n    for (i, item) in enumerate(times):\n        if count == 0:\n            total += item[0] - prev\n        if item[1] == 'a':\n            count += 1\n        else:\n            count -= 1\n            prev = item[0]\n    total += F - prev\n    if total >= K:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k, f) = list(map(int, input().split()))\n    dif = 0\n    max_inv_p = 0\n    total_ct = 0\n    arr = []\n    for j in range(n):\n        (s, e) = map(int, input().split())\n        arr.append([s, e])\n    arr.sort()\n    for (s, e) in arr:\n        if s >= max_inv_p:\n            diff = s - max_inv_p\n            total_ct += diff\n        if e > max_inv_p:\n            max_inv_p = e\n    diff = f - max_inv_p\n    total_ct += diff\n    if total_ct >= k:\n        print('YES')\n    else:\n        print('NO')", "def final(arr):\n    if len(arr) == 0:\n        return []\n    arr.sort()\n    temp = []\n    temp.append(arr[0])\n    for i in range(1, len(arr)):\n        last_element = temp[len(temp) - 1]\n        if last_element[1] >= arr[i][0]:\n            last_element[1] = max(arr[i][1], last_element[1])\n            temp.pop(len(temp) - 1)\n            temp.append(last_element)\n        else:\n            temp.append(arr[i])\n    return temp\nfor i in range(int(input())):\n    (n, k, f) = [int(x) for x in input().split()]\n    arr1 = []\n    cnt = 0\n    for i in range(n):\n        i = [int(x) for x in input().split()]\n        arr1.append(i)\n    looking = final(arr1)\n    for i in range(len(looking)):\n        cnt += looking[i][1] - looking[i][0]\n    if f - cnt >= k:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    a = []\n    for i in range(n):\n        x = list(map(int, input().split()))\n        a.append(x)\n    a.sort()\n    fl = []\n    s = a[0][0]\n    e = a[0][1]\n    for (x, y) in a:\n        if x <= e:\n            e = max(y, e)\n        else:\n            fl.append([s, e])\n            s = x\n            e = y\n    fl.append([s, e])\n    ans = f\n    for (x, y) in fl:\n        ans -= y - x\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, k, f) = map(int, sys.stdin.readline().split())\n    l = [tuple(map(int, sys.stdin.readline().split())) for i in range(n)]\n    l.sort()\n    c = 0\n    for i in range(n):\n        if i == 0:\n            c += l[i][1] - l[i][0]\n            z = l[i][1]\n        elif l[i][0] >= z:\n            c += l[i][1] - l[i][0]\n            z = l[i][1]\n        else:\n            d = l[i][1] - z\n            if d > 0:\n                c += d\n                z = l[i][1]\n    ans = f - c\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')", "import numpy as np\nfor _ in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    c = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        c.append((a, b))\n    c.sort(key=lambda x: x[0])\n    s = c[0][0] - 0\n    maxi = c[0][1]\n    for i in range(1, len(c)):\n        if maxi < c[i][1]:\n            s += max(0, c[i][0] - maxi)\n            maxi = c[i][1]\n    s += f - maxi\n    if s >= k:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    count = 0\n    l = []\n    for _ in range(n):\n        temp = list(map(int, input().split()))\n        l.append(temp)\n    l.sort()\n    for i in range(n):\n        if i == 0:\n            count += l[i][1] - l[i][0]\n            z = l[i][1]\n        elif l[i][0] >= z:\n            count += l[i][1] - l[i][0]\n            z = l[i][1]\n        else:\n            t = l[i][1] - z\n            if t > 0:\n                count += t\n                z = l[i][1]\n    net = f - count\n    if net >= k:\n        print('YES')\n    else:\n        print('NO')", "def ctime(n, k, f, l):\n    l.sort()\n    (ans, max_end) = (0, l[0][1])\n    for i in range(1, n):\n        ans += max(0, l[i][0] - max_end)\n        max_end = max(max_end, l[i][1])\n    ans += l[0][0]\n    ans += f - max_end\n    return ans\nt = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    (n, k, f) = (l[0], l[1], l[2])\n    arr = []\n    for i in range(n):\n        l = list(map(int, input().split()))\n        arr.append(l)\n    ans = ctime(n, k, f, arr)\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')", "def ctime(n, k, f, l):\n    l.sort()\n    (ans, max_end) = (0, l[0][1])\n    for i in range(1, n):\n        ans += max(0, l[i][0] - max_end)\n        max_end = max(max_end, l[i][1])\n    ans += l[0][0]\n    ans += f - max_end\n    return ans\nt = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    (n, k, f) = (l[0], l[1], l[2])\n    arr = []\n    for i in range(n):\n        l = list(map(int, input().split()))\n        arr.append(l)\n    ans = ctime(n, k, f, arr)\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    (n, k, f) = map(int, input().split())\n    s = []\n    e = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        s.append(a)\n        e.append(b)\n    s.sort()\n    e.sort()\n    ans = 0\n    max_end = e[0]\n    for i in range(n):\n        ans += max(0, s[i] - max_end)\n        max_end = max(max_end, e[i])\n    ans += s[0]\n    ans += f - max_end\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    time = []\n    for i in range(n):\n        (s, e) = map(int, input().split())\n        time.append([s, e])\n    time.sort(key=lambda x: x[0])\n    ch = 0\n    comp = 0\n    for i in time:\n        if i[0] > comp:\n            ch = ch + (i[0] - comp)\n        else:\n            ch += 0\n        comp = max(comp, i[1])\n    if comp < f:\n        ch = ch + (f - comp)\n    if ch >= k:\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef solve(time_schedule, n, f, k):\n    time_schedule.sort()\n    answer = 0\n    max_end = time_schedule[0][1]\n    for i in range(1, n):\n        answer += max(0, time_schedule[i][0] - max_end)\n        max_end = max(max_end, time_schedule[i][1])\n    answer += time_schedule[0][0] + (f - max_end)\n    if answer >= k:\n        return 'YES'\n    else:\n        return 'NO'\nvaibhav = sys.stdin.readline\nfor _ in range(int(vaibhav())):\n    (n, k, f) = map(int, vaibhav().split())\n    time_schedule = [0] * n\n    for i in range(n):\n        time_schedule[i] = tuple(map(int, vaibhav().split()))\n    result = solve(time_schedule, n, f, k)\n    print(result)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, k, f) = map(int, sys.stdin.readline().split())\n    l = [tuple(map(int, sys.stdin.readline().split())) for i in range(n)]\n    l.sort()\n    c = 0\n    for i in range(n):\n        if i == 0:\n            c += l[i][1] - l[i][0]\n            z = l[i][1]\n        elif l[i][0] >= z:\n            c += l[i][1] - l[i][0]\n            z = l[i][1]\n        else:\n            d = l[i][1] - z\n            if d > 0:\n                c += d\n                z = l[i][1]\n    ans = f - c\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    a = list(map(int, input().split()))\n    n = a[0]\n    k = a[1]\n    f = a[2]\n    time = 0\n    p = 0\n    arr = []\n    for i in range(n):\n        (s1, e1) = map(int, input().split())\n        arr.append([s1, e1])\n    arr = sorted(arr)\n    for i in range(n):\n        s = arr[i][0]\n        if s - p > 0:\n            time += s - p\n        e = arr[i][1]\n        p = max(p, e)\n    if e < f:\n        time += f - p\n    if time >= k:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor test in range(t):\n    (n, k, f) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    l.sort()\n    c = 0\n    for i in range(n):\n        if i == 0:\n            c += l[i][1] - l[i][0]\n            z = l[i][1]\n        elif l[i][0] >= z:\n            c += l[i][1] - l[i][0]\n            z = l[i][1]\n        else:\n            y = l[i][1] - z\n            if y > 0:\n                c += y\n                z = l[i][1]\n    x = f - c\n    if x >= k:\n        print('YES')\n    else:\n        print('NO')", "from math import *\nR = lambda : list(map(int, input().split()))\nMOD = 1000000007\nfor _ in range(int(input())):\n    (n, k, f) = R()\n    arr = [(0, 0)]\n    for i in range(n):\n        (s, e) = R()\n        arr.append((s, e))\n    arr.append((f, f))\n    arr.sort(key=lambda x: x[0])\n    t = 0\n    endtime = 0\n    for i in range(1, len(arr)):\n        if endtime < arr[i][0]:\n            t += arr[i][0] - endtime\n        endtime = max(endtime, arr[i][1])\n    if t >= k:\n        print('YES')\n    else:\n        print('NO')", "for __ in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    intervals = []\n    for i in range(n):\n        (s, e) = map(int, input().split())\n        intervals.append([s, e])\n    intervals = sorted(intervals)\n    new_intervals = [intervals[0]]\n    for i in range(1, n):\n        if intervals[i][0] <= new_intervals[-1][1]:\n            new_intervals[-1][1] = max(new_intervals[-1][1], intervals[i][1])\n        else:\n            new_intervals.append(intervals[i])\n    free_time = f\n    for interval in new_intervals:\n        free_time -= interval[1] - interval[0]\n    if free_time >= k:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    (n, k, f) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    arr.sort()\n    start = end = interval = prev = duration = 0\n    for i in arr:\n        start = i[0]\n        end = i[1]\n        if prev > start:\n            start = prev\n        duration += max(0, end - start)\n        prev = max(prev, end)\n    if f - duration >= k:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor _ in range(t):\n    solve()", "def get_list():\n    return list(map(int, input().split()))\nfor t in range(int(input())):\n    (n, k, f) = get_list()\n    intervals = []\n    for i in range(n):\n        se = get_list()\n        intervals.append(se)\n    intervals.sort()\n    pb = 0\n    kcount = 0\n    for (a, b) in intervals:\n        if a > pb:\n            kcount += a - pb\n        pb = max(pb, b)\n    if f > pb:\n        kcount += f - pb\n    if kcount >= k:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k, f) = tuple(map(int, input().split()))\n    tuples = []\n    for i in range(n):\n        tuples.append(tuple(map(int, input().split())))\n    tuples.sort()\n    (s, e) = tuples[0]\n    CheatingTime = s\n    for i in range(1, n):\n        if e >= tuples[i][0]:\n            e = max(e, tuples[i][1])\n        else:\n            CheatingTime += tuples[i][0] - e\n            if CheatingTime >= k:\n                print('YES')\n                break\n            (s, e) = tuples[i]\n    else:\n        CheatingTime += f - e\n        if CheatingTime >= k:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nn = [0 for x in range(t)]\nk = [0 for x in range(t)]\nf = [0 for x in range(t)]\nse = [[] for x in range(t)]\nfor i in range(t):\n    (n[i], k[i], f[i]) = map(int, input().split())\n    for v in range(n[i]):\n        se[i].append(list(map(int, input().split())))\nfor i in range(t):\n    startingPoint = 0\n    requiredTime = k[i]\n    totalTime = f[i]\n    currTP = se[i]\n    invgTime = 0\n    invSt = []\n    invEn = []\n    for tp in range(n[i]):\n        invSt.append(currTP[tp][0])\n        invEn.append(currTP[tp][1])\n    idxSort = [i for i in range(n[i])]\n    idxSort.sort(key=lambda x: invSt[x])\n    invSt.sort()\n    invgEnding = [0 for i in range(n[i])]\n    for s in range(n[i]):\n        invgEnding[s] = invEn[idxSort[s]]\n    prevSt = 0\n    prevEn = 0\n    for p in range(n[i]):\n        if invgEnding[p] <= prevEn:\n            continue\n        if invSt[p] >= prevEn:\n            invgTime += abs(invSt[p] - invgEnding[p])\n        elif invSt[p] < prevEn:\n            invgTime += abs(invgEnding[p] - prevEn)\n        prevSt = invSt[p]\n        prevEn = invgEnding[p]\n    if totalTime - invgTime >= requiredTime:\n        print('YES')\n    else:\n        print('NO')", "cases = int(input())\nfor _ in range(cases):\n    (n, k, f) = map(int, input().split())\n    time = []\n    for x in range(n):\n        arr = list(map(int, input().split()))\n        time.append(arr)\n    time.append([f, f])\n    time.sort()\n    mn = 0\n    mx = 0\n    avail = 0\n    for (i, j) in time:\n        if i > mx:\n            avail += i - mx\n        mx = max(mx, j)\n    if avail >= k:\n        print('YES')\n    else:\n        print('NO')", "def solve(l, k, f):\n    l.sort(key=lambda x: x[0])\n    tot = l[0][0]\n    if tot >= k:\n        return True\n    maxx = l[0][1]\n    for i in range(len(l)):\n        if l[i][0] > maxx:\n            tot += l[i][0] - maxx\n        maxx = max(l[i][1], maxx)\n    tot += f - maxx\n    return tot >= k\nt = int(input())\nfor tc in range(t):\n    inp = list(map(int, input().split()))\n    (n, k, f) = (inp[0], inp[1], inp[2])\n    l = []\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    if solve(l, k, f):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k, t) = map(int, input().split())\n    l = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l.append([a, b])\n    l.sort()\n    s = l[0][0]\n    e = l[0][1]\n    for j in range(len(l) - 1):\n        if l[j + 1][0] <= e:\n            if l[j + 1][1] > e:\n                e = l[j + 1][1]\n            else:\n                None\n        else:\n            t = t - (e - s)\n            s = l[j + 1][0]\n            e = l[j + 1][1]\n    t = t - (e - s)\n    if t >= k:\n        print('YES')\n    elif k == 0:\n        print('YES')\n    elif t < k:\n        print('NO')", "for _ in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    l = [[0, 0]]\n    for i in range(n):\n        (s, e) = map(int, input().split())\n        l.append([s, e])\n    l.append([f, f])\n    l = sorted(l)\n    mx = 0\n    total = 0\n    length = len(l)\n    for i in range(length - 1):\n        if l[i][1] > mx:\n            mx = l[i][1]\n        if l[i + 1][0] > mx:\n            total += l[i + 1][0] - mx\n    if total >= k:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    l = [[0, 0]]\n    D = {}\n    for i in range(n):\n        (s, e) = map(int, input().split())\n        if s not in D.keys():\n            D[s] = e\n        else:\n            prev = D[s]\n            if prev < e:\n                D[s] = e\n    for i in sorted(D):\n        l.append([i, D[i]])\n    l.append([f, f])\n    mx = 0\n    total = 0\n    length = len(l)\n    for i in range(length - 1):\n        if l[i][1] > mx:\n            mx = l[i][1]\n        if l[i + 1][0] > mx:\n            total += l[i + 1][0] - mx\n    if total >= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor trash in range(t):\n    (n, k, f) = [int(i) for i in input().split()]\n    x = 0\n    l = []\n    for j in range(n):\n        l.append(list(map(int, input().split())))\n    l.sort()\n    for i in range(n):\n        (s, e) = [int(q) for q in l[i]]\n        if s >= x:\n            dur = e - s\n            f = f - dur\n            x = e\n        else:\n            f = f - max(0, e - x)\n            x = max(x, e)\n    if f >= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor test in range(t):\n    (n, k, f) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    l.sort()\n    c = 0\n    for i in range(n):\n        if i == 0:\n            c += l[i][1] - l[i][0]\n            z = l[i][1]\n        elif l[i][0] >= z:\n            c += l[i][1] - l[i][0]\n            z = l[i][1]\n        else:\n            y = l[i][1] - z\n            if y > 0:\n                c += y\n                z = l[i][1]\n    x = f - c\n    if x >= k:\n        print('YES')\n    else:\n        print('NO')", "from collections import defaultdict, Counter\nfrom sys import stdin, stdout, setrecursionlimit\nfrom math import *\nfrom bisect import bisect_left\n\ndef I():\n    return stdin.readline().rstrip('\\r\\n')\n\ndef ari():\n    return list(map(int, I().split()))\n\ndef ars():\n    return list(map(str, I().split()))\n\ndef arf():\n    return list(map(float, I().split()))\n\ndef mpi():\n    return map(int, I().split())\n\ndef mps():\n    return map(str, I().split())\n\ndef mpf():\n    return map(float, I().split())\nmod = 10 ** 9 + 7\nsetrecursionlimit(10 ** 8)\ninf = float('inf')\n\ndef power(A, B, p):\n    res = 1\n    A = A % p\n    if A == 0:\n        return 0\n    while B > 0:\n        if B & 1 == 1:\n            res = res * A % p\n        B = B >> 1\n        A = A * A % p\n    return res\n\ndef isPrime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, ceil(sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\ndef func():\n    if K > F:\n        return 'NO'\n    tmg.sort()\n    c = 0\n    st = tmg[0][0]\n    et = tmg[0][1]\n    c += st\n    for i in range(1, len(tmg)):\n        c += max(tmg[i][0] - et, 0)\n        et = max(tmg[i][1], et)\n    c += F - et\n    if c >= K:\n        return 'YES'\n    return 'NO'\nfor t in range(int(I())):\n    (N, K, F) = mpi()\n    tmg = []\n    for i in range(N):\n        (s, e) = mpi()\n        tmg.append([s, e])\n    print(func())", "t = int(input())\nfor i in range(t):\n    l = []\n    (n, k, f) = map(int, input().split())\n    for i in range(n):\n        (s, e) = map(int, input().split())\n        l.append((s, e))\n    l.sort()\n    a = l[0][0]\n    mx = l[0][1]\n    af = l[0][0]\n    ak = l[0][1]\n    for i in range(1, len(l)):\n        x = l[i][0]\n        y = l[i][1]\n        a += max(0, x - mx)\n        mx = max(mx, y)\n    a += f - mx\n    if a >= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in [0] * t:\n    (n, k, f) = list(map(int, input().split()))\n    times = []\n    for i in range(n):\n        times.append(list(map(int, input().split())))\n    times.sort()\n    i = 0\n    while i < len(times) - 2 and len(times) > 1:\n        try:\n            if times[i][1] >= times[i + 1][0]:\n                s_new = min(times[i][0], times[i + 1][0])\n                f_new = max(times[i][1], times[i + 1][1])\n                times.pop(i + 1)\n                times[i] = [s_new, f_new]\n            else:\n                i += 1\n        except:\n            print(f'i: {i} len: {len(times)}')\n            break\n    time_point = 0\n    total_time = 0\n    for time in times:\n        start = time[0]\n        finish = time[1]\n        if time_point <= start:\n            total_time += finish - start\n        elif time_point < finish:\n            total_time += finish - time_point\n        time_point = finish\n    if f - total_time < k:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, k, f) = map(int, input().split())\n    x = []\n    for i in range(n):\n        se = list(map(int, input().split()))\n        x.append(se)\n    x.sort()\n    ans = 0\n    p = 0\n    for y in x:\n        ans += max(0, y[0] - p)\n        p = max(p, y[1])\n    ans += max(0, f - p)\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k, f) = input().split()\n    n = int(n)\n    k = int(k)\n    f = int(f)\n    arr = []\n    for _ in range(n):\n        (x, y) = input().split()\n        arr.append([int(x), int(y)])\n    arr.sort(key=lambda x: x[0:1])\n    x1 = arr[0][0]\n    y1 = arr[0][1]\n    ans = []\n    for (x2, y2) in arr[1:]:\n        if y1 >= x2:\n            y1 = max(y1, y2)\n        else:\n            ans.append([x1, y1])\n            x1 = x2\n            y1 = y2\n    if [x1, y1] not in ans:\n        ans.append([x1, y1])\n    for (x1, y1) in ans:\n        f -= y1 - x1\n    if f >= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k, f) = map(int, input().split())\n    mtime = 0\n    tot = 0\n    arr = []\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        arr.append([l, r])\n    arr.sort()\n    for (s, e) in arr:\n        if s >= mtime:\n            diff = s - mtime\n            tot += diff\n        if e > mtime:\n            mtime = e\n    tot += f - mtime\n    if tot >= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    (n, k, f) = [int(i) for i in input().split()]\n    l = []\n    for i in range(n):\n        q = [int(i) for i in input().split()]\n        l.append(q)\n    l.sort()\n    ans = 0\n    max_end = l[0][1]\n    for i in range(1, n):\n        ans += max(0, l[i][0] - max_end)\n        max_end = max(max_end, l[i][1])\n    ans += abs(f - max_end)\n    ans += l[0][0]\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "from sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\ninput = stdin.readline\nt = int(input())\n\ndef solve():\n    pass\nfor _ in range(t):\n    (n, k, f) = map(int, input().split())\n    inv = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        inv.append((a, b))\n    inv.sort()\n    currStart = 0\n    currEnd = 0\n    for i in range(n):\n        (a, b) = inv[i]\n        if a > currEnd:\n            k -= a - currEnd\n            currStart = a\n        currEnd = max(b, currEnd)\n        if k <= 0:\n            break\n    k -= f - currEnd\n    print('YES' if k <= 0 else 'NO')", "t = int(input())\nwhile t:\n    (n, k, f) = [int(i) for i in input().split()]\n    l = []\n    for i in range(n):\n        q = [int(i) for i in input().split()]\n        l.append(q)\n    l.sort()\n    ans = 0\n    max_end = l[0][1]\n    for i in range(1, n):\n        ans += max(0, l[i][0] - max_end)\n        max_end = max(max_end, l[i][1])\n    ans += l[0][0]\n    ans += f - max_end\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, k, f) = input().split()\n    (n, k, f) = (int(n), int(k), int(f))\n    tg = 0\n    time = 0\n    sa = []\n    ea = []\n    for j in range(n):\n        (s, e) = input().split()\n        (s, e) = (int(s), int(e))\n        sa.append(s)\n        ea.append(e)\n    sa.sort()\n    ea.sort()\n    time = 0\n    tg = 0\n    for i in range(len(sa)):\n        s = sa[i]\n        e = ea[i]\n        if s > time:\n            tg = tg + (s - time)\n            time = e\n        else:\n            time = e\n    tg = tg + (f - time)\n    if tg >= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor test in range(t):\n    (n, k, f) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    l.sort()\n    c = 0\n    for i in range(n):\n        if i == 0:\n            c += l[i][1] - l[i][0]\n            z = l[i][1]\n        elif l[i][0] >= z:\n            c += l[i][1] - l[i][0]\n            z = l[i][1]\n        else:\n            y = l[i][1] - z\n            if y > 0:\n                c += y\n                z = l[i][1]\n    x = f - c\n    if x >= k:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, k, f) = map(int, stdin.readline().split())\n    lis = [[*map(int, stdin.readline().split())] for kk in range(n)]\n    lis.sort()\n    end = lis[0][1]\n    ans = lis[0][0]\n    for (s, e) in lis:\n        if s > end:\n            ans += s - end\n            end = e\n        elif e > end:\n            end = e\n    ans += f - end\n    print('YES') if ans >= k else print('NO')", "def ctime(k, f, l):\n    first = l.pop(0)\n    s = first[0]\n    e = first[1]\n    t = s\n    for x in l:\n        if x[0] < e:\n            e = max(e, x[1])\n        else:\n            s = x[0]\n            t += s - e\n            e = x[1]\n    t += f - e\n    if t >= k:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor _ in range(t):\n    (n, k, f) = map(int, input().rstrip().rsplit())\n    l = []\n    for __ in range(n):\n        pair = list(map(int, input().rstrip().rsplit()))\n        l.append(pair)\n    l.sort(key=lambda x: x[0])\n    res = ctime(k, f, l)\n    print(res)", "t = int(input())\nfor i in range(t):\n    (n, k, f) = [int(x) for x in input().split()]\n    nums = []\n    for i in range(n):\n        (si, fi) = [int(x) for x in input().split()]\n        nums.append([si, fi])\n    nums.sort()\n    res = []\n    res.append(nums[0])\n    for i in range(1, len(nums)):\n        if nums[i][0] <= res[-1][1]:\n            res[-1][1] = max(nums[i][1], res[-1][1])\n        else:\n            res.append(nums[i])\n    t = 0\n    for (st, fin) in res:\n        t += fin - st\n    if f - t >= k:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    nkf = list(map(int, input().split()))\n    (n, k, f) = (nkf[0], nkf[1], nkf[2])\n    timing = [[0, 0]] * n\n    for i in range(n):\n        timing[i] = list(map(int, input().split()))\n    timing.sort()\n    currK = timing[0][0]\n    currF = timing[0][1]\n    for sets in range(1, n):\n        if timing[sets][0] > currF:\n            currK += timing[sets][0] - currF\n        currF = max(currF, timing[sets][1])\n    currK += f - currF\n    if currK >= k:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    l = []\n    for i in range(a):\n        (n, m) = map(int, input().split())\n        l.append([n, m])\n    l.sort()\n    d = l[0][1] - l[0][0]\n    ma = l[0][1]\n    (p, k) = (0, 0)\n    for i in range(1, a):\n        k = 1\n        if l[i][0] >= ma:\n            d += l[i][1] - l[i][0]\n            ma = l[i][1]\n        elif l[i][0] < ma:\n            if l[i][1] > ma:\n                d += l[i][1] - ma\n                ma = l[i][1]\n        if c - d < b:\n            p = 1\n            break\n    if k == 1 and p == 1:\n        print('NO')\n    elif k == 1 and p == 0:\n        print('YES')\n    elif k == 0:\n        if c - d < b:\n            print('NO')\n        else:\n            print('YES')", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    l = []\n    for i in range(a):\n        (n, m) = map(int, input().split())\n        l.append([n, m])\n    l.sort()\n    d = l[0][1] - l[0][0]\n    ma = l[0][1]\n    p = 0\n    for i in range(1, a):\n        if l[i][0] >= ma:\n            d += l[i][1] - l[i][0]\n            ma = l[i][1]\n        elif l[i][0] < ma:\n            if l[i][1] > ma:\n                d += l[i][1] - ma\n                ma = l[i][1]\n        if c - d < b:\n            p = 1\n            break\n    if p == 1:\n        print('NO')\n        continue\n    elif c - d < b:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    l = []\n    for i in range(a):\n        (n, m) = map(int, input().split())\n        l.append([n, m])\n    l.sort()\n    d = l[0][1] - l[0][0]\n    ma = l[0][1]\n    for i in range(1, a):\n        if l[i][0] >= ma:\n            d += l[i][1] - l[i][0]\n            ma = l[i][1]\n        elif l[i][0] < ma:\n            if l[i][1] > ma:\n                d += l[i][1] - ma\n                ma = l[i][1]\n    if c - d >= b:\n        print('YES')\n    else:\n        print('NO')", "import collections\nfor _ in range(int(input())):\n    dee = collections.deque()\n    (n, k, f) = map(int, input().split())\n    ans = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        dee.appendleft([a, b])\n    de = sorted(dee)\n    x = de[0][0]\n    y = de[0][1]\n    ans = ans + de[0][0]\n    for i in range(1, n):\n        if de[i][0] > y:\n            ans += de[i][0] - y\n            y = max(y, de[i][1])\n        else:\n            y = max(y, de[i][1])\n    ans += f - y\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    lst = []\n    for i in range(n):\n        lst.append(list(map(int, input().split())))\n    lst.sort()\n    ans = lst[0][0]\n    end = lst[0][1]\n    for i in range(1, n):\n        ans += max(0, lst[i][0] - end)\n        end = max(end, lst[i][1])\n    ans += f - end\n    if ans < k:\n        print('NO')\n    else:\n        print('YES')", "import math\nfrom collections import Counter, defaultdict\nimport sys\nmod = 10 ** 9 + 7\ninput = sys.stdin.readline\nreadInt = lambda : int(input().strip())\nreadfloat = lambda : float(input().strip())\nreadStr = lambda : input().strip()\nintList = lambda : list(map(int, input().strip().split()))\nintMap = lambda : map(int, input().strip().split())\nfloatList = lambda : list(map(float, input().strip().split()))\nfloatMap = lambda : map(float, input().strip().split())\nstrList = lambda : list(input().strip().split())\n\ndef print(*args, end='\\n', sep=' '):\n    for i in args:\n        sys.stdout.write(str(i))\n        sys.stdout.write(sep)\n    sys.stdout.write(end)\n\ndef solve(arr):\n    res = [arr[0]]\n    for i in range(1, n):\n        if arr[i][0] <= res[-1][1]:\n            res[-1][1] = max(arr[i][1], res[-1][1])\n        else:\n            res.append(arr[i])\n    res.sort()\n    time = res[0][0]\n    for i in range(1, len(res)):\n        time += res[i][0] - res[i - 1][1]\n    time += f - res[-1][1]\n    if time >= k:\n        return True\n    return False\nfor _ in range(readInt()):\n    (n, k, f) = intMap()\n    arr = []\n    for i in range(n):\n        arr.append(intList())\n    arr.sort()\n    print('YES' if solve(arr) else 'NO')", "for dcfvgbnjm in range(int(input())):\n    (n, k, f) = list(map(int, input().split()))\n    d = []\n    for i in range(n):\n        se = list(map(int, input().split()))\n        d.append(se)\n    d.sort(key=lambda list: list[0])\n    end = -1\n    count = 0\n    test = False\n    ans = 0\n    while count < len(d):\n        if d[count][0] > end:\n            ans += d[count][1] - d[count][0]\n        elif d[count][1] > end:\n            ans += d[count][1] - end\n        end = max(end, d[count][1])\n        count += 1\n    if f - ans >= k:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(tuple(map(int, input().split())))\n    l.sort()\n    ans = 0\n    me = l[0][1]\n    for i in range(1, n):\n        ans += max(0, l[i][0] - me)\n        me = max(me, l[i][1])\n    ans += l[0][0]\n    ans += f - me\n    if ans < k:\n        print('NO')\n    else:\n        print('YES')", "try:\n    t = int(input())\n    while t > 0:\n        (n, k, f) = map(int, input().split())\n        l = []\n        for _ in range(n):\n            l.append(list(map(int, input().split())))\n        l.sort()\n        time = 0\n        right = l[0][1]\n        for i in range(1, n):\n            time += max(0, l[i][0] - right)\n            right = max(right, l[i][1])\n        time += l[0][0]\n        time += f - right\n        if time >= k:\n            print('YES')\n        else:\n            print('NO')\n        t -= 1\nexcept:\n    pass", "t = int(input())\nwhile t > 0:\n    (n, k, f) = map(int, input().split(' '))\n    timeslots = list()\n    for _ in range(n):\n        timeslots.append(list(map(int, input().split(' '))))\n    timeslots.sort()\n    totalFreetime = timeslots[0][0]\n    maxEnd = timeslots[0][1]\n    for i in range(1, n):\n        if timeslots[i][0] > maxEnd:\n            totalFreetime += timeslots[i][0] - maxEnd\n        maxEnd = max(maxEnd, timeslots[i][1])\n    totalFreetime += f - maxEnd\n    print('YES') if totalFreetime >= k else print('NO')\n    t -= 1", "t = int(input())\nwhile t:\n    (n, k, f) = map(int, input().split())\n    l = []\n    for i in range(n):\n        x = list(map(int, input().split()))\n        l.append(x)\n    l = sorted(l)\n    ans = l[0][0]\n    max_until = l[0][1]\n    for i in range(1, n):\n        ans += max(0, l[i][0] - max_until)\n        max_until = max(max_until, l[i][1])\n    ans += f - max_until\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for _ in range(int(input())):\n    (N, K, F) = map(int, input().split())\n    arr = []\n    flag = True\n    ml = False\n    mr = 0\n    while N:\n        N -= 1\n        (s, e) = map(int, input().split())\n        arr.append((s, e))\n        if flag:\n            ml = s\n            flag = False\n        else:\n            ml = min(ml, s)\n        mr = max(e, mr)\n    arr.sort(key=lambda x: x[1])\n    tot = ml + F - mr\n    for i in range(len(arr) - 1):\n        if arr[i][1] < arr[i + 1][0]:\n            tot += arr[i + 1][0] - arr[i][1]\n    if tot >= K:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    times = []\n    for j in range(n):\n        (s, e) = map(int, input().split())\n        times.append((s, e))\n    times = sorted(times)\n    ed1 = times[0][1]\n    ans = 0\n    for i in range(1, n):\n        ans += max(0, times[i][0] - ed1)\n        ed1 = max(ed1, times[i][1])\n    ans += times[0][0]\n    ans += f - ed1\n    if ans >= k:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    l.sort()\n    sum = 0\n    start = 0\n    for i in range(n):\n        if start >= l[i][0]:\n            start = max(start, l[i][1])\n        else:\n            sum += l[i][0] - start\n            start = l[i][1]\n        if sum >= k:\n            break\n    sum = sum + f - max(start, l[-1][1])\n    if sum >= k:\n        print('YES')\n    else:\n        print('NO')", "def process():\n    (n, k, f) = map(int, input().split())\n    data = [tuple(map(int, input().split())) for i in range(n)]\n    data.sort(key=lambda x: x[0])\n    maxend = 0\n    time = 0\n    for tup in data:\n        (start, end) = tup\n        time += max(0, start - maxend)\n        maxend = max(maxend, end)\n    time += f - maxend\n    return 'NO' if time < k else 'YES'\ntry:\n    for t in range(int(input())):\n        print(process())\nexcept:\n    pass", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k, f) = input().split()\n    (n, k, f) = (int(n), int(k), int(f))\n    nums = []\n    for _ in range(n):\n        (a, b) = input().split()\n        (a, b) = (int(a), int(b))\n        nums.append([a, b])\n    nums.sort()\n    stack = [nums[0]]\n    for i in nums[1:]:\n        if i[0] <= stack[-1][1]:\n            stack[-1][1] = max(i[1], stack[-1][1])\n        else:\n            stack.append(i)\n    spare_time = 0\n    spare_time += stack[0][0]\n    spare_time += f - stack[-1][1]\n    for i in range(len(stack) - 1):\n        spare_time += stack[i + 1][0] - stack[i][1]\n    if spare_time >= k:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    (n, k, f) = list(map(int, input().split()))\n    lst = []\n    for _ in range(n):\n        lst.append(list(map(int, input().split())))\n    lst = sorted(lst, key=lambda x: x[0])\n    time = lst[0][0]\n    finish = lst[0][1]\n    for (s, e) in lst:\n        if s > finish:\n            time += s - finish\n        finish = max(finish, e)\n    time += f - finish\n    if time >= k:\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    ans = solve()\n    print(ans)", "for _ in range(int(input())):\n    (n, k, f) = list(map(int, input().split()))\n    p = 0\n    tot = 0\n    ar = []\n    for i in range(n):\n        (s, e) = map(int, input().split())\n        ar.append([s, e])\n    ar.sort()\n    for (s, e) in ar:\n        if s >= p:\n            dif = s - p\n            tot += dif\n        if e > p:\n            p = e\n    dif = f - p\n    tot += dif\n    if k <= tot:\n        print('YES')\n    else:\n        print('NO')", "def merge(intervals):\n    l = []\n    i = 0\n    start = -1\n    intervals.sort()\n    while i < len(intervals):\n        if start == -1:\n            start = intervals[i][0]\n            end = intervals[i][1]\n        else:\n            (s, e) = intervals[i]\n            if s <= end:\n                end = max(end, e)\n            else:\n                l.append([start, end])\n                start = s\n                end = e\n        i += 1\n    l.append([start, end])\n    return l\n\ndef solve():\n    (n, k, f) = [int(x) for x in input().split()]\n    merged = []\n    for i in range(n):\n        interval = [int(x) for x in input().split()]\n        merged.append(interval)\n    merged = merge(merged)\n    c = 0\n    for i in range(len(merged) - 1):\n        c += merged[i + 1][0] - merged[i][1]\n    c = c + (merged[0][0] - 0)\n    c = c + (f - merged[-1][1])\n    if c >= k:\n        print('YES')\n    else:\n        print('NO')\nn = int(input())\nwhile n > 0:\n    solve()\n    n -= 1", "for _ in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    seq = sorted({tuple(map(int, input().split())) for _ in range(n)})\n    (t, m) = (0, 0)\n    for i in seq:\n        (si, ei) = i\n        if si > m:\n            t += si - m\n        if ei > m:\n            m = ei\n    t += f - m if f > m else 0\n    print('YES' if t >= k else 'NO')", "for _ in range(int(input())):\n    (n, k, f) = map(int, input().split())\n    (s, t) = (0, 0)\n    seq = sorted([list(map(int, input().split())) for _ in range(n)])\n    (t, m) = (0, 0)\n    for i in seq:\n        (si, ei) = i\n        if si > m:\n            t += si - m\n        if ei > m:\n            m = ei\n    t += f - m if f > m else 0\n    print('YES' if t >= k else 'NO')"]