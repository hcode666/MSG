["def rmain():\n    mdval = 998244353\n    tlst31 = [0, 1]\n    t2li = []\n    (fval, sval, t2val) = (2, 2, 4)\n    tn = int(input())\n    for _ in range(tn):\n        (n, m) = map(int, input().split())\n        mulmn = 2 * m * n\n        addmn = m + n\n        nm2 = n + m - 2\n        c2len = n + m - 2 - max(n, m)\n        ntlilen = len(tlst31)\n        n2len = len(t2li)\n        lsval = tlst31[-1]\n        if ntlilen < nm2:\n            for _ in range(ntlilen, nm2 + 3):\n                lsval = lsval * 31 % mdval\n                tlst31.append(lsval)\n        if n2len < c2len:\n            for _ in range(n2len, c2len + 2):\n                t2li.append(fval)\n                sval += t2val\n                fval += sval\n                t2val += 2\n        ans = 0\n        mn1 = 6 * m * n - 1\n        tnpm = 3 * (n + m)\n        npm = tnpm\n        (b2, bsval) = (1, 3)\n        for b in range(1, min(n, m) + 1):\n            tval = b * (mn1 + b2 - npm) // 3\n            npm += tnpm\n            b2 += bsval\n            bsval += 2\n            ans = (ans + tlst31[b] * tval) % mdval\n        mival = min(n, m)\n        sqval = mival * mival % mdval\n        for i in range(min(n, m) + 1, max(n, m) + 1):\n            tval = tval - sqval\n            ans = (ans + tlst31[i] * tval) % mdval\n        ixval = n + m - 2\n        ix2 = 0\n        for i in range(max(n, m) + 1, n + m - 1):\n            ans = (ans + tlst31[ixval] * t2li[ix2]) % mdval\n            ix2 += 1\n            ixval -= 1\n        print(ans)\n    return\nrmain()", "t = int(input())\n\ndef power(x, y, p):\n    res = 1\n    x = x % p\n    if x == 0:\n        return 0\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    answer = 0\n    mod = 998244353\n    a1 = (power(31, n + 1, mod) - 30 * n - 31) % mod\n    a2 = (power(31, m + 1, mod) - 480 * m - 31) % mod\n    m1 = 805272946\n    m2 = 10125561\n    m3 = 563525038\n    answer = a1 * a2 % mod * m1 % mod - n * a2 % mod * m2 % mod - m * n % mod * m3 % mod\n    print(answer % mod)"]