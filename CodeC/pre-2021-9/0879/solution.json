["t = int(input())\nfor i in range(t):\n    x = input().split()\n    n = int(x[0])\n    k = int(x[1])\n    ans = 0\n    for j in range(n):\n        if k & 1 << j != 0:\n            ans += 2 ** (n - j - 1)\n    print(ans, end='\\n')", "t = int(input())\nfor i in range(t):\n    x = input().split()\n    n = int(x[0])\n    k = int(x[1])\n    ans = 0\n    for j in range(n):\n        if k & 1 << j != 0:\n            ans += 2 ** (n - j - 1)\n    print(ans, end='\\n')", "t = int(input())\nfor i in range(t):\n    x = input().split()\n    n = int(x[0])\n    k = int(x[1])\n    ans = 0\n    for j in range(n):\n        if k & 1 << j != 0:\n            ans += 2 ** (n - j - 1)\n    print(ans, end='\\n')", "t = int(input())\nfor i in range(t):\n    x = input().split()\n    n = int(x[0])\n    k = int(x[1])\n    ans = 0\n    for j in range(n):\n        if k & 1 << j != 0:\n            ans += 2 ** (n - j - 1)\n    print(ans, end='\\n')", "t = int(input())\nfor i in range(t):\n    x = input().split()\n    n = int(x[0])\n    k = int(x[1])\n    ans = 0\n    for j in range(n):\n        if k & 1 << j != 0:\n            ans += 2 ** (n - j - 1)\n    print(ans, end='\\n')", "t = int(input())\nwhile t > 0:\n    x = input().split()\n    n = int(x[0])\n    k = int(x[1])\n    ans = 0\n    for i in range(n):\n        if k & 1 << i != 0:\n            ans += 2 ** (n - i - 1)\n    print(ans, end='\\n')\n    t -= 1", "t = int(input())\nwhile t > 0:\n    x = input().split()\n    n = int(x[0])\n    k = int(x[1])\n    ans = 0\n    for i in range(n):\n        if k & 1 << i != 0:\n            ans += 2 ** (n - i - 1)\n    print(ans, end='\\n')\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = [int(i) for i in input().strip().split()]\n    k1 = '{0:0{x}b}'.format(k, x=n)\n    k2 = k1[::-1]\n    print(int(k2, 2))", "for i in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = bin(n)\n    a = a[2:]\n    a = '0' * (m - len(a)) + a\n    b = 0\n    for i in range(len(a)):\n        b += int(a[i]) * 2 ** i\n    print(b)", "def pos(num, N):\n    s = bin(num)\n    t = s[2:].zfill(N)\n    r = t[::-1]\n    return int(r, 2)\nfor _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    print(pos(K, N))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = bin(k)[2:]\n    a = str(a)\n    a = a.zfill(n)\n    a = a[::-1]\n    print(int(a, 2))", "t = int(input())\nfor cas in range(t):\n    (n, k) = map(int, input().split())\n    i = 0\n    x = k\n    pos = k\n    nn = pow(2, n)\n    while i < n:\n        cur = nn // pow(2, i)\n        tmp = pos % cur\n        if tmp % 2 == 0:\n            xl = tmp // 2\n            z = pos // cur\n            z *= cur\n            pos = z + xl\n        else:\n            xl = cur // 2 + tmp // 2\n            pos = pos + xl - tmp\n        i += 1\n    print(pos)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    len = a - 1\n    sum = 0\n    while b:\n        if b & 1:\n            temp = 1 << len\n            sum += temp\n        len -= 1\n        b >>= 1\n    print(sum)", "def rotate(k, i):\n    m = (1 << i) - 1\n    return k & ~m | (k & m) >> 1 | k << i - 1 & m\nq = int(input())\nfor _ in range(q):\n    (n, k) = map(int, input().split())\n    for i in range(n, 0, -1):\n        k = rotate(k, i)\n    print(k)", "q = int(input())\nwhile q > 0:\n    q -= 1\n    (n, k) = map(int, input().strip().split(' '))\n    ans = '{0:b}'.format(k).zfill(n)[::-1]\n    print(int(ans, 2))", "t = int(input())\nfor i in range(t):\n    (n, p) = [int(j) for j in input().split()]\n    for j in range(1, n + 1):\n        q = p // (1 << j)\n        r = p % (1 << j)\n        if r < 1 << j - 1:\n            p = (1 << j) * q + 2 * r\n        else:\n            p = (1 << j) * (q - 1) + 2 * r + 1\n    print(p)", "cases = int(input())\nfrom math import ceil\n\ndef func(k, left, right):\n    mid = (left + right) // 2\n    if (k - left) % 2 == 0:\n        k = left + (k - left) // 2\n        right = mid\n    else:\n        k = mid + (k - left) // 2\n        left = mid\n    return (k, left, right)\nfor _ in range(cases):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    (left, right) = (0, 2 ** n)\n    for x in range(n):\n        (k, left, right) = func(k, left, right)\n    print(k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = 0\n    for i in range(n):\n        if k & 1 << n - i - 1:\n            ans |= 1 << i\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split(' ')\n    (n, k) = (int(n), int(k))\n    s = bin(k)\n    s = s[2:]\n    if len(s) == n:\n        s = s[::-1]\n        a = int(s, 2)\n        print(a)\n    else:\n        p = n - len(s)\n        for j in range(p):\n            s = '0' + s\n        s = s[::-1]\n        a = int(s, 2)\n        print(a)", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split(' ')\n    (n, k) = (int(n), int(k))\n    s = bin(k)\n    s = s[2:]\n    if len(s) == n:\n        s = s[::-1]\n        a = int(s, 2)\n        print(a)\n    else:\n        p = n - len(s)\n        for j in range(p):\n            s = '0' + s\n        s = s[::-1]\n        a = int(s, 2)\n        print(a)", "def pos(l, r, np):\n    if l == r:\n        return np\n    p = np - l\n    if p % 2 == 1:\n        np = l // 2 + r // 2 + 1 + p // 2\n        l = l // 2 + r // 2 + 1\n    else:\n        np = l + p // 2\n        r = l // 2 + r // 2\n    return pos(l, r, np)\nt = int(input())\nfor _ in range(t):\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    print(int(pos(0, 2 ** n - 1, k)))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans = 0\n    count = 0\n    two = 2 ** (n - 1)\n    while k > 0:\n        if k % 2 == 1:\n            ans += two\n        two >>= 1\n        k >>= 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    p = 0\n    while n > 0:\n        if k % 2 == 0:\n            k = k // 2\n        else:\n            k = k + (2 ** n - k) // 2\n        n = n - 1\n        if k >= 2 ** n:\n            k = k - 2 ** n\n            p = p + 2 ** n\n    print(int(p + k))\n    t = t - 1", "T = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    print(int(format(K, 'b').zfill(N)[::-1], 2))", "for t in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    l = [int(x) for x in bin(k)[2:].zfill(n)]\n    ans = 0\n    for i in range(len(l)):\n        ans = ans + 2 ** i * l[i]\n    print(ans)", "q = int(input())\nwhile q:\n    q = q - 1\n    (n, k) = map(int, input().split())\n    j = 0\n    l = n\n    i = 0\n    x = n\n    n = pow(2, n)\n    while j < x:\n        y = k - k % n\n        if k % 2 == 0:\n            k = k + y\n            k = k // 2\n        else:\n            k = n // 2 + k % n // 2 + y\n        l = l - 1\n        n = pow(2, l)\n        j = j + 1\n    print(k)", "t = input()\nt = int(t)\nwhile t > 0:\n    t -= 1\n    li = input()\n    li2 = li.split(' ')\n    i = 0\n    N1 = 1 << int(li2[0]) - 1\n    pre = 0\n    K = int(li2[1])\n    while i < int(li2[0]):\n        i += 1\n        if K % 2 == 0:\n            K >>= 1\n            K = int(K)\n        else:\n            K >>= 1\n            K = int(K)\n            pre += 1 << int(li2[0]) - i\n        N1 >>= 1\n        N1 = int(N1)\n    print(int(pre + K))", "for x in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = str(bin(k))[2:]\n    while len(s) < n:\n        s = '0' + s\n    s1 = s[::-1]\n    print(int(s1, 2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = format(k, '0%db' % n)\n    print(int(a[::-1], base=2))", "def A(n, k):\n    if k == 0:\n        return 0\n    if k % 2 == 0:\n        return A(n - 1, k // 2)\n    return A(n - 1, k // 2) + 2 ** (n - 1)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(A(n, k))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    pos = 0\n    while n >= 0:\n        if k % 2 == 1:\n            pos += 2 ** n\n        n -= 1\n        k //= 2\n    print(pos // 2)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    dup = k\n    bin = []\n    while dup > 0:\n        bin.insert(0, dup % 2)\n        dup //= 2\n    if len(bin) < n:\n        while len(bin) < n:\n            bin.insert(0, 0)\n    ans = 0\n    for i in range(len(bin)):\n        ans = ans + bin[i] * 2 ** i\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    mm = bin(k)[2:]\n    if len(mm) != n:\n        j = str(0) * (n - len(mm))\n        mm = j + mm\n    l = int(mm[::-1], 2)\n    print(l)", "def find(N, k):\n\n    def findout(N, i, k):\n        if i == 0:\n            return k\n        else:\n            num = k // 2 ** (N - i + 1)\n            remain = k % 2 ** (N - i + 1)\n            if remain <= 2 ** (N - i) - 1:\n                remain *= 2\n            else:\n                remain -= 2 ** (N - i)\n                remain *= 2\n                remain += 1\n            position = num * 2 ** (N - i + 1) + remain\n            return findout(N, i - 1, position)\n    return findout(N, N, k)\nfor _ in range(int(input())):\n    A = list(map(int, input().strip().split(' ')))\n    print(find(A[0], A[1]))", "def f(n, k):\n    if k == 0:\n        return 0\n    if k % 2 == 0:\n        return f(n - 1, k // 2)\n    return f(n - 1, k // 2) + 2 ** (n - 1)\nt = int(input())\nwhile t:\n    t -= 1\n    [n, k] = list(map(int, input().split()))\n    print(f(n, k))", "T = int(input())\nassert 1 <= T <= 1000\nfor test in range(T):\n    (N, K) = map(int, input().split())\n    assert 1 <= N <= 64\n    assert 0 <= K < 2 ** N\n    bin_rep = bin(K)[2:]\n    bin_rep = '0' * (N - len(bin_rep)) + bin_rep\n    print(int(bin_rep[::-1], 2))", "T = int(input().strip())\nfor test in range(T):\n    (N, K) = map(int, input().split())\n    assert 1 <= N <= 64\n    assert 0 <= K < 2 ** N\n    bin_rep = bin(K)[2:]\n    bin_rep = '0' * (N - len(bin_rep)) + bin_rep\n    print(int(bin_rep[::-1], 2))", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    ans = 0\n    for j in range(n - 1, -1, -1):\n        if k % 2:\n            ans += 1 << j\n        k = k // 2\n    print(ans + k)", "p2 = [1]\nfor i in range(2048):\n    p2.append(p2[i] * 2)\nt = int(input())\nfor _ in range(t):\n    [n, k] = list(map(int, input().split()))\n    k += 1\n    i = n - 1\n    ans = 0\n    while i >= 0:\n        if k > p2[i]:\n            ans += p2[n - 1 - i]\n            k -= p2[i]\n        i -= 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = 0\n    for i in range(n):\n        ans += (1 << n - i - 1) * (k % 2)\n        k >>= 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = bin(k)[2:]\n    s = '0' * (n - len(s)) + s\n    print(int(s[::-1], 2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = 0\n    for i in range(n):\n        ans += 2 ** (n - i - 1) * (k % 2)\n        k >>= 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    yo = k\n    s = pow(2, n)\n    s1 = pow(2, n) - 1\n    for i in range(1, n):\n        if yo % 2 == 0:\n            new = yo % s\n            nyo = new // 2\n            diff = nyo - new\n            yo = yo + diff\n        else:\n            new = yo % s\n            nyo = new // 2\n            nyos = nyo + s // 2\n            diff = nyos - new\n            yo = yo + diff\n        s = s // 2\n    print(yo)\n    t = t - 1", "import sys\ntwos = []\ntwos.append(1)\nfor i in range(1, 65):\n    twos.append(twos[i - 1] * 2)\nfor jj in range(0, int(sys.stdin.readline())):\n    (n, k) = map(int, sys.stdin.readline().split())\n    ans = 0\n    for i in range(0, n + 1):\n        if k & twos[i]:\n            ans += twos[n - i - 1]\n    print(ans)", "import sys\ntwos = []\ntwos.append(1)\nfor i in range(1, 65):\n    twos.append(twos[i - 1] * 2)\nt = int(sys.stdin.readline())\nfor jj in range(0, t):\n    (n, k) = map(int, sys.stdin.readline().split())\n    ans = 0\n    for i in range(0, n + 1):\n        if k & twos[i] != 0:\n            ans += twos[n - i - 1]\n    print(ans)", "def pos(po, n):\n    if n == 0:\n        return 0\n    if po % 2 == 0:\n        return 0 + pos(po // 2, n - 1)\n    else:\n        return 2 ** (n - 1) + pos(po // 2, n - 1)\nt = int(input())\nfor te in range(t):\n    (n, k) = list(map(int, input().split()))\n    print(pos(k, n))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    p = 1\n    pos = 0\n    m = k\n    p <<= n\n    g = p\n    q = p\n    pos = k\n    if k == 0 or k == p - 1:\n        print(k)\n    else:\n        while k > 0:\n            if k % 2 == 0:\n                pos -= k // 2\n                if pos < p - g // 2:\n                    p = p - g // 2\n            else:\n                pos += (p - 1 - pos) // 2\n            k = k // 2\n            g = g // 2\n            if k == 3 and m > q // 2 or (k == 1 and m > q // 2):\n                break\n        print(pos)", "def pos(l, r, np):\n    if l == r:\n        return np\n    p = np - l\n    if p % 2 == 1:\n        np = (l + r) // 2 + 1 + p // 2\n        l = (l + r) // 2 + 1\n    else:\n        np = l + p // 2\n        r = (l + r) // 2\n    return pos(l, r, np)\nt = int(input())\nfor _ in range(t):\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    print(int(pos(0, 2 ** n - 1, k)))", "def anss(l, r, np):\n    if l == r:\n        return np\n    p = np - l\n    if p % 2 == 1:\n        np = (l + r) // 2 + 1 + p // 2\n        l = (l + r) // 2 + 1\n    else:\n        np = l + p // 2\n        r = (l + r) // 2\n    return anss(l, r, np)\nt = int(input())\nfor _ in range(t):\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    print(int(anss(0, 2 ** n - 1, k)))", "q = int(input())\nfor i in range(q):\n    (n, k) = map(int, input().split())\n    if k % 2 == 0:\n        f = k\n    else:\n        f = k - 1\n    z = 2 ** (n - 1)\n    x = z\n    ans = 0\n    if f >= z:\n        ans += 1\n    for i in range(0, n - 1):\n        if f % 2 == 0:\n            f //= 2\n        else:\n            f //= 2\n            ans += x\n            if f == 0:\n                break\n        x //= 2\n    if k % 2 == 0:\n        print(ans)\n    else:\n        print(z + ans)", "q = int(input().strip())\nfor _ in range(q):\n    (n, k) = map(int, input().split())\n    for i in range(n - 1, -1, -1):\n        deck = 2 ** (n - i)\n        if k % deck >= deck // 2:\n            carry = 1\n        else:\n            carry = 0\n        pos = k % (deck // 2)\n        p2 = k // deck\n        k = p2 * deck + 2 * pos + carry\n    print(k)", "q = int(input())\nfor i in range(q):\n    (n, x) = map(int, input().split())\n    su = 0\n    j = 0\n    for j in range(n):\n        if x % 2 != 0:\n            su += 2 ** (n - 1 - j)\n            x = int(x // 2)\n        else:\n            x = int(x // 2)\n    print(su)", "for i in range(int(input())):\n    (m, p) = map(int, input().split())\n    n = '{0:b}'.format(p)\n    t = []\n    j = 0\n    while j < len(n):\n        t.append(int(n[j]))\n        j += 1\n    t.reverse()\n    kk = 0\n    number = 0\n    while kk < len(t):\n        number += 2 ** (m - kk - 1) * t[kk]\n        kk += 1\n    print(number)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = 0\n    i = 1\n    t = 0\n    while i <= k:\n        temp = i & k\n        if temp:\n            ans = ans | 1 << n - t - 1\n        i *= 2\n        t += 1\n    print(ans)", "test = int(input())\nfor i in range(test):\n    (n, krr) = map(int, input().split())\n    sex = 0\n    j = 0\n    for j in range(n):\n        if krr % 2 != 0:\n            sex += 2 ** (n - 1 - j)\n            krr = int(krr // 2)\n        else:\n            krr = int(krr // 2)\n    print(sex)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    new_post = k\n    old_post = 0\n    start = 0\n    for i in range(0, n):\n        if new_post % 2 == 0:\n            org_post = start + new_post // 2\n            new_post = new_post // 2\n        else:\n            new_post = new_post // 2\n            start = start + 2 ** (n - i) // 2\n            org_post = start + new_post\n    print(org_post)\n    t = t - 1", "import math as mt\ntest = int(input())\nwhile test:\n    test = test - 1\n    (N, Q) = map(int, input().split())\n    k = N - 1\n    i = 0\n    f = 1\n    while k >= 0:\n        if Q < pow(2, k):\n            f = f * 2\n            k = k - 1\n        else:\n            i = i + f\n            f = f * 2\n            Q = Q - pow(2, k)\n            k = k - 1\n    print(i)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans = 0\n    count = 0\n    two = 2 ** (n - 1)\n    while k > 0:\n        if k % 2 == 1:\n            ans += two\n        two >>= 1\n        k >>= 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = 0\n    j = 0\n    for j in range(n):\n        if k % 2 != 0:\n            s += 2 ** (n - 1 - j)\n            k = int(k // 2)\n        else:\n            k = int(k // 2)\n    print(s)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans = 0\n    count = 0\n    two = 2 ** (n - 1)\n    while k > 0:\n        if k % 2 == 1:\n            ans += two\n        two >>= 1\n        k >>= 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans = 0\n    count = 0\n    two = 2 ** (n - 1)\n    while k > 0:\n        if k % 2 == 1:\n            ans += two\n        two >>= 1\n        k >>= 1\n    print(ans)", "def pos(l, r, np):\n    if l == r:\n        return np\n    p = np - l\n    if p % 2 == 1:\n        np = (l + r) // 2 + 1 + p // 2\n        l = (l + r) // 2 + 1\n    else:\n        np = l + p // 2\n        r = (l + r) // 2\n    return pos(l, r, np)\nt = int(input())\nfor _ in range(t):\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    print(int(pos(0, 2 ** n - 1, k)))", "def f(n, k):\n    if not n:\n        return k\n    elif k < 1 << n - 1:\n        return f(n - 1, k) * 2\n    else:\n        return f(n - 1, k - (1 << n - 1)) * 2 + 1\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(f(n, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    i = k\n    for z in range(n):\n        if z == 0:\n            if k % 2 == 0:\n                i = i // 2\n            else:\n                i = (i + (2 ** n - 1)) // 2\n        else:\n            b = 2 ** n // 2 ** z\n            value = i // b + 1\n            value1 = b * (value - 1)\n            value2 = i - value1\n            if value2 % 2 == 0:\n                i = value1 + value2 // 2\n            else:\n                i = value1 + (b + value2 - 1) // 2\n    print(i)", "t = int(input())\ni = t\nwhile i > 0:\n    (n, k) = [int(a) for a in input().split()]\n    z = 0\n    while k != 0:\n        x = 1\n        m = 0\n        while x * 2 <= k:\n            x = x * 2\n            m += 1\n        k -= x\n        z += pow(2, n - m - 1)\n    print(z)\n    i -= 1", "n = int(input())\nfor i in range(0, n):\n    (k, u) = map(int, input().split())\n    count = 0\n    for j in range(k - 1, -1, -1):\n        if u % 2 == 1:\n            count = count + (1 << j)\n        u = u >> 1\n    print(count)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    z = pow(2, n)\n    p = 0\n    q = z\n    yo = k\n    nt = n\n    for i in range(1, n):\n        if yo % 2 == 0:\n            pp = pow(2, nt)\n            xx = yo % pp\n            yo = yo - xx // 2\n        else:\n            pp = pow(2, nt)\n            xx = yo % pp\n            xx = pow(2, nt) - xx - 1\n            yo = yo + xx // 2\n        nt = nt - 1\n    print(yo)", "for q in range(int(input())):\n    temp = list(map(int, input().split()))\n    n = temp[0]\n    k = temp[1]\n    lb = 0\n    ub = 2 ** n - 1\n    pos = k\n    while ub - lb > 1:\n        mb = (lb + ub) // 2\n        if (pos - lb) % 2 == 0:\n            ub = mb\n            pos = lb + (pos - lb) // 2\n        elif (pos - lb) % 2 == 1:\n            lb = mb + 1\n            pos = (pos + ub) // 2\n    print(pos)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    m = n\n    tot = 2 ** n\n    tmp = tot\n    val = 0\n    tw = 2\n    while m > 0:\n        if k % tw != 0.0:\n            val = int(val) + int(tot / 2)\n            k = k - k % tw\n        tot /= 2\n        m -= 1\n        tw *= 2\n    print(int(val))", "q = int(input())\nfor i in range(q):\n    (n, k) = map(int, input().split(' '))\n    index = k\n    for j in range(n):\n        y = j\n        if j == 0:\n            if k % 2 == 0:\n                index = index // 2\n            else:\n                index = (index + (2 ** n - 1)) // 2\n        else:\n            m = 2 ** n // 2 ** j\n            part = index // m + 1\n            base = m * (part - 1)\n            r = index - base\n            if r % 2 == 0:\n                index = base + r // 2\n            else:\n                index = base + (m + r - 1) // 2\n    print(index)", "def function(N, K):\n    str = format(K, 'b').zfill(N)\n    str1 = str[::-1]\n    a = int(str1, 2)\n    return a\nQ = int(input())\nfor i in range(0, Q):\n    (N, K) = input().split(' ')\n    N = int(N)\n    K = int(K)\n    print(function(N, K))", "for q in range(int(input())):\n    temp = list(map(int, input().split()))\n    n = temp[0]\n    k = temp[1]\n    lb = 0\n    ub = 2 ** n - 1\n    pos = k\n    while ub - lb > 1:\n        mb = (lb + ub) // 2\n        if (pos - lb) % 2 == 0:\n            ub = mb\n            pos = lb + (pos - lb) // 2\n        elif (pos - lb) % 2 == 1:\n            lb = mb + 1\n            pos = (pos + ub) // 2\n    print(pos)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    m = n\n    tot = 2 ** n\n    tmp = tot\n    val = 0\n    tw = 2\n    while m > 0:\n        if k % tw != 0.0:\n            val = int(val) + int(tot / 2)\n            k = k - k % tw\n        tot /= 2\n        m -= 1\n        tw *= 2\n    print(int(val))", "def rotate(k, i):\n    m = (1 << i) - 1\n    return k & ~m | (k & m) >> 1 | k << i - 1 & m\nq = int(input())\nfor _ in range(q):\n    (n, k) = map(int, input().split())\n    for i in range(n, 0, -1):\n        k = rotate(k, i)\n    print(k)", "q = int(input())\nfor i in range(q):\n    (n, k) = map(int, input().split(' '))\n    index = k\n    for j in range(n):\n        y = j\n        if j == 0:\n            if k % 2 == 0:\n                index = index // 2\n            else:\n                index = (index + (2 ** n - 1)) // 2\n        else:\n            m = 2 ** n // 2 ** j\n            part = index // m + 1\n            base = m * (part - 1)\n            r = index - base\n            if r % 2 == 0:\n                index = base + r // 2\n            else:\n                index = base + (m + r - 1) // 2\n    print(index)", "for _ in range(int(input())):\n    str = list(map(int, input().split()))\n    pow = 1\n    for i in range(0, str[0]):\n        pow = pow * 2\n    ans = 0\n    for _ in range(0, str[0]):\n        if str[1] % 2 == 0:\n            str[1] = str[1] // 2\n        else:\n            str[1] = (str[1] - 1) // 2\n            ans = ans + pow // 2\n        pow = pow // 2\n    print(ans)", "def function(N, K):\n    str = format(K, 'b').zfill(N)\n    str1 = str[::-1]\n    a = int(str1, 2)\n    return a\nQ = int(input())\nfor i in range(0, Q):\n    (N, K) = input().split(' ')\n    N = int(N)\n    K = int(K)\n    print(function(N, K))", "def rotate(k, i):\n    m = (1 << i) - 1\n    return k & ~m | (k & m) >> 1 | k << i - 1 & m\nq = int(input())\nfor _ in range(q):\n    (n, k) = map(int, input().split())\n    for i in range(n, 0, -1):\n        k = rotate(k, i)\n    print(k)", "t = int(input())\nfor _ in range(t):\n    s = input().split()\n    n = int(s[0])\n    k = int(s[1])\n    pos = 0\n    while k > 0:\n        if k % 2 == 1:\n            pos += 2 ** (n - 1)\n        k //= 2\n        n -= 1\n    print(pos)", "def function(N, K):\n    str = format(K, 'b').zfill(N)\n    str1 = str[::-1]\n    a = int(str1, 2)\n    return a\nQ = int(input())\nfor i in range(0, Q):\n    (N, K) = input().split(' ')\n    N = int(N)\n    K = int(K)\n    print(function(N, K))", "def fun():\n    t = int(input())\n    for a0 in range(t):\n        (n, k) = map(int, input().strip().split())\n        no = 2 ** n\n        pre = 0\n        for i in range(n):\n            if k % 2 == 0:\n                k = k // 2\n            else:\n                pre = pre + 2 ** (n - 1 - i)\n                k = k - int(k // 2) - 1\n        ans = pre + k\n        print(ans)\nfun()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = format(k, '#0' + str(n + 2) + 'b')\n    print(int(a[:1:-1], base=2))", "tt = int(input())\nwhile tt:\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    siz = pow(2, n)\n    p = 0\n    q = siz\n    ans = k\n    nt = n\n    for i in range(1, n):\n        if ans % 2 == 0:\n            pp = pow(2, nt)\n            xx = ans % pp\n            ans = ans - xx // 2\n        else:\n            pp = pow(2, nt)\n            xx = ans % pp\n            xx = pow(2, nt) - xx - 1\n            ans = ans + xx // 2\n        nt = nt - 1\n    print(ans)\n    tt = tt - 1", "T = int(input())\nfor _ in range(T):\n    (N, K) = [int(x) for x in input().split()]\n    binaryK = bin(K)[2:].rjust(N, '0')\n    binaryK = binaryK[::-1]\n    print(int(binaryK, 2))", "tt = int(input())\nwhile tt:\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    siz = pow(2, n)\n    p = 0\n    q = siz\n    ans = k\n    nt = n\n    for i in range(1, n):\n        if ans % 2 == 0:\n            pp = pow(2, nt)\n            xx = ans % pp\n            ans = ans - xx // 2\n        else:\n            pp = pow(2, nt)\n            xx = ans % pp\n            xx = pow(2, nt) - xx - 1\n            ans = ans + xx // 2\n        nt = nt - 1\n    print(ans)\n    tt = tt - 1", "T = int(input())\nfor t in range(T):\n    s = input().split()\n    n = int(s[0])\n    k = int(s[1])\n    if n == 0:\n        print(0)\n        continue\n    pk = k\n    f = 0\n    for i in range(0, n - 1):\n        if pk % 2 == 0:\n            pk = pk >> 1\n        else:\n            f = f + (1 << n - i - 1)\n            pk = pk - 1 >> 1\n    print(f + pk)", "T = int(input())\nfor t in range(T):\n    s = input().split()\n    n = int(s[0])\n    k = int(s[1])\n    if n == 0:\n        print(0)\n        continue\n    pk = k\n    f = 0\n    for i in range(0, n - 1):\n        if pk % 2 == 0:\n            pk = pk >> 1\n        else:\n            f = f + (1 << n - i - 1)\n            pk = pk - 1 >> 1\n    print(f + pk)", "def compute(N, K, k):\n    if k == N:\n        return K\n    else:\n        size = 2 ** (N - k)\n        p = K // size\n        if K % 2 == 0:\n            return p * size + compute(N, K // 2, k + 1)\n        else:\n            return p * size + size // 2 + compute(N, K // 2, k + 1)\nQ = int(input())\nfor q in range(Q):\n    (N, K) = map(int, input().split())\n    print(compute(N, K, 0))", "def solve():\n    (N, K) = map(int, input().split())\n    sz = 2\n    for _ in range(N):\n        x = K // sz\n        y = K % sz\n        if y + y < sz:\n            K = y * 2 + x * sz\n        else:\n            K = (y - sz // 2) * 2 + 1 + x * sz\n        sz <<= 1\n    return K\nT = int(input())\nfor _ in range(T):\n    ans = solve()\n    print(ans)", "POWER = list()\nPOWER.append(1)\nfor i in range(0, 75):\n    POWER.append(POWER[i] * 2)\nq = int(input())\nwhile q > 0:\n    (n, k) = map(int, input().split())\n    b = POWER[n - 1]\n    x = k + 1\n    pik = 1\n    ret = 0\n    while x != 1:\n        if x > b:\n            x = x - b\n            ret = ret + pik\n        b = b // 2\n        pik = pik * 2\n    print(ret)\n    q = q - 1", "t = int(input())\nfor _ in range(t):\n    (b, num) = map(int, input().split())\n    k = 1\n    sum = 0\n    for i in range(b):\n        if num & 1 << i:\n            sum += 1 * (1 << b - 1 - i)\n    print(sum)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    pos = k\n    k = 0\n    while n - k >= 2:\n        t1 = pow(2, n - k)\n        temp = pos // t1\n        t2 = pos % t1\n        if t2 % 2 == 0:\n            pos = temp * t1 + t2 // 2\n        else:\n            pos = temp * t1 + t1 // 2 + (t2 - 1) // 2\n        k += 1\n    print(pos)", "import decimal\nfrom decimal import Decimal\ntrial = int(input())\nfor i in range(trial):\n    (n, k) = list(map(int, input().split()))\n    a = int(Decimal(k) / 2)\n    b = k % 2\n    for i in range(n - 2, -1, -1):\n        b = 2 * b + a % 2\n        a = int(Decimal(a) / 2)\n    print(b)", "import sys\nsys.setrecursionlimit(200000)\n\ndef calculate(k, numCards):\n    if k == 0:\n        return 0\n    if k % 2:\n        return numCards // 2 + calculate(k // 2, numCards // 2)\n    else:\n        return calculate(k // 2, numCards // 2)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = [int(x) for x in input().split()]\n    numCards = int(1 << n)\n    print(int(calculate(k, numCards)))", "import sys\nsys.setrecursionlimit(200000)\n\ndef calculate(k, numCards):\n    if k == 0:\n        return 0\n    if k % 2:\n        return numCards // 2 + calculate(k // 2, numCards // 2)\n    else:\n        return calculate(k // 2, numCards // 2)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = [int(x) for x in input().split()]\n    numCards = int(1 << n)\n    print(int(calculate(k, numCards)))", "for q in range(int(input())):\n    (n, k) = map(int, input().strip().split(' '))\n    low = 0\n    high = 2 ** n\n    total = 0\n    if k % 2 == 0:\n        total = k // 2\n        high = high // 2\n    else:\n        total = high // 2 + k // 2\n        low = high // 2\n    k = k // 2\n    while high - low > 2:\n        if k % 2 == 0:\n            total -= k // 2\n            high = high - (high - low) // 2\n        else:\n            total = low + (high - low) // 2 + k // 2\n            low = low + (high - low) // 2\n        k = k // 2\n    print(total)", "def f(n, k):\n    if k == 0:\n        return 0\n    if k % 2 == 0:\n        return f(n - 1, k // 2)\n    return f(n - 1, k // 2) + 2 ** (n - 1)\nt = int(input())\nwhile t:\n    t -= 1\n    [n, k] = list(map(int, input().split()))\n    print(f(n, k))", "t = int(input())\nfor z in range(t):\n    (n, k) = map(int, input().split())\n    pos = k\n    tot = pow(2, n)\n    ans = 0\n    for i in range(n):\n        if pos % 2 == 0:\n            pos = pos // 2\n        else:\n            ans += tot // 2\n            pos = pos // 2\n        tot = tot // 2\n    ans += pos\n    print(ans)", "from math import floor, log\n\ndef f(n, k):\n    if k == 0:\n        return 0\n    if k == 1:\n        return 2 ** (n - 1)\n    return f(n, k - 2 ** floor(log(k, 2))) + 2 ** (n - floor(log(k, 2)) - 1)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(f(n, k))"]