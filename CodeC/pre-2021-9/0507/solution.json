["import math\nn = int(input())\nchefs = list(map(int, input().split()))\ns = sum(chefs)\nif s > 2 * n:\n    n = math.ceil(s / 2)\nprint(n)", "import math\n\ndef soln(n, arr):\n    cs = sum(arr)\n    if cs / 2 > n:\n        return math.ceil(cs / 2)\n    return n\nn = int(input())\narr = list(map(int, input().split()))\nprint(soln(n, arr))", "import math\n\ndef soln(n, arr):\n    cs = sum(arr)\n    if cs / 2 > n:\n        return math.ceil(cs / 2)\n    return n\nn = int(input())\narr = list(map(int, input().split()))\nprint(soln(n, arr))", "import math\n\ndef soln(n, arr):\n    cs = sum(arr)\n    if cs / 2 > n:\n        return math.ceil(cs / 2)\n    return n\nn = int(input())\narr = list(map(int, input().split()))\nprint(soln(n, arr))", "import math\n\ndef soln(n, arr):\n    cs = sum(arr)\n    if cs / 2 > n:\n        return math.ceil(cs / 2)\n    return n\nn = int(input())\narr = list(map(int, input().split()))\nprint(soln(n, arr))", "import math\n\ndef soln(n, arr):\n    cs = sum(arr)\n    if cs / 2 > n:\n        return math.ceil(cs / 2)\n    return n\nn = int(input())\narr = list(map(int, input().split()))\nprint(soln(n, arr))", "length = int(input())\ntotal = sum(map(int, input().split()))\nextra_visits = total - 2 * length\nans = length\nif extra_visits > 0:\n    ans += extra_visits // 2\n    if extra_visits & 1:\n        ans += 1\nprint(ans)", "import math\n\ndef soln(n, arr):\n    cs = sum(arr)\n    if cs / 2 > n:\n        return math.ceil(cs / 2)\n    return n\nn = int(input())\narr = list(map(int, input().split()))\nprint(soln(n, arr))", "import math\n\ndef soln(n, arr):\n    cs = sum(arr)\n    if cs / 2 > n:\n        return math.ceil(cs / 2)\n    return n\nn = int(input())\narr = list(map(int, input().split()))\nprint(soln(n, arr))", "from math import ceil\nn = int(input())\nl = list(map(int, input().split()))\na = ceil(sum(l) / 2)\nprint(n if a < n else a)", "import math\nn = int(input())\nt = list(map(int, input().split()))\nsumm = sum(t)\nans = math.ceil(summ / 2)\nif ans < n:\n    print(n)\nelse:\n    print(ans)", "import math\nn = int(input())\nt = list(map(int, input().split()))\nsumm = sum(t)\nans = math.ceil(summ / 2)\nif ans < n:\n    print(n)\nelse:\n    print(ans)", "import math\nn = int(input())\nt = list(map(int, input().split()))\nsumm = sum(t)\nans = math.ceil(summ / 2)\nif ans < n:\n    print(n)\nelse:\n    print(ans)", "n = int(input())\nnli = list(map(int, input().split()))\nsm = sum(nli)\nif 2 * n >= sm:\n    print(n)\nelif sm % 2 == 0:\n    print(sm // 2)\nelse:\n    print((sm + 1) // 2)", "n = int(input())\nl = list(map(int, input().split()))\nt = sum(l)\nif t % 2 == 0:\n    d = t // 2\nelif t % 2 == 1:\n    d = t // 2 + 1\nif n > d:\n    print(n)\nelse:\n    print(d)", "n = int(input())\nt = [int(a) for a in input().split()]\nm = sum(t)\nif m % 2 == 0:\n    res = m // 2\nelse:\n    res = m // 2 + 1\nprint(max(res, n))", "import math\nn = int(input())\narr = list(map(int, input().split()))\nprint(max(n, math.ceil(sum(arr) / 2)))", "import math\nn = int(input())\nt = [int(x) for x in input().split()]\nprint(max(n, math.ceil(sum(t) / 2)))", "import math\nn = int(input())\nvisits = list(map(int, input().split()))\ntemp = sum(visits)\nres = math.ceil(temp / 2)\nres = max(n, res)\nprint(res)", "import math\nn = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in a:\n    s = s + i\nc = n * 2\nif s > c:\n    d = s - c\n    f = math.ceil(d / 2)\n    print(f + n)\nelse:\n    print(n)", "import math\nm = int(input())\np = [int(i) for i in input().split() if int(i) != 0]\nif len(p) == m:\n    p_visit = sum(p)\n    min_p = max(math.ceil(p_visit / 2), m)\n    print(min_p)", "import math\nn = int(input())\nt = [int(i) for i in input().split() if int(i) != 0]\nif len(t) == n:\n    t_visit = sum(t)\n    min_t = max(math.ceil(t_visit / 2), n)\n    print(min_t)", "n = int(input())\na = list(map(int, input().split()))\nb = sum(a)\nif b % 2 == 0:\n    c = b // 2\nelse:\n    c = b // 2 + 1\nif c < n:\n    print(n)\nelse:\n    print(c)", "n = int(input())\nc = n * 2\na = list(map(int, input().split()))\nb = sum(a)\nif b > c:\n    d = b - c\n    if d % 2 == 0:\n        print(n + d // 2)\n    else:\n        print(n + d // 2 + 1)\nelse:\n    print(n)", "def solution(arr):\n    entrance = len(arr) * 2\n    diff = sum(arr) - entrance\n    cool = len(arr) + diff // 2 + diff % 2\n    return max(cool, len(arr))\ntry:\n    t = input()\n    for test_case in range(int(t)):\n        arr = [int(e) for e in input().split()]\n        print(solution(arr))\nexcept EOFError:\n    pass", "import math\n\ndef solution(arr):\n    return max(len(arr), math.ceil(sum(arr) / 2))\ntry:\n    t = input()\n    for test_case in range(int(t)):\n        arr = [int(e) for e in input().split()]\n        print(solution(arr))\nexcept EOFError:\n    pass", "import math\nn = int(input())\nl = list(map(int, input().split()))\ns = sum(l)\nif s > n * 2:\n    diff = s - n * 2\n    print(n + math.ceil(diff / 2))\nelse:\n    print(n)", "from math import *\nn = int(input())\nx = list(map(int, input().split()))\na = 0\nfor j in x:\n    a += j / 2\nb = ceil(a)\nif b < n:\n    print(n)\nelse:\n    print(b)", "n = int(input())\nt = list(map(int, input().split()))\nm = sum(t)\nif m % 2 == 0:\n    res = m // 2\nelse:\n    res = m // 2 + 1\nif res < n:\n    print(n)\nelse:\n    print(res)", "import math\nn = int(input())\nsumu = sum(map(int, input().split()))\nif sumu <= n * 2:\n    print(n)\nelse:\n    k = sumu - n * 2\n    ans = math.ceil(k / 2)\n    print(n + ans)", "n = int(input())\nc = n\nt = list(map(int, input().split()))\nval = 0\nfor i in range(n):\n    val += t[i]\ntot = n\nval -= 2 * n\nif val > 0:\n    tot += val // 2\n    if val % 2 > 0:\n        tot += 1\nprint(tot)", "import math\nN = int(input())\ntimes = [int(n) for n in input().split()]\navailable = 2 * N\nrequired = 0\nfor t in times:\n    required += t\ndiff = required - available\nif diff > 0:\n    to_buy = math.ceil(diff / 2.0)\n    print(N + to_buy)\n    print('\\n')\nelse:\n    print(N)\n    print('\\n')", "import math\nn = int(input())\nsum = 0\nfor i in input().split():\n    sum += int(i)\nans = max(sum // 2, math.ceil(sum / 2))\nprint(max(ans, n))", "import math as m\nt = int(input())\nx = list(map(int, input().split()))\np = sum(x)\np = p - 2 * t\ntotal = t\nif p > 0:\n    total += int(m.ceil(p / 2.0))\nprint(total)", "t = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nif s % 2 == 0:\n    s = int(s / 2)\nelse:\n    s = int(s / 2) + 1\nif t > s:\n    print(t)\nelse:\n    print(s)", "N = int(input())\nbuy = 0\nT = input().split(' ')\nfor i in range(N):\n    buy += int(T[i])\nif buy % 2 == 0:\n    buy /= 2\nelse:\n    buy /= 2\n    buy += 1\nprint(int(max(buy, N)))", "noChefs = int(input())\nchefsChoice = input().split()\nsum = 0\nfor i in chefsChoice:\n    sum += int(i)\nif sum % 2 != 0:\n    sum += 1\nprint(max(int(sum / 2), noChefs))", "t = int(input())\nx = input().split(' ')\nx = [int(i) for i in x]\ny = (sum(x) + 1) // 2\nif y > t:\n    print(y)\nelse:\n    print(t)", "import math\nn = int(input())\nl = list(map(int, input().split()))\np = sum(l)\nprint(max(n, math.ceil(p / 2)))", "n = int(input())\narr = [int(i) for i in input().split()]\nprint(max(n, (sum(arr) + 1) // 2))", "n = int(input())\nt = list(map(int, input().split()))\nsomme = 0\nfor i in range(n):\n    somme += t[i]\ntickets = somme - 2 * n\nif tickets <= 0:\n    print(n)\nelif tickets % 2 == 0:\n    print(n + tickets // 2)\nelse:\n    print(n + tickets // 2 + 1)", "n = int(input())\na = sorted([int(x) for x in input().split()])\n(ans, i) = (0, 0)\nx = 0\nwhile i < n:\n    if a[i] < x:\n        a[i] = 0\n        x -= a[i]\n    else:\n        a[i] -= x\n        x = 0\n    ans += a[i] // 2\n    if a[i] % 2 != 0:\n        ans += 1\n        x += 1\n    i += 1\nprint(max([ans, n]))", "n = int(input())\na = [int(i) for i in input().strip().split()]\na.sort()\nev = []\nod = []\nodon = []\nodd = 0\neven = 0\ntick = 0\none = a.count(1)\nv = 0\nv += one\ntem = 0\nfor i in a:\n    if i % 2 == 0:\n        ev.append(i)\n    else:\n        od.append(i)\n        if i != 1:\n            odon.append(i)\nfor i in range(len(odon)):\n    if one > 0:\n        odon[i] -= 1\n        one -= 1\nfor i in range(len(ev)):\n    ev[i] -= 2\n    v += 1\nfor i in range(len(odon)):\n    if odon[i] % 2 != 0:\n        one += 1\n        tem += 1\n        odon[i] -= 1\nfor i in range(len(odon)):\n    if odon[i] != 0:\n        odon[i] -= 2\n        v += 1\nte = sum(ev) + sum(odon)\nte -= one\nif te % 2 == 0:\n    te /= 2\nelse:\n    te = (te + 1) / 2\nv += max(te, 0)\nv += tem\nprint(int(v))", "n = int(input())\nt = [int(i) for i in input().split()]\nop = n\nrem = still = 0\nfor i in range(n):\n    t[i] -= 2\n    if t[i] < 0:\n        rem += -1 * t[i]\n    elif t[i] > 0:\n        still += t[i]\nif still > rem:\n    still -= rem\n    if still % 2 == 0:\n        op += still // 2\n    else:\n        op += still // 2 + 1\nprint(op)", "n = int(input())\nT = [int(i) for i in input().split()]\nprint(max(n, -(-sum(T) // 2)))", "n = int(input())\nk = n\nl = list(map(int, input().split()))\nn = max(sum(l) - 2 * n, 0)\nprint(k + n // 2 + n % 2)", "n = int(input())\nt = [int(i) for i in input().split()]\nop = n\nrem = still = 0\nfor i in range(n):\n    t[i] -= 2\n    if t[i] < 0:\n        rem += -1 * t[i]\n    elif t[i] > 0:\n        still += t[i]\nif still > rem:\n    still -= rem\n    if still % 2 == 0:\n        op += still // 2\n    else:\n        op += still // 2 + 1\nprint(op)", "n = int(input())\nt = [int(i) for i in input().split()]\nop = n\nrem = still = 0\nfor i in range(n):\n    t[i] -= 2\n    if t[i] < 0:\n        rem += -1 * t[i]\n    elif t[i] > 0:\n        still += t[i]\nif still > rem:\n    still -= rem\n    if still % 2 == 0:\n        op += still // 2\n    else:\n        op += still // 2 + 1\nprint(op)", "import sys\nf = sys.stdin\n\ndef solve2(x):\n    return max(len(x), (sum(x) + 1) // 2)\nt = int(f.readline())\nn = [int(x) for x in f.readline().split()]\nprint(solve2(n))", "import math\nn = int(input())\ntot = 0\nl = list(map(int, input().split(' ')))\ntot = sum(l)\nvoucher = n\nrem = tot - n\nif rem == 0:\n    print(n)\nelif rem - voucher > 0:\n    print(n + math.ceil((rem - voucher) / 2))\nelse:\n    print(n)", "n = int(input())\nA = list(map(int, input().strip().split()))\ns = sum(A)\na = s - 2 * n\nans = n\nif a > 0:\n    ans = ans + (a + 1) // 2\nprint(ans)", "import math\nn = int(input())\nt = [int(x) for x in input().split()]\ns = sum(t)\nif s <= 2 * n:\n    print(n)\nelse:\n    print(math.ceil(s / 2))", "import math\nn = int(input())\nl = [int(x) for x in input().split()]\nt = sum(l)\nticket = n\nt = t - n * 2\nif t > 0:\n    ticket = ticket + math.ceil(t / 2)\nprint(ticket)", "import math\nn = int(input())\na = list(map(int, input().split()))\ncount = 0\ncount += n\nsum = 0\nfor i in range(n):\n    sum += a[i]\nsum -= 2 * n\nif sum > 0:\n    count += math.ceil(sum / 2)\nprint(count)", "n = int(input())\nprint(max(n, (sum(map(int, input().split(' '))) + 1) // 2))", "import math\nn = int(input())\nv = sum(list(map(int, input().split())))\nprint(max(n, math.ceil(v / 2)))", "n = int(input())\nl = list(map(int, input().split()))\nfrom math import ceil\nvisits = max(ceil(sum(l) / 2), n)\nprint(visits)", "n = int(input())\nprint(max(n, (sum(map(int, input().split())) + 1) // 2))"]