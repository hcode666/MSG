["t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    b = [0] * 2 * n\n    si = n + 1\n    ei = n + 1\n    res = 0\n    for (i, ai) in enumerate(a):\n        if ai == 0:\n            si -= 1\n            b[si] = i + 1\n        else:\n            idx = b.index(ai)\n            if b[idx + 1] == 0:\n                b[idx + 1] = i + 1\n                ei += 1\n            else:\n                left = idx - si + 1\n                right = ei - idx - 1\n                if left < right:\n                    res += left\n                    si -= 1\n                    for j in range(si, idx):\n                        b[j] = b[j + 1]\n                    b[idx] = i + 1\n                else:\n                    res += right\n                    for j in range(ei, idx + 1, -1):\n                        b[j] = b[j - 1]\n                    ei += 1\n                    b[idx + 1] = i + 1\n    print(res)", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    b = [0] * 2 * n\n    si = n + 1\n    ei = n + 1\n    res = 0\n    for (i, ai) in enumerate(a):\n        if ai == 0:\n            si -= 1\n            b[si] = i + 1\n        else:\n            idx = b.index(ai)\n            if b[idx + 1] == 0:\n                b[idx + 1] = i + 1\n                ei += 1\n            else:\n                left = idx - si + 1\n                right = ei - idx - 1\n                if left < right:\n                    res += left\n                    si -= 1\n                    for j in range(si, idx):\n                        b[j] = b[j + 1]\n                    b[idx] = i + 1\n                else:\n                    res += right\n                    for j in range(ei, idx + 1, -1):\n                        b[j] = b[j - 1]\n                    ei += 1\n                    b[idx + 1] = i + 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    st = 0\n    l = [1]\n    for i in range(1, n):\n        if lst[i] == 0:\n            l.insert(0, i + 1)\n        elif lst[i] in l:\n            inx = l.index(lst[i])\n            if inx + 1 > len(l) - inx - 1:\n                st += len(l) - inx - 1\n            else:\n                st += inx + 1\n            l.insert(inx + 1, i + 1)\n        else:\n            l.append(i + 1)\n    print(st)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    st = 0\n    l = [1]\n    for i in range(1, n):\n        if lst[i] == 0:\n            l.insert(0, i + 1)\n        elif lst[i] in l:\n            inx = l.index(lst[i])\n            if inx + 1 > len(l) - inx - 1:\n                st += len(l) - inx - 1\n            else:\n                st += inx + 1\n            l.insert(inx + 1, i + 1)\n        else:\n            l.append(i + 1)\n    print(st)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    st = 0\n    l = [1]\n    for i in range(1, n):\n        if lst[i] == 0:\n            l.insert(0, i + 1)\n        elif lst[i] in l:\n            inx = l.index(lst[i])\n            if inx + 1 > len(l) - inx - 1:\n                st += len(l) - inx - 1\n            else:\n                st += inx + 1\n            l.insert(inx + 1, i + 1)\n        else:\n            l.append(i + 1)\n    print(st)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = []\n    c = 0\n    for j in range(1, n + 1):\n        if a[j - 1] == 0:\n            p.insert(0, j)\n        else:\n            l = p.index(a[j - 1]) + 1\n            if l <= len(p) / 2:\n                c += l\n            else:\n                c += len(p) - l\n            p.insert(l, j)\n    print(c)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = list(map(int, input().split()))\n    M = []\n    ans = 0\n    for i in range(n):\n        if L[i] == 0:\n            M.insert(0, i + 1)\n        else:\n            a = L[i]\n            b = M.index(a)\n            m = len(M)\n            ans += min(b + 1, m - b - 1)\n            M.insert(b + 1, i + 1)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = []\n    c = 0\n    for j in range(1, n + 1):\n        if a[j - 1] == 0:\n            p.insert(0, j)\n        else:\n            l = p.index(a[j - 1]) + 1\n            if l <= len(p) / 2:\n                c += l\n            else:\n                c += len(p) - l\n            p.insert(l, j)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    place = []\n    count = 0\n    for k in range(1, n + 1):\n        if a[k - 1] == 0:\n            place.insert(0, k)\n        else:\n            loc = place.index(a[k - 1]) + 1\n            if loc <= len(place) / 2:\n                count += loc\n            else:\n                count += len(place) - loc\n            place.insert(loc, k)\n    print(count)", "import sys\nimport math\n\ndef main(arr):\n    ans = 0\n    line = [None] * len(arr)\n    line[0] = 1\n    for i in range(1, len(arr)):\n        e = i + 1\n        next_to = arr[i]\n        idx = -1\n        if next_to != 0:\n            for j in range(len(line)):\n                if next_to == line[j]:\n                    idx = j\n        left = 0\n        right = 0\n        for j in range(0, idx + 1):\n            if line[j]:\n                left += 1\n        for j in range(idx + 1, len(line)):\n            if line[j]:\n                right += 1\n        ans += min(right, left)\n        line = line[0:idx + 1] + [e] + line[idx + 1:]\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(main(arr))", "import sys\nimport math\n\ndef main(arr):\n    ans = 0\n    line = []\n    for i in range(len(arr)):\n        e = i + 1\n        idx = i\n        if arr[i] != 0:\n            idx = line.index(arr[i])\n            line.insert(idx + 1, e)\n        else:\n            line.insert(0, e)\n        ans += min(len(line[0:idx + 1]), len(line[idx + 2:]))\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(main(arr))", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    L = []\n    Total = 0\n    for i in range(1, N + 1):\n        if A[i - 1] == 0:\n            L.insert(0, i)\n        else:\n            ind = L.index(A[i - 1])\n            L.insert(ind + 1, i)\n            Total += min([len(L[:ind + 1]), len(L[ind + 2:])])\n    print(Total)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        N = list(map(int, input().split()))\n        seating = []\n        swaps = 0\n        for i in range(n):\n            if N[i] == 0:\n                seating.insert(0, i + 1)\n            elif N[i] == seating[-1]:\n                seating.append(i + 1)\n            else:\n                x = seating.index(N[i])\n                seating.insert(x + 1, i + 1)\n                swaps += min(x + 1, i - x - 1)\n        print(swaps)\nexcept EOFError:\n    pass", "for i in range(int(input())):\n    n = int(input())\n    people = list(map(int, input().split()))\n    seating = [0]\n    least_shift = 0\n    for j in range(n):\n        index = seating.index(people[j])\n        least_shift += min(len(seating) - 1 - index, index)\n        seating.insert(index + 1, j + 1)\n    print(least_shift)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = []\n    c = 0\n    s.append(1)\n    for k in range(1, n):\n        if a[k] == 0:\n            s.insert(0, k + 1)\n        else:\n            ind = s.index(a[k])\n            s.insert(ind + 1, k + 1)\n            if ind + 1 <= k - ind - 1:\n                c += ind + 1\n            else:\n                c = c + k - ind - 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = [0]\n    c = 0\n    for i in range(n):\n        p = a.index(arr[i])\n        c += min(p, len(a) - 1 - p)\n        a.insert(p + 1, i + 1)\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    nog = list(map(int, input().split(' ')))\n    count = 0\n    npxy = [0]\n    for i in range(n):\n        pos = npxy.index(nog[i])\n        count += min(pos, len(npxy) - pos - 1)\n        npxy.insert(pos + 1, i + 1)\n    print(count)", "try:\n    for t in range(int(input())):\n        n = int(input())\n        count = 0\n        A = list(map(int, input().split()))\n        B = [0]\n        for i in range(n):\n            pos = B.index(A[i])\n            count += min(pos, len(B) - pos - 1)\n            B.insert(pos + 1, i + 1)\n        print(count)\nexcept:\n    pass", "def getResult(n, arr):\n    a = [0]\n    c = 0\n    for i in range(n):\n        p = a.index(arr[i])\n        c += min(p, len(a) - 1 - p)\n        a.insert(p + 1, i + 1)\n    return c\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(getResult(n, arr))", "try:\n    for t in range(int(input())):\n        n = int(input())\n        count = 0\n        A = list(map(int, input().split()))\n        B = [0]\n        for i in range(n):\n            pos = B.index(A[i])\n            count += min(pos, len(B) - pos - 1)\n            B.insert(pos + 1, i + 1)\n        print(count)\nexcept:\n    pass", "for t in range(int(input())):\n    n = int(input())\n    count = 0\n    A = list(map(int, input().split()))\n    B = [0]\n    for i in range(n):\n        pos = B.index(A[i])\n        count += min(pos, len(B) - pos - 1)\n        B.insert(pos + 1, i + 1)\n    print(count)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = [0]\n    count = 0\n    for i in range(n):\n        pos = B.index(A[i])\n        count += min(pos, len(B) - pos - 1)\n        B.insert(pos + 1, i + 1)\n    print(count)", "test_case = int(input())\nwhile test_case > 0:\n    steps = 0\n    test_case -= 1\n    n = int(input())\n    array = list(map(int, input().split()))\n    line = []\n    for i in range(len(array)):\n        if array[i] == 0:\n            line.insert(0, i + 1)\n        else:\n            location = line.index(array[i])\n            if location >= len(line) // 2:\n                steps += len(line) - (location + 1)\n                line.insert(location + 1, i + 1)\n            else:\n                steps += location + 1\n                line.insert(location + 1, i + 1)\n    print(steps)", "T = int(input())\nwhile T:\n    n = int(input())\n    li = [int(x) for x in input().split()]\n    order = []\n    steps = 0\n    for i in range(len(li)):\n        if li[i] == 0:\n            order.insert(li[i], i + 1)\n        else:\n            len1 = len(order[:order.index(li[i])]) + 1\n            len2 = len(order[order.index(li[i]) + 1:])\n            steps += min([len1, len2])\n            order.insert(order.index(li[i]) + 1, i + 1)\n    print(steps)\n    T -= 1", "for tests in range(int(input())):\n    N = int(input())\n    A = [int(i) for i in input().split()]\n    S = []\n    i = 0\n    moves = 0\n    for j in range(N):\n        i += 1\n        new = A[j]\n        if new == 0:\n            S = [i] + S\n        else:\n            for k in range(len(S)):\n                if new == S[k]:\n                    break\n            k += 1\n            moves += min(k, len(S) - k)\n            S = S[:k] + [i] + S[k:]\n    print(moves)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = list(map(int, input().split(' ')))\n    count = 0\n    a = []\n    for i in range(n):\n        c = b[i]\n        if c == 0:\n            if len(a) == 0:\n                a.append(i + 1)\n            else:\n                a.insert(0, i + 1)\n        elif c in a:\n            ind = a.index(c)\n            l = ind + 1\n            r = len(a) - ind - 1\n            count += min(l, r)\n            a.insert(ind + 1, i + 1)\n        else:\n            a.append(i + 1)\n    print(count)", "def solve(arr, n):\n    line = [1]\n    total = 0\n    for i in range(1, n):\n        element = arr[i]\n        if element == 0:\n            line.insert(0, i + 1)\n        else:\n            index = line.index(arr[i])\n            total += min(index + 1, len(line) - index - 1)\n            line.insert(index + 1, i + 1)\n    return total\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(arr, n))"]