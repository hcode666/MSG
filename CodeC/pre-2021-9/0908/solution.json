["def solve(a, b, n, avg):\n    if a[0] + b[0] == avg:\n        b[0] = 0\n    elif a[0] + b[1] == avg:\n        b[1] = 0\n    elif a[0] + b[0] + b[1] == avg:\n        (b[0], b[1]) = (0, 0)\n    elif a[0] != avg:\n        flag = 1\n        return -1\n    if a[n - 1] + b[n - 1] == avg:\n        b[n - 1] = 0\n    elif a[n - 1] + b[n - 2] == avg:\n        b[n - 2] = 0\n    elif a[n - 1] + b[n - 1] + b[n - 2] == avg:\n        (b[n - 1], b[n - 2]) = (0, 0)\n    elif a[n - 1] != avg:\n        flag = 1\n        return -1\n    for i in range(1, n - 1):\n        a[i] += b[i - 1]\n        b[i - 1] = 0\n        if a[i] + b[i] == avg:\n            b[i] = 0\n        elif a[i] + b[i + 1] == avg:\n            b[i + 1] = 0\n        elif a[i] + b[i] + b[i + 1] == avg:\n            (b[i], b[i + 1]) = (0, 0)\n        elif a[i] != avg:\n            return -1\n    return avg\nfor t in range(int(input())):\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    sun = sum(a) + sum(b)\n    avg = sun // n\n    if n <= 1:\n        print(sun)\n    elif n <= 15:\n        print(solve(a, b, n, avg))\n    else:\n        print(solve(a, b, n, avg))\n        print()", "def solve(a, b, n, avg):\n    if a[0] + b[0] == avg:\n        b[0] = 0\n    elif a[0] + b[1] == avg:\n        b[1] = 0\n    elif a[0] + b[0] + b[1] == avg:\n        (b[0], b[1]) = (0, 0)\n    elif a[0] != avg:\n        flag = 1\n        return -1\n    if a[n - 1] + b[n - 1] == avg:\n        b[n - 1] = 0\n    elif a[n - 1] + b[n - 2] == avg:\n        b[n - 2] = 0\n    elif a[n - 1] + b[n - 1] + b[n - 2] == avg:\n        (b[n - 1], b[n - 2]) = (0, 0)\n    elif a[n - 1] != avg:\n        flag = 1\n        return -1\n    for i in range(1, n - 1):\n        a[i] += b[i - 1]\n        b[i - 1] = 0\n        if a[i] + b[i] == avg:\n            b[i] = 0\n        elif a[i] + b[i + 1] == avg:\n            b[i + 1] = 0\n        elif a[i] + b[i] + b[i + 1] == avg:\n            (b[i], b[i + 1]) = (0, 0)\n        elif a[i] != avg:\n            return -1\n    return avg\nfor t in range(int(input())):\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    sun = sum(a) + sum(b)\n    avg = sun // n\n    if n <= 1:\n        print(sun)\n    elif n <= 15:\n        print(solve(a, b, n, avg))\n    else:\n        print(solve(a, b, n, avg))\n        print()", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    top = [int(i) for i in input().strip().split()]\n    bottom = [int(i) for i in input().strip().split()]\n    top.append(0)\n    bottom.append(0)\n    count = [0 for i in range(n)]\n    count.append(1)\n    su = sum(top) + sum(bottom)\n    ans = 0\n    if su % n != 0:\n        print(-1)\n    else:\n        q = int(su / n)\n        for i in range(n):\n            if bottom[i] + top[i - 1] + top[i] + top[i + 1] == q and count[i - 1] == 0 and (count[i] == 0) and (count[i + 1] == 0):\n                count[i - 1] = 0\n                count[i] = 0\n                count[i + 1] = 0\n            elif bottom[i] + top[i - 1] + top[i] == q and count[i - 1] == 0 and (count[i] == 0):\n                count[i] = 1\n                count[i - 1] = 1\n            elif bottom[i] + top[i - 1] + top[i + 1] == q and count[i - 1] == 0 and (count[i + 1] == 0):\n                count[i - 1] = 1\n                count[i + 1] = 1\n            elif bottom[i] + top[i] + top[i + 1] == q and count[i] == 0 and (count[i + 1] == 0):\n                count[i] = 1\n                count[i + 1] = 1\n            elif bottom[i] + top[i - 1] == q and count[i - 1] == 0:\n                count[i - 1] = 1\n            elif bottom[i] + top[i] == q and count[i] == 0:\n                count[i] = 1\n            elif bottom[i] + top[i + 1] == q and count[i + 1] == 0:\n                count[i + 1] = 1\n            elif bottom[i] == q:\n                continue\n            else:\n                ans = -1\n                break\n        if ans == -1:\n            print(ans)\n        else:\n            print(q)", "def solve(a, b, n, avg):\n    if a[0] + b[0] == avg:\n        b[0] = 0\n    elif a[0] + b[1] == avg:\n        b[1] = 0\n    elif a[0] + b[0] + b[1] == avg:\n        (b[0], b[1]) = (0, 0)\n    elif a[0] != avg:\n        flag = 1\n        return -1\n    if a[n - 1] + b[n - 1] == avg:\n        b[n - 1] = 0\n    elif a[n - 1] + b[n - 2] == avg:\n        b[n - 2] = 0\n    elif a[n - 1] + b[n - 1] + b[n - 2] == avg:\n        (b[n - 1], b[n - 2]) = (0, 0)\n    elif a[n - 1] != avg:\n        flag = 1\n        return -1\n    for i in range(1, n - 1):\n        a[i] += b[i - 1]\n        b[i - 1] = 0\n        if a[i] + b[i] == avg:\n            b[i] = 0\n        elif a[i] + b[i + 1] == avg:\n            b[i + 1] = 0\n        elif a[i] + b[i] + b[i + 1] == avg:\n            (b[i], b[i + 1]) = (0, 0)\n        elif a[i] != avg:\n            return -1\n    return avg\nfor t in range(int(input())):\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    sun = sum(a) + sum(b)\n    avg = sun // n\n    if n <= 1:\n        print(sun)\n    elif n <= 15:\n        print(solve(a, b, n, avg))\n    else:\n        print(solve(a, b, n, avg))\n        print()", "__author__ = 'kamal'\n\ndef fun(A, B, N, a):\n    flag = True\n    for i in range(1, N):\n        if B[i] == a:\n            a = B[i]\n        elif a == B[i] + A[i - 1]:\n            A[i - 1] = 0\n        elif a == B[i] + A[i - 1] + A[i]:\n            A[i - 1] = 0\n            A[i] = 0\n        elif a == B[i] + A[i - 1] + A[i] + A[i + 1]:\n            A[i - 1] = 0\n            A[i] = 0\n            A[i + 1] = 0\n        elif a == B[i] + A[i - 1] + A[i + 1]:\n            A[i - 1] = 0\n            A[i + 1] = 0\n        elif a == B[i] + A[i]:\n            A[i] = 0\n        elif a == B[i] + A[i] + A[i + 1]:\n            A[i] = 0\n            A[i + 1] = 0\n        elif a == B[i] + A[i + 1]:\n            A[i + 1] = 0\n        else:\n            flag = False\n            break\n    if flag and sum(A) == 0:\n        return a\n    else:\n        return -1\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    K = list(map(int, input().strip().split()))\n    B = list(map(int, input().strip().split()))\n    K.append(0)\n    K.append(0)\n    A = [i for i in K]\n    ans = -1\n    if N == 1:\n        ans = A[0] + B[0]\n    else:\n        a = fun(A, B, N, B[0])\n        A = [i for i in K]\n        b = fun([0] + A[1:], B, N, B[0] + A[0])\n        A = [i for i in K]\n        c = fun(A[:1] + [0] + A[2:], B, N, B[0] + A[1])\n        A = [i for i in K]\n        d = fun([0, 0] + A[2:], B, N, B[0] + A[0] + A[1])\n        ans = max(a, b, c, d)\n    print(ans)", "t = int(input())\nfor ttt in range(t):\n    n = int(input())\n    x = input().split()\n    y = input().split()\n    a = []\n    b = []\n    ans = []\n    for i in range(n):\n        b.append(int(x[i]))\n    for i in range(n):\n        a.append(int(y[i]))\n    if n == 1:\n        print(a[0] + b[0])\n        continue\n    aa = []\n    bb = []\n    flag = 1\n    for i in range(n):\n        c = b[i]\n        d = a[i]\n        bb.append(c)\n        aa.append(d)\n    maximum = aa[0]\n    for i in range(1, n - 1):\n        aa[i] = aa[i] + bb[i - 1]\n        if aa[i] == maximum:\n            continue\n        if aa[i] > maximum:\n            flag = 0\n            break\n        if aa[i] + bb[i] == maximum:\n            aa[i] = aa[i] + bb[i]\n            bb[i] = 0\n        elif aa[i] + bb[i + 1] == maximum:\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i + 1]\n        elif aa[i] + bb[i] + bb[i + 1] == maximum:\n            bb[i] = 0\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i] + bb[i + 1]\n        else:\n            flag = 0\n            break\n    if flag == 0:\n        ans.append(-1)\n    if flag == 1:\n        aa[n - 1] = aa[n - 1] + bb[n - 1] + bb[n - 2]\n        if aa[n - 1] == maximum:\n            ans.append(maximum)\n        else:\n            ans.append(-1)\n    aa = []\n    bb = []\n    flag = 1\n    for i in range(n):\n        c = b[i]\n        d = a[i]\n        bb.append(c)\n        aa.append(d)\n    maximum = aa[0] + bb[0]\n    aa[0] = aa[0] + bb[0]\n    bb[0] = 0\n    for i in range(1, n - 1):\n        aa[i] = aa[i] + bb[i - 1]\n        if aa[i] == maximum:\n            continue\n        if aa[i] > maximum:\n            flag = 0\n            break\n        if aa[i] + bb[i] == maximum:\n            aa[i] = aa[i] + bb[i]\n            bb[i] = 0\n        elif aa[i] + bb[i + 1] == maximum:\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i + 1]\n        elif aa[i] + bb[i] + bb[i + 1] == maximum:\n            bb[i] = 0\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i] + bb[i + 1]\n        else:\n            flag = 0\n            break\n    if flag == 0:\n        ans.append(-1)\n    if flag == 1:\n        aa[n - 1] = aa[n - 1] + bb[n - 1] + bb[n - 2]\n        if aa[n - 1] == maximum:\n            ans.append(maximum)\n        else:\n            ans.append(-1)\n    aa = []\n    bb = []\n    flag = 1\n    for i in range(n):\n        c = b[i]\n        d = a[i]\n        bb.append(c)\n        aa.append(d)\n    maximum = aa[0] + bb[1]\n    aa[0] = aa[0] + bb[1]\n    bb[1] = 0\n    for i in range(1, n - 1):\n        aa[i] = aa[i] + bb[i - 1]\n        if aa[i] == maximum:\n            continue\n        if aa[i] > maximum:\n            flag = 0\n            break\n        if aa[i] + bb[i] == maximum:\n            aa[i] = aa[i] + bb[i]\n            bb[i] = 0\n        elif aa[i] + bb[i + 1] == maximum:\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i + 1]\n        elif aa[i] + bb[i] + bb[i + 1] == maximum:\n            bb[i] = 0\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i] + bb[i + 1]\n        else:\n            flag = 0\n            break\n    if flag == 0:\n        ans.append(-1)\n    if flag == 1:\n        aa[n - 1] = aa[n - 1] + bb[n - 1] + bb[n - 2]\n        if aa[n - 1] == maximum:\n            ans.append(maximum)\n        else:\n            ans.append(-1)\n    aa = []\n    bb = []\n    flag = 1\n    for i in range(n):\n        c = b[i]\n        d = a[i]\n        bb.append(c)\n        aa.append(d)\n    maximum = aa[0] + bb[0] + bb[1]\n    aa[0] = bb[0] + aa[0] + bb[1]\n    bb[0] = 0\n    bb[1] = 0\n    for i in range(1, n - 1):\n        aa[i] = aa[i] + bb[i - 1]\n        if aa[i] == maximum:\n            continue\n        if aa[i] > maximum:\n            flag = 0\n            break\n        if aa[i] + bb[i] == maximum:\n            aa[i] = aa[i] + bb[i]\n            bb[i] = 0\n        elif aa[i] + bb[i + 1] == maximum:\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i + 1]\n        elif aa[i] + bb[i] + bb[i + 1] == maximum:\n            bb[i] = 0\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i] + bb[i + 1]\n        else:\n            flag = 0\n            break\n    if flag == 0:\n        ans.append(-1)\n    if flag == 1:\n        aa[n - 1] = aa[n - 1] + bb[n - 1] + bb[n - 2]\n        if aa[n - 1] == maximum:\n            ans.append(maximum)\n        else:\n            ans.append(-1)\n    print(max(ans))", "t = int(input())\nfor ttt in range(t):\n    n = int(input())\n    x = input().split()\n    y = input().split()\n    a = []\n    b = []\n    ans = []\n    for i in range(n):\n        b.append(int(x[i]))\n    for i in range(n):\n        a.append(int(y[i]))\n    if n == 1:\n        print(a[0] + b[0])\n        continue\n    aa = []\n    bb = []\n    flag = 1\n    for i in range(n):\n        c = b[i]\n        d = a[i]\n        bb.append(c)\n        aa.append(d)\n    maximum = aa[0]\n    for i in range(1, n - 1):\n        aa[i] = aa[i] + bb[i - 1]\n        if aa[i] == maximum:\n            continue\n        if aa[i] > maximum:\n            flag = 0\n            break\n        if aa[i] + bb[i] == maximum:\n            aa[i] = aa[i] + bb[i]\n            bb[i] = 0\n        elif aa[i] + bb[i + 1] == maximum:\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i + 1]\n        elif aa[i] + bb[i] + bb[i + 1] == maximum:\n            bb[i] = 0\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i] + bb[i + 1]\n        else:\n            flag = 0\n            break\n    if flag == 0:\n        ans.append(-1)\n    if flag == 1:\n        aa[n - 1] = aa[n - 1] + bb[n - 1] + bb[n - 2]\n        if aa[n - 1] == maximum:\n            ans.append(maximum)\n        else:\n            ans.append(-1)\n    aa = []\n    bb = []\n    flag = 1\n    for i in range(n):\n        c = b[i]\n        d = a[i]\n        bb.append(c)\n        aa.append(d)\n    maximum = aa[0] + bb[0]\n    aa[0] = aa[0] + bb[0]\n    bb[0] = 0\n    for i in range(1, n - 1):\n        aa[i] = aa[i] + bb[i - 1]\n        if aa[i] == maximum:\n            continue\n        if aa[i] > maximum:\n            flag = 0\n            break\n        if aa[i] + bb[i] == maximum:\n            aa[i] = aa[i] + bb[i]\n            bb[i] = 0\n        elif aa[i] + bb[i + 1] == maximum:\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i + 1]\n        elif aa[i] + bb[i] + bb[i + 1] == maximum:\n            bb[i] = 0\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i] + bb[i + 1]\n        else:\n            flag = 0\n            break\n    if flag == 0:\n        ans.append(-1)\n    if flag == 1:\n        aa[n - 1] = aa[n - 1] + bb[n - 1] + bb[n - 2]\n        if aa[n - 1] == maximum:\n            ans.append(maximum)\n        else:\n            ans.append(-1)\n    aa = []\n    bb = []\n    flag = 1\n    for i in range(n):\n        c = b[i]\n        d = a[i]\n        bb.append(c)\n        aa.append(d)\n    maximum = aa[0] + bb[1]\n    aa[0] = aa[0] + bb[1]\n    bb[1] = 0\n    for i in range(1, n - 1):\n        aa[i] = aa[i] + bb[i - 1]\n        if aa[i] == maximum:\n            continue\n        if aa[i] > maximum:\n            flag = 0\n            break\n        if aa[i] + bb[i] == maximum:\n            aa[i] = aa[i] + bb[i]\n            bb[i] = 0\n        elif aa[i] + bb[i + 1] == maximum:\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i + 1]\n        elif aa[i] + bb[i] + bb[i + 1] == maximum:\n            bb[i] = 0\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i] + bb[i + 1]\n        else:\n            flag = 0\n            break\n    if flag == 0:\n        ans.append(-1)\n    if flag == 1:\n        aa[n - 1] = aa[n - 1] + bb[n - 1] + bb[n - 2]\n        if aa[n - 1] == maximum:\n            ans.append(maximum)\n        else:\n            ans.append(-1)\n    aa = []\n    bb = []\n    flag = 1\n    for i in range(n):\n        c = b[i]\n        d = a[i]\n        bb.append(c)\n        aa.append(d)\n    maximum = aa[0] + bb[0] + bb[1]\n    aa[0] = bb[0] + aa[0] + bb[1]\n    bb[0] = 0\n    bb[1] = 0\n    for i in range(1, n - 1):\n        aa[i] = aa[i] + bb[i - 1]\n        if aa[i] == maximum:\n            continue\n        if aa[i] > maximum:\n            flag = 0\n            break\n        if aa[i] + bb[i] == maximum:\n            aa[i] = aa[i] + bb[i]\n            bb[i] = 0\n        elif aa[i] + bb[i + 1] == maximum:\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i + 1]\n        elif aa[i] + bb[i] + bb[i + 1] == maximum:\n            bb[i] = 0\n            bb[i + 1] = 0\n            aa[i] = aa[i] + bb[i] + bb[i + 1]\n        else:\n            flag = 0\n            break\n    if flag == 0:\n        ans.append(-1)\n    if flag == 1:\n        aa[n - 1] = aa[n - 1] + bb[n - 1] + bb[n - 2]\n        if aa[n - 1] == maximum:\n            ans.append(maximum)\n        else:\n            ans.append(-1)\n    print(max(ans))", "T = int(input())\nout = [0] * T\nfor t in range(T):\n    N = int(input())\n    B = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    K = (sum(A) + sum(B)) / N\n    if not K.is_integer():\n        out[t] = -1\n        continue\n    C = []\n    for i in range(N):\n        C.append(K - A[i])\n    usage = [False] * N\n    if C[0] == 0:\n        filler = 1\n    elif B[0] == C[0]:\n        usage[0] = True\n    elif B[1] == C[0]:\n        usage[1] = True\n    elif B[0] + B[1] == C[0]:\n        usage[0] = True\n        usage[1] = True\n    else:\n        out[t] = -1\n        continue\n    C[0] = 0\n    for i in range(1, N - 1):\n        if usage[i - 1] == False:\n            C[i] = C[i] - B[i - 1]\n            usage[i - 1] = True\n        if C[i] < 0:\n            out[t] = -1\n            break\n        elif C[i] == 0:\n            continue\n        elif usage[i] == False and B[i] == C[i]:\n            C[i] = 0\n            usage[i] = True\n        elif usage[i + 1] == False and B[i + 1] == C[i]:\n            C[i] = 0\n            usage[i + 1] = True\n        elif not usage[i] and (not usage[i + 1]) and (B[i] + B[i + 1] == C[i]):\n            C[i] = 0\n            usage[i] = True\n            usage[i + 1] = True\n        else:\n            out[t] = -1\n            break\n    if out[t] != -1:\n        if usage[N - 2] == False:\n            C[N - 1] = C[N - 1] - B[N - 2]\n        if usage[N - 1] == False:\n            C[N - 1] = C[N - 1] - B[N - 1]\n        if C[N - 1] == 0:\n            out[t] = K\nfor u in out:\n    print(int(u))", "for t in range(int(input())):\n    N = int(input())\n    B = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    if N == 1:\n        print(B[0] + A[0])\n        continue\n    elif N == 2:\n        ans = -1\n        if B[0] + B[1] + A[1] == A[0]:\n            ans = max(ans, A[0])\n        if B[0] + B[1] + A[0] == A[1]:\n            ans = max(ans, A[1])\n        if B[0] + A[0] == A[1] + B[1]:\n            ans = max(ans, A[0] + B[0])\n        if B[0] + A[1] == A[0] + B[1]:\n            ans = max(ans, A[1] + B[0])\n        print(ans)\n        continue\n    l = set()\n    ld = {A[0]: (), A[0] + B[0]: (0,), A[0] + B[1]: (1,), A[0] + B[0] + B[1]: (0, 1)}\n    r = set()\n    rd = {A[-1]: (), A[-1] + B[-1]: (N - 1,), A[-1] + B[-2]: (N - 2,), A[-1] + B[-1] + B[-2]: (N - 1, N - 2)}\n    l.add(A[0])\n    l.add(A[0] + B[0])\n    l.add(A[0] + B[1])\n    l.add(A[0] + B[0] + B[1])\n    r.add(A[-1])\n    r.add(A[-1] + B[-1])\n    r.add(A[-1] + B[-2])\n    r.add(A[-1] + B[-1] + B[-2])\n    inter = sorted(list(l & r))\n    inter.reverse()\n    if not inter:\n        print(-1)\n        continue\n    outer = False\n    for i in inter:\n        bflag = [True for _ in range(N)]\n        for j in ld[i]:\n            bflag[j] = False\n        for j in rd[i]:\n            bflag[j] = False\n        f = False\n        res = True\n        for j in range(1, N - 1):\n            if A[j] == i:\n                f = True\n            elif j - 1 >= 0 and bflag[j - 1] and (B[j - 1] + A[j] == i):\n                f = True\n                bflag[j - 1] = False\n            elif j - 1 >= 0 and bflag[j - 1] and bflag[j] and (B[j - 1] + B[j] + A[j] == i):\n                f = True\n                bflag[j - 1] = False\n                bflag[j] = False\n            elif j - 1 >= 0 and j + 1 < N and bflag[j - 1] and bflag[j + 1] and (B[j - 1] + B[j + 1] + A[j] == i):\n                f = True\n                bflag[j - 1] = False\n                bflag[j + 1] = False\n            elif j - 1 >= 0 and j + 1 < N and bflag[j - 1] and bflag[j] and bflag[j + 1] and (B[j - 1] + B[j] + B[j + 1] + A[j] == i):\n                f = True\n                bflag[j - 1] = False\n                bflag[j] = False\n                bflag[j + 1] = False\n            elif bflag[j] and B[j] + A[j] == i:\n                f = True\n                bflag[j] = False\n            elif j + 1 < N and bflag[j + 1] and (B[j + 1] + A[j] == i):\n                f = True\n                bflag[j + 1] = False\n            elif j + 1 < N and bflag[j + 1] and bflag[j] and (B[j + 1] + B[j] + A[j] == i):\n                f = True\n                bflag[j] = False\n                bflag[j + 1] = False\n            if not f:\n                res = False\n                break\n            f = False\n        if res:\n            c = 0\n            for x in bflag:\n                if not x:\n                    c += 1\n                if c == len(bflag):\n                    print(i)\n                    outer = True\n                    break\n    if not outer:\n        print(-1)", "import sys\nf = sys.stdin\n\ndef getInts(f):\n    return list(map(int, f.readline().split()))\n\ndef solve(a, b):\n    n = len(a)\n    total = sum(a) + sum(b)\n    if total % n != 0:\n        return -1\n    a0 = total // n\n    for i in range(n):\n        if a[i] + b[i] == a0:\n            continue\n        if i == n - 1:\n            return -1\n        if a[i] > a0:\n            return -1\n        if a[i] == a0:\n            a[i + 1] += b[i]\n            continue\n        elif a[i] + b[i + 1] == a0:\n            b[i + 1] = 0\n            a[i + 1] += b[i]\n            continue\n        elif a[i] + b[i] + b[i + 1] == a0:\n            b[i + 1] = 0\n        else:\n            return -1\n    return a0\nt = int(f.readline())\nfor i in range(t):\n    f.readline()\n    b = getInts(f)\n    a = getInts(f)\n    print(solve(a, b))", "def ans(a, b, k):\n    i = 0\n    j = 0\n    f = 1\n    while i < len(a) - 1:\n        if i == j:\n            if a[i] == k:\n                i += 1\n                a[i] += b[j]\n                j += 1\n            elif a[i] + b[j] == k:\n                i += 1\n                j += 1\n            elif a[i] + b[j + 1] == k:\n                i += 1\n                a[i] += b[j]\n                j += 2\n            elif a[i] + b[i] + b[i + 1] == k:\n                i += 1\n                j += 2\n            else:\n                print(-1)\n                f = 0\n                i = 10 ** 9\n        elif a[i] == k:\n            i += 1\n        elif a[i] + b[j] == k:\n            i += 1\n            j += 1\n        else:\n            print(-1)\n            i = len(a)\n            f = 0\n    if f == 1:\n        if sum(a[i:]) + sum(b[j:]) == k:\n            print(k)\n        else:\n            print(-1)\nt = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    k = sum(a) + sum(b)\n    if k % n == 0:\n        k = k // n\n        if max(a) <= k and max(b) < k:\n            ans(a, b, k)\n        else:\n            print(-1)\n    else:\n        print(-1)", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    B = list(map(int, sys.stdin.readline().split(' ')))\n    A = list(map(int, sys.stdin.readline().split(' ')))\n    C = []\n    Sum = 0\n    for j in range(N):\n        Sum += A[j] + B[j]\n        C.append(0)\n    Average = 0\n    Average += int(Sum / N)\n    for j in range(N):\n        win = True\n        if A[j] == Average:\n            continue\n        elif j - 1 >= 0 and A[j] + B[j - 1] == Average and (C[j - 1] == 0):\n            A[j] += B[j - 1]\n            C[j - 1] = 1\n        elif j - 1 >= 0 and A[j] + B[j - 1] + B[j] == Average and (C[j - 1] == 0) and (C[j] == 0):\n            A[j] += B[j - 1] + B[j]\n            C[j - 1] = 1\n            C[j] = 1\n        elif j - 1 >= 0 and j + 1 < N and (A[j] + B[j - 1] + B[j + 1] == Average) and (C[j - 1] == 0) and (C[j + 1] == 0):\n            A[j] += B[j - 1] + B[j + 1]\n            C[j - 1] = 1\n            C[j + 1] = 1\n        elif j - 1 >= 0 and j + 1 < N and (A[j] + B[j - 1] + B[j] + B[j + 1] == Average) and (C[j - 1] == 0) and (C[j] == 0) and (C[j + 1] == 0):\n            A[j] += B[j - 1] + B[j] + B[j + 1]\n            C[j - 1] = 1\n            C[j] = 1\n            C[j + 1] = 1\n        elif A[j] + B[j] == Average and C[j] == 0:\n            A[j] += B[j]\n            C[j] = 1\n        elif j + 1 < N and A[j] + B[j + 1] == Average and (C[j + 1] == 0):\n            A[j] += B[j + 1]\n            C[j + 1] = 1\n        elif j + 1 < N and A[j] + B[j] + B[j + 1] == Average and (C[j] == 0) and (C[j + 1] == 0):\n            A[j] += B[j] + B[j + 1]\n            C[j] = 1\n            C[j + 1] = 1\n        if A[j] != Average:\n            print(-1)\n            win = False\n            break\n    if win:\n        print(Average)", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    B = list(map(int, sys.stdin.readline().split(' ')))\n    A = list(map(int, sys.stdin.readline().split(' ')))\n    C = []\n    Sum = 0\n    for j in range(N):\n        Sum += A[j] + B[j]\n        C.append([B[j], 0])\n    Average = 0\n    Average += int(Sum / N)\n    for j in range(N):\n        win = True\n        if A[j] == Average:\n            continue\n        elif j - 1 >= 0 and A[j] + C[j - 1][0] == Average and (C[j - 1][1] == 0):\n            A[j] += C[j - 1][0]\n            C[j - 1][1] = 1\n        elif j - 1 >= 0 and A[j] + C[j - 1][0] + C[j][0] == Average and (C[j - 1][1] == 0) and (C[j][1] == 0):\n            A[j] += C[j - 1][0] + C[j][0]\n            C[j - 1][1] = 1\n            C[j][1] = 1\n        elif j - 1 >= 0 and j + 1 < N and (A[j] + C[j - 1][0] + C[j + 1][0] == Average) and (C[j - 1][1] == 0) and (C[j + 1][1] == 0):\n            A[j] += C[j - 1][0] + C[j + 1][0]\n            C[j - 1][1] = 1\n            C[j + 1][1] = 1\n        elif j - 1 >= 0 and j + 1 < N and (A[j] + C[j - 1][0] + C[j][0] + C[j + 1][0] == Average) and (C[j - 1][1] == 0) and (C[j][1] == 0) and (C[j + 1][1] == 0):\n            A[j] += C[j - 1][0] + C[j][0] + C[j + 1][0]\n            C[j - 1][1] = 1\n            C[j][1] = 1\n            C[j + 1][1] = 1\n        elif A[j] + C[j][0] == Average and C[j][1] == 0:\n            A[j] += C[j][0]\n            C[j][1] = 1\n        elif j + 1 < N and A[j] + C[j + 1][0] == Average and (C[j + 1][1] == 0):\n            A[j] += C[j + 1][0]\n            C[j + 1][1] = 1\n        elif j + 1 < N and A[j] + C[j][0] + C[j + 1][0] == Average and (C[j][1] == 0) and (C[j + 1][1] == 0):\n            A[j] += C[j][0] + C[j + 1][0]\n            C[j][1] = 1\n            C[j + 1][1] = 1\n        if A[j] != Average:\n            print(-1)\n            win = False\n            break\n    if win:\n        print(Average)", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    B = list(map(int, sys.stdin.readline().split(' ')))\n    A = list(map(int, sys.stdin.readline().split(' ')))\n    C = []\n    Sum = 0\n    for j in range(N):\n        Sum += A[j] + B[j]\n        C.append([B[j], 0])\n    Average = 0\n    Average += int(Sum / N)\n    for j in range(N):\n        win = True\n        if A[j] == Average:\n            continue\n        elif j - 1 >= 0 and A[j] + C[j - 1][0] == Average and (C[j - 1][1] == 0):\n            A[j] += C[j - 1][0]\n            C[j - 1][1] = 1\n        elif j - 1 >= 0 and A[j] + C[j - 1][0] + C[j][0] == Average and (C[j - 1][1] == 0) and (C[j][1] == 0):\n            A[j] += C[j - 1][0] + C[j][0]\n            C[j - 1][1] = 1\n            C[j][1] = 1\n        elif j - 1 >= 0 and j + 1 < N and (A[j] + C[j - 1][0] + C[j + 1][0] == Average) and (C[j - 1][1] == 0) and (C[j + 1][1] == 0):\n            A[j] += C[j - 1][0] + C[j + 1][0]\n            C[j - 1][1] = 1\n            C[j + 1][1] = 1\n        elif j - 1 >= 0 and j + 1 < N and (A[j] + C[j - 1][0] + C[j][0] + C[j + 1][0] == Average) and (C[j - 1][1] == 0) and (C[j][1] == 0) and (C[j + 1][1] == 0):\n            A[j] += C[j - 1][0] + C[j][0] + C[j + 1][0]\n            C[j - 1][1] = 1\n            C[j][1] = 1\n            C[j + 1][1] = 1\n        elif A[j] + C[j][0] == Average and C[j][1] == 0:\n            A[j] += C[j][0]\n            C[j][1] = 1\n        elif j + 1 < N and A[j] + C[j + 1][0] == Average and (C[j + 1][1] == 0):\n            A[j] += C[j + 1][0]\n            C[j + 1][1] = 1\n        elif j + 1 < N and A[j] + C[j][0] + C[j + 1][0] == Average and (C[j][1] == 0) and (C[j + 1][1] == 0):\n            A[j] += C[j][0] + C[j + 1][0]\n            C[j][1] = 1\n            C[j + 1][1] = 1\n    for element in C:\n        if element[1] == 0:\n            win = False\n    if win:\n        print(Average)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    a = [i for i in c]\n    b = [i for i in d]\n    visited = [0] * n\n    lst = []\n    tar = a[0]\n    f = 1\n    for i in range(1, n):\n        temp = 0\n        if not visited[i - 1]:\n            a[i] += b[i - 1]\n            visited[i - 1] = 1\n        if a[i] == tar:\n            temp = 1\n        if not visited[i] and a[i] + b[i] == tar:\n            temp = 1\n            a[i] += b[i]\n            visited[i] = 1\n        try:\n            if not visited[i + 1] and a[i] + b[i + 1] == tar:\n                temp = 1\n                a[i] += b[i + 1]\n                visited[i + 1] = 1\n        except:\n            pass\n        try:\n            if not visited[i + 1] and (not visited[i]) and (a[i] + b[i] + b[i + 1] == tar):\n                a[i] += b[i] + b[i + 1]\n                visited[i] = 1\n                visited[i + 1] = 1\n                temp = 1\n        except:\n            pass\n        if not temp:\n            f = 0\n            break\n    for i in visited:\n        if not i:\n            f = 0\n    if f:\n        lst += [tar]\n    a = [i for i in c]\n    b = [i for i in d]\n    visited = [0] * n\n    tar = a[0] + b[0]\n    visited[0] = 1\n    f = 1\n    for i in range(1, n):\n        temp = 0\n        if not visited[i - 1]:\n            a[i] += b[i - 1]\n            visited[i - 1] = 1\n        if a[i] == tar:\n            temp = 1\n        if not visited[i] and a[i] + b[i] == tar:\n            temp = 1\n            a[i] += b[i]\n            visited[i] = 1\n        try:\n            if not visited[i + 1] and a[i] + b[i + 1] == tar:\n                temp = 1\n                a[i] += b[i + 1]\n                visited[i + 1] = 1\n        except:\n            pass\n        try:\n            if not visited[i + 1] and (not visited[i]) and (a[i] + b[i] + b[i + 1] == tar):\n                a[i] += b[i] + b[i + 1]\n                visited[i] = 1\n                visited[i + 1] = 1\n                temp = 1\n        except:\n            pass\n        if not temp:\n            f = 0\n            break\n    for i in visited:\n        if not i:\n            f = 0\n    if f:\n        lst += [tar]\n    if n > 1:\n        a = [i for i in c]\n        b = [i for i in d]\n        visited = [0] * n\n        tar = a[0] + b[0] + b[1]\n        visited[0] = 1\n        visited[1] = 1\n        f = 1\n        for i in range(1, n):\n            temp = 0\n            if not visited[i - 1]:\n                a[i] += b[i - 1]\n                visited[i - 1] = 1\n            if a[i] == tar:\n                temp = 1\n            if not visited[i] and a[i] + b[i] == tar:\n                temp = 1\n                a[i] += b[i]\n                visited[i] = 1\n            try:\n                if not visited[i + 1] and a[i] + b[i + 1] == tar:\n                    temp = 1\n                    a[i] += b[i + 1]\n                    visited[i + 1] = 1\n            except:\n                pass\n            try:\n                if not visited[i + 1] and (not visited[i]) and (a[i] + b[i] + b[i + 1] == tar):\n                    a[i] += b[i] + b[i + 1]\n                    visited[i] = 1\n                    visited[i + 1] = 1\n                    temp = 1\n            except:\n                pass\n            if not temp:\n                f = 0\n                break\n        for i in visited:\n            if not i:\n                f = 0\n        if f:\n            lst += [tar]\n        a = [i for i in c]\n        b = [i for i in d]\n        visited = [0] * n\n        tar = a[0] + b[1]\n        visited[1] = 1\n        f = 1\n        for i in range(1, n):\n            temp = 0\n            if not visited[i - 1]:\n                a[i] += b[i - 1]\n                visited[i - 1] = 1\n            if a[i] == tar:\n                temp = 1\n            if not visited[i] and a[i] + b[i] == tar:\n                temp = 1\n                a[i] += b[i]\n                visited[i] = 1\n            try:\n                if not visited[i + 1] and a[i] + b[i + 1] == tar:\n                    temp = 1\n                    a[i] += b[i + 1]\n                    visited[i + 1] = 1\n            except:\n                pass\n            try:\n                if not visited[i + 1] and (not visited[i]) and (a[i] + b[i] + b[i + 1] == tar):\n                    a[i] += b[i] + b[i + 1]\n                    visited[i] = 1\n                    visited[i + 1] = 1\n                    temp = 1\n            except:\n                pass\n            if not temp:\n                f = 0\n                break\n        for i in visited:\n            if not i:\n                f = 0\n        if f:\n            lst += [tar]\n    if len(lst) == 0:\n        print(-1)\n    else:\n        print(max(lst))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    flag = 0\n    if n == 1:\n        print(a[0] + b[0])\n        continue\n    s = sum(a) + sum(b)\n    if s % n != 0:\n        print('-1')\n        continue\n    s = int(s / n)\n    if a[0] != s:\n        r = s - a[0]\n        if r == b[0]:\n            a[0] += b[0]\n            b[0] = 0\n        elif r == b[1]:\n            a[0] += b[1]\n            b[1] = 0\n        elif r == b[0] + b[1]:\n            a[0] += b[0] + b[1]\n            b[0] = 0\n            b[1] = 0\n        else:\n            print('-1')\n            continue\n    for j in range(1, n):\n        while a[j] != s:\n            if b[j - 1] != 0:\n                a[j] += b[j - 1]\n                b[j - 1] = 0\n            else:\n                r = s - a[j]\n                if r == b[j]:\n                    a[j] += b[j]\n                    b[j] = 0\n                elif j + 1 < n and r == b[j + 1]:\n                    a[j] += b[j + 1]\n                    b[j + 1] = 0\n                elif j + 1 < n and r == b[j] + b[j + 1]:\n                    a[j] += b[j] + b[j + 1]\n                    b[j] = 0\n                    b[j + 1] = 0\n                else:\n                    flag = -1\n                    break\n        if flag == -1:\n            flag = 0\n            break\n        if j == n - 1:\n            flag = 1\n    if flag:\n        print(s)\n    else:\n        print('-1')", "T = int(input())\nwhile T > 0:\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    s = (sum(a) + sum(b)) / n\n    s = int(s)\n    for i in range(n):\n        if i > 0 and i < n - 1:\n            if a[i] + b[i] == s or a[i] + b[i - 1] == s or a[i] + b[i + 1] == s or (a[i] + b[i] + b[i - 1] + b[i + 1] == s) or (a[i] == s) or (a[i] + b[i] + b[i + 1] == s) or (a[i] + b[i] + b[i - 1] == s) or (a[i] + b[i - 1] + b[i + 1] == s):\n                f = 1\n            else:\n                f = 0\n                break\n        elif i == 0 and i + 1 < n - 1:\n            if a[i] + b[i] == s or a[i] + b[i + 1] == s or a[i] + b[i] + b[i + 1] == s or (a[i] == s):\n                f = 1\n            else:\n                f = 0\n                break\n        elif i == 0 and i + 1 > n - 1:\n            if a[i] + b[i] == s or a[i] == s:\n                f = 1\n            else:\n                f = 0\n                break\n        elif i == n - 1:\n            if a[i] + b[i] == s or a[i] + b[i - 1] == s or a[i] + b[i - 1] + b[i] == s or (a[i] == s):\n                f = 1\n            else:\n                f = 0\n                break\n    if f == 1:\n        print(s)\n    else:\n        print('-1')\n    T = T - 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if n == 1:\n        print(a[0] + b[0])\n        continue\n    if (sum(a) + sum(b)) % n:\n        print(-1)\n    else:\n        flag = 1\n        m = (sum(a) + sum(b)) // n\n        hash = [1] * n\n        if b[0] + a[0] == m and hash[0]:\n            hash[0] = 0\n        elif b[0] + a[1] == m and hash[1]:\n            hash[1] = 0\n        elif b[0] + a[0] + a[1] == m and hash[1] and hash[0]:\n            (hash[0], hash[1]) = (0, 0)\n        elif b[0] != m:\n            print(-1)\n            continue\n        for i in range(1, n - 1):\n            if b[i] == m:\n                continue\n            if b[i] + a[i - 1] == m and hash[i - 1]:\n                hash[i - 1] = 0\n                continue\n            if b[i] + a[i - 1] + a[i] == m and hash[i - 1] and hash[i]:\n                (hash[i - 1], hash[i]) = (0, 0)\n                continue\n            if b[i] + a[i - 1] + a[i] + a[i + 1] == m and hash[i] and hash[i - 1] and hash[i + 1]:\n                (hash[i - 1], hash[i], hash[i + 1]) = (0, 0, 0)\n                continue\n            if b[i] + a[i - 1] + a[i + 1] == m and hash[i - 1] and hash[i + 1]:\n                (hash[i - 1], hash[i + 1]) = (0, 0)\n                continue\n            if b[i] + a[i] == m and hash[i]:\n                hash[i] = 0\n                continue\n            if b[i] + a[i] + a[i + 1] == m and hash[i] and hash[i + 1]:\n                (hash[i], hash[i + 1]) = (0, 0)\n                continue\n            if b[i] + a[i + 1] == m and hash[i + 1]:\n                hash[i + 1] = 0\n                continue\n            flag = 0\n            print(-1)\n            break\n        if flag:\n            if b[n - 1] + a[n - 1] == m and hash[n - 1]:\n                print(m)\n            elif b[n - 1] + a[n - 2] == m and hash[n - 2]:\n                print(m)\n            elif b[n - 1] + a[n - 2] + a[n - 1] == m and hash[n - 2] and hash[n - 1]:\n                print(m)\n            elif b[n - 1] == m:\n                print(m)\n            else:\n                print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    B = [int(i) for i in input().split()]\n    A = [int(i) for i in input().split()]\n    sumi = sum(A) + sum(B)\n    if n == 1:\n        print(sumi)\n        continue\n    if sumi % n != 0:\n        print(-1)\n        continue\n    else:\n        sim = sumi // n\n    i = 0\n    while i < n:\n        curr = A[i]\n        if curr == sim:\n            i += 1\n            continue\n        chk = 0\n        if i != 0 and i != n - 1:\n            if B[i - 1] + curr == sim:\n                B[i - 1] = 0\n                i += 1\n                chk = 1\n            elif B[i - 1] + B[i] + curr == sim:\n                B[i - 1] = 0\n                B[i] = 0\n                i += 1\n                chk = 1\n            elif B[i - 1] + B[i + 1] + curr == sim:\n                B[i - 1] = 0\n                B[i + 1] = 0\n                i += 1\n                chk = 1\n            elif B[i - 1] + B[i + 1] + B[i] + curr == sim:\n                B[i - 1] = 0\n                B[i] = 0\n                B[i + 1] = 0\n                i += 1\n                chk = 1\n        elif i == 0:\n            if B[i] + curr == sim:\n                B[i] = 0\n                i += 1\n                chk = 1\n            elif B[i] + B[i + 1] + curr == sim:\n                B[i] = 0\n                B[i + 1] = 0\n                i += 1\n                chk = 1\n            elif B[i + 1] + curr == sim:\n                B[i + 1] = 0\n                i += 1\n                chk = 1\n        elif i == n - 1:\n            if B[i - 1] + curr == sim:\n                B[i - 1] = 0\n                i += 1\n                chk = 1\n            elif B[i - 1] + B[i] + curr == sim:\n                B[i - 1] = 0\n                B[i] = 0\n                i += 1\n                chk = 1\n        if chk == 0:\n            break\n    if chk == 0:\n        print(-1)\n        continue\n    else:\n        print(sim)", "def tetris():\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    allsum = sum(a) + sum(b)\n    number = allsum / n\n    if allsum % n != 0:\n        return -1\n    for i in range(n):\n        if i > 0:\n            a[i] += b[i - 1]\n            b[i - 1] = 0\n        if i == n - 1:\n            a[i] += b[i]\n            b[i] = 0\n            if a[i] != number:\n                return -1\n            return number\n        if a[i] > number:\n            return -1\n        if a[i] == number:\n            continue\n        if number - a[i] < b[i]:\n            if number - a[i] != b[i + 1]:\n                return -1\n            a[i] += b[i + 1]\n            b[i + 1] = 0\n            continue\n        if number - a[i] == b[i]:\n            a[i] += b[i]\n            b[i] = 0\n            continue\n        if number - a[i] > b[i]:\n            if a[i] + b[i + 1] == number:\n                a[i] += b[i + 1]\n                b[i + 1] = 0\n                continue\n            a[i] += b[i]\n            b[i] = 0\n            if a[i] + b[i + 1] != number:\n                return -1\n            a[i] += b[i + 1]\n            b[i + 1] = 0\nt = int(input())\nfor cases in range(t):\n    print(int(tetris()))", "for t in range(int(input())):\n    n = int(input())\n    b = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    s = sum(a) + sum(b)\n    if not s % n == 0:\n        print(-1)\n        continue\n    x = s // n\n    for i in range(n):\n        if a[i] < x:\n            if i > 0 and b[i - 1]:\n                a[i] += b[i - 1]\n                b[i - 1] = 0\n        if a[i] < x:\n            if a[i] + b[i] == x:\n                a[i] = x\n                b[i] = 0\n            elif i < n - 1 and a[i] + b[i + 1] == x:\n                a[i] = x\n                b[i + 1] = 0\n            elif i < n - 1 and a[i] + b[i] + b[i + 1] == x:\n                a[i] = x\n                b[i] = 0\n                b[i + 1] = 0\n        if not a[i] == x or (i > 0 and b[i - 1]):\n            print(-1)\n            break\n    else:\n        print(x)", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    B = [int(v) for v in input().split()]\n    A = [int(v) for v in input().split()]\n    s = sum(A) + sum(B)\n    if s % N:\n        print(-1)\n        continue\n    t = s // N\n    flag = 0\n    for i in range(N):\n        v = t - A[i]\n        if i > 0:\n            v = v - B[i - 1]\n        if v == 0:\n            pass\n        elif B[i] == v:\n            B[i] = 0\n        elif i < N - 1 and B[i + 1] == v:\n            B[i + 1] = 0\n        elif i < N - 1 and B[i] + B[i + 1] == v:\n            B[i] = B[i + 1] = 0\n        else:\n            flag = 1\n            break\n    if flag:\n        print(-1)\n    else:\n        print(t)", "def get_options(i, n):\n    if n == 1:\n        return [[i]]\n    if n == 2:\n        return [[0], [1], [0, 1]]\n    if n >= 3:\n        if i == 0:\n            return [[i], [i, i + 1], [i + 1]]\n        elif i == n - 1:\n            return [[i - 1], [i - 1, i], [i]]\n        else:\n            return [[i - 1], [i - 1, i], [i - 1, i + 1], [i - 1, i, i + 1], [i], [i, i + 1], [i + 1]]\n\ndef are_unused(indices, used):\n    for each_val in indices:\n        if used[each_val]:\n            return False\n    return True\n\ndef are_summable(indices, req, b):\n    sum = 0\n    for each_val in indices:\n        sum += b[each_val]\n    if sum == req:\n        return True\n    return False\nt = int(input())\nwhile t:\n    n = int(input())\n    b = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    total = sum(a) + sum(b)\n    if total % n == 0:\n        sahi = True\n        each_val = int(total / n)\n        used = [False] * n\n        for i in range(n):\n            req = each_val - a[i]\n            if req > 0:\n                options = get_options(i, n)\n                for each_option in options:\n                    if are_unused(each_option, used) and are_summable(each_option, each_val - a[i], b):\n                        for each_index in each_option:\n                            used[each_index] = True\n                        break\n        if False in used:\n            sahi = False\n        if not sahi:\n            print(-1)\n        else:\n            print(int(each_val))\n    else:\n        print(-1)\n    t -= 1", "def maxequal(candidate, not_fall_on, cur_pos):\n    print(cur_pos)\n    if cur_pos >= N:\n        if True in not_fall_on:\n            return -1\n        else:\n            return candidate\n    if candidate == A[cur_pos]:\n        return maxequal(candidate, not_fall_on, cur_pos + 1)\n    fall_on = [x for x in [cur_pos - 1, cur_pos, cur_pos + 1] if x >= 0 and x < N and not_fall_on[x]]\n    tmp = -1\n    if cur_pos == 0:\n        tmp = max(tmp, maxequal(A[0], not_fall_on, cur_pos + 1))\n    if len(fall_on) > 0:\n        for i in fall_on:\n            val = A[cur_pos] + B[i]\n            if candidate == 0 or val == candidate:\n                not_fall_on[i] = False\n                tmp = max(tmp, maxequal(val, not_fall_on, cur_pos + 1))\n                not_fall_on[i] = True\n    if len(fall_on) > 1:\n        for i in range(len(fall_on) - 1):\n            for j in range(i + 1, len(fall_on)):\n                val = A[cur_pos] + B[fall_on[i]] + B[fall_on[j]]\n                if candidate == 0 or val == candidate:\n                    not_fall_on[fall_on[i]] = not_fall_on[fall_on[j]] = False\n                    tmp = max(tmp, maxequal(val, not_fall_on, cur_pos + 1))\n                    not_fall_on[fall_on[i]] = not_fall_on[fall_on[j]] = True\n    if len(fall_on) > 2:\n        val = A[cur_pos] + B[fall_on[0]] + B[fall_on[1]] + B[fall_on[2]]\n        if candidate == 0 or val == candidate:\n            not_fall_on[fall_on[0]] = not_fall_on[fall_on[1]] = not_fall_on[fall_on[2]] = False\n            tmp = max(tmp, maxequal(val, not_fall_on, cur_pos + 1))\n            not_fall_on[fall_on[0]] = not_fall_on[fall_on[1]] = not_fall_on[fall_on[2]] = True\n    return tmp\nT = int(input())\nwhile T > 0:\n    T -= 1\n    N = int(input())\n    B = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    avg = (sum(A) + sum(B)) / N\n    if avg % 1 != 0:\n        print(-1)\n    else:\n        avg = int(avg)\n        not_fall_on = [True for x in range(N)]\n        Flag = True\n        for i in range(N):\n            if Flag:\n                yetnotfound = True\n                if A[i] != avg:\n                    fall_on = [x for x in [i - 1, i, i + 1] if x >= 0 and x < N and not_fall_on[x]]\n                    L = len(fall_on)\n                    if L > 0 and yetnotfound:\n                        for j in range(L):\n                            if B[fall_on[j]] + A[i] == avg:\n                                yetnotfound = False\n                                not_fall_on[fall_on[j]] = False\n                                break\n                    if L > 1 and yetnotfound:\n                        for j in range(L - 1):\n                            for k in range(j + 1, L):\n                                if B[fall_on[j]] + B[fall_on[k]] + A[i] == avg:\n                                    yetnotfound = False\n                                    not_fall_on[fall_on[j]] = not_fall_on[fall_on[k]] = False\n                                    break\n                    if L > 2 and yetnotfound:\n                        if B[fall_on[0]] + B[fall_on[1]] + B[fall_on[2]] + A[i] == avg:\n                            yetnotfound = False\n                            not_fall_on[fall_on[0]] = not_fall_on[fall_on[1]] = not_fall_on[fall_on[2]] = False\n                            break\n                    if yetnotfound:\n                        Flag = False\n        if Flag:\n            print(avg)\n        else:\n            print(-1)", "def test(n, a, b):\n    s = sum(a) + sum(b)\n    if s % n > 0:\n        return -1\n    v = s // n\n    for i in range(n - 1):\n        if a[i] == v:\n            a[i + 1] += b[i]\n        elif a[i] + b[i] == v:\n            pass\n        elif a[i] + b[i + 1] == v:\n            a[i + 1] += b[i]\n            b[i + 1] = 0\n        elif a[i] + b[i] + b[i + 1] == v:\n            b[i + 1] = 0\n        else:\n            return -1\n    return v\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(test(n, a, b))"]