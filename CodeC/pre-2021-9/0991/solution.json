["t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = [0] * n\n    for j in range(n):\n        r[j] = a[j]\n    for k in range(n - 2, -1, -1):\n        r[k] = min(r[k], r[k + 1] + 1)\n    l = [0] * n\n    for j in range(n):\n        l[j] = a[j]\n    for k in range(1, n):\n        l[k] = min(l[k], l[k - 1] + 1)\n    ans = []\n    for x in range(n):\n        ans.append(min(l[x], r[x]))\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = [0] * n\n    for j in range(n):\n        r[j] = a[j]\n    for k in range(n - 2, -1, -1):\n        r[k] = min(r[k], r[k + 1] + 1)\n    l = [0] * n\n    for j in range(n):\n        l[j] = a[j]\n    for k in range(1, n):\n        l[k] = min(l[k], l[k - 1] + 1)\n    ans = []\n    for x in range(n):\n        ans.append(min(l[x], r[x]))\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = [0] * n\n    for j in range(n):\n        r[j] = a[j]\n    for k in range(n - 2, -1, -1):\n        r[k] = min(r[k], r[k + 1] + 1)\n    l = [0] * n\n    for j in range(n):\n        l[j] = a[j]\n    for k in range(1, n):\n        l[k] = min(l[k], l[k - 1] + 1)\n    ans = []\n    for x in range(n):\n        ans.append(min(l[x], r[x]))\n    print(*ans)", "def answer():\n    r = [0] * n\n    for i in range(n):\n        r[i] = a[i]\n    for i in range(n - 2, -1, -1):\n        r[i] = min(r[i], r[i + 1] + 1)\n    l = [0] * n\n    for i in range(n):\n        l[i] = a[i]\n    for i in range(1, n):\n        l[i] = min(l[i], l[i - 1] + 1)\n    ans = []\n    for i in range(n):\n        ans.append(min(l[i], r[i]))\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*answer())", "T = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    A = [int(i) for i in input().split()]\n    prefix = [0 for i in range(N)]\n    prefix[N - 1] = A[N - 1]\n    for i in range(N - 2, -1, -1):\n        prefix[i] = min(prefix[i + 1] + 1, A[i])\n    suffix = [0 for i in range(N)]\n    suffix[0] = A[0]\n    for i in range(1, N):\n        suffix[i] = min(suffix[i - 1] + 1, A[i])\n    s = ''\n    for i in range(N):\n        s += str(min(prefix[i], suffix[i])) + ' '\n    ans.append(s)\nfor i in ans:\n    print(i)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    left = [-1 for i in range(n)]\n    right = [-1 for i in range(n)]\n    min1 = float('inf')\n    for i in range(n):\n        min1 = min(arr[i], min1 + 1)\n        left[i] = min1\n    min1 = float('inf')\n    for i in range(n - 1, -1, -1):\n        min1 = min(arr[i], min1 + 1)\n        right[i] = min1\n    for i in range(n):\n        print(min(left[i], right[i]), end=' ')\n    print('', end='\\n')", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    fg = list(map(int, input().split()))\n    for i in range(1, n):\n        fg[i] = min(fg[i - 1] + 1, fg[i])\n    for j in range(n - 2, -1, -1):\n        fg[j] = min(fg[j + 1] + 1, fg[j])\n    print(*fg)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    for i in range(1, n):\n        l[i] = min(l[i - 1] + 1, l[i])\n    for j in range(n - 2, -1, -1):\n        l[j] = min(l[j + 1] + 1, l[j])\n    print(*l)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    Llist = [A[0]]\n    Rlist = [A[N - 1]]\n    for i in range(1, N):\n        Llist.append(min(Llist[-1] + 1, A[i]))\n        Rlist.append(min(Rlist[-1] + 1, A[N - 1 - i]))\n    print(*[min(Llist[i], Rlist[N - 1 - i]) for i in range(N)])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    left = []\n    mini = float('inf')\n    for i in range(n):\n        c = min(mini + 1, l[i])\n        left.append(c)\n        mini = c\n    mini = float('inf')\n    for i in range(n - 1, -1, -1):\n        left[i] = min(mini + 1, left[i])\n        mini = min(mini + 1, l[i])\n    print(*left)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    for i in range(1, n):\n        A[i] = min(A[i], A[i - 1] + 1)\n    for i in range(n - 2, -1, -1):\n        A[i] = min(A[i], A[i + 1] + 1)\n    print(*A)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr_modified = [-1 for _ in range(n)]\n    for i in range(n):\n        arr_modified[i] = arr[i] + i\n    minRights = [arr_modified[-1] for _ in range(n)]\n    for i in range(n - 2, -1, -1):\n        minRights[i] = min(arr_modified[i], minRights[i + 1])\n    minLeft = float('inf')\n    soldValues = [-1 for _ in range(n)]\n    for i in range(n):\n        soldValues[i] = min(minLeft, minRights[i] - i)\n        minLeft = min(minLeft + 1, arr[i] + 1)\n    print(' '.join((str(x) for x in soldValues)))", "for _ in range(int(input())):\n    n = int(input())\n    (*arr,) = map(int, input().split())\n    ans = [int(1000000000.0) + 1] * n\n    ans[0] = arr[0]\n    for i in range(1, n):\n        ans[i] = min(arr[i], ans[i], ans[i - 1] + 1)\n    for i in range(n - 1)[::-1]:\n        ans[i] = min(arr[i], ans[i], ans[i + 1] + 1)\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    s = []\n    p = []\n    p.append(a[0])\n    for i in range(1, n):\n        p.append(min(p[i - 1] + 1, a[i]))\n    s.append(a[n - 1])\n    j = n - 2\n    l = 0\n    while j >= 0:\n        s.append(min(s[l] + 1, a[j]))\n        j = j - 1\n        l = l + 1\n    t = s[::-1]\n    for k in range(n):\n        print(min(t[k], p[k]), end=' ')\n    print('')", "for _ in range(int(input())):\n    n = int(input())\n    (*arr,) = map(int, input().split())\n    ans = [int(1000000000.0) + 1] * n\n    ans[0] = arr[0]\n    for i in range(1, n):\n        ans[i] = min(arr[i], ans[i], ans[i - 1] + 1)\n    for i in range(n - 2, -1, -1):\n        ans[i] = min(arr[i], ans[i], ans[i + 1] + 1)\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    for i in range(1, n):\n        arr[i] = min(arr[i], arr[i - 1] + 1)\n    for j in range(n - 2, -1, -1):\n        arr[j] = min(arr[j], arr[j + 1] + 1)\n    print(*arr)", "from itertools import accumulate, count\nfrom operator import add, sub\nf = lambda x: accumulate(map(sub, x, count()), min)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    b = f(a)\n    c = reversed([*f(reversed(a))])\n    print(*map(min, map(add, b, count()), map(sub, c, count(1 - n))))", "from itertools import accumulate, count as c\nfrom operator import add, sub\nf = lambda x: accumulate(map(sub, x, c()), min)\nr = reversed\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(*map(min, map(add, f(a), c()), map(sub, r([*f(r(a))]), c(1 - len(a)))))", "from itertools import accumulate, count\nfrom operator import add, sub\nf = lambda x: accumulate(map(sub, x, count()), min)\nr = reversed\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(*map(min, map(add, f(a), count()), map(sub, r([*f(r(a))]), count(1 - len(a)))))", "from itertools import accumulate, count\nfrom operator import add, sub\nf = lambda x: accumulate(map(sub, x, count()), min)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    b = f(a)\n    c = reversed([*f(reversed(a))])\n    print(*map(min, map(add, b, count()), map(sub, c, count(1 - n))))", "from itertools import accumulate, count\nfrom operator import sub\nf = lambda x: accumulate(map(sub, x, count()), min)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    b = f(a)\n    c = reversed([*f(reversed(a))])\n    print(*(min(x + i, y + n + ~i) for (i, x, y) in zip(count(), b, c)))", "from itertools import accumulate, count\nfrom operator import sub\nf = lambda x: accumulate(map(sub, x, count()), min)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    b = f(a)\n    c = reversed([*f(reversed(a))])\n    print(*(min(x + i, y + n + ~i) for (i, x, y) in zip(count(), b, c)))", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    for i in range(1, n):\n        A[i] = min(A[i], A[i - 1] + 1)\n    for i in range(n - 2, -1, -1):\n        A[i] = min(A[i], A[i + 1] + 1)\n    print(*A)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    ldp = ls.copy()\n    counter = -1\n    for i in ldp:\n        counter += 1\n        if counter == 0:\n            continue\n        ldp[counter] = min(ldp[counter], ldp[counter - 1] + 1)\n    rdp = ldp.copy()\n    for j in range(1, n):\n        rdp[n - j - 1] = min(rdp[n - j - 1], rdp[n - j] + 1)\n    print(*rdp)", "t = int(input())\nfor t1 in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left = []\n    right = []\n    for i in range(0, n):\n        if i == 0:\n            left.append((a[i], i))\n        elif a[i] < left[-1][0] + left[-1][1] + 1:\n            left.append((a[i], 0))\n        else:\n            left.append((left[-1][0], left[-1][1] + 1))\n    right = []\n    for i in range(n - 1, -1, -1):\n        if i == n - 1:\n            right.append((a[i], 0))\n        elif a[i] < right[-1][0] + right[-1][1] + 1:\n            right.append((a[i], 0))\n        else:\n            right.append((right[-1][0], right[-1][1] + 1))\n    ans = []\n    right = right[::-1]\n    for i in range(0, n):\n        ans.append(min(left[i][0] + left[i][1], right[i][0] + right[i][1]))\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    right = l\n    lmin = l[0]\n    left = l\n    rmin = l[n - 1]\n    for i in range(0, n):\n        left[i] = min(lmin, l[i])\n        lmin = left[i] + 1\n    i = n - 1\n    while i >= 0:\n        right[i] = min(rmin, l[i])\n        rmin = right[i] + 1\n        i -= 1\n    s = ''\n    for i in range(n):\n        s += str(min(left[i], right[i])) + ' '\n    print(s.strip())", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    for i in range(1, n):\n        A[i] = min(A[i], A[i - 1] + 1)\n    for i in range(n - 2, -1, -1):\n        A[i] = min(A[i], A[i + 1] + 1)\n    print(*A)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(1, n):\n        arr[i] = min(arr[i], arr[i - 1] + 1)\n    for i in range(n - 2, -1, -1):\n        arr[i] = min(arr[i], arr[i + 1] + 1)\n    print(*arr)", "t = int(input())\nfor t1 in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left = []\n    right = []\n    for i in range(0, n):\n        if i == 0:\n            left.append((a[i], i))\n        elif a[i] < left[-1][0] + left[-1][1] + 1:\n            left.append((a[i], 0))\n        else:\n            left.append((left[-1][0], left[-1][1] + 1))\n    right = []\n    for i in range(n - 1, -1, -1):\n        if i == n - 1:\n            right.append((a[i], 0))\n        elif a[i] < right[-1][0] + right[-1][1] + 1:\n            right.append((a[i], 0))\n        else:\n            right.append((right[-1][0], right[-1][1] + 1))\n    right = right[::-1]\n    final1 = []\n    for i in range(0, n):\n        final1.append(min(left[i][0] + left[i][1], a[i]))\n    final2 = []\n    for i in range(0, n):\n        final2.append(min(right[i][0] + right[i][1], a[i]))\n    ans = []\n    for i in range(0, n):\n        ans.append(min(final1[i], final2[i]))\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    curr = 0\n    arr1 = [arr[0]]\n    for i in range(1, n):\n        if arr1[curr] + i - curr < arr[i]:\n            arr1.append(arr1[curr] + i - curr)\n        else:\n            arr1.append(arr[i])\n            curr = i\n    arr.reverse()\n    curr = 0\n    arr2 = [arr[0]]\n    for i in range(1, n):\n        if arr2[curr] + i - curr < arr[i]:\n            arr2.append(arr2[curr] + i - curr)\n        else:\n            arr2.append(arr[i])\n            curr = i\n    arr2.reverse()\n    print(*[min(arr1[i], arr2[i]) for i in range(n)])", "import sys\nmod = 10 ** 9 + 7\nmd = 998244353\ninput = lambda : sys.stdin.readline().strip()\ninp = lambda : list(map(int, sys.stdin.readline().strip().split()))\nfor _ in range(int(input())):\n    (n,) = inp()\n    a = inp()\n    for i in range(1, n):\n        a[i] = min(a[i], a[i - 1] + 1)\n    for i in reversed(range(0, n - 1)):\n        a[i] = min(a[i], a[i + 1] + 1)\n    print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    st = [(a[-1] + n - 1, n - 1)]\n    mini = 10 ** 20\n    for i in range(n - 2, -1, -1):\n        if i + a[i] <= st[-1][0]:\n            st.append((i + a[i], i))\n        else:\n            st.append(st[-1])\n    st.reverse()\n    ans = []\n    for i in range(n):\n        ans.append(min(st[i][0] - i, mini + i))\n        mini = min(mini, a[i] - i)\n    for i in ans:\n        print(i, end=' ')\n    print('')", "from itertools import accumulate, count\nfrom operator import add\nf = lambda x: accumulate(map(add, x, count(0, -1)), min)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    b = f(a)\n    c = reversed([*f(reversed(a))])\n    print(*(min(x + i, y + n + ~i) for (i, x, y) in zip(count(), b, c)))", "from itertools import accumulate, count\nfrom operator import add\nf = lambda x: accumulate(map(add, x, count(0, -1)), min)\nI = input\nt = int(I())\nfor _ in range(t):\n    n = int(I())\n    a = (*map(int, I().split()),)\n    b = f(a)\n    c = reversed([*f(reversed(a))])\n    print(*(min(x + i, y + n + ~i) for (i, x, y) in zip(count(), b, c)))", "from itertools import accumulate, count\nfrom operator import add\nf = lambda x: accumulate(map(add, x, count(0, -1)), min)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    b = f(a)\n    c = reversed([*f(reversed(a))])\n    print(*(min(x + i, y + n + ~i) for (i, x, y) in zip(count(), b, c)))", "from itertools import accumulate, count\nfrom operator import add\nf = lambda x: accumulate(map(add, x, count(0, -1)), min)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    b = f(a)\n    c = reversed([*f(reversed(a))])\n    print(*(min(x + i, y + len(a) + ~i) for (i, x, y) in zip(count(), b, c)))", "from itertools import accumulate, count\nfrom operator import add\nf = lambda x: accumulate(map(add, x, count(0, -1)), min)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    b = f(a)\n    c = reversed([*f(reversed(a))])\n    print(*(min(x + i, y + n + ~i) for (i, x, y) in zip(count(), b, c)))", "from itertools import accumulate, count\nf = lambda x: accumulate(map(sum, zip(count(0, -1), x)), min)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    b = f(a)\n    c = (*f(reversed(a)),)\n    print(*(min(x + i, c[n + ~i] + n + ~i) for (i, x) in enumerate(b)))", "from itertools import accumulate, count\nf = lambda x: [*accumulate(map(sum, zip(count(0, -1), x)), min)]\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    b = f(a)\n    c = f(reversed(a))\n    print(*(min(b[i] + i, c[n + ~i] + n + ~i) for i in range(n)))", "from itertools import accumulate, count\nf = lambda x: accumulate(map(sum, zip(count(0, -1), x)), min)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    b = f(a)\n    c = f(reversed(a))\n    print(*(min(x + i, y + n + ~i) for (i, x, y) in zip(count(), b, reversed([*c]))))", "from itertools import accumulate, count\nf = lambda x: [*accumulate(map(sum, zip(count(0, -1), x)), min)]\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    b = f(a)\n    c = f(reversed(a))\n    print(*(min(b[i] + i, c[n + ~i] + n + ~i) for i in range(n)))", "from itertools import accumulate, count\nf = lambda x: [*accumulate(map(sum, zip(count(0, -1), x)), min)]\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    b = f(a)\n    c = f(reversed(a))\n    print(*(min(b[i] + i, c[n - i - 1] + n - i - 1) for i in range(n)))", "import sys\nfor t in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    mn = sys.maxsize\n    left = []\n    right = []\n    for i in range(n):\n        mn = min(mn, lis[i])\n        left.append(mn)\n        mn += 1\n    mn = sys.maxsize\n    for i in range(n):\n        mn = min(mn, lis[n - 1 - i])\n        right.append(mn)\n        mn += 1\n    ans = []\n    right = right[::-1]\n    for i in range(n):\n        ans.append(min(left[i], right[i]))\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(1, n):\n        if a[i - 1] + 1 < a[i]:\n            a[i] = a[i - 1] + 1\n    for i in range(n - 2, -1, -1):\n        if a[i + 1] + 1 < a[i]:\n            a[i] = a[i + 1] + 1\n    for x in a:\n        print(x, end=' ')\n    print()", "import math\nimport sys\nfrom collections import defaultdict as df\n\ndef ini():\n    return int(sys.stdin.readline())\n\ndef inp():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef li():\n    return list(map(int, sys.stdin.readline().strip().split()))\nfor i in range(ini()):\n    n = ini()\n    l = li()\n    for i in range(1, n):\n        l[i] = min(l[i], l[i - 1] + 1)\n    for i in range(n - 2, -1, -1):\n        l[i] = min(l[i], l[i + 1] + 1)\n    print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = l[0]\n    mi = l[n - 1]\n    for i in range(n):\n        m = min(m, l[i] + i)\n        mi = min(mi, l[n - i - 1] + (n - 1) - (n - 1 - i))\n    d = {}\n    d[0] = m\n    d[n - 1] = mi\n    for i in range(1, n - 1):\n        d[i] = l[i]\n    for i in range(1, n - 1):\n        d[i] = min(l[i], d[i - 1] + 1, d[i + 1] + 1)\n    for i in range(n - 2, 0, -1):\n        d[i] = min(l[i], d[i - 1] + 1, d[i + 1] + 1)\n    for i in range(n):\n        print(d[i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dp = []\n    for i in l:\n        dp.append(i)\n    for i in range(1, n):\n        dp[i] = min(dp[i], dp[i - 1] + 1)\n    for i in range(n - 2, -1, -1):\n        dp[i] = min(dp[i], dp[i + 1] + 1)\n    print(*dp)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dp = []\n    for i in l:\n        dp.append(i)\n    for i in range(1, n):\n        dp[i] = min(dp[i], dp[i - 1] + 1)\n    for i in range(n - 2, -1, -1):\n        dp[i] = min(dp[i], dp[i + 1] + 1)\n    print(*dp)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dp = []\n    for i in l:\n        dp.append(i)\n    for i in range(1, n):\n        dp[i] = min(dp[i], dp[i - 1] + 1)\n    for i in range(n - 2, -1, -1):\n        dp[i] = min(dp[i], dp[i + 1] + 1)\n    print(*dp)", "from sys import stdin, stdout, maxsize\ntup = lambda : map(int, stdin.readline().split())\nI = lambda : int(stdin.readline())\nlint = lambda : [int(x) for x in stdin.readline().split()]\nstpr = lambda x: stdout.write(f'{x}' + '\\n')\nstar = lambda x: print(' '.join(map(str, x)))\nfor _ in range(I()):\n    n = I()\n    ls = lint()\n    m = min(ls)\n    idx = ls.index(m)\n    for i in range(1, n):\n        ls[i] = min(ls[i], ls[i - 1] + 1, ls[idx] + abs(i - idx))\n    for i in range(n - 2, -1, -1):\n        ls[i] = min(ls[i], ls[i + 1] + 1, ls[idx] + abs(i - idx))\n    star(ls)", "from sys import stdin, stdout, maxsize\ntup = lambda : map(int, stdin.readline().split())\nI = lambda : int(stdin.readline())\nlint = lambda : [int(x) for x in stdin.readline().split()]\nstpr = lambda x: stdout.write(f'{x}' + '\\n')\nstar = lambda x: print(' '.join(map(str, x)))\nfor _ in range(I()):\n    n = I()\n    ls = lint()\n    for i in range(1, n):\n        ls[i] = min(ls[i], ls[i - 1] + 1)\n    for i in range(n - 2, -1, -1):\n        ls[i] = min(ls[i], ls[i + 1] + 1)\n    star(ls)", "from sys import stdin, stdout\nfrom collections import *\nfrom math import ceil, floor, log, gcd\nst = lambda : list(stdin.readline().strip())\nli = lambda : list(map(int, stdin.readline().split()))\nmp = lambda : map(int, stdin.readline().split())\ninp = lambda : int(stdin.readline())\npr = lambda n: stdout.write(str(n) + '\\n')\nmod = 1000000007\nINF = float('inf')\n\ndef solve():\n    n = inp()\n    l = li()\n    pre = [l[0]]\n    suff = [l[-1]]\n    for i in range(1, n):\n        pre.append(min(l[i], pre[-1] + 1))\n    for i in range(n - 2, -1, -1):\n        suff.append(min(l[i], suff[-1] + 1))\n    suff = suff[::-1]\n    for i in range(n):\n        print(min(suff[i], pre[i]), end=' ')\n    print()\nfor _ in range(inp()):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp2 = [0] * (n + 1)\n    dp[n - 1] = n - 1\n    for i in range(n - 2, -1, -1):\n        if l[i] + i < l[dp[i + 1]] + dp[i + 1]:\n            dp[i] = i\n        else:\n            dp[i] = dp[i + 1]\n    dp2[0] = 0\n    for i in range(1, n):\n        if l[i] + n - 1 - i < l[dp2[i - 1]] + n - 1 - dp2[i - 1]:\n            dp2[i] = i\n        else:\n            dp2[i] = dp2[i - 1]\n    for i in range(n):\n        print(min(l[dp[i]] + abs(i - dp[i]), l[dp2[i]] + abs(dp2[i] - i)), end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    st = [(a[-1] + n - 1, n - 1)]\n    mini = 10 ** 20\n    for i in range(n - 2, -1, -1):\n        if i + a[i] <= st[-1][0]:\n            st.append((i + a[i], i))\n        else:\n            st.append(st[-1])\n    st.reverse()\n    ans = []\n    for i in range(n):\n        ans.append(min(st[i][0] - i, mini + i))\n        mini = min(mini, a[i] - i)\n    for i in ans:\n        print(i, end=' ')\n    print('')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = l[0]\n    mi = l[n - 1]\n    for i in range(n):\n        m = min(m, l[i] + i)\n        mi = min(mi, l[n - i - 1] + (n - 1) - (n - 1 - i))\n    d = {}\n    d[0] = m\n    d[n - 1] = mi\n    for i in range(1, n - 1):\n        d[i] = l[i]\n    for i in range(1, n - 1):\n        d[i] = min(l[i], d[i - 1] + 1, d[i + 1] + 1)\n    for i in range(n - 2, 0, -1):\n        d[i] = min(l[i], d[i - 1] + 1, d[i + 1] + 1)\n    for i in range(n):\n        print(d[i], end=' ')\n    print()", "from math import inf\nfor _ in range(int(input())):\n    n = int(input())\n    m = inf\n    j = 0\n    a = list(map(int, input().split()))\n    (b, c) = ([], [])\n    c.append(a[len(a) - 1])\n    b.append(a[0])\n    for i in range(1, len(a)):\n        mini = min(b[i - 1] + 1, a[i])\n        mini = min(mini, a[i - 1] + 1)\n        b.append(mini)\n    m = inf\n    for i in range(len(a) - 2, -1, -1):\n        mini = min(c[j] + 1, a[i + 1] + 1)\n        mini = min(mini, a[i])\n        c.append(mini)\n        j += 1\n    c.reverse()\n    ans = []\n    for i in range(len(a)):\n        mini = min(a[i], c[i])\n        mini = min(mini, b[i])\n        ans.append(mini)\n    print(*ans)", "from math import inf\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    c = []\n    mini = inf\n    b.append(a[0])\n    for i in range(1, len(a)):\n        mini = min(b[i - 1] + 1, a[i - 1] + 1)\n        mini = min(mini, a[i])\n        b.append(mini)\n    mini = inf\n    j = 0\n    c.append(a[len(a) - 1])\n    for i in range(len(a) - 2, -1, -1):\n        mini = min(c[j] + 1, a[i + 1] + 1)\n        mini = min(mini, a[i])\n        c.append(mini)\n        j += 1\n    c.reverse()\n    ans = []\n    for i in range(len(a)):\n        mini = min(a[i], b[i])\n        mini = min(mini, c[i])\n        ans.append(mini)\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = [0] * n\n    l[-1] = a[-1]\n    mi = a[-1]\n    for i in range(n - 2, -1, -1):\n        l[i] = min(a[i], mi + 1)\n        mi = l[i]\n    mi = l[0]\n    for i in range(1, n):\n        l[i] = min(l[i], mi + 1)\n        mi = l[i]\n    for i in l:\n        print(i, end=' ')\n    print()", "import sys\ninput = sys.stdin.readline\n(inp, ip) = (lambda : int(input()), lambda : [int(w) for w in input().split()])\nfor _ in range(inp()):\n    n = inp()\n    x = ip()\n    y = [float('inf')] * n\n    y[0] = x[0]\n    for i in range(1, n):\n        y[i] = min(x[i], y[i], y[i - 1] + 1)\n    for i in range(n - 2, -1, -1):\n        y[i] = min(x[i], y[i], y[i + 1] + 1)\n    print(*y)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(1, n):\n        arr[i] = min(arr[i], arr[i - 1] + 1)\n    for i in range(n - 2, -1, -1):\n        arr[i] = min(arr[i], arr[i + 1] + 1)\n    print(*arr)", "for y in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    minn = lst[0]\n    ans = [0] * n\n    ans[0] = lst[0]\n    for i in range(1, n):\n        ans[i] = min(lst[i], ans[i - 1] + 1)\n    minn = lst[n - 1]\n    lst[n - 1] = ans[n - 1]\n    for i in range(n - 2, -1, -1):\n        lst[i] = min(ans[i], lst[i + 1] + 1)\n    print(*lst)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    dp2 = [0] * (n + 1)\n    dp[n - 1] = n - 1\n    for i in range(n - 2, -1, -1):\n        if l[i] + i < l[dp[i + 1]] + dp[i + 1]:\n            dp[i] = i\n        else:\n            dp[i] = dp[i + 1]\n    dp2[0] = 0\n    for i in range(1, n):\n        if l[i] + n - 1 - i < l[dp2[i - 1]] + n - 1 - dp2[i - 1]:\n            dp2[i] = i\n        else:\n            dp2[i] = dp2[i - 1]\n    for i in range(n):\n        print(min(l[dp[i]] + abs(i - dp[i]), l[dp2[i]] + abs(dp2[i] - i)), end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    ans = list(map(int, input().split()))\n    pq = [[ans[i], i] for i in range(len(ans))]\n    visited = [False] * n\n    for i in range(len(ans)):\n        (val, ind) = (ans[i], i)\n        if visited[ind] == False:\n            i = ind + 1\n            while i < len(ans):\n                if val + i - ind < ans[i]:\n                    ans[i] = val + i - ind\n                    visited[i] = True\n                else:\n                    break\n                i += 1\n            i = ind - 1\n            while i > -1:\n                if val + ind - i < ans[i]:\n                    ans[i] = val + ind - i\n                    visited[i] = True\n                else:\n                    break\n                i -= 1\n            visited[ind] = True\n    print(*ans)", "input = __import__('sys').stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left = []\n    right = []\n    for i in range(n):\n        left.append(a[i] - i)\n        right.append(a[i] + i)\n    for i in range(1, n):\n        left[i] = min(left[i], left[i - 1])\n    for i in range(n - 2, -1, -1):\n        right[i] = min(right[i], right[i + 1])\n    result = []\n    for i in range(n):\n        result.append(min(a[i], left[i] + i, right[i] - i))\n    print(*result)", "for _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    res_fwd = res_bwd = res = A\n    current_min = 1000000000\n    for i in range(N):\n        res_fwd[i] = min(A[i], current_min)\n        current_min = min(current_min, res_fwd[i])\n        current_min += 1\n    current_min = 1000000000\n    for i in range(N - 1, -1, -1):\n        res_bwd[i] = min(A[i], current_min)\n        current_min = min(current_min, res_bwd[i])\n        current_min += 1\n        res[i] = min(res_fwd[i], res_bwd[i])\n    print(*res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    pre = [0] * n\n    pre[n - 1] = n - 1\n    suf = [0] * n\n    suf[0] = 0\n    ans1 = [0] * n\n    ans2 = [0] * n\n    ans1[n - 1] = l[n - 1]\n    ans2[0] = l[0]\n    for i in range(n - 2, -1, -1):\n        if l[i] < l[pre[i + 1]] + abs(i - pre[i + 1]):\n            pre[i] = i\n            ans1[i] = l[i]\n        else:\n            ans1[i] = l[pre[i + 1]] + abs(i - pre[i + 1])\n            pre[i] = pre[i + 1]\n    suff = pre[:]\n    pre = [0] * n\n    pre[0] = 0\n    for i in range(1, n):\n        if l[i] <= l[pre[i - 1]] + abs(i - pre[i - 1]):\n            pre[i] = i\n            ans2[i] = l[i]\n        else:\n            ans2[i] = l[pre[i - 1]] + abs(i - pre[i - 1])\n            pre[i] = pre[i - 1]\n    for i in range(n):\n        if ans1[i] <= ans2[i]:\n            print(ans1[i], end=' ')\n        else:\n            print(ans2[i], end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    left = [array[0]]\n    right = [array[-1]]\n    for i in range(1, n):\n        left.append(min(left[-1] + 1, array[i]))\n        right.append(min(right[-1] + 1, array[n - 1 - i]))\n    right = right[::-1]\n    sol = [str(min(i, j)) for (i, j) in zip(left, right)]\n    print(' '.join(sol))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    b[n - 1] = a[n - 1] + n - 1\n    for i in range(n - 2, -1, -1):\n        b[i] = min(b[i + 1], a[i] + i)\n    c = [0] * n\n    c[0] = a[0] + n - 1\n    for i in range(1, n):\n        c[i] = min(c[i - 1], a[i] + n - i - 1)\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = min(c[i] - (n - i - 1), b[i] - i)\n    print(' '.join(map(str, ans)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = []\n    m = float('inf')\n    mi = -1\n    for i in range(n):\n        if m > a[i]:\n            m = a[i]\n        p.append(m)\n        m += 1\n    s = []\n    m = float('inf')\n    mi = -1\n    for i in range(n - 1, -1, -1):\n        if m > a[i]:\n            m = a[i]\n        s.append(m)\n        m += 1\n    s.reverse()\n    print(*(min(p[i], s[i]) for i in range(n)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0 for x in range(n)]\n    c = [0 for x in range(n)]\n    mins = a[0] + n - 1\n    for i in range(n):\n        mins = min(mins, a[i] + n - i - 1)\n        b[i] = mins\n    mins = a[-1] + n - 1\n    for i in range(n - 1, -1, -1):\n        mins = min(mins, a[i] + i)\n        c[i] = mins\n    for i in range(n):\n        k = min(b[i] - n + i + 1, c[i] - i)\n        print(min(k, a[i]), end=' ')\n    print('')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = []\n    c = a[0]\n    for j in range(n):\n        if c <= a[j]:\n            g.append(c)\n        else:\n            g.append(a[j])\n            c = a[j]\n        c = c + 1\n    h = []\n    c = a[n - 1]\n    for j in range(n - 1, -1, -1):\n        if c <= a[j]:\n            h.append(c)\n        else:\n            h.append(a[j])\n            c = a[j]\n        c = c + 1\n    b = []\n    for j in range(n):\n        b.append(min(g[j], h[n - 1 - j]))\n    print(' '.join(map(str, b)))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    r = [l[0]]\n    m = l[0]\n    for i in l[1:]:\n        m = min(m + 1, i)\n        r.append(m)\n    r2 = [l[-1]]\n    m = l[-1]\n    for i in range(n - 2, -1, -1):\n        m = min(m + 1, l[i])\n        r2.append(m)\n    r2.reverse()\n    x = []\n    for i in range(n):\n        x.append(min(r[i], r2[i]))\n    print(*x)", "import sys\nimport math\nfrom collections import defaultdict, Counter\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l1 = [0] * n\n    l2 = [0] * n\n    ind = n - 1\n    for j in range(n - 1, -1, -1):\n        l1[j] = ind - j + a[ind]\n        if a[j] < l1[j]:\n            l1[j] = a[j]\n            ind = j\n    ind = 0\n    for j in range(n):\n        l2[j] = j - ind + a[ind]\n        if a[j] < l2[j]:\n            l2[j] = a[j]\n            ind = j\n    for j in range(n):\n        print(min(l1[j], l2[j]), end=' ')\n    print()"]