["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 4:\n        (a, b, c, d) = arr[:4]\n        (d1, d2, d3) = (b - a, c - b, d - c)\n        if d1 == d2:\n            d = d1\n            strt = a\n        elif d2 == d3:\n            d = d2\n            strt = c - 2 * d\n        else:\n            d = (d - a) // 3\n            strt = a\n        for i in range(n):\n            print(strt, end=' ')\n            strt += d\n        print()\n    else:\n        (a, b, c, dd, e) = arr[:5]\n        (d1, d2, d3, d4) = (b - a, c - b, dd - c, e - dd)\n        if d1 == d2:\n            d = d1\n            strt = arr[0]\n        elif d3 == d4:\n            d = d3\n            strt = dd - d * 3\n        elif d2 == d3:\n            d = d2\n            strt = c - d * 2\n        else:\n            d = d1\n            strt = a\n        for i in range(n):\n            print(strt, end=' ')\n            strt += d\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 4:\n        (a, b, c, d) = arr[:4]\n        (d1, d2, d3) = (b - a, c - b, d - c)\n        if d1 == d2:\n            d = d1\n            strt = a\n        elif d2 == d3:\n            d = d2\n            strt = c - 2 * d\n        else:\n            d = (d - a) // 3\n            strt = a\n        for i in range(n):\n            print(strt, end=' ')\n            strt += d\n        print()\n    else:\n        (a, b, c, dd, e) = arr[:5]\n        (d1, d2, d3, d4) = (b - a, c - b, dd - c, e - dd)\n        if d1 == d2:\n            d = d1\n            strt = arr[0]\n        elif d3 == d4:\n            d = d3\n            strt = dd - d * 3\n        elif d2 == d3:\n            d = d2\n            strt = c - d * 2\n        else:\n            d = d1\n            strt = a\n        for i in range(n):\n            print(strt, end=' ')\n            strt += d\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = l[1] - l[0]\n    last = l[-1] - l[-2]\n    ll = l[:]\n    count1 = 0\n    for i in range(n - 1):\n        if l[i + 1] - l[i] != f:\n            count1 += 1\n            l[i + 1] = l[i] + f\n    count2 = 0\n    for i in range(n - 1, 0, -1):\n        if ll[i] - ll[i - 1] != last:\n            ll[i - 1] = ll[i] - last\n            count2 += 1\n    if count2 < count1:\n        print(*ll)\n    else:\n        print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    dl = []\n    l = list(map(int, input().split()))\n    for i in range(3):\n        d = l[i + 1] - l[i]\n        if d in dl:\n            break\n        else:\n            dl.append(d)\n    else:\n        D = sorted(dl)\n        d = D[1]\n    if dl[0] == d:\n        f = l[0]\n        for i in range(n):\n            print(f, end=' ')\n            f += d\n    elif dl[1] == d:\n        print(l[1] - d, end=' ')\n        for i in range(1, n):\n            print(l[i], end=' ')\n    else:\n        print(l[0], l[0] + d, sep=' ', end=' ')\n        for i in range(2, n):\n            print(l[i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    dl = []\n    l = list(map(int, input().split()))\n    for i in range(3):\n        d = l[i + 1] - l[i]\n        if d in dl:\n            break\n        else:\n            dl.append(d)\n    else:\n        D = sorted(dl)\n        d = D[1]\n    if dl[0] == d:\n        f = l[0]\n        for i in range(n):\n            print(f, end=' ')\n            f += d\n    elif dl[1] == d:\n        print(l[1] - d, end=' ')\n        for i in range(1, n):\n            print(l[i], end=' ')\n    else:\n        print(l[0], l[0] + d, sep=' ', end=' ')\n        for i in range(2, n):\n            print(l[i], end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input().split(' ')\n    a = [int(i) for i in s]\n    d = {}\n    if n > 4:\n        for i in range(1, n):\n            if a[i] - a[i - 1] in d:\n                common_diff = a[i] - a[i - 1]\n                break\n            else:\n                d[a[i] - a[i - 1]] = True\n        point = -1\n        flag = 0\n        for i in range(1, n - 1):\n            if a[i] - a[i - 1] != common_diff and a[i + 1] - a[i] != common_diff:\n                point = i\n                flag = 1\n                break\n        if flag == 1:\n            a[point] = a[point + 1] - common_diff\n        elif a[1] - a[0] != common_diff:\n            point = 0\n            a[point] = a[1] - common_diff\n        elif a[-1] - a[-2] != common_diff:\n            point = n - 1\n            a[point] = a[-2] + common_diff\n        else:\n            point = -1\n        print(*a)\n    else:\n        flag = 0\n        for i in range(1, n):\n            if a[i] - a[i - 1] in d:\n                common_diff = a[i] - a[i - 1]\n                flag = 1\n                break\n            else:\n                d[a[i] - a[i - 1]] = True\n        if flag == 1:\n            if a[1] - a[0] != common_diff:\n                point = 0\n                a[point] = a[1] - common_diff\n            elif a[-1] - a[-2] != common_diff:\n                point = n - 1\n                a[point] = a[point - 1] + common_diff\n            else:\n                point = -1\n        else:\n            common_diff = int((a[-1] - a[0]) / 3)\n            a[1] = a[0] + common_diff\n            a[2] = a[-1] - common_diff\n        print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input().split(' ')\n    a = [int(i) for i in s]\n    d = {}\n    if n > 4:\n        for i in range(1, n):\n            if a[i] - a[i - 1] in d:\n                common_diff = a[i] - a[i - 1]\n                break\n            else:\n                d[a[i] - a[i - 1]] = True\n        point = -1\n        flag = 0\n        for i in range(1, n - 1):\n            if a[i] - a[i - 1] != common_diff and a[i + 1] - a[i] != common_diff:\n                point = i\n                flag = 1\n                break\n        if flag == 1:\n            a[point] = a[point + 1] - common_diff\n        elif a[1] - a[0] != common_diff:\n            point = 0\n            a[point] = a[1] - common_diff\n        elif a[-1] - a[-2] != common_diff:\n            point = n - 1\n            a[point] = a[-2] + common_diff\n        else:\n            point = -1\n        print(*a)\n    else:\n        flag = 0\n        for i in range(1, n):\n            if a[i] - a[i - 1] in d:\n                common_diff = a[i] - a[i - 1]\n                flag = 1\n                break\n            else:\n                d[a[i] - a[i - 1]] = True\n        if flag == 1:\n            if a[1] - a[0] != common_diff:\n                point = 0\n                a[point] = a[1] - common_diff\n            elif a[-1] - a[-2] != common_diff:\n                point = n - 1\n                a[point] = a[point - 1] + common_diff\n            else:\n                point = -1\n        else:\n            common_diff = int((a[-1] - a[0]) / 3)\n            a[1] = a[0] + common_diff\n            a[2] = a[-1] - common_diff\n        print(*a)", "def answer():\n    d = a[1] - a[0]\n    (count, ind) = (0, -1)\n    for i in range(n):\n        if a[0] + i * d != a[i]:\n            count += 1\n            ind = i\n    if count == 1 and ind != -1:\n        a[ind] = a[0] + ind * d\n    elif count:\n        d = a[-1] - a[-2]\n        if a[2] - a[1] == d:\n            a[0] = a[1] - d\n        else:\n            a[1] = a[0] + d\n    return a\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*answer())", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    diff = [nums[1] - nums[0], nums[3] - nums[2]]\n    pause = False\n    for d in diff:\n        out = [nums[0]]\n        for i in range(n - 1):\n            out += [out[i] + d]\n        check = [nums_i - out_i for (nums_i, out_i) in zip(nums, out)]\n        if check.count(0) >= n - 1:\n            print(*out)\n            pause = True\n            break\n    if not pause:\n        for d in diff:\n            out = [nums[1] - d]\n            for i in range(n - 1):\n                out += [out[i] + d]\n            check = [nums_i - out_i for (nums_i, out_i) in zip(nums, out)]\n            if check.count(0) >= n - 1:\n                print(*out)\n                break", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    diff = [nums[1] - nums[0], nums[3] - nums[2]]\n    pause = False\n    for d in diff:\n        out = [nums[0]]\n        for i in range(n - 1):\n            out += [out[i] + d]\n        check = [nums_i - out_i for (nums_i, out_i) in zip(nums, out)]\n        if check.count(0) >= n - 1:\n            print(*out)\n            pause = True\n            break\n    if not pause:\n        for d in diff:\n            out = [nums[1] - d]\n            for i in range(n - 1):\n                out += [out[i] + d]\n            check = [nums_i - out_i for (nums_i, out_i) in zip(nums, out)]\n            if check.count(0) >= n - 1:\n                print(*out)\n                break", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = list(map(int, input().split()))\n    M = []\n    d = L[1] - L[0]\n    for i in range(2, n):\n        if L[i] - L[i - 1] == d:\n            pass\n        else:\n            M.append(i)\n    if n > 4:\n        if len(M) == 2:\n            L[M[0]] = 2 * L[M[0] - 1] - L[M[0] - 2]\n            print(*L)\n        elif len(M) == 1:\n            L[M[0]] = 2 * L[M[0] - 1] - L[M[0] - 2]\n            print(*L)\n        else:\n            d = L[3] - L[2]\n            if L[1] == L[2] - d:\n                L[0] = L[1] - d\n                print(*L)\n            else:\n                L[1] = L[2] - d\n                print(*L)\n    else:\n        if L[3] - L[2] == L[2] - L[1]:\n            L[0] = 2 * L[1] - L[2]\n        elif 2 * (L[3] - L[2]) == L[2] - L[0]:\n            L[1] = 2 * L[2] - L[3]\n        elif L[3] - L[1] == 2 * d:\n            L[2] = L[1] + d\n        else:\n            L[3] = L[2] + d\n        print(*L)", "import re\n\ndef seq(arr, n):\n    d = arr[1] - arr[0]\n    l = []\n    for i in range(n):\n        l.append(arr[0] + d * i)\n    return l\n\ndef seq1(arr, n):\n    d = arr[-1] - arr[-2]\n    l = []\n    f = 0\n    for i in range(n):\n        l.append(arr[-1] - d * f)\n        f += 1\n    return l[::-1]\n\ndef crct(arr, l):\n    z = 0\n    c = 0\n    for i in arr:\n        if l[z] == i:\n            c += 1\n        z += 1\n    return c\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = seq(l, n)\n    l2 = seq1(l, n)\n    if n - crct(l, l1) <= 1:\n        print(*l1)\n    else:\n        print(*l2)", "def getArithematicSequence(A, D, N):\n    seq = []\n    for i in range(N):\n        seq.append(A + i * D)\n    return seq\n\ndef check(A, B, N):\n    cnt = 0\n    for i in range(N):\n        if A[i] != B[i]:\n            cnt += 1\n    return cnt\n\ndef solve(A, N):\n    diff = A[1] - A[0]\n    seq1 = getArithematicSequence(A[0], diff, N)\n    if check(seq1, A, N) <= 1:\n        for i in seq1:\n            print(i, end=' ')\n        print('\\n')\n        return\n    diff = A[-1] - A[-2]\n    seq2 = getArithematicSequence(A[-1], -diff, N)\n    seq2.reverse()\n    for i in seq2:\n        print(i, end=' ')\n    print('\\n')\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    solve(A, N)", "def getArithematicSequence(A, D, N):\n    seq = []\n    for i in range(N):\n        seq.append(A + i * D)\n    return seq\n\ndef check(A, B, N):\n    cnt = 0\n    for i in range(N):\n        if A[i] != B[i]:\n            cnt += 1\n    return cnt\n\ndef solve(A, N):\n    diff = A[1] - A[0]\n    seq1 = getArithematicSequence(A[0], diff, N)\n    if check(seq1, A, N) <= 1:\n        for i in seq1:\n            print(i, end=' ')\n        print('\\n')\n        return\n    diff = A[-1] - A[-2]\n    seq2 = getArithematicSequence(A[-1], -diff, N)\n    seq2.reverse()\n    for i in seq2:\n        print(i, end=' ')\n    print('\\n')\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    solve(A, N)", "def getArithematicSequence(A, D, N):\n    seq = []\n    for i in range(N):\n        seq.append(A + i * D)\n    return seq\n\ndef check(A, B, N):\n    cnt = 0\n    for i in range(N):\n        if A[i] != B[i]:\n            cnt += 1\n    return cnt\n\ndef solve(A, N):\n    diff = A[1] - A[0]\n    seq1 = getArithematicSequence(A[0], diff, N)\n    if check(seq1, A, N) <= 1:\n        for i in seq1:\n            print(i, end=' ')\n        print('\\n')\n        return\n    diff = A[-1] - A[-2]\n    seq2 = getArithematicSequence(A[-1], -diff, N)\n    seq2.reverse()\n    for i in seq2:\n        print(i, end=' ')\n    print('\\n')\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    solve(A, N)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    b = []\n    d = l[1] - l[0]\n    b.append(l[0])\n    for j in range(1, n):\n        b.append(b[j - 1] + d)\n    c = 0\n    for k in range(n):\n        if l[k] != b[k]:\n            c += 1\n    if c <= 1:\n        print(*b)\n    else:\n        c = 0\n        d = l[n - 1] - l[n - 2]\n        b[n - 1] = l[n - 1]\n        for x in range(n - 2, -1, -1):\n            b[x] = b[x + 1] - d\n        for z in range(n):\n            if l[z] != b[z]:\n                c += 1\n        if c <= 1:\n            print(*b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    br = []\n    diff = ar[1] - ar[0]\n    br.append(ar[0])\n    for i in range(1, n):\n        br.append(br[i - 1] + diff)\n    c = 0\n    for i in range(n):\n        if ar[i] != br[i]:\n            c += 1\n    if c <= 1:\n        print(*br)\n    else:\n        c = 0\n        diff = ar[n - 1] - ar[n - 2]\n        br[n - 1] = ar[n - 1]\n        for i in range(n - 2, -1, -1):\n            br[i] = br[i + 1] - diff\n        for i in range(n):\n            if ar[i] != br[i]:\n                c += 1\n        if c <= 1:\n            print(*br)", "def getArithematicSequence(A, D, N):\n    seq = []\n    for i in range(N):\n        seq.append(A + i * D)\n    return seq\n\ndef check(A, B, N):\n    cnt = 0\n    for i in range(N):\n        if A[i] != B[i]:\n            cnt += 1\n    return cnt\n\ndef solve(A, N):\n    diff = A[1] - A[0]\n    seq1 = getArithematicSequence(A[0], diff, N)\n    if check(seq1, A, N) <= 1:\n        for i in seq1:\n            print(i, end=' ')\n        print('\\n')\n        return\n    diff = A[-1] - A[-2]\n    seq2 = getArithematicSequence(A[-1], -diff, N)\n    seq2.reverse()\n    for i in seq2:\n        print(i, end=' ')\n    print('\\n')\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    solve(A, N)", "def getArithematicSequence(A, D, N):\n    seq = []\n    for i in range(N):\n        seq.append(A + i * D)\n    return seq\n\ndef check(A, B, N):\n    cnt = 0\n    for i in range(N):\n        if A[i] != B[i]:\n            cnt += 1\n    return cnt\n\ndef solve(A, N):\n    diff = A[1] - A[0]\n    seq1 = getArithematicSequence(A[0], diff, N)\n    if check(seq1, A, N) <= 1:\n        for i in seq1:\n            print(i, end=' ')\n        print('\\n')\n        return\n    diff = A[-1] - A[-2]\n    seq2 = getArithematicSequence(A[-1], -diff, N)\n    seq2.reverse()\n    for i in seq2:\n        print(i, end=' ')\n    print('\\n')\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    solve(A, N)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    if 4 <= n <= 10 ** 5:\n        a = list(map(int, input().split()))\n        b = []\n        if a[3] == a[0] + 3 * (a[1] - a[0]) and a[1] - a[0] != a[2] - a[1]:\n            a[2] = a[0] + 2 * (a[1] - a[0])\n            print(*a)\n        elif a[3] != a[0] + 3 * (a[1] - a[0]) and a[2] - a[1] != a[1] - a[0]:\n            if a[3] - a[2] == a[2] - a[1]:\n                a[0] = a[1] - (a[2] - a[1])\n            else:\n                a[1] = a[0] + (a[3] - a[2])\n            print(*a)\n        elif a[-1] != a[0] + (n - 1) * (a[1] - a[0]):\n            a[-1] = a[0] + (n - 1) * (a[1] - a[0])\n            print(*a)\n        else:\n            x = a[0]\n            print(x, end=' ')\n            d = a[1] - a[0]\n            for i in range(2, n + 1):\n                x = a[0] + (i - 1) * d\n                print(x, end=' ')\n            print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if 4 <= n <= 10 ** 5:\n        a = list(map(int, input().split()))\n        b = []\n        if a[3] == a[0] + 3 * (a[1] - a[0]) and a[1] - a[0] != a[2] - a[1]:\n            a[2] = a[0] + 2 * (a[1] - a[0])\n            print(*a)\n        elif a[3] != a[0] + 3 * (a[1] - a[0]) and a[2] - a[1] != a[1] - a[0]:\n            if a[3] - a[2] == a[2] - a[1]:\n                a[0] = a[1] - (a[2] - a[1])\n            else:\n                a[1] = a[0] + (a[3] - a[2])\n            print(*a)\n        elif a[-1] != a[0] + (n - 1) * (a[1] - a[0]):\n            a[-1] = a[0] + (n - 1) * (a[1] - a[0])\n            print(*a)\n        else:\n            x = a[0]\n            print(x, end=' ')\n            d = a[1] - a[0]\n            for i in range(2, n + 1):\n                x = a[0] + (i - 1) * d\n                print(x, end=' ')\n            print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if 4 <= n <= 10 ** 5:\n        a = list(map(int, input().split()))\n        b = []\n        if a[3] == a[0] + 3 * (a[1] - a[0]) and a[1] - a[0] != a[2] - a[1]:\n            a[2] = a[0] + 2 * (a[1] - a[0])\n            print(*a)\n        elif a[3] != a[0] + 3 * (a[1] - a[0]) and a[2] - a[1] != a[1] - a[0]:\n            if a[3] - a[2] == a[2] - a[1]:\n                a[0] = a[1] - (a[2] - a[1])\n            else:\n                a[1] = a[0] + (a[3] - a[2])\n            print(*a)\n        elif a[-1] != a[0] + (n - 1) * (a[1] - a[0]):\n            a[-1] = a[0] + (n - 1) * (a[1] - a[0])\n            print(*a)\n        else:\n            x = a[0]\n            print(x, end=' ')\n            d = a[1] - a[0]\n            for i in range(2, n + 1):\n                x = a[0] + (i - 1) * d\n                print(x, end=' ')\n            print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if 4 <= n <= 10 ** 5:\n        a = list(map(int, input().split()))\n        b = []\n        if a[3] == a[0] + 3 * (a[1] - a[0]) and a[1] - a[0] != a[2] - a[1]:\n            a[2] = a[0] + 2 * (a[1] - a[0])\n            print(*a)\n        elif a[3] != a[0] + 3 * (a[1] - a[0]) and a[2] - a[1] != a[1] - a[0]:\n            if a[3] - a[2] == a[2] - a[1]:\n                a[0] = a[1] - (a[2] - a[1])\n            else:\n                a[1] = a[0] + (a[3] - a[2])\n            print(*a)\n        elif a[-1] != a[0] + (n - 1) * (a[1] - a[0]):\n            a[-1] = a[0] + (n - 1) * (a[1] - a[0])\n            print(*a)\n        else:\n            x = a[0]\n            print(x, end=' ')\n            d = a[1] - a[0]\n            for i in range(2, n + 1):\n                x = a[0] + (i - 1) * d\n                print(x, end=' ')\n            print()", "def answer():\n    d = a[1] - a[0]\n    (count, ind) = (0, -1)\n    for i in range(n):\n        if a[0] + i * d != a[i]:\n            count += 1\n            ind = i\n    if count == 1 and ind != -1:\n        a[ind] = a[0] + ind * d\n    elif count:\n        d = a[-1] - a[-2]\n        if a[2] - a[1] == d:\n            a[0] = a[1] - d\n        else:\n            a[1] = a[0] + d\n    return a\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*answer())", "def answer():\n    d = a[1] - a[0]\n    (count, ind) = (0, -1)\n    for i in range(n):\n        if a[0] + i * d != a[i]:\n            count += 1\n            ind = i\n    if count == 1 and ind != -1:\n        a[ind] = a[0] + ind * d\n    elif count:\n        d = a[-1] - a[-2]\n        if a[2] - a[1] == d:\n            a[0] = a[1] - d\n        else:\n            a[1] = a[0] + d\n    return a\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*answer())", "def answer():\n    d = a[1] - a[0]\n    (count, ind) = (0, -1)\n    for i in range(n):\n        if a[0] + i * d != a[i]:\n            count += 1\n            ind = i\n    if count == 1 and ind != -1:\n        a[ind] = a[0] + ind * d\n    elif count:\n        d = a[-1] - a[-2]\n        if a[2] - a[1] == d:\n            a[0] = a[1] - d\n        else:\n            a[1] = a[0] + d\n    return a\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*answer())", "def answer():\n    d = a[1] - a[0]\n    (count, ind) = (0, -1)\n    for i in range(n):\n        if a[0] + i * d != a[i]:\n            count += 1\n            ind = i\n    if count == 1 and ind != -1:\n        a[ind] = a[0] + ind * d\n    elif count:\n        d = a[-1] - a[-2]\n        if a[2] - a[1] == d:\n            a[0] = a[1] - d\n        else:\n            a[1] = a[0] + d\n    return a\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*answer())", "test_cases = int(input())\nfor i in range(test_cases):\n    no_of_elements = int(input())\n    sequence = list(map(int, input().split()))\n    d1 = sequence[1] - sequence[0]\n    d2 = sequence[2] - sequence[1]\n    d3 = (sequence[3] - sequence[0]) / 3\n    d4 = (sequence[3] - sequence[1]) / 2\n    d5 = (sequence[2] - sequence[0]) / 2\n    if d2 == d4:\n        d = d2\n    elif d3 == d5:\n        d = d3\n    elif d1 == d3:\n        d = d1\n    elif d1 == d5:\n        d = d1\n    if d == d1:\n        for i in range(no_of_elements):\n            sequence[i] = int(sequence[0] + i * d)\n    else:\n        for i in range(no_of_elements):\n            sequence[i] = int(sequence[-1] - (no_of_elements - i - 1) * d)\n    for i in sequence:\n        print(i, end=' ')\n    print('\\n')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = a[1] - a[0]\n    if a[1] - a[0] != a[2] - a[1] and a[2] - a[1] == a[3] - a[2]:\n        a[0] = a[1] - a[3] + a[2]\n    elif a[3] - a[2] != a[2] - a[1] and a[1] != a[0] + a[3] - a[2] and (a[2] == a[0] + 2 * (a[3] - a[2])) and (a[3] == a[0] + 3 * (a[3] - a[2])):\n        a[1] = a[0] + a[3] - a[2]\n    else:\n        for i in range(2, n):\n            if a[i] != a[i - 1] + d:\n                a[i] = a[i - 1] + d\n                break\n    print(*a)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = a[1] - a[0]\n    if a[1] - a[0] != a[2] - a[1] and a[2] - a[1] == a[3] - a[2]:\n        a[0] = 2 * a[1] - a[2]\n    elif a[3] - a[2] != a[2] - a[1] and a[1] != a[0] + a[3] - a[2] and (a[2] == a[0] + 2 * (a[3] - a[2])) and (a[3] == a[0] + 3 * (a[3] - a[2])):\n        a[1] = a[0] + a[3] - a[2]\n    else:\n        for i in range(2, n):\n            if a[i] != a[i - 1] + d:\n                a[i] = a[i - 1] + d\n                break\n    print(*a)", "from statistics import mode\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ll = len(l)\n    diff = list()\n    if ll == 4:\n        diff.append((l[3] - l[0]) // 3)\n    for i in range(ll - 1):\n        diff.append(l[i + 1] - l[i])\n    x = mode(diff)\n    if l[0] - l[1] != x and l[2] - l[1] == x:\n        l[0] = l[1] - x\n    for i in range(ll - 1):\n        if l[i + 1] - l[i] != x:\n            l[i + 1] = l[i] + x\n    for i in range(ll):\n        print(l[i], end=' ')\n    print()", "from collections import Counter\n\ndef new_seq(l, d, x):\n    new = [x]\n    for i in range(len(l) - 1):\n        t = new[-1] + d\n        new.append(t)\n    return new\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    aux = []\n    for i in range(n - 1):\n        aux.append(l[i + 1] - l[i])\n    aux_1 = Counter(aux)\n    aux = list(set(aux))\n    if len(aux) > 1 and len(aux) == 3:\n        (a, b, c) = (aux[0], aux[1], aux[2])\n        if a + b == 2 * c:\n            t_1 = new_seq(l, c, l[0])\n            print(*t_1)\n        elif a + c == 2 * b:\n            t_1 = new_seq(l, b, l[0])\n            print(*t_1)\n        else:\n            t_1 = new_seq(l, a, l[0])\n            print(*t_1)\n    elif len(aux) == 2:\n        t_2 = aux_1.most_common(1)[0][0]\n        if l[0] - l[1] != t_2:\n            print(*new_seq(l, t_2, l[1] - t_2))\n        else:\n            print(*new_seq(l, t_2, l[0]))\n    else:\n        print(*l)", "for _ in range(int(input())):\n    N = int(input())\n    l = list(map(int, input().split()))\n    d = l[1] - l[0]\n    if l[2] - l[1] == l[3] - l[2] and l[2] - l[1] != l[1] - l[0]:\n        l[0] = 2 * l[1] - l[2]\n    elif l[2] - l[1] != l[3] - l[2] and l[1] != l[0] + l[3] - l[2] and (l[2] == l[0] + 2 * (l[3] - l[2])) and (l[3] == l[0] + 3 * (l[3] - l[2])):\n        l[1] = l[0] + l[3] - l[2]\n    else:\n        for i in range(2, N):\n            if l[i] != l[i - 1] + d:\n                l[i] = l[i - 1] + d\n                break\n    print(*l)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = l[1] - l[0]\n    if l[2] - l[1] == l[3] - l[2] and l[2] - l[1] != x:\n        l[0] = -l[2] + 2 * l[1]\n    elif l[2] - l[1] != x and l[3] - l[2] != l[2] - l[1] and (l[3] - l[2] != x):\n        y = l[3] - l[0]\n        y //= 3\n        if x == y:\n            l[2] = l[1] + x\n        else:\n            l[1] = l[0] + y\n    else:\n        for i in range(2, n):\n            if l[i] != l[i - 1] + x:\n                l[i] = l[i - 1] + x\n                break\n    print(*l)\n    t -= 1", "for _ in range(int(input())):\n    N = int(input())\n    l = list(map(int, input().split()))\n    d = l[1] - l[0]\n    if l[2] - l[1] == l[3] - l[2] and l[2] - l[1] != l[1] - l[0]:\n        l[0] = 2 * l[1] - l[2]\n    elif l[2] - l[1] != l[3] - l[2] and l[1] != l[0] + l[3] - l[2] and (l[2] == l[0] + 2 * (l[3] - l[2])) and (l[3] == l[0] + 3 * (l[3] - l[2])):\n        l[1] = l[0] + l[3] - l[2]\n    else:\n        for i in range(2, N):\n            if l[i] != l[i - 1] + d:\n                l[i] = l[i - 1] + d\n                break\n    print(*l)", "for j in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    w = x.copy()\n    t = x.copy()\n    d = x[1] - x[0]\n    z = [x[0], x[1]]\n    for i in range(2, n):\n        x[i] = x[i - 1] + d\n        z.append(x[i])\n    e = t[-1] - t[-2]\n    y = [t[-1], t[-2]]\n    for i in range(n - 2):\n        t[n - 2 - i - 1] = t[n - 2 - i] - e\n        y.append(t[n - 2 - i - 1])\n    y.reverse()\n    (am, bm) = (0, 0)\n    for i in range(n):\n        if w[i] != y[i]:\n            am += 1\n            if am > 1:\n                break\n        if w[i] != z[i]:\n            bm += 1\n            if bm > 1:\n                break\n    if am == 1:\n        print(*y)\n    else:\n        print(*z)", "for j in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    w = x.copy()\n    t = x.copy()\n    d = x[1] - x[0]\n    z = [x[0], x[1]]\n    for i in range(2, n):\n        x[i] = x[i - 1] + d\n        z.append(x[i])\n    e = t[-1] - t[-2]\n    y = [t[-1], t[-2]]\n    for i in range(n - 2):\n        t[n - 2 - i - 1] = t[n - 2 - i] - e\n        y.append(t[n - 2 - i - 1])\n    y.reverse()\n    (am, bm) = (0, 0)\n    for i in range(n):\n        if w[i] != y[i]:\n            am += 1\n            if am > 1:\n                break\n        if w[i] != z[i]:\n            bm += 1\n            if bm > 1:\n                break\n    if am == 1:\n        print(*y)\n    else:\n        print(*z)", "def findD_and_start(A):\n    first = A[1] - A[0]\n    second = A[2] - A[1]\n    third = A[3] - A[2]\n    if first == second:\n        return (second, A[0])\n    elif third == second:\n        return (third, A[3] - 3 * third)\n    else:\n        return ((A[3] - A[0]) // 3, A[0])\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    A = [int(i) for i in input().split()]\n    (d, start) = findD_and_start(A)\n    s = ''\n    if d == 0:\n        for i in range(N):\n            s += str(start) + ' '\n    else:\n        for i in range(start, start + N * d, d):\n            s += str(i) + ' '\n    print(s.strip())", "for _ in range(int(input())):\n    N = int(input())\n    l = list(map(int, input().split()))\n    d = l[1] - l[0]\n    if l[2] - l[1] == l[3] - l[2] and l[2] - l[1] != l[1] - l[0]:\n        l[0] = 2 * l[1] - l[2]\n    elif l[2] - l[1] != l[3] - l[2] and l[1] != l[0] + l[3] - l[2] and (l[2] == l[0] + 2 * (l[3] - l[2])) and (l[3] == l[0] + 3 * (l[3] - l[2])):\n        l[1] = l[0] + l[3] - l[2]\n    else:\n        for i in range(2, N):\n            if l[i] != l[i - 1] + d:\n                l[i] = l[i - 1] + d\n                break\n    print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = False\n    d = 0\n    for i in range(1, n - 3):\n        if a[i] - a[i - 1] != a[i + 1] - a[i]:\n            d = a[i + 3] - a[i + 2]\n            a[i + 1] = a[i + 2] - d\n            a[i] = a[i + 1] - d\n            a[i - 1] = a[i] - d\n            f = True\n            break\n    if not f:\n        if (a[n - 1] - a[n - 4]) / 3 == a[n - 1] - a[n - 2]:\n            d = a[n - 1] - a[n - 2]\n            a[n - 3] = a[n - 2] - d\n        elif (a[n - 1] - a[n - 4]) / 3 == (a[n - 1] - a[n - 3]) / 2:\n            d = a[n - 3] - a[n - 4]\n            a[n - 2] = a[n - 3] + d\n        elif a[n - 1] - a[n - 2] == a[n - 2] - a[n - 3]:\n            d = a[n - 1] - a[n - 2]\n            a[n - 4] = a[n - 3] - d\n        else:\n            d = a[n - 3] - a[n - 4]\n            a[n - 1] = a[n - 2] + d\n    [print(x, end=' ') for x in a]\n    print()", "t = int(input())\nfor T in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    diff = []\n    cor = 0\n    for i in range(1, n):\n        diff.append(a[i] - a[i - 1])\n    d = set(diff)\n    d = list(d)\n    if len(d) == 1:\n        print(*a)\n        continue\n    if len(d) == 2:\n        cor = a[2] - a[1]\n        if a[1] - a[0] != cor:\n            a[0] = a[1] - cor\n        else:\n            a[-1] = a[-2] + cor\n        print(*a)\n        continue\n    if (d[0] + d[1]) / 2 == d[2]:\n        cor = d[2]\n    elif (d[1] + d[2]) / 2 == d[0]:\n        cor = d[0]\n    else:\n        cor = d[1]\n    for i in range(1, n):\n        if a[i] - a[i - 1] != cor:\n            a[i] = a[i - 1] + cor\n    print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 4:\n        target = -1\n        cur = -1\n        ind = -1\n        s = set()\n        flag = False\n        for i in range(1, n):\n            k = a[i] - a[i - 1]\n            if k not in s:\n                s.add(k)\n            else:\n                target = k\n                cur = a[i]\n                ind = i\n                flag = True\n                break\n        if flag:\n            back = [cur]\n            forth = [cur]\n            for i in range(ind + 1, n):\n                forth.append(forth[-1] + target)\n            for i in range(ind - 1, -1, -1):\n                back.append(back[-1] - target)\n            back = back[::-1]\n            back.pop()\n            print(*back, end=' ')\n            print(*forth)\n        else:\n            k = (a[-1] - a[0]) // (n - 1)\n            for i in range(n - 1, -1, -1):\n                print(a[-1] - k * i, end=' ')\n            print()\n    else:\n        target = -1\n        cur = -1\n        ind = -1\n        s = set()\n        for i in range(1, n):\n            k = a[i] - a[i - 1]\n            if k not in s:\n                s.add(k)\n            else:\n                target = k\n                cur = a[i]\n                ind = i\n                break\n        back = [cur]\n        forth = [cur]\n        for i in range(ind + 1, n):\n            forth.append(forth[-1] + target)\n        for i in range(ind - 1, -1, -1):\n            back.append(back[-1] - target)\n        back = back[::-1]\n        back.pop()\n        print(*back, end=' ')\n        print(*forth)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 4:\n        target = -1\n        cur = -1\n        ind = -1\n        s = set()\n        flag = False\n        for i in range(1, n):\n            k = a[i] - a[i - 1]\n            if k not in s:\n                s.add(k)\n            else:\n                target = k\n                cur = a[i]\n                ind = i\n                flag = True\n                break\n        if flag:\n            back = [cur]\n            forth = [cur]\n            for i in range(ind + 1, n):\n                forth.append(forth[-1] + target)\n            for i in range(ind - 1, -1, -1):\n                back.append(back[-1] - target)\n            back = back[::-1]\n            back.pop()\n            print(*back, end=' ')\n            print(*forth)\n        else:\n            k = (a[-1] - a[0]) // (n - 1)\n            for i in range(n - 1, -1, -1):\n                print(a[-1] - k * i, end=' ')\n            print()\n    else:\n        target = -1\n        cur = -1\n        ind = -1\n        s = set()\n        for i in range(1, n):\n            k = a[i] - a[i - 1]\n            if k not in s:\n                s.add(k)\n            else:\n                target = k\n                cur = a[i]\n                ind = i\n                break\n        back = [cur]\n        forth = [cur]\n        for i in range(ind + 1, n):\n            forth.append(forth[-1] + target)\n        for i in range(ind - 1, -1, -1):\n            back.append(back[-1] - target)\n        back = back[::-1]\n        back.pop()\n        print(*back, end=' ')\n        print(*forth)", "for i in range(0, int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d1 = l[1] - l[0]\n    d2 = l[2] - l[1]\n    if d2 == d1:\n        ce = l[2]\n        for j in range(3, n):\n            if l[j] == ce + d1:\n                ce += d1\n            else:\n                l[j] = ce + d1\n                break\n    elif l[3] - l[0] == 3 * d1:\n        l[2] = l[1] + d1\n    elif l[2] - l[0] == 2 * (l[3] - l[2]):\n        l[1] = l[0] + l[3] - l[2]\n    else:\n        l[0] = 2 * l[1] - l[2]\n    for j in range(0, n):\n        print(l[j], end=' ')\n    print('')", "for _ in range(int(input())):\n    N = int(input())\n    array = list(map(int, input().split()))\n    d1 = array[1] - array[0]\n    d2 = array[2] - array[1]\n    d3 = array[3] - array[2]\n    d = 0\n    if d1 == d2:\n        d = d1\n    elif d1 == d3:\n        d = d1\n    elif d2 == d3:\n        d = d2\n    else:\n        d = (array[3] - array[0]) // 3\n    for i in range(N - 1):\n        if array[i + 1] - array[i] != d:\n            if i == 0:\n                if array[2] - array[1] == d:\n                    array[0] = array[1] - d\n                else:\n                    array[1] = array[0] + d\n            else:\n                array[i + 1] = array[i] + d\n            break\n    print(*array)", "def printAp(a, d, l):\n    print(' '.join([str(int(a + i * d)) for i in range(l)]))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = [int(x) for x in input().split(' ')]\n    a = 0\n    diff = 0\n    if (lst[0] + lst[2]) / 2 == lst[1]:\n        a = lst[0]\n        diff = lst[1] - lst[0]\n    elif (lst[1] + lst[3]) / 2 == lst[2]:\n        diff = lst[2] - lst[1]\n        a = lst[1] - diff\n    else:\n        a = lst[0]\n        diff = (lst[3] - lst[0]) / 3\n    printAp(a, diff, n)", "def printAp(a, d, l):\n    print(' '.join([str(int(a + i * d)) for i in range(l)]))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = [int(x) for x in input().split(' ')]\n    a = 0\n    diff = 0\n    if (lst[0] + lst[2]) / 2 == lst[1]:\n        a = lst[0]\n        diff = lst[1] - lst[0]\n    elif (lst[1] + lst[3]) / 2 == lst[2]:\n        diff = lst[2] - lst[1]\n        a = lst[1] - diff\n    else:\n        a = lst[0]\n        diff = (lst[3] - lst[0]) / 3\n    printAp(a, diff, n)", "from collections import Counter\n\ndef printAp(a, d, l):\n    i = 0\n    while i < l:\n        print(int(a + i * d), end=' ')\n        i += 1\n    print(' ')\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = [int(x) for x in input().split(' ')]\n    a = 0\n    diff = 0\n    if (lst[0] + lst[2]) / 2 == lst[1]:\n        a = lst[0]\n        diff = lst[1] - lst[0]\n    elif (lst[1] + lst[3]) / 2 == lst[2]:\n        diff = lst[2] - lst[1]\n        a = lst[1] - diff\n    else:\n        a = lst[0]\n        diff = (lst[3] - lst[0]) / 3\n    printAp(a, diff, n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input().split(' ')\n    a = [int(i) for i in s]\n    d = {}\n    if n > 4:\n        for i in range(1, n):\n            if a[i] - a[i - 1] in d:\n                common_diff = a[i] - a[i - 1]\n                break\n            else:\n                d[a[i] - a[i - 1]] = True\n        point = -1\n        flag = 0\n        for i in range(1, n - 1):\n            if a[i] - a[i - 1] != common_diff and a[i + 1] - a[i] != common_diff:\n                point = i\n                flag = 1\n                break\n        if flag == 1:\n            a[point] = a[point + 1] - common_diff\n        elif a[1] - a[0] != common_diff:\n            point = 0\n            a[point] = a[1] - common_diff\n        elif a[-1] - a[-2] != common_diff:\n            point = n - 1\n            a[point] = a[-2] + common_diff\n        else:\n            point = -1\n        print(*a)\n    else:\n        flag = 0\n        for i in range(1, n):\n            if a[i] - a[i - 1] in d:\n                common_diff = a[i] - a[i - 1]\n                flag = 1\n                break\n            else:\n                d[a[i] - a[i - 1]] = True\n        if flag == 1:\n            if a[1] - a[0] != common_diff:\n                point = 0\n                a[point] = a[1] - common_diff\n            elif a[-1] - a[-2] != common_diff:\n                point = n - 1\n                a[point] = a[point - 1] + common_diff\n            else:\n                point = -1\n        else:\n            common_diff = int((a[-1] - a[0]) / 3)\n            a[1] = a[0] + common_diff\n            a[2] = a[-1] - common_diff\n        print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    x1 = l[1] - l[0]\n    x2 = l[-1] - l[-2]\n    a = [l[0]]\n    b = [l[-1]]\n    for i in range(n - 1):\n        a.append(a[i] + x1)\n        b.append(b[i] - x2)\n    count = 0\n    for i in range(n):\n        if l[i] != a[i]:\n            count += 1\n        if count == 2:\n            break\n    if count == 2:\n        for i in range(n):\n            print(b[-i - 1], end=' ')\n    else:\n        for i in range(n):\n            print(a[i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    x1 = l[1] - l[0]\n    x2 = l[-1] - l[-2]\n    a = [l[0]]\n    b = [l[-1]]\n    for i in range(n - 1):\n        a.append(a[i] + x1)\n        b.append(b[i] - x2)\n    count = 0\n    for i in range(n):\n        if l[i] != a[i]:\n            count += 1\n        if count == 2:\n            break\n    if count == 2:\n        for i in range(n):\n            print(b[-i - 1], end=' ')\n    else:\n        for i in range(n):\n            print(a[i], end=' ')\n    print()", "from random import randint\n\nclass Solution(object):\n\n    def __init__(self):\n        self.tests = int(input())\n        self.n = 0\n        self.a = []\n        self.ans = []\n        for _ in range(self.tests):\n            self.get_data()\n            self.solve()\n            self.print_answer()\n            self.clear_data()\n    pass\n\n    def get_data(self):\n        self.n = int(input())\n        self.a = list(map(int, input().split()))\n        self.ans = [0] * self.n\n        pass\n\n    def clear_data(self):\n        self.a.clear()\n        self.ans.clear()\n        pass\n\n    def print_answer(self):\n        for x in self.ans:\n            print(x, end=' ')\n        print()\n        pass\n\n    def solve(self):\n        d = [0] * self.n\n        di = dict()\n        required_df = 0\n        begin = -1\n        for i in range(1, self.n):\n            df = self.a[i] - self.a[i - 1]\n            d[i] = df\n            if df in di:\n                di[df] += 1\n                required_df = df\n                begin = i\n                break\n            else:\n                d[i] = df\n                di[df] = 1\n        if begin != -1:\n            self.update_ans(required_df, begin)\n            return\n        for i in range(1, len(d)):\n            x = self.update_ans(d[i], i)\n            if x == 1:\n                break\n        pass\n\n    @classmethod\n    def create_test(cls):\n        t_limit = 1\n        t = randint(1, pow(10, t_limit))\n        print(t)\n        n_limit = 1\n        a_limit = 1\n        for _ in range(t):\n            n = randint(4, pow(10, n_limit))\n            print(n)\n            r = randint(1, 5)\n            a = randint(1, pow(10, a_limit))\n            array = [x for x in range(a, a + r * n, r)]\n            i = randint(0, n - 1)\n            array[i] = randint(1, pow(10, a_limit))\n            for x in array:\n                print(x, end=' ')\n            print()\n        exit(0)\n        pass\n\n    def update_ans(self, required_df, begin):\n        c = 0\n        out = 0\n        for i in range(begin, -1, -1):\n            self.ans[i] = self.a[begin] - required_df * c\n            if self.a[i] != self.ans[i]:\n                out += 1\n            c += 1\n        c = 0\n        for i in range(begin, self.n):\n            self.ans[i] = self.a[begin] + required_df * c\n            if self.ans[i] != self.a[i]:\n                out += 1\n            c += 1\n        return out\n        pass\n\ndef main():\n    Solution()\n    pass\nmain()", "t = int(input())\nfor loop in range(t):\n    n = int(input())\n    num = list(map(int, input().split()))\n    d1 = num[1] - num[0]\n    d2 = num[-1] - num[-2]\n    seq1 = [num[0]]\n    seq2 = [num[-1]]\n    diff = 0\n    for i in range(1, n):\n        seq1.append(seq1[i - 1] + d1)\n        if seq1[i] != num[i]:\n            diff += 1\n    if diff > 1:\n        seq = [0 for i in range(n - 1)]\n        seq2 = seq + seq2\n        for i in range(1, n):\n            seq2[n - 1 - i] = seq2[n - 1 - (i - 1)] - d2\n        for i in range(n):\n            print(seq2[i], end=' ')\n    else:\n        for i in range(n):\n            print(seq1[i], end=' ')\n    print('')", "def most_frequent(List):\n    counter = 0\n    num = List[0]\n    for i in List:\n        curr_frequency = List.count(i)\n        if curr_frequency > counter:\n            counter = curr_frequency\n            num = i\n    return num\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = l[1] - l[0]\n    ll = [l[1] - l[0], l[2] - l[1], l[3] - l[2], (l[2] - l[0]) / 2, (l[3] - l[1]) / 2]\n    d = most_frequent(ll)\n    if ll[0] != d and d == ll[1]:\n        l[0] = l[1] - d\n    else:\n        for i in range(n - 1):\n            if l[i + 1] - l[i] != d:\n                l[i + 1] = l[i] + d\n                break\n    for i in range(n):\n        print(l[i], end=' ')\n    print()", "t = int(input())\nwhile t:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    init_term = 0\n    d = 0\n    if a[1] - a[0] == a[2] - a[1]:\n        init_term = a[0]\n        d = a[1] - a[0]\n    elif a[2] - a[1] == a[3] - a[2]:\n        d = a[3] - a[2]\n        init_term = a[1] - d\n    else:\n        init_term = a[0]\n        d = (a[3] - a[0]) // 3\n    for i in range(n):\n        print(init_term + i * d, end=' ')\n    print()\n    t -= 1", "def most_(List):\n    return max(set(List), key=List.count)\nfor i in range(int(input())):\n    n = int(input())\n    new = list()\n    ele = 0\n    pos = 0\n    ap = [int(x) for x in input().split()]\n    di = list()\n    for i in range(n - 1):\n        di.append(ap[i + 1] - ap[i])\n    se = set(di)\n    if len(di) == len(se):\n        four = list()\n        a = ap[0]\n        for i in range(1, n):\n            four.append((ap[i] - a) / i)\n        d2 = int(most_(four))\n        for i in range(n):\n            new.append(a + i * d2)\n        print(*new)\n        continue\n    d = most_(di)\n    for i in range(n - 1):\n        if ap[i + 1] - ap[i] == d:\n            ele = ap[i]\n            pos = i\n            break\n    a = ele - pos * d\n    for i in range(n):\n        new.append(a + i * d)\n    print(*new)", "def most_(List):\n    return max(set(List), key=List.count)\nfor i in range(int(input())):\n    n = int(input())\n    new = list()\n    ele = 0\n    pos = 0\n    ap = [int(x) for x in input().split()]\n    di = list()\n    for i in range(n - 1):\n        di.append(ap[i + 1] - ap[i])\n    se = set(di)\n    if len(di) == len(se):\n        four = list()\n        a = ap[0]\n        for i in range(1, n):\n            four.append((ap[i] - a) / i)\n        d2 = int(most_(four))\n        for i in range(n):\n            new.append(a + i * d2)\n        print(*new)\n        continue\n    d = most_(di)\n    for i in range(n - 1):\n        if ap[i + 1] - ap[i] == d:\n            ele = ap[i]\n            pos = i\n            break\n    a = ele - pos * d\n    for i in range(n):\n        new.append(a + i * d)\n    print(*new)", "n = lambda : map(int, input().split())\nx = int(input())\nfor __ in range(x):\n    a = int(input())\n    b = list(n())\n    d = []\n    diff = b[1] - b[0]\n    for i in range(1, a):\n        d.append(b[i] - b[i - 1])\n    if d[0] != d[1]:\n        if b[3] + b[1] == 2 * b[2]:\n            diff = b[2] - b[1]\n            b[0] = b[1] - diff\n        else:\n            diff = (b[a - 1] - b[0]) // (a - 1)\n    for i in range(1, a):\n        b[i] = b[i - 1] + diff\n    print(*b)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = []\n    for j in range(1, n):\n        a.append(l[j] - l[j - 1])\n    a = set(a)\n    for i in a:\n        d = [l[0]]\n        e = [l[n - 1]]\n        (count1, count2) = (0, 0)\n        for j in range(1, n):\n            d.append(d[j - 1] + i)\n            e.append(e[j - 1] - i)\n            if d[j] != l[j]:\n                count1 += 1\n            if e[j] != l[n - j - 1]:\n                count2 += 1\n        if count1 <= 1:\n            print(*d)\n            break\n        if count2 <= 1:\n            print(*e[::-1])\n            break", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    r = int(input())\n    arr = [int(r) for r in input().split()]\n    d = arr[1] - arr[0]\n    ans = []\n    ans.append(arr[0])\n    for i in range(1, r):\n        ans.append(ans[i - 1] + d)\n    diff = 0\n    for i in range(r):\n        if ans[i] != arr[i]:\n            diff = diff + 1\n    if diff <= 1:\n        for i in range(r):\n            print(ans[i], end=' ')\n        print()\n    else:\n        d = arr[r - 1] - arr[r - 2]\n        i = r - 2\n        ans[r - 1] = arr[r - 1]\n        while i >= 0:\n            ans[i] = ans[i + 1] - d\n            i = i - 1\n        for i in range(r):\n            print(ans[i], end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (d1, d2) = (a[1] - a[0], a[n - 1] - a[n - 2])\n    (b, c) = ([], [])\n    [b.append(a[0] + (i - 1) * d1) for i in range(1, n + 1)]\n    [c.append(a[n - 1] - (n - 1) * d2 + (j - 1) * d2) for j in range(1, n + 1)]\n    (c1, c2) = (0, 0)\n    for k in range(n):\n        if b[k] != a[k]:\n            c1 += 1\n        if c[k] != a[k]:\n            c2 += 1\n    if c1 == 1:\n        print(*b)\n    else:\n        print(*c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    d1 = arr[1] - arr[0]\n    d2 = arr[-2] - arr[-1]\n    first = arr[0]\n    last = arr[-1]\n    arr1 = [0] * n\n    arr1[0] = first\n    arr2 = [0] * n\n    count1 = 0\n    count2 = 0\n    arr2[0] = last\n    for i in range(1, n):\n        arr1[i] = arr1[i - 1] + d1\n        arr2[i] = arr2[i - 1] + d2\n    arr2 = arr2[::-1]\n    for i in range(n):\n        x = arr[i]\n        y = arr1[i]\n        z = arr2[i]\n        if x != y:\n            count1 += 1\n        if x != z:\n            count2 += 1\n    if count1 <= 1:\n        print(*arr1)\n    if count2 <= 1:\n        if arr1 != arr2:\n            print(*arr2)", "for i in range(int(input())):\n    n = int(input())\n    l = input().split()\n    l[0] = int(l[0])\n    l[1] = int(l[1])\n    l[2] = int(l[2])\n    l[3] = int(l[3])\n    a = l[1] - l[0]\n    b = l[2] - l[1]\n    c = l[3] - l[2]\n    if a == b:\n        d = a\n        start = l[0]\n    elif b == c:\n        d = b\n        start = l[1] - d\n    else:\n        d = (a + b + c) // 3\n        start = l[0]\n    a = start\n    for j in range(n):\n        print(a, end=' ')\n        a = a + d\n    print()", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    var = 0\n    b = [0] * n\n    d = a[1] - a[0]\n    b[0] = a[0]\n    for i in range(1, n):\n        b[i] = b[i - 1] + d\n    for i in range(0, n):\n        if a[i] == b[i]:\n            None\n        else:\n            var += 1\n    if var == 1:\n        for i in b:\n            print(i, end=' ')\n        print()\n    else:\n        d = a[-1] - a[-2]\n        b[-1] = a[-1]\n        for i in range(n - 2, -1, -1):\n            b[i] = b[i + 1] - d\n        for i in b:\n            print(i, end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = [0] * n\n    arr = [int(v) for v in input().strip().split(' ')]\n    diff1 = arr[2] - arr[0]\n    diff2 = arr[3] - arr[1]\n    if diff1 == diff2:\n        diff = diff1 // 2\n        b[0] = arr[0]\n        for i in range(1, n):\n            b[i] = b[i - 1] + diff\n    else:\n        d1 = arr[1] - arr[0]\n        d2 = arr[2] - arr[1]\n        d3 = arr[3] - arr[2]\n        if d1 != d2:\n            if (arr[3] - arr[2]) * 2 == arr[3] - arr[1]:\n                diff = arr[3] - arr[2]\n            elif (arr[3] - arr[2]) * 3 == arr[3] - arr[0]:\n                diff = arr[3] - arr[2]\n            elif (arr[3] - arr[1]) // 2 * 3 == arr[3] - arr[0]:\n                diff = (arr[3] - arr[1]) // 2\n            b[3] = arr[3]\n            for i in range(4, n):\n                b[i] = b[i - 1] + diff\n            for j in range(2, -1, -1):\n                b[j] = b[j + 1] - diff\n        else:\n            diff = arr[1] - arr[0]\n            b[0] = arr[0]\n            for i in range(1, n):\n                b[i] = b[i - 1] + diff\n    print(' '.join(map(str, b)))", "def _get_difference_list(k):\n    a = k[1] - k[0]\n    b = k[len(k) - 1] - k[len(k) - 2]\n    diff = [a, b]\n    return diff\n\ndef _create_temp_list(k_list, difference, from_last):\n    k_list_copy = k_list.copy()\n    if not from_last:\n        for i in range(len(k_list) - 1):\n            k_list_copy[i + 1] = k_list_copy[i] + difference\n    else:\n        for i in range(len(k_list) - 1, 0, -1):\n            k_list_copy[i - 1] = k_list_copy[i] - difference\n    count_changes = 0\n    for i in range(len(k_list)):\n        if k_list_copy[i] != k_list[i]:\n            count_changes += 1\n    if count_changes > 1:\n        return None\n    return k_list_copy\ntestcases = int(input())\nfor _ in range(testcases):\n    input()\n    temp_num = input().split()\n    num = [int(i) for i in temp_num]\n    difference_list = _get_difference_list(num)\n    val = _create_temp_list(num, difference_list[0], False)\n    if val is None:\n        val = _create_temp_list(num, difference_list[1], True)\n    print(' '.join(map(str, val)))", "import copy\nimport collections\n\ndef ap(n):\n    d = n[1] - n[0]\n    for x in range(len(n) - 1):\n        y = x + 1\n        if n[y] - n[x] != d:\n            return False\n    return True\n\ndef ugly(a):\n    b = set()\n    for x in a:\n        b.add(x)\n    return len(b) == 2\n\ndef solve(a):\n    for x in range(len(a)):\n        for y in range(len(a)):\n            if y != x and a[x] == a[y]:\n                hit = a[x]\n    l = []\n    for x in range(len(a)):\n        l.append(hit)\n    return l\n\ndef hitntrial(a):\n    n = copy.copy(a)\n    n[0] = n[1] - (n[2] - n[1])\n    if ap(n):\n        return n\n    n = copy.copy(a)\n    n[1] = n[2] - (n[3] - n[2])\n    if ap(n):\n        return n\n    n = copy.copy(a)\n    n[2] = n[3] - (n[1] - n[0])\n    if ap(n):\n        return n\n    n = copy.copy(a)\n    n[3] = n[2] + (n[1] - n[0])\n    if ap(n):\n        return n\n    return 'DamnIt'\n\ndef solve2(a):\n    d = dict()\n    for x in range(len(a) - 1):\n        y = x + 1\n        d[x, y] = a[y] - a[x]\n    for (i, j) in d.items():\n        for (m, n) in d.items():\n            if j == n and i != m:\n                return solve3(d, j, a)\n\ndef solve3(d, j, a):\n    l = []\n    for (x, y) in d.items():\n        if y != j:\n            l.append(x)\n    if len(l) == 2:\n        for x in l[0]:\n            if x in l[1]:\n                return x\n    else:\n        if l == [(0, 1)]:\n            return 0\n        return len(a) - 1\n\ndef display(a):\n    for x in a:\n        print(x, end=' ')\n    print()\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if ap(a):\n        display(a)\n    elif ugly(a):\n        display(solve(a))\n    elif n == 4:\n        display(hitntrial(a))\n    else:\n        if solve2(a) == len(a) - 1:\n            a[len(a) - 1] = a[1] - a[0] + a[len(a) - 2]\n        elif solve2(a) == 0:\n            a[0] = a[1] - (a[2] - a[1])\n        else:\n            t = solve2(a)\n            a[t] = a[t - 1] + int((a[t + 1] - a[t - 1]) / 2)\n        display(a)", "def print_ap(a, d, n):\n    for i in range(n):\n        print(a + i * d, end=' ')\n    print()\n\ndef solve():\n    n = int(input())\n    arr = [int(x) for x in input().strip().split()]\n    (a1, a2, a3, a4) = arr[:4]\n    if a2 - a1 == a3 - a2 == a4 - a3:\n        print_ap(a1, a2 - a1, n)\n    elif a3 == a1 + 2 * (a2 - a1) and a4 != a1 + 3 * (a2 - a1):\n        print_ap(a1, a2 - a1, n)\n    elif a3 != a1 + 2 * (a2 - a1) and a4 == a1 + 3 * (a2 - a1):\n        print_ap(a1, a2 - a1, n)\n    elif a2 - a1 != a3 - a2 == a4 - a3:\n        print_ap(a2 - (a3 - a2), a3 - a2, n)\n    else:\n        print_ap(a1, a4 - a3, n)\n\ndef main():\n    t = int(input())\n    while t > 0:\n        solve()\n        t -= 1\nmain()", "T = int(input())\nwhile T:\n    N = int(input())\n    a = input().split()\n    for i in range(N):\n        a[i] = int(a[i])\n    b = []\n    for j in range(N - 1):\n        b.append(a[j + 1] - a[j])\n    if len(set(b)) == 2:\n        if b[0] != b[1]:\n            a[0] = a[1] - b[1]\n        else:\n            a[N - 1] = a[N - 2] + b[1]\n        print(' '.join((str(x) for x in a)))\n    else:\n        c = []\n        d = (a[N - 1] - a[0]) // (N - 1)\n        for k in range(N):\n            c.append(a[0] + k * d)\n        print(' '.join((str(x) for x in c)))\n    T -= 1", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    d1 = A[1] - A[0]\n    d2 = A[2] - A[1]\n    d3 = A[3] - A[2]\n    if d1 == d2:\n        diff = d1\n    elif d2 == d3:\n        diff = d2\n        A[0] = A[1] - diff\n    else:\n        diff = (A[3] - A[0]) // 3\n    for i in range(N):\n        print(A[0] + i * diff, end=' ')\n    print()", "from bisect import insort as ins\nfrom bisect import bisect as bs\nfrom bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nfrom collections import defaultdict as dd\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    if 1:\n        d = []\n        f = dd(int)\n        for i in range(n - 1):\n            d.append(l[i + 1] - l[i])\n            f[l[i + 1] - l[i]] += 1\n        m = max(f.values())\n        for i in f:\n            if f[i] == m:\n                x = i\n                break\n    if n == 4:\n        if m == 1:\n            x1 = l[1] - l[0]\n            x2 = l[-1] - l[-2]\n            d = l.copy()\n            if l[0] + 2 * x1 == l[2]:\n                l[1] = l[0] + x1\n            else:\n                l[-2] = l[-1] - x1\n            if d[0] + 2 * x2 == d[2]:\n                d[1] = d[0] + x2\n            else:\n                d[-2] = d[-1] - x2\n            if d[1] - d[0] == d[2] - d[1] == d[3] - d[2]:\n                l = d\n        elif d[0] == x:\n            l = [l[0]]\n            for i in range(n - 1):\n                l.append(l[-1] + x)\n        else:\n            l = [l[-1]]\n            for i in range(n - 1):\n                l.append(l[-1] - x)\n            l.reverse()\n    else:\n        m = x\n        if d[0] == m:\n            l = [l[0]]\n            for i in range(n - 1):\n                l.append(l[-1] + m)\n        else:\n            l = [l[-1]]\n            for i in range(n - 1):\n                l.append(l[-1] - m)\n            l.reverse()\n    print(*l)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d1 = a[1] - a[0]\n    d2 = a[2] - a[1]\n    d3 = a[3] - a[2]\n    if d1 == d2:\n        d = d1\n    elif d2 == d3:\n        d = d2\n        a[0] = a[1] - d\n    else:\n        d = (a[3] - a[0]) // 3\n    for i in range(n):\n        print(a[0] + i * d, end=' ')\n    print()", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] + a[2] == 2 * a[1]:\n        d = a[1] - a[0]\n        for i in range(3, n):\n            if a[i] - a[i - 1] != d:\n                a[i] = a[i - 1] + d\n                break\n    else:\n        b = [(a[3] - a[0]) / 3, (a[3] - a[1]) / 2, a[3] - a[2]]\n        if b[0] == b[1]:\n            a[2] = 2 * a[1] - a[0]\n        elif b[0] == b[2]:\n            a[1] = (a[0] + a[2]) // 2\n        else:\n            a[0] = 2 * a[1] - a[2]\n    print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d1 = l[1] - l[0]\n    d2 = l[2] - l[1]\n    if l[1] == (l[0] + l[2]) / 2:\n        for i in range(3, n):\n            if l[i] != l[0] + i * d1:\n                l[i] = l[i - 1] + d1\n                break\n    elif l[2] == (l[1] + l[3]) / 2:\n        l[0] = l[1] - d2\n    elif l[3] == l[0] + 3 * d1:\n        l[2] = l[0] + 2 * d1\n    else:\n        l[1] = (l[0] + l[2]) // 2\n    l = [str(i) for i in l]\n    print(' '.join(l))", "for _ in range(int(input())):\n    n = int(input())\n    string = input()\n    l = [int(x) for x in string.split()]\n    d = dict()\n    for i in range(1, len(l)):\n        x = l[i] - l[i - 1]\n        if x not in d:\n            d[x] = 1\n        else:\n            d[x] += 1\n    diff = list(d.keys())\n    diff = sorted(diff, key=lambda x: d[x])\n    if len(diff) == 1:\n        print(string)\n    elif len(diff) == 2:\n        an = l[len(l) - 2]\n        a = l[1]\n        difference = (an - a) // (len(l) - 3)\n        l[0] = a - difference\n        l[len(l) - 1] = an + difference\n        for i in l:\n            print(i, end=' ')\n        print()\n    elif len(diff) == 3:\n        a = l[0]\n        an = l[len(l) - 1]\n        difference = (an - a) // (len(l) - 1)\n        print(a, end=' ')\n        for i in range(1, len(l)):\n            print(a + i * difference, end=' ')\n        print()", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    hash = defaultdict(int)\n    l = list(map(int, input().split()))\n    for i in range(n - 1):\n        z = l[i + 1] - l[i]\n        hash[z] += 1\n    ans = []\n    for i in hash:\n        ans.append([hash[i], i])\n    ans.sort()\n    if len(ans) == 1:\n        print(*l)\n    elif len(l) == 3:\n        z1 = l[1] - l[0]\n        z2 = l[2] - l[1]\n        k1 = [l[1] - z2, l[1], l[2]]\n        print(*k1)\n    elif len(l) == 4:\n        z1 = l[1] - l[0]\n        z2 = l[2] - l[1]\n        z3 = l[3] - l[2]\n        k1 = [l[1] - z2, l[1], l[2], l[3]]\n        k2 = [l[0], l[0] + z3, l[2], l[3]]\n        k3 = [l[0], l[1], l[1] + z1, l[3]]\n        k4 = [l[0], l[1], l[2], l[2] + z1]\n        c = [k1, k2, k3, k4]\n        for i in range(4):\n            d = c[i]\n            f = d[1] - d[0]\n            flag = 0\n            for j in range(1, 3):\n                if d[j + 1] - d[j] != f:\n                    flag = 1\n                    break\n            if flag == 0:\n                print(*d)\n                break\n    else:\n        z = ans[-1][1]\n        for i in range(n - 1):\n            z1 = l[i + 1] - l[i]\n            if z1 != z:\n                if i != 0:\n                    if l[i] - l[i - 1] != z:\n                        l[i] = l[i + 1] - z\n                    else:\n                        l[i + 1] = l[i] + z\n                elif l[i + 2] - l[i + 1] != z:\n                    l[i + 1] = l[i] + z\n                else:\n                    l[i] = l[i + 1] - z\n                break\n        print(*l)", "test_cases = int(input())\nfor i in range(test_cases):\n    no_of_elements = int(input())\n    n = list(map(int, input().split()))\n    d1 = n[1] - n[0]\n    d2 = n[2] - n[1]\n    d3 = (n[3] - n[0]) / 3\n    d4 = (n[3] - n[1]) / 2\n    d5 = (n[2] - n[0]) / 2\n    if d2 == d4:\n        d = d2\n    elif d3 == d5:\n        d = d3\n    elif d1 == d3:\n        d = d1\n    elif d1 == d5:\n        d = d1\n    if d == d1:\n        for i in range(no_of_elements):\n            n[i] = int(n[0] + i * d)\n    else:\n        for i in range(no_of_elements):\n            n[i] = int(n[-1] - (no_of_elements - i - 1) * d)\n    for i in n:\n        print(i, end=' ')\n    print('\\n')", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d1 = arr[1] - arr[0]\n    d2 = arr[2] - arr[1]\n    d3 = arr[3] - arr[2]\n    if d1 == d2:\n        orig_d = d1\n    elif d2 == d3:\n        orig_d = d2\n    elif d1 == d3:\n        orig_d = d3\n    else:\n        d1_match_count = 0\n        d2_match_count = 0\n        d3_match_count = 0\n        start = arr[0]\n        for i in range(1, 4):\n            start += d1\n            if start == arr[i]:\n                d1_match_count += 1\n        start = arr[0]\n        for i in range(1, 4):\n            start += d2\n            if start == arr[i]:\n                d2_match_count += 1\n        start = arr[0]\n        for i in range(1, 4):\n            start += d3\n            if start == arr[i]:\n                d3_match_count += 1\n        if d3_match_count < d1_match_count > d2_match_count:\n            orig_d = d1\n        elif d1_match_count < d3_match_count > d2_match_count:\n            orig_d = d3\n        else:\n            orig_d = d2\n    if arr[1] - arr[0] != orig_d:\n        if arr[2] - arr[1] != orig_d:\n            arr[1] = arr[2] - orig_d\n        else:\n            arr[0] = arr[1] - orig_d\n    else:\n        for i in range(1, len(arr)):\n            arr[i] = arr[i - 1] + orig_d\n    print(' '.join(map(str, arr)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[1] == (a[0] + a[2]) / 2:\n        d = a[1] - a[0]\n        for i in range(3, n):\n            if a[i] != a[0] + i * d:\n                a[i] = a[i - 1] + d\n                break\n    elif a[2] == (a[1] + a[3]) / 2:\n        a[0] = a[1] - (a[2] - a[1])\n    elif a[3] == a[0] + 3 * (a[1] - a[0]):\n        a[2] = a[0] + 2 * (a[1] - a[0])\n    else:\n        a[1] = (a[0] + a[2]) // 2\n    a = [str(i) for i in a]\n    print(' '.join(a))", "def fun(arr, n):\n    a = arr[2] - arr[1]\n    b = arr[-2] - arr[-3]\n    a1 = arr[-1] - arr[-2]\n    a2 = arr[1] - arr[0]\n    d = (arr[-1] - arr[0]) / (n - 1)\n    if d != a2 and a == a1:\n        arr[0] = arr[1] - a\n        return arr\n    elif d != a1 and a2 == b:\n        arr[-1] = arr[-2] + a\n        return arr\n    for i in range(n - 1):\n        if arr[i + 1] != arr[0] + (i + 1) * d:\n            arr[i + 1] = int(arr[0] + (i + 1) * d)\n            break\n        else:\n            continue\n    return arr\n\ndef print_list(arr, n):\n    for i in range(n):\n        print(arr[i], end=' ')\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr1 = fun(arr, n)\n    print_list(arr1, n)\n    print()", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    lis2 = list(map(int, input().split()))\n    nl = []\n    lis = lis2[:]\n    for i in range(1, n):\n        nl.append(lis[i] - lis[i - 1])\n    nl.sort()\n    a = -567890122\n    if nl[0] != nl[-1]:\n        if nl[0] == nl[1]:\n            a = nl[0]\n        else:\n            a = nl[1]\n    ck = 0\n    for i in range(1, n - 1):\n        if lis[i] - lis[i - 1] != a and lis[i + 1] - lis[i] != a:\n            lis[i] = lis[i - 1] + a\n            ck = 1\n            break\n    if ck == 0:\n        if lis[1] - lis[0] != a:\n            lis[0] = lis[1] - a\n        else:\n            lis[-1] = lis[-2] + a\n    if a == -567890122:\n        for i in lis2:\n            print(i, '', end='')\n    else:\n        for i in lis:\n            print(i, '', end='')\n    print()", "test_cases = int(input())\nfor i in range(test_cases):\n    no_of_elements = int(input())\n    sequence = list(map(int, input().split()))\n    d1 = sequence[1] - sequence[0]\n    d2 = sequence[2] - sequence[1]\n    d3 = (sequence[3] - sequence[0]) / 3\n    d4 = (sequence[3] - sequence[1]) / 2\n    d5 = (sequence[2] - sequence[0]) / 2\n    if d2 == d4:\n        d = d2\n    elif d3 == d5:\n        d = d3\n    elif d1 == d3:\n        d = d1\n    elif d1 == d5:\n        d = d1\n    if d == d1:\n        for i in range(no_of_elements):\n            sequence[i] = int(sequence[0] + i * d)\n    else:\n        for i in range(no_of_elements):\n            sequence[i] = int(sequence[-1] - (no_of_elements - i - 1) * d)\n    for i in sequence:\n        print(i, end=' ')\n    print('\\n')", "test_cases = int(input())\nfor i in range(test_cases):\n    no_of_elements = int(input())\n    sequence = list(map(int, input().split()))\n    d1 = sequence[1] - sequence[0]\n    d2 = sequence[2] - sequence[1]\n    d3 = (sequence[3] - sequence[0]) / 3\n    d4 = (sequence[3] - sequence[1]) / 2\n    d5 = (sequence[2] - sequence[0]) / 2\n    if d2 == d4:\n        d = d2\n    elif d3 == d5:\n        d = d3\n    elif d1 == d3:\n        d = d1\n    elif d1 == d5:\n        d = d1\n    if d == d1:\n        for i in range(no_of_elements):\n            sequence[i] = int(sequence[0] + i * d)\n    else:\n        for i in range(no_of_elements):\n            sequence[i] = int(sequence[-1] - (no_of_elements - i - 1) * d)\n    for i in sequence:\n        print(i, end=' ')\n    print('\\n')", "test_cases = int(input())\nfor i in range(test_cases):\n    no_of_elements = int(input())\n    sequence = list(map(int, input().split()))\n    d1 = sequence[1] - sequence[0]\n    d2 = sequence[2] - sequence[1]\n    d3 = (sequence[3] - sequence[0]) / 3\n    d4 = (sequence[3] - sequence[1]) / 2\n    d5 = (sequence[2] - sequence[0]) / 2\n    if d2 == d4:\n        d = d2\n    elif d3 == d5:\n        d = d3\n    elif d1 == d3:\n        d = d1\n    elif d1 == d5:\n        d = d1\n    if d == d1:\n        for i in range(no_of_elements):\n            sequence[i] = int(sequence[0] + i * d)\n    else:\n        for i in range(no_of_elements):\n            sequence[i] = int(sequence[-1] - (no_of_elements - i - 1) * d)\n    for i in sequence:\n        print(i, end=' ')\n    print('\\n')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    diff1 = 0\n    diff2 = 0\n    for i in range(n - 2):\n        diff1 = a[i + 1] - a[i]\n        diff2 = a[i + 2] - a[i]\n        if diff2 != 2 * diff1:\n            if i + 3 <= n - 1:\n                diff3 = a[i + 3] - a[i + 1]\n                if diff3 == 2 * diff1:\n                    a[i + 2] = a[i + 1] + diff1\n                else:\n                    diff4 = a[i + 3] - a[i + 2]\n                    if diff2 == 2 * diff4:\n                        a[i + 1] = a[i] + diff4\n                    else:\n                        a[i] = a[i + 1] - diff4\n                break\n            else:\n                a[i + 2] = a[i + 1] + diff1\n                break\n    for j in range(n):\n        print(a[j], end=' ')\n    print()"]