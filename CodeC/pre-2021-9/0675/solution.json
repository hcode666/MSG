["for _ in range(int(input())):\n    covered = {}\n    n = int(input())\n    s = input()\n    difference = float('inf')\n    for i in range(n - 1, -1, -1):\n        if s[i] in covered:\n            difference = min(difference, covered[s[i]] - i)\n        covered[s[i]] = i\n    if difference == float('inf'):\n        print(0)\n        continue\n    print(n - difference)", "def snek(s, n):\n    d = {}\n    d1 = float('INF')\n    for i in range(n):\n        d2 = s[i]\n        if d2 in d:\n            d1 = min(d1, i - d[d2] + 1)\n        d[d2] = i\n    return max(0, n - d1 + 1)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    print(snek(s, n))", "def snek(s, n):\n    d = {}\n    d1 = float('INF')\n    for i in range(n):\n        d2 = s[i]\n        if d2 in d:\n            d1 = min(d1, i - d[d2] + 1)\n        d[d2] = i\n    return max(0, n - d1 + 1)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    print(snek(s, n))", "def snek(s, n):\n    d = {}\n    d1 = float('INF')\n    for i in range(n):\n        d2 = s[i]\n        if d2 in d:\n            d1 = min(d1, i - d[d2] + 1)\n        d[d2] = i\n    return max(0, n - d1 + 1)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    print(snek(s, n))", "def snek(s, n):\n    d = {}\n    d1 = float('INF')\n    for i in range(n):\n        d2 = s[i]\n        if d2 in d:\n            d1 = min(d1, i - d[d2] + 1)\n        d[d2] = i\n    return max(0, n - d1 + 1)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    print(snek(s, n))", "def solve(s, n):\n    d = {}\n    dis = float('INF')\n    for i in range(n):\n        ch = s[i]\n        if ch in d:\n            dis = min(dis, i - d[ch] + 1)\n        d[ch] = i\n    return max(0, n - dis + 1)\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(solve(s, n))", "try:\n    t = int(input())\nexcept:\n    quit()\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    reps = {}\n    m = n\n    for i in range(n):\n        if s[i] in reps:\n            x = i - reps[s[i]] - 1\n            reps[s[i]] = i\n            m = min(x, m)\n        else:\n            reps[s[i]] = i\n    if m == n:\n        print(0)\n    else:\n        print(n - 1 - m)", "import sys\n\ndef main():\n    t = int(input())\n    while t > 0:\n        n = int(input())\n        st = input()\n        min_ch = sys.maxsize\n        lastoccur = [-1] * 26\n        for i in range(n):\n            ele = ord(st[i]) - 97\n            if lastoccur[ele] == -1:\n                lastoccur[ele] = i\n            else:\n                val = i - lastoccur[ele] - 1\n                lastoccur[ele] = i\n                if min_ch > val:\n                    min_ch = val\n        if min_ch == sys.maxsize:\n            print(0)\n        else:\n            print(n - 1 - min_ch)\n        t = t - 1\nmain()", "n = int(input())\nfor x in range(n):\n    a = int(input())\n    str = input()\n    dic = {}\n    l = []\n    for i in range(a):\n        if str[i] in dic:\n            z = i - dic[str[i]]\n            dic[str[i]] = i\n            l.append(z)\n        else:\n            dic[str[i]] = i\n    if len(l) == 0:\n        print('0')\n    else:\n        print(a - min(l))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    s = input()\n    dic = {}\n    l = []\n    for i in range(n):\n        if s[i] in dic:\n            m = i - dic[s[i]]\n            dic[s[i]] = i\n            l.append(m)\n        else:\n            dic[s[i]] = i\n    if len(l) == 0:\n        print(0)\n    else:\n        print(n - min(l))", "import sys\n\ndef main():\n    t = int(input())\n    while t != 0:\n        n = int(input())\n        st = input()\n        min = sys.maxsize\n        lastoccur = [-1] * 26\n        for i in range(n):\n            ele = ord(st[i]) - 97\n            if lastoccur[ele] == -1:\n                lastoccur[ele] = i\n            else:\n                val = i - lastoccur[ele] - 1\n                lastoccur[ele] = i\n                if min > val:\n                    min = val\n        if min == sys.maxsize:\n            print(0)\n        else:\n            print(n - 1 - min)\n        t = t - 1\nmain()", "import sys\n\ndef main():\n    t = int(input())\n    while t != 0:\n        n = int(input())\n        st = list(input())\n        min_val = sys.maxsize\n        last = {}\n        for i in range(n):\n            if st[i] in last:\n                number_ele = i - last[st[i]] - 1\n                min_val = min(number_ele, min_val)\n                last[st[i]] = i\n            else:\n                last[st[i]] = i\n        if min_val == sys.maxsize:\n            print(0)\n        else:\n            print(n - min_val - 1)\n        t -= 1\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    dic = {}\n    l = []\n    for i in range(n):\n        if s[i] in dic:\n            m = i - dic[s[i]]\n            dic[s[i]] = i\n            l.append(m)\n        else:\n            dic[s[i]] = i\n    if len(l) == 0:\n        print(0)\n    else:\n        print(n - min(l))", "test_case = int(input())\nfor test in range(test_case):\n    n = int(input())\n    A = input()\n    idx = {}\n    ans = {}\n    least = n\n    for i in range(n):\n        c = idx.get(A[i])\n        if c is None:\n            idx[A[i]] = i\n            ans[A[i]] = n\n        else:\n            a = ans.get(A[i])\n            b = i - c\n            idx[A[i]] = i\n            if b < a:\n                if b < least:\n                    least = b\n                ans[A[i]] = b\n    print(n - least)", "import sys\n\ndef selection(S):\n    min = sys.maxsize\n    lastoccur = [-1] * 26\n    for i in range(n):\n        ele = ord(S[i]) - 97\n        if lastoccur[ele] == -1:\n            lastoccur[ele] = i\n        else:\n            val = i - lastoccur[ele] - 1\n            lastoccur[ele] = i\n            if val < min:\n                min = val\n    if min == sys.maxsize:\n        return 0\n    else:\n        return n - 1 - min\nt = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    S = input()\n    result = selection(S)\n    l.append(result)\nfor i in l:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    dic = {}\n    l = []\n    for i in range(n):\n        if s[i] in dic:\n            m = i - dic[s[i]]\n            dic[s[i]] = i\n            l.append(m)\n        else:\n            dic[s[i]] = i\n    if len(l) == 0:\n        print(0)\n    else:\n        print(n - min(l))", "T = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    S = input()\n    D = {}\n    for i in range(N):\n        if S[i] in D:\n            D[S[i]].append(i)\n        else:\n            D[S[i]] = [i]\n    dist = float('inf')\n    for (i, j) in D.items():\n        m = float('inf')\n        for k in range(len(j) - 1):\n            if j[k + 1] - j[k] < m:\n                m = j[k + 1] - j[k]\n        if m < dist:\n            dist = m\n    if dist == float('inf'):\n        ans.append(0)\n    else:\n        ans.append(N - dist)\nfor i in ans:\n    print(i)", "import sys\n\ndef main():\n    t = int(input())\n    while t != 0:\n        n = int(input())\n        st = input()\n        min = sys.maxsize\n        lastOccur = [-1] * 26\n        for i in range(n):\n            ele = ord(st[i]) - 97\n            if lastOccur[ele] == -1:\n                lastOccur[ele] = i\n            else:\n                val = i - lastOccur[ele] - 1\n                lastOccur[ele] = i\n                if min > val:\n                    min = val\n        if min == sys.maxsize:\n            print(0)\n        else:\n            print(n - 1 - min)\n        t = t - 1\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    d = {}\n    l = []\n    for i in range(n):\n        if s[i] in d:\n            l.append(n - i + d[s[i]])\n        d[s[i]] = i\n    if len(l) == 0:\n        print(0)\n    else:\n        print(max(l))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    d = {}\n    l = []\n    for i in range(n):\n        if s[i] in d:\n            l.append(n - i + d[s[i]])\n        d[s[i]] = i\n    if len(l) == 0:\n        print(0)\n    else:\n        print(max(l))", "t = int(input())\nfor you in range(t):\n    n = int(input())\n    s = input()\n    l = []\n    hashi = dict()\n    for i in range(n):\n        if s[i] in hashi:\n            l.append(n - (i - hashi[s[i]]))\n        hashi[s[i]] = i\n    if l == []:\n        print(0)\n    else:\n        print(max(l))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    d = {}\n    max = 0\n    for i in range(n):\n        c = n + d.get(s[i], -n - 1) - i\n        if c == n - 1:\n            max = c\n            break\n        d[s[i]] = i\n        if c > max:\n            max = c\n    print(max)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    d = {}\n    max = 0\n    for i in range(n):\n        c = n + d.get(s[i], -n - 1) - i\n        if c == n - 1:\n            max = c\n            break\n        d[s[i]] = i\n        if c > max:\n            max = c\n    print(max)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    s = input()\n    arr = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\n    brr = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\n    y = 0\n    while y < n:\n        a = s[y]\n        b = ord(a)\n        b = b - 97\n        if brr[b] == -1:\n            brr[b] = y + 1\n        else:\n            c = y - brr[b]\n            if c == 0:\n                break\n            brr[b] = y + 1\n            if arr[b] == -1:\n                arr[b] = c\n            elif c < arr[b]:\n                arr[b] = c\n        y = y + 1\n    sum = n\n    for yy in range(26):\n        if arr[yy] != -1 and arr[yy] < sum:\n            sum = arr[yy]\n    if y != n:\n        sum = n - 1\n        print(sum)\n    elif sum == n:\n        sum = 0\n        print(sum)\n    else:\n        n = n - sum\n        sum = n - 1\n        print(sum)", "import math\nimport sys\nfrom collections import Counter\nT = int(input())\nfor _ in range(0, T):\n    N = int(input())\n    s = input()\n    m = dict()\n    mx = 0\n    for i in range(0, N):\n        if s[i] in m:\n            mx = max(mx, N - (i - m[s[i]]))\n            m[s[i]] = i\n        else:\n            m[s[i]] = i\n    print(mx)", "for _ in range(int(input())):\n    N = int(input())\n    s = input()\n    d = {}\n    max_k = 0\n    for i in range(N):\n        if s[i] in d:\n            max_k = max(max_k, N + d[s[i]] - i)\n        d[s[i]] = i\n    print(max_k)", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    s = input()\n    d = {}\n    mx = 0\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = i\n        else:\n            mx = max(mx, n - (i - d[s[i]]))\n            d[s[i]] = i\n    print(mx)", "tn = int(input())\nfor _ in range(tn):\n    minv = 999999\n    l = [-1] * 26\n    n = int(input())\n    s = input()\n    for j in range(len(s)):\n        if l[ord(s[j]) - ord('a')] >= 0:\n            temp = j - l[ord(s[j]) - ord('a')]\n            if minv > temp:\n                minv = temp\n            l[ord(s[j]) - ord('a')] = j\n        else:\n            l[ord(s[j]) - ord('a')] = j\n    if minv == 999999:\n        print(0)\n    else:\n        print(len(s) - minv)", "from sys import stdin\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        s = input()\n        mini = 100001\n        d = dict()\n        for i in range(n):\n            if s[i] not in d:\n                d[s[i]] = i\n            else:\n                mini = min(mini, i - d[s[i]] - 1)\n                d[s[i]] = i\n        if mini == 100001:\n            print(0)\n        else:\n            print(n - mini - 1)\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    m = 10 ** 9 + 7\n    d = dict()\n    mi = [m]\n    for i in range(n):\n        if s[i] not in d:\n            d[s[i]] = list()\n        if d[s[i]]:\n            mi.append(i - d[s[i]][-1])\n        d[s[i]].append(i)\n    m = min(mi)\n    if m == 10 ** 9 + 7:\n        print('0')\n    else:\n        print(n - m)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    d = dict()\n    for i in range(n):\n        if s[i] not in d:\n            d[s[i]] = list()\n        d[s[i]].append(i)\n    m = 10 ** 9 + 7\n    for x in d:\n        if len(d[x]) != 1:\n            l = d[x]\n            for i in range(1, len(l)):\n                m = min(m, l[i] - l[i - 1])\n    if m == 10 ** 9 + 7:\n        print('0')\n    else:\n        print(n - m)", "for _ in range(int(input())):\n    (n, s, x, f) = (int(input()), input(), 1, 0)\n    for i in range(n):\n        for j in range(n - x):\n            if s[j] == s[j + x]:\n                f = 1\n                break\n        if f == 1:\n            break\n        else:\n            x += 1\n    print(n - x) if bool(f) and x <= n else print(0)", "T = int(input())\nwhile T:\n    n = int(input())\n    T -= 1\n    s = input()\n    x = 1\n    f = 0\n    for i in range(n):\n        for j in range(n - x):\n            if s[j] == s[j + x]:\n                f = 1\n                break\n        if f == 1:\n            break\n        else:\n            x += 1\n    if bool(f) and x <= n:\n        print(n - x)\n    else:\n        print(0)", "for tc in range(int(input())):\n    last = [-1] * 26\n    len = 256\n    n = int(input())\n    str = input()\n    for i in range(n):\n        if last[ord(str[i]) - 97] == -1:\n            last[ord(str[i]) - 97] = i\n        else:\n            if i - last[ord(str[i]) - 97] - 1 < len:\n                len = i - last[ord(str[i]) - 97] - 1\n            last[ord(str[i]) - 97] = i\n    if len == 256:\n        print(0)\n    else:\n        print(n - len - 1)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    ans = 0\n    array = [-1] * 26\n    for i in range(n):\n        if array[ord(s[i]) - 97] == -1:\n            array[ord(s[i]) - 97] = i\n        else:\n            start = array[ord(s[i]) - 97]\n            last = i\n            ans = max(ans, n + start - last)\n            array[ord(s[i]) - 97] = i\n    print(ans)\n    t -= 1", "ascii_a = ord('a')\nt = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    s = list(input())\n    mini = n\n    lastocc = [-1] * 26\n    for i in range(0, n):\n        if lastocc[ord(s[i]) - ascii_a] != -1:\n            mini = min(i - lastocc[ord(s[i]) - ascii_a], mini)\n        lastocc[ord(s[i]) - ascii_a] = i\n    print(n - mini)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    d = dict()\n    ans = 0\n    for i in range(n):\n        if s[i] in d:\n            ans = max(ans, n - (i - d[s[i]]))\n        d[s[i]] = i\n    print(ans)", "from collections import *\nfrom sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    st = stdin.readline()\n    lis = [999999999] * 26\n    flag = 0\n    dic1 = defaultdict(lambda : -1)\n    dic2 = defaultdict(lambda : -1)\n    alpha = {chr(i): i - 97 for i in range(97, 123)}\n    for i in range(n):\n        val = st[i]\n        ind = alpha[st[i]]\n        if dic1[ind] == -1:\n            dic1[ind] = i\n        elif dic2[ind] == -1:\n            dif = i - dic1[ind]\n            if dif == 1:\n                print(n - 1)\n                flag = 1\n                break\n            dic1[ind] = i\n            if lis[ind] > dif:\n                lis[ind] = dif\n    if not flag:\n        fin = n - min(lis)\n        if fin < 0:\n            print(0)\n        else:\n            print(fin)", "from collections import defaultdict\narr = []\ndd = defaultdict(list)\n\ndef solve():\n    di = {}\n    mini = 100001\n    N = int(input())\n    st = input()\n    for i in range(len(st)):\n        if st[i] not in di:\n            di[st[i]] = i\n        else:\n            mini = min(mini, i - di[st[i]] - 1)\n            di[st[i]] = i\n    if mini == 100001:\n        print(0)\n    else:\n        print(N - mini - 1)\nT = int(input())\nfor i in range(T):\n    solve()", "from collections import defaultdict\nimport sys\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    D = defaultdict(list)\n    for j in range(n):\n        if s[j] in D:\n            D[s[j]][0] += 1\n            if j - D[s[j]][1] < D[s[j]][2]:\n                D[s[j]][2] = j - D[s[j]][1]\n            D[s[j]][1] = j\n        else:\n            D[s[j]].append(1)\n            D[s[j]].append(j)\n            D[s[j]].append(sys.maxsize)\n    mini = 0\n    for elem in D:\n        if D[elem][0] > 1:\n            ans = n - D[elem][2]\n            if ans > mini:\n                mini = ans\n    print(mini)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 1000000\n    d = {}\n    for i in range(n):\n        if d.get(s[i]) == None:\n            d[s[i]] = [i]\n        else:\n            d[s[i]].append(i)\n    ans = 1000000\n    for indices in d.values():\n        temp = 1000000\n        for j in range(len(indices) - 1):\n            temp = min(temp, indices[j + 1] - indices[j])\n        ans = min(ans, temp)\n    if ans == 1000000:\n        print(0)\n    else:\n        print(n - ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 1000000\n    d = {}\n    for i in range(n):\n        if d.get(s[i]) == None:\n            d[s[i]] = [i]\n        else:\n            d[s[i]].append(i)\n    ans = 1000000\n    for indices in d.values():\n        temp = 1000000\n        for j in range(len(indices) - 1):\n            temp = min(temp, indices[j + 1] - indices[j])\n        ans = min(ans, temp)\n    if ans == 1000000:\n        print(0)\n    else:\n        print(n - ans)", "for _ in range(int(input())):\n    a = int(input())\n    j = input()\n    answer = 1000000\n    q = {}\n    for i in range(a):\n        if q.get(j[i]) == None:\n            q[j[i]] = [i]\n        else:\n            q[j[i]].append(i)\n    answer = 1000000\n    for indices in q.values():\n        temp = 1000000\n        for j in range(len(indices) - 1):\n            temp = min(temp, indices[j + 1] - indices[j])\n        answer = min(answer, temp)\n    if answer == 1000000:\n        print(0)\n    else:\n        print(a - answer)", "for t in range(int(input())):\n    minv = 1000\n    n = int(input())\n    s = str(input())\n    arr = [-1] * 26\n    for (i, x) in enumerate(s):\n        if arr[ord(s[i]) - ord('a')] >= 0:\n            temp = i - arr[ord(s[i]) - ord('a')]\n            minv = min(temp, minv)\n            arr[ord(s[i]) - ord('a')] = i\n        else:\n            arr[ord(s[i]) - ord('a')] = i\n    if minv == 1000:\n        print(0)\n    else:\n        print(len(s) - minv)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    d = defaultdict(lambda : -1)\n    s = input()\n    for (i, j) in enumerate(s):\n        if d[ord(j)] > -1:\n            ans = max(ans, n - (i - d[ord(j)]))\n        d[ord(j)] = i\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    f = 0\n    e = []\n    dic = {}\n    idic = {}\n    i = 0\n    while i < len(s):\n        x = s[i]\n        if x in dic:\n            r = dic[x]\n            r = r + 1\n            dic[x] = r\n            pi = idic[x]\n            idic[x] = i\n            dif = i - pi - 1\n            e.append(dif)\n            if f == 0:\n                f = 1\n        else:\n            dic[x] = 1\n            idic[x] = i\n        i = i + 1\n    if f == 0:\n        print(0)\n    else:\n        e.sort()\n        t = e[0]\n        o = len(s) - t - 1\n        print(o)", "import sys\nfor _ in range(int(input())):\n    input()\n    string = input()\n    minDiff = sys.maxsize\n    freq = dict()\n    ans = sys.maxsize\n    for i in range(len(string)):\n        if string[i] in freq.keys():\n            freq[string[i]].append(i)\n        else:\n            freq[string[i]] = [i]\n    for i in freq.keys():\n        minDiff = sys.maxsize\n        for l in range(len(freq[i]) - 1):\n            minDiff = min(minDiff, freq[i][l + 1] - freq[i][l])\n        ans = min(ans, minDiff)\n    if ans == sys.maxsize:\n        print(0)\n    else:\n        print(len(string) - ans)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        s = input()\n        d = {}\n        ans = 1000000\n        for i in range(n):\n            if s[i] in d:\n                d[s[i]].append(i)\n            else:\n                d[s[i]] = [i]\n        for i in d.values():\n            mi = 1000000\n            for j in range(len(i) - 1):\n                mi = min(mi, i[j + 1] - i[j])\n            ans = min(mi, ans)\n        if ans == 1000000:\n            print(0)\n        else:\n            print(n - ans)\nexcept:\n    pass", "from collections import defaultdict\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = input()\n        last_pos = defaultdict(lambda : -1)\n        min_diff = n\n        for (i, ch) in enumerate(s):\n            if last_pos[ch] != -1:\n                min_diff = min(min_diff, i - last_pos[ch])\n            last_pos[ch] = i\n        print(n - min_diff)\nmain()", "import sys\nturn = int(input())\nmin = sys.maxsize\ntrack = 0\nfor _ in range(turn):\n    min = sys.maxsize\n    l = {'a': -1, 'b': -1, 'n': -1, 'm': -1, 'l': -1, 'k': -1, 'j': -1, 'i': -1, 'h': -1, 'g': -1, 'f': -1, 'e': -1, 'd': -1, 'c': -1, 'o': -1, 'p': -1, 'q': -1, 'z': -1, 'y': -1, 'x': -1, 'w': -1, 'v': -1, 'u': -1, 't': -1, 's': -1, 'r': -1}\n    track = 0\n    k = int(input())\n    s = str(input())\n    c = 0\n    for i in s:\n        if l[i] != -1:\n            k = c - l[i]\n        l[i] = c\n        if min > k:\n            min = k\n            track = c\n        c += 1\n    print(len(s) - min)", "for t in range(int(input())):\n    n = int(input())\n    s = list(input().strip())\n    a = {}\n    ans = 0\n    for i in range(n):\n        if s[i] not in a.keys():\n            a[s[i]] = i + 1\n        else:\n            if ans < a[s[i]] + (n - i - 1):\n                ans = a[s[i]] + (n - i - 1)\n            a[s[i]] = i + 1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    s = list(input().strip())\n    a = {}\n    ans = 0\n    b = 0\n    for i in range(n):\n        if s[i] not in a.keys():\n            a[s[i]] = i + 1\n        else:\n            if ans < a[s[i]] + (n - i - 1):\n                ans = a[s[i]] + (n - i - 1)\n            a[s[i]] = i + 1\n            b = a[s[i]]\n    if ans == 0:\n        print(0)\n    else:\n        print(ans + 0)", "t = int(input())\nwhile t:\n    t -= 1\n    distances = [9999999] * 26\n    dic = dict()\n    n = int(input())\n    string = input()\n    i = 0\n    for ch in string:\n        if ch in dic:\n            currentDistance = i - dic[ch]\n            if currentDistance < distances[ord(ch) - 97]:\n                distances[ord(ch) - 97] = currentDistance\n            dic[ch] = i\n        else:\n            dic[ch] = i\n        i += 1\n    minimumDistance = min(distances)\n    if minimumDistance == 9999999:\n        print('0')\n    else:\n        print(n - minimumDistance)", "def adjacent_ch(s, n):\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            return True\n    return False\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    freq = [0] * 26\n    for i in s:\n        freq[ord(i) - ord('a')] += 1\n    flag = 0\n    for i in freq:\n        if i >= 2:\n            flag = 1\n            break\n    if flag == 0:\n        print(0)\n    elif adjacent_ch(s, n):\n        print(n - 1)\n    else:\n        d = dict()\n        for i in range(n):\n            if s[i] not in d:\n                d[s[i]] = [i]\n            else:\n                d[s[i]].append(i)\n        ans = n\n        for v in d.values():\n            if len(v) > 1:\n                for i in range(len(v) - 1):\n                    ans = min(ans, v[i + 1] - v[i])\n        ans -= 1\n        n = n - ans\n        print(n - 1)", "def adjacent_ch(s, n):\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            return True\n    return False\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    freq = [0] * 26\n    for i in s:\n        freq[ord(i) - ord('a')] += 1\n    flag = 0\n    for i in freq:\n        if i >= 2:\n            flag = 1\n            break\n    if flag == 0:\n        print(0)\n    elif adjacent_ch(s, n):\n        print(n - 1)\n    else:\n        d = dict()\n        for i in range(n):\n            if s[i] not in d:\n                d[s[i]] = [i]\n            else:\n                d[s[i]].append(i)\n        ans = n\n        for v in d.values():\n            if len(v) > 1:\n                for i in range(len(v) - 1):\n                    ans = min(ans, v[i + 1] - v[i])\n        ans -= 1\n        n = n - ans\n        print(n - 1)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = str(input())[0:n]\n    uni = set(s)\n    letr = {k: -1 for k in uni}\n    min = n\n    flag = 0\n    for i in range(0, n):\n        if letr[s[i]] == -1:\n            letr[s[i]] = i\n        else:\n            temp = i - letr[s[i]]\n            if min > temp:\n                min = temp\n            letr[s[i]] = i\n    print(n - min)\n    t -= 1", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    s = input()\n    dic = {}\n    a = n\n    for i in range(n):\n        if s[i] in dic:\n            tt = i - dic[s[i]]\n            dic[s[i]] = i\n            if tt < a:\n                a = tt\n        else:\n            dic[s[i]] = i\n    print(n - a)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    s_len = len(s)\n    rep_dict = {}\n    rep_with_least_dist = s_len + 1\n    for (i, ch) in enumerate(s):\n        if rep_dict.get(ch, -1) != -1:\n            rep_with_least_dist = min(rep_with_least_dist, i - rep_dict[ch])\n        rep_dict[ch] = i\n    if rep_with_least_dist != s_len + 1:\n        print(s_len - rep_with_least_dist)\n    else:\n        print('0')\n    t -= 1", "from collections import defaultdict\narr = []\ndd = defaultdict(list)\n\ndef solve():\n    di = {}\n    mini = 100001\n    N = int(input())\n    st = input()\n    for i in range(len(st)):\n        if st[i] not in di:\n            di[st[i]] = i\n        else:\n            mini = min(mini, i - di[st[i]] - 1)\n            di[st[i]] = i\n    if mini == 100001:\n        print(0)\n    else:\n        print(N - mini - 1)\nT = int(input())\nfor i in range(T):\n    solve()", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    d = {}\n    k = n\n    for i in range(n):\n        if s[i] not in d:\n            d[s[i]] = i\n        else:\n            m = i - d[s[i]]\n            if m < k:\n                k = m\n            d[s[i]] = i\n    print(n - k)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    d = {}\n    k = n\n    for i in range(n):\n        if s[i] not in d:\n            d[s[i]] = i\n        else:\n            m = i - d[s[i]]\n            if m < k:\n                k = m\n            d[s[i]] = i\n    print(n - k)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    d = {}\n    k = n\n    for i in range(n):\n        if s[i] not in d:\n            d[s[i]] = i\n        else:\n            m = i - d[s[i]]\n            if m < k:\n                k = m\n            d[s[i]] = i\n    print(n - k)", "t = int(input())\nfor T in range(t):\n    n = int(input())\n    s = input()\n    (val, k) = (0, n)\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            val = i - d[s[i]]\n            if val < k:\n                k = val\n        d[s[i]] = i\n    print(n - k)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    d = {}\n    ans = 0\n    for i in range(n):\n        if s[i] not in d:\n            d[s[i]] = [i]\n        else:\n            d[s[i]].append(i)\n    min = 9999999999\n    for i in d:\n        if len(d[i]) > 1:\n            for j in range(1, len(d[i])):\n                if d[i][j] - d[i][j - 1] < min:\n                    min = d[i][j] - d[i][j - 1]\n    if min == 9999999999:\n        ans = 0\n    else:\n        ans = n - min\n    print(ans)", "import sys\nt = int(input())\n\ndef findLongestSeq(n, inp):\n    minDiff = sys.maxsize\n    charPos = [-1] * 26\n    for i in range(n):\n        c = inp[i]\n        numericChar = ord(c) - 98\n        if charPos[numericChar] == -1:\n            charPos[numericChar] = i\n        else:\n            minDiff = min(minDiff, i - charPos[numericChar])\n            charPos[numericChar] = i\n    return 0 if minDiff is sys.maxsize else n - minDiff\nfor _ in range(t):\n    n = int(input())\n    inp = input()\n    print(findLongestSeq(n, inp))", "T = int(input())\nt = 0\nwhile t < T:\n    t += 1\n    N = int(input())\n    S = input()\n    D = [-1 for i in range(26)]\n    ans = N + 1\n    for (j, x) in enumerate(S):\n        i = ord(x) - ord('a')\n        if D[i] != -1:\n            ans = min(ans, j - D[i])\n        D[i] = j\n    ans = N - ans if ans != N + 1 else 0\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = input()\n    res = 0\n    flag = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if arr[i] == arr[j]:\n                res = max(res, n - (j - i))\n                if j == i + 1:\n                    flag = 1\n                break\n        if flag:\n            break\n    print(res)", "def main(debug=False):\n    for _ in range(int(input())):\n        n = int(input())\n        s = input().strip()\n        d = {}\n        ans = 0\n        for i in range(n):\n            if s[i] in d:\n                ans = max(ans, n - (i - d[s[i]]))\n            d[s[i]] = i\n        print(ans)\nwhile True:\n    try:\n        main(debug=False)\n    except (ValueError, EOFError) as e:\n        break", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input().strip())\n    d = {}\n    ans = 0\n    for i in range(len(s)):\n        if s[i] in d:\n            ans = max(ans, n - (i - d[s[i]]))\n        else:\n            d[s[i]] = i\n        d[s[i]] = i\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    d = {}\n    k = n\n    for j in range(len(s)):\n        if s[j] not in d:\n            d[s[j]] = j\n        else:\n            v = j - d[s[j]]\n            if v < k:\n                k = v\n            d[s[j]] = j\n    print(n - k)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    d = {}\n    k = n\n    for j in range(len(s)):\n        if s[j] not in d:\n            d[s[j]] = j\n        else:\n            v = j - d[s[j]]\n            if v < k:\n                k = v\n            d[s[j]] = j\n    print(n - k)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    st = input()\n    min = n\n    for i in range(n):\n        idx = st.find(st[i], i + 1, n)\n        if idx != -1:\n            if idx - i < min:\n                min = idx - i\n    if min == n:\n        print(0)\n    else:\n        print(n - min)\n    t = t - 1", "from string import ascii_lowercase\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    ch = {}\n    for c in ascii_lowercase:\n        ch[c] = []\n    for (i, c) in enumerate(s):\n        ch[c].append(i)\n    val = 0\n    for (k, v) in ch.items():\n        for (i, indx) in enumerate(v):\n            if i != len(v) - 1:\n                next = v[i + 1]\n                val = max(val, n - (next - indx))\n    print(val)", "a = int(input())\nfor i in range(0, a):\n    b = int(input())\n    c = input()\n    d = [100] * 26\n    mi = 1000\n    val = 100\n    for j in range(0, b):\n        if d[ord(c[j]) - 97] == 100:\n            d[ord(c[j]) - 97] = j\n        else:\n            val = j - d[ord(c[j]) - 97] - 1\n            d[ord(c[j]) - 97] = j\n            if mi > val:\n                mi = val\n    if mi == 1000:\n        print(0)\n    else:\n        print(b - 1 - mi)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    m = n + 1\n    if len(set(s)) == n:\n        print(0)\n    else:\n        d = dict()\n        for j in range(n):\n            ch = s[j]\n            if ch in d.keys():\n                m = min(m, j - d[ch])\n            d[ch] = j\n        print(n - m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    l_a = [-1] * 26\n    mid = float('inf')\n    for i in range(len(s)):\n        if l_a[ord(s[i]) - ord('a')] != -1:\n            mid = min(i - l_a[ord(s[i]) - ord('a')] - 1, mid)\n        l_a[ord(s[i]) - ord('a')] = i\n    if mid == float('inf'):\n        print('0\\n')\n    else:\n        print(n - 1 - mid, '\\n')", "import sys\nprint = sys.stdout.write\nfor _ in range(int(input())):\n    n = int(input())\n    st = input()\n    d = {}\n    min_diff = n\n    for i in range(n):\n        char = st[i]\n        if char not in d:\n            d[char] = i\n        else:\n            a = d[char]\n            b = i\n            diff = b - a\n            d[char] = i\n            if diff < min_diff:\n                min_diff = diff\n    print(f'{n - min_diff}\\n')", "for _ in range(int(input())):\n    n = int(input())\n    dic = {}\n    string = input()\n    k = 9999999\n    for i in range(n):\n        if string[i] not in dic:\n            dic[string[i]] = i\n        else:\n            if k > abs(dic[string[i]] - i) - 1:\n                k = abs(dic[string[i]] - i) - 1\n            dic[string[i]] = i\n    if k == 9999999:\n        print(0)\n    else:\n        print(n - 1 - k)", "import collections\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = input()\n        last_pos = collections.defaultdict(lambda : -1)\n        min_diff = n\n        for (i, ch) in enumerate(s):\n            if last_pos[ch] != -1:\n                min_diff = min(min_diff, i - last_pos[ch])\n            last_pos[ch] = i\n        print(n - min_diff)\nmain()", "import collections\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = input()\n        last_pos = collections.defaultdict(lambda : -1)\n        min_diff = n\n        for (i, ch) in enumerate(s):\n            if last_pos[ch] != -1:\n                min_diff = min(i - last_pos[ch], min_diff)\n            last_pos[ch] = i\n        print(n - min_diff)\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    st = input()\n    mi = n\n    lst_count = [-1] * 26\n    for i in range(n):\n        if lst_count[ord(st[i]) - 97] == -1:\n            lst_count[ord(st[i]) - 97] = i\n        else:\n            mi = min(mi, i - lst_count[ord(st[i]) - 97])\n            lst_count[ord(st[i]) - 97] = i\n    print(n - mi)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = 0\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            a = max(a, n - (i - d[s[i]]))\n            d[s[i]] = i\n        else:\n            d[s[i]] = i\n    print(a)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    l = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]\n    dic = {'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\n    leng = 0\n    maxi = 0\n    temp = 0\n    for i in range(0, n):\n        sw = int(dic[s[i]])\n        l[sw].append(i)\n    for i in range(0, 26):\n        if len(l[i]) > 1:\n            for j in range(0, len(l[i]) - 1):\n                temp = n - l[i][j + 1] + l[i][j]\n                maxi = max(maxi, temp)\n    print(maxi)", "def firstrepeated(str):\n    min = 10000000\n    c2 = 0\n    for i in range(0, len(str)):\n        c2 = str.find(str[i], i + 1)\n        if min >= c2 - i and c2 - i > 0:\n            min = c2 - i\n    return min\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    str = input()\n    set1 = set()\n    for i in range(0, len(str)):\n        set1.add(str[i])\n    if len(set1) == n:\n        print('0')\n        t = t - 1\n        continue\n    else:\n        k = firstrepeated(str)\n        print(len(str) - k)\n    t = t - 1", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    S = input()\n    D = {}\n    M = N\n    for i in range(N):\n        if S[i] in D:\n            d = i - D[S[i]][0]\n            if d < D[S[i]][1] or not D[S[i]][1]:\n                D[S[i]][1] = d\n            D[S[i]][0] = i\n        else:\n            D[S[i]] = [i, 0]\n    for i in range(N):\n        if D[S[i]][1] < M and D[S[i]][1]:\n            M = D[S[i]][1]\n    print(N - M)", "try:\n    from collections import defaultdict\n\n    def sol(str):\n        hm = defaultdict(int)\n        ans = 0\n        for i in range(len(str)):\n            if str[i] in hm:\n                ans = max(ans, len(str) - (i - hm[str[i]]))\n            hm[str[i]] = i\n        print(ans)\n    t = int(input())\n    while t > 0:\n        n = int(input())\n        str = input()\n        sol(str)\n        t = t - 1\nexcept:\n    pass", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = list(input())\n    l = {}\n    ans = 0\n    for i in range(n):\n        if s[i] in l.keys():\n            ans = max(ans, n - (i - l[s[i]]))\n        l[s[i]] = i\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    s = input()\n    mi = [n + 3] * 26\n    cd = [-1] * 26\n    j = 0\n    for i in s:\n        if cd[ord(i) - 97] == -1:\n            cd[ord(i) - 97] = j\n        else:\n            dis = j - cd[ord(i) - 97]\n            if mi[ord(i) - 97] > dis:\n                mi[ord(i) - 97] = dis\n            cd[ord(i) - 97] = j\n        j += 1\n    bn = n\n    for x in mi:\n        if x < bn:\n            bn = x\n    print(n - bn)\n    t -= 1", "t = int(input())\nwhile t:\n    length = int(input())\n    s = input()\n    pos = [-1] * 26\n    l = [999999] * 26\n    for i in range(length):\n        x = ord(s[i]) - 97\n        if pos[x] == -1:\n            pos[x] = i\n        else:\n            if i - pos[x] < l[x]:\n                l[x] = i - pos[x]\n            pos[x] = i\n    if min(l) == 999999:\n        print(0)\n    else:\n        print(length - min(l))\n    t = t - 1", "from collections import defaultdict\nimport sys\nfor _ in range(int(input())):\n    d = defaultdict(lambda : 0)\n    n = int(input())\n    mini = sys.maxsize\n    f = 0\n    s = input()\n    for i in range(n):\n        if d[s[i]] == 0:\n            d[s[i]] = i + 1\n        else:\n            f = 1\n            dis = abs(i + 1 - d[s[i]])\n            if dis < mini:\n                mini = dis\n            d[s[i]] = i + 1\n    if f == 0:\n        print(0)\n    else:\n        print(n - mini)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    a = {}\n    count = n\n    for i in range(n):\n        if s[i] in a:\n            d = i - a[s[i]][0]\n            if d < a[s[i]][1] or not a[s[i]][1]:\n                a[s[i]][1] = d\n            a[s[i]][0] = i\n        else:\n            a[s[i]] = [i, 0]\n    for i in a:\n        if a[i][1] < count and a[i][1]:\n            count = a[i][1]\n    print(n - count)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    mp = {}\n    k = n\n    val = 0\n    for i in range(n):\n        if s[i] in mp:\n            val = i - mp[s[i]]\n            if val < k:\n                k = val\n            mp[s[i]] = i\n        else:\n            mp[s[i]] = i\n    print(n - k)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    d = {}\n    m = n\n    dif = 0\n    for i in range(n):\n        if s[i] in d:\n            dif = i - d[s[i]]\n            if dif < m:\n                m = dif\n            d[s[i]] = i\n        else:\n            d[s[i]] = i\n    print(n - m)", "t = int(input())\nwhile t > 0:\n    minv = 999999\n    l = [-1] * 26\n    n = int(input())\n    s = input()\n    for j in range(len(s)):\n        if l[ord(s[j]) - ord('a')] >= 0:\n            temp = j - l[ord(s[j]) - ord('a')]\n            if minv > temp:\n                minv = temp\n            l[ord(s[j]) - ord('a')] = j\n        else:\n            l[ord(s[j]) - ord('a')] = j\n    if minv == 999999:\n        print('0')\n    else:\n        print(len(s) - minv)\n    t -= 1", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input()\n    res = 0\n    prev = {}\n    for i in range(n):\n        if s[i] in prev:\n            res = max(res, n - i + prev[s[i]])\n        prev[s[i]] = i\n    print(res)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input()\n    minv = 999999\n    prev = [-1] * 26\n    for j in range(n):\n        if prev[ord(s[j]) - ord('a')] >= 0:\n            temp = j - prev[ord(s[j]) - ord('a')]\n            if temp < minv:\n                minv = temp\n            prev[ord(s[j]) - ord('a')] = j\n        else:\n            prev[ord(s[j]) - ord('a')] = j\n    if minv == 999999:\n        print(0)\n    else:\n        print(n - minv)", "INT32_MAX = 2147483647\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    string = input()\n    least = {}\n    for i in range(ord('a'), ord('z') + 1):\n        least[chr(i)] = [-1, INT32_MAX]\n    for i in range(n):\n        char = string[i]\n        if least[char][0] != -1:\n            difference = i - least[char][0]\n            if difference < least[char][1]:\n                least[char][1] = difference\n        least[char][0] = i\n    mn = INT32_MAX\n    for i in least:\n        if least[i][1] < mn:\n            mn = least[i][1]\n    if mn == INT32_MAX:\n        print(0)\n        continue\n    print(n - mn)", "INT32_MAX = 2147483647\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    string = input()\n    least = {}\n    for i in range(ord('a'), ord('z') + 1):\n        least[chr(i)] = [-1, INT32_MAX]\n    for i in range(n):\n        char = string[i]\n        if least[char][0] != -1:\n            difference = i - least[char][0]\n            if difference < least[char][1]:\n                least[char][1] = difference\n        least[char][0] = i\n    mn = INT32_MAX\n    for i in least:\n        if least[i][1] < mn:\n            mn = least[i][1]\n    if mn == INT32_MAX:\n        print(0)\n        continue\n    print(n - mn)", "import sys\nt = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    k = 0\n    l2 = set(s)\n    if n == len(l2):\n        k = 0\n    else:\n        l3 = [-1 for i in range(26)]\n        m = n\n        for i in range(n):\n            c = ord(s[i])\n            if l3[c - 97] == -1:\n                l3[c - 97] = i\n            else:\n                x = l3[c - 97]\n                l3[c - 97] = i\n                if i - x < m:\n                    m = i - x\n        k = n - m\n    print(k)\n    t = t - 1", "import sys\nfor t in range(int(input())):\n    n = int(input())\n    s = input()\n    ind = {}\n    for i in range(n):\n        if s[i] in ind:\n            ind[s[i]].append(i)\n        else:\n            ind[s[i]] = [i]\n    min_diff = sys.maxsize\n    for same_element_index in ind.values():\n        for i in range(len(same_element_index) - 1):\n            min_diff = min(min_diff, same_element_index[i + 1] - same_element_index[i])\n    ans = n - min_diff if min_diff < sys.maxsize else 0\n    print(ans)"]