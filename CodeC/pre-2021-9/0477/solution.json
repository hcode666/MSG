["n = int(input())\nwhile n:\n    n -= 1\n    N = int(input())\n    l = [int(x) for x in input().split()]\n    b = []\n    l.sort()\n    for i in range(N):\n        b.append(l[i])\n        b.append(l[N + i])\n    print(b[N])\n    print(*b)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    median = 0\n    if n % 2 == 0:\n        median = a[n + (n // 2 - 1)]\n    else:\n        median = a[n + n // 2]\n    ans = []\n    for i in range(n):\n        ans.append(a[i])\n        ans.append(a[-i - 1])\n    print(median)\n    print(*ans)", "for T in range(int(input())):\n    N = int(input())\n    nums = sorted(list(map(int, input().split())))\n    result = [0] * (2 * N)\n    list_pointer = 2 * N - 1\n    for index in range(list_pointer, -1, -2):\n        result[index] = nums[list_pointer]\n        list_pointer -= 1\n    store_pointer = 0\n    for index in range(list_pointer + 1):\n        result[store_pointer] = nums[index]\n        store_pointer += 2\n    print(max(result[N], result[N - 1]))\n    print(*result)", "for T in range(int(input())):\n    N = int(input())\n    nums = sorted(list(map(int, input().split())))\n    result = [0] * (2 * N)\n    list_pointer = 2 * N - 1\n    for index in range(list_pointer, -1, -2):\n        result[index] = nums[list_pointer]\n        list_pointer -= 1\n    store_pointer = 0\n    for index in range(list_pointer + 1):\n        result[store_pointer] = nums[index]\n        store_pointer += 2\n    print(max(result[N], result[N - 1]))\n    print(*result)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    brr = []\n    for i in range(n):\n        brr.append(arr[i])\n        brr.append(arr[n + i])\n    print(brr[n])\n    print(*brr)", "n = int(input())\nwhile n:\n    n -= 1\n    N = int(input())\n    l = [int(x) for x in input().split()]\n    b = []\n    l.sort()\n    for i in range(N):\n        b.append(l[i])\n        b.append(l[N + i])\n    print(b[N])\n    print(*b)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    brr = []\n    for i in range(n):\n        brr.append(arr[i])\n        brr.append(arr[n + i])\n    print(brr[n])\n    print(*brr)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    a = arr[n:2 * n]\n    print(a[n // 2])\n    for i in range(n):\n        print(arr[i], arr[n + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    Arr = sorted(list(map(int, input().split())))\n    b_Arr = Arr[n:2 * n]\n    print(b_Arr[n // 2])\n    for i in range(n):\n        print(Arr[i], Arr[n + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (a, b) = (a[:n // 2 * 2], a[n // 2 * 2:])\n    c = []\n    for i in range(len(b) // 2):\n        c.append(b[i])\n        c.append(b[i + n // 2 + 1])\n    print(c[1])\n    print(' '.join((str(x) for x in a + c)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (a, b) = (a[:n // 2 * 2], a[n // 2 * 2:])\n    c = []\n    for i in range(len(b) // 2):\n        c.append(b[i])\n        c.append(b[i + n // 2 + 1])\n    print(c[1])\n    print(' '.join((str(x) for x in a + c)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a1 = arr[:n]\n    a2 = arr[n:]\n    print(arr[n + n // 2])\n    for i in range(n):\n        print(a1[i], a2[i], end=' ')\n    print()", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = []\n    for j in range(length):\n        ans.append(arr[j])\n        ans.append(arr[-j - 1])\n    median_pos = length + length // 2\n    print(arr[median_pos])\n    print(*ans)", "for _ in range(int(input())):\n    N = int(input())\n    arr = sorted(list(map(int, input().split())))\n    B_arr = arr[N:2 * N]\n    print(B_arr[N // 2])\n    for i in range(N):\n        print(arr[i], arr[N + i], end=' ')\n    print()", "for _ in range(int(input())):\n    N = int(input())\n    arr = sorted(list(map(int, input().split())))\n    B_arr = arr[N:2 * N]\n    print(B_arr[N // 2])\n    for i in range(N):\n        print(arr[i], arr[N + i], end=' ')\n    print()", "for _ in range(int(input())):\n    N = int(input())\n    arr = sorted(list(map(int, input().split())))\n    B_arr = arr[N:2 * N]\n    print(B_arr[N // 2])\n    for i in range(N):\n        print(arr[i], arr[N + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()[:2 * n]))\n    lst.sort()\n    l1 = lst[n:2 * n]\n    print(l1[n // 2])\n    for i in range(n):\n        print(lst[i], lst[n + i], end=' ')\n    print()", "def CreateDic(nums):\n    dic = dict()\n    for i in nums:\n        if not i in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    return dic\nfor _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    nums.sort()\n    numsA = []\n    for i in range(1, n + 1):\n        numsA.append(nums[i - 1])\n        numsA.append(nums[i - 1 + n])\n    numsB = []\n    for i in range(n, 2 * n):\n        numsB.append(nums[i])\n    print(numsB[int(len(numsB) / 2)])\n    for i in numsA:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    res = arr[n:2 * n]\n    print(res[n // 2])\n    for i in range(n):\n        print(arr[i], arr[n + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    res = arr[n:2 * n]\n    print(res[n // 2])\n    for i in range(n):\n        print(arr[i], arr[n + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    Ai = list(map(int, input().split()))\n    Ai.sort()\n    Aip = []\n    for i in range(n):\n        Aip.extend([Ai[i], Ai[n + i]])\n    print(Aip[n])\n    print(*Aip)", "for tc in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    a = l[:n]\n    b = l[n:2 * n]\n    m = []\n    for i in range(n):\n        m.append(a[i])\n        m.append(b[n - 1 - i])\n    print(l[3 * n // 2])\n    for i in m:\n        print(i, end=' ')\n    print('\\n')", "for tc in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    a = l[:n]\n    b = l[n:2 * n]\n    m = []\n    for i in range(n):\n        m.append(a[i])\n        m.append(b[n - 1 - i])\n    print(l[3 * n // 2])\n    for i in m:\n        print(i, end=' ')\n    print('\\n')", "for tc in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    a = l[:n]\n    b = l[n:2 * n]\n    m = []\n    for i in range(n):\n        m.append(a[i])\n        m.append(b[n - 1 - i])\n    print(l[3 * n // 2])\n    for i in m:\n        print(i, end=' ')\n    print('\\n')", "for tc in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    a = l[:n]\n    b = l[n:2 * n]\n    m = []\n    for i in range(n):\n        m.append(a[i])\n        m.append(b[n - 1 - i])\n    print(l[3 * n // 2])\n    for i in m:\n        print(i, end=' ')\n    print('\\n')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[2 * n - 1 - (n - 1) // 2])\n    B = []\n    for i in range(n):\n        B.append(str(a[i]))\n        B.append(str(a[i + n]))\n    print(' '.join(B))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[2 * n - 1 - (n - 1) // 2])\n    B = []\n    for i in range(n):\n        B.append(str(a[i]))\n        B.append(str(a[i + n]))\n    print(' '.join(B))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split()\n    l = []\n    for j in s:\n        l.append(int(j))\n    l.sort()\n    p = n + n // 2\n    m = l[p]\n    s1 = ''\n    for k in range(n):\n        s1 += str(l[k]) + ' ' + str(l[k + n]) + ' '\n    print(m)\n    print(s1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    res = arr[n:2 * n]\n    print(res[n // 2])\n    for i in range(n):\n        print(arr[i], arr[n + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    res = arr[n:2 * n]\n    print(res[n // 2])\n    for i in range(n):\n        print(arr[i], arr[n + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    l.sort()\n    val = l[n:]\n    print(val[len(val) // 2])\n    for i in range(n):\n        print(l[i], l[n + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    res = arr[n:2 * n]\n    print(res[n // 2])\n    for i in range(n):\n        print(arr[i], arr[n + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    res = arr[n:2 * n]\n    print(res[n // 2])\n    for i in range(n):\n        print(arr[i], arr[n + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    res = arr[n:2 * n]\n    print(res[n // 2])\n    for i in range(n):\n        print(arr[i], arr[n + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    mdn = a[n + n // 2]\n    b = []\n    for i in range(n):\n        b.append(a[i])\n        b.append(a[n + i])\n    print(mdn)\n    print(*b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    print(arr[(3 * n - 1) // 2])\n    for i in range(n):\n        print(arr[i], arr[n + i], end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    print(arr[(3 * n - 1) // 2])\n    for i in range(n):\n        print(arr[i], arr[n + i], end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split()\n    l = []\n    for j in s:\n        l.append(int(j))\n    l.sort()\n    p = n + n // 2\n    m = l[p]\n    s1 = ''\n    for k in range(n):\n        s1 += str(l[k]) + ' ' + str(l[k + n]) + ' '\n    print(m)\n    print(s1)", "for _ in range(int(input())):\n    N = int(input())\n    st = input().split()\n    A = []\n    for x in st:\n        A.append(int(x))\n    A.sort()\n    p = N + N // 2\n    M = A[p]\n    st = ''\n    for k in range(N):\n        st += str(A[k]) + ' ' + str(A[k + N]) + ' '\n    print(M)\n    print(st)", "import math\nfrom math import log2, sqrt\nimport sys\nsys.setrecursionlimit(pow(10, 6))\nimport collections\nfrom collections import defaultdict\nfrom statistics import median\ninf = float('inf')\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    it1 = 0\n    it2 = 2 * n - 1\n    m = []\n    while it1 < it2:\n        m.append(l[it1])\n        it1 += 1\n        m.append(l[it2])\n        it2 -= 1\n    b = [0 for i in range(n)]\n    for i in range(n):\n        b[i] = max(m[2 * i], m[2 * i + 1])\n    print(median(b))\n    print(*m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    print(arr[(3 * n - 1) // 2])\n    for i in range(n):\n        print(arr[i], arr[n + i], end=' ')\n    print()", "from statistics import median\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(a) for a in input().split()]\n    A.sort(reverse=True)\n    B = A[:N]\n    print(median(B))\n    C = []\n    for i in range(N):\n        C.append(B[i])\n        C.append(A[N + i])\n    print(' '.join(list(map(str, C))))", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    a.sort()\n    b = a[n:]\n    a = a[:n]\n    print(b[int(n / 2)])\n    for i in range(n):\n        print(a[i], b[i], end=' ')\n    print('')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    x = [0] * (2 * n)\n    c = 0\n    for j in range(2 * n - 1, -1, -2):\n        x[j] = l[c]\n        c += 1\n    for j in range(2 * n - 2, -1, -2):\n        x[j] = l[c]\n        c += 1\n    c = n // 2\n    ans = max(x[2 * c], x[2 * c + 1])\n    print(ans)\n    print(*x)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    B = A[N:]\n    C = A[:N]\n    X = []\n    p = B[N // 2]\n    print(p)\n    for (i, j) in zip(B, C):\n        X.append(i)\n        X.append(j)\n    print(*X)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    x = [0] * (2 * n)\n    c = 0\n    for j in range(2 * n - 1, -1, -2):\n        x[j] = l[c]\n        c += 1\n    for j in range(2 * n - 2, -1, -2):\n        x[j] = l[c]\n        c += 1\n    c = n // 2\n    ans = max(x[2 * c], x[2 * c + 1])\n    print(ans)\n    print(*x)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    x = [0] * (2 * n)\n    c = 0\n    for j in range(2 * n - 1, -1, -2):\n        x[j] = l[c]\n        c += 1\n    for j in range(2 * n - 2, -1, -2):\n        x[j] = l[c]\n        c += 1\n    c = n // 2\n    ans = max(x[2 * c], x[2 * c + 1])\n    print(ans)\n    print(*x)", "t = int(input())\nfor i in range(t):\n    s = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    hold = int(s / 2)\n    print(arr[2 * s - 1 - hold])\n    for j in range(s):\n        print(arr[j], arr[2 * s - 1 - j], end=' ', sep=' ')\n    print()", "import numpy as np\nfor _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    m = N * 3 // 2\n    x = np.partition(A, m)[m]\n    H = [i for i in range(0, 2 * N, 2) if A[i] >= x and A[i + 1] >= x]\n    L = [i for i in range(0, 2 * N, 2) if A[i] < x and A[i + 1] < x]\n    for (h, l) in zip(H, L[:len(H)]):\n        (A[h], A[l]) = (A[l], A[h])\n    print(x)\n    print(*A)", "for _ in range(int(input())):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    A.sort()\n    z = A[n:]\n    print(z[len(z) // 2])\n    for i in range(n):\n        print(A[i], A[n + i], end=' ')\n    print()", "def solve(arr):\n    lst = sorted(arr)\n    n = len(arr) // 2\n    b = []\n    final = []\n    for i in range(n):\n        b.append(max(lst[i], lst[i + n]))\n        final.append(lst[i])\n        final.append(lst[i + n])\n    print(b[len(b) // 2])\n    print(' '.join(map(str, final)))\nt = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solve(arr)\n    t -= 1", "import sys\nfor i in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    a.sort()\n    sys.stdout.write(str(a[n:][int((n - 1) / 2)]) + '\\n')\n    for j in range(n):\n        sys.stdout.write(str(a[j]) + ' ' + str(a[n + j]) + ' ')\n    sys.stdout.write('\\n')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    m = l[n:]\n    m = m[n // 2]\n    print(m)\n    l2 = []\n    for i in range(n):\n        l2.append(l[i])\n        l2.append(l[2 * n - i - 1])\n    print(*l2)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = arr[n + n // 2]\n    print(ans)\n    b = []\n    for i in range(n):\n        b.append(arr[i])\n        b.append(arr[i + n])\n    print(*b)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l)\n    output = []\n    a = l[:n]\n    b = l[n:]\n    list((output.extend(i) for i in zip(a, b)))\n    alpha = int((n - 1) / 2)\n    print(b[alpha])\n    output = ' '.join(map(str, output))\n    print(output)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    m = l[:n]\n    l = l[n:]\n    print(l[n // 2])\n    for i in range(n):\n        print(m[i], l[i], end=' ')\n    print()", "def cal():\n    T = int(input())\n    for _ in range(T):\n        n = int(input())\n        A1 = list(map(int, input().split()))\n        A = sorted(A1)\n        if n % 2 == 1:\n            print(A[n + int(n / 2)])\n        else:\n            print(max(A[n + int(n / 2)], A[n + int(n / 2) - 1]))\n        for i in range(n):\n            print(A[i], A[n + i], end=' ')\n        print()\ncal()", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().strip().split()))\n    arr.sort()\n    s1 = str(arr[0])\n    print(arr[N // 2 + N])\n    for i in range(N):\n        print(arr[i], arr[N + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    list1 = [int(i) for i in input().split()]\n    list1.sort()\n    number = list1[n:]\n    print(number[len(number) // 2])\n    for i in range(n):\n        print(list1[i], list1[n + i], end=' ')\n    print()", "def partition(arr, low, high):\n    i = low - 1\n    pivot = arr[high]\n    for j in range(low, high):\n        if arr[j] <= pivot:\n            i = i + 1\n            (arr[i], arr[j]) = (arr[j], arr[i])\n    (arr[i + 1], arr[high]) = (arr[high], arr[i + 1])\n    return i + 1\n\ndef quickSort(arr, low, high):\n    if low < high:\n        pi = partition(arr, low, high)\n        quickSort(arr, low, pi - 1)\n        quickSort(arr, pi + 1, high)\nfor _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().strip().split()))\n    quickSort(arr, 0, len(arr) - 1)\n    s1 = str(arr[0])\n    print(arr[N // 2 + N])\n    for i in range(N):\n        print(arr[i], arr[N + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    A.sort()\n    z = A[n:]\n    print(z[len(z) // 2])\n    for i in range(n):\n        print(A[i], A[n + i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    l.sort()\n    z = l[n:]\n    print(z[len(z) // 2])\n    for i in range(n):\n        print(l[i], l[n + i], end=' ')\n    print()", "n = int(input())\nfor _ in range(n):\n    p = int(input())\n    t = [int(j) for j in input().split()]\n    t.sort()\n    ls = t[p:2 * p]\n    d = int((p - 1) / 2)\n    print(ls[d])\n    q = list()\n    for i in range(p):\n        q.append(t[i])\n        q.append(ls[i])\n    print(*q)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = a[:len(a) // 2]\n    c = a[len(a) // 2:]\n    p = [0] * len(a)\n    j = 0\n    k = 0\n    for i in range(len(p)):\n        if i % 2 == 0:\n            p[i] = b[j]\n            j += 1\n        else:\n            p[i] = c[k]\n            k += 1\n    med = p[len(p) // 2]\n    print(med)\n    for x in p:\n        print(x, end=' ')\n    print()\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    (b, c) = (l[0:len(l) // 2], l[len(l) // 2:])\n    d = []\n    for i in range(len(b)):\n        d.append(b[i])\n        d.append(c[i])\n    print(b[len(b) // 2])\n    for i in range(len(d)):\n        print(d[i], end=' ')\n    print('')\n    t -= 1", "import numpy as np\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    m = N * 3 // 2\n    x = np.partition(A, m)[m]\n    H = [i for i in range(0, 2 * N, 2) if A[i] >= x and A[i + 1] >= x]\n    L = [i for i in range(0, 2 * N, 2) if A[i] < x and A[i + 1] < x]\n    for (h, l) in zip(H, L[:len(H)]):\n        (A[h], A[l]) = (A[l], A[h])\n    print(x)\n    print(*A)", "import numpy as np\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    m = N * 3 // 2\n    x = np.partition(A, m)[m]\n    H = [i for i in range(0, 2 * N, 2) if A[i] >= x and A[i + 1] >= x]\n    L = [i for i in range(0, 2 * N, 2) if A[i] < x and A[i + 1] < x]\n    for (h, l) in zip(H, L[:len(H)]):\n        (A[h], A[l]) = (A[l], A[h])\n    print(x)\n    print(*A)", "for t in range(int(input())):\n    n = 2 * int(input())\n    A = list(map(int, input().split()))\n    A = list(sorted(A))\n    Alow = A[:n // 2]\n    Ahigh = A[n // 2:]\n    median = Ahigh[n // 4]\n    B = []\n    for i in range(n // 2):\n        B.append(Alow[i])\n        B.append(Ahigh[i])\n    print(median)\n    print(*B)", "t = int(input())\nwhile t:\n    n = int(input())\n    x = n\n    y = n + int(n / 2)\n    l = list(map(int, input().split()))\n    p = []\n    q = []\n    l.sort()\n    z = l[y]\n    for i in range(x, 2 * n):\n        p.append(l[i])\n    for i in range(0, x):\n        q.append(l[i])\n        q.append(p[i])\n    print(z)\n    for i in q:\n        print(i, end=' ')\n    print()\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    x = n\n    y = n + int(n / 2)\n    l = list(map(int, input().split()))\n    p = []\n    q = []\n    l.sort()\n    z = l[y]\n    for i in range(x, 2 * n):\n        p.append(l[i])\n    for i in range(0, x):\n        q.append(l[i])\n        q.append(p[i])\n    print(z)\n    for i in q:\n        print(i, end=' ')\n    print()\n    t -= 1", "def permute_max_median(A):\n    A.sort()\n    median = A[len(A) // 2 + len(A) // 4]\n    for i in range(len(A) // 2):\n        (A[i * 2 + 1], A[len(A) // 2 + i]) = (A[len(A) // 2 + i], A[i * 2 + 1])\n    return median\n\ndef main():\n    from sys import stdin\n    T = int(stdin.readline())\n    for t in range(T):\n        N = int(stdin.readline())\n        A = list((int(a) for a in stdin.readline().split()))\n        assert len(A) == N * 2\n        print(permute_max_median(A))\n        print(*A)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l, reverse=True)\n    e = l[(n - 1) // 2]\n    print(e)\n    for j in range(n):\n        print(l[j], l[n + j], end=' ')\n    print('')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a, reverse=True)\n    x = a[(n - 1) // 2]\n    a = sorted(a)\n    print(x)\n    for i in range(n):\n        print(a[i], a[n + i], end=' ')\n    print()", "for t in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    sa = sorted(a)\n    b = []\n    c = []\n    for i in range(n, 2 * n):\n        b.append(sa[i])\n    for i in range(0, n):\n        c.append(sa[i])\n    print(b[n // 2])\n    for i in range(0, n):\n        print(c[i], b[i], end=' ')\n    print()", "for i in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    l.sort()\n    l2 = l[:len(l) // 2]\n    l1 = l[len(l) // 2:]\n    print(l1[len(l1) // 2])\n    for i in range(n):\n        print(l2[i], l1[i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    lesser = l[:n]\n    greater = l[n:]\n    print(greater[n // 2])\n    for i in range(n):\n        print(lesser[i], greater[i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a, reverse=True)\n    x = a[(n - 1) // 2]\n    a = sorted(a)\n    print(x)\n    for i in range(n):\n        print(a[i], a[n + i], end=' ')\n    print()", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    l2 = l[n:2 * n]\n    mid = n // 2\n    print(l2[mid])\n    for i in range(0, n):\n        print(l[i], end=' ')\n        print(l2[i], end=' ')\n    print('\\n', end='')\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    b = []\n    for i in range(n):\n        b.append(max(a[i], a[len(a) - 1 - i]))\n    if n % 2 == 1:\n        print(b[(n - 1) // 2])\n    else:\n        print(max(b[len(b) // 2 - 1], b[len(b) // 2]))\n    for i in range(n):\n        print(str(a[i]) + ' ' + str(b[i]), end=' ')\n    print('')", "for i in range(int(input())):\n    n = int(input())\n    x = input()\n    x = list(map(int, x.split()))\n    x.sort()\n    y = x[n:]\n    print(y[n // 2])\n    i = 0\n    while i < n:\n        print(x[i], x[n + i], end=' ')\n        i += 1\n    print()", "tc = int(input())\nfor i in range(tc):\n    b = []\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    k = 2 * n\n    if n == 1:\n        print(a[1])\n        print(' '.join(map(str, a)))\n    else:\n        x = 1\n        y = n\n        while x < y:\n            tmp = a[x]\n            a[x] = a[y]\n            a[y] = tmp\n            x += 2\n            y += 1\n        for j in range(0, k, 2):\n            b.append(a[j + 1])\n        print(b[n // 2])\n        print(' '.join(map(str, a)))", "for i in range(int(input())):\n    n = int(input())\n    x = input()\n    x = list(map(int, x.split()))\n    x.sort()\n    y = x[n:]\n    print(y[n // 2])\n    i = 0\n    while i < n:\n        print(x[i], x[n + i], end=' ')\n        i += 1\n    print()", "n = int(input())\nwhile n > 0:\n    c = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    lb = len(b)\n    mid = int(c)\n    median = int(2 * c - (c + 1) / 2)\n    print(b[median])\n    (b[mid], b[median]) = (b[median], b[mid])\n    for i in range(c - 1):\n        if i % 2 != 0:\n            (b[i - 1], b[lb - i - 1]) = (b[lb - i - 1], b[i - 1])\n    for r in b:\n        print(r, end=' ')\n    print()\n    n -= 1", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    print(A[-((N + 1) // 2)])\n    B = []\n    N *= 2\n    for i in range(N // 2):\n        B.extend([str(A[i]), str(A[i + N // 2])])\n    print(' '.join(B))", "def quicksort(myList, start, end):\n    if start < end:\n        pivot = partition(myList, start, end)\n        quicksort(myList, start, pivot - 1)\n        quicksort(myList, pivot + 1, end)\n    return myList\n\ndef partition(myList, start, end):\n    pivot = myList[start]\n    left = start + 1\n    right = end\n    done = False\n    while not done:\n        while left <= right and myList[left] <= pivot:\n            left = left + 1\n        while myList[right] >= pivot and right >= left:\n            right = right - 1\n        if right < left:\n            done = True\n        else:\n            temp = myList[left]\n            myList[left] = myList[right]\n            myList[right] = temp\n    temp = myList[start]\n    myList[start] = myList[right]\n    myList[right] = temp\n    return right\nT = int(input())\nfor j in range(T):\n    n = int(input())\n    A = [int(n) for n in input().split()]\n    C = quicksort(A, 0, len(A) - 1)\n    median = C[2 * n - (n + 1) // 2]\n    for i in range((n - 1) // 2):\n        d = C[2 * i + 1]\n        C[2 * i + 1] = C[2 * n - 2 * i - 1]\n        C[2 * n - 2 * i - 1] = d\n    print(median)\n    print(*C)", "T = int(input())\nfor _ in range(0, T):\n    N = int(input())\n    a = list(map(int, input().split(' ')))\n    a = sorted(a)\n    print(a[(3 * N + 1) // 2 - 1])\n    print(*[y for x in zip(a[0:N], a[N:2 * N]) for y in x if y is not None])", "for _ in range(int(input())):\n    (n, a) = (int(input()), sorted([int(x) for x in input().split()]))\n    c = []\n    for i in range(n):\n        c.append(a[i])\n        c.append(a[n + i])\n    print(c[2 * (n // 2) + 1])\n    print(*c)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    up = A[N:]\n    down = A[:N]\n    print(up[N >> 1])\n    A = []\n    for (x, y) in zip(down, up):\n        A.append(x)\n        A.append(y)\n    print(' '.join(map(str, A)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    L.sort()\n    print(L[n + n // 2])\n    for i in range(n):\n        print(L[i], L[i + n], end=' ')\n    print()", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    if n == 1:\n        print(max(a[0], a[1]))\n        for i in range(len(a)):\n            print(a[i], end=' ')\n        print()\n    else:\n        a.sort()\n        b = []\n        j = 0\n        for i in range(n):\n            b.append(a[i])\n            b.append(a[2 * n - i - 1])\n        print(max(b[n], b[n + 1]))\n        for i in range(len(a)):\n            print(b[i], end=' ')\n        print()\n    t = t - 1", "cases = int(input())\nj = 0\nwhile j < cases:\n    j += 1\n    n = int(input())\n    mid = int((n - 1) / 2)\n    a_raw = input().split()\n    a = [int(x) for x in a_raw]\n    a.sort()\n    b = a[1::2]\n    for i in range(mid):\n        (a[2 * i], a[2 * (n - i - 1)]) = (a[2 * (n - i - 1)], a[2 * i])\n        b[i] = max(a[2 * i], b[i])\n    b.sort()\n    median = b[mid]\n    a_raw = [str(x) for x in a]\n    print(median)\n    print(' '.join(a_raw))", "test = input()\ntest = int(test)\nfor j in range(0, test):\n    n = input()\n    n = int(n)\n    list2 = []\n    list3 = []\n    list4 = []\n    list2 = list(map(int, input().strip().split(' ')))\n    list2.sort()\n    print(list2[len(list2) - n // 2 - 1])\n    j = len(list2) - 1\n    for i in range(0, n, 2):\n        (list2[i], list2[j]) = (list2[j], list2[i])\n        j -= 1\n    for i in range(0, len(list2) - 1):\n        print(list2[i], end=' ')\n    print(list2[i + 1])", "def compose_list(l_idx, sub_len, r_idx, t_list):\n    new_list = []\n    for iterv in range(sub_len):\n        new_list.append(t_list[l_idx])\n        l_idx += 1\n        new_list.append(t_list[r_idx])\n        r_idx += 1\n    return new_list\nt_num = int(input())\nfor t_iter in range(t_num):\n    t_len = int(input())\n    twice_idx = 2 * t_len\n    a_list = [-1]\n    a_list = a_list + [int(xvar) for xvar in input().split(' ')]\n    a_list.sort()\n    a_list = [-1] + compose_list(1, t_len, t_len + 1, a_list)\n    print(a_list[t_len + 1])\n    print(*a_list[1:], sep=' ')", "x = int(input())\nfor i in range(0, x):\n    y = int(input())\n    q = list(map(int, input().strip().split(' ')))\n    q.sort()\n    m = q[y:2 * y]\n    ans = m[y // 2]\n    print(ans)\n    for i in range(0, y, 2):\n        t = q[i]\n        q[i] = q[y]\n        q[y] = t\n        y = y + 2\n    for u in range(0, len(q) - 1):\n        print(q[u], end=' ')\n    print(q[u + 1])", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    b = []\n    a = list(map(int, input().split()))\n    a.sort()\n    a1 = [-1] * (2 * n)\n    k1 = 2 * n - 1\n    k2 = 0\n    for i in range(0, len(a)):\n        if i % 2 == 0:\n            a1[i] = a[k1]\n            k1 -= 1\n        else:\n            a1[i] = a[k2]\n            k2 += 1\n    for i in range(0, len(a), 2):\n        b.append(a1[i])\n    print(b[len(b) // 2])\n    for i in range(len(a)):\n        print(a1[i], sep=' ', end=' ')\n    print()"]