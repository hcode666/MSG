["for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    A = [[x for x in input().split()] for __ in range(n)]\n    res = 'FINE'\n    for i in A:\n        if i[0] == 'correct' and i[1].count('0') > 0:\n            res = 'INVALID'\n            break\n        elif i[0] == 'wrong' and i[1].count('1') == m:\n            res = 'WEAK'\n    print(res)", "for _ in range(int(input())):\n    n = int(input().split()[0])\n    pl = [input().split() for _ in range(n)]\n    res = 'FINE'\n    for i in pl:\n        if i[0] == 'correct':\n            if '0' in i[1]:\n                res = 'INVALID'\n                break\n        elif i[0] == 'wrong':\n            if '0' not in i[1]:\n                res = 'WEAK'\n    print(res)", "t = int(input())\nwhile t > 0:\n    (n, m) = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append(input())\n    catz = 0\n    cal1 = 0\n    watz = 0\n    wal1 = 0\n    for i in l:\n        if i[:5] == 'corre' and i.count('1') == m:\n            cal1 += 1\n        elif i[:5] == 'corre' and i.count('0') >= 1:\n            catz += 1\n        elif i[:5] == 'wrong' and i.count('0') >= 1:\n            watz += 1\n        elif i[:5] == 'wrong' and i.count('1') == m:\n            wal1 += 1\n    if cal1 > 0 and watz > 0 and (catz == 0) and (wal1 == 0):\n        print('FINE')\n    elif cal1 > 0 and (watz > 0 or wal1 > 0) and (catz == 0):\n        print('WEAK')\n    else:\n        print('INVALID')\n    t -= 1", "T = int(input())\nfor i in range(T):\n    (N, M) = tuple([int(j) for j in input().split()])\n    X = []\n    for j in range(N):\n        X.append(tuple(input().split()))\n    for t in X:\n        if t[0] == 'correct' and '0' in t[1]:\n            print('INVALID')\n            t = None\n            break\n    if t != None:\n        for t in X:\n            if t[0] == 'wrong' and '0' not in t[1]:\n                print('WEAK')\n                t = None\n                break\n    if t != None:\n        print('FINE')", "testNum = int(input())\nfor i in range(testNum):\n    (LineNum, StrLength) = map(int, input().split())\n    TestInvalid = False\n    TestWeak = False\n    for j in range(LineNum):\n        LineArr = input().split()\n        if j == LineNum - 1:\n            if TestInvalid:\n                print('INVALID')\n            elif TestWeak:\n                print('WEAK')\n            else:\n                print('FINE')\n            TestInvalid = False\n            TestWeak = False\n        elif LineArr[0] == 'correct':\n            if int(LineArr[1]) < int(bin(2 ** StrLength - 1)[2:]):\n                TestInvalid = True\n        elif int(LineArr[1]) == int(bin(2 ** StrLength - 1)[2:]):\n            TestWeak = True", "i = int(input())\nlisk = []\nfor _ in range(i):\n    k = input().split()\n    mai = []\n    for el in range(int(k[0])):\n        kk = input().split()\n        mai.append(kk)\n    sta = 'FINE'\n    for ele in mai:\n        if ele[0] == 'correct' and '0' in ele[1]:\n            sta = 'INVALID'\n    for ele in mai:\n        if ele[0] == 'wrong' and '0' not in ele[1] and (sta != 'INVALID'):\n            sta = 'WEAK'\n    lisk.append(sta)\nfor ele in lisk:\n    print(ele)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    test = [[x for x in input().split()] for __ in range(n)]\n    res = 'FINE'\n    for i in test:\n        if i[0] == 'correct':\n            if '0' in i[1]:\n                res = 'INVALID'\n                break\n        elif i[0] == 'wrong':\n            if i[1].count('1') == m:\n                res = 'WEAK'\n    print(res)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    test = [[x for x in input().split()] for __ in range(n)]\n    res = 'FINE'\n    for i in test:\n        if i[0] == 'correct':\n            if '0' in i[1]:\n                res = 'INVALID'\n                break\n        elif i[0] == 'wrong':\n            if i[1].count('1') == m:\n                res = 'WEAK'\n    print(res)", "i = int(input())\nlisk = []\nfor _ in range(i):\n    k = input().split()\n    mai = []\n    for el in range(int(k[0])):\n        kk = input().split()\n        mai.append(kk)\n    sta = 'FINE'\n    for ele in mai:\n        if ele[0] == 'correct' and '0' in ele[1]:\n            sta = 'INVALID'\n    for ele in mai:\n        if ele[0] == 'wrong' and '0' not in ele[1] and (sta != 'INVALID'):\n            sta = 'WEAK'\n    lisk.append(sta)\nfor ele in lisk:\n    print(ele)", "t = int(input())\nfor i in range(t):\n    n_m = input().split(' ')\n    (n, m, l1, l2, l_c, f) = (int(n_m[0]), int(n_m[1]), [], [], ['FINE', 'WEAK', 'INVALID'], 0)\n    for j in range(n):\n        ans_st = input().split(' ')\n        l1.append(ans_st[0])\n        l2.append(ans_st[1])\n    for x in range(n):\n        if l1[x] == 'correct' and l2[x].count('1') != m:\n            f = max(f, 2)\n        elif l1[x] == 'wrong' and l2[x].count('1') == m:\n            f = max(f, 1)\n    print(l_c[f])", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    help_var = 1\n    ans = 'FINE'\n    for i in range(n):\n        (verdict, tests) = map(str, input().split())\n        for j in range(len(tests)):\n            if help_var == 0:\n                break\n            if verdict == 'wrong' and tests == '1' * m:\n                ans = 'WEAK'\n                break\n            elif verdict == 'correct' and tests[j] == '0':\n                ans = 'INVALID'\n                help_var = 0\n    print(ans)", "q = int(input())\nfor i in range(q):\n    w = str(input())\n    w = w + ' '\n    e = ''\n    r = []\n    for i in w:\n        if i == ' ':\n            r.append(int(e))\n            e = ''\n        else:\n            e = e + i\n    s = 0\n    d = 0\n    for i in range(r[0]):\n        t = str(input())\n        t = t + ' '\n        y = ''\n        u = []\n        for j in t:\n            if j == '1' or j == '0':\n                u.append(j)\n            elif j == ' ':\n                u.append(y)\n                y = ''\n            else:\n                y = y + j\n        if u[0] == 'correct':\n            for j in range(1, len(u)):\n                if u[j] == '0':\n                    s = s + 1\n                    break\n        if u[0] == 'wrong':\n            f = 0\n            for j in range(1, len(u)):\n                if u[j] == '1':\n                    f = f + 1\n            if f == r[1]:\n                d = d + 1\n    if s > 0:\n        print('INVALID')\n    if s == 0 and d > 0:\n        print('WEAK')\n    if s == 0 and d == 0:\n        print('FINE')", "q = int(input())\nfor i in range(q):\n    w = str(input())\n    w = w + ' '\n    e = ''\n    r = []\n    for i in w:\n        if i == ' ':\n            r.append(int(e))\n            e = ''\n        else:\n            e = e + i\n    s = 0\n    d = 0\n    for i in range(r[0]):\n        t = str(input())\n        t = t + ' '\n        y = ''\n        u = []\n        for j in t:\n            if j == '1' or j == '0':\n                u.append(j)\n            elif j == ' ':\n                u.append(y)\n                y = ''\n            else:\n                y = y + j\n        if u[0] == 'correct':\n            for j in range(1, len(u)):\n                if u[j] == '0':\n                    s = s + 1\n                    break\n        if u[0] == 'wrong':\n            f = 0\n            for j in range(1, len(u)):\n                if u[j] == '1':\n                    f = f + 1\n            if f == r[1]:\n                d = d + 1\n    if s > 0:\n        print('INVALID')\n    if s == 0 and d > 0:\n        print('WEAK')\n    if s == 0 and d == 0:\n        print('FINE')", "q = int(input())\nfor i in range(q):\n    w = str(input())\n    w = w + ' '\n    e = ''\n    r = []\n    for i in w:\n        if i == ' ':\n            r.append(int(e))\n            e = ''\n        else:\n            e = e + i\n    s = 0\n    d = 0\n    for i in range(r[0]):\n        t = str(input())\n        t = t + ' '\n        y = ''\n        u = []\n        for j in t:\n            if j == '1' or j == '0':\n                u.append(j)\n            elif j == ' ':\n                u.append(y)\n                y = ''\n            else:\n                y = y + j\n        if u[0] == 'correct':\n            for j in range(1, len(u)):\n                if u[j] == '0':\n                    s = s + 1\n                    break\n        if u[0] == 'wrong':\n            f = 0\n            for j in range(1, len(u)):\n                if u[j] == '1':\n                    f = f + 1\n            if f == r[1]:\n                d = d + 1\n    if s > 0:\n        print('INVALID')\n    if s == 0 and d > 0:\n        print('WEAK')\n    if s == 0 and d == 0:\n        print('FINE')", "for case in range(int(input())):\n    (n, m) = map(int, input().split())\n    correct = ''\n    weak = False\n    for i in range(n):\n        (c, s) = input().split()\n        if c == 'correct':\n            correct += s\n        elif not weak and s.count('0') == 0:\n            weak = True\n    if correct.count('0') == 0:\n        if not weak:\n            print('FINE')\n        else:\n            print('WEAK')\n    else:\n        print('INVALID')", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split(' '))\n    result = 'FINE'\n    for i in range(n):\n        test1 = list(map(str, input().split(' ')))\n        if 'correct' in test1:\n            if '0' in test1[1]:\n                result = 'INVALID'\n        if 'wrong' in test1 and result != 'INVALID':\n            if '0' not in test1[1]:\n                result = 'WEAK'\n    print(result)\n    t = t - 1", "for tc in range(int(input())):\n    (n, m) = map(int, input().split())\n    (invalid, weak) = (False, False)\n    (cor, wro) = ([], [])\n    for i in range(n):\n        (sta, sol) = input().split()\n        if sta == 'correct':\n            req = '1' * m\n            if sol != req:\n                invalid = True\n        else:\n            notreq = '1' * m\n            if sol == notreq:\n                weak = True\n    if invalid:\n        print('INVALID')\n    elif weak:\n        print('WEAK')\n    else:\n        print('FINE')", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split(' '))\n    result = 'FINE'\n    for i in range(n):\n        test1 = list(map(str, input().split(' ')))\n        if 'correct' in test1:\n            if '0' in test1[1]:\n                result = 'INVALID'\n        if 'wrong' in test1 and result != 'INVALID':\n            if '0' not in test1[1]:\n                result = 'WEAK'\n    print(result)\n    t = t - 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (f, w) = (True, True)\n    for i in range(n):\n        (j, a) = input().split()\n        if j == 'correct':\n            if a.count('1') != len(a):\n                f = False\n        elif j == 'wrong':\n            if a.count('0') == 0:\n                w = False\n    if f and w:\n        print('FINE')\n    elif f and (not w):\n        print('WEAK')\n    else:\n        print('INVALID')", "for t in range(int(input())):\n    (n, testc) = map(int, input().split(' '))\n    s = 0\n    o = ''\n    counter = 0\n    no = 0\n    printer = ['INVALID', 'WEAK', 'FINE']\n    output = [0, 0, 0]\n    for i in range(n):\n        (sub, tes) = map(str, input().split(' '))\n        su = 0\n        for i in tes:\n            su = su + int(i)\n        if su != testc and sub == 'correct':\n            o = 'INVALID'\n            output[0] += 1\n        if su == testc and sub == 'wrong':\n            o = 'WEAK'\n            output[1] += 1\n        if su == testc and sub == 'correct':\n            o = 'FINE'\n            output[2] += 1\n    if output[0] > 0:\n        print('INVALID')\n    elif output[1] > 0:\n        print('WEAK')\n    else:\n        print('FINE')", "for t in range(int(input())):\n    (n, testc) = map(int, input().split(' '))\n    xx = 'FINE'\n    f = True\n    for i in range(n):\n        (sub, tes) = map(str, input().split(' '))\n        su = 0\n        if xx == 'INVALID':\n            continue\n        for i in tes:\n            su = su + int(i)\n        if su != testc and sub == 'correct':\n            xx = 'INVALID'\n        elif su == testc and sub == 'wrong':\n            xx = 'WEAK'\n    print(xx)", "tc = int(input())\nfor _ in range(tc):\n    (n, m) = map(int, input().split())\n    case = 'FINE'\n    force = 'STRONG'\n    for i in range(n):\n        (a, b) = map(str, input().split())\n        b = list(b)\n        if a == 'correct':\n            for i in b:\n                if i == '0':\n                    case = 'INVALID'\n                    break\n        elif a == 'wrong':\n            if max(b) == min(b):\n                force = 'WEAK'\n    if case == 'INVALID':\n        print(case)\n    elif force == 'WEAK':\n        print(force)\n    else:\n        print(case)", "def solve():\n    for _ in range(int(input())):\n        (cases, tests) = map(int, input().split(' '))\n        grade = 'FINE'\n        for _ in range(cases):\n            (plan, output) = input().split(' ')\n            if plan == 'correct' and '0' in output:\n                grade = 'INVALID'\n            elif plan == 'wrong' and '1' * tests == output and (grade != 'INVALID'):\n                grade = 'WEAK'\n        print(grade)\nsolve()", "for i in range(int(input())):\n    (m, n) = map(int, input().split())\n    count = 0\n    for i in range(0, m):\n        a = list(map(str, input().split()))\n        if count == 1:\n            continue\n        if a[0] == 'correct':\n            if '0' in a[1]:\n                print('INVALID')\n                count = 1\n        elif '0' not in a[1]:\n            count = 2\n    if count == 0:\n        print('FINE')\n    elif count == 2:\n        print('WEAK')", "test = int(input())\nwhile test > 0:\n    l1 = input().split(' ')\n    n = int(l1[0])\n    invalid = False\n    weak = False\n    while n > 0:\n        strList = input().split(' ')\n        if strList[0] == 'correct':\n            if '0' in strList[1]:\n                invalid = True\n        elif strList[0] == 'wrong':\n            if '0' not in strList[1]:\n                weak = True\n        n = n - 1\n    if invalid:\n        print('INVALID')\n    elif weak:\n        print('WEAK')\n    else:\n        print('FINE')\n    test -= 1", "test = int(input())\nwhile test > 0:\n    l1 = input().split(' ')\n    n = int(l1[0])\n    invalid = False\n    weak = False\n    while n > 0:\n        strList = input().split(' ')\n        if strList[0] == 'correct':\n            if '0' in strList[1]:\n                invalid = True\n        elif strList[0] == 'wrong':\n            if '0' not in strList[1]:\n                weak = True\n        n = n - 1\n    if invalid:\n        print('INVALID')\n    elif weak:\n        print('WEAK')\n    else:\n        print('FINE')\n    test -= 1", "T = int(input())\ncon = 0\nwhile con < T:\n    conn = 0\n    intent = []\n    resi = []\n    inpi = input().split()\n    N = int(inpi[0])\n    M = int(inpi[1])\n    weak = False\n    invalid = False\n    while conn < N:\n        inp = input().split()\n        tr = inp[0]\n        mi = inp[1]\n        intent.append(tr)\n        resi.append(mi)\n        conn += 1\n    control = 0\n    while control < len(intent):\n        if intent[control] == 'correct':\n            if '0' in resi[control]:\n                invalid = True\n        elif intent[control] == 'wrong':\n            if '0' not in resi[control]:\n                weak = True\n        control += 1\n    if invalid:\n        print('INVALID')\n    elif weak:\n        print('WEAK')\n    else:\n        print('FINE')\n    con += 1", "for i in range(int(input())):\n    (m, n) = map(int, input().split())\n    l1 = []\n    a = 0\n    b = 0\n    c = 0\n    d = 0\n    for i in range(m):\n        l = input().split(' ')\n        a1 = list(l)\n        if a1[0] == 'correct' and a1[1].count('1') == n:\n            a += 1\n        elif a1[0] == 'correct' and a1[1].count('1') < n:\n            b += 1\n        elif a1[0] == 'wrong' and a1[1].count('1') < n:\n            c += 1\n        elif a1[0] == 'wrong' and a1[1].count('1') == n:\n            d += 1\n    if a >= 1 and b == 0 and (c >= 1) and (d == 0):\n        print('FINE')\n    elif b != 0:\n        print('INVALID')\n    elif b == 0 and d >= 1:\n        print('WEAK')", "for i in range(int(input())):\n    (m, n) = map(int, input().split())\n    l1 = []\n    a = 0\n    b = 0\n    c = 0\n    d = 0\n    for i in range(m):\n        l = input().split(' ')\n        a1 = list(l)\n        if a1[0] == 'correct' and a1[1].count('1') == n:\n            a += 1\n        elif a1[0] == 'correct' and a1[1].count('1') < n:\n            b += 1\n        elif a1[0] == 'wrong' and a1[1].count('1') < n:\n            c += 1\n        elif a1[0] == 'wrong' and a1[1].count('1') == n:\n            d += 1\n    if a >= 1 and b == 0 and (c >= 1) and (d == 0):\n        print('FINE')\n    elif b != 0:\n        print('INVALID')\n    elif b == 0 and d >= 1:\n        print('WEAK')", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    ii = 0\n    w = 0\n    for i in range(m):\n        (state, output) = input().split()\n        if state == 'correct':\n            if set(list(output)) != set('1'):\n                ii = 1\n        elif set(list(output)) == set('1'):\n            w = 1\n    if ii:\n        print('INVALID')\n    elif w:\n        print('WEAK')\n    else:\n        print('FINE')", "t = int(input())\nfor _ in range(t):\n    (c, q) = map(str, input().split())\n    (c, q) = (int(c), int(q))\n    c1 = 0\n    l = []\n    a = True\n    b = True\n    for i in range(c):\n        (s1, s2) = map(str, input().split())\n        l.append([s1, s2])\n    for i in l:\n        (s1, s2) = (i[0], i[1])\n        if s1 == 'correct' and s2.count('1') != q:\n            a = False\n        elif s1 == 'wrong' and s2.count('1') == q:\n            b = False\n    if a and b:\n        print('FINE')\n    elif a and (not b):\n        print('WEAK')\n    else:\n        print('INVALID')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    FINE = 0\n    INVALID = 0\n    WEAK = 0\n    for i in range(n):\n        (t, l) = input().split()\n        l = list(map(int, list(l)))\n        if sum(l) == len(l) and t == 'correct':\n            FINE = 1\n        elif sum(l) < len(l) and t == 'wrong':\n            FINE = 1\n        elif sum(l) < len(l) and t == 'correct':\n            INVALID = 1\n        elif sum(l) == len(l) and t == 'wrong':\n            WEAK = 1\n    if INVALID:\n        print('INVALID')\n    elif WEAK:\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    res = 'FINE'\n    for __ in range(n):\n        (ans, digits) = input().split()\n        if res == 'INVALID':\n            continue\n        if ans == 'correct' and any([x == '0' for x in digits]):\n            res = 'INVALID'\n        elif ans == 'wrong' and all([x == '1' for x in digits]):\n            res = 'WEAK'\n    print(res)", "for _ in range(int(input())):\n    (codes, questions) = list(map(int, input().split()))\n    things = []\n    for number in range(codes):\n        (expected, real) = list(input().split())\n        correct = [1] * questions\n        correct = ''.join(list(map(str, correct)))\n        if expected == 'correct' and real == correct:\n            things.append('FINE')\n        elif expected == 'wrong' and real != correct:\n            things.append('FINE')\n        elif expected == 'wrong' and real == correct:\n            things.append('WEAK')\n        else:\n            things.append('INVALID')\n    if 'INVALID' in things:\n        print('INVALID')\n    elif 'WEAK' in things:\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (weak, invalid) = (False, False)\n    for _ in range(n):\n        (s, num) = input().split()\n        if s == 'correct' and num.count('0') > 0:\n            invalid = True\n        elif s == 'wrong':\n            if num.count('1') == m:\n                weak = True\n    if invalid:\n        print('INVALID')\n    elif weak:\n        print('WEAK')\n    else:\n        print('FINE')", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    okay = 'FINE'\n    for x in range(n):\n        list1 = list(map(str, input().split()))\n        check = list1[0]\n        sum1 = 0\n        for z in list1[1]:\n            sum1 += int(z)\n        if check == 'correct' and sum1 < m:\n            if okay == 'FINE' or okay == 'WEAK':\n                okay = 'INVALID'\n        elif check == 'wrong' and sum1 == m:\n            if okay == 'FINE':\n                okay = 'WEAK'\n        elif okay != 'INVALID' and okay != 'WEAK':\n            okay = 'FINE'\n    print(okay)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    okay = 'FINE'\n    for x in range(n):\n        list1 = list(map(str, input().split()))\n        check = list1[0]\n        sum1 = 0\n        for z in list1[1]:\n            sum1 += int(z)\n        if check == 'correct' and sum1 < m:\n            if okay == 'FINE' or okay == 'WEAK':\n                okay = 'INVALID'\n        elif check == 'wrong' and sum1 == m:\n            if okay == 'FINE':\n                okay = 'WEAK'\n        elif okay != 'INVALID' and okay != 'WEAK':\n            okay = 'FINE'\n    print(okay)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    a = 0\n    for i in range(x):\n        ab = input().split()\n        if a == 1:\n            continue\n        if ab[0][0] == 'c':\n            if '0' in ab[1]:\n                print('INVALID')\n                a = 1\n        elif '0' not in ab[1]:\n            a = 2\n    if a == 0:\n        print('FINE')\n    elif a == 2:\n        print('WEAK')", "for tc in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(input().split())\n    ans = 'FINE'\n    for i in range(n):\n        if a[i][0] == 'correct':\n            if '0' in a[i][1]:\n                ans = 'INVALID'\n        elif a[i][0] == 'wrong' and ans != 'INVALID':\n            if '0' not in a[i][1]:\n                ans = 'WEAK'\n    print(ans)", "for tc in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(input().split())\n    ans = 'FINE'\n    for i in range(n):\n        if a[i][0] == 'correct':\n            if '0' in a[i][1]:\n                ans = 'INVALID'\n        elif a[i][0] == 'wrong' and ans != 'INVALID':\n            if '0' not in a[i][1]:\n                ans = 'WEAK'\n    print(ans)", "for t in range(int(input())):\n    l = []\n    (n, m) = map(int, input().split())\n    for x in range(n):\n        s = input().split(' ')\n        l.append(s)\n    flag = 0\n    for x in l:\n        if x[0] == 'correct':\n            if x[1].count('0') > 0:\n                flag = 1\n        elif x[0] == 'wrong':\n            if x[1].count('0') == 0 and flag != 1:\n                flag = 2\n    if flag == 0:\n        print('FINE')\n    elif flag == 1:\n        print('INVALID')\n    elif flag == 2:\n        print('WEAK')", "for t in range(int(input())):\n    l = []\n    (n, m) = map(int, input().split())\n    for x in range(n):\n        s = input().split(' ')\n        l.append(s)\n    flag = 0\n    for x in l:\n        if x[0] == 'correct':\n            if x[1].count('0') > 0:\n                flag = 1\n        elif x[0] == 'wrong':\n            if x[1].count('0') == 0 and flag != 1:\n                flag = 2\n    if flag == 0:\n        print('FINE')\n    elif flag == 1:\n        print('INVALID')\n    elif flag == 2:\n        print('WEAK')", "for _ in range(int(input())):\n    NM = input().split()\n    N = int(NM[0])\n    M = int(NM[1])\n    a = 2\n    for i in range(N):\n        validM = input().split()\n        valid = validM[0]\n        string = validM[1]\n        if valid == 'correct':\n            for j in range(M):\n                if string[j] != '1':\n                    a = 0\n                    break\n        if valid == 'wrong' and a != 0:\n            if '0' not in string:\n                a = 1\n    if a == 2:\n        print('FINE')\n    elif a == 1:\n        print('WEAK')\n    else:\n        print('INVALID')", "for _ in range(int(input())):\n    NM = input().split()\n    N = int(NM[0])\n    M = int(NM[1])\n    a = 2\n    for i in range(N):\n        validM = input().split()\n        valid = validM[0]\n        string = validM[1]\n        if valid == 'correct':\n            for j in range(M):\n                if string[j] != '1':\n                    a = 0\n                    break\n        if valid == 'wrong' and a != 0:\n            if '0' not in string:\n                a = 1\n    if a == 2:\n        print('FINE')\n    elif a == 1:\n        print('WEAK')\n    else:\n        print('INVALID')", "t = int(input())\nfor tc in range(t):\n    (n, m) = tuple(map(int, input().split()))\n    (inv, wk, crt) = (False, False, False)\n    for i in range(n):\n        list_m = input().split()\n        if list_m[0] == 'correct':\n            if '0' not in list_m[1]:\n                crt = True\n            else:\n                inv = True\n        elif list_m[0] == 'wrong':\n            if '0' not in list_m[1]:\n                wk = True\n    if inv:\n        print('INVALID')\n    elif wk:\n        print('WEAK')\n    else:\n        print('FINE')", "t = int(input())\nfor _ in range(t):\n    (n, m) = tuple(map(int, input().split()))\n    inv = False\n    wek = False\n    for test in range(n):\n        (a, b) = input().split()\n        if a == 'correct':\n            if '0' in b:\n                inv = True\n        elif a == 'wrong':\n            if '0' not in b:\n                wek = True\n    if inv:\n        print('INVALID')\n    elif wek:\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 1\n    for i in range(n):\n        (s, a) = input().split()\n        if s == 'correct':\n            if (pow(10, m) - 1) // 9 - int(a) != 0:\n                ans *= 0\n        elif (pow(10, m) - 1) // 9 - int(a) == 0:\n            ans *= 2\n    if ans == 1:\n        print('FINE')\n    elif ans == 0:\n        print('INVALID')\n    else:\n        print('WEAK')", "T = int(input())\nfor i in range(T):\n    (Ns, Mt) = tuple(map(int, input().split()))\n    k = 1\n    for i in range(Ns):\n        l = input().split()\n        ans = l[0]\n        l1 = list(map(int, l[1].strip()))\n        l1.sort()\n        if ans == 'correct' and l1[0] == 1 or (ans == 'wrong' and l1[0] == 0):\n            k *= 1\n        elif ans == 'correct' and l1[0] == 0:\n            k *= 0\n        elif ans == 'wrong' and l1[0] == 1:\n            k *= 2\n    if k == 1:\n        print('FINE')\n    elif k == 0:\n        print('INVALID')\n    else:\n        print('WEAK')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 1\n    for i in range(n):\n        (s, a) = input().split()\n        if s == 'correct':\n            if (pow(10, m) - 1) // 9 - int(a) != 0:\n                ans *= 0\n        elif (pow(10, m) - 1) // 9 - int(a) == 0:\n            ans *= 2\n    if ans == 1:\n        print('FINE')\n    elif ans == 0:\n        print('INVALID')\n    else:\n        print('WEAK')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 1\n    for i in range(n):\n        (s, a) = input().split()\n        if s == 'correct':\n            if (pow(10, m) - 1) // 9 - int(a) != 0:\n                ans *= 0\n        elif (pow(10, m) - 1) // 9 - int(a) == 0:\n            ans *= 2\n    if ans == 1:\n        print('FINE')\n    elif ans == 0:\n        print('INVALID')\n    else:\n        print('WEAK')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 1\n    for i in range(n):\n        (cond, String) = input().split()\n        if cond == 'correct':\n            if (pow(10, m) - 1) // 9 - int(String) != 0:\n                ans *= 0\n        elif (pow(10, m) - 1) // 9 - int(String) == 0:\n            ans *= 2\n    if ans == 0:\n        print('INVALID')\n    elif ans == 1:\n        print('FINE')\n    else:\n        print('WEAK')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 1\n    for i in range(n):\n        (cond, String) = input().split()\n        if cond == 'correct':\n            if (pow(10, m) - 1) // 9 - int(String) != 0:\n                ans *= 0\n        elif (pow(10, m) - 1) // 9 - int(String) == 0:\n            ans *= 2\n    if ans == 0:\n        print('INVALID')\n    elif ans == 1:\n        print('FINE')\n    else:\n        print('WEAK')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 1\n    for i in range(n):\n        (cond, String) = input().split()\n        if cond == 'correct':\n            if (pow(10, m) - 1) // 9 - int(String) != 0:\n                ans *= 0\n        elif (pow(10, m) - 1) // 9 - int(String) == 0:\n            ans *= 2\n    if ans == 0:\n        print('INVALID')\n    elif ans == 1:\n        print('FINE')\n    else:\n        print('WEAK')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 1\n    for i in range(n):\n        (cond, String) = input().split()\n        if cond == 'correct':\n            if (pow(10, m) - 1) // 9 - int(String) != 0:\n                ans *= 0\n        elif (pow(10, m) - 1) // 9 - int(String) == 0:\n            ans *= 2\n    if ans == 0:\n        print('INVALID')\n    elif ans == 1:\n        print('FINE')\n    else:\n        print('WEAK')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 1\n    for i in range(n):\n        (cond, String) = input().split()\n        if cond == 'correct':\n            if (pow(10, m) - 1) // 9 - int(String) != 0:\n                ans *= 0\n        elif (pow(10, m) - 1) // 9 - int(String) == 0:\n            ans *= 2\n    if ans == 0:\n        print('INVALID')\n    elif ans == 1:\n        print('FINE')\n    else:\n        print('WEAK')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = 1\n    d = 1\n    for __ in range(a):\n        (x, y) = map(str, input().split())\n        if x == 'correct' and '0' in y:\n            c = 0\n        elif x == 'wrong' and '0' not in y:\n            d = 0\n    if not c:\n        print('INVALID')\n    elif not d:\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = 1\n    d = 1\n    for __ in range(a):\n        (x, y) = map(str, input().split())\n        if x == 'correct' and '0' in y:\n            c = 0\n        elif x == 'wrong' and '0' not in y:\n            d = 0\n    if not c:\n        print('INVALID')\n    elif not d:\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = 1\n    d = 1\n    for __ in range(a):\n        (x, y) = map(str, input().split())\n        if x == 'correct' and '0' in y:\n            c = 0\n        elif x == 'wrong' and '0' not in y:\n            d = 0\n    if not c:\n        print('INVALID')\n    elif not d:\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = 1\n    d = 1\n    for __ in range(a):\n        (x, y) = map(str, input().split())\n        if x == 'correct' and '0' in y:\n            c = 0\n        elif x == 'wrong' and '0' not in y:\n            d = 0\n    if not c:\n        print('INVALID')\n    elif not d:\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    flag_invalid = False\n    flag_weak = False\n    for i in range(n):\n        (test, string) = map(str, input().split())\n        if test == 'correct' and '0' in string:\n            flag_invalid = True\n        if test == 'wrong' and '0' not in string:\n            flag_weak = True\n    if flag_invalid:\n        print('INVALID')\n    elif flag_weak:\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    flag_invalid = False\n    flag_weak = False\n    for i in range(n):\n        (test, string) = map(str, input().split())\n        if test == 'correct' and '0' in string:\n            flag_invalid = True\n        if test == 'wrong' and '0' not in string:\n            flag_weak = True\n    if flag_invalid:\n        print('INVALID')\n    elif flag_weak:\n        print('WEAK')\n    else:\n        print('FINE')", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    flag = 0\n    count = 0\n    for i in range(n):\n        (l, k) = map(str, input().split())\n        if l == 'correct' and k.count('1') < m:\n            flag = 2\n        elif l == 'wrong' and k.count('1') == m:\n            count = 2\n        else:\n            pass\n    if flag == 0 and count == 2:\n        print('WEAK')\n    elif flag == 2:\n        print('INVALID')\n    else:\n        print('FINE')", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    out = 'FINE'\n    for _ in range(n):\n        (a, b) = input().split()\n        x = set(b)\n        if a == 'correct':\n            if x != {'1'}:\n                out = 'INVALID'\n        elif x == {'1'}:\n            out = 'WEAK' if out != 'INVALID' else out\n    print(out)", "for _ in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    c = ''\n    for i in range(N):\n        x = list(input().split())\n        if c != 'INVALID':\n            if x[0] == 'correct' and x[1].find('0') != -1:\n                c = 'INVALID'\n            if x[0] == 'wrong' and x[1].find('0') == -1:\n                c = 'WEAK'\n    if c == '':\n        print('FINE')\n    else:\n        print(c)", "T = int(input())\nfor i in range(T):\n    (N, M) = map(int, input().split())\n    test = 'FINE'\n    flag = False\n    for j in range(N):\n        [res, sys] = input().split()\n        if res == 'correct':\n            if '0' in sys:\n                test = 'INVALID'\n                flag = True\n        elif not flag:\n            if '0' not in sys:\n                test = 'WEAK'\n    print(test)", "T = int(input())\nfor i in range(T):\n    (N, M) = map(int, input().split())\n    test = 'FINE'\n    flag = False\n    for j in range(N):\n        [res, sys] = input().split()\n        if res == 'correct':\n            if '0' in sys:\n                test = 'INVALID'\n                flag = True\n        elif not flag:\n            if '0' not in sys:\n                test = 'WEAK'\n    print(test)", "for _ in range(int(input())):\n    (N, M) = list(map(int, input().split()))\n    c = ''\n    for i in range(N):\n        x = list(input().split())\n        if c != 'INVALID':\n            if x[0] == 'correct' and x[1].find('0') != -1:\n                c = 'INVALID'\n            if x[0] == 'wrong' and x[1].find('0') == -1:\n                c = 'WEAK'\n    if c == '':\n        print('FINE')\n    else:\n        print(c)", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    (inv, weak) = ('', '')\n    for i in range(N):\n        A = input().split()\n        if A[0] == 'correct' and A[1].count('1') != M:\n            inv = 'i'\n        elif A[0] == 'wrong' and A[1].count('1') == M:\n            weak = 'w'\n    if inv == 'i':\n        print('INVALID')\n    elif weak == 'w':\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    invalid = 0\n    fine = 0\n    weak = 0\n    for i in range(n):\n        (s1, s2) = map(str, input().split())\n        for j in range(m):\n            if s1 == 'correct' and s2.count('0') != 0:\n                invalid = 1\n            elif s1 == 'wrong' and s2.count('0') == 0:\n                weak = 1\n    if invalid == 1:\n        print('INVALID')\n    elif weak == 1:\n        print('WEAK')\n    else:\n        print('FINE')", "t = int(input())\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    invalid = False\n    weak = False\n    for i in range(m):\n        (c, s) = map(str, input().split())\n        if c == 'correct' and s != '1' * n:\n            invalid = True\n        if c == 'wrong' and '0' not in s:\n            weak = True\n    if invalid:\n        print('INVALID')\n        continue\n    if weak:\n        print('WEAK')\n        continue\n    print('FINE')", "T = int(input())\nfor i in range(T):\n    (N, M) = map(int, input().split())\n    test = 'FINE'\n    flag = False\n    for j in range(N):\n        [res, sys] = input().split()\n        if res == 'correct':\n            if '0' in sys:\n                test = 'INVALID'\n                flag = True\n        elif not flag:\n            if '0' not in sys:\n                test = 'WEAK'\n    print(test)", "T = int(input())\nfor i in range(T):\n    (N, M) = map(int, input().split())\n    test = 'FINE'\n    flag = False\n    for j in range(N):\n        [res, sys] = input().split()\n        if res == 'correct':\n            if '0' in sys:\n                test = 'INVALID'\n                flag = True\n        elif not flag:\n            if '0' not in sys:\n                test = 'WEAK'\n    print(test)", "inp = input()\nnum_cases = int(inp)\nfor i in range(num_cases):\n    inp = input()\n    inp = inp.split(' ')\n    n = int(inp[0])\n    m = int(inp[1])\n    result = ''\n    for j in range(n):\n        inp = input()\n        inp = inp.split(' ')\n        solution_tag = inp[0]\n        test_results_string = inp[1]\n        if solution_tag == 'correct':\n            if test_results_string == '1' * m:\n                pass\n            else:\n                result = 'INVALID'\n        elif solution_tag == 'wrong':\n            if test_results_string == '1' * m:\n                if result is not 'INVALID':\n                    result = 'WEAK'\n            else:\n                pass\n    if result == '':\n        result = 'FINE'\n    print(result)", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nmsg = ['INVALID', 'WEAK', 'FINE']\nfor _ in range(get_int()):\n    (N, M) = get_mint()\n    status = 2\n    for _ in range(N):\n        test = input().split()\n        results = set(test[1])\n        if test[0] == 'correct':\n            if '0' in results:\n                status = min(0, status)\n        elif '0' not in results:\n            status = min(1, status)\n    print(msg[status])", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nk = ['INVALID', 'WEAK', 'FINE']\nfor _ in range(get_int()):\n    (v, m) = get_mint()\n    status = 2\n    for _ in range(v):\n        test = input().split()\n        results = set(test[1])\n        if test[0] == 'correct':\n            if '0' in results:\n                status = min(0, status)\n        elif '0' not in results:\n            status = min(1, status)\n    print(k[status])", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nmsg = ['INVALID', 'WEAK', 'FINE']\nfor _ in range(get_int()):\n    (N, M) = get_mint()\n    status = 2\n    for _ in range(N):\n        test = input().split()\n        if test[0] == 'correct' and test[1].count('0') > 0:\n            status = min(0, status)\n        elif test[0] == 'wrong' and test[1].count('0') == 0:\n            status = min(1, status)\n    print(msg[status])", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nmsg = ['INVALID', 'WEAK', 'FINE']\nfor _ in range(get_int()):\n    (N, M) = get_mint()\n    status = 2\n    for _ in range(N):\n        test = input().split()\n        if test[0] == 'correct' and test[1].count('0') > 0:\n            status = min(0, status)\n        elif test[0] == 'wrong' and test[1].count('0') == 0:\n            status = min(1, status)\n    print(msg[status])", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nmsg = ['INVALID', 'WEAK', 'FINE']\nfor _ in range(get_int()):\n    (N, M) = get_mint()\n    status = 2\n    for _ in range(N):\n        test = input().split()\n        results = set(test[1])\n        if test[0] == 'correct':\n            if '0' in results:\n                status = min(0, status)\n        elif '0' not in results:\n            status = min(1, status)\n    print(msg[status])", "get_int = lambda : int(input())\nget_mint = lambda : list(map(int, input().split()))\nmsg = ['INVALID', 'WEAK', 'FINE']\nfor _ in range(get_int()):\n    (N, M) = get_mint()\n    status = 2\n    for _ in range(N):\n        test = input().split()\n        if test[0] == 'correct':\n            if test[1].count('0') > 0:\n                status = min(0, status)\n        elif test[1].count('0') == 0:\n            status = min(1, status)\n    print(msg[status])", "t = input()\nfor c in range(0, int(t)):\n    s = list(map(int, input().split()))\n    (n, m) = (s[0], s[1])\n    result = []\n    for _ in range(n):\n        l1 = list(input().split())\n        if l1[0] == 'correct':\n            if all((spot == '1' for spot in l1[1])):\n                result.append('F')\n            else:\n                result.append('I')\n        elif l1[0] == 'wrong':\n            if any((spot == '0' for spot in l1[1])):\n                result.append('F')\n            else:\n                result.append('W')\n    if all((spot == 'F' for spot in result)):\n        print('FINE')\n    elif any((spot == 'I' for spot in result)):\n        print('INVALID')\n    else:\n        print('WEAK')", "for i in range(int(input())):\n    s = list(map(int, input().split()))\n    (n, m) = (s[0], s[1])\n    result = []\n    for _ in range(n):\n        l1 = list(input().split())\n        if l1[0] == 'correct':\n            if all((spot == '1' for spot in l1[1])):\n                result.append('F')\n            else:\n                result.append('I')\n        elif l1[0] == 'wrong':\n            if any((spot == '0' for spot in l1[1])):\n                result.append('F')\n            else:\n                result.append('W')\n    if all((spot == 'F' for spot in result)):\n        print('FINE')\n    elif any((spot == 'I' for spot in result)):\n        print('INVALID')\n    else:\n        print('WEAK')", "for _ in range(int(input())):\n    s_t = list(map(int, input().split()))\n    (s, t) = (s_t[0], s_t[1])\n    result = []\n    for _ in range(s):\n        soultion_list = list(input().split())\n        if soultion_list[0] == 'correct':\n            if all((spot == '1' for spot in soultion_list[1])):\n                result.append('F')\n            else:\n                result.append('I')\n        elif soultion_list[0] == 'wrong':\n            if any((spot == '0' for spot in soultion_list[1])):\n                result.append('F')\n            else:\n                result.append('W')\n    if all((spot == 'F' for spot in result)):\n        print('FINE')\n    elif any((spot == 'I' for spot in result)):\n        print('INVALID')\n    else:\n        print('WEAK')", "for _ in range(int(input())):\n    s_t = list(map(int, input().split()))\n    (s, t) = (s_t[0], s_t[1])\n    result = []\n    for _ in range(s):\n        soultion_list = list(input().split())\n        if soultion_list[0] == 'correct':\n            if all((spot == '1' for spot in soultion_list[1])):\n                result.append('F')\n            else:\n                result.append('I')\n        elif soultion_list[0] == 'wrong':\n            if any((spot == '0' for spot in soultion_list[1])):\n                result.append('F')\n            else:\n                result.append('W')\n    if all((spot == 'F' for spot in result)):\n        print('FINE')\n    elif any((spot == 'I' for spot in result)):\n        print('INVALID')\n    else:\n        print('WEAK')", "for _ in range(int(input())):\n    s_t = list(map(int, input().split()))\n    (s, t) = (s_t[0], s_t[1])\n    result = []\n    for _ in range(s):\n        soultion_list = list(input().split())\n        if soultion_list[0] == 'correct':\n            if all((spot == '1' for spot in soultion_list[1])):\n                result.append('F')\n            else:\n                result.append('I')\n        elif soultion_list[0] == 'wrong':\n            if any((spot == '0' for spot in soultion_list[1])):\n                result.append('F')\n            else:\n                result.append('W')\n    if all((spot == 'F' for spot in result)):\n        print('FINE')\n    elif any((spot == 'I' for spot in result)):\n        print('INVALID')\n    else:\n        print('WEAK')", "for _ in range(int(input())):\n    s_t = list(map(int, input().split()))\n    (s, t) = (s_t[0], s_t[1])\n    result = []\n    for _ in range(s):\n        soultion_list = list(input().split())\n        if soultion_list[0] == 'correct':\n            if all((spot == '1' for spot in soultion_list[1])):\n                result.append('F')\n            else:\n                result.append('I')\n        elif soultion_list[0] == 'wrong':\n            if any((spot == '0' for spot in soultion_list[1])):\n                result.append('F')\n            else:\n                result.append('W')\n    if all((spot == 'F' for spot in result)):\n        print('FINE')\n    elif any((spot == 'I' for spot in result)):\n        print('INVALID')\n    else:\n        print('WEAK')", "t = int(input())\nwhile t > 0:\n    (a, b) = map(int, input().split())\n    r = a\n    if a > 1 and b > 1:\n        e = 0\n        f = 0\n        m = 0\n        k = '1' * b\n        for j in range(a):\n            (c, d) = map(str, input().split())\n            if d == k and c.lower() == 'wrong':\n                e = 1\n            elif d != k and c.lower() == 'correct':\n                f = 1\n                q = f\n            else:\n                m = 0\n        if e == 1 and f == 0:\n            print('WEAK')\n        elif f == 1 or (e == 1 and f == 1):\n            print('INVALID')\n        else:\n            print('FINE')\n    else:\n        print('INVALID')\n    t = t - 1", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l1 = []\n    l2 = []\n    for i in range(n):\n        s = input().split()\n        if s[0] == 'correct':\n            if '0' in s[1]:\n                l1 = l1 + ['0']\n            else:\n                l1 = l1 + ['1']\n        elif '0' in s[1]:\n            l2 = l2 + ['0']\n        else:\n            l2 = l2 + ['1']\n    if '0' in l1:\n        print('INVALID')\n    elif '1' in l2:\n        print('WEAK')\n    else:\n        print('FINE')", "t = int(input())\nfor i in range(t):\n    (N, M) = input().split()\n    N = int(N)\n    M = int(M)\n    res = []\n    for i in range(N):\n        (S, T) = input().split()\n        if S == 'correct':\n            if '0' in T:\n                res.append(-1)\n            else:\n                res.append(1)\n        elif '0' in T:\n            res.append(1)\n        else:\n            res.append(0)\n    if -1 in res:\n        print('INVALID')\n    elif -1 not in res and 0 in res:\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    res = 'fine'\n    for i in range(n):\n        (check, tests) = input().split()\n        if check == 'correct':\n            if tests == '0' * m and res == 'fine':\n                res = 'weak'\n            elif '0' in tests:\n                res = 'invalid'\n            else:\n                pass\n        elif tests == '1' * m and res == 'fine':\n            res = 'weak'\n    print(res.upper())", "for i in range(0, int(input())):\n    (n, m) = input().split()\n    (n, m) = (int(n), int(m))\n    (f1, f2) = (0, 0)\n    for i in range(0, n):\n        (status, case) = input().split()\n        if status == 'correct' and '0' in case:\n            f1 = 1\n        if status == 'wrong' and '0' not in case:\n            f2 = 1\n    if f1:\n        print('INVALID')\n    elif f2:\n        print('WEAK')\n    else:\n        print('FINE')", "for i in range(int(input())):\n    (m, n) = map(int, input().split())\n    sol = 'FINE'\n    for j in range(m):\n        st = input().split()\n        cas = st[0]\n        an = st[1]\n        if cas == 'correct':\n            if an.count('0') > 0:\n                sol = 'INVALID'\n        if cas == 'wrong':\n            if an.count('1') == n:\n                if sol != 'INVALID':\n                    sol = 'WEAK'\n    print(sol)", "for i in range(int(input())):\n    (m, n) = map(int, input().split())\n    sol = 'FINE'\n    for j in range(m):\n        st = input().split()\n        cas = st[0]\n        an = st[1]\n        if cas == 'correct':\n            if an.count('0') > 0:\n                sol = 'INVALID'\n        if cas == 'wrong':\n            if an.count('1') == n:\n                if sol != 'INVALID':\n                    sol = 'WEAK'\n    print(sol)", "for i in range(int(input())):\n    (n, m) = input().split()\n    (n, m) = (int(n), int(m))\n    b = 0\n    flag = 0\n    for i in range(n):\n        (x, s) = input().split()\n        if x == 'correct':\n            if '0' in s:\n                b = 1\n        elif '0' not in s:\n            flag = 1\n    if b:\n        print('INVALID')\n    elif flag:\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    w = []\n    c = []\n    for _ in range(a):\n        (x, y) = input().split()\n        if x == 'correct':\n            c.append(len(set(y)))\n        else:\n            w.append(len(set(y)))\n    if 2 in c:\n        print('INVALID')\n    elif 1 in w:\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    w = []\n    c = []\n    for _ in range(a):\n        (x, y) = input().split()\n        if x == 'correct':\n            c.append(len(set(y)))\n        else:\n            w.append(len(set(y)))\n    if 2 in c:\n        print('INVALID')\n    elif 1 in w:\n        print('WEAK')\n    else:\n        print('FINE')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = []\n    w = []\n    lis = []\n    for __ in range(n):\n        (s0, s1) = map(str, input().split())\n        if s0 == 'correct':\n            c.append(len(set(s1)))\n        else:\n            w.append(len(set(s1)))\n    if 2 in c:\n        print('INVALID')\n    elif 1 in w:\n        print('WEAK')\n    else:\n        print('FINE')", "for i in range(int(input())):\n    (n, m) = input().split()\n    (n, m) = (int(n), int(m))\n    b = 0\n    flag = 0\n    for i in range(n):\n        (x, s) = input().split()\n        if x == 'correct':\n            if '0' in s:\n                b = 1\n        elif '0' not in s:\n            flag = 1\n    if b:\n        print('INVALID')\n    elif flag:\n        print('WEAK')\n    else:\n        print('FINE')"]