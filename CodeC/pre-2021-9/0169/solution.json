["T = int(input())\nfor k in range(T):\n    s = input()\n    a = list(s.strip())\n    b = set(a)\n    count = 0\n    counts = 0\n    for i in b:\n        if a.count(i) % 2 == 0:\n            count = count + a.count(i) // 2\n        elif a.count(i) % 2 == 1:\n            count = count + (a.count(i) // 2 + 1)\n    print(count)", "from collections import Counter\nfor i in range(int(input())):\n    s = input()\n    s = s.strip()\n    a = Counter(s)\n    count = 0\n    for i in a:\n        if a[i] % 2 == 0:\n            count += a[i] // 2\n        else:\n            count += a[i] // 2 + 1\n    print(count)", "import math\nt = int(input())\nfor _ in range(t):\n    s = input()\n    l = list(s.strip())\n    set1 = set(l)\n    cost = 0\n    for i in set1:\n        cost += math.ceil(l.count(i) / 2)\n    print(cost)", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    s = s.strip()\n    d = Counter(s)\n    s1 = 0\n    for i in d:\n        if d[i] % 2 == 0:\n            s1 += d[i] // 2\n        else:\n            s1 += d[i] // 2 + 1\n    print(s1)", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    s = s.strip()\n    d = Counter(s)\n    s1 = 0\n    for i in d:\n        if d[i] % 2 == 0:\n            s1 += d[i] // 2\n        else:\n            s1 += d[i] // 2 + 1\n    print(s1)", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    s = s.strip()\n    d = Counter(s)\n    s1 = 0\n    for i in d:\n        if d[i] % 2 == 0:\n            s1 += d[i] // 2\n        else:\n            s1 += d[i] // 2 + 1\n    print(s1)", "for _ in range(int(input())):\n    l = input()\n    s = list(l.strip())\n    s1 = set(s)\n    s2 = 0\n    for i in s1:\n        if s.count(i) % 2 == 0:\n            a = s.count(i) // 2\n        else:\n            a = s.count(i) // 2 + 1\n        s2 = s2 + a\n    print(s2)", "for _ in range(int(input())):\n    s = input()\n    l = list(s.strip())\n    set1 = set(l)\n    cost = 0\n    for i in set1:\n        if l.count(i) % 2 == 0:\n            a = l.count(i) // 2\n        else:\n            a = l.count(i) // 2 + 1\n        cost = cost + a\n    print(cost)", "for _ in range(int(input())):\n    s = input()\n    l = list(s.strip())\n    set1 = set(l)\n    cost = 0\n    for i in set1:\n        if l.count(i) % 2 == 0:\n            a = l.count(i) // 2\n        else:\n            a = l.count(i) // 2 + 1\n        cost = cost + a\n    print(cost)", "import math\nt = int(input())\nfor _ in range(t):\n    s = input()\n    l = list(s.strip())\n    set1 = set(l)\n    cost = 0\n    for i in set1:\n        cost += math.ceil(l.count(i) / 2)\n    print(cost)", "for _ in range(int(input())):\n    x = list(input().strip())\n    s = set(x)\n    cost = 0\n    for i in s:\n        cost += x.count(i) // 2 + x.count(i) % 2\n    print(cost)", "for _ in range(int(input())):\n    s = list(input().strip())\n    se = set(s)\n    c = 0\n    for i in se:\n        c += s.count(i) // 2 + s.count(i) % 2\n    print(c)", "for _ in range(int(input())):\n    s = list(input().strip())\n    se = set(s)\n    c = 0\n    for i in se:\n        c += s.count(i) // 2 + s.count(i) % 2\n    print(c)", "t = int(input())\nfor i in range(t):\n    s = input().strip()\n    lst = []\n    l1 = []\n    l2 = []\n    for i in s:\n        lst.append(i)\n    lst.sort()\n    l = len(lst)\n    lst.append(' ')\n    while l != 0:\n        if lst[0] == lst[1]:\n            l1.append(lst[0])\n            lst.remove(lst[0])\n            lst.remove(lst[0])\n            l -= 2\n        else:\n            l2.append(lst[0])\n            lst.remove(lst[0])\n            l -= 1\n    print(len(l1) + len(l2))", "for _ in range(int(input())):\n    s = list(input().strip())\n    se = set(s)\n    c = 0\n    for i in se:\n        c += s.count(i) // 2 + s.count(i) % 2\n    print(c)", "import math\nfor _ in range(int(input())):\n    s = list(input().strip())\n    se = set(s)\n    c = 0\n    for i in se:\n        c += s.count(i) // 2 + s.count(i) % 2\n    print(c)", "from collections import Counter\nfrom math import ceil\nfor i in range(int(input())):\n    s = Counter(input().strip())\n    r = 0\n    for i in s:\n        r += ceil(s[i] / 2)\n    print(r)", "from collections import Counter\nfrom math import ceil\nfor i in range(int(input())):\n    s = Counter(input().strip())\n    r = 0\n    for i in s:\n        r += ceil(s[i] / 2)\n    print(r)", "from collections import Counter\nfrom math import ceil\nfor i in range(int(input())):\n    s = Counter(input().strip())\n    r = 0\n    for i in s:\n        r += s[i] // 2 + s[i] % 2\n    print(r)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    counts = Counter(s)\n    total_cost = 0\n    for count in counts.values():\n        cost = (count + 1) // 2\n        total_cost += cost\n    print(total_cost)", "def s():\n    d = {}\n    S = input().strip()\n    for i in S:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    a = 0\n    for i in d.keys():\n        a += d[i] // 2\n        a += d[i] % 2\n    print(a)\nT = int(input())\nwhile T:\n    s()\n    T -= 1", "t = int(input())\nfor tc in range(t):\n    s = input().strip()\n    dic = {}\n    for j in s:\n        dic[j] = dic.get(j, 0) + 1\n    cost = 0\n    for j in dic:\n        cost = cost + dic[j] // 2 + dic[j] % 2\n    print(cost)", "def solve():\n    dic = {}\n    string = input().strip()\n    for i in string:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    ans = 0\n    for i in dic.keys():\n        ans += dic[i] // 2\n        ans += dic[i] % 2\n    print(ans)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "def solve():\n    dic = {}\n    string = input().strip()\n    for i in string:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    ans = 0\n    for i in dic.keys():\n        ans += dic[i] // 2\n        ans += dic[i] % 2\n    print(ans)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "t = int(input())\nfor i in range(t):\n    s = input().strip()\n    dic = {}\n    for j in s:\n        dic[j] = dic.get(j, 0) + 1\n    cost = 0\n    for j in dic:\n        cost = cost + dic[j] // 2 + dic[j] % 2\n    print(cost)", "t = int(input())\nfor i in range(t):\n    s = input().strip()\n    dic = {}\n    for j in s:\n        dic[j] = dic.get(j, 0) + 1\n    cost = 0\n    for j in dic:\n        cost = cost + dic[j] // 2 + dic[j] % 2\n    print(cost)", "t = int(input())\nfor i in range(t):\n    s = input().strip()\n    lst = []\n    l1 = []\n    l2 = []\n    for i in s:\n        lst.append(i)\n    lst.sort()\n    l = len(lst)\n    lst.append(' ')\n    while l != 0:\n        if lst[0] == lst[1]:\n            l1.append(lst[0])\n            lst.remove(lst[0])\n            lst.remove(lst[0])\n            l -= 2\n        else:\n            l2.append(lst[0])\n            lst.remove(lst[0])\n            l -= 1\n    print(len(l1) + len(l2))", "t = int(input())\nfor i in range(t):\n    s = input().strip()\n    lst = []\n    l1 = []\n    l2 = []\n    for i in s:\n        lst.append(i)\n    lst.sort()\n    l = len(lst)\n    lst.append(' ')\n    while l != 0:\n        if lst[0] == lst[1]:\n            l1.append(lst[0])\n            lst.remove(lst[0])\n            lst.remove(lst[0])\n            l -= 2\n        else:\n            l2.append(lst[0])\n            lst.remove(lst[0])\n            l -= 1\n    print(len(l1) + len(l2))", "def solve():\n    dic = {}\n    string = input().strip()\n    for i in string:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    ans = 0\n    for i in dic.keys():\n        ans += dic[i] // 2\n        ans += dic[i] % 2\n    print(ans)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "def solve():\n    dic = {}\n    string = input().strip()\n    for i in string:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    ans = 0\n    for i in dic.keys():\n        ans += dic[i] // 2\n        ans += dic[i] % 2\n    print(ans)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "t_case = int(input())\nfor i in range(t_case):\n    cost = 0\n    jw = input().strip()\n    jw_li = []\n    for i in jw:\n        if i not in jw_li:\n            jw_li.append(i)\n        else:\n            jw_li.pop(jw_li.index(i))\n            cost += 1\n    print(cost + len(jw_li))", "import math\nn = int(input())\nfor i in range(n):\n    s = input().strip()\n    l = set(list(s))\n    c = 0\n    for i in l:\n        d = s.count(i)\n        c += math.ceil(d / 2)\n    print(c)", "from math import ceil\nT = int(input())\nfor _ in range(T):\n    s = input().strip()\n    l = set(s)\n    c = 0\n    for i in l:\n        c += ceil(s.count(i) / 2)\n    print(c)", "for _ in range(int(input())):\n    s = input().strip()\n    a = set(map(str, s))\n    res = 0\n    for i in a:\n        x = s.count(i)\n        res += x // 2 + x % 2\n    print(res)", "for _ in range(int(input())):\n    s = input().strip()\n    a = set(map(str, s))\n    res = 0\n    for i in a:\n        x = s.count(i)\n        res += x // 2 + x % 2\n    print(res)", "for _ in range(int(input())):\n    s = input().strip()\n    count = 0\n    s = list(s)\n    s1 = set(s)\n    for i in s1:\n        count += s.count(i) // 2 + s.count(i) % 2\n    print(count)", "for _ in range(int(input())):\n    s = input().strip()\n    count = 0\n    s = list(s)\n    s1 = set(s)\n    for i in s1:\n        count += s.count(i) // 2 + s.count(i) % 2\n    print(count)", "import math\nfor t in range(int(input())):\n    s = input().strip()\n    count = 0\n    s = list(s)\n    s1 = set(s)\n    for i in s1:\n        count += s.count(i) // 2 + s.count(i) % 2\n    print(count)", "from math import ceil\nfor i in range(int(input())):\n    string = input().strip()\n    arr = set(string)\n    ans = 0\n    for x in arr:\n        ans += ceil(string.count(x) / 2)\n    print(ans)", "import math\nn = int(input())\nfor i in range(n):\n    p = input().strip()\n    k = set(p)\n    c = 0\n    for i in k:\n        c += math.ceil(p.count(i) / 2)\n    print(c)", "for _ in range(int(input())):\n    s = input().strip()\n    s = list(s)\n    s1 = set(s)\n    c = 0\n    for i in s1:\n        c += s.count(i) // 2 + s.count(i) % 2\n    print(c)", "for _ in range(int(input())):\n    s = input().strip()\n    s = list(s)\n    s1 = set(s)\n    c = 0\n    for i in s1:\n        c += s.count(i) // 2 + s.count(i) % 2\n    print(c)", "t = int(input())\nfor i in range(t):\n    s = input().strip()\n    s = list(s)\n    uniq = set(s)\n    cost = 0\n    for i in uniq:\n        cost = cost + (s.count(i) // 2 + s.count(i) % 2)\n    print(cost)", "t = int(input())\nfor i in range(t):\n    s = input().strip()\n    s = list(s)\n    d = {}\n    cost = 0\n    for i in s:\n        d[i] = s.count(i)\n    for j in d:\n        if d[j] % 2 == 0:\n            cost = cost + d[j] // 2\n        else:\n            cost = cost + d[j] // 2 + 1\n    print(cost)", "for _ in range(int(input())):\n    x = list(input().strip())\n    cost = 0\n    d = {}\n    for i in x:\n        d[i] = x.count(i)\n    for i in d:\n        if d[i] % 2 == 0:\n            cost += d[i] // 2\n        else:\n            cost += d[i] // 2\n            cost += 1\n    print(cost)", "for _ in range(int(input())):\n    x = list(input().strip())\n    xe = set(x)\n    d = {}\n    cost = 0\n    for i in xe:\n        d[i] = x.count(i)\n    for i in d:\n        cost += d[i] // 2 + d[i] % 2\n    print(cost)", "for _ in range(int(input())):\n    s = list(input().strip())\n    se = list(set(s))\n    c = 0\n    for i in se:\n        c += s.count(i) // 2 + s.count(i) % 2\n    print(c)", "for _ in range(int(input())):\n    s = list(input().strip())\n    se = set(s)\n    c = 0\n    for i in se:\n        c += s.count(i) // 2 + s.count(i) % 2\n    print(c)", "from math import ceil\nfor i in range(int(input())):\n    s = input().strip()\n    unique = set(s)\n    total = 0\n    for i in unique:\n        if s.count(i) % 2 == 0:\n            total += s.count(i) // 2\n        else:\n            total += s.count(i) // 2 + 1\n    print(total)", "from math import ceil\nfor i in range(int(input())):\n    s = input().strip()\n    unique = set(s)\n    total = 0\n    for i in unique:\n        total += ceil(s.count(i) / 2)\n    print(total)", "from math import ceil\nT = int(input())\nfor _ in range(T):\n    s = input().strip()\n    l = set(s)\n    c = 0\n    for i in l:\n        c += ceil(s.count(i) / 2)\n    print(c)", "from math import ceil\nT = int(input())\nfor _ in range(T):\n    s = input().strip()\n    l = set(s)\n    c = 0\n    for i in l:\n        c += ceil(s.count(i) / 2)\n    print(c)", "from math import ceil\nfor _ in range(int(input())):\n    s = input().strip()\n    l = set(s)\n    count = 0\n    for i in l:\n        count += ceil(s.count(i) / 2)\n    print(count)", "from math import ceil\nfor _ in range(int(input())):\n    s = input().strip()\n    l = set(s)\n    count = 0\n    for i in l:\n        count += ceil(s.count(i) / 2)\n    print(count)", "import math\nT = int(input())\nfor i in range(T):\n    S = input().strip()\n    Set_S = set(S)\n    cost = 0\n    for j in Set_S:\n        cost = cost + math.ceil(S.count(j) / 2)\n    print(cost)", "from collections import Counter\nfor _ in range(int(input())):\n    A = list(input().strip())\n    B = Counter(A)\n    cost = 0\n    for b in B:\n        cost += B[b] // 2 + (B[b] % 2 > 0)\n    print(cost)", "from collections import Counter\nfor _ in range(int(input())):\n    A = list(input().strip())\n    B = Counter(A)\n    cost = 0\n    for b in B:\n        cost += B[b] // 2 + (B[b] % 2 > 0)\n    print(cost)", "from collections import Counter\nfor _ in range(int(input())):\n    A = list(input().strip())\n    B = Counter(A)\n    cost = 0\n    for b in B:\n        cost += B[b] // 2 + (B[b] % 2 > 0)\n    print(cost)", "import math\nn = int(input())\nfor i in range(n):\n    m = input().strip()\n    a = set(m)\n    c = 0\n    for i in a:\n        c = c + math.ceil(m.count(i) / 2)\n    print(c)", "import math\nfor i in range(int(input())):\n    s = input().strip()\n    s1 = set(s)\n    c = 0\n    for i in s1:\n        c = c + math.ceil(s.count(i) / 2)\n    print(c)", "import math\nn = int(input())\nfor i in range(n):\n    s = input().strip()\n    l = set(list(s))\n    c = 0\n    for i in l:\n        d = s.count(i)\n        c += math.ceil(d / 2)\n    print(c)", "import math\nn = int(input())\nfor i in range(n):\n    s = input().strip()\n    l = set(list(s))\n    c = 0\n    for i in l:\n        d = s.count(i)\n        c += math.ceil(d / 2)\n    print(c)", "import math\nn = int(input())\nfor i in range(n):\n    s = input().strip()\n    l = set(list(s))\n    c = 0\n    for i in l:\n        d = s.count(i)\n        c += math.ceil(d / 2)\n    print(c)", "import math\nT = int(input())\nfor i in range(T):\n    S = input().strip()\n    c = 1\n    s = 0\n    d = 0\n    l1 = set(S)\n    for j in l1:\n        c = S.count(j)\n        d = math.ceil(c / 2)\n        s += d\n    print(s)", "import math\nT = int(input())\nfor i in range(T):\n    S = input().strip()\n    c = 1\n    s = 0\n    d = 0\n    l1 = set(S)\n    for j in l1:\n        c = S.count(j)\n        d = math.ceil(c / 2)\n        s += d\n    print(s)", "import math\nfor i in range(int(input())):\n    x = input().strip()\n    x1 = set(x)\n    c = 0\n    for k in x1:\n        c += math.ceil(x.count(k) / 2)\n    print(c)", "import math\nfor i in range(int(input())):\n    s = input().strip()\n    c = 0\n    s1 = set(s)\n    for i in s1:\n        c = c + math.ceil(s.count(i) / 2)\n    print(c)", "import math\nfor i in range(int(input())):\n    s = input().strip()\n    c = 0\n    s1 = set(s)\n    for i in s1:\n        c = c + math.ceil(s.count(i) / 2)\n    print(c)", "import math\nfor i in range(int(input())):\n    s = input().strip()\n    s1 = set(s)\n    c = 0\n    for i in s1:\n        c = c + math.ceil(s.count(i) / 2)\n    print(c)", "import math\nfor i in range(int(input())):\n    s = input().strip()\n    s1 = set(s)\n    c = 0\n    for i in s1:\n        c = c + math.ceil(s.count(i) / 2)\n    print(c)", "import math\nt = int(input())\nwhile t > 0:\n    s = input().strip()\n    st = set(s)\n    res = 0\n    for i in st:\n        res = res + math.ceil(s.count(i) / 2)\n    print(res)\n    t = t - 1", "import math\nt = int(input())\nwhile t > 0:\n    s = input().strip()\n    s1 = set(s)\n    c = 0\n    for i in s1:\n        c = c + math.ceil(s.count(i) / 2)\n    print(c)\n    t = t - 1", "import math\nt = int(input())\nfor x in range(t):\n    s = input().strip()\n    s1 = set(s)\n    total = 0\n    for i in s1:\n        total = total + math.ceil(s.count(i) / 2)\n    print(total)", "import math\nt = int(input())\nfor x in range(t):\n    s = input().strip()\n    s1 = set(s)\n    total = 0\n    for i in s1:\n        total = total + math.ceil(s.count(i) / 2)\n    print(total)", "from math import ceil\nt = int(input())\nwhile t > 0:\n    s = input().strip()\n    s1 = set(s)\n    c = 0\n    for j in s1:\n        c = c + ceil(s.count(j) / 2)\n    print(c)\n    t -= 1", "import math\nfor i in range(int(input())):\n    s = input().strip()\n    s1 = set(s)\n    c = 0\n    for i in s1:\n        c = c + math.ceil(s.count(i) / 2)\n    print(c)", "from math import ceil\nt = int(input())\nfor i in range(t):\n    s = input().strip()\n    s1 = set(s)\n    c = 0\n    for j in s1:\n        c = c + ceil(s.count(j) / 2)\n    print(c)", "from math import ceil\nt = int(input())\nfor i in range(t):\n    s = input().strip()\n    s1 = set(s)\n    c = 0\n    for j in s1:\n        c = c + ceil(s.count(j) / 2)\n    print(c)", "import math\nt = int(input())\nfor i in range(t):\n    s = input().strip()\n    c = set(s)\n    x = 0\n    for i in c:\n        x += math.ceil(s.count(i) / 2)\n    print(x)", "import math\nt = int(input())\nfor i in range(t):\n    s = input().strip()\n    c = set(s)\n    x = 0\n    for i in c:\n        x += math.ceil(s.count(i) / 2)\n    print(x)", "import math\nfor i in range(int(input())):\n    s = input().strip()\n    s1 = set(s)\n    sm = 0\n    for j in s1:\n        sm += math.ceil(s.count(j) / 2)\n    print(sm)", "from math import ceil\nt = int(input())\nfor ni in range(t):\n    s = input().strip()\n    s1 = set(s)\n    c = 0\n    for i in s1:\n        c = c + ceil(s.count(i) / 2)\n    print(c)", "from math import ceil\nt = int(input())\nfor ni in range(t):\n    s = input().strip()\n    s1 = set(s)\n    c = 0\n    for i in s1:\n        c = c + ceil(s.count(i) / 2)\n    print(c)", "from math import ceil\nt = int(input())\nfor ni in range(t):\n    s = input().strip()\n    s1 = set(s)\n    c = 0\n    for i in s1:\n        c = c + ceil(s.count(i) / 2)\n    print(c)", "alphabet = {'a': 0, 'b': 0, 'c': 0, 'd': 0, 'e': 0, 'f': 0, 'g': 0, 'h': 0, 'i': 0, 'j': 0, 'k': 0, 'l': 0, 'm': 0, 'n': 0, 'o': 0, 'p': 0, 'q': 0, 'r': 0, 's': 0, 't': 0, 'u': 0, 'v': 0, 'w': 0, 'x': 0, 'y': 0, 'z': 0, 'A': 0, 'B': 0, 'C': 0, 'D': 0, 'E': 0, 'F': 0, 'G': 0, 'H': 0, 'I': 0, 'J': 0, 'K': 0, 'L': 0, 'M': 0, 'N': 0, 'O': 0, 'P': 0, 'Q': 0, 'R': 0, 'S': 0, 'T': 0, 'U': 0, 'V': 0, 'W': 0, 'X': 0, 'Y': 0, 'Z': 0}\nt = int(input())\nfor i in range(t):\n    buy_elems = input()\n    s = ''.join(filter(str.isalpha, buy_elems))\n    for j in s:\n        alphabet[j] += 1\n    result = 0\n    for (key, value) in alphabet.items():\n        result += value // 2 + value % 2\n        alphabet[key] = 0\n    print(result)", "import math\nt = int(input())\nfor i in range(t):\n    s = input().strip()\n    c = set(s)\n    x = 0\n    for i in c:\n        x += math.ceil(s.count(i) / 2)\n    print(x)", "import math\nt = int(input())\nfor i in range(t):\n    s = input().strip()\n    c = set(s)\n    x = 0\n    for i in c:\n        x += math.ceil(s.count(i) / 2)\n    print(x)", "import math\nfor _ in range(int(input())):\n    s = input().strip()\n    c = set(s)\n    x = 0\n    for i in c:\n        x += math.ceil(s.count(i) / 2)\n    print(x)", "from collections import Counter\nfor tc in range(int(input())):\n    s = input().strip()\n    c = Counter(s)\n    tot = 0\n    for i in c.values():\n        tot = tot + i // 2 + i % 2\n    print(tot)", "import math\nfrom collections import Counter\nfor tc in range(int(input())):\n    s = input().strip()\n    c = set(s)\n    tot = 0\n    for i in c:\n        tot += math.ceil(s.count(i) / 2)\n    print(tot)", "import math\nfor _ in range(int(input())):\n    s = input().strip()\n    c = set(s)\n    x = 0\n    for i in c:\n        x += math.ceil(s.count(i) / 2)\n    print(x)", "import math\nfor t in range(int(input())):\n    s = input().strip()\n    x = set(s)\n    c = 0\n    for i in x:\n        c += math.ceil(s.count(i) / 2)\n    print(c)", "import math\nn = int(input())\nfor i in range(n):\n    s = input().strip()\n    l = list(s)\n    count = 0\n    d = {}\n    for j in l:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    for (k, v) in d.items():\n        if v % 2 == 0:\n            count += v // 2\n        else:\n            r = math.ceil(v / 2)\n            count += r\n    print(count)", "import math\nn = int(input())\nfor i in range(n):\n    s = input().strip()\n    count = 0\n    for i in set(s):\n        count = count + math.ceil(s.count(i) / 2)\n    print(count)", "import math\nn = int(input())\nfor i in range(n):\n    a = input().strip()\n    l = 0\n    for i in set(a):\n        l = l + math.ceil(a.count(i) / 2)\n    print(l)", "t = int(input())\nfor _ in range(t):\n    s = input().strip()\n    d = {}\n    cost = 0\n    for i in s:\n        d[i] = 0\n    for j in s:\n        d[j] += 1\n    for z in d:\n        if d[z] % 2 == 0:\n            cost += d[z] // 2\n        else:\n            cost += d[z] // 2 + 1\n    print(cost)", "import math\nt = int(input())\nfor _ in range(t):\n    n = 0\n    s = input().strip()\n    for i in set(s):\n        n += math.ceil(s.count(i) / 2)\n    print(n)", "import math\nt = int(input())\nfor _ in range(t):\n    n = 0\n    s = input().strip()\n    for i in set(s):\n        n += math.ceil(s.count(i) / 2)\n    print(n)", "t = int(input())\nfor _ in range(t):\n    s = input().strip()\n    d = {}\n    cost = 0\n    for i in s:\n        d[i] = 0\n    for j in s:\n        d[j] += 1\n    for z in d:\n        if d[z] % 2 == 0:\n            cost += d[z] // 2\n        else:\n            cost += d[z] // 2 + 1\n    print(cost)", "T = int(input())\nfor i in range(T):\n    s = input().strip()\n    l = []\n    for j in s:\n        if j not in l:\n            l.append(j)\n    p = 0\n    for j in l:\n        if s.count(j) % 2 == 0:\n            p += s.count(j) // 2\n        else:\n            p += s.count(j) // 2 + 1\n    print(p)"]