["mod = 1000000007\n\ndef mmul(A, B):\n    s = len(A)\n    C = [[0 for i in range(s)] for j in range(s)]\n    for i in range(s):\n        for j in range(s):\n            for k in range(s):\n                C[i][j] += A[i][k] * B[k][j]\n                C[i][j] %= mod\n    return C\n\ndef mpow(A, N, I):\n    if N == 0:\n        return I\n    if N == 1:\n        return A\n    ret = mpow(A, N // 2, I)\n    ret1 = mmul(ret, ret)\n    if N % 2 == 0:\n        return ret1\n    else:\n        return mmul(ret1, A)\ntest = int(input())\nfor _ in range(test):\n    (N, n) = [int(c) for c in input().split()]\n    I = [[0 for i in range(n)] for j in range(n)]\n    for i in range(0, n):\n        I[i][i] = 1\n    odd = [[0 for i in range(n)] for j in range(n)]\n    even = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        odd[i][i] = 1\n        if i >= 1:\n            even[i][i - 1] = 1\n            odd[i][i - 1] = 1\n        if i < n - 1:\n            even[i][i + 1] = 1\n            odd[i][i + 1] = 1\n    T = mmul(even, odd)\n    N -= 1\n    ans = mpow(T, N // 2, I)\n    ret = 0\n    if N % 2:\n        ans = mmul(ans, even)\n    for i in ans:\n        for j in i:\n            ret += j\n            ret %= mod\n    print(ret)", "mod = 1000000007\n\ndef mmul(A, B):\n    s = len(A)\n    C = [[0 for i in range(s)] for j in range(s)]\n    for i in range(s):\n        for j in range(s):\n            for k in range(s):\n                C[i][j] += A[i][k] * B[k][j]\n                C[i][j] %= mod\n    return C\n\ndef mpow(A, N, I):\n    if N == 0:\n        return I\n    if N == 1:\n        return A\n    ret = mpow(A, N // 2, I)\n    ret1 = mmul(ret, ret)\n    if N % 2 == 0:\n        return ret1\n    else:\n        return mmul(ret1, A)\ntest = int(input())\nfor _ in range(test):\n    (N, n) = [int(c) for c in input().split()]\n    I = [[0 for i in range(n)] for j in range(n)]\n    for i in range(0, n):\n        I[i][i] = 1\n    odd = [[0 for i in range(n)] for j in range(n)]\n    even = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        odd[i][i] = 1\n        if i >= 1:\n            even[i][i - 1] = 1\n            odd[i][i - 1] = 1\n        if i < n - 1:\n            even[i][i + 1] = 1\n            odd[i][i + 1] = 1\n    T = mmul(even, odd)\n    N -= 1\n    ans = mpow(T, N // 2, I)\n    ret = 0\n    if N % 2:\n        ans = mmul(ans, even)\n    for i in ans:\n        for j in i:\n            ret += j\n            ret %= mod\n    print(ret)", "mod = 1000000007\n\ndef mmul(A, B):\n    s = len(A)\n    C = [[0 for i in range(s)] for j in range(s)]\n    for i in range(s):\n        for j in range(s):\n            for k in range(s):\n                C[i][j] += A[i][k] * B[k][j]\n                C[i][j] %= mod\n    return C\n\ndef mpow(A, N, I):\n    if N == 0:\n        return I\n    if N == 1:\n        return A\n    ret = mpow(A, N // 2, I)\n    ret1 = mmul(ret, ret)\n    if N % 2 == 0:\n        return ret1\n    else:\n        return mmul(ret1, A)\ntest = int(input())\nfor _ in range(test):\n    (N, n) = [int(c) for c in input().split()]\n    I = [[0 for i in range(n)] for j in range(n)]\n    for i in range(0, n):\n        I[i][i] = 1\n    odd = [[0 for i in range(n)] for j in range(n)]\n    even = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        odd[i][i] = 1\n        if i >= 1:\n            even[i][i - 1] = 1\n            odd[i][i - 1] = 1\n        if i < n - 1:\n            even[i][i + 1] = 1\n            odd[i][i + 1] = 1\n    T = mmul(even, odd)\n    N -= 1\n    ans = mpow(T, N // 2, I)\n    ret = 0\n    if N % 2:\n        ans = mmul(ans, even)\n    for i in ans:\n        for j in i:\n            ret += j\n            ret %= mod\n    print(ret)", "mod = 1000000007\n\ndef mmul(A, B):\n    s = len(A)\n    C = [[0 for i in range(s)] for j in range(s)]\n    for i in range(s):\n        for j in range(s):\n            for k in range(s):\n                C[i][j] += A[i][k] * B[k][j]\n                C[i][j] %= mod\n    return C\n\ndef mpow(A, N, I):\n    if N == 0:\n        return I\n    if N == 1:\n        return A\n    ret = mpow(A, N // 2, I)\n    ret1 = mmul(ret, ret)\n    if N % 2 == 0:\n        return ret1\n    else:\n        return mmul(ret1, A)\ntest = int(input())\nfor _ in range(test):\n    (N, n) = [int(c) for c in input().split()]\n    I = [[0 for i in range(n)] for j in range(n)]\n    for i in range(0, n):\n        I[i][i] = 1\n    odd = [[0 for i in range(n)] for j in range(n)]\n    even = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        odd[i][i] = 1\n        if i >= 1:\n            even[i][i - 1] = 1\n            odd[i][i - 1] = 1\n        if i < n - 1:\n            even[i][i + 1] = 1\n            odd[i][i + 1] = 1\n    T = mmul(even, odd)\n    N -= 1\n    ans = mpow(T, N // 2, I)\n    ret = 0\n    if N % 2:\n        ans = mmul(ans, even)\n    for i in ans:\n        for j in i:\n            ret += j\n            ret %= mod\n    print(ret)", "mod = 1000000007\n\ndef mmul(A, B):\n    s = len(A)\n    C = [[0 for i in range(s)] for j in range(s)]\n    for i in range(s):\n        for j in range(s):\n            for k in range(s):\n                C[i][j] += A[i][k] * B[k][j]\n                C[i][j] %= mod\n    return C\n\ndef mpow(A, N, I):\n    if N == 0:\n        return I\n    if N == 1:\n        return A\n    ret = mpow(A, N // 2, I)\n    ret1 = mmul(ret, ret)\n    if N % 2 == 0:\n        return ret1\n    else:\n        return mmul(ret1, A)\nt = int(input())\nfor _ in range(t):\n    (N, n) = [int(c) for c in input().split()]\n    I = [[0 for i in range(n)] for j in range(n)]\n    for i in range(0, n):\n        I[i][i] = 1\n    odd = [[0 for i in range(n)] for j in range(n)]\n    even = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        odd[i][i] = 1\n        if i >= 1:\n            even[i][i - 1] = 1\n            odd[i][i - 1] = 1\n        if i < n - 1:\n            even[i][i + 1] = 1\n            odd[i][i + 1] = 1\n    T = mmul(even, odd)\n    N -= 1\n    ans = mpow(T, N // 2, I)\n    ret = 0\n    if N % 2:\n        ans = mmul(ans, even)\n    for i in ans:\n        for j in i:\n            ret += j\n            ret %= mod\n    print(ret)", "mod = 1000000007\n\ndef mmul(A, B):\n    s = len(A)\n    C = [[0 for i in range(s)] for j in range(s)]\n    for i in range(s):\n        for j in range(s):\n            for k in range(s):\n                C[i][j] += A[i][k] * B[k][j]\n                C[i][j] %= mod\n    return C\n\ndef mpow(A, N, I):\n    if N == 0:\n        return I\n    if N == 1:\n        return A\n    ret = mpow(A, N // 2, I)\n    ret1 = mmul(ret, ret)\n    if N % 2 == 0:\n        return ret1\n    else:\n        return mmul(ret1, A)\nt = int(input())\nfor _ in range(t):\n    (N, n) = [int(c) for c in input().split()]\n    I = [[0 for i in range(n)] for j in range(n)]\n    for i in range(0, n):\n        I[i][i] = 1\n    odd = [[0 for i in range(n)] for j in range(n)]\n    even = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        odd[i][i] = 1\n        if i >= 1:\n            even[i][i - 1] = 1\n            odd[i][i - 1] = 1\n        if i < n - 1:\n            even[i][i + 1] = 1\n            odd[i][i + 1] = 1\n    T = mmul(even, odd)\n    N -= 1\n    ans = mpow(T, N // 2, I)\n    ret = 0\n    if N % 2:\n        ans = mmul(ans, even)\n    for i in ans:\n        for j in i:\n            ret += j\n            ret %= mod\n    print(ret)", "mod = 1000000007\n\ndef mmul(A, B):\n    s = len(A)\n    C = [[0 for i in range(s)] for j in range(s)]\n    for i in range(s):\n        for j in range(s):\n            for k in range(s):\n                C[i][j] += A[i][k] * B[k][j]\n                C[i][j] %= mod\n    return C\n\ndef mpow(A, N, I):\n    if N == 0:\n        return I\n    if N == 1:\n        return A\n    ret = mpow(A, N // 2, I)\n    ret1 = mmul(ret, ret)\n    if N % 2 == 0:\n        return ret1\n    else:\n        return mmul(ret1, A)\nt = int(input())\nfor _ in range(t):\n    (N, n) = [int(c) for c in input().split()]\n    I = [[0 for i in range(n)] for j in range(n)]\n    for i in range(0, n):\n        I[i][i] = 1\n    odd = [[0 for i in range(n)] for j in range(n)]\n    even = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        odd[i][i] = 1\n        if i >= 1:\n            even[i][i - 1] = 1\n            odd[i][i - 1] = 1\n        if i < n - 1:\n            even[i][i + 1] = 1\n            odd[i][i + 1] = 1\n    T = mmul(even, odd)\n    N -= 1\n    ans = mpow(T, N // 2, I)\n    ret = 0\n    if N % 2:\n        ans = mmul(ans, even)\n    for i in ans:\n        for j in i:\n            ret += j\n            ret %= mod\n    print(ret)"]