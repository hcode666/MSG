["def candy(n, C, x):\n    if n == 1:\n        return (1, 0)\n    (b1, b2) = (1, 1)\n    (a, b) = (C[0], C[-1])\n    while b1 + b2 < n:\n        if a < b * x:\n            a += C[b1]\n            b1 += 1\n        elif a > b * x:\n            b2 += 1\n            b += C[n - b2]\n        elif b1 >= b2:\n            a += C[b1]\n            b1 += 1\n        else:\n            b += C[n - b2]\n            b2 += 1\n    return (b1, b2)\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    x = int(input())\n    ans = candy(N, A, x)\n    print(ans[0], ans[1])", "def candy(n, C, x):\n    if n == 1:\n        return (1, 0)\n    (b1, b2) = (1, 1)\n    (a, b) = (C[0], C[-1])\n    while b1 + b2 < n:\n        if a < b * x:\n            a += C[b1]\n            b1 += 1\n        elif a > b * x:\n            b2 += 1\n            b += C[n - b2]\n        elif b1 >= b2:\n            a += C[b1]\n            b1 += 1\n        else:\n            b2 += 1\n            b += C[b2]\n    return (b1, b2)\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    x = int(input())\n    ans = candy(N, A, x)\n    print(ans[0], ans[1])", "import sys\nip = sys.stdin\n\ndef solve(C, n, x):\n    if n == 1:\n        return (1, 0)\n    (b1, b2) = (1, 1)\n    (a, b) = (C[0], C[-1])\n    while b1 + b2 < n:\n        if a < b * x:\n            a += C[b1]\n            b1 += 1\n        elif a > b * x:\n            b2 += 1\n            b += C[n - b2]\n        elif b1 >= b2:\n            a += C[b1]\n            b1 += 1\n        else:\n            b2 += 1\n            b += C[b2]\n    return (b1, b2)\nt = int(ip.readline())\nfor _ in range(t):\n    n = int(ip.readline())\n    C = list(map(int, ip.readline().split()))\n    x = int(ip.readline())\n    ans = solve(C, n, x)\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = int(input())\n    j = n - 1\n    i = 0\n    a = 0\n    b = 0\n    remain = 0\n    while True:\n        if i > j:\n            break\n        if i == j:\n            if remain:\n                a += 1\n            elif b > a:\n                b += 1\n            else:\n                a += 1\n            break\n        b += 1\n        d = x * l[j] + remain\n        while i < j:\n            d -= l[i]\n            if d == 0:\n                remain = 0\n                a += 1\n                i += 1\n                break\n            if d < 0:\n                remain = d + l[i]\n                break\n            a += 1\n            i += 1\n        j -= 1\n    print(a, b)", "import sys\nsys.setrecursionlimit(200000)\n\ndef processor(input_list, a, b, x):\n    if a == b:\n        number_of_boxes_eaten_by_a = a - 0\n        number_of_boxes_eaten_by_b = len(input_list) - 1 - b\n        if number_of_boxes_eaten_by_a >= number_of_boxes_eaten_by_b:\n            return a\n        else:\n            return a - 1\n    elif a + 1 == b:\n        return a\n    elif input_list[a] == input_list[b] * x:\n        return processor(input_list, a + 1, b - 1, x)\n    elif input_list[a] > input_list[b] * x:\n        input_list[a] = input_list[a] - input_list[b] * x\n        return processor(input_list, a, b - 1, x)\n    else:\n        input_list[b] = input_list[b] - input_list[a] / x\n        return processor(input_list, a + 1, b, x)\n\ndef ans(input_list, x):\n    pos_a = processor(input_list, 0, len(input_list) - 1, x) + 1\n    return (pos_a, len(input_list) - pos_a)\nfor _ in range(int(input())):\n    N = int(input())\n    C = list(map(int, input().split()))\n    X = int(input())\n    for i in C:\n        i *= X\n    Ans = ans(C, X)\n    print(*Ans, sep=' ')", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        x = int(input())\n        left = 0\n        right = n - 1\n        count1 = count2 = 0\n        sum1 = sum2 = 0\n        while left <= right:\n            if sum1 < x * sum2:\n                sum1 = sum1 + arr[left]\n                left += 1\n                count1 += 1\n            elif sum1 > x * sum2:\n                sum2 = sum2 + arr[right]\n                right -= 1\n                count2 += 1\n            elif left != right:\n                sum1 = sum1 + arr[left]\n                left += 1\n                count1 += 1\n            elif count1 < count2:\n                sum2 = sum2 + arr[right]\n                right -= 1\n                count2 = count2 + 1\n            else:\n                sum1 = sum1 + arr[left]\n                left += 1\n                count1 += 1\n        print(count1, count2)\nexcept:\n    pass", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(y) for y in input().split()]\n    x = int(input())\n    ca = [0] * n\n    cb = [0] * n\n    (psum, psumr, aeats, beats) = (0, 0, 0, 0)\n    tie = False\n    for i in range(n):\n        psum = psum + a[i]\n        psumr = psumr + a[n - i - 1]\n        if i < n - 1:\n            ca[i + 1] = psum / x\n            cb[n - i - 2] = psumr\n    for i in range(n):\n        if cb[i] > ca[i]:\n            aeats += 1\n        elif cb[i] < ca[i]:\n            beats += 1\n        else:\n            tie = True\n    if tie:\n        if beats > aeats:\n            beats += 1\n        else:\n            aeats += 1\n    print('{} {}'.format(aeats, beats))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = int(input())\n    if n == 1:\n        print(1, 0)\n        continue\n    else:\n        sum1 = sum(a)\n        lim = x * int(sum1 / (x + 1))\n        sumt = 0\n        f = -1\n        c1 = 0\n        while lim > sumt:\n            f += 1\n            sumt += a[f]\n            c1 += 1\n        c1 = c1 - 1\n        for i in range(f, n - 1):\n            t1 = sum(a[:i]) / x\n            t2 = sum(a[i + 1:])\n            if t1 < t2:\n                c1 += 1\n            elif t1 == t2:\n                if i >= n - i - 1:\n                    c1 += 1\n                break\n            else:\n                break\n        print(c1, n - c1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    X = int(input())\n    if n == 1:\n        print(1, 0)\n        continue\n    (l, r) = (0, n - 1)\n    (a, b) = (0, 0)\n    (sumA, sumB) = (0, 0)\n    while l < r:\n        if sumA <= sumB * X:\n            sumA += arr[l]\n            l += 1\n            a += 1\n        else:\n            sumB += arr[r]\n            r -= 1\n            b += 1\n    if l == r:\n        if sumA - sumB * X == 0:\n            if a >= b:\n                a += 1\n            else:\n                b += 1\n        elif sumA - sumB * X < 0:\n            a += 1\n        else:\n            b += 1\n    print(a, b)", "for _ in range(int(input())):\n    N = int(input())\n    candies = list(map(int, input().split()))\n    x = int(input())\n    sum = 0\n    for a in range(N):\n        sum += candies[a]\n    lftSum = candies[0]\n    rgtSum = sum - lftSum\n    lftans = 1\n    rgtans = N - 1\n    for a in range(1, N):\n        if rgtSum - candies[a] == lftSum / x:\n            if lftans >= rgtans - 1:\n                lftans += 1\n                rgtans -= 1\n                break\n            else:\n                break\n        elif rgtSum - candies[a] < lftSum / x:\n            break\n        else:\n            lftans += 1\n            rgtans -= 1\n        lftSum += candies[a]\n        rgtSum -= candies[a]\n    print(lftans, rgtans)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    x = int(input())\n    (A, B) = (0, 0)\n    (i, j) = (0, n - 1)\n    while i < j:\n        B += 1\n        chocsA = x * lst[j]\n        while i < j and chocsA >= lst[i]:\n            chocsA -= lst[i]\n            i += 1\n            A += 1\n        lst[i] -= chocsA\n        j -= 1\n    if i == j:\n        if chocsA > 0:\n            A += 1\n        elif A >= B:\n            A += 1\n        else:\n            B += 1\n    print(A, B)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    l = list(map(int, input().split()))\n    X = int(input())\n    A = l[:]\n    B = l[:]\n    for i in range(1, N):\n        A[i] = A[i - 1] + A[i]\n        B[N - 1 - i] = B[N - 1 - i] + B[N - i]\n    i = 0\n    j = N - 1\n    while i < j and j - i > 1:\n        if A[i] / X < B[j]:\n            i += 1\n        elif A[i] / X > B[j]:\n            j -= 1\n        elif i + 1 < N - j:\n            j -= 1\n        else:\n            i += 1\n    print(i + 1, N - j)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = int(input())\n    (left, right) = (0, n - 1)\n    (c1, c2) = (0, 0)\n    (b1, b2) = (0, 0)\n    while left <= right:\n        if c1 < x * c2:\n            c1 += arr[left]\n            left += 1\n            b1 += 1\n        elif c1 > x * c2:\n            c2 += arr[right]\n            right -= 1\n            b2 += 1\n        elif left != right:\n            c1 += arr[left]\n            left += 1\n            b1 += 1\n        elif b1 < b2:\n            c2 += arr[right]\n            right -= 1\n            b2 += 1\n        else:\n            c1 += arr[left]\n            left += 1\n            b1 += 1\n    print(b1, b2)", "d = int(input())\nfor tt in range(d):\n    n = int(input())\n    s = list(map(int, input().split()))\n    x = int(input())\n    sum = []\n    count = 0\n    low = -1\n    high = n\n    if n == 1:\n        print('1 0')\n        continue\n    counta = 0\n    countb = 0\n    timea = 0\n    timeb = 0\n    while 1:\n        if low >= high - 1:\n            break\n        if timea < timeb:\n            low += 1\n            timea += s[low] / x\n            counta += 1\n        elif timea > timeb:\n            high -= 1\n            timeb += s[high]\n            countb += 1\n        elif counta >= countb:\n            low += 1\n            timea += s[low] / x\n            counta += 1\n        else:\n            high -= 1\n            timeb += s[high]\n            countb += 1\n    print(counta, countb)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = int(input())\n    if n == 1:\n        print('1 0')\n    else:\n        currentIndexOfA = 0\n        currentIndexOfB = n - 1\n        carry = 0\n        while currentIndexOfA + 1 < currentIndexOfB:\n            if (arr[currentIndexOfA] + carry) // x < arr[currentIndexOfB]:\n                arr[currentIndexOfB] -= (arr[currentIndexOfA] + carry) // x\n                carry = (arr[currentIndexOfA] + carry) % x\n                arr[currentIndexOfA] = 0\n                currentIndexOfA += 1\n            elif (arr[currentIndexOfA] + carry) // x > arr[currentIndexOfB]:\n                s = (arr[currentIndexOfA] + carry) // x\n                carry = (arr[currentIndexOfA] + carry) % x\n                flag = False\n                while s > 0:\n                    if s >= arr[currentIndexOfB]:\n                        s -= arr[currentIndexOfB]\n                        arr[currentIndexOfB] = 0\n                        currentIndexOfB -= 1\n                    else:\n                        arr[currentIndexOfB] -= s\n                        s = 0\n                    if currentIndexOfB - 1 == currentIndexOfA:\n                        flag = True\n                        break\n                if flag:\n                    break\n                currentIndexOfA += 1\n            elif (arr[currentIndexOfA] + carry) // x == arr[currentIndexOfB]:\n                carry = (arr[currentIndexOfA] + carry) % x\n                arr[currentIndexOfA] = 0\n                arr[currentIndexOfB] = 0\n                currentIndexOfA += 1\n                currentIndexOfB -= 1\n            if currentIndexOfB == currentIndexOfA and carry == 0:\n                if n - 1 - currentIndexOfA == currentIndexOfA or currentIndexOfA > n - 1 - currentIndexOfA:\n                    currentIndexOfB += 1\n                else:\n                    currentIndexOfA -= 1\n                break\n            elif currentIndexOfA == currentIndexOfB:\n                currentIndexOfA -= 1\n                break\n        print(f'{currentIndexOfA + 1} {n - currentIndexOfB}')", "import math\nimport bisect\nt = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    candies = [int(x) for x in input().split()]\n    rate = int(input())\n    a_start_time = [0 for x in range(n)]\n    b_start_time = [0 for x in range(n)]\n    a_start_time[0] = 0\n    b_start_time[-1] = 0\n    sum_candies = candies[0]\n    for i in range(1, n):\n        a_start_time[i] = sum_candies / rate\n        sum_candies += candies[i]\n    for i in range(n - 2, -1, -1):\n        b_start_time[i] = b_start_time[i + 1] + candies[i + 1]\n    a_count = 0\n    b_count = 0\n    if n == 1:\n        print(1, 0)\n        continue\n    elif n == 2:\n        print(1, 1)\n        continue\n    for i in range(n):\n        if a_start_time[i] < b_start_time[i]:\n            a_count += 1\n        elif b_start_time[i] == a_start_time[i]:\n            if a_count >= n - a_count - 1:\n                a_count += 1\n    print(a_count, n - a_count)", "import math\nimport bisect\nt = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    candies = [int(x) for x in input().split()]\n    rate = int(input())\n    a_start_time = [0 for x in range(n)]\n    b_start_time = [0 for x in range(n)]\n    a_start_time[0] = 0\n    b_start_time[-1] = 0\n    sum_candies = candies[0]\n    for i in range(1, n):\n        a_start_time[i] = sum_candies / rate\n        sum_candies += candies[i]\n    for i in range(n - 2, -1, -1):\n        b_start_time[i] = b_start_time[i + 1] + candies[i + 1]\n    a_count = 0\n    b_count = 0\n    if n == 1:\n        print(1, 0)\n        continue\n    elif n == 2:\n        print(1, 1)\n        continue\n    for i in range(n):\n        if a_start_time[i] < b_start_time[i]:\n            a_count += 1\n        elif b_start_time[i] == a_start_time[i]:\n            if a_count >= n - a_count - 1:\n                a_count += 1\n    print(a_count, n - a_count)", "import math\nimport bisect\nt = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    candies = [int(x) for x in input().split()]\n    rate = int(input())\n    a_start_time = [0 for x in range(n)]\n    b_start_time = [0 for x in range(n)]\n    a_start_time[0] = 0\n    b_start_time[-1] = 0\n    sum_candies = candies[0]\n    for i in range(1, n):\n        a_start_time[i] = sum_candies // rate\n        sum_candies += candies[i]\n    for i in range(n - 2, -1, -1):\n        b_start_time[i] = b_start_time[i + 1] + candies[i + 1]\n    a_count = 0\n    b_count = 0\n    if n == 1:\n        print(1, 0)\n        continue\n    elif n == 2:\n        print(1, 1)\n        continue\n    for i in range(n):\n        if a_start_time[i] < b_start_time[i]:\n            a_count += 1\n        elif b_start_time[i] == a_start_time[i]:\n            if a_count >= n - a_count - 1:\n                a_count += 1\n    print(a_count, n - a_count)", "import math\nimport bisect\nt = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    candies = [int(x) for x in input().split()]\n    rate = int(input())\n    a_start_time = [0 for x in range(n)]\n    b_start_time = [0 for x in range(n)]\n    a_start_time[0] = 0\n    b_start_time[-1] = 0\n    sum_candies = candies[0]\n    for i in range(1, n):\n        a_start_time[i] = sum_candies // rate\n        sum_candies += candies[i]\n    for i in range(n - 2, -1, -1):\n        b_start_time[i] = b_start_time[i + 1] + candies[i + 1]\n    a_count = 0\n    b_count = 0\n    if n == 1:\n        print(1, 0)\n        continue\n    elif n == 2:\n        print(1, 1)\n        continue\n    for i in range(n):\n        if a_start_time[i] < b_start_time[i]:\n            a_count += 1\n        elif b_start_time[i] < a_start_time[i]:\n            b_count += 1\n        elif a_count < n - a_count - 1:\n            b_count += 1\n        else:\n            a_count += 1\n    print(a_count, n - a_count)", "import math\nimport bisect\nt = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    candies = [int(x) for x in input().split()]\n    rate = int(input())\n    leftover = 0\n    a_start_time = [0 for x in range(n)]\n    b_start_time = [0 for x in range(n)]\n    a_start_time[0] = 0\n    b_start_time[-1] = 0\n    sum_candies = candies[0]\n    for i in range(1, n):\n        a_start_time[i] = sum_candies // rate\n        sum_candies += candies[i]\n    for i in range(n - 2, -1, -1):\n        b_start_time[i] = b_start_time[i + 1] + candies[i + 1]\n    a_count = 0\n    b_count = 0\n    if n == 1:\n        print(1, 0)\n        continue\n    elif n == 2:\n        print(1, 1)\n        continue\n    for i in range(n):\n        if a_start_time[i] < b_start_time[i]:\n            a_count += 1\n        elif b_start_time[i] < a_start_time[i]:\n            b_count += 1\n        elif a_count < n - a_count - 1:\n            b_count += 1\n        else:\n            a_count += 1\n    print(a_count, n - a_count)", "import sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        c = list(map(int, sys.stdin.readline().split()))\n        x = int(sys.stdin.readline())\n        if n == 1:\n            print(1, 0)\n            continue\n        (e1, e2) = (c[0], c[n - 1])\n        (b1, b2) = (1, 1)\n        while b1 + b2 < n:\n            if e1 < x * e2:\n                e1 += c[b1]\n                b1 += 1\n            elif e1 > x * e2:\n                b2 += 1\n                e2 += c[n - b2]\n            elif b1 >= b2:\n                e1 += c[b1]\n                b1 += 1\n            else:\n                b2 += 1\n                e2 += c[n - b2]\n        print(b1, b2)\nmain()", "import sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        c = list(map(int, sys.stdin.readline().split()))\n        x = int(sys.stdin.readline())\n        if n == 1:\n            print(1, 0)\n            continue\n        (e1, e2, b1, b2, i) = (c[0], c[n - 1], 1, 1, 1)\n        while b1 + b2 < n:\n            if e1 < x * e2:\n                e1 += c[i]\n                b1 += 1\n                i += 1\n            elif e1 > x * e2:\n                b2 += 1\n                e2 += c[n - b2]\n            elif b1 >= b2:\n                e1 += c[i]\n                i += 1\n                b1 += 1\n            else:\n                b2 += 1\n                e2 += c[n - b2]\n        print(b1, b2)\nmain()", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        c = list(map(int, input().split()))\n        x = int(input())\n        if n == 1:\n            print(1, 0)\n            continue\n        (e1, e2, b1, b2, i) = (c[0], c[n - 1], 1, 1, 1)\n        while b1 + b2 < n:\n            if e1 < x * e2:\n                e1 += c[i]\n                b1 += 1\n                i += 1\n            elif e1 > x * e2:\n                b2 += 1\n                e2 += c[n - b2]\n            elif b1 >= b2:\n                e1 += c[i]\n                i += 1\n                b1 += 1\n            else:\n                b2 += 1\n                e2 += c[n - b2]\n        print(b1, b2)\nmain()", "t = int(input())\nmod = pow(10, 9) + 7\nfor y in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = int(input())\n    ca = 0\n    cb = 0\n    aflag = bflag = 0\n    while ca < n - 1 - cb:\n        t = a[ca] // x\n        if a[ca] % x != 0:\n            aflag = 1\n        else:\n            aflag = 0\n        a[ca + 1] += a[ca] % x\n        ca += 1\n        s = a[n - 1 - cb] - t\n        if s == 0:\n            cb += 1\n            bflag = 0\n        elif s > 0:\n            a[n - 1 - cb] -= t\n            bflag = 1\n        else:\n            bflag = 1\n            while s < 0 and ca < n - 1 - cb:\n                cb += 1\n                prev = s\n                s = s + a[n - 1 - cb]\n                a[n - 1 - cb] += prev\n            if s == 0:\n                cb += 1\n                bflag = 0\n    if ca + cb == n - 1:\n        if cb > ca or aflag == 1 or bflag == 1:\n            cb += 1\n        else:\n            ca += 1\n    print(ca, cb)", "for _ in range(int(input())):\n    number = int(input())\n    inA = list(map(int, input().split()))\n    X = int(input())\n    sum = 0\n    for i in range(number):\n        sum += inA[i]\n    leftSum = inA[0]\n    rightSum = sum - leftSum\n    lAns = 1\n    rAns = number - 1\n    for i in range(1, number):\n        if rightSum - inA[i] == leftSum / X:\n            if lAns >= rAns - 1:\n                lAns += 1\n                rAns -= 1\n                break\n            else:\n                break\n        elif rightSum - inA[i] < leftSum / X:\n            break\n        else:\n            lAns += 1\n            rAns -= 1\n        leftSum += inA[i]\n        rightSum -= inA[i]\n    print(lAns, rAns)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    X = int(input())\n    if n == 1:\n        print(1, 0)\n        continue\n    (l, r) = (0, n - 1)\n    (a, b) = (0, 0)\n    (sumA, sumB) = (0, 0)\n    while l < r:\n        if sumA <= sumB * X:\n            sumA += arr[l]\n            l += 1\n            a += 1\n        else:\n            sumB += arr[r]\n            r -= 1\n            b += 1\n    if l == r:\n        if sumA - sumB * X == 0:\n            if a >= b:\n                a += 1\n            else:\n                b += 1\n        elif sumA - sumB * X < 0:\n            a += 1\n        else:\n            b += 1\n    print(a, b)", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    arr = list(map(int, input().strip().split()))\n    x = int(input().strip())\n    candies_left = []\n    sm = 0\n    for i in arr:\n        sm += i\n        candies_left.append(sm)\n    candies_left.append(0)\n    candies = 0\n    ans = False\n    for i in range(n - 1, 0, -1):\n        if candies + x * arr[i] > candies_left[i - 2]:\n            print(str(i) + ' ' + str(n - i))\n            ans = True\n            break\n        elif candies + x * arr[i] == candies_left[i - 2]:\n            if i - 1 >= n - i:\n                print(str(i) + ' ' + str(n - i))\n                ans = True\n                break\n            else:\n                print(str(i - 1) + ' ' + str(n - i + 1))\n                ans = True\n                break\n        else:\n            candies += x * arr[i]\n    if not ans:\n        print(str(1) + ' ' + str(n - 1))", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    (rsm, lsm) = (0, 0)\n    x = int(input())\n    k = 0\n    a = [0 for i in range(n)]\n    b = [0 for i in range(n)]\n    a[0] = c[0]\n    b[n - 1] = c[n - 1]\n    for i in range(1, n):\n        a[i] = c[i] + a[i - 1]\n        b[n - 1 - i] = b[n - i] + c[n - 1 - i]\n    (i, j) = (0, n - 1)\n    for i in range(n):\n        b[i] = b[i] * x\n    (i, j) = (0, n - 1)\n    while i != j:\n        k = i\n        while a[i] < b[j]:\n            i += 1\n            if i == j:\n                i -= 1\n                break\n        if a[i] == b[j] and i + 1 >= n - j and (i + 1 < j):\n            i += 1\n        k = i\n        if i == j:\n            break\n        j -= 1\n    k += 1\n    if n == 1:\n        k = 1\n    print(k, n - k)", "for _ in range(int(input())):\n    n = int(input())\n    c = [0] + list(map(int, input().split()))\n    x = int(input())\n    for i in range(1, n + 1):\n        c[i] += c[i - 1]\n    boxa = 0\n    boxb = 0\n    maxx = x * (c[n] / (x + 1))\n    for i in range(1, len(c)):\n        if c[i] > maxx:\n            boxa = i - 1\n            break\n    if c[boxa] == x * (c[n] - c[boxa]):\n        print('{} {}'.format(boxa, n - boxa))\n    elif c[boxa] == x * (c[n] - c[boxa + 1]):\n        if boxa < n - boxa - 1:\n            print('{} {}'.format(boxa, n - boxa))\n        else:\n            print('{} {}'.format(boxa + 1, n - boxa - 1))\n    elif c[boxa] > x * (c[n] - c[boxa + 1]):\n        print('{} {}'.format(boxa, n - boxa))\n    else:\n        print('{} {}'.format(boxa + 1, n - boxa - 1))", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    cost = [int(_) for _ in input().split()]\n    x = int(input())\n    boxes = [0, 0]\n    j = 0\n    for i in range(n - 1, -1, -1):\n        if i == j:\n            c = cost[j]\n            if c != 0:\n                if boxes[0] >= boxes[1]:\n                    boxes[0] += 1\n                else:\n                    boxes[1] += 1\n            break\n        c = cost[i]\n        eff = c * x\n        cost[i] -= c\n        boxes[1] += 1\n        while eff != 0 and i != j:\n            if eff >= cost[j]:\n                eff -= cost[j]\n                cost[j] = 0\n                j += 1\n                boxes[0] += 1\n            else:\n                cost[j] -= eff\n                eff = 0\n                if j == i - 1:\n                    boxes[0] += 1\n                    j = i\n        if i == j:\n            break\n    print(boxes[0], boxes[1])\n    t -= 1", "import sys\nfrom heapq import heappop\nfrom heapq import heappush\nfrom heapq import heapify\nfrom bisect import insort\nfrom bisect import bisect_right\nfrom bisect import bisect_left\nfrom sys import stdin, stdout\nfrom collections import defaultdict\ninp = lambda : int(stdin.readline())\nsip = lambda : input()\nmulip = lambda : map(int, input().split())\nlst = lambda : list(map(int, stdin.readline().split()))\nslst = lambda : list(sip())\narr2d = lambda x: [[int(j) for j in input().split()] for i in range(x)]\nodds = lambda l: len(list(filter(lambda x: x % 2 != 0, l)))\nevens = lambda l: len(list(filter(lambda x: x % 2 == 0, l)))\nmod = pow(10, 9) + 7\nfor _ in range(inp()):\n    n = inp()\n    B = lst()\n    x = inp()\n    if n == 1:\n        print(1, 0)\n    else:\n        A = []\n        for i in range(n):\n            A.append(B[i] / x)\n        (a, b) = (0, n - 1)\n        (s1, s2) = (0, B[n - 1])\n        while b > a:\n            if s1 > s2:\n                s2 += B[b - 1]\n                b -= 1\n            elif s1 == s2:\n                if a >= n - b:\n                    s1 += A[a]\n                    a += 1\n                else:\n                    s2 += B[b - 1]\n                    b -= 1\n            else:\n                s1 += A[a]\n                a += 1\n        print(a, n - b)", "t = int(input())\nfor w in range(t):\n\n    def myanswer(number, iter, j, ba, bb, my_array, y, z):\n        while iter != j and ba + bb < number:\n            while y != 0:\n                if y > z:\n                    y -= z\n                    iter += 1\n                    ba += 1\n                    z = my_array[iter]\n                elif y == z:\n                    iter += 1\n                    j -= 1\n                    if iter != j:\n                        ba += 1\n                        bb += 1\n                        y = x * my_array[j]\n                        z = my_array[iter]\n                    else:\n                        if ba >= bb:\n                            ba += 1\n                        else:\n                            bb += 1\n                        break\n                else:\n                    z -= y\n                    j -= 1\n                    if iter != j:\n                        bb += 1\n                        y = x * my_array[j]\n                        break\n                    else:\n                        break\n                if iter == j or ba + bb == number:\n                    break\n        print(ba, bb)\n    number = int(input())\n    my_array = list(map(int, input().split()))\n    x = int(input())\n    c = [0] * number\n    iter = 0\n    j = number - 1\n    ba = 1\n    bb = 1\n    y = x * my_array[j]\n    z = my_array[iter]\n    myanswer(number, iter, j, ba, bb, my_array, y, z)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = int(input())\n    b = x * l[n - 1]\n    a = l[0]\n    (boxa, boxb) = (1, 1)\n    (i, j) = (1, n - 2)\n    if n == 1:\n        print(1, 0)\n    elif n == 2:\n        print(1, 1)\n    else:\n        while i < j:\n            while a <= b and i < j:\n                boxa += 1\n                a += l[i]\n                i += 1\n            else:\n                if i < j:\n                    boxb += 1\n                    b += l[j] * x\n                    j -= 1\n        if a < b:\n            boxa += 1\n        elif b < a:\n            boxb += 1\n        elif boxa < boxb:\n            boxb += 1\n        else:\n            boxa += 1\n        print(boxa, boxb)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = int(input())\n    s = 0\n    for i in range(n):\n        s += a[i]\n    ans = []\n    l = a[0]\n    r = s - l\n    l1 = 1\n    r1 = n - 1\n    for i in range(1, n):\n        if r - a[i] == l / x:\n            if l1 >= r1 - 1:\n                l1 += 1\n                r1 -= 1\n                break\n            else:\n                break\n        elif r - a[i] < l / x:\n            break\n        else:\n            l1 += 1\n            r1 -= 1\n        l += a[i]\n        r -= a[i]\n    print(l1, r1)", "import math\nt = int(input())\nfor q in range(t):\n    n = int(input())\n    c = list(map(int, input().split()))\n    x = int(input())\n    a = [0 for i in range(n)]\n    b = [0 for i in range(n)]\n    leftSum = [0 for i in range(n)]\n    rightSum = [0 for i in range(n)]\n    leftSum[0] = c[0]\n    rightSum[-1] = c[-1]\n    count = 0\n    for i in range(1, n):\n        leftSum[i] = leftSum[i - 1] + c[i]\n    for i in range(n - 2, -1, -1):\n        rightSum[i] = rightSum[i + 1] + c[i]\n    for i in range(n):\n        if i > 0:\n            a = math.ceil((leftSum[i - 1] + 1) / x)\n        else:\n            a = 1\n        if i < n - 1:\n            b = rightSum[i + 1] + 1\n        else:\n            b = 1\n        if a < b:\n            count += 1\n        elif a == b and i >= n - i - 1:\n            count += 1\n    print(count, n - count)", "import math\nimport bisect\n\ndef power(x, y, p):\n    res = 1\n    x = x % p\n    while y > 0:\n        if y & 1 == 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\n\ndef inn():\n    return int(input())\n\ndef inl():\n    return list(map(int, input().split()))\nMOD = 10 ** 9 + 7\nINF = inf = 10 ** 18 + 5\nfor t in range(int(input())):\n    n = inn()\n    c = inl()\n    x = inn()\n    if n == 1:\n        print(1, 0)\n        continue\n    elif n == 2:\n        print(1, 1)\n        continue\n    pres = [0] * n\n    pres[0] = c[0]\n    for i in range(1, n):\n        pres[i] = pres[i - 1] + c[i]\n    ans = 1\n    for i in range(1, n - 1):\n        ta = pres[i - 1] / x\n        tb = pres[n - 1] - pres[i]\n        if ta < tb:\n            ans += 1\n        elif ta == tb and ans >= n - ans - 1:\n            ans += 1\n        else:\n            break\n    print(ans, n - ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = int(input())\n    cnt_arr = [0] * n\n    i = 0\n    j = n - 1\n    box_a = 1\n    box_b = 1\n    y = x * arr[j]\n    z = arr[i]\n    while i != j and box_a + box_b < n:\n        while y != 0:\n            if y > z:\n                y -= z\n                i += 1\n                box_a += 1\n                z = arr[i]\n            elif y == z:\n                i += 1\n                j -= 1\n                if i != j:\n                    box_a += 1\n                    box_b += 1\n                    y = x * arr[j]\n                    z = arr[i]\n                else:\n                    if box_a >= box_b:\n                        box_a += 1\n                    else:\n                        box_b += 1\n                    break\n            else:\n                z -= y\n                j -= 1\n                if i != j:\n                    box_b += 1\n                    y = x * arr[j]\n                    break\n                else:\n                    break\n            if i == j or box_a + box_b == n:\n                break\n    print(box_a, box_b)", "def candies(n, x, boxes):\n    B = n - 1\n    A = 0\n    Aeat = boxes[0]\n    Beat = boxes[n - 1]\n    while B - A > 1:\n        para = Aeat - Beat * x\n        if para == 0:\n            if A + 1 >= n - B:\n                A += 1\n                Aeat += boxes[A]\n            else:\n                B -= 1\n                Beat += boxes[B]\n        elif para < 0:\n            A += 1\n            Aeat += boxes[A]\n        else:\n            B -= 1\n            Beat += boxes[B]\n    return str(A + 1) + ' ' + str(n - B)\nt = int(input())\nfor z in range(t):\n    n = int(input())\n    boxes = [int(w) for w in input().split()]\n    x = int(input())\n    print(candies(n, x, boxes))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    tempa = a.copy()\n    x = int(input())\n    b = [k / x for k in a]\n    tempb = b.copy()\n    lhs = 0\n    rhs = n - 1\n    (cl, cr) = (0, 0)\n    case = -1\n    while cl + cr < n - 1:\n        if b[lhs] < a[rhs]:\n            a[rhs] -= b[lhs]\n            cl += 1\n            lhs += 1\n            case = 0\n        elif b[lhs] > a[rhs]:\n            b[lhs] -= a[rhs]\n            cr += 1\n            rhs -= 1\n            case = 1\n        else:\n            cr += 1\n            rhs -= 1\n            cl += 1\n            lhs += 1\n            case = 2\n    if case == 2:\n        if cl >= cr:\n            cl += 1\n        else:\n            cr += 1\n    elif case == 1:\n        cl += 1\n    else:\n        cr += 1\n    print(cl, end=' ')\n    print(cr)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    x = int(input())\n    i = 0\n    j = n - 1\n    a = 0\n    b = 0\n    f = 0\n    while 1:\n        temp = l[j] * x\n        while i < j and temp:\n            f = 0\n            temp2 = min(l[i], temp)\n            l[i] -= temp2\n            temp -= temp2\n            if not l[i]:\n                f = 1\n                a += 1\n                i += 1\n        if i == j:\n            b += 1\n            break\n        j -= 1\n        b += 1\n        if i == j:\n            if f:\n                if b > a:\n                    b += 1\n                else:\n                    a += 1\n            else:\n                a += 1\n            break\n    print(a, b)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    l = list(map(int, input().split()))\n    X = int(input())\n    A = l[:]\n    B = l[:]\n    for i in range(1, N):\n        A[i] = A[i - 1] + A[i]\n        B[N - 1 - i] = B[N - 1 - i] + B[N - i]\n    i = 0\n    j = N - 1\n    while i < j and j - i > 1:\n        if A[i] / X < B[j]:\n            i += 1\n        elif A[i] / X > B[j]:\n            j -= 1\n        elif i + 1 > N - j:\n            i += 1\n        elif i + 1 < N - j:\n            j -= 1\n        else:\n            i += 1\n    print(i + 1, N - j)", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    x = int(input())\n    sum = []\n    count = 0\n    low = -1\n    high = n\n    if n == 1:\n        print('1 0')\n        continue\n    counta = 0\n    countb = 0\n    timea = 0\n    timeb = 0\n    while 1:\n        if low >= high - 1:\n            break\n        if timea < timeb:\n            low += 1\n            timea += s[low] / x\n            counta += 1\n        elif timea > timeb:\n            high -= 1\n            timeb += s[high]\n            countb += 1\n        elif counta >= countb:\n            low += 1\n            timea += s[low] / x\n            counta += 1\n        else:\n            high -= 1\n            timeb += s[high]\n            countb += 1\n    print(counta, countb)"]