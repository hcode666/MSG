["mod = 1000000007\n\ndef solve(n):\n    visited = [False] * (n + 1)\n    pos = []\n    for i in range(0, n + 1, 2):\n        pos.append(i)\n    for i in range(1, n + 1, 2):\n        pos.append(i)\n    count = 0\n    for i in range(1, n + 1):\n        if not visited[i]:\n            count += 1\n            while not visited[i]:\n                visited[i] = True\n                i = pos[i]\n    print(pow(26, count, mod))\nfor i in range(int(input())):\n    n = int(input())\n    solve(n)", "mod = 1000000007\n\ndef solve(n):\n    visited = [False] * (n + 1)\n    pos = []\n    for i in range(0, n + 1, 2):\n        pos.append(i)\n    for i in range(1, n + 1, 2):\n        pos.append(i)\n    count = 0\n    for i in range(1, n + 1):\n        if not visited[i]:\n            count += 1\n            while not visited[i]:\n                visited[i] = True\n                i = pos[i]\n    print(pow(26, count, mod))\nfor i in range(int(input())):\n    n = int(input())\n    solve(n)", "def soln(n):\n    visited = [False] * (n + 1)\n    pos = []\n    for i in range(0, n + 1, 2):\n        pos.append(i)\n    for i in range(1, n + 1, 2):\n        pos.append(i)\n    count = 0\n    for i in range(1, n + 1):\n        if not visited[i]:\n            count += 1\n            while not visited[i]:\n                visited[i] = True\n                i = pos[i]\n    return pow(26, count, 1000000007)\nfor _ in range(int(input())):\n    print(soln(int(input())))", "from sys import *\nimport math\n\ndef solve():\n    mod = 1000000007\n    n = int(stdin.readline().rstrip())\n    visited = [False] * (n + 1)\n    count = 0\n    eli = list()\n    oli = list()\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            eli.append(i)\n        else:\n            oli.append(i)\n    res = eli + oli\n    res.insert(0, 0)\n    for i in range(1, n + 1):\n        if not visited[i]:\n            temp = i\n            while not visited[temp]:\n                visited[temp] = True\n                temp = res[temp]\n            count += 1\n    print(pow(26, count, mod))\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import *\nimport math\n\ndef solve():\n    mod = 1000000007\n    n = int(stdin.readline().rstrip())\n    visited = [False] * (n + 1)\n    count = 0\n    res1 = [2 * x for x in range(n // 2 + 1)]\n    res2 = [2 * x + 1 for x in range(n - n // 2)]\n    res = res1 + res2\n    for i in range(1, n + 1):\n        if not visited[i]:\n            temp = i\n            while not visited[temp]:\n                visited[temp] = True\n                temp = res[temp]\n            count += 1\n    print(pow(26, count, mod))\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import *\nimport math\n\ndef solve():\n    mod = 1000000007\n    n = int(stdin.readline().rstrip())\n    visited = [False] * (n + 1)\n    start = 1\n    count = 0\n    res1 = [2 * x for x in range(n // 2 + 1)]\n    res2 = [2 * x + 1 for x in range(n - n // 2)]\n    res = res1 + res2\n    for i in range(1, n + 1):\n        if not visited[i]:\n            temp = i\n            while not visited[temp]:\n                visited[temp] = True\n                temp = res[temp]\n            count += 1\n    print(pow(26, count, mod))\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import *\nimport math\n\ndef solve():\n    mod = 1000000007\n    n = int(stdin.readline().rstrip())\n    visited = [False] * (n + 1)\n    start = 1\n    count = 0\n    res1 = [2 * x for x in range(n // 2 + 1)]\n    res2 = [2 * x + 1 for x in range(n - n // 2)]\n    res = res1 + res2\n    for i in range(1, n + 1):\n        if not visited[i]:\n            temp = i\n            while not visited[temp]:\n                visited[temp] = True\n                temp = res[temp]\n            count += 1\n    print(pow(26, count, mod))\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import *\nimport math\n\ndef solve():\n    mod = 1000000007\n    n = int(stdin.readline().rstrip())\n    visited = [False] * (n + 1)\n    count = 0\n    res1 = [2 * x for x in range(n // 2 + 1)]\n    res2 = [2 * x + 1 for x in range(n - n // 2)]\n    res = res1 + res2\n    for i in range(1, n + 1):\n        if not visited[i]:\n            temp = i\n            while not visited[temp]:\n                visited[temp] = True\n                temp = res[temp]\n            count += 1\n    print(pow(26, count, mod))\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import *\nimport math\n\ndef solve():\n    mod = 1000000007\n    n = int(stdin.readline().rstrip())\n    visited = [False] * (n + 1)\n    start = 1\n    count = 0\n    res1 = [2 * x for x in range(n // 2 + 1)]\n    res2 = [2 * x + 1 for x in range(n - n // 2)]\n    res = res1 + res2\n    for i in range(1, n + 1):\n        if not visited[i]:\n            temp = i\n            while not visited[temp]:\n                visited[temp] = True\n                temp = res[temp]\n            count += 1\n    print(pow(26, count, mod))\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import *\nimport math\n\ndef solve():\n    mod = 1000000007\n    n = int(stdin.readline().rstrip())\n    visited = [False] * (n + 1)\n    start = 1\n    count = 0\n    res = [0] * (n + 1)\n    for i in range(1, n // 2 + 1):\n        res[i] = i * 2\n    for i in range(n // 2 + 1, n + 1):\n        res[i] = start\n        start += 2\n    for i in range(1, n + 1):\n        if not visited[i]:\n            temp = i\n            while not visited[temp]:\n                visited[temp] = True\n                temp = res[temp]\n            count += 1\n    print(pow(26, count, mod))\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import *\n\ndef solve():\n    mod = 1000000007\n    n = int(stdin.readline().rstrip())\n    visited = [False] * (n + 1)\n    start = 1\n    count = 0\n    res = [0] * (n + 1)\n    for i in range(1, n // 2 + 1):\n        res[i] = i * 2\n    for i in range(n // 2 + 1, n + 1):\n        res[i] = start\n        start += 2\n    for i in range(1, n + 1):\n        if not visited[i]:\n            temp = i\n            while not visited[temp]:\n                visited[temp] = True\n                temp = res[temp]\n            count += 1\n    print(pow(26, count, mod))\nfor _ in range(int(stdin.readline().rstrip())):\n    solve()", "from sys import *\n\ndef solve():\n    mod = 1000000007\n    for _ in range(int(stdin.readline().rstrip())):\n        n = int(stdin.readline().rstrip())\n        visited = [False] * (n + 1)\n        start = 1\n        count = 0\n        res = [0] * (n + 1)\n        for i in range(1, n // 2 + 1):\n            res[i] = i * 2\n        for i in range(n // 2 + 1, n + 1):\n            res[i] = start\n            start += 2\n        for i in range(1, n + 1):\n            if not visited[i]:\n                temp = i\n                while not visited[temp]:\n                    visited[temp] = True\n                    temp = res[temp]\n                count += 1\n        print(pow(26, count, mod))\nsolve()", "from sys import *\nimport math\n\ndef solve():\n    mod = 1000000007\n    for _ in range(int(stdin.readline().rstrip())):\n        n = int(stdin.readline().rstrip())\n        visited = [False] * (n + 1)\n        start = 1\n        count = 0\n        res = [0] * (n + 1)\n        for i in range(1, n // 2 + 1):\n            res[i] = i * 2\n        for i in range(n // 2 + 1, n + 1):\n            res[i] = start\n            start += 2\n        for i in range(1, n + 1):\n            if not visited[i]:\n                temp = i\n                while not visited[temp]:\n                    visited[temp] = True\n                    temp = res[temp]\n                count += 1\n        print(pow(26, count, mod))\nsolve()", "from sys import *\nimport math\n\ndef solve():\n    for _ in range(int(stdin.readline().rstrip())):\n        n = int(stdin.readline().rstrip())\n        visited = [False] * (n + 1)\n        start = 1\n        count = 0\n        res = [0] * (n + 1)\n        for i in range(1, n // 2 + 1):\n            res[i] = i * 2\n        for i in range(n // 2 + 1, n + 1):\n            res[i] = start\n            start += 2\n        for i in range(1, n + 1):\n            if not visited[i]:\n                temp = i\n                while not visited[temp]:\n                    visited[temp] = True\n                    temp = res[temp]\n                count += 1\n        print(pow(26, count, 1000000007))\nsolve()", "from sys import *\nimport math\n\ndef main():\n    for _ in range(int(stdin.readline().rstrip())):\n        n = int(stdin.readline().rstrip())\n        visited = [False] * (n + 1)\n        start = 1\n        count = 0\n        res = [0] * (n + 1)\n        for i in range(1, n // 2 + 1):\n            res[i] = i * 2\n        for i in range(n // 2 + 1, n + 1):\n            res[i] = start\n            start += 2\n        for i in range(1, n + 1):\n            if not visited[i]:\n                temp = i\n                while not visited[temp]:\n                    visited[temp] = True\n                    temp = res[temp]\n                count += 1\n        print(pow(26, count, 1000000007))\nmain()", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef main():\n    for _ in tr():\n        n = nl()\n        start = 1\n        res = [0] * (n + 1)\n        for i in range(1, n // 2 + 1):\n            res[i] = i * 2\n        for i in range(n // 2 + 1, n + 1):\n            res[i] = start\n            start += 2\n        visited = [False] * (n + 1)\n        count = 0\n        for i in range(1, n + 1):\n            if not visited[i]:\n                temp = i\n                while not visited[temp]:\n                    visited[temp] = True\n                    temp = res[temp]\n                count += 1\n        print(pow(26, count, 1000000007))\nmain()", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef main():\n    for _ in tr():\n        n = nl()\n        start = 1\n        res = [0] * (n + 1)\n        for i in range(1, n // 2 + 1):\n            res[i] = i * 2\n        for i in range(n // 2 + 1, n + 1):\n            res[i] = start\n            start += 2\n        visited = [False] * (n + 1)\n        count = 0\n        for i in range(1, n + 1):\n            if not visited[i]:\n                temp = i\n                while not visited[temp]:\n                    visited[temp] = True\n                    temp = res[temp]\n                count += 1\n        print(pow(26, count, 1000000007))\nmain()", "from sys import stdin, stdout\nimport math\nfrom collections import Counter\nimport functools\nimport time\n\ndef tr():\n    return range(int(line()))\n\ndef sm():\n    return map(int, line().split())\n\ndef ln():\n    return list(sm())\n\ndef nl():\n    return int(line())\n\ndef ssm():\n    return map(str, line().split())\n\ndef line():\n    return stdin.readline().rstrip()\n\ndef b(x):\n    return bin(x).replace('0b', '')\n\ndef o(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + '\\n')\n\ndef osp(x):\n    if type(x) != type(''):\n        x = str(x)\n    stdout.write(x + ' ')\n\ndef ol(x):\n    stdout.write(' '.join(map(str, x)))\n\ndef main():\n    for _ in tr():\n        n = nl()\n        start = 1\n        res = [0] * (n + 1)\n        for i in range(1, n // 2 + 1):\n            res[i] = i * 2\n        for i in range(n // 2 + 1, n + 1):\n            res[i] = start\n            start += 2\n        visited = [False] * (n + 1)\n        count = 0\n        for i in range(1, n + 1):\n            if not visited[i]:\n                temp = i\n                while not visited[temp]:\n                    visited[temp] = True\n                    temp = res[temp]\n                count += 1\n        print(pow(26, count, 1000000007))\nmain()"]