["(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(N, P, Q) = map(int, input().split())\nE = list(map(int, input().split()))\nT = list(map(int, input().split()))\narr = [(E[i] - T[i], i) for i in range(N)]\narr.sort(reverse=True)\norders = 0\ncost = 0\nfor (i, j) in arr:\n    if i < 0:\n        if orders + Q >= N:\n            cost += T[j]\n            Q -= 1\n            orders += 1\n            continue\n    if P:\n        cost += E[j]\n        orders += 1\n        P -= 1\n    else:\n        cost += T[j]\n        orders += 1\n        Q -= 1\nprint(cost)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = [(a[i] - b[i], i) for i in range(n)]\ndiff.sort(reverse=True)\norders = 0\nres = 0\nfor (d, i) in diff:\n    if d < 0:\n        if orders + y >= n:\n            res += b[i]\n            y -= 1\n            orders += 1\n            continue\n    if x:\n        res += a[i]\n        orders += 1\n        x -= 1\n    else:\n        res += b[i]\n        orders += 1\n        y -= 1\nprint(res)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = [(a[i] - b[i], i) for i in range(n)]\ndiff.sort(reverse=True)\norders = 0\nres = 0\nfor (d, i) in diff:\n    if d < 0:\n        if orders + y >= n:\n            res += b[i]\n            y -= 1\n            orders += 1\n            continue\n    if x:\n        res += a[i]\n        orders += 1\n        x -= 1\n    else:\n        res += b[i]\n        orders += 1\n        y -= 1\nprint(res)", "(order, max_andy, max_bob) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(order):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(order):\n    k = ab[j][1]\n    if a[k] > b[k] and max_andy > 0:\n        s = s + a[k]\n        max_andy = max_andy - 1\n    elif a[k] > b[k] and max_andy == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and max_bob > 0:\n        s = s + b[k]\n        max_bob = max_bob - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "temp = input().split()\n(n, x, y) = (int(temp[0]), int(temp[1]), int(temp[2]))\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nganancia = [a, b]\n\ndef max_delivery_man(a, b):\n    if a >= b:\n        return 0\n    return 1\nl = []\nfor i in range(n):\n    l.append((abs(a[i] - b[i]), i, max_delivery_man(a[i], b[i])))\nl.sort(key=lambda e: e[0], reverse=True)\nsuma = 0\nfor elem in l:\n    if elem[2] == 0 and x > 0:\n        suma = suma + ganancia[elem[2]][elem[1]]\n        x = x - 1\n    elif elem[2] == 1 and y > 0:\n        suma = suma + ganancia[elem[2]][elem[1]]\n        y = y - 1\n    else:\n        suma = suma + ganancia[1 - elem[2]][elem[1]]\nprint(suma)", "temp = input().split()\n(n, x, y) = (int(temp[0]), int(temp[1]), int(temp[2]))\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nganancia = [a, b]\n\ndef max_delivery_man(a, b):\n    if a >= b:\n        return 0\n    return 1\nl = []\nfor i in range(n):\n    l.append((abs(a[i] - b[i]), i, max_delivery_man(a[i], b[i])))\nl.sort(key=lambda e: e[0], reverse=True)\nsuma = 0\nfor elem in l:\n    if elem[2] == 0 and x > 0:\n        suma = suma + ganancia[elem[2]][elem[1]]\n        x = x - 1\n    elif elem[2] == 1 and y > 0:\n        suma = suma + ganancia[elem[2]][elem[1]]\n        y = y - 1\n    else:\n        suma = suma + ganancia[1 - elem[2]][elem[1]]\nprint(suma)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nd = []\nfor i in range(n):\n    d.append((abs(a[i] - b[i]), i))\nd.sort()\nd.reverse()\nfor j in range(n):\n    if a[d[j][1]] > b[d[j][1]]:\n        if x > 0:\n            c += a[d[j][1]]\n            x -= 1\n        else:\n            c += b[d[j][1]]\n            y -= 1\n    elif y > 0:\n        c += b[d[j][1]]\n        y -= 1\n    else:\n        c += a[d[j][1]]\n        x -= 1\nprint(c)", "(N, x, y) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nprofit = 0\ndif = []\nfor i in range(N):\n    dif.append((abs(A[i] - B[i]), i))\ndif.sort()\ndif.reverse()\nfor i in range(N):\n    if A[dif[i][1]] > B[dif[i][1]]:\n        if x > 0:\n            profit += A[dif[i][1]]\n            x -= 1\n        else:\n            profit += B[dif[i][1]]\n            y -= 1\n    elif y > 0:\n        profit += B[dif[i][1]]\n        y -= 1\n    else:\n        profit += A[dif[i][1]]\n        x -= 1\nprint(profit)", "(n, x, y) = map(int, input().split())\nandy = [*map(int, input().split())]\nbob = [*map(int, input().split())]\ncombined = [[andy[i], bob[i]] for i in range(n)]\ncombined.sort(key=lambda x: abs(x[0] - x[1]), reverse=True)\nans = 0\nz = x + y\ni = 0\nwhile i < n:\n    if combined[i][0] > combined[i][1]:\n        if x > 0:\n            x -= 1\n            ans += combined[i][0]\n        else:\n            y -= 1\n            ans += combined[i][1]\n    elif y > 0:\n        y -= 1\n        ans += combined[i][1]\n    else:\n        x -= 1\n        ans += combined[i][0]\n    i += 1\nprint(ans)", "(n, x, y) = map(int, input().split())\nandy = [*map(int, input().split())]\nbob = [*map(int, input().split())]\ncombined = [[andy[i], bob[i]] for i in range(n)]\ncombined.sort(key=lambda x: abs(x[0] - x[1]), reverse=True)\nans = 0\nz = x + y\ni = 0\nwhile i < n:\n    if combined[i][0] > combined[i][1]:\n        if x > 0:\n            x -= 1\n            ans += combined[i][0]\n        else:\n            y -= 1\n            ans += combined[i][1]\n    elif y > 0:\n        y -= 1\n        ans += combined[i][1]\n    else:\n        x -= 1\n        ans += combined[i][0]\n    i += 1\nprint(ans)", "(n, x, y) = map(int, input().split())\nandy = [*map(int, input().split())]\nbob = [*map(int, input().split())]\ncombined = [[andy[i], bob[i]] for i in range(n)]\ncombined.sort(key=lambda x: abs(x[0] - x[1]), reverse=True)\nans = 0\nz = x + y\ni = 0\nwhile i < n:\n    if combined[i][0] > combined[i][1]:\n        if x > 0:\n            x -= 1\n            ans += combined[i][0]\n        else:\n            y -= 1\n            ans += combined[i][1]\n    elif y > 0:\n        y -= 1\n        ans += combined[i][1]\n    else:\n        x -= 1\n        ans += combined[i][0]\n    i += 1\nprint(ans)", "(n, x, y) = map(int, input().split())\nandy = [*map(int, input().split())]\nbob = [*map(int, input().split())]\ncombined = [[andy[i], bob[i]] for i in range(n)]\ncombined.sort(key=lambda x: abs(x[0] - x[1]), reverse=True)\nans = 0\nz = x + y\ni = 0\nwhile i < n:\n    if combined[i][0] > combined[i][1]:\n        if x > 0:\n            x -= 1\n            ans += combined[i][0]\n        else:\n            y -= 1\n            ans += combined[i][1]\n    elif y > 0:\n        y -= 1\n        ans += combined[i][1]\n    else:\n        x -= 1\n        ans += combined[i][0]\n    i += 1\nprint(ans)", "(n, x, y) = map(int, input().split())\nandy = [*map(int, input().split())]\nbob = [*map(int, input().split())]\ncombined = [[andy[i], bob[i]] for i in range(n)]\ncombined.sort(key=lambda x: abs(x[0] - x[1]), reverse=True)\nans = 0\nz = x + y\ni = 0\nwhile i < n:\n    if combined[i][0] > combined[i][1]:\n        if x > 0:\n            x -= 1\n            ans += combined[i][0]\n        else:\n            y -= 1\n            ans += combined[i][1]\n    elif y > 0:\n        y -= 1\n        ans += combined[i][1]\n    else:\n        x -= 1\n        ans += combined[i][0]\n    i += 1\nprint(ans)", "(n, x, y) = map(int, input().split())\nandy = [*map(int, input().split())]\nbob = [*map(int, input().split())]\ncombined = [[andy[i], bob[i]] for i in range(n)]\ncombined.sort(key=lambda x: abs(x[0] - x[1]), reverse=True)\nans = 0\nz = x + y\ni = 0\nwhile i < n:\n    if combined[i][0] > combined[i][1]:\n        if x > 0:\n            x -= 1\n            ans += combined[i][0]\n        else:\n            y -= 1\n            ans += combined[i][1]\n    elif y > 0:\n        y -= 1\n        ans += combined[i][1]\n    else:\n        x -= 1\n        ans += combined[i][0]\n    i += 1\nprint(ans)", "(n, x, y) = map(int, input().split())\nandy = [*map(int, input().split())]\nbob = [*map(int, input().split())]\ncombined = [[andy[i], bob[i]] for i in range(n)]\ncombined.sort(key=lambda x: abs(x[0] - x[1]), reverse=True)\nans = 0\nz = x + y\ni = 0\nwhile i < n:\n    if combined[i][0] > combined[i][1]:\n        if x > 0:\n            x -= 1\n            ans += combined[i][0]\n        else:\n            y -= 1\n            ans += combined[i][1]\n    elif y > 0:\n        y -= 1\n        ans += combined[i][1]\n    else:\n        x -= 1\n        ans += combined[i][0]\n    i += 1\nprint(ans)", "(n, x, y) = map(int, input().split())\nandy = [*map(int, input().split())]\nbob = [*map(int, input().split())]\ncombined = [[andy[i], bob[i]] for i in range(n)]\ncombined.sort(key=lambda x: abs(x[0] - x[1]), reverse=True)\nans = 0\nz = x + y\ni = 0\nwhile i < n:\n    if combined[i][0] > combined[i][1]:\n        if x > 0:\n            x -= 1\n            ans += combined[i][0]\n        else:\n            y -= 1\n            ans += combined[i][1]\n    elif y > 0:\n        y -= 1\n        ans += combined[i][1]\n    else:\n        x -= 1\n        ans += combined[i][0]\n    i += 1\nprint(ans)", "(n, x, y) = map(int, input().split())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nloss = list()\nfor i in range(0, n):\n    loss.append((abs(a[i] - b[i]), i))\nloss.sort()\nloss.reverse()\nans = 0\nfor j in range(0, n):\n    i = loss[j][1]\n    if a[i] > b[i]:\n        if x > 0:\n            x = x - 1\n            ans += a[i]\n        else:\n            ans += b[i]\n            y = y - 1\n    elif y > 0:\n        y = y - 1\n        ans += b[i]\n    else:\n        ans += a[i]\n        x = x - 1\nprint(ans)", "(N, X, Y) = map(int, input().split())\nl1 = list(map(int, input().split()))\nl2 = list(map(int, input().split()))\nloss = []\nindex = 0\nfor (i, j) in zip(l1, l2):\n    loss.append([abs(i - j), index])\n    index += 1\nloss.sort(key=lambda x: x[0], reverse=True)\ntp = 0\nfor i in range(N):\n    index = loss[i][1]\n    if l1[index] >= l2[index]:\n        if X > 0:\n            tp += l1[index]\n            X -= 1\n        else:\n            tp += l2[index]\n            Y -= 1\n    elif Y > 0:\n        tp += l2[index]\n        Y -= 1\n    else:\n        tp += l1[index]\n        X -= 1\nprint(tp)", "(n, x, y) = map(int, input().split())\nla = list(map(int, input().split()))\nlb = list(map(int, input().split()))\nd = [abs(la[i] - lb[i]) for i in range(n)]\n(d, la, lb) = zip(*sorted(zip(d, la, lb)))\ncount = 0\n(z, a) = (x, y)\nmla = 0\nmlb = 0\nfor i in range(n - 1, -1, -1):\n    if la[i] > lb[i]:\n        if x > 0:\n            x -= 1\n            count += la[i]\n        else:\n            y -= 1\n            count += lb[i]\n    elif la[i] == lb[i]:\n        mla += la[i]\n    elif y > 0:\n        y -= 1\n        count += lb[i]\n    else:\n        x -= 1\n        count += la[i]\ncount = count + mla\nprint(count)", "(N, X, Y) = map(int, input().split())\nt1 = list(map(int, input().split()))\nt2 = list(map(int, input().split()))\ndiff = []\nfor i in range(len(t1)):\n    diff.append(t1[i] - t2[i])\ndiff.sort(reverse=1)\nprofit = sum(t2)\ncount = 1\ncount2 = N\nwhile count <= X and diff[count - 1] >= 0 or count2 > Y:\n    profit += diff[count - 1]\n    count += 1\n    count2 -= 1\nprint(profit)", "(N, X, Y) = map(int, input().split())\ntip1 = list(map(int, input().split()))\ntip2 = list(map(int, input().split()))\ndiff = []\nfor i in range(len(tip1)):\n    diff.append(tip1[i] - tip2[i])\ndiff.sort(reverse=1)\nprofit = sum(tip2)\ncnt1 = 1\ncnt2 = N\nwhile cnt1 <= X and diff[cnt1 - 1] >= 0 or cnt2 > Y:\n    profit += diff[cnt1 - 1]\n    cnt1 += 1\n    cnt2 -= 1\nprint(profit)", "(N, X, Y) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nl = []\nfor i in range(N):\n    l.append(A[i] - B[i])\nl.sort(reverse=True)\ncountA = 1\ncountB = N\nSum = sum(B)\nwhile countA <= X and l[countA - 1] >= 0 or countB > Y:\n    Sum += l[countA - 1]\n    countA += 1\n    countB -= 1\nprint(Sum)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprofit = []\ni = 0\nfor (v1, v2) in zip(a, b):\n    profit.append((abs(v1 - v2), i))\n    i += 1\nprofit.sort(reverse=1)\nres = 0\nfor p in profit:\n    (profit, index) = (p[0], p[1])\n    costA = a[index]\n    costB = b[index]\n    if x > 0 and costA >= costB or y == 0:\n        res += costA\n        x -= 1\n    else:\n        res += costB\n        y -= 1\nprint(res)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\nandy = [int(x) for x in input().split()]\nbob = [int(x) for x in input().split()]\nli = [andy[i] - bob[i] for i in range(n)]\nli.sort(reverse=True)\nans = sum(bob)\nfor i in range(x):\n    if li[i] > 0:\n        ans += li[i]\nprint(ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "def get_output(n, x, y, a, b, diff_arr):\n    tip_sum = 0\n    for j in range(n):\n        ind = diff_arr[j][1]\n        if a[ind] > b[ind] and x > 0:\n            tip_sum += a[ind]\n            x -= 1\n        elif y > 0:\n            tip_sum += b[ind]\n            y -= 1\n        else:\n            tip_sum += a[ind]\n            x -= 1\n    return tip_sum\n(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff_arr = []\nfor i in range(n):\n    diff_arr.append((abs(a[i] - b[i]), i))\ndiff_arr.sort(reverse=True)\nprint(get_output(n, x, y, a, b, diff_arr))", "def mp(n, x, y, a, b, diff):\n    pro = 0\n    for j in range(n):\n        i = diff[j][1]\n        if a[i] > b[i] and x > 0:\n            pro += a[i]\n            x -= 1\n        elif y > 0:\n            pro += b[i]\n            y -= 1\n        else:\n            pro += a[i]\n            x -= 1\n    return pro\n(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = []\nfor i in range(n):\n    diff.append((abs(a[i] - b[i]), i))\ndiff.sort(reverse=True)\nprint(mp(n, x, y, a, b, diff))", "def mp(n, x, y, a, b, diff):\n    pro = 0\n    for j in range(n):\n        i = diff[j][1]\n        if a[i] > b[i] and x > 0:\n            pro += a[i]\n            x -= 1\n        elif y > 0:\n            pro += b[i]\n            y -= 1\n        else:\n            pro += a[i]\n            x -= 1\n    return pro\n(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = []\nfor i in range(n):\n    diff.append((abs(a[i] - b[i]), i))\ndiff.sort(reverse=True)\nprint(mp(n, x, y, a, b, diff))", "def mp(n, x, y, a, b, diff):\n    pro = 0\n    for j in range(n):\n        i = diff[j][1]\n        if a[i] > b[i] and x > 0:\n            pro += a[i]\n            x -= 1\n        elif y > 0:\n            pro += b[i]\n            y -= 1\n        else:\n            pro += a[i]\n            x -= 1\n    return pro\n(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = []\nfor i in range(n):\n    diff.append((abs(a[i] - b[i]), i))\ndiff.sort(reverse=True)\nprint(mp(n, x, y, a, b, diff))", "(N, X, Y) = map(int, input().split())\nA = []\nB = []\nd = []\nl = []\na1 = input().split()\nb1 = input().split()\nfor i in range(N):\n    A.append(int(a1[i]))\n    B.append(int(b1[i]))\n    d.append([A[i] - B[i], i])\n    if d[i][0] < 0:\n        d[i][0] = -d[i][0]\nd.sort(reverse=True)\nans = 0\nfor i in range(N):\n    i1 = d[i][1]\n    if A[i1] > B[i1]:\n        if X > 0:\n            X = X - 1\n            ans = ans + A[i1]\n        else:\n            Y = Y - 1\n            ans = ans + B[i1]\n    elif Y > 0:\n        Y = Y - 1\n        ans = ans + B[i1]\n    else:\n        X = X - 1\n        ans = ans + A[i1]\nprint(ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "(N, X, Y) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nloss = []\nfor i in range(N):\n    loss.append((abs(A[i] - B[i]), i))\nloss.sort(reverse=True)\nprofit = 0\nfor i in range(N):\n    k = loss[i][1]\n    if A[k] > B[k] and X > 0:\n        profit += A[k]\n        X -= 1\n    elif A[k] > B[k] and X == 0:\n        profit += B[k]\n    elif B[k] > A[k] and Y > 0:\n        profit += B[k]\n        Y -= 1\n    else:\n        profit += A[k]\nprint(profit)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nlst = [a[i] - b[i] for i in range(n)]\nlst.sort(reverse=True)\nans = sum(b)\nfor j in range(x):\n    if lst[j] > 0:\n        ans += lst[j]\nprint(ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nlst = [a[i] - b[i] for i in range(n)]\nlst.sort(reverse=True)\nans = sum(b)\nfor j in range(x):\n    if lst[j] > 0:\n        ans += lst[j]\nprint(ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "from math import *\nfrom collections import *\nfrom functools import *\n\ndef rvi():\n    return [*map(int, input().split())]\nfor _ in range(1):\n    (n, x, y) = rvi()\n    a = rvi()\n    b = rvi()\n    c = [(abs(i - j), i, j) for (i, j) in zip(a, b)]\n    c.sort(reverse=1)\n    r = 0\n    for (a, i, j) in c:\n        if j > i:\n            if y > 0:\n                y -= 1\n                r += j\n            else:\n                x -= 1\n                r += i\n        elif x > 0:\n            x -= 1\n            r += i\n        else:\n            y -= 1\n            r += j\n    print(r)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nlst = [a[i] - b[i] for i in range(n)]\nlst.sort(reverse=1)\nans = sum(b)\nfor j in range(x):\n    if lst[j] > 0:\n        ans += lst[j]\nprint(ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nlst = [a[i] - b[i] for i in range(n)]\nlst.sort(reverse=1)\nans = sum(b)\nfor j in range(x):\n    if lst[j] > 0:\n        ans += lst[j]\nprint(ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nlst = [a[i] - b[i] for i in range(n)]\nlst.sort(reverse=1)\nans = sum(b)\nfor j in range(x):\n    if lst[j] > 0:\n        ans += lst[j]\nprint(ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nlst = [a[i] - b[i] for i in range(n)]\nlst.sort(reverse=1)\nans = sum(b)\nfor j in range(x):\n    if lst[j] > 0:\n        ans += lst[j]\nprint(ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nlst = [a[i] - b[i] for i in range(n)]\nlst.sort(reverse=1)\nans = sum(b)\nfor j in range(x):\n    if lst[j] > 0:\n        ans += lst[j]\nprint(ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nlst = [a[i] - b[i] for i in range(n)]\nlst.sort(reverse=1)\nans = sum(b)\nfor j in range(x):\n    if lst[j] > 0:\n        ans += lst[j]\nprint(ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nab = []\nfor i in range(n):\n    ab.append((abs(a[i] - b[i]), i))\nab.sort()\nab.reverse()\ns = 0\nfor j in range(n):\n    k = ab[j][1]\n    if a[k] > b[k] and x > 0:\n        s = s + a[k]\n        x = x - 1\n    elif a[k] > b[k] and x == 0:\n        s = s + b[k]\n    elif b[k] > a[k] and y > 0:\n        s = s + b[k]\n        y = y - 1\n    else:\n        s = s + a[k]\nprint(s)", "try:\n    (n, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ab = []\n    for i in range(n):\n        ab.append((abs(a[i] - b[i]), i))\n    ab.sort()\n    ab.reverse()\n    s = 0\n    for j in range(n):\n        k = ab[j][1]\n        if a[k] > b[k] and x > 0:\n            s = s + a[k]\n            x = x - 1\n        elif a[k] > b[k] and x == 0:\n            s = s + b[k]\n        elif b[k] > a[k] and y > 0:\n            s = s + b[k]\n            y = y - 1\n        else:\n            s = s + a[k]\n    print(s)\nexcept:\n    pass", "(N, x, y) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nans = 0\ndifference = []\nfor (i, j) in zip(A, B):\n    difference.append((abs(i - j), i, j))\ndifference.sort(key=lambda x: x[0], reverse=True)\nfor i in difference:\n    if i[1] >= i[2]:\n        if x != 0:\n            ans += i[1]\n            x -= 1\n        else:\n            ans += i[2]\n    elif y != 0:\n        ans += i[2]\n        y -= 1\n    else:\n        ans += i[2]\nprint(ans)", "(N, x, y) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nans = 0\ndifference = []\nfor (i, j) in zip(A, B):\n    difference.append((abs(i - j), i, j))\ndifference.sort(key=lambda x: x[0], reverse=True)\nfor i in difference:\n    if i[1] >= i[2]:\n        if x != 0:\n            ans += i[1]\n            x -= 1\n        else:\n            ans += i[2]\n    elif y != 0:\n        ans += i[2]\n        y -= 1\n    else:\n        ans += i[2]\nprint(ans)", "(N, X, Y) = map(int, input('').split())\nandy = list(map(int, input('').split()))\nbob = list(map(int, input('').split()))\ndifferences = []\nfor i in range(len(andy)):\n    differences.append((abs(andy[i] - bob[i]), i))\ndifferences.sort(key=lambda tup: tup[0], reverse=True)\ntotal_tip = 0\nfor (_, index) in differences:\n    if andy[index] > bob[index] and X > 0 or Y == 0:\n        X -= 1\n        total_tip += andy[index]\n    else:\n        Y -= 1\n        total_tip += bob[index]\nprint(total_tip)", "(n, x, y) = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\ndiffs = [0] * n\nk = 0\nfor (i, j) in zip(a, b):\n    diffs[k] = (abs(i - j), k)\n    k += 1\ndiffs.sort(key=lambda x: x[0], reverse=True)\ns = 0\nfor l in diffs:\n    i = l[1]\n    if a[i] >= b[i]:\n        if x > 0:\n            s += a[i]\n            x -= 1\n        else:\n            s += b[i]\n            y -= 1\n    elif y > 0:\n        s += b[i]\n        y -= 1\n    else:\n        s += a[i]\n        x -= 1\nprint(s)", "def mp(n, x, y, a, b, diff):\n    pro = 0\n    for j in range(n):\n        i = diff[j][1]\n        if a[i] > b[i] and x > 0:\n            pro += a[i]\n            x -= 1\n        elif y > 0:\n            pro += b[i]\n            y -= 1\n        else:\n            pro += a[i]\n            x -= 1\n    return pro\n(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = []\nfor i in range(n):\n    diff.append((abs(a[i] - b[i]), i))\ndiff.sort(reverse=True)\nprint(mp(n, x, y, a, b, diff))", "def mp(n, x, y, a, b, diff):\n    pro = 0\n    for j in range(n):\n        i = diff[j][1]\n        if a[i] > b[i] and x > 0:\n            pro += a[i]\n            x -= 1\n        elif y > 0:\n            pro += b[i]\n            y -= 1\n        else:\n            pro += a[i]\n            x -= 1\n    return pro\n(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = []\nfor i in range(n):\n    diff.append((abs(a[i] - b[i]), i))\ndiff.sort(reverse=True)\nprint(mp(n, x, y, a, b, diff))", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = []\nsum = 0\nfor i in range(n):\n    diff.append((abs(a[i] - b[i]), i))\ndiff.sort(reverse=True)\nfor j in range(n):\n    i = diff[j][1]\n    if a[i] > b[i] and x > 0 or y < 0:\n        sum += a[i]\n        x -= 1\n    else:\n        sum += b[i]\n        y -= 1\nprint(sum)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = []\nsum = 0\nfor i in range(n):\n    diff.append((abs(a[i] - b[i]), i))\ndiff.sort(reverse=True)\nfor j in range(n):\n    i = diff[j][1]\n    if a[i] > b[i] and x > 0 or y < 0:\n        sum += a[i]\n        x -= 1\n    else:\n        sum += b[i]\n        y -= 1\nprint(sum)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nl = []\nc = d = sum = 0\nfor i in range(n):\n    l.append([abs(a[i] - b[i]), i])\nl.sort(reverse=True)\nfor i in range(n):\n    key = l[i][1]\n    if a[key] >= b[key]:\n        if c < x:\n            sum += a[key]\n            c += 1\n        else:\n            sum += b[key]\n            d += 1\n    elif d < y:\n        sum += b[key]\n        d += 1\n    else:\n        sum += a[key]\n        c += 1\nprint(sum)", "(n, x, y) = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nd = []\nc = 0\nfor i in range(n):\n    d.append([abs(a[i] - b[i]), i])\nd.sort()\nd.reverse()\nfor i in range(n):\n    k = d[i][1]\n    if a[k] >= b[k]:\n        if x > 0:\n            c += a[k]\n            x -= 1\n        else:\n            c += b[k]\n            y -= 1\n    elif y > 0:\n        c += b[k]\n        y -= 1\n    else:\n        c += a[k]\n        x -= 1\nprint(c)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ntotal = 0\nloss = []\nfor i in range(0, n):\n    loss.append((abs(b[i] - a[i]), i))\nloss.sort(reverse=True)\nfor (m, n) in loss:\n    if a[n] > b[n]:\n        if x > 0:\n            total += a[n]\n            x -= 1\n        else:\n            total += b[n]\n            y -= 1\n    elif y > 0:\n        total += b[n]\n        y -= 1\n    else:\n        total += a[n]\n        x -= 1\nprint(total)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ntotal = 0\nloss = []\nfor i in range(0, n):\n    loss.append((abs(b[i] - a[i]), i))\nloss.sort(reverse=True)\nfor (m, n) in loss:\n    if a[n] > b[n]:\n        if x > 0:\n            total += a[n]\n            x -= 1\n        else:\n            total += b[n]\n            y -= 1\n    elif y > 0:\n        total += b[n]\n        y -= 1\n    else:\n        total += a[n]\n        x -= 1\nprint(total)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))[:n]\nb = list(map(int, input().split()))[:n]\ntotal = 0\nloss = []\nfor i in range(0, n):\n    loss.append((abs(b[i] - a[i]), i))\nloss.sort(reverse=True)\nfor (m, n) in loss:\n    if a[n] > b[n]:\n        if x > 0:\n            total += a[n]\n            x -= 1\n        else:\n            total += b[n]\n            y -= 1\n    elif y > 0:\n        total += b[n]\n        y -= 1\n    else:\n        total += a[n]\n        x -= 1\nprint(total)", "(n, x, y) = [int(c) for c in input().split()]\na = [int(c) for c in input().split()]\nb = [int(c) for c in input().split()]\nd = [i - j for (i, j) in zip(a, b)]\nans = sum(a)\n(xcount, ycount) = (0, 0)\nd.sort(key=lambda x: abs(x), reverse=True)\nfor i in range(len(d)):\n    if d[i] >= 0:\n        if xcount < x:\n            xcount += 1\n        else:\n            ycount += 1\n            ans -= d[i]\n    elif ycount < y:\n        ycount += 1\n        ans -= d[i]\n    else:\n        xcount += 1\nprint(ans)", "(m, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = []\nfor i in range(0, m):\n    diff.append((abs(b[i] - a[i]), i))\nsorteddiff = sorted(diff, key=lambda x: x[0], reverse=True)\nt = 0\nfor i in range(m):\n    if a[sorteddiff[i][1]] > b[sorteddiff[i][1]]:\n        if x > 0:\n            t += a[sorteddiff[i][1]]\n            x -= 1\n        else:\n            t += b[sorteddiff[i][1]]\n            y -= 1\n    elif y > 0:\n        t += b[sorteddiff[i][1]]\n        y -= 1\n    else:\n        t += a[sorteddiff[i][1]]\n        x -= 1\nprint(t)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))[:n]\nb = list(map(int, input().split()))[:n]\ntotal = 0\nloss = []\nfor i in range(0, n):\n    loss.append((abs(b[i] - a[i]), i))\nloss.sort(reverse=True)\nfor (m, n) in loss:\n    if a[n] > b[n]:\n        if x > 0:\n            total += a[n]\n            x -= 1\n        else:\n            total += b[n]\n            y -= 1\n    elif y > 0:\n        total += b[n]\n        y -= 1\n    else:\n        total += a[n]\n        x -= 1\nprint(total)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = [(abs(a[i] - b[i]), i) for i in range(n)]\nsorteddiff = sorted(diff, key=lambda x: x[0], reverse=True)\nt = 0\nfor i in range(n):\n    if a[sorteddiff[i][1]] > b[sorteddiff[i][1]]:\n        if x > 0:\n            t += a[sorteddiff[i][1]]\n            x -= 1\n        else:\n            t += b[sorteddiff[i][1]]\n            y -= 1\n    elif y > 0:\n        t += b[sorteddiff[i][1]]\n        y -= 1\n    else:\n        t += a[sorteddiff[i][1]]\n        x -= 1\nprint(t)", "def sol(A, B, x, y):\n    diff = []\n    for i in range(len(A)):\n        diff.append([abs(A[i] - B[i]), i])\n    diff.sort(reverse=True)\n    total = 0\n    for i in diff:\n        idx = i[1]\n        if A[idx] > B[idx]:\n            if x > 0:\n                total += A[idx]\n                x = x - 1\n            else:\n                total += B[idx]\n                y = y - 1\n        elif y > 0:\n            total += B[idx]\n            y = y - 1\n        else:\n            total += A[idx]\n            x = x - 1\n    return total\n(n, x, y) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nprint(sol(A, B, x, y))", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(1):\n    (n, x, y) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l1 = []\n    for i in range(n):\n        ans = abs(a[i] - b[i])\n        l1.append((ans, a[i], b[i]))\n    l1.sort()\n    real_ans = 0\n    for (a, b, c) in l1[::-1]:\n        if b >= c and x > 0:\n            real_ans += b\n            x -= 1\n        elif b <= c and y > 0:\n            real_ans += c\n            y -= 1\n        elif x == 0 and y > 0:\n            real_ans += c\n            y -= 1\n        elif y == 0 and x > 0:\n            real_ans += b\n            x -= 1\n    print(real_ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = []\nfor i in range(len(a)):\n    c.append([a[i], b[i]])\nc.sort(key=lambda x: abs(x[0] - x[1]))\ns = 0\nc.reverse()\nfor i in range(len(a)):\n    if c[i][0] > c[i][1] and x > 0:\n        s += c[i][0]\n        x -= 1\n    elif c[i][0] < c[i][1] and y > 0:\n        s += c[i][1]\n        y -= 1\n    elif c[i][0] < c[i][1] and y <= 0:\n        s += c[i][0]\n        x -= 1\n    elif c[i][0] > c[i][1] and x <= 0:\n        s += c[i][1]\n        y -= 1\n    elif c[i][0] == c[i][1] and x >= y and (x > 0):\n        s += c[i][0]\n        x -= 1\n    elif c[i][0] == c[i][1] and y >= x and (y > 0):\n        s += c[i][0]\n        y -= 1\nprint(s)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nlst = [a[i] - b[i] for i in range(n)]\nlst.sort(reverse=1)\nans = sum(b)\nfor j in range(x):\n    if lst[j] > 0:\n        ans += lst[j]\nprint(ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))[:n]\nb = list(map(int, input().split()))[:n]\ntotal = 0\nloss = []\nfor i in range(0, n):\n    loss.append((abs(b[i] - a[i]), i))\nloss.sort(reverse=True)\nfor (m, n) in loss:\n    if a[n] > b[n]:\n        if x > 0:\n            total += a[n]\n            x -= 1\n        else:\n            total += b[n]\n            y -= 1\n    elif y > 0:\n        total += b[n]\n        y -= 1\n    else:\n        total += a[n]\n        x -= 1\nprint(total)", "while 1:\n    try:\n        (n, x, y) = map(int, input().split())\n        A = list(map(int, input().split()))\n        B = list(map(int, input().split()))\n        ans = 0\n        s = 0\n        c = []\n        for i in range(n):\n            s += A[i]\n            c.append(B[i] - A[i])\n        c.sort(reverse=True)\n        res = -1\n        for i in range(y):\n            s += c[i]\n            if i + 1 >= n - x:\n                res = max(res, s)\n        print(res)\n    except:\n        break", "(N, X, Y) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n(loss, ans) = ([], 0)\nfor i in range(N):\n    if A[i] > B[i]:\n        loss.append((A[i] - B[i], i))\n    else:\n        loss.append((B[i] - A[i], i))\nloss.sort(reverse=True)\nfor (l, idx) in loss:\n    if A[idx] >= B[idx]:\n        if X > 0:\n            ans += A[idx]\n            X -= 1\n        else:\n            ans += B[idx]\n            Y -= 1\n    elif Y > 0:\n        ans += B[idx]\n        Y -= 1\n    else:\n        ans += A[idx]\n        X -= 1\nprint(ans)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    if a[i] > b[i]:\n        l.append((a[i] - b[i], i))\n    else:\n        l.append((b[i] - a[i], i))\nl.sort(reverse=True)\nprofit = 0\nfor (m, n) in l:\n    if a[n] > b[n]:\n        if x > 0:\n            profit += a[n]\n            x -= 1\n        else:\n            profit += b[n]\n            y -= 1\n    elif y > 0:\n        profit += b[n]\n        y -= 1\n    else:\n        profit += a[n]\n        x -= 1\nprint(profit)", "(N, X, Y) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nloss = []\nans = 0\nfor i in range(N):\n    if A[i] > B[i]:\n        loss.append((A[i] - B[i], i))\n    else:\n        loss.append((B[i] - A[i], i))\nloss.sort(reverse=True)\nfor (l, idx) in loss:\n    if A[idx] >= B[idx]:\n        if X > 0:\n            ans += A[idx]\n            X -= 1\n        else:\n            ans += B[idx]\n            Y -= 1\n    elif Y > 0:\n        ans += B[idx]\n        Y -= 1\n    else:\n        ans += A[idx]\n        X -= 1\nprint(ans)", "(N, X, Y) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nloss = []\nans = 0\nfor i in range(N):\n    if A[i] > B[i]:\n        loss.append((A[i] - B[i], i))\n    else:\n        loss.append((B[i] - A[i], i))\nloss.sort(reverse=True)\nfor (l, idx) in loss:\n    if A[idx] >= B[idx]:\n        if X > 0:\n            ans += A[idx]\n            X -= 1\n        else:\n            ans += B[idx]\n            Y -= 1\n    elif Y > 0:\n        ans += B[idx]\n        Y -= 1\n    else:\n        ans += A[idx]\n        X -= 1\nprint(ans)", "(n, x, y) = [int(j) for j in input().split()]\na = [int(j) for j in input().split()]\nb = [int(j) for j in input().split()]\nc = [(abs(i - j), i, j) for (i, j) in zip(a, b)]\nc.sort(reverse=1)\nans = 0\nfor (i, j, k) in c:\n    if x > 0 and y > 0:\n        if j < k:\n            ans += k\n            y -= 1\n        else:\n            ans += j\n            x -= 1\n    elif x <= 0:\n        ans += k\n    else:\n        ans += j\nprint(ans)", "(n, x, y) = map(int, input().split())\narr = list(map(int, input().split()))\nbarr = list(map(int, input().split()))\nmas = 0\nz = [[i, abs(arr[i] - barr[i])] for i in range(n)]\nz.sort(key=lambda x: x[1], reverse=True)\nfor i in z:\n    if arr[i[0]] >= barr[i[0]]:\n        if x > 0:\n            mas += arr[i[0]]\n            x -= 1\n        else:\n            mas += barr[i[0]]\n            y -= 1\n    elif arr[i[0]] <= barr[i[0]]:\n        if y > 0:\n            mas += barr[i[0]]\n            y -= 1\n        else:\n            mas += arr[i[0]]\n            x -= 1\nprint(mas)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = []\nsum = 0\nfor i in range(n):\n    diff.append((a[i] - b[i], i))\ndiff.sort(reverse=True)\nfor j in range(n):\n    i = diff[j][1]\n    if a[i] > b[i] and x > 0 or y < 0:\n        sum += a[i]\n        x -= 1\n    else:\n        sum += b[i]\n        y -= 1\nprint(sum)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = []\nfor i in range(n):\n    diff.append([abs(a[i] - b[i]), i])\ndiff.sort(reverse=True)\nsum = 0\nfor j in range(n):\n    i = diff[j][1]\n    if a[i] > b[i] and x > 0 or y < 0:\n        sum += a[i]\n        x -= 1\n    else:\n        sum += b[i]\n        y -= 1\nprint(sum)", "(N, x, y) = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nabs_val = [[i, abs(a[i] - b[i])] for i in range(N)]\nabs_val.sort(key=lambda x: x[1], reverse=True)\ntot_tip = 0\nfor item in abs_val:\n    atip = a[item[0]]\n    btip = b[item[0]]\n    if atip > btip:\n        if x != 0:\n            x -= 1\n            tot_tip += atip\n        else:\n            y -= 1\n            tot_tip += btip\n    elif y != 0:\n        y -= 1\n        tot_tip += btip\n    else:\n        tot_tip += atip\n        x -= 1\nprint(tot_tip)", "(n, x, y) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndiff = []\nsum = 0\nfor i in range(n):\n    diff.append((abs(a[i] - b[i]), i))\ndiff.sort(reverse=True)\nfor j in range(n):\n    i = diff[j][1]\n    if a[i] > b[i] and x > 0 or y < 0:\n        sum += a[i]\n        x -= 1\n    else:\n        sum += b[i]\n        y -= 1\nprint(sum)", "(n, x, y) = map(int, input().split())\na = [int(x) for x in input().split()[:n]]\nb = [int(x) for x in input().split()[:n]]\nab = []\nfor i in range(n):\n    ab.append((a[i], b[i]))\nab.sort(key=lambda x: -abs(x[0] - x[1]))\ns = 0\nfor (i, j) in ab:\n    if y == 0 or (x != 0 and i >= j):\n        s += i\n        x -= 1\n    else:\n        s += j\n        y -= 1\nprint(s)", "try:\n    (n, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    jj = 0\n    k = 0\n    c = 0\n    z = []\n    for i in range(0, n):\n        z.append((abs(a[i] - b[i]), i))\n    z.sort(reverse=True)\n    for j in range(0, n):\n        i = z[j][1]\n        if a[i] > b[i] and jj < x:\n            c += a[i]\n            jj += 1\n        elif a[i] < b[i] and k < y or jj >= x:\n            c += b[i]\n            k += 1\n        else:\n            c += a[i]\n            jj += 1\n    print(c)\nexcept:\n    pass", "(n, x, y) = map(int, input().split())\na = [int(x) for x in input().split()[:n]]\nb = [int(x) for x in input().split()[:n]]\nab = []\nfor i in range(n):\n    ab.append((a[i], b[i]))\nab.sort(key=lambda x: -abs(x[0] - x[1]))\ns = 0\nfor (i, j) in ab:\n    if y == 0 or (x != 0 and i >= j):\n        s += i\n        x -= 1\n    else:\n        s += j\n        y -= 1\nprint(s)", "(n, x, y) = [int(s) for s in input().split()]\na = [int(s) for s in input().split()]\nb = [int(s) for s in input().split()]\nab = []\nfor i in range(n):\n    ab.append((a[i], b[i]))\nab.sort(key=lambda v: -abs(v[0] - v[1]))\ntotal = 0\nfor (a, b) in ab:\n    if y == 0 or (x != 0 and a >= b):\n        total += a\n        x -= 1\n    else:\n        total += b\n        y -= 1\nprint(total)", "(n, x, y) = [int(s) for s in input().split()]\na = [int(s) for s in input().split()]\nb = [int(s) for s in input().split()]\nab = []\nfor i in range(n):\n    ab.append((a[i], b[i]))\nab.sort(key=lambda v: -abs(v[0] - v[1]))\ntotal = 0\nfor (a, b) in ab:\n    if y == 0 or (x != 0 and a >= b):\n        total += a\n        x -= 1\n    else:\n        total += b\n        y -= 1\nprint(total)"]