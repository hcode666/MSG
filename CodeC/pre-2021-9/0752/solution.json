["import sys\n\ndef solve(x, y):\n    if primes[x] > y:\n        return 'Divyam'\n    return 'Chef'\n\ndef prime(n):\n    primes = ['a' for i in range(n + 1)]\n    primes[0] = 0\n    primes[1] = 0\n    for i in range(2, n + 1):\n        if primes[i] == 'a':\n            primes[i] = 1 + primes[i - 1]\n            j = 2\n            while j * i < n:\n                primes[j * i] = 0\n                j += 1\n        elif primes[i] < primes[i - 1]:\n            primes[i] = primes[i - 1]\n    return primes\nprimes = prime(1000001)\nfor _ in range(int(sys.stdin.readline())):\n    print(solve(*map(int, sys.stdin.readline().split())))", "import sys\n\ndef solve(x, y):\n    if primes[x] > y:\n        return 'Divyam'\n    return 'Chef'\n\ndef prime(n):\n    primes = {}\n    for k in range(n + 1):\n        primes[k] = 'a'\n    primes[0] = 0\n    primes[1] = 0\n    for i in range(2, n + 1):\n        if primes[i] == 'a':\n            primes[i] = 1 + primes[i - 1]\n            j = 2\n            while j * i < n:\n                primes[j * i] = 0\n                j += 1\n        elif primes[i] < primes[i - 1]:\n            primes[i] = primes[i - 1]\n    return primes\nprimes = prime(1000001)\nfor _ in range(int(sys.stdin.readline())):\n    print(solve(*map(int, sys.stdin.readline().split())))", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import math\nfrom sys import stdin\ninput = stdin.readline\nprimes = []\n\ndef Sieve(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    for p in range(2, n + 1):\n        if prime[p]:\n            primes.append(p)\nSieve(1100000)\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    if y > 79000:\n        print('Divyam')\n        continue\n    if x < primes[y]:\n        print('Chef')\n    else:\n        print('Divyam')", "import math as m\n\ndef findPrimes(n):\n    prime = [1] * (n + 1)\n    for i in range(2, int(m.sqrt(n)) + 1):\n        if prime[i] == 1:\n            for j in range(2 * i, n + 1, i):\n                prime[j] = 0\n    prime[0] = prime[1] = 0\n    return prime\n\ndef getPrefixSum(n):\n    prime = findPrimes(n)\n    count = 0\n    prefix = list()\n    for status in prime:\n        if status == 1:\n            count += 1\n        prefix.append(count)\n    return prefix\nfrom sys import stdin, stdout\ninput = stdin.readline\nt = int(input().strip())\nprefix = getPrefixSum(1000001)\nfor _ in range(t):\n    (x, y) = list(map(int, input().strip().split()))\n    if prefix[x] < y + 1:\n        stdout.write('Chef\\n')\n    else:\n        stdout.write('Divyam\\n')", "import math\nfrom sys import stdin, stdout\ninput = stdin.readline\nprimes = []\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    for p in range(2, n + 1):\n        if prime[p]:\n            primes.append(p)\nSieveOfEratosthenes(1100000)\ntry:\n    t = int(input())\n    for _ in range(t):\n        (x, y) = map(int, input().split())\n        if y > 79000:\n            print('Divyam')\n            continue\n        if x < primes[y]:\n            print('Chef')\n        else:\n            print('Divyam')\nexcept:\n    pass", "import math\nfrom sys import stdin, stdout\ninput = stdin.readline\nprimes = []\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    for p in range(2, n + 1):\n        if prime[p]:\n            primes.append(p)\nSieveOfEratosthenes(1100000)\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    if y > 79000:\n        print('Divyam')\n        continue\n    if x < primes[y]:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\na = 2\narr = [0 for k in range(1000002)]\narr2 = [0 for k in range(1000001)]\nwhile a * a <= 1000001:\n    if arr[a] == 0:\n        for j in range(a * 2, 1000002, a):\n            arr[j] = 1\n    a += 1\narr[0] = 1\narr[1] = 1\nfor k in range(1, 1000001):\n    if arr[k]:\n        arr2[k] = arr2[k - 1]\n    else:\n        arr2[k] = arr2[k - 1] + 1\nfor _ in range(int(sys.stdin.readline())):\n    (X, Y) = map(int, sys.stdin.readline().split())\n    if arr2[X] <= Y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import math\nimport sys\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    max_div = int(math.sqrt(n))\n    for i in range(2, 1 + max_div):\n        if n % i == 0:\n            return False\n    return True\na = []\na.append(0)\na.append(0)\nc = 0\nfor i in range(2, 1000001):\n    if is_prime(i):\n        c = c + 1\n    a.append(c)\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if a[x] > y:\n        print('Divyam')\n    else:\n        print('Chef')", "import sys\ninput = sys.stdin.readline\nprime = [1] * 1000001\npre = [0] * 1000001\ni = 2\nwhile i * i < 1000001:\n    if prime[i] == 1:\n        for j in range(2 * i, 1000001, i):\n            prime[j] = 0\n    i += 1\npre[0] = 0\npre[1] = 0\nfor i in range(2, 1000001):\n    pre[i] = pre[i - 1] + prime[i]\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    if pre[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import math\nimport sys\nx = 1000000\narr = [k for k in range(x + 1)]\nprime = [0 for k in range(x + 1)]\nprime_count = 0\nfor i in range(2, int(math.sqrt(x)) + 1):\n    if arr[i] == i:\n        for j in range(2 * i, x + 1, i):\n            arr[j] = i\nfor i in range(2, x + 1):\n    if arr[i] == i:\n        prime_count += 1\n    prime[i] = prime_count\nfor _ in range(int(input())):\n    (x, y) = tuple(map(int, sys.stdin.readline().split()))\n    if prime[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "p = [1 for i in range(int(1000001))]\np[0] = 0\np[1] = 0\ni = 2\nwhile i * i < len(p):\n    if p[i] == 1:\n        j = 2\n        while i * j < len(p):\n            p[i * j] = 0\n            j += 1\n    i += 1\np_cum = [0 for i in range(int(1000001))]\nfor i in range(1, len(p)):\n    p_cum[i] = p_cum[i - 1] + p[i]\nfrom sys import stdin, stdout\nfor _ in range(int(input())):\n    (x, y) = map(int, stdin.readline().strip().split())\n    if p_cum[x] < y + 1:\n        print('Chef')\n    else:\n        print('Divyam')", "p = [1 for i in range(int(1000001))]\np[0] = 0\np[1] = 0\ni = 2\nwhile i * i < len(p):\n    if p[i] == 1:\n        j = 2\n        while i * j < len(p):\n            p[i * j] = 0\n            j += 1\n    i += 1\np_cum = [0 for i in range(int(1000001))]\nfor i in range(1, len(p)):\n    p_cum[i] = p_cum[i - 1] + p[i]\nfrom sys import stdin, stdout\nfor _ in range(int(input())):\n    (x, y) = map(int, stdin.readline().strip().split())\n    stdout.write('Chef\\n' if p_cum[x] <= y else 'Divyam\\n')", "p = [1 for i in range(int(1000001))]\np[0] = 0\np[1] = 0\ni = 2\nwhile i * i < len(p):\n    if p[i] == 1:\n        j = 2\n        while i * j < len(p):\n            p[i * j] = 0\n            j += 1\n    i += 1\np_cum = [0 for i in range(int(1000001))]\nfor i in range(1, len(p)):\n    p_cum[i] = p_cum[i - 1] + p[i]\nfrom sys import stdin, stdout\nfor i in range(int(input())):\n    (x, y) = map(int, stdin.readline().strip().split())\n    stdout.write('Chef\\n' if p_cum[x] <= y else 'Divyam\\n')", "import sys\ninput_ = lambda : sys.stdin.readline().strip('\\r\\n')\niip = lambda : int(input_())\nilp = lambda : list(map(int, input_().split()))\npri = lambda x: print(x)\nl = [1] * (10 ** 6 + 5)\n\ndef prime():\n    n = 10 ** 6\n    (l[0], l[1]) = (0, 0)\n    for j in range(4, n, 2):\n        l[j] = 0\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if l[i] == 1:\n            for j in range(i * i, n + 1, i):\n                l[j] = 0\n    for i in range(1, len(l)):\n        l[i] += l[i - 1]\nprime()\nfor _ in range(iip()):\n    (x, y) = ilp()\n    if y == 1:\n        if x < 3:\n            print('Chef')\n        else:\n            print('Divyam')\n    elif l[x] > y:\n        print('Divyam')\n    else:\n        print('Chef')", "import sys\nfrom collections import deque\ninput_ = lambda : sys.stdin.readline().strip('\\r\\n')\nii = lambda : int(input_())\nil = lambda : map(int, input_().split())\nilf = lambda : list(map(float, input_().split()))\nip = lambda : input_()\nfi = lambda : float(input_())\nli = lambda : list(input_())\npr = lambda x: print(x)\nprime = [1] * (10 ** 6 + 5)\n\ndef generate():\n    i = 2\n    while i <= 10 ** 3:\n        if prime[i] == 1:\n            for j in range(i * i, 10 ** 6 + 1, i):\n                prime[j] = 0\n        i += 1\n    for i in range(1, 10 ** 6 + 1):\n        prime[i] += prime[i - 1]\ngenerate()\nfor _ in range(int(input())):\n    (x, y) = il()\n    if y == 1:\n        if x < 3:\n            print('Chef')\n        else:\n            print('Divyam')\n        continue\n    if prime[x] - 2 <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nfrom collections import deque\ninput_ = lambda : sys.stdin.readline().strip('\\r\\n')\nii = lambda : int(input_())\nil = lambda : list(map(int, input_().split()))\nilf = lambda : list(map(float, input_().split()))\nip = lambda : input_()\nfi = lambda : float(input_())\nli = lambda : list(input_())\npr = lambda x: print(x)\nprime = [1] * (10 ** 6 + 5)\n\ndef generate():\n    i = 2\n    while i <= 10 ** 3:\n        if prime[i] == 1:\n            for j in range(i * i, 10 ** 6 + 1, i):\n                prime[j] = 0\n        i += 1\n    for i in range(1, 10 ** 6 + 1):\n        prime[i] += prime[i - 1]\ngenerate()\nfor _ in range(int(input())):\n    (x, y) = il()\n    if y == 1:\n        if x < 3:\n            print('Chef')\n        else:\n            print('Divyam')\n        continue\n    if prime[x] - 2 <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\n\ndef checkPrime():\n    primes = [1] * 1000001\n    for j in range(2, 1000001):\n        for i in range(2 * j, 1000001, j):\n            primes[i] = 0\n    prime_num = [0] * 1000001\n    for j in range(2, 1000001):\n        prime_num[j] = prime_num[j - 1] + primes[j]\n    return prime_num\nprime_nu = checkPrime()\nfor t in range(int(input())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if y >= prime_nu[x]:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "lst = [0, 0]\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    count = 0\n    for p in range(2, n + 1):\n        if prime[p]:\n            count += 1\n            lst.append(count)\n        else:\n            lst.append(count)\nSieveOfEratosthenes(1000001)\nt = int(input())\nfrom sys import stdin, stdout\nfor _ in range(t):\n    (x, y) = map(int, stdin.readline().split())\n    if lst[x] > y:\n        stdout.write('Divyam\\n')\n    else:\n        stdout.write('Chef\\n')", "def generatePrimes(mx):\n    mark = [True] * (mx + 1)\n    for i in range(4, mx + 1, 2):\n        mark[i] = False\n    p = 3\n    while p * p <= mx:\n        if mark[p]:\n            for i in range(p * p, mx + 1, p):\n                mark[i] = False\n        p += 2\n    (mark[0], mark[1]) = (False, False)\n    return mark\n\ndef countPrimes(mx):\n    primes = generatePrimes(mx)\n    prime_count = [0] * (mx + 1)\n    c = 0\n    for i in range(mx + 1):\n        if primes[i]:\n            c += 1\n        prime_count[i] = c\n    return prime_count\nmx = 1000000\nprime_count = countPrimes(mx)\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if prime_count[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nn = 10 ** 6\nl = [1 for i in range(n + 2)]\nl2 = [0 for i in range(n + 1)]\nt = 2\nwhile t * t <= n + 1:\n    if l[t] == 1:\n        for i in range(t * 2, n + 2, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, n + 1):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nn = 10 ** 6\nl = [1 for i in range(n + 2)]\nl2 = [0 for i in range(n + 1)]\nt = 2\nwhile t * t <= n + 1:\n    if l[t] == 1:\n        for i in range(t * 2, n + 2, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, n + 1):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "from sys import stdin\n\ndef sieve():\n    n = 1000000\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = False\n    prime[1] = False\n    dp = [None] * (n + 1)\n    dp[0] = dp[1] = 0\n    for i in range(2, n + 1):\n        dp[i] = dp[i - 1] + int(prime[i])\n    return dp\na = sieve()\ninput = stdin.readline\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    if a[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import math as mt\nimport sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\n\ndef SieveOfEratosthenes():\n    t = 2\n    while t * t <= 1000001:\n        if l[t] == 1:\n            for i in range(t * 2, 1000002, t):\n                l[i] = 0\n        t += 1\n    l[0] = 0\n    l[1] = 0\n    for i in range(1, 1000001):\n        if l[i]:\n            l2[i] = l2[i - 1] + 1\n        else:\n            l2[i] = l2[i - 1]\n\ndef solve2():\n    (x, y) = map(int, fastRead().split())\n    factors = l2[x]\n    if factors > y:\n        return 'Divyam'\n    return 'Chef'\n\ndef fastRead():\n    return sys.stdin.readline()\n\ndef fastWrite(op):\n    op = str(op) + '\\n'\n    sys.stdout.write(op)\n\ndef main():\n    t = int(input())\n    SieveOfEratosthenes()\n    for _ in range(t):\n        fastWrite(solve2())\nmain()", "import sys\nn = 1000000\nanswer = [0] * (n + 1)\n\ndef primefactors(n):\n    answer[1] = 0\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    for p in range(2, n + 1):\n        if prime[p]:\n            answer[p] = answer[p - 1] + 1\n        else:\n            answer[p] = answer[p - 1]\nprimefactors(n)\nt = int(sys.stdin.readline())\nfor k in range(t):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if y == 1:\n        if x < 3:\n            print('Chef')\n        else:\n            print('Divyam')\n    elif answer[x] > y:\n        print('Divyam')\n    else:\n        print('Chef')", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "def primes():\n    n = 1000000 + 1\n    s = [True for i in range(n + 1)]\n    v = [0] * n\n    for i in range(2, int(n ** 0.5) + 1):\n        if s[i]:\n            j = 2\n            while i * j <= n:\n                s[i * j] = False\n                j = j + 1\n    v[2] = 1\n    for i in range(3, n):\n        if s[i]:\n            v[i] = v[i - 1] + 1\n        else:\n            v[i] = v[i - 1]\n    return v\nv = primes()\nt = int(input())\na = []\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    if y == 1:\n        if x > 2:\n            a.append('Divyam')\n        else:\n            a.append('Chef')\n    elif x == 1 or x == 2:\n        a.append('Chef')\n    elif x == 3 and y < 2 or (x == 4 and y < 2) or (x == 5 and y < 3) or (x == 6 and y < 3):\n        a.append('Divyam')\n    elif v[x] > y:\n        a.append('Divyam')\n    else:\n        a.append('Chef')\nprint(*a, sep='\\n')", "def primes():\n    n = 1000000 + 1\n    s = [True for i in range(n + 1)]\n    v = [0] * n\n    for i in range(2, int(n ** 0.5) + 1):\n        if s[i]:\n            j = 2\n            while i * j <= n:\n                s[i * j] = False\n                j = j + 1\n    v[2] = 1\n    for i in range(3, n):\n        if s[i]:\n            v[i] = v[i - 1] + 1\n        else:\n            v[i] = v[i - 1]\n    return v\nv = primes()\nt = int(input())\na = []\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    if y == 1:\n        if x > 2:\n            a.append('Divyam')\n        else:\n            a.append('Chef')\n    elif x == 1 or x == 2:\n        a.append('Chef')\n    elif x == 3 and y < 2 or (x == 4 and y < 2) or (x == 5 and y < 3) or (x == 6 and y < 3):\n        a.append('Divyam')\n    elif v[x] > y:\n        a.append('Divyam')\n    else:\n        a.append('Chef')\nprint(*a, sep='\\n')", "def primes():\n    n = 1000000 + 1\n    s = [True for i in range(n + 1)]\n    v = [0] * n\n    for i in range(2, int(n ** 0.5) + 1):\n        if s[i]:\n            j = 2\n            while i * j <= n:\n                s[i * j] = False\n                j = j + 1\n    v[2] = 1\n    for i in range(3, n):\n        if s[i]:\n            v[i] = v[i - 1] + 1\n        else:\n            v[i] = v[i - 1]\n    return v\nv = primes()\nt = int(input())\na = []\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    if y == 1:\n        if x > 2:\n            a.append('Divyam')\n        else:\n            a.append('Chef')\n    elif x == 1 or x == 2:\n        a.append('Chef')\n    elif x == 3 and y < 2 or (x == 4 and y < 2) or (x == 5 and y < 3) or (x == 6 and y < 3):\n        a.append('Divyam')\n    elif v[x] > y:\n        a.append('Divyam')\n    else:\n        a.append('Chef')\nprint(*a, sep='\\n')", "def primes():\n    n = 1000000 + 1\n    l = [True for i in range(n + 1)]\n    b = [0] * n\n    for i in range(2, int(n ** 0.5) + 1):\n        if l[i]:\n            j = 2\n            while i * j <= n:\n                l[i * j] = False\n                j = j + 1\n    a = 1\n    b[2] = 1\n    for i in range(3, n):\n        if l[i]:\n            b[i] = b[i - 1] + 1\n        else:\n            b[i] = b[i - 1]\n    return b\nb = primes()\nt = int(input())\nl = []\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    if y == 1:\n        if x > 2:\n            l.append('Divyam')\n        else:\n            l.append('Chef')\n    elif x == 1 or x == 2:\n        l.append('Chef')\n    elif x == 3 and y < 2 or (x == 4 and y < 2) or (x == 5 and y < 3) or (x == 6 and y < 3):\n        l.append('Divyam')\n    elif b[x] > y:\n        l.append('Divyam')\n    else:\n        l.append('Chef')\nprint(*l, sep='\\n')", "import math, sys\ninput = sys.stdin.readline\nINT_MAX = 10 ** 6\nsieve = [1] * (INT_MAX + 1)\nprimes = [0] * (INT_MAX + 1)\ncnt = 0\ni = 2\nsieve[0] = 0\nsieve[1] = 0\nwhile i * i <= INT_MAX + 1:\n    if sieve[i]:\n        j = i * 2\n        while j <= INT_MAX:\n            sieve[j] = 0\n            j += i\n    i += 1\nfor i in range(1, INT_MAX + 1):\n    primes[i] = primes[i - 1]\n    if sieve[i]:\n        primes[i] += 1\nfor t in range(int(input())):\n    (x, y) = map(int, input().split())\n    if primes[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import math, sys\ninput = sys.stdin.readline\nINT_MAX = 10 ** 6\nsieve = [1] * (INT_MAX + 2)\nprimes = [0] * (INT_MAX + 2)\ncnt = 0\ni = 2\nsieve[0] = 0\nsieve[1] = 0\nwhile i * i <= INT_MAX + 1:\n    if sieve[i]:\n        j = i * 2\n        while j <= INT_MAX:\n            sieve[j] = 0\n            j += i\n    i += 1\nfor i in range(1, INT_MAX + 1):\n    primes[i] = primes[i - 1]\n    if sieve[i]:\n        primes[i] += 1\nfor t in range(int(input())):\n    (x, y) = map(int, input().split())\n    if primes[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "def SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    prime[0] = False\n    prime[1] = False\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    count = 0\n    l = []\n    for p in range(0, n + 1):\n        if prime[p]:\n            count += 1\n            l.append(count)\n        else:\n            l.append(count)\n    return l\nlst = SieveOfEratosthenes(1000001)\nt = int(input())\nfrom sys import stdin, stdout\nfor _ in range(t):\n    (x, y) = map(int, stdin.readline().split())\n    if lst[x] > y:\n        stdout.write('Divyam\\n')\n    else:\n        stdout.write('Chef\\n')", "lst = [0, 0]\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    count = 0\n    for p in range(2, n + 1):\n        if prime[p]:\n            count += 1\n            lst.append(count)\n        else:\n            lst.append(count)\nSieveOfEratosthenes(1000001)\nt = int(input())\nfrom sys import stdin, stdout\nfor _ in range(t):\n    (x, y) = map(int, stdin.readline().split())\n    if lst[x] > y:\n        stdout.write('Divyam\\n')\n    else:\n        stdout.write('Chef\\n')", "import math, sys\ninput = sys.stdin.readline\nINT_MAX = 10 ** 6\nsieve = [1] * (INT_MAX + 2)\nprimes = [0] * (INT_MAX + 2)\ncnt = 0\ni = 2\nsieve[0] = 0\nsieve[1] = 0\nwhile i * i <= INT_MAX + 1:\n    if sieve[i]:\n        j = i * 2\n        while j <= INT_MAX:\n            sieve[j] = 0\n            j += i\n    i += 1\nfor i in range(1, INT_MAX + 1):\n    primes[i] = primes[i - 1]\n    if sieve[i]:\n        primes[i] += 1\nfor t in range(int(input())):\n    (x, y) = map(int, input().split())\n    if primes[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "from sys import stdin, stdout\nn = 1000005\nprime = [1 for i in range(n + 1)]\np = 2\nwhile p * p <= n:\n    if prime[p]:\n        for i in range(p * p, n + 1, p):\n            prime[i] = 0\n    p += 1\nprm = [0, 0]\nfor i in range(2, n):\n    prm.append(prime[i])\nfor i in range(1, n):\n    prm[i] = prm[i] + prm[i - 1]\nt = int(stdin.readline())\nfor T in range(t):\n    (x, y) = [int(x) for x in stdin.readline().split()]\n    if y < prm[x]:\n        print('Divyam')\n    else:\n        print('Chef')", "lst = [0, 0]\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    count = 0\n    for p in range(2, n + 1):\n        if prime[p]:\n            count += 1\n            lst.append(count)\n        else:\n            lst.append(count)\nSieveOfEratosthenes(1000001)\nt = int(input())\nfrom sys import stdin, stdout\nfor _ in range(t):\n    (x, y) = map(int, stdin.readline().split())\n    if lst[x] > y:\n        stdout.write('Divyam\\n')\n    else:\n        stdout.write('Chef\\n')", "import sys\nMAX_SIZE = 1000003\nisprime = [True] * MAX_SIZE\nprime = []\nSPF = [None] * MAX_SIZE\nprime_count = [0] * MAX_SIZE\nN = MAX_SIZE\nisprime[0] = isprime[1] = False\nfor i in range(2, N):\n    if isprime[i] == True:\n        prime_count[i] = prime_count[i - 1] + 1\n        prime.append(i)\n        SPF[i] = i\n    else:\n        prime_count[i] = prime_count[i - 1]\n    j = 0\n    while j < len(prime) and i * prime[j] < N and (prime[j] <= SPF[i]):\n        isprime[i * prime[j]] = False\n        SPF[i * prime[j]] = prime[j]\n        j += 1\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if prime_count[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nimport math\nn = 1000000\nisPrime = [1] * (n + 1)\ni = 2\nwhile i * i <= n:\n    if isPrime[i] == 1:\n        for c in range(i * i, n + 1, i):\n            isPrime[c] = 0\n    i = i + 1\nprimeCount = [0] * (n + 1)\nfor i in range(2, n + 1):\n    primeCount[i] = primeCount[i - 1] + isPrime[i]\nT = int(input())\nfor _ in range(T):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if y == 1:\n        if x < 3:\n            print('Chef')\n        else:\n            print('Divyam')\n    elif primeCount[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nm = 1000000\npr = [True for j in range(1000000 + 1)]\np = 2\nwhile p * p <= m:\n    if pr[p] == True:\n        for j in range(p * 2, m + 1, p):\n            pr[j] = False\n    p = p + 1\npr[0] = False\npr[1] = False\na = [0] * 1000000\nx = 0\nfor i in range(1000000):\n    if pr[i + 1]:\n        x = x + 1\n    a[i] = x\nt = int(sys.stdin.readline())\nfor i in range(t):\n    l = list(map(int, sys.stdin.readline().split()))\n    m = l[0]\n    n = l[1]\n    if a[m - 1] <= n:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nmax = 1000001\nprime = [1] * (max + 1)\nprefix = [0] * max\np = 2\nwhile p * p <= max:\n    if prime[p] == 1:\n        for i in range(2 * p, max + 1, p):\n            prime[i] = 0\n    p += 1\nprime[0] = 0\nprime[1] = 0\nfor i in range(1, max):\n    if prime[i]:\n        prefix[i] = prefix[i - 1] + 1\n    else:\n        prefix[i] = prefix[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if prefix[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import math\nimport sys\n\ndef isPrime(n):\n    r = int(math.sqrt(n))\n    for i in range(2, r + 1):\n        if n % i == 0:\n            return False\n    return True\nd = []\nd.append(0)\nd.append(0)\nc = 0\nfor i in range(2, 1000001):\n    if isPrime(i):\n        c = c + 1\n    d.append(c)\nt = int(sys.stdin.readline())\nfor ts in range(t):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if y >= d[x]:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "import sys\n\ndef SieveOfEratosthenes(n, values={}):\n    prime = [True for k in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    c = 0\n    for p in range(2, n):\n        if prime[p]:\n            c += 1\n        values[p] = c\n    return values\ntry:\n    data = SieveOfEratosthenes(1000005)\n    for _ in range(int(sys.stdin.readline())):\n        (X, Y) = map(int, sys.stdin.readline().split(sep=' '))\n        if X == 1 or X == 0:\n            count = 0\n        else:\n            count = data[X]\n        if Y < count:\n            print('Divyam')\n        else:\n            print('Chef')\nexcept TypeError and EOFError:\n    pass", "import sys\nl = [1 for i in range(1000002)]\nl2 = [0 for i in range(1000001)]\nt = 2\nwhile t * t <= 1000001:\n    if l[t] == 1:\n        for i in range(t * 2, 1000002, t):\n            l[i] = 0\n    t += 1\nl[0] = 0\nl[1] = 0\nfor i in range(1, 1000001):\n    if l[i]:\n        l2[i] = l2[i - 1] + 1\n    else:\n        l2[i] = l2[i - 1]\nfor _ in range(int(sys.stdin.readline())):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if l2[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "from sys import stdin, stdout\ninput = stdin.readline\nfrom collections import Counter\nfrom math import sqrt, ceil\n\ndef ps(n):\n    while n % 2 == 0:\n        return True\n    for ps in range(3, ceil(sqrt(n)) + 1, 2):\n        while n % ps == 0:\n            return True\n    if n != 1:\n        return False\nfrom random import sample\nt = int(input())\nql = 10 ** 6 + 1\narr = [0] * (10 ** 6 + 1)\narr[1] = 0\narr[2] = 1\narr[3] = 2\nfor ipl in range(4, ql):\n    if not ps(ipl):\n        arr[ipl] = arr[ipl - 1] + 1\n    else:\n        arr[ipl] = arr[ipl - 1]\n\ndef find_gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef factorials(n, r):\n    slr = n\n    dpr = r\n    qrr = 1\n    qs = 1\n    mod = 10 ** 9 + 7\n    for ip in range(slr - dpr + 1, slr + 1):\n        qlr = qlr * ip % mod\n    for ij in range(1, dpr + 1):\n        qs = qs * ip % mod\n    ans = qlr * modInverse(qs) % mod\n    return ans\n\ndef modInverse(b):\n    qr = 10 ** 9 + 7\n    return pow(b, qr - 2, qr)\nfor jj in range(t):\n    (x, y) = list(map(int, input().strip().split()))\n    if arr[x] > y:\n        print('Divyam')\n    else:\n        print('Chef')", "def MakePrefix():\n    prime = [1] * (maximum + 1)\n    p = 2\n    while p * p <= maximum:\n        if prime[p] == 1:\n            i = p * 2\n            while i <= maximum:\n                prime[i] = 0\n                i += p\n        p += 1\n    for p in range(2, maximum + 1):\n        prefix[p] = prefix[p - 1]\n        if prime[p] == 1:\n            prefix[p] += 1\n\ndef PrimeCheck(n):\n    if n <= 1:\n        return False\n    if n == 2:\n        return True\n    if n > 2 and n % 2 == 0:\n        return False\n    for i in range(3, int(pow(n, 0.5)) + 1, 2):\n        if n % i == 0:\n            return False\n    return True\ntest = int(input())\nx = []\ny = []\nfor i in range(test):\n    (a, b) = map(int, input().split())\n    x.append(a)\n    y.append(b)\nmaximum = max(x)\nprefix = [0] * (maximum + 1)\nMakePrefix()\nfor i in range(test):\n    if x[i] == 1:\n        print('Chef')\n    else:\n        count = prefix[x[i]] - prefix[0]\n        if count > y[i]:\n            print('Divyam')\n        else:\n            print('Chef')", "lst = [0, 0]\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    count = 0\n    for p in range(2, n + 1):\n        if prime[p]:\n            count += 1\n            lst.append(count)\n        else:\n            lst.append(count)\nSieveOfEratosthenes(1000001)\nt = int(input())\nfrom sys import stdin, stdout\nfor _ in range(t):\n    (x, y) = map(int, stdin.readline().split())\n    if lst[x] > y:\n        stdout.write('Divyam\\n')\n    else:\n        stdout.write('Chef\\n')", "import sys\nt = sys.stdin.readline()\nt = int(t)\nd = {}\nd[0] = 0\nd[1] = 0\nd[2] = 1\nd[3] = 2\nd[4] = 2\nd[5] = 3\nfor i in range(6, 10 ** 6 + 1):\n    flag = 0\n    if i % 2 == 0 or i % 3 == 0:\n        d[i] = d[i - 1]\n        continue\n    for j in range(5, int(i ** 0.5) + 1, 2):\n        if i % j == 0:\n            flag = 1\n            break\n    if flag == 0:\n        d[i] = d[i - 1] + 1\n    else:\n        d[i] = d[i - 1]\nfor e in range(t):\n    l = sys.stdin.readline().split()\n    x = int(l[0])\n    y = int(l[1])\n    if x == 1:\n        print('Chef')\n    elif d[x] <= y:\n        print('Chef')\n    else:\n        print('Divyam')", "def prime_values(n, pri):\n    prime = [True for i in range(n + 1)]\n    pi = 2\n    while pi * pi <= n:\n        if prime[pi]:\n            for i in range(pi * pi, n + 1, pi):\n                prime[i] = False\n        pi += 1\n    for i in range(2, n + 1):\n        if prime[i]:\n            pri[i] = pri[i - 1] + 1\n        else:\n            pri[i] = pri[i - 1]\n(ar1, ar2) = ([], [])\nh = -99999\ntest = int(input())\nfor i in range(test):\n    (x, y) = map(int, input().split())\n    ar1.append(x)\n    ar2.append(y)\n    h = max(h, x)\np = [0] * (h + 4)\nprime_values(h + 1, p)\nfor i in range(test):\n    if p[ar1[i]] > ar2[i]:\n        print('Divyam')\n    else:\n        print('Chef')", "import math\nimport sys\n\ndef isPrime(n):\n    r = int(math.sqrt(n))\n    for i in range(2, r + 1):\n        if n % i == 0:\n            return False\n    return True\nd = []\nd.append(0)\nd.append(0)\nc = 0\nfor i in range(2, 1000001):\n    if isPrime(i):\n        c = c + 1\n    d.append(c)\nt = int(sys.stdin.readline())\nfor ts in range(t):\n    (x, y) = map(int, sys.stdin.readline().split())\n    if y >= d[x]:\n        print('Chef')\n    else:\n        print('Divyam')", "import numpy\nimport sys\ninput = sys.stdin.readline\npr = []\nd = [0 for _ in range(1000005)]\n\ndef SieveOfEratosthenes():\n    n = 1000005\n    pr = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if pr[p] == True:\n            for i in range(p * 2, n + 1, p):\n                pr[i] = False\n        p += 1\n    pr[0] = False\n    pr[1] = False\n    d[0] = 0\n    d[1] = 0\n    for p in range(n):\n        if pr[p]:\n            d[p] = d[p - 1] + 1\n        else:\n            d[p] = d[p - 1]\nl = []\nSieveOfEratosthenes()\na = int(input())\nwhile a > 0:\n    l = [int(l) for l in input().split()]\n    if d[int(l[0])] > int(l[1]):\n        print('Divyam')\n    else:\n        print('Chef')\n    a = a - 1", "import sys\ntry:\n\n    def Pr(n):\n        if n <= 1:\n            return False\n        if n <= 3:\n            return True\n        if n % 2 == 0 or n % 3 == 0:\n            return False\n        i = 5\n        while i * i <= n:\n            if n % i == 0 or n % (i + 2) == 0:\n                return False\n            i = i + 6\n        return True\n    prc = []\n    for j in range(0, 1000001):\n        if Pr(j):\n            prc.append(1)\n        else:\n            prc.append(0)\n    for j in range(3, 1000001):\n        prc[j] = prc[j - 1] + prc[j]\n    for t in range(int(input())):\n        (x, u) = map(int, sys.stdin.readline().strip().split())\n        if x == 2 and u == 1:\n            sys.stdout.write(str('Chef') + '\\n')\n        elif prc[x] > u:\n            sys.stdout.write(str('Divyam') + '\\n')\n            continue\n        else:\n            sys.stdout.write(str('Chef') + '\\n')\nexcept EOFError as e:\n    pass", "import sys\nn = 1000001\nc = 0\nif n >= 2:\n    c += 1\nl = [1 for i in range(n + 1)]\nfor i in range(0, n + 1, 2):\n    l[i] = 0\nl[2] = 1\nl[1] = 0\nfor i in range(3, n + 1, 1):\n    if l[i] == 1:\n        c += 1\n        l[i] = c\n        for i in range(i * i, n + 1, i * 2):\n            l[i] = 0\n    else:\n        l[i] = c\nt = int(input())\nfor i in range(t):\n    (x, y) = list(map(int, sys.stdin.readline().strip().split()))\n    if l[x] > y:\n        print('Divyam')\n    else:\n        print('Chef')", "import sys\nn = 1000001\nc = 0\nif n >= 2:\n    c += 1\nl = [1 for i in range(n + 1)]\nfor i in range(0, n + 1, 2):\n    l[i] = 0\nl[2] = 1\nl[1] = 0\nfor i in range(3, n + 1, 1):\n    if l[i] == 1:\n        c += 1\n        l[i] = c\n        for i in range(i * i, n + 1, i * 2):\n            l[i] = 0\n    else:\n        l[i] = c\nt = int(input())\nfor i in range(t):\n    (x, y) = list(map(int, sys.stdin.readline().strip().split()))\n    if l[x] > y:\n        print('Divyam')\n    else:\n        print('Chef')", "import sys\nn = 1000001\nc = 0\nif n >= 2:\n    c += 1\nl = [1 for i in range(n + 1)]\nfor i in range(0, n + 1, 2):\n    l[i] = 0\nl[2] = 1\nl[1] = 0\nfor i in range(3, n + 1, 1):\n    if l[i] == 1:\n        c += 1\n        l[i] = c\n        for i in range(i * i, n + 1, i * 2):\n            l[i] = 0\n    else:\n        l[i] = c\nt = int(input())\nfor i in range(t):\n    (x, y) = list(map(int, sys.stdin.readline().strip().split()))\n    if l[x] > y:\n        print('Divyam')\n    else:\n        print('Chef')", "def SieveOfEratosthenes(n):\n    prime = [True] * (n + 1)\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    return prime\nt = int(input())\ncases = []\nn = 0\nfor i in range(t):\n    l = list(map(int, input().split()))\n    if n < l[0]:\n        n = l[0]\n    cases.append(l)\nprime = SieveOfEratosthenes(n)\nval = [0] * (n + 1)\nk = 0\nfor i in range(2, n + 1):\n    if prime[i]:\n        k += 1\n    val[i] = k\nfor i in range(t):\n    if val[cases[i][0]] <= cases[i][1]:\n        print('Chef')\n    else:\n        print('Divyam')", "from math import sqrt as s\nfrom numpy import cumsum as cs\nimport sys\nn = 1000001\nc = 0\nif n >= 2:\n    c += 1\nl = [1] * (n + 1)\nfor i in range(0, n + 1, 2):\n    l[i] = 0\nl[2] = 1\nl[1] = 0\nfor i in range(3, 1001, 2):\n    if l[i] == 1:\n        for i in range(i * i, n + 1, i * 2):\n            l[i] = 0\nans = cs(l)\nt = int(input())\nfor i in range(t):\n    (x, y) = list(map(int, sys.stdin.readline().strip().split()))\n    if ans[x] > y:\n        print('Divyam')\n    else:\n        print('Chef')", "import sys\ninput = sys.stdin.readline\nMAX = 1000010\nt = int(input())\npri = [1 for i in range(MAX)]\ni = 2\nwhile i * i <= MAX:\n    if pri[i] == 1:\n        for j in range(2 * i, MAX, i):\n            pri[j] = 0\n    i += 1\nans = [0, 0]\nfor i in range(2, MAX):\n    if pri[i]:\n        ans.append(ans[i - 1] + 1)\n    else:\n        ans.append(ans[i - 1])\nfor _ in range(t):\n    a = [int(x) for x in input().split()]\n    x = a[0]\n    y = a[1]\n    if ans[x] > y:\n        sys.stdout.write('Divyam\\n')\n    else:\n        sys.stdout.write('Chef\\n')"]