["def solution(chefsdiv, kidsdiv):\n    if len(kidsdiv) > len(chefsdiv):\n        return False\n    chefsdiv.sort()\n    kidsdiv.sort()\n    (i, j) = (0, 0)\n    while i < len(chefsdiv) and j < len(kidsdiv):\n        if chefsdiv[i][0] == kidsdiv[j][0]:\n            i += 1\n            j += 1\n        elif chefsdiv[i][0] < kidsdiv[j][0]:\n            i += 1\n        else:\n            return False\n    return j == len(kidsdiv)\nt = int(input())\nwhile t:\n    (n, k, p) = map(int, input().split())\n    chefsdiv = []\n    kidsdiv = []\n    for _ in range(k):\n        chefsdiv.append(list(map(int, input().split())))\n    for _ in range(p):\n        kidsdiv.append(list(map(int, input().split())))\n    res = 'Yes' if solution(chefsdiv, kidsdiv) else 'No'\n    print(res)\n    t -= 1", "def solution(chefsdiv, kidsdiv):\n    if len(kidsdiv) > len(chefsdiv):\n        return False\n    chefsdiv.sort()\n    kidsdiv.sort()\n    (i, j) = (0, 0)\n    while i < len(chefsdiv) and j < len(kidsdiv):\n        if chefsdiv[i][0] == kidsdiv[j][0]:\n            i += 1\n            j += 1\n        elif chefsdiv[i][0] < kidsdiv[j][0]:\n            i += 1\n        else:\n            return False\n    return j == len(kidsdiv)\nt = int(input())\nwhile t:\n    (n, k, p) = map(int, input().split())\n    chefsdiv = []\n    kidsdiv = []\n    for _ in range(k):\n        chefsdiv.append(list(map(int, input().split())))\n    for _ in range(p):\n        kidsdiv.append(list(map(int, input().split())))\n    res = 'Yes' if solution(chefsdiv, kidsdiv) else 'No'\n    print(res)\n    t -= 1", "def solution(chefsdiv, kidsdiv):\n    if len(kidsdiv) > len(chefsdiv):\n        return False\n    chefsdiv.sort()\n    kidsdiv.sort()\n    (i, j) = (0, 0)\n    while i < len(chefsdiv) and j < len(kidsdiv):\n        if chefsdiv[i][0] == kidsdiv[j][0]:\n            i += 1\n            j += 1\n        elif chefsdiv[i][0] < kidsdiv[j][0]:\n            i += 1\n        else:\n            return False\n    return j == len(kidsdiv)\nt = int(input())\nwhile t:\n    (n, k, p) = map(int, input().split())\n    chefsdiv = []\n    kidsdiv = []\n    for _ in range(k):\n        chefsdiv.append(list(map(int, input().split())))\n    for _ in range(p):\n        kidsdiv.append(list(map(int, input().split())))\n    res = 'Yes' if solution(chefsdiv, kidsdiv) else 'No'\n    print(res)\n    t -= 1", "def solution(chefsdiv, kidsdiv):\n    if len(kidsdiv) > len(chefsdiv):\n        return False\n    chefsdiv.sort()\n    kidsdiv.sort()\n    (i, j) = (0, 0)\n    while i < len(chefsdiv) and j < len(kidsdiv):\n        if chefsdiv[i][0] == kidsdiv[j][0]:\n            i += 1\n            j += 1\n        elif chefsdiv[i][0] < kidsdiv[j][0]:\n            i += 1\n        else:\n            return False\n    return j == len(kidsdiv)\nt = int(input())\nwhile t:\n    (n, k, p) = map(int, input().split())\n    chefsdiv = []\n    kidsdiv = []\n    for _ in range(k):\n        chefsdiv.append(list(map(int, input().split())))\n    for _ in range(p):\n        kidsdiv.append(list(map(int, input().split())))\n    res = 'Yes' if solution(chefsdiv, kidsdiv) else 'No'\n    print(res)\n    t -= 1", "def snek(c, k):\n    if len(u) > len(c):\n        return False\n    c.sort()\n    u.sort()\n    (x, y) = (0, 0)\n    while x < len(c) and y < len(u):\n        if c[x][0] == k[y][0]:\n            x += 1\n            y += 1\n        elif c[x][0] < k[y][0]:\n            x += 1\n        else:\n            return False\n    return y == len(u)\nt = int(input())\nfor i in range(t):\n    (n, k, p) = map(int, input().split())\n    c = []\n    u = []\n    for j in range(k):\n        c.append(list(map(int, input().split())))\n    for z in range(p):\n        u.append(list(map(int, input().split())))\n    if snek(c, u):\n        r = 'Yes'\n    else:\n        r = 'No'\n    print(r)", "def snek(c, k):\n    if len(u) > len(c):\n        return False\n    c.sort()\n    u.sort()\n    (x, y) = (0, 0)\n    while x < len(c) and y < len(u):\n        if c[x][0] == k[y][0]:\n            x += 1\n            y += 1\n        elif c[x][0] < k[y][0]:\n            x += 1\n        else:\n            return False\n    return y == len(u)\nt = int(input())\nfor i in range(t):\n    (n, k, p) = map(int, input().split())\n    c = []\n    u = []\n    for j in range(k):\n        c.append(list(map(int, input().split())))\n    for z in range(p):\n        u.append(list(map(int, input().split())))\n    if snek(c, u):\n        r = 'Yes'\n    else:\n        r = 'No'\n    print(r)", "def solution(chefsdiv, kidsdiv):\n    if len(kidsdiv) > len(chefsdiv):\n        return False\n    chefsdiv.sort()\n    kidsdiv.sort()\n    (i, j) = (0, 0)\n    while i < len(chefsdiv) and j < len(kidsdiv):\n        if chefsdiv[i][0] == kidsdiv[j][0]:\n            i += 1\n            j += 1\n        elif chefsdiv[i][0] < kidsdiv[j][0]:\n            i += 1\n        else:\n            return False\n    return j == len(kidsdiv)\nt = int(input())\nwhile t:\n    (n, k, p) = map(int, input().split())\n    chefsdiv = []\n    kidsdiv = []\n    for _ in range(k):\n        chefsdiv.append(list(map(int, input().split())))\n    for _ in range(p):\n        kidsdiv.append(list(map(int, input().split())))\n    res = 'Yes' if solution(chefsdiv, kidsdiv) else 'No'\n    print(res)\n    t -= 1", "for _ in range(int(input())):\n    (n, k, p) = map(int, input().split())\n    s = set()\n    t = set()\n    f = True\n    for i in range(k):\n        (x, y) = map(int, input().split())\n        s.add(x)\n    for i in range(p):\n        (x, y) = map(int, input().split())\n        t.add(x)\n    ans = 'Yes' if len(t - s) == 0 else 'No'\n    print(ans)", "import sys\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    (n, k, p) = list(map(int, sys.stdin.readline().split()))\n    k_cuts = set((int(sys.stdin.readline().split()[0]) for _ in range(k)))\n    p_cuts = set((int(sys.stdin.readline().split()[0]) for _ in range(p)))\n    print('Yes' if len(p_cuts - k_cuts) == 0 else 'No')", "import sys\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    (n, k, p) = list(map(int, sys.stdin.readline().split()))\n    k_cuts = set((int(sys.stdin.readline().split()[0]) for _ in range(k)))\n    p_cuts = set((int(sys.stdin.readline().split()[0]) for _ in range(p)))\n    print('Yes' if len(p_cuts - k_cuts) == 0 else 'No')", "t = int(input())\nfor ii in range(t):\n    d_chef = {}\n    d_boy = {}\n    (n, k, p) = map(int, input().split())\n    d_chef = set({int(input().split()[1]) for j in range(k)})\n    d_boy = set({int(input().split()[1]) for j in range(p)})\n    r = 'Yes'\n    if not d_boy.issubset(d_chef):\n        r = 'No'\n    print(r)"]