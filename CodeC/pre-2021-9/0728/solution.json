["tn = int(input())\nfor _ in range(tn):\n    n = int(input())\n    l = list(map(int, input().split()))\n    lst2 = [None for i in range(n)]\n    for i in range(n):\n        lst = 0\n        if lst2[i] == None:\n            for j in range(i + 1, n):\n                if l[j] > l[i]:\n                    break\n                elif l[i] == l[j]:\n                    lst += 1\n            for k in range(i, j + 1):\n                if l[k] == l[i] and lst2[k] == None:\n                    lst2[k] = lst\n    for i in range(n - 1):\n        if lst2[i] != None:\n            print(lst2[i], end=' ')\n        else:\n            print('0', end=' ')\n    if lst2[n - 1] != None:\n        print(lst2[n - 1])\n    else:\n        print('0')", "tn = int(input())\nfor _ in range(tn):\n    n = int(input())\n    l = list(map(int, input().split()))\n    lst2 = [None for i in range(n)]\n    for i in range(n):\n        lst = 0\n        if lst2[i] == None:\n            for j in range(i + 1, n):\n                if l[j] > l[i]:\n                    break\n                elif l[i] == l[j]:\n                    lst += 1\n            for k in range(i, j + 1):\n                if l[k] == l[i] and lst2[k] == None:\n                    lst2[k] = lst\n    for i in range(n - 1):\n        if lst2[i] != None:\n            print(lst2[i], end=' ')\n        else:\n            print('0', end=' ')\n    if lst2[n - 1] != None:\n        print(lst2[n - 1])\n    else:\n        print('0')", "tn = int(input())\nfor _ in range(tn):\n    n = int(input())\n    l = list(map(int, input().split()))\n    lst2 = [None for i in range(n)]\n    for i in range(n):\n        lst = 0\n        if lst2[i] == None:\n            for j in range(i + 1, n):\n                if l[j] > l[i]:\n                    break\n                elif l[i] == l[j]:\n                    lst += 1\n            for k in range(i, j + 1):\n                if l[k] == l[i] and lst2[k] == None:\n                    lst2[k] = lst\n    for i in range(n - 1):\n        if lst2[i] != None:\n            print(lst2[i], end=' ')\n        else:\n            print('0', end=' ')\n    if lst2[n - 1] != None:\n        print(lst2[n - 1])\n    else:\n        print('0')", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    stk = []\n    d = {}\n    ans = [0] * n\n    stk.append(0)\n    d[l[0]] = 1\n    for i in range(1, n):\n        if len(stk) == 0 or l[i] <= l[stk[-1]]:\n            stk.append(i)\n            d[l[i]] = d.get(l[i], 0) + 1\n        else:\n            f = set()\n            while len(stk) and l[stk[-1]] < l[i]:\n                j = stk.pop()\n                f.add(l[j])\n                ans[j] = d[l[j]] - 1\n            for k in f:\n                d[k] = 0\n            stk.append(i)\n            d[l[i]] = d.get(l[i], 0) + 1\n    while len(stk):\n        j = stk.pop()\n        ans[j] = d[l[j]] - 1\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = [0] * n\n    stack = []\n    d = {}\n    for i in range(n):\n        val = None\n        while len(stack) > 0 and arr[stack[-1]] < arr[i]:\n            ind = stack.pop()\n            if val is None or arr[ind] != val:\n                if val is not None:\n                    d[val] = 0\n                val = arr[ind]\n            ans[ind] = d[arr[ind]] - 1\n        if val is not None:\n            d[val] = 0\n        if d.get(arr[i]) is None:\n            d[arr[i]] = 0\n        d[arr[i]] += 1\n        stack.append(i)\n    while len(stack) > 0:\n        ind = stack.pop()\n        ans[ind] = d[arr[ind]] - 1\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = [0] * n\n    stack = []\n    d = {}\n    for i in range(n):\n        val = None\n        while len(stack) > 0 and arr[stack[-1]] < arr[i]:\n            ind = stack.pop()\n            if val is None or arr[ind] != val:\n                if val is not None:\n                    d[val] = 0\n                val = arr[ind]\n            ans[ind] = d[arr[ind]] - 1\n        if val is not None:\n            d[val] = 0\n        if d.get(arr[i]) is None:\n            d[arr[i]] = 0\n        d[arr[i]] += 1\n        stack.append(i)\n    while len(stack) > 0:\n        ind = stack.pop()\n        ans[ind] = d[arr[ind]] - 1\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = [0] * n\n    stack = []\n    d = {}\n    for i in range(n):\n        val = None\n        while len(stack) > 0 and arr[stack[-1]] < arr[i]:\n            ind = stack.pop()\n            if val is None or arr[ind] != val:\n                if val is not None:\n                    d[val] = 0\n                val = arr[ind]\n            ans[ind] = d[arr[ind]] - 1\n        if val is not None:\n            d[val] = 0\n        if d.get(arr[i]) is None:\n            d[arr[i]] = 0\n        d[arr[i]] += 1\n        stack.append(i)\n    while len(stack) > 0:\n        ind = stack.pop()\n        ans[ind] = d[arr[ind]] - 1\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = [0] * n\n    stack = []\n    d = {}\n    for i in range(n):\n        val = None\n        while len(stack) > 0 and arr[stack[-1]] < arr[i]:\n            ind = stack.pop()\n            if val is None or arr[ind] != val:\n                if val is not None:\n                    d[val] = 0\n                val = arr[ind]\n            ans[ind] = d[arr[ind]] - 1\n        if val is not None:\n            d[val] = 0\n        if d.get(arr[i]) is None:\n            d[arr[i]] = 0\n        d[arr[i]] += 1\n        stack.append(i)\n    while len(stack) > 0:\n        ind = stack.pop()\n        ans[ind] = d[arr[ind]] - 1\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = [0] * n\n    stack = []\n    d = {}\n    for i in range(n):\n        val = None\n        while len(stack) > 0 and arr[stack[-1]] < arr[i]:\n            ind = stack.pop()\n            if val is None or arr[ind] != val:\n                if val is not None:\n                    d[val] = 0\n                val = arr[ind]\n            ans[ind] = d[arr[ind]] - 1\n        if val is not None:\n            d[val] = 0\n        if d.get(arr[i]) is None:\n            d[arr[i]] = 0\n        d[arr[i]] += 1\n        stack.append(i)\n    while len(stack) > 0:\n        ind = stack.pop()\n        ans[ind] = d[arr[ind]] - 1\n    print(*ans)", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef func(arr, n):\n    stack = list()\n    d = dict.fromkeys(arr, 0)\n    cnt = [0 for _ in range(n)]\n    for i in range(n):\n        num = arr[i]\n        while stack and stack[-1] < num:\n            temp = stack.pop()\n            d[temp] = 0\n        if stack and stack[-1] == num:\n            d[num] += 1\n            cnt[i] = d[num]\n        stack.append(num)\n    return cnt\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    arr = list(map(int, input().strip().split()))\n    cnt1 = func(arr, n)\n    cnt2 = func(arr[::-1], n)\n    cnt2 = cnt2[::-1]\n    ans = [cnt1[i] + cnt2[i] for i in range(n)]\n    print(*ans)", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef func(arr, n):\n    stack = list()\n    d = dict.fromkeys(arr, 0)\n    cnt = [0 for _ in range(n)]\n    for i in range(n):\n        num = arr[i]\n        while stack and stack[-1] < num:\n            temp = stack.pop()\n            d[temp] = 0\n        if stack and stack[-1] == num:\n            d[num] += 1\n            cnt[i] = d[num]\n        stack.append(num)\n    return cnt\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    arr = list(map(int, input().strip().split()))\n    cnt1 = func(arr, n)\n    cnt2 = func(arr[::-1], n)\n    cnt2 = cnt2[::-1]\n    ans = [cnt1[i] + cnt2[i] for i in range(n)]\n    print(*ans)", "t = int(input())\nwhile t > 0:\n    a = int(input())\n    arr = [int(i) for i in input().split()]\n    ans = [0] * a\n    for i in range(a - 1):\n        for j in range(i + 1, a):\n            if arr[i] < arr[j]:\n                break\n            if arr[i] == arr[j]:\n                ans[i] += 1\n                ans[j] += 1\n    print(*ans)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    a = int(input())\n    arr = [int(i) for i in input().split()]\n    ans = [0] * a\n    for i in range(a - 1):\n        for j in range(i + 1, a):\n            if arr[i] < arr[j]:\n                break\n            if arr[i] == arr[j]:\n                ans[i] += 1\n                ans[j] += 1\n    print(*ans)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    a = int(input())\n    arr = [int(i) for i in input().split()]\n    ans = [0] * a\n    for i in range(a - 1):\n        for j in range(i + 1, a):\n            if arr[i] < arr[j]:\n                break\n            if arr[i] == arr[j]:\n                ans[i] += 1\n                ans[j] += 1\n    print(*ans)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    a = int(input())\n    arr = [int(i) for i in input().split()]\n    ans = [0] * a\n    for i in range(a - 1):\n        for j in range(i + 1, a):\n            if arr[i] < arr[j]:\n                break\n            if arr[i] == arr[j]:\n                ans[i] += 1\n                ans[j] += 1\n    print(*ans)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0 for _ in range(len(arr))]\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] == arr[j]:\n                ans[i] += 1\n                ans[j] += 1\n            elif arr[j] > arr[i]:\n                break\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0 for _ in range(len(arr))]\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] == arr[j]:\n                ans[i] += 1\n                ans[j] += 1\n            elif arr[j] > arr[i]:\n                break\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    h = [int(x) for x in input().split()]\n    c = [0] * n\n    for j in range(n):\n        for k in range(j + 1, n):\n            if h[k] == h[j]:\n                c[j] += 1\n                c[k] += 1\n            elif h[k] > h[j]:\n                break\n    print(*c)", "for t in range(int(input())):\n    n = int(input())\n    h = [int(x) for x in input().split()]\n    c = [0] * n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if h[j] == h[i]:\n                c[i] += 1\n                c[j] += 1\n            elif h[j] > h[i]:\n                break\n    print(*c)", "try:\n\n    def solve(H, N, i):\n        count = 0\n        X = int(H[i])\n        j = int(i) + 1\n        i -= 1\n        while i >= 0:\n            if H[i] > X:\n                break\n            elif H[i] == X:\n                count += 1\n            i -= 1\n        while j < N:\n            if H[j] > X:\n                break\n            if H[j] == X:\n                count += 1\n            j += 1\n        return count\n    for t in range(int(input())):\n        N = int(input())\n        H = list(map(int, input().split()))\n        C = []\n        for i in range(N):\n            C.append(solve(H, N, i))\n        for element in C:\n            print(element, end=' ')\n        print('')\nexcept:\n    pass", "for t in range(int(input())):\n    n = int(input())\n    h = [int(x) for x in input().split()]\n    c = [0] * n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if h[j] == h[i]:\n                c[i] += 1\n                c[j] += 1\n            elif h[j] > h[i]:\n                break\n    for i in c:\n        print(i, end=' ')", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    stk = []\n    d = {}\n    ans = [0] * n\n    stk.append(0)\n    d[l[0]] = 1\n    for i in range(1, n):\n        if len(stk) == 0 or l[i] <= l[stk[-1]]:\n            stk.append(i)\n            d[l[i]] = d.get(l[i], 0) + 1\n        else:\n            f = set()\n            while len(stk) and l[stk[-1]] < l[i]:\n                j = stk.pop()\n                f.add(l[j])\n                ans[j] = d[l[j]] - 1\n            for k in f:\n                d[k] = 0\n            stk.append(i)\n            d[l[i]] = d.get(l[i], 0) + 1\n    while len(stk):\n        j = stk.pop()\n        ans[j] = d[l[j]] - 1\n    print(*ans)", "case = int(input())\nfor t in range(case):\n    n = int(input())\n    h = [int(y) for y in input().split()]\n    s = [0] * n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if h[i] < h[j]:\n                break\n            if h[i] == h[j]:\n                s[i] += 1\n                s[j] += 1\n    print(*s)", "def height(arr):\n    st = [[float('inf'), 0]]\n    ans = []\n    for i in arr:\n        while st[-1][0] < i:\n            st.pop()\n        if st[-1][0] != i:\n            st.append([i, 0])\n        ans.append(st[-1][1])\n        st[-1][1] += 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()][:n]\n    answ = [0] * n\n    ans1 = height(a)\n    ans2 = height(a[::-1])[::-1]\n    for i in range(n):\n        answ[i] = ans1[i] + ans2[i]\n    print(*answ)", "def height(arr):\n    st = [[float('inf'), 0]]\n    ans = []\n    for i in arr:\n        while st[-1][0] < i:\n            st.pop()\n        if st[-1][0] != i:\n            st.append([i, 0])\n        ans.append(st[-1][1])\n        st[-1][1] += 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()][:n]\n    answ = [0] * n\n    ans1 = height(a)\n    ans2 = height(a[::-1])[::-1]\n    for i in range(n):\n        answ[i] = ans1[i] + ans2[i]\n    print(*answ)", "import sys\n\ndef sorts(val):\n    return val[0]\n\ndef gets():\n    return list(map(int, sys.stdin.readline().strip().split()))\nt = int(input())\nfor j in range(t):\n    a = int(input())\n    b = gets()\n    c = []\n    r = []\n    c.append([0, b[0], [0]])\n    for k in range(1, len(b)):\n        g = 0\n        while len(c) > 0 and b[k] >= c[-1][1]:\n            if b[k] == c[-1][1]:\n                c[-1][2][0] += 1\n                g += 1\n                break\n            else:\n                d = c[-1][1]\n                r.append((c[-1][0], c[-1][2][0]))\n                c.pop()\n        if len(c) > 0 and b[k] == c[-1][1]:\n            c.append([k, b[k], c[-1][2]])\n        else:\n            c.append([k, b[k], [g]])\n    while len(c) > 0:\n        r.append((c[-1][0], c[-1][2][0]))\n        c.pop()\n    r.sort(key=sorts)\n    for l in r:\n        print(l[1], end=' ')", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    lst = list(map(int, input().split()))\n    new = [0] * n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lst[i] == lst[j]:\n                new[i] += 1\n                new[j] += 1\n            elif lst[i] < lst[j]:\n                break\n    print(*new)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    l = [int(y) for y in input().split()]\n    tl = [0] * n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[i] < l[j]:\n                break\n            if l[i] == l[j]:\n                tl[i] += 1\n                tl[j] += 1\n    print(*tl)", "for _ in range(int(input())):\n    x = int(input())\n    l = list(map(int, input().split()))\n    s = [0] * x\n    for i in range(len(l) - 1):\n        for j in range(i + 1, len(l)):\n            if l[i] < l[j]:\n                break\n            elif l[i] == l[j]:\n                s[i] += 1\n                s[j] += 1\n    print(*s)", "num = int(input())\nfor x in range(num):\n    n = int(input())\n    l = [int(y) for y in input().split()]\n    t = [0] * n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[i] < l[j]:\n                break\n            if l[i] == l[j]:\n                t[i] += 1\n                t[j] += 1\n    print(*t)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    l = [int(y) for y in input().split()]\n    t = [0] * n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[i] < l[j]:\n                break\n            if l[i] == l[j]:\n                t[i] += 1\n                t[j] += 1\n    print(*t)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    l = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if l[i] == l[j]:\n                b[i] += 1\n                b[j] += 1\n            elif l[i] < l[j]:\n                break\n    print(*b)", "from sys import stdin\ninput = stdin.readline\n\ndef answer():\n    s = []\n    ni = [-1] * n\n    for i in range(n - 1, -1, -1):\n        while len(s) and a[i] >= a[s[-1]]:\n            ni[s[-1]] = i\n            s.pop()\n        s.append(i)\n    vis = [False] * (n + 1)\n    ans = [0] * n\n    for i in range(n - 1, -1, -1):\n        if vis[i]:\n            continue\n        vis[i] = True\n        ind = ni[i]\n        value = 0\n        while ind != -1 and a[ind] == a[i]:\n            value += 1\n            ind = ni[ind]\n        ind = ni[i]\n        ans[i] = value\n        while ind != -1 and a[ind] == a[i]:\n            ans[ind] = value\n            vis[ind] = True\n            ind = ni[ind]\n    return ans\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*answer())", "num = int(input())\nwhile num > 0:\n    a = int(input())\n    l = [int(x) for x in input().split()]\n    numl = [0] * a\n    for i in range(a - 1):\n        for j in range(i + 1, a):\n            if l[i] < l[j]:\n                break\n            if l[i] == l[j]:\n                numl[i] += 1\n                numl[j] += 1\n    print(*numl)\n    num -= 1", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    l = list(map(int, input().split()))\n    a = [0] * n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if l[i] == l[j]:\n                a[i] += 1\n                a[j] += 1\n            elif l[i] < l[j]:\n                break\n    print(*a)", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    L = list(map(int, input().split()))\n    ans = [0] * N\n    for i in range(N - 1):\n        a = L[i]\n        for j in range(i + 1, N):\n            if a < L[j]:\n                break\n            elif a == L[j]:\n                ans[i] += 1\n                ans[j] += 1\n    print(*ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(y) for y in input().split()]\n    tl = [0] * n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[i] < l[j]:\n                break\n            if l[i] == l[j]:\n                tl[i] += 1\n                tl[j] += 1\n    print(*tl)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(y) for y in input().split()]\n    tl = [0] * n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[i] < l[j]:\n                break\n            if l[i] == l[j]:\n                tl[i] += 1\n                tl[j] += 1\n    print(*tl)\n    t -= 1", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    l = [int(y) for y in input().split()]\n    t = [0] * n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[i] < l[j]:\n                break\n            if l[i] == l[j]:\n                t[i] += 1\n                t[j] += 1\n    print(*t)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    l = list(map(int, input().split()))\n    r = [0] * n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if l[i] == l[j]:\n                r[i] += 1\n                r[j] += 1\n            elif l[i] < l[j]:\n                break\n    print(*r)", "for tc in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    op = [0] * len(ls)\n    res = [0] * len(ls)\n    for x in range(len(ls)):\n        if op[x] == 0:\n            mx = ls[x]\n            se = set()\n            cnt = 0\n            for y in range(x + 1, len(ls)):\n                if ls[y] <= mx:\n                    if ls[y] == mx:\n                        cnt += 1\n                        se.add(y)\n                        se.add(x)\n                    else:\n                        pass\n                else:\n                    break\n            if len(se) > 0:\n                for dum in se:\n                    op[dum] = -1\n                    res[dum] = cnt\n    for x in res:\n        print(x, end=' ')\n    print()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    temp = [0] * n\n    for i in range(len(arr) - 1):\n        for j in range(i + 1, len(arr)):\n            if arr[i] < arr[j]:\n                break\n            if arr[i] == arr[j]:\n                temp[i] += 1\n                temp[j] += 1\n    print(*temp)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    temp = [0] * n\n    for i in range(len(arr) - 1):\n        for j in range(i + 1, len(arr)):\n            if arr[i] < arr[j]:\n                break\n            if arr[i] == arr[j]:\n                temp[i] += 1\n                temp[j] += 1\n    print(*temp)\n    t -= 1", "T = int(input())\nwhile T > 0:\n    T -= 1\n    N = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    arr1 = [0] * N\n    stack = [0]\n    aux = []\n    for i in range(1, N):\n        while len(stack) > 0 and arr[i] > arr[stack[-1]]:\n            stack.pop()\n        while len(stack) > 0 and arr[i] == arr[stack[-1]]:\n            elem = stack.pop()\n            aux.append(elem)\n            arr1[elem] += 1\n            arr1[i] += 1\n        while len(aux) > 0:\n            stack.append(aux.pop())\n        stack.append(i)\n        i += 1\n    print(*arr1)", "T = int(input())\nwhile T > 0:\n    T -= 1\n    N = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    arr1 = [0] * N\n    stack = [(arr[0], 0)]\n    dict1 = {arr[0]: [0]}\n    i = 1\n    while i < N:\n        while len(stack) > 0 and arr[i] > stack[-1][0]:\n            elem = stack.pop()\n            if elem[0] in dict1:\n                elemCount = len(dict1[elem[0]])\n                for index in dict1[elem[0]]:\n                    arr1[index] = elemCount - 1\n                del dict1[elem[0]]\n        stack.append((arr[i], i))\n        if arr[i] not in dict1:\n            dict1[arr[i]] = [i]\n        else:\n            dict1[arr[i]].append(i)\n        i += 1\n    while len(stack) > 0:\n        elem = stack.pop()\n        if elem[0] in dict1:\n            elemCount = len(dict1[elem[0]])\n            for index in dict1[elem[0]]:\n                arr1[index] = elemCount - 1\n            del dict1[elem[0]]\n    print(*arr1)", "def height(arr):\n    st = [[float('inf'), 0]]\n    ans = []\n    for i in arr:\n        while st[-1][0] < i:\n            st.pop()\n        if st[-1][0] != i:\n            st.append([i, 0])\n        ans.append(st[-1][1])\n        st[-1][1] += 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()][:n]\n    answ = [0] * n\n    ans1 = height(a)\n    ans2 = height(a[::-1])[::-1]\n    for i in range(n):\n        answ[i] = ans1[i] + ans2[i]\n    print(*answ)", "for _ in range(int(input())):\n    N = int(input())\n    L = list(map(int, input().split()))\n    ans = [0] * N\n    for i in range(N - 1):\n        curr = L[i]\n        for j in range(i + 1, N):\n            if curr < L[j]:\n                break\n            elif curr == L[j]:\n                ans[i] += 1\n                ans[j] += 1\n    print(*ans)", "for _ in range(int(input())):\n    N = int(input())\n    L = list(map(int, input().split()))\n    ans = [0] * N\n    for i in range(N - 1):\n        curr = L[i]\n        for j in range(i + 1, N):\n            if curr < L[j]:\n                break\n            elif curr == L[j]:\n                ans[i] += 1\n                ans[j] += 1\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    l1 = [0] * n\n    for i in range(0, n):\n        a = l[i]\n        for j in range(i + 1, n):\n            if a == l[j]:\n                l1[i] += 1\n                l1[j] += 1\n            if a < l[j]:\n                break\n    for i in l1:\n        print(i, end=' ')\n    print('')", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [0] * n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[j] > a[i]:\n                break\n            elif a[i] == a[j]:\n                b[i] += 1\n                b[j] += 1\n    print(*b, sep=' ')", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [0] * n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[j] > a[i]:\n                break\n            elif a[i] == a[j]:\n                b[i] += 1\n                b[j] += 1\n    print(*b, sep=' ')", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [0] * n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[j] > a[i]:\n                break\n            elif a[i] == a[j]:\n                b[i] += 1\n                b[j] += 1\n    print(*b, sep=' ')", "for t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [0] * n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[j] > a[i]:\n                break\n            elif a[i] == a[j]:\n                b[i] += 1\n                b[j] += 1\n    print(*b, sep=' ')", "T = int(input())\nfor l in range(T):\n    N = int(input())\n    h = list(map(int, input().split()))\n    b = [0] * N\n    for i in range(N):\n        if b[i] == 0:\n            s = []\n            s.append(i)\n            for j in range(i + 1, N):\n                if h[j] > h[i]:\n                    break\n                if h[j] == h[i]:\n                    s.append(j)\n            for k in s:\n                b[k] = len(s) - 1\n    for k in b:\n        print(k, end=' ')", "tcs = int(input())\n\ndef sol(a):\n    st = [[float('inf'), 0]]\n    ans = []\n    for i in a:\n        while st[-1][0] < i:\n            st.pop()\n        if st[-1][0] != i:\n            st.append([i, 0])\n        ans.append(st[-1][1])\n        st[-1][1] += 1\n    return ans\nfor _ in range(tcs):\n    n = int(input())\n    h = list(map(int, input().split()))\n    ans1 = sol(h)\n    ans2 = sol(h[::-1])[::-1]\n    for i in range(n):\n        ans1[i] += ans2[i]\n    print(*ans1)", "tcs = int(input())\n\ndef sol(a):\n    st = [[10 ** 10, 0]]\n    ans = []\n    for i in range(int(len(a))):\n        try:\n            while st[-1][0] < a[i]:\n                st.pop()\n            if st[-1][0] != a[i]:\n                st.append([a[i], 0])\n            ans.append(st[-1][1])\n            st[-1][1] += 1\n        except:\n            pass\n    return ans\nfor _ in range(tcs):\n    n = int(input())\n    h = list(map(int, input().split()))\n    ans1 = sol(h)\n    ans2 = sol(h[::-1])[::-1]\n    for i in range(n):\n        ans1[i] += ans2[i]\n    print(*ans1)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    h = list(map(int, input().split()))\n    b = [0] * N\n    for i in range(N):\n        if b[i] == 0:\n            s = []\n            s.append(i)\n            for j in range(i + 1, N):\n                if h[j] > h[i]:\n                    break\n                if h[j] == h[i]:\n                    s.append(j)\n            for k in s:\n                b[k] = len(s) - 1\n    for k in b:\n        print(k, end=' ')", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    Nh = list(map(int, input().split()))\n    ans = [0] * N\n    for i in range(N):\n        for j in range(i + 1, N):\n            if Nh[i] < Nh[j]:\n                break\n            elif Nh[i] == Nh[j]:\n                ans[i] += 1\n                ans[j] += 1\n    print(*ans)", "T = int(input())\nfor l in range(T):\n    N = int(input())\n    h = list(map(int, input().split()))\n    b = [0] * N\n    for i in range(N):\n        if b[i] == 0:\n            s = []\n            s.append(i)\n            for j in range(i + 1, N):\n                if h[j] > h[i]:\n                    break\n                if h[j] == h[i]:\n                    s.append(j)\n            for k in s:\n                b[k] = len(s) - 1\n    for k in b:\n        print(k, end=' ')", "for _ in range(int(input())):\n    N = int(input())\n    h = list(map(int, input().split()))[:N]\n    zero = [0] * N\n    for i in range(N):\n        if zero[i] == 0:\n            s = []\n            s.append(i)\n            for j in range(i + 1, N):\n                if h[j] > h[i]:\n                    break\n                if h[j] == h[i]:\n                    s.append(j)\n            for m in s:\n                zero[m] = len(s) - 1\n    print(*zero)", "T = int(input())\nfor l in range(T):\n    N = int(input())\n    h = list(map(int, input().split()))\n    b = [0] * N\n    for i in range(N):\n        if b[i] == 0:\n            s = []\n            s.append(i)\n            for j in range(i + 1, N):\n                if h[j] > h[i]:\n                    break\n                if h[j] == h[i]:\n                    s.append(j)\n            for k in s:\n                b[k] = len(s) - 1\n    for k in b:\n        print(k, end=' ')", "T = int(input())\nfor l in range(T):\n    N = int(input())\n    h = list(map(int, input().split()))\n    b = [0] * N\n    for i in range(N):\n        if b[i] == 0:\n            s = []\n            s.append(i)\n            for j in range(i + 1, N):\n                if h[j] > h[i]:\n                    break\n                if h[j] == h[i]:\n                    s.append(j)\n            for k in s:\n                b[k] = len(s) - 1\n    for k in b:\n        print(k, end=' ')", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    res = [0] * n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[j] > l[i]:\n                break\n            if l[i] == l[j]:\n                res[i] += 1\n                res[j] += 1\n    for i in res:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    for x in range(n - 1):\n        for j in range(x + 1, n):\n            if arr[j] > arr[x]:\n                break\n            elif arr[j] == arr[x]:\n                ans[x] += 1\n                ans[j] += 1\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    h = list(map(int, input().split()))\n    c = [0] * len(h)\n    for i in range(len(h)):\n        for j in range(i + 1, len(h)):\n            if h[i] == h[j]:\n                c[j] += 1\n                c[i] += 1\n            elif h[j] > h[i]:\n                break\n    print(*c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = [0] * len(l)\n    for j in range(len(l)):\n        for k in range(j + 1, len(l)):\n            if l[j] == l[k]:\n                s[k] += 1\n                s[j] += 1\n            elif l[k] > l[j]:\n                break\n    print(*s, sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if i in d:\n            continue\n        x = l[i]\n        s = set()\n        s.add(i)\n        for j in range(i + 1, n):\n            y = l[j]\n            if y > x:\n                break\n            if y == x:\n                s.add(j)\n        for k in s:\n            d[k] = len(s) - 1\n    ans = [0] * n\n    for i in d:\n        ans[i] = d[i]\n    print(*ans)", "def prog_name():\n    n = int(input())\n    l = list(map(int, input().split()))\n    final = []\n    for x in range(len(l)):\n        c = 0\n        for y in range(x + 1, len(l)):\n            if l[y] > l[x]:\n                break\n            elif l[y] == l[x]:\n                c += 1\n        for z in range(x - 1, -1, -1):\n            if l[z] > l[x]:\n                break\n            elif l[z] == l[x]:\n                c += 1\n        final.append(str(c))\n    print(' '.join(final))\nt = int(input())\nfor unique in range(t):\n    prog_name()", "def prog_name():\n    n = int(input())\n    l = list(map(int, input().split()))\n    final = []\n    for x in range(len(l)):\n        c = 0\n        for y in range(x + 1, len(l)):\n            if l[y] > l[x]:\n                break\n            elif l[y] == l[x]:\n                c += 1\n        for z in range(x - 1, -1, -1):\n            if l[z] > l[x]:\n                break\n            elif l[z] == l[x]:\n                c += 1\n        final.append(str(c))\n    print(' '.join(final))\nt = int(input())\nfor unique in range(t):\n    prog_name()", "import sys, math, itertools, random, bisect\nfrom collections import defaultdict\ninf = 10 ** 18\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = get_array()\n    a.append(inf)\n    ans = [0] * n\n    st = [0]\n    for i in range(1, n + 1):\n        store = defaultdict(list)\n        while st and a[st[-1]] < a[i]:\n            pos = st.pop()\n            store[a[pos]].append(pos)\n        st.append(i)\n        for key in store:\n            ct = len(store[key]) - 1\n            for x in store[key]:\n                ans[x] = ct\n    print(*ans)", "import sys, math, itertools, random, bisect\nfrom collections import defaultdict\ninf = 10 ** 18\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = get_array()\n    a.append(inf)\n    ans = [0] * n\n    st = [0]\n    for i in range(1, n + 1):\n        store = defaultdict(list)\n        while st and a[st[-1]] < a[i]:\n            pos = st.pop()\n            store[a[pos]].append(pos)\n        st.append(i)\n        for key in store:\n            ct = len(store[key]) - 1\n            for x in store[key]:\n                ans[x] = ct\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[j] > a[i]:\n                break\n            elif a[j] == a[i]:\n                b[j] += 1\n                b[i] += 1\n    print(*b)", "import math\nt = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    stack = [[math.inf, 0]]\n    res = []\n    for i in range(n):\n        while len(stack) != 0 and stack[-1][0] < l[i]:\n            stack.pop(-1)\n        if stack[-1][0] != l[i]:\n            stack.append([l[i], 0])\n        res.append(stack[-1][1])\n        stack[-1][1] += 1\n    l = l[::-1]\n    stack = [[math.inf, 0]]\n    res1 = []\n    for i in range(n):\n        while len(stack) != 0 and stack[-1][0] < l[i]:\n            stack.pop(-1)\n        if stack[-1][0] != l[i]:\n            stack.append([l[i], 0])\n        res1.append(stack[-1][1])\n        stack[-1][1] += 1\n    res1 = res1[::-1]\n    for i in range(n):\n        res[i] = res[i] + res1[i]\n    print(*res)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    l1 = [0] * n\n    for i in range(0, n):\n        a = l[i]\n        for j in range(i + 1, n):\n            if a == l[j]:\n                l1[i] += 1\n                l1[j] += 1\n            if a < l[j]:\n                break\n    for i in l1:\n        print(i, end=' ')\n    print('')", "try:\n    t = int(input())\n    for i in range(0, t):\n        n = int(input())\n        a = list(map(int, input().split(' ')))\n        b = [0] * n\n        for i in range(0, len(b)):\n            if b[i] == 0:\n                s = []\n                s.append(i)\n                for j in range(i + 1, n):\n                    if a[j] > a[i]:\n                        break\n                    if a[j] == a[i]:\n                        s.append(j)\n                for v in s:\n                    b[v] = len(s) - 1\n        print(*b)\nexcept:\n    pass", "try:\n    t = int(input())\n    for i in range(0, t):\n        n = int(input())\n        a = list(map(int, input().split(' ')))\n        b = [0] * n\n        for i in range(0, n):\n            if b[i] == 0:\n                ans = 0\n                s = []\n                s.append(i)\n                for j in range(i + 1, n):\n                    if a[j] > a[i]:\n                        break\n                    if a[j] == a[i]:\n                        s.append(j)\n                for x in s:\n                    b[x] = len(s) - 1\n        print(*b)\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    (stack, aux) = ([0], [])\n    answer = [0] * n\n    for i in range(1, n):\n        while len(stack) > 0 and array[i] > array[stack[-1]]:\n            stack.pop()\n        while len(stack) > 0 and array[i] == array[stack[-1]]:\n            x = stack.pop()\n            aux.append(x)\n            answer[x] += 1\n            answer[i] += 1\n        while len(aux) > 0:\n            stack.append(aux.pop())\n        stack.append(i)\n    for i in answer:\n        print(i, end=' ')\n    print('')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    op = [0] * len(arr)\n    for i in range(len(arr) - 1):\n        curr = arr[i]\n        for j in range(i + 1, len(arr)):\n            if curr == arr[j]:\n                op[i] += 1\n                op[j] += 1\n            elif curr < arr[j]:\n                break\n    for el in op:\n        print(str(el), end=' ')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(n - 1):\n        curr = a[i]\n        for j in range(i + 1, n):\n            if a[i] == a[j]:\n                if curr <= a[i]:\n                    ans[i] += 1\n                    ans[j] += 1\n            elif curr < a[j]:\n                break\n    ans = [str(ans[i]) for i in range(len(ans))]\n    print(' '.join(ans))", "T = int(input())\nfor t in range(0, T):\n    N = int(input())\n    ip = input()\n    temp = ip.split()\n    arr = []\n    for i in range(len(temp)):\n        ele = int(temp[i])\n        arr.append(ele)\n    op = []\n    for i in range(0, len(arr)):\n        op.append(0)\n    for i in range(0, len(op) - 1):\n        curr = arr[i]\n        for j in range(i + 1, len(op)):\n            if arr[i] == arr[j]:\n                if curr <= arr[i]:\n                    op[i] += 1\n                    op[j] += 1\n            elif curr < arr[j]:\n                break\n    string = ''\n    for i in range(0, len(op)):\n        string = string + str(op[i])\n        string = string + ' '\n    print(string)", "T = int(input())\nfor t in range(0, T):\n    N = int(input())\n    ip = input()\n    temp = ip.split()\n    arr = []\n    for i in range(len(temp)):\n        ele = int(temp[i])\n        arr.append(ele)\n    op = []\n    for i in range(0, len(arr)):\n        op.append(0)\n    for i in range(0, len(op) - 1):\n        curr = arr[i]\n        for j in range(i + 1, len(op)):\n            if arr[i] == arr[j]:\n                if curr <= arr[i]:\n                    op[i] += 1\n                    op[j] += 1\n            elif curr < arr[j]:\n                break\n    string = ''\n    for i in range(0, len(op)):\n        string = string + str(op[i])\n        string = string + ' '\n    print(string)", "T = int(input())\nfor t in range(0, T):\n    N = int(input())\n    ip = input()\n    temp = ip.split()\n    arr = []\n    for i in range(len(temp)):\n        ele = int(temp[i])\n        arr.append(ele)\n    op = []\n    for i in range(0, len(arr)):\n        op.append(0)\n    for i in range(0, len(op) - 1):\n        max = arr[i]\n        for j in range(i + 1, len(op)):\n            if arr[i] == arr[j]:\n                if max <= arr[i]:\n                    op[i] += 1\n                    op[j] += 1\n            elif max < arr[j]:\n                break\n    string = ''\n    for i in range(0, len(op)):\n        string = string + str(op[i])\n        string = string + ' '\n    print(string)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    (l, r) = ([-1 for i in range(n)], [-1 for i in range(n)])\n    for i in range(n - 1):\n        if l[i] == -1:\n            l[i] = 0\n            c = 1\n            for j in range(i + 1, n):\n                if a[i] == a[j]:\n                    l[j] = c\n                    c += 1\n                elif a[j] > a[i]:\n                    break\n    for i in range(n - 1, 0, -1):\n        if r[i] == -1:\n            r[i] = 0\n            c = 1\n            for j in range(i - 1, -1, -1):\n                if a[i] == a[j]:\n                    r[j] = c\n                    c += 1\n                elif a[j] > a[i]:\n                    break\n    for i in range(n):\n        print(max(0, l[i] + r[i]), end=' ')\n    print()\nfor _ in range(int(input())):\n    solve()", "import sys\ninput = lambda : sys.stdin.readline().strip()\nsys.setrecursionlimit(10 ** 4)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    left = []\n    jump_left = []\n    S = []\n    for i in range(n):\n        while len(S) != 0:\n            top = S[-1]\n            if ls[top] >= ls[i]:\n                jump_left.append(top)\n                break\n            else:\n                S.pop()\n        else:\n            jump_left.append(-1)\n        S.append(i)\n    for i in range(n):\n        if jump_left[i] == -1 or ls[jump_left[i]] > ls[i]:\n            left.append(0)\n        else:\n            left.append(1 + left[jump_left[i]])\n    right = []\n    jump_right = []\n    S = []\n    ls.reverse()\n    for i in range(n):\n        while len(S) != 0:\n            top = S[-1]\n            if ls[top] >= ls[i]:\n                jump_right.append(top)\n                break\n            else:\n                S.pop()\n        else:\n            jump_right.append(-1)\n        S.append(i)\n    for i in range(n):\n        if jump_right[i] == -1 or ls[jump_right[i]] > ls[i]:\n            right.append(0)\n        else:\n            right.append(1 + right[jump_right[i]])\n    right.reverse()\n    for i in range(n):\n        print(left[i] + right[i], end=' ')", "class Stack:\n\n    def __init__(self):\n        self.data = list()\n\n    def top(self):\n        return self.data[-1] if self.data else None\n\n    def is_empty(self):\n        return not self.data\n\n    def push(self, element):\n        self.data.append(element)\n\n    def pop(self):\n        return self.data.pop()\n\ndef get_next_largest_or_equal(array) -> dict:\n    stack = Stack()\n    next_largest_element_index = dict()\n    for (current_element_index, current_element_value) in enumerate(array):\n        current_element = (current_element_value, current_element_index)\n        while stack.is_empty() is not True and current_element_value >= stack.top()[0]:\n            popped_element = stack.pop()\n            next_largest_element_index[popped_element[1]] = current_element_index\n        stack.push(current_element)\n    return next_largest_element_index\n\ndef get_visible_people(array, next_equal_or_greater_indices, direction) -> list:\n    _array_length = len(array)\n    visible_people = [0 for _ in range(_array_length)]\n    _index = _array_length - 1 if direction == 'RIGHT' else 0\n    while 0 <= _index < _array_length:\n        next_element_index = next_equal_or_greater_indices.get(_index, None)\n        if next_element_index is None:\n            visible_people[_index] = 0\n        elif array[next_element_index] > array[_index]:\n            visible_people[_index] = 0\n        elif array[next_element_index] == array[_index]:\n            visible_people[_index] = visible_people[next_element_index] + 1\n        _index = _index - 1 if direction == 'RIGHT' else _index + 1\n    return visible_people\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    ARRAY = list(map(int, input().split(' ')))\n    array_length = len(ARRAY)\n    right_element_indices = get_next_largest_or_equal(array=ARRAY)\n    right_visible_people = get_visible_people(array=ARRAY, next_equal_or_greater_indices=right_element_indices, direction='RIGHT')\n    left_element_indices = get_next_largest_or_equal(array=reversed(ARRAY))\n    left_element_indices = {array_length - 1 - i: array_length - 1 - j for (i, j) in left_element_indices.items()}\n    left_visible_people = get_visible_people(array=ARRAY, next_equal_or_greater_indices=left_element_indices, direction='LEFT')\n    combined = []\n    for index in range(array_length):\n        combined.append(left_visible_people[index] + right_visible_people[index])\n    print(' '.join((str(val) for val in combined)))", "for i in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    stack = []\n    stack.append([float('inf'), 0])\n    left = []\n    for e in l:\n        while stack[-1][0] < e:\n            stack.pop()\n        if stack[-1][0] != e:\n            stack.append([e, 0])\n        left.append(stack[-1][1])\n        stack[-1][1] += 1\n    l.reverse()\n    st = []\n    st.append([float('inf'), 0])\n    right = []\n    for e in l:\n        while st[-1][0] < e:\n            st.pop()\n        if st[-1][0] != e:\n            st.append([e, 0])\n        right.append(st[-1][1])\n        st[-1][1] += 1\n    right.reverse()\n    for j in range(n):\n        print(left[j] + right[j], end=' ')\n    print()", "from collections import deque\nfor i in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    stack = deque()\n    stack.append([float('inf'), 0])\n    left = []\n    for e in l:\n        while stack[-1][0] < e:\n            stack.pop()\n        if stack[-1][0] != e:\n            stack.append([e, 0])\n        left.append(stack[-1][1])\n        stack[-1][1] += 1\n    l.reverse()\n    st = deque()\n    st.append([float('inf'), 0])\n    right = []\n    for e in l:\n        while st[-1][0] < e:\n            st.pop()\n        if st[-1][0] != e:\n            st.append([e, 0])\n        right.append(st[-1][1])\n        st[-1][1] += 1\n    right.reverse()\n    for j in range(n):\n        print(left[j] + right[j], end=' ')\n    print()", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    b = [0] * n\n    a = list(map(int, input().split()))\n    for j in range(0, n - 1):\n        c = a[j]\n        for k in range(j + 1, n):\n            if a[k] > c:\n                break\n            if a[k] == c:\n                b[j] += 1\n                b[k] += 1\n    for o in b:\n        print(o, end=' ')\n    print()", "def check(li):\n    st = [[float('inf'), 0]]\n    ans = []\n    for i in li:\n        while st[-1][0] < i:\n            st.pop()\n        if st[-1][0] != i:\n            st.append([i, 0])\n        ans.append(st[-1][1])\n        st[-1][1] += 1\n    return ans\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    left = check(arr)\n    right = check(arr[::-1])\n    right = right[::-1]\n    ans = []\n    for i in range(n):\n        ans.append(left[i] + right[i])\n    for i in ans:\n        print(i, end=' ')\n    print()", "def check(n, array):\n    for i in range(0, n):\n        total = 0\n        for j in range(i - 1, -1, -1):\n            if array[i] > array[j]:\n                pass\n            elif array[i] == array[j]:\n                total += 1\n            else:\n                break\n        for j in range(i + 1, n):\n            if array[i] > array[j]:\n                pass\n            elif array[i] == array[j]:\n                total += 1\n            else:\n                break\n        print(total, end=' ')\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    check(n, arr)\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    h_vec = input().split(' ')\n    h_vec = [int(h) for h in h_vec]\n    stack = []\n    next_equal_left = [0 for _ in range(n)]\n    next_equal_right = [0 for _ in range(n)]\n    for i in range(n):\n        while len(stack) > 0:\n            index = stack[-1]\n            if h_vec[index] >= h_vec[i]:\n                break\n            stack.pop()\n        if len(stack) > 0:\n            next_equal_left[i] = stack[-1]\n        else:\n            next_equal_left[i] = -1\n        stack.append(i)\n    stack = []\n    for i in range(n - 1, -1, -1):\n        while len(stack) > 0:\n            index = stack[-1]\n            if h_vec[index] >= h_vec[i]:\n                break\n            stack.pop()\n        if len(stack) > 0:\n            next_equal_right[i] = stack[-1]\n        else:\n            next_equal_right[i] = -1\n        stack.append(i)\n    left_result = [0 for _ in range(n)]\n    right_result = [0 for _ in range(n)]\n    for i in range(n):\n        if next_equal_left[i] == -1 or h_vec[i] != h_vec[next_equal_left[i]]:\n            continue\n        else:\n            left_result[i] = left_result[next_equal_left[i]] + 1\n    for i in range(n - 1, -1, -1):\n        if next_equal_right[i] == -1 or h_vec[i] != h_vec[next_equal_right[i]]:\n            continue\n        else:\n            right_result[i] = right_result[next_equal_right[i]] + 1\n    res = [0 for _ in range(n)]\n    for i in range(n):\n        res[i] = left_result[i] + right_result[i]\n    res = [str(r) for r in res]\n    res = ' '.join(res)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [0 for i in range(n)]\n    dp[n - 1] = 0\n    st = [(a[n - 1], n - 1)]\n    for i in range(n - 2, -1, -1):\n        while st and a[i] > st[-1][0]:\n            st.pop()\n        if st:\n            if st[-1][0] == a[i]:\n                dp[st[-1][1]] += 1\n                dp[i] += dp[st[-1][1]]\n                st.pop()\n        st.append((a[i], i))\n    st = [(a[0], 0)]\n    for i in range(1, n):\n        while st and st[-1][0] < a[i]:\n            st.pop()\n        if st:\n            if st[-1][0] == a[i]:\n                dp[i] = dp[st[-1][1]]\n        st.append((a[i], i))\n    print(*dp)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    left = [0] * n\n    stack = []\n    for i in range(n):\n        while len(stack) > 0 and lis[stack[0]] < lis[i]:\n            stack.pop(0)\n        if len(stack) == 0 or lis[stack[0]] > lis[i]:\n            left[i] = 0\n        elif lis[stack[0]] == lis[i]:\n            left[i] = left[stack[0]] + 1\n            stack.pop(0)\n        stack.insert(0, i)\n    right = [0] * n\n    stack = []\n    for i in range(n - 1, -1, -1):\n        while len(stack) > 0 and lis[stack[0]] < lis[i]:\n            stack.pop(0)\n        if len(stack) == 0 or lis[stack[0]] > lis[i]:\n            right[i] = 0\n        elif lis[stack[0]] == lis[i]:\n            right[i] = right[stack[0]] + 1\n            stack.pop(0)\n        stack.insert(0, i)\n    ans = [left[i] + right[i] for i in range(n)]\n    print(*ans)", "from collections import defaultdict\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        ans = [0] * n\n        stack = []\n        k = max(arr) + 1\n        visited = defaultdict(int)\n        stack.append(arr[0])\n        visited[arr[0]] = 1\n        for j in range(1, n):\n            if arr[j] > stack[-1]:\n                while len(stack) != 0 and arr[j] > stack[-1]:\n                    visited[stack.pop()] = 0\n            ans[j] += visited[arr[j]]\n            stack.append(arr[j])\n            visited[arr[j]] += 1\n        stack = []\n        stack.append(arr[n - 1])\n        visit = defaultdict(int)\n        visit[arr[n - 1]] = 1\n        for j in range(n - 2, -1, -1):\n            if arr[j] > stack[-1]:\n                while len(stack) != 0 and arr[j] > stack[-1]:\n                    visit[stack.pop()] = 0\n            ans[j] += visit[arr[j]]\n            stack.append(arr[j])\n            visit[arr[j]] += 1\n        print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    c = [0] * n\n    for i in range(n):\n        if c[i] == 0:\n            l = []\n            ans = 0\n            for j in range(i + 1, n):\n                if x[j] > x[i]:\n                    break\n                elif x[j] == x[i]:\n                    c[i] += 1\n                    l.append(j)\n            for k in range(len(l)):\n                c[l[k]] = c[i]\n    print(*c)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    c = [0] * n\n    for i in range(n):\n        if c[i] == 0:\n            l = []\n            ans = 0\n            for j in range(i + 1, n):\n                if x[j] > x[i]:\n                    break\n                elif x[j] == x[i]:\n                    c[i] += 1\n                    l.append(j)\n            for k in range(len(l)):\n                c[l[k]] = c[i]\n    print(*c)", "for _ in range(int(input())):\n    n = int(input())\n    child = list(map(int, input().split()))\n    final = [0] * n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if child[i] < child[j]:\n                break\n            elif child[i] == child[j]:\n                final[i] += 1\n                final[j] += 1\n    print(*final)", "for _ in range(int(input())):\n    n = int(input())\n    child = list(map(int, input().split()))\n    final = [0] * n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if child[i] < child[j]:\n                break\n            elif child[i] == child[j]:\n                final[i] += 1\n                final[j] += 1\n    print(*final)"]