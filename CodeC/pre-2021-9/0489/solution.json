["for _ in range(int(input())):\n    a = input()\n    b = input()\n    a_small = ''\n    a_big = ''\n    a_small1 = ''\n    a_big1 = ''\n    a = list(a)\n    b = list(b)\n    for i in range(len(b)):\n        a.remove(b[i])\n    a = ''.join(a)\n    b = ''.join(b)\n    for i in range(len(a)):\n        if ord(a[i]) <= ord(b[0]):\n            a_small += a[i]\n        elif a[i]:\n            a_big += a[i]\n    ans = ''.join(sorted(a_small)) + b + ''.join(sorted(a_big))\n    for i in range(len(a)):\n        if ord(a[i]) < ord(b[0]):\n            a_small1 += a[i]\n        elif a[i]:\n            a_big1 += a[i]\n    ans1 = ''.join(sorted(a_small1)) + b + ''.join(sorted(a_big1))\n    print(min(ans, ans1))", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    a_small = ''\n    a_big = ''\n    a_small1 = ''\n    a_big1 = ''\n    a = list(a)\n    b = list(b)\n    for i in range(len(b)):\n        a.remove(b[i])\n    a = ''.join(a)\n    b = ''.join(b)\n    for i in range(len(a)):\n        if ord(a[i]) <= ord(b[0]):\n            a_small += a[i]\n        elif a[i]:\n            a_big += a[i]\n    ans = ''.join(sorted(a_small)) + b + ''.join(sorted(a_big))\n    for i in range(len(a)):\n        if ord(a[i]) < ord(b[0]):\n            a_small1 += a[i]\n        elif a[i]:\n            a_big1 += a[i]\n    ans1 = ''.join(sorted(a_small1)) + b + ''.join(sorted(a_big1))\n    print(min(ans, ans1))", "for _ in range(int(input())):\n    s = list(str(input()))\n    p = list(str(input()))\n    s_26 = [0] * 26\n    p_26 = [0] * 26\n    to_add = [0] * 26\n    for i in s:\n        s_26[ord(i) - 97] += 1\n    for i in p:\n        p_26[ord(i) - 97] += 1\n    for i in range(26):\n        to_add[i] = s_26[i] - p_26[i]\n    ans = []\n    for i in range(26):\n        if i <= ord(p[0]) - 97:\n            ans.append(chr(i + 97) * to_add[i])\n    ans += p\n    for i in range(26):\n        if i > ord(p[0]) - 97:\n            ans.append(chr(i + 97) * to_add[i])\n    ans = ''.join((i for i in ans))\n    ans1 = []\n    for i in range(26):\n        if i < ord(p[0]) - 97:\n            ans1.append(chr(i + 97) * to_add[i])\n    ans1 += p\n    for i in range(26):\n        if i >= ord(p[0]) - 97:\n            ans1.append(chr(i + 97) * to_add[i])\n    ans1 = ''.join((i for i in ans1))\n    print(min(ans, ans1))", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    pli = list(p)\n    sli = list(s)\n    front = []\n    middle = ''\n    end = []\n    for a in p:\n        if a in sli:\n            sli.remove(a)\n    for i in range(len(sli)):\n        if sli[i] < pli[0]:\n            front.append(sli[i])\n        elif sli[i] == pli[0]:\n            middle += sli[i]\n        else:\n            end.append(sli[i])\n    front.sort()\n    end.sort()\n    front = ''.join(map(str, front))\n    end = ''.join(map(str, end))\n    print(min(front + p + middle + end, front + middle + p + end))", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for e in p[1:]:\n        if e not in u:\n            u.append(e)\n    s = s + p[0]\n    s = ''.join(sorted(s))\n    for e in p:\n        s = s.replace(e, '', 1)\n    pos = 0\n    if u[0] < u[1]:\n        pos = s.rfind(p[0])\n    else:\n        pos = s.find(p[0])\n    print(s[:pos] + p + s[pos + 1:])", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for e in p[1:]:\n        if e not in u:\n            u.append(e)\n    s = s + p[0]\n    s = ''.join(sorted(s))\n    for e in p:\n        s = s.replace(e, '', 1)\n    pos = 0\n    if u[0] < u[1]:\n        pos = s.rfind(p[0])\n    else:\n        pos = s.find(p[0])\n    print(s[:pos] + p + s[pos + 1:])", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    freq = [p[0]]\n    for i in p[1:]:\n        if i not in freq:\n            freq.append(i)\n            break\n    s += p[0]\n    s = ''.join(sorted(s))\n    for j in p:\n        s = s.replace(j, '', 1)\n    cnt = 0\n    if freq[0] < freq[1]:\n        cnt = s.rfind(p[0])\n    else:\n        cnt = s.find(p[0])\n    print(s[:cnt] + p + s[cnt + 1:])", "tests = int(input())\nfor i in range(tests):\n    s = input()\n    p = input()\n    arr = [0] * 26\n    for j in s:\n        arr[ord(j) - 97] += 1\n    for j in p:\n        arr[ord(j) - 97] -= 1\n    ans = ''\n    p_added = False\n    for j in range(26):\n        add = chr(97 + j) * arr[j]\n        if add + p > p + add and (not p_added):\n            ans += p\n            p_added = True\n        ans += add\n    if not p_added:\n        ans += p\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    s = input()\n    p = input()\n    arr = [0] * 26\n    for j in s:\n        arr[ord(j) - 97] += 1\n    for j in p:\n        arr[ord(j) - 97] -= 1\n    ans = ''\n    p_added = False\n    for j in range(26):\n        add = chr(97 + j) * arr[j]\n        if add + p > p + add and (not p_added):\n            ans += p\n            p_added = True\n        ans += add\n    if not p_added:\n        ans += p\n    print(ans)", "import os, sys, io, math\nfrom array import array\nfrom math import *\nfrom collections import Counter\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    (s, k) = (IS(), IS())\n    c = Counter(s)\n    for i in k:\n        c[i] -= 1\n    (a, b) = ('', '')\n    for i in 'abcdefghijklmnopqrstuvwxyz':\n        if i == k[0]:\n            b += k\n        a += i * c[i]\n        b += i * c[i]\n        if i == k[0]:\n            a += k\n    print(a if a < b else b)", "import os, sys, io, math\nfrom array import array\nfrom math import *\nfrom collections import Counter\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    (s, k) = (IS(), IS())\n    c = Counter(s)\n    for i in k:\n        c[i] -= 1\n    (a, b) = ('', '')\n    for i in 'abcdefghijklmnopqrstuvwxyz':\n        if i == k[0]:\n            b += k\n        a += i * c[i]\n        b += i * c[i]\n        if i == k[0]:\n            a += k\n    print(a if a < b else b)", "import os, sys, io, math\nfrom array import array\nfrom math import *\nfrom collections import Counter\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    (s, k) = (IS(), IS())\n    c = Counter(s)\n    for i in k:\n        c[i] -= 1\n    (a, b) = ('', '')\n    for i in 'abcdefghijklmnopqrstuvwxyz':\n        if i == k[0]:\n            b += k\n        a += i * c[i]\n        b += i * c[i]\n        if i == k[0]:\n            a += k\n    print(a if a < b else b)", "from collections import Counter\nt = int(input())\nfor ti in range(t):\n    st = input()\n    p = input()\n    c = Counter(st)\n    for i in p:\n        c[i] -= 1\n    a = ''\n    x = ''\n    for i in 'abcdefghijklmnopqrstuvwxyz':\n        if i == p[0]:\n            x += p\n        a += i * c[i]\n        x += i * c[i]\n        if i == p[0]:\n            a += p\n    print(a if a < x else x)", "from collections import Counter\nt = int(input())\nfor ti in range(t):\n    st = input()\n    p = input()\n    c = Counter(st)\n    for i in p:\n        c[i] -= 1\n    a = ''\n    x = ''\n    for i in 'abcdefghijklmnopqrstuvwxyz':\n        if i == p[0]:\n            x += p\n        a += i * c[i]\n        x += i * c[i]\n        if i == p[0]:\n            a += p\n    print(a if a < x else x)", "for x in range(int(input())):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for e in p[1:]:\n        if e not in u:\n            u.append(e)\n    s = s + p[0]\n    s = ''.join(sorted(s))\n    for e in p:\n        s = s.replace(e, '', 1)\n    pos = 0\n    if u[0] < u[1]:\n        pos = s.rfind(p[0])\n    else:\n        pos = s.find(p[0])\n    print(s[:pos] + p + s[pos + 1:])", "for x in range(int(input())):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for e in p[1:]:\n        if e not in u:\n            u.append(e)\n    s = s + p[0]\n    s = ''.join(sorted(s))\n    for e in p:\n        s = s.replace(e, '', 1)\n    pos = 0\n    if u[0] < u[1]:\n        pos = s.rfind(p[0])\n    else:\n        pos = s.find(p[0])\n    print(s[:pos] + p + s[pos + 1:])", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for e in p[1:]:\n        if e not in u:\n            u.append(e)\n    s = s + p[0]\n    s = ''.join(sorted(s))\n    for e in p:\n        s = s.replace(e, '', 1)\n    pos = 0\n    if u[0] < u[1]:\n        pos = s.rfind(p[0])\n    else:\n        pos = s.find(p[0])\n    print(s[:pos] + p + s[pos + 1:])", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for e in p[1:]:\n        if e not in u:\n            u.append(e)\n    s = s + p[0]\n    s = ''.join(sorted(s))\n    for e in p:\n        s = s.replace(e, '', 1)\n    pos = 0\n    if u[0] < u[1]:\n        pos = s.rfind(p[0])\n    else:\n        pos = s.find(p[0])\n    print(s[:pos] + p + s[pos + 1:])", "from collections import Counter\nT = int(input())\nfor x in range(T):\n    S = str(input())\n    P = str(input())\n    A = [P[0]]\n    p = Counter(P)\n    for y in P[1:]:\n        if y not in A:\n            A.append(y)\n            break\n    S = list(S)\n    i = 0\n    while i < len(S):\n        if p[S[i]] > 0:\n            p[S[i]] -= 1\n            del S[i]\n        else:\n            i += 1\n    S.append(P[0])\n    S = ''.join(sorted(S))\n    b = 0\n    if A[0] < A[1]:\n        b = S.rfind(P[0])\n    else:\n        b = S.find(P[0])\n    print(S[:b] + P + S[b + 1:])", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for j in p[1:]:\n        if j not in u:\n            u.append(j)\n            break\n    s += p[0]\n    s = ''.join(sorted(s))\n    for k in p:\n        s = s.replace(k, '', 1)\n    c = 0\n    if u[0] < u[1]:\n        c = s.rfind(p[0])\n    else:\n        c = s.find(p[0])\n    print(s[:c] + p + s[c + 1:])", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for j in p[1:]:\n        if j not in u:\n            u.append(j)\n            break\n    s += p[0]\n    s = ''.join(sorted(s))\n    for k in p:\n        s = s.replace(k, '', 1)\n    c = 0\n    if u[0] < u[1]:\n        c = s.rfind(p[0])\n    else:\n        c = s.find(p[0])\n    print(s[:c] + p + s[c + 1:])", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for j in p[1:]:\n        if j not in u:\n            u.append(j)\n            break\n    s += p[0]\n    s = ''.join(sorted(s))\n    for k in p:\n        s = s.replace(k, '', 1)\n    c = 0\n    if u[0] < u[1]:\n        c = s.rfind(p[0])\n    else:\n        c = s.find(p[0])\n    print(s[:c] + p + s[c + 1:])", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    s = input()\n    p = input()\n    u = [p[0]]\n    need = Counter(p)\n    for j in p[1:]:\n        if j not in u:\n            u.append(j)\n            break\n    s = list(s)\n    i = 0\n    while i < len(s):\n        if need[s[i]] > 0:\n            need[s[i]] -= 1\n            del s[i]\n        else:\n            i += 1\n    s.append(p[0])\n    s = ''.join(sorted(s))\n    c = 0\n    if u[0] < u[1]:\n        c = s.rfind(p[0])\n    else:\n        c = s.find(p[0])\n    print(s[:c] + p + s[c + 1:])", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    s = input()\n    p = input()\n    u = [p[0]]\n    need = Counter(p)\n    for j in p[1:]:\n        if j not in u:\n            u.append(j)\n            break\n    s = list(s)\n    i = 0\n    while i < len(s):\n        if need[s[i]] > 0:\n            need[s[i]] -= 1\n            del s[i]\n        else:\n            i += 1\n    s.append(p[0])\n    s = ''.join(sorted(s))\n    c = 0\n    if u[0] < u[1]:\n        c = s.rfind(p[0])\n    else:\n        c = s.find(p[0])\n    print(s[:c] + p + s[c + 1:])", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for j in p[1:]:\n        if j not in u:\n            u.append(j)\n            break\n    s += p[0]\n    s = ''.join(sorted(s))\n    for k in p:\n        s = s.replace(k, '', 1)\n    c = 0\n    if u[0] < u[1]:\n        c = s.rfind(p[0])\n    else:\n        c = s.find(p[0])\n    print(s[:c] + p + s[c + 1:])", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for j in p[1:]:\n        if j not in u:\n            u.append(j)\n    s += p[0]\n    s = ''.join(sorted(s))\n    for k in p:\n        s = s.replace(k, '', 1)\n    c = 0\n    if u[0] < u[1]:\n        c = s.rfind(p[0])\n    else:\n        c = s.find(p[0])\n    print(s[:c] + p + s[c + 1:])", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for j in p[1:]:\n        if j not in u:\n            u.append(j)\n    s += p[0]\n    s = ''.join(sorted(s))\n    for k in p:\n        s = s.replace(k, '', 1)\n    c = 0\n    if u[0] < u[1]:\n        c = s.rfind(p[0])\n    else:\n        c = s.find(p[0])\n    print(s[:c] + p + s[c + 1:])", "for _ in range(int(input())):\n    s = str(input())\n    p = str(input())\n    if len(s) == len(p):\n        print(p)\n    else:\n        res = ''\n        flag = 1\n        for i in range(1, len(p)):\n            if ord(p[i]) == ord(p[i - 1]):\n                continue\n            if ord(p[i]) < ord(p[i - 1]):\n                flag = 0\n            break\n        ordP1 = ord(p[0]) - ord('a') + flag\n        scount = [0] * 26\n        for c in s:\n            scount[ord(c) - ord('a')] += 1\n        for c in p:\n            scount[ord(c) - ord('a')] -= 1\n        for i in range(ordP1):\n            while scount[i] > 0:\n                res += chr(i + ord('a'))\n                scount[i] -= 1\n        res += p\n        for i in range(ordP1, 26):\n            while scount[i] > 0:\n                res += chr(i + ord('a'))\n                scount[i] -= 1\n        print(res)", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for e in p[1:]:\n        if e not in u:\n            u.append(e)\n    s = s + p[0]\n    s = ''.join(sorted(s))\n    for e in p:\n        s = s.replace(e, '', 1)\n    pos = 0\n    if u[0] < u[1]:\n        pos = s.rfind(p[0])\n    else:\n        pos = s.find(p[0])\n    print(s[:pos] + p + s[pos + 1:])", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    u = []\n    u.append(p[0])\n    for i in p[1:]:\n        if i not in u:\n            u.append(i)\n    s += p[0]\n    s = ''.join(sorted(s))\n    for i in p:\n        s = s.replace(i, '', 1)\n    x = 0\n    if u[0] < u[1]:\n        x = s.rfind(p[0])\n    else:\n        x = s.find(p[0])\n    print(s[:x] + p + s[x + 1:])", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for e in p[1:]:\n        if e not in u:\n            u.append(e)\n    s = s + p[0]\n    s = ''.join(sorted(s))\n    for e in p:\n        s = s.replace(e, '', 1)\n    pos = 0\n    if u[0] < u[1]:\n        pos = s.rfind(p[0])\n    else:\n        pos = s.find(p[0])\n    print(s[:pos] + p + s[pos + 1:])", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for e in p[1:]:\n        if e not in u:\n            u.append(e)\n    s = s + p[0]\n    s = ''.join(sorted(s))\n    for e in p:\n        s = s.replace(e, '', 1)\n    pos = 0\n    if u[0] < u[1]:\n        pos = s.rfind(p[0])\n    else:\n        pos = s.find(p[0])\n    print(s[:pos] + p + s[pos + 1:])", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for e in p[1:]:\n        if e not in u:\n            u.append(e)\n    s = s + p[0]\n    s = ''.join(sorted(s))\n    for e in p:\n        s = s.replace(e, '', 1)\n    pos = 0\n    if u[0] < u[1]:\n        pos = s.rfind(p[0])\n    else:\n        pos = s.find(p[0])\n    print(s[:pos] + p + s[pos + 1:])", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for e in p[1:]:\n        if e not in u:\n            u.append(e)\n    s = s + p[0]\n    s = ''.join(sorted(s))\n    for e in p:\n        s = s.replace(e, '', 1)\n    pos = 0\n    if u[0] < u[1]:\n        pos = s.rfind(p[0])\n    else:\n        pos = s.find(p[0])\n    print(s[:pos] + p + s[pos + 1:])", "for _ in range(int(input())):\n    s1 = input()\n    s2 = input()\n    l = [0] * 26\n    for i in s1:\n        l[ord(i) - ord('a')] += 1\n    for i in s2:\n        l[ord(i) - ord('a')] -= 1\n    (k, s, s1) = (ord(s2[0]) - ord('a'), '', '')\n    for i in range(26):\n        if i == k:\n            s += chr(ord('a') + i) * l[i]\n            s += s2\n            s1 += s2\n            s1 += chr(ord('a') + i) * l[i]\n        else:\n            s += chr(ord('a') + i) * l[i]\n            s1 += chr(ord('a') + i) * l[i]\n    print(min(s, s1))", "import math\nfor i in range(int(input())):\n    s = list(input())\n    p = list(input())\n    for v in p:\n        s.remove(v)\n    deb = []\n    fin = []\n    mid = []\n    for (i, v) in enumerate(s):\n        if p[0] > v:\n            deb.append(v)\n        elif p[0] == v:\n            mid.append(v)\n        else:\n            fin.append(v)\n    deb = sorted(deb)\n    fin = sorted(fin)\n    print(min(''.join(deb + mid + p + fin), ''.join(deb + p + mid + fin)))", "import math\nfor i in range(int(input())):\n    s = list(input())\n    p = list(input())\n    for v in p:\n        if v in s:\n            s.remove(v)\n    deb = []\n    fin = []\n    mid = []\n    for (i, v) in enumerate(s):\n        if p[0] > v:\n            deb.append(v)\n        elif p[0] == v:\n            mid.append(v)\n        else:\n            fin.append(v)\n    deb = sorted(deb)\n    fin = sorted(fin)\n    print(min(''.join(deb + mid + p + fin), ''.join(deb + p + mid + fin)))", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    pli = list(p)\n    sli = list(s)\n    front = []\n    middle = ''\n    end = []\n    for a in p:\n        if a in sli:\n            sli.remove(a)\n    for i in range(len(sli)):\n        if sli[i] < pli[0]:\n            front.append(sli[i])\n        elif sli[i] == pli[0]:\n            middle += sli[i]\n        else:\n            end.append(sli[i])\n    front.sort()\n    end.sort()\n    front = ''.join(map(str, front))\n    end = ''.join(map(str, end))\n    print(min(front + p + middle + end, front + middle + p + end))", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    list1 = []\n    list1[:0] = s\n    list2 = []\n    list2[:0] = p\n    for i in list2:\n        list1.remove(i)\n    list1.sort()\n    str1 = ''\n    str2 = ''\n    s = str1.join(list1)\n    p = str2.join(list2)\n    temp = p[0]\n    empty = ''\n    third = ''\n    second = ''\n    for i in range(len(s)):\n        if s[i] < temp:\n            empty = empty + s[i]\n        elif s[i] == temp:\n            third = third + s[i]\n        else:\n            second = second + s[i]\n    print(min(empty + third + p + second, empty + p + third + second))", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    i = 0\n    d = {}\n    for l in s:\n        if l in d:\n            d[l] = d[l] + 1\n        else:\n            d[l] = 1\n    for k in p:\n        d[k] = d[k] - 1\n    res = ''\n    res1 = ''\n    t = p[0]\n    d = {k: v for (k, v) in sorted(d.items(), key=lambda item: item[0])}\n    for (k, v) in d.items():\n        if k == t:\n            res1 += p\n            res1 += k * v\n            res += k * v\n            res += p\n        else:\n            res += k * v\n            res1 += k * v\n    print(min(res, res1))", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    i = 0\n    d = {}\n    for l in s:\n        if l in d:\n            d[l] = d[l] + 1\n        else:\n            d[l] = 1\n    for k in p:\n        d[k] = d[k] - 1\n    res = ''\n    res1 = ''\n    t = p[0]\n    d = {k: v for (k, v) in sorted(d.items(), key=lambda item: item[0])}\n    for (k, v) in d.items():\n        if k == t:\n            res1 += p\n            res1 += k * v\n            res += k * v\n            res += p\n        else:\n            res += k * v\n            res1 += k * v\n    print(min(res, res1))", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    i = 0\n    d = {}\n    for l in s:\n        if l in d:\n            d[l] = d[l] + 1\n        else:\n            d[l] = 1\n    for k in p:\n        d[k] = d[k] - 1\n    res = ''\n    res1 = ''\n    t = p[0]\n    d = {k: v for (k, v) in sorted(d.items(), key=lambda item: item[0])}\n    for (k, v) in d.items():\n        if k == t:\n            res1 += p\n            res1 += k * v\n            res += k * v\n            res += p\n        else:\n            res += k * v\n            res1 += k * v\n    print(min(res, res1))", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    pli = list(p)\n    sli = list(s)\n    front = []\n    middle = ''\n    end = []\n    for a in p:\n        if a in sli:\n            sli.remove(a)\n    for i in range(len(sli)):\n        if sli[i] < pli[0]:\n            front.append(sli[i])\n        elif sli[i] == pli[0]:\n            middle += sli[i]\n        else:\n            end.append(sli[i])\n    front.sort()\n    end.sort()\n    front = ''.join(map(str, front))\n    end = ''.join(map(str, end))\n    print(min(front + p + middle + end, front + middle + p + end))", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    pli = list(p)\n    sli = list(s)\n    front = []\n    middle = ''\n    end = []\n    for a in p:\n        if a in sli:\n            sli.remove(a)\n    for i in range(len(sli)):\n        if sli[i] < pli[0]:\n            front.append(sli[i])\n        elif sli[i] == pli[0]:\n            middle += sli[i]\n        else:\n            end.append(sli[i])\n    front.sort()\n    end.sort()\n    front = ''.join(map(str, front))\n    end = ''.join(map(str, end))\n    print(min(front + p + middle + end, front + middle + p + end))", "try:\n    for _ in range(int(input())):\n        n = input()\n        t = input()\n        a = [0 for i in range(26)]\n        for i in n:\n            a[ord(i) - 97] += 1\n        for i in t:\n            a[ord(i) - 97] -= 1\n        last = ord(t[0]) - 97\n        s1 = ''\n        s2 = ''\n        for i in range(26):\n            if last == i:\n                s1 += chr(97 + i) * a[i]\n                s1 += t\n                s2 += t\n                s2 += chr(97 + i) * a[i]\n            else:\n                s1 += chr(97 + i) * a[i]\n                s2 += chr(97 + i) * a[i]\n        print(min(s1, s2))\nexcept Exception:\n    pass", "try:\n    for _ in range(int(input())):\n        n = input()\n        t = input()\n        a = [0 for i in range(26)]\n        for i in n:\n            a[ord(i) - 97] += 1\n        for i in t:\n            a[ord(i) - 97] -= 1\n        last = ord(t[0]) - 97\n        s1 = ''\n        s2 = ''\n        for i in range(26):\n            if last == i:\n                s1 += chr(97 + i) * a[i]\n                s1 += t\n                s2 += t\n                s2 += chr(97 + i) * a[i]\n            else:\n                s1 += chr(97 + i) * a[i]\n                s2 += chr(97 + i) * a[i]\n        print(min(s1, s2))\nexcept Exception:\n    pass", "try:\n    for _ in range(int(input())):\n        n = input()\n        t = input()\n        a = [0 for i in range(26)]\n        for i in n:\n            a[ord(i) - 97] += 1\n        for i in t:\n            a[ord(i) - 97] -= 1\n        last = ord(t[0]) - 97\n        s1 = ''\n        s2 = ''\n        for i in range(26):\n            if last == i:\n                s1 += chr(97 + i) * a[i]\n                s1 += t\n                s2 += t\n                s2 += chr(97 + i) * a[i]\n            else:\n                s1 += chr(97 + i) * a[i]\n                s2 += chr(97 + i) * a[i]\n        print(min(s1, s2))\nexcept Exception:\n    pass", "testcase = int(input())\nfor _ in range(testcase):\n    string = input()\n    pattern = input()\n    result = ''\n    cnt = [0] * 26\n    for c in string:\n        cnt[ord(c) - ord('a')] += 1\n    for c in pattern:\n        cnt[ord(c) - ord('a')] -= 1\n    flag = 1\n    for i in range(1, len(pattern)):\n        if pattern[i] == pattern[i - 1]:\n            continue\n        if pattern[i] < pattern[i - 1]:\n            flag = 0\n        break\n    index = ord(pattern[0]) - ord('a') + flag\n    for i in range(0, index):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    result += pattern\n    for i in range(index, 26):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    print(result)", "testcase = int(input())\nfor _ in range(testcase):\n    string = input()\n    pattern = input()\n    result = ''\n    cnt = [0] * 26\n    for c in string:\n        cnt[ord(c) - ord('a')] += 1\n    for c in pattern:\n        cnt[ord(c) - ord('a')] -= 1\n    flag = 1\n    for i in range(1, len(pattern)):\n        if pattern[i] == pattern[i - 1]:\n            continue\n        if pattern[i] < pattern[i - 1]:\n            flag = 0\n        break\n    index = ord(pattern[0]) - ord('a') + flag\n    for i in range(0, index):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    result += pattern\n    for i in range(index, 26):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    print(result)", "testcase = int(input())\nfor _ in range(testcase):\n    string = input()\n    pattern = input()\n    result = ''\n    cnt = [0] * 26\n    for c in string:\n        cnt[ord(c) - ord('a')] += 1\n    for c in pattern:\n        cnt[ord(c) - ord('a')] -= 1\n    flag = 1\n    for i in range(1, len(pattern)):\n        if pattern[i] == pattern[i - 1]:\n            continue\n        if pattern[i] < pattern[i - 1]:\n            flag = 0\n        break\n    index = ord(pattern[0]) - ord('a') + flag\n    for i in range(0, index):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    result += pattern\n    for i in range(index, 26):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    print(result)", "testcase = int(input())\nfor _ in range(testcase):\n    string = input()\n    pattern = input()\n    result = ''\n    cnt = [0] * 26\n    for c in string:\n        cnt[ord(c) - ord('a')] += 1\n    for c in pattern:\n        cnt[ord(c) - ord('a')] -= 1\n    flag = 1\n    for i in range(1, len(pattern)):\n        if pattern[i] == pattern[i - 1]:\n            continue\n        if pattern[i] < pattern[i - 1]:\n            flag = 0\n        break\n    index = ord(pattern[0]) - ord('a') + flag\n    for i in range(0, index):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    result += pattern\n    for i in range(index, 26):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    print(result)", "testcase = int(input())\nfor _ in range(testcase):\n    string = input()\n    pattern = input()\n    result = ''\n    cnt = [0] * 26\n    for c in string:\n        cnt[ord(c) - ord('a')] += 1\n    for c in pattern:\n        cnt[ord(c) - ord('a')] -= 1\n    flag = 1\n    for i in range(1, len(pattern)):\n        if pattern[i] == pattern[i - 1]:\n            continue\n        if pattern[i] < pattern[i - 1]:\n            flag = 0\n        break\n    index = ord(pattern[0]) - ord('a') + flag\n    for i in range(0, index):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    result += pattern\n    for i in range(index, 26):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    print(result)", "testcase = int(input())\nfor _ in range(testcase):\n    string = input()\n    pattern = input()\n    result = ''\n    cnt = [0] * 26\n    for c in string:\n        cnt[ord(c) - ord('a')] += 1\n    for c in pattern:\n        cnt[ord(c) - ord('a')] -= 1\n    flag = 1\n    for i in range(1, len(pattern)):\n        if pattern[i] == pattern[i - 1]:\n            continue\n        if pattern[i] < pattern[i - 1]:\n            flag = 0\n        break\n    index = ord(pattern[0]) - ord('a') + flag\n    for i in range(0, index):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    result += pattern\n    for i in range(index, 26):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    print(result)", "import collections\n\ndef solve(s, p):\n    cnter = collections.Counter(s)\n    alph = 'abcdefghijklmnopqrstuvwxyz'\n    for cp in p:\n        cnter[cp] -= 1\n    lex = ''\n    lex_alt = ''\n    for c in alph:\n        if c not in cnter:\n            continue\n        if c == p[0]:\n            lex += cnter[c] * c\n            lex += p\n            lex_alt += p\n            lex_alt += cnter[c] * c\n        else:\n            lex += cnter[c] * c\n            lex_alt += cnter[c] * c\n    print(min(lex, lex_alt))\nn = int(input())\nfor _ in range(n):\n    solve(input(), input())", "t = int(input())\nfor tc in range(t):\n    s = input()\n    p = input()\n    d = {}\n    for i in range(len(s)):\n        try:\n            d[s[i]] += 1\n        except:\n            d[s[i]] = 1\n    for i in range(len(p)):\n        d[p[i]] -= 1\n    d = {k: v for (k, v) in sorted(d.items(), key=lambda item: item[0])}\n    res = ''\n    res1 = ''\n    trigger = p[0]\n    for (k, v) in d.items():\n        if k == trigger:\n            res1 += p\n            res1 += k * v\n            res += k * v\n            res += p\n        else:\n            res += k * v\n            res1 += k * v\n    print(min(res, res1))", "from collections import defaultdict as d\n\ndef solve():\n    string1 = input()\n    string2 = input()\n    ans = string2\n    mp = d(int)\n    for i in string1:\n        mp[i] += 1\n    for i in ans:\n        mp[i] -= 1\n        if mp[i] == 0:\n            del mp[i]\n    f = ans[0]\n    front = ''\n    end = ''\n    same = ''\n    for i in sorted(mp.keys()):\n        run = mp[i]\n        if i < f:\n            front += i * run\n        elif i == f:\n            same += i * run\n        else:\n            end += i * run\n    return min(front + same + ans + end, front + ans + same + end)\nt = int(input())\nwhile t != 0:\n    res = solve()\n    print(res)\n    t -= 1", "for _ in range(int(input())):\n    n1 = list((char for char in input()))\n    a = input()\n    f = []\n    m = ''\n    l = []\n    n2 = list((char for char in a))\n    for i in a:\n        n1.remove(i)\n    for i in range(len(n1)):\n        if n1[i] < a[0]:\n            f.append(n1[i])\n        elif n1[i] == a[0]:\n            m += n1[i]\n        else:\n            l.append(n1[i])\n    f = ''.join(sorted(f))\n    l = ''.join(sorted(l))\n    print(min(f + m + a + l, f + a + m + l))", "from collections import Counter\nt = int(input())\nwhile t > 0:\n    s = input()\n    x = []\n    y = []\n    p = input()\n    k = list(s)\n    l = list(p)\n    u = p[0]\n    i = 0\n    z = Counter(l)\n    nu = Counter(l)\n    z.pop(u)\n    e = list(z)\n    q = Counter(k)\n    r = []\n    if len(s) == len(p):\n        print(p)\n    else:\n        for o in nu:\n            q[o] -= nu[o]\n        for o in q:\n            r.extend([o] * q[o])\n        n = len(r)\n        while i < n:\n            if r[i] < u:\n                x.append(r[i])\n            elif r[i] == u:\n                if r[i] <= e[0]:\n                    x.append(r[i])\n                else:\n                    y.append(r[i])\n            else:\n                y.append(r[i])\n            i += 1\n        x.sort()\n        y.sort()\n        print(''.join(x) + p + ''.join(y))\n    t -= 1", "from collections import Counter\nt = int(input())\nwhile t > 0:\n    s = input()\n    x = []\n    y = []\n    p = input()\n    k = list(s)\n    l = list(p)\n    u = p[0]\n    i = 0\n    z = Counter(l)\n    nu = Counter(l)\n    z.pop(u)\n    e = list(z)\n    q = Counter(k)\n    r = []\n    if len(s) == len(p):\n        print(p)\n    else:\n        for o in nu:\n            q[o] -= nu[o]\n        for o in q:\n            r.extend([o] * q[o])\n        n = len(r)\n        while i < n:\n            if r[i] < u:\n                x.append(r[i])\n            elif r[i] == u:\n                if r[i] <= e[0]:\n                    x.append(r[i])\n                else:\n                    y.append(r[i])\n            else:\n                y.append(r[i])\n            i += 1\n        x.sort()\n        y.sort()\n        print(''.join(x) + p + ''.join(y))\n    t -= 1", "T = int(input())\nfor i in range(T):\n    s = list(str(input()))\n    p = list(str(input()))\n    s_26 = [0] * 26\n    p_26 = [0] * 26\n    to_add = [0] * 26\n    for i in s:\n        s_26[ord(i) - 97] += 1\n    for i in p:\n        p_26[ord(i) - 97] += 1\n    for i in range(26):\n        to_add[i] = s_26[i] - p_26[i]\n    ans = []\n    for i in range(26):\n        if i <= ord(p[0]) - 97:\n            ans.append(chr(i + 97) * to_add[i])\n    ans += p\n    for i in range(26):\n        if i > ord(p[0]) - 97:\n            ans.append(chr(i + 97) * to_add[i])\n    ans = ''.join((i for i in ans))\n    ans1 = []\n    for i in range(26):\n        if i < ord(p[0]) - 97:\n            ans1.append(chr(i + 97) * to_add[i])\n    ans1 += p\n    for i in range(26):\n        if i >= ord(p[0]) - 97:\n            ans1.append(chr(i + 97) * to_add[i])\n    ans1 = ''.join((i for i in ans1))\n    print(min(ans, ans1))", "for _ in range(int(input())):\n    s = list(str(input()))\n    p = list(str(input()))\n    s_26 = [0] * 26\n    p_26 = [0] * 26\n    to_add = [0] * 26\n    for i in s:\n        s_26[ord(i) - 97] += 1\n    for i in p:\n        p_26[ord(i) - 97] += 1\n    for i in range(26):\n        to_add[i] = s_26[i] - p_26[i]\n    ans = []\n    for i in range(26):\n        if i <= ord(p[0]) - 97:\n            ans.append(chr(i + 97) * to_add[i])\n    ans += p\n    for i in range(26):\n        if i > ord(p[0]) - 97:\n            ans.append(chr(i + 97) * to_add[i])\n    ans = ''.join((i for i in ans))\n    ans1 = []\n    for i in range(26):\n        if i < ord(p[0]) - 97:\n            ans1.append(chr(i + 97) * to_add[i])\n    ans1 += p\n    for i in range(26):\n        if i >= ord(p[0]) - 97:\n            ans1.append(chr(i + 97) * to_add[i])\n    ans1 = ''.join((i for i in ans1))\n    print(min(ans, ans1))", "for _ in range(int(input())):\n    s = list(str(input()))\n    p = list(str(input()))\n    s_26 = [0] * 26\n    p_26 = [0] * 26\n    to_add = [0] * 26\n    for i in s:\n        s_26[ord(i) - 97] += 1\n    for i in p:\n        p_26[ord(i) - 97] += 1\n    for i in range(26):\n        to_add[i] = s_26[i] - p_26[i]\n    ans = []\n    for i in range(26):\n        if i <= ord(p[0]) - 97:\n            ans.append(chr(i + 97) * to_add[i])\n    ans += p\n    for i in range(26):\n        if i > ord(p[0]) - 97:\n            ans.append(chr(i + 97) * to_add[i])\n    ans = ''.join((i for i in ans))\n    ans1 = []\n    for i in range(26):\n        if i < ord(p[0]) - 97:\n            ans1.append(chr(i + 97) * to_add[i])\n    ans1 += p\n    for i in range(26):\n        if i >= ord(p[0]) - 97:\n            ans1.append(chr(i + 97) * to_add[i])\n    ans1 = ''.join((i for i in ans1))\n    print(min(ans, ans1))", "for _ in range(int(input())):\n    s = list(str(input()))\n    p = list(str(input()))\n    s_26 = [0] * 26\n    p_26 = [0] * 26\n    to_add = [0] * 26\n    for i in s:\n        s_26[ord(i) - 97] += 1\n    for i in p:\n        p_26[ord(i) - 97] += 1\n    for i in range(26):\n        to_add[i] = s_26[i] - p_26[i]\n    ans = []\n    for i in range(26):\n        if i <= ord(p[0]) - 97:\n            ans.append(chr(i + 97) * to_add[i])\n    ans += p\n    for i in range(26):\n        if i > ord(p[0]) - 97:\n            ans.append(chr(i + 97) * to_add[i])\n    ans = ''.join((i for i in ans))\n    ans1 = []\n    for i in range(26):\n        if i < ord(p[0]) - 97:\n            ans1.append(chr(i + 97) * to_add[i])\n    ans1 += p\n    for i in range(26):\n        if i >= ord(p[0]) - 97:\n            ans1.append(chr(i + 97) * to_add[i])\n    ans1 = ''.join((i for i in ans1))\n    print(min(ans, ans1))", "from collections import Counter\nfrom collections import OrderedDict\nfor _ in range(int(input())):\n    strng = list(map(str, input()))\n    substr = list(map(str, input()))\n    dct = Counter(strng)\n    dct = OrderedDict(sorted(dct.items()))\n    out = ''\n    flag = 0\n    for i in substr:\n        if i in dct:\n            dct[i] -= 1\n    for ele in substr:\n        if substr[0] != ele:\n            if ord(substr[0]) > ord(ele):\n                flag = 1\n            break\n    for i in dct:\n        if i != substr[0]:\n            while dct[i] > 0:\n                out += i\n                dct[i] -= 1\n        elif flag == 0:\n            while dct[i] > 0:\n                out += i\n                dct[i] -= 1\n            out += ''.join(substr)\n        else:\n            out += ''.join(substr)\n            while dct[i] > 0:\n                out += i\n                dct[i] -= 1\n    print(out)", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = input()\n    s1 = list(s)\n    front = []\n    middle = ''\n    last = []\n    for i in p:\n        if i in s1:\n            s1.remove(i)\n    for i in range(len(s1)):\n        if s1[i] < p[0]:\n            front.append(s1[i])\n        elif s1[i] == p[0]:\n            middle += s1[i]\n        else:\n            last.append(s1[i])\n    front.sort()\n    front = ''.join(map(str, front))\n    last.sort()\n    last = ''.join(map(str, last))\n    print(min(front + middle + p + last, front + p + middle + last))", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = input()\n    s1 = list(s)\n    p1 = list(p)\n    front = []\n    middle = ''\n    last = []\n    for i in p:\n        if i in s1:\n            s1.remove(i)\n    for i in range(len(s1)):\n        if s1[i] < p1[0]:\n            front.append(s1[i])\n        elif s1[i] == p1[0]:\n            middle += s1[i]\n        else:\n            last.append(s1[i])\n    front.sort()\n    front = ''.join(map(str, front))\n    last.sort()\n    last = ''.join(map(str, last))\n    print(min(front + middle + p + last, front + p + middle + last))", "import math\n\ndef L():\n    return list(map(int, input().split()))\n\ndef M():\n    return map(int, input().split())\n\ndef I():\n    return int(input())\n\ndef S():\n    return input()\n\ndef twoD(row):\n    return [L() for i in range(row)]\n\ndef fill(val, size):\n    return [val] * size\n\ndef strToList(s):\n    return [s[i] for i in range(len(s))]\n\ndef printList(a):\n    [print(i, end=' ') for i in a]\n    print()\n\ndef binary(a):\n    return bin(a)[2:]\n\ndef decimal(s):\n    a = 0\n    n = len(s)\n    for i in range(n - 1, -1, -1):\n        a += int(s[i]) * 2 ** (n - 1 - i)\n    return a\nfor _ in range(I()):\n    s = S()\n    p = S()\n    d = {chr(i): 0 for i in range(97, 123)}\n    for i in s:\n        d[i] += 1\n    for i in p:\n        d[i] -= 1\n    ans1 = ''\n    ans2 = ''\n    for (i, j) in d.items():\n        if i < p[0]:\n            ans1 += i * j\n        if i <= p[0]:\n            ans2 += i * j\n    ans1 += p\n    ans2 += p\n    for (i, j) in d.items():\n        if i >= p[0]:\n            ans1 += i * j\n        if i > p[0]:\n            ans2 += i * j\n    print(min(ans1, ans2))", "testcase = int(input())\nfor _ in range(testcase):\n    string = input()\n    pattern = input()\n    result = ''\n    cnt = [0] * 26\n    for c in string:\n        cnt[ord(c) - ord('a')] += 1\n    for c in pattern:\n        cnt[ord(c) - ord('a')] -= 1\n    flag = 1\n    for i in range(1, len(pattern)):\n        if pattern[i] == pattern[i - 1]:\n            continue\n        if pattern[i] < pattern[i - 1]:\n            flag = 0\n        break\n    index = ord(pattern[0]) - ord('a') + flag\n    for i in range(0, index):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    result += pattern\n    for i in range(index, 26):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    print(result)", "testcase = int(input())\nfor _ in range(testcase):\n    string = input()\n    pattern = input()\n    result = ''\n    cnt = [0] * 26\n    for c in string:\n        cnt[ord(c) - ord('a')] += 1\n    for c in pattern:\n        cnt[ord(c) - ord('a')] -= 1\n    flag = 1\n    for i in range(1, len(pattern)):\n        if pattern[i] == pattern[i - 1]:\n            continue\n        if pattern[i] < pattern[i - 1]:\n            flag = 0\n        break\n    index = ord(pattern[0]) - ord('a') + flag\n    for i in range(0, index):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    result += pattern\n    for i in range(index, 26):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    print(result)", "try:\n    t = int(input())\n    for _ in range(t):\n        s1 = input()\n        p1 = input()\n        s = list(s1)\n        p = list(p1)\n        for i in range(len(p)):\n            if p[i] in s:\n                s.remove(p[i])\n        first = ''\n        middle = ''\n        last = ''\n        for i in range(len(s)):\n            if s[i] < p1[0]:\n                first += s[i]\n            elif s[i] == p1[0]:\n                middle += s[i]\n            elif s[i] > p1[0]:\n                last += s[i]\n        first = ''.join(sorted(first))\n        last = ''.join(sorted(last))\n        print(min(first + middle + p1 + last, first + p1 + middle + last))\nexcept:\n    pass", "import collections\nfor _ in range(int(input())):\n    s = str(input())\n    p = str(input())\n    v = collections.Counter(s)\n    for i in p:\n        v[i] -= 1\n    k = p[0]\n    (r, g, f) = ('', '', '')\n    l = [chr(i) for i in range(97, ord(k))]\n    l2 = [chr(i) for i in range(ord(k) + 1, ord('z') + 1)]\n    for i in l:\n        if v[i] > 0:\n            r += i * v[i]\n    for i in l2:\n        if v[i] > 0:\n            g += i * v[i]\n    if v[k] > 0:\n        f = k * v[k]\n    print(min(r + f + p + g, r + p + f + g))", "t = int(input())\nfor j in range(t):\n    s = input()\n    p = input()\n    s1 = list(s)\n    p1 = list(p)\n    for i in p1:\n        if i in s1:\n            s1.remove(i)\n    f = ''\n    l = ''\n    e = ''\n    for k in s1:\n        if k < p[0]:\n            f += k\n        elif k == p[0]:\n            e += k\n        else:\n            l += k\n    f = ''.join(sorted(f))\n    l = ''.join(sorted(l))\n    ans = min(f + e + p + l, f + p + e + l)\n    print(ans)", "from collections import defaultdict as dd\nfor _ in range(int(input())):\n    s = input()\n    p = input()\n    d1 = dd(int)\n    d2 = dd(int)\n    for c in p:\n        d1[c] += 1\n    for c in s:\n        if d1[c] > 0:\n            d1[c] -= 1\n        else:\n            d2[c] += 1\n    ans = [(p, p)]\n    for k in d2:\n        ans.append((k * d2[k], k * len(p)))\n    ans.sort(key=lambda x: x[1])\n    (ans, _) = list(zip(*ans))\n    print(''.join(ans))", "from collections import defaultdict as dd\nfor _ in range(int(input())):\n    s = input()\n    p = input()\n    d1 = dd(int)\n    d2 = dd(int)\n    for c in p:\n        d1[c] += 1\n    for c in s:\n        if d1[c] > 0:\n            d1[c] -= 1\n        else:\n            d2[c] += 1\n    ans = [(p, p)]\n    for k in d2:\n        ans.append((k * d2[k], k * len(p)))\n    ans.sort(key=lambda x: x[1])\n    (ans, _) = list(zip(*ans))\n    print(''.join(ans))", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    c = {}\n    d = {}\n    for i in range(97, 124):\n        c[chr(i)] = 0\n        d[chr(i)] = 0\n    l = sorted(list(s))\n    m = sorted(list(p))\n    for i in l:\n        c[i] += 1\n    for i in m:\n        d[i] += 1\n    for i in d:\n        c[i] -= d[i]\n    ans1 = ''\n    ans2 = ''\n    for i in c:\n        if i < p[0]:\n            ans1 += i * c[i]\n    ans1 += p\n    for i in c:\n        if i >= p[0]:\n            ans1 += i * c[i]\n    for i in c:\n        if i <= p[0]:\n            ans2 += i * c[i]\n    ans2 += p\n    for i in c:\n        if i > p[0]:\n            ans2 += i * c[i]\n    print(min(ans1, ans2))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    p = input()\n    g = list(s)\n    left = []\n    right = []\n    mid = []\n    for i in p:\n        g.remove(i)\n    s = ''.join(g)\n    for i in s:\n        if i > p[0]:\n            right.append(i)\n        elif i == p[0]:\n            mid.append(i)\n        else:\n            left.append(i)\n    left.sort()\n    right.sort()\n    ans = min(''.join(left) + p + ''.join(mid) + ''.join(right), ''.join(left) + ''.join(mid) + p + ''.join(right))\n    print(ans)", "testcase = int(input())\nfor _ in range(testcase):\n    string = input()\n    pattern = input()\n    result = ''\n    cnt = [0] * 26\n    for c in string:\n        cnt[ord(c) - ord('a')] += 1\n    for c in pattern:\n        cnt[ord(c) - ord('a')] -= 1\n    flag = 1\n    for i in range(1, len(pattern)):\n        if pattern[i] == pattern[i - 1]:\n            continue\n        if pattern[i] < pattern[i - 1]:\n            flag = 0\n        break\n    index = ord(pattern[0]) - ord('a') + flag\n    for i in range(0, index):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    result += pattern\n    for i in range(index, 26):\n        while cnt[i] > 0:\n            result += chr(i + ord('a'))\n            cnt[i] -= 1\n    print(result)", "for _ in range(int(input())):\n    a = list(input())\n    b = list(input())\n    for i in b:\n        a.remove(i)\n    a.sort()\n    left = []\n    right = []\n    equal = []\n    k = len(a)\n    l = 0\n    for i in range(1, len(b)):\n        if ord(b[i]) > ord(b[0]):\n            l = 0\n            break\n        if ord(b[i]) < ord(b[0]):\n            l = 1\n            break\n    for i in range(len(a)):\n        if ord(a[i]) > ord(b[0]):\n            k = i\n            break\n        if ord(a[i]) == ord(b[0]):\n            equal.append(b[0])\n        elif ord(a[i]) < ord(b[0]):\n            left.append(a[i])\n    right = a[k:]\n    if l:\n        print(''.join(left) + ''.join(b) + ''.join(equal) + ''.join(right))\n    else:\n        print(''.join(left) + ''.join(equal) + ''.join(b) + ''.join(right))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    p = input()\n    g = list(s)\n    left = []\n    right = []\n    mid = []\n    for i in p:\n        g.remove(i)\n    s = ''.join(g)\n    for i in s:\n        if i > p[0]:\n            right.append(i)\n        elif i == p[0]:\n            mid.append(i)\n        else:\n            left.append(i)\n    left.sort()\n    right.sort()\n    ans = min(''.join(left) + p + ''.join(mid) + ''.join(right), ''.join(left) + ''.join(mid) + p + ''.join(right))\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    p = input()\n    u = [p[0]]\n    for e in p[1:]:\n        if e not in u:\n            u.append(e)\n    s = s + p[0]\n    s = ''.join(sorted(s))\n    for e in p:\n        s = s.replace(e, '', 1)\n    pos = 0\n    if u[0] < u[1]:\n        pos = s.rfind(p[0])\n    else:\n        pos = s.find(p[0])\n    print(s[:pos] + p + s[pos + 1:])", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    p = input()\n    s1 = sorted(s)\n    s1 = list(s1)\n    ans1 = ''\n    ans2 = ''\n    cc = Counter(s)\n    pc = Counter(p)\n    c = {}\n    for i in range(97, 124):\n        c[chr(i)] = 0\n    for ele in cc:\n        c[ele] += cc[ele]\n    for ele in pc:\n        c[ele] -= pc[ele]\n    for i in c:\n        if i < p[0] and c[i] > 0:\n            ans1 += i * c[i]\n    ans1 += p\n    for i in c:\n        if i >= p[0] and c[i] > 0:\n            ans1 += i * c[i]\n    for i in c:\n        if i <= p[0] and c[i] > 0:\n            ans2 += i * c[i]\n    ans2 += p\n    for i in c:\n        if i > p[0] and c[i] > 0:\n            ans2 += i * c[i]\n    print(min(ans1, ans2))", "for _ in range(int(input())):\n    s = input()\n    a = input()\n    g = list(a)\n    b = []\n    l = []\n    r = []\n    for i in s:\n        if i in g:\n            g.remove(i)\n        elif i > a[0]:\n            r.append(i)\n        elif i == a[0]:\n            b.append(i)\n        else:\n            l.append(i)\n    l.sort()\n    r.sort()\n    print(min(''.join(l) + a + ''.join(b) + ''.join(r), ''.join(l) + ''.join(b) + a + ''.join(r)))", "for _ in range(int(input())):\n    s = input()\n    a = input()\n    g = list(a)\n    b = []\n    l = []\n    r = []\n    for i in s:\n        if i in g:\n            g.remove(i)\n        elif i > a[0]:\n            r.append(i)\n        elif i == a[0]:\n            b.append(i)\n        else:\n            l.append(i)\n    l.sort()\n    r.sort()\n    print(min(''.join(l) + a + ''.join(b) + ''.join(r), ''.join(l) + ''.join(b) + a + ''.join(r)))", "for i in range(int(input())):\n    S = input()\n    P = input()\n    s = list(S)\n    p = list(P)\n    for i in p:\n        s.remove(i)\n    s.sort()\n    if p[0] not in s:\n        r = s[:]\n        r.append(p[0])\n        r.sort()\n        n = r.index(p[0])\n        u = s[:n] + p\n        s = s[n:]\n        print(*u + s, sep='')\n    else:\n        r = s[:]\n        r.append(p[0])\n        y = s.count(p[0])\n        r.sort()\n        n = r.index(p[0])\n        u = ''.join(s[:n + y]) + ''.join(p) + ''.join(s[y + n:])\n        y = s.index(p[0])\n        q = ''.join(s[:y]) + ''.join(p) + ''.join(s[y:])\n        print(min(u, q))", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    n = len(a)\n    m = len(b)\n    i = 0\n    flag = True\n    while i + 1 < m and b[i + 1] == b[i]:\n        i += 1\n    if i < m - 1 and ord(b[i]) < ord(b[i + 1]):\n        flag = False\n    c = []\n    for i in range(0, 26):\n        c.append(0)\n    for i in range(0, n):\n        c[ord(a[i]) - ord('a')] += 1\n    for i in range(0, m):\n        c[ord(b[i]) - ord('a')] -= 1\n    ans = ''\n    for i in range(0, 26):\n        if i + ord('a') != ord(b[0]):\n            ans += chr(i + ord('a')) * c[i]\n        elif flag:\n            ans += b\n            ans += chr(i + ord('a')) * c[i]\n        else:\n            ans += chr(i + ord('a')) * c[i]\n            ans += b\n    print(ans)", "from collections import Counter\nfor i in range(int(input())):\n    s1 = list(map(str, input()))\n    s2 = input()\n    p = list(s2)\n    A = ''\n    B = ''\n    C = ''\n    s1 = list((Counter(s1) - Counter(p)).elements())\n    s1.sort()\n    for i in s1:\n        if i < s2[0]:\n            A += i\n        elif i == p[0]:\n            B += i\n        else:\n            C += i\n    st1 = B + s2\n    st2 = s2 + B\n    if st2 < st1:\n        B = st2\n    else:\n        B = st1\n    print(A + B + C)", "t = int(input())\nfor _ in range(t):\n    string = list(input())\n    pattern = list(input())\n    for i in pattern:\n        string.remove(i)\n    string.sort()\n    new_st = ''.join(string)\n    pattern = ''.join(pattern)\n    p = len(pattern)\n    l = len(new_st)\n    i = 0\n    while i < l and new_st[i] < pattern[0]:\n        i += 1\n    new_st1 = new_st[0:i] + pattern + new_st[i:]\n    i = 0\n    while i < l and new_st[i] <= pattern[0]:\n        i += 1\n    new_st2 = new_st[0:i] + pattern + new_st[i:]\n    print(min(new_st1, new_st2))", "from collections import defaultdict as dd\n\ndef solve_func(a, b):\n    alphabets_dict = dd(int)\n    for loop_var1 in a:\n        alphabets_dict[loop_var1] += 1\n    for loop_var1 in b:\n        alphabets_dict[loop_var1] -= 1\n    alphabets = list(alphabets_dict.keys())\n    var1 = var2 = ''\n    alphabets.sort()\n    for loop_var1 in alphabets:\n        if loop_var1 == b[0]:\n            var1 = var1 + loop_var1 * alphabets_dict[loop_var1]\n        elif loop_var1 < b[0]:\n            var1 = var1 + loop_var1 * alphabets_dict[loop_var1]\n            var2 = var2 + loop_var1 * alphabets_dict[loop_var1]\n    var1 += b\n    var2 += b\n    for loop_var1 in alphabets:\n        if loop_var1 == b[0]:\n            var2 = var2 + loop_var1 * alphabets_dict[loop_var1]\n        elif loop_var1 > b[0]:\n            var1 = var1 + loop_var1 * alphabets_dict[loop_var1]\n            var2 = var2 + loop_var1 * alphabets_dict[loop_var1]\n    if var1 > var2:\n        return var2\n    else:\n        return var1\nfor i in range(int(input())):\n    a = input()\n    b = input()\n    print(solve_func(a, b))", "from collections import Counter\nfor i in range(int(input())):\n    s1 = list(map(str, input()))\n    s2 = input()\n    p = list(s2)\n    A = ''\n    B = ''\n    C = ''\n    s1 = list((Counter(s1) - Counter(p)).elements())\n    s1.sort()\n    for i in s1:\n        if i < s2[0]:\n            A += i\n        elif i == p[0]:\n            B += i\n        else:\n            C += i\n    st1 = B + s2\n    st2 = s2 + B\n    if st2 < st1:\n        B = st2\n    else:\n        B = st1\n    print(A + B + C)", "from collections import Counter\ntry:\n    for i in range(int(input())):\n        s1 = list(map(str, input()))\n        s2 = input()\n        p = list(s2)\n        A = ''\n        B = ''\n        C = ''\n        s1 = list((Counter(s1) - Counter(p)).elements())\n        s1.sort()\n        for i in s1:\n            if i < s2[0]:\n                A += i\n            elif i == p[0]:\n                B += i\n            else:\n                C += i\n        st1 = B + s2\n        st2 = s2 + B\n        if st2 < st1:\n            B = st2\n        else:\n            B = st1\n        print(A + B + C)\nexcept:\n    pass", "t = int(input())\nwhile t != 0:\n    s = input()\n    p = input()\n    x = len(s)\n    y = len(p)\n    a = [0] * 26\n    b = [0] * 26\n    for i in range(x):\n        pointer = ord(s[i]) - 97\n        a[pointer] += 1\n    for i in range(y):\n        pointer = ord(p[i]) - 97\n        b[pointer] += 1\n    for i in range(26):\n        if i + 97 == ord(p[0]):\n            x = p[0]\n            c_x = a[i] - b[i]\n            temp_p1 = p\n            for s in range(c_x):\n                temp_p1 += x\n            temp_p2 = ''\n            for s in range(c_x):\n                temp_p2 += x\n            temp_p2 += p\n            if temp_p2 > temp_p1:\n                check = 1\n            else:\n                check = 0\n            if check == 1:\n                for j in range(26):\n                    a[j] = a[j] - b[j]\n                    b[j] = 0\n                print(p, end='')\n                times = a[i] - b[i]\n                while times:\n                    print(chr(i + 97), end='')\n                    times -= 1\n            else:\n                times = a[i] - b[i]\n                while times:\n                    print(chr(i + 97), end='')\n                    times -= 1\n                for j in range(26):\n                    a[j] = a[j] - b[j]\n                    b[j] = 0\n                print(p, end='')\n        else:\n            times = a[i] - b[i]\n            while times:\n                print(chr(i + 97), end='')\n                times -= 1\n    t -= 1\n    print(end='\\n')", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    n = len(a)\n    m = len(b)\n    i = 0\n    flag = True\n    while i + 1 < m and b[i + 1] == b[i]:\n        i += 1\n    if i < m - 1 and ord(b[i]) < ord(b[i + 1]):\n        flag = False\n    c = []\n    for i in range(0, 26):\n        c.append(0)\n    for i in range(0, n):\n        c[ord(a[i]) - ord('a')] += 1\n    for i in range(0, m):\n        c[ord(b[i]) - ord('a')] -= 1\n    ans = ''\n    for i in range(0, 26):\n        if i + ord('a') != ord(b[0]):\n            ans += chr(i + ord('a')) * c[i]\n        elif flag:\n            ans += b\n            ans += chr(i + ord('a')) * c[i]\n        else:\n            ans += chr(i + ord('a')) * c[i]\n            ans += b\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    p = list(input())\n    freq = {}\n    for c in s:\n        freq[c] = freq.get(c, 0) + 1\n    for c in p:\n        freq[c] -= 1\n    flag = 0\n    for i in range(len(p) - 1):\n        if p[i] == p[i + 1]:\n            continue\n        if p[i] > p[i + 1]:\n            flag = 1\n        break\n    res = []\n    for (key, value) in sorted(freq.items(), key=lambda x: x[0]):\n        if key < p[0] or key > p[0]:\n            res.append(key * value)\n        elif key == p[0]:\n            if flag == 0:\n                res.append(key * value)\n                res.append(''.join(p))\n            else:\n                res.append(''.join(p))\n                res.append(key * value)\n    print(''.join(res))", "import math\nt = int(input())\nwhile t > 0:\n    arr = {}\n    h = sorted(input())\n    p = input()\n    for i in h:\n        if i in arr.keys():\n            arr[i] += 1\n        else:\n            arr[i] = 1\n    for i in p:\n        if i in arr.keys():\n            arr[i] -= 1\n    str = ''\n    flag = 0\n    for i in range(len(p) - 1):\n        if p[i] < p[i + 1]:\n            flag = 0\n            break\n        if p[i] > p[i + 1]:\n            flag = 1\n            break\n    for i in arr.keys():\n        if i == p[0]:\n            if flag:\n                str += p\n                str += i * arr[i]\n            else:\n                str += i * arr[i]\n                str += p\n            continue\n        str += i * arr[i]\n    print(str)\n    t = t - 1", "from copy import deepcopy\nfor _ in range(int(input())):\n    s = list(input())\n    p = list(input())\n    for i in p:\n        s.remove(i)\n    s.sort()\n    ne = deepcopy(s)\n    ne.append(p[0])\n    ne = sorted(ne, reverse=True)\n    if p[0] not in s:\n        print(''.join(s[0:len(ne) - ne.index(p[0]) - 1]) + ''.join(p) + ''.join(s[len(ne) - ne.index(p[0]) - 1:]))\n    else:\n        air = ''.join(s[0:s.index(p[0])]) + ''.join(p) + ''.join(s[s.index(p[0]):])\n        print(min(air, ''.join(s[0:len(ne) - ne.index(p[0]) - 1]) + ''.join(p) + ''.join(s[len(ne) - ne.index(p[0]) - 1:])))"]