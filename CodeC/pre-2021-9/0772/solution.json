["def is_solved(r: int, k: int, m: int) -> int:\n    n = len(r)\n    for i in range(n - k + 1):\n        mx = max(r[i:i + k])\n        mc = sum([1 if ri == mx else 0 for ri in r[i:i + k]])\n        if mc >= m:\n            return None\n    return 0\n\ndef solve(r: list, n: int, k: int, m: int) -> int:\n    if n == 0:\n        return is_solved(r, k, m)\n    yr = r.copy()\n    yr[n - 1] += 1\n    yes = solve(yr, n - 1, k, m)\n    no = solve(r, n - 1, k, m)\n    if yes is None:\n        return no\n    yes += 1\n    return yes if no is None else min(yes, no)\nt = int(input().strip())\nfor _ in range(t):\n    (n, k, m) = map(int, input().strip().split())\n    r = list(map(int, input().strip().split()))\n    res = None if m == 1 else solve(r, n, k, m)\n    print(-1 if res is None else res)", "def is_solved(r: int, k: int, m: int) -> int:\n    n = len(r)\n    for i in range(n - k + 1):\n        mx = max(r[i:i + k])\n        mc = sum([1 if ri == mx else 0 for ri in r[i:i + k]])\n        if mc >= m:\n            return None\n    return 0\n\ndef solve(r: list, n: int, k: int, m: int) -> int:\n    if n == 0:\n        return is_solved(r, k, m)\n    yr = r.copy()\n    yr[n - 1] += 1\n    yes = solve(yr, n - 1, k, m)\n    no = solve(r, n - 1, k, m)\n    if yes is None:\n        return no\n    yes += 1\n    return yes if no is None else min(yes, no)\nt = int(input().strip())\nfor _ in range(t):\n    (n, k, m) = map(int, input().strip().split())\n    r = list(map(int, input().strip().split()))\n    res = None if m == 1 else solve(r, n, k, m)\n    print(-1 if res is None else res)", "def count_m(r: list, i: int, mx: int) -> int:\n    mpos = []\n    for (j, ri) in enumerate(r):\n        if ri == mx:\n            mpos.append(i + j)\n    return (len(mpos), mpos)\n\ndef is_solved(r: int, k: int, m: int) -> int:\n    n = len(r)\n    for i in range(n - k + 1):\n        mx = max(r[i:i + k])\n        mc = sum([1 if ri == mx else 0 for ri in r[i:i + k]])\n        if mc >= m:\n            return None\n    return 0\n\ndef solve(r: list, n: int, k: int, m: int) -> int:\n    if n == 0:\n        return is_solved(r, k, m)\n    yr = r.copy()\n    yr[n - 1] += 1\n    yes = solve(yr, n - 1, k, m)\n    no = solve(r, n - 1, k, m)\n    if yes is None:\n        return no\n    yes += 1\n    return yes if no is None else min(yes, no)\nt = int(input().strip())\nfor _ in range(t):\n    (n, k, m) = map(int, input().strip().split())\n    r = list(map(int, input().strip().split()))\n    res = solve(r, n, k, m)\n    print(-1 if res is None else res)"]