["for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    o = s.count('1')\n    z = n - o\n    k = n // k\n    if o % k or z % k:\n        print('IMPOSSIBLE')\n    else:\n        word = '1' * (o // k) + '0' * (z // k)\n        rev = word[::-1]\n        ans = []\n        for i in range(k):\n            if i & 1:\n                ans.append(word)\n            else:\n                ans.append(rev)\n        print(''.join(ans))", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    S = input()\n    n0 = 0\n    n1 = 0\n    for i in range(N):\n        if S[i] == '1':\n            n1 += 1\n        else:\n            n0 += 1\n    if n0 % (N // K) == 0 and n1 % (N // K) == 0:\n        A = ['0'] * (n0 // (N // K)) + ['1'] * (n1 // (N // K))\n        B = ['1'] * (n1 // (N // K)) + ['0'] * (n0 // (N // K))\n        ans = []\n        for i in range(N // K):\n            if i % 2:\n                ans += B\n            else:\n                ans += A\n        print(''.join(ans))\n    else:\n        print('IMPOSSIBLE')", "for _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    S = input()\n    n0 = 0\n    n1 = 0\n    for i in range(N):\n        if S[i] == '1':\n            n1 += 1\n        else:\n            n0 += 1\n    if n0 % (N // K) == 0 and n1 % (N // K) == 0:\n        A = ['0'] * (n0 // (N // K)) + ['1'] * (n1 // (N // K))\n        B = ['1'] * (n1 // (N // K)) + ['0'] * (n0 // (N // K))\n        ans = []\n        for i in range(N // K):\n            if i % 2:\n                ans += B\n            else:\n                ans += A\n        print(''.join(ans))\n    else:\n        print('IMPOSSIBLE')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    x = s.count('1')\n    y = s.count('0')\n    f = n // k\n    if y % f != 0:\n        print('IMPOSSIBLE')\n        continue\n    z = y // f\n    ans1 = z * '0' + (k - z) * '1'\n    ans = ''\n    for j in range(f):\n        if j % 2 == 0:\n            ans += ans1\n            continue\n        ans += ans1[::-1]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    x = s.count('1')\n    y = s.count('0')\n    f = n // k\n    if y % f != 0:\n        print('IMPOSSIBLE')\n        continue\n    z = y // f\n    ans1 = z * '0' + (k - z) * '1'\n    ans = ''\n    for j in range(f):\n        if j % 2 == 0:\n            ans += ans1\n            continue\n        ans += ans1[::-1]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    x = s.count('1')\n    y = s.count('0')\n    f = n // k\n    if y % f != 0:\n        print('IMPOSSIBLE')\n        continue\n    z = y // f\n    ans1 = z * '0' + (k - z) * '1'\n    ans = ''\n    for j in range(f):\n        if j % 2 == 0:\n            ans += ans1\n            continue\n        ans += ans1[::-1]\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    x = s.count('1')\n    y = s.count('0')\n    f = n // k\n    if y % f != 0:\n        print('IMPOSSIBLE')\n        continue\n    z = y // f\n    ans1 = z * '0' + (k - z) * '1'\n    ans = ''\n    for i in range(f):\n        if i % 2 == 0:\n            ans += ans1\n            continue\n        ans += ans1[::-1]\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split(' '))\n    U = input()\n    S = N // K\n    ans = ''\n    Z = U.count('0')\n    O = U.count('1')\n    ZCount = Z // S\n    OCount = O // S\n    if Z % S != 0 or O % S != 0:\n        print('IMPOSSIBLE')\n    elif S != N / K:\n        print(''.join(map(str, sorted(U))))\n    else:\n        for x in range(0, S):\n            if x % 2 == 0:\n                for y in range(0, ZCount):\n                    ans += '0'\n                for j in range(0, OCount):\n                    ans += '1'\n            else:\n                for p in range(0, OCount):\n                    ans += '1'\n                for o in range(0, ZCount):\n                    ans += '0'\n        print(ans)", "i = 0\nT = int(input())\nwhile i < T:\n    (N, K) = map(int, input().split(' '))\n    U = input()\n    S = N // K\n    ans = ''\n    Z = U.count('0')\n    O = U.count('1')\n    ZCount = Z // S\n    OCount = O // S\n    if Z % S != 0 or O % S != 0:\n        print('IMPOSSIBLE')\n    elif S != N / K:\n        print(''.join(map(str, sorted(U))))\n    else:\n        for x in range(0, S):\n            if x % 2 == 0:\n                for y in range(0, ZCount):\n                    ans += '0'\n                for j in range(0, OCount):\n                    ans += '1'\n            else:\n                for p in range(0, OCount):\n                    ans += '1'\n                for o in range(0, ZCount):\n                    ans += '0'\n        print(ans)\n    i += 1", "import sys, math, itertools, random, bisect\nfrom collections import defaultdict\nINF = 10 ** 18\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k) = get_ints()\n    s = input()\n    zero = s.count('0')\n    one = n - zero\n    times = n // k\n    if zero % times != 0 or one % times != 0:\n        print('IMPOSSIBLE')\n        continue\n    pat_0 = zero // times\n    pat_1 = one // times\n    ans = '0' * pat_0 + '1' * pat_1\n    pat = ans\n    ans += ans[::-1]\n    ans *= times // 2\n    if times & 1:\n        ans += pat\n    print(ans)", "import sys\nimport math\n\ndef main(arr, K, N):\n    freq = {}\n    freq[0] = 0\n    freq[1] = 0\n    for e in arr:\n        b = int(e)\n        freq[b] += 1\n    ans = None\n    for i in range(K + 1):\n        if i * N / K == freq[0]:\n            if (K - i) * (N / K) == freq[1]:\n                ans = i\n    if ans == None:\n        return 'IMPOSSIBLE'\n    s = ['0' for i in range(ans)] + ['1' for i in range(K - ans)]\n    ans = []\n    for j in range(int(N / K)):\n        ans += s\n        s.reverse()\n    return ''.join(ans)\nt = int(input())\nfor i in range(t):\n    (N, K) = list(map(int, input().split()))\n    arr = input()\n    print(main(arr, K, N))", "t = int(input())\nfor _ in range(t):\n    (N, K) = map(int, input().split())\n    s = input()\n    no0 = s.count('0')\n    no1 = s.count('1')\n    seg = N // K\n    count0 = no0 // seg\n    count1 = no1 // seg\n    if no0 % seg == 0 and no1 % seg == 0:\n        for i in range(seg):\n            if i % 2 == 0:\n                for j in range(count0):\n                    print(0, end='')\n                for j in range(count1):\n                    print(1, end='')\n            else:\n                for j in range(count1):\n                    print(1, end='')\n                for j in range(count0):\n                    print(0, end='')\n        print()\n    else:\n        print('IMPOSSIBLE')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    ones = 0\n    zeros = 0\n    for i in s:\n        if i == '1':\n            ones += 1\n        else:\n            zeros += 1\n    folds = n // k\n    if zeros % folds == 0 and ones % folds == 0:\n        ans = ''\n        for i in range(folds):\n            if i % 2 == 0:\n                for j in range(zeros // folds):\n                    ans += '0'\n                for j in range(ones // folds):\n                    ans += '1'\n            else:\n                for j in range(ones // folds):\n                    ans += '1'\n                for j in range(zeros // folds):\n                    ans += '0'\n        print(ans)\n    else:\n        print('IMPOSSIBLE')", "def count():\n    (c1, c2) = (0, 0)\n    for ch in s:\n        if ch == '1':\n            c1 += 1\n        else:\n            c2 += 1\n    return (c1, c2)\n\ndef answer():\n    (no, nz) = count()\n    div = n // k\n    if no % div == 0 and nz % div == 0:\n        st = ''\n        for i in range(div // 2):\n            st += '0' * (nz // div) + '1' * (no // div)\n            st += '1' * (no // div) + '0' * (nz // div)\n        if div & 1:\n            st += '0' * (nz // div) + '1' * (no // div)\n        return st\n    return 'IMPOSSIBLE'\nfor T in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(answer())", "def count():\n    (c1, c2) = (0, 0)\n    for ch in s:\n        if ch == '1':\n            c1 += 1\n        else:\n            c2 += 1\n    return (c1, c2)\n\ndef answer():\n    (no, nz) = count()\n    div = n // k\n    if no % div == 0 and nz % div == 0:\n        st = ''\n        for i in range(div // 2):\n            st += '0' * (nz // div) + '1' * (no // div)\n            st += '1' * (no // div) + '0' * (nz // div)\n        if div & 1:\n            st += '0' * (nz // div) + '1' * (no // div)\n        return st\n    return 'IMPOSSIBLE'\nfor T in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(answer())", "def count():\n    (c1, c2) = (0, 0)\n    for ch in s:\n        if ch == '1':\n            c1 += 1\n        else:\n            c2 += 1\n    return (c1, c2)\n\ndef answer():\n    (no, nz) = count()\n    div = n // k\n    if no % div == 0 and nz % div == 0:\n        st = ''\n        for i in range(div // 2):\n            st += '0' * (nz // div) + '1' * (no // div)\n            st += '1' * (no // div) + '0' * (nz // div)\n        if div & 1:\n            st += '0' * (nz // div) + '1' * (no // div)\n        if len(st) == n:\n            return st\n    return 'IMPOSSIBLE'\nfor T in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(answer())", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = [0, 0]\n    for i in s:\n        if i == '0':\n            l[0] += 1\n        else:\n            l[1] += 1\n    a = n // k\n    o = l[0] // a\n    e = l[1] // a\n    if l[0] % a == 0 and l[1] % a == 0:\n        temp = '0' * o + '1' * e\n        ans = ''\n        for i in range(a):\n            if i % 2 == 0:\n                ans = ans + temp\n            else:\n                ans = ans + temp[::-1]\n        print(ans)\n    else:\n        print('IMPOSSIBLE')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = [0, 0]\n    for i in s:\n        if i == '0':\n            l[0] += 1\n        else:\n            l[1] += 1\n    a = n // k\n    o = l[0] // a\n    e = l[1] // a\n    if l[0] % a == 0 and l[1] % a == 0:\n        temp = '0' * o + '1' * e\n        ans = ''\n        for i in range(a):\n            if i % 2 == 0:\n                ans = ans + temp\n            else:\n                ans = ans + temp[::-1]\n        print(ans)\n    else:\n        print('IMPOSSIBLE')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    string = input()\n    list1 = [0, 0]\n    for i in range(n):\n        if string[i] == '0':\n            list1[0] += 1\n        else:\n            list1[1] += 1\n    pass1 = n // k\n    if list1[0] % pass1 != 0 and list1[1] % pass1 != 0:\n        print('IMPOSSIBLE')\n    elif len(set(list(string))) == 1:\n        print(string)\n    else:\n        string1 = ''\n        string1 += '0' * (list1[0] * k // sum(list1))\n        string1 += '1' * (list1[1] * k // sum(list1))\n        output = ''\n        revs = string1[::-1]\n        counter = 0\n        while len(output) != n:\n            if counter % 2 == 0:\n                output += string1\n            else:\n                output += revs\n            counter += 1\n        print(output)", "t = int(input())\nfor p in range(t):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    s = input()\n    z = s.count('0')\n    o = s.count('1')\n    ns = int(n / k)\n    nz = int(z / ns)\n    no = int(o / ns)\n    if z % ns == 0 and o % ns == 0:\n        temp = '0' * nz + '1' * no\n        ans = ''\n        for i in range(ns):\n            if i % 2 == 0:\n                ans = ans + temp\n            else:\n                ans = ans + temp[::-1]\n        print(ans)\n    else:\n        print('IMPOSSIBLE')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = [0] * 2\n    for i in s:\n        if i == '0':\n            a[0] += 1\n        else:\n            a[1] += 1\n    r = n // k\n    if n < k or a[0] % r != 0 or a[1] % r != 0:\n        print('IMPOSSIBLE')\n    else:\n        (k0, k1) = (a[0] // r, a[1] // r)\n        kstring = ['0'] * k0 + ['1'] * k1\n        s1 = []\n        for i in range(r):\n            s1 += kstring\n            kstring.reverse()\n        print(''.join(s1))", "t = int(input())\nfor _ in range(t):\n    [n, k] = [int(i) for i in input().split()]\n    s = str(input())\n    (x, y) = (0, 0)\n    for i in range(n):\n        if s[i] == '0':\n            x += 1\n        else:\n            y += 1\n    q = n // k\n    if x % q != 0 or y % q != 0:\n        print('IMPOSSIBLE')\n    else:\n        a = '0' * (x // q) + '1' * (y // q)\n        b = '1' * (y // q) + '0' * (x // q)\n        print((a + b) * (q // 2) + a * (q % 2))", "test = int(input())\nfor _ in range(test):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = [0, 0]\n    for i in s:\n        l[int(i)] += 1\n    j = n // k\n    if l[0] % j == 0 and l[1] % j == 0:\n        (o, p) = (l[0] // j, l[1] // j)\n        s = ''\n        e = '0' * o + '1' * p\n        f = e[::-1]\n        for i in range(j):\n            if i % 2 == 0:\n                s = s + e\n            else:\n                s = s + f\n        print(s)\n    else:\n        print('IMPOSSIBLE')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = [0, 0]\n    for i in s:\n        l[int(i)] += 1\n    j = n // k\n    if l[0] % j == 0 and l[1] % j == 0:\n        (o, p) = (l[0] // j, l[1] // j)\n        s = ''\n        e = '0' * o + '1' * p\n        f = e[::-1]\n        for i in range(j):\n            if i % 2 == 0:\n                s = s + e\n            else:\n                s = s + f\n        print(s)\n    else:\n        print('IMPOSSIBLE')", "def countChars(s):\n    counts = {}\n    for c in s:\n        counts[c] = counts.setdefault(c, 0) + 1\n    return counts\n\ndef isPoss(counts, K, N):\n    for v in counts.values():\n        if v % (N // K):\n            return False\n    return True\n\ndef arrange(counts, K, N):\n    baseS = ''\n    for k in sorted(counts.keys(), reverse=True):\n        v = counts[k]\n        baseS += k * (K * v // N)\n    out = ''\n    for k in range(N // K):\n        if k % 2:\n            out += baseS\n        else:\n            out += baseS[::-1]\n    return out\nT = int(input())\nfor tc in range(T):\n    (N, K) = [int(x) for x in input().split(' ')]\n    S = input()\n    c = countChars(S)\n    if not isPoss(c, K, N):\n        print('IMPOSSIBLE')\n    else:\n        print(arrange(c, K, N))", "i = 0\nT = int(input())\nwhile i < T:\n    (N, K) = map(int, input().split(' '))\n    U = input()\n    S = N // K\n    ans = ''\n    Z = U.count('0')\n    O = U.count('1')\n    ZCount = Z // S\n    OCount = O // S\n    if Z % S != 0 or O % S != 0:\n        print('IMPOSSIBLE')\n    else:\n        for x in range(0, N // K):\n            if x % 2 == 0:\n                for y in range(0, ZCount):\n                    ans += '0'\n                for j in range(0, OCount):\n                    ans += '1'\n            else:\n                for j in range(0, OCount):\n                    ans += '1'\n                for y in range(0, ZCount):\n                    ans += '0'\n        print(ans)\n    i += 1", "i = 0\nT = int(input())\nwhile i < T:\n    (N, K) = map(int, input().split(' '))\n    U = input()\n    S = N // K\n    ans = ''\n    Z = U.count('0')\n    O = U.count('1')\n    ZCount = Z // S\n    OCount = O // S\n    if Z % S != 0 or O % S != 0:\n        print('IMPOSSIBLE')\n    else:\n        for x in range(0, S):\n            if x % 2 == 0:\n                for y in range(0, ZCount):\n                    ans += '0'\n                for j in range(0, OCount):\n                    ans += '1'\n            else:\n                for j in range(0, OCount):\n                    ans += '1'\n                for y in range(0, ZCount):\n                    ans += '0'\n        print(ans)\n    i += 1", "i = 0\nT = int(input())\nwhile i < T:\n    (N, K) = map(int, input().split(' '))\n    U = input()\n    S = N // K\n    ans = ''\n    Z = U.count('0')\n    O = U.count('1')\n    ZCount = Z // S\n    OCount = O // S\n    if Z % S != 0 or O % S != 0:\n        print('IMPOSSIBLE')\n    else:\n        for x in range(0, S):\n            if x % 2 == 0:\n                for y in range(0, ZCount):\n                    ans += '0'\n                for j in range(0, OCount):\n                    ans += '1'\n            else:\n                for p in range(0, OCount):\n                    ans += '1'\n                for o in range(0, ZCount):\n                    ans += '0'\n        print(ans)\n    i += 1", "i = 0\nT = int(input())\nwhile i < T:\n    (N, K) = map(int, input().split(' '))\n    U = input()\n    S = N // K\n    ans = ''\n    Z = U.count('0')\n    O = U.count('1')\n    ZCount = Z // S\n    OCount = O // S\n    if Z % S != 0 or O % S != 0:\n        print('IMPOSSIBLE')\n    elif S != N / K:\n        print(''.join(map(str, sorted(U))))\n    else:\n        for x in range(0, S):\n            if x % 2 == 0:\n                for y in range(0, ZCount):\n                    ans += '0'\n                for j in range(0, OCount):\n                    ans += '1'\n            else:\n                for p in range(0, OCount):\n                    ans += '1'\n                for o in range(0, ZCount):\n                    ans += '0'\n        print(ans)\n    i += 1", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    a = input()\n    s = n // k\n    z = 0\n    o = 0\n    for i in a:\n        if i == '0':\n            z += 1\n        else:\n            o += 1\n    if o % s != 0 or z % s != 0:\n        print('IMPOSSIBLE')\n    else:\n        z = z // s\n        o = o // s\n        b = '0' * z + '1' * o\n        k = 0\n        l = 0\n        c = ''\n        while s > 0:\n            s -= 1\n            if l % 2 == 0:\n                c += b\n            else:\n                c += b[::-1]\n            l += 1\n        print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    binary_string = input()\n    ones = 0\n    for i in binary_string:\n        ones += 1 & int(i)\n    zeros = n - ones\n    strk = n // k\n    str2k = '0' * (zeros // strk) + '1' * (ones // strk)\n    if zeros // strk + ones // strk == k:\n        print(((str2k + str2k[::-1]) * (strk // 2 + 1))[:n])\n    else:\n        print('IMPOSSIBLE')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    b = input()\n    bo = 0\n    for i in b:\n        bo += 1 & int(i)\n    bz = n - bo\n    bs = n // k\n    s = '0' * (bz // bs) + '1' * (bo // bs)\n    f = (s + s[::-1]) * (bs // 2 + 1)\n    if bz // bs + bo // bs == k:\n        print(f[:n])\n    else:\n        print('IMPOSSIBLE')", "from collections import Counter\nfor _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    s = input()\n    g = Counter(s)\n    if n > m or m % n != 0:\n        print('IMPOSSIBLE')\n    elif g['1'] % (m // n) != 0 or g['0'] % (m // n) != 0:\n        print('IMPOSSIBLE')\n    else:\n        st = ''\n        for i in range(g['0'] // (m // n)):\n            st += '0'\n        for j in range(g['1'] // (m // n)):\n            st += '1'\n        rev = ''.join(st[::-1])\n        u = 0\n        v = 0\n        for i in range(m // n):\n            if u == 0:\n                print(st, end='')\n                u = 1\n                v = 0\n            else:\n                print(rev, end='')\n                v = 1\n                u = 0\n        print()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    seg = n // k\n    ones = s.count('1')\n    zeros = s.count('0')\n    if ones % seg == 0 and zeros % seg == 0:\n        ans = '0' * (zeros // seg) + '1' * (ones // seg)\n        ans1 = ans[::-1]\n        if n % (2 * k) == 0:\n            print((ans + ans1) * (n // (2 * k)))\n        else:\n            print((ans + ans1) * (n // (2 * k)) + ans)\n    else:\n        print('IMPOSSIBLE')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    zero = s.count('0')\n    one = s.count('1')\n    m = n // k\n    if zero % m == 0 and zero % m == 0:\n        n1 = zero // m\n        n2 = one // m\n        har = '0' * n1 + '1' * n2\n        tess = '1' * n2 + '0' * n1\n        final = ''\n        for i in range(m):\n            if i % 2 == 0:\n                final += har\n            else:\n                final += tess\n        print(final)\n    else:\n        print('IMPOSSIBLE')", "from sys import stdin, stdout\nfrom collections import Counter\nfrom itertools import permutations\nimport bisect\nimport math\nI = lambda : map(int, stdin.readline().split())\nI1 = lambda : stdin.readline()\nfor _ in range(int(I1())):\n    (n, k) = I()\n    s = I1().strip()\n    c0 = s.count('0')\n    c1 = s.count('1')\n    x = n // k\n    if c0 % x != 0 or c1 % x != 0:\n        print('IMPOSSIBLE')\n    else:\n        c0 = c0 // x\n        c1 = c1 // x\n        s1 = c0 * '0' + c1 * '1'\n        s2 = c1 * '1' + c0 * '0'\n        c = 1\n        s = ''\n        while c <= x:\n            if c % 2 != 0:\n                s += s1\n            else:\n                s += s2\n            c += 1\n        print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    zero = s.count('0')\n    one = s.count('1')\n    m = n // k\n    if zero % m == 0 and zero % m == 0:\n        n1 = zero // m\n        n2 = one // m\n        har = '0' * n1 + '1' * n2\n        tess = '1' * n2 + '0' * n1\n        final = ''\n        for i in range(m):\n            if i % 2 == 0:\n                final += har\n            else:\n                final += tess\n        print(final)\n    else:\n        print('IMPOSSIBLE')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    s = list(s)\n    a = s.count('0')\n    b = n - a\n    x = n // k\n    a1 = a // x\n    b1 = b // x\n    if a % x != 0 or b % x != 0:\n        print('IMPOSSIBLE')\n    else:\n        s1 = ''\n        for j in range(x):\n            if j % 2 == 0:\n                for m in range(a1):\n                    s1 = s1 + '0'\n                for m in range(b1):\n                    s1 = s1 + '1'\n            else:\n                for m in range(b1):\n                    s1 = s1 + '1'\n                for m in range(a1):\n                    s1 = s1 + '0'\n        print(s1)", "import sys\n\ndef uno():\n    return int(sys.stdin.readline().strip())\n\ndef dos():\n    return sys.stdin.readline().strip()\n\ndef tres():\n    return map(int, sys.stdin.readline().strip().split())\nfor _ in range(uno()):\n    (n, k) = tres()\n    s = dos()\n    (z, o, ts) = (s.count('0'), s.count('1'), n // k)\n    if z % ts or o % ts:\n        print('IMPOSSIBLE')\n        continue\n    ans = ''\n    for i in range(ts):\n        if i & 1:\n            ans += o // ts * '1'\n            ans += z // ts * '0'\n        else:\n            ans += z // ts * '0'\n            ans += o // ts * '1'\n    print(ans)", "def method_1(s, n, k):\n    k0 = s.count('0')\n    k1 = s.count('1')\n    temp = n // k\n    if k0 % temp == 0 and k1 % temp == 0:\n        res1 = '0' * (k0 // temp) + '1' * (k1 // temp)\n    else:\n        return 'IMPOSSIBLE'\n    ans = ''\n    for i in range(temp):\n        if i % 2 == 0:\n            ans = ans + res1\n        else:\n            ans = ans + res1[::-1]\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(method_1(s, n, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    n0 = s.count('0')\n    n1 = s.count('1')\n    fold = n // k\n    if n0 % fold == 0 and n1 % fold == 0:\n        tr = '0' * (n0 // fold) + '1' * (n1 // fold)\n        for i in range(fold):\n            if i % 2 == 0:\n                print(tr, end='')\n            else:\n                print(tr[::-1], end='')\n        print()\n    else:\n        print('IMPOSSIBLE')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    (no_of_ones, no_of_zeros) = (s.count('1'), s.count('0'))\n    total_segments = n // k\n    result = ''\n    if no_of_zeros % total_segments == 0 and no_of_ones % total_segments == 0:\n        no_of_ones_per_segment = no_of_ones // total_segments\n        no_of_zeros_per_segment = no_of_zeros // total_segments\n        for i in range(total_segments):\n            if i % 2 == 0:\n                for _ in range(no_of_zeros_per_segment):\n                    result += '0'\n                for _ in range(no_of_ones_per_segment):\n                    result += '1'\n            else:\n                for _ in range(no_of_ones_per_segment):\n                    result += '1'\n                for _ in range(no_of_zeros_per_segment):\n                    result += '0'\n        print(result)\n    else:\n        print('IMPOSSIBLE')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().strip().split(' '))\n    s = input()\n    g = n // k\n    fq = [0] * 2\n    for i in range(n):\n        fq[ord(s[i]) - ord('0')] += 1\n    if fq[0] % g != 0 or fq[1] % g != 0:\n        print('IMPOSSIBLE')\n    else:\n        it = n // k\n        f0 = fq[0] // g\n        f1 = fq[1] // g\n        s1 = ''\n        for i in range(f0):\n            s1 += '0'\n        for j in range(f1):\n            s1 += '1'\n        s2 = s1[::-1]\n        ans = ''\n        for i in range(it):\n            if i % 2 == 0:\n                ans += s1\n            else:\n                ans += s2\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (N, K) = map(int, input().split())\n    S = input()\n    zeros = 0\n    ones = 0\n    for i in S:\n        if int(i) & 1:\n            ones += 1\n        else:\n            zeros += 1\n    rem = N // K\n    if ones == N or zeros == N:\n        print(S)\n    elif ones % rem == 0 and zeros % rem == 0:\n        result = ''\n        final = ''\n        no_ones = ones // rem\n        no_zeros = zeros // rem\n        for i in range(no_zeros):\n            final += '0'\n        for i in range(no_ones):\n            final += '1'\n        for i in range(1, rem + 1):\n            if i & 1:\n                result += final\n            else:\n                result += final[-1::-1]\n        print(result)\n    else:\n        print('IMPOSSIBLE')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (zero, one) = (0, 0)\n    for i in s:\n        if i == '0':\n            zero += 1\n        else:\n            one += 1\n    seg = int(n / k)\n    if zero % seg != 0 or one % seg != 0:\n        print('IMPOSSIBLE')\n        continue\n    else:\n        ans = ''\n        ans += '0' * int(zero // seg)\n        ans += '1' * int(one // seg)\n        f = ''\n        for i in range(seg):\n            if i % 2 == 0:\n                f += ans\n            else:\n                f += ans[::-1]\n        print(f)", "t = int(input())\nfor i in range(t):\n    [n, k] = [int(temp) for temp in input().split()]\n    s = input()\n    _0 = 0\n    for j in range(n):\n        if s[j] == '0':\n            _0 = _0 + 1\n    if _0 % (n / k) != 0:\n        print('IMPOSSIBLE')\n    else:\n        temp = ''\n        for i in range(int(_0 / (n / k))):\n            temp = temp + '0'\n        for i in range(int(k - _0 / (n / k))):\n            temp = temp + '1'\n        for i in range(int(n / k)):\n            if i % 2 == 0:\n                print(temp, end='')\n            else:\n                print(temp[::-1], end='')\n        print()", "try:\n\n    def solve():\n        (n, k) = map(int, input().split())\n        s = list(map(int, input()))\n        segments = int(n / k)\n        zerocount = 0\n        onecount = 0\n        for i in s:\n            if i == 0:\n                zerocount += 1\n            if i == 1:\n                onecount += 1\n        if zerocount % segments == 0 and onecount % segments == 0:\n            zerocount = int(zerocount / segments)\n            onecount = int(onecount / segments)\n            l = 0\n            for l in range(segments):\n                if l % 2 == 0:\n                    print('0' * zerocount, end='')\n                    print('1' * onecount, end='')\n                else:\n                    print('1' * onecount, end='')\n                    print('0' * zerocount, end='')\n            print(end='\\n')\n        else:\n            print('IMPOSSIBLE')\n    i = int(input())\n    for j in range(i):\n        solve()\nexcept:\n    pass", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    st = input()\n    cnt = Counter(st)\n    group = n // k\n    for ones in range(0, k + 1):\n        no_one = ones * group\n        no_zero = (k - ones) * group\n        if no_zero == cnt['0'] and no_one == cnt['1']:\n            tmp = '0' * (k - ones) + '1' * ones\n            tmp2 = tmp[::-1]\n            an = (tmp + tmp2) * (group // 2)\n            if group % 2 == 1:\n                an += tmp\n            print(an)\n            break\n    else:\n        print('IMPOSSIBLE')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    z = 0\n    o = 0\n    for sub in input():\n        if sub == '0':\n            z += 1\n        else:\n            o += 1\n    r = n // k\n    a = 0\n    b = 0\n    ans = ''\n    if not n % k and (not z % r) and (not o % r):\n        a = z // r\n        b = o // r\n    else:\n        ans = 'IMPOSSIBLE'\n    if ans == '':\n        tmp = k\n        while tmp > 0:\n            tmp -= 1\n            if a > 0:\n                ans += '0'\n                a -= 1\n            else:\n                ans += '1'\n                b -= 1\n        r -= 1\n        actual = ans\n        rev = actual[::-1]\n        while r > 0:\n            r -= 1\n            ans += rev\n            (rev, actual) = (actual, rev)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    se = {'0': 0, '1': 0}\n    for c in s:\n        if c == '0':\n            se['0'] += 1\n        else:\n            se['1'] += 1\n    (x, y) = (int(se['0'] / (n // k)), int(se['1'] / (n // k)))\n    if x + y - k:\n        print('IMPOSSIBLE')\n    elif n - k:\n        res = x * '0' + y * '1'\n        res += y * '1' + x * '0'\n        if n // k % 2:\n            res += res * (n // (2 * k) - 1) + x * '0' + y * '1'\n        else:\n            res += res * (n // (2 * k) - 1)\n        print(res)\n    else:\n        print(x * '0' + y * '1')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    string = input()\n    zeroCount = string.count('0')\n    oneCount = string.count('1')\n    noSeg = n // k\n    if zeroCount % noSeg == 0 and oneCount % noSeg == 0:\n        for i in range(1, noSeg + 1):\n            if i % 2:\n                for j in range(1, zeroCount // noSeg + 1):\n                    print(0, end='')\n                for j in range(1, oneCount // noSeg + 1):\n                    print(1, end='')\n            else:\n                for j in range(1, oneCount // noSeg + 1):\n                    print(1, end='')\n                for j in range(1, zeroCount // noSeg + 1):\n                    print(0, end='')\n        print()\n    else:\n        print('IMPOSSIBLE')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    z = 0\n    o = 0\n    for sub in input():\n        if sub == '0':\n            z += 1\n        else:\n            o += 1\n    r = n // k\n    a = 0\n    b = 0\n    ans = ''\n    if not n % k and (not z % r) and (not o % r):\n        a = z // r\n        b = o // r\n    else:\n        ans = 'IMPOSSIBLE'\n    if ans == '':\n        tmp = k\n        while tmp > 0:\n            tmp -= 1\n            if a > 0:\n                ans += '0'\n                a -= 1\n            else:\n                ans += '1'\n                b -= 1\n        r -= 1\n        actual = ans\n        rev = actual[::-1]\n        while r > 0:\n            r -= 1\n            ans += rev\n            (rev, actual) = (actual, rev)\n    print(ans)", "try:\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        s = input()\n        a = 0\n        b = 0\n        for i in range(len(s)):\n            if s[i] == '0':\n                a += 1\n            else:\n                b += 1\n        c = n // k\n        if a % c == 0 and b % c == 0:\n            e = a // c\n            f = b // c\n            even = ''\n            odd = ''\n            total = ''\n            for i in range(e):\n                even += '0'\n            for i in range(f):\n                odd += '1'\n                even += '1'\n            for i in range(e):\n                odd += '0'\n            for i in range(1, c + 1):\n                if i % 2 != 0:\n                    total += even\n                else:\n                    total += odd\n            print(total)\n        else:\n            print('IMPOSSIBLE')\nexcept:\n    Exception", "try:\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        s = input()\n        a = 0\n        b = 0\n        for i in range(len(s)):\n            if s[i] == '0':\n                a += 1\n            else:\n                b += 1\n        c = n // k\n        if a % c == 0 and b % c == 0:\n            e = a // c\n            f = b // c\n            even = ''\n            odd = ''\n            total = ''\n            for i in range(e):\n                even += '0'\n            for i in range(f):\n                odd += '1'\n                even += '1'\n            for i in range(e):\n                odd += '0'\n            for i in range(1, c + 1):\n                if i % 2 != 0:\n                    total += even\n                else:\n                    total += odd\n            print(total)\n        else:\n            print('IMPOSSIBLE')\nexcept:\n    Exception", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = input()\n    a = 0\n    b = 0\n    c = n // k\n    for i in range(len(s)):\n        if s[i] == '0':\n            a += 1\n        else:\n            b += 1\n    if a % c == 0 and b % c == 0:\n        e = a // c\n        f = b // c\n        ans1 = ''\n        ans2 = ''\n        ans = ''\n        for i in range(e):\n            ans1 += '0'\n        for i in range(f):\n            ans1 += '1'\n            ans2 += '1'\n        for i in range(e):\n            ans2 += '0'\n        for i in range(1, c + 1):\n            if i % 2 != 0:\n                ans += ans1\n            else:\n                ans += ans2\n        print(ans)\n    else:\n        print('IMPOSSIBLE')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    S = input()\n    knd = n // k\n    d = {'0': 0, '1': 0}\n    for ele in S:\n        d[ele] += 1\n    if d['0'] % knd != 0 or d['1'] % knd != 0:\n        print('IMPOSSIBLE')\n    else:\n        p = d['0'] // knd\n        q = d['1'] // knd\n        ans = ''\n        fu = '0' * p + '1' * q\n        su = '1' * q + '0' * p\n        i = 1\n        while knd:\n            knd -= 1\n            if i % 2 == 1:\n                ans += fu\n            else:\n                ans += su\n            i += 1\n        print(ans)", "T = int(input())\nfor j in range(T):\n    (N, K) = map(int, input().split())\n    S = input()\n    ans = str()\n    Z = O = 0\n    for e in S:\n        if e == '0':\n            Z += 1\n        else:\n            O += 1\n    a = N // K\n    if Z % a != 0:\n        print('IMPOSSIBLE')\n        continue\n    z = Z // a\n    o = O // a\n    f = str()\n    l = str()\n    for i in range(z):\n        f += '0'\n    for i in range(o):\n        l += '1'\n    first = f + l\n    last = l + f\n    for i in range(a):\n        if i % 2 == 0:\n            ans += first\n        else:\n            ans += last\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    count_1 = s.count('1')\n    count_0 = s.count('0')\n    num_of_seg = n // k\n    if count_1 % num_of_seg == 0 and count_0 % num_of_seg == 0:\n        for x in range(num_of_seg):\n            if x % 2 == 0:\n                for y in range(count_0 // num_of_seg):\n                    print('0', end='')\n                for y in range(count_1 // num_of_seg):\n                    print('1', end='')\n            else:\n                for y in range(count_1 // num_of_seg):\n                    print('1', end='')\n                for y in range(count_0 // num_of_seg):\n                    print('0', end='')\n        print()\n    else:\n        print('IMPOSSIBLE')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (one, zero) = (0, 0)\n    for x in s:\n        if x == '1':\n            one += 1\n        else:\n            zero += 1\n    if one == 0 or zero == 0:\n        print(s)\n    else:\n        (ans, zc) = ('', -1)\n        kset = n // k\n        for i in range(1, k):\n            if zero == kset * i:\n                zc = i\n                break\n        if zc == -1:\n            print('IMPOSSIBLE')\n        else:\n            (af, rs) = ('', '')\n            for i in range(1, k + 1):\n                if i > zc:\n                    af += '1'\n                else:\n                    af += '0'\n            rs = af[::-1]\n            for i in range(kset):\n                if i % 2 == 0:\n                    ans += af\n                else:\n                    ans += rs\n            print(ans)", "from collections import Counter\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    s = Counter(s)\n    x = n // k\n    if s['0'] % x != 0 and s['1'] % x != 0:\n        print('IMPOSSIBLE')\n        continue\n    for i in range(x):\n        print('0' * (s['0'] // x) + '1' * (s['1'] // x), end='') if i % 2 == 0 else print('1' * (s['1'] // x) + '0' * (s['0'] // x), end='')\n    print()", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = ''\n    ans1 = ''\n    finans = ''\n    set_len = int(len(s) / k)\n    count_1 = 0\n    count_0 = 0\n    for i in s:\n        if i == '1':\n            count_1 += 1\n        else:\n            count_0 += 1\n    if count_1 % set_len == 0:\n        if count_0 % set_len == 0:\n            set_1 = int(count_1 / set_len)\n            set_0 = int(count_0 / set_len)\n            for i in range(set_0):\n                ans += '0'\n            for i in range(set_1):\n                ans += '1'\n            ans1 = ans[::-1]\n            for i in range(set_len):\n                if i % 2 == 0:\n                    finans += ans\n                else:\n                    finans += ans1\n            print(finans)\n        else:\n            print('IMPOSSIBLE')\n    else:\n        print('IMPOSSIBLE')\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    seg = n // k\n    if s.count('0') % seg != 0 or s.count('1') % seg != 0:\n        print('IMPOSSIBLE')\n    else:\n        for i in range(seg):\n            if i % 2 == 0:\n                for j in range(s.count('0') // seg):\n                    print('0', end='')\n                for k in range(s.count('1') // seg):\n                    print('1', end='')\n            else:\n                for j in range(s.count('1') // seg):\n                    print('1', end='')\n                for k in range(s.count('0') // seg):\n                    print('0', end='')\n    print()", "MOD = 1000000007\nfrom collections import defaultdict as dd, Counter, deque\n\ndef si():\n    return input()\n\ndef ii():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\n\ndef mi():\n    return map(int, input().split())\n\ndef out(v):\n    print(v)\n\ndef spout():\n    print(v, end=' ')\n\ndef d2b(n):\n    return bin(n).replace('0b', '')\n\ndef twod(n, m, num):\n    return [[num for x in range(m)] for y in range(n)]\n\ndef vow():\n    return ['a', 'e', 'i', 'o', 'u']\n\ndef let():\n    return [chr(i) for i in range(97, 123)]\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef ispow2(x):\n    return x and (not x & x - 1)\n\ndef prime_factors(n):\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return list(factors)\nt = ii()\nwhile t:\n    t -= 1\n    (n, k) = mi()\n    s = list(si())\n    (x, y) = (s.count('0'), s.count('1'))\n    d = n // k\n    if x % d != 0 or y % d != 0:\n        print('IMPOSSIBLE')\n        continue\n    a = '0' * (x // d) + '1' * (y // d)\n    for i in range(d):\n        if i % 2 == 0:\n            print(a, end='')\n        else:\n            print(a[::-1], end='')\n    print('')", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split(' ')))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(n, k, string):\n    zero = 0\n    one = 0\n    repeat = n // k\n    for i in range(len(string)):\n        if string[i] == '0':\n            zero += 1\n        else:\n            one += 1\n    if zero % repeat != 0 or one % repeat != 0:\n        return 'IMPOSSIBLE'\n    else:\n        res = ''\n        a1 = zero // repeat\n        a2 = one // repeat\n        lexi = a1 * '0' + a2 * '1'\n        le = a2 * '1' + a1 * '0'\n        count = 1\n        while repeat:\n            repeat -= 1\n            if count % 2 == 1:\n                res += lexi\n            else:\n                res += le\n            count += 1\n        return res\nfor _ in range(inp()):\n    (n, k) = map(int, input().split(' '))\n    string = insr()\n    print(solve(n, k, string))", "testcase = int(input())\nfor _ in range(testcase):\n    li = [0, 0]\n    (n, k) = map(int, input().split())\n    s = input()\n    for i in range(n):\n        li[int(s[i])] += 1\n    if li[0] % (n / k) != 0 or li[1] % (n / k) != 0:\n        print('IMPOSSIBLE')\n        continue\n    if li[0] == n or li[1] == n:\n        print(s)\n        continue\n    li[0] = li[0] // (n / k)\n    li[1] = li[1] // (n / k)\n    ans = []\n    for i in range(int(li[0])):\n        ans.append('0')\n    for i in range(int(li[1])):\n        ans.append('1')\n    temp = ans[:]\n    for i in range(n // k - 1):\n        temp = temp[::-1]\n        ans = ans + temp\n    print(''.join(ans))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (zeros, ones) = (s.count('0'), s.count('1'))\n    d = n // k\n    if zeros % d != 0 or ones % d != 0:\n        print('IMPOSSIBLE')\n        continue\n    else:\n        str = ''\n        str += ''.join('0' * (zeros // d))\n        str += ''.join('1' * (ones // d))\n        ans = ''\n        k1 = 0\n        while k1 < n / k:\n            if k1 % 2 == 0:\n                ans += str\n            else:\n                ans += ''.join(reversed(str))\n            k1 += 1\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    flag = 0\n    if k > n:\n        flag = 1\n    if n % k != 0:\n        flag = 1\n    t = 0\n    for i in range(n):\n        if s[i] == '0':\n            t += 1\n    if t % (n // k) != 0 or (n - t) % (n // k) != 0:\n        flag = 1\n    if flag == 1:\n        print('IMPOSSIBLE')\n    else:\n        l = ''\n        for j in range(n // k):\n            if j % 2 == 0:\n                l += '0' * (t // (n // k)) + '1' * ((n - t) // (n // k))\n            else:\n                l += '1' * ((n - t) // (n // k)) + '0' * (t // (n // k))\n        print(l)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    s = input()\n    (i, j) = (s.count('1'), s.count('0'))\n    p = ''\n    q = ''\n    a = ''\n    if i % (n / k):\n        print('IMPOSSIBLE')\n    else:\n        for m in range(int(j / (n / k))):\n            p += '0'\n        for b in range(int(i / (n / k))):\n            p += '1'\n        for o in p:\n            q = o + q\n        for r in range(1, int(n / k) + 1):\n            if r % 2 == 1:\n                a = a + p\n            else:\n                a = a + q\n        print(a)\n    t = t - 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    z = 0\n    o = 0\n    for i in range(n):\n        if s[i] == '0':\n            z = z + 1\n        else:\n            o = o + 1\n    if z % (n // k) > 0 or o % (n // k) > 0:\n        print('IMPOSSIBLE')\n    else:\n        a = z // (n // k)\n        b = o // (n // k)\n        s2 = ''\n        for i in range(a):\n            s2 = s2 + '0'\n        for i in range(b):\n            s2 = s2 + '1'\n        ans = ''\n        for i in range(n // k):\n            ans = ans + s2\n            s2 = s2[::-1]\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    c = n // k\n    z1 = s.count('0')\n    z2 = z1 // c\n    o1 = s.count('1')\n    o2 = o1 // c\n    if z1 == n or o1 == n:\n        print(s)\n    elif z1 % c != 0 or o1 % c != 0:\n        print('IMPOSSIBLE')\n    else:\n        a = '0' * z2 + '1' * o2\n        ans = ''\n        for i in range(c):\n            if i % 2 == 0:\n                ans += a\n            else:\n                ans += a[::-1]\n        print(ans)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    f = defaultdict(int)\n    for i in s:\n        f[i] += 1\n    c = n // k\n    z1 = f['0']\n    z2 = z1 // c\n    o1 = f['1']\n    o2 = o1 // c\n    if z1 == n or o1 == n:\n        print(s)\n    elif z1 % c != 0 or o1 % c != 0:\n        print('IMPOSSIBLE')\n    else:\n        a = '0' * z2 + '1' * o2\n        b = a[::-1]\n        ans = ''\n        for i in range(c):\n            if i % 2 == 0:\n                ans += a\n            else:\n                ans += b\n        print(ans)", "import sys\nimport math\nfrom collections import defaultdict\nmod = 1000000007\nT = 1\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    y = n // k\n    if ones % y == 0 and zeros % y == 0:\n        p = zeros // y\n        q = ones // y\n        ansx = '0' * p\n        ansx = ansx + '1' * q\n        ans = ansx + ansx[::-1]\n        ans = ans * (n // (k << 1))\n        if n % (k << 1):\n            ans += ansx\n        print(ans)\n    else:\n        print('IMPOSSIBLE')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    zero = s.count('0')\n    one = s.count('1')\n    val = n // k\n    if zero % val != 0 or one % val != 0:\n        print('IMPOSSIBLE')\n    else:\n        v1 = zero // val\n        v2 = one // val\n        for i in range(val):\n            if i % 2 == 0:\n                print(v1 * '0' + v2 * '1', end='')\n            else:\n                print(v2 * '1' + v1 * '0', end='')\n        print('')", "import os\nt = int(input(''))\nfor _ in range(t):\n    (n, k) = map(int, input('').split(' '))\n    temp = n // k\n    count_0 = 0\n    count_1 = 0\n    input_string = input('')\n    for char in input_string:\n        if char == '0':\n            count_0 += 1\n    count_1 = len(input_string) - count_0\n    if count_0 % temp == 0 and count_1 % temp == 0:\n        a = '0' * (count_0 // temp)\n        b = '1' * (count_1 // temp)\n        k_string = a + b\n        k_string_reverse = k_string[::-1]\n        res = ''\n        for i in range(temp):\n            if i % 2 == 0:\n                res += k_string\n            else:\n                res += k_string_reverse\n        print(res)\n    else:\n        print('IMPOSSIBLE')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    string = input()\n    cou1 = string.count('1')\n    cou0 = n - cou1\n    if cou1 == 0 or cou0 == 0:\n        print(string)\n    else:\n        val = n // k\n        i = 1\n        ans = []\n        if cou0 % val != 0 or cou1 % val != 0:\n            print('IMPOSSIBLE')\n        else:\n            cou1 = cou1 // val\n            cou0 = cou0 // val\n            for i in range(k):\n                if cou0 > 0:\n                    ans.append('0')\n                    cou0 -= 1\n                else:\n                    ans.append('1')\n                    cou1 -= 1\n            round = 1\n            cou = k - 1\n            for i in range(k, n):\n                if round == 1:\n                    ans.append(ans[cou])\n                    cou -= 1\n                    if cou < 0:\n                        cou = 0\n                        round = 0\n                elif round == 0:\n                    ans.append(ans[cou])\n                    cou += 1\n                    if cou == k:\n                        cou = k - 1\n                        round = 1\n            print(''.join(ans))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    no_of_seg = n // k\n    zeros = 0\n    ones = 0\n    for i in s:\n        if i == '0':\n            zeros += 1\n        else:\n            ones += 1\n    if zeros % no_of_seg != 0 or ones % no_of_seg != 0:\n        print('IMPOSSIBLE')\n        continue\n    zeros = zeros // no_of_seg\n    ones = ones // no_of_seg\n    res = ''\n    for i in range(no_of_seg):\n        temp = ''\n        if i % 2 == 0:\n            for j in range(zeros):\n                temp += '0'\n            for j in range(ones):\n                temp += '1'\n        else:\n            for j in range(ones):\n                temp += '1'\n            for j in range(zeros):\n                temp += '0'\n        res += temp\n    print(res)", "t = int(input())\nfor i in range(t):\n    x = input()\n    x = x.split()\n    n = int(x[0])\n    k = int(x[1])\n    s = input()\n    factor = n // k\n    n0 = s.count('0')\n    n1 = s.count('1')\n    if n0 % factor != 0 or n1 % factor != 0:\n        print('IMPOSSIBLE')\n    else:\n        r = '0' * (n0 // factor) + '1' * (n1 // factor)\n        rr = r[-1::-1]\n        p = ''\n        for i in range(factor):\n            if i % 2 == 0:\n                p += r\n            else:\n                p += rr\n        print(p)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = str(input())\n    d = {'0': 0, '1': 0}\n    for x in s:\n        d[x] += 1\n    seg = n // k\n    if d['0'] % seg != 0 or d['1'] % seg != 0:\n        print('IMPOSSIBLE')\n    else:\n        p = d['0'] // seg\n        q = d['1'] // seg\n        pre = '0' * p + '1' * q\n        suf = '1' * q + '0' * p\n        i = 0\n        ans = ''\n        while seg:\n            seg -= 1\n            if i % 2 == 0:\n                ans += pre\n            else:\n                ans += suf\n            i += 1\n        print(ans)", "def find(n, k, s):\n    repeat = n // k\n    zero = 0\n    one = 0\n    for i in s:\n        if i == '0':\n            zero += 1\n        else:\n            one += 1\n    li = []\n    for i in range(0, k + 1):\n        z = i\n        o = k - i\n        if z * repeat == zero and o * repeat == one:\n            temp = ''\n            str1 = '0' * z + '1' * o\n            str2 = '1' * o + '0' * z\n            for m in range(repeat):\n                if m % 2 == 0:\n                    temp += str1\n                else:\n                    temp += str2\n            li.append(temp)\n            temp = ''\n            for m in range(repeat):\n                if m % 2 == 0:\n                    temp += str2\n                else:\n                    temp += str1\n            li.append(temp)\n    if len(li) == 0:\n        return 'IMPOSSIBLE'\n    else:\n        li.sort()\n        return li[0]\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(find(n, k, s))", "def kfolded(s, k):\n    n = len(s)\n    if n == 0:\n        return 'IMPOSSIBLE'\n    c1 = 0\n    c2 = 0\n    seg = n // k\n    for c in s:\n        if c == '0':\n            c1 += 1\n        else:\n            c2 += 1\n    if c1 == 0 or c2 == 0:\n        return s\n    if c1 % seg == 0 and c2 % seg == 0 and (c1 // seg != 0) and (c2 // seg != 0):\n        num1 = c1 // seg\n        num2 = c2 // seg\n    else:\n        return 'IMPOSSIBLE'\n    seg1 = ['0'] * num1\n    seg2 = ['1'] * num2\n    p1 = ''.join(seg1 + seg2)\n    p2 = ''.join(seg2 + seg1)\n    if seg == 1:\n        return p1\n    ans = []\n    for i in range(seg // 2):\n        ans.append(p1)\n        ans.append(p2)\n    if seg % 2 != 0:\n        ans.append(p1)\n    return ans\nt = int(input())\nfor i in range(t):\n    nk = input().strip().split()\n    n = int(nk[0])\n    k = int(nk[1])\n    s = input()\n    result = kfolded(s, k)\n    print(''.join(result))", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    a = input()\n    t0 = 0\n    t1 = 0\n    for i in a:\n        if int(i):\n            t1 += 1\n        else:\n            t0 += 1\n    b = t0 * k // n\n    c = t1 * k // n\n    if b + c == k:\n        ss = '0' * b + '1' * c\n        for i in range(n // k):\n            if i % 2:\n                print(ss[::-1], end='')\n            else:\n                print(ss, end='')\n        print()\n    else:\n        print('IMPOSSIBLE')", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = input()\n    x = c.count('1')\n    y = c.count('0')\n    z = a // b\n    d = x // z\n    e = y // z\n    f = ''\n    h = ''\n    j = 0\n    if y % z != 0 or x % z != 0:\n        print('IMPOSSIBLE')\n    else:\n        f = '0' * e + '1' * d\n        g = f[::-1]\n        for i in range(z):\n            if j == 0:\n                h = h + f\n                j = 1\n                continue\n            if j == 1:\n                h = h + g\n                j = 0\n        print(h)", "def k_fold_string(string: list, n, k):\n    counts = [string.count('0'), string.count('1')]\n    if counts[0] % (n // k) != 0 and counts[1] % (n // k) != 0:\n        return 'IMPOSSIBLE'\n    else:\n        pattern = ['0' * (counts[0] // (n // k)) + '1' * (counts[1] // (n // k)), '1' * (counts[1] // (n // k)) + '0' * (counts[0] // (n // k))]\n        count = 0\n        ans = ''\n        while count != n // k:\n            if count % 2 == 0:\n                ans += pattern[0]\n            else:\n                ans += pattern[1]\n            count += 1\n        return ans\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    string = input()\n    print(k_fold_string(string, n, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = [int(i) for i in s]\n    zero = a.count(0)\n    one = a.count(1)\n    m = n // k\n    if zero % m != 0 or one % m != 0:\n        print('IMPOSSIBLE')\n    else:\n        ans = ''\n        e = zero // m\n        p = one // m\n        while e:\n            ans += '0'\n            e -= 1\n        while p:\n            ans += '1'\n            p -= 1\n        m -= 1\n        temp = ans[::-1]\n        while m:\n            ans += temp\n            temp = temp[::-1]\n            m -= 1\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (zero, one) = (0, 0)\n    for (i, j) in enumerate(s):\n        if j == '0':\n            zero += 1\n        else:\n            one += 1\n    ans = 'IMPOSSIBLE'\n    if zero % (n // k) == 0:\n        ans = zero // (n // k) * '0' + one // (n // k) * '1'\n        for i in range(n // k):\n            print(ans, end='')\n            ans = ans[::-1]\n        print()\n    else:\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = []\n    l1 = []\n    a = n // k\n    if s.count('0') % a != 0 or s.count('1') % a != 0:\n        print('IMPOSSIBLE')\n    else:\n        n0 = s.count('0') // a\n        n1 = s.count('1') // a\n        while n0 != 0:\n            l.append('0')\n            n0 = n0 - 1\n        while n1 != 0:\n            l.append('1')\n            n1 = n1 - 1\n        s1 = ''.join(l)\n        for k in range(1, a + 1):\n            if k % 2 != 0:\n                l1.append(s1)\n            else:\n                l1.append(s1[::-1])\n        print(''.join(l1))", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    if s.count('0') % (n / k) != 0 or s.count('1') % (n / k) != 0:\n        print('IMPOSSIBLE')\n    else:\n        l = ''\n        f = 0\n        while True:\n            l += '0' * int(s.count('0') // (n / k)) + '1' * int(s.count('1') // (n / k))\n            if len(l) >= n:\n                break\n            l += '1' * int(s.count('1') // (n / k)) + '0' * int(s.count('0') // (n / k))\n            if len(l) >= n:\n                break\n        print(l)", "from sys import stdin, stdout, setrecursionlimit\nfrom math import gcd, ceil, sqrt\nfrom collections import Counter, deque\nfrom bisect import bisect_left, bisect_right\nii1 = lambda : int(stdin.readline().strip())\nis1 = lambda : stdin.readline().strip()\niia = lambda : list(map(int, stdin.readline().strip().split()))\nisa = lambda : stdin.readline().strip().split()\nsetrecursionlimit(100000)\nmod = 1000000007\ntc = ii1()\nfor _ in range(tc):\n    (n, k) = iia()\n    s = is1()\n    d = Counter(s)\n    x = n // k\n    if d['1'] % x != 0 or d['0'] % x != 0:\n        print('IMPOSSIBLE')\n    else:\n        one = d['1'] // x\n        zero = d['0'] // x\n        res = ''\n        for i in range(x):\n            if i % 2 == 0:\n                res += '0' * zero + '1' * one\n            else:\n                res += '1' * one + '0' * zero\n        print(res)", "def solve(n, k, s):\n    one = s.count('1')\n    zero = s.count('0')\n    folds = n // k\n    if zero % folds != 0 or one % folds != 0:\n        return 'IMPOSSIBLE'\n    else:\n        n1 = one // folds\n        n0 = zero // folds\n        s = '0' * n0 + '1' * n1\n        t = s[::-1]\n        c = 1\n        res = ''\n        while c <= folds:\n            if c % 2 != 0:\n                res += s\n            else:\n                res += t\n            c += 1\n        return res\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    s = input()\n    print(solve(n, k, s))", "for t in range(int(input())):\n    a = input().split()\n    (n, k) = (int(a[0]), int(a[1]))\n    k = int(n / k)\n    a = input()\n    x = a.count('0')\n    y = a.count('1')\n    if x % k != 0 or y % k != 0:\n        print('IMPOSSIBLE')\n    else:\n        (x, y) = (int(x / k), int(y / k))\n        a = [0 for i in range(x)] + [1 for i in range(y)]\n        for i in range(k):\n            if i % 2 == 0:\n                print(*a, sep='', end='')\n            else:\n                print(*a[::-1], sep='', end='')\n        print('')", "def kfold(n, k, s):\n    zero = 0\n    one = 0\n    segment_count = n // k\n    for i in s:\n        if i == '0':\n            zero += 1\n        else:\n            one += 1\n    if zero % segment_count != 0 or one % segment_count != 0:\n        return 'IMPOSSIBLE'\n    zero = zero // segment_count\n    one = one // segment_count\n    ans = ''\n    x = 1\n    while x <= segment_count:\n        if x % 2 == 1:\n            for _ in range(0, zero):\n                ans = ans + '0'\n            for _ in range(0, one):\n                ans = ans + '1'\n        else:\n            for _ in range(0, one):\n                ans = ans + '1'\n            for _ in range(0, zero):\n                ans = ans + '0'\n        x += 1\n    return ans\nt = int(input())\nwhile t:\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    ans = kfold(n, k, s)\n    print(ans)\n    t -= 1", "def gcd(x, y):\n    if x > y:\n        small = y\n    else:\n        small = x\n    for i in range(1, small + 1):\n        if x % i == 0 and y % i == 0:\n            gcd = i\n    return gcd\n\ndef pal(s, n):\n    k = 0\n    for i in range(int(n / 2)):\n        if s[i] == s[n - i]:\n            k += 1\n    if k == int(n / 2):\n        return True\n    else:\n        return False\nt = int(input())\nwhile t:\n    (n, k) = map(int, input().strip().split(' '))\n    s = input()\n    o = 0\n    z = 0\n    j = list()\n    for i in range(1, 50):\n        j.append(2 ** i)\n    for i in range(n):\n        if s[i] == '1':\n            o += 1\n        else:\n            z += 1\n    if o < 1 or z < 1:\n        print(s)\n    else:\n        g = gcd(o, z)\n        x = int(o / g)\n        y = int(z / g)\n        if k % (x + y) != 0:\n            print('IMPOSSIBLE')\n        else:\n            a = ''\n            d = int(k / (x + y))\n            for i in range(y * d):\n                a = a + '0'\n            for i in range(x * d):\n                a = a + '1'\n            p = k\n            j = 1\n            b = a\n            while p < n:\n                if j % 2 != 0:\n                    a += b[::-1]\n                else:\n                    a += b\n                p += k\n                j += 1\n            print(a)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = dict()\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    no_zero = d.get('0', 0)\n    no_ones = d.get('1', 0)\n    m = n // k\n    if no_ones % m != 0 or no_ones % m != 0:\n        print('IMPOSSIBLE')\n    else:\n        f = ''\n        x_0 = no_zero // m\n        y_1 = no_ones // m\n        for i in range(x_0):\n            f = f + '0'\n        for i in range(y_1):\n            f = f + '1'\n        s1 = ''\n        for i in range(m):\n            if i % 2 == 0:\n                s1 = s1 + f\n            else:\n                s1 = s1 + f[::-1]\n        print(s1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = dict()\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    no_zero = d.get('0', 0)\n    no_ones = d.get('1', 0)\n    m = n // k\n    if no_ones % m != 0 or no_ones % m != 0:\n        print('IMPOSSIBLE')\n    else:\n        f = ''\n        x_0 = no_zero // m\n        y_1 = no_ones // m\n        for i in range(x_0):\n            f = f + '0'\n        for i in range(y_1):\n            f = f + '1'\n        s1 = ''\n        for i in range(m):\n            if i % 2 == 0:\n                s1 = s1 + f\n            else:\n                s1 = s1 + f[::-1]\n        print(s1)"]