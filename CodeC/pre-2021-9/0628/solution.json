["T = int(input())\nfor t in range(T):\n    N = int(input())\n    m = input()\n    l = [int(x) for x in input().split()]\n    maxscore = 0.0\n    for i in range(len(m) - len(l) + 1):\n        score = 0.0\n        mul = 1.0\n        for j in range(len(l)):\n            if m[i + j] == '.':\n                score += l[j]\n            elif m[i + j] == 'd':\n                score += l[j] * 2\n            elif m[i + j] == 't':\n                score += l[j] * 3\n            elif m[i + j] == 'D':\n                score += l[j]\n                mul = mul * 2\n            elif m[i + j] == 'T':\n                score += l[j]\n                mul = mul * 3\n        score = score * mul\n        maxscore = max(score, maxscore)\n    print(int(maxscore))", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    m = input()\n    l = [int(x) for x in input().split()]\n    maxscore = 0.0\n    for i in range(len(m) - len(l) + 1):\n        score = 0.0\n        mul = 1.0\n        for j in range(len(l)):\n            if m[i + j] == '.':\n                score += l[j]\n            elif m[i + j] == 'd':\n                score += l[j] * 2\n            elif m[i + j] == 't':\n                score += l[j] * 3\n            elif m[i + j] == 'D':\n                score += l[j]\n                mul = mul * 2\n            elif m[i + j] == 'T':\n                score += l[j]\n                mul = mul * 3\n        score = score * mul\n        maxscore = max(score, maxscore)\n    print(int(maxscore))", "def calc(a, x):\n    r = sum(a)\n    p = 1\n    for i in range(len(x)):\n        if x[i] == 't':\n            r += 2 * a[i]\n        elif x[i] == 'd':\n            r += a[i]\n        elif x[i] == 'D':\n            p *= 2\n        elif x[i] == 'T':\n            p *= 3\n    return p * r\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    m = 0\n    a = list(map(int, input().split()))\n    t = len(s) - len(a) + 1\n    for i in range(t):\n        l = calc(a, s[i:len(a) + i])\n        if l > m:\n            m = l\n    print(m)", "def calc(a, x):\n    r = sum(a)\n    p = 1\n    for i in range(len(x)):\n        if x[i] == 't':\n            r += 2 * a[i]\n        elif x[i] == 'd':\n            r += a[i]\n        elif x[i] == 'D':\n            p *= 2\n        elif x[i] == 'T':\n            p *= 3\n    return p * r\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    m = 0\n    a = list(map(int, input().split()))\n    t = len(s) - len(a) + 1\n    for i in range(t):\n        l = calc(a, s[i:len(a) + i])\n        if l > m:\n            m = l\n    print(m)", "def calc(a, x):\n    r = sum(a)\n    p = 1\n    for i in range(len(x)):\n        if x[i] == 't':\n            r += 2 * a[i]\n        elif x[i] == 'd':\n            r += a[i]\n        elif x[i] == 'D':\n            p *= 2\n        elif x[i] == 'T':\n            p *= 3\n    return p * r\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    m = 0\n    a = list(map(int, input().split()))\n    t = len(s) - len(a) + 1\n    for i in range(t):\n        l = calc(a, s[i:len(a) + i])\n        if l > m:\n            m = l\n    print(m)", "def calc(a, x):\n    r = sum(a)\n    p = 1\n    for i in range(len(x)):\n        if x[i] == 't':\n            r += 2 * a[i]\n        elif x[i] == 'd':\n            r += a[i]\n        elif x[i] == 'D':\n            p *= 2\n        elif x[i] == 'T':\n            p *= 3\n    return p * r\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    m = 0\n    a = list(map(int, input().split()))\n    t = len(s) - len(a) + 1\n    for i in range(t):\n        l = calc(a, s[i:len(a) + i])\n        if l > m:\n            m = l\n    print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split()))\n    l = 8\n    m = 0\n    for j in range(n - l + 1):\n        d = 0\n        x = 0\n        o = 0\n        for k in range(l):\n            c = j + k\n            if s[c] == 'd':\n                o += 2 * a[k]\n            elif s[c] == 't':\n                o += 3 * a[k]\n            else:\n                o += a[k]\n            if s[c] == 'D':\n                d += 1\n            if s[c] == 'T':\n                x += 1\n        o *= 2 ** d * 3 ** x\n        if m < o:\n            m = o\n    print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split()))\n    l = 8\n    m = 0\n    for j in range(n - l + 1):\n        d = 0\n        x = 0\n        o = 0\n        for k in range(l):\n            c = j + k\n            if s[c] == 'd':\n                o += 2 * a[k]\n            elif s[c] == 't':\n                o += 3 * a[k]\n            else:\n                o += a[k]\n            if s[c] == 'D':\n                d += 1\n            if s[c] == 'T':\n                x += 1\n        o *= 2 ** d * 3 ** x\n        if m < o:\n            m = o\n    print(m)", "def integer_list():\n    return list(map(int, input().split()))\n\ndef string_list():\n    return list(map(str, input().split()))\n\ndef hetro_list():\n    return list(input().split())\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    points = integer_list()\n    ans = 0\n    for i in range(n - 7):\n        string = s[i:i + 8]\n        score = 0\n        count_D = 0\n        count_T = 0\n        for j in range(8):\n            if string[j] == '.':\n                score += points[j]\n            elif string[j] == 'd':\n                score += points[j] * 2\n            elif string[j] == 't':\n                score += points[j] * 3\n            elif string[j] == 'D':\n                score += points[j]\n                count_D += 1\n            else:\n                score += points[j]\n                count_T += 1\n        if count_D:\n            score *= 2 ** count_D\n        if count_T:\n            score *= 3 ** count_T\n        ans = max(ans, score)\n    print(ans)", "def listin():\n    a = list(map(int, input().split()))\n    return a\nfor tastcas in range(int(input())):\n    n = int(input())\n    s = input()\n    a = listin()\n    l = 8\n    maxi = 0\n    for i in range(n - l + 1):\n        Ds = 0\n        Ts = 0\n        score = 0\n        for j in range(l):\n            t = i + j\n            if s[t] == 'd':\n                score += 2 * a[j]\n            elif s[t] == 't':\n                score += 3 * a[j]\n            else:\n                score += a[j]\n            if s[t] == 'D':\n                Ds += 1\n            if s[t] == 'T':\n                Ts += 1\n        score *= 2 ** Ds * 3 ** Ts\n        if maxi < score:\n            maxi = score\n    print(maxi)", "from collections import defaultdict as dd\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    score = list(map(int, input().split()))\n    ans = []\n    k = 8\n    for i in range(n - k + 1):\n        trim = s[i:i + k]\n        cur = 0\n        D = 0\n        T = 0\n        for j in range(k):\n            if trim[j] == '.':\n                cur += score[j]\n            elif trim[j] == 'd':\n                cur += score[j] * 2\n            elif trim[j] == 't':\n                cur += score[j] * 3\n            elif trim[j] == 'D':\n                cur += score[j]\n                D += 1\n            else:\n                cur += score[j]\n                T += 1\n        if D:\n            cur *= pow(2, D)\n        if T:\n            cur *= pow(3, T)\n        ans.append(cur)\n    if len(ans) == 0:\n        ans = 0\n    else:\n        ans = max(ans)\n    print(ans)", "from collections import defaultdict as dd\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    score = list(map(int, input().split()))\n    ans = []\n    k = 8\n    for i in range(n - k + 1):\n        trim = s[i:i + k]\n        cur = 0\n        D = 0\n        T = 0\n        for j in range(k):\n            if trim[j] == '.':\n                cur += score[j]\n            elif trim[j] == 'd':\n                cur += score[j] * 2\n            elif trim[j] == 't':\n                cur += score[j] * 3\n            elif trim[j] == 'D':\n                cur += score[j]\n                D += 1\n            else:\n                cur += score[j]\n                T += 1\n        if D:\n            cur *= pow(2, D)\n        if T:\n            cur *= pow(3, T)\n        ans.append(cur)\n    if len(ans) == 0:\n        ans = 0\n    else:\n        ans = max(ans)\n    print(ans)", "from collections import defaultdict as dd\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    score = list(map(int, input().split()))\n    ans = []\n    k = 8\n    for i in range(n - k + 1):\n        trim = s[i:i + k]\n        cur = 0\n        D = 0\n        T = 0\n        for j in range(k):\n            if trim[j] == '.':\n                cur += score[j]\n            elif trim[j] == 'd':\n                cur += score[j] * 2\n            elif trim[j] == 't':\n                cur += score[j] * 3\n            elif trim[j] == 'D':\n                cur += score[j]\n                D += 1\n            else:\n                cur += score[j]\n                T += 1\n        if D:\n            cur *= pow(2, D)\n        if T:\n            cur *= pow(3, T)\n        ans.append(cur)\n    if len(ans) == 0:\n        ans = 0\n    else:\n        ans = max(ans)\n    print(ans)", "try:\n    T = int(input())\n    for i in range(T):\n        n = int(input())\n        s = input()\n        arr = [int(i) for i in input().strip().split(' ')]\n        res = 1\n        result = 0\n        for j in range(n - 7):\n            res = 1\n            res1 = 0\n            s1 = s[j:j + 8]\n            for i in range(8):\n                if s1[i] == 'D':\n                    res = res * 2\n                    res1 += arr[i]\n                elif s1[i] == 'T':\n                    res = res * 3\n                    res1 = res1 + arr[i]\n                elif s1[i] == 'd':\n                    res1 = res1 + arr[i] * 2\n                elif s1[i] == 't':\n                    res1 += arr[i] * 3\n                else:\n                    res1 += arr[i]\n            res = res * res1\n            result = max(res, result)\n        print(result)\nexcept EOFError:\n    pass", "for e in range(int(input())):\n    n = int(input())\n    s = input()\n    l = list(map(int, input().split()))\n    s = list(s)\n    m = 0\n    for i in range(n - 7):\n        total = 0\n        k = 0\n        DT = 1\n        for j in range(i, i + 8):\n            if s[j] == '.':\n                total += l[k]\n            elif s[j] == 'd':\n                total += 2 * l[k]\n            elif s[j] == 't':\n                total += 3 * l[k]\n            elif s[j] == 'D':\n                DT = DT * 2\n                total += l[k]\n            elif s[j] == 'T':\n                DT = DT * 3\n                total += l[k]\n            k += 1\n        total = total * DT\n        m = max(total, m)\n    print(m)", "maxpoints = []\n\ndef maxvaluez(num, arr, sc):\n    i = 0\n    points = 0\n    mult = 1\n    while i < 8:\n        if arr[i] == '.':\n            points += sc[i]\n            i += 1\n        elif arr[i] == 'd':\n            points += 2 * sc[i]\n            i += 1\n        elif arr[i] == 't':\n            points += 3 * sc[i]\n            i += 1\n        elif arr[i] == 'D':\n            mult = mult * 2\n            points += sc[i]\n            i += 1\n        elif arr[i] == 'T':\n            mult = mult * 3\n            points += sc[i]\n            i += 1\n        else:\n            i += 1\n    points = points * mult\n    maxpoints.append(points)\n    return points\n\ndef maxpicker(num, arr, sc):\n    for i in range(num - 7):\n        maxvaluez(num, arr[i:], sc)\n    return max(maxpoints)\ntry:\n    t = int(input())\n    for i in range(t):\n        num = int(input())\n        arr = input()\n        sc = list(map(int, input().split()))\n        print(maxpicker(num, arr, sc))\n        maxpoints = []\nexcept:\n    pass", "t = int(input())\nfor i in range(t):\n    num = int(input())\n    arr = input()\n    sc = list(map(int, input().split()))\n    maxs = 0\n    for z in range(num - 7):\n        score = 0\n        mul = 1\n        for b in range(8):\n            if arr[z + b] == 'd':\n                score += sc[b] * 2\n            elif arr[z + b] == 't':\n                score += sc[b] * 3\n            elif arr[z + b] == 'D':\n                mul *= 2\n                score += sc[b]\n            elif arr[z + b] == 'T':\n                mul *= 3\n                score += sc[b]\n            else:\n                score += sc[b]\n        score *= mul\n        if score > maxs:\n            maxs = score\n    print(maxs)", "T = int(input())\nmax_score = []\nfor _ in range(T):\n    N = int(input())\n    string = input()\n    score = input().split()\n    score = list(map(int, score))\n    noi = N - 8 + 1\n    maximum = 0\n    for i in range(noi):\n        dd = 0\n        ttt = 0\n        scrs = string[i:i + 8]\n        num_scrs = []\n        for scr in scrs:\n            if scr == '.':\n                num_scrs.append(1)\n            elif scr == 'd':\n                num_scrs.append(2)\n            elif scr == 't':\n                num_scrs.append(3)\n            elif scr == 'D':\n                num_scrs.append(1)\n                dd += 1\n            elif scr == 'T':\n                num_scrs.append(1)\n                ttt += 1\n        s = 0\n        for i in range(8):\n            s += num_scrs[i] * score[i]\n        s *= 2 ** dd\n        s *= 3 ** ttt\n        if s > maximum:\n            maximum = s\n    max_score.append(maximum)\nfor s in max_score:\n    print(s)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    s = str(input())\n    l = list(map(int, input().split()))\n    sum1 = sum(l)\n    finalSum = 0\n    for i in range(n - 7):\n        sum2 = 0\n        dw = 1\n        tw = 1\n        for k in range(i, i + 8):\n            if s[k] == 'd':\n                sum2 = sum2 + 2 * l[k - i]\n            elif s[k] == 't':\n                sum2 = sum2 + 3 * l[k - i]\n            elif s[k] == 'D':\n                dw *= 2\n                sum2 = sum2 + l[k - i]\n            elif s[k] == 'T':\n                tw *= 3\n                sum2 = sum2 + l[k - i]\n            else:\n                sum2 = sum2 + l[k - i]\n        finalSum = max(finalSum, sum2 * dw * tw)\n    print(finalSum)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    N = [int(i) for i in input().split()]\n    dic = {'.': 1, 'd': 2, 't': 3, 'D': 1, 'T': 1}\n    maxx = 0\n    for i in range(n - 8 + 1):\n        st = s[i:i + 8]\n        total = 0\n        D = 0\n        T = 0\n        for j in range(8):\n            if st[j] in ['.', 'd', 't']:\n                total = total + dic[st[j]] * N[j]\n            elif st[j] == 'D':\n                total = total + dic[st[j]] * N[j]\n                D = D + 1\n            else:\n                total = total + dic[st[j]] * N[j]\n                T = T + 1\n        total = total * 2 ** D\n        total = total * 3 ** T\n        if maxx < total:\n            maxx = total\n    print(maxx)", "T = int(input())\nmax_score = []\nfor _ in range(T):\n    N = int(input())\n    string = input()\n    score = input().split()\n    score = list(map(int, score))\n    noi = N - 8 + 1\n    maximum = 0\n    for i in range(noi):\n        dd = 0\n        ttt = 0\n        scrs = string[i:i + 8]\n        num_scrs = []\n        for scr in scrs:\n            if scr == '.':\n                num_scrs.append(1)\n            elif scr == 'd':\n                num_scrs.append(2)\n            elif scr == 't':\n                num_scrs.append(3)\n            elif scr == 'D':\n                num_scrs.append(1)\n                dd += 1\n            elif scr == 'T':\n                num_scrs.append(1)\n                ttt += 1\n        s = 0\n        for i in range(8):\n            s += num_scrs[i] * score[i]\n        s *= 2 ** dd\n        s *= 3 ** ttt\n        if s > maximum:\n            maximum = s\n    max_score.append(maximum)\nfor s in max_score:\n    print(s)", "T = int(input())\nwhile T:\n    N = int(input())\n    s = str(input())\n    l = list(map(int, input().split()))\n    re = []\n    for i in range(N - 7):\n        sum = 0\n        d1 = 1\n        t1 = 1\n        for j in range(len(l)):\n            if s[i + j] == '.':\n                sum = sum + l[j]\n            elif s[i + j] == 'd':\n                sum = sum + l[j] * 2\n            elif s[i + j] == 't':\n                sum = sum + l[j] * 3\n            elif s[i + j] == 'D':\n                sum = sum + l[j]\n                d1 = d1 * 2\n            elif s[i + j] == 'T':\n                sum = sum + l[j]\n                t1 = t1 * 3\n        if d1 > 1 and t1 > 1:\n            sum = sum * d1 * t1\n        elif d1 > 1:\n            sum = sum * d1\n        else:\n            sum = sum * t1\n        re.append(sum)\n    print(max(re))\n    T = T - 1", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    board = input()\n    b = list(board)\n    maxscore = 0\n    scores = list(map(int, input().split()))\n    for i in range(0, n - 7):\n        multiplier = 1\n        score = 0\n        for j in range(i, i + 8):\n            if board[j] == '.':\n                score += scores[j - i]\n            elif board[j] == 'd':\n                score += scores[j - i] * 2\n            elif board[j] == 't':\n                score += scores[j - i] * 3\n            elif board[j] == 'T':\n                score += scores[j - i]\n                multiplier *= 3\n            else:\n                score += scores[j - i]\n                multiplier *= 2\n        maxscore = max(maxscore, multiplier * score)\n    print(maxscore)", "T = int(input())\nfor j in range(T):\n    n = int(input())\n    ar = input()\n    ar_v = list(map(int, input().split()))\n    mx = 0\n    for i in range(n - 7):\n        sm = 0\n        m = 1\n        for k in range(8):\n            if ar[i + k] == '.':\n                sm += ar_v[k]\n            elif ar[i + k] == 'd':\n                sm = sm + 2 * ar_v[k]\n            elif ar[i + k] == 't':\n                sm = sm + 3 * ar_v[k]\n            elif ar[i + k] == 'D':\n                sm = sm + ar_v[k]\n                m *= 2\n            elif ar[i + k] == 'T':\n                sm = sm + ar_v[k]\n                m *= 3\n        sm = sm * m\n        if mx < sm:\n            mx = sm\n    print(mx)", "T = int(input())\nfor j in range(T):\n    n = int(input())\n    ar = input()\n    ar_v = list(map(int, input().split()))\n    mx = 0\n    for i in range(n - 7):\n        sm = 0\n        m = 1\n        for k in range(8):\n            if ar[i + k] == '.':\n                sm += ar_v[k]\n            elif ar[i + k] == 'd':\n                sm = sm + 2 * ar_v[k]\n            elif ar[i + k] == 't':\n                sm = sm + 3 * ar_v[k]\n            elif ar[i + k] == 'D':\n                sm = sm + ar_v[k]\n                m *= 2\n            elif ar[i + k] == 'T':\n                sm = sm + ar_v[k]\n                m *= 3\n        sm = sm * m\n        if mx < sm:\n            mx = sm\n    print(mx)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = str(input())\n    A = list(map(int, input().split()))\n    maxi = 0\n    for i in range(0, n - 7):\n        summ = 0\n        new = ''\n        k = 0\n        for j in range(i, i + 8):\n            if s[j] == 'D' or s[j] == 'T':\n                new = new + s[j]\n            if s[j] == 'd':\n                summ += 2 * A[k]\n            elif s[j] == 't':\n                summ += 3 * A[k]\n            else:\n                summ += A[k]\n            k += 1\n        for x in new:\n            if x == 'D':\n                summ = 2 * summ\n            else:\n                summ = 3 * summ\n        if summ > maxi:\n            maxi = summ\n    print(maxi)\n    t = t - 1", "import math\nimport os\nimport random\nimport re\nimport sys\n\ndef findMaxScore(mod, arr):\n    m = 0\n    for i in range(0, len(mod) - 7):\n        m = max(m, getScore(mod[i:i + 8], arr))\n    return m\n\ndef getScore(s, arr):\n    m = 1\n    score = 0\n    for i in range(0, 8):\n        if s[i] == 'd':\n            score += 2 * arr[i]\n        elif s[i] == 't':\n            score += 3 * arr[i]\n        elif s[i] == 'D':\n            score += arr[i]\n            m *= 2\n        elif s[i] == 'T':\n            score += arr[i]\n            m *= 3\n        else:\n            score += arr[i]\n    return m * score\ntry:\n    n = int(input())\n    for _ in range(n):\n        l = int(input())\n        mod = input()\n        arr = [int(y) for y in input().split()]\n        print(findMaxScore(mod, arr))\nexcept EOFError:\n    x = 2", "def calc(W, board):\n    d = t = score = 0\n    for i in range(8):\n        if board[i] == 'd':\n            score += 2 * W[i]\n        elif board[i] == 't':\n            score += 3 * W[i]\n        elif board[i] == 'D':\n            d += 1\n            score += W[i]\n        elif board[i] == 'T':\n            t += 1\n            score += W[i]\n        else:\n            score += W[i]\n    score *= 2 ** d * 3 ** t\n    return score\noutput = ''\nfor test in range(int(input())):\n    N = int(input())\n    board = input()\n    W = [int(x) for x in input().split()]\n    m = -1\n    for i in range(N - 7):\n        m = max(m, calc(W, board[i:i + 8]))\n    output += str(m) + '\\n'\nprint(output.rstrip())", "for _ in range(int(input())):\n    n = int(input())\n    B = input()\n    L = [int(i) for i in input().split()]\n    max_score = 0\n    for i in range(n - 7):\n        L1 = []\n        B1 = []\n        for j in range(8):\n            c = B[i + j]\n            if c == '.':\n                L1.append(L[j])\n            elif c == 'd':\n                L1.append(2 * L[j])\n            elif c == 't':\n                L1.append(3 * L[j])\n            else:\n                L1.append(L[j])\n                B1.append(c)\n        score = sum(L1)\n        for c in B1:\n            if c == 'D':\n                score *= 2\n            else:\n                score *= 3\n        if score > max_score:\n            max_score = score\n    print(max_score)", "test = int(input())\nfor i in range(test):\n    c = 0\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split()))\n    for j in range(len(s) - 7):\n        tc = 0\n        cd = 0\n        ct = 0\n        temp = []\n        temp = s[j:j + 8]\n        for k in range(len(temp)):\n            if temp[k] == 'd':\n                tc += a[k] * 2\n            elif temp[k] == 't':\n                tc += a[k] * 3\n            elif temp[k] == 'D':\n                cd += 1\n                tc += a[k]\n            elif temp[k] == 'T':\n                ct += 1\n                tc += a[k]\n            else:\n                tc += a[k]\n        tc = tc * 2 ** cd\n        tc = tc * 3 ** ct\n        if tc > c:\n            c = tc\n    print(c)", "t = input()\nt = int(t)\nwhile t > 0:\n    t = t - 1\n    N = input()\n    N = int(N)\n    s = input()\n    w = input().split(' ')\n    for i in range(0, 8):\n        w[i] = int(w[i])\n    o = [0] * (N - 7)\n    for i in range(0, N - 7):\n        D = 0\n        T = 0\n        for j in range(0, 8):\n            if s[j + i] == '.':\n                o[i] += w[j]\n            elif s[j + i] == 'd':\n                o[i] += 2 * w[j]\n            elif s[j + i] == 't':\n                o[i] += 3 * w[j]\n            elif s[j + i] == 'D':\n                o[i] += w[j]\n                D += 1\n            else:\n                o[i] += w[j]\n                T += 1\n        D = 2 ** D\n        T = 3 ** T\n        o[i] = o[i] * D * T\n    maxx = max(o)\n    print(maxx)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = input()\n    B = input()\n    C = list(A)\n    D = list(map(int, B.split()))\n    E = []\n    sum = 0\n    b = 1\n    for i in range(len(D)):\n        sum = sum + D[i]\n        a = sum\n    for i in range(0, N - 7):\n        for j in range(i, i + 8):\n            if C[j] == '.':\n                sum = sum\n            elif C[j] == 'd':\n                sum = sum + D[j - i]\n            elif C[j] == 't':\n                sum = sum + 2 * D[j - i]\n            elif C[j] == 'D':\n                b = b * 2\n            elif C[j] == 'T':\n                b = b * 3\n        sum = b * sum\n        E.append(sum)\n        sum = a\n        b = 1\n    F = list(map(int, E))\n    print(max(F))", "t = int(input())\nd = {'.': 1, 'd': 2, 't': 3}\nfor _ in range(t):\n    n = int(input())\n    st = input()\n    l = list(map(int, input().split()))\n    maxval = 0\n    for i in range(n - 7):\n        val = 0\n        (Tu, Du) = (0, 0)\n        for j in range(8):\n            if st[i + j] == 'T':\n                Tu += 1\n                val += l[j]\n            elif st[i + j] == 'D':\n                Du += 1\n                val += l[j]\n            else:\n                val += l[j] * d[st[i + j]]\n        val *= pow(3, Tu) * pow(2, Du)\n        val = int(val)\n        maxval = max(maxval, val)\n    print(maxval)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    a = input()\n    l = list(a)\n    res = []\n    d = input().split()\n    for i in range(n - 7):\n        lis = l[i:i + 8]\n        s = 0\n        c_d = 0\n        c_t = 0\n        for j in range(8):\n            if lis[j] == '.':\n                s += int(d[j]) * 1\n            elif lis[j] == 'd':\n                s += int(d[j]) * 2\n            elif lis[j] == 't':\n                s += int(d[j]) * 3\n            elif lis[j] == 'D':\n                s += int(d[j]) * 1\n                c_d += 1\n            elif lis[j] == 'T':\n                s += int(d[j]) * 1\n                c_t += 1\n        n_d = 2 ** c_d\n        n_t = 3 ** c_t\n        if n_t != 0:\n            s = s * n_t\n        if n_d != 0:\n            s = s * n_d\n        res.append(s)\n    mx = max(res)\n    print(mx)", "def maximumScoreingPosition(iitmandiint, board, N):\n    array = []\n    for k in range(N - 7):\n        sums = 0\n        wordMultipleir = 1\n        for i in range(8):\n            if board[k + i] == '.':\n                sums += iitmandiint[i]\n            elif board[k + i] == 'd':\n                sums += iitmandiint[i] * 2\n            elif board[k + i] == 't':\n                sums += iitmandiint[i] * 3\n            elif board[k + i] == 'D':\n                sums += iitmandiint[i]\n                wordMultipleir *= 2\n            elif board[k + i] == 'T':\n                sums += iitmandiint[i]\n                wordMultipleir *= 3\n        array.append(sums * wordMultipleir)\n    return max(array)\nT = int(input())\narray = []\nfor i in range(T):\n    N = int(input())\n    board = input()\n    iitmandiint = [int(i) for i in input().split()]\n    array.append(maximumScoreingPosition(iitmandiint, board, N))\nfor i in array:\n    print(i)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    s = input()\n    m1 = input()\n    m = m1.split()\n    for ii in range(8):\n        m[ii] = int(m[ii])\n    k = 0\n    l = 0\n    for j in range(N - 7):\n        n = []\n        for ij in range(len(m)):\n            n.append(m[ij])\n        for jj in range(8):\n            if s[j + jj] == 'd':\n                n[jj] = 2 * n[jj]\n            elif s[j + jj] == 't':\n                n[jj] = 3 * n[jj]\n        l = sum(n)\n        for jj in range(8):\n            if s[j + jj] == 'D':\n                l = l * 2\n            elif s[j + jj] == 'T':\n                l = l * 3\n        k = max(k, l)\n    print(k)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    scr = map(int, input().split())\n    scr = list(scr)\n    score = 0\n    for j in range(n - 8 + 1):\n        scr1 = 0\n        for k in range(j, j + 8):\n            if s[k] == 'd':\n                scr1 += 2 * scr[k - j]\n            elif s[k] == 't':\n                scr1 += 3 * scr[k - j]\n            else:\n                scr1 += scr[k - j]\n        for k in range(j, j + 8):\n            if s[k] == 'D':\n                scr1 = scr1 * 2\n            elif s[k] == 'T':\n                scr1 = scr1 * 3\n        if scr1 > score:\n            score = scr1\n    print(score)", "def f(a, x):\n    r = sum(a)\n    p = 1\n    for i in range(len(x)):\n        if x[i] == 't':\n            r += 2 * a[i]\n        elif x[i] == 'd':\n            r += a[i]\n        elif x[i] == 'D':\n            p *= 2\n        elif x[i] == 'T':\n            p *= 3\n    return p * r\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    m = 0\n    a = [int(x) for x in input().split()]\n    t = len(s) - len(a) + 1\n    for i in range(t):\n        l = f(a, s[i:len(s) + i - t + 1])\n        if l > m:\n            m = l\n    print(m)", "import math\n\ndef main():\n    t = int(input())\n    while t:\n        t -= 1\n        n = int(input())\n        s = input()\n        point = input().split()\n        point = [int(i) for i in point]\n        max = 0\n        for i in range(n - 7):\n            score = 0\n            d_freq = 0\n            t_freq = 0\n            for j in range(8):\n                if s[i + j] == 'd':\n                    score += 2 * point[j]\n                elif s[i + j] == 't':\n                    score += 3 * point[j]\n                elif s[i + j] == 'D':\n                    d_freq += 1\n                    score += point[j]\n                elif s[i + j] == 'T':\n                    t_freq += 1\n                    score += point[j]\n                else:\n                    score += point[j]\n            score *= math.pow(2, d_freq)\n            score *= math.pow(3, t_freq)\n            if score > max:\n                max = score\n        print(int(max))\nmain()", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    st = input()\n    maximum = 0\n    count = 0\n    ls = list(map(int, input().strip().split()))\n    for i in range(n - 7):\n        s = st[i:i + 8]\n        dd = 0\n        tt = 0\n        som = 0\n        for j in range(8):\n            if s[j] == '.':\n                som = som + ls[j]\n            elif s[j] == 'd':\n                som = som + 2 * ls[j]\n            elif s[j] == 't':\n                som = som + 3 * ls[j]\n            elif s[j] == 'D':\n                dd = dd + 1\n                som = som + ls[j]\n            elif s[j] == 'T':\n                tt = tt + 1\n                som = som + ls[j]\n        for y in range(dd):\n            som = som * 2\n        for z in range(tt):\n            som = som * 3\n        if som > maximum:\n            maximum = som\n    print(maximum)", "t = int(input())\nans = list()\nwhile t > 0:\n    n = int(input())\n    lay = input()\n    pos = n - 7\n    scr = 0\n    letters = [int(num) for num in input().split()]\n    for x in range(0, pos):\n        temp = 0\n        mul = 1\n        for i in range(0, 8):\n            if lay[x + i] == '.':\n                temp += letters[i]\n            elif lay[x + i] == 'd':\n                temp += letters[i] * 2\n            elif lay[x + i] == 't':\n                temp += letters[i] * 3\n            elif lay[x + i] == 'D':\n                mul *= 2\n                temp += letters[i]\n            else:\n                mul *= 3\n                temp += letters[i]\n        temp *= mul\n        if temp > scr:\n            scr = temp\n    ans.append(scr)\n    t = t - 1\nfor x in ans:\n    print(int(x))", "def fun(l, m):\n    s = 0\n    d = 0\n    z = 0\n    for i in range(len(m)):\n        if m[i] == '.':\n            s += l[i]\n        elif m[i] == 'd':\n            s += l[i] * 2\n        elif m[i] == 't':\n            s += l[i] * 3\n        elif m[i] == 'D':\n            s += l[i]\n            d += 1\n        elif m[i] == 'T':\n            s += l[i]\n            z += 1\n    s = s * 2 ** d\n    s = s * 3 ** z\n    return s\nt = int(input())\nfor kmj in range(t):\n    n = int(input())\n    sc = list(input())\n    l = list(map(int, input().split()))\n    max = fun(l, sc[:8])\n    for i in range(len(sc) - 7):\n        x = sc[i:i + 8]\n        z = fun(l, x)\n        if z > max:\n            max = z\n    print(max)", "testcases = int(input())\nfor i in range(testcases):\n    N = int(input())\n    board = str(input())\n    scores = list(input().split(' '))\n    maxAns = 0\n    for i in range(N - 7):\n        subBoard = board[i:i + 8]\n        preAns = 0\n        double = 0\n        triple = 0\n        multiplier = 1\n        ans = 0\n        for j in range(8):\n            if subBoard[j] == 'd':\n                preAns += int(scores[j]) * 2\n            elif subBoard[j] == 't':\n                preAns += int(scores[j]) * 3\n            else:\n                preAns += int(scores[j])\n            if subBoard[j] == 'D':\n                double += 1\n            if subBoard[j] == 'T':\n                triple += 1\n        multiplier = 2 ** double * 3 ** triple\n        ans = preAns * multiplier\n        if ans > maxAns:\n            maxAns = ans\n    print(maxAns)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    str = input()\n    iit = list(map(int, input().split()))\n    max = 0\n    for j in range(n - 7):\n        sum = 0\n        d = 0\n        t = 0\n        for k in range(8):\n            sum += iit[k]\n            if str[j + k] == 'D':\n                d += 1\n            elif str[j + k] == 'T':\n                t += 1\n            elif str[j + k] == 'd':\n                sum += iit[k]\n            elif str[j + k] == 't':\n                sum += 2 * iit[k]\n        sum = sum * 2 ** d\n        sum = sum * 3 ** t\n        if sum >= max:\n            max = sum\n    print(max)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    l = input()\n    value = input().split(' ')\n    for i in range(8):\n        value[i] = int(value[i])\n    m = [0] * (n - 7)\n    for i in range(n - 7):\n        D = 0\n        T = 0\n        for j in range(8):\n            if l[j + i] == '.':\n                m[i] += value[j]\n            if l[j + i] == 'd':\n                m[i] += 2 * value[j]\n            if l[j + i] == 't':\n                m[i] += 3 * value[j]\n            if l[j + i] == 'D':\n                m[i] += value[j]\n                D += 1\n            if l[j + i] == 'T':\n                m[i] += value[j]\n                T += 1\n        m[i] = m[i] * 2 ** D * 3 ** T\n    print(max(m))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    str = input()\n    iit = list(map(int, input().split()))\n    max = 0\n    for j in range(n - 7):\n        sum = 0\n        d = 0\n        t = 0\n        for k in range(8):\n            sum += iit[k]\n            if str[j + k] == 'D':\n                d += 1\n            elif str[j + k] == 'T':\n                t += 1\n            elif str[j + k] == 'd':\n                sum += iit[k]\n            elif str[j + k] == 't':\n                sum += 2 * iit[k]\n        sum = sum * 2 ** d\n        sum = sum * 3 ** t\n        if sum >= max:\n            max = sum\n    print(max)", "T = int(input())\n\ndef fnc(s, m):\n    sum = 0\n    lst = ['.', 'D', 'T']\n    for i in range(8):\n        if s[i] in lst:\n            sum = sum + m[i]\n        else:\n            if s[i] == 'd':\n                sum = sum + 2 * m[i]\n            if s[i] == 't':\n                sum = sum + 3 * m[i]\n    v1 = s.count('D')\n    v2 = s.count('T')\n    sum = sum * 2 ** v1\n    sum = sum * 3 ** v2\n    return sum\nfor i in range(T):\n    N = int(input())\n    s = input()\n    A = []\n    ans = []\n    m = input().split()\n    for i in range(8):\n        m[i] = int(m[i])\n    for j in range(N - 7):\n        A.append(s[j:j + 8])\n    for x in A:\n        ans.append(fnc(x, m))\n    print(max(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    board = input()\n    weight = list(map(int, input().split()))\n    maxscore = -1\n    for i in range(n - 8 + 1):\n        squares = board[i:]\n        score = 0\n        mul = []\n        for j in range(8):\n            if squares[j] == 'd':\n                score += 2 * weight[j]\n            elif squares[j] == 't':\n                score += 3 * weight[j]\n            elif squares[j] == 'D':\n                score += weight[j]\n                mul.append(squares[j])\n            elif squares[j] == 'T':\n                score += weight[j]\n                mul.insert(0, squares[j])\n            elif squares[j] == '.':\n                score += weight[j]\n        while mul:\n            x = mul.pop()\n            if x == 'D':\n                score *= 2\n            elif x == 'T':\n                score *= 3\n        maxscore = max(maxscore, score)\n    print(maxscore)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    p = []\n    b = input().split()\n    for j in range(8):\n        b[j] = int(b[j])\n    for k in range(n - 7):\n        s = 0\n        for h in range(8):\n            if a[k + h] == 'd':\n                s = s + 2 * b[h]\n            elif a[k + h] == 't':\n                s = s + 3 * b[h]\n            else:\n                s = s + b[h]\n        D = a[k:k + 8].count('D')\n        T = a[k:k + 8].count('T')\n        s = s * pow(2, D)\n        s = s * pow(3, T)\n        p.append(s)\n    print(max(p))", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    b = input()\n    s = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 7):\n        score = 0\n        d = 0\n        t = 0\n        for j in range(8):\n            if b[i + j] == '.':\n                score += s[j]\n            elif b[i + j] == 'd':\n                score += 2 * s[j]\n            elif b[i + j] == 't':\n                score += 3 * s[j]\n            elif b[i + j] == 'D':\n                score += s[j]\n                d += 1\n            else:\n                score += s[j]\n                t += 1\n        score = score * pow(2, d)\n        score = score * pow(3, t)\n        ans = max(ans, score)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = list(map(int, input().strip().split()))\n    e = []\n    for j in range(n - 7):\n        f = b.copy()\n        g = 0\n        c = 0\n        d = 0\n        for k in range(8):\n            if a[j + k] == 'd':\n                f[k] = f[k] * 2\n            elif a[j + k] == 't':\n                f[k] = f[k] * 3\n            elif a[j + k] == 'D':\n                c = c + 1\n            elif a[j + k] == 'T':\n                d = d + 1\n        for l in range(len(f)):\n            g = g + f[l]\n        e.append(g * 2 ** c * 3 ** d)\n    print(max(e))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    board = input()\n    points = list(map(int, input().split()))\n    maxx = 0\n    for i in range(n - 7):\n        dw = 0\n        tw = 0\n        score = 0\n        for j in range(8):\n            if board[i + j] == '.':\n                score += points[j]\n            elif board[i + j] == 'd':\n                score += 2 * points[j]\n            elif board[i + j] == 't':\n                score += 3 * points[j]\n            elif board[i + j] == 'D':\n                score += points[j]\n                dw += 1\n            elif board[i + j] == 'T':\n                score += points[j]\n                tw += 1\n        score = score * 2 ** dw\n        score = score * 3 ** tw\n        if score > maxx:\n            maxx = score\n    print(maxx)", "def score(B, L):\n    T = 0\n    D = 0\n    S = 0\n    for (i, b) in enumerate(B):\n        if b == 't':\n            S += L[i] * 2\n        elif b == 'd':\n            S += L[i]\n        elif b == 'D':\n            D += 1\n        elif b == 'T':\n            T += 1\n        S += L[i]\n    return S * 2 ** D * 3 ** T\nT = int(input())\nfor k in range(T):\n    N = int(input())\n    B = list(input())\n    L = list(map(int, input().split()))\n    V = len(B) - 8 + 1\n    maxi = 0\n    for l in range(V):\n        tmp = score(B[l:l + 8], L)\n        if tmp > maxi:\n            maxi = tmp\n    print(maxi)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    board = list(input())\n    points = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(0, n - 7):\n        double = 0\n        triple = 0\n        point = 0\n        bo = board[i:i + 8]\n        for b in range(len(bo)):\n            if bo[b] == 'd':\n                point += points[b] * 2\n            elif bo[b] == 't':\n                point += points[b] * 3\n            else:\n                point += points[b]\n            if bo[b] == 'D':\n                double += 1\n            elif bo[b] == 'T':\n                triple += 1\n        point = point * pow(2, double)\n        point = point * pow(3, triple)\n        ans = max(ans, point)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    b = input()\n    s = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 7):\n        score = 0\n        d = 0\n        t = 0\n        for j in range(8):\n            if b[i + j] == '.':\n                score += s[j]\n            elif b[i + j] == 'd':\n                score += 2 * s[j]\n            elif b[i + j] == 't':\n                score += 3 * s[j]\n            elif b[i + j] == 'D':\n                score += s[j]\n                d += 1\n            else:\n                score += s[j]\n                t += 1\n        score = score * pow(2, d) * pow(3, t)\n        ans = max(ans, score)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ar = input().split()\n    for j in range(8):\n        ar[j] = int(ar[j])\n    max = 0\n    for j in range(n - 7):\n        p = 0\n        a = 0\n        b = 0\n        for k in range(8):\n            if s[j + k] == 'd':\n                p = p + ar[k] * 2\n            elif s[j + k] == 't':\n                p = p + ar[k] * 3\n            elif s[j + k] == 'D':\n                a = a + 1\n                p = p + ar[k]\n            elif s[j + k] == 'T':\n                b = b + 1\n                p = p + ar[k]\n            else:\n                p = p + ar[k]\n        p = p * 2 ** a * 3 ** b\n        if p > max:\n            max = p\n    print(max)", "def f(l, p):\n    a = 0\n    for i in range(8):\n        if l[i] == 'd':\n            a += p[i] * 2\n        elif l[i] == 't':\n            a += p[i] * 3\n        else:\n            a += p[i]\n    a = a * 2 ** l.count('D') * 3 ** l.count('T')\n    return a\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(input())\n    p = list(map(int, input().split()))\n    q = []\n    for i in range(len(l) - 7):\n        q.append(f(l[i:i + 8], p))\n    print(max(q))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    v = list(map(int, input().split()))\n    ma = -1\n    for x in range(n - 8 + 1):\n        m = 1\n        l = s[x:x + 8]\n        r = v.copy()\n        for i in range(8):\n            if l[i] == 'd':\n                r[i] *= 2\n            if l[i] == 't':\n                r[i] *= 3\n            if l[i] == 'D':\n                m *= 2\n            if l[i] == 'T':\n                m *= 3\n        ma = max(ma, sum(r) * m)\n    print(ma)", "for i in range(int(input())):\n    n = int(input())\n    a = input()\n    A = list(a)\n    S = list(map(int, input().split()))\n    mas = 0\n    for i in range(n - 7):\n        s = 0\n        d = 0\n        t = 0\n        for j in range(i, i + 8):\n            if A[j] == 'd':\n                s += S[j - i] * 2\n            elif A[j] == 't':\n                s += S[j - i] * 3\n            else:\n                s += S[j - i]\n            if A[j] == 'D':\n                d += 1\n            if A[j] == 'T':\n                t += 1\n        ts = s\n        if d > 0:\n            ts = ts * 2 ** d\n        if t > 0:\n            ts = ts * 3 ** t\n        if mas < ts:\n            mas = ts\n    print(mas)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    b = input()\n    s = [int(k) for k in input().split()]\n    ans = 0\n    for i in range(n - 7):\n        score = 0\n        d = 0\n        t = 0\n        for j in range(8):\n            if b[i + j] == '.':\n                score += s[j]\n            elif b[i + j] == 'd':\n                score += 2 * s[j]\n            elif b[i + j] == 't':\n                score += 3 * s[j]\n            elif b[i + j] == 'D':\n                score += s[j]\n                d += 1\n            else:\n                score += s[j]\n                t += 1\n        score = score * pow(2, d) * pow(3, t)\n        ans = max(ans, score)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    str = input()\n    ar = input().split()\n    br = []\n    for j in ar:\n        br.append(int(j))\n    score = 0\n    for j in range(n - 7):\n        bf = 1\n        sum = 0\n        for k in range(8):\n            f = 1\n            if str[j + k] == 'd':\n                f = 2\n            elif str[j + k] == 't':\n                f = 3\n            elif str[j + k] == 'D':\n                bf = bf * 2\n            elif str[j + k] == 'T':\n                bf = bf * 3\n            sum = sum + f * br[k]\n        sum = sum * bf\n        if sum > score:\n            score = sum\n    print(score)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    l = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 8 + 1):\n        x = 0\n        d = 0\n        t = 0\n        m = 0\n        for j in range(i, i + 8):\n            if s[j] == '.':\n                x += l[m]\n            elif s[j] == 'd':\n                x += 2 * l[m]\n            elif s[j] == 't':\n                x += 3 * l[m]\n            elif s[j] == 'D':\n                x += l[m]\n                d += 1\n            else:\n                x += l[m]\n                t += 1\n            m += 1\n        x = x * 2 ** d\n        x = x * 3 ** t\n        c = max(c, x)\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = list(map(int, input().split()))\n    maxpoints = 0\n    word = sum(b)\n    for i in range(n - 7):\n        m = 1\n        points = word\n        for j in range(8):\n            if a[i + j] == 'd':\n                points += b[j]\n            elif a[i + j] == 't':\n                points += b[j] * 2\n            elif a[i + j] == 'D':\n                m *= 2\n            elif a[i + j] == 'T':\n                m *= 3\n        points *= m\n        if points > maxpoints:\n            maxpoints = points\n    print(maxpoints)", "for i in range(int(input())):\n    a = int(input())\n    b = input()\n    c = list(map(int, input().split()))\n    m = sum(c)\n    f = []\n    for j in range(a - 7):\n        l = m\n        z = 1\n        y = 1\n        for k in range(j, j + 8):\n            if b[k] == '.':\n                continue\n            elif b[k] == 'd':\n                l += c[k - j]\n            elif b[k] == 't':\n                l += c[k - j] * 2\n            elif b[k] == 'D':\n                y = y * 2\n            else:\n                z = z * 3\n        f.append(l * y * z)\n    print(max(f))", "for _ in range(int(input())):\n    N = int(input())\n    S = input()\n    V = list(map(int, input().split()))\n    vals = []\n    for start in range(N - 7):\n        double_word = 0\n        triple_word = 0\n        score = 0\n        for (i, x) in enumerate(S[start:start + 8]):\n            if x == '.':\n                score += V[i]\n            elif x == 'd':\n                score += V[i] * 2\n            elif x == 't':\n                score += V[i] * 3\n            elif x == 'D':\n                score += V[i]\n                double_word += 1\n            else:\n                score += V[i]\n                triple_word += 1\n        score = score * 2 ** double_word * 3 ** triple_word\n        vals.append(score)\n    print(max(vals))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    num = [int(j) for j in input().split()]\n    ma = 0\n    for j in range(n - 7):\n        s2 = s[j:j + 8]\n        Dcount = 0\n        Tcount = 0\n        a = num[:]\n        for k in range(8):\n            if s2[k] == '.':\n                continue\n            elif s2[k] == 'd':\n                a[k] *= 2\n            elif s2[k] == 't':\n                a[k] *= 3\n            elif s2[k] == 'D':\n                Dcount += 1\n            else:\n                Tcount += 1\n        su = sum(a)\n        su *= 2 ** Dcount\n        su *= 3 ** Tcount\n        if su > ma:\n            ma = su\n    print(ma)"]