["from collections import Counter\nfrom collections import defaultdict\n\ndef judge(c1, c2):\n    for k in range(26):\n        c = chr(k + ord('a'))\n        if c1[c] < c2[c]:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    C = input()\n    counter1 = Counter(C)\n    counter2 = defaultdict(int)\n    for _ in range(int(input())):\n        s = input()\n        for c in s:\n            counter2[c] += 1\n    print(judge(counter1, counter2))", "for i in range(int(input())):\n    (p, m) = map(str, input().split())\n    par = p + m\n    name = ''\n    for i in range(int(input())):\n        name += input()\n    res = True\n    for char in name:\n        if char in par:\n            par = par.replace(char, '', 1)\n        else:\n            res = False\n    print('YES' if res else 'NO')", "for i in range(int(input())):\n    (a, b) = map(str, input().split())\n    c = a + b\n    s = ''\n    v = 0\n    for i in range(int(input())):\n        s += input()\n    for i in s:\n        if i not in c:\n            v += 1\n        else:\n            c = c.replace(i, '', 1)\n    if v == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (f, m) = input().split()\n    f = f + m\n    n = int(input())\n    s = ''\n    for i in range(n):\n        m = input()\n        s += m\n    l = {}\n    flag = 1\n    if len(s) <= len(f):\n        for j in f:\n            l[j] = 0\n        for j in f:\n            l[j] += 1\n        k = l.keys()\n        for j in s:\n            if j in k and l[j] > 0:\n                l[j] -= 1\n            else:\n                flag = 0\n                break\n        if flag == 1:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (f, m) = input().split()\n    f = f + m\n    n = int(input())\n    s = ''\n    for i in range(n):\n        m = input()\n        s += m\n    l = {}\n    flag = 1\n    if len(s) <= len(f):\n        for j in f:\n            l[j] = 0\n        for j in f:\n            l[j] += 1\n        k = l.keys()\n        for j in s:\n            if j in k and l[j] > 0:\n                l[j] -= 1\n            else:\n                flag = 0\n                break\n        if flag == 1:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (p, m) = map(str, input().split())\n    par = p + m\n    name = ''\n    for i in range(int(input())):\n        name += input()\n    res = True\n    for char in name:\n        if char in par:\n            par = par.replace(char, '', 1)\n        else:\n            res = False\n    print('YES' if res else 'NO')", "t = int(input())\ni = 0\nj = 0\nwhile i < t:\n    flag = True\n    (c1, c2) = map(str, input().split())\n    c3 = c1 + c2\n    s2 = ''\n    for p in range(int(input())):\n        s2 += input()\n    for y in s2:\n        if y in c3:\n            c3 = c3.replace(y, '', 1)\n        else:\n            flag = False\n    if flag == True:\n        print('YES')\n    else:\n        print('NO')\n    i += 1", "for i in range(int(input())):\n    (p, m) = map(str, input().split())\n    par = p + m\n    name = ''\n    for i in range(int(input())):\n        name += input()\n    res = True\n    for char in name:\n        if char in par:\n            par = par.replace(char, '', 1)\n        else:\n            res = False\n    print('YES' if res else 'NO')", "for i in range(int(input())):\n    (p, m) = map(str, input().split())\n    par = p + m\n    name = ''\n    for i in range(int(input())):\n        name += input()\n    res = 1\n    for char in name:\n        if char in par:\n            par = par.replace(char, '', 1)\n        else:\n            res = 0\n    if res == 1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (p, m) = map(str, input().split())\n    par = p + m\n    name = ''\n    for i in range(int(input())):\n        name += input()\n    res = 1\n    for char in name:\n        if char in par:\n            par = par.replace(char, '', 1)\n        else:\n            res = 0\n    print('YES' if res else 'NO')", "for i in range(int(input())):\n    (p, m) = map(str, input().split())\n    par = p + m\n    name = ''\n    for i in range(int(input())):\n        name += input()\n    res = True\n    for char in name:\n        if char in par:\n            par = par.replace(char, '', 1)\n        else:\n            res = False\n    print('YES' if res else 'NO')", "for i in range(int(input())):\n    (A, B) = map(str, input().split())\n    N = int(input())\n    n = A + B\n    c = ''\n    r = 0\n    for j in range(N):\n        c = c + input()\n    for k in c:\n        if k not in n:\n            r = 1\n            break\n        else:\n            n = n.replace(k, '', 1)\n    if r == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    arr = list(map(str, input().split()))\n    a = arr[0]\n    b = arr[1]\n    n = int(input())\n    names = []\n    for i in range(0, n):\n        names.append(input())\n    ab = a + b\n    cd = ''\n    for i in names:\n        cd += i\n    lol = True\n    d = {}\n    for i in ab:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    for j in cd:\n        if j not in d:\n            print('NO')\n            lol = False\n            break\n        elif d[j] == 0:\n            print('NO')\n            lol = False\n            break\n        else:\n            d[j] -= 1\n    if lol:\n        print('YES')\n    t -= 1", "T = int(input())\nfor i in range(T):\n    (A, B, N) = tuple(input().split()) + (int(input()),)\n    C = ''\n    for j in range(N):\n        C += input()\n    for j in range(ord('A'), ord('z') + 1):\n        char = chr(j)\n        if (A + B).count(char) < C.count(char):\n            print('NO')\n            C = ''\n            break\n    if C:\n        print('YES')", "for i in range(int(input())):\n    (p, m) = map(str, input().split())\n    par = p + m\n    name = ''\n    for i in range(int(input())):\n        name += input()\n    res = True\n    for char in name:\n        if char in par:\n            par = par.replace(char, '', 1)\n        else:\n            res = False\n    print('YES' if res else 'NO')", "for _ in range(int(input())):\n    (a, b) = map(str, input().split())\n    lst = {}\n    flag = 0\n    for i in range(len(a)):\n        if a[i] in lst:\n            lst[a[i]] += 1\n        else:\n            lst[a[i]] = 1\n    for i in range(len(b)):\n        if b[i] in lst:\n            lst[b[i]] += 1\n        else:\n            lst[b[i]] = 1\n    for j in range(int(input())):\n        son = input()\n        for k in range(len(son)):\n            if son[k] in lst and lst[son[k]] >= 1:\n                lst[son[k]] -= 1\n            else:\n                flag = 1\n                break\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (p, m) = map(str, input().split())\n    par = p + m\n    name = ''\n    for i in range(int(input())):\n        name += input()\n    res = True\n    for char in name:\n        if char in par:\n            par = par.replace(char, '', 1)\n        else:\n            res = False\n    print('YES' if res else 'NO')", "for i in range(int(input())):\n    (p, m) = map(str, input().split())\n    par = p + m\n    name = ''\n    for i in range(int(input())):\n        name += input()\n    res = True\n    for char in name:\n        if char in par:\n            par = par.replace(char, '', 1)\n        else:\n            res = False\n    print('YES' if res else 'NO')", "for _ in range(int(input())):\n    (a, b) = input().split()\n    n = int(input())\n    x = ''\n    for _ in range(n):\n        x += input()\n    s = a + b\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    flag = True\n    for i in x:\n        if i in d and d[i] > 0:\n            d[i] -= 1\n        else:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (x, y) = map(str, input().split())\n    n = int(input())\n    s = x + y\n    c = ''\n    for j in range(n):\n        c = c + input()\n    d1 = {}\n    for j in s:\n        if j in d1.keys():\n            d1[j] = d1[j] + 1\n        else:\n            d1[j] = 1\n    d2 = {}\n    for j in c:\n        if j in d2.keys():\n            d2[j] = d2[j] + 1\n        else:\n            d2[j] = 1\n    check = 0\n    for j in d2.keys():\n        if j in d1 and d2[j] <= d1[j]:\n            check = 1\n        else:\n            check = 0\n            break\n    if check == 1:\n        print('YES')\n    else:\n        print('NO')", "def f():\n    name = input()\n    x = ''\n    for _ in range(int(input())):\n        x += input()\n    for char in x:\n        if char in name:\n            name = name.replace(char, '', 1)\n        else:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    print(f())", "t = int(input())\nfor _ in range(t):\n    arr = [0] * 26\n    arr1 = [0] * 26\n    (A, B) = input().split()\n    p = A + B\n    for i in p:\n        arr[ord(i) - ord('a')] += 1\n    c = int(input())\n    for i in range(c):\n        d = input().strip()\n        for j in d:\n            arr1[ord(j) - ord('a')] += 1\n    m = max(len(arr), len(arr1))\n    ans = 'YES'\n    for i in range(m):\n        if arr1[i] <= arr[i]:\n            continue\n        else:\n            ans = 'NO'\n            break\n    print(ans)", "def f():\n    name = input()\n    x = ''\n    for _ in range(int(input())):\n        x += input()\n    for char in x:\n        if char in name:\n            name = name.replace(char, '', 1)\n        else:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    print(f())", "from collections import defaultdict\n\ndef solve(p, c):\n    if len(p) < len(c):\n        return 'NO'\n    ap = defaultdict(int)\n    ac = defaultdict(int)\n    for i in p:\n        ap[ord(i) - ord('a')] += 1\n    for i in c:\n        ac[ord(i) - ord('a')] += 1\n    for i in c:\n        if not ap[ord(i) - ord('a')] or ap[ord(i) - ord('a')] < ac[ord(i) - ord('a')]:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    (a, b) = input().split()\n    n = int(input())\n    p = a + b\n    c = ''\n    for i in range(n):\n        arr_i = input().strip()\n        c += arr_i\n    print(solve(p, c))", "def f():\n    name = input()\n    x = ''\n    for _ in range(int(input())):\n        x += input()\n    for char in x:\n        if char in name:\n            name = name.replace(char, '', 1)\n        else:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    print(f())", "for _ in range(int(input())):\n    (a, b) = map(str, input().split())\n    n = int(input())\n    s = ''\n    for i in range(n):\n        s += input()\n    d = {}\n    for j in a + b:\n        if j not in d:\n            d[j] = 1\n        else:\n            d[j] += 1\n    res = 'YES'\n    for i in s:\n        if i not in d or d[i] == 0:\n            res = 'NO'\n            break\n        else:\n            d[i] -= 1\n    print(res)", "for _ in range(int(input())):\n    (a, b) = map(str, input().split())\n    n = int(input())\n    s = ''\n    for i in range(n):\n        s += input()\n    d = {}\n    for j in a + b:\n        if j not in d:\n            d[j] = 1\n        else:\n            d[j] += 1\n    res = 'YES'\n    for i in s:\n        if i not in d or d[i] == 0:\n            res = 'NO'\n            break\n        else:\n            d[i] -= 1\n    print(res)", "for _ in range(int(input())):\n    (a, b) = input().split()\n    n = int(input())\n    record = {}\n    for ch in a + b:\n        record[ch] = record.get(ch, 0) + 1\n    rec2 = {}\n    for i in range(n):\n        name = input()\n        for ch in name:\n            rec2[ch] = rec2.get(ch, 0) + 1\n    flag = True\n    for (ch, freq) in rec2.items():\n        present = record.get(ch, 0)\n        if not present or record[ch] < freq:\n            flag = False\n            print('NO')\n            break\n    if flag:\n        print('YES')", "for _ in range(int(input())):\n    (a, b) = input().split()\n    n = int(input())\n    record = {}\n    for ch in a + b:\n        record[ch] = record.get(ch, 0) + 1\n    rec2 = {}\n    for i in range(n):\n        name = input()\n        for ch in name:\n            rec2[ch] = rec2.get(ch, 0) + 1\n    flag = True\n    for (ch, freq) in rec2.items():\n        present = record.get(ch, 0)\n        if not present or record[ch] < freq:\n            flag = False\n            print('NO')\n            break\n    if flag:\n        print('YES')", "for j in range(int(input())):\n    (a, b) = map(str, input().split())\n    su = a + b\n    l = []\n    alpha = ''\n    y = int(input())\n    for k in range(y):\n        alpha += str(input())\n    for i in alpha:\n        if i not in l:\n            l.append(i)\n            if su.count(i) < alpha.count(i):\n                print('NO')\n                break\n    else:\n        print('YES')", "for t in range(int(input())):\n    (a, b) = input().split()\n    parent = a + b\n    child = ''\n    flag = 1\n    n = int(input())\n    for i in range(n):\n        child += input()\n    d = {}\n    for i in parent:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in child:\n        if i in d and d[i] > 0:\n            d[i] -= 1\n        else:\n            flag = 0\n            break\n    print('YES' if flag == 1 else 'NO')", "for t in range(int(input())):\n    (a, b) = input().split()\n    parent = a + b\n    child = ''\n    flag = 1\n    n = int(input())\n    for i in range(n):\n        child += input()\n    d = {}\n    for i in parent:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in child:\n        if i in d and d[i] > 0:\n            d[i] -= 1\n        else:\n            flag = 0\n    print('YES' if flag == 1 else 'NO')", "t = int(input())\nwhile t > 0:\n    (a, b) = list(map(str, input().split()))\n    parent = a + b\n    child = ''\n    n = int(input())\n    for i in range(n):\n        child = child + input()\n    flag = 0\n    d = {}\n    for i in parent:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in child:\n        if i in parent and d[i] > 0:\n            d[i] = d[i] - 1\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for _ in range(int(input())):\n    p = input()\n    d = {}\n    poss = True\n    for c in p:\n        if c == ' ':\n            continue\n        d.setdefault(c, 0)\n        d[c] += 1\n    for _ in range(int(input())):\n        n = input()\n        for i in n:\n            if i not in d:\n                poss = False\n                break\n            else:\n                d[i] -= 1\n                if d[i] < 0:\n                    poss = False\n                    break\n    print('YES' if poss else 'NO')", "for tc in range(int(input())):\n    (a, b) = input().split()\n    co = int(input())\n    kmap = {}\n    poss = True\n    for c in a:\n        if c not in kmap:\n            kmap[c] = 1\n        else:\n            kmap[c] += 1\n    for c in b:\n        if c not in kmap:\n            kmap[c] = 1\n        else:\n            kmap[c] += 1\n    for i in range(co):\n        name = input()\n        for c in name:\n            if c not in kmap:\n                poss = False\n                break\n            else:\n                kmap[c] -= 1\n                if kmap[c] < 0:\n                    poss = False\n                    break\n    print('YES' if poss else 'NO')", "for _ in range(int(input())):\n    (A, B) = list(map(str, input().split(' ')))\n    parents_string = A + B\n    child_string = ''\n    for _ in range(int(input())):\n        child_string += input()\n    d = {}\n    for i in child_string:\n        d[i] = d.get(i, 0) + 1\n    p = {}\n    for j in parents_string:\n        p[j] = p.get(j, 0) + 1\n    flag = True\n    for letter in d.keys():\n        if letter in p.keys():\n            if p[letter] and d[letter] <= p[letter]:\n                flag = flag and True\n            else:\n                flag = False\n                break\n        else:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = input().split()\n    n = int(input())\n    res = ''\n    for i in range(n):\n        res += input()\n    st = a + b\n    d = {}\n    for i in st:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    flag = True\n    for i in res:\n        if i in d and d[i] > 0:\n            d[i] -= 1\n        else:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    parent_name = input()\n    number_children = int(input())\n    children_name = ''\n    p_character = {}\n    c_character = {}\n    for child in range(number_children):\n        children_name = children_name + input()\n    match = True\n    for count1 in parent_name:\n        if count1 in p_character:\n            p_character[count1] += 1\n        else:\n            p_character[count1] = 1\n    for count2 in children_name:\n        if count2 in c_character:\n            c_character[count2] += 1\n        else:\n            c_character[count2] = 1\n    key = list(c_character.keys())\n    for cheak in c_character.keys():\n        if cheak in p_character:\n            if p_character[cheak] >= c_character[cheak]:\n                match = True\n            else:\n                match = False\n                break\n        else:\n            match = False\n            break\n    if match == False:\n        print('NO')\n    elif match == True:\n        print('YES')", "for t in range(int(input())):\n    parent_name = input()\n    number_children = int(input())\n    children_name = ''\n    p_character = {}\n    c_character = {}\n    for child in range(number_children):\n        children_name = children_name + input()\n    match = True\n    for count1 in parent_name:\n        if count1 in p_character:\n            p_character[count1] += 1\n        else:\n            p_character[count1] = 1\n    for count2 in children_name:\n        if count2 in c_character:\n            c_character[count2] += 1\n        else:\n            c_character[count2] = 1\n    key = list(c_character.keys())\n    for cheak in c_character.keys():\n        if cheak in p_character:\n            if p_character[cheak] >= c_character[cheak]:\n                match = True\n            else:\n                match = False\n                break\n        else:\n            match = False\n            break\n    if match == False:\n        print('NO')\n    elif match == True:\n        print('YES')", "for t in range(int(input())):\n    parent_name = input()\n    number_children = int(input())\n    children_name = ''\n    p_character = {}\n    c_character = {}\n    for child in range(number_children):\n        children_name = children_name + input()\n    match = True\n    for count1 in parent_name:\n        if count1 in p_character:\n            p_character[count1] += 1\n        else:\n            p_character[count1] = 1\n    for count2 in children_name:\n        if count2 in c_character:\n            c_character[count2] += 1\n        else:\n            c_character[count2] = 1\n    key = list(c_character.keys())\n    for cheak in c_character.keys():\n        if cheak in p_character:\n            if p_character[cheak] >= c_character[cheak]:\n                match = True\n            else:\n                match = False\n                break\n        else:\n            match = False\n            break\n    if match == False:\n        print('NO')\n    elif match == True:\n        print('YES')", "for t in range(int(input())):\n    parent_name = input()\n    number_children = int(input())\n    children_name = ''\n    p_character = {}\n    c_character = {}\n    for child in range(number_children):\n        children_name = children_name + input()\n    match = True\n    for count1 in parent_name:\n        if count1 in p_character:\n            p_character[count1] += 1\n        else:\n            p_character[count1] = 1\n    for count2 in children_name:\n        if count2 in c_character:\n            c_character[count2] += 1\n        else:\n            c_character[count2] = 1\n    key = list(c_character.keys())\n    for cheak in c_character.keys():\n        if cheak in p_character:\n            if p_character[cheak] >= c_character[cheak]:\n                match = True\n            else:\n                match = False\n                break\n        else:\n            match = False\n            break\n    if match == False:\n        print('NO')\n    elif match == True:\n        print('YES')", "for t in range(int(input())):\n    parent = input().split()\n    parent_name = parent[0] + parent[1]\n    number_children = int(input())\n    children_name = ''\n    p_character = {}\n    c_character = {}\n    for child in range(number_children):\n        children_name = children_name + input()\n    match = True\n    for count1 in parent_name:\n        if count1 in p_character:\n            p_character[count1] += 1\n        else:\n            p_character[count1] = 1\n    for count2 in children_name:\n        if count2 in c_character:\n            c_character[count2] += 1\n        else:\n            c_character[count2] = 1\n    key = list(c_character.keys())\n    for cheak in c_character.keys():\n        if cheak in p_character:\n            if p_character[cheak] >= c_character[cheak]:\n                match = True\n            else:\n                match = False\n                break\n        else:\n            match = False\n            break\n    if match == False:\n        print('NO')\n    elif match == True:\n        print('YES')", "for _ in range(int(input())):\n    (a, b) = input().split()\n    n = int(input())\n    res = ''\n    for i in range(n):\n        res += input()\n    st = a + b\n    d = {}\n    for i in st:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    flag = True\n    for i in res:\n        if i in d and d[i] > 0:\n            d[i] -= 1\n        else:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    s = input()\n    dic = {'a': 0, 'b': 0, 'c': 0, 'd': 0, 'e': 0, 'f': 0, 'g': 0, 'h': 0, 'i': 0, 'j': 0, 'k': 0, 'l': 0, 'm': 0, 'n': 0, 'o': 0, 'p': 0, 'q': 0, 'r': 0, 's': 0, 't': 0, 'u': 0, 'v': 0, 'w': 0, 'x': 0, 'y': 0, 'z': 0}\n    s2 = ''\n    for n in range(int(input())):\n        s2 += input()\n    for ch in s:\n        if ch == ' ':\n            pass\n        else:\n            dic[ch] += 1\n    for ch in s2:\n        dic[ch] -= 1\n        if dic[ch] < 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "for t in range(int(input())):\n    s = input()\n    dic = {'a': 0, 'b': 0, 'c': 0, 'd': 0, 'e': 0, 'f': 0, 'g': 0, 'h': 0, 'i': 0, 'j': 0, 'k': 0, 'l': 0, 'm': 0, 'n': 0, 'o': 0, 'p': 0, 'q': 0, 'r': 0, 's': 0, 't': 0, 'u': 0, 'v': 0, 'w': 0, 'x': 0, 'y': 0, 'z': 0}\n    s2 = ''\n    for n in range(int(input())):\n        s2 += input()\n    for ch in s:\n        if ch == ' ':\n            pass\n        else:\n            dic[ch] += 1\n    for ch in s2:\n        dic[ch] -= 1\n        if dic[ch] < 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (a, b) = map(str, input().split())\n    n = int(input())\n    name = ''\n    for i in range(n):\n        name += input()\n    freq = {}\n    parents = list(a + b)\n    name = list(name)\n    for i in parents:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    is_ans = True\n    for i in name:\n        if i in freq and freq[i] > 0:\n            freq[i] -= 1\n        else:\n            is_ans = False\n            break\n    if is_ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = input().split()\n    n = int(input())\n    res = ''\n    for i in range(n):\n        res += input()\n    st = a + b\n    d = {}\n    for i in st:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    flag = True\n    for i in res:\n        if i in d and d[i] > 0:\n            d[i] -= 1\n        else:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor tc in range(t):\n    p = ''.join(input().split())\n    n = int(input())\n    children = ''\n    for i in range(n):\n        child = input()\n        children += child\n    dist = {}\n    for ch in p:\n        if ch in dist:\n            dist[ch] += 1\n        else:\n            dist[ch] = 1\n    allowed = True\n    for ch in children:\n        if ch in dist and dist[ch] > 0:\n            dist[ch] -= 1\n        else:\n            allowed = False\n            break\n    if allowed:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    s = input()\n    lis = 26 * [0]\n    for ch in s:\n        if ch == ' ':\n            continue\n        else:\n            lis[ord(ch) - ord('a')] += 1\n    s2 = ''\n    for n in range(int(input())):\n        s2 += input()\n    for ch in s2:\n        lis[ord(ch) - ord('a')] -= 1\n        if lis[ord(ch) - ord('a')] == -1:\n            print('NO')\n            break\n    else:\n        print('YES')", "testCasesCount = input()\ntestCasesCount = int(testCasesCount)\ntestData = []\ntestCase = None\nresultados = []\nfor i in range(testCasesCount):\n    nombresPadres = input()\n    nombresPadres = nombresPadres.replace(' ', '')\n    cantHijos = input()\n    cantHijos = int(cantHijos)\n    nombresHijos = ''\n    for j in range(cantHijos):\n        nombresHijos = nombresHijos + input()\n    nombresHijos = nombresHijos.upper()\n    nombresPadres = nombresPadres.upper()\n    nombresHijos = list(nombresHijos)\n    nombresPadres = list(nombresPadres)\n    letrasHijos = [0] * 27\n    letrasPadres = [0] * 27\n    for letra in nombresPadres:\n        letrasPadres[ord(letra) - 65] = letrasPadres[ord(letra) - 65] + 1\n    for letra in nombresHijos:\n        letrasHijos[ord(letra) - 65] = letrasHijos[ord(letra) - 65] + 1\n    valido = True\n    for j in range(len(letrasPadres)):\n        if not letrasPadres[j] >= letrasHijos[j]:\n            valido = False\n    resultados.append('YES' if valido else 'NO')\nfor res in resultados:\n    print(res)", "t = int(input())\nfor i in range(t):\n    (A, B) = [i for i in input().split()]\n    P = A + B\n    n = int(input())\n    C = ''\n    for i in range(n):\n        C = C + input()\n    D = set(C)\n    flag = True\n    for i in D:\n        if P.count(i) < C.count(i):\n            flag = False\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor tc in range(t):\n    p = ''.join(input().split())\n    n = int(input())\n    children = ''\n    for i in range(n):\n        child = input()\n        children += child\n    dist = {}\n    for ch in p:\n        if ch in dist:\n            dist[ch] += 1\n        else:\n            dist[ch] = 1\n    allowed = True\n    for ch in children:\n        if ch in dist and dist[ch] > 0:\n            dist[ch] -= 1\n        else:\n            allowed = False\n            break\n    if allowed:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor tc in range(t):\n    p = ''.join(input().split())\n    n = int(input())\n    children = ''\n    for i in range(n):\n        child = input()\n        children += child\n    dist = {}\n    for ch in p:\n        if ch in dist:\n            dist[ch] += 1\n        else:\n            dist[ch] = 1\n    allowed = True\n    for ch in children:\n        if ch in dist and dist[ch] > 0:\n            dist[ch] -= 1\n        else:\n            allowed = False\n            break\n    if allowed:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor tc in range(t):\n    p = ''.join(input().split())\n    n = int(input())\n    children = ''\n    for i in range(n):\n        child = input()\n        children += child\n    dist = {}\n    for ch in p:\n        if ch in dist:\n            dist[ch] += 1\n        else:\n            dist[ch] = 1\n    allowed = True\n    for ch in children:\n        if ch in dist and dist[ch] > 0:\n            dist[ch] -= 1\n        else:\n            allowed = False\n            break\n    if allowed:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nfor i in range(int(input())):\n    (x, y) = input().split()\n    n = int(input())\n    r = ''\n    flag = 1\n    for i in range(n):\n        r += input()\n    x = x + y\n    c = Counter(x)\n    d = Counter(r)\n    c.subtract(d)\n    for i in c:\n        if c[i] < 0:\n            print('NO')\n            flag = 0\n            break\n    if flag == 1:\n        print('YES')", "from collections import Counter\nfor i in range(int(input())):\n    (x, y) = input().split()\n    n = int(input())\n    r = ''\n    flag = 1\n    for i in range(n):\n        r += input()\n    x = x + y\n    c = Counter(x)\n    d = Counter(r)\n    c.subtract(d)\n    for i in c:\n        if c[i] < 0:\n            print('NO')\n            flag = 0\n            break\n    if flag == 1:\n        print('YES')", "def mapping(s):\n    m = [0] * 256\n    for i in s:\n        m[ord(i) - ord('a')] += 1\n    return m\nfor _ in range(int(input())):\n    s = input()\n    s = s.replace(' ', '')\n    n = int(input())\n    v = ''\n    for i in range(n):\n        v += input()\n    m = mapping(s)\n    u = mapping(v)\n    for i in range(len(u)):\n        if u[i] > m[i]:\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor z in range(t):\n    (p1, p2) = input().split()\n    c = int(input())\n    parent_map = dict()\n    for parent in [p1, p2]:\n        for char in parent:\n            parent_map[char] = parent_map.get(char, 0) + 1\n    freq = dict()\n    for i in range(c):\n        child = input()\n        for char in child:\n            freq[char] = freq.get(char, 0) + 1\n    flag = True\n    for key in freq:\n        if freq[key] <= parent_map.get(key, 0):\n            pass\n        else:\n            flag = False\n    if flag is True:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter as co\nT = int(input())\nfor _ in range(T):\n    names = input()\n    children = ''\n    numChildren = int(input())\n    for j in range(numChildren):\n        children += input()\n    namesCo = co(names)\n    childCo = co(children)\n    if all([namesCo[char] >= childCo[char] for char in childCo]):\n        print('YES')\n    else:\n        print('NO')", "def match(d, s):\n    for c in s:\n        if c in d:\n            d[c] -= 1\n            if d[c] < 0:\n                return 'NO'\n        else:\n            return 'NO'\n    return 'YES'\nn = int(input())\nfor i in range(n):\n    d = {}\n    s = input()\n    (a, b) = s.split()\n    s = a + b\n    for c in s:\n        if c in d:\n            d[c] += 1\n        else:\n            d[c] = 1\n    num = int(input())\n    s = ''\n    for j in range(num):\n        s += input()\n    print(match(d, s))", "for t in range(int(input())):\n    (a, b) = map(str, input().split())\n    (lst, parents, ans, son) = ([], a + b, 'YES', '')\n    for i in range(int(input())):\n        son += input()\n    for i in son:\n        if i not in lst:\n            lst.append(i)\n            if parents.count(i) < son.count(i):\n                ans = 'NO'\n                break\n    print(ans)", "from collections import Counter as co\nT = int(input())\nfor _ in range(T):\n    names = input()\n    children = ''\n    numChildren = int(input())\n    for j in range(numChildren):\n        children += input()\n    namesCo = co(names)\n    childCo = co(children)\n    if all([namesCo[char] >= childCo[char] for char in childCo]):\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter as co\nfor _ in range(int(input())):\n    (a, b) = input().split()\n    a += b\n    c = ''.join([input() for _ in range(int(input()))])\n    x = co(a)\n    y = co(c)\n    print(['NO', 'YES'][all([x[i] >= y[i] for i in y])])", "from collections import Counter as co\nfor _ in range(int(input())):\n    (a, b) = input().split()\n    a += b\n    c = ''\n    for i in range(int(input())):\n        c += input()\n    x = co(a)\n    y = co(c)\n    print(['NO', 'YES'][all([x[i] >= y[i] for i in y])])", "from collections import Counter\nfor i in range(int(input())):\n    (x, y) = input().split()\n    z = ''\n    for _ in range(int(input())):\n        z += input()\n    c1 = Counter(x + y)\n    c2 = Counter(z)\n    print(['NO', 'YES'][all([c1[i] >= c2[i] for i in c2])])", "t = int(input())\nwhile t:\n    (a, b) = map(str, input().split(' '))\n    n = int(input())\n    a = a + b\n    c = ''\n    c1 = {}\n    p1 = {}\n    for i in range(n):\n        c += input()\n    for i in c:\n        c1[i] = c1.get(i, 0) + 1\n    for i in a:\n        p1[i] = p1.get(i, 0) + 1\n    for i in c1:\n        if c1.get(i, 0) > p1.get(i, 0):\n            print('NO')\n            break\n    else:\n        print('YES')\n    t = t - 1", "for _ in range(int(input())):\n    (a, b) = input().split()\n    n = int(input())\n    child = ''\n    parent = a + b\n    i = 0\n    c = {}\n    p = {}\n    alph = 'abcdefghijklmnopqrstuvwxyz'\n    while i < n:\n        child += input()\n        i += 1\n    if len(child) > len(parent):\n        print('NO')\n        continue\n    for i in child:\n        c[i] = c.get(i, 0) + 1\n    for j in parent:\n        p[j] = p.get(j, 0) + 1\n    for k in child:\n        if p.get(k, 0) == 0:\n            print('NO')\n            break\n        if c[k] > p[k]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    p = input()\n    p.replace(' ', '')\n    d = {}\n    for i in p:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        s += input()\n    g = {}\n    for i in s:\n        if i in g:\n            g[i] += 1\n        else:\n            g[i] = 1\n    if len(d) < len(g):\n        print('NO')\n        continue\n    f = True\n    for i in d:\n        if i in g:\n            if d[i] < g[i]:\n                f = False\n                break\n    print('YES' if f else 'NO')", "t = int(input())\nfor t in range(t):\n    (a, b) = [str(i) for i in input().split(' ')]\n    n = int(input())\n    c = ''\n    for i in range(n):\n        c += input()\n    s = a + b\n    p = list(set(c))\n    d = {}\n    for k in s:\n        if k in d:\n            d[k] += 1\n        else:\n            d[k] = 1\n    flag = 1\n    for i in range(len(p)):\n        if p[i] in s:\n            if d[p[i]] >= c.count(p[i]):\n                continue\n            else:\n                flag = 0\n                break\n        else:\n            flag = 0\n            break\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (a, b) = map(str, input().split())\n    k = a + b\n    f = 0\n    n = int(input())\n    c = ''\n    for i in range(n):\n        c = c + input()\n    d = {}\n    for i in c:\n        if i in d:\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    d1 = {}\n    for i in k:\n        if i in d1:\n            d1[i] = d1[i] + 1\n        else:\n            d1[i] = 1\n    for i in d:\n        if i not in d1:\n            print('NO')\n            break\n        if d[i] > d1[i]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for i in range(int(input())):\n    (a, b) = map(str, input().split())\n    k = a + b\n    f = 0\n    n = int(input())\n    c = ''\n    for i in range(n):\n        c = c + input()\n    d = {}\n    for i in c:\n        if i in d:\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    d1 = {}\n    for i in k:\n        if i in d1:\n            d1[i] = d1[i] + 1\n        else:\n            d1[i] = 1\n    for i in d:\n        if i not in d1:\n            print('NO')\n            break\n        if d[i] > d1[i]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (a, b) = input().split()\n    k = a + b\n    f = 0\n    n = int(input())\n    c = ''\n    for i in range(n):\n        c = c + input()\n    d = {}\n    for i in c:\n        if i in d:\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    d1 = {}\n    for i in k:\n        if i in d1:\n            d1[i] = d1[i] + 1\n        else:\n            d1[i] = 1\n    for i in d:\n        if i not in d1:\n            print('NO')\n            break\n        if d[i] > d1[i]:\n            print('NO')\n            break\n    else:\n        print('YES')", "z = int(input())\nwhile z:\n    (a, b) = map(str, input().split())\n    s = []\n    for _ in range(int(input())):\n        s.append(input())\n    c = ''\n    for i in s:\n        c += i\n    f1 = {}\n    f2 = {}\n    d = a + b\n    for i in d:\n        if i in f1:\n            f1[i] += 1\n        else:\n            f1[i] = 1\n    f = 0\n    for i in c:\n        if i in f1:\n            if i not in f2:\n                f2[i] = 1\n            else:\n                f2[i] += 1\n            if f2[i] > f1[i]:\n                f = 1\n                break\n        else:\n            f = 1\n            break\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')\n    z -= 1", "for _ in range(int(input())):\n    (a, b) = map(str, input().split())\n    n = int(input())\n    s = []\n    for _ in range(n):\n        s.append(input())\n    c = ''\n    for i in s:\n        c += i\n    f1 = {}\n    f2 = {}\n    d = a + b\n    for i in d:\n        if i in f1:\n            f1[i] += 1\n        else:\n            f1[i] = 1\n    f = 0\n    for i in c:\n        if i in f1:\n            if i not in f2:\n                f2[i] = 1\n            else:\n                f2[i] += 1\n            if f2[i] > f1[i]:\n                f = 1\n                break\n        else:\n            f = 1\n            break\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')", "x = int(input())\nfinal = []\nfor ty in range(0, x):\n    tu = str(input())\n    rvx = tu.split(' ')\n    th = ''\n    for mmk in rvx:\n        th += mmk\n    tn = int(input())\n    ofr = ''\n    for iieq in range(0, tn):\n        lpxz = str(input())\n        ofr += lpxz\n    opr = [th, ofr]\n    final.append(opr)\nfor jje in final:\n    upo = jje[0]\n    ttc = jje[1]\n    if len(upo) < len(ttc):\n        print('NO')\n    else:\n        m = {}\n        for mfg in upo:\n            if mfg not in list(m.keys()):\n                m[mfg] = 1\n            else:\n                m[mfg] += 1\n        rt = {}\n        for iie in ttc:\n            if iie not in list(rt.keys()):\n                rt[iie] = 1\n            else:\n                rt[iie] += 1\n        ans = 'YES'\n        for hh in list(rt.keys()):\n            if hh in list(m.keys()):\n                tpr = rt[hh]\n                mpr = m[hh]\n                if tpr <= mpr:\n                    continue\n                else:\n                    ans = 'NO'\n                    break\n            else:\n                ans = 'NO'\n                break\n        print(ans)", "for _ in range(int(input())):\n    p = input()\n    p = p.replace(' ', '')\n    s = ''\n    n = int(input())\n    a = 0\n    for _ in range(n):\n        s += input()\n    for _ in s:\n        if _ not in p:\n            a = 1\n            break\n        else:\n            p = p.replace(_, '', 1)\n    if a == 1:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor k in range(n):\n    pname = input()\n    sname = ''\n    a = int(input())\n    for j in range(a):\n        sname1 = input()\n        sname += sname1\n    snamel = set(sname)\n    k = 1\n    for i in snamel:\n        if sname.count(i) <= pname.count(i):\n            continue\n        else:\n            k = 0\n            break\n    if k == 1:\n        print('YES')\n    else:\n        print('NO')", "child = []\nfor i in range(int(input())):\n    (x, y) = map(str, input().split())\n    n = int(input())\n    (sons, ans, characters) = ('', 'YES', [])\n    for i in range(n):\n        sons += input()\n    parents = x + y\n    for i in sons:\n        if i not in characters:\n            characters.append(i)\n            if sons.count(i) > parents.count(i):\n                ans = 'NO'\n                break\n    print(ans)", "child = []\nfor i in range(int(input())):\n    (x, y) = map(str, input().split())\n    n = int(input())\n    (sons, ans, characters) = ('', 'YES', [])\n    for i in range(n):\n        sons += input()\n    parents = x + y\n    for i in sons:\n        if i not in characters:\n            characters.append(i)\n            if sons.count(i) > parents.count(i):\n                ans = 'NO'\n                break\n    print(ans)", "for _ in range(int(input())):\n    (fn, ln) = map(str, input().split())\n    dp = dict()\n    for val in fn + ln:\n        dp.setdefault(val, 0)\n        dp[val] += 1\n    cn = ''\n    for __ in range(int(input())):\n        cn += input()\n    dc = dict()\n    for val in cn:\n        dc.setdefault(val, 0)\n        dc[val] += 1\n    flag = 1\n    for val in dc.keys():\n        if val in dp.keys():\n            if dc[val] > dp[val]:\n                flag = 0\n                break\n        else:\n            flag = 0\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "def check_substring(children, parents):\n    children = sorted(children)\n    parents = sorted(parents)\n    cur_char = children[0]\n    for char in children:\n        if char == cur_char:\n            continue\n        else:\n            cur_char = char\n        if children.count(char) > parents.count(char):\n            return False\n    return True\n\ndef main():\n    T = int(input())\n    while T > 0:\n        children = ''\n        parents = ''.join(input().split())\n        num_of_children = int(input())\n        for i in range(num_of_children):\n            children += str(input())\n        if check_substring(children, parents) == False:\n            print('NO')\n        else:\n            print('YES')\n        T -= 1\nmain()", "for _ in range(int(input())):\n    parents = input()\n    parents.replace(' ', '')\n    num_children = int(input())\n    childrens = ''\n    for i in range(num_children):\n        childrens += input()\n    alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    for letter in alphabet:\n        if parents.count(letter) < childrens.count(letter):\n            print('NO')\n            break\n    else:\n        print('YES')", "from collections import Counter\n\ndef fun(par, n, xrl):\n    ctx = Counter(xrl)\n    ptx = Counter(par)\n    cond = True\n    for i in ctx:\n        valc = ctx[i]\n        if i in ptx:\n            if ptx[i] >= valc:\n                pass\n            else:\n                cond = False\n                break\n        else:\n            cond = False\n            break\n    return cond\nt = int(input())\nfor _ in range(t):\n    par = input().replace(' ', '')\n    n = int(input())\n    val = ''\n    for i in range(n):\n        val = val + input()\n    cond = fun(par, n, val)\n    if cond:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    (s1, s3) = map(str, input().split())\n    n = int(input())\n    list1 = []\n    while n > 0:\n        s = input()\n        list1.append(s)\n        n = n - 1\n    w = ''\n    for i in list1:\n        w = w + i\n    W = s1 + s3\n    list3 = [0] * 26\n    for i in W:\n        asc = ord(i)\n        list3[asc - 97] = list3[asc - 97] + 1\n    f = 0\n    for j in w:\n        asc = ord(j)\n        val = asc - 97\n        if list3[val] > 0:\n            f = 1\n            list3[val] = list3[val] - 1\n        else:\n            f = -1\n            break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "for _ in range(int(input())):\n    (fn, ln) = map(str, input().split())\n    dp = dict()\n    for val in fn + ln:\n        dp.setdefault(val, 0)\n        dp[val] += 1\n    cn = ''\n    for __ in range(int(input())):\n        cn += input()\n    dc = dict()\n    for val in cn:\n        dc.setdefault(val, 0)\n        dc[val] += 1\n    flag = 1\n    for val in dc.keys():\n        if val in dp.keys():\n            if dc[val] > dp[val]:\n                flag = 0\n                break\n        else:\n            flag = 0\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (fn, ln) = map(str, input().split())\n    dp = dict()\n    for val in fn + ln:\n        dp.setdefault(val, 0)\n        dp[val] += 1\n    cn = ''\n    for __ in range(int(input())):\n        cn += input()\n    dc = dict()\n    for val in cn:\n        dc.setdefault(val, 0)\n        dc[val] += 1\n    flag = 1\n    for val in dc.keys():\n        if val in dp.keys():\n            if dc[val] > dp[val]:\n                flag = 0\n                break\n        else:\n            flag = 0\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = map(str, input().split())\n    s = a + b\n    s1 = list(s)\n    n = int(input())\n    c1 = ''\n    for j in range(n):\n        temp = input()\n        c1 = c1 + temp\n    p = {}\n    l1 = list(set(list(s)))\n    for item in l1:\n        if item not in p:\n            p[item] = s1.count(item)\n    c2 = list(c1)\n    c = {}\n    l = list(set(list(c1)))\n    for item in l:\n        if item not in c:\n            c[item] = c2.count(item)\n    flag = 0\n    for (key, value) in c.items():\n        if key not in p.keys():\n            flag = -1\n            break\n        if c[key] > p[key]:\n            flag = -1\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    parent = input()\n    child = int(input())\n    c_1 = []\n    for m in range(child):\n        c_1.append(input())\n    c = ''\n    for a in c_1:\n        c = c + a\n    p = list(set(c))\n    z = 1\n    for q in range(len(p)):\n        if c.count(p[q]) <= parent.count(p[q]):\n            continue\n        else:\n            z = 0\n            break\n    if z:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = input().split()\n    s = ''\n    for i in range(int(input())):\n        s += input()\n    d1 = {}\n    d2 = {}\n    flag = 0\n    a = a + b\n    for i in a:\n        if i not in d1:\n            d1[i] = 1\n        else:\n            d1[i] += 1\n    for i in s:\n        if i not in d1:\n            d1[i] = 0\n        if i not in d2:\n            d2[i] = 1\n        else:\n            d2[i] += 1\n    for i in d2:\n        if d1[i] < d2[i] or i not in d2:\n            flag = 1\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\n\ndef frecalc(string):\n    freq = {}\n    for i in range(len(string)):\n        if string[i] not in freq:\n            freq[string[i]] = 1\n        else:\n            freq[string[i]] = freq[string[i]] + 1\n    return freq\nfor _ in range(t):\n    parent = input()\n    freqparent = frecalc(parent)\n    n = int(input())\n    childs = ''\n    for i in range(n):\n        childs = childs + input()\n    freqchild = frecalc(childs)\n    flag = 0\n    for i in freqchild:\n        if i in freqparent:\n            if freqchild[i] > freqparent[i]:\n                flag = 1\n                break\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    parent = input()\n    child = int(input())\n    c_1 = []\n    for m in range(child):\n        c_1.append(input())\n    c = ''\n    for a in c_1:\n        c = c + a\n    p = list(set(c))\n    z = 1\n    for q in range(len(p)):\n        if c.count(p[q]) <= parent.count(p[q]):\n            continue\n        else:\n            z = 0\n            break\n    if z:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    parent = input()\n    child = int(input())\n    c_1 = []\n    for m in range(child):\n        c_1.append(input())\n    c = ''\n    for a in c_1:\n        c = c + a\n    p = list(set(c))\n    z = 1\n    for q in range(len(p)):\n        if c.count(p[q]) <= parent.count(p[q]):\n            continue\n        else:\n            z = 0\n            break\n    if z:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    parent = input()\n    mp = {}\n    for i in parent:\n        mp[i] = mp.get(i, 0) + 1\n    n = int(input())\n    ch = {}\n    for i in range(n):\n        c = input()\n        for j in c:\n            ch[j] = ch.get(j, 0) + 1\n    flag = 1\n    for i in ch:\n        if i not in mp or mp[i] < ch[i]:\n            flag = 0\n            break\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (x, y) = input().split()\n    z = x + y\n    parent = Counter(z)\n    n = int(input())\n    child = ''\n    for i in range(n):\n        q = input()\n        child += q\n    children = Counter(child)\n    f = 0\n    for i in children:\n        if parent[i] < children[i] or i not in parent:\n            f = 1\n            break\n    if f:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    x = input()\n    n = int(input())\n    y = str()\n    for i in range(n):\n        y += input()\n    l = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', ' ']\n    for j in l:\n        if x.count(j) < y.count(j):\n            print('NO')\n            break\n    else:\n        print('YES')", "from collections import Counter\nfor _ in range(int(input())):\n    (x, y) = input().split()\n    z = x + y\n    parent = Counter(z)\n    n = int(input())\n    child = ''\n    for i in range(n):\n        q = input()\n        child += q\n    children = Counter(child)\n    f = 0\n    for i in children:\n        if parent[i] < children[i] or i not in parent:\n            f = 1\n            break\n    if f:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (a, b) = input().split()\n    s = ''\n    for i in range(int(input())):\n        s += input()\n    (d1, d2, f) = ({}, {}, 0)\n    a += b\n    for i in a:\n        if i not in d1:\n            d1[i] = 1\n        else:\n            d1[i] += 1\n    for i in s:\n        if i not in d1:\n            d1[i] = 0\n        if i not in d2:\n            d2[i] = 1\n        else:\n            d2[i] += 1\n    for i in d2:\n        if d1[i] < d2[i] or i not in d2:\n            f = 1\n            break\n    if f:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    name = input().split()\n    (children_name, ans) = ([], 'YES')\n    for j in range(int(input())):\n        c_name = input()\n        children_name.append(c_name)\n    name = ''.join(name)\n    children_name = ''.join(children_name)\n    result = []\n    for i in children_name:\n        if i not in result:\n            result.append(i)\n            if name.count(i) < children_name.count(i):\n                ans = 'NO'\n                break\n    print(ans)", "for i in range(int(input())):\n    name = input().split()\n    (children_name, ans) = ([], 'YES')\n    for j in range(int(input())):\n        c_name = input()\n        children_name.append(c_name)\n    name = ''.join(name)\n    children_name = ''.join(children_name)\n    result = []\n    for i in children_name:\n        if i not in result:\n            result.append(i)\n            if name.count(i) < children_name.count(i):\n                ans = 'NO'\n                break\n    print(ans)"]