["def solve(quantity, N, M):\n    (ans, drink) = (0, [-1] * N)\n    for i in range(N):\n        (D, F, B) = map(int, input().split())\n        if quantity[D - 1] > 0:\n            ans += F\n            drink[i] = D\n            quantity[D - 1] -= 1\n        else:\n            ans += B\n    index = 0\n    for i in range(N):\n        if drink[i] != -1:\n            continue\n        while quantity[index] == 0:\n            index += 1\n        drink[i] = index + 1\n        quantity[index] -= 1\n    print(ans)\n    for i in drink:\n        print(i, end=' ')\n    print()\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    quantity = list(map(int, input().split()))\n    solve(quantity, N, M)", "def solve(quantity, N, M):\n    (ans, drink) = (0, [-1] * N)\n    for i in range(N):\n        (D, F, B) = map(int, input().split())\n        if quantity[D - 1] > 0:\n            ans += F\n            drink[i] = D\n            quantity[D - 1] -= 1\n        else:\n            ans += B\n    index = 0\n    for i in range(N):\n        if drink[i] != -1:\n            continue\n        while quantity[index] == 0:\n            index += 1\n        drink[i] = index + 1\n        quantity[index] -= 1\n    print(ans)\n    for i in drink:\n        print(i, end=' ')\n    print()\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    quantity = list(map(int, input().split()))\n    solve(quantity, N, M)", "def solve(quantity, N, M):\n    (ans, drink) = (0, [-1] * N)\n    for i in range(N):\n        (D, F, B) = map(int, input().split())\n        if quantity[D - 1] > 0:\n            ans += F\n            drink[i] = D\n            quantity[D - 1] -= 1\n        else:\n            ans += B\n    index = 0\n    for i in range(N):\n        if drink[i] != -1:\n            continue\n        while quantity[index] == 0:\n            index += 1\n        drink[i] = index + 1\n        quantity[index] -= 1\n    print(ans)\n    for i in drink:\n        print(i, end=' ')\n    print()\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    quantity = list(map(int, input().split()))\n    solve(quantity, N, M)", "def solve(quantity, N, M):\n    (ans, drink) = (0, [-1] * N)\n    for i in range(N):\n        (D, F, B) = map(int, input().split())\n        if quantity[D - 1] > 0:\n            ans += F\n            drink[i] = D\n            quantity[D - 1] -= 1\n        else:\n            ans += B\n    index = 0\n    for i in range(N):\n        if drink[i] != -1:\n            continue\n        while quantity[index] == 0:\n            index += 1\n        drink[i] = index + 1\n        quantity[index] -= 1\n    print(ans)\n    for i in drink:\n        print(i, end=' ')\n    print()\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    quantity = list(map(int, input().split()))\n    solve(quantity, N, M)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = [0] + list(map(int, input().split()))\n    s = 0\n    c = 1\n    m1 = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if l[d] > 0:\n            m1.append(d)\n            s += f\n            l[d] -= 1\n        else:\n            m1.append(0)\n            s += b\n    for i in range(n):\n        if m1[i] == 0:\n            for j in range(c, m + 1):\n                if l[j] > 0:\n                    m1[i] = j\n                    l[j] -= 1\n                    c = j\n                    break\n    print(s)\n    print(*m1)", "T = int(input())\nfor i in range(T):\n    (n, m) = map(int, input().split())\n    l = [0] + list(map(int, input().split()))\n    s = 0\n    c = 1\n    m1 = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if l[d] > 0:\n            m1.append(d)\n            s += f\n            l[d] -= 1\n        else:\n            m1.append(0)\n            s += b\n    for i in range(n):\n        if m1[i] == 0:\n            for j in range(c, m + 1):\n                if l[j] > 0:\n                    m1[i] = j\n                    l[j] -= 1\n                    c = j\n                    break\n    print(s)\n    print(*m1)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = [0] + list(map(int, input().split()))\n    s = 0\n    c = 1\n    m1 = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if l[d] > 0:\n            m1.append(d)\n            s += f\n            l[d] -= 1\n        else:\n            m1.append(0)\n            s += b\n    for i in range(n):\n        if m1[i] == 0:\n            for j in range(c, m + 1):\n                if l[j] > 0:\n                    m1[i] = j\n                    l[j] -= 1\n                    c = j\n                    break\n    print(s)\n    print(*m1)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = [0] + list(map(int, input().split()))\n    s = 0\n    c = 1\n    m1 = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if l[d] > 0:\n            m1.append(d)\n            s += f\n            l[d] -= 1\n        else:\n            m1.append(0)\n            s += b\n    for i in range(n):\n        if m1[i] == 0:\n            for j in range(c, m + 1):\n                if l[j] > 0:\n                    m1[i] = j\n                    l[j] -= 1\n                    c = j\n                    break\n    print(s)\n    print(*m1)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    l = [0] * n\n    total = 0\n    for i in range(n):\n        (d, f, b) = list(map(int, input().split()))\n        if c[d - 1] > 0:\n            c[d - 1] -= 1\n            total += f\n            l[i] = d\n        else:\n            total += b\n    t = m - 1\n    print(total)\n    for i in l:\n        if i > 0:\n            print(i, end=' ')\n        else:\n            while True:\n                if c[t] > 0:\n                    print(t + 1, end=' ')\n                    c[t] -= 1\n                    if c[t] == 0:\n                        t -= 1\n                    break\n                else:\n                    t -= 1\n    print('')", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    l = []\n    l1 = [0] * n\n    total = 0\n    for i in range(n):\n        (d, f, b) = list(map(int, input().split()))\n        if c[d - 1] > 0:\n            c[d - 1] -= 1\n            total += f\n            l1[i] = d\n        else:\n            total += b\n            l.append(b)\n    t = m - 1\n    print(total)\n    for i in l1:\n        if i > 0:\n            print(i, end=' ')\n        else:\n            while True:\n                if c[t] > 0:\n                    print(t + 1, end=' ')\n                    c[t] -= 1\n                    if c[t] == 0:\n                        t -= 1\n                    break\n                else:\n                    t -= 1\n    print('')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = [0] + list(map(int, input().split()))\n    s = 0\n    c = 0\n    m1 = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if l[d] > 0:\n            m1.append(d)\n            s += f\n            l[d] -= 1\n        else:\n            m1.append(0)\n            s += b\n    for i in range(n):\n        if m1[i] == 0:\n            for j in range(c, m + 1):\n                if l[j] > 0:\n                    m1[i] = j\n                    l[j] -= 1\n                    c = j\n                    break\n    print(s)\n    print(*m1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    flav = list(map(int, input().split()))\n    ans = []\n    res = 0\n    k = 0\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if flav[d - 1] == 0:\n            res += b\n            ans.append(-1)\n            k += 1\n        else:\n            flav[d - 1] -= 1\n            res += f\n            ans.append(d)\n    l = []\n    for i in range(m):\n        while flav[i] != 0 and k != 0:\n            flav[i] -= 1\n            k -= 1\n            l.append(i + 1)\n    print(res)\n    c = 0\n    for i in range(n):\n        if ans[i] == -1:\n            print(l[c], end=' ')\n            c += 1\n        else:\n            print(ans[i], end=' ')\n    print()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = [0] * n\n    ans = 0\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if l[d - 1] != 0:\n            l[d - 1] -= 1\n            k[i] = d\n            ans += f\n        else:\n            ans += b\n    j = 0\n    for i in range(m):\n        if l[i] != 0:\n            while j < n and l[i] > 0:\n                if k[j] == 0:\n                    l[i] -= 1\n                    k[j] = i + 1\n                j += 1\n    print(ans)\n    print(*k)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = [0] * n\n    ans = 0\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if l[d - 1] != 0:\n            l[d - 1] -= 1\n            k[i] = d\n            ans += f\n        else:\n            ans += b\n    j = 0\n    for i in range(m):\n        if l[i] != 0:\n            while j < n and l[i] > 0:\n                if k[j] == 0:\n                    l[i] -= 1\n                    k[j] = i + 1\n                j += 1\n    print(ans)\n    print(*k)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = [0] * n\n    ans = 0\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if l[d - 1] != 0:\n            l[d - 1] -= 1\n            k[i] = d\n            ans += f\n        else:\n            ans += b\n    j = 0\n    for i in range(m):\n        if l[i] != 0:\n            while j < n and l[i] > 0:\n                if k[j] == 0:\n                    l[i] -= 1\n                    k[j] = i + 1\n                j += 1\n    print(ans)\n    print(*k)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = [0] * n\n    ans = 0\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if l[d - 1] != 0:\n            l[d - 1] -= 1\n            k[i] = d\n            ans += f\n        else:\n            ans += b\n    j = 0\n    for i in range(m):\n        if l[i] != 0:\n            while j < n and l[i] > 0:\n                if k[j] == 0:\n                    l[i] -= 1\n                    k[j] = i + 1\n                j += 1\n    print(ans)\n    print(*k)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    drinks = list(map(int, input().split()))\n    output = 0\n    remain = []\n    olist = [0] * n\n    for i in range(n):\n        (demand, goodp, badp) = map(int, input().split())\n        if drinks[demand - 1] != 0:\n            drinks[demand - 1] -= 1\n            olist[i] = demand\n            output += goodp\n        else:\n            remain.append(i)\n            output += badp\n    rj = 0\n    for i in range(len(drinks)):\n        if drinks[i] == 0:\n            continue\n        while drinks[i] > 0:\n            if rj == len(remain):\n                break\n            olist[remain[rj]] = i + 1\n            rj += 1\n            drinks[i] -= 1\n        if rj == len(remain):\n            break\n    print(output)\n    for i in olist:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    d = {}\n    for i in range(len(c)):\n        d[i + 1] = c[i]\n    ans = []\n    profit = 0\n    r_1 = 0\n    for i in range(n):\n        (t_1, t_2, t_3) = map(int, input().split())\n        if d[t_1] > 0:\n            profit += t_2\n            d[t_1] -= 1\n            ans.append(t_1)\n        else:\n            profit += t_3\n            r_1 += 1\n            ans.append('')\n    print(profit)\n    rem = []\n    for i in d:\n        if d[i] > 0:\n            rem += [i] * d[i]\n            d[i] = 0\n        if len(rem) >= r_1:\n            break\n    j = 0\n    for i in range(len(ans)):\n        if ans[i] == '':\n            ans[i] = rem[j]\n            j += 1\n    print(*ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    d = {}\n    for i in range(len(c)):\n        d[i + 1] = c[i]\n    ans = []\n    profit = 0\n    r_1 = 0\n    for i in range(n):\n        (t_1, t_2, t_3) = map(int, input().split())\n        if d[t_1] > 0:\n            profit += t_2\n            d[t_1] -= 1\n            ans.append(t_1)\n        else:\n            profit += t_3\n            r_1 += 1\n            ans.append('')\n    print(profit)\n    rem = []\n    for i in d:\n        if d[i] > 0:\n            rem += [i] * d[i]\n            d[i] = 0\n        if len(rem) >= r_1:\n            break\n    j = 0\n    for i in range(len(ans)):\n        if ans[i] == '':\n            ans[i] = rem[j]\n            j += 1\n    print(*ans)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    l = [0] + list(map(int, input().split()))\n    s = 0\n    m = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if l[d] > 0:\n            l[d] -= 1\n            s += f\n            m.append(d)\n        else:\n            s += b\n            m.append(0)\n    c = 0\n    for i in range(n):\n        if m[i] == 0:\n            for j in range(c, k + 1):\n                if l[j] > 0:\n                    c = j\n                    m[i] = j\n                    l[j] -= 1\n                    break\n    print(s)\n    print(*m)\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    l = []\n    ans = 0\n    for z in range(n):\n        (d, f, b) = map(int, input().split())\n        l.append([d, f, b])\n    v = [0] * len(l)\n    res = [0] * n\n    a = []\n    for (j, i) in enumerate(l):\n        if c[i[0] - 1] > 0:\n            c[i[0] - 1] -= 1\n            ans += i[1]\n            v[j] = 1\n            res[j] = i[0]\n    s = len(l)\n    lc = len(c)\n    count = 0\n    for i in range(s):\n        if v[i] == 0:\n            ans += l[i][2]\n            count += 1\n    k = []\n    for i in range(lc):\n        if c[i] > 0:\n            while c[i] > 0 and count > 0:\n                c[i] -= 1\n                count -= 1\n                k.append(i + 1)\n    kl = len(res)\n    for i in range(kl):\n        if res[i] == 0:\n            res[i] = k.pop()\n    print(ans)\n    for i in res:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    l = []\n    ans = 0\n    for z in range(n):\n        (d, f, b) = map(int, input().split())\n        l.append([d, f, b])\n    v = [0] * len(l)\n    res = [0] * n\n    a = []\n    for (j, i) in enumerate(l):\n        if c[i[0] - 1] > 0:\n            c[i[0] - 1] -= 1\n            ans += i[1]\n            v[j] = 1\n            res[j] = i[0]\n    s = len(l)\n    lc = len(c)\n    count = 0\n    for i in range(s):\n        if v[i] == 0:\n            ans += l[i][2]\n            count += 1\n    k = []\n    for i in range(lc):\n        if c[i] > 0:\n            while c[i] > 0 and count > 0:\n                c[i] -= 1\n                count -= 1\n                k.append(i + 1)\n    kl = len(res)\n    for i in range(kl):\n        if res[i] == 0:\n            res[i] = k.pop()\n    print(ans)\n    for i in res:\n        print(i, end=' ')\n    print()", "test = int(input())\nfor _ in range(test):\n    (n, m) = map(int, input().split(' '))\n    c = [int(j) for j in input().split(' ')]\n    revenue = 0\n    finallist = []\n    remlist = []\n    p = 0\n    customer = []\n    for j in range(n):\n        customer.append([int(j) for j in input().split(' ')])\n        if c[customer[j][0] - 1] > 0:\n            revenue += customer[j][1]\n            finallist.append(customer[j][0])\n            c[customer[j][0] - 1] -= 1\n        else:\n            remlist.append(p)\n        p += 1\n    k = 0\n    while len(remlist):\n        if c[k] > 0:\n            revenue += customer[remlist[0]][2]\n            finallist.insert(remlist[0], k + 1)\n            c[k] -= 1\n            remlist.remove(remlist[0])\n        else:\n            k += 1\n    print(revenue)\n    print(*finallist, sep=' ')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split(' '))\n    c = [int(j) for j in input().split(' ')]\n    revenue = 0\n    finallist = []\n    remlist = []\n    p = 0\n    customer = []\n    for j in range(n):\n        customer.append([int(j) for j in input().split(' ')])\n        if c[customer[j][0] - 1] > 0:\n            revenue += customer[j][1]\n            finallist.append(customer[j][0])\n            c[customer[j][0] - 1] -= 1\n        else:\n            remlist.append(p)\n        p += 1\n    k = 0\n    while len(remlist):\n        if c[k] > 0:\n            revenue += customer[remlist[0]][2]\n            finallist.insert(remlist[0], k + 1)\n            c[k] -= 1\n            remlist.remove(remlist[0])\n        else:\n            k += 1\n    print(revenue)\n    print(*finallist, sep=' ')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = [0] * (m + 1)\n    assign = [0] * (n + 1)\n    s = 0\n    k = list(map(int, input().split()))\n    for i in range(m):\n        l[i + 1] = k[i]\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if l[d] > 0:\n            l[d] -= 1\n            s += f\n            assign[i] = d\n        else:\n            s += b\n    j = 0\n    while l[j] == 0:\n        j += 1\n    for i in range(n):\n        if assign[i] == 0:\n            if l[j] != 0:\n                l[j] -= 1\n                assign[i] = j\n            else:\n                while l[j] == 0:\n                    j += 1\n                l[j] -= 1\n                assign[i] = j\n    print(s)\n    for i in range(n):\n        print(assign[i], end=' ')\n    print()", "T = int(input())\nfor i in range(T):\n    (N, M) = map(int, input().split())\n    (s, c, r) = ([], 0, 0)\n    t = [int(x) for x in input().split()]\n    b = [0 for i in range(N)]\n    for j in range(N):\n        s.append([int(y) for y in input().split()])\n        if t[s[j][0] - 1] > 0:\n            t[s[j][0] - 1] -= 1\n            c += s[j][1]\n            b[j] = s[j][0]\n    for j in range(N):\n        if b[j] == 0:\n            for k in range(r, M):\n                if t[k] > 0:\n                    r = k\n                    t[k] -= 1\n                    c += s[j][2]\n                    b[j] = k + 1\n                    break\n    print(c)\n    for j in range(N - 1):\n        print(b[j], end=' ')\n    print(b[-1])", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    arr = []\n    amt = [int(x) for x in input().split()]\n    cost = 0\n    brr = [0 for i in range(n)]\n    for j in range(n):\n        arr.append([int(y) for y in input().split()])\n        if amt[arr[j][0] - 1] > 0:\n            amt[arr[j][0] - 1] -= 1\n            cost += arr[j][1]\n            brr[j] = arr[j][0]\n    r = 0\n    for j in range(n):\n        if brr[j] == 0:\n            for k in range(r, m):\n                if amt[k] > 0:\n                    r = k\n                    amt[k] -= 1\n                    cost += arr[j][2]\n                    brr[j] = k + 1\n                    break\n    print(cost)\n    for j in range(n - 1):\n        print(brr[j], end=' ')\n    print(brr[-1])", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    arr = []\n    amt = [int(x) for x in input().split()]\n    cost = 0\n    brr = [0 for i in range(n)]\n    for j in range(n):\n        arr.append([int(y) for y in input().split()])\n        if amt[arr[j][0] - 1] > 0:\n            amt[arr[j][0] - 1] -= 1\n            cost += arr[j][1]\n            brr[j] = arr[j][0]\n    r = 0\n    for j in range(n):\n        if brr[j] == 0:\n            for k in range(r, m):\n                if amt[k] > 0:\n                    r = k\n                    amt[k] -= 1\n                    cost += arr[j][2]\n                    brr[j] = k + 1\n                    break\n    print(cost)\n    for j in range(n - 1):\n        print(brr[j], end=' ')\n    print(brr[-1])", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    amt = [int(x) for x in input().split()]\n    cost = 0\n    brr = [0 for x in range(n)]\n    crr = []\n    for j in range(n):\n        (d, f, b) = [int(x) for x in input().split()]\n        if amt[d - 1] > 0:\n            amt[d - 1] -= 1\n            cost += f\n            brr[j] = d\n        else:\n            crr.append(j)\n            cost += b\n    r = 0\n    for j in crr:\n        for k in range(r, m):\n            if amt[k] > 0:\n                r = k\n                amt[k] -= 1\n                brr[j] = k + 1\n                break\n    print(cost)\n    for j in range(n - 1):\n        print(brr[j], end=' ')\n    print(brr[-1])", "t = int(input())\nfor i in range(t):\n    d = []\n    f = []\n    b = []\n    profit = 0\n    (n, m) = [int(x) for x in input().split()]\n    order = [0 for j in range(n)]\n    flav = [int(x) for x in input().split()]\n    for j in range(n):\n        inp = [int(x) for x in input().split()]\n        d.append(inp[0])\n        f.append(inp[1])\n        b.append(inp[2])\n    for j in range(n):\n        if flav[d[j] - 1] > 0:\n            profit = profit + f[j]\n            flav[d[j] - 1] -= 1\n            order[j] = d[j]\n    flag = 0\n    for j in range(n):\n        if order[j] == 0:\n            for k in range(flag, n):\n                if flav[flag] > 0:\n                    order[j] = flag + 1\n                    flav[flag] -= 1\n                    profit += b[j]\n                    break\n                else:\n                    flag += 1\n    print(profit)\n    for k in range(len(order) - 1):\n        print(order[k], end=' ')\n    print(order[-1])", "T = int(input())\nfor _ in range(T):\n    (n, m) = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    q = []\n    p = 0\n    y = 0\n    x = []\n    for i in range(n):\n        (d, f, b) = list(map(int, input().split()))\n        if c[d - 1] > 0:\n            c[d - 1] -= 1\n            p += f\n            q += [d]\n        else:\n            q += [-1]\n            y += 1\n            p += b\n    for i in range(m):\n        if c[i] != 0:\n            x += [[i, c[i]]]\n    for i in range(n):\n        if q[i] == -1:\n            if x[-1][1] > 0:\n                x[-1][1] -= 1\n                q[i] = x[-1][0] + 1\n            else:\n                x.pop()\n                x[-1][1] -= 1\n                q[i] = x[-1][0] + 1\n    print(p)\n    print(*q)", "import sys\nfrom math import ceil, floor\nRI = lambda : [int(x) for x in sys.stdin.readline().split()]\nrw = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (n, m) = RI()\n    c = RI()\n    prof = 0\n    ans = [-1] * n\n    arr = []\n    bs = []\n    for i in range(n):\n        (f, a, b) = RI()\n        f -= 1\n        if c[f] >= 1:\n            ans[i] = f + 1\n            c[f] -= 1\n            prof += a\n        else:\n            arr.append(i)\n            bs.append(b)\n    for i in range(len(arr)):\n        prof += bs[i]\n    ite = 0\n    for i in range(len(c)):\n        if c[i] != 0:\n            while c[i] != 0 and ite != len(arr):\n                ans[arr[ite]] = i + 1\n                c[i] -= 1\n                ite += 1\n        if ite == len(arr):\n            break\n    print(prof)\n    print(' '.join(map(str, ans)))", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    max_av = list(map(int, input().split()))\n    choices_and_price = []\n    array = [0] * M\n    for i in range(N):\n        a = list(map(int, input().split()))\n        array[a[0] - 1] += 1\n        choices_and_price.append(a)\n    left = []\n    end = {}\n    for i in range(M):\n        if max_av[i] > array[i]:\n            left.append([i, max_av[i] - array[i]])\n    profit = 0\n    result_array = []\n    for i in range(N):\n        p = choices_and_price[i]\n        if max_av[p[0] - 1] > 0:\n            max_av[p[0] - 1] -= 1\n            profit += p[1]\n            result_array.append(p[0])\n        else:\n            profit += p[2]\n            k = left[0]\n            left[0][1] -= 1\n            result_array.append(left[0][0] + 1)\n            if left[0][1] == 0:\n                left.pop(0)\n    print(profit)\n    print(*result_array)", "import sys\nimport bisect\nimport math\nfrom collections import defaultdict\nfrom collections import deque\nfrom collections import Counter\nmod = pow(10, 9) + 7\nmod2 = 998244353\n\ndef data():\n    return sys.stdin.readline().strip()\n\ndef out(var):\n    sys.stdout.write(var)\n\ndef l():\n    return list(map(int, data().split()))\n\ndef sl():\n    return list(map(str, data().split()))\n\ndef sp():\n    return map(int, data().split())\n\ndef ssp():\n    return map(str, data().split())\n\ndef l1d(n, val=0):\n    return [val for i in range(n)]\n\ndef l2d(n, m, val=0):\n    return [[val for i in range(n)] for j in range(m)]\nfor _ in range(int(data())):\n    (n, m) = sp()\n    arr = l()\n    (d, f, b) = (list(), list(), list())\n    for i in range(n):\n        (a, e, c) = sp()\n        d.append(a)\n        f.append(e)\n        b.append(c)\n        d[i] -= 1\n    answer = [0 for i in range(n)]\n    profit = 0\n    for i in range(n):\n        answer[i] = 0\n        if arr[d[i]]:\n            arr[d[i]] -= 1\n            answer[i] = 1\n            profit += f[i]\n        else:\n            profit += b[i]\n    j = 0\n    out(str(profit) + '\\n')\n    for i in range(n):\n        if answer[i]:\n            out(str(d[i] + 1) + ' ')\n            continue\n        while not arr[j]:\n            j += 1\n        out(str(j + 1) + ' ')\n        arr[j] -= 1\n    out('\\n')", "class Solution(object):\n\n    def __init__(self):\n        self.tests = int(input())\n        self.num_customers = 0\n        self.num_flavors = 0\n        self.flavors = []\n        self.d = []\n        self.f = []\n        self.b = []\n        self.ans = []\n        self.chosen_flavors = []\n        for _ in range(self.tests):\n            self.get_data()\n            self.solve()\n            self.print_output()\n            self.clear_data()\n    pass\n\n    def get_data(self):\n        (self.num_customers, self.num_flavors) = map(int, input().split())\n        self.ans = [0] * self.num_customers\n        self.chosen_flavors = [0] * self.num_customers\n        self.flavors = [0] + list(map(int, input().split()))\n        for _ in range(self.num_customers):\n            (d, f, b) = map(int, input().split())\n            self.d.append(d)\n            self.f.append(f)\n            self.b.append(b)\n        pass\n\n    def clear_data(self):\n        self.flavors.clear()\n        self.d.clear()\n        self.f.clear()\n        self.b.clear()\n        self.ans.clear()\n        self.chosen_flavors.clear()\n        pass\n\n    def print_output(self):\n        print(sum(self.ans))\n        for x in self.chosen_flavors:\n            print(x, end=' ')\n        pass\n\n    def solve(self):\n        for i in range(self.num_customers):\n            if self.flavors[self.d[i]]:\n                self.ans[i] = self.f[i]\n                self.flavors[self.d[i]] -= 1\n                self.chosen_flavors[i] = self.d[i]\n        begin = 1\n        for i in range(len(self.chosen_flavors)):\n            if self.chosen_flavors[i] == 0:\n                for j in range(begin, self.num_flavors + 1):\n                    if self.flavors[j]:\n                        self.ans[i] = self.b[i]\n                        self.flavors[j] -= 1\n                        self.chosen_flavors[i] = j\n                        begin = j\n                        break\n        pass\n\ndef main():\n    Solution()\n    pass\nmain()", "for i in range(int(input())):\n    (nn, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    d = dict()\n    pro = 0\n    arr = [0] * nn\n    k = 0\n    hold = []\n    while nn > 0:\n        nn -= 1\n        (l, m, n) = map(int, input().split())\n        if c[l - 1] > 0:\n            pro += m\n            arr[k] = l\n            c[l - 1] -= 1\n        else:\n            pro += n\n            hold.append(k)\n        k += 1\n    cou = len(hold)\n    for i in range(len(c)):\n        if c[i] > 0:\n            while c[i] > 0:\n                c[i] -= 1\n                if hold == []:\n                    cou = 0\n                    break\n                arr[hold[0]] = i + 1\n                hold.pop(0)\n                cou -= 1\n                if cou < 1:\n                    break\n        if cou < 1:\n            break\n    print(pro)\n    for i in range(len(arr)):\n        print(arr[i], end=' ')", "for e in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    pf = 0\n    sale = [0] * n\n    hold = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if c[d - 1] != 0:\n            sale[i] = d\n            pf += f\n            c[d - 1] -= 1\n        else:\n            hold += [[i, b]]\n    for i in range(m):\n        flag = 0\n        if c[i] > 0:\n            for j in range(c[i]):\n                if hold == []:\n                    flag = 1\n                    break\n                sale[hold[0][0]] = i + 1\n                pf += hold[0][1]\n                hold.pop(0)\n        if flag == 1:\n            break\n    print(pf)\n    print(*sale)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    que = []\n    ans = [-1] * n\n    count = 0\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if c[d - 1] != 0:\n            c[d - 1] -= 1\n            ans[i] = d\n            count += f\n        else:\n            que.append([i, b])\n    qptr = 0\n    lenq = len(que)\n    for i in range(m):\n        csvalue = c[i]\n        flag = 0\n        if c[i] > 0:\n            for j in range(csvalue):\n                if qptr == lenq:\n                    flag = 1\n                    break\n                chotulist = que[qptr]\n                ans[chotulist[0]] = i + 1\n                count += chotulist[1]\n                qptr += 1\n                if qptr == lenq:\n                    flag = 1\n                    break\n        if flag == 1:\n            break\n    print(count)\n    print(*ans)", "T = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    C = list(map(int, input().split()))\n    ans = [0] * N\n    delay = []\n    D = [0] * N\n    F = [0] * N\n    B = [0] * N\n    sm = 0\n    for i in range(N):\n        (D[i], F[i], B[i]) = map(int, input().split())\n        if C[D[i] - 1] != 0:\n            sm += F[i]\n            ans[i] = D[i]\n            C[D[i] - 1] -= 1\n        else:\n            delay.append(i)\n    k = 0\n    i = 0\n    while i < len(delay):\n        for k in range(len(C)):\n            if i >= len(delay):\n                break\n            if C[k] == 0:\n                continue\n            else:\n                for fug in range(C[k]):\n                    if i >= len(delay):\n                        break\n                    ans[delay[i]] = k + 1\n                    sm += B[delay[i]]\n                    i += 1\n    print(sm)\n    print(*ans)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    p = 0\n    s = [0] * n\n    j = 0\n    while j < n:\n        (d, f, b) = map(int, input().split())\n        d = d - 1\n        if l[d] > 0:\n            p = p + f\n            l[d] -= 1\n            s[j] = str(d + 1)\n        else:\n            p += b\n        j = j + 1\n    k = 0\n    for j in range(n):\n        if s[j] == 0:\n            while l[k] == 0:\n                k += 1\n            s[j] = str(k + 1)\n            l[k] -= 1\n    print(p)\n    k = ' '\n    print(k.join(s))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    count = list(map(int, input().split()))\n    profit = 0\n    aux = []\n    ans = [0] * n\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if f >= b and count[d - 1] > 0:\n            count[d - 1] -= 1\n            profit += f\n            ans[i] = d\n        else:\n            aux.append((i, b))\n    pos = 0\n    for i in aux:\n        while count[pos] == 0:\n            pos += 1\n        count[pos] -= 1\n        profit += i[1]\n        ans[i[0]] = pos + 1\n    print(profit)\n    print(*ans)", "for T in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    ind = [0] * (n + 1)\n    Di = [0] * (n + 1)\n    Fi = [0] * (n + 1)\n    Bi = [0] * (n + 1)\n    cost = 0\n    for i in range(n):\n        (di, fi, bi) = map(int, input().split())\n        Di[i] = di\n        Fi[i] = fi\n        Bi[i] = bi\n        di = di - 1\n        if a[di] != 0:\n            a[di] = a[di] - 1\n            ind[i] = 1\n            cost = cost + Fi[i]\n            b[i] = Di[i]\n        else:\n            ind[i] = 0\n            cost = cost + Bi[i]\n    t = 0\n    for i in range(n):\n        if b[i] == 0:\n            while a[t] == 0:\n                t = t + 1\n            b[i] = t + 1\n            a[t] = a[t] - 1\n    print(cost)\n    print(*b)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    ans = 0\n    ans_li = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if c[d - 1] > 0:\n            c[d - 1] -= 1\n            ans += f\n            ans_li += [d]\n        else:\n            ans_li += ['.']\n            ans += b\n    ctr = 0\n    for ij in range(len(ans_li)):\n        if ans_li[ij] == '.':\n            while c[ctr] == 0:\n                ctr += 1\n            ans_li[ij] = ctr + 1\n            c[ctr] -= 1\n    print(ans)\n    print(*ans_li)", "for t in range(int(input())):\n    (n, m) = [int(j) for j in input().split()]\n    c = [int(j) for j in input().split()]\n    demand_supply = dict()\n    for i in range(m):\n        demand_supply[i] = -1 * c[i]\n    flav = []\n    F = []\n    B = []\n    for i in range(n):\n        (d, f, b) = [int(j) for j in input().split()]\n        F.append(f)\n        B.append(b)\n        flav.append(d - 1)\n    ans = 0\n    l = []\n    flag = []\n    for i in range(n):\n        if c[flav[i]] > 0:\n            l.append(flav[i])\n            ans += F[i]\n            c[flav[i]] -= 1\n        else:\n            l.append(0)\n            ans += B[i]\n            flag.append(i)\n    ct = 0\n    for i in c:\n        while i > 0 and flag:\n            l[flag[0]] = ct\n            i -= 1\n            flag = flag[1:]\n        ct += 1\n    print(ans)\n    for i in l:\n        print(i + 1, end=' ')\n    print()", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, m) = map(int, input().split())\n    s = 0\n    arr = []\n    arrm = [int(m) for m in input().split()]\n    for i in range(n):\n        (d, v, c) = map(int, input().split())\n        if arrm[d - 1] != 0:\n            s = s + v\n            arr.append(d)\n            arrm[d - 1] = arrm[d - 1] - 1\n        else:\n            s = s + c\n            arr.append(0)\n    print(s)\n    arr1 = []\n    for i in range(m):\n        if arrm[i] != 0:\n            arr1.append([i + 1, arrm[i]])\n    j = 0\n    for i in range(n):\n        if arr[i] == 0:\n            arr[i] = arr1[j][0]\n            arr1[j][1] = arr1[j][1] - 1\n            if arr1[j][1] == 0:\n                j = j + 1\n        print(arr[i], end=' ')", "import random\nt = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    drinks = list(map(int, input().split()))\n    s = sum(drinks)\n    outpt = []\n    sm = 0\n    k = 0\n    remain = []\n    q = []\n    while n:\n        (d, f, b) = map(int, input().split())\n        if drinks[d - 1] > 0:\n            sm += f\n            outpt.append(d)\n            drinks[d - 1] -= 1\n            k += 1\n        else:\n            sm += b\n            outpt.append(0)\n            q.append(k)\n            k += 1\n        n -= 1\n    for i in range(m):\n        if drinks[i] != 0:\n            remain.append([i, drinks[i]])\n    x = 0\n    for i in q:\n        if remain[x][1] != 0:\n            outpt[i] = remain[x][0] + 1\n            remain[x][1] -= 1\n        else:\n            x += 1\n            outpt[i] = remain[x][0] + 1\n            remain[x][1] -= 1\n    print(sm)\n    print(*outpt)\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = 0\n    s1 = 0\n    ans = []\n    j = 0\n    q = []\n    q1 = []\n    p = list(map(int, input().split()))\n    for i in p:\n        s += i\n    if s >= n:\n        while n:\n            (d, f, b) = map(int, input().split())\n            if p[d - 1] > 0:\n                s1 += f\n                p[d - 1] -= 1\n                j += 1\n                ans.append(d)\n            else:\n                s1 += b\n                ans.append(0)\n                q.append(j)\n                j += 1\n            n -= 1\n        for i in range(len(p)):\n            if p[i] != 0:\n                q1.append([i, p[i]])\n        x = 0\n        for i in q:\n            if q1[x][1] != 0:\n                ans[i] = q1[x][0] + 1\n                q1[x][1] -= 1\n            else:\n                x += 1\n                ans[i] = q1[x][0] + 1\n                q1[x][1] -= 1\n    print(s1)\n    print(*ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    drink_freq = list(map(int, input().split()))\n    orders = []\n    ans = []\n    money = 0\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        orders.append((d, f, b))\n    for j in range(n):\n        if drink_freq[orders[j][0] - 1] != 0:\n            money += orders[j][1]\n            drink_freq[orders[j][0] - 1] -= 1\n            ans.append(orders[j][0])\n        else:\n            money += orders[j][2]\n            ans.append(-1)\n    print(money)\n    y = []\n    for l in range(len(drink_freq)):\n        if drink_freq[l] != 0:\n            y.append([l, drink_freq[l]])\n    ref = 0\n    for k in range(n):\n        if ans[k] == -1:\n            if y[ref][1] != 0:\n                ans[k] = y[ref][0] + 1\n                y[ref][1] -= 1\n            else:\n                ref += 1\n                ans[k] = y[ref][0] + 1\n                y[ref][1] -= 1\n    print(*ans)", "T = int(input())\nfor t in range(0, T):\n    (N, M) = input().split(' ')\n    C = list(map(int, input().split()))\n    DFB = []\n    profit = 0\n    Ccopy = C.copy()\n    lst = []\n    x = []\n    for i in range(int(N)):\n        DFB.append(list(map(int, input().split())))\n    for i in range(int(N)):\n        if C[DFB[i][0] - 1] > 0:\n            C[DFB[i][0] - 1] -= 1\n            profit += DFB[i][1]\n            lst.append(DFB[i][0])\n        else:\n            profit += DFB[i][2]\n            lst.append(0)\n    for i in range(int(M)):\n        if C[i] != 0:\n            x.append([i, C[i]])\n    for i in range(int(N)):\n        if lst[i] == 0:\n            if x[-1][1] != 0:\n                x[-1][1] -= 1\n                lst[i] = x[-1][0] + 1\n            else:\n                x.pop()\n                x[-1][1] -= 1\n                lst[i] = x[-1][0] + 1\n    print(profit)\n    print(*lst)", "while True:\n    try:\n        for _ in range(int(input())):\n            (n, m) = map(int, input().split())\n            max_flavours = list(map(int, input().split()))\n            people = []\n            for i in range(n):\n                people.append([i + 1] + list(map(int, input().split())))\n            extra_flavors = [0 for i in range(m)]\n            for (person, favorite, favMoney, nonFavMoney) in people:\n                extra_flavors[favorite - 1] += 1\n            remainingFlavours = []\n            for i in range(m):\n                extra_flavors[i] = max_flavours[i] - extra_flavors[i]\n                remainingFlavours.append([i + 1, extra_flavors[i]])\n            _extra_flavours = sorted(remainingFlavours, reverse=True, key=lambda x: x[1])\n            profit = 0\n            answer = []\n            currentExtra = 0\n            for (person, favorite, favMoney, nonFavMoney) in people:\n                if max_flavours[favorite - 1] > 0:\n                    profit += favMoney\n                    answer.append(favorite)\n                    max_flavours[favorite - 1] -= 1\n                else:\n                    profit += nonFavMoney\n                    if _extra_flavours[currentExtra][1] == 0:\n                        currentExtra += 1\n                        answer.append(_extra_flavours[currentExtra][0])\n                        _extra_flavours[currentExtra][1] -= 1\n                    else:\n                        answer.append(_extra_flavours[currentExtra][0])\n                        _extra_flavours[currentExtra][1] -= 1\n            print(profit)\n            print(*answer)\n    except (ValueError, EOFError) as e:\n        break", "def m():\n    t = int(input())\n    while t > 0:\n        (n, m) = map(int, input().split())\n        flavours = list(map(int, input().split()))\n        count = 0\n        contents = []\n        final = []\n        ind = []\n        for i in range(n):\n            a = list(map(int, input().split()))\n            contents.append(a)\n        cost = 0\n        for i in range(n):\n            if flavours[contents[i][0] - 1] != 0:\n                cost += contents[i][1]\n                flavours[contents[i][0] - 1] -= 1\n                final.append(contents[i][0])\n            elif flavours[contents[i][0] - 1] == 0:\n                cost += contents[i][2]\n                count += 1\n                final.append('x')\n                ind.append(i)\n        j = 0\n        for i in range(count):\n            while j < m:\n                if flavours[j] == 0:\n                    j += 1\n                elif flavours[j] != 0:\n                    flavours[j] -= 1\n                    final[ind[i]] = j + 1\n                    break\n        print(cost)\n        for i in range(n):\n            print(final[i], end=' ')\n        t -= 1\nm()", "def main():\n    for _ in range(int(input())):\n        (n, ml) = [int(x) for x in input().split()]\n        m = [int(x) for x in input().split()]\n        prof = 0\n        remc = 0\n        ans = ['-'] * n\n        for i in range(n):\n            (d, f, b) = [int(x) for x in input().split()]\n            if m[d - 1]:\n                m[d - 1] -= 1\n                ans[i] = d\n                prof += f\n            else:\n                prof += b\n                remc += 1\n        remd = []\n        for i in range(ml):\n            if m[i]:\n                remd.extend([i + 1] * m[i])\n            if len(remd) >= remc:\n                break\n        i = 0\n        for j in range(n):\n            if ans[j] == '-':\n                ans[j] = remd[i]\n                i += 1\n        print(prof)\n        print(' '.join([str(x) for x in ans]))\nmain()", "for _ in range(int(input())):\n    (n, ml) = [int(x) for x in input().split()]\n    m = [int(x) for x in input().split()]\n    prof = 0\n    remc = 0\n    ans = ['-'] * n\n    for i in range(n):\n        (d, f, b) = [int(x) for x in input().split()]\n        if m[d - 1]:\n            m[d - 1] -= 1\n            ans[i] = d\n            prof += f\n        else:\n            prof += b\n            remc += 1\n    remd = []\n    for i in range(ml):\n        if m[i]:\n            remd.extend([i + 1] * m[i])\n        if len(remd) >= remc:\n            break\n    i = 0\n    for j in range(n):\n        if ans[j] == '-':\n            ans[j] = remd[i]\n            i += 1\n    print(prof)\n    print(' '.join([str(x) for x in ans]))", "from array import *\ntc = int(input())\nwhile tc:\n    (n, m) = input().split(' ')\n    n = int(n)\n    m = int(m)\n    p = [int(x) for x in input().split(' ')]\n    hash_t = []\n    for i in range(n):\n        (a, b, c) = input().split(' ')\n        a = int(a)\n        b = int(b)\n        c = int(c)\n        hash_t.append([a, b, c])\n    h = [0] * m\n    for i in range(n):\n        h[hash_t[i][0] - 1] += 1\n    ans = []\n    count = []\n    index = 0\n    for i in range(m):\n        diff = int(p[i] - h[i])\n        if diff > 0:\n            ans.append([i, diff])\n    sum = 0\n    for i in range(n):\n        if p[hash_t[i][0] - 1] > 0:\n            p[hash_t[i][0] - 1] -= 1\n            sum += hash_t[i][1]\n            count.append(hash_t[i][0])\n        else:\n            sum += hash_t[i][2]\n            if ans[index][1] > 0:\n                count.append(ans[index][0] + 1)\n                ans[index][1] -= 1\n            else:\n                index += 1\n                count.append(ans[index][0] + 1)\n                ans[index][1] -= 1\n    print(sum)\n    for i in range(len(count)):\n        print(count[i], end=' ')\n    tc -= 1", "t = int(input())\nwhile t != 0:\n    (n, m) = list(map(int, input().split()))\n    flavour_count = list(map(int, input().split()))\n    waiting_cust = []\n    max_profit = 0\n    order = []\n    x = []\n    for i in range(n):\n        (d, f, b) = list(map(int, input().split()))\n        if flavour_count[d - 1] > 0:\n            flavour_count[d - 1] -= 1\n            max_profit += f\n            order.append(d)\n        else:\n            max_profit += b\n            order.append(0)\n    for i in range(m):\n        if flavour_count[i] != 0:\n            x.append([i, flavour_count[i]])\n    for i in range(n):\n        if order[i] == 0:\n            if x[-1][1] != 0:\n                x[-1][1] -= 1\n                order[i] = x[-1][0] + 1\n            else:\n                x.pop()\n                x[-1][1] -= 1\n                order[i] = x[-1][0] + 1\n    print(max_profit)\n    print(*order)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    a = [0 for _ in range(n)]\n    p = 0\n    for j in range(n):\n        (d, f, b) = map(int, input().split())\n        if c[d - 1] > 0:\n            c[d - 1] = c[d - 1] - 1\n            p = p + f\n            a[j] = d\n        else:\n            p = p + b\n    k = 0\n    j = 0\n    while j < n:\n        if a[j] == 0 and c[k] != 0:\n            a[j] = k + 1\n            c[k] = c[k] - 1\n        elif a[j] == 0 and c[k] == 0:\n            k = k + 1\n            j = j - 1\n        j = j + 1\n    print(p)\n    print(*a)", "from collections import defaultdict as dc\nfor _ in range(int(input())):\n    bill = 0\n    (n, m) = [int(i) for i in input().split()]\n    c = [int(i) for i in input().split()]\n    p = 0\n    a = []\n    for i in range(n):\n        (d, b, f) = [int(i) for i in input().split()]\n        if c[d - 1] > 0:\n            bill += b\n            c[d - 1] -= 1\n            a.append(d)\n        else:\n            bill += f\n            p += 1\n            a.append('c')\n    l = []\n    for i in range(m):\n        if c[i] > 0:\n            l = l + [i + 1] * c[i]\n            p = p - c[i]\n        if p <= 0:\n            break\n    j = 0\n    for i in range(n):\n        if a[i] == 'c':\n            a[i] = l[j]\n            j += 1\n    print(bill)\n    print(*a)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    l = []\n    k = [0 for _ in range(n)]\n    max_pro = 0\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if c[d - 1] > 0:\n            c[d - 1] -= 1\n            k[i] = d\n            max_pro += f\n        else:\n            l.append((d, b, i))\n    (v, j) = (0, 0)\n    while j < len(l):\n        if c[v] == 0:\n            v = v + 1\n        else:\n            (d, b, i) = l[j]\n            k[i] = v + 1\n            max_pro += b\n            c[v] -= 1\n            j = j + 1\n    print(max_pro)\n    print(*k)", "x = int(input())\nfor __ in range(x):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    l = []\n    for __ in range(a):\n        l.append(list(map(int, input().split())))\n    k = 0\n    w = [0] * a\n    s = 0\n    q = []\n    for i in range(len(l)):\n        if c[l[i][0] - 1] > 0:\n            k += l[i][1]\n            c[l[i][0] - 1] -= 1\n            w[i] = l[i][0]\n        else:\n            k += l[i][2]\n            s += 1\n            q.append(i)\n    p = 0\n    while s > 0:\n        while c[p] == 0:\n            p += 1\n        c[p] -= 1\n        w[q[len(q) - 1 - s]] = p + 1\n        s -= 1\n    print(k)\n    print(*w)", "t = int(input())\nwhile t:\n    t -= 1\n    s = 0\n    r = []\n    a = input().split()\n    b = list(map(int, input().split()))\n    for i in range(int(a[0])):\n        c = list(map(int, input().split()))\n        if b[c[0] - 1] > 0:\n            s += c[1]\n            b[c[0] - 1] -= 1\n            r += [c[0]]\n        else:\n            s += c[2]\n            r += [-10]\n    print(s)\n    tt = 0\n    for i in range(int(a[0])):\n        if r[i] != -10:\n            print(r[i], end=' ')\n        else:\n            while b[tt] == 0:\n                tt += 1\n            print(tt + 1, end=' ')\n            b[tt] -= 1\n    print()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    m1 = list(map(int, input().split()))\n    d = []\n    f = []\n    b = []\n    res = [0] * n\n    profit = 0\n    for i in range(n):\n        (d1, f1, b1) = map(int, input().split())\n        d.append(d1)\n        f.append(f1)\n        b.append(b1)\n        x = d[i]\n        if m1[x - 1] > 0:\n            res[i] = x\n            m1[x - 1] = m1[x - 1] - 1\n            profit = profit + f[i]\n        else:\n            res[i] = -100\n            profit = profit + b[i]\n    print(profit)\n    k = 0\n    for j in range(n):\n        if res[j] != -100:\n            print(res[j], end=' ')\n        else:\n            while m1[k] == 0:\n                k += 1\n            print(k + 1, end=' ')\n            m1[k] -= 1", "t = int(input())\nfor x in range(t):\n    (n, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    costs = []\n    total = 0\n    indices = []\n    left = []\n    for y in range(n):\n        (d, f, b) = map(int, input().split())\n        if c[d - 1] > 0:\n            c[d - 1] = c[d - 1] - 1\n            total = total + f\n            costs.append(d)\n        else:\n            costs.append(0)\n            indices.append([y, b])\n    for y in range(len(c)):\n        if c[y] > 0:\n            left.append([y + 1, c[y]])\n    x = 0\n    for y in range(len(indices)):\n        if left[x][1] == 0:\n            x = x + 1\n        costs[indices[y][0]] = left[x][0]\n        left[x][1] = left[x][1] - 1\n        total = total + indices[y][1]\n    print(total)\n    print(*costs, sep=' ')", "try:\n    for _ in range(int(input())):\n        (n, m) = map(int, input().split(' '))\n        ans = [0 for i in range(n)]\n        ans1 = 0\n        capacity = list(map(int, input().split(' ')))\n        for i in range(n):\n            (d, f, b) = list(map(int, input().split(' ')))\n            if capacity[d - 1] > 0:\n                ans1 += f\n                ans[i] = d\n                capacity[d - 1] -= 1\n            else:\n                ans1 += b\n        capacity = list(enumerate(capacity, 1))\n        capacity = filter(lambda x: x[1] > 0, capacity)\n        capacity = list(capacity)\n        ele = capacity[0][1]\n        for i in range(n):\n            if ans[i] == 0:\n                if ele == 0:\n                    del capacity[0]\n                    ele = capacity[0][1]\n                ans[i] = capacity[0][0]\n                ele -= 1\n        print(ans1)\n        for i in ans:\n            print(i, end=' ')\nexcept Exception as e:\n    pass", "T = int(input())\nwhile T > 0:\n    (N, M) = list(map(int, input().split()))\n    Ci = list(map(int, input().split()))\n    prof = 0\n    order = [0] * N\n    for i in range(N):\n        (D, F, B) = map(int, input().split())\n        if Ci[D - 1] > 0:\n            prof += F\n            Ci[D - 1] -= 1\n            order[i] = D\n        else:\n            prof += B\n            order[i] = 0\n    stock = []\n    for i in range(M):\n        if Ci[i] != 0:\n            stock.append([i, Ci[i]])\n    k = 0\n    for i in range(N):\n        if order[i] == 0:\n            order[i] = stock[k][0] + 1\n            stock[k][1] -= 1\n            if stock[k][1] == 0:\n                k += 1\n    print(prof)\n    print(*order)\n    T -= 1", "def maximize(n, m, c, u):\n    sum = 0\n    g = [0] * n\n    r = []\n    for i in range(n):\n        if c[u[i][0] - 1] > 0:\n            c[u[i][0] - 1] -= 1\n            sum += u[i][1]\n            g[i] = u[i][0]\n        else:\n            r.append(i)\n            sum += u[i][2]\n    ri = 0\n    rn = len(r)\n    for i in range(m):\n        if ri == rn:\n            break\n        else:\n            while c[i] > 0:\n                if ri == rn:\n                    break\n                else:\n                    c[i] -= 1\n                    g[r[ri]] = i + 1\n                    ri += 1\n    print(sum)\n    for (i, gi) in enumerate(g):\n        if i < n - 1:\n            print(gi, end=' ')\n        else:\n            print(gi)\nt = 0\ntry:\n    t = int(input())\nexcept:\n    pass\nwhile t > 0:\n    (n, m) = list(map(int, input().rstrip().split()))\n    c = list(map(int, input().rstrip().split()))\n    u = []\n    for i in range(n):\n        u.append(list(map(int, input().rstrip().split())))\n    maximize(n, m, c, u)\n    t -= 1", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    M = list(map(int, input().split()))\n    profit = 0\n    order = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if M[d - 1] > 0:\n            M[d - 1] -= 1\n            profit += f\n            order.append(d)\n        else:\n            profit += b\n            order.append(0)\n    print(profit)\n    remaining = []\n    for i in range(m):\n        if M[i] != 0:\n            remaining.append([i, M[i]])\n    k = 0\n    for i in range(n):\n        if order[i] != 0:\n            print(order[i], end=' ')\n        else:\n            print(remaining[k][0] + 1, end=' ')\n            remaining[k][1] -= 1\n            if remaining[k][1] == 0:\n                k += 1\n    print()\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    temp = n\n    lol = []\n    profit = 0\n    while temp > 0:\n        (d, f, b) = map(int, input().split())\n        if l[d - 1] > 0:\n            profit += f\n            l[d - 1] -= 1\n            lol.append(d)\n        else:\n            lol.append(-100)\n            profit += b\n        temp -= 1\n    print(profit)\n    j = 0\n    for i in range(n):\n        if lol[i] != -100:\n            print(lol[i], end=' ')\n        else:\n            while l[j] == 0:\n                j += 1\n            print(j + 1, end=' ')\n            l[j] -= 1", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    profit = 0\n    s = [0] * n\n    for j in range(n):\n        (d, f, b) = map(int, input().split())\n        d = d - 1\n        if l[d] > 0:\n            profit += f\n            l[d] -= 1\n            s[j] = str(d + 1)\n        else:\n            profit += b\n    k = 0\n    for j in range(n):\n        if s[j] == 0:\n            while l[k] == 0:\n                k += 1\n            s[j] = str(k + 1)\n            l[k] -= 1\n    print(profit)\n    k = ' '\n    print(k.join(s))", "t = int(input())\nfrom collections import defaultdict\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ba = []\n    sa = []\n    ans = 0\n    hash = defaultdict(list)\n    for i in range(n):\n        (a, b, c) = map(int, input().split())\n        if l[a - 1] != 0:\n            hash[i + 1].append(a)\n            l[a - 1] -= 1\n            ans += b\n        else:\n            ba.append([c, i + 1])\n    for (j, i) in enumerate(l):\n        if i != 0:\n            sa.append([i, j + 1])\n    ba.reverse()\n    sa.reverse()\n    if sa != []:\n        for i in range(len(ba)):\n            if sa == []:\n                break\n            if sa[0][0] != 0:\n                ans += ba[i][0]\n                hash[ba[i][1]].append(sa[0][1])\n                sa[0][0] -= 1\n            if sa[0][0] == 0:\n                sa.pop(0)\n    lo = [0] * n\n    for i in hash.keys():\n        z = hash[i][0]\n        lo[i - 1] = z\n    print(ans)\n    print(*lo)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(0, t):\n    p = 0\n    h = 0\n    z = []\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    for j in range(0, n):\n        (d, c, b) = list(map(int, input().split()))\n        if a[d - 1] > 0:\n            p = p + c\n            z.append(d)\n            a[d - 1] -= 1\n        else:\n            p = p + b\n            z.append(0)\n    print(p)\n    for j in range(0, n):\n        if z[j] != 0:\n            print(z[j], end=' ')\n        else:\n            while a[h] == 0:\n                h += 1\n            print(h + 1, end=' ')\n            a[h] -= 1", "def get(arr, i, m):\n    while i <= m:\n        if arr[i] > 0:\n            return i\n        i += 1\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = [int(x) for x in input().split()]\n    arr.insert(0, 0)\n    profit = 0\n    res = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if arr[d] > 0:\n            profit += f\n            arr[d] -= 1\n            res.append(d)\n        else:\n            profit += b\n            res.append(-1)\n    print(profit)\n    id = 1\n    for i in res:\n        if i != -1:\n            print(i, end=' ')\n        else:\n            id = get(arr, id, m)\n            print(id, end=' ')\n            arr[id] -= 1\n    print()", "t = int(input())\nfor x in range(t):\n    inp = list(map(int, input().split()))\n    n = inp[0]\n    m = inp[1]\n    d = []\n    f = []\n    b = []\n    answer = []\n    profit = 0\n    number = list(map(int, input().split()))\n    for i in range(n):\n        flavor = list(map(int, input().split()))\n        d.append(flavor[0])\n        f.append(flavor[1])\n        b.append(flavor[2])\n    for cust in range(n):\n        if number[d[cust] - 1] > 0:\n            answer.append(d[cust])\n            number[d[cust] - 1] -= 1\n            profit += f[cust]\n        else:\n            answer.append(0)\n    for j in range(len(number)):\n        if number[j] > 0:\n            break\n    for index in range(len(answer)):\n        if answer[index] == 0:\n            answer[index] = j + 1\n            number[j] -= 1\n            profit += b[index]\n            if number[j] == 0:\n                while number[j] == 0:\n                    j += 1\n                    if j == m:\n                        break\n    print(profit)\n    print(*answer)", "t = int(input())\nfor i in range(0, t):\n    Sum = 0\n    freq = []\n    (n, m) = map(int, input().split())\n    ans = [0] * n\n    freq = [int(x) for x in input().split()]\n    for k in range(1, n + 1):\n        val = list(map(int, input().split()))\n        if freq[val[0] - 1] != 0:\n            ans[k - 1] = val[0]\n            Sum = Sum + val[1]\n            freq[val[0] - 1] -= 1\n        else:\n            Sum = Sum + val[2]\n    f = 1\n    p = 1\n    while f <= m and p <= n:\n        if ans[p - 1] == 0 and freq[f - 1] != 0:\n            ans[p - 1] = f\n            p += 1\n            freq[f - 1] -= 1\n        elif freq[f - 1] == 0:\n            f += 1\n        else:\n            p += 1\n    print(Sum)\n    for g in ans:\n        print(g, end=' ')", "t = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    k = a.copy()\n    c = 0\n    o = []\n    remain = []\n    for j in range(n):\n        (d, f, b) = map(int, input().split())\n        if a[d - 1] > 0:\n            c = c + f\n            o.append(d)\n            a[d - 1] -= 1\n        else:\n            c = c + b\n            o.append(0)\n            remain.append(j)\n        if k[d - 1] > 0:\n            k[d - 1] -= 1\n    for j in range(len(a)):\n        if a[j] > 0:\n            while a[j] > 0 and remain != []:\n                o[remain.pop()] = j + 1\n                a[j] -= 1\n    print(c)\n    print(' '.join(map(str, o)))\n    t = t - 1", "t = int(input())\nfor z in range(t):\n    (n, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    rd = {}\n    profit = 0\n    lessprofit = 0\n    ans = []\n    remaining = []\n    for i in range(n):\n        (di, fi, bi) = map(int, input().split())\n        if c[di - 1] > 0:\n            c[di - 1] -= 1\n            profit += fi\n            ans.append(di)\n        else:\n            lessprofit += bi\n            ans.append(-1)\n    print(profit + lessprofit)\n    j = 0\n    for i in range(n):\n        if ans[i] == -1:\n            while c[j] == 0:\n                j += 1\n            ans[i] = j + 1\n            c[j] -= 1\n    print(*ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 0\n    l = []\n    o = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if a[d - 1] > 0:\n            c += f\n            a[d - 1] -= 1\n            o.append(d)\n        else:\n            c += b\n            o.append(0)\n    print(c)\n    w = []\n    for h in range(len(a)):\n        if a[h] != 0:\n            w.append([h, a[h]])\n    ijkl = 0\n    for lm in range(len(o)):\n        if o[lm] == 0:\n            if w[ijkl][1] != 0:\n                o[lm] = w[ijkl][0] + 1\n                w[ijkl][1] -= 1\n            else:\n                ijkl += 1\n                o[lm] = w[ijkl][0] + 1\n                w[ijkl][1] -= 1\n    print(*o)", "testcase = int(input())\nfor i in range(testcase):\n    (n, m) = input().split()\n    (n, m) = [int(n), int(m)]\n    c = [int(i) for i in input().split()]\n    dg = []\n    l2 = []\n    output = [0] * n\n    count = 0\n    for j in range(n):\n        (d, f, b) = input().split()\n        (d, f, b) = [int(d), int(f), int(b)]\n        l2.append([d, f, b])\n        if c[d - 1] > 0:\n            output[j] = d\n            count += f\n            c[d - 1] -= 1\n        else:\n            count += b\n    for i in range(m):\n        if c[i] > 0:\n            dg.append(i + 1)\n    for i in range(n):\n        if output[i] == 0:\n            output[i] = dg[0]\n            c[dg[0] - 1] -= 1\n            if c[dg[0] - 1] == 0:\n                dg = dg[1:]\n    print(count)\n    print(' '.join([str(i) for i in output]))", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    c = [int(x) for x in input().split()]\n    sum = 0\n    res = []\n    for _ in range(n):\n        (d, f, b) = [int(x) for x in input().split()]\n        if c[d - 1] > 0:\n            c[d - 1] -= 1\n            sum += f\n            res.append(d)\n        elif c[d - 1] == 0:\n            res.append(0)\n            sum += b\n    for y in range(len(c)):\n        if c[y] != 0:\n            m = y\n            break\n    for x in range(len(res)):\n        if res[x] == 0:\n            for y in range(m, len(c)):\n                if c[y] > 0:\n                    res[x] = y + 1\n                    c[y] -= 1\n                    break\n                else:\n                    m += 1\n    print(sum)\n    l = [print(i, end=' ') for i in res]", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    x = []\n    ans = []\n    cost = 0\n    rem = []\n    for i in range(n):\n        c = list(map(int, input().split()))\n        x.append(c)\n    for i in range(len(x)):\n        if l[x[i][0] - 1] > 0:\n            l[x[i][0] - 1] -= 1\n            ans.append(x[i][0])\n            cost += x[i][1]\n        else:\n            rem.append(i)\n            cost += x[i][2]\n    q = 0\n    k = 0\n    while k < len(rem):\n        if l[q] > 0:\n            ans.insert(rem[k], q + 1)\n            l[q] -= 1\n            k += 1\n        else:\n            q += 1\n    print(cost)\n    print(*ans)", "t = input()\nfor ii in range(int(t)):\n    (n, m) = map(int, input().split())\n    c = list(map(int, input().split()))\n    ans = 0\n    remain = []\n    ansL = [0] * n\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if c[d - 1] > 0:\n            c[d - 1] -= 1\n            ans += f\n            ansL[i] = d\n        else:\n            remain.append((i, d, f, b))\n    j = 0\n    k = 0\n    cc = []\n    for i in range(len(c)):\n        if c[i] > 0:\n            cc.append([i + 1, c[i]])\n    j = 0\n    for i in range(len(remain)):\n        ans += remain[i][3]\n        ansL[remain[i][0]] = cc[j][0]\n        cc[j][1] -= 1\n        if cc[j][1] == 0:\n            j += 1\n    print(ans)\n    for i in range(len(ansL)):\n        print(ansL[i], end=' ')\n    print()", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    profit = 0\n    s = [0] * n\n    for j in range(n):\n        (d, f, b) = map(int, input().split())\n        d = d - 1\n        if l[d] > 0:\n            profit += f\n            l[d] -= 1\n            s[j] = str(d + 1)\n        else:\n            profit += b\n    k = 0\n    for j in range(n):\n        if s[j] == 0:\n            while l[k] == 0:\n                k += 1\n            s[j] = str(k + 1)\n            l[k] -= 1\n    print(profit)\n    k = ' '\n    print(k.join(s))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    c = [int(x) for x in input().split()]\n    d = []\n    f = []\n    b = []\n    for i in range(n):\n        (a1, b1, c1) = map(int, input().split())\n        d.append(a1)\n        f.append(b1)\n        b.append(c1)\n    mp = 0\n    ans = []\n    for i in range(n):\n        if c[d[i] - 1] > 0:\n            mp = mp + f[i]\n            c[d[i] - 1] = c[d[i] - 1] - 1\n            ans.append(d[i])\n        else:\n            mp = mp + b[i]\n            ans.append(-1)\n    print(mp)\n    j = 0\n    for i in range(n):\n        if ans[i] != -1:\n            print(ans[i], end=' ')\n        else:\n            while c[j] == 0:\n                j += 1\n            print(j + 1, end=' ')\n            c[j] -= 1", "t = int(input())\n\ndef printlist(ll):\n    st = ''\n    for i in ll:\n        st += str(i) + ' '\n    return st\nfor x in range(0, t):\n    profit = 0\n    (n, m) = map(int, input().split())\n    fos = [0] * n\n    tbd = []\n    flavours = list(map(int, input().split()))\n    for y in range(0, n):\n        (d, f, b) = map(int, input().split())\n        if flavours[d - 1] > 0:\n            flavours[d - 1] = flavours[d - 1] - 1\n            profit += f\n            fos[y] = d\n        else:\n            tbd.append(y)\n            profit += b\n    c = 0\n    for y in range(0, len(flavours)):\n        while flavours[y] > 0 and c < len(tbd):\n            fos[tbd[c]] = y + 1\n            flavours[y] -= 1\n            c += 1\n        if c >= len(tbd):\n            break\n    print(profit)\n    print(printlist(fos))", "try:\n    t = int(input())\n    while t > 0:\n        (n, m) = [int(x) for x in input().split()]\n        cust_order = []\n        max_profit = 0\n        C = list(map(int, input().split()))\n        for i in range(n):\n            (d, f, b) = map(int, input().split())\n            if C[d - 1] > 0:\n                C[d - 1] = C[d - 1] - 1\n                cust_order.append(d)\n                max_profit = max_profit + f\n            else:\n                cust_order.append(0)\n                max_profit = max_profit + b\n        firs_drink = 0\n        for k in range(len(cust_order)):\n            if cust_order[k] != 0:\n                continue\n            for l in range(firs_drink, len(C)):\n                if C[l] > 0:\n                    cust_order[k] = l + 1\n                    C[l] = C[l] - 1\n                    break\n                else:\n                    firs_drink = l + 1\n        print(max_profit)\n        print(*cust_order)\n        t = t - 1\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    p = 0\n    o = []\n    x = []\n    for i in range(n):\n        k = list(map(int, input().split()))\n        if l[k[0] - 1] > 0:\n            p += k[1]\n            l[k[0] - 1] -= 1\n            o.append(k[0])\n        else:\n            o.append(0)\n            p += k[2]\n            x.append(i)\n    j = 0\n    i = 0\n    while i < n and j < len(x):\n        if l[i] > 0:\n            o[x[j]] = i + 1\n            l[i] -= 1\n            j += 1\n        else:\n            i += 1\n    print(p)\n    for i in o:\n        print(i, end=' ')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    av = list(map(int, input().split()))\n    dem = {}\n    for i in range(m):\n        dem[i + 1] = av[i]\n    s = 0\n    l = [-1] * n\n    left = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if d in dem:\n            s += f\n            dem[d] -= 1\n            l[i] = d\n            if dem[d] == 0:\n                del dem[d]\n        else:\n            s += b\n            left.append(i)\n    for i in left:\n        for j in dem:\n            l[i] = j\n            dem[j] -= 1\n            if dem[j] == 0:\n                del dem[j]\n            break\n    print(s)\n    for i in l:\n        print(i, end=' ')", "test = int(input())\nfor _ in range(test):\n    (n, m) = map(int, input().split())\n    cx = list(map(int, input().split()))\n    dx = []\n    fx = []\n    bx = []\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        dx.append(d)\n        fx.append(f)\n        bx.append(b)\n    profit = 0\n    order = []\n    pending = []\n    for i in range(n):\n        if cx[dx[i] - 1] > 0:\n            cx[dx[i] - 1] -= 1\n            profit += fx[i]\n            order.append(dx[i])\n        else:\n            pending.append(i)\n            profit += bx[i]\n            order.append(0)\n    cnt = 0\n    flag = 0\n    for i in range(m):\n        while cx[i] > 0:\n            if cnt == len(pending):\n                flag = 1\n                break\n            order[pending[cnt]] = i + 1\n            cnt += 1\n            cx[i] -= 1\n        if flag == 1:\n            break\n    print(profit)\n    print(' '.join((str(x) for x in order)))", "for _ in range(int(input().strip())):\n    (n, m) = map(int, input().strip().split())\n    freq = [0] + list(map(int, input().strip().split()))\n    ans = [0] * n\n    total = 0\n    for i in range(n):\n        (d, f, b) = map(int, input().strip().split())\n        if freq[d]:\n            total += f\n            freq[d] -= 1\n            ans[i] = d\n        else:\n            total += b\n    ind = 0\n    for i in range(n):\n        if ans[i] == 0:\n            while freq[ind] == 0:\n                ind += 1\n            ans[i] = ind\n            freq[ind] -= 1\n    print(total)\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().strip().split(' '))\n    ar_m = [int(x) for x in input().split()]\n    count = 0\n    ar_res = []\n    temp = []\n    q = 0\n    for j in range(n):\n        (d, f, b) = map(int, input().strip().split(' '))\n        if ar_m[d - 1] != 0:\n            count += f\n            ar_res.append(d)\n            ar_m[d - 1] -= 1\n        else:\n            count += b\n            temp.append(j)\n            q += 1\n    k = 0\n    index = 0\n    while k != q:\n        for j in range(index, m):\n            if ar_m[j] != 0:\n                ar_res.insert(temp[k], j + 1)\n                k += 1\n                ar_m[j] -= 1\n                index = j\n                break\n    print(count)\n    for j in range(n):\n        print(ar_res[j], end=' ')\n    print(' ')", "T = int(input())\nfor t in range(T):\n    (N, M) = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    likes = [0 for i in range(M)]\n    fs = []\n    bs = []\n    ds = []\n    for n in range(N):\n        (d, f, b) = list(map(int, input().split()))\n        ds.append(d)\n        likes[d - 1] += 1\n        fs.append(f)\n        bs.append(b)\n    stock = []\n    for i in range(M):\n        stock.append([i, c[i] - likes[i]])\n    stock.sort(reverse=True, key=lambda x: x[1])\n    profit = 0\n    ans = []\n    for i in range(N):\n        if c[ds[i] - 1] > 0:\n            c[ds[i] - 1] -= 1\n            ans.append(ds[i])\n            profit += fs[i]\n        else:\n            ans.append(stock[0][0] + 1)\n            stock[0][1] -= 1\n            if stock[0][1] == 0:\n                stock.pop(0)\n            profit += bs[i]\n    print(profit)\n    print(' '.join(map(str, ans)))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    c = []\n    c = list(map(int, input().split()))\n    req = []\n    ans = 0\n    for i in range(n):\n        (d, f, b) = map(int, input().split())\n        if c[d - 1] > 0:\n            c[d - 1] -= 1\n            ans += f\n            req.append(d)\n        else:\n            ans += b\n            req.append(0)\n    excess = []\n    for x in range(len(c)):\n        if c[x] > 0:\n            excess.append([x, c[x]])\n    pointer = 0\n    for i in range(len(req)):\n        if req[i] == 0:\n            if excess[pointer][1] > 0:\n                req[i] = excess[pointer][0] + 1\n                excess[pointer][1] -= 1\n            else:\n                pointer += 1\n                req[i] = excess[pointer][0] + 1\n                excess[pointer][1] -= 1\n    print(ans)\n    print(*req)", "from sys import stdin, stdout\ninput = stdin.readline\nfor T in range(int(input())):\n    (N, M) = map(int, input().split())\n    C = list(map(int, input().split()))\n    profit = 0\n    order = [-1] * N\n    for i in range(N):\n        (D, F, B) = map(int, input().split())\n        if C[D - 1] > 0:\n            profit += F\n            C[D - 1] -= 1\n            order[i] = D\n        else:\n            profit += B\n    remaining = {}\n    for i in range(M):\n        if C[i] > 0:\n            remaining[i + 1] = C[i]\n    id = 0\n    keys = list(remaining.keys())\n    count = 0\n    for i in range(N):\n        if order[i] == -1:\n            key = keys[id]\n            order[i] = key\n            count += 1\n            if remaining[key] == count:\n                id += 1\n                count = 0\n    print(profit)\n    print(*order)"]