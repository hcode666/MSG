["for T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = {}\n    for i in a:\n        d[i] = True\n    c = 0\n    for i in a:\n        try:\n            d[i - 1] == True\n        except:\n            try:\n                d[i + 1] == True\n            except:\n                d[i + 1] = True\n                c += 1\n    print(c)", "for T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = {}\n    for i in a:\n        d[i] = True\n    c = 0\n    for i in a:\n        try:\n            d[i - 1] == True\n        except:\n            try:\n                d[i + 1] == True\n            except:\n                d[i + 1] = True\n                c += 1\n    print(c)", "for T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = {}\n    for i in a:\n        d[i] = True\n    c = 0\n    for i in a:\n        try:\n            d[i - 1] == True\n        except:\n            try:\n                d[i + 1] == True\n            except:\n                d[i + 1] = True\n                c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    nli = list(map(int, input().split()))\n    nli.sort()\n    nli.insert(0, -5)\n    nli.append(-5)\n    cnt = 0\n    for i in range(1, n + 1):\n        if nli[i] + 1 != nli[i + 1] and nli[i] != nli[i - 1] + 1:\n            cnt += 1\n            nli[i] += 1\n    print(cnt)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    A = [int(k) for k in input().split()]\n    A.sort()\n    if n == 1:\n        print(1)\n    else:\n        k = 0\n        c = 0\n        for k in range(n):\n            if k == 0:\n                if A[k + 1] - A[k] > 1:\n                    A[k] += 1\n                    c += 1\n            elif k == n - 1:\n                if A[k] - A[k - 1] > 1:\n                    c += 1\n            elif A[k] - A[k - 1] > 1 and A[k + 1] - A[k] > 1:\n                c += 1\n                A[k] += 1\n        print(c)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    A = [int(k) for k in input().split()]\n    A.sort()\n    if n == 1:\n        print(1)\n    else:\n        k = 0\n        c = 0\n        for k in range(n):\n            if k == 0:\n                if A[k + 1] - A[k] > 1:\n                    A[k] += 1\n                    c += 1\n            elif k == n - 1:\n                if A[k] - A[k - 1] > 1:\n                    c += 1\n            elif A[k] - A[k - 1] > 1 and A[k + 1] - A[k] > 1:\n                c += 1\n                A[k] += 1\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    prev = None\n    c = 0\n    for i in range(n - 1):\n        if (prev is None or prev != arr[i] - 1) and arr[i + 1] - 1 != arr[i]:\n            c += 1\n            prev = arr[i] + 1\n        else:\n            prev = arr[i]\n    if prev != arr[n - 1] - 1:\n        c += 1\n    print(c)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        continue\n    arr.sort()\n    arr += [-1]\n    d = set()\n    res = 0\n    if arr[0] + 1 != arr[1]:\n        res += 1\n        d.add(arr[0] + 1)\n    for i in range(1, n):\n        if arr[i] - 1 != arr[i - 1] and arr[i] + 1 != arr[i + 1] and (arr[i] - 1 not in d) and (arr[i] + 1 not in d):\n            res += 1\n            d.add(arr[i] + 1)\n    print(res)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        continue\n    arr.sort()\n    arr += [-1]\n    d = set()\n    res = 0\n    if arr[0] + 1 != arr[1]:\n        res += 1\n        d.add(arr[0] + 1)\n    for i in range(1, n):\n        if arr[i] - 1 != arr[i - 1] and arr[i] + 1 != arr[i + 1] and (arr[i] - 1 not in d) and (arr[i] + 1 not in d):\n            res += 1\n            d.add(arr[i] + 1)\n    print(res)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        continue\n    arr.sort()\n    arr += [-1]\n    d = set()\n    res = 0\n    if arr[0] + 1 != arr[1]:\n        res += 1\n        d.add(arr[0] + 1)\n    for i in range(1, n):\n        if arr[i] - 1 != arr[i - 1] and arr[i] + 1 != arr[i + 1] and (arr[i] - 1 not in d) and (arr[i] + 1 not in d):\n            res += 1\n            d.add(arr[i] + 1)\n    print(res)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        continue\n    arr.sort()\n    arr += [-1]\n    d = set()\n    res = 0\n    if arr[0] + 1 != arr[1]:\n        res += 1\n        d.add(arr[0] + 1)\n    for i in range(1, n):\n        if arr[i] - 1 != arr[i - 1] and arr[i] + 1 != arr[i + 1] and (arr[i] - 1 not in d) and (arr[i] + 1 not in d):\n            res += 1\n            d.add(arr[i] + 1)\n    print(res)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        continue\n    arr.sort()\n    arr += [-1]\n    d = set()\n    res = 0\n    if arr[0] + 1 != arr[1]:\n        res += 1\n        d.add(arr[0] + 1)\n    for i in range(1, n):\n        if arr[i] - 1 != arr[i - 1] and arr[i] + 1 != arr[i + 1] and (arr[i] - 1 not in d) and (arr[i] + 1 not in d):\n            res += 1\n            d.add(arr[i] + 1)\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    lis.sort()\n    j = 0\n    ct = 0\n    prev = -2\n    while j < n:\n        if j == n - 1:\n            if lis[j] - prev == 1:\n                break\n            else:\n                ct += 1\n                break\n        if lis[j] - prev == 1:\n            prev = lis[j]\n            j += 1\n            continue\n        if lis[j + 1] - lis[j] == 1:\n            prev = lis[j]\n            j += 1\n            continue\n        if lis[j + 1] - lis[j] == 2:\n            prev = lis[j] + 1\n            j += 1\n            ct += 1\n            continue\n        elif lis[j + 1] - lis[j] > 2:\n            prev = lis[j] + 1\n            ct += 1\n            j += 1\n            continue\n    print(ct)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        continue\n    arr.sort()\n    arr += [-1]\n    d = set()\n    res = 0\n    if arr[0] + 1 != arr[1]:\n        res += 1\n        d.add(arr[0] + 1)\n    for i in range(1, n):\n        if arr[i] - 1 != arr[i - 1] and arr[i] + 1 != arr[i + 1] and (arr[i] - 1 not in d) and (arr[i] + 1 not in d):\n            res += 1\n            d.add(arr[i] + 1)\n    print(res)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    c = 0\n    a.sort()\n    i = 0\n    while i < len(a):\n        if i < len(a) - 1 and a[i + 1] == a[i] + 1:\n            i += 1\n            continue\n        if i > 0 and a[i - 1] == a[i] - 1:\n            i += 1\n            continue\n        a.insert(i + 1, a[i] + 1)\n        i += 1\n        c += 1\n    print(c)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    c = 0\n    a.sort()\n    i = 0\n    while i < len(a):\n        if i < len(a) - 1 and a[i + 1] == a[i] + 1:\n            i += 1\n            continue\n        if i > 0 and a[i - 1] == a[i] - 1:\n            i += 1\n            continue\n        a.insert(i + 1, a[i] + 1)\n        i += 1\n        c += 1\n    print(c)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    c = 0\n    a.sort()\n    i = 0\n    while i < len(a):\n        if i < len(a) - 1 and a[i + 1] == a[i] + 1:\n            i += 1\n            continue\n        if i > 0 and a[i - 1] == a[i] - 1:\n            i += 1\n            continue\n        a.insert(i + 1, a[i] + 1)\n        i += 1\n        c += 1\n    print(c)\n    t -= 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    c = 0\n    a.sort()\n    i = 0\n    while i < len(a):\n        if i < len(a) - 1 and a[i + 1] == a[i] + 1:\n            i += 1\n            continue\n        if i > 0 and a[i - 1] == a[i] - 1:\n            i += 1\n            continue\n        a.insert(i + 1, a[i] + 1)\n        i += 1\n        c += 1\n    print(c)\n    t -= 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    c = 0\n    a.sort()\n    i = 0\n    while i < len(a):\n        if i < len(a) - 1 and a[i + 1] == a[i] + 1:\n            i += 1\n            continue\n        if i > 0 and a[i - 1] == a[i] - 1:\n            i += 1\n            continue\n        a.insert(i + 1, a[i] + 1)\n        i += 1\n        c += 1\n    print(c)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    j = 0\n    count = 0\n    while j < n:\n        if j < n - 1 and a[j + 1] - a[j] == 1:\n            j += 2\n        elif j > 1 and a[j] - a[j - 1] == 1:\n            j += 1\n        elif j < n - 1 and a[j + 1] - a[j] == 2:\n            count += 1\n            j += 2\n        else:\n            count += 1\n            j += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    count = 0\n    j = 0\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    while j < n:\n        if j < n - 1 and l[j + 1] - l[j] == 1:\n            j += 2\n        elif j > 1 and l[j] - l[j - 1] == 1:\n            j += 1\n        elif j < n - 1 and l[j + 1] - l[j] == 2:\n            count += 1\n            j += 2\n        else:\n            count += 1\n            j += 1\n    print(count)", "T = int(input())\nans = []\nfor _ in range(T):\n    N = int(input())\n    A = [int(i) for i in input().split()]\n    A.sort()\n    count = 0\n    Trees = {}\n    for i in range(N):\n        Trees[A[i]] = True\n    for i in range(N):\n        Flag = False\n        if A[i] > A[0]:\n            if A[i] - 1 in Trees:\n                Flag = True\n        if A[i] < A[-1]:\n            if A[i] + 1 in Trees:\n                Flag = True\n        if not Flag:\n            if A[i] < A[-1]:\n                Trees[A[i] + 1] = True\n                count += 1\n            else:\n                Trees[A[i] - 1] = True\n                count += 1\n    ans.append(count)\nfor i in ans:\n    print(i)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    c = 0\n    a.sort()\n    i = 0\n    while i < len(a):\n        if i < len(a) - 1 and a[i + 1] == a[i] + 1:\n            i += 1\n            continue\n        if i > 0 and a[i - 1] == a[i] - 1:\n            i += 1\n            continue\n        a.insert(i + 1, a[i] + 1)\n        i += 1\n        c += 1\n    print(c)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    li.sort()\n    i = 0\n    count = 0\n    while i < len(li):\n        if i < len(li) - 1 and li[i + 1] == li[i] + 1:\n            i += 1\n            continue\n        if i > 0 and li[i - 1] == li[i] - 1:\n            i += 1\n            continue\n        else:\n            li.insert(i + 1, li[i] + 1)\n            count += 1\n            i += 1\n    print(count)", "for T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = {}\n    for i in a:\n        d[i] = True\n    c = 0\n    for i in a:\n        try:\n            d[i - 1] == True\n        except:\n            try:\n                d[i + 1] == True\n            except:\n                d[i + 1] = True\n                c += 1\n    print(c)", "import math\ntest = int(input())\nfor _ in range(test):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n == 1:\n        print(1)\n        continue\n    ans = 0\n    a.sort()\n    if a[0] + 1 != a[1]:\n        a[0] += 1\n        ans += 1\n    i = 1\n    while i < n - 1:\n        if a[i - 1] == a[i] - 1:\n            i += 1\n        elif a[i] + 1 == a[i + 1]:\n            i += 1\n        else:\n            ans += 1\n            a[i] += 1\n            i += 1\n    if a[-2] != a[-1] - 1:\n        ans += 1\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n == 1:\n        print(1)\n        continue\n    ans = 0\n    a.sort()\n    if a[0] + 1 != a[1]:\n        a[0] += 1\n        ans += 1\n    i = 1\n    while i < n - 1:\n        if a[i - 1] == a[i] - 1:\n            i += 1\n        elif a[i] + 1 == a[i + 1]:\n            i += 1\n        else:\n            ans += 1\n            a[i] += 1\n            i += 1\n    if a[-2] != a[-1] - 1:\n        ans += 1\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n == 1:\n        print(1)\n        continue\n    ans = 0\n    a.sort()\n    if a[0] + 1 != a[1]:\n        a[0] += 1\n        ans += 1\n    i = 1\n    while i < n - 1:\n        if a[i - 1] == a[i] - 1:\n            i += 1\n        elif a[i] + 1 == a[i + 1]:\n            i += 1\n        else:\n            ans += 1\n            a[i] += 1\n            i += 1\n    if a[-2] != a[-1] - 1:\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = sorted(map(int, input().split()))\n    ans = 0\n    added = -2\n    for i in range(n):\n        if l[i - 1] != l[i] - 1 and l[(i + 1) % n] != l[i] + 1 and (added != l[i] - 1):\n            added = l[i] + 1\n            ans += 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [-9] + list(map(int, input().split())) + [9999999999]\n    l.sort()\n    i = 1\n    c = 0\n    m = [9999999999]\n    for i in range(1, n + 1):\n        if l[i] - l[i - 1] != 1 and l[i] - m[-1] != 1 and (l[i + 1] - l[i] != 1):\n            m.append(l[i] + 1)\n            c += 1\n    print(c)\n    t -= 1", "def plant(tree_list, n):\n    tree_list.sort()\n    trees = set(tree_list)\n    c = 0\n    for i in range(n):\n        if tree_list[i] - 1 in trees or tree_list[i] + 1 in trees:\n            pass\n        else:\n            c += 1\n            trees.add(tree_list[i] + 1)\n    return c\nT = int(input())\nfor case in range(T):\n    tree_count = int(input())\n    InT = list(map(int, input().split()))\n    print(plant(InT, tree_count))", "def plant(tree_list, n):\n    tree_list.sort()\n    trees = set(tree_list)\n    c = 0\n    for i in range(n):\n        if tree_list[i] - 1 in trees or tree_list[i] + 1 in trees:\n            pass\n        else:\n            c += 1\n            trees.add(tree_list[i] + 1)\n    return c\nT = int(input())\nfor case in range(T):\n    tree_count = int(input())\n    InT = list(map(int, input().split()))\n    print(plant(InT, tree_count))", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    a = set(x)\n    d = 0\n    for i in range(n):\n        if x[i] - 1 in a or x[i] + 1 in a:\n            continue\n        else:\n            a.add(x[i] + 1)\n            d += 1\n    print(d)", "t = int(input())\nfor tst in range(t):\n    n = input()\n    l = list(map(int, input().split()))\n    l.sort()\n    d = {}\n    for i in l:\n        d[i] = 1\n    count = 0\n    for i in range(len(l)):\n        if l[i] + 1 in d or l[i] - 1 in d:\n            continue\n        else:\n            d[l[i] + 1] = 1\n            count += 1\n    print(count)", "t = int(input())\nfor tst in range(t):\n    n = input()\n    l = list(map(int, input().split()))\n    l.sort()\n    d = {}\n    for i in l:\n        d[i] = 1\n    count = 0\n    for i in range(len(l)):\n        if l[i] + 1 in d or l[i] - 1 in d:\n            continue\n        else:\n            d[l[i] + 1] = 1\n            count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    D = {}\n    for j in range(n):\n        D[arr[j]] = 1\n        if arr[j] - 1 not in D:\n            D[arr[j] + 1] = 1\n    print(len(D) - n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    D = {}\n    for j in range(n):\n        D[arr[j]] = 1\n        if arr[j] - 1 not in D:\n            D[arr[j] + 1] = 1\n    print(len(D) - n)", "from math import *\nfrom collections import *\nfrom itertools import *\nfrom bisect import *\nfrom heapq import *\nfrom operator import *\nfrom sys import *\nsetrecursionlimit(10000000)\n\ndef io():\n    return map(int, input().split())\n\ndef op():\n    return list(map(int, input().split()))\n\ndef o():\n    return int(input())\n\ndef r(x):\n    if type(x) == int:\n        return range(x)\n    else:\n        return range(len(x))\n\ndef kl(con, x=0):\n    if x == 0:\n        print('Yes') if con else print('No')\n    elif x == 1:\n        print('yes') if con else print('no')\n    elif x == 2:\n        print('YES') if con else print('NO')\nMOD = 1000000007\nMAX = float('inf')\nMIN = -float('inf')\np = input\nfor _ in r(o()):\n    n = o()\n    l = sorted(op())\n    c = 0\n    i = 0\n    f = 0\n    while i < len(l) - 1:\n        x = l[i + 1] - l[i]\n        if f == 1:\n            if x == 1:\n                f = 1\n            else:\n                f = 0\n            i += 1\n            continue\n        if x >= 2:\n            c += 1\n        if x in [1, 2]:\n            f = 1\n        i += 1\n    if f == 0:\n        c += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    count = 0\n    s.sort()\n    l = dict()\n    for i in s:\n        l[i] = 1\n    for i in s:\n        if i - 1 not in l and i + 1 not in l:\n            count += 1\n            l[i + 1] = 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    p.sort()\n    ans = 0\n    last = -1\n    for x in p:\n        if x == last:\n            ans -= 1\n        elif x == last + 1:\n            last = x\n        else:\n            last = x + 1\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = []\n    count = 0\n    d = {}\n    l = list(map(int, input().split()))\n    l.sort()\n    for i in l:\n        d[i] = 0\n    for i in l:\n        b = i - 1\n        a = i + 1\n        if a not in d and b not in d:\n            d[a] = 0\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, lis, count) = (int(input()), list(map(int, input().split())), 0)\n    (lis.append(-1), lis.sort(), lis.append(-1))\n    for i in range(1, len(lis) - 1):\n        if lis[i + 1] == lis[i] + 1 or lis[i - 1] == lis[i] - 1:\n            x = 0\n        else:\n            (lis[i], count) = (lis[i] + 1, count + 1)\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    lis = list(map(int, input().split()))\n    lis.append(-1)\n    lis.sort()\n    lis.append(-1)\n    count = 0\n    for i in range(1, len(lis) - 1):\n        if lis[i + 1] == lis[i] + 1 or lis[i - 1] == lis[i] - 1:\n            x = 0\n        else:\n            lis[i] = lis[i] + 1\n            count = count + 1\n    print(count)", "t = input()\nfor _ in range(int(t)):\n    n = int(input())\n    a = input().split()\n    present = dict()\n    for i in range(n):\n        a[i] = int(a[i])\n        present.__setitem__(a[i], 1)\n    a.sort()\n    ct = 0\n    for i in range(n):\n        if a[i] - 1 in present.keys():\n            continue\n        if a[i] + 1 in present.keys():\n            continue\n        present.__setitem__(a[i] + 1, 1)\n        ct += 1\n    print(ct)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    lis = list(map(int, input().split()))\n    lis.append(-1)\n    lis.sort()\n    lis.append(-1)\n    count = 0\n    for i in range(1, len(lis) - 1):\n        if lis[i + 1] == lis[i] + 1 or lis[i - 1] == lis[i] - 1:\n            x = 0\n        else:\n            lis[i] = lis[i] + 1\n            count = count + 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    count = 0\n    j = 0\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    while j < n:\n        if j < n - 1 and l[j + 1] - l[j] == 1:\n            j += 2\n        elif j > 1 and l[j] - l[j - 1] == 1:\n            j += 1\n        elif j < n - 1 and l[j + 1] - l[j] == 2:\n            count += 1\n            j += 2\n        elif j > 1 and l[j] - l[j - 1] == 2:\n            count += 1\n            j += 1\n        else:\n            count += 1\n            j += 1\n    print(count)", "def solve(n, a):\n    cnt = 0\n    last = -1\n    for a_i in sorted(a):\n        if a_i == last:\n            cnt -= 1\n        elif a_i == last + 1:\n            last = a_i\n        else:\n            cnt += 1\n            last = a_i + 1\n    return cnt\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(solve(n, a))\nmain()", "def solve(n, a):\n    cnt = 0\n    last = -1\n    for a_i in sorted(a):\n        if a_i == last:\n            cnt -= 1\n        elif a_i == last + 1:\n            last = a_i\n        else:\n            cnt += 1\n            last = a_i + 1\n    return cnt\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(solve(n, a))\nmain()", "def numoftree(arr, n):\n    di = dict()\n    di[arr[0]] = 1\n    count = 0\n    for i in range(n):\n        di[arr[i]] = 1\n    for i in range(n):\n        if arr[i] - 1 not in di and arr[i] + 1 not in di:\n            di[arr[i] + 1] = 1\n            count += 1\n    return count\nt = int(input())\nfor you in range(t):\n    n = int(input())\n    l = input().split()\n    li = [int(i) for i in l]\n    li.sort()\n    print(numoftree(li, n))", "for ii in range(int(input())):\n    n = int(input())\n    l = [-1] + sorted(list(map(int, input().split()))) + [-1]\n    s = 0\n    for i in range(1, n + 1):\n        if l[i] != l[i + 1] - 1 and l[i] != l[i - 1] + 1:\n            s += 1\n            l[i] += 1\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    D = {}\n    for j in range(n):\n        D[arr[j]] = 1\n        if arr[j] - 1 not in D:\n            D[arr[j] + 1] = 1\n    print(len(D) - n)", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    arr.insert(0, -1)\n    arr.append(-1)\n    ans = 0\n    for i in range(1, n + 1):\n        if arr[i] + 1 != arr[i + 1] and arr[i] - 1 != arr[i - 1]:\n            ans += 1\n            arr[i] += 1\n    print(ans)", "li2 = [1, 4, 8, 10, 2]\n\ndef fun(li):\n    li.sort()\n    c = 0\n    temp = 100000000000\n    if len(li) > 2:\n        if li[0] + 1 != li[1]:\n            c = c + 1\n            temp = li[0] + 1\n        for i in range(1, len(li) - 1):\n            if li[i] + 1 != li[i + 1] and li[i] - 1 != li[i - 1] and (li[i] - 1 != temp):\n                c = c + 1\n                temp = li[i] + 1\n        if li[-1] - 1 != temp and li[-1] - 1 != li[len(li) - 2]:\n            c = c + 1\n    if len(li) == 2:\n        if li[0] + 1 == li[1]:\n            return c\n        else:\n            temp = li[0] + 1\n            if li[1] - 1 == temp:\n                return 1\n            else:\n                return 2\n    if len(li) == 1:\n        return 1\n    return c\nt = int(input())\nfor i in range(0, t):\n    s = int(input())\n    li = list(map(int, input().strip().split()))\n    print(fun(li))", "for T in range(int(input())):\n    N = int(input())\n    tree = list(map(int, input().split()))\n    tree.sort()\n    totPlanted = 0\n    lastPlanted = -1\n    i = 0\n    while i < N:\n        t = tree[i]\n        if i > 0 and tree[i - 1] == t - 1:\n            i += 1\n        elif i < N - 1 and tree[i + 1] == t + 1:\n            i += 1\n        elif lastPlanted == t - 1:\n            i += 1\n        else:\n            totPlanted += 1\n            lastPlanted = t + 1\n            i += 1\n    print(totPlanted)", "for T in range(int(input())):\n    N = int(input())\n    tree = list(map(int, input().split()))\n    tree.sort()\n    totPlanted = 0\n    lastPlanted = -1\n    i = 0\n    while i < N:\n        if i > 0 and tree[i - 1] == tree[i] - 1:\n            i += 1\n        elif i < N - 1 and tree[i + 1] == tree[i] + 1:\n            i += 1\n        elif lastPlanted == tree[i] - 1:\n            i += 1\n        else:\n            totPlanted += 1\n            lastPlanted = tree[i] + 1\n            i += 1\n    print(totPlanted)", "for T in range(int(input())):\n    N = int(input())\n    tree = list(map(int, input().split()))\n    tree.sort()\n    totPlanted = 0\n    lastPlanted = -1\n    i = 0\n    while i < N:\n        if i > 0 and (tree[i - 1] == tree[i] - 1 or lastPlanted == tree[i] - 1):\n            i += 1\n        elif i < N - 1 and tree[i + 1] == tree[i] + 1:\n            i += 1\n        else:\n            totPlanted += 1\n            lastPlanted = tree[i] + 1\n            i += 1\n    print(totPlanted)", "class dd(dict):\n\n    def __missing__(self, k):\n        self[k] = 0\n        return 0\nfor _ in range(int(input())):\n    d = dd()\n    n = int(input())\n    __ = [d[int(__0)] for __0 in input().split()]\n    del __\n    ans = 0\n    d1 = dict(d)\n    for k in sorted(d.keys()):\n        if k + 1 in d1 or k - 1 in d1:\n            continue\n        d1[k + 1] = 0\n        ans += 1\n    print(ans)", "from collections import defaultdict as dd\nfor _ in range(int(input())):\n    d = dd(lambda : 0)\n    n = int(input())\n    for __ in input().split():\n        d[int(__)] = 0\n    ans = 0\n    d1 = dict(d)\n    for k in sorted(d.keys()):\n        if k + 1 in d1 or k - 1 in d1:\n            continue\n        d1[k + 1] = 0\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    a.sort()\n    if n == 1:\n        print(1)\n        continue\n    for i in range(len(a)):\n        if i == 0:\n            if a[i + 1] == a[i] + 1:\n                y = a[i]\n                pass\n            else:\n                y = a[i] + 1\n                count += 1\n            continue\n        if i == len(a) - 1:\n            if y == a[i] - 1:\n                pass\n            else:\n                count += 1\n            continue\n        if a[i + 1] == a[i] + 1 or y == a[i] - 1:\n            y = a[i]\n            pass\n        else:\n            y = a[i] + 1\n            count += 1\n    print(count)", "from collections import defaultdict\nfrom heapq import *\nimport itertools, math\n\ndef parse_integer_list():\n    return [int(x) for x in input().split()]\n\ndef handle_input(A, N):\n    A.sort()\n    N = len(A)\n    if N == 1:\n        return 1\n    cnt = 0\n    i = 0\n    while i < N:\n        if i == 0:\n            if A[1] > A[0] + 1:\n                cnt += 1\n            if A[1] == A[0] + 2:\n                i += 1\n            i += 1\n            continue\n        if i == N - 1:\n            if A[N - 1] > A[-2] + 1:\n                cnt += 1\n            i += 1\n            continue\n        if A[i - 1] == A[i] - 1 or A[i + 1] == A[i] + 1:\n            i += 1\n            continue\n        cnt += 1\n        if A[i + 1] == A[i] + 2:\n            i += 1\n        i += 1\n    return cnt\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = parse_integer_list()\n    print(handle_input(A, N))", "t11 = int(input())\nwhile t11:\n    t11 -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    i = 0\n    if n == 1:\n        print(1)\n        continue\n    t = 0\n    prev = 0\n    while i < n:\n        if i == 0:\n            if a[1] == a[0] + 1:\n                pass\n            else:\n                prev = a[i] + 1\n                t += 1\n        elif i == n - 1:\n            if a[i - 1] + 1 == a[i] or abs(prev - a[i]) == 1:\n                pass\n            else:\n                t += 1\n        elif a[i - 1] + 1 == a[i] or a[i + 1] == a[i] + 1 or abs(prev - a[i]) == 1:\n            pass\n        else:\n            prev = a[i] + 1\n            t += 1\n        i += 1\n    print(t)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    dic = {}\n    for x in arr:\n        dic[x] = 1\n    ans = 0\n    for i in range(len(arr)):\n        if arr[i] - 1 in dic or arr[i] + 1 in dic:\n            continue\n        else:\n            dic[arr[i] + 1] = True\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    from collections import defaultdict\n    d = defaultdict(int)\n    for x in A:\n        d[x] = 1\n    A = sorted(A)\n    answer = 0\n    for x in A:\n        if d[x + 1] == 1 or d[x - 1] == 1:\n            continue\n        if d[x + 1] == 0 and d[x - 1] == 0 and (d[x + 2] == 0) and (d[x - 2] == 0):\n            d[x + 1] = 1\n            answer += 1\n            continue\n        if d[x + 1] == 0 and d[x + 2] == 1:\n            answer += 1\n            d[x + 1] = 1\n            continue\n        if d[x - 1] == 0 and d[x - 2] == 1:\n            answer += 1\n            d[x - 1] = 1\n            continue\n    print(answer)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        continue\n    l.sort()\n    count = 0\n    last = -100\n    for i in range(n - 1):\n        if last + 1 < l[i] and l[i] + 1 < l[i + 1]:\n            count += 1\n            last = l[i] + 1\n        else:\n            last = l[i]\n    if last + 1 < l[n - 1]:\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    A.sort()\n    A.append(A[N - 1] + 2)\n    ans = 0\n    i = 0\n    last = A[0] - 2\n    while i < N:\n        if last + 1 == A[i]:\n            last = A[i]\n            i += 1\n        elif A[i] + 1 == A[i + 1]:\n            last = A[i + 1]\n            i += 2\n        elif A[i] + 2 == A[i + 1]:\n            last = A[i + 1]\n            ans += 1\n            i += 2\n        else:\n            last = A[i] + 1\n            ans += 1\n            i += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    tree_dict = set(a)\n    to_plant = 0\n    for i in range(n):\n        (prev, nex) = (a[i] - 1, a[i] + 1)\n        if prev not in tree_dict and nex not in tree_dict:\n            to_plant += 1\n            tree_dict.add(nex)\n    print(to_plant)", "def main():\n    n = int(input())\n    l = [int(j) for j in input().split()]\n    ans = 0\n    i = 0\n    l.sort()\n    if n == 1:\n        print(1)\n        return\n    l = [-1] + l + [-1]\n    for i in range(1, n + 1):\n        if l[i] - l[i - 1] != 1 and l[i + 1] - l[i] != 1:\n            ans += 1\n            l[i] += 1\n    print(ans)\n    return\nfor t in range(int(input())):\n    main()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    inp = list(map(int, input().split()))\n    inp.sort()\n    bod = []\n    count = 0\n    if len(inp) == 1:\n        print(1)\n    else:\n        for k in range(1, len(inp) - 1):\n            if min(abs(inp[k] - inp[k - 1]), abs(inp[k] - inp[k + 1])) > 1:\n                bod.append(inp[k])\n        if inp[1] - inp[0] > 1:\n            bod = [inp[0]] + bod\n        if inp[-1] - inp[-2] > 1:\n            bod.append(inp[-1])\n        k = 0\n        if len(bod) == 0:\n            print(0)\n        elif len(bod) == 1:\n            print(1)\n        else:\n            while k < len(bod) - 1:\n                if bod[k + 1] - bod[k] == 2:\n                    count += 1\n                    k += 2\n                    continue\n                else:\n                    count += 1\n                    k += 1\n            if k == len(bod) - 1:\n                count += 1\n            print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(j) for j in input().split()]\n    l.sort()\n    c = 0\n    d = dict()\n    s = set(l)\n    for i in range(n - 1):\n        if l[i] + 1 not in s and l[i] - 1 not in s:\n            c += 1\n            s.add(l[i] + 1)\n    if l[-1] - 1 not in s:\n        c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l)\n    l.insert(0, 0)\n    l1 = []\n    l2 = []\n    for i in range(1, len(l)):\n        if l[i - 1] == 0 and len(l) > 2 and (l[i + 1] != l[i] + 1):\n            l1.append(l[i] + 1)\n            l2.append(1)\n        elif l[i - 1] == 0 and len(l) <= 2:\n            l1.append(l[i] + 1)\n            l2.append(1)\n        elif l[i - 1] + 1 != l[i] and len(l1) != 0 and (l[i] != l1[len(l1) - 1] + 1):\n            if i != len(l) - 1 and l[i + 1] != l[i] + 1:\n                l1.append(l[i] + 1)\n                l2.append(1)\n            elif i == len(l) - 1:\n                l1.append(l[i] - 1)\n                l2.append(1)\n            else:\n                l1.append(0)\n                l2.append(0)\n        else:\n            l1.append(0)\n            l2.append(0)\n    print(sum(l2))", "for __ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    k = set(l)\n    c = 0\n    for i in range(n):\n        if l[i] - 1 not in k and l[i] + 1 not in k:\n            c += 1\n            k.add(l[i] + 1)\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    i = 0\n    b = []\n    while i < n - 1:\n        if a[i + 1] == a[i] + 1:\n            i += 2\n            continue\n        elif i != 0 and a[i - 1] + 1 != a[i]:\n            b.append(a[i])\n        elif i == 0:\n            b.append(a[i])\n        i += 1\n    if i == n - 1 and a[n - 1] != a[n - 2] + 1:\n        b.append(a[n - 1])\n    i = 0\n    while i < len(b) - 1:\n        if b[i + 1] - b[i] == 2:\n            i += 1\n        count += 1\n        i += 1\n    if i == len(b) - 1:\n        count += 1\n    print(count)", "test = int(input())\nwhile test > 0:\n    test -= 1\n    sum = 0\n    n = int(input())\n    ls = list(map(int, input().split()))\n    lss = set(ls)\n    ls.sort()\n    for i in ls:\n        if i + 1 in lss or i - 1 in lss:\n            pass\n        else:\n            lss.add(i + 1)\n            sum += 1\n    print(sum)", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().strip().split(' ')))\n    li.sort()\n    m = set()\n    for i in li:\n        m.add(i)\n    i = 0\n    c = 0\n    while i < n:\n        if i < n - 1:\n            if li[i + 1] - li[i] == 1:\n                i += 2\n            elif li[i] - 1 in m:\n                i += 1\n            elif li[i + 1] - li[i] == 2:\n                c += 1\n                m.add(li[i] + 1)\n                i += 2\n            else:\n                c += 1\n                m.add(li[i] - 1)\n                i += 1\n        elif li[i] - 1 in m:\n            i += 1\n        else:\n            i += 1\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    A.sort()\n    has = {}\n    for i in A:\n        has[i] = 1\n    c = 0\n    for i in range(len(A)):\n        if A[i] + 1 in has or A[i] - 1 in has:\n            continue\n        else:\n            has[A[i] + 1] = 1\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        continue\n    ar.sort()\n    arr = [ar[0], ar[0] + 1]\n    for i in ar[1:]:\n        if i != arr[-1]:\n            arr.append(i)\n        if arr[-2] == arr[-1] - 1:\n            pass\n        else:\n            arr.append(i + 1)\n    count = len(arr) - n\n    print(count)", "try:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        l = list(map(int, input().split()))\n        l.sort()\n        count = 0\n        i = 0\n        while i < n:\n            if i + 1 == n:\n                if l[i] - 1 == l[i - 1]:\n                    pass\n                else:\n                    count += 1\n                i += 1\n            elif i == 0:\n                if l[i] + 1 == l[i + 1]:\n                    i += 2\n                elif l[i] + 2 == l[i + 1]:\n                    count += 1\n                    i += 2\n                else:\n                    count += 1\n                    i += 1\n            elif l[i] + 1 == l[i + 1]:\n                i += 2\n            elif l[i] - 1 == l[i - 1]:\n                i += 1\n            elif l[i] + 2 == l[i + 1]:\n                count += 1\n                i += 2\n            elif l[i] - 2 == l[i - 1]:\n                count += 1\n                i += 1\n            else:\n                count += 1\n                i += 1\n        print(count)\nexcept:\n    pass", "from sys import stdin\nfrom collections import defaultdict\nt = int(stdin.readline())\nwhile t:\n    n = int(stdin.readline())\n    a = [int(x) for x in stdin.readline().split()]\n    if n == 1:\n        print(1)\n    else:\n        d = defaultdict(int)\n        a.sort()\n        (ans, diff) = (0, a[1] - a[0])\n        temp = []\n        if diff >= 2:\n            ans = 1\n            temp.append(a[0])\n            temp.append(a[0] + 1)\n        else:\n            temp.append(a[0])\n        for i in range(1, n - 1):\n            if temp[-1] == a[i] - 1:\n                temp.append(a[i])\n                continue\n            if a[i + 1] == a[i] + 1:\n                temp.append(a[i])\n                continue\n            else:\n                temp.append(a[i])\n                temp.append(a[i] + 1)\n                ans += 1\n        if a[-1] - 1 != temp[-1]:\n            ans += 1\n        print(ans)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    c = 0\n    if n == 1:\n        print(1)\n        continue\n    for i in range(n):\n        if i == 0 and a[i + 1] != a[i] + 1:\n            a[i] = a[i] + 1\n            c += 1\n            continue\n        if i == n - 1 and a[i - 1] != a[i] - 1:\n            c += 1\n        elif a[i - 1] == a[i] - 1:\n            continue\n        elif a[i] != a[i + 1] - 1:\n            a[i] = a[i] + 1\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    has = {}\n    for i in arr:\n        has[i] = 1\n    co = 0\n    for i in range(n):\n        try:\n            has[arr[i] - 1]\n        except:\n            try:\n                has[arr[i] + 1]\n            except:\n                has[arr[i] + 1] = 1\n                co += 1\n    print(co)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = sorted(list(map(int, input().split())))\n    s = set(l1)\n    c = 0\n    for i in range(n):\n        if l1[i] + 1 not in s and l1[i] - 1 not in s:\n            s.add(l1[i] + 1)\n            c += 1\n    print(c)", "from sys import stdin, stdout\n\ndef partition(arr, low, high):\n    i = low - 1\n    pivot = arr[high]\n    for j in range(low, high):\n        if arr[j] < pivot:\n            i = i + 1\n            (arr[i], arr[j]) = (arr[j], arr[i])\n    (arr[i + 1], arr[high]) = (arr[high], arr[i + 1])\n    return i + 1\n\ndef quickSort(arr, low, high):\n    if low < high:\n        pi = partition(arr, low, high)\n        quickSort(arr, low, pi - 1)\n        quickSort(arr, pi + 1, high)\nfor j in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n    quickSort(l, 0, n - 1)\n    count = 0\n    f = 0\n    i = 0\n    if n == 1:\n        print(1)\n        continue\n    while i < n:\n        if i == n - 1:\n            a = l[i - 1]\n            b = l[i]\n            if b - a > 2:\n                count += 1\n                i += 1\n                f = 0\n            elif b - a == 2:\n                count += 1\n                i += 1\n            else:\n                i += 1\n            continue\n        if f == 0:\n            b = l[i]\n            c = l[i + 1]\n            if c - b > 2:\n                count += 1\n                f = 0\n                i += 1\n                continue\n            elif c - b == 2:\n                count += 1\n                f = 1\n                i += 2\n            else:\n                i += 2\n                f = 1\n        else:\n            a = l[i - 1]\n            b = l[i]\n            c = l[i + 1]\n            if b - a == 1:\n                f = 1\n                i += 1\n                continue\n            elif c - b > 2:\n                count += 1\n                f = 0\n                i += 1\n                continue\n            elif c - b == 2:\n                count += 1\n                f = 1\n                i += 2\n            elif c - b == 1:\n                i += 2\n                f = 1\n    print(count)", "for ii in range(int(input())):\n    b = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    s = {}\n    for i in l:\n        s[i] = 0\n    for i in range(b):\n        up = l[i] + 1\n        lw = l[i] - 1\n        if up not in s and lw not in s:\n            s[up] = 0\n        else:\n            continue\n    print(len(s) - b)", "te = int(input())\nwhile te > 0:\n    te -= 1\n    n = int(input())\n    trees = list(map(int, input().split()))\n    trees.sort()\n    ans = 0\n    if n == 1:\n        ans = 1\n    else:\n        if trees[1] - 1 != trees[0]:\n            ans += 1\n            trees[0] += 1\n        i = 1\n        while i < n - 1:\n            if trees[i] - 1 != trees[i - 1] and trees[i + 1] - 1 != trees[i]:\n                ans += 1\n                trees[i] += 1\n            i += 1\n        if trees[n - 1] - trees[n - 2] != 1:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    alone = []\n    if len(l) > 1 and l[1] - l[0] != 1:\n        alone.append(l[0])\n    for i in range(1, n - 1):\n        if l[i + 1] - l[i] != 1 and l[i] - l[i - 1] != 1:\n            alone.append(l[i])\n    if l[n - 1] - l[n - 2] != 1:\n        alone.append(l[n - 1])\n    result = 0\n    i = 0\n    while i < len(alone) - 1:\n        if alone[i + 1] - alone[i] == 2:\n            i += 1\n        result += 1\n        i += 1\n    if i == len(alone) - 1:\n        result += 1\n    print(result)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    i = 0\n    b = []\n    while i < n - 1:\n        if a[i + 1] == a[i] + 1:\n            i += 2\n            continue\n        elif i != 0 and a[i - 1] + 1 != a[i]:\n            b.append(a[i])\n        elif i == 0:\n            b.append(a[i])\n        i += 1\n    if i == n - 1 and a[n - 1] != a[n - 2] + 1:\n        b.append(a[n - 1])\n    i = 0\n    while i < len(b) - 1:\n        if b[i + 1] - b[i] == 2:\n            i += 1\n        count += 1\n        i += 1\n    if i == len(b) - 1:\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    b = [0 for i in range(n)]\n    count = 0\n    if n == 1:\n        print(1)\n    else:\n        for i in range(1, n - 1):\n            if b[i - 1] != 1:\n                if a[i] - a[i - 1] == 1:\n                    b[i] = 1\n                    b[i - 1] = 1\n                elif a[i] - a[i - 1] == 2:\n                    b[i] = 1\n                    b[i - 1] = 1\n                    count += 1\n                else:\n                    b[i - 1] = 1\n                    count += 1\n            elif a[i] - a[i - 1] == 1:\n                b[i] = 1\n        if a[n - 1] - a[n - 2] == 2:\n            count += 1\n        elif a[n - 1] - a[n - 2] > 2:\n            if b[n - 2] == 0:\n                count += 2\n            else:\n                count += 1\n        print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    if n == 1:\n        print(1)\n        continue\n    a.sort()\n    for i in range(n):\n        if i == 0:\n            if a[i + 1] != a[i] + 1:\n                cnt += 1\n                a[i] = a[i] + 1\n        elif i == n - 1:\n            if a[i] - 1 != a[i - 1]:\n                cnt += 1\n        elif a[i] - 1 != a[i - 1] and a[i] + 1 != a[i + 1]:\n            cnt += 1\n            a[i] = a[i] + 1\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    from collections import defaultdict\n    d = defaultdict(int)\n    for x in A:\n        d[x] = 1\n    A = sorted(A)\n    answer = 0\n    for x in A:\n        if d[x + 1] == 1 or d[x - 1] == 1:\n            continue\n        if d[x + 1] == 0 and d[x - 1] == 0 and (d[x + 2] == 0) and (d[x - 2] == 0):\n            d[x + 1] = 1\n            answer += 1\n            continue\n        if d[x + 1] == 0 and d[x + 2] == 1:\n            answer += 1\n            d[x + 1] = 1\n            continue\n        if d[x - 1] == 0 and d[x - 2] == 1:\n            answer += 1\n            d[x - 1] = 1\n            continue\n    print(answer)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    from collections import defaultdict\n    d = defaultdict(int)\n    for x in A:\n        d[x] = 1\n    A = sorted(A)\n    answer = 0\n    for x in A:\n        if d[x + 1] == 1 or d[x - 1] == 1:\n            continue\n        if d[x + 1] == 0 and d[x - 1] == 0 and (d[x + 2] == 0) and (d[x - 2] == 0):\n            d[x + 1] = 1\n            answer += 1\n            continue\n        if d[x + 1] == 0 and d[x + 2] == 1:\n            answer += 1\n            d[x + 1] = 1\n            continue\n        if d[x - 1] == 0 and d[x - 2] == 1:\n            answer += 1\n            d[x - 1] = 1\n            continue\n    print(answer)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    from collections import defaultdict\n    d = defaultdict(int)\n    for x in A:\n        d[x] = 1\n    A = sorted(A)\n    answer = 0\n    for x in A:\n        if d[x + 1] == 1 or d[x - 1] == 1:\n            continue\n        if d[x + 1] == 0 and d[x - 1] == 0 and (d[x + 2] == 0) and (d[x - 2] == 0):\n            d[x + 1] = 1\n            answer += 1\n            continue\n        if d[x + 1] == 0 and d[x + 2] == 1:\n            answer += 1\n            d[x + 1] = 1\n            continue\n        if d[x - 1] == 0 and d[x - 2] == 1:\n            answer += 1\n            d[x - 1] = 1\n            continue\n    print(answer)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    l = set(a)\n    for i in range(n):\n        if i == n - 1 and a[i] - 1 not in l:\n            ans += 1\n            l.add(a[i] - 1)\n        if a[i] - 1 not in l and a[i] + 1 not in l:\n            ans += 1\n            l.add(a[i] + 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    li.sort()\n    i = 0\n    count = 0\n    while i < len(li):\n        if i < len(li) - 1 and li[i + 1] == li[i] + 1:\n            i += 1\n            continue\n        if i > 0 and li[i - 1] == li[i] - 1:\n            i += 1\n            continue\n        else:\n            li.insert(i + 1, li[i] + 1)\n            count += 1\n            i += 1\n    print(count)", "def solve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = [int(i) for i in input().split()]\n        a = sorted(a)\n        i = 0\n        s = None\n        if n > 1:\n            c = 0\n            while i < n:\n                if i != n - 1:\n                    if i == 0:\n                        if a[i + 1] != a[i] + 1:\n                            c += 1\n                            s = a[i] + 1\n                        else:\n                            s = a[i]\n                    elif a[i + 1] != a[i] + 1 and s != a[i] - 1:\n                        c += 1\n                        s = a[i] + 1\n                    else:\n                        s = a[i]\n                elif s != a[i] - 1:\n                    c += 1\n                i += 1\n            print(c)\n        else:\n            print(1)\nsolve()"]