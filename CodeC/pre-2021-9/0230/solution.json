["T = int(input())\nfor i in range(T):\n    (N, A, B) = map(int, input().split())\n    binary_A = str(bin(A))\n    binary_B = str(bin(B))\n    numOf1A = binary_A.count('1')\n    numOf1B = binary_B.count('1')\n    ans = 2 ** N - 2 ** abs(N - (numOf1A + numOf1B))\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, A, B) = map(int, input().split())\n    binary_A = str(bin(A))\n    binary_B = str(bin(B))\n    numOf1A = binary_A.count('1')\n    numOf1B = binary_B.count('1')\n    ans = 2 ** N - 2 ** abs(N - (numOf1A + numOf1B))\n    print(ans)", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    l1 = list(bin(a)[2:])\n    l2 = list(bin(b)[2:])\n    o1 = l1.count('1')\n    o2 = l2.count('1')\n    s = o1 + o2\n    if s > n:\n        val = 2 ** n - 2 ** (s - n)\n        print(val)\n    else:\n        val = 2 ** n - 2 ** (n - s)\n        print(val)", "for _ in range(int(input())):\n    t = list(input().split())\n    n0 = int(t[0])\n    n1 = int(t[1])\n    n2 = int(t[2])\n    n1 = list(bin(n1)[2:])\n    n2 = list(bin(n2)[2:])\n    n1o = n1.count('1')\n    n2o = n2.count('1')\n    total = n1o + n2o\n    if total > n0:\n        tVal = 2 ** n0 - 2 ** (total - n0)\n        print(tVal)\n    else:\n        tVal = 2 ** n0 - 2 ** (n0 - total)\n        print(tVal)", "def tobin(num):\n    ans = 0\n    while num:\n        rem = num % 2\n        num = num // 2\n        ans += 1 if rem else 0\n    return ans\nfor tc in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    (xone, yone) = (tobin(x), tobin(y))\n    (x, y) = (max(xone, yone), min(xone, yone))\n    comm = n - (x + y)\n    if comm < 0:\n        ans = '1' * (n + comm) + '0' * abs(comm)\n    else:\n        ans = '1' * (x + y) + '0' * comm\n    print(int(ans, 2))", "t = int(input())\nfor tc in range(t):\n    (n, a, b) = map(int, input().split())\n    c = bin(a).replace('0b', '')\n    d = bin(b).replace('0b', '')\n    p = c.count('1') + d.count('1')\n    if p == n:\n        r = '1' * n\n    elif p < n:\n        r = '1' * p + '0' * (n - p)\n    else:\n        r = '1' * (2 * n - p) + '0' * (p - n)\n    print(int(r, 2))", "t = int(input())\nfor tc in range(t):\n    (n, a, b) = map(int, input().split())\n    c = bin(a).replace('0b', '')\n    d = bin(b).replace('0b', '')\n    p = c.count('1') + d.count('1')\n    if p == n:\n        r = '1' * n\n    elif p < n:\n        r = '1' * p + '0' * (n - p)\n    else:\n        r = '1' * (2 * n - p) + '0' * (p - n)\n    print(int(r, 2))", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a = bin(a).replace('0b', '')\n    b = bin(b).replace('0b', '')\n    s = a.count('1') + b.count('1')\n    if s == n:\n        out = '1' * n\n    elif s < n:\n        out = '1' * s + '0' * (n - s)\n    else:\n        out = '1' * (2 * n - s) + '0' * (s - n)\n    print(int(out, 2))", "t = int(input())\nlp = []\nfor nnc in range(0, t):\n    jer = str(input())\n    uue = []\n    for ccx in jer.split(' '):\n        uue.append(int(ccx))\n    lp.append(uue)\nfor tth in lp:\n    sde = str(bin(tth[1]))[2:]\n    wqa = str(bin(tth[2]))[2:]\n    p = 0\n    l = 0\n    mkn = 0\n    llr = 0\n    for imvx in range(0, tth[0]):\n        try:\n            axz = sde[imvx]\n            if axz == '1':\n                p += 1\n            else:\n                mkn += 1\n        except:\n            mkn += 1\n        try:\n            rrx = wqa[imvx]\n            if rrx == '1':\n                l += 1\n            else:\n                llr += 1\n        except:\n            llr += 1\n            continue\n    kvr = p - llr\n    left = 0\n    final = ''\n    if kvr <= 0:\n        kvr *= -1\n        final += '1' * p\n        left = kvr\n    else:\n        final += '1' * llr\n        left = kvr\n    tfcx = l - mkn\n    lpv = 0\n    if tfcx <= 0:\n        tfcx *= -1\n        final += '1' * l\n        lpv = tfcx\n    else:\n        final += '1' * mkn\n        lpv = tfcx\n    final += '0' * kvr\n    final += '0' * tfcx\n    anre = 0\n    fcx = tth[0] - 1\n    for jjcv in final:\n        anre += int(jjcv) * 2 ** fcx\n        fcx -= 1\n    print(int(anre))", "from itertools import permutations\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (a, b) = (bin(a).replace('0b', ''), bin(b).replace('0b', ''))\n    (a, b) = ('0' * (n - len(a)) + a, '0' * (n - len(b)) + b)\n    (a0, a1, b0, b1) = (a.count('0'), a.count('1'), b.count('0'), b.count('1'))\n    s1 = min(a1, b0) + min(a0, b1)\n    s0 = n - s1\n    print(int('1' * s1 + '0' * s0, 2))", "from itertools import permutations\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (a, b) = (bin(a).replace('0b', ''), bin(b).replace('0b', ''))\n    (a, b) = ('0' * (n - len(a)) + a, '0' * (n - len(b)) + b)\n    (a0, a1, b0, b1) = (a.count('0'), a.count('1'), b.count('0'), b.count('1'))\n    s1 = min(a1, b0) + min(a0, b1)\n    s0 = n - s1\n    print(int('1' * s1 + '0' * s0, 2))", "def decimalToBinary(n):\n    return bin(n).replace('0b', '')\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (a, b) = (decimalToBinary(a).count('1'), decimalToBinary(b).count('1'))\n    l = min([a + b, 2 * n - a - b])\n    print(int(l * '1' + (n - l) * '0', 2))", "def decimalToBinary(n):\n    return bin(n).replace('0b', '')\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (a, b) = (decimalToBinary(a).count('1'), decimalToBinary(b).count('1'))\n    l = min([a + b, 2 * n - a - b])\n    print(int(l * '1' + (n - l) * '0', 2))", "def decimalToBinary(n):\n    return bin(n).replace('0b', '')\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (a, b) = (decimalToBinary(a).count('1'), decimalToBinary(b).count('1'))\n    l = min([a + b, 2 * n - a - b])\n    print(int(l * '1' + (n - l) * '0', 2))", "t = int(input())\nwhile t != 0:\n    (n, a, b) = map(int, input().split())\n    x = str(bin(a)).count('1')\n    y = str(bin(b)).count('1')\n    o = 0\n    if x + y <= n:\n        o = x + y\n    else:\n        o = n - (x + y - n)\n    k = ''\n    for i in range(1, n + 1):\n        if i <= o:\n            k += '1'\n        else:\n            k += '0'\n    print(int(k, 2))\n    t -= 1", "def To_Bi(n):\n    a = []\n    while n > 0:\n        a.append(n % 2)\n        n = n // 2\n    return a\n\ndef To_Dec(a):\n    n = 0\n    j = 0\n    for i in a:\n        n = n + i * 2 ** j\n        j = j + 1\n    return n\nt = int(input())\nfor i in range(t):\n    (n, A, B) = map(int, input().split())\n    a = To_Bi(A)\n    b = To_Bi(B)\n    c = []\n    x = a.count(1)\n    y = b.count(1)\n    if x + y <= n:\n        for i in range(n - (x + y)):\n            c.append(0)\n        for i in range(x + y):\n            c.append(1)\n    if x + y > n:\n        for i in range(x + y - n):\n            c.append(0)\n        for i in range(2 * n - (x + y)):\n            c.append(1)\n    print(To_Dec(c))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    ones = 0\n    while a:\n        rem = a % 2\n        if rem == 1:\n            ones += 1\n        a //= 2\n    while b:\n        rem = b % 2\n        if rem == 1:\n            ones += 1\n        b //= 2\n    ans = pow(2, n) - pow(2, abs(ones - n))\n    print(ans)", "for t in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    aa = str(bin(a)).count('1') + str(bin(b)).count('1')\n    pl = None\n    if aa < n:\n        pl = '1' * aa + '0' * (n - aa)\n    else:\n        pl = '1' * (n - (aa - n)) + '0' * (aa - n)\n    plm = 0\n    for i in range(n - 1, -1, -1):\n        plm += int(pl[-i - 1]) * 2 ** i\n    print(plm)", "t = int(input())\nfor t in range(t):\n    (n, a, b) = [int(i) for i in input().split()]\n\n    def dectobi(x):\n        s = ''\n        while x >= 1:\n            if x % 2 == 0:\n                s = s + '0'\n            else:\n                s = s + '1'\n            x = x // 2\n        if len(s) < n:\n            s = s + '0' * (n - len(s))\n        return s[::-1]\n\n    def bitodec(m):\n        sum = 0\n        power = 1\n        i = len(m) - 1\n        while i >= 0:\n            h = int(m[i])\n            sum += h * power\n            power = power * 2\n            i = i - 1\n        return sum\n    abit = dectobi(a)\n    bbit = dectobi(b)\n    a_0 = abit.count('0')\n    a_1 = abit.count('1')\n    b_0 = bbit.count('0')\n    b_1 = bbit.count('1')\n    c = min(a_1, b_0)\n    d = min(a_0, b_1)\n    res = '1' * (c + d)\n    if len(res) < n:\n        res = res + '0' * (n - len(res))\n    print(bitodec(res))", "t = int(input())\nfor t in range(t):\n    (n, a, b) = [int(i) for i in input().split()]\n\n    def dectobi(x):\n        s = ''\n        while x >= 1:\n            if x % 2 == 0:\n                s = s + '0'\n            else:\n                s = s + '1'\n            x = x // 2\n        if len(s) < n:\n            s = s + '0' * (n - len(s))\n        return s[::-1]\n\n    def bitodec(m):\n        sum = 0\n        power = 1\n        i = len(m) - 1\n        while i >= 0:\n            h = int(m[i])\n            sum += h * power\n            power = power * 2\n            i = i - 1\n        return sum\n    abit = dectobi(a)\n    bbit = dectobi(b)\n    a_0 = abit.count('0')\n    a_1 = abit.count('1')\n    b_0 = bbit.count('0')\n    b_1 = bbit.count('1')\n    c = min(a_1, b_0)\n    d = min(a_0, b_1)\n    res = '1' * (c + d)\n    if len(res) < n:\n        res = res + '0' * (n - len(res))\n    print(bitodec(res))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    ones = 0\n    while a:\n        rem = a % 2\n        if rem == 1:\n            ones += 1\n        a //= 2\n    while b:\n        rem = b % 2\n        if rem == 1:\n            ones += 1\n        b //= 2\n    ans = pow(2, n) - pow(2, abs(ones - n))\n    print(ans)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().strip().split())\n    aa = format(a, 'b').count('1')\n    bb = format(b, 'b').count('1')\n    if aa + bb == n:\n        print(int('1' * n, 2))\n    elif aa + bb < n:\n        print(int('0b' + '1' * (aa + bb) + '0' * (n - (aa + bb)), 2))\n    elif aa + bb > n:\n        print(int('0b' + '1' * (2 * n - (aa + bb)) + '0' * (aa + bb - n), 2))", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    a = bin(a).replace('0b', '')\n    b = bin(b).replace('0b', '')\n    s = a.count('1') + b.count('1')\n    if s == n:\n        out = '1' * n\n    elif s < n:\n        out = '1' * s + '0' * (n - s)\n    else:\n        out = '1' * (2 * n - s) + '0' * (s - n)\n    print(int(out, 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().strip().split())\n    aa = format(a, 'b').count('1')\n    bb = format(b, 'b').count('1')\n    if aa + bb == n:\n        print(int('1' * n, 2))\n    elif aa + bb < n:\n        print(int('0b' + '1' * (aa + bb) + '0' * (n - (aa + bb)), 2))\n    elif aa + bb > n:\n        print(int('0b' + '1' * (2 * n - (aa + bb)) + '0' * (aa + bb - n), 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (a, b) = (bin(a), bin(b))\n    (a, b) = (a[2:], b[2:])\n    (a, b) = ((n - len(a)) * '0' + a, (n - len(b)) * '0' + b)\n    ans = '1' * (min(a.count('0'), b.count('1')) + min(a.count('1'), b.count('0')))\n    ans += (n - len(ans)) * '0'\n    print(int(ans, 2))", "t = int(input())\nfor ni in range(t):\n    (n, a, b) = map(int, input().split())\n    a = bin(a).replace('0b', '')\n    b = bin(b).replace('0b', '')\n    s = a.count('1') + b.count('1')\n    if s == n:\n        out = '1' * n\n    elif s < n:\n        out = '1' * s + '0' * (n - s)\n    else:\n        ss = s - n\n        out = '1' * (n - ss) + '0' * ss\n    print(int(out, 2))", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    a_str = bin(a)[2:].zfill(n)\n    b_str = bin(b)[2:].zfill(n)\n    a_0 = a_1 = b_0 = b_1 = 0\n    for i in range(n):\n        if a_str[i] == '0':\n            a_0 += 1\n        else:\n            a_1 += 1\n        if b_str[i] == '0':\n            b_0 += 1\n        else:\n            b_1 += 1\n    x = min(a_1, b_0)\n    y = min(b_1, a_0)\n    p = x + y\n    ans = (1 << p) - 1 << n - p\n    print(ans)", "t = int(input())\nwhile t:\n    (n, a, b) = map(int, input().split())\n    c = bin(a).replace('0b', '')\n    d = bin(b).replace('0b', '')\n    s = c.count('1') + d.count('1')\n    if s == n:\n        r = '1' * n\n    elif s < n:\n        r = '1' * s + '0' * (n - s)\n    else:\n        x = s - n\n        r = '1' * (n - x) + '0' * x\n    print(int(r, 2))\n    t -= 1", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    x = str(bin(a)).count('1')\n    y = str(bin(b)).count('1')\n    (o, z) = (0, 0)\n    if x + y > n:\n        z = x + y - n\n        o = n - z\n    else:\n        o = x + y\n        z = n - o\n    ans = '1' * o + '0' * z\n    print(int(ans, 2))", "t = int(input())\nwhile t != 0:\n    (n, a, b) = map(int, input().split())\n    x = str(bin(a)).count('1')\n    y = str(bin(b)).count('1')\n    o = 0\n    if x + y <= n:\n        o = x + y\n    else:\n        o = n - (x + y - n)\n    k = ''\n    for i in range(1, n + 1):\n        if i <= o:\n            k += '1'\n        else:\n            k += '0'\n    print(int(k, 2))\n    t -= 1", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    x = str(bin(a)).count('1')\n    y = str(bin(b)).count('1')\n    (o, z) = (0, 0)\n    if x + y > n:\n        z = x + y - n\n        o = n - z\n    else:\n        o = x + y\n        z = n - o\n    ans = '1' * o + '0' * z\n    print(int(ans, 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    x = str(bin(a)).count('1')\n    y = str(bin(b)).count('1')\n    (o, z) = (0, 0)\n    if x + y > n:\n        z = x + y - n\n        o = n - z\n    else:\n        o = x + y\n        z = n - o\n    ans = '1' * o + '0' * z\n    print(int(ans, 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a_bin = bin(a)[2:]\n    b_bin = bin(b)[2:]\n    a_ones = a_bin.count('1')\n    b_ones = b_bin.count('1')\n    overlap = -n + a_ones + b_ones\n    if overlap < 0:\n        res = '1' * (a_ones + b_ones) + '0' * abs(overlap)\n    else:\n        res = '1' * (n - overlap) + '0' * overlap\n    print(int(res, 2))", "for tc in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a1 = str(bin(a)).count('1')\n    b1 = str(bin(b)).count('1')\n    (ones, zeros) = (0, 0)\n    if a1 + b1 > n:\n        zeros = a1 + b1 - n\n        ones = n - zeros\n    else:\n        ones = a1 + b1\n        zeros = n - ones\n    ans = '1' * ones + '0' * zeros\n    print(int(ans, 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a_bin = bin(a)[2:]\n    b_bin = bin(b)[2:]\n    a_ones = a_bin.count('1')\n    b_ones = b_bin.count('1')\n    overlap = -n + a_ones + b_ones\n    if overlap < 0:\n        res = '1' * (a_ones + b_ones) + '0' * abs(overlap)\n    else:\n        res = '1' * (n - overlap) + '0' * overlap\n    print(int(res, 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a_bin = bin(a)[2:]\n    b_bin = bin(b)[2:]\n    a_ones = a_bin.count('1')\n    b_ones = b_bin.count('1')\n    overlap = -n + a_ones + b_ones\n    if overlap < 0:\n        res = '1' * (a_ones + b_ones) + '0' * abs(overlap)\n    else:\n        res = '1' * (n - overlap) + '0' * overlap\n    print(int(res, 2))", "for _ in range(int(input())):\n    (N, A, B) = map(int, input().split())\n    cA = bin(A).count('1')\n    cB = bin(B).count('1')\n    res = '1' * (N - abs(cA + cB - N)) + '0' * abs(cA + cB - N)\n    print(int(res, 2))", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    x = bin(b).count('1')\n    y = a - bin(c).count('1')\n    n = a - abs(y - x)\n    ans = 0\n    s = a - 1\n    while n:\n        ans += 2 ** s\n        s -= 1\n        n -= 1\n    print(ans)", "for t in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a = bin(a)[2:]\n    b = bin(b)[2:]\n    if len(a) < n:\n        a = (n - len(a)) * '0' + a\n    else:\n        a = a[len(a) - n:]\n    if len(b) < n:\n        b = (n - len(b)) * '0' + b\n    else:\n        b = b[len(b) - n:]\n    a0 = a.count('0')\n    a1 = a.count('1')\n    b0 = b.count('0')\n    b1 = b.count('1')\n    k = min(a0, b1) + min(a1, b0)\n    print(int(k * '1' + (len(a) - k) * '0', 2))", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split(' '))\n    count1 = bin(b).count('1')\n    count2 = a - bin(c).count('1')\n    n = a - abs(count2 - count1)\n    count = 0\n    s = a - 1\n    while n != 0:\n        count += 2 ** s\n        s -= 1\n        n -= 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    a_str = bin(a)[2:].zfill(n)\n    b_str = bin(b)[2:].zfill(n)\n    a_0 = a_1 = b_0 = b_1 = 0\n    for i in range(n):\n        if a_str[i] == '0':\n            a_0 += 1\n        else:\n            a_1 += 1\n        if b_str[i] == '0':\n            b_0 += 1\n        else:\n            b_1 += 1\n    x = min(a_1, b_0)\n    y = min(b_1, a_0)\n    p = x + y\n    ans = (1 << p) - 1 << n - p\n    print(ans)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a_bin = bin(a).replace('0b', '')\n    b_bin = bin(b).replace('0b', '')\n    s = ''\n    a_one = a_bin.count('1')\n    b_one = b_bin.count('1')\n    total = a_one + b_one\n    if total <= n:\n        s = total * '1' + (n - total) * '0'\n    else:\n        s = (n - (total - n)) * '1' + (total - n) * '0'\n    print(int(s, 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a_bin = bin(a).replace('0b', '')\n    b_bin = bin(b).replace('0b', '')\n    s = ''\n    a_one = a_bin.count('1')\n    b_one = b_bin.count('1')\n    total = a_one + b_one\n    if total <= n:\n        for i in range(total):\n            s += '1'\n        for i in range(total, n):\n            s += '0'\n    else:\n        for i in range(n - (total - n)):\n            s += '1'\n        req = total - n\n        for i in range(req):\n            s += '0'\n    print(int(s, 2))", "for _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    x = bin(a)[2:]\n    y = bin(b)[2:]\n    s1 = (n - len(x)) * '0' + x\n    s2 = (n - len(y)) * '0' + y\n    ca0 = s1.count('0')\n    ca1 = s1.count('1')\n    cb0 = s2.count('0')\n    cb1 = s2.count('1')\n    p = min(ca0, cb1)\n    q = min(ca1, cb0)\n    s = p + q\n    ans = s * '1' + (n - s) * '0'\n    print(int(ans, 2))", "for _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    x = bin(a)[2:]\n    y = bin(b)[2:]\n    s1 = (n - len(x)) * '0' + x\n    s2 = (n - len(y)) * '0' + y\n    ca0 = s1.count('0')\n    ca1 = s1.count('1')\n    cb0 = s2.count('0')\n    cb1 = s2.count('1')\n    p = min(ca0, cb1)\n    q = min(ca1, cb0)\n    s = p + q\n    ans = s * '1' + (n - s) * '0'\n    print(int(ans, 2))", "for t in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    x = bin(a)[2:]\n    y = bin(b)[2:]\n    s1 = (n - len(x)) * '0' + x\n    s2 = (n - len(y)) * '0' + y\n    ca0 = s1.count('0')\n    ca1 = s1.count('1')\n    cb0 = s2.count('0')\n    cb1 = s2.count('1')\n    p = min(ca0, cb1)\n    q = min(ca1, cb0)\n    s = p + q\n    ans = s * '1' + (n - s) * '0'\n    print(int(ans, 2))", "for t in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a = bin(a)[2:]\n    b = bin(b)[2:]\n    if len(a) != n:\n        a = '0' * (n - len(a)) + a\n    if len(b) != n:\n        b = '0' * (n - len(b)) + b\n    za = a.count('0')\n    zb = b.count('0')\n    oa = a.count('1')\n    ob = b.count('1')\n    one = min(za, ob) + min(zb, oa)\n    ans = ''\n    ans = '1' * one + '0' * (n - one)\n    print(int(ans, 2))", "import math\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s1 = bin(a)[2:].count('1')\n    s2 = bin(b)[2:].count('1')\n    v = s1 + s2\n    ans = 0\n    if n >= v:\n        while v != 0:\n            n = n - 1\n            ans = ans + math.pow(2, n)\n            v = v - 1\n        print(int(ans))\n    else:\n        d = v - n\n        while n != d:\n            ans = ans + math.pow(2, n - 1)\n            n = n - 1\n        print(int(ans))", "import math\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s1 = bin(a)[2:].count('1')\n    s2 = bin(b)[2:].count('1')\n    v = s1 + s2\n    ans = 0\n    if n >= v:\n        while v != 0:\n            n = n - 1\n            ans = ans + math.pow(2, n)\n            v = v - 1\n        print(int(ans))\n    else:\n        d = v - n\n        while n != d:\n            ans = ans + math.pow(2, n - 1)\n            n = n - 1\n        print(int(ans))", "for t in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    x = bin(a)[2:]\n    y = bin(b)[2:]\n    s1 = (n - len(x)) * '0' + x\n    s2 = (n - len(y)) * '0' + y\n    a1 = s1.count('1')\n    b1 = s2.count('1')\n    d = ''\n    f = ''\n    for i in range(n - a1):\n        d += '0'\n    for i in range(a1):\n        d += '1'\n    for j in range(b1):\n        f += '1'\n    for j in range(n - b1):\n        f += '0'\n    c = 0\n    ss = ''\n    for i in range(n):\n        if d[i] != f[i]:\n            c += 1\n    for i in range(c):\n        ss += '1'\n    for i in range(n - c):\n        ss += '0'\n    ss = ss[::-1]\n    total = 0\n    for i in range(n):\n        if ss[i] == '1':\n            total += 2 ** i\n    print(total)", "for x in range(int(input())):\n    (n, a, b) = [int(d) for d in input().split()]\n    c1 = bin(a).count('1') + bin(b).count('1')\n    if c1 > n:\n        c1 = n - (c1 - n)\n    ans = 0\n    while c1 > 0:\n        ans += 2 ** (n - 1)\n        n -= 1\n        c1 -= 1\n    print(ans)", "for t in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    x = bin(a)[2:]\n    y = bin(b)[2:]\n    s1 = (n - len(x)) * '0' + x\n    s2 = (n - len(y)) * '0' + y\n    ca0 = s1.count('0')\n    ca1 = s1.count('1')\n    cb0 = s2.count('0')\n    cb1 = s2.count('1')\n    p = min(ca0, cb1)\n    q = min(ca1, cb0)\n    s = p + q\n    ans = s * '1' + (n - s) * '0'\n    print(int(ans, 2))", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    count_1 = bin(a).count('1') + bin(b).count('1')\n    if count_1 > n:\n        count_1 = n - (count_1 - n)\n    ans = 0\n    while count_1 > 0:\n        ans += 2 ** (n - 1)\n        n -= 1\n        count_1 -= 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    count_1 = bin(a).count('1') + bin(b).count('1')\n    if count_1 > n:\n        count_1 = n - (count_1 - n)\n    ans = 0\n    while count_1 > 0:\n        ans += 2 ** (n - 1)\n        n -= 1\n        count_1 -= 1\n    print(ans)", "for _ in range(int(input())):\n    (N, A, B) = map(int, input().split())\n    if A < B:\n        (A, B) = (B, A)\n    a = bin(A).count('1')\n    b = bin(B).count('1')\n    mx = 2 ** N - 1\n    if a + b == N:\n        print(mx)\n    else:\n        diff = abs(N - a - b)\n        print(mx - 2 ** diff + 1)", "for t in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    x = bin(a)[2:]\n    y = bin(b)[2:]\n    s1 = (n - len(x)) * '0' + x\n    s2 = (n - len(y)) * '0' + y\n    ca0 = s1.count('0')\n    ca1 = s1.count('1')\n    cb0 = s2.count('0')\n    cb1 = s2.count('1')\n    p = min(ca0, cb1)\n    q = min(ca1, cb0)\n    s = p + q\n    ans = s * '1' + (n - s) * '0'\n    print(int(ans, 2))", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    b1 = bin(a)[2:]\n    b2 = bin(b)[2:]\n    if len(b1) < n:\n        b1 = '0' * (n - len(b1)) + b1\n    if len(b2) < n:\n        b2 = '0' * (n - len(b2)) + b2\n    z1 = b1.count('1')\n    z2 = b2.count('0')\n    z3 = b1.count('0')\n    z4 = b2.count('1')\n    ans = min(z1, z2)\n    ans += min(z3, z4)\n    result = ans * '1' + (n - ans) * '0'\n    print(int(result, 2))", "import numpy as np\nt = input()\nfor c in range(0, int(t)):\n    a = list(map(int, input().split()))\n    num_1 = ''\n    num_2 = ''\n    while a[1] != 0:\n        num_1 += str(a[1] % 2)\n        a[1] = int(a[1] / 2)\n    while a[2] != 0:\n        num_2 += str(a[2] % 2)\n        a[2] = int(a[2] / 2)\n    for l in range(a[0] - len(num_1)):\n        num_1 = '0' + num_1\n    for o in range(a[0] - len(num_2)):\n        num_2 = '0' + num_2\n    num_1_1 = num_1.count('1')\n    num_1_0 = num_1.count('0')\n    num_2_1 = num_2.count('1')\n    num_2_0 = num_2.count('0')\n    b = min(num_1_0, num_2_1) + min(num_2_0, num_1_1)\n    num = ''\n    for j in range(b):\n        num += '1'\n    for p in range(a[0] - b):\n        num = num + '0'\n    num = list(map(int, num))\n    sum = 0\n    for k in range(len(num)):\n        sum += 2 ** k * num[len(num) - k - 1]\n    print(sum)", "def significant_bits(n):\n    c = 0\n    while n > 0:\n        n = n & n - 1\n        c += 1\n    return c\n\ndef solve():\n    (n, a, b) = map(int, input().split())\n    set_a = significant_bits(a)\n    set_b = significant_bits(b)\n    zero_a = n - set_a\n    zero_b = n - set_b\n    ans = 0\n    while set_a > 0 and zero_b > 0 and (n > 0):\n        ans += 1 << n - 1\n        n -= 1\n        set_a -= 1\n        zero_b -= 1\n    while set_b > 0 and zero_a > 0 and (n > 0):\n        ans += 1 << n - 1\n        n -= 1\n        set_b -= 1\n        zero_a -= 1\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "def significant_bits(n):\n    c = 0\n    while n > 0:\n        n = n & n - 1\n        c += 1\n    return c\n\ndef solve():\n    (n, a, b) = map(int, input().split())\n    set_a = significant_bits(a)\n    set_b = significant_bits(b)\n    zero_a = n - set_a\n    zero_b = n - set_b\n    ans = 0\n    while set_a > 0 and zero_b > 0 and (n > 0):\n        ans += 1 << n - 1\n        n -= 1\n        set_a -= 1\n        zero_b -= 1\n    while set_b > 0 and zero_a > 0 and (n > 0):\n        ans += 1 << n - 1\n        n -= 1\n        set_b -= 1\n        zero_a -= 1\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "import numpy as np\nt = int(input())\nfor _ in range(t):\n    a = list(map(int, input().split()))\n    num_1 = ''\n    num_2 = ''\n    while a[1] != 0:\n        num_1 += str(a[1] % 2)\n        a[1] = int(a[1] / 2)\n    while a[2] != 0:\n        num_2 += str(a[2] % 2)\n        a[2] = int(a[2] / 2)\n    for l in range(a[0] - len(num_1)):\n        num_1 = '0' + num_1\n    for o in range(a[0] - len(num_2)):\n        num_2 = '0' + num_2\n    num_1_1 = num_1.count('1')\n    num_1_0 = num_1.count('0')\n    num_2_1 = num_2.count('1')\n    num_2_0 = num_2.count('0')\n    b = min(num_1_0, num_2_1) + min(num_2_0, num_1_1)\n    num = ''\n    for j in range(b):\n        num += '1'\n    for p in range(a[0] - b):\n        num = num + '0'\n    num = list(map(int, num))\n    sum = 0\n    for k in range(len(num)):\n        sum += 2 ** k * num[len(num) - k - 1]\n    print(sum)", "def count1(t):\n    one = 0\n    while t != 0:\n        if t % 2 == 1:\n            one += 1\n        t = t // 2\n    return one\nfor _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    a1 = count1(a)\n    b1 = count1(b)\n    if a1 + b1 <= n:\n        num = 0\n        i = n - 1\n        s = a1 + b1\n        while s:\n            num += 2 ** i\n            i -= 1\n            s -= 1\n        print(num)\n    else:\n        d = a1 + b1 - n\n        s = n - d\n        num = 0\n        i = n - 1\n        while s:\n            num += 2 ** i\n            i -= 1\n            s -= 1\n        print(num)", "tests = int(input())\nfor i in range(tests):\n    (n, a, b) = map(int, input().split())\n    a_ones = 0\n    b_ones = 0\n    while a != 0:\n        if a & 1:\n            a_ones += 1\n        a >>= 1\n    while b != 0:\n        if b & 1:\n            b_ones += 1\n        b >>= 1\n    total_ones = 0\n    if a_ones + b_ones <= n:\n        total_ones = a_ones + b_ones\n    else:\n        total_ones = n - (a_ones + b_ones - n)\n    rem_zeroes = n - total_ones\n    ans = 2 ** total_ones - 1\n    ans <<= rem_zeroes\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    b1 = bin(a)[2:]\n    b2 = bin(b)[2:]\n    if len(b1) < n:\n        b1 = '0' * (n - len(b1)) + b1\n    if len(b2) < n:\n        b2 = '0' * (n - len(b2)) + b2\n    z1 = b1.count('1')\n    z2 = b2.count('0')\n    z3 = b1.count('0')\n    z4 = b2.count('1')\n    ans = min(z1, z2)\n    ans += min(z3, z4)\n    result = ans * '1' + (n - ans) * '0'\n    print(int(result, 2))", "for t in range(int(input())):\n    [n, a, b] = [int(i) for i in input().split(' ')]\n    (a, b) = (format(a, '0' + str(n) + 'b'), format(b, '0' + str(n) + 'b'))\n    (a0, a1) = (a.count('0'), a.count('1'))\n    (b0, b1) = (b.count('0'), b.count('1'))\n    n1 = min(a1, b0) + min(b1, a0)\n    n0 = n - n1\n    ans = '1' * n1 + '0' * n0\n    print(int(ans, 2))", "for t in range(int(input())):\n    [n, a, b] = [int(i) for i in input().split(' ')]\n    (a, b) = (format(a, '0' + str(n) + 'b'), format(b, '0' + str(n) + 'b'))\n    (a0, a1) = (a.count('0'), a.count('1'))\n    (b0, b1) = (b.count('0'), b.count('1'))\n    n1 = min(a1, b0) + min(b1, a0)\n    n0 = n - n1\n    ans = '1' * n1 + '0' * n0\n    print(int(ans, 2))", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    sum1 = 0\n    counta1 = 0\n    countb1 = 0\n    counta0 = 0\n    countb0 = 0\n    while a != 0:\n        if a % 2 == 1:\n            counta1 += 1\n        a = a // 2\n    while b != 0:\n        if b % 2 == 1:\n            countb1 += 1\n        b = b // 2\n    counta0 = n - counta1\n    countb0 = n - countb1\n    k = min(countb1, counta0)\n    h = min(countb0, counta1)\n    x = k + h\n    for i in range(x):\n        sum1 = sum1 + pow(2, n - i - 1)\n    print(sum1)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    sum1 = 0\n    counta1 = 0\n    countb1 = 0\n    counta0 = 0\n    countb0 = 0\n    while a != 0:\n        if a % 2 == 1:\n            counta1 += 1\n        a = a // 2\n    while b != 0:\n        if b % 2 == 1:\n            countb1 += 1\n        b = b // 2\n    counta0 = n - counta1\n    countb0 = n - countb1\n    k = min(countb1, counta0)\n    h = min(countb0, counta1)\n    x = k + h\n    for i in range(x):\n        sum1 = sum1 + pow(2, n - i - 1)\n    print(sum1)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    sum1 = 0\n    counta1 = 0\n    countb1 = 0\n    counta0 = 0\n    countb0 = 0\n    while a != 0:\n        if a % 2 == 1:\n            counta1 += 1\n        a = a // 2\n    while b != 0:\n        if b % 2 == 1:\n            countb1 += 1\n        b = b // 2\n    counta0 = n - counta1\n    countb0 = n - countb1\n    k = min(countb1, counta0)\n    h = min(countb0, counta1)\n    x = k + h\n    for i in range(x):\n        sum1 = sum1 + pow(2, n - i - 1)\n    print(sum1)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    str1 = bin(a)[2:]\n    str2 = bin(b)[2:]\n    if len(str1) != n:\n        str1 = '0' * (n - len(str1)) + str1\n    if len(str2) != n:\n        str2 = '0' * (n - len(str2)) + str2\n    n0a = str1.count('0')\n    n1a = str1.count('1')\n    n0b = str2.count('0')\n    n1b = str2.count('1')\n    str5 = ''\n    str6 = ''\n    if n0a > n1b:\n        str5 = n1b * '0' + n1a * '1' + (n0a - n1b) * '0'\n        str6 = n1b * '1' + n0b * '0'\n    elif n0a < n1b:\n        str5 = n0a * '0' + n1a * '1'\n        str6 = n0a * '1' + n0b * '0' + (n1b - n0a) * '1'\n    else:\n        str5 = '1' * n1a + '0' * n0a\n        str6 = '0' * n0b + '1' * n1b\n    (x, y) = (0, 0)\n    for j in range(n):\n        x += pow(2, n - 1 - j) * int(str5[j])\n        y += pow(2, n - 1 - j) * int(str6[j])\n    print(x ^ y)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    str1 = bin(a)[2:]\n    str2 = bin(b)[2:]\n    if len(str1) != n:\n        str1 = '0' * (n - len(str1)) + str1\n    if len(str2) != n:\n        str2 = '0' * (n - len(str2)) + str2\n    n0a = str1.count('0')\n    n1a = str1.count('1')\n    n0b = str2.count('0')\n    n1b = str2.count('1')\n    str6 = ''\n    if n0a > n1b:\n        str5 = n1b * '0' + n1a * '1' + (n0a - n1b) * '0'\n        str6 = n1b * '1' + n0b * '0'\n    elif n0a < n1b:\n        str5 = n0a * '0' + n1a * '1'\n        str6 = n0a * '1' + n0b * '0' + (n1b - n0a) * '1'\n    else:\n        str5 = '1' * n1a + '0' * n0a\n        str6 = '0' * n0b + '1' * n1b\n    (x, y) = (0, 0)\n    for j in range(n):\n        x += pow(2, n - 1 - j) * int(str5[j])\n        y += pow(2, n - 1 - j) * int(str6[j])\n    print(x ^ y)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    str1 = bin(a)[2:]\n    str2 = bin(b)[2:]\n    if len(str1) != n:\n        str1 = '0' * (n - len(str1)) + str1\n    if len(str2) != n:\n        str2 = '0' * (n - len(str2)) + str2\n    n0a = str1.count('0')\n    n1a = str1.count('1')\n    n0b = str2.count('0')\n    n1b = str2.count('1')\n    if n0a >= n0b:\n        str3 = '0' * n0a + '1' * n1a\n        str4 = '1' * n0b + '0' * n0b\n    else:\n        str3 = '1' * n1a + '0' * n0a\n        str4 = '0' * n0b + '1' * n1b\n    str5 = ''\n    str6 = ''\n    if n0a > n1b:\n        str5 = n1b * '0' + n1a * '1' + (n0a - n1b) * '0'\n        str6 = n1b * '1' + n0b * '0'\n    elif n0a < n1b:\n        str5 = n0a * '0' + n1a * '1'\n        str6 = n0a * '1' + n0b * '0' + (n1b - n0a) * '1'\n    else:\n        str5 = '1' * n1a + '0' * n0a\n        str6 = '0' * n0b + '1' * n1b\n    (x, y) = (0, 0)\n    for j in range(n):\n        x += pow(2, n - 1 - j) * int(str5[j])\n        y += pow(2, n - 1 - j) * int(str6[j])\n    print(x ^ y)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    (p, q) = (bin(b)[2:].count('1'), bin(c)[2:].count('1'))\n    s = 0\n    t = a\n    if t > p + q:\n        t = p + q\n    elif t < p + q:\n        t -= p + q - t\n    for i in range(a - 1, a - t - 1, -1):\n        s += 2 ** i\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    sa = bin(a)[2:]\n    sb = bin(b)[2:]\n    na1 = sa.count('1')\n    nb1 = sb.count('1')\n    max1 = 2 ** n - 1\n    if na1 + nb1 == n:\n        ans = max1\n    else:\n        dif = abs(n - (na1 + nb1))\n        ans = max1 - (2 ** dif - 1)\n    print(ans)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a_one = bin(a).replace('0b', '').count('1')\n    b_one = bin(b).replace('0b', '').count('1')\n    max_num = (n - abs(a_one + b_one - n)) * '1' + abs(n - a_one - b_one) * '0'\n    print(int(max_num, 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a_one = bin(a).replace('0b', '').count('1')\n    b_one = bin(b).replace('0b', '').count('1')\n    max_num = (n - abs(a_one + b_one - n)) * '1' + abs(n - a_one - b_one) * '0'\n    print(int(max_num, 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a_one = bin(a).replace('0b', '').count('1')\n    b_one = bin(b).replace('0b', '').count('1')\n    max_num = (n - abs(a_one + b_one - n)) * '1' + abs(n - a_one - b_one) * '0'\n    print(int(max_num, 2))", "ujju = int(input())\nfor jyo in range(ujju):\n    (ysp, csk, rcb) = map(int, input().split())\n    fog = 0\n    gof = 0\n    while csk != 0:\n        if csk % 2 == 1:\n            fog = fog + 1\n        csk = csk // 2\n    while rcb != 0:\n        if rcb % 2 == 1:\n            fog = fog + 1\n        rcb = rcb // 2\n    if fog + gof <= ysp:\n        trs = ysp - fog - gof\n        bjp = 2 ** ysp - 2 ** trs\n        print(bjp)\n    else:\n        print(2 ** ysp - 2 ** (fog + gof - ysp))", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    c1 = 0\n    while b != 0:\n        if b & 1 == 1:\n            c1 += 1\n        b = b >> 1\n    while c != 0:\n        if c & 1 == 1:\n            c1 += 1\n        c = c >> 1\n    if c1 > a:\n        c1 -= c1 - a << 1\n    (s, k) = (0, 1 << a - 1)\n    for i in range(c1):\n        s += k\n        k = k >> 1\n    print(s)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    c1 = 0\n    while b != 0:\n        if b & 1 == 1:\n            c1 += 1\n        b = b >> 1\n    while c != 0:\n        if c & 1 == 1:\n            c1 += 1\n        c = c >> 1\n    if c1 > a:\n        c1 -= c1 - a << 1\n    (s, k) = (0, 1 << a - 1)\n    for i in range(c1):\n        s += k\n        k = k >> 1\n    print(s)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    c1 = 0\n    while b != 0:\n        if b & 1 == 1:\n            c1 += 1\n        b = b >> 1\n    while c != 0:\n        if c & 1 == 1:\n            c1 += 1\n        c = c >> 1\n    if c1 > a:\n        c1 -= c1 - a << 1\n    (s, k) = (0, 1 << a - 1)\n    for i in range(c1):\n        s += k\n        k = k >> 1\n    print(s)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    c1 = 0\n    while b != 0:\n        if b & 1 == 1:\n            c1 += 1\n        b = b >> 1\n    while c != 0:\n        if c & 1 == 1:\n            c1 += 1\n        c = c >> 1\n    if c1 > a:\n        c1 -= c1 - a << 1\n    (s, k) = (0, 1 << a - 1)\n    for i in range(c1):\n        s += k\n        k = k >> 1\n    print(s)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    c1 = 0\n    while b != 0:\n        if b & 1 == 1:\n            c1 += 1\n        b = b >> 1\n    while c != 0:\n        if c & 1 == 1:\n            c1 += 1\n        c = c >> 1\n    if c1 > a:\n        c1 -= c1 - a << 1\n    (s, k) = (0, 1 << a - 1)\n    for i in range(c1):\n        s += k\n        k = k >> 1\n    print(s)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    c1 = 0\n    while b != 0:\n        if b & 1 == 1:\n            c1 += 1\n        b = b >> 1\n    while c != 0:\n        if c & 1 == 1:\n            c1 += 1\n        c = c >> 1\n    if c1 > a:\n        c1 -= c1 - a << 1\n    (s, k) = (0, 1 << a - 1)\n    for i in range(c1):\n        s += k\n        k = k >> 1\n    print(s)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a_one = bin(a).replace('0b', '').count('1')\n    b_one = bin(b).replace('0b', '').count('1')\n    max_num = (n - abs(a_one + b_one - n)) * '1' + abs(n - a_one - b_one) * '0'\n    print(int(max_num, 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a_one = bin(a).replace('0b', '').count('1')\n    b_one = bin(b).replace('0b', '').count('1')\n    max_num = (n - abs(a_one + b_one - n)) * '1' + abs(n - a_one - b_one) * '0'\n    print(int(max_num, 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    a_one = bin(a).replace('0b', '').count('1')\n    b_one = bin(b).replace('0b', '').count('1')\n    max_num = (n - abs(a_one + b_one - n)) * '1' + abs(n - a_one - b_one) * '0'\n    print(int(max_num, 2))", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    c1 = 0\n    while b != 0:\n        if b & 1 == 1:\n            c1 += 1\n        b = b >> 1\n    while c != 0:\n        if c & 1 == 1:\n            c1 += 1\n        c = c >> 1\n    if c1 > a:\n        c1 -= c1 - a << 1\n    (s, k) = (0, 1 << a - 1)\n    for i in range(c1):\n        s += k\n        k = k >> 1\n    print(s)", "t = int(input())\nfor i in range(t):\n    (N, A, B) = map(int, input().split())\n    a = bin(A).replace('0b', '').count('1')\n    b = bin(B).replace('0b', '').count('1')\n    max1 = (N - abs(a + b - N)) * '1' + abs(N - a - b) * '0'\n    print(int(max1, 2))", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    a = bin(a).replace('0b', '')\n    b = bin(b).replace('0b', '')\n    if len(a) == n and len(b) == n:\n        l = min(a.count('1'), b.count('0'))\n        m = min(a.count('0'), b.count('1'))\n        if l + m == n:\n            x = '1' * n\n            print(int(x, 2))\n        else:\n            x = '1' * (l + m) + '0' * (n - l - m)\n            print(int(x, 2))\n    else:\n        a = '0' * (n - len(a)) + a\n        b = '0' * (n - len(b)) + b\n        l = min(a.count('1'), b.count('0'))\n        m = min(a.count('0'), b.count('1'))\n        if l + m == n:\n            x = '1' * n\n            print(int(x, 2))\n        else:\n            x = '1' * (l + m) + '0' * (n - l - m)\n            print(int(x, 2))", "t = int(input())\nfor i in range(t):\n    (N, A, B) = map(int, input().split())\n    a = bin(A).replace('0b', '').count('1')\n    b = bin(B).replace('0b', '').count('1')\n    max1 = (N - abs(a + b - N)) * '1' + abs(N - a - b) * '0'\n    print(int(max1, 2))", "def binary(num):\n    bin = ''\n    while num > 0:\n        bin = str(num % 2) + bin\n        num = num // 2\n    return bin\nt = int(input())\nwhile t:\n    n = list(map(int, input().split()))\n    (N, A, B) = (n[0], n[1], n[2])\n    if A < B:\n        (A, B) = (B, A)\n    a = binary(A)\n    b = binary(B)\n    if len(a) < N:\n        m = N - len(a)\n        str1 = '0' * m\n        a = str1 + a\n    if len(b) < N:\n        m = N - len(b)\n        str1 = '0' * m\n        b = str1 + b\n    counta0 = a.count('0')\n    counta1 = a.count('1')\n    countb0 = b.count('0')\n    countb1 = b.count('1')\n    newa = '1' * counta1\n    newa += '0' * counta0\n    newb = '0' * countb0\n    newb += '1' * countb1\n    ba = N - 1\n    bb = N - 1\n    la = []\n    la[:0] = newa\n    lb = []\n    lb[:0] = newb\n    for i in range(N):\n        if newa[i] == '1' and newb[i] == '1' and (la[ba] == '0'):\n            la[ba] = '1'\n            la[i] = '0'\n            ba -= 1\n        elif newa[i] == '0' and newb[i] == '0' and (lb[bb] == '1'):\n            lb[bb] = '0'\n            lb[i] = '1'\n            bb -= 1\n    la = ''.join(la)\n    lb = ''.join(lb)\n    ans = int(la, 2) ^ int(lb, 2)\n    print(int(ans))\n    t -= 1", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    sum_a = bin(a).replace('0b', '').count('1')\n    sum_b = bin(b).replace('0b', '').count('1')\n    max = (n - abs(sum_a + sum_b - n)) * '1' + abs(n - sum_a - sum_b) * '0'\n    print(int(max, 2))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    sum_a = bin(a).replace('0b', '').count('1')\n    sum_b = bin(b).replace('0b', '').count('1')\n    max = (n - abs(sum_a + sum_b - n)) * '1' + abs(n - sum_a - sum_b) * '0'\n    print(int(max, 2))", "from sys import stdin, stdout\n\ndef binary(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        strg = ''\n        while 1:\n            strg += str(n % 2)\n            n = n // 2\n            if n == 1:\n                strg += '1'\n                break\n        return strg[::-1]\ntest = int(stdin.readline().rstrip())\nwhile test > 0:\n    (n, a, b) = map(int, stdin.readline().rstrip().split())\n    string_a = binary(a)\n    string_b = binary(b)\n    string_a = '0' * (n - len(string_a)) + string_a\n    string_b = '0' * (n - len(string_b)) + string_b\n    string_c = string_a + string_b\n    count = 0\n    for i in range(2 * n):\n        if string_c[i] == '0':\n            count += 1\n    if count <= n:\n        var = count\n    else:\n        var = 2 * n - count\n    total = 0\n    for i in range(var, 0, -1):\n        total += 2 ** (n - i)\n    print(total)\n    test -= 1", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    c = 0\n    d = 0\n    while a != 0:\n        c += a % 2\n        a = a // 2\n    while b != 0:\n        c += b % 2\n        b = b // 2\n    if c > n:\n        c = 2 * n - c\n    n -= 1\n    if c == 0:\n        print(0)\n    else:\n        for i in range(c):\n            d += 2 ** (n - i)\n        print(d)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    bin_a = bin(a).replace('0b', '')\n    bin_b = bin(b).replace('0b', '')\n    while len(bin_a) < n:\n        bin_a = '0' + bin_a\n    while len(bin_b) < n:\n        bin_b = '0' + bin_b\n    count_a = bin_a.count('1')\n    count_b = bin_b.count('1')\n    if count_a + count_b > n:\n        i = n - (count_a + count_b - n)\n    else:\n        i = count_a + count_b\n    temp = 0\n    x = 0\n    while x < i:\n        temp = temp + pow(2, n - 1 - x)\n        x = x + 1\n    print(temp)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (a_bin, b_bin) = (bin(a)[2:], bin(b)[2:])\n    temp = abs(a_bin.count('1') + b_bin.count('1') - n)\n    rem = (n - temp) * '1' + temp * '0'\n    print(int(rem, 2))"]