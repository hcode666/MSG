["import math\nfor _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    if n % k == 0:\n        x = p % k\n        y = n // k\n        print(x * y + math.ceil((p + 1) / k))\n    elif n % k >= p % k + 1:\n        x = p % k\n        y = math.ceil(n / k)\n        print(x * y + math.ceil((p + 1) / k))\n    else:\n        x = p % k\n        y = math.ceil(n / k) - 1\n        print(x * y + n % k + math.ceil((p + 1) / k))", "import math\nfor _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    if n % k == 0:\n        x = p % k\n        y = n // k\n        print(x * y + math.ceil((p + 1) / k))\n    elif n % k >= p % k + 1:\n        x = p % k\n        y = math.ceil(n / k)\n        print(x * y + math.ceil((p + 1) / k))\n    else:\n        x = p % k\n        y = math.ceil(n / k) - 1\n        print(x * y + n % k + math.ceil((p + 1) / k))", "t = int(input())\nfor i in range(t):\n    (n, p, k) = list(map(int, input().split()))\n    ans = n // k * (p % k) + p // k + min(n % k, p % k) + 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, p, k) = list(map(int, input().split()))\n    ans = n // k * (p % k) + p // k + min(n % k, p % k) + 1\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, p, K) = map(int, input().split())\n    if (p + 1) % K == 0:\n        a = K\n    else:\n        a = (p + 1) % K\n    if a > N % K:\n        print(N % K + (a - 1) * (N // K) + p // K + 1)\n    else:\n        print((a - 1) * (N // K + 1) + p // K + 1)", "def main():\n    for _ in range(int(input())):\n        (n, p, k) = map(int, input().split())\n        n = n - 1\n        ans = p % k * (n // k) + (p // k + 1) + min(p % k, n % k + 1)\n        print(ans)\nmain()", "t = int(input())\nfor j in range(t):\n    (n, p, k) = map(int, input().split())\n    x = n // k\n    res = min(n % k, p % k) + p % k * x + p // k + 1\n    print(res)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    c = p % k\n    diff = n - n // k * k\n    ans = 0\n    base = n // k\n    if c >= diff:\n        ans += diff * (base + 1) + (c - diff) * base\n    else:\n        ans += c * (base + 1)\n    ans += p // k + 1\n    print(ans)", "tc = int(input())\nfor _ in range(tc):\n    (n, p, k) = map(int, input().split())\n    m = p % k\n    mod = 0\n    if n % k != 0:\n        num = (n - 1) // k + 1\n    else:\n        num = (n - 1) // k + 2\n    if m >= n % k:\n        mod = mod + num * (n % k)\n        mod = mod + (num - 1) * (m - n % k)\n    else:\n        mod = mod + num * m\n    x = (p - m) / k + 1\n    mod += x\n    print(int(mod))", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    x = n // k\n    res = min(p % k, n % k) + p % k * x + p // k + 1\n    print(res)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    x = n // k\n    res = min(p % k, n % k) + p % k * x + p // k + 1\n    print(res)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    x = n // k\n    print(min(p % k, n % k) + p % k * x + p // k + 1)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    x = n // k\n    res = min(p % k, n % k) + p % k * x + p // k + 1\n    print(res)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    x = n // k\n    res = min(p % k, n % k) + p % k * x + p // k + 1\n    print(res)", "def soln(n, k, p):\n    dest = p % k\n    res = 0\n    res = dest * (n // k)\n    res += min(n % k, p % k)\n    res += p // k + 1\n    return res\nfor _ in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    print(soln(n, k, p))", "try:\n    for i in range(int(input())):\n        (n, p, k) = input().split(' ')\n        n = int(n)\n        p = int(p)\n        k = int(k)\n        ans = 0\n        a = p % k - 1\n        b = (n - 1) // k * k\n        b = n - 1 - b\n        if a > b:\n            ans += (b + 1) * ((n - 1) // k + 1) + (a - b) * ((n - 1) // k)\n        else:\n            ans += ((n - 1) // k + 1) * (a + 1)\n        for i in range(a + 1, n, k):\n            ans += 1\n            if i == p:\n                print(ans)\n                break\nexcept:\n    pass", "def soln(n, k, p):\n    dest = p % k\n    res = 0\n    res = dest * (n // k)\n    res += min(n % k, p % k)\n    res += p // k + 1\n    return res\nfor _ in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    print(soln(n, k, p))", "for t in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    run = p % k\n    longer_runs = min(n % k, run)\n    shorter_runs = run - longer_runs\n    ans = longer_runs * (n // k + 1) + shorter_runs * (n // k)\n    ans += p // k + 1\n    print(ans)", "for t in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    run = p % k\n    longer_runs = min(n % k, run)\n    shorter_runs = run - longer_runs\n    ans = longer_runs * (n // k + 1) + shorter_runs * (n // k)\n    ans += p // k + 1\n    print(ans)", "for t in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    run = p % k\n    longer_runs = min(n % k, run)\n    shorter_runs = run - longer_runs\n    ans = longer_runs * (n // k + 1) + shorter_runs * (n // k)\n    ans += p // k + 1\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    (N, p, K) = map(int, input().split())\n    group = p % K\n    group_size = int(math.ceil(N / K))\n    large_group_count = N % K\n    large_group_size = N // K + 1\n    if group < large_group_count:\n        count = group * large_group_size + (p - group) // K + 1\n    else:\n        count = large_group_count * large_group_size + (group - large_group_count) * (large_group_size - 1) + (p - group) // K + 1\n    print(count)", "def soln(n, k, p):\n    dest = p % k\n    res = 0\n    res = dest * (n // k)\n    res += min(n % k, p % k)\n    res += p // k + 1\n    return res\nfor _ in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    print(soln(n, k, p))", "def soln(n, k, p):\n    dest = p % k\n    res = 0\n    res = dest * (n // k)\n    res += min(n % k, p % k)\n    res += p // k + 1\n    return res\nfor _ in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    print(soln(n, k, p))", "t = int(input())\nfor _ in range(t):\n    (n, p, k) = list(map(int, input().split()))\n    r = p % k\n    days = n // k * r\n    x = n % k\n    if x >= r:\n        days += r\n    else:\n        days += x\n    days += (p - r) // k + 1\n    print(days)", "t = int(input())\nfor i in range(t):\n    (n, p, k) = map(int, input().split())\n    x = p % k\n    ans = 0\n    a = (n - 1) % k\n    b = int((n - 1 - a) // k + 1)\n    if x - 1 <= a:\n        ans = b * x\n    else:\n        ans = b * (a + 1)\n        ans += (b - 1) * (x - a - 1)\n    ans += int((p - x) // k + 1)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (N, p, K) = map(int, input().split())\n    qr = p % K\n    md = (N - 1) % K\n    res = 0\n    if qr > md:\n        res = (md + 1) * (1 + (N - 1) // K) + (qr - md - 1) * ((N - 1) // K) + p // K + 1\n    else:\n        res = qr * (1 + (N - 1) // K) + p // K + 1\n    print(res)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    b = p // k + 1\n    m = p % k\n    a = (n - 1) // k + 1\n    a1 = (n - 1) % k\n    if m - 1 <= a1:\n        print(a * m + b)\n    else:\n        print(a * (a1 + 1) + (a - 1) * (m - a1 - 1) + b)", "for _ in range(int(input())):\n    (n, k, p) = map(int, input().split())\n    (t1, t2) = (0, 0)\n    if n % p == 0:\n        t1 = n // p\n        ans = t1 * (k % p) + k // p + 1\n        print(ans)\n    else:\n        t1 = n // p\n        ans = t1 * (k % p) + k // p + 1\n        t2 = n % p\n        if k % p > t2:\n            ans += t2\n        else:\n            ans += k % p\n        print(ans)", "for _ in range(int(input())):\n    (n, k, p) = map(int, input().split())\n    (t1, t2) = (0, 0)\n    if n % p == 0:\n        t1 = n // p\n        ans = t1 * (k % p) + k // p + 1\n        print(ans)\n    else:\n        t1 = n // p\n        ans = t1 * (k % p) + k // p + 1\n        t2 = n % p\n        if k % p > t2:\n            ans += t2\n        else:\n            ans += k % p\n        print(ans)", "def main():\n    for _ in range(int(input())):\n        (n, p, k) = map(int, input().split())\n        n = n - 1\n        ans = p % k * (n // k) + (p // k + 1) + min(p % k, n % k + 1)\n        print(ans)\nmain()", "def l\u00f6sning(n, p, k):\n    r = n % k\n    i = p % k\n    num = 1 + i * (n // k) + p // k\n    if i < r:\n        num += i\n    else:\n        num += r\n    return num\nT = int(input())\nfor i in range(T):\n    (n, p, k) = map(int, input().split())\n    print(l\u00f6sning(n, p, k))", "T = int(input())\nfor _ in range(T):\n    (n, p, k) = map(int, input().split())\n    r = n % k\n    i = p % k\n    num = 1 + i * (n // k) + p // k\n    if i < r:\n        num += i\n    else:\n        num += r\n    print(num)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    b = p // k + 1\n    m = p % k\n    a = (n - 1) // k + 1\n    a1 = (n - 1) % k\n    if m - 1 <= a1:\n        print(a * m + b)\n    else:\n        print(a * (a1 + 1) + (a - 1) * (m - a1 - 1) + b)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    b = p // k + 1\n    m = p % k\n    a = (n - 1) // k + 1\n    a1 = (n - 1) % k\n    if m - 1 <= a1:\n        print(a * m + b)\n    else:\n        print(a * (a1 + 1) + (a - 1) * (m - a1 - 1) + b)", "t = int(input())\nfor _ in range(t):\n    (n, p, k) = list(map(int, input().split()))\n    if n % k == 0:\n        rows = k\n        cols = n // k\n        p_row = p % k + 1\n        p_col = p // k + 1\n        index = (p_row - 1) * cols + p_col\n    else:\n        rows = k\n        cols = n // k\n        p_row = p % k + 1\n        p_col = p // k + 1\n        boundary = rows * cols - 1\n        extras = n - boundary - 1\n        if p_row <= extras:\n            index = (p_row - 1) * (cols + 1) + p_col\n        else:\n            index = extras * (cols + 1) + (p_row - extras - 1) * cols + p_col\n    print(index)", "t = int(input())\nfor _ in range(t):\n    (n, p, k) = list(map(int, input().split()))\n    if n % k == 0:\n        rows = k\n        cols = n // k\n        p_row = p % k + 1\n        p_col = p // k + 1\n        index = (p_row - 1) * cols + p_col\n    else:\n        rows = k\n        cols = n // k\n        p_row = p % k + 1\n        p_col = p // k + 1\n        boundary = rows * cols - 1\n        extras = n - boundary - 1\n        if p_row <= extras:\n            index = (p_row - 1) * (cols + 1) + p_col\n        else:\n            index = extras * (cols + 1) + (p_row - extras - 1) * cols + p_col\n    print(index)", "t = int(input())\nfor _ in range(t):\n    (n, p, k) = map(int, input().split())\n    m = p % k\n    ex = n % k\n    reps = n // k\n    days = m * reps + min(m, ex) + (p + k - m) // k\n    print(days)", "for i in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    m = n // k\n    rem = n % k\n    p1 = p % k\n    p = p // k\n    if p1 >= rem:\n        print(m * p1 + rem + p + 1)\n    elif p1 == 0:\n        print(p + 1)\n    else:\n        print(m * p1 + p1 + p + 1)", "z = int(input())\nfor j in range(z):\n    (n, p, k) = list(map(int, input().split()))\n    jy = p % k\n    n = n - 1\n    cb = n // k * jy\n    ans = cb + p // k + min(n % k, max(p % k - 1, 0)) + 1\n    if p % k != 0:\n        ans += 1\n    print(ans)", "try:\n    for i in range(int(input())):\n        (x, y, z) = input().split(' ')\n        x = int(x)\n        y = int(y)\n        z = int(z)\n        ans = 0\n        a = y % z - 1\n        b = (x - 1) // z * z\n        b = x - 1 - b\n        if a > b:\n            ans += (b + 1) * ((x - 1) // z + 1) + (a - b) * ((x - 1) // z)\n        else:\n            ans += ((x - 1) // z + 1) * (a + 1)\n        for i in range(a + 1, x, z):\n            ans += 1\n            if i == y:\n                print(ans)\n                break\nexcept:\n    pass", "for _ in range(int(input())):\n    (N, P, K) = map(int, input().split())\n    print(N // K * (P % K) + P // K + 1 + min(N % K, P % K))", "T = int(input())\nfor _ in range(T):\n    (n, p, k) = map(int, input().split())\n    ans = 0\n    a = p % k - 1\n    b = (n - 1) // k * k\n    b = n - 1 - b\n    if a > b:\n        ans += (b + 1) * ((n - 1) // k + 1) + (a - b) * ((n - 1) // k)\n    else:\n        ans += ((n - 1) // k + 1) * (a + 1)\n    for i in range(a + 1, n, k):\n        ans += 1\n        if i == p:\n            print(ans)\n            break", "t = int(input())\nfor r in range(t):\n    (n, p, k) = [int(x) for x in input().split()]\n    r = n // k * (p % k) + p // k + 1 + min(n % k, p % k)\n    print(r)", "t = int(input())\nfor _ in range(t):\n    (n, p, k) = list(map(int, input().split()))\n    m = p % k\n    n -= 1\n    res = 0\n    res += (n // k + 1) * m\n    res += p // k + 1\n    if m > n % k:\n        res -= m - (n % k + 1)\n    print(res)", "testcases = int(input())\nfor eachcase in range(testcases):\n    (indices, gas, integer) = map(int, input().split())\n    nums = (indices - 1) // integer\n    morenum = (indices - 1) % integer\n    howmuch = nums + 1\n    modofsol = gas % integer\n    indexinthatmod = gas // integer + 1\n    if modofsol <= morenum:\n        print(modofsol * howmuch + indexinthatmod)\n    else:\n        print((morenum + 1) * howmuch + (modofsol - morenum - 1) * nums + indexinthatmod)", "t = int(input())\nfor _ in range(t):\n    (n, p, k) = map(int, input().split())\n    ans = 0\n    pmod = p % k\n    nmod = n % k\n    pdiv = p // k\n    ndiv = n // k\n    perfMod = ndiv + 1 if nmod != 0 else ndiv\n    norm = nmod if nmod != 0 else k\n    if pmod < norm:\n        ans = (ndiv + 1 - (nmod == 0)) * pmod + (pdiv + 1)\n    else:\n        ans = (ndiv + 1 - (nmod == 0)) * norm + (pdiv + 1) + (pmod - norm) * ndiv\n    print(ans)", "a = int(input())\nfor i in range(a):\n    (N, p, K) = map(int, input().split())\n    b = (N - 1) // K + 1\n    c = (N - 1) % K\n    d = p // K\n    e = p % K\n    if e <= c:\n        print(e * b + d + 1)\n    else:\n        print((c + 1) * b + (e - c - 1) * (b - 1) + d + 1)", "T = int(input())\nfor _ in range(T):\n    (n, p, k) = map(int, input().split())\n    ans = 0\n    a = p % k - 1\n    b = (n - 1) // k * k\n    b = n - 1 - b\n    if a > b:\n        ans += (b + 1) * ((n - 1) // k + 1) + (a - b) * ((n - 1) // k)\n    else:\n        ans += ((n - 1) // k + 1) * (a + 1)\n    for i in range(a + 1, n, k):\n        ans += 1\n        if i == p:\n            print(ans)\n            break", "t = int(input())\nfor _ in range(t):\n    (n, p, k) = map(int, input().split())\n    num = (n - 1) // k\n    rem = n % k\n    q = p // k + 1\n    d = p % k\n    if rem == 0:\n        ans = d * (num + 1) + q\n    elif rem > d:\n        ans = d * (num + 1) + q\n    else:\n        ans = rem * (num + 1) + (d - rem) * num + q\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, p, k) = map(int, input().split())\n    num = (n - 1) // k\n    rem = n % k\n    q = p // k + 1\n    d = p % k\n    if rem == 0:\n        ans = d * (num + 1) + q\n    elif rem > d:\n        ans = d * (num + 1) + q\n    else:\n        ans = rem * (num + 1) + (d - rem) * num + q\n    print(ans)", "def solve(n, p, k):\n    n -= 1\n    if p % k <= n % k:\n        return p // k + 1 + p % k * (n // k + 1)\n    else:\n        return p // k + 1 + (n % k + 1) * (n // k + 1) + (p % k - (n % k + 1)) * (n // k)\nfor _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    print(solve(n, p, k))", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    n -= 1\n    if p % k <= n % k:\n        print(p // k + 1 + p % k * (n // k + 1))\n    else:\n        print(p // k + 1 + (n % k + 1) * (n // k + 1) + (p % k - (n % k + 1)) * (n // k))", "def main():\n    for _ in range(int(input())):\n        (n, p, k) = map(int, input().split())\n        n -= 1\n        if p % k <= n % k:\n            print(p // k + 1 + p % k * (n // k + 1))\n        else:\n            print(p // k + 1 + (n % k + 1) * (n // k + 1) + (p % k - (n % k + 1)) * (n // k))\nmain()", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    mod = p % k\n    a = n // k\n    b = n % k\n    days = a * mod + min(b, mod)\n    days += p // k + 1\n    print(days)", "t = int(input())\nfor i in range(t):\n    (n, p, k) = map(int, input().split())\n    n = n - 1\n    ans = p % k * (n // k) + (p // k + 1) + min(p % k, n % k + 1)\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, p, k) = map(int, input().split())\n    if (n - 1) % k == 0:\n        a = (n - 1) // k + 1\n    else:\n        a = math.ceil((n - 1) / k)\n    b = p % k\n    if b <= (n - 1) % k:\n        if b == 0:\n            print(p // k + 1)\n        else:\n            print(a * b + math.ceil(p / k))\n    else:\n        c = b - (n - 1) % k\n        print(a * ((n - 1) % k + 1) + (a - 1) * (c - 1) + math.ceil(p / k))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, p, k) = map(int, input().split())\n    Nmod = n % k\n    Pmod = p % k\n    wrongMod = Pmod * (n // k) + 1\n    if Nmod != 0:\n        if Pmod != 0:\n            wrongMod += min(Nmod, Pmod)\n    days = wrongMod + (p - Pmod) // k\n    print(days)", "t = int(input())\nwhile t > 0:\n    (n, p, k) = map(int, input().split())\n    Nmod = n % k\n    Pmod = p % k\n    wrongMod = Pmod * (n // k) + 1\n    if Nmod != 0:\n        if Pmod != 0:\n            wrongMod += min(Nmod, Pmod)\n    days = wrongMod + (p - Pmod) // k\n    print(days)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, p, k) = map(int, input().split())\n    Nmod = n % k\n    Pmod = p % k\n    wrongMod = Pmod * (n // k) + 1\n    if Nmod != 0:\n        if Pmod != 0:\n            wrongMod += min(Nmod, Pmod)\n    days = wrongMod + (p - Pmod) // k\n    print(days)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, p, k) = map(int, input().split())\n    print(n // k * (p % k) + p // k + 1 + min(n % k, p % k))", "import sys\nfor x in range(int(input())):\n    (n, p, k) = map(int, sys.stdin.readline().split())\n    print(n // k * (p % k) + p // k + 1 + min(n % k, p % k))", "for x in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    print(n // k * (p % k) + p // k + 1 + min(n % k, p % k))", "def bulb(n, p, k):\n    return p % k * (n // k) + min(p % k, n % k) + p // k + 1\nfor _ in range(int(input())):\n    (n, p, k) = [int(x) for x in input().split()]\n    result = bulb(n, p, k)\n    print(result)", "for tc in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    a = p % k - 1\n    ans = 0\n    b = (n - 1) // k * k\n    b = n - 1 - b\n    if a > b:\n        ans += (b + 1) * ((n - 1) // k + 1) + (a - b) * ((n - 1) // k)\n    else:\n        ans += ((n - 1) // k + 1) * (a + 1)\n    for i in range(a + 1, n, k):\n        ans += 1\n        if i == p:\n            print(ans)\n            break", "for tc in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    a = p % k - 1\n    ans = 0\n    b = (n - 1) // k * k\n    b = n - 1 - b\n    if a > b:\n        ans += (b + 1) * ((n - 1) // k + 1) + (a - b) * ((n - 1) // k)\n    else:\n        ans += ((n - 1) // k + 1) * (a + 1)\n    for i in range(a + 1, n, k):\n        ans += 1\n        if i == p:\n            print(ans)\n            break", "def main():\n    for i in range(int(input())):\n        (n, p, k) = input().split(' ')\n        n = int(n)\n        p = int(p)\n        k = int(k)\n        ans = 0\n        a = p % k - 1\n        b = (n - 1) // k * k\n        b = n - 1 - b\n        if a > b:\n            ans += (b + 1) * ((n - 1) // k + 1) + (a - b) * ((n - 1) // k)\n        else:\n            ans += ((n - 1) // k + 1) * (a + 1)\n        for i in range(a + 1, n, k):\n            ans += 1\n            if i == p:\n                print(ans)\n                break\nmain()", "def main():\n    for i in range(int(input())):\n        (n, p, k) = input().split(' ')\n        n = int(n)\n        p = int(p)\n        k = int(k)\n        ans = 0\n        a = p % k - 1\n        b = (n - 1) // k * k\n        b = n - 1 - b\n        if a > b:\n            ans += (b + 1) * ((n - 1) // k + 1) + (a - b) * ((n - 1) // k)\n        else:\n            ans += ((n - 1) // k + 1) * (a + 1)\n        for i in range(a + 1, n, k):\n            ans += 1\n            if i == p:\n                print(ans)\n                break\nmain()", "for _ in range(int(input())):\n    (N, p, K) = map(int, input().split())\n    print(N // K * (p % K) + p // K + 1 + min(N % K, p % K))", "def inparr():\n    tmparr = [int(i) for i in input().split()]\n    return tmparr\nfor _ in range(int(input())):\n    (N, p, K) = inparr()\n    res = N // K * (p % K) + p // K + 1 + min(N % K, p % K)\n    print(res)", "a = int(input())\nfor i in range(a):\n    (N, p, K) = map(int, input().split())\n    b = (N - 1) // K + 1\n    c = (N - 1) % K\n    d = p // K\n    e = p % K\n    if e <= c:\n        print(e * b + d + 1)\n    else:\n        print((c + 1) * b + (e - c - 1) * (b - 1) + d + 1)", "a = int(input())\nfor i in range(a):\n    (N, p, K) = map(int, input().split())\n    b = (N - 1) // K + 1\n    c = (N - 1) % K\n    d = p // K\n    e = p % K\n    if e <= c:\n        print(e * b + d + 1)\n    else:\n        print((c + 1) * b + (e - c - 1) * (b - 1) + d + 1)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    print(n // k * (p % k) + p // k + 1 + min(n % k, p % k))", "import math\nt = int(input())\nfor i in range(t):\n    [N, p, K] = [int(i) for i in input().split()]\n    info1 = p % K\n    info2 = math.floor((N - 1) / K) + 1\n    if info1 == 0:\n        print(int((p - info1) // K) + 1)\n    else:\n        ans = info1 * info2\n        ans += int((p - info1) // K) + 1\n        info3 = (N - 1) % K\n        if info1 >= info3 + 2:\n            ans -= info1 - info3 - 1\n        print(ans)", "for i in range(int(input())):\n    (x, y, z) = input().split(' ')\n    x = int(x)\n    y = int(y)\n    z = int(z)\n    ans = 0\n    a = y % z - 1\n    b = (x - 1) // z * z\n    b = x - 1 - b\n    if a > b:\n        ans += (b + 1) * ((x - 1) // z + 1) + (a - b) * ((x - 1) // z)\n    else:\n        ans += ((x - 1) // z + 1) * (a + 1)\n    for i in range(a + 1, x, z):\n        ans += 1\n        if i == y:\n            print(ans)\n            break", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    c = n % k\n    d = p % k\n    e = n // k\n    f = -(-n // k)\n    print(f * min(c, d) + e * max(0, d - c) + p // k + 1)", "n = int(input())\nfor t in range(n):\n    (N, p, K) = map(int, input().split())\n    q = (N - 1) // K + 1\n    if p % K <= (N - 1) % K:\n        r = q * (p % K)\n        r += p // K + 1\n    else:\n        r = q * ((N - 1) % K + 1)\n        r += (q - 1) * (p % K - (N - 1) % K - 1)\n        r += p // K + 1\n    print(r)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    a = n - 1\n    if p % k <= a % k:\n        day = p % k * (1 + a // k)\n    else:\n        day = (a % k + 1) * (1 + a // k) + (p % k - a % k - 1) * (a // k)\n    day += 1 + (p - p % k + 1) // k\n    if k == 1:\n        day = p + 1\n    print(day)", "T = int(input())\nfor t in range(T):\n    (N, p, K) = map(int, input().split())\n    q = (N - 1) // K + 1\n    if p % K <= (N - 1) % K:\n        r = q * (p % K)\n        r += p // K + 1\n    else:\n        r = q * ((N - 1) % K + 1)\n        r += (q - 1) * (p % K - (N - 1) % K - 1)\n        r += p // K + 1\n    print(r)", "T = int(input())\nfor t in range(T):\n    (N, p, K) = map(int, input().split())\n    q = (N - 1) // K + 1\n    if p % K <= (N - 1) % K:\n        r = q * (p % K)\n        r += p // K + 1\n    else:\n        r = q * ((N - 1) % K + 1)\n        r += (q - 1) * (p % K - (N - 1) % K - 1)\n        r += p // K + 1\n    print(r)", "T = int(input())\nfor t in range(T):\n    (N, p, K) = map(int, input().split())\n    q = (N - 1) // K + 1\n    if p % K <= (N - 1) % K:\n        r = q * (p % K)\n        r += p // K + 1\n    else:\n        r = q * ((N - 1) % K + 1)\n        r += (q - 1) * (p % K - (N - 1) % K - 1)\n        r += p // K + 1\n    print(r)", "t = int(input())\nfor tt in range(t):\n    (n, p, k) = map(int, input().split())\n    repeat_found = p % k + 1\n    to_add = p // k + 1\n    mult = n // k + 1\n    max_mult = n % k + 1\n    result = 0\n    if repeat_found <= max_mult:\n        result = mult * (repeat_found - 1) + to_add\n    else:\n        result = mult * max_mult + ((mult - 1) * (repeat_found - max_mult - 1) + (to_add - 1))\n    print(result)", "t = int(input())\nfor tt in range(t):\n    (n, p, k) = map(int, input().split())\n    repeat_found = p % k + 1\n    to_add = p // k + 1\n    mult = n // k + 1\n    max_mult = n % k + 1\n    result = 0\n    if repeat_found <= max_mult:\n        result = mult * (repeat_found - 1) + to_add\n    else:\n        result = mult * max_mult + ((mult - 1) * (repeat_found - max_mult - 1) + (to_add - 1))\n    print(result)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    b = p % k\n    (b1, s2, s1) = (n % k, n // k, -(-n // k))\n    print(s1 * min(b1, b) + s2 * max(0, b - b1) + p // k + 1)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    b = p % k\n    (b1, s2, s1) = (n % k, n // k, -(-n // k))\n    print(s1 * min(b1, b) + s2 * max(0, b - b1) + p // k + 1)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    b = p % k\n    (b1, s2, s1) = (n % k, n // k, -(-n // k))\n    print(s1 * min(b1, b) + s2 * max(0, b - b1) + p // k + 1)", "for _ in range(int(input())):\n    (n, p, k) = map(int, input().split())\n    b = p % k\n    (b1, s2, s1) = (n % k, n // k, -(-n // k))\n    print(s1 * min(b1, b) + s2 * max(0, b - b1) + p // k + 1)", "for tastcas in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    n -= 1\n    q = p % k - 1\n    o = n // k\n    m = n - o * k\n    if q > m:\n        ans = (m + 1) * (o + 1) + (q - m) * o\n    else:\n        ans = (o + 1) * (q + 1)\n    for i in range(q + 1, n + 1, k):\n        ans += 1\n        if i == p:\n            break\n    print(ans)", "for tastcas in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    n -= 1\n    q = p % k - 1\n    o = n // k\n    m = n - o * k\n    if q > m:\n        ans = (m + 1) * (o + 1) + (q - m) * o\n    else:\n        ans = (o + 1) * (q + 1)\n    for i in range(q + 1, n + 1, k):\n        ans += 1\n        if i == p:\n            break\n    print(ans)", "try:\n    for i in range(int(input())):\n        (x, y, z) = input().split(' ')\n        x = int(x)\n        y = int(y)\n        z = int(z)\n        ans = 0\n        a = y % z - 1\n        b = (x - 1) // z * z\n        b = x - 1 - b\n        if a > b:\n            ans += (b + 1) * ((x - 1) // z + 1) + (a - b) * ((x - 1) // z)\n        else:\n            ans += ((x - 1) // z + 1) * (a + 1)\n        for i in range(a + 1, x, z):\n            ans += 1\n            if i == y:\n                print(ans)\n                break\nexcept:\n    pass", "for tastcas in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    n -= 1\n    q = p % k - 1\n    o = n // k\n    m = n - o * k\n    if q > m:\n        ans = (m + 1) * (o + 1) + (q - m) * o\n    else:\n        ans = (o + 1) * (q + 1)\n    for i in range(q + 1, n + 1, k):\n        ans += 1\n        if i == p:\n            break\n    print(ans)", "for tastcas in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    n -= 1\n    q = p % k - 1\n    o = n // k\n    m = n - o * k\n    if q > m:\n        ans = (m + 1) * (o + 1) + (q - m) * o\n    else:\n        ans = (o + 1) * (q + 1)\n    for i in range(q + 1, n + 1, k):\n        ans += 1\n        if i == p:\n            break\n    print(ans)", "for tastcas in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    n -= 1\n    q = p % k - 1\n    o = n // k\n    m = n - o * k\n    if q > m:\n        ans = (m + 1) * (o + 1) + (q - m) * o\n    else:\n        ans = (o + 1) * (q + 1)\n    for i in range(q + 1, n + 1, k):\n        ans += 1\n        if i == p:\n            break\n    print(ans)", "for tastcas in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    n -= 1\n    q = p % k - 1\n    o = n // k\n    m = n - o * k\n    if q > m:\n        ans = (m + 1) * (o + 1) + (q - m) * o\n    else:\n        ans = (o + 1) * (q + 1)\n    for i in range(q + 1, n + 1, k):\n        ans += 1\n        if i == p:\n            break\n    print(ans)", "for tastcas in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    n -= 1\n    q = p % k - 1\n    o = n // k\n    m = n - o * k\n    if q > m:\n        ans = (m + 1) * (o + 1) + (q - m) * o\n    else:\n        ans = (o + 1) * (q + 1)\n    for i in range(q + 1, n + 1, k):\n        ans += 1\n        if i == p:\n            break\n    print(ans)", "for tastcas in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    n -= 1\n    q = p % k - 1\n    o = n // k\n    m = n - o * k\n    if q > m:\n        ans = (m + 1) * (o + 1) + (q - m) * o\n    else:\n        ans = (o + 1) * (q + 1)\n    for i in range(q + 1, n + 1, k):\n        ans += 1\n        if i == p:\n            break\n    print(ans)", "for tastcas in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    n -= 1\n    q = p % k - 1\n    o = n // k\n    m = n - o * k\n    if q > m:\n        ans = (m + 1) * (o + 1) + (q - m) * o\n    else:\n        ans = (o + 1) * (q + 1)\n    for i in range(q + 1, n + 1, k):\n        ans += 1\n        if i == p:\n            break\n    print(ans)", "for tastcas in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    n -= 1\n    q = p % k - 1\n    o = n // k\n    m = n - o * k\n    if q > m:\n        ans = (m + 1) * (o + 1) + (q - m) * o\n    else:\n        ans = (o + 1) * (q + 1)\n    for i in range(q + 1, n + 1, k):\n        ans += 1\n        if i == p:\n            break\n    print(ans)", "for tastcas in range(int(input())):\n    (n, p, k) = list(map(int, input().split()))\n    n -= 1\n    q = p % k - 1\n    o = n // k\n    m = n - o * k\n    if q > m:\n        ans = (m + 1) * (o + 1) + (q - m) * o\n    else:\n        ans = (o + 1) * (q + 1)\n    for i in range(q + 1, n + 1, k):\n        ans += 1\n        if i == p:\n            break\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (n, p, k) = map(int, input().split())\n    ans = 0\n    a = p % k - 1\n    b = (n - 1) // k * k\n    b = n - 1 - b\n    if a > b:\n        ans += (b + 1) * ((n - 1) // k + 1) + (a - b) * ((n - 1) // k)\n    else:\n        ans += ((n - 1) // k + 1) * (a + 1)\n    for i in range(a + 1, n, k):\n        ans += 1\n        if i == p:\n            print(ans)\n            break"]