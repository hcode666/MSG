["t = int(input())\nfor ni in range(t):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    b = list(map(int, input().split()))\n    max_profit = 0\n    for i in range(n):\n        n_stones = k // a[i]\n        max_profit = max(max_profit, n_stones * b[i])\n    print(max_profit)", "for k in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        if int(k / a[i]) * b[i] > c:\n            c = int(k / a[i]) * b[i]\n    print(c)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    for x in range(len(c)):\n        c[x] = k // c[x]\n    for m in range(len(p)):\n        p[m] = p[m] * c[m]\n    print(max(p))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    c = []\n    for i in range(n):\n        c.append(k // a[i] * b[i])\n    print(max(c))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    s = 0\n    for i in range(len(A)):\n        s1 = k // A[i] * B[i]\n        if s1 > s:\n            s = s1\n    print(s)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    l = []\n    for i in range(len(A)):\n        s1 = k // A[i] * B[i]\n        l.append(s1)\n    print(max(l))", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    time = list(map(int, input().split()))\n    value = list(map(int, input().split()))\n    profit = -1\n    for (t, v) in zip(time, value):\n        profit = max(v * (K // t), profit)\n    print(profit)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    minute = list(map(int, input().split()))\n    cost = list(map(int, input().split()))\n    j = []\n    for i in range(n):\n        z = k // minute[i] * cost[i]\n        j.append(z)\n    print(max(j))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans = max(ans, k // a[i] * b[i])\n    print(ans)", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (stones, profit, maxprofit) = (0, 0, 0)\n    for i in range(n):\n        stones = k // a[i]\n        profit = b[i] * stones\n        if profit > maxprofit:\n            maxprofit = profit\n    print(maxprofit)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    m = 0\n    for i in range(n):\n        t = k // a[i]\n        p = b[i] * t\n        if p > m:\n            m = p\n    print(m)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    m = 0\n    for i in range(n):\n        t = k // a[i]\n        p = b[i] * t\n        if p > m:\n            m = p\n    print(m)", "testcase = int(input())\nfor i in range(testcase):\n    (n, k) = map(int, input().split())\n    lstA = list(map(int, input().split()))\n    lstB = list(map(int, input().split()))\n    lstAB = [lstB[j] * (k // lstA[j]) for j in range(n)]\n    print(max(lstAB))", "a = int(input(''))\nfor i in range(a):\n    (N, K) = [int(x) for x in input('').split()]\n    l = []\n    T1 = [int(x) for x in input('').split()]\n    T2 = [int(x) for x in input('').split()]\n    k1 = list(T1)\n    k2 = list(T2)\n    for j in range(N):\n        f = K // k1[j] * k2[j]\n        l.append(f)\n    print(max(l))", "a = int(input(''))\nfor i in range(a):\n    (N, K) = [int(x) for x in input('').split()]\n    l = []\n    T1 = [int(x) for x in input('').split()]\n    T2 = [int(x) for x in input('').split()]\n    k1 = list(T1)\n    k2 = list(T2)\n    for j in range(N):\n        f = K // k1[j] * k2[j]\n        l.append(f)\n    print(max(l))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = 0\n    for i in range(len(b)):\n        s = max(s, b[i] * (k // a[i]))\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append(k // a[i] * b[i])\n    print(max(c))", "t = int(input())\nwhile t != 0:\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    m = 0\n    for j in range(n):\n        pr = k // a[j] * p[j]\n        if pr > m:\n            m = pr\n    print(m)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    l = [int(i) for i in input().split()]\n    c = 0\n    for i in range(n):\n        if int(k / a[i]) * l[i] > c:\n            c = int(k / a[i]) * l[i]\n    print(c)", "t = int(input())\nfor k in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        if int(k / a[i]) * b[i] > c:\n            c = int(k / a[i]) * b[i]\n    print(c)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l3 = []\n    ma = 0\n    for x in l1:\n        l3.append(int(k / x))\n    for (x, y) in zip(l3, l2):\n        m = x * y\n        if m > ma:\n            ma = m\n    print(ma)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    tim = list(map(int, input().split()))\n    prof = list(map(int, input().split()))\n    ans = 0\n    for (i, j) in zip(tim, prof):\n        ans = max(ans, k // i * j)\n    print(ans)", "bc = int(input())\nfor i in range(bc):\n    (n, k) = map(int, input().split())\n    time = [int(i) for i in input().split()]\n    profit = [int(j) for j in input().split()]\n    ans = 0\n    for (i, j) in zip(time, profit):\n        ans = max(ans, k // i * j)\n    print(ans)", "bc = int(input())\nfor i in range(bc):\n    (n, k) = map(int, input().split())\n    time = [int(i) for i in input().split()]\n    profit = [int(j) for j in input().split()]\n    l = []\n    m = []\n    for i in time:\n        l.append(k // i)\n    for i in range(n):\n        m.append(l[i] * profit[i])\n    print(max(m))", "t = int(input(''))\nif t <= 5:\n    for _ in range(t):\n        flag = 0\n        (n, k) = map(int, input().split())\n        a = input().split()\n        b = input().split()\n        c = []\n        if 1 <= n <= 10 ** 5 and 1 <= k <= 10 ** 9 and (len(a) == n) and (len(b) == n):\n            for i in range(n):\n                a[i] = int(a[i])\n                b[i] = int(b[i])\n                if 1 <= a[i] <= 10 ** 9 and 1 <= b[i] <= 10 ** 9:\n                    c.append(k // a[i] * b[i])\n                else:\n                    flag = 1\n            if flag == 0:\n                print(max(c))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    l = []\n    m = []\n    for i in a:\n        l.append(int(math.floor(k / i)))\n    for j in range(n):\n        m.append(l[j] * b[j])\n    print(max(m))", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    profitMax = 0\n    for i in range(N):\n        pick = K // A[i]\n        if pick * B[i] > profitMax:\n            profitMax = pick * B[i]\n    print(profitMax)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    profitMax = 0\n    for i in range(N):\n        pick = K // A[i]\n        if pick * B[i] > profitMax:\n            profitMax = pick * B[i]\n    print(profitMax)", "def solve(n, k, a, b):\n    ans = 0\n    for (i, j) in zip(a, b):\n        ans = max(ans, k // i * j)\n    print(ans)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    solve(n, k, a, b)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    maxi = 0\n    for i in range(n):\n        d = k // a[i]\n        val = d * b[i]\n        maxi = max(val, maxi)\n    print(maxi)", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    x = []\n    for i in range(n):\n        x.append(k // l[i] * s[i])\n    print(max(x))", "casos = int(input())\nfor i in range(casos):\n    (tipo_piedras, minutos_totales) = map(int, input().split())\n    minutos_piedras = list(map(int, input().split()))\n    valor_piedras = list(map(int, input().split()))\n    ganancia = []\n    for i in range(tipo_piedras):\n        ganancia.append(valor_piedras[i] * (minutos_totales // minutos_piedras[i]))\n    print(max(ganancia))", "casos = int(input())\nfor i in range(casos):\n    (tipo_piedras, minutos_totales) = map(int, input().split())\n    minutos_piedras = list(map(int, input().split()))\n    valor_piedras = list(map(int, input().split()))\n    ganancia = []\n    for i in range(tipo_piedras):\n        ganancia.append(valor_piedras[i] * (minutos_totales // minutos_piedras[i]))\n    print(max(ganancia))", "casos = int(input())\nfor i in range(casos):\n    (tipo_piedras, minutos_totales) = map(int, input().split())\n    minutos_piedras = list(map(int, input().split()))\n    valor_piedras = list(map(int, input().split()))\n    ganancia = []\n    for i in range(tipo_piedras):\n        ganancia.append(valor_piedras[i] * (minutos_totales // minutos_piedras[i]))\n    print(max(ganancia))", "casos = int(input())\nfor i in range(casos):\n    (tipo_piedras, minutos_totales) = map(int, input().split())\n    minutos_piedras = list(map(int, input().split()))\n    valor_piedras = list(map(int, input().split()))\n    ganancia = []\n    for i in range(tipo_piedras):\n        ganancia.append(valor_piedras[i] * (minutos_totales // minutos_piedras[i]))\n    print(max(ganancia))", "casos = int(input())\nfor i in range(casos):\n    (tipo_piedras, minutos_totales) = map(int, input().split())\n    minutos_piedras = list(map(int, input().split()))\n    valor_piedras = list(map(int, input().split()))\n    piedras_posibles = []\n    ganancia = []\n    for i in minutos_piedras:\n        piedras_posibles.append(minutos_totales // i)\n    for i in range(tipo_piedras):\n        ganancia.append(valor_piedras[i] * piedras_posibles[i])\n    print(max(ganancia))", "for _ in range(int(input())):\n    K = int(input().split()[1])\n    print(max([K // int(a) * int(b) for (a, b) in zip(input().split(), input().split())]))", "for _ in range(int(input())):\n    K = int(input().split()[1])\n    print(max([K // int(a) * int(b) for (a, b) in zip(input().split(), input().split())]))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l1 = list(map(int, input().split()))\n    l2 = []\n    for i in range(n):\n        m = k // l[i]\n        m1 = m * l1[i]\n        l2.append(m1)\n    print(max(l2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    res = []\n    for i in range(n):\n        x = k // a[i]\n        y = x * b[i]\n        res.append(y)\n    print(max(res))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        i = k // a[i] * b[i]\n        l.append(i)\n    print(max(l))", "for i in range(int(input())):\n    (n, t) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.insert(i, t // a[i])\n    d = []\n    for i in range(n):\n        d.insert(i, c[i] * b[i])\n    max = d[0]\n    for i in range(n):\n        if max < d[i]:\n            max = d[i]\n    print(max)", "f1 = int(input())\nfor i in range(f1):\n    (f2, f3) = map(int, input().split())\n    f4 = list(map(int, input().split()))\n    f5 = list(map(int, input().split()))\n    amt = 0\n    for j in range(f2):\n        max_amt = f3 // f4[j] * f5[j]\n        if max_amt > amt:\n            amt = max_amt\n    print(amt)", "T = int(input())\nwhile T > 0:\n    (N, K) = map(int, input().split(' '))\n    A = list(map(int, input().strip().split()))[:N]\n    B = list(map(int, input().strip().split()))[:N]\n    L = []\n    for i in range(N):\n        L.append(K // A[i] * B[i])\n    L = sorted(L)\n    print(L[N - 1])\n    T -= 1", "T = int(input())\nwhile T > 0:\n    (N, K) = map(int, input().split(' '))\n    A = list(map(int, input().strip().split()))[:N]\n    B = list(map(int, input().strip().split()))[:N]\n    L = []\n    for i in range(N):\n        L.append(K // A[i] * B[i])\n    L = sorted(L)\n    print(L[N - 1])\n    T -= 1", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    p = 0\n    for i in range(n):\n        if k // a[i] * b[i] > p:\n            p = k // a[i] * b[i]\n    print(p)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    max_amt = 0\n    for i in range(0, n):\n        if arr1[i] <= k:\n            stones = k // arr1[i]\n            amt = arr2[i] * stones\n            if max_amt < amt:\n                max_amt = amt\n    print(max_amt)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))[:n]\n    b = list(map(int, input().split()))[:n]\n    l1 = 0\n    for i in range(n):\n        l1 = max(k // a[i] * b[i], l1)\n    print(l1)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    p = 0\n    for i in range(n):\n        if k // a[i] * b[i] > p:\n            p = k // a[i] * b[i]\n    print(p)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    profit = 0\n    for i in range(n):\n        if k // a[i] * b[i] > profit:\n            profit = k // a[i] * b[i]\n    print(profit)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    profit = []\n    for i in range(n):\n        profit.append(k // a[i] * b[i])\n    print(max(profit))", "for T in range(int(input())):\n    l = list(map(lambda x: int(x), input().split()))\n    (N, K) = (l[0], l[1])\n    A = list(map(lambda x: int(x), input().split()))\n    B = list(map(lambda x: int(x), input().split()))\n    prof = 0\n    for i in range(N):\n        if K // A[i] * B[i] > prof:\n            prof = K // A[i] * B[i]\n    print(prof)", "for T in range(int(input())):\n    l = list(map(lambda x: int(x), input().split()))\n    (N, K) = (l[0], l[1])\n    A = list(map(lambda x: int(x), input().split()))\n    B = list(map(lambda x: int(x), input().split()))\n    prof = 0\n    for i in range(N):\n        if K // A[i] * B[i] > prof:\n            prof = K // A[i] * B[i]\n    print(prof)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for j in range(n):\n        l.append(k // a[j] * b[j])\n    print(max(l))", "t = input()\nfor c in range(0, int(t)):\n    (n, k) = input().split()\n    a = input().split()\n    b = input().split()\n    arr = []\n    brr = []\n    for x in a:\n        arr.append(int(x))\n    for y in b:\n        brr.append(int(y))\n    profits = []\n    for z in range(0, int(n)):\n        profits.append(int(k) // arr[z] * brr[z])\n    print(max(profits))", "tests = int(input())\nfor i in range(tests):\n    (n, k) = map(int, input().split())\n    time_arr = list(map(int, input().split()))\n    profit_arr = list(map(int, input().split()))\n    ans = 0\n    for x in range(n):\n        ans = max(ans, k // time_arr[x] * profit_arr[x])\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))[:n]\n    b = list(map(int, input().split()))[:n]\n    l = []\n    for i in range(n):\n        x = k // a[i]\n        l.append(x * b[i])\n    print(max(l))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    t = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append(k // t[i] * p[i])\n    print(max(l))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    time = list(map(int, input().split()))\n    pric = list(map(int, input().split()))\n    profit = []\n    for i in range(n):\n        a = k // time[i]\n        profit.append(a * pric[i])\n    print(max(profit))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    m = 0\n    for i in range(n):\n        c = k // a[i]\n        m = max(c * b[i], m)\n    print(m)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    dic = {a[i]: b[i] for i in range(n)}\n    max = 0\n    for (key, values) in dic.items():\n        m = k // key * values\n        if m > max:\n            max = m\n    print(max)", "T = int(input())\nfor i in range(T):\n    (a, k) = map(int, input().split())\n    stones = list(map(int, input().split()))\n    profit = list(map(int, input().split()))\n    ip = []\n    for z in tuple(zip(stones, profit)):\n        ip.append(k // z[0] * z[1])\n    print(max(ip))", "T = int(input())\nfor i in range(T):\n    (a, k) = map(int, input().split())\n    stones = list(map(int, input().split()))\n    profit = list(map(int, input().split()))\n    ip = []\n    for z in tuple(zip(stones, profit)):\n        ip.append(k // z[0] * z[1])\n    print(max(ip))", "T = int(input())\nfor i in range(T):\n    (a, k) = map(int, input().split())\n    stones = list(map(int, input().split()))\n    profit = list(map(int, input().split()))\n    ip = []\n    for z in tuple(zip(stones, profit)):\n        ip.append(k // z[0] * z[1])\n    print(max(ip))", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    mx = 0\n    for i in range(n):\n        m = k // a[i] * b[i]\n        mx = max(m, mx)\n    print(mx)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append(k // a[i] * b[i])\n    print(max(l))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append(k // a[i] * b[i])\n    print(max(l))", "for M in range(int(input())):\n    (x, y) = map(int, input().split())\n    a1 = list(map(int, input().split()))\n    a2 = list(map(int, input().split()))\n    l = []\n    for i in range(x):\n        l.append(y // a1[i] * a2[i])\n    print(max(l))", "test = int(input())\nfor _ in range(test):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    maximum = 0\n    j = 0\n    for i in range(len(b)):\n        times = a[1] // b[i]\n        profit = times * c[j]\n        j = j + 1\n        if profit > maximum:\n            maximum = profit\n    print(maximum)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    d = []\n    for i in range(len(A)):\n        d.append(k // A[i] * B[i])\n    print(max(d))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    m = -1111111\n    for i in range(n):\n        x = k // a[i]\n        y = b[i] * x\n        m = max(m, y)\n    print(m)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    m = -1111111\n    for i in range(n):\n        x = k // a[i]\n        y = b[i] * x\n        m = max(m, y)\n    print(m)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append(m // a[i] * b[i])\n    print(max(c))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append(m // a[i] * b[i])\n    print(max(c))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for j in range(n):\n        l.append(k // a[j] * b[j])\n    print(max(l))", "t = int(input())\nfor i in range(t):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    profit = []\n    for i in range(N):\n        q = K // A[i]\n        profit.append(q * B[i])\n    print(max(profit))", "t = int(input())\nfor _ in range(t):\n    (N, K) = map(int, input().split())\n    arr_A = list(map(int, input().split()))\n    arr_B = list(map(int, input().split()))\n    maxprofit = 0\n    i = 0\n    temp = 0\n    while i < N:\n        temp = K // arr_A[i]\n        maxprofit = max(maxprofit, temp * arr_B[i])\n        i = i + 1\n    print(maxprofit)", "for i in range(int(input())):\n    (N, K) = [int(ii) for ii in input().split()]\n    T = [int(x) for x in input().split()]\n    P = [int(y) for y in input().split()]\n    MP = 0\n    for ii in range(N):\n        MP = max(MP, K // T[ii] * P[ii])\n    print(MP)", "for t in range(int(input())):\n    (N, K) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    max_profit = 0\n    for i in range(N):\n        max_profit = max(max_profit, K // A[i] * B[i])\n    print(max_profit)", "for _ in range(int(input())):\n    (kinds, time) = map(int, input().split())\n    timeToPickOne = [int(x) for x in input().split()]\n    profitPerStone = [int(x) for x in input().split()]\n    num = []\n    for i in range(kinds):\n        num.append(time // timeToPickOne[i] * profitPerStone[i])\n    num.sort()\n    print(num[-1])", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    array_time = list(map(int, input().split()))\n    array_price = list(map(int, input().split()))\n    count = array_price[0] * (k // array_time[0])\n    for i in range(1, n):\n        p = array_price[i] * (k // array_time[i])\n        if count <= p:\n            count = p\n    print(count)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    array_time = list(map(int, input().split()))\n    array_price = list(map(int, input().split()))\n    count = array_price[0] * (k // array_time[0])\n    for i in range(1, n):\n        if count <= array_price[i] * (k // array_time[i]):\n            count = array_price[i] * (k // array_time[i])\n    print(count)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    array_time = list(map(int, input().split()))\n    array_price = list(map(int, input().split()))\n    count = array_price[0] * (k // array_time[0])\n    for i in range(1, n):\n        count = max(count, array_price[i] * (k // array_time[i]))\n    print(count)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for j in range(len(a)):\n        l.append(b[j] * (k // a[j]))\n    print(max(l))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    g = []\n    for i in range(len(a)):\n        g.append(c[i] * (k // a[i]))\n    print(max(g))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = []\n    for i in range(len(a)):\n        d.append(c[i] * (k // a[i]))\n    print(max(d))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (a, b) = (list(map(int, input().split())), list(map(int, input().split())))\n    for i in range(n):\n        a[i] = k // a[i] * b[i]\n    print(max(a))", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l = [k // l1[i] * l2[i] for i in range(n)]\n    print(max(l))", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        c = k // l1[i]\n        ans = max(ans, c * l2[i])\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    ans = []\n    for x in range(n):\n        ans.append(arr2[x] * int(k / arr1[x]))\n    print(max(ans))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append([b[i], a[i]])\n    c.sort(key=lambda x: x[0] / x[1], reverse=True)\n    i = 0\n    s = 0\n    while k != 0 and i < n:\n        if k >= c[i][1]:\n            s = max(s, c[i][0] * (k // c[i][1]))\n        i += 1\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    profits = []\n    for i in range(n):\n        k1 = k // a[i] * b[i]\n        profits.append(k1)\n    print(max(profits))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()][:n]\n    b = [int(i) for i in input().split()][:n]\n    c = 0\n    l = []\n    for i in a:\n        x = k // i\n        y = b[c] * x\n        c += 1\n        l.append(y)\n    print(max(l))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    time = list(map(int, input().split()))\n    profit = list(map(int, input().split()))\n    maxi = 0\n    for i in range(n):\n        temp = k // time[i] * profit[i]\n        if temp > maxi:\n            maxi = temp\n    print(maxi)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    p = 0\n    for j in range(a):\n        v = b // c[j] * d[j]\n        if p < v:\n            p = v\n    print(p)", "from sys import stdin\n\ndef main():\n    T = int(stdin.readline().strip())\n    for _ in range(T):\n        (N, K) = map(int, stdin.readline().strip().split())\n        times = list(map(int, stdin.readline().strip().split()))\n        gains = list(map(int, stdin.readline().strip().split()))\n        tablo = [0] * N\n        for loop in range(N):\n            tablo[loop] = K // times[loop] * gains[loop]\n        print(max(tablo))\nmain()", "try:\n    for i in range(int(input())):\n        (n, k) = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        m = 0\n        for i in range(n):\n            z = k // a[i]\n            m = max(m, z * b[i])\n        print(m)\nexcept:\n    pass", "for t in range(0, int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))[:n]\n    b = list(map(int, input().split()))[:n]\n    maxi = 0\n    for i in range(0, n):\n        temp = k // a[i] * b[i]\n        if maxi < temp:\n            maxi = temp\n    print(maxi)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    profits = []\n    for i in range(n):\n        k1 = k // a[i] * b[i]\n        profits.append(k1)\n    print(max(profits))"]