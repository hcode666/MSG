["def Solve(p, c):\n    answer = 0\n    for i in p:\n        if len(c[i]) == 0:\n            answer = answer + 0\n        else:\n            answer = answer + max(c[i])\n            c[i].remove(max(c[i]))\n    return answer\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append(list(map(int, input().split()))[1:])\n    print(Solve(p, c))", "def Solve(p, c):\n    answer = 0\n    for i in p:\n        if len(c[i]) == 0:\n            answer = answer + 0\n        else:\n            answer = answer + max(c[i])\n            c[i].remove(max(c[i]))\n    return answer\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append(list(map(int, input().split()))[1:])\n    print(Solve(p, c))", "import heapq\nT = int(input())\nfor t in range(T):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    room = [None for i in range(n)]\n    for i in range(n):\n        batli = list(map(lambda x: -int(x), input().split()))[1:]\n        heapq.heapify(batli)\n        room[i] = batli\n    elephant = 0\n    for r in p:\n        if len(room[r]) == 0:\n            continue\n        bigbatli = -1 * heapq.heappop(room[r])\n        elephant += bigbatli\n    print(elephant)", "import heapq\nT = int(input())\nfor t in range(T):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    room = [None for i in range(n)]\n    for i in range(n):\n        batli = list(map(lambda x: -int(x), input().split()))[1:]\n        heapq.heapify(batli)\n        room[i] = batli\n    elephant = 0\n    for r in p:\n        if len(room[r]) == 0:\n            continue\n        bigbatli = -1 * heapq.heappop(room[r])\n        elephant += bigbatli\n    print(elephant)", "def Solve(p, c):\n    answer = 0\n    for i in p:\n        if len(c[i]) == 0:\n            answer = answer + 0\n        else:\n            answer = answer + max(c[i])\n            c[i].remove(max(c[i]))\n    return answer\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append(list(map(int, input().split()))[1:])\n    print(Solve(p, c))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    ans = 0\n    P = list(map(int, input().split()))\n    for _ in range(n):\n        i1 = list(map(int, input().split()))\n        i1.pop(0)\n        l.append(i1)\n    for val in P:\n        if len(l[val]) > 0:\n            temp = max(l[val])\n            ans += temp\n            l[val].remove(temp)\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    ans = 0\n    P = list(map(int, input().split()))\n    for _ in range(n):\n        i1 = list(map(int, input().split()))\n        i1.pop(0)\n        l.append(i1)\n    for val in P:\n        if len(l[val]) > 0:\n            temp = max(l[val])\n            ans += temp\n            l[val].remove(temp)\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    ans = 0\n    P = list(map(int, input().split()))\n    for _ in range(n):\n        i1 = list(map(int, input().split()))\n        i1.pop(0)\n        l.append(i1)\n    for val in P:\n        if len(l[val]) > 0:\n            temp = max(l[val])\n            ans += temp\n            l[val].remove(temp)\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    ans = 0\n    P = list(map(int, input().split()))\n    for _ in range(n):\n        i1 = list(map(int, input().split()))\n        i1.pop(0)\n        l.append(i1)\n    for val in P:\n        if len(l[val]) > 0:\n            temp = max(l[val])\n            ans += temp\n            l[val].remove(temp)\n    print(ans)", "import collections\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    d = collections.Counter(p)\n    total = 0\n    for i in range(n):\n        c = list(map(int, input().split()))\n        c.pop(0)\n        c.sort()\n        if i in d:\n            if d[i] >= len(c):\n                total += sum(c)\n            else:\n                total += sum(c[-d[i]:])\n    print(total)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m_list = []\n    for j in range(n):\n        m_list.append(sorted(list(map(int, input().split()))[1:]))\n    total = 0\n    for j in l:\n        if m_list[j]:\n            total += m_list[j].pop()\n    print(total)", "T = int(input())\nfor i in range(T):\n    (n, m) = map(int, input().split(' '))\n    v = 0\n    k = list(map(int, input().split(' ')))\n    V = []\n    for j in range(n):\n        a = list(map(int, input().split(' ')))\n        a.pop(0)\n        a.sort()\n        V.append(a)\n    for j in range(m):\n        a = k[j]\n        if len(V[a]):\n            v += V[a].pop()\n    print(v)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    li = list(map(int, input().split()))\n    ls = []\n    for j in range(a):\n        ls.append(list(map(int, input().split())))\n        ls[j].pop(0)\n    su = 0\n    for i in li:\n        try:\n            va = max(ls[i])\n            su += va\n            ls[i].remove(va)\n        except:\n            su += 0\n    print(su)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    order = list(map(int, input().split()))\n    rooms = {i: list(map(int, input().split()))[1:] for i in range(n)}\n    drank = 0\n    for i in order:\n        if rooms[i]:\n            drank += max(rooms[i])\n            rooms[i].remove(max(rooms[i]))\n    print(drank)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    order = list(map(int, input().split()))\n    rooms = {i: list(map(int, input().split()))[1:] for i in range(n)}\n    drank = 0\n    for i in order:\n        if rooms[i]:\n            drank += max(rooms[i])\n            rooms[i].remove(max(rooms[i]))\n    print(drank)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    order = list(map(int, input().split()))\n    rooms = {i: list(map(int, input().split()))[1:] for i in range(n)}\n    drank = 0\n    for i in order:\n        if rooms[i]:\n            drank += max(rooms[i])\n            rooms[i].remove(max(rooms[i]))\n    print(drank)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    f = {}\n    for j in l:\n        if j in f:\n            f[j] += 1\n        else:\n            f[j] = 1\n    ans = 0\n    for j in range(n):\n        s = input()\n        if j in f:\n            a = list(map(int, s.split()))\n            d = sorted(a[1:])\n            ans += sum(d[-1 * f[j]:])\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    (n, m) = map(int, input().split())\n    rooms = list(map(int, input().split()))\n    freq = {}\n    for j in rooms:\n        if j in freq:\n            freq[j] += 1\n        else:\n            freq[j] = 1\n    ans = 0\n    for j in range(n):\n        string = input()\n        if j in freq:\n            arr = list(map(int, string.split()))\n            drinks = sorted(arr[1:])\n            ans += sum(drinks[-1 * freq[j]:])\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    (n, m) = map(int, input().split())\n    rooms = list(map(int, input().split()))\n    freq = {}\n    for j in rooms:\n        if j in freq:\n            freq[j] += 1\n        else:\n            freq[j] = 1\n    ans = 0\n    for j in range(n):\n        string = input()\n        if j in freq:\n            arr = list(map(int, string.split()))\n            drinks = sorted(arr[1:])\n            ans += sum(drinks[-1 * freq[j]:])\n    print(ans)", "tests = int(input())\nfor i in range(tests):\n    (n, m) = map(int, input().split())\n    rooms = list(map(int, input().split()))\n    freq = {}\n    for j in rooms:\n        if j in freq:\n            freq[j] += 1\n        else:\n            freq[j] = 1\n    ans = 0\n    for j in range(n):\n        string = input()\n        if j in freq:\n            arr = list(map(int, string.split()))\n            drinks = sorted(arr[1:])\n            ans += sum(drinks[-1 * freq[j]:])\n    print(ans)", "for _ in range(int(input())):\n    ltrs = 0\n    (n, m) = [int(x) for x in input().split(' ')]\n    p = [int(x) for x in input().split(' ')]\n    temp = set(p)\n    l1 = []\n    for __ in range(n):\n        arr = [int(x) for x in input().split(' ')]\n        del arr[0]\n        arr.sort()\n        l1.append(arr)\n    for i in p:\n        if l1[i] != []:\n            ltrs += l1[i][-1]\n            l1[i].pop(-1)\n    print(ltrs)", "for _ in range(int(input())):\n    a = list()\n    (x, y) = map(int, input().split())\n    c = list(map(int, input().split()))\n    for i in range(x):\n        b = list(map(int, input().split()))\n        del b[0]\n        a.append(b)\n    k = 0\n    for i in c:\n        if len(a[i]) != 0:\n            p = max(a[i])\n            k = k + p\n            a[i].remove(p)\n    print(k)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    pi = list(map(int, input().split()))[:m]\n    sume = 0\n    ans = 0\n    li = []\n    for i in range(n):\n        civi = list(map(int, input().split()))\n        ci = civi[0]\n        vi = civi[1:]\n        vi.sort(reverse=True)\n        ans = pi.count(i)\n        sume += sum(vi[:ans])\n    print(sume)", "case = int(input())\nfor i in range(case):\n    (m, n) = map(int, input().split(' '))\n    p = list(map(int, input().split(' ')))\n    volume = []\n    for j in range(m):\n        arr = list(map(int, input().split(' ')))\n        arr.pop(0)\n        arr.sort()\n        volume.append(arr)\n    ans = 0\n    for room in p:\n        if len(volume[room]) > 0:\n            ans += volume[room].pop()\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = [int(i) for i in input().split()]\n    arr = []\n    for i in range(n):\n        arr.append([int(i) for i in input().split()][1:])\n    for i in arr:\n        i.sort()\n    ans = 0\n    for i in l:\n        if arr[i] == []:\n            continue\n        else:\n            ans += arr[i].pop()\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = [int(i) for i in input().split()]\n    arr = []\n    for i in range(n):\n        arr.append([int(i) for i in input().split()][1:])\n    for i in arr:\n        i.sort()\n    ans = 0\n    for i in l:\n        if arr[i] == []:\n            continue\n        else:\n            ans += arr[i].pop()\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = [int(i) for i in input().split()]\n    arr = []\n    for i in range(n):\n        arr.append([int(i) for i in input().split()][1:])\n    for i in arr:\n        i.sort()\n    ans = 0\n    for i in l:\n        if arr[i] == []:\n            continue\n        else:\n            ans += arr[i].pop()\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = [int(i) for i in input().split()]\n    arr = []\n    for i in range(n):\n        arr.append([int(i) for i in input().split()][1:])\n    for i in arr:\n        i.sort()\n    ans = 0\n    for i in l:\n        if arr[i] == []:\n            continue\n        else:\n            ans += arr[i].pop()\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    mp = {}\n    for j in range(n):\n        (leng, *lis) = list(map(int, input().split()))\n        mp[j] = lis\n    sumi = 0\n    for j in p:\n        z = mp[j]\n        if len(z) == 0:\n            continue\n        else:\n            maxi = max(z)\n            sumi += maxi\n            z.remove(maxi)\n    print(sumi)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    mp = {}\n    for j in range(n):\n        (leng, *lis) = list(map(int, input().split()))\n        mp[j] = lis\n    sumi = 0\n    for j in p:\n        z = mp[j]\n        if len(z) == 0:\n            continue\n        else:\n            maxi = max(z)\n            sumi += maxi\n            z.remove(maxi)\n    print(sumi)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    mp = {}\n    for j in range(n):\n        (leng, *lis) = list(map(int, input().split()))\n        mp[j] = lis\n    sumi = 0\n    for j in p:\n        z = mp[j]\n        if len(z) == 0:\n            continue\n        else:\n            maxi = max(z)\n            sumi += maxi\n            z.remove(maxi)\n    print(sumi)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    mp = {}\n    for j in range(n):\n        (leng, *lis) = list(map(int, input().split()))\n        mp[j] = lis\n    sumi = 0\n    for j in p:\n        z = mp[j]\n        if len(z) == 0:\n            continue\n        else:\n            maxi = max(z)\n            sumi += maxi\n            z.remove(maxi)\n    print(sumi)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    mp = {}\n    for j in range(n):\n        (leng, *lis) = list(map(int, input().split()))\n        mp[j] = lis\n    sumi = 0\n    for j in p:\n        z = mp[j]\n        if len(z) == 0:\n            continue\n        else:\n            maxi = max(z)\n            sumi += maxi\n            z.remove(maxi)\n    print(sumi)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    mp = {}\n    for j in range(n):\n        (leng, *lis) = list(map(int, input().split()))\n        mp[j] = lis\n    sumi = 0\n    for j in p:\n        z = mp[j]\n        if len(z) == 0:\n            continue\n        else:\n            maxi = max(z)\n            sumi += maxi\n            z.remove(maxi)\n    print(sumi)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    mp = {}\n    for j in range(n):\n        (leng, *lis) = list(map(int, input().split()))\n        mp[j] = lis\n    sumi = 0\n    for j in p:\n        z = mp[j]\n        if len(z) == 0:\n            continue\n        else:\n            maxi = max(z)\n            sumi += maxi\n            z.remove(maxi)\n    print(sumi)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    mp = {}\n    for j in range(n):\n        (leng, *lis) = list(map(int, input().split()))\n        mp[j] = lis\n    sumi = 0\n    for j in p:\n        z = mp[j]\n        if len(z) == 0:\n            continue\n        else:\n            maxi = max(z)\n            sumi += maxi\n            z.remove(maxi)\n    print(sumi)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    li = []\n    c = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        a = a[1:]\n        a.sort()\n        li.append(a)\n    for i in range(m):\n        e = li[p[i]]\n        if e != []:\n            c += e[-1]\n            e.pop()\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    li = []\n    c = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        a = a[1:]\n        a.sort()\n        li.append(a)\n    for i in range(m):\n        e = li[p[i]]\n        if e != []:\n            c += e[-1]\n            e.pop()\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    li = []\n    c = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        a = a[1:]\n        a.sort()\n        li.append(a)\n    for i in range(m):\n        e = li[p[i]]\n        if e != []:\n            c += e[-1]\n            e.pop()\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    li = []\n    c = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        a = a[1:]\n        a.sort()\n        li.append(a)\n    for i in range(m):\n        e = li[p[i]]\n        if e != []:\n            c += e[-1]\n            e.pop()\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    li = []\n    c = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        a = a[1:]\n        a.sort()\n        li.append(a)\n    for i in range(m):\n        e = li[p[i]]\n        if e != []:\n            c += e[-1]\n            e.pop()\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    mp = {}\n    for j in range(n):\n        (leng, *lis) = list(map(int, input().split()))\n        mp[j] = lis\n    sumi = 0\n    for j in p:\n        z = mp[j]\n        if len(z) == 0:\n            continue\n        else:\n            maxi = max(z)\n            sumi += maxi\n            z.remove(maxi)\n    print(sumi)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    mp = {}\n    for j in range(n):\n        (leng, *lis) = list(map(int, input().split()))\n        mp[j] = lis\n    sumi = 0\n    for j in p:\n        z = mp[j]\n        if len(z) == 0:\n            continue\n        else:\n            maxi = max(z)\n            sumi += maxi\n            z.remove(maxi)\n    print(sumi)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    mp = {}\n    for j in range(n):\n        (leng, *lis) = list(map(int, input().split()))\n        mp[j] = lis\n    sumi = 0\n    for j in p:\n        z = mp[j]\n        if len(z) == 0:\n            continue\n        else:\n            maxi = max(z)\n            sumi += maxi\n            z.remove(maxi)\n    print(sumi)", "from collections import Counter\n\ndef codechef(n, m, p, drink):\n    k = Counter(p)\n    ans = 0\n    for (i, j) in k.items():\n        drink[i].sort(reverse=True)\n        ans += sum(drink[i][:j])\n    return ans\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    drink = []\n    for i in range(n):\n        temp = list(map(int, input().split()))\n        drink.append(temp[1:])\n    print(codechef(n, m, p, drink))", "try:\n    for _ in range(int(input())):\n        (N, M) = input().split()\n        a = []\n        b = []\n        massimo = 0\n        pippo = 0\n        c = []\n        N = int(N)\n        M = int(M)\n        a = list(map(int, input().split()))\n        for i in range(N):\n            b = list(map(int, input().split()))\n            b.pop(0)\n            c.append(b)\n        for i in range(M):\n            pippo = max(c[a[i]])\n            massimo += pippo\n            if len(c[a[i]]) > 1:\n                c[a[i]].remove(pippo)\n            else:\n                c[a[i]].remove(pippo)\n                c[a[i]].append(0)\n        print(massimo)\nexcept EOFError:\n    exit()", "try:\n    t: int = int(input())\n    for i in range(0, t):\n        (n, m) = map(int, input().split())\n        p = list(map(int, input().split()))\n        rooms: dict = {}\n        count: int = 0\n        for j in range(n):\n            x = list(map(int, input().split()))\n            x.pop(0)\n            rooms[j] = x\n        for j in range(m):\n            z: int = p[j]\n            if len(rooms[z]) != 0:\n                el: int = max(rooms[z])\n                count += el\n                rooms[z].remove(el)\n        print(count)\nexcept:\n    pass", "def main():\n    try:\n        for test in range(int(input())):\n            (n, m) = map(int, input().split())\n            P = list(map(int, input().split()))\n            bottles: dict[int, list] = {}\n            for index in range(n):\n                x = list(map(int, input().split()))\n                x.pop(0)\n                bottles[index] = x\n            sol = resolve(n, m, P, bottles)\n            print(sol)\n    except EOFError:\n        return\n\ndef resolve(n: int, m: int, P: int, bottles: dict):\n    count: int = 0\n    for index in range(len(P)):\n        room = P[index]\n        if len(bottles[room]) > 0:\n            maxValue = max(bottles[room])\n            bottles[room].remove(maxValue)\n            count += maxValue\n    return count\nmain()", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    mp = {}\n    for j in range(n):\n        (leng, *lis) = map(int, input().split())\n        mp[j] = lis\n    sumi = 0\n    for j in p:\n        z = mp[j]\n        if len(z) == 0:\n            continue\n        else:\n            maxi = max(z)\n            sumi += maxi\n            z.remove(maxi)\n    print(sumi)", "t = int(input())\nfor t1 in range(t):\n    (n, m) = map(int, input().split())\n    order = list(map(int, input().split()))\n    rooms = []\n    for z in range(n):\n        temp = list(map(int, input().split()))\n        rooms.append(temp[1:])\n    ans = 0\n    for z in order:\n        if len(rooms[z]) > 0:\n            m = max(rooms[z])\n            rooms[z].remove(m)\n            ans += m\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    rmvst = list(map(int, input().split()))\n    cnt = []\n    litres = []\n    visited = [0] * n\n    for j in range(n):\n        l = list(map(int, input().split()))\n        cnt.append(l[0])\n        l = l[1:]\n        l.sort()\n        litres.append(l)\n    tot = 0\n    for j in rmvst:\n        visited[j] += 1\n        if visited[j] <= cnt[j]:\n            tot = tot + litres[j][-visited[j]]\n    print(tot)", "T = int(input())\nfor i in range(T):\n    (n, m) = map(int, input().split())\n    room = list(map(int, input().split()))\n    total = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        a.remove(a[0])\n        a.sort()\n        a.reverse()\n        x = room.count(i)\n        if x >= len(a):\n            total += sum(a)\n        else:\n            for j in range(x):\n                total += a[j]\n    print(total)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    room = list(map(int, input().split()))\n    total = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        a.remove(a[0])\n        a.sort()\n        a.reverse()\n        x = room.count(i)\n        if x >= len(a):\n            total += sum(a)\n        else:\n            for j in range(x):\n                total += a[j]\n    print(total)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    room = list(map(int, input().split()))\n    total = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        a.remove(a[0])\n        a.sort()\n        a.reverse()\n        x = room.count(i)\n        if x >= len(a):\n            total += sum(a)\n        else:\n            for j in range(x):\n                total += a[j]\n    print(total)", "for __ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    d = {}\n    room = 0\n    drinks = 0\n    for i in range(n):\n        c = list(map(int, input().split()))\n        e = c[1:]\n        e.sort()\n        d[room] = e\n        room += 1\n    for j in p:\n        if len(list(d[j])) > 0:\n            drinks += d[j].pop()\n    print(drinks)", "t = int(input())\nwhile t != 0:\n    (n, k) = map(int, input().split())\n    m = []\n    r = list(map(int, input().split()))\n    for i in range(n):\n        l = list(map(int, input().split()))\n        l = l[1:]\n        m.append(l)\n    i = 0\n    p = 0\n    j = 0\n    while j < k:\n        if len(m[r[j]]) != 0:\n            p = p + max(m[r[j]])\n            m[r[j]].remove(max(m[r[j]]))\n        j += 1\n    print(p)\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    lis1 = list(map(int, input().split()))\n    l = []\n    res = 0\n    for j in range(n):\n        (c, *lp) = map(int, input().split())\n        l.append(lp)\n    for j in lis1:\n        temp = l[j]\n        if len(temp) == 0:\n            continue\n        else:\n            find = max(temp)\n            res = res + find\n            temp.remove(find)\n    print(res)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    out = []\n    for _ in range(n):\n        out.append(sorted(list(map(int, input().split()))[1:]))\n    ans = 0\n    for i in arr:\n        ans += out[i][-1]\n        out[i][-1] = 0\n        out[i].sort()\n    print(ans)", "for j in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = []\n    for i in range(n):\n        z = list(map(int, input().split()))\n        y.append(z[1:])\n    for i in y:\n        i.sort()\n    ravan = 0\n    for i in x:\n        ravan += y[i][-1]\n        y[i][-1] = 0\n        y[i].sort()\n    print(ravan)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    total = 0\n    p = list(map(int, input().split()))\n    q = []\n    for __ in range(n):\n        q.append(list(map(int, input().split()))[1:])\n    for i in p:\n        total += max(q[i])\n        ind = q[i].index(max(q[i]))\n        q[i][ind] = 0\n    print(total)", "def calc(n, m, p, bottles):\n    p_i = 0\n    drink = 0\n    while p_i < m:\n        l_i = 0\n        r_i = p[p_i]\n        mx = max(bottles[r_i])\n        drink += mx\n        while l_i < len(bottles[r_i]):\n            if bottles[r_i][l_i] == mx:\n                bottles[r_i][l_i] = 0\n                break\n            l_i += 1\n        p_i += 1\n    return drink\nt = int(input())\nfor _ in range(t):\n    inp = input().split()\n    n = int(inp[0])\n    m = int(inp[1])\n    p_str = input().split()\n    p = []\n    for x in p_str:\n        p.append(int(x))\n    bottles = []\n    k = 0\n    while k < n:\n        bottles_str = input().split()\n        bot = []\n        i = 1\n        while i < len(bottles_str):\n            bot.append(int(bottles_str[i]))\n            i += 1\n        bottles.append(bot)\n        k += 1\n    res = calc(n, m, p, bottles)\n    print(res)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    l = []\n    c = [0] * n\n    s = 0\n    for i in d:\n        c[i] += 1\n    for i in range(n):\n        f = list(map(int, input().split()))\n        x = f[0]\n        f = f[1:]\n        f.sort(reverse=True)\n        l.append([x] + f)\n    for i in range(n):\n        if c[i] > 0:\n            if c[i] <= l[i][0]:\n                s += sum(l[i][1:c[i] + 1])\n            else:\n                s += sum(l[i][1:])\n    print(s)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    lemon = []\n    for _ in range(n):\n        lemon.append(list(map(int, input().split())))\n        lemon[-1].pop(0)\n    drink = 0\n    for visit in P:\n        if len(lemon[visit]) != 0:\n            drink += max(lemon[visit])\n            lemon[visit].pop(lemon[visit].index(max(lemon[visit])))\n    print(drink)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    l = []\n    c = [0] * n\n    s = 0\n    for i in d:\n        c[i] += 1\n    for i in range(n):\n        f = list(map(int, input().split()))\n        x = f[0]\n        f = f[1:]\n        f.sort(reverse=True)\n        l.append([x] + f)\n    for i in range(n):\n        if c[i] > 0:\n            if c[i] <= l[i][0]:\n                s += sum(l[i][1:c[i] + 1])\n            else:\n                s += sum(l[i][1:])\n    print(s)", "t = int(input())\nwhile t != 0:\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    d = []\n    s = 0\n    for i in range(n):\n        v = list(map(int, input().split()))\n        v = sorted(v[1:], reverse=True)\n        d.append(v)\n    for i in range(m):\n        if len(d[p[i]]) == 0:\n            continue\n        s += d[p[i]][0]\n        d[p[i]] = d[p[i]][1:]\n    print(s)\n    t -= 1", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    l = []\n    c = [0] * n\n    s = 0\n    for i in d:\n        c[i] += 1\n    for i in range(n):\n        f = list(map(int, input().split()))\n        x = f[0]\n        f = f[1:]\n        f.sort(reverse=True)\n        l.append([x] + f)\n    for i in range(n):\n        if c[i] > 0:\n            if c[i] <= l[i][0]:\n                s += sum(l[i][1:c[i] + 1])\n            else:\n                s += sum(l[i][1:])\n    print(s)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = []\n    for j in range(n):\n        x = list(map(int, input().split()))\n        x.remove(x[0])\n        x.sort()\n        m.append(x)\n    total = 0\n    for j in l:\n        x = m[j]\n        if len(x) > 0:\n            y = x[len(x) - 1]\n            m[j].pop()\n            total += y\n    print(total)", "t = int(input())\nwhile t:\n    c = []\n    l = 0\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    for i in range(n):\n        x = list(map(int, input().split()))\n        c.append(x[1:])\n    for i in p:\n        if len(c[i]):\n            l += max(c[i])\n            c[i].remove(max(c[i]))\n    print(l)\n    t -= 1", "t = int(input())\nwhile t:\n    c = []\n    l = 0\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    for i in range(n):\n        x = list(map(int, input().split()))\n        c.append(x[1:])\n    for i in p:\n        if len(c[i]):\n            l += max(c[i])\n            c[i].remove(max(c[i]))\n    print(l)\n    t -= 1", "from collections import deque\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    r = list(map(int, input().split()))\n    aux = {}\n    for i in range(n):\n        t_1 = list(map(int, input().split()))\n        aux[i] = deque(sorted(t_1[1:], reverse=True))\n    v = 0\n    for i in range(m):\n        if len(aux[r[i]]) > 0:\n            t_2 = aux[r[i]].popleft()\n            v += t_2\n    print(v)", "t = int(input())\nwhile t:\n    c = []\n    l = 0\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    for i in range(n):\n        x = list(map(int, input().split()))\n        c.append(x[1:])\n    for i in p:\n        if len(c[i]):\n            l += max(c[i])\n            c[i].remove(max(c[i]))\n    print(l)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append(list(map(int, input().split()))[1:])\n    c = 0\n    for i in p:\n        if l[i] != []:\n            x = max(l[i])\n            l[i].remove(x)\n            c += x\n    print(c)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    room = list(map(int, input().split()))\n    qqq = []\n    while n > 0:\n        temp = list(map(int, input().split()))\n        c = temp[0]\n        lst = temp[1:].copy()\n        qqq.append(lst)\n        n -= 1\n    ans = 0\n    for i in room:\n        if qqq[i] != []:\n            ans += max(qqq[i])\n            qqq[i].remove(max(qqq[i]))\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    total = 0\n    p = list(map(int, input().split()))\n    q = []\n    for __ in range(n):\n        q.append(list(map(int, input().split()))[1:])\n    for i in p:\n        total += max(q[i])\n        ind = q[i].index(max(q[i]))\n        q[i][ind] = 0\n    print(total)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    total = 0\n    p = list(map(int, input().split()))\n    q = []\n    for __ in range(n):\n        q.append(list(map(int, input().split()))[1:])\n    for i in p:\n        total += max(q[i])\n        ind = q[i].index(max(q[i]))\n        q[i][ind] = 0\n    print(total)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    total = 0\n    p = list(map(int, input().split()))\n    q = []\n    for __ in range(n):\n        q.append(list(map(int, input().split()))[1:])\n    for i in p:\n        total += max(q[i])\n        ind = q[i].index(max(q[i]))\n        q[i][ind] = 0\n    print(total)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    total = 0\n    p = list(map(int, input().split(' ')))\n    pl = []\n    for __ in range(n):\n        pl.append(list(map(int, input().split(' ')))[1:])\n    for i in pl:\n        i.sort()\n    for i in p:\n        total += pl[i][-1]\n        pl[i][-1] = 0\n        pl[i].sort()\n    print(total)", "T = int(input())\nfor j in range(T):\n    (N, M) = map(int, input().split())\n    s = list(map(int, input().split()))\n    t = []\n    for i in range(N):\n        b = list(map(int, input().split()))\n        t.append(b[1:])\n    for i in t:\n        i.sort()\n    c = 0\n    for i in s:\n        c += t[i][-1]\n        t[i][-1] = 0\n        t[i].sort()\n    print(c)", "for test_case in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    p = list(map(int, input().split(' ')))\n    rooms = []\n    for item in range(n):\n        rooms.append(list(map(int, input().split(' ')))[1:])\n    for room in rooms:\n        room.sort()\n    total = 0\n    for value in p:\n        total += rooms[value][-1]\n        rooms[value][-1] = 0\n        rooms[value].sort()\n    print(total)", "for j in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = []\n    for i in range(n):\n        z = list(map(int, input().split()))\n        y.append(z[1:])\n    for i in y:\n        i.sort()\n    ravan = 0\n    for i in x:\n        ravan += y[i][-1]\n        y[i][-1] = 0\n        y[i].sort()\n    print(ravan)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    l = list()\n    c = 0\n    for _ in range(n):\n        x = list(map(int, input().split()))\n        x.pop(0)\n        l.append(x)\n    for i in range(m):\n        if len(l[p[i]]) != 0:\n            y = max(l[p[i]])\n            l[p[i]].remove(y)\n            c = c + y\n        else:\n            pass\n    print(c)", "for _ in range(int(input())):\n    (N, M) = map(int, input().split())\n    ans = 0\n    P = list(map(int, input().split()))\n    volumes = []\n    for i in range(N):\n        a = list(map(int, input().split()))\n        a = a[1:]\n        a.sort()\n        a = a[-1::-1]\n        volumes.append(a)\n    for i in range(M):\n        a = P[i]\n        if len(volumes[a]) > 0:\n            ans += volumes[a][0]\n            volumes[a].pop(0)\n    print(ans)", "for i in range(int(input())):\n    a = list()\n    (x, y) = map(int, input().split())\n    c = list(map(int, input().split()))\n    for j in range(x):\n        b = list(map(int, input().split()))\n        del b[0]\n        a.append(b)\n    k = 0\n    for j in c:\n        if len(a[j]) != 0:\n            p = max(a[j])\n            k = k + p\n            a[j].remove(p)\n    print(k)", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    l = []\n    for j in range(n):\n        k = list(map(int, input().split()))\n        l.append(k[1:])\n    c = 0\n    for j in range(len(q)):\n        x = max(l[q[j]])\n        c += x\n        l[q[j]].remove(max(l[q[j]]))\n        l[q[j]].append(0)\n    print(c)", "class Solution(object):\n\n    def __init__(self):\n        for _ in range(int(input())):\n            self.get_data()\n            self.solve()\n            self.print_ans()\n    pass\n\n    def get_data(self):\n        (self.n, self.m) = map(int, input().split())\n        self.p = list(map(int, input().split()))\n        self.a = []\n        for _ in range(self.n):\n            a = list(map(int, input().split()))\n            a.pop(0)\n            a.sort(reverse=True)\n            self.a.append(a)\n        pass\n\n    def solve(self):\n        self.ans = 0\n        for x in self.p:\n            if len(self.a[x]):\n                self.ans += self.a[x][0]\n                self.a[x].pop(0)\n        pass\n\n    def print_ans(self):\n        print(self.ans)\n        pass\n\ndef main():\n    Solution()\n    pass\nmain()", "import sys\nfor i in range(int(sys.stdin.readline())):\n    k = list(map(int, sys.stdin.readline().split()))\n    p = list(map(int, sys.stdin.readline().split()))\n    l = []\n    for j in range(k[0]):\n        l.append(list(map(int, sys.stdin.readline().split())))\n        del l[j][0]\n    c = 0\n    for r in p:\n        c += max(l[r])\n        l[r][l[r].index(max(l[r]))] = 0\n    sys.stdout.write(str(c) + '\\n')", "t = int(input())\nfor case in range(t):\n    volume = 0\n    rooms = []\n    (n, m) = input().split()\n    n = int(n)\n    p = list(map(int, input().split()))\n    for room in range(n):\n        rooms.append(list(map(int, input().split()))[1:])\n    for room in rooms:\n        room.sort()\n    for i in p:\n        volume += rooms[i][-1]\n        rooms[i][-1] = 0\n        rooms[i].sort()\n    print(volume)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    P = list(map(int, input().split()))\n    rooms = []\n    result = 0\n    for x in range(n):\n        rooms.append(list(map(int, input().split())))\n    for y in P:\n        if len(rooms[y]) > 1:\n            result += max(rooms[y][1:])\n            rooms[y].remove(max(rooms[y][1:]))\n    print(result)", "for test_case in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    p = list(map(int, input().split(' ')))\n    rooms = []\n    for item in range(n):\n        rooms.append(list(map(int, input().split(' ')))[1:])\n    for room in rooms:\n        room.sort()\n    total = 0\n    for value in p:\n        total += rooms[value][-1]\n        rooms[value][-1] = 0\n        rooms[value].sort()\n    print(total)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    r = list(map(int, input().split()))\n    b = [list(map(int, input().split())) for _ in range(n)]\n    for i in range(n):\n        a = b[i][1:]\n        a.sort()\n        b[i][1:] = a\n    sum = 0\n    for i in range(m):\n        if len(b[r[i]]) > 1:\n            sum += b[r[i]][len(b[r[i]]) - 1]\n            b[r[i]].pop()\n    print(sum)", "from collections import defaultdict\nfor _ in range(int(input())):\n    (rooms, done) = [int(x) for x in input().split()]\n    visits = [int(x) for x in input().split()]\n    bottles = []\n    for i in range(rooms):\n        (indx, *volume) = [int(x) for x in input().split()]\n        bottles.append(volume)\n    drunk = 0\n    for i in visits:\n        curr = bottles[i]\n        if len(curr) > 0:\n            indx = curr.index(max(curr))\n            drunk += curr[indx]\n            del bottles[i][indx]\n    print(drunk)", "t = int(input())\nfor i in range(t):\n    sum1 = 0\n    c = list()\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for j in range(n):\n        x = list(map(int, input().split()))\n        c.append(x)\n    for j in a:\n        largest = -1\n        for k in range(c[j][0]):\n            if c[j][k + 1] > largest:\n                largest = c[j][k + 1]\n                temp = k + 1\n        sum1 += largest\n        c[j][temp] = 0\n    print(sum1)", "import heapq\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    P = list(map(int, input().split()))\n    l = []\n    sum = 0\n    for j in range(n):\n        t = list(map(int, input().split()))\n        t.pop(0)\n        heapq.heapify(t)\n        t.sort()\n        l.append(t)\n    for j in P:\n        if len(l[j]) != 0:\n            sum += l[j].pop()\n    print(sum)", "tes = int(input())\nfor i in range(tes):\n    (nr, mv) = map(int, input().split())\n    visits = list(map(int, input().split()))\n    (arr, drink) = ([], 0)\n    for j in range(nr):\n        bottles = list(map(int, input().split()))\n        arr.append(bottles[0:1] + sorted(bottles[1:]))\n    while True:\n        for j in visits:\n            if len(arr[j]) > 1:\n                drink += arr[j][len(arr[j]) - 1]\n                arr[j].pop(len(arr[j]) - 1)\n        break\n    print(drink)", "t = int(input())\nfor k in range(t):\n    (n, m) = map(int, input().split())\n    rooms = [int(x) for x in input().split()]\n    l = []\n    s = 0\n    for j in range(n):\n        a = [int(x) for x in input().split()]\n        a.pop(0)\n        l.append(a)\n    for item in rooms:\n        if len(l[item]) != 0:\n            m = max(l[item])\n            s += m\n            l[item].remove(m)\n    print(s)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    l = list()\n    c = 0\n    for i in range(n):\n        x = list(map(int, input().split()))\n        x.pop(0)\n        l.append(x)\n    for i in range(m):\n        if len(l[p[i]]) != 0:\n            y = max(l[p[i]])\n            l[p[i]].remove(y)\n            c += y\n        else:\n            pass\n    print(c)", "t = 0\ntry:\n    t = int(input())\nexcept:\n    pass\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    r = {}\n    count = 0\n    for i in range(n):\n        x = list(map(int, input().split()))\n        r[i] = x[1:]\n    for i in p:\n        z = max(r[i])\n        y = r[i].index(z)\n        r[i][y] = 0\n        count += z\n    print(count)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split())\n    p = list(map(int, input().split()))\n    D = {}\n    for i in range(n):\n        c = list(map(int, input().split()))\n        D[i] = c[1:]\n    sum = 0\n    for i in range(len(p)):\n        x = D[p[i]]\n        max = -1\n        idx = -1\n        for j in range(len(x)):\n            if x[j] > max:\n                max = x[j]\n                idx = j\n        D[p[i]][idx] = 0\n        sum += max\n    print(sum)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    P = list(map(int, input().split()))\n    D = {}\n    for i in range(n):\n        C = list(map(int, input().split()))\n        D[i] = C[1:]\n    sum = 0\n    for i in range(m):\n        d = D[P[i]]\n        maxm = -1\n        ind = -1\n        for j in range(len(d)):\n            if maxm < d[j]:\n                maxm = d[j]\n                ind = j\n        d[ind] = 0\n        sum += maxm\n    print(sum)"]