["t = int(input())\nfor i in range(t):\n    (n, m, x, y) = map(int, input().split())\n    if n * m > 1:\n        x = min(x, y)\n    y = min(y, 2 * x)\n    print((n * m + 1) // 2 * x + n * m // 2 * (y - x))", "t = int(input())\nfor i in range(t):\n    (n, m, x, y) = map(int, input().split())\n    if n * m > 1:\n        x = min(x, y)\n    y = min(y, 2 * x)\n    print((n * m + 1) // 2 * x + n * m // 2 * (y - x))", "t = int(input())\nfor i in range(t):\n    (n, m, x, y) = map(int, input().split())\n    if n * m > 1:\n        x = min(x, y)\n    y = min(y, 2 * x)\n    print((n * m + 1) // 2 * x + n * m // 2 * (y - x))", "for __ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n * m > 1:\n        x = min(x, y)\n    y = min(y, 2 * x)\n    print((n * m + 1) // 2 * x + n * m // 2 * (y - x))", "t = int(input())\nfor i in range(t):\n    (a, b, x, y) = map(int, input().split())\n    if a == 1 and b == 1:\n        count = x\n    elif y > 2 * x:\n        count = x * a * b\n    elif a * b % 2 == 0:\n        count = y * a * b / 2\n    elif x > y:\n        count = y * (a * b - 1) / 2 + y\n    else:\n        count = y * (a * b - 1) / 2 + x\n    print(int(count))", "T = int(input())\nfor i in range(T):\n    (A, B, X, Y) = map(int, input().split())\n    if Y > 2 * X:\n        counter = X * A * B\n    elif A * B == 1:\n        counter = X\n    elif A * B % 2 == 0:\n        counter = Y * A * B / 2\n    elif X > Y:\n        counter = Y * (A * B - 1) / 2 + Y\n    else:\n        counter = Y * (A * B - 1) / 2 + X\n    print(int(counter))", "T = int(input())\nfor tc in range(T):\n    (N, M, X, Y) = map(int, input().split())\n    if Y > 2 * X:\n        count = X * N * M\n    elif N * M == 1:\n        count = X\n    elif N * M % 2 == 0:\n        count = Y * N * M / 2\n    elif X > Y:\n        count = Y * (N * M - 1) / 2 + Y\n    else:\n        count = Y * (N * M - 1) / 2 + X\n    print(int(count))", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        x = min(x, y)\n        y = min(2 * x, y)\n        c = (n * m + 1) // 2 * x\n        c += n * m // 2 * (y - x)\n        print(c)", "for _ in range(int(input())):\n    (M, N, X, Y) = map(int, input().split())\n    if X + X <= Y:\n        ans = X * M * N\n    elif M == 1 and N == 1:\n        ans = X\n    else:\n        if X >= Y:\n            X = Y\n        if M % 2 == 0 or N % 2 == 0:\n            ans = Y * M * N / 2\n        else:\n            ans = Y * (M * N - 1) / 2 + X\n    print(int(ans))", "def ans(n, m, x, y):\n    if n * m > 1:\n        x = min(x, y)\n    y = min(2 * x, y)\n    z = (n * m + 1) // 2 * x\n    z2 = n * m // 2 * (y - x)\n    print(z + z2)\nfor _ in range(int(input())):\n    (n, m, x, y) = [int(i) for i in input().split()]\n    ans(n, m, x, y)", "for _ in range(int(input())):\n    (n, m, x, y) = list(map(int, input().split()))\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        x = min(x, y)\n        y = min(2 * x, y)\n        c = (n * m + 1) // 2 * x\n        c += n * m // 2 * (y - x)\n        print(c)", "def mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n\ndef ni():\n    return int(input())\n\ndef si():\n    return str(input())\nfor t in range(ni()):\n    (N, M, X, Y) = mi()\n    if M == N == 1:\n        print(X)\n        continue\n    a = Y // 2\n    b = Y - a\n    a = min(X, a)\n    b = min(X, b)\n    ans = 0\n    for k in range(Y + 1):\n        temp1 = 0\n        temp2 = 0\n        a = min(k, X)\n        b = min(Y - k, X)\n        c = N // 2\n        d = N - c\n        e = M // 2\n        f = M - e\n        ans = max(ans, (d * f + c * e) * b + (c * f + d * e) * a)\n    print(ans)", "for i in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if x >= y / 2:\n        ans = y * (n * m // 2)\n        if n * m % 2 == 1:\n            if n == 1 and m == 1:\n                ans += x\n            else:\n                ans += min(x, y)\n        print(ans)\n    else:\n        print(x * (n * m))", "t = int(input())\nfor i in range(t):\n    (N, M, X, Y) = map(int, input().split())\n    ans = 0\n    if N * M == 1:\n        ans = X\n    elif X * 2 <= Y:\n        ans = N * M * X\n    elif Y >= X:\n        if N * M % 2 == 0:\n            ans = N * M // 2 * Y\n        else:\n            ans = N * M // 2 * Y + X\n    else:\n        ans = (N * M + 1) // 2 * Y\n    print(ans)", "for _ in range(int(input())):\n    (n, m, x, y) = list(map(int, input().split()))\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        x = min(x, y)\n        y = min(2 * x, y)\n        c = (n * m + 1) // 2 * x\n        c += n * m // 2 * (y - x)\n        print(c)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        x = min(x, y)\n        y = min(2 * x, y)\n        c = (n * m + 1) // 2 * x\n        c += n * m // 2 * (y - x)\n        print(c)", "for i in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    a = n * m\n    if m == 1 and n == 1:\n        print(x)\n        continue\n    if a % 2 == 1:\n        n = a // 2 + 1\n        m = a // 2\n    else:\n        n = m = a // 2\n    if y >= x:\n        if y >= 2 * x:\n            y = x\n        else:\n            y = y - x\n    else:\n        x = y\n        y = 0\n    print(x * n + y * m)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    a = n * m\n    if m == 1 and n == 1:\n        print(x)\n        continue\n    if a % 2 == 1:\n        n = a // 2 + 1\n        m = a // 2\n    else:\n        n = m = a // 2\n    if y >= x:\n        if y >= 2 * x:\n            y = x\n        else:\n            y = y - x\n    else:\n        x = y\n        y = 0\n    print(x * n + y * m)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        x = min(x, y)\n        y = min(2 * x, y)\n        c = (n * m + 1) // 2 * x\n        c += n * m // 2 * (y - x)\n        print(c)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        x = min(x, y)\n        y = min(2 * x, y)\n        c = (n * m + 1) // 2 * x\n        c += n * m // 2 * (y - x)\n        print(c)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        x = min(x, y)\n        y = min(2 * x, y)\n        c = (n * m + 1) // 2 * x\n        c += n * m // 2 * (y - x)\n        print(c)", "class CoinGame:\n\n    def findMaxCoins(self, N, M, maxPerField, maxSum):\n        if N * M > 1:\n            maxPerField = min(maxPerField, maxSum)\n        maxSum = min(maxSum, 2 * maxPerField)\n        return (N * M + 1) // 2 * maxPerField + N * M // 2 * (maxSum - maxPerField)\nsolver = CoinGame()\nT = int(input())\nwhile T:\n    T -= 1\n    inputLine = input()\n    (N, M, X, Y) = [int(i) for i in inputLine.split(' ')]\n    print(solver.findMaxCoins(N, M, X, Y))", "for t in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n == m == 1:\n        print(x)\n    else:\n        x = min(x, y)\n        y = min(2 * x, y)\n        print((n * m + 1) // 2 * x + n * m // 2 * (y - x))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    ip = input().split()\n    (n, m, x, y) = [int(i) for i in ip]\n    nm = n * m\n    if n == 1 and m == 1:\n        print(x)\n        continue\n    if y <= x:\n        x = y\n        y_x = 0\n    elif y > x and y <= 2 * x:\n        x = max(x, y - x)\n        y_x = y - x\n    elif y > 2 * x:\n        x = x\n        y_x = x\n    print(nm // 2 * y_x + (nm - nm // 2) * x)", "for t in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n == m == 1:\n        print(x)\n    else:\n        x = min(x, y)\n        y = min(2 * x, y)\n        print((n * m + 1) // 2 * x + n * m // 2 * (y - x))", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    t = n * m\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        if t & 1:\n            (f, s) = (t // 2 + 1, t // 2)\n        else:\n            (f, s) = (t // 2, t // 2)\n        if x >= y:\n            print(f * y)\n        elif y - x <= x:\n            print(f * x + s * (y - x))\n        else:\n            print(x * (f + s))", "T = int(input())\nfor i in range(T):\n    (p, q, x, y) = map(int, input().split())\n    y = min(2 * x, y)\n    if p == 1 and q == 1:\n        print(x)\n        continue\n    if p * q % 2 == 0:\n        print(p * q // 2 * y)\n    else:\n        print(min(x, y) + p * q // 2 * y)", "from collections import Counter\nimport string\nimport math\nimport bisect\nimport sys\nfrom fractions import Fraction\n\ndef array_int():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef vary(arrber_of_variables):\n    if arrber_of_variables == 1:\n        return int(sys.stdin.readline())\n    if arrber_of_variables >= 2:\n        return map(int, sys.stdin.readline().split())\n\ndef makedict(var):\n    return dict(Counter(var))\ntestcases = vary(1)\nfor _ in range(testcases):\n    (n, m, x, y) = map(int, input().split())\n    if y >= 2 * x:\n        print(x * n * m)\n    elif n == 1 and m == 1:\n        print(x)\n    elif y <= x:\n        print((m * n + 1) // 2 * y)\n    else:\n        print((m * n + 1) // 2 * x + m * n // 2 * (y - x))", "from collections import Counter\nimport string\nimport math\nimport bisect\nimport sys\nfrom fractions import Fraction\n\ndef array_int():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef vary(arrber_of_variables):\n    if arrber_of_variables == 1:\n        return int(sys.stdin.readline())\n    if arrber_of_variables >= 2:\n        return map(int, sys.stdin.readline().split())\n\ndef makedict(var):\n    return dict(Counter(var))\ntestcases = vary(1)\nfor _ in range(testcases):\n    (n, m, x, y) = map(int, input().split())\n    if y >= 2 * x:\n        print(x * n * m)\n    elif n == 1 and m == 1:\n        print(x)\n    elif y <= x:\n        print((m * n + 1) // 2 * y)\n    else:\n        print((m * n + 1) // 2 * x + m * n // 2 * (y - x))", "import sys\nsys.setrecursionlimit(10 ** 5 + 1)\ninf = int(10 ** 20)\nmax_val = inf\nmin_val = -inf\nRW = lambda : sys.stdin.readline().strip()\nRI = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\nfor _ in range(RI()):\n    (n, m, x, y) = RMI()\n    if n * m > 1:\n        x = min(x, y)\n    y = min(y, 2 * x)\n    answer = (n * m + 1) // 2 * x + n * m // 2 * (y - x)\n    print(answer)", "T = int(input())\nfor i in range(T):\n    (n, m, x, y) = map(int, input().split())\n    y = min(2 * x, y)\n    if n == 1 and m == 1:\n        print(x)\n        continue\n    if n * m % 2 == 0:\n        print(n * m // 2 * y)\n    else:\n        print(min(x, y) + n * m // 2 * y)", "T = int(input())\nfor i in range(T):\n    (n, m, x, y) = map(int, input().split())\n    y = min(2 * x, y)\n    if n == 1 and m == 1:\n        print(x)\n        continue\n    if n * m % 2 == 0:\n        print(n * m // 2 * y)\n    else:\n        print(min(x, y) + n * m // 2 * y)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    y = min(2 * x, y)\n    if n == 1 and m == 1:\n        print(x)\n        continue\n    if n * m % 2 == 0:\n        print(n * m // 2 * y)\n    else:\n        print(min(x, y) + n * m // 2 * y)", "def greedyChoco(n, m, x, y):\n    z = n * m\n    if z == 1:\n        return x\n    p = z % 2\n    q = z // 2\n    (x, y) = (min(x, y), min(2 * x, y))\n    return y * q + x * p\nfor t in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    print(greedyChoco(n, m, x, y))", "for __ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n * m > 1:\n        x = min(x, y)\n    y = min(y, 2 * x)\n    print((n * m + 1) // 2 * x + n * m // 2 * (y - x))", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n == 1 and m == 1:\n        ans = x\n    elif n * m % 2 == 0:\n        if y >= 2 * x:\n            ans = n * m * x\n        elif y >= x:\n            ans = (n * m + 1) // 2 * x + n * m // 2 * (y - x)\n        else:\n            ans = n * m * y // 2\n    elif y >= 2 * x:\n        ans = n * m * x\n    elif y >= x:\n        ans = (n * m + 1) // 2 * x + n * m // 2 * (y - x)\n    else:\n        ans = y * ((n * m + 1) // 2)\n    print(ans)", "try:\n    for _ in range(int(input())):\n        (n, m, x, y) = [int(_) for _ in input().split()]\n        p = (n * m + 1) // 2\n        q = n * m // 2\n        if n * m == 1:\n            print(x)\n        elif x * 2 <= y:\n            print(n * m * x)\n        elif y <= x:\n            print(y * p)\n        else:\n            print(x * p + (y - x) * q)\nexcept:\n    pass", "try:\n    t = int(input())\n    for i in range(0, t):\n        (n, m, x, y) = map(int, input().split(' '))\n        h = x\n        j = y\n        (x1, y1) = (min(h, j), min(2 * h, j))\n        u = (n * m + 1) // 2 * x1\n        v = n * m // 2 * (y1 - x1)\n        if n == 1 and m == 1:\n            print(h)\n        else:\n            print(u + v)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, m, x, y) = [int(_) for _ in input().split()]\n    p = (n * m + 1) // 2\n    q = n * m // 2\n    if n * m == 1:\n        print(x)\n    elif x * 2 <= y:\n        print(n * m * x)\n    elif y <= x:\n        print(y * p)\n    else:\n        print(x * p + (y - x) * q)", "def greedyChoco(n, m, x, y):\n    z = n * m\n    if z == 1:\n        return x\n    p = z % 2\n    q = z // 2\n    (x, y) = (min(x, y), min(2 * x, y))\n    return y * q + x * p\nfor t in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    print(greedyChoco(n, m, x, y))", "def greedyChoco(n, m, x, y):\n    if n * m == 1:\n        return x\n    p = (n * m + 1) // 2\n    q = n * m // 2\n    (x, y) = (min(x, y), min(2 * x, y))\n    return x * p + (y - x) * q\nfor t in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    print(greedyChoco(n, m, x, y))", "def greedyChoco(n, m, x, y):\n    if n * m == 1:\n        return x\n    p = (n * m + 1) // 2\n    q = n * m // 2\n    if y <= x:\n        return y * p\n    if 2 * x <= y:\n        return x * n * m\n    return x * p + (y - x) * q\nfor t in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    print(greedyChoco(n, m, x, y))", "try:\n    T = int(input())\n    while T:\n        T = T - 1\n        (a, b, x, y) = map(int, input().split(' '))\n        n = max(a, b)\n        m = min(a, b)\n        ans = 0\n        if 2 * x <= y:\n            ans = n * m * x\n        elif n == 1 and m == 1:\n            ans = x\n        elif m == 1:\n            if x > y:\n                x = y\n            ans = y * n // 2\n            if n % 2 != 0:\n                ans = ans + x\n        else:\n            if x > y:\n                x = y\n            r1 = y * (n // 2)\n            if n % 2 != 0:\n                r1 = r1 + x\n            r2 = y * (n // 2)\n            if n % 2 != 0:\n                r2 = r2 + y - x\n            kk = r1\n            for i in range(m):\n                ans = ans + kk\n                if kk == r1:\n                    kk = r2\n                else:\n                    kk = r1\n        print(ans)\nexcept:\n    pass", "for __ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n == 1 and m == 1:\n        ans = x\n    elif x >= y:\n        ans = n * m * y // 2 if n * m % 2 == 0 else (n * m + 1) // 2 * y\n    elif n * m % 2 == 0:\n        ans = n * m * x // 2\n        ans += n * m * min(x, y - x) // 2\n    else:\n        c1 = (n * m + 1) // 2\n        c2 = n * m - c1\n        ans = c1 * x\n        ans += c2 * min(x, y - x)\n    print(int(ans))", "def solve(n, m, x, y):\n    if y >= x:\n        q = x\n        w = min(y - x, x)\n    else:\n        q = 0\n        w = y\n    j = max(q, w)\n    k = min(q, w)\n    b = n * m\n    if b == 1:\n        return x\n    if b & 1 == 0:\n        ans = b // 2 * k + b // 2 * j\n    else:\n        ans = (b // 2 + 1) * j + b // 2 * k\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, m, x, y) = map(int, input().split())\n    print(solve(n, m, x, y))", "T = int(input())\nfor i in range(T):\n    (n, m, x, y) = map(int, input().split())\n    if n * m == 1:\n        print(x)\n    elif 2 * x <= y:\n        print(n * m * x)\n        continue\n    elif n * m % 2:\n        print((n * m - 1) * y // 2 + min(x, y))\n        continue\n    else:\n        print(n * m * y // 2)\n        continue", "try:\n    from math import ceil, floor\n    T = int(input())\n    for _ in range(T):\n        (N, M, X, Y) = [int(i) for i in input().split()]\n        if N == 1 and M == 1:\n            s = X\n            print(s)\n        else:\n            X = min(X, Y)\n            Y = min(2 * X, Y)\n            s = (N * M + 1) // 2 * X + N * M // 2 * (Y - X)\n            print(s)\nexcept EOFError:\n    pass", "from math import ceil, floor\nT = int(input())\nans = []\nfor _ in range(T):\n    (N, M, X, Y) = [int(i) for i in input().split()]\n    if N == 1 and M == 1:\n        s = X\n    else:\n        X = min(X, Y)\n        Y = min(2 * X, Y)\n        s = (N * M + 1) // 2 * X + N * M // 2 * (Y - X)\n    ans.append(s)\nfor i in ans:\n    print(i)", "t = 0\ntry:\n    t = int(input())\nexcept:\n    pass\nfor _ in range(t):\n    (n, m, x, y) = list(map(int, input().split()))\n    y = min(2 * x, y)\n    if n * m > 1:\n        x = min(x, y)\n    print((n * m + 1) // 2 * x + n * m // 2 * (y - x))", "from math import ceil, floor\nT = int(input())\nans = []\nfor _ in range(T):\n    (N, M, X, Y) = [int(i) for i in input().split()]\n    if N == 1 and M == 1:\n        s = X\n    else:\n        X = min(X, Y)\n        Y = min(2 * X, Y)\n        s = (N * M + 1) // 2 * X + N * M // 2 * (Y - X)\n    ans.append(s)\nfor i in ans:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    (n, m, x, y) = map(int, input().split())\n    tot = n * m\n    if n == 1 and m == 1:\n        ans = x\n    else:\n        part1 = min(x, y)\n        max_sum = min(2 * x, y)\n        part2 = max_sum - part1\n        ans = (tot + 1) // 2 * part1 + tot // 2 * part2\n    print(ans)", "for _ in range(int(input())):\n    (rows, columns, x, y) = map(int, input().split())\n    if rows == 1 and columns == 1:\n        print(x)\n    elif x < y:\n        if 2 * x <= y:\n            print(x * rows * columns)\n        elif rows * columns % 2 == 0:\n            print(y * (rows * columns // 2))\n        else:\n            print(y * (rows * columns // 2) + x)\n    elif rows * columns % 2 == 0:\n        print(y * (rows * columns // 2))\n    else:\n        print(y * (rows * columns // 2) + y)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n * m > 1:\n        x = min(x, y)\n        y = min(2 * x, y)\n        ans = (n * m + 1) // 2 * x + n * m // 2 * (y - x)\n        print(ans)\n    else:\n        print(x)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    mat = [[0 for x in range(m)] for y in range(n)]\n    if n * m > 1:\n        x = min(x, y)\n        y = min(2 * x, y)\n    for i in range(n):\n        for j in range(m):\n            if i == 0 and j == 0:\n                mat[i][j] = x\n            elif i == 0:\n                mat[i][j] = min(abs(mat[i][j - 1] - y), x)\n            elif j == 0:\n                mat[i][j] = min(abs(mat[i - 1][j] - y), x)\n            else:\n                mat[i][j] = min(abs(mat[i - 1][j] - y), abs(mat[i][j - 1] - y), x)\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            ans += mat[i][j]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m, x, y) = map(int, input().split())\n    tot = n * m\n    if n == 1 and m == 1:\n        ans = x\n    else:\n        part1 = min(x, y)\n        max_sum = min(2 * x, y)\n        part2 = max_sum - part1\n        ans = (tot + 1) // 2 * part1 + tot // 2 * part2\n    print(ans)", "def fun():\n    a = []\n    for i in range(m):\n        if i == 0:\n            if x <= y:\n                a.append(x)\n            else:\n                a.append(y)\n        elif y - a[i - 1] >= x:\n            a.append(x)\n        else:\n            a.append(y - a[i - 1])\n    return a\nfrom sys import stdin, stdout\nfor _ in range(int(stdin.readline().strip())):\n    (n, m, x, y) = map(int, stdin.readline().strip().split())\n    temp = []\n    if n == 1 and m == 1:\n        stdout.write(str(x) + '\\n')\n    else:\n        if m % 2 != 0:\n            temp = fun()\n            s2 = (sum(temp) + min(temp) - max(temp)) * (n // 2)\n            s1 = sum(temp) * (n // 2 + n % 2)\n            f = s1 + s2\n        else:\n            f = sum(fun())\n            f *= n\n        stdout.write(str(f) + '\\n')", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n * m > 1:\n        x = min(x, y)\n        y = min(2 * x, y)\n        ans = (n * m + 1) // 2 * x + n * m // 2 * (y - x)\n        print(ans)\n    else:\n        print(x)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m, x, y) = map(int, input().split())\n    if y >= 2 * x:\n        print(x * n * m)\n    elif n == 1 and m == 1:\n        print(x)\n    elif y <= x:\n        print((m * n + 1) // 2 * y)\n    else:\n        print((m * n + 1) // 2 * x + m * n // 2 * (y - x))", "def sol():\n    (n, m, x, y) = map(int, input().split())\n    if y >= 2 * x:\n        print(x * n * m)\n    elif n == 1 and m == 1:\n        print(x)\n    elif y <= x:\n        print((m * n + 1) // 2 * y)\n    else:\n        print((m * n + 1) // 2 * x + m * n // 2 * (y - x))\ntry:\n    for _ in range(int(input())):\n        sol()\nexcept:\n    pass", "def sol():\n    (n, m, x, y) = map(int, input().split())\n    if y >= 2 * x:\n        print(x * n * m)\n    elif n == 1 and m == 1:\n        print(x)\n    elif y <= x:\n        print((m * n + 1) // 2 * y)\n    else:\n        print((m * n + 1) // 2 * x + m * n // 2 * (y - x))\ntry:\n    for _ in range(int(input())):\n        sol()\nexcept:\n    pass", "import math\nt = int(input())\nwhile t:\n    t = t - 1\n    (n, m, x, y) = [int(i) for i in input().split()]\n    co = m * n\n    if n == 1 and m == 1:\n        print(x)\n        continue\n    elif x >= y:\n        if co % 2 == 0:\n            total = co // 2 * y\n        else:\n            total = (co - 1) // 2 * y + y\n    elif 2 * x <= y:\n        total = co * x\n    elif co % 2 == 0:\n        total = co // 2 * y\n    elif x >= y - x:\n        total = (co - 1) // 2 * y + x\n    else:\n        total = (co - 1) // 2 * y + (y - x)\n    print(total)", "t = int(input())\nb = []\nfor i in range(t):\n    (n, m, x, y) = map(int, input().split())\n    s = n * m\n    if s == 1:\n        print(x)\n    elif 2 * x <= y:\n        print(s * x)\n    elif 2 * x > y and x <= y:\n        if s % 2 == 0:\n            s = s // 2\n            print(s * y)\n        else:\n            s = s // 2\n            print(s * y + x)\n    elif s % 2 == 0:\n        s = s // 2\n        print(s * y)\n    else:\n        s = s // 2\n        print(s * y + y)", "T = int(input())\nfor i in range(T):\n    (N, M, X, Y) = map(int, input().split(' '))\n    cells = N * M\n    if cells == 1:\n        print(X)\n    elif Y >= 2 * X:\n        total = cells * X\n        print(total)\n    elif Y >= X:\n        if cells % 2 != 0:\n            total = cells // 2 * Y + X\n            print(total)\n        else:\n            total = cells // 2 * Y\n            print(total)\n    elif cells % 2 != 0:\n        total = (cells // 2 + 1) * Y\n        print(total)\n    else:\n        total = cells // 2 * Y\n        print(total)", "T = int(input())\nfor _ in range(T):\n    (N, M, X, Y) = map(int, input().split())\n    if M == N == 1:\n        print(X)\n    else:\n        if N * M > 1:\n            X = min(X, Y)\n        Y = min(2 * X, Y)\n        ans = (N * M + 1) // 2 * X + N * M // 2 * (Y - X)\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (r, c, x, y) = [int(i) for i in input().split()]\n    te = int(r * c / 2)\n    te2 = r * c - te\n    (c1, c2) = (0, 0)\n    if x >= y:\n        (c1, c2) = (0, y)\n    elif x > y - x:\n        c1 = y - x\n        c2 = x\n    else:\n        c1 = x\n        c2 = x\n    if te == max(te, te2):\n        (te2, te) = (te, te2)\n    te2 *= c2\n    te *= c1\n    if r * c != 1:\n        print(te + te2)\n    else:\n        print(x)", "t = int(input())\nfor i in range(t):\n    (n, m, x, y) = [int(i) for i in input().split()]\n    te = int(n * m / 2)\n    te2 = n * m - te\n    (c1, c2) = (0, 0)\n    if x >= y:\n        c2 = y\n        c1 = 0\n    elif x > y - x:\n        c1 = y - x\n        c2 = x\n    else:\n        c1 = x\n        c2 = x\n    if te > te2:\n        te *= c2\n        te2 *= c1\n    else:\n        te *= c1\n        te2 *= c2\n    if n * m != 1:\n        print(te + te2)\n    else:\n        print(x)", "from math import *\ntest = int(input())\nfor _ in range(test):\n    (a, b, c, d) = map(int, input().split())\n    k = a * b\n    if a == 1 and b == 1:\n        print(c)\n    elif 2 * c <= d:\n        print(c * k)\n    else:\n        print(min(c, d) * ceil(k / 2) + max(d - c, 0) * floor(k / 2))", "from math import *\nfor _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    k = a * b\n    if a == 1 and b == 1:\n        print(c)\n    elif 2 * c <= d:\n        print(c * k)\n    else:\n        print(min(c, d) * ceil(k / 2) + max(d - c, 0) * floor(k / 2))", "try:\n    t = int(input())\n    for i in range(t):\n        (n, m, x, y) = map(int, input().split())\n        if n and m == 1:\n            print(x)\n        else:\n            x = min(x, y)\n            y = min(y - x, x)\n            if m % 2 == 0:\n                a = x * m // 2\n                b = y * (m // 2)\n                result = (a + b) * n\n            else:\n                a = x * (m // 2 + 1) + y * (m // 2)\n                b = y * (m // 2 + 1) + x * (m // 2)\n                if n % 2 == 0:\n                    result = (a + b) * (n // 2)\n                else:\n                    result = a * (n // 2 + 1) + b * (n // 2)\n            print(result)\nexcept:\n    pass", "t = int(input())\nfor i in range(t):\n    (n, m, x, y) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(x)\n        continue\n    sum_ = 0\n    matrix = [[0 for l in range(m)] for t in range(n)]\n    for j in range(n):\n        for k in range(m):\n            candidate1 = 0\n            if j == 0 and k == 0:\n                candidate1 = min(x, y)\n            elif j == 0 and k != 0:\n                candidate1 = min(y - matrix[j][k - 1], x)\n            elif j != 0 and k == 0:\n                candidate1 = min(y - matrix[j - 1][k], x)\n            elif j != 0 and k != 0:\n                candidate1 = min(y - matrix[j - 1][k], y - matrix[j][k - 1], x)\n            matrix[j][k] = candidate1\n            sum_ = sum_ + candidate1\n    print(sum_)", "import math\nfor _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    low = min(2 * x, y) - min(x, y)\n    high = min(2 * x, y) - low\n    tot = m * n\n    if tot == 1:\n        print(x)\n    else:\n        print(high * math.ceil(tot / 2) + low * (tot // 2))", "import math\nfor _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    low = min(2 * x, y) - min(x, y)\n    high = min(2 * x, y) - low\n    tot = m * n\n    if tot == 1:\n        print(x)\n    else:\n        print(high * math.ceil(tot / 2) + low * (tot // 2))", "t = int(input())\nfor i in range(t):\n    (n, m, x, y) = map(int, input().split())\n    e = 0\n    e = m * n\n    if n == 1 and m == 1:\n        print(x)\n    elif n % 2 == 0 and m % 2 == 0:\n        if y > x:\n            if y >= 2 * x:\n                print(m * n * x)\n            else:\n                print(m * n * y // 2)\n        elif y < x:\n            print(e // 2 * y)\n    elif n % 2 != 0 and m % 2 != 0:\n        if y > x:\n            if y >= 2 * x:\n                print(m * n * x)\n            elif y < 2 * x:\n                print((e // 2 + 1) * x + (e - 1 - e // 2) * (y - x))\n        elif y < x:\n            print((e // 2 + 1) * y)\n    elif n % 2 != 0 and m % 2 == 0:\n        if y > x:\n            if y >= 2 * x:\n                print(n * m * x)\n            elif y < 2 * x:\n                print(e // 2 * (y - x) + e // 2 * x)\n        elif y < x:\n            print(e // 2 * y)\n    elif n % 2 == 0 and m % 2 != 0:\n        if y > x:\n            if y >= 2 * x:\n                print(n * m * x)\n            elif y < 2 * x:\n                print(e // 2 * x + e // 2 * (y - x))\n        elif y < x:\n            print(e // 2 * y)", "import math\nfor _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    low = min(2 * x, y) - min(x, y)\n    high = min(2 * x, y) - low\n    tot = m * n\n    if tot == 1:\n        print(x)\n    else:\n        print(high * math.ceil(tot / 2) + low * (tot // 2))", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().strip().split(' '))\n    val = -1\n    if n == 1 and m == 1:\n        val = x\n    elif n * m % 2 != 0:\n        if y > x:\n            if y >= 2 * x:\n                val = n * m * x\n            else:\n                val = n * m // 2 * (y - x) + (n * m // 2 + 1) * x\n        else:\n            val = (n * m // 2 + 1) * y\n    elif y > x:\n        if y >= 2 * x:\n            val = n * m * x\n        else:\n            val = n * m // 2 * x + n * m // 2 * (y - x)\n    else:\n        val = n * m // 2 * y\n    print(val)", "try:\n    t = int(input())\n    for _ in range(t):\n        (n, m, x, y) = map(int, input().split())\n        a = 0\n        if n * m == 1:\n            a = x\n        elif x * 2 <= y:\n            a = n * m * x\n        elif y >= x:\n            if n * m % 2 == 0:\n                a = n * m // 2 * y\n            else:\n                a = n * m // 2 * y + x\n        else:\n            a = (n * m + 1) // 2 * y\n        print(a)\nexcept:\n    pass", "try:\n    t = int(input())\n    for _ in range(t):\n        (n, m, x, y) = map(int, input().split())\n        a = 0\n        if n * m == 1:\n            a = x\n        elif x * 2 <= y:\n            a = n * m * x\n        elif y >= x:\n            if n * m % 2 == 0:\n                a = n * m // 2 * y\n            else:\n                a = n * m // 2 * y + x\n        else:\n            a = (n * m + 1) // 2 * y\n        print(a)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, m, x, y) = list(map(int, input().split()))\n    a = 0\n    if n * m == 1:\n        a = x\n    elif x * 2 <= y:\n        a = n * m * x\n    elif y >= x:\n        if n * m % 2 == 0:\n            a = n * m // 2 * y\n        else:\n            a = n * m // 2 * y + x\n    else:\n        a = (n * m + 1) // 2 * y\n    print(a)", "test = int(input())\nfor _ in range(test):\n    (a, b, c, d) = map(int, input().split())\n    m = a * b // 2\n    if a * b == 1:\n        ans = c\n    elif c * 2 <= d:\n        ans = c * a * b\n    elif d >= c:\n        if a * b % 2 != 0:\n            ans = m * d + c\n        else:\n            ans = m * d\n    else:\n        ans = (a * b + 1) // 2 * d\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m, x, y) = map(int, input().split())\n    a = 0\n    if n * m == 1:\n        a = x\n    elif x * 2 <= y:\n        a = n * m * x\n    elif y >= x:\n        if n * m % 2 == 0:\n            a = n * m // 2 * y\n        else:\n            a = n * m // 2 * y + x\n    else:\n        a = (n * m + 1) // 2 * y\n    print(a)", "import math\nfor _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if m * n == 1:\n        print(x)\n        continue\n    x = min(x, y)\n    y = min(2 * x, y)\n    ans = (n * m + 1) // 2 * x + m * n // 2 * (y - x)\n    print(ans)", "from sys import stdin\n\ndef solve(n, m, x, y):\n    if n == m == 1:\n        return x\n    high_candy = min(x, y)\n    if x >= y:\n        low_candy = 0\n    else:\n        low_candy = min(x, y - x)\n    high_boxes = (m // 2 + m % 2) * (n // 2 + n % 2) + m // 2 * (n // 2)\n    low_boxes = m // 2 * (n // 2 + n % 2) + (m // 2 + m % 2) * (n // 2)\n    total = low_candy * low_boxes + high_candy * high_boxes\n    return total\nfor _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    print(solve(n, m, x, y))", "def chechoc(n, m, x, y):\n    if n * m == 1:\n        return x\n    elif y >= x * 2:\n        max = x\n        min = x\n        check = n * m\n        if check % 2 == 1:\n            max = max * (check + 1) // 2\n            min = min * (check - 1) // 2\n            return max + min\n        else:\n            return max * check // 2 + min * check // 2\n    elif y >= x:\n        max = x\n        min = y - x\n        check = n * m\n        if check % 2 == 1:\n            max = max * (check + 1) // 2\n            min = min * (check - 1) // 2\n            return max + min\n        else:\n            return max * check // 2 + min * check // 2\n    else:\n        max = y\n        min = 0\n        check = n * m\n        if check % 2 == 1:\n            max = max * (check + 1) // 2\n            min = min * (check - 1) // 2\n            return max + min\n        else:\n            return max * check // 2 + min * check // 2\nt = int(input())\nwhile t:\n    (n, m, x, y) = list(map(int, input().split()))\n    ans = chechoc(n, m, x, y)\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    ans = 0\n    if n * m == 1:\n        ans = x\n    elif x * 2 <= y:\n        ans = n * m * x\n    elif y >= x:\n        if n * m % 2 == 0:\n            ans = n * m // 2 * y\n        else:\n            ans = n * m // 2 * y + x\n    else:\n        ans = (n * m + 1) // 2 * y\n    print(ans)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    ans = 0\n    if n * m == 1:\n        ans = x\n    elif x * 2 <= y:\n        ans = n * m * x\n    elif y >= x:\n        if n * m % 2 == 0:\n            ans = n * m // 2 * y\n        else:\n            ans = n * m // 2 * y + x\n    else:\n        ans = (n * m + 1) // 2 * y\n    print(ans)", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        if y >= x:\n            a = x\n            if y - x > x:\n                b = x\n            else:\n                b = y - x\n        else:\n            a = y\n            b = 0\n        total = (n * m + 1) // 2 * a + n * m // 2 * b\n        print(total)", "t = int(input())\nfor i in range(t):\n    (n, m, x, y) = map(int, input().split())\n    s = 0\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        x = min(x, y)\n        y = min(2 * x, y)\n        v = (n * m + 1) // 2 * x + n * m // 2 * (y - x)\n        print(v)", "t = int(input())\nfor _ in range(t):\n    t -= 1\n    (n, m, x, y) = map(int, input().split())\n    if x < y:\n        (aa, bb) = (x, min(x, y - x))\n    else:\n        (aa, bb) = (y, 0)\n    s = 0\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    s += aa\n                else:\n                    s += bb\n        print(s)", "t = int(input())\nfor _ in range(t):\n    t -= 1\n    (n, m, x, y) = map(int, input().split())\n    if x < y:\n        (aa, bb) = (x, min(x, y - x))\n    else:\n        (aa, bb) = (y, 0)\n    s = 0\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    s += aa\n                else:\n                    s += bb\n        print(s)", "import math\nfor _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    s = n * m\n    v = math.ceil(s / 2)\n    if m * n == 1:\n        print(x)\n    elif y >= 2 * x:\n        print(m * n * x)\n    elif y > x:\n        k = v * x\n        l = (s - v) * (y - x)\n        print(k + l)\n    elif y <= x:\n        k = v * min(x, y)\n        print(k)", "for _ in range(int(input())):\n    (r, c, x, y) = map(int, input().split())\n    if r == 1 and c == 1:\n        print(x)\n    else:\n        if y >= x:\n            first = x\n            second = y - x\n            if second <= x:\n                pass\n            else:\n                second = first\n        else:\n            first = y\n            second = 0\n        if c % 2 == 0:\n            one = c // 2 * first + c // 2 * second\n            print(one * r)\n        else:\n            one = c // 2 * second + (c // 2 + 1) * first\n            two = c // 2 * first + (c // 2 + 1) * second\n            if r % 2 == 0:\n                print(r // 2 * two + r // 2 * one)\n            else:\n                print(r // 2 * two + (r // 2 + 1) * one)", "t = int(input())\nfor i in range(t):\n    (n, m, x, y) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        total = n * m\n        if y > 2 * x:\n            print(n * m * x)\n        elif y <= x:\n            if total % 2 == 0:\n                print(y * (total // 2))\n            else:\n                print(y * (total // 2 + 1))\n        elif total % 2 == 0:\n            print(y * (total // 2))\n        else:\n            print(x * (total // 2 + 1) + (y - x) * (total // 2))", "t = int(input())\nfor i in range(t):\n    (n, m, x, y) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(x)\n    else:\n        b = min(y, x)\n        a = min(x, y - b)\n        total = n * m\n        if total % 2 == 0:\n            print((a + b) * (total // 2))\n        else:\n            print(b * (total // 2 + 1) + a * (total // 2))", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    X = min(x, y)\n    Y = min(2 * x, y)\n    ans = 0\n    if n == m == 1:\n        print(x)\n        continue\n    else:\n        ans = (n * m + 1) // 2 * X + n * m // 2 * (Y - X)\n    print(ans)", "import math\nt = int(input())\nwhile t > 0:\n    a = list(map(int, input().split()))\n    n = a[0]\n    m = a[1]\n    x = a[2]\n    y = a[3]\n    if n == 1 and m == 1:\n        ans = x\n    elif 2 * x <= y:\n        ans = n * m * x\n    elif n * m % 2 != 0:\n        ans = y * (n * m - 1) / 2.0 + min(x, y)\n    else:\n        ans = y * n * m / 2.0\n    print(int(ans))\n    t -= 1", "import math\nt = int(input())\nwhile t > 0:\n    a = list(map(int, input().split()))\n    n = a[0]\n    m = a[1]\n    x = a[2]\n    y = a[3]\n    if n == 1 and m == 1:\n        ans = x\n    elif 2 * x <= y:\n        ans = n * m * x\n    elif n * m % 2 != 0:\n        ans = y * (n * m - 1) / 2.0 + min(x, y)\n    else:\n        ans = y * n * m / 2.0\n    print(int(ans))\n    t -= 1", "import math\nt = int(input())\nwhile t > 0:\n    a = list(map(int, input().split()))\n    n = a[0]\n    m = a[1]\n    x = a[2]\n    y = a[3]\n    if n == 1 and m == 1:\n        ans = x\n    elif 2 * x <= y:\n        ans = n * m * x\n    elif n * m % 2 != 0:\n        ans = y * (n * m - 1) / 2.0 + min(x, y)\n    else:\n        ans = y * n * m / 2.0\n    print(int(ans))\n    t -= 1", "import math\nt = int(input())\nwhile t > 0:\n    a = list(map(int, input().split()))\n    n = a[0]\n    m = a[1]\n    x = a[2]\n    y = a[3]\n    if n == 1 and m == 1:\n        ans = x\n    elif 2 * x <= y:\n        ans = n * m * x\n    elif n * m % 2 != 0:\n        ans = y * (n * m - 1) / 2.0 + min(x, y)\n    else:\n        ans = y * n * m / 2.0\n    print(int(ans))\n    t -= 1", "for _ in range(int(input())):\n    (n, m, x, y) = map(int, input().split())\n    ans = 0\n    if n * m == 1:\n        ans = x\n    elif x * 2 <= y:\n        ans = n * m * x\n    elif y >= x:\n        if n * m % 2 == 0:\n            ans = n * m // 2 * y\n        else:\n            ans = n * m // 2 * y + x\n    else:\n        ans = (n * m + 1) // 2 * y\n    print(ans)", "from math import *\nfor _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    k = a * b\n    if a == 1 and b == 1:\n        print(c)\n    elif 2 * c <= d:\n        print(c * k)\n    else:\n        print(min(c, d) * ceil(k / 2) + max(d - c, 0) * floor(k / 2))"]