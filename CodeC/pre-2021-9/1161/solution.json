["cost = list(map(int, input().split()))\nbeauty = [-2, -1, 0, 1, 2]\nq = int(input())\ninf = float('inf')\ndp = [[-1] * 801 for _ in range(101)]\n\ndef f(x, y):\n    if abs(y) > 2 * x:\n        dp[x][y + 400] = inf\n        return inf\n    if dp[x][y + 400] != -1:\n        return dp[x][y + 400]\n    if x == 0:\n        dp[x][y + 400] = 0 if y == 0 else inf\n        return dp[x][y + 400]\n    dp[x][y + 400] = cost[0] + f(x - 1, y + 2)\n    for i in range(1, 5):\n        dp[x][y + 400] = min(dp[x][y + 400], f(x - 1, y - beauty[i]) + cost[i])\n    return dp[x][y + 400]\nfor i in range(101):\n    for j in range(-400, 401):\n        f(i, j)\nfor _ in range(q):\n    (x, y) = map(int, input().split())\n    ans = f(x, y)\n    print(-1 if ans == inf else ans)", "cost = list(map(int, input().split()))\nbeauty = [-2, -1, 0, 1, 2]\nq = int(input())\ninf = float('inf')\ndp = [[-1] * 801 for _ in range(101)]\n\ndef f(x, y):\n    if abs(y) > 2 * x:\n        dp[x][y + 400] = inf\n        return inf\n    if dp[x][y + 400] != -1:\n        return dp[x][y + 400]\n    if x == 0:\n        dp[x][y + 400] = 0 if y == 0 else inf\n        return dp[x][y + 400]\n    dp[x][y + 400] = cost[0] + f(x - 1, y + 2)\n    for i in range(1, 5):\n        dp[x][y + 400] = min(dp[x][y + 400], f(x - 1, y - beauty[i]) + cost[i])\n    return dp[x][y + 400]\nfor i in range(101):\n    for j in range(-400, 401):\n        f(i, j)\nfor _ in range(q):\n    (x, y) = map(int, input().split())\n    ans = f(x, y)\n    print(-1 if ans == inf else ans)", "(s, g, q, r, d) = map(int, input().split())\nsol = []\nfor i in range(101):\n    so = []\n    for j in range(401):\n        so.append(-1)\n    sol.append(so)\nfor x in range(101):\n    for y in range(-200, 201):\n        if x == 0:\n            if y == 0:\n                sol[x][y + 200] = 0\n            else:\n                sol[x][y + 200] = 1000000000\n        elif y < -2 * x or y > 2 * x:\n            sol[x][y + 200] = 1000000000\n        else:\n            (k1, k2, k3, k4, k5) = [10 ** 9] * 5\n            if y + 2 + 200 < 401:\n                k1 = sol[x - 1][y + 2 + 200] + s\n            if y + 1 + 200 < 401:\n                k2 = sol[x - 1][y + 1 + 200] + g\n            if y + 200 < 401:\n                k3 = sol[x - 1][y + 200] + q\n            if y - 1 + 200 >= 0:\n                k4 = sol[x - 1][y - 1 + 200] + r\n            if y - 2 + 200 >= 0:\n                k5 = sol[x - 1][y - 2 + 200] + d\n            sol[x][y + 200] = min(k1, k2, k3, k4, k5)\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x == 0:\n        if y == 0:\n            print(0)\n        else:\n            print(-1)\n    elif sol[x][y + 200] > 100000000:\n        print(-1)\n    else:\n        print(sol[x][y + 200])", "a = list(map(int, input().split()))\n(s, g, q, r, d) = a\nsol = []\nfor i in range(101):\n    so = []\n    for j in range(401):\n        so.append(-1)\n    sol.append(so)\nfor x in range(101):\n    for y in range(-200, 201):\n        if x == 0:\n            if y == 0:\n                sol[x][y + 200] = 0\n            else:\n                sol[x][y + 200] = 1000000000\n        elif y < -2 * x or y > 2 * x:\n            sol[x][y + 200] = 1000000000\n        else:\n            (k1, k2, k3, k4, k5) = [10 ** 9] * 5\n            if y + 2 + 200 < 401:\n                k1 = sol[x - 1][y + 2 + 200] + a[0]\n            if y + 1 + 200 < 401:\n                k2 = sol[x - 1][y + 1 + 200] + a[1]\n            if y + 200 < 401:\n                k3 = sol[x - 1][y + 200] + a[2]\n            if y - 1 + 200 >= 0:\n                k4 = sol[x - 1][y - 1 + 200] + a[3]\n            if y - 2 + 200 >= 0:\n                k5 = sol[x - 1][y - 2 + 200] + a[4]\n            sol[x][y + 200] = min(k1, k2, k3, k4, k5)\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x == 0:\n        if y == 0:\n            print('0')\n        else:\n            print('-1')\n    elif sol[x][y + 200] > 100000000:\n        print('-1')\n    else:\n        print(sol[x][y + 200])"]