["T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    if n != 0:\n        kk = k // 2\n        nn = n + kk - 1\n        nn = nn * (nn + 1)\n        if k % 2 == 0:\n            nn = (nn + n) % 1000000007\n        else:\n            nn = (nn + kk + n + kk) % 1000000007\n        print(nn)\n    else:\n        k = k - 1\n        k = k * (k + 1) % 1000000007\n        print(k)", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    if n != 0:\n        kk = k // 2\n        nn = n + kk - 1\n        nn = nn * (nn + 1)\n        if k % 2 == 0:\n            nn = (nn + n) % 1000000007\n        else:\n            nn = (nn + kk + n + kk) % 1000000007\n        print(nn)\n    else:\n        k = k - 1\n        k = k * (k + 1) % 1000000007\n        print(k)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    if n != 0:\n        kk = k // 2\n        nn = n + kk - 1\n        nn = nn * (nn + 1)\n        if k % 2 == 0:\n            nn = (nn + n) % 1000000007\n        else:\n            nn = (nn + kk + n + kk) % 1000000007\n        print(nn)\n    else:\n        k = k - 1\n        k = k * (k + 1) % 1000000007\n        print(k)", "test = int(input())\nMOD = int(1000000000.0 + 7)\nfor _ in range(test):\n    (n, k) = [int(a) for a in input().split()]\n    m = k // 2\n    ans = (n + m) * (n + m) - m\n    if k % 2:\n        ans += 2 * m\n    if n == 0:\n        ans = k * (k - 1)\n    print(ans % MOD)", "T = int(input())\nMOD = int(1000000000.0 + 7)\nfor t in range(T):\n    (N, K) = [int(a) for a in input().split()]\n    M = K // 2\n    ans = (N + M) * (N + M) - M\n    if K % 2:\n        ans += 2 * M\n    if N == 0:\n        ans = K * (K - 1)\n    print(ans % MOD)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0 and k == 1:\n        print(0)\n    elif n == 0:\n        print(k * (k - 1) % q)\n    else:\n        m = n + 1\n        q = 10 ** 9 + 7\n        if k % 2 == 0:\n            m += k // 2 - 1\n            print((m ** 2 + n - m) % q)\n        else:\n            m += (k + 1) // 2 - 1\n            print((m ** 2 - n - m) % q)", "t = int(input())\nwhile t > 0:\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    if n == 0:\n        tim = k * (k - 1)\n        tim %= 1000000007\n        print(tim)\n    else:\n        if k % 2 == 0:\n            tim = n * n + n * k + k // 2 * (k // 2 - 1)\n        else:\n            tim = n * n + 2 * n * (k // 2) + k // 2 * (k // 2 + 1)\n        tim %= 1000000007\n        print(tim)\n    t -= 1", "MOD = 1000000007\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = n * (n - 1)\n    if not n:\n        print(k * (k - 1) % MOD)\n    elif k & 1:\n        print((2 * n + (n + (k - 1) // 2) * (n + (k - 1) // 2 + 1) - (n + 1) * n - n + x) % MOD)\n    else:\n        print((2 * n + (n + (k - 2) // 2) * (n + (k - 2) // 2 + 1) - (n + 1) * n + n + x) % MOD)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        print(k * (k - 1) % (10 ** 9 + 7))\n    else:\n        t = n * n\n        t += k // 2 * (n * 2)\n        t += (k + 1) // 2 * ((k + 1) // 2 - 1)\n        print(t % (10 ** 9 + 7))", "mod = 10 ** 9 + 7\nfrom math import ceil, floor\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        print(k * (k - 1) % mod)\n        continue\n    if k == 0:\n        print(0)\n        continue\n    else:\n        print((n ** 2 + floor(k / 2) * 2 * n + ceil(k / 2) * ceil(k / 2 - 1)) % mod)", "import math\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    s = input().split(' ')\n    n = int(s[0])\n    k = int(s[1])\n    k = k - 1\n    ans = 0\n    if n == 0:\n        ans = k * (k + 1)\n    elif k % 2 != 0:\n        k = math.floor(k / 2)\n        ans = (n + k) * (n + k + 1) + n\n    else:\n        k = math.floor(k / 2)\n        ans = (n + k) * (n + k + 1) - n\n    ans = ans % 1000000007\n    print(ans)", "t = int(input())\nwhile t:\n    mod = 1000000007\n    (n, k) = list(map(int, input().split()))\n    k %= mod\n    if n == 0:\n        print(k * (k - 1) % mod)\n    else:\n        ans = n * n\n        ans %= mod\n        ans += 2 * (k // 2) * n\n        ans %= mod\n        k = (k + 1) // 2\n        ans += k * (k - 1)\n        ans %= mod\n        print(ans)\n    t -= 1", "mod = 1000000007\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = k // 2\n    ans = 0\n    if n == 0 and k == 1:\n        ans = 0\n    elif n == 0 and k > 1:\n        ans = (k - 1) * k\n    elif k == 1:\n        ans = n * (n - 1) % mod\n        ans = (ans + n) % mod\n    elif k % 2 != 0:\n        ans = (n + a) * (n + a + 1) % mod\n        ans = (ans - n) % mod\n    elif k % 2 == 0:\n        ans = (n + a - 1) * (n + a) % mod\n        ans = (ans + n) % mod\n    print(ans % mod)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        t = k * (k - 1) % 1000000007\n        print(t)\n    elif k == 1:\n        t = n ** 2 % 1000000007\n        print(t)\n    else:\n        turn = k // 2\n        p = turn + n\n        if k % 2 == 0:\n            print((p ** 2 - turn) % 1000000007)\n        else:\n            print((p ** 2 + turn) % 1000000007)", "from math import ceil\nmod = 10 ** 9 + 7\n\ndef sum_till_nth_term(n):\n    return n * (2 + (n - 1)) % mod\nfor _ in range(int(input())):\n    (N, K) = list(map(int, input().split()))\n    ans = 0\n    if K == 1:\n        print(N ** 2 % mod)\n    elif N == 0:\n        print(sum_till_nth_term(K - 1))\n    elif K > 1:\n        ans += (N ** 2 + N) % mod\n        K -= 1\n        i = 1\n        term_req = ceil(K / 2) - 1\n        x = sum_till_nth_term(N)\n        y = sum_till_nth_term(N + term_req)\n        ans += (y - x) % mod\n        K -= term_req * 2\n        if K == 1:\n            ans += N\n            ans %= mod\n        else:\n            v = (N + (term_req + 1) * 2) % mod\n            ans += v\n            ans %= mod\n        print(ans % mod)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    mod = 10 ** 9 + 7\n    su = 0\n    if n == 0:\n        su = k * (k - 1)\n    elif k % 2 == 0:\n        k = k // 2 + n - 1\n        su = k * (k + 1)\n        su += n\n    else:\n        k = k // 2 + n\n        su = k * (k + 1)\n        su -= n\n    print(su % mod)", "def f():\n    (n, k) = map(int, input().split(' '))\n    if n == 0:\n        return k * (k - 1) % (10 ** 9 + 7)\n    if (k - 1) % 2 == 0:\n        N = n + (k - 1) // 2\n        t = -n + N * (N + 1)\n    else:\n        N = n + (k - 1) // 2\n        t = n + N * (N + 1)\n    return t % (10 ** 9 + 7)\nfor i in range(int(input())):\n    print(f())", "n = int(input())\nfor i in range(n):\n    (x, y) = map(int, input().split(' '))\n    c = 1000000007\n    if x >= 0 and y > 0:\n        if x > 0:\n            if y % 2 != 0:\n                k = (y - 1) // 2\n                l = (x + k) ** 2\n                print((l + k) % c)\n            else:\n                k = y // 2\n                l = (x + k) ** 2\n                print((l - k) % c)\n        else:\n            l = y ** 2\n            print((l - y) % c)", "n = int(input())\nfor i in range(n):\n    (x, y) = map(int, input().split(' '))\n    c = 1000000007\n    if x >= 0 and y > 0:\n        if x > 0:\n            if y % 2 != 0:\n                k = (y - 1) // 2\n                l = (x + k) ** 2\n                print((l + k) % c)\n            else:\n                k = y // 2\n                l = (x + k) ** 2\n                print((l - k) % c)\n        else:\n            l = y ** 2\n            print((l - y) % c)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 0:\n        print(b * (b - 1) % 1000000007)\n    elif b == 1:\n        print(a * a % 1000000007)\n    else:\n        if b % 2 == 0:\n            p = ((b - 2) // 2 + a) % 1000000007\n            r = p * (p + 1) + a\n        else:\n            p = ((b - 1) // 2 + a) % 1000000007\n            r = p * (p + 1) - a\n        print(r % 1000000007)", "M = 10 ** 9 + 7\n\ndef solve(n, k):\n    count = n ** 2 % M\n    if n == 0:\n        count = (k - 1) * k % M\n    elif k % 2 == 0:\n        count = (count + n * k + (k - 2) * k // 4) % M\n    else:\n        count = (count + n * (k - 1) + (k - 1) * (k + 1) // 4) % M\n    return count\nfor t in range(int(input().strip())):\n    (n, k) = tuple(map(int, input().strip().split()))\n    print(solve(n, k))", "import math\nmod = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    (N, k) = map(int, input().strip().split())\n    if N == 0:\n        t = (k ** 2 - k) % mod\n        print(t)\n        continue\n    l = math.ceil((k - 1) / 2) + N\n    z = (k - 1) % 2\n    t = l ** 2\n    m = l - N\n    if z == 0:\n        t += m\n    else:\n        t -= m\n    print(t % mod)", "import math\nmod = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    (N, k) = map(int, input().strip().split())\n    if N == 0:\n        t = (k ** 2 - k) % mod\n        print(t)\n        continue\n    if N == 1:\n        l = math.ceil((k - 1) / 2) + 1\n        z = (k - 1) % 2\n        t = l ** 2\n        m = l - N\n        if z == 0:\n            t += m\n        else:\n            t -= m\n        print(t % mod)\n        continue\n    R = (N + (k - 1) // 2 + (k - 1) % 2) % mod\n    z = (k - 1) % 2\n    t = ((R - 1) ** 2 + (R - 1) + N) % mod\n    if z == 0:\n        t += 2 * (R - N) % mod\n    print(t % mod)", "import collections\n\ndef solve(n, k):\n    MOD = 10 ** 9 + 7\n    if n == 0:\n        return k * (k - 1) % MOD\n    else:\n        return (n ** 2 + k // 2 * 2 * n + (k + 1) // 2 * ((k + 1) // 2 - 1)) % MOD\nt = int(input().strip())\nfor i in range(t):\n    [n, k] = list(map(int, input().strip().split()))\n    print(solve(n, k))", "import math\nMOD = int(1000000000.0 + 7)\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    m = k // 2\n    x = (m + n) * (m + n) - m\n    if k % 2 == 1:\n        x += 2 * m\n    if n == 0:\n        x = k * (k - 1)\n    print(x % MOD)", "from math import pi\nfrom collections import deque\nfrom math import factorial\nfrom math import log, ceil\nfrom collections import defaultdict\nfrom math import *\nfrom sys import stdin, stdout\nimport itertools\nimport os\nimport sys\nimport threading\nfrom collections import deque, Counter, OrderedDict, defaultdict\nfrom heapq import *\nfrom fractions import Fraction\nmod = int(pow(10, 9) + 7)\n\ndef ii():\n    return int(input())\n\ndef si():\n    return str(input())\n\ndef mi():\n    return map(int, input().split())\n\ndef li1():\n    return list(mi())\n\ndef fii():\n    return int(stdin.readline())\n\ndef fsi():\n    return str(stdin.readline())\n\ndef fmi():\n    return map(int, stdin.readline().split())\n\ndef fli():\n    return list(fmi())\nabd = {'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\n\ndef getKey(item):\n    return item[0]\n\ndef sort2(l):\n    return sorted(l, key=getKey)\n\ndef d2(n, m, num):\n    return [[num for x in range(m)] for y in range(n)]\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\n\ndef decimalToBinary(n):\n    return bin(n).replace('0b', '')\n\ndef ntl(n):\n    return [int(i) for i in str(n)]\n\ndef powerMod(x, y, p):\n    res = 1\n    x %= p\n    while y > 0:\n        if y & 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\ngraph = defaultdict(list)\nvisited = [0] * 1000000\ncol = [-1] * 1000000\n\ndef bfs(d, v):\n    q = []\n    q.append(v)\n    visited[v] = 1\n    while len(q) != 0:\n        x = q[0]\n        q.pop(0)\n        for i in d[x]:\n            if visited[i] != 1:\n                visited[i] = 1\n                q.append(i)\n        print(x)\n\ndef make_graph(e):\n    d = {}\n    for i in range(e):\n        (x, y) = mi()\n        if x not in d:\n            d[x] = [y]\n        else:\n            d[x].append(y)\n        if y not in d:\n            d[y] = [x]\n        else:\n            d[y].append(x)\n    return d\n\ndef gr2(n):\n    d = defaultdict(list)\n    for i in range(n):\n        (x, y) = mi()\n        d[x].append(y)\n    return d\n\ndef connected_components(graph):\n    seen = set()\n\n    def dfs(v):\n        vs = set([v])\n        component = []\n        while vs:\n            v = vs.pop()\n            seen.add(v)\n            vs |= set(graph[v]) - seen\n            component.append(v)\n        return component\n    ans = []\n    for v in graph:\n        if v not in seen:\n            d = dfs(v)\n            ans.append(d)\n    return ans\n\ndef primeFactors(n):\n    s = set()\n    while n % 2 == 0:\n        s.add(2)\n        n = n // 2\n    for i in range(3, int(sqrt(n)) + 1, 2):\n        while n % i == 0:\n            s.add(i)\n            n = n // i\n    if n > 2:\n        s.add(n)\n    return s\n\ndef find_all(a_str, sub):\n    start = 0\n    while True:\n        start = a_str.find(sub, start)\n        if start == -1:\n            return\n        yield start\n        start += len(sub)\n\ndef SieveOfEratosthenes(n, isPrime):\n    isPrime[0] = isPrime[1] = False\n    for i in range(2, n):\n        isPrime[i] = True\n    p = 2\n    while p * p <= n:\n        if isPrime[p] == True:\n            i = p * p\n            while i <= n:\n                isPrime[i] = False\n                i += p\n        p += 1\n    return isPrime\n\ndef dijkstra(edges, f, t):\n    g = defaultdict(list)\n    for (l, r, c) in edges:\n        g[l].append((c, r))\n    (q, seen, mins) = ([(0, f, ())], set(), {f: 0})\n    while q:\n        (cost, v1, path) = heappop(q)\n        if v1 not in seen:\n            seen.add(v1)\n            path = (v1, path)\n            if v1 == t:\n                return (cost, path)\n            for (c, v2) in g.get(v1, ()):\n                if v2 in seen:\n                    continue\n                prev = mins.get(v2, None)\n                next = cost + c\n                if prev is None or next < prev:\n                    mins[v2] = next\n                    heappush(q, (next, v2, path))\n    return float('inf')\n\ndef binsearch(a, l, r, x):\n    while l <= r:\n        mid = l + (r - 1) // 2\n        if a[mid]:\n            return mid\n        elif a[mid] > x:\n            l = mid - 1\n        else:\n            r = mid + 1\n    return -1\n\ndef readTree(n):\n    adj = [set() for _ in range(n)]\n    for _ in range(n - 1):\n        (u, v) = map(int, input().split())\n        adj[u - 1].add(v - 1)\n        adj[v - 1].add(u - 1)\n    return adj\n\ndef treeOrderByDepth(n, adj, root=0):\n    parent = [-2] + [-1] * (n - 1)\n    ordered = []\n    q = deque()\n    q.append(root)\n    depth = [0] * n\n    while q:\n        c = q.popleft()\n        ordered.append(c)\n        for a in adj[c]:\n            if parent[a] == -1:\n                parent[a] = c\n                depth[a] = depth[c] + 1\n                q.append(a)\n    return (ordered, parent, depth)\nfor _ in range(ii()):\n    (n, k) = mi()\n    if n == 0:\n        k -= 1\n        ans = k * (k + 1) % mod\n    elif k % 2 != 0:\n        lr = k // 2\n        ans = (n * n % mod + lr * (2 * n % mod) % mod + lr * (lr + 1) % mod) % mod\n    else:\n        lr = k // 2\n        ans = (n * n % mod + lr * (2 * n) % mod % mod + lr * (lr - 1) % mod) % mod\n    print(ans)", "T = int(input())\nfor case in range(T):\n    (N, K) = input().split()\n    N = int(N)\n    K = int(K)\n    sec = 0\n    first_loc = 0\n    if N == 0:\n        print((K ** 2 - K) % 1000000007)\n    else:\n        first_loc = N + K // 2\n        sec = first_loc ** 2 - first_loc\n        if K % 2 == 0:\n            print((sec + N) % 1000000007)\n        else:\n            sec = (first_loc + 1) ** 2 - (first_loc + 1)\n            print((sec - N) % 1000000007)", "mod = int(1000000000.0 + 7)\nfor __ in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = k // 2\n    if k == 1:\n        ans = n * n % mod\n    elif n == 0:\n        ans = k * (k - 1) % mod\n    elif k % 2 == 0:\n        ans = ((n + m) * (n + m) % mod - m) % mod\n    elif k % 2 == 1:\n        ans = ((n + m) * (n + m) % mod + m) % mod\n    print(ans)", "mod = int(1000000000.0 + 7)\nfor __ in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = k // 2\n    if k == 1:\n        ans = n * n % mod\n    elif n == 0:\n        ans = k * (k - 1) % mod\n    elif k % 2 == 0:\n        ans = ((n + m) * (n + m) % mod - m) % mod\n    elif k % 2 == 1:\n        ans = ((n + m) * (n + m) % mod + m) % mod\n    if ans < 0:\n        ans += mod\n    print(ans)", "T = int(input())\nMOD = int(1000000000.0 + 7)\nfor t in range(T):\n    (N, K) = [int(a) for a in input().split()]\n    M = K // 2\n    ans = (N + M) * (N + M) - M\n    if K % 2:\n        ans += 2 * M\n    if N == 0:\n        ans = K * (K - 1)\n    print(ans % MOD)", "for t in range(int(input())):\n    MOD = 1000000007\n    (N, K) = map(int, input().split())\n    M = K // 2\n    ans = (N + M) * (N + M) - M\n    if K % 2:\n        ans += 2 * M\n    if N == 0:\n        ans = K * (K - 1)\n    print(ans % MOD)", "mod = 10 ** 9 + 7\nfor k in range(int(input())):\n    (num, times) = map(int, input().split())\n    if num == 0:\n        x = times - 1\n        ans = (x % mod * (x % mod) % mod + x % mod) % mod\n    elif times % 2 == 0:\n        x = num + (times - 1) // 2\n        ans = (x % mod * (x + 1) % mod + x % mod + num % mod - x % mod) % mod\n    else:\n        x = num + (times - 1) // 2\n        ans = (x % mod * (x + 1) % mod + x % mod - num % mod - x % mod) % mod\n    print(ans)", "tc = int(input())\nfor _ in range(tc):\n    (n, k) = list(map(int, input().split()))\n    if n == 0:\n        summ = (k - 1) * k\n    else:\n        m = n + (k - 1) // 2\n        if (k - 1) % 2 == 0:\n            summ = m * (m + 1) - n\n        else:\n            summ = m * (m + 1) + n\n    print(summ % 1000000007)", "m = int(1000000000.0) + 7\nfor _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    if n == 0:\n        print((k - 1) * k % m)\n    else:\n        total = (n - 1) * n\n        total = total % m\n        x = k // 2\n        a = n * x % m\n        b = (x - 1) * x // 2 % m\n        total += 2 * (a + b) % m\n        total = total % m\n        if k & 1 == 0:\n            print((total + n) % m)\n        else:\n            print((total + (n + x) % m + x) % m)", "module = 1000000007\n\ndef timeOfNthRound(n):\n    if n % 2 != 0:\n        r = n * (int(n / 2) + 1) % module\n    if n % 2 == 0:\n        r = (n - 1) * int(n / 2) % module + n\n    return 2 * (r % module) % module\nT = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        result = timeOfNthRound(k - 1)\n    else:\n        result = timeOfNthRound(n + int(k / 2) - 1)\n        if k == 1 or k % 2 == 0:\n            result += n\n        else:\n            result += 2 * ((n + int(k / 2)) % module) - n\n    result %= module\n    print(result)", "T = int(input())\nMOD = int(1000000000.0 + 7)\nfor t in range(T):\n    (N, K) = [int(a) for a in input().split()]\n    M = K // 2\n    ans = (N + M) * (N + M) - M\n    if K % 2:\n        ans += 2 * M\n    if N == 0:\n        ans = K * (K - 1)\n    print(ans % MOD)", "import math\nfor i in range(int(input())):\n    l = list(map(int, input().split()))\n    n = l[0]\n    k = l[1]\n    h = 10 ** 9 + 7\n    if k == 1:\n        print(n * n % h)\n    elif n == 0:\n        print(k * (k - 1) % h)\n    elif k % 2 != 0:\n        c = math.floor((k - 1) / 2)\n        print(((n + c) * (n + c) + c) % h)\n    else:\n        c = math.floor(k / 2)\n        print(((n + c) * (n + c) - c) % h)", "ipnl = lambda n: [int(input()) for _ in range(n)]\ninp = lambda : int(input())\nip = lambda : [int(w) for w in input().split()]\nmp = lambda : map(int, input().split())\nM = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k) = mp()\n    if n == 0:\n        ans = k * (k - 1)\n        print(ans % M)\n        continue\n    ans = n * n % M\n    ans += (2 * n - 1 + k // 2) * (k // 2) % M\n    ans %= M\n    if k % 2:\n        ans += (k // 2 + k // 2) % M\n    print(ans % M)", "nn = int(input())\nfor _ in range(nn):\n    (n, k) = map(int, input().split())\n    r = n + (k - 1) // 2\n    if n == 0:\n        r = k - 1\n        r = r * (r + 1) + 1\n    elif (k - 1) % 2 != 0:\n        r = r * (r + 1) + n + 1\n    else:\n        r = r * (r + 1) - (n - 1)\n    print((r - 1) % 1000000007)", "mod = 1000000007\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        ans = k * (k - 1)\n        print(ans % mod)\n    else:\n        ans = n * n\n        z = k - 1\n        if z % 2 != 0:\n            ans += (z // 2 + 1) * 2 * n\n            p = z // 2\n            ans += p * (1 + p)\n        else:\n            ans += z * n\n            p = z // 2\n            ans += p * (1 + p)\n        print(ans % mod)", "t = int(input())\nmod = 1000000007\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        res = k * (k - 1)\n    elif k == 1:\n        res = pow(n, 2)\n    elif k > 1:\n        c = (k - 1) // 2\n        if k & 1 == 1:\n            res = (n + c) * (n + c + 1) - n\n        else:\n            res = (n + c) * (n + c + 1) + n\n    print(res % mod)", "for t in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    if n == 0:\n        ans = k * (k - 1)\n    else:\n        m = k - 1\n        if m % 2 == 0:\n            no = n + m // 2\n            ans = no * no + (no - n)\n        else:\n            no = n + (m + 1) // 2\n            ans = no * no - (no - n)\n    print(ans % 1000000007)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        print(k * (k - 1) % 1000000007)\n    elif k == 1:\n        print(pow(n, 2, 1000000007))\n    elif k > 1:\n        c = int((k - 1) / 2)\n        if k % 2 == 1:\n            time = (n + c) * (n + c + 1) - n\n        else:\n            time = (n + c) * (n + c + 1) + n\n        print(time % 1000000007)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        print(k * (k - 1) % 1000000007)\n    elif k == 1:\n        print(pow(n, 2, 1000000007))\n    elif k > 1:\n        c = int((k - 1) / 2)\n        if k % 2 == 1:\n            time = (n + c) % 1000000007 * ((n + c + 1) % 1000000007) % 1000000007 - n\n        else:\n            time = (n + c) % 1000000007 * ((n + c + 1) % 1000000007) % 1000000007 + n\n        print(time % 1000000007)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a1 = n * n\n    a2 = n * (n + 2)\n    if n == 0:\n        a2 = 2\n        ans = k * (k - 1)\n        print(ans % mod)\n        continue\n    d = (n + 1) * 2\n    if k % 2 == 1:\n        k = (k + 1) // 2\n        k -= 1\n        ans = a1 + k * (2 * d + (k - 1) * 2) // 2\n    else:\n        k //= 2\n        k -= 1\n        ans = a2 + k * (2 * d + (k - 1) * 2) // 2\n    print(ans % mod)", "mod = 1000000007\nt = int(input())\nwhile t > 0:\n    b = input()\n    b = b.split()\n    n = int(b[0])\n    k = int(b[1])\n    if n == 0:\n        print(k * (k - 1) % mod)\n        t = t - 1\n        continue\n    dest = (n + k // 2) % mod\n    ans = dest % mod * (dest + 1) % mod % mod\n    if k % 2 == 0:\n        ans = (ans % mod - (dest % mod - n % mod % mod) % mod - dest % mod) % mod\n    else:\n        ans = (ans % mod - n % mod) % mod\n    print(ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    num1 = list(map(int, input().split()))\n    n = num1[0]\n    k = num1[1]\n    b = 1000000007\n    if n == 0:\n        a = k * (k - 1)\n        print(a % b)\n    if n != 0:\n        c = k % 2\n        d = k // 2\n        if c == 1:\n            a = n ** 2 + d * n * 2 + d * (d + 1)\n            print(a % b)\n        if c == 0:\n            a = n ** 2 + d * n * 2 + d * (d - 1)\n            print(a % b)", "mod = 1000000007\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    inc = k // 2\n    nn = n + inc\n    req = nn * nn\n    if n == 0:\n        ans = k * (k - 1)\n    elif k % 2:\n        ans = req + inc\n    else:\n        ans = req - inc\n    print(ans % mod)", "mod = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    inc = k // 2\n    nn = n + inc\n    req = nn * nn\n    if n == 0:\n        ans = k * (k - 1)\n    elif k % 2:\n        ans = req + inc\n    else:\n        ans = req - inc\n    print(ans % mod)", "Mod = int(1000000000.0 + 7)\n\ndef solve(n, k):\n    result = 0\n    if n == 0:\n        result = k * (k - 1)\n        result = result % Mod\n    elif k % 2 != 0:\n        k1 = (n + int(k / 2)) % Mod\n        k = k1\n        k1 = k1 - 1\n        result = k1 % Mod * (k1 + 1) % Mod % Mod\n        result = (result % Mod + (k - 0) % Mod + (k - n) % Mod) % Mod\n        result = result % Mod\n    else:\n        k1 = n + int((k - 1) / 2)\n        result = k1 % Mod * (k1 + 1) % Mod % Mod\n        result = (result % Mod + n % Mod) % Mod\n    return result % Mod\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(solve(n, k))", "Mod = int(1000000000.0 + 7)\n\ndef solve(n, k):\n    result = 0\n    if n == 0:\n        result = k * (k - 1)\n        result = result % Mod\n    elif k % 2 != 0:\n        k1 = (n + int(k / 2)) % Mod\n        result = k1 * (k1 - 1)\n        result = result % Mod\n        result += k1 + (k1 - n)\n        result = result % Mod\n    else:\n        k1 = n + int((k - 1) / 2)\n        result = k1 * (k1 + 1)\n        result = result % Mod\n        result += n\n        result = result % Mod\n    return result % Mod\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(solve(n, k))", "T = int(input())\nMOD = int(1000000000.0 + 7)\nfor t in range(T):\n    (N, K) = [int(a) for a in input().split()]\n    M = K // 2\n    ans = (N + M) * (N + M) - M\n    if K % 2:\n        ans += 2 * M\n    if N == 0:\n        ans = K * (K - 1)\n    print(ans % MOD)", "T = int(input())\nwhile T:\n    (N, K) = map(int, input().split())\n    M = 10 ** 9 + 7\n    if N == 0:\n        ans = K * (K - 1)\n        print(ans % M)\n    else:\n        ans = N ** 2\n        ans %= M\n        ans += 2 * N * (K // 2)\n        ans %= M\n        ans += ((K + 1) // 2 - 1) * ((K + 1) // 2)\n        print(ans % M)\n    T -= 1", "MOD = 1000000007\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    assert 0 <= n <= 10 ** 9 and 1 <= k <= 10 ** 9\n    if n == 0:\n        print(k * (k - 1) % MOD)\n        continue\n    if k == 0:\n        print(0)\n        continue\n    start = n ** 2\n    skip = n * 2\n    ans = start + skip * (k // 2)\n    k = -(-k // 2)\n    ans += k * (k - 1)\n    print(ans % MOD)", "m = 1000000007\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        print(k * (k - 1) % 1000000007)\n    else:\n        x = k // 2\n        if k % 2 == 0:\n            t = (pow(n, 2) % m + 2 * n * x % m + (x - 1) * x % m) % m\n            print(t)\n        else:\n            t = (pow(n, 2) % m + 2 * n * x % m + x * (1 + x) % m) % m\n            print(t)", "from sys import stdin, stdout\nimport math\nfrom itertools import permutations, combinations\nfrom collections import defaultdict\nfrom bisect import bisect_left\n\ndef L():\n    return list(map(int, stdin.readline().split()))\n\ndef In():\n    return map(int, stdin.readline().split())\n\ndef I():\n    return int(stdin.readline())\nP = 1000000007\nfor t in range(I()):\n    (n, k) = In()\n    val = 0\n    if n == 0:\n        print(k % P * (k - 1) % P % P)\n    else:\n        val = n % P * (n % P) % P\n        val += k // 2 % P * (2 * n) % P % P\n        val += ((k + 1) // 2 - 1) % P * ((k + 1) // 2 % P) % P\n        print(val % P)", "m = 1000000007\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        print(k * (k - 1) % m)\n        continue\n    if k == 1:\n        print(n ** 2 % m)\n        continue\n    if k == 2:\n        print((n ** 2 + n * 2) % m)\n        continue\n    e = k // 2\n    o = e - 1 if k % 2 == 0 else e\n    print((n ** 2 + e * (2 * n) + o * (o + 1)) % m)", "mod = pow(10, 9) + 7\nt = int(input())\nfor t1 in range(0, t):\n    (n, k) = map(int, input().split())\n    z = 0\n    if n == 0:\n        z = k - 1\n        z = z * (4 + (z - 1) * 2) // 2\n        print(z % mod)\n    else:\n        n1 = n\n        z = n1 * (4 + (n1 - 1) * 2) // 2\n        if k == 1:\n            z = z - (n - 1)\n        else:\n            k1 = k - 1\n            if k1 % 2 == 0:\n                k2 = k1 // 2\n                n1 = n1 + k2\n                z = n1 * (4 + (n1 - 1) * 2) // 2\n                z = z - (n - 1)\n            else:\n                k2 = k1 // 2\n                k2 = k2\n                n1 = n1 + k2\n                z = n1 * (4 + (n1 - 1) * 2) // 2\n                z = z + n + 1\n        print((z - 1) % mod)", "mod = pow(10, 9) + 7\nt = int(input())\nfor t1 in range(0, t):\n    (n, k) = map(int, input().split())\n    z = 0\n    if n == 0:\n        z = k - 1\n        z = z * (4 + (z - 1) * 2) // 2\n        print(z % mod)\n    else:\n        n1 = n\n        z = n1 * (4 + (n1 - 1) * 2) // 2\n        if k == 1:\n            z = z - (n - 1)\n        else:\n            k1 = k - 1\n            if k1 % 2 == 0:\n                k2 = k1 // 2\n                n1 = n1 + k2\n                z = n1 * (4 + (n1 - 1) * 2) // 2\n                z = z - (n - 1)\n            else:\n                k2 = k1 // 2\n                k2 = k2\n                n1 = n1 + k2\n                z = n1 * (4 + (n1 - 1) * 2) // 2\n                z = z + n + 1\n        print((z - 1) % mod)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    mod = 10 ** 9 + 7\n    if n == 0:\n        if k == 1:\n            print(0)\n        else:\n            print(k * (k - 1) % mod)\n    elif k % 2 == 0:\n        res = n + k // 2 - 1\n        print((res * (res + 1) + n) % mod)\n    else:\n        res = n + k // 2\n        print((res * (res + 1) - n) % mod)", "t = int(input())\nmod = 1000000007\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        ans = k * (k - 1) % mod\n    elif k % 2 == 0:\n        ans = ((n + int(k / 2)) ** 2 - int(k / 2)) % mod\n    else:\n        ans = ((n + int(k / 2)) ** 2 + int(k / 2)) % mod\n    print(int(ans))", "mod = 7 + 10 ** 9\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        print(k * (k - 1) % mod)\n        continue\n    l = k % 2\n    k -= 1\n    k //= 2\n    k += n\n    k = (2 * k + k * (k - 1)) % mod\n    if l == 0:\n        print((k + n) % mod)\n    else:\n        print((k - n) % mod)", "t = int(input())\nfor i in range(t):\n    (N, K) = map(int, input().split())\n    if N == 0:\n        res = K * (K - 1)\n    else:\n        res = N * N + K // 2 * (2 * N) + (K + 1) // 2 * ((K + 1) // 2 - 1)\n    print(res % 1000000007)", "mod = 1000000007\nt = int(input())\nfor i in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    if n == 0:\n        print(k % mod * (k - 1) % mod % mod)\n    else:\n        k1 = k // 2\n        if k % 2 == 0:\n            print(((n + k1) % mod * (n + k1) % mod % mod - k1 % mod) % mod)\n        else:\n            print(((n + k1) % mod * (n + k1) % mod % mod + k1 % mod) % mod)", "MOD = 10 ** 9 + 7\n\ndef f(n):\n    return n * (n + 1)\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    ans = 0\n    if n == 0:\n        ans = f(k - 1)\n    elif k == 1:\n        ans = f(n) - n\n    else:\n        x = n + (k - 1) // 2\n        if k % 2 == 0:\n            ans = f(x) + n\n        else:\n            ans = f(x) - n\n    print(ans % MOD)", "t = int(input())\nmod = 10 ** 9 + 7\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        print(k * (k - 1) % mod)\n        continue\n    no = k // 2 + 1\n    up = no - 1 + n - 1\n    up = up * (up + 1)\n    od = no + n - 1\n    if k % 2 == 0:\n        print((up + n) % mod)\n    else:\n        print((up + od + od - n) % mod)", "T = int(input())\nMOD = int(1000000000.0 + 7)\nfor t in range(T):\n    (N, K) = [int(a) for a in input().split()]\n    M = (K - 1) // 2\n    ans = (N + M) * (N + M + 1) + N\n    if K % 2:\n        ans -= 2 * N\n    if N == 0:\n        ans = K * (K - 1)\n    print(ans % MOD)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    q = 10 ** 9 + 7\n    if n == 0 and k == 1:\n        print(0)\n    elif n == 0:\n        print(k * (k - 1) % q)\n    else:\n        m = n + 1\n        if k % 2 == 0:\n            m += k // 2 - 1\n            print((m ** 2 + n - m) % q)\n        else:\n            m += (k + 1) // 2 - 1\n            print((m ** 2 - n - m) % q)", "import sys\nreadLine = lambda : sys.stdin.readline()\nreadInt = lambda : int(sys.stdin.readline())\nreadInts = lambda : [int(x) for x in sys.stdin.readline().split(' ')]\nMOD = 1000000007\nfor _ in range(readInt()):\n    (n, k) = readInts()\n    print((k - 1) * k % MOD if n == 0 else (n ** 2 + 2 * n * (k // 2) + (k - 1) // 2 * ((k - 1) // 2 + 1)) % MOD)", "import sys\nreadLine = lambda : sys.stdin.readline()\nreadInt = lambda : int(sys.stdin.readline())\nreadInts = lambda : [int(x) for x in sys.stdin.readline().split(' ')]\nMOD = 1000000007\nfor _ in range(readInt()):\n    (n, k) = readInts()\n    if n == 0:\n        solution = (k - 1) * k % MOD\n    else:\n        solution = (n ** 2 + 2 * n * (k // 2) + (k - 1) // 2 * ((k - 1) // 2 + 1)) % MOD\n    print(solution)", "m = 10 ** 9 + 7\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        c = k - 1\n        su = (c + 1) * c\n        print(su % m)\n        continue\n    if k % 2 == 0:\n        c = n + k // 2 - 1\n        su = c * (c + 1) + n\n        print(su % m)\n    else:\n        c = n + k // 2 - 1\n        su = (c + 2) * (c + 1) - n\n        print(su % m)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    t1 = n * (n + 1)\n    if n == 0 and k == 1:\n        t1 = 0\n    elif n == 0 and k > 1:\n        t1 = k * (k - 1)\n    elif k == 1:\n        t1 = t1 - n\n    else:\n        p = int((k - 1) / 2)\n        if (k - 1) % 2 == 1:\n            t1 = t1 + p * 2 * n + p * (p + 1) + n\n        else:\n            t1 = t1 + p * 2 * n + p * (p + 1) - n\n    print(t1 % (10 ** 9 + 7))", "mod = 10 ** 9 + 7\nfor ii in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        print(k * (k - 1) % mod)\n    else:\n        print((n * n + k // 2 * 2 * n + (k + 1) // 2 * ((k + 1) // 2 - 1)) % mod)", "md = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 0:\n        b = b - 1\n        sm = b * (4 + (b - 1) * 2) // 2 % md\n        print(sm)\n        continue\n    val = b // 2\n    if b % 2 == 0:\n        val -= 1\n    sm = (a + val) * (4 + (a + val - 1) * 2) // 2 % md\n    if b % 2 == 0:\n        sm += a\n        sm %= md\n    else:\n        sm -= a\n        sm %= md\n    print(sm)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    mod = 1000000007\n    if n == 0:\n        print(k * (k - 1) % 1000000007)\n    else:\n        sq = n * n % mod\n        k -= 1\n        z = 2 * n % mod\n        m = k // 2\n        if k % 2 == 0:\n            sq = (sq + m * (m + 1) % mod + z * m % mod) % mod\n        else:\n            sq = (sq + m * (m + 1) % mod + z * (m + 1) % mod) % mod\n        print(sq)", "t = int(input())\nmod = int(1000000000.0 + 7)\nfor i in range(t):\n    (N, K) = [int(a) for a in input().split()]\n    M = K // 2\n    ans = (N + M) * (N + M) - M\n    if K % 2:\n        ans += 2 * M\n    if N == 0:\n        ans = K * (K - 1)\n    print(ans % mod)", "mod = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    k = m // 2\n    ans = ((n + k) * (n + k) % mod - k) % mod\n    if m % 2:\n        ans += 2 * k\n    if n == 0:\n        ans = m * (m - 1)\n    print(ans % mod)", "mod = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    k = m // 2\n    ans = (n + k) * (n + k) - k\n    if m % 2:\n        ans += 2 * k\n    if n == 0:\n        ans = m * (m - 1)\n    print(ans % mod)", "t = int(input())\nfor _ in range(t):\n    [n, k] = [int(x) for x in input().split()]\n    if n == 0:\n        print((k - 1) * k % 1000000007)\n        continue\n    if k % 2 == 0:\n        x = int(k / 2) - 1\n        print(((n + x) * (n + x + 1) + n) % 1000000007)\n    else:\n        x = int((k - 3) / 2)\n        print(((n + x) * (n + x + 1) + n + 2 * x + 2) % 1000000007)", "def main():\n    from bisect import bisect_left as bl, bisect_right as br, insort\n    import sys\n    import heapq\n    from collections import defaultdict as dd, deque\n\n    def data():\n        return sys.stdin.readline().strip()\n\n    def mdata():\n        return list(map(int, data().split()))\n    out = sys.stdout.write\n    INF = int(1000000000.0)\n    mod = int(1000000000.0) + 7\n    for t in range(int(data())):\n        (n, k) = mdata()\n        if n == 0:\n            if k == 1:\n                print(0)\n            else:\n                ans = k * (k - 1)\n                print(ans % mod)\n            continue\n        ans = n * n + k // 2 * 2 * n + (k - 1 - k // 2) * (k - k // 2)\n        print(ans % mod)\nmain()", "t = int(input())\nmod = 10 ** 9 + 7\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    if n == 0:\n        time = k * (k - 1)\n    elif k == 1:\n        time = n * (n - 1)\n        time = (time + n) % mod\n    else:\n        k -= 1\n        if k % 2 == 0:\n            z = k // 2\n            l = n + z - 1\n            time = l * (l + 1)\n            time = (time + n + z + z) % mod\n        else:\n            z = k + 1\n            z = z // 2\n            l = n + z - 1\n            time = l * (l + 1)\n            time = (time + n) % mod\n    print(time % mod)\n    t -= 1", "_MOD = 1000000007\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    if n == 0:\n        print(k * (k - 1) % _MOD)\n        continue\n    no = k / 2\n    if no == int(no):\n        print(((n + int(no)) * (n + int(no)) - int(no)) % _MOD)\n    else:\n        print(((n + int(no)) * (n + int(no)) + int(no)) % _MOD)", "t = int(input())\nmod = 1000000007\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    if n == 0:\n        print(k * (k - 1) % mod)\n    else:\n        a = n + k // 2\n        ans = pow(a, 2, mod)\n        if k % 2 == 0:\n            ans = (ans - k // 2 + mod) % mod\n        else:\n            ans = (ans + k // 2) % mod\n        print(ans)", "t = int(input())\nmod = 10 ** 9 + 7\n\ndef add(a, b, m):\n    if a + b >= m:\n        return (a + b) % m\n    return a + b\n\ndef mul(a, b, m):\n    if a * b < m:\n        return a * b\n    return a * b % m\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().strip().split()]\n    res = pow(n, 2, mod) % mod\n    if n == 0:\n        print((k - 1) * k % mod)\n    else:\n        k -= 1\n        if k % 2 == 0:\n            a1 = k // 2\n        else:\n            a1 = k // 2 + 1\n        a2 = k - a1\n        k1 = mul(a1, 2 * n, mod) % mod\n        k2 = add(a2, 1, mod) % mod\n        k2 = mul(k2, a2, mod) % mod\n        res = add(k1, res, mod) % mod\n        res = add(res, k2, mod) % mod\n        print(res % mod)", "t = int(input())\nmod = 1000000007\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    if n == 0:\n        print(k * (k - 1) % mod)\n    else:\n        a = n + k // 2\n        ans = pow(a, 2, mod)\n        if k % 2 == 0:\n            ans = (ans - k // 2 + mod) % mod\n        else:\n            ans = (ans + k // 2) % mod\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0 and k == 1:\n        print(0)\n    else:\n        m = 1000000007\n        if n == 0:\n            total = (k - 1) * (2 * 2 + (k - 1 - 1) * 2) // 2\n        else:\n            l1 = n + 1\n            k1 = k // 2\n            total = (l1 + k1 - 2) * (2 * 2 + (l1 + k1 - 2 - 1) * 2) // 2 % m\n            if k == 1:\n                total += n % m\n            elif k % 2 == 0:\n                total += n % m\n            else:\n                total += (l1 + k1 - 1 + (l1 + k1 - 1 - n)) % m\n        print(total % m)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        print(((k - 1) ** 2 + k - 1) % (10 ** 9 + 7))\n    else:\n        if k % 2 == 1:\n            a = (k + 1) // 2 + 1\n            flag = 1\n        else:\n            a = k // 2 + 1\n            flag = 2\n        cntbr = (a - 1 + n - 1) ** 2\n        b = a + n - 1\n        z = b * 2 - 1\n        c = z // 2\n        if flag == 1:\n            cntaf = c - n\n        else:\n            cntaf = z - (c - n) - 1\n        print((cntaf + cntbr) % (10 ** 9 + 7))", "T = int(input())\nfor _ in range(T):\n    nk = input().split()\n    n = int(nk[0])\n    k = int(nk[1])\n    if n != 0:\n        if k % 2 == 1:\n            print(int((n ** 2 + n * (k - 1) + (k ** 2 - 1) // 4) % 1000000007))\n        else:\n            print(int((n ** 2 + k * n + k // 2 * (k // 2 - 1)) % 1000000007))\n    else:\n        print(int(k * (k - 1) % 1000000007))", "mod = 1000000007\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        if k == 1:\n            print(0)\n            continue\n        else:\n            k1 = (k - 1) * (4 + (k - 1 - 1) * 2) // (1 + 1)\n            print(k1 % mod)\n            continue\n    k1 = n * (4 + (n - 1) * 2) // (1 + 1)\n    if k == 1:\n        print((k1 - n) % mod)\n        continue\n    k -= 1\n    if k % (1 + 1) != 0:\n        k //= 1 + 1\n        t = (n + k) * (4 + (n + k - 1) * (1 + 1)) // (1 + 1)\n        print((t + n) % mod)\n    else:\n        k //= 1 + 1\n        t = (n + k) * (4 + (n + k - 1) * (1 + 1)) // (1 + 1)\n        print((t - n) % mod)", "import sys\nfrom random import choice, randint\ninp = sys.stdin.readline\nout = sys.stdout.write\nflsh = sys.stdout.flush\nsys.setrecursionlimit(10 ** 9)\ninf = 10 ** 20\neps = 1.0 / 10 ** 10\nmod = 10 ** 9 + 7\ndd = [(-1, 0), (0, 1), (1, 0), (0, -1)]\nddn = [(-1, 0), (-1, 1), (0, 1), (1, 1), (1, 0), (1, -1), (0, -1), (-1, -1)]\n\ndef MI():\n    return map(int, inp().strip().split())\n\ndef LI():\n    return list(map(int, inp().strip().split()))\n\ndef LLI():\n    return [list(map(int, l.split())) for l in sys.stdin.readlines().strip()]\n\ndef LI_():\n    return [int(x) - 1 for x in inp().strip().split()]\n\ndef LF():\n    return [float(x) for x in inp().strip().split()]\n\ndef LS():\n    return inp().strip().split()\n\ndef I():\n    return int(inp().strip())\n\ndef F():\n    return float(inp().strip())\n\ndef S():\n    return inp().strip()\n\ndef pf(s):\n    return out(s + '\\n')\n\ndef JA(a, sep):\n    return sep.join(map(str, a))\n\ndef JAA(a, s, t):\n    return s.join((t.join(map(str, b)) for b in a))\n\ndef main():\n    from math import ceil\n    t = I()\n    l = []\n    for _ in range(t):\n        (n, k) = MI()\n        if n == 0:\n            k -= 1\n            ans = k * (k + 1) % mod\n            l.append(ans)\n        elif k % 2 != 0:\n            lr = k // 2\n            l.append((n * n % mod + lr * (2 * n % mod) % mod + lr * (lr + 1) % mod) % mod)\n        else:\n            lr = k // 2\n            l.append((n * n % mod + lr * (2 * n) % mod % mod + lr * (lr - 1) % mod) % mod)\n    for i in range(t):\n        pf(str(l[i]))\nmain()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0 and k == 1:\n        print(0)\n    elif n == 0:\n        print(k * (k - 1) % q)\n    else:\n        m = n + 1\n        q = 10 ** 9 + 7\n        if k % 2 == 0:\n            m += k // 2 - 1\n            print((m ** 2 + n - m) % q)\n        else:\n            m += (k + 1) // 2 - 1\n            print((m ** 2 - n - m) % q)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 0:\n        print(k * (k - 1) % 1000000007)\n    elif k == 1:\n        print(n ** 2 % 1000000007)\n    else:\n        turn = k // 2\n        point = turn + n\n        if k % 2 == 0:\n            print((point ** 2 - turn) % 1000000007)\n        else:\n            print((point ** 2 + turn) % 1000000007)", "try:\n    t = int(input())\n    for _ in range(t):\n        (a, b) = map(int, input().split())\n        if a == 0:\n            print((b - 1) * b % 1000000007)\n        else:\n            c = b % 2\n            if c == 0:\n                x = (b - 2) // 2\n                ans = (a + x) * (a + x + 1) + a\n                print(ans % 1000000007)\n            else:\n                x = b // 2\n                ans = (a + x - 1) * (a + x)\n                ans = ans + a + 2 * x\n                print(ans % 1000000007)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = 10 ** 9 + 7\n    if n == 0:\n        if k == 1:\n            print(0)\n        else:\n            print(k * (k - 1) % m)\n    elif k == 1:\n        print((n * (n - 1) + n) % m)\n    elif k % 2:\n        x = n + (k - 1) // 2\n        print((x * (x + 1) - n) % m)\n    else:\n        x = n + k // 2\n        print((x * (x - 1) + n) % m)"]