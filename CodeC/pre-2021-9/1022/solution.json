["from math import sin, pi\nT = int(input())\nfor ball in range(T):\n    n = int(input())\n    print(round((1 / sin(pi / n)) ** 2, 7))", "from math import sin, pi\nT = int(input())\nfor ball in range(T):\n    n = int(input())\n    print(round((1 / sin(pi / n)) ** 2, 7))", "from math import sin, pi\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    print(round((1 / sin(pi / n)) ** 2, 7))", "from math import sin, pi\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    print(round((1 / sin(pi / n)) ** 2, 7))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = math.pi * (n - 2) / (2 * n)\n    print(1 / (1 - math.sin(a) ** 2))", "import math\nt = int(input())\nwhile t:\n    n = int(input())\n    theta = math.pi - 2 * math.pi / n\n    res = 1 / math.pow(math.cos(theta / 2), 2)\n    print('{:.6f}'.format(res))\n    t -= 1", "from math import sin, pi\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    print(round((1 / sin(pi / n)) ** 2, 7))", "import math\nT = int(input())\nwhile T:\n    N = int(input())\n    theta = math.pi - 2 * math.pi / N\n    result = 1 / math.pow(math.cos(theta / 2), 2)\n    print('{:.6f}'.format(result))\n    T -= 1", "import math\nT = int(input())\nwhile T:\n    N = int(input())\n    theta = math.pi - 2 * math.pi / N\n    result = 1 / math.pow(math.cos(theta / 2), 2)\n    print('{:.6f}'.format(result))\n    T -= 1", "import math\nx = int(input())\nfor i in range(x):\n    a = int(input())\n    print(round(pow(1 / math.sin(math.pi / a), 2), 7))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    print(1 / math.sin(math.pi / n) ** 2)", "from math import sin\nfrom math import pi\nfor u in range(int(input())):\n    n = int(input())\n    y = sin(pi / n)\n    print(1 / (y * y))", "import math\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    theta = math.pi - 2 * math.pi / n\n    ans = 1 / math.pow(math.cos(theta / 2), 2)\n    print('{:.6f}'.format(ans))\n    t -= 1", "from math import *\nfor I in range(int(input())):\n    print('%.7f' % (1 / sin(pi / int(input())) ** 2))", "import math\n\ndef main():\n    for I in range(int(input())):\n        n = int(input())\n        angle = math.pi / n\n        ratio = math.sin(angle)\n        ratio *= ratio\n        ans = 1 / ratio\n        print('%.7f' % ans)\nmain()", "import math\nt = int(input())\nfor i in range(t):\n    n = float(input())\n    theta = math.pi - 2 * math.pi / n\n    result = 1 / math.pow(math.cos(theta / 2), 2)\n    print('{:.6f}'.format(result))", "try:\n    import math\n    t = int(input())\n    for i in range(0, t):\n        n = int(input())\n        a = math.pi / n\n        b = math.sin(a)\n        b = 1 / b\n        k = pow(b, 2)\n        print('{:.8f}'.format(k))\nexcept:\n    pass", "import sys\nimport math as mt\n\ndef getInput():\n    return sys.stdin.readline().strip()\n\ndef getInt():\n    return int(getInput())\n\ndef getInts():\n    return map(int, getInput().split())\n\ndef getArray():\n    return list(getInts())\nfor _ in range(int(input())):\n    n = int(input())\n    print(1 / (mt.sin(mt.pi / n) * mt.sin(mt.pi / n)))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    ans = (math.sin(math.pi / n) ** 2) ** (-1)\n    print('%.8f' % ans)", "from math import cos, pi\nfor _ in range(int(input())):\n    n = int(input())\n    p = cos(pi / n) ** 2\n    z = 1 - p\n    print('{0:.8f}'.format(1 / z))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    r = math.cos(math.pi / n) ** 2\n    x = 1 - r\n    ans = 1 / x + r / x ** 2\n    print(ans * x)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 1 / math.sin(math.pi / n)\n    ans = ans ** 2\n    print(ans)", "from math import cos, pi\nfor test in range(int(input())):\n    n = int(input())\n    v = pow(cos(pi / n), 2)\n    print(1 / (1 - v))", "from math import sin, tan, cos, pi\n\ndef probab(n):\n    angle = (n - 2) * pi / (2 * n)\n    h = tan(angle)\n    base = 2\n    area1 = 1 / 2 * base * h * n\n    b2 = 2 * h * cos(angle)\n    h2 = h * sin(angle)\n    area2 = 1 / 2 * b2 * h2 * n\n    ratio = area2 / area1\n    print(1 / (1 - ratio))\nfor _ in range(int(input())):\n    probab(int(input()))", "from math import sin, pi, sqrt\ncases = int(input())\nfor _ in range(cases):\n    n = int(input())\n    r = 1 / sin(pi / n) ** 2\n    print('{:.8f}'.format(r))", "from math import cos, pi\n\ndef answer(n):\n    common_ratio = cos(pi / n) * cos(pi / n)\n    return 1 / (1 - common_ratio)\nfor T in range(int(input())):\n    n = int(input())\n    print('%.8f' % answer(n))", "import math\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    k = 1 - math.sin(math.pi / 2 - math.pi / n) ** 2\n    print(1 / k)\n    t = t - 1", "import math\nT = int(input())\nwhile T:\n    N = int(input())\n    theta = math.pi - 2 * math.pi / N\n    result = 1 / math.pow(math.cos(theta / 2), 2)\n    print('{:.6f}'.format(result))\n    T -= 1", "import math\n\ndef calll():\n    n = int(input())\n    pi = math.pi\n    a = (n - 2) * 180 / n\n    val = n * math.sin(a * pi / 180) / 8\n    r = n / (4 * math.tan(pi / n))\n    v = (r - val) / r\n    print(1 / (1 - v))\nfor _ in range(int(input())):\n    calll()", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    r = math.cos(math.pi / n) ** 2\n    x = 1 - r\n    ans = 1 / x + r / x ** 2\n    print(ans * x)", "import math\nT = int(input())\nwhile T:\n    N = int(input())\n    theta = math.pi - 2 * math.pi / N\n    result = 1 / math.pow(math.cos(theta / 2), 2)\n    print('{:.6f}'.format(result))\n    T -= 1", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    print(1 / math.sin(math.pi / n) ** 2)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    x = n * math.sin(math.pi * (n - 2) / n) / 8\n    A = n / 4 / math.tan(math.pi / n)\n    c = x / A\n    print(round(1 / c, 6))", "from math import cos, pi\nfor _ in range(int(input())):\n    n = int(input())\n    v = pow(cos(pi / n), 2)\n    print(1 / (1 - v))", "import math\n\ndef solve():\n    n = int(input())\n    pi = math.pi\n    a = (n - 2) * 180 / n\n    a1 = n * math.sin(a * pi / 180) / 8\n    ratio = n / (4 * math.tan(pi / n))\n    s = (ratio - a1) / ratio\n    print(1 / (1 - s))\nfor _ in range(int(input())):\n    solve()", "import math\np = math.pi\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    ang = (n - 2) * 180 / n\n    sm = (180 - ang) / 2\n    ang = ang * (p / 180)\n    sm = sm * (p / 180)\n    a1 = n * math.tan(sm) / 4\n    a2 = math.tan(ang / 2) * n / 4\n    q = a2 / (a1 + a2)\n    print(1 / (1 - q))", "import math\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    ang = (n - 2) * 180 / n\n    sm = (180 - ang) / 2\n    ang = ang * (math.pi / 180)\n    sm = sm * (math.pi / 180)\n    a1 = n * math.tan(sm) / 4\n    a2 = math.tan(ang / 2) * n / 4\n    q = a2 / (a1 + a2)\n    print(1 / (1 - q))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    x = math.cos(math.pi / n)\n    print(1 / (1 - math.pow(x, 2)))", "import math\nT = int(input())\nwhile T:\n    N = int(input())\n    theta = math.pi - 2 * math.pi / N\n    result = 1 / math.pow(math.cos(theta / 2), 2)\n    print('{:.6f}'.format(result))\n    T -= 1", "import math\nt = int(input())\nPI = 3.141592653589793\nfor _ in range(t):\n    n = int(input())\n    angle = PI * (1 - 2 / n)\n    sinangle = math.sin(angle / 2)\n    sinsq = sinangle * sinangle\n    ans = 1 / (1 - sinsq)\n    print(ans)", "import math\n\ndef solve(n):\n    alpha = math.radians((n - 2) * 180 / n)\n    ratio = (1 - math.cos(alpha)) / 2\n    res = 1 / (1 - ratio)\n    return res\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(solve(n))", "import math\n\ndef solve(n):\n    alpha = math.radians((n - 2) * 180 / n)\n    ratio = (1 - math.cos(alpha)) / 2\n    res = 1 / (1 - ratio)\n    return res\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(solve(n))", "import math\ntest_case = int(input())\nfor _ in range(test_case):\n    n = int(input())\n    angle = math.radians((n - 2) * 180 / n)\n    cr = (1 - math.cos(angle)) / 2\n    ans = 1 / (1 - cr)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = (n - 2) * 180 / n\n    angle = (180 - a) / 2\n    side = math.cos(math.pi * angle / 180)\n    r = side * side\n    ans = 1 / (1 - r)\n    print('%.8f' % ans)", "import math\nfor a0 in range(int(input())):\n    n = int(input())\n    tmp = math.cos(math.radians(180 / n))\n    tmp *= tmp\n    print(1 / (1 - tmp))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    x = math.cos(math.radians(360.0 / (2 * n)))\n    ans = 1 / (1 - x ** 2)\n    print(ans)", "import math\n\ndef solve():\n    n = int(input())\n    angle = (n - 2) * 180 / n\n    c = 0.5 * 0.5 + 0.5 * 0.5 - 2 * 0.5 * 0.5 * math.cos(angle * math.pi / 180)\n    return 1 / (1 - c)\nt = int(input())\nfor i in range(t):\n    print(solve())", "import math as m\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    z = m.pi * (n - 2) / n / 2\n    x = m.sin(z) ** 2\n    print(1 / (1 - x))", "try:\n    import math\n    pi = math.pi\n    for _ in range(int(input())):\n        n = int(input())\n        x = math.cos((n - 2) * pi / (2 * n))\n        x = x ** 2\n        print(1 / x)\nexcept:\n    pass", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n < 3:\n        print(float(1))\n        continue\n    a = 1\n    R = a / (2.0 * math.sin(math.radians(180.0 / n)))\n    a_m = a ** 2 / (2 * R)\n    R_m = a / 2\n    s_v = (2 * R + a) / 2\n    s_m = (2 * R_m + a_m) / 2\n    p_v = math.sqrt(s_v * (s_v - a) * (s_v - R) * (s_v - R))\n    p_m = math.sqrt(s_m * (s_m - a_m) * (s_m - R_m) * (s_m - R_m))\n    q = p_m / p_v\n    res = 1.0 / (1.0 - (1.0 - q))\n    print(res)", "import math\n\ndef solve(n):\n    angle = (n - 2) * 180 / n\n    angleInRadians = math.radians(angle)\n    areaRatio = math.sin(angleInRadians / 2) ** 2\n    return 1 / (1 - areaRatio)\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    result = solve(n)\n    print(result)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    x = math.cos(math.pi / n)\n    x = x * x\n    print(1 / (1 - x))", "import sys, math, itertools, random, bisect\nfrom collections import defaultdict\nINF = 10 ** 18\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    pi = math.pi\n    int_angle = (n - 2) * pi / n\n    angle = (pi - int_angle) / 2\n    x = math.cos(angle)\n    x *= x\n    ans = 1 / (1 - x)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    ans = math.sin(math.pi / n) / (1 - math.cos(math.pi / n) * math.cos(math.pi / n))\n    ans = ans ** 2\n    print(ans)", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef fside(A):\n    val = 2 - 2 * math.cos(A)\n    return val\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = math.pi - 2 * math.pi / n\n    val = fside(A)\n    ans = 4 / (4 - val)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    y = 180 * (n - 2) / n\n    z = 1 / 2\n    new_side = 0.5 * (1 - math.cos(y * math.pi / 180))\n    print(1 / (1 - new_side))", "from pprint import pprint\nimport sys\ninput = sys.stdin.readline\nimport math\n\ndef do():\n    n = int(input())\n    if n == 1 or n == 2:\n        raise\n        assert False\n    r = math.cos(math.pi / n) ** 2\n    print(1 / (1 - r))\nq = int(input())\nfor _ in range(q):\n    do()", "import math\nt = int(input())\nfor f in range(t):\n    n = int(input())\n    print(1 / 2 * math.sin(math.pi / n * (n - 2)) / math.cos(math.pi / n * (n - 2) / 2) ** 4 / math.tan(math.pi / n * (n - 2) / 2))", "import sys\nimport math\ninput = iter(sys.stdin.read().splitlines()).__next__\nTC = int(input())\nfor tc in range(TC):\n    N = int(input())\n    ratio = math.cos(math.pi / N)\n    res = 1 / (1 - ratio * ratio)\n    print('%.010f' % res)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    s = 1\n    theta = 360 / n\n    theta = theta * math.pi / 180\n    apo = 0.5 / math.tan(theta / 2)\n    A = n * s * apo / 2\n    a = n * (1 / 2) * (1 / 2) * (1 / 2) * math.sin(theta)\n    print(A / a)", "import sys\nimport math\ninput = sys.stdin.readline\nt = int(input())\nfor you in range(t):\n    n = int(input())\n    ext = 2 * math.pi / n\n    inter = math.pi - ext\n    inter = inter / 2\n    f = math.sin(inter)\n    f = f * f\n    print(1 / (1 - f))"]