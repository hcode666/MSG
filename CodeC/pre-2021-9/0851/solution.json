["t = int(input())\nfor i in range(t):\n    (s, c, k) = map(int, input().split())\n    ans = 0\n    if s >= k:\n        ans = pow(2, s - k + 1) + 1\n        if c > s - k:\n            ans += pow(2, s - k + 1)\n            if k == 1:\n                ans += sum((pow(2, r) for r in range(s - k + 2, c + 1)))\n    elif k == 1:\n        ans += pow(2, c + 1) - 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (s, c, k) = map(int, input().split())\n    ans = 0\n    if s >= k:\n        ans = pow(2, s - k + 1) + 1\n        if c > s - k:\n            ans += pow(2, s - k + 1)\n            if k == 1:\n                ans += sum((pow(2, r) for r in range(s - k + 2, c + 1)))\n    elif k == 1:\n        ans += pow(2, c + 1) - 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (s, c, k) = map(int, input().split())\n    ans = 0\n    if s >= k:\n        ans = pow(2, s - k + 1) + 1\n        if c > s - k:\n            ans += pow(2, s - k + 1)\n            if k == 1:\n                ans += sum((pow(2, r) for r in range(s - k + 2, c + 1)))\n    elif k == 1:\n        ans += pow(2, c + 1) - 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (s, c, k) = map(int, input().split())\n    ans = 0\n    if s >= k:\n        ans = pow(2, s - k + 1) + 1\n        if c > s - k:\n            ans += pow(2, s - k + 1)\n            if k == 1:\n                ans += sum((pow(2, r) for r in range(s - k + 2, c + 1)))\n    elif k == 1:\n        ans += pow(2, c + 1) - 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (s, c, k) = map(int, input().split())\n    ans = 0\n    if s >= k:\n        ans = pow(2, s - k + 1) + 1\n        if c > s - k:\n            ans += pow(2, s - k + 1)\n            if k == 1:\n                ans += sum((pow(2, r) for r in range(s - k + 2, c + 1)))\n    elif k == 1:\n        ans += pow(2, c + 1) - 2\n    print(ans)", "for _ in range(int(input())):\n    (s, c, k) = map(int, input().split())\n    ans = 0\n    if s >= k:\n        ans = pow(2, s - k + 1) + 1\n        if c > s - k:\n            ans += pow(2, s - k + 1)\n            if k == 1:\n                ans += sum((pow(2, r) for r in range(s - k + 2, c + 1)))\n    elif k == 1:\n        ans += pow(2, c + 1) - 2\n    print(ans)", "def f2(s, c, k):\n    (rows, cols) = (pow(2, max(s + 1, c + 1)) + 1, max(s, c))\n    (a, size, count) = ([[0 for x in range(cols)] for y in range(rows)], (rows - 1) / 2, 0)\n    for x in range(s):\n        y = 0\n        while y < rows:\n            a[int(y)][int(x)] += 1\n            y += size\n        size /= 2\n    size = (rows - 1) / 2\n    for x in range(c):\n        y = size / 2\n        while y < rows:\n            a[int(y)][int(x)] += 1\n            y += size\n        size /= 2\n    for y in a:\n        if sum(y) >= k:\n            count += 1\n    return count\nfor _ in range(int(input())):\n    (s, c, k) = map(int, input().split())\n    ans = 0\n    if s >= k:\n        ans = pow(2, s - k + 1) + 1\n        if c > s - k:\n            ans += pow(2, s - k + 1)\n            if k == 1:\n                ans += sum((pow(2, r) for r in range(s - k + 2, c + 1)))\n    elif k == 1:\n        ans += pow(2, c + 1) - 2\n    print(ans)", "import sys\n\ndef power(a, n):\n    r = 1\n    c = a\n    while n:\n        if n & 1:\n            r = r * c\n        n >>= 1\n        c = c * c\n    return r\nt = int(input())\n\ndef f2(s, c, k):\n    rows = power(2, max(s + 1, c + 1)) + 1\n    cols = max(s, c)\n    a = [[0 for x in range(cols)] for y in range(rows)]\n    size = (rows - 1) / 2\n    for x in range(s):\n        y = 0\n        while y < rows:\n            a[int(y)][int(x)] += 1\n            y += size\n        size /= 2\n    size = (rows - 1) / 2\n    for x in range(c):\n        y = size / 2\n        while y < rows:\n            a[int(y)][int(x)] += 1\n            y += size\n        size /= 2\n    count = 0\n    for y in a:\n        if sum(y) >= k:\n            count += 1\n    return count\nwhile t:\n    line = input().split()\n    s = int(line[0])\n    c = int(line[1])\n    k = int(line[2])\n    ans = 0\n    if s >= k:\n        ans = power(2, s - k + 1) + 1\n        if c > s - k:\n            ans += power(2, s - k + 1)\n            if k == 1:\n                ans += sum((power(2, r) for r in range(s - k + 2, c + 1)))\n    elif k == 1:\n        ans += power(2, c + 1) - 2\n    sys.stdout.write(str(ans) + '\\n')\n    t -= 1", "tests = int(input())\nfor t in range(tests):\n    (s, c, k) = map(int, input().split())\n    n = [0] * (s + 2)\n    for i in range(1, s):\n        n[i] = 2 ** (s - i)\n    if s > 0:\n        n[s] = 3\n    for i in range(0, c):\n        if i < s - 1:\n            n[s - i] += n[s - i - 1]\n            n[s - i - 1] = 0\n        else:\n            n[1] += 2 ** (i + 1)\n    print(sum(n[k:]))", "tests = int(input())\nfor t in range(tests):\n    (s, c, k) = map(int, input().split())\n    n = [0] * (s + 2)\n    for i in range(1, s):\n        n[i] = 2 ** (s - i)\n    if s > 0:\n        n[s] = 3\n    for i in range(0, c):\n        if i < s - 1:\n            n[s - i] += n[s - i - 1]\n            n[s - i - 1] = 0\n        else:\n            n[1] += 2 ** (i + 1)\n    print(sum(n[k:]))", "__author__ = 'AYUSH'\nt = int(input())\nfor i in range(t):\n    (s, c, k) = map(int, input().split())\n    ans = 0\n    if k == 1:\n        if s == 0:\n            l = [2 ** r for r in range(1, c + 1)]\n            ans = sum(l)\n        elif c + 1 > s and c > 0:\n            ans = 2 ** s + 1\n            l = [2 ** r for r in range(s, c + 1)]\n            ans = sum(l, ans)\n        elif s >= c + 1 and s > 0:\n            ans = 2 ** s + 1\n    if k > 1:\n        if c == 0:\n            if k < s + 1:\n                ans = 2 ** (s - k + 1) + 1\n        if s == 0:\n            ans = 0\n        elif s > 0 and c > 0 and (k <= s):\n            if c < s - k + 1:\n                ans = 2 ** (s - k + 1) + 1\n            elif c >= s - k + 1:\n                ans = 2 ** (s - k + 2) + 1\n    print(ans)", "tests = int(input())\nfor t in range(tests):\n    (s, c, k) = map(int, input().split())\n    n = [0] * (s + 2)\n    for i in range(1, s):\n        n[i] = 2 ** (s - i)\n    if s > 0:\n        n[s] = 3\n    for i in range(0, c):\n        if i < s - 1:\n            n[s - i] += n[s - i - 1]\n            n[s - i - 1] = 0\n        else:\n            n[1] += 2 ** (i + 1)\n    print(sum(n[k:]))", "t = int(input())\nfor i in range(t):\n    (s, c, k) = map(int, input().split())\n    if k == 1:\n        if s == 0:\n            counter = 0\n        else:\n            counter = 3\n        if c >= s:\n            for k in range(1, c + 1):\n                counter += 2 ** k\n        else:\n            for k in range(1, s):\n                counter += 2 ** k\n        print(counter)\n    elif k > s and k != 1:\n        print(0)\n    else:\n        if s == 0:\n            counter = 0\n        else:\n            counter = 3\n        temp = s - 1\n        nc = 1\n        cb = c\n        for sb in range(1, s):\n            if cb == 0:\n                nc = 0\n            if temp + nc >= k:\n                counter += 2 ** sb\n                temp -= 1\n                cb -= 1\n        print(counter)", "t = int(input())\nfor _ in range(t):\n    (s, c, k) = map(int, input().split())\n    ansc = 0\n    anss = 0\n    if s >= k:\n        anss = 2 * 2 ** (s - k) + 1\n    if c > s - k and s != 0 and (c > 0) and (s >= k):\n        ansc = 2 * 2 ** (s - k)\n    if s == 0 and k == 1:\n        ansc = 2 * (2 ** c - 1)\n    if k == 1 and s < c and (s != 0):\n        ansc = 2 ** (s - k + 1) * (2 ** (c - s + k) - 1)\n    print(int(anss + ansc))", "t = int(input())\npwr2 = [1]\nfor i in range(1, 52):\n    pwr2.append(pwr2[-1] * 2)\nfor it in range(t):\n    good_points = 0\n    (s, c, k) = [int(word) for word in input().split()]\n    if s >= k:\n        good_points += 3\n    for i in range(1, max(c + 1, s)):\n        soids = 0\n        if i <= s - 1:\n            soids += s - i\n        if i <= c:\n            soids += 1\n        if soids >= k:\n            good_points += pwr2[i]\n    print(good_points)", "for _ in range(int(input())):\n    (S, C, K) = map(int, input().split())\n    if K == 1:\n        print((1 << max(S, C + 1)) + 1 if S else (1 << C) - 1 << 1)\n    elif K <= S and K - 1 + C >= S:\n        print((1 << S - K + 2) + 1)\n    elif K <= S:\n        print((1 << S - K + 1) + 1)\n    else:\n        print(0)", "tt = int(input())\nwhile tt:\n    s = 0\n    (a, k, c) = map(int, input().split())\n    if c == 0:\n        s = 0\n    elif c > a + k:\n        s = 0\n    elif c == 1:\n        if a > k + 1:\n            for i in range(1, a):\n                s = s + (1 << i)\n            s = s + 3\n        else:\n            for i in range(1, k + 1):\n                s = s + (1 << i)\n            if a == 0:\n                s = s\n            else:\n                s = s + 3\n    else:\n        for i in range(c, a):\n            s = s + (1 << a - i)\n        if k == 0:\n            s = s + 3\n        elif a == 0:\n            s = 0\n        elif c <= a:\n            if c >= a - k + 1:\n                s = s + 3 + (1 << a - c + 1)\n            else:\n                s = s + 3\n        else:\n            s = 0\n    print(s)\n    tt -= 1", "import sys\ncos_i = [2 ** (i + 1) for i in range(50)]\nsin_i = [2 ** (i + 1) + 1 for i in range(50)]\nfor _ in range(int(sys.stdin.readline())):\n    (S, C, K) = map(int, sys.stdin.readline().split())\n    k_pts = [0 for _ in range(K + 1)]\n    if S - 1 >= 0:\n        k_pts[1] = sin_i[S - 1] + sum(cos_i[S - 1:C])\n    else:\n        k_pts[1] = sum(cos_i[0:C])\n    for i in range(2, K + 1):\n        if S - i >= 0:\n            if S - i < C:\n                k_pts[i] = sin_i[S - i + 1]\n            else:\n                k_pts[i] = sin_i[S - i]\n    print(k_pts[K])", "import sys\ncos_i = [2 ** (i + 1) for i in range(50)]\nsin_i = [2 ** (i + 1) + 1 for i in range(50)]\nfor _ in range(int(sys.stdin.readline())):\n    (S, C, K) = map(int, sys.stdin.readline().split())\n    cos_i = [2 ** (i + 1) for i in range(C)]\n    sin_i = [2 ** (i + 1) + 1 for i in range(S)]\n    k_pts = [0 for _ in range(K + 1)]\n    if S - 1 >= 0:\n        k_pts[1] = sin_i[S - 1] + sum(cos_i[S - 1:C])\n    else:\n        k_pts[1] = sum(cos_i[0:C])\n    for i in range(2, K + 1):\n        if S - i >= 0:\n            if S - i < C:\n                k_pts[i] = sin_i[S - i + 1]\n            else:\n                k_pts[i] = sin_i[S - i]\n    print(k_pts[K])", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (S, C, K) = map(int, sys.stdin.readline().split())\n    cos_i = [2 ** (i + 1) for i in range(C)]\n    sin_i = [2 ** (i + 1) + 1 for i in range(S)]\n    k_pts = [0 for _ in range(K + 1)]\n    if S - 1 >= 0:\n        k_pts[1] = sin_i[S - 1] + sum(cos_i[S - 1:C])\n    else:\n        k_pts[1] = sum(cos_i)\n    for i in range(2, K + 1):\n        if S - i >= 0:\n            if S - i < C:\n                k_pts[i] = sin_i[S - i + 1]\n            else:\n                k_pts[i] = sin_i[S - i]\n    print(k_pts[K])", "t = int(input())\nfor test in range(t):\n    (s, c, k) = [int(it) for it in input().split()]\n    points = []\n    for ss in range(s):\n        for item in points:\n            item[1] += 1\n        points.append([2 ** ss if ss else 3, 1])\n        if ss - 1 in range(c):\n            points[-1][1] += 1\n    for cc in range(s - 1 if s else 0, c):\n        points.append([2 ** (cc + 1), 1])\n    res = 0\n    for item in points:\n        if item[1] >= k:\n            res += item[0]\n    print(res)", "t = int(input())\nfor test in range(t):\n    (s, c, k) = [int(it) for it in input().split()]\n    points = []\n    for ss in range(s):\n        for item in points:\n            item[1] += 1\n        points.append([2 ** ss if ss else 3, 1])\n        if ss - 1 in range(c):\n            points[-1][1] += 1\n    start = s - 1 if s else 0\n    for cc in range(start, c):\n        points.append([2 ** (cc + 1), 1])\n    res = 0\n    for item in points:\n        if item[1] >= k:\n            res += item[0]\n    print(res)", "__author__ = 'sanjay'\nimport sys\n\ndef count_num_S_C(s, k):\n    if k == 1:\n        return 2 * pow(2, s) + 1\n    else:\n        return pow(2, s - k + 2) + 1\n\ndef count_num_C(s, c, k):\n    if k == 1:\n        return pow(2, c + 1) + 1\n    else:\n        return pow(2, s - k + 2) + 1\n\ndef count_num_S(s, c, k):\n    if k <= s - c:\n        return pow(2, s - k + 1) + 1\n    else:\n        return pow(2, s - k + 2) + 1\ntest = int(input())\nwhile test:\n    test -= 1\n    (s, c, k) = map(int, sys.stdin.readline().split(' '))\n    if s < 0 or c < 0 or (s - k < 0 and c - k < 0):\n        print(0)\n    elif s - k < 0 and k > 1:\n        print(0)\n    elif s == 0:\n        if k == 1:\n            print(pow(2, c + 1) - 2)\n        else:\n            print(0)\n    elif c == 0:\n        print(pow(2, s - k + 1) + 1)\n    elif s > c:\n        print(count_num_S(s, c, k))\n    elif c > s:\n        print(count_num_C(s, c, k))\n    elif s == c:\n        print(count_num_S_C(s, k))\nsys.exit(0)", "for i in range(int(input())):\n    (S, C, K) = map(int, input().split())\n    if K > S + C:\n        print(0)\n    elif K == 1:\n        if S == 0:\n            print(2 * (2 ** C - 1))\n        elif S > C:\n            print(2 ** S + 1)\n        else:\n            print(2 ** S + 2 ** S * (2 ** (C - S + 1) - 1) + 1)\n    elif S == 0 or K > S:\n        print(0)\n    elif C >= S - K + 1:\n        print(2 ** (S - K + 2) + 1)\n    else:\n        print(2 ** (S - K + 1) + 1)", "for i in range(int(input())):\n    (s, c, k) = [int(x) for x in input().split()]\n    if s == 0 and k == 1:\n        print(2 ** (c + 1) - 2)\n        continue\n    if k > s:\n        print(0)\n        continue\n    if k == 1:\n        if s > c:\n            x = s\n        else:\n            x = c + 1\n    elif s >= c + k:\n        x = max(s, c) + 1 - k\n    elif s < c:\n        x = s + 2 - k\n    else:\n        x = max(s, c) + 2 - k\n    print(2 ** x + 1)", "T = int(input())\nfor _ in range(0, T):\n    (S, C, K) = map(int, input().split())\n    if C == 0:\n        if K <= S:\n            print(pow(2, S - K + 1) + 1)\n        else:\n            print('0')\n    elif K == 1:\n        if S > C:\n            print(pow(2, S) + 1)\n        elif S == C:\n            print(pow(2, S) + 1 + pow(2, C))\n        elif S != 0:\n            print(pow(2, S) + 1 + pow(2, S) * (pow(2, C - S + 1) - 1))\n        else:\n            print(2 * (pow(2, C) - 1))\n    elif S >= K:\n        if C < S - K + 1:\n            print(pow(2, S - K + 1) + 1)\n        else:\n            print(2 * pow(2, S - K + 1) + 1)\n    else:\n        print('0')", "import math\nval = [0]\nfor i in range(1, 52):\n    val.append(pow(2, i) + 1)\nt = int(input())\nfor test in range(1, t + 1):\n    (s, c, k) = list(map(int, input().split()))\n    if s == 0 and c == 0:\n        ans = 0\n    elif s == 0 and k == 1:\n        ans = pow(2, c + 1) - 2\n    elif s == 0 and k > 1:\n        ans = 0\n    elif k > s:\n        ans = 0\n    elif c == 0:\n        ans = val[s - k + 1]\n    elif c > s and k == 1:\n        ans = val[c + 1]\n    elif s - k < c:\n        ans = val[s - k + 2]\n    else:\n        ans = val[s - k + 1]\n    print(ans)", "n = int(input())\nwhile n:\n    n -= 1\n    (a, b, c) = map(int, input().split())\n    sum = 0\n    for i in range(c, a):\n        sum = sum + 2 ** (a - i)\n    if c == 0:\n        print(0)\n    elif c > a + b:\n        print(0)\n    elif c == 1:\n        sum = 0\n        if a > b + 1:\n            for i in range(1, a):\n                sum += 2 ** i\n            print(sum + 3)\n        else:\n            for i in range(1, b + 1):\n                sum += 2 ** i\n            if a == 0:\n                print(sum)\n            else:\n                print(sum + 3)\n    elif b == 0:\n        print(sum + 3)\n    elif a == 0:\n        print(0)\n    elif c <= a:\n        if c >= a - b + 1:\n            sum = sum + 3 + 2 ** (a - c + 1)\n        else:\n            sum += 3\n        print(sum)\n    else:\n        print(0)", "def sinZeros(i, denPow):\n    multiplier = 2 ** (denPow - i)\n    ans = []\n    for k in range(0, 2 ** (i + 2) + 1, 2):\n        ans.append(multiplier * k)\n    return ans\n\ndef cosZeros(i, denPow):\n    multiplier = 2 ** (denPow - i)\n    ans = []\n    for k in range(1, 2 ** (i + 2), 2):\n        ans.append(multiplier * k)\n    return ans\n\ndef bruteforce(s, c, k):\n    denPow = max(c, s) - 1\n    hits = [0 for i in range(2 ** (denPow + 2) + 1)]\n    for i in range(s):\n        for x in sinZeros(i, denPow):\n            hits[x] += 1\n    for i in range(c):\n        for x in cosZeros(i, denPow):\n            hits[x] += 1\n    ans = 0\n    for x in hits:\n        if x >= k:\n            ans += 1\n    return ans\n\ndef c0(s, k):\n    if s < k:\n        return 0\n    return 2 ** (s + 1 - k) + 1\n\ndef k1(s, c):\n    if s == 0 and c == 0:\n        return 0\n    if c == 0:\n        return c0(s, 1)\n    if s == 0:\n        return 2 ** (c + 1) - 2\n    if c < s:\n        return c0(s, 1)\n    else:\n        return 3 + k1(0, c)\n\ndef f(s, c, k):\n    if k == 1:\n        return k1(s, c)\n    if s < k:\n        return 0\n    if k > 2:\n        return f(s - 1, c, k - 1)\n    elif c == 0:\n        return c0(s, k)\n    elif s - c >= 2:\n        return c0(s, k)\n    else:\n        return c0(s + 1, k)\n\ndef test(N, K):\n    for k in range(1, K + 1):\n        for s in range(N):\n            row = []\n            for c in range(N):\n                row.append(str(bruteforce(s, c, k)))\n            print('\\t'.join(row))\n        print()\n\ndef test2(N, K):\n    for k in range(1, K + 1):\n        for s in range(N):\n            row = []\n            for c in range(N):\n                row.append(str(f(s, c, k)))\n            print('\\t'.join(row))\n        print()\n\ndef test3(N, K):\n    for k in range(1, K + 1):\n        for s in range(N):\n            for c in range(N):\n                x = bruteforce(s, c, k)\n                y = f(s, c, k)\n                if x != y:\n                    print(k, s, c, '--', x, y)\n                    while True:\n                        x = 1\n\ndef main():\n    T = eval(input())\n    for t in range(T):\n        (s, c, k) = [eval(x) for x in input().split()]\n        if s <= 12 and c <= 12 and (k <= 25):\n            print(bruteforce(s, c, k))\n        elif s <= 50 and c == 0 and (k <= 50):\n            print(c0(s, k))\n        elif s <= 50 and c <= 50 and (k == 1):\n            print(k1(s, c))\n        else:\n            print(f(s, c, k))\nmain()"]