["def leftsearch(prefs, n, l, h, k, i):\n    while l <= h:\n        m = (l + h) // 2\n        if prefs[i - 1] - prefs[m] > k:\n            l = m + 1\n        elif m > 0:\n            if prefs[i - 1] - prefs[m - 1] > k:\n                return m\n            else:\n                h = m - 1\n        else:\n            return m\n    return -1\n\ndef rightsearch(prefs, n, l, h, k, i):\n    while l <= h:\n        m = (l + h) // 2\n        if prefs[m] - prefs[i] > k:\n            h = m - 1\n        elif m < n - 1:\n            if prefs[m + 1] - prefs[i] > k:\n                return m + 1\n            else:\n                l = m + 1\n        else:\n            return m\n    return -1\n\ndef func(n, arr):\n    if n == 1:\n        return [0]\n    if n == 2:\n        return [1, 1]\n    prefs = [0] * n\n    prefs[0] = arr[0]\n    for i in range(1, n):\n        prefs[i] = prefs[i - 1] + arr[i]\n    l = [0] * n\n    for i in range(n):\n        if i == 0:\n            m2 = rightsearch(prefs, n, i + 1, n - 1, arr[i], i)\n            if m2 == -1:\n                l[i + 1] += 1\n                l[i] -= 1\n            else:\n                l[m2] += 1\n                l[i] -= 1\n        elif i == n - 1:\n            m1 = leftsearch(prefs, n, 0, i - 1, arr[i], i)\n            l[i - 1] += 1\n            if m1 > 0:\n                l[m1 - 1] -= 1\n        else:\n            m1 = leftsearch(prefs, n, 0, i - 1, arr[i], i)\n            l[i - 1] += 1\n            if m1 > 0:\n                l[m1 - 1] -= 1\n            m2 = rightsearch(prefs, n, i + 1, n - 1, arr[i], i)\n            if m2 == -1:\n                l[i + 1] += 1\n                l[i] -= 1\n            else:\n                l[m2] += 1\n                l[i] -= 1\n    suffs = [0] * n\n    suffs[n - 1] = l[n - 1]\n    for i in range(n - 2, -1, -1):\n        suffs[i] = suffs[i + 1] + l[i]\n    return suffs\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l1 = func(n, arr)\n    print(*l1)", "for h in range(int(input())):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    res = [0] * n\n    for i in range(n):\n        j = i + 1\n        z = 0\n        while j < n:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j += 1\n        z = 0\n        j = i - 1\n        while j >= 0:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j -= 1\n    print(*res, end=' ')\n    print()", "for h in range(int(input())):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    res = [0] * n\n    for i in range(n):\n        j = i + 1\n        z = 0\n        while j < n:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j += 1\n        z = 0\n        j = i - 1\n        while j >= 0:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j -= 1\n    print(*res, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    pre = [s[0]]\n    for i in range(1, n):\n        pre.append(pre[-1] + s[i])\n    li = [0] * n\n    (li[0], li[-1]) = (1, 1)\n    if n == 1:\n        print(0)\n    else:\n        for i in range(1, n - 1):\n            li[i] = 2\n        for i in range(n):\n            for j in range(i + 2, n):\n                if pre[j - 1] - pre[i] <= s[i]:\n                    li[j] += 1\n                else:\n                    break\n        for i in range(2, n):\n            for j in range(i - 2, -1, -1):\n                if pre[i - 1] - pre[j] <= s[i]:\n                    li[j] += 1\n                else:\n                    break\n        for i in li:\n            print(i, end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    pre = [s[0]]\n    for i in range(1, n):\n        pre.append(pre[-1] + s[i])\n    li = [0] * n\n    (li[0], li[-1]) = (1, 1)\n    if n == 1:\n        print(0)\n    else:\n        for i in range(1, n - 1):\n            li[i] = 2\n        for i in range(n):\n            for j in range(i + 2, n):\n                if pre[j - 1] - pre[i] <= s[i]:\n                    li[j] += 1\n                else:\n                    break\n        for i in range(2, n):\n            for j in range(i - 2, -1, -1):\n                if pre[i - 1] - pre[j] <= s[i]:\n                    li[j] += 1\n                else:\n                    break\n        for i in li:\n            print(i, end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    pre = [s[0]]\n    for i in range(1, n):\n        pre.append(pre[-1] + s[i])\n    li = [0] * n\n    (li[0], li[-1]) = (1, 1)\n    if n == 1:\n        print(0)\n    else:\n        for i in range(1, n - 1):\n            li[i] = 2\n        for i in range(n):\n            for j in range(i + 2, n):\n                if pre[j - 1] - pre[i] <= s[i]:\n                    li[j] += 1\n                else:\n                    break\n        for i in range(2, n):\n            for j in range(i - 2, -1, -1):\n                if pre[i - 1] - pre[j] <= s[i]:\n                    li[j] += 1\n                else:\n                    break\n        for i in li:\n            print(i, end=' ')\n        print()", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    minions = [int(i) for i in input().split()]\n    votes = [0 for i in range(N)]\n    for i in range(N):\n        j = i + 1\n        z = 0\n        while j < N:\n            if minions[i] >= z:\n                votes[j] += 1\n                z += minions[j]\n            else:\n                break\n            j += 1\n        j = i - 1\n        z = 0\n        while j >= 0:\n            if minions[i] >= z:\n                votes[j] += 1\n                z += minions[j]\n            else:\n                break\n            j -= 1\n    for i in range(N):\n        print(votes[i], end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    res = [0] * n\n    for i in range(n):\n        j = i + 1\n        z = 0\n        while j < n:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j += 1\n        z = 0\n        j = i - 1\n        while j >= 0:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j -= 1\n    print(*res, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    res = [0] * n\n    for i in range(n):\n        j = i + 1\n        z = 0\n        while j < n:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j += 1\n        z = 0\n        j = i - 1\n        while j >= 0:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j -= 1\n    print(*res, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    res = [0] * n\n    for i in range(n):\n        j = i + 1\n        z = 0\n        while j < n:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j += 1\n        z = 0\n        j = i - 1\n        while j >= 0:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j -= 1\n    print(*res, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    res = [0] * n\n    for i in range(n):\n        j = i + 1\n        z = 0\n        while j < n:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j += 1\n        z = 0\n        j = i - 1\n        while j >= 0:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j -= 1\n    print(*res, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    res = [0] * n\n    for i in range(n):\n        j = i + 1\n        z = 0\n        while j < n:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j += 1\n        z = 0\n        j = i - 1\n        while j >= 0:\n            if s[i] >= z:\n                res[j] += 1\n                z += s[j]\n            else:\n                break\n            j -= 1\n    print(*res, end=' ')\n    print()", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    v = [0] * n\n    for k in range(n):\n        t = 0\n        for g in range(k + 1, n):\n            if s[k] >= t:\n                v[g] += 1\n                t += s[g]\n            else:\n                break\n        t = 0\n        for g in range(k - 1, -1, -1):\n            if s[k] >= t:\n                v[g] += 1\n                t += s[g]\n            else:\n                break\n    print(*v)", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    v = [0] * n\n    for k in range(n):\n        t = 0\n        for g in range(k + 1, n):\n            if s[k] >= t:\n                v[g] += 1\n                t += s[g]\n            else:\n                break\n        t = 0\n        for g in range(k - 1, -1, -1):\n            if s[k] >= t:\n                v[g] += 1\n                t += s[g]\n            else:\n                break\n    print(*v)", "for i in range(int(input())):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    v = [0] * n\n    for k in range(n):\n        t = 0\n        for g in range(k + 1, n):\n            if s[k] >= t:\n                v[g] += 1\n                t += s[g]\n            else:\n                break\n        t = 0\n        for g in range(k - 1, -1, -1):\n            if s[k] >= t:\n                v[g] += 1\n                t += s[g]\n            else:\n                break\n    print(*v)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    l = list(map(int, input().split()))\n    L = [0] * n\n    for j in range(n):\n        s = 0\n        for k in range(j + 1, n):\n            if s <= l[j]:\n                L[k] += 1\n                s += l[k]\n            else:\n                break\n        s = 0\n        for k in range(j - 1, -1, -1):\n            if s <= l[j]:\n                L[k] += 1\n                s += l[k]\n            else:\n                break\n    for j in L:\n        print(j, end=' ')\n    print()", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    l = list(map(int, input().split()))\n    L = [0] * n\n    for j in range(n):\n        s = 0\n        for k in range(j + 1, n):\n            if s <= l[j]:\n                L[k] += 1\n                s += l[k]\n            else:\n                break\n        s = 0\n        for k in range(j - 1, -1, -1):\n            if s <= l[j]:\n                L[k] += 1\n                s += l[k]\n            else:\n                break\n    for j in L:\n        print(j, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    pre = [s[0]]\n    for i in range(1, n):\n        pre.append(pre[-1] + s[i])\n    li = [0] * n\n    (li[0], li[-1]) = (1, 1)\n    if n == 1:\n        print(0)\n    else:\n        for i in range(1, n - 1):\n            li[i] = 2\n        for i in range(n):\n            for j in range(i + 2, n):\n                if pre[j - 1] - pre[i] <= s[i]:\n                    li[j] += 1\n                else:\n                    break\n        for i in range(2, n):\n            for j in range(i - 2, -1, -1):\n                if pre[i - 1] - pre[j] <= s[i]:\n                    li[j] += 1\n                else:\n                    break\n        for i in li:\n            print(i, end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    pre = [s[0]]\n    for i in range(1, n):\n        pre.append(pre[-1] + s[i])\n    li = [0] * n\n    (li[0], li[-1]) = (1, 1)\n    if n == 1:\n        print(0)\n    else:\n        for i in range(1, n - 1):\n            li[i] = 2\n        for i in range(n):\n            for j in range(i + 2, n):\n                if pre[j - 1] - pre[i] <= s[i]:\n                    li[j] += 1\n                else:\n                    break\n        for i in range(2, n):\n            for j in range(i - 2, -1, -1):\n                if pre[i - 1] - pre[j] <= s[i]:\n                    li[j] += 1\n                else:\n                    break\n        for i in li:\n            print(i, end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    pre = [s[0]]\n    for i in range(1, n):\n        pre.append(pre[-1] + s[i])\n    li = [0] * n\n    (li[0], li[-1]) = (1, 1)\n    if n == 1:\n        print(0)\n    else:\n        for i in range(1, n - 1):\n            li[i] = 2\n        for i in range(n):\n            for j in range(i + 2, n):\n                if pre[j - 1] - pre[i] <= s[i]:\n                    li[j] += 1\n                else:\n                    break\n        for i in range(2, n):\n            for j in range(i - 2, -1, -1):\n                if pre[i - 1] - pre[j] <= s[i]:\n                    li[j] += 1\n                else:\n                    break\n        for i in li:\n            print(i, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    minions = list(map(int, input().split()))\n    vote = [0] * n\n    for i in range(n):\n        s = 0\n        for j in range(i + 1, n):\n            if s <= minions[i]:\n                vote[j] += 1\n                s += minions[j]\n            else:\n                break\n        s = 0\n        for j in range(i - 1, -1, -1):\n            if s <= minions[i]:\n                vote[j] += 1\n                s += minions[j]\n            else:\n                break\n    print(*vote)", "for _ in range(int(input())):\n    n = int(input())\n    minions = list(map(int, input().split()))\n    vote = [0] * n\n    for i in range(n):\n        s = 0\n        for j in range(i + 1, n):\n            if s <= minions[i]:\n                vote[j] += 1\n                s += minions[j]\n            else:\n                break\n        s = 0\n        for j in range(i - 1, -1, -1):\n            if s <= minions[i]:\n                vote[j] += 1\n                s += minions[j]\n            else:\n                break\n    print(*vote)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = [0] * n\n    for j in range(n):\n        s = 0\n        for k in range(j + 1, n):\n            if s <= l[j]:\n                m[k] += 1\n                s += l[k]\n            else:\n                break\n        s = 0\n        for z in range(j - 1, -1, -1):\n            if s <= l[j]:\n                m[z] += 1\n                s += l[z]\n            else:\n                break\n    print(*m)", "for _ in range(int(input())):\n    n = int(input())\n    minions = list(map(int, input().split()))\n    vote = [0] * n\n    for i in range(n):\n        s = 0\n        for j in range(i + 1, n):\n            if s <= minions[i]:\n                vote[j] += 1\n                s += minions[j]\n            else:\n                break\n        s = 0\n        for j in range(i - 1, -1, -1):\n            if s <= minions[i]:\n                vote[j] += 1\n                s += minions[j]\n            else:\n                break\n    print(*vote)", "for _ in range(int(input())):\n    n = int(input())\n    minions = list(map(int, input().split()))\n    vote = [0] * n\n    for i in range(n):\n        s = 0\n        for j in range(i + 1, n):\n            if s <= minions[i]:\n                vote[j] += 1\n                s += minions[j]\n            else:\n                break\n        s = 0\n        for j in range(i - 1, -1, -1):\n            if s <= minions[i]:\n                vote[j] += 1\n                s += minions[j]\n            else:\n                break\n    print(*vote)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    minions = list(map(int, input().split()))\n    votos = [0] * n\n    for i in range(n):\n        s = 0\n        for j in range(i + 1, n):\n            if s <= minions[i]:\n                votos[j] += 1\n                s += minions[j]\n            else:\n                break\n        s = 0\n        for j in range(i - 1, -1, -1):\n            if s <= minions[i]:\n                votos[j] += 1\n                s += minions[j]\n            else:\n                break\n    print(*votos)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    minions = list(map(int, input().split()))\n    votos = [0] * n\n    for i in range(n):\n        suma = 0\n        for j in range(i + 1, n):\n            if suma <= minions[i]:\n                votos[j] += 1\n                suma += minions[j]\n            else:\n                break\n        suma = 0\n        for j in range(i - 1, -1, -1):\n            if suma <= minions[i]:\n                votos[j] += 1\n                suma += minions[j]\n            else:\n                break\n    print(*votos)", "total = int(input())\nfor _ in range(total):\n    n = int(input())\n    minions = [0]\n    minions += list(map(int, input().split()))\n    votos = [0] * (n + 1)\n    popularidad = [0] * (n + 1)\n    for i in range(1, n + 1):\n        popularidad[i] = popularidad[i - 1] + minions[i]\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if minions[i] < popularidad[i - 1] - popularidad[j]:\n                break\n            votos[j] += 1\n        for j in range(i + 1, n + 1):\n            if minions[i] < popularidad[j - 1] - popularidad[i]:\n                break\n            votos[j] += 1\n    for i in range(1, n + 1):\n        print(votos[i], end=' ')\n    print()", "T = int(input())\nwhile T:\n    n = int(input())\n    l = [0]\n    l += list(map(int, input().split()))\n    v = [0] * (n + 1)\n    s = [0] * (n + 1)\n    for i in range(1, n + 1):\n        s[i] = s[i - 1] + l[i]\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if l[i] < s[i - 1] - s[j]:\n                break\n            v[j] += 1\n        for j in range(i + 1, n + 1):\n            if l[i] < s[j - 1] - s[i]:\n                break\n            v[j] += 1\n    for i in range(1, n + 1):\n        print(v[i], end=' ')\n    print()\n    T = T - 1", "T = int(input())\nwhile T:\n    n = int(input())\n    l = [0]\n    l += list(map(int, input().split()))\n    v = [0] * (n + 1)\n    s = [0] * (n + 1)\n    for i in range(1, n + 1):\n        s[i] = s[i - 1] + l[i]\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if l[i] < s[i - 1] - s[j]:\n                break\n            v[j] += 1\n        for j in range(i + 1, n + 1):\n            if l[i] < s[j - 1] - s[i]:\n                break\n            v[j] += 1\n    for i in range(1, n + 1):\n        print(v[i], end=' ')\n    print()\n    T = T - 1", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    Answer = [0] * n\n    for i in range(0, n):\n        j = i + 1\n        x = 0\n        while j < n:\n            if arr1[i] >= x:\n                Answer[j] += 1\n                x += arr1[j]\n            else:\n                break\n            j += 1\n        x = 0\n        j = i - 1\n        while j >= 0:\n            if arr1[i] >= x:\n                Answer[j] += 1\n                x += arr1[j]\n            else:\n                break\n            j -= 1\n    print(*Answer, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    Answer = [0] * n\n    for i in range(0, n):\n        j = i + 1\n        x = 0\n        while j < n:\n            if arr1[i] >= x:\n                Answer[j] += 1\n                x += arr1[j]\n            else:\n                break\n            j += 1\n        x = 0\n        j = i - 1\n        while j >= 0:\n            if arr1[i] >= x:\n                Answer[j] += 1\n                x += arr1[j]\n            else:\n                break\n            j -= 1\n    print(*Answer, end=' ')\n    print()", "t = int(input())\nwhile t:\n    n = int(input())\n    l = [0] + list(map(int, input().split()))\n    v = [0] * (n + 1)\n    s = [0] * (n + 1)\n    for i in range(1, n + 1):\n        s[i] = s[i - 1] + l[i]\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if l[i] < s[i - 1] - s[j]:\n                break\n            v[j] += 1\n        for j in range(i + 1, n + 1):\n            if l[i] < s[j - 1] - s[i]:\n                break\n            v[j] += 1\n    for i in range(1, n + 1):\n        print(v[i], end=' ')\n    print()\n    t = t - 1", "t = int(input())\nwhile t:\n    n = int(input())\n    l = [0] + list(map(int, input().split()))\n    v = [0] * (n + 1)\n    s = [0] * (n + 1)\n    for i in range(1, n + 1):\n        s[i] = s[i - 1] + l[i]\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if l[i] < s[i - 1] - s[j]:\n                break\n            v[j] += 1\n        for j in range(i + 1, n + 1):\n            if l[i] < s[j - 1] - s[i]:\n                break\n            v[j] += 1\n    for i in range(1, n + 1):\n        print(v[i], end=' ')\n    print()\n    t = t - 1", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        sumx = 0\n        for j in range(i + 1, n):\n            if sumx <= a[i]:\n                b[j] += 1\n                sumx += a[j]\n            else:\n                break\n        sumx = 0\n        for j in range(i - 1, -1, -1):\n            if sumx <= a[i]:\n                b[j] += 1\n                sumx += a[j]\n            else:\n                break\n    print(' '.join(map(str, b)))", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        sumx = 0\n        for j in range(i + 1, n):\n            if sumx <= a[i]:\n                b[j] += 1\n                sumx += a[j]\n            else:\n                break\n        sumx = 0\n        for j in range(i - 1, -1, -1):\n            if sumx <= a[i]:\n                b[j] += 1\n                sumx += a[j]\n            else:\n                break\n    print(' '.join(map(str, b)))", "import random, math\nfrom copy import deepcopy as dc\nfrom bisect import bisect_left, bisect_right\n\ndef solution(li):\n    pre = []\n    s = 0\n    for i in range(len(li)):\n        s += li[i]\n        pre.append(s)\n    vote = [0] * len(li)\n    for i in range(len(li)):\n        if i != len(li) - 1:\n            mid = bisect_right(pre, pre[i] + li[i], i + 1, len(li))\n            vote[mid if mid < len(li) else len(li) - 1] += 1\n            vote[i] -= 1\n        if i != 0:\n            mid = bisect_left(pre, pre[i - 1] - li[i], 0, i)\n            vote[i - 1] += 1\n            if mid - 1 >= 0:\n                vote[mid - 1] -= 1\n    i = len(li) - 2\n    while i >= 0:\n        vote[i] += vote[i + 1]\n        i -= 1\n    return vote\n\ndef input_test():\n    for _ in range(int(input())):\n        n = int(input())\n        li = list(map(int, input().strip().split(' ')))\n        out = solution(li)\n        print(' '.join(list(map(str, out))))\ninput_test()", "def minvote(arr, n):\n    from bisect import bisect_left, bisect_right\n    prefix_sum = [arr[i] for i in range(n)]\n    votes = [0 for i in range(n + 1)]\n    for i in range(1, n):\n        prefix_sum[i] = prefix_sum[i - 1] + arr[i]\n    for i in range(n):\n        left = bisect_left(prefix_sum, prefix_sum[i - 1] - arr[i], lo=0, hi=i)\n        right = bisect_right(prefix_sum, prefix_sum[i] + arr[i], lo=i + 1, hi=n)\n        if i != 0:\n            votes[left] += 1\n            votes[i] -= 1\n        if i != n - 1:\n            votes[i + 1] += 1\n            votes[right + 1 if right + 1 <= n else n] -= 1\n    for i in range(1, n):\n        votes[i] += votes[i - 1]\n    return ' '.join(map(str, votes[:-1]))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(minvote(arr, n))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    re = [0] * n\n    for i in range(len(a)):\n        s = 0\n        for j in range(i + 1, len(a)):\n            if a[i] >= s:\n                s += a[j]\n                re[j] += 1\n            else:\n                break\n    a.reverse()\n    for i in range(len(a)):\n        s = 0\n        for j in range(i + 1, len(a)):\n            if a[i] >= s:\n                s += a[j]\n                re[len(a) - 1 - j] += 1\n            else:\n                break\n    for i in re:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    votes = [0] * n\n    for voter in range(n):\n        sm = 0\n        for cand1 in range(voter + 1, n):\n            if sm <= l[voter]:\n                votes[cand1] += 1\n            else:\n                break\n            sm += l[cand1]\n        sm = 0\n        for cand2 in range(voter - 1, -1, -1):\n            if sm <= l[voter]:\n                votes[cand2] += 1\n            else:\n                break\n            sm += l[cand2]\n    print(*votes)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    votes = [0] * n\n    for voter in range(n):\n        sm = 0\n        for cand1 in range(voter + 1, n):\n            if sm <= l[voter]:\n                votes[cand1] += 1\n            else:\n                break\n            sm += l[cand1]\n        sm = 0\n        for cand2 in range(voter - 1, -1, -1):\n            if sm <= l[voter]:\n                votes[cand2] += 1\n            else:\n                break\n            sm += l[cand2]\n    print(*votes)", "from sys import stdin\nt = int(stdin.readline())\nwhile t != 0:\n    n = int(stdin.readline())\n    inp = list(map(int, stdin.readline().split()))\n    v = [0] * n\n    for i in range(n):\n        sum1 = 0\n        sum2 = 0\n        if i + 1 < n:\n            v[i + 1] += 1\n        if i - 1 >= 0:\n            v[i - 1] += 1\n        for j in range(i - 1, -1, -1):\n            sum2 = sum2 + inp[j]\n            if j - 1 >= 0 and sum2 <= inp[i]:\n                v[j - 1] += 1\n            else:\n                break\n        for j in range(i + 1, n):\n            sum1 = sum1 + inp[j]\n            if sum1 <= inp[i] and j + 1 < n:\n                v[j + 1] += 1\n            else:\n                break\n    for i in range(n):\n        print(v[i], end=' ')\n    print('')\n    t = t - 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    inp = list(map(int, input().split()))\n    v = [0] * n\n    for i in range(n):\n        sum1 = 0\n        sum2 = 0\n        if i + 1 < n:\n            v[i + 1] += 1\n        if i - 1 >= 0:\n            v[i - 1] += 1\n        for j in range(i - 1, -1, -1):\n            sum2 = sum2 + inp[j]\n            if j - 1 >= 0 and sum2 <= inp[i]:\n                v[j - 1] += 1\n            else:\n                break\n        for j in range(i + 1, n):\n            sum1 = sum1 + inp[j]\n            if sum1 <= inp[i] and j + 1 < n:\n                v[j + 1] += 1\n            else:\n                break\n    for i in range(n):\n        print(v[i], end=' ')\n    print('')\n    t = t - 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    inp = list(map(int, input().split()))\n    v = [0] * n\n    for i in range(n):\n        sum1 = 0\n        sum2 = 0\n        if i + 1 < n:\n            v[i + 1] += 1\n        if i - 1 >= 0:\n            v[i - 1] += 1\n        for j in range(i - 1, -1, -1):\n            sum2 = sum2 + inp[j]\n            if j - 1 >= 0 and sum2 <= inp[i]:\n                v[j - 1] += 1\n            else:\n                break\n        for j in range(i + 1, n):\n            sum1 = sum1 + inp[j]\n            if sum1 <= inp[i] and j + 1 < n:\n                v[j + 1] += 1\n            else:\n                break\n    for i in range(n):\n        print(v[i], end=' ')\n    print('')\n    t = t - 1", "res = []\n\ndef getSum(nums, sums, i, j):\n    if j > i:\n        return sums[j] - nums[j] - sums[i]\n    elif i > j:\n        return sums[i] - nums[i] - sums[j]\n    else:\n        return 0\nfor _ in range(0, int(input())):\n    n = input()\n    nums = list(map(int, input().split(' ')))\n    sums = [0] * len(nums)\n    sums[0] = nums[0]\n    for k in range(1, len(nums)):\n        sums[k] = sums[k - 1] + nums[k]\n    votes = [0] * len(nums)\n    for j in range(0, len(nums)):\n        for i in range(j + 1, len(nums)):\n            if getSum(nums, sums, j, i) > nums[j]:\n                break\n            votes[i] += 1\n        for i in range(j - 1, -1, -1):\n            if getSum(nums, sums, i, j) > nums[j]:\n                break\n            votes[i] += 1\n    vote = ''\n    for v in votes:\n        vote += ' ' + str(v)\n    res.append(vote.lstrip())\nfor xx in res:\n    print(xx)", "t = int(input().strip())\nfor i in range(t):\n    n = int(input().strip())\n    a = [int(x) for x in input().strip().split(' ')]\n    w = [0] * n\n    for j in range(n - 1):\n        s = 0\n        for k in range(j + 1, n):\n            if s <= a[j]:\n                w[k] += 1\n                s += a[k]\n            else:\n                break\n    for i in range(n - 1, 0, -1):\n        s = 0\n        for j in range(i - 1, -1, -1):\n            if s <= a[i]:\n                w[j] += 1\n                s += a[j]\n            else:\n                break\n    for i in w:\n        print(i, end=' ')\n    print()", "def dfs(root):\n    vis[root] = 1\n    print(root)\n    for i in edge[root]:\n        if not vis[i]:\n            dfs(i)\n    return\n\ndef main():\n    t = 1\n    while t:\n        t = int(input())\n        while t:\n            n = int(input())\n            a = list(map(int, input().strip().split()))\n            sum = [0] * n\n            t -= 1\n            sum[0] = a[0]\n            votes = [0] * n\n            for i in range(1, n):\n                sum[i] = sum[i - 1] + a[i]\n            for j in range(n):\n                for i in range(j + 1, n):\n                    if abs(sum[i] - sum[j] - a[i]) > a[j]:\n                        break\n                    votes[i] += 1\n                for i in range(j - 1, -1, -1):\n                    if abs(sum[j] - sum[i] - a[j]) > a[j]:\n                        break\n                    votes[i] += 1\n            print(' '.join(map(str, votes)))\nmain()", "from itertools import accumulate\nfrom bisect import bisect_left, bisect_right\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = list(accumulate(a))\n    res = [0] * (n + 2)\n    for (i, (x, y)) in enumerate(zip(s, a)):\n        l = bisect_left(s, x - 2 * y, 0, i)\n        res[l] += 1\n        r = bisect_right(s, x + y, i + 1)\n        res[r + 1] -= 1\n    print(*(x - 1 for x in accumulate(res[:n])))", "from itertools import accumulate\nfrom bisect import bisect_left, bisect_right\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = list(accumulate(a))\n    res = [0] * (n + 2)\n    for (i, (x, y)) in enumerate(zip(s, a)):\n        l = bisect_left(s, x - 2 * y, 0, i)\n        res[l] += 1\n        r = bisect_right(s, x + y, i + 1) + 1\n        res[r] -= 1\n    print(*(x - 1 for x in accumulate(res[:n])))", "from itertools import accumulate\nfrom bisect import bisect_left, bisect_right\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = list(accumulate(a))\n    res = [0] * (n + 2)\n    for (i, (x, y)) in enumerate(zip(s, a)):\n        l = bisect_left(s, x - 2 * y, 0, i)\n        res[l] += 1\n        r = bisect_right(s, x + y, i) + 1\n        res[r] -= 1\n    print(*(x - 1 for x in accumulate(res[:n])))", "import sys\nimport copy\n\ndef read(typ=str):\n    return list(map(typ, sys.stdin.readline().split()))\ntest = int(input())\nfor _ in range(test):\n    n = int(input())\n    arr = [int(x) for x in input().strip().split()]\n    temp = [0 for _ in range(n)]\n    sumF = 0\n    sumB = 0\n    (sumF, sumB) = (0, 0)\n    for i in range(n - 1):\n        sumF = 0\n        for j in range(i + 1, n):\n            if arr[i] >= sumF:\n                temp[j] += 1\n                sumF += arr[j]\n            else:\n                break\n    for i in range(n - 1, 0, -1):\n        sumB = 0\n        for j in range(i - 1, -1, -1):\n            if arr[i] >= sumB:\n                temp[j] += 1\n                sumB += arr[j]\n            else:\n                break\n    temp = map(str, temp)\n    print(' '.join(temp))", "import math\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = [0] * n\n    for j in range(0, n):\n        s1 = 0\n        for k in range(j + 1, n):\n            if s1 <= a[j]:\n                s1 += a[k]\n                b[k] += 1\n            else:\n                break\n        s1 = 0\n        for k in range(j - 1, -1, -1):\n            if s1 <= a[j]:\n                s1 += a[k]\n                b[k] += 1\n            else:\n                break\n    print(' '.join(map(str, b)))", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = list(map(int, input().split()))\n    minvote = [0] * n\n    for i in range(n):\n        sum = 0\n        for j in range(i + 1, n):\n            if sum > s[i]:\n                break\n            else:\n                sum += s[j]\n                minvote[j] += 1\n        sum = 0\n        for k in range(i - 1, -1, -1):\n            if sum > s[i]:\n                break\n            else:\n                sum += s[k]\n                minvote[k] += 1\n    print(*minvote)", "for _ in range(int(input())):\n    N = int(input())\n    S = list(map(int, input().split()))\n    t = [0] * N\n    if N == 1:\n        print('0')\n    else:\n        s = [0] * N\n        for i in range(0, N):\n            sum = 0\n            for j in range(i + 1, N):\n                if sum <= S[i]:\n                    s[j] += 1\n                    sum += S[j]\n                else:\n                    break\n            sum = 0\n            for j in range(i - 1, -1, -1):\n                if sum <= S[i]:\n                    s[j] += 1\n                    sum += S[j]\n                else:\n                    break\n        print(*s)", "def problem3(n, list):\n    Graph = [0] * n\n    for i in range(n):\n        diff = 0\n        for j in range(i - 1, -1, -1):\n            if list[i] >= diff:\n                Graph[j] += 1\n                diff = diff + list[j]\n            else:\n                break\n    for i in range(n):\n        diff = 0\n        for j in range(i + 1, n):\n            if list[i] >= diff:\n                Graph[j] += 1\n                diff = diff + list[j]\n            else:\n                break\n    print(*Graph)\ntest = int(input())\nfor i in range(test):\n    n = int(input())\n    l = list(map(int, input().split()))\n    problem3(n, l)", "from collections import defaultdict as dd\nfrom itertools import permutations as pp\nfrom math import *\nfrom random import randint as rd\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    left = 0\n    right = 0\n    lk = [0] * (n + 1)\n    for i in range(1, n + 1):\n        lk[i] = lk[i - 1] + a[i - 1]\n    b = a[::-1]\n    rk = [0] * (n + 1)\n    for i in range(1, n + 1):\n        rk[i] = rk[i - 1] + b[i - 1]\n    ans = [0] * (n + 2)\n    for i in range(n):\n        st = br(lk, a[i] + lk[i + 1], i + 1, n + 1)\n        if st == n + 1:\n            st = st - 1\n        ans[i + 1] += 1\n        ans[st] += -1\n    for i in range(n):\n        st = br(rk, b[i] + rk[i + 1], i + 1, n + 1)\n        if st == n + 1:\n            st -= 1\n        ans[n - st] += 1\n        ans[n - i - 1] -= 1\n    for i in range(n + 2):\n        ans[i] += ans[i - 1]\n    print(*ans[:-2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    rev = list(reversed(arr))\n    vote = [2] * n\n    vote[0] -= 1\n    vote[n - 1] -= 1\n    for j in range(n - 2):\n        summ = 0\n        for k in range(j + 2, n):\n            summ += arr[k - 1]\n            if summ <= arr[j]:\n                vote[k] += 1\n            else:\n                break\n        summ = 0\n        for k in range(j + 2, n):\n            summ += rev[k - 1]\n            if summ <= rev[j]:\n                vote[n - 1 - k] += 1\n            else:\n                break\n    print(*vote)", "for t in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split(' ')))\n    vote = [0] * n\n    for i in range(n):\n        sum1 = 0\n        sum2 = 0\n        for j in range(i - 1, -1, -1):\n            if sum2 <= s[i]:\n                vote[j] += 1\n                sum2 += s[j]\n            else:\n                break\n        for j in range(i + 1, n):\n            if sum1 <= s[i]:\n                vote[j] += 1\n                sum1 += s[j]\n            else:\n                break\n    for num in vote:\n        print(num, end=' ')\n    print('')", "T = int(input())\nfor t in range(0, T):\n    N = int(input())\n    S = list(map(int, input().split(' ')))\n    votes = [0] * N\n    for i in range(N):\n        forward = 0\n        backward = 0\n        for j in range(i - 1, -1, -1):\n            if backward <= S[i]:\n                votes[j] += 1\n                backward += S[j]\n            else:\n                break\n        for j in range(i + 1, N):\n            if forward <= S[i]:\n                votes[j] += 1\n                forward += S[j]\n            else:\n                break\n    for v in votes:\n        print(v, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    vote = [0] * n\n    for i in range(n):\n        fs = 0\n        for j in range(i - 1, -1, -1):\n            if fs > a[i]:\n                break\n            else:\n                fs += a[j]\n                vote[j] += 1\n        bs = 0\n        for k in range(i + 1, n):\n            if bs > a[i]:\n                break\n            else:\n                bs += a[k]\n                vote[k] += 1\n    print(*vote)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = [0] * n\n    s[0] = a[0]\n    for j in range(1, n):\n        s[j] = s[j - 1] + a[j]\n    ans = [0] * n\n    for j in range(n):\n        k = j + 1\n        while k < n:\n            if a[j] >= s[k - 1] - s[j]:\n                ans[k] = ans[k] + 1\n                k += 1\n            else:\n                break\n        k = j - 1\n        while k >= 0:\n            if a[j] >= s[j - 1] - s[k]:\n                ans[k] += 1\n                k -= 1\n            else:\n                break\n    for j in range(n):\n        print(ans[j], end=' ')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    w = [0] * n\n    for j in range(n - 1):\n        sum1 = 0\n        for k in range(j + 1, n):\n            if sum1 <= a[j]:\n                w[k] += 1\n                sum1 += a[k]\n            else:\n                break\n    for j in range(n - 1, 0, -1):\n        sum1 = 0\n        for k in range(j - 1, -1, -1):\n            if sum1 <= a[j]:\n                w[k] += 1\n                sum1 += a[k]\n            else:\n                break\n    print(' '.join((str(y) for y in w)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for j in range(n - 1):\n        sum1 = 0\n        for k in range(j + 1, n):\n            if sum1 <= a[j]:\n                b[k] += 1\n                sum1 += a[k]\n            else:\n                break\n    for j in range(n - 1, 0, -1):\n        sum1 = 0\n        for k in range(j - 1, -1, -1):\n            if sum1 <= a[j]:\n                b[k] += 1\n                sum1 += a[k]\n            else:\n                break\n    print(' '.join((str(x) for x in b)))", "y = int(input())\nnumber = [0 for P in range(y)]\ns = [[] for Q in range(y)]\nfor I in range(y):\n    number[I] = int(input())\n    l = input().split()\n    for a in range(number[I]):\n        s[I].append(int(l[a]))\nv = [[] for R in range(y)]\nfor I in range(y):\n    if number[I] > 1:\n        v[I].append(1)\n        for D in range(1, number[I] - 1):\n            v[I].append(2)\n        v[I].append(1)\n    else:\n        print(0)\n        continue\n    for k in range(2, number[I]):\n        sumx = 0\n        for M in range(k - 1, 0, -1):\n            sumx += s[I][M]\n            if sumx > s[I][k]:\n                break\n            v[I][M - 1] += 1\n    for k in range(0, number[I] - 2):\n        sumx = 0\n        for M in range(k + 1, number[I] - 1):\n            sumx += s[I][M]\n            if sumx > s[I][k]:\n                break\n            v[I][M + 1] += 1\n    for y in v[I]:\n        print(y, end=' ')\n    print('')", "z = int(input())\nnum = [0 for P in range(z)]\ns = [[] for Q in range(z)]\nfor I in range(z):\n    num[I] = int(input())\n    l = input().split()\n    for a in range(num[I]):\n        s[I].append(int(l[a]))\nv = [[] for R in range(z)]\nfor I in range(z):\n    if num[I] > 1:\n        v[I].append(1)\n        for D in range(1, num[I] - 1):\n            v[I].append(2)\n        v[I].append(1)\n    else:\n        print(0)\n        continue\n    for k in range(2, num[I]):\n        sumx = 0\n        for M in range(k - 1, 0, -1):\n            sumx += s[I][M]\n            if sumx > s[I][k]:\n                break\n            v[I][M - 1] += 1\n    for k in range(0, num[I] - 2):\n        sumx = 0\n        for M in range(k + 1, num[I] - 1):\n            sumx += s[I][M]\n            if sumx > s[I][k]:\n                break\n            v[I][M + 1] += 1\n    for z in v[I]:\n        print(z, end=' ')\n    print('')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    v = [0] * n\n    for i in range(n):\n        s1 = 0\n        s2 = 0\n        if i + 1 < n:\n            v[i + 1] += 1\n        if i - 1 >= 0:\n            v[i - 1] += 1\n        for j in range(i + 1, n):\n            s1 = s1 + a[j]\n            if s1 <= a[i] and j + 1 < n:\n                v[j + 1] += 1\n            else:\n                break\n        for j in range(i - 1, -1, -1):\n            s2 = s2 + a[j]\n            if s2 <= a[i] and j - 1 >= 0:\n                v[j - 1] += 1\n            else:\n                break\n    for i in range(n):\n        print(v[i], end=' ')\n    print()\n    t = t - 1", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    inp = list(map(int, input().split()))\n    v = [0] * n\n    for i in range(n):\n        sum1 = 0\n        sum2 = 0\n        if i + 1 < n:\n            v[i + 1] += 1\n        if i - 1 >= 0:\n            v[i - 1] += 1\n        for j in range(i - 1, -1, -1):\n            sum2 = sum2 + inp[j]\n            if j - 1 >= 0 and sum2 <= inp[i]:\n                v[j - 1] += 1\n            else:\n                break\n        for j in range(i + 1, n):\n            sum1 = sum1 + inp[j]\n            if sum1 <= inp[i] and j + 1 < n:\n                v[j + 1] += 1\n            else:\n                break\n    for i in range(n):\n        print(v[i], end=' ')\n    print('')\n    t = t - 1", "t = int(input().strip())\nwhile t:\n    n = int(input().strip())\n    a = [int(x) for x in input().strip().split()]\n    b = [0] * n\n    for i in range(n):\n        inf = a[i]\n        j = i + 1\n        while inf >= 0 and i != n - 1 and (j < n):\n            b[j] += 1\n            inf -= a[j]\n            j += 1\n        inf = a[i]\n        j = i - 1\n        while inf >= 0 and i and (j >= 0):\n            b[j] += 1\n            inf -= a[j]\n            j -= 1\n    for x in b:\n        print(x, end=' ')\n    print()\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    v = [0] * n\n    for i in range(n):\n        s1 = 0\n        s2 = 0\n        if i + 1 < n:\n            v[i + 1] += 1\n        if i - 1 >= 0:\n            v[i - 1] += 1\n        for j in range(i + 1, n):\n            s1 = s1 + a[j]\n            if s1 <= a[i] and j + 1 < n:\n                v[j + 1] += 1\n            else:\n                break\n        for j in range(i - 1, -1, -1):\n            s2 = s2 + a[j]\n            if s2 <= a[i] and j - 1 >= 0:\n                v[j - 1] += 1\n            else:\n                break\n    for i in range(n):\n        print(v[i], end=' ')\n    print()\n    t = t - 1", "tst = int(input())\nst = []\nd = 0\nfor x in range(0, tst):\n    num = int(input())\n    arr = [int(y) for y in input().split(' ')]\n    lst = []\n    n = 0\n    for i in range(0, num):\n        lst.append(n)\n    for j in range(0, len(arr)):\n        cnt = 0\n        for k in range(j + 1, len(arr), 1):\n            if arr[j] >= cnt:\n                lst[k] += 1\n            else:\n                break\n            cnt += arr[k]\n        b = 0\n        if j > 0:\n            for i in range(j - 1, -1, -1):\n                if arr[j] >= b:\n                    lst[i] += 1\n                else:\n                    break\n                b += arr[i]\n    for i in range(0, len(lst)):\n        print(lst[i], end=' ')\n    print()", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    for (i, ele) in enumerate(arr):\n        dist = -ele\n        for j in range(i, 0, -1):\n            dist += arr[j]\n            if dist > ele:\n                break\n            else:\n                ans[j - 1] += 1\n        dist = -ele\n        for j in range(i, n - 1, +1):\n            dist += arr[j]\n            if dist > ele:\n                break\n            else:\n                ans[j + 1] += 1\n    print(*ans)", "n = int(input())\nr = []\nq = []\na = []\np = []\nfor i in range(0, n):\n    d = int(input())\n    a.append(d)\n    p = [int(x) for x in input().split(' ')]\n    q.append(p)\nx = 0\nfor i in range(0, n):\n    u = []\n    m = 0\n    for o in range(0, a[i]):\n        u.append(m)\n    for j in range(0, len(q[i])):\n        s = 0\n        for k in range(j + 1, len(q[i]), 1):\n            if q[i][j] >= s:\n                u[k] = u[k] + 1\n            else:\n                break\n            s = s + q[i][k]\n        s1 = 0\n        if j > 0:\n            for k in range(j - 1, -1, -1):\n                if q[i][j] >= s1:\n                    u[k] = u[k] + 1\n                else:\n                    break\n                s1 = s1 + q[i][k]\n    r.append(u)\nfor i in range(0, len(r)):\n    for j in range(0, len(r[i])):\n        print(r[i][j], end=' ')\n    print()", "N = 5\ns = ['1', '2', '2', '3', '1']\nimport numpy as np\nimport bisect\nfrom operator import add\n\ndef add1(arr, N, lo, hi, val):\n    arr[lo] += val\n    if hi != N - 1:\n        arr[hi + 1] -= val\n    return arr\n\ndef updateArray(arr, N):\n    for i in range(1, N):\n        arr[i] += arr[i - 1]\n    return arr\n\ndef chef(N, s):\n    s = list(map(int, s))\n    prefix = [0] * N\n    suffix = [0] * N\n    p1 = 0\n    s1 = 0\n    for i in range(0, N):\n        p1 += s[i]\n        prefix[i] = p1\n        s1 += s[N - i - 1]\n        suffix[i] = s1\n    right = [0] * N\n    left = [0] * N\n    for i in range(0, N):\n        key = prefix[i] + s[i]\n        x = bisect.bisect_right(prefix, key)\n        if x > N - 1:\n            x = N - 1\n        right[i] = x\n    for i in range(0, N):\n        key = suffix[i] + s[N - i - 1]\n        x = bisect.bisect_right(suffix, key)\n        if x > N - 1:\n            x = N - 1\n        left[i] = N - x - 1\n    left.reverse()\n    ans = [0] * N\n    for i in range(0, N):\n        add1(ans, N, left[i], right[i], 1)\n    updateArray(ans, N)\n    for i in range(0, N):\n        ans[i] -= 1\n    str2 = ' '.join((str(x) for x in ans))\n    return str2\nT = int(input())\noutputs = []\nfor i in range(0, T):\n    N = int(input())\n    s = input().split()\n    ans = chef(N, s)\n    outputs.append(ans)\nfor i in outputs:\n    print(i)", "n = int(input())\nfor i in range(0, n):\n    a = int(input())\n    p = [int(x) for x in input().split(' ')]\n    l = []\n    m = 0\n    for i in range(0, a):\n        l.append(m)\n    for j in range(0, len(p)):\n        s = 0\n        for k in range(j + 1, len(p), 1):\n            if p[j] >= s:\n                l[k] = l[k] + 1\n            else:\n                break\n            s = s + p[k]\n        s1 = 0\n        if j > 0:\n            for k in range(j - 1, -1, -1):\n                if p[j] >= s1:\n                    l[k] = l[k] + 1\n                else:\n                    break\n                s1 = s1 + p[k]\n    for i in range(0, len(l)):\n        print(l[i], end=' ')\n    print()", "T = int(input())\nN = [0 for p in range(T)]\nS = [[] for q in range(T)]\nfor i in range(T):\n    N[i] = int(input())\n    l = input().split()\n    for j in range(N[i]):\n        S[i].append(int(l[j]))\nV = [[] for r in range(T)]\nfor i in range(T):\n    if N[i] > 1:\n        V[i].append(1)\n        for d in range(1, N[i] - 1):\n            V[i].append(2)\n        V[i].append(1)\n    else:\n        print(0)\n        continue\n    for k in range(2, N[i]):\n        sumy = 0\n        for m in range(k - 1, 0, -1):\n            sumy += S[i][m]\n            if sumy > S[i][k]:\n                break\n            V[i][m - 1] += 1\n    for k in range(0, N[i] - 2):\n        sumy = 0\n        for m in range(k + 1, N[i] - 1):\n            sumy += S[i][m]\n            if sumy > S[i][k]:\n                break\n            V[i][m + 1] += 1\n    for t in V[i]:\n        print(t, end=' ')\n    print('')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(n - 1):\n        s = 0\n        for j in range(i + 1, n):\n            if s <= a[i]:\n                ans[j] += 1\n            else:\n                break\n            s += a[j]\n    for i in range(n - 1, -1, -1):\n        s = 0\n        for j in range(i - 1, -1, -1):\n            if s <= a[i]:\n                ans[j] += 1\n            else:\n                break\n            s += a[j]\n    print(*ans)", "testcase = int(input())\nfor tests in range(testcase):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    final_lst = [0 for i in range(n)]\n    for i in range(n):\n        p = 0\n        for k in range(i + 1, n):\n            p += lst[k]\n            if p - lst[k] <= lst[i]:\n                final_lst[k] += 1\n            else:\n                break\n        p = 0\n        for j in range(i - 1, -1, -1):\n            p += lst[j]\n            if p - lst[j] <= lst[i]:\n                final_lst[j] += 1\n            else:\n                break\n    for m in final_lst:\n        print(m, end=' ')\n    print()", "for t in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().strip().split()))\n    vote = [0 for i in range(n)]\n    for i in range(n):\n        influence = 0\n        voting = s[i]\n        for j in range(i + 1, n):\n            if voting >= influence:\n                vote[j] += 1\n            else:\n                break\n            influence += s[j]\n        influence = 0\n        for j in range(i - 1, -1, -1):\n            if voting >= influence:\n                vote[j] += 1\n            else:\n                break\n            influence += s[j]\n    print(' '.join([str(i) for i in vote]))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.insert(0, 0)\n    prefix = [0] * 100010\n    suffix = [0] * 100010\n    for i in range(1, n):\n        total = 0\n        for j in range(i + 1, n + 1):\n            total += l[j]\n            if total > l[i]:\n                break\n        prefix[i + 1] += 1\n        prefix[j + 1] -= 1\n    for i in range(n, 1, -1):\n        total = 0\n        for j in range(i - 1, 0, -1):\n            total += l[j]\n            if total > l[i]:\n                break\n        suffix[i] -= 1\n        suffix[j] += 1\n    for i in range(1, n + 1):\n        prefix[i] += prefix[i - 1]\n        suffix[i] += suffix[i - 1]\n        print(prefix[i] + suffix[i], end=' ')\n    print()", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    br = [0] * (n + 1)\n    for i in range(n):\n        sums = 0\n        for j in range(i + 1, n):\n            if sums <= arr[i]:\n                br[j] += 1\n            else:\n                break\n            sums += arr[j]\n    for i in range(n - 1, -1, -1):\n        sums = 0\n        for j in range(i - 1, -1, -1):\n            if sums <= arr[i]:\n                br[j] += 1\n            else:\n                break\n            sums += arr[j]\n    for i in range(n):\n        print(br[i], end=' ')\n    print()\n    t -= 1", "import sys\nimport math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    c = [0] * n\n    a = list(map(int, input().split()))\n    for i in range(n):\n        s = 0\n        for j in range(i + 1, n):\n            if a[i] >= s:\n                s += a[j]\n                c[j] += 1\n            else:\n                break\n        s = 0\n        for j in range(i - 1, -1, -1):\n            if a[i] >= s:\n                s += a[j]\n                c[j] += 1\n            else:\n                break\n    for j in range(0, n):\n        print(c[j], end=' ')\n    print()", "T = int(input())\nfor cases in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    votes = []\n    for i in range(N):\n        votes.append(0)\n    s = ''\n    for i in range(N):\n        c = 0\n        for j in range(i + 1, N):\n            if c <= A[i]:\n                votes[j] += 1\n            else:\n                break\n            c += A[j]\n        c = 0\n        for j in range(i - 1, -1, -1):\n            if c <= A[i]:\n                votes[j] += 1\n            else:\n                break\n            c += A[j]\n    for i in range(N):\n        s += str(votes[i]) + ' '\n    print(s)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    vote = [0] * N\n    cs = list()\n    sum = 0\n    for x in A:\n        sum = sum + x\n        cs.append(sum)\n    for i in range(N):\n        for j in range(i - 1, -1, -1):\n            if cs[i - 1] - cs[j] <= A[i]:\n                vote[j] += 1\n            else:\n                break\n        for j in range(i + 1, N):\n            if cs[j - 1] - cs[i] <= A[i]:\n                vote[j] += 1\n            else:\n                break\n    print(*vote)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n >= 2:\n        y = [2] * n\n        y[0] = 1\n        y[n - 1] = 1\n        for k in range(0, n - 2):\n            sum = 0\n            for l in range(k + 1, n - 1):\n                sum += a[l]\n                if sum <= a[k]:\n                    y[l + 1] += 1\n                else:\n                    break\n        for m in range(n - 1, 1, -1):\n            sum = 0\n            for o in range(m - 1, 0, -1):\n                sum += a[o]\n                if sum <= a[m]:\n                    y[o - 1] += 1\n                else:\n                    break\n        print(*y)\n    else:\n        print(0)", "def left_traversal(i, A, prefix, count_list):\n    low = 0\n    high = i - 1\n    if A[i] >= prefix[i - 1] - prefix[low]:\n        count_list[low] += 1\n        count_list[i] -= 1\n        return count_list\n    elif A[i] < A[i - 1]:\n        count_list[high] += 1\n        count_list[i] -= 1\n        return count_list\n    else:\n        curr_pos = high\n        while low < high:\n            mid = (low + high) // 2\n            if A[i] >= prefix[i - 1] - prefix[mid]:\n                if mid < curr_pos:\n                    curr_pos = mid\n                high = mid\n            else:\n                low = mid + 1\n        count_list[curr_pos] += 1\n        count_list[i] -= 1\n    return count_list\n\ndef right_traversal(i, A, prefix, count_list, N):\n    low = i + 1\n    high = N - 1\n    if A[i] >= prefix[high - 1] - prefix[i]:\n        count_list[low] += 1\n        return count_list\n    elif A[i] < A[i + 1]:\n        count_list[i + 1] += 1\n        count_list[i + 2] -= 1\n        return count_list\n    else:\n        curr_pos = low\n        while low < high:\n            mid = (low + high) // 2\n            if A[i] >= prefix[mid - 1] - prefix[i]:\n                if mid > curr_pos:\n                    curr_pos = mid\n                    low = mid + 1\n            else:\n                high = mid\n        count_list[curr_pos + 1] -= 1\n        count_list[i + 1] += 1\n    return count_list\nT = int(input())\nfor eachtestcase in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    prefix = [A[0]]\n    count_list = [0] * N\n    for i in range(1, N):\n        prefix.append(prefix[i - 1] + A[i])\n    for i in range(1, N):\n        count_list = left_traversal(i, A, prefix, count_list)\n    for i in range(N - 1):\n        count_list = right_traversal(i, A, prefix, count_list, N)\n    numvotes = [count_list[0]]\n    for i in range(1, N):\n        numvotes.append(numvotes[i - 1] + count_list[i])\n    print(*numvotes, sep=' ')", "def leftup(i, S, prefix, count):\n    left = 0\n    right = i - 1\n    if S[i] >= prefix[i - 1] - prefix[left]:\n        count[left] += 1\n        count[i] -= 1\n        return count\n    elif S[i] < S[i - 1]:\n        count[right] += 1\n        count[i] -= 1\n        return count\n    else:\n        pos = right\n        while left < right:\n            mid = (left + right) // 2\n            if S[i] >= prefix[i - 1] - prefix[mid]:\n                if mid < pos:\n                    pos = mid\n                right = mid\n            else:\n                left = mid + 1\n        count[pos] += 1\n        count[i] -= 1\n    return count\n\ndef rightup(i, S, prefix, count, N):\n    left = i + 1\n    right = N - 1\n    if S[i] >= prefix[right - 1] - prefix[i]:\n        count[left] += 1\n        return count\n    elif S[i] < S[i + 1]:\n        count[i + 1] += 1\n        count[i + 2] -= 1\n        return count\n    else:\n        pos = left\n        while left < right:\n            mid = (left + right) // 2\n            if S[i] >= prefix[mid - 1] - prefix[i]:\n                if mid > pos:\n                    pos = mid\n                left = mid + 1\n            else:\n                right = mid\n        count[pos + 1] -= 1\n        count[i + 1] += 1\n        return count\nT = int(input())\nfor testCase in range(T):\n    N = int(input())\n    S = list(map(int, input().split()))\n    prefix = [S[0]]\n    for i in range(1, N):\n        prefix.append(prefix[i - 1] + S[i])\n    count = [0] * N\n    for i in range(1, N):\n        count = leftup(i, S, prefix, count)\n    for i in range(N - 1):\n        count = rightup(i, S, prefix, count, N)\n    votes = [count[0]]\n    for i in range(1, N):\n        votes.append(votes[i - 1] + count[i])\n    print(*votes, sep=' ')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    if n == 1:\n        print('0')\n    elif n == 2:\n        print('1 1')\n    else:\n        co = [0] * n\n        for j in range(n):\n            (cs, k) = (0, j + 1)\n            while k < n and cs <= s[j]:\n                co[k] += 1\n                cs += s[k]\n                k += 1\n            (cs, k) = (0, j - 1)\n            while k >= 0 and cs <= s[j]:\n                co[k] += 1\n                cs += s[k]\n                k -= 1\n        for j in range(n):\n            print(co[j], end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    influences = list(map(int, input().split()))\n    rev_infl = list(reversed(influences[:]))\n    sums = influences[:]\n    rsums = rev_infl\n    for i in range(1, n):\n        sums[i] += sums[i - 1]\n        rsums[i] += rsums[i - 1]\n    votes = [0] * n\n    for i in range(0, n - 1):\n        j = i + 1\n        while j < n and sums[j - 1] - sums[i] <= influences[i]:\n            votes[j] += 1\n            j += 1\n        u = n - 1 - i\n        v = u - 1\n        while v >= 0 and sums[u - 1] - sums[v] <= influences[u]:\n            votes[v] += 1\n            v -= 1\n    print(' '.join(map(str, votes)))", "def leftup(i, S, prefix, count):\n    left = 0\n    right = i - 1\n    if S[i] >= prefix[i - 1] - prefix[left]:\n        count[left] += 1\n        count[i] -= 1\n        return count\n    elif S[i] < S[i - 1]:\n        count[right] += 1\n        count[i] -= 1\n        return count\n    else:\n        pos = right\n        while left < right:\n            mid = (left + right) // 2\n            if S[i] >= prefix[i - 1] - prefix[mid]:\n                if mid < pos:\n                    pos = mid\n                right = mid\n            else:\n                left = mid + 1\n        count[pos] += 1\n        count[i] -= 1\n    return count\n\ndef rightup(i, S, prefix, count, N):\n    left = i + 1\n    right = N - 1\n    if S[i] >= prefix[right - 1] - prefix[i]:\n        count[left] += 1\n        return count\n    elif S[i] < S[i + 1]:\n        count[i + 1] += 1\n        count[i + 2] -= 1\n        return count\n    else:\n        pos = left\n        while left < right:\n            mid = (left + right) // 2\n            if S[i] >= prefix[mid - 1] - prefix[i]:\n                if mid > pos:\n                    pos = mid\n                left = mid + 1\n            else:\n                right = mid\n        count[pos + 1] -= 1\n        count[i + 1] += 1\n        return count\nT = int(input())\nfor testCase in range(T):\n    N = int(input())\n    S = list(map(int, input().split()))\n    prefix = [S[0]]\n    for i in range(1, N):\n        prefix.append(prefix[i - 1] + S[i])\n    count = [0] * N\n    for i in range(1, N):\n        count = leftup(i, S, prefix, count)\n    for i in range(N - 1):\n        count = rightup(i, S, prefix, count, N)\n    votes = [count[0]]\n    for i in range(1, N):\n        votes.append(votes[i - 1] + count[i])\n    print(*votes, sep=' ')", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    CurrSum = 0\n    Ci = 0\n    AnsArray = [0] * n\n    AnsArray[0] = 1\n    for i in range(n - 1):\n        CurrSum = 0\n        Ci = i + 1\n        while CurrSum <= s[i] and Ci < n:\n            CurrSum += s[Ci]\n            Ci += 1\n        if Ci < n:\n            AnsArray[Ci] -= 1\n    s = s[::-1]\n    for i in range(n - 1):\n        CurrSum = 0\n        Ci = i + 1\n        while CurrSum <= s[i] and Ci < n:\n            CurrSum += s[Ci]\n            Ci += 1\n        AnsArray[n - Ci] += 1\n    for i in range(1, n):\n        AnsArray[i] += AnsArray[i - 1]\n    print(' '.join((str(x - 1) for x in AnsArray)))", "for _ in range(int(input())):\n    N = int(input())\n    s = list(map(int, input().split()))\n    v = [0] * N\n    for i in range(N):\n        inf = 0\n        j = i + 1\n        while j < N and s[i] >= inf:\n            v[j] += 1\n            inf += s[j]\n            j += 1\n    for i in range(N - 1, -1, -1):\n        inf = 0\n        j = i - 1\n        while j >= 0 and s[i] >= inf:\n            v[j] += 1\n            inf += s[j]\n            j -= 1\n    for i in v:\n        print(i, end=' ')", "def forward(array, index, vote_array):\n    sum = 0\n    j = index + 1\n    size = len(array)\n    vote_array[j] += 1\n    while j < size - 1:\n        sum += array[j]\n        if sum <= array[index]:\n            j += 1\n            vote_array[j] += 1\n        else:\n            break\n\ndef reverse(array, index, vote_array):\n    sum = 0\n    j = index - 1\n    vote_array[j] += 1\n    while j > 0:\n        sum += array[j]\n        if sum <= array[index]:\n            j -= 1\n            vote_array[j] += 1\n        else:\n            break\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    si = list(map(int, input().split()))\n    vote_array = []\n    for j in range(N):\n        vote_array.append(0)\n    if N == 1:\n        pass\n    else:\n        for j in range(N):\n            if j == 0:\n                forward(si, j, vote_array)\n            elif j == N - 1:\n                reverse(si, j, vote_array)\n            else:\n                forward(si, j, vote_array)\n                reverse(si, j, vote_array)\n    for i in range(N):\n        print(str(vote_array[i]) + ' ', end='')\nprint()", "def findRight(preSum, L, R, val):\n    while L < R:\n        M = (L + R + 1) // 2\n        if preSum[M] <= val:\n            L = M\n        else:\n            R = M - 1\n    return L\n\ndef handle(nums):\n    n = len(nums)\n    votes = [0] * n\n    preSum = [0] * (n + 1)\n    for (i, k) in enumerate(nums):\n        preSum[i + 1] = preSum[i] + k\n    speed = [0] * (n + 1)\n    for i in range(n - 2, -1, -1):\n        if nums[i] < nums[i + 1]:\n            j = i + 1\n        else:\n            j = findRight(preSum, i + 1, n - 1, nums[i] + preSum[i + 1])\n        speed[i + 1] += 1\n        speed[j + 1] -= 1\n    sd = 0\n    for i in range(n):\n        sd += speed[i]\n        votes[i] += sd\n    return votes\n\ndef solve():\n    N = int(input())\n    nums = list(map(int, input().split()))\n    votes = [0] * N\n    votes1 = handle(nums)\n    votes2 = handle(nums[::-1])[::-1]\n    votes = map(sum, zip(votes1, votes2))\n    print(' '.join(map(str, votes)))\nT = int(input())\nfor _ in range(T):\n    solve()", "import bisect\n\ndef main(a, n):\n    prefix_left = [0 for x in range(n)]\n    prefix_left[0] = a[0]\n    for i in range(1, len(a)):\n        prefix_left[i] = prefix_left[i - 1] + a[i]\n    votes_left = [0 for x in range(n)]\n    for i in range(0, n - 1):\n        L = i + 1\n        R = bisect.bisect_right(prefix_left, a[i] + prefix_left[i])\n        votes_left[L] += 1\n        if R < n - 1:\n            votes_left[R + 1] -= 1\n    for i in range(1, n):\n        votes_left[i] += votes_left[i - 1]\n    prefix_right = [0 for x in range(n)]\n    prefix_right[n - 1] = a[n - 1]\n    for i in range(n - 2, -1, -1):\n        prefix_right[i] = prefix_right[i + 1] + a[i]\n    votes_right = [0 for x in range(n)]\n    prefix_right.reverse()\n    for i in range(0, n - 1):\n        R = bisect.bisect_right(prefix_right, a[n - 1 - i] + prefix_right[i])\n        L = i + 1\n        votes_right[L] += 1\n        if R < n - 1:\n            votes_right[R + 1] -= 1\n    for i in range(1, n):\n        votes_right[i] += votes_right[i - 1]\n    votes_right.reverse()\n    print(' '.join((str(votes_left[x] + votes_right[x]) for x in range(0, n))))\nT = int(input())\nwhile T:\n    n = int(input().strip())\n    a = list(map(int, input().strip().split(' ')))\n    main(a, n)\n    T -= 1", "test = int(input())\nwhile test > 0:\n    test -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    data = []\n    curr = 0\n    for x in l:\n        curr += x\n        data += [curr]\n    count = [0] * n\n    i = 0\n    while i < n:\n        j = i + 1\n        while l[i] >= data[j - 1] - data[i] and j < n:\n            count[j] += 1\n            j += 1\n        j = i - 1\n        while l[i] >= data[i - 1] - data[j] and j >= 0:\n            count[j] += 1\n            j -= 1\n        i += 1\n    print(' '.join(map(str, count)))", "for i in range(int(input())):\n    (n, lst) = (int(input()), list(map(int, input().split())))\n    (p, l2) = (0, [])\n    for i in lst:\n        p += i\n        l2.append(p)\n    t = [0 for i in range(n)]\n    for j in range(n):\n        p = 0\n        for k in range(j - 1, -1, -1):\n            p += lst[k]\n            if p - lst[k] <= lst[j]:\n                t[k] += 1\n            else:\n                break\n        p = 0\n        for l in range(j + 1, n):\n            p += lst[l]\n            if p - lst[l] <= lst[j]:\n                t[l] += 1\n            else:\n                break\n    for m in t:\n        print(m, end=' ')\n    print()", "t = int(input())\nfor j in range(t):\n    s = int(input())\n    a = []\n    b = []\n    s1 = [0]\n    for j in input().split():\n        a.append(int(j))\n        b.append(0)\n        s1.append(s1[-1] + a[-1])\n    del s1[0]\n    for j in range(0, s):\n        for i in range(j + 1, s):\n            if a[j] >= s1[i] - s1[j] - a[i]:\n                b[i] += 1\n            else:\n                break\n    for j in range(s - 1, 0, -1):\n        for j1 in range(j - 1, -1, -1):\n            if a[j] >= s1[j] - s1[j1] - a[j]:\n                b[j1] += 1\n            else:\n                break\n    for i in b:\n        print(i, end=' ')\n    print('')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [0] * n\n    for i in range(n):\n        s1 = 0\n        for j in range(i + 1, n):\n            if s1 <= a[i]:\n                s1 += a[j]\n                b[j] += 1\n            else:\n                break\n        s1 = 0\n        for j in range(i - 1, -1, -1):\n            if s1 <= a[i]:\n                s1 += a[j]\n                b[j] += 1\n            else:\n                break\n    for i in range(n):\n        print(b[i], end=' ')\n    print(' ')"]